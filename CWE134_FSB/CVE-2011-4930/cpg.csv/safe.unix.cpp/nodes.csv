command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2196436	File	data/converged/CVE-2011-4930_htcondor/safe.unix.cpp								
ANR	2196437	DeclStmt									
ANR	2196438	Decl							const id_t	const id_t	err_id
ANR	2196439	DeclStmt									
ANR	2196440	Decl							FILE	FILE *	err_stream
ANR	2196441	Function	fatal_error_exit	82:0:2149:2477							
ANR	2196442	FunctionDef	"fatal_error_exit (int status , const char * fmt)"		2196441	0					
ANR	2196443	CompoundStatement		83:0:2205:2477	2196441	0					
ANR	2196444	IdentifierDeclStatement	va_list ap ;	84:4:2211:2221	2196441	0	True				
ANR	2196445	IdentifierDecl	ap		2196441	0					
ANR	2196446	IdentifierDeclType	va_list		2196441	0					
ANR	2196447	Identifier	ap		2196441	1					
ANR	2196448	ExpressionStatement	"va_start ( ap , fmt )"	85:4:2227:2244	2196441	1	True				
ANR	2196449	CallExpression	"va_start ( ap , fmt )"		2196441	0					
ANR	2196450	Callee	va_start		2196441	0					
ANR	2196451	Identifier	va_start		2196441	0					
ANR	2196452	ArgumentList	ap		2196441	1					
ANR	2196453	Argument	ap		2196441	0					
ANR	2196454	Identifier	ap		2196441	0					
ANR	2196455	Argument	fmt		2196441	1					
ANR	2196456	Identifier	fmt		2196441	0					
ANR	2196457	IfStatement	if ( ! err_stream )		2196441	2					
ANR	2196458	Condition	! err_stream	87:8:2255:2265	2196441	0	True				
ANR	2196459	UnaryOperationExpression	! err_stream		2196441	0					
ANR	2196460	UnaryOperator	!		2196441	0					
ANR	2196461	Identifier	err_stream		2196441	1					
ANR	2196462	CompoundStatement		5:21:62:62	2196441	1					
ANR	2196463	ExpressionStatement	err_stream = stderr	88:8:2278:2297	2196441	0	True				
ANR	2196464	AssignmentExpression	err_stream = stderr		2196441	0		=			
ANR	2196465	Identifier	err_stream		2196441	0					
ANR	2196466	Identifier	stderr		2196441	1					
ANR	2196467	ExpressionStatement	"vfprintf ( err_stream , fmt , ap )"	91:4:2310:2339	2196441	3	True				
ANR	2196468	CallExpression	"vfprintf ( err_stream , fmt , ap )"		2196441	0					
ANR	2196469	Callee	vfprintf		2196441	0					
ANR	2196470	Identifier	vfprintf		2196441	0					
ANR	2196471	ArgumentList	err_stream		2196441	1					
ANR	2196472	Argument	err_stream		2196441	0					
ANR	2196473	Identifier	err_stream		2196441	0					
ANR	2196474	Argument	fmt		2196441	1					
ANR	2196475	Identifier	fmt		2196441	0					
ANR	2196476	Argument	ap		2196441	2					
ANR	2196477	Identifier	ap		2196441	0					
ANR	2196478	ExpressionStatement	"fputc ( '\\n' , err_stream )"	92:4:2345:2368	2196441	4	True				
ANR	2196479	CallExpression	"fputc ( '\\n' , err_stream )"		2196441	0					
ANR	2196480	Callee	fputc		2196441	0					
ANR	2196481	Identifier	fputc		2196441	0					
ANR	2196482	ArgumentList	'\\n'		2196441	1					
ANR	2196483	Argument	'\\n'		2196441	0					
ANR	2196484	PrimaryExpression	'\\n'		2196441	0					
ANR	2196485	Argument	err_stream		2196441	1					
ANR	2196486	Identifier	err_stream		2196441	0					
ANR	2196487	ExpressionStatement	va_end ( ap )	96:4:2420:2430	2196441	5	True				
ANR	2196488	CallExpression	va_end ( ap )		2196441	0					
ANR	2196489	Callee	va_end		2196441	0					
ANR	2196490	Identifier	va_end		2196441	0					
ANR	2196491	ArgumentList	ap		2196441	1					
ANR	2196492	Argument	ap		2196441	0					
ANR	2196493	Identifier	ap		2196441	0					
ANR	2196494	ExpressionStatement	fflush ( err_stream )	98:4:2437:2455	2196441	6	True				
ANR	2196495	CallExpression	fflush ( err_stream )		2196441	0					
ANR	2196496	Callee	fflush		2196441	0					
ANR	2196497	Identifier	fflush		2196441	0					
ANR	2196498	ArgumentList	err_stream		2196441	1					
ANR	2196499	Argument	err_stream		2196441	0					
ANR	2196500	Identifier	err_stream		2196441	0					
ANR	2196501	ExpressionStatement	_exit ( status )	100:4:2462:2475	2196441	7	True				
ANR	2196502	CallExpression	_exit ( status )		2196441	0					
ANR	2196503	Callee	_exit		2196441	0					
ANR	2196504	Identifier	_exit		2196441	0					
ANR	2196505	ArgumentList	status		2196441	1					
ANR	2196506	Argument	status		2196441	0					
ANR	2196507	Identifier	status		2196441	0					
ANR	2196508	ReturnType	void		2196441	1					
ANR	2196509	Identifier	fatal_error_exit		2196441	2					
ANR	2196510	ParameterList	"int status , const char * fmt"		2196441	3					
ANR	2196511	Parameter	int status	82:22:2171:2180	2196441	0	True				
ANR	2196512	ParameterType	int		2196441	0					
ANR	2196513	Identifier	status		2196441	1					
ANR	2196514	Parameter	const char * fmt	82:34:2183:2197	2196441	1	True				
ANR	2196515	ParameterType	const char *		2196441	0					
ANR	2196516	Identifier	fmt		2196441	1					
ANR	2196517	CFGEntryNode	ENTRY		2196441		True				
ANR	2196518	CFGExitNode	EXIT		2196441		True				
ANR	2196519	Symbol	err_stream		2196441						
ANR	2196520	Symbol	fmt		2196441						
ANR	2196521	Symbol	stderr		2196441						
ANR	2196522	Symbol	status		2196441						
ANR	2196523	Symbol	ap		2196441						
ANR	2196524	Function	setup_err_stream	116:0:2841:3693							
ANR	2196525	FunctionDef	setup_err_stream (int fd)		2196524	0					
ANR	2196526	CompoundStatement		117:0:2871:3693	2196524	0					
ANR	2196527	IdentifierDeclStatement	int r ;	118:4:2877:2882	2196524	0	True				
ANR	2196528	IdentifierDecl	r		2196524	0					
ANR	2196529	IdentifierDeclType	int		2196524	0					
ANR	2196530	Identifier	r		2196524	1					
ANR	2196531	IdentifierDeclStatement	int flags ;	119:4:2888:2897	2196524	1	True				
ANR	2196532	IdentifierDecl	flags		2196524	0					
ANR	2196533	IdentifierDeclType	int		2196524	0					
ANR	2196534	Identifier	flags		2196524	1					
ANR	2196535	IdentifierDeclStatement	int new_fd = dup ( fd ) ;	121:4:2904:2924	2196524	2	True				
ANR	2196536	IdentifierDecl	new_fd = dup ( fd )		2196524	0					
ANR	2196537	IdentifierDeclType	int		2196524	0					
ANR	2196538	Identifier	new_fd		2196524	1					
ANR	2196539	AssignmentExpression	new_fd = dup ( fd )		2196524	2		=			
ANR	2196540	Identifier	new_fd		2196524	0					
ANR	2196541	CallExpression	dup ( fd )		2196524	1					
ANR	2196542	Callee	dup		2196524	0					
ANR	2196543	Identifier	dup		2196524	0					
ANR	2196544	ArgumentList	fd		2196524	1					
ANR	2196545	Argument	fd		2196524	0					
ANR	2196546	Identifier	fd		2196524	0					
ANR	2196547	IfStatement	if ( new_fd == - 1 )		2196524	3					
ANR	2196548	Condition	new_fd == - 1	122:8:2934:2945	2196524	0	True				
ANR	2196549	EqualityExpression	new_fd == - 1		2196524	0		==			
ANR	2196550	Identifier	new_fd		2196524	0					
ANR	2196551	UnaryOperationExpression	- 1		2196524	1					
ANR	2196552	UnaryOperator	-		2196524	0					
ANR	2196553	PrimaryExpression	1		2196524	1					
ANR	2196554	CompoundStatement		6:22:76:76	2196524	1					
ANR	2196555	ExpressionStatement	"fatal_error_exit ( 1 , ""dup failed on fd=%d: %s"" , fd , strerror ( errno ) )"	123:8:2958:3050	2196524	0	True				
ANR	2196556	CallExpression	"fatal_error_exit ( 1 , ""dup failed on fd=%d: %s"" , fd , strerror ( errno ) )"		2196524	0					
ANR	2196557	Callee	fatal_error_exit		2196524	0					
ANR	2196558	Identifier	fatal_error_exit		2196524	0					
ANR	2196559	ArgumentList	1		2196524	1					
ANR	2196560	Argument	1		2196524	0					
ANR	2196561	PrimaryExpression	1		2196524	0					
ANR	2196562	Argument	"""dup failed on fd=%d: %s"""		2196524	1					
ANR	2196563	PrimaryExpression	"""dup failed on fd=%d: %s"""		2196524	0					
ANR	2196564	Argument	fd		2196524	2					
ANR	2196565	Identifier	fd		2196524	0					
ANR	2196566	Argument	strerror ( errno )		2196524	3					
ANR	2196567	CallExpression	strerror ( errno )		2196524	0					
ANR	2196568	Callee	strerror		2196524	0					
ANR	2196569	Identifier	strerror		2196524	0					
ANR	2196570	ArgumentList	errno		2196524	1					
ANR	2196571	Argument	errno		2196524	0					
ANR	2196572	Identifier	errno		2196524	0					
ANR	2196573	ExpressionStatement	"flags = fcntl ( new_fd , F_GETFD )"	127:4:3063:3093	2196524	4	True				
ANR	2196574	AssignmentExpression	"flags = fcntl ( new_fd , F_GETFD )"		2196524	0		=			
ANR	2196575	Identifier	flags		2196524	0					
ANR	2196576	CallExpression	"fcntl ( new_fd , F_GETFD )"		2196524	1					
ANR	2196577	Callee	fcntl		2196524	0					
ANR	2196578	Identifier	fcntl		2196524	0					
ANR	2196579	ArgumentList	new_fd		2196524	1					
ANR	2196580	Argument	new_fd		2196524	0					
ANR	2196581	Identifier	new_fd		2196524	0					
ANR	2196582	Argument	F_GETFD		2196524	1					
ANR	2196583	Identifier	F_GETFD		2196524	0					
ANR	2196584	IfStatement	if ( flags == - 1 )		2196524	5					
ANR	2196585	Condition	flags == - 1	128:8:3103:3113	2196524	0	True				
ANR	2196586	EqualityExpression	flags == - 1		2196524	0		==			
ANR	2196587	Identifier	flags		2196524	0					
ANR	2196588	UnaryOperationExpression	- 1		2196524	1					
ANR	2196589	UnaryOperator	-		2196524	0					
ANR	2196590	PrimaryExpression	1		2196524	1					
ANR	2196591	CompoundStatement		12:21:244:244	2196524	1					
ANR	2196592	ExpressionStatement	"fatal_error_exit ( 1 , ""fcntl F_GETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"	129:8:3126:3232	2196524	0	True				
ANR	2196593	CallExpression	"fatal_error_exit ( 1 , ""fcntl F_GETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"		2196524	0					
ANR	2196594	Callee	fatal_error_exit		2196524	0					
ANR	2196595	Identifier	fatal_error_exit		2196524	0					
ANR	2196596	ArgumentList	1		2196524	1					
ANR	2196597	Argument	1		2196524	0					
ANR	2196598	PrimaryExpression	1		2196524	0					
ANR	2196599	Argument	"""fcntl F_GETFD failed on fd=%d: %s"""		2196524	1					
ANR	2196600	PrimaryExpression	"""fcntl F_GETFD failed on fd=%d: %s"""		2196524	0					
ANR	2196601	Argument	new_fd		2196524	2					
ANR	2196602	Identifier	new_fd		2196524	0					
ANR	2196603	Argument	strerror ( errno )		2196524	3					
ANR	2196604	CallExpression	strerror ( errno )		2196524	0					
ANR	2196605	Callee	strerror		2196524	0					
ANR	2196606	Identifier	strerror		2196524	0					
ANR	2196607	ArgumentList	errno		2196524	1					
ANR	2196608	Argument	errno		2196524	0					
ANR	2196609	Identifier	errno		2196524	0					
ANR	2196610	ExpressionStatement	flags |= FD_CLOEXEC	133:4:3245:3264	2196524	6	True				
ANR	2196611	AssignmentExpression	flags |= FD_CLOEXEC		2196524	0		|=			
ANR	2196612	Identifier	flags		2196524	0					
ANR	2196613	Identifier	FD_CLOEXEC		2196524	1					
ANR	2196614	ExpressionStatement	"r = fcntl ( new_fd , F_SETFD , flags )"	134:4:3270:3303	2196524	7	True				
ANR	2196615	AssignmentExpression	"r = fcntl ( new_fd , F_SETFD , flags )"		2196524	0		=			
ANR	2196616	Identifier	r		2196524	0					
ANR	2196617	CallExpression	"fcntl ( new_fd , F_SETFD , flags )"		2196524	1					
ANR	2196618	Callee	fcntl		2196524	0					
ANR	2196619	Identifier	fcntl		2196524	0					
ANR	2196620	ArgumentList	new_fd		2196524	1					
ANR	2196621	Argument	new_fd		2196524	0					
ANR	2196622	Identifier	new_fd		2196524	0					
ANR	2196623	Argument	F_SETFD		2196524	1					
ANR	2196624	Identifier	F_SETFD		2196524	0					
ANR	2196625	Argument	flags		2196524	2					
ANR	2196626	Identifier	flags		2196524	0					
ANR	2196627	IfStatement	if ( r == - 1 )		2196524	8					
ANR	2196628	Condition	r == - 1	135:8:3313:3319	2196524	0	True				
ANR	2196629	EqualityExpression	r == - 1		2196524	0		==			
ANR	2196630	Identifier	r		2196524	0					
ANR	2196631	UnaryOperationExpression	- 1		2196524	1					
ANR	2196632	UnaryOperator	-		2196524	0					
ANR	2196633	PrimaryExpression	1		2196524	1					
ANR	2196634	CompoundStatement		19:17:450:450	2196524	1					
ANR	2196635	ExpressionStatement	"fatal_error_exit ( 1 , ""fcntl F_SETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"	136:8:3332:3438	2196524	0	True				
ANR	2196636	CallExpression	"fatal_error_exit ( 1 , ""fcntl F_SETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"		2196524	0					
ANR	2196637	Callee	fatal_error_exit		2196524	0					
ANR	2196638	Identifier	fatal_error_exit		2196524	0					
ANR	2196639	ArgumentList	1		2196524	1					
ANR	2196640	Argument	1		2196524	0					
ANR	2196641	PrimaryExpression	1		2196524	0					
ANR	2196642	Argument	"""fcntl F_SETFD failed on fd=%d: %s"""		2196524	1					
ANR	2196643	PrimaryExpression	"""fcntl F_SETFD failed on fd=%d: %s"""		2196524	0					
ANR	2196644	Argument	new_fd		2196524	2					
ANR	2196645	Identifier	new_fd		2196524	0					
ANR	2196646	Argument	strerror ( errno )		2196524	3					
ANR	2196647	CallExpression	strerror ( errno )		2196524	0					
ANR	2196648	Callee	strerror		2196524	0					
ANR	2196649	Identifier	strerror		2196524	0					
ANR	2196650	ArgumentList	errno		2196524	1					
ANR	2196651	Argument	errno		2196524	0					
ANR	2196652	Identifier	errno		2196524	0					
ANR	2196653	ExpressionStatement	"err_stream = fdopen ( new_fd , ""w"" )"	140:4:3451:3483	2196524	9	True				
ANR	2196654	AssignmentExpression	"err_stream = fdopen ( new_fd , ""w"" )"		2196524	0		=			
ANR	2196655	Identifier	err_stream		2196524	0					
ANR	2196656	CallExpression	"fdopen ( new_fd , ""w"" )"		2196524	1					
ANR	2196657	Callee	fdopen		2196524	0					
ANR	2196658	Identifier	fdopen		2196524	0					
ANR	2196659	ArgumentList	new_fd		2196524	1					
ANR	2196660	Argument	new_fd		2196524	0					
ANR	2196661	Identifier	new_fd		2196524	0					
ANR	2196662	Argument	"""w"""		2196524	1					
ANR	2196663	PrimaryExpression	"""w"""		2196524	0					
ANR	2196664	IfStatement	if ( err_stream == NULL )		2196524	10					
ANR	2196665	Condition	err_stream == NULL	141:8:3493:3510	2196524	0	True				
ANR	2196666	EqualityExpression	err_stream == NULL		2196524	0		==			
ANR	2196667	Identifier	err_stream		2196524	0					
ANR	2196668	Identifier	NULL		2196524	1					
ANR	2196669	CompoundStatement		25:28:641:641	2196524	1					
ANR	2196670	ExpressionStatement	"fatal_error_exit ( 1 , ""fdopen failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"	142:8:3523:3622	2196524	0	True				
ANR	2196671	CallExpression	"fatal_error_exit ( 1 , ""fdopen failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"		2196524	0					
ANR	2196672	Callee	fatal_error_exit		2196524	0					
ANR	2196673	Identifier	fatal_error_exit		2196524	0					
ANR	2196674	ArgumentList	1		2196524	1					
ANR	2196675	Argument	1		2196524	0					
ANR	2196676	PrimaryExpression	1		2196524	0					
ANR	2196677	Argument	"""fdopen failed on fd=%d: %s"""		2196524	1					
ANR	2196678	PrimaryExpression	"""fdopen failed on fd=%d: %s"""		2196524	0					
ANR	2196679	Argument	new_fd		2196524	2					
ANR	2196680	Identifier	new_fd		2196524	0					
ANR	2196681	Argument	strerror ( errno )		2196524	3					
ANR	2196682	CallExpression	strerror ( errno )		2196524	0					
ANR	2196683	Callee	strerror		2196524	0					
ANR	2196684	Identifier	strerror		2196524	0					
ANR	2196685	ArgumentList	errno		2196524	1					
ANR	2196686	Argument	errno		2196524	0					
ANR	2196687	Identifier	errno		2196524	0					
ANR	2196688	ExpressionStatement	close ( fd )	147:4:3682:3691	2196524	11	True				
ANR	2196689	CallExpression	close ( fd )		2196524	0					
ANR	2196690	Callee	close		2196524	0					
ANR	2196691	Identifier	close		2196524	0					
ANR	2196692	ArgumentList	fd		2196524	1					
ANR	2196693	Argument	fd		2196524	0					
ANR	2196694	Identifier	fd		2196524	0					
ANR	2196695	ReturnType	void		2196524	1					
ANR	2196696	Identifier	setup_err_stream		2196524	2					
ANR	2196697	ParameterList	int fd		2196524	3					
ANR	2196698	Parameter	int fd	116:22:2863:2868	2196524	0	True				
ANR	2196699	ParameterType	int		2196524	0					
ANR	2196700	Identifier	fd		2196524	1					
ANR	2196701	CFGEntryNode	ENTRY		2196524		True				
ANR	2196702	CFGExitNode	EXIT		2196524		True				
ANR	2196703	Symbol	errno		2196524						
ANR	2196704	Symbol	F_GETFD		2196524						
ANR	2196705	Symbol	NULL		2196524						
ANR	2196706	Symbol	err_stream		2196524						
ANR	2196707	Symbol	fcntl		2196524						
ANR	2196708	Symbol	F_SETFD		2196524						
ANR	2196709	Symbol	new_fd		2196524						
ANR	2196710	Symbol	flags		2196524						
ANR	2196711	Symbol	FD_CLOEXEC		2196524						
ANR	2196712	Symbol	fdopen		2196524						
ANR	2196713	Symbol	strerror		2196524						
ANR	2196714	Symbol	r		2196524						
ANR	2196715	Symbol	fd		2196524						
ANR	2196716	Symbol	dup		2196524						
ANR	2196717	Function	get_error_fd	158:0:3900:4016							
ANR	2196718	FunctionDef	get_error_fd ()		2196717	0					
ANR	2196719	CompoundStatement		159:0:3919:4016	2196717	0					
ANR	2196720	IfStatement	if ( err_stream )		2196717	0					
ANR	2196721	Condition	err_stream	160:8:3929:3938	2196717	0	True				
ANR	2196722	Identifier	err_stream		2196717	0					
ANR	2196723	CompoundStatement		2:20:21:21	2196717	1					
ANR	2196724	ReturnStatement	return fileno ( err_stream ) ;	161:8:3951:3976	2196717	0	True				
ANR	2196725	CallExpression	fileno ( err_stream )		2196717	0					
ANR	2196726	Callee	fileno		2196717	0					
ANR	2196727	Identifier	fileno		2196717	0					
ANR	2196728	ArgumentList	err_stream		2196717	1					
ANR	2196729	Argument	err_stream		2196717	0					
ANR	2196730	Identifier	err_stream		2196717	0					
ANR	2196731	ElseStatement	else		2196717	0					
ANR	2196732	CompoundStatement		4:11:69:69	2196717	0					
ANR	2196733	ReturnStatement	return - 1 ;	163:8:3999:4008	2196717	0	True				
ANR	2196734	UnaryOperationExpression	- 1		2196717	0					
ANR	2196735	UnaryOperator	-		2196717	0					
ANR	2196736	PrimaryExpression	1		2196717	1					
ANR	2196737	ReturnType	int		2196717	1					
ANR	2196738	Identifier	get_error_fd		2196717	2					
ANR	2196739	ParameterList			2196717	3					
ANR	2196740	CFGEntryNode	ENTRY		2196717		True				
ANR	2196741	CFGExitNode	EXIT		2196717		True				
ANR	2196742	Symbol	err_stream		2196717						
ANR	2196743	Symbol	fileno		2196717						
ANR	2196744	Function	init_string_list	183:0:4416:4679							
ANR	2196745	FunctionDef	init_string_list (string_list * list)		2196744	0					
ANR	2196746	CompoundStatement		184:0:4457:4679	2196744	0					
ANR	2196747	ExpressionStatement	list -> count = 0	185:4:4463:4478	2196744	0	True				
ANR	2196748	AssignmentExpression	list -> count = 0		2196744	0		=			
ANR	2196749	PtrMemberAccess	list -> count		2196744	0					
ANR	2196750	Identifier	list		2196744	0					
ANR	2196751	Identifier	count		2196744	1					
ANR	2196752	PrimaryExpression	0		2196744	1					
ANR	2196753	ExpressionStatement	list -> capacity = 10	186:4:4484:4503	2196744	1	True				
ANR	2196754	AssignmentExpression	list -> capacity = 10		2196744	0		=			
ANR	2196755	PtrMemberAccess	list -> capacity		2196744	0					
ANR	2196756	Identifier	list		2196744	0					
ANR	2196757	Identifier	capacity		2196744	1					
ANR	2196758	PrimaryExpression	10		2196744	1					
ANR	2196759	ExpressionStatement	list -> list = ( char * * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )	187:4:4509:4578	2196744	2	True				
ANR	2196760	AssignmentExpression	list -> list = ( char * * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		2196744	0		=			
ANR	2196761	PtrMemberAccess	list -> list		2196744	0					
ANR	2196762	Identifier	list		2196744	0					
ANR	2196763	Identifier	list		2196744	1					
ANR	2196764	CastExpression	( char * * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		2196744	1					
ANR	2196765	CastTarget	char * *		2196744	0					
ANR	2196766	CallExpression	malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		2196744	1					
ANR	2196767	Callee	malloc		2196744	0					
ANR	2196768	Identifier	malloc		2196744	0					
ANR	2196769	ArgumentList	list -> capacity * sizeof ( list -> list [ 0 ] )		2196744	1					
ANR	2196770	Argument	list -> capacity * sizeof ( list -> list [ 0 ] )		2196744	0					
ANR	2196771	MultiplicativeExpression	list -> capacity * sizeof ( list -> list [ 0 ] )		2196744	0		*			
ANR	2196772	PtrMemberAccess	list -> capacity		2196744	0					
ANR	2196773	Identifier	list		2196744	0					
ANR	2196774	Identifier	capacity		2196744	1					
ANR	2196775	SizeofExpression	sizeof ( list -> list [ 0 ] )		2196744	1					
ANR	2196776	Sizeof	sizeof		2196744	0					
ANR	2196777	ArrayIndexing	list -> list [ 0 ]		2196744	1					
ANR	2196778	PtrMemberAccess	list -> list		2196744	0					
ANR	2196779	Identifier	list		2196744	0					
ANR	2196780	Identifier	list		2196744	1					
ANR	2196781	PrimaryExpression	0		2196744	1					
ANR	2196782	IfStatement	if ( list -> list == 0 )		2196744	3					
ANR	2196783	Condition	list -> list == 0	188:8:4588:4602	2196744	0	True				
ANR	2196784	EqualityExpression	list -> list == 0		2196744	0		==			
ANR	2196785	PtrMemberAccess	list -> list		2196744	0					
ANR	2196786	Identifier	list		2196744	0					
ANR	2196787	Identifier	list		2196744	1					
ANR	2196788	PrimaryExpression	0		2196744	1					
ANR	2196789	CompoundStatement		5:25:147:147	2196744	1					
ANR	2196790	ExpressionStatement	"fatal_error_exit ( 1 , ""malloc failed in init_string_list"" )"	189:8:4615:4671	2196744	0	True				
ANR	2196791	CallExpression	"fatal_error_exit ( 1 , ""malloc failed in init_string_list"" )"		2196744	0					
ANR	2196792	Callee	fatal_error_exit		2196744	0					
ANR	2196793	Identifier	fatal_error_exit		2196744	0					
ANR	2196794	ArgumentList	1		2196744	1					
ANR	2196795	Argument	1		2196744	0					
ANR	2196796	PrimaryExpression	1		2196744	0					
ANR	2196797	Argument	"""malloc failed in init_string_list"""		2196744	1					
ANR	2196798	PrimaryExpression	"""malloc failed in init_string_list"""		2196744	0					
ANR	2196799	ReturnType	void		2196744	1					
ANR	2196800	Identifier	init_string_list		2196744	2					
ANR	2196801	ParameterList	string_list * list		2196744	3					
ANR	2196802	Parameter	string_list * list	183:22:4438:4454	2196744	0	True				
ANR	2196803	ParameterType	string_list *		2196744	0					
ANR	2196804	Identifier	list		2196744	1					
ANR	2196805	CFGEntryNode	ENTRY		2196744		True				
ANR	2196806	CFGExitNode	EXIT		2196744		True				
ANR	2196807	Symbol	malloc		2196744						
ANR	2196808	Symbol	* list -> list		2196744						
ANR	2196809	Symbol	* * list		2196744						
ANR	2196810	Symbol	list -> list		2196744						
ANR	2196811	Symbol	* list		2196744						
ANR	2196812	Symbol	list -> capacity		2196744						
ANR	2196813	Symbol	list		2196744						
ANR	2196814	Symbol	list -> count		2196744						
ANR	2196815	Function	add_one_capacity_to_string_list	204:0:4997:5584							
ANR	2196816	FunctionDef	add_one_capacity_to_string_list (string_list * list)		2196815	0					
ANR	2196817	CompoundStatement		205:0:5060:5584	2196815	0					
ANR	2196818	IfStatement	if ( list -> count == list -> capacity )		2196815	0					
ANR	2196819	Condition	list -> count == list -> capacity	206:8:5070:5098	2196815	0	True				
ANR	2196820	EqualityExpression	list -> count == list -> capacity		2196815	0		==			
ANR	2196821	PtrMemberAccess	list -> count		2196815	0					
ANR	2196822	Identifier	list		2196815	0					
ANR	2196823	Identifier	count		2196815	1					
ANR	2196824	PtrMemberAccess	list -> capacity		2196815	1					
ANR	2196825	Identifier	list		2196815	0					
ANR	2196826	Identifier	capacity		2196815	1					
ANR	2196827	CompoundStatement		4:8:111:193	2196815	1					
ANR	2196828	IdentifierDeclStatement	size_t new_capacity = 10 + 11 * list -> capacity / 10 ;	207:8:5111:5162	2196815	0	True				
ANR	2196829	IdentifierDecl	new_capacity = 10 + 11 * list -> capacity / 10		2196815	0					
ANR	2196830	IdentifierDeclType	size_t		2196815	0					
ANR	2196831	Identifier	new_capacity		2196815	1					
ANR	2196832	AssignmentExpression	new_capacity = 10 + 11 * list -> capacity / 10		2196815	2		=			
ANR	2196833	Identifier	new_capacity		2196815	0					
ANR	2196834	AdditiveExpression	10 + 11 * list -> capacity / 10		2196815	1		+			
ANR	2196835	PrimaryExpression	10		2196815	0					
ANR	2196836	MultiplicativeExpression	11 * list -> capacity / 10		2196815	1		*			
ANR	2196837	PrimaryExpression	11		2196815	0					
ANR	2196838	MultiplicativeExpression	list -> capacity / 10		2196815	1		/			
ANR	2196839	PtrMemberAccess	list -> capacity		2196815	0					
ANR	2196840	Identifier	list		2196815	0					
ANR	2196841	Identifier	capacity		2196815	1					
ANR	2196842	PrimaryExpression	10		2196815	1					
ANR	2196843	IdentifierDeclStatement	char * * new_list = ( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) ) ;	208:8:5172:5254	2196815	1	True				
ANR	2196844	IdentifierDecl	* * new_list = ( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2196815	0					
ANR	2196845	IdentifierDeclType	char * *		2196815	0					
ANR	2196846	Identifier	new_list		2196815	1					
ANR	2196847	AssignmentExpression	* * new_list = ( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2196815	2		=			
ANR	2196848	Identifier	new_list		2196815	0					
ANR	2196849	CastExpression	( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2196815	1					
ANR	2196850	CastTarget	char * *		2196815	0					
ANR	2196851	CallExpression	malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2196815	1					
ANR	2196852	Callee	malloc		2196815	0					
ANR	2196853	Identifier	malloc		2196815	0					
ANR	2196854	ArgumentList	new_capacity * sizeof ( new_list [ 0 ] )		2196815	1					
ANR	2196855	Argument	new_capacity * sizeof ( new_list [ 0 ] )		2196815	0					
ANR	2196856	MultiplicativeExpression	new_capacity * sizeof ( new_list [ 0 ] )		2196815	0		*			
ANR	2196857	Identifier	new_capacity		2196815	0					
ANR	2196858	SizeofExpression	sizeof ( new_list [ 0 ] )		2196815	1					
ANR	2196859	Sizeof	sizeof		2196815	0					
ANR	2196860	ArrayIndexing	new_list [ 0 ]		2196815	1					
ANR	2196861	Identifier	new_list		2196815	0					
ANR	2196862	PrimaryExpression	0		2196815	1					
ANR	2196863	IfStatement	if ( new_list == 0 )		2196815	2					
ANR	2196864	Condition	new_list == 0	210:12:5268:5280	2196815	0	True				
ANR	2196865	EqualityExpression	new_list == 0		2196815	0		==			
ANR	2196866	Identifier	new_list		2196815	0					
ANR	2196867	PrimaryExpression	0		2196815	1					
ANR	2196868	CompoundStatement		6:27:222:222	2196815	1					
ANR	2196869	ExpressionStatement	"fatal_error_exit ( 1 , ""malloc failed in add_one_capacity_to_string_list"" )"	211:12:5297:5397	2196815	0	True				
ANR	2196870	CallExpression	"fatal_error_exit ( 1 , ""malloc failed in add_one_capacity_to_string_list"" )"		2196815	0					
ANR	2196871	Callee	fatal_error_exit		2196815	0					
ANR	2196872	Identifier	fatal_error_exit		2196815	0					
ANR	2196873	ArgumentList	1		2196815	1					
ANR	2196874	Argument	1		2196815	0					
ANR	2196875	PrimaryExpression	1		2196815	0					
ANR	2196876	Argument	"""malloc failed in add_one_capacity_to_string_list"""		2196815	1					
ANR	2196877	PrimaryExpression	"""malloc failed in add_one_capacity_to_string_list"""		2196815	0					
ANR	2196878	ExpressionStatement	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"	214:8:5417:5480	2196815	3	True				
ANR	2196879	CallExpression	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"		2196815	0					
ANR	2196880	Callee	memcpy		2196815	0					
ANR	2196881	Identifier	memcpy		2196815	0					
ANR	2196882	ArgumentList	new_list		2196815	1					
ANR	2196883	Argument	new_list		2196815	0					
ANR	2196884	Identifier	new_list		2196815	0					
ANR	2196885	Argument	list -> list		2196815	1					
ANR	2196886	PtrMemberAccess	list -> list		2196815	0					
ANR	2196887	Identifier	list		2196815	0					
ANR	2196888	Identifier	list		2196815	1					
ANR	2196889	Argument	list -> count * sizeof ( new_list [ 0 ] )		2196815	2					
ANR	2196890	MultiplicativeExpression	list -> count * sizeof ( new_list [ 0 ] )		2196815	0		*			
ANR	2196891	PtrMemberAccess	list -> count		2196815	0					
ANR	2196892	Identifier	list		2196815	0					
ANR	2196893	Identifier	count		2196815	1					
ANR	2196894	SizeofExpression	sizeof ( new_list [ 0 ] )		2196815	1					
ANR	2196895	Sizeof	sizeof		2196815	0					
ANR	2196896	ArrayIndexing	new_list [ 0 ]		2196815	1					
ANR	2196897	Identifier	new_list		2196815	0					
ANR	2196898	PrimaryExpression	0		2196815	1					
ANR	2196899	ExpressionStatement	free ( list -> list )	215:8:5490:5506	2196815	4	True				
ANR	2196900	CallExpression	free ( list -> list )		2196815	0					
ANR	2196901	Callee	free		2196815	0					
ANR	2196902	Identifier	free		2196815	0					
ANR	2196903	ArgumentList	list -> list		2196815	1					
ANR	2196904	Argument	list -> list		2196815	0					
ANR	2196905	PtrMemberAccess	list -> list		2196815	0					
ANR	2196906	Identifier	list		2196815	0					
ANR	2196907	Identifier	list		2196815	1					
ANR	2196908	ExpressionStatement	list -> list = new_list	216:8:5516:5537	2196815	5	True				
ANR	2196909	AssignmentExpression	list -> list = new_list		2196815	0		=			
ANR	2196910	PtrMemberAccess	list -> list		2196815	0					
ANR	2196911	Identifier	list		2196815	0					
ANR	2196912	Identifier	list		2196815	1					
ANR	2196913	Identifier	new_list		2196815	1					
ANR	2196914	ExpressionStatement	list -> capacity = new_capacity	217:8:5547:5576	2196815	6	True				
ANR	2196915	AssignmentExpression	list -> capacity = new_capacity		2196815	0		=			
ANR	2196916	PtrMemberAccess	list -> capacity		2196815	0					
ANR	2196917	Identifier	list		2196815	0					
ANR	2196918	Identifier	capacity		2196815	1					
ANR	2196919	Identifier	new_capacity		2196815	1					
ANR	2196920	ReturnType	static void		2196815	1					
ANR	2196921	Identifier	add_one_capacity_to_string_list		2196815	2					
ANR	2196922	ParameterList	string_list * list		2196815	3					
ANR	2196923	Parameter	string_list * list	204:44:5041:5057	2196815	0	True				
ANR	2196924	ParameterType	string_list *		2196815	0					
ANR	2196925	Identifier	list		2196815	1					
ANR	2196926	CFGEntryNode	ENTRY		2196815		True				
ANR	2196927	CFGExitNode	EXIT		2196815		True				
ANR	2196928	Symbol	malloc		2196815						
ANR	2196929	Symbol	new_capacity		2196815						
ANR	2196930	Symbol	list -> list		2196815						
ANR	2196931	Symbol	* list		2196815						
ANR	2196932	Symbol	new_list		2196815						
ANR	2196933	Symbol	list -> capacity		2196815						
ANR	2196934	Symbol	list		2196815						
ANR	2196935	Symbol	list -> count		2196815						
ANR	2196936	Symbol	* new_list		2196815						
ANR	2196937	Function	add_string_to_list	232:0:5796:5928							
ANR	2196938	FunctionDef	"add_string_to_list (string_list * list , char * s)"		2196937	0					
ANR	2196939	CompoundStatement		233:0:5848:5928	2196937	0					
ANR	2196940	ExpressionStatement	add_one_capacity_to_string_list ( list )	234:4:5854:5891	2196937	0	True				
ANR	2196941	CallExpression	add_one_capacity_to_string_list ( list )		2196937	0					
ANR	2196942	Callee	add_one_capacity_to_string_list		2196937	0					
ANR	2196943	Identifier	add_one_capacity_to_string_list		2196937	0					
ANR	2196944	ArgumentList	list		2196937	1					
ANR	2196945	Argument	list		2196937	0					
ANR	2196946	Identifier	list		2196937	0					
ANR	2196947	ExpressionStatement	list -> list [ list -> count ++ ] = s	235:4:5897:5926	2196937	1	True				
ANR	2196948	AssignmentExpression	list -> list [ list -> count ++ ] = s		2196937	0		=			
ANR	2196949	ArrayIndexing	list -> list [ list -> count ++ ]		2196937	0					
ANR	2196950	PtrMemberAccess	list -> list		2196937	0					
ANR	2196951	Identifier	list		2196937	0					
ANR	2196952	Identifier	list		2196937	1					
ANR	2196953	PostIncDecOperationExpression	list -> count ++		2196937	1					
ANR	2196954	PtrMemberAccess	list -> count		2196937	0					
ANR	2196955	Identifier	list		2196937	0					
ANR	2196956	Identifier	count		2196937	1					
ANR	2196957	IncDec	++		2196937	1					
ANR	2196958	Identifier	s		2196937	1					
ANR	2196959	ReturnType	void		2196937	1					
ANR	2196960	Identifier	add_string_to_list		2196937	2					
ANR	2196961	ParameterList	"string_list * list , char * s"		2196937	3					
ANR	2196962	Parameter	string_list * list	232:24:5820:5836	2196937	0	True				
ANR	2196963	ParameterType	string_list *		2196937	0					
ANR	2196964	Identifier	list		2196937	1					
ANR	2196965	Parameter	char * s	232:43:5839:5845	2196937	1	True				
ANR	2196966	ParameterType	char *		2196937	0					
ANR	2196967	Identifier	s		2196937	1					
ANR	2196968	CFGEntryNode	ENTRY		2196937		True				
ANR	2196969	CFGExitNode	EXIT		2196937		True				
ANR	2196970	Symbol	* list -> list		2196937						
ANR	2196971	Symbol	s		2196937						
ANR	2196972	Symbol	* * list		2196937						
ANR	2196973	Symbol	list -> list		2196937						
ANR	2196974	Symbol	* list		2196937						
ANR	2196975	Symbol	list		2196937						
ANR	2196976	Symbol	list -> count		2196937						
ANR	2196977	Function	prepend_string_to_list	249:0:6158:6402							
ANR	2196978	FunctionDef	"prepend_string_to_list (string_list * list , char * s)"		2196977	0					
ANR	2196979	CompoundStatement		250:0:6214:6402	2196977	0					
ANR	2196980	IdentifierDeclStatement	int i ;	251:4:6220:6225	2196977	0	True				
ANR	2196981	IdentifierDecl	i		2196977	0					
ANR	2196982	IdentifierDeclType	int		2196977	0					
ANR	2196983	Identifier	i		2196977	1					
ANR	2196984	ExpressionStatement	add_one_capacity_to_string_list ( list )	253:4:6232:6269	2196977	1	True				
ANR	2196985	CallExpression	add_one_capacity_to_string_list ( list )		2196977	0					
ANR	2196986	Callee	add_one_capacity_to_string_list		2196977	0					
ANR	2196987	Identifier	add_one_capacity_to_string_list		2196977	0					
ANR	2196988	ArgumentList	list		2196977	1					
ANR	2196989	Argument	list		2196977	0					
ANR	2196990	Identifier	list		2196977	0					
ANR	2196991	ForStatement	for ( i = list -> count ; i > 0 ; -- i )		2196977	2					
ANR	2196992	ForInit	i = list -> count ;	254:9:6280:6295	2196977	0	True				
ANR	2196993	AssignmentExpression	i = list -> count		2196977	0		=			
ANR	2196994	Identifier	i		2196977	0					
ANR	2196995	PtrMemberAccess	list -> count		2196977	1					
ANR	2196996	Identifier	list		2196977	0					
ANR	2196997	Identifier	count		2196977	1					
ANR	2196998	Condition	i > 0	254:26:6297:6301	2196977	1	True				
ANR	2196999	RelationalExpression	i > 0		2196977	0		>			
ANR	2197000	Identifier	i		2196977	0					
ANR	2197001	PrimaryExpression	0		2196977	1					
ANR	2197002	UnaryExpression	-- i	254:33:6304:6306	2196977	2	True				
ANR	2197003	IncDec	--		2196977	0					
ANR	2197004	Identifier	i		2196977	1					
ANR	2197005	CompoundStatement		5:38:94:94	2196977	3					
ANR	2197006	ExpressionStatement	list -> list [ i ] = list -> list [ i - 1 ]	255:8:6319:6352	2196977	0	True				
ANR	2197007	AssignmentExpression	list -> list [ i ] = list -> list [ i - 1 ]		2196977	0		=			
ANR	2197008	ArrayIndexing	list -> list [ i ]		2196977	0					
ANR	2197009	PtrMemberAccess	list -> list		2196977	0					
ANR	2197010	Identifier	list		2196977	0					
ANR	2197011	Identifier	list		2196977	1					
ANR	2197012	Identifier	i		2196977	1					
ANR	2197013	ArrayIndexing	list -> list [ i - 1 ]		2196977	1					
ANR	2197014	PtrMemberAccess	list -> list		2196977	0					
ANR	2197015	Identifier	list		2196977	0					
ANR	2197016	Identifier	list		2196977	1					
ANR	2197017	AdditiveExpression	i - 1		2196977	1		-			
ANR	2197018	Identifier	i		2196977	0					
ANR	2197019	PrimaryExpression	1		2196977	1					
ANR	2197020	ExpressionStatement	++ list -> count	257:4:6364:6377	2196977	3	True				
ANR	2197021	UnaryExpression	++ list -> count		2196977	0					
ANR	2197022	IncDec	++		2196977	0					
ANR	2197023	PtrMemberAccess	list -> count		2196977	1					
ANR	2197024	Identifier	list		2196977	0					
ANR	2197025	Identifier	count		2196977	1					
ANR	2197026	ExpressionStatement	list -> list [ 0 ] = s	258:4:6383:6400	2196977	4	True				
ANR	2197027	AssignmentExpression	list -> list [ 0 ] = s		2196977	0		=			
ANR	2197028	ArrayIndexing	list -> list [ 0 ]		2196977	0					
ANR	2197029	PtrMemberAccess	list -> list		2196977	0					
ANR	2197030	Identifier	list		2196977	0					
ANR	2197031	Identifier	list		2196977	1					
ANR	2197032	PrimaryExpression	0		2196977	1					
ANR	2197033	Identifier	s		2196977	1					
ANR	2197034	ReturnType	void		2196977	1					
ANR	2197035	Identifier	prepend_string_to_list		2196977	2					
ANR	2197036	ParameterList	"string_list * list , char * s"		2196977	3					
ANR	2197037	Parameter	string_list * list	249:28:6186:6202	2196977	0	True				
ANR	2197038	ParameterType	string_list *		2196977	0					
ANR	2197039	Identifier	list		2196977	1					
ANR	2197040	Parameter	char * s	249:47:6205:6211	2196977	1	True				
ANR	2197041	ParameterType	char *		2196977	0					
ANR	2197042	Identifier	s		2196977	1					
ANR	2197043	CFGEntryNode	ENTRY		2196977		True				
ANR	2197044	CFGExitNode	EXIT		2196977		True				
ANR	2197045	Symbol	* list -> list		2196977						
ANR	2197046	Symbol	s		2196977						
ANR	2197047	Symbol	* i		2196977						
ANR	2197048	Symbol	* * list		2196977						
ANR	2197049	Symbol	list -> list		2196977						
ANR	2197050	Symbol	* list		2196977						
ANR	2197051	Symbol	i		2196977						
ANR	2197052	Symbol	list		2196977						
ANR	2197053	Symbol	list -> count		2196977						
ANR	2197054	Function	destroy_string_list	270:0:6588:6816							
ANR	2197055	FunctionDef	destroy_string_list (string_list * list)		2197054	0					
ANR	2197056	CompoundStatement		271:0:6632:6816	2197054	0					
ANR	2197057	IdentifierDeclStatement	int i ;	272:4:6638:6643	2197054	0	True				
ANR	2197058	IdentifierDecl	i		2197054	0					
ANR	2197059	IdentifierDeclType	int		2197054	0					
ANR	2197060	Identifier	i		2197054	1					
ANR	2197061	ForStatement	for ( i = 0 ; i < list -> count ; ++ i )		2197054	1					
ANR	2197062	ForInit	i = 0 ;	273:9:6654:6659	2197054	0	True				
ANR	2197063	AssignmentExpression	i = 0		2197054	0		=			
ANR	2197064	Identifier	i		2197054	0					
ANR	2197065	PrimaryExpression	0		2197054	1					
ANR	2197066	Condition	i < list -> count	273:16:6661:6675	2197054	1	True				
ANR	2197067	RelationalExpression	i < list -> count		2197054	0		<			
ANR	2197068	Identifier	i		2197054	0					
ANR	2197069	PtrMemberAccess	list -> count		2197054	1					
ANR	2197070	Identifier	list		2197054	0					
ANR	2197071	Identifier	count		2197054	1					
ANR	2197072	UnaryExpression	++ i	273:33:6678:6680	2197054	2	True				
ANR	2197073	IncDec	++		2197054	0					
ANR	2197074	Identifier	i		2197054	1					
ANR	2197075	CompoundStatement		3:38:50:50	2197054	3					
ANR	2197076	ExpressionStatement	free ( ( char * ) list -> list [ i ] )	274:8:6693:6721	2197054	0	True				
ANR	2197077	CallExpression	free ( ( char * ) list -> list [ i ] )		2197054	0					
ANR	2197078	Callee	free		2197054	0					
ANR	2197079	Identifier	free		2197054	0					
ANR	2197080	ArgumentList	( char * ) list -> list [ i ]		2197054	1					
ANR	2197081	Argument	( char * ) list -> list [ i ]		2197054	0					
ANR	2197082	CastExpression	( char * ) list -> list [ i ]		2197054	0					
ANR	2197083	CastTarget	char *		2197054	0					
ANR	2197084	ArrayIndexing	list -> list [ i ]		2197054	1					
ANR	2197085	PtrMemberAccess	list -> list		2197054	0					
ANR	2197086	Identifier	list		2197054	0					
ANR	2197087	Identifier	list		2197054	1					
ANR	2197088	Identifier	i		2197054	1					
ANR	2197089	ExpressionStatement	list -> capacity = 0	276:4:6733:6751	2197054	2	True				
ANR	2197090	AssignmentExpression	list -> capacity = 0		2197054	0		=			
ANR	2197091	PtrMemberAccess	list -> capacity		2197054	0					
ANR	2197092	Identifier	list		2197054	0					
ANR	2197093	Identifier	capacity		2197054	1					
ANR	2197094	PrimaryExpression	0		2197054	1					
ANR	2197095	ExpressionStatement	list -> count = 0	277:4:6757:6772	2197054	3	True				
ANR	2197096	AssignmentExpression	list -> count = 0		2197054	0		=			
ANR	2197097	PtrMemberAccess	list -> count		2197054	0					
ANR	2197098	Identifier	list		2197054	0					
ANR	2197099	Identifier	count		2197054	1					
ANR	2197100	PrimaryExpression	0		2197054	1					
ANR	2197101	ExpressionStatement	free ( list -> list )	278:4:6778:6794	2197054	4	True				
ANR	2197102	CallExpression	free ( list -> list )		2197054	0					
ANR	2197103	Callee	free		2197054	0					
ANR	2197104	Identifier	free		2197054	0					
ANR	2197105	ArgumentList	list -> list		2197054	1					
ANR	2197106	Argument	list -> list		2197054	0					
ANR	2197107	PtrMemberAccess	list -> list		2197054	0					
ANR	2197108	Identifier	list		2197054	0					
ANR	2197109	Identifier	list		2197054	1					
ANR	2197110	ExpressionStatement	list -> list = 0	279:4:6800:6814	2197054	5	True				
ANR	2197111	AssignmentExpression	list -> list = 0		2197054	0		=			
ANR	2197112	PtrMemberAccess	list -> list		2197054	0					
ANR	2197113	Identifier	list		2197054	0					
ANR	2197114	Identifier	list		2197054	1					
ANR	2197115	PrimaryExpression	0		2197054	1					
ANR	2197116	ReturnType	void		2197054	1					
ANR	2197117	Identifier	destroy_string_list		2197054	2					
ANR	2197118	ParameterList	string_list * list		2197054	3					
ANR	2197119	Parameter	string_list * list	270:25:6613:6629	2197054	0	True				
ANR	2197120	ParameterType	string_list *		2197054	0					
ANR	2197121	Identifier	list		2197054	1					
ANR	2197122	CFGEntryNode	ENTRY		2197054		True				
ANR	2197123	CFGExitNode	EXIT		2197054		True				
ANR	2197124	Symbol	* list -> list		2197054						
ANR	2197125	Symbol	* * list		2197054						
ANR	2197126	Symbol	* i		2197054						
ANR	2197127	Symbol	list -> list		2197054						
ANR	2197128	Symbol	* list		2197054						
ANR	2197129	Symbol	i		2197054						
ANR	2197130	Symbol	list -> capacity		2197054						
ANR	2197131	Symbol	list		2197054						
ANR	2197132	Symbol	list -> count		2197054						
ANR	2197133	Function	null_terminated_list_from_string_list	293:0:7216:7381							
ANR	2197134	FunctionDef	null_terminated_list_from_string_list (string_list * list)		2197133	0					
ANR	2197135	CompoundStatement		294:0:7280:7381	2197133	0					
ANR	2197136	ExpressionStatement	add_one_capacity_to_string_list ( list )	295:4:7286:7323	2197133	0	True				
ANR	2197137	CallExpression	add_one_capacity_to_string_list ( list )		2197133	0					
ANR	2197138	Callee	add_one_capacity_to_string_list		2197133	0					
ANR	2197139	Identifier	add_one_capacity_to_string_list		2197133	0					
ANR	2197140	ArgumentList	list		2197133	1					
ANR	2197141	Argument	list		2197133	0					
ANR	2197142	Identifier	list		2197133	0					
ANR	2197143	ExpressionStatement	list -> list [ list -> count ] = 0	296:4:7329:7356	2197133	1	True				
ANR	2197144	AssignmentExpression	list -> list [ list -> count ] = 0		2197133	0		=			
ANR	2197145	ArrayIndexing	list -> list [ list -> count ]		2197133	0					
ANR	2197146	PtrMemberAccess	list -> list		2197133	0					
ANR	2197147	Identifier	list		2197133	0					
ANR	2197148	Identifier	list		2197133	1					
ANR	2197149	PtrMemberAccess	list -> count		2197133	1					
ANR	2197150	Identifier	list		2197133	0					
ANR	2197151	Identifier	count		2197133	1					
ANR	2197152	PrimaryExpression	0		2197133	1					
ANR	2197153	ReturnStatement	return list -> list ;	297:4:7362:7379	2197133	2	True				
ANR	2197154	PtrMemberAccess	list -> list		2197133	0					
ANR	2197155	Identifier	list		2197133	0					
ANR	2197156	Identifier	list		2197133	1					
ANR	2197157	ReturnType	char * *		2197133	1					
ANR	2197158	Identifier	null_terminated_list_from_string_list		2197133	2					
ANR	2197159	ParameterList	string_list * list		2197133	3					
ANR	2197160	Parameter	string_list * list	293:45:7261:7277	2197133	0	True				
ANR	2197161	ParameterType	string_list *		2197133	0					
ANR	2197162	Identifier	list		2197133	1					
ANR	2197163	CFGEntryNode	ENTRY		2197133		True				
ANR	2197164	CFGExitNode	EXIT		2197133		True				
ANR	2197165	Symbol	* list -> list		2197133						
ANR	2197166	Symbol	* * list		2197133						
ANR	2197167	Symbol	list -> list		2197133						
ANR	2197168	Symbol	* list		2197133						
ANR	2197169	Symbol	* list -> count		2197133						
ANR	2197170	Symbol	list		2197133						
ANR	2197171	Symbol	list -> count		2197133						
ANR	2197172	Function	is_string_in_list	312:0:7656:7859							
ANR	2197173	FunctionDef	"is_string_in_list (string_list * list , const char * s)"		2197172	0					
ANR	2197174	CompoundStatement		313:0:7712:7859	2197172	0					
ANR	2197175	IdentifierDeclStatement	int i ;	314:4:7718:7723	2197172	0	True				
ANR	2197176	IdentifierDecl	i		2197172	0					
ANR	2197177	IdentifierDeclType	int		2197172	0					
ANR	2197178	Identifier	i		2197172	1					
ANR	2197179	ForStatement	for ( i = 0 ; i < list -> count ; ++ i )		2197172	1					
ANR	2197180	ForInit	i = 0 ;	315:9:7734:7739	2197172	0	True				
ANR	2197181	AssignmentExpression	i = 0		2197172	0		=			
ANR	2197182	Identifier	i		2197172	0					
ANR	2197183	PrimaryExpression	0		2197172	1					
ANR	2197184	Condition	i < list -> count	315:16:7741:7755	2197172	1	True				
ANR	2197185	RelationalExpression	i < list -> count		2197172	0		<			
ANR	2197186	Identifier	i		2197172	0					
ANR	2197187	PtrMemberAccess	list -> count		2197172	1					
ANR	2197188	Identifier	list		2197172	0					
ANR	2197189	Identifier	count		2197172	1					
ANR	2197190	UnaryExpression	++ i	315:33:7758:7760	2197172	2	True				
ANR	2197191	IncDec	++		2197172	0					
ANR	2197192	Identifier	i		2197172	1					
ANR	2197193	CompoundStatement		3:38:50:50	2197172	3					
ANR	2197194	IfStatement	"if ( ! strcmp ( list -> list [ i ] , s ) )"		2197172	0					
ANR	2197195	Condition	"! strcmp ( list -> list [ i ] , s )"	316:12:7777:7801	2197172	0	True				
ANR	2197196	UnaryOperationExpression	"! strcmp ( list -> list [ i ] , s )"		2197172	0					
ANR	2197197	UnaryOperator	!		2197172	0					
ANR	2197198	CallExpression	"strcmp ( list -> list [ i ] , s )"		2197172	1					
ANR	2197199	Callee	strcmp		2197172	0					
ANR	2197200	Identifier	strcmp		2197172	0					
ANR	2197201	ArgumentList	list -> list [ i ]		2197172	1					
ANR	2197202	Argument	list -> list [ i ]		2197172	0					
ANR	2197203	ArrayIndexing	list -> list [ i ]		2197172	0					
ANR	2197204	PtrMemberAccess	list -> list		2197172	0					
ANR	2197205	Identifier	list		2197172	0					
ANR	2197206	Identifier	list		2197172	1					
ANR	2197207	Identifier	i		2197172	1					
ANR	2197208	Argument	s		2197172	1					
ANR	2197209	Identifier	s		2197172	0					
ANR	2197210	CompoundStatement		4:39:91:91	2197172	1					
ANR	2197211	ReturnStatement	return 1 ;	317:12:7818:7826	2197172	0	True				
ANR	2197212	PrimaryExpression	1		2197172	0					
ANR	2197213	ReturnStatement	return 0 ;	321:4:7849:7857	2197172	2	True				
ANR	2197214	PrimaryExpression	0		2197172	0					
ANR	2197215	ReturnType	int		2197172	1					
ANR	2197216	Identifier	is_string_in_list		2197172	2					
ANR	2197217	ParameterList	"string_list * list , const char * s"		2197172	3					
ANR	2197218	Parameter	string_list * list	312:22:7678:7694	2197172	0	True				
ANR	2197219	ParameterType	string_list *		2197172	0					
ANR	2197220	Identifier	list		2197172	1					
ANR	2197221	Parameter	const char * s	312:41:7697:7709	2197172	1	True				
ANR	2197222	ParameterType	const char *		2197172	0					
ANR	2197223	Identifier	s		2197172	1					
ANR	2197224	CFGEntryNode	ENTRY		2197172		True				
ANR	2197225	CFGExitNode	EXIT		2197172		True				
ANR	2197226	Symbol	strcmp		2197172						
ANR	2197227	Symbol	* list -> list		2197172						
ANR	2197228	Symbol	s		2197172						
ANR	2197229	Symbol	* * list		2197172						
ANR	2197230	Symbol	* i		2197172						
ANR	2197231	Symbol	list -> list		2197172						
ANR	2197232	Symbol	* list		2197172						
ANR	2197233	Symbol	i		2197172						
ANR	2197234	Symbol	list		2197172						
ANR	2197235	Symbol	list -> count		2197172						
ANR	2197236	Function	is_string_list_empty	333:0:8071:8148							
ANR	2197237	FunctionDef	is_string_list_empty (string_list * list)		2197236	0					
ANR	2197238	CompoundStatement		334:0:8115:8148	2197236	0					
ANR	2197239	ReturnStatement	return ( list -> count == 0 ) ;	335:4:8121:8146	2197236	0	True				
ANR	2197240	EqualityExpression	list -> count == 0		2197236	0		==			
ANR	2197241	PtrMemberAccess	list -> count		2197236	0					
ANR	2197242	Identifier	list		2197236	0					
ANR	2197243	Identifier	count		2197236	1					
ANR	2197244	PrimaryExpression	0		2197236	1					
ANR	2197245	ReturnType	int		2197236	1					
ANR	2197246	Identifier	is_string_list_empty		2197236	2					
ANR	2197247	ParameterList	string_list * list		2197236	3					
ANR	2197248	Parameter	string_list * list	333:25:8096:8112	2197236	0	True				
ANR	2197249	ParameterType	string_list *		2197236	0					
ANR	2197250	Identifier	list		2197236	1					
ANR	2197251	CFGEntryNode	ENTRY		2197236		True				
ANR	2197252	CFGExitNode	EXIT		2197236		True				
ANR	2197253	Symbol	* list		2197236						
ANR	2197254	Symbol	list		2197236						
ANR	2197255	Symbol	list -> count		2197236						
ANR	2197256	Function	skip_whitespace_const	348:0:8373:8490							
ANR	2197257	FunctionDef	skip_whitespace_const (const char * s)		2197256	0					
ANR	2197258	CompoundStatement		349:0:8422:8490	2197256	0					
ANR	2197259	WhileStatement	while ( * s && isspace ( * s ) )		2197256	0					
ANR	2197260	Condition	* s && isspace ( * s )	350:11:8435:8451	2197256	0	True				
ANR	2197261	AndExpression	* s && isspace ( * s )		2197256	0		&&			
ANR	2197262	UnaryOperationExpression	* s		2197256	0					
ANR	2197263	UnaryOperator	*		2197256	0					
ANR	2197264	Identifier	s		2197256	1					
ANR	2197265	CallExpression	isspace ( * s )		2197256	1					
ANR	2197266	Callee	isspace		2197256	0					
ANR	2197267	Identifier	isspace		2197256	0					
ANR	2197268	ArgumentList	* s		2197256	1					
ANR	2197269	Argument	* s		2197256	0					
ANR	2197270	UnaryOperationExpression	* s		2197256	0					
ANR	2197271	UnaryOperator	*		2197256	0					
ANR	2197272	Identifier	s		2197256	1					
ANR	2197273	CompoundStatement		2:30:31:31	2197256	1					
ANR	2197274	ExpressionStatement	++ s	351:8:8464:8467	2197256	0	True				
ANR	2197275	UnaryExpression	++ s		2197256	0					
ANR	2197276	IncDec	++		2197256	0					
ANR	2197277	Identifier	s		2197256	1					
ANR	2197278	ReturnStatement	return s ;	354:4:8480:8488	2197256	1	True				
ANR	2197279	Identifier	s		2197256	0					
ANR	2197280	ReturnType	const char *		2197256	1					
ANR	2197281	Identifier	skip_whitespace_const		2197256	2					
ANR	2197282	ParameterList	const char * s		2197256	3					
ANR	2197283	Parameter	const char * s	348:34:8407:8419	2197256	0	True				
ANR	2197284	ParameterType	const char *		2197256	0					
ANR	2197285	Identifier	s		2197256	1					
ANR	2197286	CFGEntryNode	ENTRY		2197256		True				
ANR	2197287	CFGExitNode	EXIT		2197256		True				
ANR	2197288	Symbol	s		2197256						
ANR	2197289	Symbol	isspace		2197256						
ANR	2197290	Symbol	* s		2197256						
ANR	2197291	Function	skip_whitespace	368:0:8809:8908							
ANR	2197292	FunctionDef	skip_whitespace (char * s)		2197291	0					
ANR	2197293	CompoundStatement		369:0:8840:8908	2197291	0					
ANR	2197294	WhileStatement	while ( * s && isspace ( * s ) )		2197291	0					
ANR	2197295	Condition	* s && isspace ( * s )	370:11:8853:8869	2197291	0	True				
ANR	2197296	AndExpression	* s && isspace ( * s )		2197291	0		&&			
ANR	2197297	UnaryOperationExpression	* s		2197291	0					
ANR	2197298	UnaryOperator	*		2197291	0					
ANR	2197299	Identifier	s		2197291	1					
ANR	2197300	CallExpression	isspace ( * s )		2197291	1					
ANR	2197301	Callee	isspace		2197291	0					
ANR	2197302	Identifier	isspace		2197291	0					
ANR	2197303	ArgumentList	* s		2197291	1					
ANR	2197304	Argument	* s		2197291	0					
ANR	2197305	UnaryOperationExpression	* s		2197291	0					
ANR	2197306	UnaryOperator	*		2197291	0					
ANR	2197307	Identifier	s		2197291	1					
ANR	2197308	CompoundStatement		2:30:31:31	2197291	1					
ANR	2197309	ExpressionStatement	++ s	371:8:8882:8885	2197291	0	True				
ANR	2197310	UnaryExpression	++ s		2197291	0					
ANR	2197311	IncDec	++		2197291	0					
ANR	2197312	Identifier	s		2197291	1					
ANR	2197313	ReturnStatement	return s ;	374:4:8898:8906	2197291	1	True				
ANR	2197314	Identifier	s		2197291	0					
ANR	2197315	ReturnType	char *		2197291	1					
ANR	2197316	Identifier	skip_whitespace		2197291	2					
ANR	2197317	ParameterList	char * s		2197291	3					
ANR	2197318	Parameter	char * s	368:22:8831:8837	2197291	0	True				
ANR	2197319	ParameterType	char *		2197291	0					
ANR	2197320	Identifier	s		2197291	1					
ANR	2197321	CFGEntryNode	ENTRY		2197291		True				
ANR	2197322	CFGExitNode	EXIT		2197291		True				
ANR	2197323	Symbol	s		2197291						
ANR	2197324	Symbol	isspace		2197291						
ANR	2197325	Symbol	* s		2197291						
ANR	2197326	Function	trim_whitespace	388:0:9239:9720							
ANR	2197327	FunctionDef	"trim_whitespace (const char * s , const char * endp)"		2197326	0					
ANR	2197328	CompoundStatement		389:0:9294:9720	2197326	0					
ANR	2197329	IdentifierDeclStatement	char * new_value ;	390:4:9300:9315	2197326	0	True				
ANR	2197330	IdentifierDecl	* new_value		2197326	0					
ANR	2197331	IdentifierDeclType	char *		2197326	0					
ANR	2197332	Identifier	new_value		2197326	1					
ANR	2197333	IdentifierDeclStatement	size_t trimmed_len ;	391:4:9321:9339	2197326	1	True				
ANR	2197334	IdentifierDecl	trimmed_len		2197326	0					
ANR	2197335	IdentifierDeclType	size_t		2197326	0					
ANR	2197336	Identifier	trimmed_len		2197326	1					
ANR	2197337	ExpressionStatement	s = skip_whitespace_const ( s )	393:4:9346:9374	2197326	2	True				
ANR	2197338	AssignmentExpression	s = skip_whitespace_const ( s )		2197326	0		=			
ANR	2197339	Identifier	s		2197326	0					
ANR	2197340	CallExpression	skip_whitespace_const ( s )		2197326	1					
ANR	2197341	Callee	skip_whitespace_const		2197326	0					
ANR	2197342	Identifier	skip_whitespace_const		2197326	0					
ANR	2197343	ArgumentList	s		2197326	1					
ANR	2197344	Argument	s		2197326	0					
ANR	2197345	Identifier	s		2197326	0					
ANR	2197346	WhileStatement	while ( isspace ( * ( endp - 1 ) ) && s < endp )		2197326	3					
ANR	2197347	Condition	isspace ( * ( endp - 1 ) ) && s < endp	395:11:9388:9419	2197326	0	True				
ANR	2197348	AndExpression	isspace ( * ( endp - 1 ) ) && s < endp		2197326	0		&&			
ANR	2197349	CallExpression	isspace ( * ( endp - 1 ) )		2197326	0					
ANR	2197350	Callee	isspace		2197326	0					
ANR	2197351	Identifier	isspace		2197326	0					
ANR	2197352	ArgumentList	* ( endp - 1 )		2197326	1					
ANR	2197353	Argument	* ( endp - 1 )		2197326	0					
ANR	2197354	UnaryOperationExpression	* ( endp - 1 )		2197326	0					
ANR	2197355	UnaryOperator	*		2197326	0					
ANR	2197356	AdditiveExpression	endp - 1		2197326	1		-			
ANR	2197357	Identifier	endp		2197326	0					
ANR	2197358	PrimaryExpression	1		2197326	1					
ANR	2197359	RelationalExpression	s < endp		2197326	1		<			
ANR	2197360	Identifier	s		2197326	0					
ANR	2197361	Identifier	endp		2197326	1					
ANR	2197362	CompoundStatement		7:45:127:127	2197326	1					
ANR	2197363	ExpressionStatement	-- endp	396:8:9432:9438	2197326	0	True				
ANR	2197364	UnaryExpression	-- endp		2197326	0					
ANR	2197365	IncDec	--		2197326	0					
ANR	2197366	Identifier	endp		2197326	1					
ANR	2197367	ExpressionStatement	trimmed_len = endp - s	399:4:9451:9473	2197326	4	True				
ANR	2197368	AssignmentExpression	trimmed_len = endp - s		2197326	0		=			
ANR	2197369	Identifier	trimmed_len		2197326	0					
ANR	2197370	AdditiveExpression	endp - s		2197326	1		-			
ANR	2197371	Identifier	endp		2197326	0					
ANR	2197372	Identifier	s		2197326	1					
ANR	2197373	ExpressionStatement	new_value = ( char * ) malloc ( trimmed_len + 1 )	400:4:9479:9523	2197326	5	True				
ANR	2197374	AssignmentExpression	new_value = ( char * ) malloc ( trimmed_len + 1 )		2197326	0		=			
ANR	2197375	Identifier	new_value		2197326	0					
ANR	2197376	CastExpression	( char * ) malloc ( trimmed_len + 1 )		2197326	1					
ANR	2197377	CastTarget	char *		2197326	0					
ANR	2197378	CallExpression	malloc ( trimmed_len + 1 )		2197326	1					
ANR	2197379	Callee	malloc		2197326	0					
ANR	2197380	Identifier	malloc		2197326	0					
ANR	2197381	ArgumentList	trimmed_len + 1		2197326	1					
ANR	2197382	Argument	trimmed_len + 1		2197326	0					
ANR	2197383	AdditiveExpression	trimmed_len + 1		2197326	0		+			
ANR	2197384	Identifier	trimmed_len		2197326	0					
ANR	2197385	PrimaryExpression	1		2197326	1					
ANR	2197386	IfStatement	if ( new_value == 0 )		2197326	6					
ANR	2197387	Condition	new_value == 0	401:8:9533:9546	2197326	0	True				
ANR	2197388	EqualityExpression	new_value == 0		2197326	0		==			
ANR	2197389	Identifier	new_value		2197326	0					
ANR	2197390	PrimaryExpression	0		2197326	1					
ANR	2197391	CompoundStatement		13:24:254:254	2197326	1					
ANR	2197392	ExpressionStatement	"fatal_error_exit ( 1 , ""malloc failed in trim_whitespace"" )"	402:8:9559:9614	2197326	0	True				
ANR	2197393	CallExpression	"fatal_error_exit ( 1 , ""malloc failed in trim_whitespace"" )"		2197326	0					
ANR	2197394	Callee	fatal_error_exit		2197326	0					
ANR	2197395	Identifier	fatal_error_exit		2197326	0					
ANR	2197396	ArgumentList	1		2197326	1					
ANR	2197397	Argument	1		2197326	0					
ANR	2197398	PrimaryExpression	1		2197326	0					
ANR	2197399	Argument	"""malloc failed in trim_whitespace"""		2197326	1					
ANR	2197400	PrimaryExpression	"""malloc failed in trim_whitespace"""		2197326	0					
ANR	2197401	ExpressionStatement	"memcpy ( new_value , s , trimmed_len )"	405:4:9627:9660	2197326	7	True				
ANR	2197402	CallExpression	"memcpy ( new_value , s , trimmed_len )"		2197326	0					
ANR	2197403	Callee	memcpy		2197326	0					
ANR	2197404	Identifier	memcpy		2197326	0					
ANR	2197405	ArgumentList	new_value		2197326	1					
ANR	2197406	Argument	new_value		2197326	0					
ANR	2197407	Identifier	new_value		2197326	0					
ANR	2197408	Argument	s		2197326	1					
ANR	2197409	Identifier	s		2197326	0					
ANR	2197410	Argument	trimmed_len		2197326	2					
ANR	2197411	Identifier	trimmed_len		2197326	0					
ANR	2197412	ExpressionStatement	new_value [ trimmed_len ] = '\\0'	406:4:9666:9695	2197326	8	True				
ANR	2197413	AssignmentExpression	new_value [ trimmed_len ] = '\\0'		2197326	0		=			
ANR	2197414	ArrayIndexing	new_value [ trimmed_len ]		2197326	0					
ANR	2197415	Identifier	new_value		2197326	0					
ANR	2197416	Identifier	trimmed_len		2197326	1					
ANR	2197417	PrimaryExpression	'\\0'		2197326	1					
ANR	2197418	ReturnStatement	return new_value ;	408:4:9702:9718	2197326	9	True				
ANR	2197419	Identifier	new_value		2197326	0					
ANR	2197420	ReturnType	char *		2197326	1					
ANR	2197421	Identifier	trim_whitespace		2197326	2					
ANR	2197422	ParameterList	"const char * s , const char * endp"		2197326	3					
ANR	2197423	Parameter	const char * s	388:22:9261:9273	2197326	0	True				
ANR	2197424	ParameterType	const char *		2197326	0					
ANR	2197425	Identifier	s		2197326	1					
ANR	2197426	Parameter	const char * endp	388:37:9276:9291	2197326	1	True				
ANR	2197427	ParameterType	const char *		2197326	0					
ANR	2197428	Identifier	endp		2197326	1					
ANR	2197429	CFGEntryNode	ENTRY		2197326		True				
ANR	2197430	CFGExitNode	EXIT		2197326		True				
ANR	2197431	Symbol	skip_whitespace_const		2197326						
ANR	2197432	Symbol	malloc		2197326						
ANR	2197433	Symbol	s		2197326						
ANR	2197434	Symbol	* trimmed_len		2197326						
ANR	2197435	Symbol	trimmed_len		2197326						
ANR	2197436	Symbol	* endp		2197326						
ANR	2197437	Symbol	isspace		2197326						
ANR	2197438	Symbol	endp		2197326						
ANR	2197439	Symbol	* ( endp - 1 )		2197326						
ANR	2197440	Symbol	* new_value		2197326						
ANR	2197441	Symbol	new_value		2197326						
ANR	2197442	Function	setenv	425:0:10217:10554							
ANR	2197443	FunctionDef	"setenv (const char * var , const char * val , int overwrite)"		2197442	0					
ANR	2197444	CompoundStatement		426:0:10284:10554	2197442	0					
ANR	2197445	IdentifierDeclStatement	char * tmp ;	427:4:10290:10299	2197442	0	True				
ANR	2197446	IdentifierDecl	* tmp		2197442	0					
ANR	2197447	IdentifierDeclType	char *		2197442	0					
ANR	2197448	Identifier	tmp		2197442	1					
ANR	2197449	ExpressionStatement	( void ) overwrite	429:4:10306:10322	2197442	1	True				
ANR	2197450	CastExpression	( void ) overwrite		2197442	0					
ANR	2197451	CastTarget	void		2197442	0					
ANR	2197452	Identifier	overwrite		2197442	1					
ANR	2197453	ExpressionStatement	tmp = ( char * ) malloc ( strlen ( var ) + strlen ( val ) + 2 )	431:4:10329:10381	2197442	2	True				
ANR	2197454	AssignmentExpression	tmp = ( char * ) malloc ( strlen ( var ) + strlen ( val ) + 2 )		2197442	0		=			
ANR	2197455	Identifier	tmp		2197442	0					
ANR	2197456	CastExpression	( char * ) malloc ( strlen ( var ) + strlen ( val ) + 2 )		2197442	1					
ANR	2197457	CastTarget	char *		2197442	0					
ANR	2197458	CallExpression	malloc ( strlen ( var ) + strlen ( val ) + 2 )		2197442	1					
ANR	2197459	Callee	malloc		2197442	0					
ANR	2197460	Identifier	malloc		2197442	0					
ANR	2197461	ArgumentList	strlen ( var ) + strlen ( val ) + 2		2197442	1					
ANR	2197462	Argument	strlen ( var ) + strlen ( val ) + 2		2197442	0					
ANR	2197463	AdditiveExpression	strlen ( var ) + strlen ( val ) + 2		2197442	0		+			
ANR	2197464	CallExpression	strlen ( var )		2197442	0					
ANR	2197465	Callee	strlen		2197442	0					
ANR	2197466	Identifier	strlen		2197442	0					
ANR	2197467	ArgumentList	var		2197442	1					
ANR	2197468	Argument	var		2197442	0					
ANR	2197469	Identifier	var		2197442	0					
ANR	2197470	AdditiveExpression	strlen ( val ) + 2		2197442	1		+			
ANR	2197471	CallExpression	strlen ( val )		2197442	0					
ANR	2197472	Callee	strlen		2197442	0					
ANR	2197473	Identifier	strlen		2197442	0					
ANR	2197474	ArgumentList	val		2197442	1					
ANR	2197475	Argument	val		2197442	0					
ANR	2197476	Identifier	val		2197442	0					
ANR	2197477	PrimaryExpression	2		2197442	1					
ANR	2197478	IfStatement	if ( tmp == NULL )		2197442	3					
ANR	2197479	Condition	tmp == NULL	432:8:10391:10401	2197442	0	True				
ANR	2197480	EqualityExpression	tmp == NULL		2197442	0		==			
ANR	2197481	Identifier	tmp		2197442	0					
ANR	2197482	Identifier	NULL		2197442	1					
ANR	2197483	CompoundStatement		7:21:119:119	2197442	1					
ANR	2197484	ReturnStatement	return - 1 ;	433:8:10414:10423	2197442	0	True				
ANR	2197485	UnaryOperationExpression	- 1		2197442	0					
ANR	2197486	UnaryOperator	-		2197442	0					
ANR	2197487	PrimaryExpression	1		2197442	1					
ANR	2197488	ExpressionStatement	"sprintf ( tmp , ""%s=%s"" , var , val )"	435:4:10435:10466	2197442	4	True				
ANR	2197489	CallExpression	"sprintf ( tmp , ""%s=%s"" , var , val )"		2197442	0					
ANR	2197490	Callee	sprintf		2197442	0					
ANR	2197491	Identifier	sprintf		2197442	0					
ANR	2197492	ArgumentList	tmp		2197442	1					
ANR	2197493	Argument	tmp		2197442	0					
ANR	2197494	Identifier	tmp		2197442	0					
ANR	2197495	Argument	"""%s=%s"""		2197442	1					
ANR	2197496	PrimaryExpression	"""%s=%s"""		2197442	0					
ANR	2197497	Argument	var		2197442	2					
ANR	2197498	Identifier	var		2197442	0					
ANR	2197499	Argument	val		2197442	3					
ANR	2197500	Identifier	val		2197442	0					
ANR	2197501	IfStatement	if ( putenv ( tmp ) != 0 )		2197442	5					
ANR	2197502	Condition	putenv ( tmp ) != 0	436:8:10476:10491	2197442	0	True				
ANR	2197503	EqualityExpression	putenv ( tmp ) != 0		2197442	0		!=			
ANR	2197504	CallExpression	putenv ( tmp )		2197442	0					
ANR	2197505	Callee	putenv		2197442	0					
ANR	2197506	Identifier	putenv		2197442	0					
ANR	2197507	ArgumentList	tmp		2197442	1					
ANR	2197508	Argument	tmp		2197442	0					
ANR	2197509	Identifier	tmp		2197442	0					
ANR	2197510	PrimaryExpression	0		2197442	1					
ANR	2197511	CompoundStatement		11:26:209:209	2197442	1					
ANR	2197512	ExpressionStatement	free ( tmp )	437:8:10504:10513	2197442	0	True				
ANR	2197513	CallExpression	free ( tmp )		2197442	0					
ANR	2197514	Callee	free		2197442	0					
ANR	2197515	Identifier	free		2197442	0					
ANR	2197516	ArgumentList	tmp		2197442	1					
ANR	2197517	Argument	tmp		2197442	0					
ANR	2197518	Identifier	tmp		2197442	0					
ANR	2197519	ReturnStatement	return - 1 ;	438:8:10523:10532	2197442	1	True				
ANR	2197520	UnaryOperationExpression	- 1		2197442	0					
ANR	2197521	UnaryOperator	-		2197442	0					
ANR	2197522	PrimaryExpression	1		2197442	1					
ANR	2197523	ReturnStatement	return 0 ;	440:4:10544:10552	2197442	6	True				
ANR	2197524	PrimaryExpression	0		2197442	0					
ANR	2197525	ReturnType	static int		2197442	1					
ANR	2197526	Identifier	setenv		2197442	2					
ANR	2197527	ParameterList	"const char * var , const char * val , int overwrite"		2197442	3					
ANR	2197528	Parameter	const char * var	425:18:10235:10249	2197442	0	True				
ANR	2197529	ParameterType	const char *		2197442	0					
ANR	2197530	Identifier	var		2197442	1					
ANR	2197531	Parameter	const char * val	425:35:10252:10266	2197442	1	True				
ANR	2197532	ParameterType	const char *		2197442	0					
ANR	2197533	Identifier	val		2197442	1					
ANR	2197534	Parameter	int overwrite	425:52:10269:10281	2197442	2	True				
ANR	2197535	ParameterType	int		2197442	0					
ANR	2197536	Identifier	overwrite		2197442	1					
ANR	2197537	CFGEntryNode	ENTRY		2197442		True				
ANR	2197538	CFGExitNode	EXIT		2197442		True				
ANR	2197539	Symbol	val		2197442						
ANR	2197540	Symbol	strlen		2197442						
ANR	2197541	Symbol	malloc		2197442						
ANR	2197542	Symbol	NULL		2197442						
ANR	2197543	Symbol	var		2197442						
ANR	2197544	Symbol	tmp		2197442						
ANR	2197545	Symbol	putenv		2197442						
ANR	2197546	Symbol	overwrite		2197442						
ANR	2197547	DeclStmt									
ANR	2197548	Decl							extern char	extern char * *	environ
ANR	2197549	Function	clearenv	460:0:11064:11689							
ANR	2197550	FunctionDef	clearenv ()		2197549	0					
ANR	2197551	CompoundStatement		461:0:11083:11689	2197549	0					
ANR	2197552	IdentifierDeclStatement	int r = 0 ;	462:4:11089:11098	2197549	0	True				
ANR	2197553	IdentifierDecl	r = 0		2197549	0					
ANR	2197554	IdentifierDeclType	int		2197549	0					
ANR	2197555	Identifier	r		2197549	1					
ANR	2197556	AssignmentExpression	r = 0		2197549	2		=			
ANR	2197557	Identifier	r		2197549	0					
ANR	2197558	PrimaryExpression	0		2197549	1					
ANR	2197559	IdentifierDeclStatement	"const char var_name [ ] = ""x"" ;"	463:4:11144:11171	2197549	1	True				
ANR	2197560	IdentifierDecl	"var_name [ ] = ""x"""		2197549	0					
ANR	2197561	IdentifierDeclType	const char [ ]		2197549	0					
ANR	2197562	Identifier	var_name		2197549	1					
ANR	2197563	AssignmentExpression	"var_name [ ] = ""x"""		2197549	2		=			
ANR	2197564	Identifier	var_name		2197549	0					
ANR	2197565	PrimaryExpression	"""x"""		2197549	1					
ANR	2197566	ExpressionStatement	environ = 0	468:4:11382:11393	2197549	2	True				
ANR	2197567	AssignmentExpression	environ = 0		2197549	0		=			
ANR	2197568	Identifier	environ		2197549	0					
ANR	2197569	PrimaryExpression	0		2197549	1					
ANR	2197570	ExpressionStatement	"r = setenv ( var_name , """" , 0 )"	474:4:11586:11613	2197549	3	True				
ANR	2197571	AssignmentExpression	"r = setenv ( var_name , """" , 0 )"		2197549	0		=			
ANR	2197572	Identifier	r		2197549	0					
ANR	2197573	CallExpression	"setenv ( var_name , """" , 0 )"		2197549	1					
ANR	2197574	Callee	setenv		2197549	0					
ANR	2197575	Identifier	setenv		2197549	0					
ANR	2197576	ArgumentList	var_name		2197549	1					
ANR	2197577	Argument	var_name		2197549	0					
ANR	2197578	Identifier	var_name		2197549	0					
ANR	2197579	Argument	""""""		2197549	1					
ANR	2197580	PrimaryExpression	""""""		2197549	0					
ANR	2197581	Argument	0		2197549	2					
ANR	2197582	PrimaryExpression	0		2197549	0					
ANR	2197583	IfStatement	if ( r == 0 )		2197549	4					
ANR	2197584	Condition	r == 0	475:8:11623:11628	2197549	0	True				
ANR	2197585	EqualityExpression	r == 0		2197549	0		==			
ANR	2197586	Identifier	r		2197549	0					
ANR	2197587	PrimaryExpression	0		2197549	1					
ANR	2197588	CompoundStatement		15:16:547:547	2197549	1					
ANR	2197589	ExpressionStatement	unsetenv ( var_name )	476:8:11641:11659	2197549	0	True				
ANR	2197590	CallExpression	unsetenv ( var_name )		2197549	0					
ANR	2197591	Callee	unsetenv		2197549	0					
ANR	2197592	Identifier	unsetenv		2197549	0					
ANR	2197593	ArgumentList	var_name		2197549	1					
ANR	2197594	Argument	var_name		2197549	0					
ANR	2197595	Identifier	var_name		2197549	0					
ANR	2197596	ReturnStatement	return r ;	480:4:11679:11687	2197549	5	True				
ANR	2197597	Identifier	r		2197549	0					
ANR	2197598	ReturnType	int		2197549	1					
ANR	2197599	Identifier	clearenv		2197549	2					
ANR	2197600	ParameterList			2197549	3					
ANR	2197601	CFGEntryNode	ENTRY		2197549		True				
ANR	2197602	CFGExitNode	EXIT		2197549		True				
ANR	2197603	Symbol	r		2197549						
ANR	2197604	Symbol	setenv		2197549						
ANR	2197605	Symbol	var_name		2197549						
ANR	2197606	Symbol	environ		2197549						
ANR	2197607	Function	safe_reset_environment	495:0:11997:12775							
ANR	2197608	FunctionDef	safe_reset_environment ()		2197607	0					
ANR	2197609	CompoundStatement		496:0:12026:12775	2197607	0					
ANR	2197610	IdentifierDeclStatement	int r ;	497:4:12032:12037	2197607	0	True				
ANR	2197611	IdentifierDecl	r		2197607	0					
ANR	2197612	IdentifierDeclType	int		2197607	0					
ANR	2197613	Identifier	r		2197607	1					
ANR	2197614	IdentifierDeclStatement	"const char tz_name [ ] = ""TZ"" ;"	499:4:12084:12111	2197607	1	True				
ANR	2197615	IdentifierDecl	"tz_name [ ] = ""TZ"""		2197607	0					
ANR	2197616	IdentifierDeclType	const char [ ]		2197607	0					
ANR	2197617	Identifier	tz_name		2197607	1					
ANR	2197618	AssignmentExpression	"tz_name [ ] = ""TZ"""		2197607	2		=			
ANR	2197619	Identifier	tz_name		2197607	0					
ANR	2197620	PrimaryExpression	"""TZ"""		2197607	1					
ANR	2197621	IdentifierDeclStatement	"const char path_name [ ] = ""PATH"" ;"	500:4:12117:12148	2197607	2	True				
ANR	2197622	IdentifierDecl	"path_name [ ] = ""PATH"""		2197607	0					
ANR	2197623	IdentifierDeclType	const char [ ]		2197607	0					
ANR	2197624	Identifier	path_name		2197607	1					
ANR	2197625	AssignmentExpression	"path_name [ ] = ""PATH"""		2197607	2		=			
ANR	2197626	Identifier	path_name		2197607	0					
ANR	2197627	PrimaryExpression	"""PATH"""		2197607	1					
ANR	2197628	IdentifierDeclStatement	"const char path_value [ ] = ""/bin:/usr/bin"" ;"	501:4:12154:12195	2197607	3	True				
ANR	2197629	IdentifierDecl	"path_value [ ] = ""/bin:/usr/bin"""		2197607	0					
ANR	2197630	IdentifierDeclType	const char [ ]		2197607	0					
ANR	2197631	Identifier	path_value		2197607	1					
ANR	2197632	AssignmentExpression	"path_value [ ] = ""/bin:/usr/bin"""		2197607	2		=			
ANR	2197633	Identifier	path_value		2197607	0					
ANR	2197634	PrimaryExpression	"""/bin:/usr/bin"""		2197607	1					
ANR	2197635	IdentifierDeclStatement	char * tz = getenv ( tz_name ) ;	504:4:12251:12277	2197607	4	True				
ANR	2197636	IdentifierDecl	* tz = getenv ( tz_name )		2197607	0					
ANR	2197637	IdentifierDeclType	char *		2197607	0					
ANR	2197638	Identifier	tz		2197607	1					
ANR	2197639	AssignmentExpression	* tz = getenv ( tz_name )		2197607	2		=			
ANR	2197640	Identifier	tz		2197607	0					
ANR	2197641	CallExpression	getenv ( tz_name )		2197607	1					
ANR	2197642	Callee	getenv		2197607	0					
ANR	2197643	Identifier	getenv		2197607	0					
ANR	2197644	ArgumentList	tz_name		2197607	1					
ANR	2197645	Argument	tz_name		2197607	0					
ANR	2197646	Identifier	tz_name		2197607	0					
ANR	2197647	IfStatement	if ( tz )		2197607	5					
ANR	2197648	Condition	tz	505:8:12287:12288	2197607	0	True				
ANR	2197649	Identifier	tz		2197607	0					
ANR	2197650	CompoundStatement		10:12:264:264	2197607	1					
ANR	2197651	ExpressionStatement	tz = strdup ( tz )	506:8:12301:12316	2197607	0	True				
ANR	2197652	AssignmentExpression	tz = strdup ( tz )		2197607	0		=			
ANR	2197653	Identifier	tz		2197607	0					
ANR	2197654	CallExpression	strdup ( tz )		2197607	1					
ANR	2197655	Callee	strdup		2197607	0					
ANR	2197656	Identifier	strdup		2197607	0					
ANR	2197657	ArgumentList	tz		2197607	1					
ANR	2197658	Argument	tz		2197607	0					
ANR	2197659	Identifier	tz		2197607	0					
ANR	2197660	IfStatement	if ( tz == NULL )		2197607	1					
ANR	2197661	Condition	tz == NULL	507:12:12330:12339	2197607	0	True				
ANR	2197662	EqualityExpression	tz == NULL		2197607	0		==			
ANR	2197663	Identifier	tz		2197607	0					
ANR	2197664	Identifier	NULL		2197607	1					
ANR	2197665	CompoundStatement		12:24:315:315	2197607	1					
ANR	2197666	ReturnStatement	return - 1 ;	508:12:12356:12365	2197607	0	True				
ANR	2197667	UnaryOperationExpression	- 1		2197607	0					
ANR	2197668	UnaryOperator	-		2197607	0					
ANR	2197669	PrimaryExpression	1		2197607	1					
ANR	2197670	ExpressionStatement	r = clearenv ( )	513:4:12420:12434	2197607	6	True				
ANR	2197671	AssignmentExpression	r = clearenv ( )		2197607	0		=			
ANR	2197672	Identifier	r		2197607	0					
ANR	2197673	CallExpression	clearenv ( )		2197607	1					
ANR	2197674	Callee	clearenv		2197607	0					
ANR	2197675	Identifier	clearenv		2197607	0					
ANR	2197676	ArgumentList			2197607	1					
ANR	2197677	IfStatement	if ( r != 0 )		2197607	7					
ANR	2197678	Condition	r != 0	514:8:12444:12449	2197607	0	True				
ANR	2197679	EqualityExpression	r != 0		2197607	0		!=			
ANR	2197680	Identifier	r		2197607	0					
ANR	2197681	PrimaryExpression	0		2197607	1					
ANR	2197682	CompoundStatement		19:16:425:425	2197607	1					
ANR	2197683	ExpressionStatement	free ( tz )	515:8:12462:12470	2197607	0	True				
ANR	2197684	CallExpression	free ( tz )		2197607	0					
ANR	2197685	Callee	free		2197607	0					
ANR	2197686	Identifier	free		2197607	0					
ANR	2197687	ArgumentList	tz		2197607	1					
ANR	2197688	Argument	tz		2197607	0					
ANR	2197689	Identifier	tz		2197607	0					
ANR	2197690	ReturnStatement	return - 1 ;	516:8:12480:12489	2197607	1	True				
ANR	2197691	UnaryOperationExpression	- 1		2197607	0					
ANR	2197692	UnaryOperator	-		2197607	0					
ANR	2197693	PrimaryExpression	1		2197607	1					
ANR	2197694	ExpressionStatement	"r = setenv ( path_name , path_value , 1 )"	520:4:12528:12564	2197607	8	True				
ANR	2197695	AssignmentExpression	"r = setenv ( path_name , path_value , 1 )"		2197607	0		=			
ANR	2197696	Identifier	r		2197607	0					
ANR	2197697	CallExpression	"setenv ( path_name , path_value , 1 )"		2197607	1					
ANR	2197698	Callee	setenv		2197607	0					
ANR	2197699	Identifier	setenv		2197607	0					
ANR	2197700	ArgumentList	path_name		2197607	1					
ANR	2197701	Argument	path_name		2197607	0					
ANR	2197702	Identifier	path_name		2197607	0					
ANR	2197703	Argument	path_value		2197607	1					
ANR	2197704	Identifier	path_value		2197607	0					
ANR	2197705	Argument	1		2197607	2					
ANR	2197706	PrimaryExpression	1		2197607	0					
ANR	2197707	IfStatement	if ( r == - 1 )		2197607	9					
ANR	2197708	Condition	r == - 1	521:8:12574:12580	2197607	0	True				
ANR	2197709	EqualityExpression	r == - 1		2197607	0		==			
ANR	2197710	Identifier	r		2197607	0					
ANR	2197711	UnaryOperationExpression	- 1		2197607	1					
ANR	2197712	UnaryOperator	-		2197607	0					
ANR	2197713	PrimaryExpression	1		2197607	1					
ANR	2197714	CompoundStatement		26:17:556:556	2197607	1					
ANR	2197715	ExpressionStatement	free ( tz )	522:8:12593:12601	2197607	0	True				
ANR	2197716	CallExpression	free ( tz )		2197607	0					
ANR	2197717	Callee	free		2197607	0					
ANR	2197718	Identifier	free		2197607	0					
ANR	2197719	ArgumentList	tz		2197607	1					
ANR	2197720	Argument	tz		2197607	0					
ANR	2197721	Identifier	tz		2197607	0					
ANR	2197722	ReturnStatement	return - 1 ;	523:8:12611:12620	2197607	1	True				
ANR	2197723	UnaryOperationExpression	- 1		2197607	0					
ANR	2197724	UnaryOperator	-		2197607	0					
ANR	2197725	PrimaryExpression	1		2197607	1					
ANR	2197726	IfStatement	if ( tz )		2197607	10					
ANR	2197727	Condition	tz	526:8:12637:12638	2197607	0	True				
ANR	2197728	Identifier	tz		2197607	0					
ANR	2197729	CompoundStatement		31:12:614:614	2197607	1					
ANR	2197730	ExpressionStatement	"r = setenv ( tz_name , tz , 1 )"	527:8:12651:12677	2197607	0	True				
ANR	2197731	AssignmentExpression	"r = setenv ( tz_name , tz , 1 )"		2197607	0		=			
ANR	2197732	Identifier	r		2197607	0					
ANR	2197733	CallExpression	"setenv ( tz_name , tz , 1 )"		2197607	1					
ANR	2197734	Callee	setenv		2197607	0					
ANR	2197735	Identifier	setenv		2197607	0					
ANR	2197736	ArgumentList	tz_name		2197607	1					
ANR	2197737	Argument	tz_name		2197607	0					
ANR	2197738	Identifier	tz_name		2197607	0					
ANR	2197739	Argument	tz		2197607	1					
ANR	2197740	Identifier	tz		2197607	0					
ANR	2197741	Argument	1		2197607	2					
ANR	2197742	PrimaryExpression	1		2197607	0					
ANR	2197743	IfStatement	if ( r == - 1 )		2197607	1					
ANR	2197744	Condition	r == - 1	528:12:12691:12697	2197607	0	True				
ANR	2197745	EqualityExpression	r == - 1		2197607	0		==			
ANR	2197746	Identifier	r		2197607	0					
ANR	2197747	UnaryOperationExpression	- 1		2197607	1					
ANR	2197748	UnaryOperator	-		2197607	0					
ANR	2197749	PrimaryExpression	1		2197607	1					
ANR	2197750	CompoundStatement		33:21:673:673	2197607	1					
ANR	2197751	ReturnStatement	return - 1 ;	529:12:12714:12723	2197607	0	True				
ANR	2197752	UnaryOperationExpression	- 1		2197607	0					
ANR	2197753	UnaryOperator	-		2197607	0					
ANR	2197754	PrimaryExpression	1		2197607	1					
ANR	2197755	ExpressionStatement	free ( tz )	532:8:12744:12752	2197607	2	True				
ANR	2197756	CallExpression	free ( tz )		2197607	0					
ANR	2197757	Callee	free		2197607	0					
ANR	2197758	Identifier	free		2197607	0					
ANR	2197759	ArgumentList	tz		2197607	1					
ANR	2197760	Argument	tz		2197607	0					
ANR	2197761	Identifier	tz		2197607	0					
ANR	2197762	ReturnStatement	return 0 ;	535:4:12765:12773	2197607	11	True				
ANR	2197763	PrimaryExpression	0		2197607	0					
ANR	2197764	ReturnType	int		2197607	1					
ANR	2197765	Identifier	safe_reset_environment		2197607	2					
ANR	2197766	ParameterList			2197607	3					
ANR	2197767	CFGEntryNode	ENTRY		2197607		True				
ANR	2197768	CFGExitNode	EXIT		2197607		True				
ANR	2197769	Symbol	r		2197607						
ANR	2197770	Symbol	NULL		2197607						
ANR	2197771	Symbol	tz_name		2197607						
ANR	2197772	Symbol	tz		2197607						
ANR	2197773	Symbol	setenv		2197607						
ANR	2197774	Symbol	strdup		2197607						
ANR	2197775	Symbol	clearenv		2197607						
ANR	2197776	Symbol	path_name		2197607						
ANR	2197777	Symbol	path_value		2197607						
ANR	2197778	Symbol	getenv		2197607						
ANR	2197779	Function	get_open_max	552:0:13156:13694							
ANR	2197780	FunctionDef	get_open_max ()		2197779	0					
ANR	2197781	CompoundStatement		553:0:13186:13694	2197779	0					
ANR	2197782	Statement	static	554:4:13192:13197	2197779	0	True				
ANR	2197783	IdentifierDeclStatement	int open_max = 0 ;	554:11:13199:13215	2197779	1	True				
ANR	2197784	IdentifierDecl	open_max = 0		2197779	0					
ANR	2197785	IdentifierDeclType	int		2197779	0					
ANR	2197786	Identifier	open_max		2197779	1					
ANR	2197787	AssignmentExpression	open_max = 0		2197779	2		=			
ANR	2197788	Identifier	open_max		2197779	0					
ANR	2197789	PrimaryExpression	0		2197779	1					
ANR	2197790	ExpressionStatement	open_max = OPEN_MAX	557:4:13238:13257	2197779	2	True				
ANR	2197791	AssignmentExpression	open_max = OPEN_MAX		2197779	0		=			
ANR	2197792	Identifier	open_max		2197779	0					
ANR	2197793	Identifier	OPEN_MAX		2197779	1					
ANR	2197794	IfStatement	if ( ! open_max )		2197779	3					
ANR	2197795	Condition	! open_max	560:8:13275:13283	2197779	0	True				
ANR	2197796	UnaryOperationExpression	! open_max		2197779	0					
ANR	2197797	UnaryOperator	!		2197779	0					
ANR	2197798	Identifier	open_max		2197779	1					
ANR	2197799	CompoundStatement		8:19:99:99	2197779	1					
ANR	2197800	ExpressionStatement	open_max = sysconf ( _SC_OPEN_MAX )	561:8:13296:13328	2197779	0	True				
ANR	2197801	AssignmentExpression	open_max = sysconf ( _SC_OPEN_MAX )		2197779	0		=			
ANR	2197802	Identifier	open_max		2197779	0					
ANR	2197803	CallExpression	sysconf ( _SC_OPEN_MAX )		2197779	1					
ANR	2197804	Callee	sysconf		2197779	0					
ANR	2197805	Identifier	sysconf		2197779	0					
ANR	2197806	ArgumentList	_SC_OPEN_MAX		2197779	1					
ANR	2197807	Argument	_SC_OPEN_MAX		2197779	0					
ANR	2197808	Identifier	_SC_OPEN_MAX		2197779	0					
ANR	2197809	IfStatement	if ( open_max < 0 )		2197779	1					
ANR	2197810	Condition	open_max < 0	562:12:13342:13353	2197779	0	True				
ANR	2197811	RelationalExpression	open_max < 0		2197779	0		<			
ANR	2197812	Identifier	open_max		2197779	0					
ANR	2197813	PrimaryExpression	0		2197779	1					
ANR	2197814	CompoundStatement		12:12:215:254	2197779	1					
ANR	2197815	IdentifierDeclStatement	struct rlimit rlim ;	563:12:13370:13388	2197779	0	True				
ANR	2197816	IdentifierDecl	rlim		2197779	0					
ANR	2197817	IdentifierDeclType	struct rlimit		2197779	0					
ANR	2197818	Identifier	rlim		2197779	1					
ANR	2197819	IdentifierDeclStatement	"int r = getrlimit ( RLIMIT_NOFILE , & rlim ) ;"	564:12:13402:13441	2197779	1	True				
ANR	2197820	IdentifierDecl	"r = getrlimit ( RLIMIT_NOFILE , & rlim )"		2197779	0					
ANR	2197821	IdentifierDeclType	int		2197779	0					
ANR	2197822	Identifier	r		2197779	1					
ANR	2197823	AssignmentExpression	"r = getrlimit ( RLIMIT_NOFILE , & rlim )"		2197779	2		=			
ANR	2197824	Identifier	r		2197779	0					
ANR	2197825	CallExpression	"getrlimit ( RLIMIT_NOFILE , & rlim )"		2197779	1					
ANR	2197826	Callee	getrlimit		2197779	0					
ANR	2197827	Identifier	getrlimit		2197779	0					
ANR	2197828	ArgumentList	RLIMIT_NOFILE		2197779	1					
ANR	2197829	Argument	RLIMIT_NOFILE		2197779	0					
ANR	2197830	Identifier	RLIMIT_NOFILE		2197779	0					
ANR	2197831	Argument	& rlim		2197779	1					
ANR	2197832	UnaryOperationExpression	& rlim		2197779	0					
ANR	2197833	UnaryOperator	&		2197779	0					
ANR	2197834	Identifier	rlim		2197779	1					
ANR	2197835	IfStatement	if ( r == 0 && rlim . rlim_max != RLIM_INFINITY )		2197779	2					
ANR	2197836	Condition	r == 0 && rlim . rlim_max != RLIM_INFINITY	565:16:13459:13498	2197779	0	True				
ANR	2197837	AndExpression	r == 0 && rlim . rlim_max != RLIM_INFINITY		2197779	0		&&			
ANR	2197838	EqualityExpression	r == 0		2197779	0		==			
ANR	2197839	Identifier	r		2197779	0					
ANR	2197840	PrimaryExpression	0		2197779	1					
ANR	2197841	EqualityExpression	rlim . rlim_max != RLIM_INFINITY		2197779	1		!=			
ANR	2197842	MemberAccess	rlim . rlim_max		2197779	0					
ANR	2197843	Identifier	rlim		2197779	0					
ANR	2197844	Identifier	rlim_max		2197779	1					
ANR	2197845	Identifier	RLIM_INFINITY		2197779	1					
ANR	2197846	CompoundStatement		13:58:314:314	2197779	1					
ANR	2197847	ExpressionStatement	open_max = rlim . rlim_max	566:16:13519:13543	2197779	0	True				
ANR	2197848	AssignmentExpression	open_max = rlim . rlim_max		2197779	0		=			
ANR	2197849	Identifier	open_max		2197779	0					
ANR	2197850	MemberAccess	rlim . rlim_max		2197779	1					
ANR	2197851	Identifier	rlim		2197779	0					
ANR	2197852	Identifier	rlim_max		2197779	1					
ANR	2197853	ElseStatement	else		2197779	0					
ANR	2197854	CompoundStatement		15:19:377:377	2197779	0					
ANR	2197855	ExpressionStatement	open_max = - 1	569:16:13627:13640	2197779	0	True				
ANR	2197856	AssignmentExpression	open_max = - 1		2197779	0		=			
ANR	2197857	Identifier	open_max		2197779	0					
ANR	2197858	UnaryOperationExpression	- 1		2197779	1					
ANR	2197859	UnaryOperator	-		2197779	0					
ANR	2197860	PrimaryExpression	1		2197779	1					
ANR	2197861	ReturnStatement	return open_max ;	574:4:13677:13692	2197779	4	True				
ANR	2197862	Identifier	open_max		2197779	0					
ANR	2197863	ReturnType	static int		2197779	1					
ANR	2197864	Identifier	get_open_max		2197779	2					
ANR	2197865	ParameterList			2197779	3					
ANR	2197866	CFGEntryNode	ENTRY		2197779		True				
ANR	2197867	CFGExitNode	EXIT		2197779		True				
ANR	2197868	Symbol	r		2197779						
ANR	2197869	Symbol	getrlimit		2197779						
ANR	2197870	Symbol	& rlim		2197779						
ANR	2197871	Symbol	RLIM_INFINITY		2197779						
ANR	2197872	Symbol	rlim . rlim_max		2197779						
ANR	2197873	Symbol	OPEN_MAX		2197779						
ANR	2197874	Symbol	_SC_OPEN_MAX		2197779						
ANR	2197875	Symbol	sysconf		2197779						
ANR	2197876	Symbol	rlim		2197779						
ANR	2197877	Symbol	RLIMIT_NOFILE		2197779						
ANR	2197878	Symbol	open_max		2197779						
ANR	2197879	Function	safe_close_fds_between	588:0:13977:14274							
ANR	2197880	FunctionDef	"safe_close_fds_between (int min_fd , int max_fd)"		2197879	0					
ANR	2197881	CompoundStatement		589:0:14028:14274	2197879	0					
ANR	2197882	IdentifierDeclStatement	int fd ;	590:4:14034:14040	2197879	0	True				
ANR	2197883	IdentifierDecl	fd		2197879	0					
ANR	2197884	IdentifierDeclType	int		2197879	0					
ANR	2197885	Identifier	fd		2197879	1					
ANR	2197886	ForStatement	for ( fd = min_fd ; fd < max_fd ; ++ fd )		2197879	1					
ANR	2197887	ForInit	fd = min_fd ;	592:9:14052:14063	2197879	0	True				
ANR	2197888	AssignmentExpression	fd = min_fd		2197879	0		=			
ANR	2197889	Identifier	fd		2197879	0					
ANR	2197890	Identifier	min_fd		2197879	1					
ANR	2197891	Condition	fd < max_fd	592:22:14065:14075	2197879	1	True				
ANR	2197892	RelationalExpression	fd < max_fd		2197879	0		<			
ANR	2197893	Identifier	fd		2197879	0					
ANR	2197894	Identifier	max_fd		2197879	1					
ANR	2197895	UnaryExpression	++ fd	592:35:14078:14081	2197879	2	True				
ANR	2197896	IncDec	++		2197879	0					
ANR	2197897	Identifier	fd		2197879	1					
ANR	2197898	CompoundStatement		5:8:65:82	2197879	3					
ANR	2197899	IdentifierDeclStatement	int r = close ( fd ) ;	593:8:14094:14111	2197879	0	True				
ANR	2197900	IdentifierDecl	r = close ( fd )		2197879	0					
ANR	2197901	IdentifierDeclType	int		2197879	0					
ANR	2197902	Identifier	r		2197879	1					
ANR	2197903	AssignmentExpression	r = close ( fd )		2197879	2		=			
ANR	2197904	Identifier	r		2197879	0					
ANR	2197905	CallExpression	close ( fd )		2197879	1					
ANR	2197906	Callee	close		2197879	0					
ANR	2197907	Identifier	close		2197879	0					
ANR	2197908	ArgumentList	fd		2197879	1					
ANR	2197909	Argument	fd		2197879	0					
ANR	2197910	Identifier	fd		2197879	0					
ANR	2197911	IfStatement	if ( r == - 1 && errno != EBADF )		2197879	1					
ANR	2197912	Condition	r == - 1 && errno != EBADF	595:12:14192:14216	2197879	0	True				
ANR	2197913	AndExpression	r == - 1 && errno != EBADF		2197879	0		&&			
ANR	2197914	EqualityExpression	r == - 1		2197879	0		==			
ANR	2197915	Identifier	r		2197879	0					
ANR	2197916	UnaryOperationExpression	- 1		2197879	1					
ANR	2197917	UnaryOperator	-		2197879	0					
ANR	2197918	PrimaryExpression	1		2197879	1					
ANR	2197919	EqualityExpression	errno != EBADF		2197879	1		!=			
ANR	2197920	Identifier	errno		2197879	0					
ANR	2197921	Identifier	EBADF		2197879	1					
ANR	2197922	CompoundStatement		7:39:190:190	2197879	1					
ANR	2197923	ReturnStatement	return r ;	596:12:14233:14241	2197879	0	True				
ANR	2197924	Identifier	r		2197879	0					
ANR	2197925	ReturnStatement	return 0 ;	600:4:14264:14272	2197879	2	True				
ANR	2197926	PrimaryExpression	0		2197879	0					
ANR	2197927	ReturnType	int		2197879	1					
ANR	2197928	Identifier	safe_close_fds_between		2197879	2					
ANR	2197929	ParameterList	"int min_fd , int max_fd"		2197879	3					
ANR	2197930	Parameter	int min_fd	588:27:14004:14013	2197879	0	True				
ANR	2197931	ParameterType	int		2197879	0					
ANR	2197932	Identifier	min_fd		2197879	1					
ANR	2197933	Parameter	int max_fd	588:39:14016:14025	2197879	1	True				
ANR	2197934	ParameterType	int		2197879	0					
ANR	2197935	Identifier	max_fd		2197879	1					
ANR	2197936	CFGEntryNode	ENTRY		2197879		True				
ANR	2197937	CFGExitNode	EXIT		2197879		True				
ANR	2197938	Symbol	min_fd		2197879						
ANR	2197939	Symbol	r		2197879						
ANR	2197940	Symbol	errno		2197879						
ANR	2197941	Symbol	max_fd		2197879						
ANR	2197942	Symbol	close		2197879						
ANR	2197943	Symbol	EBADF		2197879						
ANR	2197944	Symbol	fd		2197879						
ANR	2197945	Function	safe_close_fds_starting_at	612:0:14483:14717							
ANR	2197946	FunctionDef	safe_close_fds_starting_at (int min_fd)		2197945	0					
ANR	2197947	CompoundStatement		613:0:14526:14717	2197945	0					
ANR	2197948	IdentifierDeclStatement	int open_max = get_open_max ( ) ;	614:4:14532:14561	2197945	0	True				
ANR	2197949	IdentifierDecl	open_max = get_open_max ( )		2197945	0					
ANR	2197950	IdentifierDeclType	int		2197945	0					
ANR	2197951	Identifier	open_max		2197945	1					
ANR	2197952	AssignmentExpression	open_max = get_open_max ( )		2197945	2		=			
ANR	2197953	Identifier	open_max		2197945	0					
ANR	2197954	CallExpression	get_open_max ( )		2197945	1					
ANR	2197955	Callee	get_open_max		2197945	0					
ANR	2197956	Identifier	get_open_max		2197945	0					
ANR	2197957	ArgumentList			2197945	1					
ANR	2197958	IfStatement	if ( open_max == - 1 )		2197945	1					
ANR	2197959	Condition	open_max == - 1	615:8:14571:14584	2197945	0	True				
ANR	2197960	EqualityExpression	open_max == - 1		2197945	0		==			
ANR	2197961	Identifier	open_max		2197945	0					
ANR	2197962	UnaryOperationExpression	- 1		2197945	1					
ANR	2197963	UnaryOperator	-		2197945	0					
ANR	2197964	PrimaryExpression	1		2197945	1					
ANR	2197965	CompoundStatement		3:24:60:60	2197945	1					
ANR	2197966	ReturnStatement	return - 1 ;	617:8:14642:14651	2197945	0	True				
ANR	2197967	UnaryOperationExpression	- 1		2197945	0					
ANR	2197968	UnaryOperator	-		2197945	0					
ANR	2197969	PrimaryExpression	1		2197945	1					
ANR	2197970	ReturnStatement	"return safe_close_fds_between ( min_fd , open_max - 1 ) ;"	620:4:14664:14715	2197945	2	True				
ANR	2197971	CallExpression	"safe_close_fds_between ( min_fd , open_max - 1 )"		2197945	0					
ANR	2197972	Callee	safe_close_fds_between		2197945	0					
ANR	2197973	Identifier	safe_close_fds_between		2197945	0					
ANR	2197974	ArgumentList	min_fd		2197945	1					
ANR	2197975	Argument	min_fd		2197945	0					
ANR	2197976	Identifier	min_fd		2197945	0					
ANR	2197977	Argument	open_max - 1		2197945	1					
ANR	2197978	AdditiveExpression	open_max - 1		2197945	0		-			
ANR	2197979	Identifier	open_max		2197945	0					
ANR	2197980	PrimaryExpression	1		2197945	1					
ANR	2197981	ReturnType	int		2197945	1					
ANR	2197982	Identifier	safe_close_fds_starting_at		2197945	2					
ANR	2197983	ParameterList	int min_fd		2197945	3					
ANR	2197984	Parameter	int min_fd	612:31:14514:14523	2197945	0	True				
ANR	2197985	ParameterType	int		2197945	0					
ANR	2197986	Identifier	min_fd		2197945	1					
ANR	2197987	CFGEntryNode	ENTRY		2197945		True				
ANR	2197988	CFGExitNode	EXIT		2197945		True				
ANR	2197989	Symbol	min_fd		2197945						
ANR	2197990	Symbol	get_open_max		2197945						
ANR	2197991	Symbol	safe_close_fds_between		2197945						
ANR	2197992	Symbol	open_max		2197945						
ANR	2197993	Function	safe_close_fds_except	632:0:14917:15416							
ANR	2197994	FunctionDef	safe_close_fds_except (safe_id_range_list * ids)		2197993	0					
ANR	2197995	CompoundStatement		633:0:14968:15416	2197993	0					
ANR	2197996	IdentifierDeclStatement	int fd ;	634:4:14974:14980	2197993	0	True				
ANR	2197997	IdentifierDecl	fd		2197993	0					
ANR	2197998	IdentifierDeclType	int		2197993	0					
ANR	2197999	Identifier	fd		2197993	1					
ANR	2198000	IdentifierDeclStatement	int open_max = get_open_max ( ) ;	635:4:14986:15015	2197993	1	True				
ANR	2198001	IdentifierDecl	open_max = get_open_max ( )		2197993	0					
ANR	2198002	IdentifierDeclType	int		2197993	0					
ANR	2198003	Identifier	open_max		2197993	1					
ANR	2198004	AssignmentExpression	open_max = get_open_max ( )		2197993	2		=			
ANR	2198005	Identifier	open_max		2197993	0					
ANR	2198006	CallExpression	get_open_max ( )		2197993	1					
ANR	2198007	Callee	get_open_max		2197993	0					
ANR	2198008	Identifier	get_open_max		2197993	0					
ANR	2198009	ArgumentList			2197993	1					
ANR	2198010	IfStatement	if ( open_max == - 1 )		2197993	2					
ANR	2198011	Condition	open_max == - 1	636:8:15025:15038	2197993	0	True				
ANR	2198012	EqualityExpression	open_max == - 1		2197993	0		==			
ANR	2198013	Identifier	open_max		2197993	0					
ANR	2198014	UnaryOperationExpression	- 1		2197993	1					
ANR	2198015	UnaryOperator	-		2197993	0					
ANR	2198016	PrimaryExpression	1		2197993	1					
ANR	2198017	CompoundStatement		4:24:72:72	2197993	1					
ANR	2198018	ReturnStatement	return - 1 ;	638:8:15096:15105	2197993	0	True				
ANR	2198019	UnaryOperationExpression	- 1		2197993	0					
ANR	2198020	UnaryOperator	-		2197993	0					
ANR	2198021	PrimaryExpression	1		2197993	1					
ANR	2198022	ForStatement	for ( fd = 0 ; fd < open_max ; ++ fd )		2197993	3					
ANR	2198023	ForInit	fd = 0 ;	641:9:15123:15129	2197993	0	True				
ANR	2198024	AssignmentExpression	fd = 0		2197993	0		=			
ANR	2198025	Identifier	fd		2197993	0					
ANR	2198026	PrimaryExpression	0		2197993	1					
ANR	2198027	Condition	fd < open_max	641:17:15131:15143	2197993	1	True				
ANR	2198028	RelationalExpression	fd < open_max		2197993	0		<			
ANR	2198029	Identifier	fd		2197993	0					
ANR	2198030	Identifier	open_max		2197993	1					
ANR	2198031	UnaryExpression	++ fd	641:32:15146:15149	2197993	2	True				
ANR	2198032	IncDec	++		2197993	0					
ANR	2198033	Identifier	fd		2197993	1					
ANR	2198034	CompoundStatement		9:38:183:183	2197993	3					
ANR	2198035	IfStatement	"if ( ! safe_is_id_in_list ( ids , fd ) )"		2197993	0					
ANR	2198036	Condition	"! safe_is_id_in_list ( ids , fd )"	642:12:15166:15193	2197993	0	True				
ANR	2198037	UnaryOperationExpression	"! safe_is_id_in_list ( ids , fd )"		2197993	0					
ANR	2198038	UnaryOperator	!		2197993	0					
ANR	2198039	CallExpression	"safe_is_id_in_list ( ids , fd )"		2197993	1					
ANR	2198040	Callee	safe_is_id_in_list		2197993	0					
ANR	2198041	Identifier	safe_is_id_in_list		2197993	0					
ANR	2198042	ArgumentList	ids		2197993	1					
ANR	2198043	Argument	ids		2197993	0					
ANR	2198044	Identifier	ids		2197993	0					
ANR	2198045	Argument	fd		2197993	1					
ANR	2198046	Identifier	fd		2197993	0					
ANR	2198047	CompoundStatement		11:12:241:258	2197993	1					
ANR	2198048	IdentifierDeclStatement	int r = close ( fd ) ;	643:12:15210:15227	2197993	0	True				
ANR	2198049	IdentifierDecl	r = close ( fd )		2197993	0					
ANR	2198050	IdentifierDeclType	int		2197993	0					
ANR	2198051	Identifier	r		2197993	1					
ANR	2198052	AssignmentExpression	r = close ( fd )		2197993	2		=			
ANR	2198053	Identifier	r		2197993	0					
ANR	2198054	CallExpression	close ( fd )		2197993	1					
ANR	2198055	Callee	close		2197993	0					
ANR	2198056	Identifier	close		2197993	0					
ANR	2198057	ArgumentList	fd		2197993	1					
ANR	2198058	Argument	fd		2197993	0					
ANR	2198059	Identifier	fd		2197993	0					
ANR	2198060	IfStatement	if ( r == - 1 && errno != EBADF )		2197993	1					
ANR	2198061	Condition	r == - 1 && errno != EBADF	645:16:15316:15340	2197993	0	True				
ANR	2198062	AndExpression	r == - 1 && errno != EBADF		2197993	0		&&			
ANR	2198063	EqualityExpression	r == - 1		2197993	0		==			
ANR	2198064	Identifier	r		2197993	0					
ANR	2198065	UnaryOperationExpression	- 1		2197993	1					
ANR	2198066	UnaryOperator	-		2197993	0					
ANR	2198067	PrimaryExpression	1		2197993	1					
ANR	2198068	EqualityExpression	errno != EBADF		2197993	1		!=			
ANR	2198069	Identifier	errno		2197993	0					
ANR	2198070	Identifier	EBADF		2197993	1					
ANR	2198071	CompoundStatement		13:43:374:374	2197993	1					
ANR	2198072	ReturnStatement	return r ;	646:16:15361:15369	2197993	0	True				
ANR	2198073	Identifier	r		2197993	0					
ANR	2198074	ReturnStatement	return 0 ;	651:4:15406:15414	2197993	4	True				
ANR	2198075	PrimaryExpression	0		2197993	0					
ANR	2198076	ReturnType	int		2197993	1					
ANR	2198077	Identifier	safe_close_fds_except		2197993	2					
ANR	2198078	ParameterList	safe_id_range_list * ids		2197993	3					
ANR	2198079	Parameter	safe_id_range_list * ids	632:26:14943:14965	2197993	0	True				
ANR	2198080	ParameterType	safe_id_range_list *		2197993	0					
ANR	2198081	Identifier	ids		2197993	1					
ANR	2198082	CFGEntryNode	ENTRY		2197993		True				
ANR	2198083	CFGExitNode	EXIT		2197993		True				
ANR	2198084	Symbol	safe_is_id_in_list		2197993						
ANR	2198085	Symbol	r		2197993						
ANR	2198086	Symbol	errno		2197993						
ANR	2198087	Symbol	ids		2197993						
ANR	2198088	Symbol	get_open_max		2197993						
ANR	2198089	Symbol	close		2197993						
ANR	2198090	Symbol	EBADF		2197993						
ANR	2198091	Symbol	fd		2197993						
ANR	2198092	Symbol	open_max		2197993						
ANR	2198093	DeclStmt									
ANR	2198094	Decl							const char	const char [ ]	DEV_NULL_FILENAME
ANR	2198095	Function	safe_open_std_file	671:0:15955:17041							
ANR	2198096	FunctionDef	"safe_open_std_file (int fd , const char * filename)"		2198095	0					
ANR	2198097	CompoundStatement		672:0:16008:17041	2198095	0					
ANR	2198098	IdentifierDeclStatement	int new_fd = - 1 ;	673:4:16014:16029	2198095	0	True				
ANR	2198099	IdentifierDecl	new_fd = - 1		2198095	0					
ANR	2198100	IdentifierDeclType	int		2198095	0					
ANR	2198101	Identifier	new_fd		2198095	1					
ANR	2198102	AssignmentExpression	new_fd = - 1		2198095	2		=			
ANR	2198103	Identifier	new_fd		2198095	0					
ANR	2198104	UnaryOperationExpression	- 1		2198095	1					
ANR	2198105	UnaryOperator	-		2198095	0					
ANR	2198106	PrimaryExpression	1		2198095	1					
ANR	2198107	IdentifierDeclStatement	const int open_mask = S_IRUSR | S_IWUSR ;	674:4:16035:16074	2198095	1	True				
ANR	2198108	IdentifierDecl	open_mask = S_IRUSR | S_IWUSR		2198095	0					
ANR	2198109	IdentifierDeclType	const int		2198095	0					
ANR	2198110	Identifier	open_mask		2198095	1					
ANR	2198111	AssignmentExpression	open_mask = S_IRUSR | S_IWUSR		2198095	2		=			
ANR	2198112	Identifier	open_mask		2198095	0					
ANR	2198113	InclusiveOrExpression	S_IRUSR | S_IWUSR		2198095	1		|			
ANR	2198114	Identifier	S_IRUSR		2198095	0					
ANR	2198115	Identifier	S_IWUSR		2198095	1					
ANR	2198116	IfStatement	if ( ! filename )		2198095	2					
ANR	2198117	Condition	! filename	676:8:16121:16129	2198095	0	True				
ANR	2198118	UnaryOperationExpression	! filename		2198095	0					
ANR	2198119	UnaryOperator	!		2198095	0					
ANR	2198120	Identifier	filename		2198095	1					
ANR	2198121	CompoundStatement		5:19:123:123	2198095	1					
ANR	2198122	ExpressionStatement	filename = DEV_NULL_FILENAME	677:8:16142:16170	2198095	0	True				
ANR	2198123	AssignmentExpression	filename = DEV_NULL_FILENAME		2198095	0		=			
ANR	2198124	Identifier	filename		2198095	0					
ANR	2198125	Identifier	DEV_NULL_FILENAME		2198095	1					
ANR	2198126	IfStatement	if ( fd < 0 || fd > 2 )		2198095	3					
ANR	2198127	Condition	fd < 0 || fd > 2	680:8:16187:16202	2198095	0	True				
ANR	2198128	OrExpression	fd < 0 || fd > 2		2198095	0		||			
ANR	2198129	RelationalExpression	fd < 0		2198095	0		<			
ANR	2198130	Identifier	fd		2198095	0					
ANR	2198131	PrimaryExpression	0		2198095	1					
ANR	2198132	RelationalExpression	fd > 2		2198095	1		>			
ANR	2198133	Identifier	fd		2198095	0					
ANR	2198134	PrimaryExpression	2		2198095	1					
ANR	2198135	CompoundStatement		9:26:196:196	2198095	1					
ANR	2198136	ExpressionStatement	errno = EINVAL	681:8:16215:16229	2198095	0	True				
ANR	2198137	AssignmentExpression	errno = EINVAL		2198095	0		=			
ANR	2198138	Identifier	errno		2198095	0					
ANR	2198139	Identifier	EINVAL		2198095	1					
ANR	2198140	ReturnStatement	return - 1 ;	682:8:16239:16248	2198095	1	True				
ANR	2198141	UnaryOperationExpression	- 1		2198095	0					
ANR	2198142	UnaryOperator	-		2198095	0					
ANR	2198143	PrimaryExpression	1		2198095	1					
ANR	2198144	ExpressionStatement	( void ) close ( fd )	685:4:16261:16277	2198095	4	True				
ANR	2198145	CastExpression	( void ) close ( fd )		2198095	0					
ANR	2198146	CastTarget	void		2198095	0					
ANR	2198147	CallExpression	close ( fd )		2198095	1					
ANR	2198148	Callee	close		2198095	0					
ANR	2198149	Identifier	close		2198095	0					
ANR	2198150	ArgumentList	fd		2198095	1					
ANR	2198151	Argument	fd		2198095	0					
ANR	2198152	Identifier	fd		2198095	0					
ANR	2198153	IfStatement	if ( fd == 0 )		2198095	5					
ANR	2198154	Condition	fd == 0	688:8:16313:16319	2198095	0	True				
ANR	2198155	EqualityExpression	fd == 0		2198095	0		==			
ANR	2198156	Identifier	fd		2198095	0					
ANR	2198157	PrimaryExpression	0		2198095	1					
ANR	2198158	CompoundStatement		17:17:313:313	2198095	1					
ANR	2198159	ExpressionStatement	"new_fd = open ( filename , O_RDONLY )"	689:8:16332:16365	2198095	0	True				
ANR	2198160	AssignmentExpression	"new_fd = open ( filename , O_RDONLY )"		2198095	0		=			
ANR	2198161	Identifier	new_fd		2198095	0					
ANR	2198162	CallExpression	"open ( filename , O_RDONLY )"		2198095	1					
ANR	2198163	Callee	open		2198095	0					
ANR	2198164	Identifier	open		2198095	0					
ANR	2198165	ArgumentList	filename		2198095	1					
ANR	2198166	Argument	filename		2198095	0					
ANR	2198167	Identifier	filename		2198095	0					
ANR	2198168	Argument	O_RDONLY		2198095	1					
ANR	2198169	Identifier	O_RDONLY		2198095	0					
ANR	2198170	ElseStatement	else		2198095	0					
ANR	2198171	IfStatement	if ( fd == 1 || fd == 2 )		2198095	0					
ANR	2198172	Condition	fd == 1 || fd == 2	690:15:16382:16399	2198095	0	True				
ANR	2198173	OrExpression	fd == 1 || fd == 2		2198095	0		||			
ANR	2198174	EqualityExpression	fd == 1		2198095	0		==			
ANR	2198175	Identifier	fd		2198095	0					
ANR	2198176	PrimaryExpression	1		2198095	1					
ANR	2198177	EqualityExpression	fd == 2		2198095	1		==			
ANR	2198178	Identifier	fd		2198095	0					
ANR	2198179	PrimaryExpression	2		2198095	1					
ANR	2198180	CompoundStatement		21:8:470:493	2198095	1					
ANR	2198181	IdentifierDeclStatement	int old_mask = umask ( 0 ) ;	692:8:16479:16502	2198095	0	True				
ANR	2198182	IdentifierDecl	old_mask = umask ( 0 )		2198095	0					
ANR	2198183	IdentifierDeclType	int		2198095	0					
ANR	2198184	Identifier	old_mask		2198095	1					
ANR	2198185	AssignmentExpression	old_mask = umask ( 0 )		2198095	2		=			
ANR	2198186	Identifier	old_mask		2198095	0					
ANR	2198187	CallExpression	umask ( 0 )		2198095	1					
ANR	2198188	Callee	umask		2198095	0					
ANR	2198189	Identifier	umask		2198095	0					
ANR	2198190	ArgumentList	0		2198095	1					
ANR	2198191	Argument	0		2198095	0					
ANR	2198192	PrimaryExpression	0		2198095	0					
ANR	2198193	ExpressionStatement	"new_fd = open ( filename , O_CREAT | O_EXCL | O_WRONLY , open_mask )"	693:8:16512:16575	2198095	1	True				
ANR	2198194	AssignmentExpression	"new_fd = open ( filename , O_CREAT | O_EXCL | O_WRONLY , open_mask )"		2198095	0		=			
ANR	2198195	Identifier	new_fd		2198095	0					
ANR	2198196	CallExpression	"open ( filename , O_CREAT | O_EXCL | O_WRONLY , open_mask )"		2198095	1					
ANR	2198197	Callee	open		2198095	0					
ANR	2198198	Identifier	open		2198095	0					
ANR	2198199	ArgumentList	filename		2198095	1					
ANR	2198200	Argument	filename		2198095	0					
ANR	2198201	Identifier	filename		2198095	0					
ANR	2198202	Argument	O_CREAT | O_EXCL | O_WRONLY		2198095	1					
ANR	2198203	InclusiveOrExpression	O_CREAT | O_EXCL | O_WRONLY		2198095	0		|			
ANR	2198204	Identifier	O_CREAT		2198095	0					
ANR	2198205	InclusiveOrExpression	O_EXCL | O_WRONLY		2198095	1		|			
ANR	2198206	Identifier	O_EXCL		2198095	0					
ANR	2198207	Identifier	O_WRONLY		2198095	1					
ANR	2198208	Argument	open_mask		2198095	2					
ANR	2198209	Identifier	open_mask		2198095	0					
ANR	2198210	ExpressionStatement	( void ) umask ( old_mask )	694:8:16585:16607	2198095	2	True				
ANR	2198211	CastExpression	( void ) umask ( old_mask )		2198095	0					
ANR	2198212	CastTarget	void		2198095	0					
ANR	2198213	CallExpression	umask ( old_mask )		2198095	1					
ANR	2198214	Callee	umask		2198095	0					
ANR	2198215	Identifier	umask		2198095	0					
ANR	2198216	ArgumentList	old_mask		2198095	1					
ANR	2198217	Argument	old_mask		2198095	0					
ANR	2198218	Identifier	old_mask		2198095	0					
ANR	2198219	IfStatement	if ( new_fd == - 1 && errno == EEXIST )		2198095	3					
ANR	2198220	Condition	new_fd == - 1 && errno == EEXIST	695:12:16621:16651	2198095	0	True				
ANR	2198221	AndExpression	new_fd == - 1 && errno == EEXIST		2198095	0		&&			
ANR	2198222	EqualityExpression	new_fd == - 1		2198095	0		==			
ANR	2198223	Identifier	new_fd		2198095	0					
ANR	2198224	UnaryOperationExpression	- 1		2198095	1					
ANR	2198225	UnaryOperator	-		2198095	0					
ANR	2198226	PrimaryExpression	1		2198095	1					
ANR	2198227	EqualityExpression	errno == EEXIST		2198095	1		==			
ANR	2198228	Identifier	errno		2198095	0					
ANR	2198229	Identifier	EEXIST		2198095	1					
ANR	2198230	CompoundStatement		24:45:645:645	2198095	1					
ANR	2198231	ExpressionStatement	"new_fd = open ( filename , O_WRONLY )"	696:12:16668:16701	2198095	0	True				
ANR	2198232	AssignmentExpression	"new_fd = open ( filename , O_WRONLY )"		2198095	0		=			
ANR	2198233	Identifier	new_fd		2198095	0					
ANR	2198234	CallExpression	"open ( filename , O_WRONLY )"		2198095	1					
ANR	2198235	Callee	open		2198095	0					
ANR	2198236	Identifier	open		2198095	0					
ANR	2198237	ArgumentList	filename		2198095	1					
ANR	2198238	Argument	filename		2198095	0					
ANR	2198239	Identifier	filename		2198095	0					
ANR	2198240	Argument	O_WRONLY		2198095	1					
ANR	2198241	Identifier	O_WRONLY		2198095	0					
ANR	2198242	IfStatement	if ( new_fd == - 1 )		2198095	6					
ANR	2198243	Condition	new_fd == - 1	700:8:16728:16739	2198095	0	True				
ANR	2198244	EqualityExpression	new_fd == - 1		2198095	0		==			
ANR	2198245	Identifier	new_fd		2198095	0					
ANR	2198246	UnaryOperationExpression	- 1		2198095	1					
ANR	2198247	UnaryOperator	-		2198095	0					
ANR	2198248	PrimaryExpression	1		2198095	1					
ANR	2198249	CompoundStatement		29:22:733:733	2198095	1					
ANR	2198250	ReturnStatement	return - 1 ;	701:8:16752:16761	2198095	0	True				
ANR	2198251	UnaryOperationExpression	- 1		2198095	0					
ANR	2198252	UnaryOperator	-		2198095	0					
ANR	2198253	PrimaryExpression	1		2198095	1					
ANR	2198254	IfStatement	if ( new_fd != fd )		2198095	7					
ANR	2198255	Condition	new_fd != fd	705:8:16849:16860	2198095	0	True				
ANR	2198256	EqualityExpression	new_fd != fd		2198095	0		!=			
ANR	2198257	Identifier	new_fd		2198095	0					
ANR	2198258	Identifier	fd		2198095	1					
ANR	2198259	CompoundStatement		35:8:864:888	2198095	1					
ANR	2198260	IdentifierDeclStatement	"int r = dup2 ( new_fd , fd ) ;"	706:8:16873:16897	2198095	0	True				
ANR	2198261	IdentifierDecl	"r = dup2 ( new_fd , fd )"		2198095	0					
ANR	2198262	IdentifierDeclType	int		2198095	0					
ANR	2198263	Identifier	r		2198095	1					
ANR	2198264	AssignmentExpression	"r = dup2 ( new_fd , fd )"		2198095	2		=			
ANR	2198265	Identifier	r		2198095	0					
ANR	2198266	CallExpression	"dup2 ( new_fd , fd )"		2198095	1					
ANR	2198267	Callee	dup2		2198095	0					
ANR	2198268	Identifier	dup2		2198095	0					
ANR	2198269	ArgumentList	new_fd		2198095	1					
ANR	2198270	Argument	new_fd		2198095	0					
ANR	2198271	Identifier	new_fd		2198095	0					
ANR	2198272	Argument	fd		2198095	1					
ANR	2198273	Identifier	fd		2198095	0					
ANR	2198274	IfStatement	if ( r == - 1 )		2198095	1					
ANR	2198275	Condition	r == - 1	707:12:16911:16917	2198095	0	True				
ANR	2198276	EqualityExpression	r == - 1		2198095	0		==			
ANR	2198277	Identifier	r		2198095	0					
ANR	2198278	UnaryOperationExpression	- 1		2198095	1					
ANR	2198279	UnaryOperator	-		2198095	0					
ANR	2198280	PrimaryExpression	1		2198095	1					
ANR	2198281	CompoundStatement		36:21:911:911	2198095	1					
ANR	2198282	ExpressionStatement	( void ) close ( new_fd )	708:12:16934:16954	2198095	0	True				
ANR	2198283	CastExpression	( void ) close ( new_fd )		2198095	0					
ANR	2198284	CastTarget	void		2198095	0					
ANR	2198285	CallExpression	close ( new_fd )		2198095	1					
ANR	2198286	Callee	close		2198095	0					
ANR	2198287	Identifier	close		2198095	0					
ANR	2198288	ArgumentList	new_fd		2198095	1					
ANR	2198289	Argument	new_fd		2198095	0					
ANR	2198290	Identifier	new_fd		2198095	0					
ANR	2198291	ReturnStatement	return - 1 ;	709:12:16968:16977	2198095	1	True				
ANR	2198292	UnaryOperationExpression	- 1		2198095	0					
ANR	2198293	UnaryOperator	-		2198095	0					
ANR	2198294	PrimaryExpression	1		2198095	1					
ANR	2198295	ExpressionStatement	( void ) close ( new_fd )	712:8:16998:17018	2198095	2	True				
ANR	2198296	CastExpression	( void ) close ( new_fd )		2198095	0					
ANR	2198297	CastTarget	void		2198095	0					
ANR	2198298	CallExpression	close ( new_fd )		2198095	1					
ANR	2198299	Callee	close		2198095	0					
ANR	2198300	Identifier	close		2198095	0					
ANR	2198301	ArgumentList	new_fd		2198095	1					
ANR	2198302	Argument	new_fd		2198095	0					
ANR	2198303	Identifier	new_fd		2198095	0					
ANR	2198304	ReturnStatement	return 0 ;	715:4:17031:17039	2198095	8	True				
ANR	2198305	PrimaryExpression	0		2198095	0					
ANR	2198306	ReturnType	int		2198095	1					
ANR	2198307	Identifier	safe_open_std_file		2198095	2					
ANR	2198308	ParameterList	"int fd , const char * filename"		2198095	3					
ANR	2198309	Parameter	int fd	671:23:15978:15983	2198095	0	True				
ANR	2198310	ParameterType	int		2198095	0					
ANR	2198311	Identifier	fd		2198095	1					
ANR	2198312	Parameter	const char * filename	671:31:15986:16005	2198095	1	True				
ANR	2198313	ParameterType	const char *		2198095	0					
ANR	2198314	Identifier	filename		2198095	1					
ANR	2198315	CFGEntryNode	ENTRY		2198095		True				
ANR	2198316	CFGExitNode	EXIT		2198095		True				
ANR	2198317	Symbol	EEXIST		2198095						
ANR	2198318	Symbol	errno		2198095						
ANR	2198319	Symbol	umask		2198095						
ANR	2198320	Symbol	new_fd		2198095						
ANR	2198321	Symbol	open_mask		2198095						
ANR	2198322	Symbol	O_EXCL		2198095						
ANR	2198323	Symbol	O_CREAT		2198095						
ANR	2198324	Symbol	EINVAL		2198095						
ANR	2198325	Symbol	old_mask		2198095						
ANR	2198326	Symbol	r		2198095						
ANR	2198327	Symbol	filename		2198095						
ANR	2198328	Symbol	S_IRUSR		2198095						
ANR	2198329	Symbol	O_RDONLY		2198095						
ANR	2198330	Symbol	S_IWUSR		2198095						
ANR	2198331	Symbol	DEV_NULL_FILENAME		2198095						
ANR	2198332	Symbol	O_WRONLY		2198095						
ANR	2198333	Symbol	dup2		2198095						
ANR	2198334	Symbol	fd		2198095						
ANR	2198335	Symbol	open		2198095						
ANR	2198336	Function	safe_open_std_files_to_null	726:0:17204:17402							
ANR	2198337	FunctionDef	safe_open_std_files_to_null ()		2198336	0					
ANR	2198338	CompoundStatement		727:0:17238:17402	2198336	0					
ANR	2198339	IdentifierDeclStatement	int i ;	728:4:17244:17249	2198336	0	True				
ANR	2198340	IdentifierDecl	i		2198336	0					
ANR	2198341	IdentifierDeclType	int		2198336	0					
ANR	2198342	Identifier	i		2198336	1					
ANR	2198343	ForStatement	for ( i = 0 ; i <= 2 ; ++ i )		2198336	1					
ANR	2198344	ForInit	i = 0 ;	730:9:17261:17266	2198336	0	True				
ANR	2198345	AssignmentExpression	i = 0		2198336	0		=			
ANR	2198346	Identifier	i		2198336	0					
ANR	2198347	PrimaryExpression	0		2198336	1					
ANR	2198348	Condition	i <= 2	730:16:17268:17273	2198336	1	True				
ANR	2198349	RelationalExpression	i <= 2		2198336	0		<=			
ANR	2198350	Identifier	i		2198336	0					
ANR	2198351	PrimaryExpression	2		2198336	1					
ANR	2198352	UnaryExpression	++ i	730:24:17276:17278	2198336	2	True				
ANR	2198353	IncDec	++		2198336	0					
ANR	2198354	Identifier	i		2198336	1					
ANR	2198355	CompoundStatement		5:8:52:84	2198336	3					
ANR	2198356	IdentifierDeclStatement	"int r = safe_open_std_file ( i , 0 ) ;"	731:8:17291:17323	2198336	0	True				
ANR	2198357	IdentifierDecl	"r = safe_open_std_file ( i , 0 )"		2198336	0					
ANR	2198358	IdentifierDeclType	int		2198336	0					
ANR	2198359	Identifier	r		2198336	1					
ANR	2198360	AssignmentExpression	"r = safe_open_std_file ( i , 0 )"		2198336	2		=			
ANR	2198361	Identifier	r		2198336	0					
ANR	2198362	CallExpression	"safe_open_std_file ( i , 0 )"		2198336	1					
ANR	2198363	Callee	safe_open_std_file		2198336	0					
ANR	2198364	Identifier	safe_open_std_file		2198336	0					
ANR	2198365	ArgumentList	i		2198336	1					
ANR	2198366	Argument	i		2198336	0					
ANR	2198367	Identifier	i		2198336	0					
ANR	2198368	Argument	0		2198336	1					
ANR	2198369	PrimaryExpression	0		2198336	0					
ANR	2198370	IfStatement	if ( r == - 1 )		2198336	1					
ANR	2198371	Condition	r == - 1	732:12:17337:17343	2198336	0	True				
ANR	2198372	EqualityExpression	r == - 1		2198336	0		==			
ANR	2198373	Identifier	r		2198336	0					
ANR	2198374	UnaryOperationExpression	- 1		2198336	1					
ANR	2198375	UnaryOperator	-		2198336	0					
ANR	2198376	PrimaryExpression	1		2198336	1					
ANR	2198377	CompoundStatement		6:21:107:107	2198336	1					
ANR	2198378	ReturnStatement	return - 1 ;	733:12:17360:17369	2198336	0	True				
ANR	2198379	UnaryOperationExpression	- 1		2198336	0					
ANR	2198380	UnaryOperator	-		2198336	0					
ANR	2198381	PrimaryExpression	1		2198336	1					
ANR	2198382	ReturnStatement	return 0 ;	737:4:17392:17400	2198336	2	True				
ANR	2198383	PrimaryExpression	0		2198336	0					
ANR	2198384	ReturnType	int		2198336	1					
ANR	2198385	Identifier	safe_open_std_files_to_null		2198336	2					
ANR	2198386	ParameterList			2198336	3					
ANR	2198387	CFGEntryNode	ENTRY		2198336		True				
ANR	2198388	CFGExitNode	EXIT		2198336		True				
ANR	2198389	Symbol	r		2198336						
ANR	2198390	Symbol	i		2198336						
ANR	2198391	Symbol	safe_open_std_file		2198336						
ANR	2198392	Function	safe_checks_and_set_gids	781:0:18770:20814							
ANR	2198393	FunctionDef	"safe_checks_and_set_gids (uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , gid_t * primary_gid)"		2198392	0					
ANR	2198394	CompoundStatement		787:0:19020:20814	2198392	0					
ANR	2198395	IdentifierDeclStatement	struct passwd * pw ;	788:4:19026:19043	2198392	0	True				
ANR	2198396	IdentifierDecl	* pw		2198392	0					
ANR	2198397	IdentifierDeclType	struct passwd *		2198392	0					
ANR	2198398	Identifier	pw		2198392	1					
ANR	2198399	IdentifierDeclStatement	gid_t gid ;	789:4:19049:19058	2198392	1	True				
ANR	2198400	IdentifierDecl	gid		2198392	0					
ANR	2198401	IdentifierDeclType	gid_t		2198392	0					
ANR	2198402	Identifier	gid		2198392	1					
ANR	2198403	IdentifierDeclStatement	int num_groups ;	790:4:19064:19078	2198392	2	True				
ANR	2198404	IdentifierDecl	num_groups		2198392	0					
ANR	2198405	IdentifierDeclType	int		2198392	0					
ANR	2198406	Identifier	num_groups		2198392	1					
ANR	2198407	IdentifierDeclStatement	int total_groups ;	791:4:19084:19100	2198392	3	True				
ANR	2198408	IdentifierDecl	total_groups		2198392	0					
ANR	2198409	IdentifierDeclType	int		2198392	0					
ANR	2198410	Identifier	total_groups		2198392	1					
ANR	2198411	IdentifierDeclStatement	gid_t * gids ;	792:4:19106:19117	2198392	4	True				
ANR	2198412	IdentifierDecl	* gids		2198392	0					
ANR	2198413	IdentifierDeclType	gid_t *		2198392	0					
ANR	2198414	Identifier	gids		2198392	1					
ANR	2198415	IdentifierDeclStatement	int r ;	793:4:19123:19128	2198392	5	True				
ANR	2198416	IdentifierDecl	r		2198392	0					
ANR	2198417	IdentifierDeclType	int		2198392	0					
ANR	2198418	Identifier	r		2198392	1					
ANR	2198419	IdentifierDeclStatement	int i ;	794:4:19134:19139	2198392	6	True				
ANR	2198420	IdentifierDecl	i		2198392	0					
ANR	2198421	IdentifierDeclType	int		2198392	0					
ANR	2198422	Identifier	i		2198392	1					
ANR	2198423	IfStatement	"if ( ! safe_is_id_in_list ( safe_uids , uid ) )"		2198392	7					
ANR	2198424	Condition	"! safe_is_id_in_list ( safe_uids , uid )"	797:8:19186:19220	2198392	0	True				
ANR	2198425	UnaryOperationExpression	"! safe_is_id_in_list ( safe_uids , uid )"		2198392	0					
ANR	2198426	UnaryOperator	!		2198392	0					
ANR	2198427	CallExpression	"safe_is_id_in_list ( safe_uids , uid )"		2198392	1					
ANR	2198428	Callee	safe_is_id_in_list		2198392	0					
ANR	2198429	Identifier	safe_is_id_in_list		2198392	0					
ANR	2198430	ArgumentList	safe_uids		2198392	1					
ANR	2198431	Argument	safe_uids		2198392	0					
ANR	2198432	Identifier	safe_uids		2198392	0					
ANR	2198433	Argument	uid		2198392	1					
ANR	2198434	Identifier	uid		2198392	0					
ANR	2198435	CompoundStatement		11:45:202:202	2198392	1					
ANR	2198436	ReturnStatement	return - 1 ;	798:8:19233:19242	2198392	0	True				
ANR	2198437	UnaryOperationExpression	- 1		2198392	0					
ANR	2198438	UnaryOperator	-		2198392	0					
ANR	2198439	PrimaryExpression	1		2198392	1					
ANR	2198440	IfStatement	"if ( ( tracking_gid != 0 ) && ! safe_is_id_in_list ( safe_gids , tracking_gid ) )"		2198392	8					
ANR	2198441	Condition	"( tracking_gid != 0 ) && ! safe_is_id_in_list ( safe_gids , tracking_gid )"	802:8:19307:19373	2198392	0	True				
ANR	2198442	AndExpression	"( tracking_gid != 0 ) && ! safe_is_id_in_list ( safe_gids , tracking_gid )"		2198392	0		&&			
ANR	2198443	EqualityExpression	tracking_gid != 0		2198392	0		!=			
ANR	2198444	Identifier	tracking_gid		2198392	0					
ANR	2198445	PrimaryExpression	0		2198392	1					
ANR	2198446	UnaryOperationExpression	"! safe_is_id_in_list ( safe_gids , tracking_gid )"		2198392	1					
ANR	2198447	UnaryOperator	!		2198392	0					
ANR	2198448	CallExpression	"safe_is_id_in_list ( safe_gids , tracking_gid )"		2198392	1					
ANR	2198449	Callee	safe_is_id_in_list		2198392	0					
ANR	2198450	Identifier	safe_is_id_in_list		2198392	0					
ANR	2198451	ArgumentList	safe_gids		2198392	1					
ANR	2198452	Argument	safe_gids		2198392	0					
ANR	2198453	Identifier	safe_gids		2198392	0					
ANR	2198454	Argument	tracking_gid		2198392	1					
ANR	2198455	Identifier	tracking_gid		2198392	0					
ANR	2198456	CompoundStatement		16:77:355:355	2198392	1					
ANR	2198457	ReturnStatement	return - 13 ;	803:2:19380:19390	2198392	0	True				
ANR	2198458	UnaryOperationExpression	- 13		2198392	0					
ANR	2198459	UnaryOperator	-		2198392	0					
ANR	2198460	PrimaryExpression	13		2198392	1					
ANR	2198461	ExpressionStatement	pw = getpwuid ( uid )	807:4:19444:19462	2198392	9	True				
ANR	2198462	AssignmentExpression	pw = getpwuid ( uid )		2198392	0		=			
ANR	2198463	Identifier	pw		2198392	0					
ANR	2198464	CallExpression	getpwuid ( uid )		2198392	1					
ANR	2198465	Callee	getpwuid		2198392	0					
ANR	2198466	Identifier	getpwuid		2198392	0					
ANR	2198467	ArgumentList	uid		2198392	1					
ANR	2198468	Argument	uid		2198392	0					
ANR	2198469	Identifier	uid		2198392	0					
ANR	2198470	IfStatement	if ( pw == NULL )		2198392	10					
ANR	2198471	Condition	pw == NULL	808:8:19472:19481	2198392	0	True				
ANR	2198472	EqualityExpression	pw == NULL		2198392	0		==			
ANR	2198473	Identifier	pw		2198392	0					
ANR	2198474	Identifier	NULL		2198392	1					
ANR	2198475	CompoundStatement		22:20:463:463	2198392	1					
ANR	2198476	ReturnStatement	return - 2 ;	809:8:19494:19503	2198392	0	True				
ANR	2198477	UnaryOperationExpression	- 2		2198392	0					
ANR	2198478	UnaryOperator	-		2198392	0					
ANR	2198479	PrimaryExpression	2		2198392	1					
ANR	2198480	ExpressionStatement	gid = pw -> pw_gid	813:4:19544:19560	2198392	11	True				
ANR	2198481	AssignmentExpression	gid = pw -> pw_gid		2198392	0		=			
ANR	2198482	Identifier	gid		2198392	0					
ANR	2198483	PtrMemberAccess	pw -> pw_gid		2198392	1					
ANR	2198484	Identifier	pw		2198392	0					
ANR	2198485	Identifier	pw_gid		2198392	1					
ANR	2198486	IfStatement	"if ( ! safe_is_id_in_list ( safe_gids , gid ) )"		2198392	12					
ANR	2198487	Condition	"! safe_is_id_in_list ( safe_gids , gid )"	816:8:19617:19651	2198392	0	True				
ANR	2198488	UnaryOperationExpression	"! safe_is_id_in_list ( safe_gids , gid )"		2198392	0					
ANR	2198489	UnaryOperator	!		2198392	0					
ANR	2198490	CallExpression	"safe_is_id_in_list ( safe_gids , gid )"		2198392	1					
ANR	2198491	Callee	safe_is_id_in_list		2198392	0					
ANR	2198492	Identifier	safe_is_id_in_list		2198392	0					
ANR	2198493	ArgumentList	safe_gids		2198392	1					
ANR	2198494	Argument	safe_gids		2198392	0					
ANR	2198495	Identifier	safe_gids		2198392	0					
ANR	2198496	Argument	gid		2198392	1					
ANR	2198497	Identifier	gid		2198392	0					
ANR	2198498	CompoundStatement		30:45:633:633	2198392	1					
ANR	2198499	ReturnStatement	return - 3 ;	817:8:19664:19673	2198392	0	True				
ANR	2198500	UnaryOperationExpression	- 3		2198392	0					
ANR	2198501	UnaryOperator	-		2198392	0					
ANR	2198502	PrimaryExpression	3		2198392	1					
ANR	2198503	ExpressionStatement	"r = initgroups ( pw -> pw_name , gid )"	821:4:19721:19753	2198392	13	True				
ANR	2198504	AssignmentExpression	"r = initgroups ( pw -> pw_name , gid )"		2198392	0		=			
ANR	2198505	Identifier	r		2198392	0					
ANR	2198506	CallExpression	"initgroups ( pw -> pw_name , gid )"		2198392	1					
ANR	2198507	Callee	initgroups		2198392	0					
ANR	2198508	Identifier	initgroups		2198392	0					
ANR	2198509	ArgumentList	pw -> pw_name		2198392	1					
ANR	2198510	Argument	pw -> pw_name		2198392	0					
ANR	2198511	PtrMemberAccess	pw -> pw_name		2198392	0					
ANR	2198512	Identifier	pw		2198392	0					
ANR	2198513	Identifier	pw_name		2198392	1					
ANR	2198514	Argument	gid		2198392	1					
ANR	2198515	Identifier	gid		2198392	0					
ANR	2198516	IfStatement	if ( r == - 1 )		2198392	14					
ANR	2198517	Condition	r == - 1	822:8:19763:19769	2198392	0	True				
ANR	2198518	EqualityExpression	r == - 1		2198392	0		==			
ANR	2198519	Identifier	r		2198392	0					
ANR	2198520	UnaryOperationExpression	- 1		2198392	1					
ANR	2198521	UnaryOperator	-		2198392	0					
ANR	2198522	PrimaryExpression	1		2198392	1					
ANR	2198523	CompoundStatement		36:17:751:751	2198392	1					
ANR	2198524	ReturnStatement	return - 4 ;	823:8:19782:19791	2198392	0	True				
ANR	2198525	UnaryOperationExpression	- 4		2198392	0					
ANR	2198526	UnaryOperator	-		2198392	0					
ANR	2198527	PrimaryExpression	4		2198392	1					
ANR	2198528	ExpressionStatement	"total_groups = num_groups = getgroups ( 0 , 0 )"	827:4:19849:19892	2198392	15	True				
ANR	2198529	AssignmentExpression	"total_groups = num_groups = getgroups ( 0 , 0 )"		2198392	0		=			
ANR	2198530	Identifier	total_groups		2198392	0					
ANR	2198531	AssignmentExpression	"num_groups = getgroups ( 0 , 0 )"		2198392	1		=			
ANR	2198532	Identifier	num_groups		2198392	0					
ANR	2198533	CallExpression	"getgroups ( 0 , 0 )"		2198392	1					
ANR	2198534	Callee	getgroups		2198392	0					
ANR	2198535	Identifier	getgroups		2198392	0					
ANR	2198536	ArgumentList	0		2198392	1					
ANR	2198537	Argument	0		2198392	0					
ANR	2198538	PrimaryExpression	0		2198392	0					
ANR	2198539	Argument	0		2198392	1					
ANR	2198540	PrimaryExpression	0		2198392	0					
ANR	2198541	IfStatement	if ( num_groups == - 1 )		2198392	16					
ANR	2198542	Condition	num_groups == - 1	828:8:19902:19917	2198392	0	True				
ANR	2198543	EqualityExpression	num_groups == - 1		2198392	0		==			
ANR	2198544	Identifier	num_groups		2198392	0					
ANR	2198545	UnaryOperationExpression	- 1		2198392	1					
ANR	2198546	UnaryOperator	-		2198392	0					
ANR	2198547	PrimaryExpression	1		2198392	1					
ANR	2198548	CompoundStatement		42:26:899:899	2198392	1					
ANR	2198549	ReturnStatement	return - 5 ;	829:8:19930:19939	2198392	0	True				
ANR	2198550	UnaryOperationExpression	- 5		2198392	0					
ANR	2198551	UnaryOperator	-		2198392	0					
ANR	2198552	PrimaryExpression	5		2198392	1					
ANR	2198553	IfStatement	if ( tracking_gid != 0 )		2198392	17					
ANR	2198554	Condition	tracking_gid != 0	831:8:19955:19971	2198392	0	True				
ANR	2198555	EqualityExpression	tracking_gid != 0		2198392	0		!=			
ANR	2198556	Identifier	tracking_gid		2198392	0					
ANR	2198557	PrimaryExpression	0		2198392	1					
ANR	2198558	CompoundStatement		45:27:953:953	2198392	1					
ANR	2198559	ExpressionStatement	total_groups ++	832:8:19984:19998	2198392	0	True				
ANR	2198560	PostIncDecOperationExpression	total_groups ++		2198392	0					
ANR	2198561	Identifier	total_groups		2198392	0					
ANR	2198562	IncDec	++		2198392	1					
ANR	2198563	ExpressionStatement	gids = ( gid_t * ) malloc ( total_groups * sizeof ( gid_t ) )	834:4:20010:20063	2198392	18	True				
ANR	2198564	AssignmentExpression	gids = ( gid_t * ) malloc ( total_groups * sizeof ( gid_t ) )		2198392	0		=			
ANR	2198565	Identifier	gids		2198392	0					
ANR	2198566	CastExpression	( gid_t * ) malloc ( total_groups * sizeof ( gid_t ) )		2198392	1					
ANR	2198567	CastTarget	gid_t *		2198392	0					
ANR	2198568	CallExpression	malloc ( total_groups * sizeof ( gid_t ) )		2198392	1					
ANR	2198569	Callee	malloc		2198392	0					
ANR	2198570	Identifier	malloc		2198392	0					
ANR	2198571	ArgumentList	total_groups * sizeof ( gid_t )		2198392	1					
ANR	2198572	Argument	total_groups * sizeof ( gid_t )		2198392	0					
ANR	2198573	MultiplicativeExpression	total_groups * sizeof ( gid_t )		2198392	0		*			
ANR	2198574	Identifier	total_groups		2198392	0					
ANR	2198575	SizeofExpression	sizeof ( gid_t )		2198392	1					
ANR	2198576	Sizeof	sizeof		2198392	0					
ANR	2198577	SizeofOperand	gid_t		2198392	1					
ANR	2198578	IfStatement	if ( gids == NULL )		2198392	19					
ANR	2198579	Condition	gids == NULL	835:8:20073:20084	2198392	0	True				
ANR	2198580	EqualityExpression	gids == NULL		2198392	0		==			
ANR	2198581	Identifier	gids		2198392	0					
ANR	2198582	Identifier	NULL		2198392	1					
ANR	2198583	CompoundStatement		49:22:1066:1066	2198392	1					
ANR	2198584	ReturnStatement	return - 6 ;	836:8:20097:20106	2198392	0	True				
ANR	2198585	UnaryOperationExpression	- 6		2198392	0					
ANR	2198586	UnaryOperator	-		2198392	0					
ANR	2198587	PrimaryExpression	6		2198392	1					
ANR	2198588	ExpressionStatement	"num_groups = getgroups ( num_groups , gids )"	840:4:20158:20198	2198392	20	True				
ANR	2198589	AssignmentExpression	"num_groups = getgroups ( num_groups , gids )"		2198392	0		=			
ANR	2198590	Identifier	num_groups		2198392	0					
ANR	2198591	CallExpression	"getgroups ( num_groups , gids )"		2198392	1					
ANR	2198592	Callee	getgroups		2198392	0					
ANR	2198593	Identifier	getgroups		2198392	0					
ANR	2198594	ArgumentList	num_groups		2198392	1					
ANR	2198595	Argument	num_groups		2198392	0					
ANR	2198596	Identifier	num_groups		2198392	0					
ANR	2198597	Argument	gids		2198392	1					
ANR	2198598	Identifier	gids		2198392	0					
ANR	2198599	IfStatement	if ( num_groups == - 1 )		2198392	21					
ANR	2198600	Condition	num_groups == - 1	841:8:20208:20223	2198392	0	True				
ANR	2198601	EqualityExpression	num_groups == - 1		2198392	0		==			
ANR	2198602	Identifier	num_groups		2198392	0					
ANR	2198603	UnaryOperationExpression	- 1		2198392	1					
ANR	2198604	UnaryOperator	-		2198392	0					
ANR	2198605	PrimaryExpression	1		2198392	1					
ANR	2198606	CompoundStatement		55:26:1205:1205	2198392	1					
ANR	2198607	ExpressionStatement	free ( gids )	842:8:20236:20246	2198392	0	True				
ANR	2198608	CallExpression	free ( gids )		2198392	0					
ANR	2198609	Callee	free		2198392	0					
ANR	2198610	Identifier	free		2198392	0					
ANR	2198611	ArgumentList	gids		2198392	1					
ANR	2198612	Argument	gids		2198392	0					
ANR	2198613	Identifier	gids		2198392	0					
ANR	2198614	ReturnStatement	return - 7 ;	843:8:20256:20265	2198392	1	True				
ANR	2198615	UnaryOperationExpression	- 7		2198392	0					
ANR	2198616	UnaryOperator	-		2198392	0					
ANR	2198617	PrimaryExpression	7		2198392	1					
ANR	2198618	ForStatement	for ( i = 0 ; i < num_groups ; ++ i )		2198392	22					
ANR	2198619	ForInit	i = 0 ;	847:9:20347:20352	2198392	0	True				
ANR	2198620	AssignmentExpression	i = 0		2198392	0		=			
ANR	2198621	Identifier	i		2198392	0					
ANR	2198622	PrimaryExpression	0		2198392	1					
ANR	2198623	Condition	i < num_groups	847:16:20354:20367	2198392	1	True				
ANR	2198624	RelationalExpression	i < num_groups		2198392	0		<			
ANR	2198625	Identifier	i		2198392	0					
ANR	2198626	Identifier	num_groups		2198392	1					
ANR	2198627	UnaryExpression	++ i	847:32:20370:20372	2198392	2	True				
ANR	2198628	IncDec	++		2198392	0					
ANR	2198629	Identifier	i		2198392	1					
ANR	2198630	CompoundStatement		61:37:1354:1354	2198392	3					
ANR	2198631	IfStatement	"if ( ! safe_is_id_in_list ( safe_gids , gids [ i ] ) )"		2198392	0					
ANR	2198632	Condition	"! safe_is_id_in_list ( safe_gids , gids [ i ] )"	848:12:20389:20427	2198392	0	True				
ANR	2198633	UnaryOperationExpression	"! safe_is_id_in_list ( safe_gids , gids [ i ] )"		2198392	0					
ANR	2198634	UnaryOperator	!		2198392	0					
ANR	2198635	CallExpression	"safe_is_id_in_list ( safe_gids , gids [ i ] )"		2198392	1					
ANR	2198636	Callee	safe_is_id_in_list		2198392	0					
ANR	2198637	Identifier	safe_is_id_in_list		2198392	0					
ANR	2198638	ArgumentList	safe_gids		2198392	1					
ANR	2198639	Argument	safe_gids		2198392	0					
ANR	2198640	Identifier	safe_gids		2198392	0					
ANR	2198641	Argument	gids [ i ]		2198392	1					
ANR	2198642	ArrayIndexing	gids [ i ]		2198392	0					
ANR	2198643	Identifier	gids		2198392	0					
ANR	2198644	Identifier	i		2198392	1					
ANR	2198645	CompoundStatement		62:53:1409:1409	2198392	1					
ANR	2198646	ExpressionStatement	free ( gids )	849:12:20444:20454	2198392	0	True				
ANR	2198647	CallExpression	free ( gids )		2198392	0					
ANR	2198648	Callee	free		2198392	0					
ANR	2198649	Identifier	free		2198392	0					
ANR	2198650	ArgumentList	gids		2198392	1					
ANR	2198651	Argument	gids		2198392	0					
ANR	2198652	Identifier	gids		2198392	0					
ANR	2198653	ReturnStatement	return - 8 ;	850:12:20468:20477	2198392	1	True				
ANR	2198654	UnaryOperationExpression	- 8		2198392	0					
ANR	2198655	UnaryOperator	-		2198392	0					
ANR	2198656	PrimaryExpression	8		2198392	1					
ANR	2198657	IfStatement	if ( tracking_gid != 0 )		2198392	23					
ANR	2198658	Condition	tracking_gid != 0	855:8:20547:20563	2198392	0	True				
ANR	2198659	EqualityExpression	tracking_gid != 0		2198392	0		!=			
ANR	2198660	Identifier	tracking_gid		2198392	0					
ANR	2198661	PrimaryExpression	0		2198392	1					
ANR	2198662	CompoundStatement		69:27:1545:1545	2198392	1					
ANR	2198663	ExpressionStatement	gids [ num_groups ] = tracking_gid	856:8:20576:20607	2198392	0	True				
ANR	2198664	AssignmentExpression	gids [ num_groups ] = tracking_gid		2198392	0		=			
ANR	2198665	ArrayIndexing	gids [ num_groups ]		2198392	0					
ANR	2198666	Identifier	gids		2198392	0					
ANR	2198667	Identifier	num_groups		2198392	1					
ANR	2198668	Identifier	tracking_gid		2198392	1					
ANR	2198669	IfStatement	"if ( setgroups ( num_groups + 1 , gids ) == - 1 )"		2198392	1					
ANR	2198670	Condition	"setgroups ( num_groups + 1 , gids ) == - 1"	857:12:20621:20657	2198392	0	True				
ANR	2198671	EqualityExpression	"setgroups ( num_groups + 1 , gids ) == - 1"		2198392	0		==			
ANR	2198672	CallExpression	"setgroups ( num_groups + 1 , gids )"		2198392	0					
ANR	2198673	Callee	setgroups		2198392	0					
ANR	2198674	Identifier	setgroups		2198392	0					
ANR	2198675	ArgumentList	num_groups + 1		2198392	1					
ANR	2198676	Argument	num_groups + 1		2198392	0					
ANR	2198677	AdditiveExpression	num_groups + 1		2198392	0		+			
ANR	2198678	Identifier	num_groups		2198392	0					
ANR	2198679	PrimaryExpression	1		2198392	1					
ANR	2198680	Argument	gids		2198392	1					
ANR	2198681	Identifier	gids		2198392	0					
ANR	2198682	UnaryOperationExpression	- 1		2198392	1					
ANR	2198683	UnaryOperator	-		2198392	0					
ANR	2198684	PrimaryExpression	1		2198392	1					
ANR	2198685	CompoundStatement		71:51:1639:1639	2198392	1					
ANR	2198686	ExpressionStatement	free ( gids )	858:12:20674:20684	2198392	0	True				
ANR	2198687	CallExpression	free ( gids )		2198392	0					
ANR	2198688	Callee	free		2198392	0					
ANR	2198689	Identifier	free		2198392	0					
ANR	2198690	ArgumentList	gids		2198392	1					
ANR	2198691	Argument	gids		2198392	0					
ANR	2198692	Identifier	gids		2198392	0					
ANR	2198693	ReturnStatement	return - 12 ;	859:12:20698:20708	2198392	1	True				
ANR	2198694	UnaryOperationExpression	- 12		2198392	0					
ANR	2198695	UnaryOperator	-		2198392	0					
ANR	2198696	PrimaryExpression	12		2198392	1					
ANR	2198697	ExpressionStatement	free ( gids )	863:4:20731:20741	2198392	24	True				
ANR	2198698	CallExpression	free ( gids )		2198392	0					
ANR	2198699	Callee	free		2198392	0					
ANR	2198700	Identifier	free		2198392	0					
ANR	2198701	ArgumentList	gids		2198392	1					
ANR	2198702	Argument	gids		2198392	0					
ANR	2198703	Identifier	gids		2198392	0					
ANR	2198704	ExpressionStatement	* primary_gid = gid	866:4:20779:20797	2198392	25	True				
ANR	2198705	AssignmentExpression	* primary_gid = gid		2198392	0		=			
ANR	2198706	UnaryOperationExpression	* primary_gid		2198392	0					
ANR	2198707	UnaryOperator	*		2198392	0					
ANR	2198708	Identifier	primary_gid		2198392	1					
ANR	2198709	Identifier	gid		2198392	1					
ANR	2198710	ReturnStatement	return 0 ;	868:4:20804:20812	2198392	26	True				
ANR	2198711	PrimaryExpression	0		2198392	0					
ANR	2198712	ReturnType	static int		2198392	1					
ANR	2198713	Identifier	safe_checks_and_set_gids		2198392	2					
ANR	2198714	ParameterList	"uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , gid_t * primary_gid"		2198392	3					
ANR	2198715	Parameter	uid_t uid	782:25:18806:18814	2198392	0	True				
ANR	2198716	ParameterType	uid_t		2198392	0					
ANR	2198717	Identifier	uid		2198392	1					
ANR	2198718	Parameter	gid_t tracking_gid	783:25:18842:18859	2198392	1	True				
ANR	2198719	ParameterType	gid_t		2198392	0					
ANR	2198720	Identifier	tracking_gid		2198392	1					
ANR	2198721	Parameter	safe_id_range_list * safe_uids	784:25:18887:18915	2198392	2	True				
ANR	2198722	ParameterType	safe_id_range_list *		2198392	0					
ANR	2198723	Identifier	safe_uids		2198392	1					
ANR	2198724	Parameter	safe_id_range_list * safe_gids	785:25:18943:18971	2198392	3	True				
ANR	2198725	ParameterType	safe_id_range_list *		2198392	0					
ANR	2198726	Identifier	safe_gids		2198392	1					
ANR	2198727	Parameter	gid_t * primary_gid	786:25:18999:19017	2198392	4	True				
ANR	2198728	ParameterType	gid_t *		2198392	0					
ANR	2198729	Identifier	primary_gid		2198392	1					
ANR	2198730	CFGEntryNode	ENTRY		2198392		True				
ANR	2198731	CFGExitNode	EXIT		2198392		True				
ANR	2198732	Symbol	tracking_gid		2198392						
ANR	2198733	Symbol	gids		2198392						
ANR	2198734	Symbol	safe_uids		2198392						
ANR	2198735	Symbol	gid		2198392						
ANR	2198736	Symbol	pw		2198392						
ANR	2198737	Symbol	primary_gid		2198392						
ANR	2198738	Symbol	* primary_gid		2198392						
ANR	2198739	Symbol	num_groups		2198392						
ANR	2198740	Symbol	safe_is_id_in_list		2198392						
ANR	2198741	Symbol	uid		2198392						
ANR	2198742	Symbol	getpwuid		2198392						
ANR	2198743	Symbol	setgroups		2198392						
ANR	2198744	Symbol	initgroups		2198392						
ANR	2198745	Symbol	pw -> pw_name		2198392						
ANR	2198746	Symbol	getgroups		2198392						
ANR	2198747	Symbol	malloc		2198392						
ANR	2198748	Symbol	NULL		2198392						
ANR	2198749	Symbol	total_groups		2198392						
ANR	2198750	Symbol	pw -> pw_gid		2198392						
ANR	2198751	Symbol	i		2198392						
ANR	2198752	Symbol	* pw		2198392						
ANR	2198753	Symbol	r		2198392						
ANR	2198754	Symbol	safe_gids		2198392						
ANR	2198755	Symbol	* i		2198392						
ANR	2198756	Symbol	* gids		2198392						
ANR	2198757	Symbol	* num_groups		2198392						
ANR	2198758	Function	safe_switch_to_uid_strerror	871:0:20817:21546							
ANR	2198759	FunctionDef	safe_switch_to_uid_strerror (int r)		2198758	0					
ANR	2198760	CompoundStatement		873:0:20865:21546	2198758	0					
ANR	2198761	SwitchStatement	switch ( r )		2198758	0					
ANR	2198762	Condition	r	874:8:20875:20875	2198758	0	True				
ANR	2198763	Identifier	r		2198758	0					
ANR	2198764	CompoundStatement		2:11:12:12	2198758	1					
ANR	2198765	Label	case 0 :	875:1:20881:20887	2198758	0	True				
ANR	2198766	ReturnStatement	"return ""success"" ;"	875:9:20889:20905	2198758	1	True				
ANR	2198767	PrimaryExpression	"""success"""		2198758	0					
ANR	2198768	Statement	case	876:1:20908:20911	2198758	2	True				
ANR	2198769	Statement	-	876:6:20913:20913	2198758	3	True				
ANR	2198770	Label	1 :	876:7:20914:20915	2198758	4	True				
ANR	2198771	ReturnStatement	"return ""uid not safe"" ;"	876:10:20917:20938	2198758	5	True				
ANR	2198772	PrimaryExpression	"""uid not safe"""		2198758	0					
ANR	2198773	Statement	case	877:1:20941:20944	2198758	6	True				
ANR	2198774	Statement	-	877:6:20946:20946	2198758	7	True				
ANR	2198775	Label	2 :	877:7:20947:20948	2198758	8	True				
ANR	2198776	ReturnStatement	"return ""uid not in password file"" ;"	877:10:20950:20983	2198758	9	True				
ANR	2198777	PrimaryExpression	"""uid not in password file"""		2198758	0					
ANR	2198778	Statement	case	878:1:20986:20989	2198758	10	True				
ANR	2198779	Statement	-	878:6:20991:20991	2198758	11	True				
ANR	2198780	Label	3 :	878:7:20992:20993	2198758	12	True				
ANR	2198781	ReturnStatement	"return ""primary group not safe"" ;"	878:10:20995:21026	2198758	13	True				
ANR	2198782	PrimaryExpression	"""primary group not safe"""		2198758	0					
ANR	2198783	Statement	case	879:1:21029:21032	2198758	14	True				
ANR	2198784	Statement	-	879:6:21034:21034	2198758	15	True				
ANR	2198785	Label	4 :	879:7:21035:21036	2198758	16	True				
ANR	2198786	ReturnStatement	"return ""failed to set supplementary groups"" ;"	879:10:21038:21081	2198758	17	True				
ANR	2198787	PrimaryExpression	"""failed to set supplementary groups"""		2198758	0					
ANR	2198788	Statement	case	880:1:21084:21087	2198758	18	True				
ANR	2198789	Statement	-	880:6:21089:21089	2198758	19	True				
ANR	2198790	Label	5 :	880:7:21090:21091	2198758	20	True				
ANR	2198791	ReturnStatement	"return ""failed to get number of supplementary groups"" ;"	880:10:21093:21146	2198758	21	True				
ANR	2198792	PrimaryExpression	"""failed to get number of supplementary groups"""		2198758	0					
ANR	2198793	Statement	case	881:1:21149:21152	2198758	22	True				
ANR	2198794	Statement	-	881:6:21154:21154	2198758	23	True				
ANR	2198795	Label	6 :	881:7:21155:21156	2198758	24	True				
ANR	2198796	ReturnStatement	"return ""malloc failed"" ;"	881:10:21158:21180	2198758	25	True				
ANR	2198797	PrimaryExpression	"""malloc failed"""		2198758	0					
ANR	2198798	Statement	case	882:1:21183:21186	2198758	26	True				
ANR	2198799	Statement	-	882:6:21188:21188	2198758	27	True				
ANR	2198800	Label	7 :	882:7:21189:21190	2198758	28	True				
ANR	2198801	ReturnStatement	"return ""failed to get supplementary groups"" ;"	882:10:21192:21235	2198758	29	True				
ANR	2198802	PrimaryExpression	"""failed to get supplementary groups"""		2198758	0					
ANR	2198803	Statement	case	883:1:21238:21241	2198758	30	True				
ANR	2198804	Statement	-	883:6:21243:21243	2198758	31	True				
ANR	2198805	Label	8 :	883:7:21244:21245	2198758	32	True				
ANR	2198806	ReturnStatement	"return ""a supplementary group was not safe"" ;"	883:10:21247:21290	2198758	33	True				
ANR	2198807	PrimaryExpression	"""a supplementary group was not safe"""		2198758	0					
ANR	2198808	Statement	case	884:1:21293:21296	2198758	34	True				
ANR	2198809	Statement	-	884:6:21298:21298	2198758	35	True				
ANR	2198810	Label	9 :	884:7:21299:21300	2198758	36	True				
ANR	2198811	ReturnStatement	"return ""failed to set real gid"" ;"	884:10:21302:21333	2198758	37	True				
ANR	2198812	PrimaryExpression	"""failed to set real gid"""		2198758	0					
ANR	2198813	Statement	case	885:1:21336:21339	2198758	38	True				
ANR	2198814	Statement	-	885:6:21341:21341	2198758	39	True				
ANR	2198815	Label	10 :	885:7:21342:21344	2198758	40	True				
ANR	2198816	ReturnStatement	"return ""failed to set real uid"" ;"	885:11:21346:21377	2198758	41	True				
ANR	2198817	PrimaryExpression	"""failed to set real uid"""		2198758	0					
ANR	2198818	Statement	case	886:1:21380:21383	2198758	42	True				
ANR	2198819	Statement	-	886:6:21385:21385	2198758	43	True				
ANR	2198820	Label	11 :	886:7:21386:21388	2198758	44	True				
ANR	2198821	ReturnStatement	"return ""id did not change properly"" ;"	886:11:21390:21425	2198758	45	True				
ANR	2198822	PrimaryExpression	"""id did not change properly"""		2198758	0					
ANR	2198823	Statement	case	887:1:21428:21431	2198758	46	True				
ANR	2198824	Statement	-	887:6:21433:21433	2198758	47	True				
ANR	2198825	Label	12 :	887:7:21434:21436	2198758	48	True				
ANR	2198826	ReturnStatement	"return ""failed to insert tracking GID"" ;"	887:11:21438:21476	2198758	49	True				
ANR	2198827	PrimaryExpression	"""failed to insert tracking GID"""		2198758	0					
ANR	2198828	Statement	case	888:1:21479:21482	2198758	50	True				
ANR	2198829	Statement	-	888:6:21484:21484	2198758	51	True				
ANR	2198830	Label	13 :	888:7:21485:21487	2198758	52	True				
ANR	2198831	ReturnStatement	"return ""the tracking group was not safe"" ;"	888:11:21489:21529	2198758	53	True				
ANR	2198832	PrimaryExpression	"""the tracking group was not safe"""		2198758	0					
ANR	2198833	ReturnStatement	"return """" ;"	890:1:21535:21544	2198758	1	True				
ANR	2198834	PrimaryExpression	""""""		2198758	0					
ANR	2198835	ReturnType	char const *		2198758	1					
ANR	2198836	Identifier	safe_switch_to_uid_strerror		2198758	2					
ANR	2198837	ParameterList	int r		2198758	3					
ANR	2198838	Parameter	int r	872:28:20858:20862	2198758	0	True				
ANR	2198839	ParameterType	int		2198758	0					
ANR	2198840	Identifier	r		2198758	1					
ANR	2198841	CFGEntryNode	ENTRY		2198758		True				
ANR	2198842	CFGExitNode	EXIT		2198758		True				
ANR	2198843	Symbol	r		2198758						
ANR	2198844	Function	safe_switch_to_uid	915:0:22222:23076							
ANR	2198845	FunctionDef	"safe_switch_to_uid (uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids)"		2198844	0					
ANR	2198846	CompoundStatement		920:0:22395:23076	2198844	0					
ANR	2198847	IdentifierDeclStatement	gid_t gid ;	921:4:22401:22410	2198844	0	True				
ANR	2198848	IdentifierDecl	gid		2198844	0					
ANR	2198849	IdentifierDeclType	gid_t		2198844	0					
ANR	2198850	Identifier	gid		2198844	1					
ANR	2198851	IdentifierDeclStatement	int r ;	922:4:22416:22421	2198844	1	True				
ANR	2198852	IdentifierDecl	r		2198844	0					
ANR	2198853	IdentifierDeclType	int		2198844	0					
ANR	2198854	Identifier	r		2198844	1					
ANR	2198855	ExpressionStatement	"r = safe_checks_and_set_gids ( uid , tracking_gid , safe_uids , safe_gids , & gid )"	924:4:22428:22635	2198844	2	True				
ANR	2198856	AssignmentExpression	"r = safe_checks_and_set_gids ( uid , tracking_gid , safe_uids , safe_gids , & gid )"		2198844	0		=			
ANR	2198857	Identifier	r		2198844	0					
ANR	2198858	CallExpression	"safe_checks_and_set_gids ( uid , tracking_gid , safe_uids , safe_gids , & gid )"		2198844	1					
ANR	2198859	Callee	safe_checks_and_set_gids		2198844	0					
ANR	2198860	Identifier	safe_checks_and_set_gids		2198844	0					
ANR	2198861	ArgumentList	uid		2198844	1					
ANR	2198862	Argument	uid		2198844	0					
ANR	2198863	Identifier	uid		2198844	0					
ANR	2198864	Argument	tracking_gid		2198844	1					
ANR	2198865	Identifier	tracking_gid		2198844	0					
ANR	2198866	Argument	safe_uids		2198844	2					
ANR	2198867	Identifier	safe_uids		2198844	0					
ANR	2198868	Argument	safe_gids		2198844	3					
ANR	2198869	Identifier	safe_gids		2198844	0					
ANR	2198870	Argument	& gid		2198844	4					
ANR	2198871	UnaryOperationExpression	& gid		2198844	0					
ANR	2198872	UnaryOperator	&		2198844	0					
ANR	2198873	Identifier	gid		2198844	1					
ANR	2198874	IfStatement	if ( r != 0 )		2198844	3					
ANR	2198875	Condition	r != 0	929:8:22645:22650	2198844	0	True				
ANR	2198876	EqualityExpression	r != 0		2198844	0		!=			
ANR	2198877	Identifier	r		2198844	0					
ANR	2198878	PrimaryExpression	0		2198844	1					
ANR	2198879	CompoundStatement		10:16:257:257	2198844	1					
ANR	2198880	ReturnStatement	return r ;	930:8:22663:22671	2198844	0	True				
ANR	2198881	Identifier	r		2198844	0					
ANR	2198882	ExpressionStatement	r = setgid ( gid )	933:4:22684:22699	2198844	4	True				
ANR	2198883	AssignmentExpression	r = setgid ( gid )		2198844	0		=			
ANR	2198884	Identifier	r		2198844	0					
ANR	2198885	CallExpression	setgid ( gid )		2198844	1					
ANR	2198886	Callee	setgid		2198844	0					
ANR	2198887	Identifier	setgid		2198844	0					
ANR	2198888	ArgumentList	gid		2198844	1					
ANR	2198889	Argument	gid		2198844	0					
ANR	2198890	Identifier	gid		2198844	0					
ANR	2198891	IfStatement	if ( r == - 1 )		2198844	5					
ANR	2198892	Condition	r == - 1	934:8:22709:22715	2198844	0	True				
ANR	2198893	EqualityExpression	r == - 1		2198844	0		==			
ANR	2198894	Identifier	r		2198844	0					
ANR	2198895	UnaryOperationExpression	- 1		2198844	1					
ANR	2198896	UnaryOperator	-		2198844	0					
ANR	2198897	PrimaryExpression	1		2198844	1					
ANR	2198898	CompoundStatement		15:17:322:322	2198844	1					
ANR	2198899	ReturnStatement	return - 9 ;	935:8:22728:22737	2198844	0	True				
ANR	2198900	UnaryOperationExpression	- 9		2198844	0					
ANR	2198901	UnaryOperator	-		2198844	0					
ANR	2198902	PrimaryExpression	9		2198844	1					
ANR	2198903	ExpressionStatement	r = setuid ( uid )	938:4:22750:22765	2198844	6	True				
ANR	2198904	AssignmentExpression	r = setuid ( uid )		2198844	0		=			
ANR	2198905	Identifier	r		2198844	0					
ANR	2198906	CallExpression	setuid ( uid )		2198844	1					
ANR	2198907	Callee	setuid		2198844	0					
ANR	2198908	Identifier	setuid		2198844	0					
ANR	2198909	ArgumentList	uid		2198844	1					
ANR	2198910	Argument	uid		2198844	0					
ANR	2198911	Identifier	uid		2198844	0					
ANR	2198912	IfStatement	if ( r == - 1 )		2198844	7					
ANR	2198913	Condition	r == - 1	939:8:22775:22781	2198844	0	True				
ANR	2198914	EqualityExpression	r == - 1		2198844	0		==			
ANR	2198915	Identifier	r		2198844	0					
ANR	2198916	UnaryOperationExpression	- 1		2198844	1					
ANR	2198917	UnaryOperator	-		2198844	0					
ANR	2198918	PrimaryExpression	1		2198844	1					
ANR	2198919	CompoundStatement		20:17:388:388	2198844	1					
ANR	2198920	ReturnStatement	return - 10 ;	940:8:22794:22804	2198844	0	True				
ANR	2198921	UnaryOperationExpression	- 10		2198844	0					
ANR	2198922	UnaryOperator	-		2198844	0					
ANR	2198923	PrimaryExpression	10		2198844	1					
ANR	2198924	IfStatement	if ( getuid ( ) != uid || geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid )		2198844	8					
ANR	2198925	Condition	getuid ( ) != uid || geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid	945:8:22949:23030	2198844	0	True				
ANR	2198926	OrExpression	getuid ( ) != uid || geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid		2198844	0		||			
ANR	2198927	EqualityExpression	getuid ( ) != uid		2198844	0		!=			
ANR	2198928	CallExpression	getuid ( )		2198844	0					
ANR	2198929	Callee	getuid		2198844	0					
ANR	2198930	Identifier	getuid		2198844	0					
ANR	2198931	ArgumentList			2198844	1					
ANR	2198932	Identifier	uid		2198844	1					
ANR	2198933	OrExpression	geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid		2198844	1		||			
ANR	2198934	EqualityExpression	geteuid ( ) != uid		2198844	0		!=			
ANR	2198935	CallExpression	geteuid ( )		2198844	0					
ANR	2198936	Callee	geteuid		2198844	0					
ANR	2198937	Identifier	geteuid		2198844	0					
ANR	2198938	ArgumentList			2198844	1					
ANR	2198939	Identifier	uid		2198844	1					
ANR	2198940	OrExpression	getgid ( ) != gid || getegid ( ) != gid		2198844	1		||			
ANR	2198941	EqualityExpression	getgid ( ) != gid		2198844	0		!=			
ANR	2198942	CallExpression	getgid ( )		2198844	0					
ANR	2198943	Callee	getgid		2198844	0					
ANR	2198944	Identifier	getgid		2198844	0					
ANR	2198945	ArgumentList			2198844	1					
ANR	2198946	Identifier	gid		2198844	1					
ANR	2198947	EqualityExpression	getegid ( ) != gid		2198844	1		!=			
ANR	2198948	CallExpression	getegid ( )		2198844	0					
ANR	2198949	Callee	getegid		2198844	0					
ANR	2198950	Identifier	getegid		2198844	0					
ANR	2198951	ArgumentList			2198844	1					
ANR	2198952	Identifier	gid		2198844	1					
ANR	2198953	CompoundStatement		27:29:637:637	2198844	1					
ANR	2198954	ReturnStatement	return - 11 ;	947:8:23043:23053	2198844	0	True				
ANR	2198955	UnaryOperationExpression	- 11		2198844	0					
ANR	2198956	UnaryOperator	-		2198844	0					
ANR	2198957	PrimaryExpression	11		2198844	1					
ANR	2198958	ReturnStatement	return 0 ;	950:4:23066:23074	2198844	9	True				
ANR	2198959	PrimaryExpression	0		2198844	0					
ANR	2198960	ReturnType	int		2198844	1					
ANR	2198961	Identifier	safe_switch_to_uid		2198844	2					
ANR	2198962	ParameterList	"uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids"		2198844	3					
ANR	2198963	Parameter	uid_t uid	916:19:22245:22253	2198844	0	True				
ANR	2198964	ParameterType	uid_t		2198844	0					
ANR	2198965	Identifier	uid		2198844	1					
ANR	2198966	Parameter	gid_t tracking_gid	917:19:22275:22292	2198844	1	True				
ANR	2198967	ParameterType	gid_t		2198844	0					
ANR	2198968	Identifier	tracking_gid		2198844	1					
ANR	2198969	Parameter	safe_id_range_list * safe_uids	918:19:22314:22342	2198844	2	True				
ANR	2198970	ParameterType	safe_id_range_list *		2198844	0					
ANR	2198971	Identifier	safe_uids		2198844	1					
ANR	2198972	Parameter	safe_id_range_list * safe_gids	919:19:22364:22392	2198844	3	True				
ANR	2198973	ParameterType	safe_id_range_list *		2198844	0					
ANR	2198974	Identifier	safe_gids		2198844	1					
ANR	2198975	CFGEntryNode	ENTRY		2198844		True				
ANR	2198976	CFGExitNode	EXIT		2198844		True				
ANR	2198977	Symbol	tracking_gid		2198844						
ANR	2198978	Symbol	setgid		2198844						
ANR	2198979	Symbol	safe_uids		2198844						
ANR	2198980	Symbol	gid		2198844						
ANR	2198981	Symbol	getgid		2198844						
ANR	2198982	Symbol	safe_checks_and_set_gids		2198844						
ANR	2198983	Symbol	geteuid		2198844						
ANR	2198984	Symbol	setuid		2198844						
ANR	2198985	Symbol	& gid		2198844						
ANR	2198986	Symbol	uid		2198844						
ANR	2198987	Symbol	r		2198844						
ANR	2198988	Symbol	getuid		2198844						
ANR	2198989	Symbol	safe_gids		2198844						
ANR	2198990	Symbol	getegid		2198844						
ANR	2198991	Function	safe_switch_effective_to_uid	970:0:23581:24007							
ANR	2198992	FunctionDef	"safe_switch_effective_to_uid (uid_t uid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids)"		2198991	0					
ANR	2198993	CompoundStatement		973:0:23716:24007	2198991	0					
ANR	2198994	IdentifierDeclStatement	gid_t gid ;	974:4:23722:23731	2198991	0	True				
ANR	2198995	IdentifierDecl	gid		2198991	0					
ANR	2198996	IdentifierDeclType	gid_t		2198991	0					
ANR	2198997	Identifier	gid		2198991	1					
ANR	2198998	IdentifierDeclStatement	int r ;	975:4:23737:23742	2198991	1	True				
ANR	2198999	IdentifierDecl	r		2198991	0					
ANR	2199000	IdentifierDeclType	int		2198991	0					
ANR	2199001	Identifier	r		2198991	1					
ANR	2199002	ExpressionStatement	"r = safe_checks_and_set_gids ( uid , 0 , safe_uids , safe_gids , & gid )"	977:4:23749:23813	2198991	2	True				
ANR	2199003	AssignmentExpression	"r = safe_checks_and_set_gids ( uid , 0 , safe_uids , safe_gids , & gid )"		2198991	0		=			
ANR	2199004	Identifier	r		2198991	0					
ANR	2199005	CallExpression	"safe_checks_and_set_gids ( uid , 0 , safe_uids , safe_gids , & gid )"		2198991	1					
ANR	2199006	Callee	safe_checks_and_set_gids		2198991	0					
ANR	2199007	Identifier	safe_checks_and_set_gids		2198991	0					
ANR	2199008	ArgumentList	uid		2198991	1					
ANR	2199009	Argument	uid		2198991	0					
ANR	2199010	Identifier	uid		2198991	0					
ANR	2199011	Argument	0		2198991	1					
ANR	2199012	PrimaryExpression	0		2198991	0					
ANR	2199013	Argument	safe_uids		2198991	2					
ANR	2199014	Identifier	safe_uids		2198991	0					
ANR	2199015	Argument	safe_gids		2198991	3					
ANR	2199016	Identifier	safe_gids		2198991	0					
ANR	2199017	Argument	& gid		2198991	4					
ANR	2199018	UnaryOperationExpression	& gid		2198991	0					
ANR	2199019	UnaryOperator	&		2198991	0					
ANR	2199020	Identifier	gid		2198991	1					
ANR	2199021	IfStatement	if ( r != 0 )		2198991	3					
ANR	2199022	Condition	r != 0	978:8:23823:23828	2198991	0	True				
ANR	2199023	EqualityExpression	r != 0		2198991	0		!=			
ANR	2199024	Identifier	r		2198991	0					
ANR	2199025	PrimaryExpression	0		2198991	1					
ANR	2199026	CompoundStatement		6:16:114:114	2198991	1					
ANR	2199027	ReturnStatement	return r ;	979:8:23841:23849	2198991	0	True				
ANR	2199028	Identifier	r		2198991	0					
ANR	2199029	ExpressionStatement	r = setegid ( gid )	982:4:23862:23878	2198991	4	True				
ANR	2199030	AssignmentExpression	r = setegid ( gid )		2198991	0		=			
ANR	2199031	Identifier	r		2198991	0					
ANR	2199032	CallExpression	setegid ( gid )		2198991	1					
ANR	2199033	Callee	setegid		2198991	0					
ANR	2199034	Identifier	setegid		2198991	0					
ANR	2199035	ArgumentList	gid		2198991	1					
ANR	2199036	Argument	gid		2198991	0					
ANR	2199037	Identifier	gid		2198991	0					
ANR	2199038	IfStatement	if ( r == - 1 )		2198991	5					
ANR	2199039	Condition	r == - 1	983:8:23888:23894	2198991	0	True				
ANR	2199040	EqualityExpression	r == - 1		2198991	0		==			
ANR	2199041	Identifier	r		2198991	0					
ANR	2199042	UnaryOperationExpression	- 1		2198991	1					
ANR	2199043	UnaryOperator	-		2198991	0					
ANR	2199044	PrimaryExpression	1		2198991	1					
ANR	2199045	CompoundStatement		11:17:180:180	2198991	1					
ANR	2199046	ReturnStatement	return - 9 ;	984:8:23907:23916	2198991	0	True				
ANR	2199047	UnaryOperationExpression	- 9		2198991	0					
ANR	2199048	UnaryOperator	-		2198991	0					
ANR	2199049	PrimaryExpression	9		2198991	1					
ANR	2199050	ExpressionStatement	r = seteuid ( uid )	987:4:23929:23945	2198991	6	True				
ANR	2199051	AssignmentExpression	r = seteuid ( uid )		2198991	0		=			
ANR	2199052	Identifier	r		2198991	0					
ANR	2199053	CallExpression	seteuid ( uid )		2198991	1					
ANR	2199054	Callee	seteuid		2198991	0					
ANR	2199055	Identifier	seteuid		2198991	0					
ANR	2199056	ArgumentList	uid		2198991	1					
ANR	2199057	Argument	uid		2198991	0					
ANR	2199058	Identifier	uid		2198991	0					
ANR	2199059	IfStatement	if ( r == - 1 )		2198991	7					
ANR	2199060	Condition	r == - 1	988:8:23955:23961	2198991	0	True				
ANR	2199061	EqualityExpression	r == - 1		2198991	0		==			
ANR	2199062	Identifier	r		2198991	0					
ANR	2199063	UnaryOperationExpression	- 1		2198991	1					
ANR	2199064	UnaryOperator	-		2198991	0					
ANR	2199065	PrimaryExpression	1		2198991	1					
ANR	2199066	CompoundStatement		16:17:247:247	2198991	1					
ANR	2199067	ReturnStatement	return - 10 ;	989:8:23974:23984	2198991	0	True				
ANR	2199068	UnaryOperationExpression	- 10		2198991	0					
ANR	2199069	UnaryOperator	-		2198991	0					
ANR	2199070	PrimaryExpression	10		2198991	1					
ANR	2199071	ReturnStatement	return 0 ;	992:4:23997:24005	2198991	8	True				
ANR	2199072	PrimaryExpression	0		2198991	0					
ANR	2199073	ReturnType	int		2198991	1					
ANR	2199074	Identifier	safe_switch_effective_to_uid		2198991	2					
ANR	2199075	ParameterList	"uid_t uid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids"		2198991	3					
ANR	2199076	Parameter	uid_t uid	971:29:23614:23622	2198991	0	True				
ANR	2199077	ParameterType	uid_t		2198991	0					
ANR	2199078	Identifier	uid		2198991	1					
ANR	2199079	Parameter	safe_id_range_list * safe_uids	971:40:23625:23653	2198991	1	True				
ANR	2199080	ParameterType	safe_id_range_list *		2198991	0					
ANR	2199081	Identifier	safe_uids		2198991	1					
ANR	2199082	Parameter	safe_id_range_list * safe_gids	972:29:23685:23713	2198991	2	True				
ANR	2199083	ParameterType	safe_id_range_list *		2198991	0					
ANR	2199084	Identifier	safe_gids		2198991	1					
ANR	2199085	CFGEntryNode	ENTRY		2198991		True				
ANR	2199086	CFGExitNode	EXIT		2198991		True				
ANR	2199087	Symbol	uid		2198991						
ANR	2199088	Symbol	r		2198991						
ANR	2199089	Symbol	safe_uids		2198991						
ANR	2199090	Symbol	safe_gids		2198991						
ANR	2199091	Symbol	gid		2198991						
ANR	2199092	Symbol	safe_checks_and_set_gids		2198991						
ANR	2199093	Symbol	seteuid		2198991						
ANR	2199094	Symbol	setegid		2198991						
ANR	2199095	Symbol	& gid		2198991						
ANR	2199096	Function	safe_exec_as_user	1064:0:26648:29662							
ANR	2199097	FunctionDef	"safe_exec_as_user (uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , const char * exec_name , char * * args , char * * env , safe_id_range_list * keep_open_fds , const char * stdin_filename , const char * stdout_filename , const char * stderr_filename , const char * initial_dir , int is_std_univ)"		2199096	0					
ANR	2199098	CompoundStatement		1078:0:27190:29662	2199096	0					
ANR	2199099	IdentifierDeclStatement	int r ;	1079:4:27196:27201	2199096	0	True				
ANR	2199100	IdentifierDecl	r		2199096	0					
ANR	2199101	IdentifierDeclType	int		2199096	0					
ANR	2199102	Identifier	r		2199096	1					
ANR	2199103	ExpressionStatement	"r = safe_switch_to_uid ( uid , tracking_gid , safe_uids , safe_gids )"	1083:4:27334:27397	2199096	1	True				
ANR	2199104	AssignmentExpression	"r = safe_switch_to_uid ( uid , tracking_gid , safe_uids , safe_gids )"		2199096	0		=			
ANR	2199105	Identifier	r		2199096	0					
ANR	2199106	CallExpression	"safe_switch_to_uid ( uid , tracking_gid , safe_uids , safe_gids )"		2199096	1					
ANR	2199107	Callee	safe_switch_to_uid		2199096	0					
ANR	2199108	Identifier	safe_switch_to_uid		2199096	0					
ANR	2199109	ArgumentList	uid		2199096	1					
ANR	2199110	Argument	uid		2199096	0					
ANR	2199111	Identifier	uid		2199096	0					
ANR	2199112	Argument	tracking_gid		2199096	1					
ANR	2199113	Identifier	tracking_gid		2199096	0					
ANR	2199114	Argument	safe_uids		2199096	2					
ANR	2199115	Identifier	safe_uids		2199096	0					
ANR	2199116	Argument	safe_gids		2199096	3					
ANR	2199117	Identifier	safe_gids		2199096	0					
ANR	2199118	IfStatement	if ( r < 0 )		2199096	2					
ANR	2199119	Condition	r < 0	1084:8:27407:27411	2199096	0	True				
ANR	2199120	RelationalExpression	r < 0		2199096	0		<			
ANR	2199121	Identifier	r		2199096	0					
ANR	2199122	PrimaryExpression	0		2199096	1					
ANR	2199123	CompoundStatement		8:8:233:284	2199096	1					
ANR	2199124	IdentifierDeclStatement	char const * reason = safe_switch_to_uid_strerror ( r ) ;	1085:8:27424:27475	2199096	0	True				
ANR	2199125	IdentifierDecl	* reason = safe_switch_to_uid_strerror ( r )		2199096	0					
ANR	2199126	IdentifierDeclType	char const *		2199096	0					
ANR	2199127	Identifier	reason		2199096	1					
ANR	2199128	AssignmentExpression	* reason = safe_switch_to_uid_strerror ( r )		2199096	2		=			
ANR	2199129	Identifier	reason		2199096	0					
ANR	2199130	CallExpression	safe_switch_to_uid_strerror ( r )		2199096	1					
ANR	2199131	Callee	safe_switch_to_uid_strerror		2199096	0					
ANR	2199132	Identifier	safe_switch_to_uid_strerror		2199096	0					
ANR	2199133	ArgumentList	r		2199096	1					
ANR	2199134	Argument	r		2199096	0					
ANR	2199135	Identifier	r		2199096	0					
ANR	2199136	IfStatement	if ( ! reason )		2199096	1					
ANR	2199137	Condition	! reason	1086:12:27489:27495	2199096	0	True				
ANR	2199138	UnaryOperationExpression	! reason		2199096	0					
ANR	2199139	UnaryOperator	!		2199096	0					
ANR	2199140	Identifier	reason		2199096	1					
ANR	2199141	CompoundStatement		9:22:308:308	2199096	1					
ANR	2199142	ExpressionStatement	"reason = """""	1087:12:27513:27524	2199096	0	True				
ANR	2199143	AssignmentExpression	"reason = """""		2199096	0		=			
ANR	2199144	Identifier	reason		2199096	0					
ANR	2199145	PrimaryExpression	""""""		2199096	1					
ANR	2199146	ExpressionStatement	"fatal_error_exit ( 1 , ""error switching to uid %lu, tracking gid %lu: code %d %s"" , ( unsigned long ) uid , tracking_gid , r , reason )"	1089:8:27544:27691	2199096	2	True				
ANR	2199147	CallExpression	"fatal_error_exit ( 1 , ""error switching to uid %lu, tracking gid %lu: code %d %s"" , ( unsigned long ) uid , tracking_gid , r , reason )"		2199096	0					
ANR	2199148	Callee	fatal_error_exit		2199096	0					
ANR	2199149	Identifier	fatal_error_exit		2199096	0					
ANR	2199150	ArgumentList	1		2199096	1					
ANR	2199151	Argument	1		2199096	0					
ANR	2199152	PrimaryExpression	1		2199096	0					
ANR	2199153	Argument	"""error switching to uid %lu, tracking gid %lu: code %d %s"""		2199096	1					
ANR	2199154	PrimaryExpression	"""error switching to uid %lu, tracking gid %lu: code %d %s"""		2199096	0					
ANR	2199155	Argument	( unsigned long ) uid		2199096	2					
ANR	2199156	CastExpression	( unsigned long ) uid		2199096	0					
ANR	2199157	CastTarget	unsigned long		2199096	0					
ANR	2199158	Identifier	uid		2199096	1					
ANR	2199159	Argument	tracking_gid		2199096	3					
ANR	2199160	Identifier	tracking_gid		2199096	0					
ANR	2199161	Argument	r		2199096	4					
ANR	2199162	Identifier	r		2199096	0					
ANR	2199163	Argument	reason		2199096	5					
ANR	2199164	Identifier	reason		2199096	0					
ANR	2199165	IfStatement	if ( ! initial_dir )		2199096	3					
ANR	2199166	Condition	! initial_dir	1094:8:27769:27780	2199096	0	True				
ANR	2199167	UnaryOperationExpression	! initial_dir		2199096	0					
ANR	2199168	UnaryOperator	!		2199096	0					
ANR	2199169	Identifier	initial_dir		2199096	1					
ANR	2199170	CompoundStatement		17:22:592:592	2199096	1					
ANR	2199171	ExpressionStatement	"initial_dir = ""/"""	1095:8:27793:27810	2199096	0	True				
ANR	2199172	AssignmentExpression	"initial_dir = ""/"""		2199096	0		=			
ANR	2199173	Identifier	initial_dir		2199096	0					
ANR	2199174	PrimaryExpression	"""/"""		2199096	1					
ANR	2199175	ExpressionStatement	r = chdir ( initial_dir )	1098:4:27823:27845	2199096	4	True				
ANR	2199176	AssignmentExpression	r = chdir ( initial_dir )		2199096	0		=			
ANR	2199177	Identifier	r		2199096	0					
ANR	2199178	CallExpression	chdir ( initial_dir )		2199096	1					
ANR	2199179	Callee	chdir		2199096	0					
ANR	2199180	Identifier	chdir		2199096	0					
ANR	2199181	ArgumentList	initial_dir		2199096	1					
ANR	2199182	Argument	initial_dir		2199096	0					
ANR	2199183	Identifier	initial_dir		2199096	0					
ANR	2199184	IfStatement	if ( r == - 1 )		2199096	5					
ANR	2199185	Condition	r == - 1	1099:8:27855:27861	2199096	0	True				
ANR	2199186	EqualityExpression	r == - 1		2199096	0		==			
ANR	2199187	Identifier	r		2199096	0					
ANR	2199188	UnaryOperationExpression	- 1		2199096	1					
ANR	2199189	UnaryOperator	-		2199096	0					
ANR	2199190	PrimaryExpression	1		2199096	1					
ANR	2199191	CompoundStatement		22:17:673:673	2199096	1					
ANR	2199192	ExpressionStatement	"fatal_error_exit ( 1 , ""error chdir to (%s)"" , initial_dir )"	1100:8:27874:27929	2199096	0	True				
ANR	2199193	CallExpression	"fatal_error_exit ( 1 , ""error chdir to (%s)"" , initial_dir )"		2199096	0					
ANR	2199194	Callee	fatal_error_exit		2199096	0					
ANR	2199195	Identifier	fatal_error_exit		2199096	0					
ANR	2199196	ArgumentList	1		2199096	1					
ANR	2199197	Argument	1		2199096	0					
ANR	2199198	PrimaryExpression	1		2199096	0					
ANR	2199199	Argument	"""error chdir to (%s)"""		2199096	1					
ANR	2199200	PrimaryExpression	"""error chdir to (%s)"""		2199096	0					
ANR	2199201	Argument	initial_dir		2199096	2					
ANR	2199202	Identifier	initial_dir		2199096	0					
ANR	2199203	ExpressionStatement	r = safe_close_fds_except ( keep_open_fds )	1104:4:27992:28032	2199096	6	True				
ANR	2199204	AssignmentExpression	r = safe_close_fds_except ( keep_open_fds )		2199096	0		=			
ANR	2199205	Identifier	r		2199096	0					
ANR	2199206	CallExpression	safe_close_fds_except ( keep_open_fds )		2199096	1					
ANR	2199207	Callee	safe_close_fds_except		2199096	0					
ANR	2199208	Identifier	safe_close_fds_except		2199096	0					
ANR	2199209	ArgumentList	keep_open_fds		2199096	1					
ANR	2199210	Argument	keep_open_fds		2199096	0					
ANR	2199211	Identifier	keep_open_fds		2199096	0					
ANR	2199212	IfStatement	if ( r == - 1 )		2199096	7					
ANR	2199213	Condition	r == - 1	1105:8:28042:28048	2199096	0	True				
ANR	2199214	EqualityExpression	r == - 1		2199096	0		==			
ANR	2199215	Identifier	r		2199096	0					
ANR	2199216	UnaryOperationExpression	- 1		2199096	1					
ANR	2199217	UnaryOperator	-		2199096	0					
ANR	2199218	PrimaryExpression	1		2199096	1					
ANR	2199219	CompoundStatement		28:17:860:860	2199096	1					
ANR	2199220	ExpressionStatement	"fatal_error_exit ( 1 , ""error closing all file descriptors"" , initial_dir )"	1106:8:28061:28156	2199096	0	True				
ANR	2199221	CallExpression	"fatal_error_exit ( 1 , ""error closing all file descriptors"" , initial_dir )"		2199096	0					
ANR	2199222	Callee	fatal_error_exit		2199096	0					
ANR	2199223	Identifier	fatal_error_exit		2199096	0					
ANR	2199224	ArgumentList	1		2199096	1					
ANR	2199225	Argument	1		2199096	0					
ANR	2199226	PrimaryExpression	1		2199096	0					
ANR	2199227	Argument	"""error closing all file descriptors"""		2199096	1					
ANR	2199228	PrimaryExpression	"""error closing all file descriptors"""		2199096	0					
ANR	2199229	Argument	initial_dir		2199096	2					
ANR	2199230	Identifier	initial_dir		2199096	0					
ANR	2199231	IfStatement	"if ( ! safe_is_id_in_list ( keep_open_fds , 0 ) )"		2199096	8					
ANR	2199232	Condition	"! safe_is_id_in_list ( keep_open_fds , 0 )"	1112:8:28295:28331	2199096	0	True				
ANR	2199233	UnaryOperationExpression	"! safe_is_id_in_list ( keep_open_fds , 0 )"		2199096	0					
ANR	2199234	UnaryOperator	!		2199096	0					
ANR	2199235	CallExpression	"safe_is_id_in_list ( keep_open_fds , 0 )"		2199096	1					
ANR	2199236	Callee	safe_is_id_in_list		2199096	0					
ANR	2199237	Identifier	safe_is_id_in_list		2199096	0					
ANR	2199238	ArgumentList	keep_open_fds		2199096	1					
ANR	2199239	Argument	keep_open_fds		2199096	0					
ANR	2199240	Identifier	keep_open_fds		2199096	0					
ANR	2199241	Argument	0		2199096	1					
ANR	2199242	PrimaryExpression	0		2199096	0					
ANR	2199243	CompoundStatement		35:47:1143:1143	2199096	1					
ANR	2199244	ExpressionStatement	"r = safe_open_std_file ( 0 , stdin_filename )"	1113:8:28344:28385	2199096	0	True				
ANR	2199245	AssignmentExpression	"r = safe_open_std_file ( 0 , stdin_filename )"		2199096	0		=			
ANR	2199246	Identifier	r		2199096	0					
ANR	2199247	CallExpression	"safe_open_std_file ( 0 , stdin_filename )"		2199096	1					
ANR	2199248	Callee	safe_open_std_file		2199096	0					
ANR	2199249	Identifier	safe_open_std_file		2199096	0					
ANR	2199250	ArgumentList	0		2199096	1					
ANR	2199251	Argument	0		2199096	0					
ANR	2199252	PrimaryExpression	0		2199096	0					
ANR	2199253	Argument	stdin_filename		2199096	1					
ANR	2199254	Identifier	stdin_filename		2199096	0					
ANR	2199255	IfStatement	if ( r == - 1 )		2199096	1					
ANR	2199256	Condition	r == - 1	1114:12:28399:28405	2199096	0	True				
ANR	2199257	EqualityExpression	r == - 1		2199096	0		==			
ANR	2199258	Identifier	r		2199096	0					
ANR	2199259	UnaryOperationExpression	- 1		2199096	1					
ANR	2199260	UnaryOperator	-		2199096	0					
ANR	2199261	PrimaryExpression	1		2199096	1					
ANR	2199262	CompoundStatement		37:21:1217:1217	2199096	1					
ANR	2199263	ExpressionStatement	"fatal_error_exit ( 1 , ""error opening stdin"" )"	1115:12:28422:28464	2199096	0	True				
ANR	2199264	CallExpression	"fatal_error_exit ( 1 , ""error opening stdin"" )"		2199096	0					
ANR	2199265	Callee	fatal_error_exit		2199096	0					
ANR	2199266	Identifier	fatal_error_exit		2199096	0					
ANR	2199267	ArgumentList	1		2199096	1					
ANR	2199268	Argument	1		2199096	0					
ANR	2199269	PrimaryExpression	1		2199096	0					
ANR	2199270	Argument	"""error opening stdin"""		2199096	1					
ANR	2199271	PrimaryExpression	"""error opening stdin"""		2199096	0					
ANR	2199272	IfStatement	"if ( ! safe_is_id_in_list ( keep_open_fds , 1 ) )"		2199096	9					
ANR	2199273	Condition	"! safe_is_id_in_list ( keep_open_fds , 1 )"	1119:8:28491:28527	2199096	0	True				
ANR	2199274	UnaryOperationExpression	"! safe_is_id_in_list ( keep_open_fds , 1 )"		2199096	0					
ANR	2199275	UnaryOperator	!		2199096	0					
ANR	2199276	CallExpression	"safe_is_id_in_list ( keep_open_fds , 1 )"		2199096	1					
ANR	2199277	Callee	safe_is_id_in_list		2199096	0					
ANR	2199278	Identifier	safe_is_id_in_list		2199096	0					
ANR	2199279	ArgumentList	keep_open_fds		2199096	1					
ANR	2199280	Argument	keep_open_fds		2199096	0					
ANR	2199281	Identifier	keep_open_fds		2199096	0					
ANR	2199282	Argument	1		2199096	1					
ANR	2199283	PrimaryExpression	1		2199096	0					
ANR	2199284	CompoundStatement		42:47:1339:1339	2199096	1					
ANR	2199285	ExpressionStatement	"r = safe_open_std_file ( 1 , stdout_filename )"	1120:8:28540:28582	2199096	0	True				
ANR	2199286	AssignmentExpression	"r = safe_open_std_file ( 1 , stdout_filename )"		2199096	0		=			
ANR	2199287	Identifier	r		2199096	0					
ANR	2199288	CallExpression	"safe_open_std_file ( 1 , stdout_filename )"		2199096	1					
ANR	2199289	Callee	safe_open_std_file		2199096	0					
ANR	2199290	Identifier	safe_open_std_file		2199096	0					
ANR	2199291	ArgumentList	1		2199096	1					
ANR	2199292	Argument	1		2199096	0					
ANR	2199293	PrimaryExpression	1		2199096	0					
ANR	2199294	Argument	stdout_filename		2199096	1					
ANR	2199295	Identifier	stdout_filename		2199096	0					
ANR	2199296	IfStatement	if ( r == - 1 )		2199096	1					
ANR	2199297	Condition	r == - 1	1121:12:28596:28602	2199096	0	True				
ANR	2199298	EqualityExpression	r == - 1		2199096	0		==			
ANR	2199299	Identifier	r		2199096	0					
ANR	2199300	UnaryOperationExpression	- 1		2199096	1					
ANR	2199301	UnaryOperator	-		2199096	0					
ANR	2199302	PrimaryExpression	1		2199096	1					
ANR	2199303	CompoundStatement		44:21:1414:1414	2199096	1					
ANR	2199304	ExpressionStatement	"fatal_error_exit ( 1 , ""error opening stdout"" )"	1122:12:28619:28662	2199096	0	True				
ANR	2199305	CallExpression	"fatal_error_exit ( 1 , ""error opening stdout"" )"		2199096	0					
ANR	2199306	Callee	fatal_error_exit		2199096	0					
ANR	2199307	Identifier	fatal_error_exit		2199096	0					
ANR	2199308	ArgumentList	1		2199096	1					
ANR	2199309	Argument	1		2199096	0					
ANR	2199310	PrimaryExpression	1		2199096	0					
ANR	2199311	Argument	"""error opening stdout"""		2199096	1					
ANR	2199312	PrimaryExpression	"""error opening stdout"""		2199096	0					
ANR	2199313	IfStatement	"if ( ! safe_is_id_in_list ( keep_open_fds , 2 ) )"		2199096	10					
ANR	2199314	Condition	"! safe_is_id_in_list ( keep_open_fds , 2 )"	1126:8:28689:28725	2199096	0	True				
ANR	2199315	UnaryOperationExpression	"! safe_is_id_in_list ( keep_open_fds , 2 )"		2199096	0					
ANR	2199316	UnaryOperator	!		2199096	0					
ANR	2199317	CallExpression	"safe_is_id_in_list ( keep_open_fds , 2 )"		2199096	1					
ANR	2199318	Callee	safe_is_id_in_list		2199096	0					
ANR	2199319	Identifier	safe_is_id_in_list		2199096	0					
ANR	2199320	ArgumentList	keep_open_fds		2199096	1					
ANR	2199321	Argument	keep_open_fds		2199096	0					
ANR	2199322	Identifier	keep_open_fds		2199096	0					
ANR	2199323	Argument	2		2199096	1					
ANR	2199324	PrimaryExpression	2		2199096	0					
ANR	2199325	CompoundStatement		49:47:1537:1537	2199096	1					
ANR	2199326	ExpressionStatement	"r = safe_open_std_file ( 2 , stderr_filename )"	1127:8:28738:28780	2199096	0	True				
ANR	2199327	AssignmentExpression	"r = safe_open_std_file ( 2 , stderr_filename )"		2199096	0		=			
ANR	2199328	Identifier	r		2199096	0					
ANR	2199329	CallExpression	"safe_open_std_file ( 2 , stderr_filename )"		2199096	1					
ANR	2199330	Callee	safe_open_std_file		2199096	0					
ANR	2199331	Identifier	safe_open_std_file		2199096	0					
ANR	2199332	ArgumentList	2		2199096	1					
ANR	2199333	Argument	2		2199096	0					
ANR	2199334	PrimaryExpression	2		2199096	0					
ANR	2199335	Argument	stderr_filename		2199096	1					
ANR	2199336	Identifier	stderr_filename		2199096	0					
ANR	2199337	IfStatement	if ( r == - 1 )		2199096	1					
ANR	2199338	Condition	r == - 1	1128:12:28794:28800	2199096	0	True				
ANR	2199339	EqualityExpression	r == - 1		2199096	0		==			
ANR	2199340	Identifier	r		2199096	0					
ANR	2199341	UnaryOperationExpression	- 1		2199096	1					
ANR	2199342	UnaryOperator	-		2199096	0					
ANR	2199343	PrimaryExpression	1		2199096	1					
ANR	2199344	CompoundStatement		51:21:1612:1612	2199096	1					
ANR	2199345	ExpressionStatement	"fatal_error_exit ( 1 , ""error opening stderr"" )"	1129:12:28817:28860	2199096	0	True				
ANR	2199346	CallExpression	"fatal_error_exit ( 1 , ""error opening stderr"" )"		2199096	0					
ANR	2199347	Callee	fatal_error_exit		2199096	0					
ANR	2199348	Identifier	fatal_error_exit		2199096	0					
ANR	2199349	ArgumentList	1		2199096	1					
ANR	2199350	Argument	1		2199096	0					
ANR	2199351	PrimaryExpression	1		2199096	0					
ANR	2199352	Argument	"""error opening stderr"""		2199096	1					
ANR	2199353	PrimaryExpression	"""error opening stderr"""		2199096	0					
ANR	2199354	IfStatement	if ( is_std_univ )		2199096	11					
ANR	2199355	Condition	is_std_univ	1139:8:29163:29173	2199096	0	True				
ANR	2199356	Identifier	is_std_univ		2199096	0					
ANR	2199357	CompoundStatement		64:8:2013:2058	2199096	1					
ANR	2199358	IdentifierDeclStatement	unsigned long persona = PER_LINUX32 | 0x40000 ;	1141:8:29204:29249	2199096	0	True				
ANR	2199359	IdentifierDecl	persona = PER_LINUX32 | 0x40000		2199096	0					
ANR	2199360	IdentifierDeclType	unsigned long		2199096	0					
ANR	2199361	Identifier	persona		2199096	1					
ANR	2199362	AssignmentExpression	persona = PER_LINUX32 | 0x40000		2199096	2		=			
ANR	2199363	Identifier	persona		2199096	0					
ANR	2199364	InclusiveOrExpression	PER_LINUX32 | 0x40000		2199096	1		|			
ANR	2199365	Identifier	PER_LINUX32		2199096	0					
ANR	2199366	PrimaryExpression	0x40000		2199096	1					
ANR	2199367	IfStatement	"if ( syscall ( SYS_personality , persona ) == - 1 )"		2199096	1					
ANR	2199368	Condition	"syscall ( SYS_personality , persona ) == - 1"	1145:12:29333:29371	2199096	0	True				
ANR	2199369	EqualityExpression	"syscall ( SYS_personality , persona ) == - 1"		2199096	0		==			
ANR	2199370	CallExpression	"syscall ( SYS_personality , persona )"		2199096	0					
ANR	2199371	Callee	syscall		2199096	0					
ANR	2199372	Identifier	syscall		2199096	0					
ANR	2199373	ArgumentList	SYS_personality		2199096	1					
ANR	2199374	Argument	SYS_personality		2199096	0					
ANR	2199375	Identifier	SYS_personality		2199096	0					
ANR	2199376	Argument	persona		2199096	1					
ANR	2199377	Identifier	persona		2199096	0					
ANR	2199378	UnaryOperationExpression	- 1		2199096	1					
ANR	2199379	UnaryOperator	-		2199096	0					
ANR	2199380	PrimaryExpression	1		2199096	1					
ANR	2199381	CompoundStatement		68:53:2183:2183	2199096	1					
ANR	2199382	ExpressionStatement	"fatal_error_exit ( 1 , ""error setting personality: %s"" )"	1146:12:29388:29440	2199096	0	True				
ANR	2199383	CallExpression	"fatal_error_exit ( 1 , ""error setting personality: %s"" )"		2199096	0					
ANR	2199384	Callee	fatal_error_exit		2199096	0					
ANR	2199385	Identifier	fatal_error_exit		2199096	0					
ANR	2199386	ArgumentList	1		2199096	1					
ANR	2199387	Argument	1		2199096	0					
ANR	2199388	PrimaryExpression	1		2199096	0					
ANR	2199389	Argument	"""error setting personality: %s"""		2199096	1					
ANR	2199390	PrimaryExpression	"""error setting personality: %s"""		2199096	0					
ANR	2199391	ExpressionStatement	"r = execve ( exec_name , ( char * * ) args , ( char * * ) env )"	1152:4:29500:29552	2199096	12	True				
ANR	2199392	AssignmentExpression	"r = execve ( exec_name , ( char * * ) args , ( char * * ) env )"		2199096	0		=			
ANR	2199393	Identifier	r		2199096	0					
ANR	2199394	CallExpression	"execve ( exec_name , ( char * * ) args , ( char * * ) env )"		2199096	1					
ANR	2199395	Callee	execve		2199096	0					
ANR	2199396	Identifier	execve		2199096	0					
ANR	2199397	ArgumentList	exec_name		2199096	1					
ANR	2199398	Argument	exec_name		2199096	0					
ANR	2199399	Identifier	exec_name		2199096	0					
ANR	2199400	Argument	( char * * ) args		2199096	1					
ANR	2199401	CastExpression	( char * * ) args		2199096	0					
ANR	2199402	CastTarget	char * *		2199096	0					
ANR	2199403	Identifier	args		2199096	1					
ANR	2199404	Argument	( char * * ) env		2199096	2					
ANR	2199405	CastExpression	( char * * ) env		2199096	0					
ANR	2199406	CastTarget	char * *		2199096	0					
ANR	2199407	Identifier	env		2199096	1					
ANR	2199408	IfStatement	if ( r == - 1 )		2199096	13					
ANR	2199409	Condition	r == - 1	1153:8:29562:29568	2199096	0	True				
ANR	2199410	EqualityExpression	r == - 1		2199096	0		==			
ANR	2199411	Identifier	r		2199096	0					
ANR	2199412	UnaryOperationExpression	- 1		2199096	1					
ANR	2199413	UnaryOperator	-		2199096	0					
ANR	2199414	PrimaryExpression	1		2199096	1					
ANR	2199415	CompoundStatement		76:17:2380:2380	2199096	1					
ANR	2199416	ExpressionStatement	"fatal_error_exit ( 1 , ""error exec'ing: %s"" , strerror ( errno ) )"	1154:8:29581:29639	2199096	0	True				
ANR	2199417	CallExpression	"fatal_error_exit ( 1 , ""error exec'ing: %s"" , strerror ( errno ) )"		2199096	0					
ANR	2199418	Callee	fatal_error_exit		2199096	0					
ANR	2199419	Identifier	fatal_error_exit		2199096	0					
ANR	2199420	ArgumentList	1		2199096	1					
ANR	2199421	Argument	1		2199096	0					
ANR	2199422	PrimaryExpression	1		2199096	0					
ANR	2199423	Argument	"""error exec'ing: %s"""		2199096	1					
ANR	2199424	PrimaryExpression	"""error exec'ing: %s"""		2199096	0					
ANR	2199425	Argument	strerror ( errno )		2199096	2					
ANR	2199426	CallExpression	strerror ( errno )		2199096	0					
ANR	2199427	Callee	strerror		2199096	0					
ANR	2199428	Identifier	strerror		2199096	0					
ANR	2199429	ArgumentList	errno		2199096	1					
ANR	2199430	Argument	errno		2199096	0					
ANR	2199431	Identifier	errno		2199096	0					
ANR	2199432	ReturnStatement	return 0 ;	1157:4:29652:29660	2199096	14	True				
ANR	2199433	PrimaryExpression	0		2199096	0					
ANR	2199434	ReturnType	int		2199096	1					
ANR	2199435	Identifier	safe_exec_as_user		2199096	2					
ANR	2199436	ParameterList	"uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , const char * exec_name , char * * args , char * * env , safe_id_range_list * keep_open_fds , const char * stdin_filename , const char * stdout_filename , const char * stderr_filename , const char * initial_dir , int is_std_univ"		2199096	3					
ANR	2199437	Parameter	uid_t uid	1065:18:26670:26678	2199096	0	True				
ANR	2199438	ParameterType	uid_t		2199096	0					
ANR	2199439	Identifier	uid		2199096	1					
ANR	2199440	Parameter	gid_t tracking_gid	1066:18:26699:26716	2199096	1	True				
ANR	2199441	ParameterType	gid_t		2199096	0					
ANR	2199442	Identifier	tracking_gid		2199096	1					
ANR	2199443	Parameter	safe_id_range_list * safe_uids	1067:18:26737:26765	2199096	2	True				
ANR	2199444	ParameterType	safe_id_range_list *		2199096	0					
ANR	2199445	Identifier	safe_uids		2199096	1					
ANR	2199446	Parameter	safe_id_range_list * safe_gids	1068:18:26786:26814	2199096	3	True				
ANR	2199447	ParameterType	safe_id_range_list *		2199096	0					
ANR	2199448	Identifier	safe_gids		2199096	1					
ANR	2199449	Parameter	const char * exec_name	1069:18:26835:26855	2199096	4	True				
ANR	2199450	ParameterType	const char *		2199096	0					
ANR	2199451	Identifier	exec_name		2199096	1					
ANR	2199452	Parameter	char * * args	1070:18:26876:26886	2199096	5	True				
ANR	2199453	ParameterType	char * *		2199096	0					
ANR	2199454	Identifier	args		2199096	1					
ANR	2199455	Parameter	char * * env	1071:18:26907:26916	2199096	6	True				
ANR	2199456	ParameterType	char * *		2199096	0					
ANR	2199457	Identifier	env		2199096	1					
ANR	2199458	Parameter	safe_id_range_list * keep_open_fds	1072:18:26937:26969	2199096	7	True				
ANR	2199459	ParameterType	safe_id_range_list *		2199096	0					
ANR	2199460	Identifier	keep_open_fds		2199096	1					
ANR	2199461	Parameter	const char * stdin_filename	1073:18:26990:27015	2199096	8	True				
ANR	2199462	ParameterType	const char *		2199096	0					
ANR	2199463	Identifier	stdin_filename		2199096	1					
ANR	2199464	Parameter	const char * stdout_filename	1074:18:27036:27062	2199096	9	True				
ANR	2199465	ParameterType	const char *		2199096	0					
ANR	2199466	Identifier	stdout_filename		2199096	1					
ANR	2199467	Parameter	const char * stderr_filename	1075:18:27083:27109	2199096	10	True				
ANR	2199468	ParameterType	const char *		2199096	0					
ANR	2199469	Identifier	stderr_filename		2199096	1					
ANR	2199470	Parameter	const char * initial_dir	1076:18:27130:27152	2199096	11	True				
ANR	2199471	ParameterType	const char *		2199096	0					
ANR	2199472	Identifier	initial_dir		2199096	1					
ANR	2199473	Parameter	int is_std_univ	1077:18:27173:27187	2199096	12	True				
ANR	2199474	ParameterType	int		2199096	0					
ANR	2199475	Identifier	is_std_univ		2199096	1					
ANR	2199476	CFGEntryNode	ENTRY		2199096		True				
ANR	2199477	CFGExitNode	EXIT		2199096		True				
ANR	2199478	Symbol	tracking_gid		2199096						
ANR	2199479	Symbol	reason		2199096						
ANR	2199480	Symbol	syscall		2199096						
ANR	2199481	Symbol	safe_uids		2199096						
ANR	2199482	Symbol	stdin_filename		2199096						
ANR	2199483	Symbol	safe_switch_to_uid		2199096						
ANR	2199484	Symbol	safe_close_fds_except		2199096						
ANR	2199485	Symbol	stdout_filename		2199096						
ANR	2199486	Symbol	safe_is_id_in_list		2199096						
ANR	2199487	Symbol	uid		2199096						
ANR	2199488	Symbol	safe_switch_to_uid_strerror		2199096						
ANR	2199489	Symbol	is_std_univ		2199096						
ANR	2199490	Symbol	safe_open_std_file		2199096						
ANR	2199491	Symbol	initial_dir		2199096						
ANR	2199492	Symbol	errno		2199096						
ANR	2199493	Symbol	persona		2199096						
ANR	2199494	Symbol	execve		2199096						
ANR	2199495	Symbol	chdir		2199096						
ANR	2199496	Symbol	env		2199096						
ANR	2199497	Symbol	PER_LINUX32		2199096						
ANR	2199498	Symbol	args		2199096						
ANR	2199499	Symbol	strerror		2199096						
ANR	2199500	Symbol	keep_open_fds		2199096						
ANR	2199501	Symbol	r		2199096						
ANR	2199502	Symbol	safe_gids		2199096						
ANR	2199503	Symbol	exec_name		2199096						
ANR	2199504	Symbol	SYS_personality		2199096						
ANR	2199505	Symbol	stderr_filename		2199096						
ANR	2199506	Function	opendir_with_fd	1176:0:29988:31029							
ANR	2199507	FunctionDef	"opendir_with_fd (const char * path , DIR * * dir_ptr , int * fd_ptr , struct stat * stat_buf)"		2199506	0					
ANR	2199508	CompoundStatement		1179:0:30101:31029	2199506	0					
ANR	2199509	IdentifierDeclStatement	int fd = - 1 ;	1180:4:30107:30118	2199506	0	True				
ANR	2199510	IdentifierDecl	fd = - 1		2199506	0					
ANR	2199511	IdentifierDeclType	int		2199506	0					
ANR	2199512	Identifier	fd		2199506	1					
ANR	2199513	AssignmentExpression	fd = - 1		2199506	2		=			
ANR	2199514	Identifier	fd		2199506	0					
ANR	2199515	UnaryOperationExpression	- 1		2199506	1					
ANR	2199516	UnaryOperator	-		2199506	0					
ANR	2199517	PrimaryExpression	1		2199506	1					
ANR	2199518	IdentifierDeclStatement	struct stat tmp_stat_buf ;	1181:4:30124:30148	2199506	1	True				
ANR	2199519	IdentifierDecl	tmp_stat_buf		2199506	0					
ANR	2199520	IdentifierDeclType	struct stat		2199506	0					
ANR	2199521	Identifier	tmp_stat_buf		2199506	1					
ANR	2199522	IdentifierDeclStatement	DIR * dir = NULL ;	1182:4:30154:30169	2199506	2	True				
ANR	2199523	IdentifierDecl	* dir = NULL		2199506	0					
ANR	2199524	IdentifierDeclType	DIR *		2199506	0					
ANR	2199525	Identifier	dir		2199506	1					
ANR	2199526	AssignmentExpression	* dir = NULL		2199506	2		=			
ANR	2199527	Identifier	NULL		2199506	0					
ANR	2199528	Identifier	NULL		2199506	1					
ANR	2199529	IdentifierDeclStatement	dev_t dev ;	1183:4:30175:30184	2199506	3	True				
ANR	2199530	IdentifierDecl	dev		2199506	0					
ANR	2199531	IdentifierDeclType	dev_t		2199506	0					
ANR	2199532	Identifier	dev		2199506	1					
ANR	2199533	IdentifierDeclStatement	ino_t ino ;	1184:4:30190:30199	2199506	4	True				
ANR	2199534	IdentifierDecl	ino		2199506	0					
ANR	2199535	IdentifierDeclType	ino_t		2199506	0					
ANR	2199536	Identifier	ino		2199506	1					
ANR	2199537	ExpressionStatement	"fd = open ( path , O_RDONLY )"	1186:4:30206:30231	2199506	5	True				
ANR	2199538	AssignmentExpression	"fd = open ( path , O_RDONLY )"		2199506	0		=			
ANR	2199539	Identifier	fd		2199506	0					
ANR	2199540	CallExpression	"open ( path , O_RDONLY )"		2199506	1					
ANR	2199541	Callee	open		2199506	0					
ANR	2199542	Identifier	open		2199506	0					
ANR	2199543	ArgumentList	path		2199506	1					
ANR	2199544	Argument	path		2199506	0					
ANR	2199545	Identifier	path		2199506	0					
ANR	2199546	Argument	O_RDONLY		2199506	1					
ANR	2199547	Identifier	O_RDONLY		2199506	0					
ANR	2199548	IfStatement	if ( fd == - 1 )		2199506	6					
ANR	2199549	Condition	fd == - 1	1187:8:30241:30248	2199506	0	True				
ANR	2199550	EqualityExpression	fd == - 1		2199506	0		==			
ANR	2199551	Identifier	fd		2199506	0					
ANR	2199552	UnaryOperationExpression	- 1		2199506	1					
ANR	2199553	UnaryOperator	-		2199506	0					
ANR	2199554	PrimaryExpression	1		2199506	1					
ANR	2199555	CompoundStatement		9:18:149:149	2199506	1					
ANR	2199556	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1188:8:30261:30289	2199506	0	True				
ANR	2199557	Identifier	OPENDIR_WITH_FD_FAILURE		2199506	0					
ANR	2199558	IfStatement	"if ( fstat ( fd , & tmp_stat_buf ) == - 1 )"		2199506	7					
ANR	2199559	Condition	"fstat ( fd , & tmp_stat_buf ) == - 1"	1190:8:30305:30334	2199506	0	True				
ANR	2199560	EqualityExpression	"fstat ( fd , & tmp_stat_buf ) == - 1"		2199506	0		==			
ANR	2199561	CallExpression	"fstat ( fd , & tmp_stat_buf )"		2199506	0					
ANR	2199562	Callee	fstat		2199506	0					
ANR	2199563	Identifier	fstat		2199506	0					
ANR	2199564	ArgumentList	fd		2199506	1					
ANR	2199565	Argument	fd		2199506	0					
ANR	2199566	Identifier	fd		2199506	0					
ANR	2199567	Argument	& tmp_stat_buf		2199506	1					
ANR	2199568	UnaryOperationExpression	& tmp_stat_buf		2199506	0					
ANR	2199569	UnaryOperator	&		2199506	0					
ANR	2199570	Identifier	tmp_stat_buf		2199506	1					
ANR	2199571	UnaryOperationExpression	- 1		2199506	1					
ANR	2199572	UnaryOperator	-		2199506	0					
ANR	2199573	PrimaryExpression	1		2199506	1					
ANR	2199574	CompoundStatement		12:40:235:235	2199506	1					
ANR	2199575	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1191:8:30347:30375	2199506	0	True				
ANR	2199576	Identifier	OPENDIR_WITH_FD_FAILURE		2199506	0					
ANR	2199577	ExpressionStatement	dir = opendir ( path )	1193:4:30387:30406	2199506	8	True				
ANR	2199578	AssignmentExpression	dir = opendir ( path )		2199506	0		=			
ANR	2199579	Identifier	dir		2199506	0					
ANR	2199580	CallExpression	opendir ( path )		2199506	1					
ANR	2199581	Callee	opendir		2199506	0					
ANR	2199582	Identifier	opendir		2199506	0					
ANR	2199583	ArgumentList	path		2199506	1					
ANR	2199584	Argument	path		2199506	0					
ANR	2199585	Identifier	path		2199506	0					
ANR	2199586	IfStatement	if ( dir == NULL )		2199506	9					
ANR	2199587	Condition	dir == NULL	1194:8:30416:30426	2199506	0	True				
ANR	2199588	EqualityExpression	dir == NULL		2199506	0		==			
ANR	2199589	Identifier	dir		2199506	0					
ANR	2199590	Identifier	NULL		2199506	1					
ANR	2199591	CompoundStatement		16:21:327:327	2199506	1					
ANR	2199592	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1195:8:30439:30467	2199506	0	True				
ANR	2199593	Identifier	OPENDIR_WITH_FD_FAILURE		2199506	0					
ANR	2199594	ExpressionStatement	dev = tmp_stat_buf . st_dev	1197:4:30479:30504	2199506	10	True				
ANR	2199595	AssignmentExpression	dev = tmp_stat_buf . st_dev		2199506	0		=			
ANR	2199596	Identifier	dev		2199506	0					
ANR	2199597	MemberAccess	tmp_stat_buf . st_dev		2199506	1					
ANR	2199598	Identifier	tmp_stat_buf		2199506	0					
ANR	2199599	Identifier	st_dev		2199506	1					
ANR	2199600	ExpressionStatement	ino = tmp_stat_buf . st_ino	1198:4:30510:30535	2199506	11	True				
ANR	2199601	AssignmentExpression	ino = tmp_stat_buf . st_ino		2199506	0		=			
ANR	2199602	Identifier	ino		2199506	0					
ANR	2199603	MemberAccess	tmp_stat_buf . st_ino		2199506	1					
ANR	2199604	Identifier	tmp_stat_buf		2199506	0					
ANR	2199605	Identifier	st_ino		2199506	1					
ANR	2199606	IfStatement	"if ( lstat ( ""."" , & tmp_stat_buf ) == - 1 )"		2199506	12					
ANR	2199607	Condition	"lstat ( ""."" , & tmp_stat_buf ) == - 1"	1199:8:30545:30575	2199506	0	True				
ANR	2199608	EqualityExpression	"lstat ( ""."" , & tmp_stat_buf ) == - 1"		2199506	0		==			
ANR	2199609	CallExpression	"lstat ( ""."" , & tmp_stat_buf )"		2199506	0					
ANR	2199610	Callee	lstat		2199506	0					
ANR	2199611	Identifier	lstat		2199506	0					
ANR	2199612	ArgumentList	"""."""		2199506	1					
ANR	2199613	Argument	"""."""		2199506	0					
ANR	2199614	PrimaryExpression	"""."""		2199506	0					
ANR	2199615	Argument	& tmp_stat_buf		2199506	1					
ANR	2199616	UnaryOperationExpression	& tmp_stat_buf		2199506	0					
ANR	2199617	UnaryOperator	&		2199506	0					
ANR	2199618	Identifier	tmp_stat_buf		2199506	1					
ANR	2199619	UnaryOperationExpression	- 1		2199506	1					
ANR	2199620	UnaryOperator	-		2199506	0					
ANR	2199621	PrimaryExpression	1		2199506	1					
ANR	2199622	CompoundStatement		21:41:476:476	2199506	1					
ANR	2199623	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1200:8:30588:30616	2199506	0	True				
ANR	2199624	Identifier	OPENDIR_WITH_FD_FAILURE		2199506	0					
ANR	2199625	IfStatement	if ( ( tmp_stat_buf . st_dev != dev ) || ( tmp_stat_buf . st_ino != ino ) )		2199506	13					
ANR	2199626	Condition	( tmp_stat_buf . st_dev != dev ) || ( tmp_stat_buf . st_ino != ino )	1202:8:30632:30691	2199506	0	True				
ANR	2199627	OrExpression	( tmp_stat_buf . st_dev != dev ) || ( tmp_stat_buf . st_ino != ino )		2199506	0		||			
ANR	2199628	EqualityExpression	tmp_stat_buf . st_dev != dev		2199506	0		!=			
ANR	2199629	MemberAccess	tmp_stat_buf . st_dev		2199506	0					
ANR	2199630	Identifier	tmp_stat_buf		2199506	0					
ANR	2199631	Identifier	st_dev		2199506	1					
ANR	2199632	Identifier	dev		2199506	1					
ANR	2199633	EqualityExpression	tmp_stat_buf . st_ino != ino		2199506	1		!=			
ANR	2199634	MemberAccess	tmp_stat_buf . st_ino		2199506	0					
ANR	2199635	Identifier	tmp_stat_buf		2199506	0					
ANR	2199636	Identifier	st_ino		2199506	1					
ANR	2199637	Identifier	ino		2199506	1					
ANR	2199638	CompoundStatement		24:70:592:592	2199506	1					
ANR	2199639	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1203:8:30704:30732	2199506	0	True				
ANR	2199640	Identifier	OPENDIR_WITH_FD_FAILURE		2199506	0					
ANR	2199641	ExpressionStatement	* dir_ptr = dir	1206:4:30745:30759	2199506	14	True				
ANR	2199642	AssignmentExpression	* dir_ptr = dir		2199506	0		=			
ANR	2199643	UnaryOperationExpression	* dir_ptr		2199506	0					
ANR	2199644	UnaryOperator	*		2199506	0					
ANR	2199645	Identifier	dir_ptr		2199506	1					
ANR	2199646	Identifier	dir		2199506	1					
ANR	2199647	ExpressionStatement	* fd_ptr = fd	1207:4:30765:30777	2199506	15	True				
ANR	2199648	AssignmentExpression	* fd_ptr = fd		2199506	0		=			
ANR	2199649	UnaryOperationExpression	* fd_ptr		2199506	0					
ANR	2199650	UnaryOperator	*		2199506	0					
ANR	2199651	Identifier	fd_ptr		2199506	1					
ANR	2199652	Identifier	fd		2199506	1					
ANR	2199653	IfStatement	if ( stat_buf != NULL )		2199506	16					
ANR	2199654	Condition	stat_buf != NULL	1208:8:30787:30802	2199506	0	True				
ANR	2199655	EqualityExpression	stat_buf != NULL		2199506	0		!=			
ANR	2199656	Identifier	stat_buf		2199506	0					
ANR	2199657	Identifier	NULL		2199506	1					
ANR	2199658	CompoundStatement		30:26:703:703	2199506	1					
ANR	2199659	ExpressionStatement	"memcpy ( stat_buf , & tmp_stat_buf , sizeof ( struct stat ) )"	1209:8:30815:30867	2199506	0	True				
ANR	2199660	CallExpression	"memcpy ( stat_buf , & tmp_stat_buf , sizeof ( struct stat ) )"		2199506	0					
ANR	2199661	Callee	memcpy		2199506	0					
ANR	2199662	Identifier	memcpy		2199506	0					
ANR	2199663	ArgumentList	stat_buf		2199506	1					
ANR	2199664	Argument	stat_buf		2199506	0					
ANR	2199665	Identifier	stat_buf		2199506	0					
ANR	2199666	Argument	& tmp_stat_buf		2199506	1					
ANR	2199667	UnaryOperationExpression	& tmp_stat_buf		2199506	0					
ANR	2199668	UnaryOperator	&		2199506	0					
ANR	2199669	Identifier	tmp_stat_buf		2199506	1					
ANR	2199670	Argument	sizeof ( struct stat )		2199506	2					
ANR	2199671	SizeofExpression	sizeof ( struct stat )		2199506	0					
ANR	2199672	Sizeof	sizeof		2199506	0					
ANR	2199673	SizeofOperand	struct stat		2199506	1					
ANR	2199674	ReturnStatement	return 0 ;	1211:4:30879:30887	2199506	17	True				
ANR	2199675	PrimaryExpression	0		2199506	0					
ANR	2199676	Label	OPENDIR_WITH_FD_FAILURE :	1213:2:30892:30915	2199506	18	True				
ANR	2199677	Identifier	OPENDIR_WITH_FD_FAILURE		2199506	0					
ANR	2199678	IfStatement	if ( fd != - 1 )		2199506	19					
ANR	2199679	Condition	fd != - 1	1214:8:30925:30932	2199506	0	True				
ANR	2199680	EqualityExpression	fd != - 1		2199506	0		!=			
ANR	2199681	Identifier	fd		2199506	0					
ANR	2199682	UnaryOperationExpression	- 1		2199506	1					
ANR	2199683	UnaryOperator	-		2199506	0					
ANR	2199684	PrimaryExpression	1		2199506	1					
ANR	2199685	CompoundStatement		36:18:833:833	2199506	1					
ANR	2199686	ExpressionStatement	close ( fd )	1215:8:30945:30954	2199506	0	True				
ANR	2199687	CallExpression	close ( fd )		2199506	0					
ANR	2199688	Callee	close		2199506	0					
ANR	2199689	Identifier	close		2199506	0					
ANR	2199690	ArgumentList	fd		2199506	1					
ANR	2199691	Argument	fd		2199506	0					
ANR	2199692	Identifier	fd		2199506	0					
ANR	2199693	IfStatement	if ( dir != NULL )		2199506	20					
ANR	2199694	Condition	dir != NULL	1217:8:30970:30980	2199506	0	True				
ANR	2199695	EqualityExpression	dir != NULL		2199506	0		!=			
ANR	2199696	Identifier	dir		2199506	0					
ANR	2199697	Identifier	NULL		2199506	1					
ANR	2199698	CompoundStatement		39:21:881:881	2199506	1					
ANR	2199699	ExpressionStatement	closedir ( dir )	1218:8:30993:31006	2199506	0	True				
ANR	2199700	CallExpression	closedir ( dir )		2199506	0					
ANR	2199701	Callee	closedir		2199506	0					
ANR	2199702	Identifier	closedir		2199506	0					
ANR	2199703	ArgumentList	dir		2199506	1					
ANR	2199704	Argument	dir		2199506	0					
ANR	2199705	Identifier	dir		2199506	0					
ANR	2199706	ReturnStatement	return - 1 ;	1220:4:31018:31027	2199506	21	True				
ANR	2199707	UnaryOperationExpression	- 1		2199506	0					
ANR	2199708	UnaryOperator	-		2199506	0					
ANR	2199709	PrimaryExpression	1		2199506	1					
ANR	2199710	ReturnType	static int		2199506	1					
ANR	2199711	Identifier	opendir_with_fd		2199506	2					
ANR	2199712	ParameterList	"const char * path , DIR * * dir_ptr , int * fd_ptr , struct stat * stat_buf"		2199506	3					
ANR	2199713	Parameter	const char * path	1177:16:30015:30030	2199506	0	True				
ANR	2199714	ParameterType	const char *		2199506	0					
ANR	2199715	Identifier	path		2199506	1					
ANR	2199716	Parameter	DIR * * dir_ptr	1178:16:30049:30062	2199506	1	True				
ANR	2199717	ParameterType	DIR * *		2199506	0					
ANR	2199718	Identifier	dir_ptr		2199506	1					
ANR	2199719	Parameter	int * fd_ptr	1178:32:30065:30075	2199506	2	True				
ANR	2199720	ParameterType	int *		2199506	0					
ANR	2199721	Identifier	fd_ptr		2199506	1					
ANR	2199722	Parameter	struct stat * stat_buf	1178:45:30078:30098	2199506	3	True				
ANR	2199723	ParameterType	struct stat *		2199506	0					
ANR	2199724	Identifier	stat_buf		2199506	1					
ANR	2199725	CFGEntryNode	ENTRY		2199506		True				
ANR	2199726	CFGExitNode	EXIT		2199506		True				
ANR	2199727	Symbol	NULL		2199506						
ANR	2199728	Symbol	tmp_stat_buf		2199506						
ANR	2199729	Symbol	stat_buf		2199506						
ANR	2199730	Symbol	lstat		2199506						
ANR	2199731	Symbol	fstat		2199506						
ANR	2199732	Symbol	tmp_stat_buf . st_dev		2199506						
ANR	2199733	Symbol	* dir_ptr		2199506						
ANR	2199734	Symbol	ino		2199506						
ANR	2199735	Symbol	& tmp_stat_buf		2199506						
ANR	2199736	Symbol	dir		2199506						
ANR	2199737	Symbol	path		2199506						
ANR	2199738	Symbol	fd_ptr		2199506						
ANR	2199739	Symbol	dir_ptr		2199506						
ANR	2199740	Symbol	O_RDONLY		2199506						
ANR	2199741	Symbol	dev		2199506						
ANR	2199742	Symbol	opendir		2199506						
ANR	2199743	Symbol	* fd_ptr		2199506						
ANR	2199744	Symbol	fd		2199506						
ANR	2199745	Symbol	open		2199506						
ANR	2199746	Symbol	tmp_stat_buf . st_ino		2199506						
ANR	2199747	Function	safe_open_no_follow	1247:0:31945:32783							
ANR	2199748	FunctionDef	"safe_open_no_follow (const char * path , int * fd_ptr , struct stat * st)"		2199747	0					
ANR	2199749	CompoundStatement		1249:0:32017:32783	2199747	0					
ANR	2199750	IdentifierDeclStatement	dev_t dev ;	1250:4:32023:32032	2199747	0	True				
ANR	2199751	IdentifierDecl	dev		2199747	0					
ANR	2199752	IdentifierDeclType	dev_t		2199747	0					
ANR	2199753	Identifier	dev		2199747	1					
ANR	2199754	IdentifierDeclStatement	ino_t ino ;	1251:4:32038:32047	2199747	1	True				
ANR	2199755	IdentifierDecl	ino		2199747	0					
ANR	2199756	IdentifierDeclType	ino_t		2199747	0					
ANR	2199757	Identifier	ino		2199747	1					
ANR	2199758	IdentifierDeclStatement	struct stat buf ;	1252:4:32053:32068	2199747	2	True				
ANR	2199759	IdentifierDecl	buf		2199747	0					
ANR	2199760	IdentifierDeclType	struct stat		2199747	0					
ANR	2199761	Identifier	buf		2199747	1					
ANR	2199762	IfStatement	if ( st == NULL )		2199747	3					
ANR	2199763	Condition	st == NULL	1254:8:32079:32088	2199747	0	True				
ANR	2199764	EqualityExpression	st == NULL		2199747	0		==			
ANR	2199765	Identifier	st		2199747	0					
ANR	2199766	Identifier	NULL		2199747	1					
ANR	2199767	CompoundStatement		6:20:73:73	2199747	1					
ANR	2199768	ExpressionStatement	st = & buf	1255:8:32101:32110	2199747	0	True				
ANR	2199769	AssignmentExpression	st = & buf		2199747	0		=			
ANR	2199770	Identifier	st		2199747	0					
ANR	2199771	UnaryOperationExpression	& buf		2199747	1					
ANR	2199772	UnaryOperator	&		2199747	0					
ANR	2199773	Identifier	buf		2199747	1					
ANR	2199774	ExpressionStatement	"* fd_ptr = open ( path , O_RDONLY | O_NONBLOCK )"	1258:4:32123:32166	2199747	4	True				
ANR	2199775	AssignmentExpression	"* fd_ptr = open ( path , O_RDONLY | O_NONBLOCK )"		2199747	0		=			
ANR	2199776	UnaryOperationExpression	* fd_ptr		2199747	0					
ANR	2199777	UnaryOperator	*		2199747	0					
ANR	2199778	Identifier	fd_ptr		2199747	1					
ANR	2199779	CallExpression	"open ( path , O_RDONLY | O_NONBLOCK )"		2199747	1					
ANR	2199780	Callee	open		2199747	0					
ANR	2199781	Identifier	open		2199747	0					
ANR	2199782	ArgumentList	path		2199747	1					
ANR	2199783	Argument	path		2199747	0					
ANR	2199784	Identifier	path		2199747	0					
ANR	2199785	Argument	O_RDONLY | O_NONBLOCK		2199747	1					
ANR	2199786	InclusiveOrExpression	O_RDONLY | O_NONBLOCK		2199747	0		|			
ANR	2199787	Identifier	O_RDONLY		2199747	0					
ANR	2199788	Identifier	O_NONBLOCK		2199747	1					
ANR	2199789	IfStatement	if ( * fd_ptr == - 1 )		2199747	5					
ANR	2199790	Condition	* fd_ptr == - 1	1259:8:32176:32188	2199747	0	True				
ANR	2199791	EqualityExpression	* fd_ptr == - 1		2199747	0		==			
ANR	2199792	UnaryOperationExpression	* fd_ptr		2199747	0					
ANR	2199793	UnaryOperator	*		2199747	0					
ANR	2199794	Identifier	fd_ptr		2199747	1					
ANR	2199795	UnaryOperationExpression	- 1		2199747	1					
ANR	2199796	UnaryOperator	-		2199747	0					
ANR	2199797	PrimaryExpression	1		2199747	1					
ANR	2199798	CompoundStatement		11:23:173:173	2199747	1					
ANR	2199799	IfStatement	if ( errno == ENOENT )		2199747	0					
ANR	2199800	Condition	errno == ENOENT	1260:5:32198:32212	2199747	0	True				
ANR	2199801	EqualityExpression	errno == ENOENT		2199747	0		==			
ANR	2199802	Identifier	errno		2199747	0					
ANR	2199803	Identifier	ENOENT		2199747	1					
ANR	2199804	CompoundStatement		12:22:197:197	2199747	1					
ANR	2199805	IfStatement	"if ( lstat ( path , st ) != - 1 && S_ISLNK ( st -> st_mode ) )"		2199747	0					
ANR	2199806	Condition	"lstat ( path , st ) != - 1 && S_ISLNK ( st -> st_mode )"	1264:9:32334:32378	2199747	0	True				
ANR	2199807	AndExpression	"lstat ( path , st ) != - 1 && S_ISLNK ( st -> st_mode )"		2199747	0		&&			
ANR	2199808	EqualityExpression	"lstat ( path , st ) != - 1"		2199747	0		!=			
ANR	2199809	CallExpression	"lstat ( path , st )"		2199747	0					
ANR	2199810	Callee	lstat		2199747	0					
ANR	2199811	Identifier	lstat		2199747	0					
ANR	2199812	ArgumentList	path		2199747	1					
ANR	2199813	Argument	path		2199747	0					
ANR	2199814	Identifier	path		2199747	0					
ANR	2199815	Argument	st		2199747	1					
ANR	2199816	Identifier	st		2199747	0					
ANR	2199817	UnaryOperationExpression	- 1		2199747	1					
ANR	2199818	UnaryOperator	-		2199747	0					
ANR	2199819	PrimaryExpression	1		2199747	1					
ANR	2199820	CallExpression	S_ISLNK ( st -> st_mode )		2199747	1					
ANR	2199821	Callee	S_ISLNK		2199747	0					
ANR	2199822	Identifier	S_ISLNK		2199747	0					
ANR	2199823	ArgumentList	st -> st_mode		2199747	1					
ANR	2199824	Argument	st -> st_mode		2199747	0					
ANR	2199825	PtrMemberAccess	st -> st_mode		2199747	0					
ANR	2199826	Identifier	st		2199747	0					
ANR	2199827	Identifier	st_mode		2199747	1					
ANR	2199828	CompoundStatement		16:56:363:363	2199747	1					
ANR	2199829	ReturnStatement	return 0 ;	1265:2:32385:32393	2199747	0	True				
ANR	2199830	PrimaryExpression	0		2199747	0					
ANR	2199831	ExpressionStatement	errno = ENOENT	1267:5:32407:32421	2199747	1	True				
ANR	2199832	AssignmentExpression	errno = ENOENT		2199747	0		=			
ANR	2199833	Identifier	errno		2199747	0					
ANR	2199834	Identifier	ENOENT		2199747	1					
ANR	2199835	ReturnStatement	return - 1 ;	1270:1:32428:32437	2199747	1	True				
ANR	2199836	UnaryOperationExpression	- 1		2199747	0					
ANR	2199837	UnaryOperator	-		2199747	0					
ANR	2199838	PrimaryExpression	1		2199747	1					
ANR	2199839	IfStatement	"if ( fstat ( * fd_ptr , st ) == - 1 )"		2199747	6					
ANR	2199840	Condition	"fstat ( * fd_ptr , st ) == - 1"	1273:8:32454:32477	2199747	0	True				
ANR	2199841	EqualityExpression	"fstat ( * fd_ptr , st ) == - 1"		2199747	0		==			
ANR	2199842	CallExpression	"fstat ( * fd_ptr , st )"		2199747	0					
ANR	2199843	Callee	fstat		2199747	0					
ANR	2199844	Identifier	fstat		2199747	0					
ANR	2199845	ArgumentList	* fd_ptr		2199747	1					
ANR	2199846	Argument	* fd_ptr		2199747	0					
ANR	2199847	UnaryOperationExpression	* fd_ptr		2199747	0					
ANR	2199848	UnaryOperator	*		2199747	0					
ANR	2199849	Identifier	fd_ptr		2199747	1					
ANR	2199850	Argument	st		2199747	1					
ANR	2199851	Identifier	st		2199747	0					
ANR	2199852	UnaryOperationExpression	- 1		2199747	1					
ANR	2199853	UnaryOperator	-		2199747	0					
ANR	2199854	PrimaryExpression	1		2199747	1					
ANR	2199855	CompoundStatement		25:34:462:462	2199747	1					
ANR	2199856	ExpressionStatement	close ( * fd_ptr )	1274:8:32490:32504	2199747	0	True				
ANR	2199857	CallExpression	close ( * fd_ptr )		2199747	0					
ANR	2199858	Callee	close		2199747	0					
ANR	2199859	Identifier	close		2199747	0					
ANR	2199860	ArgumentList	* fd_ptr		2199747	1					
ANR	2199861	Argument	* fd_ptr		2199747	0					
ANR	2199862	UnaryOperationExpression	* fd_ptr		2199747	0					
ANR	2199863	UnaryOperator	*		2199747	0					
ANR	2199864	Identifier	fd_ptr		2199747	1					
ANR	2199865	ReturnStatement	return - 1 ;	1275:8:32514:32523	2199747	1	True				
ANR	2199866	UnaryOperationExpression	- 1		2199747	0					
ANR	2199867	UnaryOperator	-		2199747	0					
ANR	2199868	PrimaryExpression	1		2199747	1					
ANR	2199869	ExpressionStatement	dev = st -> st_dev	1278:4:32536:32552	2199747	7	True				
ANR	2199870	AssignmentExpression	dev = st -> st_dev		2199747	0		=			
ANR	2199871	Identifier	dev		2199747	0					
ANR	2199872	PtrMemberAccess	st -> st_dev		2199747	1					
ANR	2199873	Identifier	st		2199747	0					
ANR	2199874	Identifier	st_dev		2199747	1					
ANR	2199875	ExpressionStatement	ino = st -> st_ino	1279:4:32558:32574	2199747	8	True				
ANR	2199876	AssignmentExpression	ino = st -> st_ino		2199747	0		=			
ANR	2199877	Identifier	ino		2199747	0					
ANR	2199878	PtrMemberAccess	st -> st_ino		2199747	1					
ANR	2199879	Identifier	st		2199747	0					
ANR	2199880	Identifier	st_ino		2199747	1					
ANR	2199881	IfStatement	"if ( lstat ( path , st ) == - 1 )"		2199747	9					
ANR	2199882	Condition	"lstat ( path , st ) == - 1"	1281:8:32585:32605	2199747	0	True				
ANR	2199883	EqualityExpression	"lstat ( path , st ) == - 1"		2199747	0		==			
ANR	2199884	CallExpression	"lstat ( path , st )"		2199747	0					
ANR	2199885	Callee	lstat		2199747	0					
ANR	2199886	Identifier	lstat		2199747	0					
ANR	2199887	ArgumentList	path		2199747	1					
ANR	2199888	Argument	path		2199747	0					
ANR	2199889	Identifier	path		2199747	0					
ANR	2199890	Argument	st		2199747	1					
ANR	2199891	Identifier	st		2199747	0					
ANR	2199892	UnaryOperationExpression	- 1		2199747	1					
ANR	2199893	UnaryOperator	-		2199747	0					
ANR	2199894	PrimaryExpression	1		2199747	1					
ANR	2199895	CompoundStatement		33:31:590:590	2199747	1					
ANR	2199896	ExpressionStatement	close ( * fd_ptr )	1282:8:32618:32632	2199747	0	True				
ANR	2199897	CallExpression	close ( * fd_ptr )		2199747	0					
ANR	2199898	Callee	close		2199747	0					
ANR	2199899	Identifier	close		2199747	0					
ANR	2199900	ArgumentList	* fd_ptr		2199747	1					
ANR	2199901	Argument	* fd_ptr		2199747	0					
ANR	2199902	UnaryOperationExpression	* fd_ptr		2199747	0					
ANR	2199903	UnaryOperator	*		2199747	0					
ANR	2199904	Identifier	fd_ptr		2199747	1					
ANR	2199905	ReturnStatement	return - 1 ;	1283:8:32642:32651	2199747	1	True				
ANR	2199906	UnaryOperationExpression	- 1		2199747	0					
ANR	2199907	UnaryOperator	-		2199747	0					
ANR	2199908	PrimaryExpression	1		2199747	1					
ANR	2199909	IfStatement	if ( ( st -> st_dev != dev ) || ( st -> st_ino != ino ) )		2199747	10					
ANR	2199910	Condition	( st -> st_dev != dev ) || ( st -> st_ino != ino )	1286:8:32668:32709	2199747	0	True				
ANR	2199911	OrExpression	( st -> st_dev != dev ) || ( st -> st_ino != ino )		2199747	0		||			
ANR	2199912	EqualityExpression	st -> st_dev != dev		2199747	0		!=			
ANR	2199913	PtrMemberAccess	st -> st_dev		2199747	0					
ANR	2199914	Identifier	st		2199747	0					
ANR	2199915	Identifier	st_dev		2199747	1					
ANR	2199916	Identifier	dev		2199747	1					
ANR	2199917	EqualityExpression	st -> st_ino != ino		2199747	1		!=			
ANR	2199918	PtrMemberAccess	st -> st_ino		2199747	0					
ANR	2199919	Identifier	st		2199747	0					
ANR	2199920	Identifier	st_ino		2199747	1					
ANR	2199921	Identifier	ino		2199747	1					
ANR	2199922	CompoundStatement		38:52:694:694	2199747	1					
ANR	2199923	ExpressionStatement	close ( * fd_ptr )	1287:9:32723:32737	2199747	0	True				
ANR	2199924	CallExpression	close ( * fd_ptr )		2199747	0					
ANR	2199925	Callee	close		2199747	0					
ANR	2199926	Identifier	close		2199747	0					
ANR	2199927	ArgumentList	* fd_ptr		2199747	1					
ANR	2199928	Argument	* fd_ptr		2199747	0					
ANR	2199929	UnaryOperationExpression	* fd_ptr		2199747	0					
ANR	2199930	UnaryOperator	*		2199747	0					
ANR	2199931	Identifier	fd_ptr		2199747	1					
ANR	2199932	ExpressionStatement	* fd_ptr = - 1	1288:9:32748:32760	2199747	1	True				
ANR	2199933	AssignmentExpression	* fd_ptr = - 1		2199747	0		=			
ANR	2199934	UnaryOperationExpression	* fd_ptr		2199747	0					
ANR	2199935	UnaryOperator	*		2199747	0					
ANR	2199936	Identifier	fd_ptr		2199747	1					
ANR	2199937	UnaryOperationExpression	- 1		2199747	1					
ANR	2199938	UnaryOperator	-		2199747	0					
ANR	2199939	PrimaryExpression	1		2199747	1					
ANR	2199940	ReturnStatement	return 0 ;	1291:4:32773:32781	2199747	11	True				
ANR	2199941	PrimaryExpression	0		2199747	0					
ANR	2199942	ReturnType	int		2199747	1					
ANR	2199943	Identifier	safe_open_no_follow		2199747	2					
ANR	2199944	ParameterList	"const char * path , int * fd_ptr , struct stat * st"		2199747	3					
ANR	2199945	Parameter	const char * path	1248:20:31969:31984	2199747	0	True				
ANR	2199946	ParameterType	const char *		2199747	0					
ANR	2199947	Identifier	path		2199747	1					
ANR	2199948	Parameter	int * fd_ptr	1248:38:31987:31997	2199747	1	True				
ANR	2199949	ParameterType	int *		2199747	0					
ANR	2199950	Identifier	fd_ptr		2199747	1					
ANR	2199951	Parameter	struct stat * st	1248:51:32000:32014	2199747	2	True				
ANR	2199952	ParameterType	struct stat *		2199747	0					
ANR	2199953	Identifier	st		2199747	1					
ANR	2199954	CFGEntryNode	ENTRY		2199747		True				
ANR	2199955	CFGExitNode	EXIT		2199747		True				
ANR	2199956	Symbol	st		2199747						
ANR	2199957	Symbol	errno		2199747						
ANR	2199958	Symbol	NULL		2199747						
ANR	2199959	Symbol	* st		2199747						
ANR	2199960	Symbol	O_NONBLOCK		2199747						
ANR	2199961	Symbol	lstat		2199747						
ANR	2199962	Symbol	st -> st_dev		2199747						
ANR	2199963	Symbol	fstat		2199747						
ANR	2199964	Symbol	ino		2199747						
ANR	2199965	Symbol	ENOENT		2199747						
ANR	2199966	Symbol	st -> st_mode		2199747						
ANR	2199967	Symbol	path		2199747						
ANR	2199968	Symbol	fd_ptr		2199747						
ANR	2199969	Symbol	buf		2199747						
ANR	2199970	Symbol	O_RDONLY		2199747						
ANR	2199971	Symbol	dev		2199747						
ANR	2199972	Symbol	* fd_ptr		2199747						
ANR	2199973	Symbol	st -> st_ino		2199747						
ANR	2199974	Symbol	& buf		2199747						
ANR	2199975	Symbol	open		2199747						
ANR	2199976	Symbol	S_ISLNK		2199747						
ANR	2199977	Function	chdir_no_follow	1304:0:32975:33323							
ANR	2199978	FunctionDef	chdir_no_follow (const char * dir_name)		2199977	0					
ANR	2199979	CompoundStatement		1306:0:33024:33323	2199977	0					
ANR	2199980	IdentifierDeclStatement	int fd ;	1307:4:33030:33036	2199977	0	True				
ANR	2199981	IdentifierDecl	fd		2199977	0					
ANR	2199982	IdentifierDeclType	int		2199977	0					
ANR	2199983	Identifier	fd		2199977	1					
ANR	2199984	IdentifierDeclStatement	struct stat stat_buf ;	1308:4:33042:33062	2199977	1	True				
ANR	2199985	IdentifierDecl	stat_buf		2199977	0					
ANR	2199986	IdentifierDeclType	struct stat		2199977	0					
ANR	2199987	Identifier	stat_buf		2199977	1					
ANR	2199988	IfStatement	"if ( safe_open_no_follow ( dir_name , & fd , & stat_buf ) )"		2199977	2					
ANR	2199989	Condition	"safe_open_no_follow ( dir_name , & fd , & stat_buf )"	1310:8:33073:33117	2199977	0	True				
ANR	2199990	CallExpression	"safe_open_no_follow ( dir_name , & fd , & stat_buf )"		2199977	0					
ANR	2199991	Callee	safe_open_no_follow		2199977	0					
ANR	2199992	Identifier	safe_open_no_follow		2199977	0					
ANR	2199993	ArgumentList	dir_name		2199977	1					
ANR	2199994	Argument	dir_name		2199977	0					
ANR	2199995	Identifier	dir_name		2199977	0					
ANR	2199996	Argument	& fd		2199977	1					
ANR	2199997	UnaryOperationExpression	& fd		2199977	0					
ANR	2199998	UnaryOperator	&		2199977	0					
ANR	2199999	Identifier	fd		2199977	1					
ANR	2200000	Argument	& stat_buf		2199977	2					
ANR	2200001	UnaryOperationExpression	& stat_buf		2199977	0					
ANR	2200002	UnaryOperator	&		2199977	0					
ANR	2200003	Identifier	stat_buf		2199977	1					
ANR	2200004	CompoundStatement		5:55:95:95	2199977	1					
ANR	2200005	ReturnStatement	return - 1 ;	1311:8:33130:33139	2199977	0	True				
ANR	2200006	UnaryOperationExpression	- 1		2199977	0					
ANR	2200007	UnaryOperator	-		2199977	0					
ANR	2200008	PrimaryExpression	1		2199977	1					
ANR	2200009	IfStatement	if ( fd == - 1 )		2199977	3					
ANR	2200010	Condition	fd == - 1	1313:8:33155:33162	2199977	0	True				
ANR	2200011	EqualityExpression	fd == - 1		2199977	0		==			
ANR	2200012	Identifier	fd		2199977	0					
ANR	2200013	UnaryOperationExpression	- 1		2199977	1					
ANR	2200014	UnaryOperator	-		2199977	0					
ANR	2200015	PrimaryExpression	1		2199977	1					
ANR	2200016	CompoundStatement		8:18:140:140	2199977	1					
ANR	2200017	ReturnStatement	return - 1 ;	1315:8:33203:33212	2199977	0	True				
ANR	2200018	UnaryOperationExpression	- 1		2199977	0					
ANR	2200019	UnaryOperator	-		2199977	0					
ANR	2200020	PrimaryExpression	1		2199977	1					
ANR	2200021	IfStatement	if ( fchdir ( fd ) == - 1 )		2199977	4					
ANR	2200022	Condition	fchdir ( fd ) == - 1	1318:8:33229:33244	2199977	0	True				
ANR	2200023	EqualityExpression	fchdir ( fd ) == - 1		2199977	0		==			
ANR	2200024	CallExpression	fchdir ( fd )		2199977	0					
ANR	2200025	Callee	fchdir		2199977	0					
ANR	2200026	Identifier	fchdir		2199977	0					
ANR	2200027	ArgumentList	fd		2199977	1					
ANR	2200028	Argument	fd		2199977	0					
ANR	2200029	Identifier	fd		2199977	0					
ANR	2200030	UnaryOperationExpression	- 1		2199977	1					
ANR	2200031	UnaryOperator	-		2199977	0					
ANR	2200032	PrimaryExpression	1		2199977	1					
ANR	2200033	CompoundStatement		13:26:222:222	2199977	1					
ANR	2200034	ExpressionStatement	close ( fd )	1319:8:33257:33266	2199977	0	True				
ANR	2200035	CallExpression	close ( fd )		2199977	0					
ANR	2200036	Callee	close		2199977	0					
ANR	2200037	Identifier	close		2199977	0					
ANR	2200038	ArgumentList	fd		2199977	1					
ANR	2200039	Argument	fd		2199977	0					
ANR	2200040	Identifier	fd		2199977	0					
ANR	2200041	ReturnStatement	return - 1 ;	1320:8:33276:33285	2199977	1	True				
ANR	2200042	UnaryOperationExpression	- 1		2199977	0					
ANR	2200043	UnaryOperator	-		2199977	0					
ANR	2200044	PrimaryExpression	1		2199977	1					
ANR	2200045	ExpressionStatement	close ( fd )	1323:4:33298:33307	2199977	5	True				
ANR	2200046	CallExpression	close ( fd )		2199977	0					
ANR	2200047	Callee	close		2199977	0					
ANR	2200048	Identifier	close		2199977	0					
ANR	2200049	ArgumentList	fd		2199977	1					
ANR	2200050	Argument	fd		2199977	0					
ANR	2200051	Identifier	fd		2199977	0					
ANR	2200052	ReturnStatement	return 0 ;	1324:4:33313:33321	2199977	6	True				
ANR	2200053	PrimaryExpression	0		2199977	0					
ANR	2200054	ReturnType	static int		2199977	1					
ANR	2200055	Identifier	chdir_no_follow		2199977	2					
ANR	2200056	ParameterList	const char * dir_name		2199977	3					
ANR	2200057	Parameter	const char * dir_name	1305:16:33002:33021	2199977	0	True				
ANR	2200058	ParameterType	const char *		2199977	0					
ANR	2200059	Identifier	dir_name		2199977	1					
ANR	2200060	CFGEntryNode	ENTRY		2199977		True				
ANR	2200061	CFGExitNode	EXIT		2199977		True				
ANR	2200062	Symbol	fchdir		2199977						
ANR	2200063	Symbol	safe_open_no_follow		2199977						
ANR	2200064	Symbol	& stat_buf		2199977						
ANR	2200065	Symbol	dir_name		2199977						
ANR	2200066	Symbol	stat_buf		2199977						
ANR	2200067	Symbol	& fd		2199977						
ANR	2200068	Symbol	fd		2199977						
ANR	2200069	Function	do_dir_contents_one_fd	1339:0:33550:36369							
ANR	2200070	FunctionDef	"do_dir_contents_one_fd (safe_dir_walk_func func , void * data)"		2200069	0					
ANR	2200071	CompoundStatement		1340:0:33621:36369	2200069	0					
ANR	2200072	IdentifierDeclStatement	DIR * dir ;	1341:4:33627:33635	2200069	0	True				
ANR	2200073	IdentifierDecl	* dir		2200069	0					
ANR	2200074	IdentifierDeclType	DIR *		2200069	0					
ANR	2200075	Identifier	dir		2200069	1					
ANR	2200076	IdentifierDeclStatement	int dir_fd ;	1342:4:33641:33651	2200069	1	True				
ANR	2200077	IdentifierDecl	dir_fd		2200069	0					
ANR	2200078	IdentifierDeclType	int		2200069	0					
ANR	2200079	Identifier	dir_fd		2200069	1					
ANR	2200080	IdentifierDeclStatement	int r ;	1343:4:33657:33662	2200069	2	True				
ANR	2200081	IdentifierDecl	r		2200069	0					
ANR	2200082	IdentifierDeclType	int		2200069	0					
ANR	2200083	Identifier	r		2200069	1					
ANR	2200084	IdentifierDeclStatement	int status = 0 ;	1344:4:33668:33682	2200069	3	True				
ANR	2200085	IdentifierDecl	status = 0		2200069	0					
ANR	2200086	IdentifierDeclType	int		2200069	0					
ANR	2200087	Identifier	status		2200069	1					
ANR	2200088	AssignmentExpression	status = 0		2200069	2		=			
ANR	2200089	Identifier	status		2200069	0					
ANR	2200090	PrimaryExpression	0		2200069	1					
ANR	2200091	IdentifierDeclStatement	struct dirent * de ;	1345:4:33688:33705	2200069	4	True				
ANR	2200092	IdentifierDecl	* de		2200069	0					
ANR	2200093	IdentifierDeclType	struct dirent *		2200069	0					
ANR	2200094	Identifier	de		2200069	1					
ANR	2200095	IdentifierDeclStatement	string_list dirs ;	1346:4:33711:33727	2200069	5	True				
ANR	2200096	IdentifierDecl	dirs		2200069	0					
ANR	2200097	IdentifierDeclType	string_list		2200069	0					
ANR	2200098	Identifier	dirs		2200069	1					
ANR	2200099	IdentifierDeclStatement	struct stat stat_buf ;	1347:4:33733:33753	2200069	6	True				
ANR	2200100	IdentifierDecl	stat_buf		2200069	0					
ANR	2200101	IdentifierDeclType	struct stat		2200069	0					
ANR	2200102	Identifier	stat_buf		2200069	1					
ANR	2200103	IdentifierDeclStatement	struct stat * statp ;	1348:4:33759:33777	2200069	7	True				
ANR	2200104	IdentifierDecl	* statp		2200069	0					
ANR	2200105	IdentifierDeclType	struct stat *		2200069	0					
ANR	2200106	Identifier	statp		2200069	1					
ANR	2200107	IdentifierDeclStatement	dev_t cur_dir_dev ;	1349:4:33783:33800	2200069	8	True				
ANR	2200108	IdentifierDecl	cur_dir_dev		2200069	0					
ANR	2200109	IdentifierDeclType	dev_t		2200069	0					
ANR	2200110	Identifier	cur_dir_dev		2200069	1					
ANR	2200111	IdentifierDeclStatement	ino_t cur_dir_ino ;	1350:4:33806:33823	2200069	9	True				
ANR	2200112	IdentifierDecl	cur_dir_ino		2200069	0					
ANR	2200113	IdentifierDeclType	ino_t		2200069	0					
ANR	2200114	Identifier	cur_dir_ino		2200069	1					
ANR	2200115	ExpressionStatement	init_string_list ( & dirs )	1352:4:33830:33853	2200069	10	True				
ANR	2200116	CallExpression	init_string_list ( & dirs )		2200069	0					
ANR	2200117	Callee	init_string_list		2200069	0					
ANR	2200118	Identifier	init_string_list		2200069	0					
ANR	2200119	ArgumentList	& dirs		2200069	1					
ANR	2200120	Argument	& dirs		2200069	0					
ANR	2200121	UnaryOperationExpression	& dirs		2200069	0					
ANR	2200122	UnaryOperator	&		2200069	0					
ANR	2200123	Identifier	dirs		2200069	1					
ANR	2200124	ExpressionStatement	"dir = opendir ( ""."" )"	1355:4:33875:33893	2200069	11	True				
ANR	2200125	AssignmentExpression	"dir = opendir ( ""."" )"		2200069	0		=			
ANR	2200126	Identifier	dir		2200069	0					
ANR	2200127	CallExpression	"opendir ( ""."" )"		2200069	1					
ANR	2200128	Callee	opendir		2200069	0					
ANR	2200129	Identifier	opendir		2200069	0					
ANR	2200130	ArgumentList	"""."""		2200069	1					
ANR	2200131	Argument	"""."""		2200069	0					
ANR	2200132	PrimaryExpression	"""."""		2200069	0					
ANR	2200133	IfStatement	if ( dir == NULL )		2200069	12					
ANR	2200134	Condition	dir == NULL	1356:8:33903:33913	2200069	0	True				
ANR	2200135	EqualityExpression	dir == NULL		2200069	0		==			
ANR	2200136	Identifier	dir		2200069	0					
ANR	2200137	Identifier	NULL		2200069	1					
ANR	2200138	CompoundStatement		17:21:294:294	2200069	1					
ANR	2200139	ReturnStatement	return - 1 ;	1357:8:33926:33935	2200069	0	True				
ANR	2200140	UnaryOperationExpression	- 1		2200069	0					
ANR	2200141	UnaryOperator	-		2200069	0					
ANR	2200142	PrimaryExpression	1		2200069	1					
ANR	2200143	ExpressionStatement	dir_fd = dirfd ( dir )	1359:4:33947:33966	2200069	13	True				
ANR	2200144	AssignmentExpression	dir_fd = dirfd ( dir )		2200069	0		=			
ANR	2200145	Identifier	dir_fd		2200069	0					
ANR	2200146	CallExpression	dirfd ( dir )		2200069	1					
ANR	2200147	Callee	dirfd		2200069	0					
ANR	2200148	Identifier	dirfd		2200069	0					
ANR	2200149	ArgumentList	dir		2200069	1					
ANR	2200150	Argument	dir		2200069	0					
ANR	2200151	Identifier	dir		2200069	0					
ANR	2200152	ExpressionStatement	"r = fstat ( dir_fd , & stat_buf )"	1360:4:33972:34000	2200069	14	True				
ANR	2200153	AssignmentExpression	"r = fstat ( dir_fd , & stat_buf )"		2200069	0		=			
ANR	2200154	Identifier	r		2200069	0					
ANR	2200155	CallExpression	"fstat ( dir_fd , & stat_buf )"		2200069	1					
ANR	2200156	Callee	fstat		2200069	0					
ANR	2200157	Identifier	fstat		2200069	0					
ANR	2200158	ArgumentList	dir_fd		2200069	1					
ANR	2200159	Argument	dir_fd		2200069	0					
ANR	2200160	Identifier	dir_fd		2200069	0					
ANR	2200161	Argument	& stat_buf		2200069	1					
ANR	2200162	UnaryOperationExpression	& stat_buf		2200069	0					
ANR	2200163	UnaryOperator	&		2200069	0					
ANR	2200164	Identifier	stat_buf		2200069	1					
ANR	2200165	IfStatement	if ( r == - 1 )		2200069	15					
ANR	2200166	Condition	r == - 1	1361:8:34010:34016	2200069	0	True				
ANR	2200167	EqualityExpression	r == - 1		2200069	0		==			
ANR	2200168	Identifier	r		2200069	0					
ANR	2200169	UnaryOperationExpression	- 1		2200069	1					
ANR	2200170	UnaryOperator	-		2200069	0					
ANR	2200171	PrimaryExpression	1		2200069	1					
ANR	2200172	CompoundStatement		22:17:397:397	2200069	1					
ANR	2200173	ExpressionStatement	status = - 1	1362:8:34029:34040	2200069	0	True				
ANR	2200174	AssignmentExpression	status = - 1		2200069	0		=			
ANR	2200175	Identifier	status		2200069	0					
ANR	2200176	UnaryOperationExpression	- 1		2200069	1					
ANR	2200177	UnaryOperator	-		2200069	0					
ANR	2200178	PrimaryExpression	1		2200069	1					
ANR	2200179	ExpressionStatement	cur_dir_dev = stat_buf . st_dev	1371:4:34174:34203	2200069	16	True				
ANR	2200180	AssignmentExpression	cur_dir_dev = stat_buf . st_dev		2200069	0		=			
ANR	2200181	Identifier	cur_dir_dev		2200069	0					
ANR	2200182	MemberAccess	stat_buf . st_dev		2200069	1					
ANR	2200183	Identifier	stat_buf		2200069	0					
ANR	2200184	Identifier	st_dev		2200069	1					
ANR	2200185	ExpressionStatement	cur_dir_ino = stat_buf . st_ino	1372:4:34209:34238	2200069	17	True				
ANR	2200186	AssignmentExpression	cur_dir_ino = stat_buf . st_ino		2200069	0		=			
ANR	2200187	Identifier	cur_dir_ino		2200069	0					
ANR	2200188	MemberAccess	stat_buf . st_ino		2200069	1					
ANR	2200189	Identifier	stat_buf		2200069	0					
ANR	2200190	Identifier	st_ino		2200069	1					
ANR	2200191	IfStatement	if ( status == 0 )		2200069	18					
ANR	2200192	Condition	status == 0	1374:8:34249:34259	2200069	0	True				
ANR	2200193	EqualityExpression	status == 0		2200069	0		==			
ANR	2200194	Identifier	status		2200069	0					
ANR	2200195	PrimaryExpression	0		2200069	1					
ANR	2200196	CompoundStatement		35:21:640:640	2200069	1					
ANR	2200197	WhileStatement	while ( ( de = readdir ( dir ) ) != 0 )		2200069	0					
ANR	2200198	Condition	( de = readdir ( dir ) ) != 0	1375:15:34279:34302	2200069	0	True				
ANR	2200199	EqualityExpression	( de = readdir ( dir ) ) != 0		2200069	0		!=			
ANR	2200200	AssignmentExpression	de = readdir ( dir )		2200069	0		=			
ANR	2200201	Identifier	de		2200069	0					
ANR	2200202	CallExpression	readdir ( dir )		2200069	1					
ANR	2200203	Callee	readdir		2200069	0					
ANR	2200204	Identifier	readdir		2200069	0					
ANR	2200205	ArgumentList	dir		2200069	1					
ANR	2200206	Argument	dir		2200069	0					
ANR	2200207	Identifier	dir		2200069	0					
ANR	2200208	PrimaryExpression	0		2200069	1					
ANR	2200209	CompoundStatement		36:41:683:683	2200069	1					
ANR	2200210	ExpressionStatement	statp = & stat_buf	1376:12:34319:34336	2200069	0	True				
ANR	2200211	AssignmentExpression	statp = & stat_buf		2200069	0		=			
ANR	2200212	Identifier	statp		2200069	0					
ANR	2200213	UnaryOperationExpression	& stat_buf		2200069	1					
ANR	2200214	UnaryOperator	&		2200069	0					
ANR	2200215	Identifier	stat_buf		2200069	1					
ANR	2200216	IfStatement	"if ( ! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" ) )"		2200069	1					
ANR	2200217	Condition	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"	1378:16:34355:34407	2200069	0	True				
ANR	2200218	OrExpression	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"		2200069	0		||			
ANR	2200219	UnaryOperationExpression	"! strcmp ( de -> d_name , ""."" )"		2200069	0					
ANR	2200220	UnaryOperator	!		2200069	0					
ANR	2200221	CallExpression	"strcmp ( de -> d_name , ""."" )"		2200069	1					
ANR	2200222	Callee	strcmp		2200069	0					
ANR	2200223	Identifier	strcmp		2200069	0					
ANR	2200224	ArgumentList	de -> d_name		2200069	1					
ANR	2200225	Argument	de -> d_name		2200069	0					
ANR	2200226	PtrMemberAccess	de -> d_name		2200069	0					
ANR	2200227	Identifier	de		2200069	0					
ANR	2200228	Identifier	d_name		2200069	1					
ANR	2200229	Argument	"""."""		2200069	1					
ANR	2200230	PrimaryExpression	"""."""		2200069	0					
ANR	2200231	UnaryOperationExpression	"! strcmp ( de -> d_name , "".."" )"		2200069	1					
ANR	2200232	UnaryOperator	!		2200069	0					
ANR	2200233	CallExpression	"strcmp ( de -> d_name , "".."" )"		2200069	1					
ANR	2200234	Callee	strcmp		2200069	0					
ANR	2200235	Identifier	strcmp		2200069	0					
ANR	2200236	ArgumentList	de -> d_name		2200069	1					
ANR	2200237	Argument	de -> d_name		2200069	0					
ANR	2200238	PtrMemberAccess	de -> d_name		2200069	0					
ANR	2200239	Identifier	de		2200069	0					
ANR	2200240	Identifier	d_name		2200069	1					
ANR	2200241	Argument	""".."""		2200069	1					
ANR	2200242	PrimaryExpression	""".."""		2200069	0					
ANR	2200243	CompoundStatement		39:71:788:788	2200069	1					
ANR	2200244	ContinueStatement	continue ;	1379:16:34428:34436	2200069	0	True				
ANR	2200245	ExpressionStatement	"r = lstat ( de -> d_name , statp )"	1382:12:34465:34493	2200069	2	True				
ANR	2200246	AssignmentExpression	"r = lstat ( de -> d_name , statp )"		2200069	0		=			
ANR	2200247	Identifier	r		2200069	0					
ANR	2200248	CallExpression	"lstat ( de -> d_name , statp )"		2200069	1					
ANR	2200249	Callee	lstat		2200069	0					
ANR	2200250	Identifier	lstat		2200069	0					
ANR	2200251	ArgumentList	de -> d_name		2200069	1					
ANR	2200252	Argument	de -> d_name		2200069	0					
ANR	2200253	PtrMemberAccess	de -> d_name		2200069	0					
ANR	2200254	Identifier	de		2200069	0					
ANR	2200255	Identifier	d_name		2200069	1					
ANR	2200256	Argument	statp		2200069	1					
ANR	2200257	Identifier	statp		2200069	0					
ANR	2200258	IfStatement	if ( r == - 1 )		2200069	3					
ANR	2200259	Condition	r == - 1	1383:16:34511:34517	2200069	0	True				
ANR	2200260	EqualityExpression	r == - 1		2200069	0		==			
ANR	2200261	Identifier	r		2200069	0					
ANR	2200262	UnaryOperationExpression	- 1		2200069	1					
ANR	2200263	UnaryOperator	-		2200069	0					
ANR	2200264	PrimaryExpression	1		2200069	1					
ANR	2200265	CompoundStatement		44:25:898:898	2200069	1					
ANR	2200266	ExpressionStatement	statp = 0	1384:16:34538:34547	2200069	0	True				
ANR	2200267	AssignmentExpression	statp = 0		2200069	0		=			
ANR	2200268	Identifier	statp		2200069	0					
ANR	2200269	PrimaryExpression	0		2200069	1					
ANR	2200270	IfStatement	if ( statp && S_ISDIR ( statp -> st_mode ) )		2200069	4					
ANR	2200271	Condition	statp && S_ISDIR ( statp -> st_mode )	1387:16:34580:34611	2200069	0	True				
ANR	2200272	AndExpression	statp && S_ISDIR ( statp -> st_mode )		2200069	0		&&			
ANR	2200273	Identifier	statp		2200069	0					
ANR	2200274	CallExpression	S_ISDIR ( statp -> st_mode )		2200069	1					
ANR	2200275	Callee	S_ISDIR		2200069	0					
ANR	2200276	Identifier	S_ISDIR		2200069	0					
ANR	2200277	ArgumentList	statp -> st_mode		2200069	1					
ANR	2200278	Argument	statp -> st_mode		2200069	0					
ANR	2200279	PtrMemberAccess	statp -> st_mode		2200069	0					
ANR	2200280	Identifier	statp		2200069	0					
ANR	2200281	Identifier	st_mode		2200069	1					
ANR	2200282	CompoundStatement		49:16:1010:1045	2200069	1					
ANR	2200283	IdentifierDeclStatement	char * dir_name = strdup ( de -> d_name ) ;	1388:16:34632:34667	2200069	0	True				
ANR	2200284	IdentifierDecl	* dir_name = strdup ( de -> d_name )		2200069	0					
ANR	2200285	IdentifierDeclType	char *		2200069	0					
ANR	2200286	Identifier	dir_name		2200069	1					
ANR	2200287	AssignmentExpression	* dir_name = strdup ( de -> d_name )		2200069	2		=			
ANR	2200288	Identifier	dir_name		2200069	0					
ANR	2200289	CallExpression	strdup ( de -> d_name )		2200069	1					
ANR	2200290	Callee	strdup		2200069	0					
ANR	2200291	Identifier	strdup		2200069	0					
ANR	2200292	ArgumentList	de -> d_name		2200069	1					
ANR	2200293	Argument	de -> d_name		2200069	0					
ANR	2200294	PtrMemberAccess	de -> d_name		2200069	0					
ANR	2200295	Identifier	de		2200069	0					
ANR	2200296	Identifier	d_name		2200069	1					
ANR	2200297	IfStatement	if ( dir_name == NULL )		2200069	1					
ANR	2200298	Condition	dir_name == NULL	1389:20:34689:34704	2200069	0	True				
ANR	2200299	EqualityExpression	dir_name == NULL		2200069	0		==			
ANR	2200300	Identifier	dir_name		2200069	0					
ANR	2200301	Identifier	NULL		2200069	1					
ANR	2200302	CompoundStatement		50:38:1085:1085	2200069	1					
ANR	2200303	ExpressionStatement	status = - 1	1390:20:34729:34740	2200069	0	True				
ANR	2200304	AssignmentExpression	status = - 1		2200069	0		=			
ANR	2200305	Identifier	status		2200069	0					
ANR	2200306	UnaryOperationExpression	- 1		2200069	1					
ANR	2200307	UnaryOperator	-		2200069	0					
ANR	2200308	PrimaryExpression	1		2200069	1					
ANR	2200309	BreakStatement	break ;	1391:20:34762:34767	2200069	1	True				
ANR	2200310	ExpressionStatement	"add_string_to_list ( & dirs , dir_name )"	1393:16:34803:34838	2200069	2	True				
ANR	2200311	CallExpression	"add_string_to_list ( & dirs , dir_name )"		2200069	0					
ANR	2200312	Callee	add_string_to_list		2200069	0					
ANR	2200313	Identifier	add_string_to_list		2200069	0					
ANR	2200314	ArgumentList	& dirs		2200069	1					
ANR	2200315	Argument	& dirs		2200069	0					
ANR	2200316	UnaryOperationExpression	& dirs		2200069	0					
ANR	2200317	UnaryOperator	&		2200069	0					
ANR	2200318	Identifier	dirs		2200069	1					
ANR	2200319	Argument	dir_name		2200069	1					
ANR	2200320	Identifier	dir_name		2200069	0					
ANR	2200321	ElseStatement	else		2200069	0					
ANR	2200322	CompoundStatement		55:19:1237:1237	2200069	0					
ANR	2200323	ExpressionStatement	"status = func ( de -> d_name , statp , data )"	1395:16:34877:34915	2200069	0	True				
ANR	2200324	AssignmentExpression	"status = func ( de -> d_name , statp , data )"		2200069	0		=			
ANR	2200325	Identifier	status		2200069	0					
ANR	2200326	CallExpression	"func ( de -> d_name , statp , data )"		2200069	1					
ANR	2200327	Callee	func		2200069	0					
ANR	2200328	Identifier	func		2200069	0					
ANR	2200329	ArgumentList	de -> d_name		2200069	1					
ANR	2200330	Argument	de -> d_name		2200069	0					
ANR	2200331	PtrMemberAccess	de -> d_name		2200069	0					
ANR	2200332	Identifier	de		2200069	0					
ANR	2200333	Identifier	d_name		2200069	1					
ANR	2200334	Argument	statp		2200069	1					
ANR	2200335	Identifier	statp		2200069	0					
ANR	2200336	Argument	data		2200069	2					
ANR	2200337	Identifier	data		2200069	0					
ANR	2200338	IfStatement	if ( status != 0 )		2200069	1					
ANR	2200339	Condition	status != 0	1396:20:34937:34947	2200069	0	True				
ANR	2200340	EqualityExpression	status != 0		2200069	0		!=			
ANR	2200341	Identifier	status		2200069	0					
ANR	2200342	PrimaryExpression	0		2200069	1					
ANR	2200343	CompoundStatement		57:33:1328:1328	2200069	1					
ANR	2200344	BreakStatement	break ;	1397:20:34972:34977	2200069	0	True				
ANR	2200345	ExpressionStatement	r = closedir ( dir )	1403:4:35032:35049	2200069	19	True				
ANR	2200346	AssignmentExpression	r = closedir ( dir )		2200069	0		=			
ANR	2200347	Identifier	r		2200069	0					
ANR	2200348	CallExpression	closedir ( dir )		2200069	1					
ANR	2200349	Callee	closedir		2200069	0					
ANR	2200350	Identifier	closedir		2200069	0					
ANR	2200351	ArgumentList	dir		2200069	1					
ANR	2200352	Argument	dir		2200069	0					
ANR	2200353	Identifier	dir		2200069	0					
ANR	2200354	IfStatement	if ( status == 0 && r == - 1 )		2200069	20					
ANR	2200355	Condition	status == 0 && r == - 1	1404:8:35059:35080	2200069	0	True				
ANR	2200356	AndExpression	status == 0 && r == - 1		2200069	0		&&			
ANR	2200357	EqualityExpression	status == 0		2200069	0		==			
ANR	2200358	Identifier	status		2200069	0					
ANR	2200359	PrimaryExpression	0		2200069	1					
ANR	2200360	EqualityExpression	r == - 1		2200069	1		==			
ANR	2200361	Identifier	r		2200069	0					
ANR	2200362	UnaryOperationExpression	- 1		2200069	1					
ANR	2200363	UnaryOperator	-		2200069	0					
ANR	2200364	PrimaryExpression	1		2200069	1					
ANR	2200365	CompoundStatement		65:32:1461:1461	2200069	1					
ANR	2200366	ExpressionStatement	status = - 1	1405:8:35093:35104	2200069	0	True				
ANR	2200367	AssignmentExpression	status = - 1		2200069	0		=			
ANR	2200368	Identifier	status		2200069	0					
ANR	2200369	UnaryOperationExpression	- 1		2200069	1					
ANR	2200370	UnaryOperator	-		2200069	0					
ANR	2200371	PrimaryExpression	1		2200069	1					
ANR	2200372	IfStatement	if ( status == 0 )		2200069	21					
ANR	2200373	Condition	status == 0	1408:8:35121:35131	2200069	0	True				
ANR	2200374	EqualityExpression	status == 0		2200069	0		==			
ANR	2200375	Identifier	status		2200069	0					
ANR	2200376	PrimaryExpression	0		2200069	1					
ANR	2200377	CompoundStatement		70:8:1522:1582	2200069	1					
ANR	2200378	IdentifierDeclStatement	char * * dirptr = null_terminated_list_from_string_list ( & dirs ) ;	1409:8:35144:35204	2200069	0	True				
ANR	2200379	IdentifierDecl	* * dirptr = null_terminated_list_from_string_list ( & dirs )		2200069	0					
ANR	2200380	IdentifierDeclType	char * *		2200069	0					
ANR	2200381	Identifier	dirptr		2200069	1					
ANR	2200382	AssignmentExpression	* * dirptr = null_terminated_list_from_string_list ( & dirs )		2200069	2		=			
ANR	2200383	Identifier	dirptr		2200069	0					
ANR	2200384	CallExpression	null_terminated_list_from_string_list ( & dirs )		2200069	1					
ANR	2200385	Callee	null_terminated_list_from_string_list		2200069	0					
ANR	2200386	Identifier	null_terminated_list_from_string_list		2200069	0					
ANR	2200387	ArgumentList	& dirs		2200069	1					
ANR	2200388	Argument	& dirs		2200069	0					
ANR	2200389	UnaryOperationExpression	& dirs		2200069	0					
ANR	2200390	UnaryOperator	&		2200069	0					
ANR	2200391	Identifier	dirs		2200069	1					
ANR	2200392	WhileStatement	while ( * dirptr )		2200069	1					
ANR	2200393	Condition	* dirptr	1411:15:35222:35228	2200069	0	True				
ANR	2200394	UnaryOperationExpression	* dirptr		2200069	0					
ANR	2200395	UnaryOperator	*		2200069	0					
ANR	2200396	Identifier	dirptr		2200069	1					
ANR	2200397	CompoundStatement		72:24:1609:1609	2200069	1					
ANR	2200398	ExpressionStatement	status = chdir_no_follow ( * dirptr )	1413:12:35246:35279	2200069	0	True				
ANR	2200399	AssignmentExpression	status = chdir_no_follow ( * dirptr )		2200069	0		=			
ANR	2200400	Identifier	status		2200069	0					
ANR	2200401	CallExpression	chdir_no_follow ( * dirptr )		2200069	1					
ANR	2200402	Callee	chdir_no_follow		2200069	0					
ANR	2200403	Identifier	chdir_no_follow		2200069	0					
ANR	2200404	ArgumentList	* dirptr		2200069	1					
ANR	2200405	Argument	* dirptr		2200069	0					
ANR	2200406	UnaryOperationExpression	* dirptr		2200069	0					
ANR	2200407	UnaryOperator	*		2200069	0					
ANR	2200408	Identifier	dirptr		2200069	1					
ANR	2200409	IfStatement	if ( status == - 1 )		2200069	1					
ANR	2200410	Condition	status == - 1	1414:16:35297:35308	2200069	0	True				
ANR	2200411	EqualityExpression	status == - 1		2200069	0		==			
ANR	2200412	Identifier	status		2200069	0					
ANR	2200413	UnaryOperationExpression	- 1		2200069	1					
ANR	2200414	UnaryOperator	-		2200069	0					
ANR	2200415	PrimaryExpression	1		2200069	1					
ANR	2200416	CompoundStatement		75:30:1689:1689	2200069	1					
ANR	2200417	BreakStatement	break ;	1415:16:35329:35334	2200069	0	True				
ANR	2200418	ExpressionStatement	"status = do_dir_contents_one_fd ( func , data )"	1418:12:35363:35406	2200069	2	True				
ANR	2200419	AssignmentExpression	"status = do_dir_contents_one_fd ( func , data )"		2200069	0		=			
ANR	2200420	Identifier	status		2200069	0					
ANR	2200421	CallExpression	"do_dir_contents_one_fd ( func , data )"		2200069	1					
ANR	2200422	Callee	do_dir_contents_one_fd		2200069	0					
ANR	2200423	Identifier	do_dir_contents_one_fd		2200069	0					
ANR	2200424	ArgumentList	func		2200069	1					
ANR	2200425	Argument	func		2200069	0					
ANR	2200426	Identifier	func		2200069	0					
ANR	2200427	Argument	data		2200069	1					
ANR	2200428	Identifier	data		2200069	0					
ANR	2200429	ExpressionStatement	"r = chdir ( "".."" )"	1420:12:35421:35436	2200069	3	True				
ANR	2200430	AssignmentExpression	"r = chdir ( "".."" )"		2200069	0		=			
ANR	2200431	Identifier	r		2200069	0					
ANR	2200432	CallExpression	"chdir ( "".."" )"		2200069	1					
ANR	2200433	Callee	chdir		2200069	0					
ANR	2200434	Identifier	chdir		2200069	0					
ANR	2200435	ArgumentList	""".."""		2200069	1					
ANR	2200436	Argument	""".."""		2200069	0					
ANR	2200437	PrimaryExpression	""".."""		2200069	0					
ANR	2200438	IfStatement	if ( status != 0 || r == - 1 )		2200069	4					
ANR	2200439	Condition	status != 0 || r == - 1	1421:16:35454:35475	2200069	0	True				
ANR	2200440	OrExpression	status != 0 || r == - 1		2200069	0		||			
ANR	2200441	EqualityExpression	status != 0		2200069	0		!=			
ANR	2200442	Identifier	status		2200069	0					
ANR	2200443	PrimaryExpression	0		2200069	1					
ANR	2200444	EqualityExpression	r == - 1		2200069	1		==			
ANR	2200445	Identifier	r		2200069	0					
ANR	2200446	UnaryOperationExpression	- 1		2200069	1					
ANR	2200447	UnaryOperator	-		2200069	0					
ANR	2200448	PrimaryExpression	1		2200069	1					
ANR	2200449	CompoundStatement		82:40:1856:1856	2200069	1					
ANR	2200450	IfStatement	if ( status == 0 )		2200069	0					
ANR	2200451	Condition	status == 0	1422:20:35500:35510	2200069	0	True				
ANR	2200452	EqualityExpression	status == 0		2200069	0		==			
ANR	2200453	Identifier	status		2200069	0					
ANR	2200454	PrimaryExpression	0		2200069	1					
ANR	2200455	CompoundStatement		83:33:1891:1891	2200069	1					
ANR	2200456	ExpressionStatement	status = - 1	1423:20:35535:35546	2200069	0	True				
ANR	2200457	AssignmentExpression	status = - 1		2200069	0		=			
ANR	2200458	Identifier	status		2200069	0					
ANR	2200459	UnaryOperationExpression	- 1		2200069	1					
ANR	2200460	UnaryOperator	-		2200069	0					
ANR	2200461	PrimaryExpression	1		2200069	1					
ANR	2200462	BreakStatement	break ;	1425:16:35582:35587	2200069	1	True				
ANR	2200463	ExpressionStatement	"r = lstat ( ""."" , & stat_buf )"	1428:12:35616:35641	2200069	5	True				
ANR	2200464	AssignmentExpression	"r = lstat ( ""."" , & stat_buf )"		2200069	0		=			
ANR	2200465	Identifier	r		2200069	0					
ANR	2200466	CallExpression	"lstat ( ""."" , & stat_buf )"		2200069	1					
ANR	2200467	Callee	lstat		2200069	0					
ANR	2200468	Identifier	lstat		2200069	0					
ANR	2200469	ArgumentList	"""."""		2200069	1					
ANR	2200470	Argument	"""."""		2200069	0					
ANR	2200471	PrimaryExpression	"""."""		2200069	0					
ANR	2200472	Argument	& stat_buf		2200069	1					
ANR	2200473	UnaryOperationExpression	& stat_buf		2200069	0					
ANR	2200474	UnaryOperator	&		2200069	0					
ANR	2200475	Identifier	stat_buf		2200069	1					
ANR	2200476	IfStatement	if ( r == - 1 )		2200069	6					
ANR	2200477	Condition	r == - 1	1429:16:35659:35665	2200069	0	True				
ANR	2200478	EqualityExpression	r == - 1		2200069	0		==			
ANR	2200479	Identifier	r		2200069	0					
ANR	2200480	UnaryOperationExpression	- 1		2200069	1					
ANR	2200481	UnaryOperator	-		2200069	0					
ANR	2200482	PrimaryExpression	1		2200069	1					
ANR	2200483	CompoundStatement		90:25:2046:2046	2200069	1					
ANR	2200484	ExpressionStatement	status = - 1	1430:16:35686:35697	2200069	0	True				
ANR	2200485	AssignmentExpression	status = - 1		2200069	0		=			
ANR	2200486	Identifier	status		2200069	0					
ANR	2200487	UnaryOperationExpression	- 1		2200069	1					
ANR	2200488	UnaryOperator	-		2200069	0					
ANR	2200489	PrimaryExpression	1		2200069	1					
ANR	2200490	BreakStatement	break ;	1431:16:35715:35720	2200069	1	True				
ANR	2200491	IfStatement	if ( cur_dir_dev != stat_buf . st_dev || cur_dir_ino != stat_buf . st_ino )		2200069	7					
ANR	2200492	Condition	cur_dir_dev != stat_buf . st_dev || cur_dir_ino != stat_buf . st_ino	1435:16:35820:35899	2200069	0	True				
ANR	2200493	OrExpression	cur_dir_dev != stat_buf . st_dev || cur_dir_ino != stat_buf . st_ino		2200069	0		||			
ANR	2200494	EqualityExpression	cur_dir_dev != stat_buf . st_dev		2200069	0		!=			
ANR	2200495	Identifier	cur_dir_dev		2200069	0					
ANR	2200496	MemberAccess	stat_buf . st_dev		2200069	1					
ANR	2200497	Identifier	stat_buf		2200069	0					
ANR	2200498	Identifier	st_dev		2200069	1					
ANR	2200499	EqualityExpression	cur_dir_ino != stat_buf . st_ino		2200069	1		!=			
ANR	2200500	Identifier	cur_dir_ino		2200069	0					
ANR	2200501	MemberAccess	stat_buf . st_ino		2200069	1					
ANR	2200502	Identifier	stat_buf		2200069	0					
ANR	2200503	Identifier	st_ino		2200069	1					
ANR	2200504	CompoundStatement		97:51:2280:2280	2200069	1					
ANR	2200505	ExpressionStatement	status = - 1	1437:16:35920:35931	2200069	0	True				
ANR	2200506	AssignmentExpression	status = - 1		2200069	0		=			
ANR	2200507	Identifier	status		2200069	0					
ANR	2200508	UnaryOperationExpression	- 1		2200069	1					
ANR	2200509	UnaryOperator	-		2200069	0					
ANR	2200510	PrimaryExpression	1		2200069	1					
ANR	2200511	BreakStatement	break ;	1438:16:35949:35954	2200069	1	True				
ANR	2200512	ExpressionStatement	statp = & stat_buf	1441:12:35983:36000	2200069	8	True				
ANR	2200513	AssignmentExpression	statp = & stat_buf		2200069	0		=			
ANR	2200514	Identifier	statp		2200069	0					
ANR	2200515	UnaryOperationExpression	& stat_buf		2200069	1					
ANR	2200516	UnaryOperator	&		2200069	0					
ANR	2200517	Identifier	stat_buf		2200069	1					
ANR	2200518	ExpressionStatement	"r = lstat ( * dirptr , statp )"	1442:12:36014:36039	2200069	9	True				
ANR	2200519	AssignmentExpression	"r = lstat ( * dirptr , statp )"		2200069	0		=			
ANR	2200520	Identifier	r		2200069	0					
ANR	2200521	CallExpression	"lstat ( * dirptr , statp )"		2200069	1					
ANR	2200522	Callee	lstat		2200069	0					
ANR	2200523	Identifier	lstat		2200069	0					
ANR	2200524	ArgumentList	* dirptr		2200069	1					
ANR	2200525	Argument	* dirptr		2200069	0					
ANR	2200526	UnaryOperationExpression	* dirptr		2200069	0					
ANR	2200527	UnaryOperator	*		2200069	0					
ANR	2200528	Identifier	dirptr		2200069	1					
ANR	2200529	Argument	statp		2200069	1					
ANR	2200530	Identifier	statp		2200069	0					
ANR	2200531	IfStatement	if ( r == - 1 )		2200069	10					
ANR	2200532	Condition	r == - 1	1443:16:36057:36063	2200069	0	True				
ANR	2200533	EqualityExpression	r == - 1		2200069	0		==			
ANR	2200534	Identifier	r		2200069	0					
ANR	2200535	UnaryOperationExpression	- 1		2200069	1					
ANR	2200536	UnaryOperator	-		2200069	0					
ANR	2200537	PrimaryExpression	1		2200069	1					
ANR	2200538	CompoundStatement		104:25:2444:2444	2200069	1					
ANR	2200539	ExpressionStatement	statp = 0	1444:16:36084:36093	2200069	0	True				
ANR	2200540	AssignmentExpression	statp = 0		2200069	0		=			
ANR	2200541	Identifier	statp		2200069	0					
ANR	2200542	PrimaryExpression	0		2200069	1					
ANR	2200543	ExpressionStatement	"status = func ( * dirptr , statp , data )"	1447:12:36122:36157	2200069	11	True				
ANR	2200544	AssignmentExpression	"status = func ( * dirptr , statp , data )"		2200069	0		=			
ANR	2200545	Identifier	status		2200069	0					
ANR	2200546	CallExpression	"func ( * dirptr , statp , data )"		2200069	1					
ANR	2200547	Callee	func		2200069	0					
ANR	2200548	Identifier	func		2200069	0					
ANR	2200549	ArgumentList	* dirptr		2200069	1					
ANR	2200550	Argument	* dirptr		2200069	0					
ANR	2200551	UnaryOperationExpression	* dirptr		2200069	0					
ANR	2200552	UnaryOperator	*		2200069	0					
ANR	2200553	Identifier	dirptr		2200069	1					
ANR	2200554	Argument	statp		2200069	1					
ANR	2200555	Identifier	statp		2200069	0					
ANR	2200556	Argument	data		2200069	2					
ANR	2200557	Identifier	data		2200069	0					
ANR	2200558	IfStatement	if ( status != 0 )		2200069	12					
ANR	2200559	Condition	status != 0	1448:16:36175:36185	2200069	0	True				
ANR	2200560	EqualityExpression	status != 0		2200069	0		!=			
ANR	2200561	Identifier	status		2200069	0					
ANR	2200562	PrimaryExpression	0		2200069	1					
ANR	2200563	CompoundStatement		109:29:2566:2566	2200069	1					
ANR	2200564	BreakStatement	break ;	1449:16:36206:36211	2200069	0	True				
ANR	2200565	ExpressionStatement	++ dirptr	1452:12:36240:36248	2200069	13	True				
ANR	2200566	UnaryExpression	++ dirptr		2200069	0					
ANR	2200567	IncDec	++		2200069	0					
ANR	2200568	Identifier	dirptr		2200069	1					
ANR	2200569	ExpressionStatement	destroy_string_list ( & dirs )	1456:4:36271:36297	2200069	22	True				
ANR	2200570	CallExpression	destroy_string_list ( & dirs )		2200069	0					
ANR	2200571	Callee	destroy_string_list		2200069	0					
ANR	2200572	Identifier	destroy_string_list		2200069	0					
ANR	2200573	ArgumentList	& dirs		2200069	1					
ANR	2200574	Argument	& dirs		2200069	0					
ANR	2200575	UnaryOperationExpression	& dirs		2200069	0					
ANR	2200576	UnaryOperator	&		2200069	0					
ANR	2200577	Identifier	dirs		2200069	1					
ANR	2200578	IfStatement	if ( status == 0 )		2200069	23					
ANR	2200579	Condition	status == 0	1458:8:36308:36318	2200069	0	True				
ANR	2200580	EqualityExpression	status == 0		2200069	0		==			
ANR	2200581	Identifier	status		2200069	0					
ANR	2200582	PrimaryExpression	0		2200069	1					
ANR	2200583	CompoundStatement		119:21:2699:2699	2200069	1					
ANR	2200584	ExpressionStatement	status = r	1459:8:36331:36341	2200069	0	True				
ANR	2200585	AssignmentExpression	status = r		2200069	0		=			
ANR	2200586	Identifier	status		2200069	0					
ANR	2200587	Identifier	r		2200069	1					
ANR	2200588	ReturnStatement	return status ;	1462:4:36354:36367	2200069	24	True				
ANR	2200589	Identifier	status		2200069	0					
ANR	2200590	ReturnType	static int		2200069	1					
ANR	2200591	Identifier	do_dir_contents_one_fd		2200069	2					
ANR	2200592	ParameterList	"safe_dir_walk_func func , void * data"		2200069	3					
ANR	2200593	Parameter	safe_dir_walk_func func	1339:34:33584:33606	2200069	0	True				
ANR	2200594	ParameterType	safe_dir_walk_func		2200069	0					
ANR	2200595	Identifier	func		2200069	1					
ANR	2200596	Parameter	void * data	1339:59:33609:33618	2200069	1	True				
ANR	2200597	ParameterType	void *		2200069	0					
ANR	2200598	Identifier	data		2200069	1					
ANR	2200599	CFGEntryNode	ENTRY		2200069		True				
ANR	2200600	CFGExitNode	EXIT		2200069		True				
ANR	2200601	Symbol	de		2200069						
ANR	2200602	Symbol	de -> d_name		2200069						
ANR	2200603	Symbol	statp -> st_mode		2200069						
ANR	2200604	Symbol	data		2200069						
ANR	2200605	Symbol	& stat_buf		2200069						
ANR	2200606	Symbol	stat_buf		2200069						
ANR	2200607	Symbol	& dirs		2200069						
ANR	2200608	Symbol	stat_buf . st_dev		2200069						
ANR	2200609	Symbol	dir		2200069						
ANR	2200610	Symbol	* statp		2200069						
ANR	2200611	Symbol	dir_fd		2200069						
ANR	2200612	Symbol	readdir		2200069						
ANR	2200613	Symbol	statp		2200069						
ANR	2200614	Symbol	chdir_no_follow		2200069						
ANR	2200615	Symbol	stat_buf . st_ino		2200069						
ANR	2200616	Symbol	strcmp		2200069						
ANR	2200617	Symbol	dirptr		2200069						
ANR	2200618	Symbol	cur_dir_ino		2200069						
ANR	2200619	Symbol	NULL		2200069						
ANR	2200620	Symbol	* de		2200069						
ANR	2200621	Symbol	lstat		2200069						
ANR	2200622	Symbol	dir_name		2200069						
ANR	2200623	Symbol	dirs		2200069						
ANR	2200624	Symbol	fstat		2200069						
ANR	2200625	Symbol	chdir		2200069						
ANR	2200626	Symbol	* dirptr		2200069						
ANR	2200627	Symbol	r		2200069						
ANR	2200628	Symbol	func		2200069						
ANR	2200629	Symbol	do_dir_contents_one_fd		2200069						
ANR	2200630	Symbol	opendir		2200069						
ANR	2200631	Symbol	closedir		2200069						
ANR	2200632	Symbol	dirfd		2200069						
ANR	2200633	Symbol	S_ISDIR		2200069						
ANR	2200634	Symbol	strdup		2200069						
ANR	2200635	Symbol	null_terminated_list_from_string_list		2200069						
ANR	2200636	Symbol	cur_dir_dev		2200069						
ANR	2200637	Symbol	status		2200069						
ANR	2200638	Function	do_dir_contents	1480:0:36714:38160							
ANR	2200639	FunctionDef	"do_dir_contents (safe_dir_walk_func func , void * data , int num_fds)"		2200638	0					
ANR	2200640	CompoundStatement		1482:0:36791:38160	2200638	0					
ANR	2200641	IdentifierDeclStatement	DIR * dir ;	1483:4:36797:36805	2200638	0	True				
ANR	2200642	IdentifierDecl	* dir		2200638	0					
ANR	2200643	IdentifierDeclType	DIR *		2200638	0					
ANR	2200644	Identifier	dir		2200638	1					
ANR	2200645	IdentifierDeclStatement	int dir_fd ;	1484:4:36811:36821	2200638	1	True				
ANR	2200646	IdentifierDecl	dir_fd		2200638	0					
ANR	2200647	IdentifierDeclType	int		2200638	0					
ANR	2200648	Identifier	dir_fd		2200638	1					
ANR	2200649	IdentifierDeclStatement	int r ;	1485:4:36827:36832	2200638	2	True				
ANR	2200650	IdentifierDecl	r		2200638	0					
ANR	2200651	IdentifierDeclType	int		2200638	0					
ANR	2200652	Identifier	r		2200638	1					
ANR	2200653	IdentifierDeclStatement	int status = 0 ;	1486:4:36838:36852	2200638	3	True				
ANR	2200654	IdentifierDecl	status = 0		2200638	0					
ANR	2200655	IdentifierDeclType	int		2200638	0					
ANR	2200656	Identifier	status		2200638	1					
ANR	2200657	AssignmentExpression	status = 0		2200638	2		=			
ANR	2200658	Identifier	status		2200638	0					
ANR	2200659	PrimaryExpression	0		2200638	1					
ANR	2200660	IdentifierDeclStatement	struct dirent * de ;	1487:4:36858:36875	2200638	4	True				
ANR	2200661	IdentifierDecl	* de		2200638	0					
ANR	2200662	IdentifierDeclType	struct dirent *		2200638	0					
ANR	2200663	Identifier	de		2200638	1					
ANR	2200664	IfStatement	if ( num_fds <= 1 )		2200638	5					
ANR	2200665	Condition	num_fds <= 1	1489:8:36886:36897	2200638	0	True				
ANR	2200666	RelationalExpression	num_fds <= 1		2200638	0		<=			
ANR	2200667	Identifier	num_fds		2200638	0					
ANR	2200668	PrimaryExpression	1		2200638	1					
ANR	2200669	CompoundStatement		8:22:108:108	2200638	1					
ANR	2200670	ReturnStatement	"return do_dir_contents_one_fd ( func , data ) ;"	1490:8:36910:36951	2200638	0	True				
ANR	2200671	CallExpression	"do_dir_contents_one_fd ( func , data )"		2200638	0					
ANR	2200672	Callee	do_dir_contents_one_fd		2200638	0					
ANR	2200673	Identifier	do_dir_contents_one_fd		2200638	0					
ANR	2200674	ArgumentList	func		2200638	1					
ANR	2200675	Argument	func		2200638	0					
ANR	2200676	Identifier	func		2200638	0					
ANR	2200677	Argument	data		2200638	1					
ANR	2200678	Identifier	data		2200638	0					
ANR	2200679	ExpressionStatement	"dir = opendir ( ""."" )"	1493:4:36978:36996	2200638	6	True				
ANR	2200680	AssignmentExpression	"dir = opendir ( ""."" )"		2200638	0		=			
ANR	2200681	Identifier	dir		2200638	0					
ANR	2200682	CallExpression	"opendir ( ""."" )"		2200638	1					
ANR	2200683	Callee	opendir		2200638	0					
ANR	2200684	Identifier	opendir		2200638	0					
ANR	2200685	ArgumentList	"""."""		2200638	1					
ANR	2200686	Argument	"""."""		2200638	0					
ANR	2200687	PrimaryExpression	"""."""		2200638	0					
ANR	2200688	IfStatement	if ( dir == NULL )		2200638	7					
ANR	2200689	Condition	dir == NULL	1494:8:37006:37016	2200638	0	True				
ANR	2200690	EqualityExpression	dir == NULL		2200638	0		==			
ANR	2200691	Identifier	dir		2200638	0					
ANR	2200692	Identifier	NULL		2200638	1					
ANR	2200693	CompoundStatement		13:21:227:227	2200638	1					
ANR	2200694	ReturnStatement	return - 1 ;	1495:8:37029:37038	2200638	0	True				
ANR	2200695	UnaryOperationExpression	- 1		2200638	0					
ANR	2200696	UnaryOperator	-		2200638	0					
ANR	2200697	PrimaryExpression	1		2200638	1					
ANR	2200698	ExpressionStatement	dir_fd = dirfd ( dir )	1497:4:37050:37069	2200638	8	True				
ANR	2200699	AssignmentExpression	dir_fd = dirfd ( dir )		2200638	0		=			
ANR	2200700	Identifier	dir_fd		2200638	0					
ANR	2200701	CallExpression	dirfd ( dir )		2200638	1					
ANR	2200702	Callee	dirfd		2200638	0					
ANR	2200703	Identifier	dirfd		2200638	0					
ANR	2200704	ArgumentList	dir		2200638	1					
ANR	2200705	Argument	dir		2200638	0					
ANR	2200706	Identifier	dir		2200638	0					
ANR	2200707	WhileStatement	while ( ( de = readdir ( dir ) ) != 0 )		2200638	9					
ANR	2200708	Condition	( de = readdir ( dir ) ) != 0	1504:11:37180:37203	2200638	0	True				
ANR	2200709	EqualityExpression	( de = readdir ( dir ) ) != 0		2200638	0		!=			
ANR	2200710	AssignmentExpression	de = readdir ( dir )		2200638	0		=			
ANR	2200711	Identifier	de		2200638	0					
ANR	2200712	CallExpression	readdir ( dir )		2200638	1					
ANR	2200713	Callee	readdir		2200638	0					
ANR	2200714	Identifier	readdir		2200638	0					
ANR	2200715	ArgumentList	dir		2200638	1					
ANR	2200716	Argument	dir		2200638	0					
ANR	2200717	Identifier	dir		2200638	0					
ANR	2200718	PrimaryExpression	0		2200638	1					
ANR	2200719	CompoundStatement		25:8:454:484	2200638	1					
ANR	2200720	IdentifierDeclStatement	struct stat stat_buf ;	1505:8:37216:37236	2200638	0	True				
ANR	2200721	IdentifierDecl	stat_buf		2200638	0					
ANR	2200722	IdentifierDeclType	struct stat		2200638	0					
ANR	2200723	Identifier	stat_buf		2200638	1					
ANR	2200724	IdentifierDeclStatement	struct stat * statp = & stat_buf ;	1506:8:37246:37276	2200638	1	True				
ANR	2200725	IdentifierDecl	* statp = & stat_buf		2200638	0					
ANR	2200726	IdentifierDeclType	struct stat *		2200638	0					
ANR	2200727	Identifier	statp		2200638	1					
ANR	2200728	AssignmentExpression	* statp = & stat_buf		2200638	2		=			
ANR	2200729	Identifier	statp		2200638	0					
ANR	2200730	UnaryOperationExpression	& stat_buf		2200638	1					
ANR	2200731	UnaryOperator	&		2200638	0					
ANR	2200732	Identifier	stat_buf		2200638	1					
ANR	2200733	IfStatement	"if ( ! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" ) )"		2200638	2					
ANR	2200734	Condition	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"	1508:12:37291:37343	2200638	0	True				
ANR	2200735	OrExpression	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"		2200638	0		||			
ANR	2200736	UnaryOperationExpression	"! strcmp ( de -> d_name , ""."" )"		2200638	0					
ANR	2200737	UnaryOperator	!		2200638	0					
ANR	2200738	CallExpression	"strcmp ( de -> d_name , ""."" )"		2200638	1					
ANR	2200739	Callee	strcmp		2200638	0					
ANR	2200740	Identifier	strcmp		2200638	0					
ANR	2200741	ArgumentList	de -> d_name		2200638	1					
ANR	2200742	Argument	de -> d_name		2200638	0					
ANR	2200743	PtrMemberAccess	de -> d_name		2200638	0					
ANR	2200744	Identifier	de		2200638	0					
ANR	2200745	Identifier	d_name		2200638	1					
ANR	2200746	Argument	"""."""		2200638	1					
ANR	2200747	PrimaryExpression	"""."""		2200638	0					
ANR	2200748	UnaryOperationExpression	"! strcmp ( de -> d_name , "".."" )"		2200638	1					
ANR	2200749	UnaryOperator	!		2200638	0					
ANR	2200750	CallExpression	"strcmp ( de -> d_name , "".."" )"		2200638	1					
ANR	2200751	Callee	strcmp		2200638	0					
ANR	2200752	Identifier	strcmp		2200638	0					
ANR	2200753	ArgumentList	de -> d_name		2200638	1					
ANR	2200754	Argument	de -> d_name		2200638	0					
ANR	2200755	PtrMemberAccess	de -> d_name		2200638	0					
ANR	2200756	Identifier	de		2200638	0					
ANR	2200757	Identifier	d_name		2200638	1					
ANR	2200758	Argument	""".."""		2200638	1					
ANR	2200759	PrimaryExpression	""".."""		2200638	0					
ANR	2200760	CompoundStatement		27:67:554:554	2200638	1					
ANR	2200761	ContinueStatement	continue ;	1509:12:37360:37368	2200638	0	True				
ANR	2200762	ExpressionStatement	"r = lstat ( de -> d_name , statp )"	1512:8:37389:37417	2200638	3	True				
ANR	2200763	AssignmentExpression	"r = lstat ( de -> d_name , statp )"		2200638	0		=			
ANR	2200764	Identifier	r		2200638	0					
ANR	2200765	CallExpression	"lstat ( de -> d_name , statp )"		2200638	1					
ANR	2200766	Callee	lstat		2200638	0					
ANR	2200767	Identifier	lstat		2200638	0					
ANR	2200768	ArgumentList	de -> d_name		2200638	1					
ANR	2200769	Argument	de -> d_name		2200638	0					
ANR	2200770	PtrMemberAccess	de -> d_name		2200638	0					
ANR	2200771	Identifier	de		2200638	0					
ANR	2200772	Identifier	d_name		2200638	1					
ANR	2200773	Argument	statp		2200638	1					
ANR	2200774	Identifier	statp		2200638	0					
ANR	2200775	IfStatement	if ( r == - 1 )		2200638	4					
ANR	2200776	Condition	r == - 1	1513:12:37431:37437	2200638	0	True				
ANR	2200777	EqualityExpression	r == - 1		2200638	0		==			
ANR	2200778	Identifier	r		2200638	0					
ANR	2200779	UnaryOperationExpression	- 1		2200638	1					
ANR	2200780	UnaryOperator	-		2200638	0					
ANR	2200781	PrimaryExpression	1		2200638	1					
ANR	2200782	CompoundStatement		32:21:648:648	2200638	1					
ANR	2200783	ExpressionStatement	statp = 0	1514:12:37454:37463	2200638	0	True				
ANR	2200784	AssignmentExpression	statp = 0		2200638	0		=			
ANR	2200785	Identifier	statp		2200638	0					
ANR	2200786	PrimaryExpression	0		2200638	1					
ANR	2200787	IfStatement	if ( statp && S_ISDIR ( statp -> st_mode ) )		2200638	5					
ANR	2200788	Condition	statp && S_ISDIR ( statp -> st_mode )	1517:12:37488:37519	2200638	0	True				
ANR	2200789	AndExpression	statp && S_ISDIR ( statp -> st_mode )		2200638	0		&&			
ANR	2200790	Identifier	statp		2200638	0					
ANR	2200791	CallExpression	S_ISDIR ( statp -> st_mode )		2200638	1					
ANR	2200792	Callee	S_ISDIR		2200638	0					
ANR	2200793	Identifier	S_ISDIR		2200638	0					
ANR	2200794	ArgumentList	statp -> st_mode		2200638	1					
ANR	2200795	Argument	statp -> st_mode		2200638	0					
ANR	2200796	PtrMemberAccess	statp -> st_mode		2200638	0					
ANR	2200797	Identifier	statp		2200638	0					
ANR	2200798	Identifier	st_mode		2200638	1					
ANR	2200799	CompoundStatement		36:46:730:730	2200638	1					
ANR	2200800	ExpressionStatement	status = chdir_no_follow ( de -> d_name )	1518:12:37536:37572	2200638	0	True				
ANR	2200801	AssignmentExpression	status = chdir_no_follow ( de -> d_name )		2200638	0		=			
ANR	2200802	Identifier	status		2200638	0					
ANR	2200803	CallExpression	chdir_no_follow ( de -> d_name )		2200638	1					
ANR	2200804	Callee	chdir_no_follow		2200638	0					
ANR	2200805	Identifier	chdir_no_follow		2200638	0					
ANR	2200806	ArgumentList	de -> d_name		2200638	1					
ANR	2200807	Argument	de -> d_name		2200638	0					
ANR	2200808	PtrMemberAccess	de -> d_name		2200638	0					
ANR	2200809	Identifier	de		2200638	0					
ANR	2200810	Identifier	d_name		2200638	1					
ANR	2200811	IfStatement	if ( status == - 1 )		2200638	1					
ANR	2200812	Condition	status == - 1	1519:16:37590:37601	2200638	0	True				
ANR	2200813	EqualityExpression	status == - 1		2200638	0		==			
ANR	2200814	Identifier	status		2200638	0					
ANR	2200815	UnaryOperationExpression	- 1		2200638	1					
ANR	2200816	UnaryOperator	-		2200638	0					
ANR	2200817	PrimaryExpression	1		2200638	1					
ANR	2200818	CompoundStatement		38:30:812:812	2200638	1					
ANR	2200819	BreakStatement	break ;	1520:16:37622:37627	2200638	0	True				
ANR	2200820	ExpressionStatement	"status = do_dir_contents ( func , data , num_fds - 1 )"	1523:12:37656:37705	2200638	2	True				
ANR	2200821	AssignmentExpression	"status = do_dir_contents ( func , data , num_fds - 1 )"		2200638	0		=			
ANR	2200822	Identifier	status		2200638	0					
ANR	2200823	CallExpression	"do_dir_contents ( func , data , num_fds - 1 )"		2200638	1					
ANR	2200824	Callee	do_dir_contents		2200638	0					
ANR	2200825	Identifier	do_dir_contents		2200638	0					
ANR	2200826	ArgumentList	func		2200638	1					
ANR	2200827	Argument	func		2200638	0					
ANR	2200828	Identifier	func		2200638	0					
ANR	2200829	Argument	data		2200638	1					
ANR	2200830	Identifier	data		2200638	0					
ANR	2200831	Argument	num_fds - 1		2200638	2					
ANR	2200832	AdditiveExpression	num_fds - 1		2200638	0		-			
ANR	2200833	Identifier	num_fds		2200638	0					
ANR	2200834	PrimaryExpression	1		2200638	1					
ANR	2200835	ExpressionStatement	r = fchdir ( dir_fd )	1525:12:37720:37738	2200638	3	True				
ANR	2200836	AssignmentExpression	r = fchdir ( dir_fd )		2200638	0		=			
ANR	2200837	Identifier	r		2200638	0					
ANR	2200838	CallExpression	fchdir ( dir_fd )		2200638	1					
ANR	2200839	Callee	fchdir		2200638	0					
ANR	2200840	Identifier	fchdir		2200638	0					
ANR	2200841	ArgumentList	dir_fd		2200638	1					
ANR	2200842	Argument	dir_fd		2200638	0					
ANR	2200843	Identifier	dir_fd		2200638	0					
ANR	2200844	IfStatement	if ( status != 0 || r != 0 )		2200638	4					
ANR	2200845	Condition	status != 0 || r != 0	1526:16:37756:37776	2200638	0	True				
ANR	2200846	OrExpression	status != 0 || r != 0		2200638	0		||			
ANR	2200847	EqualityExpression	status != 0		2200638	0		!=			
ANR	2200848	Identifier	status		2200638	0					
ANR	2200849	PrimaryExpression	0		2200638	1					
ANR	2200850	EqualityExpression	r != 0		2200638	1		!=			
ANR	2200851	Identifier	r		2200638	0					
ANR	2200852	PrimaryExpression	0		2200638	1					
ANR	2200853	CompoundStatement		45:39:987:987	2200638	1					
ANR	2200854	IfStatement	if ( status == 0 )		2200638	0					
ANR	2200855	Condition	status == 0	1527:20:37801:37811	2200638	0	True				
ANR	2200856	EqualityExpression	status == 0		2200638	0		==			
ANR	2200857	Identifier	status		2200638	0					
ANR	2200858	PrimaryExpression	0		2200638	1					
ANR	2200859	CompoundStatement		46:33:1022:1022	2200638	1					
ANR	2200860	ExpressionStatement	status = r	1528:20:37836:37846	2200638	0	True				
ANR	2200861	AssignmentExpression	status = r		2200638	0		=			
ANR	2200862	Identifier	status		2200638	0					
ANR	2200863	Identifier	r		2200638	1					
ANR	2200864	BreakStatement	break ;	1530:16:37882:37887	2200638	1	True				
ANR	2200865	ExpressionStatement	"status = func ( de -> d_name , statp , data )"	1534:8:37922:37960	2200638	6	True				
ANR	2200866	AssignmentExpression	"status = func ( de -> d_name , statp , data )"		2200638	0		=			
ANR	2200867	Identifier	status		2200638	0					
ANR	2200868	CallExpression	"func ( de -> d_name , statp , data )"		2200638	1					
ANR	2200869	Callee	func		2200638	0					
ANR	2200870	Identifier	func		2200638	0					
ANR	2200871	ArgumentList	de -> d_name		2200638	1					
ANR	2200872	Argument	de -> d_name		2200638	0					
ANR	2200873	PtrMemberAccess	de -> d_name		2200638	0					
ANR	2200874	Identifier	de		2200638	0					
ANR	2200875	Identifier	d_name		2200638	1					
ANR	2200876	Argument	statp		2200638	1					
ANR	2200877	Identifier	statp		2200638	0					
ANR	2200878	Argument	data		2200638	2					
ANR	2200879	Identifier	data		2200638	0					
ANR	2200880	IfStatement	if ( status != 0 )		2200638	7					
ANR	2200881	Condition	status != 0	1535:12:37974:37984	2200638	0	True				
ANR	2200882	EqualityExpression	status != 0		2200638	0		!=			
ANR	2200883	Identifier	status		2200638	0					
ANR	2200884	PrimaryExpression	0		2200638	1					
ANR	2200885	CompoundStatement		54:25:1195:1195	2200638	1					
ANR	2200886	BreakStatement	break ;	1536:12:38001:38006	2200638	0	True				
ANR	2200887	ExpressionStatement	r = closedir ( dir )	1540:4:38029:38046	2200638	10	True				
ANR	2200888	AssignmentExpression	r = closedir ( dir )		2200638	0		=			
ANR	2200889	Identifier	r		2200638	0					
ANR	2200890	CallExpression	closedir ( dir )		2200638	1					
ANR	2200891	Callee	closedir		2200638	0					
ANR	2200892	Identifier	closedir		2200638	0					
ANR	2200893	ArgumentList	dir		2200638	1					
ANR	2200894	Argument	dir		2200638	0					
ANR	2200895	Identifier	dir		2200638	0					
ANR	2200896	ExpressionStatement	close ( dir_fd )	1542:4:38068:38081	2200638	11	True				
ANR	2200897	CallExpression	close ( dir_fd )		2200638	0					
ANR	2200898	Callee	close		2200638	0					
ANR	2200899	Identifier	close		2200638	0					
ANR	2200900	ArgumentList	dir_fd		2200638	1					
ANR	2200901	Argument	dir_fd		2200638	0					
ANR	2200902	Identifier	dir_fd		2200638	0					
ANR	2200903	IfStatement	if ( status == 0 )		2200638	12					
ANR	2200904	Condition	status == 0	1545:8:38099:38109	2200638	0	True				
ANR	2200905	EqualityExpression	status == 0		2200638	0		==			
ANR	2200906	Identifier	status		2200638	0					
ANR	2200907	PrimaryExpression	0		2200638	1					
ANR	2200908	CompoundStatement		64:21:1320:1320	2200638	1					
ANR	2200909	ExpressionStatement	status = r	1546:8:38122:38132	2200638	0	True				
ANR	2200910	AssignmentExpression	status = r		2200638	0		=			
ANR	2200911	Identifier	status		2200638	0					
ANR	2200912	Identifier	r		2200638	1					
ANR	2200913	ReturnStatement	return status ;	1549:4:38145:38158	2200638	13	True				
ANR	2200914	Identifier	status		2200638	0					
ANR	2200915	ReturnType	static int		2200638	1					
ANR	2200916	Identifier	do_dir_contents		2200638	2					
ANR	2200917	ParameterList	"safe_dir_walk_func func , void * data , int num_fds"		2200638	3					
ANR	2200918	Parameter	safe_dir_walk_func func	1481:16:36741:36763	2200638	0	True				
ANR	2200919	ParameterType	safe_dir_walk_func		2200638	0					
ANR	2200920	Identifier	func		2200638	1					
ANR	2200921	Parameter	void * data	1481:41:36766:36775	2200638	1	True				
ANR	2200922	ParameterType	void *		2200638	0					
ANR	2200923	Identifier	data		2200638	1					
ANR	2200924	Parameter	int num_fds	1481:53:36778:36788	2200638	2	True				
ANR	2200925	ParameterType	int		2200638	0					
ANR	2200926	Identifier	num_fds		2200638	1					
ANR	2200927	CFGEntryNode	ENTRY		2200638		True				
ANR	2200928	CFGExitNode	EXIT		2200638		True				
ANR	2200929	Symbol	de		2200638						
ANR	2200930	Symbol	de -> d_name		2200638						
ANR	2200931	Symbol	statp -> st_mode		2200638						
ANR	2200932	Symbol	data		2200638						
ANR	2200933	Symbol	& stat_buf		2200638						
ANR	2200934	Symbol	stat_buf		2200638						
ANR	2200935	Symbol	dir		2200638						
ANR	2200936	Symbol	* statp		2200638						
ANR	2200937	Symbol	fchdir		2200638						
ANR	2200938	Symbol	dir_fd		2200638						
ANR	2200939	Symbol	readdir		2200638						
ANR	2200940	Symbol	statp		2200638						
ANR	2200941	Symbol	chdir_no_follow		2200638						
ANR	2200942	Symbol	strcmp		2200638						
ANR	2200943	Symbol	NULL		2200638						
ANR	2200944	Symbol	* de		2200638						
ANR	2200945	Symbol	lstat		2200638						
ANR	2200946	Symbol	r		2200638						
ANR	2200947	Symbol	func		2200638						
ANR	2200948	Symbol	do_dir_contents_one_fd		2200638						
ANR	2200949	Symbol	opendir		2200638						
ANR	2200950	Symbol	closedir		2200638						
ANR	2200951	Symbol	dirfd		2200638						
ANR	2200952	Symbol	S_ISDIR		2200638						
ANR	2200953	Symbol	do_dir_contents		2200638						
ANR	2200954	Symbol	num_fds		2200638						
ANR	2200955	Symbol	status		2200638						
ANR	2200956	Function	safe_dir_walk	1567:0:38503:39271							
ANR	2200957	FunctionDef	"safe_dir_walk (const char * path , safe_dir_walk_func func , void * data , int num_fds)"		2200956	0					
ANR	2200958	CompoundStatement		1570:0:38603:39271	2200956	0					
ANR	2200959	IdentifierDeclStatement	int r ;	1571:4:38609:38614	2200956	0	True				
ANR	2200960	IdentifierDecl	r		2200956	0					
ANR	2200961	IdentifierDeclType	int		2200956	0					
ANR	2200962	Identifier	r		2200956	1					
ANR	2200963	IdentifierDeclStatement	int saved_dir ;	1572:4:38620:38633	2200956	1	True				
ANR	2200964	IdentifierDecl	saved_dir		2200956	0					
ANR	2200965	IdentifierDeclType	int		2200956	0					
ANR	2200966	Identifier	saved_dir		2200956	1					
ANR	2200967	IdentifierDeclStatement	int status = - 1 ;	1573:4:38639:38654	2200956	2	True				
ANR	2200968	IdentifierDecl	status = - 1		2200956	0					
ANR	2200969	IdentifierDeclType	int		2200956	0					
ANR	2200970	Identifier	status		2200956	1					
ANR	2200971	AssignmentExpression	status = - 1		2200956	2		=			
ANR	2200972	Identifier	status		2200956	0					
ANR	2200973	UnaryOperationExpression	- 1		2200956	1					
ANR	2200974	UnaryOperator	-		2200956	0					
ANR	2200975	PrimaryExpression	1		2200956	1					
ANR	2200976	ExpressionStatement	"saved_dir = open ( ""."" , O_RDONLY )"	1576:4:38698:38729	2200956	3	True				
ANR	2200977	AssignmentExpression	"saved_dir = open ( ""."" , O_RDONLY )"		2200956	0		=			
ANR	2200978	Identifier	saved_dir		2200956	0					
ANR	2200979	CallExpression	"open ( ""."" , O_RDONLY )"		2200956	1					
ANR	2200980	Callee	open		2200956	0					
ANR	2200981	Identifier	open		2200956	0					
ANR	2200982	ArgumentList	"""."""		2200956	1					
ANR	2200983	Argument	"""."""		2200956	0					
ANR	2200984	PrimaryExpression	"""."""		2200956	0					
ANR	2200985	Argument	O_RDONLY		2200956	1					
ANR	2200986	Identifier	O_RDONLY		2200956	0					
ANR	2200987	IfStatement	if ( saved_dir == - 1 )		2200956	4					
ANR	2200988	Condition	saved_dir == - 1	1577:8:38739:38753	2200956	0	True				
ANR	2200989	EqualityExpression	saved_dir == - 1		2200956	0		==			
ANR	2200990	Identifier	saved_dir		2200956	0					
ANR	2200991	UnaryOperationExpression	- 1		2200956	1					
ANR	2200992	UnaryOperator	-		2200956	0					
ANR	2200993	PrimaryExpression	1		2200956	1					
ANR	2200994	CompoundStatement		8:25:152:152	2200956	1					
ANR	2200995	GotoStatement	goto cleanup_and_exit ;	1578:8:38766:38787	2200956	0	True				
ANR	2200996	Identifier	cleanup_and_exit		2200956	0					
ANR	2200997	ExpressionStatement	r = chdir_no_follow ( path )	1581:4:38800:38825	2200956	5	True				
ANR	2200998	AssignmentExpression	r = chdir_no_follow ( path )		2200956	0		=			
ANR	2200999	Identifier	r		2200956	0					
ANR	2201000	CallExpression	chdir_no_follow ( path )		2200956	1					
ANR	2201001	Callee	chdir_no_follow		2200956	0					
ANR	2201002	Identifier	chdir_no_follow		2200956	0					
ANR	2201003	ArgumentList	path		2200956	1					
ANR	2201004	Argument	path		2200956	0					
ANR	2201005	Identifier	path		2200956	0					
ANR	2201006	IfStatement	if ( r == - 1 )		2200956	6					
ANR	2201007	Condition	r == - 1	1582:8:38835:38841	2200956	0	True				
ANR	2201008	EqualityExpression	r == - 1		2200956	0		==			
ANR	2201009	Identifier	r		2200956	0					
ANR	2201010	UnaryOperationExpression	- 1		2200956	1					
ANR	2201011	UnaryOperator	-		2200956	0					
ANR	2201012	PrimaryExpression	1		2200956	1					
ANR	2201013	CompoundStatement		13:17:240:240	2200956	1					
ANR	2201014	GotoStatement	goto cleanup_and_exit ;	1583:8:38854:38875	2200956	0	True				
ANR	2201015	Identifier	cleanup_and_exit		2200956	0					
ANR	2201016	ExpressionStatement	"status = do_dir_contents ( func , data , num_fds - 1 )"	1586:4:38888:38937	2200956	7	True				
ANR	2201017	AssignmentExpression	"status = do_dir_contents ( func , data , num_fds - 1 )"		2200956	0		=			
ANR	2201018	Identifier	status		2200956	0					
ANR	2201019	CallExpression	"do_dir_contents ( func , data , num_fds - 1 )"		2200956	1					
ANR	2201020	Callee	do_dir_contents		2200956	0					
ANR	2201021	Identifier	do_dir_contents		2200956	0					
ANR	2201022	ArgumentList	func		2200956	1					
ANR	2201023	Argument	func		2200956	0					
ANR	2201024	Identifier	func		2200956	0					
ANR	2201025	Argument	data		2200956	1					
ANR	2201026	Identifier	data		2200956	0					
ANR	2201027	Argument	num_fds - 1		2200956	2					
ANR	2201028	AdditiveExpression	num_fds - 1		2200956	0		-			
ANR	2201029	Identifier	num_fds		2200956	0					
ANR	2201030	PrimaryExpression	1		2200956	1					
ANR	2201031	Label	cleanup_and_exit :	1588:2:38942:38958	2200956	8	True				
ANR	2201032	Identifier	cleanup_and_exit		2200956	0					
ANR	2201033	IfStatement	if ( saved_dir != - 1 )		2200956	9					
ANR	2201034	Condition	saved_dir != - 1	1591:8:39026:39040	2200956	0	True				
ANR	2201035	EqualityExpression	saved_dir != - 1		2200956	0		!=			
ANR	2201036	Identifier	saved_dir		2200956	0					
ANR	2201037	UnaryOperationExpression	- 1		2200956	1					
ANR	2201038	UnaryOperator	-		2200956	0					
ANR	2201039	PrimaryExpression	1		2200956	1					
ANR	2201040	CompoundStatement		22:25:439:439	2200956	1					
ANR	2201041	ExpressionStatement	r = fchdir ( saved_dir )	1592:8:39053:39074	2200956	0	True				
ANR	2201042	AssignmentExpression	r = fchdir ( saved_dir )		2200956	0		=			
ANR	2201043	Identifier	r		2200956	0					
ANR	2201044	CallExpression	fchdir ( saved_dir )		2200956	1					
ANR	2201045	Callee	fchdir		2200956	0					
ANR	2201046	Identifier	fchdir		2200956	0					
ANR	2201047	ArgumentList	saved_dir		2200956	1					
ANR	2201048	Argument	saved_dir		2200956	0					
ANR	2201049	Identifier	saved_dir		2200956	0					
ANR	2201050	IfStatement	if ( ! status && r == - 1 )		2200956	1					
ANR	2201051	Condition	! status && r == - 1	1593:12:39088:39105	2200956	0	True				
ANR	2201052	AndExpression	! status && r == - 1		2200956	0		&&			
ANR	2201053	UnaryOperationExpression	! status		2200956	0					
ANR	2201054	UnaryOperator	!		2200956	0					
ANR	2201055	Identifier	status		2200956	1					
ANR	2201056	EqualityExpression	r == - 1		2200956	1		==			
ANR	2201057	Identifier	r		2200956	0					
ANR	2201058	UnaryOperationExpression	- 1		2200956	1					
ANR	2201059	UnaryOperator	-		2200956	0					
ANR	2201060	PrimaryExpression	1		2200956	1					
ANR	2201061	CompoundStatement		24:32:504:504	2200956	1					
ANR	2201062	ExpressionStatement	status = - 1	1594:12:39122:39133	2200956	0	True				
ANR	2201063	AssignmentExpression	status = - 1		2200956	0		=			
ANR	2201064	Identifier	status		2200956	0					
ANR	2201065	UnaryOperationExpression	- 1		2200956	1					
ANR	2201066	UnaryOperator	-		2200956	0					
ANR	2201067	PrimaryExpression	1		2200956	1					
ANR	2201068	ExpressionStatement	r = close ( saved_dir )	1597:8:39154:39174	2200956	2	True				
ANR	2201069	AssignmentExpression	r = close ( saved_dir )		2200956	0		=			
ANR	2201070	Identifier	r		2200956	0					
ANR	2201071	CallExpression	close ( saved_dir )		2200956	1					
ANR	2201072	Callee	close		2200956	0					
ANR	2201073	Identifier	close		2200956	0					
ANR	2201074	ArgumentList	saved_dir		2200956	1					
ANR	2201075	Argument	saved_dir		2200956	0					
ANR	2201076	Identifier	saved_dir		2200956	0					
ANR	2201077	IfStatement	if ( ! status && r == - 1 )		2200956	3					
ANR	2201078	Condition	! status && r == - 1	1598:12:39188:39205	2200956	0	True				
ANR	2201079	AndExpression	! status && r == - 1		2200956	0		&&			
ANR	2201080	UnaryOperationExpression	! status		2200956	0					
ANR	2201081	UnaryOperator	!		2200956	0					
ANR	2201082	Identifier	status		2200956	1					
ANR	2201083	EqualityExpression	r == - 1		2200956	1		==			
ANR	2201084	Identifier	r		2200956	0					
ANR	2201085	UnaryOperationExpression	- 1		2200956	1					
ANR	2201086	UnaryOperator	-		2200956	0					
ANR	2201087	PrimaryExpression	1		2200956	1					
ANR	2201088	CompoundStatement		29:32:604:604	2200956	1					
ANR	2201089	ExpressionStatement	status = - 1	1599:12:39222:39233	2200956	0	True				
ANR	2201090	AssignmentExpression	status = - 1		2200956	0		=			
ANR	2201091	Identifier	status		2200956	0					
ANR	2201092	UnaryOperationExpression	- 1		2200956	1					
ANR	2201093	UnaryOperator	-		2200956	0					
ANR	2201094	PrimaryExpression	1		2200956	1					
ANR	2201095	ReturnStatement	return status ;	1603:4:39256:39269	2200956	10	True				
ANR	2201096	Identifier	status		2200956	0					
ANR	2201097	ReturnType	int		2200956	1					
ANR	2201098	Identifier	safe_dir_walk		2200956	2					
ANR	2201099	ParameterList	"const char * path , safe_dir_walk_func func , void * data , int num_fds"		2200956	3					
ANR	2201100	Parameter	const char * path	1568:14:38521:38536	2200956	0	True				
ANR	2201101	ParameterType	const char *		2200956	0					
ANR	2201102	Identifier	path		2200956	1					
ANR	2201103	Parameter	safe_dir_walk_func func	1568:32:38539:38561	2200956	1	True				
ANR	2201104	ParameterType	safe_dir_walk_func		2200956	0					
ANR	2201105	Identifier	func		2200956	1					
ANR	2201106	Parameter	void * data	1568:57:38564:38573	2200956	2	True				
ANR	2201107	ParameterType	void *		2200956	0					
ANR	2201108	Identifier	data		2200956	1					
ANR	2201109	Parameter	int num_fds	1569:14:38590:38600	2200956	3	True				
ANR	2201110	ParameterType	int		2200956	0					
ANR	2201111	Identifier	num_fds		2200956	1					
ANR	2201112	CFGEntryNode	ENTRY		2200956		True				
ANR	2201113	CFGExitNode	EXIT		2200956		True				
ANR	2201114	Symbol	saved_dir		2200956						
ANR	2201115	Symbol	data		2200956						
ANR	2201116	Symbol	fchdir		2200956						
ANR	2201117	Symbol	path		2200956						
ANR	2201118	Symbol	r		2200956						
ANR	2201119	Symbol	O_RDONLY		2200956						
ANR	2201120	Symbol	func		2200956						
ANR	2201121	Symbol	chdir_no_follow		2200956						
ANR	2201122	Symbol	do_dir_contents		2200956						
ANR	2201123	Symbol	num_fds		2200956						
ANR	2201124	Symbol	close		2200956						
ANR	2201125	Symbol	open		2200956						
ANR	2201126	Symbol	status		2200956						
