command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4565880	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_ad_printmask.cpp								
ANR	4565881	DeclStmt									
ANR	4565882	Decl							char	char * ( const char * )	new_strdup
ANR	4565883	Function	AttrListPrintMask :: AttrListPrintMask	29:0:1002:1045							
ANR	4565884	FunctionDef	AttrListPrintMask :: AttrListPrintMask ()		4565883	0					
ANR	4565885	CompoundStatement		31:0:1043:1045	4565883	0					
ANR	4565886	Identifier	AttrListPrintMask :: AttrListPrintMask		4565883	1					
ANR	4565887	ParameterList			4565883	2					
ANR	4565888	CFGEntryNode	ENTRY		4565883		True				
ANR	4565889	CFGExitNode	EXIT		4565883		True				
ANR	4565890	Function	AttrListPrintMask :: AttrListPrintMask	34:0:1048:1312							
ANR	4565891	FunctionDef	AttrListPrintMask :: AttrListPrintMask (const AttrListPrintMask & pm)		4565890	0					
ANR	4565892	CompoundStatement		36:0:1116:1312	4565890	0					
ANR	4565893	Statement	copyList	37:1:1119:1126	4565890	0	True				
ANR	4565894	Statement	(	37:10:1128:1128	4565890	1	True				
ANR	4565895	Statement	formats	37:11:1129:1135	4565890	2	True				
ANR	4565896	Statement	","	37:18:1136:1136	4565890	3	True				
ANR	4565897	Statement	const_cast	37:20:1138:1147	4565890	4	True				
ANR	4565898	Statement	<	37:30:1148:1148	4565890	5	True				
ANR	4565899	Statement	List	37:31:1149:1152	4565890	6	True				
ANR	4565900	Statement	<	37:35:1153:1153	4565890	7	True				
ANR	4565901	Statement	Formatter	37:36:1154:1162	4565890	8	True				
ANR	4565902	Statement	>	37:45:1163:1163	4565890	9	True				
ANR	4565903	Statement	&	37:47:1165:1165	4565890	10	True				
ANR	4565904	Statement	>	37:48:1166:1166	4565890	11	True				
ANR	4565905	Statement	(	37:49:1167:1167	4565890	12	True				
ANR	4565906	Statement	pm	37:50:1168:1169	4565890	13	True				
ANR	4565907	Statement	.	37:52:1170:1170	4565890	14	True				
ANR	4565908	Statement	formats	37:53:1171:1177	4565890	15	True				
ANR	4565909	Statement	)	37:60:1178:1178	4565890	16	True				
ANR	4565910	Statement	)	37:61:1179:1179	4565890	17	True				
ANR	4565911	ExpressionStatement		37:62:1180:1180	4565890	18	True				
ANR	4565912	Statement	copyList	38:1:1183:1190	4565890	19	True				
ANR	4565913	Statement	(	38:10:1192:1192	4565890	20	True				
ANR	4565914	Statement	attributes	38:11:1193:1202	4565890	21	True				
ANR	4565915	Statement	","	38:21:1203:1203	4565890	22	True				
ANR	4565916	Statement	const_cast	38:23:1205:1214	4565890	23	True				
ANR	4565917	Statement	<	38:33:1215:1215	4565890	24	True				
ANR	4565918	Statement	List	38:34:1216:1219	4565890	25	True				
ANR	4565919	Statement	<	38:38:1220:1220	4565890	26	True				
ANR	4565920	Statement	char	38:39:1221:1224	4565890	27	True				
ANR	4565921	Statement	>	38:43:1225:1225	4565890	28	True				
ANR	4565922	Statement	&	38:45:1227:1227	4565890	29	True				
ANR	4565923	Statement	>	38:46:1228:1228	4565890	30	True				
ANR	4565924	Statement	(	38:47:1229:1229	4565890	31	True				
ANR	4565925	Statement	pm	38:48:1230:1231	4565890	32	True				
ANR	4565926	Statement	.	38:50:1232:1232	4565890	33	True				
ANR	4565927	Statement	attributes	38:51:1233:1242	4565890	34	True				
ANR	4565928	Statement	)	38:61:1243:1243	4565890	35	True				
ANR	4565929	Statement	)	38:62:1244:1244	4565890	36	True				
ANR	4565930	ExpressionStatement		38:63:1245:1245	4565890	37	True				
ANR	4565931	Statement	copyList	39:1:1248:1255	4565890	38	True				
ANR	4565932	Statement	(	39:10:1257:1257	4565890	39	True				
ANR	4565933	Statement	alternates	39:11:1258:1267	4565890	40	True				
ANR	4565934	Statement	","	39:21:1268:1268	4565890	41	True				
ANR	4565935	Statement	const_cast	39:23:1270:1279	4565890	42	True				
ANR	4565936	Statement	<	39:33:1280:1280	4565890	43	True				
ANR	4565937	Statement	List	39:34:1281:1284	4565890	44	True				
ANR	4565938	Statement	<	39:38:1285:1285	4565890	45	True				
ANR	4565939	Statement	char	39:39:1286:1289	4565890	46	True				
ANR	4565940	Statement	>	39:43:1290:1290	4565890	47	True				
ANR	4565941	Statement	&	39:45:1292:1292	4565890	48	True				
ANR	4565942	Statement	>	39:46:1293:1293	4565890	49	True				
ANR	4565943	Statement	(	39:47:1294:1294	4565890	50	True				
ANR	4565944	Statement	pm	39:48:1295:1296	4565890	51	True				
ANR	4565945	Statement	.	39:50:1297:1297	4565890	52	True				
ANR	4565946	Statement	alternates	39:51:1298:1307	4565890	53	True				
ANR	4565947	Statement	)	39:61:1308:1308	4565890	54	True				
ANR	4565948	Statement	)	39:62:1309:1309	4565890	55	True				
ANR	4565949	ExpressionStatement		39:63:1310:1310	4565890	56	True				
ANR	4565950	Identifier	AttrListPrintMask :: AttrListPrintMask		4565890	1					
ANR	4565951	ParameterList	const AttrListPrintMask & pm		4565890	2					
ANR	4565952	Parameter	const AttrListPrintMask & pm	35:19:1087:1113	4565890	0	True				
ANR	4565953	ParameterType	const AttrListPrintMask &		4565890	0					
ANR	4565954	Identifier	pm		4565890	1					
ANR	4565955	CFGEntryNode	ENTRY		4565890		True				
ANR	4565956	CFGExitNode	EXIT		4565890		True				
ANR	4565957	Symbol	pm		4565890						
ANR	4565958	Function	AttrListPrintMask :: ~AttrListPrintMask	43:0:1316:1378							
ANR	4565959	FunctionDef	AttrListPrintMask :: ~AttrListPrintMask ()		4565958	0					
ANR	4565960	CompoundStatement		45:0:1358:1378	4565958	0					
ANR	4565961	ExpressionStatement	clearFormats ( )	46:1:1361:1376	4565958	0	True				
ANR	4565962	CallExpression	clearFormats ( )		4565958	0					
ANR	4565963	Callee	clearFormats		4565958	0					
ANR	4565964	Identifier	clearFormats		4565958	0					
ANR	4565965	ArgumentList			4565958	1					
ANR	4565966	Identifier	AttrListPrintMask :: ~AttrListPrintMask		4565958	1					
ANR	4565967	ParameterList			4565958	2					
ANR	4565968	CFGEntryNode	ENTRY		4565958		True				
ANR	4565969	CFGExitNode	EXIT		4565958		True				
ANR	4565970	Function	AttrListPrintMask :: registerFormat	50:0:1382:1734							
ANR	4565971	FunctionDef	"AttrListPrintMask :: registerFormat (const char * fmt , const char * attr , const char * alternate)"		4565970	0					
ANR	4565972	CompoundStatement		52:0:1481:1734	4565970	0					
ANR	4565973	Statement	Formatter	53:1:1484:1492	4565970	0	True				
ANR	4565974	Statement	*	53:11:1494:1494	4565970	1	True				
ANR	4565975	Statement	newFmt	53:12:1495:1500	4565970	2	True				
ANR	4565976	Statement	=	53:19:1502:1502	4565970	3	True				
ANR	4565977	Statement	new	53:21:1504:1506	4565970	4	True				
ANR	4565978	ExpressionStatement	Formatter	53:25:1508:1517	4565970	5	True				
ANR	4565979	Identifier	Formatter		4565970	0					
ANR	4565980	ExpressionStatement	newFmt -> fmtKind = PRINTF_FMT	55:1:1521:1549	4565970	6	True				
ANR	4565981	AssignmentExpression	newFmt -> fmtKind = PRINTF_FMT		4565970	0		=			
ANR	4565982	PtrMemberAccess	newFmt -> fmtKind		4565970	0					
ANR	4565983	Identifier	newFmt		4565970	0					
ANR	4565984	Identifier	fmtKind		4565970	1					
ANR	4565985	Identifier	PRINTF_FMT		4565970	1					
ANR	4565986	ExpressionStatement	newFmt -> printfFmt = collapse_escapes ( new_strdup ( fmt ) )	56:1:1552:1605	4565970	7	True				
ANR	4565987	AssignmentExpression	newFmt -> printfFmt = collapse_escapes ( new_strdup ( fmt ) )		4565970	0		=			
ANR	4565988	PtrMemberAccess	newFmt -> printfFmt		4565970	0					
ANR	4565989	Identifier	newFmt		4565970	0					
ANR	4565990	Identifier	printfFmt		4565970	1					
ANR	4565991	CallExpression	collapse_escapes ( new_strdup ( fmt ) )		4565970	1					
ANR	4565992	Callee	collapse_escapes		4565970	0					
ANR	4565993	Identifier	collapse_escapes		4565970	0					
ANR	4565994	ArgumentList	new_strdup ( fmt )		4565970	1					
ANR	4565995	Argument	new_strdup ( fmt )		4565970	0					
ANR	4565996	CallExpression	new_strdup ( fmt )		4565970	0					
ANR	4565997	Callee	new_strdup		4565970	0					
ANR	4565998	Identifier	new_strdup		4565970	0					
ANR	4565999	ArgumentList	fmt		4565970	1					
ANR	4566000	Argument	fmt		4565970	0					
ANR	4566001	Identifier	fmt		4565970	0					
ANR	4566002	ExpressionStatement	formats . Append ( newFmt )	57:1:1608:1631	4565970	8	True				
ANR	4566003	CallExpression	formats . Append ( newFmt )		4565970	0					
ANR	4566004	Callee	formats . Append		4565970	0					
ANR	4566005	MemberAccess	formats . Append		4565970	0					
ANR	4566006	Identifier	formats		4565970	0					
ANR	4566007	Identifier	Append		4565970	1					
ANR	4566008	ArgumentList	newFmt		4565970	1					
ANR	4566009	Argument	newFmt		4565970	0					
ANR	4566010	Identifier	newFmt		4565970	0					
ANR	4566011	ExpressionStatement	attributes . Append ( new_strdup ( attr ) )	59:1:1635:1671	4565970	9	True				
ANR	4566012	CallExpression	attributes . Append ( new_strdup ( attr ) )		4565970	0					
ANR	4566013	Callee	attributes . Append		4565970	0					
ANR	4566014	MemberAccess	attributes . Append		4565970	0					
ANR	4566015	Identifier	attributes		4565970	0					
ANR	4566016	Identifier	Append		4565970	1					
ANR	4566017	ArgumentList	new_strdup ( attr )		4565970	1					
ANR	4566018	Argument	new_strdup ( attr )		4565970	0					
ANR	4566019	CallExpression	new_strdup ( attr )		4565970	0					
ANR	4566020	Callee	new_strdup		4565970	0					
ANR	4566021	Identifier	new_strdup		4565970	0					
ANR	4566022	ArgumentList	attr		4565970	1					
ANR	4566023	Argument	attr		4565970	0					
ANR	4566024	Identifier	attr		4565970	0					
ANR	4566025	ExpressionStatement	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )	60:1:1674:1732	4565970	10	True				
ANR	4566026	CallExpression	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )		4565970	0					
ANR	4566027	Callee	alternates . Append		4565970	0					
ANR	4566028	MemberAccess	alternates . Append		4565970	0					
ANR	4566029	Identifier	alternates		4565970	0					
ANR	4566030	Identifier	Append		4565970	1					
ANR	4566031	ArgumentList	collapse_escapes ( new_strdup ( alternate ) )		4565970	1					
ANR	4566032	Argument	collapse_escapes ( new_strdup ( alternate ) )		4565970	0					
ANR	4566033	CallExpression	collapse_escapes ( new_strdup ( alternate ) )		4565970	0					
ANR	4566034	Callee	collapse_escapes		4565970	0					
ANR	4566035	Identifier	collapse_escapes		4565970	0					
ANR	4566036	ArgumentList	new_strdup ( alternate )		4565970	1					
ANR	4566037	Argument	new_strdup ( alternate )		4565970	0					
ANR	4566038	CallExpression	new_strdup ( alternate )		4565970	0					
ANR	4566039	Callee	new_strdup		4565970	0					
ANR	4566040	Identifier	new_strdup		4565970	0					
ANR	4566041	ArgumentList	alternate		4565970	1					
ANR	4566042	Argument	alternate		4565970	0					
ANR	4566043	Identifier	alternate		4565970	0					
ANR	4566044	ReturnType	void		4565970	1					
ANR	4566045	Identifier	AttrListPrintMask :: registerFormat		4565970	2					
ANR	4566046	ParameterList	"const char * fmt , const char * attr , const char * alternate"		4565970	3					
ANR	4566047	Parameter	const char * fmt	51:16:1423:1437	4565970	0	True				
ANR	4566048	ParameterType	const char *		4565970	0					
ANR	4566049	Identifier	fmt		4565970	1					
ANR	4566050	Parameter	const char * attr	51:33:1440:1455	4565970	1	True				
ANR	4566051	ParameterType	const char *		4565970	0					
ANR	4566052	Identifier	attr		4565970	1					
ANR	4566053	Parameter	const char * alternate	51:51:1458:1478	4565970	2	True				
ANR	4566054	ParameterType	const char *		4565970	0					
ANR	4566055	Identifier	alternate		4565970	1					
ANR	4566056	CFGEntryNode	ENTRY		4565970		True				
ANR	4566057	CFGExitNode	EXIT		4565970		True				
ANR	4566058	Symbol	collapse_escapes		4565970						
ANR	4566059	Symbol	formats		4565970						
ANR	4566060	Symbol	alternate		4565970						
ANR	4566061	Symbol	fmt		4565970						
ANR	4566062	Symbol	alternates		4565970						
ANR	4566063	Symbol	new_strdup		4565970						
ANR	4566064	Symbol	newFmt -> fmtKind		4565970						
ANR	4566065	Symbol	newFmt		4565970						
ANR	4566066	Symbol	* newFmt		4565970						
ANR	4566067	Symbol	newFmt -> printfFmt		4565970						
ANR	4566068	Symbol	attributes		4565970						
ANR	4566069	Symbol	attr		4565970						
ANR	4566070	Symbol	PRINTF_FMT		4565970						
ANR	4566071	Function	AttrListPrintMask :: registerFormat	63:0:1737:2058							
ANR	4566072	FunctionDef	"AttrListPrintMask :: registerFormat (IntCustomFmt fmt , const char * attr , const char * alternate)"		4566071	0					
ANR	4566073	CompoundStatement		65:0:1837:2058	4566071	0					
ANR	4566074	Statement	Formatter	66:1:1840:1848	4566071	0	True				
ANR	4566075	Statement	*	66:11:1850:1850	4566071	1	True				
ANR	4566076	Statement	newFmt	66:12:1851:1856	4566071	2	True				
ANR	4566077	Statement	=	66:19:1858:1858	4566071	3	True				
ANR	4566078	Statement	new	66:21:1860:1862	4566071	4	True				
ANR	4566079	ExpressionStatement	Formatter	66:25:1864:1873	4566071	5	True				
ANR	4566080	Identifier	Formatter		4566071	0					
ANR	4566081	ExpressionStatement	newFmt -> fmtKind = INT_CUSTOM_FMT	68:1:1877:1909	4566071	6	True				
ANR	4566082	AssignmentExpression	newFmt -> fmtKind = INT_CUSTOM_FMT		4566071	0		=			
ANR	4566083	PtrMemberAccess	newFmt -> fmtKind		4566071	0					
ANR	4566084	Identifier	newFmt		4566071	0					
ANR	4566085	Identifier	fmtKind		4566071	1					
ANR	4566086	Identifier	INT_CUSTOM_FMT		4566071	1					
ANR	4566087	ExpressionStatement	newFmt -> df = fmt	69:1:1912:1928	4566071	7	True				
ANR	4566088	AssignmentExpression	newFmt -> df = fmt		4566071	0		=			
ANR	4566089	PtrMemberAccess	newFmt -> df		4566071	0					
ANR	4566090	Identifier	newFmt		4566071	0					
ANR	4566091	Identifier	df		4566071	1					
ANR	4566092	Identifier	fmt		4566071	1					
ANR	4566093	ExpressionStatement	formats . Append ( newFmt )	71:1:1932:1955	4566071	8	True				
ANR	4566094	CallExpression	formats . Append ( newFmt )		4566071	0					
ANR	4566095	Callee	formats . Append		4566071	0					
ANR	4566096	MemberAccess	formats . Append		4566071	0					
ANR	4566097	Identifier	formats		4566071	0					
ANR	4566098	Identifier	Append		4566071	1					
ANR	4566099	ArgumentList	newFmt		4566071	1					
ANR	4566100	Argument	newFmt		4566071	0					
ANR	4566101	Identifier	newFmt		4566071	0					
ANR	4566102	ExpressionStatement	attributes . Append ( new_strdup ( attr ) )	73:1:1959:1995	4566071	9	True				
ANR	4566103	CallExpression	attributes . Append ( new_strdup ( attr ) )		4566071	0					
ANR	4566104	Callee	attributes . Append		4566071	0					
ANR	4566105	MemberAccess	attributes . Append		4566071	0					
ANR	4566106	Identifier	attributes		4566071	0					
ANR	4566107	Identifier	Append		4566071	1					
ANR	4566108	ArgumentList	new_strdup ( attr )		4566071	1					
ANR	4566109	Argument	new_strdup ( attr )		4566071	0					
ANR	4566110	CallExpression	new_strdup ( attr )		4566071	0					
ANR	4566111	Callee	new_strdup		4566071	0					
ANR	4566112	Identifier	new_strdup		4566071	0					
ANR	4566113	ArgumentList	attr		4566071	1					
ANR	4566114	Argument	attr		4566071	0					
ANR	4566115	Identifier	attr		4566071	0					
ANR	4566116	ExpressionStatement	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )	74:1:1998:2056	4566071	10	True				
ANR	4566117	CallExpression	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )		4566071	0					
ANR	4566118	Callee	alternates . Append		4566071	0					
ANR	4566119	MemberAccess	alternates . Append		4566071	0					
ANR	4566120	Identifier	alternates		4566071	0					
ANR	4566121	Identifier	Append		4566071	1					
ANR	4566122	ArgumentList	collapse_escapes ( new_strdup ( alternate ) )		4566071	1					
ANR	4566123	Argument	collapse_escapes ( new_strdup ( alternate ) )		4566071	0					
ANR	4566124	CallExpression	collapse_escapes ( new_strdup ( alternate ) )		4566071	0					
ANR	4566125	Callee	collapse_escapes		4566071	0					
ANR	4566126	Identifier	collapse_escapes		4566071	0					
ANR	4566127	ArgumentList	new_strdup ( alternate )		4566071	1					
ANR	4566128	Argument	new_strdup ( alternate )		4566071	0					
ANR	4566129	CallExpression	new_strdup ( alternate )		4566071	0					
ANR	4566130	Callee	new_strdup		4566071	0					
ANR	4566131	Identifier	new_strdup		4566071	0					
ANR	4566132	ArgumentList	alternate		4566071	1					
ANR	4566133	Argument	alternate		4566071	0					
ANR	4566134	Identifier	alternate		4566071	0					
ANR	4566135	ReturnType	void		4566071	1					
ANR	4566136	Identifier	AttrListPrintMask :: registerFormat		4566071	2					
ANR	4566137	ParameterList	"IntCustomFmt fmt , const char * attr , const char * alternate"		4566071	3					
ANR	4566138	Parameter	IntCustomFmt fmt	64:16:1778:1793	4566071	0	True				
ANR	4566139	ParameterType	IntCustomFmt		4566071	0					
ANR	4566140	Identifier	fmt		4566071	1					
ANR	4566141	Parameter	const char * attr	64:34:1796:1811	4566071	1	True				
ANR	4566142	ParameterType	const char *		4566071	0					
ANR	4566143	Identifier	attr		4566071	1					
ANR	4566144	Parameter	const char * alternate	64:52:1814:1834	4566071	2	True				
ANR	4566145	ParameterType	const char *		4566071	0					
ANR	4566146	Identifier	alternate		4566071	1					
ANR	4566147	CFGEntryNode	ENTRY		4566071		True				
ANR	4566148	CFGExitNode	EXIT		4566071		True				
ANR	4566149	Symbol	collapse_escapes		4566071						
ANR	4566150	Symbol	formats		4566071						
ANR	4566151	Symbol	INT_CUSTOM_FMT		4566071						
ANR	4566152	Symbol	alternate		4566071						
ANR	4566153	Symbol	fmt		4566071						
ANR	4566154	Symbol	alternates		4566071						
ANR	4566155	Symbol	newFmt -> df		4566071						
ANR	4566156	Symbol	new_strdup		4566071						
ANR	4566157	Symbol	newFmt -> fmtKind		4566071						
ANR	4566158	Symbol	newFmt		4566071						
ANR	4566159	Symbol	* newFmt		4566071						
ANR	4566160	Symbol	attributes		4566071						
ANR	4566161	Symbol	attr		4566071						
ANR	4566162	Function	AttrListPrintMask :: registerFormat	77:0:2061:2384							
ANR	4566163	FunctionDef	"AttrListPrintMask :: registerFormat (FloatCustomFmt fmt , const char * attr , const char * alternate)"		4566162	0					
ANR	4566164	CompoundStatement		79:0:2163:2384	4566162	0					
ANR	4566165	Statement	Formatter	80:1:2166:2174	4566162	0	True				
ANR	4566166	Statement	*	80:11:2176:2176	4566162	1	True				
ANR	4566167	Statement	newFmt	80:12:2177:2182	4566162	2	True				
ANR	4566168	Statement	=	80:19:2184:2184	4566162	3	True				
ANR	4566169	Statement	new	80:21:2186:2188	4566162	4	True				
ANR	4566170	ExpressionStatement	Formatter	80:25:2190:2199	4566162	5	True				
ANR	4566171	Identifier	Formatter		4566162	0					
ANR	4566172	ExpressionStatement	newFmt -> fmtKind = FLT_CUSTOM_FMT	82:1:2203:2235	4566162	6	True				
ANR	4566173	AssignmentExpression	newFmt -> fmtKind = FLT_CUSTOM_FMT		4566162	0		=			
ANR	4566174	PtrMemberAccess	newFmt -> fmtKind		4566162	0					
ANR	4566175	Identifier	newFmt		4566162	0					
ANR	4566176	Identifier	fmtKind		4566162	1					
ANR	4566177	Identifier	FLT_CUSTOM_FMT		4566162	1					
ANR	4566178	ExpressionStatement	newFmt -> ff = fmt	83:1:2238:2254	4566162	7	True				
ANR	4566179	AssignmentExpression	newFmt -> ff = fmt		4566162	0		=			
ANR	4566180	PtrMemberAccess	newFmt -> ff		4566162	0					
ANR	4566181	Identifier	newFmt		4566162	0					
ANR	4566182	Identifier	ff		4566162	1					
ANR	4566183	Identifier	fmt		4566162	1					
ANR	4566184	ExpressionStatement	formats . Append ( newFmt )	85:1:2258:2281	4566162	8	True				
ANR	4566185	CallExpression	formats . Append ( newFmt )		4566162	0					
ANR	4566186	Callee	formats . Append		4566162	0					
ANR	4566187	MemberAccess	formats . Append		4566162	0					
ANR	4566188	Identifier	formats		4566162	0					
ANR	4566189	Identifier	Append		4566162	1					
ANR	4566190	ArgumentList	newFmt		4566162	1					
ANR	4566191	Argument	newFmt		4566162	0					
ANR	4566192	Identifier	newFmt		4566162	0					
ANR	4566193	ExpressionStatement	attributes . Append ( new_strdup ( attr ) )	87:1:2285:2321	4566162	9	True				
ANR	4566194	CallExpression	attributes . Append ( new_strdup ( attr ) )		4566162	0					
ANR	4566195	Callee	attributes . Append		4566162	0					
ANR	4566196	MemberAccess	attributes . Append		4566162	0					
ANR	4566197	Identifier	attributes		4566162	0					
ANR	4566198	Identifier	Append		4566162	1					
ANR	4566199	ArgumentList	new_strdup ( attr )		4566162	1					
ANR	4566200	Argument	new_strdup ( attr )		4566162	0					
ANR	4566201	CallExpression	new_strdup ( attr )		4566162	0					
ANR	4566202	Callee	new_strdup		4566162	0					
ANR	4566203	Identifier	new_strdup		4566162	0					
ANR	4566204	ArgumentList	attr		4566162	1					
ANR	4566205	Argument	attr		4566162	0					
ANR	4566206	Identifier	attr		4566162	0					
ANR	4566207	ExpressionStatement	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )	88:1:2324:2382	4566162	10	True				
ANR	4566208	CallExpression	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )		4566162	0					
ANR	4566209	Callee	alternates . Append		4566162	0					
ANR	4566210	MemberAccess	alternates . Append		4566162	0					
ANR	4566211	Identifier	alternates		4566162	0					
ANR	4566212	Identifier	Append		4566162	1					
ANR	4566213	ArgumentList	collapse_escapes ( new_strdup ( alternate ) )		4566162	1					
ANR	4566214	Argument	collapse_escapes ( new_strdup ( alternate ) )		4566162	0					
ANR	4566215	CallExpression	collapse_escapes ( new_strdup ( alternate ) )		4566162	0					
ANR	4566216	Callee	collapse_escapes		4566162	0					
ANR	4566217	Identifier	collapse_escapes		4566162	0					
ANR	4566218	ArgumentList	new_strdup ( alternate )		4566162	1					
ANR	4566219	Argument	new_strdup ( alternate )		4566162	0					
ANR	4566220	CallExpression	new_strdup ( alternate )		4566162	0					
ANR	4566221	Callee	new_strdup		4566162	0					
ANR	4566222	Identifier	new_strdup		4566162	0					
ANR	4566223	ArgumentList	alternate		4566162	1					
ANR	4566224	Argument	alternate		4566162	0					
ANR	4566225	Identifier	alternate		4566162	0					
ANR	4566226	ReturnType	void		4566162	1					
ANR	4566227	Identifier	AttrListPrintMask :: registerFormat		4566162	2					
ANR	4566228	ParameterList	"FloatCustomFmt fmt , const char * attr , const char * alternate"		4566162	3					
ANR	4566229	Parameter	FloatCustomFmt fmt	78:16:2102:2119	4566162	0	True				
ANR	4566230	ParameterType	FloatCustomFmt		4566162	0					
ANR	4566231	Identifier	fmt		4566162	1					
ANR	4566232	Parameter	const char * attr	78:36:2122:2137	4566162	1	True				
ANR	4566233	ParameterType	const char *		4566162	0					
ANR	4566234	Identifier	attr		4566162	1					
ANR	4566235	Parameter	const char * alternate	78:54:2140:2160	4566162	2	True				
ANR	4566236	ParameterType	const char *		4566162	0					
ANR	4566237	Identifier	alternate		4566162	1					
ANR	4566238	CFGEntryNode	ENTRY		4566162		True				
ANR	4566239	CFGExitNode	EXIT		4566162		True				
ANR	4566240	Symbol	collapse_escapes		4566162						
ANR	4566241	Symbol	formats		4566162						
ANR	4566242	Symbol	alternate		4566162						
ANR	4566243	Symbol	fmt		4566162						
ANR	4566244	Symbol	alternates		4566162						
ANR	4566245	Symbol	newFmt -> ff		4566162						
ANR	4566246	Symbol	new_strdup		4566162						
ANR	4566247	Symbol	newFmt -> fmtKind		4566162						
ANR	4566248	Symbol	newFmt		4566162						
ANR	4566249	Symbol	* newFmt		4566162						
ANR	4566250	Symbol	FLT_CUSTOM_FMT		4566162						
ANR	4566251	Symbol	attributes		4566162						
ANR	4566252	Symbol	attr		4566162						
ANR	4566253	Function	AttrListPrintMask :: registerFormat	91:0:2387:2711							
ANR	4566254	FunctionDef	"AttrListPrintMask :: registerFormat (StringCustomFmt fmt , const char * attr , const char * alternate)"		4566253	0					
ANR	4566255	CompoundStatement		93:0:2490:2711	4566253	0					
ANR	4566256	Statement	Formatter	94:1:2493:2501	4566253	0	True				
ANR	4566257	Statement	*	94:11:2503:2503	4566253	1	True				
ANR	4566258	Statement	newFmt	94:12:2504:2509	4566253	2	True				
ANR	4566259	Statement	=	94:19:2511:2511	4566253	3	True				
ANR	4566260	Statement	new	94:21:2513:2515	4566253	4	True				
ANR	4566261	ExpressionStatement	Formatter	94:25:2517:2526	4566253	5	True				
ANR	4566262	Identifier	Formatter		4566253	0					
ANR	4566263	ExpressionStatement	newFmt -> fmtKind = STR_CUSTOM_FMT	96:1:2530:2562	4566253	6	True				
ANR	4566264	AssignmentExpression	newFmt -> fmtKind = STR_CUSTOM_FMT		4566253	0		=			
ANR	4566265	PtrMemberAccess	newFmt -> fmtKind		4566253	0					
ANR	4566266	Identifier	newFmt		4566253	0					
ANR	4566267	Identifier	fmtKind		4566253	1					
ANR	4566268	Identifier	STR_CUSTOM_FMT		4566253	1					
ANR	4566269	ExpressionStatement	newFmt -> sf = fmt	97:1:2565:2581	4566253	7	True				
ANR	4566270	AssignmentExpression	newFmt -> sf = fmt		4566253	0		=			
ANR	4566271	PtrMemberAccess	newFmt -> sf		4566253	0					
ANR	4566272	Identifier	newFmt		4566253	0					
ANR	4566273	Identifier	sf		4566253	1					
ANR	4566274	Identifier	fmt		4566253	1					
ANR	4566275	ExpressionStatement	formats . Append ( newFmt )	99:1:2585:2608	4566253	8	True				
ANR	4566276	CallExpression	formats . Append ( newFmt )		4566253	0					
ANR	4566277	Callee	formats . Append		4566253	0					
ANR	4566278	MemberAccess	formats . Append		4566253	0					
ANR	4566279	Identifier	formats		4566253	0					
ANR	4566280	Identifier	Append		4566253	1					
ANR	4566281	ArgumentList	newFmt		4566253	1					
ANR	4566282	Argument	newFmt		4566253	0					
ANR	4566283	Identifier	newFmt		4566253	0					
ANR	4566284	ExpressionStatement	attributes . Append ( new_strdup ( attr ) )	101:1:2612:2648	4566253	9	True				
ANR	4566285	CallExpression	attributes . Append ( new_strdup ( attr ) )		4566253	0					
ANR	4566286	Callee	attributes . Append		4566253	0					
ANR	4566287	MemberAccess	attributes . Append		4566253	0					
ANR	4566288	Identifier	attributes		4566253	0					
ANR	4566289	Identifier	Append		4566253	1					
ANR	4566290	ArgumentList	new_strdup ( attr )		4566253	1					
ANR	4566291	Argument	new_strdup ( attr )		4566253	0					
ANR	4566292	CallExpression	new_strdup ( attr )		4566253	0					
ANR	4566293	Callee	new_strdup		4566253	0					
ANR	4566294	Identifier	new_strdup		4566253	0					
ANR	4566295	ArgumentList	attr		4566253	1					
ANR	4566296	Argument	attr		4566253	0					
ANR	4566297	Identifier	attr		4566253	0					
ANR	4566298	ExpressionStatement	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )	102:1:2651:2709	4566253	10	True				
ANR	4566299	CallExpression	alternates . Append ( collapse_escapes ( new_strdup ( alternate ) ) )		4566253	0					
ANR	4566300	Callee	alternates . Append		4566253	0					
ANR	4566301	MemberAccess	alternates . Append		4566253	0					
ANR	4566302	Identifier	alternates		4566253	0					
ANR	4566303	Identifier	Append		4566253	1					
ANR	4566304	ArgumentList	collapse_escapes ( new_strdup ( alternate ) )		4566253	1					
ANR	4566305	Argument	collapse_escapes ( new_strdup ( alternate ) )		4566253	0					
ANR	4566306	CallExpression	collapse_escapes ( new_strdup ( alternate ) )		4566253	0					
ANR	4566307	Callee	collapse_escapes		4566253	0					
ANR	4566308	Identifier	collapse_escapes		4566253	0					
ANR	4566309	ArgumentList	new_strdup ( alternate )		4566253	1					
ANR	4566310	Argument	new_strdup ( alternate )		4566253	0					
ANR	4566311	CallExpression	new_strdup ( alternate )		4566253	0					
ANR	4566312	Callee	new_strdup		4566253	0					
ANR	4566313	Identifier	new_strdup		4566253	0					
ANR	4566314	ArgumentList	alternate		4566253	1					
ANR	4566315	Argument	alternate		4566253	0					
ANR	4566316	Identifier	alternate		4566253	0					
ANR	4566317	ReturnType	void		4566253	1					
ANR	4566318	Identifier	AttrListPrintMask :: registerFormat		4566253	2					
ANR	4566319	ParameterList	"StringCustomFmt fmt , const char * attr , const char * alternate"		4566253	3					
ANR	4566320	Parameter	StringCustomFmt fmt	92:16:2428:2446	4566253	0	True				
ANR	4566321	ParameterType	StringCustomFmt		4566253	0					
ANR	4566322	Identifier	fmt		4566253	1					
ANR	4566323	Parameter	const char * attr	92:37:2449:2464	4566253	1	True				
ANR	4566324	ParameterType	const char *		4566253	0					
ANR	4566325	Identifier	attr		4566253	1					
ANR	4566326	Parameter	const char * alternate	92:55:2467:2487	4566253	2	True				
ANR	4566327	ParameterType	const char *		4566253	0					
ANR	4566328	Identifier	alternate		4566253	1					
ANR	4566329	CFGEntryNode	ENTRY		4566253		True				
ANR	4566330	CFGExitNode	EXIT		4566253		True				
ANR	4566331	Symbol	newFmt -> sf		4566253						
ANR	4566332	Symbol	collapse_escapes		4566253						
ANR	4566333	Symbol	formats		4566253						
ANR	4566334	Symbol	alternate		4566253						
ANR	4566335	Symbol	fmt		4566253						
ANR	4566336	Symbol	alternates		4566253						
ANR	4566337	Symbol	STR_CUSTOM_FMT		4566253						
ANR	4566338	Symbol	new_strdup		4566253						
ANR	4566339	Symbol	newFmt -> fmtKind		4566253						
ANR	4566340	Symbol	newFmt		4566253						
ANR	4566341	Symbol	* newFmt		4566253						
ANR	4566342	Symbol	attributes		4566253						
ANR	4566343	Symbol	attr		4566253						
ANR	4566344	Function	AttrListPrintMask :: clearFormats	105:0:2714:2833							
ANR	4566345	FunctionDef	AttrListPrintMask :: clearFormats ()		4566344	0					
ANR	4566346	CompoundStatement		107:0:2759:2833	4566344	0					
ANR	4566347	ExpressionStatement	clearList ( formats )	108:1:2762:2781	4566344	0	True				
ANR	4566348	CallExpression	clearList ( formats )		4566344	0					
ANR	4566349	Callee	clearList		4566344	0					
ANR	4566350	Identifier	clearList		4566344	0					
ANR	4566351	ArgumentList	formats		4566344	1					
ANR	4566352	Argument	formats		4566344	0					
ANR	4566353	Identifier	formats		4566344	0					
ANR	4566354	ExpressionStatement	clearList ( attributes )	109:1:2784:2806	4566344	1	True				
ANR	4566355	CallExpression	clearList ( attributes )		4566344	0					
ANR	4566356	Callee	clearList		4566344	0					
ANR	4566357	Identifier	clearList		4566344	0					
ANR	4566358	ArgumentList	attributes		4566344	1					
ANR	4566359	Argument	attributes		4566344	0					
ANR	4566360	Identifier	attributes		4566344	0					
ANR	4566361	ExpressionStatement	clearList ( alternates )	110:1:2809:2831	4566344	2	True				
ANR	4566362	CallExpression	clearList ( alternates )		4566344	0					
ANR	4566363	Callee	clearList		4566344	0					
ANR	4566364	Identifier	clearList		4566344	0					
ANR	4566365	ArgumentList	alternates		4566344	1					
ANR	4566366	Argument	alternates		4566344	0					
ANR	4566367	Identifier	alternates		4566344	0					
ANR	4566368	ReturnType	void		4566344	1					
ANR	4566369	Identifier	AttrListPrintMask :: clearFormats		4566344	2					
ANR	4566370	ParameterList			4566344	3					
ANR	4566371	CFGEntryNode	ENTRY		4566344		True				
ANR	4566372	CFGExitNode	EXIT		4566344		True				
ANR	4566373	Symbol	formats		4566344						
ANR	4566374	Symbol	attributes		4566344						
ANR	4566375	Symbol	alternates		4566344						
ANR	4566376	Function	AttrListPrintMask :: display	114:0:2837:3052							
ANR	4566377	FunctionDef	"AttrListPrintMask :: display (FILE * file , AttrList * al , AttrList * target)"		4566376	0					
ANR	4566378	CompoundStatement		116:0:2926:3052	4566376	0					
ANR	4566379	IdentifierDeclStatement	"char * temp = display ( al , target ) ;"	117:1:2929:2962	4566376	0	True				
ANR	4566380	IdentifierDecl	"* temp = display ( al , target )"		4566376	0					
ANR	4566381	IdentifierDeclType	char *		4566376	0					
ANR	4566382	Identifier	temp		4566376	1					
ANR	4566383	AssignmentExpression	"* temp = display ( al , target )"		4566376	2		=			
ANR	4566384	Identifier	temp		4566376	0					
ANR	4566385	CallExpression	"display ( al , target )"		4566376	1					
ANR	4566386	Callee	display		4566376	0					
ANR	4566387	Identifier	display		4566376	0					
ANR	4566388	ArgumentList	al		4566376	1					
ANR	4566389	Argument	al		4566376	0					
ANR	4566390	Identifier	al		4566376	0					
ANR	4566391	Argument	target		4566376	1					
ANR	4566392	Identifier	target		4566376	0					
ANR	4566393	IfStatement	if ( temp != NULL )		4566376	1					
ANR	4566394	Condition	temp != NULL	119:5:2970:2981	4566376	0	True				
ANR	4566395	EqualityExpression	temp != NULL		4566376	0		!=			
ANR	4566396	Identifier	temp		4566376	0					
ANR	4566397	Identifier	NULL		4566376	1					
ANR	4566398	CompoundStatement		4:19:57:57	4566376	1					
ANR	4566399	ExpressionStatement	"fputs ( temp , file )"	120:2:2988:3005	4566376	0	True				
ANR	4566400	CallExpression	"fputs ( temp , file )"		4566376	0					
ANR	4566401	Callee	fputs		4566376	0					
ANR	4566402	Identifier	fputs		4566376	0					
ANR	4566403	ArgumentList	temp		4566376	1					
ANR	4566404	Argument	temp		4566376	0					
ANR	4566405	Identifier	temp		4566376	0					
ANR	4566406	Argument	file		4566376	1					
ANR	4566407	Identifier	file		4566376	0					
ANR	4566408	Statement	delete	121:2:3009:3014	4566376	1	True				
ANR	4566409	Statement	[	121:9:3016:3016	4566376	2	True				
ANR	4566410	Statement	]	121:10:3017:3017	4566376	3	True				
ANR	4566411	ExpressionStatement	temp	121:12:3019:3023	4566376	4	True				
ANR	4566412	Identifier	temp		4566376	0					
ANR	4566413	ReturnStatement	return 0 ;	122:2:3027:3035	4566376	5	True				
ANR	4566414	PrimaryExpression	0		4566376	0					
ANR	4566415	ReturnStatement	return 1 ;	124:1:3041:3049	4566376	2	True				
ANR	4566416	PrimaryExpression	1		4566376	0					
ANR	4566417	ReturnType	int		4566376	1					
ANR	4566418	Identifier	AttrListPrintMask :: display		4566376	2					
ANR	4566419	ParameterList	"FILE * file , AttrList * al , AttrList * target"		4566376	3					
ANR	4566420	Parameter	FILE * file	115:9:2870:2879	4566376	0	True				
ANR	4566421	ParameterType	FILE *		4566376	0					
ANR	4566422	Identifier	file		4566376	1					
ANR	4566423	Parameter	AttrList * al	115:21:2882:2893	4566376	1	True				
ANR	4566424	ParameterType	AttrList *		4566376	0					
ANR	4566425	Identifier	al		4566376	1					
ANR	4566426	Parameter	AttrList * target	115:35:2896:2911	4566376	2	True				
ANR	4566427	ParameterType	AttrList *		4566376	0					
ANR	4566428	Identifier	target		4566376	1					
ANR	4566429	CFGEntryNode	ENTRY		4566376		True				
ANR	4566430	CFGExitNode	EXIT		4566376		True				
ANR	4566431	Symbol	temp		4566376						
ANR	4566432	Symbol	file		4566376						
ANR	4566433	Symbol	NULL		4566376						
ANR	4566434	Symbol	display		4566376						
ANR	4566435	Symbol	al		4566376						
ANR	4566436	Symbol	target		4566376						
ANR	4566437	Function	AttrListPrintMask :: display	129:0:3118:8399							
ANR	4566438	FunctionDef	"AttrListPrintMask :: display (AttrList * al , AttrList * target)"		4566437	0					
ANR	4566439	CompoundStatement		131:0:3199:8399	4566437	0					
ANR	4566440	IdentifierDeclStatement	Formatter * fmt ;	132:1:3202:3216	4566437	0	True				
ANR	4566441	IdentifierDecl	* fmt		4566437	0					
ANR	4566442	IdentifierDeclType	Formatter *		4566437	0					
ANR	4566443	Identifier	fmt		4566437	1					
ANR	4566444	IdentifierDeclStatement	"char * attr , * alt ;"	133:1:3219:3236	4566437	1	True				
ANR	4566445	IdentifierDecl	* attr		4566437	0					
ANR	4566446	IdentifierDeclType	char *		4566437	0					
ANR	4566447	Identifier	attr		4566437	1					
ANR	4566448	IdentifierDecl	* alt		4566437	1					
ANR	4566449	IdentifierDeclType	char *		4566437	0					
ANR	4566450	Identifier	alt		4566437	1					
ANR	4566451	IdentifierDeclStatement	ExprTree * tree ;	134:1:3239:3253	4566437	2	True				
ANR	4566452	IdentifierDecl	* tree		4566437	0					
ANR	4566453	IdentifierDeclType	ExprTree *		4566437	0					
ANR	4566454	Identifier	tree		4566437	1					
ANR	4566455	IdentifierDeclStatement	EvalResult result ;	135:1:3256:3273	4566437	3	True				
ANR	4566456	IdentifierDecl	result		4566437	0					
ANR	4566457	IdentifierDeclType	EvalResult		4566437	0					
ANR	4566458	Identifier	result		4566437	1					
ANR	4566459	IdentifierDeclStatement	"MyString retval ( """" ) ;"	136:1:3276:3296	4566437	4	True				
ANR	4566460	IdentifierDecl	"retval ( """" )"		4566437	0					
ANR	4566461	IdentifierDeclType	MyString		4566437	0					
ANR	4566462	Identifier	retval		4566437	1					
ANR	4566463	PrimaryExpression	""""""		4566437	2					
ANR	4566464	IdentifierDeclStatement	int intValue ;	137:1:3299:3312	4566437	5	True				
ANR	4566465	IdentifierDecl	intValue		4566437	0					
ANR	4566466	IdentifierDeclType	int		4566437	0					
ANR	4566467	Identifier	intValue		4566437	1					
ANR	4566468	IdentifierDeclStatement	float floatValue ;	138:1:3315:3332	4566437	6	True				
ANR	4566469	IdentifierDecl	floatValue		4566437	0					
ANR	4566470	IdentifierDeclType	float		4566437	0					
ANR	4566471	Identifier	floatValue		4566437	1					
ANR	4566472	IdentifierDeclStatement	MyString stringValue ;	139:1:3335:3355	4566437	7	True				
ANR	4566473	IdentifierDecl	stringValue		4566437	0					
ANR	4566474	IdentifierDeclType	MyString		4566437	0					
ANR	4566475	Identifier	stringValue		4566437	1					
ANR	4566476	IdentifierDeclStatement	const char * bool_str = NULL ;	140:1:3358:3385	4566437	8	True				
ANR	4566477	IdentifierDecl	* bool_str = NULL		4566437	0					
ANR	4566478	IdentifierDeclType	const char *		4566437	0					
ANR	4566479	Identifier	bool_str		4566437	1					
ANR	4566480	AssignmentExpression	* bool_str = NULL		4566437	2		=			
ANR	4566481	Identifier	NULL		4566437	0					
ANR	4566482	Identifier	NULL		4566437	1					
ANR	4566483	IdentifierDeclStatement	char * value_from_classad = NULL ;	141:1:3388:3419	4566437	9	True				
ANR	4566484	IdentifierDecl	* value_from_classad = NULL		4566437	0					
ANR	4566485	IdentifierDeclType	char *		4566437	0					
ANR	4566486	Identifier	value_from_classad		4566437	1					
ANR	4566487	AssignmentExpression	* value_from_classad = NULL		4566437	2		=			
ANR	4566488	Identifier	NULL		4566437	0					
ANR	4566489	Identifier	NULL		4566437	1					
ANR	4566490	IdentifierDeclStatement	struct printf_fmt_info fmt_info ;	143:1:3423:3454	4566437	10	True				
ANR	4566491	IdentifierDecl	fmt_info		4566437	0					
ANR	4566492	IdentifierDeclType	struct printf_fmt_info		4566437	0					
ANR	4566493	Identifier	fmt_info		4566437	1					
ANR	4566494	IdentifierDeclStatement	printf_fmt_t fmt_type ;	144:1:3457:3478	4566437	11	True				
ANR	4566495	IdentifierDecl	fmt_type		4566437	0					
ANR	4566496	IdentifierDeclType	printf_fmt_t		4566437	0					
ANR	4566497	Identifier	fmt_type		4566437	1					
ANR	4566498	IdentifierDeclStatement	const char * tmp_fmt = NULL ;	145:1:3481:3507	4566437	12	True				
ANR	4566499	IdentifierDecl	* tmp_fmt = NULL		4566437	0					
ANR	4566500	IdentifierDeclType	const char *		4566437	0					
ANR	4566501	Identifier	tmp_fmt		4566437	1					
ANR	4566502	AssignmentExpression	* tmp_fmt = NULL		4566437	2		=			
ANR	4566503	Identifier	NULL		4566437	0					
ANR	4566504	Identifier	NULL		4566437	1					
ANR	4566505	ExpressionStatement	formats . Rewind ( )	147:1:3511:3527	4566437	13	True				
ANR	4566506	CallExpression	formats . Rewind ( )		4566437	0					
ANR	4566507	Callee	formats . Rewind		4566437	0					
ANR	4566508	MemberAccess	formats . Rewind		4566437	0					
ANR	4566509	Identifier	formats		4566437	0					
ANR	4566510	Identifier	Rewind		4566437	1					
ANR	4566511	ArgumentList			4566437	1					
ANR	4566512	ExpressionStatement	attributes . Rewind ( )	148:1:3530:3549	4566437	14	True				
ANR	4566513	CallExpression	attributes . Rewind ( )		4566437	0					
ANR	4566514	Callee	attributes . Rewind		4566437	0					
ANR	4566515	MemberAccess	attributes . Rewind		4566437	0					
ANR	4566516	Identifier	attributes		4566437	0					
ANR	4566517	Identifier	Rewind		4566437	1					
ANR	4566518	ArgumentList			4566437	1					
ANR	4566519	ExpressionStatement	alternates . Rewind ( )	149:1:3552:3571	4566437	15	True				
ANR	4566520	CallExpression	alternates . Rewind ( )		4566437	0					
ANR	4566521	Callee	alternates . Rewind		4566437	0					
ANR	4566522	MemberAccess	alternates . Rewind		4566437	0					
ANR	4566523	Identifier	alternates		4566437	0					
ANR	4566524	Identifier	Rewind		4566437	1					
ANR	4566525	ArgumentList			4566437	1					
ANR	4566526	WhileStatement	while ( ( fmt = formats . Next ( ) ) && ( attr = attributes . Next ( ) ) && ( alt = alternates . Next ( ) ) )		4566437	16					
ANR	4566527	Condition	( fmt = formats . Next ( ) ) && ( attr = attributes . Next ( ) ) && ( alt = alternates . Next ( ) )	152:8:3629:3707	4566437	0	True				
ANR	4566528	AndExpression	( fmt = formats . Next ( ) ) && ( attr = attributes . Next ( ) ) && ( alt = alternates . Next ( ) )		4566437	0		&&			
ANR	4566529	AssignmentExpression	fmt = formats . Next ( )		4566437	0		=			
ANR	4566530	Identifier	fmt		4566437	0					
ANR	4566531	CallExpression	formats . Next ( )		4566437	1					
ANR	4566532	Callee	formats . Next		4566437	0					
ANR	4566533	MemberAccess	formats . Next		4566437	0					
ANR	4566534	Identifier	formats		4566437	0					
ANR	4566535	Identifier	Next		4566437	1					
ANR	4566536	ArgumentList			4566437	1					
ANR	4566537	AndExpression	( attr = attributes . Next ( ) ) && ( alt = alternates . Next ( ) )		4566437	1		&&			
ANR	4566538	AssignmentExpression	attr = attributes . Next ( )		4566437	0		=			
ANR	4566539	Identifier	attr		4566437	0					
ANR	4566540	CallExpression	attributes . Next ( )		4566437	1					
ANR	4566541	Callee	attributes . Next		4566437	0					
ANR	4566542	MemberAccess	attributes . Next		4566437	0					
ANR	4566543	Identifier	attributes		4566437	0					
ANR	4566544	Identifier	Next		4566437	1					
ANR	4566545	ArgumentList			4566437	1					
ANR	4566546	AssignmentExpression	alt = alternates . Next ( )		4566437	1		=			
ANR	4566547	Identifier	alt		4566437	0					
ANR	4566548	CallExpression	alternates . Next ( )		4566437	1					
ANR	4566549	Callee	alternates . Next		4566437	0					
ANR	4566550	MemberAccess	alternates . Next		4566437	0					
ANR	4566551	Identifier	alternates		4566437	0					
ANR	4566552	Identifier	Next		4566437	1					
ANR	4566553	ArgumentList			4566437	1					
ANR	4566554	CompoundStatement		29:2:720:745	4566437	1					
ANR	4566555	IdentifierDeclStatement	bool attr_is_expr = false ;	159:2:3920:3945	4566437	0	True				
ANR	4566556	IdentifierDecl	attr_is_expr = false		4566437	0					
ANR	4566557	IdentifierDeclType	bool		4566437	0					
ANR	4566558	Identifier	attr_is_expr		4566437	1					
ANR	4566559	AssignmentExpression	attr_is_expr = false		4566437	2		=			
ANR	4566560	Identifier	false		4566437	0					
ANR	4566561	Identifier	false		4566437	1					
ANR	4566562	SwitchStatement	switch ( fmt -> fmtKind )		4566437	1					
ANR	4566563	Condition	fmt -> fmtKind	160:10:3957:3968	4566437	0	True				
ANR	4566564	PtrMemberAccess	fmt -> fmtKind		4566437	0					
ANR	4566565	Identifier	fmt		4566437	0					
ANR	4566566	Identifier	fmtKind		4566437	1					
ANR	4566567	CompoundStatement		31:2:774:774	4566437	1					
ANR	4566568	Label	case PRINTF_FMT :	162:5:3981:3996	4566437	0	True				
ANR	4566569	Identifier	PRINTF_FMT		4566437	0					
ANR	4566570	ExpressionStatement	tmp_fmt = fmt -> printfFmt	166:4:4150:4174	4566437	1	True				
ANR	4566571	AssignmentExpression	tmp_fmt = fmt -> printfFmt		4566437	0		=			
ANR	4566572	Identifier	tmp_fmt		4566437	0					
ANR	4566573	PtrMemberAccess	fmt -> printfFmt		4566437	1					
ANR	4566574	Identifier	fmt		4566437	0					
ANR	4566575	Identifier	printfFmt		4566437	1					
ANR	4566576	IfStatement	"if ( ! parsePrintfFormat ( & tmp_fmt , & fmt_info ) )"		4566437	2					
ANR	4566577	Condition	"! parsePrintfFormat ( & tmp_fmt , & fmt_info )"	167:8:4184:4223	4566437	0	True				
ANR	4566578	UnaryOperationExpression	"! parsePrintfFormat ( & tmp_fmt , & fmt_info )"		4566437	0					
ANR	4566579	UnaryOperator	!		4566437	0					
ANR	4566580	CallExpression	"parsePrintfFormat ( & tmp_fmt , & fmt_info )"		4566437	1					
ANR	4566581	Callee	parsePrintfFormat		4566437	0					
ANR	4566582	Identifier	parsePrintfFormat		4566437	0					
ANR	4566583	ArgumentList	& tmp_fmt		4566437	1					
ANR	4566584	Argument	& tmp_fmt		4566437	0					
ANR	4566585	UnaryOperationExpression	& tmp_fmt		4566437	0					
ANR	4566586	UnaryOperator	&		4566437	0					
ANR	4566587	Identifier	tmp_fmt		4566437	1					
ANR	4566588	Argument	& fmt_info		4566437	1					
ANR	4566589	UnaryOperationExpression	& fmt_info		4566437	0					
ANR	4566590	UnaryOperator	&		4566437	0					
ANR	4566591	Identifier	fmt_info		4566437	1					
ANR	4566592	CompoundStatement		37:51:1027:1027	4566437	1					
ANR	4566593	IfStatement	if ( alt && alt [ 0 ] )		4566437	0					
ANR	4566594	Condition	alt && alt [ 0 ]	182:9:4859:4871	4566437	0	True				
ANR	4566595	AndExpression	alt && alt [ 0 ]		4566437	0		&&			
ANR	4566596	Identifier	alt		4566437	0					
ANR	4566597	ArrayIndexing	alt [ 0 ]		4566437	1					
ANR	4566598	Identifier	alt		4566437	0					
ANR	4566599	PrimaryExpression	0		4566437	1					
ANR	4566600	CompoundStatement		52:25:1675:1675	4566437	1					
ANR	4566601	ExpressionStatement	retval += alt	183:6:4883:4896	4566437	0	True				
ANR	4566602	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4566603	Identifier	retval		4566437	0					
ANR	4566604	Identifier	alt		4566437	1					
ANR	4566605	ElseStatement	else		4566437	0					
ANR	4566606	CompoundStatement		54:12:1710:1710	4566437	0					
ANR	4566607	ExpressionStatement	retval += fmt -> printfFmt	185:6:4919:4943	4566437	0	True				
ANR	4566608	AssignmentExpression	retval += fmt -> printfFmt		4566437	0		+=			
ANR	4566609	Identifier	retval		4566437	0					
ANR	4566610	PtrMemberAccess	fmt -> printfFmt		4566437	1					
ANR	4566611	Identifier	fmt		4566437	0					
ANR	4566612	Identifier	printfFmt		4566437	1					
ANR	4566613	ContinueStatement	continue ;	187:5:4957:4965	4566437	1	True				
ANR	4566614	IfStatement	if ( ! ( tree = al -> LookupExpr ( attr ) ) )		4566437	3					
ANR	4566615	Condition	! ( tree = al -> LookupExpr ( attr ) )	193:8:5132:5162	4566437	0	True				
ANR	4566616	UnaryOperationExpression	! ( tree = al -> LookupExpr ( attr ) )		4566437	0					
ANR	4566617	UnaryOperator	!		4566437	0					
ANR	4566618	AssignmentExpression	tree = al -> LookupExpr ( attr )		4566437	1		=			
ANR	4566619	Identifier	tree		4566437	0					
ANR	4566620	CallExpression	al -> LookupExpr ( attr )		4566437	1					
ANR	4566621	Callee	al -> LookupExpr		4566437	0					
ANR	4566622	PtrMemberAccess	al -> LookupExpr		4566437	0					
ANR	4566623	Identifier	al		4566437	0					
ANR	4566624	Identifier	LookupExpr		4566437	1					
ANR	4566625	ArgumentList	attr		4566437	1					
ANR	4566626	Argument	attr		4566437	0					
ANR	4566627	Identifier	attr		4566437	0					
ANR	4566628	CompoundStatement		63:42:1966:1966	4566437	1					
ANR	4566629	ExpressionStatement	tree = NULL	196:5:5244:5255	4566437	0	True				
ANR	4566630	AssignmentExpression	tree = NULL		4566437	0		=			
ANR	4566631	Identifier	tree		4566437	0					
ANR	4566632	Identifier	NULL		4566437	1					
ANR	4566633	IfStatement	"if ( ParseClassAdRvalExpr ( attr , tree ) != 0 )"		4566437	1					
ANR	4566634	Condition	"ParseClassAdRvalExpr ( attr , tree ) != 0"	197:9:5266:5302	4566437	0	True				
ANR	4566635	EqualityExpression	"ParseClassAdRvalExpr ( attr , tree ) != 0"		4566437	0		!=			
ANR	4566636	CallExpression	"ParseClassAdRvalExpr ( attr , tree )"		4566437	0					
ANR	4566637	Callee	ParseClassAdRvalExpr		4566437	0					
ANR	4566638	Identifier	ParseClassAdRvalExpr		4566437	0					
ANR	4566639	ArgumentList	attr		4566437	1					
ANR	4566640	Argument	attr		4566437	0					
ANR	4566641	Identifier	attr		4566437	0					
ANR	4566642	Argument	tree		4566437	1					
ANR	4566643	Identifier	tree		4566437	0					
ANR	4566644	PrimaryExpression	0		4566437	1					
ANR	4566645	CompoundStatement		67:49:2106:2106	4566437	1					
ANR	4566646	Statement	delete	198:6:5314:5319	4566437	0	True				
ANR	4566647	ExpressionStatement	tree	198:13:5321:5325	4566437	1	True				
ANR	4566648	Identifier	tree		4566437	0					
ANR	4566649	IfStatement	if ( alt )		4566437	2					
ANR	4566650	Condition	alt	202:11:5433:5435	4566437	0	True				
ANR	4566651	Identifier	alt		4566437	0					
ANR	4566652	CompoundStatement		72:17:2239:2239	4566437	1					
ANR	4566653	ExpressionStatement	retval += alt	203:7:5448:5461	4566437	0	True				
ANR	4566654	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4566655	Identifier	retval		4566437	0					
ANR	4566656	Identifier	alt		4566437	1					
ANR	4566657	ContinueStatement	continue ;	205:6:5477:5485	4566437	3	True				
ANR	4566658	ExpressionStatement	ASSERT ( tree )	207:5:5499:5511	4566437	2	True				
ANR	4566659	CallExpression	ASSERT ( tree )		4566437	0					
ANR	4566660	Callee	ASSERT		4566437	0					
ANR	4566661	Identifier	ASSERT		4566437	0					
ANR	4566662	ArgumentList	tree		4566437	1					
ANR	4566663	Argument	tree		4566437	0					
ANR	4566664	Identifier	tree		4566437	0					
ANR	4566665	ExpressionStatement	attr_is_expr = true	208:5:5518:5537	4566437	3	True				
ANR	4566666	AssignmentExpression	attr_is_expr = true		4566437	0		=			
ANR	4566667	Identifier	attr_is_expr		4566437	0					
ANR	4566668	Identifier	true		4566437	1					
ANR	4566669	ExpressionStatement	fmt_type = fmt_info . type	214:4:5678:5702	4566437	4	True				
ANR	4566670	AssignmentExpression	fmt_type = fmt_info . type		4566437	0		=			
ANR	4566671	Identifier	fmt_type		4566437	0					
ANR	4566672	MemberAccess	fmt_info . type		4566437	1					
ANR	4566673	Identifier	fmt_info		4566437	0					
ANR	4566674	Identifier	type		4566437	1					
ANR	4566675	SwitchStatement	switch ( fmt_type )		4566437	5					
ANR	4566676	Condition	fmt_type	215:12:5716:5723	4566437	0	True				
ANR	4566677	Identifier	fmt_type		4566437	0					
ANR	4566678	CompoundStatement		85:23:2527:2527	4566437	1					
ANR	4566679	Label	case PFT_STRING :	216:4:5733:5748	4566437	0	True				
ANR	4566680	Identifier	PFT_STRING		4566437	0					
ANR	4566681	IfStatement	if ( attr_is_expr )		4566437	1					
ANR	4566682	Condition	attr_is_expr	217:9:5759:5770	4566437	0	True				
ANR	4566683	Identifier	attr_is_expr		4566437	0					
ANR	4566684	CompoundStatement		87:24:2574:2574	4566437	1					
ANR	4566685	IfStatement	"if ( EvalExprTree ( tree , al , target , & result ) && result . type == LX_STRING && result . s )"		4566437	0					
ANR	4566686	Condition	"EvalExprTree ( tree , al , target , & result ) && result . type == LX_STRING && result . s"	218:10:5786:5871	4566437	0	True				
ANR	4566687	AndExpression	"EvalExprTree ( tree , al , target , & result ) && result . type == LX_STRING && result . s"		4566437	0		&&			
ANR	4566688	CallExpression	"EvalExprTree ( tree , al , target , & result )"		4566437	0					
ANR	4566689	Callee	EvalExprTree		4566437	0					
ANR	4566690	Identifier	EvalExprTree		4566437	0					
ANR	4566691	ArgumentList	tree		4566437	1					
ANR	4566692	Argument	tree		4566437	0					
ANR	4566693	Identifier	tree		4566437	0					
ANR	4566694	Argument	al		4566437	1					
ANR	4566695	Identifier	al		4566437	0					
ANR	4566696	Argument	target		4566437	2					
ANR	4566697	Identifier	target		4566437	0					
ANR	4566698	Argument	& result		4566437	3					
ANR	4566699	UnaryOperationExpression	& result		4566437	0					
ANR	4566700	UnaryOperator	&		4566437	0					
ANR	4566701	Identifier	result		4566437	1					
ANR	4566702	AndExpression	result . type == LX_STRING && result . s		4566437	1		&&			
ANR	4566703	EqualityExpression	result . type == LX_STRING		4566437	0		==			
ANR	4566704	MemberAccess	result . type		4566437	0					
ANR	4566705	Identifier	result		4566437	0					
ANR	4566706	Identifier	type		4566437	1					
ANR	4566707	Identifier	LX_STRING		4566437	1					
ANR	4566708	MemberAccess	result . s		4566437	1					
ANR	4566709	Identifier	result		4566437	0					
ANR	4566710	Identifier	s		4566437	1					
ANR	4566711	CompoundStatement		89:46:2675:2675	4566437	1					
ANR	4566712	ExpressionStatement	"retval . sprintf_cat ( fmt -> printfFmt , result . s )"	220:7:5884:5928	4566437	0	True				
ANR	4566713	CallExpression	"retval . sprintf_cat ( fmt -> printfFmt , result . s )"		4566437	0					
ANR	4566714	Callee	retval . sprintf_cat		4566437	0					
ANR	4566715	MemberAccess	retval . sprintf_cat		4566437	0					
ANR	4566716	Identifier	retval		4566437	0					
ANR	4566717	Identifier	sprintf_cat		4566437	1					
ANR	4566718	ArgumentList	fmt -> printfFmt		4566437	1					
ANR	4566719	Argument	fmt -> printfFmt		4566437	0					
ANR	4566720	PtrMemberAccess	fmt -> printfFmt		4566437	0					
ANR	4566721	Identifier	fmt		4566437	0					
ANR	4566722	Identifier	printfFmt		4566437	1					
ANR	4566723	Argument	result . s		4566437	1					
ANR	4566724	MemberAccess	result . s		4566437	0					
ANR	4566725	Identifier	result		4566437	0					
ANR	4566726	Identifier	s		4566437	1					
ANR	4566727	ElseStatement	else		4566437	0					
ANR	4566728	CompoundStatement		91:13:2743:2743	4566437	0					
ANR	4566729	IfStatement	if ( alt )		4566437	0					
ANR	4566730	Condition	alt	223:11:5980:5982	4566437	0	True				
ANR	4566731	Identifier	alt		4566437	0					
ANR	4566732	CompoundStatement		93:17:2786:2786	4566437	1					
ANR	4566733	ExpressionStatement	retval += alt	224:8:5996:6009	4566437	0	True				
ANR	4566734	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4566735	Identifier	retval		4566437	0					
ANR	4566736	Identifier	alt		4566437	1					
ANR	4566737	ElseStatement	else		4566437	0					
ANR	4566738	IfStatement	"if ( al -> EvalString ( attr , target , & value_from_classad ) )"		4566437	0					
ANR	4566739	Condition	"al -> EvalString ( attr , target , & value_from_classad )"	227:16:6044:6094	4566437	0	True				
ANR	4566740	CallExpression	"al -> EvalString ( attr , target , & value_from_classad )"		4566437	0					
ANR	4566741	Callee	al -> EvalString		4566437	0					
ANR	4566742	PtrMemberAccess	al -> EvalString		4566437	0					
ANR	4566743	Identifier	al		4566437	0					
ANR	4566744	Identifier	EvalString		4566437	1					
ANR	4566745	ArgumentList	attr		4566437	1					
ANR	4566746	Argument	attr		4566437	0					
ANR	4566747	Identifier	attr		4566437	0					
ANR	4566748	Argument	target		4566437	1					
ANR	4566749	Identifier	target		4566437	0					
ANR	4566750	Argument	& value_from_classad		4566437	2					
ANR	4566751	UnaryOperationExpression	& value_from_classad		4566437	0					
ANR	4566752	UnaryOperator	&		4566437	0					
ANR	4566753	Identifier	value_from_classad		4566437	1					
ANR	4566754	CompoundStatement		97:70:2898:2898	4566437	1					
ANR	4566755	ExpressionStatement	"stringValue . sprintf ( fmt -> printfFmt , value_from_classad )"	228:6:6106:6175	4566437	0	True				
ANR	4566756	CallExpression	"stringValue . sprintf ( fmt -> printfFmt , value_from_classad )"		4566437	0					
ANR	4566757	Callee	stringValue . sprintf		4566437	0					
ANR	4566758	MemberAccess	stringValue . sprintf		4566437	0					
ANR	4566759	Identifier	stringValue		4566437	0					
ANR	4566760	Identifier	sprintf		4566437	1					
ANR	4566761	ArgumentList	fmt -> printfFmt		4566437	1					
ANR	4566762	Argument	fmt -> printfFmt		4566437	0					
ANR	4566763	PtrMemberAccess	fmt -> printfFmt		4566437	0					
ANR	4566764	Identifier	fmt		4566437	0					
ANR	4566765	Identifier	printfFmt		4566437	1					
ANR	4566766	Argument	value_from_classad		4566437	1					
ANR	4566767	Identifier	value_from_classad		4566437	0					
ANR	4566768	ExpressionStatement	retval += stringValue	230:6:6183:6204	4566437	1	True				
ANR	4566769	AssignmentExpression	retval += stringValue		4566437	0		+=			
ANR	4566770	Identifier	retval		4566437	0					
ANR	4566771	Identifier	stringValue		4566437	1					
ANR	4566772	ExpressionStatement	free ( value_from_classad )	231:6:6212:6238	4566437	2	True				
ANR	4566773	CallExpression	free ( value_from_classad )		4566437	0					
ANR	4566774	Callee	free		4566437	0					
ANR	4566775	Identifier	free		4566437	0					
ANR	4566776	ArgumentList	value_from_classad		4566437	1					
ANR	4566777	Argument	value_from_classad		4566437	0					
ANR	4566778	Identifier	value_from_classad		4566437	0					
ANR	4566779	ExpressionStatement	value_from_classad = NULL	232:6:6246:6271	4566437	3	True				
ANR	4566780	AssignmentExpression	value_from_classad = NULL		4566437	0		=			
ANR	4566781	Identifier	value_from_classad		4566437	0					
ANR	4566782	Identifier	NULL		4566437	1					
ANR	4566783	ElseStatement	else		4566437	0					
ANR	4566784	CompoundStatement		103:12:3085:3085	4566437	0					
ANR	4566785	ExpressionStatement	bool_str = ExprTreeToString ( tree )	234:6:6293:6328	4566437	0	True				
ANR	4566786	AssignmentExpression	bool_str = ExprTreeToString ( tree )		4566437	0		=			
ANR	4566787	Identifier	bool_str		4566437	0					
ANR	4566788	CallExpression	ExprTreeToString ( tree )		4566437	1					
ANR	4566789	Callee	ExprTreeToString		4566437	0					
ANR	4566790	Identifier	ExprTreeToString		4566437	0					
ANR	4566791	ArgumentList	tree		4566437	1					
ANR	4566792	Argument	tree		4566437	0					
ANR	4566793	Identifier	tree		4566437	0					
ANR	4566794	IfStatement	if ( bool_str )		4566437	1					
ANR	4566795	Condition	bool_str	235:10:6340:6347	4566437	0	True				
ANR	4566796	Identifier	bool_str		4566437	0					
ANR	4566797	CompoundStatement		105:21:3151:3151	4566437	1					
ANR	4566798	ExpressionStatement	"stringValue . sprintf ( fmt -> printfFmt , bool_str )"	236:7:6360:6405	4566437	0	True				
ANR	4566799	CallExpression	"stringValue . sprintf ( fmt -> printfFmt , bool_str )"		4566437	0					
ANR	4566800	Callee	stringValue . sprintf		4566437	0					
ANR	4566801	MemberAccess	stringValue . sprintf		4566437	0					
ANR	4566802	Identifier	stringValue		4566437	0					
ANR	4566803	Identifier	sprintf		4566437	1					
ANR	4566804	ArgumentList	fmt -> printfFmt		4566437	1					
ANR	4566805	Argument	fmt -> printfFmt		4566437	0					
ANR	4566806	PtrMemberAccess	fmt -> printfFmt		4566437	0					
ANR	4566807	Identifier	fmt		4566437	0					
ANR	4566808	Identifier	printfFmt		4566437	1					
ANR	4566809	Argument	bool_str		4566437	1					
ANR	4566810	Identifier	bool_str		4566437	0					
ANR	4566811	ExpressionStatement	retval += stringValue	237:7:6414:6435	4566437	1	True				
ANR	4566812	AssignmentExpression	retval += stringValue		4566437	0		+=			
ANR	4566813	Identifier	retval		4566437	0					
ANR	4566814	Identifier	stringValue		4566437	1					
ANR	4566815	ElseStatement	else		4566437	0					
ANR	4566816	CompoundStatement		108:13:3250:3250	4566437	0					
ANR	4566817	IfStatement	if ( alt )		4566437	0					
ANR	4566818	Condition	alt	239:12:6464:6466	4566437	0	True				
ANR	4566819	Identifier	alt		4566437	0					
ANR	4566820	CompoundStatement		109:18:3270:3270	4566437	1					
ANR	4566821	ExpressionStatement	retval += alt	240:8:6480:6493	4566437	0	True				
ANR	4566822	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4566823	Identifier	retval		4566437	0					
ANR	4566824	Identifier	alt		4566437	1					
ANR	4566825	BreakStatement	break ;	244:5:6524:6529	4566437	2	True				
ANR	4566826	Label	case PFT_INT :	246:4:6536:6548	4566437	3	True				
ANR	4566827	Identifier	PFT_INT		4566437	0					
ANR	4566828	Label	case PFT_FLOAT :	247:4:6554:6568	4566437	4	True				
ANR	4566829	Identifier	PFT_FLOAT		4566437	0					
ANR	4566830	IfStatement	"if ( EvalExprTree ( tree , al , target , & result ) )"		4566437	5					
ANR	4566831	Condition	"EvalExprTree ( tree , al , target , & result )"	248:9:6579:6617	4566437	0	True				
ANR	4566832	CallExpression	"EvalExprTree ( tree , al , target , & result )"		4566437	0					
ANR	4566833	Callee	EvalExprTree		4566437	0					
ANR	4566834	Identifier	EvalExprTree		4566437	0					
ANR	4566835	ArgumentList	tree		4566437	1					
ANR	4566836	Argument	tree		4566437	0					
ANR	4566837	Identifier	tree		4566437	0					
ANR	4566838	Argument	al		4566437	1					
ANR	4566839	Identifier	al		4566437	0					
ANR	4566840	Argument	target		4566437	2					
ANR	4566841	Identifier	target		4566437	0					
ANR	4566842	Argument	& result		4566437	3					
ANR	4566843	UnaryOperationExpression	& result		4566437	0					
ANR	4566844	UnaryOperator	&		4566437	0					
ANR	4566845	Identifier	result		4566437	1					
ANR	4566846	CompoundStatement		118:51:3421:3421	4566437	1					
ANR	4566847	SwitchStatement	switch ( result . type )		4566437	0					
ANR	4566848	Condition	result . type	249:14:6637:6647	4566437	0	True				
ANR	4566849	MemberAccess	result . type		4566437	0					
ANR	4566850	Identifier	result		4566437	0					
ANR	4566851	Identifier	type		4566437	1					
ANR	4566852	CompoundStatement		119:28:3451:3451	4566437	1					
ANR	4566853	Label	case LX_FLOAT :	250:6:6659:6672	4566437	0	True				
ANR	4566854	Identifier	LX_FLOAT		4566437	0					
ANR	4566855	IfStatement	if ( fmt_type == PFT_INT )		4566437	1					
ANR	4566856	Condition	fmt_type == PFT_INT	251:11:6685:6703	4566437	0	True				
ANR	4566857	EqualityExpression	fmt_type == PFT_INT		4566437	0		==			
ANR	4566858	Identifier	fmt_type		4566437	0					
ANR	4566859	Identifier	PFT_INT		4566437	1					
ANR	4566860	CompoundStatement		121:33:3507:3507	4566437	1					
ANR	4566861	ExpressionStatement	"stringValue . sprintf ( fmt -> printfFmt , ( int ) result . f )"	252:8:6717:6784	4566437	0	True				
ANR	4566862	CallExpression	"stringValue . sprintf ( fmt -> printfFmt , ( int ) result . f )"		4566437	0					
ANR	4566863	Callee	stringValue . sprintf		4566437	0					
ANR	4566864	MemberAccess	stringValue . sprintf		4566437	0					
ANR	4566865	Identifier	stringValue		4566437	0					
ANR	4566866	Identifier	sprintf		4566437	1					
ANR	4566867	ArgumentList	fmt -> printfFmt		4566437	1					
ANR	4566868	Argument	fmt -> printfFmt		4566437	0					
ANR	4566869	PtrMemberAccess	fmt -> printfFmt		4566437	0					
ANR	4566870	Identifier	fmt		4566437	0					
ANR	4566871	Identifier	printfFmt		4566437	1					
ANR	4566872	Argument	( int ) result . f		4566437	1					
ANR	4566873	CastExpression	( int ) result . f		4566437	0					
ANR	4566874	CastTarget	int		4566437	0					
ANR	4566875	MemberAccess	result . f		4566437	1					
ANR	4566876	Identifier	result		4566437	0					
ANR	4566877	Identifier	f		4566437	1					
ANR	4566878	ElseStatement	else		4566437	0					
ANR	4566879	CompoundStatement		124:14:3600:3600	4566437	0					
ANR	4566880	ExpressionStatement	"stringValue . sprintf ( fmt -> printfFmt , result . f )"	255:8:6810:6872	4566437	0	True				
ANR	4566881	CallExpression	"stringValue . sprintf ( fmt -> printfFmt , result . f )"		4566437	0					
ANR	4566882	Callee	stringValue . sprintf		4566437	0					
ANR	4566883	MemberAccess	stringValue . sprintf		4566437	0					
ANR	4566884	Identifier	stringValue		4566437	0					
ANR	4566885	Identifier	sprintf		4566437	1					
ANR	4566886	ArgumentList	fmt -> printfFmt		4566437	1					
ANR	4566887	Argument	fmt -> printfFmt		4566437	0					
ANR	4566888	PtrMemberAccess	fmt -> printfFmt		4566437	0					
ANR	4566889	Identifier	fmt		4566437	0					
ANR	4566890	Identifier	printfFmt		4566437	1					
ANR	4566891	Argument	result . f		4566437	1					
ANR	4566892	MemberAccess	result . f		4566437	0					
ANR	4566893	Identifier	result		4566437	0					
ANR	4566894	Identifier	f		4566437	1					
ANR	4566895	ExpressionStatement	retval += stringValue	258:7:6890:6911	4566437	2	True				
ANR	4566896	AssignmentExpression	retval += stringValue		4566437	0		+=			
ANR	4566897	Identifier	retval		4566437	0					
ANR	4566898	Identifier	stringValue		4566437	1					
ANR	4566899	BreakStatement	break ;	259:7:6920:6925	4566437	3	True				
ANR	4566900	Label	case LX_INTEGER :	261:6:6934:6949	4566437	4	True				
ANR	4566901	Identifier	LX_INTEGER		4566437	0					
ANR	4566902	IfStatement	if ( fmt_type == PFT_INT )		4566437	5					
ANR	4566903	Condition	fmt_type == PFT_INT	262:11:6962:6980	4566437	0	True				
ANR	4566904	EqualityExpression	fmt_type == PFT_INT		4566437	0		==			
ANR	4566905	Identifier	fmt_type		4566437	0					
ANR	4566906	Identifier	PFT_INT		4566437	1					
ANR	4566907	CompoundStatement		132:33:3784:3784	4566437	1					
ANR	4566908	ExpressionStatement	"stringValue . sprintf ( fmt -> printfFmt , result . i )"	263:8:6994:7056	4566437	0	True				
ANR	4566909	CallExpression	"stringValue . sprintf ( fmt -> printfFmt , result . i )"		4566437	0					
ANR	4566910	Callee	stringValue . sprintf		4566437	0					
ANR	4566911	MemberAccess	stringValue . sprintf		4566437	0					
ANR	4566912	Identifier	stringValue		4566437	0					
ANR	4566913	Identifier	sprintf		4566437	1					
ANR	4566914	ArgumentList	fmt -> printfFmt		4566437	1					
ANR	4566915	Argument	fmt -> printfFmt		4566437	0					
ANR	4566916	PtrMemberAccess	fmt -> printfFmt		4566437	0					
ANR	4566917	Identifier	fmt		4566437	0					
ANR	4566918	Identifier	printfFmt		4566437	1					
ANR	4566919	Argument	result . i		4566437	1					
ANR	4566920	MemberAccess	result . i		4566437	0					
ANR	4566921	Identifier	result		4566437	0					
ANR	4566922	Identifier	i		4566437	1					
ANR	4566923	ElseStatement	else		4566437	0					
ANR	4566924	CompoundStatement		135:14:3872:3872	4566437	0					
ANR	4566925	ExpressionStatement	"stringValue . sprintf ( fmt -> printfFmt , ( float ) result . i )"	266:8:7082:7151	4566437	0	True				
ANR	4566926	CallExpression	"stringValue . sprintf ( fmt -> printfFmt , ( float ) result . i )"		4566437	0					
ANR	4566927	Callee	stringValue . sprintf		4566437	0					
ANR	4566928	MemberAccess	stringValue . sprintf		4566437	0					
ANR	4566929	Identifier	stringValue		4566437	0					
ANR	4566930	Identifier	sprintf		4566437	1					
ANR	4566931	ArgumentList	fmt -> printfFmt		4566437	1					
ANR	4566932	Argument	fmt -> printfFmt		4566437	0					
ANR	4566933	PtrMemberAccess	fmt -> printfFmt		4566437	0					
ANR	4566934	Identifier	fmt		4566437	0					
ANR	4566935	Identifier	printfFmt		4566437	1					
ANR	4566936	Argument	( float ) result . i		4566437	1					
ANR	4566937	CastExpression	( float ) result . i		4566437	0					
ANR	4566938	CastTarget	float		4566437	0					
ANR	4566939	MemberAccess	result . i		4566437	1					
ANR	4566940	Identifier	result		4566437	0					
ANR	4566941	Identifier	i		4566437	1					
ANR	4566942	ExpressionStatement	retval += stringValue	269:7:7169:7190	4566437	6	True				
ANR	4566943	AssignmentExpression	retval += stringValue		4566437	0		+=			
ANR	4566944	Identifier	retval		4566437	0					
ANR	4566945	Identifier	stringValue		4566437	1					
ANR	4566946	BreakStatement	break ;	270:7:7199:7204	4566437	7	True				
ANR	4566947	Label	default :	272:6:7213:7220	4566437	8	True				
ANR	4566948	Identifier	default		4566437	0					
ANR	4566949	IfStatement	if ( alt )		4566437	9					
ANR	4566950	Condition	alt	276:12:7363:7365	4566437	0	True				
ANR	4566951	Identifier	alt		4566437	0					
ANR	4566952	CompoundStatement		146:18:4169:4169	4566437	1					
ANR	4566953	ExpressionStatement	retval += alt	277:8:7379:7392	4566437	0	True				
ANR	4566954	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4566955	Identifier	retval		4566437	0					
ANR	4566956	Identifier	alt		4566437	1					
ANR	4566957	BreakStatement	break ;	279:7:7410:7415	4566437	10	True				
ANR	4566958	ElseStatement	else		4566437	0					
ANR	4566959	CompoundStatement		151:12:4237:4237	4566437	0					
ANR	4566960	IfStatement	if ( alt )		4566437	0					
ANR	4566961	Condition	alt	283:10:7473:7475	4566437	0	True				
ANR	4566962	Identifier	alt		4566437	0					
ANR	4566963	CompoundStatement		153:16:4279:4279	4566437	1					
ANR	4566964	ExpressionStatement	retval += alt	284:7:7488:7501	4566437	0	True				
ANR	4566965	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4566966	Identifier	retval		4566437	0					
ANR	4566967	Identifier	alt		4566437	1					
ANR	4566968	BreakStatement	break ;	287:5:7523:7528	4566437	6	True				
ANR	4566969	Label	default :	289:4:7535:7542	4566437	7	True				
ANR	4566970	Identifier	default		4566437	0					
ANR	4566971	ExpressionStatement	"EXCEPT ( ""Unknown value (%d) from parsePrintfFormat()!"" , ( int ) fmt_type )"	290:5:7549:7627	4566437	8	True				
ANR	4566972	CallExpression	"EXCEPT ( ""Unknown value (%d) from parsePrintfFormat()!"" , ( int ) fmt_type )"		4566437	0					
ANR	4566973	Callee	EXCEPT		4566437	0					
ANR	4566974	Identifier	EXCEPT		4566437	0					
ANR	4566975	ArgumentList	"""Unknown value (%d) from parsePrintfFormat()!"""		4566437	1					
ANR	4566976	Argument	"""Unknown value (%d) from parsePrintfFormat()!"""		4566437	0					
ANR	4566977	PrimaryExpression	"""Unknown value (%d) from parsePrintfFormat()!"""		4566437	0					
ANR	4566978	Argument	( int ) fmt_type		4566437	1					
ANR	4566979	CastExpression	( int ) fmt_type		4566437	0					
ANR	4566980	CastTarget	int		4566437	0					
ANR	4566981	Identifier	fmt_type		4566437	1					
ANR	4566982	BreakStatement	break ;	292:5:7634:7639	4566437	9	True				
ANR	4566983	IfStatement	if ( attr_is_expr )		4566437	6					
ANR	4566984	Condition	attr_is_expr	294:7:7654:7665	4566437	0	True				
ANR	4566985	Identifier	attr_is_expr		4566437	0					
ANR	4566986	CompoundStatement		164:21:4468:4468	4566437	1					
ANR	4566987	Statement	delete	294:23:7670:7675	4566437	0	True				
ANR	4566988	ExpressionStatement	tree	294:30:7677:7681	4566437	1	True				
ANR	4566989	Identifier	tree		4566437	0					
ANR	4566990	ExpressionStatement	tree = NULL	294:36:7683:7694	4566437	2	True				
ANR	4566991	AssignmentExpression	tree = NULL		4566437	0		=			
ANR	4566992	Identifier	tree		4566437	0					
ANR	4566993	Identifier	NULL		4566437	1					
ANR	4566994	BreakStatement	break ;	295:4:7702:7707	4566437	7	True				
ANR	4566995	Label	case INT_CUSTOM_FMT :	297:5:7715:7734	4566437	8	True				
ANR	4566996	Identifier	INT_CUSTOM_FMT		4566437	0					
ANR	4566997	IfStatement	"if ( al -> EvalInteger ( attr , target , intValue ) )"		4566437	9					
ANR	4566998	Condition	"al -> EvalInteger ( attr , target , intValue )"	298:8:7744:7784	4566437	0	True				
ANR	4566999	CallExpression	"al -> EvalInteger ( attr , target , intValue )"		4566437	0					
ANR	4567000	Callee	al -> EvalInteger		4566437	0					
ANR	4567001	PtrMemberAccess	al -> EvalInteger		4566437	0					
ANR	4567002	Identifier	al		4566437	0					
ANR	4567003	Identifier	EvalInteger		4566437	1					
ANR	4567004	ArgumentList	attr		4566437	1					
ANR	4567005	Argument	attr		4566437	0					
ANR	4567006	Identifier	attr		4566437	0					
ANR	4567007	Argument	target		4566437	1					
ANR	4567008	Identifier	target		4566437	0					
ANR	4567009	Argument	intValue		4566437	2					
ANR	4567010	Identifier	intValue		4566437	0					
ANR	4567011	CompoundStatement		168:52:4588:4588	4566437	1					
ANR	4567012	ExpressionStatement	"retval += ( fmt -> df ) ( intValue , al )"	299:5:7795:7831	4566437	0	True				
ANR	4567013	AssignmentExpression	"retval += ( fmt -> df ) ( intValue , al )"		4566437	0		+=			
ANR	4567014	Identifier	retval		4566437	0					
ANR	4567015	CallExpression	"( fmt -> df ) ( intValue , al )"		4566437	1					
ANR	4567016	Callee	fmt -> df		4566437	0					
ANR	4567017	PtrMemberAccess	fmt -> df		4566437	0					
ANR	4567018	Identifier	fmt		4566437	0					
ANR	4567019	Identifier	df		4566437	1					
ANR	4567020	ArgumentList	intValue		4566437	1					
ANR	4567021	Argument	intValue		4566437	0					
ANR	4567022	Identifier	intValue		4566437	0					
ANR	4567023	Argument	al		4566437	1					
ANR	4567024	Identifier	al		4566437	0					
ANR	4567025	ElseStatement	else		4566437	0					
ANR	4567026	CompoundStatement		170:11:4644:4644	4566437	0					
ANR	4567027	ExpressionStatement	retval += alt	301:5:7851:7864	4566437	0	True				
ANR	4567028	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4567029	Identifier	retval		4566437	0					
ANR	4567030	Identifier	alt		4566437	1					
ANR	4567031	BreakStatement	break ;	303:4:7876:7881	4566437	10	True				
ANR	4567032	Label	case FLT_CUSTOM_FMT :	305:5:7889:7908	4566437	11	True				
ANR	4567033	Identifier	FLT_CUSTOM_FMT		4566437	0					
ANR	4567034	IfStatement	"if ( al -> EvalFloat ( attr , target , floatValue ) )"		4566437	12					
ANR	4567035	Condition	"al -> EvalFloat ( attr , target , floatValue )"	306:8:7918:7958	4566437	0	True				
ANR	4567036	CallExpression	"al -> EvalFloat ( attr , target , floatValue )"		4566437	0					
ANR	4567037	Callee	al -> EvalFloat		4566437	0					
ANR	4567038	PtrMemberAccess	al -> EvalFloat		4566437	0					
ANR	4567039	Identifier	al		4566437	0					
ANR	4567040	Identifier	EvalFloat		4566437	1					
ANR	4567041	ArgumentList	attr		4566437	1					
ANR	4567042	Argument	attr		4566437	0					
ANR	4567043	Identifier	attr		4566437	0					
ANR	4567044	Argument	target		4566437	1					
ANR	4567045	Identifier	target		4566437	0					
ANR	4567046	Argument	floatValue		4566437	2					
ANR	4567047	Identifier	floatValue		4566437	0					
ANR	4567048	CompoundStatement		176:52:4762:4762	4566437	1					
ANR	4567049	ExpressionStatement	"retval += ( fmt -> ff ) ( floatValue , al )"	307:5:7969:8007	4566437	0	True				
ANR	4567050	AssignmentExpression	"retval += ( fmt -> ff ) ( floatValue , al )"		4566437	0		+=			
ANR	4567051	Identifier	retval		4566437	0					
ANR	4567052	CallExpression	"( fmt -> ff ) ( floatValue , al )"		4566437	1					
ANR	4567053	Callee	fmt -> ff		4566437	0					
ANR	4567054	PtrMemberAccess	fmt -> ff		4566437	0					
ANR	4567055	Identifier	fmt		4566437	0					
ANR	4567056	Identifier	ff		4566437	1					
ANR	4567057	ArgumentList	floatValue		4566437	1					
ANR	4567058	Argument	floatValue		4566437	0					
ANR	4567059	Identifier	floatValue		4566437	0					
ANR	4567060	Argument	al		4566437	1					
ANR	4567061	Identifier	al		4566437	0					
ANR	4567062	ElseStatement	else		4566437	0					
ANR	4567063	CompoundStatement		178:11:4820:4820	4566437	0					
ANR	4567064	ExpressionStatement	retval += alt	309:5:8027:8040	4566437	0	True				
ANR	4567065	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4567066	Identifier	retval		4566437	0					
ANR	4567067	Identifier	alt		4566437	1					
ANR	4567068	BreakStatement	break ;	311:4:8052:8057	4566437	13	True				
ANR	4567069	Label	case STR_CUSTOM_FMT :	313:5:8065:8084	4566437	14	True				
ANR	4567070	Identifier	STR_CUSTOM_FMT		4566437	0					
ANR	4567071	IfStatement	"if ( al -> EvalString ( attr , target , & value_from_classad ) )"		4566437	15					
ANR	4567072	Condition	"al -> EvalString ( attr , target , & value_from_classad )"	314:8:8094:8144	4566437	0	True				
ANR	4567073	CallExpression	"al -> EvalString ( attr , target , & value_from_classad )"		4566437	0					
ANR	4567074	Callee	al -> EvalString		4566437	0					
ANR	4567075	PtrMemberAccess	al -> EvalString		4566437	0					
ANR	4567076	Identifier	al		4566437	0					
ANR	4567077	Identifier	EvalString		4566437	1					
ANR	4567078	ArgumentList	attr		4566437	1					
ANR	4567079	Argument	attr		4566437	0					
ANR	4567080	Identifier	attr		4566437	0					
ANR	4567081	Argument	target		4566437	1					
ANR	4567082	Identifier	target		4566437	0					
ANR	4567083	Argument	& value_from_classad		4566437	2					
ANR	4567084	UnaryOperationExpression	& value_from_classad		4566437	0					
ANR	4567085	UnaryOperator	&		4566437	0					
ANR	4567086	Identifier	value_from_classad		4566437	1					
ANR	4567087	CompoundStatement		184:62:4948:4948	4566437	1					
ANR	4567088	ExpressionStatement	"retval += ( fmt -> sf ) ( value_from_classad , al )"	315:5:8155:8198	4566437	0	True				
ANR	4567089	AssignmentExpression	"retval += ( fmt -> sf ) ( value_from_classad , al )"		4566437	0		+=			
ANR	4567090	Identifier	retval		4566437	0					
ANR	4567091	CallExpression	"( fmt -> sf ) ( value_from_classad , al )"		4566437	1					
ANR	4567092	Callee	fmt -> sf		4566437	0					
ANR	4567093	PtrMemberAccess	fmt -> sf		4566437	0					
ANR	4567094	Identifier	fmt		4566437	0					
ANR	4567095	Identifier	sf		4566437	1					
ANR	4567096	ArgumentList	value_from_classad		4566437	1					
ANR	4567097	Argument	value_from_classad		4566437	0					
ANR	4567098	Identifier	value_from_classad		4566437	0					
ANR	4567099	Argument	al		4566437	1					
ANR	4567100	Identifier	al		4566437	0					
ANR	4567101	ExpressionStatement	free ( value_from_classad )	316:5:8205:8229	4566437	1	True				
ANR	4567102	CallExpression	free ( value_from_classad )		4566437	0					
ANR	4567103	Callee	free		4566437	0					
ANR	4567104	Identifier	free		4566437	0					
ANR	4567105	ArgumentList	value_from_classad		4566437	1					
ANR	4567106	Argument	value_from_classad		4566437	0					
ANR	4567107	Identifier	value_from_classad		4566437	0					
ANR	4567108	ElseStatement	else		4566437	0					
ANR	4567109	CompoundStatement		187:11:5042:5042	4566437	0					
ANR	4567110	ExpressionStatement	retval += alt	318:5:8249:8262	4566437	0	True				
ANR	4567111	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4567112	Identifier	retval		4566437	0					
ANR	4567113	Identifier	alt		4566437	1					
ANR	4567114	BreakStatement	break ;	320:4:8274:8279	4566437	16	True				
ANR	4567115	Label	default :	322:3:8286:8293	4566437	17	True				
ANR	4567116	Identifier	default		4566437	0					
ANR	4567117	ExpressionStatement	retval += alt	323:4:8299:8312	4566437	18	True				
ANR	4567118	AssignmentExpression	retval += alt		4566437	0		+=			
ANR	4567119	Identifier	retval		4566437	0					
ANR	4567120	Identifier	alt		4566437	1					
ANR	4567121	ReturnStatement	return strnewp ( retval . Value ( ) ) ;	328:1:8366:8397	4566437	17	True				
ANR	4567122	CallExpression	strnewp ( retval . Value ( ) )		4566437	0					
ANR	4567123	Callee	strnewp		4566437	0					
ANR	4567124	Identifier	strnewp		4566437	0					
ANR	4567125	ArgumentList	retval . Value ( )		4566437	1					
ANR	4567126	Argument	retval . Value ( )		4566437	0					
ANR	4567127	CallExpression	retval . Value ( )		4566437	0					
ANR	4567128	Callee	retval . Value		4566437	0					
ANR	4567129	MemberAccess	retval . Value		4566437	0					
ANR	4567130	Identifier	retval		4566437	0					
ANR	4567131	Identifier	Value		4566437	1					
ANR	4567132	ArgumentList			4566437	1					
ANR	4567133	ReturnType	char *		4566437	1					
ANR	4567134	Identifier	AttrListPrintMask :: display		4566437	2					
ANR	4567135	ParameterList	"AttrList * al , AttrList * target"		4566437	3					
ANR	4567136	Parameter	AttrList * al	130:9:3154:3165	4566437	0	True				
ANR	4567137	ParameterType	AttrList *		4566437	0					
ANR	4567138	Identifier	al		4566437	1					
ANR	4567139	Parameter	AttrList * target	130:23:3168:3183	4566437	1	True				
ANR	4567140	ParameterType	AttrList *		4566437	0					
ANR	4567141	Identifier	target		4566437	1					
ANR	4567142	CFGEntryNode	ENTRY		4566437		True				
ANR	4567143	CFGExitNode	EXIT		4566437		True				
ANR	4567144	Symbol	retval . Value		4566437						
ANR	4567145	Symbol	parsePrintfFormat		4566437						
ANR	4567146	Symbol	fmt		4566437						
ANR	4567147	Symbol	value_from_classad		4566437						
ANR	4567148	Symbol	fmt_type		4566437						
ANR	4567149	Symbol	stringValue		4566437						
ANR	4567150	Symbol	al -> EvalInteger		4566437						
ANR	4567151	Symbol	& tmp_fmt		4566437						
ANR	4567152	Symbol	al -> EvalFloat		4566437						
ANR	4567153	Symbol	fmt -> ff		4566437						
ANR	4567154	Symbol	ParseClassAdRvalExpr		4566437						
ANR	4567155	Symbol	PFT_INT		4566437						
ANR	4567156	Symbol	result . f		4566437						
ANR	4567157	Symbol	NULL		4566437						
ANR	4567158	Symbol	& value_from_classad		4566437						
ANR	4567159	Symbol	result . i		4566437						
ANR	4567160	Symbol	EvalExprTree		4566437						
ANR	4567161	Symbol	alt		4566437						
ANR	4567162	Symbol	tree		4566437						
ANR	4567163	Symbol	attributes . Next		4566437						
ANR	4567164	Symbol	floatValue		4566437						
ANR	4567165	Symbol	al		4566437						
ANR	4567166	Symbol	result . type		4566437						
ANR	4567167	Symbol	retval		4566437						
ANR	4567168	Symbol	result . s		4566437						
ANR	4567169	Symbol	al -> EvalString		4566437						
ANR	4567170	Symbol	al -> LookupExpr		4566437						
ANR	4567171	Symbol	LX_STRING		4566437						
ANR	4567172	Symbol	true		4566437						
ANR	4567173	Symbol	fmt_info		4566437						
ANR	4567174	Symbol	formats		4566437						
ANR	4567175	Symbol	fmt_info . type		4566437						
ANR	4567176	Symbol	* fmt		4566437						
ANR	4567177	Symbol	& fmt_info		4566437						
ANR	4567178	Symbol	ExprTreeToString		4566437						
ANR	4567179	Symbol	alternates . Next		4566437						
ANR	4567180	Symbol	attr_is_expr		4566437						
ANR	4567181	Symbol	tmp_fmt		4566437						
ANR	4567182	Symbol	result		4566437						
ANR	4567183	Symbol	bool_str		4566437						
ANR	4567184	Symbol	& result		4566437						
ANR	4567185	Symbol	fmt -> df		4566437						
ANR	4567186	Symbol	strnewp		4566437						
ANR	4567187	Symbol	fmt -> printfFmt		4566437						
ANR	4567188	Symbol	attr		4566437						
ANR	4567189	Symbol	formats . Next		4566437						
ANR	4567190	Symbol	fmt -> fmtKind		4566437						
ANR	4567191	Symbol	intValue		4566437						
ANR	4567192	Symbol	fmt -> sf		4566437						
ANR	4567193	Symbol	false		4566437						
ANR	4567194	Symbol	* alt		4566437						
ANR	4567195	Symbol	alternates		4566437						
ANR	4567196	Symbol	target		4566437						
ANR	4567197	Symbol	* al		4566437						
ANR	4567198	Symbol	attributes		4566437						
ANR	4567199	Function	AttrListPrintMask :: display	332:0:8403:8697							
ANR	4567200	FunctionDef	"AttrListPrintMask :: display (FILE * file , AttrListList * list , AttrList * target)"		4567199	0					
ANR	4567201	CompoundStatement		334:0:8499:8697	4567199	0					
ANR	4567202	IdentifierDeclStatement	int retval = 1 ;	335:1:8502:8516	4567199	0	True				
ANR	4567203	IdentifierDecl	retval = 1		4567199	0					
ANR	4567204	IdentifierDeclType	int		4567199	0					
ANR	4567205	Identifier	retval		4567199	1					
ANR	4567206	AssignmentExpression	retval = 1		4567199	2		=			
ANR	4567207	Identifier	retval		4567199	0					
ANR	4567208	PrimaryExpression	1		4567199	1					
ANR	4567209	IdentifierDeclStatement	AttrList * al ;	336:1:8519:8531	4567199	1	True				
ANR	4567210	IdentifierDecl	* al		4567199	0					
ANR	4567211	IdentifierDeclType	AttrList *		4567199	0					
ANR	4567212	Identifier	al		4567199	1					
ANR	4567213	ExpressionStatement	list -> Open ( )	338:1:8535:8547	4567199	2	True				
ANR	4567214	CallExpression	list -> Open ( )		4567199	0					
ANR	4567215	Callee	list -> Open		4567199	0					
ANR	4567216	PtrMemberAccess	list -> Open		4567199	0					
ANR	4567217	Identifier	list		4567199	0					
ANR	4567218	Identifier	Open		4567199	1					
ANR	4567219	ArgumentList			4567199	1					
ANR	4567220	WhileStatement	while ( ( al = ( AttrList * ) list -> Next ( ) ) )		4567199	3					
ANR	4567221	Condition	al = ( AttrList * ) list -> Next ( )	339:11:8560:8591	4567199	0	True				
ANR	4567222	AssignmentExpression	al = ( AttrList * ) list -> Next ( )		4567199	0		=			
ANR	4567223	Identifier	al		4567199	0					
ANR	4567224	CastExpression	( AttrList * ) list -> Next ( )		4567199	1					
ANR	4567225	CastTarget	AttrList *		4567199	0					
ANR	4567226	CallExpression	list -> Next ( )		4567199	1					
ANR	4567227	Callee	list -> Next		4567199	0					
ANR	4567228	PtrMemberAccess	list -> Next		4567199	0					
ANR	4567229	Identifier	list		4567199	0					
ANR	4567230	Identifier	Next		4567199	1					
ANR	4567231	ArgumentList			4567199	1					
ANR	4567232	CompoundStatement		6:46:95:95	4567199	1					
ANR	4567233	IfStatement	"if ( ! display ( file , al , target ) )"		4567199	0					
ANR	4567234	Condition	"! display ( file , al , target )"	340:6:8603:8629	4567199	0	True				
ANR	4567235	UnaryOperationExpression	"! display ( file , al , target )"		4567199	0					
ANR	4567236	UnaryOperator	!		4567199	0					
ANR	4567237	CallExpression	"display ( file , al , target )"		4567199	1					
ANR	4567238	Callee	display		4567199	0					
ANR	4567239	Identifier	display		4567199	0					
ANR	4567240	ArgumentList	file		4567199	1					
ANR	4567241	Argument	file		4567199	0					
ANR	4567242	Identifier	file		4567199	0					
ANR	4567243	Argument	al		4567199	1					
ANR	4567244	Identifier	al		4567199	0					
ANR	4567245	Argument	target		4567199	2					
ANR	4567246	Identifier	target		4567199	0					
ANR	4567247	CompoundStatement		7:36:133:133	4567199	1					
ANR	4567248	ExpressionStatement	retval = 0	341:3:8638:8648	4567199	0	True				
ANR	4567249	AssignmentExpression	retval = 0		4567199	0		=			
ANR	4567250	Identifier	retval		4567199	0					
ANR	4567251	PrimaryExpression	0		4567199	1					
ANR	4567252	ExpressionStatement	list -> Close ( )	344:4:8664:8678	4567199	4	True				
ANR	4567253	CallExpression	list -> Close ( )		4567199	0					
ANR	4567254	Callee	list -> Close		4567199	0					
ANR	4567255	PtrMemberAccess	list -> Close		4567199	0					
ANR	4567256	Identifier	list		4567199	0					
ANR	4567257	Identifier	Close		4567199	1					
ANR	4567258	ArgumentList			4567199	1					
ANR	4567259	ReturnStatement	return retval ;	346:1:8682:8695	4567199	5	True				
ANR	4567260	Identifier	retval		4567199	0					
ANR	4567261	ReturnType	int		4567199	1					
ANR	4567262	Identifier	AttrListPrintMask :: display		4567199	2					
ANR	4567263	ParameterList	"FILE * file , AttrListList * list , AttrList * target"		4567199	3					
ANR	4567264	Parameter	FILE * file	333:9:8436:8445	4567199	0	True				
ANR	4567265	ParameterType	FILE *		4567199	0					
ANR	4567266	Identifier	file		4567199	1					
ANR	4567267	Parameter	AttrListList * list	333:21:8448:8465	4567199	1	True				
ANR	4567268	ParameterType	AttrListList *		4567199	0					
ANR	4567269	Identifier	list		4567199	1					
ANR	4567270	Parameter	AttrList * target	333:41:8468:8483	4567199	2	True				
ANR	4567271	ParameterType	AttrList *		4567199	0					
ANR	4567272	Identifier	target		4567199	1					
ANR	4567273	CFGEntryNode	ENTRY		4567199		True				
ANR	4567274	CFGExitNode	EXIT		4567199		True				
ANR	4567275	Symbol	list -> Next		4567199						
ANR	4567276	Symbol	file		4567199						
ANR	4567277	Symbol	* list		4567199						
ANR	4567278	Symbol	display		4567199						
ANR	4567279	Symbol	al		4567199						
ANR	4567280	Symbol	list		4567199						
ANR	4567281	Symbol	retval		4567199						
ANR	4567282	Symbol	target		4567199						
ANR	4567283	Function	AttrListPrintMask :: clearList	349:0:8700:8868							
ANR	4567284	FunctionDef	AttrListPrintMask :: clearList (List < char > & l)		4567283	0					
ANR	4567285	CompoundStatement		351:0:8751:8868	4567283	0					
ANR	4567286	IdentifierDeclStatement	char * x ;	352:4:8757:8764	4567283	0	True				
ANR	4567287	IdentifierDecl	* x		4567283	0					
ANR	4567288	IdentifierDeclType	char *		4567283	0					
ANR	4567289	Identifier	x		4567283	1					
ANR	4567290	ExpressionStatement	l . Rewind ( )	353:4:8770:8781	4567283	1	True				
ANR	4567291	CallExpression	l . Rewind ( )		4567283	0					
ANR	4567292	Callee	l . Rewind		4567283	0					
ANR	4567293	MemberAccess	l . Rewind		4567283	0					
ANR	4567294	Identifier	l		4567283	0					
ANR	4567295	Identifier	Rewind		4567283	1					
ANR	4567296	ArgumentList			4567283	1					
ANR	4567297	WhileStatement	while ( ( x = l . Next ( ) ) )		4567283	2					
ANR	4567298	Condition	x = l . Next ( )	354:11:8794:8807	4567283	0	True				
ANR	4567299	AssignmentExpression	x = l . Next ( )		4567283	0		=			
ANR	4567300	Identifier	x		4567283	0					
ANR	4567301	CallExpression	l . Next ( )		4567283	1					
ANR	4567302	Callee	l . Next		4567283	0					
ANR	4567303	MemberAccess	l . Next		4567283	0					
ANR	4567304	Identifier	l		4567283	0					
ANR	4567305	Identifier	Next		4567283	1					
ANR	4567306	ArgumentList			4567283	1					
ANR	4567307	CompoundStatement		4:28:59:59	4567283	1					
ANR	4567308	Statement	delete	355:8:8821:8826	4567283	0	True				
ANR	4567309	Statement	[	355:15:8828:8828	4567283	1	True				
ANR	4567310	Statement	]	355:16:8829:8829	4567283	2	True				
ANR	4567311	ExpressionStatement	x	355:18:8831:8832	4567283	3	True				
ANR	4567312	Identifier	x		4567283	0					
ANR	4567313	ExpressionStatement	l . DeleteCurrent ( )	356:8:8842:8860	4567283	4	True				
ANR	4567314	CallExpression	l . DeleteCurrent ( )		4567283	0					
ANR	4567315	Callee	l . DeleteCurrent		4567283	0					
ANR	4567316	MemberAccess	l . DeleteCurrent		4567283	0					
ANR	4567317	Identifier	l		4567283	0					
ANR	4567318	Identifier	DeleteCurrent		4567283	1					
ANR	4567319	ArgumentList			4567283	1					
ANR	4567320	ReturnType	void		4567283	1					
ANR	4567321	Identifier	AttrListPrintMask :: clearList		4567283	2					
ANR	4567322	ParameterList	List < char > & l		4567283	3					
ANR	4567323	Parameter	List < char > & l	350:11:8736:8748	4567283	0	True				
ANR	4567324	ParameterType	List < char > &		4567283	0					
ANR	4567325	Identifier	l		4567283	1					
ANR	4567326	CFGEntryNode	ENTRY		4567283		True				
ANR	4567327	CFGExitNode	EXIT		4567283		True				
ANR	4567328	Symbol	l . Next		4567283						
ANR	4567329	Symbol	x		4567283						
ANR	4567330	Symbol	l		4567283						
ANR	4567331	Function	AttrListPrintMask :: clearList	360:0:8871:9098							
ANR	4567332	FunctionDef	AttrListPrintMask :: clearList (List < Formatter > & l)		4567331	0					
ANR	4567333	CompoundStatement		362:0:8927:9098	4567331	0					
ANR	4567334	IdentifierDeclStatement	Formatter * x ;	363:4:8933:8945	4567331	0	True				
ANR	4567335	IdentifierDecl	* x		4567331	0					
ANR	4567336	IdentifierDeclType	Formatter *		4567331	0					
ANR	4567337	Identifier	x		4567331	1					
ANR	4567338	ExpressionStatement	l . Rewind ( )	364:4:8951:8962	4567331	1	True				
ANR	4567339	CallExpression	l . Rewind ( )		4567331	0					
ANR	4567340	Callee	l . Rewind		4567331	0					
ANR	4567341	MemberAccess	l . Rewind		4567331	0					
ANR	4567342	Identifier	l		4567331	0					
ANR	4567343	Identifier	Rewind		4567331	1					
ANR	4567344	ArgumentList			4567331	1					
ANR	4567345	WhileStatement	while ( ( x = l . Next ( ) ) )		4567331	2					
ANR	4567346	Condition	x = l . Next ( )	365:11:8975:8989	4567331	0	True				
ANR	4567347	AssignmentExpression	x = l . Next ( )		4567331	0		=			
ANR	4567348	Identifier	x		4567331	0					
ANR	4567349	CallExpression	l . Next ( )		4567331	1					
ANR	4567350	Callee	l . Next		4567331	0					
ANR	4567351	MemberAccess	l . Next		4567331	0					
ANR	4567352	Identifier	l		4567331	0					
ANR	4567353	Identifier	Next		4567331	1					
ANR	4567354	ArgumentList			4567331	1					
ANR	4567355	CompoundStatement		4:29:65:65	4567331	1					
ANR	4567356	IfStatement	if ( x -> fmtKind == PRINTF_FMT )		4567331	0					
ANR	4567357	Condition	x -> fmtKind == PRINTF_FMT	366:6:9001:9024	4567331	0	True				
ANR	4567358	EqualityExpression	x -> fmtKind == PRINTF_FMT		4567331	0		==			
ANR	4567359	PtrMemberAccess	x -> fmtKind		4567331	0					
ANR	4567360	Identifier	x		4567331	0					
ANR	4567361	Identifier	fmtKind		4567331	1					
ANR	4567362	Identifier	PRINTF_FMT		4567331	1					
ANR	4567363	Statement	delete	366:33:9028:9033	4567331	1	True				
ANR	4567364	Statement	[	366:40:9035:9035	4567331	1	True				
ANR	4567365	Statement	]	366:41:9036:9036	4567331	2	True				
ANR	4567366	ExpressionStatement	x -> printfFmt	366:43:9038:9050	4567331	3	True				
ANR	4567367	PtrMemberAccess	x -> printfFmt		4567331	0					
ANR	4567368	Identifier	x		4567331	0					
ANR	4567369	Identifier	printfFmt		4567331	1					
ANR	4567370	Statement	delete	367:2:9054:9059	4567331	4	True				
ANR	4567371	ExpressionStatement	x	367:9:9061:9062	4567331	5	True				
ANR	4567372	Identifier	x		4567331	0					
ANR	4567373	ExpressionStatement	l . DeleteCurrent ( )	368:8:9072:9090	4567331	6	True				
ANR	4567374	CallExpression	l . DeleteCurrent ( )		4567331	0					
ANR	4567375	Callee	l . DeleteCurrent		4567331	0					
ANR	4567376	MemberAccess	l . DeleteCurrent		4567331	0					
ANR	4567377	Identifier	l		4567331	0					
ANR	4567378	Identifier	DeleteCurrent		4567331	1					
ANR	4567379	ArgumentList			4567331	1					
ANR	4567380	ReturnType	void		4567331	1					
ANR	4567381	Identifier	AttrListPrintMask :: clearList		4567331	2					
ANR	4567382	ParameterList	List < Formatter > & l		4567331	3					
ANR	4567383	Parameter	List < Formatter > & l	361:11:8907:8924	4567331	0	True				
ANR	4567384	ParameterType	List < Formatter > &		4567331	0					
ANR	4567385	Identifier	l		4567331	1					
ANR	4567386	CFGEntryNode	ENTRY		4567331		True				
ANR	4567387	CFGExitNode	EXIT		4567331		True				
ANR	4567388	Symbol	* x		4567331						
ANR	4567389	Symbol	l . Next		4567331						
ANR	4567390	Symbol	x -> fmtKind		4567331						
ANR	4567391	Symbol	x		4567331						
ANR	4567392	Symbol	l		4567331						
ANR	4567393	Symbol	PRINTF_FMT		4567331						
ANR	4567394	Function	AttrListPrintMask :: copyList	372:0:9101:9445							
ANR	4567395	FunctionDef	"AttrListPrintMask :: copyList (List < Formatter > & to , List < Formatter > & from)"		4567394	0					
ANR	4567396	CompoundStatement		374:0:9180:9445	4567394	0					
ANR	4567397	IdentifierDeclStatement	"Formatter * item , * newItem ;"	375:1:9183:9208	4567394	0	True				
ANR	4567398	IdentifierDecl	* item		4567394	0					
ANR	4567399	IdentifierDeclType	Formatter *		4567394	0					
ANR	4567400	Identifier	item		4567394	1					
ANR	4567401	IdentifierDecl	* newItem		4567394	1					
ANR	4567402	IdentifierDeclType	Formatter *		4567394	0					
ANR	4567403	Identifier	newItem		4567394	1					
ANR	4567404	ExpressionStatement	clearList ( to )	377:1:9212:9226	4567394	1	True				
ANR	4567405	CallExpression	clearList ( to )		4567394	0					
ANR	4567406	Callee	clearList		4567394	0					
ANR	4567407	Identifier	clearList		4567394	0					
ANR	4567408	ArgumentList	to		4567394	1					
ANR	4567409	Argument	to		4567394	0					
ANR	4567410	Identifier	to		4567394	0					
ANR	4567411	ExpressionStatement	from . Rewind ( )	378:1:9229:9243	4567394	2	True				
ANR	4567412	CallExpression	from . Rewind ( )		4567394	0					
ANR	4567413	Callee	from . Rewind		4567394	0					
ANR	4567414	MemberAccess	from . Rewind		4567394	0					
ANR	4567415	Identifier	from		4567394	0					
ANR	4567416	Identifier	Rewind		4567394	1					
ANR	4567417	ArgumentList			4567394	1					
ANR	4567418	WhileStatement	while ( ( item = from . Next ( ) ) )		4567394	3					
ANR	4567419	Condition	item = from . Next ( )	379:8:9253:9272	4567394	0	True				
ANR	4567420	AssignmentExpression	item = from . Next ( )		4567394	0		=			
ANR	4567421	Identifier	item		4567394	0					
ANR	4567422	CallExpression	from . Next ( )		4567394	1					
ANR	4567423	Callee	from . Next		4567394	0					
ANR	4567424	MemberAccess	from . Next		4567394	0					
ANR	4567425	Identifier	from		4567394	0					
ANR	4567426	Identifier	Next		4567394	1					
ANR	4567427	ArgumentList			4567394	1					
ANR	4567428	CompoundStatement		6:31:95:95	4567394	1					
ANR	4567429	Statement	newItem	380:2:9280:9286	4567394	0	True				
ANR	4567430	Statement	=	380:10:9288:9288	4567394	1	True				
ANR	4567431	Statement	new	380:12:9290:9292	4567394	2	True				
ANR	4567432	ExpressionStatement	Formatter	380:16:9294:9303	4567394	3	True				
ANR	4567433	Identifier	Formatter		4567394	0					
ANR	4567434	ExpressionStatement	* newItem = * item	381:2:9307:9323	4567394	4	True				
ANR	4567435	AssignmentExpression	* newItem = * item		4567394	0		=			
ANR	4567436	UnaryOperationExpression	* newItem		4567394	0					
ANR	4567437	UnaryOperator	*		4567394	0					
ANR	4567438	Identifier	newItem		4567394	1					
ANR	4567439	UnaryOperationExpression	* item		4567394	1					
ANR	4567440	UnaryOperator	*		4567394	0					
ANR	4567441	Identifier	item		4567394	1					
ANR	4567442	IfStatement	if ( newItem -> fmtKind == PRINTF_FMT )		4567394	5					
ANR	4567443	Condition	newItem -> fmtKind == PRINTF_FMT	382:6:9331:9360	4567394	0	True				
ANR	4567444	EqualityExpression	newItem -> fmtKind == PRINTF_FMT		4567394	0		==			
ANR	4567445	PtrMemberAccess	newItem -> fmtKind		4567394	0					
ANR	4567446	Identifier	newItem		4567394	0					
ANR	4567447	Identifier	fmtKind		4567394	1					
ANR	4567448	Identifier	PRINTF_FMT		4567394	1					
ANR	4567449	ExpressionStatement	newItem -> printfFmt = new_strdup ( item -> printfFmt )	383:3:9367:9417	4567394	1	True				
ANR	4567450	AssignmentExpression	newItem -> printfFmt = new_strdup ( item -> printfFmt )		4567394	0		=			
ANR	4567451	PtrMemberAccess	newItem -> printfFmt		4567394	0					
ANR	4567452	Identifier	newItem		4567394	0					
ANR	4567453	Identifier	printfFmt		4567394	1					
ANR	4567454	CallExpression	new_strdup ( item -> printfFmt )		4567394	1					
ANR	4567455	Callee	new_strdup		4567394	0					
ANR	4567456	Identifier	new_strdup		4567394	0					
ANR	4567457	ArgumentList	item -> printfFmt		4567394	1					
ANR	4567458	Argument	item -> printfFmt		4567394	0					
ANR	4567459	PtrMemberAccess	item -> printfFmt		4567394	0					
ANR	4567460	Identifier	item		4567394	0					
ANR	4567461	Identifier	printfFmt		4567394	1					
ANR	4567462	ExpressionStatement	to . Append ( newItem )	384:2:9421:9440	4567394	6	True				
ANR	4567463	CallExpression	to . Append ( newItem )		4567394	0					
ANR	4567464	Callee	to . Append		4567394	0					
ANR	4567465	MemberAccess	to . Append		4567394	0					
ANR	4567466	Identifier	to		4567394	0					
ANR	4567467	Identifier	Append		4567394	1					
ANR	4567468	ArgumentList	newItem		4567394	1					
ANR	4567469	Argument	newItem		4567394	0					
ANR	4567470	Identifier	newItem		4567394	0					
ANR	4567471	ReturnType	void		4567394	1					
ANR	4567472	Identifier	AttrListPrintMask :: copyList		4567394	2					
ANR	4567473	ParameterList	"List < Formatter > & to , List < Formatter > & from"		4567394	3					
ANR	4567474	Parameter	List < Formatter > & to	373:10:9136:9154	4567394	0	True				
ANR	4567475	ParameterType	List < Formatter > &		4567394	0					
ANR	4567476	Identifier	to		4567394	1					
ANR	4567477	Parameter	List < Formatter > & from	373:31:9157:9177	4567394	1	True				
ANR	4567478	ParameterType	List < Formatter > &		4567394	0					
ANR	4567479	Identifier	from		4567394	1					
ANR	4567480	CFGEntryNode	ENTRY		4567394		True				
ANR	4567481	CFGExitNode	EXIT		4567394		True				
ANR	4567482	Symbol	newItem -> printfFmt		4567394						
ANR	4567483	Symbol	item		4567394						
ANR	4567484	Symbol	new_strdup		4567394						
ANR	4567485	Symbol	newItem		4567394						
ANR	4567486	Symbol	from . Next		4567394						
ANR	4567487	Symbol	* item		4567394						
ANR	4567488	Symbol	from		4567394						
ANR	4567489	Symbol	to		4567394						
ANR	4567490	Symbol	* newItem		4567394						
ANR	4567491	Symbol	newItem -> fmtKind		4567394						
ANR	4567492	Symbol	item -> printfFmt		4567394						
ANR	4567493	Symbol	PRINTF_FMT		4567394						
ANR	4567494	Function	AttrListPrintMask :: copyList	389:0:9449:9637							
ANR	4567495	FunctionDef	"AttrListPrintMask :: copyList (List < char > & to , List < char > & from)"		4567494	0					
ANR	4567496	CompoundStatement		391:0:9518:9637	4567494	0					
ANR	4567497	IdentifierDeclStatement	char * item ;	392:1:9521:9531	4567494	0	True				
ANR	4567498	IdentifierDecl	* item		4567494	0					
ANR	4567499	IdentifierDeclType	char *		4567494	0					
ANR	4567500	Identifier	item		4567494	1					
ANR	4567501	ExpressionStatement	clearList ( to )	394:1:9535:9549	4567494	1	True				
ANR	4567502	CallExpression	clearList ( to )		4567494	0					
ANR	4567503	Callee	clearList		4567494	0					
ANR	4567504	Identifier	clearList		4567494	0					
ANR	4567505	ArgumentList	to		4567494	1					
ANR	4567506	Argument	to		4567494	0					
ANR	4567507	Identifier	to		4567494	0					
ANR	4567508	ExpressionStatement	from . Rewind ( )	395:1:9552:9566	4567494	2	True				
ANR	4567509	CallExpression	from . Rewind ( )		4567494	0					
ANR	4567510	Callee	from . Rewind		4567494	0					
ANR	4567511	MemberAccess	from . Rewind		4567494	0					
ANR	4567512	Identifier	from		4567494	0					
ANR	4567513	Identifier	Rewind		4567494	1					
ANR	4567514	ArgumentList			4567494	1					
ANR	4567515	WhileStatement	while ( ( item = from . Next ( ) ) )		4567494	3					
ANR	4567516	Condition	item = from . Next ( )	396:8:9576:9595	4567494	0	True				
ANR	4567517	AssignmentExpression	item = from . Next ( )		4567494	0		=			
ANR	4567518	Identifier	item		4567494	0					
ANR	4567519	CallExpression	from . Next ( )		4567494	1					
ANR	4567520	Callee	from . Next		4567494	0					
ANR	4567521	MemberAccess	from . Next		4567494	0					
ANR	4567522	Identifier	from		4567494	0					
ANR	4567523	Identifier	Next		4567494	1					
ANR	4567524	ArgumentList			4567494	1					
ANR	4567525	CompoundStatement		6:31:80:80	4567494	1					
ANR	4567526	ExpressionStatement	to . Append ( new_strdup ( item ) )	397:2:9603:9632	4567494	0	True				
ANR	4567527	CallExpression	to . Append ( new_strdup ( item ) )		4567494	0					
ANR	4567528	Callee	to . Append		4567494	0					
ANR	4567529	MemberAccess	to . Append		4567494	0					
ANR	4567530	Identifier	to		4567494	0					
ANR	4567531	Identifier	Append		4567494	1					
ANR	4567532	ArgumentList	new_strdup ( item )		4567494	1					
ANR	4567533	Argument	new_strdup ( item )		4567494	0					
ANR	4567534	CallExpression	new_strdup ( item )		4567494	0					
ANR	4567535	Callee	new_strdup		4567494	0					
ANR	4567536	Identifier	new_strdup		4567494	0					
ANR	4567537	ArgumentList	item		4567494	1					
ANR	4567538	Argument	item		4567494	0					
ANR	4567539	Identifier	item		4567494	0					
ANR	4567540	ReturnType	void		4567494	1					
ANR	4567541	Identifier	AttrListPrintMask :: copyList		4567494	2					
ANR	4567542	ParameterList	"List < char > & to , List < char > & from"		4567494	3					
ANR	4567543	Parameter	List < char > & to	390:10:9484:9497	4567494	0	True				
ANR	4567544	ParameterType	List < char > &		4567494	0					
ANR	4567545	Identifier	to		4567494	1					
ANR	4567546	Parameter	List < char > & from	390:26:9500:9515	4567494	1	True				
ANR	4567547	ParameterType	List < char > &		4567494	0					
ANR	4567548	Identifier	from		4567494	1					
ANR	4567549	CFGEntryNode	ENTRY		4567494		True				
ANR	4567550	CFGExitNode	EXIT		4567494		True				
ANR	4567551	Symbol	item		4567494						
ANR	4567552	Symbol	new_strdup		4567494						
ANR	4567553	Symbol	from . Next		4567494						
ANR	4567554	Symbol	from		4567494						
ANR	4567555	Symbol	to		4567494						
ANR	4567556	Function	new_strdup	403:0:9668:9826							
ANR	4567557	FunctionDef	new_strdup (const char * str)		4567556	0					
ANR	4567558	CompoundStatement		404:0:9710:9826	4567556	0					
ANR	4567559	IdentifierDeclStatement	char * x = new char [ strlen ( str ) + 1 ] ;	405:4:9716:9753	4567556	0	True				
ANR	4567560	IdentifierDecl	* x = new char [ strlen ( str ) + 1 ]		4567556	0					
ANR	4567561	IdentifierDeclType	char *		4567556	0					
ANR	4567562	Identifier	x		4567556	1					
ANR	4567563	AssignmentExpression	* x = new char [ strlen ( str ) + 1 ]		4567556	2		=			
ANR	4567564	Identifier	x		4567556	0					
ANR	4567565	AdditiveExpression	strlen ( str ) + 1		4567556	1		+			
ANR	4567566	CallExpression	strlen ( str )		4567556	0					
ANR	4567567	Callee	strlen		4567556	0					
ANR	4567568	Identifier	strlen		4567556	0					
ANR	4567569	ArgumentList	str		4567556	1					
ANR	4567570	Argument	str		4567556	0					
ANR	4567571	Identifier	str		4567556	0					
ANR	4567572	PrimaryExpression	1		4567556	1					
ANR	4567573	IfStatement	if ( ! x )		4567556	1					
ANR	4567574	Condition	! x	406:8:9763:9764	4567556	0	True				
ANR	4567575	UnaryOperationExpression	! x		4567556	0					
ANR	4567576	UnaryOperator	!		4567556	0					
ANR	4567577	Identifier	x		4567556	1					
ANR	4567578	CompoundStatement		4:4:60:60	4567556	1					
ANR	4567579	ReturnStatement	return 0 ;	408:2:9775:9783	4567556	0	True				
ANR	4567580	PrimaryExpression	0		4567556	0					
ANR	4567581	ExpressionStatement	"strcpy ( x , str )"	410:4:9795:9810	4567556	2	True				
ANR	4567582	CallExpression	"strcpy ( x , str )"		4567556	0					
ANR	4567583	Callee	strcpy		4567556	0					
ANR	4567584	Identifier	strcpy		4567556	0					
ANR	4567585	ArgumentList	x		4567556	1					
ANR	4567586	Argument	x		4567556	0					
ANR	4567587	Identifier	x		4567556	0					
ANR	4567588	Argument	str		4567556	1					
ANR	4567589	Identifier	str		4567556	0					
ANR	4567590	ReturnStatement	return x ;	411:4:9816:9824	4567556	3	True				
ANR	4567591	Identifier	x		4567556	0					
ANR	4567592	ReturnType	static char *		4567556	1					
ANR	4567593	Identifier	new_strdup		4567556	2					
ANR	4567594	ParameterList	const char * str		4567556	3					
ANR	4567595	Parameter	const char * str	403:25:9693:9707	4567556	0	True				
ANR	4567596	ParameterType	const char *		4567556	0					
ANR	4567597	Identifier	str		4567556	1					
ANR	4567598	CFGEntryNode	ENTRY		4567556		True				
ANR	4567599	CFGExitNode	EXIT		4567556		True				
ANR	4567600	Symbol	str		4567556						
ANR	4567601	Symbol	strlen		4567556						
ANR	4567602	Symbol	x		4567556						
