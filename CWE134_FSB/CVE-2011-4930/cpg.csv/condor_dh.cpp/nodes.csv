command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	881752	File	data/converged/CVE-2011-4930_htcondor/condor_dh.cpp								
ANR	881753	DeclStmt									
ANR	881754	Decl							const char	const char [ ]	DH_CONFIG_FILE
ANR	881755	Function	Condor_Diffie_Hellman :: Condor_Diffie_Hellman	33:0:1042:1167							
ANR	881756	FunctionDef	Condor_Diffie_Hellman :: Condor_Diffie_Hellman ()		881755	0					
ANR	881757	CompoundStatement		37:0:1147:1167	881755	0					
ANR	881758	ExpressionStatement	initialize ( )	38:4:1153:1165	881755	0	True				
ANR	881759	CallExpression	initialize ( )		881755	0					
ANR	881760	Callee	initialize		881755	0					
ANR	881761	Identifier	initialize		881755	0					
ANR	881762	ArgumentList			881755	1					
ANR	881763	Identifier	Condor_Diffie_Hellman :: Condor_Diffie_Hellman		881755	1					
ANR	881764	ParameterList			881755	2					
ANR	881765	CFGEntryNode	ENTRY		881755		True				
ANR	881766	CFGExitNode	EXIT		881755		True				
ANR	881767	Function	Condor_Diffie_Hellman :: ~Condor_Diffie_Hellman	41:0:1170:1332							
ANR	881768	FunctionDef	Condor_Diffie_Hellman :: ~Condor_Diffie_Hellman ()		881767	0					
ANR	881769	CompoundStatement		42:0:1220:1332	881767	0					
ANR	881770	IfStatement	if ( dh_ )		881767	0					
ANR	881771	Condition	dh_	43:8:1230:1232	881767	0	True				
ANR	881772	Identifier	dh_		881767	0					
ANR	881773	CompoundStatement		2:13:14:14	881767	1					
ANR	881774	ExpressionStatement	DH_free ( dh_ )	44:8:1245:1257	881767	0	True				
ANR	881775	CallExpression	DH_free ( dh_ )		881767	0					
ANR	881776	Callee	DH_free		881767	0					
ANR	881777	Identifier	DH_free		881767	0					
ANR	881778	ArgumentList	dh_		881767	1					
ANR	881779	Argument	dh_		881767	0					
ANR	881780	Identifier	dh_		881767	0					
ANR	881781	IfStatement	if ( secret_ )		881767	1					
ANR	881782	Condition	secret_	46:8:1273:1279	881767	0	True				
ANR	881783	Identifier	secret_		881767	0					
ANR	881784	CompoundStatement		5:17:61:61	881767	1					
ANR	881785	ExpressionStatement	free ( secret_ )	47:8:1292:1305	881767	0	True				
ANR	881786	CallExpression	free ( secret_ )		881767	0					
ANR	881787	Callee	free		881767	0					
ANR	881788	Identifier	free		881767	0					
ANR	881789	ArgumentList	secret_		881767	1					
ANR	881790	Argument	secret_		881767	0					
ANR	881791	Identifier	secret_		881767	0					
ANR	881792	ExpressionStatement	keySize_ = 0	49:4:1317:1329	881767	2	True				
ANR	881793	AssignmentExpression	keySize_ = 0		881767	0		=			
ANR	881794	Identifier	keySize_		881767	0					
ANR	881795	PrimaryExpression	0		881767	1					
ANR	881796	Identifier	Condor_Diffie_Hellman :: ~Condor_Diffie_Hellman		881767	1					
ANR	881797	ParameterList			881767	2					
ANR	881798	CFGEntryNode	ENTRY		881767		True				
ANR	881799	CFGExitNode	EXIT		881767		True				
ANR	881800	Symbol	secret_		881767						
ANR	881801	Symbol	dh_		881767						
ANR	881802	Symbol	keySize_		881767						
ANR	881803	Function	Condor_Diffie_Hellman :: compute_shared_secret	53:0:1335:2402							
ANR	881804	FunctionDef	Condor_Diffie_Hellman :: compute_shared_secret (const char * pk)		881803	0					
ANR	881805	CompoundStatement		54:0:1403:2402	881803	0					
ANR	881806	IdentifierDeclStatement	BIGNUM * remote_pubKey = NULL ;	60:4:1636:1665	881803	0	True				
ANR	881807	IdentifierDecl	* remote_pubKey = NULL		881803	0					
ANR	881808	IdentifierDeclType	BIGNUM *		881803	0					
ANR	881809	Identifier	remote_pubKey		881803	1					
ANR	881810	AssignmentExpression	* remote_pubKey = NULL		881803	2		=			
ANR	881811	Identifier	NULL		881803	0					
ANR	881812	Identifier	NULL		881803	1					
ANR	881813	IfStatement	"if ( BN_hex2bn ( & remote_pubKey , pk ) == 0 )"		881803	1					
ANR	881814	Condition	"BN_hex2bn ( & remote_pubKey , pk ) == 0"	62:8:1676:1709	881803	0	True				
ANR	881815	EqualityExpression	"BN_hex2bn ( & remote_pubKey , pk ) == 0"		881803	0		==			
ANR	881816	CallExpression	"BN_hex2bn ( & remote_pubKey , pk )"		881803	0					
ANR	881817	Callee	BN_hex2bn		881803	0					
ANR	881818	Identifier	BN_hex2bn		881803	0					
ANR	881819	ArgumentList	& remote_pubKey		881803	1					
ANR	881820	Argument	& remote_pubKey		881803	0					
ANR	881821	UnaryOperationExpression	& remote_pubKey		881803	0					
ANR	881822	UnaryOperator	&		881803	0					
ANR	881823	Identifier	remote_pubKey		881803	1					
ANR	881824	Argument	pk		881803	1					
ANR	881825	Identifier	pk		881803	0					
ANR	881826	PrimaryExpression	0		881803	1					
ANR	881827	CompoundStatement		9:44:308:308	881803	1					
ANR	881828	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to obtain remote public key\\n"" )"	63:8:1722:1779	881803	0	True				
ANR	881829	CallExpression	"dprintf ( D_ALWAYS , ""Unable to obtain remote public key\\n"" )"		881803	0					
ANR	881830	Callee	dprintf		881803	0					
ANR	881831	Identifier	dprintf		881803	0					
ANR	881832	ArgumentList	D_ALWAYS		881803	1					
ANR	881833	Argument	D_ALWAYS		881803	0					
ANR	881834	Identifier	D_ALWAYS		881803	0					
ANR	881835	Argument	"""Unable to obtain remote public key\\n"""		881803	1					
ANR	881836	PrimaryExpression	"""Unable to obtain remote public key\\n"""		881803	0					
ANR	881837	GotoStatement	goto error ;	64:8:1789:1799	881803	1	True				
ANR	881838	Identifier	error		881803	0					
ANR	881839	IfStatement	if ( ( dh_ != NULL ) && ( remote_pubKey != NULL ) )		881803	2					
ANR	881840	Condition	( dh_ != NULL ) && ( remote_pubKey != NULL )	67:8:1816:1855	881803	0	True				
ANR	881841	AndExpression	( dh_ != NULL ) && ( remote_pubKey != NULL )		881803	0		&&			
ANR	881842	EqualityExpression	dh_ != NULL		881803	0		!=			
ANR	881843	Identifier	dh_		881803	0					
ANR	881844	Identifier	NULL		881803	1					
ANR	881845	EqualityExpression	remote_pubKey != NULL		881803	1		!=			
ANR	881846	Identifier	remote_pubKey		881803	0					
ANR	881847	Identifier	NULL		881803	1					
ANR	881848	CompoundStatement		14:50:454:454	881803	1					
ANR	881849	ExpressionStatement	secret_ = ( unsigned char * ) malloc ( DH_size ( dh_ ) )	69:8:1869:1917	881803	0	True				
ANR	881850	AssignmentExpression	secret_ = ( unsigned char * ) malloc ( DH_size ( dh_ ) )		881803	0		=			
ANR	881851	Identifier	secret_		881803	0					
ANR	881852	CastExpression	( unsigned char * ) malloc ( DH_size ( dh_ ) )		881803	1					
ANR	881853	CastTarget	unsigned char *		881803	0					
ANR	881854	CallExpression	malloc ( DH_size ( dh_ ) )		881803	1					
ANR	881855	Callee	malloc		881803	0					
ANR	881856	Identifier	malloc		881803	0					
ANR	881857	ArgumentList	DH_size ( dh_ )		881803	1					
ANR	881858	Argument	DH_size ( dh_ )		881803	0					
ANR	881859	CallExpression	DH_size ( dh_ )		881803	0					
ANR	881860	Callee	DH_size		881803	0					
ANR	881861	Identifier	DH_size		881803	0					
ANR	881862	ArgumentList	dh_		881803	1					
ANR	881863	Argument	dh_		881803	0					
ANR	881864	Identifier	dh_		881803	0					
ANR	881865	ExpressionStatement	"keySize_ = DH_compute_key ( secret_ , remote_pubKey , dh_ )"	72:8:1951:2005	881803	1	True				
ANR	881866	AssignmentExpression	"keySize_ = DH_compute_key ( secret_ , remote_pubKey , dh_ )"		881803	0		=			
ANR	881867	Identifier	keySize_		881803	0					
ANR	881868	CallExpression	"DH_compute_key ( secret_ , remote_pubKey , dh_ )"		881803	1					
ANR	881869	Callee	DH_compute_key		881803	0					
ANR	881870	Identifier	DH_compute_key		881803	0					
ANR	881871	ArgumentList	secret_		881803	1					
ANR	881872	Argument	secret_		881803	0					
ANR	881873	Identifier	secret_		881803	0					
ANR	881874	Argument	remote_pubKey		881803	1					
ANR	881875	Identifier	remote_pubKey		881803	0					
ANR	881876	Argument	dh_		881803	2					
ANR	881877	Identifier	dh_		881803	0					
ANR	881878	ExpressionStatement	BN_clear_free ( remote_pubKey )	73:8:2015:2043	881803	2	True				
ANR	881879	CallExpression	BN_clear_free ( remote_pubKey )		881803	0					
ANR	881880	Callee	BN_clear_free		881803	0					
ANR	881881	Identifier	BN_clear_free		881803	0					
ANR	881882	ArgumentList	remote_pubKey		881803	1					
ANR	881883	Argument	remote_pubKey		881803	0					
ANR	881884	Identifier	remote_pubKey		881803	0					
ANR	881885	IfStatement	if ( keySize_ == - 1 )		881803	3					
ANR	881886	Condition	keySize_ == - 1	75:12:2058:2071	881803	0	True				
ANR	881887	EqualityExpression	keySize_ == - 1		881803	0		==			
ANR	881888	Identifier	keySize_		881803	0					
ANR	881889	UnaryOperationExpression	- 1		881803	1					
ANR	881890	UnaryOperator	-		881803	0					
ANR	881891	PrimaryExpression	1		881803	1					
ANR	881892	CompoundStatement		22:28:670:670	881803	1					
ANR	881893	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to compute shared secret\\n"" )"	76:12:2088:2142	881803	0	True				
ANR	881894	CallExpression	"dprintf ( D_ALWAYS , ""Unable to compute shared secret\\n"" )"		881803	0					
ANR	881895	Callee	dprintf		881803	0					
ANR	881896	Identifier	dprintf		881803	0					
ANR	881897	ArgumentList	D_ALWAYS		881803	1					
ANR	881898	Argument	D_ALWAYS		881803	0					
ANR	881899	Identifier	D_ALWAYS		881803	0					
ANR	881900	Argument	"""Unable to compute shared secret\\n"""		881803	1					
ANR	881901	PrimaryExpression	"""Unable to compute shared secret\\n"""		881803	0					
ANR	881902	GotoStatement	goto error ;	77:12:2156:2166	881803	1	True				
ANR	881903	Identifier	error		881803	0					
ANR	881904	ElseStatement	else		881803	0					
ANR	881905	CompoundStatement		27:9:792:792	881803	0					
ANR	881906	GotoStatement	goto error ;	81:8:2206:2216	881803	0	True				
ANR	881907	Identifier	error		881803	0					
ANR	881908	ReturnStatement	return 1 ;	83:4:2228:2236	881803	3	True				
ANR	881909	PrimaryExpression	1		881803	0					
ANR	881910	Label	error :	85:1:2240:2245	881803	4	True				
ANR	881911	Identifier	error		881803	0					
ANR	881912	IfStatement	if ( remote_pubKey )		881803	5					
ANR	881913	Condition	remote_pubKey	86:8:2255:2267	881803	0	True				
ANR	881914	Identifier	remote_pubKey		881803	0					
ANR	881915	CompoundStatement		33:23:866:866	881803	1					
ANR	881916	ExpressionStatement	BN_clear_free ( remote_pubKey )	87:8:2280:2308	881803	0	True				
ANR	881917	CallExpression	BN_clear_free ( remote_pubKey )		881803	0					
ANR	881918	Callee	BN_clear_free		881803	0					
ANR	881919	Identifier	BN_clear_free		881803	0					
ANR	881920	ArgumentList	remote_pubKey		881803	1					
ANR	881921	Argument	remote_pubKey		881803	0					
ANR	881922	Identifier	remote_pubKey		881803	0					
ANR	881923	IfStatement	if ( secret_ )		881803	6					
ANR	881924	Condition	secret_	89:8:2324:2330	881803	0	True				
ANR	881925	Identifier	secret_		881803	0					
ANR	881926	CompoundStatement		36:17:929:929	881803	1					
ANR	881927	ExpressionStatement	free ( secret_ )	90:8:2343:2356	881803	0	True				
ANR	881928	CallExpression	free ( secret_ )		881803	0					
ANR	881929	Callee	free		881803	0					
ANR	881930	Identifier	free		881803	0					
ANR	881931	ArgumentList	secret_		881803	1					
ANR	881932	Argument	secret_		881803	0					
ANR	881933	Identifier	secret_		881803	0					
ANR	881934	ExpressionStatement	secret_ = NULL	91:8:2366:2380	881803	1	True				
ANR	881935	AssignmentExpression	secret_ = NULL		881803	0		=			
ANR	881936	Identifier	secret_		881803	0					
ANR	881937	Identifier	NULL		881803	1					
ANR	881938	ReturnStatement	return 0 ;	93:4:2392:2400	881803	7	True				
ANR	881939	PrimaryExpression	0		881803	0					
ANR	881940	ReturnType	int		881803	1					
ANR	881941	Identifier	Condor_Diffie_Hellman :: compute_shared_secret		881803	2					
ANR	881942	ParameterList	const char * pk		881803	3					
ANR	881943	Parameter	const char * pk	53:51:1386:1400	881803	0	True				
ANR	881944	ParameterType	const char *		881803	0					
ANR	881945	Identifier	pk		881803	1					
ANR	881946	CFGEntryNode	ENTRY		881803		True				
ANR	881947	CFGExitNode	EXIT		881803		True				
ANR	881948	Symbol	malloc		881803						
ANR	881949	Symbol	secret_		881803						
ANR	881950	Symbol	NULL		881803						
ANR	881951	Symbol	remote_pubKey		881803						
ANR	881952	Symbol	BN_hex2bn		881803						
ANR	881953	Symbol	D_ALWAYS		881803						
ANR	881954	Symbol	& remote_pubKey		881803						
ANR	881955	Symbol	DH_size		881803						
ANR	881956	Symbol	dh_		881803						
ANR	881957	Symbol	pk		881803						
ANR	881958	Symbol	DH_compute_key		881803						
ANR	881959	Symbol	keySize_		881803						
ANR	881960	Function	Condor_Diffie_Hellman :: getPublicKeyChar	96:0:2409:2645							
ANR	881961	FunctionDef	Condor_Diffie_Hellman :: getPublicKeyChar ()		881960	0					
ANR	881962	CompoundStatement		97:0:2460:2645	881960	0					
ANR	881963	IfStatement	if ( dh_ && dh_ -> pub_key )		881960	0					
ANR	881964	Condition	dh_ && dh_ -> pub_key	99:8:2538:2556	881960	0	True				
ANR	881965	AndExpression	dh_ && dh_ -> pub_key		881960	0		&&			
ANR	881966	Identifier	dh_		881960	0					
ANR	881967	PtrMemberAccess	dh_ -> pub_key		881960	1					
ANR	881968	Identifier	dh_		881960	0					
ANR	881969	Identifier	pub_key		881960	1					
ANR	881970	CompoundStatement		3:29:98:98	881960	1					
ANR	881971	ReturnStatement	return BN_bn2hex ( dh_ -> pub_key ) ;	100:8:2569:2599	881960	0	True				
ANR	881972	CallExpression	BN_bn2hex ( dh_ -> pub_key )		881960	0					
ANR	881973	Callee	BN_bn2hex		881960	0					
ANR	881974	Identifier	BN_bn2hex		881960	0					
ANR	881975	ArgumentList	dh_ -> pub_key		881960	1					
ANR	881976	Argument	dh_ -> pub_key		881960	0					
ANR	881977	PtrMemberAccess	dh_ -> pub_key		881960	0					
ANR	881978	Identifier	dh_		881960	0					
ANR	881979	Identifier	pub_key		881960	1					
ANR	881980	ElseStatement	else		881960	0					
ANR	881981	CompoundStatement		6:9:155:155	881960	0					
ANR	881982	ReturnStatement	return NULL ;	103:8:2626:2637	881960	0	True				
ANR	881983	Identifier	NULL		881960	0					
ANR	881984	ReturnType	char *		881960	1					
ANR	881985	Identifier	Condor_Diffie_Hellman :: getPublicKeyChar		881960	2					
ANR	881986	ParameterList			881960	3					
ANR	881987	CFGEntryNode	ENTRY		881960		True				
ANR	881988	CFGExitNode	EXIT		881960		True				
ANR	881989	Symbol	NULL		881960						
ANR	881990	Symbol	dh_ -> pub_key		881960						
ANR	881991	Symbol	BN_bn2hex		881960						
ANR	881992	Symbol	* dh_		881960						
ANR	881993	Symbol	dh_		881960						
ANR	881994	Function	Condor_Diffie_Hellman :: getPrime	107:0:2648:2772							
ANR	881995	FunctionDef	Condor_Diffie_Hellman :: getPrime ()		881994	0					
ANR	881996	CompoundStatement		108:0:2691:2772	881994	0					
ANR	881997	IfStatement	if ( dh_ )		881994	0					
ANR	881998	Condition	dh_	109:8:2701:2703	881994	0	True				
ANR	881999	Identifier	dh_		881994	0					
ANR	882000	CompoundStatement		2:13:14:14	881994	1					
ANR	882001	ReturnStatement	return dh_ -> p ;	110:8:2716:2729	881994	0	True				
ANR	882002	PtrMemberAccess	dh_ -> p		881994	0					
ANR	882003	Identifier	dh_		881994	0					
ANR	882004	Identifier	p		881994	1					
ANR	882005	ElseStatement	else		881994	0					
ANR	882006	CompoundStatement		5:9:54:54	881994	0					
ANR	882007	ReturnStatement	return 0 ;	113:8:2756:2764	881994	0	True				
ANR	882008	PrimaryExpression	0		881994	0					
ANR	882009	ReturnType	BIGNUM *		881994	1					
ANR	882010	Identifier	Condor_Diffie_Hellman :: getPrime		881994	2					
ANR	882011	ParameterList			881994	3					
ANR	882012	CFGEntryNode	ENTRY		881994		True				
ANR	882013	CFGExitNode	EXIT		881994		True				
ANR	882014	Symbol	dh_ -> p		881994						
ANR	882015	Symbol	dh_		881994						
ANR	882016	Symbol	* dh_		881994						
ANR	882017	Function	Condor_Diffie_Hellman :: getPrimeChar	117:0:2775:2927							
ANR	882018	FunctionDef	Condor_Diffie_Hellman :: getPrimeChar ()		882017	0					
ANR	882019	CompoundStatement		118:0:2822:2927	882017	0					
ANR	882020	IfStatement	if ( dh_ && dh_ -> p )		882017	0					
ANR	882021	Condition	dh_ && dh_ -> p	119:8:2832:2844	882017	0	True				
ANR	882022	AndExpression	dh_ && dh_ -> p		882017	0		&&			
ANR	882023	Identifier	dh_		882017	0					
ANR	882024	PtrMemberAccess	dh_ -> p		882017	1					
ANR	882025	Identifier	dh_		882017	0					
ANR	882026	Identifier	p		882017	1					
ANR	882027	CompoundStatement		2:23:24:24	882017	1					
ANR	882028	ReturnStatement	return BN_bn2hex ( dh_ -> p ) ;	120:8:2857:2881	882017	0	True				
ANR	882029	CallExpression	BN_bn2hex ( dh_ -> p )		882017	0					
ANR	882030	Callee	BN_bn2hex		882017	0					
ANR	882031	Identifier	BN_bn2hex		882017	0					
ANR	882032	ArgumentList	dh_ -> p		882017	1					
ANR	882033	Argument	dh_ -> p		882017	0					
ANR	882034	PtrMemberAccess	dh_ -> p		882017	0					
ANR	882035	Identifier	dh_		882017	0					
ANR	882036	Identifier	p		882017	1					
ANR	882037	ElseStatement	else		882017	0					
ANR	882038	CompoundStatement		5:9:75:75	882017	0					
ANR	882039	ReturnStatement	return NULL ;	123:8:2908:2919	882017	0	True				
ANR	882040	Identifier	NULL		882017	0					
ANR	882041	ReturnType	char *		882017	1					
ANR	882042	Identifier	Condor_Diffie_Hellman :: getPrimeChar		882017	2					
ANR	882043	ParameterList			882017	3					
ANR	882044	CFGEntryNode	ENTRY		882017		True				
ANR	882045	CFGExitNode	EXIT		882017		True				
ANR	882046	Symbol	NULL		882017						
ANR	882047	Symbol	dh_ -> p		882017						
ANR	882048	Symbol	BN_bn2hex		882017						
ANR	882049	Symbol	* dh_		882017						
ANR	882050	Symbol	dh_		882017						
ANR	882051	Function	Condor_Diffie_Hellman :: getGenerator	127:0:2930:3060							
ANR	882052	FunctionDef	Condor_Diffie_Hellman :: getGenerator ()		882051	0					
ANR	882053	CompoundStatement		128:0:2979:3060	882051	0					
ANR	882054	IfStatement	if ( dh_ )		882051	0					
ANR	882055	Condition	dh_	129:8:2989:2991	882051	0	True				
ANR	882056	Identifier	dh_		882051	0					
ANR	882057	CompoundStatement		2:13:14:14	882051	1					
ANR	882058	ReturnStatement	return dh_ -> g ;	130:8:3004:3017	882051	0	True				
ANR	882059	PtrMemberAccess	dh_ -> g		882051	0					
ANR	882060	Identifier	dh_		882051	0					
ANR	882061	Identifier	g		882051	1					
ANR	882062	ElseStatement	else		882051	0					
ANR	882063	CompoundStatement		5:9:54:54	882051	0					
ANR	882064	ReturnStatement	return 0 ;	133:8:3044:3052	882051	0	True				
ANR	882065	PrimaryExpression	0		882051	0					
ANR	882066	ReturnType	BIGNUM *		882051	1					
ANR	882067	Identifier	Condor_Diffie_Hellman :: getGenerator		882051	2					
ANR	882068	ParameterList			882051	3					
ANR	882069	CFGEntryNode	ENTRY		882051		True				
ANR	882070	CFGExitNode	EXIT		882051		True				
ANR	882071	Symbol	dh_		882051						
ANR	882072	Symbol	* dh_		882051						
ANR	882073	Symbol	dh_ -> g		882051						
ANR	882074	Function	Condor_Diffie_Hellman :: getGeneratorChar	137:0:3063:3219							
ANR	882075	FunctionDef	Condor_Diffie_Hellman :: getGeneratorChar ()		882074	0					
ANR	882076	CompoundStatement		138:0:3114:3219	882074	0					
ANR	882077	IfStatement	if ( dh_ && dh_ -> g )		882074	0					
ANR	882078	Condition	dh_ && dh_ -> g	139:8:3124:3136	882074	0	True				
ANR	882079	AndExpression	dh_ && dh_ -> g		882074	0		&&			
ANR	882080	Identifier	dh_		882074	0					
ANR	882081	PtrMemberAccess	dh_ -> g		882074	1					
ANR	882082	Identifier	dh_		882074	0					
ANR	882083	Identifier	g		882074	1					
ANR	882084	CompoundStatement		2:23:24:24	882074	1					
ANR	882085	ReturnStatement	return BN_bn2hex ( dh_ -> g ) ;	140:8:3149:3173	882074	0	True				
ANR	882086	CallExpression	BN_bn2hex ( dh_ -> g )		882074	0					
ANR	882087	Callee	BN_bn2hex		882074	0					
ANR	882088	Identifier	BN_bn2hex		882074	0					
ANR	882089	ArgumentList	dh_ -> g		882074	1					
ANR	882090	Argument	dh_ -> g		882074	0					
ANR	882091	PtrMemberAccess	dh_ -> g		882074	0					
ANR	882092	Identifier	dh_		882074	0					
ANR	882093	Identifier	g		882074	1					
ANR	882094	ElseStatement	else		882074	0					
ANR	882095	CompoundStatement		5:9:75:75	882074	0					
ANR	882096	ReturnStatement	return NULL ;	143:8:3200:3211	882074	0	True				
ANR	882097	Identifier	NULL		882074	0					
ANR	882098	ReturnType	char *		882074	1					
ANR	882099	Identifier	Condor_Diffie_Hellman :: getGeneratorChar		882074	2					
ANR	882100	ParameterList			882074	3					
ANR	882101	CFGEntryNode	ENTRY		882074		True				
ANR	882102	CFGExitNode	EXIT		882074		True				
ANR	882103	Symbol	NULL		882074						
ANR	882104	Symbol	BN_bn2hex		882074						
ANR	882105	Symbol	* dh_		882074						
ANR	882106	Symbol	dh_		882074						
ANR	882107	Symbol	dh_ -> g		882074						
ANR	882108	Function	Condor_Diffie_Hellman :: getSecret	147:0:3222:3309							
ANR	882109	FunctionDef	Condor_Diffie_Hellman :: getSecret ()		882108	0					
ANR	882110	CompoundStatement		148:0:3287:3309	882108	0					
ANR	882111	ReturnStatement	return secret_ ;	149:4:3293:3307	882108	0	True				
ANR	882112	Identifier	secret_		882108	0					
ANR	882113	ReturnType	const unsigned char *		882108	1					
ANR	882114	Identifier	Condor_Diffie_Hellman :: getSecret		882108	2					
ANR	882115	ParameterList			882108	3					
ANR	882116	CFGEntryNode	ENTRY		882108		True				
ANR	882117	CFGExitNode	EXIT		882108		True				
ANR	882118	Symbol	secret_		882108						
ANR	882119	Function	Condor_Diffie_Hellman :: getSecretSize	152:0:3312:3386							
ANR	882120	FunctionDef	Condor_Diffie_Hellman :: getSecretSize ()		882119	0					
ANR	882121	CompoundStatement		153:0:3363:3386	882119	0					
ANR	882122	ReturnStatement	return keySize_ ;	154:4:3369:3384	882119	0	True				
ANR	882123	Identifier	keySize_		882119	0					
ANR	882124	ReturnType	int		882119	1					
ANR	882125	Identifier	Condor_Diffie_Hellman :: getSecretSize		882119	2					
ANR	882126	ParameterList			882119	3					
ANR	882127	CFGEntryNode	ENTRY		882119		True				
ANR	882128	CFGExitNode	EXIT		882119		True				
ANR	882129	Symbol	keySize_		882119						
ANR	882130	Function	Condor_Diffie_Hellman :: initialize	157:0:3389:4624							
ANR	882131	FunctionDef	Condor_Diffie_Hellman :: initialize ()		882130	0					
ANR	882132	CompoundStatement		158:0:3431:4624	882130	0					
ANR	882133	ExpressionStatement	config ( )	161:4:3534:3542	882130	0	True				
ANR	882134	CallExpression	config ( )		882130	0					
ANR	882135	Callee	config		882130	0					
ANR	882136	Identifier	config		882130	0					
ANR	882137	ArgumentList			882130	1					
ANR	882138	IdentifierDeclStatement	char * dh_config = param ( DH_CONFIG_FILE ) ;	162:4:3548:3588	882130	1	True				
ANR	882139	IdentifierDecl	* dh_config = param ( DH_CONFIG_FILE )		882130	0					
ANR	882140	IdentifierDeclType	char *		882130	0					
ANR	882141	Identifier	dh_config		882130	1					
ANR	882142	AssignmentExpression	* dh_config = param ( DH_CONFIG_FILE )		882130	2		=			
ANR	882143	Identifier	dh_config		882130	0					
ANR	882144	CallExpression	param ( DH_CONFIG_FILE )		882130	1					
ANR	882145	Callee	param		882130	0					
ANR	882146	Identifier	param		882130	0					
ANR	882147	ArgumentList	DH_CONFIG_FILE		882130	1					
ANR	882148	Argument	DH_CONFIG_FILE		882130	0					
ANR	882149	Identifier	DH_CONFIG_FILE		882130	0					
ANR	882150	IdentifierDeclStatement	FILE * fp = 0 ;	164:4:3595:3608	882130	2	True				
ANR	882151	IdentifierDecl	* fp = 0		882130	0					
ANR	882152	IdentifierDeclType	FILE *		882130	0					
ANR	882153	Identifier	fp		882130	1					
ANR	882154	AssignmentExpression	* fp = 0		882130	2		=			
ANR	882155	Identifier	fp		882130	0					
ANR	882156	PrimaryExpression	0		882130	1					
ANR	882157	IfStatement	if ( dh_config )		882130	3					
ANR	882158	Condition	dh_config	165:9:3619:3627	882130	0	True				
ANR	882159	Identifier	dh_config		882130	0					
ANR	882160	CompoundStatement		8:21:199:199	882130	1					
ANR	882161	IfStatement	"if ( ( fp = safe_fopen_wrapper_follow ( dh_config , ""r"" ) ) == NULL )"		882130	0					
ANR	882162	Condition	"( fp = safe_fopen_wrapper_follow ( dh_config , ""r"" ) ) == NULL"	166:13:3646:3701	882130	0	True				
ANR	882163	EqualityExpression	"( fp = safe_fopen_wrapper_follow ( dh_config , ""r"" ) ) == NULL"		882130	0		==			
ANR	882164	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( dh_config , ""r"" )"		882130	0		=			
ANR	882165	Identifier	fp		882130	0					
ANR	882166	CallExpression	"safe_fopen_wrapper_follow ( dh_config , ""r"" )"		882130	1					
ANR	882167	Callee	safe_fopen_wrapper_follow		882130	0					
ANR	882168	Identifier	safe_fopen_wrapper_follow		882130	0					
ANR	882169	ArgumentList	dh_config		882130	1					
ANR	882170	Argument	dh_config		882130	0					
ANR	882171	Identifier	dh_config		882130	0					
ANR	882172	Argument	"""r"""		882130	1					
ANR	882173	PrimaryExpression	"""r"""		882130	0					
ANR	882174	Identifier	NULL		882130	1					
ANR	882175	CompoundStatement		9:71:272:272	882130	1					
ANR	882176	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to open condor_dh_config file %s\\n"" , dh_config )"	167:12:3718:3791	882130	0	True				
ANR	882177	CallExpression	"dprintf ( D_ALWAYS , ""Unable to open condor_dh_config file %s\\n"" , dh_config )"		882130	0					
ANR	882178	Callee	dprintf		882130	0					
ANR	882179	Identifier	dprintf		882130	0					
ANR	882180	ArgumentList	D_ALWAYS		882130	1					
ANR	882181	Argument	D_ALWAYS		882130	0					
ANR	882182	Identifier	D_ALWAYS		882130	0					
ANR	882183	Argument	"""Unable to open condor_dh_config file %s\\n"""		882130	1					
ANR	882184	PrimaryExpression	"""Unable to open condor_dh_config file %s\\n"""		882130	0					
ANR	882185	Argument	dh_config		882130	2					
ANR	882186	Identifier	dh_config		882130	0					
ANR	882187	GotoStatement	goto error ;	168:12:3805:3815	882130	1	True				
ANR	882188	Identifier	error		882130	0					
ANR	882189	ExpressionStatement	"dh_ = PEM_read_DHparams ( fp , NULL , NULL , NULL )"	171:8:3836:3881	882130	1	True				
ANR	882190	AssignmentExpression	"dh_ = PEM_read_DHparams ( fp , NULL , NULL , NULL )"		882130	0		=			
ANR	882191	Identifier	dh_		882130	0					
ANR	882192	CallExpression	"PEM_read_DHparams ( fp , NULL , NULL , NULL )"		882130	1					
ANR	882193	Callee	PEM_read_DHparams		882130	0					
ANR	882194	Identifier	PEM_read_DHparams		882130	0					
ANR	882195	ArgumentList	fp		882130	1					
ANR	882196	Argument	fp		882130	0					
ANR	882197	Identifier	fp		882130	0					
ANR	882198	Argument	NULL		882130	1					
ANR	882199	Identifier	NULL		882130	0					
ANR	882200	Argument	NULL		882130	2					
ANR	882201	Identifier	NULL		882130	0					
ANR	882202	Argument	NULL		882130	3					
ANR	882203	Identifier	NULL		882130	0					
ANR	882204	IfStatement	if ( dh_ == NULL )		882130	2					
ANR	882205	Condition	dh_ == NULL	172:12:3895:3905	882130	0	True				
ANR	882206	EqualityExpression	dh_ == NULL		882130	0		==			
ANR	882207	Identifier	dh_		882130	0					
ANR	882208	Identifier	NULL		882130	1					
ANR	882209	CompoundStatement		15:25:476:476	882130	1					
ANR	882210	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to read DH structure from the configuration file.\\n"" )"	173:12:3922:4001	882130	0	True				
ANR	882211	CallExpression	"dprintf ( D_ALWAYS , ""Unable to read DH structure from the configuration file.\\n"" )"		882130	0					
ANR	882212	Callee	dprintf		882130	0					
ANR	882213	Identifier	dprintf		882130	0					
ANR	882214	ArgumentList	D_ALWAYS		882130	1					
ANR	882215	Argument	D_ALWAYS		882130	0					
ANR	882216	Identifier	D_ALWAYS		882130	0					
ANR	882217	Argument	"""Unable to read DH structure from the configuration file.\\n"""		882130	1					
ANR	882218	PrimaryExpression	"""Unable to read DH structure from the configuration file.\\n"""		882130	0					
ANR	882219	GotoStatement	goto error ;	174:12:4015:4025	882130	1	True				
ANR	882220	Identifier	error		882130	0					
ANR	882221	IfStatement	if ( DH_generate_key ( dh_ ) == 0 )		882130	3					
ANR	882222	Condition	DH_generate_key ( dh_ ) == 0	178:12:4086:4110	882130	0	True				
ANR	882223	EqualityExpression	DH_generate_key ( dh_ ) == 0		882130	0		==			
ANR	882224	CallExpression	DH_generate_key ( dh_ )		882130	0					
ANR	882225	Callee	DH_generate_key		882130	0					
ANR	882226	Identifier	DH_generate_key		882130	0					
ANR	882227	ArgumentList	dh_		882130	1					
ANR	882228	Argument	dh_		882130	0					
ANR	882229	Identifier	dh_		882130	0					
ANR	882230	PrimaryExpression	0		882130	1					
ANR	882231	CompoundStatement		21:39:681:681	882130	1					
ANR	882232	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to generate a private key \\n"" )"	179:12:4127:4183	882130	0	True				
ANR	882233	CallExpression	"dprintf ( D_ALWAYS , ""Unable to generate a private key \\n"" )"		882130	0					
ANR	882234	Callee	dprintf		882130	0					
ANR	882235	Identifier	dprintf		882130	0					
ANR	882236	ArgumentList	D_ALWAYS		882130	1					
ANR	882237	Argument	D_ALWAYS		882130	0					
ANR	882238	Identifier	D_ALWAYS		882130	0					
ANR	882239	Argument	"""Unable to generate a private key \\n"""		882130	1					
ANR	882240	PrimaryExpression	"""Unable to generate a private key \\n"""		882130	0					
ANR	882241	GotoStatement	goto error ;	180:12:4197:4207	882130	1	True				
ANR	882242	Identifier	error		882130	0					
ANR	882243	ElseStatement	else		882130	0					
ANR	882244	CompoundStatement		26:9:802:802	882130	0					
ANR	882245	ExpressionStatement	"dprintf ( D_ALWAYS , ""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"" )"	184:8:4244:4371	882130	0	True				
ANR	882246	CallExpression	"dprintf ( D_ALWAYS , ""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"" )"		882130	0					
ANR	882247	Callee	dprintf		882130	0					
ANR	882248	Identifier	dprintf		882130	0					
ANR	882249	ArgumentList	D_ALWAYS		882130	1					
ANR	882250	Argument	D_ALWAYS		882130	0					
ANR	882251	Identifier	D_ALWAYS		882130	0					
ANR	882252	Argument	"""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"""		882130	1					
ANR	882253	PrimaryExpression	"""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"""		882130	0					
ANR	882254	GotoStatement	goto error ;	185:8:4381:4391	882130	1	True				
ANR	882255	Identifier	error		882130	0					
ANR	882256	ExpressionStatement	fclose ( fp )	187:4:4403:4413	882130	4	True				
ANR	882257	CallExpression	fclose ( fp )		882130	0					
ANR	882258	Callee	fclose		882130	0					
ANR	882259	Identifier	fclose		882130	0					
ANR	882260	ArgumentList	fp		882130	1					
ANR	882261	Argument	fp		882130	0					
ANR	882262	Identifier	fp		882130	0					
ANR	882263	ExpressionStatement	free ( dh_config )	188:4:4419:4434	882130	5	True				
ANR	882264	CallExpression	free ( dh_config )		882130	0					
ANR	882265	Callee	free		882130	0					
ANR	882266	Identifier	free		882130	0					
ANR	882267	ArgumentList	dh_config		882130	1					
ANR	882268	Argument	dh_config		882130	0					
ANR	882269	Identifier	dh_config		882130	0					
ANR	882270	ReturnStatement	return 1 ;	189:4:4440:4448	882130	6	True				
ANR	882271	PrimaryExpression	1		882130	0					
ANR	882272	Label	error :	190:1:4451:4456	882130	7	True				
ANR	882273	Identifier	error		882130	0					
ANR	882274	IfStatement	if ( dh_ )		882130	8					
ANR	882275	Condition	dh_	191:8:4466:4468	882130	0	True				
ANR	882276	Identifier	dh_		882130	0					
ANR	882277	CompoundStatement		34:13:1039:1039	882130	1					
ANR	882278	ExpressionStatement	DH_free ( dh_ )	192:8:4481:4493	882130	0	True				
ANR	882279	CallExpression	DH_free ( dh_ )		882130	0					
ANR	882280	Callee	DH_free		882130	0					
ANR	882281	Identifier	DH_free		882130	0					
ANR	882282	ArgumentList	dh_		882130	1					
ANR	882283	Argument	dh_		882130	0					
ANR	882284	Identifier	dh_		882130	0					
ANR	882285	ExpressionStatement	dh_ = 0	193:8:4503:4510	882130	1	True				
ANR	882286	AssignmentExpression	dh_ = 0		882130	0		=			
ANR	882287	Identifier	dh_		882130	0					
ANR	882288	PrimaryExpression	0		882130	1					
ANR	882289	IfStatement	if ( dh_config )		882130	9					
ANR	882290	Condition	dh_config	195:8:4526:4534	882130	0	True				
ANR	882291	Identifier	dh_config		882130	0					
ANR	882292	CompoundStatement		38:19:1105:1105	882130	1					
ANR	882293	ExpressionStatement	free ( dh_config )	196:8:4547:4562	882130	0	True				
ANR	882294	CallExpression	free ( dh_config )		882130	0					
ANR	882295	Callee	free		882130	0					
ANR	882296	Identifier	free		882130	0					
ANR	882297	ArgumentList	dh_config		882130	1					
ANR	882298	Argument	dh_config		882130	0					
ANR	882299	Identifier	dh_config		882130	0					
ANR	882300	IfStatement	if ( fp )		882130	10					
ANR	882301	Condition	fp	198:8:4578:4579	882130	0	True				
ANR	882302	Identifier	fp		882130	0					
ANR	882303	CompoundStatement		41:12:1150:1150	882130	1					
ANR	882304	ExpressionStatement	fclose ( fp )	199:8:4592:4602	882130	0	True				
ANR	882305	CallExpression	fclose ( fp )		882130	0					
ANR	882306	Callee	fclose		882130	0					
ANR	882307	Identifier	fclose		882130	0					
ANR	882308	ArgumentList	fp		882130	1					
ANR	882309	Argument	fp		882130	0					
ANR	882310	Identifier	fp		882130	0					
ANR	882311	ReturnStatement	return 0 ;	201:4:4614:4622	882130	11	True				
ANR	882312	PrimaryExpression	0		882130	0					
ANR	882313	ReturnType	int		882130	1					
ANR	882314	Identifier	Condor_Diffie_Hellman :: initialize		882130	2					
ANR	882315	ParameterList			882130	3					
ANR	882316	CFGEntryNode	ENTRY		882130		True				
ANR	882317	CFGExitNode	EXIT		882130		True				
ANR	882318	Symbol	NULL		882130						
ANR	882319	Symbol	DH_CONFIG_FILE		882130						
ANR	882320	Symbol	param		882130						
ANR	882321	Symbol	PEM_read_DHparams		882130						
ANR	882322	Symbol	dh_config		882130						
ANR	882323	Symbol	D_ALWAYS		882130						
ANR	882324	Symbol	fp		882130						
ANR	882325	Symbol	dh_		882130						
ANR	882326	Symbol	DH_generate_key		882130						
ANR	882327	Symbol	safe_fopen_wrapper_follow		882130						
