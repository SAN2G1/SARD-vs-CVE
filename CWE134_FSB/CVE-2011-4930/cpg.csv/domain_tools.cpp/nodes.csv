command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1266657	File	data/converged/CVE-2011-4930_htcondor/domain_tools.cpp								
ANR	1266658	Function	domainAndNameMatch	26:0:913:1225							
ANR	1266659	FunctionDef	"domainAndNameMatch (const char * account1 , const char * account2 , const char * domain1 , const char * domain2)"		1266658	0					
ANR	1266660	CompoundStatement		31:0:1062:1225	1266658	0					
ANR	1266661	ReturnStatement	"return ( ( strcasecmp ( account1 , account2 ) == 0 ) && ( domain1 == NULL || domain1 [ 0 ] == '\\0' || strcasecmp ( domain1 , domain2 ) == 0 ) ) ;"	33:1:1067:1222	1266658	0	True				
ANR	1266662	AndExpression	"( strcasecmp ( account1 , account2 ) == 0 ) && ( domain1 == NULL || domain1 [ 0 ] == '\\0' || strcasecmp ( domain1 , domain2 ) == 0 )"		1266658	0		&&			
ANR	1266663	EqualityExpression	"strcasecmp ( account1 , account2 ) == 0"		1266658	0		==			
ANR	1266664	CallExpression	"strcasecmp ( account1 , account2 )"		1266658	0					
ANR	1266665	Callee	strcasecmp		1266658	0					
ANR	1266666	Identifier	strcasecmp		1266658	0					
ANR	1266667	ArgumentList	account1		1266658	1					
ANR	1266668	Argument	account1		1266658	0					
ANR	1266669	Identifier	account1		1266658	0					
ANR	1266670	Argument	account2		1266658	1					
ANR	1266671	Identifier	account2		1266658	0					
ANR	1266672	PrimaryExpression	0		1266658	1					
ANR	1266673	OrExpression	"domain1 == NULL || domain1 [ 0 ] == '\\0' || strcasecmp ( domain1 , domain2 ) == 0"		1266658	1		||			
ANR	1266674	EqualityExpression	domain1 == NULL		1266658	0		==			
ANR	1266675	Identifier	domain1		1266658	0					
ANR	1266676	Identifier	NULL		1266658	1					
ANR	1266677	OrExpression	"domain1 [ 0 ] == '\\0' || strcasecmp ( domain1 , domain2 ) == 0"		1266658	1		||			
ANR	1266678	EqualityExpression	domain1 [ 0 ] == '\\0'		1266658	0		==			
ANR	1266679	ArrayIndexing	domain1 [ 0 ]		1266658	0					
ANR	1266680	Identifier	domain1		1266658	0					
ANR	1266681	PrimaryExpression	0		1266658	1					
ANR	1266682	PrimaryExpression	'\\0'		1266658	1					
ANR	1266683	EqualityExpression	"strcasecmp ( domain1 , domain2 ) == 0"		1266658	1		==			
ANR	1266684	CallExpression	"strcasecmp ( domain1 , domain2 )"		1266658	0					
ANR	1266685	Callee	strcasecmp		1266658	0					
ANR	1266686	Identifier	strcasecmp		1266658	0					
ANR	1266687	ArgumentList	domain1		1266658	1					
ANR	1266688	Argument	domain1		1266658	0					
ANR	1266689	Identifier	domain1		1266658	0					
ANR	1266690	Argument	domain2		1266658	1					
ANR	1266691	Identifier	domain2		1266658	0					
ANR	1266692	PrimaryExpression	0		1266658	1					
ANR	1266693	ReturnType	bool		1266658	1					
ANR	1266694	Identifier	domainAndNameMatch		1266658	2					
ANR	1266695	ParameterList	"const char * account1 , const char * account2 , const char * domain1 , const char * domain2"		1266658	3					
ANR	1266696	Parameter	const char * account1	27:20:938:957	1266658	0	True				
ANR	1266697	ParameterType	const char *		1266658	0					
ANR	1266698	Identifier	account1		1266658	1					
ANR	1266699	Parameter	const char * account2	28:20:980:999	1266658	1	True				
ANR	1266700	ParameterType	const char *		1266658	0					
ANR	1266701	Identifier	account2		1266658	1					
ANR	1266702	Parameter	const char * domain1	29:8:1010:1028	1266658	2	True				
ANR	1266703	ParameterType	const char *		1266658	0					
ANR	1266704	Identifier	domain1		1266658	1					
ANR	1266705	Parameter	const char * domain2	30:8:1039:1057	1266658	3	True				
ANR	1266706	ParameterType	const char *		1266658	0					
ANR	1266707	Identifier	domain2		1266658	1					
ANR	1266708	CFGEntryNode	ENTRY		1266658		True				
ANR	1266709	CFGExitNode	EXIT		1266658		True				
ANR	1266710	Symbol	* domain1		1266658						
ANR	1266711	Symbol	NULL		1266658						
ANR	1266712	Symbol	account2		1266658						
ANR	1266713	Symbol	domain2		1266658						
ANR	1266714	Symbol	account1		1266658						
ANR	1266715	Symbol	domain1		1266658						
ANR	1266716	Symbol	strcasecmp		1266658						
ANR	1266717	Function	getDomainAndName	40:0:1228:1475							
ANR	1266718	FunctionDef	"getDomainAndName (char * namestr , char * & domain , char * & name)"		1266717	0					
ANR	1266719	CompoundStatement		41:62:1295:1475	1266717	0					
ANR	1266720	IdentifierDeclStatement	"char * nameptr = strrchr ( namestr , '\\\\' ) ;"	42:1:1298:1339	1266717	0	True				
ANR	1266721	IdentifierDecl	"* nameptr = strrchr ( namestr , '\\\\' )"		1266717	0					
ANR	1266722	IdentifierDeclType	char *		1266717	0					
ANR	1266723	Identifier	nameptr		1266717	1					
ANR	1266724	AssignmentExpression	"* nameptr = strrchr ( namestr , '\\\\' )"		1266717	2		=			
ANR	1266725	Identifier	nameptr		1266717	0					
ANR	1266726	CallExpression	"strrchr ( namestr , '\\\\' )"		1266717	1					
ANR	1266727	Callee	strrchr		1266717	0					
ANR	1266728	Identifier	strrchr		1266717	0					
ANR	1266729	ArgumentList	namestr		1266717	1					
ANR	1266730	Argument	namestr		1266717	0					
ANR	1266731	Identifier	namestr		1266717	0					
ANR	1266732	Argument	'\\\\'		1266717	1					
ANR	1266733	PrimaryExpression	'\\\\'		1266717	0					
ANR	1266734	IfStatement	if ( nameptr != NULL )		1266717	1					
ANR	1266735	Condition	nameptr != NULL	43:6:1348:1362	1266717	0	True				
ANR	1266736	EqualityExpression	nameptr != NULL		1266717	0		!=			
ANR	1266737	Identifier	nameptr		1266717	0					
ANR	1266738	Identifier	NULL		1266717	1					
ANR	1266739	CompoundStatement		3:24:70:70	1266717	1					
ANR	1266740	ExpressionStatement	domain = namestr	44:2:1370:1386	1266717	0	True				
ANR	1266741	AssignmentExpression	domain = namestr		1266717	0		=			
ANR	1266742	Identifier	domain		1266717	0					
ANR	1266743	Identifier	namestr		1266717	1					
ANR	1266744	ExpressionStatement	* nameptr = '\\0'	45:2:1390:1405	1266717	1	True				
ANR	1266745	AssignmentExpression	* nameptr = '\\0'		1266717	0		=			
ANR	1266746	UnaryOperationExpression	* nameptr		1266717	0					
ANR	1266747	UnaryOperator	*		1266717	0					
ANR	1266748	Identifier	nameptr		1266717	1					
ANR	1266749	PrimaryExpression	'\\0'		1266717	1					
ANR	1266750	ExpressionStatement	name = nameptr + 1	46:2:1409:1425	1266717	2	True				
ANR	1266751	AssignmentExpression	name = nameptr + 1		1266717	0		=			
ANR	1266752	Identifier	name		1266717	0					
ANR	1266753	AdditiveExpression	nameptr + 1		1266717	1		+			
ANR	1266754	Identifier	nameptr		1266717	0					
ANR	1266755	PrimaryExpression	1		1266717	1					
ANR	1266756	ElseStatement	else		1266717	0					
ANR	1266757	CompoundStatement		7:8:139:139	1266717	0					
ANR	1266758	ExpressionStatement	name = namestr	48:2:1439:1453	1266717	0	True				
ANR	1266759	AssignmentExpression	name = namestr		1266717	0		=			
ANR	1266760	Identifier	name		1266717	0					
ANR	1266761	Identifier	namestr		1266717	1					
ANR	1266762	ExpressionStatement	domain = NULL	49:2:1457:1470	1266717	1	True				
ANR	1266763	AssignmentExpression	domain = NULL		1266717	0		=			
ANR	1266764	Identifier	domain		1266717	0					
ANR	1266765	Identifier	NULL		1266717	1					
ANR	1266766	ReturnType	void		1266717	1					
ANR	1266767	Identifier	getDomainAndName		1266717	2					
ANR	1266768	ParameterList	"char * namestr , char * & domain , char * & name"		1266717	3					
ANR	1266769	Parameter	char * namestr	41:18:1251:1263	1266717	0	True				
ANR	1266770	ParameterType	char *		1266717	0					
ANR	1266771	Identifier	namestr		1266717	1					
ANR	1266772	Parameter	char * & domain	41:33:1266:1278	1266717	1	True				
ANR	1266773	ParameterType	char * &		1266717	0					
ANR	1266774	Identifier	domain		1266717	1					
ANR	1266775	Parameter	char * & name	41:48:1281:1291	1266717	2	True				
ANR	1266776	ParameterType	char * &		1266717	0					
ANR	1266777	Identifier	name		1266717	1					
ANR	1266778	CFGEntryNode	ENTRY		1266717		True				
ANR	1266779	CFGExitNode	EXIT		1266717		True				
ANR	1266780	Symbol	nameptr		1266717						
ANR	1266781	Symbol	NULL		1266717						
ANR	1266782	Symbol	namestr		1266717						
ANR	1266783	Symbol	strrchr		1266717						
ANR	1266784	Symbol	domain		1266717						
ANR	1266785	Symbol	name		1266717						
ANR	1266786	Symbol	* nameptr		1266717						
ANR	1266787	Function	joinDomainAndName	53:0:1478:1672							
ANR	1266788	FunctionDef	"joinDomainAndName (char const * domain , char const * name , class MyString & result)"		1266787	0					
ANR	1266789	CompoundStatement		55:0:1565:1672	1266787	0					
ANR	1266790	ExpressionStatement	ASSERT ( name )	56:1:1568:1582	1266787	0	True				
ANR	1266791	CallExpression	ASSERT ( name )		1266787	0					
ANR	1266792	Callee	ASSERT		1266787	0					
ANR	1266793	Identifier	ASSERT		1266787	0					
ANR	1266794	ArgumentList	name		1266787	1					
ANR	1266795	Argument	name		1266787	0					
ANR	1266796	Identifier	name		1266787	0					
ANR	1266797	IfStatement	if ( ! domain )		1266787	1					
ANR	1266798	Condition	! domain	57:5:1589:1595	1266787	0	True				
ANR	1266799	UnaryOperationExpression	! domain		1266787	0					
ANR	1266800	UnaryOperator	!		1266787	0					
ANR	1266801	Identifier	domain		1266787	1					
ANR	1266802	CompoundStatement		3:15:33:33	1266787	1					
ANR	1266803	ExpressionStatement	result = name	58:2:1603:1616	1266787	0	True				
ANR	1266804	AssignmentExpression	result = name		1266787	0		=			
ANR	1266805	Identifier	result		1266787	0					
ANR	1266806	Identifier	name		1266787	1					
ANR	1266807	ElseStatement	else		1266787	0					
ANR	1266808	CompoundStatement		6:6:61:61	1266787	0					
ANR	1266809	ExpressionStatement	"result . sprintf ( ""%s\\\\%s"" , domain , name )"	61:2:1631:1667	1266787	0	True				
ANR	1266810	CallExpression	"result . sprintf ( ""%s\\\\%s"" , domain , name )"		1266787	0					
ANR	1266811	Callee	result . sprintf		1266787	0					
ANR	1266812	MemberAccess	result . sprintf		1266787	0					
ANR	1266813	Identifier	result		1266787	0					
ANR	1266814	Identifier	sprintf		1266787	1					
ANR	1266815	ArgumentList	"""%s\\\\%s"""		1266787	1					
ANR	1266816	Argument	"""%s\\\\%s"""		1266787	0					
ANR	1266817	PrimaryExpression	"""%s\\\\%s"""		1266787	0					
ANR	1266818	Argument	domain		1266787	1					
ANR	1266819	Identifier	domain		1266787	0					
ANR	1266820	Argument	name		1266787	2					
ANR	1266821	Identifier	name		1266787	0					
ANR	1266822	ReturnType	void		1266787	1					
ANR	1266823	Identifier	joinDomainAndName		1266787	2					
ANR	1266824	ParameterList	"char const * domain , char const * name , class MyString & result"		1266787	3					
ANR	1266825	Parameter	char const * domain	54:19:1502:1519	1266787	0	True				
ANR	1266826	ParameterType	char const *		1266787	0					
ANR	1266827	Identifier	domain		1266787	1					
ANR	1266828	Parameter	char const * name	54:39:1522:1537	1266787	1	True				
ANR	1266829	ParameterType	char const *		1266787	0					
ANR	1266830	Identifier	name		1266787	1					
ANR	1266831	Parameter	class MyString & result	54:57:1540:1561	1266787	2	True				
ANR	1266832	ParameterType	class MyString &		1266787	0					
ANR	1266833	Identifier	result		1266787	1					
ANR	1266834	CFGEntryNode	ENTRY		1266787		True				
ANR	1266835	CFGExitNode	EXIT		1266787		True				
ANR	1266836	Symbol	result		1266787						
ANR	1266837	Symbol	domain		1266787						
ANR	1266838	Symbol	name		1266787						
