command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2009606	File	data/converged/CVE-2011-4930_htcondor/proc_family.cpp								
ANR	2009607	DeclStmt									
ANR	2009608	Decl							bool	bool	ProcFamily :: m_cgroup_initialized
ANR	2009609	DeclStmt									
ANR	2009610	Decl							bool	bool	ProcFamily :: m_cgroup_freezer_mounted
ANR	2009611	DeclStmt									
ANR	2009612	Decl							bool	bool	ProcFamily :: m_cgroup_cpuacct_mounted
ANR	2009613	DeclStmt									
ANR	2009614	Decl							bool	bool	ProcFamily :: m_cgroup_memory_mounted
ANR	2009615	DeclStmt									
ANR	2009616	Decl							bool	bool	ProcFamily :: m_cgroup_block_mounted
ANR	2009617	DeclStmt									
ANR	2009618	Decl							long	long	ProcFamily :: clock_tick
ANR	2009619	Function	ProcFamily :: ProcFamily	51:0:1590:2280							
ANR	2009620	FunctionDef	"ProcFamily :: ProcFamily (ProcFamilyMonitor * monitor , pid_t root_pid , birthday_t root_birthday , pid_t watcher_pid , int max_snapshot_interval)"		2009619	0					
ANR	2009621	CompoundStatement		65:0:2125:2280	2009619	0					
ANR	2009622	ExpressionStatement	m_proxy = NULL	67:1:2148:2162	2009619	0	True				
ANR	2009623	AssignmentExpression	m_proxy = NULL		2009619	0		=			
ANR	2009624	Identifier	m_proxy		2009619	0					
ANR	2009625	Identifier	NULL		2009619	1					
ANR	2009626	ExpressionStatement	m_cgroup_string = NULL	70:1:2204:2226	2009619	1	True				
ANR	2009627	AssignmentExpression	m_cgroup_string = NULL		2009619	0		=			
ANR	2009628	Identifier	m_cgroup_string		2009619	0					
ANR	2009629	Identifier	NULL		2009619	1					
ANR	2009630	ExpressionStatement	m_cgroup = NULL	71:1:2229:2244	2009619	2	True				
ANR	2009631	AssignmentExpression	m_cgroup = NULL		2009619	0		=			
ANR	2009632	Identifier	m_cgroup		2009619	0					
ANR	2009633	Identifier	NULL		2009619	1					
ANR	2009634	ExpressionStatement	m_created_cgroup = false	72:1:2247:2271	2009619	3	True				
ANR	2009635	AssignmentExpression	m_created_cgroup = false		2009619	0		=			
ANR	2009636	Identifier	m_created_cgroup		2009619	0					
ANR	2009637	Identifier	false		2009619	1					
ANR	2009638	Identifier	ProcFamily :: ProcFamily		2009619	1					
ANR	2009639	ParameterList	"ProcFamilyMonitor * monitor , pid_t root_pid , birthday_t root_birthday , pid_t watcher_pid , int max_snapshot_interval"		2009619	2					
ANR	2009640	Parameter	ProcFamilyMonitor * monitor	51:23:1613:1638	2009619	0	True				
ANR	2009641	ParameterType	ProcFamilyMonitor *		2009619	0					
ANR	2009642	Identifier	monitor		2009619	1					
ANR	2009643	Parameter	pid_t root_pid	52:23:1664:1690	2009619	1	True				
ANR	2009644	ParameterType	pid_t		2009619	0					
ANR	2009645	Identifier	root_pid		2009619	1					
ANR	2009646	Parameter	birthday_t root_birthday	53:23:1716:1747	2009619	2	True				
ANR	2009647	ParameterType	birthday_t		2009619	0					
ANR	2009648	Identifier	root_birthday		2009619	1					
ANR	2009649	Parameter	pid_t watcher_pid	54:23:1773:1802	2009619	3	True				
ANR	2009650	ParameterType	pid_t		2009619	0					
ANR	2009651	Identifier	watcher_pid		2009619	1					
ANR	2009652	Parameter	int max_snapshot_interval	55:23:1828:1867	2009619	4	True				
ANR	2009653	ParameterType	int		2009619	0					
ANR	2009654	Identifier	max_snapshot_interval		2009619	1					
ANR	2009655	CFGEntryNode	ENTRY		2009619		True				
ANR	2009656	CFGExitNode	EXIT		2009619		True				
ANR	2009657	Symbol	max_snapshot_interval		2009619						
ANR	2009658	Symbol	NULL		2009619						
ANR	2009659	Symbol	m_created_cgroup		2009619						
ANR	2009660	Symbol	watcher_pid		2009619						
ANR	2009661	Symbol	root_birthday		2009619						
ANR	2009662	Symbol	false		2009619						
ANR	2009663	Symbol	monitor		2009619						
ANR	2009664	Symbol	m_cgroup_string		2009619						
ANR	2009665	Symbol	root_pid		2009619						
ANR	2009666	Symbol	m_cgroup		2009619						
ANR	2009667	Symbol	m_proxy		2009619						
ANR	2009668	Function	ProcFamily :: ~ProcFamily	76:0:2283:3031							
ANR	2009669	FunctionDef	ProcFamily :: ~ProcFamily ()		2009668	0					
ANR	2009670	CompoundStatement		77:0:2309:3031	2009668	0					
ANR	2009671	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	80:1:2343:2383	2009668	0	True				
ANR	2009672	IdentifierDecl	* member = m_member_list		2009668	0					
ANR	2009673	IdentifierDeclType	ProcFamilyMember *		2009668	0					
ANR	2009674	Identifier	member		2009668	1					
ANR	2009675	AssignmentExpression	* member = m_member_list		2009668	2		=			
ANR	2009676	Identifier	m_member_list		2009668	0					
ANR	2009677	Identifier	m_member_list		2009668	1					
ANR	2009678	WhileStatement	while ( member != NULL )		2009668	1					
ANR	2009679	Condition	member != NULL	81:8:2393:2406	2009668	0	True				
ANR	2009680	EqualityExpression	member != NULL		2009668	0		!=			
ANR	2009681	Identifier	member		2009668	0					
ANR	2009682	Identifier	NULL		2009668	1					
ANR	2009683	CompoundStatement		6:2:103:149	2009668	1					
ANR	2009684	IdentifierDeclStatement	ProcFamilyMember * next_member = member -> m_next ;	82:2:2413:2459	2009668	0	True				
ANR	2009685	IdentifierDecl	* next_member = member -> m_next		2009668	0					
ANR	2009686	IdentifierDeclType	ProcFamilyMember *		2009668	0					
ANR	2009687	Identifier	next_member		2009668	1					
ANR	2009688	AssignmentExpression	* next_member = member -> m_next		2009668	2		=			
ANR	2009689	Identifier	next_member		2009668	0					
ANR	2009690	PtrMemberAccess	member -> m_next		2009668	1					
ANR	2009691	Identifier	member		2009668	0					
ANR	2009692	Identifier	m_next		2009668	1					
ANR	2009693	Statement	delete	87:2:2611:2616	2009668	1	True				
ANR	2009694	ExpressionStatement	member -> m_proc_info	87:9:2618:2637	2009668	2	True				
ANR	2009695	PtrMemberAccess	member -> m_proc_info		2009668	0					
ANR	2009696	Identifier	member		2009668	0					
ANR	2009697	Identifier	m_proc_info		2009668	1					
ANR	2009698	Statement	delete	88:2:2641:2646	2009668	3	True				
ANR	2009699	ExpressionStatement	member	88:9:2648:2654	2009668	4	True				
ANR	2009700	Identifier	member		2009668	0					
ANR	2009701	ExpressionStatement	member = next_member	89:2:2658:2678	2009668	5	True				
ANR	2009702	AssignmentExpression	member = next_member		2009668	0		=			
ANR	2009703	Identifier	member		2009668	0					
ANR	2009704	Identifier	next_member		2009668	1					
ANR	2009705	IfStatement	if ( m_proxy != NULL )		2009668	2					
ANR	2009706	Condition	m_proxy != NULL	95:5:2758:2772	2009668	0	True				
ANR	2009707	EqualityExpression	m_proxy != NULL		2009668	0		!=			
ANR	2009708	Identifier	m_proxy		2009668	0					
ANR	2009709	Identifier	NULL		2009668	1					
ANR	2009710	CompoundStatement		19:22:465:465	2009668	1					
ANR	2009711	ExpressionStatement	free ( m_proxy )	96:2:2779:2792	2009668	0	True				
ANR	2009712	CallExpression	free ( m_proxy )		2009668	0					
ANR	2009713	Callee	free		2009668	0					
ANR	2009714	Identifier	free		2009668	0					
ANR	2009715	ArgumentList	m_proxy		2009668	1					
ANR	2009716	Argument	m_proxy		2009668	0					
ANR	2009717	Identifier	m_proxy		2009668	0					
ANR	2009718	IfStatement	if ( m_cgroup && m_created_cgroup )		2009668	3					
ANR	2009719	Condition	m_cgroup && m_created_cgroup	100:5:2841:2868	2009668	0	True				
ANR	2009720	AndExpression	m_cgroup && m_created_cgroup		2009668	0		&&			
ANR	2009721	Identifier	m_cgroup		2009668	0					
ANR	2009722	Identifier	m_created_cgroup		2009668	1					
ANR	2009723	CompoundStatement		24:35:561:561	2009668	1					
ANR	2009724	ExpressionStatement	delete_cgroup ( m_cgroup_string )	101:2:2875:2905	2009668	0	True				
ANR	2009725	CallExpression	delete_cgroup ( m_cgroup_string )		2009668	0					
ANR	2009726	Callee	delete_cgroup		2009668	0					
ANR	2009727	Identifier	delete_cgroup		2009668	0					
ANR	2009728	ArgumentList	m_cgroup_string		2009668	1					
ANR	2009729	Argument	m_cgroup_string		2009668	0					
ANR	2009730	Identifier	m_cgroup_string		2009668	0					
ANR	2009731	IfStatement	if ( m_cgroup != NULL )		2009668	4					
ANR	2009732	Condition	m_cgroup != NULL	103:5:2915:2930	2009668	0	True				
ANR	2009733	EqualityExpression	m_cgroup != NULL		2009668	0		!=			
ANR	2009734	Identifier	m_cgroup		2009668	0					
ANR	2009735	Identifier	NULL		2009668	1					
ANR	2009736	CompoundStatement		27:23:623:623	2009668	1					
ANR	2009737	ExpressionStatement	cgroup_free ( & m_cgroup )	104:2:2937:2959	2009668	0	True				
ANR	2009738	CallExpression	cgroup_free ( & m_cgroup )		2009668	0					
ANR	2009739	Callee	cgroup_free		2009668	0					
ANR	2009740	Identifier	cgroup_free		2009668	0					
ANR	2009741	ArgumentList	& m_cgroup		2009668	1					
ANR	2009742	Argument	& m_cgroup		2009668	0					
ANR	2009743	UnaryOperationExpression	& m_cgroup		2009668	0					
ANR	2009744	UnaryOperator	&		2009668	0					
ANR	2009745	Identifier	m_cgroup		2009668	1					
ANR	2009746	IfStatement	if ( m_cgroup_string != NULL )		2009668	5					
ANR	2009747	Condition	m_cgroup_string != NULL	106:5:2969:2991	2009668	0	True				
ANR	2009748	EqualityExpression	m_cgroup_string != NULL		2009668	0		!=			
ANR	2009749	Identifier	m_cgroup_string		2009668	0					
ANR	2009750	Identifier	NULL		2009668	1					
ANR	2009751	CompoundStatement		30:30:684:684	2009668	1					
ANR	2009752	ExpressionStatement	free ( m_cgroup_string )	107:2:2998:3019	2009668	0	True				
ANR	2009753	CallExpression	free ( m_cgroup_string )		2009668	0					
ANR	2009754	Callee	free		2009668	0					
ANR	2009755	Identifier	free		2009668	0					
ANR	2009756	ArgumentList	m_cgroup_string		2009668	1					
ANR	2009757	Argument	m_cgroup_string		2009668	0					
ANR	2009758	Identifier	m_cgroup_string		2009668	0					
ANR	2009759	Identifier	ProcFamily :: ~ProcFamily		2009668	1					
ANR	2009760	ParameterList			2009668	2					
ANR	2009761	CFGEntryNode	ENTRY		2009668		True				
ANR	2009762	CFGExitNode	EXIT		2009668		True				
ANR	2009763	Symbol	m_member_list		2009668						
ANR	2009764	Symbol	NULL		2009668						
ANR	2009765	Symbol	m_created_cgroup		2009668						
ANR	2009766	Symbol	member		2009668						
ANR	2009767	Symbol	member -> m_next		2009668						
ANR	2009768	Symbol	* member		2009668						
ANR	2009769	Symbol	next_member		2009668						
ANR	2009770	Symbol	m_cgroup_string		2009668						
ANR	2009771	Symbol	& m_cgroup		2009668						
ANR	2009772	Symbol	m_cgroup		2009668						
ANR	2009773	Symbol	m_proxy		2009668						
ANR	2009774	Function	ProcFamily :: delete_cgroup	114:0:3067:3787							
ANR	2009775	FunctionDef	ProcFamily :: delete_cgroup (const char * cg_string)		2009774	0					
ANR	2009776	CompoundStatement		116:0:3122:3787	2009774	0					
ANR	2009777	IdentifierDeclStatement	int err ;	117:1:3125:3132	2009774	0	True				
ANR	2009778	IdentifierDecl	err		2009774	0					
ANR	2009779	IdentifierDeclType	int		2009774	0					
ANR	2009780	Identifier	err		2009774	1					
ANR	2009781	IdentifierDeclStatement	struct cgroup * dcg = cgroup_new_cgroup ( m_cgroup_string ) ;	119:1:3136:3191	2009774	1	True				
ANR	2009782	IdentifierDecl	* dcg = cgroup_new_cgroup ( m_cgroup_string )		2009774	0					
ANR	2009783	IdentifierDeclType	struct cgroup *		2009774	0					
ANR	2009784	Identifier	dcg		2009774	1					
ANR	2009785	AssignmentExpression	* dcg = cgroup_new_cgroup ( m_cgroup_string )		2009774	2		=			
ANR	2009786	Identifier	dcg		2009774	0					
ANR	2009787	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		2009774	1					
ANR	2009788	Callee	cgroup_new_cgroup		2009774	0					
ANR	2009789	Identifier	cgroup_new_cgroup		2009774	0					
ANR	2009790	ArgumentList	m_cgroup_string		2009774	1					
ANR	2009791	Argument	m_cgroup_string		2009774	0					
ANR	2009792	Identifier	m_cgroup_string		2009774	0					
ANR	2009793	ExpressionStatement	ASSERT ( dcg != NULL )	120:1:3194:3214	2009774	2	True				
ANR	2009794	CallExpression	ASSERT ( dcg != NULL )		2009774	0					
ANR	2009795	Callee	ASSERT		2009774	0					
ANR	2009796	Identifier	ASSERT		2009774	0					
ANR	2009797	ArgumentList	dcg != NULL		2009774	1					
ANR	2009798	Argument	dcg != NULL		2009774	0					
ANR	2009799	EqualityExpression	dcg != NULL		2009774	0		!=			
ANR	2009800	Identifier	dcg		2009774	0					
ANR	2009801	Identifier	NULL		2009774	1					
ANR	2009802	IfStatement	if ( ( err = cgroup_get_cgroup ( dcg ) ) )		2009774	3					
ANR	2009803	Condition	err = cgroup_get_cgroup ( dcg )	121:5:3221:3250	2009774	0	True				
ANR	2009804	AssignmentExpression	err = cgroup_get_cgroup ( dcg )		2009774	0		=			
ANR	2009805	Identifier	err		2009774	0					
ANR	2009806	CallExpression	cgroup_get_cgroup ( dcg )		2009774	1					
ANR	2009807	Callee	cgroup_get_cgroup		2009774	0					
ANR	2009808	Identifier	cgroup_get_cgroup		2009774	0					
ANR	2009809	ArgumentList	dcg		2009774	1					
ANR	2009810	Argument	dcg		2009774	0					
ANR	2009811	Identifier	dcg		2009774	0					
ANR	2009812	CompoundStatement		6:37:130:130	2009774	1					
ANR	2009813	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"	122:2:3257:3400	2009774	0	True				
ANR	2009814	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"		2009774	0					
ANR	2009815	Callee	dprintf		2009774	0					
ANR	2009816	Identifier	dprintf		2009774	0					
ANR	2009817	ArgumentList	D_PROCFAMILY		2009774	1					
ANR	2009818	Argument	D_PROCFAMILY		2009774	0					
ANR	2009819	Identifier	D_PROCFAMILY		2009774	0					
ANR	2009820	Argument	"""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"""		2009774	1					
ANR	2009821	PrimaryExpression	"""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"""		2009774	0					
ANR	2009822	Argument	cg_string		2009774	2					
ANR	2009823	Identifier	cg_string		2009774	0					
ANR	2009824	Argument	m_root_pid		2009774	3					
ANR	2009825	Identifier	m_root_pid		2009774	0					
ANR	2009826	Argument	err		2009774	4					
ANR	2009827	Identifier	err		2009774	0					
ANR	2009828	Argument	cgroup_strerror ( err )		2009774	5					
ANR	2009829	CallExpression	cgroup_strerror ( err )		2009774	0					
ANR	2009830	Callee	cgroup_strerror		2009774	0					
ANR	2009831	Identifier	cgroup_strerror		2009774	0					
ANR	2009832	ArgumentList	err		2009774	1					
ANR	2009833	Argument	err		2009774	0					
ANR	2009834	Identifier	err		2009774	0					
ANR	2009835	ElseStatement	else		2009774	0					
ANR	2009836	IfStatement	"if ( ( err = cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION ) ) )"		2009774	0					
ANR	2009837	Condition	"err = cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION )"	126:10:3415:3505	2009774	0	True				
ANR	2009838	AssignmentExpression	"err = cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION )"		2009774	0		=			
ANR	2009839	Identifier	err		2009774	0					
ANR	2009840	CallExpression	"cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION )"		2009774	1					
ANR	2009841	Callee	cgroup_delete_cgroup		2009774	0					
ANR	2009842	Identifier	cgroup_delete_cgroup		2009774	0					
ANR	2009843	ArgumentList	dcg		2009774	1					
ANR	2009844	Argument	dcg		2009774	0					
ANR	2009845	Identifier	dcg		2009774	0					
ANR	2009846	Argument	CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION		2009774	1					
ANR	2009847	InclusiveOrExpression	CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION		2009774	0		|			
ANR	2009848	Identifier	CGFLAG_DELETE_RECURSIVE		2009774	0					
ANR	2009849	Identifier	CGFLAG_DELETE_IGNORE_MIGRATION		2009774	1					
ANR	2009850	CompoundStatement		11:103:385:385	2009774	1					
ANR	2009851	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"	127:2:3512:3657	2009774	0	True				
ANR	2009852	CallExpression	"dprintf ( D_ALWAYS , ""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"		2009774	0					
ANR	2009853	Callee	dprintf		2009774	0					
ANR	2009854	Identifier	dprintf		2009774	0					
ANR	2009855	ArgumentList	D_ALWAYS		2009774	1					
ANR	2009856	Argument	D_ALWAYS		2009774	0					
ANR	2009857	Identifier	D_ALWAYS		2009774	0					
ANR	2009858	Argument	"""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"""		2009774	1					
ANR	2009859	PrimaryExpression	"""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"""		2009774	0					
ANR	2009860	Argument	cg_string		2009774	2					
ANR	2009861	Identifier	cg_string		2009774	0					
ANR	2009862	Argument	m_root_pid		2009774	3					
ANR	2009863	Identifier	m_root_pid		2009774	0					
ANR	2009864	Argument	err		2009774	4					
ANR	2009865	Identifier	err		2009774	0					
ANR	2009866	Argument	cgroup_strerror ( err )		2009774	5					
ANR	2009867	CallExpression	cgroup_strerror ( err )		2009774	0					
ANR	2009868	Callee	cgroup_strerror		2009774	0					
ANR	2009869	Identifier	cgroup_strerror		2009774	0					
ANR	2009870	ArgumentList	err		2009774	1					
ANR	2009871	Argument	err		2009774	0					
ANR	2009872	Identifier	err		2009774	0					
ANR	2009873	ElseStatement	else		2009774	0					
ANR	2009874	CompoundStatement		16:8:544:544	2009774	0					
ANR	2009875	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Deleted cgroup %s for ProcFamily %u\\n"" , cg_string , m_root_pid )"	132:2:3671:3762	2009774	0	True				
ANR	2009876	CallExpression	"dprintf ( D_PROCFAMILY , ""Deleted cgroup %s for ProcFamily %u\\n"" , cg_string , m_root_pid )"		2009774	0					
ANR	2009877	Callee	dprintf		2009774	0					
ANR	2009878	Identifier	dprintf		2009774	0					
ANR	2009879	ArgumentList	D_PROCFAMILY		2009774	1					
ANR	2009880	Argument	D_PROCFAMILY		2009774	0					
ANR	2009881	Identifier	D_PROCFAMILY		2009774	0					
ANR	2009882	Argument	"""Deleted cgroup %s for ProcFamily %u\\n"""		2009774	1					
ANR	2009883	PrimaryExpression	"""Deleted cgroup %s for ProcFamily %u\\n"""		2009774	0					
ANR	2009884	Argument	cg_string		2009774	2					
ANR	2009885	Identifier	cg_string		2009774	0					
ANR	2009886	Argument	m_root_pid		2009774	3					
ANR	2009887	Identifier	m_root_pid		2009774	0					
ANR	2009888	ExpressionStatement	cgroup_free ( & dcg )	136:1:3768:3785	2009774	4	True				
ANR	2009889	CallExpression	cgroup_free ( & dcg )		2009774	0					
ANR	2009890	Callee	cgroup_free		2009774	0					
ANR	2009891	Identifier	cgroup_free		2009774	0					
ANR	2009892	ArgumentList	& dcg		2009774	1					
ANR	2009893	Argument	& dcg		2009774	0					
ANR	2009894	UnaryOperationExpression	& dcg		2009774	0					
ANR	2009895	UnaryOperator	&		2009774	0					
ANR	2009896	Identifier	dcg		2009774	1					
ANR	2009897	ReturnType	void		2009774	1					
ANR	2009898	Identifier	ProcFamily :: delete_cgroup		2009774	2					
ANR	2009899	ParameterList	const char * cg_string		2009774	3					
ANR	2009900	Parameter	const char * cg_string	115:26:3098:3119	2009774	0	True				
ANR	2009901	ParameterType	const char *		2009774	0					
ANR	2009902	Identifier	cg_string		2009774	1					
ANR	2009903	CFGEntryNode	ENTRY		2009774		True				
ANR	2009904	CFGExitNode	EXIT		2009774		True				
ANR	2009905	Symbol	NULL		2009774						
ANR	2009906	Symbol	D_PROCFAMILY		2009774						
ANR	2009907	Symbol	err		2009774						
ANR	2009908	Symbol	cgroup_get_cgroup		2009774						
ANR	2009909	Symbol	cgroup_delete_cgroup		2009774						
ANR	2009910	Symbol	D_ALWAYS		2009774						
ANR	2009911	Symbol	dcg		2009774						
ANR	2009912	Symbol	& dcg		2009774						
ANR	2009913	Symbol	cgroup_new_cgroup		2009774						
ANR	2009914	Symbol	CGFLAG_DELETE_IGNORE_MIGRATION		2009774						
ANR	2009915	Symbol	CGFLAG_DELETE_RECURSIVE		2009774						
ANR	2009916	Symbol	cgroup_strerror		2009774						
ANR	2009917	Symbol	cg_string		2009774						
ANR	2009918	Symbol	m_cgroup_string		2009774						
ANR	2009919	Symbol	m_root_pid		2009774						
ANR	2009920	Function	ProcFamily :: migrate_to_cgroup	139:0:3790:7804							
ANR	2009921	FunctionDef	ProcFamily :: migrate_to_cgroup (pid_t pid)		2009920	0					
ANR	2009922	CompoundStatement		141:0:3835:7804	2009920	0					
ANR	2009923	IdentifierDeclStatement	int err ;	150:1:4213:4220	2009920	0	True				
ANR	2009924	IdentifierDecl	err		2009920	0					
ANR	2009925	IdentifierDeclType	int		2009920	0					
ANR	2009926	Identifier	err		2009920	1					
ANR	2009927	IdentifierDeclStatement	u_int64_t orig_migrate ;	151:1:4223:4245	2009920	1	True				
ANR	2009928	IdentifierDecl	orig_migrate		2009920	0					
ANR	2009929	IdentifierDeclType	u_int64_t		2009920	0					
ANR	2009930	Identifier	orig_migrate		2009920	1					
ANR	2009931	IdentifierDeclStatement	bool changed_orig = false ;	152:1:4248:4273	2009920	2	True				
ANR	2009932	IdentifierDecl	changed_orig = false		2009920	0					
ANR	2009933	IdentifierDeclType	bool		2009920	0					
ANR	2009934	Identifier	changed_orig		2009920	1					
ANR	2009935	AssignmentExpression	changed_orig = false		2009920	2		=			
ANR	2009936	Identifier	false		2009920	0					
ANR	2009937	Identifier	false		2009920	1					
ANR	2009938	IdentifierDeclStatement	char * orig_cgroup_string = NULL ;	153:1:4276:4308	2009920	3	True				
ANR	2009939	IdentifierDecl	* orig_cgroup_string = NULL		2009920	0					
ANR	2009940	IdentifierDeclType	char *		2009920	0					
ANR	2009941	Identifier	orig_cgroup_string		2009920	1					
ANR	2009942	AssignmentExpression	* orig_cgroup_string = NULL		2009920	2		=			
ANR	2009943	Identifier	NULL		2009920	0					
ANR	2009944	Identifier	NULL		2009920	1					
ANR	2009945	IdentifierDeclStatement	struct cgroup * orig_cgroup ;	154:1:4311:4338	2009920	4	True				
ANR	2009946	IdentifierDecl	* orig_cgroup		2009920	0					
ANR	2009947	IdentifierDeclType	struct cgroup *		2009920	0					
ANR	2009948	Identifier	orig_cgroup		2009920	1					
ANR	2009949	IdentifierDeclStatement	struct cgroup_controller * memory_controller ;	155:1:4341:4385	2009920	5	True				
ANR	2009950	IdentifierDecl	* memory_controller		2009920	0					
ANR	2009951	IdentifierDeclType	struct cgroup_controller *		2009920	0					
ANR	2009952	Identifier	memory_controller		2009920	1					
ANR	2009953	IfStatement	"if ( m_cgroup_memory_mounted && ( err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string ) ) )"		2009920	6					
ANR	2009954	Condition	"m_cgroup_memory_mounted && ( err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string ) )"	156:5:4392:4505	2009920	0	True				
ANR	2009955	AndExpression	"m_cgroup_memory_mounted && ( err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string ) )"		2009920	0		&&			
ANR	2009956	Identifier	m_cgroup_memory_mounted		2009920	0					
ANR	2009957	AssignmentExpression	"err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string )"		2009920	1		=			
ANR	2009958	Identifier	err		2009920	0					
ANR	2009959	CallExpression	"cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string )"		2009920	1					
ANR	2009960	Callee	cgroup_get_current_controller_path		2009920	0					
ANR	2009961	Identifier	cgroup_get_current_controller_path		2009920	0					
ANR	2009962	ArgumentList	pid		2009920	1					
ANR	2009963	Argument	pid		2009920	0					
ANR	2009964	Identifier	pid		2009920	0					
ANR	2009965	Argument	MEMORY_CONTROLLER		2009920	1					
ANR	2009966	Identifier	MEMORY_CONTROLLER		2009920	0					
ANR	2009967	Argument	& orig_cgroup_string		2009920	2					
ANR	2009968	UnaryOperationExpression	& orig_cgroup_string		2009920	0					
ANR	2009969	UnaryOperator	&		2009920	0					
ANR	2009970	Identifier	orig_cgroup_string		2009920	1					
ANR	2009971	CompoundStatement		16:121:672:672	2009920	1					
ANR	2009972	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"" , pid , m_root_pid , err , cgroup_strerror ( err ) )"	157:2:4512:4664	2009920	0	True				
ANR	2009973	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"" , pid , m_root_pid , err , cgroup_strerror ( err ) )"		2009920	0					
ANR	2009974	Callee	dprintf		2009920	0					
ANR	2009975	Identifier	dprintf		2009920	0					
ANR	2009976	ArgumentList	D_PROCFAMILY		2009920	1					
ANR	2009977	Argument	D_PROCFAMILY		2009920	0					
ANR	2009978	Identifier	D_PROCFAMILY		2009920	0					
ANR	2009979	Argument	"""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"""		2009920	1					
ANR	2009980	PrimaryExpression	"""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"""		2009920	0					
ANR	2009981	Argument	pid		2009920	2					
ANR	2009982	Identifier	pid		2009920	0					
ANR	2009983	Argument	m_root_pid		2009920	3					
ANR	2009984	Identifier	m_root_pid		2009920	0					
ANR	2009985	Argument	err		2009920	4					
ANR	2009986	Identifier	err		2009920	0					
ANR	2009987	Argument	cgroup_strerror ( err )		2009920	5					
ANR	2009988	CallExpression	cgroup_strerror ( err )		2009920	0					
ANR	2009989	Callee	cgroup_strerror		2009920	0					
ANR	2009990	Identifier	cgroup_strerror		2009920	0					
ANR	2009991	ArgumentList	err		2009920	1					
ANR	2009992	Argument	err		2009920	0					
ANR	2009993	Identifier	err		2009920	0					
ANR	2009994	ReturnStatement	return 1 ;	160:2:4668:4676	2009920	1	True				
ANR	2009995	PrimaryExpression	1		2009920	0					
ANR	2009996	IfStatement	"if ( m_cgroup_memory_mounted && ( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) ) )"		2009920	7					
ANR	2009997	Condition	"m_cgroup_memory_mounted && ( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) )"	164:5:4844:4947	2009920	0	True				
ANR	2009998	AndExpression	"m_cgroup_memory_mounted && ( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) )"		2009920	0		&&			
ANR	2009999	Identifier	m_cgroup_memory_mounted		2009920	0					
ANR	2010000	AndExpression	"( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) )"		2009920	1		&&			
ANR	2010001	EqualityExpression	orig_cgroup_string != NULL		2009920	0		!=			
ANR	2010002	Identifier	orig_cgroup_string		2009920	0					
ANR	2010003	Identifier	NULL		2009920	1					
ANR	2010004	CallExpression	"strcmp ( m_cgroup_string , orig_cgroup_string )"		2009920	1					
ANR	2010005	Callee	strcmp		2009920	0					
ANR	2010006	Identifier	strcmp		2009920	0					
ANR	2010007	ArgumentList	m_cgroup_string		2009920	1					
ANR	2010008	Argument	m_cgroup_string		2009920	0					
ANR	2010009	Identifier	m_cgroup_string		2009920	0					
ANR	2010010	Argument	orig_cgroup_string		2009920	1					
ANR	2010011	Identifier	orig_cgroup_string		2009920	0					
ANR	2010012	CompoundStatement		24:111:1114:1114	2009920	1					
ANR	2010013	ExpressionStatement	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )	168:2:5126:5177	2009920	0	True				
ANR	2010014	AssignmentExpression	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )		2009920	0		=			
ANR	2010015	Identifier	orig_cgroup		2009920	0					
ANR	2010016	CallExpression	cgroup_new_cgroup ( orig_cgroup_string )		2009920	1					
ANR	2010017	Callee	cgroup_new_cgroup		2009920	0					
ANR	2010018	Identifier	cgroup_new_cgroup		2009920	0					
ANR	2010019	ArgumentList	orig_cgroup_string		2009920	1					
ANR	2010020	Argument	orig_cgroup_string		2009920	0					
ANR	2010021	Identifier	orig_cgroup_string		2009920	0					
ANR	2010022	ExpressionStatement	ASSERT ( orig_cgroup != NULL )	169:2:5181:5209	2009920	1	True				
ANR	2010023	CallExpression	ASSERT ( orig_cgroup != NULL )		2009920	0					
ANR	2010024	Callee	ASSERT		2009920	0					
ANR	2010025	Identifier	ASSERT		2009920	0					
ANR	2010026	ArgumentList	orig_cgroup != NULL		2009920	1					
ANR	2010027	Argument	orig_cgroup != NULL		2009920	0					
ANR	2010028	EqualityExpression	orig_cgroup != NULL		2009920	0		!=			
ANR	2010029	Identifier	orig_cgroup		2009920	0					
ANR	2010030	Identifier	NULL		2009920	1					
ANR	2010031	IfStatement	if ( ( err = cgroup_get_cgroup ( orig_cgroup ) ) )		2009920	2					
ANR	2010032	Condition	err = cgroup_get_cgroup ( orig_cgroup )	170:6:5217:5254	2009920	0	True				
ANR	2010033	AssignmentExpression	err = cgroup_get_cgroup ( orig_cgroup )		2009920	0		=			
ANR	2010034	Identifier	err		2009920	0					
ANR	2010035	CallExpression	cgroup_get_cgroup ( orig_cgroup )		2009920	1					
ANR	2010036	Callee	cgroup_get_cgroup		2009920	0					
ANR	2010037	Identifier	cgroup_get_cgroup		2009920	0					
ANR	2010038	ArgumentList	orig_cgroup		2009920	1					
ANR	2010039	Argument	orig_cgroup		2009920	0					
ANR	2010040	Identifier	orig_cgroup		2009920	0					
ANR	2010041	CompoundStatement		30:46:1421:1421	2009920	1					
ANR	2010042	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"" , orig_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	171:3:5262:5412	2009920	0	True				
ANR	2010043	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"" , orig_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2009920	0					
ANR	2010044	Callee	dprintf		2009920	0					
ANR	2010045	Identifier	dprintf		2009920	0					
ANR	2010046	ArgumentList	D_PROCFAMILY		2009920	1					
ANR	2010047	Argument	D_PROCFAMILY		2009920	0					
ANR	2010048	Identifier	D_PROCFAMILY		2009920	0					
ANR	2010049	Argument	"""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"""		2009920	1					
ANR	2010050	PrimaryExpression	"""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"""		2009920	0					
ANR	2010051	Argument	orig_cgroup_string		2009920	2					
ANR	2010052	Identifier	orig_cgroup_string		2009920	0					
ANR	2010053	Argument	m_root_pid		2009920	3					
ANR	2010054	Identifier	m_root_pid		2009920	0					
ANR	2010055	Argument	err		2009920	4					
ANR	2010056	Identifier	err		2009920	0					
ANR	2010057	Argument	cgroup_strerror ( err )		2009920	5					
ANR	2010058	CallExpression	cgroup_strerror ( err )		2009920	0					
ANR	2010059	Callee	cgroup_strerror		2009920	0					
ANR	2010060	Identifier	cgroup_strerror		2009920	0					
ANR	2010061	ArgumentList	err		2009920	1					
ANR	2010062	Argument	err		2009920	0					
ANR	2010063	Identifier	err		2009920	0					
ANR	2010064	GotoStatement	goto after_migrate ;	174:3:5417:5435	2009920	1	True				
ANR	2010065	Identifier	after_migrate		2009920	0					
ANR	2010066	IfStatement	"if ( ( memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) == NULL )"		2009920	3					
ANR	2010067	Condition	"( memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) == NULL"	176:6:5447:5529	2009920	0	True				
ANR	2010068	EqualityExpression	"( memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) == NULL"		2009920	0		==			
ANR	2010069	AssignmentExpression	"memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER )"		2009920	0		=			
ANR	2010070	Identifier	memory_controller		2009920	0					
ANR	2010071	CallExpression	"cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER )"		2009920	1					
ANR	2010072	Callee	cgroup_get_controller		2009920	0					
ANR	2010073	Identifier	cgroup_get_controller		2009920	0					
ANR	2010074	ArgumentList	orig_cgroup		2009920	1					
ANR	2010075	Argument	orig_cgroup		2009920	0					
ANR	2010076	Identifier	orig_cgroup		2009920	0					
ANR	2010077	Argument	MEMORY_CONTROLLER		2009920	1					
ANR	2010078	Identifier	MEMORY_CONTROLLER		2009920	0					
ANR	2010079	Identifier	NULL		2009920	1					
ANR	2010080	CompoundStatement		36:91:1696:1696	2009920	1					
ANR	2010081	ExpressionStatement	cgroup_free ( & orig_cgroup )	177:3:5537:5562	2009920	0	True				
ANR	2010082	CallExpression	cgroup_free ( & orig_cgroup )		2009920	0					
ANR	2010083	Callee	cgroup_free		2009920	0					
ANR	2010084	Identifier	cgroup_free		2009920	0					
ANR	2010085	ArgumentList	& orig_cgroup		2009920	1					
ANR	2010086	Argument	& orig_cgroup		2009920	0					
ANR	2010087	UnaryOperationExpression	& orig_cgroup		2009920	0					
ANR	2010088	UnaryOperator	&		2009920	0					
ANR	2010089	Identifier	orig_cgroup		2009920	1					
ANR	2010090	GotoStatement	goto after_migrate ;	178:3:5567:5585	2009920	1	True				
ANR	2010091	Identifier	after_migrate		2009920	0					
ANR	2010092	IfStatement	"if ( ( err = cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate ) ) )"		2009920	4					
ANR	2010093	Condition	"err = cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate )"	180:6:5597:5696	2009920	0	True				
ANR	2010094	AssignmentExpression	"err = cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate )"		2009920	0		=			
ANR	2010095	Identifier	err		2009920	0					
ANR	2010096	CallExpression	"cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate )"		2009920	1					
ANR	2010097	Callee	cgroup_get_value_uint64		2009920	0					
ANR	2010098	Identifier	cgroup_get_value_uint64		2009920	0					
ANR	2010099	ArgumentList	memory_controller		2009920	1					
ANR	2010100	Argument	memory_controller		2009920	0					
ANR	2010101	Identifier	memory_controller		2009920	0					
ANR	2010102	Argument	"""memory.move_charge_at_immigrate"""		2009920	1					
ANR	2010103	PrimaryExpression	"""memory.move_charge_at_immigrate"""		2009920	0					
ANR	2010104	Argument	& orig_migrate		2009920	2					
ANR	2010105	UnaryOperationExpression	& orig_migrate		2009920	0					
ANR	2010106	UnaryOperator	&		2009920	0					
ANR	2010107	Identifier	orig_migrate		2009920	1					
ANR	2010108	CompoundStatement		40:108:1863:1863	2009920	1					
ANR	2010109	IfStatement	if ( err == ECGROUPVALUENOTEXIST )		2009920	0					
ANR	2010110	Condition	err == ECGROUPVALUENOTEXIST	181:7:5708:5734	2009920	0	True				
ANR	2010111	EqualityExpression	err == ECGROUPVALUENOTEXIST		2009920	0		==			
ANR	2010112	Identifier	err		2009920	0					
ANR	2010113	Identifier	ECGROUPVALUENOTEXIST		2009920	1					
ANR	2010114	CompoundStatement		41:36:1901:1901	2009920	1					
ANR	2010115	Statement	dprintf	183:4:5835:5841	2009920	0	True				
ANR	2010116	Statement	(	183:11:5842:5842	2009920	1	True				
ANR	2010117	Statement	D_PROCFAMILY	183:12:5843:5854	2009920	2	True				
ANR	2010118	Statement	","	183:24:5855:5855	2009920	3	True				
ANR	2010119	Statement	"""This kernel does not support memory usage migration; cgroup %s memory statistics"""	184:5:5862:5943	2009920	4	True				
ANR	2010120	Statement	""" will be slightly incorrect (ProcFamily %u)\\n"""	185:5:5950:5996	2009920	5	True				
ANR	2010121	Statement	","	185:52:5997:5997	2009920	6	True				
ANR	2010122	Statement	m_cgroup_string	186:5:6004:6018	2009920	7	True				
ANR	2010123	Statement	","	186:20:6019:6019	2009920	8	True				
ANR	2010124	Statement	m_root_pid	186:22:6021:6030	2009920	9	True				
ANR	2010125	Statement	)	186:32:6031:6031	2009920	10	True				
ANR	2010126	ExpressionStatement		186:33:6032:6032	2009920	11	True				
ANR	2010127	ElseStatement	else		2009920	0					
ANR	2010128	CompoundStatement		47:10:2208:2208	2009920	0					
ANR	2010129	Statement	dprintf	188:4:6050:6056	2009920	0	True				
ANR	2010130	Statement	(	188:11:6057:6057	2009920	1	True				
ANR	2010131	Statement	D_PROCFAMILY	188:12:6058:6069	2009920	2	True				
ANR	2010132	Statement	","	188:24:6070:6070	2009920	3	True				
ANR	2010133	Statement	"""Unable to read cgroup %s memory controller settings for """	189:5:6077:6134	2009920	4	True				
ANR	2010134	Statement	"""migration (ProcFamily %u): %u %s\\n"""	190:5:6141:6176	2009920	5	True				
ANR	2010135	Statement	","	190:41:6177:6177	2009920	6	True				
ANR	2010136	Statement	orig_cgroup_string	191:5:6184:6201	2009920	7	True				
ANR	2010137	Statement	","	191:23:6202:6202	2009920	8	True				
ANR	2010138	Statement	m_root_pid	191:25:6204:6213	2009920	9	True				
ANR	2010139	Statement	","	191:35:6214:6214	2009920	10	True				
ANR	2010140	Statement	err	191:37:6216:6218	2009920	11	True				
ANR	2010141	Statement	","	191:40:6219:6219	2009920	12	True				
ANR	2010142	Statement	cgroup_strerror	191:42:6221:6235	2009920	13	True				
ANR	2010143	Statement	(	191:57:6236:6236	2009920	14	True				
ANR	2010144	Statement	err	191:58:6237:6239	2009920	15	True				
ANR	2010145	Statement	)	191:61:6240:6240	2009920	16	True				
ANR	2010146	Statement	)	191:62:6241:6241	2009920	17	True				
ANR	2010147	ExpressionStatement		191:63:6242:6242	2009920	18	True				
ANR	2010148	ExpressionStatement	cgroup_free ( & orig_cgroup )	193:3:6252:6277	2009920	1	True				
ANR	2010149	CallExpression	cgroup_free ( & orig_cgroup )		2009920	0					
ANR	2010150	Callee	cgroup_free		2009920	0					
ANR	2010151	Identifier	cgroup_free		2009920	0					
ANR	2010152	ArgumentList	& orig_cgroup		2009920	1					
ANR	2010153	Argument	& orig_cgroup		2009920	0					
ANR	2010154	UnaryOperationExpression	& orig_cgroup		2009920	0					
ANR	2010155	UnaryOperator	&		2009920	0					
ANR	2010156	Identifier	orig_cgroup		2009920	1					
ANR	2010157	GotoStatement	goto after_migrate ;	194:3:6282:6300	2009920	2	True				
ANR	2010158	Identifier	after_migrate		2009920	0					
ANR	2010159	IfStatement	if ( orig_migrate != 3 )		2009920	5					
ANR	2010160	Condition	orig_migrate != 3	196:6:6312:6328	2009920	0	True				
ANR	2010161	EqualityExpression	orig_migrate != 3		2009920	0		!=			
ANR	2010162	Identifier	orig_migrate		2009920	0					
ANR	2010163	PrimaryExpression	3		2009920	1					
ANR	2010164	CompoundStatement		56:25:2495:2495	2009920	1					
ANR	2010165	ExpressionStatement	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )	197:3:6336:6387	2009920	0	True				
ANR	2010166	AssignmentExpression	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )		2009920	0		=			
ANR	2010167	Identifier	orig_cgroup		2009920	0					
ANR	2010168	CallExpression	cgroup_new_cgroup ( orig_cgroup_string )		2009920	1					
ANR	2010169	Callee	cgroup_new_cgroup		2009920	0					
ANR	2010170	Identifier	cgroup_new_cgroup		2009920	0					
ANR	2010171	ArgumentList	orig_cgroup_string		2009920	1					
ANR	2010172	Argument	orig_cgroup_string		2009920	0					
ANR	2010173	Identifier	orig_cgroup_string		2009920	0					
ANR	2010174	ExpressionStatement	"memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"	198:3:6392:6465	2009920	1	True				
ANR	2010175	AssignmentExpression	"memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		2009920	0		=			
ANR	2010176	Identifier	memory_controller		2009920	0					
ANR	2010177	CallExpression	"cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		2009920	1					
ANR	2010178	Callee	cgroup_add_controller		2009920	0					
ANR	2010179	Identifier	cgroup_add_controller		2009920	0					
ANR	2010180	ArgumentList	orig_cgroup		2009920	1					
ANR	2010181	Argument	orig_cgroup		2009920	0					
ANR	2010182	Identifier	orig_cgroup		2009920	0					
ANR	2010183	Argument	MEMORY_CONTROLLER		2009920	1					
ANR	2010184	Identifier	MEMORY_CONTROLLER		2009920	0					
ANR	2010185	ExpressionStatement	ASSERT ( memory_controller != NULL )	199:3:6470:6504	2009920	2	True				
ANR	2010186	CallExpression	ASSERT ( memory_controller != NULL )		2009920	0					
ANR	2010187	Callee	ASSERT		2009920	0					
ANR	2010188	Identifier	ASSERT		2009920	0					
ANR	2010189	ArgumentList	memory_controller != NULL		2009920	1					
ANR	2010190	Argument	memory_controller != NULL		2009920	0					
ANR	2010191	EqualityExpression	memory_controller != NULL		2009920	0		!=			
ANR	2010192	Identifier	memory_controller		2009920	0					
ANR	2010193	Identifier	NULL		2009920	1					
ANR	2010194	ExpressionStatement	"cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , 3 )"	200:3:6549:6629	2009920	3	True				
ANR	2010195	CallExpression	"cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , 3 )"		2009920	0					
ANR	2010196	Callee	cgroup_add_value_uint64		2009920	0					
ANR	2010197	Identifier	cgroup_add_value_uint64		2009920	0					
ANR	2010198	ArgumentList	memory_controller		2009920	1					
ANR	2010199	Argument	memory_controller		2009920	0					
ANR	2010200	Identifier	memory_controller		2009920	0					
ANR	2010201	Argument	"""memory.move_charge_at_immigrate"""		2009920	1					
ANR	2010202	PrimaryExpression	"""memory.move_charge_at_immigrate"""		2009920	0					
ANR	2010203	Argument	3		2009920	2					
ANR	2010204	PrimaryExpression	3		2009920	0					
ANR	2010205	IfStatement	if ( ( err = cgroup_modify_cgroup ( orig_cgroup ) ) )		2009920	4					
ANR	2010206	Condition	err = cgroup_modify_cgroup ( orig_cgroup )	201:7:6638:6678	2009920	0	True				
ANR	2010207	AssignmentExpression	err = cgroup_modify_cgroup ( orig_cgroup )		2009920	0		=			
ANR	2010208	Identifier	err		2009920	0					
ANR	2010209	CallExpression	cgroup_modify_cgroup ( orig_cgroup )		2009920	1					
ANR	2010210	Callee	cgroup_modify_cgroup		2009920	0					
ANR	2010211	Identifier	cgroup_modify_cgroup		2009920	0					
ANR	2010212	ArgumentList	orig_cgroup		2009920	1					
ANR	2010213	Argument	orig_cgroup		2009920	0					
ANR	2010214	Identifier	orig_cgroup		2009920	0					
ANR	2010215	CompoundStatement		61:50:2845:2845	2009920	1					
ANR	2010216	Statement	dprintf	203:4:6725:6731	2009920	0	True				
ANR	2010217	Statement	(	203:11:6732:6732	2009920	1	True				
ANR	2010218	Statement	D_ALWAYS	203:12:6733:6740	2009920	2	True				
ANR	2010219	Statement	","	203:20:6741:6741	2009920	3	True				
ANR	2010220	Statement	"""Unable to change cgroup %s memory controller settings for migration. """	204:5:6748:6818	2009920	4	True				
ANR	2010221	Statement	"""Some memory accounting will be inaccurate (ProcFamily %u): %u %s\\n"""	205:5:6825:6892	2009920	5	True				
ANR	2010222	Statement	","	205:73:6893:6893	2009920	6	True				
ANR	2010223	Statement	orig_cgroup_string	206:5:6900:6917	2009920	7	True				
ANR	2010224	Statement	","	206:23:6918:6918	2009920	8	True				
ANR	2010225	Statement	m_root_pid	206:25:6920:6929	2009920	9	True				
ANR	2010226	Statement	","	206:35:6930:6930	2009920	10	True				
ANR	2010227	Statement	err	206:37:6932:6934	2009920	11	True				
ANR	2010228	Statement	","	206:40:6935:6935	2009920	12	True				
ANR	2010229	Statement	cgroup_strerror	206:42:6937:6951	2009920	13	True				
ANR	2010230	Statement	(	206:57:6952:6952	2009920	14	True				
ANR	2010231	Statement	err	206:58:6953:6955	2009920	15	True				
ANR	2010232	Statement	)	206:61:6956:6956	2009920	16	True				
ANR	2010233	Statement	)	206:62:6957:6957	2009920	17	True				
ANR	2010234	ExpressionStatement		206:63:6958:6958	2009920	18	True				
ANR	2010235	ElseStatement	else		2009920	0					
ANR	2010236	CompoundStatement		67:10:3134:3134	2009920	0					
ANR	2010237	ExpressionStatement	changed_orig = true	208:4:6976:6995	2009920	0	True				
ANR	2010238	AssignmentExpression	changed_orig = true		2009920	0		=			
ANR	2010239	Identifier	changed_orig		2009920	0					
ANR	2010240	Identifier	true		2009920	1					
ANR	2010241	ExpressionStatement	cgroup_free ( & orig_cgroup )	211:2:7008:7033	2009920	6	True				
ANR	2010242	CallExpression	cgroup_free ( & orig_cgroup )		2009920	0					
ANR	2010243	Callee	cgroup_free		2009920	0					
ANR	2010244	Identifier	cgroup_free		2009920	0					
ANR	2010245	ArgumentList	& orig_cgroup		2009920	1					
ANR	2010246	Argument	& orig_cgroup		2009920	0					
ANR	2010247	UnaryOperationExpression	& orig_cgroup		2009920	0					
ANR	2010248	UnaryOperator	&		2009920	0					
ANR	2010249	Identifier	orig_cgroup		2009920	1					
ANR	2010250	Label	after_migrate :	214:0:7039:7052	2009920	8	True				
ANR	2010251	Identifier	after_migrate		2009920	0					
ANR	2010252	ExpressionStatement	orig_cgroup = NULL	216:1:7056:7074	2009920	9	True				
ANR	2010253	AssignmentExpression	orig_cgroup = NULL		2009920	0		=			
ANR	2010254	Identifier	orig_cgroup		2009920	0					
ANR	2010255	Identifier	NULL		2009920	1					
ANR	2010256	Statement	ASSERT	217:1:7077:7082	2009920	10	True				
ANR	2010257	Statement	(	217:8:7084:7084	2009920	11	True				
ANR	2010258	Statement	m_cgroup_string	217:9:7085:7099	2009920	12	True				
ANR	2010259	Statement	!=	217:25:7101:7102	2009920	13	True				
ANR	2010260	Statement	NULL	217:28:7104:7107	2009920	14	True				
ANR	2010261	Statement	)	217:32:7108:7108	2009920	15	True				
ANR	2010262	ExpressionStatement	"err = cgroup_attach_task_pid ( m_cgroup , pid )"	218:1:7111:7154	2009920	16	True				
ANR	2010263	AssignmentExpression	"err = cgroup_attach_task_pid ( m_cgroup , pid )"		2009920	0		=			
ANR	2010264	Identifier	err		2009920	0					
ANR	2010265	CallExpression	"cgroup_attach_task_pid ( m_cgroup , pid )"		2009920	1					
ANR	2010266	Callee	cgroup_attach_task_pid		2009920	0					
ANR	2010267	Identifier	cgroup_attach_task_pid		2009920	0					
ANR	2010268	ArgumentList	m_cgroup		2009920	1					
ANR	2010269	Argument	m_cgroup		2009920	0					
ANR	2010270	Identifier	m_cgroup		2009920	0					
ANR	2010271	Argument	pid		2009920	1					
ANR	2010272	Identifier	pid		2009920	0					
ANR	2010273	IfStatement	if ( err )		2009920	17					
ANR	2010274	Condition	err	219:5:7161:7163	2009920	0	True				
ANR	2010275	Identifier	err		2009920	0					
ANR	2010276	CompoundStatement		79:10:3330:3330	2009920	1					
ANR	2010277	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"" , pid , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	220:2:7170:7322	2009920	0	True				
ANR	2010278	CallExpression	"dprintf ( D_PROCFAMILY , ""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"" , pid , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2009920	0					
ANR	2010279	Callee	dprintf		2009920	0					
ANR	2010280	Identifier	dprintf		2009920	0					
ANR	2010281	ArgumentList	D_PROCFAMILY		2009920	1					
ANR	2010282	Argument	D_PROCFAMILY		2009920	0					
ANR	2010283	Identifier	D_PROCFAMILY		2009920	0					
ANR	2010284	Argument	"""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"""		2009920	1					
ANR	2010285	PrimaryExpression	"""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"""		2009920	0					
ANR	2010286	Argument	pid		2009920	2					
ANR	2010287	Identifier	pid		2009920	0					
ANR	2010288	Argument	m_cgroup_string		2009920	3					
ANR	2010289	Identifier	m_cgroup_string		2009920	0					
ANR	2010290	Argument	m_root_pid		2009920	4					
ANR	2010291	Identifier	m_root_pid		2009920	0					
ANR	2010292	Argument	err		2009920	5					
ANR	2010293	Identifier	err		2009920	0					
ANR	2010294	Argument	cgroup_strerror ( err )		2009920	6					
ANR	2010295	CallExpression	cgroup_strerror ( err )		2009920	0					
ANR	2010296	Callee	cgroup_strerror		2009920	0					
ANR	2010297	Identifier	cgroup_strerror		2009920	0					
ANR	2010298	ArgumentList	err		2009920	1					
ANR	2010299	Argument	err		2009920	0					
ANR	2010300	Identifier	err		2009920	0					
ANR	2010301	IfStatement	if ( changed_orig )		2009920	18					
ANR	2010302	Condition	changed_orig	225:5:7333:7344	2009920	0	True				
ANR	2010303	Identifier	changed_orig		2009920	0					
ANR	2010304	CompoundStatement		85:19:3511:3511	2009920	1					
ANR	2010305	IfStatement	if ( ( orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string ) ) )		2009920	0					
ANR	2010306	Condition	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )	226:6:7355:7407	2009920	0	True				
ANR	2010307	AssignmentExpression	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )		2009920	0		=			
ANR	2010308	Identifier	orig_cgroup		2009920	0					
ANR	2010309	CallExpression	cgroup_new_cgroup ( orig_cgroup_string )		2009920	1					
ANR	2010310	Callee	cgroup_new_cgroup		2009920	0					
ANR	2010311	Identifier	cgroup_new_cgroup		2009920	0					
ANR	2010312	ArgumentList	orig_cgroup_string		2009920	1					
ANR	2010313	Argument	orig_cgroup_string		2009920	0					
ANR	2010314	Identifier	orig_cgroup_string		2009920	0					
ANR	2010315	CompoundStatement		86:61:3574:3574	2009920	1					
ANR	2010316	GotoStatement	goto after_restore ;	227:3:7415:7433	2009920	0	True				
ANR	2010317	Identifier	after_restore		2009920	0					
ANR	2010318	IfStatement	"if ( ( ( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL ) && ( ! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate ) ) )"		2009920	1					
ANR	2010319	Condition	"( ( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL ) && ( ! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate ) )"	229:6:7445:7630	2009920	0	True				
ANR	2010320	AndExpression	"( ( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL ) && ( ! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate ) )"		2009920	0		&&			
ANR	2010321	EqualityExpression	"( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL"		2009920	0		!=			
ANR	2010322	AssignmentExpression	"memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		2009920	0		=			
ANR	2010323	Identifier	memory_controller		2009920	0					
ANR	2010324	CallExpression	"cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		2009920	1					
ANR	2010325	Callee	cgroup_add_controller		2009920	0					
ANR	2010326	Identifier	cgroup_add_controller		2009920	0					
ANR	2010327	ArgumentList	orig_cgroup		2009920	1					
ANR	2010328	Argument	orig_cgroup		2009920	0					
ANR	2010329	Identifier	orig_cgroup		2009920	0					
ANR	2010330	Argument	MEMORY_CONTROLLER		2009920	1					
ANR	2010331	Identifier	MEMORY_CONTROLLER		2009920	0					
ANR	2010332	Identifier	NULL		2009920	1					
ANR	2010333	UnaryOperationExpression	"! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate )"		2009920	1					
ANR	2010334	UnaryOperator	!		2009920	0					
ANR	2010335	CallExpression	"cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate )"		2009920	1					
ANR	2010336	Callee	cgroup_add_value_uint64		2009920	0					
ANR	2010337	Identifier	cgroup_add_value_uint64		2009920	0					
ANR	2010338	ArgumentList	memory_controller		2009920	1					
ANR	2010339	Argument	memory_controller		2009920	0					
ANR	2010340	Identifier	memory_controller		2009920	0					
ANR	2010341	Argument	"""memory.move_charge_at_immigrate"""		2009920	1					
ANR	2010342	PrimaryExpression	"""memory.move_charge_at_immigrate"""		2009920	0					
ANR	2010343	Argument	orig_migrate		2009920	2					
ANR	2010344	Identifier	orig_migrate		2009920	0					
ANR	2010345	CompoundStatement		90:99:3797:3797	2009920	1					
ANR	2010346	ExpressionStatement	cgroup_modify_cgroup ( orig_cgroup )	231:3:7638:7671	2009920	0	True				
ANR	2010347	CallExpression	cgroup_modify_cgroup ( orig_cgroup )		2009920	0					
ANR	2010348	Callee	cgroup_modify_cgroup		2009920	0					
ANR	2010349	Identifier	cgroup_modify_cgroup		2009920	0					
ANR	2010350	ArgumentList	orig_cgroup		2009920	1					
ANR	2010351	Argument	orig_cgroup		2009920	0					
ANR	2010352	Identifier	orig_cgroup		2009920	0					
ANR	2010353	ExpressionStatement	cgroup_free ( & orig_cgroup )	233:2:7679:7704	2009920	2	True				
ANR	2010354	CallExpression	cgroup_free ( & orig_cgroup )		2009920	0					
ANR	2010355	Callee	cgroup_free		2009920	0					
ANR	2010356	Identifier	cgroup_free		2009920	0					
ANR	2010357	ArgumentList	& orig_cgroup		2009920	1					
ANR	2010358	Argument	& orig_cgroup		2009920	0					
ANR	2010359	UnaryOperationExpression	& orig_cgroup		2009920	0					
ANR	2010360	UnaryOperator	&		2009920	0					
ANR	2010361	Identifier	orig_cgroup		2009920	1					
ANR	2010362	Label	after_restore :	236:0:7710:7723	2009920	19	True				
ANR	2010363	Identifier	after_restore		2009920	0					
ANR	2010364	IfStatement	if ( orig_cgroup_string != NULL )		2009920	20					
ANR	2010365	Condition	orig_cgroup_string != NULL	237:5:7730:7755	2009920	0	True				
ANR	2010366	EqualityExpression	orig_cgroup_string != NULL		2009920	0		!=			
ANR	2010367	Identifier	orig_cgroup_string		2009920	0					
ANR	2010368	Identifier	NULL		2009920	1					
ANR	2010369	CompoundStatement		97:33:3922:3922	2009920	1					
ANR	2010370	ExpressionStatement	free ( orig_cgroup_string )	238:2:7762:7786	2009920	0	True				
ANR	2010371	CallExpression	free ( orig_cgroup_string )		2009920	0					
ANR	2010372	Callee	free		2009920	0					
ANR	2010373	Identifier	free		2009920	0					
ANR	2010374	ArgumentList	orig_cgroup_string		2009920	1					
ANR	2010375	Argument	orig_cgroup_string		2009920	0					
ANR	2010376	Identifier	orig_cgroup_string		2009920	0					
ANR	2010377	ReturnStatement	return err ;	240:1:7792:7802	2009920	21	True				
ANR	2010378	Identifier	err		2009920	0					
ANR	2010379	ReturnType	int		2009920	1					
ANR	2010380	Identifier	ProcFamily :: migrate_to_cgroup		2009920	2					
ANR	2010381	ParameterList	pid_t pid		2009920	3					
ANR	2010382	Parameter	pid_t pid	140:30:3824:3832	2009920	0	True				
ANR	2010383	ParameterType	pid_t		2009920	0					
ANR	2010384	Identifier	pid		2009920	1					
ANR	2010385	CFGEntryNode	ENTRY		2009920		True				
ANR	2010386	CFGExitNode	EXIT		2009920		True				
ANR	2010387	Symbol	MEMORY_CONTROLLER		2009920						
ANR	2010388	Symbol	D_PROCFAMILY		2009920						
ANR	2010389	Symbol	cgroup_get_value_uint64		2009920						
ANR	2010390	Symbol	orig_cgroup_string		2009920						
ANR	2010391	Symbol	cgroup_get_controller		2009920						
ANR	2010392	Symbol	orig_migrate		2009920						
ANR	2010393	Symbol	pid		2009920						
ANR	2010394	Symbol	& orig_migrate		2009920						
ANR	2010395	Symbol	cgroup_strerror		2009920						
ANR	2010396	Symbol	cgroup_add_value_uint64		2009920						
ANR	2010397	Symbol	cgroup_get_current_controller_path		2009920						
ANR	2010398	Symbol	strcmp		2009920						
ANR	2010399	Symbol	cgroup_add_controller		2009920						
ANR	2010400	Symbol	NULL		2009920						
ANR	2010401	Symbol	err		2009920						
ANR	2010402	Symbol	cgroup_get_cgroup		2009920						
ANR	2010403	Symbol	false		2009920						
ANR	2010404	Symbol	m_cgroup_memory_mounted		2009920						
ANR	2010405	Symbol	cgroup_new_cgroup		2009920						
ANR	2010406	Symbol	cgroup_attach_task_pid		2009920						
ANR	2010407	Symbol	cgroup_modify_cgroup		2009920						
ANR	2010408	Symbol	m_cgroup		2009920						
ANR	2010409	Symbol	& orig_cgroup		2009920						
ANR	2010410	Symbol	orig_cgroup		2009920						
ANR	2010411	Symbol	changed_orig		2009920						
ANR	2010412	Symbol	& orig_cgroup_string		2009920						
ANR	2010413	Symbol	true		2009920						
ANR	2010414	Symbol	memory_controller		2009920						
ANR	2010415	Symbol	ECGROUPVALUENOTEXIST		2009920						
ANR	2010416	Symbol	m_cgroup_string		2009920						
ANR	2010417	Symbol	m_root_pid		2009920						
ANR	2010418	Function	ProcFamily :: set_cgroup	243:0:7807:13563							
ANR	2010419	FunctionDef	ProcFamily :: set_cgroup (const char * cgroup)		2010418	0					
ANR	2010420	CompoundStatement		245:0:7855:13563	2010418	0					
ANR	2010421	IdentifierDeclStatement	int err ;	246:1:7858:7865	2010418	0	True				
ANR	2010422	IdentifierDecl	err		2010418	0					
ANR	2010423	IdentifierDeclType	int		2010418	0					
ANR	2010424	Identifier	err		2010418	1					
ANR	2010425	IdentifierDeclStatement	"bool has_cgroup = true , changed_cgroup = false ;"	247:1:7868:7914	2010418	1	True				
ANR	2010426	IdentifierDecl	has_cgroup = true		2010418	0					
ANR	2010427	IdentifierDeclType	bool		2010418	0					
ANR	2010428	Identifier	has_cgroup		2010418	1					
ANR	2010429	AssignmentExpression	has_cgroup = true		2010418	2		=			
ANR	2010430	Identifier	true		2010418	0					
ANR	2010431	Identifier	true		2010418	1					
ANR	2010432	IdentifierDecl	changed_cgroup = false		2010418	1					
ANR	2010433	IdentifierDeclType	bool		2010418	0					
ANR	2010434	Identifier	changed_cgroup		2010418	1					
ANR	2010435	AssignmentExpression	changed_cgroup = false		2010418	2		=			
ANR	2010436	Identifier	false		2010418	0					
ANR	2010437	Identifier	false		2010418	1					
ANR	2010438	IfStatement	"if ( ! strcmp ( cgroup , ""/"" ) )"		2010418	2					
ANR	2010439	Condition	"! strcmp ( cgroup , ""/"" )"	249:5:7922:7941	2010418	0	True				
ANR	2010440	UnaryOperationExpression	"! strcmp ( cgroup , ""/"" )"		2010418	0					
ANR	2010441	UnaryOperator	!		2010418	0					
ANR	2010442	CallExpression	"strcmp ( cgroup , ""/"" )"		2010418	1					
ANR	2010443	Callee	strcmp		2010418	0					
ANR	2010444	Identifier	strcmp		2010418	0					
ANR	2010445	ArgumentList	cgroup		2010418	1					
ANR	2010446	Argument	cgroup		2010418	0					
ANR	2010447	Identifier	cgroup		2010418	0					
ANR	2010448	Argument	"""/"""		2010418	1					
ANR	2010449	PrimaryExpression	"""/"""		2010418	0					
ANR	2010450	CompoundStatement		5:27:88:88	2010418	1					
ANR	2010451	Statement	dprintf	250:2:7948:7954	2010418	0	True				
ANR	2010452	Statement	(	250:9:7955:7955	2010418	1	True				
ANR	2010453	Statement	D_ALWAYS	250:10:7956:7963	2010418	2	True				
ANR	2010454	Statement	","	250:18:7964:7964	2010418	3	True				
ANR	2010455	Statement	"""Cowardly refusing to monitor the root cgroup out """	251:3:7969:8019	2010418	4	True				
ANR	2010456	Statement	"""of security concerns.\\n"""	252:3:8024:8048	2010418	5	True				
ANR	2010457	Statement	)	252:28:8049:8049	2010418	6	True				
ANR	2010458	ExpressionStatement		252:29:8050:8050	2010418	7	True				
ANR	2010459	ReturnStatement	return 1 ;	253:2:8054:8062	2010418	8	True				
ANR	2010460	PrimaryExpression	1		2010418	0					
ANR	2010461	IfStatement	if ( m_cgroup_initialized == false )		2010418	3					
ANR	2010462	Condition	m_cgroup_initialized == false	257:5:8116:8144	2010418	0	True				
ANR	2010463	EqualityExpression	m_cgroup_initialized == false		2010418	0		==			
ANR	2010464	Identifier	m_cgroup_initialized		2010418	0					
ANR	2010465	Identifier	false		2010418	1					
ANR	2010466	CompoundStatement		18:2:411:468	2010418	1					
ANR	2010467	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Initializing cgroup library.\\n"" )"	258:2:8151:8206	2010418	0	True				
ANR	2010468	CallExpression	"dprintf ( D_PROCFAMILY , ""Initializing cgroup library.\\n"" )"		2010418	0					
ANR	2010469	Callee	dprintf		2010418	0					
ANR	2010470	Identifier	dprintf		2010418	0					
ANR	2010471	ArgumentList	D_PROCFAMILY		2010418	1					
ANR	2010472	Argument	D_PROCFAMILY		2010418	0					
ANR	2010473	Identifier	D_PROCFAMILY		2010418	0					
ANR	2010474	Argument	"""Initializing cgroup library.\\n"""		2010418	1					
ANR	2010475	PrimaryExpression	"""Initializing cgroup library.\\n"""		2010418	0					
ANR	2010476	ExpressionStatement	cgroup_init ( )	259:2:8210:8223	2010418	1	True				
ANR	2010477	CallExpression	cgroup_init ( )		2010418	0					
ANR	2010478	Callee	cgroup_init		2010418	0					
ANR	2010479	Identifier	cgroup_init		2010418	0					
ANR	2010480	ArgumentList			2010418	1					
ANR	2010481	IdentifierDeclStatement	void * handle ;	260:2:8227:8239	2010418	2	True				
ANR	2010482	IdentifierDecl	* handle		2010418	0					
ANR	2010483	IdentifierDeclType	void *		2010418	0					
ANR	2010484	Identifier	handle		2010418	1					
ANR	2010485	IdentifierDeclStatement	controller_data info ;	261:2:8243:8263	2010418	3	True				
ANR	2010486	IdentifierDecl	info		2010418	0					
ANR	2010487	IdentifierDeclType	controller_data		2010418	0					
ANR	2010488	Identifier	info		2010418	1					
ANR	2010489	IdentifierDeclStatement	"int ret = cgroup_get_all_controller_begin ( & handle , & info ) ;"	262:2:8267:8324	2010418	4	True				
ANR	2010490	IdentifierDecl	"ret = cgroup_get_all_controller_begin ( & handle , & info )"		2010418	0					
ANR	2010491	IdentifierDeclType	int		2010418	0					
ANR	2010492	Identifier	ret		2010418	1					
ANR	2010493	AssignmentExpression	"ret = cgroup_get_all_controller_begin ( & handle , & info )"		2010418	2		=			
ANR	2010494	Identifier	ret		2010418	0					
ANR	2010495	CallExpression	"cgroup_get_all_controller_begin ( & handle , & info )"		2010418	1					
ANR	2010496	Callee	cgroup_get_all_controller_begin		2010418	0					
ANR	2010497	Identifier	cgroup_get_all_controller_begin		2010418	0					
ANR	2010498	ArgumentList	& handle		2010418	1					
ANR	2010499	Argument	& handle		2010418	0					
ANR	2010500	UnaryOperationExpression	& handle		2010418	0					
ANR	2010501	UnaryOperator	&		2010418	0					
ANR	2010502	Identifier	handle		2010418	1					
ANR	2010503	Argument	& info		2010418	1					
ANR	2010504	UnaryOperationExpression	& info		2010418	0					
ANR	2010505	UnaryOperator	&		2010418	0					
ANR	2010506	Identifier	info		2010418	1					
ANR	2010507	WhileStatement	while ( ret == 0 )		2010418	5					
ANR	2010508	Condition	ret == 0	263:9:8335:8342	2010418	0	True				
ANR	2010509	EqualityExpression	ret == 0		2010418	0		==			
ANR	2010510	Identifier	ret		2010418	0					
ANR	2010511	PrimaryExpression	0		2010418	1					
ANR	2010512	CompoundStatement		19:19:489:489	2010418	1					
ANR	2010513	IfStatement	"if ( strcmp ( info . name , MEMORY_CONTROLLER ) == 0 )"		2010418	0					
ANR	2010514	Condition	"strcmp ( info . name , MEMORY_CONTROLLER ) == 0"	264:7:8354:8394	2010418	0	True				
ANR	2010515	EqualityExpression	"strcmp ( info . name , MEMORY_CONTROLLER ) == 0"		2010418	0		==			
ANR	2010516	CallExpression	"strcmp ( info . name , MEMORY_CONTROLLER )"		2010418	0					
ANR	2010517	Callee	strcmp		2010418	0					
ANR	2010518	Identifier	strcmp		2010418	0					
ANR	2010519	ArgumentList	info . name		2010418	1					
ANR	2010520	Argument	info . name		2010418	0					
ANR	2010521	MemberAccess	info . name		2010418	0					
ANR	2010522	Identifier	info		2010418	0					
ANR	2010523	Identifier	name		2010418	1					
ANR	2010524	Argument	MEMORY_CONTROLLER		2010418	1					
ANR	2010525	Identifier	MEMORY_CONTROLLER		2010418	0					
ANR	2010526	PrimaryExpression	0		2010418	1					
ANR	2010527	CompoundStatement		20:50:541:541	2010418	1					
ANR	2010528	ExpressionStatement	m_cgroup_memory_mounted = ( info . hierarchy != 0 )	265:4:8403:8450	2010418	0	True				
ANR	2010529	AssignmentExpression	m_cgroup_memory_mounted = ( info . hierarchy != 0 )		2010418	0		=			
ANR	2010530	Identifier	m_cgroup_memory_mounted		2010418	0					
ANR	2010531	EqualityExpression	info . hierarchy != 0		2010418	1		!=			
ANR	2010532	MemberAccess	info . hierarchy		2010418	0					
ANR	2010533	Identifier	info		2010418	0					
ANR	2010534	Identifier	hierarchy		2010418	1					
ANR	2010535	PrimaryExpression	0		2010418	1					
ANR	2010536	ElseStatement	else		2010418	0					
ANR	2010537	IfStatement	"if ( strcmp ( info . name , CPUACCT_CONTROLLER ) == 0 )"		2010418	0					
ANR	2010538	Condition	"strcmp ( info . name , CPUACCT_CONTROLLER ) == 0"	266:14:8466:8507	2010418	0	True				
ANR	2010539	EqualityExpression	"strcmp ( info . name , CPUACCT_CONTROLLER ) == 0"		2010418	0		==			
ANR	2010540	CallExpression	"strcmp ( info . name , CPUACCT_CONTROLLER )"		2010418	0					
ANR	2010541	Callee	strcmp		2010418	0					
ANR	2010542	Identifier	strcmp		2010418	0					
ANR	2010543	ArgumentList	info . name		2010418	1					
ANR	2010544	Argument	info . name		2010418	0					
ANR	2010545	MemberAccess	info . name		2010418	0					
ANR	2010546	Identifier	info		2010418	0					
ANR	2010547	Identifier	name		2010418	1					
ANR	2010548	Argument	CPUACCT_CONTROLLER		2010418	1					
ANR	2010549	Identifier	CPUACCT_CONTROLLER		2010418	0					
ANR	2010550	PrimaryExpression	0		2010418	1					
ANR	2010551	CompoundStatement		22:58:654:654	2010418	1					
ANR	2010552	ExpressionStatement	m_cgroup_cpuacct_mounted = ( info . hierarchy != 0 )	267:4:8516:8564	2010418	0	True				
ANR	2010553	AssignmentExpression	m_cgroup_cpuacct_mounted = ( info . hierarchy != 0 )		2010418	0		=			
ANR	2010554	Identifier	m_cgroup_cpuacct_mounted		2010418	0					
ANR	2010555	EqualityExpression	info . hierarchy != 0		2010418	1		!=			
ANR	2010556	MemberAccess	info . hierarchy		2010418	0					
ANR	2010557	Identifier	info		2010418	0					
ANR	2010558	Identifier	hierarchy		2010418	1					
ANR	2010559	PrimaryExpression	0		2010418	1					
ANR	2010560	ElseStatement	else		2010418	0					
ANR	2010561	IfStatement	"if ( strcmp ( info . name , FREEZE_CONTROLLER ) == 0 )"		2010418	0					
ANR	2010562	Condition	"strcmp ( info . name , FREEZE_CONTROLLER ) == 0"	268:14:8580:8620	2010418	0	True				
ANR	2010563	EqualityExpression	"strcmp ( info . name , FREEZE_CONTROLLER ) == 0"		2010418	0		==			
ANR	2010564	CallExpression	"strcmp ( info . name , FREEZE_CONTROLLER )"		2010418	0					
ANR	2010565	Callee	strcmp		2010418	0					
ANR	2010566	Identifier	strcmp		2010418	0					
ANR	2010567	ArgumentList	info . name		2010418	1					
ANR	2010568	Argument	info . name		2010418	0					
ANR	2010569	MemberAccess	info . name		2010418	0					
ANR	2010570	Identifier	info		2010418	0					
ANR	2010571	Identifier	name		2010418	1					
ANR	2010572	Argument	FREEZE_CONTROLLER		2010418	1					
ANR	2010573	Identifier	FREEZE_CONTROLLER		2010418	0					
ANR	2010574	PrimaryExpression	0		2010418	1					
ANR	2010575	CompoundStatement		24:57:767:767	2010418	1					
ANR	2010576	ExpressionStatement	m_cgroup_freezer_mounted = ( info . hierarchy != 0 )	269:4:8629:8677	2010418	0	True				
ANR	2010577	AssignmentExpression	m_cgroup_freezer_mounted = ( info . hierarchy != 0 )		2010418	0		=			
ANR	2010578	Identifier	m_cgroup_freezer_mounted		2010418	0					
ANR	2010579	EqualityExpression	info . hierarchy != 0		2010418	1		!=			
ANR	2010580	MemberAccess	info . hierarchy		2010418	0					
ANR	2010581	Identifier	info		2010418	0					
ANR	2010582	Identifier	hierarchy		2010418	1					
ANR	2010583	PrimaryExpression	0		2010418	1					
ANR	2010584	ElseStatement	else		2010418	0					
ANR	2010585	IfStatement	"if ( strcmp ( info . name , BLOCK_CONTROLLER ) == 0 )"		2010418	0					
ANR	2010586	Condition	"strcmp ( info . name , BLOCK_CONTROLLER ) == 0"	270:14:8693:8732	2010418	0	True				
ANR	2010587	EqualityExpression	"strcmp ( info . name , BLOCK_CONTROLLER ) == 0"		2010418	0		==			
ANR	2010588	CallExpression	"strcmp ( info . name , BLOCK_CONTROLLER )"		2010418	0					
ANR	2010589	Callee	strcmp		2010418	0					
ANR	2010590	Identifier	strcmp		2010418	0					
ANR	2010591	ArgumentList	info . name		2010418	1					
ANR	2010592	Argument	info . name		2010418	0					
ANR	2010593	MemberAccess	info . name		2010418	0					
ANR	2010594	Identifier	info		2010418	0					
ANR	2010595	Identifier	name		2010418	1					
ANR	2010596	Argument	BLOCK_CONTROLLER		2010418	1					
ANR	2010597	Identifier	BLOCK_CONTROLLER		2010418	0					
ANR	2010598	PrimaryExpression	0		2010418	1					
ANR	2010599	CompoundStatement		26:56:879:879	2010418	1					
ANR	2010600	ExpressionStatement	m_cgroup_block_mounted = ( info . hierarchy != 0 )	271:4:8741:8787	2010418	0	True				
ANR	2010601	AssignmentExpression	m_cgroup_block_mounted = ( info . hierarchy != 0 )		2010418	0		=			
ANR	2010602	Identifier	m_cgroup_block_mounted		2010418	0					
ANR	2010603	EqualityExpression	info . hierarchy != 0		2010418	1		!=			
ANR	2010604	MemberAccess	info . hierarchy		2010418	0					
ANR	2010605	Identifier	info		2010418	0					
ANR	2010606	Identifier	hierarchy		2010418	1					
ANR	2010607	PrimaryExpression	0		2010418	1					
ANR	2010608	ExpressionStatement	"ret = cgroup_get_all_controller_next ( & handle , & info )"	273:3:8797:8849	2010418	1	True				
ANR	2010609	AssignmentExpression	"ret = cgroup_get_all_controller_next ( & handle , & info )"		2010418	0		=			
ANR	2010610	Identifier	ret		2010418	0					
ANR	2010611	CallExpression	"cgroup_get_all_controller_next ( & handle , & info )"		2010418	1					
ANR	2010612	Callee	cgroup_get_all_controller_next		2010418	0					
ANR	2010613	Identifier	cgroup_get_all_controller_next		2010418	0					
ANR	2010614	ArgumentList	& handle		2010418	1					
ANR	2010615	Argument	& handle		2010418	0					
ANR	2010616	UnaryOperationExpression	& handle		2010418	0					
ANR	2010617	UnaryOperator	&		2010418	0					
ANR	2010618	Identifier	handle		2010418	1					
ANR	2010619	Argument	& info		2010418	1					
ANR	2010620	UnaryOperationExpression	& info		2010418	0					
ANR	2010621	UnaryOperator	&		2010418	0					
ANR	2010622	Identifier	info		2010418	1					
ANR	2010623	ExpressionStatement	cgroup_get_all_controller_end ( & handle )	275:2:8857:8895	2010418	6	True				
ANR	2010624	CallExpression	cgroup_get_all_controller_end ( & handle )		2010418	0					
ANR	2010625	Callee	cgroup_get_all_controller_end		2010418	0					
ANR	2010626	Identifier	cgroup_get_all_controller_end		2010418	0					
ANR	2010627	ArgumentList	& handle		2010418	1					
ANR	2010628	Argument	& handle		2010418	0					
ANR	2010629	UnaryOperationExpression	& handle		2010418	0					
ANR	2010630	UnaryOperator	&		2010418	0					
ANR	2010631	Identifier	handle		2010418	1					
ANR	2010632	IfStatement	if ( ! m_cgroup_block_mounted )		2010418	7					
ANR	2010633	Condition	! m_cgroup_block_mounted	276:6:8903:8925	2010418	0	True				
ANR	2010634	UnaryOperationExpression	! m_cgroup_block_mounted		2010418	0					
ANR	2010635	UnaryOperator	!		2010418	0					
ANR	2010636	Identifier	m_cgroup_block_mounted		2010418	1					
ANR	2010637	CompoundStatement		32:31:1072:1072	2010418	1					
ANR	2010638	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"" )"	277:3:8933:9039	2010418	0	True				
ANR	2010639	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"" )"		2010418	0					
ANR	2010640	Callee	dprintf		2010418	0					
ANR	2010641	Identifier	dprintf		2010418	0					
ANR	2010642	ArgumentList	D_ALWAYS		2010418	1					
ANR	2010643	Argument	D_ALWAYS		2010418	0					
ANR	2010644	Identifier	D_ALWAYS		2010418	0					
ANR	2010645	Argument	"""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"""		2010418	1					
ANR	2010646	PrimaryExpression	"""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"""		2010418	0					
ANR	2010647	IfStatement	if ( ! m_cgroup_freezer_mounted )		2010418	8					
ANR	2010648	Condition	! m_cgroup_freezer_mounted	279:6:9051:9075	2010418	0	True				
ANR	2010649	UnaryOperationExpression	! m_cgroup_freezer_mounted		2010418	0					
ANR	2010650	UnaryOperator	!		2010418	0					
ANR	2010651	Identifier	m_cgroup_freezer_mounted		2010418	1					
ANR	2010652	CompoundStatement		35:33:1222:1222	2010418	1					
ANR	2010653	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"" )"	280:3:9083:9202	2010418	0	True				
ANR	2010654	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"" )"		2010418	0					
ANR	2010655	Callee	dprintf		2010418	0					
ANR	2010656	Identifier	dprintf		2010418	0					
ANR	2010657	ArgumentList	D_ALWAYS		2010418	1					
ANR	2010658	Argument	D_ALWAYS		2010418	0					
ANR	2010659	Identifier	D_ALWAYS		2010418	0					
ANR	2010660	Argument	"""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"""		2010418	1					
ANR	2010661	PrimaryExpression	"""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"""		2010418	0					
ANR	2010662	IfStatement	if ( ! m_cgroup_cpuacct_mounted )		2010418	9					
ANR	2010663	Condition	! m_cgroup_cpuacct_mounted	282:6:9214:9238	2010418	0	True				
ANR	2010664	UnaryOperationExpression	! m_cgroup_cpuacct_mounted		2010418	0					
ANR	2010665	UnaryOperator	!		2010418	0					
ANR	2010666	Identifier	m_cgroup_cpuacct_mounted		2010418	1					
ANR	2010667	CompoundStatement		38:33:1385:1385	2010418	1					
ANR	2010668	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"" )"	283:3:9246:9356	2010418	0	True				
ANR	2010669	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"" )"		2010418	0					
ANR	2010670	Callee	dprintf		2010418	0					
ANR	2010671	Identifier	dprintf		2010418	0					
ANR	2010672	ArgumentList	D_ALWAYS		2010418	1					
ANR	2010673	Argument	D_ALWAYS		2010418	0					
ANR	2010674	Identifier	D_ALWAYS		2010418	0					
ANR	2010675	Argument	"""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"""		2010418	1					
ANR	2010676	PrimaryExpression	"""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"""		2010418	0					
ANR	2010677	IfStatement	if ( ! m_cgroup_memory_mounted )		2010418	10					
ANR	2010678	Condition	! m_cgroup_memory_mounted	285:6:9368:9391	2010418	0	True				
ANR	2010679	UnaryOperationExpression	! m_cgroup_memory_mounted		2010418	0					
ANR	2010680	UnaryOperator	!		2010418	0					
ANR	2010681	Identifier	m_cgroup_memory_mounted		2010418	1					
ANR	2010682	CompoundStatement		41:32:1538:1538	2010418	1					
ANR	2010683	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"" )"	286:3:9399:9515	2010418	0	True				
ANR	2010684	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"" )"		2010418	0					
ANR	2010685	Callee	dprintf		2010418	0					
ANR	2010686	Identifier	dprintf		2010418	0					
ANR	2010687	ArgumentList	D_ALWAYS		2010418	1					
ANR	2010688	Argument	D_ALWAYS		2010418	0					
ANR	2010689	Identifier	D_ALWAYS		2010418	0					
ANR	2010690	Argument	"""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"""		2010418	1					
ANR	2010691	PrimaryExpression	"""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"""		2010418	0					
ANR	2010692	IfStatement	if ( ret != ECGEOF )		2010418	11					
ANR	2010693	Condition	ret != ECGEOF	288:6:9527:9539	2010418	0	True				
ANR	2010694	EqualityExpression	ret != ECGEOF		2010418	0		!=			
ANR	2010695	Identifier	ret		2010418	0					
ANR	2010696	Identifier	ECGEOF		2010418	1					
ANR	2010697	CompoundStatement		44:21:1686:1686	2010418	1					
ANR	2010698	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error iterating through cgroups mount information: %s\\n"" , cgroup_strerror ( ret ) )"	289:3:9547:9645	2010418	0	True				
ANR	2010699	CallExpression	"dprintf ( D_ALWAYS , ""Error iterating through cgroups mount information: %s\\n"" , cgroup_strerror ( ret ) )"		2010418	0					
ANR	2010700	Callee	dprintf		2010418	0					
ANR	2010701	Identifier	dprintf		2010418	0					
ANR	2010702	ArgumentList	D_ALWAYS		2010418	1					
ANR	2010703	Argument	D_ALWAYS		2010418	0					
ANR	2010704	Identifier	D_ALWAYS		2010418	0					
ANR	2010705	Argument	"""Error iterating through cgroups mount information: %s\\n"""		2010418	1					
ANR	2010706	PrimaryExpression	"""Error iterating through cgroups mount information: %s\\n"""		2010418	0					
ANR	2010707	Argument	cgroup_strerror ( ret )		2010418	2					
ANR	2010708	CallExpression	cgroup_strerror ( ret )		2010418	0					
ANR	2010709	Callee	cgroup_strerror		2010418	0					
ANR	2010710	Identifier	cgroup_strerror		2010418	0					
ANR	2010711	ArgumentList	ret		2010418	1					
ANR	2010712	Argument	ret		2010418	0					
ANR	2010713	Identifier	ret		2010418	0					
ANR	2010714	IfStatement	"if ( ( m_cgroup_string != NULL ) && ! strcmp ( m_cgroup_string , cgroup ) )"		2010418	4					
ANR	2010715	Condition	"( m_cgroup_string != NULL ) && ! strcmp ( m_cgroup_string , cgroup )"	295:5:9712:9772	2010418	0	True				
ANR	2010716	AndExpression	"( m_cgroup_string != NULL ) && ! strcmp ( m_cgroup_string , cgroup )"		2010418	0		&&			
ANR	2010717	EqualityExpression	m_cgroup_string != NULL		2010418	0		!=			
ANR	2010718	Identifier	m_cgroup_string		2010418	0					
ANR	2010719	Identifier	NULL		2010418	1					
ANR	2010720	UnaryOperationExpression	"! strcmp ( m_cgroup_string , cgroup )"		2010418	1					
ANR	2010721	UnaryOperator	!		2010418	0					
ANR	2010722	CallExpression	"strcmp ( m_cgroup_string , cgroup )"		2010418	1					
ANR	2010723	Callee	strcmp		2010418	0					
ANR	2010724	Identifier	strcmp		2010418	0					
ANR	2010725	ArgumentList	m_cgroup_string		2010418	1					
ANR	2010726	Argument	m_cgroup_string		2010418	0					
ANR	2010727	Identifier	m_cgroup_string		2010418	0					
ANR	2010728	Argument	cgroup		2010418	1					
ANR	2010729	Identifier	cgroup		2010418	0					
ANR	2010730	CompoundStatement		51:68:1919:1919	2010418	1					
ANR	2010731	ReturnStatement	return 0 ;	296:2:9779:9787	2010418	0	True				
ANR	2010732	PrimaryExpression	0		2010418	0					
ANR	2010733	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Setting cgroup to %s for ProcFamily %u.\\n"" , cgroup , m_root_pid )"	299:1:9794:9882	2010418	5	True				
ANR	2010734	CallExpression	"dprintf ( D_PROCFAMILY , ""Setting cgroup to %s for ProcFamily %u.\\n"" , cgroup , m_root_pid )"		2010418	0					
ANR	2010735	Callee	dprintf		2010418	0					
ANR	2010736	Identifier	dprintf		2010418	0					
ANR	2010737	ArgumentList	D_PROCFAMILY		2010418	1					
ANR	2010738	Argument	D_PROCFAMILY		2010418	0					
ANR	2010739	Identifier	D_PROCFAMILY		2010418	0					
ANR	2010740	Argument	"""Setting cgroup to %s for ProcFamily %u.\\n"""		2010418	1					
ANR	2010741	PrimaryExpression	"""Setting cgroup to %s for ProcFamily %u.\\n"""		2010418	0					
ANR	2010742	Argument	cgroup		2010418	2					
ANR	2010743	Identifier	cgroup		2010418	0					
ANR	2010744	Argument	m_root_pid		2010418	3					
ANR	2010745	Identifier	m_root_pid		2010418	0					
ANR	2010746	IfStatement	if ( m_cgroup_string )		2010418	6					
ANR	2010747	Condition	m_cgroup_string	302:5:9890:9904	2010418	0	True				
ANR	2010748	Identifier	m_cgroup_string		2010418	0					
ANR	2010749	CompoundStatement		58:22:2051:2051	2010418	1					
ANR	2010750	IfStatement	if ( m_created_cgroup )		2010418	0					
ANR	2010751	Condition	m_created_cgroup	303:6:9915:9930	2010418	0	True				
ANR	2010752	Identifier	m_created_cgroup		2010418	0					
ANR	2010753	ExpressionStatement	delete_cgroup ( m_cgroup_string )	304:3:9936:9966	2010418	1	True				
ANR	2010754	CallExpression	delete_cgroup ( m_cgroup_string )		2010418	0					
ANR	2010755	Callee	delete_cgroup		2010418	0					
ANR	2010756	Identifier	delete_cgroup		2010418	0					
ANR	2010757	ArgumentList	m_cgroup_string		2010418	1					
ANR	2010758	Argument	m_cgroup_string		2010418	0					
ANR	2010759	Identifier	m_cgroup_string		2010418	0					
ANR	2010760	ExpressionStatement	m_created_cgroup = false	305:2:9970:9994	2010418	1	True				
ANR	2010761	AssignmentExpression	m_created_cgroup = false		2010418	0		=			
ANR	2010762	Identifier	m_created_cgroup		2010418	0					
ANR	2010763	Identifier	false		2010418	1					
ANR	2010764	ExpressionStatement	free ( m_cgroup_string )	306:2:9998:10019	2010418	2	True				
ANR	2010765	CallExpression	free ( m_cgroup_string )		2010418	0					
ANR	2010766	Callee	free		2010418	0					
ANR	2010767	Identifier	free		2010418	0					
ANR	2010768	ArgumentList	m_cgroup_string		2010418	1					
ANR	2010769	Argument	m_cgroup_string		2010418	0					
ANR	2010770	Identifier	m_cgroup_string		2010418	0					
ANR	2010771	IfStatement	if ( m_cgroup )		2010418	7					
ANR	2010772	Condition	m_cgroup	308:5:10029:10036	2010418	0	True				
ANR	2010773	Identifier	m_cgroup		2010418	0					
ANR	2010774	ExpressionStatement	cgroup_free ( & m_cgroup )	309:2:10041:10063	2010418	1	True				
ANR	2010775	CallExpression	cgroup_free ( & m_cgroup )		2010418	0					
ANR	2010776	Callee	cgroup_free		2010418	0					
ANR	2010777	Identifier	cgroup_free		2010418	0					
ANR	2010778	ArgumentList	& m_cgroup		2010418	1					
ANR	2010779	Argument	& m_cgroup		2010418	0					
ANR	2010780	UnaryOperationExpression	& m_cgroup		2010418	0					
ANR	2010781	UnaryOperator	&		2010418	0					
ANR	2010782	Identifier	m_cgroup		2010418	1					
ANR	2010783	IdentifierDeclStatement	size_t cgroup_len = strlen ( cgroup ) ;	311:1:10067:10101	2010418	8	True				
ANR	2010784	IdentifierDecl	cgroup_len = strlen ( cgroup )		2010418	0					
ANR	2010785	IdentifierDeclType	size_t		2010418	0					
ANR	2010786	Identifier	cgroup_len		2010418	1					
ANR	2010787	AssignmentExpression	cgroup_len = strlen ( cgroup )		2010418	2		=			
ANR	2010788	Identifier	cgroup_len		2010418	0					
ANR	2010789	CallExpression	strlen ( cgroup )		2010418	1					
ANR	2010790	Callee	strlen		2010418	0					
ANR	2010791	Identifier	strlen		2010418	0					
ANR	2010792	ArgumentList	cgroup		2010418	1					
ANR	2010793	Argument	cgroup		2010418	0					
ANR	2010794	Identifier	cgroup		2010418	0					
ANR	2010795	ExpressionStatement	m_cgroup_string = ( char * ) malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )	312:1:10104:10165	2010418	9	True				
ANR	2010796	AssignmentExpression	m_cgroup_string = ( char * ) malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )		2010418	0		=			
ANR	2010797	Identifier	m_cgroup_string		2010418	0					
ANR	2010798	CastExpression	( char * ) malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )		2010418	1					
ANR	2010799	CastTarget	char *		2010418	0					
ANR	2010800	CallExpression	malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )		2010418	1					
ANR	2010801	Callee	malloc		2010418	0					
ANR	2010802	Identifier	malloc		2010418	0					
ANR	2010803	ArgumentList	sizeof ( char ) * ( cgroup_len + 1 )		2010418	1					
ANR	2010804	Argument	sizeof ( char ) * ( cgroup_len + 1 )		2010418	0					
ANR	2010805	MultiplicativeExpression	sizeof ( char ) * ( cgroup_len + 1 )		2010418	0		*			
ANR	2010806	SizeofExpression	sizeof ( char )		2010418	0					
ANR	2010807	Sizeof	sizeof		2010418	0					
ANR	2010808	SizeofOperand	char		2010418	1					
ANR	2010809	AdditiveExpression	cgroup_len + 1		2010418	1		+			
ANR	2010810	Identifier	cgroup_len		2010418	0					
ANR	2010811	PrimaryExpression	1		2010418	1					
ANR	2010812	ExpressionStatement	"strcpy ( m_cgroup_string , cgroup )"	313:1:10168:10199	2010418	10	True				
ANR	2010813	CallExpression	"strcpy ( m_cgroup_string , cgroup )"		2010418	0					
ANR	2010814	Callee	strcpy		2010418	0					
ANR	2010815	Identifier	strcpy		2010418	0					
ANR	2010816	ArgumentList	m_cgroup_string		2010418	1					
ANR	2010817	Argument	m_cgroup_string		2010418	0					
ANR	2010818	Identifier	m_cgroup_string		2010418	0					
ANR	2010819	Argument	cgroup		2010418	1					
ANR	2010820	Identifier	cgroup		2010418	0					
ANR	2010821	ExpressionStatement	m_cgroup = cgroup_new_cgroup ( m_cgroup_string )	314:1:10202:10247	2010418	11	True				
ANR	2010822	AssignmentExpression	m_cgroup = cgroup_new_cgroup ( m_cgroup_string )		2010418	0		=			
ANR	2010823	Identifier	m_cgroup		2010418	0					
ANR	2010824	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		2010418	1					
ANR	2010825	Callee	cgroup_new_cgroup		2010418	0					
ANR	2010826	Identifier	cgroup_new_cgroup		2010418	0					
ANR	2010827	ArgumentList	m_cgroup_string		2010418	1					
ANR	2010828	Argument	m_cgroup_string		2010418	0					
ANR	2010829	Identifier	m_cgroup_string		2010418	0					
ANR	2010830	ExpressionStatement	ASSERT ( m_cgroup != NULL )	315:1:10250:10274	2010418	12	True				
ANR	2010831	CallExpression	ASSERT ( m_cgroup != NULL )		2010418	0					
ANR	2010832	Callee	ASSERT		2010418	0					
ANR	2010833	Identifier	ASSERT		2010418	0					
ANR	2010834	ArgumentList	m_cgroup != NULL		2010418	1					
ANR	2010835	Argument	m_cgroup != NULL		2010418	0					
ANR	2010836	EqualityExpression	m_cgroup != NULL		2010418	0		!=			
ANR	2010837	Identifier	m_cgroup		2010418	0					
ANR	2010838	Identifier	NULL		2010418	1					
ANR	2010839	IfStatement	if ( ECGROUPNOTEXIST == cgroup_get_cgroup ( m_cgroup ) )		2010418	13					
ANR	2010840	Condition	ECGROUPNOTEXIST == cgroup_get_cgroup ( m_cgroup )	317:5:10282:10327	2010418	0	True				
ANR	2010841	EqualityExpression	ECGROUPNOTEXIST == cgroup_get_cgroup ( m_cgroup )		2010418	0		==			
ANR	2010842	Identifier	ECGROUPNOTEXIST		2010418	0					
ANR	2010843	CallExpression	cgroup_get_cgroup ( m_cgroup )		2010418	1					
ANR	2010844	Callee	cgroup_get_cgroup		2010418	0					
ANR	2010845	Identifier	cgroup_get_cgroup		2010418	0					
ANR	2010846	ArgumentList	m_cgroup		2010418	1					
ANR	2010847	Argument	m_cgroup		2010418	0					
ANR	2010848	Identifier	m_cgroup		2010418	0					
ANR	2010849	CompoundStatement		73:53:2474:2474	2010418	1					
ANR	2010850	ExpressionStatement	has_cgroup = false	318:2:10334:10352	2010418	0	True				
ANR	2010851	AssignmentExpression	has_cgroup = false		2010418	0		=			
ANR	2010852	Identifier	has_cgroup		2010418	0					
ANR	2010853	Identifier	false		2010418	1					
ANR	2010854	IfStatement	"if ( m_cgroup_cpuacct_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL ) ) )"		2010418	14					
ANR	2010855	Condition	"m_cgroup_cpuacct_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL ) )"	323:5:10511:10626	2010418	0	True				
ANR	2010856	AndExpression	"m_cgroup_cpuacct_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL ) )"		2010418	0		&&			
ANR	2010857	Identifier	m_cgroup_cpuacct_mounted		2010418	0					
ANR	2010858	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL )"		2010418	1		||			
ANR	2010859	EqualityExpression	has_cgroup == false		2010418	0		==			
ANR	2010860	Identifier	has_cgroup		2010418	0					
ANR	2010861	Identifier	false		2010418	1					
ANR	2010862	EqualityExpression	"cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL"		2010418	1		==			
ANR	2010863	CallExpression	"cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER )"		2010418	0					
ANR	2010864	Callee	cgroup_get_controller		2010418	0					
ANR	2010865	Identifier	cgroup_get_controller		2010418	0					
ANR	2010866	ArgumentList	m_cgroup		2010418	1					
ANR	2010867	Argument	m_cgroup		2010418	0					
ANR	2010868	Identifier	m_cgroup		2010418	0					
ANR	2010869	Argument	CPUACCT_CONTROLLER		2010418	1					
ANR	2010870	Identifier	CPUACCT_CONTROLLER		2010418	0					
ANR	2010871	Identifier	NULL		2010418	1					
ANR	2010872	CompoundStatement		79:123:2773:2773	2010418	1					
ANR	2010873	ExpressionStatement	changed_cgroup = true	324:2:10633:10654	2010418	0	True				
ANR	2010874	AssignmentExpression	changed_cgroup = true		2010418	0		=			
ANR	2010875	Identifier	changed_cgroup		2010418	0					
ANR	2010876	Identifier	true		2010418	1					
ANR	2010877	IfStatement	"if ( cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL )"		2010418	1					
ANR	2010878	Condition	"cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL"	325:6:10662:10720	2010418	0	True				
ANR	2010879	EqualityExpression	"cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL"		2010418	0		==			
ANR	2010880	CallExpression	"cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER )"		2010418	0					
ANR	2010881	Callee	cgroup_add_controller		2010418	0					
ANR	2010882	Identifier	cgroup_add_controller		2010418	0					
ANR	2010883	ArgumentList	m_cgroup		2010418	1					
ANR	2010884	Argument	m_cgroup		2010418	0					
ANR	2010885	Identifier	m_cgroup		2010418	0					
ANR	2010886	Argument	CPUACCT_CONTROLLER		2010418	1					
ANR	2010887	Identifier	CPUACCT_CONTROLLER		2010418	0					
ANR	2010888	Identifier	NULL		2010418	1					
ANR	2010889	CompoundStatement		81:67:2867:2867	2010418	1					
ANR	2010890	Statement	dprintf	326:3:10728:10734	2010418	0	True				
ANR	2010891	Statement	(	326:10:10735:10735	2010418	1	True				
ANR	2010892	Statement	D_PROCFAMILY	326:11:10736:10747	2010418	2	True				
ANR	2010893	Statement	","	326:23:10748:10748	2010418	3	True				
ANR	2010894	Statement	"""Unable to initialize cgroup CPU accounting subsystem"""	327:4:10754:10807	2010418	4	True				
ANR	2010895	Statement	""" for %s.\\n"""	328:4:10813:10824	2010418	5	True				
ANR	2010896	Statement	","	328:16:10825:10825	2010418	6	True				
ANR	2010897	Statement	m_cgroup_string	329:4:10831:10845	2010418	7	True				
ANR	2010898	Statement	)	329:19:10846:10846	2010418	8	True				
ANR	2010899	ExpressionStatement		329:20:10847:10847	2010418	9	True				
ANR	2010900	IfStatement	"if ( m_cgroup_memory_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL ) ) )"		2010418	15					
ANR	2010901	Condition	"m_cgroup_memory_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL ) )"	332:5:10861:10974	2010418	0	True				
ANR	2010902	AndExpression	"m_cgroup_memory_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL ) )"		2010418	0		&&			
ANR	2010903	Identifier	m_cgroup_memory_mounted		2010418	0					
ANR	2010904	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL )"		2010418	1		||			
ANR	2010905	EqualityExpression	has_cgroup == false		2010418	0		==			
ANR	2010906	Identifier	has_cgroup		2010418	0					
ANR	2010907	Identifier	false		2010418	1					
ANR	2010908	EqualityExpression	"cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL"		2010418	1		==			
ANR	2010909	CallExpression	"cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		2010418	0					
ANR	2010910	Callee	cgroup_get_controller		2010418	0					
ANR	2010911	Identifier	cgroup_get_controller		2010418	0					
ANR	2010912	ArgumentList	m_cgroup		2010418	1					
ANR	2010913	Argument	m_cgroup		2010418	0					
ANR	2010914	Identifier	m_cgroup		2010418	0					
ANR	2010915	Argument	MEMORY_CONTROLLER		2010418	1					
ANR	2010916	Identifier	MEMORY_CONTROLLER		2010418	0					
ANR	2010917	Identifier	NULL		2010418	1					
ANR	2010918	CompoundStatement		88:121:3121:3121	2010418	1					
ANR	2010919	ExpressionStatement	changed_cgroup = true	333:2:10981:11002	2010418	0	True				
ANR	2010920	AssignmentExpression	changed_cgroup = true		2010418	0		=			
ANR	2010921	Identifier	changed_cgroup		2010418	0					
ANR	2010922	Identifier	true		2010418	1					
ANR	2010923	IfStatement	"if ( cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL )"		2010418	1					
ANR	2010924	Condition	"cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL"	334:6:11010:11067	2010418	0	True				
ANR	2010925	EqualityExpression	"cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL"		2010418	0		==			
ANR	2010926	CallExpression	"cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER )"		2010418	0					
ANR	2010927	Callee	cgroup_add_controller		2010418	0					
ANR	2010928	Identifier	cgroup_add_controller		2010418	0					
ANR	2010929	ArgumentList	m_cgroup		2010418	1					
ANR	2010930	Argument	m_cgroup		2010418	0					
ANR	2010931	Identifier	m_cgroup		2010418	0					
ANR	2010932	Argument	MEMORY_CONTROLLER		2010418	1					
ANR	2010933	Identifier	MEMORY_CONTROLLER		2010418	0					
ANR	2010934	Identifier	NULL		2010418	1					
ANR	2010935	CompoundStatement		90:66:3214:3214	2010418	1					
ANR	2010936	Statement	dprintf	335:3:11075:11081	2010418	0	True				
ANR	2010937	Statement	(	335:10:11082:11082	2010418	1	True				
ANR	2010938	Statement	D_PROCFAMILY	335:11:11083:11094	2010418	2	True				
ANR	2010939	Statement	","	335:23:11095:11095	2010418	3	True				
ANR	2010940	Statement	"""Unable to initialize cgroup memory accounting subsystem"""	336:4:11101:11157	2010418	4	True				
ANR	2010941	Statement	""" for %s.\\n"""	337:4:11163:11174	2010418	5	True				
ANR	2010942	Statement	","	337:16:11175:11175	2010418	6	True				
ANR	2010943	Statement	cgroup	338:4:11181:11186	2010418	7	True				
ANR	2010944	Statement	)	338:10:11187:11187	2010418	8	True				
ANR	2010945	ExpressionStatement		338:11:11188:11188	2010418	9	True				
ANR	2010946	IfStatement	"if ( m_cgroup_freezer_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL ) ) )"		2010418	16					
ANR	2010947	Condition	"m_cgroup_freezer_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL ) )"	341:5:11202:11316	2010418	0	True				
ANR	2010948	AndExpression	"m_cgroup_freezer_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL ) )"		2010418	0		&&			
ANR	2010949	Identifier	m_cgroup_freezer_mounted		2010418	0					
ANR	2010950	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL )"		2010418	1		||			
ANR	2010951	EqualityExpression	has_cgroup == false		2010418	0		==			
ANR	2010952	Identifier	has_cgroup		2010418	0					
ANR	2010953	Identifier	false		2010418	1					
ANR	2010954	EqualityExpression	"cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL"		2010418	1		==			
ANR	2010955	CallExpression	"cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER )"		2010418	0					
ANR	2010956	Callee	cgroup_get_controller		2010418	0					
ANR	2010957	Identifier	cgroup_get_controller		2010418	0					
ANR	2010958	ArgumentList	m_cgroup		2010418	1					
ANR	2010959	Argument	m_cgroup		2010418	0					
ANR	2010960	Identifier	m_cgroup		2010418	0					
ANR	2010961	Argument	FREEZE_CONTROLLER		2010418	1					
ANR	2010962	Identifier	FREEZE_CONTROLLER		2010418	0					
ANR	2010963	Identifier	NULL		2010418	1					
ANR	2010964	CompoundStatement		97:122:3463:3463	2010418	1					
ANR	2010965	ExpressionStatement	changed_cgroup = true	342:2:11323:11344	2010418	0	True				
ANR	2010966	AssignmentExpression	changed_cgroup = true		2010418	0		=			
ANR	2010967	Identifier	changed_cgroup		2010418	0					
ANR	2010968	Identifier	true		2010418	1					
ANR	2010969	IfStatement	"if ( cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL )"		2010418	1					
ANR	2010970	Condition	"cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL"	343:6:11352:11409	2010418	0	True				
ANR	2010971	EqualityExpression	"cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL"		2010418	0		==			
ANR	2010972	CallExpression	"cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER )"		2010418	0					
ANR	2010973	Callee	cgroup_add_controller		2010418	0					
ANR	2010974	Identifier	cgroup_add_controller		2010418	0					
ANR	2010975	ArgumentList	m_cgroup		2010418	1					
ANR	2010976	Argument	m_cgroup		2010418	0					
ANR	2010977	Identifier	m_cgroup		2010418	0					
ANR	2010978	Argument	FREEZE_CONTROLLER		2010418	1					
ANR	2010979	Identifier	FREEZE_CONTROLLER		2010418	0					
ANR	2010980	Identifier	NULL		2010418	1					
ANR	2010981	CompoundStatement		99:66:3556:3556	2010418	1					
ANR	2010982	Statement	dprintf	344:3:11417:11423	2010418	0	True				
ANR	2010983	Statement	(	344:10:11424:11424	2010418	1	True				
ANR	2010984	Statement	D_PROCFAMILY	344:11:11425:11436	2010418	2	True				
ANR	2010985	Statement	","	344:23:11437:11437	2010418	3	True				
ANR	2010986	Statement	"""Unable to initialize cgroup subsystem for killing """	345:4:11443:11494	2010418	4	True				
ANR	2010987	Statement	"""processes for %s.\\n"""	346:4:11500:11520	2010418	5	True				
ANR	2010988	Statement	","	346:25:11521:11521	2010418	6	True				
ANR	2010989	Statement	m_cgroup_string	347:4:11527:11541	2010418	7	True				
ANR	2010990	Statement	)	347:19:11542:11542	2010418	8	True				
ANR	2010991	ExpressionStatement		347:20:11543:11543	2010418	9	True				
ANR	2010992	IfStatement	"if ( m_cgroup_block_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL ) ) )"		2010418	17					
ANR	2010993	Condition	"m_cgroup_block_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL ) )"	350:5:11557:11668	2010418	0	True				
ANR	2010994	AndExpression	"m_cgroup_block_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL ) )"		2010418	0		&&			
ANR	2010995	Identifier	m_cgroup_block_mounted		2010418	0					
ANR	2010996	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL )"		2010418	1		||			
ANR	2010997	EqualityExpression	has_cgroup == false		2010418	0		==			
ANR	2010998	Identifier	has_cgroup		2010418	0					
ANR	2010999	Identifier	false		2010418	1					
ANR	2011000	EqualityExpression	"cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL"		2010418	1		==			
ANR	2011001	CallExpression	"cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER )"		2010418	0					
ANR	2011002	Callee	cgroup_get_controller		2010418	0					
ANR	2011003	Identifier	cgroup_get_controller		2010418	0					
ANR	2011004	ArgumentList	m_cgroup		2010418	1					
ANR	2011005	Argument	m_cgroup		2010418	0					
ANR	2011006	Identifier	m_cgroup		2010418	0					
ANR	2011007	Argument	BLOCK_CONTROLLER		2010418	1					
ANR	2011008	Identifier	BLOCK_CONTROLLER		2010418	0					
ANR	2011009	Identifier	NULL		2010418	1					
ANR	2011010	CompoundStatement		106:119:3815:3815	2010418	1					
ANR	2011011	ExpressionStatement	changed_cgroup = true	351:2:11675:11696	2010418	0	True				
ANR	2011012	AssignmentExpression	changed_cgroup = true		2010418	0		=			
ANR	2011013	Identifier	changed_cgroup		2010418	0					
ANR	2011014	Identifier	true		2010418	1					
ANR	2011015	IfStatement	"if ( cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL )"		2010418	1					
ANR	2011016	Condition	"cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL"	352:6:11704:11760	2010418	0	True				
ANR	2011017	EqualityExpression	"cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL"		2010418	0		==			
ANR	2011018	CallExpression	"cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER )"		2010418	0					
ANR	2011019	Callee	cgroup_add_controller		2010418	0					
ANR	2011020	Identifier	cgroup_add_controller		2010418	0					
ANR	2011021	ArgumentList	m_cgroup		2010418	1					
ANR	2011022	Argument	m_cgroup		2010418	0					
ANR	2011023	Identifier	m_cgroup		2010418	0					
ANR	2011024	Argument	BLOCK_CONTROLLER		2010418	1					
ANR	2011025	Identifier	BLOCK_CONTROLLER		2010418	0					
ANR	2011026	Identifier	NULL		2010418	1					
ANR	2011027	CompoundStatement		108:65:3907:3907	2010418	1					
ANR	2011028	Statement	dprintf	353:3:11768:11774	2010418	0	True				
ANR	2011029	Statement	(	353:10:11775:11775	2010418	1	True				
ANR	2011030	Statement	D_PROCFAMILY	353:11:11776:11787	2010418	2	True				
ANR	2011031	Statement	","	353:23:11788:11788	2010418	3	True				
ANR	2011032	Statement	"""Unable to initialize cgroup subsystem for bloock """	354:3:11793:11843	2010418	4	True				
ANR	2011033	Statement	"""statistics for %s.\\n"""	355:3:11848:11869	2010418	5	True				
ANR	2011034	Statement	","	355:25:11870:11870	2010418	6	True				
ANR	2011035	Statement	m_cgroup_string	356:3:11875:11889	2010418	7	True				
ANR	2011036	Statement	)	356:18:11890:11890	2010418	8	True				
ANR	2011037	ExpressionStatement		356:19:11891:11891	2010418	9	True				
ANR	2011038	IfStatement	if ( has_cgroup == false )		2010418	18					
ANR	2011039	Condition	has_cgroup == false	360:5:11979:11997	2010418	0	True				
ANR	2011040	EqualityExpression	has_cgroup == false		2010418	0		==			
ANR	2011041	Identifier	has_cgroup		2010418	0					
ANR	2011042	Identifier	false		2010418	1					
ANR	2011043	CompoundStatement		116:26:4144:4144	2010418	1					
ANR	2011044	IfStatement	"if ( ( err = cgroup_create_cgroup ( m_cgroup , 0 ) ) )"		2010418	0					
ANR	2011045	Condition	"err = cgroup_create_cgroup ( m_cgroup , 0 )"	361:6:12008:12048	2010418	0	True				
ANR	2011046	AssignmentExpression	"err = cgroup_create_cgroup ( m_cgroup , 0 )"		2010418	0		=			
ANR	2011047	Identifier	err		2010418	0					
ANR	2011048	CallExpression	"cgroup_create_cgroup ( m_cgroup , 0 )"		2010418	1					
ANR	2011049	Callee	cgroup_create_cgroup		2010418	0					
ANR	2011050	Identifier	cgroup_create_cgroup		2010418	0					
ANR	2011051	ArgumentList	m_cgroup		2010418	1					
ANR	2011052	Argument	m_cgroup		2010418	0					
ANR	2011053	Identifier	m_cgroup		2010418	0					
ANR	2011054	Argument	0		2010418	1					
ANR	2011055	PrimaryExpression	0		2010418	0					
ANR	2011056	CompoundStatement		117:49:4195:4195	2010418	1					
ANR	2011057	Statement	dprintf	362:3:12056:12062	2010418	0	True				
ANR	2011058	Statement	(	362:10:12063:12063	2010418	1	True				
ANR	2011059	Statement	D_PROCFAMILY	362:11:12064:12075	2010418	2	True				
ANR	2011060	Statement	","	362:23:12076:12076	2010418	3	True				
ANR	2011061	Statement	"""Unable to create cgroup %s for ProcFamily %u."""	363:4:12082:12128	2010418	4	True				
ANR	2011062	Statement	"""  Cgroup functionality will not work: %s\\n"""	364:4:12134:12177	2010418	5	True				
ANR	2011063	Statement	","	364:48:12178:12178	2010418	6	True				
ANR	2011064	Statement	m_cgroup_string	365:4:12184:12198	2010418	7	True				
ANR	2011065	Statement	","	365:19:12199:12199	2010418	8	True				
ANR	2011066	Statement	m_root_pid	365:21:12201:12210	2010418	9	True				
ANR	2011067	Statement	","	365:31:12211:12211	2010418	10	True				
ANR	2011068	Statement	cgroup_strerror	365:33:12213:12227	2010418	11	True				
ANR	2011069	Statement	(	365:48:12228:12228	2010418	12	True				
ANR	2011070	Statement	err	365:49:12229:12231	2010418	13	True				
ANR	2011071	Statement	)	365:52:12232:12232	2010418	14	True				
ANR	2011072	Statement	)	365:53:12233:12233	2010418	15	True				
ANR	2011073	ExpressionStatement		365:54:12234:12234	2010418	16	True				
ANR	2011074	ElseStatement	else		2010418	0					
ANR	2011075	CompoundStatement		122:9:4389:4389	2010418	0					
ANR	2011076	ExpressionStatement	m_created_cgroup = true	367:3:12250:12273	2010418	0	True				
ANR	2011077	AssignmentExpression	m_created_cgroup = true		2010418	0		=			
ANR	2011078	Identifier	m_created_cgroup		2010418	0					
ANR	2011079	Identifier	true		2010418	1					
ANR	2011080	ElseStatement	else		2010418	0					
ANR	2011081	IfStatement	if ( ( has_cgroup == true ) && ( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) ) )		2010418	0					
ANR	2011082	Condition	( has_cgroup == true ) && ( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) )	369:12:12291:12380	2010418	0	True				
ANR	2011083	AndExpression	( has_cgroup == true ) && ( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) )		2010418	0		&&			
ANR	2011084	EqualityExpression	has_cgroup == true		2010418	0		==			
ANR	2011085	Identifier	has_cgroup		2010418	0					
ANR	2011086	Identifier	true		2010418	1					
ANR	2011087	AndExpression	( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) )		2010418	1		&&			
ANR	2011088	EqualityExpression	changed_cgroup == true		2010418	0		==			
ANR	2011089	Identifier	changed_cgroup		2010418	0					
ANR	2011090	Identifier	true		2010418	1					
ANR	2011091	AssignmentExpression	err = cgroup_modify_cgroup ( m_cgroup )		2010418	1		=			
ANR	2011092	Identifier	err		2010418	0					
ANR	2011093	CallExpression	cgroup_modify_cgroup ( m_cgroup )		2010418	1					
ANR	2011094	Callee	cgroup_modify_cgroup		2010418	0					
ANR	2011095	Identifier	cgroup_modify_cgroup		2010418	0					
ANR	2011096	ArgumentList	m_cgroup		2010418	1					
ANR	2011097	Argument	m_cgroup		2010418	0					
ANR	2011098	Identifier	m_cgroup		2010418	0					
ANR	2011099	CompoundStatement		125:104:4527:4527	2010418	1					
ANR	2011100	Statement	dprintf	370:2:12387:12393	2010418	0	True				
ANR	2011101	Statement	(	370:9:12394:12394	2010418	1	True				
ANR	2011102	Statement	D_PROCFAMILY	370:10:12395:12406	2010418	2	True				
ANR	2011103	Statement	","	370:22:12407:12407	2010418	3	True				
ANR	2011104	Statement	"""Unable to modify cgroup %s for ProcFamily %u."""	371:3:12412:12458	2010418	4	True				
ANR	2011105	Statement	"""  Some cgroup functionality may not work: %u %s\\n"""	372:3:12463:12513	2010418	5	True				
ANR	2011106	Statement	","	372:54:12514:12514	2010418	6	True				
ANR	2011107	Statement	m_cgroup_string	373:3:12519:12533	2010418	7	True				
ANR	2011108	Statement	","	373:18:12534:12534	2010418	8	True				
ANR	2011109	Statement	m_root_pid	373:20:12536:12545	2010418	9	True				
ANR	2011110	Statement	","	373:30:12546:12546	2010418	10	True				
ANR	2011111	Statement	err	373:32:12548:12550	2010418	11	True				
ANR	2011112	Statement	","	373:35:12551:12551	2010418	12	True				
ANR	2011113	Statement	cgroup_strerror	373:37:12553:12567	2010418	13	True				
ANR	2011114	Statement	(	373:52:12568:12568	2010418	14	True				
ANR	2011115	Statement	err	373:53:12569:12571	2010418	15	True				
ANR	2011116	Statement	)	373:56:12572:12572	2010418	16	True				
ANR	2011117	Statement	)	373:57:12573:12573	2010418	17	True				
ANR	2011118	ExpressionStatement		373:58:12574:12574	2010418	18	True				
ANR	2011119	IdentifierDeclStatement	"struct cgroup_controller * mem_controller = cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) ;"	377:1:12640:12734	2010418	19	True				
ANR	2011120	IdentifierDecl	"* mem_controller = cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		2010418	0					
ANR	2011121	IdentifierDeclType	struct cgroup_controller *		2010418	0					
ANR	2011122	Identifier	mem_controller		2010418	1					
ANR	2011123	AssignmentExpression	"* mem_controller = cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		2010418	2		=			
ANR	2011124	Identifier	mem_controller		2010418	0					
ANR	2011125	CallExpression	"cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		2010418	1					
ANR	2011126	Callee	cgroup_get_controller		2010418	0					
ANR	2011127	Identifier	cgroup_get_controller		2010418	0					
ANR	2011128	ArgumentList	m_cgroup		2010418	1					
ANR	2011129	Argument	m_cgroup		2010418	0					
ANR	2011130	Identifier	m_cgroup		2010418	0					
ANR	2011131	Argument	MEMORY_CONTROLLER		2010418	1					
ANR	2011132	Identifier	MEMORY_CONTROLLER		2010418	0					
ANR	2011133	IfStatement	if ( m_cgroup_memory_mounted && m_created_cgroup && ( mem_controller != NULL ) )		2010418	20					
ANR	2011134	Condition	m_cgroup_memory_mounted && m_created_cgroup && ( mem_controller != NULL )	378:5:12741:12811	2010418	0	True				
ANR	2011135	AndExpression	m_cgroup_memory_mounted && m_created_cgroup && ( mem_controller != NULL )		2010418	0		&&			
ANR	2011136	Identifier	m_cgroup_memory_mounted		2010418	0					
ANR	2011137	AndExpression	m_created_cgroup && ( mem_controller != NULL )		2010418	1		&&			
ANR	2011138	Identifier	m_created_cgroup		2010418	0					
ANR	2011139	EqualityExpression	mem_controller != NULL		2010418	1		!=			
ANR	2011140	Identifier	mem_controller		2010418	0					
ANR	2011141	Identifier	NULL		2010418	1					
ANR	2011142	CompoundStatement		134:78:4958:4958	2010418	1					
ANR	2011143	IfStatement	"if ( ( err = cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true ) ) )"		2010418	0					
ANR	2011144	Condition	"err = cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true )"	379:6:12822:12896	2010418	0	True				
ANR	2011145	AssignmentExpression	"err = cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true )"		2010418	0		=			
ANR	2011146	Identifier	err		2010418	0					
ANR	2011147	CallExpression	"cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true )"		2010418	1					
ANR	2011148	Callee	cgroup_add_value_bool		2010418	0					
ANR	2011149	Identifier	cgroup_add_value_bool		2010418	0					
ANR	2011150	ArgumentList	mem_controller		2010418	1					
ANR	2011151	Argument	mem_controller		2010418	0					
ANR	2011152	Identifier	mem_controller		2010418	0					
ANR	2011153	Argument	"""memory.use_hierarchy"""		2010418	1					
ANR	2011154	PrimaryExpression	"""memory.use_hierarchy"""		2010418	0					
ANR	2011155	Argument	true		2010418	2					
ANR	2011156	Identifier	true		2010418	0					
ANR	2011157	CompoundStatement		135:83:5043:5043	2010418	1					
ANR	2011158	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	380:3:12904:13067	2010418	0	True				
ANR	2011159	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2010418	0					
ANR	2011160	Callee	dprintf		2010418	0					
ANR	2011161	Identifier	dprintf		2010418	0					
ANR	2011162	ArgumentList	D_PROCFAMILY		2010418	1					
ANR	2011163	Argument	D_PROCFAMILY		2010418	0					
ANR	2011164	Identifier	D_PROCFAMILY		2010418	0					
ANR	2011165	Argument	"""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"""		2010418	1					
ANR	2011166	PrimaryExpression	"""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"""		2010418	0					
ANR	2011167	Argument	m_cgroup_string		2010418	2					
ANR	2011168	Identifier	m_cgroup_string		2010418	0					
ANR	2011169	Argument	m_root_pid		2010418	3					
ANR	2011170	Identifier	m_root_pid		2010418	0					
ANR	2011171	Argument	err		2010418	4					
ANR	2011172	Identifier	err		2010418	0					
ANR	2011173	Argument	cgroup_strerror ( err )		2010418	5					
ANR	2011174	CallExpression	cgroup_strerror ( err )		2010418	0					
ANR	2011175	Callee	cgroup_strerror		2010418	0					
ANR	2011176	Identifier	cgroup_strerror		2010418	0					
ANR	2011177	ArgumentList	err		2010418	1					
ANR	2011178	Argument	err		2010418	0					
ANR	2011179	Identifier	err		2010418	0					
ANR	2011180	ElseStatement	else		2010418	0					
ANR	2011181	CompoundStatement		139:9:5222:5222	2010418	0					
ANR	2011182	IfStatement	if ( ( err = cgroup_modify_cgroup ( m_cgroup ) ) )		2010418	0					
ANR	2011183	Condition	err = cgroup_modify_cgroup ( m_cgroup )	384:7:13087:13124	2010418	0	True				
ANR	2011184	AssignmentExpression	err = cgroup_modify_cgroup ( m_cgroup )		2010418	0		=			
ANR	2011185	Identifier	err		2010418	0					
ANR	2011186	CallExpression	cgroup_modify_cgroup ( m_cgroup )		2010418	1					
ANR	2011187	Callee	cgroup_modify_cgroup		2010418	0					
ANR	2011188	Identifier	cgroup_modify_cgroup		2010418	0					
ANR	2011189	ArgumentList	m_cgroup		2010418	1					
ANR	2011190	Argument	m_cgroup		2010418	0					
ANR	2011191	Identifier	m_cgroup		2010418	0					
ANR	2011192	CompoundStatement		140:47:5271:5271	2010418	1					
ANR	2011193	Statement	dprintf	385:4:13133:13139	2010418	0	True				
ANR	2011194	Statement	(	385:11:13140:13140	2010418	1	True				
ANR	2011195	Statement	D_PROCFAMILY	385:12:13141:13152	2010418	2	True				
ANR	2011196	Statement	","	385:24:13153:13153	2010418	3	True				
ANR	2011197	Statement	"""Unable to enable hierarchical memory accounting for %s """	386:5:13160:13216	2010418	4	True				
ANR	2011198	Statement	"""(ProcFamily %u): %u %s\\n"""	387:5:13223:13248	2010418	5	True				
ANR	2011199	Statement	","	387:31:13249:13249	2010418	6	True				
ANR	2011200	Statement	m_cgroup_string	388:5:13256:13270	2010418	7	True				
ANR	2011201	Statement	","	388:20:13271:13271	2010418	8	True				
ANR	2011202	Statement	m_root_pid	388:22:13273:13282	2010418	9	True				
ANR	2011203	Statement	","	388:32:13283:13283	2010418	10	True				
ANR	2011204	Statement	err	388:34:13285:13287	2010418	11	True				
ANR	2011205	Statement	","	388:37:13288:13288	2010418	12	True				
ANR	2011206	Statement	cgroup_strerror	388:39:13290:13304	2010418	13	True				
ANR	2011207	Statement	(	388:54:13305:13305	2010418	14	True				
ANR	2011208	Statement	err	388:55:13306:13308	2010418	15	True				
ANR	2011209	Statement	)	388:58:13309:13309	2010418	16	True				
ANR	2011210	Statement	)	388:59:13310:13310	2010418	17	True				
ANR	2011211	ExpressionStatement		388:60:13311:13311	2010418	18	True				
ANR	2011212	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	394:1:13402:13442	2010418	21	True				
ANR	2011213	IdentifierDecl	* member = m_member_list		2010418	0					
ANR	2011214	IdentifierDeclType	ProcFamilyMember *		2010418	0					
ANR	2011215	Identifier	member		2010418	1					
ANR	2011216	AssignmentExpression	* member = m_member_list		2010418	2		=			
ANR	2011217	Identifier	m_member_list		2010418	0					
ANR	2011218	Identifier	m_member_list		2010418	1					
ANR	2011219	WhileStatement	while ( member != NULL )		2010418	22					
ANR	2011220	Condition	member != NULL	395:8:13452:13465	2010418	0	True				
ANR	2011221	EqualityExpression	member != NULL		2010418	0		!=			
ANR	2011222	Identifier	member		2010418	0					
ANR	2011223	Identifier	NULL		2010418	1					
ANR	2011224	CompoundStatement		151:24:5612:5612	2010418	1					
ANR	2011225	ExpressionStatement	migrate_to_cgroup ( member -> get_proc_info ( ) -> pid )	396:2:13472:13519	2010418	0	True				
ANR	2011226	CallExpression	migrate_to_cgroup ( member -> get_proc_info ( ) -> pid )		2010418	0					
ANR	2011227	Callee	migrate_to_cgroup		2010418	0					
ANR	2011228	Identifier	migrate_to_cgroup		2010418	0					
ANR	2011229	ArgumentList	member -> get_proc_info ( ) -> pid		2010418	1					
ANR	2011230	Argument	member -> get_proc_info ( ) -> pid		2010418	0					
ANR	2011231	PtrMemberAccess	member -> get_proc_info ( ) -> pid		2010418	0					
ANR	2011232	CallExpression	member -> get_proc_info ( )		2010418	0					
ANR	2011233	Callee	member -> get_proc_info		2010418	0					
ANR	2011234	PtrMemberAccess	member -> get_proc_info		2010418	0					
ANR	2011235	Identifier	member		2010418	0					
ANR	2011236	Identifier	get_proc_info		2010418	1					
ANR	2011237	ArgumentList			2010418	1					
ANR	2011238	Identifier	pid		2010418	1					
ANR	2011239	ExpressionStatement	member = member -> m_next	397:2:13523:13546	2010418	1	True				
ANR	2011240	AssignmentExpression	member = member -> m_next		2010418	0		=			
ANR	2011241	Identifier	member		2010418	0					
ANR	2011242	PtrMemberAccess	member -> m_next		2010418	1					
ANR	2011243	Identifier	member		2010418	0					
ANR	2011244	Identifier	m_next		2010418	1					
ANR	2011245	ReturnStatement	return 0 ;	400:1:13553:13561	2010418	23	True				
ANR	2011246	PrimaryExpression	0		2010418	0					
ANR	2011247	ReturnType	int		2010418	1					
ANR	2011248	Identifier	ProcFamily :: set_cgroup		2010418	2					
ANR	2011249	ParameterList	const char * cgroup		2010418	3					
ANR	2011250	Parameter	const char * cgroup	244:23:7834:7852	2010418	0	True				
ANR	2011251	ParameterType	const char *		2010418	0					
ANR	2011252	Identifier	cgroup		2010418	1					
ANR	2011253	CFGEntryNode	ENTRY		2010418		True				
ANR	2011254	CFGExitNode	EXIT		2010418		True				
ANR	2011255	Symbol	m_cgroup_block_mounted		2010418						
ANR	2011256	Symbol	m_cgroup_initialized		2010418						
ANR	2011257	Symbol	info . hierarchy		2010418						
ANR	2011258	Symbol	FREEZE_CONTROLLER		2010418						
ANR	2011259	Symbol	CPUACCT_CONTROLLER		2010418						
ANR	2011260	Symbol	info . name		2010418						
ANR	2011261	Symbol	strlen		2010418						
ANR	2011262	Symbol	member -> get_proc_info		2010418						
ANR	2011263	Symbol	cgroup_strerror		2010418						
ANR	2011264	Symbol	* * member		2010418						
ANR	2011265	Symbol	info		2010418						
ANR	2011266	Symbol	member -> get_proc_info ( ) -> pid		2010418						
ANR	2011267	Symbol	strcmp		2010418						
ANR	2011268	Symbol	ret		2010418						
ANR	2011269	Symbol	cgroup_add_controller		2010418						
ANR	2011270	Symbol	NULL		2010418						
ANR	2011271	Symbol	& info		2010418						
ANR	2011272	Symbol	m_created_cgroup		2010418						
ANR	2011273	Symbol	cgroup_get_cgroup		2010418						
ANR	2011274	Symbol	m_cgroup_memory_mounted		2010418						
ANR	2011275	Symbol	handle		2010418						
ANR	2011276	Symbol	cgroup_new_cgroup		2010418						
ANR	2011277	Symbol	* member		2010418						
ANR	2011278	Symbol	cgroup		2010418						
ANR	2011279	Symbol	cgroup_get_all_controller_begin		2010418						
ANR	2011280	Symbol	m_cgroup		2010418						
ANR	2011281	Symbol	changed_cgroup		2010418						
ANR	2011282	Symbol	m_cgroup_freezer_mounted		2010418						
ANR	2011283	Symbol	m_cgroup_cpuacct_mounted		2010418						
ANR	2011284	Symbol	true		2010418						
ANR	2011285	Symbol	cgroup_create_cgroup		2010418						
ANR	2011286	Symbol	cgroup_get_all_controller_next		2010418						
ANR	2011287	Symbol	ECGROUPNOTEXIST		2010418						
ANR	2011288	Symbol	D_PROCFAMILY		2010418						
ANR	2011289	Symbol	MEMORY_CONTROLLER		2010418						
ANR	2011290	Symbol	cgroup_get_controller		2010418						
ANR	2011291	Symbol	& handle		2010418						
ANR	2011292	Symbol	cgroup_len		2010418						
ANR	2011293	Symbol	member		2010418						
ANR	2011294	Symbol	ECGEOF		2010418						
ANR	2011295	Symbol	& m_cgroup		2010418						
ANR	2011296	Symbol	m_member_list		2010418						
ANR	2011297	Symbol	malloc		2010418						
ANR	2011298	Symbol	BLOCK_CONTROLLER		2010418						
ANR	2011299	Symbol	err		2010418						
ANR	2011300	Symbol	mem_controller		2010418						
ANR	2011301	Symbol	false		2010418						
ANR	2011302	Symbol	D_ALWAYS		2010418						
ANR	2011303	Symbol	has_cgroup		2010418						
ANR	2011304	Symbol	member -> m_next		2010418						
ANR	2011305	Symbol	cgroup_modify_cgroup		2010418						
ANR	2011306	Symbol	* member -> get_proc_info		2010418						
ANR	2011307	Symbol	cgroup_add_value_bool		2010418						
ANR	2011308	Symbol	m_cgroup_string		2010418						
ANR	2011309	Symbol	m_root_pid		2010418						
ANR	2011310	Function	ProcFamily :: freezer_cgroup	403:0:13566:15268							
ANR	2011311	FunctionDef	ProcFamily :: freezer_cgroup (const char * state)		2011310	0					
ANR	2011312	CompoundStatement		405:0:13617:15268	2011310	0					
ANR	2011313	IdentifierDeclStatement	int err = 0 ;	411:1:13808:13819	2011310	0	True				
ANR	2011314	IdentifierDecl	err = 0		2011310	0					
ANR	2011315	IdentifierDeclType	int		2011310	0					
ANR	2011316	Identifier	err		2011310	1					
ANR	2011317	AssignmentExpression	err = 0		2011310	2		=			
ANR	2011318	Identifier	err		2011310	0					
ANR	2011319	PrimaryExpression	0		2011310	1					
ANR	2011320	IdentifierDeclStatement	struct cgroup_controller * freezer ;	412:1:13822:13855	2011310	1	True				
ANR	2011321	IdentifierDecl	* freezer		2011310	0					
ANR	2011322	IdentifierDeclType	struct cgroup_controller *		2011310	0					
ANR	2011323	Identifier	freezer		2011310	1					
ANR	2011324	IdentifierDeclStatement	struct cgroup * cgroup = cgroup_new_cgroup ( m_cgroup_string ) ;	413:1:13858:13916	2011310	2	True				
ANR	2011325	IdentifierDecl	* cgroup = cgroup_new_cgroup ( m_cgroup_string )		2011310	0					
ANR	2011326	IdentifierDeclType	struct cgroup *		2011310	0					
ANR	2011327	Identifier	cgroup		2011310	1					
ANR	2011328	AssignmentExpression	* cgroup = cgroup_new_cgroup ( m_cgroup_string )		2011310	2		=			
ANR	2011329	Identifier	cgroup		2011310	0					
ANR	2011330	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		2011310	1					
ANR	2011331	Callee	cgroup_new_cgroup		2011310	0					
ANR	2011332	Identifier	cgroup_new_cgroup		2011310	0					
ANR	2011333	ArgumentList	m_cgroup_string		2011310	1					
ANR	2011334	Argument	m_cgroup_string		2011310	0					
ANR	2011335	Identifier	m_cgroup_string		2011310	0					
ANR	2011336	ExpressionStatement	ASSERT ( cgroup != NULL )	414:1:13919:13942	2011310	3	True				
ANR	2011337	CallExpression	ASSERT ( cgroup != NULL )		2011310	0					
ANR	2011338	Callee	ASSERT		2011310	0					
ANR	2011339	Identifier	ASSERT		2011310	0					
ANR	2011340	ArgumentList	cgroup != NULL		2011310	1					
ANR	2011341	Argument	cgroup != NULL		2011310	0					
ANR	2011342	EqualityExpression	cgroup != NULL		2011310	0		!=			
ANR	2011343	Identifier	cgroup		2011310	0					
ANR	2011344	Identifier	NULL		2011310	1					
ANR	2011345	IfStatement	if ( ! m_cgroup_freezer_mounted )		2011310	4					
ANR	2011346	Condition	! m_cgroup_freezer_mounted	416:5:13950:13974	2011310	0	True				
ANR	2011347	UnaryOperationExpression	! m_cgroup_freezer_mounted		2011310	0					
ANR	2011348	UnaryOperator	!		2011310	0					
ANR	2011349	Identifier	m_cgroup_freezer_mounted		2011310	1					
ANR	2011350	CompoundStatement		12:32:359:359	2011310	1					
ANR	2011351	ExpressionStatement	err = 1	417:2:13981:13988	2011310	0	True				
ANR	2011352	AssignmentExpression	err = 1		2011310	0		=			
ANR	2011353	Identifier	err		2011310	0					
ANR	2011354	PrimaryExpression	1		2011310	1					
ANR	2011355	GotoStatement	goto ret ;	418:2:13992:14000	2011310	1	True				
ANR	2011356	Identifier	ret		2011310	0					
ANR	2011357	ExpressionStatement	"freezer = cgroup_add_controller ( cgroup , FREEZE_CONTROLLER )"	421:1:14007:14065	2011310	5	True				
ANR	2011358	AssignmentExpression	"freezer = cgroup_add_controller ( cgroup , FREEZE_CONTROLLER )"		2011310	0		=			
ANR	2011359	Identifier	freezer		2011310	0					
ANR	2011360	CallExpression	"cgroup_add_controller ( cgroup , FREEZE_CONTROLLER )"		2011310	1					
ANR	2011361	Callee	cgroup_add_controller		2011310	0					
ANR	2011362	Identifier	cgroup_add_controller		2011310	0					
ANR	2011363	ArgumentList	cgroup		2011310	1					
ANR	2011364	Argument	cgroup		2011310	0					
ANR	2011365	Identifier	cgroup		2011310	0					
ANR	2011366	Argument	FREEZE_CONTROLLER		2011310	1					
ANR	2011367	Identifier	FREEZE_CONTROLLER		2011310	0					
ANR	2011368	IfStatement	if ( NULL == freezer )		2011310	6					
ANR	2011369	Condition	NULL == freezer	422:5:14072:14086	2011310	0	True				
ANR	2011370	EqualityExpression	NULL == freezer		2011310	0		==			
ANR	2011371	Identifier	NULL		2011310	0					
ANR	2011372	Identifier	freezer		2011310	1					
ANR	2011373	CompoundStatement		18:22:471:471	2011310	1					
ANR	2011374	Statement	dprintf	423:2:14093:14099	2011310	0	True				
ANR	2011375	Statement	(	423:9:14100:14100	2011310	1	True				
ANR	2011376	Statement	D_ALWAYS	423:10:14101:14108	2011310	2	True				
ANR	2011377	Statement	","	423:18:14109:14109	2011310	3	True				
ANR	2011378	Statement	"""Unable to access the freezer subsystem for ProcFamily %u """	424:3:14114:14172	2011310	4	True				
ANR	2011379	Statement	"""for cgroup %s\\n"""	425:3:14177:14193	2011310	5	True				
ANR	2011380	Statement	","	425:20:14194:14194	2011310	6	True				
ANR	2011381	Statement	m_root_pid	426:3:14199:14208	2011310	7	True				
ANR	2011382	Statement	","	426:13:14209:14209	2011310	8	True				
ANR	2011383	Statement	m_cgroup_string	426:15:14211:14225	2011310	9	True				
ANR	2011384	Statement	)	426:30:14226:14226	2011310	10	True				
ANR	2011385	ExpressionStatement		426:31:14227:14227	2011310	11	True				
ANR	2011386	ExpressionStatement	err = 2	427:2:14231:14238	2011310	12	True				
ANR	2011387	AssignmentExpression	err = 2		2011310	0		=			
ANR	2011388	Identifier	err		2011310	0					
ANR	2011389	PrimaryExpression	2		2011310	1					
ANR	2011390	GotoStatement	goto ret ;	428:2:14242:14250	2011310	13	True				
ANR	2011391	Identifier	ret		2011310	0					
ANR	2011392	IfStatement	"if ( ( err = cgroup_add_value_string ( freezer , ""freezer.state"" , state ) ) )"		2011310	7					
ANR	2011393	Condition	"err = cgroup_add_value_string ( freezer , ""freezer.state"" , state )"	431:5:14261:14324	2011310	0	True				
ANR	2011394	AssignmentExpression	"err = cgroup_add_value_string ( freezer , ""freezer.state"" , state )"		2011310	0		=			
ANR	2011395	Identifier	err		2011310	0					
ANR	2011396	CallExpression	"cgroup_add_value_string ( freezer , ""freezer.state"" , state )"		2011310	1					
ANR	2011397	Callee	cgroup_add_value_string		2011310	0					
ANR	2011398	Identifier	cgroup_add_value_string		2011310	0					
ANR	2011399	ArgumentList	freezer		2011310	1					
ANR	2011400	Argument	freezer		2011310	0					
ANR	2011401	Identifier	freezer		2011310	0					
ANR	2011402	Argument	"""freezer.state"""		2011310	1					
ANR	2011403	PrimaryExpression	"""freezer.state"""		2011310	0					
ANR	2011404	Argument	state		2011310	2					
ANR	2011405	Identifier	state		2011310	0					
ANR	2011406	CompoundStatement		27:71:709:709	2011310	1					
ANR	2011407	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	432:2:14331:14489	2011310	0	True				
ANR	2011408	CallExpression	"dprintf ( D_ALWAYS , ""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2011310	0					
ANR	2011409	Callee	dprintf		2011310	0					
ANR	2011410	Identifier	dprintf		2011310	0					
ANR	2011411	ArgumentList	D_ALWAYS		2011310	1					
ANR	2011412	Argument	D_ALWAYS		2011310	0					
ANR	2011413	Identifier	D_ALWAYS		2011310	0					
ANR	2011414	Argument	"""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"""		2011310	1					
ANR	2011415	PrimaryExpression	"""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"""		2011310	0					
ANR	2011416	Argument	state		2011310	2					
ANR	2011417	Identifier	state		2011310	0					
ANR	2011418	Argument	m_cgroup_string		2011310	3					
ANR	2011419	Identifier	m_cgroup_string		2011310	0					
ANR	2011420	Argument	m_root_pid		2011310	4					
ANR	2011421	Identifier	m_root_pid		2011310	0					
ANR	2011422	Argument	err		2011310	5					
ANR	2011423	Identifier	err		2011310	0					
ANR	2011424	Argument	cgroup_strerror ( err )		2011310	6					
ANR	2011425	CallExpression	cgroup_strerror ( err )		2011310	0					
ANR	2011426	Callee	cgroup_strerror		2011310	0					
ANR	2011427	Identifier	cgroup_strerror		2011310	0					
ANR	2011428	ArgumentList	err		2011310	1					
ANR	2011429	Argument	err		2011310	0					
ANR	2011430	Identifier	err		2011310	0					
ANR	2011431	ExpressionStatement	err = 3	435:2:14493:14500	2011310	1	True				
ANR	2011432	AssignmentExpression	err = 3		2011310	0		=			
ANR	2011433	Identifier	err		2011310	0					
ANR	2011434	PrimaryExpression	3		2011310	1					
ANR	2011435	GotoStatement	goto ret ;	436:2:14504:14512	2011310	2	True				
ANR	2011436	Identifier	ret		2011310	0					
ANR	2011437	IfStatement	if ( ( err = cgroup_modify_cgroup ( cgroup ) ) )		2011310	8					
ANR	2011438	Condition	err = cgroup_modify_cgroup ( cgroup )	438:5:14522:14557	2011310	0	True				
ANR	2011439	AssignmentExpression	err = cgroup_modify_cgroup ( cgroup )		2011310	0		=			
ANR	2011440	Identifier	err		2011310	0					
ANR	2011441	CallExpression	cgroup_modify_cgroup ( cgroup )		2011310	1					
ANR	2011442	Callee	cgroup_modify_cgroup		2011310	0					
ANR	2011443	Identifier	cgroup_modify_cgroup		2011310	0					
ANR	2011444	ArgumentList	cgroup		2011310	1					
ANR	2011445	Argument	cgroup		2011310	0					
ANR	2011446	Identifier	cgroup		2011310	0					
ANR	2011447	CompoundStatement		34:43:942:942	2011310	1					
ANR	2011448	IfStatement	if ( ECGROUPVALUENOTEXIST == err )		2011310	0					
ANR	2011449	Condition	ECGROUPVALUENOTEXIST == err	439:6:14568:14594	2011310	0	True				
ANR	2011450	EqualityExpression	ECGROUPVALUENOTEXIST == err		2011310	0		==			
ANR	2011451	Identifier	ECGROUPVALUENOTEXIST		2011310	0					
ANR	2011452	Identifier	err		2011310	1					
ANR	2011453	CompoundStatement		35:35:979:979	2011310	1					
ANR	2011454	Statement	dprintf	440:3:14602:14608	2011310	0	True				
ANR	2011455	Statement	(	440:10:14609:14609	2011310	1	True				
ANR	2011456	Statement	D_ALWAYS	440:11:14610:14617	2011310	2	True				
ANR	2011457	Statement	","	440:19:14618:14618	2011310	3	True				
ANR	2011458	Statement	"""Does not appear condor_procd is allowed to freeze"""	441:4:14624:14674	2011310	4	True				
ANR	2011459	Statement	""" cgroup %s (ProcFamily %u).\\n"""	442:4:14680:14710	2011310	5	True				
ANR	2011460	Statement	","	442:35:14711:14711	2011310	6	True				
ANR	2011461	Statement	m_cgroup_string	443:4:14717:14731	2011310	7	True				
ANR	2011462	Statement	","	443:19:14732:14732	2011310	8	True				
ANR	2011463	Statement	m_root_pid	443:21:14734:14743	2011310	9	True				
ANR	2011464	Statement	)	443:31:14744:14744	2011310	10	True				
ANR	2011465	ExpressionStatement		443:32:14745:14745	2011310	11	True				
ANR	2011466	ElseStatement	else		2011310	0					
ANR	2011467	IfStatement	if ( ( ECGOTHER == err ) && ( EBUSY == cgroup_get_last_errno ( ) ) )		2011310	0					
ANR	2011468	Condition	( ECGOTHER == err ) && ( EBUSY == cgroup_get_last_errno ( ) )	444:13:14760:14814	2011310	0	True				
ANR	2011469	AndExpression	( ECGOTHER == err ) && ( EBUSY == cgroup_get_last_errno ( ) )		2011310	0		&&			
ANR	2011470	EqualityExpression	ECGOTHER == err		2011310	0		==			
ANR	2011471	Identifier	ECGOTHER		2011310	0					
ANR	2011472	Identifier	err		2011310	1					
ANR	2011473	EqualityExpression	EBUSY == cgroup_get_last_errno ( )		2011310	1		==			
ANR	2011474	Identifier	EBUSY		2011310	0					
ANR	2011475	CallExpression	cgroup_get_last_errno ( )		2011310	1					
ANR	2011476	Callee	cgroup_get_last_errno		2011310	0					
ANR	2011477	Identifier	cgroup_get_last_errno		2011310	0					
ANR	2011478	ArgumentList			2011310	1					
ANR	2011479	CompoundStatement		40:70:1199:1199	2011310	1					
ANR	2011480	Statement	dprintf	445:3:14822:14828	2011310	0	True				
ANR	2011481	Statement	(	445:10:14829:14829	2011310	1	True				
ANR	2011482	Statement	D_ALWAYS	445:11:14830:14837	2011310	2	True				
ANR	2011483	Statement	","	445:19:14838:14838	2011310	3	True				
ANR	2011484	Statement	"""Kernel was unable to freeze cgroup %s """	445:21:14840:14879	2011310	4	True				
ANR	2011485	Statement	"""(ProcFamily %u) due to process state; signal delivery """	446:4:14885:14940	2011310	5	True				
ANR	2011486	Statement	"""won't be atomic\\n"""	447:4:14946:14964	2011310	6	True				
ANR	2011487	Statement	","	447:23:14965:14965	2011310	7	True				
ANR	2011488	Statement	m_cgroup_string	447:25:14967:14981	2011310	8	True				
ANR	2011489	Statement	","	447:40:14982:14982	2011310	9	True				
ANR	2011490	Statement	m_root_pid	447:42:14984:14993	2011310	10	True				
ANR	2011491	Statement	)	447:52:14994:14994	2011310	11	True				
ANR	2011492	ExpressionStatement		447:53:14995:14995	2011310	12	True				
ANR	2011493	ExpressionStatement	err = - EBUSY	448:3:15000:15012	2011310	13	True				
ANR	2011494	AssignmentExpression	err = - EBUSY		2011310	0		=			
ANR	2011495	Identifier	err		2011310	0					
ANR	2011496	UnaryOperationExpression	- EBUSY		2011310	1					
ANR	2011497	UnaryOperator	-		2011310	0					
ANR	2011498	Identifier	EBUSY		2011310	1					
ANR	2011499	ElseStatement	else		2011310	0					
ANR	2011500	CompoundStatement		45:9:1405:1405	2011310	0					
ANR	2011501	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	450:3:15028:15193	2011310	0	True				
ANR	2011502	CallExpression	"dprintf ( D_ALWAYS , ""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2011310	0					
ANR	2011503	Callee	dprintf		2011310	0					
ANR	2011504	Identifier	dprintf		2011310	0					
ANR	2011505	ArgumentList	D_ALWAYS		2011310	1					
ANR	2011506	Argument	D_ALWAYS		2011310	0					
ANR	2011507	Identifier	D_ALWAYS		2011310	0					
ANR	2011508	Argument	"""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"""		2011310	1					
ANR	2011509	PrimaryExpression	"""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"""		2011310	0					
ANR	2011510	Argument	state		2011310	2					
ANR	2011511	Identifier	state		2011310	0					
ANR	2011512	Argument	m_cgroup_string		2011310	3					
ANR	2011513	Identifier	m_cgroup_string		2011310	0					
ANR	2011514	Argument	m_root_pid		2011310	4					
ANR	2011515	Identifier	m_root_pid		2011310	0					
ANR	2011516	Argument	err		2011310	5					
ANR	2011517	Identifier	err		2011310	0					
ANR	2011518	Argument	cgroup_strerror ( err )		2011310	6					
ANR	2011519	CallExpression	cgroup_strerror ( err )		2011310	0					
ANR	2011520	Callee	cgroup_strerror		2011310	0					
ANR	2011521	Identifier	cgroup_strerror		2011310	0					
ANR	2011522	ArgumentList	err		2011310	1					
ANR	2011523	Argument	err		2011310	0					
ANR	2011524	Identifier	err		2011310	0					
ANR	2011525	ExpressionStatement	err = 4	454:2:15201:15208	2011310	1	True				
ANR	2011526	AssignmentExpression	err = 4		2011310	0		=			
ANR	2011527	Identifier	err		2011310	0					
ANR	2011528	PrimaryExpression	4		2011310	1					
ANR	2011529	GotoStatement	goto ret ;	455:2:15212:15220	2011310	2	True				
ANR	2011530	Identifier	ret		2011310	0					
ANR	2011531	Label	ret :	458:1:15227:15230	2011310	9	True				
ANR	2011532	Identifier	ret		2011310	0					
ANR	2011533	ExpressionStatement	cgroup_free ( & cgroup )	459:1:15233:15253	2011310	10	True				
ANR	2011534	CallExpression	cgroup_free ( & cgroup )		2011310	0					
ANR	2011535	Callee	cgroup_free		2011310	0					
ANR	2011536	Identifier	cgroup_free		2011310	0					
ANR	2011537	ArgumentList	& cgroup		2011310	1					
ANR	2011538	Argument	& cgroup		2011310	0					
ANR	2011539	UnaryOperationExpression	& cgroup		2011310	0					
ANR	2011540	UnaryOperator	&		2011310	0					
ANR	2011541	Identifier	cgroup		2011310	1					
ANR	2011542	ReturnStatement	return err ;	460:1:15256:15266	2011310	11	True				
ANR	2011543	Identifier	err		2011310	0					
ANR	2011544	ReturnType	int		2011310	1					
ANR	2011545	Identifier	ProcFamily :: freezer_cgroup		2011310	2					
ANR	2011546	ParameterList	const char * state		2011310	3					
ANR	2011547	Parameter	const char * state	404:27:13597:13614	2011310	0	True				
ANR	2011548	ParameterType	const char *		2011310	0					
ANR	2011549	Identifier	state		2011310	1					
ANR	2011550	CFGEntryNode	ENTRY		2011310		True				
ANR	2011551	CFGExitNode	EXIT		2011310		True				
ANR	2011552	Symbol	cgroup_add_controller		2011310						
ANR	2011553	Symbol	NULL		2011310						
ANR	2011554	Symbol	err		2011310						
ANR	2011555	Symbol	cgroup_add_value_string		2011310						
ANR	2011556	Symbol	D_ALWAYS		2011310						
ANR	2011557	Symbol	cgroup_new_cgroup		2011310						
ANR	2011558	Symbol	FREEZE_CONTROLLER		2011310						
ANR	2011559	Symbol	cgroup		2011310						
ANR	2011560	Symbol	cgroup_modify_cgroup		2011310						
ANR	2011561	Symbol	m_cgroup_freezer_mounted		2011310						
ANR	2011562	Symbol	& cgroup		2011310						
ANR	2011563	Symbol	cgroup_strerror		2011310						
ANR	2011564	Symbol	EBUSY		2011310						
ANR	2011565	Symbol	freezer		2011310						
ANR	2011566	Symbol	state		2011310						
ANR	2011567	Symbol	ECGROUPVALUENOTEXIST		2011310						
ANR	2011568	Symbol	m_cgroup_string		2011310						
ANR	2011569	Symbol	ECGOTHER		2011310						
ANR	2011570	Symbol	m_root_pid		2011310						
ANR	2011571	Symbol	cgroup_get_last_errno		2011310						
ANR	2011572	Function	ProcFamily :: spree_cgroup	463:0:15271:16387							
ANR	2011573	FunctionDef	ProcFamily :: spree_cgroup (int sig)		2011572	0					
ANR	2011574	CompoundStatement		465:0:15309:16387	2011572	0					
ANR	2011575	IdentifierDeclStatement	int err = freezer_cgroup ( FROZEN ) ;	472:1:15565:15597	2011572	0	True				
ANR	2011576	IdentifierDecl	err = freezer_cgroup ( FROZEN )		2011572	0					
ANR	2011577	IdentifierDeclType	int		2011572	0					
ANR	2011578	Identifier	err		2011572	1					
ANR	2011579	AssignmentExpression	err = freezer_cgroup ( FROZEN )		2011572	2		=			
ANR	2011580	Identifier	err		2011572	0					
ANR	2011581	CallExpression	freezer_cgroup ( FROZEN )		2011572	1					
ANR	2011582	Callee	freezer_cgroup		2011572	0					
ANR	2011583	Identifier	freezer_cgroup		2011572	0					
ANR	2011584	ArgumentList	FROZEN		2011572	1					
ANR	2011585	Argument	FROZEN		2011572	0					
ANR	2011586	Identifier	FROZEN		2011572	0					
ANR	2011587	IfStatement	if ( ( err != 0 ) && ( err != - EBUSY ) )		2011572	1					
ANR	2011588	Condition	( err != 0 ) && ( err != - EBUSY )	473:5:15604:15632	2011572	0	True				
ANR	2011589	AndExpression	( err != 0 ) && ( err != - EBUSY )		2011572	0		&&			
ANR	2011590	EqualityExpression	err != 0		2011572	0		!=			
ANR	2011591	Identifier	err		2011572	0					
ANR	2011592	PrimaryExpression	0		2011572	1					
ANR	2011593	EqualityExpression	err != - EBUSY		2011572	1		!=			
ANR	2011594	Identifier	err		2011572	0					
ANR	2011595	UnaryOperationExpression	- EBUSY		2011572	1					
ANR	2011596	UnaryOperator	-		2011572	0					
ANR	2011597	Identifier	EBUSY		2011572	1					
ANR	2011598	CompoundStatement		9:36:325:325	2011572	1					
ANR	2011599	ReturnStatement	return err ;	474:2:15639:15649	2011572	0	True				
ANR	2011600	Identifier	err		2011572	0					
ANR	2011601	ExpressionStatement	ASSERT ( m_cgroup != NULL )	477:1:15656:15681	2011572	2	True				
ANR	2011602	CallExpression	ASSERT ( m_cgroup != NULL )		2011572	0					
ANR	2011603	Callee	ASSERT		2011572	0					
ANR	2011604	Identifier	ASSERT		2011572	0					
ANR	2011605	ArgumentList	m_cgroup != NULL		2011572	1					
ANR	2011606	Argument	m_cgroup != NULL		2011572	0					
ANR	2011607	EqualityExpression	m_cgroup != NULL		2011572	0		!=			
ANR	2011608	Identifier	m_cgroup		2011572	0					
ANR	2011609	Identifier	NULL		2011572	1					
ANR	2011610	ExpressionStatement	cgroup_get_cgroup ( m_cgroup )	478:1:15684:15711	2011572	3	True				
ANR	2011611	CallExpression	cgroup_get_cgroup ( m_cgroup )		2011572	0					
ANR	2011612	Callee	cgroup_get_cgroup		2011572	0					
ANR	2011613	Identifier	cgroup_get_cgroup		2011572	0					
ANR	2011614	ArgumentList	m_cgroup		2011572	1					
ANR	2011615	Argument	m_cgroup		2011572	0					
ANR	2011616	Identifier	m_cgroup		2011572	0					
ANR	2011617	IdentifierDeclStatement	void * * handle = ( void * * ) malloc ( sizeof ( void * ) ) ;	480:1:15715:15761	2011572	4	True				
ANR	2011618	IdentifierDecl	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		2011572	0					
ANR	2011619	IdentifierDeclType	void * *		2011572	0					
ANR	2011620	Identifier	handle		2011572	1					
ANR	2011621	AssignmentExpression	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		2011572	2		=			
ANR	2011622	Identifier	handle		2011572	0					
ANR	2011623	CastExpression	( void * * ) malloc ( sizeof ( void * ) )		2011572	1					
ANR	2011624	CastTarget	void * *		2011572	0					
ANR	2011625	CallExpression	malloc ( sizeof ( void * ) )		2011572	1					
ANR	2011626	Callee	malloc		2011572	0					
ANR	2011627	Identifier	malloc		2011572	0					
ANR	2011628	ArgumentList	sizeof ( void * )		2011572	1					
ANR	2011629	Argument	sizeof ( void * )		2011572	0					
ANR	2011630	SizeofExpression	sizeof ( void * )		2011572	0					
ANR	2011631	Sizeof	sizeof		2011572	0					
ANR	2011632	SizeofOperand	void *		2011572	1					
ANR	2011633	ExpressionStatement	ASSERT ( handle != NULL )	481:1:15764:15787	2011572	5	True				
ANR	2011634	CallExpression	ASSERT ( handle != NULL )		2011572	0					
ANR	2011635	Callee	ASSERT		2011572	0					
ANR	2011636	Identifier	ASSERT		2011572	0					
ANR	2011637	ArgumentList	handle != NULL		2011572	1					
ANR	2011638	Argument	handle != NULL		2011572	0					
ANR	2011639	EqualityExpression	handle != NULL		2011572	0		!=			
ANR	2011640	Identifier	handle		2011572	0					
ANR	2011641	Identifier	NULL		2011572	1					
ANR	2011642	IdentifierDeclStatement	pid_t pid ;	482:1:15790:15799	2011572	6	True				
ANR	2011643	IdentifierDecl	pid		2011572	0					
ANR	2011644	IdentifierDeclType	pid_t		2011572	0					
ANR	2011645	Identifier	pid		2011572	1					
ANR	2011646	ExpressionStatement	ASSERT ( m_cgroup_string != NULL )	483:1:15802:15834	2011572	7	True				
ANR	2011647	CallExpression	ASSERT ( m_cgroup_string != NULL )		2011572	0					
ANR	2011648	Callee	ASSERT		2011572	0					
ANR	2011649	Identifier	ASSERT		2011572	0					
ANR	2011650	ArgumentList	m_cgroup_string != NULL		2011572	1					
ANR	2011651	Argument	m_cgroup_string != NULL		2011572	0					
ANR	2011652	EqualityExpression	m_cgroup_string != NULL		2011572	0		!=			
ANR	2011653	Identifier	m_cgroup_string		2011572	0					
ANR	2011654	Identifier	NULL		2011572	1					
ANR	2011655	ExpressionStatement	"err = cgroup_get_task_begin ( m_cgroup_string , FREEZE_CONTROLLER , handle , & pid )"	484:1:15837:15914	2011572	8	True				
ANR	2011656	AssignmentExpression	"err = cgroup_get_task_begin ( m_cgroup_string , FREEZE_CONTROLLER , handle , & pid )"		2011572	0		=			
ANR	2011657	Identifier	err		2011572	0					
ANR	2011658	CallExpression	"cgroup_get_task_begin ( m_cgroup_string , FREEZE_CONTROLLER , handle , & pid )"		2011572	1					
ANR	2011659	Callee	cgroup_get_task_begin		2011572	0					
ANR	2011660	Identifier	cgroup_get_task_begin		2011572	0					
ANR	2011661	ArgumentList	m_cgroup_string		2011572	1					
ANR	2011662	Argument	m_cgroup_string		2011572	0					
ANR	2011663	Identifier	m_cgroup_string		2011572	0					
ANR	2011664	Argument	FREEZE_CONTROLLER		2011572	1					
ANR	2011665	Identifier	FREEZE_CONTROLLER		2011572	0					
ANR	2011666	Argument	handle		2011572	2					
ANR	2011667	Identifier	handle		2011572	0					
ANR	2011668	Argument	& pid		2011572	3					
ANR	2011669	UnaryOperationExpression	& pid		2011572	0					
ANR	2011670	UnaryOperator	&		2011572	0					
ANR	2011671	Identifier	pid		2011572	1					
ANR	2011672	IfStatement	if ( ( err > 0 ) && ( err != ECGEOF ) )		2011572	9					
ANR	2011673	Condition	( err > 0 ) && ( err != ECGEOF )	485:5:15921:15948	2011572	0	True				
ANR	2011674	AndExpression	( err > 0 ) && ( err != ECGEOF )		2011572	0		&&			
ANR	2011675	RelationalExpression	err > 0		2011572	0		>			
ANR	2011676	Identifier	err		2011572	0					
ANR	2011677	PrimaryExpression	0		2011572	1					
ANR	2011678	EqualityExpression	err != ECGEOF		2011572	1		!=			
ANR	2011679	Identifier	err		2011572	0					
ANR	2011680	Identifier	ECGEOF		2011572	1					
ANR	2011681	ExpressionStatement	handle = NULL	486:2:15953:15966	2011572	1	True				
ANR	2011682	AssignmentExpression	handle = NULL		2011572	0		=			
ANR	2011683	Identifier	handle		2011572	0					
ANR	2011684	Identifier	NULL		2011572	1					
ANR	2011685	WhileStatement	while ( err != ECGEOF )		2011572	10					
ANR	2011686	Condition	err != ECGEOF	487:8:15976:15988	2011572	0	True				
ANR	2011687	EqualityExpression	err != ECGEOF		2011572	0		!=			
ANR	2011688	Identifier	err		2011572	0					
ANR	2011689	Identifier	ECGEOF		2011572	1					
ANR	2011690	CompoundStatement		23:23:681:681	2011572	1					
ANR	2011691	IfStatement	if ( err > 0 )		2011572	0					
ANR	2011692	Condition	err > 0	488:6:15999:16005	2011572	0	True				
ANR	2011693	RelationalExpression	err > 0		2011572	0		>			
ANR	2011694	Identifier	err		2011572	0					
ANR	2011695	PrimaryExpression	0		2011572	1					
ANR	2011696	CompoundStatement		24:15:698:698	2011572	1					
ANR	2011697	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	489:3:16013:16158	2011572	0	True				
ANR	2011698	CallExpression	"dprintf ( D_ALWAYS , ""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2011572	0					
ANR	2011699	Callee	dprintf		2011572	0					
ANR	2011700	Identifier	dprintf		2011572	0					
ANR	2011701	ArgumentList	D_ALWAYS		2011572	1					
ANR	2011702	Argument	D_ALWAYS		2011572	0					
ANR	2011703	Identifier	D_ALWAYS		2011572	0					
ANR	2011704	Argument	"""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"""		2011572	1					
ANR	2011705	PrimaryExpression	"""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"""		2011572	0					
ANR	2011706	Argument	m_cgroup_string		2011572	2					
ANR	2011707	Identifier	m_cgroup_string		2011572	0					
ANR	2011708	Argument	m_root_pid		2011572	3					
ANR	2011709	Identifier	m_root_pid		2011572	0					
ANR	2011710	Argument	err		2011572	4					
ANR	2011711	Identifier	err		2011572	0					
ANR	2011712	Argument	cgroup_strerror ( err )		2011572	5					
ANR	2011713	CallExpression	cgroup_strerror ( err )		2011572	0					
ANR	2011714	Callee	cgroup_strerror		2011572	0					
ANR	2011715	Identifier	cgroup_strerror		2011572	0					
ANR	2011716	ArgumentList	err		2011572	1					
ANR	2011717	Argument	err		2011572	0					
ANR	2011718	Identifier	err		2011572	0					
ANR	2011719	GotoStatement	goto release ;	492:3:16163:16175	2011572	1	True				
ANR	2011720	Identifier	release		2011572	0					
ANR	2011721	ExpressionStatement	"send_signal ( pid , sig )"	494:2:16183:16204	2011572	1	True				
ANR	2011722	CallExpression	"send_signal ( pid , sig )"		2011572	0					
ANR	2011723	Callee	send_signal		2011572	0					
ANR	2011724	Identifier	send_signal		2011572	0					
ANR	2011725	ArgumentList	pid		2011572	1					
ANR	2011726	Argument	pid		2011572	0					
ANR	2011727	Identifier	pid		2011572	0					
ANR	2011728	Argument	sig		2011572	1					
ANR	2011729	Identifier	sig		2011572	0					
ANR	2011730	ExpressionStatement	"err = cgroup_get_task_next ( handle , & pid )"	495:2:16208:16248	2011572	2	True				
ANR	2011731	AssignmentExpression	"err = cgroup_get_task_next ( handle , & pid )"		2011572	0		=			
ANR	2011732	Identifier	err		2011572	0					
ANR	2011733	CallExpression	"cgroup_get_task_next ( handle , & pid )"		2011572	1					
ANR	2011734	Callee	cgroup_get_task_next		2011572	0					
ANR	2011735	Identifier	cgroup_get_task_next		2011572	0					
ANR	2011736	ArgumentList	handle		2011572	1					
ANR	2011737	Argument	handle		2011572	0					
ANR	2011738	Identifier	handle		2011572	0					
ANR	2011739	Argument	& pid		2011572	1					
ANR	2011740	UnaryOperationExpression	& pid		2011572	0					
ANR	2011741	UnaryOperator	&		2011572	0					
ANR	2011742	Identifier	pid		2011572	1					
ANR	2011743	ExpressionStatement	err = 0	497:1:16254:16261	2011572	11	True				
ANR	2011744	AssignmentExpression	err = 0		2011572	0		=			
ANR	2011745	Identifier	err		2011572	0					
ANR	2011746	PrimaryExpression	0		2011572	1					
ANR	2011747	Label	release :	499:1:16265:16272	2011572	12	True				
ANR	2011748	Identifier	release		2011572	0					
ANR	2011749	IfStatement	if ( handle != NULL )		2011572	13					
ANR	2011750	Condition	handle != NULL	500:5:16279:16292	2011572	0	True				
ANR	2011751	EqualityExpression	handle != NULL		2011572	0		!=			
ANR	2011752	Identifier	handle		2011572	0					
ANR	2011753	Identifier	NULL		2011572	1					
ANR	2011754	CompoundStatement		36:21:985:985	2011572	1					
ANR	2011755	ExpressionStatement	cgroup_get_task_end ( handle )	501:2:16299:16326	2011572	0	True				
ANR	2011756	CallExpression	cgroup_get_task_end ( handle )		2011572	0					
ANR	2011757	Callee	cgroup_get_task_end		2011572	0					
ANR	2011758	Identifier	cgroup_get_task_end		2011572	0					
ANR	2011759	ArgumentList	handle		2011572	1					
ANR	2011760	Argument	handle		2011572	0					
ANR	2011761	Identifier	handle		2011572	0					
ANR	2011762	ExpressionStatement	free ( handle )	502:2:16330:16342	2011572	1	True				
ANR	2011763	CallExpression	free ( handle )		2011572	0					
ANR	2011764	Callee	free		2011572	0					
ANR	2011765	Identifier	free		2011572	0					
ANR	2011766	ArgumentList	handle		2011572	1					
ANR	2011767	Argument	handle		2011572	0					
ANR	2011768	Identifier	handle		2011572	0					
ANR	2011769	ExpressionStatement	freezer_cgroup ( THAWED )	505:1:16349:16371	2011572	14	True				
ANR	2011770	CallExpression	freezer_cgroup ( THAWED )		2011572	0					
ANR	2011771	Callee	freezer_cgroup		2011572	0					
ANR	2011772	Identifier	freezer_cgroup		2011572	0					
ANR	2011773	ArgumentList	THAWED		2011572	1					
ANR	2011774	Argument	THAWED		2011572	0					
ANR	2011775	Identifier	THAWED		2011572	0					
ANR	2011776	ReturnStatement	return err ;	507:1:16375:16385	2011572	15	True				
ANR	2011777	Identifier	err		2011572	0					
ANR	2011778	ReturnType	int		2011572	1					
ANR	2011779	Identifier	ProcFamily :: spree_cgroup		2011572	2					
ANR	2011780	ParameterList	int sig		2011572	3					
ANR	2011781	Parameter	int sig	464:25:15300:15306	2011572	0	True				
ANR	2011782	ParameterType	int		2011572	0					
ANR	2011783	Identifier	sig		2011572	1					
ANR	2011784	CFGEntryNode	ENTRY		2011572		True				
ANR	2011785	CFGExitNode	EXIT		2011572		True				
ANR	2011786	Symbol	malloc		2011572						
ANR	2011787	Symbol	NULL		2011572						
ANR	2011788	Symbol	err		2011572						
ANR	2011789	Symbol	THAWED		2011572						
ANR	2011790	Symbol	D_ALWAYS		2011572						
ANR	2011791	Symbol	handle		2011572						
ANR	2011792	Symbol	pid		2011572						
ANR	2011793	Symbol	FREEZE_CONTROLLER		2011572						
ANR	2011794	Symbol	cgroup_get_task_begin		2011572						
ANR	2011795	Symbol	cgroup_get_task_next		2011572						
ANR	2011796	Symbol	freezer_cgroup		2011572						
ANR	2011797	Symbol	m_cgroup		2011572						
ANR	2011798	Symbol	sig		2011572						
ANR	2011799	Symbol	cgroup_strerror		2011572						
ANR	2011800	Symbol	EBUSY		2011572						
ANR	2011801	Symbol	& pid		2011572						
ANR	2011802	Symbol	FROZEN		2011572						
ANR	2011803	Symbol	m_cgroup_string		2011572						
ANR	2011804	Symbol	ECGEOF		2011572						
ANR	2011805	Symbol	m_root_pid		2011572						
ANR	2011806	Function	ProcFamily :: count_tasks_cgroup	510:0:16390:17177							
ANR	2011807	FunctionDef	ProcFamily :: count_tasks_cgroup ()		2011806	0					
ANR	2011808	CompoundStatement		512:0:16427:17177	2011806	0					
ANR	2011809	IfStatement	if ( ! m_cgroup_cpuacct_mounted )		2011806	0					
ANR	2011810	Condition	! m_cgroup_cpuacct_mounted	513:5:16434:16458	2011806	0	True				
ANR	2011811	UnaryOperationExpression	! m_cgroup_cpuacct_mounted		2011806	0					
ANR	2011812	UnaryOperator	!		2011806	0					
ANR	2011813	Identifier	m_cgroup_cpuacct_mounted		2011806	1					
ANR	2011814	ReturnStatement	return - 1 ;	514:2:16463:16472	2011806	1	True				
ANR	2011815	UnaryOperationExpression	- 1		2011806	0					
ANR	2011816	UnaryOperator	-		2011806	0					
ANR	2011817	PrimaryExpression	1		2011806	1					
ANR	2011818	IdentifierDeclStatement	"int tasks = 0 , err = 0 ;"	516:1:16476:16498	2011806	1	True				
ANR	2011819	IdentifierDecl	tasks = 0		2011806	0					
ANR	2011820	IdentifierDeclType	int		2011806	0					
ANR	2011821	Identifier	tasks		2011806	1					
ANR	2011822	AssignmentExpression	tasks = 0		2011806	2		=			
ANR	2011823	Identifier	tasks		2011806	0					
ANR	2011824	PrimaryExpression	0		2011806	1					
ANR	2011825	IdentifierDecl	err = 0		2011806	1					
ANR	2011826	IdentifierDeclType	int		2011806	0					
ANR	2011827	Identifier	err		2011806	1					
ANR	2011828	AssignmentExpression	err = 0		2011806	2		=			
ANR	2011829	Identifier	err		2011806	0					
ANR	2011830	PrimaryExpression	0		2011806	1					
ANR	2011831	IdentifierDeclStatement	pid_t pid ;	517:1:16501:16510	2011806	2	True				
ANR	2011832	IdentifierDecl	pid		2011806	0					
ANR	2011833	IdentifierDeclType	pid_t		2011806	0					
ANR	2011834	Identifier	pid		2011806	1					
ANR	2011835	IdentifierDeclStatement	void * * handle = ( void * * ) malloc ( sizeof ( void * ) ) ;	518:1:16513:16559	2011806	3	True				
ANR	2011836	IdentifierDecl	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		2011806	0					
ANR	2011837	IdentifierDeclType	void * *		2011806	0					
ANR	2011838	Identifier	handle		2011806	1					
ANR	2011839	AssignmentExpression	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		2011806	2		=			
ANR	2011840	Identifier	handle		2011806	0					
ANR	2011841	CastExpression	( void * * ) malloc ( sizeof ( void * ) )		2011806	1					
ANR	2011842	CastTarget	void * *		2011806	0					
ANR	2011843	CallExpression	malloc ( sizeof ( void * ) )		2011806	1					
ANR	2011844	Callee	malloc		2011806	0					
ANR	2011845	Identifier	malloc		2011806	0					
ANR	2011846	ArgumentList	sizeof ( void * )		2011806	1					
ANR	2011847	Argument	sizeof ( void * )		2011806	0					
ANR	2011848	SizeofExpression	sizeof ( void * )		2011806	0					
ANR	2011849	Sizeof	sizeof		2011806	0					
ANR	2011850	SizeofOperand	void *		2011806	1					
ANR	2011851	ExpressionStatement	ASSERT ( handle != NULL ) * handle = NULL	519:1:16562:16601	2011806	4	True				
ANR	2011852	AssignmentExpression	ASSERT ( handle != NULL ) * handle = NULL		2011806	0		=			
ANR	2011853	MultiplicativeExpression	ASSERT ( handle != NULL ) * handle		2011806	0		*			
ANR	2011854	CallExpression	ASSERT ( handle != NULL )		2011806	0					
ANR	2011855	Callee	ASSERT		2011806	0					
ANR	2011856	Identifier	ASSERT		2011806	0					
ANR	2011857	ArgumentList	handle != NULL		2011806	1					
ANR	2011858	Argument	handle != NULL		2011806	0					
ANR	2011859	EqualityExpression	handle != NULL		2011806	0		!=			
ANR	2011860	Identifier	handle		2011806	0					
ANR	2011861	Identifier	NULL		2011806	1					
ANR	2011862	Identifier	handle		2011806	1					
ANR	2011863	Identifier	NULL		2011806	1					
ANR	2011864	ExpressionStatement	ASSERT ( m_cgroup_string != NULL )	522:1:16605:16637	2011806	5	True				
ANR	2011865	CallExpression	ASSERT ( m_cgroup_string != NULL )		2011806	0					
ANR	2011866	Callee	ASSERT		2011806	0					
ANR	2011867	Identifier	ASSERT		2011806	0					
ANR	2011868	ArgumentList	m_cgroup_string != NULL		2011806	1					
ANR	2011869	Argument	m_cgroup_string != NULL		2011806	0					
ANR	2011870	EqualityExpression	m_cgroup_string != NULL		2011806	0		!=			
ANR	2011871	Identifier	m_cgroup_string		2011806	0					
ANR	2011872	Identifier	NULL		2011806	1					
ANR	2011873	ExpressionStatement	"err = cgroup_get_task_begin ( m_cgroup_string , CPUACCT_CONTROLLER , handle , & pid )"	523:1:16640:16718	2011806	6	True				
ANR	2011874	AssignmentExpression	"err = cgroup_get_task_begin ( m_cgroup_string , CPUACCT_CONTROLLER , handle , & pid )"		2011806	0		=			
ANR	2011875	Identifier	err		2011806	0					
ANR	2011876	CallExpression	"cgroup_get_task_begin ( m_cgroup_string , CPUACCT_CONTROLLER , handle , & pid )"		2011806	1					
ANR	2011877	Callee	cgroup_get_task_begin		2011806	0					
ANR	2011878	Identifier	cgroup_get_task_begin		2011806	0					
ANR	2011879	ArgumentList	m_cgroup_string		2011806	1					
ANR	2011880	Argument	m_cgroup_string		2011806	0					
ANR	2011881	Identifier	m_cgroup_string		2011806	0					
ANR	2011882	Argument	CPUACCT_CONTROLLER		2011806	1					
ANR	2011883	Identifier	CPUACCT_CONTROLLER		2011806	0					
ANR	2011884	Argument	handle		2011806	2					
ANR	2011885	Identifier	handle		2011806	0					
ANR	2011886	Argument	& pid		2011806	3					
ANR	2011887	UnaryOperationExpression	& pid		2011806	0					
ANR	2011888	UnaryOperator	&		2011806	0					
ANR	2011889	Identifier	pid		2011806	1					
ANR	2011890	WhileStatement	while ( err != ECGEOF )		2011806	7					
ANR	2011891	Condition	err != ECGEOF	524:8:16728:16740	2011806	0	True				
ANR	2011892	EqualityExpression	err != ECGEOF		2011806	0		!=			
ANR	2011893	Identifier	err		2011806	0					
ANR	2011894	Identifier	ECGEOF		2011806	1					
ANR	2011895	CompoundStatement		13:23:315:315	2011806	1					
ANR	2011896	IfStatement	if ( err > 0 )		2011806	0					
ANR	2011897	Condition	err > 0	525:6:16751:16757	2011806	0	True				
ANR	2011898	RelationalExpression	err > 0		2011806	0		>			
ANR	2011899	Identifier	err		2011806	0					
ANR	2011900	PrimaryExpression	0		2011806	1					
ANR	2011901	CompoundStatement		14:15:332:332	2011806	1					
ANR	2011902	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	526:3:16765:16917	2011806	0	True				
ANR	2011903	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2011806	0					
ANR	2011904	Callee	dprintf		2011806	0					
ANR	2011905	Identifier	dprintf		2011806	0					
ANR	2011906	ArgumentList	D_PROCFAMILY		2011806	1					
ANR	2011907	Argument	D_PROCFAMILY		2011806	0					
ANR	2011908	Identifier	D_PROCFAMILY		2011806	0					
ANR	2011909	Argument	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		2011806	1					
ANR	2011910	PrimaryExpression	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		2011806	0					
ANR	2011911	Argument	m_cgroup_string		2011806	2					
ANR	2011912	Identifier	m_cgroup_string		2011806	0					
ANR	2011913	Argument	m_root_pid		2011806	3					
ANR	2011914	Identifier	m_root_pid		2011806	0					
ANR	2011915	Argument	err		2011806	4					
ANR	2011916	Identifier	err		2011806	0					
ANR	2011917	Argument	cgroup_strerror ( err )		2011806	5					
ANR	2011918	CallExpression	cgroup_strerror ( err )		2011806	0					
ANR	2011919	Callee	cgroup_strerror		2011806	0					
ANR	2011920	Identifier	cgroup_strerror		2011806	0					
ANR	2011921	ArgumentList	err		2011806	1					
ANR	2011922	Argument	err		2011806	0					
ANR	2011923	Identifier	err		2011806	0					
ANR	2011924	BreakStatement	break ;	529:3:16922:16927	2011806	1	True				
ANR	2011925	ExpressionStatement	tasks ++	531:2:16935:16943	2011806	1	True				
ANR	2011926	PostIncDecOperationExpression	tasks ++		2011806	0					
ANR	2011927	Identifier	tasks		2011806	0					
ANR	2011928	IncDec	++		2011806	1					
ANR	2011929	ExpressionStatement	"err = cgroup_get_task_next ( handle , & pid )"	532:2:16947:16987	2011806	2	True				
ANR	2011930	AssignmentExpression	"err = cgroup_get_task_next ( handle , & pid )"		2011806	0		=			
ANR	2011931	Identifier	err		2011806	0					
ANR	2011932	CallExpression	"cgroup_get_task_next ( handle , & pid )"		2011806	1					
ANR	2011933	Callee	cgroup_get_task_next		2011806	0					
ANR	2011934	Identifier	cgroup_get_task_next		2011806	0					
ANR	2011935	ArgumentList	handle		2011806	1					
ANR	2011936	Argument	handle		2011806	0					
ANR	2011937	Identifier	handle		2011806	0					
ANR	2011938	Argument	& pid		2011806	1					
ANR	2011939	UnaryOperationExpression	& pid		2011806	0					
ANR	2011940	UnaryOperator	&		2011806	0					
ANR	2011941	Identifier	pid		2011806	1					
ANR	2011942	IfStatement	if ( err == ECGEOF )		2011806	8					
ANR	2011943	Condition	err == ECGEOF	535:5:17016:17028	2011806	0	True				
ANR	2011944	EqualityExpression	err == ECGEOF		2011806	0		==			
ANR	2011945	Identifier	err		2011806	0					
ANR	2011946	Identifier	ECGEOF		2011806	1					
ANR	2011947	CompoundStatement		24:20:603:603	2011806	1					
ANR	2011948	ExpressionStatement	err = 0	536:2:17035:17042	2011806	0	True				
ANR	2011949	AssignmentExpression	err = 0		2011806	0		=			
ANR	2011950	Identifier	err		2011806	0					
ANR	2011951	PrimaryExpression	0		2011806	1					
ANR	2011952	IfStatement	if ( * handle )		2011806	9					
ANR	2011953	Condition	* handle	538:5:17052:17058	2011806	0	True				
ANR	2011954	UnaryOperationExpression	* handle		2011806	0					
ANR	2011955	UnaryOperator	*		2011806	0					
ANR	2011956	Identifier	handle		2011806	1					
ANR	2011957	CompoundStatement		27:14:633:633	2011806	1					
ANR	2011958	ExpressionStatement	cgroup_get_task_end ( handle )	539:2:17065:17092	2011806	0	True				
ANR	2011959	CallExpression	cgroup_get_task_end ( handle )		2011806	0					
ANR	2011960	Callee	cgroup_get_task_end		2011806	0					
ANR	2011961	Identifier	cgroup_get_task_end		2011806	0					
ANR	2011962	ArgumentList	handle		2011806	1					
ANR	2011963	Argument	handle		2011806	0					
ANR	2011964	Identifier	handle		2011806	0					
ANR	2011965	IfStatement	if ( handle )		2011806	10					
ANR	2011966	Condition	handle	541:5:17102:17107	2011806	0	True				
ANR	2011967	Identifier	handle		2011806	0					
ANR	2011968	CompoundStatement		30:13:682:682	2011806	1					
ANR	2011969	ExpressionStatement	free ( handle )	542:2:17114:17126	2011806	0	True				
ANR	2011970	CallExpression	free ( handle )		2011806	0					
ANR	2011971	Callee	free		2011806	0					
ANR	2011972	Identifier	free		2011806	0					
ANR	2011973	ArgumentList	handle		2011806	1					
ANR	2011974	Argument	handle		2011806	0					
ANR	2011975	Identifier	handle		2011806	0					
ANR	2011976	IfStatement	if ( err )		2011806	11					
ANR	2011977	Condition	err	544:5:17136:17138	2011806	0	True				
ANR	2011978	Identifier	err		2011806	0					
ANR	2011979	CompoundStatement		33:10:713:713	2011806	1					
ANR	2011980	ReturnStatement	return - err ;	545:2:17145:17156	2011806	0	True				
ANR	2011981	UnaryOperationExpression	- err		2011806	0					
ANR	2011982	UnaryOperator	-		2011806	0					
ANR	2011983	Identifier	err		2011806	1					
ANR	2011984	ReturnStatement	return tasks ;	547:1:17162:17174	2011806	12	True				
ANR	2011985	Identifier	tasks		2011806	0					
ANR	2011986	ReturnType	int		2011806	1					
ANR	2011987	Identifier	ProcFamily :: count_tasks_cgroup		2011806	2					
ANR	2011988	ParameterList			2011806	3					
ANR	2011989	CFGEntryNode	ENTRY		2011806		True				
ANR	2011990	CFGExitNode	EXIT		2011806		True				
ANR	2011991	Symbol	malloc		2011806						
ANR	2011992	Symbol	NULL		2011806						
ANR	2011993	Symbol	D_PROCFAMILY		2011806						
ANR	2011994	Symbol	err		2011806						
ANR	2011995	Symbol	ASSERT		2011806						
ANR	2011996	Symbol	* handle		2011806						
ANR	2011997	Symbol	pid		2011806						
ANR	2011998	Symbol	handle		2011806						
ANR	2011999	Symbol	cgroup_get_task_begin		2011806						
ANR	2012000	Symbol	cgroup_get_task_next		2011806						
ANR	2012001	Symbol	CPUACCT_CONTROLLER		2011806						
ANR	2012002	Symbol	cgroup_strerror		2011806						
ANR	2012003	Symbol	m_cgroup_cpuacct_mounted		2011806						
ANR	2012004	Symbol	& pid		2011806						
ANR	2012005	Symbol	m_cgroup_string		2011806						
ANR	2012006	Symbol	ECGEOF		2011806						
ANR	2012007	Symbol	m_root_pid		2011806						
ANR	2012008	Symbol	tasks		2011806						
ANR	2012009	Function	_check_stat_uint64	553:0:17192:17591							
ANR	2012010	FunctionDef	"_check_stat_uint64 (const struct cgroup_stat stats , const char * name , u_int64_t * result)"		2012009	0					
ANR	2012011	CompoundStatement		553:87:17279:17591	2012009	0					
ANR	2012012	IdentifierDeclStatement	u_int64_t tmp ;	554:1:17282:17295	2012009	0	True				
ANR	2012013	IdentifierDecl	tmp		2012009	0					
ANR	2012014	IdentifierDeclType	u_int64_t		2012009	0					
ANR	2012015	Identifier	tmp		2012009	1					
ANR	2012016	IfStatement	"if ( 0 == strcmp ( name , stats . name ) )"		2012009	1					
ANR	2012017	Condition	"0 == strcmp ( name , stats . name )"	555:5:17302:17330	2012009	0	True				
ANR	2012018	EqualityExpression	"0 == strcmp ( name , stats . name )"		2012009	0		==			
ANR	2012019	PrimaryExpression	0		2012009	0					
ANR	2012020	CallExpression	"strcmp ( name , stats . name )"		2012009	1					
ANR	2012021	Callee	strcmp		2012009	0					
ANR	2012022	Identifier	strcmp		2012009	0					
ANR	2012023	ArgumentList	name		2012009	1					
ANR	2012024	Argument	name		2012009	0					
ANR	2012025	Identifier	name		2012009	0					
ANR	2012026	Argument	stats . name		2012009	1					
ANR	2012027	MemberAccess	stats . name		2012009	0					
ANR	2012028	Identifier	stats		2012009	0					
ANR	2012029	Identifier	name		2012009	1					
ANR	2012030	CompoundStatement		3:36:53:53	2012009	1					
ANR	2012031	ExpressionStatement	errno = 0	556:2:17337:17346	2012009	0	True				
ANR	2012032	AssignmentExpression	errno = 0		2012009	0		=			
ANR	2012033	Identifier	errno		2012009	0					
ANR	2012034	PrimaryExpression	0		2012009	1					
ANR	2012035	ExpressionStatement	"tmp = ( u_int64_t ) strtoll ( stats . value , NULL , 0 )"	557:2:17350:17396	2012009	1	True				
ANR	2012036	AssignmentExpression	"tmp = ( u_int64_t ) strtoll ( stats . value , NULL , 0 )"		2012009	0		=			
ANR	2012037	Identifier	tmp		2012009	0					
ANR	2012038	CastExpression	"( u_int64_t ) strtoll ( stats . value , NULL , 0 )"		2012009	1					
ANR	2012039	CastTarget	u_int64_t		2012009	0					
ANR	2012040	CallExpression	"strtoll ( stats . value , NULL , 0 )"		2012009	1					
ANR	2012041	Callee	strtoll		2012009	0					
ANR	2012042	Identifier	strtoll		2012009	0					
ANR	2012043	ArgumentList	stats . value		2012009	1					
ANR	2012044	Argument	stats . value		2012009	0					
ANR	2012045	MemberAccess	stats . value		2012009	0					
ANR	2012046	Identifier	stats		2012009	0					
ANR	2012047	Identifier	value		2012009	1					
ANR	2012048	Argument	NULL		2012009	1					
ANR	2012049	Identifier	NULL		2012009	0					
ANR	2012050	Argument	0		2012009	2					
ANR	2012051	PrimaryExpression	0		2012009	0					
ANR	2012052	IfStatement	if ( errno == 0 )		2012009	2					
ANR	2012053	Condition	errno == 0	558:6:17404:17413	2012009	0	True				
ANR	2012054	EqualityExpression	errno == 0		2012009	0		==			
ANR	2012055	Identifier	errno		2012009	0					
ANR	2012056	PrimaryExpression	0		2012009	1					
ANR	2012057	CompoundStatement		6:18:136:136	2012009	1					
ANR	2012058	ExpressionStatement	* result = tmp	559:3:17421:17434	2012009	0	True				
ANR	2012059	AssignmentExpression	* result = tmp		2012009	0		=			
ANR	2012060	UnaryOperationExpression	* result		2012009	0					
ANR	2012061	UnaryOperator	*		2012009	0					
ANR	2012062	Identifier	result		2012009	1					
ANR	2012063	Identifier	tmp		2012009	1					
ANR	2012064	ReturnStatement	return true ;	560:3:17439:17450	2012009	1	True				
ANR	2012065	Identifier	true		2012009	0					
ANR	2012066	ElseStatement	else		2012009	0					
ANR	2012067	CompoundStatement		9:9:181:181	2012009	0					
ANR	2012068	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Invalid cgroup stat %s for %s.\\n"" , stats . value , name )"	562:3:17466:17550	2012009	0	True				
ANR	2012069	CallExpression	"dprintf ( D_PROCFAMILY , ""Invalid cgroup stat %s for %s.\\n"" , stats . value , name )"		2012009	0					
ANR	2012070	Callee	dprintf		2012009	0					
ANR	2012071	Identifier	dprintf		2012009	0					
ANR	2012072	ArgumentList	D_PROCFAMILY		2012009	1					
ANR	2012073	Argument	D_PROCFAMILY		2012009	0					
ANR	2012074	Identifier	D_PROCFAMILY		2012009	0					
ANR	2012075	Argument	"""Invalid cgroup stat %s for %s.\\n"""		2012009	1					
ANR	2012076	PrimaryExpression	"""Invalid cgroup stat %s for %s.\\n"""		2012009	0					
ANR	2012077	Argument	stats . value		2012009	2					
ANR	2012078	MemberAccess	stats . value		2012009	0					
ANR	2012079	Identifier	stats		2012009	0					
ANR	2012080	Identifier	value		2012009	1					
ANR	2012081	Argument	name		2012009	3					
ANR	2012082	Identifier	name		2012009	0					
ANR	2012083	ReturnStatement	return false ;	565:3:17555:17567	2012009	1	True				
ANR	2012084	Identifier	false		2012009	0					
ANR	2012085	ReturnStatement	return false ;	568:1:17577:17589	2012009	2	True				
ANR	2012086	Identifier	false		2012009	0					
ANR	2012087	Identifier	_check_stat_uint64		2012009	1					
ANR	2012088	ParameterList	"const struct cgroup_stat stats , const char * name , u_int64_t * result"		2012009	2					
ANR	2012089	Parameter	const struct cgroup_stat stats	553:19:17211:17240	2012009	0	True				
ANR	2012090	ParameterType	const struct cgroup_stat		2012009	0					
ANR	2012091	Identifier	stats		2012009	1					
ANR	2012092	Parameter	const char * name	553:51:17243:17258	2012009	1	True				
ANR	2012093	ParameterType	const char *		2012009	0					
ANR	2012094	Identifier	name		2012009	1					
ANR	2012095	Parameter	u_int64_t * result	553:69:17261:17277	2012009	2	True				
ANR	2012096	ParameterType	u_int64_t *		2012009	0					
ANR	2012097	Identifier	result		2012009	1					
ANR	2012098	CFGEntryNode	ENTRY		2012009		True				
ANR	2012099	CFGExitNode	EXIT		2012009		True				
ANR	2012100	Symbol	strcmp		2012009						
ANR	2012101	Symbol	errno		2012009						
ANR	2012102	Symbol	NULL		2012009						
ANR	2012103	Symbol	D_PROCFAMILY		2012009						
ANR	2012104	Symbol	false		2012009						
ANR	2012105	Symbol	stats . value		2012009						
ANR	2012106	Symbol	result		2012009						
ANR	2012107	Symbol	stats		2012009						
ANR	2012108	Symbol	* result		2012009						
ANR	2012109	Symbol	tmp		2012009						
ANR	2012110	Symbol	stats . name		2012009						
ANR	2012111	Symbol	strtoll		2012009						
ANR	2012112	Symbol	name		2012009						
ANR	2012113	Symbol	true		2012009						
ANR	2012114	Function	ProcFamily :: update_max_image_size_cgroup	571:0:17594:18737							
ANR	2012115	FunctionDef	ProcFamily :: update_max_image_size_cgroup ()		2012114	0					
ANR	2012116	CompoundStatement		573:0:17642:18737	2012114	0					
ANR	2012117	IfStatement	if ( ! m_cgroup_memory_mounted )		2012114	0					
ANR	2012118	Condition	! m_cgroup_memory_mounted	574:5:17649:17672	2012114	0	True				
ANR	2012119	UnaryOperationExpression	! m_cgroup_memory_mounted		2012114	0					
ANR	2012120	UnaryOperator	!		2012114	0					
ANR	2012121	Identifier	m_cgroup_memory_mounted		2012114	1					
ANR	2012122	CompoundStatement		2:31:32:32	2012114	1					
ANR	2012123	ReturnStatement	return ;	575:2:17679:17685	2012114	0	True				
ANR	2012124	IdentifierDeclStatement	int err ;	578:1:17692:17699	2012114	1	True				
ANR	2012125	IdentifierDecl	err		2012114	0					
ANR	2012126	IdentifierDeclType	int		2012114	0					
ANR	2012127	Identifier	err		2012114	1					
ANR	2012128	IdentifierDeclStatement	u_int64_t max_image ;	579:1:17702:17721	2012114	2	True				
ANR	2012129	IdentifierDecl	max_image		2012114	0					
ANR	2012130	IdentifierDeclType	u_int64_t		2012114	0					
ANR	2012131	Identifier	max_image		2012114	1					
ANR	2012132	IdentifierDeclStatement	struct cgroup * memcg ;	580:1:17724:17744	2012114	3	True				
ANR	2012133	IdentifierDecl	* memcg		2012114	0					
ANR	2012134	IdentifierDeclType	struct cgroup *		2012114	0					
ANR	2012135	Identifier	memcg		2012114	1					
ANR	2012136	IdentifierDeclStatement	struct cgroup_controller * memct ;	581:1:17747:17778	2012114	4	True				
ANR	2012137	IdentifierDecl	* memct		2012114	0					
ANR	2012138	IdentifierDeclType	struct cgroup_controller *		2012114	0					
ANR	2012139	Identifier	memct		2012114	1					
ANR	2012140	IfStatement	if ( ( memcg = cgroup_new_cgroup ( m_cgroup_string ) ) == NULL )		2012114	5					
ANR	2012141	Condition	( memcg = cgroup_new_cgroup ( m_cgroup_string ) ) == NULL	582:5:17785:17836	2012114	0	True				
ANR	2012142	EqualityExpression	( memcg = cgroup_new_cgroup ( m_cgroup_string ) ) == NULL		2012114	0		==			
ANR	2012143	AssignmentExpression	memcg = cgroup_new_cgroup ( m_cgroup_string )		2012114	0		=			
ANR	2012144	Identifier	memcg		2012114	0					
ANR	2012145	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		2012114	1					
ANR	2012146	Callee	cgroup_new_cgroup		2012114	0					
ANR	2012147	Identifier	cgroup_new_cgroup		2012114	0					
ANR	2012148	ArgumentList	m_cgroup_string		2012114	1					
ANR	2012149	Argument	m_cgroup_string		2012114	0					
ANR	2012150	Identifier	m_cgroup_string		2012114	0					
ANR	2012151	Identifier	NULL		2012114	1					
ANR	2012152	CompoundStatement		10:59:196:196	2012114	1					
ANR	2012153	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to allocate cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"	583:2:17843:17950	2012114	0	True				
ANR	2012154	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to allocate cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"		2012114	0					
ANR	2012155	Callee	dprintf		2012114	0					
ANR	2012156	Identifier	dprintf		2012114	0					
ANR	2012157	ArgumentList	D_PROCFAMILY		2012114	1					
ANR	2012158	Argument	D_PROCFAMILY		2012114	0					
ANR	2012159	Identifier	D_PROCFAMILY		2012114	0					
ANR	2012160	Argument	"""Unable to allocate cgroup %s (ProcFamily %u).\\n"""		2012114	1					
ANR	2012161	PrimaryExpression	"""Unable to allocate cgroup %s (ProcFamily %u).\\n"""		2012114	0					
ANR	2012162	Argument	m_cgroup_string		2012114	2					
ANR	2012163	Identifier	m_cgroup_string		2012114	0					
ANR	2012164	Argument	m_root_pid		2012114	3					
ANR	2012165	Identifier	m_root_pid		2012114	0					
ANR	2012166	ReturnStatement	return ;	586:2:17954:17960	2012114	1	True				
ANR	2012167	IfStatement	if ( ( err = cgroup_get_cgroup ( memcg ) ) )		2012114	6					
ANR	2012168	Condition	err = cgroup_get_cgroup ( memcg )	588:5:17970:18001	2012114	0	True				
ANR	2012169	AssignmentExpression	err = cgroup_get_cgroup ( memcg )		2012114	0		=			
ANR	2012170	Identifier	err		2012114	0					
ANR	2012171	CallExpression	cgroup_get_cgroup ( memcg )		2012114	1					
ANR	2012172	Callee	cgroup_get_cgroup		2012114	0					
ANR	2012173	Identifier	cgroup_get_cgroup		2012114	0					
ANR	2012174	ArgumentList	memcg		2012114	1					
ANR	2012175	Argument	memcg		2012114	0					
ANR	2012176	Identifier	memcg		2012114	0					
ANR	2012177	CompoundStatement		16:39:361:361	2012114	1					
ANR	2012178	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to load cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"	589:2:18008:18111	2012114	0	True				
ANR	2012179	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to load cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"		2012114	0					
ANR	2012180	Callee	dprintf		2012114	0					
ANR	2012181	Identifier	dprintf		2012114	0					
ANR	2012182	ArgumentList	D_PROCFAMILY		2012114	1					
ANR	2012183	Argument	D_PROCFAMILY		2012114	0					
ANR	2012184	Identifier	D_PROCFAMILY		2012114	0					
ANR	2012185	Argument	"""Unable to load cgroup %s (ProcFamily %u).\\n"""		2012114	1					
ANR	2012186	PrimaryExpression	"""Unable to load cgroup %s (ProcFamily %u).\\n"""		2012114	0					
ANR	2012187	Argument	m_cgroup_string		2012114	2					
ANR	2012188	Identifier	m_cgroup_string		2012114	0					
ANR	2012189	Argument	m_root_pid		2012114	3					
ANR	2012190	Identifier	m_root_pid		2012114	0					
ANR	2012191	ExpressionStatement	cgroup_free ( & memcg )	592:2:18115:18134	2012114	1	True				
ANR	2012192	CallExpression	cgroup_free ( & memcg )		2012114	0					
ANR	2012193	Callee	cgroup_free		2012114	0					
ANR	2012194	Identifier	cgroup_free		2012114	0					
ANR	2012195	ArgumentList	& memcg		2012114	1					
ANR	2012196	Argument	& memcg		2012114	0					
ANR	2012197	UnaryOperationExpression	& memcg		2012114	0					
ANR	2012198	UnaryOperator	&		2012114	0					
ANR	2012199	Identifier	memcg		2012114	1					
ANR	2012200	ReturnStatement	return ;	593:2:18138:18144	2012114	2	True				
ANR	2012201	IfStatement	"if ( ( memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER ) ) == NULL )"		2012114	7					
ANR	2012202	Condition	"( memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER ) ) == NULL"	595:5:18154:18218	2012114	0	True				
ANR	2012203	EqualityExpression	"( memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER ) ) == NULL"		2012114	0		==			
ANR	2012204	AssignmentExpression	"memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER )"		2012114	0		=			
ANR	2012205	Identifier	memct		2012114	0					
ANR	2012206	CallExpression	"cgroup_get_controller ( memcg , MEMORY_CONTROLLER )"		2012114	1					
ANR	2012207	Callee	cgroup_get_controller		2012114	0					
ANR	2012208	Identifier	cgroup_get_controller		2012114	0					
ANR	2012209	ArgumentList	memcg		2012114	1					
ANR	2012210	Argument	memcg		2012114	0					
ANR	2012211	Identifier	memcg		2012114	0					
ANR	2012212	Argument	MEMORY_CONTROLLER		2012114	1					
ANR	2012213	Identifier	MEMORY_CONTROLLER		2012114	0					
ANR	2012214	Identifier	NULL		2012114	1					
ANR	2012215	CompoundStatement		23:72:578:578	2012114	1					
ANR	2012216	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"	596:2:18225:18350	2012114	0	True				
ANR	2012217	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"		2012114	0					
ANR	2012218	Callee	dprintf		2012114	0					
ANR	2012219	Identifier	dprintf		2012114	0					
ANR	2012220	ArgumentList	D_PROCFAMILY		2012114	1					
ANR	2012221	Argument	D_PROCFAMILY		2012114	0					
ANR	2012222	Identifier	D_PROCFAMILY		2012114	0					
ANR	2012223	Argument	"""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"""		2012114	1					
ANR	2012224	PrimaryExpression	"""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"""		2012114	0					
ANR	2012225	Argument	m_cgroup_string		2012114	2					
ANR	2012226	Identifier	m_cgroup_string		2012114	0					
ANR	2012227	Argument	m_root_pid		2012114	3					
ANR	2012228	Identifier	m_root_pid		2012114	0					
ANR	2012229	ExpressionStatement	cgroup_free ( & memcg )	599:2:18354:18373	2012114	1	True				
ANR	2012230	CallExpression	cgroup_free ( & memcg )		2012114	0					
ANR	2012231	Callee	cgroup_free		2012114	0					
ANR	2012232	Identifier	cgroup_free		2012114	0					
ANR	2012233	ArgumentList	& memcg		2012114	1					
ANR	2012234	Argument	& memcg		2012114	0					
ANR	2012235	UnaryOperationExpression	& memcg		2012114	0					
ANR	2012236	UnaryOperator	&		2012114	0					
ANR	2012237	Identifier	memcg		2012114	1					
ANR	2012238	ReturnStatement	return ;	600:2:18377:18383	2012114	2	True				
ANR	2012239	IfStatement	"if ( ( err = cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image ) ) )"		2012114	8					
ANR	2012240	Condition	"err = cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image )"	602:5:18393:18477	2012114	0	True				
ANR	2012241	AssignmentExpression	"err = cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image )"		2012114	0		=			
ANR	2012242	Identifier	err		2012114	0					
ANR	2012243	CallExpression	"cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image )"		2012114	1					
ANR	2012244	Callee	cgroup_get_value_uint64		2012114	0					
ANR	2012245	Identifier	cgroup_get_value_uint64		2012114	0					
ANR	2012246	ArgumentList	memct		2012114	1					
ANR	2012247	Argument	memct		2012114	0					
ANR	2012248	Identifier	memct		2012114	0					
ANR	2012249	Argument	"""memory.memsw.max_usage_in_bytes"""		2012114	1					
ANR	2012250	PrimaryExpression	"""memory.memsw.max_usage_in_bytes"""		2012114	0					
ANR	2012251	Argument	& max_image		2012114	2					
ANR	2012252	UnaryOperationExpression	& max_image		2012114	0					
ANR	2012253	UnaryOperator	&		2012114	0					
ANR	2012254	Identifier	max_image		2012114	1					
ANR	2012255	CompoundStatement		30:92:837:837	2012114	1					
ANR	2012256	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	603:2:18484:18641	2012114	0	True				
ANR	2012257	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2012114	0					
ANR	2012258	Callee	dprintf		2012114	0					
ANR	2012259	Identifier	dprintf		2012114	0					
ANR	2012260	ArgumentList	D_PROCFAMILY		2012114	1					
ANR	2012261	Argument	D_PROCFAMILY		2012114	0					
ANR	2012262	Identifier	D_PROCFAMILY		2012114	0					
ANR	2012263	Argument	"""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"""		2012114	1					
ANR	2012264	PrimaryExpression	"""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"""		2012114	0					
ANR	2012265	Argument	m_cgroup_string		2012114	2					
ANR	2012266	Identifier	m_cgroup_string		2012114	0					
ANR	2012267	Argument	m_root_pid		2012114	3					
ANR	2012268	Identifier	m_root_pid		2012114	0					
ANR	2012269	Argument	err		2012114	4					
ANR	2012270	Identifier	err		2012114	0					
ANR	2012271	Argument	cgroup_strerror ( err )		2012114	5					
ANR	2012272	CallExpression	cgroup_strerror ( err )		2012114	0					
ANR	2012273	Callee	cgroup_strerror		2012114	0					
ANR	2012274	Identifier	cgroup_strerror		2012114	0					
ANR	2012275	ArgumentList	err		2012114	1					
ANR	2012276	Argument	err		2012114	0					
ANR	2012277	Identifier	err		2012114	0					
ANR	2012278	ExpressionStatement	cgroup_free ( & memcg )	606:2:18645:18664	2012114	1	True				
ANR	2012279	CallExpression	cgroup_free ( & memcg )		2012114	0					
ANR	2012280	Callee	cgroup_free		2012114	0					
ANR	2012281	Identifier	cgroup_free		2012114	0					
ANR	2012282	ArgumentList	& memcg		2012114	1					
ANR	2012283	Argument	& memcg		2012114	0					
ANR	2012284	UnaryOperationExpression	& memcg		2012114	0					
ANR	2012285	UnaryOperator	&		2012114	0					
ANR	2012286	Identifier	memcg		2012114	1					
ANR	2012287	ReturnStatement	return ;	607:2:18668:18674	2012114	2	True				
ANR	2012288	ExpressionStatement	m_max_image_size = max_image / 1024	609:1:18680:18713	2012114	9	True				
ANR	2012289	AssignmentExpression	m_max_image_size = max_image / 1024		2012114	0		=			
ANR	2012290	Identifier	m_max_image_size		2012114	0					
ANR	2012291	MultiplicativeExpression	max_image / 1024		2012114	1		/			
ANR	2012292	Identifier	max_image		2012114	0					
ANR	2012293	PrimaryExpression	1024		2012114	1					
ANR	2012294	ExpressionStatement	cgroup_free ( & memcg )	610:1:18716:18735	2012114	10	True				
ANR	2012295	CallExpression	cgroup_free ( & memcg )		2012114	0					
ANR	2012296	Callee	cgroup_free		2012114	0					
ANR	2012297	Identifier	cgroup_free		2012114	0					
ANR	2012298	ArgumentList	& memcg		2012114	1					
ANR	2012299	Argument	& memcg		2012114	0					
ANR	2012300	UnaryOperationExpression	& memcg		2012114	0					
ANR	2012301	UnaryOperator	&		2012114	0					
ANR	2012302	Identifier	memcg		2012114	1					
ANR	2012303	ReturnType	void		2012114	1					
ANR	2012304	Identifier	ProcFamily :: update_max_image_size_cgroup		2012114	2					
ANR	2012305	ParameterList			2012114	3					
ANR	2012306	CFGEntryNode	ENTRY		2012114		True				
ANR	2012307	CFGExitNode	EXIT		2012114		True				
ANR	2012308	Symbol	NULL		2012114						
ANR	2012309	Symbol	D_PROCFAMILY		2012114						
ANR	2012310	Symbol	MEMORY_CONTROLLER		2012114						
ANR	2012311	Symbol	err		2012114						
ANR	2012312	Symbol	cgroup_get_value_uint64		2012114						
ANR	2012313	Symbol	cgroup_get_cgroup		2012114						
ANR	2012314	Symbol	cgroup_get_controller		2012114						
ANR	2012315	Symbol	& memcg		2012114						
ANR	2012316	Symbol	m_cgroup_memory_mounted		2012114						
ANR	2012317	Symbol	memct		2012114						
ANR	2012318	Symbol	cgroup_new_cgroup		2012114						
ANR	2012319	Symbol	m_max_image_size		2012114						
ANR	2012320	Symbol	cgroup_strerror		2012114						
ANR	2012321	Symbol	memcg		2012114						
ANR	2012322	Symbol	max_image		2012114						
ANR	2012323	Symbol	m_cgroup_string		2012114						
ANR	2012324	Symbol	m_root_pid		2012114						
ANR	2012325	Symbol	& max_image		2012114						
ANR	2012326	Function	ProcFamily :: aggregate_usage_cgroup_blockio	613:0:18740:20096							
ANR	2012327	FunctionDef	ProcFamily :: aggregate_usage_cgroup_blockio (ProcFamilyUsage * usage)		2012326	0					
ANR	2012328	CompoundStatement		615:0:18811:20096	2012326	0					
ANR	2012329	IfStatement	if ( ! m_cgroup_block_mounted )		2012326	0					
ANR	2012330	Condition	! m_cgroup_block_mounted	617:5:18819:18841	2012326	0	True				
ANR	2012331	UnaryOperationExpression	! m_cgroup_block_mounted		2012326	0					
ANR	2012332	UnaryOperator	!		2012326	0					
ANR	2012333	Identifier	m_cgroup_block_mounted		2012326	1					
ANR	2012334	ReturnStatement	return 1 ;	618:2:18846:18854	2012326	1	True				
ANR	2012335	PrimaryExpression	1		2012326	0					
ANR	2012336	IdentifierDeclStatement	int ret ;	620:1:18858:18865	2012326	1	True				
ANR	2012337	IdentifierDecl	ret		2012326	0					
ANR	2012338	IdentifierDeclType	int		2012326	0					
ANR	2012339	Identifier	ret		2012326	1					
ANR	2012340	IdentifierDeclStatement	void * handle ;	621:1:18868:18880	2012326	2	True				
ANR	2012341	IdentifierDecl	* handle		2012326	0					
ANR	2012342	IdentifierDeclType	void *		2012326	0					
ANR	2012343	Identifier	handle		2012326	1					
ANR	2012344	IdentifierDeclStatement	"char line_contents [ BLOCK_STATS_LINE_MAX ] , sep [ ] = "" "" , * tok_handle , * word , * info [ 3 ] ;"	622:1:18883:18964	2012326	3	True				
ANR	2012345	IdentifierDecl	line_contents [ BLOCK_STATS_LINE_MAX ]		2012326	0					
ANR	2012346	IdentifierDeclType	char [ BLOCK_STATS_LINE_MAX ]		2012326	0					
ANR	2012347	Identifier	line_contents		2012326	1					
ANR	2012348	Identifier	BLOCK_STATS_LINE_MAX		2012326	2					
ANR	2012349	IdentifierDecl	"sep [ ] = "" """		2012326	1					
ANR	2012350	IdentifierDeclType	char [ ]		2012326	0					
ANR	2012351	Identifier	sep		2012326	1					
ANR	2012352	AssignmentExpression	"sep [ ] = "" """		2012326	2		=			
ANR	2012353	Identifier	sep		2012326	0					
ANR	2012354	PrimaryExpression	""" """		2012326	1					
ANR	2012355	IdentifierDecl	* tok_handle		2012326	2					
ANR	2012356	IdentifierDeclType	char *		2012326	0					
ANR	2012357	Identifier	tok_handle		2012326	1					
ANR	2012358	IdentifierDecl	* word		2012326	3					
ANR	2012359	IdentifierDeclType	char *		2012326	0					
ANR	2012360	Identifier	word		2012326	1					
ANR	2012361	IdentifierDecl	* info [ 3 ]		2012326	4					
ANR	2012362	IdentifierDeclType	char * [ 3 ]		2012326	0					
ANR	2012363	Identifier	info		2012326	1					
ANR	2012364	PrimaryExpression	3		2012326	2					
ANR	2012365	IdentifierDeclStatement	"char blkio_stats_name [ ] = ""blkio.io_service_bytes"" ;"	623:1:18967:19017	2012326	4	True				
ANR	2012366	IdentifierDecl	"blkio_stats_name [ ] = ""blkio.io_service_bytes"""		2012326	0					
ANR	2012367	IdentifierDeclType	char [ ]		2012326	0					
ANR	2012368	Identifier	blkio_stats_name		2012326	1					
ANR	2012369	AssignmentExpression	"blkio_stats_name [ ] = ""blkio.io_service_bytes"""		2012326	2		=			
ANR	2012370	Identifier	blkio_stats_name		2012326	0					
ANR	2012371	PrimaryExpression	"""blkio.io_service_bytes"""		2012326	1					
ANR	2012372	IdentifierDeclStatement	short ctr ;	624:1:19020:19029	2012326	5	True				
ANR	2012373	IdentifierDecl	ctr		2012326	0					
ANR	2012374	IdentifierDeclType	short		2012326	0					
ANR	2012375	Identifier	ctr		2012326	1					
ANR	2012376	IdentifierDeclStatement	"long int read_bytes = 0 , write_bytes = 0 ;"	625:1:19032:19068	2012326	6	True				
ANR	2012377	IdentifierDecl	read_bytes = 0		2012326	0					
ANR	2012378	IdentifierDeclType	long int		2012326	0					
ANR	2012379	Identifier	read_bytes		2012326	1					
ANR	2012380	AssignmentExpression	read_bytes = 0		2012326	2		=			
ANR	2012381	Identifier	read_bytes		2012326	0					
ANR	2012382	PrimaryExpression	0		2012326	1					
ANR	2012383	IdentifierDecl	write_bytes = 0		2012326	1					
ANR	2012384	IdentifierDeclType	long int		2012326	0					
ANR	2012385	Identifier	write_bytes		2012326	1					
ANR	2012386	AssignmentExpression	write_bytes = 0		2012326	2		=			
ANR	2012387	Identifier	write_bytes		2012326	0					
ANR	2012388	PrimaryExpression	0		2012326	1					
ANR	2012389	ExpressionStatement	"ret = cgroup_read_value_begin ( BLOCK_CONTROLLER , m_cgroup_string , blkio_stats_name , & handle , line_contents , BLOCK_STATS_LINE_MAX )"	626:1:19071:19230	2012326	7	True				
ANR	2012390	AssignmentExpression	"ret = cgroup_read_value_begin ( BLOCK_CONTROLLER , m_cgroup_string , blkio_stats_name , & handle , line_contents , BLOCK_STATS_LINE_MAX )"		2012326	0		=			
ANR	2012391	Identifier	ret		2012326	0					
ANR	2012392	CallExpression	"cgroup_read_value_begin ( BLOCK_CONTROLLER , m_cgroup_string , blkio_stats_name , & handle , line_contents , BLOCK_STATS_LINE_MAX )"		2012326	1					
ANR	2012393	Callee	cgroup_read_value_begin		2012326	0					
ANR	2012394	Identifier	cgroup_read_value_begin		2012326	0					
ANR	2012395	ArgumentList	BLOCK_CONTROLLER		2012326	1					
ANR	2012396	Argument	BLOCK_CONTROLLER		2012326	0					
ANR	2012397	Identifier	BLOCK_CONTROLLER		2012326	0					
ANR	2012398	Argument	m_cgroup_string		2012326	1					
ANR	2012399	Identifier	m_cgroup_string		2012326	0					
ANR	2012400	Argument	blkio_stats_name		2012326	2					
ANR	2012401	Identifier	blkio_stats_name		2012326	0					
ANR	2012402	Argument	& handle		2012326	3					
ANR	2012403	UnaryOperationExpression	& handle		2012326	0					
ANR	2012404	UnaryOperator	&		2012326	0					
ANR	2012405	Identifier	handle		2012326	1					
ANR	2012406	Argument	line_contents		2012326	4					
ANR	2012407	Identifier	line_contents		2012326	0					
ANR	2012408	Argument	BLOCK_STATS_LINE_MAX		2012326	5					
ANR	2012409	Identifier	BLOCK_STATS_LINE_MAX		2012326	0					
ANR	2012410	WhileStatement	while ( ret == 0 )		2012326	8					
ANR	2012411	Condition	ret == 0	628:8:19240:19247	2012326	0	True				
ANR	2012412	EqualityExpression	ret == 0		2012326	0		==			
ANR	2012413	Identifier	ret		2012326	0					
ANR	2012414	PrimaryExpression	0		2012326	1					
ANR	2012415	CompoundStatement		14:18:438:438	2012326	1					
ANR	2012416	ExpressionStatement	ctr = 0	629:2:19254:19261	2012326	0	True				
ANR	2012417	AssignmentExpression	ctr = 0		2012326	0		=			
ANR	2012418	Identifier	ctr		2012326	0					
ANR	2012419	PrimaryExpression	0		2012326	1					
ANR	2012420	ExpressionStatement	"word = strtok_r ( line_contents , sep , & tok_handle )"	630:2:19265:19313	2012326	1	True				
ANR	2012421	AssignmentExpression	"word = strtok_r ( line_contents , sep , & tok_handle )"		2012326	0		=			
ANR	2012422	Identifier	word		2012326	0					
ANR	2012423	CallExpression	"strtok_r ( line_contents , sep , & tok_handle )"		2012326	1					
ANR	2012424	Callee	strtok_r		2012326	0					
ANR	2012425	Identifier	strtok_r		2012326	0					
ANR	2012426	ArgumentList	line_contents		2012326	1					
ANR	2012427	Argument	line_contents		2012326	0					
ANR	2012428	Identifier	line_contents		2012326	0					
ANR	2012429	Argument	sep		2012326	1					
ANR	2012430	Identifier	sep		2012326	0					
ANR	2012431	Argument	& tok_handle		2012326	2					
ANR	2012432	UnaryOperationExpression	& tok_handle		2012326	0					
ANR	2012433	UnaryOperator	&		2012326	0					
ANR	2012434	Identifier	tok_handle		2012326	1					
ANR	2012435	WhileStatement	while ( word && ctr < 3 )		2012326	2					
ANR	2012436	Condition	word && ctr < 3	631:9:19324:19338	2012326	0	True				
ANR	2012437	AndExpression	word && ctr < 3		2012326	0		&&			
ANR	2012438	Identifier	word		2012326	0					
ANR	2012439	RelationalExpression	ctr < 3		2012326	1		<			
ANR	2012440	Identifier	ctr		2012326	0					
ANR	2012441	PrimaryExpression	3		2012326	1					
ANR	2012442	CompoundStatement		17:26:529:529	2012326	1					
ANR	2012443	ExpressionStatement	info [ ctr ++ ] = word	632:3:19346:19364	2012326	0	True				
ANR	2012444	AssignmentExpression	info [ ctr ++ ] = word		2012326	0		=			
ANR	2012445	ArrayIndexing	info [ ctr ++ ]		2012326	0					
ANR	2012446	Identifier	info		2012326	0					
ANR	2012447	PostIncDecOperationExpression	ctr ++		2012326	1					
ANR	2012448	Identifier	ctr		2012326	0					
ANR	2012449	IncDec	++		2012326	1					
ANR	2012450	Identifier	word		2012326	1					
ANR	2012451	ExpressionStatement	"word = strtok_r ( NULL , sep , & tok_handle )"	633:3:19369:19408	2012326	1	True				
ANR	2012452	AssignmentExpression	"word = strtok_r ( NULL , sep , & tok_handle )"		2012326	0		=			
ANR	2012453	Identifier	word		2012326	0					
ANR	2012454	CallExpression	"strtok_r ( NULL , sep , & tok_handle )"		2012326	1					
ANR	2012455	Callee	strtok_r		2012326	0					
ANR	2012456	Identifier	strtok_r		2012326	0					
ANR	2012457	ArgumentList	NULL		2012326	1					
ANR	2012458	Argument	NULL		2012326	0					
ANR	2012459	Identifier	NULL		2012326	0					
ANR	2012460	Argument	sep		2012326	1					
ANR	2012461	Identifier	sep		2012326	0					
ANR	2012462	Argument	& tok_handle		2012326	2					
ANR	2012463	UnaryOperationExpression	& tok_handle		2012326	0					
ANR	2012464	UnaryOperator	&		2012326	0					
ANR	2012465	Identifier	tok_handle		2012326	1					
ANR	2012466	IfStatement	if ( ctr == 3 )		2012326	3					
ANR	2012467	Condition	ctr == 3	635:6:19420:19427	2012326	0	True				
ANR	2012468	EqualityExpression	ctr == 3		2012326	0		==			
ANR	2012469	Identifier	ctr		2012326	0					
ANR	2012470	PrimaryExpression	3		2012326	1					
ANR	2012471	CompoundStatement		23:3:637:676	2012326	1					
ANR	2012472	ExpressionStatement	errno = 0	636:3:19435:19444	2012326	0	True				
ANR	2012473	AssignmentExpression	errno = 0		2012326	0		=			
ANR	2012474	Identifier	errno		2012326	0					
ANR	2012475	PrimaryExpression	0		2012326	1					
ANR	2012476	IdentifierDeclStatement	"long ctrval = strtol ( info [ 2 ] , NULL , 10 ) ;"	637:3:19449:19488	2012326	1	True				
ANR	2012477	IdentifierDecl	"ctrval = strtol ( info [ 2 ] , NULL , 10 )"		2012326	0					
ANR	2012478	IdentifierDeclType	long		2012326	0					
ANR	2012479	Identifier	ctrval		2012326	1					
ANR	2012480	AssignmentExpression	"ctrval = strtol ( info [ 2 ] , NULL , 10 )"		2012326	2		=			
ANR	2012481	Identifier	ctrval		2012326	0					
ANR	2012482	CallExpression	"strtol ( info [ 2 ] , NULL , 10 )"		2012326	1					
ANR	2012483	Callee	strtol		2012326	0					
ANR	2012484	Identifier	strtol		2012326	0					
ANR	2012485	ArgumentList	info [ 2 ]		2012326	1					
ANR	2012486	Argument	info [ 2 ]		2012326	0					
ANR	2012487	ArrayIndexing	info [ 2 ]		2012326	0					
ANR	2012488	Identifier	info		2012326	0					
ANR	2012489	PrimaryExpression	2		2012326	1					
ANR	2012490	Argument	NULL		2012326	1					
ANR	2012491	Identifier	NULL		2012326	0					
ANR	2012492	Argument	10		2012326	2					
ANR	2012493	PrimaryExpression	10		2012326	0					
ANR	2012494	IfStatement	if ( errno )		2012326	2					
ANR	2012495	Condition	errno	638:7:19497:19501	2012326	0	True				
ANR	2012496	Identifier	errno		2012326	0					
ANR	2012497	CompoundStatement		24:14:692:692	2012326	1					
ANR	2012498	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Error parsing kernel value to a long: %s; %s\\n"" , info [ 2 ] , strerror ( errno ) )"	639:4:19510:19612	2012326	0	True				
ANR	2012499	CallExpression	"dprintf ( D_FULLDEBUG , ""Error parsing kernel value to a long: %s; %s\\n"" , info [ 2 ] , strerror ( errno ) )"		2012326	0					
ANR	2012500	Callee	dprintf		2012326	0					
ANR	2012501	Identifier	dprintf		2012326	0					
ANR	2012502	ArgumentList	D_FULLDEBUG		2012326	1					
ANR	2012503	Argument	D_FULLDEBUG		2012326	0					
ANR	2012504	Identifier	D_FULLDEBUG		2012326	0					
ANR	2012505	Argument	"""Error parsing kernel value to a long: %s; %s\\n"""		2012326	1					
ANR	2012506	PrimaryExpression	"""Error parsing kernel value to a long: %s; %s\\n"""		2012326	0					
ANR	2012507	Argument	info [ 2 ]		2012326	2					
ANR	2012508	ArrayIndexing	info [ 2 ]		2012326	0					
ANR	2012509	Identifier	info		2012326	0					
ANR	2012510	PrimaryExpression	2		2012326	1					
ANR	2012511	Argument	strerror ( errno )		2012326	3					
ANR	2012512	CallExpression	strerror ( errno )		2012326	0					
ANR	2012513	Callee	strerror		2012326	0					
ANR	2012514	Identifier	strerror		2012326	0					
ANR	2012515	ArgumentList	errno		2012326	1					
ANR	2012516	Argument	errno		2012326	0					
ANR	2012517	Identifier	errno		2012326	0					
ANR	2012518	BreakStatement	break ;	641:4:19618:19623	2012326	1	True				
ANR	2012519	IfStatement	"if ( strcmp ( info [ 1 ] , ""Read"" ) == 0 )"		2012326	3					
ANR	2012520	Condition	"strcmp ( info [ 1 ] , ""Read"" ) == 0"	643:7:19637:19664	2012326	0	True				
ANR	2012521	EqualityExpression	"strcmp ( info [ 1 ] , ""Read"" ) == 0"		2012326	0		==			
ANR	2012522	CallExpression	"strcmp ( info [ 1 ] , ""Read"" )"		2012326	0					
ANR	2012523	Callee	strcmp		2012326	0					
ANR	2012524	Identifier	strcmp		2012326	0					
ANR	2012525	ArgumentList	info [ 1 ]		2012326	1					
ANR	2012526	Argument	info [ 1 ]		2012326	0					
ANR	2012527	ArrayIndexing	info [ 1 ]		2012326	0					
ANR	2012528	Identifier	info		2012326	0					
ANR	2012529	PrimaryExpression	1		2012326	1					
ANR	2012530	Argument	"""Read"""		2012326	1					
ANR	2012531	PrimaryExpression	"""Read"""		2012326	0					
ANR	2012532	PrimaryExpression	0		2012326	1					
ANR	2012533	CompoundStatement		29:37:855:855	2012326	1					
ANR	2012534	ExpressionStatement	read_bytes += ctrval	644:4:19673:19693	2012326	0	True				
ANR	2012535	AssignmentExpression	read_bytes += ctrval		2012326	0		+=			
ANR	2012536	Identifier	read_bytes		2012326	0					
ANR	2012537	Identifier	ctrval		2012326	1					
ANR	2012538	ElseStatement	else		2012326	0					
ANR	2012539	IfStatement	"if ( strcmp ( info [ 1 ] , ""Write"" ) == 0 )"		2012326	0					
ANR	2012540	Condition	"strcmp ( info [ 1 ] , ""Write"" ) == 0"	645:14:19709:19737	2012326	0	True				
ANR	2012541	EqualityExpression	"strcmp ( info [ 1 ] , ""Write"" ) == 0"		2012326	0		==			
ANR	2012542	CallExpression	"strcmp ( info [ 1 ] , ""Write"" )"		2012326	0					
ANR	2012543	Callee	strcmp		2012326	0					
ANR	2012544	Identifier	strcmp		2012326	0					
ANR	2012545	ArgumentList	info [ 1 ]		2012326	1					
ANR	2012546	Argument	info [ 1 ]		2012326	0					
ANR	2012547	ArrayIndexing	info [ 1 ]		2012326	0					
ANR	2012548	Identifier	info		2012326	0					
ANR	2012549	PrimaryExpression	1		2012326	1					
ANR	2012550	Argument	"""Write"""		2012326	1					
ANR	2012551	PrimaryExpression	"""Write"""		2012326	0					
ANR	2012552	PrimaryExpression	0		2012326	1					
ANR	2012553	CompoundStatement		31:45:928:928	2012326	1					
ANR	2012554	ExpressionStatement	write_bytes += ctrval	646:4:19746:19767	2012326	0	True				
ANR	2012555	AssignmentExpression	write_bytes += ctrval		2012326	0		+=			
ANR	2012556	Identifier	write_bytes		2012326	0					
ANR	2012557	Identifier	ctrval		2012326	1					
ANR	2012558	ExpressionStatement	"ret = cgroup_read_value_next ( & handle , line_contents , BLOCK_STATS_LINE_MAX )"	649:2:19780:19854	2012326	4	True				
ANR	2012559	AssignmentExpression	"ret = cgroup_read_value_next ( & handle , line_contents , BLOCK_STATS_LINE_MAX )"		2012326	0		=			
ANR	2012560	Identifier	ret		2012326	0					
ANR	2012561	CallExpression	"cgroup_read_value_next ( & handle , line_contents , BLOCK_STATS_LINE_MAX )"		2012326	1					
ANR	2012562	Callee	cgroup_read_value_next		2012326	0					
ANR	2012563	Identifier	cgroup_read_value_next		2012326	0					
ANR	2012564	ArgumentList	& handle		2012326	1					
ANR	2012565	Argument	& handle		2012326	0					
ANR	2012566	UnaryOperationExpression	& handle		2012326	0					
ANR	2012567	UnaryOperator	&		2012326	0					
ANR	2012568	Identifier	handle		2012326	1					
ANR	2012569	Argument	line_contents		2012326	1					
ANR	2012570	Identifier	line_contents		2012326	0					
ANR	2012571	Argument	BLOCK_STATS_LINE_MAX		2012326	2					
ANR	2012572	Identifier	BLOCK_STATS_LINE_MAX		2012326	0					
ANR	2012573	IfStatement	if ( ret != ECGEOF )		2012326	9					
ANR	2012574	Condition	ret != ECGEOF	651:5:19864:19876	2012326	0	True				
ANR	2012575	EqualityExpression	ret != ECGEOF		2012326	0		!=			
ANR	2012576	Identifier	ret		2012326	0					
ANR	2012577	Identifier	ECGEOF		2012326	1					
ANR	2012578	CompoundStatement		37:20:1067:1067	2012326	1					
ANR	2012579	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal cgroup error when retrieving block statistics: %s\\n"" , cgroup_strerror ( ret ) )"	652:2:19883:19986	2012326	0	True				
ANR	2012580	CallExpression	"dprintf ( D_ALWAYS , ""Internal cgroup error when retrieving block statistics: %s\\n"" , cgroup_strerror ( ret ) )"		2012326	0					
ANR	2012581	Callee	dprintf		2012326	0					
ANR	2012582	Identifier	dprintf		2012326	0					
ANR	2012583	ArgumentList	D_ALWAYS		2012326	1					
ANR	2012584	Argument	D_ALWAYS		2012326	0					
ANR	2012585	Identifier	D_ALWAYS		2012326	0					
ANR	2012586	Argument	"""Internal cgroup error when retrieving block statistics: %s\\n"""		2012326	1					
ANR	2012587	PrimaryExpression	"""Internal cgroup error when retrieving block statistics: %s\\n"""		2012326	0					
ANR	2012588	Argument	cgroup_strerror ( ret )		2012326	2					
ANR	2012589	CallExpression	cgroup_strerror ( ret )		2012326	0					
ANR	2012590	Callee	cgroup_strerror		2012326	0					
ANR	2012591	Identifier	cgroup_strerror		2012326	0					
ANR	2012592	ArgumentList	ret		2012326	1					
ANR	2012593	Argument	ret		2012326	0					
ANR	2012594	Identifier	ret		2012326	0					
ANR	2012595	ReturnStatement	return 1 ;	653:2:19990:19998	2012326	1	True				
ANR	2012596	PrimaryExpression	1		2012326	0					
ANR	2012597	ExpressionStatement	usage -> block_read_bytes = read_bytes	656:1:20005:20041	2012326	10	True				
ANR	2012598	AssignmentExpression	usage -> block_read_bytes = read_bytes		2012326	0		=			
ANR	2012599	PtrMemberAccess	usage -> block_read_bytes		2012326	0					
ANR	2012600	Identifier	usage		2012326	0					
ANR	2012601	Identifier	block_read_bytes		2012326	1					
ANR	2012602	Identifier	read_bytes		2012326	1					
ANR	2012603	ExpressionStatement	usage -> block_write_bytes = write_bytes	657:1:20044:20082	2012326	11	True				
ANR	2012604	AssignmentExpression	usage -> block_write_bytes = write_bytes		2012326	0		=			
ANR	2012605	PtrMemberAccess	usage -> block_write_bytes		2012326	0					
ANR	2012606	Identifier	usage		2012326	0					
ANR	2012607	Identifier	block_write_bytes		2012326	1					
ANR	2012608	Identifier	write_bytes		2012326	1					
ANR	2012609	ReturnStatement	return 0 ;	659:1:20086:20094	2012326	12	True				
ANR	2012610	PrimaryExpression	0		2012326	0					
ANR	2012611	ReturnType	int		2012326	1					
ANR	2012612	Identifier	ProcFamily :: aggregate_usage_cgroup_blockio		2012326	2					
ANR	2012613	ParameterList	ProcFamilyUsage * usage		2012326	3					
ANR	2012614	Parameter	ProcFamilyUsage * usage	614:43:18787:18808	2012326	0	True				
ANR	2012615	ParameterType	ProcFamilyUsage *		2012326	0					
ANR	2012616	Identifier	usage		2012326	1					
ANR	2012617	CFGEntryNode	ENTRY		2012326		True				
ANR	2012618	CFGExitNode	EXIT		2012326		True				
ANR	2012619	Symbol	m_cgroup_block_mounted		2012326						
ANR	2012620	Symbol	usage -> block_read_bytes		2012326						
ANR	2012621	Symbol	usage		2012326						
ANR	2012622	Symbol	& tok_handle		2012326						
ANR	2012623	Symbol	BLOCK_STATS_LINE_MAX		2012326						
ANR	2012624	Symbol	cgroup_strerror		2012326						
ANR	2012625	Symbol	& handle		2012326						
ANR	2012626	Symbol	strtol		2012326						
ANR	2012627	Symbol	ECGEOF		2012326						
ANR	2012628	Symbol	sep		2012326						
ANR	2012629	Symbol	info		2012326						
ANR	2012630	Symbol	ret		2012326						
ANR	2012631	Symbol	ctr		2012326						
ANR	2012632	Symbol	strcmp		2012326						
ANR	2012633	Symbol	cgroup_read_value_begin		2012326						
ANR	2012634	Symbol	BLOCK_CONTROLLER		2012326						
ANR	2012635	Symbol	errno		2012326						
ANR	2012636	Symbol	NULL		2012326						
ANR	2012637	Symbol	write_bytes		2012326						
ANR	2012638	Symbol	ctrval		2012326						
ANR	2012639	Symbol	D_ALWAYS		2012326						
ANR	2012640	Symbol	handle		2012326						
ANR	2012641	Symbol	D_FULLDEBUG		2012326						
ANR	2012642	Symbol	strtok_r		2012326						
ANR	2012643	Symbol	* usage		2012326						
ANR	2012644	Symbol	blkio_stats_name		2012326						
ANR	2012645	Symbol	read_bytes		2012326						
ANR	2012646	Symbol	strerror		2012326						
ANR	2012647	Symbol	line_contents		2012326						
ANR	2012648	Symbol	usage -> block_write_bytes		2012326						
ANR	2012649	Symbol	tok_handle		2012326						
ANR	2012650	Symbol	* info		2012326						
ANR	2012651	Symbol	m_cgroup_string		2012326						
ANR	2012652	Symbol	word		2012326						
ANR	2012653	Symbol	cgroup_read_value_next		2012326						
ANR	2012654	Function	ProcFamily :: aggregate_usage_cgroup	662:0:20099:22413							
ANR	2012655	FunctionDef	ProcFamily :: aggregate_usage_cgroup (ProcFamilyUsage * usage)		2012654	0					
ANR	2012656	CompoundStatement		664:0:20162:22413	2012654	0					
ANR	2012657	IfStatement	if ( ! m_cgroup_memory_mounted || ! m_cgroup_cpuacct_mounted )		2012654	0					
ANR	2012658	Condition	! m_cgroup_memory_mounted || ! m_cgroup_cpuacct_mounted	665:5:20169:20221	2012654	0	True				
ANR	2012659	OrExpression	! m_cgroup_memory_mounted || ! m_cgroup_cpuacct_mounted		2012654	0		||			
ANR	2012660	UnaryOperationExpression	! m_cgroup_memory_mounted		2012654	0					
ANR	2012661	UnaryOperator	!		2012654	0					
ANR	2012662	Identifier	m_cgroup_memory_mounted		2012654	1					
ANR	2012663	UnaryOperationExpression	! m_cgroup_cpuacct_mounted		2012654	1					
ANR	2012664	UnaryOperator	!		2012654	0					
ANR	2012665	Identifier	m_cgroup_cpuacct_mounted		2012654	1					
ANR	2012666	CompoundStatement		2:60:61:61	2012654	1					
ANR	2012667	ReturnStatement	return - 1 ;	666:2:20228:20237	2012654	0	True				
ANR	2012668	UnaryOperationExpression	- 1		2012654	0					
ANR	2012669	UnaryOperator	-		2012654	0					
ANR	2012670	PrimaryExpression	1		2012654	1					
ANR	2012671	IdentifierDeclStatement	int err ;	669:1:20244:20251	2012654	1	True				
ANR	2012672	IdentifierDecl	err		2012654	0					
ANR	2012673	IdentifierDeclType	int		2012654	0					
ANR	2012674	Identifier	err		2012654	1					
ANR	2012675	IdentifierDeclStatement	struct cgroup_stat stats ;	670:1:20254:20278	2012654	2	True				
ANR	2012676	IdentifierDecl	stats		2012654	0					
ANR	2012677	IdentifierDeclType	struct cgroup_stat		2012654	0					
ANR	2012678	Identifier	stats		2012654	1					
ANR	2012679	IdentifierDeclStatement	void * * handle ;	671:1:20281:20294	2012654	3	True				
ANR	2012680	IdentifierDecl	* * handle		2012654	0					
ANR	2012681	IdentifierDeclType	void * *		2012654	0					
ANR	2012682	Identifier	handle		2012654	1					
ANR	2012683	IdentifierDeclStatement	"u_int64_t tmp = 0 , image = 0 ;"	672:1:20297:20325	2012654	4	True				
ANR	2012684	IdentifierDecl	tmp = 0		2012654	0					
ANR	2012685	IdentifierDeclType	u_int64_t		2012654	0					
ANR	2012686	Identifier	tmp		2012654	1					
ANR	2012687	AssignmentExpression	tmp = 0		2012654	2		=			
ANR	2012688	Identifier	tmp		2012654	0					
ANR	2012689	PrimaryExpression	0		2012654	1					
ANR	2012690	IdentifierDecl	image = 0		2012654	1					
ANR	2012691	IdentifierDeclType	u_int64_t		2012654	0					
ANR	2012692	Identifier	image		2012654	1					
ANR	2012693	AssignmentExpression	image = 0		2012654	2		=			
ANR	2012694	Identifier	image		2012654	0					
ANR	2012695	PrimaryExpression	0		2012654	1					
ANR	2012696	IdentifierDeclStatement	bool found_rss ;	673:1:20328:20342	2012654	5	True				
ANR	2012697	IdentifierDecl	found_rss		2012654	0					
ANR	2012698	IdentifierDeclType	bool		2012654	0					
ANR	2012699	Identifier	found_rss		2012654	1					
ANR	2012700	ExpressionStatement	handle = ( void * * ) malloc ( sizeof ( void * ) )	676:1:20364:20403	2012654	6	True				
ANR	2012701	AssignmentExpression	handle = ( void * * ) malloc ( sizeof ( void * ) )		2012654	0		=			
ANR	2012702	Identifier	handle		2012654	0					
ANR	2012703	CastExpression	( void * * ) malloc ( sizeof ( void * ) )		2012654	1					
ANR	2012704	CastTarget	void * *		2012654	0					
ANR	2012705	CallExpression	malloc ( sizeof ( void * ) )		2012654	1					
ANR	2012706	Callee	malloc		2012654	0					
ANR	2012707	Identifier	malloc		2012654	0					
ANR	2012708	ArgumentList	sizeof ( void * )		2012654	1					
ANR	2012709	Argument	sizeof ( void * )		2012654	0					
ANR	2012710	SizeofExpression	sizeof ( void * )		2012654	0					
ANR	2012711	Sizeof	sizeof		2012654	0					
ANR	2012712	SizeofOperand	void *		2012654	1					
ANR	2012713	ExpressionStatement	ASSERT ( handle != NULL )	677:1:20406:20429	2012654	7	True				
ANR	2012714	CallExpression	ASSERT ( handle != NULL )		2012654	0					
ANR	2012715	Callee	ASSERT		2012654	0					
ANR	2012716	Identifier	ASSERT		2012654	0					
ANR	2012717	ArgumentList	handle != NULL		2012654	1					
ANR	2012718	Argument	handle != NULL		2012654	0					
ANR	2012719	EqualityExpression	handle != NULL		2012654	0		!=			
ANR	2012720	Identifier	handle		2012654	0					
ANR	2012721	Identifier	NULL		2012654	1					
ANR	2012722	ExpressionStatement	* handle = NULL	678:1:20432:20446	2012654	8	True				
ANR	2012723	AssignmentExpression	* handle = NULL		2012654	0		=			
ANR	2012724	UnaryOperationExpression	* handle		2012654	0					
ANR	2012725	UnaryOperator	*		2012654	0					
ANR	2012726	Identifier	handle		2012654	1					
ANR	2012727	Identifier	NULL		2012654	1					
ANR	2012728	ExpressionStatement	"err = cgroup_read_stats_begin ( MEMORY_CONTROLLER , m_cgroup_string , handle , & stats )"	680:1:20450:20531	2012654	9	True				
ANR	2012729	AssignmentExpression	"err = cgroup_read_stats_begin ( MEMORY_CONTROLLER , m_cgroup_string , handle , & stats )"		2012654	0		=			
ANR	2012730	Identifier	err		2012654	0					
ANR	2012731	CallExpression	"cgroup_read_stats_begin ( MEMORY_CONTROLLER , m_cgroup_string , handle , & stats )"		2012654	1					
ANR	2012732	Callee	cgroup_read_stats_begin		2012654	0					
ANR	2012733	Identifier	cgroup_read_stats_begin		2012654	0					
ANR	2012734	ArgumentList	MEMORY_CONTROLLER		2012654	1					
ANR	2012735	Argument	MEMORY_CONTROLLER		2012654	0					
ANR	2012736	Identifier	MEMORY_CONTROLLER		2012654	0					
ANR	2012737	Argument	m_cgroup_string		2012654	1					
ANR	2012738	Identifier	m_cgroup_string		2012654	0					
ANR	2012739	Argument	handle		2012654	2					
ANR	2012740	Identifier	handle		2012654	0					
ANR	2012741	Argument	& stats		2012654	3					
ANR	2012742	UnaryOperationExpression	& stats		2012654	0					
ANR	2012743	UnaryOperator	&		2012654	0					
ANR	2012744	Identifier	stats		2012654	1					
ANR	2012745	WhileStatement	while ( err != ECGEOF )		2012654	10					
ANR	2012746	Condition	err != ECGEOF	681:8:20541:20553	2012654	0	True				
ANR	2012747	EqualityExpression	err != ECGEOF		2012654	0		!=			
ANR	2012748	Identifier	err		2012654	0					
ANR	2012749	Identifier	ECGEOF		2012654	1					
ANR	2012750	CompoundStatement		18:23:393:393	2012654	1					
ANR	2012751	IfStatement	if ( err > 0 )		2012654	0					
ANR	2012752	Condition	err > 0	682:6:20564:20570	2012654	0	True				
ANR	2012753	RelationalExpression	err > 0		2012654	0		>			
ANR	2012754	Identifier	err		2012654	0					
ANR	2012755	PrimaryExpression	0		2012654	1					
ANR	2012756	CompoundStatement		19:15:410:410	2012654	1					
ANR	2012757	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	683:3:20578:20730	2012654	0	True				
ANR	2012758	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		2012654	0					
ANR	2012759	Callee	dprintf		2012654	0					
ANR	2012760	Identifier	dprintf		2012654	0					
ANR	2012761	ArgumentList	D_PROCFAMILY		2012654	1					
ANR	2012762	Argument	D_PROCFAMILY		2012654	0					
ANR	2012763	Identifier	D_PROCFAMILY		2012654	0					
ANR	2012764	Argument	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		2012654	1					
ANR	2012765	PrimaryExpression	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		2012654	0					
ANR	2012766	Argument	m_cgroup_string		2012654	2					
ANR	2012767	Identifier	m_cgroup_string		2012654	0					
ANR	2012768	Argument	m_root_pid		2012654	3					
ANR	2012769	Identifier	m_root_pid		2012654	0					
ANR	2012770	Argument	err		2012654	4					
ANR	2012771	Identifier	err		2012654	0					
ANR	2012772	Argument	cgroup_strerror ( err )		2012654	5					
ANR	2012773	CallExpression	cgroup_strerror ( err )		2012654	0					
ANR	2012774	Callee	cgroup_strerror		2012654	0					
ANR	2012775	Identifier	cgroup_strerror		2012654	0					
ANR	2012776	ArgumentList	err		2012654	1					
ANR	2012777	Argument	err		2012654	0					
ANR	2012778	Identifier	err		2012654	0					
ANR	2012779	BreakStatement	break ;	686:3:20735:20740	2012654	1	True				
ANR	2012780	IfStatement	"if ( _check_stat_uint64 ( stats , ""total_rss"" , & tmp ) )"		2012654	1					
ANR	2012781	Condition	"_check_stat_uint64 ( stats , ""total_rss"" , & tmp )"	688:6:20752:20795	2012654	0	True				
ANR	2012782	CallExpression	"_check_stat_uint64 ( stats , ""total_rss"" , & tmp )"		2012654	0					
ANR	2012783	Callee	_check_stat_uint64		2012654	0					
ANR	2012784	Identifier	_check_stat_uint64		2012654	0					
ANR	2012785	ArgumentList	stats		2012654	1					
ANR	2012786	Argument	stats		2012654	0					
ANR	2012787	Identifier	stats		2012654	0					
ANR	2012788	Argument	"""total_rss"""		2012654	1					
ANR	2012789	PrimaryExpression	"""total_rss"""		2012654	0					
ANR	2012790	Argument	& tmp		2012654	2					
ANR	2012791	UnaryOperationExpression	& tmp		2012654	0					
ANR	2012792	UnaryOperator	&		2012654	0					
ANR	2012793	Identifier	tmp		2012654	1					
ANR	2012794	CompoundStatement		25:52:635:635	2012654	1					
ANR	2012795	ExpressionStatement	image += tmp	689:3:20803:20815	2012654	0	True				
ANR	2012796	AssignmentExpression	image += tmp		2012654	0		+=			
ANR	2012797	Identifier	image		2012654	0					
ANR	2012798	Identifier	tmp		2012654	1					
ANR	2012799	ExpressionStatement	usage -> total_resident_set_size = tmp / 1024	690:3:20820:20861	2012654	1	True				
ANR	2012800	AssignmentExpression	usage -> total_resident_set_size = tmp / 1024		2012654	0		=			
ANR	2012801	PtrMemberAccess	usage -> total_resident_set_size		2012654	0					
ANR	2012802	Identifier	usage		2012654	0					
ANR	2012803	Identifier	total_resident_set_size		2012654	1					
ANR	2012804	MultiplicativeExpression	tmp / 1024		2012654	1		/			
ANR	2012805	Identifier	tmp		2012654	0					
ANR	2012806	PrimaryExpression	1024		2012654	1					
ANR	2012807	ExpressionStatement	found_rss = true	691:3:20866:20882	2012654	2	True				
ANR	2012808	AssignmentExpression	found_rss = true		2012654	0		=			
ANR	2012809	Identifier	found_rss		2012654	0					
ANR	2012810	Identifier	true		2012654	1					
ANR	2012811	ElseStatement	else		2012654	0					
ANR	2012812	IfStatement	"if ( _check_stat_uint64 ( stats , ""total_mapped_file"" , & tmp ) )"		2012654	0					
ANR	2012813	Condition	"_check_stat_uint64 ( stats , ""total_mapped_file"" , & tmp )"	692:13:20897:20948	2012654	0	True				
ANR	2012814	CallExpression	"_check_stat_uint64 ( stats , ""total_mapped_file"" , & tmp )"		2012654	0					
ANR	2012815	Callee	_check_stat_uint64		2012654	0					
ANR	2012816	Identifier	_check_stat_uint64		2012654	0					
ANR	2012817	ArgumentList	stats		2012654	1					
ANR	2012818	Argument	stats		2012654	0					
ANR	2012819	Identifier	stats		2012654	0					
ANR	2012820	Argument	"""total_mapped_file"""		2012654	1					
ANR	2012821	PrimaryExpression	"""total_mapped_file"""		2012654	0					
ANR	2012822	Argument	& tmp		2012654	2					
ANR	2012823	UnaryOperationExpression	& tmp		2012654	0					
ANR	2012824	UnaryOperator	&		2012654	0					
ANR	2012825	Identifier	tmp		2012654	1					
ANR	2012826	CompoundStatement		29:67:788:788	2012654	1					
ANR	2012827	ExpressionStatement	image += tmp	693:3:20956:20968	2012654	0	True				
ANR	2012828	AssignmentExpression	image += tmp		2012654	0		+=			
ANR	2012829	Identifier	image		2012654	0					
ANR	2012830	Identifier	tmp		2012654	1					
ANR	2012831	ElseStatement	else		2012654	0					
ANR	2012832	IfStatement	"if ( _check_stat_uint64 ( stats , ""total_swap"" , & tmp ) )"		2012654	0					
ANR	2012833	Condition	"_check_stat_uint64 ( stats , ""total_swap"" , & tmp )"	694:13:20983:21027	2012654	0	True				
ANR	2012834	CallExpression	"_check_stat_uint64 ( stats , ""total_swap"" , & tmp )"		2012654	0					
ANR	2012835	Callee	_check_stat_uint64		2012654	0					
ANR	2012836	Identifier	_check_stat_uint64		2012654	0					
ANR	2012837	ArgumentList	stats		2012654	1					
ANR	2012838	Argument	stats		2012654	0					
ANR	2012839	Identifier	stats		2012654	0					
ANR	2012840	Argument	"""total_swap"""		2012654	1					
ANR	2012841	PrimaryExpression	"""total_swap"""		2012654	0					
ANR	2012842	Argument	& tmp		2012654	2					
ANR	2012843	UnaryOperationExpression	& tmp		2012654	0					
ANR	2012844	UnaryOperator	&		2012654	0					
ANR	2012845	Identifier	tmp		2012654	1					
ANR	2012846	CompoundStatement		31:60:867:867	2012654	1					
ANR	2012847	ExpressionStatement	image += tmp	695:3:21035:21047	2012654	0	True				
ANR	2012848	AssignmentExpression	image += tmp		2012654	0		+=			
ANR	2012849	Identifier	image		2012654	0					
ANR	2012850	Identifier	tmp		2012654	1					
ANR	2012851	ExpressionStatement	"err = cgroup_read_stats_next ( handle , & stats )"	697:2:21055:21099	2012654	2	True				
ANR	2012852	AssignmentExpression	"err = cgroup_read_stats_next ( handle , & stats )"		2012654	0		=			
ANR	2012853	Identifier	err		2012654	0					
ANR	2012854	CallExpression	"cgroup_read_stats_next ( handle , & stats )"		2012654	1					
ANR	2012855	Callee	cgroup_read_stats_next		2012654	0					
ANR	2012856	Identifier	cgroup_read_stats_next		2012654	0					
ANR	2012857	ArgumentList	handle		2012654	1					
ANR	2012858	Argument	handle		2012654	0					
ANR	2012859	Identifier	handle		2012654	0					
ANR	2012860	Argument	& stats		2012654	1					
ANR	2012861	UnaryOperationExpression	& stats		2012654	0					
ANR	2012862	UnaryOperator	&		2012654	0					
ANR	2012863	Identifier	stats		2012654	1					
ANR	2012864	IfStatement	if ( * handle != NULL )		2012654	11					
ANR	2012865	Condition	* handle != NULL	699:5:21109:21123	2012654	0	True				
ANR	2012866	EqualityExpression	* handle != NULL		2012654	0		!=			
ANR	2012867	UnaryOperationExpression	* handle		2012654	0					
ANR	2012868	UnaryOperator	*		2012654	0					
ANR	2012869	Identifier	handle		2012654	1					
ANR	2012870	Identifier	NULL		2012654	1					
ANR	2012871	CompoundStatement		36:22:963:963	2012654	1					
ANR	2012872	ExpressionStatement	cgroup_read_stats_end ( handle )	700:2:21130:21159	2012654	0	True				
ANR	2012873	CallExpression	cgroup_read_stats_end ( handle )		2012654	0					
ANR	2012874	Callee	cgroup_read_stats_end		2012654	0					
ANR	2012875	Identifier	cgroup_read_stats_end		2012654	0					
ANR	2012876	ArgumentList	handle		2012654	1					
ANR	2012877	Argument	handle		2012654	0					
ANR	2012878	Identifier	handle		2012654	0					
ANR	2012879	IfStatement	if ( found_rss )		2012654	12					
ANR	2012880	Condition	found_rss	702:5:21169:21177	2012654	0	True				
ANR	2012881	Identifier	found_rss		2012654	0					
ANR	2012882	CompoundStatement		39:16:1017:1017	2012654	1					
ANR	2012883	ExpressionStatement	usage -> total_image_size = image / 1024	703:2:21184:21220	2012654	0	True				
ANR	2012884	AssignmentExpression	usage -> total_image_size = image / 1024		2012654	0		=			
ANR	2012885	PtrMemberAccess	usage -> total_image_size		2012654	0					
ANR	2012886	Identifier	usage		2012654	0					
ANR	2012887	Identifier	total_image_size		2012654	1					
ANR	2012888	MultiplicativeExpression	image / 1024		2012654	1		/			
ANR	2012889	Identifier	image		2012654	0					
ANR	2012890	PrimaryExpression	1024		2012654	1					
ANR	2012891	ElseStatement	else		2012654	0					
ANR	2012892	CompoundStatement		41:8:1067:1067	2012654	0					
ANR	2012893	Statement	dprintf	705:2:21234:21240	2012654	0	True				
ANR	2012894	Statement	(	705:9:21241:21241	2012654	1	True				
ANR	2012895	Statement	D_PROCFAMILY	705:10:21242:21253	2012654	2	True				
ANR	2012896	Statement	","	705:22:21254:21254	2012654	3	True				
ANR	2012897	Statement	"""Unable to find all necesary memory structures for cgroup %s"""	706:3:21259:21319	2012654	4	True				
ANR	2012898	Statement	""" (ProcFamily %u)\\n"""	707:3:21324:21343	2012654	5	True				
ANR	2012899	Statement	","	707:23:21344:21344	2012654	6	True				
ANR	2012900	Statement	m_cgroup_string	708:3:21349:21363	2012654	7	True				
ANR	2012901	Statement	","	708:18:21364:21364	2012654	8	True				
ANR	2012902	Statement	m_root_pid	708:20:21366:21375	2012654	9	True				
ANR	2012903	Statement	)	708:30:21376:21376	2012654	10	True				
ANR	2012904	ExpressionStatement		708:31:21377:21377	2012654	11	True				
ANR	2012905	IfStatement	if ( image > m_max_image_size )		2012654	13					
ANR	2012906	Condition	image > m_max_image_size	711:5:21442:21465	2012654	0	True				
ANR	2012907	RelationalExpression	image > m_max_image_size		2012654	0		>			
ANR	2012908	Identifier	image		2012654	0					
ANR	2012909	Identifier	m_max_image_size		2012654	1					
ANR	2012910	CompoundStatement		48:31:1305:1305	2012654	1					
ANR	2012911	ExpressionStatement	m_max_image_size = image / 1024	712:2:21472:21501	2012654	0	True				
ANR	2012912	AssignmentExpression	m_max_image_size = image / 1024		2012654	0		=			
ANR	2012913	Identifier	m_max_image_size		2012654	0					
ANR	2012914	MultiplicativeExpression	image / 1024		2012654	1		/			
ANR	2012915	Identifier	image		2012654	0					
ANR	2012916	PrimaryExpression	1024		2012654	1					
ANR	2012917	ExpressionStatement	update_max_image_size_cgroup ( )	715:1:21551:21581	2012654	14	True				
ANR	2012918	CallExpression	update_max_image_size_cgroup ( )		2012654	0					
ANR	2012919	Callee	update_max_image_size_cgroup		2012654	0					
ANR	2012920	Identifier	update_max_image_size_cgroup		2012654	0					
ANR	2012921	ArgumentList			2012654	1					
ANR	2012922	ExpressionStatement	* handle = NULL	718:1:21600:21614	2012654	15	True				
ANR	2012923	AssignmentExpression	* handle = NULL		2012654	0		=			
ANR	2012924	UnaryOperationExpression	* handle		2012654	0					
ANR	2012925	UnaryOperator	*		2012654	0					
ANR	2012926	Identifier	handle		2012654	1					
ANR	2012927	Identifier	NULL		2012654	1					
ANR	2012928	ExpressionStatement	"err = cgroup_read_stats_begin ( CPUACCT_CONTROLLER , m_cgroup_string , handle , & stats )"	719:1:21617:21699	2012654	16	True				
ANR	2012929	AssignmentExpression	"err = cgroup_read_stats_begin ( CPUACCT_CONTROLLER , m_cgroup_string , handle , & stats )"		2012654	0		=			
ANR	2012930	Identifier	err		2012654	0					
ANR	2012931	CallExpression	"cgroup_read_stats_begin ( CPUACCT_CONTROLLER , m_cgroup_string , handle , & stats )"		2012654	1					
ANR	2012932	Callee	cgroup_read_stats_begin		2012654	0					
ANR	2012933	Identifier	cgroup_read_stats_begin		2012654	0					
ANR	2012934	ArgumentList	CPUACCT_CONTROLLER		2012654	1					
ANR	2012935	Argument	CPUACCT_CONTROLLER		2012654	0					
ANR	2012936	Identifier	CPUACCT_CONTROLLER		2012654	0					
ANR	2012937	Argument	m_cgroup_string		2012654	1					
ANR	2012938	Identifier	m_cgroup_string		2012654	0					
ANR	2012939	Argument	handle		2012654	2					
ANR	2012940	Identifier	handle		2012654	0					
ANR	2012941	Argument	& stats		2012654	3					
ANR	2012942	UnaryOperationExpression	& stats		2012654	0					
ANR	2012943	UnaryOperator	&		2012654	0					
ANR	2012944	Identifier	stats		2012654	1					
ANR	2012945	WhileStatement	while ( err != ECGEOF )		2012654	17					
ANR	2012946	Condition	err != ECGEOF	720:8:21709:21721	2012654	0	True				
ANR	2012947	EqualityExpression	err != ECGEOF		2012654	0		!=			
ANR	2012948	Identifier	err		2012654	0					
ANR	2012949	Identifier	ECGEOF		2012654	1					
ANR	2012950	CompoundStatement		57:23:1561:1561	2012654	1					
ANR	2012951	IfStatement	if ( err > 0 )		2012654	0					
ANR	2012952	Condition	err > 0	721:6:21732:21738	2012654	0	True				
ANR	2012953	RelationalExpression	err > 0		2012654	0		>			
ANR	2012954	Identifier	err		2012654	0					
ANR	2012955	PrimaryExpression	0		2012654	1					
ANR	2012956	CompoundStatement		58:15:1578:1578	2012654	1					
ANR	2012957	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"" , m_cgroup_string , m_root_pid , cgroup_strerror ( err ) )"	722:3:21746:21891	2012654	0	True				
ANR	2012958	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"" , m_cgroup_string , m_root_pid , cgroup_strerror ( err ) )"		2012654	0					
ANR	2012959	Callee	dprintf		2012654	0					
ANR	2012960	Identifier	dprintf		2012654	0					
ANR	2012961	ArgumentList	D_PROCFAMILY		2012654	1					
ANR	2012962	Argument	D_PROCFAMILY		2012654	0					
ANR	2012963	Identifier	D_PROCFAMILY		2012654	0					
ANR	2012964	Argument	"""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"""		2012654	1					
ANR	2012965	PrimaryExpression	"""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"""		2012654	0					
ANR	2012966	Argument	m_cgroup_string		2012654	2					
ANR	2012967	Identifier	m_cgroup_string		2012654	0					
ANR	2012968	Argument	m_root_pid		2012654	3					
ANR	2012969	Identifier	m_root_pid		2012654	0					
ANR	2012970	Argument	cgroup_strerror ( err )		2012654	4					
ANR	2012971	CallExpression	cgroup_strerror ( err )		2012654	0					
ANR	2012972	Callee	cgroup_strerror		2012654	0					
ANR	2012973	Identifier	cgroup_strerror		2012654	0					
ANR	2012974	ArgumentList	err		2012654	1					
ANR	2012975	Argument	err		2012654	0					
ANR	2012976	Identifier	err		2012654	0					
ANR	2012977	BreakStatement	break ;	725:3:21896:21901	2012654	1	True				
ANR	2012978	IfStatement	"if ( _check_stat_uint64 ( stats , ""user"" , & tmp ) )"		2012654	1					
ANR	2012979	Condition	"_check_stat_uint64 ( stats , ""user"" , & tmp )"	727:6:21913:21951	2012654	0	True				
ANR	2012980	CallExpression	"_check_stat_uint64 ( stats , ""user"" , & tmp )"		2012654	0					
ANR	2012981	Callee	_check_stat_uint64		2012654	0					
ANR	2012982	Identifier	_check_stat_uint64		2012654	0					
ANR	2012983	ArgumentList	stats		2012654	1					
ANR	2012984	Argument	stats		2012654	0					
ANR	2012985	Identifier	stats		2012654	0					
ANR	2012986	Argument	"""user"""		2012654	1					
ANR	2012987	PrimaryExpression	"""user"""		2012654	0					
ANR	2012988	Argument	& tmp		2012654	2					
ANR	2012989	UnaryOperationExpression	& tmp		2012654	0					
ANR	2012990	UnaryOperator	&		2012654	0					
ANR	2012991	Identifier	tmp		2012654	1					
ANR	2012992	CompoundStatement		64:47:1791:1791	2012654	1					
ANR	2012993	ExpressionStatement	usage -> user_cpu_time = tmp / clock_tick	728:3:21959:21996	2012654	0	True				
ANR	2012994	AssignmentExpression	usage -> user_cpu_time = tmp / clock_tick		2012654	0		=			
ANR	2012995	PtrMemberAccess	usage -> user_cpu_time		2012654	0					
ANR	2012996	Identifier	usage		2012654	0					
ANR	2012997	Identifier	user_cpu_time		2012654	1					
ANR	2012998	MultiplicativeExpression	tmp / clock_tick		2012654	1		/			
ANR	2012999	Identifier	tmp		2012654	0					
ANR	2013000	Identifier	clock_tick		2012654	1					
ANR	2013001	ElseStatement	else		2012654	0					
ANR	2013002	IfStatement	"if ( _check_stat_uint64 ( stats , ""system"" , & tmp ) )"		2012654	0					
ANR	2013003	Condition	"_check_stat_uint64 ( stats , ""system"" , & tmp )"	729:13:22011:22051	2012654	0	True				
ANR	2013004	CallExpression	"_check_stat_uint64 ( stats , ""system"" , & tmp )"		2012654	0					
ANR	2013005	Callee	_check_stat_uint64		2012654	0					
ANR	2013006	Identifier	_check_stat_uint64		2012654	0					
ANR	2013007	ArgumentList	stats		2012654	1					
ANR	2013008	Argument	stats		2012654	0					
ANR	2013009	Identifier	stats		2012654	0					
ANR	2013010	Argument	"""system"""		2012654	1					
ANR	2013011	PrimaryExpression	"""system"""		2012654	0					
ANR	2013012	Argument	& tmp		2012654	2					
ANR	2013013	UnaryOperationExpression	& tmp		2012654	0					
ANR	2013014	UnaryOperator	&		2012654	0					
ANR	2013015	Identifier	tmp		2012654	1					
ANR	2013016	CompoundStatement		66:56:1891:1891	2012654	1					
ANR	2013017	ExpressionStatement	usage -> sys_cpu_time = tmp / clock_tick	730:3:22059:22095	2012654	0	True				
ANR	2013018	AssignmentExpression	usage -> sys_cpu_time = tmp / clock_tick		2012654	0		=			
ANR	2013019	PtrMemberAccess	usage -> sys_cpu_time		2012654	0					
ANR	2013020	Identifier	usage		2012654	0					
ANR	2013021	Identifier	sys_cpu_time		2012654	1					
ANR	2013022	MultiplicativeExpression	tmp / clock_tick		2012654	1		/			
ANR	2013023	Identifier	tmp		2012654	0					
ANR	2013024	Identifier	clock_tick		2012654	1					
ANR	2013025	ExpressionStatement	"err = cgroup_read_stats_next ( handle , & stats )"	732:2:22103:22147	2012654	2	True				
ANR	2013026	AssignmentExpression	"err = cgroup_read_stats_next ( handle , & stats )"		2012654	0		=			
ANR	2013027	Identifier	err		2012654	0					
ANR	2013028	CallExpression	"cgroup_read_stats_next ( handle , & stats )"		2012654	1					
ANR	2013029	Callee	cgroup_read_stats_next		2012654	0					
ANR	2013030	Identifier	cgroup_read_stats_next		2012654	0					
ANR	2013031	ArgumentList	handle		2012654	1					
ANR	2013032	Argument	handle		2012654	0					
ANR	2013033	Identifier	handle		2012654	0					
ANR	2013034	Argument	& stats		2012654	1					
ANR	2013035	UnaryOperationExpression	& stats		2012654	0					
ANR	2013036	UnaryOperator	&		2012654	0					
ANR	2013037	Identifier	stats		2012654	1					
ANR	2013038	IfStatement	if ( * handle != NULL )		2012654	18					
ANR	2013039	Condition	* handle != NULL	734:5:22157:22171	2012654	0	True				
ANR	2013040	EqualityExpression	* handle != NULL		2012654	0		!=			
ANR	2013041	UnaryOperationExpression	* handle		2012654	0					
ANR	2013042	UnaryOperator	*		2012654	0					
ANR	2013043	Identifier	handle		2012654	1					
ANR	2013044	Identifier	NULL		2012654	1					
ANR	2013045	CompoundStatement		71:22:2011:2011	2012654	1					
ANR	2013046	ExpressionStatement	cgroup_read_stats_end ( handle )	735:2:22178:22207	2012654	0	True				
ANR	2013047	CallExpression	cgroup_read_stats_end ( handle )		2012654	0					
ANR	2013048	Callee	cgroup_read_stats_end		2012654	0					
ANR	2013049	Identifier	cgroup_read_stats_end		2012654	0					
ANR	2013050	ArgumentList	handle		2012654	1					
ANR	2013051	Argument	handle		2012654	0					
ANR	2013052	Identifier	handle		2012654	0					
ANR	2013053	ExpressionStatement	free ( handle )	737:1:22213:22225	2012654	19	True				
ANR	2013054	CallExpression	free ( handle )		2012654	0					
ANR	2013055	Callee	free		2012654	0					
ANR	2013056	Identifier	free		2012654	0					
ANR	2013057	ArgumentList	handle		2012654	1					
ANR	2013058	Argument	handle		2012654	0					
ANR	2013059	Identifier	handle		2012654	0					
ANR	2013060	ExpressionStatement	aggregate_usage_cgroup_blockio ( usage )	739:1:22229:22266	2012654	20	True				
ANR	2013061	CallExpression	aggregate_usage_cgroup_blockio ( usage )		2012654	0					
ANR	2013062	Callee	aggregate_usage_cgroup_blockio		2012654	0					
ANR	2013063	Identifier	aggregate_usage_cgroup_blockio		2012654	0					
ANR	2013064	ArgumentList	usage		2012654	1					
ANR	2013065	Argument	usage		2012654	0					
ANR	2013066	Identifier	usage		2012654	0					
ANR	2013067	IfStatement	if ( ( err = count_tasks_cgroup ( ) ) < 0 )		2012654	21					
ANR	2013068	Condition	( err = count_tasks_cgroup ( ) ) < 0	742:5:22312:22343	2012654	0	True				
ANR	2013069	RelationalExpression	( err = count_tasks_cgroup ( ) ) < 0		2012654	0		<			
ANR	2013070	AssignmentExpression	err = count_tasks_cgroup ( )		2012654	0		=			
ANR	2013071	Identifier	err		2012654	0					
ANR	2013072	CallExpression	count_tasks_cgroup ( )		2012654	1					
ANR	2013073	Callee	count_tasks_cgroup		2012654	0					
ANR	2013074	Identifier	count_tasks_cgroup		2012654	0					
ANR	2013075	ArgumentList			2012654	1					
ANR	2013076	PrimaryExpression	0		2012654	1					
ANR	2013077	CompoundStatement		79:39:2183:2183	2012654	1					
ANR	2013078	ReturnStatement	return - err ;	743:2:22350:22361	2012654	0	True				
ANR	2013079	UnaryOperationExpression	- err		2012654	0					
ANR	2013080	UnaryOperator	-		2012654	0					
ANR	2013081	Identifier	err		2012654	1					
ANR	2013082	ElseStatement	else		2012654	0					
ANR	2013083	CompoundStatement		81:8:2208:2208	2012654	0					
ANR	2013084	ExpressionStatement	usage -> num_procs = err	745:2:22375:22397	2012654	0	True				
ANR	2013085	AssignmentExpression	usage -> num_procs = err		2012654	0		=			
ANR	2013086	PtrMemberAccess	usage -> num_procs		2012654	0					
ANR	2013087	Identifier	usage		2012654	0					
ANR	2013088	Identifier	num_procs		2012654	1					
ANR	2013089	Identifier	err		2012654	1					
ANR	2013090	ReturnStatement	return 0 ;	747:1:22403:22411	2012654	22	True				
ANR	2013091	PrimaryExpression	0		2012654	0					
ANR	2013092	ReturnType	int		2012654	1					
ANR	2013093	Identifier	ProcFamily :: aggregate_usage_cgroup		2012654	2					
ANR	2013094	ParameterList	ProcFamilyUsage * usage		2012654	3					
ANR	2013095	Parameter	ProcFamilyUsage * usage	663:35:20138:20159	2012654	0	True				
ANR	2013096	ParameterType	ProcFamilyUsage *		2012654	0					
ANR	2013097	Identifier	usage		2012654	1					
ANR	2013098	CFGEntryNode	ENTRY		2012654		True				
ANR	2013099	CFGExitNode	EXIT		2012654		True				
ANR	2013100	Symbol	usage -> user_cpu_time		2012654						
ANR	2013101	Symbol	cgroup_read_stats_begin		2012654						
ANR	2013102	Symbol	MEMORY_CONTROLLER		2012654						
ANR	2013103	Symbol	D_PROCFAMILY		2012654						
ANR	2013104	Symbol	_check_stat_uint64		2012654						
ANR	2013105	Symbol	usage		2012654						
ANR	2013106	Symbol	usage -> total_resident_set_size		2012654						
ANR	2013107	Symbol	CPUACCT_CONTROLLER		2012654						
ANR	2013108	Symbol	cgroup_strerror		2012654						
ANR	2013109	Symbol	stats		2012654						
ANR	2013110	Symbol	tmp		2012654						
ANR	2013111	Symbol	clock_tick		2012654						
ANR	2013112	Symbol	found_rss		2012654						
ANR	2013113	Symbol	cgroup_read_stats_next		2012654						
ANR	2013114	Symbol	ECGEOF		2012654						
ANR	2013115	Symbol	usage -> num_procs		2012654						
ANR	2013116	Symbol	image		2012654						
ANR	2013117	Symbol	malloc		2012654						
ANR	2013118	Symbol	NULL		2012654						
ANR	2013119	Symbol	err		2012654						
ANR	2013120	Symbol	* handle		2012654						
ANR	2013121	Symbol	m_cgroup_memory_mounted		2012654						
ANR	2013122	Symbol	handle		2012654						
ANR	2013123	Symbol	* usage		2012654						
ANR	2013124	Symbol	m_max_image_size		2012654						
ANR	2013125	Symbol	usage -> sys_cpu_time		2012654						
ANR	2013126	Symbol	m_cgroup_cpuacct_mounted		2012654						
ANR	2013127	Symbol	count_tasks_cgroup		2012654						
ANR	2013128	Symbol	& stats		2012654						
ANR	2013129	Symbol	usage -> total_image_size		2012654						
ANR	2013130	Symbol	true		2012654						
ANR	2013131	Symbol	& tmp		2012654						
ANR	2013132	Symbol	m_cgroup_string		2012654						
ANR	2013133	Symbol	m_root_pid		2012654						
ANR	2013134	Function	ProcFamily :: update_max_image_size	751:0:22423:23491							
ANR	2013135	FunctionDef	ProcFamily :: update_max_image_size (unsigned long children_imgsize)		2013134	0					
ANR	2013136	CompoundStatement		753:0:22503:23491	2013134	0					
ANR	2013137	IdentifierDeclStatement	unsigned long imgsize = children_imgsize ;	757:1:22601:22641	2013134	0	True				
ANR	2013138	IdentifierDecl	imgsize = children_imgsize		2013134	0					
ANR	2013139	IdentifierDeclType	unsigned long		2013134	0					
ANR	2013140	Identifier	imgsize		2013134	1					
ANR	2013141	AssignmentExpression	imgsize = children_imgsize		2013134	2		=			
ANR	2013142	Identifier	children_imgsize		2013134	0					
ANR	2013143	Identifier	children_imgsize		2013134	1					
ANR	2013144	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	758:1:22644:22684	2013134	1	True				
ANR	2013145	IdentifierDecl	* member = m_member_list		2013134	0					
ANR	2013146	IdentifierDeclType	ProcFamilyMember *		2013134	0					
ANR	2013147	Identifier	member		2013134	1					
ANR	2013148	AssignmentExpression	* member = m_member_list		2013134	2		=			
ANR	2013149	Identifier	m_member_list		2013134	0					
ANR	2013150	Identifier	m_member_list		2013134	1					
ANR	2013151	WhileStatement	while ( member != NULL )		2013134	2					
ANR	2013152	Condition	member != NULL	759:8:22694:22707	2013134	0	True				
ANR	2013153	EqualityExpression	member != NULL		2013134	0		!=			
ANR	2013154	Identifier	member		2013134	0					
ANR	2013155	Identifier	NULL		2013134	1					
ANR	2013156	CompoundStatement		7:24:206:206	2013134	1					
ANR	2013157	ExpressionStatement	imgsize += member -> m_proc_info -> rssize	769:2:23170:23208	2013134	0	True				
ANR	2013158	AssignmentExpression	imgsize += member -> m_proc_info -> rssize		2013134	0		+=			
ANR	2013159	Identifier	imgsize		2013134	0					
ANR	2013160	PtrMemberAccess	member -> m_proc_info -> rssize		2013134	1					
ANR	2013161	PtrMemberAccess	member -> m_proc_info		2013134	0					
ANR	2013162	Identifier	member		2013134	0					
ANR	2013163	Identifier	m_proc_info		2013134	1					
ANR	2013164	Identifier	rssize		2013134	1					
ANR	2013165	ExpressionStatement	member = member -> m_next	773:2:23268:23291	2013134	1	True				
ANR	2013166	AssignmentExpression	member = member -> m_next		2013134	0		=			
ANR	2013167	Identifier	member		2013134	0					
ANR	2013168	PtrMemberAccess	member -> m_next		2013134	1					
ANR	2013169	Identifier	member		2013134	0					
ANR	2013170	Identifier	m_next		2013134	1					
ANR	2013171	IfStatement	if ( imgsize > m_max_image_size )		2013134	3					
ANR	2013172	Condition	imgsize > m_max_image_size	778:5:23355:23380	2013134	0	True				
ANR	2013173	RelationalExpression	imgsize > m_max_image_size		2013134	0		>			
ANR	2013174	Identifier	imgsize		2013134	0					
ANR	2013175	Identifier	m_max_image_size		2013134	1					
ANR	2013176	CompoundStatement		26:33:879:879	2013134	1					
ANR	2013177	ExpressionStatement	m_max_image_size = imgsize	779:2:23387:23413	2013134	0	True				
ANR	2013178	AssignmentExpression	m_max_image_size = imgsize		2013134	0		=			
ANR	2013179	Identifier	m_max_image_size		2013134	0					
ANR	2013180	Identifier	imgsize		2013134	1					
ANR	2013181	ReturnStatement	return imgsize ;	784:1:23475:23489	2013134	4	True				
ANR	2013182	Identifier	imgsize		2013134	0					
ANR	2013183	ReturnType	unsigned long		2013134	1					
ANR	2013184	Identifier	ProcFamily :: update_max_image_size		2013134	2					
ANR	2013185	ParameterList	unsigned long children_imgsize		2013134	3					
ANR	2013186	Parameter	unsigned long children_imgsize	752:34:22471:22500	2013134	0	True				
ANR	2013187	ParameterType	unsigned long		2013134	0					
ANR	2013188	Identifier	children_imgsize		2013134	1					
ANR	2013189	CFGEntryNode	ENTRY		2013134		True				
ANR	2013190	CFGExitNode	EXIT		2013134		True				
ANR	2013191	Symbol	m_member_list		2013134						
ANR	2013192	Symbol	m_max_image_size		2013134						
ANR	2013193	Symbol	children_imgsize		2013134						
ANR	2013194	Symbol	NULL		2013134						
ANR	2013195	Symbol	member -> m_proc_info -> rssize		2013134						
ANR	2013196	Symbol	* * member		2013134						
ANR	2013197	Symbol	member -> m_proc_info		2013134						
ANR	2013198	Symbol	* member -> m_proc_info		2013134						
ANR	2013199	Symbol	member		2013134						
ANR	2013200	Symbol	imgsize		2013134						
ANR	2013201	Symbol	* member		2013134						
ANR	2013202	Symbol	member -> m_next		2013134						
ANR	2013203	Function	ProcFamily :: aggregate_usage	787:0:23494:24605							
ANR	2013204	FunctionDef	ProcFamily :: aggregate_usage (ProcFamilyUsage * usage)		2013203	0					
ANR	2013205	CompoundStatement		789:0:23551:24605	2013203	0					
ANR	2013206	ExpressionStatement	ASSERT ( usage != NULL )	790:1:23554:23575	2013203	0	True				
ANR	2013207	CallExpression	ASSERT ( usage != NULL )		2013203	0					
ANR	2013208	Callee	ASSERT		2013203	0					
ANR	2013209	Identifier	ASSERT		2013203	0					
ANR	2013210	ArgumentList	usage != NULL		2013203	1					
ANR	2013211	Argument	usage != NULL		2013203	0					
ANR	2013212	EqualityExpression	usage != NULL		2013203	0		!=			
ANR	2013213	Identifier	usage		2013203	0					
ANR	2013214	Identifier	NULL		2013203	1					
ANR	2013215	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	794:1:23639:23679	2013203	1	True				
ANR	2013216	IdentifierDecl	* member = m_member_list		2013203	0					
ANR	2013217	IdentifierDeclType	ProcFamilyMember *		2013203	0					
ANR	2013218	Identifier	member		2013203	1					
ANR	2013219	AssignmentExpression	* member = m_member_list		2013203	2		=			
ANR	2013220	Identifier	m_member_list		2013203	0					
ANR	2013221	Identifier	m_member_list		2013203	1					
ANR	2013222	WhileStatement	while ( member != NULL )		2013203	2					
ANR	2013223	Condition	member != NULL	795:8:23689:23702	2013203	0	True				
ANR	2013224	EqualityExpression	member != NULL		2013203	0		!=			
ANR	2013225	Identifier	member		2013203	0					
ANR	2013226	Identifier	NULL		2013203	1					
ANR	2013227	CompoundStatement		7:24:153:153	2013203	1					
ANR	2013228	ExpressionStatement	usage -> user_cpu_time += member -> m_proc_info -> user_time	799:2:23724:23778	2013203	0	True				
ANR	2013229	AssignmentExpression	usage -> user_cpu_time += member -> m_proc_info -> user_time		2013203	0		+=			
ANR	2013230	PtrMemberAccess	usage -> user_cpu_time		2013203	0					
ANR	2013231	Identifier	usage		2013203	0					
ANR	2013232	Identifier	user_cpu_time		2013203	1					
ANR	2013233	PtrMemberAccess	member -> m_proc_info -> user_time		2013203	1					
ANR	2013234	PtrMemberAccess	member -> m_proc_info		2013203	0					
ANR	2013235	Identifier	member		2013203	0					
ANR	2013236	Identifier	m_proc_info		2013203	1					
ANR	2013237	Identifier	user_time		2013203	1					
ANR	2013238	ExpressionStatement	usage -> sys_cpu_time += member -> m_proc_info -> sys_time	800:2:23782:23834	2013203	1	True				
ANR	2013239	AssignmentExpression	usage -> sys_cpu_time += member -> m_proc_info -> sys_time		2013203	0		+=			
ANR	2013240	PtrMemberAccess	usage -> sys_cpu_time		2013203	0					
ANR	2013241	Identifier	usage		2013203	0					
ANR	2013242	Identifier	sys_cpu_time		2013203	1					
ANR	2013243	PtrMemberAccess	member -> m_proc_info -> sys_time		2013203	1					
ANR	2013244	PtrMemberAccess	member -> m_proc_info		2013203	0					
ANR	2013245	Identifier	member		2013203	0					
ANR	2013246	Identifier	m_proc_info		2013203	1					
ANR	2013247	Identifier	sys_time		2013203	1					
ANR	2013248	ExpressionStatement	usage -> percent_cpu += member -> m_proc_info -> cpuusage	801:2:23838:23889	2013203	2	True				
ANR	2013249	AssignmentExpression	usage -> percent_cpu += member -> m_proc_info -> cpuusage		2013203	0		+=			
ANR	2013250	PtrMemberAccess	usage -> percent_cpu		2013203	0					
ANR	2013251	Identifier	usage		2013203	0					
ANR	2013252	Identifier	percent_cpu		2013203	1					
ANR	2013253	PtrMemberAccess	member -> m_proc_info -> cpuusage		2013203	1					
ANR	2013254	PtrMemberAccess	member -> m_proc_info		2013203	0					
ANR	2013255	Identifier	member		2013203	0					
ANR	2013256	Identifier	m_proc_info		2013203	1					
ANR	2013257	Identifier	cpuusage		2013203	1					
ANR	2013258	ExpressionStatement	usage -> total_image_size += member -> m_proc_info -> imgsize	805:2:23929:23984	2013203	3	True				
ANR	2013259	AssignmentExpression	usage -> total_image_size += member -> m_proc_info -> imgsize		2013203	0		+=			
ANR	2013260	PtrMemberAccess	usage -> total_image_size		2013203	0					
ANR	2013261	Identifier	usage		2013203	0					
ANR	2013262	Identifier	total_image_size		2013203	1					
ANR	2013263	PtrMemberAccess	member -> m_proc_info -> imgsize		2013203	1					
ANR	2013264	PtrMemberAccess	member -> m_proc_info		2013203	0					
ANR	2013265	Identifier	member		2013203	0					
ANR	2013266	Identifier	m_proc_info		2013203	1					
ANR	2013267	Identifier	imgsize		2013203	1					
ANR	2013268	ExpressionStatement	usage -> total_resident_set_size += member -> m_proc_info -> rssize	806:2:23988:24049	2013203	4	True				
ANR	2013269	AssignmentExpression	usage -> total_resident_set_size += member -> m_proc_info -> rssize		2013203	0		+=			
ANR	2013270	PtrMemberAccess	usage -> total_resident_set_size		2013203	0					
ANR	2013271	Identifier	usage		2013203	0					
ANR	2013272	Identifier	total_resident_set_size		2013203	1					
ANR	2013273	PtrMemberAccess	member -> m_proc_info -> rssize		2013203	1					
ANR	2013274	PtrMemberAccess	member -> m_proc_info		2013203	0					
ANR	2013275	Identifier	member		2013203	0					
ANR	2013276	Identifier	m_proc_info		2013203	1					
ANR	2013277	Identifier	rssize		2013203	1					
ANR	2013278	IfStatement	if ( member -> m_proc_info -> pssize_available )		2013203	5					
ANR	2013279	Condition	member -> m_proc_info -> pssize_available	808:6:24070:24106	2013203	0	True				
ANR	2013280	PtrMemberAccess	member -> m_proc_info -> pssize_available		2013203	0					
ANR	2013281	PtrMemberAccess	member -> m_proc_info		2013203	0					
ANR	2013282	Identifier	member		2013203	0					
ANR	2013283	Identifier	m_proc_info		2013203	1					
ANR	2013284	Identifier	pssize_available		2013203	1					
ANR	2013285	CompoundStatement		20:46:558:558	2013203	1					
ANR	2013286	ExpressionStatement	usage -> total_proportional_set_size_available = true	809:3:24115:24166	2013203	0	True				
ANR	2013287	AssignmentExpression	usage -> total_proportional_set_size_available = true		2013203	0		=			
ANR	2013288	PtrMemberAccess	usage -> total_proportional_set_size_available		2013203	0					
ANR	2013289	Identifier	usage		2013203	0					
ANR	2013290	Identifier	total_proportional_set_size_available		2013203	1					
ANR	2013291	Identifier	true		2013203	1					
ANR	2013292	ExpressionStatement	usage -> total_proportional_set_size += member -> m_proc_info -> pssize	810:3:24171:24236	2013203	1	True				
ANR	2013293	AssignmentExpression	usage -> total_proportional_set_size += member -> m_proc_info -> pssize		2013203	0		+=			
ANR	2013294	PtrMemberAccess	usage -> total_proportional_set_size		2013203	0					
ANR	2013295	Identifier	usage		2013203	0					
ANR	2013296	Identifier	total_proportional_set_size		2013203	1					
ANR	2013297	PtrMemberAccess	member -> m_proc_info -> pssize		2013203	1					
ANR	2013298	PtrMemberAccess	member -> m_proc_info		2013203	0					
ANR	2013299	Identifier	member		2013203	0					
ANR	2013300	Identifier	m_proc_info		2013203	1					
ANR	2013301	Identifier	pssize		2013203	1					
ANR	2013302	ExpressionStatement	usage -> num_procs ++	816:2:24288:24306	2013203	6	True				
ANR	2013303	PostIncDecOperationExpression	usage -> num_procs ++		2013203	0					
ANR	2013304	PtrMemberAccess	usage -> num_procs		2013203	0					
ANR	2013305	Identifier	usage		2013203	0					
ANR	2013306	Identifier	num_procs		2013203	1					
ANR	2013307	IncDec	++		2013203	1					
ANR	2013308	ExpressionStatement	member = member -> m_next	818:2:24311:24334	2013203	7	True				
ANR	2013309	AssignmentExpression	member = member -> m_next		2013203	0		=			
ANR	2013310	Identifier	member		2013203	0					
ANR	2013311	PtrMemberAccess	member -> m_next		2013203	1					
ANR	2013312	Identifier	member		2013203	0					
ANR	2013313	Identifier	m_next		2013203	1					
ANR	2013314	ExpressionStatement	usage -> user_cpu_time += m_exited_user_cpu_time	823:1:24401:24447	2013203	3	True				
ANR	2013315	AssignmentExpression	usage -> user_cpu_time += m_exited_user_cpu_time		2013203	0		+=			
ANR	2013316	PtrMemberAccess	usage -> user_cpu_time		2013203	0					
ANR	2013317	Identifier	usage		2013203	0					
ANR	2013318	Identifier	user_cpu_time		2013203	1					
ANR	2013319	Identifier	m_exited_user_cpu_time		2013203	1					
ANR	2013320	ExpressionStatement	usage -> sys_cpu_time += m_exited_sys_cpu_time	824:1:24450:24494	2013203	4	True				
ANR	2013321	AssignmentExpression	usage -> sys_cpu_time += m_exited_sys_cpu_time		2013203	0		+=			
ANR	2013322	PtrMemberAccess	usage -> sys_cpu_time		2013203	0					
ANR	2013323	Identifier	usage		2013203	0					
ANR	2013324	Identifier	sys_cpu_time		2013203	1					
ANR	2013325	Identifier	m_exited_sys_cpu_time		2013203	1					
ANR	2013326	IfStatement	if ( m_cgroup != NULL )		2013203	5					
ANR	2013327	Condition	m_cgroup != NULL	827:12:24541:24556	2013203	0	True				
ANR	2013328	EqualityExpression	m_cgroup != NULL		2013203	0		!=			
ANR	2013329	Identifier	m_cgroup		2013203	0					
ANR	2013330	Identifier	NULL		2013203	1					
ANR	2013331	CompoundStatement		39:30:1007:1007	2013203	1					
ANR	2013332	ExpressionStatement	aggregate_usage_cgroup ( usage )	828:2:24563:24592	2013203	0	True				
ANR	2013333	CallExpression	aggregate_usage_cgroup ( usage )		2013203	0					
ANR	2013334	Callee	aggregate_usage_cgroup		2013203	0					
ANR	2013335	Identifier	aggregate_usage_cgroup		2013203	0					
ANR	2013336	ArgumentList	usage		2013203	1					
ANR	2013337	Argument	usage		2013203	0					
ANR	2013338	Identifier	usage		2013203	0					
ANR	2013339	ReturnType	void		2013203	1					
ANR	2013340	Identifier	ProcFamily :: aggregate_usage		2013203	2					
ANR	2013341	ParameterList	ProcFamilyUsage * usage		2013203	3					
ANR	2013342	Parameter	ProcFamilyUsage * usage	788:28:23527:23548	2013203	0	True				
ANR	2013343	ParameterType	ProcFamilyUsage *		2013203	0					
ANR	2013344	Identifier	usage		2013203	1					
ANR	2013345	CFGEntryNode	ENTRY		2013203		True				
ANR	2013346	CFGExitNode	EXIT		2013203		True				
ANR	2013347	Symbol	usage -> user_cpu_time		2013203						
ANR	2013348	Symbol	member -> m_proc_info -> cpuusage		2013203						
ANR	2013349	Symbol	usage -> total_proportional_set_size_available		2013203						
ANR	2013350	Symbol	member -> m_proc_info		2013203						
ANR	2013351	Symbol	usage		2013203						
ANR	2013352	Symbol	member -> m_proc_info -> pssize		2013203						
ANR	2013353	Symbol	usage -> total_resident_set_size		2013203						
ANR	2013354	Symbol	member -> m_proc_info -> pssize_available		2013203						
ANR	2013355	Symbol	* * member		2013203						
ANR	2013356	Symbol	* member -> m_proc_info		2013203						
ANR	2013357	Symbol	member		2013203						
ANR	2013358	Symbol	member -> m_proc_info -> sys_time		2013203						
ANR	2013359	Symbol	usage -> num_procs		2013203						
ANR	2013360	Symbol	m_member_list		2013203						
ANR	2013361	Symbol	NULL		2013203						
ANR	2013362	Symbol	member -> m_proc_info -> rssize		2013203						
ANR	2013363	Symbol	usage -> total_proportional_set_size		2013203						
ANR	2013364	Symbol	* member		2013203						
ANR	2013365	Symbol	usage -> percent_cpu		2013203						
ANR	2013366	Symbol	member -> m_next		2013203						
ANR	2013367	Symbol	* usage		2013203						
ANR	2013368	Symbol	m_cgroup		2013203						
ANR	2013369	Symbol	usage -> sys_cpu_time		2013203						
ANR	2013370	Symbol	member -> m_proc_info -> imgsize		2013203						
ANR	2013371	Symbol	m_exited_sys_cpu_time		2013203						
ANR	2013372	Symbol	usage -> total_image_size		2013203						
ANR	2013373	Symbol	true		2013203						
ANR	2013374	Symbol	m_exited_user_cpu_time		2013203						
ANR	2013375	Symbol	member -> m_proc_info -> user_time		2013203						
ANR	2013376	Function	ProcFamily :: signal_root	834:0:24608:24784							
ANR	2013377	FunctionDef	ProcFamily :: signal_root (int sig)		2013376	0					
ANR	2013378	CompoundStatement		836:0:24646:24784	2013376	0					
ANR	2013379	IfStatement	if ( m_proxy != NULL )		2013376	0					
ANR	2013380	Condition	m_proxy != NULL	838:5:24673:24687	2013376	0	True				
ANR	2013381	EqualityExpression	m_proxy != NULL		2013376	0		!=			
ANR	2013382	Identifier	m_proxy		2013376	0					
ANR	2013383	Identifier	NULL		2013376	1					
ANR	2013384	CompoundStatement		3:22:43:43	2013376	1					
ANR	2013385	ExpressionStatement	"glexec_kill ( m_proxy , m_root_pid , sig )"	839:2:24694:24731	2013376	0	True				
ANR	2013386	CallExpression	"glexec_kill ( m_proxy , m_root_pid , sig )"		2013376	0					
ANR	2013387	Callee	glexec_kill		2013376	0					
ANR	2013388	Identifier	glexec_kill		2013376	0					
ANR	2013389	ArgumentList	m_proxy		2013376	1					
ANR	2013390	Argument	m_proxy		2013376	0					
ANR	2013391	Identifier	m_proxy		2013376	0					
ANR	2013392	Argument	m_root_pid		2013376	1					
ANR	2013393	Identifier	m_root_pid		2013376	0					
ANR	2013394	Argument	sig		2013376	2					
ANR	2013395	Identifier	sig		2013376	0					
ANR	2013396	ReturnStatement	return ;	840:2:24735:24741	2013376	1	True				
ANR	2013397	ExpressionStatement	"send_signal ( m_root_pid , sig )"	843:1:24754:24782	2013376	1	True				
ANR	2013398	CallExpression	"send_signal ( m_root_pid , sig )"		2013376	0					
ANR	2013399	Callee	send_signal		2013376	0					
ANR	2013400	Identifier	send_signal		2013376	0					
ANR	2013401	ArgumentList	m_root_pid		2013376	1					
ANR	2013402	Argument	m_root_pid		2013376	0					
ANR	2013403	Identifier	m_root_pid		2013376	0					
ANR	2013404	Argument	sig		2013376	1					
ANR	2013405	Identifier	sig		2013376	0					
ANR	2013406	ReturnType	void		2013376	1					
ANR	2013407	Identifier	ProcFamily :: signal_root		2013376	2					
ANR	2013408	ParameterList	int sig		2013376	3					
ANR	2013409	Parameter	int sig	835:24:24637:24643	2013376	0	True				
ANR	2013410	ParameterType	int		2013376	0					
ANR	2013411	Identifier	sig		2013376	1					
ANR	2013412	CFGEntryNode	ENTRY		2013376		True				
ANR	2013413	CFGExitNode	EXIT		2013376		True				
ANR	2013414	Symbol	sig		2013376						
ANR	2013415	Symbol	NULL		2013376						
ANR	2013416	Symbol	m_root_pid		2013376						
ANR	2013417	Symbol	m_proxy		2013376						
ANR	2013418	Function	ProcFamily :: spree	846:0:24787:25240							
ANR	2013419	FunctionDef	ProcFamily :: spree (int sig)		2013418	0					
ANR	2013420	CompoundStatement		848:0:24819:25240	2013418	0					
ANR	2013421	IfStatement	if ( ( NULL != m_cgroup_string ) && ( 0 == spree_cgroup ( sig ) ) )		2013418	0					
ANR	2013422	Condition	( NULL != m_cgroup_string ) && ( 0 == spree_cgroup ( sig ) )	850:5:24858:24910	2013418	0	True				
ANR	2013423	AndExpression	( NULL != m_cgroup_string ) && ( 0 == spree_cgroup ( sig ) )		2013418	0		&&			
ANR	2013424	EqualityExpression	NULL != m_cgroup_string		2013418	0		!=			
ANR	2013425	Identifier	NULL		2013418	0					
ANR	2013426	Identifier	m_cgroup_string		2013418	1					
ANR	2013427	EqualityExpression	0 == spree_cgroup ( sig )		2013418	1		==			
ANR	2013428	PrimaryExpression	0		2013418	0					
ANR	2013429	CallExpression	spree_cgroup ( sig )		2013418	1					
ANR	2013430	Callee	spree_cgroup		2013418	0					
ANR	2013431	Identifier	spree_cgroup		2013418	0					
ANR	2013432	ArgumentList	sig		2013418	1					
ANR	2013433	Argument	sig		2013418	0					
ANR	2013434	Identifier	sig		2013418	0					
ANR	2013435	CompoundStatement		3:60:93:93	2013418	1					
ANR	2013436	ReturnStatement	return ;	851:2:24917:24923	2013418	0	True				
ANR	2013437	IdentifierDeclStatement	ProcFamilyMember * member ;	855:1:24937:24961	2013418	1	True				
ANR	2013438	IdentifierDecl	* member		2013418	0					
ANR	2013439	IdentifierDeclType	ProcFamilyMember *		2013418	0					
ANR	2013440	Identifier	member		2013418	1					
ANR	2013441	ForStatement	for ( member = m_member_list ; member != NULL ; member = member -> m_next )		2013418	2					
ANR	2013442	ForInit	member = m_member_list ;	856:6:24969:24991	2013418	0	True				
ANR	2013443	AssignmentExpression	member = m_member_list		2013418	0		=			
ANR	2013444	Identifier	member		2013418	0					
ANR	2013445	Identifier	m_member_list		2013418	1					
ANR	2013446	Condition	member != NULL	856:30:24993:25006	2013418	1	True				
ANR	2013447	EqualityExpression	member != NULL		2013418	0		!=			
ANR	2013448	Identifier	member		2013418	0					
ANR	2013449	Identifier	NULL		2013418	1					
ANR	2013450	AssignmentExpression	member = member -> m_next	856:46:25009:25031	2013418	2	True	=			
ANR	2013451	Identifier	member		2013418	0					
ANR	2013452	PtrMemberAccess	member -> m_next		2013418	1					
ANR	2013453	Identifier	member		2013418	0					
ANR	2013454	Identifier	m_next		2013418	1					
ANR	2013455	CompoundStatement		9:71:214:214	2013418	3					
ANR	2013456	IfStatement	if ( m_proxy != NULL )		2013418	0					
ANR	2013457	Condition	m_proxy != NULL	858:6:25062:25076	2013418	0	True				
ANR	2013458	EqualityExpression	m_proxy != NULL		2013418	0		!=			
ANR	2013459	Identifier	m_proxy		2013418	0					
ANR	2013460	Identifier	NULL		2013418	1					
ANR	2013461	CompoundStatement		11:23:259:259	2013418	1					
ANR	2013462	ExpressionStatement	"glexec_kill ( m_proxy , member -> m_proc_info -> pid , sig )"	859:3:25084:25165	2013418	0	True				
ANR	2013463	CallExpression	"glexec_kill ( m_proxy , member -> m_proc_info -> pid , sig )"		2013418	0					
ANR	2013464	Callee	glexec_kill		2013418	0					
ANR	2013465	Identifier	glexec_kill		2013418	0					
ANR	2013466	ArgumentList	m_proxy		2013418	1					
ANR	2013467	Argument	m_proxy		2013418	0					
ANR	2013468	Identifier	m_proxy		2013418	0					
ANR	2013469	Argument	member -> m_proc_info -> pid		2013418	1					
ANR	2013470	PtrMemberAccess	member -> m_proc_info -> pid		2013418	0					
ANR	2013471	PtrMemberAccess	member -> m_proc_info		2013418	0					
ANR	2013472	Identifier	member		2013418	0					
ANR	2013473	Identifier	m_proc_info		2013418	1					
ANR	2013474	Identifier	pid		2013418	1					
ANR	2013475	Argument	sig		2013418	2					
ANR	2013476	Identifier	sig		2013418	0					
ANR	2013477	ContinueStatement	continue ;	862:3:25170:25178	2013418	1	True				
ANR	2013478	ExpressionStatement	"send_signal ( member -> m_proc_info -> pid , sig )"	865:2:25193:25235	2013418	1	True				
ANR	2013479	CallExpression	"send_signal ( member -> m_proc_info -> pid , sig )"		2013418	0					
ANR	2013480	Callee	send_signal		2013418	0					
ANR	2013481	Identifier	send_signal		2013418	0					
ANR	2013482	ArgumentList	member -> m_proc_info -> pid		2013418	1					
ANR	2013483	Argument	member -> m_proc_info -> pid		2013418	0					
ANR	2013484	PtrMemberAccess	member -> m_proc_info -> pid		2013418	0					
ANR	2013485	PtrMemberAccess	member -> m_proc_info		2013418	0					
ANR	2013486	Identifier	member		2013418	0					
ANR	2013487	Identifier	m_proc_info		2013418	1					
ANR	2013488	Identifier	pid		2013418	1					
ANR	2013489	Argument	sig		2013418	1					
ANR	2013490	Identifier	sig		2013418	0					
ANR	2013491	ReturnType	void		2013418	1					
ANR	2013492	Identifier	ProcFamily :: spree		2013418	2					
ANR	2013493	ParameterList	int sig		2013418	3					
ANR	2013494	Parameter	int sig	847:18:24810:24816	2013418	0	True				
ANR	2013495	ParameterType	int		2013418	0					
ANR	2013496	Identifier	sig		2013418	1					
ANR	2013497	CFGEntryNode	ENTRY		2013418		True				
ANR	2013498	CFGExitNode	EXIT		2013418		True				
ANR	2013499	Symbol	m_member_list		2013418						
ANR	2013500	Symbol	spree_cgroup		2013418						
ANR	2013501	Symbol	NULL		2013418						
ANR	2013502	Symbol	member -> m_proc_info		2013418						
ANR	2013503	Symbol	member -> m_next		2013418						
ANR	2013504	Symbol	* member		2013418						
ANR	2013505	Symbol	member -> m_proc_info -> pid		2013418						
ANR	2013506	Symbol	sig		2013418						
ANR	2013507	Symbol	* * member		2013418						
ANR	2013508	Symbol	* member -> m_proc_info		2013418						
ANR	2013509	Symbol	member		2013418						
ANR	2013510	Symbol	m_cgroup_string		2013418						
ANR	2013511	Symbol	m_proxy		2013418						
ANR	2013512	Function	ProcFamily :: add_member	869:0:25243:25816							
ANR	2013513	FunctionDef	ProcFamily :: add_member (procInfo * pi)		2013512	0					
ANR	2013514	CompoundStatement		871:0:25285:25816	2013512	0					
ANR	2013515	Statement	ProcFamilyMember	872:1:25288:25303	2013512	0	True				
ANR	2013516	Statement	*	872:17:25304:25304	2013512	1	True				
ANR	2013517	Statement	member	872:19:25306:25311	2013512	2	True				
ANR	2013518	Statement	=	872:26:25313:25313	2013512	3	True				
ANR	2013519	Statement	new	872:28:25315:25317	2013512	4	True				
ANR	2013520	ExpressionStatement	ProcFamilyMember	872:32:25319:25335	2013512	5	True				
ANR	2013521	Identifier	ProcFamilyMember		2013512	0					
ANR	2013522	ExpressionStatement	member -> m_family = this	873:1:25338:25361	2013512	6	True				
ANR	2013523	AssignmentExpression	member -> m_family = this		2013512	0		=			
ANR	2013524	PtrMemberAccess	member -> m_family		2013512	0					
ANR	2013525	Identifier	member		2013512	0					
ANR	2013526	Identifier	m_family		2013512	1					
ANR	2013527	Identifier	this		2013512	1					
ANR	2013528	ExpressionStatement	member -> m_proc_info = pi	874:1:25364:25388	2013512	7	True				
ANR	2013529	AssignmentExpression	member -> m_proc_info = pi		2013512	0		=			
ANR	2013530	PtrMemberAccess	member -> m_proc_info		2013512	0					
ANR	2013531	Identifier	member		2013512	0					
ANR	2013532	Identifier	m_proc_info		2013512	1					
ANR	2013533	Identifier	pi		2013512	1					
ANR	2013534	ExpressionStatement	member -> m_still_alive = false	875:1:25391:25420	2013512	8	True				
ANR	2013535	AssignmentExpression	member -> m_still_alive = false		2013512	0		=			
ANR	2013536	PtrMemberAccess	member -> m_still_alive		2013512	0					
ANR	2013537	Identifier	member		2013512	0					
ANR	2013538	Identifier	m_still_alive		2013512	1					
ANR	2013539	Identifier	false		2013512	1					
ANR	2013540	ExpressionStatement	member -> m_prev = NULL	879:1:25451:25472	2013512	9	True				
ANR	2013541	AssignmentExpression	member -> m_prev = NULL		2013512	0		=			
ANR	2013542	PtrMemberAccess	member -> m_prev		2013512	0					
ANR	2013543	Identifier	member		2013512	0					
ANR	2013544	Identifier	m_prev		2013512	1					
ANR	2013545	Identifier	NULL		2013512	1					
ANR	2013546	ExpressionStatement	member -> m_next = m_member_list	880:1:25475:25505	2013512	10	True				
ANR	2013547	AssignmentExpression	member -> m_next = m_member_list		2013512	0		=			
ANR	2013548	PtrMemberAccess	member -> m_next		2013512	0					
ANR	2013549	Identifier	member		2013512	0					
ANR	2013550	Identifier	m_next		2013512	1					
ANR	2013551	Identifier	m_member_list		2013512	1					
ANR	2013552	IfStatement	if ( m_member_list != NULL )		2013512	11					
ANR	2013553	Condition	m_member_list != NULL	881:5:25512:25532	2013512	0	True				
ANR	2013554	EqualityExpression	m_member_list != NULL		2013512	0		!=			
ANR	2013555	Identifier	m_member_list		2013512	0					
ANR	2013556	Identifier	NULL		2013512	1					
ANR	2013557	CompoundStatement		11:28:249:249	2013512	1					
ANR	2013558	ExpressionStatement	m_member_list -> m_prev = member	882:2:25539:25569	2013512	0	True				
ANR	2013559	AssignmentExpression	m_member_list -> m_prev = member		2013512	0		=			
ANR	2013560	PtrMemberAccess	m_member_list -> m_prev		2013512	0					
ANR	2013561	Identifier	m_member_list		2013512	0					
ANR	2013562	Identifier	m_prev		2013512	1					
ANR	2013563	Identifier	member		2013512	1					
ANR	2013564	ExpressionStatement	m_member_list = member	884:1:25575:25597	2013512	12	True				
ANR	2013565	AssignmentExpression	m_member_list = member		2013512	0		=			
ANR	2013566	Identifier	m_member_list		2013512	0					
ANR	2013567	Identifier	member		2013512	1					
ANR	2013568	IfStatement	if ( m_cgroup_string != NULL )		2013512	13					
ANR	2013569	Condition	m_cgroup_string != NULL	888:5:25670:25692	2013512	0	True				
ANR	2013570	EqualityExpression	m_cgroup_string != NULL		2013512	0		!=			
ANR	2013571	Identifier	m_cgroup_string		2013512	0					
ANR	2013572	Identifier	NULL		2013512	1					
ANR	2013573	CompoundStatement		18:30:409:409	2013512	1					
ANR	2013574	ExpressionStatement	migrate_to_cgroup ( pi -> pid )	889:2:25699:25725	2013512	0	True				
ANR	2013575	CallExpression	migrate_to_cgroup ( pi -> pid )		2013512	0					
ANR	2013576	Callee	migrate_to_cgroup		2013512	0					
ANR	2013577	Identifier	migrate_to_cgroup		2013512	0					
ANR	2013578	ArgumentList	pi -> pid		2013512	1					
ANR	2013579	Argument	pi -> pid		2013512	0					
ANR	2013580	PtrMemberAccess	pi -> pid		2013512	0					
ANR	2013581	Identifier	pi		2013512	0					
ANR	2013582	Identifier	pid		2013512	1					
ANR	2013583	ExpressionStatement	m_monitor -> add_member ( member )	894:1:25785:25814	2013512	14	True				
ANR	2013584	CallExpression	m_monitor -> add_member ( member )		2013512	0					
ANR	2013585	Callee	m_monitor -> add_member		2013512	0					
ANR	2013586	PtrMemberAccess	m_monitor -> add_member		2013512	0					
ANR	2013587	Identifier	m_monitor		2013512	0					
ANR	2013588	Identifier	add_member		2013512	1					
ANR	2013589	ArgumentList	member		2013512	1					
ANR	2013590	Argument	member		2013512	0					
ANR	2013591	Identifier	member		2013512	0					
ANR	2013592	ReturnType	void		2013512	1					
ANR	2013593	Identifier	ProcFamily :: add_member		2013512	2					
ANR	2013594	ParameterList	procInfo * pi		2013512	3					
ANR	2013595	Parameter	procInfo * pi	870:23:25271:25282	2013512	0	True				
ANR	2013596	ParameterType	procInfo *		2013512	0					
ANR	2013597	Identifier	pi		2013512	1					
ANR	2013598	CFGEntryNode	ENTRY		2013512		True				
ANR	2013599	CFGExitNode	EXIT		2013512		True				
ANR	2013600	Symbol	m_member_list		2013512						
ANR	2013601	Symbol	member -> m_family		2013512						
ANR	2013602	Symbol	NULL		2013512						
ANR	2013603	Symbol	member -> m_proc_info		2013512						
ANR	2013604	Symbol	this		2013512						
ANR	2013605	Symbol	false		2013512						
ANR	2013606	Symbol	member -> m_still_alive		2013512						
ANR	2013607	Symbol	member -> m_prev		2013512						
ANR	2013608	Symbol	* member		2013512						
ANR	2013609	Symbol	member -> m_next		2013512						
ANR	2013610	Symbol	m_monitor		2013512						
ANR	2013611	Symbol	m_member_list -> m_prev		2013512						
ANR	2013612	Symbol	* m_member_list		2013512						
ANR	2013613	Symbol	pi -> pid		2013512						
ANR	2013614	Symbol	member		2013512						
ANR	2013615	Symbol	pi		2013512						
ANR	2013616	Symbol	m_cgroup_string		2013512						
ANR	2013617	Symbol	* pi		2013512						
ANR	2013618	Function	ProcFamily :: remove_exited_processes	897:0:25819:27821							
ANR	2013619	FunctionDef	ProcFamily :: remove_exited_processes ()		2013618	0					
ANR	2013620	CompoundStatement		899:0:25862:27821	2013618	0					
ANR	2013621	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	904:1:26049:26089	2013618	0	True				
ANR	2013622	IdentifierDecl	* member = m_member_list		2013618	0					
ANR	2013623	IdentifierDeclType	ProcFamilyMember *		2013618	0					
ANR	2013624	Identifier	member		2013618	1					
ANR	2013625	AssignmentExpression	* member = m_member_list		2013618	2		=			
ANR	2013626	Identifier	m_member_list		2013618	0					
ANR	2013627	Identifier	m_member_list		2013618	1					
ANR	2013628	IdentifierDeclStatement	ProcFamilyMember * prev = NULL ;	905:1:26092:26121	2013618	1	True				
ANR	2013629	IdentifierDecl	* prev = NULL		2013618	0					
ANR	2013630	IdentifierDeclType	ProcFamilyMember *		2013618	0					
ANR	2013631	Identifier	prev		2013618	1					
ANR	2013632	AssignmentExpression	* prev = NULL		2013618	2		=			
ANR	2013633	Identifier	NULL		2013618	0					
ANR	2013634	Identifier	NULL		2013618	1					
ANR	2013635	IdentifierDeclStatement	ProcFamilyMember * * prev_ptr = & m_member_list ;	906:1:26124:26168	2013618	2	True				
ANR	2013636	IdentifierDecl	* * prev_ptr = & m_member_list		2013618	0					
ANR	2013637	IdentifierDeclType	ProcFamilyMember * *		2013618	0					
ANR	2013638	Identifier	prev_ptr		2013618	1					
ANR	2013639	AssignmentExpression	* * prev_ptr = & m_member_list		2013618	2		=			
ANR	2013640	Identifier	prev_ptr		2013618	0					
ANR	2013641	UnaryOperationExpression	& m_member_list		2013618	1					
ANR	2013642	UnaryOperator	&		2013618	0					
ANR	2013643	Identifier	m_member_list		2013618	1					
ANR	2013644	WhileStatement	while ( member != NULL )		2013618	3					
ANR	2013645	Condition	member != NULL	907:8:26178:26191	2013618	0	True				
ANR	2013646	EqualityExpression	member != NULL		2013618	0		!=			
ANR	2013647	Identifier	member		2013618	0					
ANR	2013648	Identifier	NULL		2013618	1					
ANR	2013649	CompoundStatement		11:2:337:383	2013618	1					
ANR	2013650	IdentifierDeclStatement	ProcFamilyMember * next_member = member -> m_next ;	909:2:26200:26246	2013618	0	True				
ANR	2013651	IdentifierDecl	* next_member = member -> m_next		2013618	0					
ANR	2013652	IdentifierDeclType	ProcFamilyMember *		2013618	0					
ANR	2013653	Identifier	next_member		2013618	1					
ANR	2013654	AssignmentExpression	* next_member = member -> m_next		2013618	2		=			
ANR	2013655	Identifier	next_member		2013618	0					
ANR	2013656	PtrMemberAccess	member -> m_next		2013618	1					
ANR	2013657	Identifier	member		2013618	0					
ANR	2013658	Identifier	m_next		2013618	1					
ANR	2013659	IfStatement	if ( ! member -> m_still_alive )		2013618	1					
ANR	2013660	Condition	! member -> m_still_alive	911:6:26255:26276	2013618	0	True				
ANR	2013661	UnaryOperationExpression	! member -> m_still_alive		2013618	0					
ANR	2013662	UnaryOperator	!		2013618	0					
ANR	2013663	PtrMemberAccess	member -> m_still_alive		2013618	1					
ANR	2013664	Identifier	member		2013618	0					
ANR	2013665	Identifier	m_still_alive		2013618	1					
ANR	2013666	CompoundStatement		13:30:416:416	2013618	1					
ANR	2013667	IfStatement	if ( m_root_pid != 0 )		2013618	0					
ANR	2013668	Condition	m_root_pid != 0	920:7:26555:26569	2013618	0	True				
ANR	2013669	EqualityExpression	m_root_pid != 0		2013618	0		!=			
ANR	2013670	Identifier	m_root_pid		2013618	0					
ANR	2013671	PrimaryExpression	0		2013618	1					
ANR	2013672	CompoundStatement		22:24:709:709	2013618	1					
ANR	2013673	ExpressionStatement	"dprintf ( D_ALWAYS , ""process %u (of family %u) has exited\\n"" , member -> m_proc_info -> pid , m_root_pid )"	921:4:26578:26711	2013618	0	True				
ANR	2013674	CallExpression	"dprintf ( D_ALWAYS , ""process %u (of family %u) has exited\\n"" , member -> m_proc_info -> pid , m_root_pid )"		2013618	0					
ANR	2013675	Callee	dprintf		2013618	0					
ANR	2013676	Identifier	dprintf		2013618	0					
ANR	2013677	ArgumentList	D_ALWAYS		2013618	1					
ANR	2013678	Argument	D_ALWAYS		2013618	0					
ANR	2013679	Identifier	D_ALWAYS		2013618	0					
ANR	2013680	Argument	"""process %u (of family %u) has exited\\n"""		2013618	1					
ANR	2013681	PrimaryExpression	"""process %u (of family %u) has exited\\n"""		2013618	0					
ANR	2013682	Argument	member -> m_proc_info -> pid		2013618	2					
ANR	2013683	PtrMemberAccess	member -> m_proc_info -> pid		2013618	0					
ANR	2013684	PtrMemberAccess	member -> m_proc_info		2013618	0					
ANR	2013685	Identifier	member		2013618	0					
ANR	2013686	Identifier	m_proc_info		2013618	1					
ANR	2013687	Identifier	pid		2013618	1					
ANR	2013688	Argument	m_root_pid		2013618	3					
ANR	2013689	Identifier	m_root_pid		2013618	0					
ANR	2013690	ElseStatement	else		2013618	0					
ANR	2013691	CompoundStatement		28:8:863:863	2013618	0					
ANR	2013692	ExpressionStatement	"dprintf ( D_ALWAYS , ""process %u (not in monitored family) has exited\\n"" , member -> m_proc_info -> pid )"	927:4:26732:26852	2013618	0	True				
ANR	2013693	CallExpression	"dprintf ( D_ALWAYS , ""process %u (not in monitored family) has exited\\n"" , member -> m_proc_info -> pid )"		2013618	0					
ANR	2013694	Callee	dprintf		2013618	0					
ANR	2013695	Identifier	dprintf		2013618	0					
ANR	2013696	ArgumentList	D_ALWAYS		2013618	1					
ANR	2013697	Argument	D_ALWAYS		2013618	0					
ANR	2013698	Identifier	D_ALWAYS		2013618	0					
ANR	2013699	Argument	"""process %u (not in monitored family) has exited\\n"""		2013618	1					
ANR	2013700	PrimaryExpression	"""process %u (not in monitored family) has exited\\n"""		2013618	0					
ANR	2013701	Argument	member -> m_proc_info -> pid		2013618	2					
ANR	2013702	PtrMemberAccess	member -> m_proc_info -> pid		2013618	0					
ANR	2013703	PtrMemberAccess	member -> m_proc_info		2013618	0					
ANR	2013704	Identifier	member		2013618	0					
ANR	2013705	Identifier	m_proc_info		2013618	1					
ANR	2013706	Identifier	pid		2013618	1					
ANR	2013707	ExpressionStatement	m_exited_user_cpu_time += member -> m_proc_info -> user_time	934:3:26908:26968	2013618	1	True				
ANR	2013708	AssignmentExpression	m_exited_user_cpu_time += member -> m_proc_info -> user_time		2013618	0		+=			
ANR	2013709	Identifier	m_exited_user_cpu_time		2013618	0					
ANR	2013710	PtrMemberAccess	member -> m_proc_info -> user_time		2013618	1					
ANR	2013711	PtrMemberAccess	member -> m_proc_info		2013618	0					
ANR	2013712	Identifier	member		2013618	0					
ANR	2013713	Identifier	m_proc_info		2013618	1					
ANR	2013714	Identifier	user_time		2013618	1					
ANR	2013715	ExpressionStatement	m_exited_sys_cpu_time += member -> m_proc_info -> sys_time	936:3:26973:27031	2013618	2	True				
ANR	2013716	AssignmentExpression	m_exited_sys_cpu_time += member -> m_proc_info -> sys_time		2013618	0		+=			
ANR	2013717	Identifier	m_exited_sys_cpu_time		2013618	0					
ANR	2013718	PtrMemberAccess	member -> m_proc_info -> sys_time		2013618	1					
ANR	2013719	PtrMemberAccess	member -> m_proc_info		2013618	0					
ANR	2013720	Identifier	member		2013618	0					
ANR	2013721	Identifier	m_proc_info		2013618	1					
ANR	2013722	Identifier	sys_time		2013618	1					
ANR	2013723	ExpressionStatement	m_monitor -> remove_member ( member )	941:3:27091:27123	2013618	3	True				
ANR	2013724	CallExpression	m_monitor -> remove_member ( member )		2013618	0					
ANR	2013725	Callee	m_monitor -> remove_member		2013618	0					
ANR	2013726	PtrMemberAccess	m_monitor -> remove_member		2013618	0					
ANR	2013727	Identifier	m_monitor		2013618	0					
ANR	2013728	Identifier	remove_member		2013618	1					
ANR	2013729	ArgumentList	member		2013618	1					
ANR	2013730	Argument	member		2013618	0					
ANR	2013731	Identifier	member		2013618	0					
ANR	2013732	ExpressionStatement	* prev_ptr = next_member	946:3:27212:27235	2013618	4	True				
ANR	2013733	AssignmentExpression	* prev_ptr = next_member		2013618	0		=			
ANR	2013734	UnaryOperationExpression	* prev_ptr		2013618	0					
ANR	2013735	UnaryOperator	*		2013618	0					
ANR	2013736	Identifier	prev_ptr		2013618	1					
ANR	2013737	Identifier	next_member		2013618	1					
ANR	2013738	IfStatement	if ( next_member != NULL )		2013618	5					
ANR	2013739	Condition	next_member != NULL	947:7:27244:27262	2013618	0	True				
ANR	2013740	EqualityExpression	next_member != NULL		2013618	0		!=			
ANR	2013741	Identifier	next_member		2013618	0					
ANR	2013742	Identifier	NULL		2013618	1					
ANR	2013743	CompoundStatement		49:28:1402:1402	2013618	1					
ANR	2013744	ExpressionStatement	next_member -> m_prev = prev	948:4:27271:27297	2013618	0	True				
ANR	2013745	AssignmentExpression	next_member -> m_prev = prev		2013618	0		=			
ANR	2013746	PtrMemberAccess	next_member -> m_prev		2013618	0					
ANR	2013747	Identifier	next_member		2013618	0					
ANR	2013748	Identifier	m_prev		2013618	1					
ANR	2013749	Identifier	prev		2013618	1					
ANR	2013750	Statement	delete	954:3:27459:27464	2013618	6	True				
ANR	2013751	ExpressionStatement	member -> m_proc_info	954:10:27466:27485	2013618	7	True				
ANR	2013752	PtrMemberAccess	member -> m_proc_info		2013618	0					
ANR	2013753	Identifier	member		2013618	0					
ANR	2013754	Identifier	m_proc_info		2013618	1					
ANR	2013755	Statement	delete	955:3:27490:27495	2013618	8	True				
ANR	2013756	ExpressionStatement	member	955:10:27497:27503	2013618	9	True				
ANR	2013757	Identifier	member		2013618	0					
ANR	2013758	ElseStatement	else		2013618	0					
ANR	2013759	CompoundStatement		59:7:1653:1653	2013618	0					
ANR	2013760	ExpressionStatement	member -> m_still_alive = false	961:3:27577:27606	2013618	0	True				
ANR	2013761	AssignmentExpression	member -> m_still_alive = false		2013618	0		=			
ANR	2013762	PtrMemberAccess	member -> m_still_alive		2013618	0					
ANR	2013763	Identifier	member		2013618	0					
ANR	2013764	Identifier	m_still_alive		2013618	1					
ANR	2013765	Identifier	false		2013618	1					
ANR	2013766	ExpressionStatement	prev = member	966:3:27693:27706	2013618	1	True				
ANR	2013767	AssignmentExpression	prev = member		2013618	0		=			
ANR	2013768	Identifier	prev		2013618	0					
ANR	2013769	Identifier	member		2013618	1					
ANR	2013770	ExpressionStatement	prev_ptr = & member -> m_next	967:3:27711:27737	2013618	2	True				
ANR	2013771	AssignmentExpression	prev_ptr = & member -> m_next		2013618	0		=			
ANR	2013772	Identifier	prev_ptr		2013618	0					
ANR	2013773	UnaryOperationExpression	& member -> m_next		2013618	1					
ANR	2013774	UnaryOperator	&		2013618	0					
ANR	2013775	PtrMemberAccess	member -> m_next		2013618	1					
ANR	2013776	Identifier	member		2013618	0					
ANR	2013777	Identifier	m_next		2013618	1					
ANR	2013778	ExpressionStatement	member = next_member	972:2:27796:27816	2013618	2	True				
ANR	2013779	AssignmentExpression	member = next_member		2013618	0		=			
ANR	2013780	Identifier	member		2013618	0					
ANR	2013781	Identifier	next_member		2013618	1					
ANR	2013782	ReturnType	void		2013618	1					
ANR	2013783	Identifier	ProcFamily :: remove_exited_processes		2013618	2					
ANR	2013784	ParameterList			2013618	3					
ANR	2013785	CFGEntryNode	ENTRY		2013618		True				
ANR	2013786	CFGExitNode	EXIT		2013618		True				
ANR	2013787	Symbol	& member -> m_next		2013618						
ANR	2013788	Symbol	member -> m_proc_info		2013618						
ANR	2013789	Symbol	prev		2013618						
ANR	2013790	Symbol	member -> m_still_alive		2013618						
ANR	2013791	Symbol	member -> m_proc_info -> pid		2013618						
ANR	2013792	Symbol	* * member		2013618						
ANR	2013793	Symbol	* member -> m_proc_info		2013618						
ANR	2013794	Symbol	member		2013618						
ANR	2013795	Symbol	member -> m_proc_info -> sys_time		2013618						
ANR	2013796	Symbol	m_member_list		2013618						
ANR	2013797	Symbol	next_member -> m_prev		2013618						
ANR	2013798	Symbol	NULL		2013618						
ANR	2013799	Symbol	D_ALWAYS		2013618						
ANR	2013800	Symbol	false		2013618						
ANR	2013801	Symbol	& m_member_list		2013618						
ANR	2013802	Symbol	next_member		2013618						
ANR	2013803	Symbol	* member		2013618						
ANR	2013804	Symbol	member -> m_next		2013618						
ANR	2013805	Symbol	m_monitor		2013618						
ANR	2013806	Symbol	prev_ptr		2013618						
ANR	2013807	Symbol	* prev_ptr		2013618						
ANR	2013808	Symbol	* next_member		2013618						
ANR	2013809	Symbol	m_exited_sys_cpu_time		2013618						
ANR	2013810	Symbol	m_exited_user_cpu_time		2013618						
ANR	2013811	Symbol	m_root_pid		2013618						
ANR	2013812	Symbol	member -> m_proc_info -> user_time		2013618						
ANR	2013813	Function	ProcFamily :: fold_into_parent	976:0:27824:28730							
ANR	2013814	FunctionDef	ProcFamily :: fold_into_parent (ProcFamily * parent)		2013813	0					
ANR	2013815	CompoundStatement		978:0:27878:28730	2013813	0					
ANR	2013816	ExpressionStatement	parent -> m_exited_user_cpu_time += m_exited_user_cpu_time	981:1:27936:27992	2013813	0	True				
ANR	2013817	AssignmentExpression	parent -> m_exited_user_cpu_time += m_exited_user_cpu_time		2013813	0		+=			
ANR	2013818	PtrMemberAccess	parent -> m_exited_user_cpu_time		2013813	0					
ANR	2013819	Identifier	parent		2013813	0					
ANR	2013820	Identifier	m_exited_user_cpu_time		2013813	1					
ANR	2013821	Identifier	m_exited_user_cpu_time		2013813	1					
ANR	2013822	ExpressionStatement	parent -> m_exited_sys_cpu_time += m_exited_sys_cpu_time	982:1:27995:28049	2013813	1	True				
ANR	2013823	AssignmentExpression	parent -> m_exited_sys_cpu_time += m_exited_sys_cpu_time		2013813	0		+=			
ANR	2013824	PtrMemberAccess	parent -> m_exited_sys_cpu_time		2013813	0					
ANR	2013825	Identifier	parent		2013813	0					
ANR	2013826	Identifier	m_exited_sys_cpu_time		2013813	1					
ANR	2013827	Identifier	m_exited_sys_cpu_time		2013813	1					
ANR	2013828	IfStatement	if ( m_member_list == NULL )		2013813	2					
ANR	2013829	Condition	m_member_list == NULL	986:5:28112:28132	2013813	0	True				
ANR	2013830	EqualityExpression	m_member_list == NULL		2013813	0		==			
ANR	2013831	Identifier	m_member_list		2013813	0					
ANR	2013832	Identifier	NULL		2013813	1					
ANR	2013833	CompoundStatement		9:28:256:256	2013813	1					
ANR	2013834	ReturnStatement	return ;	987:2:28139:28145	2013813	0	True				
ANR	2013835	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	993:1:28224:28264	2013813	3	True				
ANR	2013836	IdentifierDecl	* member = m_member_list		2013813	0					
ANR	2013837	IdentifierDeclType	ProcFamilyMember *		2013813	0					
ANR	2013838	Identifier	member		2013813	1					
ANR	2013839	AssignmentExpression	* member = m_member_list		2013813	2		=			
ANR	2013840	Identifier	m_member_list		2013813	0					
ANR	2013841	Identifier	m_member_list		2013813	1					
ANR	2013842	WhileStatement	while ( member -> m_next != NULL )		2013813	4					
ANR	2013843	Condition	member -> m_next != NULL	994:8:28274:28295	2013813	0	True				
ANR	2013844	EqualityExpression	member -> m_next != NULL		2013813	0		!=			
ANR	2013845	PtrMemberAccess	member -> m_next		2013813	0					
ANR	2013846	Identifier	member		2013813	0					
ANR	2013847	Identifier	m_next		2013813	1					
ANR	2013848	Identifier	NULL		2013813	1					
ANR	2013849	CompoundStatement		17:32:419:419	2013813	1					
ANR	2013850	ExpressionStatement	member -> m_family = parent	995:2:28302:28327	2013813	0	True				
ANR	2013851	AssignmentExpression	member -> m_family = parent		2013813	0		=			
ANR	2013852	PtrMemberAccess	member -> m_family		2013813	0					
ANR	2013853	Identifier	member		2013813	0					
ANR	2013854	Identifier	m_family		2013813	1					
ANR	2013855	Identifier	parent		2013813	1					
ANR	2013856	ExpressionStatement	member = member -> m_next	996:2:28331:28354	2013813	1	True				
ANR	2013857	AssignmentExpression	member = member -> m_next		2013813	0		=			
ANR	2013858	Identifier	member		2013813	0					
ANR	2013859	PtrMemberAccess	member -> m_next		2013813	1					
ANR	2013860	Identifier	member		2013813	0					
ANR	2013861	Identifier	m_next		2013813	1					
ANR	2013862	ExpressionStatement	member -> m_family = parent	998:1:28360:28385	2013813	5	True				
ANR	2013863	AssignmentExpression	member -> m_family = parent		2013813	0		=			
ANR	2013864	PtrMemberAccess	member -> m_family		2013813	0					
ANR	2013865	Identifier	member		2013813	0					
ANR	2013866	Identifier	m_family		2013813	1					
ANR	2013867	Identifier	parent		2013813	1					
ANR	2013868	ExpressionStatement	member -> m_next = parent -> m_member_list	1003:1:28461:28499	2013813	6	True				
ANR	2013869	AssignmentExpression	member -> m_next = parent -> m_member_list		2013813	0		=			
ANR	2013870	PtrMemberAccess	member -> m_next		2013813	0					
ANR	2013871	Identifier	member		2013813	0					
ANR	2013872	Identifier	m_next		2013813	1					
ANR	2013873	PtrMemberAccess	parent -> m_member_list		2013813	1					
ANR	2013874	Identifier	parent		2013813	0					
ANR	2013875	Identifier	m_member_list		2013813	1					
ANR	2013876	IfStatement	if ( member -> m_next != NULL )		2013813	7					
ANR	2013877	Condition	member -> m_next != NULL	1004:5:28506:28527	2013813	0	True				
ANR	2013878	EqualityExpression	member -> m_next != NULL		2013813	0		!=			
ANR	2013879	PtrMemberAccess	member -> m_next		2013813	0					
ANR	2013880	Identifier	member		2013813	0					
ANR	2013881	Identifier	m_next		2013813	1					
ANR	2013882	Identifier	NULL		2013813	1					
ANR	2013883	CompoundStatement		27:29:651:651	2013813	1					
ANR	2013884	ExpressionStatement	member -> m_next -> m_prev = member	1005:2:28534:28565	2013813	0	True				
ANR	2013885	AssignmentExpression	member -> m_next -> m_prev = member		2013813	0		=			
ANR	2013886	PtrMemberAccess	member -> m_next -> m_prev		2013813	0					
ANR	2013887	PtrMemberAccess	member -> m_next		2013813	0					
ANR	2013888	Identifier	member		2013813	0					
ANR	2013889	Identifier	m_next		2013813	1					
ANR	2013890	Identifier	m_prev		2013813	1					
ANR	2013891	Identifier	member		2013813	1					
ANR	2013892	ExpressionStatement	parent -> m_member_list = m_member_list	1011:1:28668:28705	2013813	8	True				
ANR	2013893	AssignmentExpression	parent -> m_member_list = m_member_list		2013813	0		=			
ANR	2013894	PtrMemberAccess	parent -> m_member_list		2013813	0					
ANR	2013895	Identifier	parent		2013813	0					
ANR	2013896	Identifier	m_member_list		2013813	1					
ANR	2013897	Identifier	m_member_list		2013813	1					
ANR	2013898	ExpressionStatement	m_member_list = NULL	1012:1:28708:28728	2013813	9	True				
ANR	2013899	AssignmentExpression	m_member_list = NULL		2013813	0		=			
ANR	2013900	Identifier	m_member_list		2013813	0					
ANR	2013901	Identifier	NULL		2013813	1					
ANR	2013902	ReturnType	void		2013813	1					
ANR	2013903	Identifier	ProcFamily :: fold_into_parent		2013813	2					
ANR	2013904	ParameterList	ProcFamily * parent		2013813	3					
ANR	2013905	Parameter	ProcFamily * parent	977:29:27858:27875	2013813	0	True				
ANR	2013906	ParameterType	ProcFamily *		2013813	0					
ANR	2013907	Identifier	parent		2013813	1					
ANR	2013908	CFGEntryNode	ENTRY		2013813		True				
ANR	2013909	CFGExitNode	EXIT		2013813		True				
ANR	2013910	Symbol	m_member_list		2013813						
ANR	2013911	Symbol	parent		2013813						
ANR	2013912	Symbol	member -> m_family		2013813						
ANR	2013913	Symbol	* parent		2013813						
ANR	2013914	Symbol	NULL		2013813						
ANR	2013915	Symbol	member -> m_next		2013813						
ANR	2013916	Symbol	* member		2013813						
ANR	2013917	Symbol	parent -> m_member_list		2013813						
ANR	2013918	Symbol	* * member		2013813						
ANR	2013919	Symbol	parent -> m_exited_sys_cpu_time		2013813						
ANR	2013920	Symbol	* member -> m_next		2013813						
ANR	2013921	Symbol	parent -> m_exited_user_cpu_time		2013813						
ANR	2013922	Symbol	m_exited_sys_cpu_time		2013813						
ANR	2013923	Symbol	member		2013813						
ANR	2013924	Symbol	m_exited_user_cpu_time		2013813						
ANR	2013925	Symbol	member -> m_next -> m_prev		2013813						
ANR	2013926	Function	ProcFamily :: set_proxy	1016:0:28753:28891							
ANR	2013927	FunctionDef	ProcFamily :: set_proxy (char * proxy)		2013926	0					
ANR	2013928	CompoundStatement		1018:0:28793:28891	2013926	0					
ANR	2013929	IfStatement	if ( m_proxy != NULL )		2013926	0					
ANR	2013930	Condition	m_proxy != NULL	1019:5:28800:28814	2013926	0	True				
ANR	2013931	EqualityExpression	m_proxy != NULL		2013926	0		!=			
ANR	2013932	Identifier	m_proxy		2013926	0					
ANR	2013933	Identifier	NULL		2013926	1					
ANR	2013934	CompoundStatement		2:22:23:23	2013926	1					
ANR	2013935	ExpressionStatement	free ( m_proxy )	1020:2:28821:28834	2013926	0	True				
ANR	2013936	CallExpression	free ( m_proxy )		2013926	0					
ANR	2013937	Callee	free		2013926	0					
ANR	2013938	Identifier	free		2013926	0					
ANR	2013939	ArgumentList	m_proxy		2013926	1					
ANR	2013940	Argument	m_proxy		2013926	0					
ANR	2013941	Identifier	m_proxy		2013926	0					
ANR	2013942	ExpressionStatement	m_proxy = strdup ( proxy )	1022:1:28840:28863	2013926	1	True				
ANR	2013943	AssignmentExpression	m_proxy = strdup ( proxy )		2013926	0		=			
ANR	2013944	Identifier	m_proxy		2013926	0					
ANR	2013945	CallExpression	strdup ( proxy )		2013926	1					
ANR	2013946	Callee	strdup		2013926	0					
ANR	2013947	Identifier	strdup		2013926	0					
ANR	2013948	ArgumentList	proxy		2013926	1					
ANR	2013949	Argument	proxy		2013926	0					
ANR	2013950	Identifier	proxy		2013926	0					
ANR	2013951	ExpressionStatement	ASSERT ( m_proxy != NULL )	1023:1:28866:28889	2013926	2	True				
ANR	2013952	CallExpression	ASSERT ( m_proxy != NULL )		2013926	0					
ANR	2013953	Callee	ASSERT		2013926	0					
ANR	2013954	Identifier	ASSERT		2013926	0					
ANR	2013955	ArgumentList	m_proxy != NULL		2013926	1					
ANR	2013956	Argument	m_proxy != NULL		2013926	0					
ANR	2013957	EqualityExpression	m_proxy != NULL		2013926	0		!=			
ANR	2013958	Identifier	m_proxy		2013926	0					
ANR	2013959	Identifier	NULL		2013926	1					
ANR	2013960	ReturnType	void		2013926	1					
ANR	2013961	Identifier	ProcFamily :: set_proxy		2013926	2					
ANR	2013962	ParameterList	char * proxy		2013926	3					
ANR	2013963	Parameter	char * proxy	1017:22:28780:28790	2013926	0	True				
ANR	2013964	ParameterType	char *		2013926	0					
ANR	2013965	Identifier	proxy		2013926	1					
ANR	2013966	CFGEntryNode	ENTRY		2013926		True				
ANR	2013967	CFGExitNode	EXIT		2013926		True				
ANR	2013968	Symbol	proxy		2013926						
ANR	2013969	Symbol	NULL		2013926						
ANR	2013970	Symbol	strdup		2013926						
ANR	2013971	Symbol	m_proxy		2013926						
ANR	2013972	Function	ProcFamily :: dump	1027:0:28901:29333							
ANR	2013973	FunctionDef	ProcFamily :: dump (ProcFamilyDump & fam)		2013972	0					
ANR	2013974	CompoundStatement		1029:0:28944:29333	2013972	0					
ANR	2013975	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	1030:1:28947:28987	2013972	0	True				
ANR	2013976	IdentifierDecl	* member = m_member_list		2013972	0					
ANR	2013977	IdentifierDeclType	ProcFamilyMember *		2013972	0					
ANR	2013978	Identifier	member		2013972	1					
ANR	2013979	AssignmentExpression	* member = m_member_list		2013972	2		=			
ANR	2013980	Identifier	m_member_list		2013972	0					
ANR	2013981	Identifier	m_member_list		2013972	1					
ANR	2013982	WhileStatement	while ( member != NULL )		2013972	1					
ANR	2013983	Condition	member != NULL	1031:8:28997:29010	2013972	0	True				
ANR	2013984	EqualityExpression	member != NULL		2013972	0		!=			
ANR	2013985	Identifier	member		2013972	0					
ANR	2013986	Identifier	NULL		2013972	1					
ANR	2013987	CompoundStatement		4:2:72:98	2013972	1					
ANR	2013988	IdentifierDeclStatement	ProcFamilyProcessDump proc ;	1032:2:29017:29043	2013972	0	True				
ANR	2013989	IdentifierDecl	proc		2013972	0					
ANR	2013990	IdentifierDeclType	ProcFamilyProcessDump		2013972	0					
ANR	2013991	Identifier	proc		2013972	1					
ANR	2013992	ExpressionStatement	proc . pid = member -> m_proc_info -> pid	1033:2:29047:29082	2013972	1	True				
ANR	2013993	AssignmentExpression	proc . pid = member -> m_proc_info -> pid		2013972	0		=			
ANR	2013994	MemberAccess	proc . pid		2013972	0					
ANR	2013995	Identifier	proc		2013972	0					
ANR	2013996	Identifier	pid		2013972	1					
ANR	2013997	PtrMemberAccess	member -> m_proc_info -> pid		2013972	1					
ANR	2013998	PtrMemberAccess	member -> m_proc_info		2013972	0					
ANR	2013999	Identifier	member		2013972	0					
ANR	2014000	Identifier	m_proc_info		2013972	1					
ANR	2014001	Identifier	pid		2013972	1					
ANR	2014002	ExpressionStatement	proc . ppid = member -> m_proc_info -> ppid	1034:2:29086:29123	2013972	2	True				
ANR	2014003	AssignmentExpression	proc . ppid = member -> m_proc_info -> ppid		2013972	0		=			
ANR	2014004	MemberAccess	proc . ppid		2013972	0					
ANR	2014005	Identifier	proc		2013972	0					
ANR	2014006	Identifier	ppid		2013972	1					
ANR	2014007	PtrMemberAccess	member -> m_proc_info -> ppid		2013972	1					
ANR	2014008	PtrMemberAccess	member -> m_proc_info		2013972	0					
ANR	2014009	Identifier	member		2013972	0					
ANR	2014010	Identifier	m_proc_info		2013972	1					
ANR	2014011	Identifier	ppid		2013972	1					
ANR	2014012	ExpressionStatement	proc . birthday = member -> m_proc_info -> birthday	1035:2:29127:29172	2013972	3	True				
ANR	2014013	AssignmentExpression	proc . birthday = member -> m_proc_info -> birthday		2013972	0		=			
ANR	2014014	MemberAccess	proc . birthday		2013972	0					
ANR	2014015	Identifier	proc		2013972	0					
ANR	2014016	Identifier	birthday		2013972	1					
ANR	2014017	PtrMemberAccess	member -> m_proc_info -> birthday		2013972	1					
ANR	2014018	PtrMemberAccess	member -> m_proc_info		2013972	0					
ANR	2014019	Identifier	member		2013972	0					
ANR	2014020	Identifier	m_proc_info		2013972	1					
ANR	2014021	Identifier	birthday		2013972	1					
ANR	2014022	ExpressionStatement	proc . user_time = member -> m_proc_info -> user_time	1036:2:29176:29223	2013972	4	True				
ANR	2014023	AssignmentExpression	proc . user_time = member -> m_proc_info -> user_time		2013972	0		=			
ANR	2014024	MemberAccess	proc . user_time		2013972	0					
ANR	2014025	Identifier	proc		2013972	0					
ANR	2014026	Identifier	user_time		2013972	1					
ANR	2014027	PtrMemberAccess	member -> m_proc_info -> user_time		2013972	1					
ANR	2014028	PtrMemberAccess	member -> m_proc_info		2013972	0					
ANR	2014029	Identifier	member		2013972	0					
ANR	2014030	Identifier	m_proc_info		2013972	1					
ANR	2014031	Identifier	user_time		2013972	1					
ANR	2014032	ExpressionStatement	proc . sys_time = member -> m_proc_info -> sys_time	1037:2:29227:29272	2013972	5	True				
ANR	2014033	AssignmentExpression	proc . sys_time = member -> m_proc_info -> sys_time		2013972	0		=			
ANR	2014034	MemberAccess	proc . sys_time		2013972	0					
ANR	2014035	Identifier	proc		2013972	0					
ANR	2014036	Identifier	sys_time		2013972	1					
ANR	2014037	PtrMemberAccess	member -> m_proc_info -> sys_time		2013972	1					
ANR	2014038	PtrMemberAccess	member -> m_proc_info		2013972	0					
ANR	2014039	Identifier	member		2013972	0					
ANR	2014040	Identifier	m_proc_info		2013972	1					
ANR	2014041	Identifier	sys_time		2013972	1					
ANR	2014042	ExpressionStatement	fam . procs . push_back ( proc )	1038:2:29276:29301	2013972	6	True				
ANR	2014043	CallExpression	fam . procs . push_back ( proc )		2013972	0					
ANR	2014044	Callee	fam . procs . push_back		2013972	0					
ANR	2014045	MemberAccess	fam . procs . push_back		2013972	0					
ANR	2014046	MemberAccess	fam . procs		2013972	0					
ANR	2014047	Identifier	fam		2013972	0					
ANR	2014048	Identifier	procs		2013972	1					
ANR	2014049	Identifier	push_back		2013972	1					
ANR	2014050	ArgumentList	proc		2013972	1					
ANR	2014051	Argument	proc		2013972	0					
ANR	2014052	Identifier	proc		2013972	0					
ANR	2014053	ExpressionStatement	member = member -> m_next	1039:2:29305:29328	2013972	7	True				
ANR	2014054	AssignmentExpression	member = member -> m_next		2013972	0		=			
ANR	2014055	Identifier	member		2013972	0					
ANR	2014056	PtrMemberAccess	member -> m_next		2013972	1					
ANR	2014057	Identifier	member		2013972	0					
ANR	2014058	Identifier	m_next		2013972	1					
ANR	2014059	ReturnType	void		2013972	1					
ANR	2014060	Identifier	ProcFamily :: dump		2013972	2					
ANR	2014061	ParameterList	ProcFamilyDump & fam		2013972	3					
ANR	2014062	Parameter	ProcFamilyDump & fam	1028:17:28923:28941	2013972	0	True				
ANR	2014063	ParameterType	ProcFamilyDump &		2013972	0					
ANR	2014064	Identifier	fam		2013972	1					
ANR	2014065	CFGEntryNode	ENTRY		2013972		True				
ANR	2014066	CFGExitNode	EXIT		2013972		True				
ANR	2014067	Symbol	m_member_list		2013972						
ANR	2014068	Symbol	proc . birthday		2013972						
ANR	2014069	Symbol	proc		2013972						
ANR	2014070	Symbol	NULL		2013972						
ANR	2014071	Symbol	member -> m_proc_info		2013972						
ANR	2014072	Symbol	fam . procs		2013972						
ANR	2014073	Symbol	* member		2013972						
ANR	2014074	Symbol	member -> m_proc_info -> pid		2013972						
ANR	2014075	Symbol	member -> m_next		2013972						
ANR	2014076	Symbol	member -> m_proc_info -> birthday		2013972						
ANR	2014077	Symbol	proc . user_time		2013972						
ANR	2014078	Symbol	fam		2013972						
ANR	2014079	Symbol	* * member		2013972						
ANR	2014080	Symbol	* member -> m_proc_info		2013972						
ANR	2014081	Symbol	proc . pid		2013972						
ANR	2014082	Symbol	proc . ppid		2013972						
ANR	2014083	Symbol	member		2013972						
ANR	2014084	Symbol	proc . sys_time		2013972						
ANR	2014085	Symbol	member -> m_proc_info -> ppid		2013972						
ANR	2014086	Symbol	member -> m_proc_info -> sys_time		2013972						
ANR	2014087	Symbol	member -> m_proc_info -> user_time		2013972						
