command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4159463	File	data/converged/CVE-2011-4930_htcondor/src_condor_tests_job_ckpt_env_std.cpp								
ANR	4159464	DeclStmt									
ANR	4159465	Decl							extern char	extern char * *	environ
ANR	4159466	DeclStmt									
ANR	4159467	Decl							const int	const int	MATCH
ANR	4159468	ClassDef	StrVector	32:0:956:1170							
ANR	4159469	DeclStmt									
ANR	4159470	Decl							void	void ( int max )	Init
ANR	4159471	DeclStmt									
ANR	4159472	Decl							void	void ( const char * str )	Add
ANR	4159473	DeclStmt									
ANR	4159474	Decl							char	char * ( int idx )	Get
ANR	4159475	DeclStmt									
ANR	4159476	Decl							int	int	max_size
ANR	4159477	DeclStmt									
ANR	4159478	Decl							int	int	cur_size
ANR	4159479	DeclStmt									
ANR	4159480	Decl							char	char * *	data
ANR	4159481	Function	StrVector :: StrVector	44:0:1174:1284							
ANR	4159482	FunctionDef	StrVector :: StrVector (int max)		4159481	0					
ANR	4159483	CompoundStatement		45:0:1206:1284	4159481	0					
ANR	4159484	ExpressionStatement	max_size = max	46:1:1209:1223	4159481	0	True				
ANR	4159485	AssignmentExpression	max_size = max		4159481	0		=			
ANR	4159486	Identifier	max_size		4159481	0					
ANR	4159487	Identifier	max		4159481	1					
ANR	4159488	Statement	data	47:1:1226:1229	4159481	1	True				
ANR	4159489	Statement	=	47:6:1231:1231	4159481	2	True				
ANR	4159490	Statement	new	47:8:1233:1235	4159481	3	True				
ANR	4159491	Statement	char	47:12:1237:1240	4159481	4	True				
ANR	4159492	Statement	*	47:17:1242:1242	4159481	5	True				
ANR	4159493	Statement	[	47:18:1243:1243	4159481	6	True				
ANR	4159494	Statement	max	47:20:1245:1247	4159481	7	True				
ANR	4159495	Statement	]	47:24:1249:1249	4159481	8	True				
ANR	4159496	ExpressionStatement		47:25:1250:1250	4159481	9	True				
ANR	4159497	ExpressionStatement	assert ( data )	48:1:1253:1267	4159481	10	True				
ANR	4159498	CallExpression	assert ( data )		4159481	0					
ANR	4159499	Callee	assert		4159481	0					
ANR	4159500	Identifier	assert		4159481	0					
ANR	4159501	ArgumentList	data		4159481	1					
ANR	4159502	Argument	data		4159481	0					
ANR	4159503	Identifier	data		4159481	0					
ANR	4159504	ExpressionStatement	cur_size = 0	49:1:1270:1282	4159481	11	True				
ANR	4159505	AssignmentExpression	cur_size = 0		4159481	0		=			
ANR	4159506	Identifier	cur_size		4159481	0					
ANR	4159507	PrimaryExpression	0		4159481	1					
ANR	4159508	Identifier	StrVector :: StrVector		4159481	1					
ANR	4159509	ParameterList	int max		4159481	2					
ANR	4159510	Parameter	int max	44:22:1196:1202	4159481	0	True				
ANR	4159511	ParameterType	int		4159481	0					
ANR	4159512	Identifier	max		4159481	1					
ANR	4159513	CFGEntryNode	ENTRY		4159481		True				
ANR	4159514	CFGExitNode	EXIT		4159481		True				
ANR	4159515	Symbol	data		4159481						
ANR	4159516	Symbol	max		4159481						
ANR	4159517	Symbol	cur_size		4159481						
ANR	4159518	Symbol	max_size		4159481						
ANR	4159519	Function	StrVector :: Init	52:0:1287:1397							
ANR	4159520	FunctionDef	StrVector :: Init (int max)		4159519	0					
ANR	4159521	CompoundStatement		53:0:1319:1397	4159519	0					
ANR	4159522	ExpressionStatement	max_size = max	54:1:1322:1336	4159519	0	True				
ANR	4159523	AssignmentExpression	max_size = max		4159519	0		=			
ANR	4159524	Identifier	max_size		4159519	0					
ANR	4159525	Identifier	max		4159519	1					
ANR	4159526	Statement	data	55:1:1339:1342	4159519	1	True				
ANR	4159527	Statement	=	55:6:1344:1344	4159519	2	True				
ANR	4159528	Statement	new	55:8:1346:1348	4159519	3	True				
ANR	4159529	Statement	char	55:12:1350:1353	4159519	4	True				
ANR	4159530	Statement	*	55:17:1355:1355	4159519	5	True				
ANR	4159531	Statement	[	55:18:1356:1356	4159519	6	True				
ANR	4159532	Statement	max	55:20:1358:1360	4159519	7	True				
ANR	4159533	Statement	]	55:24:1362:1362	4159519	8	True				
ANR	4159534	ExpressionStatement		55:25:1363:1363	4159519	9	True				
ANR	4159535	ExpressionStatement	assert ( data )	56:1:1366:1380	4159519	10	True				
ANR	4159536	CallExpression	assert ( data )		4159519	0					
ANR	4159537	Callee	assert		4159519	0					
ANR	4159538	Identifier	assert		4159519	0					
ANR	4159539	ArgumentList	data		4159519	1					
ANR	4159540	Argument	data		4159519	0					
ANR	4159541	Identifier	data		4159519	0					
ANR	4159542	ExpressionStatement	cur_size = 0	57:1:1383:1395	4159519	11	True				
ANR	4159543	AssignmentExpression	cur_size = 0		4159519	0		=			
ANR	4159544	Identifier	cur_size		4159519	0					
ANR	4159545	PrimaryExpression	0		4159519	1					
ANR	4159546	ReturnType	void		4159519	1					
ANR	4159547	Identifier	StrVector :: Init		4159519	2					
ANR	4159548	ParameterList	int max		4159519	3					
ANR	4159549	Parameter	int max	52:22:1309:1315	4159519	0	True				
ANR	4159550	ParameterType	int		4159519	0					
ANR	4159551	Identifier	max		4159519	1					
ANR	4159552	CFGEntryNode	ENTRY		4159519		True				
ANR	4159553	CFGExitNode	EXIT		4159519		True				
ANR	4159554	Symbol	data		4159519						
ANR	4159555	Symbol	max		4159519						
ANR	4159556	Symbol	cur_size		4159519						
ANR	4159557	Symbol	max_size		4159519						
ANR	4159558	Function	StrVector :: Add	60:0:1400:1598							
ANR	4159559	FunctionDef	StrVector :: Add (const char * str)		4159558	0					
ANR	4159560	CompoundStatement		62:0:1439:1598	4159558	0					
ANR	4159561	ExpressionStatement	assert ( cur_size < max_size )	63:1:1442:1471	4159558	0	True				
ANR	4159562	CallExpression	assert ( cur_size < max_size )		4159558	0					
ANR	4159563	Callee	assert		4159558	0					
ANR	4159564	Identifier	assert		4159558	0					
ANR	4159565	ArgumentList	cur_size < max_size		4159558	1					
ANR	4159566	Argument	cur_size < max_size		4159558	0					
ANR	4159567	RelationalExpression	cur_size < max_size		4159558	0		<			
ANR	4159568	Identifier	cur_size		4159558	0					
ANR	4159569	Identifier	max_size		4159558	1					
ANR	4159570	ExpressionStatement	data [ cur_size ] = new char [ strlen ( str ) + 1 ]	65:1:1475:1521	4159558	1	True				
ANR	4159571	AssignmentExpression	data [ cur_size ] = new char [ strlen ( str ) + 1 ]		4159558	0		=			
ANR	4159572	ArrayIndexing	data [ cur_size ]		4159558	0					
ANR	4159573	Identifier	data		4159558	0					
ANR	4159574	Identifier	cur_size		4159558	1					
ANR	4159575	AdditiveExpression	strlen ( str ) + 1		4159558	1		+			
ANR	4159576	CallExpression	strlen ( str )		4159558	0					
ANR	4159577	Callee	strlen		4159558	0					
ANR	4159578	Identifier	strlen		4159558	0					
ANR	4159579	ArgumentList	str		4159558	1					
ANR	4159580	Argument	str		4159558	0					
ANR	4159581	Identifier	str		4159558	0					
ANR	4159582	PrimaryExpression	1		4159558	1					
ANR	4159583	ExpressionStatement	assert ( data [ cur_size ] )	66:1:1524:1548	4159558	2	True				
ANR	4159584	CallExpression	assert ( data [ cur_size ] )		4159558	0					
ANR	4159585	Callee	assert		4159558	0					
ANR	4159586	Identifier	assert		4159558	0					
ANR	4159587	ArgumentList	data [ cur_size ]		4159558	1					
ANR	4159588	Argument	data [ cur_size ]		4159558	0					
ANR	4159589	ArrayIndexing	data [ cur_size ]		4159558	0					
ANR	4159590	Identifier	data		4159558	0					
ANR	4159591	Identifier	cur_size		4159558	1					
ANR	4159592	ExpressionStatement	"strcpy ( data [ cur_size ] , str )"	67:1:1551:1580	4159558	3	True				
ANR	4159593	CallExpression	"strcpy ( data [ cur_size ] , str )"		4159558	0					
ANR	4159594	Callee	strcpy		4159558	0					
ANR	4159595	Identifier	strcpy		4159558	0					
ANR	4159596	ArgumentList	data [ cur_size ]		4159558	1					
ANR	4159597	Argument	data [ cur_size ]		4159558	0					
ANR	4159598	ArrayIndexing	data [ cur_size ]		4159558	0					
ANR	4159599	Identifier	data		4159558	0					
ANR	4159600	Identifier	cur_size		4159558	1					
ANR	4159601	Argument	str		4159558	1					
ANR	4159602	Identifier	str		4159558	0					
ANR	4159603	ExpressionStatement	cur_size += 1	68:1:1583:1596	4159558	4	True				
ANR	4159604	AssignmentExpression	cur_size += 1		4159558	0		+=			
ANR	4159605	Identifier	cur_size		4159558	0					
ANR	4159606	PrimaryExpression	1		4159558	1					
ANR	4159607	ReturnType	void		4159558	1					
ANR	4159608	Identifier	StrVector :: Add		4159558	2					
ANR	4159609	ParameterList	const char * str		4159558	3					
ANR	4159610	Parameter	const char * str	61:16:1421:1435	4159558	0	True				
ANR	4159611	ParameterType	const char *		4159558	0					
ANR	4159612	Identifier	str		4159558	1					
ANR	4159613	CFGEntryNode	ENTRY		4159558		True				
ANR	4159614	CFGExitNode	EXIT		4159558		True				
ANR	4159615	Symbol	str		4159558						
ANR	4159616	Symbol	strlen		4159558						
ANR	4159617	Symbol	data		4159558						
ANR	4159618	Symbol	cur_size		4159558						
ANR	4159619	Symbol	* cur_size		4159558						
ANR	4159620	Symbol	* data		4159558						
ANR	4159621	Symbol	max_size		4159558						
ANR	4159622	Function	StrVector :: Get	71:0:1601:1711							
ANR	4159623	FunctionDef	StrVector :: Get (int idx)		4159622	0					
ANR	4159624	CompoundStatement		73:0:1634:1711	4159622	0					
ANR	4159625	IfStatement	if ( idx >= cur_size )		4159622	0					
ANR	4159626	Condition	idx >= cur_size	74:5:1641:1655	4159622	0	True				
ANR	4159627	RelationalExpression	idx >= cur_size		4159622	0		>=			
ANR	4159628	Identifier	idx		4159622	0					
ANR	4159629	Identifier	cur_size		4159622	1					
ANR	4159630	CompoundStatement		2:23:24:24	4159622	1					
ANR	4159631	ReturnStatement	return NULL ;	75:2:1663:1674	4159622	0	True				
ANR	4159632	Identifier	NULL		4159622	0					
ANR	4159633	ElseStatement	else		4159622	0					
ANR	4159634	CompoundStatement		4:8:49:49	4159622	0					
ANR	4159635	ReturnStatement	return data [ idx ] ;	77:2:1688:1706	4159622	0	True				
ANR	4159636	ArrayIndexing	data [ idx ]		4159622	0					
ANR	4159637	Identifier	data		4159622	0					
ANR	4159638	Identifier	idx		4159622	1					
ANR	4159639	ReturnType	char *		4159622	1					
ANR	4159640	Identifier	StrVector :: Get		4159622	2					
ANR	4159641	ParameterList	int idx		4159622	3					
ANR	4159642	Parameter	int idx	72:16:1624:1630	4159622	0	True				
ANR	4159643	ParameterType	int		4159622	0					
ANR	4159644	Identifier	idx		4159622	1					
ANR	4159645	CFGEntryNode	ENTRY		4159622		True				
ANR	4159646	CFGExitNode	EXIT		4159622		True				
ANR	4159647	Symbol	NULL		4159622						
ANR	4159648	Symbol	data		4159622						
ANR	4159649	Symbol	cur_size		4159622						
ANR	4159650	Symbol	* idx		4159622						
ANR	4159651	Symbol	idx		4159622						
ANR	4159652	Symbol	* data		4159622						
ANR	4159653	DeclStmt									
ANR	4159654	Decl							StrVector	StrVector	SaveEnv
ANR	4159655	DeclStmt									
ANR	4159656	Decl							StrVector	StrVector	SaveArgs
ANR	4159657	DeclStmt									
ANR	4159658	Decl							void	"void ( char * * vec , StrVector & saved , const char * name )"	check_vector
ANR	4159659	Function	main	89:0:1905:2709							
ANR	4159660	FunctionDef	"main (int argc , char * argv [ ])"		4159659	0					
ANR	4159661	CompoundStatement		91:0:1940:2709	4159659	0					
ANR	4159662	IdentifierDeclStatement	int i ;	92:1:1943:1949	4159659	0	True				
ANR	4159663	IdentifierDecl	i		4159659	0					
ANR	4159664	IdentifierDeclType	int		4159659	0					
ANR	4159665	Identifier	i		4159659	1					
ANR	4159666	ExpressionStatement	SaveEnv . Init ( 256 )	94:1:1953:1972	4159659	1	True				
ANR	4159667	CallExpression	SaveEnv . Init ( 256 )		4159659	0					
ANR	4159668	Callee	SaveEnv . Init		4159659	0					
ANR	4159669	MemberAccess	SaveEnv . Init		4159659	0					
ANR	4159670	Identifier	SaveEnv		4159659	0					
ANR	4159671	Identifier	Init		4159659	1					
ANR	4159672	ArgumentList	256		4159659	1					
ANR	4159673	Argument	256		4159659	0					
ANR	4159674	PrimaryExpression	256		4159659	0					
ANR	4159675	ExpressionStatement	SaveArgs . Init ( 256 )	95:1:1975:1995	4159659	2	True				
ANR	4159676	CallExpression	SaveArgs . Init ( 256 )		4159659	0					
ANR	4159677	Callee	SaveArgs . Init		4159659	0					
ANR	4159678	MemberAccess	SaveArgs . Init		4159659	0					
ANR	4159679	Identifier	SaveArgs		4159659	0					
ANR	4159680	Identifier	Init		4159659	1					
ANR	4159681	ArgumentList	256		4159659	1					
ANR	4159682	Argument	256		4159659	0					
ANR	4159683	PrimaryExpression	256		4159659	0					
ANR	4159684	ForStatement	for ( i = 0 ; environ [ i ] ; i ++ )		4159659	3					
ANR	4159685	ForInit	i = 0 ;	97:6:2004:2007	4159659	0	True				
ANR	4159686	AssignmentExpression	i = 0		4159659	0		=			
ANR	4159687	Identifier	i		4159659	0					
ANR	4159688	PrimaryExpression	0		4159659	1					
ANR	4159689	Condition	environ [ i ]	97:11:2009:2018	4159659	1	True				
ANR	4159690	ArrayIndexing	environ [ i ]		4159659	0					
ANR	4159691	Identifier	environ		4159659	0					
ANR	4159692	Identifier	i		4159659	1					
ANR	4159693	PostIncDecOperationExpression	i ++	97:23:2021:2023	4159659	2	True				
ANR	4159694	Identifier	i		4159659	0					
ANR	4159695	IncDec	++		4159659	1					
ANR	4159696	CompoundStatement		7:29:86:86	4159659	3					
ANR	4159697	ExpressionStatement	SaveEnv . Add ( environ [ i ] )	98:2:2031:2056	4159659	0	True				
ANR	4159698	CallExpression	SaveEnv . Add ( environ [ i ] )		4159659	0					
ANR	4159699	Callee	SaveEnv . Add		4159659	0					
ANR	4159700	MemberAccess	SaveEnv . Add		4159659	0					
ANR	4159701	Identifier	SaveEnv		4159659	0					
ANR	4159702	Identifier	Add		4159659	1					
ANR	4159703	ArgumentList	environ [ i ]		4159659	1					
ANR	4159704	Argument	environ [ i ]		4159659	0					
ANR	4159705	ArrayIndexing	environ [ i ]		4159659	0					
ANR	4159706	Identifier	environ		4159659	0					
ANR	4159707	Identifier	i		4159659	1					
ANR	4159708	ExpressionStatement	"printf ( ""environ[%d] = \\""%s\\""\\n"" , i , environ [ i ] )"	99:2:2060:2109	4159659	1	True				
ANR	4159709	CallExpression	"printf ( ""environ[%d] = \\""%s\\""\\n"" , i , environ [ i ] )"		4159659	0					
ANR	4159710	Callee	printf		4159659	0					
ANR	4159711	Identifier	printf		4159659	0					
ANR	4159712	ArgumentList	"""environ[%d] = \\""%s\\""\\n"""		4159659	1					
ANR	4159713	Argument	"""environ[%d] = \\""%s\\""\\n"""		4159659	0					
ANR	4159714	PrimaryExpression	"""environ[%d] = \\""%s\\""\\n"""		4159659	0					
ANR	4159715	Argument	i		4159659	1					
ANR	4159716	Identifier	i		4159659	0					
ANR	4159717	Argument	environ [ i ]		4159659	2					
ANR	4159718	ArrayIndexing	environ [ i ]		4159659	0					
ANR	4159719	Identifier	environ		4159659	0					
ANR	4159720	Identifier	i		4159659	1					
ANR	4159721	ForStatement	for ( i = 0 ; i < argc ; i ++ )		4159659	4					
ANR	4159722	ForInit	i = 0 ;	102:6:2121:2124	4159659	0	True				
ANR	4159723	AssignmentExpression	i = 0		4159659	0		=			
ANR	4159724	Identifier	i		4159659	0					
ANR	4159725	PrimaryExpression	0		4159659	1					
ANR	4159726	Condition	i < argc	102:11:2126:2131	4159659	1	True				
ANR	4159727	RelationalExpression	i < argc		4159659	0		<			
ANR	4159728	Identifier	i		4159659	0					
ANR	4159729	Identifier	argc		4159659	1					
ANR	4159730	PostIncDecOperationExpression	i ++	102:19:2134:2136	4159659	2	True				
ANR	4159731	Identifier	i		4159659	0					
ANR	4159732	IncDec	++		4159659	1					
ANR	4159733	CompoundStatement		12:25:199:199	4159659	3					
ANR	4159734	ExpressionStatement	SaveArgs . Add ( argv [ i ] )	103:2:2144:2167	4159659	0	True				
ANR	4159735	CallExpression	SaveArgs . Add ( argv [ i ] )		4159659	0					
ANR	4159736	Callee	SaveArgs . Add		4159659	0					
ANR	4159737	MemberAccess	SaveArgs . Add		4159659	0					
ANR	4159738	Identifier	SaveArgs		4159659	0					
ANR	4159739	Identifier	Add		4159659	1					
ANR	4159740	ArgumentList	argv [ i ]		4159659	1					
ANR	4159741	Argument	argv [ i ]		4159659	0					
ANR	4159742	ArrayIndexing	argv [ i ]		4159659	0					
ANR	4159743	Identifier	argv		4159659	0					
ANR	4159744	Identifier	i		4159659	1					
ANR	4159745	ExpressionStatement	"printf ( ""argv[%d] = \\""%s\\""\\n"" , i , argv [ i ] )"	104:2:2171:2214	4159659	1	True				
ANR	4159746	CallExpression	"printf ( ""argv[%d] = \\""%s\\""\\n"" , i , argv [ i ] )"		4159659	0					
ANR	4159747	Callee	printf		4159659	0					
ANR	4159748	Identifier	printf		4159659	0					
ANR	4159749	ArgumentList	"""argv[%d] = \\""%s\\""\\n"""		4159659	1					
ANR	4159750	Argument	"""argv[%d] = \\""%s\\""\\n"""		4159659	0					
ANR	4159751	PrimaryExpression	"""argv[%d] = \\""%s\\""\\n"""		4159659	0					
ANR	4159752	Argument	i		4159659	1					
ANR	4159753	Identifier	i		4159659	0					
ANR	4159754	Argument	argv [ i ]		4159659	2					
ANR	4159755	ArrayIndexing	argv [ i ]		4159659	0					
ANR	4159756	Identifier	argv		4159659	0					
ANR	4159757	Identifier	i		4159659	1					
ANR	4159758	ExpressionStatement	"printf ( ""\\n"" )"	106:1:2220:2234	4159659	5	True				
ANR	4159759	CallExpression	"printf ( ""\\n"" )"		4159659	0					
ANR	4159760	Callee	printf		4159659	0					
ANR	4159761	Identifier	printf		4159659	0					
ANR	4159762	ArgumentList	"""\\n"""		4159659	1					
ANR	4159763	Argument	"""\\n"""		4159659	0					
ANR	4159764	PrimaryExpression	"""\\n"""		4159659	0					
ANR	4159765	ExpressionStatement	"check_vector ( environ , SaveEnv , ""Environment"" )"	108:1:2238:2285	4159659	6	True				
ANR	4159766	CallExpression	"check_vector ( environ , SaveEnv , ""Environment"" )"		4159659	0					
ANR	4159767	Callee	check_vector		4159659	0					
ANR	4159768	Identifier	check_vector		4159659	0					
ANR	4159769	ArgumentList	environ		4159659	1					
ANR	4159770	Argument	environ		4159659	0					
ANR	4159771	Identifier	environ		4159659	0					
ANR	4159772	Argument	SaveEnv		4159659	1					
ANR	4159773	Identifier	SaveEnv		4159659	0					
ANR	4159774	Argument	"""Environment"""		4159659	2					
ANR	4159775	PrimaryExpression	"""Environment"""		4159659	0					
ANR	4159776	ExpressionStatement	"check_vector ( argv , SaveArgs , ""Argument"" )"	109:1:2288:2330	4159659	7	True				
ANR	4159777	CallExpression	"check_vector ( argv , SaveArgs , ""Argument"" )"		4159659	0					
ANR	4159778	Callee	check_vector		4159659	0					
ANR	4159779	Identifier	check_vector		4159659	0					
ANR	4159780	ArgumentList	argv		4159659	1					
ANR	4159781	Argument	argv		4159659	0					
ANR	4159782	Identifier	argv		4159659	0					
ANR	4159783	Argument	SaveArgs		4159659	1					
ANR	4159784	Identifier	SaveArgs		4159659	0					
ANR	4159785	Argument	"""Argument"""		4159659	2					
ANR	4159786	PrimaryExpression	"""Argument"""		4159659	0					
ANR	4159787	ExpressionStatement	"printf ( ""\\n"" )"	110:1:2333:2347	4159659	8	True				
ANR	4159788	CallExpression	"printf ( ""\\n"" )"		4159659	0					
ANR	4159789	Callee	printf		4159659	0					
ANR	4159790	Identifier	printf		4159659	0					
ANR	4159791	ArgumentList	"""\\n"""		4159659	1					
ANR	4159792	Argument	"""\\n"""		4159659	0					
ANR	4159793	PrimaryExpression	"""\\n"""		4159659	0					
ANR	4159794	ExpressionStatement	fflush ( stdout )	112:1:2351:2367	4159659	9	True				
ANR	4159795	CallExpression	fflush ( stdout )		4159659	0					
ANR	4159796	Callee	fflush		4159659	0					
ANR	4159797	Identifier	fflush		4159659	0					
ANR	4159798	ArgumentList	stdout		4159659	1					
ANR	4159799	Argument	stdout		4159659	0					
ANR	4159800	Identifier	stdout		4159659	0					
ANR	4159801	ExpressionStatement	ckpt_and_exit ( )	113:1:2370:2385	4159659	10	True				
ANR	4159802	CallExpression	ckpt_and_exit ( )		4159659	0					
ANR	4159803	Callee	ckpt_and_exit		4159659	0					
ANR	4159804	Identifier	ckpt_and_exit		4159659	0					
ANR	4159805	ArgumentList			4159659	1					
ANR	4159806	ExpressionStatement	"check_vector ( environ , SaveEnv , ""Environment"" )"	115:1:2389:2436	4159659	11	True				
ANR	4159807	CallExpression	"check_vector ( environ , SaveEnv , ""Environment"" )"		4159659	0					
ANR	4159808	Callee	check_vector		4159659	0					
ANR	4159809	Identifier	check_vector		4159659	0					
ANR	4159810	ArgumentList	environ		4159659	1					
ANR	4159811	Argument	environ		4159659	0					
ANR	4159812	Identifier	environ		4159659	0					
ANR	4159813	Argument	SaveEnv		4159659	1					
ANR	4159814	Identifier	SaveEnv		4159659	0					
ANR	4159815	Argument	"""Environment"""		4159659	2					
ANR	4159816	PrimaryExpression	"""Environment"""		4159659	0					
ANR	4159817	ExpressionStatement	"check_vector ( argv , SaveArgs , ""Argument"" )"	116:1:2439:2481	4159659	12	True				
ANR	4159818	CallExpression	"check_vector ( argv , SaveArgs , ""Argument"" )"		4159659	0					
ANR	4159819	Callee	check_vector		4159659	0					
ANR	4159820	Identifier	check_vector		4159659	0					
ANR	4159821	ArgumentList	argv		4159659	1					
ANR	4159822	Argument	argv		4159659	0					
ANR	4159823	Identifier	argv		4159659	0					
ANR	4159824	Argument	SaveArgs		4159659	1					
ANR	4159825	Identifier	SaveArgs		4159659	0					
ANR	4159826	Argument	"""Argument"""		4159659	2					
ANR	4159827	PrimaryExpression	"""Argument"""		4159659	0					
ANR	4159828	ExpressionStatement	"printf ( ""\\n"" )"	117:1:2484:2498	4159659	13	True				
ANR	4159829	CallExpression	"printf ( ""\\n"" )"		4159659	0					
ANR	4159830	Callee	printf		4159659	0					
ANR	4159831	Identifier	printf		4159659	0					
ANR	4159832	ArgumentList	"""\\n"""		4159659	1					
ANR	4159833	Argument	"""\\n"""		4159659	0					
ANR	4159834	PrimaryExpression	"""\\n"""		4159659	0					
ANR	4159835	ExpressionStatement	fflush ( stdout )	119:1:2502:2518	4159659	14	True				
ANR	4159836	CallExpression	fflush ( stdout )		4159659	0					
ANR	4159837	Callee	fflush		4159659	0					
ANR	4159838	Identifier	fflush		4159659	0					
ANR	4159839	ArgumentList	stdout		4159659	1					
ANR	4159840	Argument	stdout		4159659	0					
ANR	4159841	Identifier	stdout		4159659	0					
ANR	4159842	ExpressionStatement	ckpt_and_exit ( )	120:1:2521:2536	4159659	15	True				
ANR	4159843	CallExpression	ckpt_and_exit ( )		4159659	0					
ANR	4159844	Callee	ckpt_and_exit		4159659	0					
ANR	4159845	Identifier	ckpt_and_exit		4159659	0					
ANR	4159846	ArgumentList			4159659	1					
ANR	4159847	ExpressionStatement	"check_vector ( environ , SaveEnv , ""Environment"" )"	122:1:2540:2587	4159659	16	True				
ANR	4159848	CallExpression	"check_vector ( environ , SaveEnv , ""Environment"" )"		4159659	0					
ANR	4159849	Callee	check_vector		4159659	0					
ANR	4159850	Identifier	check_vector		4159659	0					
ANR	4159851	ArgumentList	environ		4159659	1					
ANR	4159852	Argument	environ		4159659	0					
ANR	4159853	Identifier	environ		4159659	0					
ANR	4159854	Argument	SaveEnv		4159659	1					
ANR	4159855	Identifier	SaveEnv		4159659	0					
ANR	4159856	Argument	"""Environment"""		4159659	2					
ANR	4159857	PrimaryExpression	"""Environment"""		4159659	0					
ANR	4159858	ExpressionStatement	"check_vector ( argv , SaveArgs , ""Argument"" )"	123:1:2590:2632	4159659	17	True				
ANR	4159859	CallExpression	"check_vector ( argv , SaveArgs , ""Argument"" )"		4159659	0					
ANR	4159860	Callee	check_vector		4159659	0					
ANR	4159861	Identifier	check_vector		4159659	0					
ANR	4159862	ArgumentList	argv		4159659	1					
ANR	4159863	Argument	argv		4159659	0					
ANR	4159864	Identifier	argv		4159659	0					
ANR	4159865	Argument	SaveArgs		4159659	1					
ANR	4159866	Identifier	SaveArgs		4159659	0					
ANR	4159867	Argument	"""Argument"""		4159659	2					
ANR	4159868	PrimaryExpression	"""Argument"""		4159659	0					
ANR	4159869	ExpressionStatement	"printf ( ""\\n"" )"	124:1:2635:2649	4159659	18	True				
ANR	4159870	CallExpression	"printf ( ""\\n"" )"		4159659	0					
ANR	4159871	Callee	printf		4159659	0					
ANR	4159872	Identifier	printf		4159659	0					
ANR	4159873	ArgumentList	"""\\n"""		4159659	1					
ANR	4159874	Argument	"""\\n"""		4159659	0					
ANR	4159875	PrimaryExpression	"""\\n"""		4159659	0					
ANR	4159876	ExpressionStatement	"printf ( ""Normal End Of Job\\n"" )"	126:1:2653:2683	4159659	19	True				
ANR	4159877	CallExpression	"printf ( ""Normal End Of Job\\n"" )"		4159659	0					
ANR	4159878	Callee	printf		4159659	0					
ANR	4159879	Identifier	printf		4159659	0					
ANR	4159880	ArgumentList	"""Normal End Of Job\\n"""		4159659	1					
ANR	4159881	Argument	"""Normal End Of Job\\n"""		4159659	0					
ANR	4159882	PrimaryExpression	"""Normal End Of Job\\n"""		4159659	0					
ANR	4159883	ExpressionStatement	exit ( 0 )	128:1:2687:2696	4159659	20	True				
ANR	4159884	CallExpression	exit ( 0 )		4159659	0					
ANR	4159885	Callee	exit		4159659	0					
ANR	4159886	Identifier	exit		4159659	0					
ANR	4159887	ArgumentList	0		4159659	1					
ANR	4159888	Argument	0		4159659	0					
ANR	4159889	PrimaryExpression	0		4159659	0					
ANR	4159890	ReturnStatement	return 0 ;	129:1:2699:2707	4159659	21	True				
ANR	4159891	PrimaryExpression	0		4159659	0					
ANR	4159892	ReturnType	int		4159659	1					
ANR	4159893	Identifier	main		4159659	2					
ANR	4159894	ParameterList	"int argc , char * argv [ ]"		4159659	3					
ANR	4159895	Parameter	int argc	90:6:1915:1922	4159659	0	True				
ANR	4159896	ParameterType	int		4159659	0					
ANR	4159897	Identifier	argc		4159659	1					
ANR	4159898	Parameter	char * argv [ ]	90:16:1925:1936	4159659	1	True				
ANR	4159899	ParameterType	char * [ ]		4159659	0					
ANR	4159900	Identifier	argv		4159659	1					
ANR	4159901	CFGEntryNode	ENTRY		4159659		True				
ANR	4159902	CFGExitNode	EXIT		4159659		True				
ANR	4159903	Symbol	argc		4159659						
ANR	4159904	Symbol	SaveArgs		4159659						
ANR	4159905	Symbol	* i		4159659						
ANR	4159906	Symbol	stdout		4159659						
ANR	4159907	Symbol	* environ		4159659						
ANR	4159908	Symbol	i		4159659						
ANR	4159909	Symbol	SaveEnv		4159659						
ANR	4159910	Symbol	* argv		4159659						
ANR	4159911	Symbol	argv		4159659						
ANR	4159912	Symbol	environ		4159659						
ANR	4159913	Function	check_vector	132:0:2712:2979							
ANR	4159914	FunctionDef	"check_vector (char * * vec , StrVector & saved , const char * name)"		4159913	0					
ANR	4159915	CompoundStatement		134:0:2780:2979	4159913	0					
ANR	4159916	IdentifierDeclStatement	int i ;	135:1:2783:2789	4159913	0	True				
ANR	4159917	IdentifierDecl	i		4159913	0					
ANR	4159918	IdentifierDeclType	int		4159913	0					
ANR	4159919	Identifier	i		4159913	1					
ANR	4159920	IdentifierDeclStatement	"char * s1 , * s2 ;"	136:1:2792:2805	4159913	1	True				
ANR	4159921	IdentifierDecl	* s1		4159913	0					
ANR	4159922	IdentifierDeclType	char *		4159913	0					
ANR	4159923	Identifier	s1		4159913	1					
ANR	4159924	IdentifierDecl	* s2		4159913	1					
ANR	4159925	IdentifierDeclType	char *		4159913	0					
ANR	4159926	Identifier	s2		4159913	1					
ANR	4159927	ForStatement	for ( i = 0 ; vec [ i ] ; i ++ )		4159913	2					
ANR	4159928	ForInit	i = 0 ;	138:6:2814:2817	4159913	0	True				
ANR	4159929	AssignmentExpression	i = 0		4159913	0		=			
ANR	4159930	Identifier	i		4159913	0					
ANR	4159931	PrimaryExpression	0		4159913	1					
ANR	4159932	Condition	vec [ i ]	138:11:2819:2824	4159913	1	True				
ANR	4159933	ArrayIndexing	vec [ i ]		4159913	0					
ANR	4159934	Identifier	vec		4159913	0					
ANR	4159935	Identifier	i		4159913	1					
ANR	4159936	PostIncDecOperationExpression	i ++	138:19:2827:2829	4159913	2	True				
ANR	4159937	Identifier	i		4159913	0					
ANR	4159938	IncDec	++		4159913	1					
ANR	4159939	CompoundStatement		5:25:52:52	4159913	3					
ANR	4159940	ExpressionStatement	s1 = saved . Get ( i )	139:2:2837:2854	4159913	0	True				
ANR	4159941	AssignmentExpression	s1 = saved . Get ( i )		4159913	0		=			
ANR	4159942	Identifier	s1		4159913	0					
ANR	4159943	CallExpression	saved . Get ( i )		4159913	1					
ANR	4159944	Callee	saved . Get		4159913	0					
ANR	4159945	MemberAccess	saved . Get		4159913	0					
ANR	4159946	Identifier	saved		4159913	0					
ANR	4159947	Identifier	Get		4159913	1					
ANR	4159948	ArgumentList	i		4159913	1					
ANR	4159949	Argument	i		4159913	0					
ANR	4159950	Identifier	i		4159913	0					
ANR	4159951	ExpressionStatement	s2 = vec [ i ]	140:2:2858:2869	4159913	1	True				
ANR	4159952	AssignmentExpression	s2 = vec [ i ]		4159913	0		=			
ANR	4159953	Identifier	s2		4159913	0					
ANR	4159954	ArrayIndexing	vec [ i ]		4159913	1					
ANR	4159955	Identifier	vec		4159913	0					
ANR	4159956	Identifier	i		4159913	1					
ANR	4159957	ExpressionStatement	"assert ( strcmp ( s1 , s2 ) == MATCH )"	141:2:2873:2905	4159913	2	True				
ANR	4159958	CallExpression	"assert ( strcmp ( s1 , s2 ) == MATCH )"		4159913	0					
ANR	4159959	Callee	assert		4159913	0					
ANR	4159960	Identifier	assert		4159913	0					
ANR	4159961	ArgumentList	"strcmp ( s1 , s2 ) == MATCH"		4159913	1					
ANR	4159962	Argument	"strcmp ( s1 , s2 ) == MATCH"		4159913	0					
ANR	4159963	EqualityExpression	"strcmp ( s1 , s2 ) == MATCH"		4159913	0		==			
ANR	4159964	CallExpression	"strcmp ( s1 , s2 )"		4159913	0					
ANR	4159965	Callee	strcmp		4159913	0					
ANR	4159966	Identifier	strcmp		4159913	0					
ANR	4159967	ArgumentList	s1		4159913	1					
ANR	4159968	Argument	s1		4159913	0					
ANR	4159969	Identifier	s1		4159913	0					
ANR	4159970	Argument	s2		4159913	1					
ANR	4159971	Identifier	s2		4159913	0					
ANR	4159972	Identifier	MATCH		4159913	1					
ANR	4159973	ExpressionStatement	assert ( saved . Get ( i ) == NULL )	143:1:2911:2941	4159913	3	True				
ANR	4159974	CallExpression	assert ( saved . Get ( i ) == NULL )		4159913	0					
ANR	4159975	Callee	assert		4159913	0					
ANR	4159976	Identifier	assert		4159913	0					
ANR	4159977	ArgumentList	saved . Get ( i ) == NULL		4159913	1					
ANR	4159978	Argument	saved . Get ( i ) == NULL		4159913	0					
ANR	4159979	EqualityExpression	saved . Get ( i ) == NULL		4159913	0		==			
ANR	4159980	CallExpression	saved . Get ( i )		4159913	0					
ANR	4159981	Callee	saved . Get		4159913	0					
ANR	4159982	MemberAccess	saved . Get		4159913	0					
ANR	4159983	Identifier	saved		4159913	0					
ANR	4159984	Identifier	Get		4159913	1					
ANR	4159985	ArgumentList	i		4159913	1					
ANR	4159986	Argument	i		4159913	0					
ANR	4159987	Identifier	i		4159913	0					
ANR	4159988	Identifier	NULL		4159913	1					
ANR	4159989	ExpressionStatement	"printf ( ""%s vector OK\\n"" , name )"	145:1:2945:2977	4159913	4	True				
ANR	4159990	CallExpression	"printf ( ""%s vector OK\\n"" , name )"		4159913	0					
ANR	4159991	Callee	printf		4159913	0					
ANR	4159992	Identifier	printf		4159913	0					
ANR	4159993	ArgumentList	"""%s vector OK\\n"""		4159913	1					
ANR	4159994	Argument	"""%s vector OK\\n"""		4159913	0					
ANR	4159995	PrimaryExpression	"""%s vector OK\\n"""		4159913	0					
ANR	4159996	Argument	name		4159913	1					
ANR	4159997	Identifier	name		4159913	0					
ANR	4159998	ReturnType	void		4159913	1					
ANR	4159999	Identifier	check_vector		4159913	2					
ANR	4160000	ParameterList	"char * * vec , StrVector & saved , const char * name"		4159913	3					
ANR	4160001	Parameter	char * * vec	133:14:2731:2740	4159913	0	True				
ANR	4160002	ParameterType	char * *		4159913	0					
ANR	4160003	Identifier	vec		4159913	1					
ANR	4160004	Parameter	StrVector & saved	133:26:2743:2758	4159913	1	True				
ANR	4160005	ParameterType	StrVector &		4159913	0					
ANR	4160006	Identifier	saved		4159913	1					
ANR	4160007	Parameter	const char * name	133:44:2761:2776	4159913	2	True				
ANR	4160008	ParameterType	const char *		4159913	0					
ANR	4160009	Identifier	name		4159913	1					
ANR	4160010	CFGEntryNode	ENTRY		4159913		True				
ANR	4160011	CFGExitNode	EXIT		4159913		True				
ANR	4160012	Symbol	strcmp		4159913						
ANR	4160013	Symbol	* i		4159913						
ANR	4160014	Symbol	NULL		4159913						
ANR	4160015	Symbol	vec		4159913						
ANR	4160016	Symbol	saved		4159913						
ANR	4160017	Symbol	name		4159913						
ANR	4160018	Symbol	i		4159913						
ANR	4160019	Symbol	s1		4159913						
ANR	4160020	Symbol	* vec		4159913						
ANR	4160021	Symbol	MATCH		4159913						
ANR	4160022	Symbol	s2		4159913						
ANR	4160023	Symbol	saved . Get		4159913						
