command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4880763	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_setenv.cpp								
ANR	4880764	DeclStmt									
ANR	4880765	Decl							extern DLL_IMPORT_MAGIC char	extern DLL_IMPORT_MAGIC char * *	environ
ANR	4880766	DeclStmt									
ANR	4880767	Decl							"HashTable < HashKey , char * >"	"HashTable < HashKey , char * > ( HASH_TABLE_SIZE , hashFunction )"	EnvVars
ANR	4880768	Function	GetEnviron	48:0:1485:1583							
ANR	4880769	FunctionDef	GetEnviron ()		4880768	0					
ANR	4880770	CompoundStatement		49:0:1505:1583	4880768	0					
ANR	4880771	ReturnStatement	return * _NSGetEnviron ( ) ;	51:1:1528:1551	4880768	0	True				
ANR	4880772	UnaryOperationExpression	* _NSGetEnviron ( )		4880768	0					
ANR	4880773	UnaryOperator	*		4880768	0					
ANR	4880774	CallExpression	_NSGetEnviron ( )		4880768	1					
ANR	4880775	Callee	_NSGetEnviron		4880768	0					
ANR	4880776	Identifier	_NSGetEnviron		4880768	0					
ANR	4880777	ArgumentList			4880768	1					
ANR	4880778	ReturnType	char * *		4880768	1					
ANR	4880779	Identifier	GetEnviron		4880768	2					
ANR	4880780	ParameterList			4880768	3					
ANR	4880781	CFGEntryNode	ENTRY		4880768		True				
ANR	4880782	CFGExitNode	EXIT		4880768		True				
ANR	4880783	Symbol	* _NSGetEnviron		4880768						
ANR	4880784	Symbol	* _NSGetEnviron ( )		4880768						
ANR	4880785	Symbol	_NSGetEnviron		4880768						
ANR	4880786	Function	SetEnv	57:0:1586:2488							
ANR	4880787	FunctionDef	"SetEnv (const char * key , const char * value)"		4880786	0					
ANR	4880788	CompoundStatement		58:0:1634:2488	4880786	0					
ANR	4880789	ExpressionStatement	assert ( key )	59:1:1637:1648	4880786	0	True				
ANR	4880790	CallExpression	assert ( key )		4880786	0					
ANR	4880791	Callee	assert		4880786	0					
ANR	4880792	Identifier	assert		4880786	0					
ANR	4880793	ArgumentList	key		4880786	1					
ANR	4880794	Argument	key		4880786	0					
ANR	4880795	Identifier	key		4880786	0					
ANR	4880796	ExpressionStatement	assert ( value )	60:1:1651:1664	4880786	1	True				
ANR	4880797	CallExpression	assert ( value )		4880786	0					
ANR	4880798	Callee	assert		4880786	0					
ANR	4880799	Identifier	assert		4880786	0					
ANR	4880800	ArgumentList	value		4880786	1					
ANR	4880801	Argument	value		4880786	0					
ANR	4880802	Identifier	value		4880786	0					
ANR	4880803	IfStatement	"if ( ! SetEnvironmentVariable ( key , value ) )"		4880786	2					
ANR	4880804	Condition	"! SetEnvironmentVariable ( key , value )"	62:6:1685:1719	4880786	0	True				
ANR	4880805	UnaryOperationExpression	"! SetEnvironmentVariable ( key , value )"		4880786	0					
ANR	4880806	UnaryOperator	!		4880786	0					
ANR	4880807	CallExpression	"SetEnvironmentVariable ( key , value )"		4880786	1					
ANR	4880808	Callee	SetEnvironmentVariable		4880786	0					
ANR	4880809	Identifier	SetEnvironmentVariable		4880786	0					
ANR	4880810	ArgumentList	key		4880786	1					
ANR	4880811	Argument	key		4880786	0					
ANR	4880812	Identifier	key		4880786	0					
ANR	4880813	Argument	value		4880786	1					
ANR	4880814	Identifier	value		4880786	0					
ANR	4880815	CompoundStatement		5:44:88:88	4880786	1					
ANR	4880816	Statement	dprintf	63:2:1727:1733	4880786	0	True				
ANR	4880817	Statement	(	63:9:1734:1734	4880786	1	True				
ANR	4880818	Statement	D_ALWAYS	63:10:1735:1742	4880786	2	True				
ANR	4880819	Statement	","	63:18:1743:1743	4880786	3	True				
ANR	4880820	Statement	"""SetEnv(%s, %s): SetEnvironmentVariable failed, """	64:3:1748:1796	4880786	4	True				
ANR	4880821	Statement	"""errno=%d\\n"""	65:3:1801:1812	4880786	5	True				
ANR	4880822	Statement	","	65:15:1813:1813	4880786	6	True				
ANR	4880823	Statement	key	65:17:1815:1817	4880786	7	True				
ANR	4880824	Statement	","	65:20:1818:1818	4880786	8	True				
ANR	4880825	Statement	value	65:22:1820:1824	4880786	9	True				
ANR	4880826	Statement	","	65:27:1825:1825	4880786	10	True				
ANR	4880827	Statement	GetLastError	65:29:1827:1838	4880786	11	True				
ANR	4880828	Statement	(	65:41:1839:1839	4880786	12	True				
ANR	4880829	Statement	)	65:42:1840:1840	4880786	13	True				
ANR	4880830	Statement	)	65:43:1841:1841	4880786	14	True				
ANR	4880831	ExpressionStatement		65:44:1842:1842	4880786	15	True				
ANR	4880832	ReturnStatement	return FALSE ;	66:2:1846:1858	4880786	16	True				
ANR	4880833	Identifier	FALSE		4880786	0					
ANR	4880834	ReturnStatement	return TRUE ;	95:1:2475:2486	4880786	3	True				
ANR	4880835	Identifier	TRUE		4880786	0					
ANR	4880836	ReturnType	int		4880786	1					
ANR	4880837	Identifier	SetEnv		4880786	2					
ANR	4880838	ParameterList	"const char * key , const char * value"		4880786	3					
ANR	4880839	Parameter	const char * key	57:12:1598:1612	4880786	0	True				
ANR	4880840	ParameterType	const char *		4880786	0					
ANR	4880841	Identifier	key		4880786	1					
ANR	4880842	Parameter	const char * value	57:29:1615:1631	4880786	1	True				
ANR	4880843	ParameterType	const char *		4880786	0					
ANR	4880844	Identifier	value		4880786	1					
ANR	4880845	CFGEntryNode	ENTRY		4880786		True				
ANR	4880846	CFGExitNode	EXIT		4880786		True				
ANR	4880847	Symbol	SetEnvironmentVariable		4880786						
ANR	4880848	Symbol	TRUE		4880786						
ANR	4880849	Symbol	FALSE		4880786						
ANR	4880850	Symbol	value		4880786						
ANR	4880851	Symbol	key		4880786						
ANR	4880852	Function	SetEnv	98:0:2491:3532							
ANR	4880853	FunctionDef	SetEnv (const char * env_var)		4880852	0					
ANR	4880854	CompoundStatement		99:0:2526:3532	4880852	0					
ANR	4880855	IfStatement	if ( ! env_var )		4880852	0					
ANR	4880856	Condition	! env_var	103:6:2700:2707	4880852	0	True				
ANR	4880857	UnaryOperationExpression	! env_var		4880852	0					
ANR	4880858	UnaryOperator	!		4880852	0					
ANR	4880859	Identifier	env_var		4880852	1					
ANR	4880860	CompoundStatement		5:17:184:184	4880852	1					
ANR	4880861	ExpressionStatement	"dprintf ( D_ALWAYS , ""SetEnv, env_var = NULL!\\n"" )"	104:2:2715:2763	4880852	0	True				
ANR	4880862	CallExpression	"dprintf ( D_ALWAYS , ""SetEnv, env_var = NULL!\\n"" )"		4880852	0					
ANR	4880863	Callee	dprintf		4880852	0					
ANR	4880864	Identifier	dprintf		4880852	0					
ANR	4880865	ArgumentList	D_ALWAYS		4880852	1					
ANR	4880866	Argument	D_ALWAYS		4880852	0					
ANR	4880867	Identifier	D_ALWAYS		4880852	0					
ANR	4880868	Argument	"""SetEnv, env_var = NULL!\\n"""		4880852	1					
ANR	4880869	PrimaryExpression	"""SetEnv, env_var = NULL!\\n"""		4880852	0					
ANR	4880870	ReturnStatement	return FALSE ;	105:2:2767:2779	4880852	1	True				
ANR	4880871	Identifier	FALSE		4880852	0					
ANR	4880872	IfStatement	if ( env_var [ 0 ] == 0 )		4880852	1					
ANR	4880873	Condition	env_var [ 0 ] == 0	109:6:2854:2868	4880852	0	True				
ANR	4880874	EqualityExpression	env_var [ 0 ] == 0		4880852	0		==			
ANR	4880875	ArrayIndexing	env_var [ 0 ]		4880852	0					
ANR	4880876	Identifier	env_var		4880852	0					
ANR	4880877	PrimaryExpression	0		4880852	1					
ANR	4880878	PrimaryExpression	0		4880852	1					
ANR	4880879	CompoundStatement		11:24:345:345	4880852	1					
ANR	4880880	ReturnStatement	return TRUE ;	110:2:2876:2887	4880852	0	True				
ANR	4880881	Identifier	TRUE		4880852	0					
ANR	4880882	IdentifierDeclStatement	char const * equalpos = NULL ;	113:1:2894:2921	4880852	2	True				
ANR	4880883	IdentifierDecl	* equalpos = NULL		4880852	0					
ANR	4880884	IdentifierDeclType	char const *		4880852	0					
ANR	4880885	Identifier	equalpos		4880852	1					
ANR	4880886	AssignmentExpression	* equalpos = NULL		4880852	2		=			
ANR	4880887	Identifier	NULL		4880852	0					
ANR	4880888	Identifier	NULL		4880852	1					
ANR	4880889	IfStatement	"if ( ! ( equalpos = strchr ( env_var , '=' ) ) )"		4880852	3					
ANR	4880890	Condition	"! ( equalpos = strchr ( env_var , '=' ) )"	115:6:2930:2966	4880852	0	True				
ANR	4880891	UnaryOperationExpression	"! ( equalpos = strchr ( env_var , '=' ) )"		4880852	0					
ANR	4880892	UnaryOperator	!		4880852	0					
ANR	4880893	AssignmentExpression	"equalpos = strchr ( env_var , '=' )"		4880852	1		=			
ANR	4880894	Identifier	equalpos		4880852	0					
ANR	4880895	CallExpression	"strchr ( env_var , '=' )"		4880852	1					
ANR	4880896	Callee	strchr		4880852	0					
ANR	4880897	Identifier	strchr		4880852	0					
ANR	4880898	ArgumentList	env_var		4880852	1					
ANR	4880899	Argument	env_var		4880852	0					
ANR	4880900	Identifier	env_var		4880852	0					
ANR	4880901	Argument	'='		4880852	1					
ANR	4880902	PrimaryExpression	'='		4880852	0					
ANR	4880903	CompoundStatement		17:46:443:443	4880852	1					
ANR	4880904	ExpressionStatement	"dprintf ( D_ALWAYS , ""SetEnv, env_var has no '='\\n"" )"	116:2:2974:3025	4880852	0	True				
ANR	4880905	CallExpression	"dprintf ( D_ALWAYS , ""SetEnv, env_var has no '='\\n"" )"		4880852	0					
ANR	4880906	Callee	dprintf		4880852	0					
ANR	4880907	Identifier	dprintf		4880852	0					
ANR	4880908	ArgumentList	D_ALWAYS		4880852	1					
ANR	4880909	Argument	D_ALWAYS		4880852	0					
ANR	4880910	Identifier	D_ALWAYS		4880852	0					
ANR	4880911	Argument	"""SetEnv, env_var has no '='\\n"""		4880852	1					
ANR	4880912	PrimaryExpression	"""SetEnv, env_var has no '='\\n"""		4880852	0					
ANR	4880913	ExpressionStatement	"dprintf ( D_ALWAYS , ""env_var = \\""%s\\""\\n"" , env_var )"	117:2:3029:3079	4880852	1	True				
ANR	4880914	CallExpression	"dprintf ( D_ALWAYS , ""env_var = \\""%s\\""\\n"" , env_var )"		4880852	0					
ANR	4880915	Callee	dprintf		4880852	0					
ANR	4880916	Identifier	dprintf		4880852	0					
ANR	4880917	ArgumentList	D_ALWAYS		4880852	1					
ANR	4880918	Argument	D_ALWAYS		4880852	0					
ANR	4880919	Identifier	D_ALWAYS		4880852	0					
ANR	4880920	Argument	"""env_var = \\""%s\\""\\n"""		4880852	1					
ANR	4880921	PrimaryExpression	"""env_var = \\""%s\\""\\n"""		4880852	0					
ANR	4880922	Argument	env_var		4880852	2					
ANR	4880923	Identifier	env_var		4880852	0					
ANR	4880924	ReturnStatement	return FALSE ;	118:2:3083:3095	4880852	2	True				
ANR	4880925	Identifier	FALSE		4880852	0					
ANR	4880926	IdentifierDeclStatement	size_t namelen = equalpos - env_var ;	122:1:3157:3192	4880852	4	True				
ANR	4880927	IdentifierDecl	namelen = equalpos - env_var		4880852	0					
ANR	4880928	IdentifierDeclType	size_t		4880852	0					
ANR	4880929	Identifier	namelen		4880852	1					
ANR	4880930	AssignmentExpression	namelen = equalpos - env_var		4880852	2		=			
ANR	4880931	Identifier	namelen		4880852	0					
ANR	4880932	AdditiveExpression	equalpos - env_var		4880852	1		-			
ANR	4880933	Identifier	equalpos		4880852	0					
ANR	4880934	Identifier	env_var		4880852	1					
ANR	4880935	IdentifierDeclStatement	int valuelen = strlen ( env_var ) - namelen - 1 ;	123:1:3195:3239	4880852	5	True				
ANR	4880936	IdentifierDecl	valuelen = strlen ( env_var ) - namelen - 1		4880852	0					
ANR	4880937	IdentifierDeclType	int		4880852	0					
ANR	4880938	Identifier	valuelen		4880852	1					
ANR	4880939	AssignmentExpression	valuelen = strlen ( env_var ) - namelen - 1		4880852	2		=			
ANR	4880940	Identifier	valuelen		4880852	0					
ANR	4880941	AdditiveExpression	strlen ( env_var ) - namelen - 1		4880852	1		-			
ANR	4880942	CallExpression	strlen ( env_var )		4880852	0					
ANR	4880943	Callee	strlen		4880852	0					
ANR	4880944	Identifier	strlen		4880852	0					
ANR	4880945	ArgumentList	env_var		4880852	1					
ANR	4880946	Argument	env_var		4880852	0					
ANR	4880947	Identifier	env_var		4880852	0					
ANR	4880948	AdditiveExpression	namelen - 1		4880852	1		-			
ANR	4880949	Identifier	namelen		4880852	0					
ANR	4880950	PrimaryExpression	1		4880852	1					
ANR	4880951	IdentifierDeclStatement	char * name = new char [ namelen + 1 ] ;	125:1:3243:3275	4880852	6	True				
ANR	4880952	IdentifierDecl	* name = new char [ namelen + 1 ]		4880852	0					
ANR	4880953	IdentifierDeclType	char *		4880852	0					
ANR	4880954	Identifier	name		4880852	1					
ANR	4880955	AssignmentExpression	* name = new char [ namelen + 1 ]		4880852	2		=			
ANR	4880956	Identifier	name		4880852	0					
ANR	4880957	AdditiveExpression	namelen + 1		4880852	1		+			
ANR	4880958	Identifier	namelen		4880852	0					
ANR	4880959	PrimaryExpression	1		4880852	1					
ANR	4880960	IdentifierDeclStatement	char * value = new char [ valuelen + 1 ] ;	126:1:3278:3312	4880852	7	True				
ANR	4880961	IdentifierDecl	* value = new char [ valuelen + 1 ]		4880852	0					
ANR	4880962	IdentifierDeclType	char *		4880852	0					
ANR	4880963	Identifier	value		4880852	1					
ANR	4880964	AssignmentExpression	* value = new char [ valuelen + 1 ]		4880852	2		=			
ANR	4880965	Identifier	value		4880852	0					
ANR	4880966	AdditiveExpression	valuelen + 1		4880852	1		+			
ANR	4880967	Identifier	valuelen		4880852	0					
ANR	4880968	PrimaryExpression	1		4880852	1					
ANR	4880969	ExpressionStatement	"strncpy ( name , env_var , namelen )"	127:1:3315:3349	4880852	8	True				
ANR	4880970	CallExpression	"strncpy ( name , env_var , namelen )"		4880852	0					
ANR	4880971	Callee	strncpy		4880852	0					
ANR	4880972	Identifier	strncpy		4880852	0					
ANR	4880973	ArgumentList	name		4880852	1					
ANR	4880974	Argument	name		4880852	0					
ANR	4880975	Identifier	name		4880852	0					
ANR	4880976	Argument	env_var		4880852	1					
ANR	4880977	Identifier	env_var		4880852	0					
ANR	4880978	Argument	namelen		4880852	2					
ANR	4880979	Identifier	namelen		4880852	0					
ANR	4880980	ExpressionStatement	"strncpy ( value , equalpos + 1 , valuelen )"	128:1:3352:3391	4880852	9	True				
ANR	4880981	CallExpression	"strncpy ( value , equalpos + 1 , valuelen )"		4880852	0					
ANR	4880982	Callee	strncpy		4880852	0					
ANR	4880983	Identifier	strncpy		4880852	0					
ANR	4880984	ArgumentList	value		4880852	1					
ANR	4880985	Argument	value		4880852	0					
ANR	4880986	Identifier	value		4880852	0					
ANR	4880987	Argument	equalpos + 1		4880852	1					
ANR	4880988	AdditiveExpression	equalpos + 1		4880852	0		+			
ANR	4880989	Identifier	equalpos		4880852	0					
ANR	4880990	PrimaryExpression	1		4880852	1					
ANR	4880991	Argument	valuelen		4880852	2					
ANR	4880992	Identifier	valuelen		4880852	0					
ANR	4880993	ExpressionStatement	name [ namelen ] = '\\0'	129:1:3394:3414	4880852	10	True				
ANR	4880994	AssignmentExpression	name [ namelen ] = '\\0'		4880852	0		=			
ANR	4880995	ArrayIndexing	name [ namelen ]		4880852	0					
ANR	4880996	Identifier	name		4880852	0					
ANR	4880997	Identifier	namelen		4880852	1					
ANR	4880998	PrimaryExpression	'\\0'		4880852	1					
ANR	4880999	ExpressionStatement	value [ valuelen ] = '\\0'	130:1:3417:3439	4880852	11	True				
ANR	4881000	AssignmentExpression	value [ valuelen ] = '\\0'		4880852	0		=			
ANR	4881001	ArrayIndexing	value [ valuelen ]		4880852	0					
ANR	4881002	Identifier	value		4880852	0					
ANR	4881003	Identifier	valuelen		4880852	1					
ANR	4881004	PrimaryExpression	'\\0'		4880852	1					
ANR	4881005	IdentifierDeclStatement	"int retval = SetEnv ( name , value ) ;"	132:1:3443:3478	4880852	12	True				
ANR	4881006	IdentifierDecl	"retval = SetEnv ( name , value )"		4880852	0					
ANR	4881007	IdentifierDeclType	int		4880852	0					
ANR	4881008	Identifier	retval		4880852	1					
ANR	4881009	AssignmentExpression	"retval = SetEnv ( name , value )"		4880852	2		=			
ANR	4881010	Identifier	retval		4880852	0					
ANR	4881011	CallExpression	"SetEnv ( name , value )"		4880852	1					
ANR	4881012	Callee	SetEnv		4880852	0					
ANR	4881013	Identifier	SetEnv		4880852	0					
ANR	4881014	ArgumentList	name		4880852	1					
ANR	4881015	Argument	name		4880852	0					
ANR	4881016	Identifier	name		4880852	0					
ANR	4881017	Argument	value		4880852	1					
ANR	4881018	Identifier	value		4880852	0					
ANR	4881019	Statement	delete	134:1:3482:3487	4880852	13	True				
ANR	4881020	Statement	[	134:8:3489:3489	4880852	14	True				
ANR	4881021	Statement	]	134:9:3490:3490	4880852	15	True				
ANR	4881022	ExpressionStatement	name	134:11:3492:3496	4880852	16	True				
ANR	4881023	Identifier	name		4880852	0					
ANR	4881024	Statement	delete	135:1:3499:3504	4880852	17	True				
ANR	4881025	Statement	[	135:8:3506:3506	4880852	18	True				
ANR	4881026	Statement	]	135:9:3507:3507	4880852	19	True				
ANR	4881027	ExpressionStatement	value	135:11:3509:3514	4880852	20	True				
ANR	4881028	Identifier	value		4880852	0					
ANR	4881029	ReturnStatement	return retval ;	136:1:3517:3530	4880852	21	True				
ANR	4881030	Identifier	retval		4880852	0					
ANR	4881031	ReturnType	int		4880852	1					
ANR	4881032	Identifier	SetEnv		4880852	2					
ANR	4881033	ParameterList	const char * env_var		4880852	3					
ANR	4881034	Parameter	const char * env_var	98:12:2503:2521	4880852	0	True				
ANR	4881035	ParameterType	const char *		4880852	0					
ANR	4881036	Identifier	env_var		4880852	1					
ANR	4881037	CFGEntryNode	ENTRY		4880852		True				
ANR	4881038	CFGExitNode	EXIT		4880852		True				
ANR	4881039	Symbol	* name		4880852						
ANR	4881040	Symbol	env_var		4880852						
ANR	4881041	Symbol	NULL		4880852						
ANR	4881042	Symbol	equalpos		4880852						
ANR	4881043	Symbol	D_ALWAYS		4880852						
ANR	4881044	Symbol	* env_var		4880852						
ANR	4881045	Symbol	TRUE		4880852						
ANR	4881046	Symbol	strchr		4880852						
ANR	4881047	Symbol	namelen		4880852						
ANR	4881048	Symbol	SetEnv		4880852						
ANR	4881049	Symbol	retval		4880852						
ANR	4881050	Symbol	strlen		4880852						
ANR	4881051	Symbol	valuelen		4880852						
ANR	4881052	Symbol	* namelen		4880852						
ANR	4881053	Symbol	* value		4880852						
ANR	4881054	Symbol	* valuelen		4880852						
ANR	4881055	Symbol	name		4880852						
ANR	4881056	Symbol	FALSE		4880852						
ANR	4881057	Symbol	value		4880852						
ANR	4881058	Function	UnsetEnv	139:0:3535:4293							
ANR	4881059	FunctionDef	UnsetEnv (const char * env_var)		4881058	0					
ANR	4881060	CompoundStatement		140:0:3572:4293	4881058	0					
ANR	4881061	ExpressionStatement	assert ( env_var )	141:1:3575:3592	4881058	0	True				
ANR	4881062	CallExpression	assert ( env_var )		4881058	0					
ANR	4881063	Callee	assert		4881058	0					
ANR	4881064	Identifier	assert		4881058	0					
ANR	4881065	ArgumentList	env_var		4881058	1					
ANR	4881066	Argument	env_var		4881058	0					
ANR	4881067	Identifier	env_var		4881058	0					
ANR	4881068	IfStatement	"if ( ! SetEnvironmentVariable ( env_var , NULL ) )"		4881058	1					
ANR	4881069	Condition	"! SetEnvironmentVariable ( env_var , NULL )"	144:6:3614:3651	4881058	0	True				
ANR	4881070	UnaryOperationExpression	"! SetEnvironmentVariable ( env_var , NULL )"		4881058	0					
ANR	4881071	UnaryOperator	!		4881058	0					
ANR	4881072	CallExpression	"SetEnvironmentVariable ( env_var , NULL )"		4881058	1					
ANR	4881073	Callee	SetEnvironmentVariable		4881058	0					
ANR	4881074	Identifier	SetEnvironmentVariable		4881058	0					
ANR	4881075	ArgumentList	env_var		4881058	1					
ANR	4881076	Argument	env_var		4881058	0					
ANR	4881077	Identifier	env_var		4881058	0					
ANR	4881078	Argument	NULL		4881058	1					
ANR	4881079	Identifier	NULL		4881058	0					
ANR	4881080	CompoundStatement		5:47:82:82	4881058	1					
ANR	4881081	ExpressionStatement	"dprintf ( D_ALWAYS , ""UnsetEnv(%s): SetEnvironmentVariable failed, errno=%d\\n"" , env_var , GetLastError ( ) )"	145:2:3659:3766	4881058	0	True				
ANR	4881082	CallExpression	"dprintf ( D_ALWAYS , ""UnsetEnv(%s): SetEnvironmentVariable failed, errno=%d\\n"" , env_var , GetLastError ( ) )"		4881058	0					
ANR	4881083	Callee	dprintf		4881058	0					
ANR	4881084	Identifier	dprintf		4881058	0					
ANR	4881085	ArgumentList	D_ALWAYS		4881058	1					
ANR	4881086	Argument	D_ALWAYS		4881058	0					
ANR	4881087	Identifier	D_ALWAYS		4881058	0					
ANR	4881088	Argument	"""UnsetEnv(%s): SetEnvironmentVariable failed, errno=%d\\n"""		4881058	1					
ANR	4881089	PrimaryExpression	"""UnsetEnv(%s): SetEnvironmentVariable failed, errno=%d\\n"""		4881058	0					
ANR	4881090	Argument	env_var		4881058	2					
ANR	4881091	Identifier	env_var		4881058	0					
ANR	4881092	Argument	GetLastError ( )		4881058	3					
ANR	4881093	CallExpression	GetLastError ( )		4881058	0					
ANR	4881094	Callee	GetLastError		4881058	0					
ANR	4881095	Identifier	GetLastError		4881058	0					
ANR	4881096	ArgumentList			4881058	1					
ANR	4881097	ReturnStatement	return FALSE ;	148:2:3770:3782	4881058	1	True				
ANR	4881098	Identifier	FALSE		4881058	0					
ANR	4881099	ReturnStatement	return TRUE ;	172:1:4280:4291	4881058	2	True				
ANR	4881100	Identifier	TRUE		4881058	0					
ANR	4881101	ReturnType	int		4881058	1					
ANR	4881102	Identifier	UnsetEnv		4881058	2					
ANR	4881103	ParameterList	const char * env_var		4881058	3					
ANR	4881104	Parameter	const char * env_var	139:14:3549:3567	4881058	0	True				
ANR	4881105	ParameterType	const char *		4881058	0					
ANR	4881106	Identifier	env_var		4881058	1					
ANR	4881107	CFGEntryNode	ENTRY		4881058		True				
ANR	4881108	CFGExitNode	EXIT		4881058		True				
ANR	4881109	Symbol	SetEnvironmentVariable		4881058						
ANR	4881110	Symbol	env_var		4881058						
ANR	4881111	Symbol	NULL		4881058						
ANR	4881112	Symbol	GetLastError		4881058						
ANR	4881113	Symbol	D_ALWAYS		4881058						
ANR	4881114	Symbol	TRUE		4881058						
ANR	4881115	Symbol	FALSE		4881058						
ANR	4881116	Function	GetEnv	175:0:4296:4474							
ANR	4881117	FunctionDef	GetEnv (const char * env_var)		4881116	0					
ANR	4881118	CompoundStatement		176:0:4338:4474	4881116	0					
ANR	4881119	ExpressionStatement	assert ( env_var )	177:1:4341:4358	4881116	0	True				
ANR	4881120	CallExpression	assert ( env_var )		4881116	0					
ANR	4881121	Callee	assert		4881116	0					
ANR	4881122	Identifier	assert		4881116	0					
ANR	4881123	ArgumentList	env_var		4881116	1					
ANR	4881124	Argument	env_var		4881116	0					
ANR	4881125	Identifier	env_var		4881116	0					
ANR	4881126	Statement	static	180:1:4375:4380	4881116	1	True				
ANR	4881127	IdentifierDeclStatement	MyString result ;	180:8:4382:4397	4881116	2	True				
ANR	4881128	IdentifierDecl	result		4881116	0					
ANR	4881129	IdentifierDeclType	MyString		4881116	0					
ANR	4881130	Identifier	result		4881116	1					
ANR	4881131	ReturnStatement	"return GetEnv ( env_var , result ) ;"	181:1:4400:4432	4881116	3	True				
ANR	4881132	CallExpression	"GetEnv ( env_var , result )"		4881116	0					
ANR	4881133	Callee	GetEnv		4881116	0					
ANR	4881134	Identifier	GetEnv		4881116	0					
ANR	4881135	ArgumentList	env_var		4881116	1					
ANR	4881136	Argument	env_var		4881116	0					
ANR	4881137	Identifier	env_var		4881116	0					
ANR	4881138	Argument	result		4881116	1					
ANR	4881139	Identifier	result		4881116	0					
ANR	4881140	ReturnType	const char *		4881116	1					
ANR	4881141	Identifier	GetEnv		4881116	2					
ANR	4881142	ParameterList	const char * env_var		4881116	3					
ANR	4881143	Parameter	const char * env_var	175:20:4316:4334	4881116	0	True				
ANR	4881144	ParameterType	const char *		4881116	0					
ANR	4881145	Identifier	env_var		4881116	1					
ANR	4881146	CFGEntryNode	ENTRY		4881116		True				
ANR	4881147	CFGExitNode	EXIT		4881116		True				
ANR	4881148	Symbol	result		4881116						
ANR	4881149	Symbol	env_var		4881116						
ANR	4881150	Symbol	GetEnv		4881116						
ANR	4881151	Function	GetEnv	187:0:4477:5501							
ANR	4881152	FunctionDef	"GetEnv (const char * env_var , MyString & result)"		4881151	0					
ANR	4881153	CompoundStatement		188:0:4537:5501	4881151	0					
ANR	4881154	ExpressionStatement	assert ( env_var )	189:1:4540:4557	4881151	0	True				
ANR	4881155	CallExpression	assert ( env_var )		4881151	0					
ANR	4881156	Callee	assert		4881151	0					
ANR	4881157	Identifier	assert		4881151	0					
ANR	4881158	ArgumentList	env_var		4881151	1					
ANR	4881159	Argument	env_var		4881151	0					
ANR	4881160	Identifier	env_var		4881151	0					
ANR	4881161	IdentifierDeclStatement	DWORD rc ;	192:1:4574:4582	4881151	1	True				
ANR	4881162	IdentifierDecl	rc		4881151	0					
ANR	4881163	IdentifierDeclType	DWORD		4881151	0					
ANR	4881164	Identifier	rc		4881151	1					
ANR	4881165	IdentifierDeclStatement	int value_size = 0 ;	193:1:4585:4603	4881151	2	True				
ANR	4881166	IdentifierDecl	value_size = 0		4881151	0					
ANR	4881167	IdentifierDeclType	int		4881151	0					
ANR	4881168	Identifier	value_size		4881151	1					
ANR	4881169	AssignmentExpression	value_size = 0		4881151	2		=			
ANR	4881170	Identifier	value_size		4881151	0					
ANR	4881171	PrimaryExpression	0		4881151	1					
ANR	4881172	IdentifierDeclStatement	char * value = NULL ;	194:1:4606:4624	4881151	3	True				
ANR	4881173	IdentifierDecl	* value = NULL		4881151	0					
ANR	4881174	IdentifierDeclType	char *		4881151	0					
ANR	4881175	Identifier	value		4881151	1					
ANR	4881176	AssignmentExpression	* value = NULL		4881151	2		=			
ANR	4881177	Identifier	NULL		4881151	0					
ANR	4881178	Identifier	NULL		4881151	1					
ANR	4881179	ExpressionStatement	value_size = 1024	196:1:4628:4645	4881151	4	True				
ANR	4881180	AssignmentExpression	value_size = 1024		4881151	0		=			
ANR	4881181	Identifier	value_size		4881151	0					
ANR	4881182	PrimaryExpression	1024		4881151	1					
ANR	4881183	ExpressionStatement	value = ( char * ) malloc ( value_size )	197:1:4648:4684	4881151	5	True				
ANR	4881184	AssignmentExpression	value = ( char * ) malloc ( value_size )		4881151	0		=			
ANR	4881185	Identifier	value		4881151	0					
ANR	4881186	CastExpression	( char * ) malloc ( value_size )		4881151	1					
ANR	4881187	CastTarget	char *		4881151	0					
ANR	4881188	CallExpression	malloc ( value_size )		4881151	1					
ANR	4881189	Callee	malloc		4881151	0					
ANR	4881190	Identifier	malloc		4881151	0					
ANR	4881191	ArgumentList	value_size		4881151	1					
ANR	4881192	Argument	value_size		4881151	0					
ANR	4881193	Identifier	value_size		4881151	0					
ANR	4881194	ExpressionStatement	"rc = GetEnvironmentVariable ( env_var , value , value_size )"	199:1:4688:4745	4881151	6	True				
ANR	4881195	AssignmentExpression	"rc = GetEnvironmentVariable ( env_var , value , value_size )"		4881151	0		=			
ANR	4881196	Identifier	rc		4881151	0					
ANR	4881197	CallExpression	"GetEnvironmentVariable ( env_var , value , value_size )"		4881151	1					
ANR	4881198	Callee	GetEnvironmentVariable		4881151	0					
ANR	4881199	Identifier	GetEnvironmentVariable		4881151	0					
ANR	4881200	ArgumentList	env_var		4881151	1					
ANR	4881201	Argument	env_var		4881151	0					
ANR	4881202	Identifier	env_var		4881151	0					
ANR	4881203	Argument	value		4881151	1					
ANR	4881204	Identifier	value		4881151	0					
ANR	4881205	Argument	value_size		4881151	2					
ANR	4881206	Identifier	value_size		4881151	0					
ANR	4881207	IfStatement	if ( rc > value_size - 1 )		4881151	7					
ANR	4881208	Condition	rc > value_size - 1	200:6:4753:4771	4881151	0	True				
ANR	4881209	RelationalExpression	rc > value_size - 1		4881151	0		>			
ANR	4881210	Identifier	rc		4881151	0					
ANR	4881211	AdditiveExpression	value_size - 1		4881151	1		-			
ANR	4881212	Identifier	value_size		4881151	0					
ANR	4881213	PrimaryExpression	1		4881151	1					
ANR	4881214	CompoundStatement		13:28:237:237	4881151	1					
ANR	4881215	ExpressionStatement	free ( value )	203:2:4868:4881	4881151	0	True				
ANR	4881216	CallExpression	free ( value )		4881151	0					
ANR	4881217	Callee	free		4881151	0					
ANR	4881218	Identifier	free		4881151	0					
ANR	4881219	ArgumentList	value		4881151	1					
ANR	4881220	Argument	value		4881151	0					
ANR	4881221	Identifier	value		4881151	0					
ANR	4881222	ExpressionStatement	value_size = rc	204:2:4885:4900	4881151	1	True				
ANR	4881223	AssignmentExpression	value_size = rc		4881151	0		=			
ANR	4881224	Identifier	value_size		4881151	0					
ANR	4881225	Identifier	rc		4881151	1					
ANR	4881226	ExpressionStatement	value = ( char * ) malloc ( value_size )	205:2:4904:4940	4881151	2	True				
ANR	4881227	AssignmentExpression	value = ( char * ) malloc ( value_size )		4881151	0		=			
ANR	4881228	Identifier	value		4881151	0					
ANR	4881229	CastExpression	( char * ) malloc ( value_size )		4881151	1					
ANR	4881230	CastTarget	char *		4881151	0					
ANR	4881231	CallExpression	malloc ( value_size )		4881151	1					
ANR	4881232	Callee	malloc		4881151	0					
ANR	4881233	Identifier	malloc		4881151	0					
ANR	4881234	ArgumentList	value_size		4881151	1					
ANR	4881235	Argument	value_size		4881151	0					
ANR	4881236	Identifier	value_size		4881151	0					
ANR	4881237	ExpressionStatement	"rc = GetEnvironmentVariable ( env_var , value , value_size )"	206:2:4944:5001	4881151	3	True				
ANR	4881238	AssignmentExpression	"rc = GetEnvironmentVariable ( env_var , value , value_size )"		4881151	0		=			
ANR	4881239	Identifier	rc		4881151	0					
ANR	4881240	CallExpression	"GetEnvironmentVariable ( env_var , value , value_size )"		4881151	1					
ANR	4881241	Callee	GetEnvironmentVariable		4881151	0					
ANR	4881242	Identifier	GetEnvironmentVariable		4881151	0					
ANR	4881243	ArgumentList	env_var		4881151	1					
ANR	4881244	Argument	env_var		4881151	0					
ANR	4881245	Identifier	env_var		4881151	0					
ANR	4881246	Argument	value		4881151	1					
ANR	4881247	Identifier	value		4881151	0					
ANR	4881248	Argument	value_size		4881151	2					
ANR	4881249	Identifier	value_size		4881151	0					
ANR	4881250	IfStatement	if ( rc > value_size - 1 )		4881151	8					
ANR	4881251	Condition	rc > value_size - 1	208:6:5012:5030	4881151	0	True				
ANR	4881252	RelationalExpression	rc > value_size - 1		4881151	0		>			
ANR	4881253	Identifier	rc		4881151	0					
ANR	4881254	AdditiveExpression	value_size - 1		4881151	1		-			
ANR	4881255	Identifier	value_size		4881151	0					
ANR	4881256	PrimaryExpression	1		4881151	1					
ANR	4881257	CompoundStatement		21:28:496:496	4881151	1					
ANR	4881258	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetEnv(): environment variable still too large: %d\\n"" , rc )"	209:2:5038:5117	4881151	0	True				
ANR	4881259	CallExpression	"dprintf ( D_ALWAYS , ""GetEnv(): environment variable still too large: %d\\n"" , rc )"		4881151	0					
ANR	4881260	Callee	dprintf		4881151	0					
ANR	4881261	Identifier	dprintf		4881151	0					
ANR	4881262	ArgumentList	D_ALWAYS		4881151	1					
ANR	4881263	Argument	D_ALWAYS		4881151	0					
ANR	4881264	Identifier	D_ALWAYS		4881151	0					
ANR	4881265	Argument	"""GetEnv(): environment variable still too large: %d\\n"""		4881151	1					
ANR	4881266	PrimaryExpression	"""GetEnv(): environment variable still too large: %d\\n"""		4881151	0					
ANR	4881267	Argument	rc		4881151	2					
ANR	4881268	Identifier	rc		4881151	0					
ANR	4881269	ExpressionStatement	free ( value )	210:2:5121:5134	4881151	1	True				
ANR	4881270	CallExpression	free ( value )		4881151	0					
ANR	4881271	Callee	free		4881151	0					
ANR	4881272	Identifier	free		4881151	0					
ANR	4881273	ArgumentList	value		4881151	1					
ANR	4881274	Argument	value		4881151	0					
ANR	4881275	Identifier	value		4881151	0					
ANR	4881276	ReturnStatement	return NULL ;	211:2:5138:5149	4881151	2	True				
ANR	4881277	Identifier	NULL		4881151	0					
ANR	4881278	ElseStatement	else		4881151	0					
ANR	4881279	IfStatement	if ( rc == 0 )		4881151	0					
ANR	4881280	Condition	rc == 0	212:13:5164:5170	4881151	0	True				
ANR	4881281	EqualityExpression	rc == 0		4881151	0		==			
ANR	4881282	Identifier	rc		4881151	0					
ANR	4881283	PrimaryExpression	0		4881151	1					
ANR	4881284	CompoundStatement		26:2:640:668	4881151	1					
ANR	4881285	IdentifierDeclStatement	DWORD error = GetLastError ( ) ;	213:2:5178:5206	4881151	0	True				
ANR	4881286	IdentifierDecl	error = GetLastError ( )		4881151	0					
ANR	4881287	IdentifierDeclType	DWORD		4881151	0					
ANR	4881288	Identifier	error		4881151	1					
ANR	4881289	AssignmentExpression	error = GetLastError ( )		4881151	2		=			
ANR	4881290	Identifier	error		4881151	0					
ANR	4881291	CallExpression	GetLastError ( )		4881151	1					
ANR	4881292	Callee	GetLastError		4881151	0					
ANR	4881293	Identifier	GetLastError		4881151	0					
ANR	4881294	ArgumentList			4881151	1					
ANR	4881295	IfStatement	if ( error != ERROR_ENVVAR_NOT_FOUND )		4881151	1					
ANR	4881296	Condition	error != ERROR_ENVVAR_NOT_FOUND	214:7:5215:5245	4881151	0	True				
ANR	4881297	EqualityExpression	error != ERROR_ENVVAR_NOT_FOUND		4881151	0		!=			
ANR	4881298	Identifier	error		4881151	0					
ANR	4881299	Identifier	ERROR_ENVVAR_NOT_FOUND		4881151	1					
ANR	4881300	CompoundStatement		27:41:711:711	4881151	1					
ANR	4881301	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetEnv(): GetEnvironmentVariable() failed, error=%d\\n"" , error )"	215:3:5254:5349	4881151	0	True				
ANR	4881302	CallExpression	"dprintf ( D_ALWAYS , ""GetEnv(): GetEnvironmentVariable() failed, error=%d\\n"" , error )"		4881151	0					
ANR	4881303	Callee	dprintf		4881151	0					
ANR	4881304	Identifier	dprintf		4881151	0					
ANR	4881305	ArgumentList	D_ALWAYS		4881151	1					
ANR	4881306	Argument	D_ALWAYS		4881151	0					
ANR	4881307	Identifier	D_ALWAYS		4881151	0					
ANR	4881308	Argument	"""GetEnv(): GetEnvironmentVariable() failed, error=%d\\n"""		4881151	1					
ANR	4881309	PrimaryExpression	"""GetEnv(): GetEnvironmentVariable() failed, error=%d\\n"""		4881151	0					
ANR	4881310	Argument	error		4881151	2					
ANR	4881311	Identifier	error		4881151	0					
ANR	4881312	ExpressionStatement	free ( value )	219:2:5357:5370	4881151	2	True				
ANR	4881313	CallExpression	free ( value )		4881151	0					
ANR	4881314	Callee	free		4881151	0					
ANR	4881315	Identifier	free		4881151	0					
ANR	4881316	ArgumentList	value		4881151	1					
ANR	4881317	Argument	value		4881151	0					
ANR	4881318	Identifier	value		4881151	0					
ANR	4881319	ReturnStatement	return NULL ;	220:2:5374:5385	4881151	3	True				
ANR	4881320	Identifier	NULL		4881151	0					
ANR	4881321	ElseStatement	else		4881151	0					
ANR	4881322	CompoundStatement		34:8:857:857	4881151	0					
ANR	4881323	ExpressionStatement	result = value	222:2:5399:5413	4881151	0	True				
ANR	4881324	AssignmentExpression	result = value		4881151	0		=			
ANR	4881325	Identifier	result		4881151	0					
ANR	4881326	Identifier	value		4881151	1					
ANR	4881327	ExpressionStatement	free ( value )	223:2:5417:5430	4881151	1	True				
ANR	4881328	CallExpression	free ( value )		4881151	0					
ANR	4881329	Callee	free		4881151	0					
ANR	4881330	Identifier	free		4881151	0					
ANR	4881331	ArgumentList	value		4881151	1					
ANR	4881332	Argument	value		4881151	0					
ANR	4881333	Identifier	value		4881151	0					
ANR	4881334	ReturnStatement	return result . Value ( ) ;	228:1:5478:5499	4881151	9	True				
ANR	4881335	CallExpression	result . Value ( )		4881151	0					
ANR	4881336	Callee	result . Value		4881151	0					
ANR	4881337	MemberAccess	result . Value		4881151	0					
ANR	4881338	Identifier	result		4881151	0					
ANR	4881339	Identifier	Value		4881151	1					
ANR	4881340	ArgumentList			4881151	1					
ANR	4881341	ReturnType	const char *		4881151	1					
ANR	4881342	Identifier	GetEnv		4881151	2					
ANR	4881343	ParameterList	"const char * env_var , MyString & result"		4881151	3					
ANR	4881344	Parameter	const char * env_var	187:20:4497:4515	4881151	0	True				
ANR	4881345	ParameterType	const char *		4881151	0					
ANR	4881346	Identifier	env_var		4881151	1					
ANR	4881347	Parameter	MyString & result	187:41:4518:4533	4881151	1	True				
ANR	4881348	ParameterType	MyString &		4881151	0					
ANR	4881349	Identifier	result		4881151	1					
ANR	4881350	CFGEntryNode	ENTRY		4881151		True				
ANR	4881351	CFGExitNode	EXIT		4881151		True				
ANR	4881352	Symbol	malloc		4881151						
ANR	4881353	Symbol	GetEnvironmentVariable		4881151						
ANR	4881354	Symbol	env_var		4881151						
ANR	4881355	Symbol	NULL		4881151						
ANR	4881356	Symbol	value_size		4881151						
ANR	4881357	Symbol	D_ALWAYS		4881151						
ANR	4881358	Symbol	error		4881151						
ANR	4881359	Symbol	ERROR_ENVVAR_NOT_FOUND		4881151						
ANR	4881360	Symbol	result		4881151						
ANR	4881361	Symbol	rc		4881151						
ANR	4881362	Symbol	result . Value		4881151						
ANR	4881363	Symbol	GetLastError		4881151						
ANR	4881364	Symbol	value		4881151						
