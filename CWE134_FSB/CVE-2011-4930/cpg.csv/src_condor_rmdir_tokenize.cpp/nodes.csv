command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3672887	File	data/converged/CVE-2011-4930_htcondor/src_condor_rmdir_tokenize.cpp								
ANR	3672888	Function	CharIsSpace	22:0:815:923							
ANR	3672889	FunctionDef	CharIsSpace (T ch)		3672888	0					
ANR	3672890	CompoundStatement		22:51:866:923	3672888	0					
ANR	3672891	ReturnStatement	return ( ' ' == ch ) || ( ch >= 0x09 && ch <= 0x0D ) ;	23:3:872:920	3672888	0	True				
ANR	3672892	OrExpression	( ' ' == ch ) || ( ch >= 0x09 && ch <= 0x0D )		3672888	0		||			
ANR	3672893	EqualityExpression	' ' == ch		3672888	0		==			
ANR	3672894	PrimaryExpression	' '		3672888	0					
ANR	3672895	Identifier	ch		3672888	1					
ANR	3672896	AndExpression	ch >= 0x09 && ch <= 0x0D		3672888	1		&&			
ANR	3672897	RelationalExpression	ch >= 0x09		3672888	0		>=			
ANR	3672898	Identifier	ch		3672888	0					
ANR	3672899	PrimaryExpression	0x09		3672888	1					
ANR	3672900	RelationalExpression	ch <= 0x0D		3672888	1		<=			
ANR	3672901	Identifier	ch		3672888	0					
ANR	3672902	PrimaryExpression	0x0D		3672888	1					
ANR	3672903	ReturnType	__inline bool		3672888	1					
ANR	3672904	Identifier	CharIsSpace		3672888	2					
ANR	3672905	ParameterList	T ch		3672888	3					
ANR	3672906	Parameter	T ch	22:45:860:863	3672888	0	True				
ANR	3672907	ParameterType	T		3672888	0					
ANR	3672908	Identifier	ch		3672888	1					
ANR	3672909	CFGEntryNode	ENTRY		3672888		True				
ANR	3672910	CFGExitNode	EXIT		3672888		True				
ANR	3672911	Symbol	ch		3672888						
ANR	3672912	Function	_SkipWhiteSpace	26:0:928:1058							
ANR	3672913	FunctionDef	_SkipWhiteSpace (T psz)		3672912	0					
ANR	3672914	CompoundStatement		26:44:972:1058	3672912	0					
ANR	3672915	WhileStatement	while ( CharIsSpace ( psz [ 0 ] ) )		3672912	0					
ANR	3672916	Condition	CharIsSpace ( psz [ 0 ] )	27:9:984:1002	3672912	0	True				
ANR	3672917	CallExpression	CharIsSpace ( psz [ 0 ] )		3672912	0					
ANR	3672918	Callee	CharIsSpace		3672912	0					
ANR	3672919	Identifier	CharIsSpace		3672912	0					
ANR	3672920	ArgumentList	psz [ 0 ]		3672912	1					
ANR	3672921	Argument	psz [ 0 ]		3672912	0					
ANR	3672922	ArrayIndexing	psz [ 0 ]		3672912	0					
ANR	3672923	Identifier	psz		3672912	0					
ANR	3672924	PrimaryExpression	0		3672912	1					
ANR	3672925	CompoundStatement		2:30:32:32	3672912	1					
ANR	3672926	ExpressionStatement	psz = CharNext ( psz )	28:6:1014:1033	3672912	0	True				
ANR	3672927	AssignmentExpression	psz = CharNext ( psz )		3672912	0		=			
ANR	3672928	Identifier	psz		3672912	0					
ANR	3672929	CallExpression	CharNext ( psz )		3672912	1					
ANR	3672930	Callee	CharNext		3672912	0					
ANR	3672931	Identifier	CharNext		3672912	0					
ANR	3672932	ArgumentList	psz		3672912	1					
ANR	3672933	Argument	psz		3672912	0					
ANR	3672934	Identifier	psz		3672912	0					
ANR	3672935	ReturnStatement	return psz ;	30:3:1045:1055	3672912	1	True				
ANR	3672936	Identifier	psz		3672912	0					
ANR	3672937	ReturnType	T		3672912	1					
ANR	3672938	Identifier	_SkipWhiteSpace		3672912	2					
ANR	3672939	ParameterList	T psz		3672912	3					
ANR	3672940	Parameter	T psz	26:37:965:969	3672912	0	True				
ANR	3672941	ParameterType	T		3672912	0					
ANR	3672942	Identifier	psz		3672912	1					
ANR	3672943	CFGEntryNode	ENTRY		3672912		True				
ANR	3672944	CFGExitNode	EXIT		3672912		True				
ANR	3672945	Symbol	* psz		3672912						
ANR	3672946	Symbol	CharNext		3672912						
ANR	3672947	Symbol	psz		3672912						
ANR	3672948	Symbol	CharIsSpace		3672912						
ANR	3672949	Function	_strallocbytes	33:0:1063:1183							
ANR	3672950	FunctionDef	_strallocbytes (T psz)		3672949	0					
ANR	3672951	CompoundStatement		33:55:1118:1183	3672949	0					
ANR	3672952	ReturnStatement	return ( UINT ) ( psz ? lstrlen ( psz ) + 1 : 0 ) * sizeof ( psz [ 0 ] ) ;	34:3:1124:1180	3672949	0	True				
ANR	3672953	MultiplicativeExpression	( UINT ) ( psz ? lstrlen ( psz ) + 1 : 0 ) * sizeof ( psz [ 0 ] )		3672949	0		*			
ANR	3672954	CastExpression	( UINT ) ( psz ? lstrlen ( psz ) + 1 : 0 )		3672949	0					
ANR	3672955	CastTarget	UINT		3672949	0					
ANR	3672956	ConditionalExpression	psz ? lstrlen ( psz ) + 1 : 0		3672949	1					
ANR	3672957	Condition	psz		3672949	0					
ANR	3672958	Identifier	psz		3672949	0					
ANR	3672959	AdditiveExpression	lstrlen ( psz ) + 1		3672949	1		+			
ANR	3672960	CallExpression	lstrlen ( psz )		3672949	0					
ANR	3672961	Callee	lstrlen		3672949	0					
ANR	3672962	Identifier	lstrlen		3672949	0					
ANR	3672963	ArgumentList	psz		3672949	1					
ANR	3672964	Argument	psz		3672949	0					
ANR	3672965	Identifier	psz		3672949	0					
ANR	3672966	PrimaryExpression	1		3672949	1					
ANR	3672967	PrimaryExpression	0		3672949	2					
ANR	3672968	SizeofExpression	sizeof ( psz [ 0 ] )		3672949	1					
ANR	3672969	Sizeof	sizeof		3672949	0					
ANR	3672970	ArrayIndexing	psz [ 0 ]		3672949	1					
ANR	3672971	Identifier	psz		3672949	0					
ANR	3672972	PrimaryExpression	0		3672949	1					
ANR	3672973	ReturnType	__inline UINT		3672949	1					
ANR	3672974	Identifier	_strallocbytes		3672949	2					
ANR	3672975	ParameterList	T psz		3672949	3					
ANR	3672976	Parameter	T psz	33:48:1111:1115	3672949	0	True				
ANR	3672977	ParameterType	T		3672949	0					
ANR	3672978	Identifier	psz		3672949	1					
ANR	3672979	CFGEntryNode	ENTRY		3672949		True				
ANR	3672980	CFGExitNode	EXIT		3672949		True				
ANR	3672981	Symbol	* psz		3672949						
ANR	3672982	Symbol	psz		3672949						
ANR	3672983	Symbol	lstrlen		3672949						
ANR	3672984	Function	_NextWhiteSpaceOrQuote	37:0:1188:1366							
ANR	3672985	FunctionDef	_NextWhiteSpaceOrQuote (T psz)		3672984	0					
ANR	3672986	CompoundStatement		37:51:1239:1366	3672984	0					
ANR	3672987	WhileStatement	"while ( ( 0 != psz [ 0 ] ) && ! ( '""' == psz [ 0 ] ) && ! CharIsSpace ( psz [ 0 ] ) )"		3672984	0					
ANR	3672988	Condition	"( 0 != psz [ 0 ] ) && ! ( '""' == psz [ 0 ] ) && ! CharIsSpace ( psz [ 0 ] )"	38:10:1252:1310	3672984	0	True				
ANR	3672989	AndExpression	"( 0 != psz [ 0 ] ) && ! ( '""' == psz [ 0 ] ) && ! CharIsSpace ( psz [ 0 ] )"		3672984	0		&&			
ANR	3672990	EqualityExpression	0 != psz [ 0 ]		3672984	0		!=			
ANR	3672991	PrimaryExpression	0		3672984	0					
ANR	3672992	ArrayIndexing	psz [ 0 ]		3672984	1					
ANR	3672993	Identifier	psz		3672984	0					
ANR	3672994	PrimaryExpression	0		3672984	1					
ANR	3672995	AndExpression	"! ( '""' == psz [ 0 ] ) && ! CharIsSpace ( psz [ 0 ] )"		3672984	1		&&			
ANR	3672996	UnaryOperationExpression	"! ( '""' == psz [ 0 ] )"		3672984	0					
ANR	3672997	UnaryOperator	!		3672984	0					
ANR	3672998	EqualityExpression	"'""' == psz [ 0 ]"		3672984	1		==			
ANR	3672999	PrimaryExpression	"'""'"		3672984	0					
ANR	3673000	ArrayIndexing	psz [ 0 ]		3672984	1					
ANR	3673001	Identifier	psz		3672984	0					
ANR	3673002	PrimaryExpression	0		3672984	1					
ANR	3673003	UnaryOperationExpression	! CharIsSpace ( psz [ 0 ] )		3672984	1					
ANR	3673004	UnaryOperator	!		3672984	0					
ANR	3673005	CallExpression	CharIsSpace ( psz [ 0 ] )		3672984	1					
ANR	3673006	Callee	CharIsSpace		3672984	0					
ANR	3673007	Identifier	CharIsSpace		3672984	0					
ANR	3673008	ArgumentList	psz [ 0 ]		3672984	1					
ANR	3673009	Argument	psz [ 0 ]		3672984	0					
ANR	3673010	ArrayIndexing	psz [ 0 ]		3672984	0					
ANR	3673011	Identifier	psz		3672984	0					
ANR	3673012	PrimaryExpression	0		3672984	1					
ANR	3673013	CompoundStatement		2:71:73:73	3672984	1					
ANR	3673014	ExpressionStatement	psz = CharNext ( psz )	39:6:1322:1341	3672984	0	True				
ANR	3673015	AssignmentExpression	psz = CharNext ( psz )		3672984	0		=			
ANR	3673016	Identifier	psz		3672984	0					
ANR	3673017	CallExpression	CharNext ( psz )		3672984	1					
ANR	3673018	Callee	CharNext		3672984	0					
ANR	3673019	Identifier	CharNext		3672984	0					
ANR	3673020	ArgumentList	psz		3672984	1					
ANR	3673021	Argument	psz		3672984	0					
ANR	3673022	Identifier	psz		3672984	0					
ANR	3673023	ReturnStatement	return psz ;	41:3:1353:1363	3672984	1	True				
ANR	3673024	Identifier	psz		3672984	0					
ANR	3673025	ReturnType	T		3672984	1					
ANR	3673026	Identifier	_NextWhiteSpaceOrQuote		3672984	2					
ANR	3673027	ParameterList	T psz		3672984	3					
ANR	3673028	Parameter	T psz	37:44:1232:1236	3672984	0	True				
ANR	3673029	ParameterType	T		3672984	0					
ANR	3673030	Identifier	psz		3672984	1					
ANR	3673031	CFGEntryNode	ENTRY		3672984		True				
ANR	3673032	CFGExitNode	EXIT		3672984		True				
ANR	3673033	Symbol	* psz		3672984						
ANR	3673034	Symbol	CharNext		3672984						
ANR	3673035	Symbol	psz		3672984						
ANR	3673036	Symbol	CharIsSpace		3672984						
ANR	3673037	Function	ParseToken	56:0:1962:3482							
ANR	3673038	FunctionDef	ParseToken (LPTSTR pszToken)		3673037	0					
ANR	3673039	CompoundStatement		58:0:2004:3482	3673037	0					
ANR	3673040	IdentifierDeclStatement	LPTSTR psz = pszToken ;	59:3:2010:2031	3673037	0	True				
ANR	3673041	IdentifierDecl	psz = pszToken		3673037	0					
ANR	3673042	IdentifierDeclType	LPTSTR		3673037	0					
ANR	3673043	Identifier	psz		3673037	1					
ANR	3673044	AssignmentExpression	psz = pszToken		3673037	2		=			
ANR	3673045	Identifier	pszToken		3673037	0					
ANR	3673046	Identifier	pszToken		3673037	1					
ANR	3673047	IdentifierDeclStatement	BOOL fQuote = FALSE ;	60:3:2037:2058	3673037	1	True				
ANR	3673048	IdentifierDecl	fQuote = FALSE		3673037	0					
ANR	3673049	IdentifierDeclType	BOOL		3673037	0					
ANR	3673050	Identifier	fQuote		3673037	1					
ANR	3673051	AssignmentExpression	fQuote = FALSE		3673037	2		=			
ANR	3673052	Identifier	FALSE		3673037	0					
ANR	3673053	Identifier	FALSE		3673037	1					
ANR	3673054	ForStatement	for ( ; ; )		3673037	2					
ANR	3673055	CompoundStatement		8:6:111:111	3673037	0					
ANR	3673056	ExpressionStatement	psz = _NextWhiteSpaceOrQuote ( psz )	66:6:2125:2159	3673037	0	True				
ANR	3673057	AssignmentExpression	psz = _NextWhiteSpaceOrQuote ( psz )		3673037	0		=			
ANR	3673058	Identifier	psz		3673037	0					
ANR	3673059	CallExpression	_NextWhiteSpaceOrQuote ( psz )		3673037	1					
ANR	3673060	Callee	_NextWhiteSpaceOrQuote		3673037	0					
ANR	3673061	Identifier	_NextWhiteSpaceOrQuote		3673037	0					
ANR	3673062	ArgumentList	psz		3673037	1					
ANR	3673063	Argument	psz		3673037	0					
ANR	3673064	Identifier	psz		3673037	0					
ANR	3673065	IfStatement	if ( ! psz [ 0 ] )		3673037	1					
ANR	3673066	Condition	! psz [ 0 ]	67:11:2173:2180	3673037	0	True				
ANR	3673067	UnaryOperationExpression	! psz [ 0 ]		3673037	0					
ANR	3673068	UnaryOperator	!		3673037	0					
ANR	3673069	ArrayIndexing	psz [ 0 ]		3673037	1					
ANR	3673070	Identifier	psz		3673037	0					
ANR	3673071	PrimaryExpression	0		3673037	1					
ANR	3673072	BreakStatement	break ;	68:9:2193:2198	3673037	1	True				
ANR	3673073	IfStatement	"if ( '""' == psz [ 0 ] )"		3673037	2					
ANR	3673074	Condition	"'""' == psz [ 0 ]"	72:10:2258:2270	3673037	0	True				
ANR	3673075	EqualityExpression	"'""' == psz [ 0 ]"		3673037	0		==			
ANR	3673076	PrimaryExpression	"'""'"		3673037	0					
ANR	3673077	ArrayIndexing	psz [ 0 ]		3673037	1					
ANR	3673078	Identifier	psz		3673037	0					
ANR	3673079	PrimaryExpression	0		3673037	1					
ANR	3673080	CompoundStatement		19:9:333:361	3673037	1					
ANR	3673081	IdentifierDeclStatement	LPTSTR pszT = CharNext ( psz ) ;	76:9:2338:2366	3673037	0	True				
ANR	3673082	IdentifierDecl	pszT = CharNext ( psz )		3673037	0					
ANR	3673083	IdentifierDeclType	LPTSTR		3673037	0					
ANR	3673084	Identifier	pszT		3673037	1					
ANR	3673085	AssignmentExpression	pszT = CharNext ( psz )		3673037	2		=			
ANR	3673086	Identifier	pszT		3673037	0					
ANR	3673087	CallExpression	CharNext ( psz )		3673037	1					
ANR	3673088	Callee	CharNext		3673037	0					
ANR	3673089	Identifier	CharNext		3673037	0					
ANR	3673090	ArgumentList	psz		3673037	1					
ANR	3673091	Argument	psz		3673037	0					
ANR	3673092	Identifier	psz		3673037	0					
ANR	3673093	ExpressionStatement	"MoveMemory ( psz , pszT , _strallocbytes ( pszT ) )"	77:9:2378:2421	3673037	1	True				
ANR	3673094	CallExpression	"MoveMemory ( psz , pszT , _strallocbytes ( pszT ) )"		3673037	0					
ANR	3673095	Callee	MoveMemory		3673037	0					
ANR	3673096	Identifier	MoveMemory		3673037	0					
ANR	3673097	ArgumentList	psz		3673037	1					
ANR	3673098	Argument	psz		3673037	0					
ANR	3673099	Identifier	psz		3673037	0					
ANR	3673100	Argument	pszT		3673037	1					
ANR	3673101	Identifier	pszT		3673037	0					
ANR	3673102	Argument	_strallocbytes ( pszT )		3673037	2					
ANR	3673103	CallExpression	_strallocbytes ( pszT )		3673037	0					
ANR	3673104	Callee	_strallocbytes		3673037	0					
ANR	3673105	Identifier	_strallocbytes		3673037	0					
ANR	3673106	ArgumentList	pszT		3673037	1					
ANR	3673107	Argument	pszT		3673037	0					
ANR	3673108	Identifier	pszT		3673037	0					
ANR	3673109	IfStatement	if ( fQuote )		3673037	2					
ANR	3673110	Condition	fQuote	79:13:2439:2444	3673037	0	True				
ANR	3673111	Identifier	fQuote		3673037	0					
ANR	3673112	CompoundStatement		23:12:491:491	3673037	1					
ANR	3673113	IfStatement	"if ( '""' == psz [ 0 ] )"		3673037	0					
ANR	3673114	Condition	"'""' == psz [ 0 ]"	85:16:2744:2756	3673037	0	True				
ANR	3673115	EqualityExpression	"'""' == psz [ 0 ]"		3673037	0		==			
ANR	3673116	PrimaryExpression	"'""'"		3673037	0					
ANR	3673117	ArrayIndexing	psz [ 0 ]		3673037	1					
ANR	3673118	Identifier	psz		3673037	0					
ANR	3673119	PrimaryExpression	0		3673037	1					
ANR	3673120	ExpressionStatement	psz = CharNext ( psz )	86:15:2775:2795	3673037	1	True				
ANR	3673121	AssignmentExpression	psz = CharNext ( psz )		3673037	0		=			
ANR	3673122	Identifier	psz		3673037	0					
ANR	3673123	CallExpression	CharNext ( psz )		3673037	1					
ANR	3673124	Callee	CharNext		3673037	0					
ANR	3673125	Identifier	CharNext		3673037	0					
ANR	3673126	ArgumentList	psz		3673037	1					
ANR	3673127	Argument	psz		3673037	0					
ANR	3673128	Identifier	psz		3673037	0					
ANR	3673129	ElseStatement	else		3673037	0					
ANR	3673130	ExpressionStatement	fQuote = FALSE	88:15:2831:2845	3673037	0	True				
ANR	3673131	AssignmentExpression	fQuote = FALSE		3673037	0		=			
ANR	3673132	Identifier	fQuote		3673037	0					
ANR	3673133	Identifier	FALSE		3673037	1					
ANR	3673134	ElseStatement	else		3673037	0					
ANR	3673135	ExpressionStatement	fQuote = TRUE	91:12:2890:2903	3673037	0	True				
ANR	3673136	AssignmentExpression	fQuote = TRUE		3673037	0		=			
ANR	3673137	Identifier	fQuote		3673037	0					
ANR	3673138	Identifier	TRUE		3673037	1					
ANR	3673139	ElseStatement	else		3673037	0					
ANR	3673140	IfStatement	if ( fQuote )		3673037	0					
ANR	3673141	Condition	fQuote	93:15:2933:2938	3673037	0	True				
ANR	3673142	Identifier	fQuote		3673037	0					
ANR	3673143	CompoundStatement		37:9:946:946	3673037	1					
ANR	3673144	ExpressionStatement	psz = _SkipWhiteSpace ( psz )	95:9:2963:2989	3673037	0	True				
ANR	3673145	AssignmentExpression	psz = _SkipWhiteSpace ( psz )		3673037	0		=			
ANR	3673146	Identifier	psz		3673037	0					
ANR	3673147	CallExpression	_SkipWhiteSpace ( psz )		3673037	1					
ANR	3673148	Callee	_SkipWhiteSpace		3673037	0					
ANR	3673149	Identifier	_SkipWhiteSpace		3673037	0					
ANR	3673150	ArgumentList	psz		3673037	1					
ANR	3673151	Argument	psz		3673037	0					
ANR	3673152	Identifier	psz		3673037	0					
ANR	3673153	ElseStatement	else		3673037	0					
ANR	3673154	CompoundStatement		41:9:1020:1020	3673037	0					
ANR	3673155	BreakStatement	break ;	102:9:3159:3164	3673037	0	True				
ANR	3673156	IfStatement	if ( ! psz [ 0 ] )		3673037	3					
ANR	3673157	Condition	! psz [ 0 ]	109:8:3308:3315	3673037	0	True				
ANR	3673158	UnaryOperationExpression	! psz [ 0 ]		3673037	0					
ANR	3673159	UnaryOperator	!		3673037	0					
ANR	3673160	ArrayIndexing	psz [ 0 ]		3673037	1					
ANR	3673161	Identifier	psz		3673037	0					
ANR	3673162	PrimaryExpression	0		3673037	1					
ANR	3673163	CompoundStatement		54:6:1329:1357	3673037	1					
ANR	3673164	IdentifierDeclStatement	LPTSTR pszT = CharNext ( psz ) ;	111:6:3334:3362	3673037	0	True				
ANR	3673165	IdentifierDecl	pszT = CharNext ( psz )		3673037	0					
ANR	3673166	IdentifierDeclType	LPTSTR		3673037	0					
ANR	3673167	Identifier	pszT		3673037	1					
ANR	3673168	AssignmentExpression	pszT = CharNext ( psz )		3673037	2		=			
ANR	3673169	Identifier	pszT		3673037	0					
ANR	3673170	CallExpression	CharNext ( psz )		3673037	1					
ANR	3673171	Callee	CharNext		3673037	0					
ANR	3673172	Identifier	CharNext		3673037	0					
ANR	3673173	ArgumentList	psz		3673037	1					
ANR	3673174	Argument	psz		3673037	0					
ANR	3673175	Identifier	psz		3673037	0					
ANR	3673176	ExpressionStatement	psz [ 0 ] = 0	112:6:3371:3381	3673037	1	True				
ANR	3673177	AssignmentExpression	psz [ 0 ] = 0		3673037	0		=			
ANR	3673178	ArrayIndexing	psz [ 0 ]		3673037	0					
ANR	3673179	Identifier	psz		3673037	0					
ANR	3673180	PrimaryExpression	0		3673037	1					
ANR	3673181	PrimaryExpression	0		3673037	1					
ANR	3673182	ExpressionStatement	psz = pszT	113:6:3390:3400	3673037	2	True				
ANR	3673183	AssignmentExpression	psz = pszT		3673037	0		=			
ANR	3673184	Identifier	psz		3673037	0					
ANR	3673185	Identifier	pszT		3673037	1					
ANR	3673186	ReturnStatement	return psz ;	116:3:3417:3427	3673037	4	True				
ANR	3673187	Identifier	psz		3673037	0					
ANR	3673188	ReturnType	LPTSTR		3673037	1					
ANR	3673189	Identifier	ParseToken		3673037	2					
ANR	3673190	ParameterList	LPTSTR pszToken		3673037	3					
ANR	3673191	Parameter	LPTSTR pszToken	57:3:1986:2000	3673037	0	True				
ANR	3673192	ParameterType	LPTSTR		3673037	0					
ANR	3673193	Identifier	pszToken		3673037	1					
ANR	3673194	CFGEntryNode	ENTRY		3673037		True				
ANR	3673195	CFGExitNode	EXIT		3673037		True				
ANR	3673196	InfiniteForNode	true		3673037		True				
ANR	3673197	Symbol	pszToken		3673037						
ANR	3673198	Symbol	* psz		3673037						
ANR	3673199	Symbol	CharNext		3673037						
ANR	3673200	Symbol	psz		3673037						
ANR	3673201	Symbol	_NextWhiteSpaceOrQuote		3673037						
ANR	3673202	Symbol	_SkipWhiteSpace		3673037						
ANR	3673203	Symbol	pszT		3673037						
ANR	3673204	Symbol	TRUE		3673037						
ANR	3673205	Symbol	FALSE		3673037						
ANR	3673206	Symbol	_strallocbytes		3673037						
ANR	3673207	Symbol	fQuote		3673037						
ANR	3673208	Function	TokenizeString	126:0:3799:4710							
ANR	3673209	FunctionDef	"TokenizeString (LPCTSTR pszInput , LPUINT pcArgs)"		3673208	0					
ANR	3673210	CompoundStatement		129:0:3869:4710	3673208	0					
ANR	3673211	ExpressionStatement	* pcArgs = 0	130:3:3875:3886	3673208	0	True				
ANR	3673212	AssignmentExpression	* pcArgs = 0		3673208	0		=			
ANR	3673213	UnaryOperationExpression	* pcArgs		3673208	0					
ANR	3673214	UnaryOperator	*		3673208	0					
ANR	3673215	Identifier	pcArgs		3673208	1					
ANR	3673216	PrimaryExpression	0		3673208	1					
ANR	3673217	IfStatement	if ( ! pszInput )		3673208	1					
ANR	3673218	Condition	! pszInput	131:8:3897:3906	3673208	0	True				
ANR	3673219	UnaryOperationExpression	! pszInput		3673208	0					
ANR	3673220	UnaryOperator	!		3673208	0					
ANR	3673221	Identifier	pszInput		3673208	1					
ANR	3673222	ReturnStatement	return NULL ;	132:6:3916:3927	3673208	1	True				
ANR	3673223	Identifier	NULL		3673208	0					
ANR	3673224	IdentifierDeclStatement	UINT cch = lstrlen ( pszInput ) ;	134:3:3935:3964	3673208	2	True				
ANR	3673225	IdentifierDecl	cch = lstrlen ( pszInput )		3673208	0					
ANR	3673226	IdentifierDeclType	UINT		3673208	0					
ANR	3673227	Identifier	cch		3673208	1					
ANR	3673228	AssignmentExpression	cch = lstrlen ( pszInput )		3673208	2		=			
ANR	3673229	Identifier	cch		3673208	0					
ANR	3673230	CallExpression	lstrlen ( pszInput )		3673208	1					
ANR	3673231	Callee	lstrlen		3673208	0					
ANR	3673232	Identifier	lstrlen		3673208	0					
ANR	3673233	ArgumentList	pszInput		3673208	1					
ANR	3673234	Argument	pszInput		3673208	0					
ANR	3673235	Identifier	pszInput		3673208	0					
ANR	3673236	IfStatement	if ( ! cch )		3673208	3					
ANR	3673237	Condition	! cch	135:8:3975:3979	3673208	0	True				
ANR	3673238	UnaryOperationExpression	! cch		3673208	0					
ANR	3673239	UnaryOperator	!		3673208	0					
ANR	3673240	Identifier	cch		3673208	1					
ANR	3673241	ReturnStatement	return NULL ;	136:6:3989:4000	3673208	1	True				
ANR	3673242	Identifier	NULL		3673208	0					
ANR	3673243	IdentifierDeclStatement	UINT cbAlloc = ( ( cch + 1 ) * sizeof ( char * ) + cch * sizeof ( TCHAR ) * 2 ) ;	138:3:4008:4077	3673208	4	True				
ANR	3673244	IdentifierDecl	cbAlloc = ( ( cch + 1 ) * sizeof ( char * ) + cch * sizeof ( TCHAR ) * 2 )		3673208	0					
ANR	3673245	IdentifierDeclType	UINT		3673208	0					
ANR	3673246	Identifier	cbAlloc		3673208	1					
ANR	3673247	AssignmentExpression	cbAlloc = ( ( cch + 1 ) * sizeof ( char * ) + cch * sizeof ( TCHAR ) * 2 )		3673208	2		=			
ANR	3673248	Identifier	cbAlloc		3673208	0					
ANR	3673249	AdditiveExpression	( cch + 1 ) * sizeof ( char * ) + cch * sizeof ( TCHAR ) * 2		3673208	1		+			
ANR	3673250	MultiplicativeExpression	( cch + 1 ) * sizeof ( char * )		3673208	0		*			
ANR	3673251	AdditiveExpression	cch + 1		3673208	0		+			
ANR	3673252	Identifier	cch		3673208	0					
ANR	3673253	PrimaryExpression	1		3673208	1					
ANR	3673254	SizeofExpression	sizeof ( char * )		3673208	1					
ANR	3673255	Sizeof	sizeof		3673208	0					
ANR	3673256	SizeofOperand	char *		3673208	1					
ANR	3673257	MultiplicativeExpression	cch * sizeof ( TCHAR ) * 2		3673208	1		*			
ANR	3673258	Identifier	cch		3673208	0					
ANR	3673259	MultiplicativeExpression	sizeof ( TCHAR ) * 2		3673208	1		*			
ANR	3673260	SizeofExpression	sizeof ( TCHAR )		3673208	0					
ANR	3673261	Sizeof	sizeof		3673208	0					
ANR	3673262	SizeofOperand	TCHAR		3673208	1					
ANR	3673263	PrimaryExpression	2		3673208	1					
ANR	3673264	IdentifierDeclStatement	"LPCTSTR * pArgv = ( LPCTSTR * ) HeapAlloc ( GetProcessHeap ( ) , 0 , cbAlloc ) ;"	139:3:4083:4151	3673208	5	True				
ANR	3673265	IdentifierDecl	"* pArgv = ( LPCTSTR * ) HeapAlloc ( GetProcessHeap ( ) , 0 , cbAlloc )"		3673208	0					
ANR	3673266	IdentifierDeclType	LPCTSTR *		3673208	0					
ANR	3673267	Identifier	pArgv		3673208	1					
ANR	3673268	AssignmentExpression	"* pArgv = ( LPCTSTR * ) HeapAlloc ( GetProcessHeap ( ) , 0 , cbAlloc )"		3673208	2		=			
ANR	3673269	Identifier	pArgv		3673208	0					
ANR	3673270	CastExpression	"( LPCTSTR * ) HeapAlloc ( GetProcessHeap ( ) , 0 , cbAlloc )"		3673208	1					
ANR	3673271	CastTarget	LPCTSTR *		3673208	0					
ANR	3673272	CallExpression	"HeapAlloc ( GetProcessHeap ( ) , 0 , cbAlloc )"		3673208	1					
ANR	3673273	Callee	HeapAlloc		3673208	0					
ANR	3673274	Identifier	HeapAlloc		3673208	0					
ANR	3673275	ArgumentList	GetProcessHeap ( )		3673208	1					
ANR	3673276	Argument	GetProcessHeap ( )		3673208	0					
ANR	3673277	CallExpression	GetProcessHeap ( )		3673208	0					
ANR	3673278	Callee	GetProcessHeap		3673208	0					
ANR	3673279	Identifier	GetProcessHeap		3673208	0					
ANR	3673280	ArgumentList			3673208	1					
ANR	3673281	Argument	0		3673208	1					
ANR	3673282	PrimaryExpression	0		3673208	0					
ANR	3673283	Argument	cbAlloc		3673208	2					
ANR	3673284	Identifier	cbAlloc		3673208	0					
ANR	3673285	IfStatement	if ( ! pArgv )		3673208	6					
ANR	3673286	Condition	! pArgv	140:8:4162:4168	3673208	0	True				
ANR	3673287	UnaryOperationExpression	! pArgv		3673208	0					
ANR	3673288	UnaryOperator	!		3673208	0					
ANR	3673289	Identifier	pArgv		3673208	1					
ANR	3673290	ReturnStatement	return NULL ;	141:6:4178:4189	3673208	1	True				
ANR	3673291	Identifier	NULL		3673208	0					
ANR	3673292	IdentifierDeclStatement	LPTSTR pszToken = ( LPTSTR ) ( & pArgv [ cch + 1 ] ) ;	143:3:4197:4240	3673208	7	True				
ANR	3673293	IdentifierDecl	pszToken = ( LPTSTR ) ( & pArgv [ cch + 1 ] )		3673208	0					
ANR	3673294	IdentifierDeclType	LPTSTR		3673208	0					
ANR	3673295	Identifier	pszToken		3673208	1					
ANR	3673296	AssignmentExpression	pszToken = ( LPTSTR ) ( & pArgv [ cch + 1 ] )		3673208	2		=			
ANR	3673297	Identifier	pszToken		3673208	0					
ANR	3673298	CastExpression	( LPTSTR ) ( & pArgv [ cch + 1 ] )		3673208	1					
ANR	3673299	CastTarget	LPTSTR		3673208	0					
ANR	3673300	UnaryOperationExpression	& pArgv [ cch + 1 ]		3673208	1					
ANR	3673301	UnaryOperator	&		3673208	0					
ANR	3673302	ArrayIndexing	pArgv [ cch + 1 ]		3673208	1					
ANR	3673303	Identifier	pArgv		3673208	0					
ANR	3673304	AdditiveExpression	cch + 1		3673208	1		+			
ANR	3673305	Identifier	cch		3673208	0					
ANR	3673306	PrimaryExpression	1		3673208	1					
ANR	3673307	IdentifierDeclStatement	UINT cArgs = 0 ;	144:3:4246:4265	3673208	8	True				
ANR	3673308	IdentifierDecl	cArgs = 0		3673208	0					
ANR	3673309	IdentifierDeclType	UINT		3673208	0					
ANR	3673310	Identifier	cArgs		3673208	1					
ANR	3673311	AssignmentExpression	cArgs = 0		3673208	2		=			
ANR	3673312	Identifier	cArgs		3673208	0					
ANR	3673313	PrimaryExpression	0		3673208	1					
ANR	3673314	ExpressionStatement	"CopyMemory ( pszToken , pszInput , ( cch + 1 ) * sizeof ( TCHAR ) )"	146:3:4273:4328	3673208	9	True				
ANR	3673315	CallExpression	"CopyMemory ( pszToken , pszInput , ( cch + 1 ) * sizeof ( TCHAR ) )"		3673208	0					
ANR	3673316	Callee	CopyMemory		3673208	0					
ANR	3673317	Identifier	CopyMemory		3673208	0					
ANR	3673318	ArgumentList	pszToken		3673208	1					
ANR	3673319	Argument	pszToken		3673208	0					
ANR	3673320	Identifier	pszToken		3673208	0					
ANR	3673321	Argument	pszInput		3673208	1					
ANR	3673322	Identifier	pszInput		3673208	0					
ANR	3673323	Argument	( cch + 1 ) * sizeof ( TCHAR )		3673208	2					
ANR	3673324	MultiplicativeExpression	( cch + 1 ) * sizeof ( TCHAR )		3673208	0		*			
ANR	3673325	AdditiveExpression	cch + 1		3673208	0		+			
ANR	3673326	Identifier	cch		3673208	0					
ANR	3673327	PrimaryExpression	1		3673208	1					
ANR	3673328	SizeofExpression	sizeof ( TCHAR )		3673208	1					
ANR	3673329	Sizeof	sizeof		3673208	0					
ANR	3673330	SizeofOperand	TCHAR		3673208	1					
ANR	3673331	ExpressionStatement	pszToken = _SkipWhiteSpace ( pszToken )	148:3:4336:4373	3673208	10	True				
ANR	3673332	AssignmentExpression	pszToken = _SkipWhiteSpace ( pszToken )		3673208	0		=			
ANR	3673333	Identifier	pszToken		3673208	0					
ANR	3673334	CallExpression	_SkipWhiteSpace ( pszToken )		3673208	1					
ANR	3673335	Callee	_SkipWhiteSpace		3673208	0					
ANR	3673336	Identifier	_SkipWhiteSpace		3673208	0					
ANR	3673337	ArgumentList	pszToken		3673208	1					
ANR	3673338	Argument	pszToken		3673208	0					
ANR	3673339	Identifier	pszToken		3673208	0					
ANR	3673340	WhileStatement	while ( 0 != pszToken [ 0 ] )		3673208	11					
ANR	3673341	Condition	0 != pszToken [ 0 ]	149:10:4386:4401	3673208	0	True				
ANR	3673342	EqualityExpression	0 != pszToken [ 0 ]		3673208	0		!=			
ANR	3673343	PrimaryExpression	0		3673208	0					
ANR	3673344	ArrayIndexing	pszToken [ 0 ]		3673208	1					
ANR	3673345	Identifier	pszToken		3673208	0					
ANR	3673346	PrimaryExpression	0		3673208	1					
ANR	3673347	CompoundStatement		23:6:550:583	3673208	1					
ANR	3673348	IdentifierDeclStatement	LPTSTR psz = ParseToken ( pszToken ) ;	151:6:4420:4453	3673208	0	True				
ANR	3673349	IdentifierDecl	psz = ParseToken ( pszToken )		3673208	0					
ANR	3673350	IdentifierDeclType	LPTSTR		3673208	0					
ANR	3673351	Identifier	psz		3673208	1					
ANR	3673352	AssignmentExpression	psz = ParseToken ( pszToken )		3673208	2		=			
ANR	3673353	Identifier	psz		3673208	0					
ANR	3673354	CallExpression	ParseToken ( pszToken )		3673208	1					
ANR	3673355	Callee	ParseToken		3673208	0					
ANR	3673356	Identifier	ParseToken		3673208	0					
ANR	3673357	ArgumentList	pszToken		3673208	1					
ANR	3673358	Argument	pszToken		3673208	0					
ANR	3673359	Identifier	pszToken		3673208	0					
ANR	3673360	ExpressionStatement	pArgv [ cArgs ++ ] = pszToken	152:6:4462:4487	3673208	1	True				
ANR	3673361	AssignmentExpression	pArgv [ cArgs ++ ] = pszToken		3673208	0		=			
ANR	3673362	ArrayIndexing	pArgv [ cArgs ++ ]		3673208	0					
ANR	3673363	Identifier	pArgv		3673208	0					
ANR	3673364	PostIncDecOperationExpression	cArgs ++		3673208	1					
ANR	3673365	Identifier	cArgs		3673208	0					
ANR	3673366	IncDec	++		3673208	1					
ANR	3673367	Identifier	pszToken		3673208	1					
ANR	3673368	ExpressionStatement	pszToken = _SkipWhiteSpace ( psz )	153:6:4496:4528	3673208	2	True				
ANR	3673369	AssignmentExpression	pszToken = _SkipWhiteSpace ( psz )		3673208	0		=			
ANR	3673370	Identifier	pszToken		3673208	0					
ANR	3673371	CallExpression	_SkipWhiteSpace ( psz )		3673208	1					
ANR	3673372	Callee	_SkipWhiteSpace		3673208	0					
ANR	3673373	Identifier	_SkipWhiteSpace		3673208	0					
ANR	3673374	ArgumentList	psz		3673208	1					
ANR	3673375	Argument	psz		3673208	0					
ANR	3673376	Identifier	psz		3673208	0					
ANR	3673377	ExpressionStatement	* pcArgs = cArgs	156:3:4545:4560	3673208	12	True				
ANR	3673378	AssignmentExpression	* pcArgs = cArgs		3673208	0		=			
ANR	3673379	UnaryOperationExpression	* pcArgs		3673208	0					
ANR	3673380	UnaryOperator	*		3673208	0					
ANR	3673381	Identifier	pcArgs		3673208	1					
ANR	3673382	Identifier	cArgs		3673208	1					
ANR	3673383	ExpressionStatement	pArgv [ cArgs ] = NULL	157:3:4566:4585	3673208	13	True				
ANR	3673384	AssignmentExpression	pArgv [ cArgs ] = NULL		3673208	0		=			
ANR	3673385	ArrayIndexing	pArgv [ cArgs ]		3673208	0					
ANR	3673386	Identifier	pArgv		3673208	0					
ANR	3673387	Identifier	cArgs		3673208	1					
ANR	3673388	Identifier	NULL		3673208	1					
ANR	3673389	IfStatement	if ( ! cArgs )		3673208	14					
ANR	3673390	Condition	! cArgs	158:8:4596:4602	3673208	0	True				
ANR	3673391	UnaryOperationExpression	! cArgs		3673208	0					
ANR	3673392	UnaryOperator	!		3673208	0					
ANR	3673393	Identifier	cArgs		3673208	1					
ANR	3673394	CompoundStatement		31:6:742:742	3673208	1					
ANR	3673395	ExpressionStatement	"HeapFree ( GetProcessHeap ( ) , 0 , pArgv )"	160:6:4621:4657	3673208	0	True				
ANR	3673396	CallExpression	"HeapFree ( GetProcessHeap ( ) , 0 , pArgv )"		3673208	0					
ANR	3673397	Callee	HeapFree		3673208	0					
ANR	3673398	Identifier	HeapFree		3673208	0					
ANR	3673399	ArgumentList	GetProcessHeap ( )		3673208	1					
ANR	3673400	Argument	GetProcessHeap ( )		3673208	0					
ANR	3673401	CallExpression	GetProcessHeap ( )		3673208	0					
ANR	3673402	Callee	GetProcessHeap		3673208	0					
ANR	3673403	Identifier	GetProcessHeap		3673208	0					
ANR	3673404	ArgumentList			3673208	1					
ANR	3673405	Argument	0		3673208	1					
ANR	3673406	PrimaryExpression	0		3673208	0					
ANR	3673407	Argument	pArgv		3673208	2					
ANR	3673408	Identifier	pArgv		3673208	0					
ANR	3673409	ExpressionStatement	pArgv = NULL	161:6:4666:4678	3673208	1	True				
ANR	3673410	AssignmentExpression	pArgv = NULL		3673208	0		=			
ANR	3673411	Identifier	pArgv		3673208	0					
ANR	3673412	Identifier	NULL		3673208	1					
ANR	3673413	ReturnStatement	return pArgv ;	164:3:4695:4707	3673208	15	True				
ANR	3673414	Identifier	pArgv		3673208	0					
ANR	3673415	ReturnType	LPCTSTR *		3673208	1					
ANR	3673416	Identifier	TokenizeString		3673208	2					
ANR	3673417	ParameterList	"LPCTSTR pszInput , LPUINT pcArgs"		3673208	3					
ANR	3673418	Parameter	LPCTSTR pszInput	127:3:3830:3845	3673208	0	True				
ANR	3673419	ParameterType	LPCTSTR		3673208	0					
ANR	3673420	Identifier	pszInput		3673208	1					
ANR	3673421	Parameter	LPUINT pcArgs	128:3:3852:3865	3673208	1	True				
ANR	3673422	ParameterType	LPUINT		3673208	0					
ANR	3673423	Identifier	pcArgs		3673208	1					
ANR	3673424	CFGEntryNode	ENTRY		3673208		True				
ANR	3673425	CFGExitNode	EXIT		3673208		True				
ANR	3673426	Symbol	pcArgs		3673208						
ANR	3673427	Symbol	NULL		3673208						
ANR	3673428	Symbol	pszInput		3673208						
ANR	3673429	Symbol	lstrlen		3673208						
ANR	3673430	Symbol	ParseToken		3673208						
ANR	3673431	Symbol	_SkipWhiteSpace		3673208						
ANR	3673432	Symbol	cch		3673208						
ANR	3673433	Symbol	GetProcessHeap		3673208						
ANR	3673434	Symbol	* pcArgs		3673208						
ANR	3673435	Symbol	* pArgv		3673208						
ANR	3673436	Symbol	pszToken		3673208						
ANR	3673437	Symbol	cArgs		3673208						
ANR	3673438	Symbol	* pszToken		3673208						
ANR	3673439	Symbol	psz		3673208						
ANR	3673440	Symbol	pArgv		3673208						
ANR	3673441	Symbol	* cArgs		3673208						
ANR	3673442	Symbol	cbAlloc		3673208						
ANR	3673443	Symbol	HeapAlloc		3673208						
