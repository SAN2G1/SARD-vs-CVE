command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	513697	File	data/converged/CVE-2011-4930_htcondor/Reqexp.cpp								
ANR	513698	Function	Reqexp :: Reqexp	31:0:1069:1513							
ANR	513699	FunctionDef	Reqexp :: Reqexp (Resource * res_ip)		513698	0					
ANR	513700	CompoundStatement		32:0:1104:1513	513698	0					
ANR	513701	ExpressionStatement	this -> rip = res_ip	33:1:1107:1125	513698	0	True				
ANR	513702	AssignmentExpression	this -> rip = res_ip		513698	0		=			
ANR	513703	PtrMemberAccess	this -> rip		513698	0					
ANR	513704	Identifier	this		513698	0					
ANR	513705	Identifier	rip		513698	1					
ANR	513706	Identifier	res_ip		513698	1					
ANR	513707	IdentifierDeclStatement	MyString tmp ;	34:1:1128:1140	513698	1	True				
ANR	513708	IdentifierDecl	tmp		513698	0					
ANR	513709	IdentifierDeclType	MyString		513698	0					
ANR	513710	Identifier	tmp		513698	1					
ANR	513711	ExpressionStatement	"tmp . sprintf ( ""%s = (%s) && (%s)"" , ATTR_REQUIREMENTS , ""START"" , ATTR_IS_VALID_CHECKPOINT_PLATFORM )"	36:1:1144:1243	513698	2	True				
ANR	513712	CallExpression	"tmp . sprintf ( ""%s = (%s) && (%s)"" , ATTR_REQUIREMENTS , ""START"" , ATTR_IS_VALID_CHECKPOINT_PLATFORM )"		513698	0					
ANR	513713	Callee	tmp . sprintf		513698	0					
ANR	513714	MemberAccess	tmp . sprintf		513698	0					
ANR	513715	Identifier	tmp		513698	0					
ANR	513716	Identifier	sprintf		513698	1					
ANR	513717	ArgumentList	"""%s = (%s) && (%s)"""		513698	1					
ANR	513718	Argument	"""%s = (%s) && (%s)"""		513698	0					
ANR	513719	PrimaryExpression	"""%s = (%s) && (%s)"""		513698	0					
ANR	513720	Argument	ATTR_REQUIREMENTS		513698	1					
ANR	513721	Identifier	ATTR_REQUIREMENTS		513698	0					
ANR	513722	Argument	"""START"""		513698	2					
ANR	513723	PrimaryExpression	"""START"""		513698	0					
ANR	513724	Argument	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513698	3					
ANR	513725	Identifier	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513698	0					
ANR	513726	IfStatement	if ( Resource :: STANDARD_SLOT != rip -> get_feature ( ) )		513698	3					
ANR	513727	Condition	Resource :: STANDARD_SLOT != rip -> get_feature ( )	39:5:1251:1295	513698	0	True				
ANR	513728	EqualityExpression	Resource :: STANDARD_SLOT != rip -> get_feature ( )		513698	0		!=			
ANR	513729	Identifier	Resource :: STANDARD_SLOT		513698	0					
ANR	513730	CallExpression	rip -> get_feature ( )		513698	1					
ANR	513731	Callee	rip -> get_feature		513698	0					
ANR	513732	PtrMemberAccess	rip -> get_feature		513698	0					
ANR	513733	Identifier	rip		513698	0					
ANR	513734	Identifier	get_feature		513698	1					
ANR	513735	ArgumentList			513698	1					
ANR	513736	CompoundStatement		8:53:194:194	513698	1					
ANR	513737	ExpressionStatement	"tmp . sprintf_cat ( "" && (%s)"" , ATTR_WITHIN_RESOURCE_LIMITS )"	40:2:1303:1361	513698	0	True				
ANR	513738	CallExpression	"tmp . sprintf_cat ( "" && (%s)"" , ATTR_WITHIN_RESOURCE_LIMITS )"		513698	0					
ANR	513739	Callee	tmp . sprintf_cat		513698	0					
ANR	513740	MemberAccess	tmp . sprintf_cat		513698	0					
ANR	513741	Identifier	tmp		513698	0					
ANR	513742	Identifier	sprintf_cat		513698	1					
ANR	513743	ArgumentList	""" && (%s)"""		513698	1					
ANR	513744	Argument	""" && (%s)"""		513698	0					
ANR	513745	PrimaryExpression	""" && (%s)"""		513698	0					
ANR	513746	Argument	ATTR_WITHIN_RESOURCE_LIMITS		513698	1					
ANR	513747	Identifier	ATTR_WITHIN_RESOURCE_LIMITS		513698	0					
ANR	513748	ExpressionStatement	origreqexp = strdup ( tmp . Value ( ) )	43:1:1368:1402	513698	4	True				
ANR	513749	AssignmentExpression	origreqexp = strdup ( tmp . Value ( ) )		513698	0		=			
ANR	513750	Identifier	origreqexp		513698	0					
ANR	513751	CallExpression	strdup ( tmp . Value ( ) )		513698	1					
ANR	513752	Callee	strdup		513698	0					
ANR	513753	Identifier	strdup		513698	0					
ANR	513754	ArgumentList	tmp . Value ( )		513698	1					
ANR	513755	Argument	tmp . Value ( )		513698	0					
ANR	513756	CallExpression	tmp . Value ( )		513698	0					
ANR	513757	Callee	tmp . Value		513698	0					
ANR	513758	MemberAccess	tmp . Value		513698	0					
ANR	513759	Identifier	tmp		513698	0					
ANR	513760	Identifier	Value		513698	1					
ANR	513761	ArgumentList			513698	1					
ANR	513762	ExpressionStatement	origstart = NULL	44:1:1405:1421	513698	5	True				
ANR	513763	AssignmentExpression	origstart = NULL		513698	0		=			
ANR	513764	Identifier	origstart		513698	0					
ANR	513765	Identifier	NULL		513698	1					
ANR	513766	ExpressionStatement	rstate = ORIG_REQ	45:1:1424:1441	513698	6	True				
ANR	513767	AssignmentExpression	rstate = ORIG_REQ		513698	0		=			
ANR	513768	Identifier	rstate		513698	0					
ANR	513769	Identifier	ORIG_REQ		513698	1					
ANR	513770	ExpressionStatement	m_origvalidckptpltfrm = NULL	46:1:1444:1472	513698	7	True				
ANR	513771	AssignmentExpression	m_origvalidckptpltfrm = NULL		513698	0		=			
ANR	513772	Identifier	m_origvalidckptpltfrm		513698	0					
ANR	513773	Identifier	NULL		513698	1					
ANR	513774	ExpressionStatement	m_within_resource_limits_expr = NULL	47:1:1475:1511	513698	8	True				
ANR	513775	AssignmentExpression	m_within_resource_limits_expr = NULL		513698	0		=			
ANR	513776	Identifier	m_within_resource_limits_expr		513698	0					
ANR	513777	Identifier	NULL		513698	1					
ANR	513778	Identifier	Reqexp :: Reqexp		513698	1					
ANR	513779	ParameterList	Resource * res_ip		513698	2					
ANR	513780	Parameter	Resource * res_ip	31:16:1085:1100	513698	0	True				
ANR	513781	ParameterType	Resource *		513698	0					
ANR	513782	Identifier	res_ip		513698	1					
ANR	513783	CFGEntryNode	ENTRY		513698		True				
ANR	513784	CFGExitNode	EXIT		513698		True				
ANR	513785	Symbol	ORIG_REQ		513698						
ANR	513786	Symbol	* rip		513698						
ANR	513787	Symbol	NULL		513698						
ANR	513788	Symbol	m_within_resource_limits_expr		513698						
ANR	513789	Symbol	Resource :: STANDARD_SLOT		513698						
ANR	513790	Symbol	ATTR_REQUIREMENTS		513698						
ANR	513791	Symbol	this		513698						
ANR	513792	Symbol	tmp . Value		513698						
ANR	513793	Symbol	res_ip		513698						
ANR	513794	Symbol	rstate		513698						
ANR	513795	Symbol	ATTR_WITHIN_RESOURCE_LIMITS		513698						
ANR	513796	Symbol	origstart		513698						
ANR	513797	Symbol	* this		513698						
ANR	513798	Symbol	tmp		513698						
ANR	513799	Symbol	this -> rip		513698						
ANR	513800	Symbol	rip		513698						
ANR	513801	Symbol	m_origvalidckptpltfrm		513698						
ANR	513802	Symbol	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513698						
ANR	513803	Symbol	rip -> get_feature		513698						
ANR	513804	Symbol	origreqexp		513698						
ANR	513805	Symbol	strdup		513698						
ANR	513806	Function	Reqexp :: compute	50:0:1516:4174							
ANR	513807	FunctionDef	Reqexp :: compute (amask_t how_much)		513806	0					
ANR	513808	CompoundStatement		52:0:1558:4174	513806	0					
ANR	513809	IdentifierDeclStatement	MyString str ;	53:1:1561:1573	513806	0	True				
ANR	513810	IdentifierDecl	str		513806	0					
ANR	513811	IdentifierDeclType	MyString		513806	0					
ANR	513812	Identifier	str		513806	1					
ANR	513813	IfStatement	if ( IS_STATIC ( how_much ) )		513806	1					
ANR	513814	Condition	IS_STATIC ( how_much )	55:5:1581:1599	513806	0	True				
ANR	513815	CallExpression	IS_STATIC ( how_much )		513806	0					
ANR	513816	Callee	IS_STATIC		513806	0					
ANR	513817	Identifier	IS_STATIC		513806	0					
ANR	513818	ArgumentList	how_much		513806	1					
ANR	513819	Argument	how_much		513806	0					
ANR	513820	Identifier	how_much		513806	0					
ANR	513821	CompoundStatement		5:2:48:78	513806	1					
ANR	513822	IdentifierDeclStatement	"char * start = param ( ""START"" ) ;"	56:2:1607:1637	513806	0	True				
ANR	513823	IdentifierDecl	"* start = param ( ""START"" )"		513806	0					
ANR	513824	IdentifierDeclType	char *		513806	0					
ANR	513825	Identifier	start		513806	1					
ANR	513826	AssignmentExpression	"* start = param ( ""START"" )"		513806	2		=			
ANR	513827	Identifier	start		513806	0					
ANR	513828	CallExpression	"param ( ""START"" )"		513806	1					
ANR	513829	Callee	param		513806	0					
ANR	513830	Identifier	param		513806	0					
ANR	513831	ArgumentList	"""START"""		513806	1					
ANR	513832	Argument	"""START"""		513806	0					
ANR	513833	PrimaryExpression	"""START"""		513806	0					
ANR	513834	IfStatement	if ( ! start )		513806	1					
ANR	513835	Condition	! start	57:6:1645:1650	513806	0	True				
ANR	513836	UnaryOperationExpression	! start		513806	0					
ANR	513837	UnaryOperator	!		513806	0					
ANR	513838	Identifier	start		513806	1					
ANR	513839	CompoundStatement		6:15:95:95	513806	1					
ANR	513840	ExpressionStatement	"EXCEPT ( ""START expression not defined!"" )"	58:3:1659:1700	513806	0	True				
ANR	513841	CallExpression	"EXCEPT ( ""START expression not defined!"" )"		513806	0					
ANR	513842	Callee	EXCEPT		513806	0					
ANR	513843	Identifier	EXCEPT		513806	0					
ANR	513844	ArgumentList	"""START expression not defined!"""		513806	1					
ANR	513845	Argument	"""START expression not defined!"""		513806	0					
ANR	513846	PrimaryExpression	"""START expression not defined!"""		513806	0					
ANR	513847	IfStatement	if ( origstart )		513806	2					
ANR	513848	Condition	origstart	60:6:1712:1720	513806	0	True				
ANR	513849	Identifier	origstart		513806	0					
ANR	513850	CompoundStatement		9:18:165:165	513806	1					
ANR	513851	ExpressionStatement	free ( origstart )	61:3:1729:1746	513806	0	True				
ANR	513852	CallExpression	free ( origstart )		513806	0					
ANR	513853	Callee	free		513806	0					
ANR	513854	Identifier	free		513806	0					
ANR	513855	ArgumentList	origstart		513806	1					
ANR	513856	Argument	origstart		513806	0					
ANR	513857	Identifier	origstart		513806	0					
ANR	513858	ExpressionStatement	"str . sprintf ( ""%s = %s"" , ATTR_START , start )"	64:2:1755:1798	513806	3	True				
ANR	513859	CallExpression	"str . sprintf ( ""%s = %s"" , ATTR_START , start )"		513806	0					
ANR	513860	Callee	str . sprintf		513806	0					
ANR	513861	MemberAccess	str . sprintf		513806	0					
ANR	513862	Identifier	str		513806	0					
ANR	513863	Identifier	sprintf		513806	1					
ANR	513864	ArgumentList	"""%s = %s"""		513806	1					
ANR	513865	Argument	"""%s = %s"""		513806	0					
ANR	513866	PrimaryExpression	"""%s = %s"""		513806	0					
ANR	513867	Argument	ATTR_START		513806	1					
ANR	513868	Identifier	ATTR_START		513806	0					
ANR	513869	Argument	start		513806	2					
ANR	513870	Identifier	start		513806	0					
ANR	513871	ExpressionStatement	origstart = strdup ( str . Value ( ) )	66:2:1803:1836	513806	4	True				
ANR	513872	AssignmentExpression	origstart = strdup ( str . Value ( ) )		513806	0		=			
ANR	513873	Identifier	origstart		513806	0					
ANR	513874	CallExpression	strdup ( str . Value ( ) )		513806	1					
ANR	513875	Callee	strdup		513806	0					
ANR	513876	Identifier	strdup		513806	0					
ANR	513877	ArgumentList	str . Value ( )		513806	1					
ANR	513878	Argument	str . Value ( )		513806	0					
ANR	513879	CallExpression	str . Value ( )		513806	0					
ANR	513880	Callee	str . Value		513806	0					
ANR	513881	MemberAccess	str . Value		513806	0					
ANR	513882	Identifier	str		513806	0					
ANR	513883	Identifier	Value		513806	1					
ANR	513884	ArgumentList			513806	1					
ANR	513885	ExpressionStatement	free ( start )	68:2:1841:1854	513806	5	True				
ANR	513886	CallExpression	free ( start )		513806	0					
ANR	513887	Callee	free		513806	0					
ANR	513888	Identifier	free		513806	0					
ANR	513889	ArgumentList	start		513806	1					
ANR	513890	Argument	start		513806	0					
ANR	513891	Identifier	start		513806	0					
ANR	513892	IfStatement	if ( IS_STATIC ( how_much ) )		513806	2					
ANR	513893	Condition	IS_STATIC ( how_much )	71:5:1865:1883	513806	0	True				
ANR	513894	CallExpression	IS_STATIC ( how_much )		513806	0					
ANR	513895	Callee	IS_STATIC		513806	0					
ANR	513896	Identifier	IS_STATIC		513806	0					
ANR	513897	ArgumentList	how_much		513806	1					
ANR	513898	Argument	how_much		513806	0					
ANR	513899	Identifier	how_much		513806	0					
ANR	513900	CompoundStatement		79:2:1911:1959	513806	1					
ANR	513901	IfStatement	if ( m_origvalidckptpltfrm != NULL )		513806	0					
ANR	513902	Condition	m_origvalidckptpltfrm != NULL	73:6:1896:1924	513806	0	True				
ANR	513903	EqualityExpression	m_origvalidckptpltfrm != NULL		513806	0		!=			
ANR	513904	Identifier	m_origvalidckptpltfrm		513806	0					
ANR	513905	Identifier	NULL		513806	1					
ANR	513906	CompoundStatement		22:37:368:368	513806	1					
ANR	513907	ExpressionStatement	free ( m_origvalidckptpltfrm )	74:3:1932:1959	513806	0	True				
ANR	513908	CallExpression	free ( m_origvalidckptpltfrm )		513806	0					
ANR	513909	Callee	free		513806	0					
ANR	513910	Identifier	free		513806	0					
ANR	513911	ArgumentList	m_origvalidckptpltfrm		513806	1					
ANR	513912	Argument	m_origvalidckptpltfrm		513806	0					
ANR	513913	Identifier	m_origvalidckptpltfrm		513806	0					
ANR	513914	ExpressionStatement	m_origvalidckptpltfrm = NULL	75:3:1964:1992	513806	1	True				
ANR	513915	AssignmentExpression	m_origvalidckptpltfrm = NULL		513806	0		=			
ANR	513916	Identifier	m_origvalidckptpltfrm		513806	0					
ANR	513917	Identifier	NULL		513806	1					
ANR	513918	IdentifierDeclStatement	"char * vcp = param ( ""IS_VALID_CHECKPOINT_PLATFORM"" ) ;"	78:2:2001:2052	513806	1	True				
ANR	513919	IdentifierDecl	"* vcp = param ( ""IS_VALID_CHECKPOINT_PLATFORM"" )"		513806	0					
ANR	513920	IdentifierDeclType	char *		513806	0					
ANR	513921	Identifier	vcp		513806	1					
ANR	513922	AssignmentExpression	"* vcp = param ( ""IS_VALID_CHECKPOINT_PLATFORM"" )"		513806	2		=			
ANR	513923	Identifier	vcp		513806	0					
ANR	513924	CallExpression	"param ( ""IS_VALID_CHECKPOINT_PLATFORM"" )"		513806	1					
ANR	513925	Callee	param		513806	0					
ANR	513926	Identifier	param		513806	0					
ANR	513927	ArgumentList	"""IS_VALID_CHECKPOINT_PLATFORM"""		513806	1					
ANR	513928	Argument	"""IS_VALID_CHECKPOINT_PLATFORM"""		513806	0					
ANR	513929	PrimaryExpression	"""IS_VALID_CHECKPOINT_PLATFORM"""		513806	0					
ANR	513930	IfStatement	if ( vcp != NULL )		513806	2					
ANR	513931	Condition	vcp != NULL	79:6:2060:2070	513806	0	True				
ANR	513932	EqualityExpression	vcp != NULL		513806	0		!=			
ANR	513933	Identifier	vcp		513806	0					
ANR	513934	Identifier	NULL		513806	1					
ANR	513935	CompoundStatement		28:19:514:514	513806	1					
ANR	513936	ExpressionStatement	"str . sprintf ( ""%s = %s"" , ATTR_IS_VALID_CHECKPOINT_PLATFORM , vcp )"	82:3:2122:2184	513806	0	True				
ANR	513937	CallExpression	"str . sprintf ( ""%s = %s"" , ATTR_IS_VALID_CHECKPOINT_PLATFORM , vcp )"		513806	0					
ANR	513938	Callee	str . sprintf		513806	0					
ANR	513939	MemberAccess	str . sprintf		513806	0					
ANR	513940	Identifier	str		513806	0					
ANR	513941	Identifier	sprintf		513806	1					
ANR	513942	ArgumentList	"""%s = %s"""		513806	1					
ANR	513943	Argument	"""%s = %s"""		513806	0					
ANR	513944	PrimaryExpression	"""%s = %s"""		513806	0					
ANR	513945	Argument	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513806	1					
ANR	513946	Identifier	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513806	0					
ANR	513947	Argument	vcp		513806	2					
ANR	513948	Identifier	vcp		513806	0					
ANR	513949	ExpressionStatement	m_origvalidckptpltfrm = strdup ( str . Value ( ) )	84:3:2190:2235	513806	1	True				
ANR	513950	AssignmentExpression	m_origvalidckptpltfrm = strdup ( str . Value ( ) )		513806	0		=			
ANR	513951	Identifier	m_origvalidckptpltfrm		513806	0					
ANR	513952	CallExpression	strdup ( str . Value ( ) )		513806	1					
ANR	513953	Callee	strdup		513806	0					
ANR	513954	Identifier	strdup		513806	0					
ANR	513955	ArgumentList	str . Value ( )		513806	1					
ANR	513956	Argument	str . Value ( )		513806	0					
ANR	513957	CallExpression	str . Value ( )		513806	0					
ANR	513958	Callee	str . Value		513806	0					
ANR	513959	MemberAccess	str . Value		513806	0					
ANR	513960	Identifier	str		513806	0					
ANR	513961	Identifier	Value		513806	1					
ANR	513962	ArgumentList			513806	1					
ANR	513963	ExpressionStatement	free ( vcp )	86:3:2241:2250	513806	2	True				
ANR	513964	CallExpression	free ( vcp )		513806	0					
ANR	513965	Callee	free		513806	0					
ANR	513966	Identifier	free		513806	0					
ANR	513967	ArgumentList	vcp		513806	1					
ANR	513968	Argument	vcp		513806	0					
ANR	513969	Identifier	vcp		513806	0					
ANR	513970	ElseStatement	else		513806	0					
ANR	513971	CompoundStatement		37:9:703:703	513806	0					
ANR	513972	Statement	const	107:3:2909:2913	513806	0	True				
ANR	513973	Statement	char	107:9:2915:2918	513806	1	True				
ANR	513974	Statement	*	107:14:2920:2920	513806	2	True				
ANR	513975	Statement	default_vcp_expr	107:15:2921:2936	513806	3	True				
ANR	513976	Statement	=	107:32:2938:2938	513806	4	True				
ANR	513977	Statement	"""("""	108:3:2944:2946	513806	5	True				
ANR	513978	Statement	"""TARGET.JobUniverse =!= 1 || """	109:5:2953:2982	513806	6	True				
ANR	513979	Statement	"""("""	110:5:2989:2991	513806	7	True				
ANR	513980	Statement	"""(MY.CheckpointPlatform =!= UNDEFINED) &&"""	111:7:3000:3041	513806	8	True				
ANR	513981	Statement	"""("""	112:7:3050:3052	513806	9	True				
ANR	513982	Statement	"""(TARGET.LastCheckpointPlatform =?= MY.CheckpointPlatform) ||"""	113:9:3063:3124	513806	10	True				
ANR	513983	Statement	"""(TARGET.NumCkpts == 0)"""	114:9:3135:3158	513806	11	True				
ANR	513984	Statement	""")"""	115:7:3167:3169	513806	12	True				
ANR	513985	Statement	""")"""	116:5:3176:3178	513806	13	True				
ANR	513986	ExpressionStatement	""")"""	117:3:3183:3186	513806	14	True				
ANR	513987	PrimaryExpression	""")"""		513806	0					
ANR	513988	ExpressionStatement	"str . sprintf ( ""%s = %s"" , ATTR_IS_VALID_CHECKPOINT_PLATFORM , default_vcp_expr )"	119:3:3195:3276	513806	15	True				
ANR	513989	CallExpression	"str . sprintf ( ""%s = %s"" , ATTR_IS_VALID_CHECKPOINT_PLATFORM , default_vcp_expr )"		513806	0					
ANR	513990	Callee	str . sprintf		513806	0					
ANR	513991	MemberAccess	str . sprintf		513806	0					
ANR	513992	Identifier	str		513806	0					
ANR	513993	Identifier	sprintf		513806	1					
ANR	513994	ArgumentList	"""%s = %s"""		513806	1					
ANR	513995	Argument	"""%s = %s"""		513806	0					
ANR	513996	PrimaryExpression	"""%s = %s"""		513806	0					
ANR	513997	Argument	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513806	1					
ANR	513998	Identifier	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513806	0					
ANR	513999	Argument	default_vcp_expr		513806	2					
ANR	514000	Identifier	default_vcp_expr		513806	0					
ANR	514001	ExpressionStatement	m_origvalidckptpltfrm = strdup ( str . Value ( ) )	122:3:3282:3327	513806	16	True				
ANR	514002	AssignmentExpression	m_origvalidckptpltfrm = strdup ( str . Value ( ) )		513806	0		=			
ANR	514003	Identifier	m_origvalidckptpltfrm		513806	0					
ANR	514004	CallExpression	strdup ( str . Value ( ) )		513806	1					
ANR	514005	Callee	strdup		513806	0					
ANR	514006	Identifier	strdup		513806	0					
ANR	514007	ArgumentList	str . Value ( )		513806	1					
ANR	514008	Argument	str . Value ( )		513806	0					
ANR	514009	CallExpression	str . Value ( )		513806	0					
ANR	514010	Callee	str . Value		513806	0					
ANR	514011	MemberAccess	str . Value		513806	0					
ANR	514012	Identifier	str		513806	0					
ANR	514013	Identifier	Value		513806	1					
ANR	514014	ArgumentList			513806	1					
ANR	514015	IfStatement	if ( m_within_resource_limits_expr != NULL )		513806	3					
ANR	514016	Condition	m_within_resource_limits_expr != NULL	125:6:3340:3376	513806	0	True				
ANR	514017	EqualityExpression	m_within_resource_limits_expr != NULL		513806	0		!=			
ANR	514018	Identifier	m_within_resource_limits_expr		513806	0					
ANR	514019	Identifier	NULL		513806	1					
ANR	514020	CompoundStatement		74:46:1821:1821	513806	1					
ANR	514021	ExpressionStatement	free ( m_within_resource_limits_expr )	126:3:3385:3420	513806	0	True				
ANR	514022	CallExpression	free ( m_within_resource_limits_expr )		513806	0					
ANR	514023	Callee	free		513806	0					
ANR	514024	Identifier	free		513806	0					
ANR	514025	ArgumentList	m_within_resource_limits_expr		513806	1					
ANR	514026	Argument	m_within_resource_limits_expr		513806	0					
ANR	514027	Identifier	m_within_resource_limits_expr		513806	0					
ANR	514028	ExpressionStatement	m_within_resource_limits_expr = NULL	127:3:3425:3461	513806	1	True				
ANR	514029	AssignmentExpression	m_within_resource_limits_expr = NULL		513806	0		=			
ANR	514030	Identifier	m_within_resource_limits_expr		513806	0					
ANR	514031	Identifier	NULL		513806	1					
ANR	514032	IdentifierDeclStatement	char * tmp = param ( ATTR_WITHIN_RESOURCE_LIMITS ) ;	130:2:3470:3518	513806	4	True				
ANR	514033	IdentifierDecl	* tmp = param ( ATTR_WITHIN_RESOURCE_LIMITS )		513806	0					
ANR	514034	IdentifierDeclType	char *		513806	0					
ANR	514035	Identifier	tmp		513806	1					
ANR	514036	AssignmentExpression	* tmp = param ( ATTR_WITHIN_RESOURCE_LIMITS )		513806	2		=			
ANR	514037	Identifier	tmp		513806	0					
ANR	514038	CallExpression	param ( ATTR_WITHIN_RESOURCE_LIMITS )		513806	1					
ANR	514039	Callee	param		513806	0					
ANR	514040	Identifier	param		513806	0					
ANR	514041	ArgumentList	ATTR_WITHIN_RESOURCE_LIMITS		513806	1					
ANR	514042	Argument	ATTR_WITHIN_RESOURCE_LIMITS		513806	0					
ANR	514043	Identifier	ATTR_WITHIN_RESOURCE_LIMITS		513806	0					
ANR	514044	IfStatement	if ( tmp != NULL )		513806	5					
ANR	514045	Condition	tmp != NULL	131:6:3526:3536	513806	0	True				
ANR	514046	EqualityExpression	tmp != NULL		513806	0		!=			
ANR	514047	Identifier	tmp		513806	0					
ANR	514048	Identifier	NULL		513806	1					
ANR	514049	CompoundStatement		80:20:1981:1981	513806	1					
ANR	514050	ExpressionStatement	m_within_resource_limits_expr = strdup ( tmp )	132:3:3545:3590	513806	0	True				
ANR	514051	AssignmentExpression	m_within_resource_limits_expr = strdup ( tmp )		513806	0		=			
ANR	514052	Identifier	m_within_resource_limits_expr		513806	0					
ANR	514053	CallExpression	strdup ( tmp )		513806	1					
ANR	514054	Callee	strdup		513806	0					
ANR	514055	Identifier	strdup		513806	0					
ANR	514056	ArgumentList	tmp		513806	1					
ANR	514057	Argument	tmp		513806	0					
ANR	514058	Identifier	tmp		513806	0					
ANR	514059	ExpressionStatement	free ( tmp )	133:3:3595:3604	513806	1	True				
ANR	514060	CallExpression	free ( tmp )		513806	0					
ANR	514061	Callee	free		513806	0					
ANR	514062	Identifier	free		513806	0					
ANR	514063	ArgumentList	tmp		513806	1					
ANR	514064	Argument	tmp		513806	0					
ANR	514065	Identifier	tmp		513806	0					
ANR	514066	ElseStatement	else		513806	0					
ANR	514067	CompoundStatement		83:9:2056:2056	513806	0					
ANR	514068	Statement	tmp	135:3:3620:3622	513806	0	True				
ANR	514069	Statement	=	135:7:3624:3624	513806	1	True				
ANR	514070	Statement	const_cast	135:9:3626:3635	513806	2	True				
ANR	514071	Statement	<	135:19:3636:3636	513806	3	True				
ANR	514072	Statement	char	135:20:3637:3640	513806	4	True				
ANR	514073	Statement	*	135:24:3641:3641	513806	5	True				
ANR	514074	Statement	>	135:25:3642:3642	513806	6	True				
ANR	514075	Statement	(	135:26:3643:3643	513806	7	True				
ANR	514076	Statement	"""("""	136:4:3649:3651	513806	8	True				
ANR	514077	Statement	"""ifThenElse(TARGET.RequestCpus =!= UNDEFINED,"""	137:5:3658:3703	513806	9	True				
ANR	514078	Statement	"""MY.Cpus > 0 && TARGET.RequestCpus <= MY.Cpus,"""	138:15:3720:3766	513806	10	True				
ANR	514079	Statement	"""1 <= MY.Cpus)"""	139:15:3783:3797	513806	11	True				
ANR	514080	Statement	""" && """	140:4:3803:3808	513806	12	True				
ANR	514081	Statement	"""ifThenElse(TARGET.RequestMemory =!= UNDEFINED,"""	141:5:3815:3862	513806	13	True				
ANR	514082	Statement	"""MY.Memory > 0 && TARGET.RequestMemory <= MY.Memory,"""	142:15:3879:3931	513806	14	True				
ANR	514083	Statement	"""FALSE)"""	143:15:3948:3955	513806	15	True				
ANR	514084	Statement	""" && """	144:4:3961:3966	513806	16	True				
ANR	514085	Statement	"""ifThenElse(TARGET.RequestDisk =!= UNDEFINED,"""	145:5:3973:4018	513806	17	True				
ANR	514086	Statement	"""MY.Disk > 0 && TARGET.RequestDisk <= MY.Disk,"""	146:15:4035:4081	513806	18	True				
ANR	514087	Statement	"""FALSE)"""	147:15:4098:4105	513806	19	True				
ANR	514088	Statement	""")"""	148:4:4111:4113	513806	20	True				
ANR	514089	Statement	)	148:7:4114:4114	513806	21	True				
ANR	514090	ExpressionStatement		148:8:4115:4115	513806	22	True				
ANR	514091	ExpressionStatement	m_within_resource_limits_expr = strdup ( tmp )	149:3:4120:4165	513806	23	True				
ANR	514092	AssignmentExpression	m_within_resource_limits_expr = strdup ( tmp )		513806	0		=			
ANR	514093	Identifier	m_within_resource_limits_expr		513806	0					
ANR	514094	CallExpression	strdup ( tmp )		513806	1					
ANR	514095	Callee	strdup		513806	0					
ANR	514096	Identifier	strdup		513806	0					
ANR	514097	ArgumentList	tmp		513806	1					
ANR	514098	Argument	tmp		513806	0					
ANR	514099	Identifier	tmp		513806	0					
ANR	514100	ReturnType	void		513806	1					
ANR	514101	Identifier	Reqexp :: compute		513806	2					
ANR	514102	ParameterList	amask_t how_much		513806	3					
ANR	514103	Parameter	amask_t how_much	51:17:1538:1553	513806	0	True				
ANR	514104	ParameterType	amask_t		513806	0					
ANR	514105	Identifier	how_much		513806	1					
ANR	514106	CFGEntryNode	ENTRY		513806		True				
ANR	514107	CFGExitNode	EXIT		513806		True				
ANR	514108	Symbol	vcp		513806						
ANR	514109	Symbol	NULL		513806						
ANR	514110	Symbol	m_within_resource_limits_expr		513806						
ANR	514111	Symbol	ATTR_START		513806						
ANR	514112	Symbol	start		513806						
ANR	514113	Symbol	default_vcp_expr		513806						
ANR	514114	Symbol	ATTR_WITHIN_RESOURCE_LIMITS		513806						
ANR	514115	Symbol	origstart		513806						
ANR	514116	Symbol	how_much		513806						
ANR	514117	Symbol	str		513806						
ANR	514118	Symbol	param		513806						
ANR	514119	Symbol	str . Value		513806						
ANR	514120	Symbol	IS_STATIC		513806						
ANR	514121	Symbol	tmp		513806						
ANR	514122	Symbol	m_origvalidckptpltfrm		513806						
ANR	514123	Symbol	ATTR_IS_VALID_CHECKPOINT_PLATFORM		513806						
ANR	514124	Symbol	strdup		513806						
ANR	514125	Function	Reqexp :: ~Reqexp	155:0:4178:4408							
ANR	514126	FunctionDef	Reqexp :: ~Reqexp ()		514125	0					
ANR	514127	CompoundStatement		156:0:4196:4408	514125	0					
ANR	514128	IfStatement	if ( origreqexp )		514125	0					
ANR	514129	Condition	origreqexp	157:5:4203:4212	514125	0	True				
ANR	514130	Identifier	origreqexp		514125	0					
ANR	514131	ExpressionStatement	free ( origreqexp )	157:18:4216:4234	514125	1	True				
ANR	514132	CallExpression	free ( origreqexp )		514125	0					
ANR	514133	Callee	free		514125	0					
ANR	514134	Identifier	free		514125	0					
ANR	514135	ArgumentList	origreqexp		514125	1					
ANR	514136	Argument	origreqexp		514125	0					
ANR	514137	Identifier	origreqexp		514125	0					
ANR	514138	IfStatement	if ( origstart )		514125	1					
ANR	514139	Condition	origstart	158:5:4241:4249	514125	0	True				
ANR	514140	Identifier	origstart		514125	0					
ANR	514141	ExpressionStatement	free ( origstart )	158:17:4253:4270	514125	1	True				
ANR	514142	CallExpression	free ( origstart )		514125	0					
ANR	514143	Callee	free		514125	0					
ANR	514144	Identifier	free		514125	0					
ANR	514145	ArgumentList	origstart		514125	1					
ANR	514146	Argument	origstart		514125	0					
ANR	514147	Identifier	origstart		514125	0					
ANR	514148	IfStatement	if ( m_origvalidckptpltfrm )		514125	2					
ANR	514149	Condition	m_origvalidckptpltfrm	159:5:4277:4297	514125	0	True				
ANR	514150	Identifier	m_origvalidckptpltfrm		514125	0					
ANR	514151	ExpressionStatement	free ( m_origvalidckptpltfrm )	159:29:4301:4330	514125	1	True				
ANR	514152	CallExpression	free ( m_origvalidckptpltfrm )		514125	0					
ANR	514153	Callee	free		514125	0					
ANR	514154	Identifier	free		514125	0					
ANR	514155	ArgumentList	m_origvalidckptpltfrm		514125	1					
ANR	514156	Argument	m_origvalidckptpltfrm		514125	0					
ANR	514157	Identifier	m_origvalidckptpltfrm		514125	0					
ANR	514158	IfStatement	if ( m_within_resource_limits_expr )		514125	3					
ANR	514159	Condition	m_within_resource_limits_expr	160:5:4337:4365	514125	0	True				
ANR	514160	Identifier	m_within_resource_limits_expr		514125	0					
ANR	514161	ExpressionStatement	free ( m_within_resource_limits_expr )	160:37:4369:4406	514125	1	True				
ANR	514162	CallExpression	free ( m_within_resource_limits_expr )		514125	0					
ANR	514163	Callee	free		514125	0					
ANR	514164	Identifier	free		514125	0					
ANR	514165	ArgumentList	m_within_resource_limits_expr		514125	1					
ANR	514166	Argument	m_within_resource_limits_expr		514125	0					
ANR	514167	Identifier	m_within_resource_limits_expr		514125	0					
ANR	514168	Identifier	Reqexp :: ~Reqexp		514125	1					
ANR	514169	ParameterList			514125	2					
ANR	514170	CFGEntryNode	ENTRY		514125		True				
ANR	514171	CFGExitNode	EXIT		514125		True				
ANR	514172	Symbol	m_within_resource_limits_expr		514125						
ANR	514173	Symbol	m_origvalidckptpltfrm		514125						
ANR	514174	Symbol	origreqexp		514125						
ANR	514175	Symbol	origstart		514125						
ANR	514176	Function	Reqexp :: restore	164:0:4412:4935							
ANR	514177	FunctionDef	Reqexp :: restore ()		514176	0					
ANR	514178	CompoundStatement		166:0:4435:4935	514176	0					
ANR	514179	IfStatement	if ( rip -> isSuspendedForCOD ( ) )		514176	0					
ANR	514180	Condition	rip -> isSuspendedForCOD ( )	167:8:4446:4469	514176	0	True				
ANR	514181	CallExpression	rip -> isSuspendedForCOD ( )		514176	0					
ANR	514182	Callee	rip -> isSuspendedForCOD		514176	0					
ANR	514183	PtrMemberAccess	rip -> isSuspendedForCOD		514176	0					
ANR	514184	Identifier	rip		514176	0					
ANR	514185	Identifier	isSuspendedForCOD		514176	1					
ANR	514186	ArgumentList			514176	1					
ANR	514187	CompoundStatement		2:35:37:37	514176	1					
ANR	514188	IfStatement	if ( rstate != COD_REQ )		514176	0					
ANR	514189	Condition	rstate != COD_REQ	168:6:4481:4497	514176	0	True				
ANR	514190	EqualityExpression	rstate != COD_REQ		514176	0		!=			
ANR	514191	Identifier	rstate		514176	0					
ANR	514192	Identifier	COD_REQ		514176	1					
ANR	514193	CompoundStatement		3:26:65:65	514176	1					
ANR	514194	ExpressionStatement	rstate = COD_REQ	169:3:4506:4522	514176	0	True				
ANR	514195	AssignmentExpression	rstate = COD_REQ		514176	0		=			
ANR	514196	Identifier	rstate		514176	0					
ANR	514197	Identifier	COD_REQ		514176	1					
ANR	514198	ExpressionStatement	"publish ( rip -> r_classad , A_PUBLIC )"	170:3:4527:4562	514176	1	True				
ANR	514199	CallExpression	"publish ( rip -> r_classad , A_PUBLIC )"		514176	0					
ANR	514200	Callee	publish		514176	0					
ANR	514201	Identifier	publish		514176	0					
ANR	514202	ArgumentList	rip -> r_classad		514176	1					
ANR	514203	Argument	rip -> r_classad		514176	0					
ANR	514204	PtrMemberAccess	rip -> r_classad		514176	0					
ANR	514205	Identifier	rip		514176	0					
ANR	514206	Identifier	r_classad		514176	1					
ANR	514207	Argument	A_PUBLIC		514176	1					
ANR	514208	Identifier	A_PUBLIC		514176	0					
ANR	514209	ReturnStatement	return true ;	171:3:4567:4578	514176	2	True				
ANR	514210	Identifier	true		514176	0					
ANR	514211	ElseStatement	else		514176	0					
ANR	514212	CompoundStatement		7:9:153:153	514176	0					
ANR	514213	ReturnStatement	return false ;	173:3:4594:4606	514176	0	True				
ANR	514214	Identifier	false		514176	0					
ANR	514215	ElseStatement	else		514176	0					
ANR	514216	CompoundStatement		10:8:184:184	514176	0					
ANR	514217	ExpressionStatement	rip -> r_classad -> Delete ( ATTR_RUNNING_COD_JOB )	176:2:4624:4670	514176	0	True				
ANR	514218	CallExpression	rip -> r_classad -> Delete ( ATTR_RUNNING_COD_JOB )		514176	0					
ANR	514219	Callee	rip -> r_classad -> Delete		514176	0					
ANR	514220	PtrMemberAccess	rip -> r_classad -> Delete		514176	0					
ANR	514221	PtrMemberAccess	rip -> r_classad		514176	0					
ANR	514222	Identifier	rip		514176	0					
ANR	514223	Identifier	r_classad		514176	1					
ANR	514224	Identifier	Delete		514176	1					
ANR	514225	ArgumentList	ATTR_RUNNING_COD_JOB		514176	1					
ANR	514226	Argument	ATTR_RUNNING_COD_JOB		514176	0					
ANR	514227	Identifier	ATTR_RUNNING_COD_JOB		514176	0					
ANR	514228	IfStatement	if ( resmgr -> isShuttingDown ( ) || rip -> isDraining ( ) )		514176	1					
ANR	514229	Condition	resmgr -> isShuttingDown ( ) || rip -> isDraining ( )	178:5:4680:4724	514176	0	True				
ANR	514230	OrExpression	resmgr -> isShuttingDown ( ) || rip -> isDraining ( )		514176	0		||			
ANR	514231	CallExpression	resmgr -> isShuttingDown ( )		514176	0					
ANR	514232	Callee	resmgr -> isShuttingDown		514176	0					
ANR	514233	PtrMemberAccess	resmgr -> isShuttingDown		514176	0					
ANR	514234	Identifier	resmgr		514176	0					
ANR	514235	Identifier	isShuttingDown		514176	1					
ANR	514236	ArgumentList			514176	1					
ANR	514237	CallExpression	rip -> isDraining ( )		514176	1					
ANR	514238	Callee	rip -> isDraining		514176	0					
ANR	514239	PtrMemberAccess	rip -> isDraining		514176	0					
ANR	514240	Identifier	rip		514176	0					
ANR	514241	Identifier	isDraining		514176	1					
ANR	514242	ArgumentList			514176	1					
ANR	514243	CompoundStatement		13:53:292:292	514176	1					
ANR	514244	IfStatement	if ( rstate != UNAVAIL_REQ )		514176	0					
ANR	514245	Condition	rstate != UNAVAIL_REQ	179:6:4736:4756	514176	0	True				
ANR	514246	EqualityExpression	rstate != UNAVAIL_REQ		514176	0		!=			
ANR	514247	Identifier	rstate		514176	0					
ANR	514248	Identifier	UNAVAIL_REQ		514176	1					
ANR	514249	CompoundStatement		14:30:324:324	514176	1					
ANR	514250	ExpressionStatement	unavail ( )	180:3:4765:4774	514176	0	True				
ANR	514251	CallExpression	unavail ( )		514176	0					
ANR	514252	Callee	unavail		514176	0					
ANR	514253	Identifier	unavail		514176	0					
ANR	514254	ArgumentList			514176	1					
ANR	514255	ReturnStatement	return true ;	181:3:4779:4790	514176	1	True				
ANR	514256	Identifier	true		514176	0					
ANR	514257	ReturnStatement	return false ;	183:2:4798:4810	514176	1	True				
ANR	514258	Identifier	false		514176	0					
ANR	514259	IfStatement	if ( rstate != ORIG_REQ )		514176	2					
ANR	514260	Condition	rstate != ORIG_REQ	185:5:4820:4837	514176	0	True				
ANR	514261	EqualityExpression	rstate != ORIG_REQ		514176	0		!=			
ANR	514262	Identifier	rstate		514176	0					
ANR	514263	Identifier	ORIG_REQ		514176	1					
ANR	514264	CompoundStatement		20:25:404:404	514176	1					
ANR	514265	ExpressionStatement	rstate = ORIG_REQ	186:2:4844:4861	514176	0	True				
ANR	514266	AssignmentExpression	rstate = ORIG_REQ		514176	0		=			
ANR	514267	Identifier	rstate		514176	0					
ANR	514268	Identifier	ORIG_REQ		514176	1					
ANR	514269	ExpressionStatement	"publish ( rip -> r_classad , A_PUBLIC )"	187:2:4865:4900	514176	1	True				
ANR	514270	CallExpression	"publish ( rip -> r_classad , A_PUBLIC )"		514176	0					
ANR	514271	Callee	publish		514176	0					
ANR	514272	Identifier	publish		514176	0					
ANR	514273	ArgumentList	rip -> r_classad		514176	1					
ANR	514274	Argument	rip -> r_classad		514176	0					
ANR	514275	PtrMemberAccess	rip -> r_classad		514176	0					
ANR	514276	Identifier	rip		514176	0					
ANR	514277	Identifier	r_classad		514176	1					
ANR	514278	Argument	A_PUBLIC		514176	1					
ANR	514279	Identifier	A_PUBLIC		514176	0					
ANR	514280	ReturnStatement	return true ;	188:2:4904:4915	514176	2	True				
ANR	514281	Identifier	true		514176	0					
ANR	514282	ReturnStatement	return false ;	190:1:4921:4933	514176	3	True				
ANR	514283	Identifier	false		514176	0					
ANR	514284	ReturnType	bool		514176	1					
ANR	514285	Identifier	Reqexp :: restore		514176	2					
ANR	514286	ParameterList			514176	3					
ANR	514287	CFGEntryNode	ENTRY		514176		True				
ANR	514288	CFGExitNode	EXIT		514176		True				
ANR	514289	Symbol	UNAVAIL_REQ		514176						
ANR	514290	Symbol	ORIG_REQ		514176						
ANR	514291	Symbol	* rip		514176						
ANR	514292	Symbol	false		514176						
ANR	514293	Symbol	* resmgr		514176						
ANR	514294	Symbol	rip -> isSuspendedForCOD		514176						
ANR	514295	Symbol	A_PUBLIC		514176						
ANR	514296	Symbol	rstate		514176						
ANR	514297	Symbol	COD_REQ		514176						
ANR	514298	Symbol	rip -> r_classad		514176						
ANR	514299	Symbol	ATTR_RUNNING_COD_JOB		514176						
ANR	514300	Symbol	resmgr		514176						
ANR	514301	Symbol	rip -> isDraining		514176						
ANR	514302	Symbol	rip		514176						
ANR	514303	Symbol	true		514176						
ANR	514304	Symbol	resmgr -> isShuttingDown		514176						
ANR	514305	Function	Reqexp :: unavail	194:0:4939:5166							
ANR	514306	FunctionDef	Reqexp :: unavail ()		514305	0					
ANR	514307	CompoundStatement		196:0:4963:5166	514305	0					
ANR	514308	IfStatement	if ( rip -> isSuspendedForCOD ( ) )		514305	0					
ANR	514309	Condition	rip -> isSuspendedForCOD ( )	197:5:4970:4993	514305	0	True				
ANR	514310	CallExpression	rip -> isSuspendedForCOD ( )		514305	0					
ANR	514311	Callee	rip -> isSuspendedForCOD		514305	0					
ANR	514312	PtrMemberAccess	rip -> isSuspendedForCOD		514305	0					
ANR	514313	Identifier	rip		514305	0					
ANR	514314	Identifier	isSuspendedForCOD		514305	1					
ANR	514315	ArgumentList			514305	1					
ANR	514316	CompoundStatement		2:32:33:33	514305	1					
ANR	514317	IfStatement	if ( rstate != COD_REQ )		514305	0					
ANR	514318	Condition	rstate != COD_REQ	198:6:5005:5021	514305	0	True				
ANR	514319	EqualityExpression	rstate != COD_REQ		514305	0		!=			
ANR	514320	Identifier	rstate		514305	0					
ANR	514321	Identifier	COD_REQ		514305	1					
ANR	514322	CompoundStatement		3:26:61:61	514305	1					
ANR	514323	ExpressionStatement	rstate = COD_REQ	199:3:5030:5046	514305	0	True				
ANR	514324	AssignmentExpression	rstate = COD_REQ		514305	0		=			
ANR	514325	Identifier	rstate		514305	0					
ANR	514326	Identifier	COD_REQ		514305	1					
ANR	514327	ExpressionStatement	"publish ( rip -> r_classad , A_PUBLIC )"	200:3:5051:5086	514305	1	True				
ANR	514328	CallExpression	"publish ( rip -> r_classad , A_PUBLIC )"		514305	0					
ANR	514329	Callee	publish		514305	0					
ANR	514330	Identifier	publish		514305	0					
ANR	514331	ArgumentList	rip -> r_classad		514305	1					
ANR	514332	Argument	rip -> r_classad		514305	0					
ANR	514333	PtrMemberAccess	rip -> r_classad		514305	0					
ANR	514334	Identifier	rip		514305	0					
ANR	514335	Identifier	r_classad		514305	1					
ANR	514336	Argument	A_PUBLIC		514305	1					
ANR	514337	Identifier	A_PUBLIC		514305	0					
ANR	514338	ReturnStatement	return ;	202:2:5094:5100	514305	1	True				
ANR	514339	ExpressionStatement	rstate = UNAVAIL_REQ	204:1:5106:5126	514305	1	True				
ANR	514340	AssignmentExpression	rstate = UNAVAIL_REQ		514305	0		=			
ANR	514341	Identifier	rstate		514305	0					
ANR	514342	Identifier	UNAVAIL_REQ		514305	1					
ANR	514343	ExpressionStatement	"publish ( rip -> r_classad , A_PUBLIC )"	205:1:5129:5164	514305	2	True				
ANR	514344	CallExpression	"publish ( rip -> r_classad , A_PUBLIC )"		514305	0					
ANR	514345	Callee	publish		514305	0					
ANR	514346	Identifier	publish		514305	0					
ANR	514347	ArgumentList	rip -> r_classad		514305	1					
ANR	514348	Argument	rip -> r_classad		514305	0					
ANR	514349	PtrMemberAccess	rip -> r_classad		514305	0					
ANR	514350	Identifier	rip		514305	0					
ANR	514351	Identifier	r_classad		514305	1					
ANR	514352	Argument	A_PUBLIC		514305	1					
ANR	514353	Identifier	A_PUBLIC		514305	0					
ANR	514354	ReturnType	void		514305	1					
ANR	514355	Identifier	Reqexp :: unavail		514305	2					
ANR	514356	ParameterList			514305	3					
ANR	514357	CFGEntryNode	ENTRY		514305		True				
ANR	514358	CFGExitNode	EXIT		514305		True				
ANR	514359	Symbol	UNAVAIL_REQ		514305						
ANR	514360	Symbol	* rip		514305						
ANR	514361	Symbol	rip -> r_classad		514305						
ANR	514362	Symbol	rip		514305						
ANR	514363	Symbol	rip -> isSuspendedForCOD		514305						
ANR	514364	Symbol	A_PUBLIC		514305						
ANR	514365	Symbol	rstate		514305						
ANR	514366	Symbol	COD_REQ		514305						
ANR	514367	DeclStmt									
ANR	514368	Decl							MyString	MyString	tmp
ANR	514369	Function	Reqexp :: dprintf	244:0:6018:6164							
ANR	514370	FunctionDef	"Reqexp :: dprintf (int flags , char * fmt)"		514369	0					
ANR	514371	CompoundStatement		246:0:6068:6164	514369	0					
ANR	514372	IdentifierDeclStatement	va_list args ;	247:1:6071:6083	514369	0	True				
ANR	514373	IdentifierDecl	args		514369	0					
ANR	514374	IdentifierDeclType	va_list		514369	0					
ANR	514375	Identifier	args		514369	1					
ANR	514376	ExpressionStatement	"va_start ( args , fmt )"	248:1:6086:6107	514369	1	True				
ANR	514377	CallExpression	"va_start ( args , fmt )"		514369	0					
ANR	514378	Callee	va_start		514369	0					
ANR	514379	Identifier	va_start		514369	0					
ANR	514380	ArgumentList	args		514369	1					
ANR	514381	Argument	args		514369	0					
ANR	514382	Identifier	args		514369	0					
ANR	514383	Argument	fmt		514369	1					
ANR	514384	Identifier	fmt		514369	0					
ANR	514385	ExpressionStatement	"rip -> dprintf_va ( flags , fmt , args )"	249:1:6110:6145	514369	2	True				
ANR	514386	CallExpression	"rip -> dprintf_va ( flags , fmt , args )"		514369	0					
ANR	514387	Callee	rip -> dprintf_va		514369	0					
ANR	514388	PtrMemberAccess	rip -> dprintf_va		514369	0					
ANR	514389	Identifier	rip		514369	0					
ANR	514390	Identifier	dprintf_va		514369	1					
ANR	514391	ArgumentList	flags		514369	1					
ANR	514392	Argument	flags		514369	0					
ANR	514393	Identifier	flags		514369	0					
ANR	514394	Argument	fmt		514369	1					
ANR	514395	Identifier	fmt		514369	0					
ANR	514396	Argument	args		514369	2					
ANR	514397	Identifier	args		514369	0					
ANR	514398	ExpressionStatement	va_end ( args )	250:1:6148:6162	514369	3	True				
ANR	514399	CallExpression	va_end ( args )		514369	0					
ANR	514400	Callee	va_end		514369	0					
ANR	514401	Identifier	va_end		514369	0					
ANR	514402	ArgumentList	args		514369	1					
ANR	514403	Argument	args		514369	0					
ANR	514404	Identifier	args		514369	0					
ANR	514405	ReturnType	void		514369	1					
ANR	514406	Identifier	Reqexp :: dprintf		514369	2					
ANR	514407	ParameterList	"int flags , char * fmt"		514369	3					
ANR	514408	Parameter	int flags	245:17:6040:6048	514369	0	True				
ANR	514409	ParameterType	int		514369	0					
ANR	514410	Identifier	flags		514369	1					
ANR	514411	Parameter	char * fmt	245:28:6051:6059	514369	1	True				
ANR	514412	ParameterType	char *		514369	0					
ANR	514413	Identifier	fmt		514369	1					
ANR	514414	CFGEntryNode	ENTRY		514369		True				
ANR	514415	CFGExitNode	EXIT		514369		True				
ANR	514416	Symbol	args		514369						
ANR	514417	Symbol	flags		514369						
ANR	514418	Symbol	rip		514369						
ANR	514419	Symbol	fmt		514369						
