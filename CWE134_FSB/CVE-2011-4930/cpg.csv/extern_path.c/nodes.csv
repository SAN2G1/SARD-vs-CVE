command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1310746	File	data/converged/CVE-2011-4930_htcondor/extern_path.c								
ANR	1310747	DeclStmt									
ANR	1310748	Decl							struct fs_data	struct fs_data [ NMOUNT ]	FS_Buf
ANR	1310749	DeclStmt									
ANR	1310750	Decl							int	int	N_Sys
ANR	1310751	DeclStmt									
ANR	1310752	Decl							char	char [ 512 ]	Hostname
ANR	1310753	DeclStmt									
ANR	1310754	Decl							int	int	InitDone
ANR	1310755	DeclStmt									
ANR	1310756	Decl							void	void ( void )	init
ANR	1310757	DeclStmt									
ANR	1310758	Decl							char	"char * ( char * mnt_pt , char * name )"	remote_part
ANR	1310759	DeclStmt									
ANR	1310760	Decl							char	char * ( char * name )	xlate_link
ANR	1310761	DeclStmt									
ANR	1310762	Decl							char	char * ( char * path )	compress
ANR	1310763	DeclStmt									
ANR	1310764	Decl							int	"int ( int * start , struct fs_data buf [ ] , unsigned int bufsize , int mode , char * path )"	getmnt
ANR	1310765	Function	external_name	42:0:1373:3643							
ANR	1310766	FunctionDef	"external_name (const char * name , char * buf , int bufsize)"		1310765	0					
ANR	1310767	CompoundStatement		44:0:1435:3643	1310765	0					
ANR	1310768	IdentifierDeclStatement	int i ;	45:1:1438:1447	1310765	0	True				
ANR	1310769	IdentifierDecl	i		1310765	0					
ANR	1310770	IdentifierDeclType	int		1310765	0					
ANR	1310771	Identifier	i		1310765	1					
ANR	1310772	IdentifierDeclStatement	"char * local_name , * remote_name , * mount_pt ;"	46:1:1450:1494	1310765	1	True				
ANR	1310773	IdentifierDecl	* local_name		1310765	0					
ANR	1310774	IdentifierDeclType	char *		1310765	0					
ANR	1310775	Identifier	local_name		1310765	1					
ANR	1310776	IdentifierDecl	* remote_name		1310765	1					
ANR	1310777	IdentifierDeclType	char *		1310765	0					
ANR	1310778	Identifier	remote_name		1310765	1					
ANR	1310779	IdentifierDecl	* mount_pt		1310765	2					
ANR	1310780	IdentifierDeclType	char *		1310765	0					
ANR	1310781	Identifier	mount_pt		1310765	1					
ANR	1310782	IdentifierDeclStatement	struct stat st_buf ;	47:1:1497:1517	1310765	2	True				
ANR	1310783	IdentifierDecl	st_buf		1310765	0					
ANR	1310784	IdentifierDeclType	struct stat		1310765	0					
ANR	1310785	Identifier	st_buf		1310765	1					
ANR	1310786	IdentifierDeclStatement	char my_buf [ MAXPATHLEN + 1 ] ;	48:1:1520:1548	1310765	3	True				
ANR	1310787	IdentifierDecl	my_buf [ MAXPATHLEN + 1 ]		1310765	0					
ANR	1310788	IdentifierDeclType	char [ MAXPATHLEN + 1 ]		1310765	0					
ANR	1310789	Identifier	my_buf		1310765	1					
ANR	1310790	AdditiveExpression	MAXPATHLEN + 1		1310765	2		+			
ANR	1310791	Identifier	MAXPATHLEN		1310765	0					
ANR	1310792	PrimaryExpression	1		1310765	1					
ANR	1310793	IdentifierDeclStatement	char pathname [ MAXPATHLEN + 1 ] ;	49:1:1551:1581	1310765	4	True				
ANR	1310794	IdentifierDecl	pathname [ MAXPATHLEN + 1 ]		1310765	0					
ANR	1310795	IdentifierDeclType	char [ MAXPATHLEN + 1 ]		1310765	0					
ANR	1310796	Identifier	pathname		1310765	1					
ANR	1310797	AdditiveExpression	MAXPATHLEN + 1		1310765	2		+			
ANR	1310798	Identifier	MAXPATHLEN		1310765	0					
ANR	1310799	PrimaryExpression	1		1310765	1					
ANR	1310800	IdentifierDeclStatement	struct fs_data_req * fs ;	50:1:1584:1606	1310765	5	True				
ANR	1310801	IdentifierDecl	* fs		1310765	0					
ANR	1310802	IdentifierDeclType	struct fs_data_req *		1310765	0					
ANR	1310803	Identifier	fs		1310765	1					
ANR	1310804	IdentifierDeclStatement	dev_t file_dev ;	51:1:1609:1626	1310765	6	True				
ANR	1310805	IdentifierDecl	file_dev		1310765	0					
ANR	1310806	IdentifierDeclType	dev_t		1310765	0					
ANR	1310807	Identifier	file_dev		1310765	1					
ANR	1310808	ExpressionStatement	"dprintf ( D_NFS , ""Entering external_name( %s )\\n"" , name )"	53:1:1630:1686	1310765	7	True				
ANR	1310809	CallExpression	"dprintf ( D_NFS , ""Entering external_name( %s )\\n"" , name )"		1310765	0					
ANR	1310810	Callee	dprintf		1310765	0					
ANR	1310811	Identifier	dprintf		1310765	0					
ANR	1310812	ArgumentList	D_NFS		1310765	1					
ANR	1310813	Argument	D_NFS		1310765	0					
ANR	1310814	Identifier	D_NFS		1310765	0					
ANR	1310815	Argument	"""Entering external_name( %s )\\n"""		1310765	1					
ANR	1310816	PrimaryExpression	"""Entering external_name( %s )\\n"""		1310765	0					
ANR	1310817	Argument	name		1310765	2					
ANR	1310818	Identifier	name		1310765	0					
ANR	1310819	IfStatement	if ( ! InitDone )		1310765	8					
ANR	1310820	Condition	! InitDone	55:5:1694:1702	1310765	0	True				
ANR	1310821	UnaryOperationExpression	! InitDone		1310765	0					
ANR	1310822	UnaryOperator	!		1310765	0					
ANR	1310823	Identifier	InitDone		1310765	1					
ANR	1310824	CompoundStatement		12:17:270:270	1310765	1					
ANR	1310825	ExpressionStatement	"dprintf ( D_NFS , ""external_name: initializing mount table\\n"" )"	56:2:1710:1771	1310765	0	True				
ANR	1310826	CallExpression	"dprintf ( D_NFS , ""external_name: initializing mount table\\n"" )"		1310765	0					
ANR	1310827	Callee	dprintf		1310765	0					
ANR	1310828	Identifier	dprintf		1310765	0					
ANR	1310829	ArgumentList	D_NFS		1310765	1					
ANR	1310830	Argument	D_NFS		1310765	0					
ANR	1310831	Identifier	D_NFS		1310765	0					
ANR	1310832	Argument	"""external_name: initializing mount table\\n"""		1310765	1					
ANR	1310833	PrimaryExpression	"""external_name: initializing mount table\\n"""		1310765	0					
ANR	1310834	ExpressionStatement	init ( )	57:2:1775:1781	1310765	1	True				
ANR	1310835	CallExpression	init ( )		1310765	0					
ANR	1310836	Callee	init		1310765	0					
ANR	1310837	Identifier	init		1310765	0					
ANR	1310838	ArgumentList			1310765	1					
ANR	1310839	IfStatement	if ( ! name [ 0 ] )		1310765	9					
ANR	1310840	Condition	! name [ 0 ]	60:5:1792:1799	1310765	0	True				
ANR	1310841	UnaryOperationExpression	! name [ 0 ]		1310765	0					
ANR	1310842	UnaryOperator	!		1310765	0					
ANR	1310843	ArrayIndexing	name [ 0 ]		1310765	1					
ANR	1310844	Identifier	name		1310765	0					
ANR	1310845	PrimaryExpression	0		1310765	1					
ANR	1310846	CompoundStatement		17:16:367:367	1310765	1					
ANR	1310847	ExpressionStatement	"( void ) getcwd ( pathname , sizeof ( pathname ) )"	61:2:1807:1846	1310765	0	True				
ANR	1310848	CastExpression	"( void ) getcwd ( pathname , sizeof ( pathname ) )"		1310765	0					
ANR	1310849	CastTarget	void		1310765	0					
ANR	1310850	CallExpression	"getcwd ( pathname , sizeof ( pathname ) )"		1310765	1					
ANR	1310851	Callee	getcwd		1310765	0					
ANR	1310852	Identifier	getcwd		1310765	0					
ANR	1310853	ArgumentList	pathname		1310765	1					
ANR	1310854	Argument	pathname		1310765	0					
ANR	1310855	Identifier	pathname		1310765	0					
ANR	1310856	Argument	sizeof ( pathname )		1310765	1					
ANR	1310857	SizeofExpression	sizeof ( pathname )		1310765	0					
ANR	1310858	Sizeof	sizeof		1310765	0					
ANR	1310859	SizeofOperand	pathname		1310765	1					
ANR	1310860	ElseStatement	else		1310765	0					
ANR	1310861	IfStatement	if ( name [ 0 ] == '/' )		1310765	0					
ANR	1310862	Condition	name [ 0 ] == '/'	62:12:1860:1873	1310765	0	True				
ANR	1310863	EqualityExpression	name [ 0 ] == '/'		1310765	0		==			
ANR	1310864	ArrayIndexing	name [ 0 ]		1310765	0					
ANR	1310865	Identifier	name		1310765	0					
ANR	1310866	PrimaryExpression	0		1310765	1					
ANR	1310867	PrimaryExpression	'/'		1310765	1					
ANR	1310868	CompoundStatement		19:29:441:441	1310765	1					
ANR	1310869	ExpressionStatement	"( void ) strcpy ( pathname , name )"	63:2:1881:1911	1310765	0	True				
ANR	1310870	CastExpression	"( void ) strcpy ( pathname , name )"		1310765	0					
ANR	1310871	CastTarget	void		1310765	0					
ANR	1310872	CallExpression	"strcpy ( pathname , name )"		1310765	1					
ANR	1310873	Callee	strcpy		1310765	0					
ANR	1310874	Identifier	strcpy		1310765	0					
ANR	1310875	ArgumentList	pathname		1310765	1					
ANR	1310876	Argument	pathname		1310765	0					
ANR	1310877	Identifier	pathname		1310765	0					
ANR	1310878	Argument	name		1310765	1					
ANR	1310879	Identifier	name		1310765	0					
ANR	1310880	ElseStatement	else		1310765	0					
ANR	1310881	CompoundStatement		21:8:485:485	1310765	0					
ANR	1310882	ExpressionStatement	"( void ) getcwd ( pathname , sizeof ( pathname ) )"	65:2:1925:1964	1310765	0	True				
ANR	1310883	CastExpression	"( void ) getcwd ( pathname , sizeof ( pathname ) )"		1310765	0					
ANR	1310884	CastTarget	void		1310765	0					
ANR	1310885	CallExpression	"getcwd ( pathname , sizeof ( pathname ) )"		1310765	1					
ANR	1310886	Callee	getcwd		1310765	0					
ANR	1310887	Identifier	getcwd		1310765	0					
ANR	1310888	ArgumentList	pathname		1310765	1					
ANR	1310889	Argument	pathname		1310765	0					
ANR	1310890	Identifier	pathname		1310765	0					
ANR	1310891	Argument	sizeof ( pathname )		1310765	1					
ANR	1310892	SizeofExpression	sizeof ( pathname )		1310765	0					
ANR	1310893	Sizeof	sizeof		1310765	0					
ANR	1310894	SizeofOperand	pathname		1310765	1					
ANR	1310895	ExpressionStatement	"( void ) strcat ( pathname , ""/"" )"	66:2:1968:1997	1310765	1	True				
ANR	1310896	CastExpression	"( void ) strcat ( pathname , ""/"" )"		1310765	0					
ANR	1310897	CastTarget	void		1310765	0					
ANR	1310898	CallExpression	"strcat ( pathname , ""/"" )"		1310765	1					
ANR	1310899	Callee	strcat		1310765	0					
ANR	1310900	Identifier	strcat		1310765	0					
ANR	1310901	ArgumentList	pathname		1310765	1					
ANR	1310902	Argument	pathname		1310765	0					
ANR	1310903	Identifier	pathname		1310765	0					
ANR	1310904	Argument	"""/"""		1310765	1					
ANR	1310905	PrimaryExpression	"""/"""		1310765	0					
ANR	1310906	ExpressionStatement	"( void ) strcat ( pathname , name )"	67:2:2001:2031	1310765	2	True				
ANR	1310907	CastExpression	"( void ) strcat ( pathname , name )"		1310765	0					
ANR	1310908	CastTarget	void		1310765	0					
ANR	1310909	CallExpression	"strcat ( pathname , name )"		1310765	1					
ANR	1310910	Callee	strcat		1310765	0					
ANR	1310911	Identifier	strcat		1310765	0					
ANR	1310912	ArgumentList	pathname		1310765	1					
ANR	1310913	Argument	pathname		1310765	0					
ANR	1310914	Identifier	pathname		1310765	0					
ANR	1310915	Argument	name		1310765	1					
ANR	1310916	Identifier	name		1310765	0					
ANR	1310917	ExpressionStatement	"dprintf ( D_NFS , ""external_name: pathname = \\""%s\\""\\n"" , pathname )"	70:1:2038:2102	1310765	10	True				
ANR	1310918	CallExpression	"dprintf ( D_NFS , ""external_name: pathname = \\""%s\\""\\n"" , pathname )"		1310765	0					
ANR	1310919	Callee	dprintf		1310765	0					
ANR	1310920	Identifier	dprintf		1310765	0					
ANR	1310921	ArgumentList	D_NFS		1310765	1					
ANR	1310922	Argument	D_NFS		1310765	0					
ANR	1310923	Identifier	D_NFS		1310765	0					
ANR	1310924	Argument	"""external_name: pathname = \\""%s\\""\\n"""		1310765	1					
ANR	1310925	PrimaryExpression	"""external_name: pathname = \\""%s\\""\\n"""		1310765	0					
ANR	1310926	Argument	pathname		1310765	2					
ANR	1310927	Identifier	pathname		1310765	0					
ANR	1310928	IfStatement	if ( ( local_name = xlate_link ( pathname ) ) == NULL )		1310765	11					
ANR	1310929	Condition	( local_name = xlate_link ( pathname ) ) == NULL	74:5:2147:2187	1310765	0	True				
ANR	1310930	EqualityExpression	( local_name = xlate_link ( pathname ) ) == NULL		1310765	0		==			
ANR	1310931	AssignmentExpression	local_name = xlate_link ( pathname )		1310765	0		=			
ANR	1310932	Identifier	local_name		1310765	0					
ANR	1310933	CallExpression	xlate_link ( pathname )		1310765	1					
ANR	1310934	Callee	xlate_link		1310765	0					
ANR	1310935	Identifier	xlate_link		1310765	0					
ANR	1310936	ArgumentList	pathname		1310765	1					
ANR	1310937	Argument	pathname		1310765	0					
ANR	1310938	Identifier	pathname		1310765	0					
ANR	1310939	Identifier	NULL		1310765	1					
ANR	1310940	CompoundStatement		31:49:755:755	1310765	1					
ANR	1310941	ReturnStatement	return - 1 ;	75:2:2195:2204	1310765	0	True				
ANR	1310942	UnaryOperationExpression	- 1		1310765	0					
ANR	1310943	UnaryOperator	-		1310765	0					
ANR	1310944	PrimaryExpression	1		1310765	1					
ANR	1310945	ExpressionStatement	"dprintf ( D_NFS , ""external_name: local_name = \\""%s\\""\\n"" , local_name )"	78:1:2211:2279	1310765	12	True				
ANR	1310946	CallExpression	"dprintf ( D_NFS , ""external_name: local_name = \\""%s\\""\\n"" , local_name )"		1310765	0					
ANR	1310947	Callee	dprintf		1310765	0					
ANR	1310948	Identifier	dprintf		1310765	0					
ANR	1310949	ArgumentList	D_NFS		1310765	1					
ANR	1310950	Argument	D_NFS		1310765	0					
ANR	1310951	Identifier	D_NFS		1310765	0					
ANR	1310952	Argument	"""external_name: local_name = \\""%s\\""\\n"""		1310765	1					
ANR	1310953	PrimaryExpression	"""external_name: local_name = \\""%s\\""\\n"""		1310765	0					
ANR	1310954	Argument	local_name		1310765	2					
ANR	1310955	Identifier	local_name		1310765	0					
ANR	1310956	IfStatement	"if ( stat ( local_name , & st_buf ) < 0 )"		1310765	13					
ANR	1310957	Condition	"stat ( local_name , & st_buf ) < 0"	81:5:2329:2356	1310765	0	True				
ANR	1310958	RelationalExpression	"stat ( local_name , & st_buf ) < 0"		1310765	0		<			
ANR	1310959	CallExpression	"stat ( local_name , & st_buf )"		1310765	0					
ANR	1310960	Callee	stat		1310765	0					
ANR	1310961	Identifier	stat		1310765	0					
ANR	1310962	ArgumentList	local_name		1310765	1					
ANR	1310963	Argument	local_name		1310765	0					
ANR	1310964	Identifier	local_name		1310765	0					
ANR	1310965	Argument	& st_buf		1310765	1					
ANR	1310966	UnaryOperationExpression	& st_buf		1310765	0					
ANR	1310967	UnaryOperator	&		1310765	0					
ANR	1310968	Identifier	st_buf		1310765	1					
ANR	1310969	PrimaryExpression	0		1310765	1					
ANR	1310970	CompoundStatement		38:36:924:924	1310765	1					
ANR	1310971	ExpressionStatement	"dprintf ( D_ALWAYS , ""stat failed in external_name: %s\\n"" , strerror ( errno ) )"	82:2:2364:2443	1310765	0	True				
ANR	1310972	CallExpression	"dprintf ( D_ALWAYS , ""stat failed in external_name: %s\\n"" , strerror ( errno ) )"		1310765	0					
ANR	1310973	Callee	dprintf		1310765	0					
ANR	1310974	Identifier	dprintf		1310765	0					
ANR	1310975	ArgumentList	D_ALWAYS		1310765	1					
ANR	1310976	Argument	D_ALWAYS		1310765	0					
ANR	1310977	Identifier	D_ALWAYS		1310765	0					
ANR	1310978	Argument	"""stat failed in external_name: %s\\n"""		1310765	1					
ANR	1310979	PrimaryExpression	"""stat failed in external_name: %s\\n"""		1310765	0					
ANR	1310980	Argument	strerror ( errno )		1310765	2					
ANR	1310981	CallExpression	strerror ( errno )		1310765	0					
ANR	1310982	Callee	strerror		1310765	0					
ANR	1310983	Identifier	strerror		1310765	0					
ANR	1310984	ArgumentList	errno		1310765	1					
ANR	1310985	Argument	errno		1310765	0					
ANR	1310986	Identifier	errno		1310765	0					
ANR	1310987	ExpressionStatement	FREE ( local_name )	84:2:2447:2463	1310765	1	True				
ANR	1310988	CallExpression	FREE ( local_name )		1310765	0					
ANR	1310989	Callee	FREE		1310765	0					
ANR	1310990	Identifier	FREE		1310765	0					
ANR	1310991	ArgumentList	local_name		1310765	1					
ANR	1310992	Argument	local_name		1310765	0					
ANR	1310993	Identifier	local_name		1310765	0					
ANR	1310994	ReturnStatement	return - 1 ;	85:2:2467:2476	1310765	2	True				
ANR	1310995	UnaryOperationExpression	- 1		1310765	0					
ANR	1310996	UnaryOperator	-		1310765	0					
ANR	1310997	PrimaryExpression	1		1310765	1					
ANR	1310998	ExpressionStatement	file_dev = st_buf . st_dev	87:1:2482:2506	1310765	14	True				
ANR	1310999	AssignmentExpression	file_dev = st_buf . st_dev		1310765	0		=			
ANR	1311000	Identifier	file_dev		1310765	0					
ANR	1311001	MemberAccess	st_buf . st_dev		1310765	1					
ANR	1311002	Identifier	st_buf		1310765	0					
ANR	1311003	Identifier	st_dev		1310765	1					
ANR	1311004	ForStatement	for ( i = 0 ; i < N_Sys ; i ++ )		1310765	15					
ANR	1311005	ForInit	i = 0 ;	90:6:2564:2567	1310765	0	True				
ANR	1311006	AssignmentExpression	i = 0		1310765	0		=			
ANR	1311007	Identifier	i		1310765	0					
ANR	1311008	PrimaryExpression	0		1310765	1					
ANR	1311009	Condition	i < N_Sys	90:11:2569:2575	1310765	1	True				
ANR	1311010	RelationalExpression	i < N_Sys		1310765	0		<			
ANR	1311011	Identifier	i		1310765	0					
ANR	1311012	Identifier	N_Sys		1310765	1					
ANR	1311013	PostIncDecOperationExpression	i ++	90:20:2578:2580	1310765	2	True				
ANR	1311014	Identifier	i		1310765	0					
ANR	1311015	IncDec	++		1310765	1					
ANR	1311016	CompoundStatement		47:26:1148:1148	1310765	3					
ANR	1311017	ExpressionStatement	fs = & FS_Buf [ i ] . fd_req	91:2:2588:2610	1310765	0	True				
ANR	1311018	AssignmentExpression	fs = & FS_Buf [ i ] . fd_req		1310765	0		=			
ANR	1311019	Identifier	fs		1310765	0					
ANR	1311020	UnaryOperationExpression	& FS_Buf [ i ] . fd_req		1310765	1					
ANR	1311021	UnaryOperator	&		1310765	0					
ANR	1311022	MemberAccess	FS_Buf [ i ] . fd_req		1310765	1					
ANR	1311023	ArrayIndexing	FS_Buf [ i ]		1310765	0					
ANR	1311024	Identifier	FS_Buf		1310765	0					
ANR	1311025	Identifier	i		1310765	1					
ANR	1311026	Identifier	fd_req		1310765	1					
ANR	1311027	IfStatement	if ( file_dev == fs -> dev )		1310765	1					
ANR	1311028	Condition	file_dev == fs -> dev	92:6:2618:2636	1310765	0	True				
ANR	1311029	EqualityExpression	file_dev == fs -> dev		1310765	0		==			
ANR	1311030	Identifier	file_dev		1310765	0					
ANR	1311031	PtrMemberAccess	fs -> dev		1310765	1					
ANR	1311032	Identifier	fs		1310765	0					
ANR	1311033	Identifier	dev		1310765	1					
ANR	1311034	CompoundStatement		49:28:1204:1204	1310765	1					
ANR	1311035	ExpressionStatement	"dprintf ( D_NFS , ""external_name: fs->devname = \\""%s\\""\\n"" , fs -> devname )"	93:3:2669:2746	1310765	0	True				
ANR	1311036	CallExpression	"dprintf ( D_NFS , ""external_name: fs->devname = \\""%s\\""\\n"" , fs -> devname )"		1310765	0					
ANR	1311037	Callee	dprintf		1310765	0					
ANR	1311038	Identifier	dprintf		1310765	0					
ANR	1311039	ArgumentList	D_NFS		1310765	1					
ANR	1311040	Argument	D_NFS		1310765	0					
ANR	1311041	Identifier	D_NFS		1310765	0					
ANR	1311042	Argument	"""external_name: fs->devname = \\""%s\\""\\n"""		1310765	1					
ANR	1311043	PrimaryExpression	"""external_name: fs->devname = \\""%s\\""\\n"""		1310765	0					
ANR	1311044	Argument	fs -> devname		1310765	2					
ANR	1311045	PtrMemberAccess	fs -> devname		1310765	0					
ANR	1311046	Identifier	fs		1310765	0					
ANR	1311047	Identifier	devname		1310765	1					
ANR	1311048	ExpressionStatement	"dprintf ( D_NFS , ""external_name: fs->path = \\""%s\\""\\n"" , fs -> path )"	96:3:2751:2815	1310765	1	True				
ANR	1311049	CallExpression	"dprintf ( D_NFS , ""external_name: fs->path = \\""%s\\""\\n"" , fs -> path )"		1310765	0					
ANR	1311050	Callee	dprintf		1310765	0					
ANR	1311051	Identifier	dprintf		1310765	0					
ANR	1311052	ArgumentList	D_NFS		1310765	1					
ANR	1311053	Argument	D_NFS		1310765	0					
ANR	1311054	Identifier	D_NFS		1310765	0					
ANR	1311055	Argument	"""external_name: fs->path = \\""%s\\""\\n"""		1310765	1					
ANR	1311056	PrimaryExpression	"""external_name: fs->path = \\""%s\\""\\n"""		1310765	0					
ANR	1311057	Argument	fs -> path		1310765	2					
ANR	1311058	PtrMemberAccess	fs -> path		1310765	0					
ANR	1311059	Identifier	fs		1310765	0					
ANR	1311060	Identifier	path		1310765	1					
ANR	1311061	IfStatement	"if ( ( char * ) strchr ( ( const char * ) fs -> devname , ':' ) )"		1310765	2					
ANR	1311062	Condition	"( char * ) strchr ( ( const char * ) fs -> devname , ':' )"	97:7:2824:2868	1310765	0	True				
ANR	1311063	CastExpression	"( char * ) strchr ( ( const char * ) fs -> devname , ':' )"		1310765	0					
ANR	1311064	CastTarget	char *		1310765	0					
ANR	1311065	CallExpression	"strchr ( ( const char * ) fs -> devname , ':' )"		1310765	1					
ANR	1311066	Callee	strchr		1310765	0					
ANR	1311067	Identifier	strchr		1310765	0					
ANR	1311068	ArgumentList	( const char * ) fs -> devname		1310765	1					
ANR	1311069	Argument	( const char * ) fs -> devname		1310765	0					
ANR	1311070	CastExpression	( const char * ) fs -> devname		1310765	0					
ANR	1311071	CastTarget	const char *		1310765	0					
ANR	1311072	PtrMemberAccess	fs -> devname		1310765	1					
ANR	1311073	Identifier	fs		1310765	0					
ANR	1311074	Identifier	devname		1310765	1					
ANR	1311075	Argument	':'		1310765	1					
ANR	1311076	PrimaryExpression	':'		1310765	0					
ANR	1311077	CompoundStatement		54:55:1436:1436	1310765	1					
ANR	1311078	IfStatement	if ( ( mount_pt = xlate_link ( fs -> path ) ) == NULL )		1310765	0					
ANR	1311079	Condition	( mount_pt = xlate_link ( fs -> path ) ) == NULL	98:8:2907:2945	1310765	0	True				
ANR	1311080	EqualityExpression	( mount_pt = xlate_link ( fs -> path ) ) == NULL		1310765	0		==			
ANR	1311081	AssignmentExpression	mount_pt = xlate_link ( fs -> path )		1310765	0		=			
ANR	1311082	Identifier	mount_pt		1310765	0					
ANR	1311083	CallExpression	xlate_link ( fs -> path )		1310765	1					
ANR	1311084	Callee	xlate_link		1310765	0					
ANR	1311085	Identifier	xlate_link		1310765	0					
ANR	1311086	ArgumentList	fs -> path		1310765	1					
ANR	1311087	Argument	fs -> path		1310765	0					
ANR	1311088	PtrMemberAccess	fs -> path		1310765	0					
ANR	1311089	Identifier	fs		1310765	0					
ANR	1311090	Identifier	path		1310765	1					
ANR	1311091	Identifier	NULL		1310765	1					
ANR	1311092	CompoundStatement		55:50:1513:1513	1310765	1					
ANR	1311093	ExpressionStatement	FREE ( local_name )	99:5:2956:2972	1310765	0	True				
ANR	1311094	CallExpression	FREE ( local_name )		1310765	0					
ANR	1311095	Callee	FREE		1310765	0					
ANR	1311096	Identifier	FREE		1310765	0					
ANR	1311097	ArgumentList	local_name		1310765	1					
ANR	1311098	Argument	local_name		1310765	0					
ANR	1311099	Identifier	local_name		1310765	0					
ANR	1311100	ReturnStatement	return - 1 ;	100:5:2979:2988	1310765	1	True				
ANR	1311101	UnaryOperationExpression	- 1		1310765	0					
ANR	1311102	UnaryOperator	-		1310765	0					
ANR	1311103	PrimaryExpression	1		1310765	1					
ANR	1311104	ExpressionStatement	"remote_name = remote_part ( mount_pt , local_name )"	102:4:3000:3049	1310765	1	True				
ANR	1311105	AssignmentExpression	"remote_name = remote_part ( mount_pt , local_name )"		1310765	0		=			
ANR	1311106	Identifier	remote_name		1310765	0					
ANR	1311107	CallExpression	"remote_part ( mount_pt , local_name )"		1310765	1					
ANR	1311108	Callee	remote_part		1310765	0					
ANR	1311109	Identifier	remote_part		1310765	0					
ANR	1311110	ArgumentList	mount_pt		1310765	1					
ANR	1311111	Argument	mount_pt		1310765	0					
ANR	1311112	Identifier	mount_pt		1310765	0					
ANR	1311113	Argument	local_name		1310765	1					
ANR	1311114	Identifier	local_name		1310765	0					
ANR	1311115	ExpressionStatement	"dprintf ( D_NFS , ""external_name: remote_name = \\""%s\\""\\n"" , remote_name )"	103:4:3055:3134	1310765	2	True				
ANR	1311116	CallExpression	"dprintf ( D_NFS , ""external_name: remote_name = \\""%s\\""\\n"" , remote_name )"		1310765	0					
ANR	1311117	Callee	dprintf		1310765	0					
ANR	1311118	Identifier	dprintf		1310765	0					
ANR	1311119	ArgumentList	D_NFS		1310765	1					
ANR	1311120	Argument	D_NFS		1310765	0					
ANR	1311121	Identifier	D_NFS		1310765	0					
ANR	1311122	Argument	"""external_name: remote_name = \\""%s\\""\\n"""		1310765	1					
ANR	1311123	PrimaryExpression	"""external_name: remote_name = \\""%s\\""\\n"""		1310765	0					
ANR	1311124	Argument	remote_name		1310765	2					
ANR	1311125	Identifier	remote_name		1310765	0					
ANR	1311126	IfStatement	if ( remote_name )		1310765	3					
ANR	1311127	Condition	remote_name	106:8:3144:3154	1310765	0	True				
ANR	1311128	Identifier	remote_name		1310765	0					
ANR	1311129	CompoundStatement		63:22:1722:1722	1310765	1					
ANR	1311130	ExpressionStatement	"( void ) sprintf ( my_buf , ""%s%s"" , fs -> devname , remote_name )"	107:5:3165:3222	1310765	0	True				
ANR	1311131	CastExpression	"( void ) sprintf ( my_buf , ""%s%s"" , fs -> devname , remote_name )"		1310765	0					
ANR	1311132	CastTarget	void		1310765	0					
ANR	1311133	CallExpression	"sprintf ( my_buf , ""%s%s"" , fs -> devname , remote_name )"		1310765	1					
ANR	1311134	Callee	sprintf		1310765	0					
ANR	1311135	Identifier	sprintf		1310765	0					
ANR	1311136	ArgumentList	my_buf		1310765	1					
ANR	1311137	Argument	my_buf		1310765	0					
ANR	1311138	Identifier	my_buf		1310765	0					
ANR	1311139	Argument	"""%s%s"""		1310765	1					
ANR	1311140	PrimaryExpression	"""%s%s"""		1310765	0					
ANR	1311141	Argument	fs -> devname		1310765	2					
ANR	1311142	PtrMemberAccess	fs -> devname		1310765	0					
ANR	1311143	Identifier	fs		1310765	0					
ANR	1311144	Identifier	devname		1310765	1					
ANR	1311145	Argument	remote_name		1310765	3					
ANR	1311146	Identifier	remote_name		1310765	0					
ANR	1311147	ElseStatement	else		1310765	0					
ANR	1311148	CompoundStatement		65:11:1799:1799	1310765	0					
ANR	1311149	ExpressionStatement	"( void ) sprintf ( my_buf , ""%s"" , fs -> devname )"	109:5:3242:3284	1310765	0	True				
ANR	1311150	CastExpression	"( void ) sprintf ( my_buf , ""%s"" , fs -> devname )"		1310765	0					
ANR	1311151	CastTarget	void		1310765	0					
ANR	1311152	CallExpression	"sprintf ( my_buf , ""%s"" , fs -> devname )"		1310765	1					
ANR	1311153	Callee	sprintf		1310765	0					
ANR	1311154	Identifier	sprintf		1310765	0					
ANR	1311155	ArgumentList	my_buf		1310765	1					
ANR	1311156	Argument	my_buf		1310765	0					
ANR	1311157	Identifier	my_buf		1310765	0					
ANR	1311158	Argument	"""%s"""		1310765	1					
ANR	1311159	PrimaryExpression	"""%s"""		1310765	0					
ANR	1311160	Argument	fs -> devname		1310765	2					
ANR	1311161	PtrMemberAccess	fs -> devname		1310765	0					
ANR	1311162	Identifier	fs		1310765	0					
ANR	1311163	Identifier	devname		1310765	1					
ANR	1311164	ExpressionStatement	FREE ( mount_pt )	111:4:3296:3310	1310765	4	True				
ANR	1311165	CallExpression	FREE ( mount_pt )		1310765	0					
ANR	1311166	Callee	FREE		1310765	0					
ANR	1311167	Identifier	FREE		1310765	0					
ANR	1311168	ArgumentList	mount_pt		1310765	1					
ANR	1311169	Argument	mount_pt		1310765	0					
ANR	1311170	Identifier	mount_pt		1310765	0					
ANR	1311171	ElseStatement	else		1310765	0					
ANR	1311172	CompoundStatement		69:10:1886:1886	1310765	0					
ANR	1311173	ExpressionStatement	"( void ) sprintf ( my_buf , ""%s:%s"" , Hostname , local_name )"	113:4:3351:3405	1310765	0	True				
ANR	1311174	CastExpression	"( void ) sprintf ( my_buf , ""%s:%s"" , Hostname , local_name )"		1310765	0					
ANR	1311175	CastTarget	void		1310765	0					
ANR	1311176	CallExpression	"sprintf ( my_buf , ""%s:%s"" , Hostname , local_name )"		1310765	1					
ANR	1311177	Callee	sprintf		1310765	0					
ANR	1311178	Identifier	sprintf		1310765	0					
ANR	1311179	ArgumentList	my_buf		1310765	1					
ANR	1311180	Argument	my_buf		1310765	0					
ANR	1311181	Identifier	my_buf		1310765	0					
ANR	1311182	Argument	"""%s:%s"""		1310765	1					
ANR	1311183	PrimaryExpression	"""%s:%s"""		1310765	0					
ANR	1311184	Argument	Hostname		1310765	2					
ANR	1311185	Identifier	Hostname		1310765	0					
ANR	1311186	Argument	local_name		1310765	3					
ANR	1311187	Identifier	local_name		1310765	0					
ANR	1311188	ExpressionStatement	"strncpy ( buf , my_buf , bufsize )"	115:3:3415:3446	1310765	3	True				
ANR	1311189	CallExpression	"strncpy ( buf , my_buf , bufsize )"		1310765	0					
ANR	1311190	Callee	strncpy		1310765	0					
ANR	1311191	Identifier	strncpy		1310765	0					
ANR	1311192	ArgumentList	buf		1310765	1					
ANR	1311193	Argument	buf		1310765	0					
ANR	1311194	Identifier	buf		1310765	0					
ANR	1311195	Argument	my_buf		1310765	1					
ANR	1311196	Identifier	my_buf		1310765	0					
ANR	1311197	Argument	bufsize		1310765	2					
ANR	1311198	Identifier	bufsize		1310765	0					
ANR	1311199	ExpressionStatement	"dprintf ( D_NFS , ""external_name returning 0, answer \\""%s\\""\\n"" , buf )"	116:3:3451:3518	1310765	4	True				
ANR	1311200	CallExpression	"dprintf ( D_NFS , ""external_name returning 0, answer \\""%s\\""\\n"" , buf )"		1310765	0					
ANR	1311201	Callee	dprintf		1310765	0					
ANR	1311202	Identifier	dprintf		1310765	0					
ANR	1311203	ArgumentList	D_NFS		1310765	1					
ANR	1311204	Argument	D_NFS		1310765	0					
ANR	1311205	Identifier	D_NFS		1310765	0					
ANR	1311206	Argument	"""external_name returning 0, answer \\""%s\\""\\n"""		1310765	1					
ANR	1311207	PrimaryExpression	"""external_name returning 0, answer \\""%s\\""\\n"""		1310765	0					
ANR	1311208	Argument	buf		1310765	2					
ANR	1311209	Identifier	buf		1310765	0					
ANR	1311210	ExpressionStatement	FREE ( local_name )	117:3:3523:3539	1310765	5	True				
ANR	1311211	CallExpression	FREE ( local_name )		1310765	0					
ANR	1311212	Callee	FREE		1310765	0					
ANR	1311213	Identifier	FREE		1310765	0					
ANR	1311214	ArgumentList	local_name		1310765	1					
ANR	1311215	Argument	local_name		1310765	0					
ANR	1311216	Identifier	local_name		1310765	0					
ANR	1311217	ReturnStatement	return 0 ;	118:3:3544:3552	1310765	6	True				
ANR	1311218	PrimaryExpression	0		1310765	0					
ANR	1311219	ExpressionStatement	"dprintf ( D_NFS , ""external_name returning -1\\n"" )"	121:1:3562:3610	1310765	16	True				
ANR	1311220	CallExpression	"dprintf ( D_NFS , ""external_name returning -1\\n"" )"		1310765	0					
ANR	1311221	Callee	dprintf		1310765	0					
ANR	1311222	Identifier	dprintf		1310765	0					
ANR	1311223	ArgumentList	D_NFS		1310765	1					
ANR	1311224	Argument	D_NFS		1310765	0					
ANR	1311225	Identifier	D_NFS		1310765	0					
ANR	1311226	Argument	"""external_name returning -1\\n"""		1310765	1					
ANR	1311227	PrimaryExpression	"""external_name returning -1\\n"""		1310765	0					
ANR	1311228	ExpressionStatement	FREE ( local_name )	122:1:3613:3629	1310765	17	True				
ANR	1311229	CallExpression	FREE ( local_name )		1310765	0					
ANR	1311230	Callee	FREE		1310765	0					
ANR	1311231	Identifier	FREE		1310765	0					
ANR	1311232	ArgumentList	local_name		1310765	1					
ANR	1311233	Argument	local_name		1310765	0					
ANR	1311234	Identifier	local_name		1310765	0					
ANR	1311235	ReturnStatement	return - 1 ;	123:1:3632:3641	1310765	18	True				
ANR	1311236	UnaryOperationExpression	- 1		1310765	0					
ANR	1311237	UnaryOperator	-		1310765	0					
ANR	1311238	PrimaryExpression	1		1310765	1					
ANR	1311239	ReturnType	int		1310765	1					
ANR	1311240	Identifier	external_name		1310765	2					
ANR	1311241	ParameterList	"const char * name , char * buf , int bufsize"		1310765	3					
ANR	1311242	Parameter	const char * name	43:15:1392:1407	1310765	0	True				
ANR	1311243	ParameterType	const char *		1310765	0					
ANR	1311244	Identifier	name		1310765	1					
ANR	1311245	Parameter	char * buf	43:33:1410:1418	1310765	1	True				
ANR	1311246	ParameterType	char *		1310765	0					
ANR	1311247	Identifier	buf		1310765	1					
ANR	1311248	Parameter	int bufsize	43:44:1421:1431	1310765	2	True				
ANR	1311249	ParameterType	int		1310765	0					
ANR	1311250	Identifier	bufsize		1310765	1					
ANR	1311251	CFGEntryNode	ENTRY		1310765		True				
ANR	1311252	CFGExitNode	EXIT		1310765		True				
ANR	1311253	Symbol	InitDone		1310765						
ANR	1311254	Symbol	fs -> path		1310765						
ANR	1311255	Symbol	st_buf . st_dev		1310765						
ANR	1311256	Symbol	strchr		1310765						
ANR	1311257	Symbol	D_NFS		1310765						
ANR	1311258	Symbol	N_Sys		1310765						
ANR	1311259	Symbol	xlate_link		1310765						
ANR	1311260	Symbol	fs		1310765						
ANR	1311261	Symbol	& st_buf		1310765						
ANR	1311262	Symbol	FS_Buf		1310765						
ANR	1311263	Symbol	* fs		1310765						
ANR	1311264	Symbol	fs -> devname		1310765						
ANR	1311265	Symbol	remote_name		1310765						
ANR	1311266	Symbol	& FS_Buf [ i ] . fd_req		1310765						
ANR	1311267	Symbol	st_buf		1310765						
ANR	1311268	Symbol	* name		1310765						
ANR	1311269	Symbol	stat		1310765						
ANR	1311270	Symbol	errno		1310765						
ANR	1311271	Symbol	NULL		1310765						
ANR	1311272	Symbol	bufsize		1310765						
ANR	1311273	Symbol	D_ALWAYS		1310765						
ANR	1311274	Symbol	Hostname		1310765						
ANR	1311275	Symbol	i		1310765						
ANR	1311276	Symbol	local_name		1310765						
ANR	1311277	Symbol	pathname		1310765						
ANR	1311278	Symbol	fs -> dev		1310765						
ANR	1311279	Symbol	strerror		1310765						
ANR	1311280	Symbol	buf		1310765						
ANR	1311281	Symbol	* i		1310765						
ANR	1311282	Symbol	mount_pt		1310765						
ANR	1311283	Symbol	my_buf		1310765						
ANR	1311284	Symbol	name		1310765						
ANR	1311285	Symbol	* FS_Buf		1310765						
ANR	1311286	Symbol	remote_part		1310765						
ANR	1311287	Symbol	file_dev		1310765						
ANR	1311288	Function	init	126:0:3646:4042							
ANR	1311289	FunctionDef	init ()		1311288	0					
ANR	1311290	CompoundStatement		129:0:3671:4042	1311288	0					
ANR	1311291	IdentifierDeclStatement	int start = 0 ;	130:1:3674:3688	1311288	0	True				
ANR	1311292	IdentifierDecl	start = 0		1311288	0					
ANR	1311293	IdentifierDeclType	int		1311288	0					
ANR	1311294	Identifier	start		1311288	1					
ANR	1311295	AssignmentExpression	start = 0		1311288	2		=			
ANR	1311296	Identifier	start		1311288	0					
ANR	1311297	PrimaryExpression	0		1311288	1					
ANR	1311298	IfStatement	"if ( condor_gethostname ( Hostname , sizeof ( Hostname ) ) < 0 )"		1311288	1					
ANR	1311299	Condition	"condor_gethostname ( Hostname , sizeof ( Hostname ) ) < 0"	132:5:3696:3744	1311288	0	True				
ANR	1311300	RelationalExpression	"condor_gethostname ( Hostname , sizeof ( Hostname ) ) < 0"		1311288	0		<			
ANR	1311301	CallExpression	"condor_gethostname ( Hostname , sizeof ( Hostname ) )"		1311288	0					
ANR	1311302	Callee	condor_gethostname		1311288	0					
ANR	1311303	Identifier	condor_gethostname		1311288	0					
ANR	1311304	ArgumentList	Hostname		1311288	1					
ANR	1311305	Argument	Hostname		1311288	0					
ANR	1311306	Identifier	Hostname		1311288	0					
ANR	1311307	Argument	sizeof ( Hostname )		1311288	1					
ANR	1311308	SizeofExpression	sizeof ( Hostname )		1311288	0					
ANR	1311309	Sizeof	sizeof		1311288	0					
ANR	1311310	SizeofOperand	Hostname		1311288	1					
ANR	1311311	PrimaryExpression	0		1311288	1					
ANR	1311312	CompoundStatement		4:57:76:76	1311288	1					
ANR	1311313	ExpressionStatement	"dprintf ( D_ALWAYS , ""gethostname failed in extern_path.c: %s\\n"" , strerror ( errno ) )"	133:2:3752:3838	1311288	0	True				
ANR	1311314	CallExpression	"dprintf ( D_ALWAYS , ""gethostname failed in extern_path.c: %s\\n"" , strerror ( errno ) )"		1311288	0					
ANR	1311315	Callee	dprintf		1311288	0					
ANR	1311316	Identifier	dprintf		1311288	0					
ANR	1311317	ArgumentList	D_ALWAYS		1311288	1					
ANR	1311318	Argument	D_ALWAYS		1311288	0					
ANR	1311319	Identifier	D_ALWAYS		1311288	0					
ANR	1311320	Argument	"""gethostname failed in extern_path.c: %s\\n"""		1311288	1					
ANR	1311321	PrimaryExpression	"""gethostname failed in extern_path.c: %s\\n"""		1311288	0					
ANR	1311322	Argument	strerror ( errno )		1311288	2					
ANR	1311323	CallExpression	strerror ( errno )		1311288	0					
ANR	1311324	Callee	strerror		1311288	0					
ANR	1311325	Identifier	strerror		1311288	0					
ANR	1311326	ArgumentList	errno		1311288	1					
ANR	1311327	Argument	errno		1311288	0					
ANR	1311328	Identifier	errno		1311288	0					
ANR	1311329	ReturnStatement	return ;	135:2:3842:3848	1311288	1	True				
ANR	1311330	IfStatement	"if ( ( N_Sys = getmnt ( & start , FS_Buf , sizeof ( FS_Buf ) , NOSTAT_MANY , 0 ) ) < 0 )"		1311288	2					
ANR	1311331	Condition	"( N_Sys = getmnt ( & start , FS_Buf , sizeof ( FS_Buf ) , NOSTAT_MANY , 0 ) ) < 0"	138:5:3859:3920	1311288	0	True				
ANR	1311332	RelationalExpression	"( N_Sys = getmnt ( & start , FS_Buf , sizeof ( FS_Buf ) , NOSTAT_MANY , 0 ) ) < 0"		1311288	0		<			
ANR	1311333	AssignmentExpression	"N_Sys = getmnt ( & start , FS_Buf , sizeof ( FS_Buf ) , NOSTAT_MANY , 0 )"		1311288	0		=			
ANR	1311334	Identifier	N_Sys		1311288	0					
ANR	1311335	CallExpression	"getmnt ( & start , FS_Buf , sizeof ( FS_Buf ) , NOSTAT_MANY , 0 )"		1311288	1					
ANR	1311336	Callee	getmnt		1311288	0					
ANR	1311337	Identifier	getmnt		1311288	0					
ANR	1311338	ArgumentList	& start		1311288	1					
ANR	1311339	Argument	& start		1311288	0					
ANR	1311340	UnaryOperationExpression	& start		1311288	0					
ANR	1311341	UnaryOperator	&		1311288	0					
ANR	1311342	Identifier	start		1311288	1					
ANR	1311343	Argument	FS_Buf		1311288	1					
ANR	1311344	Identifier	FS_Buf		1311288	0					
ANR	1311345	Argument	sizeof ( FS_Buf )		1311288	2					
ANR	1311346	SizeofExpression	sizeof ( FS_Buf )		1311288	0					
ANR	1311347	Sizeof	sizeof		1311288	0					
ANR	1311348	SizeofOperand	FS_Buf		1311288	1					
ANR	1311349	Argument	NOSTAT_MANY		1311288	3					
ANR	1311350	Identifier	NOSTAT_MANY		1311288	0					
ANR	1311351	Argument	0		1311288	4					
ANR	1311352	PrimaryExpression	0		1311288	0					
ANR	1311353	PrimaryExpression	0		1311288	1					
ANR	1311354	CompoundStatement		10:70:252:252	1311288	1					
ANR	1311355	ExpressionStatement	"dprintf ( D_ALWAYS , ""getmnt failed in extern_path.c: %s\\n"" , strerror ( errno ) )"	139:2:3928:4008	1311288	0	True				
ANR	1311356	CallExpression	"dprintf ( D_ALWAYS , ""getmnt failed in extern_path.c: %s\\n"" , strerror ( errno ) )"		1311288	0					
ANR	1311357	Callee	dprintf		1311288	0					
ANR	1311358	Identifier	dprintf		1311288	0					
ANR	1311359	ArgumentList	D_ALWAYS		1311288	1					
ANR	1311360	Argument	D_ALWAYS		1311288	0					
ANR	1311361	Identifier	D_ALWAYS		1311288	0					
ANR	1311362	Argument	"""getmnt failed in extern_path.c: %s\\n"""		1311288	1					
ANR	1311363	PrimaryExpression	"""getmnt failed in extern_path.c: %s\\n"""		1311288	0					
ANR	1311364	Argument	strerror ( errno )		1311288	2					
ANR	1311365	CallExpression	strerror ( errno )		1311288	0					
ANR	1311366	Callee	strerror		1311288	0					
ANR	1311367	Identifier	strerror		1311288	0					
ANR	1311368	ArgumentList	errno		1311288	1					
ANR	1311369	Argument	errno		1311288	0					
ANR	1311370	Identifier	errno		1311288	0					
ANR	1311371	ReturnStatement	return ;	141:2:4012:4018	1311288	1	True				
ANR	1311372	ExpressionStatement	InitDone = TRUE	144:1:4025:4040	1311288	3	True				
ANR	1311373	AssignmentExpression	InitDone = TRUE		1311288	0		=			
ANR	1311374	Identifier	InitDone		1311288	0					
ANR	1311375	Identifier	TRUE		1311288	1					
ANR	1311376	ReturnType	static void		1311288	1					
ANR	1311377	Identifier	init		1311288	2					
ANR	1311378	ParameterList			1311288	3					
ANR	1311379	CFGEntryNode	ENTRY		1311288		True				
ANR	1311380	CFGExitNode	EXIT		1311288		True				
ANR	1311381	Symbol	InitDone		1311288						
ANR	1311382	Symbol	errno		1311288						
ANR	1311383	Symbol	start		1311288						
ANR	1311384	Symbol	Hostname		1311288						
ANR	1311385	Symbol	D_ALWAYS		1311288						
ANR	1311386	Symbol	TRUE		1311288						
ANR	1311387	Symbol	condor_gethostname		1311288						
ANR	1311388	Symbol	N_Sys		1311288						
ANR	1311389	Symbol	strerror		1311288						
ANR	1311390	Symbol	FS_Buf		1311288						
ANR	1311391	Symbol	getmnt		1311288						
ANR	1311392	Symbol	& start		1311288						
ANR	1311393	Symbol	NOSTAT_MANY		1311288						
ANR	1311394	Function	remote_part	153:0:4310:4606							
ANR	1311395	FunctionDef	"remote_part (char * mnt_pt , char * name)"		1311394	0					
ANR	1311396	CompoundStatement		155:0:4364:4606	1311394	0					
ANR	1311397	IdentifierDeclStatement	"char * x , * y ;"	156:1:4367:4378	1311394	0	True				
ANR	1311398	IdentifierDecl	* x		1311394	0					
ANR	1311399	IdentifierDeclType	char *		1311394	0					
ANR	1311400	Identifier	x		1311394	1					
ANR	1311401	IdentifierDecl	* y		1311394	1					
ANR	1311402	IdentifierDeclType	char *		1311394	0					
ANR	1311403	Identifier	y		1311394	1					
ANR	1311404	ExpressionStatement	"dprintf ( D_NFS , ""Entering remote_part( mnt_pt = \\""%s\\"", name = \\""%s\\"" )\\n"" , mnt_pt , name )"	158:1:4382:4478	1311394	1	True				
ANR	1311405	CallExpression	"dprintf ( D_NFS , ""Entering remote_part( mnt_pt = \\""%s\\"", name = \\""%s\\"" )\\n"" , mnt_pt , name )"		1311394	0					
ANR	1311406	Callee	dprintf		1311394	0					
ANR	1311407	Identifier	dprintf		1311394	0					
ANR	1311408	ArgumentList	D_NFS		1311394	1					
ANR	1311409	Argument	D_NFS		1311394	0					
ANR	1311410	Identifier	D_NFS		1311394	0					
ANR	1311411	Argument	"""Entering remote_part( mnt_pt = \\""%s\\"", name = \\""%s\\"" )\\n"""		1311394	1					
ANR	1311412	PrimaryExpression	"""Entering remote_part( mnt_pt = \\""%s\\"", name = \\""%s\\"" )\\n"""		1311394	0					
ANR	1311413	Argument	mnt_pt		1311394	2					
ANR	1311414	Identifier	mnt_pt		1311394	0					
ANR	1311415	Argument	name		1311394	3					
ANR	1311416	Identifier	name		1311394	0					
ANR	1311417	ForStatement	"for ( x = mnt_pt , y = name ; * x && * x == * y ; x ++ , y ++ )"		1311394	2					
ANR	1311418	ForInit	"x = mnt_pt , y = name ;"	163:6:4487:4503	1311394	0	True				
ANR	1311419	Expression	"x = mnt_pt , y = name"		1311394	0					
ANR	1311420	AssignmentExpression	x = mnt_pt		1311394	0		=			
ANR	1311421	Identifier	x		1311394	0					
ANR	1311422	Identifier	mnt_pt		1311394	1					
ANR	1311423	AssignmentExpression	y = name		1311394	1		=			
ANR	1311424	Identifier	y		1311394	0					
ANR	1311425	Identifier	name		1311394	1					
ANR	1311426	Condition	* x && * x == * y	163:24:4505:4518	1311394	1	True				
ANR	1311427	AndExpression	* x && * x == * y		1311394	0		&&			
ANR	1311428	UnaryOperationExpression	* x		1311394	0					
ANR	1311429	UnaryOperator	*		1311394	0					
ANR	1311430	Identifier	x		1311394	1					
ANR	1311431	EqualityExpression	* x == * y		1311394	1		==			
ANR	1311432	UnaryOperationExpression	* x		1311394	0					
ANR	1311433	UnaryOperator	*		1311394	0					
ANR	1311434	Identifier	x		1311394	1					
ANR	1311435	UnaryOperationExpression	* y		1311394	1					
ANR	1311436	UnaryOperator	*		1311394	0					
ANR	1311437	Identifier	y		1311394	1					
ANR	1311438	Expression	"x ++ , y ++"	163:40:4521:4528	1311394	2	True				
ANR	1311439	PostIncDecOperationExpression	x ++		1311394	0					
ANR	1311440	Identifier	x		1311394	0					
ANR	1311441	IncDec	++		1311394	1					
ANR	1311442	PostIncDecOperationExpression	y ++		1311394	1					
ANR	1311443	Identifier	y		1311394	0					
ANR	1311444	IncDec	++		1311394	1					
ANR	1311445	ExpressionStatement		164:2:4534:4534	1311394	3	True				
ANR	1311446	ExpressionStatement	"dprintf ( D_NFS , ""remote_part: returning \\""%s\\""\\n"" , y )"	166:1:4538:4592	1311394	3	True				
ANR	1311447	CallExpression	"dprintf ( D_NFS , ""remote_part: returning \\""%s\\""\\n"" , y )"		1311394	0					
ANR	1311448	Callee	dprintf		1311394	0					
ANR	1311449	Identifier	dprintf		1311394	0					
ANR	1311450	ArgumentList	D_NFS		1311394	1					
ANR	1311451	Argument	D_NFS		1311394	0					
ANR	1311452	Identifier	D_NFS		1311394	0					
ANR	1311453	Argument	"""remote_part: returning \\""%s\\""\\n"""		1311394	1					
ANR	1311454	PrimaryExpression	"""remote_part: returning \\""%s\\""\\n"""		1311394	0					
ANR	1311455	Argument	y		1311394	2					
ANR	1311456	Identifier	y		1311394	0					
ANR	1311457	ReturnStatement	return y ;	168:1:4596:4604	1311394	4	True				
ANR	1311458	Identifier	y		1311394	0					
ANR	1311459	ReturnType	static char *		1311394	1					
ANR	1311460	Identifier	remote_part		1311394	2					
ANR	1311461	ParameterList	"char * mnt_pt , char * name"		1311394	3					
ANR	1311462	Parameter	char * mnt_pt	154:13:4337:4348	1311394	0	True				
ANR	1311463	ParameterType	char *		1311394	0					
ANR	1311464	Identifier	mnt_pt		1311394	1					
ANR	1311465	Parameter	char * name	154:27:4351:4360	1311394	1	True				
ANR	1311466	ParameterType	char *		1311394	0					
ANR	1311467	Identifier	name		1311394	1					
ANR	1311468	CFGEntryNode	ENTRY		1311394		True				
ANR	1311469	CFGExitNode	EXIT		1311394		True				
ANR	1311470	Symbol	* x		1311394						
ANR	1311471	Symbol	* y		1311394						
ANR	1311472	Symbol	mnt_pt		1311394						
ANR	1311473	Symbol	name		1311394						
ANR	1311474	Symbol	x		1311394						
ANR	1311475	Symbol	y		1311394						
ANR	1311476	Symbol	D_NFS		1311394						
ANR	1311477	Function	xlate_link	176:0:4717:6012							
ANR	1311478	FunctionDef	xlate_link (char * name)		1311477	0					
ANR	1311479	CompoundStatement		178:0:4756:6012	1311477	0					
ANR	1311480	IdentifierDeclStatement	struct stat st_buf ;	179:1:4759:4778	1311477	0	True				
ANR	1311481	IdentifierDecl	st_buf		1311477	0					
ANR	1311482	IdentifierDeclType	struct stat		1311477	0					
ANR	1311483	Identifier	st_buf		1311477	1					
ANR	1311484	IdentifierDeclStatement	"char * ptr , * end , * dst , * cur ;"	180:1:4781:4810	1311477	1	True				
ANR	1311485	IdentifierDecl	* ptr		1311477	0					
ANR	1311486	IdentifierDeclType	char *		1311477	0					
ANR	1311487	Identifier	ptr		1311477	1					
ANR	1311488	IdentifierDecl	* end		1311477	1					
ANR	1311489	IdentifierDeclType	char *		1311477	0					
ANR	1311490	Identifier	end		1311477	1					
ANR	1311491	IdentifierDecl	* dst		1311477	2					
ANR	1311492	IdentifierDeclType	char *		1311477	0					
ANR	1311493	Identifier	dst		1311477	1					
ANR	1311494	IdentifierDecl	* cur		1311477	3					
ANR	1311495	IdentifierDeclType	char *		1311477	0					
ANR	1311496	Identifier	cur		1311477	1					
ANR	1311497	IdentifierDeclStatement	char save ;	181:1:4813:4824	1311477	2	True				
ANR	1311498	IdentifierDecl	save		1311477	0					
ANR	1311499	IdentifierDeclType	char		1311477	0					
ANR	1311500	Identifier	save		1311477	1					
ANR	1311501	IdentifierDeclStatement	int count ;	182:1:4827:4839	1311477	3	True				
ANR	1311502	IdentifierDecl	count		1311477	0					
ANR	1311503	IdentifierDeclType	int		1311477	0					
ANR	1311504	Identifier	count		1311477	1					
ANR	1311505	IdentifierDeclStatement	char path [ MAXPATHLEN + 1 ] ;	183:1:4842:4867	1311477	4	True				
ANR	1311506	IdentifierDecl	path [ MAXPATHLEN + 1 ]		1311477	0					
ANR	1311507	IdentifierDeclType	char [ MAXPATHLEN + 1 ]		1311477	0					
ANR	1311508	Identifier	path		1311477	1					
ANR	1311509	AdditiveExpression	MAXPATHLEN + 1		1311477	2		+			
ANR	1311510	Identifier	MAXPATHLEN		1311477	0					
ANR	1311511	PrimaryExpression	1		1311477	1					
ANR	1311512	IdentifierDeclStatement	char maps_to [ MAXPATHLEN + 1 ] ;	184:1:4870:4898	1311477	5	True				
ANR	1311513	IdentifierDecl	maps_to [ MAXPATHLEN + 1 ]		1311477	0					
ANR	1311514	IdentifierDeclType	char [ MAXPATHLEN + 1 ]		1311477	0					
ANR	1311515	Identifier	maps_to		1311477	1					
ANR	1311516	AdditiveExpression	MAXPATHLEN + 1		1311477	2		+			
ANR	1311517	Identifier	MAXPATHLEN		1311477	0					
ANR	1311518	PrimaryExpression	1		1311477	1					
ANR	1311519	IdentifierDeclStatement	char * up ;	185:1:4901:4911	1311477	6	True				
ANR	1311520	IdentifierDecl	* up		1311477	0					
ANR	1311521	IdentifierDeclType	char *		1311477	0					
ANR	1311522	Identifier	up		1311477	1					
ANR	1311523	IdentifierDeclStatement	int done = TRUE ;	186:1:4914:4932	1311477	7	True				
ANR	1311524	IdentifierDecl	done = TRUE		1311477	0					
ANR	1311525	IdentifierDeclType	int		1311477	0					
ANR	1311526	Identifier	done		1311477	1					
ANR	1311527	AssignmentExpression	done = TRUE		1311477	2		=			
ANR	1311528	Identifier	TRUE		1311477	0					
ANR	1311529	Identifier	TRUE		1311477	1					
ANR	1311530	ExpressionStatement	up = ( char * ) MALLOC ( MAXPATHLEN + 1 )	188:1:4936:4974	1311477	8	True				
ANR	1311531	AssignmentExpression	up = ( char * ) MALLOC ( MAXPATHLEN + 1 )		1311477	0		=			
ANR	1311532	Identifier	up		1311477	0					
ANR	1311533	CastExpression	( char * ) MALLOC ( MAXPATHLEN + 1 )		1311477	1					
ANR	1311534	CastTarget	char *		1311477	0					
ANR	1311535	CallExpression	MALLOC ( MAXPATHLEN + 1 )		1311477	1					
ANR	1311536	Callee	MALLOC		1311477	0					
ANR	1311537	Identifier	MALLOC		1311477	0					
ANR	1311538	ArgumentList	MAXPATHLEN + 1		1311477	1					
ANR	1311539	Argument	MAXPATHLEN + 1		1311477	0					
ANR	1311540	AdditiveExpression	MAXPATHLEN + 1		1311477	0		+			
ANR	1311541	Identifier	MAXPATHLEN		1311477	0					
ANR	1311542	PrimaryExpression	1		1311477	1					
ANR	1311543	ExpressionStatement	up [ 0 ] = '/'	189:1:4977:4988	1311477	9	True				
ANR	1311544	AssignmentExpression	up [ 0 ] = '/'		1311477	0		=			
ANR	1311545	ArrayIndexing	up [ 0 ]		1311477	0					
ANR	1311546	Identifier	up		1311477	0					
ANR	1311547	PrimaryExpression	0		1311477	1					
ANR	1311548	PrimaryExpression	'/'		1311477	1					
ANR	1311549	ExpressionStatement	up [ 1 ] = '\\0'	190:1:4991:5003	1311477	10	True				
ANR	1311550	AssignmentExpression	up [ 1 ] = '\\0'		1311477	0		=			
ANR	1311551	ArrayIndexing	up [ 1 ]		1311477	0					
ANR	1311552	Identifier	up		1311477	0					
ANR	1311553	PrimaryExpression	1		1311477	1					
ANR	1311554	PrimaryExpression	'\\0'		1311477	1					
ANR	1311555	ExpressionStatement	cur = name + 1	191:1:5006:5020	1311477	11	True				
ANR	1311556	AssignmentExpression	cur = name + 1		1311477	0		=			
ANR	1311557	Identifier	cur		1311477	0					
ANR	1311558	AdditiveExpression	name + 1		1311477	1		+			
ANR	1311559	Identifier	name		1311477	0					
ANR	1311560	PrimaryExpression	1		1311477	1					
ANR	1311561	ForStatement	for ( ; ; )		1311477	12					
ANR	1311562	CompoundStatement		16:9:275:275	1311477	0					
ANR	1311563	ForStatement	"for ( dst = path , end = up ; * end ; * dst ++ = * end ++ )"		1311477	0					
ANR	1311564	ForInit	"dst = path , end = up ;"	194:7:5041:5057	1311477	0	True				
ANR	1311565	Expression	"dst = path , end = up"		1311477	0					
ANR	1311566	AssignmentExpression	dst = path		1311477	0		=			
ANR	1311567	Identifier	dst		1311477	0					
ANR	1311568	Identifier	path		1311477	1					
ANR	1311569	AssignmentExpression	end = up		1311477	1		=			
ANR	1311570	Identifier	end		1311477	0					
ANR	1311571	Identifier	up		1311477	1					
ANR	1311572	Condition	* end	194:25:5059:5062	1311477	1	True				
ANR	1311573	UnaryOperationExpression	* end		1311477	0					
ANR	1311574	UnaryOperator	*		1311477	0					
ANR	1311575	Identifier	end		1311477	1					
ANR	1311576	AssignmentExpression	* dst ++ = * end ++	194:31:5065:5079	1311477	2	True	=			
ANR	1311577	UnaryOperationExpression	* dst ++		1311477	0					
ANR	1311578	UnaryOperator	*		1311477	0					
ANR	1311579	PostIncDecOperationExpression	dst ++		1311477	1					
ANR	1311580	Identifier	dst		1311477	0					
ANR	1311581	IncDec	++		1311477	1					
ANR	1311582	UnaryOperationExpression	* end ++		1311477	1					
ANR	1311583	UnaryOperator	*		1311477	0					
ANR	1311584	PostIncDecOperationExpression	end ++		1311477	1					
ANR	1311585	Identifier	end		1311477	0					
ANR	1311586	IncDec	++		1311477	1					
ANR	1311587	ExpressionStatement		195:3:5086:5086	1311477	3	True				
ANR	1311588	ForStatement	for ( ptr = cur ; * ptr && * ptr != '/' ; * dst ++ = * ptr ++ )		1311477	1					
ANR	1311589	ForInit	ptr = cur ;	197:7:5096:5103	1311477	0	True				
ANR	1311590	AssignmentExpression	ptr = cur		1311477	0		=			
ANR	1311591	Identifier	ptr		1311477	0					
ANR	1311592	Identifier	cur		1311477	1					
ANR	1311593	Condition	* ptr && * ptr != '/'	197:16:5105:5123	1311477	1	True				
ANR	1311594	AndExpression	* ptr && * ptr != '/'		1311477	0		&&			
ANR	1311595	UnaryOperationExpression	* ptr		1311477	0					
ANR	1311596	UnaryOperator	*		1311477	0					
ANR	1311597	Identifier	ptr		1311477	1					
ANR	1311598	EqualityExpression	* ptr != '/'		1311477	1		!=			
ANR	1311599	UnaryOperationExpression	* ptr		1311477	0					
ANR	1311600	UnaryOperator	*		1311477	0					
ANR	1311601	Identifier	ptr		1311477	1					
ANR	1311602	PrimaryExpression	'/'		1311477	1					
ANR	1311603	AssignmentExpression	* dst ++ = * ptr ++	197:37:5126:5140	1311477	2	True	=			
ANR	1311604	UnaryOperationExpression	* dst ++		1311477	0					
ANR	1311605	UnaryOperator	*		1311477	0					
ANR	1311606	PostIncDecOperationExpression	dst ++		1311477	1					
ANR	1311607	Identifier	dst		1311477	0					
ANR	1311608	IncDec	++		1311477	1					
ANR	1311609	UnaryOperationExpression	* ptr ++		1311477	1					
ANR	1311610	UnaryOperator	*		1311477	0					
ANR	1311611	PostIncDecOperationExpression	ptr ++		1311477	1					
ANR	1311612	Identifier	ptr		1311477	0					
ANR	1311613	IncDec	++		1311477	1					
ANR	1311614	ExpressionStatement		198:3:5147:5147	1311477	3	True				
ANR	1311615	ExpressionStatement	* dst = '\\0'	199:2:5151:5162	1311477	2	True				
ANR	1311616	AssignmentExpression	* dst = '\\0'		1311477	0		=			
ANR	1311617	UnaryOperationExpression	* dst		1311477	0					
ANR	1311618	UnaryOperator	*		1311477	0					
ANR	1311619	Identifier	dst		1311477	1					
ANR	1311620	PrimaryExpression	'\\0'		1311477	1					
ANR	1311621	IfStatement	"if ( lstat ( path , & st_buf ) < 0 )"		1311477	3					
ANR	1311622	Condition	"lstat ( path , & st_buf ) < 0"	202:6:5174:5196	1311477	0	True				
ANR	1311623	RelationalExpression	"lstat ( path , & st_buf ) < 0"		1311477	0		<			
ANR	1311624	CallExpression	"lstat ( path , & st_buf )"		1311477	0					
ANR	1311625	Callee	lstat		1311477	0					
ANR	1311626	Identifier	lstat		1311477	0					
ANR	1311627	ArgumentList	path		1311477	1					
ANR	1311628	Argument	path		1311477	0					
ANR	1311629	Identifier	path		1311477	0					
ANR	1311630	Argument	& st_buf		1311477	1					
ANR	1311631	UnaryOperationExpression	& st_buf		1311477	0					
ANR	1311632	UnaryOperator	&		1311477	0					
ANR	1311633	Identifier	st_buf		1311477	1					
ANR	1311634	PrimaryExpression	0		1311477	1					
ANR	1311635	CompoundStatement		25:32:443:443	1311477	1					
ANR	1311636	IfStatement	if ( errno == EFAULT )		1311477	0					
ANR	1311637	Condition	errno == EFAULT	203:7:5209:5223	1311477	0	True				
ANR	1311638	EqualityExpression	errno == EFAULT		1311477	0		==			
ANR	1311639	Identifier	errno		1311477	0					
ANR	1311640	Identifier	EFAULT		1311477	1					
ANR	1311641	CompoundStatement		26:25:470:470	1311477	1					
ANR	1311642	ExpressionStatement	"dprintf ( D_ALWAYS , ""lstat failed in xlate_link: %s\\n"" , strerror ( errno ) )"	204:4:5233:5309	1311477	0	True				
ANR	1311643	CallExpression	"dprintf ( D_ALWAYS , ""lstat failed in xlate_link: %s\\n"" , strerror ( errno ) )"		1311477	0					
ANR	1311644	Callee	dprintf		1311477	0					
ANR	1311645	Identifier	dprintf		1311477	0					
ANR	1311646	ArgumentList	D_ALWAYS		1311477	1					
ANR	1311647	Argument	D_ALWAYS		1311477	0					
ANR	1311648	Identifier	D_ALWAYS		1311477	0					
ANR	1311649	Argument	"""lstat failed in xlate_link: %s\\n"""		1311477	1					
ANR	1311650	PrimaryExpression	"""lstat failed in xlate_link: %s\\n"""		1311477	0					
ANR	1311651	Argument	strerror ( errno )		1311477	2					
ANR	1311652	CallExpression	strerror ( errno )		1311477	0					
ANR	1311653	Callee	strerror		1311477	0					
ANR	1311654	Identifier	strerror		1311477	0					
ANR	1311655	ArgumentList	errno		1311477	1					
ANR	1311656	Argument	errno		1311477	0					
ANR	1311657	Identifier	errno		1311477	0					
ANR	1311658	ExpressionStatement	free ( up )	207:3:5319:5327	1311477	1	True				
ANR	1311659	CallExpression	free ( up )		1311477	0					
ANR	1311660	Callee	free		1311477	0					
ANR	1311661	Identifier	free		1311477	0					
ANR	1311662	ArgumentList	up		1311477	1					
ANR	1311663	Argument	up		1311477	0					
ANR	1311664	Identifier	up		1311477	0					
ANR	1311665	ReturnStatement	return NULL ;	208:3:5332:5343	1311477	2	True				
ANR	1311666	Identifier	NULL		1311477	0					
ANR	1311667	IfStatement	if ( ( st_buf . st_mode & S_IFMT ) == S_IFLNK )		1311477	4					
ANR	1311668	Condition	( st_buf . st_mode & S_IFMT ) == S_IFLNK	210:6:5355:5390	1311477	0	True				
ANR	1311669	EqualityExpression	( st_buf . st_mode & S_IFMT ) == S_IFLNK		1311477	0		==			
ANR	1311670	BitAndExpression	st_buf . st_mode & S_IFMT		1311477	0		&			
ANR	1311671	MemberAccess	st_buf . st_mode		1311477	0					
ANR	1311672	Identifier	st_buf		1311477	0					
ANR	1311673	Identifier	st_mode		1311477	1					
ANR	1311674	Identifier	S_IFMT		1311477	1					
ANR	1311675	Identifier	S_IFLNK		1311477	1					
ANR	1311676	CompoundStatement		33:45:637:637	1311477	1					
ANR	1311677	ExpressionStatement	done = FALSE	211:3:5399:5411	1311477	0	True				
ANR	1311678	AssignmentExpression	done = FALSE		1311477	0		=			
ANR	1311679	Identifier	done		1311477	0					
ANR	1311680	Identifier	FALSE		1311477	1					
ANR	1311681	IfStatement	"if ( ( count = readlink ( path , maps_to , sizeof ( maps_to ) ) - 1 ) < 0 )"		1311477	1					
ANR	1311682	Condition	"( count = readlink ( path , maps_to , sizeof ( maps_to ) ) - 1 ) < 0"	212:7:5420:5473	1311477	0	True				
ANR	1311683	RelationalExpression	"( count = readlink ( path , maps_to , sizeof ( maps_to ) ) - 1 ) < 0"		1311477	0		<			
ANR	1311684	AssignmentExpression	"count = readlink ( path , maps_to , sizeof ( maps_to ) ) - 1"		1311477	0		=			
ANR	1311685	Identifier	count		1311477	0					
ANR	1311686	AdditiveExpression	"readlink ( path , maps_to , sizeof ( maps_to ) ) - 1"		1311477	1		-			
ANR	1311687	CallExpression	"readlink ( path , maps_to , sizeof ( maps_to ) )"		1311477	0					
ANR	1311688	Callee	readlink		1311477	0					
ANR	1311689	Identifier	readlink		1311477	0					
ANR	1311690	ArgumentList	path		1311477	1					
ANR	1311691	Argument	path		1311477	0					
ANR	1311692	Identifier	path		1311477	0					
ANR	1311693	Argument	maps_to		1311477	1					
ANR	1311694	Identifier	maps_to		1311477	0					
ANR	1311695	Argument	sizeof ( maps_to )		1311477	2					
ANR	1311696	SizeofExpression	sizeof ( maps_to )		1311477	0					
ANR	1311697	Sizeof	sizeof		1311477	0					
ANR	1311698	SizeofOperand	maps_to		1311477	1					
ANR	1311699	PrimaryExpression	1		1311477	1					
ANR	1311700	PrimaryExpression	0		1311477	1					
ANR	1311701	CompoundStatement		35:64:720:720	1311477	1					
ANR	1311702	ExpressionStatement	"dprintf ( D_ALWAYS , ""readlink failed in xlate_link: %s\\n"" , strerror ( errno ) )"	213:4:5483:5562	1311477	0	True				
ANR	1311703	CallExpression	"dprintf ( D_ALWAYS , ""readlink failed in xlate_link: %s\\n"" , strerror ( errno ) )"		1311477	0					
ANR	1311704	Callee	dprintf		1311477	0					
ANR	1311705	Identifier	dprintf		1311477	0					
ANR	1311706	ArgumentList	D_ALWAYS		1311477	1					
ANR	1311707	Argument	D_ALWAYS		1311477	0					
ANR	1311708	Identifier	D_ALWAYS		1311477	0					
ANR	1311709	Argument	"""readlink failed in xlate_link: %s\\n"""		1311477	1					
ANR	1311710	PrimaryExpression	"""readlink failed in xlate_link: %s\\n"""		1311477	0					
ANR	1311711	Argument	strerror ( errno )		1311477	2					
ANR	1311712	CallExpression	strerror ( errno )		1311477	0					
ANR	1311713	Callee	strerror		1311477	0					
ANR	1311714	Identifier	strerror		1311477	0					
ANR	1311715	ArgumentList	errno		1311477	1					
ANR	1311716	Argument	errno		1311477	0					
ANR	1311717	Identifier	errno		1311477	0					
ANR	1311718	ExpressionStatement	free ( up )	215:4:5568:5576	1311477	1	True				
ANR	1311719	CallExpression	free ( up )		1311477	0					
ANR	1311720	Callee	free		1311477	0					
ANR	1311721	Identifier	free		1311477	0					
ANR	1311722	ArgumentList	up		1311477	1					
ANR	1311723	Argument	up		1311477	0					
ANR	1311724	Identifier	up		1311477	0					
ANR	1311725	ReturnStatement	return NULL ;	216:4:5582:5593	1311477	2	True				
ANR	1311726	Identifier	NULL		1311477	0					
ANR	1311727	ExpressionStatement	maps_to [ count ] = '\\0'	218:3:5603:5624	1311477	2	True				
ANR	1311728	AssignmentExpression	maps_to [ count ] = '\\0'		1311477	0		=			
ANR	1311729	ArrayIndexing	maps_to [ count ]		1311477	0					
ANR	1311730	Identifier	maps_to		1311477	0					
ANR	1311731	Identifier	count		1311477	1					
ANR	1311732	PrimaryExpression	'\\0'		1311477	1					
ANR	1311733	IfStatement	if ( maps_to [ 0 ] == '/' )		1311477	3					
ANR	1311734	Condition	maps_to [ 0 ] == '/'	219:7:5633:5649	1311477	0	True				
ANR	1311735	EqualityExpression	maps_to [ 0 ] == '/'		1311477	0		==			
ANR	1311736	ArrayIndexing	maps_to [ 0 ]		1311477	0					
ANR	1311737	Identifier	maps_to		1311477	0					
ANR	1311738	PrimaryExpression	0		1311477	1					
ANR	1311739	PrimaryExpression	'/'		1311477	1					
ANR	1311740	CompoundStatement		42:27:896:896	1311477	1					
ANR	1311741	ExpressionStatement	"( void ) strcpy ( up , maps_to )"	220:4:5659:5686	1311477	0	True				
ANR	1311742	CastExpression	"( void ) strcpy ( up , maps_to )"		1311477	0					
ANR	1311743	CastTarget	void		1311477	0					
ANR	1311744	CallExpression	"strcpy ( up , maps_to )"		1311477	1					
ANR	1311745	Callee	strcpy		1311477	0					
ANR	1311746	Identifier	strcpy		1311477	0					
ANR	1311747	ArgumentList	up		1311477	1					
ANR	1311748	Argument	up		1311477	0					
ANR	1311749	Identifier	up		1311477	0					
ANR	1311750	Argument	maps_to		1311477	1					
ANR	1311751	Identifier	maps_to		1311477	0					
ANR	1311752	ElseStatement	else		1311477	0					
ANR	1311753	CompoundStatement		44:10:941:941	1311477	0					
ANR	1311754	ExpressionStatement	"( void ) strcat ( up , maps_to )"	222:4:5704:5731	1311477	0	True				
ANR	1311755	CastExpression	"( void ) strcat ( up , maps_to )"		1311477	0					
ANR	1311756	CastTarget	void		1311477	0					
ANR	1311757	CallExpression	"strcat ( up , maps_to )"		1311477	1					
ANR	1311758	Callee	strcat		1311477	0					
ANR	1311759	Identifier	strcat		1311477	0					
ANR	1311760	ArgumentList	up		1311477	1					
ANR	1311761	Argument	up		1311477	0					
ANR	1311762	Identifier	up		1311477	0					
ANR	1311763	Argument	maps_to		1311477	1					
ANR	1311764	Identifier	maps_to		1311477	0					
ANR	1311765	ElseStatement	else		1311477	0					
ANR	1311766	CompoundStatement		47:9:990:990	1311477	0					
ANR	1311767	ExpressionStatement	save = * ptr	225:3:5752:5763	1311477	0	True				
ANR	1311768	AssignmentExpression	save = * ptr		1311477	0		=			
ANR	1311769	Identifier	save		1311477	0					
ANR	1311770	UnaryOperationExpression	* ptr		1311477	1					
ANR	1311771	UnaryOperator	*		1311477	0					
ANR	1311772	Identifier	ptr		1311477	1					
ANR	1311773	ExpressionStatement	* ptr = '\\0'	226:3:5768:5779	1311477	1	True				
ANR	1311774	AssignmentExpression	* ptr = '\\0'		1311477	0		=			
ANR	1311775	UnaryOperationExpression	* ptr		1311477	0					
ANR	1311776	UnaryOperator	*		1311477	0					
ANR	1311777	Identifier	ptr		1311477	1					
ANR	1311778	PrimaryExpression	'\\0'		1311477	1					
ANR	1311779	ExpressionStatement	"( void ) strcat ( up , cur )"	227:3:5784:5807	1311477	2	True				
ANR	1311780	CastExpression	"( void ) strcat ( up , cur )"		1311477	0					
ANR	1311781	CastTarget	void		1311477	0					
ANR	1311782	CallExpression	"strcat ( up , cur )"		1311477	1					
ANR	1311783	Callee	strcat		1311477	0					
ANR	1311784	Identifier	strcat		1311477	0					
ANR	1311785	ArgumentList	up		1311477	1					
ANR	1311786	Argument	up		1311477	0					
ANR	1311787	Identifier	up		1311477	0					
ANR	1311788	Argument	cur		1311477	1					
ANR	1311789	Identifier	cur		1311477	0					
ANR	1311790	ExpressionStatement	* ptr = save	228:3:5812:5823	1311477	3	True				
ANR	1311791	AssignmentExpression	* ptr = save		1311477	0		=			
ANR	1311792	UnaryOperationExpression	* ptr		1311477	0					
ANR	1311793	UnaryOperator	*		1311477	0					
ANR	1311794	Identifier	ptr		1311477	1					
ANR	1311795	Identifier	save		1311477	1					
ANR	1311796	IfStatement	if ( * ptr == '/' )		1311477	5					
ANR	1311797	Condition	* ptr == '/'	230:6:5835:5845	1311477	0	True				
ANR	1311798	EqualityExpression	* ptr == '/'		1311477	0		==			
ANR	1311799	UnaryOperationExpression	* ptr		1311477	0					
ANR	1311800	UnaryOperator	*		1311477	0					
ANR	1311801	Identifier	ptr		1311477	1					
ANR	1311802	PrimaryExpression	'/'		1311477	1					
ANR	1311803	CompoundStatement		53:20:1092:1092	1311477	1					
ANR	1311804	ExpressionStatement	"( void ) strcat ( up , ""/"" )"	231:3:5854:5877	1311477	0	True				
ANR	1311805	CastExpression	"( void ) strcat ( up , ""/"" )"		1311477	0					
ANR	1311806	CastTarget	void		1311477	0					
ANR	1311807	CallExpression	"strcat ( up , ""/"" )"		1311477	1					
ANR	1311808	Callee	strcat		1311477	0					
ANR	1311809	Identifier	strcat		1311477	0					
ANR	1311810	ArgumentList	up		1311477	1					
ANR	1311811	Argument	up		1311477	0					
ANR	1311812	Identifier	up		1311477	0					
ANR	1311813	Argument	"""/"""		1311477	1					
ANR	1311814	PrimaryExpression	"""/"""		1311477	0					
ANR	1311815	ExpressionStatement	cur = ptr + 1	232:3:5882:5895	1311477	1	True				
ANR	1311816	AssignmentExpression	cur = ptr + 1		1311477	0		=			
ANR	1311817	Identifier	cur		1311477	0					
ANR	1311818	AdditiveExpression	ptr + 1		1311477	1		+			
ANR	1311819	Identifier	ptr		1311477	0					
ANR	1311820	PrimaryExpression	1		1311477	1					
ANR	1311821	ElseStatement	else		1311477	0					
ANR	1311822	CompoundStatement		56:9:1149:1149	1311477	0					
ANR	1311823	IfStatement	if ( done )		1311477	0					
ANR	1311824	Condition	done	234:7:5915:5918	1311477	0	True				
ANR	1311825	Identifier	done		1311477	0					
ANR	1311826	CompoundStatement		57:14:1165:1165	1311477	1					
ANR	1311827	ReturnStatement	return compress ( up ) ;	235:4:5928:5947	1311477	0	True				
ANR	1311828	CallExpression	compress ( up )		1311477	0					
ANR	1311829	Callee	compress		1311477	0					
ANR	1311830	Identifier	compress		1311477	0					
ANR	1311831	ArgumentList	up		1311477	1					
ANR	1311832	Argument	up		1311477	0					
ANR	1311833	Identifier	up		1311477	0					
ANR	1311834	ElseStatement	else		1311477	0					
ANR	1311835	CompoundStatement		59:10:1202:1202	1311477	0					
ANR	1311836	ReturnStatement	return xlate_link ( compress ( up ) ) ;	237:4:5965:5998	1311477	0	True				
ANR	1311837	CallExpression	xlate_link ( compress ( up ) )		1311477	0					
ANR	1311838	Callee	xlate_link		1311477	0					
ANR	1311839	Identifier	xlate_link		1311477	0					
ANR	1311840	ArgumentList	compress ( up )		1311477	1					
ANR	1311841	Argument	compress ( up )		1311477	0					
ANR	1311842	CallExpression	compress ( up )		1311477	0					
ANR	1311843	Callee	compress		1311477	0					
ANR	1311844	Identifier	compress		1311477	0					
ANR	1311845	ArgumentList	up		1311477	1					
ANR	1311846	Argument	up		1311477	0					
ANR	1311847	Identifier	up		1311477	0					
ANR	1311848	ReturnType	static char *		1311477	1					
ANR	1311849	Identifier	xlate_link		1311477	2					
ANR	1311850	ParameterList	char * name		1311477	3					
ANR	1311851	Parameter	char * name	177:12:4743:4752	1311477	0	True				
ANR	1311852	ParameterType	char *		1311477	0					
ANR	1311853	Identifier	name		1311477	1					
ANR	1311854	CFGEntryNode	ENTRY		1311477		True				
ANR	1311855	CFGExitNode	EXIT		1311477		True				
ANR	1311856	InfiniteForNode	true		1311477		True				
ANR	1311857	Symbol	cur		1311477						
ANR	1311858	Symbol	* up		1311477						
ANR	1311859	Symbol	dst		1311477						
ANR	1311860	Symbol	readlink		1311477						
ANR	1311861	Symbol	S_IFLNK		1311477						
ANR	1311862	Symbol	save		1311477						
ANR	1311863	Symbol	xlate_link		1311477						
ANR	1311864	Symbol	maps_to		1311477						
ANR	1311865	Symbol	& st_buf		1311477						
ANR	1311866	Symbol	S_IFMT		1311477						
ANR	1311867	Symbol	* dst		1311477						
ANR	1311868	Symbol	path		1311477						
ANR	1311869	Symbol	MAXPATHLEN		1311477						
ANR	1311870	Symbol	* count		1311477						
ANR	1311871	Symbol	* ptr		1311477						
ANR	1311872	Symbol	st_buf		1311477						
ANR	1311873	Symbol	end		1311477						
ANR	1311874	Symbol	up		1311477						
ANR	1311875	Symbol	* maps_to		1311477						
ANR	1311876	Symbol	st_buf . st_mode		1311477						
ANR	1311877	Symbol	errno		1311477						
ANR	1311878	Symbol	NULL		1311477						
ANR	1311879	Symbol	compress		1311477						
ANR	1311880	Symbol	* ptr ++		1311477						
ANR	1311881	Symbol	lstat		1311477						
ANR	1311882	Symbol	count		1311477						
ANR	1311883	Symbol	D_ALWAYS		1311477						
ANR	1311884	Symbol	TRUE		1311477						
ANR	1311885	Symbol	EFAULT		1311477						
ANR	1311886	Symbol	done		1311477						
ANR	1311887	Symbol	ptr		1311477						
ANR	1311888	Symbol	strerror		1311477						
ANR	1311889	Symbol	MALLOC		1311477						
ANR	1311890	Symbol	* end ++		1311477						
ANR	1311891	Symbol	* dst ++		1311477						
ANR	1311892	Symbol	name		1311477						
ANR	1311893	Symbol	* end		1311477						
ANR	1311894	Symbol	FALSE		1311477						
ANR	1311895	Function	compress	248:0:6185:6538							
ANR	1311896	FunctionDef	compress (char * path)		1311895	0					
ANR	1311897	CompoundStatement		250:0:6222:6538	1311895	0					
ANR	1311898	IdentifierDeclStatement	"char * src , * dst ;"	251:1:6225:6240	1311895	0	True				
ANR	1311899	IdentifierDecl	* src		1311895	0					
ANR	1311900	IdentifierDeclType	char *		1311895	0					
ANR	1311901	Identifier	src		1311895	1					
ANR	1311902	IdentifierDecl	* dst		1311895	1					
ANR	1311903	IdentifierDeclType	char *		1311895	0					
ANR	1311904	Identifier	dst		1311895	1					
ANR	1311905	ForStatement	for ( src = path ; * src ; src ++ )		1311895	1					
ANR	1311906	ForInit	src = path ;	253:6:6249:6257	1311895	0	True				
ANR	1311907	AssignmentExpression	src = path		1311895	0		=			
ANR	1311908	Identifier	src		1311895	0					
ANR	1311909	Identifier	path		1311895	1					
ANR	1311910	Condition	* src	253:16:6259:6262	1311895	1	True				
ANR	1311911	UnaryOperationExpression	* src		1311895	0					
ANR	1311912	UnaryOperator	*		1311895	0					
ANR	1311913	Identifier	src		1311895	1					
ANR	1311914	PostIncDecOperationExpression	src ++	253:22:6265:6269	1311895	2	True				
ANR	1311915	Identifier	src		1311895	0					
ANR	1311916	IncDec	++		1311895	1					
ANR	1311917	CompoundStatement		4:30:50:50	1311895	3					
ANR	1311918	IfStatement	if ( src [ 0 ] == '/' && src [ 1 ] == '.' && src [ 2 ] == '.' && ( src [ 3 ] == '/' || src [ 3 ] == '\\0' ) )		1311895	0					
ANR	1311919	Condition	src [ 0 ] == '/' && src [ 1 ] == '.' && src [ 2 ] == '.' && ( src [ 3 ] == '/' || src [ 3 ] == '\\0' )	254:6:6281:6374	1311895	0	True				
ANR	1311920	AndExpression	src [ 0 ] == '/' && src [ 1 ] == '.' && src [ 2 ] == '.' && ( src [ 3 ] == '/' || src [ 3 ] == '\\0' )		1311895	0		&&			
ANR	1311921	EqualityExpression	src [ 0 ] == '/'		1311895	0		==			
ANR	1311922	ArrayIndexing	src [ 0 ]		1311895	0					
ANR	1311923	Identifier	src		1311895	0					
ANR	1311924	PrimaryExpression	0		1311895	1					
ANR	1311925	PrimaryExpression	'/'		1311895	1					
ANR	1311926	AndExpression	src [ 1 ] == '.' && src [ 2 ] == '.' && ( src [ 3 ] == '/' || src [ 3 ] == '\\0' )		1311895	1		&&			
ANR	1311927	EqualityExpression	src [ 1 ] == '.'		1311895	0		==			
ANR	1311928	ArrayIndexing	src [ 1 ]		1311895	0					
ANR	1311929	Identifier	src		1311895	0					
ANR	1311930	PrimaryExpression	1		1311895	1					
ANR	1311931	PrimaryExpression	'.'		1311895	1					
ANR	1311932	AndExpression	src [ 2 ] == '.' && ( src [ 3 ] == '/' || src [ 3 ] == '\\0' )		1311895	1		&&			
ANR	1311933	EqualityExpression	src [ 2 ] == '.'		1311895	0		==			
ANR	1311934	ArrayIndexing	src [ 2 ]		1311895	0					
ANR	1311935	Identifier	src		1311895	0					
ANR	1311936	PrimaryExpression	2		1311895	1					
ANR	1311937	PrimaryExpression	'.'		1311895	1					
ANR	1311938	OrExpression	src [ 3 ] == '/' || src [ 3 ] == '\\0'		1311895	1		||			
ANR	1311939	EqualityExpression	src [ 3 ] == '/'		1311895	0		==			
ANR	1311940	ArrayIndexing	src [ 3 ]		1311895	0					
ANR	1311941	Identifier	src		1311895	0					
ANR	1311942	PrimaryExpression	3		1311895	1					
ANR	1311943	PrimaryExpression	'/'		1311895	1					
ANR	1311944	EqualityExpression	src [ 3 ] == '\\0'		1311895	1		==			
ANR	1311945	ArrayIndexing	src [ 3 ]		1311895	0					
ANR	1311946	Identifier	src		1311895	0					
ANR	1311947	PrimaryExpression	3		1311895	1					
ANR	1311948	PrimaryExpression	'\\0'		1311895	1					
ANR	1311949	CompoundStatement		6:46:155:155	1311895	1					
ANR	1311950	ForStatement	for ( dst = src - 1 ; * dst != '/' ; dst -- )		1311895	0					
ANR	1311951	ForInit	dst = src - 1 ;	256:8:6388:6399	1311895	0	True				
ANR	1311952	AssignmentExpression	dst = src - 1		1311895	0		=			
ANR	1311953	Identifier	dst		1311895	0					
ANR	1311954	AdditiveExpression	src - 1		1311895	1		-			
ANR	1311955	Identifier	src		1311895	0					
ANR	1311956	PrimaryExpression	1		1311895	1					
ANR	1311957	Condition	* dst != '/'	256:21:6401:6411	1311895	1	True				
ANR	1311958	EqualityExpression	* dst != '/'		1311895	0		!=			
ANR	1311959	UnaryOperationExpression	* dst		1311895	0					
ANR	1311960	UnaryOperator	*		1311895	0					
ANR	1311961	Identifier	dst		1311895	1					
ANR	1311962	PrimaryExpression	'/'		1311895	1					
ANR	1311963	PostIncDecOperationExpression	dst --	256:34:6414:6418	1311895	2	True				
ANR	1311964	Identifier	dst		1311895	0					
ANR	1311965	IncDec	--		1311895	1					
ANR	1311966	ExpressionStatement		257:4:6426:6426	1311895	3	True				
ANR	1311967	ExpressionStatement	src += 3	258:3:6431:6439	1311895	1	True				
ANR	1311968	AssignmentExpression	src += 3		1311895	0		+=			
ANR	1311969	Identifier	src		1311895	0					
ANR	1311970	PrimaryExpression	3		1311895	1					
ANR	1311971	WhileStatement	while ( * src )		1311895	2					
ANR	1311972	Condition	* src	259:10:6451:6454	1311895	0	True				
ANR	1311973	UnaryOperationExpression	* src		1311895	0					
ANR	1311974	UnaryOperator	*		1311895	0					
ANR	1311975	Identifier	src		1311895	1					
ANR	1311976	CompoundStatement		10:17:235:235	1311895	1					
ANR	1311977	ExpressionStatement	* dst ++ = * src ++	260:4:6464:6479	1311895	0	True				
ANR	1311978	AssignmentExpression	* dst ++ = * src ++		1311895	0		=			
ANR	1311979	UnaryOperationExpression	* dst ++		1311895	0					
ANR	1311980	UnaryOperator	*		1311895	0					
ANR	1311981	PostIncDecOperationExpression	dst ++		1311895	1					
ANR	1311982	Identifier	dst		1311895	0					
ANR	1311983	IncDec	++		1311895	1					
ANR	1311984	UnaryOperationExpression	* src ++		1311895	1					
ANR	1311985	UnaryOperator	*		1311895	0					
ANR	1311986	PostIncDecOperationExpression	src ++		1311895	1					
ANR	1311987	Identifier	src		1311895	0					
ANR	1311988	IncDec	++		1311895	1					
ANR	1311989	ExpressionStatement	* dst = '\\0'	262:3:6489:6500	1311895	3	True				
ANR	1311990	AssignmentExpression	* dst = '\\0'		1311895	0		=			
ANR	1311991	UnaryOperationExpression	* dst		1311895	0					
ANR	1311992	UnaryOperator	*		1311895	0					
ANR	1311993	Identifier	dst		1311895	1					
ANR	1311994	PrimaryExpression	'\\0'		1311895	1					
ANR	1311995	ExpressionStatement	src = path	263:3:6505:6515	1311895	4	True				
ANR	1311996	AssignmentExpression	src = path		1311895	0		=			
ANR	1311997	Identifier	src		1311895	0					
ANR	1311998	Identifier	path		1311895	1					
ANR	1311999	ReturnStatement	return path ;	266:1:6525:6536	1311895	2	True				
ANR	1312000	Identifier	path		1311895	0					
ANR	1312001	ReturnType	static char *		1311895	1					
ANR	1312002	Identifier	compress		1311895	2					
ANR	1312003	ParameterList	char * path		1311895	3					
ANR	1312004	Parameter	char * path	249:10:6209:6218	1311895	0	True				
ANR	1312005	ParameterType	char *		1311895	0					
ANR	1312006	Identifier	path		1311895	1					
ANR	1312007	CFGEntryNode	ENTRY		1311895		True				
ANR	1312008	CFGExitNode	EXIT		1311895		True				
ANR	1312009	Symbol	* dst		1311895						
ANR	1312010	Symbol	path		1311895						
ANR	1312011	Symbol	dst		1311895						
ANR	1312012	Symbol	src		1311895						
ANR	1312013	Symbol	* dst ++		1311895						
ANR	1312014	Symbol	* src ++		1311895						
ANR	1312015	Symbol	* src		1311895						
