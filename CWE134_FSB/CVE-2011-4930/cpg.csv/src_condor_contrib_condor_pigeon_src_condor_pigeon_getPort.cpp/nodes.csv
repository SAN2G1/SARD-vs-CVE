command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2904603	File	data/converged/CVE-2011-4930_htcondor/src_condor_contrib_condor_pigeon_src_condor_pigeon_getPort.cpp								
ANR	2904604	Function	getPortPath	31:0:967:1622							
ANR	2904605	FunctionDef	getPortPath ()		2904604	0					
ANR	2904606	CompoundStatement		31:24:991:1622	2904604	0					
ANR	2904607	IdentifierDeclStatement	"char * path = param ( ""QPID_PORT"" ) ;"	32:1:994:1025	2904604	0	True				
ANR	2904608	IdentifierDecl	"* path = param ( ""QPID_PORT"" )"		2904604	0					
ANR	2904609	IdentifierDeclType	char *		2904604	0					
ANR	2904610	Identifier	path		2904604	1					
ANR	2904611	AssignmentExpression	"* path = param ( ""QPID_PORT"" )"		2904604	2		=			
ANR	2904612	Identifier	path		2904604	0					
ANR	2904613	CallExpression	"param ( ""QPID_PORT"" )"		2904604	1					
ANR	2904614	Callee	param		2904604	0					
ANR	2904615	Identifier	param		2904604	0					
ANR	2904616	ArgumentList	"""QPID_PORT"""		2904604	1					
ANR	2904617	Argument	"""QPID_PORT"""		2904604	0					
ANR	2904618	PrimaryExpression	"""QPID_PORT"""		2904604	0					
ANR	2904619	IfStatement	if ( path == NULL )		2904604	1					
ANR	2904620	Condition	path == NULL	33:5:1032:1044	2904604	0	True				
ANR	2904621	EqualityExpression	path == NULL		2904604	0		==			
ANR	2904622	Identifier	path		2904604	0					
ANR	2904623	Identifier	NULL		2904604	1					
ANR	2904624	CompoundStatement		5:2:86:114	2904604	1					
ANR	2904625	ExpressionStatement	"printf ( ""is null ... \\n"" )"	34:1:1050:1074	2904604	0	True				
ANR	2904626	CallExpression	"printf ( ""is null ... \\n"" )"		2904604	0					
ANR	2904627	Callee	printf		2904604	0					
ANR	2904628	Identifier	printf		2904604	0					
ANR	2904629	ArgumentList	"""is null ... \\n"""		2904604	1					
ANR	2904630	Argument	"""is null ... \\n"""		2904604	0					
ANR	2904631	PrimaryExpression	"""is null ... \\n"""		2904604	0					
ANR	2904632	IdentifierDeclStatement	"char * logPath = param ( ""LOG"" ) ;"	35:2:1078:1106	2904604	1	True				
ANR	2904633	IdentifierDecl	"* logPath = param ( ""LOG"" )"		2904604	0					
ANR	2904634	IdentifierDeclType	char *		2904604	0					
ANR	2904635	Identifier	logPath		2904604	1					
ANR	2904636	AssignmentExpression	"* logPath = param ( ""LOG"" )"		2904604	2		=			
ANR	2904637	Identifier	logPath		2904604	0					
ANR	2904638	CallExpression	"param ( ""LOG"" )"		2904604	1					
ANR	2904639	Callee	param		2904604	0					
ANR	2904640	Identifier	param		2904604	0					
ANR	2904641	ArgumentList	"""LOG"""		2904604	1					
ANR	2904642	Argument	"""LOG"""		2904604	0					
ANR	2904643	PrimaryExpression	"""LOG"""		2904604	0					
ANR	2904644	IfStatement	if ( logPath )		2904604	2					
ANR	2904645	Condition	logPath	36:6:1114:1120	2904604	0	True				
ANR	2904646	Identifier	logPath		2904604	0					
ANR	2904647	CompoundStatement		6:15:131:131	2904604	1					
ANR	2904648	ExpressionStatement	"printf ( ""log path is also null ... \\n"" )"	37:3:1128:1166	2904604	0	True				
ANR	2904649	CallExpression	"printf ( ""log path is also null ... \\n"" )"		2904604	0					
ANR	2904650	Callee	printf		2904604	0					
ANR	2904651	Identifier	printf		2904604	0					
ANR	2904652	ArgumentList	"""log path is also null ... \\n"""		2904604	1					
ANR	2904653	Argument	"""log path is also null ... \\n"""		2904604	0					
ANR	2904654	PrimaryExpression	"""log path is also null ... \\n"""		2904604	0					
ANR	2904655	ExpressionStatement	path = ( char * ) malloc ( strlen ( logPath ) + 10 )	38:3:1171:1213	2904604	1	True				
ANR	2904656	AssignmentExpression	path = ( char * ) malloc ( strlen ( logPath ) + 10 )		2904604	0		=			
ANR	2904657	Identifier	path		2904604	0					
ANR	2904658	CastExpression	( char * ) malloc ( strlen ( logPath ) + 10 )		2904604	1					
ANR	2904659	CastTarget	char *		2904604	0					
ANR	2904660	CallExpression	malloc ( strlen ( logPath ) + 10 )		2904604	1					
ANR	2904661	Callee	malloc		2904604	0					
ANR	2904662	Identifier	malloc		2904604	0					
ANR	2904663	ArgumentList	strlen ( logPath ) + 10		2904604	1					
ANR	2904664	Argument	strlen ( logPath ) + 10		2904604	0					
ANR	2904665	AdditiveExpression	strlen ( logPath ) + 10		2904604	0		+			
ANR	2904666	CallExpression	strlen ( logPath )		2904604	0					
ANR	2904667	Callee	strlen		2904604	0					
ANR	2904668	Identifier	strlen		2904604	0					
ANR	2904669	ArgumentList	logPath		2904604	1					
ANR	2904670	Argument	logPath		2904604	0					
ANR	2904671	Identifier	logPath		2904604	0					
ANR	2904672	PrimaryExpression	10		2904604	1					
ANR	2904673	ExpressionStatement	"sprintf ( path , ""%s%cqpidPort"" , logPath , DIR_DELIM_CHAR )"	39:3:1218:1272	2904604	2	True				
ANR	2904674	CallExpression	"sprintf ( path , ""%s%cqpidPort"" , logPath , DIR_DELIM_CHAR )"		2904604	0					
ANR	2904675	Callee	sprintf		2904604	0					
ANR	2904676	Identifier	sprintf		2904604	0					
ANR	2904677	ArgumentList	path		2904604	1					
ANR	2904678	Argument	path		2904604	0					
ANR	2904679	Identifier	path		2904604	0					
ANR	2904680	Argument	"""%s%cqpidPort"""		2904604	1					
ANR	2904681	PrimaryExpression	"""%s%cqpidPort"""		2904604	0					
ANR	2904682	Argument	logPath		2904604	2					
ANR	2904683	Identifier	logPath		2904604	0					
ANR	2904684	Argument	DIR_DELIM_CHAR		2904604	3					
ANR	2904685	Identifier	DIR_DELIM_CHAR		2904604	0					
ANR	2904686	ExpressionStatement	free ( logPath )	40:3:1277:1290	2904604	3	True				
ANR	2904687	CallExpression	free ( logPath )		2904604	0					
ANR	2904688	Callee	free		2904604	0					
ANR	2904689	Identifier	free		2904604	0					
ANR	2904690	ArgumentList	logPath		2904604	1					
ANR	2904691	Argument	logPath		2904604	0					
ANR	2904692	Identifier	logPath		2904604	0					
ANR	2904693	ElseStatement	else		2904604	0					
ANR	2904694	CompoundStatement		11:9:309:309	2904604	0					
ANR	2904695	ExpressionStatement	"printf ( ""log path isn't  null ... \\n"" )"	42:3:1306:1343	2904604	0	True				
ANR	2904696	CallExpression	"printf ( ""log path isn't  null ... \\n"" )"		2904604	0					
ANR	2904697	Callee	printf		2904604	0					
ANR	2904698	Identifier	printf		2904604	0					
ANR	2904699	ArgumentList	"""log path isn't  null ... \\n"""		2904604	1					
ANR	2904700	Argument	"""log path isn't  null ... \\n"""		2904604	0					
ANR	2904701	PrimaryExpression	"""log path isn't  null ... \\n"""		2904604	0					
ANR	2904702	ExpressionStatement	path = ( char * ) malloc ( 14 )	43:3:1348:1372	2904604	1	True				
ANR	2904703	AssignmentExpression	path = ( char * ) malloc ( 14 )		2904604	0		=			
ANR	2904704	Identifier	path		2904604	0					
ANR	2904705	CastExpression	( char * ) malloc ( 14 )		2904604	1					
ANR	2904706	CastTarget	char *		2904604	0					
ANR	2904707	CallExpression	malloc ( 14 )		2904604	1					
ANR	2904708	Callee	malloc		2904604	0					
ANR	2904709	Identifier	malloc		2904604	0					
ANR	2904710	ArgumentList	14		2904604	1					
ANR	2904711	Argument	14		2904604	0					
ANR	2904712	PrimaryExpression	14		2904604	0					
ANR	2904713	ExpressionStatement	"sprintf ( path , ""/tmp/qpidPort"" )"	44:3:1377:1407	2904604	2	True				
ANR	2904714	CallExpression	"sprintf ( path , ""/tmp/qpidPort"" )"		2904604	0					
ANR	2904715	Callee	sprintf		2904604	0					
ANR	2904716	Identifier	sprintf		2904604	0					
ANR	2904717	ArgumentList	path		2904604	1					
ANR	2904718	Argument	path		2904604	0					
ANR	2904719	Identifier	path		2904604	0					
ANR	2904720	Argument	"""/tmp/qpidPort"""		2904604	1					
ANR	2904721	PrimaryExpression	"""/tmp/qpidPort"""		2904604	0					
ANR	2904722	ExpressionStatement	"printf ( ""The qpid port path: %s \\n"" , path )"	47:1:1417:1458	2904604	2	True				
ANR	2904723	CallExpression	"printf ( ""The qpid port path: %s \\n"" , path )"		2904604	0					
ANR	2904724	Callee	printf		2904604	0					
ANR	2904725	Identifier	printf		2904604	0					
ANR	2904726	ArgumentList	"""The qpid port path: %s \\n"""		2904604	1					
ANR	2904727	Argument	"""The qpid port path: %s \\n"""		2904604	0					
ANR	2904728	PrimaryExpression	"""The qpid port path: %s \\n"""		2904604	0					
ANR	2904729	Argument	path		2904604	1					
ANR	2904730	Identifier	path		2904604	0					
ANR	2904731	ExpressionStatement	"printf ( ""path: %s \\n"" , path )"	48:1:1462:1489	2904604	3	True				
ANR	2904732	CallExpression	"printf ( ""path: %s \\n"" , path )"		2904604	0					
ANR	2904733	Callee	printf		2904604	0					
ANR	2904734	Identifier	printf		2904604	0					
ANR	2904735	ArgumentList	"""path: %s \\n"""		2904604	1					
ANR	2904736	Argument	"""path: %s \\n"""		2904604	0					
ANR	2904737	PrimaryExpression	"""path: %s \\n"""		2904604	0					
ANR	2904738	Argument	path		2904604	1					
ANR	2904739	Identifier	path		2904604	0					
ANR	2904740	IdentifierDeclStatement	"char * condHost = param ( ""CONDOR_HOST"" ) ;"	49:1:1492:1529	2904604	4	True				
ANR	2904741	IdentifierDecl	"* condHost = param ( ""CONDOR_HOST"" )"		2904604	0					
ANR	2904742	IdentifierDeclType	char *		2904604	0					
ANR	2904743	Identifier	condHost		2904604	1					
ANR	2904744	AssignmentExpression	"* condHost = param ( ""CONDOR_HOST"" )"		2904604	2		=			
ANR	2904745	Identifier	condHost		2904604	0					
ANR	2904746	CallExpression	"param ( ""CONDOR_HOST"" )"		2904604	1					
ANR	2904747	Callee	param		2904604	0					
ANR	2904748	Identifier	param		2904604	0					
ANR	2904749	ArgumentList	"""CONDOR_HOST"""		2904604	1					
ANR	2904750	Argument	"""CONDOR_HOST"""		2904604	0					
ANR	2904751	PrimaryExpression	"""CONDOR_HOST"""		2904604	0					
ANR	2904752	IfStatement	if ( condHost )		2904604	5					
ANR	2904753	Condition	condHost	50:5:1536:1543	2904604	0	True				
ANR	2904754	Identifier	condHost		2904604	0					
ANR	2904755	CompoundStatement		20:14:553:553	2904604	1					
ANR	2904756	ExpressionStatement	"printf ( ""cond host: %s \\n"" , condHost )"	51:2:1549:1585	2904604	0	True				
ANR	2904757	CallExpression	"printf ( ""cond host: %s \\n"" , condHost )"		2904604	0					
ANR	2904758	Callee	printf		2904604	0					
ANR	2904759	Identifier	printf		2904604	0					
ANR	2904760	ArgumentList	"""cond host: %s \\n"""		2904604	1					
ANR	2904761	Argument	"""cond host: %s \\n"""		2904604	0					
ANR	2904762	PrimaryExpression	"""cond host: %s \\n"""		2904604	0					
ANR	2904763	Argument	condHost		2904604	1					
ANR	2904764	Identifier	condHost		2904604	0					
ANR	2904765	ExpressionStatement	free ( condHost )	52:2:1589:1603	2904604	1	True				
ANR	2904766	CallExpression	free ( condHost )		2904604	0					
ANR	2904767	Callee	free		2904604	0					
ANR	2904768	Identifier	free		2904604	0					
ANR	2904769	ArgumentList	condHost		2904604	1					
ANR	2904770	Argument	condHost		2904604	0					
ANR	2904771	Identifier	condHost		2904604	0					
ANR	2904772	ReturnStatement	return path ;	54:1:1609:1620	2904604	6	True				
ANR	2904773	Identifier	path		2904604	0					
ANR	2904774	ReturnType	char *		2904604	1					
ANR	2904775	Identifier	getPortPath		2904604	2					
ANR	2904776	ParameterList			2904604	3					
ANR	2904777	CFGEntryNode	ENTRY		2904604		True				
ANR	2904778	CFGExitNode	EXIT		2904604		True				
ANR	2904779	Symbol	path		2904604						
ANR	2904780	Symbol	malloc		2904604						
ANR	2904781	Symbol	strlen		2904604						
ANR	2904782	Symbol	NULL		2904604						
ANR	2904783	Symbol	param		2904604						
ANR	2904784	Symbol	logPath		2904604						
ANR	2904785	Symbol	DIR_DELIM_CHAR		2904604						
ANR	2904786	Symbol	condHost		2904604						
ANR	2904787	Function	getPort	58:0:1671:2027							
ANR	2904788	FunctionDef	getPort (bool def)		2904787	0					
ANR	2904789	CompoundStatement		59:0:1695:2027	2904787	0					
ANR	2904790	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\n *********get port # called\\n"" )"	60:2:1699:1751	2904787	0	True				
ANR	2904791	CallExpression	"dprintf ( D_ALWAYS , ""\\n *********get port # called\\n"" )"		2904787	0					
ANR	2904792	Callee	dprintf		2904787	0					
ANR	2904793	Identifier	dprintf		2904787	0					
ANR	2904794	ArgumentList	D_ALWAYS		2904787	1					
ANR	2904795	Argument	D_ALWAYS		2904787	0					
ANR	2904796	Identifier	D_ALWAYS		2904787	0					
ANR	2904797	Argument	"""\\n *********get port # called\\n"""		2904787	1					
ANR	2904798	PrimaryExpression	"""\\n *********get port # called\\n"""		2904787	0					
ANR	2904799	IdentifierDeclStatement	char * path ;	62:2:1772:1782	2904787	1	True				
ANR	2904800	IdentifierDecl	* path		2904787	0					
ANR	2904801	IdentifierDeclType	char *		2904787	0					
ANR	2904802	Identifier	path		2904787	1					
ANR	2904803	ExpressionStatement	path = getPortPath ( )	63:2:1786:1806	2904787	2	True				
ANR	2904804	AssignmentExpression	path = getPortPath ( )		2904787	0		=			
ANR	2904805	Identifier	path		2904787	0					
ANR	2904806	CallExpression	getPortPath ( )		2904787	1					
ANR	2904807	Callee	getPortPath		2904787	0					
ANR	2904808	Identifier	getPortPath		2904787	0					
ANR	2904809	ArgumentList			2904787	1					
ANR	2904810	IdentifierDeclStatement	"FILE * f = safe_fopen_wrapper ( path , ""r"" , 0644 ) ;"	65:2:1811:1856	2904787	3	True				
ANR	2904811	IdentifierDecl	"* f = safe_fopen_wrapper ( path , ""r"" , 0644 )"		2904787	0					
ANR	2904812	IdentifierDeclType	FILE *		2904787	0					
ANR	2904813	Identifier	f		2904787	1					
ANR	2904814	AssignmentExpression	"* f = safe_fopen_wrapper ( path , ""r"" , 0644 )"		2904787	2		=			
ANR	2904815	Identifier	f		2904787	0					
ANR	2904816	CallExpression	"safe_fopen_wrapper ( path , ""r"" , 0644 )"		2904787	1					
ANR	2904817	Callee	safe_fopen_wrapper		2904787	0					
ANR	2904818	Identifier	safe_fopen_wrapper		2904787	0					
ANR	2904819	ArgumentList	path		2904787	1					
ANR	2904820	Argument	path		2904787	0					
ANR	2904821	Identifier	path		2904787	0					
ANR	2904822	Argument	"""r"""		2904787	1					
ANR	2904823	PrimaryExpression	"""r"""		2904787	0					
ANR	2904824	Argument	0644		2904787	2					
ANR	2904825	PrimaryExpression	0644		2904787	0					
ANR	2904826	IfStatement	if ( ! f )		2904787	4					
ANR	2904827	Condition	! f	66:6:1864:1865	2904787	0	True				
ANR	2904828	UnaryOperationExpression	! f		2904787	0					
ANR	2904829	UnaryOperator	!		2904787	0					
ANR	2904830	Identifier	f		2904787	1					
ANR	2904831	ReturnStatement	"return """" ;"	67:3:1871:1880	2904787	1	True				
ANR	2904832	PrimaryExpression	""""""		2904787	0					
ANR	2904833	IdentifierDeclStatement	char * port = ( char * ) malloc ( 10 ) ;	68:2:1884:1914	2904787	5	True				
ANR	2904834	IdentifierDecl	* port = ( char * ) malloc ( 10 )		2904787	0					
ANR	2904835	IdentifierDeclType	char *		2904787	0					
ANR	2904836	Identifier	port		2904787	1					
ANR	2904837	AssignmentExpression	* port = ( char * ) malloc ( 10 )		2904787	2		=			
ANR	2904838	Identifier	port		2904787	0					
ANR	2904839	CastExpression	( char * ) malloc ( 10 )		2904787	1					
ANR	2904840	CastTarget	char *		2904787	0					
ANR	2904841	CallExpression	malloc ( 10 )		2904787	1					
ANR	2904842	Callee	malloc		2904787	0					
ANR	2904843	Identifier	malloc		2904787	0					
ANR	2904844	ArgumentList	10		2904787	1					
ANR	2904845	Argument	10		2904787	0					
ANR	2904846	PrimaryExpression	10		2904787	0					
ANR	2904847	ExpressionStatement	"fread ( port , 1 , 10 , f )"	69:2:1918:1939	2904787	6	True				
ANR	2904848	CallExpression	"fread ( port , 1 , 10 , f )"		2904787	0					
ANR	2904849	Callee	fread		2904787	0					
ANR	2904850	Identifier	fread		2904787	0					
ANR	2904851	ArgumentList	port		2904787	1					
ANR	2904852	Argument	port		2904787	0					
ANR	2904853	Identifier	port		2904787	0					
ANR	2904854	Argument	1		2904787	1					
ANR	2904855	PrimaryExpression	1		2904787	0					
ANR	2904856	Argument	10		2904787	2					
ANR	2904857	PrimaryExpression	10		2904787	0					
ANR	2904858	Argument	f		2904787	3					
ANR	2904859	Identifier	f		2904787	0					
ANR	2904860	ExpressionStatement	fclose ( f )	70:2:1943:1952	2904787	7	True				
ANR	2904861	CallExpression	fclose ( f )		2904787	0					
ANR	2904862	Callee	fclose		2904787	0					
ANR	2904863	Identifier	fclose		2904787	0					
ANR	2904864	ArgumentList	f		2904787	1					
ANR	2904865	Argument	f		2904787	0					
ANR	2904866	Identifier	f		2904787	0					
ANR	2904867	ExpressionStatement	port [ strlen ( port ) - 1 ] = '\\0'	71:2:1956:1983	2904787	8	True				
ANR	2904868	AssignmentExpression	port [ strlen ( port ) - 1 ] = '\\0'		2904787	0		=			
ANR	2904869	ArrayIndexing	port [ strlen ( port ) - 1 ]		2904787	0					
ANR	2904870	Identifier	port		2904787	0					
ANR	2904871	AdditiveExpression	strlen ( port ) - 1		2904787	1		-			
ANR	2904872	CallExpression	strlen ( port )		2904787	0					
ANR	2904873	Callee	strlen		2904787	0					
ANR	2904874	Identifier	strlen		2904787	0					
ANR	2904875	ArgumentList	port		2904787	1					
ANR	2904876	Argument	port		2904787	0					
ANR	2904877	Identifier	port		2904787	0					
ANR	2904878	PrimaryExpression	1		2904787	1					
ANR	2904879	PrimaryExpression	'\\0'		2904787	1					
ANR	2904880	IfStatement	if ( ! def )		2904787	9					
ANR	2904881	Condition	! def	72:6:1991:1994	2904787	0	True				
ANR	2904882	UnaryOperationExpression	! def		2904787	0					
ANR	2904883	UnaryOperator	!		2904787	0					
ANR	2904884	Identifier	def		2904787	1					
ANR	2904885	ExpressionStatement	free ( path )	73:3:2000:2010	2904787	1	True				
ANR	2904886	CallExpression	free ( path )		2904787	0					
ANR	2904887	Callee	free		2904787	0					
ANR	2904888	Identifier	free		2904787	0					
ANR	2904889	ArgumentList	path		2904787	1					
ANR	2904890	Argument	path		2904787	0					
ANR	2904891	Identifier	path		2904787	0					
ANR	2904892	ReturnStatement	return port ;	74:2:2014:2025	2904787	10	True				
ANR	2904893	Identifier	port		2904787	0					
ANR	2904894	ReturnType	char *		2904787	1					
ANR	2904895	Identifier	getPort		2904787	2					
ANR	2904896	ParameterList	bool def		2904787	3					
ANR	2904897	Parameter	bool def	58:14:1685:1692	2904787	0	True				
ANR	2904898	ParameterType	bool		2904787	0					
ANR	2904899	Identifier	def		2904787	1					
ANR	2904900	CFGEntryNode	ENTRY		2904787		True				
ANR	2904901	CFGExitNode	EXIT		2904787		True				
ANR	2904902	Symbol	path		2904787						
ANR	2904903	Symbol	malloc		2904787						
ANR	2904904	Symbol	strlen		2904787						
ANR	2904905	Symbol	def		2904787						
ANR	2904906	Symbol	safe_fopen_wrapper		2904787						
ANR	2904907	Symbol	* port		2904787						
ANR	2904908	Symbol	* strlen		2904787						
ANR	2904909	Symbol	port		2904787						
ANR	2904910	Symbol	f		2904787						
ANR	2904911	Symbol	D_ALWAYS		2904787						
ANR	2904912	Symbol	getPortPath		2904787						
