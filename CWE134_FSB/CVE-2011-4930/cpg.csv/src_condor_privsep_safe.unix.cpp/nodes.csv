command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3577004	File	data/converged/CVE-2011-4930_htcondor/src_condor_privsep_safe.unix.cpp								
ANR	3577005	DeclStmt									
ANR	3577006	Decl							const id_t	const id_t	err_id
ANR	3577007	DeclStmt									
ANR	3577008	Decl							FILE	FILE *	err_stream
ANR	3577009	Function	fatal_error_exit	82:0:2149:2477							
ANR	3577010	FunctionDef	"fatal_error_exit (int status , const char * fmt)"		3577009	0					
ANR	3577011	CompoundStatement		83:0:2205:2477	3577009	0					
ANR	3577012	IdentifierDeclStatement	va_list ap ;	84:4:2211:2221	3577009	0	True				
ANR	3577013	IdentifierDecl	ap		3577009	0					
ANR	3577014	IdentifierDeclType	va_list		3577009	0					
ANR	3577015	Identifier	ap		3577009	1					
ANR	3577016	ExpressionStatement	"va_start ( ap , fmt )"	85:4:2227:2244	3577009	1	True				
ANR	3577017	CallExpression	"va_start ( ap , fmt )"		3577009	0					
ANR	3577018	Callee	va_start		3577009	0					
ANR	3577019	Identifier	va_start		3577009	0					
ANR	3577020	ArgumentList	ap		3577009	1					
ANR	3577021	Argument	ap		3577009	0					
ANR	3577022	Identifier	ap		3577009	0					
ANR	3577023	Argument	fmt		3577009	1					
ANR	3577024	Identifier	fmt		3577009	0					
ANR	3577025	IfStatement	if ( ! err_stream )		3577009	2					
ANR	3577026	Condition	! err_stream	87:8:2255:2265	3577009	0	True				
ANR	3577027	UnaryOperationExpression	! err_stream		3577009	0					
ANR	3577028	UnaryOperator	!		3577009	0					
ANR	3577029	Identifier	err_stream		3577009	1					
ANR	3577030	CompoundStatement		5:21:62:62	3577009	1					
ANR	3577031	ExpressionStatement	err_stream = stderr	88:8:2278:2297	3577009	0	True				
ANR	3577032	AssignmentExpression	err_stream = stderr		3577009	0		=			
ANR	3577033	Identifier	err_stream		3577009	0					
ANR	3577034	Identifier	stderr		3577009	1					
ANR	3577035	ExpressionStatement	"vfprintf ( err_stream , fmt , ap )"	91:4:2310:2339	3577009	3	True				
ANR	3577036	CallExpression	"vfprintf ( err_stream , fmt , ap )"		3577009	0					
ANR	3577037	Callee	vfprintf		3577009	0					
ANR	3577038	Identifier	vfprintf		3577009	0					
ANR	3577039	ArgumentList	err_stream		3577009	1					
ANR	3577040	Argument	err_stream		3577009	0					
ANR	3577041	Identifier	err_stream		3577009	0					
ANR	3577042	Argument	fmt		3577009	1					
ANR	3577043	Identifier	fmt		3577009	0					
ANR	3577044	Argument	ap		3577009	2					
ANR	3577045	Identifier	ap		3577009	0					
ANR	3577046	ExpressionStatement	"fputc ( '\\n' , err_stream )"	92:4:2345:2368	3577009	4	True				
ANR	3577047	CallExpression	"fputc ( '\\n' , err_stream )"		3577009	0					
ANR	3577048	Callee	fputc		3577009	0					
ANR	3577049	Identifier	fputc		3577009	0					
ANR	3577050	ArgumentList	'\\n'		3577009	1					
ANR	3577051	Argument	'\\n'		3577009	0					
ANR	3577052	PrimaryExpression	'\\n'		3577009	0					
ANR	3577053	Argument	err_stream		3577009	1					
ANR	3577054	Identifier	err_stream		3577009	0					
ANR	3577055	ExpressionStatement	va_end ( ap )	96:4:2420:2430	3577009	5	True				
ANR	3577056	CallExpression	va_end ( ap )		3577009	0					
ANR	3577057	Callee	va_end		3577009	0					
ANR	3577058	Identifier	va_end		3577009	0					
ANR	3577059	ArgumentList	ap		3577009	1					
ANR	3577060	Argument	ap		3577009	0					
ANR	3577061	Identifier	ap		3577009	0					
ANR	3577062	ExpressionStatement	fflush ( err_stream )	98:4:2437:2455	3577009	6	True				
ANR	3577063	CallExpression	fflush ( err_stream )		3577009	0					
ANR	3577064	Callee	fflush		3577009	0					
ANR	3577065	Identifier	fflush		3577009	0					
ANR	3577066	ArgumentList	err_stream		3577009	1					
ANR	3577067	Argument	err_stream		3577009	0					
ANR	3577068	Identifier	err_stream		3577009	0					
ANR	3577069	ExpressionStatement	_exit ( status )	100:4:2462:2475	3577009	7	True				
ANR	3577070	CallExpression	_exit ( status )		3577009	0					
ANR	3577071	Callee	_exit		3577009	0					
ANR	3577072	Identifier	_exit		3577009	0					
ANR	3577073	ArgumentList	status		3577009	1					
ANR	3577074	Argument	status		3577009	0					
ANR	3577075	Identifier	status		3577009	0					
ANR	3577076	ReturnType	void		3577009	1					
ANR	3577077	Identifier	fatal_error_exit		3577009	2					
ANR	3577078	ParameterList	"int status , const char * fmt"		3577009	3					
ANR	3577079	Parameter	int status	82:22:2171:2180	3577009	0	True				
ANR	3577080	ParameterType	int		3577009	0					
ANR	3577081	Identifier	status		3577009	1					
ANR	3577082	Parameter	const char * fmt	82:34:2183:2197	3577009	1	True				
ANR	3577083	ParameterType	const char *		3577009	0					
ANR	3577084	Identifier	fmt		3577009	1					
ANR	3577085	CFGEntryNode	ENTRY		3577009		True				
ANR	3577086	CFGExitNode	EXIT		3577009		True				
ANR	3577087	Symbol	err_stream		3577009						
ANR	3577088	Symbol	fmt		3577009						
ANR	3577089	Symbol	stderr		3577009						
ANR	3577090	Symbol	status		3577009						
ANR	3577091	Symbol	ap		3577009						
ANR	3577092	Function	setup_err_stream	116:0:2841:3693							
ANR	3577093	FunctionDef	setup_err_stream (int fd)		3577092	0					
ANR	3577094	CompoundStatement		117:0:2871:3693	3577092	0					
ANR	3577095	IdentifierDeclStatement	int r ;	118:4:2877:2882	3577092	0	True				
ANR	3577096	IdentifierDecl	r		3577092	0					
ANR	3577097	IdentifierDeclType	int		3577092	0					
ANR	3577098	Identifier	r		3577092	1					
ANR	3577099	IdentifierDeclStatement	int flags ;	119:4:2888:2897	3577092	1	True				
ANR	3577100	IdentifierDecl	flags		3577092	0					
ANR	3577101	IdentifierDeclType	int		3577092	0					
ANR	3577102	Identifier	flags		3577092	1					
ANR	3577103	IdentifierDeclStatement	int new_fd = dup ( fd ) ;	121:4:2904:2924	3577092	2	True				
ANR	3577104	IdentifierDecl	new_fd = dup ( fd )		3577092	0					
ANR	3577105	IdentifierDeclType	int		3577092	0					
ANR	3577106	Identifier	new_fd		3577092	1					
ANR	3577107	AssignmentExpression	new_fd = dup ( fd )		3577092	2		=			
ANR	3577108	Identifier	new_fd		3577092	0					
ANR	3577109	CallExpression	dup ( fd )		3577092	1					
ANR	3577110	Callee	dup		3577092	0					
ANR	3577111	Identifier	dup		3577092	0					
ANR	3577112	ArgumentList	fd		3577092	1					
ANR	3577113	Argument	fd		3577092	0					
ANR	3577114	Identifier	fd		3577092	0					
ANR	3577115	IfStatement	if ( new_fd == - 1 )		3577092	3					
ANR	3577116	Condition	new_fd == - 1	122:8:2934:2945	3577092	0	True				
ANR	3577117	EqualityExpression	new_fd == - 1		3577092	0		==			
ANR	3577118	Identifier	new_fd		3577092	0					
ANR	3577119	UnaryOperationExpression	- 1		3577092	1					
ANR	3577120	UnaryOperator	-		3577092	0					
ANR	3577121	PrimaryExpression	1		3577092	1					
ANR	3577122	CompoundStatement		6:22:76:76	3577092	1					
ANR	3577123	ExpressionStatement	"fatal_error_exit ( 1 , ""dup failed on fd=%d: %s"" , fd , strerror ( errno ) )"	123:8:2958:3050	3577092	0	True				
ANR	3577124	CallExpression	"fatal_error_exit ( 1 , ""dup failed on fd=%d: %s"" , fd , strerror ( errno ) )"		3577092	0					
ANR	3577125	Callee	fatal_error_exit		3577092	0					
ANR	3577126	Identifier	fatal_error_exit		3577092	0					
ANR	3577127	ArgumentList	1		3577092	1					
ANR	3577128	Argument	1		3577092	0					
ANR	3577129	PrimaryExpression	1		3577092	0					
ANR	3577130	Argument	"""dup failed on fd=%d: %s"""		3577092	1					
ANR	3577131	PrimaryExpression	"""dup failed on fd=%d: %s"""		3577092	0					
ANR	3577132	Argument	fd		3577092	2					
ANR	3577133	Identifier	fd		3577092	0					
ANR	3577134	Argument	strerror ( errno )		3577092	3					
ANR	3577135	CallExpression	strerror ( errno )		3577092	0					
ANR	3577136	Callee	strerror		3577092	0					
ANR	3577137	Identifier	strerror		3577092	0					
ANR	3577138	ArgumentList	errno		3577092	1					
ANR	3577139	Argument	errno		3577092	0					
ANR	3577140	Identifier	errno		3577092	0					
ANR	3577141	ExpressionStatement	"flags = fcntl ( new_fd , F_GETFD )"	127:4:3063:3093	3577092	4	True				
ANR	3577142	AssignmentExpression	"flags = fcntl ( new_fd , F_GETFD )"		3577092	0		=			
ANR	3577143	Identifier	flags		3577092	0					
ANR	3577144	CallExpression	"fcntl ( new_fd , F_GETFD )"		3577092	1					
ANR	3577145	Callee	fcntl		3577092	0					
ANR	3577146	Identifier	fcntl		3577092	0					
ANR	3577147	ArgumentList	new_fd		3577092	1					
ANR	3577148	Argument	new_fd		3577092	0					
ANR	3577149	Identifier	new_fd		3577092	0					
ANR	3577150	Argument	F_GETFD		3577092	1					
ANR	3577151	Identifier	F_GETFD		3577092	0					
ANR	3577152	IfStatement	if ( flags == - 1 )		3577092	5					
ANR	3577153	Condition	flags == - 1	128:8:3103:3113	3577092	0	True				
ANR	3577154	EqualityExpression	flags == - 1		3577092	0		==			
ANR	3577155	Identifier	flags		3577092	0					
ANR	3577156	UnaryOperationExpression	- 1		3577092	1					
ANR	3577157	UnaryOperator	-		3577092	0					
ANR	3577158	PrimaryExpression	1		3577092	1					
ANR	3577159	CompoundStatement		12:21:244:244	3577092	1					
ANR	3577160	ExpressionStatement	"fatal_error_exit ( 1 , ""fcntl F_GETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"	129:8:3126:3232	3577092	0	True				
ANR	3577161	CallExpression	"fatal_error_exit ( 1 , ""fcntl F_GETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"		3577092	0					
ANR	3577162	Callee	fatal_error_exit		3577092	0					
ANR	3577163	Identifier	fatal_error_exit		3577092	0					
ANR	3577164	ArgumentList	1		3577092	1					
ANR	3577165	Argument	1		3577092	0					
ANR	3577166	PrimaryExpression	1		3577092	0					
ANR	3577167	Argument	"""fcntl F_GETFD failed on fd=%d: %s"""		3577092	1					
ANR	3577168	PrimaryExpression	"""fcntl F_GETFD failed on fd=%d: %s"""		3577092	0					
ANR	3577169	Argument	new_fd		3577092	2					
ANR	3577170	Identifier	new_fd		3577092	0					
ANR	3577171	Argument	strerror ( errno )		3577092	3					
ANR	3577172	CallExpression	strerror ( errno )		3577092	0					
ANR	3577173	Callee	strerror		3577092	0					
ANR	3577174	Identifier	strerror		3577092	0					
ANR	3577175	ArgumentList	errno		3577092	1					
ANR	3577176	Argument	errno		3577092	0					
ANR	3577177	Identifier	errno		3577092	0					
ANR	3577178	ExpressionStatement	flags |= FD_CLOEXEC	133:4:3245:3264	3577092	6	True				
ANR	3577179	AssignmentExpression	flags |= FD_CLOEXEC		3577092	0		|=			
ANR	3577180	Identifier	flags		3577092	0					
ANR	3577181	Identifier	FD_CLOEXEC		3577092	1					
ANR	3577182	ExpressionStatement	"r = fcntl ( new_fd , F_SETFD , flags )"	134:4:3270:3303	3577092	7	True				
ANR	3577183	AssignmentExpression	"r = fcntl ( new_fd , F_SETFD , flags )"		3577092	0		=			
ANR	3577184	Identifier	r		3577092	0					
ANR	3577185	CallExpression	"fcntl ( new_fd , F_SETFD , flags )"		3577092	1					
ANR	3577186	Callee	fcntl		3577092	0					
ANR	3577187	Identifier	fcntl		3577092	0					
ANR	3577188	ArgumentList	new_fd		3577092	1					
ANR	3577189	Argument	new_fd		3577092	0					
ANR	3577190	Identifier	new_fd		3577092	0					
ANR	3577191	Argument	F_SETFD		3577092	1					
ANR	3577192	Identifier	F_SETFD		3577092	0					
ANR	3577193	Argument	flags		3577092	2					
ANR	3577194	Identifier	flags		3577092	0					
ANR	3577195	IfStatement	if ( r == - 1 )		3577092	8					
ANR	3577196	Condition	r == - 1	135:8:3313:3319	3577092	0	True				
ANR	3577197	EqualityExpression	r == - 1		3577092	0		==			
ANR	3577198	Identifier	r		3577092	0					
ANR	3577199	UnaryOperationExpression	- 1		3577092	1					
ANR	3577200	UnaryOperator	-		3577092	0					
ANR	3577201	PrimaryExpression	1		3577092	1					
ANR	3577202	CompoundStatement		19:17:450:450	3577092	1					
ANR	3577203	ExpressionStatement	"fatal_error_exit ( 1 , ""fcntl F_SETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"	136:8:3332:3438	3577092	0	True				
ANR	3577204	CallExpression	"fatal_error_exit ( 1 , ""fcntl F_SETFD failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"		3577092	0					
ANR	3577205	Callee	fatal_error_exit		3577092	0					
ANR	3577206	Identifier	fatal_error_exit		3577092	0					
ANR	3577207	ArgumentList	1		3577092	1					
ANR	3577208	Argument	1		3577092	0					
ANR	3577209	PrimaryExpression	1		3577092	0					
ANR	3577210	Argument	"""fcntl F_SETFD failed on fd=%d: %s"""		3577092	1					
ANR	3577211	PrimaryExpression	"""fcntl F_SETFD failed on fd=%d: %s"""		3577092	0					
ANR	3577212	Argument	new_fd		3577092	2					
ANR	3577213	Identifier	new_fd		3577092	0					
ANR	3577214	Argument	strerror ( errno )		3577092	3					
ANR	3577215	CallExpression	strerror ( errno )		3577092	0					
ANR	3577216	Callee	strerror		3577092	0					
ANR	3577217	Identifier	strerror		3577092	0					
ANR	3577218	ArgumentList	errno		3577092	1					
ANR	3577219	Argument	errno		3577092	0					
ANR	3577220	Identifier	errno		3577092	0					
ANR	3577221	ExpressionStatement	"err_stream = fdopen ( new_fd , ""w"" )"	140:4:3451:3483	3577092	9	True				
ANR	3577222	AssignmentExpression	"err_stream = fdopen ( new_fd , ""w"" )"		3577092	0		=			
ANR	3577223	Identifier	err_stream		3577092	0					
ANR	3577224	CallExpression	"fdopen ( new_fd , ""w"" )"		3577092	1					
ANR	3577225	Callee	fdopen		3577092	0					
ANR	3577226	Identifier	fdopen		3577092	0					
ANR	3577227	ArgumentList	new_fd		3577092	1					
ANR	3577228	Argument	new_fd		3577092	0					
ANR	3577229	Identifier	new_fd		3577092	0					
ANR	3577230	Argument	"""w"""		3577092	1					
ANR	3577231	PrimaryExpression	"""w"""		3577092	0					
ANR	3577232	IfStatement	if ( err_stream == NULL )		3577092	10					
ANR	3577233	Condition	err_stream == NULL	141:8:3493:3510	3577092	0	True				
ANR	3577234	EqualityExpression	err_stream == NULL		3577092	0		==			
ANR	3577235	Identifier	err_stream		3577092	0					
ANR	3577236	Identifier	NULL		3577092	1					
ANR	3577237	CompoundStatement		25:28:641:641	3577092	1					
ANR	3577238	ExpressionStatement	"fatal_error_exit ( 1 , ""fdopen failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"	142:8:3523:3622	3577092	0	True				
ANR	3577239	CallExpression	"fatal_error_exit ( 1 , ""fdopen failed on fd=%d: %s"" , new_fd , strerror ( errno ) )"		3577092	0					
ANR	3577240	Callee	fatal_error_exit		3577092	0					
ANR	3577241	Identifier	fatal_error_exit		3577092	0					
ANR	3577242	ArgumentList	1		3577092	1					
ANR	3577243	Argument	1		3577092	0					
ANR	3577244	PrimaryExpression	1		3577092	0					
ANR	3577245	Argument	"""fdopen failed on fd=%d: %s"""		3577092	1					
ANR	3577246	PrimaryExpression	"""fdopen failed on fd=%d: %s"""		3577092	0					
ANR	3577247	Argument	new_fd		3577092	2					
ANR	3577248	Identifier	new_fd		3577092	0					
ANR	3577249	Argument	strerror ( errno )		3577092	3					
ANR	3577250	CallExpression	strerror ( errno )		3577092	0					
ANR	3577251	Callee	strerror		3577092	0					
ANR	3577252	Identifier	strerror		3577092	0					
ANR	3577253	ArgumentList	errno		3577092	1					
ANR	3577254	Argument	errno		3577092	0					
ANR	3577255	Identifier	errno		3577092	0					
ANR	3577256	ExpressionStatement	close ( fd )	147:4:3682:3691	3577092	11	True				
ANR	3577257	CallExpression	close ( fd )		3577092	0					
ANR	3577258	Callee	close		3577092	0					
ANR	3577259	Identifier	close		3577092	0					
ANR	3577260	ArgumentList	fd		3577092	1					
ANR	3577261	Argument	fd		3577092	0					
ANR	3577262	Identifier	fd		3577092	0					
ANR	3577263	ReturnType	void		3577092	1					
ANR	3577264	Identifier	setup_err_stream		3577092	2					
ANR	3577265	ParameterList	int fd		3577092	3					
ANR	3577266	Parameter	int fd	116:22:2863:2868	3577092	0	True				
ANR	3577267	ParameterType	int		3577092	0					
ANR	3577268	Identifier	fd		3577092	1					
ANR	3577269	CFGEntryNode	ENTRY		3577092		True				
ANR	3577270	CFGExitNode	EXIT		3577092		True				
ANR	3577271	Symbol	errno		3577092						
ANR	3577272	Symbol	F_GETFD		3577092						
ANR	3577273	Symbol	NULL		3577092						
ANR	3577274	Symbol	err_stream		3577092						
ANR	3577275	Symbol	fcntl		3577092						
ANR	3577276	Symbol	F_SETFD		3577092						
ANR	3577277	Symbol	new_fd		3577092						
ANR	3577278	Symbol	flags		3577092						
ANR	3577279	Symbol	FD_CLOEXEC		3577092						
ANR	3577280	Symbol	fdopen		3577092						
ANR	3577281	Symbol	strerror		3577092						
ANR	3577282	Symbol	r		3577092						
ANR	3577283	Symbol	fd		3577092						
ANR	3577284	Symbol	dup		3577092						
ANR	3577285	Function	get_error_fd	158:0:3900:4016							
ANR	3577286	FunctionDef	get_error_fd ()		3577285	0					
ANR	3577287	CompoundStatement		159:0:3919:4016	3577285	0					
ANR	3577288	IfStatement	if ( err_stream )		3577285	0					
ANR	3577289	Condition	err_stream	160:8:3929:3938	3577285	0	True				
ANR	3577290	Identifier	err_stream		3577285	0					
ANR	3577291	CompoundStatement		2:20:21:21	3577285	1					
ANR	3577292	ReturnStatement	return fileno ( err_stream ) ;	161:8:3951:3976	3577285	0	True				
ANR	3577293	CallExpression	fileno ( err_stream )		3577285	0					
ANR	3577294	Callee	fileno		3577285	0					
ANR	3577295	Identifier	fileno		3577285	0					
ANR	3577296	ArgumentList	err_stream		3577285	1					
ANR	3577297	Argument	err_stream		3577285	0					
ANR	3577298	Identifier	err_stream		3577285	0					
ANR	3577299	ElseStatement	else		3577285	0					
ANR	3577300	CompoundStatement		4:11:69:69	3577285	0					
ANR	3577301	ReturnStatement	return - 1 ;	163:8:3999:4008	3577285	0	True				
ANR	3577302	UnaryOperationExpression	- 1		3577285	0					
ANR	3577303	UnaryOperator	-		3577285	0					
ANR	3577304	PrimaryExpression	1		3577285	1					
ANR	3577305	ReturnType	int		3577285	1					
ANR	3577306	Identifier	get_error_fd		3577285	2					
ANR	3577307	ParameterList			3577285	3					
ANR	3577308	CFGEntryNode	ENTRY		3577285		True				
ANR	3577309	CFGExitNode	EXIT		3577285		True				
ANR	3577310	Symbol	err_stream		3577285						
ANR	3577311	Symbol	fileno		3577285						
ANR	3577312	Function	init_string_list	183:0:4416:4679							
ANR	3577313	FunctionDef	init_string_list (string_list * list)		3577312	0					
ANR	3577314	CompoundStatement		184:0:4457:4679	3577312	0					
ANR	3577315	ExpressionStatement	list -> count = 0	185:4:4463:4478	3577312	0	True				
ANR	3577316	AssignmentExpression	list -> count = 0		3577312	0		=			
ANR	3577317	PtrMemberAccess	list -> count		3577312	0					
ANR	3577318	Identifier	list		3577312	0					
ANR	3577319	Identifier	count		3577312	1					
ANR	3577320	PrimaryExpression	0		3577312	1					
ANR	3577321	ExpressionStatement	list -> capacity = 10	186:4:4484:4503	3577312	1	True				
ANR	3577322	AssignmentExpression	list -> capacity = 10		3577312	0		=			
ANR	3577323	PtrMemberAccess	list -> capacity		3577312	0					
ANR	3577324	Identifier	list		3577312	0					
ANR	3577325	Identifier	capacity		3577312	1					
ANR	3577326	PrimaryExpression	10		3577312	1					
ANR	3577327	ExpressionStatement	list -> list = ( char * * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )	187:4:4509:4578	3577312	2	True				
ANR	3577328	AssignmentExpression	list -> list = ( char * * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		3577312	0		=			
ANR	3577329	PtrMemberAccess	list -> list		3577312	0					
ANR	3577330	Identifier	list		3577312	0					
ANR	3577331	Identifier	list		3577312	1					
ANR	3577332	CastExpression	( char * * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		3577312	1					
ANR	3577333	CastTarget	char * *		3577312	0					
ANR	3577334	CallExpression	malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		3577312	1					
ANR	3577335	Callee	malloc		3577312	0					
ANR	3577336	Identifier	malloc		3577312	0					
ANR	3577337	ArgumentList	list -> capacity * sizeof ( list -> list [ 0 ] )		3577312	1					
ANR	3577338	Argument	list -> capacity * sizeof ( list -> list [ 0 ] )		3577312	0					
ANR	3577339	MultiplicativeExpression	list -> capacity * sizeof ( list -> list [ 0 ] )		3577312	0		*			
ANR	3577340	PtrMemberAccess	list -> capacity		3577312	0					
ANR	3577341	Identifier	list		3577312	0					
ANR	3577342	Identifier	capacity		3577312	1					
ANR	3577343	SizeofExpression	sizeof ( list -> list [ 0 ] )		3577312	1					
ANR	3577344	Sizeof	sizeof		3577312	0					
ANR	3577345	ArrayIndexing	list -> list [ 0 ]		3577312	1					
ANR	3577346	PtrMemberAccess	list -> list		3577312	0					
ANR	3577347	Identifier	list		3577312	0					
ANR	3577348	Identifier	list		3577312	1					
ANR	3577349	PrimaryExpression	0		3577312	1					
ANR	3577350	IfStatement	if ( list -> list == 0 )		3577312	3					
ANR	3577351	Condition	list -> list == 0	188:8:4588:4602	3577312	0	True				
ANR	3577352	EqualityExpression	list -> list == 0		3577312	0		==			
ANR	3577353	PtrMemberAccess	list -> list		3577312	0					
ANR	3577354	Identifier	list		3577312	0					
ANR	3577355	Identifier	list		3577312	1					
ANR	3577356	PrimaryExpression	0		3577312	1					
ANR	3577357	CompoundStatement		5:25:147:147	3577312	1					
ANR	3577358	ExpressionStatement	"fatal_error_exit ( 1 , ""malloc failed in init_string_list"" )"	189:8:4615:4671	3577312	0	True				
ANR	3577359	CallExpression	"fatal_error_exit ( 1 , ""malloc failed in init_string_list"" )"		3577312	0					
ANR	3577360	Callee	fatal_error_exit		3577312	0					
ANR	3577361	Identifier	fatal_error_exit		3577312	0					
ANR	3577362	ArgumentList	1		3577312	1					
ANR	3577363	Argument	1		3577312	0					
ANR	3577364	PrimaryExpression	1		3577312	0					
ANR	3577365	Argument	"""malloc failed in init_string_list"""		3577312	1					
ANR	3577366	PrimaryExpression	"""malloc failed in init_string_list"""		3577312	0					
ANR	3577367	ReturnType	void		3577312	1					
ANR	3577368	Identifier	init_string_list		3577312	2					
ANR	3577369	ParameterList	string_list * list		3577312	3					
ANR	3577370	Parameter	string_list * list	183:22:4438:4454	3577312	0	True				
ANR	3577371	ParameterType	string_list *		3577312	0					
ANR	3577372	Identifier	list		3577312	1					
ANR	3577373	CFGEntryNode	ENTRY		3577312		True				
ANR	3577374	CFGExitNode	EXIT		3577312		True				
ANR	3577375	Symbol	malloc		3577312						
ANR	3577376	Symbol	* list -> list		3577312						
ANR	3577377	Symbol	* * list		3577312						
ANR	3577378	Symbol	list -> list		3577312						
ANR	3577379	Symbol	* list		3577312						
ANR	3577380	Symbol	list -> capacity		3577312						
ANR	3577381	Symbol	list		3577312						
ANR	3577382	Symbol	list -> count		3577312						
ANR	3577383	Function	add_one_capacity_to_string_list	204:0:4997:5584							
ANR	3577384	FunctionDef	add_one_capacity_to_string_list (string_list * list)		3577383	0					
ANR	3577385	CompoundStatement		205:0:5060:5584	3577383	0					
ANR	3577386	IfStatement	if ( list -> count == list -> capacity )		3577383	0					
ANR	3577387	Condition	list -> count == list -> capacity	206:8:5070:5098	3577383	0	True				
ANR	3577388	EqualityExpression	list -> count == list -> capacity		3577383	0		==			
ANR	3577389	PtrMemberAccess	list -> count		3577383	0					
ANR	3577390	Identifier	list		3577383	0					
ANR	3577391	Identifier	count		3577383	1					
ANR	3577392	PtrMemberAccess	list -> capacity		3577383	1					
ANR	3577393	Identifier	list		3577383	0					
ANR	3577394	Identifier	capacity		3577383	1					
ANR	3577395	CompoundStatement		4:8:111:193	3577383	1					
ANR	3577396	IdentifierDeclStatement	size_t new_capacity = 10 + 11 * list -> capacity / 10 ;	207:8:5111:5162	3577383	0	True				
ANR	3577397	IdentifierDecl	new_capacity = 10 + 11 * list -> capacity / 10		3577383	0					
ANR	3577398	IdentifierDeclType	size_t		3577383	0					
ANR	3577399	Identifier	new_capacity		3577383	1					
ANR	3577400	AssignmentExpression	new_capacity = 10 + 11 * list -> capacity / 10		3577383	2		=			
ANR	3577401	Identifier	new_capacity		3577383	0					
ANR	3577402	AdditiveExpression	10 + 11 * list -> capacity / 10		3577383	1		+			
ANR	3577403	PrimaryExpression	10		3577383	0					
ANR	3577404	MultiplicativeExpression	11 * list -> capacity / 10		3577383	1		*			
ANR	3577405	PrimaryExpression	11		3577383	0					
ANR	3577406	MultiplicativeExpression	list -> capacity / 10		3577383	1		/			
ANR	3577407	PtrMemberAccess	list -> capacity		3577383	0					
ANR	3577408	Identifier	list		3577383	0					
ANR	3577409	Identifier	capacity		3577383	1					
ANR	3577410	PrimaryExpression	10		3577383	1					
ANR	3577411	IdentifierDeclStatement	char * * new_list = ( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) ) ;	208:8:5172:5254	3577383	1	True				
ANR	3577412	IdentifierDecl	* * new_list = ( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		3577383	0					
ANR	3577413	IdentifierDeclType	char * *		3577383	0					
ANR	3577414	Identifier	new_list		3577383	1					
ANR	3577415	AssignmentExpression	* * new_list = ( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		3577383	2		=			
ANR	3577416	Identifier	new_list		3577383	0					
ANR	3577417	CastExpression	( char * * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		3577383	1					
ANR	3577418	CastTarget	char * *		3577383	0					
ANR	3577419	CallExpression	malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		3577383	1					
ANR	3577420	Callee	malloc		3577383	0					
ANR	3577421	Identifier	malloc		3577383	0					
ANR	3577422	ArgumentList	new_capacity * sizeof ( new_list [ 0 ] )		3577383	1					
ANR	3577423	Argument	new_capacity * sizeof ( new_list [ 0 ] )		3577383	0					
ANR	3577424	MultiplicativeExpression	new_capacity * sizeof ( new_list [ 0 ] )		3577383	0		*			
ANR	3577425	Identifier	new_capacity		3577383	0					
ANR	3577426	SizeofExpression	sizeof ( new_list [ 0 ] )		3577383	1					
ANR	3577427	Sizeof	sizeof		3577383	0					
ANR	3577428	ArrayIndexing	new_list [ 0 ]		3577383	1					
ANR	3577429	Identifier	new_list		3577383	0					
ANR	3577430	PrimaryExpression	0		3577383	1					
ANR	3577431	IfStatement	if ( new_list == 0 )		3577383	2					
ANR	3577432	Condition	new_list == 0	210:12:5268:5280	3577383	0	True				
ANR	3577433	EqualityExpression	new_list == 0		3577383	0		==			
ANR	3577434	Identifier	new_list		3577383	0					
ANR	3577435	PrimaryExpression	0		3577383	1					
ANR	3577436	CompoundStatement		6:27:222:222	3577383	1					
ANR	3577437	ExpressionStatement	"fatal_error_exit ( 1 , ""malloc failed in add_one_capacity_to_string_list"" )"	211:12:5297:5397	3577383	0	True				
ANR	3577438	CallExpression	"fatal_error_exit ( 1 , ""malloc failed in add_one_capacity_to_string_list"" )"		3577383	0					
ANR	3577439	Callee	fatal_error_exit		3577383	0					
ANR	3577440	Identifier	fatal_error_exit		3577383	0					
ANR	3577441	ArgumentList	1		3577383	1					
ANR	3577442	Argument	1		3577383	0					
ANR	3577443	PrimaryExpression	1		3577383	0					
ANR	3577444	Argument	"""malloc failed in add_one_capacity_to_string_list"""		3577383	1					
ANR	3577445	PrimaryExpression	"""malloc failed in add_one_capacity_to_string_list"""		3577383	0					
ANR	3577446	ExpressionStatement	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"	214:8:5417:5480	3577383	3	True				
ANR	3577447	CallExpression	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"		3577383	0					
ANR	3577448	Callee	memcpy		3577383	0					
ANR	3577449	Identifier	memcpy		3577383	0					
ANR	3577450	ArgumentList	new_list		3577383	1					
ANR	3577451	Argument	new_list		3577383	0					
ANR	3577452	Identifier	new_list		3577383	0					
ANR	3577453	Argument	list -> list		3577383	1					
ANR	3577454	PtrMemberAccess	list -> list		3577383	0					
ANR	3577455	Identifier	list		3577383	0					
ANR	3577456	Identifier	list		3577383	1					
ANR	3577457	Argument	list -> count * sizeof ( new_list [ 0 ] )		3577383	2					
ANR	3577458	MultiplicativeExpression	list -> count * sizeof ( new_list [ 0 ] )		3577383	0		*			
ANR	3577459	PtrMemberAccess	list -> count		3577383	0					
ANR	3577460	Identifier	list		3577383	0					
ANR	3577461	Identifier	count		3577383	1					
ANR	3577462	SizeofExpression	sizeof ( new_list [ 0 ] )		3577383	1					
ANR	3577463	Sizeof	sizeof		3577383	0					
ANR	3577464	ArrayIndexing	new_list [ 0 ]		3577383	1					
ANR	3577465	Identifier	new_list		3577383	0					
ANR	3577466	PrimaryExpression	0		3577383	1					
ANR	3577467	ExpressionStatement	free ( list -> list )	215:8:5490:5506	3577383	4	True				
ANR	3577468	CallExpression	free ( list -> list )		3577383	0					
ANR	3577469	Callee	free		3577383	0					
ANR	3577470	Identifier	free		3577383	0					
ANR	3577471	ArgumentList	list -> list		3577383	1					
ANR	3577472	Argument	list -> list		3577383	0					
ANR	3577473	PtrMemberAccess	list -> list		3577383	0					
ANR	3577474	Identifier	list		3577383	0					
ANR	3577475	Identifier	list		3577383	1					
ANR	3577476	ExpressionStatement	list -> list = new_list	216:8:5516:5537	3577383	5	True				
ANR	3577477	AssignmentExpression	list -> list = new_list		3577383	0		=			
ANR	3577478	PtrMemberAccess	list -> list		3577383	0					
ANR	3577479	Identifier	list		3577383	0					
ANR	3577480	Identifier	list		3577383	1					
ANR	3577481	Identifier	new_list		3577383	1					
ANR	3577482	ExpressionStatement	list -> capacity = new_capacity	217:8:5547:5576	3577383	6	True				
ANR	3577483	AssignmentExpression	list -> capacity = new_capacity		3577383	0		=			
ANR	3577484	PtrMemberAccess	list -> capacity		3577383	0					
ANR	3577485	Identifier	list		3577383	0					
ANR	3577486	Identifier	capacity		3577383	1					
ANR	3577487	Identifier	new_capacity		3577383	1					
ANR	3577488	ReturnType	static void		3577383	1					
ANR	3577489	Identifier	add_one_capacity_to_string_list		3577383	2					
ANR	3577490	ParameterList	string_list * list		3577383	3					
ANR	3577491	Parameter	string_list * list	204:44:5041:5057	3577383	0	True				
ANR	3577492	ParameterType	string_list *		3577383	0					
ANR	3577493	Identifier	list		3577383	1					
ANR	3577494	CFGEntryNode	ENTRY		3577383		True				
ANR	3577495	CFGExitNode	EXIT		3577383		True				
ANR	3577496	Symbol	malloc		3577383						
ANR	3577497	Symbol	new_capacity		3577383						
ANR	3577498	Symbol	list -> list		3577383						
ANR	3577499	Symbol	* list		3577383						
ANR	3577500	Symbol	new_list		3577383						
ANR	3577501	Symbol	list -> capacity		3577383						
ANR	3577502	Symbol	list		3577383						
ANR	3577503	Symbol	list -> count		3577383						
ANR	3577504	Symbol	* new_list		3577383						
ANR	3577505	Function	add_string_to_list	232:0:5796:5928							
ANR	3577506	FunctionDef	"add_string_to_list (string_list * list , char * s)"		3577505	0					
ANR	3577507	CompoundStatement		233:0:5848:5928	3577505	0					
ANR	3577508	ExpressionStatement	add_one_capacity_to_string_list ( list )	234:4:5854:5891	3577505	0	True				
ANR	3577509	CallExpression	add_one_capacity_to_string_list ( list )		3577505	0					
ANR	3577510	Callee	add_one_capacity_to_string_list		3577505	0					
ANR	3577511	Identifier	add_one_capacity_to_string_list		3577505	0					
ANR	3577512	ArgumentList	list		3577505	1					
ANR	3577513	Argument	list		3577505	0					
ANR	3577514	Identifier	list		3577505	0					
ANR	3577515	ExpressionStatement	list -> list [ list -> count ++ ] = s	235:4:5897:5926	3577505	1	True				
ANR	3577516	AssignmentExpression	list -> list [ list -> count ++ ] = s		3577505	0		=			
ANR	3577517	ArrayIndexing	list -> list [ list -> count ++ ]		3577505	0					
ANR	3577518	PtrMemberAccess	list -> list		3577505	0					
ANR	3577519	Identifier	list		3577505	0					
ANR	3577520	Identifier	list		3577505	1					
ANR	3577521	PostIncDecOperationExpression	list -> count ++		3577505	1					
ANR	3577522	PtrMemberAccess	list -> count		3577505	0					
ANR	3577523	Identifier	list		3577505	0					
ANR	3577524	Identifier	count		3577505	1					
ANR	3577525	IncDec	++		3577505	1					
ANR	3577526	Identifier	s		3577505	1					
ANR	3577527	ReturnType	void		3577505	1					
ANR	3577528	Identifier	add_string_to_list		3577505	2					
ANR	3577529	ParameterList	"string_list * list , char * s"		3577505	3					
ANR	3577530	Parameter	string_list * list	232:24:5820:5836	3577505	0	True				
ANR	3577531	ParameterType	string_list *		3577505	0					
ANR	3577532	Identifier	list		3577505	1					
ANR	3577533	Parameter	char * s	232:43:5839:5845	3577505	1	True				
ANR	3577534	ParameterType	char *		3577505	0					
ANR	3577535	Identifier	s		3577505	1					
ANR	3577536	CFGEntryNode	ENTRY		3577505		True				
ANR	3577537	CFGExitNode	EXIT		3577505		True				
ANR	3577538	Symbol	* list -> list		3577505						
ANR	3577539	Symbol	s		3577505						
ANR	3577540	Symbol	* * list		3577505						
ANR	3577541	Symbol	list -> list		3577505						
ANR	3577542	Symbol	* list		3577505						
ANR	3577543	Symbol	list		3577505						
ANR	3577544	Symbol	list -> count		3577505						
ANR	3577545	Function	prepend_string_to_list	249:0:6158:6402							
ANR	3577546	FunctionDef	"prepend_string_to_list (string_list * list , char * s)"		3577545	0					
ANR	3577547	CompoundStatement		250:0:6214:6402	3577545	0					
ANR	3577548	IdentifierDeclStatement	int i ;	251:4:6220:6225	3577545	0	True				
ANR	3577549	IdentifierDecl	i		3577545	0					
ANR	3577550	IdentifierDeclType	int		3577545	0					
ANR	3577551	Identifier	i		3577545	1					
ANR	3577552	ExpressionStatement	add_one_capacity_to_string_list ( list )	253:4:6232:6269	3577545	1	True				
ANR	3577553	CallExpression	add_one_capacity_to_string_list ( list )		3577545	0					
ANR	3577554	Callee	add_one_capacity_to_string_list		3577545	0					
ANR	3577555	Identifier	add_one_capacity_to_string_list		3577545	0					
ANR	3577556	ArgumentList	list		3577545	1					
ANR	3577557	Argument	list		3577545	0					
ANR	3577558	Identifier	list		3577545	0					
ANR	3577559	ForStatement	for ( i = list -> count ; i > 0 ; -- i )		3577545	2					
ANR	3577560	ForInit	i = list -> count ;	254:9:6280:6295	3577545	0	True				
ANR	3577561	AssignmentExpression	i = list -> count		3577545	0		=			
ANR	3577562	Identifier	i		3577545	0					
ANR	3577563	PtrMemberAccess	list -> count		3577545	1					
ANR	3577564	Identifier	list		3577545	0					
ANR	3577565	Identifier	count		3577545	1					
ANR	3577566	Condition	i > 0	254:26:6297:6301	3577545	1	True				
ANR	3577567	RelationalExpression	i > 0		3577545	0		>			
ANR	3577568	Identifier	i		3577545	0					
ANR	3577569	PrimaryExpression	0		3577545	1					
ANR	3577570	UnaryExpression	-- i	254:33:6304:6306	3577545	2	True				
ANR	3577571	IncDec	--		3577545	0					
ANR	3577572	Identifier	i		3577545	1					
ANR	3577573	CompoundStatement		5:38:94:94	3577545	3					
ANR	3577574	ExpressionStatement	list -> list [ i ] = list -> list [ i - 1 ]	255:8:6319:6352	3577545	0	True				
ANR	3577575	AssignmentExpression	list -> list [ i ] = list -> list [ i - 1 ]		3577545	0		=			
ANR	3577576	ArrayIndexing	list -> list [ i ]		3577545	0					
ANR	3577577	PtrMemberAccess	list -> list		3577545	0					
ANR	3577578	Identifier	list		3577545	0					
ANR	3577579	Identifier	list		3577545	1					
ANR	3577580	Identifier	i		3577545	1					
ANR	3577581	ArrayIndexing	list -> list [ i - 1 ]		3577545	1					
ANR	3577582	PtrMemberAccess	list -> list		3577545	0					
ANR	3577583	Identifier	list		3577545	0					
ANR	3577584	Identifier	list		3577545	1					
ANR	3577585	AdditiveExpression	i - 1		3577545	1		-			
ANR	3577586	Identifier	i		3577545	0					
ANR	3577587	PrimaryExpression	1		3577545	1					
ANR	3577588	ExpressionStatement	++ list -> count	257:4:6364:6377	3577545	3	True				
ANR	3577589	UnaryExpression	++ list -> count		3577545	0					
ANR	3577590	IncDec	++		3577545	0					
ANR	3577591	PtrMemberAccess	list -> count		3577545	1					
ANR	3577592	Identifier	list		3577545	0					
ANR	3577593	Identifier	count		3577545	1					
ANR	3577594	ExpressionStatement	list -> list [ 0 ] = s	258:4:6383:6400	3577545	4	True				
ANR	3577595	AssignmentExpression	list -> list [ 0 ] = s		3577545	0		=			
ANR	3577596	ArrayIndexing	list -> list [ 0 ]		3577545	0					
ANR	3577597	PtrMemberAccess	list -> list		3577545	0					
ANR	3577598	Identifier	list		3577545	0					
ANR	3577599	Identifier	list		3577545	1					
ANR	3577600	PrimaryExpression	0		3577545	1					
ANR	3577601	Identifier	s		3577545	1					
ANR	3577602	ReturnType	void		3577545	1					
ANR	3577603	Identifier	prepend_string_to_list		3577545	2					
ANR	3577604	ParameterList	"string_list * list , char * s"		3577545	3					
ANR	3577605	Parameter	string_list * list	249:28:6186:6202	3577545	0	True				
ANR	3577606	ParameterType	string_list *		3577545	0					
ANR	3577607	Identifier	list		3577545	1					
ANR	3577608	Parameter	char * s	249:47:6205:6211	3577545	1	True				
ANR	3577609	ParameterType	char *		3577545	0					
ANR	3577610	Identifier	s		3577545	1					
ANR	3577611	CFGEntryNode	ENTRY		3577545		True				
ANR	3577612	CFGExitNode	EXIT		3577545		True				
ANR	3577613	Symbol	* list -> list		3577545						
ANR	3577614	Symbol	s		3577545						
ANR	3577615	Symbol	* i		3577545						
ANR	3577616	Symbol	* * list		3577545						
ANR	3577617	Symbol	list -> list		3577545						
ANR	3577618	Symbol	* list		3577545						
ANR	3577619	Symbol	i		3577545						
ANR	3577620	Symbol	list		3577545						
ANR	3577621	Symbol	list -> count		3577545						
ANR	3577622	Function	destroy_string_list	270:0:6588:6816							
ANR	3577623	FunctionDef	destroy_string_list (string_list * list)		3577622	0					
ANR	3577624	CompoundStatement		271:0:6632:6816	3577622	0					
ANR	3577625	IdentifierDeclStatement	int i ;	272:4:6638:6643	3577622	0	True				
ANR	3577626	IdentifierDecl	i		3577622	0					
ANR	3577627	IdentifierDeclType	int		3577622	0					
ANR	3577628	Identifier	i		3577622	1					
ANR	3577629	ForStatement	for ( i = 0 ; i < list -> count ; ++ i )		3577622	1					
ANR	3577630	ForInit	i = 0 ;	273:9:6654:6659	3577622	0	True				
ANR	3577631	AssignmentExpression	i = 0		3577622	0		=			
ANR	3577632	Identifier	i		3577622	0					
ANR	3577633	PrimaryExpression	0		3577622	1					
ANR	3577634	Condition	i < list -> count	273:16:6661:6675	3577622	1	True				
ANR	3577635	RelationalExpression	i < list -> count		3577622	0		<			
ANR	3577636	Identifier	i		3577622	0					
ANR	3577637	PtrMemberAccess	list -> count		3577622	1					
ANR	3577638	Identifier	list		3577622	0					
ANR	3577639	Identifier	count		3577622	1					
ANR	3577640	UnaryExpression	++ i	273:33:6678:6680	3577622	2	True				
ANR	3577641	IncDec	++		3577622	0					
ANR	3577642	Identifier	i		3577622	1					
ANR	3577643	CompoundStatement		3:38:50:50	3577622	3					
ANR	3577644	ExpressionStatement	free ( ( char * ) list -> list [ i ] )	274:8:6693:6721	3577622	0	True				
ANR	3577645	CallExpression	free ( ( char * ) list -> list [ i ] )		3577622	0					
ANR	3577646	Callee	free		3577622	0					
ANR	3577647	Identifier	free		3577622	0					
ANR	3577648	ArgumentList	( char * ) list -> list [ i ]		3577622	1					
ANR	3577649	Argument	( char * ) list -> list [ i ]		3577622	0					
ANR	3577650	CastExpression	( char * ) list -> list [ i ]		3577622	0					
ANR	3577651	CastTarget	char *		3577622	0					
ANR	3577652	ArrayIndexing	list -> list [ i ]		3577622	1					
ANR	3577653	PtrMemberAccess	list -> list		3577622	0					
ANR	3577654	Identifier	list		3577622	0					
ANR	3577655	Identifier	list		3577622	1					
ANR	3577656	Identifier	i		3577622	1					
ANR	3577657	ExpressionStatement	list -> capacity = 0	276:4:6733:6751	3577622	2	True				
ANR	3577658	AssignmentExpression	list -> capacity = 0		3577622	0		=			
ANR	3577659	PtrMemberAccess	list -> capacity		3577622	0					
ANR	3577660	Identifier	list		3577622	0					
ANR	3577661	Identifier	capacity		3577622	1					
ANR	3577662	PrimaryExpression	0		3577622	1					
ANR	3577663	ExpressionStatement	list -> count = 0	277:4:6757:6772	3577622	3	True				
ANR	3577664	AssignmentExpression	list -> count = 0		3577622	0		=			
ANR	3577665	PtrMemberAccess	list -> count		3577622	0					
ANR	3577666	Identifier	list		3577622	0					
ANR	3577667	Identifier	count		3577622	1					
ANR	3577668	PrimaryExpression	0		3577622	1					
ANR	3577669	ExpressionStatement	free ( list -> list )	278:4:6778:6794	3577622	4	True				
ANR	3577670	CallExpression	free ( list -> list )		3577622	0					
ANR	3577671	Callee	free		3577622	0					
ANR	3577672	Identifier	free		3577622	0					
ANR	3577673	ArgumentList	list -> list		3577622	1					
ANR	3577674	Argument	list -> list		3577622	0					
ANR	3577675	PtrMemberAccess	list -> list		3577622	0					
ANR	3577676	Identifier	list		3577622	0					
ANR	3577677	Identifier	list		3577622	1					
ANR	3577678	ExpressionStatement	list -> list = 0	279:4:6800:6814	3577622	5	True				
ANR	3577679	AssignmentExpression	list -> list = 0		3577622	0		=			
ANR	3577680	PtrMemberAccess	list -> list		3577622	0					
ANR	3577681	Identifier	list		3577622	0					
ANR	3577682	Identifier	list		3577622	1					
ANR	3577683	PrimaryExpression	0		3577622	1					
ANR	3577684	ReturnType	void		3577622	1					
ANR	3577685	Identifier	destroy_string_list		3577622	2					
ANR	3577686	ParameterList	string_list * list		3577622	3					
ANR	3577687	Parameter	string_list * list	270:25:6613:6629	3577622	0	True				
ANR	3577688	ParameterType	string_list *		3577622	0					
ANR	3577689	Identifier	list		3577622	1					
ANR	3577690	CFGEntryNode	ENTRY		3577622		True				
ANR	3577691	CFGExitNode	EXIT		3577622		True				
ANR	3577692	Symbol	* list -> list		3577622						
ANR	3577693	Symbol	* i		3577622						
ANR	3577694	Symbol	* * list		3577622						
ANR	3577695	Symbol	list -> list		3577622						
ANR	3577696	Symbol	* list		3577622						
ANR	3577697	Symbol	i		3577622						
ANR	3577698	Symbol	list -> capacity		3577622						
ANR	3577699	Symbol	list		3577622						
ANR	3577700	Symbol	list -> count		3577622						
ANR	3577701	Function	null_terminated_list_from_string_list	293:0:7216:7381							
ANR	3577702	FunctionDef	null_terminated_list_from_string_list (string_list * list)		3577701	0					
ANR	3577703	CompoundStatement		294:0:7280:7381	3577701	0					
ANR	3577704	ExpressionStatement	add_one_capacity_to_string_list ( list )	295:4:7286:7323	3577701	0	True				
ANR	3577705	CallExpression	add_one_capacity_to_string_list ( list )		3577701	0					
ANR	3577706	Callee	add_one_capacity_to_string_list		3577701	0					
ANR	3577707	Identifier	add_one_capacity_to_string_list		3577701	0					
ANR	3577708	ArgumentList	list		3577701	1					
ANR	3577709	Argument	list		3577701	0					
ANR	3577710	Identifier	list		3577701	0					
ANR	3577711	ExpressionStatement	list -> list [ list -> count ] = 0	296:4:7329:7356	3577701	1	True				
ANR	3577712	AssignmentExpression	list -> list [ list -> count ] = 0		3577701	0		=			
ANR	3577713	ArrayIndexing	list -> list [ list -> count ]		3577701	0					
ANR	3577714	PtrMemberAccess	list -> list		3577701	0					
ANR	3577715	Identifier	list		3577701	0					
ANR	3577716	Identifier	list		3577701	1					
ANR	3577717	PtrMemberAccess	list -> count		3577701	1					
ANR	3577718	Identifier	list		3577701	0					
ANR	3577719	Identifier	count		3577701	1					
ANR	3577720	PrimaryExpression	0		3577701	1					
ANR	3577721	ReturnStatement	return list -> list ;	297:4:7362:7379	3577701	2	True				
ANR	3577722	PtrMemberAccess	list -> list		3577701	0					
ANR	3577723	Identifier	list		3577701	0					
ANR	3577724	Identifier	list		3577701	1					
ANR	3577725	ReturnType	char * *		3577701	1					
ANR	3577726	Identifier	null_terminated_list_from_string_list		3577701	2					
ANR	3577727	ParameterList	string_list * list		3577701	3					
ANR	3577728	Parameter	string_list * list	293:45:7261:7277	3577701	0	True				
ANR	3577729	ParameterType	string_list *		3577701	0					
ANR	3577730	Identifier	list		3577701	1					
ANR	3577731	CFGEntryNode	ENTRY		3577701		True				
ANR	3577732	CFGExitNode	EXIT		3577701		True				
ANR	3577733	Symbol	* list -> list		3577701						
ANR	3577734	Symbol	* * list		3577701						
ANR	3577735	Symbol	list -> list		3577701						
ANR	3577736	Symbol	* list		3577701						
ANR	3577737	Symbol	* list -> count		3577701						
ANR	3577738	Symbol	list		3577701						
ANR	3577739	Symbol	list -> count		3577701						
ANR	3577740	Function	is_string_in_list	312:0:7656:7859							
ANR	3577741	FunctionDef	"is_string_in_list (string_list * list , const char * s)"		3577740	0					
ANR	3577742	CompoundStatement		313:0:7712:7859	3577740	0					
ANR	3577743	IdentifierDeclStatement	int i ;	314:4:7718:7723	3577740	0	True				
ANR	3577744	IdentifierDecl	i		3577740	0					
ANR	3577745	IdentifierDeclType	int		3577740	0					
ANR	3577746	Identifier	i		3577740	1					
ANR	3577747	ForStatement	for ( i = 0 ; i < list -> count ; ++ i )		3577740	1					
ANR	3577748	ForInit	i = 0 ;	315:9:7734:7739	3577740	0	True				
ANR	3577749	AssignmentExpression	i = 0		3577740	0		=			
ANR	3577750	Identifier	i		3577740	0					
ANR	3577751	PrimaryExpression	0		3577740	1					
ANR	3577752	Condition	i < list -> count	315:16:7741:7755	3577740	1	True				
ANR	3577753	RelationalExpression	i < list -> count		3577740	0		<			
ANR	3577754	Identifier	i		3577740	0					
ANR	3577755	PtrMemberAccess	list -> count		3577740	1					
ANR	3577756	Identifier	list		3577740	0					
ANR	3577757	Identifier	count		3577740	1					
ANR	3577758	UnaryExpression	++ i	315:33:7758:7760	3577740	2	True				
ANR	3577759	IncDec	++		3577740	0					
ANR	3577760	Identifier	i		3577740	1					
ANR	3577761	CompoundStatement		3:38:50:50	3577740	3					
ANR	3577762	IfStatement	"if ( ! strcmp ( list -> list [ i ] , s ) )"		3577740	0					
ANR	3577763	Condition	"! strcmp ( list -> list [ i ] , s )"	316:12:7777:7801	3577740	0	True				
ANR	3577764	UnaryOperationExpression	"! strcmp ( list -> list [ i ] , s )"		3577740	0					
ANR	3577765	UnaryOperator	!		3577740	0					
ANR	3577766	CallExpression	"strcmp ( list -> list [ i ] , s )"		3577740	1					
ANR	3577767	Callee	strcmp		3577740	0					
ANR	3577768	Identifier	strcmp		3577740	0					
ANR	3577769	ArgumentList	list -> list [ i ]		3577740	1					
ANR	3577770	Argument	list -> list [ i ]		3577740	0					
ANR	3577771	ArrayIndexing	list -> list [ i ]		3577740	0					
ANR	3577772	PtrMemberAccess	list -> list		3577740	0					
ANR	3577773	Identifier	list		3577740	0					
ANR	3577774	Identifier	list		3577740	1					
ANR	3577775	Identifier	i		3577740	1					
ANR	3577776	Argument	s		3577740	1					
ANR	3577777	Identifier	s		3577740	0					
ANR	3577778	CompoundStatement		4:39:91:91	3577740	1					
ANR	3577779	ReturnStatement	return 1 ;	317:12:7818:7826	3577740	0	True				
ANR	3577780	PrimaryExpression	1		3577740	0					
ANR	3577781	ReturnStatement	return 0 ;	321:4:7849:7857	3577740	2	True				
ANR	3577782	PrimaryExpression	0		3577740	0					
ANR	3577783	ReturnType	int		3577740	1					
ANR	3577784	Identifier	is_string_in_list		3577740	2					
ANR	3577785	ParameterList	"string_list * list , const char * s"		3577740	3					
ANR	3577786	Parameter	string_list * list	312:22:7678:7694	3577740	0	True				
ANR	3577787	ParameterType	string_list *		3577740	0					
ANR	3577788	Identifier	list		3577740	1					
ANR	3577789	Parameter	const char * s	312:41:7697:7709	3577740	1	True				
ANR	3577790	ParameterType	const char *		3577740	0					
ANR	3577791	Identifier	s		3577740	1					
ANR	3577792	CFGEntryNode	ENTRY		3577740		True				
ANR	3577793	CFGExitNode	EXIT		3577740		True				
ANR	3577794	Symbol	strcmp		3577740						
ANR	3577795	Symbol	* list -> list		3577740						
ANR	3577796	Symbol	s		3577740						
ANR	3577797	Symbol	* * list		3577740						
ANR	3577798	Symbol	* i		3577740						
ANR	3577799	Symbol	list -> list		3577740						
ANR	3577800	Symbol	* list		3577740						
ANR	3577801	Symbol	i		3577740						
ANR	3577802	Symbol	list		3577740						
ANR	3577803	Symbol	list -> count		3577740						
ANR	3577804	Function	is_string_list_empty	333:0:8071:8148							
ANR	3577805	FunctionDef	is_string_list_empty (string_list * list)		3577804	0					
ANR	3577806	CompoundStatement		334:0:8115:8148	3577804	0					
ANR	3577807	ReturnStatement	return ( list -> count == 0 ) ;	335:4:8121:8146	3577804	0	True				
ANR	3577808	EqualityExpression	list -> count == 0		3577804	0		==			
ANR	3577809	PtrMemberAccess	list -> count		3577804	0					
ANR	3577810	Identifier	list		3577804	0					
ANR	3577811	Identifier	count		3577804	1					
ANR	3577812	PrimaryExpression	0		3577804	1					
ANR	3577813	ReturnType	int		3577804	1					
ANR	3577814	Identifier	is_string_list_empty		3577804	2					
ANR	3577815	ParameterList	string_list * list		3577804	3					
ANR	3577816	Parameter	string_list * list	333:25:8096:8112	3577804	0	True				
ANR	3577817	ParameterType	string_list *		3577804	0					
ANR	3577818	Identifier	list		3577804	1					
ANR	3577819	CFGEntryNode	ENTRY		3577804		True				
ANR	3577820	CFGExitNode	EXIT		3577804		True				
ANR	3577821	Symbol	* list		3577804						
ANR	3577822	Symbol	list		3577804						
ANR	3577823	Symbol	list -> count		3577804						
ANR	3577824	Function	skip_whitespace_const	348:0:8373:8490							
ANR	3577825	FunctionDef	skip_whitespace_const (const char * s)		3577824	0					
ANR	3577826	CompoundStatement		349:0:8422:8490	3577824	0					
ANR	3577827	WhileStatement	while ( * s && isspace ( * s ) )		3577824	0					
ANR	3577828	Condition	* s && isspace ( * s )	350:11:8435:8451	3577824	0	True				
ANR	3577829	AndExpression	* s && isspace ( * s )		3577824	0		&&			
ANR	3577830	UnaryOperationExpression	* s		3577824	0					
ANR	3577831	UnaryOperator	*		3577824	0					
ANR	3577832	Identifier	s		3577824	1					
ANR	3577833	CallExpression	isspace ( * s )		3577824	1					
ANR	3577834	Callee	isspace		3577824	0					
ANR	3577835	Identifier	isspace		3577824	0					
ANR	3577836	ArgumentList	* s		3577824	1					
ANR	3577837	Argument	* s		3577824	0					
ANR	3577838	UnaryOperationExpression	* s		3577824	0					
ANR	3577839	UnaryOperator	*		3577824	0					
ANR	3577840	Identifier	s		3577824	1					
ANR	3577841	CompoundStatement		2:30:31:31	3577824	1					
ANR	3577842	ExpressionStatement	++ s	351:8:8464:8467	3577824	0	True				
ANR	3577843	UnaryExpression	++ s		3577824	0					
ANR	3577844	IncDec	++		3577824	0					
ANR	3577845	Identifier	s		3577824	1					
ANR	3577846	ReturnStatement	return s ;	354:4:8480:8488	3577824	1	True				
ANR	3577847	Identifier	s		3577824	0					
ANR	3577848	ReturnType	const char *		3577824	1					
ANR	3577849	Identifier	skip_whitespace_const		3577824	2					
ANR	3577850	ParameterList	const char * s		3577824	3					
ANR	3577851	Parameter	const char * s	348:34:8407:8419	3577824	0	True				
ANR	3577852	ParameterType	const char *		3577824	0					
ANR	3577853	Identifier	s		3577824	1					
ANR	3577854	CFGEntryNode	ENTRY		3577824		True				
ANR	3577855	CFGExitNode	EXIT		3577824		True				
ANR	3577856	Symbol	s		3577824						
ANR	3577857	Symbol	isspace		3577824						
ANR	3577858	Symbol	* s		3577824						
ANR	3577859	Function	skip_whitespace	368:0:8809:8908							
ANR	3577860	FunctionDef	skip_whitespace (char * s)		3577859	0					
ANR	3577861	CompoundStatement		369:0:8840:8908	3577859	0					
ANR	3577862	WhileStatement	while ( * s && isspace ( * s ) )		3577859	0					
ANR	3577863	Condition	* s && isspace ( * s )	370:11:8853:8869	3577859	0	True				
ANR	3577864	AndExpression	* s && isspace ( * s )		3577859	0		&&			
ANR	3577865	UnaryOperationExpression	* s		3577859	0					
ANR	3577866	UnaryOperator	*		3577859	0					
ANR	3577867	Identifier	s		3577859	1					
ANR	3577868	CallExpression	isspace ( * s )		3577859	1					
ANR	3577869	Callee	isspace		3577859	0					
ANR	3577870	Identifier	isspace		3577859	0					
ANR	3577871	ArgumentList	* s		3577859	1					
ANR	3577872	Argument	* s		3577859	0					
ANR	3577873	UnaryOperationExpression	* s		3577859	0					
ANR	3577874	UnaryOperator	*		3577859	0					
ANR	3577875	Identifier	s		3577859	1					
ANR	3577876	CompoundStatement		2:30:31:31	3577859	1					
ANR	3577877	ExpressionStatement	++ s	371:8:8882:8885	3577859	0	True				
ANR	3577878	UnaryExpression	++ s		3577859	0					
ANR	3577879	IncDec	++		3577859	0					
ANR	3577880	Identifier	s		3577859	1					
ANR	3577881	ReturnStatement	return s ;	374:4:8898:8906	3577859	1	True				
ANR	3577882	Identifier	s		3577859	0					
ANR	3577883	ReturnType	char *		3577859	1					
ANR	3577884	Identifier	skip_whitespace		3577859	2					
ANR	3577885	ParameterList	char * s		3577859	3					
ANR	3577886	Parameter	char * s	368:22:8831:8837	3577859	0	True				
ANR	3577887	ParameterType	char *		3577859	0					
ANR	3577888	Identifier	s		3577859	1					
ANR	3577889	CFGEntryNode	ENTRY		3577859		True				
ANR	3577890	CFGExitNode	EXIT		3577859		True				
ANR	3577891	Symbol	s		3577859						
ANR	3577892	Symbol	isspace		3577859						
ANR	3577893	Symbol	* s		3577859						
ANR	3577894	Function	trim_whitespace	388:0:9239:9720							
ANR	3577895	FunctionDef	"trim_whitespace (const char * s , const char * endp)"		3577894	0					
ANR	3577896	CompoundStatement		389:0:9294:9720	3577894	0					
ANR	3577897	IdentifierDeclStatement	char * new_value ;	390:4:9300:9315	3577894	0	True				
ANR	3577898	IdentifierDecl	* new_value		3577894	0					
ANR	3577899	IdentifierDeclType	char *		3577894	0					
ANR	3577900	Identifier	new_value		3577894	1					
ANR	3577901	IdentifierDeclStatement	size_t trimmed_len ;	391:4:9321:9339	3577894	1	True				
ANR	3577902	IdentifierDecl	trimmed_len		3577894	0					
ANR	3577903	IdentifierDeclType	size_t		3577894	0					
ANR	3577904	Identifier	trimmed_len		3577894	1					
ANR	3577905	ExpressionStatement	s = skip_whitespace_const ( s )	393:4:9346:9374	3577894	2	True				
ANR	3577906	AssignmentExpression	s = skip_whitespace_const ( s )		3577894	0		=			
ANR	3577907	Identifier	s		3577894	0					
ANR	3577908	CallExpression	skip_whitespace_const ( s )		3577894	1					
ANR	3577909	Callee	skip_whitespace_const		3577894	0					
ANR	3577910	Identifier	skip_whitespace_const		3577894	0					
ANR	3577911	ArgumentList	s		3577894	1					
ANR	3577912	Argument	s		3577894	0					
ANR	3577913	Identifier	s		3577894	0					
ANR	3577914	WhileStatement	while ( isspace ( * ( endp - 1 ) ) && s < endp )		3577894	3					
ANR	3577915	Condition	isspace ( * ( endp - 1 ) ) && s < endp	395:11:9388:9419	3577894	0	True				
ANR	3577916	AndExpression	isspace ( * ( endp - 1 ) ) && s < endp		3577894	0		&&			
ANR	3577917	CallExpression	isspace ( * ( endp - 1 ) )		3577894	0					
ANR	3577918	Callee	isspace		3577894	0					
ANR	3577919	Identifier	isspace		3577894	0					
ANR	3577920	ArgumentList	* ( endp - 1 )		3577894	1					
ANR	3577921	Argument	* ( endp - 1 )		3577894	0					
ANR	3577922	UnaryOperationExpression	* ( endp - 1 )		3577894	0					
ANR	3577923	UnaryOperator	*		3577894	0					
ANR	3577924	AdditiveExpression	endp - 1		3577894	1		-			
ANR	3577925	Identifier	endp		3577894	0					
ANR	3577926	PrimaryExpression	1		3577894	1					
ANR	3577927	RelationalExpression	s < endp		3577894	1		<			
ANR	3577928	Identifier	s		3577894	0					
ANR	3577929	Identifier	endp		3577894	1					
ANR	3577930	CompoundStatement		7:45:127:127	3577894	1					
ANR	3577931	ExpressionStatement	-- endp	396:8:9432:9438	3577894	0	True				
ANR	3577932	UnaryExpression	-- endp		3577894	0					
ANR	3577933	IncDec	--		3577894	0					
ANR	3577934	Identifier	endp		3577894	1					
ANR	3577935	ExpressionStatement	trimmed_len = endp - s	399:4:9451:9473	3577894	4	True				
ANR	3577936	AssignmentExpression	trimmed_len = endp - s		3577894	0		=			
ANR	3577937	Identifier	trimmed_len		3577894	0					
ANR	3577938	AdditiveExpression	endp - s		3577894	1		-			
ANR	3577939	Identifier	endp		3577894	0					
ANR	3577940	Identifier	s		3577894	1					
ANR	3577941	ExpressionStatement	new_value = ( char * ) malloc ( trimmed_len + 1 )	400:4:9479:9523	3577894	5	True				
ANR	3577942	AssignmentExpression	new_value = ( char * ) malloc ( trimmed_len + 1 )		3577894	0		=			
ANR	3577943	Identifier	new_value		3577894	0					
ANR	3577944	CastExpression	( char * ) malloc ( trimmed_len + 1 )		3577894	1					
ANR	3577945	CastTarget	char *		3577894	0					
ANR	3577946	CallExpression	malloc ( trimmed_len + 1 )		3577894	1					
ANR	3577947	Callee	malloc		3577894	0					
ANR	3577948	Identifier	malloc		3577894	0					
ANR	3577949	ArgumentList	trimmed_len + 1		3577894	1					
ANR	3577950	Argument	trimmed_len + 1		3577894	0					
ANR	3577951	AdditiveExpression	trimmed_len + 1		3577894	0		+			
ANR	3577952	Identifier	trimmed_len		3577894	0					
ANR	3577953	PrimaryExpression	1		3577894	1					
ANR	3577954	IfStatement	if ( new_value == 0 )		3577894	6					
ANR	3577955	Condition	new_value == 0	401:8:9533:9546	3577894	0	True				
ANR	3577956	EqualityExpression	new_value == 0		3577894	0		==			
ANR	3577957	Identifier	new_value		3577894	0					
ANR	3577958	PrimaryExpression	0		3577894	1					
ANR	3577959	CompoundStatement		13:24:254:254	3577894	1					
ANR	3577960	ExpressionStatement	"fatal_error_exit ( 1 , ""malloc failed in trim_whitespace"" )"	402:8:9559:9614	3577894	0	True				
ANR	3577961	CallExpression	"fatal_error_exit ( 1 , ""malloc failed in trim_whitespace"" )"		3577894	0					
ANR	3577962	Callee	fatal_error_exit		3577894	0					
ANR	3577963	Identifier	fatal_error_exit		3577894	0					
ANR	3577964	ArgumentList	1		3577894	1					
ANR	3577965	Argument	1		3577894	0					
ANR	3577966	PrimaryExpression	1		3577894	0					
ANR	3577967	Argument	"""malloc failed in trim_whitespace"""		3577894	1					
ANR	3577968	PrimaryExpression	"""malloc failed in trim_whitespace"""		3577894	0					
ANR	3577969	ExpressionStatement	"memcpy ( new_value , s , trimmed_len )"	405:4:9627:9660	3577894	7	True				
ANR	3577970	CallExpression	"memcpy ( new_value , s , trimmed_len )"		3577894	0					
ANR	3577971	Callee	memcpy		3577894	0					
ANR	3577972	Identifier	memcpy		3577894	0					
ANR	3577973	ArgumentList	new_value		3577894	1					
ANR	3577974	Argument	new_value		3577894	0					
ANR	3577975	Identifier	new_value		3577894	0					
ANR	3577976	Argument	s		3577894	1					
ANR	3577977	Identifier	s		3577894	0					
ANR	3577978	Argument	trimmed_len		3577894	2					
ANR	3577979	Identifier	trimmed_len		3577894	0					
ANR	3577980	ExpressionStatement	new_value [ trimmed_len ] = '\\0'	406:4:9666:9695	3577894	8	True				
ANR	3577981	AssignmentExpression	new_value [ trimmed_len ] = '\\0'		3577894	0		=			
ANR	3577982	ArrayIndexing	new_value [ trimmed_len ]		3577894	0					
ANR	3577983	Identifier	new_value		3577894	0					
ANR	3577984	Identifier	trimmed_len		3577894	1					
ANR	3577985	PrimaryExpression	'\\0'		3577894	1					
ANR	3577986	ReturnStatement	return new_value ;	408:4:9702:9718	3577894	9	True				
ANR	3577987	Identifier	new_value		3577894	0					
ANR	3577988	ReturnType	char *		3577894	1					
ANR	3577989	Identifier	trim_whitespace		3577894	2					
ANR	3577990	ParameterList	"const char * s , const char * endp"		3577894	3					
ANR	3577991	Parameter	const char * s	388:22:9261:9273	3577894	0	True				
ANR	3577992	ParameterType	const char *		3577894	0					
ANR	3577993	Identifier	s		3577894	1					
ANR	3577994	Parameter	const char * endp	388:37:9276:9291	3577894	1	True				
ANR	3577995	ParameterType	const char *		3577894	0					
ANR	3577996	Identifier	endp		3577894	1					
ANR	3577997	CFGEntryNode	ENTRY		3577894		True				
ANR	3577998	CFGExitNode	EXIT		3577894		True				
ANR	3577999	Symbol	skip_whitespace_const		3577894						
ANR	3578000	Symbol	malloc		3577894						
ANR	3578001	Symbol	s		3577894						
ANR	3578002	Symbol	* trimmed_len		3577894						
ANR	3578003	Symbol	trimmed_len		3577894						
ANR	3578004	Symbol	* endp		3577894						
ANR	3578005	Symbol	isspace		3577894						
ANR	3578006	Symbol	endp		3577894						
ANR	3578007	Symbol	* ( endp - 1 )		3577894						
ANR	3578008	Symbol	* new_value		3577894						
ANR	3578009	Symbol	new_value		3577894						
ANR	3578010	Function	setenv	425:0:10217:10554							
ANR	3578011	FunctionDef	"setenv (const char * var , const char * val , int overwrite)"		3578010	0					
ANR	3578012	CompoundStatement		426:0:10284:10554	3578010	0					
ANR	3578013	IdentifierDeclStatement	char * tmp ;	427:4:10290:10299	3578010	0	True				
ANR	3578014	IdentifierDecl	* tmp		3578010	0					
ANR	3578015	IdentifierDeclType	char *		3578010	0					
ANR	3578016	Identifier	tmp		3578010	1					
ANR	3578017	ExpressionStatement	( void ) overwrite	429:4:10306:10322	3578010	1	True				
ANR	3578018	CastExpression	( void ) overwrite		3578010	0					
ANR	3578019	CastTarget	void		3578010	0					
ANR	3578020	Identifier	overwrite		3578010	1					
ANR	3578021	ExpressionStatement	tmp = ( char * ) malloc ( strlen ( var ) + strlen ( val ) + 2 )	431:4:10329:10381	3578010	2	True				
ANR	3578022	AssignmentExpression	tmp = ( char * ) malloc ( strlen ( var ) + strlen ( val ) + 2 )		3578010	0		=			
ANR	3578023	Identifier	tmp		3578010	0					
ANR	3578024	CastExpression	( char * ) malloc ( strlen ( var ) + strlen ( val ) + 2 )		3578010	1					
ANR	3578025	CastTarget	char *		3578010	0					
ANR	3578026	CallExpression	malloc ( strlen ( var ) + strlen ( val ) + 2 )		3578010	1					
ANR	3578027	Callee	malloc		3578010	0					
ANR	3578028	Identifier	malloc		3578010	0					
ANR	3578029	ArgumentList	strlen ( var ) + strlen ( val ) + 2		3578010	1					
ANR	3578030	Argument	strlen ( var ) + strlen ( val ) + 2		3578010	0					
ANR	3578031	AdditiveExpression	strlen ( var ) + strlen ( val ) + 2		3578010	0		+			
ANR	3578032	CallExpression	strlen ( var )		3578010	0					
ANR	3578033	Callee	strlen		3578010	0					
ANR	3578034	Identifier	strlen		3578010	0					
ANR	3578035	ArgumentList	var		3578010	1					
ANR	3578036	Argument	var		3578010	0					
ANR	3578037	Identifier	var		3578010	0					
ANR	3578038	AdditiveExpression	strlen ( val ) + 2		3578010	1		+			
ANR	3578039	CallExpression	strlen ( val )		3578010	0					
ANR	3578040	Callee	strlen		3578010	0					
ANR	3578041	Identifier	strlen		3578010	0					
ANR	3578042	ArgumentList	val		3578010	1					
ANR	3578043	Argument	val		3578010	0					
ANR	3578044	Identifier	val		3578010	0					
ANR	3578045	PrimaryExpression	2		3578010	1					
ANR	3578046	IfStatement	if ( tmp == NULL )		3578010	3					
ANR	3578047	Condition	tmp == NULL	432:8:10391:10401	3578010	0	True				
ANR	3578048	EqualityExpression	tmp == NULL		3578010	0		==			
ANR	3578049	Identifier	tmp		3578010	0					
ANR	3578050	Identifier	NULL		3578010	1					
ANR	3578051	CompoundStatement		7:21:119:119	3578010	1					
ANR	3578052	ReturnStatement	return - 1 ;	433:8:10414:10423	3578010	0	True				
ANR	3578053	UnaryOperationExpression	- 1		3578010	0					
ANR	3578054	UnaryOperator	-		3578010	0					
ANR	3578055	PrimaryExpression	1		3578010	1					
ANR	3578056	ExpressionStatement	"sprintf ( tmp , ""%s=%s"" , var , val )"	435:4:10435:10466	3578010	4	True				
ANR	3578057	CallExpression	"sprintf ( tmp , ""%s=%s"" , var , val )"		3578010	0					
ANR	3578058	Callee	sprintf		3578010	0					
ANR	3578059	Identifier	sprintf		3578010	0					
ANR	3578060	ArgumentList	tmp		3578010	1					
ANR	3578061	Argument	tmp		3578010	0					
ANR	3578062	Identifier	tmp		3578010	0					
ANR	3578063	Argument	"""%s=%s"""		3578010	1					
ANR	3578064	PrimaryExpression	"""%s=%s"""		3578010	0					
ANR	3578065	Argument	var		3578010	2					
ANR	3578066	Identifier	var		3578010	0					
ANR	3578067	Argument	val		3578010	3					
ANR	3578068	Identifier	val		3578010	0					
ANR	3578069	IfStatement	if ( putenv ( tmp ) != 0 )		3578010	5					
ANR	3578070	Condition	putenv ( tmp ) != 0	436:8:10476:10491	3578010	0	True				
ANR	3578071	EqualityExpression	putenv ( tmp ) != 0		3578010	0		!=			
ANR	3578072	CallExpression	putenv ( tmp )		3578010	0					
ANR	3578073	Callee	putenv		3578010	0					
ANR	3578074	Identifier	putenv		3578010	0					
ANR	3578075	ArgumentList	tmp		3578010	1					
ANR	3578076	Argument	tmp		3578010	0					
ANR	3578077	Identifier	tmp		3578010	0					
ANR	3578078	PrimaryExpression	0		3578010	1					
ANR	3578079	CompoundStatement		11:26:209:209	3578010	1					
ANR	3578080	ExpressionStatement	free ( tmp )	437:8:10504:10513	3578010	0	True				
ANR	3578081	CallExpression	free ( tmp )		3578010	0					
ANR	3578082	Callee	free		3578010	0					
ANR	3578083	Identifier	free		3578010	0					
ANR	3578084	ArgumentList	tmp		3578010	1					
ANR	3578085	Argument	tmp		3578010	0					
ANR	3578086	Identifier	tmp		3578010	0					
ANR	3578087	ReturnStatement	return - 1 ;	438:8:10523:10532	3578010	1	True				
ANR	3578088	UnaryOperationExpression	- 1		3578010	0					
ANR	3578089	UnaryOperator	-		3578010	0					
ANR	3578090	PrimaryExpression	1		3578010	1					
ANR	3578091	ReturnStatement	return 0 ;	440:4:10544:10552	3578010	6	True				
ANR	3578092	PrimaryExpression	0		3578010	0					
ANR	3578093	ReturnType	static int		3578010	1					
ANR	3578094	Identifier	setenv		3578010	2					
ANR	3578095	ParameterList	"const char * var , const char * val , int overwrite"		3578010	3					
ANR	3578096	Parameter	const char * var	425:18:10235:10249	3578010	0	True				
ANR	3578097	ParameterType	const char *		3578010	0					
ANR	3578098	Identifier	var		3578010	1					
ANR	3578099	Parameter	const char * val	425:35:10252:10266	3578010	1	True				
ANR	3578100	ParameterType	const char *		3578010	0					
ANR	3578101	Identifier	val		3578010	1					
ANR	3578102	Parameter	int overwrite	425:52:10269:10281	3578010	2	True				
ANR	3578103	ParameterType	int		3578010	0					
ANR	3578104	Identifier	overwrite		3578010	1					
ANR	3578105	CFGEntryNode	ENTRY		3578010		True				
ANR	3578106	CFGExitNode	EXIT		3578010		True				
ANR	3578107	Symbol	val		3578010						
ANR	3578108	Symbol	strlen		3578010						
ANR	3578109	Symbol	malloc		3578010						
ANR	3578110	Symbol	NULL		3578010						
ANR	3578111	Symbol	var		3578010						
ANR	3578112	Symbol	tmp		3578010						
ANR	3578113	Symbol	putenv		3578010						
ANR	3578114	Symbol	overwrite		3578010						
ANR	3578115	DeclStmt									
ANR	3578116	Decl							extern char	extern char * *	environ
ANR	3578117	Function	clearenv	460:0:11064:11689							
ANR	3578118	FunctionDef	clearenv ()		3578117	0					
ANR	3578119	CompoundStatement		461:0:11083:11689	3578117	0					
ANR	3578120	IdentifierDeclStatement	int r = 0 ;	462:4:11089:11098	3578117	0	True				
ANR	3578121	IdentifierDecl	r = 0		3578117	0					
ANR	3578122	IdentifierDeclType	int		3578117	0					
ANR	3578123	Identifier	r		3578117	1					
ANR	3578124	AssignmentExpression	r = 0		3578117	2		=			
ANR	3578125	Identifier	r		3578117	0					
ANR	3578126	PrimaryExpression	0		3578117	1					
ANR	3578127	IdentifierDeclStatement	"const char var_name [ ] = ""x"" ;"	463:4:11144:11171	3578117	1	True				
ANR	3578128	IdentifierDecl	"var_name [ ] = ""x"""		3578117	0					
ANR	3578129	IdentifierDeclType	const char [ ]		3578117	0					
ANR	3578130	Identifier	var_name		3578117	1					
ANR	3578131	AssignmentExpression	"var_name [ ] = ""x"""		3578117	2		=			
ANR	3578132	Identifier	var_name		3578117	0					
ANR	3578133	PrimaryExpression	"""x"""		3578117	1					
ANR	3578134	ExpressionStatement	environ = 0	468:4:11382:11393	3578117	2	True				
ANR	3578135	AssignmentExpression	environ = 0		3578117	0		=			
ANR	3578136	Identifier	environ		3578117	0					
ANR	3578137	PrimaryExpression	0		3578117	1					
ANR	3578138	ExpressionStatement	"r = setenv ( var_name , """" , 0 )"	474:4:11586:11613	3578117	3	True				
ANR	3578139	AssignmentExpression	"r = setenv ( var_name , """" , 0 )"		3578117	0		=			
ANR	3578140	Identifier	r		3578117	0					
ANR	3578141	CallExpression	"setenv ( var_name , """" , 0 )"		3578117	1					
ANR	3578142	Callee	setenv		3578117	0					
ANR	3578143	Identifier	setenv		3578117	0					
ANR	3578144	ArgumentList	var_name		3578117	1					
ANR	3578145	Argument	var_name		3578117	0					
ANR	3578146	Identifier	var_name		3578117	0					
ANR	3578147	Argument	""""""		3578117	1					
ANR	3578148	PrimaryExpression	""""""		3578117	0					
ANR	3578149	Argument	0		3578117	2					
ANR	3578150	PrimaryExpression	0		3578117	0					
ANR	3578151	IfStatement	if ( r == 0 )		3578117	4					
ANR	3578152	Condition	r == 0	475:8:11623:11628	3578117	0	True				
ANR	3578153	EqualityExpression	r == 0		3578117	0		==			
ANR	3578154	Identifier	r		3578117	0					
ANR	3578155	PrimaryExpression	0		3578117	1					
ANR	3578156	CompoundStatement		15:16:547:547	3578117	1					
ANR	3578157	ExpressionStatement	unsetenv ( var_name )	476:8:11641:11659	3578117	0	True				
ANR	3578158	CallExpression	unsetenv ( var_name )		3578117	0					
ANR	3578159	Callee	unsetenv		3578117	0					
ANR	3578160	Identifier	unsetenv		3578117	0					
ANR	3578161	ArgumentList	var_name		3578117	1					
ANR	3578162	Argument	var_name		3578117	0					
ANR	3578163	Identifier	var_name		3578117	0					
ANR	3578164	ReturnStatement	return r ;	480:4:11679:11687	3578117	5	True				
ANR	3578165	Identifier	r		3578117	0					
ANR	3578166	ReturnType	int		3578117	1					
ANR	3578167	Identifier	clearenv		3578117	2					
ANR	3578168	ParameterList			3578117	3					
ANR	3578169	CFGEntryNode	ENTRY		3578117		True				
ANR	3578170	CFGExitNode	EXIT		3578117		True				
ANR	3578171	Symbol	r		3578117						
ANR	3578172	Symbol	setenv		3578117						
ANR	3578173	Symbol	var_name		3578117						
ANR	3578174	Symbol	environ		3578117						
ANR	3578175	Function	safe_reset_environment	495:0:11997:12775							
ANR	3578176	FunctionDef	safe_reset_environment ()		3578175	0					
ANR	3578177	CompoundStatement		496:0:12026:12775	3578175	0					
ANR	3578178	IdentifierDeclStatement	int r ;	497:4:12032:12037	3578175	0	True				
ANR	3578179	IdentifierDecl	r		3578175	0					
ANR	3578180	IdentifierDeclType	int		3578175	0					
ANR	3578181	Identifier	r		3578175	1					
ANR	3578182	IdentifierDeclStatement	"const char tz_name [ ] = ""TZ"" ;"	499:4:12084:12111	3578175	1	True				
ANR	3578183	IdentifierDecl	"tz_name [ ] = ""TZ"""		3578175	0					
ANR	3578184	IdentifierDeclType	const char [ ]		3578175	0					
ANR	3578185	Identifier	tz_name		3578175	1					
ANR	3578186	AssignmentExpression	"tz_name [ ] = ""TZ"""		3578175	2		=			
ANR	3578187	Identifier	tz_name		3578175	0					
ANR	3578188	PrimaryExpression	"""TZ"""		3578175	1					
ANR	3578189	IdentifierDeclStatement	"const char path_name [ ] = ""PATH"" ;"	500:4:12117:12148	3578175	2	True				
ANR	3578190	IdentifierDecl	"path_name [ ] = ""PATH"""		3578175	0					
ANR	3578191	IdentifierDeclType	const char [ ]		3578175	0					
ANR	3578192	Identifier	path_name		3578175	1					
ANR	3578193	AssignmentExpression	"path_name [ ] = ""PATH"""		3578175	2		=			
ANR	3578194	Identifier	path_name		3578175	0					
ANR	3578195	PrimaryExpression	"""PATH"""		3578175	1					
ANR	3578196	IdentifierDeclStatement	"const char path_value [ ] = ""/bin:/usr/bin"" ;"	501:4:12154:12195	3578175	3	True				
ANR	3578197	IdentifierDecl	"path_value [ ] = ""/bin:/usr/bin"""		3578175	0					
ANR	3578198	IdentifierDeclType	const char [ ]		3578175	0					
ANR	3578199	Identifier	path_value		3578175	1					
ANR	3578200	AssignmentExpression	"path_value [ ] = ""/bin:/usr/bin"""		3578175	2		=			
ANR	3578201	Identifier	path_value		3578175	0					
ANR	3578202	PrimaryExpression	"""/bin:/usr/bin"""		3578175	1					
ANR	3578203	IdentifierDeclStatement	char * tz = getenv ( tz_name ) ;	504:4:12251:12277	3578175	4	True				
ANR	3578204	IdentifierDecl	* tz = getenv ( tz_name )		3578175	0					
ANR	3578205	IdentifierDeclType	char *		3578175	0					
ANR	3578206	Identifier	tz		3578175	1					
ANR	3578207	AssignmentExpression	* tz = getenv ( tz_name )		3578175	2		=			
ANR	3578208	Identifier	tz		3578175	0					
ANR	3578209	CallExpression	getenv ( tz_name )		3578175	1					
ANR	3578210	Callee	getenv		3578175	0					
ANR	3578211	Identifier	getenv		3578175	0					
ANR	3578212	ArgumentList	tz_name		3578175	1					
ANR	3578213	Argument	tz_name		3578175	0					
ANR	3578214	Identifier	tz_name		3578175	0					
ANR	3578215	IfStatement	if ( tz )		3578175	5					
ANR	3578216	Condition	tz	505:8:12287:12288	3578175	0	True				
ANR	3578217	Identifier	tz		3578175	0					
ANR	3578218	CompoundStatement		10:12:264:264	3578175	1					
ANR	3578219	ExpressionStatement	tz = strdup ( tz )	506:8:12301:12316	3578175	0	True				
ANR	3578220	AssignmentExpression	tz = strdup ( tz )		3578175	0		=			
ANR	3578221	Identifier	tz		3578175	0					
ANR	3578222	CallExpression	strdup ( tz )		3578175	1					
ANR	3578223	Callee	strdup		3578175	0					
ANR	3578224	Identifier	strdup		3578175	0					
ANR	3578225	ArgumentList	tz		3578175	1					
ANR	3578226	Argument	tz		3578175	0					
ANR	3578227	Identifier	tz		3578175	0					
ANR	3578228	IfStatement	if ( tz == NULL )		3578175	1					
ANR	3578229	Condition	tz == NULL	507:12:12330:12339	3578175	0	True				
ANR	3578230	EqualityExpression	tz == NULL		3578175	0		==			
ANR	3578231	Identifier	tz		3578175	0					
ANR	3578232	Identifier	NULL		3578175	1					
ANR	3578233	CompoundStatement		12:24:315:315	3578175	1					
ANR	3578234	ReturnStatement	return - 1 ;	508:12:12356:12365	3578175	0	True				
ANR	3578235	UnaryOperationExpression	- 1		3578175	0					
ANR	3578236	UnaryOperator	-		3578175	0					
ANR	3578237	PrimaryExpression	1		3578175	1					
ANR	3578238	ExpressionStatement	r = clearenv ( )	513:4:12420:12434	3578175	6	True				
ANR	3578239	AssignmentExpression	r = clearenv ( )		3578175	0		=			
ANR	3578240	Identifier	r		3578175	0					
ANR	3578241	CallExpression	clearenv ( )		3578175	1					
ANR	3578242	Callee	clearenv		3578175	0					
ANR	3578243	Identifier	clearenv		3578175	0					
ANR	3578244	ArgumentList			3578175	1					
ANR	3578245	IfStatement	if ( r != 0 )		3578175	7					
ANR	3578246	Condition	r != 0	514:8:12444:12449	3578175	0	True				
ANR	3578247	EqualityExpression	r != 0		3578175	0		!=			
ANR	3578248	Identifier	r		3578175	0					
ANR	3578249	PrimaryExpression	0		3578175	1					
ANR	3578250	CompoundStatement		19:16:425:425	3578175	1					
ANR	3578251	ExpressionStatement	free ( tz )	515:8:12462:12470	3578175	0	True				
ANR	3578252	CallExpression	free ( tz )		3578175	0					
ANR	3578253	Callee	free		3578175	0					
ANR	3578254	Identifier	free		3578175	0					
ANR	3578255	ArgumentList	tz		3578175	1					
ANR	3578256	Argument	tz		3578175	0					
ANR	3578257	Identifier	tz		3578175	0					
ANR	3578258	ReturnStatement	return - 1 ;	516:8:12480:12489	3578175	1	True				
ANR	3578259	UnaryOperationExpression	- 1		3578175	0					
ANR	3578260	UnaryOperator	-		3578175	0					
ANR	3578261	PrimaryExpression	1		3578175	1					
ANR	3578262	ExpressionStatement	"r = setenv ( path_name , path_value , 1 )"	520:4:12528:12564	3578175	8	True				
ANR	3578263	AssignmentExpression	"r = setenv ( path_name , path_value , 1 )"		3578175	0		=			
ANR	3578264	Identifier	r		3578175	0					
ANR	3578265	CallExpression	"setenv ( path_name , path_value , 1 )"		3578175	1					
ANR	3578266	Callee	setenv		3578175	0					
ANR	3578267	Identifier	setenv		3578175	0					
ANR	3578268	ArgumentList	path_name		3578175	1					
ANR	3578269	Argument	path_name		3578175	0					
ANR	3578270	Identifier	path_name		3578175	0					
ANR	3578271	Argument	path_value		3578175	1					
ANR	3578272	Identifier	path_value		3578175	0					
ANR	3578273	Argument	1		3578175	2					
ANR	3578274	PrimaryExpression	1		3578175	0					
ANR	3578275	IfStatement	if ( r == - 1 )		3578175	9					
ANR	3578276	Condition	r == - 1	521:8:12574:12580	3578175	0	True				
ANR	3578277	EqualityExpression	r == - 1		3578175	0		==			
ANR	3578278	Identifier	r		3578175	0					
ANR	3578279	UnaryOperationExpression	- 1		3578175	1					
ANR	3578280	UnaryOperator	-		3578175	0					
ANR	3578281	PrimaryExpression	1		3578175	1					
ANR	3578282	CompoundStatement		26:17:556:556	3578175	1					
ANR	3578283	ExpressionStatement	free ( tz )	522:8:12593:12601	3578175	0	True				
ANR	3578284	CallExpression	free ( tz )		3578175	0					
ANR	3578285	Callee	free		3578175	0					
ANR	3578286	Identifier	free		3578175	0					
ANR	3578287	ArgumentList	tz		3578175	1					
ANR	3578288	Argument	tz		3578175	0					
ANR	3578289	Identifier	tz		3578175	0					
ANR	3578290	ReturnStatement	return - 1 ;	523:8:12611:12620	3578175	1	True				
ANR	3578291	UnaryOperationExpression	- 1		3578175	0					
ANR	3578292	UnaryOperator	-		3578175	0					
ANR	3578293	PrimaryExpression	1		3578175	1					
ANR	3578294	IfStatement	if ( tz )		3578175	10					
ANR	3578295	Condition	tz	526:8:12637:12638	3578175	0	True				
ANR	3578296	Identifier	tz		3578175	0					
ANR	3578297	CompoundStatement		31:12:614:614	3578175	1					
ANR	3578298	ExpressionStatement	"r = setenv ( tz_name , tz , 1 )"	527:8:12651:12677	3578175	0	True				
ANR	3578299	AssignmentExpression	"r = setenv ( tz_name , tz , 1 )"		3578175	0		=			
ANR	3578300	Identifier	r		3578175	0					
ANR	3578301	CallExpression	"setenv ( tz_name , tz , 1 )"		3578175	1					
ANR	3578302	Callee	setenv		3578175	0					
ANR	3578303	Identifier	setenv		3578175	0					
ANR	3578304	ArgumentList	tz_name		3578175	1					
ANR	3578305	Argument	tz_name		3578175	0					
ANR	3578306	Identifier	tz_name		3578175	0					
ANR	3578307	Argument	tz		3578175	1					
ANR	3578308	Identifier	tz		3578175	0					
ANR	3578309	Argument	1		3578175	2					
ANR	3578310	PrimaryExpression	1		3578175	0					
ANR	3578311	IfStatement	if ( r == - 1 )		3578175	1					
ANR	3578312	Condition	r == - 1	528:12:12691:12697	3578175	0	True				
ANR	3578313	EqualityExpression	r == - 1		3578175	0		==			
ANR	3578314	Identifier	r		3578175	0					
ANR	3578315	UnaryOperationExpression	- 1		3578175	1					
ANR	3578316	UnaryOperator	-		3578175	0					
ANR	3578317	PrimaryExpression	1		3578175	1					
ANR	3578318	CompoundStatement		33:21:673:673	3578175	1					
ANR	3578319	ReturnStatement	return - 1 ;	529:12:12714:12723	3578175	0	True				
ANR	3578320	UnaryOperationExpression	- 1		3578175	0					
ANR	3578321	UnaryOperator	-		3578175	0					
ANR	3578322	PrimaryExpression	1		3578175	1					
ANR	3578323	ExpressionStatement	free ( tz )	532:8:12744:12752	3578175	2	True				
ANR	3578324	CallExpression	free ( tz )		3578175	0					
ANR	3578325	Callee	free		3578175	0					
ANR	3578326	Identifier	free		3578175	0					
ANR	3578327	ArgumentList	tz		3578175	1					
ANR	3578328	Argument	tz		3578175	0					
ANR	3578329	Identifier	tz		3578175	0					
ANR	3578330	ReturnStatement	return 0 ;	535:4:12765:12773	3578175	11	True				
ANR	3578331	PrimaryExpression	0		3578175	0					
ANR	3578332	ReturnType	int		3578175	1					
ANR	3578333	Identifier	safe_reset_environment		3578175	2					
ANR	3578334	ParameterList			3578175	3					
ANR	3578335	CFGEntryNode	ENTRY		3578175		True				
ANR	3578336	CFGExitNode	EXIT		3578175		True				
ANR	3578337	Symbol	r		3578175						
ANR	3578338	Symbol	NULL		3578175						
ANR	3578339	Symbol	tz_name		3578175						
ANR	3578340	Symbol	tz		3578175						
ANR	3578341	Symbol	setenv		3578175						
ANR	3578342	Symbol	strdup		3578175						
ANR	3578343	Symbol	clearenv		3578175						
ANR	3578344	Symbol	path_name		3578175						
ANR	3578345	Symbol	path_value		3578175						
ANR	3578346	Symbol	getenv		3578175						
ANR	3578347	Function	get_open_max	552:0:13156:13694							
ANR	3578348	FunctionDef	get_open_max ()		3578347	0					
ANR	3578349	CompoundStatement		553:0:13186:13694	3578347	0					
ANR	3578350	Statement	static	554:4:13192:13197	3578347	0	True				
ANR	3578351	IdentifierDeclStatement	int open_max = 0 ;	554:11:13199:13215	3578347	1	True				
ANR	3578352	IdentifierDecl	open_max = 0		3578347	0					
ANR	3578353	IdentifierDeclType	int		3578347	0					
ANR	3578354	Identifier	open_max		3578347	1					
ANR	3578355	AssignmentExpression	open_max = 0		3578347	2		=			
ANR	3578356	Identifier	open_max		3578347	0					
ANR	3578357	PrimaryExpression	0		3578347	1					
ANR	3578358	ExpressionStatement	open_max = OPEN_MAX	557:4:13238:13257	3578347	2	True				
ANR	3578359	AssignmentExpression	open_max = OPEN_MAX		3578347	0		=			
ANR	3578360	Identifier	open_max		3578347	0					
ANR	3578361	Identifier	OPEN_MAX		3578347	1					
ANR	3578362	IfStatement	if ( ! open_max )		3578347	3					
ANR	3578363	Condition	! open_max	560:8:13275:13283	3578347	0	True				
ANR	3578364	UnaryOperationExpression	! open_max		3578347	0					
ANR	3578365	UnaryOperator	!		3578347	0					
ANR	3578366	Identifier	open_max		3578347	1					
ANR	3578367	CompoundStatement		8:19:99:99	3578347	1					
ANR	3578368	ExpressionStatement	open_max = sysconf ( _SC_OPEN_MAX )	561:8:13296:13328	3578347	0	True				
ANR	3578369	AssignmentExpression	open_max = sysconf ( _SC_OPEN_MAX )		3578347	0		=			
ANR	3578370	Identifier	open_max		3578347	0					
ANR	3578371	CallExpression	sysconf ( _SC_OPEN_MAX )		3578347	1					
ANR	3578372	Callee	sysconf		3578347	0					
ANR	3578373	Identifier	sysconf		3578347	0					
ANR	3578374	ArgumentList	_SC_OPEN_MAX		3578347	1					
ANR	3578375	Argument	_SC_OPEN_MAX		3578347	0					
ANR	3578376	Identifier	_SC_OPEN_MAX		3578347	0					
ANR	3578377	IfStatement	if ( open_max < 0 )		3578347	1					
ANR	3578378	Condition	open_max < 0	562:12:13342:13353	3578347	0	True				
ANR	3578379	RelationalExpression	open_max < 0		3578347	0		<			
ANR	3578380	Identifier	open_max		3578347	0					
ANR	3578381	PrimaryExpression	0		3578347	1					
ANR	3578382	CompoundStatement		12:12:215:254	3578347	1					
ANR	3578383	IdentifierDeclStatement	struct rlimit rlim ;	563:12:13370:13388	3578347	0	True				
ANR	3578384	IdentifierDecl	rlim		3578347	0					
ANR	3578385	IdentifierDeclType	struct rlimit		3578347	0					
ANR	3578386	Identifier	rlim		3578347	1					
ANR	3578387	IdentifierDeclStatement	"int r = getrlimit ( RLIMIT_NOFILE , & rlim ) ;"	564:12:13402:13441	3578347	1	True				
ANR	3578388	IdentifierDecl	"r = getrlimit ( RLIMIT_NOFILE , & rlim )"		3578347	0					
ANR	3578389	IdentifierDeclType	int		3578347	0					
ANR	3578390	Identifier	r		3578347	1					
ANR	3578391	AssignmentExpression	"r = getrlimit ( RLIMIT_NOFILE , & rlim )"		3578347	2		=			
ANR	3578392	Identifier	r		3578347	0					
ANR	3578393	CallExpression	"getrlimit ( RLIMIT_NOFILE , & rlim )"		3578347	1					
ANR	3578394	Callee	getrlimit		3578347	0					
ANR	3578395	Identifier	getrlimit		3578347	0					
ANR	3578396	ArgumentList	RLIMIT_NOFILE		3578347	1					
ANR	3578397	Argument	RLIMIT_NOFILE		3578347	0					
ANR	3578398	Identifier	RLIMIT_NOFILE		3578347	0					
ANR	3578399	Argument	& rlim		3578347	1					
ANR	3578400	UnaryOperationExpression	& rlim		3578347	0					
ANR	3578401	UnaryOperator	&		3578347	0					
ANR	3578402	Identifier	rlim		3578347	1					
ANR	3578403	IfStatement	if ( r == 0 && rlim . rlim_max != RLIM_INFINITY )		3578347	2					
ANR	3578404	Condition	r == 0 && rlim . rlim_max != RLIM_INFINITY	565:16:13459:13498	3578347	0	True				
ANR	3578405	AndExpression	r == 0 && rlim . rlim_max != RLIM_INFINITY		3578347	0		&&			
ANR	3578406	EqualityExpression	r == 0		3578347	0		==			
ANR	3578407	Identifier	r		3578347	0					
ANR	3578408	PrimaryExpression	0		3578347	1					
ANR	3578409	EqualityExpression	rlim . rlim_max != RLIM_INFINITY		3578347	1		!=			
ANR	3578410	MemberAccess	rlim . rlim_max		3578347	0					
ANR	3578411	Identifier	rlim		3578347	0					
ANR	3578412	Identifier	rlim_max		3578347	1					
ANR	3578413	Identifier	RLIM_INFINITY		3578347	1					
ANR	3578414	CompoundStatement		13:58:314:314	3578347	1					
ANR	3578415	ExpressionStatement	open_max = rlim . rlim_max	566:16:13519:13543	3578347	0	True				
ANR	3578416	AssignmentExpression	open_max = rlim . rlim_max		3578347	0		=			
ANR	3578417	Identifier	open_max		3578347	0					
ANR	3578418	MemberAccess	rlim . rlim_max		3578347	1					
ANR	3578419	Identifier	rlim		3578347	0					
ANR	3578420	Identifier	rlim_max		3578347	1					
ANR	3578421	ElseStatement	else		3578347	0					
ANR	3578422	CompoundStatement		15:19:377:377	3578347	0					
ANR	3578423	ExpressionStatement	open_max = - 1	569:16:13627:13640	3578347	0	True				
ANR	3578424	AssignmentExpression	open_max = - 1		3578347	0		=			
ANR	3578425	Identifier	open_max		3578347	0					
ANR	3578426	UnaryOperationExpression	- 1		3578347	1					
ANR	3578427	UnaryOperator	-		3578347	0					
ANR	3578428	PrimaryExpression	1		3578347	1					
ANR	3578429	ReturnStatement	return open_max ;	574:4:13677:13692	3578347	4	True				
ANR	3578430	Identifier	open_max		3578347	0					
ANR	3578431	ReturnType	static int		3578347	1					
ANR	3578432	Identifier	get_open_max		3578347	2					
ANR	3578433	ParameterList			3578347	3					
ANR	3578434	CFGEntryNode	ENTRY		3578347		True				
ANR	3578435	CFGExitNode	EXIT		3578347		True				
ANR	3578436	Symbol	getrlimit		3578347						
ANR	3578437	Symbol	r		3578347						
ANR	3578438	Symbol	& rlim		3578347						
ANR	3578439	Symbol	rlim . rlim_max		3578347						
ANR	3578440	Symbol	RLIM_INFINITY		3578347						
ANR	3578441	Symbol	OPEN_MAX		3578347						
ANR	3578442	Symbol	_SC_OPEN_MAX		3578347						
ANR	3578443	Symbol	sysconf		3578347						
ANR	3578444	Symbol	rlim		3578347						
ANR	3578445	Symbol	RLIMIT_NOFILE		3578347						
ANR	3578446	Symbol	open_max		3578347						
ANR	3578447	Function	safe_close_fds_between	588:0:13977:14274							
ANR	3578448	FunctionDef	"safe_close_fds_between (int min_fd , int max_fd)"		3578447	0					
ANR	3578449	CompoundStatement		589:0:14028:14274	3578447	0					
ANR	3578450	IdentifierDeclStatement	int fd ;	590:4:14034:14040	3578447	0	True				
ANR	3578451	IdentifierDecl	fd		3578447	0					
ANR	3578452	IdentifierDeclType	int		3578447	0					
ANR	3578453	Identifier	fd		3578447	1					
ANR	3578454	ForStatement	for ( fd = min_fd ; fd < max_fd ; ++ fd )		3578447	1					
ANR	3578455	ForInit	fd = min_fd ;	592:9:14052:14063	3578447	0	True				
ANR	3578456	AssignmentExpression	fd = min_fd		3578447	0		=			
ANR	3578457	Identifier	fd		3578447	0					
ANR	3578458	Identifier	min_fd		3578447	1					
ANR	3578459	Condition	fd < max_fd	592:22:14065:14075	3578447	1	True				
ANR	3578460	RelationalExpression	fd < max_fd		3578447	0		<			
ANR	3578461	Identifier	fd		3578447	0					
ANR	3578462	Identifier	max_fd		3578447	1					
ANR	3578463	UnaryExpression	++ fd	592:35:14078:14081	3578447	2	True				
ANR	3578464	IncDec	++		3578447	0					
ANR	3578465	Identifier	fd		3578447	1					
ANR	3578466	CompoundStatement		5:8:65:82	3578447	3					
ANR	3578467	IdentifierDeclStatement	int r = close ( fd ) ;	593:8:14094:14111	3578447	0	True				
ANR	3578468	IdentifierDecl	r = close ( fd )		3578447	0					
ANR	3578469	IdentifierDeclType	int		3578447	0					
ANR	3578470	Identifier	r		3578447	1					
ANR	3578471	AssignmentExpression	r = close ( fd )		3578447	2		=			
ANR	3578472	Identifier	r		3578447	0					
ANR	3578473	CallExpression	close ( fd )		3578447	1					
ANR	3578474	Callee	close		3578447	0					
ANR	3578475	Identifier	close		3578447	0					
ANR	3578476	ArgumentList	fd		3578447	1					
ANR	3578477	Argument	fd		3578447	0					
ANR	3578478	Identifier	fd		3578447	0					
ANR	3578479	IfStatement	if ( r == - 1 && errno != EBADF )		3578447	1					
ANR	3578480	Condition	r == - 1 && errno != EBADF	595:12:14192:14216	3578447	0	True				
ANR	3578481	AndExpression	r == - 1 && errno != EBADF		3578447	0		&&			
ANR	3578482	EqualityExpression	r == - 1		3578447	0		==			
ANR	3578483	Identifier	r		3578447	0					
ANR	3578484	UnaryOperationExpression	- 1		3578447	1					
ANR	3578485	UnaryOperator	-		3578447	0					
ANR	3578486	PrimaryExpression	1		3578447	1					
ANR	3578487	EqualityExpression	errno != EBADF		3578447	1		!=			
ANR	3578488	Identifier	errno		3578447	0					
ANR	3578489	Identifier	EBADF		3578447	1					
ANR	3578490	CompoundStatement		7:39:190:190	3578447	1					
ANR	3578491	ReturnStatement	return r ;	596:12:14233:14241	3578447	0	True				
ANR	3578492	Identifier	r		3578447	0					
ANR	3578493	ReturnStatement	return 0 ;	600:4:14264:14272	3578447	2	True				
ANR	3578494	PrimaryExpression	0		3578447	0					
ANR	3578495	ReturnType	int		3578447	1					
ANR	3578496	Identifier	safe_close_fds_between		3578447	2					
ANR	3578497	ParameterList	"int min_fd , int max_fd"		3578447	3					
ANR	3578498	Parameter	int min_fd	588:27:14004:14013	3578447	0	True				
ANR	3578499	ParameterType	int		3578447	0					
ANR	3578500	Identifier	min_fd		3578447	1					
ANR	3578501	Parameter	int max_fd	588:39:14016:14025	3578447	1	True				
ANR	3578502	ParameterType	int		3578447	0					
ANR	3578503	Identifier	max_fd		3578447	1					
ANR	3578504	CFGEntryNode	ENTRY		3578447		True				
ANR	3578505	CFGExitNode	EXIT		3578447		True				
ANR	3578506	Symbol	min_fd		3578447						
ANR	3578507	Symbol	r		3578447						
ANR	3578508	Symbol	errno		3578447						
ANR	3578509	Symbol	max_fd		3578447						
ANR	3578510	Symbol	close		3578447						
ANR	3578511	Symbol	EBADF		3578447						
ANR	3578512	Symbol	fd		3578447						
ANR	3578513	Function	safe_close_fds_starting_at	612:0:14483:14717							
ANR	3578514	FunctionDef	safe_close_fds_starting_at (int min_fd)		3578513	0					
ANR	3578515	CompoundStatement		613:0:14526:14717	3578513	0					
ANR	3578516	IdentifierDeclStatement	int open_max = get_open_max ( ) ;	614:4:14532:14561	3578513	0	True				
ANR	3578517	IdentifierDecl	open_max = get_open_max ( )		3578513	0					
ANR	3578518	IdentifierDeclType	int		3578513	0					
ANR	3578519	Identifier	open_max		3578513	1					
ANR	3578520	AssignmentExpression	open_max = get_open_max ( )		3578513	2		=			
ANR	3578521	Identifier	open_max		3578513	0					
ANR	3578522	CallExpression	get_open_max ( )		3578513	1					
ANR	3578523	Callee	get_open_max		3578513	0					
ANR	3578524	Identifier	get_open_max		3578513	0					
ANR	3578525	ArgumentList			3578513	1					
ANR	3578526	IfStatement	if ( open_max == - 1 )		3578513	1					
ANR	3578527	Condition	open_max == - 1	615:8:14571:14584	3578513	0	True				
ANR	3578528	EqualityExpression	open_max == - 1		3578513	0		==			
ANR	3578529	Identifier	open_max		3578513	0					
ANR	3578530	UnaryOperationExpression	- 1		3578513	1					
ANR	3578531	UnaryOperator	-		3578513	0					
ANR	3578532	PrimaryExpression	1		3578513	1					
ANR	3578533	CompoundStatement		3:24:60:60	3578513	1					
ANR	3578534	ReturnStatement	return - 1 ;	617:8:14642:14651	3578513	0	True				
ANR	3578535	UnaryOperationExpression	- 1		3578513	0					
ANR	3578536	UnaryOperator	-		3578513	0					
ANR	3578537	PrimaryExpression	1		3578513	1					
ANR	3578538	ReturnStatement	"return safe_close_fds_between ( min_fd , open_max - 1 ) ;"	620:4:14664:14715	3578513	2	True				
ANR	3578539	CallExpression	"safe_close_fds_between ( min_fd , open_max - 1 )"		3578513	0					
ANR	3578540	Callee	safe_close_fds_between		3578513	0					
ANR	3578541	Identifier	safe_close_fds_between		3578513	0					
ANR	3578542	ArgumentList	min_fd		3578513	1					
ANR	3578543	Argument	min_fd		3578513	0					
ANR	3578544	Identifier	min_fd		3578513	0					
ANR	3578545	Argument	open_max - 1		3578513	1					
ANR	3578546	AdditiveExpression	open_max - 1		3578513	0		-			
ANR	3578547	Identifier	open_max		3578513	0					
ANR	3578548	PrimaryExpression	1		3578513	1					
ANR	3578549	ReturnType	int		3578513	1					
ANR	3578550	Identifier	safe_close_fds_starting_at		3578513	2					
ANR	3578551	ParameterList	int min_fd		3578513	3					
ANR	3578552	Parameter	int min_fd	612:31:14514:14523	3578513	0	True				
ANR	3578553	ParameterType	int		3578513	0					
ANR	3578554	Identifier	min_fd		3578513	1					
ANR	3578555	CFGEntryNode	ENTRY		3578513		True				
ANR	3578556	CFGExitNode	EXIT		3578513		True				
ANR	3578557	Symbol	min_fd		3578513						
ANR	3578558	Symbol	get_open_max		3578513						
ANR	3578559	Symbol	safe_close_fds_between		3578513						
ANR	3578560	Symbol	open_max		3578513						
ANR	3578561	Function	safe_close_fds_except	632:0:14917:15416							
ANR	3578562	FunctionDef	safe_close_fds_except (safe_id_range_list * ids)		3578561	0					
ANR	3578563	CompoundStatement		633:0:14968:15416	3578561	0					
ANR	3578564	IdentifierDeclStatement	int fd ;	634:4:14974:14980	3578561	0	True				
ANR	3578565	IdentifierDecl	fd		3578561	0					
ANR	3578566	IdentifierDeclType	int		3578561	0					
ANR	3578567	Identifier	fd		3578561	1					
ANR	3578568	IdentifierDeclStatement	int open_max = get_open_max ( ) ;	635:4:14986:15015	3578561	1	True				
ANR	3578569	IdentifierDecl	open_max = get_open_max ( )		3578561	0					
ANR	3578570	IdentifierDeclType	int		3578561	0					
ANR	3578571	Identifier	open_max		3578561	1					
ANR	3578572	AssignmentExpression	open_max = get_open_max ( )		3578561	2		=			
ANR	3578573	Identifier	open_max		3578561	0					
ANR	3578574	CallExpression	get_open_max ( )		3578561	1					
ANR	3578575	Callee	get_open_max		3578561	0					
ANR	3578576	Identifier	get_open_max		3578561	0					
ANR	3578577	ArgumentList			3578561	1					
ANR	3578578	IfStatement	if ( open_max == - 1 )		3578561	2					
ANR	3578579	Condition	open_max == - 1	636:8:15025:15038	3578561	0	True				
ANR	3578580	EqualityExpression	open_max == - 1		3578561	0		==			
ANR	3578581	Identifier	open_max		3578561	0					
ANR	3578582	UnaryOperationExpression	- 1		3578561	1					
ANR	3578583	UnaryOperator	-		3578561	0					
ANR	3578584	PrimaryExpression	1		3578561	1					
ANR	3578585	CompoundStatement		4:24:72:72	3578561	1					
ANR	3578586	ReturnStatement	return - 1 ;	638:8:15096:15105	3578561	0	True				
ANR	3578587	UnaryOperationExpression	- 1		3578561	0					
ANR	3578588	UnaryOperator	-		3578561	0					
ANR	3578589	PrimaryExpression	1		3578561	1					
ANR	3578590	ForStatement	for ( fd = 0 ; fd < open_max ; ++ fd )		3578561	3					
ANR	3578591	ForInit	fd = 0 ;	641:9:15123:15129	3578561	0	True				
ANR	3578592	AssignmentExpression	fd = 0		3578561	0		=			
ANR	3578593	Identifier	fd		3578561	0					
ANR	3578594	PrimaryExpression	0		3578561	1					
ANR	3578595	Condition	fd < open_max	641:17:15131:15143	3578561	1	True				
ANR	3578596	RelationalExpression	fd < open_max		3578561	0		<			
ANR	3578597	Identifier	fd		3578561	0					
ANR	3578598	Identifier	open_max		3578561	1					
ANR	3578599	UnaryExpression	++ fd	641:32:15146:15149	3578561	2	True				
ANR	3578600	IncDec	++		3578561	0					
ANR	3578601	Identifier	fd		3578561	1					
ANR	3578602	CompoundStatement		9:38:183:183	3578561	3					
ANR	3578603	IfStatement	"if ( ! safe_is_id_in_list ( ids , fd ) )"		3578561	0					
ANR	3578604	Condition	"! safe_is_id_in_list ( ids , fd )"	642:12:15166:15193	3578561	0	True				
ANR	3578605	UnaryOperationExpression	"! safe_is_id_in_list ( ids , fd )"		3578561	0					
ANR	3578606	UnaryOperator	!		3578561	0					
ANR	3578607	CallExpression	"safe_is_id_in_list ( ids , fd )"		3578561	1					
ANR	3578608	Callee	safe_is_id_in_list		3578561	0					
ANR	3578609	Identifier	safe_is_id_in_list		3578561	0					
ANR	3578610	ArgumentList	ids		3578561	1					
ANR	3578611	Argument	ids		3578561	0					
ANR	3578612	Identifier	ids		3578561	0					
ANR	3578613	Argument	fd		3578561	1					
ANR	3578614	Identifier	fd		3578561	0					
ANR	3578615	CompoundStatement		11:12:241:258	3578561	1					
ANR	3578616	IdentifierDeclStatement	int r = close ( fd ) ;	643:12:15210:15227	3578561	0	True				
ANR	3578617	IdentifierDecl	r = close ( fd )		3578561	0					
ANR	3578618	IdentifierDeclType	int		3578561	0					
ANR	3578619	Identifier	r		3578561	1					
ANR	3578620	AssignmentExpression	r = close ( fd )		3578561	2		=			
ANR	3578621	Identifier	r		3578561	0					
ANR	3578622	CallExpression	close ( fd )		3578561	1					
ANR	3578623	Callee	close		3578561	0					
ANR	3578624	Identifier	close		3578561	0					
ANR	3578625	ArgumentList	fd		3578561	1					
ANR	3578626	Argument	fd		3578561	0					
ANR	3578627	Identifier	fd		3578561	0					
ANR	3578628	IfStatement	if ( r == - 1 && errno != EBADF )		3578561	1					
ANR	3578629	Condition	r == - 1 && errno != EBADF	645:16:15316:15340	3578561	0	True				
ANR	3578630	AndExpression	r == - 1 && errno != EBADF		3578561	0		&&			
ANR	3578631	EqualityExpression	r == - 1		3578561	0		==			
ANR	3578632	Identifier	r		3578561	0					
ANR	3578633	UnaryOperationExpression	- 1		3578561	1					
ANR	3578634	UnaryOperator	-		3578561	0					
ANR	3578635	PrimaryExpression	1		3578561	1					
ANR	3578636	EqualityExpression	errno != EBADF		3578561	1		!=			
ANR	3578637	Identifier	errno		3578561	0					
ANR	3578638	Identifier	EBADF		3578561	1					
ANR	3578639	CompoundStatement		13:43:374:374	3578561	1					
ANR	3578640	ReturnStatement	return r ;	646:16:15361:15369	3578561	0	True				
ANR	3578641	Identifier	r		3578561	0					
ANR	3578642	ReturnStatement	return 0 ;	651:4:15406:15414	3578561	4	True				
ANR	3578643	PrimaryExpression	0		3578561	0					
ANR	3578644	ReturnType	int		3578561	1					
ANR	3578645	Identifier	safe_close_fds_except		3578561	2					
ANR	3578646	ParameterList	safe_id_range_list * ids		3578561	3					
ANR	3578647	Parameter	safe_id_range_list * ids	632:26:14943:14965	3578561	0	True				
ANR	3578648	ParameterType	safe_id_range_list *		3578561	0					
ANR	3578649	Identifier	ids		3578561	1					
ANR	3578650	CFGEntryNode	ENTRY		3578561		True				
ANR	3578651	CFGExitNode	EXIT		3578561		True				
ANR	3578652	Symbol	safe_is_id_in_list		3578561						
ANR	3578653	Symbol	r		3578561						
ANR	3578654	Symbol	errno		3578561						
ANR	3578655	Symbol	ids		3578561						
ANR	3578656	Symbol	get_open_max		3578561						
ANR	3578657	Symbol	close		3578561						
ANR	3578658	Symbol	EBADF		3578561						
ANR	3578659	Symbol	fd		3578561						
ANR	3578660	Symbol	open_max		3578561						
ANR	3578661	DeclStmt									
ANR	3578662	Decl							const char	const char [ ]	DEV_NULL_FILENAME
ANR	3578663	Function	safe_open_std_file	671:0:15955:17041							
ANR	3578664	FunctionDef	"safe_open_std_file (int fd , const char * filename)"		3578663	0					
ANR	3578665	CompoundStatement		672:0:16008:17041	3578663	0					
ANR	3578666	IdentifierDeclStatement	int new_fd = - 1 ;	673:4:16014:16029	3578663	0	True				
ANR	3578667	IdentifierDecl	new_fd = - 1		3578663	0					
ANR	3578668	IdentifierDeclType	int		3578663	0					
ANR	3578669	Identifier	new_fd		3578663	1					
ANR	3578670	AssignmentExpression	new_fd = - 1		3578663	2		=			
ANR	3578671	Identifier	new_fd		3578663	0					
ANR	3578672	UnaryOperationExpression	- 1		3578663	1					
ANR	3578673	UnaryOperator	-		3578663	0					
ANR	3578674	PrimaryExpression	1		3578663	1					
ANR	3578675	IdentifierDeclStatement	const int open_mask = S_IRUSR | S_IWUSR ;	674:4:16035:16074	3578663	1	True				
ANR	3578676	IdentifierDecl	open_mask = S_IRUSR | S_IWUSR		3578663	0					
ANR	3578677	IdentifierDeclType	const int		3578663	0					
ANR	3578678	Identifier	open_mask		3578663	1					
ANR	3578679	AssignmentExpression	open_mask = S_IRUSR | S_IWUSR		3578663	2		=			
ANR	3578680	Identifier	open_mask		3578663	0					
ANR	3578681	InclusiveOrExpression	S_IRUSR | S_IWUSR		3578663	1		|			
ANR	3578682	Identifier	S_IRUSR		3578663	0					
ANR	3578683	Identifier	S_IWUSR		3578663	1					
ANR	3578684	IfStatement	if ( ! filename )		3578663	2					
ANR	3578685	Condition	! filename	676:8:16121:16129	3578663	0	True				
ANR	3578686	UnaryOperationExpression	! filename		3578663	0					
ANR	3578687	UnaryOperator	!		3578663	0					
ANR	3578688	Identifier	filename		3578663	1					
ANR	3578689	CompoundStatement		5:19:123:123	3578663	1					
ANR	3578690	ExpressionStatement	filename = DEV_NULL_FILENAME	677:8:16142:16170	3578663	0	True				
ANR	3578691	AssignmentExpression	filename = DEV_NULL_FILENAME		3578663	0		=			
ANR	3578692	Identifier	filename		3578663	0					
ANR	3578693	Identifier	DEV_NULL_FILENAME		3578663	1					
ANR	3578694	IfStatement	if ( fd < 0 || fd > 2 )		3578663	3					
ANR	3578695	Condition	fd < 0 || fd > 2	680:8:16187:16202	3578663	0	True				
ANR	3578696	OrExpression	fd < 0 || fd > 2		3578663	0		||			
ANR	3578697	RelationalExpression	fd < 0		3578663	0		<			
ANR	3578698	Identifier	fd		3578663	0					
ANR	3578699	PrimaryExpression	0		3578663	1					
ANR	3578700	RelationalExpression	fd > 2		3578663	1		>			
ANR	3578701	Identifier	fd		3578663	0					
ANR	3578702	PrimaryExpression	2		3578663	1					
ANR	3578703	CompoundStatement		9:26:196:196	3578663	1					
ANR	3578704	ExpressionStatement	errno = EINVAL	681:8:16215:16229	3578663	0	True				
ANR	3578705	AssignmentExpression	errno = EINVAL		3578663	0		=			
ANR	3578706	Identifier	errno		3578663	0					
ANR	3578707	Identifier	EINVAL		3578663	1					
ANR	3578708	ReturnStatement	return - 1 ;	682:8:16239:16248	3578663	1	True				
ANR	3578709	UnaryOperationExpression	- 1		3578663	0					
ANR	3578710	UnaryOperator	-		3578663	0					
ANR	3578711	PrimaryExpression	1		3578663	1					
ANR	3578712	ExpressionStatement	( void ) close ( fd )	685:4:16261:16277	3578663	4	True				
ANR	3578713	CastExpression	( void ) close ( fd )		3578663	0					
ANR	3578714	CastTarget	void		3578663	0					
ANR	3578715	CallExpression	close ( fd )		3578663	1					
ANR	3578716	Callee	close		3578663	0					
ANR	3578717	Identifier	close		3578663	0					
ANR	3578718	ArgumentList	fd		3578663	1					
ANR	3578719	Argument	fd		3578663	0					
ANR	3578720	Identifier	fd		3578663	0					
ANR	3578721	IfStatement	if ( fd == 0 )		3578663	5					
ANR	3578722	Condition	fd == 0	688:8:16313:16319	3578663	0	True				
ANR	3578723	EqualityExpression	fd == 0		3578663	0		==			
ANR	3578724	Identifier	fd		3578663	0					
ANR	3578725	PrimaryExpression	0		3578663	1					
ANR	3578726	CompoundStatement		17:17:313:313	3578663	1					
ANR	3578727	ExpressionStatement	"new_fd = open ( filename , O_RDONLY )"	689:8:16332:16365	3578663	0	True				
ANR	3578728	AssignmentExpression	"new_fd = open ( filename , O_RDONLY )"		3578663	0		=			
ANR	3578729	Identifier	new_fd		3578663	0					
ANR	3578730	CallExpression	"open ( filename , O_RDONLY )"		3578663	1					
ANR	3578731	Callee	open		3578663	0					
ANR	3578732	Identifier	open		3578663	0					
ANR	3578733	ArgumentList	filename		3578663	1					
ANR	3578734	Argument	filename		3578663	0					
ANR	3578735	Identifier	filename		3578663	0					
ANR	3578736	Argument	O_RDONLY		3578663	1					
ANR	3578737	Identifier	O_RDONLY		3578663	0					
ANR	3578738	ElseStatement	else		3578663	0					
ANR	3578739	IfStatement	if ( fd == 1 || fd == 2 )		3578663	0					
ANR	3578740	Condition	fd == 1 || fd == 2	690:15:16382:16399	3578663	0	True				
ANR	3578741	OrExpression	fd == 1 || fd == 2		3578663	0		||			
ANR	3578742	EqualityExpression	fd == 1		3578663	0		==			
ANR	3578743	Identifier	fd		3578663	0					
ANR	3578744	PrimaryExpression	1		3578663	1					
ANR	3578745	EqualityExpression	fd == 2		3578663	1		==			
ANR	3578746	Identifier	fd		3578663	0					
ANR	3578747	PrimaryExpression	2		3578663	1					
ANR	3578748	CompoundStatement		21:8:470:493	3578663	1					
ANR	3578749	IdentifierDeclStatement	int old_mask = umask ( 0 ) ;	692:8:16479:16502	3578663	0	True				
ANR	3578750	IdentifierDecl	old_mask = umask ( 0 )		3578663	0					
ANR	3578751	IdentifierDeclType	int		3578663	0					
ANR	3578752	Identifier	old_mask		3578663	1					
ANR	3578753	AssignmentExpression	old_mask = umask ( 0 )		3578663	2		=			
ANR	3578754	Identifier	old_mask		3578663	0					
ANR	3578755	CallExpression	umask ( 0 )		3578663	1					
ANR	3578756	Callee	umask		3578663	0					
ANR	3578757	Identifier	umask		3578663	0					
ANR	3578758	ArgumentList	0		3578663	1					
ANR	3578759	Argument	0		3578663	0					
ANR	3578760	PrimaryExpression	0		3578663	0					
ANR	3578761	ExpressionStatement	"new_fd = open ( filename , O_CREAT | O_EXCL | O_WRONLY , open_mask )"	693:8:16512:16575	3578663	1	True				
ANR	3578762	AssignmentExpression	"new_fd = open ( filename , O_CREAT | O_EXCL | O_WRONLY , open_mask )"		3578663	0		=			
ANR	3578763	Identifier	new_fd		3578663	0					
ANR	3578764	CallExpression	"open ( filename , O_CREAT | O_EXCL | O_WRONLY , open_mask )"		3578663	1					
ANR	3578765	Callee	open		3578663	0					
ANR	3578766	Identifier	open		3578663	0					
ANR	3578767	ArgumentList	filename		3578663	1					
ANR	3578768	Argument	filename		3578663	0					
ANR	3578769	Identifier	filename		3578663	0					
ANR	3578770	Argument	O_CREAT | O_EXCL | O_WRONLY		3578663	1					
ANR	3578771	InclusiveOrExpression	O_CREAT | O_EXCL | O_WRONLY		3578663	0		|			
ANR	3578772	Identifier	O_CREAT		3578663	0					
ANR	3578773	InclusiveOrExpression	O_EXCL | O_WRONLY		3578663	1		|			
ANR	3578774	Identifier	O_EXCL		3578663	0					
ANR	3578775	Identifier	O_WRONLY		3578663	1					
ANR	3578776	Argument	open_mask		3578663	2					
ANR	3578777	Identifier	open_mask		3578663	0					
ANR	3578778	ExpressionStatement	( void ) umask ( old_mask )	694:8:16585:16607	3578663	2	True				
ANR	3578779	CastExpression	( void ) umask ( old_mask )		3578663	0					
ANR	3578780	CastTarget	void		3578663	0					
ANR	3578781	CallExpression	umask ( old_mask )		3578663	1					
ANR	3578782	Callee	umask		3578663	0					
ANR	3578783	Identifier	umask		3578663	0					
ANR	3578784	ArgumentList	old_mask		3578663	1					
ANR	3578785	Argument	old_mask		3578663	0					
ANR	3578786	Identifier	old_mask		3578663	0					
ANR	3578787	IfStatement	if ( new_fd == - 1 && errno == EEXIST )		3578663	3					
ANR	3578788	Condition	new_fd == - 1 && errno == EEXIST	695:12:16621:16651	3578663	0	True				
ANR	3578789	AndExpression	new_fd == - 1 && errno == EEXIST		3578663	0		&&			
ANR	3578790	EqualityExpression	new_fd == - 1		3578663	0		==			
ANR	3578791	Identifier	new_fd		3578663	0					
ANR	3578792	UnaryOperationExpression	- 1		3578663	1					
ANR	3578793	UnaryOperator	-		3578663	0					
ANR	3578794	PrimaryExpression	1		3578663	1					
ANR	3578795	EqualityExpression	errno == EEXIST		3578663	1		==			
ANR	3578796	Identifier	errno		3578663	0					
ANR	3578797	Identifier	EEXIST		3578663	1					
ANR	3578798	CompoundStatement		24:45:645:645	3578663	1					
ANR	3578799	ExpressionStatement	"new_fd = open ( filename , O_WRONLY )"	696:12:16668:16701	3578663	0	True				
ANR	3578800	AssignmentExpression	"new_fd = open ( filename , O_WRONLY )"		3578663	0		=			
ANR	3578801	Identifier	new_fd		3578663	0					
ANR	3578802	CallExpression	"open ( filename , O_WRONLY )"		3578663	1					
ANR	3578803	Callee	open		3578663	0					
ANR	3578804	Identifier	open		3578663	0					
ANR	3578805	ArgumentList	filename		3578663	1					
ANR	3578806	Argument	filename		3578663	0					
ANR	3578807	Identifier	filename		3578663	0					
ANR	3578808	Argument	O_WRONLY		3578663	1					
ANR	3578809	Identifier	O_WRONLY		3578663	0					
ANR	3578810	IfStatement	if ( new_fd == - 1 )		3578663	6					
ANR	3578811	Condition	new_fd == - 1	700:8:16728:16739	3578663	0	True				
ANR	3578812	EqualityExpression	new_fd == - 1		3578663	0		==			
ANR	3578813	Identifier	new_fd		3578663	0					
ANR	3578814	UnaryOperationExpression	- 1		3578663	1					
ANR	3578815	UnaryOperator	-		3578663	0					
ANR	3578816	PrimaryExpression	1		3578663	1					
ANR	3578817	CompoundStatement		29:22:733:733	3578663	1					
ANR	3578818	ReturnStatement	return - 1 ;	701:8:16752:16761	3578663	0	True				
ANR	3578819	UnaryOperationExpression	- 1		3578663	0					
ANR	3578820	UnaryOperator	-		3578663	0					
ANR	3578821	PrimaryExpression	1		3578663	1					
ANR	3578822	IfStatement	if ( new_fd != fd )		3578663	7					
ANR	3578823	Condition	new_fd != fd	705:8:16849:16860	3578663	0	True				
ANR	3578824	EqualityExpression	new_fd != fd		3578663	0		!=			
ANR	3578825	Identifier	new_fd		3578663	0					
ANR	3578826	Identifier	fd		3578663	1					
ANR	3578827	CompoundStatement		35:8:864:888	3578663	1					
ANR	3578828	IdentifierDeclStatement	"int r = dup2 ( new_fd , fd ) ;"	706:8:16873:16897	3578663	0	True				
ANR	3578829	IdentifierDecl	"r = dup2 ( new_fd , fd )"		3578663	0					
ANR	3578830	IdentifierDeclType	int		3578663	0					
ANR	3578831	Identifier	r		3578663	1					
ANR	3578832	AssignmentExpression	"r = dup2 ( new_fd , fd )"		3578663	2		=			
ANR	3578833	Identifier	r		3578663	0					
ANR	3578834	CallExpression	"dup2 ( new_fd , fd )"		3578663	1					
ANR	3578835	Callee	dup2		3578663	0					
ANR	3578836	Identifier	dup2		3578663	0					
ANR	3578837	ArgumentList	new_fd		3578663	1					
ANR	3578838	Argument	new_fd		3578663	0					
ANR	3578839	Identifier	new_fd		3578663	0					
ANR	3578840	Argument	fd		3578663	1					
ANR	3578841	Identifier	fd		3578663	0					
ANR	3578842	IfStatement	if ( r == - 1 )		3578663	1					
ANR	3578843	Condition	r == - 1	707:12:16911:16917	3578663	0	True				
ANR	3578844	EqualityExpression	r == - 1		3578663	0		==			
ANR	3578845	Identifier	r		3578663	0					
ANR	3578846	UnaryOperationExpression	- 1		3578663	1					
ANR	3578847	UnaryOperator	-		3578663	0					
ANR	3578848	PrimaryExpression	1		3578663	1					
ANR	3578849	CompoundStatement		36:21:911:911	3578663	1					
ANR	3578850	ExpressionStatement	( void ) close ( new_fd )	708:12:16934:16954	3578663	0	True				
ANR	3578851	CastExpression	( void ) close ( new_fd )		3578663	0					
ANR	3578852	CastTarget	void		3578663	0					
ANR	3578853	CallExpression	close ( new_fd )		3578663	1					
ANR	3578854	Callee	close		3578663	0					
ANR	3578855	Identifier	close		3578663	0					
ANR	3578856	ArgumentList	new_fd		3578663	1					
ANR	3578857	Argument	new_fd		3578663	0					
ANR	3578858	Identifier	new_fd		3578663	0					
ANR	3578859	ReturnStatement	return - 1 ;	709:12:16968:16977	3578663	1	True				
ANR	3578860	UnaryOperationExpression	- 1		3578663	0					
ANR	3578861	UnaryOperator	-		3578663	0					
ANR	3578862	PrimaryExpression	1		3578663	1					
ANR	3578863	ExpressionStatement	( void ) close ( new_fd )	712:8:16998:17018	3578663	2	True				
ANR	3578864	CastExpression	( void ) close ( new_fd )		3578663	0					
ANR	3578865	CastTarget	void		3578663	0					
ANR	3578866	CallExpression	close ( new_fd )		3578663	1					
ANR	3578867	Callee	close		3578663	0					
ANR	3578868	Identifier	close		3578663	0					
ANR	3578869	ArgumentList	new_fd		3578663	1					
ANR	3578870	Argument	new_fd		3578663	0					
ANR	3578871	Identifier	new_fd		3578663	0					
ANR	3578872	ReturnStatement	return 0 ;	715:4:17031:17039	3578663	8	True				
ANR	3578873	PrimaryExpression	0		3578663	0					
ANR	3578874	ReturnType	int		3578663	1					
ANR	3578875	Identifier	safe_open_std_file		3578663	2					
ANR	3578876	ParameterList	"int fd , const char * filename"		3578663	3					
ANR	3578877	Parameter	int fd	671:23:15978:15983	3578663	0	True				
ANR	3578878	ParameterType	int		3578663	0					
ANR	3578879	Identifier	fd		3578663	1					
ANR	3578880	Parameter	const char * filename	671:31:15986:16005	3578663	1	True				
ANR	3578881	ParameterType	const char *		3578663	0					
ANR	3578882	Identifier	filename		3578663	1					
ANR	3578883	CFGEntryNode	ENTRY		3578663		True				
ANR	3578884	CFGExitNode	EXIT		3578663		True				
ANR	3578885	Symbol	EEXIST		3578663						
ANR	3578886	Symbol	errno		3578663						
ANR	3578887	Symbol	umask		3578663						
ANR	3578888	Symbol	new_fd		3578663						
ANR	3578889	Symbol	open_mask		3578663						
ANR	3578890	Symbol	O_CREAT		3578663						
ANR	3578891	Symbol	O_EXCL		3578663						
ANR	3578892	Symbol	EINVAL		3578663						
ANR	3578893	Symbol	old_mask		3578663						
ANR	3578894	Symbol	r		3578663						
ANR	3578895	Symbol	filename		3578663						
ANR	3578896	Symbol	S_IRUSR		3578663						
ANR	3578897	Symbol	O_RDONLY		3578663						
ANR	3578898	Symbol	S_IWUSR		3578663						
ANR	3578899	Symbol	DEV_NULL_FILENAME		3578663						
ANR	3578900	Symbol	O_WRONLY		3578663						
ANR	3578901	Symbol	dup2		3578663						
ANR	3578902	Symbol	fd		3578663						
ANR	3578903	Symbol	open		3578663						
ANR	3578904	Function	safe_open_std_files_to_null	726:0:17204:17402							
ANR	3578905	FunctionDef	safe_open_std_files_to_null ()		3578904	0					
ANR	3578906	CompoundStatement		727:0:17238:17402	3578904	0					
ANR	3578907	IdentifierDeclStatement	int i ;	728:4:17244:17249	3578904	0	True				
ANR	3578908	IdentifierDecl	i		3578904	0					
ANR	3578909	IdentifierDeclType	int		3578904	0					
ANR	3578910	Identifier	i		3578904	1					
ANR	3578911	ForStatement	for ( i = 0 ; i <= 2 ; ++ i )		3578904	1					
ANR	3578912	ForInit	i = 0 ;	730:9:17261:17266	3578904	0	True				
ANR	3578913	AssignmentExpression	i = 0		3578904	0		=			
ANR	3578914	Identifier	i		3578904	0					
ANR	3578915	PrimaryExpression	0		3578904	1					
ANR	3578916	Condition	i <= 2	730:16:17268:17273	3578904	1	True				
ANR	3578917	RelationalExpression	i <= 2		3578904	0		<=			
ANR	3578918	Identifier	i		3578904	0					
ANR	3578919	PrimaryExpression	2		3578904	1					
ANR	3578920	UnaryExpression	++ i	730:24:17276:17278	3578904	2	True				
ANR	3578921	IncDec	++		3578904	0					
ANR	3578922	Identifier	i		3578904	1					
ANR	3578923	CompoundStatement		5:8:52:84	3578904	3					
ANR	3578924	IdentifierDeclStatement	"int r = safe_open_std_file ( i , 0 ) ;"	731:8:17291:17323	3578904	0	True				
ANR	3578925	IdentifierDecl	"r = safe_open_std_file ( i , 0 )"		3578904	0					
ANR	3578926	IdentifierDeclType	int		3578904	0					
ANR	3578927	Identifier	r		3578904	1					
ANR	3578928	AssignmentExpression	"r = safe_open_std_file ( i , 0 )"		3578904	2		=			
ANR	3578929	Identifier	r		3578904	0					
ANR	3578930	CallExpression	"safe_open_std_file ( i , 0 )"		3578904	1					
ANR	3578931	Callee	safe_open_std_file		3578904	0					
ANR	3578932	Identifier	safe_open_std_file		3578904	0					
ANR	3578933	ArgumentList	i		3578904	1					
ANR	3578934	Argument	i		3578904	0					
ANR	3578935	Identifier	i		3578904	0					
ANR	3578936	Argument	0		3578904	1					
ANR	3578937	PrimaryExpression	0		3578904	0					
ANR	3578938	IfStatement	if ( r == - 1 )		3578904	1					
ANR	3578939	Condition	r == - 1	732:12:17337:17343	3578904	0	True				
ANR	3578940	EqualityExpression	r == - 1		3578904	0		==			
ANR	3578941	Identifier	r		3578904	0					
ANR	3578942	UnaryOperationExpression	- 1		3578904	1					
ANR	3578943	UnaryOperator	-		3578904	0					
ANR	3578944	PrimaryExpression	1		3578904	1					
ANR	3578945	CompoundStatement		6:21:107:107	3578904	1					
ANR	3578946	ReturnStatement	return - 1 ;	733:12:17360:17369	3578904	0	True				
ANR	3578947	UnaryOperationExpression	- 1		3578904	0					
ANR	3578948	UnaryOperator	-		3578904	0					
ANR	3578949	PrimaryExpression	1		3578904	1					
ANR	3578950	ReturnStatement	return 0 ;	737:4:17392:17400	3578904	2	True				
ANR	3578951	PrimaryExpression	0		3578904	0					
ANR	3578952	ReturnType	int		3578904	1					
ANR	3578953	Identifier	safe_open_std_files_to_null		3578904	2					
ANR	3578954	ParameterList			3578904	3					
ANR	3578955	CFGEntryNode	ENTRY		3578904		True				
ANR	3578956	CFGExitNode	EXIT		3578904		True				
ANR	3578957	Symbol	r		3578904						
ANR	3578958	Symbol	i		3578904						
ANR	3578959	Symbol	safe_open_std_file		3578904						
ANR	3578960	Function	safe_checks_and_set_gids	781:0:18770:20814							
ANR	3578961	FunctionDef	"safe_checks_and_set_gids (uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , gid_t * primary_gid)"		3578960	0					
ANR	3578962	CompoundStatement		787:0:19020:20814	3578960	0					
ANR	3578963	IdentifierDeclStatement	struct passwd * pw ;	788:4:19026:19043	3578960	0	True				
ANR	3578964	IdentifierDecl	* pw		3578960	0					
ANR	3578965	IdentifierDeclType	struct passwd *		3578960	0					
ANR	3578966	Identifier	pw		3578960	1					
ANR	3578967	IdentifierDeclStatement	gid_t gid ;	789:4:19049:19058	3578960	1	True				
ANR	3578968	IdentifierDecl	gid		3578960	0					
ANR	3578969	IdentifierDeclType	gid_t		3578960	0					
ANR	3578970	Identifier	gid		3578960	1					
ANR	3578971	IdentifierDeclStatement	int num_groups ;	790:4:19064:19078	3578960	2	True				
ANR	3578972	IdentifierDecl	num_groups		3578960	0					
ANR	3578973	IdentifierDeclType	int		3578960	0					
ANR	3578974	Identifier	num_groups		3578960	1					
ANR	3578975	IdentifierDeclStatement	int total_groups ;	791:4:19084:19100	3578960	3	True				
ANR	3578976	IdentifierDecl	total_groups		3578960	0					
ANR	3578977	IdentifierDeclType	int		3578960	0					
ANR	3578978	Identifier	total_groups		3578960	1					
ANR	3578979	IdentifierDeclStatement	gid_t * gids ;	792:4:19106:19117	3578960	4	True				
ANR	3578980	IdentifierDecl	* gids		3578960	0					
ANR	3578981	IdentifierDeclType	gid_t *		3578960	0					
ANR	3578982	Identifier	gids		3578960	1					
ANR	3578983	IdentifierDeclStatement	int r ;	793:4:19123:19128	3578960	5	True				
ANR	3578984	IdentifierDecl	r		3578960	0					
ANR	3578985	IdentifierDeclType	int		3578960	0					
ANR	3578986	Identifier	r		3578960	1					
ANR	3578987	IdentifierDeclStatement	int i ;	794:4:19134:19139	3578960	6	True				
ANR	3578988	IdentifierDecl	i		3578960	0					
ANR	3578989	IdentifierDeclType	int		3578960	0					
ANR	3578990	Identifier	i		3578960	1					
ANR	3578991	IfStatement	"if ( ! safe_is_id_in_list ( safe_uids , uid ) )"		3578960	7					
ANR	3578992	Condition	"! safe_is_id_in_list ( safe_uids , uid )"	797:8:19186:19220	3578960	0	True				
ANR	3578993	UnaryOperationExpression	"! safe_is_id_in_list ( safe_uids , uid )"		3578960	0					
ANR	3578994	UnaryOperator	!		3578960	0					
ANR	3578995	CallExpression	"safe_is_id_in_list ( safe_uids , uid )"		3578960	1					
ANR	3578996	Callee	safe_is_id_in_list		3578960	0					
ANR	3578997	Identifier	safe_is_id_in_list		3578960	0					
ANR	3578998	ArgumentList	safe_uids		3578960	1					
ANR	3578999	Argument	safe_uids		3578960	0					
ANR	3579000	Identifier	safe_uids		3578960	0					
ANR	3579001	Argument	uid		3578960	1					
ANR	3579002	Identifier	uid		3578960	0					
ANR	3579003	CompoundStatement		11:45:202:202	3578960	1					
ANR	3579004	ReturnStatement	return - 1 ;	798:8:19233:19242	3578960	0	True				
ANR	3579005	UnaryOperationExpression	- 1		3578960	0					
ANR	3579006	UnaryOperator	-		3578960	0					
ANR	3579007	PrimaryExpression	1		3578960	1					
ANR	3579008	IfStatement	"if ( ( tracking_gid != 0 ) && ! safe_is_id_in_list ( safe_gids , tracking_gid ) )"		3578960	8					
ANR	3579009	Condition	"( tracking_gid != 0 ) && ! safe_is_id_in_list ( safe_gids , tracking_gid )"	802:8:19307:19373	3578960	0	True				
ANR	3579010	AndExpression	"( tracking_gid != 0 ) && ! safe_is_id_in_list ( safe_gids , tracking_gid )"		3578960	0		&&			
ANR	3579011	EqualityExpression	tracking_gid != 0		3578960	0		!=			
ANR	3579012	Identifier	tracking_gid		3578960	0					
ANR	3579013	PrimaryExpression	0		3578960	1					
ANR	3579014	UnaryOperationExpression	"! safe_is_id_in_list ( safe_gids , tracking_gid )"		3578960	1					
ANR	3579015	UnaryOperator	!		3578960	0					
ANR	3579016	CallExpression	"safe_is_id_in_list ( safe_gids , tracking_gid )"		3578960	1					
ANR	3579017	Callee	safe_is_id_in_list		3578960	0					
ANR	3579018	Identifier	safe_is_id_in_list		3578960	0					
ANR	3579019	ArgumentList	safe_gids		3578960	1					
ANR	3579020	Argument	safe_gids		3578960	0					
ANR	3579021	Identifier	safe_gids		3578960	0					
ANR	3579022	Argument	tracking_gid		3578960	1					
ANR	3579023	Identifier	tracking_gid		3578960	0					
ANR	3579024	CompoundStatement		16:77:355:355	3578960	1					
ANR	3579025	ReturnStatement	return - 13 ;	803:2:19380:19390	3578960	0	True				
ANR	3579026	UnaryOperationExpression	- 13		3578960	0					
ANR	3579027	UnaryOperator	-		3578960	0					
ANR	3579028	PrimaryExpression	13		3578960	1					
ANR	3579029	ExpressionStatement	pw = getpwuid ( uid )	807:4:19444:19462	3578960	9	True				
ANR	3579030	AssignmentExpression	pw = getpwuid ( uid )		3578960	0		=			
ANR	3579031	Identifier	pw		3578960	0					
ANR	3579032	CallExpression	getpwuid ( uid )		3578960	1					
ANR	3579033	Callee	getpwuid		3578960	0					
ANR	3579034	Identifier	getpwuid		3578960	0					
ANR	3579035	ArgumentList	uid		3578960	1					
ANR	3579036	Argument	uid		3578960	0					
ANR	3579037	Identifier	uid		3578960	0					
ANR	3579038	IfStatement	if ( pw == NULL )		3578960	10					
ANR	3579039	Condition	pw == NULL	808:8:19472:19481	3578960	0	True				
ANR	3579040	EqualityExpression	pw == NULL		3578960	0		==			
ANR	3579041	Identifier	pw		3578960	0					
ANR	3579042	Identifier	NULL		3578960	1					
ANR	3579043	CompoundStatement		22:20:463:463	3578960	1					
ANR	3579044	ReturnStatement	return - 2 ;	809:8:19494:19503	3578960	0	True				
ANR	3579045	UnaryOperationExpression	- 2		3578960	0					
ANR	3579046	UnaryOperator	-		3578960	0					
ANR	3579047	PrimaryExpression	2		3578960	1					
ANR	3579048	ExpressionStatement	gid = pw -> pw_gid	813:4:19544:19560	3578960	11	True				
ANR	3579049	AssignmentExpression	gid = pw -> pw_gid		3578960	0		=			
ANR	3579050	Identifier	gid		3578960	0					
ANR	3579051	PtrMemberAccess	pw -> pw_gid		3578960	1					
ANR	3579052	Identifier	pw		3578960	0					
ANR	3579053	Identifier	pw_gid		3578960	1					
ANR	3579054	IfStatement	"if ( ! safe_is_id_in_list ( safe_gids , gid ) )"		3578960	12					
ANR	3579055	Condition	"! safe_is_id_in_list ( safe_gids , gid )"	816:8:19617:19651	3578960	0	True				
ANR	3579056	UnaryOperationExpression	"! safe_is_id_in_list ( safe_gids , gid )"		3578960	0					
ANR	3579057	UnaryOperator	!		3578960	0					
ANR	3579058	CallExpression	"safe_is_id_in_list ( safe_gids , gid )"		3578960	1					
ANR	3579059	Callee	safe_is_id_in_list		3578960	0					
ANR	3579060	Identifier	safe_is_id_in_list		3578960	0					
ANR	3579061	ArgumentList	safe_gids		3578960	1					
ANR	3579062	Argument	safe_gids		3578960	0					
ANR	3579063	Identifier	safe_gids		3578960	0					
ANR	3579064	Argument	gid		3578960	1					
ANR	3579065	Identifier	gid		3578960	0					
ANR	3579066	CompoundStatement		30:45:633:633	3578960	1					
ANR	3579067	ReturnStatement	return - 3 ;	817:8:19664:19673	3578960	0	True				
ANR	3579068	UnaryOperationExpression	- 3		3578960	0					
ANR	3579069	UnaryOperator	-		3578960	0					
ANR	3579070	PrimaryExpression	3		3578960	1					
ANR	3579071	ExpressionStatement	"r = initgroups ( pw -> pw_name , gid )"	821:4:19721:19753	3578960	13	True				
ANR	3579072	AssignmentExpression	"r = initgroups ( pw -> pw_name , gid )"		3578960	0		=			
ANR	3579073	Identifier	r		3578960	0					
ANR	3579074	CallExpression	"initgroups ( pw -> pw_name , gid )"		3578960	1					
ANR	3579075	Callee	initgroups		3578960	0					
ANR	3579076	Identifier	initgroups		3578960	0					
ANR	3579077	ArgumentList	pw -> pw_name		3578960	1					
ANR	3579078	Argument	pw -> pw_name		3578960	0					
ANR	3579079	PtrMemberAccess	pw -> pw_name		3578960	0					
ANR	3579080	Identifier	pw		3578960	0					
ANR	3579081	Identifier	pw_name		3578960	1					
ANR	3579082	Argument	gid		3578960	1					
ANR	3579083	Identifier	gid		3578960	0					
ANR	3579084	IfStatement	if ( r == - 1 )		3578960	14					
ANR	3579085	Condition	r == - 1	822:8:19763:19769	3578960	0	True				
ANR	3579086	EqualityExpression	r == - 1		3578960	0		==			
ANR	3579087	Identifier	r		3578960	0					
ANR	3579088	UnaryOperationExpression	- 1		3578960	1					
ANR	3579089	UnaryOperator	-		3578960	0					
ANR	3579090	PrimaryExpression	1		3578960	1					
ANR	3579091	CompoundStatement		36:17:751:751	3578960	1					
ANR	3579092	ReturnStatement	return - 4 ;	823:8:19782:19791	3578960	0	True				
ANR	3579093	UnaryOperationExpression	- 4		3578960	0					
ANR	3579094	UnaryOperator	-		3578960	0					
ANR	3579095	PrimaryExpression	4		3578960	1					
ANR	3579096	ExpressionStatement	"total_groups = num_groups = getgroups ( 0 , 0 )"	827:4:19849:19892	3578960	15	True				
ANR	3579097	AssignmentExpression	"total_groups = num_groups = getgroups ( 0 , 0 )"		3578960	0		=			
ANR	3579098	Identifier	total_groups		3578960	0					
ANR	3579099	AssignmentExpression	"num_groups = getgroups ( 0 , 0 )"		3578960	1		=			
ANR	3579100	Identifier	num_groups		3578960	0					
ANR	3579101	CallExpression	"getgroups ( 0 , 0 )"		3578960	1					
ANR	3579102	Callee	getgroups		3578960	0					
ANR	3579103	Identifier	getgroups		3578960	0					
ANR	3579104	ArgumentList	0		3578960	1					
ANR	3579105	Argument	0		3578960	0					
ANR	3579106	PrimaryExpression	0		3578960	0					
ANR	3579107	Argument	0		3578960	1					
ANR	3579108	PrimaryExpression	0		3578960	0					
ANR	3579109	IfStatement	if ( num_groups == - 1 )		3578960	16					
ANR	3579110	Condition	num_groups == - 1	828:8:19902:19917	3578960	0	True				
ANR	3579111	EqualityExpression	num_groups == - 1		3578960	0		==			
ANR	3579112	Identifier	num_groups		3578960	0					
ANR	3579113	UnaryOperationExpression	- 1		3578960	1					
ANR	3579114	UnaryOperator	-		3578960	0					
ANR	3579115	PrimaryExpression	1		3578960	1					
ANR	3579116	CompoundStatement		42:26:899:899	3578960	1					
ANR	3579117	ReturnStatement	return - 5 ;	829:8:19930:19939	3578960	0	True				
ANR	3579118	UnaryOperationExpression	- 5		3578960	0					
ANR	3579119	UnaryOperator	-		3578960	0					
ANR	3579120	PrimaryExpression	5		3578960	1					
ANR	3579121	IfStatement	if ( tracking_gid != 0 )		3578960	17					
ANR	3579122	Condition	tracking_gid != 0	831:8:19955:19971	3578960	0	True				
ANR	3579123	EqualityExpression	tracking_gid != 0		3578960	0		!=			
ANR	3579124	Identifier	tracking_gid		3578960	0					
ANR	3579125	PrimaryExpression	0		3578960	1					
ANR	3579126	CompoundStatement		45:27:953:953	3578960	1					
ANR	3579127	ExpressionStatement	total_groups ++	832:8:19984:19998	3578960	0	True				
ANR	3579128	PostIncDecOperationExpression	total_groups ++		3578960	0					
ANR	3579129	Identifier	total_groups		3578960	0					
ANR	3579130	IncDec	++		3578960	1					
ANR	3579131	ExpressionStatement	gids = ( gid_t * ) malloc ( total_groups * sizeof ( gid_t ) )	834:4:20010:20063	3578960	18	True				
ANR	3579132	AssignmentExpression	gids = ( gid_t * ) malloc ( total_groups * sizeof ( gid_t ) )		3578960	0		=			
ANR	3579133	Identifier	gids		3578960	0					
ANR	3579134	CastExpression	( gid_t * ) malloc ( total_groups * sizeof ( gid_t ) )		3578960	1					
ANR	3579135	CastTarget	gid_t *		3578960	0					
ANR	3579136	CallExpression	malloc ( total_groups * sizeof ( gid_t ) )		3578960	1					
ANR	3579137	Callee	malloc		3578960	0					
ANR	3579138	Identifier	malloc		3578960	0					
ANR	3579139	ArgumentList	total_groups * sizeof ( gid_t )		3578960	1					
ANR	3579140	Argument	total_groups * sizeof ( gid_t )		3578960	0					
ANR	3579141	MultiplicativeExpression	total_groups * sizeof ( gid_t )		3578960	0		*			
ANR	3579142	Identifier	total_groups		3578960	0					
ANR	3579143	SizeofExpression	sizeof ( gid_t )		3578960	1					
ANR	3579144	Sizeof	sizeof		3578960	0					
ANR	3579145	SizeofOperand	gid_t		3578960	1					
ANR	3579146	IfStatement	if ( gids == NULL )		3578960	19					
ANR	3579147	Condition	gids == NULL	835:8:20073:20084	3578960	0	True				
ANR	3579148	EqualityExpression	gids == NULL		3578960	0		==			
ANR	3579149	Identifier	gids		3578960	0					
ANR	3579150	Identifier	NULL		3578960	1					
ANR	3579151	CompoundStatement		49:22:1066:1066	3578960	1					
ANR	3579152	ReturnStatement	return - 6 ;	836:8:20097:20106	3578960	0	True				
ANR	3579153	UnaryOperationExpression	- 6		3578960	0					
ANR	3579154	UnaryOperator	-		3578960	0					
ANR	3579155	PrimaryExpression	6		3578960	1					
ANR	3579156	ExpressionStatement	"num_groups = getgroups ( num_groups , gids )"	840:4:20158:20198	3578960	20	True				
ANR	3579157	AssignmentExpression	"num_groups = getgroups ( num_groups , gids )"		3578960	0		=			
ANR	3579158	Identifier	num_groups		3578960	0					
ANR	3579159	CallExpression	"getgroups ( num_groups , gids )"		3578960	1					
ANR	3579160	Callee	getgroups		3578960	0					
ANR	3579161	Identifier	getgroups		3578960	0					
ANR	3579162	ArgumentList	num_groups		3578960	1					
ANR	3579163	Argument	num_groups		3578960	0					
ANR	3579164	Identifier	num_groups		3578960	0					
ANR	3579165	Argument	gids		3578960	1					
ANR	3579166	Identifier	gids		3578960	0					
ANR	3579167	IfStatement	if ( num_groups == - 1 )		3578960	21					
ANR	3579168	Condition	num_groups == - 1	841:8:20208:20223	3578960	0	True				
ANR	3579169	EqualityExpression	num_groups == - 1		3578960	0		==			
ANR	3579170	Identifier	num_groups		3578960	0					
ANR	3579171	UnaryOperationExpression	- 1		3578960	1					
ANR	3579172	UnaryOperator	-		3578960	0					
ANR	3579173	PrimaryExpression	1		3578960	1					
ANR	3579174	CompoundStatement		55:26:1205:1205	3578960	1					
ANR	3579175	ExpressionStatement	free ( gids )	842:8:20236:20246	3578960	0	True				
ANR	3579176	CallExpression	free ( gids )		3578960	0					
ANR	3579177	Callee	free		3578960	0					
ANR	3579178	Identifier	free		3578960	0					
ANR	3579179	ArgumentList	gids		3578960	1					
ANR	3579180	Argument	gids		3578960	0					
ANR	3579181	Identifier	gids		3578960	0					
ANR	3579182	ReturnStatement	return - 7 ;	843:8:20256:20265	3578960	1	True				
ANR	3579183	UnaryOperationExpression	- 7		3578960	0					
ANR	3579184	UnaryOperator	-		3578960	0					
ANR	3579185	PrimaryExpression	7		3578960	1					
ANR	3579186	ForStatement	for ( i = 0 ; i < num_groups ; ++ i )		3578960	22					
ANR	3579187	ForInit	i = 0 ;	847:9:20347:20352	3578960	0	True				
ANR	3579188	AssignmentExpression	i = 0		3578960	0		=			
ANR	3579189	Identifier	i		3578960	0					
ANR	3579190	PrimaryExpression	0		3578960	1					
ANR	3579191	Condition	i < num_groups	847:16:20354:20367	3578960	1	True				
ANR	3579192	RelationalExpression	i < num_groups		3578960	0		<			
ANR	3579193	Identifier	i		3578960	0					
ANR	3579194	Identifier	num_groups		3578960	1					
ANR	3579195	UnaryExpression	++ i	847:32:20370:20372	3578960	2	True				
ANR	3579196	IncDec	++		3578960	0					
ANR	3579197	Identifier	i		3578960	1					
ANR	3579198	CompoundStatement		61:37:1354:1354	3578960	3					
ANR	3579199	IfStatement	"if ( ! safe_is_id_in_list ( safe_gids , gids [ i ] ) )"		3578960	0					
ANR	3579200	Condition	"! safe_is_id_in_list ( safe_gids , gids [ i ] )"	848:12:20389:20427	3578960	0	True				
ANR	3579201	UnaryOperationExpression	"! safe_is_id_in_list ( safe_gids , gids [ i ] )"		3578960	0					
ANR	3579202	UnaryOperator	!		3578960	0					
ANR	3579203	CallExpression	"safe_is_id_in_list ( safe_gids , gids [ i ] )"		3578960	1					
ANR	3579204	Callee	safe_is_id_in_list		3578960	0					
ANR	3579205	Identifier	safe_is_id_in_list		3578960	0					
ANR	3579206	ArgumentList	safe_gids		3578960	1					
ANR	3579207	Argument	safe_gids		3578960	0					
ANR	3579208	Identifier	safe_gids		3578960	0					
ANR	3579209	Argument	gids [ i ]		3578960	1					
ANR	3579210	ArrayIndexing	gids [ i ]		3578960	0					
ANR	3579211	Identifier	gids		3578960	0					
ANR	3579212	Identifier	i		3578960	1					
ANR	3579213	CompoundStatement		62:53:1409:1409	3578960	1					
ANR	3579214	ExpressionStatement	free ( gids )	849:12:20444:20454	3578960	0	True				
ANR	3579215	CallExpression	free ( gids )		3578960	0					
ANR	3579216	Callee	free		3578960	0					
ANR	3579217	Identifier	free		3578960	0					
ANR	3579218	ArgumentList	gids		3578960	1					
ANR	3579219	Argument	gids		3578960	0					
ANR	3579220	Identifier	gids		3578960	0					
ANR	3579221	ReturnStatement	return - 8 ;	850:12:20468:20477	3578960	1	True				
ANR	3579222	UnaryOperationExpression	- 8		3578960	0					
ANR	3579223	UnaryOperator	-		3578960	0					
ANR	3579224	PrimaryExpression	8		3578960	1					
ANR	3579225	IfStatement	if ( tracking_gid != 0 )		3578960	23					
ANR	3579226	Condition	tracking_gid != 0	855:8:20547:20563	3578960	0	True				
ANR	3579227	EqualityExpression	tracking_gid != 0		3578960	0		!=			
ANR	3579228	Identifier	tracking_gid		3578960	0					
ANR	3579229	PrimaryExpression	0		3578960	1					
ANR	3579230	CompoundStatement		69:27:1545:1545	3578960	1					
ANR	3579231	ExpressionStatement	gids [ num_groups ] = tracking_gid	856:8:20576:20607	3578960	0	True				
ANR	3579232	AssignmentExpression	gids [ num_groups ] = tracking_gid		3578960	0		=			
ANR	3579233	ArrayIndexing	gids [ num_groups ]		3578960	0					
ANR	3579234	Identifier	gids		3578960	0					
ANR	3579235	Identifier	num_groups		3578960	1					
ANR	3579236	Identifier	tracking_gid		3578960	1					
ANR	3579237	IfStatement	"if ( setgroups ( num_groups + 1 , gids ) == - 1 )"		3578960	1					
ANR	3579238	Condition	"setgroups ( num_groups + 1 , gids ) == - 1"	857:12:20621:20657	3578960	0	True				
ANR	3579239	EqualityExpression	"setgroups ( num_groups + 1 , gids ) == - 1"		3578960	0		==			
ANR	3579240	CallExpression	"setgroups ( num_groups + 1 , gids )"		3578960	0					
ANR	3579241	Callee	setgroups		3578960	0					
ANR	3579242	Identifier	setgroups		3578960	0					
ANR	3579243	ArgumentList	num_groups + 1		3578960	1					
ANR	3579244	Argument	num_groups + 1		3578960	0					
ANR	3579245	AdditiveExpression	num_groups + 1		3578960	0		+			
ANR	3579246	Identifier	num_groups		3578960	0					
ANR	3579247	PrimaryExpression	1		3578960	1					
ANR	3579248	Argument	gids		3578960	1					
ANR	3579249	Identifier	gids		3578960	0					
ANR	3579250	UnaryOperationExpression	- 1		3578960	1					
ANR	3579251	UnaryOperator	-		3578960	0					
ANR	3579252	PrimaryExpression	1		3578960	1					
ANR	3579253	CompoundStatement		71:51:1639:1639	3578960	1					
ANR	3579254	ExpressionStatement	free ( gids )	858:12:20674:20684	3578960	0	True				
ANR	3579255	CallExpression	free ( gids )		3578960	0					
ANR	3579256	Callee	free		3578960	0					
ANR	3579257	Identifier	free		3578960	0					
ANR	3579258	ArgumentList	gids		3578960	1					
ANR	3579259	Argument	gids		3578960	0					
ANR	3579260	Identifier	gids		3578960	0					
ANR	3579261	ReturnStatement	return - 12 ;	859:12:20698:20708	3578960	1	True				
ANR	3579262	UnaryOperationExpression	- 12		3578960	0					
ANR	3579263	UnaryOperator	-		3578960	0					
ANR	3579264	PrimaryExpression	12		3578960	1					
ANR	3579265	ExpressionStatement	free ( gids )	863:4:20731:20741	3578960	24	True				
ANR	3579266	CallExpression	free ( gids )		3578960	0					
ANR	3579267	Callee	free		3578960	0					
ANR	3579268	Identifier	free		3578960	0					
ANR	3579269	ArgumentList	gids		3578960	1					
ANR	3579270	Argument	gids		3578960	0					
ANR	3579271	Identifier	gids		3578960	0					
ANR	3579272	ExpressionStatement	* primary_gid = gid	866:4:20779:20797	3578960	25	True				
ANR	3579273	AssignmentExpression	* primary_gid = gid		3578960	0		=			
ANR	3579274	UnaryOperationExpression	* primary_gid		3578960	0					
ANR	3579275	UnaryOperator	*		3578960	0					
ANR	3579276	Identifier	primary_gid		3578960	1					
ANR	3579277	Identifier	gid		3578960	1					
ANR	3579278	ReturnStatement	return 0 ;	868:4:20804:20812	3578960	26	True				
ANR	3579279	PrimaryExpression	0		3578960	0					
ANR	3579280	ReturnType	static int		3578960	1					
ANR	3579281	Identifier	safe_checks_and_set_gids		3578960	2					
ANR	3579282	ParameterList	"uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , gid_t * primary_gid"		3578960	3					
ANR	3579283	Parameter	uid_t uid	782:25:18806:18814	3578960	0	True				
ANR	3579284	ParameterType	uid_t		3578960	0					
ANR	3579285	Identifier	uid		3578960	1					
ANR	3579286	Parameter	gid_t tracking_gid	783:25:18842:18859	3578960	1	True				
ANR	3579287	ParameterType	gid_t		3578960	0					
ANR	3579288	Identifier	tracking_gid		3578960	1					
ANR	3579289	Parameter	safe_id_range_list * safe_uids	784:25:18887:18915	3578960	2	True				
ANR	3579290	ParameterType	safe_id_range_list *		3578960	0					
ANR	3579291	Identifier	safe_uids		3578960	1					
ANR	3579292	Parameter	safe_id_range_list * safe_gids	785:25:18943:18971	3578960	3	True				
ANR	3579293	ParameterType	safe_id_range_list *		3578960	0					
ANR	3579294	Identifier	safe_gids		3578960	1					
ANR	3579295	Parameter	gid_t * primary_gid	786:25:18999:19017	3578960	4	True				
ANR	3579296	ParameterType	gid_t *		3578960	0					
ANR	3579297	Identifier	primary_gid		3578960	1					
ANR	3579298	CFGEntryNode	ENTRY		3578960		True				
ANR	3579299	CFGExitNode	EXIT		3578960		True				
ANR	3579300	Symbol	tracking_gid		3578960						
ANR	3579301	Symbol	gids		3578960						
ANR	3579302	Symbol	safe_uids		3578960						
ANR	3579303	Symbol	gid		3578960						
ANR	3579304	Symbol	pw		3578960						
ANR	3579305	Symbol	primary_gid		3578960						
ANR	3579306	Symbol	* primary_gid		3578960						
ANR	3579307	Symbol	num_groups		3578960						
ANR	3579308	Symbol	safe_is_id_in_list		3578960						
ANR	3579309	Symbol	uid		3578960						
ANR	3579310	Symbol	getpwuid		3578960						
ANR	3579311	Symbol	setgroups		3578960						
ANR	3579312	Symbol	initgroups		3578960						
ANR	3579313	Symbol	pw -> pw_name		3578960						
ANR	3579314	Symbol	getgroups		3578960						
ANR	3579315	Symbol	malloc		3578960						
ANR	3579316	Symbol	NULL		3578960						
ANR	3579317	Symbol	total_groups		3578960						
ANR	3579318	Symbol	pw -> pw_gid		3578960						
ANR	3579319	Symbol	i		3578960						
ANR	3579320	Symbol	* pw		3578960						
ANR	3579321	Symbol	r		3578960						
ANR	3579322	Symbol	safe_gids		3578960						
ANR	3579323	Symbol	* i		3578960						
ANR	3579324	Symbol	* gids		3578960						
ANR	3579325	Symbol	* num_groups		3578960						
ANR	3579326	Function	safe_switch_to_uid_strerror	871:0:20817:21546							
ANR	3579327	FunctionDef	safe_switch_to_uid_strerror (int r)		3579326	0					
ANR	3579328	CompoundStatement		873:0:20865:21546	3579326	0					
ANR	3579329	SwitchStatement	switch ( r )		3579326	0					
ANR	3579330	Condition	r	874:8:20875:20875	3579326	0	True				
ANR	3579331	Identifier	r		3579326	0					
ANR	3579332	CompoundStatement		2:11:12:12	3579326	1					
ANR	3579333	Label	case 0 :	875:1:20881:20887	3579326	0	True				
ANR	3579334	ReturnStatement	"return ""success"" ;"	875:9:20889:20905	3579326	1	True				
ANR	3579335	PrimaryExpression	"""success"""		3579326	0					
ANR	3579336	Statement	case	876:1:20908:20911	3579326	2	True				
ANR	3579337	Statement	-	876:6:20913:20913	3579326	3	True				
ANR	3579338	Label	1 :	876:7:20914:20915	3579326	4	True				
ANR	3579339	ReturnStatement	"return ""uid not safe"" ;"	876:10:20917:20938	3579326	5	True				
ANR	3579340	PrimaryExpression	"""uid not safe"""		3579326	0					
ANR	3579341	Statement	case	877:1:20941:20944	3579326	6	True				
ANR	3579342	Statement	-	877:6:20946:20946	3579326	7	True				
ANR	3579343	Label	2 :	877:7:20947:20948	3579326	8	True				
ANR	3579344	ReturnStatement	"return ""uid not in password file"" ;"	877:10:20950:20983	3579326	9	True				
ANR	3579345	PrimaryExpression	"""uid not in password file"""		3579326	0					
ANR	3579346	Statement	case	878:1:20986:20989	3579326	10	True				
ANR	3579347	Statement	-	878:6:20991:20991	3579326	11	True				
ANR	3579348	Label	3 :	878:7:20992:20993	3579326	12	True				
ANR	3579349	ReturnStatement	"return ""primary group not safe"" ;"	878:10:20995:21026	3579326	13	True				
ANR	3579350	PrimaryExpression	"""primary group not safe"""		3579326	0					
ANR	3579351	Statement	case	879:1:21029:21032	3579326	14	True				
ANR	3579352	Statement	-	879:6:21034:21034	3579326	15	True				
ANR	3579353	Label	4 :	879:7:21035:21036	3579326	16	True				
ANR	3579354	ReturnStatement	"return ""failed to set supplementary groups"" ;"	879:10:21038:21081	3579326	17	True				
ANR	3579355	PrimaryExpression	"""failed to set supplementary groups"""		3579326	0					
ANR	3579356	Statement	case	880:1:21084:21087	3579326	18	True				
ANR	3579357	Statement	-	880:6:21089:21089	3579326	19	True				
ANR	3579358	Label	5 :	880:7:21090:21091	3579326	20	True				
ANR	3579359	ReturnStatement	"return ""failed to get number of supplementary groups"" ;"	880:10:21093:21146	3579326	21	True				
ANR	3579360	PrimaryExpression	"""failed to get number of supplementary groups"""		3579326	0					
ANR	3579361	Statement	case	881:1:21149:21152	3579326	22	True				
ANR	3579362	Statement	-	881:6:21154:21154	3579326	23	True				
ANR	3579363	Label	6 :	881:7:21155:21156	3579326	24	True				
ANR	3579364	ReturnStatement	"return ""malloc failed"" ;"	881:10:21158:21180	3579326	25	True				
ANR	3579365	PrimaryExpression	"""malloc failed"""		3579326	0					
ANR	3579366	Statement	case	882:1:21183:21186	3579326	26	True				
ANR	3579367	Statement	-	882:6:21188:21188	3579326	27	True				
ANR	3579368	Label	7 :	882:7:21189:21190	3579326	28	True				
ANR	3579369	ReturnStatement	"return ""failed to get supplementary groups"" ;"	882:10:21192:21235	3579326	29	True				
ANR	3579370	PrimaryExpression	"""failed to get supplementary groups"""		3579326	0					
ANR	3579371	Statement	case	883:1:21238:21241	3579326	30	True				
ANR	3579372	Statement	-	883:6:21243:21243	3579326	31	True				
ANR	3579373	Label	8 :	883:7:21244:21245	3579326	32	True				
ANR	3579374	ReturnStatement	"return ""a supplementary group was not safe"" ;"	883:10:21247:21290	3579326	33	True				
ANR	3579375	PrimaryExpression	"""a supplementary group was not safe"""		3579326	0					
ANR	3579376	Statement	case	884:1:21293:21296	3579326	34	True				
ANR	3579377	Statement	-	884:6:21298:21298	3579326	35	True				
ANR	3579378	Label	9 :	884:7:21299:21300	3579326	36	True				
ANR	3579379	ReturnStatement	"return ""failed to set real gid"" ;"	884:10:21302:21333	3579326	37	True				
ANR	3579380	PrimaryExpression	"""failed to set real gid"""		3579326	0					
ANR	3579381	Statement	case	885:1:21336:21339	3579326	38	True				
ANR	3579382	Statement	-	885:6:21341:21341	3579326	39	True				
ANR	3579383	Label	10 :	885:7:21342:21344	3579326	40	True				
ANR	3579384	ReturnStatement	"return ""failed to set real uid"" ;"	885:11:21346:21377	3579326	41	True				
ANR	3579385	PrimaryExpression	"""failed to set real uid"""		3579326	0					
ANR	3579386	Statement	case	886:1:21380:21383	3579326	42	True				
ANR	3579387	Statement	-	886:6:21385:21385	3579326	43	True				
ANR	3579388	Label	11 :	886:7:21386:21388	3579326	44	True				
ANR	3579389	ReturnStatement	"return ""id did not change properly"" ;"	886:11:21390:21425	3579326	45	True				
ANR	3579390	PrimaryExpression	"""id did not change properly"""		3579326	0					
ANR	3579391	Statement	case	887:1:21428:21431	3579326	46	True				
ANR	3579392	Statement	-	887:6:21433:21433	3579326	47	True				
ANR	3579393	Label	12 :	887:7:21434:21436	3579326	48	True				
ANR	3579394	ReturnStatement	"return ""failed to insert tracking GID"" ;"	887:11:21438:21476	3579326	49	True				
ANR	3579395	PrimaryExpression	"""failed to insert tracking GID"""		3579326	0					
ANR	3579396	Statement	case	888:1:21479:21482	3579326	50	True				
ANR	3579397	Statement	-	888:6:21484:21484	3579326	51	True				
ANR	3579398	Label	13 :	888:7:21485:21487	3579326	52	True				
ANR	3579399	ReturnStatement	"return ""the tracking group was not safe"" ;"	888:11:21489:21529	3579326	53	True				
ANR	3579400	PrimaryExpression	"""the tracking group was not safe"""		3579326	0					
ANR	3579401	ReturnStatement	"return """" ;"	890:1:21535:21544	3579326	1	True				
ANR	3579402	PrimaryExpression	""""""		3579326	0					
ANR	3579403	ReturnType	char const *		3579326	1					
ANR	3579404	Identifier	safe_switch_to_uid_strerror		3579326	2					
ANR	3579405	ParameterList	int r		3579326	3					
ANR	3579406	Parameter	int r	872:28:20858:20862	3579326	0	True				
ANR	3579407	ParameterType	int		3579326	0					
ANR	3579408	Identifier	r		3579326	1					
ANR	3579409	CFGEntryNode	ENTRY		3579326		True				
ANR	3579410	CFGExitNode	EXIT		3579326		True				
ANR	3579411	Symbol	r		3579326						
ANR	3579412	Function	safe_switch_to_uid	915:0:22222:23076							
ANR	3579413	FunctionDef	"safe_switch_to_uid (uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids)"		3579412	0					
ANR	3579414	CompoundStatement		920:0:22395:23076	3579412	0					
ANR	3579415	IdentifierDeclStatement	gid_t gid ;	921:4:22401:22410	3579412	0	True				
ANR	3579416	IdentifierDecl	gid		3579412	0					
ANR	3579417	IdentifierDeclType	gid_t		3579412	0					
ANR	3579418	Identifier	gid		3579412	1					
ANR	3579419	IdentifierDeclStatement	int r ;	922:4:22416:22421	3579412	1	True				
ANR	3579420	IdentifierDecl	r		3579412	0					
ANR	3579421	IdentifierDeclType	int		3579412	0					
ANR	3579422	Identifier	r		3579412	1					
ANR	3579423	ExpressionStatement	"r = safe_checks_and_set_gids ( uid , tracking_gid , safe_uids , safe_gids , & gid )"	924:4:22428:22635	3579412	2	True				
ANR	3579424	AssignmentExpression	"r = safe_checks_and_set_gids ( uid , tracking_gid , safe_uids , safe_gids , & gid )"		3579412	0		=			
ANR	3579425	Identifier	r		3579412	0					
ANR	3579426	CallExpression	"safe_checks_and_set_gids ( uid , tracking_gid , safe_uids , safe_gids , & gid )"		3579412	1					
ANR	3579427	Callee	safe_checks_and_set_gids		3579412	0					
ANR	3579428	Identifier	safe_checks_and_set_gids		3579412	0					
ANR	3579429	ArgumentList	uid		3579412	1					
ANR	3579430	Argument	uid		3579412	0					
ANR	3579431	Identifier	uid		3579412	0					
ANR	3579432	Argument	tracking_gid		3579412	1					
ANR	3579433	Identifier	tracking_gid		3579412	0					
ANR	3579434	Argument	safe_uids		3579412	2					
ANR	3579435	Identifier	safe_uids		3579412	0					
ANR	3579436	Argument	safe_gids		3579412	3					
ANR	3579437	Identifier	safe_gids		3579412	0					
ANR	3579438	Argument	& gid		3579412	4					
ANR	3579439	UnaryOperationExpression	& gid		3579412	0					
ANR	3579440	UnaryOperator	&		3579412	0					
ANR	3579441	Identifier	gid		3579412	1					
ANR	3579442	IfStatement	if ( r != 0 )		3579412	3					
ANR	3579443	Condition	r != 0	929:8:22645:22650	3579412	0	True				
ANR	3579444	EqualityExpression	r != 0		3579412	0		!=			
ANR	3579445	Identifier	r		3579412	0					
ANR	3579446	PrimaryExpression	0		3579412	1					
ANR	3579447	CompoundStatement		10:16:257:257	3579412	1					
ANR	3579448	ReturnStatement	return r ;	930:8:22663:22671	3579412	0	True				
ANR	3579449	Identifier	r		3579412	0					
ANR	3579450	ExpressionStatement	r = setgid ( gid )	933:4:22684:22699	3579412	4	True				
ANR	3579451	AssignmentExpression	r = setgid ( gid )		3579412	0		=			
ANR	3579452	Identifier	r		3579412	0					
ANR	3579453	CallExpression	setgid ( gid )		3579412	1					
ANR	3579454	Callee	setgid		3579412	0					
ANR	3579455	Identifier	setgid		3579412	0					
ANR	3579456	ArgumentList	gid		3579412	1					
ANR	3579457	Argument	gid		3579412	0					
ANR	3579458	Identifier	gid		3579412	0					
ANR	3579459	IfStatement	if ( r == - 1 )		3579412	5					
ANR	3579460	Condition	r == - 1	934:8:22709:22715	3579412	0	True				
ANR	3579461	EqualityExpression	r == - 1		3579412	0		==			
ANR	3579462	Identifier	r		3579412	0					
ANR	3579463	UnaryOperationExpression	- 1		3579412	1					
ANR	3579464	UnaryOperator	-		3579412	0					
ANR	3579465	PrimaryExpression	1		3579412	1					
ANR	3579466	CompoundStatement		15:17:322:322	3579412	1					
ANR	3579467	ReturnStatement	return - 9 ;	935:8:22728:22737	3579412	0	True				
ANR	3579468	UnaryOperationExpression	- 9		3579412	0					
ANR	3579469	UnaryOperator	-		3579412	0					
ANR	3579470	PrimaryExpression	9		3579412	1					
ANR	3579471	ExpressionStatement	r = setuid ( uid )	938:4:22750:22765	3579412	6	True				
ANR	3579472	AssignmentExpression	r = setuid ( uid )		3579412	0		=			
ANR	3579473	Identifier	r		3579412	0					
ANR	3579474	CallExpression	setuid ( uid )		3579412	1					
ANR	3579475	Callee	setuid		3579412	0					
ANR	3579476	Identifier	setuid		3579412	0					
ANR	3579477	ArgumentList	uid		3579412	1					
ANR	3579478	Argument	uid		3579412	0					
ANR	3579479	Identifier	uid		3579412	0					
ANR	3579480	IfStatement	if ( r == - 1 )		3579412	7					
ANR	3579481	Condition	r == - 1	939:8:22775:22781	3579412	0	True				
ANR	3579482	EqualityExpression	r == - 1		3579412	0		==			
ANR	3579483	Identifier	r		3579412	0					
ANR	3579484	UnaryOperationExpression	- 1		3579412	1					
ANR	3579485	UnaryOperator	-		3579412	0					
ANR	3579486	PrimaryExpression	1		3579412	1					
ANR	3579487	CompoundStatement		20:17:388:388	3579412	1					
ANR	3579488	ReturnStatement	return - 10 ;	940:8:22794:22804	3579412	0	True				
ANR	3579489	UnaryOperationExpression	- 10		3579412	0					
ANR	3579490	UnaryOperator	-		3579412	0					
ANR	3579491	PrimaryExpression	10		3579412	1					
ANR	3579492	IfStatement	if ( getuid ( ) != uid || geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid )		3579412	8					
ANR	3579493	Condition	getuid ( ) != uid || geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid	945:8:22949:23030	3579412	0	True				
ANR	3579494	OrExpression	getuid ( ) != uid || geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid		3579412	0		||			
ANR	3579495	EqualityExpression	getuid ( ) != uid		3579412	0		!=			
ANR	3579496	CallExpression	getuid ( )		3579412	0					
ANR	3579497	Callee	getuid		3579412	0					
ANR	3579498	Identifier	getuid		3579412	0					
ANR	3579499	ArgumentList			3579412	1					
ANR	3579500	Identifier	uid		3579412	1					
ANR	3579501	OrExpression	geteuid ( ) != uid || getgid ( ) != gid || getegid ( ) != gid		3579412	1		||			
ANR	3579502	EqualityExpression	geteuid ( ) != uid		3579412	0		!=			
ANR	3579503	CallExpression	geteuid ( )		3579412	0					
ANR	3579504	Callee	geteuid		3579412	0					
ANR	3579505	Identifier	geteuid		3579412	0					
ANR	3579506	ArgumentList			3579412	1					
ANR	3579507	Identifier	uid		3579412	1					
ANR	3579508	OrExpression	getgid ( ) != gid || getegid ( ) != gid		3579412	1		||			
ANR	3579509	EqualityExpression	getgid ( ) != gid		3579412	0		!=			
ANR	3579510	CallExpression	getgid ( )		3579412	0					
ANR	3579511	Callee	getgid		3579412	0					
ANR	3579512	Identifier	getgid		3579412	0					
ANR	3579513	ArgumentList			3579412	1					
ANR	3579514	Identifier	gid		3579412	1					
ANR	3579515	EqualityExpression	getegid ( ) != gid		3579412	1		!=			
ANR	3579516	CallExpression	getegid ( )		3579412	0					
ANR	3579517	Callee	getegid		3579412	0					
ANR	3579518	Identifier	getegid		3579412	0					
ANR	3579519	ArgumentList			3579412	1					
ANR	3579520	Identifier	gid		3579412	1					
ANR	3579521	CompoundStatement		27:29:637:637	3579412	1					
ANR	3579522	ReturnStatement	return - 11 ;	947:8:23043:23053	3579412	0	True				
ANR	3579523	UnaryOperationExpression	- 11		3579412	0					
ANR	3579524	UnaryOperator	-		3579412	0					
ANR	3579525	PrimaryExpression	11		3579412	1					
ANR	3579526	ReturnStatement	return 0 ;	950:4:23066:23074	3579412	9	True				
ANR	3579527	PrimaryExpression	0		3579412	0					
ANR	3579528	ReturnType	int		3579412	1					
ANR	3579529	Identifier	safe_switch_to_uid		3579412	2					
ANR	3579530	ParameterList	"uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids"		3579412	3					
ANR	3579531	Parameter	uid_t uid	916:19:22245:22253	3579412	0	True				
ANR	3579532	ParameterType	uid_t		3579412	0					
ANR	3579533	Identifier	uid		3579412	1					
ANR	3579534	Parameter	gid_t tracking_gid	917:19:22275:22292	3579412	1	True				
ANR	3579535	ParameterType	gid_t		3579412	0					
ANR	3579536	Identifier	tracking_gid		3579412	1					
ANR	3579537	Parameter	safe_id_range_list * safe_uids	918:19:22314:22342	3579412	2	True				
ANR	3579538	ParameterType	safe_id_range_list *		3579412	0					
ANR	3579539	Identifier	safe_uids		3579412	1					
ANR	3579540	Parameter	safe_id_range_list * safe_gids	919:19:22364:22392	3579412	3	True				
ANR	3579541	ParameterType	safe_id_range_list *		3579412	0					
ANR	3579542	Identifier	safe_gids		3579412	1					
ANR	3579543	CFGEntryNode	ENTRY		3579412		True				
ANR	3579544	CFGExitNode	EXIT		3579412		True				
ANR	3579545	Symbol	tracking_gid		3579412						
ANR	3579546	Symbol	setgid		3579412						
ANR	3579547	Symbol	safe_uids		3579412						
ANR	3579548	Symbol	gid		3579412						
ANR	3579549	Symbol	getgid		3579412						
ANR	3579550	Symbol	safe_checks_and_set_gids		3579412						
ANR	3579551	Symbol	geteuid		3579412						
ANR	3579552	Symbol	setuid		3579412						
ANR	3579553	Symbol	& gid		3579412						
ANR	3579554	Symbol	uid		3579412						
ANR	3579555	Symbol	r		3579412						
ANR	3579556	Symbol	getuid		3579412						
ANR	3579557	Symbol	safe_gids		3579412						
ANR	3579558	Symbol	getegid		3579412						
ANR	3579559	Function	safe_switch_effective_to_uid	970:0:23581:24007							
ANR	3579560	FunctionDef	"safe_switch_effective_to_uid (uid_t uid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids)"		3579559	0					
ANR	3579561	CompoundStatement		973:0:23716:24007	3579559	0					
ANR	3579562	IdentifierDeclStatement	gid_t gid ;	974:4:23722:23731	3579559	0	True				
ANR	3579563	IdentifierDecl	gid		3579559	0					
ANR	3579564	IdentifierDeclType	gid_t		3579559	0					
ANR	3579565	Identifier	gid		3579559	1					
ANR	3579566	IdentifierDeclStatement	int r ;	975:4:23737:23742	3579559	1	True				
ANR	3579567	IdentifierDecl	r		3579559	0					
ANR	3579568	IdentifierDeclType	int		3579559	0					
ANR	3579569	Identifier	r		3579559	1					
ANR	3579570	ExpressionStatement	"r = safe_checks_and_set_gids ( uid , 0 , safe_uids , safe_gids , & gid )"	977:4:23749:23813	3579559	2	True				
ANR	3579571	AssignmentExpression	"r = safe_checks_and_set_gids ( uid , 0 , safe_uids , safe_gids , & gid )"		3579559	0		=			
ANR	3579572	Identifier	r		3579559	0					
ANR	3579573	CallExpression	"safe_checks_and_set_gids ( uid , 0 , safe_uids , safe_gids , & gid )"		3579559	1					
ANR	3579574	Callee	safe_checks_and_set_gids		3579559	0					
ANR	3579575	Identifier	safe_checks_and_set_gids		3579559	0					
ANR	3579576	ArgumentList	uid		3579559	1					
ANR	3579577	Argument	uid		3579559	0					
ANR	3579578	Identifier	uid		3579559	0					
ANR	3579579	Argument	0		3579559	1					
ANR	3579580	PrimaryExpression	0		3579559	0					
ANR	3579581	Argument	safe_uids		3579559	2					
ANR	3579582	Identifier	safe_uids		3579559	0					
ANR	3579583	Argument	safe_gids		3579559	3					
ANR	3579584	Identifier	safe_gids		3579559	0					
ANR	3579585	Argument	& gid		3579559	4					
ANR	3579586	UnaryOperationExpression	& gid		3579559	0					
ANR	3579587	UnaryOperator	&		3579559	0					
ANR	3579588	Identifier	gid		3579559	1					
ANR	3579589	IfStatement	if ( r != 0 )		3579559	3					
ANR	3579590	Condition	r != 0	978:8:23823:23828	3579559	0	True				
ANR	3579591	EqualityExpression	r != 0		3579559	0		!=			
ANR	3579592	Identifier	r		3579559	0					
ANR	3579593	PrimaryExpression	0		3579559	1					
ANR	3579594	CompoundStatement		6:16:114:114	3579559	1					
ANR	3579595	ReturnStatement	return r ;	979:8:23841:23849	3579559	0	True				
ANR	3579596	Identifier	r		3579559	0					
ANR	3579597	ExpressionStatement	r = setegid ( gid )	982:4:23862:23878	3579559	4	True				
ANR	3579598	AssignmentExpression	r = setegid ( gid )		3579559	0		=			
ANR	3579599	Identifier	r		3579559	0					
ANR	3579600	CallExpression	setegid ( gid )		3579559	1					
ANR	3579601	Callee	setegid		3579559	0					
ANR	3579602	Identifier	setegid		3579559	0					
ANR	3579603	ArgumentList	gid		3579559	1					
ANR	3579604	Argument	gid		3579559	0					
ANR	3579605	Identifier	gid		3579559	0					
ANR	3579606	IfStatement	if ( r == - 1 )		3579559	5					
ANR	3579607	Condition	r == - 1	983:8:23888:23894	3579559	0	True				
ANR	3579608	EqualityExpression	r == - 1		3579559	0		==			
ANR	3579609	Identifier	r		3579559	0					
ANR	3579610	UnaryOperationExpression	- 1		3579559	1					
ANR	3579611	UnaryOperator	-		3579559	0					
ANR	3579612	PrimaryExpression	1		3579559	1					
ANR	3579613	CompoundStatement		11:17:180:180	3579559	1					
ANR	3579614	ReturnStatement	return - 9 ;	984:8:23907:23916	3579559	0	True				
ANR	3579615	UnaryOperationExpression	- 9		3579559	0					
ANR	3579616	UnaryOperator	-		3579559	0					
ANR	3579617	PrimaryExpression	9		3579559	1					
ANR	3579618	ExpressionStatement	r = seteuid ( uid )	987:4:23929:23945	3579559	6	True				
ANR	3579619	AssignmentExpression	r = seteuid ( uid )		3579559	0		=			
ANR	3579620	Identifier	r		3579559	0					
ANR	3579621	CallExpression	seteuid ( uid )		3579559	1					
ANR	3579622	Callee	seteuid		3579559	0					
ANR	3579623	Identifier	seteuid		3579559	0					
ANR	3579624	ArgumentList	uid		3579559	1					
ANR	3579625	Argument	uid		3579559	0					
ANR	3579626	Identifier	uid		3579559	0					
ANR	3579627	IfStatement	if ( r == - 1 )		3579559	7					
ANR	3579628	Condition	r == - 1	988:8:23955:23961	3579559	0	True				
ANR	3579629	EqualityExpression	r == - 1		3579559	0		==			
ANR	3579630	Identifier	r		3579559	0					
ANR	3579631	UnaryOperationExpression	- 1		3579559	1					
ANR	3579632	UnaryOperator	-		3579559	0					
ANR	3579633	PrimaryExpression	1		3579559	1					
ANR	3579634	CompoundStatement		16:17:247:247	3579559	1					
ANR	3579635	ReturnStatement	return - 10 ;	989:8:23974:23984	3579559	0	True				
ANR	3579636	UnaryOperationExpression	- 10		3579559	0					
ANR	3579637	UnaryOperator	-		3579559	0					
ANR	3579638	PrimaryExpression	10		3579559	1					
ANR	3579639	ReturnStatement	return 0 ;	992:4:23997:24005	3579559	8	True				
ANR	3579640	PrimaryExpression	0		3579559	0					
ANR	3579641	ReturnType	int		3579559	1					
ANR	3579642	Identifier	safe_switch_effective_to_uid		3579559	2					
ANR	3579643	ParameterList	"uid_t uid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids"		3579559	3					
ANR	3579644	Parameter	uid_t uid	971:29:23614:23622	3579559	0	True				
ANR	3579645	ParameterType	uid_t		3579559	0					
ANR	3579646	Identifier	uid		3579559	1					
ANR	3579647	Parameter	safe_id_range_list * safe_uids	971:40:23625:23653	3579559	1	True				
ANR	3579648	ParameterType	safe_id_range_list *		3579559	0					
ANR	3579649	Identifier	safe_uids		3579559	1					
ANR	3579650	Parameter	safe_id_range_list * safe_gids	972:29:23685:23713	3579559	2	True				
ANR	3579651	ParameterType	safe_id_range_list *		3579559	0					
ANR	3579652	Identifier	safe_gids		3579559	1					
ANR	3579653	CFGEntryNode	ENTRY		3579559		True				
ANR	3579654	CFGExitNode	EXIT		3579559		True				
ANR	3579655	Symbol	uid		3579559						
ANR	3579656	Symbol	r		3579559						
ANR	3579657	Symbol	safe_uids		3579559						
ANR	3579658	Symbol	safe_gids		3579559						
ANR	3579659	Symbol	gid		3579559						
ANR	3579660	Symbol	safe_checks_and_set_gids		3579559						
ANR	3579661	Symbol	seteuid		3579559						
ANR	3579662	Symbol	setegid		3579559						
ANR	3579663	Symbol	& gid		3579559						
ANR	3579664	Function	safe_exec_as_user	1064:0:26648:29662							
ANR	3579665	FunctionDef	"safe_exec_as_user (uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , const char * exec_name , char * * args , char * * env , safe_id_range_list * keep_open_fds , const char * stdin_filename , const char * stdout_filename , const char * stderr_filename , const char * initial_dir , int is_std_univ)"		3579664	0					
ANR	3579666	CompoundStatement		1078:0:27190:29662	3579664	0					
ANR	3579667	IdentifierDeclStatement	int r ;	1079:4:27196:27201	3579664	0	True				
ANR	3579668	IdentifierDecl	r		3579664	0					
ANR	3579669	IdentifierDeclType	int		3579664	0					
ANR	3579670	Identifier	r		3579664	1					
ANR	3579671	ExpressionStatement	"r = safe_switch_to_uid ( uid , tracking_gid , safe_uids , safe_gids )"	1083:4:27334:27397	3579664	1	True				
ANR	3579672	AssignmentExpression	"r = safe_switch_to_uid ( uid , tracking_gid , safe_uids , safe_gids )"		3579664	0		=			
ANR	3579673	Identifier	r		3579664	0					
ANR	3579674	CallExpression	"safe_switch_to_uid ( uid , tracking_gid , safe_uids , safe_gids )"		3579664	1					
ANR	3579675	Callee	safe_switch_to_uid		3579664	0					
ANR	3579676	Identifier	safe_switch_to_uid		3579664	0					
ANR	3579677	ArgumentList	uid		3579664	1					
ANR	3579678	Argument	uid		3579664	0					
ANR	3579679	Identifier	uid		3579664	0					
ANR	3579680	Argument	tracking_gid		3579664	1					
ANR	3579681	Identifier	tracking_gid		3579664	0					
ANR	3579682	Argument	safe_uids		3579664	2					
ANR	3579683	Identifier	safe_uids		3579664	0					
ANR	3579684	Argument	safe_gids		3579664	3					
ANR	3579685	Identifier	safe_gids		3579664	0					
ANR	3579686	IfStatement	if ( r < 0 )		3579664	2					
ANR	3579687	Condition	r < 0	1084:8:27407:27411	3579664	0	True				
ANR	3579688	RelationalExpression	r < 0		3579664	0		<			
ANR	3579689	Identifier	r		3579664	0					
ANR	3579690	PrimaryExpression	0		3579664	1					
ANR	3579691	CompoundStatement		8:8:233:284	3579664	1					
ANR	3579692	IdentifierDeclStatement	char const * reason = safe_switch_to_uid_strerror ( r ) ;	1085:8:27424:27475	3579664	0	True				
ANR	3579693	IdentifierDecl	* reason = safe_switch_to_uid_strerror ( r )		3579664	0					
ANR	3579694	IdentifierDeclType	char const *		3579664	0					
ANR	3579695	Identifier	reason		3579664	1					
ANR	3579696	AssignmentExpression	* reason = safe_switch_to_uid_strerror ( r )		3579664	2		=			
ANR	3579697	Identifier	reason		3579664	0					
ANR	3579698	CallExpression	safe_switch_to_uid_strerror ( r )		3579664	1					
ANR	3579699	Callee	safe_switch_to_uid_strerror		3579664	0					
ANR	3579700	Identifier	safe_switch_to_uid_strerror		3579664	0					
ANR	3579701	ArgumentList	r		3579664	1					
ANR	3579702	Argument	r		3579664	0					
ANR	3579703	Identifier	r		3579664	0					
ANR	3579704	IfStatement	if ( ! reason )		3579664	1					
ANR	3579705	Condition	! reason	1086:12:27489:27495	3579664	0	True				
ANR	3579706	UnaryOperationExpression	! reason		3579664	0					
ANR	3579707	UnaryOperator	!		3579664	0					
ANR	3579708	Identifier	reason		3579664	1					
ANR	3579709	CompoundStatement		9:22:308:308	3579664	1					
ANR	3579710	ExpressionStatement	"reason = """""	1087:12:27513:27524	3579664	0	True				
ANR	3579711	AssignmentExpression	"reason = """""		3579664	0		=			
ANR	3579712	Identifier	reason		3579664	0					
ANR	3579713	PrimaryExpression	""""""		3579664	1					
ANR	3579714	ExpressionStatement	"fatal_error_exit ( 1 , ""error switching to uid %lu, tracking gid %lu: code %d %s"" , ( unsigned long ) uid , tracking_gid , r , reason )"	1089:8:27544:27691	3579664	2	True				
ANR	3579715	CallExpression	"fatal_error_exit ( 1 , ""error switching to uid %lu, tracking gid %lu: code %d %s"" , ( unsigned long ) uid , tracking_gid , r , reason )"		3579664	0					
ANR	3579716	Callee	fatal_error_exit		3579664	0					
ANR	3579717	Identifier	fatal_error_exit		3579664	0					
ANR	3579718	ArgumentList	1		3579664	1					
ANR	3579719	Argument	1		3579664	0					
ANR	3579720	PrimaryExpression	1		3579664	0					
ANR	3579721	Argument	"""error switching to uid %lu, tracking gid %lu: code %d %s"""		3579664	1					
ANR	3579722	PrimaryExpression	"""error switching to uid %lu, tracking gid %lu: code %d %s"""		3579664	0					
ANR	3579723	Argument	( unsigned long ) uid		3579664	2					
ANR	3579724	CastExpression	( unsigned long ) uid		3579664	0					
ANR	3579725	CastTarget	unsigned long		3579664	0					
ANR	3579726	Identifier	uid		3579664	1					
ANR	3579727	Argument	tracking_gid		3579664	3					
ANR	3579728	Identifier	tracking_gid		3579664	0					
ANR	3579729	Argument	r		3579664	4					
ANR	3579730	Identifier	r		3579664	0					
ANR	3579731	Argument	reason		3579664	5					
ANR	3579732	Identifier	reason		3579664	0					
ANR	3579733	IfStatement	if ( ! initial_dir )		3579664	3					
ANR	3579734	Condition	! initial_dir	1094:8:27769:27780	3579664	0	True				
ANR	3579735	UnaryOperationExpression	! initial_dir		3579664	0					
ANR	3579736	UnaryOperator	!		3579664	0					
ANR	3579737	Identifier	initial_dir		3579664	1					
ANR	3579738	CompoundStatement		17:22:592:592	3579664	1					
ANR	3579739	ExpressionStatement	"initial_dir = ""/"""	1095:8:27793:27810	3579664	0	True				
ANR	3579740	AssignmentExpression	"initial_dir = ""/"""		3579664	0		=			
ANR	3579741	Identifier	initial_dir		3579664	0					
ANR	3579742	PrimaryExpression	"""/"""		3579664	1					
ANR	3579743	ExpressionStatement	r = chdir ( initial_dir )	1098:4:27823:27845	3579664	4	True				
ANR	3579744	AssignmentExpression	r = chdir ( initial_dir )		3579664	0		=			
ANR	3579745	Identifier	r		3579664	0					
ANR	3579746	CallExpression	chdir ( initial_dir )		3579664	1					
ANR	3579747	Callee	chdir		3579664	0					
ANR	3579748	Identifier	chdir		3579664	0					
ANR	3579749	ArgumentList	initial_dir		3579664	1					
ANR	3579750	Argument	initial_dir		3579664	0					
ANR	3579751	Identifier	initial_dir		3579664	0					
ANR	3579752	IfStatement	if ( r == - 1 )		3579664	5					
ANR	3579753	Condition	r == - 1	1099:8:27855:27861	3579664	0	True				
ANR	3579754	EqualityExpression	r == - 1		3579664	0		==			
ANR	3579755	Identifier	r		3579664	0					
ANR	3579756	UnaryOperationExpression	- 1		3579664	1					
ANR	3579757	UnaryOperator	-		3579664	0					
ANR	3579758	PrimaryExpression	1		3579664	1					
ANR	3579759	CompoundStatement		22:17:673:673	3579664	1					
ANR	3579760	ExpressionStatement	"fatal_error_exit ( 1 , ""error chdir to (%s)"" , initial_dir )"	1100:8:27874:27929	3579664	0	True				
ANR	3579761	CallExpression	"fatal_error_exit ( 1 , ""error chdir to (%s)"" , initial_dir )"		3579664	0					
ANR	3579762	Callee	fatal_error_exit		3579664	0					
ANR	3579763	Identifier	fatal_error_exit		3579664	0					
ANR	3579764	ArgumentList	1		3579664	1					
ANR	3579765	Argument	1		3579664	0					
ANR	3579766	PrimaryExpression	1		3579664	0					
ANR	3579767	Argument	"""error chdir to (%s)"""		3579664	1					
ANR	3579768	PrimaryExpression	"""error chdir to (%s)"""		3579664	0					
ANR	3579769	Argument	initial_dir		3579664	2					
ANR	3579770	Identifier	initial_dir		3579664	0					
ANR	3579771	ExpressionStatement	r = safe_close_fds_except ( keep_open_fds )	1104:4:27992:28032	3579664	6	True				
ANR	3579772	AssignmentExpression	r = safe_close_fds_except ( keep_open_fds )		3579664	0		=			
ANR	3579773	Identifier	r		3579664	0					
ANR	3579774	CallExpression	safe_close_fds_except ( keep_open_fds )		3579664	1					
ANR	3579775	Callee	safe_close_fds_except		3579664	0					
ANR	3579776	Identifier	safe_close_fds_except		3579664	0					
ANR	3579777	ArgumentList	keep_open_fds		3579664	1					
ANR	3579778	Argument	keep_open_fds		3579664	0					
ANR	3579779	Identifier	keep_open_fds		3579664	0					
ANR	3579780	IfStatement	if ( r == - 1 )		3579664	7					
ANR	3579781	Condition	r == - 1	1105:8:28042:28048	3579664	0	True				
ANR	3579782	EqualityExpression	r == - 1		3579664	0		==			
ANR	3579783	Identifier	r		3579664	0					
ANR	3579784	UnaryOperationExpression	- 1		3579664	1					
ANR	3579785	UnaryOperator	-		3579664	0					
ANR	3579786	PrimaryExpression	1		3579664	1					
ANR	3579787	CompoundStatement		28:17:860:860	3579664	1					
ANR	3579788	ExpressionStatement	"fatal_error_exit ( 1 , ""error closing all file descriptors"" , initial_dir )"	1106:8:28061:28156	3579664	0	True				
ANR	3579789	CallExpression	"fatal_error_exit ( 1 , ""error closing all file descriptors"" , initial_dir )"		3579664	0					
ANR	3579790	Callee	fatal_error_exit		3579664	0					
ANR	3579791	Identifier	fatal_error_exit		3579664	0					
ANR	3579792	ArgumentList	1		3579664	1					
ANR	3579793	Argument	1		3579664	0					
ANR	3579794	PrimaryExpression	1		3579664	0					
ANR	3579795	Argument	"""error closing all file descriptors"""		3579664	1					
ANR	3579796	PrimaryExpression	"""error closing all file descriptors"""		3579664	0					
ANR	3579797	Argument	initial_dir		3579664	2					
ANR	3579798	Identifier	initial_dir		3579664	0					
ANR	3579799	IfStatement	"if ( ! safe_is_id_in_list ( keep_open_fds , 0 ) )"		3579664	8					
ANR	3579800	Condition	"! safe_is_id_in_list ( keep_open_fds , 0 )"	1112:8:28295:28331	3579664	0	True				
ANR	3579801	UnaryOperationExpression	"! safe_is_id_in_list ( keep_open_fds , 0 )"		3579664	0					
ANR	3579802	UnaryOperator	!		3579664	0					
ANR	3579803	CallExpression	"safe_is_id_in_list ( keep_open_fds , 0 )"		3579664	1					
ANR	3579804	Callee	safe_is_id_in_list		3579664	0					
ANR	3579805	Identifier	safe_is_id_in_list		3579664	0					
ANR	3579806	ArgumentList	keep_open_fds		3579664	1					
ANR	3579807	Argument	keep_open_fds		3579664	0					
ANR	3579808	Identifier	keep_open_fds		3579664	0					
ANR	3579809	Argument	0		3579664	1					
ANR	3579810	PrimaryExpression	0		3579664	0					
ANR	3579811	CompoundStatement		35:47:1143:1143	3579664	1					
ANR	3579812	ExpressionStatement	"r = safe_open_std_file ( 0 , stdin_filename )"	1113:8:28344:28385	3579664	0	True				
ANR	3579813	AssignmentExpression	"r = safe_open_std_file ( 0 , stdin_filename )"		3579664	0		=			
ANR	3579814	Identifier	r		3579664	0					
ANR	3579815	CallExpression	"safe_open_std_file ( 0 , stdin_filename )"		3579664	1					
ANR	3579816	Callee	safe_open_std_file		3579664	0					
ANR	3579817	Identifier	safe_open_std_file		3579664	0					
ANR	3579818	ArgumentList	0		3579664	1					
ANR	3579819	Argument	0		3579664	0					
ANR	3579820	PrimaryExpression	0		3579664	0					
ANR	3579821	Argument	stdin_filename		3579664	1					
ANR	3579822	Identifier	stdin_filename		3579664	0					
ANR	3579823	IfStatement	if ( r == - 1 )		3579664	1					
ANR	3579824	Condition	r == - 1	1114:12:28399:28405	3579664	0	True				
ANR	3579825	EqualityExpression	r == - 1		3579664	0		==			
ANR	3579826	Identifier	r		3579664	0					
ANR	3579827	UnaryOperationExpression	- 1		3579664	1					
ANR	3579828	UnaryOperator	-		3579664	0					
ANR	3579829	PrimaryExpression	1		3579664	1					
ANR	3579830	CompoundStatement		37:21:1217:1217	3579664	1					
ANR	3579831	ExpressionStatement	"fatal_error_exit ( 1 , ""error opening stdin"" )"	1115:12:28422:28464	3579664	0	True				
ANR	3579832	CallExpression	"fatal_error_exit ( 1 , ""error opening stdin"" )"		3579664	0					
ANR	3579833	Callee	fatal_error_exit		3579664	0					
ANR	3579834	Identifier	fatal_error_exit		3579664	0					
ANR	3579835	ArgumentList	1		3579664	1					
ANR	3579836	Argument	1		3579664	0					
ANR	3579837	PrimaryExpression	1		3579664	0					
ANR	3579838	Argument	"""error opening stdin"""		3579664	1					
ANR	3579839	PrimaryExpression	"""error opening stdin"""		3579664	0					
ANR	3579840	IfStatement	"if ( ! safe_is_id_in_list ( keep_open_fds , 1 ) )"		3579664	9					
ANR	3579841	Condition	"! safe_is_id_in_list ( keep_open_fds , 1 )"	1119:8:28491:28527	3579664	0	True				
ANR	3579842	UnaryOperationExpression	"! safe_is_id_in_list ( keep_open_fds , 1 )"		3579664	0					
ANR	3579843	UnaryOperator	!		3579664	0					
ANR	3579844	CallExpression	"safe_is_id_in_list ( keep_open_fds , 1 )"		3579664	1					
ANR	3579845	Callee	safe_is_id_in_list		3579664	0					
ANR	3579846	Identifier	safe_is_id_in_list		3579664	0					
ANR	3579847	ArgumentList	keep_open_fds		3579664	1					
ANR	3579848	Argument	keep_open_fds		3579664	0					
ANR	3579849	Identifier	keep_open_fds		3579664	0					
ANR	3579850	Argument	1		3579664	1					
ANR	3579851	PrimaryExpression	1		3579664	0					
ANR	3579852	CompoundStatement		42:47:1339:1339	3579664	1					
ANR	3579853	ExpressionStatement	"r = safe_open_std_file ( 1 , stdout_filename )"	1120:8:28540:28582	3579664	0	True				
ANR	3579854	AssignmentExpression	"r = safe_open_std_file ( 1 , stdout_filename )"		3579664	0		=			
ANR	3579855	Identifier	r		3579664	0					
ANR	3579856	CallExpression	"safe_open_std_file ( 1 , stdout_filename )"		3579664	1					
ANR	3579857	Callee	safe_open_std_file		3579664	0					
ANR	3579858	Identifier	safe_open_std_file		3579664	0					
ANR	3579859	ArgumentList	1		3579664	1					
ANR	3579860	Argument	1		3579664	0					
ANR	3579861	PrimaryExpression	1		3579664	0					
ANR	3579862	Argument	stdout_filename		3579664	1					
ANR	3579863	Identifier	stdout_filename		3579664	0					
ANR	3579864	IfStatement	if ( r == - 1 )		3579664	1					
ANR	3579865	Condition	r == - 1	1121:12:28596:28602	3579664	0	True				
ANR	3579866	EqualityExpression	r == - 1		3579664	0		==			
ANR	3579867	Identifier	r		3579664	0					
ANR	3579868	UnaryOperationExpression	- 1		3579664	1					
ANR	3579869	UnaryOperator	-		3579664	0					
ANR	3579870	PrimaryExpression	1		3579664	1					
ANR	3579871	CompoundStatement		44:21:1414:1414	3579664	1					
ANR	3579872	ExpressionStatement	"fatal_error_exit ( 1 , ""error opening stdout"" )"	1122:12:28619:28662	3579664	0	True				
ANR	3579873	CallExpression	"fatal_error_exit ( 1 , ""error opening stdout"" )"		3579664	0					
ANR	3579874	Callee	fatal_error_exit		3579664	0					
ANR	3579875	Identifier	fatal_error_exit		3579664	0					
ANR	3579876	ArgumentList	1		3579664	1					
ANR	3579877	Argument	1		3579664	0					
ANR	3579878	PrimaryExpression	1		3579664	0					
ANR	3579879	Argument	"""error opening stdout"""		3579664	1					
ANR	3579880	PrimaryExpression	"""error opening stdout"""		3579664	0					
ANR	3579881	IfStatement	"if ( ! safe_is_id_in_list ( keep_open_fds , 2 ) )"		3579664	10					
ANR	3579882	Condition	"! safe_is_id_in_list ( keep_open_fds , 2 )"	1126:8:28689:28725	3579664	0	True				
ANR	3579883	UnaryOperationExpression	"! safe_is_id_in_list ( keep_open_fds , 2 )"		3579664	0					
ANR	3579884	UnaryOperator	!		3579664	0					
ANR	3579885	CallExpression	"safe_is_id_in_list ( keep_open_fds , 2 )"		3579664	1					
ANR	3579886	Callee	safe_is_id_in_list		3579664	0					
ANR	3579887	Identifier	safe_is_id_in_list		3579664	0					
ANR	3579888	ArgumentList	keep_open_fds		3579664	1					
ANR	3579889	Argument	keep_open_fds		3579664	0					
ANR	3579890	Identifier	keep_open_fds		3579664	0					
ANR	3579891	Argument	2		3579664	1					
ANR	3579892	PrimaryExpression	2		3579664	0					
ANR	3579893	CompoundStatement		49:47:1537:1537	3579664	1					
ANR	3579894	ExpressionStatement	"r = safe_open_std_file ( 2 , stderr_filename )"	1127:8:28738:28780	3579664	0	True				
ANR	3579895	AssignmentExpression	"r = safe_open_std_file ( 2 , stderr_filename )"		3579664	0		=			
ANR	3579896	Identifier	r		3579664	0					
ANR	3579897	CallExpression	"safe_open_std_file ( 2 , stderr_filename )"		3579664	1					
ANR	3579898	Callee	safe_open_std_file		3579664	0					
ANR	3579899	Identifier	safe_open_std_file		3579664	0					
ANR	3579900	ArgumentList	2		3579664	1					
ANR	3579901	Argument	2		3579664	0					
ANR	3579902	PrimaryExpression	2		3579664	0					
ANR	3579903	Argument	stderr_filename		3579664	1					
ANR	3579904	Identifier	stderr_filename		3579664	0					
ANR	3579905	IfStatement	if ( r == - 1 )		3579664	1					
ANR	3579906	Condition	r == - 1	1128:12:28794:28800	3579664	0	True				
ANR	3579907	EqualityExpression	r == - 1		3579664	0		==			
ANR	3579908	Identifier	r		3579664	0					
ANR	3579909	UnaryOperationExpression	- 1		3579664	1					
ANR	3579910	UnaryOperator	-		3579664	0					
ANR	3579911	PrimaryExpression	1		3579664	1					
ANR	3579912	CompoundStatement		51:21:1612:1612	3579664	1					
ANR	3579913	ExpressionStatement	"fatal_error_exit ( 1 , ""error opening stderr"" )"	1129:12:28817:28860	3579664	0	True				
ANR	3579914	CallExpression	"fatal_error_exit ( 1 , ""error opening stderr"" )"		3579664	0					
ANR	3579915	Callee	fatal_error_exit		3579664	0					
ANR	3579916	Identifier	fatal_error_exit		3579664	0					
ANR	3579917	ArgumentList	1		3579664	1					
ANR	3579918	Argument	1		3579664	0					
ANR	3579919	PrimaryExpression	1		3579664	0					
ANR	3579920	Argument	"""error opening stderr"""		3579664	1					
ANR	3579921	PrimaryExpression	"""error opening stderr"""		3579664	0					
ANR	3579922	IfStatement	if ( is_std_univ )		3579664	11					
ANR	3579923	Condition	is_std_univ	1139:8:29163:29173	3579664	0	True				
ANR	3579924	Identifier	is_std_univ		3579664	0					
ANR	3579925	CompoundStatement		64:8:2013:2058	3579664	1					
ANR	3579926	IdentifierDeclStatement	unsigned long persona = PER_LINUX32 | 0x40000 ;	1141:8:29204:29249	3579664	0	True				
ANR	3579927	IdentifierDecl	persona = PER_LINUX32 | 0x40000		3579664	0					
ANR	3579928	IdentifierDeclType	unsigned long		3579664	0					
ANR	3579929	Identifier	persona		3579664	1					
ANR	3579930	AssignmentExpression	persona = PER_LINUX32 | 0x40000		3579664	2		=			
ANR	3579931	Identifier	persona		3579664	0					
ANR	3579932	InclusiveOrExpression	PER_LINUX32 | 0x40000		3579664	1		|			
ANR	3579933	Identifier	PER_LINUX32		3579664	0					
ANR	3579934	PrimaryExpression	0x40000		3579664	1					
ANR	3579935	IfStatement	"if ( syscall ( SYS_personality , persona ) == - 1 )"		3579664	1					
ANR	3579936	Condition	"syscall ( SYS_personality , persona ) == - 1"	1145:12:29333:29371	3579664	0	True				
ANR	3579937	EqualityExpression	"syscall ( SYS_personality , persona ) == - 1"		3579664	0		==			
ANR	3579938	CallExpression	"syscall ( SYS_personality , persona )"		3579664	0					
ANR	3579939	Callee	syscall		3579664	0					
ANR	3579940	Identifier	syscall		3579664	0					
ANR	3579941	ArgumentList	SYS_personality		3579664	1					
ANR	3579942	Argument	SYS_personality		3579664	0					
ANR	3579943	Identifier	SYS_personality		3579664	0					
ANR	3579944	Argument	persona		3579664	1					
ANR	3579945	Identifier	persona		3579664	0					
ANR	3579946	UnaryOperationExpression	- 1		3579664	1					
ANR	3579947	UnaryOperator	-		3579664	0					
ANR	3579948	PrimaryExpression	1		3579664	1					
ANR	3579949	CompoundStatement		68:53:2183:2183	3579664	1					
ANR	3579950	ExpressionStatement	"fatal_error_exit ( 1 , ""error setting personality: %s"" )"	1146:12:29388:29440	3579664	0	True				
ANR	3579951	CallExpression	"fatal_error_exit ( 1 , ""error setting personality: %s"" )"		3579664	0					
ANR	3579952	Callee	fatal_error_exit		3579664	0					
ANR	3579953	Identifier	fatal_error_exit		3579664	0					
ANR	3579954	ArgumentList	1		3579664	1					
ANR	3579955	Argument	1		3579664	0					
ANR	3579956	PrimaryExpression	1		3579664	0					
ANR	3579957	Argument	"""error setting personality: %s"""		3579664	1					
ANR	3579958	PrimaryExpression	"""error setting personality: %s"""		3579664	0					
ANR	3579959	ExpressionStatement	"r = execve ( exec_name , ( char * * ) args , ( char * * ) env )"	1152:4:29500:29552	3579664	12	True				
ANR	3579960	AssignmentExpression	"r = execve ( exec_name , ( char * * ) args , ( char * * ) env )"		3579664	0		=			
ANR	3579961	Identifier	r		3579664	0					
ANR	3579962	CallExpression	"execve ( exec_name , ( char * * ) args , ( char * * ) env )"		3579664	1					
ANR	3579963	Callee	execve		3579664	0					
ANR	3579964	Identifier	execve		3579664	0					
ANR	3579965	ArgumentList	exec_name		3579664	1					
ANR	3579966	Argument	exec_name		3579664	0					
ANR	3579967	Identifier	exec_name		3579664	0					
ANR	3579968	Argument	( char * * ) args		3579664	1					
ANR	3579969	CastExpression	( char * * ) args		3579664	0					
ANR	3579970	CastTarget	char * *		3579664	0					
ANR	3579971	Identifier	args		3579664	1					
ANR	3579972	Argument	( char * * ) env		3579664	2					
ANR	3579973	CastExpression	( char * * ) env		3579664	0					
ANR	3579974	CastTarget	char * *		3579664	0					
ANR	3579975	Identifier	env		3579664	1					
ANR	3579976	IfStatement	if ( r == - 1 )		3579664	13					
ANR	3579977	Condition	r == - 1	1153:8:29562:29568	3579664	0	True				
ANR	3579978	EqualityExpression	r == - 1		3579664	0		==			
ANR	3579979	Identifier	r		3579664	0					
ANR	3579980	UnaryOperationExpression	- 1		3579664	1					
ANR	3579981	UnaryOperator	-		3579664	0					
ANR	3579982	PrimaryExpression	1		3579664	1					
ANR	3579983	CompoundStatement		76:17:2380:2380	3579664	1					
ANR	3579984	ExpressionStatement	"fatal_error_exit ( 1 , ""error exec'ing: %s"" , strerror ( errno ) )"	1154:8:29581:29639	3579664	0	True				
ANR	3579985	CallExpression	"fatal_error_exit ( 1 , ""error exec'ing: %s"" , strerror ( errno ) )"		3579664	0					
ANR	3579986	Callee	fatal_error_exit		3579664	0					
ANR	3579987	Identifier	fatal_error_exit		3579664	0					
ANR	3579988	ArgumentList	1		3579664	1					
ANR	3579989	Argument	1		3579664	0					
ANR	3579990	PrimaryExpression	1		3579664	0					
ANR	3579991	Argument	"""error exec'ing: %s"""		3579664	1					
ANR	3579992	PrimaryExpression	"""error exec'ing: %s"""		3579664	0					
ANR	3579993	Argument	strerror ( errno )		3579664	2					
ANR	3579994	CallExpression	strerror ( errno )		3579664	0					
ANR	3579995	Callee	strerror		3579664	0					
ANR	3579996	Identifier	strerror		3579664	0					
ANR	3579997	ArgumentList	errno		3579664	1					
ANR	3579998	Argument	errno		3579664	0					
ANR	3579999	Identifier	errno		3579664	0					
ANR	3580000	ReturnStatement	return 0 ;	1157:4:29652:29660	3579664	14	True				
ANR	3580001	PrimaryExpression	0		3579664	0					
ANR	3580002	ReturnType	int		3579664	1					
ANR	3580003	Identifier	safe_exec_as_user		3579664	2					
ANR	3580004	ParameterList	"uid_t uid , gid_t tracking_gid , safe_id_range_list * safe_uids , safe_id_range_list * safe_gids , const char * exec_name , char * * args , char * * env , safe_id_range_list * keep_open_fds , const char * stdin_filename , const char * stdout_filename , const char * stderr_filename , const char * initial_dir , int is_std_univ"		3579664	3					
ANR	3580005	Parameter	uid_t uid	1065:18:26670:26678	3579664	0	True				
ANR	3580006	ParameterType	uid_t		3579664	0					
ANR	3580007	Identifier	uid		3579664	1					
ANR	3580008	Parameter	gid_t tracking_gid	1066:18:26699:26716	3579664	1	True				
ANR	3580009	ParameterType	gid_t		3579664	0					
ANR	3580010	Identifier	tracking_gid		3579664	1					
ANR	3580011	Parameter	safe_id_range_list * safe_uids	1067:18:26737:26765	3579664	2	True				
ANR	3580012	ParameterType	safe_id_range_list *		3579664	0					
ANR	3580013	Identifier	safe_uids		3579664	1					
ANR	3580014	Parameter	safe_id_range_list * safe_gids	1068:18:26786:26814	3579664	3	True				
ANR	3580015	ParameterType	safe_id_range_list *		3579664	0					
ANR	3580016	Identifier	safe_gids		3579664	1					
ANR	3580017	Parameter	const char * exec_name	1069:18:26835:26855	3579664	4	True				
ANR	3580018	ParameterType	const char *		3579664	0					
ANR	3580019	Identifier	exec_name		3579664	1					
ANR	3580020	Parameter	char * * args	1070:18:26876:26886	3579664	5	True				
ANR	3580021	ParameterType	char * *		3579664	0					
ANR	3580022	Identifier	args		3579664	1					
ANR	3580023	Parameter	char * * env	1071:18:26907:26916	3579664	6	True				
ANR	3580024	ParameterType	char * *		3579664	0					
ANR	3580025	Identifier	env		3579664	1					
ANR	3580026	Parameter	safe_id_range_list * keep_open_fds	1072:18:26937:26969	3579664	7	True				
ANR	3580027	ParameterType	safe_id_range_list *		3579664	0					
ANR	3580028	Identifier	keep_open_fds		3579664	1					
ANR	3580029	Parameter	const char * stdin_filename	1073:18:26990:27015	3579664	8	True				
ANR	3580030	ParameterType	const char *		3579664	0					
ANR	3580031	Identifier	stdin_filename		3579664	1					
ANR	3580032	Parameter	const char * stdout_filename	1074:18:27036:27062	3579664	9	True				
ANR	3580033	ParameterType	const char *		3579664	0					
ANR	3580034	Identifier	stdout_filename		3579664	1					
ANR	3580035	Parameter	const char * stderr_filename	1075:18:27083:27109	3579664	10	True				
ANR	3580036	ParameterType	const char *		3579664	0					
ANR	3580037	Identifier	stderr_filename		3579664	1					
ANR	3580038	Parameter	const char * initial_dir	1076:18:27130:27152	3579664	11	True				
ANR	3580039	ParameterType	const char *		3579664	0					
ANR	3580040	Identifier	initial_dir		3579664	1					
ANR	3580041	Parameter	int is_std_univ	1077:18:27173:27187	3579664	12	True				
ANR	3580042	ParameterType	int		3579664	0					
ANR	3580043	Identifier	is_std_univ		3579664	1					
ANR	3580044	CFGEntryNode	ENTRY		3579664		True				
ANR	3580045	CFGExitNode	EXIT		3579664		True				
ANR	3580046	Symbol	tracking_gid		3579664						
ANR	3580047	Symbol	reason		3579664						
ANR	3580048	Symbol	syscall		3579664						
ANR	3580049	Symbol	safe_uids		3579664						
ANR	3580050	Symbol	stdin_filename		3579664						
ANR	3580051	Symbol	safe_switch_to_uid		3579664						
ANR	3580052	Symbol	safe_close_fds_except		3579664						
ANR	3580053	Symbol	stdout_filename		3579664						
ANR	3580054	Symbol	safe_is_id_in_list		3579664						
ANR	3580055	Symbol	uid		3579664						
ANR	3580056	Symbol	safe_switch_to_uid_strerror		3579664						
ANR	3580057	Symbol	is_std_univ		3579664						
ANR	3580058	Symbol	safe_open_std_file		3579664						
ANR	3580059	Symbol	initial_dir		3579664						
ANR	3580060	Symbol	errno		3579664						
ANR	3580061	Symbol	persona		3579664						
ANR	3580062	Symbol	execve		3579664						
ANR	3580063	Symbol	chdir		3579664						
ANR	3580064	Symbol	env		3579664						
ANR	3580065	Symbol	PER_LINUX32		3579664						
ANR	3580066	Symbol	args		3579664						
ANR	3580067	Symbol	strerror		3579664						
ANR	3580068	Symbol	keep_open_fds		3579664						
ANR	3580069	Symbol	r		3579664						
ANR	3580070	Symbol	safe_gids		3579664						
ANR	3580071	Symbol	exec_name		3579664						
ANR	3580072	Symbol	SYS_personality		3579664						
ANR	3580073	Symbol	stderr_filename		3579664						
ANR	3580074	Function	opendir_with_fd	1176:0:29988:31029							
ANR	3580075	FunctionDef	"opendir_with_fd (const char * path , DIR * * dir_ptr , int * fd_ptr , struct stat * stat_buf)"		3580074	0					
ANR	3580076	CompoundStatement		1179:0:30101:31029	3580074	0					
ANR	3580077	IdentifierDeclStatement	int fd = - 1 ;	1180:4:30107:30118	3580074	0	True				
ANR	3580078	IdentifierDecl	fd = - 1		3580074	0					
ANR	3580079	IdentifierDeclType	int		3580074	0					
ANR	3580080	Identifier	fd		3580074	1					
ANR	3580081	AssignmentExpression	fd = - 1		3580074	2		=			
ANR	3580082	Identifier	fd		3580074	0					
ANR	3580083	UnaryOperationExpression	- 1		3580074	1					
ANR	3580084	UnaryOperator	-		3580074	0					
ANR	3580085	PrimaryExpression	1		3580074	1					
ANR	3580086	IdentifierDeclStatement	struct stat tmp_stat_buf ;	1181:4:30124:30148	3580074	1	True				
ANR	3580087	IdentifierDecl	tmp_stat_buf		3580074	0					
ANR	3580088	IdentifierDeclType	struct stat		3580074	0					
ANR	3580089	Identifier	tmp_stat_buf		3580074	1					
ANR	3580090	IdentifierDeclStatement	DIR * dir = NULL ;	1182:4:30154:30169	3580074	2	True				
ANR	3580091	IdentifierDecl	* dir = NULL		3580074	0					
ANR	3580092	IdentifierDeclType	DIR *		3580074	0					
ANR	3580093	Identifier	dir		3580074	1					
ANR	3580094	AssignmentExpression	* dir = NULL		3580074	2		=			
ANR	3580095	Identifier	NULL		3580074	0					
ANR	3580096	Identifier	NULL		3580074	1					
ANR	3580097	IdentifierDeclStatement	dev_t dev ;	1183:4:30175:30184	3580074	3	True				
ANR	3580098	IdentifierDecl	dev		3580074	0					
ANR	3580099	IdentifierDeclType	dev_t		3580074	0					
ANR	3580100	Identifier	dev		3580074	1					
ANR	3580101	IdentifierDeclStatement	ino_t ino ;	1184:4:30190:30199	3580074	4	True				
ANR	3580102	IdentifierDecl	ino		3580074	0					
ANR	3580103	IdentifierDeclType	ino_t		3580074	0					
ANR	3580104	Identifier	ino		3580074	1					
ANR	3580105	ExpressionStatement	"fd = open ( path , O_RDONLY )"	1186:4:30206:30231	3580074	5	True				
ANR	3580106	AssignmentExpression	"fd = open ( path , O_RDONLY )"		3580074	0		=			
ANR	3580107	Identifier	fd		3580074	0					
ANR	3580108	CallExpression	"open ( path , O_RDONLY )"		3580074	1					
ANR	3580109	Callee	open		3580074	0					
ANR	3580110	Identifier	open		3580074	0					
ANR	3580111	ArgumentList	path		3580074	1					
ANR	3580112	Argument	path		3580074	0					
ANR	3580113	Identifier	path		3580074	0					
ANR	3580114	Argument	O_RDONLY		3580074	1					
ANR	3580115	Identifier	O_RDONLY		3580074	0					
ANR	3580116	IfStatement	if ( fd == - 1 )		3580074	6					
ANR	3580117	Condition	fd == - 1	1187:8:30241:30248	3580074	0	True				
ANR	3580118	EqualityExpression	fd == - 1		3580074	0		==			
ANR	3580119	Identifier	fd		3580074	0					
ANR	3580120	UnaryOperationExpression	- 1		3580074	1					
ANR	3580121	UnaryOperator	-		3580074	0					
ANR	3580122	PrimaryExpression	1		3580074	1					
ANR	3580123	CompoundStatement		9:18:149:149	3580074	1					
ANR	3580124	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1188:8:30261:30289	3580074	0	True				
ANR	3580125	Identifier	OPENDIR_WITH_FD_FAILURE		3580074	0					
ANR	3580126	IfStatement	"if ( fstat ( fd , & tmp_stat_buf ) == - 1 )"		3580074	7					
ANR	3580127	Condition	"fstat ( fd , & tmp_stat_buf ) == - 1"	1190:8:30305:30334	3580074	0	True				
ANR	3580128	EqualityExpression	"fstat ( fd , & tmp_stat_buf ) == - 1"		3580074	0		==			
ANR	3580129	CallExpression	"fstat ( fd , & tmp_stat_buf )"		3580074	0					
ANR	3580130	Callee	fstat		3580074	0					
ANR	3580131	Identifier	fstat		3580074	0					
ANR	3580132	ArgumentList	fd		3580074	1					
ANR	3580133	Argument	fd		3580074	0					
ANR	3580134	Identifier	fd		3580074	0					
ANR	3580135	Argument	& tmp_stat_buf		3580074	1					
ANR	3580136	UnaryOperationExpression	& tmp_stat_buf		3580074	0					
ANR	3580137	UnaryOperator	&		3580074	0					
ANR	3580138	Identifier	tmp_stat_buf		3580074	1					
ANR	3580139	UnaryOperationExpression	- 1		3580074	1					
ANR	3580140	UnaryOperator	-		3580074	0					
ANR	3580141	PrimaryExpression	1		3580074	1					
ANR	3580142	CompoundStatement		12:40:235:235	3580074	1					
ANR	3580143	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1191:8:30347:30375	3580074	0	True				
ANR	3580144	Identifier	OPENDIR_WITH_FD_FAILURE		3580074	0					
ANR	3580145	ExpressionStatement	dir = opendir ( path )	1193:4:30387:30406	3580074	8	True				
ANR	3580146	AssignmentExpression	dir = opendir ( path )		3580074	0		=			
ANR	3580147	Identifier	dir		3580074	0					
ANR	3580148	CallExpression	opendir ( path )		3580074	1					
ANR	3580149	Callee	opendir		3580074	0					
ANR	3580150	Identifier	opendir		3580074	0					
ANR	3580151	ArgumentList	path		3580074	1					
ANR	3580152	Argument	path		3580074	0					
ANR	3580153	Identifier	path		3580074	0					
ANR	3580154	IfStatement	if ( dir == NULL )		3580074	9					
ANR	3580155	Condition	dir == NULL	1194:8:30416:30426	3580074	0	True				
ANR	3580156	EqualityExpression	dir == NULL		3580074	0		==			
ANR	3580157	Identifier	dir		3580074	0					
ANR	3580158	Identifier	NULL		3580074	1					
ANR	3580159	CompoundStatement		16:21:327:327	3580074	1					
ANR	3580160	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1195:8:30439:30467	3580074	0	True				
ANR	3580161	Identifier	OPENDIR_WITH_FD_FAILURE		3580074	0					
ANR	3580162	ExpressionStatement	dev = tmp_stat_buf . st_dev	1197:4:30479:30504	3580074	10	True				
ANR	3580163	AssignmentExpression	dev = tmp_stat_buf . st_dev		3580074	0		=			
ANR	3580164	Identifier	dev		3580074	0					
ANR	3580165	MemberAccess	tmp_stat_buf . st_dev		3580074	1					
ANR	3580166	Identifier	tmp_stat_buf		3580074	0					
ANR	3580167	Identifier	st_dev		3580074	1					
ANR	3580168	ExpressionStatement	ino = tmp_stat_buf . st_ino	1198:4:30510:30535	3580074	11	True				
ANR	3580169	AssignmentExpression	ino = tmp_stat_buf . st_ino		3580074	0		=			
ANR	3580170	Identifier	ino		3580074	0					
ANR	3580171	MemberAccess	tmp_stat_buf . st_ino		3580074	1					
ANR	3580172	Identifier	tmp_stat_buf		3580074	0					
ANR	3580173	Identifier	st_ino		3580074	1					
ANR	3580174	IfStatement	"if ( lstat ( ""."" , & tmp_stat_buf ) == - 1 )"		3580074	12					
ANR	3580175	Condition	"lstat ( ""."" , & tmp_stat_buf ) == - 1"	1199:8:30545:30575	3580074	0	True				
ANR	3580176	EqualityExpression	"lstat ( ""."" , & tmp_stat_buf ) == - 1"		3580074	0		==			
ANR	3580177	CallExpression	"lstat ( ""."" , & tmp_stat_buf )"		3580074	0					
ANR	3580178	Callee	lstat		3580074	0					
ANR	3580179	Identifier	lstat		3580074	0					
ANR	3580180	ArgumentList	"""."""		3580074	1					
ANR	3580181	Argument	"""."""		3580074	0					
ANR	3580182	PrimaryExpression	"""."""		3580074	0					
ANR	3580183	Argument	& tmp_stat_buf		3580074	1					
ANR	3580184	UnaryOperationExpression	& tmp_stat_buf		3580074	0					
ANR	3580185	UnaryOperator	&		3580074	0					
ANR	3580186	Identifier	tmp_stat_buf		3580074	1					
ANR	3580187	UnaryOperationExpression	- 1		3580074	1					
ANR	3580188	UnaryOperator	-		3580074	0					
ANR	3580189	PrimaryExpression	1		3580074	1					
ANR	3580190	CompoundStatement		21:41:476:476	3580074	1					
ANR	3580191	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1200:8:30588:30616	3580074	0	True				
ANR	3580192	Identifier	OPENDIR_WITH_FD_FAILURE		3580074	0					
ANR	3580193	IfStatement	if ( ( tmp_stat_buf . st_dev != dev ) || ( tmp_stat_buf . st_ino != ino ) )		3580074	13					
ANR	3580194	Condition	( tmp_stat_buf . st_dev != dev ) || ( tmp_stat_buf . st_ino != ino )	1202:8:30632:30691	3580074	0	True				
ANR	3580195	OrExpression	( tmp_stat_buf . st_dev != dev ) || ( tmp_stat_buf . st_ino != ino )		3580074	0		||			
ANR	3580196	EqualityExpression	tmp_stat_buf . st_dev != dev		3580074	0		!=			
ANR	3580197	MemberAccess	tmp_stat_buf . st_dev		3580074	0					
ANR	3580198	Identifier	tmp_stat_buf		3580074	0					
ANR	3580199	Identifier	st_dev		3580074	1					
ANR	3580200	Identifier	dev		3580074	1					
ANR	3580201	EqualityExpression	tmp_stat_buf . st_ino != ino		3580074	1		!=			
ANR	3580202	MemberAccess	tmp_stat_buf . st_ino		3580074	0					
ANR	3580203	Identifier	tmp_stat_buf		3580074	0					
ANR	3580204	Identifier	st_ino		3580074	1					
ANR	3580205	Identifier	ino		3580074	1					
ANR	3580206	CompoundStatement		24:70:592:592	3580074	1					
ANR	3580207	GotoStatement	goto OPENDIR_WITH_FD_FAILURE ;	1203:8:30704:30732	3580074	0	True				
ANR	3580208	Identifier	OPENDIR_WITH_FD_FAILURE		3580074	0					
ANR	3580209	ExpressionStatement	* dir_ptr = dir	1206:4:30745:30759	3580074	14	True				
ANR	3580210	AssignmentExpression	* dir_ptr = dir		3580074	0		=			
ANR	3580211	UnaryOperationExpression	* dir_ptr		3580074	0					
ANR	3580212	UnaryOperator	*		3580074	0					
ANR	3580213	Identifier	dir_ptr		3580074	1					
ANR	3580214	Identifier	dir		3580074	1					
ANR	3580215	ExpressionStatement	* fd_ptr = fd	1207:4:30765:30777	3580074	15	True				
ANR	3580216	AssignmentExpression	* fd_ptr = fd		3580074	0		=			
ANR	3580217	UnaryOperationExpression	* fd_ptr		3580074	0					
ANR	3580218	UnaryOperator	*		3580074	0					
ANR	3580219	Identifier	fd_ptr		3580074	1					
ANR	3580220	Identifier	fd		3580074	1					
ANR	3580221	IfStatement	if ( stat_buf != NULL )		3580074	16					
ANR	3580222	Condition	stat_buf != NULL	1208:8:30787:30802	3580074	0	True				
ANR	3580223	EqualityExpression	stat_buf != NULL		3580074	0		!=			
ANR	3580224	Identifier	stat_buf		3580074	0					
ANR	3580225	Identifier	NULL		3580074	1					
ANR	3580226	CompoundStatement		30:26:703:703	3580074	1					
ANR	3580227	ExpressionStatement	"memcpy ( stat_buf , & tmp_stat_buf , sizeof ( struct stat ) )"	1209:8:30815:30867	3580074	0	True				
ANR	3580228	CallExpression	"memcpy ( stat_buf , & tmp_stat_buf , sizeof ( struct stat ) )"		3580074	0					
ANR	3580229	Callee	memcpy		3580074	0					
ANR	3580230	Identifier	memcpy		3580074	0					
ANR	3580231	ArgumentList	stat_buf		3580074	1					
ANR	3580232	Argument	stat_buf		3580074	0					
ANR	3580233	Identifier	stat_buf		3580074	0					
ANR	3580234	Argument	& tmp_stat_buf		3580074	1					
ANR	3580235	UnaryOperationExpression	& tmp_stat_buf		3580074	0					
ANR	3580236	UnaryOperator	&		3580074	0					
ANR	3580237	Identifier	tmp_stat_buf		3580074	1					
ANR	3580238	Argument	sizeof ( struct stat )		3580074	2					
ANR	3580239	SizeofExpression	sizeof ( struct stat )		3580074	0					
ANR	3580240	Sizeof	sizeof		3580074	0					
ANR	3580241	SizeofOperand	struct stat		3580074	1					
ANR	3580242	ReturnStatement	return 0 ;	1211:4:30879:30887	3580074	17	True				
ANR	3580243	PrimaryExpression	0		3580074	0					
ANR	3580244	Label	OPENDIR_WITH_FD_FAILURE :	1213:2:30892:30915	3580074	18	True				
ANR	3580245	Identifier	OPENDIR_WITH_FD_FAILURE		3580074	0					
ANR	3580246	IfStatement	if ( fd != - 1 )		3580074	19					
ANR	3580247	Condition	fd != - 1	1214:8:30925:30932	3580074	0	True				
ANR	3580248	EqualityExpression	fd != - 1		3580074	0		!=			
ANR	3580249	Identifier	fd		3580074	0					
ANR	3580250	UnaryOperationExpression	- 1		3580074	1					
ANR	3580251	UnaryOperator	-		3580074	0					
ANR	3580252	PrimaryExpression	1		3580074	1					
ANR	3580253	CompoundStatement		36:18:833:833	3580074	1					
ANR	3580254	ExpressionStatement	close ( fd )	1215:8:30945:30954	3580074	0	True				
ANR	3580255	CallExpression	close ( fd )		3580074	0					
ANR	3580256	Callee	close		3580074	0					
ANR	3580257	Identifier	close		3580074	0					
ANR	3580258	ArgumentList	fd		3580074	1					
ANR	3580259	Argument	fd		3580074	0					
ANR	3580260	Identifier	fd		3580074	0					
ANR	3580261	IfStatement	if ( dir != NULL )		3580074	20					
ANR	3580262	Condition	dir != NULL	1217:8:30970:30980	3580074	0	True				
ANR	3580263	EqualityExpression	dir != NULL		3580074	0		!=			
ANR	3580264	Identifier	dir		3580074	0					
ANR	3580265	Identifier	NULL		3580074	1					
ANR	3580266	CompoundStatement		39:21:881:881	3580074	1					
ANR	3580267	ExpressionStatement	closedir ( dir )	1218:8:30993:31006	3580074	0	True				
ANR	3580268	CallExpression	closedir ( dir )		3580074	0					
ANR	3580269	Callee	closedir		3580074	0					
ANR	3580270	Identifier	closedir		3580074	0					
ANR	3580271	ArgumentList	dir		3580074	1					
ANR	3580272	Argument	dir		3580074	0					
ANR	3580273	Identifier	dir		3580074	0					
ANR	3580274	ReturnStatement	return - 1 ;	1220:4:31018:31027	3580074	21	True				
ANR	3580275	UnaryOperationExpression	- 1		3580074	0					
ANR	3580276	UnaryOperator	-		3580074	0					
ANR	3580277	PrimaryExpression	1		3580074	1					
ANR	3580278	ReturnType	static int		3580074	1					
ANR	3580279	Identifier	opendir_with_fd		3580074	2					
ANR	3580280	ParameterList	"const char * path , DIR * * dir_ptr , int * fd_ptr , struct stat * stat_buf"		3580074	3					
ANR	3580281	Parameter	const char * path	1177:16:30015:30030	3580074	0	True				
ANR	3580282	ParameterType	const char *		3580074	0					
ANR	3580283	Identifier	path		3580074	1					
ANR	3580284	Parameter	DIR * * dir_ptr	1178:16:30049:30062	3580074	1	True				
ANR	3580285	ParameterType	DIR * *		3580074	0					
ANR	3580286	Identifier	dir_ptr		3580074	1					
ANR	3580287	Parameter	int * fd_ptr	1178:32:30065:30075	3580074	2	True				
ANR	3580288	ParameterType	int *		3580074	0					
ANR	3580289	Identifier	fd_ptr		3580074	1					
ANR	3580290	Parameter	struct stat * stat_buf	1178:45:30078:30098	3580074	3	True				
ANR	3580291	ParameterType	struct stat *		3580074	0					
ANR	3580292	Identifier	stat_buf		3580074	1					
ANR	3580293	CFGEntryNode	ENTRY		3580074		True				
ANR	3580294	CFGExitNode	EXIT		3580074		True				
ANR	3580295	Symbol	NULL		3580074						
ANR	3580296	Symbol	tmp_stat_buf		3580074						
ANR	3580297	Symbol	stat_buf		3580074						
ANR	3580298	Symbol	lstat		3580074						
ANR	3580299	Symbol	fstat		3580074						
ANR	3580300	Symbol	tmp_stat_buf . st_dev		3580074						
ANR	3580301	Symbol	* dir_ptr		3580074						
ANR	3580302	Symbol	ino		3580074						
ANR	3580303	Symbol	& tmp_stat_buf		3580074						
ANR	3580304	Symbol	dir		3580074						
ANR	3580305	Symbol	path		3580074						
ANR	3580306	Symbol	fd_ptr		3580074						
ANR	3580307	Symbol	dir_ptr		3580074						
ANR	3580308	Symbol	O_RDONLY		3580074						
ANR	3580309	Symbol	dev		3580074						
ANR	3580310	Symbol	opendir		3580074						
ANR	3580311	Symbol	* fd_ptr		3580074						
ANR	3580312	Symbol	fd		3580074						
ANR	3580313	Symbol	open		3580074						
ANR	3580314	Symbol	tmp_stat_buf . st_ino		3580074						
ANR	3580315	Function	safe_open_no_follow	1247:0:31945:32783							
ANR	3580316	FunctionDef	"safe_open_no_follow (const char * path , int * fd_ptr , struct stat * st)"		3580315	0					
ANR	3580317	CompoundStatement		1249:0:32017:32783	3580315	0					
ANR	3580318	IdentifierDeclStatement	dev_t dev ;	1250:4:32023:32032	3580315	0	True				
ANR	3580319	IdentifierDecl	dev		3580315	0					
ANR	3580320	IdentifierDeclType	dev_t		3580315	0					
ANR	3580321	Identifier	dev		3580315	1					
ANR	3580322	IdentifierDeclStatement	ino_t ino ;	1251:4:32038:32047	3580315	1	True				
ANR	3580323	IdentifierDecl	ino		3580315	0					
ANR	3580324	IdentifierDeclType	ino_t		3580315	0					
ANR	3580325	Identifier	ino		3580315	1					
ANR	3580326	IdentifierDeclStatement	struct stat buf ;	1252:4:32053:32068	3580315	2	True				
ANR	3580327	IdentifierDecl	buf		3580315	0					
ANR	3580328	IdentifierDeclType	struct stat		3580315	0					
ANR	3580329	Identifier	buf		3580315	1					
ANR	3580330	IfStatement	if ( st == NULL )		3580315	3					
ANR	3580331	Condition	st == NULL	1254:8:32079:32088	3580315	0	True				
ANR	3580332	EqualityExpression	st == NULL		3580315	0		==			
ANR	3580333	Identifier	st		3580315	0					
ANR	3580334	Identifier	NULL		3580315	1					
ANR	3580335	CompoundStatement		6:20:73:73	3580315	1					
ANR	3580336	ExpressionStatement	st = & buf	1255:8:32101:32110	3580315	0	True				
ANR	3580337	AssignmentExpression	st = & buf		3580315	0		=			
ANR	3580338	Identifier	st		3580315	0					
ANR	3580339	UnaryOperationExpression	& buf		3580315	1					
ANR	3580340	UnaryOperator	&		3580315	0					
ANR	3580341	Identifier	buf		3580315	1					
ANR	3580342	ExpressionStatement	"* fd_ptr = open ( path , O_RDONLY | O_NONBLOCK )"	1258:4:32123:32166	3580315	4	True				
ANR	3580343	AssignmentExpression	"* fd_ptr = open ( path , O_RDONLY | O_NONBLOCK )"		3580315	0		=			
ANR	3580344	UnaryOperationExpression	* fd_ptr		3580315	0					
ANR	3580345	UnaryOperator	*		3580315	0					
ANR	3580346	Identifier	fd_ptr		3580315	1					
ANR	3580347	CallExpression	"open ( path , O_RDONLY | O_NONBLOCK )"		3580315	1					
ANR	3580348	Callee	open		3580315	0					
ANR	3580349	Identifier	open		3580315	0					
ANR	3580350	ArgumentList	path		3580315	1					
ANR	3580351	Argument	path		3580315	0					
ANR	3580352	Identifier	path		3580315	0					
ANR	3580353	Argument	O_RDONLY | O_NONBLOCK		3580315	1					
ANR	3580354	InclusiveOrExpression	O_RDONLY | O_NONBLOCK		3580315	0		|			
ANR	3580355	Identifier	O_RDONLY		3580315	0					
ANR	3580356	Identifier	O_NONBLOCK		3580315	1					
ANR	3580357	IfStatement	if ( * fd_ptr == - 1 )		3580315	5					
ANR	3580358	Condition	* fd_ptr == - 1	1259:8:32176:32188	3580315	0	True				
ANR	3580359	EqualityExpression	* fd_ptr == - 1		3580315	0		==			
ANR	3580360	UnaryOperationExpression	* fd_ptr		3580315	0					
ANR	3580361	UnaryOperator	*		3580315	0					
ANR	3580362	Identifier	fd_ptr		3580315	1					
ANR	3580363	UnaryOperationExpression	- 1		3580315	1					
ANR	3580364	UnaryOperator	-		3580315	0					
ANR	3580365	PrimaryExpression	1		3580315	1					
ANR	3580366	CompoundStatement		11:23:173:173	3580315	1					
ANR	3580367	IfStatement	if ( errno == ENOENT )		3580315	0					
ANR	3580368	Condition	errno == ENOENT	1260:5:32198:32212	3580315	0	True				
ANR	3580369	EqualityExpression	errno == ENOENT		3580315	0		==			
ANR	3580370	Identifier	errno		3580315	0					
ANR	3580371	Identifier	ENOENT		3580315	1					
ANR	3580372	CompoundStatement		12:22:197:197	3580315	1					
ANR	3580373	IfStatement	"if ( lstat ( path , st ) != - 1 && S_ISLNK ( st -> st_mode ) )"		3580315	0					
ANR	3580374	Condition	"lstat ( path , st ) != - 1 && S_ISLNK ( st -> st_mode )"	1264:9:32334:32378	3580315	0	True				
ANR	3580375	AndExpression	"lstat ( path , st ) != - 1 && S_ISLNK ( st -> st_mode )"		3580315	0		&&			
ANR	3580376	EqualityExpression	"lstat ( path , st ) != - 1"		3580315	0		!=			
ANR	3580377	CallExpression	"lstat ( path , st )"		3580315	0					
ANR	3580378	Callee	lstat		3580315	0					
ANR	3580379	Identifier	lstat		3580315	0					
ANR	3580380	ArgumentList	path		3580315	1					
ANR	3580381	Argument	path		3580315	0					
ANR	3580382	Identifier	path		3580315	0					
ANR	3580383	Argument	st		3580315	1					
ANR	3580384	Identifier	st		3580315	0					
ANR	3580385	UnaryOperationExpression	- 1		3580315	1					
ANR	3580386	UnaryOperator	-		3580315	0					
ANR	3580387	PrimaryExpression	1		3580315	1					
ANR	3580388	CallExpression	S_ISLNK ( st -> st_mode )		3580315	1					
ANR	3580389	Callee	S_ISLNK		3580315	0					
ANR	3580390	Identifier	S_ISLNK		3580315	0					
ANR	3580391	ArgumentList	st -> st_mode		3580315	1					
ANR	3580392	Argument	st -> st_mode		3580315	0					
ANR	3580393	PtrMemberAccess	st -> st_mode		3580315	0					
ANR	3580394	Identifier	st		3580315	0					
ANR	3580395	Identifier	st_mode		3580315	1					
ANR	3580396	CompoundStatement		16:56:363:363	3580315	1					
ANR	3580397	ReturnStatement	return 0 ;	1265:2:32385:32393	3580315	0	True				
ANR	3580398	PrimaryExpression	0		3580315	0					
ANR	3580399	ExpressionStatement	errno = ENOENT	1267:5:32407:32421	3580315	1	True				
ANR	3580400	AssignmentExpression	errno = ENOENT		3580315	0		=			
ANR	3580401	Identifier	errno		3580315	0					
ANR	3580402	Identifier	ENOENT		3580315	1					
ANR	3580403	ReturnStatement	return - 1 ;	1270:1:32428:32437	3580315	1	True				
ANR	3580404	UnaryOperationExpression	- 1		3580315	0					
ANR	3580405	UnaryOperator	-		3580315	0					
ANR	3580406	PrimaryExpression	1		3580315	1					
ANR	3580407	IfStatement	"if ( fstat ( * fd_ptr , st ) == - 1 )"		3580315	6					
ANR	3580408	Condition	"fstat ( * fd_ptr , st ) == - 1"	1273:8:32454:32477	3580315	0	True				
ANR	3580409	EqualityExpression	"fstat ( * fd_ptr , st ) == - 1"		3580315	0		==			
ANR	3580410	CallExpression	"fstat ( * fd_ptr , st )"		3580315	0					
ANR	3580411	Callee	fstat		3580315	0					
ANR	3580412	Identifier	fstat		3580315	0					
ANR	3580413	ArgumentList	* fd_ptr		3580315	1					
ANR	3580414	Argument	* fd_ptr		3580315	0					
ANR	3580415	UnaryOperationExpression	* fd_ptr		3580315	0					
ANR	3580416	UnaryOperator	*		3580315	0					
ANR	3580417	Identifier	fd_ptr		3580315	1					
ANR	3580418	Argument	st		3580315	1					
ANR	3580419	Identifier	st		3580315	0					
ANR	3580420	UnaryOperationExpression	- 1		3580315	1					
ANR	3580421	UnaryOperator	-		3580315	0					
ANR	3580422	PrimaryExpression	1		3580315	1					
ANR	3580423	CompoundStatement		25:34:462:462	3580315	1					
ANR	3580424	ExpressionStatement	close ( * fd_ptr )	1274:8:32490:32504	3580315	0	True				
ANR	3580425	CallExpression	close ( * fd_ptr )		3580315	0					
ANR	3580426	Callee	close		3580315	0					
ANR	3580427	Identifier	close		3580315	0					
ANR	3580428	ArgumentList	* fd_ptr		3580315	1					
ANR	3580429	Argument	* fd_ptr		3580315	0					
ANR	3580430	UnaryOperationExpression	* fd_ptr		3580315	0					
ANR	3580431	UnaryOperator	*		3580315	0					
ANR	3580432	Identifier	fd_ptr		3580315	1					
ANR	3580433	ReturnStatement	return - 1 ;	1275:8:32514:32523	3580315	1	True				
ANR	3580434	UnaryOperationExpression	- 1		3580315	0					
ANR	3580435	UnaryOperator	-		3580315	0					
ANR	3580436	PrimaryExpression	1		3580315	1					
ANR	3580437	ExpressionStatement	dev = st -> st_dev	1278:4:32536:32552	3580315	7	True				
ANR	3580438	AssignmentExpression	dev = st -> st_dev		3580315	0		=			
ANR	3580439	Identifier	dev		3580315	0					
ANR	3580440	PtrMemberAccess	st -> st_dev		3580315	1					
ANR	3580441	Identifier	st		3580315	0					
ANR	3580442	Identifier	st_dev		3580315	1					
ANR	3580443	ExpressionStatement	ino = st -> st_ino	1279:4:32558:32574	3580315	8	True				
ANR	3580444	AssignmentExpression	ino = st -> st_ino		3580315	0		=			
ANR	3580445	Identifier	ino		3580315	0					
ANR	3580446	PtrMemberAccess	st -> st_ino		3580315	1					
ANR	3580447	Identifier	st		3580315	0					
ANR	3580448	Identifier	st_ino		3580315	1					
ANR	3580449	IfStatement	"if ( lstat ( path , st ) == - 1 )"		3580315	9					
ANR	3580450	Condition	"lstat ( path , st ) == - 1"	1281:8:32585:32605	3580315	0	True				
ANR	3580451	EqualityExpression	"lstat ( path , st ) == - 1"		3580315	0		==			
ANR	3580452	CallExpression	"lstat ( path , st )"		3580315	0					
ANR	3580453	Callee	lstat		3580315	0					
ANR	3580454	Identifier	lstat		3580315	0					
ANR	3580455	ArgumentList	path		3580315	1					
ANR	3580456	Argument	path		3580315	0					
ANR	3580457	Identifier	path		3580315	0					
ANR	3580458	Argument	st		3580315	1					
ANR	3580459	Identifier	st		3580315	0					
ANR	3580460	UnaryOperationExpression	- 1		3580315	1					
ANR	3580461	UnaryOperator	-		3580315	0					
ANR	3580462	PrimaryExpression	1		3580315	1					
ANR	3580463	CompoundStatement		33:31:590:590	3580315	1					
ANR	3580464	ExpressionStatement	close ( * fd_ptr )	1282:8:32618:32632	3580315	0	True				
ANR	3580465	CallExpression	close ( * fd_ptr )		3580315	0					
ANR	3580466	Callee	close		3580315	0					
ANR	3580467	Identifier	close		3580315	0					
ANR	3580468	ArgumentList	* fd_ptr		3580315	1					
ANR	3580469	Argument	* fd_ptr		3580315	0					
ANR	3580470	UnaryOperationExpression	* fd_ptr		3580315	0					
ANR	3580471	UnaryOperator	*		3580315	0					
ANR	3580472	Identifier	fd_ptr		3580315	1					
ANR	3580473	ReturnStatement	return - 1 ;	1283:8:32642:32651	3580315	1	True				
ANR	3580474	UnaryOperationExpression	- 1		3580315	0					
ANR	3580475	UnaryOperator	-		3580315	0					
ANR	3580476	PrimaryExpression	1		3580315	1					
ANR	3580477	IfStatement	if ( ( st -> st_dev != dev ) || ( st -> st_ino != ino ) )		3580315	10					
ANR	3580478	Condition	( st -> st_dev != dev ) || ( st -> st_ino != ino )	1286:8:32668:32709	3580315	0	True				
ANR	3580479	OrExpression	( st -> st_dev != dev ) || ( st -> st_ino != ino )		3580315	0		||			
ANR	3580480	EqualityExpression	st -> st_dev != dev		3580315	0		!=			
ANR	3580481	PtrMemberAccess	st -> st_dev		3580315	0					
ANR	3580482	Identifier	st		3580315	0					
ANR	3580483	Identifier	st_dev		3580315	1					
ANR	3580484	Identifier	dev		3580315	1					
ANR	3580485	EqualityExpression	st -> st_ino != ino		3580315	1		!=			
ANR	3580486	PtrMemberAccess	st -> st_ino		3580315	0					
ANR	3580487	Identifier	st		3580315	0					
ANR	3580488	Identifier	st_ino		3580315	1					
ANR	3580489	Identifier	ino		3580315	1					
ANR	3580490	CompoundStatement		38:52:694:694	3580315	1					
ANR	3580491	ExpressionStatement	close ( * fd_ptr )	1287:9:32723:32737	3580315	0	True				
ANR	3580492	CallExpression	close ( * fd_ptr )		3580315	0					
ANR	3580493	Callee	close		3580315	0					
ANR	3580494	Identifier	close		3580315	0					
ANR	3580495	ArgumentList	* fd_ptr		3580315	1					
ANR	3580496	Argument	* fd_ptr		3580315	0					
ANR	3580497	UnaryOperationExpression	* fd_ptr		3580315	0					
ANR	3580498	UnaryOperator	*		3580315	0					
ANR	3580499	Identifier	fd_ptr		3580315	1					
ANR	3580500	ExpressionStatement	* fd_ptr = - 1	1288:9:32748:32760	3580315	1	True				
ANR	3580501	AssignmentExpression	* fd_ptr = - 1		3580315	0		=			
ANR	3580502	UnaryOperationExpression	* fd_ptr		3580315	0					
ANR	3580503	UnaryOperator	*		3580315	0					
ANR	3580504	Identifier	fd_ptr		3580315	1					
ANR	3580505	UnaryOperationExpression	- 1		3580315	1					
ANR	3580506	UnaryOperator	-		3580315	0					
ANR	3580507	PrimaryExpression	1		3580315	1					
ANR	3580508	ReturnStatement	return 0 ;	1291:4:32773:32781	3580315	11	True				
ANR	3580509	PrimaryExpression	0		3580315	0					
ANR	3580510	ReturnType	int		3580315	1					
ANR	3580511	Identifier	safe_open_no_follow		3580315	2					
ANR	3580512	ParameterList	"const char * path , int * fd_ptr , struct stat * st"		3580315	3					
ANR	3580513	Parameter	const char * path	1248:20:31969:31984	3580315	0	True				
ANR	3580514	ParameterType	const char *		3580315	0					
ANR	3580515	Identifier	path		3580315	1					
ANR	3580516	Parameter	int * fd_ptr	1248:38:31987:31997	3580315	1	True				
ANR	3580517	ParameterType	int *		3580315	0					
ANR	3580518	Identifier	fd_ptr		3580315	1					
ANR	3580519	Parameter	struct stat * st	1248:51:32000:32014	3580315	2	True				
ANR	3580520	ParameterType	struct stat *		3580315	0					
ANR	3580521	Identifier	st		3580315	1					
ANR	3580522	CFGEntryNode	ENTRY		3580315		True				
ANR	3580523	CFGExitNode	EXIT		3580315		True				
ANR	3580524	Symbol	st		3580315						
ANR	3580525	Symbol	errno		3580315						
ANR	3580526	Symbol	NULL		3580315						
ANR	3580527	Symbol	* st		3580315						
ANR	3580528	Symbol	O_NONBLOCK		3580315						
ANR	3580529	Symbol	lstat		3580315						
ANR	3580530	Symbol	st -> st_dev		3580315						
ANR	3580531	Symbol	fstat		3580315						
ANR	3580532	Symbol	ino		3580315						
ANR	3580533	Symbol	ENOENT		3580315						
ANR	3580534	Symbol	st -> st_mode		3580315						
ANR	3580535	Symbol	path		3580315						
ANR	3580536	Symbol	fd_ptr		3580315						
ANR	3580537	Symbol	buf		3580315						
ANR	3580538	Symbol	O_RDONLY		3580315						
ANR	3580539	Symbol	dev		3580315						
ANR	3580540	Symbol	* fd_ptr		3580315						
ANR	3580541	Symbol	st -> st_ino		3580315						
ANR	3580542	Symbol	& buf		3580315						
ANR	3580543	Symbol	open		3580315						
ANR	3580544	Symbol	S_ISLNK		3580315						
ANR	3580545	Function	chdir_no_follow	1304:0:32975:33323							
ANR	3580546	FunctionDef	chdir_no_follow (const char * dir_name)		3580545	0					
ANR	3580547	CompoundStatement		1306:0:33024:33323	3580545	0					
ANR	3580548	IdentifierDeclStatement	int fd ;	1307:4:33030:33036	3580545	0	True				
ANR	3580549	IdentifierDecl	fd		3580545	0					
ANR	3580550	IdentifierDeclType	int		3580545	0					
ANR	3580551	Identifier	fd		3580545	1					
ANR	3580552	IdentifierDeclStatement	struct stat stat_buf ;	1308:4:33042:33062	3580545	1	True				
ANR	3580553	IdentifierDecl	stat_buf		3580545	0					
ANR	3580554	IdentifierDeclType	struct stat		3580545	0					
ANR	3580555	Identifier	stat_buf		3580545	1					
ANR	3580556	IfStatement	"if ( safe_open_no_follow ( dir_name , & fd , & stat_buf ) )"		3580545	2					
ANR	3580557	Condition	"safe_open_no_follow ( dir_name , & fd , & stat_buf )"	1310:8:33073:33117	3580545	0	True				
ANR	3580558	CallExpression	"safe_open_no_follow ( dir_name , & fd , & stat_buf )"		3580545	0					
ANR	3580559	Callee	safe_open_no_follow		3580545	0					
ANR	3580560	Identifier	safe_open_no_follow		3580545	0					
ANR	3580561	ArgumentList	dir_name		3580545	1					
ANR	3580562	Argument	dir_name		3580545	0					
ANR	3580563	Identifier	dir_name		3580545	0					
ANR	3580564	Argument	& fd		3580545	1					
ANR	3580565	UnaryOperationExpression	& fd		3580545	0					
ANR	3580566	UnaryOperator	&		3580545	0					
ANR	3580567	Identifier	fd		3580545	1					
ANR	3580568	Argument	& stat_buf		3580545	2					
ANR	3580569	UnaryOperationExpression	& stat_buf		3580545	0					
ANR	3580570	UnaryOperator	&		3580545	0					
ANR	3580571	Identifier	stat_buf		3580545	1					
ANR	3580572	CompoundStatement		5:55:95:95	3580545	1					
ANR	3580573	ReturnStatement	return - 1 ;	1311:8:33130:33139	3580545	0	True				
ANR	3580574	UnaryOperationExpression	- 1		3580545	0					
ANR	3580575	UnaryOperator	-		3580545	0					
ANR	3580576	PrimaryExpression	1		3580545	1					
ANR	3580577	IfStatement	if ( fd == - 1 )		3580545	3					
ANR	3580578	Condition	fd == - 1	1313:8:33155:33162	3580545	0	True				
ANR	3580579	EqualityExpression	fd == - 1		3580545	0		==			
ANR	3580580	Identifier	fd		3580545	0					
ANR	3580581	UnaryOperationExpression	- 1		3580545	1					
ANR	3580582	UnaryOperator	-		3580545	0					
ANR	3580583	PrimaryExpression	1		3580545	1					
ANR	3580584	CompoundStatement		8:18:140:140	3580545	1					
ANR	3580585	ReturnStatement	return - 1 ;	1315:8:33203:33212	3580545	0	True				
ANR	3580586	UnaryOperationExpression	- 1		3580545	0					
ANR	3580587	UnaryOperator	-		3580545	0					
ANR	3580588	PrimaryExpression	1		3580545	1					
ANR	3580589	IfStatement	if ( fchdir ( fd ) == - 1 )		3580545	4					
ANR	3580590	Condition	fchdir ( fd ) == - 1	1318:8:33229:33244	3580545	0	True				
ANR	3580591	EqualityExpression	fchdir ( fd ) == - 1		3580545	0		==			
ANR	3580592	CallExpression	fchdir ( fd )		3580545	0					
ANR	3580593	Callee	fchdir		3580545	0					
ANR	3580594	Identifier	fchdir		3580545	0					
ANR	3580595	ArgumentList	fd		3580545	1					
ANR	3580596	Argument	fd		3580545	0					
ANR	3580597	Identifier	fd		3580545	0					
ANR	3580598	UnaryOperationExpression	- 1		3580545	1					
ANR	3580599	UnaryOperator	-		3580545	0					
ANR	3580600	PrimaryExpression	1		3580545	1					
ANR	3580601	CompoundStatement		13:26:222:222	3580545	1					
ANR	3580602	ExpressionStatement	close ( fd )	1319:8:33257:33266	3580545	0	True				
ANR	3580603	CallExpression	close ( fd )		3580545	0					
ANR	3580604	Callee	close		3580545	0					
ANR	3580605	Identifier	close		3580545	0					
ANR	3580606	ArgumentList	fd		3580545	1					
ANR	3580607	Argument	fd		3580545	0					
ANR	3580608	Identifier	fd		3580545	0					
ANR	3580609	ReturnStatement	return - 1 ;	1320:8:33276:33285	3580545	1	True				
ANR	3580610	UnaryOperationExpression	- 1		3580545	0					
ANR	3580611	UnaryOperator	-		3580545	0					
ANR	3580612	PrimaryExpression	1		3580545	1					
ANR	3580613	ExpressionStatement	close ( fd )	1323:4:33298:33307	3580545	5	True				
ANR	3580614	CallExpression	close ( fd )		3580545	0					
ANR	3580615	Callee	close		3580545	0					
ANR	3580616	Identifier	close		3580545	0					
ANR	3580617	ArgumentList	fd		3580545	1					
ANR	3580618	Argument	fd		3580545	0					
ANR	3580619	Identifier	fd		3580545	0					
ANR	3580620	ReturnStatement	return 0 ;	1324:4:33313:33321	3580545	6	True				
ANR	3580621	PrimaryExpression	0		3580545	0					
ANR	3580622	ReturnType	static int		3580545	1					
ANR	3580623	Identifier	chdir_no_follow		3580545	2					
ANR	3580624	ParameterList	const char * dir_name		3580545	3					
ANR	3580625	Parameter	const char * dir_name	1305:16:33002:33021	3580545	0	True				
ANR	3580626	ParameterType	const char *		3580545	0					
ANR	3580627	Identifier	dir_name		3580545	1					
ANR	3580628	CFGEntryNode	ENTRY		3580545		True				
ANR	3580629	CFGExitNode	EXIT		3580545		True				
ANR	3580630	Symbol	fchdir		3580545						
ANR	3580631	Symbol	safe_open_no_follow		3580545						
ANR	3580632	Symbol	& stat_buf		3580545						
ANR	3580633	Symbol	dir_name		3580545						
ANR	3580634	Symbol	stat_buf		3580545						
ANR	3580635	Symbol	& fd		3580545						
ANR	3580636	Symbol	fd		3580545						
ANR	3580637	Function	do_dir_contents_one_fd	1339:0:33550:36369							
ANR	3580638	FunctionDef	"do_dir_contents_one_fd (safe_dir_walk_func func , void * data)"		3580637	0					
ANR	3580639	CompoundStatement		1340:0:33621:36369	3580637	0					
ANR	3580640	IdentifierDeclStatement	DIR * dir ;	1341:4:33627:33635	3580637	0	True				
ANR	3580641	IdentifierDecl	* dir		3580637	0					
ANR	3580642	IdentifierDeclType	DIR *		3580637	0					
ANR	3580643	Identifier	dir		3580637	1					
ANR	3580644	IdentifierDeclStatement	int dir_fd ;	1342:4:33641:33651	3580637	1	True				
ANR	3580645	IdentifierDecl	dir_fd		3580637	0					
ANR	3580646	IdentifierDeclType	int		3580637	0					
ANR	3580647	Identifier	dir_fd		3580637	1					
ANR	3580648	IdentifierDeclStatement	int r ;	1343:4:33657:33662	3580637	2	True				
ANR	3580649	IdentifierDecl	r		3580637	0					
ANR	3580650	IdentifierDeclType	int		3580637	0					
ANR	3580651	Identifier	r		3580637	1					
ANR	3580652	IdentifierDeclStatement	int status = 0 ;	1344:4:33668:33682	3580637	3	True				
ANR	3580653	IdentifierDecl	status = 0		3580637	0					
ANR	3580654	IdentifierDeclType	int		3580637	0					
ANR	3580655	Identifier	status		3580637	1					
ANR	3580656	AssignmentExpression	status = 0		3580637	2		=			
ANR	3580657	Identifier	status		3580637	0					
ANR	3580658	PrimaryExpression	0		3580637	1					
ANR	3580659	IdentifierDeclStatement	struct dirent * de ;	1345:4:33688:33705	3580637	4	True				
ANR	3580660	IdentifierDecl	* de		3580637	0					
ANR	3580661	IdentifierDeclType	struct dirent *		3580637	0					
ANR	3580662	Identifier	de		3580637	1					
ANR	3580663	IdentifierDeclStatement	string_list dirs ;	1346:4:33711:33727	3580637	5	True				
ANR	3580664	IdentifierDecl	dirs		3580637	0					
ANR	3580665	IdentifierDeclType	string_list		3580637	0					
ANR	3580666	Identifier	dirs		3580637	1					
ANR	3580667	IdentifierDeclStatement	struct stat stat_buf ;	1347:4:33733:33753	3580637	6	True				
ANR	3580668	IdentifierDecl	stat_buf		3580637	0					
ANR	3580669	IdentifierDeclType	struct stat		3580637	0					
ANR	3580670	Identifier	stat_buf		3580637	1					
ANR	3580671	IdentifierDeclStatement	struct stat * statp ;	1348:4:33759:33777	3580637	7	True				
ANR	3580672	IdentifierDecl	* statp		3580637	0					
ANR	3580673	IdentifierDeclType	struct stat *		3580637	0					
ANR	3580674	Identifier	statp		3580637	1					
ANR	3580675	IdentifierDeclStatement	dev_t cur_dir_dev ;	1349:4:33783:33800	3580637	8	True				
ANR	3580676	IdentifierDecl	cur_dir_dev		3580637	0					
ANR	3580677	IdentifierDeclType	dev_t		3580637	0					
ANR	3580678	Identifier	cur_dir_dev		3580637	1					
ANR	3580679	IdentifierDeclStatement	ino_t cur_dir_ino ;	1350:4:33806:33823	3580637	9	True				
ANR	3580680	IdentifierDecl	cur_dir_ino		3580637	0					
ANR	3580681	IdentifierDeclType	ino_t		3580637	0					
ANR	3580682	Identifier	cur_dir_ino		3580637	1					
ANR	3580683	ExpressionStatement	init_string_list ( & dirs )	1352:4:33830:33853	3580637	10	True				
ANR	3580684	CallExpression	init_string_list ( & dirs )		3580637	0					
ANR	3580685	Callee	init_string_list		3580637	0					
ANR	3580686	Identifier	init_string_list		3580637	0					
ANR	3580687	ArgumentList	& dirs		3580637	1					
ANR	3580688	Argument	& dirs		3580637	0					
ANR	3580689	UnaryOperationExpression	& dirs		3580637	0					
ANR	3580690	UnaryOperator	&		3580637	0					
ANR	3580691	Identifier	dirs		3580637	1					
ANR	3580692	ExpressionStatement	"dir = opendir ( ""."" )"	1355:4:33875:33893	3580637	11	True				
ANR	3580693	AssignmentExpression	"dir = opendir ( ""."" )"		3580637	0		=			
ANR	3580694	Identifier	dir		3580637	0					
ANR	3580695	CallExpression	"opendir ( ""."" )"		3580637	1					
ANR	3580696	Callee	opendir		3580637	0					
ANR	3580697	Identifier	opendir		3580637	0					
ANR	3580698	ArgumentList	"""."""		3580637	1					
ANR	3580699	Argument	"""."""		3580637	0					
ANR	3580700	PrimaryExpression	"""."""		3580637	0					
ANR	3580701	IfStatement	if ( dir == NULL )		3580637	12					
ANR	3580702	Condition	dir == NULL	1356:8:33903:33913	3580637	0	True				
ANR	3580703	EqualityExpression	dir == NULL		3580637	0		==			
ANR	3580704	Identifier	dir		3580637	0					
ANR	3580705	Identifier	NULL		3580637	1					
ANR	3580706	CompoundStatement		17:21:294:294	3580637	1					
ANR	3580707	ReturnStatement	return - 1 ;	1357:8:33926:33935	3580637	0	True				
ANR	3580708	UnaryOperationExpression	- 1		3580637	0					
ANR	3580709	UnaryOperator	-		3580637	0					
ANR	3580710	PrimaryExpression	1		3580637	1					
ANR	3580711	ExpressionStatement	dir_fd = dirfd ( dir )	1359:4:33947:33966	3580637	13	True				
ANR	3580712	AssignmentExpression	dir_fd = dirfd ( dir )		3580637	0		=			
ANR	3580713	Identifier	dir_fd		3580637	0					
ANR	3580714	CallExpression	dirfd ( dir )		3580637	1					
ANR	3580715	Callee	dirfd		3580637	0					
ANR	3580716	Identifier	dirfd		3580637	0					
ANR	3580717	ArgumentList	dir		3580637	1					
ANR	3580718	Argument	dir		3580637	0					
ANR	3580719	Identifier	dir		3580637	0					
ANR	3580720	ExpressionStatement	"r = fstat ( dir_fd , & stat_buf )"	1360:4:33972:34000	3580637	14	True				
ANR	3580721	AssignmentExpression	"r = fstat ( dir_fd , & stat_buf )"		3580637	0		=			
ANR	3580722	Identifier	r		3580637	0					
ANR	3580723	CallExpression	"fstat ( dir_fd , & stat_buf )"		3580637	1					
ANR	3580724	Callee	fstat		3580637	0					
ANR	3580725	Identifier	fstat		3580637	0					
ANR	3580726	ArgumentList	dir_fd		3580637	1					
ANR	3580727	Argument	dir_fd		3580637	0					
ANR	3580728	Identifier	dir_fd		3580637	0					
ANR	3580729	Argument	& stat_buf		3580637	1					
ANR	3580730	UnaryOperationExpression	& stat_buf		3580637	0					
ANR	3580731	UnaryOperator	&		3580637	0					
ANR	3580732	Identifier	stat_buf		3580637	1					
ANR	3580733	IfStatement	if ( r == - 1 )		3580637	15					
ANR	3580734	Condition	r == - 1	1361:8:34010:34016	3580637	0	True				
ANR	3580735	EqualityExpression	r == - 1		3580637	0		==			
ANR	3580736	Identifier	r		3580637	0					
ANR	3580737	UnaryOperationExpression	- 1		3580637	1					
ANR	3580738	UnaryOperator	-		3580637	0					
ANR	3580739	PrimaryExpression	1		3580637	1					
ANR	3580740	CompoundStatement		22:17:397:397	3580637	1					
ANR	3580741	ExpressionStatement	status = - 1	1362:8:34029:34040	3580637	0	True				
ANR	3580742	AssignmentExpression	status = - 1		3580637	0		=			
ANR	3580743	Identifier	status		3580637	0					
ANR	3580744	UnaryOperationExpression	- 1		3580637	1					
ANR	3580745	UnaryOperator	-		3580637	0					
ANR	3580746	PrimaryExpression	1		3580637	1					
ANR	3580747	ExpressionStatement	cur_dir_dev = stat_buf . st_dev	1371:4:34174:34203	3580637	16	True				
ANR	3580748	AssignmentExpression	cur_dir_dev = stat_buf . st_dev		3580637	0		=			
ANR	3580749	Identifier	cur_dir_dev		3580637	0					
ANR	3580750	MemberAccess	stat_buf . st_dev		3580637	1					
ANR	3580751	Identifier	stat_buf		3580637	0					
ANR	3580752	Identifier	st_dev		3580637	1					
ANR	3580753	ExpressionStatement	cur_dir_ino = stat_buf . st_ino	1372:4:34209:34238	3580637	17	True				
ANR	3580754	AssignmentExpression	cur_dir_ino = stat_buf . st_ino		3580637	0		=			
ANR	3580755	Identifier	cur_dir_ino		3580637	0					
ANR	3580756	MemberAccess	stat_buf . st_ino		3580637	1					
ANR	3580757	Identifier	stat_buf		3580637	0					
ANR	3580758	Identifier	st_ino		3580637	1					
ANR	3580759	IfStatement	if ( status == 0 )		3580637	18					
ANR	3580760	Condition	status == 0	1374:8:34249:34259	3580637	0	True				
ANR	3580761	EqualityExpression	status == 0		3580637	0		==			
ANR	3580762	Identifier	status		3580637	0					
ANR	3580763	PrimaryExpression	0		3580637	1					
ANR	3580764	CompoundStatement		35:21:640:640	3580637	1					
ANR	3580765	WhileStatement	while ( ( de = readdir ( dir ) ) != 0 )		3580637	0					
ANR	3580766	Condition	( de = readdir ( dir ) ) != 0	1375:15:34279:34302	3580637	0	True				
ANR	3580767	EqualityExpression	( de = readdir ( dir ) ) != 0		3580637	0		!=			
ANR	3580768	AssignmentExpression	de = readdir ( dir )		3580637	0		=			
ANR	3580769	Identifier	de		3580637	0					
ANR	3580770	CallExpression	readdir ( dir )		3580637	1					
ANR	3580771	Callee	readdir		3580637	0					
ANR	3580772	Identifier	readdir		3580637	0					
ANR	3580773	ArgumentList	dir		3580637	1					
ANR	3580774	Argument	dir		3580637	0					
ANR	3580775	Identifier	dir		3580637	0					
ANR	3580776	PrimaryExpression	0		3580637	1					
ANR	3580777	CompoundStatement		36:41:683:683	3580637	1					
ANR	3580778	ExpressionStatement	statp = & stat_buf	1376:12:34319:34336	3580637	0	True				
ANR	3580779	AssignmentExpression	statp = & stat_buf		3580637	0		=			
ANR	3580780	Identifier	statp		3580637	0					
ANR	3580781	UnaryOperationExpression	& stat_buf		3580637	1					
ANR	3580782	UnaryOperator	&		3580637	0					
ANR	3580783	Identifier	stat_buf		3580637	1					
ANR	3580784	IfStatement	"if ( ! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" ) )"		3580637	1					
ANR	3580785	Condition	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"	1378:16:34355:34407	3580637	0	True				
ANR	3580786	OrExpression	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"		3580637	0		||			
ANR	3580787	UnaryOperationExpression	"! strcmp ( de -> d_name , ""."" )"		3580637	0					
ANR	3580788	UnaryOperator	!		3580637	0					
ANR	3580789	CallExpression	"strcmp ( de -> d_name , ""."" )"		3580637	1					
ANR	3580790	Callee	strcmp		3580637	0					
ANR	3580791	Identifier	strcmp		3580637	0					
ANR	3580792	ArgumentList	de -> d_name		3580637	1					
ANR	3580793	Argument	de -> d_name		3580637	0					
ANR	3580794	PtrMemberAccess	de -> d_name		3580637	0					
ANR	3580795	Identifier	de		3580637	0					
ANR	3580796	Identifier	d_name		3580637	1					
ANR	3580797	Argument	"""."""		3580637	1					
ANR	3580798	PrimaryExpression	"""."""		3580637	0					
ANR	3580799	UnaryOperationExpression	"! strcmp ( de -> d_name , "".."" )"		3580637	1					
ANR	3580800	UnaryOperator	!		3580637	0					
ANR	3580801	CallExpression	"strcmp ( de -> d_name , "".."" )"		3580637	1					
ANR	3580802	Callee	strcmp		3580637	0					
ANR	3580803	Identifier	strcmp		3580637	0					
ANR	3580804	ArgumentList	de -> d_name		3580637	1					
ANR	3580805	Argument	de -> d_name		3580637	0					
ANR	3580806	PtrMemberAccess	de -> d_name		3580637	0					
ANR	3580807	Identifier	de		3580637	0					
ANR	3580808	Identifier	d_name		3580637	1					
ANR	3580809	Argument	""".."""		3580637	1					
ANR	3580810	PrimaryExpression	""".."""		3580637	0					
ANR	3580811	CompoundStatement		39:71:788:788	3580637	1					
ANR	3580812	ContinueStatement	continue ;	1379:16:34428:34436	3580637	0	True				
ANR	3580813	ExpressionStatement	"r = lstat ( de -> d_name , statp )"	1382:12:34465:34493	3580637	2	True				
ANR	3580814	AssignmentExpression	"r = lstat ( de -> d_name , statp )"		3580637	0		=			
ANR	3580815	Identifier	r		3580637	0					
ANR	3580816	CallExpression	"lstat ( de -> d_name , statp )"		3580637	1					
ANR	3580817	Callee	lstat		3580637	0					
ANR	3580818	Identifier	lstat		3580637	0					
ANR	3580819	ArgumentList	de -> d_name		3580637	1					
ANR	3580820	Argument	de -> d_name		3580637	0					
ANR	3580821	PtrMemberAccess	de -> d_name		3580637	0					
ANR	3580822	Identifier	de		3580637	0					
ANR	3580823	Identifier	d_name		3580637	1					
ANR	3580824	Argument	statp		3580637	1					
ANR	3580825	Identifier	statp		3580637	0					
ANR	3580826	IfStatement	if ( r == - 1 )		3580637	3					
ANR	3580827	Condition	r == - 1	1383:16:34511:34517	3580637	0	True				
ANR	3580828	EqualityExpression	r == - 1		3580637	0		==			
ANR	3580829	Identifier	r		3580637	0					
ANR	3580830	UnaryOperationExpression	- 1		3580637	1					
ANR	3580831	UnaryOperator	-		3580637	0					
ANR	3580832	PrimaryExpression	1		3580637	1					
ANR	3580833	CompoundStatement		44:25:898:898	3580637	1					
ANR	3580834	ExpressionStatement	statp = 0	1384:16:34538:34547	3580637	0	True				
ANR	3580835	AssignmentExpression	statp = 0		3580637	0		=			
ANR	3580836	Identifier	statp		3580637	0					
ANR	3580837	PrimaryExpression	0		3580637	1					
ANR	3580838	IfStatement	if ( statp && S_ISDIR ( statp -> st_mode ) )		3580637	4					
ANR	3580839	Condition	statp && S_ISDIR ( statp -> st_mode )	1387:16:34580:34611	3580637	0	True				
ANR	3580840	AndExpression	statp && S_ISDIR ( statp -> st_mode )		3580637	0		&&			
ANR	3580841	Identifier	statp		3580637	0					
ANR	3580842	CallExpression	S_ISDIR ( statp -> st_mode )		3580637	1					
ANR	3580843	Callee	S_ISDIR		3580637	0					
ANR	3580844	Identifier	S_ISDIR		3580637	0					
ANR	3580845	ArgumentList	statp -> st_mode		3580637	1					
ANR	3580846	Argument	statp -> st_mode		3580637	0					
ANR	3580847	PtrMemberAccess	statp -> st_mode		3580637	0					
ANR	3580848	Identifier	statp		3580637	0					
ANR	3580849	Identifier	st_mode		3580637	1					
ANR	3580850	CompoundStatement		49:16:1010:1045	3580637	1					
ANR	3580851	IdentifierDeclStatement	char * dir_name = strdup ( de -> d_name ) ;	1388:16:34632:34667	3580637	0	True				
ANR	3580852	IdentifierDecl	* dir_name = strdup ( de -> d_name )		3580637	0					
ANR	3580853	IdentifierDeclType	char *		3580637	0					
ANR	3580854	Identifier	dir_name		3580637	1					
ANR	3580855	AssignmentExpression	* dir_name = strdup ( de -> d_name )		3580637	2		=			
ANR	3580856	Identifier	dir_name		3580637	0					
ANR	3580857	CallExpression	strdup ( de -> d_name )		3580637	1					
ANR	3580858	Callee	strdup		3580637	0					
ANR	3580859	Identifier	strdup		3580637	0					
ANR	3580860	ArgumentList	de -> d_name		3580637	1					
ANR	3580861	Argument	de -> d_name		3580637	0					
ANR	3580862	PtrMemberAccess	de -> d_name		3580637	0					
ANR	3580863	Identifier	de		3580637	0					
ANR	3580864	Identifier	d_name		3580637	1					
ANR	3580865	IfStatement	if ( dir_name == NULL )		3580637	1					
ANR	3580866	Condition	dir_name == NULL	1389:20:34689:34704	3580637	0	True				
ANR	3580867	EqualityExpression	dir_name == NULL		3580637	0		==			
ANR	3580868	Identifier	dir_name		3580637	0					
ANR	3580869	Identifier	NULL		3580637	1					
ANR	3580870	CompoundStatement		50:38:1085:1085	3580637	1					
ANR	3580871	ExpressionStatement	status = - 1	1390:20:34729:34740	3580637	0	True				
ANR	3580872	AssignmentExpression	status = - 1		3580637	0		=			
ANR	3580873	Identifier	status		3580637	0					
ANR	3580874	UnaryOperationExpression	- 1		3580637	1					
ANR	3580875	UnaryOperator	-		3580637	0					
ANR	3580876	PrimaryExpression	1		3580637	1					
ANR	3580877	BreakStatement	break ;	1391:20:34762:34767	3580637	1	True				
ANR	3580878	ExpressionStatement	"add_string_to_list ( & dirs , dir_name )"	1393:16:34803:34838	3580637	2	True				
ANR	3580879	CallExpression	"add_string_to_list ( & dirs , dir_name )"		3580637	0					
ANR	3580880	Callee	add_string_to_list		3580637	0					
ANR	3580881	Identifier	add_string_to_list		3580637	0					
ANR	3580882	ArgumentList	& dirs		3580637	1					
ANR	3580883	Argument	& dirs		3580637	0					
ANR	3580884	UnaryOperationExpression	& dirs		3580637	0					
ANR	3580885	UnaryOperator	&		3580637	0					
ANR	3580886	Identifier	dirs		3580637	1					
ANR	3580887	Argument	dir_name		3580637	1					
ANR	3580888	Identifier	dir_name		3580637	0					
ANR	3580889	ElseStatement	else		3580637	0					
ANR	3580890	CompoundStatement		55:19:1237:1237	3580637	0					
ANR	3580891	ExpressionStatement	"status = func ( de -> d_name , statp , data )"	1395:16:34877:34915	3580637	0	True				
ANR	3580892	AssignmentExpression	"status = func ( de -> d_name , statp , data )"		3580637	0		=			
ANR	3580893	Identifier	status		3580637	0					
ANR	3580894	CallExpression	"func ( de -> d_name , statp , data )"		3580637	1					
ANR	3580895	Callee	func		3580637	0					
ANR	3580896	Identifier	func		3580637	0					
ANR	3580897	ArgumentList	de -> d_name		3580637	1					
ANR	3580898	Argument	de -> d_name		3580637	0					
ANR	3580899	PtrMemberAccess	de -> d_name		3580637	0					
ANR	3580900	Identifier	de		3580637	0					
ANR	3580901	Identifier	d_name		3580637	1					
ANR	3580902	Argument	statp		3580637	1					
ANR	3580903	Identifier	statp		3580637	0					
ANR	3580904	Argument	data		3580637	2					
ANR	3580905	Identifier	data		3580637	0					
ANR	3580906	IfStatement	if ( status != 0 )		3580637	1					
ANR	3580907	Condition	status != 0	1396:20:34937:34947	3580637	0	True				
ANR	3580908	EqualityExpression	status != 0		3580637	0		!=			
ANR	3580909	Identifier	status		3580637	0					
ANR	3580910	PrimaryExpression	0		3580637	1					
ANR	3580911	CompoundStatement		57:33:1328:1328	3580637	1					
ANR	3580912	BreakStatement	break ;	1397:20:34972:34977	3580637	0	True				
ANR	3580913	ExpressionStatement	r = closedir ( dir )	1403:4:35032:35049	3580637	19	True				
ANR	3580914	AssignmentExpression	r = closedir ( dir )		3580637	0		=			
ANR	3580915	Identifier	r		3580637	0					
ANR	3580916	CallExpression	closedir ( dir )		3580637	1					
ANR	3580917	Callee	closedir		3580637	0					
ANR	3580918	Identifier	closedir		3580637	0					
ANR	3580919	ArgumentList	dir		3580637	1					
ANR	3580920	Argument	dir		3580637	0					
ANR	3580921	Identifier	dir		3580637	0					
ANR	3580922	IfStatement	if ( status == 0 && r == - 1 )		3580637	20					
ANR	3580923	Condition	status == 0 && r == - 1	1404:8:35059:35080	3580637	0	True				
ANR	3580924	AndExpression	status == 0 && r == - 1		3580637	0		&&			
ANR	3580925	EqualityExpression	status == 0		3580637	0		==			
ANR	3580926	Identifier	status		3580637	0					
ANR	3580927	PrimaryExpression	0		3580637	1					
ANR	3580928	EqualityExpression	r == - 1		3580637	1		==			
ANR	3580929	Identifier	r		3580637	0					
ANR	3580930	UnaryOperationExpression	- 1		3580637	1					
ANR	3580931	UnaryOperator	-		3580637	0					
ANR	3580932	PrimaryExpression	1		3580637	1					
ANR	3580933	CompoundStatement		65:32:1461:1461	3580637	1					
ANR	3580934	ExpressionStatement	status = - 1	1405:8:35093:35104	3580637	0	True				
ANR	3580935	AssignmentExpression	status = - 1		3580637	0		=			
ANR	3580936	Identifier	status		3580637	0					
ANR	3580937	UnaryOperationExpression	- 1		3580637	1					
ANR	3580938	UnaryOperator	-		3580637	0					
ANR	3580939	PrimaryExpression	1		3580637	1					
ANR	3580940	IfStatement	if ( status == 0 )		3580637	21					
ANR	3580941	Condition	status == 0	1408:8:35121:35131	3580637	0	True				
ANR	3580942	EqualityExpression	status == 0		3580637	0		==			
ANR	3580943	Identifier	status		3580637	0					
ANR	3580944	PrimaryExpression	0		3580637	1					
ANR	3580945	CompoundStatement		70:8:1522:1582	3580637	1					
ANR	3580946	IdentifierDeclStatement	char * * dirptr = null_terminated_list_from_string_list ( & dirs ) ;	1409:8:35144:35204	3580637	0	True				
ANR	3580947	IdentifierDecl	* * dirptr = null_terminated_list_from_string_list ( & dirs )		3580637	0					
ANR	3580948	IdentifierDeclType	char * *		3580637	0					
ANR	3580949	Identifier	dirptr		3580637	1					
ANR	3580950	AssignmentExpression	* * dirptr = null_terminated_list_from_string_list ( & dirs )		3580637	2		=			
ANR	3580951	Identifier	dirptr		3580637	0					
ANR	3580952	CallExpression	null_terminated_list_from_string_list ( & dirs )		3580637	1					
ANR	3580953	Callee	null_terminated_list_from_string_list		3580637	0					
ANR	3580954	Identifier	null_terminated_list_from_string_list		3580637	0					
ANR	3580955	ArgumentList	& dirs		3580637	1					
ANR	3580956	Argument	& dirs		3580637	0					
ANR	3580957	UnaryOperationExpression	& dirs		3580637	0					
ANR	3580958	UnaryOperator	&		3580637	0					
ANR	3580959	Identifier	dirs		3580637	1					
ANR	3580960	WhileStatement	while ( * dirptr )		3580637	1					
ANR	3580961	Condition	* dirptr	1411:15:35222:35228	3580637	0	True				
ANR	3580962	UnaryOperationExpression	* dirptr		3580637	0					
ANR	3580963	UnaryOperator	*		3580637	0					
ANR	3580964	Identifier	dirptr		3580637	1					
ANR	3580965	CompoundStatement		72:24:1609:1609	3580637	1					
ANR	3580966	ExpressionStatement	status = chdir_no_follow ( * dirptr )	1413:12:35246:35279	3580637	0	True				
ANR	3580967	AssignmentExpression	status = chdir_no_follow ( * dirptr )		3580637	0		=			
ANR	3580968	Identifier	status		3580637	0					
ANR	3580969	CallExpression	chdir_no_follow ( * dirptr )		3580637	1					
ANR	3580970	Callee	chdir_no_follow		3580637	0					
ANR	3580971	Identifier	chdir_no_follow		3580637	0					
ANR	3580972	ArgumentList	* dirptr		3580637	1					
ANR	3580973	Argument	* dirptr		3580637	0					
ANR	3580974	UnaryOperationExpression	* dirptr		3580637	0					
ANR	3580975	UnaryOperator	*		3580637	0					
ANR	3580976	Identifier	dirptr		3580637	1					
ANR	3580977	IfStatement	if ( status == - 1 )		3580637	1					
ANR	3580978	Condition	status == - 1	1414:16:35297:35308	3580637	0	True				
ANR	3580979	EqualityExpression	status == - 1		3580637	0		==			
ANR	3580980	Identifier	status		3580637	0					
ANR	3580981	UnaryOperationExpression	- 1		3580637	1					
ANR	3580982	UnaryOperator	-		3580637	0					
ANR	3580983	PrimaryExpression	1		3580637	1					
ANR	3580984	CompoundStatement		75:30:1689:1689	3580637	1					
ANR	3580985	BreakStatement	break ;	1415:16:35329:35334	3580637	0	True				
ANR	3580986	ExpressionStatement	"status = do_dir_contents_one_fd ( func , data )"	1418:12:35363:35406	3580637	2	True				
ANR	3580987	AssignmentExpression	"status = do_dir_contents_one_fd ( func , data )"		3580637	0		=			
ANR	3580988	Identifier	status		3580637	0					
ANR	3580989	CallExpression	"do_dir_contents_one_fd ( func , data )"		3580637	1					
ANR	3580990	Callee	do_dir_contents_one_fd		3580637	0					
ANR	3580991	Identifier	do_dir_contents_one_fd		3580637	0					
ANR	3580992	ArgumentList	func		3580637	1					
ANR	3580993	Argument	func		3580637	0					
ANR	3580994	Identifier	func		3580637	0					
ANR	3580995	Argument	data		3580637	1					
ANR	3580996	Identifier	data		3580637	0					
ANR	3580997	ExpressionStatement	"r = chdir ( "".."" )"	1420:12:35421:35436	3580637	3	True				
ANR	3580998	AssignmentExpression	"r = chdir ( "".."" )"		3580637	0		=			
ANR	3580999	Identifier	r		3580637	0					
ANR	3581000	CallExpression	"chdir ( "".."" )"		3580637	1					
ANR	3581001	Callee	chdir		3580637	0					
ANR	3581002	Identifier	chdir		3580637	0					
ANR	3581003	ArgumentList	""".."""		3580637	1					
ANR	3581004	Argument	""".."""		3580637	0					
ANR	3581005	PrimaryExpression	""".."""		3580637	0					
ANR	3581006	IfStatement	if ( status != 0 || r == - 1 )		3580637	4					
ANR	3581007	Condition	status != 0 || r == - 1	1421:16:35454:35475	3580637	0	True				
ANR	3581008	OrExpression	status != 0 || r == - 1		3580637	0		||			
ANR	3581009	EqualityExpression	status != 0		3580637	0		!=			
ANR	3581010	Identifier	status		3580637	0					
ANR	3581011	PrimaryExpression	0		3580637	1					
ANR	3581012	EqualityExpression	r == - 1		3580637	1		==			
ANR	3581013	Identifier	r		3580637	0					
ANR	3581014	UnaryOperationExpression	- 1		3580637	1					
ANR	3581015	UnaryOperator	-		3580637	0					
ANR	3581016	PrimaryExpression	1		3580637	1					
ANR	3581017	CompoundStatement		82:40:1856:1856	3580637	1					
ANR	3581018	IfStatement	if ( status == 0 )		3580637	0					
ANR	3581019	Condition	status == 0	1422:20:35500:35510	3580637	0	True				
ANR	3581020	EqualityExpression	status == 0		3580637	0		==			
ANR	3581021	Identifier	status		3580637	0					
ANR	3581022	PrimaryExpression	0		3580637	1					
ANR	3581023	CompoundStatement		83:33:1891:1891	3580637	1					
ANR	3581024	ExpressionStatement	status = - 1	1423:20:35535:35546	3580637	0	True				
ANR	3581025	AssignmentExpression	status = - 1		3580637	0		=			
ANR	3581026	Identifier	status		3580637	0					
ANR	3581027	UnaryOperationExpression	- 1		3580637	1					
ANR	3581028	UnaryOperator	-		3580637	0					
ANR	3581029	PrimaryExpression	1		3580637	1					
ANR	3581030	BreakStatement	break ;	1425:16:35582:35587	3580637	1	True				
ANR	3581031	ExpressionStatement	"r = lstat ( ""."" , & stat_buf )"	1428:12:35616:35641	3580637	5	True				
ANR	3581032	AssignmentExpression	"r = lstat ( ""."" , & stat_buf )"		3580637	0		=			
ANR	3581033	Identifier	r		3580637	0					
ANR	3581034	CallExpression	"lstat ( ""."" , & stat_buf )"		3580637	1					
ANR	3581035	Callee	lstat		3580637	0					
ANR	3581036	Identifier	lstat		3580637	0					
ANR	3581037	ArgumentList	"""."""		3580637	1					
ANR	3581038	Argument	"""."""		3580637	0					
ANR	3581039	PrimaryExpression	"""."""		3580637	0					
ANR	3581040	Argument	& stat_buf		3580637	1					
ANR	3581041	UnaryOperationExpression	& stat_buf		3580637	0					
ANR	3581042	UnaryOperator	&		3580637	0					
ANR	3581043	Identifier	stat_buf		3580637	1					
ANR	3581044	IfStatement	if ( r == - 1 )		3580637	6					
ANR	3581045	Condition	r == - 1	1429:16:35659:35665	3580637	0	True				
ANR	3581046	EqualityExpression	r == - 1		3580637	0		==			
ANR	3581047	Identifier	r		3580637	0					
ANR	3581048	UnaryOperationExpression	- 1		3580637	1					
ANR	3581049	UnaryOperator	-		3580637	0					
ANR	3581050	PrimaryExpression	1		3580637	1					
ANR	3581051	CompoundStatement		90:25:2046:2046	3580637	1					
ANR	3581052	ExpressionStatement	status = - 1	1430:16:35686:35697	3580637	0	True				
ANR	3581053	AssignmentExpression	status = - 1		3580637	0		=			
ANR	3581054	Identifier	status		3580637	0					
ANR	3581055	UnaryOperationExpression	- 1		3580637	1					
ANR	3581056	UnaryOperator	-		3580637	0					
ANR	3581057	PrimaryExpression	1		3580637	1					
ANR	3581058	BreakStatement	break ;	1431:16:35715:35720	3580637	1	True				
ANR	3581059	IfStatement	if ( cur_dir_dev != stat_buf . st_dev || cur_dir_ino != stat_buf . st_ino )		3580637	7					
ANR	3581060	Condition	cur_dir_dev != stat_buf . st_dev || cur_dir_ino != stat_buf . st_ino	1435:16:35820:35899	3580637	0	True				
ANR	3581061	OrExpression	cur_dir_dev != stat_buf . st_dev || cur_dir_ino != stat_buf . st_ino		3580637	0		||			
ANR	3581062	EqualityExpression	cur_dir_dev != stat_buf . st_dev		3580637	0		!=			
ANR	3581063	Identifier	cur_dir_dev		3580637	0					
ANR	3581064	MemberAccess	stat_buf . st_dev		3580637	1					
ANR	3581065	Identifier	stat_buf		3580637	0					
ANR	3581066	Identifier	st_dev		3580637	1					
ANR	3581067	EqualityExpression	cur_dir_ino != stat_buf . st_ino		3580637	1		!=			
ANR	3581068	Identifier	cur_dir_ino		3580637	0					
ANR	3581069	MemberAccess	stat_buf . st_ino		3580637	1					
ANR	3581070	Identifier	stat_buf		3580637	0					
ANR	3581071	Identifier	st_ino		3580637	1					
ANR	3581072	CompoundStatement		97:51:2280:2280	3580637	1					
ANR	3581073	ExpressionStatement	status = - 1	1437:16:35920:35931	3580637	0	True				
ANR	3581074	AssignmentExpression	status = - 1		3580637	0		=			
ANR	3581075	Identifier	status		3580637	0					
ANR	3581076	UnaryOperationExpression	- 1		3580637	1					
ANR	3581077	UnaryOperator	-		3580637	0					
ANR	3581078	PrimaryExpression	1		3580637	1					
ANR	3581079	BreakStatement	break ;	1438:16:35949:35954	3580637	1	True				
ANR	3581080	ExpressionStatement	statp = & stat_buf	1441:12:35983:36000	3580637	8	True				
ANR	3581081	AssignmentExpression	statp = & stat_buf		3580637	0		=			
ANR	3581082	Identifier	statp		3580637	0					
ANR	3581083	UnaryOperationExpression	& stat_buf		3580637	1					
ANR	3581084	UnaryOperator	&		3580637	0					
ANR	3581085	Identifier	stat_buf		3580637	1					
ANR	3581086	ExpressionStatement	"r = lstat ( * dirptr , statp )"	1442:12:36014:36039	3580637	9	True				
ANR	3581087	AssignmentExpression	"r = lstat ( * dirptr , statp )"		3580637	0		=			
ANR	3581088	Identifier	r		3580637	0					
ANR	3581089	CallExpression	"lstat ( * dirptr , statp )"		3580637	1					
ANR	3581090	Callee	lstat		3580637	0					
ANR	3581091	Identifier	lstat		3580637	0					
ANR	3581092	ArgumentList	* dirptr		3580637	1					
ANR	3581093	Argument	* dirptr		3580637	0					
ANR	3581094	UnaryOperationExpression	* dirptr		3580637	0					
ANR	3581095	UnaryOperator	*		3580637	0					
ANR	3581096	Identifier	dirptr		3580637	1					
ANR	3581097	Argument	statp		3580637	1					
ANR	3581098	Identifier	statp		3580637	0					
ANR	3581099	IfStatement	if ( r == - 1 )		3580637	10					
ANR	3581100	Condition	r == - 1	1443:16:36057:36063	3580637	0	True				
ANR	3581101	EqualityExpression	r == - 1		3580637	0		==			
ANR	3581102	Identifier	r		3580637	0					
ANR	3581103	UnaryOperationExpression	- 1		3580637	1					
ANR	3581104	UnaryOperator	-		3580637	0					
ANR	3581105	PrimaryExpression	1		3580637	1					
ANR	3581106	CompoundStatement		104:25:2444:2444	3580637	1					
ANR	3581107	ExpressionStatement	statp = 0	1444:16:36084:36093	3580637	0	True				
ANR	3581108	AssignmentExpression	statp = 0		3580637	0		=			
ANR	3581109	Identifier	statp		3580637	0					
ANR	3581110	PrimaryExpression	0		3580637	1					
ANR	3581111	ExpressionStatement	"status = func ( * dirptr , statp , data )"	1447:12:36122:36157	3580637	11	True				
ANR	3581112	AssignmentExpression	"status = func ( * dirptr , statp , data )"		3580637	0		=			
ANR	3581113	Identifier	status		3580637	0					
ANR	3581114	CallExpression	"func ( * dirptr , statp , data )"		3580637	1					
ANR	3581115	Callee	func		3580637	0					
ANR	3581116	Identifier	func		3580637	0					
ANR	3581117	ArgumentList	* dirptr		3580637	1					
ANR	3581118	Argument	* dirptr		3580637	0					
ANR	3581119	UnaryOperationExpression	* dirptr		3580637	0					
ANR	3581120	UnaryOperator	*		3580637	0					
ANR	3581121	Identifier	dirptr		3580637	1					
ANR	3581122	Argument	statp		3580637	1					
ANR	3581123	Identifier	statp		3580637	0					
ANR	3581124	Argument	data		3580637	2					
ANR	3581125	Identifier	data		3580637	0					
ANR	3581126	IfStatement	if ( status != 0 )		3580637	12					
ANR	3581127	Condition	status != 0	1448:16:36175:36185	3580637	0	True				
ANR	3581128	EqualityExpression	status != 0		3580637	0		!=			
ANR	3581129	Identifier	status		3580637	0					
ANR	3581130	PrimaryExpression	0		3580637	1					
ANR	3581131	CompoundStatement		109:29:2566:2566	3580637	1					
ANR	3581132	BreakStatement	break ;	1449:16:36206:36211	3580637	0	True				
ANR	3581133	ExpressionStatement	++ dirptr	1452:12:36240:36248	3580637	13	True				
ANR	3581134	UnaryExpression	++ dirptr		3580637	0					
ANR	3581135	IncDec	++		3580637	0					
ANR	3581136	Identifier	dirptr		3580637	1					
ANR	3581137	ExpressionStatement	destroy_string_list ( & dirs )	1456:4:36271:36297	3580637	22	True				
ANR	3581138	CallExpression	destroy_string_list ( & dirs )		3580637	0					
ANR	3581139	Callee	destroy_string_list		3580637	0					
ANR	3581140	Identifier	destroy_string_list		3580637	0					
ANR	3581141	ArgumentList	& dirs		3580637	1					
ANR	3581142	Argument	& dirs		3580637	0					
ANR	3581143	UnaryOperationExpression	& dirs		3580637	0					
ANR	3581144	UnaryOperator	&		3580637	0					
ANR	3581145	Identifier	dirs		3580637	1					
ANR	3581146	IfStatement	if ( status == 0 )		3580637	23					
ANR	3581147	Condition	status == 0	1458:8:36308:36318	3580637	0	True				
ANR	3581148	EqualityExpression	status == 0		3580637	0		==			
ANR	3581149	Identifier	status		3580637	0					
ANR	3581150	PrimaryExpression	0		3580637	1					
ANR	3581151	CompoundStatement		119:21:2699:2699	3580637	1					
ANR	3581152	ExpressionStatement	status = r	1459:8:36331:36341	3580637	0	True				
ANR	3581153	AssignmentExpression	status = r		3580637	0		=			
ANR	3581154	Identifier	status		3580637	0					
ANR	3581155	Identifier	r		3580637	1					
ANR	3581156	ReturnStatement	return status ;	1462:4:36354:36367	3580637	24	True				
ANR	3581157	Identifier	status		3580637	0					
ANR	3581158	ReturnType	static int		3580637	1					
ANR	3581159	Identifier	do_dir_contents_one_fd		3580637	2					
ANR	3581160	ParameterList	"safe_dir_walk_func func , void * data"		3580637	3					
ANR	3581161	Parameter	safe_dir_walk_func func	1339:34:33584:33606	3580637	0	True				
ANR	3581162	ParameterType	safe_dir_walk_func		3580637	0					
ANR	3581163	Identifier	func		3580637	1					
ANR	3581164	Parameter	void * data	1339:59:33609:33618	3580637	1	True				
ANR	3581165	ParameterType	void *		3580637	0					
ANR	3581166	Identifier	data		3580637	1					
ANR	3581167	CFGEntryNode	ENTRY		3580637		True				
ANR	3581168	CFGExitNode	EXIT		3580637		True				
ANR	3581169	Symbol	de		3580637						
ANR	3581170	Symbol	de -> d_name		3580637						
ANR	3581171	Symbol	statp -> st_mode		3580637						
ANR	3581172	Symbol	data		3580637						
ANR	3581173	Symbol	& stat_buf		3580637						
ANR	3581174	Symbol	stat_buf		3580637						
ANR	3581175	Symbol	& dirs		3580637						
ANR	3581176	Symbol	stat_buf . st_dev		3580637						
ANR	3581177	Symbol	dir		3580637						
ANR	3581178	Symbol	* statp		3580637						
ANR	3581179	Symbol	dir_fd		3580637						
ANR	3581180	Symbol	readdir		3580637						
ANR	3581181	Symbol	statp		3580637						
ANR	3581182	Symbol	chdir_no_follow		3580637						
ANR	3581183	Symbol	stat_buf . st_ino		3580637						
ANR	3581184	Symbol	strcmp		3580637						
ANR	3581185	Symbol	dirptr		3580637						
ANR	3581186	Symbol	cur_dir_ino		3580637						
ANR	3581187	Symbol	NULL		3580637						
ANR	3581188	Symbol	* de		3580637						
ANR	3581189	Symbol	lstat		3580637						
ANR	3581190	Symbol	dir_name		3580637						
ANR	3581191	Symbol	dirs		3580637						
ANR	3581192	Symbol	fstat		3580637						
ANR	3581193	Symbol	chdir		3580637						
ANR	3581194	Symbol	* dirptr		3580637						
ANR	3581195	Symbol	r		3580637						
ANR	3581196	Symbol	func		3580637						
ANR	3581197	Symbol	do_dir_contents_one_fd		3580637						
ANR	3581198	Symbol	opendir		3580637						
ANR	3581199	Symbol	closedir		3580637						
ANR	3581200	Symbol	dirfd		3580637						
ANR	3581201	Symbol	S_ISDIR		3580637						
ANR	3581202	Symbol	strdup		3580637						
ANR	3581203	Symbol	null_terminated_list_from_string_list		3580637						
ANR	3581204	Symbol	cur_dir_dev		3580637						
ANR	3581205	Symbol	status		3580637						
ANR	3581206	Function	do_dir_contents	1480:0:36714:38160							
ANR	3581207	FunctionDef	"do_dir_contents (safe_dir_walk_func func , void * data , int num_fds)"		3581206	0					
ANR	3581208	CompoundStatement		1482:0:36791:38160	3581206	0					
ANR	3581209	IdentifierDeclStatement	DIR * dir ;	1483:4:36797:36805	3581206	0	True				
ANR	3581210	IdentifierDecl	* dir		3581206	0					
ANR	3581211	IdentifierDeclType	DIR *		3581206	0					
ANR	3581212	Identifier	dir		3581206	1					
ANR	3581213	IdentifierDeclStatement	int dir_fd ;	1484:4:36811:36821	3581206	1	True				
ANR	3581214	IdentifierDecl	dir_fd		3581206	0					
ANR	3581215	IdentifierDeclType	int		3581206	0					
ANR	3581216	Identifier	dir_fd		3581206	1					
ANR	3581217	IdentifierDeclStatement	int r ;	1485:4:36827:36832	3581206	2	True				
ANR	3581218	IdentifierDecl	r		3581206	0					
ANR	3581219	IdentifierDeclType	int		3581206	0					
ANR	3581220	Identifier	r		3581206	1					
ANR	3581221	IdentifierDeclStatement	int status = 0 ;	1486:4:36838:36852	3581206	3	True				
ANR	3581222	IdentifierDecl	status = 0		3581206	0					
ANR	3581223	IdentifierDeclType	int		3581206	0					
ANR	3581224	Identifier	status		3581206	1					
ANR	3581225	AssignmentExpression	status = 0		3581206	2		=			
ANR	3581226	Identifier	status		3581206	0					
ANR	3581227	PrimaryExpression	0		3581206	1					
ANR	3581228	IdentifierDeclStatement	struct dirent * de ;	1487:4:36858:36875	3581206	4	True				
ANR	3581229	IdentifierDecl	* de		3581206	0					
ANR	3581230	IdentifierDeclType	struct dirent *		3581206	0					
ANR	3581231	Identifier	de		3581206	1					
ANR	3581232	IfStatement	if ( num_fds <= 1 )		3581206	5					
ANR	3581233	Condition	num_fds <= 1	1489:8:36886:36897	3581206	0	True				
ANR	3581234	RelationalExpression	num_fds <= 1		3581206	0		<=			
ANR	3581235	Identifier	num_fds		3581206	0					
ANR	3581236	PrimaryExpression	1		3581206	1					
ANR	3581237	CompoundStatement		8:22:108:108	3581206	1					
ANR	3581238	ReturnStatement	"return do_dir_contents_one_fd ( func , data ) ;"	1490:8:36910:36951	3581206	0	True				
ANR	3581239	CallExpression	"do_dir_contents_one_fd ( func , data )"		3581206	0					
ANR	3581240	Callee	do_dir_contents_one_fd		3581206	0					
ANR	3581241	Identifier	do_dir_contents_one_fd		3581206	0					
ANR	3581242	ArgumentList	func		3581206	1					
ANR	3581243	Argument	func		3581206	0					
ANR	3581244	Identifier	func		3581206	0					
ANR	3581245	Argument	data		3581206	1					
ANR	3581246	Identifier	data		3581206	0					
ANR	3581247	ExpressionStatement	"dir = opendir ( ""."" )"	1493:4:36978:36996	3581206	6	True				
ANR	3581248	AssignmentExpression	"dir = opendir ( ""."" )"		3581206	0		=			
ANR	3581249	Identifier	dir		3581206	0					
ANR	3581250	CallExpression	"opendir ( ""."" )"		3581206	1					
ANR	3581251	Callee	opendir		3581206	0					
ANR	3581252	Identifier	opendir		3581206	0					
ANR	3581253	ArgumentList	"""."""		3581206	1					
ANR	3581254	Argument	"""."""		3581206	0					
ANR	3581255	PrimaryExpression	"""."""		3581206	0					
ANR	3581256	IfStatement	if ( dir == NULL )		3581206	7					
ANR	3581257	Condition	dir == NULL	1494:8:37006:37016	3581206	0	True				
ANR	3581258	EqualityExpression	dir == NULL		3581206	0		==			
ANR	3581259	Identifier	dir		3581206	0					
ANR	3581260	Identifier	NULL		3581206	1					
ANR	3581261	CompoundStatement		13:21:227:227	3581206	1					
ANR	3581262	ReturnStatement	return - 1 ;	1495:8:37029:37038	3581206	0	True				
ANR	3581263	UnaryOperationExpression	- 1		3581206	0					
ANR	3581264	UnaryOperator	-		3581206	0					
ANR	3581265	PrimaryExpression	1		3581206	1					
ANR	3581266	ExpressionStatement	dir_fd = dirfd ( dir )	1497:4:37050:37069	3581206	8	True				
ANR	3581267	AssignmentExpression	dir_fd = dirfd ( dir )		3581206	0		=			
ANR	3581268	Identifier	dir_fd		3581206	0					
ANR	3581269	CallExpression	dirfd ( dir )		3581206	1					
ANR	3581270	Callee	dirfd		3581206	0					
ANR	3581271	Identifier	dirfd		3581206	0					
ANR	3581272	ArgumentList	dir		3581206	1					
ANR	3581273	Argument	dir		3581206	0					
ANR	3581274	Identifier	dir		3581206	0					
ANR	3581275	WhileStatement	while ( ( de = readdir ( dir ) ) != 0 )		3581206	9					
ANR	3581276	Condition	( de = readdir ( dir ) ) != 0	1504:11:37180:37203	3581206	0	True				
ANR	3581277	EqualityExpression	( de = readdir ( dir ) ) != 0		3581206	0		!=			
ANR	3581278	AssignmentExpression	de = readdir ( dir )		3581206	0		=			
ANR	3581279	Identifier	de		3581206	0					
ANR	3581280	CallExpression	readdir ( dir )		3581206	1					
ANR	3581281	Callee	readdir		3581206	0					
ANR	3581282	Identifier	readdir		3581206	0					
ANR	3581283	ArgumentList	dir		3581206	1					
ANR	3581284	Argument	dir		3581206	0					
ANR	3581285	Identifier	dir		3581206	0					
ANR	3581286	PrimaryExpression	0		3581206	1					
ANR	3581287	CompoundStatement		25:8:454:484	3581206	1					
ANR	3581288	IdentifierDeclStatement	struct stat stat_buf ;	1505:8:37216:37236	3581206	0	True				
ANR	3581289	IdentifierDecl	stat_buf		3581206	0					
ANR	3581290	IdentifierDeclType	struct stat		3581206	0					
ANR	3581291	Identifier	stat_buf		3581206	1					
ANR	3581292	IdentifierDeclStatement	struct stat * statp = & stat_buf ;	1506:8:37246:37276	3581206	1	True				
ANR	3581293	IdentifierDecl	* statp = & stat_buf		3581206	0					
ANR	3581294	IdentifierDeclType	struct stat *		3581206	0					
ANR	3581295	Identifier	statp		3581206	1					
ANR	3581296	AssignmentExpression	* statp = & stat_buf		3581206	2		=			
ANR	3581297	Identifier	statp		3581206	0					
ANR	3581298	UnaryOperationExpression	& stat_buf		3581206	1					
ANR	3581299	UnaryOperator	&		3581206	0					
ANR	3581300	Identifier	stat_buf		3581206	1					
ANR	3581301	IfStatement	"if ( ! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" ) )"		3581206	2					
ANR	3581302	Condition	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"	1508:12:37291:37343	3581206	0	True				
ANR	3581303	OrExpression	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"		3581206	0		||			
ANR	3581304	UnaryOperationExpression	"! strcmp ( de -> d_name , ""."" )"		3581206	0					
ANR	3581305	UnaryOperator	!		3581206	0					
ANR	3581306	CallExpression	"strcmp ( de -> d_name , ""."" )"		3581206	1					
ANR	3581307	Callee	strcmp		3581206	0					
ANR	3581308	Identifier	strcmp		3581206	0					
ANR	3581309	ArgumentList	de -> d_name		3581206	1					
ANR	3581310	Argument	de -> d_name		3581206	0					
ANR	3581311	PtrMemberAccess	de -> d_name		3581206	0					
ANR	3581312	Identifier	de		3581206	0					
ANR	3581313	Identifier	d_name		3581206	1					
ANR	3581314	Argument	"""."""		3581206	1					
ANR	3581315	PrimaryExpression	"""."""		3581206	0					
ANR	3581316	UnaryOperationExpression	"! strcmp ( de -> d_name , "".."" )"		3581206	1					
ANR	3581317	UnaryOperator	!		3581206	0					
ANR	3581318	CallExpression	"strcmp ( de -> d_name , "".."" )"		3581206	1					
ANR	3581319	Callee	strcmp		3581206	0					
ANR	3581320	Identifier	strcmp		3581206	0					
ANR	3581321	ArgumentList	de -> d_name		3581206	1					
ANR	3581322	Argument	de -> d_name		3581206	0					
ANR	3581323	PtrMemberAccess	de -> d_name		3581206	0					
ANR	3581324	Identifier	de		3581206	0					
ANR	3581325	Identifier	d_name		3581206	1					
ANR	3581326	Argument	""".."""		3581206	1					
ANR	3581327	PrimaryExpression	""".."""		3581206	0					
ANR	3581328	CompoundStatement		27:67:554:554	3581206	1					
ANR	3581329	ContinueStatement	continue ;	1509:12:37360:37368	3581206	0	True				
ANR	3581330	ExpressionStatement	"r = lstat ( de -> d_name , statp )"	1512:8:37389:37417	3581206	3	True				
ANR	3581331	AssignmentExpression	"r = lstat ( de -> d_name , statp )"		3581206	0		=			
ANR	3581332	Identifier	r		3581206	0					
ANR	3581333	CallExpression	"lstat ( de -> d_name , statp )"		3581206	1					
ANR	3581334	Callee	lstat		3581206	0					
ANR	3581335	Identifier	lstat		3581206	0					
ANR	3581336	ArgumentList	de -> d_name		3581206	1					
ANR	3581337	Argument	de -> d_name		3581206	0					
ANR	3581338	PtrMemberAccess	de -> d_name		3581206	0					
ANR	3581339	Identifier	de		3581206	0					
ANR	3581340	Identifier	d_name		3581206	1					
ANR	3581341	Argument	statp		3581206	1					
ANR	3581342	Identifier	statp		3581206	0					
ANR	3581343	IfStatement	if ( r == - 1 )		3581206	4					
ANR	3581344	Condition	r == - 1	1513:12:37431:37437	3581206	0	True				
ANR	3581345	EqualityExpression	r == - 1		3581206	0		==			
ANR	3581346	Identifier	r		3581206	0					
ANR	3581347	UnaryOperationExpression	- 1		3581206	1					
ANR	3581348	UnaryOperator	-		3581206	0					
ANR	3581349	PrimaryExpression	1		3581206	1					
ANR	3581350	CompoundStatement		32:21:648:648	3581206	1					
ANR	3581351	ExpressionStatement	statp = 0	1514:12:37454:37463	3581206	0	True				
ANR	3581352	AssignmentExpression	statp = 0		3581206	0		=			
ANR	3581353	Identifier	statp		3581206	0					
ANR	3581354	PrimaryExpression	0		3581206	1					
ANR	3581355	IfStatement	if ( statp && S_ISDIR ( statp -> st_mode ) )		3581206	5					
ANR	3581356	Condition	statp && S_ISDIR ( statp -> st_mode )	1517:12:37488:37519	3581206	0	True				
ANR	3581357	AndExpression	statp && S_ISDIR ( statp -> st_mode )		3581206	0		&&			
ANR	3581358	Identifier	statp		3581206	0					
ANR	3581359	CallExpression	S_ISDIR ( statp -> st_mode )		3581206	1					
ANR	3581360	Callee	S_ISDIR		3581206	0					
ANR	3581361	Identifier	S_ISDIR		3581206	0					
ANR	3581362	ArgumentList	statp -> st_mode		3581206	1					
ANR	3581363	Argument	statp -> st_mode		3581206	0					
ANR	3581364	PtrMemberAccess	statp -> st_mode		3581206	0					
ANR	3581365	Identifier	statp		3581206	0					
ANR	3581366	Identifier	st_mode		3581206	1					
ANR	3581367	CompoundStatement		36:46:730:730	3581206	1					
ANR	3581368	ExpressionStatement	status = chdir_no_follow ( de -> d_name )	1518:12:37536:37572	3581206	0	True				
ANR	3581369	AssignmentExpression	status = chdir_no_follow ( de -> d_name )		3581206	0		=			
ANR	3581370	Identifier	status		3581206	0					
ANR	3581371	CallExpression	chdir_no_follow ( de -> d_name )		3581206	1					
ANR	3581372	Callee	chdir_no_follow		3581206	0					
ANR	3581373	Identifier	chdir_no_follow		3581206	0					
ANR	3581374	ArgumentList	de -> d_name		3581206	1					
ANR	3581375	Argument	de -> d_name		3581206	0					
ANR	3581376	PtrMemberAccess	de -> d_name		3581206	0					
ANR	3581377	Identifier	de		3581206	0					
ANR	3581378	Identifier	d_name		3581206	1					
ANR	3581379	IfStatement	if ( status == - 1 )		3581206	1					
ANR	3581380	Condition	status == - 1	1519:16:37590:37601	3581206	0	True				
ANR	3581381	EqualityExpression	status == - 1		3581206	0		==			
ANR	3581382	Identifier	status		3581206	0					
ANR	3581383	UnaryOperationExpression	- 1		3581206	1					
ANR	3581384	UnaryOperator	-		3581206	0					
ANR	3581385	PrimaryExpression	1		3581206	1					
ANR	3581386	CompoundStatement		38:30:812:812	3581206	1					
ANR	3581387	BreakStatement	break ;	1520:16:37622:37627	3581206	0	True				
ANR	3581388	ExpressionStatement	"status = do_dir_contents ( func , data , num_fds - 1 )"	1523:12:37656:37705	3581206	2	True				
ANR	3581389	AssignmentExpression	"status = do_dir_contents ( func , data , num_fds - 1 )"		3581206	0		=			
ANR	3581390	Identifier	status		3581206	0					
ANR	3581391	CallExpression	"do_dir_contents ( func , data , num_fds - 1 )"		3581206	1					
ANR	3581392	Callee	do_dir_contents		3581206	0					
ANR	3581393	Identifier	do_dir_contents		3581206	0					
ANR	3581394	ArgumentList	func		3581206	1					
ANR	3581395	Argument	func		3581206	0					
ANR	3581396	Identifier	func		3581206	0					
ANR	3581397	Argument	data		3581206	1					
ANR	3581398	Identifier	data		3581206	0					
ANR	3581399	Argument	num_fds - 1		3581206	2					
ANR	3581400	AdditiveExpression	num_fds - 1		3581206	0		-			
ANR	3581401	Identifier	num_fds		3581206	0					
ANR	3581402	PrimaryExpression	1		3581206	1					
ANR	3581403	ExpressionStatement	r = fchdir ( dir_fd )	1525:12:37720:37738	3581206	3	True				
ANR	3581404	AssignmentExpression	r = fchdir ( dir_fd )		3581206	0		=			
ANR	3581405	Identifier	r		3581206	0					
ANR	3581406	CallExpression	fchdir ( dir_fd )		3581206	1					
ANR	3581407	Callee	fchdir		3581206	0					
ANR	3581408	Identifier	fchdir		3581206	0					
ANR	3581409	ArgumentList	dir_fd		3581206	1					
ANR	3581410	Argument	dir_fd		3581206	0					
ANR	3581411	Identifier	dir_fd		3581206	0					
ANR	3581412	IfStatement	if ( status != 0 || r != 0 )		3581206	4					
ANR	3581413	Condition	status != 0 || r != 0	1526:16:37756:37776	3581206	0	True				
ANR	3581414	OrExpression	status != 0 || r != 0		3581206	0		||			
ANR	3581415	EqualityExpression	status != 0		3581206	0		!=			
ANR	3581416	Identifier	status		3581206	0					
ANR	3581417	PrimaryExpression	0		3581206	1					
ANR	3581418	EqualityExpression	r != 0		3581206	1		!=			
ANR	3581419	Identifier	r		3581206	0					
ANR	3581420	PrimaryExpression	0		3581206	1					
ANR	3581421	CompoundStatement		45:39:987:987	3581206	1					
ANR	3581422	IfStatement	if ( status == 0 )		3581206	0					
ANR	3581423	Condition	status == 0	1527:20:37801:37811	3581206	0	True				
ANR	3581424	EqualityExpression	status == 0		3581206	0		==			
ANR	3581425	Identifier	status		3581206	0					
ANR	3581426	PrimaryExpression	0		3581206	1					
ANR	3581427	CompoundStatement		46:33:1022:1022	3581206	1					
ANR	3581428	ExpressionStatement	status = r	1528:20:37836:37846	3581206	0	True				
ANR	3581429	AssignmentExpression	status = r		3581206	0		=			
ANR	3581430	Identifier	status		3581206	0					
ANR	3581431	Identifier	r		3581206	1					
ANR	3581432	BreakStatement	break ;	1530:16:37882:37887	3581206	1	True				
ANR	3581433	ExpressionStatement	"status = func ( de -> d_name , statp , data )"	1534:8:37922:37960	3581206	6	True				
ANR	3581434	AssignmentExpression	"status = func ( de -> d_name , statp , data )"		3581206	0		=			
ANR	3581435	Identifier	status		3581206	0					
ANR	3581436	CallExpression	"func ( de -> d_name , statp , data )"		3581206	1					
ANR	3581437	Callee	func		3581206	0					
ANR	3581438	Identifier	func		3581206	0					
ANR	3581439	ArgumentList	de -> d_name		3581206	1					
ANR	3581440	Argument	de -> d_name		3581206	0					
ANR	3581441	PtrMemberAccess	de -> d_name		3581206	0					
ANR	3581442	Identifier	de		3581206	0					
ANR	3581443	Identifier	d_name		3581206	1					
ANR	3581444	Argument	statp		3581206	1					
ANR	3581445	Identifier	statp		3581206	0					
ANR	3581446	Argument	data		3581206	2					
ANR	3581447	Identifier	data		3581206	0					
ANR	3581448	IfStatement	if ( status != 0 )		3581206	7					
ANR	3581449	Condition	status != 0	1535:12:37974:37984	3581206	0	True				
ANR	3581450	EqualityExpression	status != 0		3581206	0		!=			
ANR	3581451	Identifier	status		3581206	0					
ANR	3581452	PrimaryExpression	0		3581206	1					
ANR	3581453	CompoundStatement		54:25:1195:1195	3581206	1					
ANR	3581454	BreakStatement	break ;	1536:12:38001:38006	3581206	0	True				
ANR	3581455	ExpressionStatement	r = closedir ( dir )	1540:4:38029:38046	3581206	10	True				
ANR	3581456	AssignmentExpression	r = closedir ( dir )		3581206	0		=			
ANR	3581457	Identifier	r		3581206	0					
ANR	3581458	CallExpression	closedir ( dir )		3581206	1					
ANR	3581459	Callee	closedir		3581206	0					
ANR	3581460	Identifier	closedir		3581206	0					
ANR	3581461	ArgumentList	dir		3581206	1					
ANR	3581462	Argument	dir		3581206	0					
ANR	3581463	Identifier	dir		3581206	0					
ANR	3581464	ExpressionStatement	close ( dir_fd )	1542:4:38068:38081	3581206	11	True				
ANR	3581465	CallExpression	close ( dir_fd )		3581206	0					
ANR	3581466	Callee	close		3581206	0					
ANR	3581467	Identifier	close		3581206	0					
ANR	3581468	ArgumentList	dir_fd		3581206	1					
ANR	3581469	Argument	dir_fd		3581206	0					
ANR	3581470	Identifier	dir_fd		3581206	0					
ANR	3581471	IfStatement	if ( status == 0 )		3581206	12					
ANR	3581472	Condition	status == 0	1545:8:38099:38109	3581206	0	True				
ANR	3581473	EqualityExpression	status == 0		3581206	0		==			
ANR	3581474	Identifier	status		3581206	0					
ANR	3581475	PrimaryExpression	0		3581206	1					
ANR	3581476	CompoundStatement		64:21:1320:1320	3581206	1					
ANR	3581477	ExpressionStatement	status = r	1546:8:38122:38132	3581206	0	True				
ANR	3581478	AssignmentExpression	status = r		3581206	0		=			
ANR	3581479	Identifier	status		3581206	0					
ANR	3581480	Identifier	r		3581206	1					
ANR	3581481	ReturnStatement	return status ;	1549:4:38145:38158	3581206	13	True				
ANR	3581482	Identifier	status		3581206	0					
ANR	3581483	ReturnType	static int		3581206	1					
ANR	3581484	Identifier	do_dir_contents		3581206	2					
ANR	3581485	ParameterList	"safe_dir_walk_func func , void * data , int num_fds"		3581206	3					
ANR	3581486	Parameter	safe_dir_walk_func func	1481:16:36741:36763	3581206	0	True				
ANR	3581487	ParameterType	safe_dir_walk_func		3581206	0					
ANR	3581488	Identifier	func		3581206	1					
ANR	3581489	Parameter	void * data	1481:41:36766:36775	3581206	1	True				
ANR	3581490	ParameterType	void *		3581206	0					
ANR	3581491	Identifier	data		3581206	1					
ANR	3581492	Parameter	int num_fds	1481:53:36778:36788	3581206	2	True				
ANR	3581493	ParameterType	int		3581206	0					
ANR	3581494	Identifier	num_fds		3581206	1					
ANR	3581495	CFGEntryNode	ENTRY		3581206		True				
ANR	3581496	CFGExitNode	EXIT		3581206		True				
ANR	3581497	Symbol	de		3581206						
ANR	3581498	Symbol	de -> d_name		3581206						
ANR	3581499	Symbol	statp -> st_mode		3581206						
ANR	3581500	Symbol	data		3581206						
ANR	3581501	Symbol	& stat_buf		3581206						
ANR	3581502	Symbol	stat_buf		3581206						
ANR	3581503	Symbol	dir		3581206						
ANR	3581504	Symbol	* statp		3581206						
ANR	3581505	Symbol	fchdir		3581206						
ANR	3581506	Symbol	dir_fd		3581206						
ANR	3581507	Symbol	readdir		3581206						
ANR	3581508	Symbol	statp		3581206						
ANR	3581509	Symbol	chdir_no_follow		3581206						
ANR	3581510	Symbol	strcmp		3581206						
ANR	3581511	Symbol	NULL		3581206						
ANR	3581512	Symbol	* de		3581206						
ANR	3581513	Symbol	lstat		3581206						
ANR	3581514	Symbol	r		3581206						
ANR	3581515	Symbol	func		3581206						
ANR	3581516	Symbol	do_dir_contents_one_fd		3581206						
ANR	3581517	Symbol	opendir		3581206						
ANR	3581518	Symbol	closedir		3581206						
ANR	3581519	Symbol	dirfd		3581206						
ANR	3581520	Symbol	S_ISDIR		3581206						
ANR	3581521	Symbol	do_dir_contents		3581206						
ANR	3581522	Symbol	num_fds		3581206						
ANR	3581523	Symbol	status		3581206						
ANR	3581524	Function	safe_dir_walk	1567:0:38503:39271							
ANR	3581525	FunctionDef	"safe_dir_walk (const char * path , safe_dir_walk_func func , void * data , int num_fds)"		3581524	0					
ANR	3581526	CompoundStatement		1570:0:38603:39271	3581524	0					
ANR	3581527	IdentifierDeclStatement	int r ;	1571:4:38609:38614	3581524	0	True				
ANR	3581528	IdentifierDecl	r		3581524	0					
ANR	3581529	IdentifierDeclType	int		3581524	0					
ANR	3581530	Identifier	r		3581524	1					
ANR	3581531	IdentifierDeclStatement	int saved_dir ;	1572:4:38620:38633	3581524	1	True				
ANR	3581532	IdentifierDecl	saved_dir		3581524	0					
ANR	3581533	IdentifierDeclType	int		3581524	0					
ANR	3581534	Identifier	saved_dir		3581524	1					
ANR	3581535	IdentifierDeclStatement	int status = - 1 ;	1573:4:38639:38654	3581524	2	True				
ANR	3581536	IdentifierDecl	status = - 1		3581524	0					
ANR	3581537	IdentifierDeclType	int		3581524	0					
ANR	3581538	Identifier	status		3581524	1					
ANR	3581539	AssignmentExpression	status = - 1		3581524	2		=			
ANR	3581540	Identifier	status		3581524	0					
ANR	3581541	UnaryOperationExpression	- 1		3581524	1					
ANR	3581542	UnaryOperator	-		3581524	0					
ANR	3581543	PrimaryExpression	1		3581524	1					
ANR	3581544	ExpressionStatement	"saved_dir = open ( ""."" , O_RDONLY )"	1576:4:38698:38729	3581524	3	True				
ANR	3581545	AssignmentExpression	"saved_dir = open ( ""."" , O_RDONLY )"		3581524	0		=			
ANR	3581546	Identifier	saved_dir		3581524	0					
ANR	3581547	CallExpression	"open ( ""."" , O_RDONLY )"		3581524	1					
ANR	3581548	Callee	open		3581524	0					
ANR	3581549	Identifier	open		3581524	0					
ANR	3581550	ArgumentList	"""."""		3581524	1					
ANR	3581551	Argument	"""."""		3581524	0					
ANR	3581552	PrimaryExpression	"""."""		3581524	0					
ANR	3581553	Argument	O_RDONLY		3581524	1					
ANR	3581554	Identifier	O_RDONLY		3581524	0					
ANR	3581555	IfStatement	if ( saved_dir == - 1 )		3581524	4					
ANR	3581556	Condition	saved_dir == - 1	1577:8:38739:38753	3581524	0	True				
ANR	3581557	EqualityExpression	saved_dir == - 1		3581524	0		==			
ANR	3581558	Identifier	saved_dir		3581524	0					
ANR	3581559	UnaryOperationExpression	- 1		3581524	1					
ANR	3581560	UnaryOperator	-		3581524	0					
ANR	3581561	PrimaryExpression	1		3581524	1					
ANR	3581562	CompoundStatement		8:25:152:152	3581524	1					
ANR	3581563	GotoStatement	goto cleanup_and_exit ;	1578:8:38766:38787	3581524	0	True				
ANR	3581564	Identifier	cleanup_and_exit		3581524	0					
ANR	3581565	ExpressionStatement	r = chdir_no_follow ( path )	1581:4:38800:38825	3581524	5	True				
ANR	3581566	AssignmentExpression	r = chdir_no_follow ( path )		3581524	0		=			
ANR	3581567	Identifier	r		3581524	0					
ANR	3581568	CallExpression	chdir_no_follow ( path )		3581524	1					
ANR	3581569	Callee	chdir_no_follow		3581524	0					
ANR	3581570	Identifier	chdir_no_follow		3581524	0					
ANR	3581571	ArgumentList	path		3581524	1					
ANR	3581572	Argument	path		3581524	0					
ANR	3581573	Identifier	path		3581524	0					
ANR	3581574	IfStatement	if ( r == - 1 )		3581524	6					
ANR	3581575	Condition	r == - 1	1582:8:38835:38841	3581524	0	True				
ANR	3581576	EqualityExpression	r == - 1		3581524	0		==			
ANR	3581577	Identifier	r		3581524	0					
ANR	3581578	UnaryOperationExpression	- 1		3581524	1					
ANR	3581579	UnaryOperator	-		3581524	0					
ANR	3581580	PrimaryExpression	1		3581524	1					
ANR	3581581	CompoundStatement		13:17:240:240	3581524	1					
ANR	3581582	GotoStatement	goto cleanup_and_exit ;	1583:8:38854:38875	3581524	0	True				
ANR	3581583	Identifier	cleanup_and_exit		3581524	0					
ANR	3581584	ExpressionStatement	"status = do_dir_contents ( func , data , num_fds - 1 )"	1586:4:38888:38937	3581524	7	True				
ANR	3581585	AssignmentExpression	"status = do_dir_contents ( func , data , num_fds - 1 )"		3581524	0		=			
ANR	3581586	Identifier	status		3581524	0					
ANR	3581587	CallExpression	"do_dir_contents ( func , data , num_fds - 1 )"		3581524	1					
ANR	3581588	Callee	do_dir_contents		3581524	0					
ANR	3581589	Identifier	do_dir_contents		3581524	0					
ANR	3581590	ArgumentList	func		3581524	1					
ANR	3581591	Argument	func		3581524	0					
ANR	3581592	Identifier	func		3581524	0					
ANR	3581593	Argument	data		3581524	1					
ANR	3581594	Identifier	data		3581524	0					
ANR	3581595	Argument	num_fds - 1		3581524	2					
ANR	3581596	AdditiveExpression	num_fds - 1		3581524	0		-			
ANR	3581597	Identifier	num_fds		3581524	0					
ANR	3581598	PrimaryExpression	1		3581524	1					
ANR	3581599	Label	cleanup_and_exit :	1588:2:38942:38958	3581524	8	True				
ANR	3581600	Identifier	cleanup_and_exit		3581524	0					
ANR	3581601	IfStatement	if ( saved_dir != - 1 )		3581524	9					
ANR	3581602	Condition	saved_dir != - 1	1591:8:39026:39040	3581524	0	True				
ANR	3581603	EqualityExpression	saved_dir != - 1		3581524	0		!=			
ANR	3581604	Identifier	saved_dir		3581524	0					
ANR	3581605	UnaryOperationExpression	- 1		3581524	1					
ANR	3581606	UnaryOperator	-		3581524	0					
ANR	3581607	PrimaryExpression	1		3581524	1					
ANR	3581608	CompoundStatement		22:25:439:439	3581524	1					
ANR	3581609	ExpressionStatement	r = fchdir ( saved_dir )	1592:8:39053:39074	3581524	0	True				
ANR	3581610	AssignmentExpression	r = fchdir ( saved_dir )		3581524	0		=			
ANR	3581611	Identifier	r		3581524	0					
ANR	3581612	CallExpression	fchdir ( saved_dir )		3581524	1					
ANR	3581613	Callee	fchdir		3581524	0					
ANR	3581614	Identifier	fchdir		3581524	0					
ANR	3581615	ArgumentList	saved_dir		3581524	1					
ANR	3581616	Argument	saved_dir		3581524	0					
ANR	3581617	Identifier	saved_dir		3581524	0					
ANR	3581618	IfStatement	if ( ! status && r == - 1 )		3581524	1					
ANR	3581619	Condition	! status && r == - 1	1593:12:39088:39105	3581524	0	True				
ANR	3581620	AndExpression	! status && r == - 1		3581524	0		&&			
ANR	3581621	UnaryOperationExpression	! status		3581524	0					
ANR	3581622	UnaryOperator	!		3581524	0					
ANR	3581623	Identifier	status		3581524	1					
ANR	3581624	EqualityExpression	r == - 1		3581524	1		==			
ANR	3581625	Identifier	r		3581524	0					
ANR	3581626	UnaryOperationExpression	- 1		3581524	1					
ANR	3581627	UnaryOperator	-		3581524	0					
ANR	3581628	PrimaryExpression	1		3581524	1					
ANR	3581629	CompoundStatement		24:32:504:504	3581524	1					
ANR	3581630	ExpressionStatement	status = - 1	1594:12:39122:39133	3581524	0	True				
ANR	3581631	AssignmentExpression	status = - 1		3581524	0		=			
ANR	3581632	Identifier	status		3581524	0					
ANR	3581633	UnaryOperationExpression	- 1		3581524	1					
ANR	3581634	UnaryOperator	-		3581524	0					
ANR	3581635	PrimaryExpression	1		3581524	1					
ANR	3581636	ExpressionStatement	r = close ( saved_dir )	1597:8:39154:39174	3581524	2	True				
ANR	3581637	AssignmentExpression	r = close ( saved_dir )		3581524	0		=			
ANR	3581638	Identifier	r		3581524	0					
ANR	3581639	CallExpression	close ( saved_dir )		3581524	1					
ANR	3581640	Callee	close		3581524	0					
ANR	3581641	Identifier	close		3581524	0					
ANR	3581642	ArgumentList	saved_dir		3581524	1					
ANR	3581643	Argument	saved_dir		3581524	0					
ANR	3581644	Identifier	saved_dir		3581524	0					
ANR	3581645	IfStatement	if ( ! status && r == - 1 )		3581524	3					
ANR	3581646	Condition	! status && r == - 1	1598:12:39188:39205	3581524	0	True				
ANR	3581647	AndExpression	! status && r == - 1		3581524	0		&&			
ANR	3581648	UnaryOperationExpression	! status		3581524	0					
ANR	3581649	UnaryOperator	!		3581524	0					
ANR	3581650	Identifier	status		3581524	1					
ANR	3581651	EqualityExpression	r == - 1		3581524	1		==			
ANR	3581652	Identifier	r		3581524	0					
ANR	3581653	UnaryOperationExpression	- 1		3581524	1					
ANR	3581654	UnaryOperator	-		3581524	0					
ANR	3581655	PrimaryExpression	1		3581524	1					
ANR	3581656	CompoundStatement		29:32:604:604	3581524	1					
ANR	3581657	ExpressionStatement	status = - 1	1599:12:39222:39233	3581524	0	True				
ANR	3581658	AssignmentExpression	status = - 1		3581524	0		=			
ANR	3581659	Identifier	status		3581524	0					
ANR	3581660	UnaryOperationExpression	- 1		3581524	1					
ANR	3581661	UnaryOperator	-		3581524	0					
ANR	3581662	PrimaryExpression	1		3581524	1					
ANR	3581663	ReturnStatement	return status ;	1603:4:39256:39269	3581524	10	True				
ANR	3581664	Identifier	status		3581524	0					
ANR	3581665	ReturnType	int		3581524	1					
ANR	3581666	Identifier	safe_dir_walk		3581524	2					
ANR	3581667	ParameterList	"const char * path , safe_dir_walk_func func , void * data , int num_fds"		3581524	3					
ANR	3581668	Parameter	const char * path	1568:14:38521:38536	3581524	0	True				
ANR	3581669	ParameterType	const char *		3581524	0					
ANR	3581670	Identifier	path		3581524	1					
ANR	3581671	Parameter	safe_dir_walk_func func	1568:32:38539:38561	3581524	1	True				
ANR	3581672	ParameterType	safe_dir_walk_func		3581524	0					
ANR	3581673	Identifier	func		3581524	1					
ANR	3581674	Parameter	void * data	1568:57:38564:38573	3581524	2	True				
ANR	3581675	ParameterType	void *		3581524	0					
ANR	3581676	Identifier	data		3581524	1					
ANR	3581677	Parameter	int num_fds	1569:14:38590:38600	3581524	3	True				
ANR	3581678	ParameterType	int		3581524	0					
ANR	3581679	Identifier	num_fds		3581524	1					
ANR	3581680	CFGEntryNode	ENTRY		3581524		True				
ANR	3581681	CFGExitNode	EXIT		3581524		True				
ANR	3581682	Symbol	saved_dir		3581524						
ANR	3581683	Symbol	data		3581524						
ANR	3581684	Symbol	fchdir		3581524						
ANR	3581685	Symbol	path		3581524						
ANR	3581686	Symbol	r		3581524						
ANR	3581687	Symbol	O_RDONLY		3581524						
ANR	3581688	Symbol	func		3581524						
ANR	3581689	Symbol	chdir_no_follow		3581524						
ANR	3581690	Symbol	do_dir_contents		3581524						
ANR	3581691	Symbol	num_fds		3581524						
ANR	3581692	Symbol	close		3581524						
ANR	3581693	Symbol	open		3581524						
ANR	3581694	Symbol	status		3581524						
