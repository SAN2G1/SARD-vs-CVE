command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4553852	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_MyString.cpp								
ANR	4553853	Function	MyString :: MyString	35:0:1174:1219							
ANR	4553854	FunctionDef	MyString :: MyString ()		4553853	0					
ANR	4553855	CompoundStatement		36:0:1196:1219	4553853	0					
ANR	4553856	ExpressionStatement	init ( )	37:1:1199:1205	4553853	0	True				
ANR	4553857	CallExpression	init ( )		4553853	0					
ANR	4553858	Callee	init		4553853	0					
ANR	4553859	Identifier	init		4553853	0					
ANR	4553860	ArgumentList			4553853	1					
ANR	4553861	ReturnStatement	return ;	38:4:1211:1217	4553853	1	True				
ANR	4553862	Identifier	MyString :: MyString		4553853	1					
ANR	4553863	ParameterList			4553853	2					
ANR	4553864	CFGEntryNode	ENTRY		4553853		True				
ANR	4553865	CFGExitNode	EXIT		4553853		True				
ANR	4553866	Function	MyString :: MyString	41:0:1224:1275							
ANR	4553867	FunctionDef	MyString :: MyString (int i)		4553866	0					
ANR	4553868	CompoundStatement		42:0:1251:1275	4553866	0					
ANR	4553869	ExpressionStatement	init ( )	43:1:1254:1260	4553866	0	True				
ANR	4553870	CallExpression	init ( )		4553866	0					
ANR	4553871	Callee	init		4553866	0					
ANR	4553872	Identifier	init		4553866	0					
ANR	4553873	ArgumentList			4553866	1					
ANR	4553874	ExpressionStatement	* this += i	44:1:1263:1273	4553866	1	True				
ANR	4553875	AssignmentExpression	* this += i		4553866	0		+=			
ANR	4553876	UnaryOperationExpression	* this		4553866	0					
ANR	4553877	UnaryOperator	*		4553866	0					
ANR	4553878	Identifier	this		4553866	1					
ANR	4553879	Identifier	i		4553866	1					
ANR	4553880	Identifier	MyString :: MyString		4553866	1					
ANR	4553881	ParameterList	int i		4553866	2					
ANR	4553882	Parameter	int i	41:19:1243:1247	4553866	0	True				
ANR	4553883	ParameterType	int		4553866	0					
ANR	4553884	Identifier	i		4553866	1					
ANR	4553885	CFGEntryNode	ENTRY		4553866		True				
ANR	4553886	CFGExitNode	EXIT		4553866		True				
ANR	4553887	Symbol	* this		4553866						
ANR	4553888	Symbol	this		4553866						
ANR	4553889	Symbol	i		4553866						
ANR	4553890	Function	MyString :: MyString	47:0:1279:1367							
ANR	4553891	FunctionDef	MyString :: MyString (const char * S)		4553890	0					
ANR	4553892	CompoundStatement		48:0:1314:1367	4553890	0					
ANR	4553893	ExpressionStatement	init ( )	49:1:1317:1323	4553890	0	True				
ANR	4553894	CallExpression	init ( )		4553890	0					
ANR	4553895	Callee	init		4553890	0					
ANR	4553896	Identifier	init		4553890	0					
ANR	4553897	ArgumentList			4553890	1					
ANR	4553898	ExpressionStatement	* this = S	50:4:1329:1336	4553890	1	True				
ANR	4553899	AssignmentExpression	* this = S		4553890	0		=			
ANR	4553900	UnaryOperationExpression	* this		4553890	0					
ANR	4553901	UnaryOperator	*		4553890	0					
ANR	4553902	Identifier	this		4553890	1					
ANR	4553903	Identifier	S		4553890	1					
ANR	4553904	Identifier	MyString :: MyString		4553890	1					
ANR	4553905	ParameterList	const char * S		4553890	2					
ANR	4553906	Parameter	const char * S	47:19:1298:1310	4553890	0	True				
ANR	4553907	ParameterType	const char *		4553890	0					
ANR	4553908	Identifier	S		4553890	1					
ANR	4553909	CFGEntryNode	ENTRY		4553890		True				
ANR	4553910	CFGExitNode	EXIT		4553890		True				
ANR	4553911	Symbol	* this		4553890						
ANR	4553912	Symbol	S		4553890						
ANR	4553913	Symbol	this		4553890						
ANR	4553914	Function	MyString :: MyString	53:0:1371:1466							
ANR	4553915	FunctionDef	MyString :: MyString (const std :: string & S)		4553914	0					
ANR	4553916	CompoundStatement		54:0:1413:1466	4553914	0					
ANR	4553917	ExpressionStatement	init ( )	55:1:1416:1422	4553914	0	True				
ANR	4553918	CallExpression	init ( )		4553914	0					
ANR	4553919	Callee	init		4553914	0					
ANR	4553920	Identifier	init		4553914	0					
ANR	4553921	ArgumentList			4553914	1					
ANR	4553922	ExpressionStatement	* this = S	56:4:1428:1435	4553914	1	True				
ANR	4553923	AssignmentExpression	* this = S		4553914	0		=			
ANR	4553924	UnaryOperationExpression	* this		4553914	0					
ANR	4553925	UnaryOperator	*		4553914	0					
ANR	4553926	Identifier	this		4553914	1					
ANR	4553927	Identifier	S		4553914	1					
ANR	4553928	Identifier	MyString :: MyString		4553914	1					
ANR	4553929	ParameterList	const std :: string & S		4553914	2					
ANR	4553930	Parameter	const std :: string & S	53:19:1390:1409	4553914	0	True				
ANR	4553931	ParameterType	const std :: string &		4553914	0					
ANR	4553932	Identifier	S		4553914	1					
ANR	4553933	CFGEntryNode	ENTRY		4553914		True				
ANR	4553934	CFGExitNode	EXIT		4553914		True				
ANR	4553935	Symbol	* this		4553914						
ANR	4553936	Symbol	S		4553914						
ANR	4553937	Symbol	this		4553914						
ANR	4553938	Function	MyString :: MyString	59:0:1469:1561							
ANR	4553939	FunctionDef	MyString :: MyString (const MyString & S)		4553938	0					
ANR	4553940	CompoundStatement		60:0:1508:1561	4553938	0					
ANR	4553941	ExpressionStatement	init ( )	61:1:1511:1517	4553938	0	True				
ANR	4553942	CallExpression	init ( )		4553938	0					
ANR	4553943	Callee	init		4553938	0					
ANR	4553944	Identifier	init		4553938	0					
ANR	4553945	ArgumentList			4553938	1					
ANR	4553946	ExpressionStatement	* this = S	62:4:1523:1530	4553938	1	True				
ANR	4553947	AssignmentExpression	* this = S		4553938	0		=			
ANR	4553948	UnaryOperationExpression	* this		4553938	0					
ANR	4553949	UnaryOperator	*		4553938	0					
ANR	4553950	Identifier	this		4553938	1					
ANR	4553951	Identifier	S		4553938	1					
ANR	4553952	Identifier	MyString :: MyString		4553938	1					
ANR	4553953	ParameterList	const MyString & S		4553938	2					
ANR	4553954	Parameter	const MyString & S	59:19:1488:1504	4553938	0	True				
ANR	4553955	ParameterType	const MyString &		4553938	0					
ANR	4553956	Identifier	S		4553938	1					
ANR	4553957	CFGEntryNode	ENTRY		4553938		True				
ANR	4553958	CFGExitNode	EXIT		4553938		True				
ANR	4553959	Symbol	* this		4553938						
ANR	4553960	Symbol	S		4553938						
ANR	4553961	Symbol	this		4553938						
ANR	4553962	Function	MyString :: ~MyString	65:0:1564:1712							
ANR	4553963	FunctionDef	MyString :: ~MyString ()		4553962	0					
ANR	4553964	CompoundStatement		66:0:1587:1712	4553962	0					
ANR	4553965	IfStatement	if ( Data )		4553962	0					
ANR	4553966	Condition	Data	67:8:1597:1600	4553962	0	True				
ANR	4553967	Identifier	Data		4553962	0					
ANR	4553968	CompoundStatement		2:14:15:15	4553962	1					
ANR	4553969	Statement	delete	68:2:1607:1612	4553962	0	True				
ANR	4553970	Statement	[	68:8:1613:1613	4553962	1	True				
ANR	4553971	Statement	]	68:9:1614:1614	4553962	2	True				
ANR	4553972	ExpressionStatement	Data	68:11:1616:1620	4553962	3	True				
ANR	4553973	Identifier	Data		4553962	0					
ANR	4553974	Statement	delete	70:1:1626:1631	4553962	1	True				
ANR	4553975	Statement	[	70:8:1633:1633	4553962	2	True				
ANR	4553976	Statement	]	70:9:1634:1634	4553962	3	True				
ANR	4553977	ExpressionStatement	tokenBuf	70:11:1636:1644	4553962	4	True				
ANR	4553978	Identifier	tokenBuf		4553962	0					
ANR	4553979	ExpressionStatement	init ( )	71:1:1647:1653	4553962	5	True				
ANR	4553980	CallExpression	init ( )		4553962	0					
ANR	4553981	Callee	init		4553962	0					
ANR	4553982	Identifier	init		4553962	0					
ANR	4553983	ArgumentList			4553962	1					
ANR	4553984	Identifier	MyString :: ~MyString		4553962	1					
ANR	4553985	ParameterList			4553962	2					
ANR	4553986	CFGEntryNode	ENTRY		4553962		True				
ANR	4553987	CFGExitNode	EXIT		4553962		True				
ANR	4553988	Symbol	Data		4553962						
ANR	4553989	Function	std :: string	75:19:1735:1800							
ANR	4553990	FunctionDef	std :: string ()		4553989	0					
ANR	4553991	CompoundStatement		76:0:1749:1800	4553989	0					
ANR	4553992	IdentifierDeclStatement	std :: string r = this -> Value ( ) ;	77:4:1755:1784	4553989	0	True				
ANR	4553993	IdentifierDecl	r = this -> Value ( )		4553989	0					
ANR	4553994	IdentifierDeclType	std :: string		4553989	0					
ANR	4553995	Identifier	r		4553989	1					
ANR	4553996	AssignmentExpression	r = this -> Value ( )		4553989	2		=			
ANR	4553997	Identifier	r		4553989	0					
ANR	4553998	CallExpression	this -> Value ( )		4553989	1					
ANR	4553999	Callee	this -> Value		4553989	0					
ANR	4554000	PtrMemberAccess	this -> Value		4553989	0					
ANR	4554001	Identifier	this		4553989	0					
ANR	4554002	Identifier	Value		4553989	1					
ANR	4554003	ArgumentList			4553989	1					
ANR	4554004	ReturnStatement	return r ;	78:4:1790:1798	4553989	1	True				
ANR	4554005	Identifier	r		4553989	0					
ANR	4554006	Identifier	std :: string		4553989	1					
ANR	4554007	ParameterList			4553989	2					
ANR	4554008	CFGEntryNode	ENTRY		4553989		True				
ANR	4554009	CFGExitNode	EXIT		4553989		True				
ANR	4554010	Symbol	* this		4553989						
ANR	4554011	Symbol	r		4553989						
ANR	4554012	Symbol	this		4553989						
ANR	4554013	Symbol	this -> Value		4553989						
ANR	4554014	Function	operator [ ]	88:10:2015:2110							
ANR	4554015	FunctionDef	operator [ ] (int pos)		4554014	0					
ANR	4554016	CompoundStatement		89:0:2042:2110	4554014	0					
ANR	4554017	IfStatement	if ( pos >= Len || pos < 0 )		4554014	0					
ANR	4554018	Condition	pos >= Len || pos < 0	90:8:2052:2072	4554014	0	True				
ANR	4554019	OrExpression	pos >= Len || pos < 0		4554014	0		||			
ANR	4554020	RelationalExpression	pos >= Len		4554014	0		>=			
ANR	4554021	Identifier	pos		4554014	0					
ANR	4554022	Identifier	Len		4554014	1					
ANR	4554023	RelationalExpression	pos < 0		4554014	1		<			
ANR	4554024	Identifier	pos		4554014	0					
ANR	4554025	PrimaryExpression	0		4554014	1					
ANR	4554026	ReturnStatement	return '\\0' ;	90:31:2075:2086	4554014	1	True				
ANR	4554027	PrimaryExpression	'\\0'		4554014	0					
ANR	4554028	ReturnStatement	return Data [ pos ] ;	91:4:2092:2108	4554014	1	True				
ANR	4554029	ArrayIndexing	Data [ pos ]		4554014	0					
ANR	4554030	Identifier	Data		4554014	0					
ANR	4554031	Identifier	pos		4554014	1					
ANR	4554032	Identifier	operator [ ]		4554014	1					
ANR	4554033	ParameterList	int pos		4554014	2					
ANR	4554034	Parameter	int pos	88:21:2026:2032	4554014	0	True				
ANR	4554035	ParameterType	int		4554014	0					
ANR	4554036	Identifier	pos		4554014	1					
ANR	4554037	CFGEntryNode	ENTRY		4554014		True				
ANR	4554038	CFGExitNode	EXIT		4554014		True				
ANR	4554039	Symbol	Len		4554014						
ANR	4554040	Symbol	pos		4554014						
ANR	4554041	Symbol	Data		4554014						
ANR	4554042	Symbol	* Data		4554014						
ANR	4554043	Symbol	* pos		4554014						
ANR	4554044	Function	operator [ ]	95:10:2135:2242							
ANR	4554045	FunctionDef	operator [ ] (int pos)		4554044	0					
ANR	4554046	CompoundStatement		96:0:2155:2242	4554044	0					
ANR	4554047	IfStatement	if ( pos >= Len || pos < 0 )		4554044	0					
ANR	4554048	Condition	pos >= Len || pos < 0	97:5:2162:2182	4554044	0	True				
ANR	4554049	OrExpression	pos >= Len || pos < 0		4554044	0		||			
ANR	4554050	RelationalExpression	pos >= Len		4554044	0		>=			
ANR	4554051	Identifier	pos		4554044	0					
ANR	4554052	Identifier	Len		4554044	1					
ANR	4554053	RelationalExpression	pos < 0		4554044	1		<			
ANR	4554054	Identifier	pos		4554044	0					
ANR	4554055	PrimaryExpression	0		4554044	1					
ANR	4554056	CompoundStatement		2:28:29:29	4554044	1					
ANR	4554057	ExpressionStatement	dummy = '\\0'	98:2:2189:2201	4554044	0	True				
ANR	4554058	AssignmentExpression	dummy = '\\0'		4554044	0		=			
ANR	4554059	Identifier	dummy		4554044	0					
ANR	4554060	PrimaryExpression	'\\0'		4554044	1					
ANR	4554061	ReturnStatement	return dummy ;	99:2:2205:2217	4554044	1	True				
ANR	4554062	Identifier	dummy		4554044	0					
ANR	4554063	ReturnStatement	return Data [ pos ] ;	101:1:2224:2240	4554044	1	True				
ANR	4554064	ArrayIndexing	Data [ pos ]		4554044	0					
ANR	4554065	Identifier	Data		4554044	0					
ANR	4554066	Identifier	pos		4554044	1					
ANR	4554067	Identifier	operator [ ]		4554044	1					
ANR	4554068	ParameterList	int pos		4554044	2					
ANR	4554069	Parameter	int pos	95:21:2146:2152	4554044	0	True				
ANR	4554070	ParameterType	int		4554044	0					
ANR	4554071	Identifier	pos		4554044	1					
ANR	4554072	CFGEntryNode	ENTRY		4554044		True				
ANR	4554073	CFGExitNode	EXIT		4554044		True				
ANR	4554074	Symbol	dummy		4554044						
ANR	4554075	Symbol	Len		4554044						
ANR	4554076	Symbol	pos		4554044						
ANR	4554077	Symbol	Data		4554044						
ANR	4554078	Symbol	* pos		4554044						
ANR	4554079	Symbol	* Data		4554044						
ANR	4554080	Function	MyString :: setChar	104:0:2245:2412							
ANR	4554081	FunctionDef	"MyString :: setChar (int pos , char value)"		4554080	0					
ANR	4554082	CompoundStatement		106:0:2289:2412	4554080	0					
ANR	4554083	IfStatement	if ( pos >= 0 && pos < Len )		4554080	0					
ANR	4554084	Condition	pos >= 0 && pos < Len	107:6:2297:2317	4554080	0	True				
ANR	4554085	AndExpression	pos >= 0 && pos < Len		4554080	0		&&			
ANR	4554086	RelationalExpression	pos >= 0		4554080	0		>=			
ANR	4554087	Identifier	pos		4554080	0					
ANR	4554088	PrimaryExpression	0		4554080	1					
ANR	4554089	RelationalExpression	pos < Len		4554080	1		<			
ANR	4554090	Identifier	pos		4554080	0					
ANR	4554091	Identifier	Len		4554080	1					
ANR	4554092	CompoundStatement		2:30:31:31	4554080	1					
ANR	4554093	ExpressionStatement	Data [ pos ] = value	108:2:2325:2342	4554080	0	True				
ANR	4554094	AssignmentExpression	Data [ pos ] = value		4554080	0		=			
ANR	4554095	ArrayIndexing	Data [ pos ]		4554080	0					
ANR	4554096	Identifier	Data		4554080	0					
ANR	4554097	Identifier	pos		4554080	1					
ANR	4554098	Identifier	value		4554080	1					
ANR	4554099	IfStatement	if ( value == '\\0' )		4554080	1					
ANR	4554100	Condition	value == '\\0'	109:7:2351:2363	4554080	0	True				
ANR	4554101	EqualityExpression	value == '\\0'		4554080	0		==			
ANR	4554102	Identifier	value		4554080	0					
ANR	4554103	PrimaryExpression	'\\0'		4554080	1					
ANR	4554104	CompoundStatement		4:23:77:77	4554080	1					
ANR	4554105	ExpressionStatement	Len = pos	110:3:2372:2381	4554080	0	True				
ANR	4554106	AssignmentExpression	Len = pos		4554080	0		=			
ANR	4554107	Identifier	Len		4554080	0					
ANR	4554108	Identifier	pos		4554080	1					
ANR	4554109	ElseStatement	else		4554080	0					
ANR	4554110	CompoundStatement		7:8:105:105	4554080	0					
ANR	4554111	ReturnType	void		4554080	1					
ANR	4554112	Identifier	MyString :: setChar		4554080	2					
ANR	4554113	ParameterList	"int pos , char value"		4554080	3					
ANR	4554114	Parameter	int pos	105:18:2268:2274	4554080	0	True				
ANR	4554115	ParameterType	int		4554080	0					
ANR	4554116	Identifier	pos		4554080	1					
ANR	4554117	Parameter	char value	105:27:2277:2286	4554080	1	True				
ANR	4554118	ParameterType	char		4554080	0					
ANR	4554119	Identifier	value		4554080	1					
ANR	4554120	CFGEntryNode	ENTRY		4554080		True				
ANR	4554121	CFGExitNode	EXIT		4554080		True				
ANR	4554122	Symbol	Len		4554080						
ANR	4554123	Symbol	pos		4554080						
ANR	4554124	Symbol	Data		4554080						
ANR	4554125	Symbol	value		4554080						
ANR	4554126	Symbol	* Data		4554080						
ANR	4554127	Symbol	* pos		4554080						
ANR	4554128	Function	operator =	124:0:2611:2692							
ANR	4554129	FunctionDef	operator = (const MyString & S)		4554128	0					
ANR	4554130	CompoundStatement		125:0:2641:2692	4554128	0					
ANR	4554131	ExpressionStatement	"assign_str ( S . Value ( ) , S . Len )"	126:1:2644:2672	4554128	0	True				
ANR	4554132	CallExpression	"assign_str ( S . Value ( ) , S . Len )"		4554128	0					
ANR	4554133	Callee	assign_str		4554128	0					
ANR	4554134	Identifier	assign_str		4554128	0					
ANR	4554135	ArgumentList	S . Value ( )		4554128	1					
ANR	4554136	Argument	S . Value ( )		4554128	0					
ANR	4554137	CallExpression	S . Value ( )		4554128	0					
ANR	4554138	Callee	S . Value		4554128	0					
ANR	4554139	MemberAccess	S . Value		4554128	0					
ANR	4554140	Identifier	S		4554128	0					
ANR	4554141	Identifier	Value		4554128	1					
ANR	4554142	ArgumentList			4554128	1					
ANR	4554143	Argument	S . Len		4554128	1					
ANR	4554144	MemberAccess	S . Len		4554128	0					
ANR	4554145	Identifier	S		4554128	0					
ANR	4554146	Identifier	Len		4554128	1					
ANR	4554147	ReturnStatement	return * this ;	127:4:2678:2690	4554128	1	True				
ANR	4554148	UnaryOperationExpression	* this		4554128	0					
ANR	4554149	UnaryOperator	*		4554128	0					
ANR	4554150	Identifier	this		4554128	1					
ANR	4554151	Identifier	operator =		4554128	1					
ANR	4554152	ParameterList	const MyString & S		4554128	2					
ANR	4554153	Parameter	const MyString & S	124:10:2621:2637	4554128	0	True				
ANR	4554154	ParameterType	const MyString &		4554128	0					
ANR	4554155	Identifier	S		4554128	1					
ANR	4554156	CFGEntryNode	ENTRY		4554128		True				
ANR	4554157	CFGExitNode	EXIT		4554128		True				
ANR	4554158	Symbol	* this		4554128						
ANR	4554159	Symbol	S		4554128						
ANR	4554160	Symbol	this		4554128						
ANR	4554161	Symbol	S . Value		4554128						
ANR	4554162	Symbol	S . Len		4554128						
ANR	4554163	Function	operator =	131:0:2716:2805							
ANR	4554164	FunctionDef	operator = (const std :: string & S)		4554163	0					
ANR	4554165	CompoundStatement		132:0:2749:2805	4554163	0					
ANR	4554166	ExpressionStatement	"assign_str ( S . c_str ( ) , S . length ( ) )"	133:1:2752:2785	4554163	0	True				
ANR	4554167	CallExpression	"assign_str ( S . c_str ( ) , S . length ( ) )"		4554163	0					
ANR	4554168	Callee	assign_str		4554163	0					
ANR	4554169	Identifier	assign_str		4554163	0					
ANR	4554170	ArgumentList	S . c_str ( )		4554163	1					
ANR	4554171	Argument	S . c_str ( )		4554163	0					
ANR	4554172	CallExpression	S . c_str ( )		4554163	0					
ANR	4554173	Callee	S . c_str		4554163	0					
ANR	4554174	MemberAccess	S . c_str		4554163	0					
ANR	4554175	Identifier	S		4554163	0					
ANR	4554176	Identifier	c_str		4554163	1					
ANR	4554177	ArgumentList			4554163	1					
ANR	4554178	Argument	S . length ( )		4554163	1					
ANR	4554179	CallExpression	S . length ( )		4554163	0					
ANR	4554180	Callee	S . length		4554163	0					
ANR	4554181	MemberAccess	S . length		4554163	0					
ANR	4554182	Identifier	S		4554163	0					
ANR	4554183	Identifier	length		4554163	1					
ANR	4554184	ArgumentList			4554163	1					
ANR	4554185	ReturnStatement	return * this ;	134:4:2791:2803	4554163	1	True				
ANR	4554186	UnaryOperationExpression	* this		4554163	0					
ANR	4554187	UnaryOperator	*		4554163	0					
ANR	4554188	Identifier	this		4554163	1					
ANR	4554189	Identifier	operator =		4554163	1					
ANR	4554190	ParameterList	const std :: string & S		4554163	2					
ANR	4554191	Parameter	const std :: string & S	131:10:2726:2745	4554163	0	True				
ANR	4554192	ParameterType	const std :: string &		4554163	0					
ANR	4554193	Identifier	S		4554163	1					
ANR	4554194	CFGEntryNode	ENTRY		4554163		True				
ANR	4554195	CFGExitNode	EXIT		4554163		True				
ANR	4554196	Symbol	* this		4554163						
ANR	4554197	Symbol	S		4554163						
ANR	4554198	Symbol	this		4554163						
ANR	4554199	Symbol	S . c_str		4554163						
ANR	4554200	Symbol	S . length		4554163						
ANR	4554201	Function	operator =	138:10:2829:2932							
ANR	4554202	FunctionDef	operator = (const char * s)		4554201	0					
ANR	4554203	CompoundStatement		139:0:2857:2932	4554201	0					
ANR	4554204	IdentifierDeclStatement	int s_len = s ? strlen ( s ) : 0 ;	140:1:2860:2889	4554201	0	True				
ANR	4554205	IdentifierDecl	s_len = s ? strlen ( s ) : 0		4554201	0					
ANR	4554206	IdentifierDeclType	int		4554201	0					
ANR	4554207	Identifier	s_len		4554201	1					
ANR	4554208	AssignmentExpression	s_len = s ? strlen ( s ) : 0		4554201	2		=			
ANR	4554209	Identifier	s_len		4554201	0					
ANR	4554210	ConditionalExpression	s ? strlen ( s ) : 0		4554201	1					
ANR	4554211	Condition	s		4554201	0					
ANR	4554212	Identifier	s		4554201	0					
ANR	4554213	CallExpression	strlen ( s )		4554201	1					
ANR	4554214	Callee	strlen		4554201	0					
ANR	4554215	Identifier	strlen		4554201	0					
ANR	4554216	ArgumentList	s		4554201	1					
ANR	4554217	Argument	s		4554201	0					
ANR	4554218	Identifier	s		4554201	0					
ANR	4554219	PrimaryExpression	0		4554201	2					
ANR	4554220	ExpressionStatement	"assign_str ( s , s_len )"	141:1:2892:2912	4554201	1	True				
ANR	4554221	CallExpression	"assign_str ( s , s_len )"		4554201	0					
ANR	4554222	Callee	assign_str		4554201	0					
ANR	4554223	Identifier	assign_str		4554201	0					
ANR	4554224	ArgumentList	s		4554201	1					
ANR	4554225	Argument	s		4554201	0					
ANR	4554226	Identifier	s		4554201	0					
ANR	4554227	Argument	s_len		4554201	1					
ANR	4554228	Identifier	s_len		4554201	0					
ANR	4554229	ReturnStatement	return * this ;	142:4:2918:2930	4554201	2	True				
ANR	4554230	UnaryOperationExpression	* this		4554201	0					
ANR	4554231	UnaryOperator	*		4554201	0					
ANR	4554232	Identifier	this		4554201	1					
ANR	4554233	Identifier	operator =		4554201	1					
ANR	4554234	ParameterList	const char * s		4554201	2					
ANR	4554235	Parameter	const char * s	138:21:2840:2852	4554201	0	True				
ANR	4554236	ParameterType	const char *		4554201	0					
ANR	4554237	Identifier	s		4554201	1					
ANR	4554238	CFGEntryNode	ENTRY		4554201		True				
ANR	4554239	CFGExitNode	EXIT		4554201		True				
ANR	4554240	Symbol	* this		4554201						
ANR	4554241	Symbol	strlen		4554201						
ANR	4554242	Symbol	s		4554201						
ANR	4554243	Symbol	s_len		4554201						
ANR	4554244	Symbol	this		4554201						
ANR	4554245	Function	MyString :: assign_str	145:0:2935:3237							
ANR	4554246	FunctionDef	"MyString :: assign_str (const char * s , int s_len)"		4554245	0					
ANR	4554247	CompoundStatement		147:0:2990:3237	4554245	0					
ANR	4554248	IfStatement	if ( s_len < 1 )		4554245	0					
ANR	4554249	Condition	s_len < 1	148:5:2997:3005	4554245	0	True				
ANR	4554250	RelationalExpression	s_len < 1		4554245	0		<			
ANR	4554251	Identifier	s_len		4554245	0					
ANR	4554252	PrimaryExpression	1		4554245	1					
ANR	4554253	CompoundStatement		2:17:18:18	4554245	1					
ANR	4554254	IfStatement	if ( Data )		4554245	0					
ANR	4554255	Condition	Data	149:6:3017:3020	4554245	0	True				
ANR	4554256	Identifier	Data		4554245	0					
ANR	4554257	CompoundStatement		3:13:33:33	4554245	1					
ANR	4554258	ExpressionStatement	Data [ 0 ] = '\\0'	150:3:3029:3043	4554245	0	True				
ANR	4554259	AssignmentExpression	Data [ 0 ] = '\\0'		4554245	0		=			
ANR	4554260	ArrayIndexing	Data [ 0 ]		4554245	0					
ANR	4554261	Identifier	Data		4554245	0					
ANR	4554262	PrimaryExpression	0		4554245	1					
ANR	4554263	PrimaryExpression	'\\0'		4554245	1					
ANR	4554264	ExpressionStatement	Len = 0	151:3:3048:3055	4554245	1	True				
ANR	4554265	AssignmentExpression	Len = 0		4554245	0		=			
ANR	4554266	Identifier	Len		4554245	0					
ANR	4554267	PrimaryExpression	0		4554245	1					
ANR	4554268	ElseStatement	else		4554245	0					
ANR	4554269	CompoundStatement		7:8:78:78	4554245	0					
ANR	4554270	IfStatement	if ( s_len > capacity )		4554245	0					
ANR	4554271	Condition	s_len > capacity	154:9:3080:3095	4554245	0	True				
ANR	4554272	RelationalExpression	s_len > capacity		4554245	0		>			
ANR	4554273	Identifier	s_len		4554245	0					
ANR	4554274	Identifier	capacity		4554245	1					
ANR	4554275	CompoundStatement		8:28:108:108	4554245	1					
ANR	4554276	IfStatement	if ( Data )		4554245	0					
ANR	4554277	Condition	Data	155:7:3108:3111	4554245	0	True				
ANR	4554278	Identifier	Data		4554245	0					
ANR	4554279	CompoundStatement		9:14:124:124	4554245	1					
ANR	4554280	Statement	delete	156:4:3121:3126	4554245	0	True				
ANR	4554281	Statement	[	156:10:3127:3127	4554245	1	True				
ANR	4554282	Statement	]	156:11:3128:3128	4554245	2	True				
ANR	4554283	ExpressionStatement	Data	156:13:3130:3134	4554245	3	True				
ANR	4554284	Identifier	Data		4554245	0					
ANR	4554285	ExpressionStatement	capacity = s_len	158:3:3144:3160	4554245	1	True				
ANR	4554286	AssignmentExpression	capacity = s_len		4554245	0		=			
ANR	4554287	Identifier	capacity		4554245	0					
ANR	4554288	Identifier	s_len		4554245	1					
ANR	4554289	ExpressionStatement	Data = new char [ capacity + 1 ]	159:3:3165:3192	4554245	2	True				
ANR	4554290	AssignmentExpression	Data = new char [ capacity + 1 ]		4554245	0		=			
ANR	4554291	Identifier	Data		4554245	0					
ANR	4554292	AdditiveExpression	capacity + 1		4554245	1		+			
ANR	4554293	Identifier	capacity		4554245	0					
ANR	4554294	PrimaryExpression	1		4554245	1					
ANR	4554295	ExpressionStatement	"strcpy ( Data , s )"	161:2:3200:3217	4554245	1	True				
ANR	4554296	CallExpression	"strcpy ( Data , s )"		4554245	0					
ANR	4554297	Callee	strcpy		4554245	0					
ANR	4554298	Identifier	strcpy		4554245	0					
ANR	4554299	ArgumentList	Data		4554245	1					
ANR	4554300	Argument	Data		4554245	0					
ANR	4554301	Identifier	Data		4554245	0					
ANR	4554302	Argument	s		4554245	1					
ANR	4554303	Identifier	s		4554245	0					
ANR	4554304	ExpressionStatement	Len = s_len	162:2:3221:3232	4554245	2	True				
ANR	4554305	AssignmentExpression	Len = s_len		4554245	0		=			
ANR	4554306	Identifier	Len		4554245	0					
ANR	4554307	Identifier	s_len		4554245	1					
ANR	4554308	ReturnType	void		4554245	1					
ANR	4554309	Identifier	MyString :: assign_str		4554245	2					
ANR	4554310	ParameterList	"const char * s , int s_len"		4554245	3					
ANR	4554311	Parameter	const char * s	146:22:2962:2974	4554245	0	True				
ANR	4554312	ParameterType	const char *		4554245	0					
ANR	4554313	Identifier	s		4554245	1					
ANR	4554314	Parameter	int s_len	146:37:2977:2985	4554245	1	True				
ANR	4554315	ParameterType	int		4554245	0					
ANR	4554316	Identifier	s_len		4554245	1					
ANR	4554317	CFGEntryNode	ENTRY		4554245		True				
ANR	4554318	CFGExitNode	EXIT		4554245		True				
ANR	4554319	Symbol	s		4554245						
ANR	4554320	Symbol	Len		4554245						
ANR	4554321	Symbol	s_len		4554245						
ANR	4554322	Symbol	Data		4554245						
ANR	4554323	Symbol	* Data		4554245						
ANR	4554324	Symbol	capacity		4554245						
ANR	4554325	Function	MyString :: reserve	172:0:3412:4028							
ANR	4554326	FunctionDef	MyString :: reserve (const int sz)		4554325	0					
ANR	4554327	CompoundStatement		174:0:3453:4028	4554325	0					
ANR	4554328	IfStatement	if ( sz < 0 )		4554325	0					
ANR	4554329	Condition	sz < 0	175:5:3460:3465	4554325	0	True				
ANR	4554330	RelationalExpression	sz < 0		4554325	0		<			
ANR	4554331	Identifier	sz		4554325	0					
ANR	4554332	PrimaryExpression	0		4554325	1					
ANR	4554333	CompoundStatement		2:13:14:14	4554325	1					
ANR	4554334	ReturnStatement	return false ;	176:2:3472:3484	4554325	0	True				
ANR	4554335	Identifier	false		4554325	0					
ANR	4554336	IdentifierDeclStatement	char * buf = new char [ sz + 1 ] ;	178:4:3493:3521	4554325	1	True				
ANR	4554337	IdentifierDecl	* buf = new char [ sz + 1 ]		4554325	0					
ANR	4554338	IdentifierDeclType	char *		4554325	0					
ANR	4554339	Identifier	buf		4554325	1					
ANR	4554340	AssignmentExpression	* buf = new char [ sz + 1 ]		4554325	2		=			
ANR	4554341	Identifier	buf		4554325	0					
ANR	4554342	AdditiveExpression	sz + 1		4554325	1		+			
ANR	4554343	Identifier	sz		4554325	0					
ANR	4554344	PrimaryExpression	1		4554325	1					
ANR	4554345	IfStatement	if ( ! buf )		4554325	2					
ANR	4554346	Condition	! buf	179:8:3531:3534	4554325	0	True				
ANR	4554347	UnaryOperationExpression	! buf		4554325	0					
ANR	4554348	UnaryOperator	!		4554325	0					
ANR	4554349	Identifier	buf		4554325	1					
ANR	4554350	CompoundStatement		6:14:83:83	4554325	1					
ANR	4554351	ReturnStatement	return false ;	180:2:3541:3553	4554325	0	True				
ANR	4554352	Identifier	false		4554325	0					
ANR	4554353	ExpressionStatement	buf [ 0 ] = '\\0'	182:4:3562:3575	4554325	3	True				
ANR	4554354	AssignmentExpression	buf [ 0 ] = '\\0'		4554325	0		=			
ANR	4554355	ArrayIndexing	buf [ 0 ]		4554325	0					
ANR	4554356	Identifier	buf		4554325	0					
ANR	4554357	PrimaryExpression	0		4554325	1					
ANR	4554358	PrimaryExpression	'\\0'		4554325	1					
ANR	4554359	IfStatement	if ( Data )		4554325	4					
ANR	4554360	Condition	Data	183:8:3585:3588	4554325	0	True				
ANR	4554361	Identifier	Data		4554325	0					
ANR	4554362	CompoundStatement		12:3:203:228	4554325	1					
ANR	4554363	IdentifierDeclStatement	"int newlen = MIN ( sz , Len ) ;"	185:3:3657:3682	4554325	0	True				
ANR	4554364	IdentifierDecl	"newlen = MIN ( sz , Len )"		4554325	0					
ANR	4554365	IdentifierDeclType	int		4554325	0					
ANR	4554366	Identifier	newlen		4554325	1					
ANR	4554367	AssignmentExpression	"newlen = MIN ( sz , Len )"		4554325	2		=			
ANR	4554368	Identifier	newlen		4554325	0					
ANR	4554369	CallExpression	"MIN ( sz , Len )"		4554325	1					
ANR	4554370	Callee	MIN		4554325	0					
ANR	4554371	Identifier	MIN		4554325	0					
ANR	4554372	ArgumentList	sz		4554325	1					
ANR	4554373	Argument	sz		4554325	0					
ANR	4554374	Identifier	sz		4554325	0					
ANR	4554375	Argument	Len		4554325	1					
ANR	4554376	Identifier	Len		4554325	0					
ANR	4554377	ExpressionStatement	"strncpy ( buf , Data , newlen )"	187:6:3749:3777	4554325	1	True				
ANR	4554378	CallExpression	"strncpy ( buf , Data , newlen )"		4554325	0					
ANR	4554379	Callee	strncpy		4554325	0					
ANR	4554380	Identifier	strncpy		4554325	0					
ANR	4554381	ArgumentList	buf		4554325	1					
ANR	4554382	Argument	buf		4554325	0					
ANR	4554383	Identifier	buf		4554325	0					
ANR	4554384	Argument	Data		4554325	1					
ANR	4554385	Identifier	Data		4554325	0					
ANR	4554386	Argument	newlen		4554325	2					
ANR	4554387	Identifier	newlen		4554325	0					
ANR	4554388	ExpressionStatement	buf [ newlen ] = '\\0'	189:3:3852:3870	4554325	2	True				
ANR	4554389	AssignmentExpression	buf [ newlen ] = '\\0'		4554325	0		=			
ANR	4554390	ArrayIndexing	buf [ newlen ]		4554325	0					
ANR	4554391	Identifier	buf		4554325	0					
ANR	4554392	Identifier	newlen		4554325	1					
ANR	4554393	PrimaryExpression	'\\0'		4554325	1					
ANR	4554394	Statement	delete	190:6:3879:3884	4554325	3	True				
ANR	4554395	Statement	[	190:13:3886:3886	4554325	4	True				
ANR	4554396	Statement	]	190:14:3887:3887	4554325	5	True				
ANR	4554397	ExpressionStatement	Data	190:16:3889:3893	4554325	6	True				
ANR	4554398	Identifier	Data		4554325	0					
ANR	4554399	ExpressionStatement	Len = newlen	191:3:3898:3910	4554325	7	True				
ANR	4554400	AssignmentExpression	Len = newlen		4554325	0		=			
ANR	4554401	Identifier	Len		4554325	0					
ANR	4554402	Identifier	newlen		4554325	1					
ANR	4554403	ExpressionStatement	capacity = sz	194:4:3980:3993	4554325	5	True				
ANR	4554404	AssignmentExpression	capacity = sz		4554325	0		=			
ANR	4554405	Identifier	capacity		4554325	0					
ANR	4554406	Identifier	sz		4554325	1					
ANR	4554407	ExpressionStatement	Data = buf	195:4:3999:4009	4554325	6	True				
ANR	4554408	AssignmentExpression	Data = buf		4554325	0		=			
ANR	4554409	Identifier	Data		4554325	0					
ANR	4554410	Identifier	buf		4554325	1					
ANR	4554411	ReturnStatement	return true ;	196:4:4015:4026	4554325	7	True				
ANR	4554412	Identifier	true		4554325	0					
ANR	4554413	ReturnType	bool		4554325	1					
ANR	4554414	Identifier	MyString :: reserve		4554325	2					
ANR	4554415	ParameterList	const int sz		4554325	3					
ANR	4554416	Parameter	const int sz	173:19:3437:3448	4554325	0	True				
ANR	4554417	ParameterType	const int		4554325	0					
ANR	4554418	Identifier	sz		4554325	1					
ANR	4554419	CFGEntryNode	ENTRY		4554325		True				
ANR	4554420	CFGExitNode	EXIT		4554325		True				
ANR	4554421	Symbol	buf		4554325						
ANR	4554422	Symbol	* buf		4554325						
ANR	4554423	Symbol	MIN		4554325						
ANR	4554424	Symbol	Len		4554325						
ANR	4554425	Symbol	sz		4554325						
ANR	4554426	Symbol	false		4554325						
ANR	4554427	Symbol	true		4554325						
ANR	4554428	Symbol	newlen		4554325						
ANR	4554429	Symbol	Data		4554325						
ANR	4554430	Symbol	* newlen		4554325						
ANR	4554431	Symbol	capacity		4554325						
ANR	4554432	Function	MyString :: reserve_at_least	209:0:4628:4948							
ANR	4554433	FunctionDef	MyString :: reserve_at_least (const int sz)		4554432	0					
ANR	4554434	CompoundStatement		211:0:4676:4948	4554432	0					
ANR	4554435	IdentifierDeclStatement	int twice_as_much ;	212:1:4679:4696	4554432	0	True				
ANR	4554436	IdentifierDecl	twice_as_much		4554432	0					
ANR	4554437	IdentifierDeclType	int		4554432	0					
ANR	4554438	Identifier	twice_as_much		4554432	1					
ANR	4554439	IdentifierDeclStatement	bool success ;	213:1:4699:4711	4554432	1	True				
ANR	4554440	IdentifierDecl	success		4554432	0					
ANR	4554441	IdentifierDeclType	bool		4554432	0					
ANR	4554442	Identifier	success		4554432	1					
ANR	4554443	ExpressionStatement	twice_as_much = 2 * capacity	215:1:4715:4743	4554432	2	True				
ANR	4554444	AssignmentExpression	twice_as_much = 2 * capacity		4554432	0		=			
ANR	4554445	Identifier	twice_as_much		4554432	0					
ANR	4554446	MultiplicativeExpression	2 * capacity		4554432	1		*			
ANR	4554447	PrimaryExpression	2		4554432	0					
ANR	4554448	Identifier	capacity		4554432	1					
ANR	4554449	IfStatement	if ( twice_as_much > sz )		4554432	3					
ANR	4554450	Condition	twice_as_much > sz	216:5:4750:4767	4554432	0	True				
ANR	4554451	RelationalExpression	twice_as_much > sz		4554432	0		>			
ANR	4554452	Identifier	twice_as_much		4554432	0					
ANR	4554453	Identifier	sz		4554432	1					
ANR	4554454	CompoundStatement		6:25:93:93	4554432	1					
ANR	4554455	ExpressionStatement	success = reserve ( twice_as_much )	217:2:4774:4806	4554432	0	True				
ANR	4554456	AssignmentExpression	success = reserve ( twice_as_much )		4554432	0		=			
ANR	4554457	Identifier	success		4554432	0					
ANR	4554458	CallExpression	reserve ( twice_as_much )		4554432	1					
ANR	4554459	Callee	reserve		4554432	0					
ANR	4554460	Identifier	reserve		4554432	0					
ANR	4554461	ArgumentList	twice_as_much		4554432	1					
ANR	4554462	Argument	twice_as_much		4554432	0					
ANR	4554463	Identifier	twice_as_much		4554432	0					
ANR	4554464	IfStatement	if ( ! success )		4554432	1					
ANR	4554465	Condition	! success	218:6:4814:4821	4554432	0	True				
ANR	4554466	UnaryOperationExpression	! success		4554432	0					
ANR	4554467	UnaryOperator	!		4554432	0					
ANR	4554468	Identifier	success		4554432	1					
ANR	4554469	CompoundStatement		8:16:147:147	4554432	1					
ANR	4554470	ExpressionStatement	success = reserve ( sz )	219:3:4866:4887	4554432	0	True				
ANR	4554471	AssignmentExpression	success = reserve ( sz )		4554432	0		=			
ANR	4554472	Identifier	success		4554432	0					
ANR	4554473	CallExpression	reserve ( sz )		4554432	1					
ANR	4554474	Callee	reserve		4554432	0					
ANR	4554475	Identifier	reserve		4554432	0					
ANR	4554476	ArgumentList	sz		4554432	1					
ANR	4554477	Argument	sz		4554432	0					
ANR	4554478	Identifier	sz		4554432	0					
ANR	4554479	ElseStatement	else		4554432	0					
ANR	4554480	CompoundStatement		11:8:224:224	4554432	0					
ANR	4554481	ExpressionStatement	success = reserve ( sz )	222:2:4905:4926	4554432	0	True				
ANR	4554482	AssignmentExpression	success = reserve ( sz )		4554432	0		=			
ANR	4554483	Identifier	success		4554432	0					
ANR	4554484	CallExpression	reserve ( sz )		4554432	1					
ANR	4554485	Callee	reserve		4554432	0					
ANR	4554486	Identifier	reserve		4554432	0					
ANR	4554487	ArgumentList	sz		4554432	1					
ANR	4554488	Argument	sz		4554432	0					
ANR	4554489	Identifier	sz		4554432	0					
ANR	4554490	ReturnStatement	return success ;	224:1:4932:4946	4554432	4	True				
ANR	4554491	Identifier	success		4554432	0					
ANR	4554492	ReturnType	bool		4554432	1					
ANR	4554493	Identifier	MyString :: reserve_at_least		4554432	2					
ANR	4554494	ParameterList	const int sz		4554432	3					
ANR	4554495	Parameter	const int sz	210:27:4661:4672	4554432	0	True				
ANR	4554496	ParameterType	const int		4554432	0					
ANR	4554497	Identifier	sz		4554432	1					
ANR	4554498	CFGEntryNode	ENTRY		4554432		True				
ANR	4554499	CFGExitNode	EXIT		4554432		True				
ANR	4554500	Symbol	success		4554432						
ANR	4554501	Symbol	sz		4554432						
ANR	4554502	Symbol	reserve		4554432						
ANR	4554503	Symbol	twice_as_much		4554432						
ANR	4554504	Symbol	capacity		4554432						
ANR	4554505	Function	operator +=	234:10:5148:5237							
ANR	4554506	FunctionDef	operator += (const MyString & S)		4554505	0					
ANR	4554507	CompoundStatement		235:0:5179:5237	4554505	0					
ANR	4554508	ExpressionStatement	"append_str ( S . Value ( ) , S . Len )"	237:4:5187:5217	4554505	0	True				
ANR	4554509	CallExpression	"append_str ( S . Value ( ) , S . Len )"		4554505	0					
ANR	4554510	Callee	append_str		4554505	0					
ANR	4554511	Identifier	append_str		4554505	0					
ANR	4554512	ArgumentList	S . Value ( )		4554505	1					
ANR	4554513	Argument	S . Value ( )		4554505	0					
ANR	4554514	CallExpression	S . Value ( )		4554505	0					
ANR	4554515	Callee	S . Value		4554505	0					
ANR	4554516	MemberAccess	S . Value		4554505	0					
ANR	4554517	Identifier	S		4554505	0					
ANR	4554518	Identifier	Value		4554505	1					
ANR	4554519	ArgumentList			4554505	1					
ANR	4554520	Argument	S . Len		4554505	1					
ANR	4554521	MemberAccess	S . Len		4554505	0					
ANR	4554522	Identifier	S		4554505	0					
ANR	4554523	Identifier	Len		4554505	1					
ANR	4554524	ReturnStatement	return * this ;	238:4:5223:5235	4554505	1	True				
ANR	4554525	UnaryOperationExpression	* this		4554505	0					
ANR	4554526	UnaryOperator	*		4554505	0					
ANR	4554527	Identifier	this		4554505	1					
ANR	4554528	Identifier	operator +=		4554505	1					
ANR	4554529	ParameterList	const MyString & S		4554505	2					
ANR	4554530	Parameter	const MyString & S	234:21:5159:5175	4554505	0	True				
ANR	4554531	ParameterType	const MyString &		4554505	0					
ANR	4554532	Identifier	S		4554505	1					
ANR	4554533	CFGEntryNode	ENTRY		4554505		True				
ANR	4554534	CFGExitNode	EXIT		4554505		True				
ANR	4554535	Symbol	* this		4554505						
ANR	4554536	Symbol	S		4554505						
ANR	4554537	Symbol	this		4554505						
ANR	4554538	Symbol	S . Value		4554505						
ANR	4554539	Symbol	S . Len		4554505						
ANR	4554540	Function	operator +=	242:10:5261:5358							
ANR	4554541	FunctionDef	operator += (const std :: string & S)		4554540	0					
ANR	4554542	CompoundStatement		243:0:5295:5358	4554540	0					
ANR	4554543	ExpressionStatement	"append_str ( S . c_str ( ) , S . length ( ) )"	245:4:5303:5338	4554540	0	True				
ANR	4554544	CallExpression	"append_str ( S . c_str ( ) , S . length ( ) )"		4554540	0					
ANR	4554545	Callee	append_str		4554540	0					
ANR	4554546	Identifier	append_str		4554540	0					
ANR	4554547	ArgumentList	S . c_str ( )		4554540	1					
ANR	4554548	Argument	S . c_str ( )		4554540	0					
ANR	4554549	CallExpression	S . c_str ( )		4554540	0					
ANR	4554550	Callee	S . c_str		4554540	0					
ANR	4554551	MemberAccess	S . c_str		4554540	0					
ANR	4554552	Identifier	S		4554540	0					
ANR	4554553	Identifier	c_str		4554540	1					
ANR	4554554	ArgumentList			4554540	1					
ANR	4554555	Argument	S . length ( )		4554540	1					
ANR	4554556	CallExpression	S . length ( )		4554540	0					
ANR	4554557	Callee	S . length		4554540	0					
ANR	4554558	MemberAccess	S . length		4554540	0					
ANR	4554559	Identifier	S		4554540	0					
ANR	4554560	Identifier	length		4554540	1					
ANR	4554561	ArgumentList			4554540	1					
ANR	4554562	ReturnStatement	return * this ;	246:4:5344:5356	4554540	1	True				
ANR	4554563	UnaryOperationExpression	* this		4554540	0					
ANR	4554564	UnaryOperator	*		4554540	0					
ANR	4554565	Identifier	this		4554540	1					
ANR	4554566	Identifier	operator +=		4554540	1					
ANR	4554567	ParameterList	const std :: string & S		4554540	2					
ANR	4554568	Parameter	const std :: string & S	242:21:5272:5291	4554540	0	True				
ANR	4554569	ParameterType	const std :: string &		4554540	0					
ANR	4554570	Identifier	S		4554540	1					
ANR	4554571	CFGEntryNode	ENTRY		4554540		True				
ANR	4554572	CFGExitNode	EXIT		4554540		True				
ANR	4554573	Symbol	* this		4554540						
ANR	4554574	Symbol	S		4554540						
ANR	4554575	Symbol	this		4554540						
ANR	4554576	Symbol	S . c_str		4554540						
ANR	4554577	Symbol	S . length		4554540						
ANR	4554578	Function	operator +=	251:10:5383:5512							
ANR	4554579	FunctionDef	operator += (const char * s)		4554578	0					
ANR	4554580	CompoundStatement		252:0:5410:5512	4554578	0					
ANR	4554581	IfStatement	if ( ! s || * s == '\\0' )		4554578	0					
ANR	4554582	Condition	! s || * s == '\\0'	253:8:5420:5435	4554578	0	True				
ANR	4554583	OrExpression	! s || * s == '\\0'		4554578	0		||			
ANR	4554584	UnaryOperationExpression	! s		4554578	0					
ANR	4554585	UnaryOperator	!		4554578	0					
ANR	4554586	Identifier	s		4554578	1					
ANR	4554587	EqualityExpression	* s == '\\0'		4554578	1		==			
ANR	4554588	UnaryOperationExpression	* s		4554578	0					
ANR	4554589	UnaryOperator	*		4554578	0					
ANR	4554590	Identifier	s		4554578	1					
ANR	4554591	PrimaryExpression	'\\0'		4554578	1					
ANR	4554592	CompoundStatement		2:27:28:28	4554578	1					
ANR	4554593	ReturnStatement	return * this ;	254:2:5443:5455	4554578	0	True				
ANR	4554594	UnaryOperationExpression	* this		4554578	0					
ANR	4554595	UnaryOperator	*		4554578	0					
ANR	4554596	Identifier	this		4554578	1					
ANR	4554597	ExpressionStatement	"append_str ( s , strlen ( s ) )"	256:4:5464:5492	4554578	1	True				
ANR	4554598	CallExpression	"append_str ( s , strlen ( s ) )"		4554578	0					
ANR	4554599	Callee	append_str		4554578	0					
ANR	4554600	Identifier	append_str		4554578	0					
ANR	4554601	ArgumentList	s		4554578	1					
ANR	4554602	Argument	s		4554578	0					
ANR	4554603	Identifier	s		4554578	0					
ANR	4554604	Argument	strlen ( s )		4554578	1					
ANR	4554605	CallExpression	strlen ( s )		4554578	0					
ANR	4554606	Callee	strlen		4554578	0					
ANR	4554607	Identifier	strlen		4554578	0					
ANR	4554608	ArgumentList	s		4554578	1					
ANR	4554609	Argument	s		4554578	0					
ANR	4554610	Identifier	s		4554578	0					
ANR	4554611	ReturnStatement	return * this ;	257:4:5498:5510	4554578	2	True				
ANR	4554612	UnaryOperationExpression	* this		4554578	0					
ANR	4554613	UnaryOperator	*		4554578	0					
ANR	4554614	Identifier	this		4554578	1					
ANR	4554615	Identifier	operator +=		4554578	1					
ANR	4554616	ParameterList	const char * s		4554578	2					
ANR	4554617	Parameter	const char * s	251:21:5394:5406	4554578	0	True				
ANR	4554618	ParameterType	const char *		4554578	0					
ANR	4554619	Identifier	s		4554578	1					
ANR	4554620	CFGEntryNode	ENTRY		4554578		True				
ANR	4554621	CFGExitNode	EXIT		4554578		True				
ANR	4554622	Symbol	* this		4554578						
ANR	4554623	Symbol	strlen		4554578						
ANR	4554624	Symbol	s		4554578						
ANR	4554625	Symbol	this		4554578						
ANR	4554626	Symbol	* s		4554578						
ANR	4554627	Function	MyString :: append_str	260:0:5515:5918							
ANR	4554628	FunctionDef	"MyString :: append_str (const char * s , int s_len)"		4554627	0					
ANR	4554629	CompoundStatement		262:0:5569:5918	4554627	0					
ANR	4554630	IdentifierDeclStatement	char * pCopy = 0 ;	263:1:5572:5586	4554627	0	True				
ANR	4554631	IdentifierDecl	* pCopy = 0		4554627	0					
ANR	4554632	IdentifierDeclType	char *		4554627	0					
ANR	4554633	Identifier	pCopy		4554627	1					
ANR	4554634	AssignmentExpression	* pCopy = 0		4554627	2		=			
ANR	4554635	Identifier	pCopy		4554627	0					
ANR	4554636	PrimaryExpression	0		4554627	1					
ANR	4554637	IfStatement	if ( s == Data )		4554627	1					
ANR	4554638	Condition	s == Data	265:5:5594:5602	4554627	0	True				
ANR	4554639	EqualityExpression	s == Data		4554627	0		==			
ANR	4554640	Identifier	s		4554627	0					
ANR	4554641	Identifier	Data		4554627	1					
ANR	4554642	CompoundStatement		5:1:36:36	4554627	1					
ANR	4554643	ExpressionStatement	pCopy = ( char * ) new char [ s_len + 1 ]	267:2:5610:5644	4554627	0	True				
ANR	4554644	AssignmentExpression	pCopy = ( char * ) new char [ s_len + 1 ]		4554627	0		=			
ANR	4554645	Identifier	pCopy		4554627	0					
ANR	4554646	CastExpression	( char * ) new char [ s_len + 1 ]		4554627	1					
ANR	4554647	CastTarget	char *		4554627	0					
ANR	4554648	AdditiveExpression	s_len + 1		4554627	1		+			
ANR	4554649	Identifier	s_len		4554627	0					
ANR	4554650	PrimaryExpression	1		4554627	1					
ANR	4554651	ExpressionStatement	"strcpy ( pCopy , s )"	268:2:5648:5663	4554627	1	True				
ANR	4554652	CallExpression	"strcpy ( pCopy , s )"		4554627	0					
ANR	4554653	Callee	strcpy		4554627	0					
ANR	4554654	Identifier	strcpy		4554627	0					
ANR	4554655	ArgumentList	pCopy		4554627	1					
ANR	4554656	Argument	pCopy		4554627	0					
ANR	4554657	Identifier	pCopy		4554627	0					
ANR	4554658	Argument	s		4554627	1					
ANR	4554659	Identifier	s		4554627	0					
ANR	4554660	IfStatement	if ( s_len + Len > capacity || ! Data )		4554627	2					
ANR	4554661	Condition	s_len + Len > capacity || ! Data	271:8:5678:5708	4554627	0	True				
ANR	4554662	OrExpression	s_len + Len > capacity || ! Data		4554627	0		||			
ANR	4554663	RelationalExpression	s_len + Len > capacity		4554627	0		>			
ANR	4554664	AdditiveExpression	s_len + Len		4554627	0		+			
ANR	4554665	Identifier	s_len		4554627	0					
ANR	4554666	Identifier	Len		4554627	1					
ANR	4554667	Identifier	capacity		4554627	1					
ANR	4554668	UnaryOperationExpression	! Data		4554627	1					
ANR	4554669	UnaryOperator	!		4554627	0					
ANR	4554670	Identifier	Data		4554627	1					
ANR	4554671	CompoundStatement		11:4:146:146	4554627	1					
ANR	4554672	ExpressionStatement	reserve_at_least ( Len + s_len )	273:2:5720:5751	4554627	0	True				
ANR	4554673	CallExpression	reserve_at_least ( Len + s_len )		4554627	0					
ANR	4554674	Callee	reserve_at_least		4554627	0					
ANR	4554675	Identifier	reserve_at_least		4554627	0					
ANR	4554676	ArgumentList	Len + s_len		4554627	1					
ANR	4554677	Argument	Len + s_len		4554627	0					
ANR	4554678	AdditiveExpression	Len + s_len		4554627	0		+			
ANR	4554679	Identifier	Len		4554627	0					
ANR	4554680	Identifier	s_len		4554627	1					
ANR	4554681	IfStatement	if ( pCopy )		4554627	3					
ANR	4554682	Condition	pCopy	276:5:5765:5769	4554627	0	True				
ANR	4554683	Identifier	pCopy		4554627	0					
ANR	4554684	CompoundStatement		16:1:203:203	4554627	1					
ANR	4554685	ExpressionStatement	"strcpy ( Data + Len , pCopy )"	278:2:5777:5803	4554627	0	True				
ANR	4554686	CallExpression	"strcpy ( Data + Len , pCopy )"		4554627	0					
ANR	4554687	Callee	strcpy		4554627	0					
ANR	4554688	Identifier	strcpy		4554627	0					
ANR	4554689	ArgumentList	Data + Len		4554627	1					
ANR	4554690	Argument	Data + Len		4554627	0					
ANR	4554691	AdditiveExpression	Data + Len		4554627	0		+			
ANR	4554692	Identifier	Data		4554627	0					
ANR	4554693	Identifier	Len		4554627	1					
ANR	4554694	Argument	pCopy		4554627	1					
ANR	4554695	Identifier	pCopy		4554627	0					
ANR	4554696	Statement	delete	279:2:5849:5854	4554627	1	True				
ANR	4554697	Statement	[	279:9:5856:5856	4554627	2	True				
ANR	4554698	Statement	]	279:10:5857:5857	4554627	3	True				
ANR	4554699	ExpressionStatement	pCopy	279:12:5859:5864	4554627	4	True				
ANR	4554700	Identifier	pCopy		4554627	0					
ANR	4554701	ElseStatement	else		4554627	0					
ANR	4554702	ExpressionStatement	"strcpy ( Data + Len , s )"	282:2:5878:5900	4554627	0	True				
ANR	4554703	CallExpression	"strcpy ( Data + Len , s )"		4554627	0					
ANR	4554704	Callee	strcpy		4554627	0					
ANR	4554705	Identifier	strcpy		4554627	0					
ANR	4554706	ArgumentList	Data + Len		4554627	1					
ANR	4554707	Argument	Data + Len		4554627	0					
ANR	4554708	AdditiveExpression	Data + Len		4554627	0		+			
ANR	4554709	Identifier	Data		4554627	0					
ANR	4554710	Identifier	Len		4554627	1					
ANR	4554711	Argument	s		4554627	1					
ANR	4554712	Identifier	s		4554627	0					
ANR	4554713	ExpressionStatement	Len += s_len	284:1:5904:5916	4554627	4	True				
ANR	4554714	AssignmentExpression	Len += s_len		4554627	0		+=			
ANR	4554715	Identifier	Len		4554627	0					
ANR	4554716	Identifier	s_len		4554627	1					
ANR	4554717	ReturnType	void		4554627	1					
ANR	4554718	Identifier	MyString :: append_str		4554627	2					
ANR	4554719	ParameterList	"const char * s , int s_len"		4554627	3					
ANR	4554720	Parameter	const char * s	261:22:5542:5554	4554627	0	True				
ANR	4554721	ParameterType	const char *		4554627	0					
ANR	4554722	Identifier	s		4554627	1					
ANR	4554723	Parameter	int s_len	261:37:5557:5565	4554627	1	True				
ANR	4554724	ParameterType	int		4554627	0					
ANR	4554725	Identifier	s_len		4554627	1					
ANR	4554726	CFGEntryNode	ENTRY		4554627		True				
ANR	4554727	CFGExitNode	EXIT		4554627		True				
ANR	4554728	Symbol	s		4554627						
ANR	4554729	Symbol	Len		4554627						
ANR	4554730	Symbol	s_len		4554627						
ANR	4554731	Symbol	Data		4554627						
ANR	4554732	Symbol	pCopy		4554627						
ANR	4554733	Symbol	capacity		4554627						
ANR	4554734	Function	MyString :: append_to_list	287:0:5921:6100							
ANR	4554735	FunctionDef	"MyString :: append_to_list (char const * str , char const * delim)"		4554734	0					
ANR	4554736	CompoundStatement		288:72:5998:6100	4554734	0					
ANR	4554737	IfStatement	if ( str == NULL || str [ 0 ] == 0 )		4554734	0					
ANR	4554738	Condition	str == NULL || str [ 0 ] == 0	289:4:6004:6029	4554734	0	True				
ANR	4554739	OrExpression	str == NULL || str [ 0 ] == 0		4554734	0		||			
ANR	4554740	EqualityExpression	str == NULL		4554734	0		==			
ANR	4554741	Identifier	str		4554734	0					
ANR	4554742	Identifier	NULL		4554734	1					
ANR	4554743	EqualityExpression	str [ 0 ] == 0		4554734	1		==			
ANR	4554744	ArrayIndexing	str [ 0 ]		4554734	0					
ANR	4554745	Identifier	str		4554734	0					
ANR	4554746	PrimaryExpression	0		4554734	1					
ANR	4554747	PrimaryExpression	0		4554734	1					
ANR	4554748	CompoundStatement		2:32:33:33	4554734	1					
ANR	4554749	ReturnStatement	return ;	290:2:6036:6042	4554734	0	True				
ANR	4554750	IfStatement	if ( Len )		4554734	1					
ANR	4554751	Condition	Len	292:5:6052:6054	4554734	0	True				
ANR	4554752	Identifier	Len		4554734	0					
ANR	4554753	CompoundStatement		5:11:59:59	4554734	1					
ANR	4554754	ExpressionStatement	( * this ) += delim	293:2:6062:6078	4554734	0	True				
ANR	4554755	AssignmentExpression	( * this ) += delim		4554734	0		+=			
ANR	4554756	UnaryOperationExpression	* this		4554734	0					
ANR	4554757	UnaryOperator	*		4554734	0					
ANR	4554758	Identifier	this		4554734	1					
ANR	4554759	Identifier	delim		4554734	1					
ANR	4554760	ExpressionStatement	( * this ) += str	295:1:6084:6098	4554734	2	True				
ANR	4554761	AssignmentExpression	( * this ) += str		4554734	0		+=			
ANR	4554762	UnaryOperationExpression	* this		4554734	0					
ANR	4554763	UnaryOperator	*		4554734	0					
ANR	4554764	Identifier	this		4554734	1					
ANR	4554765	Identifier	str		4554734	1					
ANR	4554766	ReturnType	void		4554734	1					
ANR	4554767	Identifier	MyString :: append_to_list		4554734	2					
ANR	4554768	ParameterList	"char const * str , char const * delim"		4554734	3					
ANR	4554769	Parameter	char const * str	288:25:5951:5965	4554734	0	True				
ANR	4554770	ParameterType	char const *		4554734	0					
ANR	4554771	Identifier	str		4554734	1					
ANR	4554772	Parameter	char const * delim	288:41:5967:5983	4554734	1	True				
ANR	4554773	ParameterType	char const *		4554734	0					
ANR	4554774	Identifier	delim		4554734	1					
ANR	4554775	CFGEntryNode	ENTRY		4554734		True				
ANR	4554776	CFGExitNode	EXIT		4554734		True				
ANR	4554777	Symbol	str		4554734						
ANR	4554778	Symbol	* this		4554734						
ANR	4554779	Symbol	NULL		4554734						
ANR	4554780	Symbol	Len		4554734						
ANR	4554781	Symbol	this		4554734						
ANR	4554782	Symbol	* str		4554734						
ANR	4554783	Symbol	delim		4554734						
ANR	4554784	Function	MyString :: append_to_list	298:0:6103:6221							
ANR	4554785	FunctionDef	"MyString :: append_to_list (MyString const & str , char const * delim)"		4554784	0					
ANR	4554786	CompoundStatement		299:75:6183:6221	4554784	0					
ANR	4554787	ExpressionStatement	"append_to_list ( str . Value ( ) , delim )"	300:1:6186:6219	4554784	0	True				
ANR	4554788	CallExpression	"append_to_list ( str . Value ( ) , delim )"		4554784	0					
ANR	4554789	Callee	append_to_list		4554784	0					
ANR	4554790	Identifier	append_to_list		4554784	0					
ANR	4554791	ArgumentList	str . Value ( )		4554784	1					
ANR	4554792	Argument	str . Value ( )		4554784	0					
ANR	4554793	CallExpression	str . Value ( )		4554784	0					
ANR	4554794	Callee	str . Value		4554784	0					
ANR	4554795	MemberAccess	str . Value		4554784	0					
ANR	4554796	Identifier	str		4554784	0					
ANR	4554797	Identifier	Value		4554784	1					
ANR	4554798	ArgumentList			4554784	1					
ANR	4554799	Argument	delim		4554784	1					
ANR	4554800	Identifier	delim		4554784	0					
ANR	4554801	ReturnType	void		4554784	1					
ANR	4554802	Identifier	MyString :: append_to_list		4554784	2					
ANR	4554803	ParameterList	"MyString const & str , char const * delim"		4554784	3					
ANR	4554804	Parameter	MyString const & str	299:25:6133:6151	4554784	0	True				
ANR	4554805	ParameterType	MyString const &		4554784	0					
ANR	4554806	Identifier	str		4554784	1					
ANR	4554807	Parameter	char const * delim	299:45:6153:6169	4554784	1	True				
ANR	4554808	ParameterType	char const *		4554784	0					
ANR	4554809	Identifier	delim		4554784	1					
ANR	4554810	CFGEntryNode	ENTRY		4554784		True				
ANR	4554811	CFGExitNode	EXIT		4554784		True				
ANR	4554812	Symbol	str		4554784						
ANR	4554813	Symbol	str . Value		4554784						
ANR	4554814	Symbol	delim		4554784						
ANR	4554815	Function	operator +=	304:10:6245:6420							
ANR	4554816	FunctionDef	operator += (const char c)		4554815	0					
ANR	4554817	CompoundStatement		305:0:6271:6420	4554815	0					
ANR	4554818	IfStatement	if ( Len + 1 > capacity || ! Data )		4554815	0					
ANR	4554819	Condition	Len + 1 > capacity || ! Data	306:8:6281:6307	4554815	0	True				
ANR	4554820	OrExpression	Len + 1 > capacity || ! Data		4554815	0		||			
ANR	4554821	RelationalExpression	Len + 1 > capacity		4554815	0		>			
ANR	4554822	AdditiveExpression	Len + 1		4554815	0		+			
ANR	4554823	Identifier	Len		4554815	0					
ANR	4554824	PrimaryExpression	1		4554815	1					
ANR	4554825	Identifier	capacity		4554815	1					
ANR	4554826	UnaryOperationExpression	! Data		4554815	1					
ANR	4554827	UnaryOperator	!		4554815	0					
ANR	4554828	Identifier	Data		4554815	1					
ANR	4554829	CompoundStatement		2:38:39:39	4554815	1					
ANR	4554830	ExpressionStatement	reserve_at_least ( Len + 1 )	307:7:6320:6347	4554815	0	True				
ANR	4554831	CallExpression	reserve_at_least ( Len + 1 )		4554815	0					
ANR	4554832	Callee	reserve_at_least		4554815	0					
ANR	4554833	Identifier	reserve_at_least		4554815	0					
ANR	4554834	ArgumentList	Len + 1		4554815	1					
ANR	4554835	Argument	Len + 1		4554815	0					
ANR	4554836	AdditiveExpression	Len + 1		4554815	0		+			
ANR	4554837	Identifier	Len		4554815	0					
ANR	4554838	PrimaryExpression	1		4554815	1					
ANR	4554839	ExpressionStatement	Data [ Len ] = c	309:1:6356:6369	4554815	1	True				
ANR	4554840	AssignmentExpression	Data [ Len ] = c		4554815	0		=			
ANR	4554841	ArrayIndexing	Data [ Len ]		4554815	0					
ANR	4554842	Identifier	Data		4554815	0					
ANR	4554843	Identifier	Len		4554815	1					
ANR	4554844	Identifier	c		4554815	1					
ANR	4554845	ExpressionStatement	Data [ Len + 1 ] = '\\0'	310:1:6372:6390	4554815	2	True				
ANR	4554846	AssignmentExpression	Data [ Len + 1 ] = '\\0'		4554815	0		=			
ANR	4554847	ArrayIndexing	Data [ Len + 1 ]		4554815	0					
ANR	4554848	Identifier	Data		4554815	0					
ANR	4554849	AdditiveExpression	Len + 1		4554815	1		+			
ANR	4554850	Identifier	Len		4554815	0					
ANR	4554851	PrimaryExpression	1		4554815	1					
ANR	4554852	PrimaryExpression	'\\0'		4554815	1					
ANR	4554853	ExpressionStatement	Len ++	311:1:6393:6398	4554815	3	True				
ANR	4554854	PostIncDecOperationExpression	Len ++		4554815	0					
ANR	4554855	Identifier	Len		4554815	0					
ANR	4554856	IncDec	++		4554815	1					
ANR	4554857	ReturnStatement	return * this ;	312:4:6404:6416	4554815	4	True				
ANR	4554858	UnaryOperationExpression	* this		4554815	0					
ANR	4554859	UnaryOperator	*		4554815	0					
ANR	4554860	Identifier	this		4554815	1					
ANR	4554861	Identifier	operator +=		4554815	1					
ANR	4554862	ParameterList	const char c		4554815	2					
ANR	4554863	Parameter	const char c	304:21:6256:6267	4554815	0	True				
ANR	4554864	ParameterType	const char		4554815	0					
ANR	4554865	Identifier	c		4554815	1					
ANR	4554866	CFGEntryNode	ENTRY		4554815		True				
ANR	4554867	CFGExitNode	EXIT		4554815		True				
ANR	4554868	Symbol	* Len		4554815						
ANR	4554869	Symbol	* this		4554815						
ANR	4554870	Symbol	c		4554815						
ANR	4554871	Symbol	Len		4554815						
ANR	4554872	Symbol	this		4554815						
ANR	4554873	Symbol	Data		4554815						
ANR	4554874	Symbol	* Data		4554815						
ANR	4554875	Symbol	capacity		4554815						
ANR	4554876	Function	operator +	315:0:6423:6533							
ANR	4554877	FunctionDef	"operator + (const MyString & S1 , const MyString & S2)"		4554876	0					
ANR	4554878	CompoundStatement		316:0:6483:6533	4554876	0					
ANR	4554879	IdentifierDeclStatement	MyString S = S1 ;	317:4:6489:6504	4554876	0	True				
ANR	4554880	IdentifierDecl	S = S1		4554876	0					
ANR	4554881	IdentifierDeclType	MyString		4554876	0					
ANR	4554882	Identifier	S		4554876	1					
ANR	4554883	AssignmentExpression	S = S1		4554876	2		=			
ANR	4554884	Identifier	S1		4554876	0					
ANR	4554885	Identifier	S1		4554876	1					
ANR	4554886	ExpressionStatement	S += S2	318:4:6510:6517	4554876	1	True				
ANR	4554887	AssignmentExpression	S += S2		4554876	0		+=			
ANR	4554888	Identifier	S		4554876	0					
ANR	4554889	Identifier	S2		4554876	1					
ANR	4554890	ReturnStatement	return S ;	319:4:6523:6531	4554876	2	True				
ANR	4554891	Identifier	S		4554876	0					
ANR	4554892	ReturnType	MyString		4554876	1					
ANR	4554893	Identifier	operator +		4554876	2					
ANR	4554894	ParameterList	"const MyString & S1 , const MyString & S2"		4554876	3					
ANR	4554895	Parameter	const MyString & S1	315:19:6442:6459	4554876	0	True				
ANR	4554896	ParameterType	const MyString &		4554876	0					
ANR	4554897	Identifier	S1		4554876	1					
ANR	4554898	Parameter	const MyString & S2	315:39:6462:6479	4554876	1	True				
ANR	4554899	ParameterType	const MyString &		4554876	0					
ANR	4554900	Identifier	S2		4554876	1					
ANR	4554901	CFGEntryNode	ENTRY		4554876		True				
ANR	4554902	CFGExitNode	EXIT		4554876		True				
ANR	4554903	Symbol	S		4554876						
ANR	4554904	Symbol	S1		4554876						
ANR	4554905	Symbol	S2		4554876						
ANR	4554906	Function	operator +=	324:10:6558:6761							
ANR	4554907	FunctionDef	operator += (int i)		4554906	0					
ANR	4554908	CompoundStatement		325:0:6578:6761	4554906	0					
ANR	4554909	IdentifierDeclStatement	const int bufLen = 64 ;	326:1:6581:6602	4554906	0	True				
ANR	4554910	IdentifierDecl	bufLen = 64		4554906	0					
ANR	4554911	IdentifierDeclType	const int		4554906	0					
ANR	4554912	Identifier	bufLen		4554906	1					
ANR	4554913	AssignmentExpression	bufLen = 64		4554906	2		=			
ANR	4554914	Identifier	bufLen		4554906	0					
ANR	4554915	PrimaryExpression	64		4554906	1					
ANR	4554916	IdentifierDeclStatement	char tmp [ bufLen ] ;	327:1:6605:6621	4554906	1	True				
ANR	4554917	IdentifierDecl	tmp [ bufLen ]		4554906	0					
ANR	4554918	IdentifierDeclType	char [ bufLen ]		4554906	0					
ANR	4554919	Identifier	tmp		4554906	1					
ANR	4554920	Identifier	bufLen		4554906	2					
ANR	4554921	Statement	::	328:1:6624:6625	4554906	2	True				
ANR	4554922	ExpressionStatement	"snprintf ( tmp , bufLen , ""%d"" , i )"	328:3:6626:6658	4554906	3	True				
ANR	4554923	CallExpression	"snprintf ( tmp , bufLen , ""%d"" , i )"		4554906	0					
ANR	4554924	Callee	snprintf		4554906	0					
ANR	4554925	Identifier	snprintf		4554906	0					
ANR	4554926	ArgumentList	tmp		4554906	1					
ANR	4554927	Argument	tmp		4554906	0					
ANR	4554928	Identifier	tmp		4554906	0					
ANR	4554929	Argument	bufLen		4554906	1					
ANR	4554930	Identifier	bufLen		4554906	0					
ANR	4554931	Argument	"""%d"""		4554906	2					
ANR	4554932	PrimaryExpression	"""%d"""		4554906	0					
ANR	4554933	Argument	i		4554906	3					
ANR	4554934	Identifier	i		4554906	0					
ANR	4554935	IdentifierDeclStatement	int s_len = strlen ( tmp ) ;	329:4:6664:6689	4554906	4	True				
ANR	4554936	IdentifierDecl	s_len = strlen ( tmp )		4554906	0					
ANR	4554937	IdentifierDeclType	int		4554906	0					
ANR	4554938	Identifier	s_len		4554906	1					
ANR	4554939	AssignmentExpression	s_len = strlen ( tmp )		4554906	2		=			
ANR	4554940	Identifier	s_len		4554906	0					
ANR	4554941	CallExpression	strlen ( tmp )		4554906	1					
ANR	4554942	Callee	strlen		4554906	0					
ANR	4554943	Identifier	strlen		4554906	0					
ANR	4554944	ArgumentList	tmp		4554906	1					
ANR	4554945	Argument	tmp		4554906	0					
ANR	4554946	Identifier	tmp		4554906	0					
ANR	4554947	ExpressionStatement	ASSERT ( s_len < bufLen )	330:1:6692:6714	4554906	5	True				
ANR	4554948	CallExpression	ASSERT ( s_len < bufLen )		4554906	0					
ANR	4554949	Callee	ASSERT		4554906	0					
ANR	4554950	Identifier	ASSERT		4554906	0					
ANR	4554951	ArgumentList	s_len < bufLen		4554906	1					
ANR	4554952	Argument	s_len < bufLen		4554906	0					
ANR	4554953	RelationalExpression	s_len < bufLen		4554906	0		<			
ANR	4554954	Identifier	s_len		4554906	0					
ANR	4554955	Identifier	bufLen		4554906	1					
ANR	4554956	ExpressionStatement	"append_str ( tmp , s_len )"	331:1:6717:6741	4554906	6	True				
ANR	4554957	CallExpression	"append_str ( tmp , s_len )"		4554906	0					
ANR	4554958	Callee	append_str		4554906	0					
ANR	4554959	Identifier	append_str		4554906	0					
ANR	4554960	ArgumentList	tmp		4554906	1					
ANR	4554961	Argument	tmp		4554906	0					
ANR	4554962	Identifier	tmp		4554906	0					
ANR	4554963	Argument	s_len		4554906	1					
ANR	4554964	Identifier	s_len		4554906	0					
ANR	4554965	ReturnStatement	return * this ;	332:4:6747:6759	4554906	7	True				
ANR	4554966	UnaryOperationExpression	* this		4554906	0					
ANR	4554967	UnaryOperator	*		4554906	0					
ANR	4554968	Identifier	this		4554906	1					
ANR	4554969	Identifier	operator +=		4554906	1					
ANR	4554970	ParameterList	int i		4554906	2					
ANR	4554971	Parameter	int i	324:22:6570:6574	4554906	0	True				
ANR	4554972	ParameterType	int		4554906	0					
ANR	4554973	Identifier	i		4554906	1					
ANR	4554974	CFGEntryNode	ENTRY		4554906		True				
ANR	4554975	CFGExitNode	EXIT		4554906		True				
ANR	4554976	Symbol	* this		4554906						
ANR	4554977	Symbol	strlen		4554906						
ANR	4554978	Symbol	tmp		4554906						
ANR	4554979	Symbol	s_len		4554906						
ANR	4554980	Symbol	this		4554906						
ANR	4554981	Symbol	i		4554906						
ANR	4554982	Symbol	bufLen		4554906						
ANR	4554983	Function	operator +=	337:10:6786:6994							
ANR	4554984	FunctionDef	operator += (unsigned int ui)		4554983	0					
ANR	4554985	CompoundStatement		338:0:6816:6994	4554983	0					
ANR	4554986	IdentifierDeclStatement	const int bufLen = 64 ;	339:1:6819:6840	4554983	0	True				
ANR	4554987	IdentifierDecl	bufLen = 64		4554983	0					
ANR	4554988	IdentifierDeclType	const int		4554983	0					
ANR	4554989	Identifier	bufLen		4554983	1					
ANR	4554990	AssignmentExpression	bufLen = 64		4554983	2		=			
ANR	4554991	Identifier	bufLen		4554983	0					
ANR	4554992	PrimaryExpression	64		4554983	1					
ANR	4554993	IdentifierDeclStatement	char tmp [ bufLen ] ;	340:1:6843:6859	4554983	1	True				
ANR	4554994	IdentifierDecl	tmp [ bufLen ]		4554983	0					
ANR	4554995	IdentifierDeclType	char [ bufLen ]		4554983	0					
ANR	4554996	Identifier	tmp		4554983	1					
ANR	4554997	Identifier	bufLen		4554983	2					
ANR	4554998	Statement	::	341:1:6862:6863	4554983	2	True				
ANR	4554999	ExpressionStatement	"snprintf ( tmp , bufLen , ""%u"" , ui )"	341:3:6864:6897	4554983	3	True				
ANR	4555000	CallExpression	"snprintf ( tmp , bufLen , ""%u"" , ui )"		4554983	0					
ANR	4555001	Callee	snprintf		4554983	0					
ANR	4555002	Identifier	snprintf		4554983	0					
ANR	4555003	ArgumentList	tmp		4554983	1					
ANR	4555004	Argument	tmp		4554983	0					
ANR	4555005	Identifier	tmp		4554983	0					
ANR	4555006	Argument	bufLen		4554983	1					
ANR	4555007	Identifier	bufLen		4554983	0					
ANR	4555008	Argument	"""%u"""		4554983	2					
ANR	4555009	PrimaryExpression	"""%u"""		4554983	0					
ANR	4555010	Argument	ui		4554983	3					
ANR	4555011	Identifier	ui		4554983	0					
ANR	4555012	IdentifierDeclStatement	int s_len = strlen ( tmp ) ;	342:1:6900:6925	4554983	4	True				
ANR	4555013	IdentifierDecl	s_len = strlen ( tmp )		4554983	0					
ANR	4555014	IdentifierDeclType	int		4554983	0					
ANR	4555015	Identifier	s_len		4554983	1					
ANR	4555016	AssignmentExpression	s_len = strlen ( tmp )		4554983	2		=			
ANR	4555017	Identifier	s_len		4554983	0					
ANR	4555018	CallExpression	strlen ( tmp )		4554983	1					
ANR	4555019	Callee	strlen		4554983	0					
ANR	4555020	Identifier	strlen		4554983	0					
ANR	4555021	ArgumentList	tmp		4554983	1					
ANR	4555022	Argument	tmp		4554983	0					
ANR	4555023	Identifier	tmp		4554983	0					
ANR	4555024	ExpressionStatement	ASSERT ( s_len < bufLen )	343:1:6928:6950	4554983	5	True				
ANR	4555025	CallExpression	ASSERT ( s_len < bufLen )		4554983	0					
ANR	4555026	Callee	ASSERT		4554983	0					
ANR	4555027	Identifier	ASSERT		4554983	0					
ANR	4555028	ArgumentList	s_len < bufLen		4554983	1					
ANR	4555029	Argument	s_len < bufLen		4554983	0					
ANR	4555030	RelationalExpression	s_len < bufLen		4554983	0		<			
ANR	4555031	Identifier	s_len		4554983	0					
ANR	4555032	Identifier	bufLen		4554983	1					
ANR	4555033	ExpressionStatement	"append_str ( tmp , s_len )"	344:1:6953:6977	4554983	6	True				
ANR	4555034	CallExpression	"append_str ( tmp , s_len )"		4554983	0					
ANR	4555035	Callee	append_str		4554983	0					
ANR	4555036	Identifier	append_str		4554983	0					
ANR	4555037	ArgumentList	tmp		4554983	1					
ANR	4555038	Argument	tmp		4554983	0					
ANR	4555039	Identifier	tmp		4554983	0					
ANR	4555040	Argument	s_len		4554983	1					
ANR	4555041	Identifier	s_len		4554983	0					
ANR	4555042	ReturnStatement	return * this ;	345:1:6980:6992	4554983	7	True				
ANR	4555043	UnaryOperationExpression	* this		4554983	0					
ANR	4555044	UnaryOperator	*		4554983	0					
ANR	4555045	Identifier	this		4554983	1					
ANR	4555046	Identifier	operator +=		4554983	1					
ANR	4555047	ParameterList	unsigned int ui		4554983	2					
ANR	4555048	Parameter	unsigned int ui	337:22:6798:6812	4554983	0	True				
ANR	4555049	ParameterType	unsigned int		4554983	0					
ANR	4555050	Identifier	ui		4554983	1					
ANR	4555051	CFGEntryNode	ENTRY		4554983		True				
ANR	4555052	CFGExitNode	EXIT		4554983		True				
ANR	4555053	Symbol	* this		4554983						
ANR	4555054	Symbol	strlen		4554983						
ANR	4555055	Symbol	ui		4554983						
ANR	4555056	Symbol	tmp		4554983						
ANR	4555057	Symbol	s_len		4554983						
ANR	4555058	Symbol	this		4554983						
ANR	4555059	Symbol	bufLen		4554983						
ANR	4555060	Function	operator +=	350:10:7019:7218							
ANR	4555061	FunctionDef	operator += (long l)		4555060	0					
ANR	4555062	CompoundStatement		351:0:7040:7218	4555060	0					
ANR	4555063	IdentifierDeclStatement	const int bufLen = 64 ;	352:1:7043:7064	4555060	0	True				
ANR	4555064	IdentifierDecl	bufLen = 64		4555060	0					
ANR	4555065	IdentifierDeclType	const int		4555060	0					
ANR	4555066	Identifier	bufLen		4555060	1					
ANR	4555067	AssignmentExpression	bufLen = 64		4555060	2		=			
ANR	4555068	Identifier	bufLen		4555060	0					
ANR	4555069	PrimaryExpression	64		4555060	1					
ANR	4555070	IdentifierDeclStatement	char tmp [ bufLen ] ;	353:1:7067:7083	4555060	1	True				
ANR	4555071	IdentifierDecl	tmp [ bufLen ]		4555060	0					
ANR	4555072	IdentifierDeclType	char [ bufLen ]		4555060	0					
ANR	4555073	Identifier	tmp		4555060	1					
ANR	4555074	Identifier	bufLen		4555060	2					
ANR	4555075	Statement	::	354:1:7086:7087	4555060	2	True				
ANR	4555076	ExpressionStatement	"snprintf ( tmp , bufLen , ""%ld"" , l )"	354:3:7088:7121	4555060	3	True				
ANR	4555077	CallExpression	"snprintf ( tmp , bufLen , ""%ld"" , l )"		4555060	0					
ANR	4555078	Callee	snprintf		4555060	0					
ANR	4555079	Identifier	snprintf		4555060	0					
ANR	4555080	ArgumentList	tmp		4555060	1					
ANR	4555081	Argument	tmp		4555060	0					
ANR	4555082	Identifier	tmp		4555060	0					
ANR	4555083	Argument	bufLen		4555060	1					
ANR	4555084	Identifier	bufLen		4555060	0					
ANR	4555085	Argument	"""%ld"""		4555060	2					
ANR	4555086	PrimaryExpression	"""%ld"""		4555060	0					
ANR	4555087	Argument	l		4555060	3					
ANR	4555088	Identifier	l		4555060	0					
ANR	4555089	IdentifierDeclStatement	int s_len = strlen ( tmp ) ;	355:1:7124:7149	4555060	4	True				
ANR	4555090	IdentifierDecl	s_len = strlen ( tmp )		4555060	0					
ANR	4555091	IdentifierDeclType	int		4555060	0					
ANR	4555092	Identifier	s_len		4555060	1					
ANR	4555093	AssignmentExpression	s_len = strlen ( tmp )		4555060	2		=			
ANR	4555094	Identifier	s_len		4555060	0					
ANR	4555095	CallExpression	strlen ( tmp )		4555060	1					
ANR	4555096	Callee	strlen		4555060	0					
ANR	4555097	Identifier	strlen		4555060	0					
ANR	4555098	ArgumentList	tmp		4555060	1					
ANR	4555099	Argument	tmp		4555060	0					
ANR	4555100	Identifier	tmp		4555060	0					
ANR	4555101	ExpressionStatement	ASSERT ( s_len < bufLen )	356:1:7152:7174	4555060	5	True				
ANR	4555102	CallExpression	ASSERT ( s_len < bufLen )		4555060	0					
ANR	4555103	Callee	ASSERT		4555060	0					
ANR	4555104	Identifier	ASSERT		4555060	0					
ANR	4555105	ArgumentList	s_len < bufLen		4555060	1					
ANR	4555106	Argument	s_len < bufLen		4555060	0					
ANR	4555107	RelationalExpression	s_len < bufLen		4555060	0		<			
ANR	4555108	Identifier	s_len		4555060	0					
ANR	4555109	Identifier	bufLen		4555060	1					
ANR	4555110	ExpressionStatement	"append_str ( tmp , s_len )"	357:1:7177:7201	4555060	6	True				
ANR	4555111	CallExpression	"append_str ( tmp , s_len )"		4555060	0					
ANR	4555112	Callee	append_str		4555060	0					
ANR	4555113	Identifier	append_str		4555060	0					
ANR	4555114	ArgumentList	tmp		4555060	1					
ANR	4555115	Argument	tmp		4555060	0					
ANR	4555116	Identifier	tmp		4555060	0					
ANR	4555117	Argument	s_len		4555060	1					
ANR	4555118	Identifier	s_len		4555060	0					
ANR	4555119	ReturnStatement	return * this ;	358:1:7204:7216	4555060	7	True				
ANR	4555120	UnaryOperationExpression	* this		4555060	0					
ANR	4555121	UnaryOperator	*		4555060	0					
ANR	4555122	Identifier	this		4555060	1					
ANR	4555123	Identifier	operator +=		4555060	1					
ANR	4555124	ParameterList	long l		4555060	2					
ANR	4555125	Parameter	long l	350:22:7031:7036	4555060	0	True				
ANR	4555126	ParameterType	long		4555060	0					
ANR	4555127	Identifier	l		4555060	1					
ANR	4555128	CFGEntryNode	ENTRY		4555060		True				
ANR	4555129	CFGExitNode	EXIT		4555060		True				
ANR	4555130	Symbol	* this		4555060						
ANR	4555131	Symbol	strlen		4555060						
ANR	4555132	Symbol	tmp		4555060						
ANR	4555133	Symbol	s_len		4555060						
ANR	4555134	Symbol	this		4555060						
ANR	4555135	Symbol	bufLen		4555060						
ANR	4555136	Symbol	l		4555060						
ANR	4555137	Function	operator +=	363:10:7243:7450							
ANR	4555138	FunctionDef	operator += (double d)		4555137	0					
ANR	4555139	CompoundStatement		364:0:7266:7450	4555137	0					
ANR	4555140	IdentifierDeclStatement	const int bufLen = 128 ;	365:1:7269:7291	4555137	0	True				
ANR	4555141	IdentifierDecl	bufLen = 128		4555137	0					
ANR	4555142	IdentifierDeclType	const int		4555137	0					
ANR	4555143	Identifier	bufLen		4555137	1					
ANR	4555144	AssignmentExpression	bufLen = 128		4555137	2		=			
ANR	4555145	Identifier	bufLen		4555137	0					
ANR	4555146	PrimaryExpression	128		4555137	1					
ANR	4555147	IdentifierDeclStatement	char tmp [ bufLen ] ;	366:1:7294:7310	4555137	1	True				
ANR	4555148	IdentifierDecl	tmp [ bufLen ]		4555137	0					
ANR	4555149	IdentifierDeclType	char [ bufLen ]		4555137	0					
ANR	4555150	Identifier	tmp		4555137	1					
ANR	4555151	Identifier	bufLen		4555137	2					
ANR	4555152	Statement	::	367:1:7313:7314	4555137	2	True				
ANR	4555153	ExpressionStatement	"snprintf ( tmp , bufLen , ""%f"" , d )"	367:3:7315:7347	4555137	3	True				
ANR	4555154	CallExpression	"snprintf ( tmp , bufLen , ""%f"" , d )"		4555137	0					
ANR	4555155	Callee	snprintf		4555137	0					
ANR	4555156	Identifier	snprintf		4555137	0					
ANR	4555157	ArgumentList	tmp		4555137	1					
ANR	4555158	Argument	tmp		4555137	0					
ANR	4555159	Identifier	tmp		4555137	0					
ANR	4555160	Argument	bufLen		4555137	1					
ANR	4555161	Identifier	bufLen		4555137	0					
ANR	4555162	Argument	"""%f"""		4555137	2					
ANR	4555163	PrimaryExpression	"""%f"""		4555137	0					
ANR	4555164	Argument	d		4555137	3					
ANR	4555165	Identifier	d		4555137	0					
ANR	4555166	IdentifierDeclStatement	int s_len = strlen ( tmp ) ;	368:4:7353:7378	4555137	4	True				
ANR	4555167	IdentifierDecl	s_len = strlen ( tmp )		4555137	0					
ANR	4555168	IdentifierDeclType	int		4555137	0					
ANR	4555169	Identifier	s_len		4555137	1					
ANR	4555170	AssignmentExpression	s_len = strlen ( tmp )		4555137	2		=			
ANR	4555171	Identifier	s_len		4555137	0					
ANR	4555172	CallExpression	strlen ( tmp )		4555137	1					
ANR	4555173	Callee	strlen		4555137	0					
ANR	4555174	Identifier	strlen		4555137	0					
ANR	4555175	ArgumentList	tmp		4555137	1					
ANR	4555176	Argument	tmp		4555137	0					
ANR	4555177	Identifier	tmp		4555137	0					
ANR	4555178	ExpressionStatement	ASSERT ( s_len < bufLen )	369:1:7381:7403	4555137	5	True				
ANR	4555179	CallExpression	ASSERT ( s_len < bufLen )		4555137	0					
ANR	4555180	Callee	ASSERT		4555137	0					
ANR	4555181	Identifier	ASSERT		4555137	0					
ANR	4555182	ArgumentList	s_len < bufLen		4555137	1					
ANR	4555183	Argument	s_len < bufLen		4555137	0					
ANR	4555184	RelationalExpression	s_len < bufLen		4555137	0		<			
ANR	4555185	Identifier	s_len		4555137	0					
ANR	4555186	Identifier	bufLen		4555137	1					
ANR	4555187	ExpressionStatement	"append_str ( tmp , s_len )"	370:1:7406:7430	4555137	6	True				
ANR	4555188	CallExpression	"append_str ( tmp , s_len )"		4555137	0					
ANR	4555189	Callee	append_str		4555137	0					
ANR	4555190	Identifier	append_str		4555137	0					
ANR	4555191	ArgumentList	tmp		4555137	1					
ANR	4555192	Argument	tmp		4555137	0					
ANR	4555193	Identifier	tmp		4555137	0					
ANR	4555194	Argument	s_len		4555137	1					
ANR	4555195	Identifier	s_len		4555137	0					
ANR	4555196	ReturnStatement	return * this ;	371:4:7436:7448	4555137	7	True				
ANR	4555197	UnaryOperationExpression	* this		4555137	0					
ANR	4555198	UnaryOperator	*		4555137	0					
ANR	4555199	Identifier	this		4555137	1					
ANR	4555200	Identifier	operator +=		4555137	1					
ANR	4555201	ParameterList	double d		4555137	2					
ANR	4555202	Parameter	double d	363:22:7255:7262	4555137	0	True				
ANR	4555203	ParameterType	double		4555137	0					
ANR	4555204	Identifier	d		4555137	1					
ANR	4555205	CFGEntryNode	ENTRY		4555137		True				
ANR	4555206	CFGExitNode	EXIT		4555137		True				
ANR	4555207	Symbol	* this		4555137						
ANR	4555208	Symbol	strlen		4555137						
ANR	4555209	Symbol	d		4555137						
ANR	4555210	Symbol	tmp		4555137						
ANR	4555211	Symbol	s_len		4555137						
ANR	4555212	Symbol	this		4555137						
ANR	4555213	Symbol	bufLen		4555137						
ANR	4555214	Function	MyString :: Substr	381:0:7632:8010							
ANR	4555215	FunctionDef	"MyString :: Substr (int pos1 , int pos2)"		4555214	0					
ANR	4555216	CompoundStatement		383:0:7686:8010	4555214	0					
ANR	4555217	IdentifierDeclStatement	MyString S ;	384:4:7692:7702	4555214	0	True				
ANR	4555218	IdentifierDecl	S		4555214	0					
ANR	4555219	IdentifierDeclType	MyString		4555214	0					
ANR	4555220	Identifier	S		4555214	1					
ANR	4555221	IfStatement	if ( Len <= 0 )		4555214	1					
ANR	4555222	Condition	Len <= 0	386:5:7710:7717	4555214	0	True				
ANR	4555223	RelationalExpression	Len <= 0		4555214	0		<=			
ANR	4555224	Identifier	Len		4555214	0					
ANR	4555225	PrimaryExpression	0		4555214	1					
ANR	4555226	CompoundStatement		4:15:33:33	4555214	1					
ANR	4555227	ReturnStatement	return S ;	387:5:7727:7735	4555214	0	True				
ANR	4555228	Identifier	S		4555214	0					
ANR	4555229	IfStatement	if ( pos2 >= Len )		4555214	2					
ANR	4555230	Condition	pos2 >= Len	390:8:7749:7759	4555214	0	True				
ANR	4555231	RelationalExpression	pos2 >= Len		4555214	0		>=			
ANR	4555232	Identifier	pos2		4555214	0					
ANR	4555233	Identifier	Len		4555214	1					
ANR	4555234	CompoundStatement		8:21:75:75	4555214	1					
ANR	4555235	ExpressionStatement	pos2 = Len - 1	391:2:7766:7780	4555214	0	True				
ANR	4555236	AssignmentExpression	pos2 = Len - 1		4555214	0		=			
ANR	4555237	Identifier	pos2		4555214	0					
ANR	4555238	AdditiveExpression	Len - 1		4555214	1		-			
ANR	4555239	Identifier	Len		4555214	0					
ANR	4555240	PrimaryExpression	1		4555214	1					
ANR	4555241	IfStatement	if ( pos1 < 0 )		4555214	3					
ANR	4555242	Condition	pos1 < 0	393:8:7793:7800	4555214	0	True				
ANR	4555243	RelationalExpression	pos1 < 0		4555214	0		<			
ANR	4555244	Identifier	pos1		4555214	0					
ANR	4555245	PrimaryExpression	0		4555214	1					
ANR	4555246	CompoundStatement		11:18:116:116	4555214	1					
ANR	4555247	ExpressionStatement	pos1 = 0	394:2:7807:7813	4555214	0	True				
ANR	4555248	AssignmentExpression	pos1 = 0		4555214	0		=			
ANR	4555249	Identifier	pos1		4555214	0					
ANR	4555250	PrimaryExpression	0		4555214	1					
ANR	4555251	IfStatement	if ( pos1 > pos2 )		4555214	4					
ANR	4555252	Condition	pos1 > pos2	396:8:7826:7836	4555214	0	True				
ANR	4555253	RelationalExpression	pos1 > pos2		4555214	0		>			
ANR	4555254	Identifier	pos1		4555214	0					
ANR	4555255	Identifier	pos2		4555214	1					
ANR	4555256	CompoundStatement		14:21:152:152	4555214	1					
ANR	4555257	ReturnStatement	return S ;	397:2:7843:7851	4555214	0	True				
ANR	4555258	Identifier	S		4555214	0					
ANR	4555259	IdentifierDeclStatement	int len = pos2 - pos1 + 1 ;	399:4:7860:7881	4555214	5	True				
ANR	4555260	IdentifierDecl	len = pos2 - pos1 + 1		4555214	0					
ANR	4555261	IdentifierDeclType	int		4555214	0					
ANR	4555262	Identifier	len		4555214	1					
ANR	4555263	AssignmentExpression	len = pos2 - pos1 + 1		4555214	2		=			
ANR	4555264	Identifier	len		4555214	0					
ANR	4555265	AdditiveExpression	pos2 - pos1 + 1		4555214	1		-			
ANR	4555266	Identifier	pos2		4555214	0					
ANR	4555267	AdditiveExpression	pos1 + 1		4555214	1		+			
ANR	4555268	Identifier	pos1		4555214	0					
ANR	4555269	PrimaryExpression	1		4555214	1					
ANR	4555270	IdentifierDeclStatement	char * tmp = new char [ len + 1 ] ;	400:4:7887:7914	4555214	6	True				
ANR	4555271	IdentifierDecl	* tmp = new char [ len + 1 ]		4555214	0					
ANR	4555272	IdentifierDeclType	char *		4555214	0					
ANR	4555273	Identifier	tmp		4555214	1					
ANR	4555274	AssignmentExpression	* tmp = new char [ len + 1 ]		4555214	2		=			
ANR	4555275	Identifier	tmp		4555214	0					
ANR	4555276	AdditiveExpression	len + 1		4555214	1		+			
ANR	4555277	Identifier	len		4555214	0					
ANR	4555278	PrimaryExpression	1		4555214	1					
ANR	4555279	ExpressionStatement	"strncpy ( tmp , Data + pos1 , len )"	401:4:7920:7946	4555214	7	True				
ANR	4555280	CallExpression	"strncpy ( tmp , Data + pos1 , len )"		4555214	0					
ANR	4555281	Callee	strncpy		4555214	0					
ANR	4555282	Identifier	strncpy		4555214	0					
ANR	4555283	ArgumentList	tmp		4555214	1					
ANR	4555284	Argument	tmp		4555214	0					
ANR	4555285	Identifier	tmp		4555214	0					
ANR	4555286	Argument	Data + pos1		4555214	1					
ANR	4555287	AdditiveExpression	Data + pos1		4555214	0		+			
ANR	4555288	Identifier	Data		4555214	0					
ANR	4555289	Identifier	pos1		4555214	1					
ANR	4555290	Argument	len		4555214	2					
ANR	4555291	Identifier	len		4555214	0					
ANR	4555292	ExpressionStatement	tmp [ len ] = '\\0'	402:4:7952:7965	4555214	8	True				
ANR	4555293	AssignmentExpression	tmp [ len ] = '\\0'		4555214	0		=			
ANR	4555294	ArrayIndexing	tmp [ len ]		4555214	0					
ANR	4555295	Identifier	tmp		4555214	0					
ANR	4555296	Identifier	len		4555214	1					
ANR	4555297	PrimaryExpression	'\\0'		4555214	1					
ANR	4555298	ExpressionStatement	S = tmp	403:4:7971:7976	4555214	9	True				
ANR	4555299	AssignmentExpression	S = tmp		4555214	0		=			
ANR	4555300	Identifier	S		4555214	0					
ANR	4555301	Identifier	tmp		4555214	1					
ANR	4555302	Statement	delete	404:4:7982:7987	4555214	10	True				
ANR	4555303	Statement	[	404:10:7988:7988	4555214	11	True				
ANR	4555304	Statement	]	404:11:7989:7989	4555214	12	True				
ANR	4555305	ExpressionStatement	tmp	404:13:7991:7994	4555214	13	True				
ANR	4555306	Identifier	tmp		4555214	0					
ANR	4555307	ReturnStatement	return S ;	405:4:8000:8008	4555214	14	True				
ANR	4555308	Identifier	S		4555214	0					
ANR	4555309	ReturnType	MyString		4555214	1					
ANR	4555310	Identifier	MyString :: Substr		4555214	2					
ANR	4555311	ParameterList	"int pos1 , int pos2"		4555214	3					
ANR	4555312	Parameter	int pos1	382:17:7659:7666	4555214	0	True				
ANR	4555313	ParameterType	int		4555214	0					
ANR	4555314	Identifier	pos1		4555214	1					
ANR	4555315	Parameter	int pos2	382:27:7669:7676	4555214	1	True				
ANR	4555316	ParameterType	int		4555214	0					
ANR	4555317	Identifier	pos2		4555214	1					
ANR	4555318	CFGEntryNode	ENTRY		4555214		True				
ANR	4555319	CFGExitNode	EXIT		4555214		True				
ANR	4555320	Symbol	* tmp		4555214						
ANR	4555321	Symbol	S		4555214						
ANR	4555322	Symbol	Len		4555214						
ANR	4555323	Symbol	len		4555214						
ANR	4555324	Symbol	tmp		4555214						
ANR	4555325	Symbol	pos1		4555214						
ANR	4555326	Symbol	pos2		4555214						
ANR	4555327	Symbol	Data		4555214						
ANR	4555328	Symbol	* len		4555214						
ANR	4555329	Function	MyString :: EscapeChars	412:0:8158:8829							
ANR	4555330	FunctionDef	"MyString :: EscapeChars (const MyString & Q , const char escape)"		4555329	0					
ANR	4555331	CompoundStatement		414:0:8235:8829	4555329	0					
ANR	4555332	IdentifierDeclStatement	MyString S ;	420:1:8456:8466	4555329	0	True				
ANR	4555333	IdentifierDecl	S		4555329	0					
ANR	4555334	IdentifierDeclType	MyString		4555329	0					
ANR	4555335	Identifier	S		4555329	1					
ANR	4555336	ExpressionStatement	S . reserve ( Len )	421:1:8469:8483	4555329	1	True				
ANR	4555337	CallExpression	S . reserve ( Len )		4555329	0					
ANR	4555338	Callee	S . reserve		4555329	0					
ANR	4555339	MemberAccess	S . reserve		4555329	0					
ANR	4555340	Identifier	S		4555329	0					
ANR	4555341	Identifier	reserve		4555329	1					
ANR	4555342	ArgumentList	Len		4555329	1					
ANR	4555343	Argument	Len		4555329	0					
ANR	4555344	Identifier	Len		4555329	0					
ANR	4555345	ForStatement	for ( int i = 0 ; i < Len ; i ++ )		4555329	2					
ANR	4555346	ForInit	int i = 0 ;	424:6:8533:8542	4555329	0	True				
ANR	4555347	IdentifierDeclStatement	int i = 0 ;		4555329	0					
ANR	4555348	IdentifierDecl	i = 0		4555329	0					
ANR	4555349	IdentifierDeclType	int		4555329	0					
ANR	4555350	Identifier	i		4555329	1					
ANR	4555351	AssignmentExpression	i = 0		4555329	2		=			
ANR	4555352	Identifier	i		4555329	0					
ANR	4555353	PrimaryExpression	0		4555329	1					
ANR	4555354	Condition	i < Len	424:17:8544:8550	4555329	1	True				
ANR	4555355	RelationalExpression	i < Len		4555329	0		<			
ANR	4555356	Identifier	i		4555329	0					
ANR	4555357	Identifier	Len		4555329	1					
ANR	4555358	PostIncDecOperationExpression	i ++	424:26:8553:8555	4555329	2	True				
ANR	4555359	Identifier	i		4555329	0					
ANR	4555360	IncDec	++		4555329	1					
ANR	4555361	CompoundStatement		11:31:322:322	4555329	3					
ANR	4555362	IfStatement	if ( Q . FindChar ( Data [ i ] ) >= 0 )		4555329	0					
ANR	4555363	Condition	Q . FindChar ( Data [ i ] ) >= 0	428:6:8661:8684	4555329	0	True				
ANR	4555364	RelationalExpression	Q . FindChar ( Data [ i ] ) >= 0		4555329	0		>=			
ANR	4555365	CallExpression	Q . FindChar ( Data [ i ] )		4555329	0					
ANR	4555366	Callee	Q . FindChar		4555329	0					
ANR	4555367	MemberAccess	Q . FindChar		4555329	0					
ANR	4555368	Identifier	Q		4555329	0					
ANR	4555369	Identifier	FindChar		4555329	1					
ANR	4555370	ArgumentList	Data [ i ]		4555329	1					
ANR	4555371	Argument	Data [ i ]		4555329	0					
ANR	4555372	ArrayIndexing	Data [ i ]		4555329	0					
ANR	4555373	Identifier	Data		4555329	0					
ANR	4555374	Identifier	i		4555329	1					
ANR	4555375	PrimaryExpression	0		4555329	1					
ANR	4555376	CompoundStatement		15:32:451:451	4555329	1					
ANR	4555377	ExpressionStatement	S += escape	430:3:8728:8739	4555329	0	True				
ANR	4555378	AssignmentExpression	S += escape		4555329	0		+=			
ANR	4555379	Identifier	S		4555329	0					
ANR	4555380	Identifier	escape		4555329	1					
ANR	4555381	ExpressionStatement	S += Data [ i ]	434:2:8785:8797	4555329	1	True				
ANR	4555382	AssignmentExpression	S += Data [ i ]		4555329	0		+=			
ANR	4555383	Identifier	S		4555329	0					
ANR	4555384	ArrayIndexing	Data [ i ]		4555329	1					
ANR	4555385	Identifier	Data		4555329	0					
ANR	4555386	Identifier	i		4555329	1					
ANR	4555387	ReturnStatement	return S ;	438:1:8819:8827	4555329	3	True				
ANR	4555388	Identifier	S		4555329	0					
ANR	4555389	ReturnType	MyString		4555329	1					
ANR	4555390	Identifier	MyString :: EscapeChars		4555329	2					
ANR	4555391	ParameterList	"const MyString & Q , const char escape"		4555329	3					
ANR	4555392	Parameter	const MyString & Q	413:22:8190:8206	4555329	0	True				
ANR	4555393	ParameterType	const MyString &		4555329	0					
ANR	4555394	Identifier	Q		4555329	1					
ANR	4555395	Parameter	const char escape	413:41:8209:8225	4555329	1	True				
ANR	4555396	ParameterType	const char		4555329	0					
ANR	4555397	Identifier	escape		4555329	1					
ANR	4555398	CFGEntryNode	ENTRY		4555329		True				
ANR	4555399	CFGExitNode	EXIT		4555329		True				
ANR	4555400	Symbol	Q		4555329						
ANR	4555401	Symbol	Q . FindChar		4555329						
ANR	4555402	Symbol	S		4555329						
ANR	4555403	Symbol	* i		4555329						
ANR	4555404	Symbol	Len		4555329						
ANR	4555405	Symbol	i		4555329						
ANR	4555406	Symbol	Data		4555329						
ANR	4555407	Symbol	escape		4555329						
ANR	4555408	Symbol	* Data		4555329						
ANR	4555409	Function	MyString :: FindChar	441:0:8832:9057							
ANR	4555410	FunctionDef	"MyString :: FindChar (int Char , int FirstPos)"		4555409	0					
ANR	4555411	CompoundStatement		443:0:8887:9057	4555409	0					
ANR	4555412	IfStatement	if ( ! Data || FirstPos >= Len || FirstPos < 0 )		4555409	0					
ANR	4555413	Condition	! Data || FirstPos >= Len || FirstPos < 0	444:8:8897:8936	4555409	0	True				
ANR	4555414	OrExpression	! Data || FirstPos >= Len || FirstPos < 0		4555409	0		||			
ANR	4555415	UnaryOperationExpression	! Data		4555409	0					
ANR	4555416	UnaryOperator	!		4555409	0					
ANR	4555417	Identifier	Data		4555409	1					
ANR	4555418	OrExpression	FirstPos >= Len || FirstPos < 0		4555409	1		||			
ANR	4555419	RelationalExpression	FirstPos >= Len		4555409	0		>=			
ANR	4555420	Identifier	FirstPos		4555409	0					
ANR	4555421	Identifier	Len		4555409	1					
ANR	4555422	RelationalExpression	FirstPos < 0		4555409	1		<			
ANR	4555423	Identifier	FirstPos		4555409	0					
ANR	4555424	PrimaryExpression	0		4555409	1					
ANR	4555425	CompoundStatement		2:50:51:51	4555409	1					
ANR	4555426	ReturnStatement	return - 1 ;	445:2:8943:8952	4555409	0	True				
ANR	4555427	UnaryOperationExpression	- 1		4555409	0					
ANR	4555428	UnaryOperator	-		4555409	0					
ANR	4555429	PrimaryExpression	1		4555409	1					
ANR	4555430	IdentifierDeclStatement	"char * tmp = strchr ( Data + FirstPos , Char ) ;"	447:4:8961:9002	4555409	1	True				
ANR	4555431	IdentifierDecl	"* tmp = strchr ( Data + FirstPos , Char )"		4555409	0					
ANR	4555432	IdentifierDeclType	char *		4555409	0					
ANR	4555433	Identifier	tmp		4555409	1					
ANR	4555434	AssignmentExpression	"* tmp = strchr ( Data + FirstPos , Char )"		4555409	2		=			
ANR	4555435	Identifier	tmp		4555409	0					
ANR	4555436	CallExpression	"strchr ( Data + FirstPos , Char )"		4555409	1					
ANR	4555437	Callee	strchr		4555409	0					
ANR	4555438	Identifier	strchr		4555409	0					
ANR	4555439	ArgumentList	Data + FirstPos		4555409	1					
ANR	4555440	Argument	Data + FirstPos		4555409	0					
ANR	4555441	AdditiveExpression	Data + FirstPos		4555409	0		+			
ANR	4555442	Identifier	Data		4555409	0					
ANR	4555443	Identifier	FirstPos		4555409	1					
ANR	4555444	Argument	Char		4555409	1					
ANR	4555445	Identifier	Char		4555409	0					
ANR	4555446	IfStatement	if ( ! tmp )		4555409	2					
ANR	4555447	Condition	! tmp	448:8:9012:9015	4555409	0	True				
ANR	4555448	UnaryOperationExpression	! tmp		4555409	0					
ANR	4555449	UnaryOperator	!		4555409	0					
ANR	4555450	Identifier	tmp		4555409	1					
ANR	4555451	CompoundStatement		6:14:130:130	4555409	1					
ANR	4555452	ReturnStatement	return - 1 ;	449:2:9022:9031	4555409	0	True				
ANR	4555453	UnaryOperationExpression	- 1		4555409	0					
ANR	4555454	UnaryOperator	-		4555409	0					
ANR	4555455	PrimaryExpression	1		4555409	1					
ANR	4555456	ReturnStatement	return tmp - Data ;	451:4:9040:9055	4555409	3	True				
ANR	4555457	AdditiveExpression	tmp - Data		4555409	0		-			
ANR	4555458	Identifier	tmp		4555409	0					
ANR	4555459	Identifier	Data		4555409	1					
ANR	4555460	ReturnType	int		4555409	1					
ANR	4555461	Identifier	MyString :: FindChar		4555409	2					
ANR	4555462	ParameterList	"int Char , int FirstPos"		4555409	3					
ANR	4555463	Parameter	int Char	442:19:8856:8863	4555409	0	True				
ANR	4555464	ParameterType	int		4555409	0					
ANR	4555465	Identifier	Char		4555409	1					
ANR	4555466	Parameter	int FirstPos	442:29:8866:8877	4555409	1	True				
ANR	4555467	ParameterType	int		4555409	0					
ANR	4555468	Identifier	FirstPos		4555409	1					
ANR	4555469	CFGEntryNode	ENTRY		4555409		True				
ANR	4555470	CFGExitNode	EXIT		4555409		True				
ANR	4555471	Symbol	Len		4555409						
ANR	4555472	Symbol	Char		4555409						
ANR	4555473	Symbol	tmp		4555409						
ANR	4555474	Symbol	FirstPos		4555409						
ANR	4555475	Symbol	strchr		4555409						
ANR	4555476	Symbol	Data		4555409						
ANR	4555477	Function	MyString :: Hash	454:0:9060:9239							
ANR	4555478	FunctionDef	MyString :: Hash ()		4555477	0					
ANR	4555479	CompoundStatement		456:0:9098:9239	4555477	0					
ANR	4555480	IdentifierDeclStatement	int i ;	457:1:9101:9106	4555477	0	True				
ANR	4555481	IdentifierDecl	i		4555477	0					
ANR	4555482	IdentifierDeclType	int		4555477	0					
ANR	4555483	Identifier	i		4555477	1					
ANR	4555484	IdentifierDeclStatement	unsigned int result = 0 ;	458:1:9109:9132	4555477	1	True				
ANR	4555485	IdentifierDecl	result = 0		4555477	0					
ANR	4555486	IdentifierDeclType	unsigned int		4555477	0					
ANR	4555487	Identifier	result		4555477	1					
ANR	4555488	AssignmentExpression	result = 0		4555477	2		=			
ANR	4555489	Identifier	result		4555477	0					
ANR	4555490	PrimaryExpression	0		4555477	1					
ANR	4555491	ForStatement	for ( i = 0 ; i < Len ; i ++ )		4555477	2					
ANR	4555492	ForInit	i = 0 ;	459:5:9139:9144	4555477	0	True				
ANR	4555493	AssignmentExpression	i = 0		4555477	0		=			
ANR	4555494	Identifier	i		4555477	0					
ANR	4555495	PrimaryExpression	0		4555477	1					
ANR	4555496	Condition	i < Len	459:12:9146:9152	4555477	1	True				
ANR	4555497	RelationalExpression	i < Len		4555477	0		<			
ANR	4555498	Identifier	i		4555477	0					
ANR	4555499	Identifier	Len		4555477	1					
ANR	4555500	PostIncDecOperationExpression	i ++	459:21:9155:9157	4555477	2	True				
ANR	4555501	Identifier	i		4555477	0					
ANR	4555502	IncDec	++		4555477	1					
ANR	4555503	CompoundStatement		4:26:61:61	4555477	3					
ANR	4555504	ExpressionStatement	result = ( result << 5 ) + result + ( unsigned char ) Data [ i ]	460:2:9164:9218	4555477	0	True				
ANR	4555505	AssignmentExpression	result = ( result << 5 ) + result + ( unsigned char ) Data [ i ]		4555477	0		=			
ANR	4555506	Identifier	result		4555477	0					
ANR	4555507	AdditiveExpression	( result << 5 ) + result + ( unsigned char ) Data [ i ]		4555477	1		+			
ANR	4555508	ShiftExpression	result << 5		4555477	0		<<			
ANR	4555509	Identifier	result		4555477	0					
ANR	4555510	PrimaryExpression	5		4555477	1					
ANR	4555511	AdditiveExpression	result + ( unsigned char ) Data [ i ]		4555477	1		+			
ANR	4555512	Identifier	result		4555477	0					
ANR	4555513	CastExpression	( unsigned char ) Data [ i ]		4555477	1					
ANR	4555514	CastTarget	unsigned char		4555477	0					
ANR	4555515	ArrayIndexing	Data [ i ]		4555477	1					
ANR	4555516	Identifier	Data		4555477	0					
ANR	4555517	Identifier	i		4555477	1					
ANR	4555518	ReturnStatement	return result ;	462:1:9224:9237	4555477	3	True				
ANR	4555519	Identifier	result		4555477	0					
ANR	4555520	ReturnType	unsigned int		4555477	1					
ANR	4555521	Identifier	MyString :: Hash		4555477	2					
ANR	4555522	ParameterList			4555477	3					
ANR	4555523	CFGEntryNode	ENTRY		4555477		True				
ANR	4555524	CFGExitNode	EXIT		4555477		True				
ANR	4555525	Symbol	result		4555477						
ANR	4555526	Symbol	* i		4555477						
ANR	4555527	Symbol	Len		4555477						
ANR	4555528	Symbol	i		4555477						
ANR	4555529	Symbol	Data		4555477						
ANR	4555530	Symbol	* Data		4555477						
ANR	4555531	Function	MyString :: find	466:0:9312:9987							
ANR	4555532	FunctionDef	"MyString :: find (const char * pszToFind , int iStartPos)"		4555531	0					
ANR	4555533	CompoundStatement		468:0:9376:9987	4555531	0					
ANR	4555534	ExpressionStatement	ASSERT ( pszToFind != NULL )	469:1:9380:9405	4555531	0	True				
ANR	4555535	CallExpression	ASSERT ( pszToFind != NULL )		4555531	0					
ANR	4555536	Callee	ASSERT		4555531	0					
ANR	4555537	Identifier	ASSERT		4555531	0					
ANR	4555538	ArgumentList	pszToFind != NULL		4555531	1					
ANR	4555539	Argument	pszToFind != NULL		4555531	0					
ANR	4555540	EqualityExpression	pszToFind != NULL		4555531	0		!=			
ANR	4555541	Identifier	pszToFind		4555531	0					
ANR	4555542	Identifier	NULL		4555531	1					
ANR	4555543	IfStatement	if ( pszToFind [ 0 ] == '\\0' )		4555531	1					
ANR	4555544	Condition	pszToFind [ 0 ] == '\\0'	471:5:9413:9432	4555531	0	True				
ANR	4555545	EqualityExpression	pszToFind [ 0 ] == '\\0'		4555531	0		==			
ANR	4555546	ArrayIndexing	pszToFind [ 0 ]		4555531	0					
ANR	4555547	Identifier	pszToFind		4555531	0					
ANR	4555548	PrimaryExpression	0		4555531	1					
ANR	4555549	PrimaryExpression	'\\0'		4555531	1					
ANR	4555550	CompoundStatement		4:27:58:58	4555531	1					
ANR	4555551	ReturnStatement	return 0 ;	479:2:9783:9791	4555531	0	True				
ANR	4555552	PrimaryExpression	0		4555531	0					
ANR	4555553	IfStatement	if ( ! Data || iStartPos >= Len || iStartPos < 0 )		4555531	2					
ANR	4555554	Condition	! Data || iStartPos >= Len || iStartPos < 0	482:5:9802:9843	4555531	0	True				
ANR	4555555	OrExpression	! Data || iStartPos >= Len || iStartPos < 0		4555531	0		||			
ANR	4555556	UnaryOperationExpression	! Data		4555531	0					
ANR	4555557	UnaryOperator	!		4555531	0					
ANR	4555558	Identifier	Data		4555531	1					
ANR	4555559	OrExpression	iStartPos >= Len || iStartPos < 0		4555531	1		||			
ANR	4555560	RelationalExpression	iStartPos >= Len		4555531	0		>=			
ANR	4555561	Identifier	iStartPos		4555531	0					
ANR	4555562	Identifier	Len		4555531	1					
ANR	4555563	RelationalExpression	iStartPos < 0		4555531	1		<			
ANR	4555564	Identifier	iStartPos		4555531	0					
ANR	4555565	PrimaryExpression	0		4555531	1					
ANR	4555566	CompoundStatement		15:49:469:469	4555531	1					
ANR	4555567	ReturnStatement	return - 1 ;	483:2:9850:9859	4555531	0	True				
ANR	4555568	UnaryOperationExpression	- 1		4555531	0					
ANR	4555569	UnaryOperator	-		4555531	0					
ANR	4555570	PrimaryExpression	1		4555531	1					
ANR	4555571	IdentifierDeclStatement	"const char * pszFound = strstr ( Data + iStartPos , pszToFind ) ;"	486:1:9866:9924	4555531	3	True				
ANR	4555572	IdentifierDecl	"* pszFound = strstr ( Data + iStartPos , pszToFind )"		4555531	0					
ANR	4555573	IdentifierDeclType	const char *		4555531	0					
ANR	4555574	Identifier	pszFound		4555531	1					
ANR	4555575	AssignmentExpression	"* pszFound = strstr ( Data + iStartPos , pszToFind )"		4555531	2		=			
ANR	4555576	Identifier	pszFound		4555531	0					
ANR	4555577	CallExpression	"strstr ( Data + iStartPos , pszToFind )"		4555531	1					
ANR	4555578	Callee	strstr		4555531	0					
ANR	4555579	Identifier	strstr		4555531	0					
ANR	4555580	ArgumentList	Data + iStartPos		4555531	1					
ANR	4555581	Argument	Data + iStartPos		4555531	0					
ANR	4555582	AdditiveExpression	Data + iStartPos		4555531	0		+			
ANR	4555583	Identifier	Data		4555531	0					
ANR	4555584	Identifier	iStartPos		4555531	1					
ANR	4555585	Argument	pszToFind		4555531	1					
ANR	4555586	Identifier	pszToFind		4555531	0					
ANR	4555587	IfStatement	if ( ! pszFound )		4555531	4					
ANR	4555588	Condition	! pszFound	488:5:9932:9940	4555531	0	True				
ANR	4555589	UnaryOperationExpression	! pszFound		4555531	0					
ANR	4555590	UnaryOperator	!		4555531	0					
ANR	4555591	Identifier	pszFound		4555531	1					
ANR	4555592	CompoundStatement		21:16:566:566	4555531	1					
ANR	4555593	ReturnStatement	return - 1 ;	489:2:9947:9956	4555531	0	True				
ANR	4555594	UnaryOperationExpression	- 1		4555531	0					
ANR	4555595	UnaryOperator	-		4555531	0					
ANR	4555596	PrimaryExpression	1		4555531	1					
ANR	4555597	ReturnStatement	return pszFound - Data ;	492:1:9963:9985	4555531	5	True				
ANR	4555598	AdditiveExpression	pszFound - Data		4555531	0		-			
ANR	4555599	Identifier	pszFound		4555531	0					
ANR	4555600	Identifier	Data		4555531	1					
ANR	4555601	ReturnType	int		4555531	1					
ANR	4555602	Identifier	MyString :: find		4555531	2					
ANR	4555603	ParameterList	"const char * pszToFind , int iStartPos"		4555531	3					
ANR	4555604	Parameter	const char * pszToFind	467:15:9332:9352	4555531	0	True				
ANR	4555605	ParameterType	const char *		4555531	0					
ANR	4555606	Identifier	pszToFind		4555531	1					
ANR	4555607	Parameter	int iStartPos	467:38:9355:9367	4555531	1	True				
ANR	4555608	ParameterType	int		4555531	0					
ANR	4555609	Identifier	iStartPos		4555531	1					
ANR	4555610	CFGEntryNode	ENTRY		4555531		True				
ANR	4555611	CFGExitNode	EXIT		4555531		True				
ANR	4555612	Symbol	iStartPos		4555531						
ANR	4555613	Symbol	NULL		4555531						
ANR	4555614	Symbol	Len		4555531						
ANR	4555615	Symbol	pszFound		4555531						
ANR	4555616	Symbol	strstr		4555531						
ANR	4555617	Symbol	Data		4555531						
ANR	4555618	Symbol	* pszToFind		4555531						
ANR	4555619	Symbol	pszToFind		4555531						
ANR	4555620	Function	MyString :: replaceString	495:0:9992:11310							
ANR	4555621	FunctionDef	"MyString :: replaceString (const char * pszToReplace , const char * pszReplaceWith , int iStartFromPos)"		4555620	0					
ANR	4555622	CompoundStatement		500:0:10102:11310	4555620	0					
ANR	4555623	IdentifierDeclStatement	SimpleList < int > listMatchesFound ;	501:1:10105:10137	4555620	0	True				
ANR	4555624	IdentifierDecl	listMatchesFound		4555620	0					
ANR	4555625	IdentifierDeclType	SimpleList < int >		4555620	0					
ANR	4555626	Identifier	listMatchesFound		4555620	1					
ANR	4555627	IdentifierDeclStatement	int iToReplaceLen = strlen ( pszToReplace ) ;	503:1:10145:10185	4555620	1	True				
ANR	4555628	IdentifierDecl	iToReplaceLen = strlen ( pszToReplace )		4555620	0					
ANR	4555629	IdentifierDeclType	int		4555620	0					
ANR	4555630	Identifier	iToReplaceLen		4555620	1					
ANR	4555631	AssignmentExpression	iToReplaceLen = strlen ( pszToReplace )		4555620	2		=			
ANR	4555632	Identifier	iToReplaceLen		4555620	0					
ANR	4555633	CallExpression	strlen ( pszToReplace )		4555620	1					
ANR	4555634	Callee	strlen		4555620	0					
ANR	4555635	Identifier	strlen		4555620	0					
ANR	4555636	ArgumentList	pszToReplace		4555620	1					
ANR	4555637	Argument	pszToReplace		4555620	0					
ANR	4555638	Identifier	pszToReplace		4555620	0					
ANR	4555639	IfStatement	if ( ! iToReplaceLen )		4555620	2					
ANR	4555640	Condition	! iToReplaceLen	504:5:10192:10205	4555620	0	True				
ANR	4555641	UnaryOperationExpression	! iToReplaceLen		4555620	0					
ANR	4555642	UnaryOperator	!		4555620	0					
ANR	4555643	Identifier	iToReplaceLen		4555620	1					
ANR	4555644	CompoundStatement		5:21:105:105	4555620	1					
ANR	4555645	ReturnStatement	return false ;	505:2:10212:10224	4555620	0	True				
ANR	4555646	Identifier	false		4555620	0					
ANR	4555647	IdentifierDeclStatement	int iWithLen = strlen ( pszReplaceWith ) ;	508:1:10232:10269	4555620	3	True				
ANR	4555648	IdentifierDecl	iWithLen = strlen ( pszReplaceWith )		4555620	0					
ANR	4555649	IdentifierDeclType	int		4555620	0					
ANR	4555650	Identifier	iWithLen		4555620	1					
ANR	4555651	AssignmentExpression	iWithLen = strlen ( pszReplaceWith )		4555620	2		=			
ANR	4555652	Identifier	iWithLen		4555620	0					
ANR	4555653	CallExpression	strlen ( pszReplaceWith )		4555620	1					
ANR	4555654	Callee	strlen		4555620	0					
ANR	4555655	Identifier	strlen		4555620	0					
ANR	4555656	ArgumentList	pszReplaceWith		4555620	1					
ANR	4555657	Argument	pszReplaceWith		4555620	0					
ANR	4555658	Identifier	pszReplaceWith		4555620	0					
ANR	4555659	WhileStatement	while ( iStartFromPos <= Len )		4555620	4					
ANR	4555660	Condition	iStartFromPos <= Len	509:8:10279:10298	4555620	0	True				
ANR	4555661	RelationalExpression	iStartFromPos <= Len		4555620	0		<=			
ANR	4555662	Identifier	iStartFromPos		4555620	0					
ANR	4555663	Identifier	Len		4555620	1					
ANR	4555664	CompoundStatement		10:29:197:197	4555620	1					
ANR	4555665	ExpressionStatement	"iStartFromPos = find ( pszToReplace , iStartFromPos )"	510:2:10304:10353	4555620	0	True				
ANR	4555666	AssignmentExpression	"iStartFromPos = find ( pszToReplace , iStartFromPos )"		4555620	0		=			
ANR	4555667	Identifier	iStartFromPos		4555620	0					
ANR	4555668	CallExpression	"find ( pszToReplace , iStartFromPos )"		4555620	1					
ANR	4555669	Callee	find		4555620	0					
ANR	4555670	Identifier	find		4555620	0					
ANR	4555671	ArgumentList	pszToReplace		4555620	1					
ANR	4555672	Argument	pszToReplace		4555620	0					
ANR	4555673	Identifier	pszToReplace		4555620	0					
ANR	4555674	Argument	iStartFromPos		4555620	1					
ANR	4555675	Identifier	iStartFromPos		4555620	0					
ANR	4555676	IfStatement	if ( iStartFromPos == - 1 )		4555620	1					
ANR	4555677	Condition	iStartFromPos == - 1	511:6:10361:10379	4555620	0	True				
ANR	4555678	EqualityExpression	iStartFromPos == - 1		4555620	0		==			
ANR	4555679	Identifier	iStartFromPos		4555620	0					
ANR	4555680	UnaryOperationExpression	- 1		4555620	1					
ANR	4555681	UnaryOperator	-		4555620	0					
ANR	4555682	PrimaryExpression	1		4555620	1					
ANR	4555683	BreakStatement	break ;	512:3:10385:10390	4555620	1	True				
ANR	4555684	ExpressionStatement	listMatchesFound . Append ( iStartFromPos )	513:2:10394:10432	4555620	2	True				
ANR	4555685	CallExpression	listMatchesFound . Append ( iStartFromPos )		4555620	0					
ANR	4555686	Callee	listMatchesFound . Append		4555620	0					
ANR	4555687	MemberAccess	listMatchesFound . Append		4555620	0					
ANR	4555688	Identifier	listMatchesFound		4555620	0					
ANR	4555689	Identifier	Append		4555620	1					
ANR	4555690	ArgumentList	iStartFromPos		4555620	1					
ANR	4555691	Argument	iStartFromPos		4555620	0					
ANR	4555692	Identifier	iStartFromPos		4555620	0					
ANR	4555693	ExpressionStatement	iStartFromPos += iToReplaceLen	514:2:10436:10466	4555620	3	True				
ANR	4555694	AssignmentExpression	iStartFromPos += iToReplaceLen		4555620	0		+=			
ANR	4555695	Identifier	iStartFromPos		4555620	0					
ANR	4555696	Identifier	iToReplaceLen		4555620	1					
ANR	4555697	IfStatement	if ( ! listMatchesFound . Number ( ) )		4555620	5					
ANR	4555698	Condition	! listMatchesFound . Number ( )	516:5:10476:10501	4555620	0	True				
ANR	4555699	UnaryOperationExpression	! listMatchesFound . Number ( )		4555620	0					
ANR	4555700	UnaryOperator	!		4555620	0					
ANR	4555701	CallExpression	listMatchesFound . Number ( )		4555620	1					
ANR	4555702	Callee	listMatchesFound . Number		4555620	0					
ANR	4555703	MemberAccess	listMatchesFound . Number		4555620	0					
ANR	4555704	Identifier	listMatchesFound		4555620	0					
ANR	4555705	Identifier	Number		4555620	1					
ANR	4555706	ArgumentList			4555620	1					
ANR	4555707	ReturnStatement	return false ;	517:2:10506:10518	4555620	1	True				
ANR	4555708	Identifier	false		4555620	0					
ANR	4555709	IdentifierDeclStatement	int iLenDifPerMatch = iWithLen - iToReplaceLen ;	519:1:10523:10569	4555620	6	True				
ANR	4555710	IdentifierDecl	iLenDifPerMatch = iWithLen - iToReplaceLen		4555620	0					
ANR	4555711	IdentifierDeclType	int		4555620	0					
ANR	4555712	Identifier	iLenDifPerMatch		4555620	1					
ANR	4555713	AssignmentExpression	iLenDifPerMatch = iWithLen - iToReplaceLen		4555620	2		=			
ANR	4555714	Identifier	iLenDifPerMatch		4555620	0					
ANR	4555715	AdditiveExpression	iWithLen - iToReplaceLen		4555620	1		-			
ANR	4555716	Identifier	iWithLen		4555620	0					
ANR	4555717	Identifier	iToReplaceLen		4555620	1					
ANR	4555718	IdentifierDeclStatement	int iNewLen = Len + iLenDifPerMatch * listMatchesFound . Number ( ) ;	520:1:10572:10635	4555620	7	True				
ANR	4555719	IdentifierDecl	iNewLen = Len + iLenDifPerMatch * listMatchesFound . Number ( )		4555620	0					
ANR	4555720	IdentifierDeclType	int		4555620	0					
ANR	4555721	Identifier	iNewLen		4555620	1					
ANR	4555722	AssignmentExpression	iNewLen = Len + iLenDifPerMatch * listMatchesFound . Number ( )		4555620	2		=			
ANR	4555723	Identifier	iNewLen		4555620	0					
ANR	4555724	AdditiveExpression	Len + iLenDifPerMatch * listMatchesFound . Number ( )		4555620	1		+			
ANR	4555725	Identifier	Len		4555620	0					
ANR	4555726	MultiplicativeExpression	iLenDifPerMatch * listMatchesFound . Number ( )		4555620	1		*			
ANR	4555727	Identifier	iLenDifPerMatch		4555620	0					
ANR	4555728	CallExpression	listMatchesFound . Number ( )		4555620	1					
ANR	4555729	Callee	listMatchesFound . Number		4555620	0					
ANR	4555730	MemberAccess	listMatchesFound . Number		4555620	0					
ANR	4555731	Identifier	listMatchesFound		4555620	0					
ANR	4555732	Identifier	Number		4555620	1					
ANR	4555733	ArgumentList			4555620	1					
ANR	4555734	IdentifierDeclStatement	char * pNewData = new char [ iNewLen + 1 ] ;	521:1:10638:10674	4555620	8	True				
ANR	4555735	IdentifierDecl	* pNewData = new char [ iNewLen + 1 ]		4555620	0					
ANR	4555736	IdentifierDeclType	char *		4555620	0					
ANR	4555737	Identifier	pNewData		4555620	1					
ANR	4555738	AssignmentExpression	* pNewData = new char [ iNewLen + 1 ]		4555620	2		=			
ANR	4555739	Identifier	pNewData		4555620	0					
ANR	4555740	AdditiveExpression	iNewLen + 1		4555620	1		+			
ANR	4555741	Identifier	iNewLen		4555620	0					
ANR	4555742	PrimaryExpression	1		4555620	1					
ANR	4555743	IdentifierDeclStatement	int iItemStartInData ;	523:1:10680:10700	4555620	9	True				
ANR	4555744	IdentifierDecl	iItemStartInData		4555620	0					
ANR	4555745	IdentifierDeclType	int		4555620	0					
ANR	4555746	Identifier	iItemStartInData		4555620	1					
ANR	4555747	IdentifierDeclStatement	int iPosInNewData = 0 ;	524:1:10703:10724	4555620	10	True				
ANR	4555748	IdentifierDecl	iPosInNewData = 0		4555620	0					
ANR	4555749	IdentifierDeclType	int		4555620	0					
ANR	4555750	Identifier	iPosInNewData		4555620	1					
ANR	4555751	AssignmentExpression	iPosInNewData = 0		4555620	2		=			
ANR	4555752	Identifier	iPosInNewData		4555620	0					
ANR	4555753	PrimaryExpression	0		4555620	1					
ANR	4555754	IdentifierDeclStatement	int iPreviousEnd = 0 ;	525:1:10727:10747	4555620	11	True				
ANR	4555755	IdentifierDecl	iPreviousEnd = 0		4555620	0					
ANR	4555756	IdentifierDeclType	int		4555620	0					
ANR	4555757	Identifier	iPreviousEnd		4555620	1					
ANR	4555758	AssignmentExpression	iPreviousEnd = 0		4555620	2		=			
ANR	4555759	Identifier	iPreviousEnd		4555620	0					
ANR	4555760	PrimaryExpression	0		4555620	1					
ANR	4555761	ExpressionStatement	listMatchesFound . Rewind ( )	526:1:10750:10775	4555620	12	True				
ANR	4555762	CallExpression	listMatchesFound . Rewind ( )		4555620	0					
ANR	4555763	Callee	listMatchesFound . Rewind		4555620	0					
ANR	4555764	MemberAccess	listMatchesFound . Rewind		4555620	0					
ANR	4555765	Identifier	listMatchesFound		4555620	0					
ANR	4555766	Identifier	Rewind		4555620	1					
ANR	4555767	ArgumentList			4555620	1					
ANR	4555768	WhileStatement	while ( listMatchesFound . Next ( iItemStartInData ) )		4555620	13					
ANR	4555769	Condition	listMatchesFound . Next ( iItemStartInData )	527:7:10784:10822	4555620	0	True				
ANR	4555770	CallExpression	listMatchesFound . Next ( iItemStartInData )		4555620	0					
ANR	4555771	Callee	listMatchesFound . Next		4555620	0					
ANR	4555772	MemberAccess	listMatchesFound . Next		4555620	0					
ANR	4555773	Identifier	listMatchesFound		4555620	0					
ANR	4555774	Identifier	Next		4555620	1					
ANR	4555775	ArgumentList	iItemStartInData		4555620	1					
ANR	4555776	Argument	iItemStartInData		4555620	0					
ANR	4555777	Identifier	iItemStartInData		4555620	0					
ANR	4555778	CompoundStatement		28:48:722:722	4555620	1					
ANR	4555779	ExpressionStatement	"memcpy ( pNewData + iPosInNewData , Data + iPreviousEnd , iItemStartInData - iPreviousEnd )"	528:2:10829:10929	4555620	0	True				
ANR	4555780	CallExpression	"memcpy ( pNewData + iPosInNewData , Data + iPreviousEnd , iItemStartInData - iPreviousEnd )"		4555620	0					
ANR	4555781	Callee	memcpy		4555620	0					
ANR	4555782	Identifier	memcpy		4555620	0					
ANR	4555783	ArgumentList	pNewData + iPosInNewData		4555620	1					
ANR	4555784	Argument	pNewData + iPosInNewData		4555620	0					
ANR	4555785	AdditiveExpression	pNewData + iPosInNewData		4555620	0		+			
ANR	4555786	Identifier	pNewData		4555620	0					
ANR	4555787	Identifier	iPosInNewData		4555620	1					
ANR	4555788	Argument	Data + iPreviousEnd		4555620	1					
ANR	4555789	AdditiveExpression	Data + iPreviousEnd		4555620	0		+			
ANR	4555790	Identifier	Data		4555620	0					
ANR	4555791	Identifier	iPreviousEnd		4555620	1					
ANR	4555792	Argument	iItemStartInData - iPreviousEnd		4555620	2					
ANR	4555793	AdditiveExpression	iItemStartInData - iPreviousEnd		4555620	0		-			
ANR	4555794	Identifier	iItemStartInData		4555620	0					
ANR	4555795	Identifier	iPreviousEnd		4555620	1					
ANR	4555796	ExpressionStatement	iPosInNewData += ( iItemStartInData - iPreviousEnd )	531:2:10933:10983	4555620	1	True				
ANR	4555797	AssignmentExpression	iPosInNewData += ( iItemStartInData - iPreviousEnd )		4555620	0		+=			
ANR	4555798	Identifier	iPosInNewData		4555620	0					
ANR	4555799	AdditiveExpression	iItemStartInData - iPreviousEnd		4555620	1		-			
ANR	4555800	Identifier	iItemStartInData		4555620	0					
ANR	4555801	Identifier	iPreviousEnd		4555620	1					
ANR	4555802	ExpressionStatement	"memcpy ( pNewData + iPosInNewData , pszReplaceWith , iWithLen )"	532:2:10987:11045	4555620	2	True				
ANR	4555803	CallExpression	"memcpy ( pNewData + iPosInNewData , pszReplaceWith , iWithLen )"		4555620	0					
ANR	4555804	Callee	memcpy		4555620	0					
ANR	4555805	Identifier	memcpy		4555620	0					
ANR	4555806	ArgumentList	pNewData + iPosInNewData		4555620	1					
ANR	4555807	Argument	pNewData + iPosInNewData		4555620	0					
ANR	4555808	AdditiveExpression	pNewData + iPosInNewData		4555620	0		+			
ANR	4555809	Identifier	pNewData		4555620	0					
ANR	4555810	Identifier	iPosInNewData		4555620	1					
ANR	4555811	Argument	pszReplaceWith		4555620	1					
ANR	4555812	Identifier	pszReplaceWith		4555620	0					
ANR	4555813	Argument	iWithLen		4555620	2					
ANR	4555814	Identifier	iWithLen		4555620	0					
ANR	4555815	ExpressionStatement	iPosInNewData += iWithLen	533:2:11049:11074	4555620	3	True				
ANR	4555816	AssignmentExpression	iPosInNewData += iWithLen		4555620	0		+=			
ANR	4555817	Identifier	iPosInNewData		4555620	0					
ANR	4555818	Identifier	iWithLen		4555620	1					
ANR	4555819	ExpressionStatement	iPreviousEnd = iItemStartInData + iToReplaceLen	534:2:11078:11125	4555620	4	True				
ANR	4555820	AssignmentExpression	iPreviousEnd = iItemStartInData + iToReplaceLen		4555620	0		=			
ANR	4555821	Identifier	iPreviousEnd		4555620	0					
ANR	4555822	AdditiveExpression	iItemStartInData + iToReplaceLen		4555620	1		+			
ANR	4555823	Identifier	iItemStartInData		4555620	0					
ANR	4555824	Identifier	iToReplaceLen		4555620	1					
ANR	4555825	ExpressionStatement	"memcpy ( pNewData + iPosInNewData , Data + iPreviousEnd , Len - iPreviousEnd + 1 )"	536:1:11131:11220	4555620	14	True				
ANR	4555826	CallExpression	"memcpy ( pNewData + iPosInNewData , Data + iPreviousEnd , Len - iPreviousEnd + 1 )"		4555620	0					
ANR	4555827	Callee	memcpy		4555620	0					
ANR	4555828	Identifier	memcpy		4555620	0					
ANR	4555829	ArgumentList	pNewData + iPosInNewData		4555620	1					
ANR	4555830	Argument	pNewData + iPosInNewData		4555620	0					
ANR	4555831	AdditiveExpression	pNewData + iPosInNewData		4555620	0		+			
ANR	4555832	Identifier	pNewData		4555620	0					
ANR	4555833	Identifier	iPosInNewData		4555620	1					
ANR	4555834	Argument	Data + iPreviousEnd		4555620	1					
ANR	4555835	AdditiveExpression	Data + iPreviousEnd		4555620	0		+			
ANR	4555836	Identifier	Data		4555620	0					
ANR	4555837	Identifier	iPreviousEnd		4555620	1					
ANR	4555838	Argument	Len - iPreviousEnd + 1		4555620	2					
ANR	4555839	AdditiveExpression	Len - iPreviousEnd + 1		4555620	0		-			
ANR	4555840	Identifier	Len		4555620	0					
ANR	4555841	AdditiveExpression	iPreviousEnd + 1		4555620	1		+			
ANR	4555842	Identifier	iPreviousEnd		4555620	0					
ANR	4555843	PrimaryExpression	1		4555620	1					
ANR	4555844	Statement	delete	539:1:11223:11228	4555620	15	True				
ANR	4555845	Statement	[	539:8:11230:11230	4555620	16	True				
ANR	4555846	Statement	]	539:9:11231:11231	4555620	17	True				
ANR	4555847	ExpressionStatement	Data	539:11:11233:11237	4555620	18	True				
ANR	4555848	Identifier	Data		4555620	0					
ANR	4555849	ExpressionStatement	Data = pNewData	540:1:11240:11255	4555620	19	True				
ANR	4555850	AssignmentExpression	Data = pNewData		4555620	0		=			
ANR	4555851	Identifier	Data		4555620	0					
ANR	4555852	Identifier	pNewData		4555620	1					
ANR	4555853	ExpressionStatement	capacity = iNewLen	541:1:11258:11276	4555620	20	True				
ANR	4555854	AssignmentExpression	capacity = iNewLen		4555620	0		=			
ANR	4555855	Identifier	capacity		4555620	0					
ANR	4555856	Identifier	iNewLen		4555620	1					
ANR	4555857	ExpressionStatement	Len = iNewLen	542:1:11279:11292	4555620	21	True				
ANR	4555858	AssignmentExpression	Len = iNewLen		4555620	0		=			
ANR	4555859	Identifier	Len		4555620	0					
ANR	4555860	Identifier	iNewLen		4555620	1					
ANR	4555861	ReturnStatement	return true ;	544:1:11297:11308	4555620	22	True				
ANR	4555862	Identifier	true		4555620	0					
ANR	4555863	ReturnType	bool		4555620	1					
ANR	4555864	Identifier	MyString :: replaceString		4555620	2					
ANR	4555865	ParameterList	"const char * pszToReplace , const char * pszReplaceWith , int iStartFromPos"		4555620	3					
ANR	4555866	Parameter	const char * pszToReplace	497:1:10024:10047	4555620	0	True				
ANR	4555867	ParameterType	const char *		4555620	0					
ANR	4555868	Identifier	pszToReplace		4555620	1					
ANR	4555869	Parameter	const char * pszReplaceWith	498:1:10052:10077	4555620	1	True				
ANR	4555870	ParameterType	const char *		4555620	0					
ANR	4555871	Identifier	pszReplaceWith		4555620	1					
ANR	4555872	Parameter	int iStartFromPos	499:1:10082:10098	4555620	2	True				
ANR	4555873	ParameterType	int		4555620	0					
ANR	4555874	Identifier	iStartFromPos		4555620	1					
ANR	4555875	CFGEntryNode	ENTRY		4555620		True				
ANR	4555876	CFGExitNode	EXIT		4555620		True				
ANR	4555877	Symbol	iPosInNewData		4555620						
ANR	4555878	Symbol	iToReplaceLen		4555620						
ANR	4555879	Symbol	pszToReplace		4555620						
ANR	4555880	Symbol	false		4555620						
ANR	4555881	Symbol	iStartFromPos		4555620						
ANR	4555882	Symbol	listMatchesFound . Next		4555620						
ANR	4555883	Symbol	pNewData		4555620						
ANR	4555884	Symbol	iPreviousEnd		4555620						
ANR	4555885	Symbol	Data		4555620						
ANR	4555886	Symbol	capacity		4555620						
ANR	4555887	Symbol	iNewLen		4555620						
ANR	4555888	Symbol	strlen		4555620						
ANR	4555889	Symbol	Len		4555620						
ANR	4555890	Symbol	listMatchesFound . Number		4555620						
ANR	4555891	Symbol	listMatchesFound		4555620						
ANR	4555892	Symbol	find		4555620						
ANR	4555893	Symbol	pszReplaceWith		4555620						
ANR	4555894	Symbol	true		4555620						
ANR	4555895	Symbol	iLenDifPerMatch		4555620						
ANR	4555896	Symbol	iItemStartInData		4555620						
ANR	4555897	Symbol	iWithLen		4555620						
ANR	4555898	Function	MyString :: vsprintf_cat	547:0:11313:12088							
ANR	4555899	FunctionDef	"MyString :: vsprintf_cat (const char * format , va_list args)"		4555898	0					
ANR	4555900	CompoundStatement		549:0:11375:12088	4555898	0					
ANR	4555901	IdentifierDeclStatement	char * buffer = NULL ;	550:1:11378:11397	4555898	0	True				
ANR	4555902	IdentifierDecl	* buffer = NULL		4555898	0					
ANR	4555903	IdentifierDeclType	char *		4555898	0					
ANR	4555904	Identifier	buffer		4555898	1					
ANR	4555905	AssignmentExpression	* buffer = NULL		4555898	2		=			
ANR	4555906	Identifier	NULL		4555898	0					
ANR	4555907	Identifier	NULL		4555898	1					
ANR	4555908	IdentifierDeclStatement	int s_len ;	551:1:11400:11409	4555898	1	True				
ANR	4555909	IdentifierDecl	s_len		4555898	0					
ANR	4555910	IdentifierDeclType	int		4555898	0					
ANR	4555911	Identifier	s_len		4555898	1					
ANR	4555912	IfStatement	if ( ! format || * format == '\\0' )		4555898	2					
ANR	4555913	Condition	! format || * format == '\\0'	553:8:11420:11445	4555898	0	True				
ANR	4555914	OrExpression	! format || * format == '\\0'		4555898	0		||			
ANR	4555915	UnaryOperationExpression	! format		4555898	0					
ANR	4555916	UnaryOperator	!		4555898	0					
ANR	4555917	Identifier	format		4555898	1					
ANR	4555918	EqualityExpression	* format == '\\0'		4555898	1		==			
ANR	4555919	UnaryOperationExpression	* format		4555898	0					
ANR	4555920	UnaryOperator	*		4555898	0					
ANR	4555921	Identifier	format		4555898	1					
ANR	4555922	PrimaryExpression	'\\0'		4555898	1					
ANR	4555923	CompoundStatement		5:37:73:73	4555898	1					
ANR	4555924	ReturnStatement	return true ;	554:2:11453:11464	4555898	0	True				
ANR	4555925	Identifier	true		4555898	0					
ANR	4555926	ExpressionStatement	"s_len = vasprintf ( & buffer , format , args )"	557:1:11492:11532	4555898	3	True				
ANR	4555927	AssignmentExpression	"s_len = vasprintf ( & buffer , format , args )"		4555898	0		=			
ANR	4555928	Identifier	s_len		4555898	0					
ANR	4555929	CallExpression	"vasprintf ( & buffer , format , args )"		4555898	1					
ANR	4555930	Callee	vasprintf		4555898	0					
ANR	4555931	Identifier	vasprintf		4555898	0					
ANR	4555932	ArgumentList	& buffer		4555898	1					
ANR	4555933	Argument	& buffer		4555898	0					
ANR	4555934	UnaryOperationExpression	& buffer		4555898	0					
ANR	4555935	UnaryOperator	&		4555898	0					
ANR	4555936	Identifier	buffer		4555898	1					
ANR	4555937	Argument	format		4555898	1					
ANR	4555938	Identifier	format		4555898	0					
ANR	4555939	Argument	args		4555898	2					
ANR	4555940	Identifier	args		4555898	0					
ANR	4555941	IfStatement	if ( - 1 == s_len )		4555898	4					
ANR	4555942	Condition	- 1 == s_len	558:5:11539:11549	4555898	0	True				
ANR	4555943	EqualityExpression	- 1 == s_len		4555898	0		==			
ANR	4555944	UnaryOperationExpression	- 1		4555898	0					
ANR	4555945	UnaryOperator	-		4555898	0					
ANR	4555946	PrimaryExpression	1		4555898	1					
ANR	4555947	Identifier	s_len		4555898	1					
ANR	4555948	CompoundStatement		10:18:176:176	4555898	1					
ANR	4555949	ReturnStatement	return false ;	559:2:11596:11608	4555898	0	True				
ANR	4555950	Identifier	false		4555898	0					
ANR	4555951	IfStatement	if ( Len + s_len > capacity || ! Data )		4555898	5					
ANR	4555952	Condition	Len + s_len > capacity || ! Data	564:8:11675:11705	4555898	0	True				
ANR	4555953	OrExpression	Len + s_len > capacity || ! Data		4555898	0		||			
ANR	4555954	RelationalExpression	Len + s_len > capacity		4555898	0		>			
ANR	4555955	AdditiveExpression	Len + s_len		4555898	0		+			
ANR	4555956	Identifier	Len		4555898	0					
ANR	4555957	Identifier	s_len		4555898	1					
ANR	4555958	Identifier	capacity		4555898	1					
ANR	4555959	UnaryOperationExpression	! Data		4555898	1					
ANR	4555960	UnaryOperator	!		4555898	0					
ANR	4555961	Identifier	Data		4555898	1					
ANR	4555962	CompoundStatement		16:42:333:333	4555898	1					
ANR	4555963	IfStatement	if ( ! reserve_at_least ( Len + s_len ) )		4555898	0					
ANR	4555964	Condition	! reserve_at_least ( Len + s_len )	565:5:11716:11747	4555898	0	True				
ANR	4555965	UnaryOperationExpression	! reserve_at_least ( Len + s_len )		4555898	0					
ANR	4555966	UnaryOperator	!		4555898	0					
ANR	4555967	CallExpression	reserve_at_least ( Len + s_len )		4555898	1					
ANR	4555968	Callee	reserve_at_least		4555898	0					
ANR	4555969	Identifier	reserve_at_least		4555898	0					
ANR	4555970	ArgumentList	Len + s_len		4555898	1					
ANR	4555971	Argument	Len + s_len		4555898	0					
ANR	4555972	AdditiveExpression	Len + s_len		4555898	0		+			
ANR	4555973	Identifier	Len		4555898	0					
ANR	4555974	Identifier	s_len		4555898	1					
ANR	4555975	CompoundStatement		17:39:374:374	4555898	1					
ANR	4555976	ExpressionStatement	free ( buffer )	566:3:11755:11767	4555898	0	True				
ANR	4555977	CallExpression	free ( buffer )		4555898	0					
ANR	4555978	Callee	free		4555898	0					
ANR	4555979	Identifier	free		4555898	0					
ANR	4555980	ArgumentList	buffer		4555898	1					
ANR	4555981	Argument	buffer		4555898	0					
ANR	4555982	Identifier	buffer		4555898	0					
ANR	4555983	ReturnStatement	return false ;	567:3:11772:11784	4555898	1	True				
ANR	4555984	Identifier	false		4555898	0					
ANR	4555985	ExpressionStatement	"memcpy ( Data + Len , buffer , s_len + 1 )"	574:1:11950:11987	4555898	6	True				
ANR	4555986	CallExpression	"memcpy ( Data + Len , buffer , s_len + 1 )"		4555898	0					
ANR	4555987	Callee	memcpy		4555898	0					
ANR	4555988	Identifier	memcpy		4555898	0					
ANR	4555989	ArgumentList	Data + Len		4555898	1					
ANR	4555990	Argument	Data + Len		4555898	0					
ANR	4555991	AdditiveExpression	Data + Len		4555898	0		+			
ANR	4555992	Identifier	Data		4555898	0					
ANR	4555993	Identifier	Len		4555898	1					
ANR	4555994	Argument	buffer		4555898	1					
ANR	4555995	Identifier	buffer		4555898	0					
ANR	4555996	Argument	s_len + 1		4555898	2					
ANR	4555997	AdditiveExpression	s_len + 1		4555898	0		+			
ANR	4555998	Identifier	s_len		4555898	0					
ANR	4555999	PrimaryExpression	1		4555898	1					
ANR	4556000	ExpressionStatement	free ( buffer )	575:1:11990:12002	4555898	7	True				
ANR	4556001	CallExpression	free ( buffer )		4555898	0					
ANR	4556002	Callee	free		4555898	0					
ANR	4556003	Identifier	free		4555898	0					
ANR	4556004	ArgumentList	buffer		4555898	1					
ANR	4556005	Argument	buffer		4555898	0					
ANR	4556006	Identifier	buffer		4555898	0					
ANR	4556007	ExpressionStatement	Len += s_len	579:1:12057:12069	4555898	8	True				
ANR	4556008	AssignmentExpression	Len += s_len		4555898	0		+=			
ANR	4556009	Identifier	Len		4555898	0					
ANR	4556010	Identifier	s_len		4555898	1					
ANR	4556011	ReturnStatement	return true ;	580:4:12075:12086	4555898	9	True				
ANR	4556012	Identifier	true		4555898	0					
ANR	4556013	ReturnType	bool		4555898	1					
ANR	4556014	Identifier	MyString :: vsprintf_cat		4555898	2					
ANR	4556015	ParameterList	"const char * format , va_list args"		4555898	3					
ANR	4556016	Parameter	const char * format	548:23:11341:11358	4555898	0	True				
ANR	4556017	ParameterType	const char *		4555898	0					
ANR	4556018	Identifier	format		4555898	1					
ANR	4556019	Parameter	va_list args	548:42:11360:11371	4555898	1	True				
ANR	4556020	ParameterType	va_list		4555898	0					
ANR	4556021	Identifier	args		4555898	1					
ANR	4556022	CFGEntryNode	ENTRY		4555898		True				
ANR	4556023	CFGExitNode	EXIT		4555898		True				
ANR	4556024	Symbol	reserve_at_least		4555898						
ANR	4556025	Symbol	vasprintf		4555898						
ANR	4556026	Symbol	NULL		4555898						
ANR	4556027	Symbol	format		4555898						
ANR	4556028	Symbol	s_len		4555898						
ANR	4556029	Symbol	false		4555898						
ANR	4556030	Symbol	Data		4555898						
ANR	4556031	Symbol	capacity		4555898						
ANR	4556032	Symbol	args		4555898						
ANR	4556033	Symbol	Len		4555898						
ANR	4556034	Symbol	* format		4555898						
ANR	4556035	Symbol	& buffer		4555898						
ANR	4556036	Symbol	true		4555898						
ANR	4556037	Symbol	buffer		4555898						
ANR	4556038	Function	MyString :: sprintf_cat	583:0:12091:12281							
ANR	4556039	FunctionDef	MyString :: sprintf_cat (const char * format)		4556038	0					
ANR	4556040	CompoundStatement		585:0:12143:12281	4556038	0					
ANR	4556041	IdentifierDeclStatement	bool succeeded ;	586:1:12146:12163	4556038	0	True				
ANR	4556042	IdentifierDecl	succeeded		4556038	0					
ANR	4556043	IdentifierDeclType	bool		4556038	0					
ANR	4556044	Identifier	succeeded		4556038	1					
ANR	4556045	IdentifierDeclStatement	va_list args ;	587:1:12166:12178	4556038	1	True				
ANR	4556046	IdentifierDecl	args		4556038	0					
ANR	4556047	IdentifierDeclType	va_list		4556038	0					
ANR	4556048	Identifier	args		4556038	1					
ANR	4556049	ExpressionStatement	"va_start ( args , format )"	589:1:12182:12204	4556038	2	True				
ANR	4556050	CallExpression	"va_start ( args , format )"		4556038	0					
ANR	4556051	Callee	va_start		4556038	0					
ANR	4556052	Identifier	va_start		4556038	0					
ANR	4556053	ArgumentList	args		4556038	1					
ANR	4556054	Argument	args		4556038	0					
ANR	4556055	Identifier	args		4556038	0					
ANR	4556056	Argument	format		4556038	1					
ANR	4556057	Identifier	format		4556038	0					
ANR	4556058	ExpressionStatement	"succeeded = vsprintf_cat ( format , args )"	590:1:12207:12244	4556038	3	True				
ANR	4556059	AssignmentExpression	"succeeded = vsprintf_cat ( format , args )"		4556038	0		=			
ANR	4556060	Identifier	succeeded		4556038	0					
ANR	4556061	CallExpression	"vsprintf_cat ( format , args )"		4556038	1					
ANR	4556062	Callee	vsprintf_cat		4556038	0					
ANR	4556063	Identifier	vsprintf_cat		4556038	0					
ANR	4556064	ArgumentList	format		4556038	1					
ANR	4556065	Argument	format		4556038	0					
ANR	4556066	Identifier	format		4556038	0					
ANR	4556067	Argument	args		4556038	1					
ANR	4556068	Identifier	args		4556038	0					
ANR	4556069	ExpressionStatement	va_end ( args )	591:1:12247:12259	4556038	4	True				
ANR	4556070	CallExpression	va_end ( args )		4556038	0					
ANR	4556071	Callee	va_end		4556038	0					
ANR	4556072	Identifier	va_end		4556038	0					
ANR	4556073	ArgumentList	args		4556038	1					
ANR	4556074	Argument	args		4556038	0					
ANR	4556075	Identifier	args		4556038	0					
ANR	4556076	ReturnStatement	return succeeded ;	593:1:12263:12279	4556038	5	True				
ANR	4556077	Identifier	succeeded		4556038	0					
ANR	4556078	ReturnType	bool		4556038	1					
ANR	4556079	Identifier	MyString :: sprintf_cat		4556038	2					
ANR	4556080	ParameterList	const char * format		4556038	3					
ANR	4556081	Parameter	const char * format	584:22:12119:12136	4556038	0	True				
ANR	4556082	ParameterType	const char *		4556038	0					
ANR	4556083	Identifier	format		4556038	1					
ANR	4556084	CFGEntryNode	ENTRY		4556038		True				
ANR	4556085	CFGExitNode	EXIT		4556038		True				
ANR	4556086	Symbol	args		4556038						
ANR	4556087	Symbol	vsprintf_cat		4556038						
ANR	4556088	Symbol	format		4556038						
ANR	4556089	Symbol	succeeded		4556038						
ANR	4556090	Function	MyString :: vsprintf	596:0:12284:12414							
ANR	4556091	FunctionDef	"MyString :: vsprintf (const char * format , va_list args)"		4556090	0					
ANR	4556092	CompoundStatement		598:0:12341:12414	4556090	0					
ANR	4556093	ExpressionStatement	Len = 0	599:1:12344:12351	4556090	0	True				
ANR	4556094	AssignmentExpression	Len = 0		4556090	0		=			
ANR	4556095	Identifier	Len		4556090	0					
ANR	4556096	PrimaryExpression	0		4556090	1					
ANR	4556097	IfStatement	if ( Data )		4556090	1					
ANR	4556098	Condition	Data	600:4:12357:12360	4556090	0	True				
ANR	4556099	Identifier	Data		4556090	0					
ANR	4556100	ExpressionStatement	Data [ 0 ] = '\\0'	600:10:12363:12377	4556090	1	True				
ANR	4556101	AssignmentExpression	Data [ 0 ] = '\\0'		4556090	0		=			
ANR	4556102	ArrayIndexing	Data [ 0 ]		4556090	0					
ANR	4556103	Identifier	Data		4556090	0					
ANR	4556104	PrimaryExpression	0		4556090	1					
ANR	4556105	PrimaryExpression	'\\0'		4556090	1					
ANR	4556106	ReturnStatement	"return vsprintf_cat ( format , args ) ;"	601:1:12380:12412	4556090	2	True				
ANR	4556107	CallExpression	"vsprintf_cat ( format , args )"		4556090	0					
ANR	4556108	Callee	vsprintf_cat		4556090	0					
ANR	4556109	Identifier	vsprintf_cat		4556090	0					
ANR	4556110	ArgumentList	format		4556090	1					
ANR	4556111	Argument	format		4556090	0					
ANR	4556112	Identifier	format		4556090	0					
ANR	4556113	Argument	args		4556090	1					
ANR	4556114	Identifier	args		4556090	0					
ANR	4556115	ReturnType	bool		4556090	1					
ANR	4556116	Identifier	MyString :: vsprintf		4556090	2					
ANR	4556117	ParameterList	"const char * format , va_list args"		4556090	3					
ANR	4556118	Parameter	const char * format	597:19:12308:12325	4556090	0	True				
ANR	4556119	ParameterType	const char *		4556090	0					
ANR	4556120	Identifier	format		4556090	1					
ANR	4556121	Parameter	va_list args	597:38:12327:12338	4556090	1	True				
ANR	4556122	ParameterType	va_list		4556090	0					
ANR	4556123	Identifier	args		4556090	1					
ANR	4556124	CFGEntryNode	ENTRY		4556090		True				
ANR	4556125	CFGExitNode	EXIT		4556090		True				
ANR	4556126	Symbol	args		4556090						
ANR	4556127	Symbol	vsprintf_cat		4556090						
ANR	4556128	Symbol	Len		4556090						
ANR	4556129	Symbol	format		4556090						
ANR	4556130	Symbol	Data		4556090						
ANR	4556131	Symbol	* Data		4556090						
ANR	4556132	Function	MyString :: sprintf	604:0:12417:12599							
ANR	4556133	FunctionDef	MyString :: sprintf (const char * format)		4556132	0					
ANR	4556134	CompoundStatement		606:0:12465:12599	4556132	0					
ANR	4556135	IdentifierDeclStatement	bool succeeded ;	607:1:12468:12485	4556132	0	True				
ANR	4556136	IdentifierDecl	succeeded		4556132	0					
ANR	4556137	IdentifierDeclType	bool		4556132	0					
ANR	4556138	Identifier	succeeded		4556132	1					
ANR	4556139	IdentifierDeclStatement	va_list args ;	608:1:12488:12500	4556132	1	True				
ANR	4556140	IdentifierDecl	args		4556132	0					
ANR	4556141	IdentifierDeclType	va_list		4556132	0					
ANR	4556142	Identifier	args		4556132	1					
ANR	4556143	ExpressionStatement	"va_start ( args , format )"	610:1:12504:12526	4556132	2	True				
ANR	4556144	CallExpression	"va_start ( args , format )"		4556132	0					
ANR	4556145	Callee	va_start		4556132	0					
ANR	4556146	Identifier	va_start		4556132	0					
ANR	4556147	ArgumentList	args		4556132	1					
ANR	4556148	Argument	args		4556132	0					
ANR	4556149	Identifier	args		4556132	0					
ANR	4556150	Argument	format		4556132	1					
ANR	4556151	Identifier	format		4556132	0					
ANR	4556152	ExpressionStatement	"succeeded = vsprintf ( format , args )"	611:1:12529:12562	4556132	3	True				
ANR	4556153	AssignmentExpression	"succeeded = vsprintf ( format , args )"		4556132	0		=			
ANR	4556154	Identifier	succeeded		4556132	0					
ANR	4556155	CallExpression	"vsprintf ( format , args )"		4556132	1					
ANR	4556156	Callee	vsprintf		4556132	0					
ANR	4556157	Identifier	vsprintf		4556132	0					
ANR	4556158	ArgumentList	format		4556132	1					
ANR	4556159	Argument	format		4556132	0					
ANR	4556160	Identifier	format		4556132	0					
ANR	4556161	Argument	args		4556132	1					
ANR	4556162	Identifier	args		4556132	0					
ANR	4556163	ExpressionStatement	va_end ( args )	612:1:12565:12577	4556132	4	True				
ANR	4556164	CallExpression	va_end ( args )		4556132	0					
ANR	4556165	Callee	va_end		4556132	0					
ANR	4556166	Identifier	va_end		4556132	0					
ANR	4556167	ArgumentList	args		4556132	1					
ANR	4556168	Argument	args		4556132	0					
ANR	4556169	Identifier	args		4556132	0					
ANR	4556170	ReturnStatement	return succeeded ;	614:1:12581:12597	4556132	5	True				
ANR	4556171	Identifier	succeeded		4556132	0					
ANR	4556172	ReturnType	bool		4556132	1					
ANR	4556173	Identifier	MyString :: sprintf		4556132	2					
ANR	4556174	ParameterList	const char * format		4556132	3					
ANR	4556175	Parameter	const char * format	605:18:12441:12458	4556132	0	True				
ANR	4556176	ParameterType	const char *		4556132	0					
ANR	4556177	Identifier	format		4556132	1					
ANR	4556178	CFGEntryNode	ENTRY		4556132		True				
ANR	4556179	CFGExitNode	EXIT		4556132		True				
ANR	4556180	Symbol	args		4556132						
ANR	4556181	Symbol	format		4556132						
ANR	4556182	Symbol	vsprintf		4556132						
ANR	4556183	Symbol	succeeded		4556132						
ANR	4556184	Function	MyString :: lower_case	618:0:12603:12688							
ANR	4556185	FunctionDef	MyString :: lower_case ()		4556184	0					
ANR	4556186	CompoundStatement		620:0:12635:12688	4556184	0					
ANR	4556187	IfStatement	if ( Data != NULL )		4556184	0					
ANR	4556188	Condition	Data != NULL	621:5:12642:12653	4556184	0	True				
ANR	4556189	EqualityExpression	Data != NULL		4556184	0		!=			
ANR	4556190	Identifier	Data		4556184	0					
ANR	4556191	Identifier	NULL		4556184	1					
ANR	4556192	CompoundStatement		2:19:20:20	4556184	1					
ANR	4556193	Statement	::	622:2:12660:12661	4556184	0	True				
ANR	4556194	ExpressionStatement	strlwr ( Data )	622:4:12662:12674	4556184	1	True				
ANR	4556195	CallExpression	strlwr ( Data )		4556184	0					
ANR	4556196	Callee	strlwr		4556184	0					
ANR	4556197	Identifier	strlwr		4556184	0					
ANR	4556198	ArgumentList	Data		4556184	1					
ANR	4556199	Argument	Data		4556184	0					
ANR	4556200	Identifier	Data		4556184	0					
ANR	4556201	ReturnStatement	return ;	624:1:12680:12686	4556184	1	True				
ANR	4556202	ReturnType	void		4556184	1					
ANR	4556203	Identifier	MyString :: lower_case		4556184	2					
ANR	4556204	ParameterList			4556184	3					
ANR	4556205	CFGEntryNode	ENTRY		4556184		True				
ANR	4556206	CFGExitNode	EXIT		4556184		True				
ANR	4556207	Symbol	NULL		4556184						
ANR	4556208	Symbol	Data		4556184						
ANR	4556209	Function	MyString :: upper_case	627:0:12691:12776							
ANR	4556210	FunctionDef	MyString :: upper_case ()		4556209	0					
ANR	4556211	CompoundStatement		629:0:12723:12776	4556209	0					
ANR	4556212	IfStatement	if ( Data != NULL )		4556209	0					
ANR	4556213	Condition	Data != NULL	630:5:12730:12741	4556209	0	True				
ANR	4556214	EqualityExpression	Data != NULL		4556209	0		!=			
ANR	4556215	Identifier	Data		4556209	0					
ANR	4556216	Identifier	NULL		4556209	1					
ANR	4556217	CompoundStatement		2:19:20:20	4556209	1					
ANR	4556218	Statement	::	631:2:12748:12749	4556209	0	True				
ANR	4556219	ExpressionStatement	strupr ( Data )	631:4:12750:12762	4556209	1	True				
ANR	4556220	CallExpression	strupr ( Data )		4556209	0					
ANR	4556221	Callee	strupr		4556209	0					
ANR	4556222	Identifier	strupr		4556209	0					
ANR	4556223	ArgumentList	Data		4556209	1					
ANR	4556224	Argument	Data		4556209	0					
ANR	4556225	Identifier	Data		4556209	0					
ANR	4556226	ReturnStatement	return ;	633:1:12768:12774	4556209	1	True				
ANR	4556227	ReturnType	void		4556209	1					
ANR	4556228	Identifier	MyString :: upper_case		4556209	2					
ANR	4556229	ParameterList			4556209	3					
ANR	4556230	CFGEntryNode	ENTRY		4556209		True				
ANR	4556231	CFGExitNode	EXIT		4556209		True				
ANR	4556232	Symbol	NULL		4556209						
ANR	4556233	Symbol	Data		4556209						
ANR	4556234	Function	MyString :: chomp	636:0:12779:13056							
ANR	4556235	FunctionDef	MyString :: chomp ()		4556234	0					
ANR	4556236	CompoundStatement		638:0:12808:13056	4556234	0					
ANR	4556237	IdentifierDeclStatement	bool chomped = false ;	639:1:12811:12831	4556234	0	True				
ANR	4556238	IdentifierDecl	chomped = false		4556234	0					
ANR	4556239	IdentifierDeclType	bool		4556234	0					
ANR	4556240	Identifier	chomped		4556234	1					
ANR	4556241	AssignmentExpression	chomped = false		4556234	2		=			
ANR	4556242	Identifier	false		4556234	0					
ANR	4556243	Identifier	false		4556234	1					
ANR	4556244	IfStatement	if ( Len == 0 )		4556234	1					
ANR	4556245	Condition	Len == 0	640:5:12838:12845	4556234	0	True				
ANR	4556246	EqualityExpression	Len == 0		4556234	0		==			
ANR	4556247	Identifier	Len		4556234	0					
ANR	4556248	PrimaryExpression	0		4556234	1					
ANR	4556249	CompoundStatement		3:16:40:40	4556234	1					
ANR	4556250	ReturnStatement	return chomped ;	641:2:12853:12867	4556234	0	True				
ANR	4556251	Identifier	chomped		4556234	0					
ANR	4556252	IfStatement	if ( Data [ Len - 1 ] == '\\n' )		4556234	2					
ANR	4556253	Condition	Data [ Len - 1 ] == '\\n'	643:5:12877:12895	4556234	0	True				
ANR	4556254	EqualityExpression	Data [ Len - 1 ] == '\\n'		4556234	0		==			
ANR	4556255	ArrayIndexing	Data [ Len - 1 ]		4556234	0					
ANR	4556256	Identifier	Data		4556234	0					
ANR	4556257	AdditiveExpression	Len - 1		4556234	1		-			
ANR	4556258	Identifier	Len		4556234	0					
ANR	4556259	PrimaryExpression	1		4556234	1					
ANR	4556260	PrimaryExpression	'\\n'		4556234	1					
ANR	4556261	CompoundStatement		6:27:90:90	4556234	1					
ANR	4556262	ExpressionStatement	Data [ Len - 1 ] = '\\0'	644:2:12903:12921	4556234	0	True				
ANR	4556263	AssignmentExpression	Data [ Len - 1 ] = '\\0'		4556234	0		=			
ANR	4556264	ArrayIndexing	Data [ Len - 1 ]		4556234	0					
ANR	4556265	Identifier	Data		4556234	0					
ANR	4556266	AdditiveExpression	Len - 1		4556234	1		-			
ANR	4556267	Identifier	Len		4556234	0					
ANR	4556268	PrimaryExpression	1		4556234	1					
ANR	4556269	PrimaryExpression	'\\0'		4556234	1					
ANR	4556270	ExpressionStatement	Len --	645:2:12925:12930	4556234	1	True				
ANR	4556271	PostIncDecOperationExpression	Len --		4556234	0					
ANR	4556272	Identifier	Len		4556234	0					
ANR	4556273	IncDec	--		4556234	1					
ANR	4556274	ExpressionStatement	chomped = true	646:2:12934:12948	4556234	2	True				
ANR	4556275	AssignmentExpression	chomped = true		4556234	0		=			
ANR	4556276	Identifier	chomped		4556234	0					
ANR	4556277	Identifier	true		4556234	1					
ANR	4556278	IfStatement	if ( ( Len > 0 ) && ( Data [ Len - 1 ] == '\\r' ) )		4556234	3					
ANR	4556279	Condition	( Len > 0 ) && ( Data [ Len - 1 ] == '\\r' )	647:6:12956:12993	4556234	0	True				
ANR	4556280	AndExpression	( Len > 0 ) && ( Data [ Len - 1 ] == '\\r' )		4556234	0		&&			
ANR	4556281	RelationalExpression	Len > 0		4556234	0		>			
ANR	4556282	Identifier	Len		4556234	0					
ANR	4556283	PrimaryExpression	0		4556234	1					
ANR	4556284	EqualityExpression	Data [ Len - 1 ] == '\\r'		4556234	1		==			
ANR	4556285	ArrayIndexing	Data [ Len - 1 ]		4556234	0					
ANR	4556286	Identifier	Data		4556234	0					
ANR	4556287	AdditiveExpression	Len - 1		4556234	1		-			
ANR	4556288	Identifier	Len		4556234	0					
ANR	4556289	PrimaryExpression	1		4556234	1					
ANR	4556290	PrimaryExpression	'\\r'		4556234	1					
ANR	4556291	CompoundStatement		10:47:188:188	4556234	1					
ANR	4556292	ExpressionStatement	Data [ Len - 1 ] = '\\0'	648:3:13002:13020	4556234	0	True				
ANR	4556293	AssignmentExpression	Data [ Len - 1 ] = '\\0'		4556234	0		=			
ANR	4556294	ArrayIndexing	Data [ Len - 1 ]		4556234	0					
ANR	4556295	Identifier	Data		4556234	0					
ANR	4556296	AdditiveExpression	Len - 1		4556234	1		-			
ANR	4556297	Identifier	Len		4556234	0					
ANR	4556298	PrimaryExpression	1		4556234	1					
ANR	4556299	PrimaryExpression	'\\0'		4556234	1					
ANR	4556300	ExpressionStatement	Len --	649:3:13025:13030	4556234	1	True				
ANR	4556301	PostIncDecOperationExpression	Len --		4556234	0					
ANR	4556302	Identifier	Len		4556234	0					
ANR	4556303	IncDec	--		4556234	1					
ANR	4556304	ReturnStatement	return chomped ;	652:1:13040:13054	4556234	3	True				
ANR	4556305	Identifier	chomped		4556234	0					
ANR	4556306	ReturnType	bool		4556234	1					
ANR	4556307	Identifier	MyString :: chomp		4556234	2					
ANR	4556308	ParameterList			4556234	3					
ANR	4556309	CFGEntryNode	ENTRY		4556234		True				
ANR	4556310	CFGExitNode	EXIT		4556234		True				
ANR	4556311	Symbol	* Len		4556234						
ANR	4556312	Symbol	Len		4556234						
ANR	4556313	Symbol	false		4556234						
ANR	4556314	Symbol	true		4556234						
ANR	4556315	Symbol	Data		4556234						
ANR	4556316	Symbol	chomped		4556234						
ANR	4556317	Symbol	* Data		4556234						
ANR	4556318	Function	MyString :: trim	655:0:13059:13355							
ANR	4556319	FunctionDef	MyString :: trim ()		4556318	0					
ANR	4556320	CompoundStatement		657:0:13087:13355	4556318	0					
ANR	4556321	IfStatement	if ( Len == 0 )		4556318	0					
ANR	4556322	Condition	Len == 0	658:5:13094:13101	4556318	0	True				
ANR	4556323	EqualityExpression	Len == 0		4556318	0		==			
ANR	4556324	Identifier	Len		4556318	0					
ANR	4556325	PrimaryExpression	0		4556318	1					
ANR	4556326	CompoundStatement		2:16:17:17	4556318	1					
ANR	4556327	ReturnStatement	return ;	659:2:13109:13115	4556318	0	True				
ANR	4556328	IdentifierDeclStatement	int begin = 0 ;	661:1:13121:13135	4556318	1	True				
ANR	4556329	IdentifierDecl	begin = 0		4556318	0					
ANR	4556330	IdentifierDeclType	int		4556318	0					
ANR	4556331	Identifier	begin		4556318	1					
ANR	4556332	AssignmentExpression	begin = 0		4556318	2		=			
ANR	4556333	Identifier	begin		4556318	0					
ANR	4556334	PrimaryExpression	0		4556318	1					
ANR	4556335	WhileStatement	while ( begin < Len && isspace ( Data [ begin ] ) )		4556318	2					
ANR	4556336	Condition	begin < Len && isspace ( Data [ begin ] )	662:9:13146:13180	4556318	0	True				
ANR	4556337	AndExpression	begin < Len && isspace ( Data [ begin ] )		4556318	0		&&			
ANR	4556338	RelationalExpression	begin < Len		4556318	0		<			
ANR	4556339	Identifier	begin		4556318	0					
ANR	4556340	Identifier	Len		4556318	1					
ANR	4556341	CallExpression	isspace ( Data [ begin ] )		4556318	1					
ANR	4556342	Callee	isspace		4556318	0					
ANR	4556343	Identifier	isspace		4556318	0					
ANR	4556344	ArgumentList	Data [ begin ]		4556318	1					
ANR	4556345	Argument	Data [ begin ]		4556318	0					
ANR	4556346	ArrayIndexing	Data [ begin ]		4556318	0					
ANR	4556347	Identifier	Data		4556318	0					
ANR	4556348	Identifier	begin		4556318	1					
ANR	4556349	CompoundStatement		6:47:96:96	4556318	1					
ANR	4556350	ExpressionStatement	++ begin	662:49:13186:13193	4556318	0	True				
ANR	4556351	UnaryExpression	++ begin		4556318	0					
ANR	4556352	IncDec	++		4556318	0					
ANR	4556353	Identifier	begin		4556318	1					
ANR	4556354	IdentifierDeclStatement	int end = Length ( ) - 1 ;	664:1:13199:13222	4556318	3	True				
ANR	4556355	IdentifierDecl	end = Length ( ) - 1		4556318	0					
ANR	4556356	IdentifierDeclType	int		4556318	0					
ANR	4556357	Identifier	end		4556318	1					
ANR	4556358	AssignmentExpression	end = Length ( ) - 1		4556318	2		=			
ANR	4556359	Identifier	end		4556318	0					
ANR	4556360	AdditiveExpression	Length ( ) - 1		4556318	1		-			
ANR	4556361	CallExpression	Length ( )		4556318	0					
ANR	4556362	Callee	Length		4556318	0					
ANR	4556363	Identifier	Length		4556318	0					
ANR	4556364	ArgumentList			4556318	1					
ANR	4556365	PrimaryExpression	1		4556318	1					
ANR	4556366	WhileStatement	while ( end >= 0 && isspace ( Data [ end ] ) )		4556318	4					
ANR	4556367	Condition	end >= 0 && isspace ( Data [ end ] )	665:9:13233:13262	4556318	0	True				
ANR	4556368	AndExpression	end >= 0 && isspace ( Data [ end ] )		4556318	0		&&			
ANR	4556369	RelationalExpression	end >= 0		4556318	0		>=			
ANR	4556370	Identifier	end		4556318	0					
ANR	4556371	PrimaryExpression	0		4556318	1					
ANR	4556372	CallExpression	isspace ( Data [ end ] )		4556318	1					
ANR	4556373	Callee	isspace		4556318	0					
ANR	4556374	Identifier	isspace		4556318	0					
ANR	4556375	ArgumentList	Data [ end ]		4556318	1					
ANR	4556376	Argument	Data [ end ]		4556318	0					
ANR	4556377	ArrayIndexing	Data [ end ]		4556318	0					
ANR	4556378	Identifier	Data		4556318	0					
ANR	4556379	Identifier	end		4556318	1					
ANR	4556380	CompoundStatement		9:42:178:178	4556318	1					
ANR	4556381	ExpressionStatement	-- end	665:44:13268:13273	4556318	0	True				
ANR	4556382	UnaryExpression	-- end		4556318	0					
ANR	4556383	IncDec	--		4556318	0					
ANR	4556384	Identifier	end		4556318	1					
ANR	4556385	IfStatement	if ( begin != 0 || end != Length ( ) - 1 )		4556318	5					
ANR	4556386	Condition	begin != 0 || end != Length ( ) - 1	667:6:13284:13316	4556318	0	True				
ANR	4556387	OrExpression	begin != 0 || end != Length ( ) - 1		4556318	0		||			
ANR	4556388	EqualityExpression	begin != 0		4556318	0		!=			
ANR	4556389	Identifier	begin		4556318	0					
ANR	4556390	PrimaryExpression	0		4556318	1					
ANR	4556391	EqualityExpression	end != Length ( ) - 1		4556318	1		!=			
ANR	4556392	Identifier	end		4556318	0					
ANR	4556393	AdditiveExpression	Length ( ) - 1		4556318	1		-			
ANR	4556394	CallExpression	Length ( )		4556318	0					
ANR	4556395	Callee	Length		4556318	0					
ANR	4556396	Identifier	Length		4556318	0					
ANR	4556397	ArgumentList			4556318	1					
ANR	4556398	PrimaryExpression	1		4556318	1					
ANR	4556399	CompoundStatement		11:42:232:232	4556318	1					
ANR	4556400	ExpressionStatement	"* this = Substr ( begin , end )"	668:2:13324:13350	4556318	0	True				
ANR	4556401	AssignmentExpression	"* this = Substr ( begin , end )"		4556318	0		=			
ANR	4556402	UnaryOperationExpression	* this		4556318	0					
ANR	4556403	UnaryOperator	*		4556318	0					
ANR	4556404	Identifier	this		4556318	1					
ANR	4556405	CallExpression	"Substr ( begin , end )"		4556318	1					
ANR	4556406	Callee	Substr		4556318	0					
ANR	4556407	Identifier	Substr		4556318	0					
ANR	4556408	ArgumentList	begin		4556318	1					
ANR	4556409	Argument	begin		4556318	0					
ANR	4556410	Identifier	begin		4556318	0					
ANR	4556411	Argument	end		4556318	1					
ANR	4556412	Identifier	end		4556318	0					
ANR	4556413	ReturnType	void		4556318	1					
ANR	4556414	Identifier	MyString :: trim		4556318	2					
ANR	4556415	ParameterList			4556318	3					
ANR	4556416	CFGEntryNode	ENTRY		4556318		True				
ANR	4556417	CFGExitNode	EXIT		4556318		True				
ANR	4556418	Symbol	Substr		4556318						
ANR	4556419	Symbol	* this		4556318						
ANR	4556420	Symbol	Len		4556318						
ANR	4556421	Symbol	Length		4556318						
ANR	4556422	Symbol	* begin		4556318						
ANR	4556423	Symbol	isspace		4556318						
ANR	4556424	Symbol	this		4556318						
ANR	4556425	Symbol	Data		4556318						
ANR	4556426	Symbol	end		4556318						
ANR	4556427	Symbol	* end		4556318						
ANR	4556428	Symbol	begin		4556318						
ANR	4556429	Symbol	* Data		4556318						
ANR	4556430	Function	MyString :: randomlyGenerate	673:0:13427:14097							
ANR	4556431	FunctionDef	"MyString :: randomlyGenerate (const char * set , int len)"		4556430	0					
ANR	4556432	CompoundStatement		675:0:13485:14097	4556430	0					
ANR	4556433	IdentifierDeclStatement	int i ;	676:1:13488:13493	4556430	0	True				
ANR	4556434	IdentifierDecl	i		4556430	0					
ANR	4556435	IdentifierDeclType	int		4556430	0					
ANR	4556436	Identifier	i		4556430	1					
ANR	4556437	IdentifierDeclStatement	int idx ;	677:1:13496:13503	4556430	1	True				
ANR	4556438	IdentifierDecl	idx		4556430	0					
ANR	4556439	IdentifierDeclType	int		4556430	0					
ANR	4556440	Identifier	idx		4556430	1					
ANR	4556441	IdentifierDeclStatement	int set_len ;	678:1:13506:13517	4556430	2	True				
ANR	4556442	IdentifierDecl	set_len		4556430	0					
ANR	4556443	IdentifierDeclType	int		4556430	0					
ANR	4556444	Identifier	set_len		4556430	1					
ANR	4556445	IfStatement	if ( ! set || len <= 0 )		4556430	3					
ANR	4556446	Condition	! set || len <= 0	680:8:13528:13543	4556430	0	True				
ANR	4556447	OrExpression	! set || len <= 0		4556430	0		||			
ANR	4556448	UnaryOperationExpression	! set		4556430	0					
ANR	4556449	UnaryOperator	!		4556430	0					
ANR	4556450	Identifier	set		4556430	1					
ANR	4556451	RelationalExpression	len <= 0		4556430	1		<=			
ANR	4556452	Identifier	len		4556430	0					
ANR	4556453	PrimaryExpression	0		4556430	1					
ANR	4556454	CompoundStatement		6:26:60:60	4556430	1					
ANR	4556455	IfStatement	if ( Data )		4556430	0					
ANR	4556456	Condition	Data	683:6:13687:13690	4556430	0	True				
ANR	4556457	Identifier	Data		4556430	0					
ANR	4556458	CompoundStatement		9:12:207:207	4556430	1					
ANR	4556459	ExpressionStatement	Data [ 0 ] = '\\0'	684:3:13698:13712	4556430	0	True				
ANR	4556460	AssignmentExpression	Data [ 0 ] = '\\0'		4556430	0		=			
ANR	4556461	ArrayIndexing	Data [ 0 ]		4556430	0					
ANR	4556462	Identifier	Data		4556430	0					
ANR	4556463	PrimaryExpression	0		4556430	1					
ANR	4556464	PrimaryExpression	'\\0'		4556430	1					
ANR	4556465	ExpressionStatement	Len = 0	686:2:13720:13727	4556430	1	True				
ANR	4556466	AssignmentExpression	Len = 0		4556430	0		=			
ANR	4556467	Identifier	Len		4556430	0					
ANR	4556468	PrimaryExpression	0		4556430	1					
ANR	4556469	ReturnStatement	return ;	688:2:13758:13764	4556430	2	True				
ANR	4556470	IfStatement	if ( Data )		4556430	4					
ANR	4556471	Condition	Data	692:8:13824:13827	4556430	0	True				
ANR	4556472	Identifier	Data		4556430	0					
ANR	4556473	CompoundStatement		18:14:344:344	4556430	1					
ANR	4556474	Statement	delete	693:2:13834:13839	4556430	0	True				
ANR	4556475	Statement	[	693:8:13840:13840	4556430	1	True				
ANR	4556476	Statement	]	693:9:13841:13841	4556430	2	True				
ANR	4556477	ExpressionStatement	Data	693:11:13843:13847	4556430	3	True				
ANR	4556478	Identifier	Data		4556430	0					
ANR	4556479	ExpressionStatement	Data = new char [ len + 1 ]	696:1:13854:13876	4556430	5	True				
ANR	4556480	AssignmentExpression	Data = new char [ len + 1 ]		4556430	0		=			
ANR	4556481	Identifier	Data		4556430	0					
ANR	4556482	AdditiveExpression	len + 1		4556430	1		+			
ANR	4556483	Identifier	len		4556430	0					
ANR	4556484	PrimaryExpression	1		4556430	1					
ANR	4556485	ExpressionStatement	Data [ len ] = '\\0'	697:1:13880:13896	4556430	6	True				
ANR	4556486	AssignmentExpression	Data [ len ] = '\\0'		4556430	0		=			
ANR	4556487	ArrayIndexing	Data [ len ]		4556430	0					
ANR	4556488	Identifier	Data		4556430	0					
ANR	4556489	Identifier	len		4556430	1					
ANR	4556490	PrimaryExpression	'\\0'		4556430	1					
ANR	4556491	ExpressionStatement	Len = len	698:1:13899:13908	4556430	7	True				
ANR	4556492	AssignmentExpression	Len = len		4556430	0		=			
ANR	4556493	Identifier	Len		4556430	0					
ANR	4556494	Identifier	len		4556430	1					
ANR	4556495	ExpressionStatement	capacity = len	699:1:13911:13925	4556430	8	True				
ANR	4556496	AssignmentExpression	capacity = len		4556430	0		=			
ANR	4556497	Identifier	capacity		4556430	0					
ANR	4556498	Identifier	len		4556430	1					
ANR	4556499	ExpressionStatement	set_len = strlen ( set )	701:1:13929:13950	4556430	9	True				
ANR	4556500	AssignmentExpression	set_len = strlen ( set )		4556430	0		=			
ANR	4556501	Identifier	set_len		4556430	0					
ANR	4556502	CallExpression	strlen ( set )		4556430	1					
ANR	4556503	Callee	strlen		4556430	0					
ANR	4556504	Identifier	strlen		4556430	0					
ANR	4556505	ArgumentList	set		4556430	1					
ANR	4556506	Argument	set		4556430	0					
ANR	4556507	Identifier	set		4556430	0					
ANR	4556508	ForStatement	for ( i = 0 ; i < len ; i ++ )		4556430	10					
ANR	4556509	ForInit	i = 0 ;	704:6:14012:14017	4556430	0	True				
ANR	4556510	AssignmentExpression	i = 0		4556430	0		=			
ANR	4556511	Identifier	i		4556430	0					
ANR	4556512	PrimaryExpression	0		4556430	1					
ANR	4556513	Condition	i < len	704:13:14019:14025	4556430	1	True				
ANR	4556514	RelationalExpression	i < len		4556430	0		<			
ANR	4556515	Identifier	i		4556430	0					
ANR	4556516	Identifier	len		4556430	1					
ANR	4556517	PostIncDecOperationExpression	i ++	704:23:14029:14031	4556430	2	True				
ANR	4556518	Identifier	i		4556430	0					
ANR	4556519	IncDec	++		4556430	1					
ANR	4556520	CompoundStatement		30:28:548:548	4556430	3					
ANR	4556521	ExpressionStatement	idx = get_random_int ( ) % set_len	705:2:14038:14070	4556430	0	True				
ANR	4556522	AssignmentExpression	idx = get_random_int ( ) % set_len		4556430	0		=			
ANR	4556523	Identifier	idx		4556430	0					
ANR	4556524	MultiplicativeExpression	get_random_int ( ) % set_len		4556430	1		%			
ANR	4556525	CallExpression	get_random_int ( )		4556430	0					
ANR	4556526	Callee	get_random_int		4556430	0					
ANR	4556527	Identifier	get_random_int		4556430	0					
ANR	4556528	ArgumentList			4556430	1					
ANR	4556529	Identifier	set_len		4556430	1					
ANR	4556530	ExpressionStatement	Data [ i ] = set [ idx ]	706:2:14074:14092	4556430	1	True				
ANR	4556531	AssignmentExpression	Data [ i ] = set [ idx ]		4556430	0		=			
ANR	4556532	ArrayIndexing	Data [ i ]		4556430	0					
ANR	4556533	Identifier	Data		4556430	0					
ANR	4556534	Identifier	i		4556430	1					
ANR	4556535	ArrayIndexing	set [ idx ]		4556430	1					
ANR	4556536	Identifier	set		4556430	0					
ANR	4556537	Identifier	idx		4556430	1					
ANR	4556538	ReturnType	void		4556430	1					
ANR	4556539	Identifier	MyString :: randomlyGenerate		4556430	2					
ANR	4556540	ParameterList	"const char * set , int len"		4556430	3					
ANR	4556541	Parameter	const char * set	674:27:13459:13473	4556430	0	True				
ANR	4556542	ParameterType	const char *		4556430	0					
ANR	4556543	Identifier	set		4556430	1					
ANR	4556544	Parameter	int len	674:44:13476:13482	4556430	1	True				
ANR	4556545	ParameterType	int		4556430	0					
ANR	4556546	Identifier	len		4556430	1					
ANR	4556547	CFGEntryNode	ENTRY		4556430		True				
ANR	4556548	CFGExitNode	EXIT		4556430		True				
ANR	4556549	Symbol	set		4556430						
ANR	4556550	Symbol	get_random_int		4556430						
ANR	4556551	Symbol	i		4556430						
ANR	4556552	Symbol	Data		4556430						
ANR	4556553	Symbol	* set		4556430						
ANR	4556554	Symbol	set_len		4556430						
ANR	4556555	Symbol	* Data		4556430						
ANR	4556556	Symbol	capacity		4556430						
ANR	4556557	Symbol	strlen		4556430						
ANR	4556558	Symbol	* i		4556430						
ANR	4556559	Symbol	len		4556430						
ANR	4556560	Symbol	Len		4556430						
ANR	4556561	Symbol	* idx		4556430						
ANR	4556562	Symbol	idx		4556430						
ANR	4556563	Symbol	* len		4556430						
ANR	4556564	Function	MyString :: randomlyGenerateHex	710:0:14100:14190							
ANR	4556565	FunctionDef	MyString :: randomlyGenerateHex (int len)		4556564	0					
ANR	4556566	CompoundStatement		712:0:14144:14190	4556564	0					
ANR	4556567	ExpressionStatement	"randomlyGenerate ( ""0123456789abcdef"" , len )"	713:1:14147:14188	4556564	0	True				
ANR	4556568	CallExpression	"randomlyGenerate ( ""0123456789abcdef"" , len )"		4556564	0					
ANR	4556569	Callee	randomlyGenerate		4556564	0					
ANR	4556570	Identifier	randomlyGenerate		4556564	0					
ANR	4556571	ArgumentList	"""0123456789abcdef"""		4556564	1					
ANR	4556572	Argument	"""0123456789abcdef"""		4556564	0					
ANR	4556573	PrimaryExpression	"""0123456789abcdef"""		4556564	0					
ANR	4556574	Argument	len		4556564	1					
ANR	4556575	Identifier	len		4556564	0					
ANR	4556576	ReturnType	void		4556564	1					
ANR	4556577	Identifier	MyString :: randomlyGenerateHex		4556564	2					
ANR	4556578	ParameterList	int len		4556564	3					
ANR	4556579	Parameter	int len	711:30:14135:14141	4556564	0	True				
ANR	4556580	ParameterType	int		4556564	0					
ANR	4556581	Identifier	len		4556564	1					
ANR	4556582	CFGEntryNode	ENTRY		4556564		True				
ANR	4556583	CFGExitNode	EXIT		4556564		True				
ANR	4556584	Symbol	len		4556564						
ANR	4556585	Function	MyString :: init	716:0:14193:14313							
ANR	4556586	FunctionDef	MyString :: init ()		4556585	0					
ANR	4556587	CompoundStatement		718:0:14215:14313	4556585	0					
ANR	4556588	ExpressionStatement	Data = NULL	719:4:14221:14230	4556585	0	True				
ANR	4556589	AssignmentExpression	Data = NULL		4556585	0		=			
ANR	4556590	Identifier	Data		4556585	0					
ANR	4556591	Identifier	NULL		4556585	1					
ANR	4556592	ExpressionStatement	Len = 0	720:4:14236:14241	4556585	1	True				
ANR	4556593	AssignmentExpression	Len = 0		4556585	0		=			
ANR	4556594	Identifier	Len		4556585	0					
ANR	4556595	PrimaryExpression	0		4556585	1					
ANR	4556596	ExpressionStatement	capacity = 0	721:4:14247:14259	4556585	2	True				
ANR	4556597	AssignmentExpression	capacity = 0		4556585	0		=			
ANR	4556598	Identifier	capacity		4556585	0					
ANR	4556599	PrimaryExpression	0		4556585	1					
ANR	4556600	ExpressionStatement	tokenBuf = NULL	722:1:14262:14277	4556585	3	True				
ANR	4556601	AssignmentExpression	tokenBuf = NULL		4556585	0		=			
ANR	4556602	Identifier	tokenBuf		4556585	0					
ANR	4556603	Identifier	NULL		4556585	1					
ANR	4556604	ExpressionStatement	nextToken = NULL	723:1:14280:14296	4556585	4	True				
ANR	4556605	AssignmentExpression	nextToken = NULL		4556585	0		=			
ANR	4556606	Identifier	nextToken		4556585	0					
ANR	4556607	Identifier	NULL		4556585	1					
ANR	4556608	ExpressionStatement	dummy = '\\0'	724:1:14299:14311	4556585	5	True				
ANR	4556609	AssignmentExpression	dummy = '\\0'		4556585	0		=			
ANR	4556610	Identifier	dummy		4556585	0					
ANR	4556611	PrimaryExpression	'\\0'		4556585	1					
ANR	4556612	ReturnType	void		4556585	1					
ANR	4556613	Identifier	MyString :: init		4556585	2					
ANR	4556614	ParameterList			4556585	3					
ANR	4556615	CFGEntryNode	ENTRY		4556585		True				
ANR	4556616	CFGExitNode	EXIT		4556585		True				
ANR	4556617	Symbol	dummy		4556585						
ANR	4556618	Symbol	NULL		4556585						
ANR	4556619	Symbol	Len		4556585						
ANR	4556620	Symbol	nextToken		4556585						
ANR	4556621	Symbol	Data		4556585						
ANR	4556622	Symbol	tokenBuf		4556585						
ANR	4556623	Symbol	capacity		4556585						
ANR	4556624	Function	operator ==	733:0:14483:14770							
ANR	4556625	FunctionDef	"operator == (const MyString & S1 , const MyString & S2)"		4556624	0					
ANR	4556626	CompoundStatement		734:0:14539:14770	4556624	0					
ANR	4556627	IfStatement	if ( ( ! S1 . Data || ! S1 . Len ) && ( ! S2 . Data || ! S2 . Len ) )		4556624	0					
ANR	4556628	Condition	( ! S1 . Data || ! S1 . Len ) && ( ! S2 . Data || ! S2 . Len )	735:8:14549:14594	4556624	0	True				
ANR	4556629	AndExpression	( ! S1 . Data || ! S1 . Len ) && ( ! S2 . Data || ! S2 . Len )		4556624	0		&&			
ANR	4556630	OrExpression	! S1 . Data || ! S1 . Len		4556624	0		||			
ANR	4556631	UnaryOperationExpression	! S1 . Data		4556624	0					
ANR	4556632	UnaryOperator	!		4556624	0					
ANR	4556633	MemberAccess	S1 . Data		4556624	1					
ANR	4556634	Identifier	S1		4556624	0					
ANR	4556635	Identifier	Data		4556624	1					
ANR	4556636	UnaryOperationExpression	! S1 . Len		4556624	1					
ANR	4556637	UnaryOperator	!		4556624	0					
ANR	4556638	MemberAccess	S1 . Len		4556624	1					
ANR	4556639	Identifier	S1		4556624	0					
ANR	4556640	Identifier	Len		4556624	1					
ANR	4556641	OrExpression	! S2 . Data || ! S2 . Len		4556624	1		||			
ANR	4556642	UnaryOperationExpression	! S2 . Data		4556624	0					
ANR	4556643	UnaryOperator	!		4556624	0					
ANR	4556644	MemberAccess	S2 . Data		4556624	1					
ANR	4556645	Identifier	S2		4556624	0					
ANR	4556646	Identifier	Data		4556624	1					
ANR	4556647	UnaryOperationExpression	! S2 . Len		4556624	1					
ANR	4556648	UnaryOperator	!		4556624	0					
ANR	4556649	MemberAccess	S2 . Len		4556624	1					
ANR	4556650	Identifier	S2		4556624	0					
ANR	4556651	Identifier	Len		4556624	1					
ANR	4556652	CompoundStatement		2:56:57:57	4556624	1					
ANR	4556653	ReturnStatement	return 1 ;	736:2:14601:14609	4556624	0	True				
ANR	4556654	PrimaryExpression	1		4556624	0					
ANR	4556655	IfStatement	if ( ! S1 . Data || ! S2 . Data )		4556624	1					
ANR	4556656	Condition	! S1 . Data || ! S2 . Data	738:8:14622:14641	4556624	0	True				
ANR	4556657	OrExpression	! S1 . Data || ! S2 . Data		4556624	0		||			
ANR	4556658	UnaryOperationExpression	! S1 . Data		4556624	0					
ANR	4556659	UnaryOperator	!		4556624	0					
ANR	4556660	MemberAccess	S1 . Data		4556624	1					
ANR	4556661	Identifier	S1		4556624	0					
ANR	4556662	Identifier	Data		4556624	1					
ANR	4556663	UnaryOperationExpression	! S2 . Data		4556624	1					
ANR	4556664	UnaryOperator	!		4556624	0					
ANR	4556665	MemberAccess	S2 . Data		4556624	1					
ANR	4556666	Identifier	S2		4556624	0					
ANR	4556667	Identifier	Data		4556624	1					
ANR	4556668	CompoundStatement		5:30:104:104	4556624	1					
ANR	4556669	ReturnStatement	return 0 ;	739:2:14648:14656	4556624	0	True				
ANR	4556670	PrimaryExpression	0		4556624	0					
ANR	4556671	IfStatement	if ( S1 . Len != S2 . Len )		4556624	2					
ANR	4556672	Condition	S1 . Len != S2 . Len	741:5:14666:14681	4556624	0	True				
ANR	4556673	EqualityExpression	S1 . Len != S2 . Len		4556624	0		!=			
ANR	4556674	MemberAccess	S1 . Len		4556624	0					
ANR	4556675	Identifier	S1		4556624	0					
ANR	4556676	Identifier	Len		4556624	1					
ANR	4556677	MemberAccess	S2 . Len		4556624	1					
ANR	4556678	Identifier	S2		4556624	0					
ANR	4556679	Identifier	Len		4556624	1					
ANR	4556680	CompoundStatement		8:23:144:144	4556624	1					
ANR	4556681	ReturnStatement	return 0 ;	742:2:14688:14696	4556624	0	True				
ANR	4556682	PrimaryExpression	0		4556624	0					
ANR	4556683	IfStatement	"if ( strcmp ( S1 . Data , S2 . Data ) == 0 )"		4556624	3					
ANR	4556684	Condition	"strcmp ( S1 . Data , S2 . Data ) == 0"	745:8:14710:14735	4556624	0	True				
ANR	4556685	EqualityExpression	"strcmp ( S1 . Data , S2 . Data ) == 0"		4556624	0		==			
ANR	4556686	CallExpression	"strcmp ( S1 . Data , S2 . Data )"		4556624	0					
ANR	4556687	Callee	strcmp		4556624	0					
ANR	4556688	Identifier	strcmp		4556624	0					
ANR	4556689	ArgumentList	S1 . Data		4556624	1					
ANR	4556690	Argument	S1 . Data		4556624	0					
ANR	4556691	MemberAccess	S1 . Data		4556624	0					
ANR	4556692	Identifier	S1		4556624	0					
ANR	4556693	Identifier	Data		4556624	1					
ANR	4556694	Argument	S2 . Data		4556624	1					
ANR	4556695	MemberAccess	S2 . Data		4556624	0					
ANR	4556696	Identifier	S2		4556624	0					
ANR	4556697	Identifier	Data		4556624	1					
ANR	4556698	PrimaryExpression	0		4556624	1					
ANR	4556699	CompoundStatement		12:36:198:198	4556624	1					
ANR	4556700	ReturnStatement	return 1 ;	746:2:14743:14751	4556624	0	True				
ANR	4556701	PrimaryExpression	1		4556624	0					
ANR	4556702	ReturnStatement	return 0 ;	748:4:14760:14768	4556624	4	True				
ANR	4556703	PrimaryExpression	0		4556624	0					
ANR	4556704	ReturnType	int		4556624	1					
ANR	4556705	Identifier	operator ==		4556624	2					
ANR	4556706	ParameterList	"const MyString & S1 , const MyString & S2"		4556624	3					
ANR	4556707	Parameter	const MyString & S1	733:15:14498:14515	4556624	0	True				
ANR	4556708	ParameterType	const MyString &		4556624	0					
ANR	4556709	Identifier	S1		4556624	1					
ANR	4556710	Parameter	const MyString & S2	733:35:14518:14535	4556624	1	True				
ANR	4556711	ParameterType	const MyString &		4556624	0					
ANR	4556712	Identifier	S2		4556624	1					
ANR	4556713	CFGEntryNode	ENTRY		4556624		True				
ANR	4556714	CFGExitNode	EXIT		4556624		True				
ANR	4556715	Symbol	strcmp		4556624						
ANR	4556716	Symbol	S1 . Len		4556624						
ANR	4556717	Symbol	S2 . Data		4556624						
ANR	4556718	Symbol	S1 . Data		4556624						
ANR	4556719	Symbol	S1		4556624						
ANR	4556720	Symbol	S2 . Len		4556624						
ANR	4556721	Symbol	S2		4556624						
ANR	4556722	Function	operator ==	751:0:14773:15010							
ANR	4556723	FunctionDef	"operator == (const MyString & S1 , const char * S2)"		4556722	0					
ANR	4556724	CompoundStatement		752:0:14825:15010	4556722	0					
ANR	4556725	IfStatement	if ( ( ! S1 . Data || ! S1 . Length ( ) ) && ( ! S2 || ! strlen ( S2 ) ) )		4556722	0					
ANR	4556726	Condition	( ! S1 . Data || ! S1 . Length ( ) ) && ( ! S2 || ! strlen ( S2 ) )	753:8:14835:14884	4556722	0	True				
ANR	4556727	AndExpression	( ! S1 . Data || ! S1 . Length ( ) ) && ( ! S2 || ! strlen ( S2 ) )		4556722	0		&&			
ANR	4556728	OrExpression	! S1 . Data || ! S1 . Length ( )		4556722	0		||			
ANR	4556729	UnaryOperationExpression	! S1 . Data		4556722	0					
ANR	4556730	UnaryOperator	!		4556722	0					
ANR	4556731	MemberAccess	S1 . Data		4556722	1					
ANR	4556732	Identifier	S1		4556722	0					
ANR	4556733	Identifier	Data		4556722	1					
ANR	4556734	UnaryOperationExpression	! S1 . Length ( )		4556722	1					
ANR	4556735	UnaryOperator	!		4556722	0					
ANR	4556736	CallExpression	S1 . Length ( )		4556722	1					
ANR	4556737	Callee	S1 . Length		4556722	0					
ANR	4556738	MemberAccess	S1 . Length		4556722	0					
ANR	4556739	Identifier	S1		4556722	0					
ANR	4556740	Identifier	Length		4556722	1					
ANR	4556741	ArgumentList			4556722	1					
ANR	4556742	OrExpression	! S2 || ! strlen ( S2 )		4556722	1		||			
ANR	4556743	UnaryOperationExpression	! S2		4556722	0					
ANR	4556744	UnaryOperator	!		4556722	0					
ANR	4556745	Identifier	S2		4556722	1					
ANR	4556746	UnaryOperationExpression	! strlen ( S2 )		4556722	1					
ANR	4556747	UnaryOperator	!		4556722	0					
ANR	4556748	CallExpression	strlen ( S2 )		4556722	1					
ANR	4556749	Callee	strlen		4556722	0					
ANR	4556750	Identifier	strlen		4556722	0					
ANR	4556751	ArgumentList	S2		4556722	1					
ANR	4556752	Argument	S2		4556722	0					
ANR	4556753	Identifier	S2		4556722	0					
ANR	4556754	CompoundStatement		2:60:61:61	4556722	1					
ANR	4556755	ReturnStatement	return 1 ;	754:2:14891:14899	4556722	0	True				
ANR	4556756	PrimaryExpression	1		4556722	0					
ANR	4556757	IfStatement	if ( ! S1 . Data || ! S2 )		4556722	1					
ANR	4556758	Condition	! S1 . Data || ! S2	756:8:14912:14926	4556722	0	True				
ANR	4556759	OrExpression	! S1 . Data || ! S2		4556722	0		||			
ANR	4556760	UnaryOperationExpression	! S1 . Data		4556722	0					
ANR	4556761	UnaryOperator	!		4556722	0					
ANR	4556762	MemberAccess	S1 . Data		4556722	1					
ANR	4556763	Identifier	S1		4556722	0					
ANR	4556764	Identifier	Data		4556722	1					
ANR	4556765	UnaryOperationExpression	! S2		4556722	1					
ANR	4556766	UnaryOperator	!		4556722	0					
ANR	4556767	Identifier	S2		4556722	1					
ANR	4556768	CompoundStatement		5:25:103:103	4556722	1					
ANR	4556769	ReturnStatement	return 0 ;	757:2:14933:14941	4556722	0	True				
ANR	4556770	PrimaryExpression	0		4556722	0					
ANR	4556771	IfStatement	"if ( strcmp ( S1 . Data , S2 ) == 0 )"		4556722	2					
ANR	4556772	Condition	"strcmp ( S1 . Data , S2 ) == 0"	759:8:14954:14974	4556722	0	True				
ANR	4556773	EqualityExpression	"strcmp ( S1 . Data , S2 ) == 0"		4556722	0		==			
ANR	4556774	CallExpression	"strcmp ( S1 . Data , S2 )"		4556722	0					
ANR	4556775	Callee	strcmp		4556722	0					
ANR	4556776	Identifier	strcmp		4556722	0					
ANR	4556777	ArgumentList	S1 . Data		4556722	1					
ANR	4556778	Argument	S1 . Data		4556722	0					
ANR	4556779	MemberAccess	S1 . Data		4556722	0					
ANR	4556780	Identifier	S1		4556722	0					
ANR	4556781	Identifier	Data		4556722	1					
ANR	4556782	Argument	S2		4556722	1					
ANR	4556783	Identifier	S2		4556722	0					
ANR	4556784	PrimaryExpression	0		4556722	1					
ANR	4556785	CompoundStatement		8:31:151:151	4556722	1					
ANR	4556786	ReturnStatement	return 1 ;	760:2:14981:14989	4556722	0	True				
ANR	4556787	PrimaryExpression	1		4556722	0					
ANR	4556788	ReturnStatement	return 0 ;	762:4:14998:15006	4556722	3	True				
ANR	4556789	PrimaryExpression	0		4556722	0					
ANR	4556790	ReturnType	int		4556722	1					
ANR	4556791	Identifier	operator ==		4556722	2					
ANR	4556792	ParameterList	"const MyString & S1 , const char * S2"		4556722	3					
ANR	4556793	Parameter	const MyString & S1	751:15:14788:14805	4556722	0	True				
ANR	4556794	ParameterType	const MyString &		4556722	0					
ANR	4556795	Identifier	S1		4556722	1					
ANR	4556796	Parameter	const char * S2	751:35:14808:14821	4556722	1	True				
ANR	4556797	ParameterType	const char *		4556722	0					
ANR	4556798	Identifier	S2		4556722	1					
ANR	4556799	CFGEntryNode	ENTRY		4556722		True				
ANR	4556800	CFGExitNode	EXIT		4556722		True				
ANR	4556801	Symbol	strcmp		4556722						
ANR	4556802	Symbol	strlen		4556722						
ANR	4556803	Symbol	S1 . Length		4556722						
ANR	4556804	Symbol	S1 . Data		4556722						
ANR	4556805	Symbol	S1		4556722						
ANR	4556806	Symbol	S2		4556722						
ANR	4556807	Function	operator ==	765:0:15013:15250							
ANR	4556808	FunctionDef	"operator == (const char * S1 , const MyString & S2)"		4556807	0					
ANR	4556809	CompoundStatement		766:0:15065:15250	4556807	0					
ANR	4556810	IfStatement	if ( ( ! S2 . Data || ! S2 . Length ( ) ) && ( ! S1 || ! strlen ( S1 ) ) )		4556807	0					
ANR	4556811	Condition	( ! S2 . Data || ! S2 . Length ( ) ) && ( ! S1 || ! strlen ( S1 ) )	767:8:15075:15124	4556807	0	True				
ANR	4556812	AndExpression	( ! S2 . Data || ! S2 . Length ( ) ) && ( ! S1 || ! strlen ( S1 ) )		4556807	0		&&			
ANR	4556813	OrExpression	! S2 . Data || ! S2 . Length ( )		4556807	0		||			
ANR	4556814	UnaryOperationExpression	! S2 . Data		4556807	0					
ANR	4556815	UnaryOperator	!		4556807	0					
ANR	4556816	MemberAccess	S2 . Data		4556807	1					
ANR	4556817	Identifier	S2		4556807	0					
ANR	4556818	Identifier	Data		4556807	1					
ANR	4556819	UnaryOperationExpression	! S2 . Length ( )		4556807	1					
ANR	4556820	UnaryOperator	!		4556807	0					
ANR	4556821	CallExpression	S2 . Length ( )		4556807	1					
ANR	4556822	Callee	S2 . Length		4556807	0					
ANR	4556823	MemberAccess	S2 . Length		4556807	0					
ANR	4556824	Identifier	S2		4556807	0					
ANR	4556825	Identifier	Length		4556807	1					
ANR	4556826	ArgumentList			4556807	1					
ANR	4556827	OrExpression	! S1 || ! strlen ( S1 )		4556807	1		||			
ANR	4556828	UnaryOperationExpression	! S1		4556807	0					
ANR	4556829	UnaryOperator	!		4556807	0					
ANR	4556830	Identifier	S1		4556807	1					
ANR	4556831	UnaryOperationExpression	! strlen ( S1 )		4556807	1					
ANR	4556832	UnaryOperator	!		4556807	0					
ANR	4556833	CallExpression	strlen ( S1 )		4556807	1					
ANR	4556834	Callee	strlen		4556807	0					
ANR	4556835	Identifier	strlen		4556807	0					
ANR	4556836	ArgumentList	S1		4556807	1					
ANR	4556837	Argument	S1		4556807	0					
ANR	4556838	Identifier	S1		4556807	0					
ANR	4556839	CompoundStatement		2:60:61:61	4556807	1					
ANR	4556840	ReturnStatement	return 1 ;	768:2:15131:15139	4556807	0	True				
ANR	4556841	PrimaryExpression	1		4556807	0					
ANR	4556842	IfStatement	if ( ! S2 . Data || ! S1 )		4556807	1					
ANR	4556843	Condition	! S2 . Data || ! S1	770:8:15152:15166	4556807	0	True				
ANR	4556844	OrExpression	! S2 . Data || ! S1		4556807	0		||			
ANR	4556845	UnaryOperationExpression	! S2 . Data		4556807	0					
ANR	4556846	UnaryOperator	!		4556807	0					
ANR	4556847	MemberAccess	S2 . Data		4556807	1					
ANR	4556848	Identifier	S2		4556807	0					
ANR	4556849	Identifier	Data		4556807	1					
ANR	4556850	UnaryOperationExpression	! S1		4556807	1					
ANR	4556851	UnaryOperator	!		4556807	0					
ANR	4556852	Identifier	S1		4556807	1					
ANR	4556853	CompoundStatement		5:25:103:103	4556807	1					
ANR	4556854	ReturnStatement	return 0 ;	771:2:15173:15181	4556807	0	True				
ANR	4556855	PrimaryExpression	0		4556807	0					
ANR	4556856	IfStatement	"if ( strcmp ( S2 . Data , S1 ) == 0 )"		4556807	2					
ANR	4556857	Condition	"strcmp ( S2 . Data , S1 ) == 0"	773:8:15194:15214	4556807	0	True				
ANR	4556858	EqualityExpression	"strcmp ( S2 . Data , S1 ) == 0"		4556807	0		==			
ANR	4556859	CallExpression	"strcmp ( S2 . Data , S1 )"		4556807	0					
ANR	4556860	Callee	strcmp		4556807	0					
ANR	4556861	Identifier	strcmp		4556807	0					
ANR	4556862	ArgumentList	S2 . Data		4556807	1					
ANR	4556863	Argument	S2 . Data		4556807	0					
ANR	4556864	MemberAccess	S2 . Data		4556807	0					
ANR	4556865	Identifier	S2		4556807	0					
ANR	4556866	Identifier	Data		4556807	1					
ANR	4556867	Argument	S1		4556807	1					
ANR	4556868	Identifier	S1		4556807	0					
ANR	4556869	PrimaryExpression	0		4556807	1					
ANR	4556870	CompoundStatement		8:31:151:151	4556807	1					
ANR	4556871	ReturnStatement	return 1 ;	774:2:15221:15229	4556807	0	True				
ANR	4556872	PrimaryExpression	1		4556807	0					
ANR	4556873	ReturnStatement	return 0 ;	776:4:15238:15246	4556807	3	True				
ANR	4556874	PrimaryExpression	0		4556807	0					
ANR	4556875	ReturnType	int		4556807	1					
ANR	4556876	Identifier	operator ==		4556807	2					
ANR	4556877	ParameterList	"const char * S1 , const MyString & S2"		4556807	3					
ANR	4556878	Parameter	const char * S1	765:15:15028:15041	4556807	0	True				
ANR	4556879	ParameterType	const char *		4556807	0					
ANR	4556880	Identifier	S1		4556807	1					
ANR	4556881	Parameter	const MyString & S2	765:31:15044:15061	4556807	1	True				
ANR	4556882	ParameterType	const MyString &		4556807	0					
ANR	4556883	Identifier	S2		4556807	1					
ANR	4556884	CFGEntryNode	ENTRY		4556807		True				
ANR	4556885	CFGExitNode	EXIT		4556807		True				
ANR	4556886	Symbol	strcmp		4556807						
ANR	4556887	Symbol	strlen		4556807						
ANR	4556888	Symbol	S2 . Length		4556807						
ANR	4556889	Symbol	S2 . Data		4556807						
ANR	4556890	Symbol	S1		4556807						
ANR	4556891	Symbol	S2		4556807						
ANR	4556892	Function	operator !=	779:0:15253:15341							
ANR	4556893	FunctionDef	"operator != (const MyString & S1 , const MyString & S2)"		4556892	0					
ANR	4556894	CompoundStatement		780:0:15309:15341	4556892	0					
ANR	4556895	ReturnStatement	return ( ( S1 == S2 ) ? 0 : 1 ) ;	781:1:15313:15338	4556892	0	True				
ANR	4556896	ConditionalExpression	( S1 == S2 ) ? 0 : 1		4556892	0					
ANR	4556897	Condition	S1 == S2		4556892	0					
ANR	4556898	EqualityExpression	S1 == S2		4556892	0		==			
ANR	4556899	Identifier	S1		4556892	0					
ANR	4556900	Identifier	S2		4556892	1					
ANR	4556901	PrimaryExpression	0		4556892	1					
ANR	4556902	PrimaryExpression	1		4556892	2					
ANR	4556903	ReturnType	int		4556892	1					
ANR	4556904	Identifier	operator !=		4556892	2					
ANR	4556905	ParameterList	"const MyString & S1 , const MyString & S2"		4556892	3					
ANR	4556906	Parameter	const MyString & S1	779:15:15268:15285	4556892	0	True				
ANR	4556907	ParameterType	const MyString &		4556892	0					
ANR	4556908	Identifier	S1		4556892	1					
ANR	4556909	Parameter	const MyString & S2	779:35:15288:15305	4556892	1	True				
ANR	4556910	ParameterType	const MyString &		4556892	0					
ANR	4556911	Identifier	S2		4556892	1					
ANR	4556912	CFGEntryNode	ENTRY		4556892		True				
ANR	4556913	CFGExitNode	EXIT		4556892		True				
ANR	4556914	Symbol	S1		4556892						
ANR	4556915	Symbol	S2		4556892						
ANR	4556916	Function	operator !=	784:0:15344:15428							
ANR	4556917	FunctionDef	"operator != (const MyString & S1 , const char * S2)"		4556916	0					
ANR	4556918	CompoundStatement		785:0:15396:15428	4556916	0					
ANR	4556919	ReturnStatement	return ( ( S1 == S2 ) ? 0 : 1 ) ;	786:1:15400:15425	4556916	0	True				
ANR	4556920	ConditionalExpression	( S1 == S2 ) ? 0 : 1		4556916	0					
ANR	4556921	Condition	S1 == S2		4556916	0					
ANR	4556922	EqualityExpression	S1 == S2		4556916	0		==			
ANR	4556923	Identifier	S1		4556916	0					
ANR	4556924	Identifier	S2		4556916	1					
ANR	4556925	PrimaryExpression	0		4556916	1					
ANR	4556926	PrimaryExpression	1		4556916	2					
ANR	4556927	ReturnType	int		4556916	1					
ANR	4556928	Identifier	operator !=		4556916	2					
ANR	4556929	ParameterList	"const MyString & S1 , const char * S2"		4556916	3					
ANR	4556930	Parameter	const MyString & S1	784:15:15359:15376	4556916	0	True				
ANR	4556931	ParameterType	const MyString &		4556916	0					
ANR	4556932	Identifier	S1		4556916	1					
ANR	4556933	Parameter	const char * S2	784:35:15379:15392	4556916	1	True				
ANR	4556934	ParameterType	const char *		4556916	0					
ANR	4556935	Identifier	S2		4556916	1					
ANR	4556936	CFGEntryNode	ENTRY		4556916		True				
ANR	4556937	CFGExitNode	EXIT		4556916		True				
ANR	4556938	Symbol	S1		4556916						
ANR	4556939	Symbol	S2		4556916						
ANR	4556940	Function	operator !=	789:0:15431:15515							
ANR	4556941	FunctionDef	"operator != (const char * S1 , const MyString & S2)"		4556940	0					
ANR	4556942	CompoundStatement		790:0:15483:15515	4556940	0					
ANR	4556943	ReturnStatement	return ( ( S1 == S2 ) ? 0 : 1 ) ;	791:1:15487:15512	4556940	0	True				
ANR	4556944	ConditionalExpression	( S1 == S2 ) ? 0 : 1		4556940	0					
ANR	4556945	Condition	S1 == S2		4556940	0					
ANR	4556946	EqualityExpression	S1 == S2		4556940	0		==			
ANR	4556947	Identifier	S1		4556940	0					
ANR	4556948	Identifier	S2		4556940	1					
ANR	4556949	PrimaryExpression	0		4556940	1					
ANR	4556950	PrimaryExpression	1		4556940	2					
ANR	4556951	ReturnType	int		4556940	1					
ANR	4556952	Identifier	operator !=		4556940	2					
ANR	4556953	ParameterList	"const char * S1 , const MyString & S2"		4556940	3					
ANR	4556954	Parameter	const char * S1	789:15:15446:15459	4556940	0	True				
ANR	4556955	ParameterType	const char *		4556940	0					
ANR	4556956	Identifier	S1		4556940	1					
ANR	4556957	Parameter	const MyString & S2	789:31:15462:15479	4556940	1	True				
ANR	4556958	ParameterType	const MyString &		4556940	0					
ANR	4556959	Identifier	S2		4556940	1					
ANR	4556960	CFGEntryNode	ENTRY		4556940		True				
ANR	4556961	CFGExitNode	EXIT		4556940		True				
ANR	4556962	Symbol	S1		4556940						
ANR	4556963	Symbol	S2		4556940						
ANR	4556964	Function	operator <	794:0:15518:15751							
ANR	4556965	FunctionDef	"operator < (const MyString & S1 , const MyString & S2)"		4556964	0					
ANR	4556966	CompoundStatement		795:0:15573:15751	4556964	0					
ANR	4556967	IfStatement	if ( ! S1 . Data && ! S2 . Data )		4556964	0					
ANR	4556968	Condition	! S1 . Data && ! S2 . Data	796:8:15583:15602	4556964	0	True				
ANR	4556969	AndExpression	! S1 . Data && ! S2 . Data		4556964	0		&&			
ANR	4556970	UnaryOperationExpression	! S1 . Data		4556964	0					
ANR	4556971	UnaryOperator	!		4556964	0					
ANR	4556972	MemberAccess	S1 . Data		4556964	1					
ANR	4556973	Identifier	S1		4556964	0					
ANR	4556974	Identifier	Data		4556964	1					
ANR	4556975	UnaryOperationExpression	! S2 . Data		4556964	1					
ANR	4556976	UnaryOperator	!		4556964	0					
ANR	4556977	MemberAccess	S2 . Data		4556964	1					
ANR	4556978	Identifier	S2		4556964	0					
ANR	4556979	Identifier	Data		4556964	1					
ANR	4556980	CompoundStatement		2:30:31:31	4556964	1					
ANR	4556981	ReturnStatement	return 0 ;	797:2:15609:15617	4556964	0	True				
ANR	4556982	PrimaryExpression	0		4556964	0					
ANR	4556983	IfStatement	if ( ! S1 . Data || ! S2 . Data )		4556964	1					
ANR	4556984	Condition	! S1 . Data || ! S2 . Data	799:8:15630:15649	4556964	0	True				
ANR	4556985	OrExpression	! S1 . Data || ! S2 . Data		4556964	0		||			
ANR	4556986	UnaryOperationExpression	! S1 . Data		4556964	0					
ANR	4556987	UnaryOperator	!		4556964	0					
ANR	4556988	MemberAccess	S1 . Data		4556964	1					
ANR	4556989	Identifier	S1		4556964	0					
ANR	4556990	Identifier	Data		4556964	1					
ANR	4556991	UnaryOperationExpression	! S2 . Data		4556964	1					
ANR	4556992	UnaryOperator	!		4556964	0					
ANR	4556993	MemberAccess	S2 . Data		4556964	1					
ANR	4556994	Identifier	S2		4556964	0					
ANR	4556995	Identifier	Data		4556964	1					
ANR	4556996	CompoundStatement		5:30:78:78	4556964	1					
ANR	4556997	ReturnStatement	return ( S1 . Data == NULL ) ;	800:2:15656:15678	4556964	0	True				
ANR	4556998	EqualityExpression	S1 . Data == NULL		4556964	0		==			
ANR	4556999	MemberAccess	S1 . Data		4556964	0					
ANR	4557000	Identifier	S1		4556964	0					
ANR	4557001	Identifier	Data		4556964	1					
ANR	4557002	Identifier	NULL		4556964	1					
ANR	4557003	IfStatement	"if ( strcmp ( S1 . Data , S2 . Data ) < 0 )"		4556964	2					
ANR	4557004	Condition	"strcmp ( S1 . Data , S2 . Data ) < 0"	802:8:15691:15717	4556964	0	True				
ANR	4557005	RelationalExpression	"strcmp ( S1 . Data , S2 . Data ) < 0"		4556964	0		<			
ANR	4557006	CallExpression	"strcmp ( S1 . Data , S2 . Data )"		4556964	0					
ANR	4557007	Callee	strcmp		4556964	0					
ANR	4557008	Identifier	strcmp		4556964	0					
ANR	4557009	ArgumentList	S1 . Data		4556964	1					
ANR	4557010	Argument	S1 . Data		4556964	0					
ANR	4557011	MemberAccess	S1 . Data		4556964	0					
ANR	4557012	Identifier	S1		4556964	0					
ANR	4557013	Identifier	Data		4556964	1					
ANR	4557014	Argument	S2 . Data		4556964	1					
ANR	4557015	MemberAccess	S2 . Data		4556964	0					
ANR	4557016	Identifier	S2		4556964	0					
ANR	4557017	Identifier	Data		4556964	1					
ANR	4557018	PrimaryExpression	0		4556964	1					
ANR	4557019	CompoundStatement		8:37:146:146	4556964	1					
ANR	4557020	ReturnStatement	return 1 ;	803:2:15724:15732	4556964	0	True				
ANR	4557021	PrimaryExpression	1		4556964	0					
ANR	4557022	ReturnStatement	return 0 ;	805:4:15741:15749	4556964	3	True				
ANR	4557023	PrimaryExpression	0		4556964	0					
ANR	4557024	ReturnType	int		4556964	1					
ANR	4557025	Identifier	operator <		4556964	2					
ANR	4557026	ParameterList	"const MyString & S1 , const MyString & S2"		4556964	3					
ANR	4557027	Parameter	const MyString & S1	794:14:15532:15549	4556964	0	True				
ANR	4557028	ParameterType	const MyString &		4556964	0					
ANR	4557029	Identifier	S1		4556964	1					
ANR	4557030	Parameter	const MyString & S2	794:34:15552:15569	4556964	1	True				
ANR	4557031	ParameterType	const MyString &		4556964	0					
ANR	4557032	Identifier	S2		4556964	1					
ANR	4557033	CFGEntryNode	ENTRY		4556964		True				
ANR	4557034	CFGExitNode	EXIT		4556964		True				
ANR	4557035	Symbol	strcmp		4556964						
ANR	4557036	Symbol	NULL		4556964						
ANR	4557037	Symbol	S2 . Data		4556964						
ANR	4557038	Symbol	S1 . Data		4556964						
ANR	4557039	Symbol	S1		4556964						
ANR	4557040	Symbol	S2		4556964						
ANR	4557041	Function	operator <=	808:0:15754:15848							
ANR	4557042	FunctionDef	"operator <= (const MyString & S1 , const MyString & S2)"		4557041	0					
ANR	4557043	CompoundStatement		809:0:15810:15848	4557041	0					
ANR	4557044	ReturnStatement	return ( S1 < S2 ) ? 1 : ( S1 == S2 ) ;	810:1:15814:15845	4557041	0	True				
ANR	4557045	ConditionalExpression	( S1 < S2 ) ? 1 : ( S1 == S2 )		4557041	0					
ANR	4557046	Condition	S1 < S2		4557041	0					
ANR	4557047	RelationalExpression	S1 < S2		4557041	0		<			
ANR	4557048	Identifier	S1		4557041	0					
ANR	4557049	Identifier	S2		4557041	1					
ANR	4557050	PrimaryExpression	1		4557041	1					
ANR	4557051	EqualityExpression	S1 == S2		4557041	2		==			
ANR	4557052	Identifier	S1		4557041	0					
ANR	4557053	Identifier	S2		4557041	1					
ANR	4557054	ReturnType	int		4557041	1					
ANR	4557055	Identifier	operator <=		4557041	2					
ANR	4557056	ParameterList	"const MyString & S1 , const MyString & S2"		4557041	3					
ANR	4557057	Parameter	const MyString & S1	808:15:15769:15786	4557041	0	True				
ANR	4557058	ParameterType	const MyString &		4557041	0					
ANR	4557059	Identifier	S1		4557041	1					
ANR	4557060	Parameter	const MyString & S2	808:35:15789:15806	4557041	1	True				
ANR	4557061	ParameterType	const MyString &		4557041	0					
ANR	4557062	Identifier	S2		4557041	1					
ANR	4557063	CFGEntryNode	ENTRY		4557041		True				
ANR	4557064	CFGExitNode	EXIT		4557041		True				
ANR	4557065	Symbol	S1		4557041						
ANR	4557066	Symbol	S2		4557041						
ANR	4557067	Function	operator >	813:0:15851:15933							
ANR	4557068	FunctionDef	"operator > (const MyString & S1 , const MyString & S2)"		4557067	0					
ANR	4557069	CompoundStatement		814:0:15906:15933	4557067	0					
ANR	4557070	ReturnStatement	return ( ! ( S1 <= S2 ) ) ;	815:1:15910:15930	4557067	0	True				
ANR	4557071	UnaryOperationExpression	! ( S1 <= S2 )		4557067	0					
ANR	4557072	UnaryOperator	!		4557067	0					
ANR	4557073	RelationalExpression	S1 <= S2		4557067	1		<=			
ANR	4557074	Identifier	S1		4557067	0					
ANR	4557075	Identifier	S2		4557067	1					
ANR	4557076	ReturnType	int		4557067	1					
ANR	4557077	Identifier	operator >		4557067	2					
ANR	4557078	ParameterList	"const MyString & S1 , const MyString & S2"		4557067	3					
ANR	4557079	Parameter	const MyString & S1	813:14:15865:15882	4557067	0	True				
ANR	4557080	ParameterType	const MyString &		4557067	0					
ANR	4557081	Identifier	S1		4557067	1					
ANR	4557082	Parameter	const MyString & S2	813:34:15885:15902	4557067	1	True				
ANR	4557083	ParameterType	const MyString &		4557067	0					
ANR	4557084	Identifier	S2		4557067	1					
ANR	4557085	CFGEntryNode	ENTRY		4557067		True				
ANR	4557086	CFGExitNode	EXIT		4557067		True				
ANR	4557087	Symbol	S1		4557067						
ANR	4557088	Symbol	S2		4557067						
ANR	4557089	Function	operator >=	818:0:15936:16016							
ANR	4557090	FunctionDef	"operator >= (const MyString & S1 , const MyString & S2)"		4557089	0					
ANR	4557091	CompoundStatement		819:0:15992:16016	4557089	0					
ANR	4557092	ReturnStatement	return ( ! ( S1 < S2 ) ) ;	820:1:15996:16013	4557089	0	True				
ANR	4557093	UnaryOperationExpression	! ( S1 < S2 )		4557089	0					
ANR	4557094	UnaryOperator	!		4557089	0					
ANR	4557095	RelationalExpression	S1 < S2		4557089	1		<			
ANR	4557096	Identifier	S1		4557089	0					
ANR	4557097	Identifier	S2		4557089	1					
ANR	4557098	ReturnType	int		4557089	1					
ANR	4557099	Identifier	operator >=		4557089	2					
ANR	4557100	ParameterList	"const MyString & S1 , const MyString & S2"		4557089	3					
ANR	4557101	Parameter	const MyString & S1	818:15:15951:15968	4557089	0	True				
ANR	4557102	ParameterType	const MyString &		4557089	0					
ANR	4557103	Identifier	S1		4557089	1					
ANR	4557104	Parameter	const MyString & S2	818:35:15971:15988	4557089	1	True				
ANR	4557105	ParameterType	const MyString &		4557089	0					
ANR	4557106	Identifier	S2		4557089	1					
ANR	4557107	CFGEntryNode	ENTRY		4557089		True				
ANR	4557108	CFGExitNode	EXIT		4557089		True				
ANR	4557109	Symbol	S1		4557089						
ANR	4557110	Symbol	S2		4557089						
ANR	4557111	Function	MyString :: readLine	829:0:16177:16603							
ANR	4557112	FunctionDef	"MyString :: readLine (FILE * fp , bool append)"		4557111	0					
ANR	4557113	CompoundStatement		831:0:16226:16603	4557111	0					
ANR	4557114	IdentifierDeclStatement	char buf [ 1024 ] ;	832:1:16229:16243	4557111	0	True				
ANR	4557115	IdentifierDecl	buf [ 1024 ]		4557111	0					
ANR	4557116	IdentifierDeclType	char [ 1024 ]		4557111	0					
ANR	4557117	Identifier	buf		4557111	1					
ANR	4557118	PrimaryExpression	1024		4557111	2					
ANR	4557119	IdentifierDeclStatement	bool first_time = true ;	833:1:16246:16268	4557111	1	True				
ANR	4557120	IdentifierDecl	first_time = true		4557111	0					
ANR	4557121	IdentifierDeclType	bool		4557111	0					
ANR	4557122	Identifier	first_time		4557111	1					
ANR	4557123	AssignmentExpression	first_time = true		4557111	2		=			
ANR	4557124	Identifier	true		4557111	0					
ANR	4557125	Identifier	true		4557111	1					
ANR	4557126	ExpressionStatement	ASSERT ( fp )	835:1:16272:16284	4557111	2	True				
ANR	4557127	CallExpression	ASSERT ( fp )		4557111	0					
ANR	4557128	Callee	ASSERT		4557111	0					
ANR	4557129	Identifier	ASSERT		4557111	0					
ANR	4557130	ArgumentList	fp		4557111	1					
ANR	4557131	Argument	fp		4557111	0					
ANR	4557132	Identifier	fp		4557111	0					
ANR	4557133	WhileStatement	while ( 1 )		4557111	3					
ANR	4557134	Condition	1	837:8:16295:16295	4557111	0	True				
ANR	4557135	PrimaryExpression	1		4557111	0					
ANR	4557136	CompoundStatement		7:12:72:72	4557111	1					
ANR	4557137	IfStatement	"if ( ! fgets ( buf , 1024 , fp ) )"		4557111	0					
ANR	4557138	Condition	"! fgets ( buf , 1024 , fp )"	838:6:16307:16328	4557111	0	True				
ANR	4557139	UnaryOperationExpression	"! fgets ( buf , 1024 , fp )"		4557111	0					
ANR	4557140	UnaryOperator	!		4557111	0					
ANR	4557141	CallExpression	"fgets ( buf , 1024 , fp )"		4557111	1					
ANR	4557142	Callee	fgets		4557111	0					
ANR	4557143	Identifier	fgets		4557111	0					
ANR	4557144	ArgumentList	buf		4557111	1					
ANR	4557145	Argument	buf		4557111	0					
ANR	4557146	Identifier	buf		4557111	0					
ANR	4557147	Argument	1024		4557111	1					
ANR	4557148	PrimaryExpression	1024		4557111	0					
ANR	4557149	Argument	fp		4557111	2					
ANR	4557150	Identifier	fp		4557111	0					
ANR	4557151	CompoundStatement		8:31:105:105	4557111	1					
ANR	4557152	IfStatement	if ( first_time )		4557111	0					
ANR	4557153	Condition	first_time	839:7:16341:16350	4557111	0	True				
ANR	4557154	Identifier	first_time		4557111	0					
ANR	4557155	CompoundStatement		9:20:127:127	4557111	1					
ANR	4557156	ReturnStatement	return false ;	840:4:16360:16372	4557111	0	True				
ANR	4557157	Identifier	false		4557111	0					
ANR	4557158	ReturnStatement	return true ;	842:3:16382:16393	4557111	1	True				
ANR	4557159	Identifier	true		4557111	0					
ANR	4557160	IfStatement	if ( first_time && ! append )		4557111	1					
ANR	4557161	Condition	first_time && ! append	844:6:16405:16425	4557111	0	True				
ANR	4557162	AndExpression	first_time && ! append		4557111	0		&&			
ANR	4557163	Identifier	first_time		4557111	0					
ANR	4557164	UnaryOperationExpression	! append		4557111	1					
ANR	4557165	UnaryOperator	!		4557111	0					
ANR	4557166	Identifier	append		4557111	1					
ANR	4557167	CompoundStatement		14:29:201:201	4557111	1					
ANR	4557168	ExpressionStatement	* this = buf	845:3:16433:16444	4557111	0	True				
ANR	4557169	AssignmentExpression	* this = buf		4557111	0		=			
ANR	4557170	UnaryOperationExpression	* this		4557111	0					
ANR	4557171	UnaryOperator	*		4557111	0					
ANR	4557172	Identifier	this		4557111	1					
ANR	4557173	Identifier	buf		4557111	1					
ANR	4557174	ExpressionStatement	first_time = false	846:3:16449:16467	4557111	1	True				
ANR	4557175	AssignmentExpression	first_time = false		4557111	0		=			
ANR	4557176	Identifier	first_time		4557111	0					
ANR	4557177	Identifier	false		4557111	1					
ANR	4557178	ElseStatement	else		4557111	0					
ANR	4557179	CompoundStatement		17:9:251:251	4557111	0					
ANR	4557180	ExpressionStatement	* this += buf	848:3:16483:16495	4557111	0	True				
ANR	4557181	AssignmentExpression	* this += buf		4557111	0		+=			
ANR	4557182	UnaryOperationExpression	* this		4557111	0					
ANR	4557183	UnaryOperator	*		4557111	0					
ANR	4557184	Identifier	this		4557111	1					
ANR	4557185	Identifier	buf		4557111	1					
ANR	4557186	IfStatement	if ( Len && Data [ Len - 1 ] == '\\n' )		4557111	2					
ANR	4557187	Condition	Len && Data [ Len - 1 ] == '\\n'	850:6:16507:16532	4557111	0	True				
ANR	4557188	AndExpression	Len && Data [ Len - 1 ] == '\\n'		4557111	0		&&			
ANR	4557189	Identifier	Len		4557111	0					
ANR	4557190	EqualityExpression	Data [ Len - 1 ] == '\\n'		4557111	1		==			
ANR	4557191	ArrayIndexing	Data [ Len - 1 ]		4557111	0					
ANR	4557192	Identifier	Data		4557111	0					
ANR	4557193	AdditiveExpression	Len - 1		4557111	1		-			
ANR	4557194	Identifier	Len		4557111	0					
ANR	4557195	PrimaryExpression	1		4557111	1					
ANR	4557196	PrimaryExpression	'\\n'		4557111	1					
ANR	4557197	CompoundStatement		20:35:309:309	4557111	1					
ANR	4557198	ReturnStatement	return true ;	852:3:16583:16594	4557111	0	True				
ANR	4557199	Identifier	true		4557111	0					
ANR	4557200	ReturnType	bool		4557111	1					
ANR	4557201	Identifier	MyString :: readLine		4557111	2					
ANR	4557202	ParameterList	"FILE * fp , bool append"		4557111	3					
ANR	4557203	Parameter	FILE * fp	830:20:16202:16209	4557111	0	True				
ANR	4557204	ParameterType	FILE *		4557111	0					
ANR	4557205	Identifier	fp		4557111	1					
ANR	4557206	Parameter	bool append	830:30:16212:16222	4557111	1	True				
ANR	4557207	ParameterType	bool		4557111	0					
ANR	4557208	Identifier	append		4557111	1					
ANR	4557209	CFGEntryNode	ENTRY		4557111		True				
ANR	4557210	CFGExitNode	EXIT		4557111		True				
ANR	4557211	Symbol	* Len		4557111						
ANR	4557212	Symbol	false		4557111						
ANR	4557213	Symbol	this		4557111						
ANR	4557214	Symbol	fp		4557111						
ANR	4557215	Symbol	Data		4557111						
ANR	4557216	Symbol	fgets		4557111						
ANR	4557217	Symbol	* Data		4557111						
ANR	4557218	Symbol	* this		4557111						
ANR	4557219	Symbol	buf		4557111						
ANR	4557220	Symbol	Len		4557111						
ANR	4557221	Symbol	first_time		4557111						
ANR	4557222	Symbol	true		4557111						
ANR	4557223	Symbol	append		4557111						
ANR	4557224	Function	MyString :: Tokenize	863:0:16769:16977							
ANR	4557225	FunctionDef	MyString :: Tokenize ()		4557224	0					
ANR	4557226	CompoundStatement		865:0:16795:16977	4557224	0					
ANR	4557227	Statement	delete	866:1:16798:16803	4557224	0	True				
ANR	4557228	Statement	[	866:8:16805:16805	4557224	1	True				
ANR	4557229	Statement	]	866:9:16806:16806	4557224	2	True				
ANR	4557230	ExpressionStatement	tokenBuf	866:11:16808:16816	4557224	3	True				
ANR	4557231	Identifier	tokenBuf		4557224	0					
ANR	4557232	ExpressionStatement	tokenBuf = new char [ strlen ( Value ( ) ) + 1 ]	867:1:16819:16859	4557224	4	True				
ANR	4557233	AssignmentExpression	tokenBuf = new char [ strlen ( Value ( ) ) + 1 ]		4557224	0		=			
ANR	4557234	Identifier	tokenBuf		4557224	0					
ANR	4557235	AdditiveExpression	strlen ( Value ( ) ) + 1		4557224	1		+			
ANR	4557236	CallExpression	strlen ( Value ( ) )		4557224	0					
ANR	4557237	Callee	strlen		4557224	0					
ANR	4557238	Identifier	strlen		4557224	0					
ANR	4557239	ArgumentList	Value ( )		4557224	1					
ANR	4557240	Argument	Value ( )		4557224	0					
ANR	4557241	CallExpression	Value ( )		4557224	0					
ANR	4557242	Callee	Value		4557224	0					
ANR	4557243	Identifier	Value		4557224	0					
ANR	4557244	ArgumentList			4557224	1					
ANR	4557245	PrimaryExpression	1		4557224	1					
ANR	4557246	ExpressionStatement	"strcpy ( tokenBuf , Value ( ) )"	868:1:16862:16887	4557224	5	True				
ANR	4557247	CallExpression	"strcpy ( tokenBuf , Value ( ) )"		4557224	0					
ANR	4557248	Callee	strcpy		4557224	0					
ANR	4557249	Identifier	strcpy		4557224	0					
ANR	4557250	ArgumentList	tokenBuf		4557224	1					
ANR	4557251	Argument	tokenBuf		4557224	0					
ANR	4557252	Identifier	tokenBuf		4557224	0					
ANR	4557253	Argument	Value ( )		4557224	1					
ANR	4557254	CallExpression	Value ( )		4557224	0					
ANR	4557255	Callee	Value		4557224	0					
ANR	4557256	Identifier	Value		4557224	0					
ANR	4557257	ArgumentList			4557224	1					
ANR	4557258	IfStatement	if ( strlen ( tokenBuf ) > 0 )		4557224	6					
ANR	4557259	Condition	strlen ( tokenBuf ) > 0	869:6:16895:16914	4557224	0	True				
ANR	4557260	RelationalExpression	strlen ( tokenBuf ) > 0		4557224	0		>			
ANR	4557261	CallExpression	strlen ( tokenBuf )		4557224	0					
ANR	4557262	Callee	strlen		4557224	0					
ANR	4557263	Identifier	strlen		4557224	0					
ANR	4557264	ArgumentList	tokenBuf		4557224	1					
ANR	4557265	Argument	tokenBuf		4557224	0					
ANR	4557266	Identifier	tokenBuf		4557224	0					
ANR	4557267	PrimaryExpression	0		4557224	1					
ANR	4557268	CompoundStatement		5:29:122:122	4557224	1					
ANR	4557269	ExpressionStatement	nextToken = tokenBuf	870:2:16922:16942	4557224	0	True				
ANR	4557270	AssignmentExpression	nextToken = tokenBuf		4557224	0		=			
ANR	4557271	Identifier	nextToken		4557224	0					
ANR	4557272	Identifier	tokenBuf		4557224	1					
ANR	4557273	ElseStatement	else		4557224	0					
ANR	4557274	CompoundStatement		7:8:156:156	4557224	0					
ANR	4557275	ExpressionStatement	nextToken = NULL	872:2:16956:16972	4557224	0	True				
ANR	4557276	AssignmentExpression	nextToken = NULL		4557224	0		=			
ANR	4557277	Identifier	nextToken		4557224	0					
ANR	4557278	Identifier	NULL		4557224	1					
ANR	4557279	ReturnType	void		4557224	1					
ANR	4557280	Identifier	MyString :: Tokenize		4557224	2					
ANR	4557281	ParameterList			4557224	3					
ANR	4557282	CFGEntryNode	ENTRY		4557224		True				
ANR	4557283	CFGExitNode	EXIT		4557224		True				
ANR	4557284	Symbol	strlen		4557224						
ANR	4557285	Symbol	NULL		4557224						
ANR	4557286	Symbol	nextToken		4557224						
ANR	4557287	Symbol	Value		4557224						
ANR	4557288	Symbol	tokenBuf		4557224						
ANR	4557289	Function	MyString :: GetNextToken	876:0:16980:17497							
ANR	4557290	FunctionDef	"MyString :: GetNextToken (const char * delim , bool skipBlankTokens)"		4557289	0					
ANR	4557291	CompoundStatement		878:0:17057:17497	4557289	0					
ANR	4557292	IdentifierDeclStatement	const char * result = nextToken ;	879:1:17060:17090	4557289	0	True				
ANR	4557293	IdentifierDecl	* result = nextToken		4557289	0					
ANR	4557294	IdentifierDeclType	const char *		4557289	0					
ANR	4557295	Identifier	result		4557289	1					
ANR	4557296	AssignmentExpression	* result = nextToken		4557289	2		=			
ANR	4557297	Identifier	nextToken		4557289	0					
ANR	4557298	Identifier	nextToken		4557289	1					
ANR	4557299	IfStatement	if ( ! delim || strlen ( delim ) == 0 )		4557289	1					
ANR	4557300	Condition	! delim || strlen ( delim ) == 0	881:6:17099:17126	4557289	0	True				
ANR	4557301	OrExpression	! delim || strlen ( delim ) == 0		4557289	0		||			
ANR	4557302	UnaryOperationExpression	! delim		4557289	0					
ANR	4557303	UnaryOperator	!		4557289	0					
ANR	4557304	Identifier	delim		4557289	1					
ANR	4557305	EqualityExpression	strlen ( delim ) == 0		4557289	1		==			
ANR	4557306	CallExpression	strlen ( delim )		4557289	0					
ANR	4557307	Callee	strlen		4557289	0					
ANR	4557308	Identifier	strlen		4557289	0					
ANR	4557309	ArgumentList	delim		4557289	1					
ANR	4557310	Argument	delim		4557289	0					
ANR	4557311	Identifier	delim		4557289	0					
ANR	4557312	PrimaryExpression	0		4557289	1					
ANR	4557313	ExpressionStatement	result = NULL	881:37:17130:17143	4557289	1	True				
ANR	4557314	AssignmentExpression	result = NULL		4557289	0		=			
ANR	4557315	Identifier	result		4557289	0					
ANR	4557316	Identifier	NULL		4557289	1					
ANR	4557317	IfStatement	if ( result != NULL )		4557289	2					
ANR	4557318	Condition	result != NULL	883:6:17152:17165	4557289	0	True				
ANR	4557319	EqualityExpression	result != NULL		4557289	0		!=			
ANR	4557320	Identifier	result		4557289	0					
ANR	4557321	Identifier	NULL		4557289	1					
ANR	4557322	CompoundStatement		6:23:111:111	4557289	1					
ANR	4557323	WhileStatement	"while ( * nextToken != '\\0' && index ( delim , * nextToken ) == NULL )"		4557289	0					
ANR	4557324	Condition	"* nextToken != '\\0' && index ( delim , * nextToken ) == NULL"	884:10:17181:17234	4557289	0	True				
ANR	4557325	AndExpression	"* nextToken != '\\0' && index ( delim , * nextToken ) == NULL"		4557289	0		&&			
ANR	4557326	EqualityExpression	* nextToken != '\\0'		4557289	0		!=			
ANR	4557327	UnaryOperationExpression	* nextToken		4557289	0					
ANR	4557328	UnaryOperator	*		4557289	0					
ANR	4557329	Identifier	nextToken		4557289	1					
ANR	4557330	PrimaryExpression	'\\0'		4557289	1					
ANR	4557331	EqualityExpression	"index ( delim , * nextToken ) == NULL"		4557289	1		==			
ANR	4557332	CallExpression	"index ( delim , * nextToken )"		4557289	0					
ANR	4557333	Callee	index		4557289	0					
ANR	4557334	Identifier	index		4557289	0					
ANR	4557335	ArgumentList	delim		4557289	1					
ANR	4557336	Argument	delim		4557289	0					
ANR	4557337	Identifier	delim		4557289	0					
ANR	4557338	Argument	* nextToken		4557289	1					
ANR	4557339	UnaryOperationExpression	* nextToken		4557289	0					
ANR	4557340	UnaryOperator	*		4557289	0					
ANR	4557341	Identifier	nextToken		4557289	1					
ANR	4557342	Identifier	NULL		4557289	1					
ANR	4557343	CompoundStatement		7:67:180:180	4557289	1					
ANR	4557344	ExpressionStatement	nextToken ++	885:3:17243:17254	4557289	0	True				
ANR	4557345	PostIncDecOperationExpression	nextToken ++		4557289	0					
ANR	4557346	Identifier	nextToken		4557289	0					
ANR	4557347	IncDec	++		4557289	1					
ANR	4557348	IfStatement	if ( * nextToken != '\\0' )		4557289	1					
ANR	4557349	Condition	* nextToken != '\\0'	888:7:17268:17285	4557289	0	True				
ANR	4557350	EqualityExpression	* nextToken != '\\0'		4557289	0		!=			
ANR	4557351	UnaryOperationExpression	* nextToken		4557289	0					
ANR	4557352	UnaryOperator	*		4557289	0					
ANR	4557353	Identifier	nextToken		4557289	1					
ANR	4557354	PrimaryExpression	'\\0'		4557289	1					
ANR	4557355	CompoundStatement		11:28:231:231	4557289	1					
ANR	4557356	ExpressionStatement	* nextToken = '\\0'	889:3:17294:17311	4557289	0	True				
ANR	4557357	AssignmentExpression	* nextToken = '\\0'		4557289	0		=			
ANR	4557358	UnaryOperationExpression	* nextToken		4557289	0					
ANR	4557359	UnaryOperator	*		4557289	0					
ANR	4557360	Identifier	nextToken		4557289	1					
ANR	4557361	PrimaryExpression	'\\0'		4557289	1					
ANR	4557362	ExpressionStatement	nextToken ++	890:3:17316:17327	4557289	1	True				
ANR	4557363	PostIncDecOperationExpression	nextToken ++		4557289	0					
ANR	4557364	Identifier	nextToken		4557289	0					
ANR	4557365	IncDec	++		4557289	1					
ANR	4557366	ElseStatement	else		4557289	0					
ANR	4557367	CompoundStatement		14:9:280:280	4557289	0					
ANR	4557368	ExpressionStatement	nextToken = NULL	892:3:17343:17359	4557289	0	True				
ANR	4557369	AssignmentExpression	nextToken = NULL		4557289	0		=			
ANR	4557370	Identifier	nextToken		4557289	0					
ANR	4557371	Identifier	NULL		4557289	1					
ANR	4557372	IfStatement	if ( skipBlankTokens && result && strlen ( result ) == 0 )		4557289	3					
ANR	4557373	Condition	skipBlankTokens && result && strlen ( result ) == 0	896:6:17375:17422	4557289	0	True				
ANR	4557374	AndExpression	skipBlankTokens && result && strlen ( result ) == 0		4557289	0		&&			
ANR	4557375	Identifier	skipBlankTokens		4557289	0					
ANR	4557376	AndExpression	result && strlen ( result ) == 0		4557289	1		&&			
ANR	4557377	Identifier	result		4557289	0					
ANR	4557378	EqualityExpression	strlen ( result ) == 0		4557289	1		==			
ANR	4557379	CallExpression	strlen ( result )		4557289	0					
ANR	4557380	Callee	strlen		4557289	0					
ANR	4557381	Identifier	strlen		4557289	0					
ANR	4557382	ArgumentList	result		4557289	1					
ANR	4557383	Argument	result		4557289	0					
ANR	4557384	Identifier	result		4557289	0					
ANR	4557385	PrimaryExpression	0		4557289	1					
ANR	4557386	CompoundStatement		19:57:368:368	4557289	1					
ANR	4557387	ExpressionStatement	"result = GetNextToken ( delim , skipBlankTokens )"	897:2:17430:17475	4557289	0	True				
ANR	4557388	AssignmentExpression	"result = GetNextToken ( delim , skipBlankTokens )"		4557289	0		=			
ANR	4557389	Identifier	result		4557289	0					
ANR	4557390	CallExpression	"GetNextToken ( delim , skipBlankTokens )"		4557289	1					
ANR	4557391	Callee	GetNextToken		4557289	0					
ANR	4557392	Identifier	GetNextToken		4557289	0					
ANR	4557393	ArgumentList	delim		4557289	1					
ANR	4557394	Argument	delim		4557289	0					
ANR	4557395	Identifier	delim		4557289	0					
ANR	4557396	Argument	skipBlankTokens		4557289	1					
ANR	4557397	Identifier	skipBlankTokens		4557289	0					
ANR	4557398	ReturnStatement	return result ;	900:1:17482:17495	4557289	4	True				
ANR	4557399	Identifier	result		4557289	0					
ANR	4557400	ReturnType	const char *		4557289	1					
ANR	4557401	Identifier	MyString :: GetNextToken		4557289	2					
ANR	4557402	ParameterList	"const char * delim , bool skipBlankTokens"		4557289	3					
ANR	4557403	Parameter	const char * delim	877:23:17016:17032	4557289	0	True				
ANR	4557404	ParameterType	const char *		4557289	0					
ANR	4557405	Identifier	delim		4557289	1					
ANR	4557406	Parameter	bool skipBlankTokens	877:42:17035:17054	4557289	1	True				
ANR	4557407	ParameterType	bool		4557289	0					
ANR	4557408	Identifier	skipBlankTokens		4557289	1					
ANR	4557409	CFGEntryNode	ENTRY		4557289		True				
ANR	4557410	CFGExitNode	EXIT		4557289		True				
ANR	4557411	Symbol	result		4557289						
ANR	4557412	Symbol	strlen		4557289						
ANR	4557413	Symbol	NULL		4557289						
ANR	4557414	Symbol	* nextToken		4557289						
ANR	4557415	Symbol	skipBlankTokens		4557289						
ANR	4557416	Symbol	nextToken		4557289						
ANR	4557417	Symbol	GetNextToken		4557289						
ANR	4557418	Symbol	index		4557289						
ANR	4557419	Symbol	delim		4557289						
ANR	4557420	Function	MyStringHash	910:0:17663:17734							
ANR	4557421	FunctionDef	MyStringHash (const MyString & str)		4557420	0					
ANR	4557422	CompoundStatement		911:0:17712:17734	4557420	0					
ANR	4557423	ReturnStatement	return str . Hash ( ) ;	912:1:17715:17732	4557420	0	True				
ANR	4557424	CallExpression	str . Hash ( )		4557420	0					
ANR	4557425	Callee	str . Hash		4557420	0					
ANR	4557426	MemberAccess	str . Hash		4557420	0					
ANR	4557427	Identifier	str		4557420	0					
ANR	4557428	Identifier	Hash		4557420	1					
ANR	4557429	ArgumentList			4557420	1					
ANR	4557430	ReturnType	unsigned int		4557420	1					
ANR	4557431	Identifier	MyStringHash		4557420	2					
ANR	4557432	ParameterList	const MyString & str		4557420	3					
ANR	4557433	Parameter	const MyString & str	910:27:17690:17708	4557420	0	True				
ANR	4557434	ParameterType	const MyString &		4557420	0					
ANR	4557435	Identifier	str		4557420	1					
ANR	4557436	CFGEntryNode	ENTRY		4557420		True				
ANR	4557437	CFGExitNode	EXIT		4557420		True				
ANR	4557438	Symbol	str		4557420						
ANR	4557439	Symbol	str . Hash		4557420						
