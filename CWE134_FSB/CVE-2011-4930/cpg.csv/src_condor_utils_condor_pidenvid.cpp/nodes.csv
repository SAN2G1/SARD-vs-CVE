command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4656649	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_condor_pidenvid.cpp								
ANR	4656650	DeclStmt									
ANR	4656651	Decl							DLL_IMPORT_MAGIC extern char	DLL_IMPORT_MAGIC extern char * *	environ
ANR	4656652	Function	pidenvid_init	28:0:977:1179							
ANR	4656653	FunctionDef	pidenvid_init (PidEnvID * penvid)		4656652	0					
ANR	4656654	CompoundStatement		29:0:1014:1179	4656652	0					
ANR	4656655	ExpressionStatement	"memset ( penvid , 0 , sizeof ( PidEnvID ) )"	31:1:1050:1085	4656652	0	True				
ANR	4656656	CallExpression	"memset ( penvid , 0 , sizeof ( PidEnvID ) )"		4656652	0					
ANR	4656657	Callee	memset		4656652	0					
ANR	4656658	Identifier	memset		4656652	0					
ANR	4656659	ArgumentList	penvid		4656652	1					
ANR	4656660	Argument	penvid		4656652	0					
ANR	4656661	Identifier	penvid		4656652	0					
ANR	4656662	Argument	0		4656652	1					
ANR	4656663	PrimaryExpression	0		4656652	0					
ANR	4656664	Argument	sizeof ( PidEnvID )		4656652	2					
ANR	4656665	SizeofExpression	sizeof ( PidEnvID )		4656652	0					
ANR	4656666	Sizeof	sizeof		4656652	0					
ANR	4656667	SizeofOperand	PidEnvID		4656652	1					
ANR	4656668	ExpressionStatement	penvid -> num = PIDENVID_MAX	34:1:1151:1177	4656652	1	True				
ANR	4656669	AssignmentExpression	penvid -> num = PIDENVID_MAX		4656652	0		=			
ANR	4656670	PtrMemberAccess	penvid -> num		4656652	0					
ANR	4656671	Identifier	penvid		4656652	0					
ANR	4656672	Identifier	num		4656652	1					
ANR	4656673	Identifier	PIDENVID_MAX		4656652	1					
ANR	4656674	ReturnType	void		4656652	1					
ANR	4656675	Identifier	pidenvid_init		4656652	2					
ANR	4656676	ParameterList	PidEnvID * penvid		4656652	3					
ANR	4656677	Parameter	PidEnvID * penvid	28:19:996:1011	4656652	0	True				
ANR	4656678	ParameterType	PidEnvID *		4656652	0					
ANR	4656679	Identifier	penvid		4656652	1					
ANR	4656680	CFGEntryNode	ENTRY		4656652		True				
ANR	4656681	CFGExitNode	EXIT		4656652		True				
ANR	4656682	Symbol	* penvid		4656652						
ANR	4656683	Symbol	penvid -> num		4656652						
ANR	4656684	Symbol	penvid		4656652						
ANR	4656685	Symbol	PIDENVID_MAX		4656652						
ANR	4656686	Function	pidenvid_filter_and_insert	39:0:1280:1851							
ANR	4656687	FunctionDef	"pidenvid_filter_and_insert (PidEnvID * penvid , char * * env)"		4656686	0					
ANR	4656688	CompoundStatement		40:0:1341:1851	4656686	0					
ANR	4656689	IdentifierDeclStatement	int i ;	41:1:1344:1349	4656686	0	True				
ANR	4656690	IdentifierDecl	i		4656686	0					
ANR	4656691	IdentifierDeclType	int		4656686	0					
ANR	4656692	Identifier	i		4656686	1					
ANR	4656693	IdentifierDeclStatement	char * * curr ;	42:1:1352:1363	4656686	1	True				
ANR	4656694	IdentifierDecl	* * curr		4656686	0					
ANR	4656695	IdentifierDeclType	char * *		4656686	0					
ANR	4656696	Identifier	curr		4656686	1					
ANR	4656697	ExpressionStatement	i = 0	44:1:1367:1372	4656686	2	True				
ANR	4656698	AssignmentExpression	i = 0		4656686	0		=			
ANR	4656699	Identifier	i		4656686	0					
ANR	4656700	PrimaryExpression	0		4656686	1					
ANR	4656701	ForStatement	for ( curr = env ; * curr != NULL ; curr ++ )		4656686	3					
ANR	4656702	ForInit	curr = env ;	46:6:1381:1391	4656686	0	True				
ANR	4656703	AssignmentExpression	curr = env		4656686	0		=			
ANR	4656704	Identifier	curr		4656686	0					
ANR	4656705	Identifier	env		4656686	1					
ANR	4656706	Condition	* curr != NULL	46:18:1393:1405	4656686	1	True				
ANR	4656707	EqualityExpression	* curr != NULL		4656686	0		!=			
ANR	4656708	UnaryOperationExpression	* curr		4656686	0					
ANR	4656709	UnaryOperator	*		4656686	0					
ANR	4656710	Identifier	curr		4656686	1					
ANR	4656711	Identifier	NULL		4656686	1					
ANR	4656712	PostIncDecOperationExpression	curr ++	46:33:1408:1413	4656686	2	True				
ANR	4656713	Identifier	curr		4656686	0					
ANR	4656714	IncDec	++		4656686	1					
ANR	4656715	CompoundStatement		7:41:74:74	4656686	3					
ANR	4656716	IfStatement	"if ( strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) ) == 0 )"		4656686	0					
ANR	4656717	Condition	"strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) ) == 0"	48:6:1425:1485	4656686	0	True				
ANR	4656718	EqualityExpression	"strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) ) == 0"		4656686	0		==			
ANR	4656719	CallExpression	"strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) )"		4656686	0					
ANR	4656720	Callee	strncmp		4656686	0					
ANR	4656721	Identifier	strncmp		4656686	0					
ANR	4656722	ArgumentList	* curr		4656686	1					
ANR	4656723	Argument	* curr		4656686	0					
ANR	4656724	UnaryOperationExpression	* curr		4656686	0					
ANR	4656725	UnaryOperator	*		4656686	0					
ANR	4656726	Identifier	curr		4656686	1					
ANR	4656727	Argument	PIDENVID_PREFIX		4656686	1					
ANR	4656728	Identifier	PIDENVID_PREFIX		4656686	0					
ANR	4656729	Argument	strlen ( PIDENVID_PREFIX )		4656686	2					
ANR	4656730	CallExpression	strlen ( PIDENVID_PREFIX )		4656686	0					
ANR	4656731	Callee	strlen		4656686	0					
ANR	4656732	Identifier	strlen		4656686	0					
ANR	4656733	ArgumentList	PIDENVID_PREFIX		4656686	1					
ANR	4656734	Argument	PIDENVID_PREFIX		4656686	0					
ANR	4656735	Identifier	PIDENVID_PREFIX		4656686	0					
ANR	4656736	PrimaryExpression	0		4656686	1					
ANR	4656737	CompoundStatement		9:69:146:146	4656686	1					
ANR	4656738	IfStatement	if ( i == PIDENVID_MAX )		4656686	0					
ANR	4656739	Condition	i == PIDENVID_MAX	50:7:1498:1514	4656686	0	True				
ANR	4656740	EqualityExpression	i == PIDENVID_MAX		4656686	0		==			
ANR	4656741	Identifier	i		4656686	0					
ANR	4656742	Identifier	PIDENVID_MAX		4656686	1					
ANR	4656743	CompoundStatement		11:26:175:175	4656686	1					
ANR	4656744	ReturnStatement	return PIDENVID_NO_SPACE ;	51:4:1523:1547	4656686	0	True				
ANR	4656745	Identifier	PIDENVID_NO_SPACE		4656686	0					
ANR	4656746	IfStatement	if ( ( strlen ( * curr ) + 1 ) >= PIDENVID_ENVID_SIZE )		4656686	1					
ANR	4656747	Condition	( strlen ( * curr ) + 1 ) >= PIDENVID_ENVID_SIZE	54:7:1562:1603	4656686	0	True				
ANR	4656748	RelationalExpression	( strlen ( * curr ) + 1 ) >= PIDENVID_ENVID_SIZE		4656686	0		>=			
ANR	4656749	AdditiveExpression	strlen ( * curr ) + 1		4656686	0		+			
ANR	4656750	CallExpression	strlen ( * curr )		4656686	0					
ANR	4656751	Callee	strlen		4656686	0					
ANR	4656752	Identifier	strlen		4656686	0					
ANR	4656753	ArgumentList	* curr		4656686	1					
ANR	4656754	Argument	* curr		4656686	0					
ANR	4656755	UnaryOperationExpression	* curr		4656686	0					
ANR	4656756	UnaryOperator	*		4656686	0					
ANR	4656757	Identifier	curr		4656686	1					
ANR	4656758	PrimaryExpression	1		4656686	1					
ANR	4656759	Identifier	PIDENVID_ENVID_SIZE		4656686	1					
ANR	4656760	CompoundStatement		15:51:264:264	4656686	1					
ANR	4656761	ReturnStatement	return PIDENVID_OVERSIZED ;	55:4:1612:1637	4656686	0	True				
ANR	4656762	Identifier	PIDENVID_OVERSIZED		4656686	0					
ANR	4656763	ExpressionStatement	"strncpy ( penvid -> ancestors [ i ] . envid , * curr , PIDENVID_ENVID_SIZE )"	58:3:1648:1711	4656686	2	True				
ANR	4656764	CallExpression	"strncpy ( penvid -> ancestors [ i ] . envid , * curr , PIDENVID_ENVID_SIZE )"		4656686	0					
ANR	4656765	Callee	strncpy		4656686	0					
ANR	4656766	Identifier	strncpy		4656686	0					
ANR	4656767	ArgumentList	penvid -> ancestors [ i ] . envid		4656686	1					
ANR	4656768	Argument	penvid -> ancestors [ i ] . envid		4656686	0					
ANR	4656769	MemberAccess	penvid -> ancestors [ i ] . envid		4656686	0					
ANR	4656770	ArrayIndexing	penvid -> ancestors [ i ]		4656686	0					
ANR	4656771	PtrMemberAccess	penvid -> ancestors		4656686	0					
ANR	4656772	Identifier	penvid		4656686	0					
ANR	4656773	Identifier	ancestors		4656686	1					
ANR	4656774	Identifier	i		4656686	1					
ANR	4656775	Identifier	envid		4656686	1					
ANR	4656776	Argument	* curr		4656686	1					
ANR	4656777	UnaryOperationExpression	* curr		4656686	0					
ANR	4656778	UnaryOperator	*		4656686	0					
ANR	4656779	Identifier	curr		4656686	1					
ANR	4656780	Argument	PIDENVID_ENVID_SIZE		4656686	2					
ANR	4656781	Identifier	PIDENVID_ENVID_SIZE		4656686	0					
ANR	4656782	ExpressionStatement	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'	59:3:1716:1772	4656686	3	True				
ANR	4656783	AssignmentExpression	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'		4656686	0		=			
ANR	4656784	ArrayIndexing	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ]		4656686	0					
ANR	4656785	MemberAccess	penvid -> ancestors [ i ] . envid		4656686	0					
ANR	4656786	ArrayIndexing	penvid -> ancestors [ i ]		4656686	0					
ANR	4656787	PtrMemberAccess	penvid -> ancestors		4656686	0					
ANR	4656788	Identifier	penvid		4656686	0					
ANR	4656789	Identifier	ancestors		4656686	1					
ANR	4656790	Identifier	i		4656686	1					
ANR	4656791	Identifier	envid		4656686	1					
ANR	4656792	AdditiveExpression	PIDENVID_ENVID_SIZE - 1		4656686	1		-			
ANR	4656793	Identifier	PIDENVID_ENVID_SIZE		4656686	0					
ANR	4656794	PrimaryExpression	1		4656686	1					
ANR	4656795	PrimaryExpression	'\\0'		4656686	1					
ANR	4656796	ExpressionStatement	penvid -> ancestors [ i ] . active = TRUE	60:3:1777:1811	4656686	4	True				
ANR	4656797	AssignmentExpression	penvid -> ancestors [ i ] . active = TRUE		4656686	0		=			
ANR	4656798	MemberAccess	penvid -> ancestors [ i ] . active		4656686	0					
ANR	4656799	ArrayIndexing	penvid -> ancestors [ i ]		4656686	0					
ANR	4656800	PtrMemberAccess	penvid -> ancestors		4656686	0					
ANR	4656801	Identifier	penvid		4656686	0					
ANR	4656802	Identifier	ancestors		4656686	1					
ANR	4656803	Identifier	i		4656686	1					
ANR	4656804	Identifier	active		4656686	1					
ANR	4656805	Identifier	TRUE		4656686	1					
ANR	4656806	ExpressionStatement	i ++	62:3:1817:1820	4656686	5	True				
ANR	4656807	PostIncDecOperationExpression	i ++		4656686	0					
ANR	4656808	Identifier	i		4656686	0					
ANR	4656809	IncDec	++		4656686	1					
ANR	4656810	ReturnStatement	return PIDENVID_OK ;	66:1:1831:1849	4656686	4	True				
ANR	4656811	Identifier	PIDENVID_OK		4656686	0					
ANR	4656812	ReturnType	int		4656686	1					
ANR	4656813	Identifier	pidenvid_filter_and_insert		4656686	2					
ANR	4656814	ParameterList	"PidEnvID * penvid , char * * env"		4656686	3					
ANR	4656815	Parameter	PidEnvID * penvid	39:31:1311:1326	4656686	0	True				
ANR	4656816	ParameterType	PidEnvID *		4656686	0					
ANR	4656817	Identifier	penvid		4656686	1					
ANR	4656818	Parameter	char * * env	39:49:1329:1338	4656686	1	True				
ANR	4656819	ParameterType	char * *		4656686	0					
ANR	4656820	Identifier	env		4656686	1					
ANR	4656821	CFGEntryNode	ENTRY		4656686		True				
ANR	4656822	CFGExitNode	EXIT		4656686		True				
ANR	4656823	Symbol	* * penvid -> ancestors		4656686						
ANR	4656824	Symbol	* * * penvid		4656686						
ANR	4656825	Symbol	strlen		4656686						
ANR	4656826	Symbol	strncmp		4656686						
ANR	4656827	Symbol	* penvid		4656686						
ANR	4656828	Symbol	penvid -> ancestors [ i ] . active		4656686						
ANR	4656829	Symbol	* PIDENVID_ENVID_SIZE		4656686						
ANR	4656830	Symbol	curr		4656686						
ANR	4656831	Symbol	* penvid -> ancestors [ i ] . envid		4656686						
ANR	4656832	Symbol	* * i		4656686						
ANR	4656833	Symbol	NULL		4656686						
ANR	4656834	Symbol	penvid -> ancestors		4656686						
ANR	4656835	Symbol	i		4656686						
ANR	4656836	Symbol	TRUE		4656686						
ANR	4656837	Symbol	env		4656686						
ANR	4656838	Symbol	penvid -> ancestors [ i ] . envid		4656686						
ANR	4656839	Symbol	PIDENVID_OK		4656686						
ANR	4656840	Symbol	PIDENVID_PREFIX		4656686						
ANR	4656841	Symbol	PIDENVID_ENVID_SIZE		4656686						
ANR	4656842	Symbol	PIDENVID_OVERSIZED		4656686						
ANR	4656843	Symbol	* * penvid		4656686						
ANR	4656844	Symbol	* penvid -> ancestors		4656686						
ANR	4656845	Symbol	* i		4656686						
ANR	4656846	Symbol	* curr		4656686						
ANR	4656847	Symbol	penvid		4656686						
ANR	4656848	Symbol	PIDENVID_NO_SPACE		4656686						
ANR	4656849	Symbol	PIDENVID_MAX		4656686						
ANR	4656850	Function	pidenvid_append	70:0:1928:2538							
ANR	4656851	FunctionDef	"pidenvid_append (PidEnvID * penvid , char * line)"		4656850	0					
ANR	4656852	CompoundStatement		71:0:1978:2538	4656850	0					
ANR	4656853	IdentifierDeclStatement	int i ;	72:1:1981:1986	4656850	0	True				
ANR	4656854	IdentifierDecl	i		4656850	0					
ANR	4656855	IdentifierDeclType	int		4656850	0					
ANR	4656856	Identifier	i		4656850	1					
ANR	4656857	ForStatement	for ( i = 0 ; i < penvid -> num ; i ++ )		4656850	1					
ANR	4656858	ForInit	i = 0 ;	76:6:2048:2053	4656850	0	True				
ANR	4656859	AssignmentExpression	i = 0		4656850	0		=			
ANR	4656860	Identifier	i		4656850	0					
ANR	4656861	PrimaryExpression	0		4656850	1					
ANR	4656862	Condition	i < penvid -> num	76:13:2055:2069	4656850	1	True				
ANR	4656863	RelationalExpression	i < penvid -> num		4656850	0		<			
ANR	4656864	Identifier	i		4656850	0					
ANR	4656865	PtrMemberAccess	penvid -> num		4656850	1					
ANR	4656866	Identifier	penvid		4656850	0					
ANR	4656867	Identifier	num		4656850	1					
ANR	4656868	PostIncDecOperationExpression	i ++	76:30:2072:2074	4656850	2	True				
ANR	4656869	Identifier	i		4656850	0					
ANR	4656870	IncDec	++		4656850	1					
ANR	4656871	CompoundStatement		7:1:99:99	4656850	3					
ANR	4656872	IfStatement	if ( penvid -> ancestors [ i ] . active == FALSE )		4656850	0					
ANR	4656873	Condition	penvid -> ancestors [ i ] . active == FALSE	78:6:2086:2121	4656850	0	True				
ANR	4656874	EqualityExpression	penvid -> ancestors [ i ] . active == FALSE		4656850	0		==			
ANR	4656875	MemberAccess	penvid -> ancestors [ i ] . active		4656850	0					
ANR	4656876	ArrayIndexing	penvid -> ancestors [ i ]		4656850	0					
ANR	4656877	PtrMemberAccess	penvid -> ancestors		4656850	0					
ANR	4656878	Identifier	penvid		4656850	0					
ANR	4656879	Identifier	ancestors		4656850	1					
ANR	4656880	Identifier	i		4656850	1					
ANR	4656881	Identifier	active		4656850	1					
ANR	4656882	Identifier	FALSE		4656850	1					
ANR	4656883	CompoundStatement		8:44:145:145	4656850	1					
ANR	4656884	IfStatement	if ( ( strlen ( line ) + 1 ) >= PIDENVID_ENVID_SIZE )		4656850	0					
ANR	4656885	Condition	( strlen ( line ) + 1 ) >= PIDENVID_ENVID_SIZE	82:7:2229:2269	4656850	0	True				
ANR	4656886	RelationalExpression	( strlen ( line ) + 1 ) >= PIDENVID_ENVID_SIZE		4656850	0		>=			
ANR	4656887	AdditiveExpression	strlen ( line ) + 1		4656850	0		+			
ANR	4656888	CallExpression	strlen ( line )		4656850	0					
ANR	4656889	Callee	strlen		4656850	0					
ANR	4656890	Identifier	strlen		4656850	0					
ANR	4656891	ArgumentList	line		4656850	1					
ANR	4656892	Argument	line		4656850	0					
ANR	4656893	Identifier	line		4656850	0					
ANR	4656894	PrimaryExpression	1		4656850	1					
ANR	4656895	Identifier	PIDENVID_ENVID_SIZE		4656850	1					
ANR	4656896	CompoundStatement		12:50:293:293	4656850	1					
ANR	4656897	ReturnStatement	return PIDENVID_OVERSIZED ;	83:4:2278:2303	4656850	0	True				
ANR	4656898	Identifier	PIDENVID_OVERSIZED		4656850	0					
ANR	4656899	ExpressionStatement	"strncpy ( penvid -> ancestors [ i ] . envid , line , PIDENVID_ENVID_SIZE )"	86:3:2314:2376	4656850	1	True				
ANR	4656900	CallExpression	"strncpy ( penvid -> ancestors [ i ] . envid , line , PIDENVID_ENVID_SIZE )"		4656850	0					
ANR	4656901	Callee	strncpy		4656850	0					
ANR	4656902	Identifier	strncpy		4656850	0					
ANR	4656903	ArgumentList	penvid -> ancestors [ i ] . envid		4656850	1					
ANR	4656904	Argument	penvid -> ancestors [ i ] . envid		4656850	0					
ANR	4656905	MemberAccess	penvid -> ancestors [ i ] . envid		4656850	0					
ANR	4656906	ArrayIndexing	penvid -> ancestors [ i ]		4656850	0					
ANR	4656907	PtrMemberAccess	penvid -> ancestors		4656850	0					
ANR	4656908	Identifier	penvid		4656850	0					
ANR	4656909	Identifier	ancestors		4656850	1					
ANR	4656910	Identifier	i		4656850	1					
ANR	4656911	Identifier	envid		4656850	1					
ANR	4656912	Argument	line		4656850	1					
ANR	4656913	Identifier	line		4656850	0					
ANR	4656914	Argument	PIDENVID_ENVID_SIZE		4656850	2					
ANR	4656915	Identifier	PIDENVID_ENVID_SIZE		4656850	0					
ANR	4656916	ExpressionStatement	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'	87:3:2381:2437	4656850	2	True				
ANR	4656917	AssignmentExpression	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'		4656850	0		=			
ANR	4656918	ArrayIndexing	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ]		4656850	0					
ANR	4656919	MemberAccess	penvid -> ancestors [ i ] . envid		4656850	0					
ANR	4656920	ArrayIndexing	penvid -> ancestors [ i ]		4656850	0					
ANR	4656921	PtrMemberAccess	penvid -> ancestors		4656850	0					
ANR	4656922	Identifier	penvid		4656850	0					
ANR	4656923	Identifier	ancestors		4656850	1					
ANR	4656924	Identifier	i		4656850	1					
ANR	4656925	Identifier	envid		4656850	1					
ANR	4656926	AdditiveExpression	PIDENVID_ENVID_SIZE - 1		4656850	1		-			
ANR	4656927	Identifier	PIDENVID_ENVID_SIZE		4656850	0					
ANR	4656928	PrimaryExpression	1		4656850	1					
ANR	4656929	PrimaryExpression	'\\0'		4656850	1					
ANR	4656930	ExpressionStatement	penvid -> ancestors [ i ] . active = TRUE	88:3:2442:2476	4656850	3	True				
ANR	4656931	AssignmentExpression	penvid -> ancestors [ i ] . active = TRUE		4656850	0		=			
ANR	4656932	MemberAccess	penvid -> ancestors [ i ] . active		4656850	0					
ANR	4656933	ArrayIndexing	penvid -> ancestors [ i ]		4656850	0					
ANR	4656934	PtrMemberAccess	penvid -> ancestors		4656850	0					
ANR	4656935	Identifier	penvid		4656850	0					
ANR	4656936	Identifier	ancestors		4656850	1					
ANR	4656937	Identifier	i		4656850	1					
ANR	4656938	Identifier	active		4656850	1					
ANR	4656939	Identifier	TRUE		4656850	1					
ANR	4656940	ReturnStatement	return PIDENVID_OK ;	90:3:2482:2500	4656850	4	True				
ANR	4656941	Identifier	PIDENVID_OK		4656850	0					
ANR	4656942	ReturnStatement	return PIDENVID_NO_SPACE ;	94:1:2512:2536	4656850	2	True				
ANR	4656943	Identifier	PIDENVID_NO_SPACE		4656850	0					
ANR	4656944	ReturnType	int		4656850	1					
ANR	4656945	Identifier	pidenvid_append		4656850	2					
ANR	4656946	ParameterList	"PidEnvID * penvid , char * line"		4656850	3					
ANR	4656947	Parameter	PidEnvID * penvid	70:20:1948:1963	4656850	0	True				
ANR	4656948	ParameterType	PidEnvID *		4656850	0					
ANR	4656949	Identifier	penvid		4656850	1					
ANR	4656950	Parameter	char * line	70:38:1966:1975	4656850	1	True				
ANR	4656951	ParameterType	char *		4656850	0					
ANR	4656952	Identifier	line		4656850	1					
ANR	4656953	CFGEntryNode	ENTRY		4656850		True				
ANR	4656954	CFGExitNode	EXIT		4656850		True				
ANR	4656955	Symbol	* * i		4656850						
ANR	4656956	Symbol	penvid -> num		4656850						
ANR	4656957	Symbol	penvid -> ancestors		4656850						
ANR	4656958	Symbol	line		4656850						
ANR	4656959	Symbol	* * penvid -> ancestors		4656850						
ANR	4656960	Symbol	i		4656850						
ANR	4656961	Symbol	TRUE		4656850						
ANR	4656962	Symbol	* * * penvid		4656850						
ANR	4656963	Symbol	penvid -> ancestors [ i ] . envid		4656850						
ANR	4656964	Symbol	PIDENVID_OK		4656850						
ANR	4656965	Symbol	* * penvid		4656850						
ANR	4656966	Symbol	strlen		4656850						
ANR	4656967	Symbol	PIDENVID_ENVID_SIZE		4656850						
ANR	4656968	Symbol	PIDENVID_OVERSIZED		4656850						
ANR	4656969	Symbol	* penvid -> ancestors		4656850						
ANR	4656970	Symbol	* i		4656850						
ANR	4656971	Symbol	* penvid		4656850						
ANR	4656972	Symbol	penvid -> ancestors [ i ] . active		4656850						
ANR	4656973	Symbol	penvid		4656850						
ANR	4656974	Symbol	FALSE		4656850						
ANR	4656975	Symbol	* PIDENVID_ENVID_SIZE		4656850						
ANR	4656976	Symbol	PIDENVID_NO_SPACE		4656850						
ANR	4656977	Symbol	* penvid -> ancestors [ i ] . envid		4656850						
ANR	4656978	Function	pidenvid_format_to_envid	99:0:2644:3079							
ANR	4656979	FunctionDef	"pidenvid_format_to_envid (char * dest , unsigned size , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii)"		4656978	0					
ANR	4656980	CompoundStatement		103:0:2782:3079	4656978	0					
ANR	4656981	IfStatement	if ( size > PIDENVID_ENVID_SIZE )		4656978	0					
ANR	4656982	Condition	size > PIDENVID_ENVID_SIZE	104:6:2790:2815	4656978	0	True				
ANR	4656983	RelationalExpression	size > PIDENVID_ENVID_SIZE		4656978	0		>			
ANR	4656984	Identifier	size		4656978	0					
ANR	4656985	Identifier	PIDENVID_ENVID_SIZE		4656978	1					
ANR	4656986	CompoundStatement		2:34:35:35	4656978	1					
ANR	4656987	ReturnStatement	return PIDENVID_OVERSIZED ;	105:2:2822:2847	4656978	0	True				
ANR	4656988	Identifier	PIDENVID_OVERSIZED		4656978	0					
ANR	4656989	ExpressionStatement	"sprintf ( dest , ""%s%d=%d%s%lu%s%u"" , PIDENVID_PREFIX , forker_pid , forked_pid , PIDENVID_SEP , t , PIDENVID_SEP , mii )"	110:1:2937:3055	4656978	1	True				
ANR	4656990	CallExpression	"sprintf ( dest , ""%s%d=%d%s%lu%s%u"" , PIDENVID_PREFIX , forker_pid , forked_pid , PIDENVID_SEP , t , PIDENVID_SEP , mii )"		4656978	0					
ANR	4656991	Callee	sprintf		4656978	0					
ANR	4656992	Identifier	sprintf		4656978	0					
ANR	4656993	ArgumentList	dest		4656978	1					
ANR	4656994	Argument	dest		4656978	0					
ANR	4656995	Identifier	dest		4656978	0					
ANR	4656996	Argument	"""%s%d=%d%s%lu%s%u"""		4656978	1					
ANR	4656997	PrimaryExpression	"""%s%d=%d%s%lu%s%u"""		4656978	0					
ANR	4656998	Argument	PIDENVID_PREFIX		4656978	2					
ANR	4656999	Identifier	PIDENVID_PREFIX		4656978	0					
ANR	4657000	Argument	forker_pid		4656978	3					
ANR	4657001	Identifier	forker_pid		4656978	0					
ANR	4657002	Argument	forked_pid		4656978	4					
ANR	4657003	Identifier	forked_pid		4656978	0					
ANR	4657004	Argument	PIDENVID_SEP		4656978	5					
ANR	4657005	Identifier	PIDENVID_SEP		4656978	0					
ANR	4657006	Argument	t		4656978	6					
ANR	4657007	Identifier	t		4656978	0					
ANR	4657008	Argument	PIDENVID_SEP		4656978	7					
ANR	4657009	Identifier	PIDENVID_SEP		4656978	0					
ANR	4657010	Argument	mii		4656978	8					
ANR	4657011	Identifier	mii		4656978	0					
ANR	4657012	ReturnStatement	return PIDENVID_OK ;	114:1:3059:3077	4656978	2	True				
ANR	4657013	Identifier	PIDENVID_OK		4656978	0					
ANR	4657014	ReturnType	int		4656978	1					
ANR	4657015	Identifier	pidenvid_format_to_envid		4656978	2					
ANR	4657016	ParameterList	"char * dest , unsigned size , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii"		4656978	3					
ANR	4657017	Parameter	char * dest	100:26:2674:2683	4656978	0	True				
ANR	4657018	ParameterType	char *		4656978	0					
ANR	4657019	Identifier	dest		4656978	1					
ANR	4657020	Parameter	unsigned size	100:38:2686:2698	4656978	1	True				
ANR	4657021	ParameterType	unsigned		4656978	0					
ANR	4657022	Identifier	size		4656978	1					
ANR	4657023	Parameter	pid_t forker_pid	101:8:2709:2724	4656978	2	True				
ANR	4657024	ParameterType	pid_t		4656978	0					
ANR	4657025	Identifier	forker_pid		4656978	1					
ANR	4657026	Parameter	pid_t forked_pid	101:26:2727:2742	4656978	3	True				
ANR	4657027	ParameterType	pid_t		4656978	0					
ANR	4657028	Identifier	forked_pid		4656978	1					
ANR	4657029	Parameter	time_t t	102:8:2753:2760	4656978	4	True				
ANR	4657030	ParameterType	time_t		4656978	0					
ANR	4657031	Identifier	t		4656978	1					
ANR	4657032	Parameter	unsigned int mii	102:18:2763:2778	4656978	5	True				
ANR	4657033	ParameterType	unsigned int		4656978	0					
ANR	4657034	Identifier	mii		4656978	1					
ANR	4657035	CFGEntryNode	ENTRY		4656978		True				
ANR	4657036	CFGExitNode	EXIT		4656978		True				
ANR	4657037	Symbol	PIDENVID_PREFIX		4656978						
ANR	4657038	Symbol	PIDENVID_ENVID_SIZE		4656978						
ANR	4657039	Symbol	PIDENVID_OVERSIZED		4656978						
ANR	4657040	Symbol	PIDENVID_SEP		4656978						
ANR	4657041	Symbol	size		4656978						
ANR	4657042	Symbol	t		4656978						
ANR	4657043	Symbol	forker_pid		4656978						
ANR	4657044	Symbol	forked_pid		4656978						
ANR	4657045	Symbol	dest		4656978						
ANR	4657046	Symbol	mii		4656978						
ANR	4657047	Symbol	PIDENVID_OK		4656978						
ANR	4657048	Function	pidenvid_format_from_envid	118:0:3139:3601							
ANR	4657049	FunctionDef	"pidenvid_format_from_envid (char * src , pid_t * forker_pid , pid_t * forked_pid , time_t * t , unsigned int * mii)"		4657048	0					
ANR	4657050	CompoundStatement		120:0:3252:3601	4657048	0					
ANR	4657051	IdentifierDeclStatement	int rval ;	121:1:3255:3263	4657048	0	True				
ANR	4657052	IdentifierDecl	rval		4657048	0					
ANR	4657053	IdentifierDeclType	int		4657048	0					
ANR	4657054	Identifier	rval		4657048	1					
ANR	4657055	Statement	rval	124:1:3329:3332	4657048	1	True				
ANR	4657056	Statement	=	124:6:3334:3334	4657048	2	True				
ANR	4657057	Statement	sscanf	124:8:3336:3341	4657048	3	True				
ANR	4657058	Statement	(	124:14:3342:3342	4657048	4	True				
ANR	4657059	Statement	src	124:15:3343:3345	4657048	5	True				
ANR	4657060	Statement	","	124:18:3346:3346	4657048	6	True				
ANR	4657061	Statement	PIDENVID_PREFIX	125:2:3351:3365	4657048	7	True				
ANR	4657062	Statement	"""%d=%d"""	125:18:3367:3373	4657048	8	True				
ANR	4657063	Statement	PIDENVID_SEP	125:26:3375:3386	4657048	9	True				
ANR	4657064	Statement	"""%lu"""	125:39:3388:3392	4657048	10	True				
ANR	4657065	Statement	PIDENVID_SEP	125:45:3394:3405	4657048	11	True				
ANR	4657066	Statement	"""%u"""	125:58:3407:3410	4657048	12	True				
ANR	4657067	Statement	","	125:62:3411:3411	4657048	13	True				
ANR	4657068	Statement	forker_pid	126:2:3416:3425	4657048	14	True				
ANR	4657069	Statement	","	126:12:3426:3426	4657048	15	True				
ANR	4657070	Statement	forked_pid	126:14:3428:3437	4657048	16	True				
ANR	4657071	Statement	","	126:24:3438:3438	4657048	17	True				
ANR	4657072	Statement	t	126:26:3440:3440	4657048	18	True				
ANR	4657073	Statement	","	126:27:3441:3441	4657048	19	True				
ANR	4657074	Statement	mii	126:29:3443:3445	4657048	20	True				
ANR	4657075	Statement	)	126:32:3446:3446	4657048	21	True				
ANR	4657076	ExpressionStatement		126:33:3447:3447	4657048	22	True				
ANR	4657077	IfStatement	if ( rval == 4 )		4657048	23					
ANR	4657078	Condition	rval == 4	129:5:3532:3540	4657048	0	True				
ANR	4657079	EqualityExpression	rval == 4		4657048	0		==			
ANR	4657080	Identifier	rval		4657048	0					
ANR	4657081	PrimaryExpression	4		4657048	1					
ANR	4657082	CompoundStatement		10:16:290:290	4657048	1					
ANR	4657083	ReturnStatement	return PIDENVID_OK ;	130:2:3547:3565	4657048	0	True				
ANR	4657084	Identifier	PIDENVID_OK		4657048	0					
ANR	4657085	ReturnStatement	return PIDENVID_BAD_FORMAT ;	133:1:3572:3598	4657048	24	True				
ANR	4657086	Identifier	PIDENVID_BAD_FORMAT		4657048	0					
ANR	4657087	ReturnType	int		4657048	1					
ANR	4657088	Identifier	pidenvid_format_from_envid		4657048	2					
ANR	4657089	ParameterList	"char * src , pid_t * forker_pid , pid_t * forked_pid , time_t * t , unsigned int * mii"		4657048	3					
ANR	4657090	Parameter	char * src	118:31:3170:3178	4657048	0	True				
ANR	4657091	ParameterType	char *		4657048	0					
ANR	4657092	Identifier	src		4657048	1					
ANR	4657093	Parameter	pid_t * forker_pid	118:42:3181:3197	4657048	1	True				
ANR	4657094	ParameterType	pid_t *		4657048	0					
ANR	4657095	Identifier	forker_pid		4657048	1					
ANR	4657096	Parameter	pid_t * forked_pid	119:2:3203:3219	4657048	2	True				
ANR	4657097	ParameterType	pid_t *		4657048	0					
ANR	4657098	Identifier	forked_pid		4657048	1					
ANR	4657099	Parameter	time_t * t	119:21:3222:3230	4657048	3	True				
ANR	4657100	ParameterType	time_t *		4657048	0					
ANR	4657101	Identifier	t		4657048	1					
ANR	4657102	Parameter	unsigned int * mii	119:32:3233:3249	4657048	4	True				
ANR	4657103	ParameterType	unsigned int *		4657048	0					
ANR	4657104	Identifier	mii		4657048	1					
ANR	4657105	CFGEntryNode	ENTRY		4657048		True				
ANR	4657106	CFGExitNode	EXIT		4657048		True				
ANR	4657107	Symbol	PIDENVID_BAD_FORMAT		4657048						
ANR	4657108	Symbol	t		4657048						
ANR	4657109	Symbol	src		4657048						
ANR	4657110	Symbol	forker_pid		4657048						
ANR	4657111	Symbol	forked_pid		4657048						
ANR	4657112	Symbol	rval		4657048						
ANR	4657113	Symbol	mii		4657048						
ANR	4657114	Symbol	PIDENVID_OK		4657048						
ANR	4657115	Function	pidenvid_match	143:0:3953:5050							
ANR	4657116	FunctionDef	"pidenvid_match (PidEnvID * left , PidEnvID * right)"		4657115	0					
ANR	4657117	CompoundStatement		144:0:4005:5050	4657115	0					
ANR	4657118	IdentifierDeclStatement	"int l , r ;"	145:1:4008:4016	4657115	0	True				
ANR	4657119	IdentifierDecl	l		4657115	0					
ANR	4657120	IdentifierDeclType	int		4657115	0					
ANR	4657121	Identifier	l		4657115	1					
ANR	4657122	IdentifierDecl	r		4657115	1					
ANR	4657123	IdentifierDeclType	int		4657115	0					
ANR	4657124	Identifier	r		4657115	1					
ANR	4657125	IdentifierDeclStatement	int count ;	146:1:4019:4028	4657115	1	True				
ANR	4657126	IdentifierDecl	count		4657115	0					
ANR	4657127	IdentifierDeclType	int		4657115	0					
ANR	4657128	Identifier	count		4657115	1					
ANR	4657129	ExpressionStatement	count = 0	151:1:4200:4209	4657115	2	True				
ANR	4657130	AssignmentExpression	count = 0		4657115	0		=			
ANR	4657131	Identifier	count		4657115	0					
ANR	4657132	PrimaryExpression	0		4657115	1					
ANR	4657133	ExpressionStatement	l = 0	152:1:4212:4217	4657115	3	True				
ANR	4657134	AssignmentExpression	l = 0		4657115	0		=			
ANR	4657135	Identifier	l		4657115	0					
ANR	4657136	PrimaryExpression	0		4657115	1					
ANR	4657137	ForStatement	for ( l = 0 ; l < left -> num ; l ++ )		4657115	4					
ANR	4657138	ForInit	l = 0 ;	154:6:4226:4231	4657115	0	True				
ANR	4657139	AssignmentExpression	l = 0		4657115	0		=			
ANR	4657140	Identifier	l		4657115	0					
ANR	4657141	PrimaryExpression	0		4657115	1					
ANR	4657142	Condition	l < left -> num	154:13:4233:4245	4657115	1	True				
ANR	4657143	RelationalExpression	l < left -> num		4657115	0		<			
ANR	4657144	Identifier	l		4657115	0					
ANR	4657145	PtrMemberAccess	left -> num		4657115	1					
ANR	4657146	Identifier	left		4657115	0					
ANR	4657147	Identifier	num		4657115	1					
ANR	4657148	PostIncDecOperationExpression	l ++	154:28:4248:4250	4657115	2	True				
ANR	4657149	Identifier	l		4657115	0					
ANR	4657150	IncDec	++		4657115	1					
ANR	4657151	CompoundStatement		11:33:247:247	4657115	3					
ANR	4657152	IfStatement	if ( left -> ancestors [ l ] . active == FALSE )		4657115	0					
ANR	4657153	Condition	left -> ancestors [ l ] . active == FALSE	157:6:4328:4361	4657115	0	True				
ANR	4657154	EqualityExpression	left -> ancestors [ l ] . active == FALSE		4657115	0		==			
ANR	4657155	MemberAccess	left -> ancestors [ l ] . active		4657115	0					
ANR	4657156	ArrayIndexing	left -> ancestors [ l ]		4657115	0					
ANR	4657157	PtrMemberAccess	left -> ancestors		4657115	0					
ANR	4657158	Identifier	left		4657115	0					
ANR	4657159	Identifier	ancestors		4657115	1					
ANR	4657160	Identifier	l		4657115	1					
ANR	4657161	Identifier	active		4657115	1					
ANR	4657162	Identifier	FALSE		4657115	1					
ANR	4657163	CompoundStatement		14:42:358:358	4657115	1					
ANR	4657164	BreakStatement	break ;	158:3:4369:4374	4657115	0	True				
ANR	4657165	ForStatement	for ( r = 0 ; r < right -> num ; r ++ )		4657115	1					
ANR	4657166	ForInit	r = 0 ;	161:7:4389:4394	4657115	0	True				
ANR	4657167	AssignmentExpression	r = 0		4657115	0		=			
ANR	4657168	Identifier	r		4657115	0					
ANR	4657169	PrimaryExpression	0		4657115	1					
ANR	4657170	Condition	r < right -> num	161:14:4396:4409	4657115	1	True				
ANR	4657171	RelationalExpression	r < right -> num		4657115	0		<			
ANR	4657172	Identifier	r		4657115	0					
ANR	4657173	PtrMemberAccess	right -> num		4657115	1					
ANR	4657174	Identifier	right		4657115	0					
ANR	4657175	Identifier	num		4657115	1					
ANR	4657176	PostIncDecOperationExpression	r ++	161:30:4412:4414	4657115	2	True				
ANR	4657177	Identifier	r		4657115	0					
ANR	4657178	IncDec	++		4657115	1					
ANR	4657179	CompoundStatement		18:35:411:411	4657115	3					
ANR	4657180	IfStatement	if ( right -> ancestors [ r ] . active == FALSE )		4657115	0					
ANR	4657181	Condition	right -> ancestors [ r ] . active == FALSE	163:7:4481:4515	4657115	0	True				
ANR	4657182	EqualityExpression	right -> ancestors [ r ] . active == FALSE		4657115	0		==			
ANR	4657183	MemberAccess	right -> ancestors [ r ] . active		4657115	0					
ANR	4657184	ArrayIndexing	right -> ancestors [ r ]		4657115	0					
ANR	4657185	PtrMemberAccess	right -> ancestors		4657115	0					
ANR	4657186	Identifier	right		4657115	0					
ANR	4657187	Identifier	ancestors		4657115	1					
ANR	4657188	Identifier	r		4657115	1					
ANR	4657189	Identifier	active		4657115	1					
ANR	4657190	Identifier	FALSE		4657115	1					
ANR	4657191	CompoundStatement		20:44:512:512	4657115	1					
ANR	4657192	BreakStatement	break ;	164:4:4524:4529	4657115	0	True				
ANR	4657193	IfStatement	"if ( strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE ) == 0 )"		4657115	1					
ANR	4657194	Condition	"strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE ) == 0"	168:7:4598:4689	4657115	0	True				
ANR	4657195	EqualityExpression	"strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE ) == 0"		4657115	0		==			
ANR	4657196	CallExpression	"strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE )"		4657115	0					
ANR	4657197	Callee	strncmp		4657115	0					
ANR	4657198	Identifier	strncmp		4657115	0					
ANR	4657199	ArgumentList	left -> ancestors [ l ] . envid		4657115	1					
ANR	4657200	Argument	left -> ancestors [ l ] . envid		4657115	0					
ANR	4657201	MemberAccess	left -> ancestors [ l ] . envid		4657115	0					
ANR	4657202	ArrayIndexing	left -> ancestors [ l ]		4657115	0					
ANR	4657203	PtrMemberAccess	left -> ancestors		4657115	0					
ANR	4657204	Identifier	left		4657115	0					
ANR	4657205	Identifier	ancestors		4657115	1					
ANR	4657206	Identifier	l		4657115	1					
ANR	4657207	Identifier	envid		4657115	1					
ANR	4657208	Argument	right -> ancestors [ r ] . envid		4657115	1					
ANR	4657209	MemberAccess	right -> ancestors [ r ] . envid		4657115	0					
ANR	4657210	ArrayIndexing	right -> ancestors [ r ]		4657115	0					
ANR	4657211	PtrMemberAccess	right -> ancestors		4657115	0					
ANR	4657212	Identifier	right		4657115	0					
ANR	4657213	Identifier	ancestors		4657115	1					
ANR	4657214	Identifier	r		4657115	1					
ANR	4657215	Identifier	envid		4657115	1					
ANR	4657216	Argument	PIDENVID_ENVID_SIZE		4657115	2					
ANR	4657217	Identifier	PIDENVID_ENVID_SIZE		4657115	0					
ANR	4657218	PrimaryExpression	0		4657115	1					
ANR	4657219	CompoundStatement		26:33:686:686	4657115	1					
ANR	4657220	ExpressionStatement	count ++	170:4:4698:4705	4657115	0	True				
ANR	4657221	PostIncDecOperationExpression	count ++		4657115	0					
ANR	4657222	Identifier	count		4657115	0					
ANR	4657223	IncDec	++		4657115	1					
ANR	4657224	IfStatement	if ( count == l && l != 0 )		4657115	5					
ANR	4657225	Condition	count == l && l != 0	177:5:4827:4846	4657115	0	True				
ANR	4657226	AndExpression	count == l && l != 0		4657115	0		&&			
ANR	4657227	EqualityExpression	count == l		4657115	0		==			
ANR	4657228	Identifier	count		4657115	0					
ANR	4657229	Identifier	l		4657115	1					
ANR	4657230	EqualityExpression	l != 0		4657115	1		!=			
ANR	4657231	Identifier	l		4657115	0					
ANR	4657232	PrimaryExpression	0		4657115	1					
ANR	4657233	CompoundStatement		34:27:843:843	4657115	1					
ANR	4657234	ReturnStatement	return PIDENVID_MATCH ;	178:2:4853:4874	4657115	0	True				
ANR	4657235	Identifier	PIDENVID_MATCH		4657115	0					
ANR	4657236	ReturnStatement	return PIDENVID_NO_MATCH ;	183:1:5024:5048	4657115	6	True				
ANR	4657237	Identifier	PIDENVID_NO_MATCH		4657115	0					
ANR	4657238	ReturnType	int		4657115	1					
ANR	4657239	Identifier	pidenvid_match		4657115	2					
ANR	4657240	ParameterList	"PidEnvID * left , PidEnvID * right"		4657115	3					
ANR	4657241	Parameter	PidEnvID * left	143:19:3972:3985	4657115	0	True				
ANR	4657242	ParameterType	PidEnvID *		4657115	0					
ANR	4657243	Identifier	left		4657115	1					
ANR	4657244	Parameter	PidEnvID * right	143:35:3988:4002	4657115	1	True				
ANR	4657245	ParameterType	PidEnvID *		4657115	0					
ANR	4657246	Identifier	right		4657115	1					
ANR	4657247	CFGEntryNode	ENTRY		4657115		True				
ANR	4657248	CFGExitNode	EXIT		4657115		True				
ANR	4657249	Symbol	* * right		4657115						
ANR	4657250	Symbol	right -> num		4657115						
ANR	4657251	Symbol	* left -> ancestors		4657115						
ANR	4657252	Symbol	strncmp		4657115						
ANR	4657253	Symbol	left -> ancestors [ l ] . envid		4657115						
ANR	4657254	Symbol	left -> ancestors [ l ] . active		4657115						
ANR	4657255	Symbol	left -> num		4657115						
ANR	4657256	Symbol	* left		4657115						
ANR	4657257	Symbol	* right -> ancestors		4657115						
ANR	4657258	Symbol	PIDENVID_NO_MATCH		4657115						
ANR	4657259	Symbol	left -> ancestors		4657115						
ANR	4657260	Symbol	count		4657115						
ANR	4657261	Symbol	* * left		4657115						
ANR	4657262	Symbol	right		4657115						
ANR	4657263	Symbol	right -> ancestors		4657115						
ANR	4657264	Symbol	l		4657115						
ANR	4657265	Symbol	right -> ancestors [ r ] . active		4657115						
ANR	4657266	Symbol	PIDENVID_MATCH		4657115						
ANR	4657267	Symbol	PIDENVID_ENVID_SIZE		4657115						
ANR	4657268	Symbol	r		4657115						
ANR	4657269	Symbol	left		4657115						
ANR	4657270	Symbol	* l		4657115						
ANR	4657271	Symbol	FALSE		4657115						
ANR	4657272	Symbol	right -> ancestors [ r ] . envid		4657115						
ANR	4657273	Symbol	* r		4657115						
ANR	4657274	Symbol	* right		4657115						
ANR	4657275	Function	pidenvid_append_direct	188:0:5180:5601							
ANR	4657276	FunctionDef	"pidenvid_append_direct (PidEnvID * penvid , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii)"		4657275	0					
ANR	4657277	CompoundStatement		190:0:5290:5601	4657275	0					
ANR	4657278	IdentifierDeclStatement	int rval ;	191:1:5293:5301	4657275	0	True				
ANR	4657279	IdentifierDecl	rval		4657275	0					
ANR	4657280	IdentifierDeclType	int		4657275	0					
ANR	4657281	Identifier	rval		4657275	1					
ANR	4657282	IdentifierDeclStatement	char buf [ PIDENVID_ENVID_SIZE ] ;	192:1:5304:5333	4657275	1	True				
ANR	4657283	IdentifierDecl	buf [ PIDENVID_ENVID_SIZE ]		4657275	0					
ANR	4657284	IdentifierDeclType	char [ PIDENVID_ENVID_SIZE ]		4657275	0					
ANR	4657285	Identifier	buf		4657275	1					
ANR	4657286	Identifier	PIDENVID_ENVID_SIZE		4657275	2					
ANR	4657287	ExpressionStatement	"rval = pidenvid_format_to_envid ( buf , PIDENVID_ENVID_SIZE , forker_pid , forked_pid , t , mii )"	194:1:5337:5431	4657275	2	True				
ANR	4657288	AssignmentExpression	"rval = pidenvid_format_to_envid ( buf , PIDENVID_ENVID_SIZE , forker_pid , forked_pid , t , mii )"		4657275	0		=			
ANR	4657289	Identifier	rval		4657275	0					
ANR	4657290	CallExpression	"pidenvid_format_to_envid ( buf , PIDENVID_ENVID_SIZE , forker_pid , forked_pid , t , mii )"		4657275	1					
ANR	4657291	Callee	pidenvid_format_to_envid		4657275	0					
ANR	4657292	Identifier	pidenvid_format_to_envid		4657275	0					
ANR	4657293	ArgumentList	buf		4657275	1					
ANR	4657294	Argument	buf		4657275	0					
ANR	4657295	Identifier	buf		4657275	0					
ANR	4657296	Argument	PIDENVID_ENVID_SIZE		4657275	1					
ANR	4657297	Identifier	PIDENVID_ENVID_SIZE		4657275	0					
ANR	4657298	Argument	forker_pid		4657275	2					
ANR	4657299	Identifier	forker_pid		4657275	0					
ANR	4657300	Argument	forked_pid		4657275	3					
ANR	4657301	Identifier	forked_pid		4657275	0					
ANR	4657302	Argument	t		4657275	4					
ANR	4657303	Identifier	t		4657275	0					
ANR	4657304	Argument	mii		4657275	5					
ANR	4657305	Identifier	mii		4657275	0					
ANR	4657306	IfStatement	if ( rval == PIDENVID_OVERSIZED )		4657275	3					
ANR	4657307	Condition	rval == PIDENVID_OVERSIZED	197:5:5439:5464	4657275	0	True				
ANR	4657308	EqualityExpression	rval == PIDENVID_OVERSIZED		4657275	0		==			
ANR	4657309	Identifier	rval		4657275	0					
ANR	4657310	Identifier	PIDENVID_OVERSIZED		4657275	1					
ANR	4657311	CompoundStatement		8:33:176:176	4657275	1					
ANR	4657312	ReturnStatement	return rval ;	198:2:5471:5482	4657275	0	True				
ANR	4657313	Identifier	rval		4657275	0					
ANR	4657314	ExpressionStatement	"rval = pidenvid_append ( penvid , buf )"	201:1:5489:5524	4657275	4	True				
ANR	4657315	AssignmentExpression	"rval = pidenvid_append ( penvid , buf )"		4657275	0		=			
ANR	4657316	Identifier	rval		4657275	0					
ANR	4657317	CallExpression	"pidenvid_append ( penvid , buf )"		4657275	1					
ANR	4657318	Callee	pidenvid_append		4657275	0					
ANR	4657319	Identifier	pidenvid_append		4657275	0					
ANR	4657320	ArgumentList	penvid		4657275	1					
ANR	4657321	Argument	penvid		4657275	0					
ANR	4657322	Identifier	penvid		4657275	0					
ANR	4657323	Argument	buf		4657275	1					
ANR	4657324	Identifier	buf		4657275	0					
ANR	4657325	IfStatement	if ( rval == PIDENVID_OVERSIZED )		4657275	5					
ANR	4657326	Condition	rval == PIDENVID_OVERSIZED	202:5:5531:5556	4657275	0	True				
ANR	4657327	EqualityExpression	rval == PIDENVID_OVERSIZED		4657275	0		==			
ANR	4657328	Identifier	rval		4657275	0					
ANR	4657329	Identifier	PIDENVID_OVERSIZED		4657275	1					
ANR	4657330	CompoundStatement		13:33:268:268	4657275	1					
ANR	4657331	ReturnStatement	return rval ;	203:2:5563:5574	4657275	0	True				
ANR	4657332	Identifier	rval		4657275	0					
ANR	4657333	ReturnStatement	return PIDENVID_OK ;	206:1:5581:5599	4657275	6	True				
ANR	4657334	Identifier	PIDENVID_OK		4657275	0					
ANR	4657335	ReturnType	int		4657275	1					
ANR	4657336	Identifier	pidenvid_append_direct		4657275	2					
ANR	4657337	ParameterList	"PidEnvID * penvid , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii"		4657275	3					
ANR	4657338	Parameter	PidEnvID * penvid	188:27:5207:5222	4657275	0	True				
ANR	4657339	ParameterType	PidEnvID *		4657275	0					
ANR	4657340	Identifier	penvid		4657275	1					
ANR	4657341	Parameter	pid_t forker_pid	189:1:5226:5241	4657275	1	True				
ANR	4657342	ParameterType	pid_t		4657275	0					
ANR	4657343	Identifier	forker_pid		4657275	1					
ANR	4657344	Parameter	pid_t forked_pid	189:19:5244:5259	4657275	2	True				
ANR	4657345	ParameterType	pid_t		4657275	0					
ANR	4657346	Identifier	forked_pid		4657275	1					
ANR	4657347	Parameter	time_t t	189:37:5262:5269	4657275	3	True				
ANR	4657348	ParameterType	time_t		4657275	0					
ANR	4657349	Identifier	t		4657275	1					
ANR	4657350	Parameter	unsigned int mii	189:47:5272:5287	4657275	4	True				
ANR	4657351	ParameterType	unsigned int		4657275	0					
ANR	4657352	Identifier	mii		4657275	1					
ANR	4657353	CFGEntryNode	ENTRY		4657275		True				
ANR	4657354	CFGExitNode	EXIT		4657275		True				
ANR	4657355	Symbol	PIDENVID_ENVID_SIZE		4657275						
ANR	4657356	Symbol	PIDENVID_OVERSIZED		4657275						
ANR	4657357	Symbol	buf		4657275						
ANR	4657358	Symbol	t		4657275						
ANR	4657359	Symbol	forker_pid		4657275						
ANR	4657360	Symbol	penvid		4657275						
ANR	4657361	Symbol	pidenvid_format_to_envid		4657275						
ANR	4657362	Symbol	pidenvid_append		4657275						
ANR	4657363	Symbol	forked_pid		4657275						
ANR	4657364	Symbol	rval		4657275						
ANR	4657365	Symbol	mii		4657275						
ANR	4657366	Symbol	PIDENVID_OK		4657275						
ANR	4657367	Function	pidenvid_copy	209:0:5604:5988							
ANR	4657368	FunctionDef	"pidenvid_copy (PidEnvID * to , PidEnvID * from)"		4657367	0					
ANR	4657369	CompoundStatement		210:0:5653:5988	4657367	0					
ANR	4657370	IdentifierDeclStatement	int i ;	211:1:5656:5661	4657367	0	True				
ANR	4657371	IdentifierDecl	i		4657367	0					
ANR	4657372	IdentifierDeclType	int		4657367	0					
ANR	4657373	Identifier	i		4657367	1					
ANR	4657374	ExpressionStatement	pidenvid_init ( to )	213:1:5665:5682	4657367	1	True				
ANR	4657375	CallExpression	pidenvid_init ( to )		4657367	0					
ANR	4657376	Callee	pidenvid_init		4657367	0					
ANR	4657377	Identifier	pidenvid_init		4657367	0					
ANR	4657378	ArgumentList	to		4657367	1					
ANR	4657379	Argument	to		4657367	0					
ANR	4657380	Identifier	to		4657367	0					
ANR	4657381	ExpressionStatement	to -> num = from -> num	215:1:5686:5705	4657367	2	True				
ANR	4657382	AssignmentExpression	to -> num = from -> num		4657367	0		=			
ANR	4657383	PtrMemberAccess	to -> num		4657367	0					
ANR	4657384	Identifier	to		4657367	0					
ANR	4657385	Identifier	num		4657367	1					
ANR	4657386	PtrMemberAccess	from -> num		4657367	1					
ANR	4657387	Identifier	from		4657367	0					
ANR	4657388	Identifier	num		4657367	1					
ANR	4657389	ForStatement	for ( i = 0 ; i < from -> num ; i ++ )		4657367	3					
ANR	4657390	ForInit	i = 0 ;	217:6:5714:5719	4657367	0	True				
ANR	4657391	AssignmentExpression	i = 0		4657367	0		=			
ANR	4657392	Identifier	i		4657367	0					
ANR	4657393	PrimaryExpression	0		4657367	1					
ANR	4657394	Condition	i < from -> num	217:13:5721:5733	4657367	1	True				
ANR	4657395	RelationalExpression	i < from -> num		4657367	0		<			
ANR	4657396	Identifier	i		4657367	0					
ANR	4657397	PtrMemberAccess	from -> num		4657367	1					
ANR	4657398	Identifier	from		4657367	0					
ANR	4657399	Identifier	num		4657367	1					
ANR	4657400	PostIncDecOperationExpression	i ++	217:28:5736:5738	4657367	2	True				
ANR	4657401	Identifier	i		4657367	0					
ANR	4657402	IncDec	++		4657367	1					
ANR	4657403	CompoundStatement		8:33:87:87	4657367	3					
ANR	4657404	ExpressionStatement	to -> ancestors [ i ] . active = from -> ancestors [ i ] . active	218:2:5745:5796	4657367	0	True				
ANR	4657405	AssignmentExpression	to -> ancestors [ i ] . active = from -> ancestors [ i ] . active		4657367	0		=			
ANR	4657406	MemberAccess	to -> ancestors [ i ] . active		4657367	0					
ANR	4657407	ArrayIndexing	to -> ancestors [ i ]		4657367	0					
ANR	4657408	PtrMemberAccess	to -> ancestors		4657367	0					
ANR	4657409	Identifier	to		4657367	0					
ANR	4657410	Identifier	ancestors		4657367	1					
ANR	4657411	Identifier	i		4657367	1					
ANR	4657412	Identifier	active		4657367	1					
ANR	4657413	MemberAccess	from -> ancestors [ i ] . active		4657367	1					
ANR	4657414	ArrayIndexing	from -> ancestors [ i ]		4657367	0					
ANR	4657415	PtrMemberAccess	from -> ancestors		4657367	0					
ANR	4657416	Identifier	from		4657367	0					
ANR	4657417	Identifier	ancestors		4657367	1					
ANR	4657418	Identifier	i		4657367	1					
ANR	4657419	Identifier	active		4657367	1					
ANR	4657420	IfStatement	if ( from -> ancestors [ i ] . active == TRUE )		4657367	1					
ANR	4657421	Condition	from -> ancestors [ i ] . active == TRUE	219:6:5804:5836	4657367	0	True				
ANR	4657422	EqualityExpression	from -> ancestors [ i ] . active == TRUE		4657367	0		==			
ANR	4657423	MemberAccess	from -> ancestors [ i ] . active		4657367	0					
ANR	4657424	ArrayIndexing	from -> ancestors [ i ]		4657367	0					
ANR	4657425	PtrMemberAccess	from -> ancestors		4657367	0					
ANR	4657426	Identifier	from		4657367	0					
ANR	4657427	Identifier	ancestors		4657367	1					
ANR	4657428	Identifier	i		4657367	1					
ANR	4657429	Identifier	active		4657367	1					
ANR	4657430	Identifier	TRUE		4657367	1					
ANR	4657431	CompoundStatement		10:41:185:185	4657367	1					
ANR	4657432	ExpressionStatement	"strncpy ( to -> ancestors [ i ] . envid , from -> ancestors [ i ] . envid , PIDENVID_ENVID_SIZE )"	220:3:5844:5922	4657367	0	True				
ANR	4657433	CallExpression	"strncpy ( to -> ancestors [ i ] . envid , from -> ancestors [ i ] . envid , PIDENVID_ENVID_SIZE )"		4657367	0					
ANR	4657434	Callee	strncpy		4657367	0					
ANR	4657435	Identifier	strncpy		4657367	0					
ANR	4657436	ArgumentList	to -> ancestors [ i ] . envid		4657367	1					
ANR	4657437	Argument	to -> ancestors [ i ] . envid		4657367	0					
ANR	4657438	MemberAccess	to -> ancestors [ i ] . envid		4657367	0					
ANR	4657439	ArrayIndexing	to -> ancestors [ i ]		4657367	0					
ANR	4657440	PtrMemberAccess	to -> ancestors		4657367	0					
ANR	4657441	Identifier	to		4657367	0					
ANR	4657442	Identifier	ancestors		4657367	1					
ANR	4657443	Identifier	i		4657367	1					
ANR	4657444	Identifier	envid		4657367	1					
ANR	4657445	Argument	from -> ancestors [ i ] . envid		4657367	1					
ANR	4657446	MemberAccess	from -> ancestors [ i ] . envid		4657367	0					
ANR	4657447	ArrayIndexing	from -> ancestors [ i ]		4657367	0					
ANR	4657448	PtrMemberAccess	from -> ancestors		4657367	0					
ANR	4657449	Identifier	from		4657367	0					
ANR	4657450	Identifier	ancestors		4657367	1					
ANR	4657451	Identifier	i		4657367	1					
ANR	4657452	Identifier	envid		4657367	1					
ANR	4657453	Argument	PIDENVID_ENVID_SIZE		4657367	2					
ANR	4657454	Identifier	PIDENVID_ENVID_SIZE		4657367	0					
ANR	4657455	ExpressionStatement	to -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'	221:3:5927:5979	4657367	1	True				
ANR	4657456	AssignmentExpression	to -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'		4657367	0		=			
ANR	4657457	ArrayIndexing	to -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ]		4657367	0					
ANR	4657458	MemberAccess	to -> ancestors [ i ] . envid		4657367	0					
ANR	4657459	ArrayIndexing	to -> ancestors [ i ]		4657367	0					
ANR	4657460	PtrMemberAccess	to -> ancestors		4657367	0					
ANR	4657461	Identifier	to		4657367	0					
ANR	4657462	Identifier	ancestors		4657367	1					
ANR	4657463	Identifier	i		4657367	1					
ANR	4657464	Identifier	envid		4657367	1					
ANR	4657465	AdditiveExpression	PIDENVID_ENVID_SIZE - 1		4657367	1		-			
ANR	4657466	Identifier	PIDENVID_ENVID_SIZE		4657367	0					
ANR	4657467	PrimaryExpression	1		4657367	1					
ANR	4657468	PrimaryExpression	'\\0'		4657367	1					
ANR	4657469	ReturnType	void		4657367	1					
ANR	4657470	Identifier	pidenvid_copy		4657367	2					
ANR	4657471	ParameterList	"PidEnvID * to , PidEnvID * from"		4657367	3					
ANR	4657472	Parameter	PidEnvID * to	209:19:5623:5634	4657367	0	True				
ANR	4657473	ParameterType	PidEnvID *		4657367	0					
ANR	4657474	Identifier	to		4657367	1					
ANR	4657475	Parameter	PidEnvID * from	209:33:5637:5650	4657367	1	True				
ANR	4657476	ParameterType	PidEnvID *		4657367	0					
ANR	4657477	Identifier	from		4657367	1					
ANR	4657478	CFGEntryNode	ENTRY		4657367		True				
ANR	4657479	CFGExitNode	EXIT		4657367		True				
ANR	4657480	Symbol	* * to -> ancestors		4657367						
ANR	4657481	Symbol	* * from		4657367						
ANR	4657482	Symbol	to -> ancestors		4657367						
ANR	4657483	Symbol	from -> ancestors [ i ] . active		4657367						
ANR	4657484	Symbol	to -> ancestors [ i ] . envid		4657367						
ANR	4657485	Symbol	* to -> ancestors		4657367						
ANR	4657486	Symbol	from		4657367						
ANR	4657487	Symbol	* PIDENVID_ENVID_SIZE		4657367						
ANR	4657488	Symbol	to -> ancestors [ i ] . active		4657367						
ANR	4657489	Symbol	* to		4657367						
ANR	4657490	Symbol	* * i		4657367						
ANR	4657491	Symbol	* * to		4657367						
ANR	4657492	Symbol	from -> num		4657367						
ANR	4657493	Symbol	* * * to		4657367						
ANR	4657494	Symbol	i		4657367						
ANR	4657495	Symbol	TRUE		4657367						
ANR	4657496	Symbol	to -> num		4657367						
ANR	4657497	Symbol	from -> ancestors [ i ] . envid		4657367						
ANR	4657498	Symbol	PIDENVID_ENVID_SIZE		4657367						
ANR	4657499	Symbol	* i		4657367						
ANR	4657500	Symbol	* to -> ancestors [ i ] . envid		4657367						
ANR	4657501	Symbol	from -> ancestors		4657367						
ANR	4657502	Symbol	to		4657367						
ANR	4657503	Symbol	* from		4657367						
ANR	4657504	Symbol	* from -> ancestors		4657367						
ANR	4657505	Function	pidenvid_dump	227:0:6057:6474							
ANR	4657506	FunctionDef	"pidenvid_dump (PidEnvID * penvid , int dlvl)"		4657505	0					
ANR	4657507	CompoundStatement		228:0:6104:6474	4657505	0					
ANR	4657508	IdentifierDeclStatement	int i ;	229:1:6107:6112	4657505	0	True				
ANR	4657509	IdentifierDecl	i		4657505	0					
ANR	4657510	IdentifierDeclType	int		4657505	0					
ANR	4657511	Identifier	i		4657505	1					
ANR	4657512	ExpressionStatement	"dprintf ( dlvl , ""PidEnvID: There are %d entries total.\\n"" , penvid -> num )"	231:1:6116:6185	4657505	1	True				
ANR	4657513	CallExpression	"dprintf ( dlvl , ""PidEnvID: There are %d entries total.\\n"" , penvid -> num )"		4657505	0					
ANR	4657514	Callee	dprintf		4657505	0					
ANR	4657515	Identifier	dprintf		4657505	0					
ANR	4657516	ArgumentList	dlvl		4657505	1					
ANR	4657517	Argument	dlvl		4657505	0					
ANR	4657518	Identifier	dlvl		4657505	0					
ANR	4657519	Argument	"""PidEnvID: There are %d entries total.\\n"""		4657505	1					
ANR	4657520	PrimaryExpression	"""PidEnvID: There are %d entries total.\\n"""		4657505	0					
ANR	4657521	Argument	penvid -> num		4657505	2					
ANR	4657522	PtrMemberAccess	penvid -> num		4657505	0					
ANR	4657523	Identifier	penvid		4657505	0					
ANR	4657524	Identifier	num		4657505	1					
ANR	4657525	ForStatement	for ( i = 0 ; i < penvid -> num ; i ++ )		4657505	2					
ANR	4657526	ForInit	i = 0 ;	233:6:6194:6199	4657505	0	True				
ANR	4657527	AssignmentExpression	i = 0		4657505	0		=			
ANR	4657528	Identifier	i		4657505	0					
ANR	4657529	PrimaryExpression	0		4657505	1					
ANR	4657530	Condition	i < penvid -> num	233:13:6201:6215	4657505	1	True				
ANR	4657531	RelationalExpression	i < penvid -> num		4657505	0		<			
ANR	4657532	Identifier	i		4657505	0					
ANR	4657533	PtrMemberAccess	penvid -> num		4657505	1					
ANR	4657534	Identifier	penvid		4657505	0					
ANR	4657535	Identifier	num		4657505	1					
ANR	4657536	PostIncDecOperationExpression	i ++	233:30:6218:6220	4657505	2	True				
ANR	4657537	Identifier	i		4657505	0					
ANR	4657538	IncDec	++		4657505	1					
ANR	4657539	CompoundStatement		6:35:118:118	4657505	3					
ANR	4657540	IfStatement	if ( penvid -> ancestors [ i ] . active == TRUE )		4657505	0					
ANR	4657541	Condition	penvid -> ancestors [ i ] . active == TRUE	235:6:6264:6298	4657505	0	True				
ANR	4657542	EqualityExpression	penvid -> ancestors [ i ] . active == TRUE		4657505	0		==			
ANR	4657543	MemberAccess	penvid -> ancestors [ i ] . active		4657505	0					
ANR	4657544	ArrayIndexing	penvid -> ancestors [ i ]		4657505	0					
ANR	4657545	PtrMemberAccess	penvid -> ancestors		4657505	0					
ANR	4657546	Identifier	penvid		4657505	0					
ANR	4657547	Identifier	ancestors		4657505	1					
ANR	4657548	Identifier	i		4657505	1					
ANR	4657549	Identifier	active		4657505	1					
ANR	4657550	Identifier	TRUE		4657505	1					
ANR	4657551	CompoundStatement		8:43:196:196	4657505	1					
ANR	4657552	ExpressionStatement	"dprintf ( dlvl , ""\\t[%d]: active = %s\\n"" , i , penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"" )"	236:3:6306:6407	4657505	0	True				
ANR	4657553	CallExpression	"dprintf ( dlvl , ""\\t[%d]: active = %s\\n"" , i , penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"" )"		4657505	0					
ANR	4657554	Callee	dprintf		4657505	0					
ANR	4657555	Identifier	dprintf		4657505	0					
ANR	4657556	ArgumentList	dlvl		4657505	1					
ANR	4657557	Argument	dlvl		4657505	0					
ANR	4657558	Identifier	dlvl		4657505	0					
ANR	4657559	Argument	"""\\t[%d]: active = %s\\n"""		4657505	1					
ANR	4657560	PrimaryExpression	"""\\t[%d]: active = %s\\n"""		4657505	0					
ANR	4657561	Argument	i		4657505	2					
ANR	4657562	Identifier	i		4657505	0					
ANR	4657563	Argument	"penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"""		4657505	3					
ANR	4657564	ConditionalExpression	"penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"""		4657505	0					
ANR	4657565	Condition	penvid -> ancestors [ i ] . active == TRUE		4657505	0					
ANR	4657566	EqualityExpression	penvid -> ancestors [ i ] . active == TRUE		4657505	0		==			
ANR	4657567	MemberAccess	penvid -> ancestors [ i ] . active		4657505	0					
ANR	4657568	ArrayIndexing	penvid -> ancestors [ i ]		4657505	0					
ANR	4657569	PtrMemberAccess	penvid -> ancestors		4657505	0					
ANR	4657570	Identifier	penvid		4657505	0					
ANR	4657571	Identifier	ancestors		4657505	1					
ANR	4657572	Identifier	i		4657505	1					
ANR	4657573	Identifier	active		4657505	1					
ANR	4657574	Identifier	TRUE		4657505	1					
ANR	4657575	PrimaryExpression	"""TRUE"""		4657505	1					
ANR	4657576	PrimaryExpression	"""FALSE"""		4657505	2					
ANR	4657577	ExpressionStatement	"dprintf ( dlvl , ""\\t\\t%s\\n"" , penvid -> ancestors [ i ] . envid )"	238:3:6412:6465	4657505	1	True				
ANR	4657578	CallExpression	"dprintf ( dlvl , ""\\t\\t%s\\n"" , penvid -> ancestors [ i ] . envid )"		4657505	0					
ANR	4657579	Callee	dprintf		4657505	0					
ANR	4657580	Identifier	dprintf		4657505	0					
ANR	4657581	ArgumentList	dlvl		4657505	1					
ANR	4657582	Argument	dlvl		4657505	0					
ANR	4657583	Identifier	dlvl		4657505	0					
ANR	4657584	Argument	"""\\t\\t%s\\n"""		4657505	1					
ANR	4657585	PrimaryExpression	"""\\t\\t%s\\n"""		4657505	0					
ANR	4657586	Argument	penvid -> ancestors [ i ] . envid		4657505	2					
ANR	4657587	MemberAccess	penvid -> ancestors [ i ] . envid		4657505	0					
ANR	4657588	ArrayIndexing	penvid -> ancestors [ i ]		4657505	0					
ANR	4657589	PtrMemberAccess	penvid -> ancestors		4657505	0					
ANR	4657590	Identifier	penvid		4657505	0					
ANR	4657591	Identifier	ancestors		4657505	1					
ANR	4657592	Identifier	i		4657505	1					
ANR	4657593	Identifier	envid		4657505	1					
ANR	4657594	ReturnType	void		4657505	1					
ANR	4657595	Identifier	pidenvid_dump		4657505	2					
ANR	4657596	ParameterList	"PidEnvID * penvid , int dlvl"		4657505	3					
ANR	4657597	Parameter	PidEnvID * penvid	227:19:6076:6091	4657505	0	True				
ANR	4657598	ParameterType	PidEnvID *		4657505	0					
ANR	4657599	Identifier	penvid		4657505	1					
ANR	4657600	Parameter	int dlvl	227:37:6094:6101	4657505	1	True				
ANR	4657601	ParameterType	int		4657505	0					
ANR	4657602	Identifier	dlvl		4657505	1					
ANR	4657603	CFGEntryNode	ENTRY		4657505		True				
ANR	4657604	CFGExitNode	EXIT		4657505		True				
ANR	4657605	Symbol	dlvl		4657505						
ANR	4657606	Symbol	* * penvid		4657505						
ANR	4657607	Symbol	* i		4657505						
ANR	4657608	Symbol	* penvid -> ancestors		4657505						
ANR	4657609	Symbol	* penvid		4657505						
ANR	4657610	Symbol	penvid -> num		4657505						
ANR	4657611	Symbol	penvid -> ancestors		4657505						
ANR	4657612	Symbol	penvid -> ancestors [ i ] . active		4657505						
ANR	4657613	Symbol	penvid		4657505						
ANR	4657614	Symbol	i		4657505						
ANR	4657615	Symbol	TRUE		4657505						
ANR	4657616	Symbol	penvid -> ancestors [ i ] . envid		4657505						
ANR	4657617	Function	pidenvid_shuffle_to_front	243:0:6477:7434							
ANR	4657618	FunctionDef	pidenvid_shuffle_to_front (char * * env)		4657617	0					
ANR	4657619	CompoundStatement		245:0:6520:7434	4657617	0					
ANR	4657620	IdentifierDeclStatement	size_t count ;	246:1:6523:6535	4657617	0	True				
ANR	4657621	IdentifierDecl	count		4657617	0					
ANR	4657622	IdentifierDeclType	size_t		4657617	0					
ANR	4657623	Identifier	count		4657617	1					
ANR	4657624	IdentifierDeclStatement	size_t prefix_len = strlen ( PIDENVID_PREFIX ) ;	247:1:6538:6583	4657617	1	True				
ANR	4657625	IdentifierDecl	prefix_len = strlen ( PIDENVID_PREFIX )		4657617	0					
ANR	4657626	IdentifierDeclType	size_t		4657617	0					
ANR	4657627	Identifier	prefix_len		4657617	1					
ANR	4657628	AssignmentExpression	prefix_len = strlen ( PIDENVID_PREFIX )		4657617	2		=			
ANR	4657629	Identifier	prefix_len		4657617	0					
ANR	4657630	CallExpression	strlen ( PIDENVID_PREFIX )		4657617	1					
ANR	4657631	Callee	strlen		4657617	0					
ANR	4657632	Identifier	strlen		4657617	0					
ANR	4657633	ArgumentList	PIDENVID_PREFIX		4657617	1					
ANR	4657634	Argument	PIDENVID_PREFIX		4657617	0					
ANR	4657635	Identifier	PIDENVID_PREFIX		4657617	0					
ANR	4657636	IdentifierDeclStatement	int changed ;	248:1:6586:6597	4657617	2	True				
ANR	4657637	IdentifierDecl	changed		4657617	0					
ANR	4657638	IdentifierDeclType	int		4657617	0					
ANR	4657639	Identifier	changed		4657617	1					
ANR	4657640	ForStatement	for ( count = 0 ; env [ count ] ; count ++ )		4657617	3					
ANR	4657641	ForInit	count = 0 ;	250:6:6606:6613	4657617	0	True				
ANR	4657642	AssignmentExpression	count = 0		4657617	0		=			
ANR	4657643	Identifier	count		4657617	0					
ANR	4657644	PrimaryExpression	0		4657617	1					
ANR	4657645	Condition	env [ count ]	250:15:6615:6624	4657617	1	True				
ANR	4657646	ArrayIndexing	env [ count ]		4657617	0					
ANR	4657647	Identifier	env		4657617	0					
ANR	4657648	Identifier	count		4657617	1					
ANR	4657649	PostIncDecOperationExpression	count ++	250:27:6627:6633	4657617	2	True				
ANR	4657650	Identifier	count		4657617	0					
ANR	4657651	IncDec	++		4657617	1					
ANR	4657652	ExpressionStatement		250:36:6636:6636	4657617	3	True				
ANR	4657653	IfStatement	if ( count == 0 )		4657617	4					
ANR	4657654	Condition	count == 0	252:5:6644:6653	4657617	0	True				
ANR	4657655	EqualityExpression	count == 0		4657617	0		==			
ANR	4657656	Identifier	count		4657617	0					
ANR	4657657	PrimaryExpression	0		4657617	1					
ANR	4657658	CompoundStatement		8:18:136:136	4657617	1					
ANR	4657659	ReturnStatement	return ;	253:2:6661:6667	4657617	0	True				
ANR	4657660	DoStatement	do		4657617	5					
ANR	4657661	CompoundStatement		17:2:334:342	4657617	0					
ANR	4657662	IdentifierDeclStatement	size_t i ;	261:2:6855:6863	4657617	0	True				
ANR	4657663	IdentifierDecl	i		4657617	0					
ANR	4657664	IdentifierDeclType	size_t		4657617	0					
ANR	4657665	Identifier	i		4657617	1					
ANR	4657666	ExpressionStatement	changed = 0	263:2:6868:6879	4657617	1	True				
ANR	4657667	AssignmentExpression	changed = 0		4657617	0		=			
ANR	4657668	Identifier	changed		4657617	0					
ANR	4657669	PrimaryExpression	0		4657617	1					
ANR	4657670	ForStatement	for ( i = count - 1 ; i ; i -- )		4657617	2					
ANR	4657671	ForInit	i = count - 1 ;	264:7:6888:6897	4657617	0	True				
ANR	4657672	AssignmentExpression	i = count - 1		4657617	0		=			
ANR	4657673	Identifier	i		4657617	0					
ANR	4657674	AdditiveExpression	count - 1		4657617	1		-			
ANR	4657675	Identifier	count		4657617	0					
ANR	4657676	PrimaryExpression	1		4657617	1					
ANR	4657677	Condition	i	264:18:6899:6899	4657617	1	True				
ANR	4657678	Identifier	i		4657617	0					
ANR	4657679	PostIncDecOperationExpression	i --	264:21:6902:6904	4657617	2	True				
ANR	4657680	Identifier	i		4657617	0					
ANR	4657681	IncDec	--		4657617	1					
ANR	4657682	CompoundStatement		20:27:387:387	4657617	3					
ANR	4657683	IfStatement	"if ( ! strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len ) )"		4657617	0					
ANR	4657684	Condition	"! strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len )"	265:7:6917:6959	4657617	0	True				
ANR	4657685	UnaryOperationExpression	"! strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len )"		4657617	0					
ANR	4657686	UnaryOperator	!		4657617	0					
ANR	4657687	CallExpression	"strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len )"		4657617	1					
ANR	4657688	Callee	strncmp		4657617	0					
ANR	4657689	Identifier	strncmp		4657617	0					
ANR	4657690	ArgumentList	env [ i ]		4657617	1					
ANR	4657691	Argument	env [ i ]		4657617	0					
ANR	4657692	ArrayIndexing	env [ i ]		4657617	0					
ANR	4657693	Identifier	env		4657617	0					
ANR	4657694	Identifier	i		4657617	1					
ANR	4657695	Argument	PIDENVID_PREFIX		4657617	1					
ANR	4657696	Identifier	PIDENVID_PREFIX		4657617	0					
ANR	4657697	Argument	prefix_len		4657617	2					
ANR	4657698	Identifier	prefix_len		4657617	0					
ANR	4657699	CompoundStatement		22:4:448:456	4657617	1					
ANR	4657700	IdentifierDeclStatement	size_t j ;	266:4:6969:6977	4657617	0	True				
ANR	4657701	IdentifierDecl	j		4657617	0					
ANR	4657702	IdentifierDeclType	size_t		4657617	0					
ANR	4657703	Identifier	j		4657617	1					
ANR	4657704	ForStatement	for ( j = i ; j -- ; )		4657617	1					
ANR	4657705	ForInit	j = i ;	270:9:7118:7121	4657617	0	True				
ANR	4657706	AssignmentExpression	j = i		4657617	0		=			
ANR	4657707	Identifier	j		4657617	0					
ANR	4657708	Identifier	i		4657617	1					
ANR	4657709	Condition	j --	270:14:7123:7125	4657617	1	True				
ANR	4657710	PostIncDecOperationExpression	j --		4657617	0					
ANR	4657711	Identifier	j		4657617	0					
ANR	4657712	IncDec	--		4657617	1					
ANR	4657713	CompoundStatement		27:5:616:635	4657617	2					
ANR	4657714	IdentifierDeclStatement	char * prev = env [ j ] ;	271:5:7137:7156	4657617	0	True				
ANR	4657715	IdentifierDecl	* prev = env [ j ]		4657617	0					
ANR	4657716	IdentifierDeclType	char *		4657617	0					
ANR	4657717	Identifier	prev		4657617	1					
ANR	4657718	AssignmentExpression	* prev = env [ j ]		4657617	2		=			
ANR	4657719	Identifier	prev		4657617	0					
ANR	4657720	ArrayIndexing	env [ j ]		4657617	1					
ANR	4657721	Identifier	env		4657617	0					
ANR	4657722	Identifier	j		4657617	1					
ANR	4657723	IfStatement	"if ( ! strncmp ( prev , PIDENVID_PREFIX , prefix_len ) )"		4657617	1					
ANR	4657724	Condition	"! strncmp ( prev , PIDENVID_PREFIX , prefix_len )"	272:9:7167:7207	4657617	0	True				
ANR	4657725	UnaryOperationExpression	"! strncmp ( prev , PIDENVID_PREFIX , prefix_len )"		4657617	0					
ANR	4657726	UnaryOperator	!		4657617	0					
ANR	4657727	CallExpression	"strncmp ( prev , PIDENVID_PREFIX , prefix_len )"		4657617	1					
ANR	4657728	Callee	strncmp		4657617	0					
ANR	4657729	Identifier	strncmp		4657617	0					
ANR	4657730	ArgumentList	prev		4657617	1					
ANR	4657731	Argument	prev		4657617	0					
ANR	4657732	Identifier	prev		4657617	0					
ANR	4657733	Argument	PIDENVID_PREFIX		4657617	1					
ANR	4657734	Identifier	PIDENVID_PREFIX		4657617	0					
ANR	4657735	Argument	prefix_len		4657617	2					
ANR	4657736	Identifier	prefix_len		4657617	0					
ANR	4657737	CompoundStatement		28:53:690:690	4657617	1					
ANR	4657738	BreakStatement	break ;	273:6:7219:7224	4657617	0	True				
ANR	4657739	ExpressionStatement	changed = 1	276:5:7295:7306	4657617	2	True				
ANR	4657740	AssignmentExpression	changed = 1		4657617	0		=			
ANR	4657741	Identifier	changed		4657617	0					
ANR	4657742	PrimaryExpression	1		4657617	1					
ANR	4657743	ExpressionStatement	env [ j ] = env [ i ]	277:5:7313:7328	4657617	3	True				
ANR	4657744	AssignmentExpression	env [ j ] = env [ i ]		4657617	0		=			
ANR	4657745	ArrayIndexing	env [ j ]		4657617	0					
ANR	4657746	Identifier	env		4657617	0					
ANR	4657747	Identifier	j		4657617	1					
ANR	4657748	ArrayIndexing	env [ i ]		4657617	1					
ANR	4657749	Identifier	env		4657617	0					
ANR	4657750	Identifier	i		4657617	1					
ANR	4657751	ExpressionStatement	env [ i ] = prev	278:5:7335:7348	4657617	4	True				
ANR	4657752	AssignmentExpression	env [ i ] = prev		4657617	0		=			
ANR	4657753	ArrayIndexing	env [ i ]		4657617	0					
ANR	4657754	Identifier	env		4657617	0					
ANR	4657755	Identifier	i		4657617	1					
ANR	4657756	Identifier	prev		4657617	1					
ANR	4657757	ExpressionStatement	i = j	279:5:7355:7360	4657617	5	True				
ANR	4657758	AssignmentExpression	i = j		4657617	0		=			
ANR	4657759	Identifier	i		4657617	0					
ANR	4657760	Identifier	j		4657617	1					
ANR	4657761	IfStatement	if ( i == 0 )		4657617	2					
ANR	4657762	Condition	i == 0	281:8:7376:7379	4657617	0	True				
ANR	4657763	EqualityExpression	i == 0		4657617	0		==			
ANR	4657764	Identifier	i		4657617	0					
ANR	4657765	PrimaryExpression	0		4657617	1					
ANR	4657766	CompoundStatement		37:15:862:862	4657617	1					
ANR	4657767	BreakStatement	break ;	282:5:7390:7395	4657617	0	True				
ANR	4657768	Condition	changed	287:10:7423:7429	4657617	1	True				
ANR	4657769	Identifier	changed		4657617	0					
ANR	4657770	ReturnType	void		4657617	1					
ANR	4657771	Identifier	pidenvid_shuffle_to_front		4657617	2					
ANR	4657772	ParameterList	char * * env		4657617	3					
ANR	4657773	Parameter	char * * env	244:26:6508:6517	4657617	0	True				
ANR	4657774	ParameterType	char * *		4657617	0					
ANR	4657775	Identifier	env		4657617	1					
ANR	4657776	CFGEntryNode	ENTRY		4657617		True				
ANR	4657777	CFGExitNode	EXIT		4657617		True				
ANR	4657778	Symbol	prev		4657617						
ANR	4657779	Symbol	count		4657617						
ANR	4657780	Symbol	* env		4657617						
ANR	4657781	Symbol	prefix_len		4657617						
ANR	4657782	Symbol	i		4657617						
ANR	4657783	Symbol	j		4657617						
ANR	4657784	Symbol	env		4657617						
ANR	4657785	Symbol	PIDENVID_PREFIX		4657617						
ANR	4657786	Symbol	strlen		4657617						
ANR	4657787	Symbol	* count		4657617						
ANR	4657788	Symbol	strncmp		4657617						
ANR	4657789	Symbol	* i		4657617						
ANR	4657790	Symbol	* j		4657617						
ANR	4657791	Symbol	changed		4657617						
ANR	4657792	Function	pidenvid_optimize_final_env	290:0:7437:7543							
ANR	4657793	FunctionDef	pidenvid_optimize_final_env (char * * env)		4657792	0					
ANR	4657794	CompoundStatement		292:0:7482:7543	4657792	0					
ANR	4657795	ExpressionStatement	pidenvid_shuffle_to_front ( env )	294:1:7504:7534	4657792	0	True				
ANR	4657796	CallExpression	pidenvid_shuffle_to_front ( env )		4657792	0					
ANR	4657797	Callee	pidenvid_shuffle_to_front		4657792	0					
ANR	4657798	Identifier	pidenvid_shuffle_to_front		4657792	0					
ANR	4657799	ArgumentList	env		4657792	1					
ANR	4657800	Argument	env		4657792	0					
ANR	4657801	Identifier	env		4657792	0					
ANR	4657802	ReturnType	void		4657792	1					
ANR	4657803	Identifier	pidenvid_optimize_final_env		4657792	2					
ANR	4657804	ParameterList	char * * env		4657792	3					
ANR	4657805	Parameter	char * * env	291:28:7470:7479	4657792	0	True				
ANR	4657806	ParameterType	char * *		4657792	0					
ANR	4657807	Identifier	env		4657792	1					
ANR	4657808	CFGEntryNode	ENTRY		4657792		True				
ANR	4657809	CFGExitNode	EXIT		4657792		True				
ANR	4657810	Symbol	env		4657792						
