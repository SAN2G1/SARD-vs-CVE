command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1035537	File	data/converged/CVE-2011-4930_htcondor/cron_job.cpp								
ANR	1035538	Function	CronJob :: CronJob	34:0:1178:2231							
ANR	1035539	FunctionDef	"CronJob :: CronJob (CronJobParams * params , CronJobMgr & mgr)"		1035538	0					
ANR	1035540	CompoundStatement		55:0:1755:2231	1035538	0					
ANR	1035541	ForStatement	for ( int i = 0 ; i < 3 ; i ++ )		1035538	0					
ANR	1035542	ForInit	int i = 0 ;	56:6:1763:1772	1035538	0	True				
ANR	1035543	IdentifierDeclStatement	int i = 0 ;		1035538	0					
ANR	1035544	IdentifierDecl	i = 0		1035538	0					
ANR	1035545	IdentifierDeclType	int		1035538	0					
ANR	1035546	Identifier	i		1035538	1					
ANR	1035547	AssignmentExpression	i = 0		1035538	2		=			
ANR	1035548	Identifier	i		1035538	0					
ANR	1035549	PrimaryExpression	0		1035538	1					
ANR	1035550	Condition	i < 3	56:17:1774:1778	1035538	1	True				
ANR	1035551	RelationalExpression	i < 3		1035538	0		<			
ANR	1035552	Identifier	i		1035538	0					
ANR	1035553	PrimaryExpression	3		1035538	1					
ANR	1035554	PostIncDecOperationExpression	i ++	56:25:1782:1784	1035538	2	True				
ANR	1035555	Identifier	i		1035538	0					
ANR	1035556	IncDec	++		1035538	1					
ANR	1035557	CompoundStatement		2:31:32:32	1035538	3					
ANR	1035558	ExpressionStatement	m_childFds [ i ] = - 1	57:2:1792:1810	1035538	0	True				
ANR	1035559	AssignmentExpression	m_childFds [ i ] = - 1		1035538	0		=			
ANR	1035560	ArrayIndexing	m_childFds [ i ]		1035538	0					
ANR	1035561	Identifier	m_childFds		1035538	0					
ANR	1035562	Identifier	i		1035538	1					
ANR	1035563	UnaryOperationExpression	- 1		1035538	1					
ANR	1035564	UnaryOperator	-		1035538	0					
ANR	1035565	PrimaryExpression	1		1035538	1					
ANR	1035566	ExpressionStatement	m_stdOutBuf = new CronJobOut ( * this )	61:1:1845:1882	1035538	1	True				
ANR	1035567	AssignmentExpression	m_stdOutBuf = new CronJobOut ( * this )		1035538	0		=			
ANR	1035568	Identifier	m_stdOutBuf		1035538	0					
ANR	1035569	UnaryOperationExpression	* this		1035538	1					
ANR	1035570	UnaryOperator	*		1035538	0					
ANR	1035571	Identifier	this		1035538	1					
ANR	1035572	ExpressionStatement	m_stdErrBuf = new CronJobErr ( * this )	62:1:1885:1922	1035538	2	True				
ANR	1035573	AssignmentExpression	m_stdErrBuf = new CronJobErr ( * this )		1035538	0		=			
ANR	1035574	Identifier	m_stdErrBuf		1035538	0					
ANR	1035575	UnaryOperationExpression	* this		1035538	1					
ANR	1035576	UnaryOperator	*		1035538	0					
ANR	1035577	Identifier	this		1035538	1					
ANR	1035578	Statement	if	64:2:1927:1928	1035538	3	True				
ANR	1035579	IdentifierDeclStatement	CRONJOB_PIPEIO_DEBUG TodoBufSize = 20 * 1024 ;	64:5:1930:1975	1035538	4	True				
ANR	1035580	IdentifierDecl	TodoBufSize = 20 * 1024		1035538	0					
ANR	1035581	IdentifierDeclType	CRONJOB_PIPEIO_DEBUG		1035538	0					
ANR	1035582	Identifier	TodoBufSize		1035538	1					
ANR	1035583	AssignmentExpression	TodoBufSize = 20 * 1024		1035538	2		=			
ANR	1035584	Identifier	TodoBufSize		1035538	0					
ANR	1035585	MultiplicativeExpression	20 * 1024		1035538	1		*			
ANR	1035586	PrimaryExpression	20		1035538	0					
ANR	1035587	PrimaryExpression	1024		1035538	1					
ANR	1035588	ExpressionStatement	TodoWriteNum = TodoBufWrap = TodoBufOffset = 0	66:1:1978:2024	1035538	5	True				
ANR	1035589	AssignmentExpression	TodoWriteNum = TodoBufWrap = TodoBufOffset = 0		1035538	0		=			
ANR	1035590	Identifier	TodoWriteNum		1035538	0					
ANR	1035591	AssignmentExpression	TodoBufWrap = TodoBufOffset = 0		1035538	1		=			
ANR	1035592	Identifier	TodoBufWrap		1035538	0					
ANR	1035593	AssignmentExpression	TodoBufOffset = 0		1035538	1		=			
ANR	1035594	Identifier	TodoBufOffset		1035538	0					
ANR	1035595	PrimaryExpression	0		1035538	1					
ANR	1035596	ExpressionStatement	TodoBuffer = ( char * ) malloc ( TodoBufSize )	67:1:2027:2070	1035538	6	True				
ANR	1035597	AssignmentExpression	TodoBuffer = ( char * ) malloc ( TodoBufSize )		1035538	0		=			
ANR	1035598	Identifier	TodoBuffer		1035538	0					
ANR	1035599	CastExpression	( char * ) malloc ( TodoBufSize )		1035538	1					
ANR	1035600	CastTarget	char *		1035538	0					
ANR	1035601	CallExpression	malloc ( TodoBufSize )		1035538	1					
ANR	1035602	Callee	malloc		1035538	0					
ANR	1035603	Identifier	malloc		1035538	0					
ANR	1035604	ArgumentList	TodoBufSize		1035538	1					
ANR	1035605	Argument	TodoBufSize		1035538	0					
ANR	1035606	Identifier	TodoBufSize		1035538	0					
ANR	1035607	IdentifierDeclStatement	"endif m_reaperId = daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this ) ;"	68:2:2074:2229	1035538	7	True				
ANR	1035608	IdentifierDecl	"m_reaperId = daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this )"		1035538	0					
ANR	1035609	IdentifierDeclType	endif		1035538	0					
ANR	1035610	Identifier	m_reaperId		1035538	1					
ANR	1035611	AssignmentExpression	"m_reaperId = daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this )"		1035538	2		=			
ANR	1035612	Identifier	m_reaperId		1035538	0					
ANR	1035613	CallExpression	"daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this )"		1035538	1					
ANR	1035614	Callee	daemonCore -> Register_Reaper		1035538	0					
ANR	1035615	PtrMemberAccess	daemonCore -> Register_Reaper		1035538	0					
ANR	1035616	Identifier	daemonCore		1035538	0					
ANR	1035617	Identifier	Register_Reaper		1035538	1					
ANR	1035618	ArgumentList	"""Cron_Reaper"""		1035538	1					
ANR	1035619	Argument	"""Cron_Reaper"""		1035538	0					
ANR	1035620	PrimaryExpression	"""Cron_Reaper"""		1035538	0					
ANR	1035621	Argument	( ReaperHandlercpp ) & CronJob :: Reaper		1035538	1					
ANR	1035622	CastExpression	( ReaperHandlercpp ) & CronJob :: Reaper		1035538	0					
ANR	1035623	CastTarget	ReaperHandlercpp		1035538	0					
ANR	1035624	UnaryOperationExpression	& CronJob :: Reaper		1035538	1					
ANR	1035625	UnaryOperator	&		1035538	0					
ANR	1035626	Identifier	CronJob :: Reaper		1035538	1					
ANR	1035627	Argument	"""Cron Reaper"""		1035538	2					
ANR	1035628	PrimaryExpression	"""Cron Reaper"""		1035538	0					
ANR	1035629	Argument	this		1035538	3					
ANR	1035630	Identifier	this		1035538	0					
ANR	1035631	Identifier	CronJob :: CronJob		1035538	1					
ANR	1035632	ParameterList	"CronJobParams * params , CronJobMgr & mgr"		1035538	2					
ANR	1035633	Parameter	CronJobParams * params	34:18:1196:1216	1035538	0	True				
ANR	1035634	ParameterType	CronJobParams *		1035538	0					
ANR	1035635	Identifier	params		1035538	1					
ANR	1035636	Parameter	CronJobMgr & mgr	34:41:1219:1233	1035538	1	True				
ANR	1035637	ParameterType	CronJobMgr &		1035538	0					
ANR	1035638	Identifier	mgr		1035538	1					
ANR	1035639	CFGEntryNode	ENTRY		1035538		True				
ANR	1035640	CFGExitNode	EXIT		1035538		True				
ANR	1035641	Symbol	malloc		1035538						
ANR	1035642	Symbol	this		1035538						
ANR	1035643	Symbol	TodoBuffer		1035538						
ANR	1035644	Symbol	i		1035538						
ANR	1035645	Symbol	TodoBufSize		1035538						
ANR	1035646	Symbol	params		1035538						
ANR	1035647	Symbol	* m_childFds		1035538						
ANR	1035648	Symbol	m_stdErrBuf		1035538						
ANR	1035649	Symbol	* this		1035538						
ANR	1035650	Symbol	daemonCore -> Register_Reaper		1035538						
ANR	1035651	Symbol	* i		1035538						
ANR	1035652	Symbol	TodoWriteNum		1035538						
ANR	1035653	Symbol	* daemonCore		1035538						
ANR	1035654	Symbol	daemonCore		1035538						
ANR	1035655	Symbol	TodoBufOffset		1035538						
ANR	1035656	Symbol	mgr		1035538						
ANR	1035657	Symbol	m_reaperId		1035538						
ANR	1035658	Symbol	& CronJob :: Reaper		1035538						
ANR	1035659	Symbol	m_stdOutBuf		1035538						
ANR	1035660	Symbol	TodoBufWrap		1035538						
ANR	1035661	Symbol	m_childFds		1035538						
ANR	1035662	Function	CronJob :: ~CronJob	79:0:2256:2690							
ANR	1035663	FunctionDef	CronJob :: ~CronJob ()		1035662	0					
ANR	1035664	CompoundStatement		80:0:2277:2690	1035662	0					
ANR	1035665	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Deleting job '%s' (%s), timer %d\\n"" , GetName ( ) , GetExecutable ( ) , m_run_timer )"	81:1:2280:2391	1035662	0	True				
ANR	1035666	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Deleting job '%s' (%s), timer %d\\n"" , GetName ( ) , GetExecutable ( ) , m_run_timer )"		1035662	0					
ANR	1035667	Callee	dprintf		1035662	0					
ANR	1035668	Identifier	dprintf		1035662	0					
ANR	1035669	ArgumentList	D_ALWAYS		1035662	1					
ANR	1035670	Argument	D_ALWAYS		1035662	0					
ANR	1035671	Identifier	D_ALWAYS		1035662	0					
ANR	1035672	Argument	"""CronJob: Deleting job '%s' (%s), timer %d\\n"""		1035662	1					
ANR	1035673	PrimaryExpression	"""CronJob: Deleting job '%s' (%s), timer %d\\n"""		1035662	0					
ANR	1035674	Argument	GetName ( )		1035662	2					
ANR	1035675	CallExpression	GetName ( )		1035662	0					
ANR	1035676	Callee	GetName		1035662	0					
ANR	1035677	Identifier	GetName		1035662	0					
ANR	1035678	ArgumentList			1035662	1					
ANR	1035679	Argument	GetExecutable ( )		1035662	3					
ANR	1035680	CallExpression	GetExecutable ( )		1035662	0					
ANR	1035681	Callee	GetExecutable		1035662	0					
ANR	1035682	Identifier	GetExecutable		1035662	0					
ANR	1035683	ArgumentList			1035662	1					
ANR	1035684	Argument	m_run_timer		1035662	4					
ANR	1035685	Identifier	m_run_timer		1035662	0					
ANR	1035686	ExpressionStatement	CancelRunTimer ( )	85:1:2431:2448	1035662	1	True				
ANR	1035687	CallExpression	CancelRunTimer ( )		1035662	0					
ANR	1035688	Callee	CancelRunTimer		1035662	0					
ANR	1035689	Identifier	CancelRunTimer		1035662	0					
ANR	1035690	ArgumentList			1035662	1					
ANR	1035691	IfStatement	if ( m_reaperId >= 0 )		1035662	2					
ANR	1035692	Condition	m_reaperId >= 0	86:6:2456:2470	1035662	0	True				
ANR	1035693	RelationalExpression	m_reaperId >= 0		1035662	0		>=			
ANR	1035694	Identifier	m_reaperId		1035662	0					
ANR	1035695	PrimaryExpression	0		1035662	1					
ANR	1035696	CompoundStatement		7:24:196:196	1035662	1					
ANR	1035697	ExpressionStatement	daemonCore -> Cancel_Reaper ( m_reaperId )	87:2:2478:2517	1035662	0	True				
ANR	1035698	CallExpression	daemonCore -> Cancel_Reaper ( m_reaperId )		1035662	0					
ANR	1035699	Callee	daemonCore -> Cancel_Reaper		1035662	0					
ANR	1035700	PtrMemberAccess	daemonCore -> Cancel_Reaper		1035662	0					
ANR	1035701	Identifier	daemonCore		1035662	0					
ANR	1035702	Identifier	Cancel_Reaper		1035662	1					
ANR	1035703	ArgumentList	m_reaperId		1035662	1					
ANR	1035704	Argument	m_reaperId		1035662	0					
ANR	1035705	Identifier	m_reaperId		1035662	0					
ANR	1035706	ExpressionStatement	KillJob ( true )	91:1:2559:2574	1035662	3	True				
ANR	1035707	CallExpression	KillJob ( true )		1035662	0					
ANR	1035708	Callee	KillJob		1035662	0					
ANR	1035709	Identifier	KillJob		1035662	0					
ANR	1035710	ArgumentList	true		1035662	1					
ANR	1035711	Argument	true		1035662	0					
ANR	1035712	Identifier	true		1035662	0					
ANR	1035713	ExpressionStatement	CleanAll ( )	94:1:2592:2603	1035662	4	True				
ANR	1035714	CallExpression	CleanAll ( )		1035662	0					
ANR	1035715	Callee	CleanAll		1035662	0					
ANR	1035716	Identifier	CleanAll		1035662	0					
ANR	1035717	ArgumentList			1035662	1					
ANR	1035718	Statement	delete	97:1:2630:2635	1035662	5	True				
ANR	1035719	ExpressionStatement	m_stdOutBuf	97:8:2637:2648	1035662	6	True				
ANR	1035720	Identifier	m_stdOutBuf		1035662	0					
ANR	1035721	Statement	delete	98:1:2651:2656	1035662	7	True				
ANR	1035722	ExpressionStatement	m_stdErrBuf	98:8:2658:2669	1035662	8	True				
ANR	1035723	Identifier	m_stdErrBuf		1035662	0					
ANR	1035724	Statement	delete	100:1:2673:2678	1035662	9	True				
ANR	1035725	ExpressionStatement	m_params	100:8:2680:2688	1035662	10	True				
ANR	1035726	Identifier	m_params		1035662	0					
ANR	1035727	Identifier	CronJob :: ~CronJob		1035662	1					
ANR	1035728	ParameterList			1035662	2					
ANR	1035729	CFGEntryNode	ENTRY		1035662		True				
ANR	1035730	CFGExitNode	EXIT		1035662		True				
ANR	1035731	Symbol	GetExecutable		1035662						
ANR	1035732	Symbol	daemonCore		1035662						
ANR	1035733	Symbol	D_ALWAYS		1035662						
ANR	1035734	Symbol	true		1035662						
ANR	1035735	Symbol	m_reaperId		1035662						
ANR	1035736	Symbol	GetName		1035662						
ANR	1035737	Symbol	m_run_timer		1035662						
ANR	1035738	Function	CronJob :: Initialize	104:0:2707:2994							
ANR	1035739	FunctionDef	CronJob :: Initialize ()		1035738	0					
ANR	1035740	CompoundStatement		106:0:2739:2994	1035738	0					
ANR	1035741	IfStatement	if ( IsInitialized ( ) )		1035738	0					
ANR	1035742	Condition	IsInitialized ( )	108:6:2795:2809	1035738	0	True				
ANR	1035743	CallExpression	IsInitialized ( )		1035738	0					
ANR	1035744	Callee	IsInitialized		1035738	0					
ANR	1035745	Identifier	IsInitialized		1035738	0					
ANR	1035746	ArgumentList			1035738	1					
ANR	1035747	CompoundStatement		3:24:73:73	1035738	1					
ANR	1035748	ReturnStatement	return 0 ;	109:2:2817:2825	1035738	0	True				
ANR	1035749	PrimaryExpression	0		1035738	0					
ANR	1035750	ExpressionStatement	SetState ( CRON_IDLE )	113:1:2863:2884	1035738	1	True				
ANR	1035751	CallExpression	SetState ( CRON_IDLE )		1035738	0					
ANR	1035752	Callee	SetState		1035738	0					
ANR	1035753	Identifier	SetState		1035738	0					
ANR	1035754	ArgumentList	CRON_IDLE		1035738	1					
ANR	1035755	Argument	CRON_IDLE		1035738	0					
ANR	1035756	Identifier	CRON_IDLE		1035738	0					
ANR	1035757	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Initializing job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"	115:1:2888:2981	1035738	2	True				
ANR	1035758	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Initializing job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"		1035738	0					
ANR	1035759	Callee	dprintf		1035738	0					
ANR	1035760	Identifier	dprintf		1035738	0					
ANR	1035761	ArgumentList	D_ALWAYS		1035738	1					
ANR	1035762	Argument	D_ALWAYS		1035738	0					
ANR	1035763	Identifier	D_ALWAYS		1035738	0					
ANR	1035764	Argument	"""CronJob: Initializing job '%s' (%s)\\n"""		1035738	1					
ANR	1035765	PrimaryExpression	"""CronJob: Initializing job '%s' (%s)\\n"""		1035738	0					
ANR	1035766	Argument	GetName ( )		1035738	2					
ANR	1035767	CallExpression	GetName ( )		1035738	0					
ANR	1035768	Callee	GetName		1035738	0					
ANR	1035769	Identifier	GetName		1035738	0					
ANR	1035770	ArgumentList			1035738	1					
ANR	1035771	Argument	GetExecutable ( )		1035738	3					
ANR	1035772	CallExpression	GetExecutable ( )		1035738	0					
ANR	1035773	Callee	GetExecutable		1035738	0					
ANR	1035774	Identifier	GetExecutable		1035738	0					
ANR	1035775	ArgumentList			1035738	1					
ANR	1035776	ReturnStatement	return 0 ;	117:1:2984:2992	1035738	3	True				
ANR	1035777	PrimaryExpression	0		1035738	0					
ANR	1035778	ReturnType	int		1035738	1					
ANR	1035779	Identifier	CronJob :: Initialize		1035738	2					
ANR	1035780	ParameterList			1035738	3					
ANR	1035781	CFGEntryNode	ENTRY		1035738		True				
ANR	1035782	CFGExitNode	EXIT		1035738		True				
ANR	1035783	Symbol	GetExecutable		1035738						
ANR	1035784	Symbol	D_ALWAYS		1035738						
ANR	1035785	Symbol	CRON_IDLE		1035738						
ANR	1035786	Symbol	GetName		1035738						
ANR	1035787	Symbol	IsInitialized		1035738						
ANR	1035788	Function	CronJob :: SetParams	121:0:3019:3162							
ANR	1035789	FunctionDef	CronJob :: SetParams (CronJobParams * params)		1035788	0					
ANR	1035790	CompoundStatement		123:0:3068:3162	1035788	0					
ANR	1035791	ExpressionStatement	m_old_period = m_params -> GetPeriod ( )	124:1:3071:3108	1035788	0	True				
ANR	1035792	AssignmentExpression	m_old_period = m_params -> GetPeriod ( )		1035788	0		=			
ANR	1035793	Identifier	m_old_period		1035788	0					
ANR	1035794	CallExpression	m_params -> GetPeriod ( )		1035788	1					
ANR	1035795	Callee	m_params -> GetPeriod		1035788	0					
ANR	1035796	PtrMemberAccess	m_params -> GetPeriod		1035788	0					
ANR	1035797	Identifier	m_params		1035788	0					
ANR	1035798	Identifier	GetPeriod		1035788	1					
ANR	1035799	ArgumentList			1035788	1					
ANR	1035800	Statement	delete	125:1:3111:3116	1035788	1	True				
ANR	1035801	ExpressionStatement	m_params	125:8:3118:3126	1035788	2	True				
ANR	1035802	Identifier	m_params		1035788	0					
ANR	1035803	ExpressionStatement	m_params = params	126:1:3129:3146	1035788	3	True				
ANR	1035804	AssignmentExpression	m_params = params		1035788	0		=			
ANR	1035805	Identifier	m_params		1035788	0					
ANR	1035806	Identifier	params		1035788	1					
ANR	1035807	ReturnStatement	return true ;	127:1:3149:3160	1035788	4	True				
ANR	1035808	Identifier	true		1035788	0					
ANR	1035809	ReturnType	bool		1035788	1					
ANR	1035810	Identifier	CronJob :: SetParams		1035788	2					
ANR	1035811	ParameterList	CronJobParams * params		1035788	3					
ANR	1035812	Parameter	CronJobParams * params	122:20:3044:3064	1035788	0	True				
ANR	1035813	ParameterType	CronJobParams *		1035788	0					
ANR	1035814	Identifier	params		1035788	1					
ANR	1035815	CFGEntryNode	ENTRY		1035788		True				
ANR	1035816	CFGExitNode	EXIT		1035788		True				
ANR	1035817	Symbol	m_params -> GetPeriod		1035788						
ANR	1035818	Symbol	m_params		1035788						
ANR	1035819	Symbol	true		1035788						
ANR	1035820	Symbol	m_old_period		1035788						
ANR	1035821	Symbol	* m_params		1035788						
ANR	1035822	Symbol	params		1035788						
ANR	1035823	Function	CronJob :: HandleReconfig	131:0:3194:4207							
ANR	1035824	FunctionDef	CronJob :: HandleReconfig ()		1035823	0					
ANR	1035825	CompoundStatement		133:0:3230:4207	1035823	0					
ANR	1035826	IfStatement	if ( Params ( ) . OptReconfigRerun ( ) && m_num_runs )		1035823	0					
ANR	1035827	Condition	Params ( ) . OptReconfigRerun ( ) && m_num_runs	135:7:3266:3308	1035823	0	True				
ANR	1035828	AndExpression	Params ( ) . OptReconfigRerun ( ) && m_num_runs		1035823	0		&&			
ANR	1035829	CallExpression	Params ( ) . OptReconfigRerun ( )		1035823	0					
ANR	1035830	Callee	Params ( ) . OptReconfigRerun		1035823	0					
ANR	1035831	MemberAccess	Params ( ) . OptReconfigRerun		1035823	0					
ANR	1035832	CallExpression	Params ( )		1035823	0					
ANR	1035833	Callee	Params		1035823	0					
ANR	1035834	Identifier	Params		1035823	0					
ANR	1035835	ArgumentList			1035823	1					
ANR	1035836	Identifier	OptReconfigRerun		1035823	1					
ANR	1035837	ArgumentList			1035823	1					
ANR	1035838	Identifier	m_num_runs		1035823	1					
ANR	1035839	CompoundStatement		3:53:81:81	1035823	1					
ANR	1035840	ExpressionStatement	SetState ( CRON_READY )	136:2:3316:3338	1035823	0	True				
ANR	1035841	CallExpression	SetState ( CRON_READY )		1035823	0					
ANR	1035842	Callee	SetState		1035823	0					
ANR	1035843	Identifier	SetState		1035823	0					
ANR	1035844	ArgumentList	CRON_READY		1035823	1					
ANR	1035845	Argument	CRON_READY		1035823	0					
ANR	1035846	Identifier	CRON_READY		1035823	0					
ANR	1035847	ReturnStatement	return 0 ;	137:2:3342:3350	1035823	1	True				
ANR	1035848	PrimaryExpression	0		1035823	0					
ANR	1035849	IfStatement	if ( IsRunning ( ) && Params ( ) . OptReconfig ( ) )		1035823	1					
ANR	1035850	Condition	IsRunning ( ) && Params ( ) . OptReconfig ( )	141:7:3425:3463	1035823	0	True				
ANR	1035851	AndExpression	IsRunning ( ) && Params ( ) . OptReconfig ( )		1035823	0		&&			
ANR	1035852	CallExpression	IsRunning ( )		1035823	0					
ANR	1035853	Callee	IsRunning		1035823	0					
ANR	1035854	Identifier	IsRunning		1035823	0					
ANR	1035855	ArgumentList			1035823	1					
ANR	1035856	CallExpression	Params ( ) . OptReconfig ( )		1035823	1					
ANR	1035857	Callee	Params ( ) . OptReconfig		1035823	0					
ANR	1035858	MemberAccess	Params ( ) . OptReconfig		1035823	0					
ANR	1035859	CallExpression	Params ( )		1035823	0					
ANR	1035860	Callee	Params		1035823	0					
ANR	1035861	Identifier	Params		1035823	0					
ANR	1035862	ArgumentList			1035823	1					
ANR	1035863	Identifier	OptReconfig		1035823	1					
ANR	1035864	ArgumentList			1035823	1					
ANR	1035865	CompoundStatement		9:50:237:237	1035823	1					
ANR	1035866	ReturnStatement	return SendHup ( ) ;	142:2:3472:3489	1035823	0	True				
ANR	1035867	CallExpression	SendHup ( )		1035823	0					
ANR	1035868	Callee	SendHup		1035823	0					
ANR	1035869	Identifier	SendHup		1035823	0					
ANR	1035870	ArgumentList			1035823	1					
ANR	1035871	IfStatement	if ( IsIdle ( ) && ( IsPeriodic ( ) || IsWaitForExit ( ) ) )		1035823	2					
ANR	1035872	Condition	IsIdle ( ) && ( IsPeriodic ( ) || IsWaitForExit ( ) )	146:7:3559:3605	1035823	0	True				
ANR	1035873	AndExpression	IsIdle ( ) && ( IsPeriodic ( ) || IsWaitForExit ( ) )		1035823	0		&&			
ANR	1035874	CallExpression	IsIdle ( )		1035823	0					
ANR	1035875	Callee	IsIdle		1035823	0					
ANR	1035876	Identifier	IsIdle		1035823	0					
ANR	1035877	ArgumentList			1035823	1					
ANR	1035878	OrExpression	IsPeriodic ( ) || IsWaitForExit ( )		1035823	1		||			
ANR	1035879	CallExpression	IsPeriodic ( )		1035823	0					
ANR	1035880	Callee	IsPeriodic		1035823	0					
ANR	1035881	Identifier	IsPeriodic		1035823	0					
ANR	1035882	ArgumentList			1035823	1					
ANR	1035883	CallExpression	IsWaitForExit ( )		1035823	1					
ANR	1035884	Callee	IsWaitForExit		1035823	0					
ANR	1035885	Identifier	IsWaitForExit		1035823	0					
ANR	1035886	ArgumentList			1035823	1					
ANR	1035887	CompoundStatement		20:2:487:502	1035823	1					
ANR	1035888	IfStatement	if ( Period ( ) == m_old_period )		1035823	0					
ANR	1035889	Condition	Period ( ) == m_old_period	147:7:3619:3642	1035823	0	True				
ANR	1035890	EqualityExpression	Period ( ) == m_old_period		1035823	0		==			
ANR	1035891	CallExpression	Period ( )		1035823	0					
ANR	1035892	Callee	Period		1035823	0					
ANR	1035893	Identifier	Period		1035823	0					
ANR	1035894	ArgumentList			1035823	1					
ANR	1035895	Identifier	m_old_period		1035823	1					
ANR	1035896	CompoundStatement		15:34:415:415	1035823	1					
ANR	1035897	ReturnStatement	return 0 ;	148:3:3651:3659	1035823	0	True				
ANR	1035898	PrimaryExpression	0		1035823	0					
ANR	1035899	IdentifierDeclStatement	unsigned now = time ( NULL ) ;	150:2:3667:3692	1035823	1	True				
ANR	1035900	IdentifierDecl	now = time ( NULL )		1035823	0					
ANR	1035901	IdentifierDeclType	unsigned		1035823	0					
ANR	1035902	Identifier	now		1035823	1					
ANR	1035903	AssignmentExpression	now = time ( NULL )		1035823	2		=			
ANR	1035904	Identifier	now		1035823	0					
ANR	1035905	CallExpression	time ( NULL )		1035823	1					
ANR	1035906	Callee	time		1035823	0					
ANR	1035907	Identifier	time		1035823	0					
ANR	1035908	ArgumentList	NULL		1035823	1					
ANR	1035909	Argument	NULL		1035823	0					
ANR	1035910	Identifier	NULL		1035823	0					
ANR	1035911	IdentifierDeclStatement	unsigned last_time ;	151:2:3696:3714	1035823	2	True				
ANR	1035912	IdentifierDecl	last_time		1035823	0					
ANR	1035913	IdentifierDeclType	unsigned		1035823	0					
ANR	1035914	Identifier	last_time		1035823	1					
ANR	1035915	IdentifierDeclStatement	unsigned period ;	152:2:3718:3733	1035823	3	True				
ANR	1035916	IdentifierDecl	period		1035823	0					
ANR	1035917	IdentifierDeclType	unsigned		1035823	0					
ANR	1035918	Identifier	period		1035823	1					
ANR	1035919	IfStatement	if ( IsPeriodic ( ) )		1035823	4					
ANR	1035920	Condition	IsPeriodic ( )	153:7:3742:3753	1035823	0	True				
ANR	1035921	CallExpression	IsPeriodic ( )		1035823	0					
ANR	1035922	Callee	IsPeriodic		1035823	0					
ANR	1035923	Identifier	IsPeriodic		1035823	0					
ANR	1035924	ArgumentList			1035823	1					
ANR	1035925	CompoundStatement		21:22:526:526	1035823	1					
ANR	1035926	ExpressionStatement	last_time = m_last_start_time	154:3:3762:3791	1035823	0	True				
ANR	1035927	AssignmentExpression	last_time = m_last_start_time		1035823	0		=			
ANR	1035928	Identifier	last_time		1035823	0					
ANR	1035929	Identifier	m_last_start_time		1035823	1					
ANR	1035930	ExpressionStatement	period = Period ( )	155:3:3796:3813	1035823	1	True				
ANR	1035931	AssignmentExpression	period = Period ( )		1035823	0		=			
ANR	1035932	Identifier	period		1035823	0					
ANR	1035933	CallExpression	Period ( )		1035823	1					
ANR	1035934	Callee	Period		1035823	0					
ANR	1035935	Identifier	Period		1035823	0					
ANR	1035936	ArgumentList			1035823	1					
ANR	1035937	ElseStatement	else		1035823	0					
ANR	1035938	CompoundStatement		25:7:595:595	1035823	0					
ANR	1035939	ExpressionStatement	last_time = m_last_exit_time	158:3:3831:3859	1035823	0	True				
ANR	1035940	AssignmentExpression	last_time = m_last_exit_time		1035823	0		=			
ANR	1035941	Identifier	last_time		1035823	0					
ANR	1035942	Identifier	m_last_exit_time		1035823	1					
ANR	1035943	ExpressionStatement	period = TIMER_NEVER	159:3:3864:3884	1035823	1	True				
ANR	1035944	AssignmentExpression	period = TIMER_NEVER		1035823	0		=			
ANR	1035945	Identifier	period		1035823	0					
ANR	1035946	Identifier	TIMER_NEVER		1035823	1					
ANR	1035947	IfStatement	if ( last_time + Period ( ) < now )		1035823	5					
ANR	1035948	Condition	last_time + Period ( ) < now	163:7:3952:3977	1035823	0	True				
ANR	1035949	RelationalExpression	last_time + Period ( ) < now		1035823	0		<			
ANR	1035950	AdditiveExpression	last_time + Period ( )		1035823	0		+			
ANR	1035951	Identifier	last_time		1035823	0					
ANR	1035952	CallExpression	Period ( )		1035823	1					
ANR	1035953	Callee	Period		1035823	0					
ANR	1035954	Identifier	Period		1035823	0					
ANR	1035955	ArgumentList			1035823	1					
ANR	1035956	Identifier	now		1035823	1					
ANR	1035957	CompoundStatement		31:36:750:750	1035823	1					
ANR	1035958	ExpressionStatement	CancelRunTimer ( )	164:3:3986:4003	1035823	0	True				
ANR	1035959	CallExpression	CancelRunTimer ( )		1035823	0					
ANR	1035960	Callee	CancelRunTimer		1035823	0					
ANR	1035961	Identifier	CancelRunTimer		1035823	0					
ANR	1035962	ArgumentList			1035823	1					
ANR	1035963	ExpressionStatement	SetState ( CRON_READY )	165:3:4008:4030	1035823	1	True				
ANR	1035964	CallExpression	SetState ( CRON_READY )		1035823	0					
ANR	1035965	Callee	SetState		1035823	0					
ANR	1035966	Identifier	SetState		1035823	0					
ANR	1035967	ArgumentList	CRON_READY		1035823	1					
ANR	1035968	Argument	CRON_READY		1035823	0					
ANR	1035969	Identifier	CRON_READY		1035823	0					
ANR	1035970	IfStatement	if ( IsPeriodic ( ) )		1035823	2					
ANR	1035971	Condition	IsPeriodic ( )	166:8:4040:4051	1035823	0	True				
ANR	1035972	CallExpression	IsPeriodic ( )		1035823	0					
ANR	1035973	Callee	IsPeriodic		1035823	0					
ANR	1035974	Identifier	IsPeriodic		1035823	0					
ANR	1035975	ArgumentList			1035823	1					
ANR	1035976	CompoundStatement		34:24:825:825	1035823	1					
ANR	1035977	ReturnStatement	"return SetTimer ( Period ( ) , period ) ;"	167:4:4062:4097	1035823	0	True				
ANR	1035978	CallExpression	"SetTimer ( Period ( ) , period )"		1035823	0					
ANR	1035979	Callee	SetTimer		1035823	0					
ANR	1035980	Identifier	SetTimer		1035823	0					
ANR	1035981	ArgumentList	Period ( )		1035823	1					
ANR	1035982	Argument	Period ( )		1035823	0					
ANR	1035983	CallExpression	Period ( )		1035823	0					
ANR	1035984	Callee	Period		1035823	0					
ANR	1035985	Identifier	Period		1035823	0					
ANR	1035986	ArgumentList			1035823	1					
ANR	1035987	Argument	period		1035823	1					
ANR	1035988	Identifier	period		1035823	0					
ANR	1035989	ReturnStatement	return 0 ;	169:3:4107:4115	1035823	3	True				
ANR	1035990	PrimaryExpression	0		1035823	0					
ANR	1035991	ElseStatement	else		1035823	0					
ANR	1035992	CompoundStatement		39:7:897:897	1035823	0					
ANR	1035993	ReturnStatement	"return SetTimer ( last_time + Period ( ) - now , period ) ;"	172:3:4133:4186	1035823	0	True				
ANR	1035994	CallExpression	"SetTimer ( last_time + Period ( ) - now , period )"		1035823	0					
ANR	1035995	Callee	SetTimer		1035823	0					
ANR	1035996	Identifier	SetTimer		1035823	0					
ANR	1035997	ArgumentList	last_time + Period ( ) - now		1035823	1					
ANR	1035998	Argument	last_time + Period ( ) - now		1035823	0					
ANR	1035999	AdditiveExpression	last_time + Period ( ) - now		1035823	0		+			
ANR	1036000	Identifier	last_time		1035823	0					
ANR	1036001	AdditiveExpression	Period ( ) - now		1035823	1		-			
ANR	1036002	CallExpression	Period ( )		1035823	0					
ANR	1036003	Callee	Period		1035823	0					
ANR	1036004	Identifier	Period		1035823	0					
ANR	1036005	ArgumentList			1035823	1					
ANR	1036006	Identifier	now		1035823	1					
ANR	1036007	Argument	period		1035823	1					
ANR	1036008	Identifier	period		1035823	0					
ANR	1036009	ReturnStatement	return 0 ;	176:1:4197:4205	1035823	3	True				
ANR	1036010	PrimaryExpression	0		1035823	0					
ANR	1036011	ReturnType	int		1035823	1					
ANR	1036012	Identifier	CronJob :: HandleReconfig		1035823	2					
ANR	1036013	ParameterList			1035823	3					
ANR	1036014	CFGEntryNode	ENTRY		1035823		True				
ANR	1036015	CFGExitNode	EXIT		1035823		True				
ANR	1036016	Symbol	SendHup		1035823						
ANR	1036017	Symbol	period		1035823						
ANR	1036018	Symbol	m_last_start_time		1035823						
ANR	1036019	Symbol	IsPeriodic		1035823						
ANR	1036020	Symbol	NULL		1035823						
ANR	1036021	Symbol	m_num_runs		1035823						
ANR	1036022	Symbol	IsRunning		1035823						
ANR	1036023	Symbol	Params		1035823						
ANR	1036024	Symbol	Period		1035823						
ANR	1036025	Symbol	Params ( ) . OptReconfig		1035823						
ANR	1036026	Symbol	m_old_period		1035823						
ANR	1036027	Symbol	Params ( ) . OptReconfigRerun		1035823						
ANR	1036028	Symbol	CRON_READY		1035823						
ANR	1036029	Symbol	last_time		1035823						
ANR	1036030	Symbol	IsIdle		1035823						
ANR	1036031	Symbol	now		1035823						
ANR	1036032	Symbol	SetTimer		1035823						
ANR	1036033	Symbol	time		1035823						
ANR	1036034	Symbol	m_last_exit_time		1035823						
ANR	1036035	Symbol	TIMER_NEVER		1035823						
ANR	1036036	Symbol	IsWaitForExit		1035823						
ANR	1036037	Function	CronJob :: Schedule	180:0:4229:5444							
ANR	1036038	FunctionDef	CronJob :: Schedule ()		1036037	0					
ANR	1036039	CompoundStatement		182:0:4259:5444	1036037	0					
ANR	1036040	Statement	dprintf	183:1:4262:4268	1036037	0	True				
ANR	1036041	Statement	(	183:8:4269:4269	1036037	1	True				
ANR	1036042	Statement	D_FULLDEBUG	183:10:4271:4281	1036037	2	True				
ANR	1036043	Statement	","	183:21:4282:4282	1036037	3	True				
ANR	1036044	Statement	"""CronJob::Schedule '%s' """	184:4:4288:4312	1036037	4	True				
ANR	1036045	Statement	"""IR=%c IP=%c IWE=%c IOS=%c IOD=%c nr=%d nf=%d\\n"""	185:4:4318:4365	1036037	5	True				
ANR	1036046	Statement	","	185:52:4366:4366	1036037	6	True				
ANR	1036047	Statement	GetName	186:4:4372:4378	1036037	7	True				
ANR	1036048	Statement	(	186:11:4379:4379	1036037	8	True				
ANR	1036049	Statement	)	186:12:4380:4380	1036037	9	True				
ANR	1036050	Statement	","	186:13:4381:4381	1036037	10	True				
ANR	1036051	Statement	IsReady	187:4:4387:4393	1036037	11	True				
ANR	1036052	Statement	(	187:11:4394:4394	1036037	12	True				
ANR	1036053	Statement	)	187:12:4395:4395	1036037	13	True				
ANR	1036054	Statement	?	187:14:4397:4397	1036037	14	True				
ANR	1036055	Label	'T' :	187:16:4399:4403	1036037	15	True				
ANR	1036056	Statement	'F'	187:22:4405:4407	1036037	16	True				
ANR	1036057	Statement	","	187:25:4408:4408	1036037	17	True				
ANR	1036058	Statement	IsPeriodic	188:4:4414:4423	1036037	18	True				
ANR	1036059	Statement	(	188:14:4424:4424	1036037	19	True				
ANR	1036060	Statement	)	188:15:4425:4425	1036037	20	True				
ANR	1036061	Statement	?	188:17:4427:4427	1036037	21	True				
ANR	1036062	Label	'T' :	188:19:4429:4433	1036037	22	True				
ANR	1036063	Statement	'F'	188:25:4435:4437	1036037	23	True				
ANR	1036064	Statement	","	188:28:4438:4438	1036037	24	True				
ANR	1036065	Statement	IsWaitForExit	189:4:4444:4456	1036037	25	True				
ANR	1036066	Statement	(	189:17:4457:4457	1036037	26	True				
ANR	1036067	Statement	)	189:18:4458:4458	1036037	27	True				
ANR	1036068	Statement	?	189:20:4460:4460	1036037	28	True				
ANR	1036069	Label	'T' :	189:22:4462:4466	1036037	29	True				
ANR	1036070	Statement	'F'	189:28:4468:4470	1036037	30	True				
ANR	1036071	Statement	","	189:31:4471:4471	1036037	31	True				
ANR	1036072	Statement	IsOneShot	190:4:4477:4485	1036037	32	True				
ANR	1036073	Statement	(	190:13:4486:4486	1036037	33	True				
ANR	1036074	Statement	)	190:14:4487:4487	1036037	34	True				
ANR	1036075	Statement	?	190:16:4489:4489	1036037	35	True				
ANR	1036076	Label	'T' :	190:18:4491:4495	1036037	36	True				
ANR	1036077	Statement	'F'	190:24:4497:4499	1036037	37	True				
ANR	1036078	Statement	","	190:27:4500:4500	1036037	38	True				
ANR	1036079	Statement	IsOnDemand	191:4:4506:4515	1036037	39	True				
ANR	1036080	Statement	(	191:14:4516:4516	1036037	40	True				
ANR	1036081	Statement	)	191:15:4517:4517	1036037	41	True				
ANR	1036082	Statement	?	191:17:4519:4519	1036037	42	True				
ANR	1036083	Label	'T' :	191:19:4521:4525	1036037	43	True				
ANR	1036084	Statement	'F'	191:25:4527:4529	1036037	44	True				
ANR	1036085	Statement	","	191:28:4530:4530	1036037	45	True				
ANR	1036086	Statement	m_num_runs	192:4:4536:4545	1036037	46	True				
ANR	1036087	Statement	","	192:14:4546:4546	1036037	47	True				
ANR	1036088	Statement	m_num_fails	193:4:4552:4562	1036037	48	True				
ANR	1036089	Statement	)	193:16:4564:4564	1036037	49	True				
ANR	1036090	ExpressionStatement		193:17:4565:4565	1036037	50	True				
ANR	1036091	IfStatement	if ( ! IsInitialized ( ) )		1036037	51					
ANR	1036092	Condition	! IsInitialized ( )	196:6:4622:4638	1036037	0	True				
ANR	1036093	UnaryOperationExpression	! IsInitialized ( )		1036037	0					
ANR	1036094	UnaryOperator	!		1036037	0					
ANR	1036095	CallExpression	IsInitialized ( )		1036037	1					
ANR	1036096	Callee	IsInitialized		1036037	0					
ANR	1036097	Identifier	IsInitialized		1036037	0					
ANR	1036098	ArgumentList			1036037	1					
ANR	1036099	CompoundStatement		15:26:382:382	1036037	1					
ANR	1036100	ReturnStatement	return 0 ;	197:2:4646:4654	1036037	0	True				
ANR	1036101	PrimaryExpression	0		1036037	0					
ANR	1036102	IdentifierDeclStatement	int status = 0 ;	201:1:4696:4710	1036037	52	True				
ANR	1036103	IdentifierDecl	status = 0		1036037	0					
ANR	1036104	IdentifierDeclType	int		1036037	0					
ANR	1036105	Identifier	status		1036037	1					
ANR	1036106	AssignmentExpression	status = 0		1036037	2		=			
ANR	1036107	Identifier	status		1036037	0					
ANR	1036108	PrimaryExpression	0		1036037	1					
ANR	1036109	IfStatement	if ( IsReady ( ) )		1036037	53					
ANR	1036110	Condition	IsReady ( )	204:6:4771:4779	1036037	0	True				
ANR	1036111	CallExpression	IsReady ( )		1036037	0					
ANR	1036112	Callee	IsReady		1036037	0					
ANR	1036113	Identifier	IsReady		1036037	0					
ANR	1036114	ArgumentList			1036037	1					
ANR	1036115	CompoundStatement		23:18:523:523	1036037	1					
ANR	1036116	ExpressionStatement	status = StartJob ( )	205:2:4787:4807	1036037	0	True				
ANR	1036117	AssignmentExpression	status = StartJob ( )		1036037	0		=			
ANR	1036118	Identifier	status		1036037	0					
ANR	1036119	CallExpression	StartJob ( )		1036037	1					
ANR	1036120	Callee	StartJob		1036037	0					
ANR	1036121	Identifier	StartJob		1036037	0					
ANR	1036122	ArgumentList			1036037	1					
ANR	1036123	ElseStatement	else		1036037	0					
ANR	1036124	IfStatement	if ( IsPeriodic ( ) )		1036037	0					
ANR	1036125	Condition	IsPeriodic ( )	209:11:4860:4871	1036037	0	True				
ANR	1036126	CallExpression	IsPeriodic ( )		1036037	0					
ANR	1036127	Callee	IsPeriodic		1036037	0					
ANR	1036128	Identifier	IsPeriodic		1036037	0					
ANR	1036129	ArgumentList			1036037	1					
ANR	1036130	CompoundStatement		28:26:615:615	1036037	1					
ANR	1036131	IfStatement	if ( ( 0 == m_num_runs ) && ( 0 == m_num_fails ) )		1036037	0					
ANR	1036132	Condition	( 0 == m_num_runs ) && ( 0 == m_num_fails )	212:8:4913:4955	1036037	0	True				
ANR	1036133	AndExpression	( 0 == m_num_runs ) && ( 0 == m_num_fails )		1036037	0		&&			
ANR	1036134	EqualityExpression	0 == m_num_runs		1036037	0		==			
ANR	1036135	PrimaryExpression	0		1036037	0					
ANR	1036136	Identifier	m_num_runs		1036037	1					
ANR	1036137	EqualityExpression	0 == m_num_fails		1036037	1		==			
ANR	1036138	PrimaryExpression	0		1036037	0					
ANR	1036139	Identifier	m_num_fails		1036037	1					
ANR	1036140	CompoundStatement		31:55:700:700	1036037	1					
ANR	1036141	ExpressionStatement	status = RunJob ( )	213:3:4965:4983	1036037	0	True				
ANR	1036142	AssignmentExpression	status = RunJob ( )		1036037	0		=			
ANR	1036143	Identifier	status		1036037	0					
ANR	1036144	CallExpression	RunJob ( )		1036037	1					
ANR	1036145	Callee	RunJob		1036037	0					
ANR	1036146	Identifier	RunJob		1036037	0					
ANR	1036147	ArgumentList			1036037	1					
ANR	1036148	ElseStatement	else		1036037	0					
ANR	1036149	IfStatement	if ( IsWaitForExit ( ) )		1036037	0					
ANR	1036150	Condition	IsWaitForExit ( )	218:11:5049:5063	1036037	0	True				
ANR	1036151	CallExpression	IsWaitForExit ( )		1036037	0					
ANR	1036152	Callee	IsWaitForExit		1036037	0					
ANR	1036153	Identifier	IsWaitForExit		1036037	0					
ANR	1036154	ArgumentList			1036037	1					
ANR	1036155	CompoundStatement		37:29:807:807	1036037	1					
ANR	1036156	IfStatement	if ( ( 0 == m_num_runs ) && ( 0 == m_num_fails ) )		1036037	0					
ANR	1036157	Condition	( 0 == m_num_runs ) && ( 0 == m_num_fails )	219:8:5077:5119	1036037	0	True				
ANR	1036158	AndExpression	( 0 == m_num_runs ) && ( 0 == m_num_fails )		1036037	0		&&			
ANR	1036159	EqualityExpression	0 == m_num_runs		1036037	0		==			
ANR	1036160	PrimaryExpression	0		1036037	0					
ANR	1036161	Identifier	m_num_runs		1036037	1					
ANR	1036162	EqualityExpression	0 == m_num_fails		1036037	1		==			
ANR	1036163	PrimaryExpression	0		1036037	0					
ANR	1036164	Identifier	m_num_fails		1036037	1					
ANR	1036165	CompoundStatement		38:55:864:864	1036037	1					
ANR	1036166	ExpressionStatement	status = StartJob ( )	220:3:5129:5149	1036037	0	True				
ANR	1036167	AssignmentExpression	status = StartJob ( )		1036037	0		=			
ANR	1036168	Identifier	status		1036037	0					
ANR	1036169	CallExpression	StartJob ( )		1036037	1					
ANR	1036170	Callee	StartJob		1036037	0					
ANR	1036171	Identifier	StartJob		1036037	0					
ANR	1036172	ArgumentList			1036037	1					
ANR	1036173	ElseStatement	else		1036037	0					
ANR	1036174	IfStatement	if ( IsOneShot ( ) )		1036037	0					
ANR	1036175	Condition	IsOneShot ( )	225:11:5229:5239	1036037	0	True				
ANR	1036176	CallExpression	IsOneShot ( )		1036037	0					
ANR	1036177	Callee	IsOneShot		1036037	0					
ANR	1036178	Identifier	IsOneShot		1036037	0					
ANR	1036179	ArgumentList			1036037	1					
ANR	1036180	CompoundStatement		44:25:983:983	1036037	1					
ANR	1036181	IfStatement	if ( ( 0 == m_num_runs ) && ( 0 == m_num_fails ) )		1036037	0					
ANR	1036182	Condition	( 0 == m_num_runs ) && ( 0 == m_num_fails )	226:8:5253:5295	1036037	0	True				
ANR	1036183	AndExpression	( 0 == m_num_runs ) && ( 0 == m_num_fails )		1036037	0		&&			
ANR	1036184	EqualityExpression	0 == m_num_runs		1036037	0		==			
ANR	1036185	PrimaryExpression	0		1036037	0					
ANR	1036186	Identifier	m_num_runs		1036037	1					
ANR	1036187	EqualityExpression	0 == m_num_fails		1036037	1		==			
ANR	1036188	PrimaryExpression	0		1036037	0					
ANR	1036189	Identifier	m_num_fails		1036037	1					
ANR	1036190	CompoundStatement		45:55:1040:1040	1036037	1					
ANR	1036191	ExpressionStatement	status = StartJob ( )	227:3:5305:5325	1036037	0	True				
ANR	1036192	AssignmentExpression	status = StartJob ( )		1036037	0		=			
ANR	1036193	Identifier	status		1036037	0					
ANR	1036194	CallExpression	StartJob ( )		1036037	1					
ANR	1036195	Callee	StartJob		1036037	0					
ANR	1036196	Identifier	StartJob		1036037	0					
ANR	1036197	ArgumentList			1036037	1					
ANR	1036198	ElseStatement	else		1036037	0					
ANR	1036199	IfStatement	if ( IsOnDemand ( ) )		1036037	0					
ANR	1036200	Condition	IsOnDemand ( )	232:11:5365:5376	1036037	0	True				
ANR	1036201	CallExpression	IsOnDemand ( )		1036037	0					
ANR	1036202	Callee	IsOnDemand		1036037	0					
ANR	1036203	Identifier	IsOnDemand		1036037	0					
ANR	1036204	ArgumentList			1036037	1					
ANR	1036205	CompoundStatement		51:26:1120:1120	1036037	1					
ANR	1036206	ReturnStatement	return status ;	237:1:5429:5442	1036037	54	True				
ANR	1036207	Identifier	status		1036037	0					
ANR	1036208	ReturnType	int		1036037	1					
ANR	1036209	Identifier	CronJob :: Schedule		1036037	2					
ANR	1036210	ParameterList			1036037	3					
ANR	1036211	CFGEntryNode	ENTRY		1036037		True				
ANR	1036212	CFGExitNode	EXIT		1036037		True				
ANR	1036213	Symbol	IsOnDemand		1036037						
ANR	1036214	Symbol	IsPeriodic		1036037						
ANR	1036215	Symbol	RunJob		1036037						
ANR	1036216	Symbol	IsOneShot		1036037						
ANR	1036217	Symbol	m_num_runs		1036037						
ANR	1036218	Symbol	m_num_fails		1036037						
ANR	1036219	Symbol	IsInitialized		1036037						
ANR	1036220	Symbol	StartJob		1036037						
ANR	1036221	Symbol	IsReady		1036037						
ANR	1036222	Symbol	IsWaitForExit		1036037						
ANR	1036223	Symbol	status		1036037						
ANR	1036224	Function	CronJob :: StartOnDemand	241:0:5473:5607							
ANR	1036225	FunctionDef	CronJob :: StartOnDemand ()		1036224	0					
ANR	1036226	CompoundStatement		243:0:5508:5607	1036224	0					
ANR	1036227	IfStatement	if ( IsOnDemand ( ) && IsIdle ( ) )		1036224	0					
ANR	1036228	Condition	IsOnDemand ( ) && IsIdle ( )	244:6:5516:5539	1036224	0	True				
ANR	1036229	AndExpression	IsOnDemand ( ) && IsIdle ( )		1036224	0		&&			
ANR	1036230	CallExpression	IsOnDemand ( )		1036224	0					
ANR	1036231	Callee	IsOnDemand		1036224	0					
ANR	1036232	Identifier	IsOnDemand		1036224	0					
ANR	1036233	ArgumentList			1036224	1					
ANR	1036234	CallExpression	IsIdle ( )		1036224	1					
ANR	1036235	Callee	IsIdle		1036224	0					
ANR	1036236	Identifier	IsIdle		1036224	0					
ANR	1036237	ArgumentList			1036224	1					
ANR	1036238	CompoundStatement		2:33:34:34	1036224	1					
ANR	1036239	ExpressionStatement	SetState ( CRON_READY )	245:2:5547:5569	1036224	0	True				
ANR	1036240	CallExpression	SetState ( CRON_READY )		1036224	0					
ANR	1036241	Callee	SetState		1036224	0					
ANR	1036242	Identifier	SetState		1036224	0					
ANR	1036243	ArgumentList	CRON_READY		1036224	1					
ANR	1036244	Argument	CRON_READY		1036224	0					
ANR	1036245	Identifier	CRON_READY		1036224	0					
ANR	1036246	ReturnStatement	return StartJob ( ) ;	246:2:5573:5591	1036224	1	True				
ANR	1036247	CallExpression	StartJob ( )		1036224	0					
ANR	1036248	Callee	StartJob		1036224	0					
ANR	1036249	Identifier	StartJob		1036224	0					
ANR	1036250	ArgumentList			1036224	1					
ANR	1036251	ReturnStatement	return 0 ;	248:1:5597:5605	1036224	1	True				
ANR	1036252	PrimaryExpression	0		1036224	0					
ANR	1036253	ReturnType	int		1036224	1					
ANR	1036254	Identifier	CronJob :: StartOnDemand		1036224	2					
ANR	1036255	ParameterList			1036224	3					
ANR	1036256	CFGEntryNode	ENTRY		1036224		True				
ANR	1036257	CFGExitNode	EXIT		1036224		True				
ANR	1036258	Symbol	IsOnDemand		1036224						
ANR	1036259	Symbol	CRON_READY		1036224						
ANR	1036260	Symbol	IsIdle		1036224						
ANR	1036261	Symbol	StartJob		1036224						
ANR	1036262	Function	CronJob :: SendHup	252:0:5629:6244							
ANR	1036263	FunctionDef	CronJob :: SendHup ()		1036262	0					
ANR	1036264	CompoundStatement		254:0:5658:6244	1036262	0					
ANR	1036265	IfStatement	if ( ! m_num_outputs )		1036262	0					
ANR	1036266	Condition	! m_num_outputs	257:6:5721:5735	1036262	0	True				
ANR	1036267	UnaryOperationExpression	! m_num_outputs		1036262	0					
ANR	1036268	UnaryOperator	!		1036262	0					
ANR	1036269	Identifier	m_num_outputs		1036262	1					
ANR	1036270	CompoundStatement		4:24:80:80	1036262	1					
ANR	1036271	ExpressionStatement	"dprintf ( D_ALWAYS , ""Not HUPing '%s' pid %d before it's first output\\n"" , GetName ( ) , m_pid )"	258:2:5743:5843	1036262	0	True				
ANR	1036272	CallExpression	"dprintf ( D_ALWAYS , ""Not HUPing '%s' pid %d before it's first output\\n"" , GetName ( ) , m_pid )"		1036262	0					
ANR	1036273	Callee	dprintf		1036262	0					
ANR	1036274	Identifier	dprintf		1036262	0					
ANR	1036275	ArgumentList	D_ALWAYS		1036262	1					
ANR	1036276	Argument	D_ALWAYS		1036262	0					
ANR	1036277	Identifier	D_ALWAYS		1036262	0					
ANR	1036278	Argument	"""Not HUPing '%s' pid %d before it's first output\\n"""		1036262	1					
ANR	1036279	PrimaryExpression	"""Not HUPing '%s' pid %d before it's first output\\n"""		1036262	0					
ANR	1036280	Argument	GetName ( )		1036262	2					
ANR	1036281	CallExpression	GetName ( )		1036262	0					
ANR	1036282	Callee	GetName		1036262	0					
ANR	1036283	Identifier	GetName		1036262	0					
ANR	1036284	ArgumentList			1036262	1					
ANR	1036285	Argument	m_pid		1036262	3					
ANR	1036286	Identifier	m_pid		1036262	0					
ANR	1036287	ReturnStatement	return 0 ;	261:2:5847:5855	1036262	1	True				
ANR	1036288	PrimaryExpression	0		1036262	0					
ANR	1036289	IfStatement	if ( m_pid <= 0 )		1036262	1					
ANR	1036290	Condition	m_pid <= 0	265:6:5904:5913	1036262	0	True				
ANR	1036291	RelationalExpression	m_pid <= 0		1036262	0		<=			
ANR	1036292	Identifier	m_pid		1036262	0					
ANR	1036293	PrimaryExpression	0		1036262	1					
ANR	1036294	CompoundStatement		12:19:258:258	1036262	1					
ANR	1036295	ReturnStatement	return 0 ;	266:2:5921:5929	1036262	0	True				
ANR	1036296	PrimaryExpression	0		1036262	0					
ANR	1036297	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Sending HUP to '%s' pid %d\\n"" , GetName ( ) , m_pid )"	272:1:6110:6192	1036262	2	True				
ANR	1036298	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Sending HUP to '%s' pid %d\\n"" , GetName ( ) , m_pid )"		1036262	0					
ANR	1036299	Callee	dprintf		1036262	0					
ANR	1036300	Identifier	dprintf		1036262	0					
ANR	1036301	ArgumentList	D_ALWAYS		1036262	1					
ANR	1036302	Argument	D_ALWAYS		1036262	0					
ANR	1036303	Identifier	D_ALWAYS		1036262	0					
ANR	1036304	Argument	"""CronJob: Sending HUP to '%s' pid %d\\n"""		1036262	1					
ANR	1036305	PrimaryExpression	"""CronJob: Sending HUP to '%s' pid %d\\n"""		1036262	0					
ANR	1036306	Argument	GetName ( )		1036262	2					
ANR	1036307	CallExpression	GetName ( )		1036262	0					
ANR	1036308	Callee	GetName		1036262	0					
ANR	1036309	Identifier	GetName		1036262	0					
ANR	1036310	ArgumentList			1036262	1					
ANR	1036311	Argument	m_pid		1036262	3					
ANR	1036312	Identifier	m_pid		1036262	0					
ANR	1036313	ReturnStatement	"return daemonCore -> Send_Signal ( m_pid , SIGHUP ) ;"	274:1:6195:6242	1036262	3	True				
ANR	1036314	CallExpression	"daemonCore -> Send_Signal ( m_pid , SIGHUP )"		1036262	0					
ANR	1036315	Callee	daemonCore -> Send_Signal		1036262	0					
ANR	1036316	PtrMemberAccess	daemonCore -> Send_Signal		1036262	0					
ANR	1036317	Identifier	daemonCore		1036262	0					
ANR	1036318	Identifier	Send_Signal		1036262	1					
ANR	1036319	ArgumentList	m_pid		1036262	1					
ANR	1036320	Argument	m_pid		1036262	0					
ANR	1036321	Identifier	m_pid		1036262	0					
ANR	1036322	Argument	SIGHUP		1036262	1					
ANR	1036323	Identifier	SIGHUP		1036262	0					
ANR	1036324	ReturnType	int		1036262	1					
ANR	1036325	Identifier	CronJob :: SendHup		1036262	2					
ANR	1036326	ParameterList			1036262	3					
ANR	1036327	CFGEntryNode	ENTRY		1036262		True				
ANR	1036328	CFGExitNode	EXIT		1036262		True				
ANR	1036329	Symbol	daemonCore -> Send_Signal		1036262						
ANR	1036330	Symbol	m_pid		1036262						
ANR	1036331	Symbol	* daemonCore		1036262						
ANR	1036332	Symbol	m_num_outputs		1036262						
ANR	1036333	Symbol	daemonCore		1036262						
ANR	1036334	Symbol	D_ALWAYS		1036262						
ANR	1036335	Symbol	GetName		1036262						
ANR	1036336	Symbol	SIGHUP		1036262						
ANR	1036337	Function	CronJob :: RunJob	278:0:6275:6641							
ANR	1036338	FunctionDef	CronJob :: RunJob ()		1036337	0					
ANR	1036339	CompoundStatement		280:0:6303:6641	1036337	0					
ANR	1036340	IfStatement	if ( IsAlive ( ) )		1036337	0					
ANR	1036341	Condition	IsAlive ( )	283:6:6365:6373	1036337	0	True				
ANR	1036342	CallExpression	IsAlive ( )		1036337	0					
ANR	1036343	Callee	IsAlive		1036337	0					
ANR	1036344	Identifier	IsAlive		1036337	0					
ANR	1036345	ArgumentList			1036337	1					
ANR	1036346	CompoundStatement		4:18:73:73	1036337	1					
ANR	1036347	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' is still running!\\n"" , GetName ( ) )"	284:2:6381:6457	1036337	0	True				
ANR	1036348	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' is still running!\\n"" , GetName ( ) )"		1036337	0					
ANR	1036349	Callee	dprintf		1036337	0					
ANR	1036350	Identifier	dprintf		1036337	0					
ANR	1036351	ArgumentList	D_ALWAYS		1036337	1					
ANR	1036352	Argument	D_ALWAYS		1036337	0					
ANR	1036353	Identifier	D_ALWAYS		1036337	0					
ANR	1036354	Argument	"""CronJob: Job '%s' is still running!\\n"""		1036337	1					
ANR	1036355	PrimaryExpression	"""CronJob: Job '%s' is still running!\\n"""		1036337	0					
ANR	1036356	Argument	GetName ( )		1036337	2					
ANR	1036357	CallExpression	GetName ( )		1036337	0					
ANR	1036358	Callee	GetName		1036337	0					
ANR	1036359	Identifier	GetName		1036337	0					
ANR	1036360	ArgumentList			1036337	1					
ANR	1036361	IfStatement	if ( Params ( ) . OptKill ( ) )		1036337	1					
ANR	1036362	Condition	Params ( ) . OptKill ( )	288:7:6536:6553	1036337	0	True				
ANR	1036363	CallExpression	Params ( ) . OptKill ( )		1036337	0					
ANR	1036364	Callee	Params ( ) . OptKill		1036337	0					
ANR	1036365	MemberAccess	Params ( ) . OptKill		1036337	0					
ANR	1036366	CallExpression	Params ( )		1036337	0					
ANR	1036367	Callee	Params		1036337	0					
ANR	1036368	Identifier	Params		1036337	0					
ANR	1036369	ArgumentList			1036337	1					
ANR	1036370	Identifier	OptKill		1036337	1					
ANR	1036371	ArgumentList			1036337	1					
ANR	1036372	CompoundStatement		9:28:253:253	1036337	1					
ANR	1036373	ReturnStatement	return KillJob ( false ) ;	289:3:6562:6585	1036337	0	True				
ANR	1036374	CallExpression	KillJob ( false )		1036337	0					
ANR	1036375	Callee	KillJob		1036337	0					
ANR	1036376	Identifier	KillJob		1036337	0					
ANR	1036377	ArgumentList	false		1036337	1					
ANR	1036378	Argument	false		1036337	0					
ANR	1036379	Identifier	false		1036337	0					
ANR	1036380	ElseStatement	else		1036337	0					
ANR	1036381	CompoundStatement		11:9:292:292	1036337	0					
ANR	1036382	ReturnStatement	return - 1 ;	291:3:6601:6610	1036337	0	True				
ANR	1036383	UnaryOperationExpression	- 1		1036337	0					
ANR	1036384	UnaryOperator	-		1036337	0					
ANR	1036385	PrimaryExpression	1		1036337	1					
ANR	1036386	ReturnStatement	return StartJob ( ) ;	295:1:6621:6639	1036337	1	True				
ANR	1036387	CallExpression	StartJob ( )		1036337	0					
ANR	1036388	Callee	StartJob		1036337	0					
ANR	1036389	Identifier	StartJob		1036337	0					
ANR	1036390	ArgumentList			1036337	1					
ANR	1036391	ReturnType	int		1036337	1					
ANR	1036392	Identifier	CronJob :: RunJob		1036337	2					
ANR	1036393	ParameterList			1036337	3					
ANR	1036394	CFGEntryNode	ENTRY		1036337		True				
ANR	1036395	CFGExitNode	EXIT		1036337		True				
ANR	1036396	Symbol	D_ALWAYS		1036337						
ANR	1036397	Symbol	false		1036337						
ANR	1036398	Symbol	IsAlive		1036337						
ANR	1036399	Symbol	Params		1036337						
ANR	1036400	Symbol	GetName		1036337						
ANR	1036401	Symbol	KillJob		1036337						
ANR	1036402	Symbol	Params ( ) . OptKill		1036337						
ANR	1036403	Symbol	StartJob		1036337						
ANR	1036404	Function	CronJob :: StartJob	299:0:6659:7293							
ANR	1036405	FunctionDef	CronJob :: StartJob ()		1036404	0					
ANR	1036406	CompoundStatement		301:0:6689:7293	1036404	0					
ANR	1036407	IfStatement	if ( ! IsIdle ( ) && ! IsReady ( ) )		1036404	0					
ANR	1036408	Condition	! IsIdle ( ) && ! IsReady ( )	303:6:6714:6736	1036404	0	True				
ANR	1036409	AndExpression	! IsIdle ( ) && ! IsReady ( )		1036404	0		&&			
ANR	1036410	UnaryOperationExpression	! IsIdle ( )		1036404	0					
ANR	1036411	UnaryOperator	!		1036404	0					
ANR	1036412	CallExpression	IsIdle ( )		1036404	1					
ANR	1036413	Callee	IsIdle		1036404	0					
ANR	1036414	Identifier	IsIdle		1036404	0					
ANR	1036415	ArgumentList			1036404	1					
ANR	1036416	UnaryOperationExpression	! IsReady ( )		1036404	1					
ANR	1036417	UnaryOperator	!		1036404	0					
ANR	1036418	CallExpression	IsReady ( )		1036404	1					
ANR	1036419	Callee	IsReady		1036404	0					
ANR	1036420	Identifier	IsReady		1036404	0					
ANR	1036421	ArgumentList			1036404	1					
ANR	1036422	CompoundStatement		3:32:50:50	1036404	1					
ANR	1036423	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' not idle!\\n"" , GetName ( ) )"	304:2:6744:6807	1036404	0	True				
ANR	1036424	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' not idle!\\n"" , GetName ( ) )"		1036404	0					
ANR	1036425	Callee	dprintf		1036404	0					
ANR	1036426	Identifier	dprintf		1036404	0					
ANR	1036427	ArgumentList	D_ALWAYS		1036404	1					
ANR	1036428	Argument	D_ALWAYS		1036404	0					
ANR	1036429	Identifier	D_ALWAYS		1036404	0					
ANR	1036430	Argument	"""CronJob: Job '%s' not idle!\\n"""		1036404	1					
ANR	1036431	PrimaryExpression	"""CronJob: Job '%s' not idle!\\n"""		1036404	0					
ANR	1036432	Argument	GetName ( )		1036404	2					
ANR	1036433	CallExpression	GetName ( )		1036404	0					
ANR	1036434	Callee	GetName		1036404	0					
ANR	1036435	Identifier	GetName		1036404	0					
ANR	1036436	ArgumentList			1036404	1					
ANR	1036437	ReturnStatement	return 0 ;	305:2:6811:6819	1036404	1	True				
ANR	1036438	PrimaryExpression	0		1036404	0					
ANR	1036439	IfStatement	if ( ! m_mgr . ShouldStartJob ( * this ) )		1036404	1					
ANR	1036440	Condition	! m_mgr . ShouldStartJob ( * this )	309:6:6855:6885	1036404	0	True				
ANR	1036441	UnaryOperationExpression	! m_mgr . ShouldStartJob ( * this )		1036404	0					
ANR	1036442	UnaryOperator	!		1036404	0					
ANR	1036443	CallExpression	m_mgr . ShouldStartJob ( * this )		1036404	1					
ANR	1036444	Callee	m_mgr . ShouldStartJob		1036404	0					
ANR	1036445	MemberAccess	m_mgr . ShouldStartJob		1036404	0					
ANR	1036446	Identifier	m_mgr		1036404	0					
ANR	1036447	Identifier	ShouldStartJob		1036404	1					
ANR	1036448	ArgumentList	* this		1036404	1					
ANR	1036449	Argument	* this		1036404	0					
ANR	1036450	UnaryOperationExpression	* this		1036404	0					
ANR	1036451	UnaryOperator	*		1036404	0					
ANR	1036452	Identifier	this		1036404	1					
ANR	1036453	CompoundStatement		9:40:199:199	1036404	1					
ANR	1036454	ExpressionStatement	SetState ( CRON_READY )	310:2:6893:6915	1036404	0	True				
ANR	1036455	CallExpression	SetState ( CRON_READY )		1036404	0					
ANR	1036456	Callee	SetState		1036404	0					
ANR	1036457	Identifier	SetState		1036404	0					
ANR	1036458	ArgumentList	CRON_READY		1036404	1					
ANR	1036459	Argument	CRON_READY		1036404	0					
ANR	1036460	Identifier	CRON_READY		1036404	0					
ANR	1036461	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Too busy to run job '%s'\\n"" , GetName ( ) )"	311:2:6919:6996	1036404	1	True				
ANR	1036462	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Too busy to run job '%s'\\n"" , GetName ( ) )"		1036404	0					
ANR	1036463	Callee	dprintf		1036404	0					
ANR	1036464	Identifier	dprintf		1036404	0					
ANR	1036465	ArgumentList	D_FULLDEBUG		1036404	1					
ANR	1036466	Argument	D_FULLDEBUG		1036404	0					
ANR	1036467	Identifier	D_FULLDEBUG		1036404	0					
ANR	1036468	Argument	"""CronJob: Too busy to run job '%s'\\n"""		1036404	1					
ANR	1036469	PrimaryExpression	"""CronJob: Too busy to run job '%s'\\n"""		1036404	0					
ANR	1036470	Argument	GetName ( )		1036404	2					
ANR	1036471	CallExpression	GetName ( )		1036404	0					
ANR	1036472	Callee	GetName		1036404	0					
ANR	1036473	Identifier	GetName		1036404	0					
ANR	1036474	ArgumentList			1036404	1					
ANR	1036475	ReturnStatement	return 0 ;	313:2:7000:7008	1036404	2	True				
ANR	1036476	PrimaryExpression	0		1036404	0					
ANR	1036477	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Starting job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"	316:1:7015:7106	1036404	2	True				
ANR	1036478	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Starting job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"		1036404	0					
ANR	1036479	Callee	dprintf		1036404	0					
ANR	1036480	Identifier	dprintf		1036404	0					
ANR	1036481	ArgumentList	D_FULLDEBUG		1036404	1					
ANR	1036482	Argument	D_FULLDEBUG		1036404	0					
ANR	1036483	Identifier	D_FULLDEBUG		1036404	0					
ANR	1036484	Argument	"""CronJob: Starting job '%s' (%s)\\n"""		1036404	1					
ANR	1036485	PrimaryExpression	"""CronJob: Starting job '%s' (%s)\\n"""		1036404	0					
ANR	1036486	Argument	GetName ( )		1036404	2					
ANR	1036487	CallExpression	GetName ( )		1036404	0					
ANR	1036488	Callee	GetName		1036404	0					
ANR	1036489	Identifier	GetName		1036404	0					
ANR	1036490	ArgumentList			1036404	1					
ANR	1036491	Argument	GetExecutable ( )		1036404	3					
ANR	1036492	CallExpression	GetExecutable ( )		1036404	0					
ANR	1036493	Callee	GetExecutable		1036404	0					
ANR	1036494	Identifier	GetExecutable		1036404	0					
ANR	1036495	ArgumentList			1036404	1					
ANR	1036496	IfStatement	if ( m_stdOutBuf -> FlushQueue ( ) )		1036404	3					
ANR	1036497	Condition	m_stdOutBuf -> FlushQueue ( )	320:6:7139:7164	1036404	0	True				
ANR	1036498	CallExpression	m_stdOutBuf -> FlushQueue ( )		1036404	0					
ANR	1036499	Callee	m_stdOutBuf -> FlushQueue		1036404	0					
ANR	1036500	PtrMemberAccess	m_stdOutBuf -> FlushQueue		1036404	0					
ANR	1036501	Identifier	m_stdOutBuf		1036404	0					
ANR	1036502	Identifier	FlushQueue		1036404	1					
ANR	1036503	ArgumentList			1036404	1					
ANR	1036504	CompoundStatement		20:35:478:478	1036404	1					
ANR	1036505	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s': Queue not empty!\\n"" , GetName ( ) )"	321:2:7172:7248	1036404	0	True				
ANR	1036506	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s': Queue not empty!\\n"" , GetName ( ) )"		1036404	0					
ANR	1036507	Callee	dprintf		1036404	0					
ANR	1036508	Identifier	dprintf		1036404	0					
ANR	1036509	ArgumentList	D_ALWAYS		1036404	1					
ANR	1036510	Argument	D_ALWAYS		1036404	0					
ANR	1036511	Identifier	D_ALWAYS		1036404	0					
ANR	1036512	Argument	"""CronJob: Job '%s': Queue not empty!\\n"""		1036404	1					
ANR	1036513	PrimaryExpression	"""CronJob: Job '%s': Queue not empty!\\n"""		1036404	0					
ANR	1036514	Argument	GetName ( )		1036404	2					
ANR	1036515	CallExpression	GetName ( )		1036404	0					
ANR	1036516	Callee	GetName		1036404	0					
ANR	1036517	Identifier	GetName		1036404	0					
ANR	1036518	ArgumentList			1036404	1					
ANR	1036519	ReturnStatement	return StartJobProcess ( ) ;	326:1:7266:7291	1036404	4	True				
ANR	1036520	CallExpression	StartJobProcess ( )		1036404	0					
ANR	1036521	Callee	StartJobProcess		1036404	0					
ANR	1036522	Identifier	StartJobProcess		1036404	0					
ANR	1036523	ArgumentList			1036404	1					
ANR	1036524	ReturnType	int		1036404	1					
ANR	1036525	Identifier	CronJob :: StartJob		1036404	2					
ANR	1036526	ParameterList			1036404	3					
ANR	1036527	CFGEntryNode	ENTRY		1036404		True				
ANR	1036528	CFGExitNode	EXIT		1036404		True				
ANR	1036529	Symbol	GetExecutable		1036404						
ANR	1036530	Symbol	m_mgr . ShouldStartJob		1036404						
ANR	1036531	Symbol	D_ALWAYS		1036404						
ANR	1036532	Symbol	this		1036404						
ANR	1036533	Symbol	m_mgr		1036404						
ANR	1036534	Symbol	D_FULLDEBUG		1036404						
ANR	1036535	Symbol	IsReady		1036404						
ANR	1036536	Symbol	m_stdOutBuf -> FlushQueue		1036404						
ANR	1036537	Symbol	* this		1036404						
ANR	1036538	Symbol	StartJobProcess		1036404						
ANR	1036539	Symbol	CRON_READY		1036404						
ANR	1036540	Symbol	IsIdle		1036404						
ANR	1036541	Symbol	GetName		1036404						
ANR	1036542	Symbol	m_stdOutBuf		1036404						
ANR	1036543	Symbol	* m_stdOutBuf		1036404						
ANR	1036544	Function	CronJob :: KillHandler	330:0:7321:7661							
ANR	1036545	FunctionDef	CronJob :: KillHandler ()		1036544	0					
ANR	1036546	CompoundStatement		332:0:7355:7661	1036544	0					
ANR	1036547	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: KillHandler for job '%s'\\n"" , GetName ( ) )"	335:1:7383:7455	1036544	0	True				
ANR	1036548	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: KillHandler for job '%s'\\n"" , GetName ( ) )"		1036544	0					
ANR	1036549	Callee	dprintf		1036544	0					
ANR	1036550	Identifier	dprintf		1036544	0					
ANR	1036551	ArgumentList	D_FULLDEBUG		1036544	1					
ANR	1036552	Argument	D_FULLDEBUG		1036544	0					
ANR	1036553	Identifier	D_FULLDEBUG		1036544	0					
ANR	1036554	Argument	"""CronJob: KillHandler for job '%s'\\n"""		1036544	1					
ANR	1036555	PrimaryExpression	"""CronJob: KillHandler for job '%s'\\n"""		1036544	0					
ANR	1036556	Argument	GetName ( )		1036544	2					
ANR	1036557	CallExpression	GetName ( )		1036544	0					
ANR	1036558	Callee	GetName		1036544	0					
ANR	1036559	Identifier	GetName		1036544	0					
ANR	1036560	ArgumentList			1036544	1					
ANR	1036561	IfStatement	if ( IsIdle ( ) )		1036544	1					
ANR	1036562	Condition	IsIdle ( )	338:6:7505:7512	1036544	0	True				
ANR	1036563	CallExpression	IsIdle ( )		1036544	0					
ANR	1036564	Callee	IsIdle		1036544	0					
ANR	1036565	Identifier	IsIdle		1036544	0					
ANR	1036566	ArgumentList			1036544	1					
ANR	1036567	CompoundStatement		7:17:160:160	1036544	1					
ANR	1036568	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' already idle (%s)!\\n"" , GetName ( ) , GetExecutable ( ) )"	339:2:7520:7613	1036544	0	True				
ANR	1036569	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' already idle (%s)!\\n"" , GetName ( ) , GetExecutable ( ) )"		1036544	0					
ANR	1036570	Callee	dprintf		1036544	0					
ANR	1036571	Identifier	dprintf		1036544	0					
ANR	1036572	ArgumentList	D_ALWAYS		1036544	1					
ANR	1036573	Argument	D_ALWAYS		1036544	0					
ANR	1036574	Identifier	D_ALWAYS		1036544	0					
ANR	1036575	Argument	"""CronJob: Job '%s' already idle (%s)!\\n"""		1036544	1					
ANR	1036576	PrimaryExpression	"""CronJob: Job '%s' already idle (%s)!\\n"""		1036544	0					
ANR	1036577	Argument	GetName ( )		1036544	2					
ANR	1036578	CallExpression	GetName ( )		1036544	0					
ANR	1036579	Callee	GetName		1036544	0					
ANR	1036580	Identifier	GetName		1036544	0					
ANR	1036581	ArgumentList			1036544	1					
ANR	1036582	Argument	GetExecutable ( )		1036544	3					
ANR	1036583	CallExpression	GetExecutable ( )		1036544	0					
ANR	1036584	Callee	GetExecutable		1036544	0					
ANR	1036585	Identifier	GetExecutable		1036544	0					
ANR	1036586	ArgumentList			1036544	1					
ANR	1036587	ReturnStatement	return ;	341:2:7617:7623	1036544	1	True				
ANR	1036588	ExpressionStatement	KillJob ( false )	345:1:7643:7659	1036544	2	True				
ANR	1036589	CallExpression	KillJob ( false )		1036544	0					
ANR	1036590	Callee	KillJob		1036544	0					
ANR	1036591	Identifier	KillJob		1036544	0					
ANR	1036592	ArgumentList	false		1036544	1					
ANR	1036593	Argument	false		1036544	0					
ANR	1036594	Identifier	false		1036544	0					
ANR	1036595	ReturnType	void		1036544	1					
ANR	1036596	Identifier	CronJob :: KillHandler		1036544	2					
ANR	1036597	ParameterList			1036544	3					
ANR	1036598	CFGEntryNode	ENTRY		1036544		True				
ANR	1036599	CFGExitNode	EXIT		1036544		True				
ANR	1036600	Symbol	GetExecutable		1036544						
ANR	1036601	Symbol	IsIdle		1036544						
ANR	1036602	Symbol	D_ALWAYS		1036544						
ANR	1036603	Symbol	false		1036544						
ANR	1036604	Symbol	D_FULLDEBUG		1036544						
ANR	1036605	Symbol	GetName		1036544						
ANR	1036606	Function	CronJob :: Reaper	349:0:7680:9703							
ANR	1036607	FunctionDef	"CronJob :: Reaper (int exitPid , int exitStatus)"		1036606	0					
ANR	1036608	CompoundStatement		351:0:7731:9703	1036606	0					
ANR	1036609	IfStatement	if ( WIFSIGNALED ( exitStatus ) )		1036606	0					
ANR	1036610	Condition	WIFSIGNALED ( exitStatus )	352:5:7738:7760	1036606	0	True				
ANR	1036611	CallExpression	WIFSIGNALED ( exitStatus )		1036606	0					
ANR	1036612	Callee	WIFSIGNALED		1036606	0					
ANR	1036613	Identifier	WIFSIGNALED		1036606	0					
ANR	1036614	ArgumentList	exitStatus		1036606	1					
ANR	1036615	Argument	exitStatus		1036606	0					
ANR	1036616	Identifier	exitStatus		1036606	0					
ANR	1036617	CompoundStatement		2:31:32:32	1036606	1					
ANR	1036618	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_signal=%d\\n"" , GetName ( ) , exitPid , WTERMSIG ( exitStatus ) )"	353:2:7768:7879	1036606	0	True				
ANR	1036619	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_signal=%d\\n"" , GetName ( ) , exitPid , WTERMSIG ( exitStatus ) )"		1036606	0					
ANR	1036620	Callee	dprintf		1036606	0					
ANR	1036621	Identifier	dprintf		1036606	0					
ANR	1036622	ArgumentList	D_FULLDEBUG		1036606	1					
ANR	1036623	Argument	D_FULLDEBUG		1036606	0					
ANR	1036624	Identifier	D_FULLDEBUG		1036606	0					
ANR	1036625	Argument	"""CronJob: '%s' (pid %d) exit_signal=%d\\n"""		1036606	1					
ANR	1036626	PrimaryExpression	"""CronJob: '%s' (pid %d) exit_signal=%d\\n"""		1036606	0					
ANR	1036627	Argument	GetName ( )		1036606	2					
ANR	1036628	CallExpression	GetName ( )		1036606	0					
ANR	1036629	Callee	GetName		1036606	0					
ANR	1036630	Identifier	GetName		1036606	0					
ANR	1036631	ArgumentList			1036606	1					
ANR	1036632	Argument	exitPid		1036606	3					
ANR	1036633	Identifier	exitPid		1036606	0					
ANR	1036634	Argument	WTERMSIG ( exitStatus )		1036606	4					
ANR	1036635	CallExpression	WTERMSIG ( exitStatus )		1036606	0					
ANR	1036636	Callee	WTERMSIG		1036606	0					
ANR	1036637	Identifier	WTERMSIG		1036606	0					
ANR	1036638	ArgumentList	exitStatus		1036606	1					
ANR	1036639	Argument	exitStatus		1036606	0					
ANR	1036640	Identifier	exitStatus		1036606	0					
ANR	1036641	ElseStatement	else		1036606	0					
ANR	1036642	CompoundStatement		5:8:157:157	1036606	0					
ANR	1036643	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_status=%d\\n"" , GetName ( ) , exitPid , WEXITSTATUS ( exitStatus ) )"	356:2:7893:8007	1036606	0	True				
ANR	1036644	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_status=%d\\n"" , GetName ( ) , exitPid , WEXITSTATUS ( exitStatus ) )"		1036606	0					
ANR	1036645	Callee	dprintf		1036606	0					
ANR	1036646	Identifier	dprintf		1036606	0					
ANR	1036647	ArgumentList	D_FULLDEBUG		1036606	1					
ANR	1036648	Argument	D_FULLDEBUG		1036606	0					
ANR	1036649	Identifier	D_FULLDEBUG		1036606	0					
ANR	1036650	Argument	"""CronJob: '%s' (pid %d) exit_status=%d\\n"""		1036606	1					
ANR	1036651	PrimaryExpression	"""CronJob: '%s' (pid %d) exit_status=%d\\n"""		1036606	0					
ANR	1036652	Argument	GetName ( )		1036606	2					
ANR	1036653	CallExpression	GetName ( )		1036606	0					
ANR	1036654	Callee	GetName		1036606	0					
ANR	1036655	Identifier	GetName		1036606	0					
ANR	1036656	ArgumentList			1036606	1					
ANR	1036657	Argument	exitPid		1036606	3					
ANR	1036658	Identifier	exitPid		1036606	0					
ANR	1036659	Argument	WEXITSTATUS ( exitStatus )		1036606	4					
ANR	1036660	CallExpression	WEXITSTATUS ( exitStatus )		1036606	0					
ANR	1036661	Callee	WEXITSTATUS		1036606	0					
ANR	1036662	Identifier	WEXITSTATUS		1036606	0					
ANR	1036663	ArgumentList	exitStatus		1036606	1					
ANR	1036664	Argument	exitStatus		1036606	0					
ANR	1036665	Identifier	exitStatus		1036606	0					
ANR	1036666	IfStatement	if ( exitPid != m_pid )		1036606	1					
ANR	1036667	Condition	exitPid != m_pid	361:6:8054:8069	1036606	0	True				
ANR	1036668	EqualityExpression	exitPid != m_pid		1036606	0		!=			
ANR	1036669	Identifier	exitPid		1036606	0					
ANR	1036670	Identifier	m_pid		1036606	1					
ANR	1036671	CompoundStatement		11:25:341:341	1036606	1					
ANR	1036672	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: WARNING: Child PID %d != Exit PID %d\\n"" , m_pid , exitPid )"	362:2:8077:8170	1036606	0	True				
ANR	1036673	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: WARNING: Child PID %d != Exit PID %d\\n"" , m_pid , exitPid )"		1036606	0					
ANR	1036674	Callee	dprintf		1036606	0					
ANR	1036675	Identifier	dprintf		1036606	0					
ANR	1036676	ArgumentList	D_ALWAYS		1036606	1					
ANR	1036677	Argument	D_ALWAYS		1036606	0					
ANR	1036678	Identifier	D_ALWAYS		1036606	0					
ANR	1036679	Argument	"""CronJob: WARNING: Child PID %d != Exit PID %d\\n"""		1036606	1					
ANR	1036680	PrimaryExpression	"""CronJob: WARNING: Child PID %d != Exit PID %d\\n"""		1036606	0					
ANR	1036681	Argument	m_pid		1036606	2					
ANR	1036682	Identifier	m_pid		1036606	0					
ANR	1036683	Argument	exitPid		1036606	3					
ANR	1036684	Identifier	exitPid		1036606	0					
ANR	1036685	ExpressionStatement	m_pid = 0	367:1:8177:8186	1036606	2	True				
ANR	1036686	AssignmentExpression	m_pid = 0		1036606	0		=			
ANR	1036687	Identifier	m_pid		1036606	0					
ANR	1036688	PrimaryExpression	0		1036606	1					
ANR	1036689	ExpressionStatement	m_last_exit_time = time ( NULL )	368:1:8189:8218	1036606	3	True				
ANR	1036690	AssignmentExpression	m_last_exit_time = time ( NULL )		1036606	0		=			
ANR	1036691	Identifier	m_last_exit_time		1036606	0					
ANR	1036692	CallExpression	time ( NULL )		1036606	1					
ANR	1036693	Callee	time		1036606	0					
ANR	1036694	Identifier	time		1036606	0					
ANR	1036695	ArgumentList	NULL		1036606	1					
ANR	1036696	Argument	NULL		1036606	0					
ANR	1036697	Identifier	NULL		1036606	0					
ANR	1036698	ExpressionStatement	m_run_load = 0.0	369:1:8221:8237	1036606	4	True				
ANR	1036699	AssignmentExpression	m_run_load = 0.0		1036606	0		=			
ANR	1036700	Identifier	m_run_load		1036606	0					
ANR	1036701	PrimaryExpression	0.0		1036606	1					
ANR	1036702	IfStatement	if ( m_stdOut >= 0 )		1036606	5					
ANR	1036703	Condition	m_stdOut >= 0	372:6:8275:8287	1036606	0	True				
ANR	1036704	RelationalExpression	m_stdOut >= 0		1036606	0		>=			
ANR	1036705	Identifier	m_stdOut		1036606	0					
ANR	1036706	PrimaryExpression	0		1036606	1					
ANR	1036707	CompoundStatement		22:22:559:559	1036606	1					
ANR	1036708	ExpressionStatement	StdoutHandler ( m_stdOut )	373:2:8295:8320	1036606	0	True				
ANR	1036709	CallExpression	StdoutHandler ( m_stdOut )		1036606	0					
ANR	1036710	Callee	StdoutHandler		1036606	0					
ANR	1036711	Identifier	StdoutHandler		1036606	0					
ANR	1036712	ArgumentList	m_stdOut		1036606	1					
ANR	1036713	Argument	m_stdOut		1036606	0					
ANR	1036714	Identifier	m_stdOut		1036606	0					
ANR	1036715	IfStatement	if ( m_stdErr >= 0 )		1036606	6					
ANR	1036716	Condition	m_stdErr >= 0	375:6:8331:8343	1036606	0	True				
ANR	1036717	RelationalExpression	m_stdErr >= 0		1036606	0		>=			
ANR	1036718	Identifier	m_stdErr		1036606	0					
ANR	1036719	PrimaryExpression	0		1036606	1					
ANR	1036720	CompoundStatement		25:22:615:615	1036606	1					
ANR	1036721	ExpressionStatement	StderrHandler ( m_stdErr )	376:2:8351:8376	1036606	0	True				
ANR	1036722	CallExpression	StderrHandler ( m_stdErr )		1036606	0					
ANR	1036723	Callee	StderrHandler		1036606	0					
ANR	1036724	Identifier	StderrHandler		1036606	0					
ANR	1036725	ArgumentList	m_stdErr		1036606	1					
ANR	1036726	Argument	m_stdErr		1036606	0					
ANR	1036727	Identifier	m_stdErr		1036606	0					
ANR	1036728	ExpressionStatement	CleanAll ( )	380:1:8418:8429	1036606	7	True				
ANR	1036729	CallExpression	CleanAll ( )		1036606	0					
ANR	1036730	Callee	CleanAll		1036606	0					
ANR	1036731	Identifier	CleanAll		1036606	0					
ANR	1036732	ArgumentList			1036606	1					
ANR	1036733	SwitchStatement	switch ( GetState ( ) )		1036606	8					
ANR	1036734	Condition	GetState ( )	383:10:8502:8511	1036606	0	True				
ANR	1036735	CallExpression	GetState ( )		1036606	0					
ANR	1036736	Callee	GetState		1036606	0					
ANR	1036737	Identifier	GetState		1036606	0					
ANR	1036738	ArgumentList			1036606	1					
ANR	1036739	CompoundStatement		34:1:784:784	1036606	1					
ANR	1036740	Label	case CRON_RUNNING :	386:1:8537:8554	1036606	0	True				
ANR	1036741	Identifier	CRON_RUNNING		1036606	0					
ANR	1036742	ExpressionStatement	SetState ( CRON_IDLE )	387:2:8558:8579	1036606	1	True				
ANR	1036743	CallExpression	SetState ( CRON_IDLE )		1036606	0					
ANR	1036744	Callee	SetState		1036606	0					
ANR	1036745	Identifier	SetState		1036606	0					
ANR	1036746	ArgumentList	CRON_IDLE		1036606	1					
ANR	1036747	Argument	CRON_IDLE		1036606	0					
ANR	1036748	Identifier	CRON_IDLE		1036606	0					
ANR	1036749	IfStatement	if ( IsWaitForExit ( ) )		1036606	2					
ANR	1036750	Condition	IsWaitForExit ( )	388:7:8610:8624	1036606	0	True				
ANR	1036751	CallExpression	IsWaitForExit ( )		1036606	0					
ANR	1036752	Callee	IsWaitForExit		1036606	0					
ANR	1036753	Identifier	IsWaitForExit		1036606	0					
ANR	1036754	ArgumentList			1036606	1					
ANR	1036755	CompoundStatement		38:25:896:896	1036606	1					
ANR	1036756	IfStatement	if ( 0 == Period ( ) )		1036606	0					
ANR	1036757	Condition	0 == Period ( )	389:8:8638:8650	1036606	0	True				
ANR	1036758	EqualityExpression	0 == Period ( )		1036606	0		==			
ANR	1036759	PrimaryExpression	0		1036606	0					
ANR	1036760	CallExpression	Period ( )		1036606	1					
ANR	1036761	Callee	Period		1036606	0					
ANR	1036762	Identifier	Period		1036606	0					
ANR	1036763	ArgumentList			1036606	1					
ANR	1036764	CompoundStatement		39:24:922:922	1036606	1					
ANR	1036765	ExpressionStatement	StartJob ( )	390:4:8689:8700	1036606	0	True				
ANR	1036766	CallExpression	StartJob ( )		1036606	0					
ANR	1036767	Callee	StartJob		1036606	0					
ANR	1036768	Identifier	StartJob		1036606	0					
ANR	1036769	ArgumentList			1036606	1					
ANR	1036770	ElseStatement	else		1036606	0					
ANR	1036771	CompoundStatement		41:10:980:980	1036606	0					
ANR	1036772	ExpressionStatement	"SetTimer ( Period ( ) , TIMER_NEVER )"	392:4:8751:8784	1036606	0	True				
ANR	1036773	CallExpression	"SetTimer ( Period ( ) , TIMER_NEVER )"		1036606	0					
ANR	1036774	Callee	SetTimer		1036606	0					
ANR	1036775	Identifier	SetTimer		1036606	0					
ANR	1036776	ArgumentList	Period ( )		1036606	1					
ANR	1036777	Argument	Period ( )		1036606	0					
ANR	1036778	CallExpression	Period ( )		1036606	0					
ANR	1036779	Callee	Period		1036606	0					
ANR	1036780	Identifier	Period		1036606	0					
ANR	1036781	ArgumentList			1036606	1					
ANR	1036782	Argument	TIMER_NEVER		1036606	1					
ANR	1036783	Identifier	TIMER_NEVER		1036606	0					
ANR	1036784	BreakStatement	break ;	395:2:8797:8802	1036606	3	True				
ANR	1036785	Label	case CRON_IDLE :	398:1:8837:8851	1036606	4	True				
ANR	1036786	Identifier	CRON_IDLE		1036606	0					
ANR	1036787	Label	case CRON_DEAD :	399:1:8854:8868	1036606	5	True				
ANR	1036788	Identifier	CRON_DEAD		1036606	0					
ANR	1036789	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob::Reaper:: Job %s in state %s: Huh?\\n"" , GetName ( ) , StateString ( ) )"	400:2:8872:8970	1036606	6	True				
ANR	1036790	CallExpression	"dprintf ( D_ALWAYS , ""CronJob::Reaper:: Job %s in state %s: Huh?\\n"" , GetName ( ) , StateString ( ) )"		1036606	0					
ANR	1036791	Callee	dprintf		1036606	0					
ANR	1036792	Identifier	dprintf		1036606	0					
ANR	1036793	ArgumentList	D_ALWAYS		1036606	1					
ANR	1036794	Argument	D_ALWAYS		1036606	0					
ANR	1036795	Identifier	D_ALWAYS		1036606	0					
ANR	1036796	Argument	"""CronJob::Reaper:: Job %s in state %s: Huh?\\n"""		1036606	1					
ANR	1036797	PrimaryExpression	"""CronJob::Reaper:: Job %s in state %s: Huh?\\n"""		1036606	0					
ANR	1036798	Argument	GetName ( )		1036606	2					
ANR	1036799	CallExpression	GetName ( )		1036606	0					
ANR	1036800	Callee	GetName		1036606	0					
ANR	1036801	Identifier	GetName		1036606	0					
ANR	1036802	ArgumentList			1036606	1					
ANR	1036803	Argument	StateString ( )		1036606	3					
ANR	1036804	CallExpression	StateString ( )		1036606	0					
ANR	1036805	Callee	StateString		1036606	0					
ANR	1036806	Identifier	StateString		1036606	0					
ANR	1036807	ArgumentList			1036606	1					
ANR	1036808	BreakStatement	break ;	402:2:8974:8979	1036606	7	True				
ANR	1036809	Label	case CRON_TERM_SENT :	405:1:9093:9112	1036606	8	True				
ANR	1036810	Identifier	CRON_TERM_SENT		1036606	0					
ANR	1036811	Label	case CRON_KILL_SENT :	406:1:9115:9134	1036606	9	True				
ANR	1036812	Identifier	CRON_KILL_SENT		1036606	0					
ANR	1036813	ExpressionStatement	m_in_shutdown = false	407:2:9138:9159	1036606	10	True				
ANR	1036814	AssignmentExpression	m_in_shutdown = false		1036606	0		=			
ANR	1036815	Identifier	m_in_shutdown		1036606	0					
ANR	1036816	Identifier	false		1036606	1					
ANR	1036817	Label	default :	409:1:9165:9172	1036606	11	True				
ANR	1036818	Identifier	default		1036606	0					
ANR	1036819	ExpressionStatement	SetState ( CRON_IDLE )	410:2:9176:9197	1036606	12	True				
ANR	1036820	CallExpression	SetState ( CRON_IDLE )		1036606	0					
ANR	1036821	Callee	SetState		1036606	0					
ANR	1036822	Identifier	SetState		1036606	0					
ANR	1036823	ArgumentList	CRON_IDLE		1036606	1					
ANR	1036824	Argument	CRON_IDLE		1036606	0					
ANR	1036825	Identifier	CRON_IDLE		1036606	0					
ANR	1036826	ExpressionStatement	KillTimer ( TIMER_NEVER )	413:2:9266:9290	1036606	13	True				
ANR	1036827	CallExpression	KillTimer ( TIMER_NEVER )		1036606	0					
ANR	1036828	Callee	KillTimer		1036606	0					
ANR	1036829	Identifier	KillTimer		1036606	0					
ANR	1036830	ArgumentList	TIMER_NEVER		1036606	1					
ANR	1036831	Argument	TIMER_NEVER		1036606	0					
ANR	1036832	Identifier	TIMER_NEVER		1036606	0					
ANR	1036833	IfStatement	if ( IsWaitForExit ( ) )		1036606	14					
ANR	1036834	Condition	IsWaitForExit ( )	416:7:9322:9336	1036606	0	True				
ANR	1036835	CallExpression	IsWaitForExit ( )		1036606	0					
ANR	1036836	Callee	IsWaitForExit		1036606	0					
ANR	1036837	Identifier	IsWaitForExit		1036606	0					
ANR	1036838	ArgumentList			1036606	1					
ANR	1036839	CompoundStatement		66:25:1608:1608	1036606	1					
ANR	1036840	IfStatement	if ( 0 == Period ( ) )		1036606	0					
ANR	1036841	Condition	0 == Period ( )	417:8:9350:9362	1036606	0	True				
ANR	1036842	EqualityExpression	0 == Period ( )		1036606	0		==			
ANR	1036843	PrimaryExpression	0		1036606	0					
ANR	1036844	CallExpression	Period ( )		1036606	1					
ANR	1036845	Callee	Period		1036606	0					
ANR	1036846	Identifier	Period		1036606	0					
ANR	1036847	ArgumentList			1036606	1					
ANR	1036848	CompoundStatement		67:24:1634:1634	1036606	1					
ANR	1036849	ExpressionStatement	StartJob ( )	418:4:9403:9414	1036606	0	True				
ANR	1036850	CallExpression	StartJob ( )		1036606	0					
ANR	1036851	Callee	StartJob		1036606	0					
ANR	1036852	Identifier	StartJob		1036606	0					
ANR	1036853	ArgumentList			1036606	1					
ANR	1036854	ElseStatement	else		1036606	0					
ANR	1036855	CompoundStatement		69:10:1694:1694	1036606	0					
ANR	1036856	ExpressionStatement	"SetTimer ( Period ( ) , TIMER_NEVER )"	420:4:9467:9500	1036606	0	True				
ANR	1036857	CallExpression	"SetTimer ( Period ( ) , TIMER_NEVER )"		1036606	0					
ANR	1036858	Callee	SetTimer		1036606	0					
ANR	1036859	Identifier	SetTimer		1036606	0					
ANR	1036860	ArgumentList	Period ( )		1036606	1					
ANR	1036861	Argument	Period ( )		1036606	0					
ANR	1036862	CallExpression	Period ( )		1036606	0					
ANR	1036863	Callee	Period		1036606	0					
ANR	1036864	Identifier	Period		1036606	0					
ANR	1036865	ArgumentList			1036606	1					
ANR	1036866	Argument	TIMER_NEVER		1036606	1					
ANR	1036867	Identifier	TIMER_NEVER		1036606	0					
ANR	1036868	ElseStatement	else		1036606	0					
ANR	1036869	IfStatement	if ( IsPeriodic ( ) )		1036606	0					
ANR	1036870	Condition	IsPeriodic ( )	423:12:9523:9534	1036606	0	True				
ANR	1036871	CallExpression	IsPeriodic ( )		1036606	0					
ANR	1036872	Callee	IsPeriodic		1036606	0					
ANR	1036873	Identifier	IsPeriodic		1036606	0					
ANR	1036874	ArgumentList			1036606	1					
ANR	1036875	CompoundStatement		73:27:1806:1806	1036606	1					
ANR	1036876	ExpressionStatement	RunJob ( )	424:3:9556:9565	1036606	0	True				
ANR	1036877	CallExpression	RunJob ( )		1036606	0					
ANR	1036878	Callee	RunJob		1036606	0					
ANR	1036879	Identifier	RunJob		1036606	0					
ANR	1036880	ArgumentList			1036606	1					
ANR	1036881	BreakStatement	break ;	426:2:9573:9578	1036606	15	True				
ANR	1036882	ExpressionStatement	ProcessOutputQueue ( )	431:1:9609:9630	1036606	9	True				
ANR	1036883	CallExpression	ProcessOutputQueue ( )		1036606	0					
ANR	1036884	Callee	ProcessOutputQueue		1036606	0					
ANR	1036885	Identifier	ProcessOutputQueue		1036606	0					
ANR	1036886	ArgumentList			1036606	1					
ANR	1036887	ExpressionStatement	m_mgr . JobExited ( * this )	434:1:9665:9689	1036606	10	True				
ANR	1036888	CallExpression	m_mgr . JobExited ( * this )		1036606	0					
ANR	1036889	Callee	m_mgr . JobExited		1036606	0					
ANR	1036890	MemberAccess	m_mgr . JobExited		1036606	0					
ANR	1036891	Identifier	m_mgr		1036606	0					
ANR	1036892	Identifier	JobExited		1036606	1					
ANR	1036893	ArgumentList	* this		1036606	1					
ANR	1036894	Argument	* this		1036606	0					
ANR	1036895	UnaryOperationExpression	* this		1036606	0					
ANR	1036896	UnaryOperator	*		1036606	0					
ANR	1036897	Identifier	this		1036606	1					
ANR	1036898	ReturnStatement	return 0 ;	436:1:9693:9701	1036606	11	True				
ANR	1036899	PrimaryExpression	0		1036606	0					
ANR	1036900	ReturnType	int		1036606	1					
ANR	1036901	Identifier	CronJob :: Reaper		1036606	2					
ANR	1036902	ParameterList	"int exitPid , int exitStatus"		1036606	3					
ANR	1036903	Parameter	int exitPid	350:17:7701:7711	1036606	0	True				
ANR	1036904	ParameterType	int		1036606	0					
ANR	1036905	Identifier	exitPid		1036606	1					
ANR	1036906	Parameter	int exitStatus	350:30:7714:7727	1036606	1	True				
ANR	1036907	ParameterType	int		1036606	0					
ANR	1036908	Identifier	exitStatus		1036606	1					
ANR	1036909	CFGEntryNode	ENTRY		1036606		True				
ANR	1036910	CFGExitNode	EXIT		1036606		True				
ANR	1036911	Symbol	m_in_shutdown		1036606						
ANR	1036912	Symbol	m_stdErr		1036606						
ANR	1036913	Symbol	WEXITSTATUS		1036606						
ANR	1036914	Symbol	StateString		1036606						
ANR	1036915	Symbol	exitPid		1036606						
ANR	1036916	Symbol	m_pid		1036606						
ANR	1036917	Symbol	GetName		1036606						
ANR	1036918	Symbol	TIMER_NEVER		1036606						
ANR	1036919	Symbol	exitStatus		1036606						
ANR	1036920	Symbol	WIFSIGNALED		1036606						
ANR	1036921	Symbol	NULL		1036606						
ANR	1036922	Symbol	m_stdOut		1036606						
ANR	1036923	Symbol	IsPeriodic		1036606						
ANR	1036924	Symbol	m_run_load		1036606						
ANR	1036925	Symbol	D_ALWAYS		1036606						
ANR	1036926	Symbol	false		1036606						
ANR	1036927	Symbol	this		1036606						
ANR	1036928	Symbol	CRON_IDLE		1036606						
ANR	1036929	Symbol	Period		1036606						
ANR	1036930	Symbol	D_FULLDEBUG		1036606						
ANR	1036931	Symbol	m_mgr		1036606						
ANR	1036932	Symbol	* this		1036606						
ANR	1036933	Symbol	WTERMSIG		1036606						
ANR	1036934	Symbol	GetState		1036606						
ANR	1036935	Symbol	time		1036606						
ANR	1036936	Symbol	m_last_exit_time		1036606						
ANR	1036937	Symbol	IsWaitForExit		1036606						
ANR	1036938	Function	CronJob :: ProcessOutputQueue	440:0:9719:10691							
ANR	1036939	FunctionDef	CronJob :: ProcessOutputQueue ()		1036938	0					
ANR	1036940	CompoundStatement		442:0:9759:10691	1036938	0					
ANR	1036941	IdentifierDeclStatement	int status = 0 ;	443:1:9762:9777	1036938	0	True				
ANR	1036942	IdentifierDecl	status = 0		1036938	0					
ANR	1036943	IdentifierDeclType	int		1036938	0					
ANR	1036944	Identifier	status		1036938	1					
ANR	1036945	AssignmentExpression	status = 0		1036938	2		=			
ANR	1036946	Identifier	status		1036938	0					
ANR	1036947	PrimaryExpression	0		1036938	1					
ANR	1036948	IdentifierDeclStatement	int linecount = m_stdOutBuf -> GetQueueSize ( ) ;	444:1:9780:9825	1036938	1	True				
ANR	1036949	IdentifierDecl	linecount = m_stdOutBuf -> GetQueueSize ( )		1036938	0					
ANR	1036950	IdentifierDeclType	int		1036938	0					
ANR	1036951	Identifier	linecount		1036938	1					
ANR	1036952	AssignmentExpression	linecount = m_stdOutBuf -> GetQueueSize ( )		1036938	2		=			
ANR	1036953	Identifier	linecount		1036938	0					
ANR	1036954	CallExpression	m_stdOutBuf -> GetQueueSize ( )		1036938	1					
ANR	1036955	Callee	m_stdOutBuf -> GetQueueSize		1036938	0					
ANR	1036956	PtrMemberAccess	m_stdOutBuf -> GetQueueSize		1036938	0					
ANR	1036957	Identifier	m_stdOutBuf		1036938	0					
ANR	1036958	Identifier	GetQueueSize		1036938	1					
ANR	1036959	ArgumentList			1036938	1					
ANR	1036960	IfStatement	if ( linecount != 0 )		1036938	2					
ANR	1036961	Condition	linecount != 0	447:6:9869:9882	1036938	0	True				
ANR	1036962	EqualityExpression	linecount != 0		1036938	0		!=			
ANR	1036963	Identifier	linecount		1036938	0					
ANR	1036964	PrimaryExpression	0		1036938	1					
ANR	1036965	CompoundStatement		22:2:494:533	1036938	1					
ANR	1036966	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s: %d lines in Queue\\n"" , GetName ( ) , linecount )"	448:2:9890:9966	1036938	0	True				
ANR	1036967	CallExpression	"dprintf ( D_FULLDEBUG , ""%s: %d lines in Queue\\n"" , GetName ( ) , linecount )"		1036938	0					
ANR	1036968	Callee	dprintf		1036938	0					
ANR	1036969	Identifier	dprintf		1036938	0					
ANR	1036970	ArgumentList	D_FULLDEBUG		1036938	1					
ANR	1036971	Argument	D_FULLDEBUG		1036938	0					
ANR	1036972	Identifier	D_FULLDEBUG		1036938	0					
ANR	1036973	Argument	"""%s: %d lines in Queue\\n"""		1036938	1					
ANR	1036974	PrimaryExpression	"""%s: %d lines in Queue\\n"""		1036938	0					
ANR	1036975	Argument	GetName ( )		1036938	2					
ANR	1036976	CallExpression	GetName ( )		1036938	0					
ANR	1036977	Callee	GetName		1036938	0					
ANR	1036978	Identifier	GetName		1036938	0					
ANR	1036979	ArgumentList			1036938	1					
ANR	1036980	Argument	linecount		1036938	3					
ANR	1036981	Identifier	linecount		1036938	0					
ANR	1036982	IdentifierDeclStatement	char * linebuf ;	452:2:10012:10025	1036938	1	True				
ANR	1036983	IdentifierDecl	* linebuf		1036938	0					
ANR	1036984	IdentifierDeclType	char *		1036938	0					
ANR	1036985	Identifier	linebuf		1036938	1					
ANR	1036986	WhileStatement	while ( ( linebuf = m_stdOutBuf -> GetLineFromQueue ( ) ) != NULL )		1036938	2					
ANR	1036987	Condition	( linebuf = m_stdOutBuf -> GetLineFromQueue ( ) ) != NULL	453:9:10036:10089	1036938	0	True				
ANR	1036988	EqualityExpression	( linebuf = m_stdOutBuf -> GetLineFromQueue ( ) ) != NULL		1036938	0		!=			
ANR	1036989	AssignmentExpression	linebuf = m_stdOutBuf -> GetLineFromQueue ( )		1036938	0		=			
ANR	1036990	Identifier	linebuf		1036938	0					
ANR	1036991	CallExpression	m_stdOutBuf -> GetLineFromQueue ( )		1036938	1					
ANR	1036992	Callee	m_stdOutBuf -> GetLineFromQueue		1036938	0					
ANR	1036993	PtrMemberAccess	m_stdOutBuf -> GetLineFromQueue		1036938	0					
ANR	1036994	Identifier	m_stdOutBuf		1036938	0					
ANR	1036995	Identifier	GetLineFromQueue		1036938	1					
ANR	1036996	ArgumentList			1036938	1					
ANR	1036997	Identifier	NULL		1036938	1					
ANR	1036998	CompoundStatement		13:3:338:379	1036938	1					
ANR	1036999	IdentifierDeclStatement	int tmpstatus = ProcessOutput ( linebuf ) ;	454:3:10098:10139	1036938	0	True				
ANR	1037000	IdentifierDecl	tmpstatus = ProcessOutput ( linebuf )		1036938	0					
ANR	1037001	IdentifierDeclType	int		1036938	0					
ANR	1037002	Identifier	tmpstatus		1036938	1					
ANR	1037003	AssignmentExpression	tmpstatus = ProcessOutput ( linebuf )		1036938	2		=			
ANR	1037004	Identifier	tmpstatus		1036938	0					
ANR	1037005	CallExpression	ProcessOutput ( linebuf )		1036938	1					
ANR	1037006	Callee	ProcessOutput		1036938	0					
ANR	1037007	Identifier	ProcessOutput		1036938	0					
ANR	1037008	ArgumentList	linebuf		1036938	1					
ANR	1037009	Argument	linebuf		1036938	0					
ANR	1037010	Identifier	linebuf		1036938	0					
ANR	1037011	IfStatement	if ( tmpstatus )		1036938	1					
ANR	1037012	Condition	tmpstatus	455:8:10149:10157	1036938	0	True				
ANR	1037013	Identifier	tmpstatus		1036938	0					
ANR	1037014	CompoundStatement		14:20:401:401	1036938	1					
ANR	1037015	ExpressionStatement	status = tmpstatus	456:4:10167:10185	1036938	0	True				
ANR	1037016	AssignmentExpression	status = tmpstatus		1036938	0		=			
ANR	1037017	Identifier	status		1036938	0					
ANR	1037018	Identifier	tmpstatus		1036938	1					
ANR	1037019	ExpressionStatement	free ( linebuf )	458:3:10195:10210	1036938	2	True				
ANR	1037020	CallExpression	free ( linebuf )		1036938	0					
ANR	1037021	Callee	free		1036938	0					
ANR	1037022	Identifier	free		1036938	0					
ANR	1037023	ArgumentList	linebuf		1036938	1					
ANR	1037024	Argument	linebuf		1036938	0					
ANR	1037025	Identifier	linebuf		1036938	0					
ANR	1037026	ExpressionStatement	linecount --	459:3:10215:10226	1036938	3	True				
ANR	1037027	PostIncDecOperationExpression	linecount --		1036938	0					
ANR	1037028	Identifier	linecount		1036938	0					
ANR	1037029	IncDec	--		1036938	1					
ANR	1037030	IdentifierDeclStatement	int tmp = m_stdOutBuf -> GetQueueSize ( ) ;	463:2:10254:10293	1036938	3	True				
ANR	1037031	IdentifierDecl	tmp = m_stdOutBuf -> GetQueueSize ( )		1036938	0					
ANR	1037032	IdentifierDeclType	int		1036938	0					
ANR	1037033	Identifier	tmp		1036938	1					
ANR	1037034	AssignmentExpression	tmp = m_stdOutBuf -> GetQueueSize ( )		1036938	2		=			
ANR	1037035	Identifier	tmp		1036938	0					
ANR	1037036	CallExpression	m_stdOutBuf -> GetQueueSize ( )		1036938	1					
ANR	1037037	Callee	m_stdOutBuf -> GetQueueSize		1036938	0					
ANR	1037038	PtrMemberAccess	m_stdOutBuf -> GetQueueSize		1036938	0					
ANR	1037039	Identifier	m_stdOutBuf		1036938	0					
ANR	1037040	Identifier	GetQueueSize		1036938	1					
ANR	1037041	ArgumentList			1036938	1					
ANR	1037042	IfStatement	if ( 0 != linecount )		1036938	4					
ANR	1037043	Condition	0 != linecount	464:7:10302:10315	1036938	0	True				
ANR	1037044	EqualityExpression	0 != linecount		1036938	0		!=			
ANR	1037045	PrimaryExpression	0		1036938	0					
ANR	1037046	Identifier	linecount		1036938	1					
ANR	1037047	CompoundStatement		23:24:559:559	1036938	1					
ANR	1037048	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: %d lines remain!!\\n"" , GetName ( ) , linecount )"	465:3:10324:10398	1036938	0	True				
ANR	1037049	CallExpression	"dprintf ( D_ALWAYS , ""%s: %d lines remain!!\\n"" , GetName ( ) , linecount )"		1036938	0					
ANR	1037050	Callee	dprintf		1036938	0					
ANR	1037051	Identifier	dprintf		1036938	0					
ANR	1037052	ArgumentList	D_ALWAYS		1036938	1					
ANR	1037053	Argument	D_ALWAYS		1036938	0					
ANR	1037054	Identifier	D_ALWAYS		1036938	0					
ANR	1037055	Argument	"""%s: %d lines remain!!\\n"""		1036938	1					
ANR	1037056	PrimaryExpression	"""%s: %d lines remain!!\\n"""		1036938	0					
ANR	1037057	Argument	GetName ( )		1036938	2					
ANR	1037058	CallExpression	GetName ( )		1036938	0					
ANR	1037059	Callee	GetName		1036938	0					
ANR	1037060	Identifier	GetName		1036938	0					
ANR	1037061	ArgumentList			1036938	1					
ANR	1037062	Argument	linecount		1036938	3					
ANR	1037063	Identifier	linecount		1036938	0					
ANR	1037064	ElseStatement	else		1036938	0					
ANR	1037065	IfStatement	if ( 0 != tmp )		1036938	0					
ANR	1037066	Condition	0 != tmp	467:14:10414:10421	1036938	0	True				
ANR	1037067	EqualityExpression	0 != tmp		1036938	0		!=			
ANR	1037068	PrimaryExpression	0		1036938	0					
ANR	1037069	Identifier	tmp		1036938	1					
ANR	1037070	CompoundStatement		26:25:665:665	1036938	1					
ANR	1037071	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: Queue reports %d lines remain!\\n"" , GetName ( ) , tmp )"	468:3:10430:10511	1036938	0	True				
ANR	1037072	CallExpression	"dprintf ( D_ALWAYS , ""%s: Queue reports %d lines remain!\\n"" , GetName ( ) , tmp )"		1036938	0					
ANR	1037073	Callee	dprintf		1036938	0					
ANR	1037074	Identifier	dprintf		1036938	0					
ANR	1037075	ArgumentList	D_ALWAYS		1036938	1					
ANR	1037076	Argument	D_ALWAYS		1036938	0					
ANR	1037077	Identifier	D_ALWAYS		1036938	0					
ANR	1037078	Argument	"""%s: Queue reports %d lines remain!\\n"""		1036938	1					
ANR	1037079	PrimaryExpression	"""%s: Queue reports %d lines remain!\\n"""		1036938	0					
ANR	1037080	Argument	GetName ( )		1036938	2					
ANR	1037081	CallExpression	GetName ( )		1036938	0					
ANR	1037082	Callee	GetName		1036938	0					
ANR	1037083	Identifier	GetName		1036938	0					
ANR	1037084	ArgumentList			1036938	1					
ANR	1037085	Argument	tmp		1036938	3					
ANR	1037086	Identifier	tmp		1036938	0					
ANR	1037087	ElseStatement	else		1036938	0					
ANR	1037088	CompoundStatement		29:9:762:762	1036938	0					
ANR	1037089	ExpressionStatement	ProcessOutput ( NULL )	472:3:10585:10606	1036938	0	True				
ANR	1037090	CallExpression	ProcessOutput ( NULL )		1036938	0					
ANR	1037091	Callee	ProcessOutput		1036938	0					
ANR	1037092	Identifier	ProcessOutput		1036938	0					
ANR	1037093	ArgumentList	NULL		1036938	1					
ANR	1037094	Argument	NULL		1036938	0					
ANR	1037095	Identifier	NULL		1036938	0					
ANR	1037096	ExpressionStatement	m_num_outputs ++	473:3:10611:10626	1036938	1	True				
ANR	1037097	PostIncDecOperationExpression	m_num_outputs ++		1036938	0					
ANR	1037098	Identifier	m_num_outputs		1036938	0					
ANR	1037099	IncDec	++		1036938	1					
ANR	1037100	ReturnStatement	return status ;	476:1:10676:10689	1036938	3	True				
ANR	1037101	Identifier	status		1036938	0					
ANR	1037102	ReturnType	int		1036938	1					
ANR	1037103	Identifier	CronJob :: ProcessOutputQueue		1036938	2					
ANR	1037104	ParameterList			1036938	3					
ANR	1037105	CFGEntryNode	ENTRY		1036938		True				
ANR	1037106	CFGExitNode	EXIT		1036938		True				
ANR	1037107	Symbol	NULL		1036938						
ANR	1037108	Symbol	tmpstatus		1036938						
ANR	1037109	Symbol	D_ALWAYS		1036938						
ANR	1037110	Symbol	D_FULLDEBUG		1036938						
ANR	1037111	Symbol	m_stdOutBuf -> GetQueueSize		1036938						
ANR	1037112	Symbol	m_stdOutBuf -> GetLineFromQueue		1036938						
ANR	1037113	Symbol	linecount		1036938						
ANR	1037114	Symbol	linebuf		1036938						
ANR	1037115	Symbol	tmp		1036938						
ANR	1037116	Symbol	ProcessOutput		1036938						
ANR	1037117	Symbol	m_num_outputs		1036938						
ANR	1037118	Symbol	GetName		1036938						
ANR	1037119	Symbol	m_stdOutBuf		1036938						
ANR	1037120	Symbol	status		1036938						
ANR	1037121	Symbol	* m_stdOutBuf		1036938						
ANR	1037122	Function	CronJob :: StartJobProcess	480:0:10709:12740							
ANR	1037123	FunctionDef	CronJob :: StartJobProcess ()		1037122	0					
ANR	1037124	CompoundStatement		482:0:10746:12740	1037122	0					
ANR	1037125	IdentifierDeclStatement	ArgList final_args ;	483:1:10749:10767	1037122	0	True				
ANR	1037126	IdentifierDecl	final_args		1037122	0					
ANR	1037127	IdentifierDeclType	ArgList		1037122	0					
ANR	1037128	Identifier	final_args		1037122	1					
ANR	1037129	IfStatement	if ( OpenFds ( ) < 0 )		1037122	1					
ANR	1037130	Condition	OpenFds ( ) < 0	486:6:10804:10817	1037122	0	True				
ANR	1037131	RelationalExpression	OpenFds ( ) < 0		1037122	0		<			
ANR	1037132	CallExpression	OpenFds ( )		1037122	0					
ANR	1037133	Callee	OpenFds		1037122	0					
ANR	1037134	Identifier	OpenFds		1037122	0					
ANR	1037135	ArgumentList			1037122	1					
ANR	1037136	PrimaryExpression	0		1037122	1					
ANR	1037137	CompoundStatement		5:23:74:74	1037122	1					
ANR	1037138	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Error creating FDs for '%s'\\n"" , GetName ( ) )"	487:2:10825:10902	1037122	0	True				
ANR	1037139	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Error creating FDs for '%s'\\n"" , GetName ( ) )"		1037122	0					
ANR	1037140	Callee	dprintf		1037122	0					
ANR	1037141	Identifier	dprintf		1037122	0					
ANR	1037142	ArgumentList	D_ALWAYS		1037122	1					
ANR	1037143	Argument	D_ALWAYS		1037122	0					
ANR	1037144	Identifier	D_ALWAYS		1037122	0					
ANR	1037145	Argument	"""CronJob: Error creating FDs for '%s'\\n"""		1037122	1					
ANR	1037146	PrimaryExpression	"""CronJob: Error creating FDs for '%s'\\n"""		1037122	0					
ANR	1037147	Argument	GetName ( )		1037122	2					
ANR	1037148	CallExpression	GetName ( )		1037122	0					
ANR	1037149	Callee	GetName		1037122	0					
ANR	1037150	Identifier	GetName		1037122	0					
ANR	1037151	ArgumentList			1037122	1					
ANR	1037152	ReturnStatement	return - 1 ;	489:2:10906:10915	1037122	1	True				
ANR	1037153	UnaryOperationExpression	- 1		1037122	0					
ANR	1037154	UnaryOperator	-		1037122	0					
ANR	1037155	PrimaryExpression	1		1037122	1					
ANR	1037156	ExpressionStatement	final_args . AppendArg ( GetName ( ) )	493:1:10994:11027	1037122	2	True				
ANR	1037157	CallExpression	final_args . AppendArg ( GetName ( ) )		1037122	0					
ANR	1037158	Callee	final_args . AppendArg		1037122	0					
ANR	1037159	MemberAccess	final_args . AppendArg		1037122	0					
ANR	1037160	Identifier	final_args		1037122	0					
ANR	1037161	Identifier	AppendArg		1037122	1					
ANR	1037162	ArgumentList	GetName ( )		1037122	1					
ANR	1037163	Argument	GetName ( )		1037122	0					
ANR	1037164	CallExpression	GetName ( )		1037122	0					
ANR	1037165	Callee	GetName		1037122	0					
ANR	1037166	Identifier	GetName		1037122	0					
ANR	1037167	ArgumentList			1037122	1					
ANR	1037168	IfStatement	if ( Params ( ) . GetArgs ( ) . Count ( ) )		1037122	3					
ANR	1037169	Condition	Params ( ) . GetArgs ( ) . Count ( )	494:5:11034:11059	1037122	0	True				
ANR	1037170	CallExpression	Params ( ) . GetArgs ( ) . Count ( )		1037122	0					
ANR	1037171	Callee	Params ( ) . GetArgs ( ) . Count		1037122	0					
ANR	1037172	MemberAccess	Params ( ) . GetArgs ( ) . Count		1037122	0					
ANR	1037173	CallExpression	Params ( ) . GetArgs ( )		1037122	0					
ANR	1037174	Callee	Params ( ) . GetArgs		1037122	0					
ANR	1037175	MemberAccess	Params ( ) . GetArgs		1037122	0					
ANR	1037176	CallExpression	Params ( )		1037122	0					
ANR	1037177	Callee	Params		1037122	0					
ANR	1037178	Identifier	Params		1037122	0					
ANR	1037179	ArgumentList			1037122	1					
ANR	1037180	Identifier	GetArgs		1037122	1					
ANR	1037181	ArgumentList			1037122	1					
ANR	1037182	Identifier	Count		1037122	1					
ANR	1037183	ArgumentList			1037122	1					
ANR	1037184	CompoundStatement		13:34:316:316	1037122	1					
ANR	1037185	ExpressionStatement	final_args . AppendArgsFromArgList ( Params ( ) . GetArgs ( ) )	495:2:11067:11121	1037122	0	True				
ANR	1037186	CallExpression	final_args . AppendArgsFromArgList ( Params ( ) . GetArgs ( ) )		1037122	0					
ANR	1037187	Callee	final_args . AppendArgsFromArgList		1037122	0					
ANR	1037188	MemberAccess	final_args . AppendArgsFromArgList		1037122	0					
ANR	1037189	Identifier	final_args		1037122	0					
ANR	1037190	Identifier	AppendArgsFromArgList		1037122	1					
ANR	1037191	ArgumentList	Params ( ) . GetArgs ( )		1037122	1					
ANR	1037192	Argument	Params ( ) . GetArgs ( )		1037122	0					
ANR	1037193	CallExpression	Params ( ) . GetArgs ( )		1037122	0					
ANR	1037194	Callee	Params ( ) . GetArgs		1037122	0					
ANR	1037195	MemberAccess	Params ( ) . GetArgs		1037122	0					
ANR	1037196	CallExpression	Params ( )		1037122	0					
ANR	1037197	Callee	Params		1037122	0					
ANR	1037198	Identifier	Params		1037122	0					
ANR	1037199	ArgumentList			1037122	1					
ANR	1037200	Identifier	GetArgs		1037122	1					
ANR	1037201	ArgumentList			1037122	1					
ANR	1037202	ElseStatement	else		1037122	0					
ANR	1037203	ExpressionStatement	priv = PRIV_USER_FINAL	505:1:11251:11273	1037122	0	True				
ANR	1037204	AssignmentExpression	priv = PRIV_USER_FINAL		1037122	0		=			
ANR	1037205	Identifier	priv		1037122	0					
ANR	1037206	Identifier	PRIV_USER_FINAL		1037122	1					
ANR	1037207	IdentifierDeclStatement	priv_state priv ;	499:1:11170:11185	1037122	4	True				
ANR	1037208	IdentifierDecl	priv		1037122	0					
ANR	1037209	IdentifierDeclType	priv_state		1037122	0					
ANR	1037210	Identifier	priv		1037122	1					
ANR	1037211	IdentifierDeclStatement	ifdef WIN32 priv = PRIV_CONDOR ;	500:2:11189:11232	1037122	5	True				
ANR	1037212	IdentifierDecl	priv = PRIV_CONDOR		1037122	0					
ANR	1037213	IdentifierDeclType	ifdef WIN32		1037122	0					
ANR	1037214	Identifier	priv		1037122	1					
ANR	1037215	AssignmentExpression	priv = PRIV_CONDOR		1037122	2		=			
ANR	1037216	Identifier	PRIV_CONDOR		1037122	0					
ANR	1037217	Identifier	PRIV_CONDOR		1037122	1					
ANR	1037218	IdentifierDeclStatement	uid_t uid = get_condor_uid ( ) ;	506:1:11276:11305	1037122	6	True				
ANR	1037219	IdentifierDecl	uid = get_condor_uid ( )		1037122	0					
ANR	1037220	IdentifierDeclType	uid_t		1037122	0					
ANR	1037221	Identifier	uid		1037122	1					
ANR	1037222	AssignmentExpression	uid = get_condor_uid ( )		1037122	2		=			
ANR	1037223	Identifier	uid		1037122	0					
ANR	1037224	CallExpression	get_condor_uid ( )		1037122	1					
ANR	1037225	Callee	get_condor_uid		1037122	0					
ANR	1037226	Identifier	get_condor_uid		1037122	0					
ANR	1037227	ArgumentList			1037122	1					
ANR	1037228	IfStatement	if ( uid == ( uid_t ) - 1 )		1037122	7					
ANR	1037229	Condition	uid == ( uid_t ) - 1	507:6:11313:11329	1037122	0	True				
ANR	1037230	EqualityExpression	uid == ( uid_t ) - 1		1037122	0		==			
ANR	1037231	Identifier	uid		1037122	0					
ANR	1037232	CastExpression	( uid_t ) - 1		1037122	1					
ANR	1037233	CastTarget	uid_t		1037122	0					
ANR	1037234	UnaryOperationExpression	- 1		1037122	1					
ANR	1037235	UnaryOperator	-		1037122	0					
ANR	1037236	PrimaryExpression	1		1037122	1					
ANR	1037237	CompoundStatement		27:1:587:587	1037122	1					
ANR	1037238	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Invalid UID -1\\n"" )"	509:2:11338:11386	1037122	0	True				
ANR	1037239	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Invalid UID -1\\n"" )"		1037122	0					
ANR	1037240	Callee	dprintf		1037122	0					
ANR	1037241	Identifier	dprintf		1037122	0					
ANR	1037242	ArgumentList	D_ALWAYS		1037122	1					
ANR	1037243	Argument	D_ALWAYS		1037122	0					
ANR	1037244	Identifier	D_ALWAYS		1037122	0					
ANR	1037245	Argument	"""CronJob: Invalid UID -1\\n"""		1037122	1					
ANR	1037246	PrimaryExpression	"""CronJob: Invalid UID -1\\n"""		1037122	0					
ANR	1037247	ReturnStatement	return - 1 ;	510:2:11390:11399	1037122	1	True				
ANR	1037248	UnaryOperationExpression	- 1		1037122	0					
ANR	1037249	UnaryOperator	-		1037122	0					
ANR	1037250	PrimaryExpression	1		1037122	1					
ANR	1037251	IdentifierDeclStatement	gid_t gid = get_condor_gid ( ) ;	512:1:11405:11434	1037122	8	True				
ANR	1037252	IdentifierDecl	gid = get_condor_gid ( )		1037122	0					
ANR	1037253	IdentifierDeclType	gid_t		1037122	0					
ANR	1037254	Identifier	gid		1037122	1					
ANR	1037255	AssignmentExpression	gid = get_condor_gid ( )		1037122	2		=			
ANR	1037256	Identifier	gid		1037122	0					
ANR	1037257	CallExpression	get_condor_gid ( )		1037122	1					
ANR	1037258	Callee	get_condor_gid		1037122	0					
ANR	1037259	Identifier	get_condor_gid		1037122	0					
ANR	1037260	ArgumentList			1037122	1					
ANR	1037261	IfStatement	if ( gid == ( uid_t ) - 1 )		1037122	9					
ANR	1037262	Condition	gid == ( uid_t ) - 1	513:6:11442:11458	1037122	0	True				
ANR	1037263	EqualityExpression	gid == ( uid_t ) - 1		1037122	0		==			
ANR	1037264	Identifier	gid		1037122	0					
ANR	1037265	CastExpression	( uid_t ) - 1		1037122	1					
ANR	1037266	CastTarget	uid_t		1037122	0					
ANR	1037267	UnaryOperationExpression	- 1		1037122	1					
ANR	1037268	UnaryOperator	-		1037122	0					
ANR	1037269	PrimaryExpression	1		1037122	1					
ANR	1037270	CompoundStatement		33:1:716:716	1037122	1					
ANR	1037271	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Invalid GID -1\\n"" )"	515:2:11467:11515	1037122	0	True				
ANR	1037272	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Invalid GID -1\\n"" )"		1037122	0					
ANR	1037273	Callee	dprintf		1037122	0					
ANR	1037274	Identifier	dprintf		1037122	0					
ANR	1037275	ArgumentList	D_ALWAYS		1037122	1					
ANR	1037276	Argument	D_ALWAYS		1037122	0					
ANR	1037277	Identifier	D_ALWAYS		1037122	0					
ANR	1037278	Argument	"""CronJob: Invalid GID -1\\n"""		1037122	1					
ANR	1037279	PrimaryExpression	"""CronJob: Invalid GID -1\\n"""		1037122	0					
ANR	1037280	ReturnStatement	return - 1 ;	516:2:11519:11528	1037122	1	True				
ANR	1037281	UnaryOperationExpression	- 1		1037122	0					
ANR	1037282	UnaryOperator	-		1037122	0					
ANR	1037283	PrimaryExpression	1		1037122	1					
ANR	1037284	ExpressionStatement	"set_user_ids ( uid , gid )"	518:1:11534:11558	1037122	10	True				
ANR	1037285	CallExpression	"set_user_ids ( uid , gid )"		1037122	0					
ANR	1037286	Callee	set_user_ids		1037122	0					
ANR	1037287	Identifier	set_user_ids		1037122	0					
ANR	1037288	ArgumentList	uid		1037122	1					
ANR	1037289	Argument	uid		1037122	0					
ANR	1037290	Identifier	uid		1037122	0					
ANR	1037291	Argument	gid		1037122	1					
ANR	1037292	Identifier	gid		1037122	0					
ANR	1037293	IdentifierDeclStatement	"endif m_pid = daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 ) ;"	519:2:11562:11988	1037122	11	True				
ANR	1037294	IdentifierDecl	"m_pid = daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 )"		1037122	0					
ANR	1037295	IdentifierDeclType	endif		1037122	0					
ANR	1037296	Identifier	m_pid		1037122	1					
ANR	1037297	AssignmentExpression	"m_pid = daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 )"		1037122	2		=			
ANR	1037298	Identifier	m_pid		1037122	0					
ANR	1037299	CallExpression	"daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 )"		1037122	1					
ANR	1037300	Callee	daemonCore -> Create_Process		1037122	0					
ANR	1037301	PtrMemberAccess	daemonCore -> Create_Process		1037122	0					
ANR	1037302	Identifier	daemonCore		1037122	0					
ANR	1037303	Identifier	Create_Process		1037122	1					
ANR	1037304	ArgumentList	GetExecutable ( )		1037122	1					
ANR	1037305	Argument	GetExecutable ( )		1037122	0					
ANR	1037306	CallExpression	GetExecutable ( )		1037122	0					
ANR	1037307	Callee	GetExecutable		1037122	0					
ANR	1037308	Identifier	GetExecutable		1037122	0					
ANR	1037309	ArgumentList			1037122	1					
ANR	1037310	Argument	final_args		1037122	1					
ANR	1037311	Identifier	final_args		1037122	0					
ANR	1037312	Argument	priv		1037122	2					
ANR	1037313	Identifier	priv		1037122	0					
ANR	1037314	Argument	m_reaperId		1037122	3					
ANR	1037315	Identifier	m_reaperId		1037122	0					
ANR	1037316	Argument	FALSE		1037122	4					
ANR	1037317	Identifier	FALSE		1037122	0					
ANR	1037318	Argument	& Params ( ) . GetEnv ( )		1037122	5					
ANR	1037319	UnaryOperationExpression	& Params ( ) . GetEnv ( )		1037122	0					
ANR	1037320	UnaryOperator	&		1037122	0					
ANR	1037321	CallExpression	Params ( ) . GetEnv ( )		1037122	1					
ANR	1037322	Callee	Params ( ) . GetEnv		1037122	0					
ANR	1037323	MemberAccess	Params ( ) . GetEnv		1037122	0					
ANR	1037324	CallExpression	Params ( )		1037122	0					
ANR	1037325	Callee	Params		1037122	0					
ANR	1037326	Identifier	Params		1037122	0					
ANR	1037327	ArgumentList			1037122	1					
ANR	1037328	Identifier	GetEnv		1037122	1					
ANR	1037329	ArgumentList			1037122	1					
ANR	1037330	Argument	Params ( ) . GetCwd ( )		1037122	6					
ANR	1037331	CallExpression	Params ( ) . GetCwd ( )		1037122	0					
ANR	1037332	Callee	Params ( ) . GetCwd		1037122	0					
ANR	1037333	MemberAccess	Params ( ) . GetCwd		1037122	0					
ANR	1037334	CallExpression	Params ( )		1037122	0					
ANR	1037335	Callee	Params		1037122	0					
ANR	1037336	Identifier	Params		1037122	0					
ANR	1037337	ArgumentList			1037122	1					
ANR	1037338	Identifier	GetCwd		1037122	1					
ANR	1037339	ArgumentList			1037122	1					
ANR	1037340	Argument	NULL		1037122	7					
ANR	1037341	Identifier	NULL		1037122	0					
ANR	1037342	Argument	NULL		1037122	8					
ANR	1037343	Identifier	NULL		1037122	0					
ANR	1037344	Argument	m_childFds		1037122	9					
ANR	1037345	Identifier	m_childFds		1037122	0					
ANR	1037346	Argument	0		1037122	10					
ANR	1037347	PrimaryExpression	0		1037122	0					
ANR	1037348	ExpressionStatement	uninit_user_ids ( )	536:1:12040:12058	1037122	12	True				
ANR	1037349	CallExpression	uninit_user_ids ( )		1037122	0					
ANR	1037350	Callee	uninit_user_ids		1037122	0					
ANR	1037351	Identifier	uninit_user_ids		1037122	0					
ANR	1037352	ArgumentList			1037122	1					
ANR	1037353	ExpressionStatement	CleanFd ( & m_childFds [ 0 ] )	539:1:12086:12111	1037122	13	True				
ANR	1037354	CallExpression	CleanFd ( & m_childFds [ 0 ] )		1037122	0					
ANR	1037355	Callee	CleanFd		1037122	0					
ANR	1037356	Identifier	CleanFd		1037122	0					
ANR	1037357	ArgumentList	& m_childFds [ 0 ]		1037122	1					
ANR	1037358	Argument	& m_childFds [ 0 ]		1037122	0					
ANR	1037359	UnaryOperationExpression	& m_childFds [ 0 ]		1037122	0					
ANR	1037360	UnaryOperator	&		1037122	0					
ANR	1037361	ArrayIndexing	m_childFds [ 0 ]		1037122	1					
ANR	1037362	Identifier	m_childFds		1037122	0					
ANR	1037363	PrimaryExpression	0		1037122	1					
ANR	1037364	ExpressionStatement	CleanFd ( & m_childFds [ 1 ] )	540:1:12114:12139	1037122	14	True				
ANR	1037365	CallExpression	CleanFd ( & m_childFds [ 1 ] )		1037122	0					
ANR	1037366	Callee	CleanFd		1037122	0					
ANR	1037367	Identifier	CleanFd		1037122	0					
ANR	1037368	ArgumentList	& m_childFds [ 1 ]		1037122	1					
ANR	1037369	Argument	& m_childFds [ 1 ]		1037122	0					
ANR	1037370	UnaryOperationExpression	& m_childFds [ 1 ]		1037122	0					
ANR	1037371	UnaryOperator	&		1037122	0					
ANR	1037372	ArrayIndexing	m_childFds [ 1 ]		1037122	1					
ANR	1037373	Identifier	m_childFds		1037122	0					
ANR	1037374	PrimaryExpression	1		1037122	1					
ANR	1037375	ExpressionStatement	CleanFd ( & m_childFds [ 2 ] )	541:1:12142:12167	1037122	15	True				
ANR	1037376	CallExpression	CleanFd ( & m_childFds [ 2 ] )		1037122	0					
ANR	1037377	Callee	CleanFd		1037122	0					
ANR	1037378	Identifier	CleanFd		1037122	0					
ANR	1037379	ArgumentList	& m_childFds [ 2 ]		1037122	1					
ANR	1037380	Argument	& m_childFds [ 2 ]		1037122	0					
ANR	1037381	UnaryOperationExpression	& m_childFds [ 2 ]		1037122	0					
ANR	1037382	UnaryOperator	&		1037122	0					
ANR	1037383	ArrayIndexing	m_childFds [ 2 ]		1037122	1					
ANR	1037384	Identifier	m_childFds		1037122	0					
ANR	1037385	PrimaryExpression	2		1037122	1					
ANR	1037386	IfStatement	if ( m_pid <= 0 )		1037122	16					
ANR	1037387	Condition	m_pid <= 0	544:6:12193:12202	1037122	0	True				
ANR	1037388	RelationalExpression	m_pid <= 0		1037122	0		<=			
ANR	1037389	Identifier	m_pid		1037122	0					
ANR	1037390	PrimaryExpression	0		1037122	1					
ANR	1037391	CompoundStatement		63:19:1459:1459	1037122	1					
ANR	1037392	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Error running job '%s'\\n"" , GetName ( ) )"	545:2:12210:12277	1037122	0	True				
ANR	1037393	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Error running job '%s'\\n"" , GetName ( ) )"		1037122	0					
ANR	1037394	Callee	dprintf		1037122	0					
ANR	1037395	Identifier	dprintf		1037122	0					
ANR	1037396	ArgumentList	D_ALWAYS		1037122	1					
ANR	1037397	Argument	D_ALWAYS		1037122	0					
ANR	1037398	Identifier	D_ALWAYS		1037122	0					
ANR	1037399	Argument	"""CronJob: Error running job '%s'\\n"""		1037122	1					
ANR	1037400	PrimaryExpression	"""CronJob: Error running job '%s'\\n"""		1037122	0					
ANR	1037401	Argument	GetName ( )		1037122	2					
ANR	1037402	CallExpression	GetName ( )		1037122	0					
ANR	1037403	Callee	GetName		1037122	0					
ANR	1037404	Identifier	GetName		1037122	0					
ANR	1037405	ArgumentList			1037122	1					
ANR	1037406	ExpressionStatement	CleanAll ( )	546:2:12281:12291	1037122	1	True				
ANR	1037407	CallExpression	CleanAll ( )		1037122	0					
ANR	1037408	Callee	CleanAll		1037122	0					
ANR	1037409	Identifier	CleanAll		1037122	0					
ANR	1037410	ArgumentList			1037122	1					
ANR	1037411	ExpressionStatement	SetState ( CRON_IDLE )	547:2:12295:12316	1037122	2	True				
ANR	1037412	CallExpression	SetState ( CRON_IDLE )		1037122	0					
ANR	1037413	Callee	SetState		1037122	0					
ANR	1037414	Identifier	SetState		1037122	0					
ANR	1037415	ArgumentList	CRON_IDLE		1037122	1					
ANR	1037416	Argument	CRON_IDLE		1037122	0					
ANR	1037417	Identifier	CRON_IDLE		1037122	0					
ANR	1037418	ExpressionStatement	m_num_fails ++	548:2:12320:12333	1037122	3	True				
ANR	1037419	PostIncDecOperationExpression	m_num_fails ++		1037122	0					
ANR	1037420	Identifier	m_num_fails		1037122	0					
ANR	1037421	IncDec	++		1037122	1					
ANR	1037422	ExpressionStatement	m_mgr . JobExited ( * this )	553:2:12494:12518	1037122	4	True				
ANR	1037423	CallExpression	m_mgr . JobExited ( * this )		1037122	0					
ANR	1037424	Callee	m_mgr . JobExited		1037122	0					
ANR	1037425	MemberAccess	m_mgr . JobExited		1037122	0					
ANR	1037426	Identifier	m_mgr		1037122	0					
ANR	1037427	Identifier	JobExited		1037122	1					
ANR	1037428	ArgumentList	* this		1037122	1					
ANR	1037429	Argument	* this		1037122	0					
ANR	1037430	UnaryOperationExpression	* this		1037122	0					
ANR	1037431	UnaryOperator	*		1037122	0					
ANR	1037432	Identifier	this		1037122	1					
ANR	1037433	ReturnStatement	return - 1 ;	554:2:12522:12531	1037122	5	True				
ANR	1037434	UnaryOperationExpression	- 1		1037122	0					
ANR	1037435	UnaryOperator	-		1037122	0					
ANR	1037436	PrimaryExpression	1		1037122	1					
ANR	1037437	ExpressionStatement	SetState ( CRON_RUNNING )	558:1:12554:12578	1037122	17	True				
ANR	1037438	CallExpression	SetState ( CRON_RUNNING )		1037122	0					
ANR	1037439	Callee	SetState		1037122	0					
ANR	1037440	Identifier	SetState		1037122	0					
ANR	1037441	ArgumentList	CRON_RUNNING		1037122	1					
ANR	1037442	Argument	CRON_RUNNING		1037122	0					
ANR	1037443	Identifier	CRON_RUNNING		1037122	0					
ANR	1037444	ExpressionStatement	m_last_start_time = time ( NULL )	559:1:12581:12611	1037122	18	True				
ANR	1037445	AssignmentExpression	m_last_start_time = time ( NULL )		1037122	0		=			
ANR	1037446	Identifier	m_last_start_time		1037122	0					
ANR	1037447	CallExpression	time ( NULL )		1037122	1					
ANR	1037448	Callee	time		1037122	0					
ANR	1037449	Identifier	time		1037122	0					
ANR	1037450	ArgumentList	NULL		1037122	1					
ANR	1037451	Argument	NULL		1037122	0					
ANR	1037452	Identifier	NULL		1037122	0					
ANR	1037453	ExpressionStatement	m_run_load = GetJobLoad ( )	560:1:12614:12639	1037122	19	True				
ANR	1037454	AssignmentExpression	m_run_load = GetJobLoad ( )		1037122	0		=			
ANR	1037455	Identifier	m_run_load		1037122	0					
ANR	1037456	CallExpression	GetJobLoad ( )		1037122	1					
ANR	1037457	Callee	GetJobLoad		1037122	0					
ANR	1037458	Identifier	GetJobLoad		1037122	0					
ANR	1037459	ArgumentList			1037122	1					
ANR	1037460	ExpressionStatement	m_num_runs ++	561:1:12642:12654	1037122	20	True				
ANR	1037461	PostIncDecOperationExpression	m_num_runs ++		1037122	0					
ANR	1037462	Identifier	m_num_runs		1037122	0					
ANR	1037463	IncDec	++		1037122	1					
ANR	1037464	ExpressionStatement	m_mgr . JobStarted ( * this )	564:1:12689:12714	1037122	21	True				
ANR	1037465	CallExpression	m_mgr . JobStarted ( * this )		1037122	0					
ANR	1037466	Callee	m_mgr . JobStarted		1037122	0					
ANR	1037467	MemberAccess	m_mgr . JobStarted		1037122	0					
ANR	1037468	Identifier	m_mgr		1037122	0					
ANR	1037469	Identifier	JobStarted		1037122	1					
ANR	1037470	ArgumentList	* this		1037122	1					
ANR	1037471	Argument	* this		1037122	0					
ANR	1037472	UnaryOperationExpression	* this		1037122	0					
ANR	1037473	UnaryOperator	*		1037122	0					
ANR	1037474	Identifier	this		1037122	1					
ANR	1037475	ReturnStatement	return 0 ;	567:1:12730:12738	1037122	22	True				
ANR	1037476	PrimaryExpression	0		1037122	0					
ANR	1037477	ReturnType	int		1037122	1					
ANR	1037478	Identifier	CronJob :: StartJobProcess		1037122	2					
ANR	1037479	ParameterList			1037122	3					
ANR	1037480	CFGEntryNode	ENTRY		1037122		True				
ANR	1037481	CFGExitNode	EXIT		1037122		True				
ANR	1037482	Symbol	final_args		1037122						
ANR	1037483	Symbol	daemonCore -> Create_Process		1037122						
ANR	1037484	Symbol	m_last_start_time		1037122						
ANR	1037485	Symbol	gid		1037122						
ANR	1037486	Symbol	OpenFds		1037122						
ANR	1037487	Symbol	GetJobLoad		1037122						
ANR	1037488	Symbol	uid		1037122						
ANR	1037489	Symbol	PRIV_USER_FINAL		1037122						
ANR	1037490	Symbol	m_pid		1037122						
ANR	1037491	Symbol	daemonCore		1037122						
ANR	1037492	Symbol	GetName		1037122						
ANR	1037493	Symbol	priv		1037122						
ANR	1037494	Symbol	Params ( ) . GetArgs ( ) . Count		1037122						
ANR	1037495	Symbol	m_childFds		1037122						
ANR	1037496	Symbol	& Params		1037122						
ANR	1037497	Symbol	NULL		1037122						
ANR	1037498	Symbol	CRON_RUNNING		1037122						
ANR	1037499	Symbol	Params ( ) . GetCwd		1037122						
ANR	1037500	Symbol	GetExecutable		1037122						
ANR	1037501	Symbol	m_num_runs		1037122						
ANR	1037502	Symbol	Params ( ) . GetArgs		1037122						
ANR	1037503	Symbol	m_run_load		1037122						
ANR	1037504	Symbol	D_ALWAYS		1037122						
ANR	1037505	Symbol	this		1037122						
ANR	1037506	Symbol	Params		1037122						
ANR	1037507	Symbol	CRON_IDLE		1037122						
ANR	1037508	Symbol	m_num_fails		1037122						
ANR	1037509	Symbol	m_mgr		1037122						
ANR	1037510	Symbol	* this		1037122						
ANR	1037511	Symbol	get_condor_uid		1037122						
ANR	1037512	Symbol	* daemonCore		1037122						
ANR	1037513	Symbol	& Params ( ) . GetEnv		1037122						
ANR	1037514	Symbol	m_reaperId		1037122						
ANR	1037515	Symbol	get_condor_gid		1037122						
ANR	1037516	Symbol	FALSE		1037122						
ANR	1037517	Symbol	time		1037122						
ANR	1037518	Symbol	PRIV_CONDOR		1037122						
ANR	1037519	Function	CronJob :: TodoWrite	571:5:12761:13292							
ANR	1037520	FunctionDef	CronJob :: TodoWrite ()		1037519	0					
ANR	1037521	CompoundStatement		574:0:12814:13292	1037519	0					
ANR	1037522	IdentifierDeclStatement	char fname [ 1024 ] ;	575:1:12817:12833	1037519	0	True				
ANR	1037523	IdentifierDecl	fname [ 1024 ]		1037519	0					
ANR	1037524	IdentifierDeclType	char [ 1024 ]		1037519	0					
ANR	1037525	Identifier	fname		1037519	1					
ANR	1037526	PrimaryExpression	1024		1037519	2					
ANR	1037527	IdentifierDeclStatement	FILE * fp ;	576:1:12836:12844	1037519	1	True				
ANR	1037528	IdentifierDecl	* fp		1037519	0					
ANR	1037529	IdentifierDeclType	FILE *		1037519	0					
ANR	1037530	Identifier	fp		1037519	1					
ANR	1037531	ExpressionStatement	"snprintf ( fname , 1024 , ""todo.%s.%06d.%02d"" , name , getpid ( ) , TodoWriteNum ++ )"	577:1:12847:12928	1037519	2	True				
ANR	1037532	CallExpression	"snprintf ( fname , 1024 , ""todo.%s.%06d.%02d"" , name , getpid ( ) , TodoWriteNum ++ )"		1037519	0					
ANR	1037533	Callee	snprintf		1037519	0					
ANR	1037534	Identifier	snprintf		1037519	0					
ANR	1037535	ArgumentList	fname		1037519	1					
ANR	1037536	Argument	fname		1037519	0					
ANR	1037537	Identifier	fname		1037519	0					
ANR	1037538	Argument	1024		1037519	1					
ANR	1037539	PrimaryExpression	1024		1037519	0					
ANR	1037540	Argument	"""todo.%s.%06d.%02d"""		1037519	2					
ANR	1037541	PrimaryExpression	"""todo.%s.%06d.%02d"""		1037519	0					
ANR	1037542	Argument	name		1037519	3					
ANR	1037543	Identifier	name		1037519	0					
ANR	1037544	Argument	getpid ( )		1037519	4					
ANR	1037545	CallExpression	getpid ( )		1037519	0					
ANR	1037546	Callee	getpid		1037519	0					
ANR	1037547	Identifier	getpid		1037519	0					
ANR	1037548	ArgumentList			1037519	1					
ANR	1037549	Argument	TodoWriteNum ++		1037519	5					
ANR	1037550	PostIncDecOperationExpression	TodoWriteNum ++		1037519	0					
ANR	1037551	Identifier	TodoWriteNum		1037519	0					
ANR	1037552	IncDec	++		1037519	1					
ANR	1037553	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: Writing input log '%s'\\n"" , GetName ( ) , fname )"	579:1:12931:13000	1037519	3	True				
ANR	1037554	CallExpression	"dprintf ( D_ALWAYS , ""%s: Writing input log '%s'\\n"" , GetName ( ) , fname )"		1037519	0					
ANR	1037555	Callee	dprintf		1037519	0					
ANR	1037556	Identifier	dprintf		1037519	0					
ANR	1037557	ArgumentList	D_ALWAYS		1037519	1					
ANR	1037558	Argument	D_ALWAYS		1037519	0					
ANR	1037559	Identifier	D_ALWAYS		1037519	0					
ANR	1037560	Argument	"""%s: Writing input log '%s'\\n"""		1037519	1					
ANR	1037561	PrimaryExpression	"""%s: Writing input log '%s'\\n"""		1037519	0					
ANR	1037562	Argument	GetName ( )		1037519	2					
ANR	1037563	CallExpression	GetName ( )		1037519	0					
ANR	1037564	Callee	GetName		1037519	0					
ANR	1037565	Identifier	GetName		1037519	0					
ANR	1037566	ArgumentList			1037519	1					
ANR	1037567	Argument	fname		1037519	3					
ANR	1037568	Identifier	fname		1037519	0					
ANR	1037569	IfStatement	"if ( ( fp = safe_fopen_wrapper_follow ( fname , ""w"" ) ) != NULL )"		1037519	4					
ANR	1037570	Condition	"( fp = safe_fopen_wrapper_follow ( fname , ""w"" ) ) != NULL"	581:6:13009:13064	1037519	0	True				
ANR	1037571	EqualityExpression	"( fp = safe_fopen_wrapper_follow ( fname , ""w"" ) ) != NULL"		1037519	0		!=			
ANR	1037572	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( fname , ""w"" )"		1037519	0		=			
ANR	1037573	Identifier	fp		1037519	0					
ANR	1037574	CallExpression	"safe_fopen_wrapper_follow ( fname , ""w"" )"		1037519	1					
ANR	1037575	Callee	safe_fopen_wrapper_follow		1037519	0					
ANR	1037576	Identifier	safe_fopen_wrapper_follow		1037519	0					
ANR	1037577	ArgumentList	fname		1037519	1					
ANR	1037578	Argument	fname		1037519	0					
ANR	1037579	Identifier	fname		1037519	0					
ANR	1037580	Argument	"""w"""		1037519	1					
ANR	1037581	PrimaryExpression	"""w"""		1037519	0					
ANR	1037582	Identifier	NULL		1037519	1					
ANR	1037583	CompoundStatement		8:65:253:253	1037519	1					
ANR	1037584	IfStatement	if ( TodoBufWrap )		1037519	0					
ANR	1037585	Condition	TodoBufWrap	582:7:13077:13087	1037519	0	True				
ANR	1037586	Identifier	TodoBufWrap		1037519	0					
ANR	1037587	CompoundStatement		9:21:276:276	1037519	1					
ANR	1037588	ExpressionStatement	"fwrite ( TodoBuffer + TodoBufOffset , TodoBufSize - TodoBufOffset , 1 , fp )"	583:3:13096:13183	1037519	0	True				
ANR	1037589	CallExpression	"fwrite ( TodoBuffer + TodoBufOffset , TodoBufSize - TodoBufOffset , 1 , fp )"		1037519	0					
ANR	1037590	Callee	fwrite		1037519	0					
ANR	1037591	Identifier	fwrite		1037519	0					
ANR	1037592	ArgumentList	TodoBuffer + TodoBufOffset		1037519	1					
ANR	1037593	Argument	TodoBuffer + TodoBufOffset		1037519	0					
ANR	1037594	AdditiveExpression	TodoBuffer + TodoBufOffset		1037519	0		+			
ANR	1037595	Identifier	TodoBuffer		1037519	0					
ANR	1037596	Identifier	TodoBufOffset		1037519	1					
ANR	1037597	Argument	TodoBufSize - TodoBufOffset		1037519	1					
ANR	1037598	AdditiveExpression	TodoBufSize - TodoBufOffset		1037519	0		-			
ANR	1037599	Identifier	TodoBufSize		1037519	0					
ANR	1037600	Identifier	TodoBufOffset		1037519	1					
ANR	1037601	Argument	1		1037519	2					
ANR	1037602	PrimaryExpression	1		1037519	0					
ANR	1037603	Argument	fp		1037519	3					
ANR	1037604	Identifier	fp		1037519	0					
ANR	1037605	ExpressionStatement	"fwrite ( TodoBuffer , TodoBufOffset , 1 , fp )"	588:2:13191:13233	1037519	1	True				
ANR	1037606	CallExpression	"fwrite ( TodoBuffer , TodoBufOffset , 1 , fp )"		1037519	0					
ANR	1037607	Callee	fwrite		1037519	0					
ANR	1037608	Identifier	fwrite		1037519	0					
ANR	1037609	ArgumentList	TodoBuffer		1037519	1					
ANR	1037610	Argument	TodoBuffer		1037519	0					
ANR	1037611	Identifier	TodoBuffer		1037519	0					
ANR	1037612	Argument	TodoBufOffset		1037519	1					
ANR	1037613	Identifier	TodoBufOffset		1037519	0					
ANR	1037614	Argument	1		1037519	2					
ANR	1037615	PrimaryExpression	1		1037519	0					
ANR	1037616	Argument	fp		1037519	3					
ANR	1037617	Identifier	fp		1037519	0					
ANR	1037618	ExpressionStatement	fclose ( fp )	589:2:13237:13249	1037519	2	True				
ANR	1037619	CallExpression	fclose ( fp )		1037519	0					
ANR	1037620	Callee	fclose		1037519	0					
ANR	1037621	Identifier	fclose		1037519	0					
ANR	1037622	ArgumentList	fp		1037519	1					
ANR	1037623	Argument	fp		1037519	0					
ANR	1037624	Identifier	fp		1037519	0					
ANR	1037625	ExpressionStatement	TodoBufOffset = 0	591:1:13255:13272	1037519	5	True				
ANR	1037626	AssignmentExpression	TodoBufOffset = 0		1037519	0		=			
ANR	1037627	Identifier	TodoBufOffset		1037519	0					
ANR	1037628	PrimaryExpression	0		1037519	1					
ANR	1037629	ExpressionStatement	TodoBufWrap = 0	592:1:13275:13290	1037519	6	True				
ANR	1037630	AssignmentExpression	TodoBufWrap = 0		1037519	0		=			
ANR	1037631	Identifier	TodoBufWrap		1037519	0					
ANR	1037632	PrimaryExpression	0		1037519	1					
ANR	1037633	ReturnType	CRONJOB_PIPEIO_DEBUG void		1037519	1					
ANR	1037634	Identifier	CronJob :: TodoWrite		1037519	2					
ANR	1037635	ParameterList			1037519	3					
ANR	1037636	CFGEntryNode	ENTRY		1037519		True				
ANR	1037637	CFGExitNode	EXIT		1037519		True				
ANR	1037638	Symbol	fname		1037519						
ANR	1037639	Symbol	NULL		1037519						
ANR	1037640	Symbol	D_ALWAYS		1037519						
ANR	1037641	Symbol	TodoBuffer		1037519						
ANR	1037642	Symbol	TodoBufSize		1037519						
ANR	1037643	Symbol	fp		1037519						
ANR	1037644	Symbol	TodoWriteNum		1037519						
ANR	1037645	Symbol	name		1037519						
ANR	1037646	Symbol	TodoBufOffset		1037519						
ANR	1037647	Symbol	GetName		1037519						
ANR	1037648	Symbol	getpid		1037519						
ANR	1037649	Symbol	safe_fopen_wrapper_follow		1037519						
ANR	1037650	Symbol	TodoBufWrap		1037519						
ANR	1037651	DeclStmt									
ANR	1037652	Decl							char	char [ STDOUT_READBUF_SIZE ]	buf
ANR	1037653	DeclStmt									
ANR	1037654	Decl							int	int	bytes
ANR	1037655	DeclStmt									
ANR	1037656	Decl							int	int	reads
ANR	1037657	DeclStmt									
ANR	1037658	Decl							const char	const char *	bptr
ANR	1037659	DeclStmt									
ANR	1037660	Decl							char	char *	OutPtr
ANR	1037661	DeclStmt									
ANR	1037662	Decl							int	int	Count
ANR	1037663	DeclStmt									
ANR	1037664	Decl							char	char *	InPtr
ANR	1037665	DeclStmt									
ANR	1037666	Decl							char	char [ STDERR_READBUF_SIZE ]	buf
ANR	1037667	DeclStmt									
ANR	1037668	Decl							int	int	bytes
ANR	1037669	DeclStmt									
ANR	1037670	Decl							const char	const char *	bptr
ANR	1037671	Function	CronJob :: OpenFds	710:0:15976:17290							
ANR	1037672	FunctionDef	CronJob :: OpenFds ()		1037671	0					
ANR	1037673	CompoundStatement		712:0:16006:17290	1037671	0					
ANR	1037674	IdentifierDeclStatement	int tmpfds [ 2 ] ;	713:1:16009:16022	1037671	0	True				
ANR	1037675	IdentifierDecl	tmpfds [ 2 ]		1037671	0					
ANR	1037676	IdentifierDeclType	int [ 2 ]		1037671	0					
ANR	1037677	Identifier	tmpfds		1037671	1					
ANR	1037678	PrimaryExpression	2		1037671	2					
ANR	1037679	ExpressionStatement	m_childFds [ 0 ] = - 1	716:1:16059:16077	1037671	1	True				
ANR	1037680	AssignmentExpression	m_childFds [ 0 ] = - 1		1037671	0		=			
ANR	1037681	ArrayIndexing	m_childFds [ 0 ]		1037671	0					
ANR	1037682	Identifier	m_childFds		1037671	0					
ANR	1037683	PrimaryExpression	0		1037671	1					
ANR	1037684	UnaryOperationExpression	- 1		1037671	1					
ANR	1037685	UnaryOperator	-		1037671	0					
ANR	1037686	PrimaryExpression	1		1037671	1					
ANR	1037687	IfStatement	"if ( ! daemonCore -> Create_Pipe ( tmpfds , true , false , true ) )"		1037671	2					
ANR	1037688	Condition	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"	719:6:16105:16294	1037671	0	True				
ANR	1037689	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		1037671	0					
ANR	1037690	UnaryOperator	!		1037671	0					
ANR	1037691	CallExpression	"daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		1037671	1					
ANR	1037692	Callee	daemonCore -> Create_Pipe		1037671	0					
ANR	1037693	PtrMemberAccess	daemonCore -> Create_Pipe		1037671	0					
ANR	1037694	Identifier	daemonCore		1037671	0					
ANR	1037695	Identifier	Create_Pipe		1037671	1					
ANR	1037696	ArgumentList	tmpfds		1037671	1					
ANR	1037697	Argument	tmpfds		1037671	0					
ANR	1037698	Identifier	tmpfds		1037671	0					
ANR	1037699	Argument	true		1037671	1					
ANR	1037700	Identifier	true		1037671	0					
ANR	1037701	Argument	false		1037671	2					
ANR	1037702	Identifier	false		1037671	0					
ANR	1037703	Argument	true		1037671	3					
ANR	1037704	Identifier	true		1037671	0					
ANR	1037705	CompoundStatement		12:15:291:291	1037671	1					
ANR	1037706	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Can't create pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"	724:2:16302:16399	1037671	0	True				
ANR	1037707	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Can't create pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"		1037671	0					
ANR	1037708	Callee	dprintf		1037671	0					
ANR	1037709	Identifier	dprintf		1037671	0					
ANR	1037710	ArgumentList	D_ALWAYS		1037671	1					
ANR	1037711	Argument	D_ALWAYS		1037671	0					
ANR	1037712	Identifier	D_ALWAYS		1037671	0					
ANR	1037713	Argument	"""CronJob: Can't create pipe, errno %d : %s\\n"""		1037671	1					
ANR	1037714	PrimaryExpression	"""CronJob: Can't create pipe, errno %d : %s\\n"""		1037671	0					
ANR	1037715	Argument	errno		1037671	2					
ANR	1037716	Identifier	errno		1037671	0					
ANR	1037717	Argument	strerror ( errno )		1037671	3					
ANR	1037718	CallExpression	strerror ( errno )		1037671	0					
ANR	1037719	Callee	strerror		1037671	0					
ANR	1037720	Identifier	strerror		1037671	0					
ANR	1037721	ArgumentList	errno		1037671	1					
ANR	1037722	Argument	errno		1037671	0					
ANR	1037723	Identifier	errno		1037671	0					
ANR	1037724	ExpressionStatement	CleanAll ( )	726:2:16403:16414	1037671	1	True				
ANR	1037725	CallExpression	CleanAll ( )		1037671	0					
ANR	1037726	Callee	CleanAll		1037671	0					
ANR	1037727	Identifier	CleanAll		1037671	0					
ANR	1037728	ArgumentList			1037671	1					
ANR	1037729	ReturnStatement	return - 1 ;	727:2:16418:16427	1037671	2	True				
ANR	1037730	UnaryOperationExpression	- 1		1037671	0					
ANR	1037731	UnaryOperator	-		1037671	0					
ANR	1037732	PrimaryExpression	1		1037671	1					
ANR	1037733	ExpressionStatement	m_stdOut = tmpfds [ 0 ]	729:1:16433:16453	1037671	3	True				
ANR	1037734	AssignmentExpression	m_stdOut = tmpfds [ 0 ]		1037671	0		=			
ANR	1037735	Identifier	m_stdOut		1037671	0					
ANR	1037736	ArrayIndexing	tmpfds [ 0 ]		1037671	1					
ANR	1037737	Identifier	tmpfds		1037671	0					
ANR	1037738	PrimaryExpression	0		1037671	1					
ANR	1037739	ExpressionStatement	m_childFds [ 1 ] = tmpfds [ 1 ]	730:1:16456:16481	1037671	4	True				
ANR	1037740	AssignmentExpression	m_childFds [ 1 ] = tmpfds [ 1 ]		1037671	0		=			
ANR	1037741	ArrayIndexing	m_childFds [ 1 ]		1037671	0					
ANR	1037742	Identifier	m_childFds		1037671	0					
ANR	1037743	PrimaryExpression	1		1037671	1					
ANR	1037744	ArrayIndexing	tmpfds [ 1 ]		1037671	1					
ANR	1037745	Identifier	tmpfds		1037671	0					
ANR	1037746	PrimaryExpression	1		1037671	1					
ANR	1037747	ExpressionStatement	"daemonCore -> Register_Pipe ( m_stdOut , ""Standard Out"" , static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler ) , ""Standard Out Handler"" , this )"	731:1:16484:16661	1037671	5	True				
ANR	1037748	CallExpression	"daemonCore -> Register_Pipe ( m_stdOut , ""Standard Out"" , static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler ) , ""Standard Out Handler"" , this )"		1037671	0					
ANR	1037749	Callee	daemonCore -> Register_Pipe		1037671	0					
ANR	1037750	PtrMemberAccess	daemonCore -> Register_Pipe		1037671	0					
ANR	1037751	Identifier	daemonCore		1037671	0					
ANR	1037752	Identifier	Register_Pipe		1037671	1					
ANR	1037753	ArgumentList	m_stdOut		1037671	1					
ANR	1037754	Argument	m_stdOut		1037671	0					
ANR	1037755	Identifier	m_stdOut		1037671	0					
ANR	1037756	Argument	"""Standard Out"""		1037671	1					
ANR	1037757	PrimaryExpression	"""Standard Out"""		1037671	0					
ANR	1037758	Argument	static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler )		1037671	2					
ANR	1037759	RelationalExpression	static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler )		1037671	0		<			
ANR	1037760	Identifier	static_cast		1037671	0					
ANR	1037761	RelationalExpression	PipeHandlercpp > ( & CronJob :: StdoutHandler )		1037671	1		>			
ANR	1037762	Identifier	PipeHandlercpp		1037671	0					
ANR	1037763	UnaryOperationExpression	& CronJob :: StdoutHandler		1037671	1					
ANR	1037764	UnaryOperator	&		1037671	0					
ANR	1037765	Identifier	CronJob :: StdoutHandler		1037671	1					
ANR	1037766	Argument	"""Standard Out Handler"""		1037671	3					
ANR	1037767	PrimaryExpression	"""Standard Out Handler"""		1037671	0					
ANR	1037768	Argument	this		1037671	4					
ANR	1037769	Identifier	this		1037671	0					
ANR	1037770	IfStatement	"if ( ! daemonCore -> Create_Pipe ( tmpfds , true , false , true ) )"		1037671	6					
ANR	1037771	Condition	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"	738:6:16689:16876	1037671	0	True				
ANR	1037772	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		1037671	0					
ANR	1037773	UnaryOperator	!		1037671	0					
ANR	1037774	CallExpression	"daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		1037671	1					
ANR	1037775	Callee	daemonCore -> Create_Pipe		1037671	0					
ANR	1037776	PtrMemberAccess	daemonCore -> Create_Pipe		1037671	0					
ANR	1037777	Identifier	daemonCore		1037671	0					
ANR	1037778	Identifier	Create_Pipe		1037671	1					
ANR	1037779	ArgumentList	tmpfds		1037671	1					
ANR	1037780	Argument	tmpfds		1037671	0					
ANR	1037781	Identifier	tmpfds		1037671	0					
ANR	1037782	Argument	true		1037671	1					
ANR	1037783	Identifier	true		1037671	0					
ANR	1037784	Argument	false		1037671	2					
ANR	1037785	Identifier	false		1037671	0					
ANR	1037786	Argument	true		1037671	3					
ANR	1037787	Identifier	true		1037671	0					
ANR	1037788	CompoundStatement		31:12:873:873	1037671	1					
ANR	1037789	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Can't create STDERR pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"	743:2:16884:16993	1037671	0	True				
ANR	1037790	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Can't create STDERR pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"		1037671	0					
ANR	1037791	Callee	dprintf		1037671	0					
ANR	1037792	Identifier	dprintf		1037671	0					
ANR	1037793	ArgumentList	D_ALWAYS		1037671	1					
ANR	1037794	Argument	D_ALWAYS		1037671	0					
ANR	1037795	Identifier	D_ALWAYS		1037671	0					
ANR	1037796	Argument	"""CronJob: Can't create STDERR pipe, errno %d : %s\\n"""		1037671	1					
ANR	1037797	PrimaryExpression	"""CronJob: Can't create STDERR pipe, errno %d : %s\\n"""		1037671	0					
ANR	1037798	Argument	errno		1037671	2					
ANR	1037799	Identifier	errno		1037671	0					
ANR	1037800	Argument	strerror ( errno )		1037671	3					
ANR	1037801	CallExpression	strerror ( errno )		1037671	0					
ANR	1037802	Callee	strerror		1037671	0					
ANR	1037803	Identifier	strerror		1037671	0					
ANR	1037804	ArgumentList	errno		1037671	1					
ANR	1037805	Argument	errno		1037671	0					
ANR	1037806	Identifier	errno		1037671	0					
ANR	1037807	ExpressionStatement	CleanAll ( )	746:2:16997:17008	1037671	1	True				
ANR	1037808	CallExpression	CleanAll ( )		1037671	0					
ANR	1037809	Callee	CleanAll		1037671	0					
ANR	1037810	Identifier	CleanAll		1037671	0					
ANR	1037811	ArgumentList			1037671	1					
ANR	1037812	ReturnStatement	return - 1 ;	747:2:17012:17021	1037671	2	True				
ANR	1037813	UnaryOperationExpression	- 1		1037671	0					
ANR	1037814	UnaryOperator	-		1037671	0					
ANR	1037815	PrimaryExpression	1		1037671	1					
ANR	1037816	ExpressionStatement	m_stdErr = tmpfds [ 0 ]	749:1:17027:17047	1037671	7	True				
ANR	1037817	AssignmentExpression	m_stdErr = tmpfds [ 0 ]		1037671	0		=			
ANR	1037818	Identifier	m_stdErr		1037671	0					
ANR	1037819	ArrayIndexing	tmpfds [ 0 ]		1037671	1					
ANR	1037820	Identifier	tmpfds		1037671	0					
ANR	1037821	PrimaryExpression	0		1037671	1					
ANR	1037822	ExpressionStatement	m_childFds [ 2 ] = tmpfds [ 1 ]	750:1:17050:17075	1037671	8	True				
ANR	1037823	AssignmentExpression	m_childFds [ 2 ] = tmpfds [ 1 ]		1037671	0		=			
ANR	1037824	ArrayIndexing	m_childFds [ 2 ]		1037671	0					
ANR	1037825	Identifier	m_childFds		1037671	0					
ANR	1037826	PrimaryExpression	2		1037671	1					
ANR	1037827	ArrayIndexing	tmpfds [ 1 ]		1037671	1					
ANR	1037828	Identifier	tmpfds		1037671	0					
ANR	1037829	PrimaryExpression	1		1037671	1					
ANR	1037830	ExpressionStatement	"daemonCore -> Register_Pipe ( m_stdErr , ""Standard Error"" , static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler ) , ""Standard Error Handler"" , this )"	751:1:17078:17259	1037671	9	True				
ANR	1037831	CallExpression	"daemonCore -> Register_Pipe ( m_stdErr , ""Standard Error"" , static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler ) , ""Standard Error Handler"" , this )"		1037671	0					
ANR	1037832	Callee	daemonCore -> Register_Pipe		1037671	0					
ANR	1037833	PtrMemberAccess	daemonCore -> Register_Pipe		1037671	0					
ANR	1037834	Identifier	daemonCore		1037671	0					
ANR	1037835	Identifier	Register_Pipe		1037671	1					
ANR	1037836	ArgumentList	m_stdErr		1037671	1					
ANR	1037837	Argument	m_stdErr		1037671	0					
ANR	1037838	Identifier	m_stdErr		1037671	0					
ANR	1037839	Argument	"""Standard Error"""		1037671	1					
ANR	1037840	PrimaryExpression	"""Standard Error"""		1037671	0					
ANR	1037841	Argument	static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler )		1037671	2					
ANR	1037842	RelationalExpression	static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler )		1037671	0		<			
ANR	1037843	Identifier	static_cast		1037671	0					
ANR	1037844	RelationalExpression	PipeHandlercpp > ( & CronJob :: StderrHandler )		1037671	1		>			
ANR	1037845	Identifier	PipeHandlercpp		1037671	0					
ANR	1037846	UnaryOperationExpression	& CronJob :: StderrHandler		1037671	1					
ANR	1037847	UnaryOperator	&		1037671	0					
ANR	1037848	Identifier	CronJob :: StderrHandler		1037671	1					
ANR	1037849	Argument	"""Standard Error Handler"""		1037671	3					
ANR	1037850	PrimaryExpression	"""Standard Error Handler"""		1037671	0					
ANR	1037851	Argument	this		1037671	4					
ANR	1037852	Identifier	this		1037671	0					
ANR	1037853	ReturnStatement	return 0 ;	758:1:17280:17288	1037671	10	True				
ANR	1037854	PrimaryExpression	0		1037671	0					
ANR	1037855	ReturnType	int		1037671	1					
ANR	1037856	Identifier	CronJob :: OpenFds		1037671	2					
ANR	1037857	ParameterList			1037671	3					
ANR	1037858	CFGEntryNode	ENTRY		1037671		True				
ANR	1037859	CFGExitNode	EXIT		1037671		True				
ANR	1037860	Symbol	errno		1037671						
ANR	1037861	Symbol	m_stdOut		1037671						
ANR	1037862	Symbol	false		1037671						
ANR	1037863	Symbol	D_ALWAYS		1037671						
ANR	1037864	Symbol	this		1037671						
ANR	1037865	Symbol	m_stdErr		1037671						
ANR	1037866	Symbol	* tmpfds		1037671						
ANR	1037867	Symbol	* m_childFds		1037671						
ANR	1037868	Symbol	strerror		1037671						
ANR	1037869	Symbol	static_cast		1037671						
ANR	1037870	Symbol	PipeHandlercpp		1037671						
ANR	1037871	Symbol	* daemonCore		1037671						
ANR	1037872	Symbol	& CronJob :: StderrHandler		1037671						
ANR	1037873	Symbol	daemonCore		1037671						
ANR	1037874	Symbol	tmpfds		1037671						
ANR	1037875	Symbol	true		1037671						
ANR	1037876	Symbol	& CronJob :: StdoutHandler		1037671						
ANR	1037877	Symbol	daemonCore -> Create_Pipe		1037671						
ANR	1037878	Symbol	m_childFds		1037671						
ANR	1037879	Function	CronJob :: CleanAll	762:0:17342:17506							
ANR	1037880	FunctionDef	CronJob :: CleanAll ()		1037879	0					
ANR	1037881	CompoundStatement		764:0:17374:17506	1037879	0					
ANR	1037882	ExpressionStatement	CleanFd ( & m_stdOut )	765:1:17377:17397	1037879	0	True				
ANR	1037883	CallExpression	CleanFd ( & m_stdOut )		1037879	0					
ANR	1037884	Callee	CleanFd		1037879	0					
ANR	1037885	Identifier	CleanFd		1037879	0					
ANR	1037886	ArgumentList	& m_stdOut		1037879	1					
ANR	1037887	Argument	& m_stdOut		1037879	0					
ANR	1037888	UnaryOperationExpression	& m_stdOut		1037879	0					
ANR	1037889	UnaryOperator	&		1037879	0					
ANR	1037890	Identifier	m_stdOut		1037879	1					
ANR	1037891	ExpressionStatement	CleanFd ( & m_stdErr )	766:1:17400:17420	1037879	1	True				
ANR	1037892	CallExpression	CleanFd ( & m_stdErr )		1037879	0					
ANR	1037893	Callee	CleanFd		1037879	0					
ANR	1037894	Identifier	CleanFd		1037879	0					
ANR	1037895	ArgumentList	& m_stdErr		1037879	1					
ANR	1037896	Argument	& m_stdErr		1037879	0					
ANR	1037897	UnaryOperationExpression	& m_stdErr		1037879	0					
ANR	1037898	UnaryOperator	&		1037879	0					
ANR	1037899	Identifier	m_stdErr		1037879	1					
ANR	1037900	ExpressionStatement	CleanFd ( & m_childFds [ 0 ] )	767:1:17423:17448	1037879	2	True				
ANR	1037901	CallExpression	CleanFd ( & m_childFds [ 0 ] )		1037879	0					
ANR	1037902	Callee	CleanFd		1037879	0					
ANR	1037903	Identifier	CleanFd		1037879	0					
ANR	1037904	ArgumentList	& m_childFds [ 0 ]		1037879	1					
ANR	1037905	Argument	& m_childFds [ 0 ]		1037879	0					
ANR	1037906	UnaryOperationExpression	& m_childFds [ 0 ]		1037879	0					
ANR	1037907	UnaryOperator	&		1037879	0					
ANR	1037908	ArrayIndexing	m_childFds [ 0 ]		1037879	1					
ANR	1037909	Identifier	m_childFds		1037879	0					
ANR	1037910	PrimaryExpression	0		1037879	1					
ANR	1037911	ExpressionStatement	CleanFd ( & m_childFds [ 1 ] )	768:1:17451:17476	1037879	3	True				
ANR	1037912	CallExpression	CleanFd ( & m_childFds [ 1 ] )		1037879	0					
ANR	1037913	Callee	CleanFd		1037879	0					
ANR	1037914	Identifier	CleanFd		1037879	0					
ANR	1037915	ArgumentList	& m_childFds [ 1 ]		1037879	1					
ANR	1037916	Argument	& m_childFds [ 1 ]		1037879	0					
ANR	1037917	UnaryOperationExpression	& m_childFds [ 1 ]		1037879	0					
ANR	1037918	UnaryOperator	&		1037879	0					
ANR	1037919	ArrayIndexing	m_childFds [ 1 ]		1037879	1					
ANR	1037920	Identifier	m_childFds		1037879	0					
ANR	1037921	PrimaryExpression	1		1037879	1					
ANR	1037922	ExpressionStatement	CleanFd ( & m_childFds [ 2 ] )	769:1:17479:17504	1037879	4	True				
ANR	1037923	CallExpression	CleanFd ( & m_childFds [ 2 ] )		1037879	0					
ANR	1037924	Callee	CleanFd		1037879	0					
ANR	1037925	Identifier	CleanFd		1037879	0					
ANR	1037926	ArgumentList	& m_childFds [ 2 ]		1037879	1					
ANR	1037927	Argument	& m_childFds [ 2 ]		1037879	0					
ANR	1037928	UnaryOperationExpression	& m_childFds [ 2 ]		1037879	0					
ANR	1037929	UnaryOperator	&		1037879	0					
ANR	1037930	ArrayIndexing	m_childFds [ 2 ]		1037879	1					
ANR	1037931	Identifier	m_childFds		1037879	0					
ANR	1037932	PrimaryExpression	2		1037879	1					
ANR	1037933	ReturnType	void		1037879	1					
ANR	1037934	Identifier	CronJob :: CleanAll		1037879	2					
ANR	1037935	ParameterList			1037879	3					
ANR	1037936	CFGEntryNode	ENTRY		1037879		True				
ANR	1037937	CFGExitNode	EXIT		1037879		True				
ANR	1037938	Symbol	& m_stdOut		1037879						
ANR	1037939	Symbol	& m_stdErr		1037879						
ANR	1037940	Symbol	m_childFds		1037879						
ANR	1037941	Function	CronJob :: CleanFile	773:0:17530:17634							
ANR	1037942	FunctionDef	CronJob :: CleanFile (FILE * * file)		1037941	0					
ANR	1037943	CompoundStatement		775:0:17570:17634	1037941	0					
ANR	1037944	IfStatement	if ( NULL != * file )		1037941	0					
ANR	1037945	Condition	NULL != * file	776:6:17578:17590	1037941	0	True				
ANR	1037946	EqualityExpression	NULL != * file		1037941	0		!=			
ANR	1037947	Identifier	NULL		1037941	0					
ANR	1037948	UnaryOperationExpression	* file		1037941	1					
ANR	1037949	UnaryOperator	*		1037941	0					
ANR	1037950	Identifier	file		1037941	1					
ANR	1037951	CompoundStatement		2:22:23:23	1037941	1					
ANR	1037952	ExpressionStatement	fclose ( * file )	777:2:17598:17613	1037941	0	True				
ANR	1037953	CallExpression	fclose ( * file )		1037941	0					
ANR	1037954	Callee	fclose		1037941	0					
ANR	1037955	Identifier	fclose		1037941	0					
ANR	1037956	ArgumentList	* file		1037941	1					
ANR	1037957	Argument	* file		1037941	0					
ANR	1037958	UnaryOperationExpression	* file		1037941	0					
ANR	1037959	UnaryOperator	*		1037941	0					
ANR	1037960	Identifier	file		1037941	1					
ANR	1037961	ExpressionStatement	* file = NULL	778:2:17617:17629	1037941	1	True				
ANR	1037962	AssignmentExpression	* file = NULL		1037941	0		=			
ANR	1037963	UnaryOperationExpression	* file		1037941	0					
ANR	1037964	UnaryOperator	*		1037941	0					
ANR	1037965	Identifier	file		1037941	1					
ANR	1037966	Identifier	NULL		1037941	1					
ANR	1037967	ReturnType	void		1037941	1					
ANR	1037968	Identifier	CronJob :: CleanFile		1037941	2					
ANR	1037969	ParameterList	FILE * * file		1037941	3					
ANR	1037970	Parameter	FILE * * file	774:21:17556:17566	1037941	0	True				
ANR	1037971	ParameterType	FILE * *		1037941	0					
ANR	1037972	Identifier	file		1037941	1					
ANR	1037973	CFGEntryNode	ENTRY		1037941		True				
ANR	1037974	CFGExitNode	EXIT		1037941		True				
ANR	1037975	Symbol	file		1037941						
ANR	1037976	Symbol	NULL		1037941						
ANR	1037977	Symbol	* file		1037941						
ANR	1037978	Function	CronJob :: CleanFd	783:0:17667:17770							
ANR	1037979	FunctionDef	CronJob :: CleanFd (int * fd)		1037978	0					
ANR	1037980	CompoundStatement		785:0:17701:17770	1037978	0					
ANR	1037981	IfStatement	if ( * fd >= 0 )		1037978	0					
ANR	1037982	Condition	* fd >= 0	786:6:17709:17716	1037978	0	True				
ANR	1037983	RelationalExpression	* fd >= 0		1037978	0		>=			
ANR	1037984	UnaryOperationExpression	* fd		1037978	0					
ANR	1037985	UnaryOperator	*		1037978	0					
ANR	1037986	Identifier	fd		1037978	1					
ANR	1037987	PrimaryExpression	0		1037978	1					
ANR	1037988	CompoundStatement		2:17:18:18	1037978	1					
ANR	1037989	ExpressionStatement	daemonCore -> Close_Pipe ( * fd )	787:2:17724:17753	1037978	0	True				
ANR	1037990	CallExpression	daemonCore -> Close_Pipe ( * fd )		1037978	0					
ANR	1037991	Callee	daemonCore -> Close_Pipe		1037978	0					
ANR	1037992	PtrMemberAccess	daemonCore -> Close_Pipe		1037978	0					
ANR	1037993	Identifier	daemonCore		1037978	0					
ANR	1037994	Identifier	Close_Pipe		1037978	1					
ANR	1037995	ArgumentList	* fd		1037978	1					
ANR	1037996	Argument	* fd		1037978	0					
ANR	1037997	UnaryOperationExpression	* fd		1037978	0					
ANR	1037998	UnaryOperator	*		1037978	0					
ANR	1037999	Identifier	fd		1037978	1					
ANR	1038000	ExpressionStatement	* fd = - 1	788:2:17757:17765	1037978	1	True				
ANR	1038001	AssignmentExpression	* fd = - 1		1037978	0		=			
ANR	1038002	UnaryOperationExpression	* fd		1037978	0					
ANR	1038003	UnaryOperator	*		1037978	0					
ANR	1038004	Identifier	fd		1037978	1					
ANR	1038005	UnaryOperationExpression	- 1		1037978	1					
ANR	1038006	UnaryOperator	-		1037978	0					
ANR	1038007	PrimaryExpression	1		1037978	1					
ANR	1038008	ReturnType	void		1037978	1					
ANR	1038009	Identifier	CronJob :: CleanFd		1037978	2					
ANR	1038010	ParameterList	int * fd		1037978	3					
ANR	1038011	Parameter	int * fd	784:19:17691:17697	1037978	0	True				
ANR	1038012	ParameterType	int *		1037978	0					
ANR	1038013	Identifier	fd		1037978	1					
ANR	1038014	CFGEntryNode	ENTRY		1037978		True				
ANR	1038015	CFGExitNode	EXIT		1037978		True				
ANR	1038016	Symbol	* fd		1037978						
ANR	1038017	Symbol	daemonCore		1037978						
ANR	1038018	Symbol	fd		1037978						
ANR	1038019	Function	CronJob :: KillJob	793:0:17787:19029							
ANR	1038020	FunctionDef	CronJob :: KillJob (bool force)		1038019	0					
ANR	1038021	CompoundStatement		795:0:17822:19029	1038019	0					
ANR	1038022	ExpressionStatement	m_in_shutdown = true	797:1:17845:17865	1038019	0	True				
ANR	1038023	AssignmentExpression	m_in_shutdown = true		1038019	0		=			
ANR	1038024	Identifier	m_in_shutdown		1038019	0					
ANR	1038025	Identifier	true		1038019	1					
ANR	1038026	IfStatement	if ( IsIdle ( ) || IsDead ( ) )		1038019	1					
ANR	1038027	Condition	IsIdle ( ) || IsDead ( )	800:6:17884:17903	1038019	0	True				
ANR	1038028	OrExpression	IsIdle ( ) || IsDead ( )		1038019	0		||			
ANR	1038029	CallExpression	IsIdle ( )		1038019	0					
ANR	1038030	Callee	IsIdle		1038019	0					
ANR	1038031	Identifier	IsIdle		1038019	0					
ANR	1038032	ArgumentList			1038019	1					
ANR	1038033	CallExpression	IsDead ( )		1038019	1					
ANR	1038034	Callee	IsDead		1038019	0					
ANR	1038035	Identifier	IsDead		1038019	0					
ANR	1038036	ArgumentList			1038019	1					
ANR	1038037	CompoundStatement		6:29:84:84	1038019	1					
ANR	1038038	ReturnStatement	return 0 ;	801:2:17911:17919	1038019	0	True				
ANR	1038039	PrimaryExpression	0		1038019	0					
ANR	1038040	IfStatement	if ( m_pid <= 0 )		1038019	2					
ANR	1038041	Condition	m_pid <= 0	805:6:17948:17957	1038019	0	True				
ANR	1038042	RelationalExpression	m_pid <= 0		1038019	0		<=			
ANR	1038043	Identifier	m_pid		1038019	0					
ANR	1038044	PrimaryExpression	0		1038019	1					
ANR	1038045	CompoundStatement		11:19:138:138	1038019	1					
ANR	1038046	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: '%s': Trying to kill illegal PID %d\\n"" , GetName ( ) , m_pid )"	806:2:17965:18057	1038019	0	True				
ANR	1038047	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: '%s': Trying to kill illegal PID %d\\n"" , GetName ( ) , m_pid )"		1038019	0					
ANR	1038048	Callee	dprintf		1038019	0					
ANR	1038049	Identifier	dprintf		1038019	0					
ANR	1038050	ArgumentList	D_ALWAYS		1038019	1					
ANR	1038051	Argument	D_ALWAYS		1038019	0					
ANR	1038052	Identifier	D_ALWAYS		1038019	0					
ANR	1038053	Argument	"""CronJob: '%s': Trying to kill illegal PID %d\\n"""		1038019	1					
ANR	1038054	PrimaryExpression	"""CronJob: '%s': Trying to kill illegal PID %d\\n"""		1038019	0					
ANR	1038055	Argument	GetName ( )		1038019	2					
ANR	1038056	CallExpression	GetName ( )		1038019	0					
ANR	1038057	Callee	GetName		1038019	0					
ANR	1038058	Identifier	GetName		1038019	0					
ANR	1038059	ArgumentList			1038019	1					
ANR	1038060	Argument	m_pid		1038019	3					
ANR	1038061	Identifier	m_pid		1038019	0					
ANR	1038062	ReturnStatement	return - 1 ;	808:2:18061:18070	1038019	1	True				
ANR	1038063	UnaryOperationExpression	- 1		1038019	0					
ANR	1038064	UnaryOperator	-		1038019	0					
ANR	1038065	PrimaryExpression	1		1038019	1					
ANR	1038066	IfStatement	if ( IsReady ( ) )		1038019	3					
ANR	1038067	Condition	IsReady ( )	812:6:18111:18119	1038019	0	True				
ANR	1038068	CallExpression	IsReady ( )		1038019	0					
ANR	1038069	Callee	IsReady		1038019	0					
ANR	1038070	Identifier	IsReady		1038019	0					
ANR	1038071	ArgumentList			1038019	1					
ANR	1038072	CompoundStatement		18:18:300:300	1038019	1					
ANR	1038073	ExpressionStatement	SetState ( CRON_IDLE )	813:2:18127:18148	1038019	0	True				
ANR	1038074	CallExpression	SetState ( CRON_IDLE )		1038019	0					
ANR	1038075	Callee	SetState		1038019	0					
ANR	1038076	Identifier	SetState		1038019	0					
ANR	1038077	ArgumentList	CRON_IDLE		1038019	1					
ANR	1038078	Argument	CRON_IDLE		1038019	0					
ANR	1038079	Identifier	CRON_IDLE		1038019	0					
ANR	1038080	ReturnStatement	return 0 ;	814:2:18152:18160	1038019	1	True				
ANR	1038081	PrimaryExpression	0		1038019	0					
ANR	1038082	ElseStatement	else		1038019	0					
ANR	1038083	IfStatement	if ( ( force ) || IsTermSent ( ) )		1038019	0					
ANR	1038084	Condition	( force ) || IsTermSent ( )	816:11:18176:18200	1038019	0	True				
ANR	1038085	OrExpression	( force ) || IsTermSent ( )		1038019	0		||			
ANR	1038086	Identifier	force		1038019	0					
ANR	1038087	CallExpression	IsTermSent ( )		1038019	1					
ANR	1038088	Callee	IsTermSent		1038019	0					
ANR	1038089	Identifier	IsTermSent		1038019	0					
ANR	1038090	ArgumentList			1038019	1					
ANR	1038091	CompoundStatement		22:39:381:381	1038019	1					
ANR	1038092	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"" , GetName ( ) , m_pid )"	817:2:18208:18313	1038019	0	True				
ANR	1038093	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"" , GetName ( ) , m_pid )"		1038019	0					
ANR	1038094	Callee	dprintf		1038019	0					
ANR	1038095	Identifier	dprintf		1038019	0					
ANR	1038096	ArgumentList	D_FULLDEBUG		1038019	1					
ANR	1038097	Argument	D_FULLDEBUG		1038019	0					
ANR	1038098	Identifier	D_FULLDEBUG		1038019	0					
ANR	1038099	Argument	"""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"""		1038019	1					
ANR	1038100	PrimaryExpression	"""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"""		1038019	0					
ANR	1038101	Argument	GetName ( )		1038019	2					
ANR	1038102	CallExpression	GetName ( )		1038019	0					
ANR	1038103	Callee	GetName		1038019	0					
ANR	1038104	Identifier	GetName		1038019	0					
ANR	1038105	ArgumentList			1038019	1					
ANR	1038106	Argument	m_pid		1038019	3					
ANR	1038107	Identifier	m_pid		1038019	0					
ANR	1038108	IfStatement	"if ( daemonCore -> Send_Signal ( m_pid , SIGKILL ) == 0 )"		1038019	1					
ANR	1038109	Condition	"daemonCore -> Send_Signal ( m_pid , SIGKILL ) == 0"	820:7:18322:18367	1038019	0	True				
ANR	1038110	EqualityExpression	"daemonCore -> Send_Signal ( m_pid , SIGKILL ) == 0"		1038019	0		==			
ANR	1038111	CallExpression	"daemonCore -> Send_Signal ( m_pid , SIGKILL )"		1038019	0					
ANR	1038112	Callee	daemonCore -> Send_Signal		1038019	0					
ANR	1038113	PtrMemberAccess	daemonCore -> Send_Signal		1038019	0					
ANR	1038114	Identifier	daemonCore		1038019	0					
ANR	1038115	Identifier	Send_Signal		1038019	1					
ANR	1038116	ArgumentList	m_pid		1038019	1					
ANR	1038117	Argument	m_pid		1038019	0					
ANR	1038118	Identifier	m_pid		1038019	0					
ANR	1038119	Argument	SIGKILL		1038019	1					
ANR	1038120	Identifier	SIGKILL		1038019	0					
ANR	1038121	PrimaryExpression	0		1038019	1					
ANR	1038122	CompoundStatement		26:56:548:548	1038019	1					
ANR	1038123	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGKILL to %d\\n"" , GetName ( ) , m_pid )"	821:3:18376:18478	1038019	0	True				
ANR	1038124	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGKILL to %d\\n"" , GetName ( ) , m_pid )"		1038019	0					
ANR	1038125	Callee	dprintf		1038019	0					
ANR	1038126	Identifier	dprintf		1038019	0					
ANR	1038127	ArgumentList	D_ALWAYS		1038019	1					
ANR	1038128	Argument	D_ALWAYS		1038019	0					
ANR	1038129	Identifier	D_ALWAYS		1038019	0					
ANR	1038130	Argument	"""CronJob: job '%s': Failed to send SIGKILL to %d\\n"""		1038019	1					
ANR	1038131	PrimaryExpression	"""CronJob: job '%s': Failed to send SIGKILL to %d\\n"""		1038019	0					
ANR	1038132	Argument	GetName ( )		1038019	2					
ANR	1038133	CallExpression	GetName ( )		1038019	0					
ANR	1038134	Callee	GetName		1038019	0					
ANR	1038135	Identifier	GetName		1038019	0					
ANR	1038136	ArgumentList			1038019	1					
ANR	1038137	Argument	m_pid		1038019	3					
ANR	1038138	Identifier	m_pid		1038019	0					
ANR	1038139	ExpressionStatement	SetState ( CRON_KILL_SENT )	825:2:18486:18512	1038019	2	True				
ANR	1038140	CallExpression	SetState ( CRON_KILL_SENT )		1038019	0					
ANR	1038141	Callee	SetState		1038019	0					
ANR	1038142	Identifier	SetState		1038019	0					
ANR	1038143	ArgumentList	CRON_KILL_SENT		1038019	1					
ANR	1038144	Argument	CRON_KILL_SENT		1038019	0					
ANR	1038145	Identifier	CRON_KILL_SENT		1038019	0					
ANR	1038146	ExpressionStatement	KillTimer ( TIMER_NEVER )	826:2:18516:18540	1038019	3	True				
ANR	1038147	CallExpression	KillTimer ( TIMER_NEVER )		1038019	0					
ANR	1038148	Callee	KillTimer		1038019	0					
ANR	1038149	Identifier	KillTimer		1038019	0					
ANR	1038150	ArgumentList	TIMER_NEVER		1038019	1					
ANR	1038151	Argument	TIMER_NEVER		1038019	0					
ANR	1038152	Identifier	TIMER_NEVER		1038019	0					
ANR	1038153	ReturnStatement	return 0 ;	827:2:18564:18572	1038019	4	True				
ANR	1038154	PrimaryExpression	0		1038019	0					
ANR	1038155	ElseStatement	else		1038019	0					
ANR	1038156	IfStatement	if ( IsRunning ( ) )		1038019	0					
ANR	1038157	Condition	IsRunning ( )	829:11:18588:18598	1038019	0	True				
ANR	1038158	CallExpression	IsRunning ( )		1038019	0					
ANR	1038159	Callee	IsRunning		1038019	0					
ANR	1038160	Identifier	IsRunning		1038019	0					
ANR	1038161	ArgumentList			1038019	1					
ANR	1038162	CompoundStatement		35:25:779:779	1038019	1					
ANR	1038163	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"" , GetName ( ) , m_pid )"	830:2:18606:18710	1038019	0	True				
ANR	1038164	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"" , GetName ( ) , m_pid )"		1038019	0					
ANR	1038165	Callee	dprintf		1038019	0					
ANR	1038166	Identifier	dprintf		1038019	0					
ANR	1038167	ArgumentList	D_FULLDEBUG		1038019	1					
ANR	1038168	Argument	D_FULLDEBUG		1038019	0					
ANR	1038169	Identifier	D_FULLDEBUG		1038019	0					
ANR	1038170	Argument	"""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"""		1038019	1					
ANR	1038171	PrimaryExpression	"""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"""		1038019	0					
ANR	1038172	Argument	GetName ( )		1038019	2					
ANR	1038173	CallExpression	GetName ( )		1038019	0					
ANR	1038174	Callee	GetName		1038019	0					
ANR	1038175	Identifier	GetName		1038019	0					
ANR	1038176	ArgumentList			1038019	1					
ANR	1038177	Argument	m_pid		1038019	3					
ANR	1038178	Identifier	m_pid		1038019	0					
ANR	1038179	IfStatement	"if ( daemonCore -> Send_Signal ( m_pid , SIGTERM ) == 0 )"		1038019	1					
ANR	1038180	Condition	"daemonCore -> Send_Signal ( m_pid , SIGTERM ) == 0"	833:7:18719:18764	1038019	0	True				
ANR	1038181	EqualityExpression	"daemonCore -> Send_Signal ( m_pid , SIGTERM ) == 0"		1038019	0		==			
ANR	1038182	CallExpression	"daemonCore -> Send_Signal ( m_pid , SIGTERM )"		1038019	0					
ANR	1038183	Callee	daemonCore -> Send_Signal		1038019	0					
ANR	1038184	PtrMemberAccess	daemonCore -> Send_Signal		1038019	0					
ANR	1038185	Identifier	daemonCore		1038019	0					
ANR	1038186	Identifier	Send_Signal		1038019	1					
ANR	1038187	ArgumentList	m_pid		1038019	1					
ANR	1038188	Argument	m_pid		1038019	0					
ANR	1038189	Identifier	m_pid		1038019	0					
ANR	1038190	Argument	SIGTERM		1038019	1					
ANR	1038191	Identifier	SIGTERM		1038019	0					
ANR	1038192	PrimaryExpression	0		1038019	1					
ANR	1038193	CompoundStatement		39:56:945:945	1038019	1					
ANR	1038194	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGTERM to %d\\n"" , GetName ( ) , m_pid )"	834:3:18773:18875	1038019	0	True				
ANR	1038195	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGTERM to %d\\n"" , GetName ( ) , m_pid )"		1038019	0					
ANR	1038196	Callee	dprintf		1038019	0					
ANR	1038197	Identifier	dprintf		1038019	0					
ANR	1038198	ArgumentList	D_ALWAYS		1038019	1					
ANR	1038199	Argument	D_ALWAYS		1038019	0					
ANR	1038200	Identifier	D_ALWAYS		1038019	0					
ANR	1038201	Argument	"""CronJob: job '%s': Failed to send SIGTERM to %d\\n"""		1038019	1					
ANR	1038202	PrimaryExpression	"""CronJob: job '%s': Failed to send SIGTERM to %d\\n"""		1038019	0					
ANR	1038203	Argument	GetName ( )		1038019	2					
ANR	1038204	CallExpression	GetName ( )		1038019	0					
ANR	1038205	Callee	GetName		1038019	0					
ANR	1038206	Identifier	GetName		1038019	0					
ANR	1038207	ArgumentList			1038019	1					
ANR	1038208	Argument	m_pid		1038019	3					
ANR	1038209	Identifier	m_pid		1038019	0					
ANR	1038210	ExpressionStatement	SetState ( CRON_TERM_SENT )	838:2:18883:18909	1038019	2	True				
ANR	1038211	CallExpression	SetState ( CRON_TERM_SENT )		1038019	0					
ANR	1038212	Callee	SetState		1038019	0					
ANR	1038213	Identifier	SetState		1038019	0					
ANR	1038214	ArgumentList	CRON_TERM_SENT		1038019	1					
ANR	1038215	Argument	CRON_TERM_SENT		1038019	0					
ANR	1038216	Identifier	CRON_TERM_SENT		1038019	0					
ANR	1038217	ExpressionStatement	KillTimer ( 1 )	839:2:18913:18927	1038019	3	True				
ANR	1038218	CallExpression	KillTimer ( 1 )		1038019	0					
ANR	1038219	Callee	KillTimer		1038019	0					
ANR	1038220	Identifier	KillTimer		1038019	0					
ANR	1038221	ArgumentList	1		1038019	1					
ANR	1038222	Argument	1		1038019	0					
ANR	1038223	PrimaryExpression	1		1038019	0					
ANR	1038224	ReturnStatement	return 1 ;	840:2:18965:18973	1038019	4	True				
ANR	1038225	PrimaryExpression	1		1038019	0					
ANR	1038226	ElseStatement	else		1038019	0					
ANR	1038227	CompoundStatement		48:6:1161:1161	1038019	0					
ANR	1038228	ReturnStatement	return - 1 ;	843:2:18988:18997	1038019	0	True				
ANR	1038229	UnaryOperationExpression	- 1		1038019	0					
ANR	1038230	UnaryOperator	-		1038019	0					
ANR	1038231	PrimaryExpression	1		1038019	1					
ANR	1038232	ReturnType	int		1038019	1					
ANR	1038233	Identifier	CronJob :: KillJob		1038019	2					
ANR	1038234	ParameterList	bool force		1038019	3					
ANR	1038235	Parameter	bool force	794:18:17809:17818	1038019	0	True				
ANR	1038236	ParameterType	bool		1038019	0					
ANR	1038237	Identifier	force		1038019	1					
ANR	1038238	CFGEntryNode	ENTRY		1038019		True				
ANR	1038239	CFGExitNode	EXIT		1038019		True				
ANR	1038240	Symbol	m_in_shutdown		1038019						
ANR	1038241	Symbol	IsRunning		1038019						
ANR	1038242	Symbol	IsDead		1038019						
ANR	1038243	Symbol	D_ALWAYS		1038019						
ANR	1038244	Symbol	CRON_IDLE		1038019						
ANR	1038245	Symbol	D_FULLDEBUG		1038019						
ANR	1038246	Symbol	CRON_TERM_SENT		1038019						
ANR	1038247	Symbol	SIGKILL		1038019						
ANR	1038248	Symbol	IsReady		1038019						
ANR	1038249	Symbol	daemonCore -> Send_Signal		1038019						
ANR	1038250	Symbol	m_pid		1038019						
ANR	1038251	Symbol	* daemonCore		1038019						
ANR	1038252	Symbol	IsIdle		1038019						
ANR	1038253	Symbol	daemonCore		1038019						
ANR	1038254	Symbol	true		1038019						
ANR	1038255	Symbol	IsTermSent		1038019						
ANR	1038256	Symbol	force		1038019						
ANR	1038257	Symbol	GetName		1038019						
ANR	1038258	Symbol	CRON_KILL_SENT		1038019						
ANR	1038259	Symbol	TIMER_NEVER		1038019						
ANR	1038260	Symbol	SIGTERM		1038019						
ANR	1038261	Function	CronJob :: CancelRunTimer	848:0:19056:19187							
ANR	1038262	FunctionDef	CronJob :: CancelRunTimer ()		1038261	0					
ANR	1038263	CompoundStatement		850:0:19093:19187	1038261	0					
ANR	1038264	IfStatement	if ( m_run_timer >= 0 )		1038261	0					
ANR	1038265	Condition	m_run_timer >= 0	851:6:19101:19116	1038261	0	True				
ANR	1038266	RelationalExpression	m_run_timer >= 0		1038261	0		>=			
ANR	1038267	Identifier	m_run_timer		1038261	0					
ANR	1038268	PrimaryExpression	0		1038261	1					
ANR	1038269	CompoundStatement		2:25:26:26	1038261	1					
ANR	1038270	ExpressionStatement	daemonCore -> Cancel_Timer ( m_run_timer )	852:2:19124:19163	1038261	0	True				
ANR	1038271	CallExpression	daemonCore -> Cancel_Timer ( m_run_timer )		1038261	0					
ANR	1038272	Callee	daemonCore -> Cancel_Timer		1038261	0					
ANR	1038273	PtrMemberAccess	daemonCore -> Cancel_Timer		1038261	0					
ANR	1038274	Identifier	daemonCore		1038261	0					
ANR	1038275	Identifier	Cancel_Timer		1038261	1					
ANR	1038276	ArgumentList	m_run_timer		1038261	1					
ANR	1038277	Argument	m_run_timer		1038261	0					
ANR	1038278	Identifier	m_run_timer		1038261	0					
ANR	1038279	ExpressionStatement	m_run_timer = - 1	854:1:19169:19185	1038261	1	True				
ANR	1038280	AssignmentExpression	m_run_timer = - 1		1038261	0		=			
ANR	1038281	Identifier	m_run_timer		1038261	0					
ANR	1038282	UnaryOperationExpression	- 1		1038261	1					
ANR	1038283	UnaryOperator	-		1038261	0					
ANR	1038284	PrimaryExpression	1		1038261	1					
ANR	1038285	ReturnType	void		1038261	1					
ANR	1038286	Identifier	CronJob :: CancelRunTimer		1038261	2					
ANR	1038287	ParameterList			1038261	3					
ANR	1038288	CFGEntryNode	ENTRY		1038261		True				
ANR	1038289	CFGExitNode	EXIT		1038261		True				
ANR	1038290	Symbol	daemonCore		1038261						
ANR	1038291	Symbol	m_run_timer		1038261						
ANR	1038292	Function	CronJob :: SetTimer	858:0:19211:20513							
ANR	1038293	FunctionDef	"CronJob :: SetTimer (unsigned first , unsigned period_arg)"		1038292	0					
ANR	1038294	CompoundStatement		860:0:19272:20513	1038292	0					
ANR	1038295	ExpressionStatement	ASSERT ( IsPeriodic ( ) || IsWaitForExit ( ) )	861:1:19275:19316	1038292	0	True				
ANR	1038296	CallExpression	ASSERT ( IsPeriodic ( ) || IsWaitForExit ( ) )		1038292	0					
ANR	1038297	Callee	ASSERT		1038292	0					
ANR	1038298	Identifier	ASSERT		1038292	0					
ANR	1038299	ArgumentList	IsPeriodic ( ) || IsWaitForExit ( )		1038292	1					
ANR	1038300	Argument	IsPeriodic ( ) || IsWaitForExit ( )		1038292	0					
ANR	1038301	OrExpression	IsPeriodic ( ) || IsWaitForExit ( )		1038292	0		||			
ANR	1038302	CallExpression	IsPeriodic ( )		1038292	0					
ANR	1038303	Callee	IsPeriodic		1038292	0					
ANR	1038304	Identifier	IsPeriodic		1038292	0					
ANR	1038305	ArgumentList			1038292	1					
ANR	1038306	CallExpression	IsWaitForExit ( )		1038292	1					
ANR	1038307	Callee	IsWaitForExit		1038292	0					
ANR	1038308	Identifier	IsWaitForExit		1038292	0					
ANR	1038309	ArgumentList			1038292	1					
ANR	1038310	IfStatement	if ( m_run_timer >= 0 )		1038292	1					
ANR	1038311	Condition	m_run_timer >= 0	864:6:19345:19360	1038292	0	True				
ANR	1038312	RelationalExpression	m_run_timer >= 0		1038292	0		>=			
ANR	1038313	Identifier	m_run_timer		1038292	0					
ANR	1038314	PrimaryExpression	0		1038292	1					
ANR	1038315	CompoundStatement		6:1:92:92	1038292	1					
ANR	1038316	ExpressionStatement	"daemonCore -> Reset_Timer ( m_run_timer , first , period_arg )"	866:2:19369:19426	1038292	0	True				
ANR	1038317	CallExpression	"daemonCore -> Reset_Timer ( m_run_timer , first , period_arg )"		1038292	0					
ANR	1038318	Callee	daemonCore -> Reset_Timer		1038292	0					
ANR	1038319	PtrMemberAccess	daemonCore -> Reset_Timer		1038292	0					
ANR	1038320	Identifier	daemonCore		1038292	0					
ANR	1038321	Identifier	Reset_Timer		1038292	1					
ANR	1038322	ArgumentList	m_run_timer		1038292	1					
ANR	1038323	Argument	m_run_timer		1038292	0					
ANR	1038324	Identifier	m_run_timer		1038292	0					
ANR	1038325	Argument	first		1038292	1					
ANR	1038326	Identifier	first		1038292	0					
ANR	1038327	Argument	period_arg		1038292	2					
ANR	1038328	Identifier	period_arg		1038292	0					
ANR	1038329	IfStatement	if ( period_arg == TIMER_NEVER )		1038292	1					
ANR	1038330	Condition	period_arg == TIMER_NEVER	867:6:19434:19458	1038292	0	True				
ANR	1038331	EqualityExpression	period_arg == TIMER_NEVER		1038292	0		==			
ANR	1038332	Identifier	period_arg		1038292	0					
ANR	1038333	Identifier	TIMER_NEVER		1038292	1					
ANR	1038334	CompoundStatement		8:34:189:189	1038292	1					
ANR	1038335	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=NEVER\\n"" , m_run_timer , first )"	868:3:19467:19576	1038292	0	True				
ANR	1038336	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=NEVER\\n"" , m_run_timer , first )"		1038292	0					
ANR	1038337	Callee	dprintf		1038292	0					
ANR	1038338	Identifier	dprintf		1038292	0					
ANR	1038339	ArgumentList	D_FULLDEBUG		1038292	1					
ANR	1038340	Argument	D_FULLDEBUG		1038292	0					
ANR	1038341	Identifier	D_FULLDEBUG		1038292	0					
ANR	1038342	Argument	"""CronJob: timer ID %d reset first=%u, period=NEVER\\n"""		1038292	1					
ANR	1038343	PrimaryExpression	"""CronJob: timer ID %d reset first=%u, period=NEVER\\n"""		1038292	0					
ANR	1038344	Argument	m_run_timer		1038292	2					
ANR	1038345	Identifier	m_run_timer		1038292	0					
ANR	1038346	Argument	first		1038292	3					
ANR	1038347	Identifier	first		1038292	0					
ANR	1038348	ElseStatement	else		1038292	0					
ANR	1038349	CompoundStatement		12:9:314:314	1038292	0					
ANR	1038350	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=%u\\n"" , m_run_timer , first , Period ( ) )"	872:3:19592:19708	1038292	0	True				
ANR	1038351	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=%u\\n"" , m_run_timer , first , Period ( ) )"		1038292	0					
ANR	1038352	Callee	dprintf		1038292	0					
ANR	1038353	Identifier	dprintf		1038292	0					
ANR	1038354	ArgumentList	D_FULLDEBUG		1038292	1					
ANR	1038355	Argument	D_FULLDEBUG		1038292	0					
ANR	1038356	Identifier	D_FULLDEBUG		1038292	0					
ANR	1038357	Argument	"""CronJob: timer ID %d reset first=%u, period=%u\\n"""		1038292	1					
ANR	1038358	PrimaryExpression	"""CronJob: timer ID %d reset first=%u, period=%u\\n"""		1038292	0					
ANR	1038359	Argument	m_run_timer		1038292	2					
ANR	1038360	Identifier	m_run_timer		1038292	0					
ANR	1038361	Argument	first		1038292	3					
ANR	1038362	Identifier	first		1038292	0					
ANR	1038363	Argument	Period ( )		1038292	4					
ANR	1038364	CallExpression	Period ( )		1038292	0					
ANR	1038365	Callee	Period		1038292	0					
ANR	1038366	Identifier	Period		1038292	0					
ANR	1038367	ArgumentList			1038292	1					
ANR	1038368	ElseStatement	else		1038292	0					
ANR	1038369	CompoundStatement		25:2:580:722	1038292	0					
ANR	1038370	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Creating timer for job '%s'\\n"" , GetName ( ) )"	882:2:19768:19849	1038292	0	True				
ANR	1038371	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Creating timer for job '%s'\\n"" , GetName ( ) )"		1038292	0					
ANR	1038372	Callee	dprintf		1038292	0					
ANR	1038373	Identifier	dprintf		1038292	0					
ANR	1038374	ArgumentList	D_FULLDEBUG		1038292	1					
ANR	1038375	Argument	D_FULLDEBUG		1038292	0					
ANR	1038376	Identifier	D_FULLDEBUG		1038292	0					
ANR	1038377	Argument	"""CronJob: Creating timer for job '%s'\\n"""		1038292	1					
ANR	1038378	PrimaryExpression	"""CronJob: Creating timer for job '%s'\\n"""		1038292	0					
ANR	1038379	Argument	GetName ( )		1038292	2					
ANR	1038380	CallExpression	GetName ( )		1038292	0					
ANR	1038381	Callee	GetName		1038292	0					
ANR	1038382	Identifier	GetName		1038292	0					
ANR	1038383	ArgumentList			1038292	1					
ANR	1038384	IdentifierDeclStatement	TimerHandlercpp handler = ( ( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob ) ;	884:2:19853:19995	1038292	1	True				
ANR	1038385	IdentifierDecl	handler = ( ( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob )		1038292	0					
ANR	1038386	IdentifierDeclType	TimerHandlercpp		1038292	0					
ANR	1038387	Identifier	handler		1038292	1					
ANR	1038388	AssignmentExpression	handler = ( ( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob )		1038292	2		=			
ANR	1038389	Identifier	handler		1038292	0					
ANR	1038390	ConditionalExpression	( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob		1038292	1					
ANR	1038391	Condition	IsWaitForExit ( )		1038292	0					
ANR	1038392	CallExpression	IsWaitForExit ( )		1038292	0					
ANR	1038393	Callee	IsWaitForExit		1038292	0					
ANR	1038394	Identifier	IsWaitForExit		1038292	0					
ANR	1038395	ArgumentList			1038292	1					
ANR	1038396	CastExpression	( TimerHandlercpp ) & CronJob :: StartJob		1038292	1					
ANR	1038397	CastTarget	TimerHandlercpp		1038292	0					
ANR	1038398	UnaryOperationExpression	& CronJob :: StartJob		1038292	1					
ANR	1038399	UnaryOperator	&		1038292	0					
ANR	1038400	Identifier	CronJob :: StartJob		1038292	1					
ANR	1038401	CastExpression	( TimerHandlercpp ) & CronJob :: RunJob		1038292	2					
ANR	1038402	CastTarget	TimerHandlercpp		1038292	0					
ANR	1038403	UnaryOperationExpression	& CronJob :: RunJob		1038292	1					
ANR	1038404	UnaryOperator	&		1038292	0					
ANR	1038405	Identifier	CronJob :: RunJob		1038292	1					
ANR	1038406	ExpressionStatement	"m_run_timer = daemonCore -> Register_Timer ( first , period_arg , handler , ""RunJob"" , this )"	888:2:19999:20100	1038292	2	True				
ANR	1038407	AssignmentExpression	"m_run_timer = daemonCore -> Register_Timer ( first , period_arg , handler , ""RunJob"" , this )"		1038292	0		=			
ANR	1038408	Identifier	m_run_timer		1038292	0					
ANR	1038409	CallExpression	"daemonCore -> Register_Timer ( first , period_arg , handler , ""RunJob"" , this )"		1038292	1					
ANR	1038410	Callee	daemonCore -> Register_Timer		1038292	0					
ANR	1038411	PtrMemberAccess	daemonCore -> Register_Timer		1038292	0					
ANR	1038412	Identifier	daemonCore		1038292	0					
ANR	1038413	Identifier	Register_Timer		1038292	1					
ANR	1038414	ArgumentList	first		1038292	1					
ANR	1038415	Argument	first		1038292	0					
ANR	1038416	Identifier	first		1038292	0					
ANR	1038417	Argument	period_arg		1038292	1					
ANR	1038418	Identifier	period_arg		1038292	0					
ANR	1038419	Argument	handler		1038292	2					
ANR	1038420	Identifier	handler		1038292	0					
ANR	1038421	Argument	"""RunJob"""		1038292	3					
ANR	1038422	PrimaryExpression	"""RunJob"""		1038292	0					
ANR	1038423	Argument	this		1038292	4					
ANR	1038424	Identifier	this		1038292	0					
ANR	1038425	IfStatement	if ( m_run_timer < 0 )		1038292	3					
ANR	1038426	Condition	m_run_timer < 0	894:7:20109:20123	1038292	0	True				
ANR	1038427	RelationalExpression	m_run_timer < 0		1038292	0		<			
ANR	1038428	Identifier	m_run_timer		1038292	0					
ANR	1038429	PrimaryExpression	0		1038292	1					
ANR	1038430	CompoundStatement		35:25:854:854	1038292	1					
ANR	1038431	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Failed to create timer\\n"" )"	895:3:20132:20188	1038292	0	True				
ANR	1038432	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Failed to create timer\\n"" )"		1038292	0					
ANR	1038433	Callee	dprintf		1038292	0					
ANR	1038434	Identifier	dprintf		1038292	0					
ANR	1038435	ArgumentList	D_ALWAYS		1038292	1					
ANR	1038436	Argument	D_ALWAYS		1038292	0					
ANR	1038437	Identifier	D_ALWAYS		1038292	0					
ANR	1038438	Argument	"""CronJob: Failed to create timer\\n"""		1038292	1					
ANR	1038439	PrimaryExpression	"""CronJob: Failed to create timer\\n"""		1038292	0					
ANR	1038440	ReturnStatement	return - 1 ;	896:3:20193:20202	1038292	1	True				
ANR	1038441	UnaryOperationExpression	- 1		1038292	0					
ANR	1038442	UnaryOperator	-		1038292	0					
ANR	1038443	PrimaryExpression	1		1038292	1					
ANR	1038444	IfStatement	if ( period_arg == TIMER_NEVER )		1038292	4					
ANR	1038445	Condition	period_arg == TIMER_NEVER	898:6:20214:20238	1038292	0	True				
ANR	1038446	EqualityExpression	period_arg == TIMER_NEVER		1038292	0		==			
ANR	1038447	Identifier	period_arg		1038292	0					
ANR	1038448	Identifier	TIMER_NEVER		1038292	1					
ANR	1038449	CompoundStatement		39:34:969:969	1038292	1					
ANR	1038450	Statement	dprintf	899:3:20247:20253	1038292	0	True				
ANR	1038451	Statement	(	899:10:20254:20254	1038292	1	True				
ANR	1038452	Statement	D_FULLDEBUG	899:12:20256:20266	1038292	2	True				
ANR	1038453	Statement	","	899:23:20267:20267	1038292	3	True				
ANR	1038454	Statement	"""CronJob: new timer ID %d set first=%u, """	899:25:20269:20309	1038292	4	True				
ANR	1038455	Statement	"""period: NEVER\\n"""	900:6:20317:20333	1038292	5	True				
ANR	1038456	Statement	","	900:23:20334:20334	1038292	6	True				
ANR	1038457	Statement	m_run_timer	900:25:20336:20346	1038292	7	True				
ANR	1038458	Statement	","	900:36:20347:20347	1038292	8	True				
ANR	1038459	Statement	first	900:38:20349:20353	1038292	9	True				
ANR	1038460	Statement	)	900:44:20355:20355	1038292	10	True				
ANR	1038461	ExpressionStatement		900:45:20356:20356	1038292	11	True				
ANR	1038462	ElseStatement	else		1038292	0					
ANR	1038463	CompoundStatement		42:9:1094:1094	1038292	0					
ANR	1038464	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: new timer ID %d set first=%u, period: %u\\n"" , m_run_timer , first , Period ( ) )"	902:3:20372:20491	1038292	0	True				
ANR	1038465	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: new timer ID %d set first=%u, period: %u\\n"" , m_run_timer , first , Period ( ) )"		1038292	0					
ANR	1038466	Callee	dprintf		1038292	0					
ANR	1038467	Identifier	dprintf		1038292	0					
ANR	1038468	ArgumentList	D_FULLDEBUG		1038292	1					
ANR	1038469	Argument	D_FULLDEBUG		1038292	0					
ANR	1038470	Identifier	D_FULLDEBUG		1038292	0					
ANR	1038471	Argument	"""CronJob: new timer ID %d set first=%u, period: %u\\n"""		1038292	1					
ANR	1038472	PrimaryExpression	"""CronJob: new timer ID %d set first=%u, period: %u\\n"""		1038292	0					
ANR	1038473	Argument	m_run_timer		1038292	2					
ANR	1038474	Identifier	m_run_timer		1038292	0					
ANR	1038475	Argument	first		1038292	3					
ANR	1038476	Identifier	first		1038292	0					
ANR	1038477	Argument	Period ( )		1038292	4					
ANR	1038478	CallExpression	Period ( )		1038292	0					
ANR	1038479	Callee	Period		1038292	0					
ANR	1038480	Identifier	Period		1038292	0					
ANR	1038481	ArgumentList			1038292	1					
ANR	1038482	ReturnStatement	return 0 ;	908:1:20503:20511	1038292	2	True				
ANR	1038483	PrimaryExpression	0		1038292	0					
ANR	1038484	ReturnType	int		1038292	1					
ANR	1038485	Identifier	CronJob :: SetTimer		1038292	2					
ANR	1038486	ParameterList	"unsigned first , unsigned period_arg"		1038292	3					
ANR	1038487	Parameter	unsigned first	859:19:19234:19247	1038292	0	True				
ANR	1038488	ParameterType	unsigned		1038292	0					
ANR	1038489	Identifier	first		1038292	1					
ANR	1038490	Parameter	unsigned period_arg	859:35:19250:19268	1038292	1	True				
ANR	1038491	ParameterType	unsigned		1038292	0					
ANR	1038492	Identifier	period_arg		1038292	1					
ANR	1038493	CFGEntryNode	ENTRY		1038292		True				
ANR	1038494	CFGExitNode	EXIT		1038292		True				
ANR	1038495	Symbol	handler		1038292						
ANR	1038496	Symbol	IsPeriodic		1038292						
ANR	1038497	Symbol	this		1038292						
ANR	1038498	Symbol	D_ALWAYS		1038292						
ANR	1038499	Symbol	Period		1038292						
ANR	1038500	Symbol	D_FULLDEBUG		1038292						
ANR	1038501	Symbol	& CronJob :: StartJob		1038292						
ANR	1038502	Symbol	period_arg		1038292						
ANR	1038503	Symbol	* daemonCore		1038292						
ANR	1038504	Symbol	daemonCore		1038292						
ANR	1038505	Symbol	daemonCore -> Register_Timer		1038292						
ANR	1038506	Symbol	& CronJob :: RunJob		1038292						
ANR	1038507	Symbol	GetName		1038292						
ANR	1038508	Symbol	TIMER_NEVER		1038292						
ANR	1038509	Symbol	first		1038292						
ANR	1038510	Symbol	IsWaitForExit		1038292						
ANR	1038511	Symbol	m_run_timer		1038292						
ANR	1038512	Function	CronJob :: KillTimer	912:0:20540:21545							
ANR	1038513	FunctionDef	CronJob :: KillTimer (unsigned seconds)		1038512	0					
ANR	1038514	CompoundStatement		914:0:20583:21545	1038512	0					
ANR	1038515	IfStatement	if ( TIMER_NEVER == seconds )		1038512	0					
ANR	1038516	Condition	TIMER_NEVER == seconds	916:6:20611:20632	1038512	0	True				
ANR	1038517	EqualityExpression	TIMER_NEVER == seconds		1038512	0		==			
ANR	1038518	Identifier	TIMER_NEVER		1038512	0					
ANR	1038519	Identifier	seconds		1038512	1					
ANR	1038520	CompoundStatement		3:31:52:52	1038512	1					
ANR	1038521	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Canceling kill timer for '%s'\\n"" , GetName ( ) )"	917:2:20640:20722	1038512	0	True				
ANR	1038522	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Canceling kill timer for '%s'\\n"" , GetName ( ) )"		1038512	0					
ANR	1038523	Callee	dprintf		1038512	0					
ANR	1038524	Identifier	dprintf		1038512	0					
ANR	1038525	ArgumentList	D_FULLDEBUG		1038512	1					
ANR	1038526	Argument	D_FULLDEBUG		1038512	0					
ANR	1038527	Identifier	D_FULLDEBUG		1038512	0					
ANR	1038528	Argument	"""CronJob: Canceling kill timer for '%s'\\n"""		1038512	1					
ANR	1038529	PrimaryExpression	"""CronJob: Canceling kill timer for '%s'\\n"""		1038512	0					
ANR	1038530	Argument	GetName ( )		1038512	2					
ANR	1038531	CallExpression	GetName ( )		1038512	0					
ANR	1038532	Callee	GetName		1038512	0					
ANR	1038533	Identifier	GetName		1038512	0					
ANR	1038534	ArgumentList			1038512	1					
ANR	1038535	IfStatement	if ( m_killTimer >= 0 )		1038512	1					
ANR	1038536	Condition	m_killTimer >= 0	919:7:20731:20746	1038512	0	True				
ANR	1038537	RelationalExpression	m_killTimer >= 0		1038512	0		>=			
ANR	1038538	Identifier	m_killTimer		1038512	0					
ANR	1038539	PrimaryExpression	0		1038512	1					
ANR	1038540	CompoundStatement		6:26:166:166	1038512	1					
ANR	1038541	ReturnStatement	"return daemonCore -> Reset_Timer ( m_killTimer , TIMER_NEVER , TIMER_NEVER ) ;"	920:3:20755:20831	1038512	0	True				
ANR	1038542	CallExpression	"daemonCore -> Reset_Timer ( m_killTimer , TIMER_NEVER , TIMER_NEVER )"		1038512	0					
ANR	1038543	Callee	daemonCore -> Reset_Timer		1038512	0					
ANR	1038544	PtrMemberAccess	daemonCore -> Reset_Timer		1038512	0					
ANR	1038545	Identifier	daemonCore		1038512	0					
ANR	1038546	Identifier	Reset_Timer		1038512	1					
ANR	1038547	ArgumentList	m_killTimer		1038512	1					
ANR	1038548	Argument	m_killTimer		1038512	0					
ANR	1038549	Identifier	m_killTimer		1038512	0					
ANR	1038550	Argument	TIMER_NEVER		1038512	1					
ANR	1038551	Identifier	TIMER_NEVER		1038512	0					
ANR	1038552	Argument	TIMER_NEVER		1038512	2					
ANR	1038553	Identifier	TIMER_NEVER		1038512	0					
ANR	1038554	ReturnStatement	return 0 ;	923:2:20839:20847	1038512	2	True				
ANR	1038555	PrimaryExpression	0		1038512	0					
ANR	1038556	IfStatement	if ( m_killTimer >= 0 )		1038512	1					
ANR	1038557	Condition	m_killTimer >= 0	927:6:20879:20894	1038512	0	True				
ANR	1038558	RelationalExpression	m_killTimer >= 0		1038512	0		>=			
ANR	1038559	Identifier	m_killTimer		1038512	0					
ANR	1038560	PrimaryExpression	0		1038512	1					
ANR	1038561	CompoundStatement		15:1:315:315	1038512	1					
ANR	1038562	ExpressionStatement	"daemonCore -> Reset_Timer ( m_killTimer , seconds , 0 )"	929:2:20903:20953	1038512	0	True				
ANR	1038563	CallExpression	"daemonCore -> Reset_Timer ( m_killTimer , seconds , 0 )"		1038512	0					
ANR	1038564	Callee	daemonCore -> Reset_Timer		1038512	0					
ANR	1038565	PtrMemberAccess	daemonCore -> Reset_Timer		1038512	0					
ANR	1038566	Identifier	daemonCore		1038512	0					
ANR	1038567	Identifier	Reset_Timer		1038512	1					
ANR	1038568	ArgumentList	m_killTimer		1038512	1					
ANR	1038569	Argument	m_killTimer		1038512	0					
ANR	1038570	Identifier	m_killTimer		1038512	0					
ANR	1038571	Argument	seconds		1038512	1					
ANR	1038572	Identifier	seconds		1038512	0					
ANR	1038573	Argument	0		1038512	2					
ANR	1038574	PrimaryExpression	0		1038512	0					
ANR	1038575	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Kill timer ID %d reset to %us\\n"" , m_killTimer , seconds )"	930:2:20957:21051	1038512	1	True				
ANR	1038576	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Kill timer ID %d reset to %us\\n"" , m_killTimer , seconds )"		1038512	0					
ANR	1038577	Callee	dprintf		1038512	0					
ANR	1038578	Identifier	dprintf		1038512	0					
ANR	1038579	ArgumentList	D_FULLDEBUG		1038512	1					
ANR	1038580	Argument	D_FULLDEBUG		1038512	0					
ANR	1038581	Identifier	D_FULLDEBUG		1038512	0					
ANR	1038582	Argument	"""CronJob: Kill timer ID %d reset to %us\\n"""		1038512	1					
ANR	1038583	PrimaryExpression	"""CronJob: Kill timer ID %d reset to %us\\n"""		1038512	0					
ANR	1038584	Argument	m_killTimer		1038512	2					
ANR	1038585	Identifier	m_killTimer		1038512	0					
ANR	1038586	Argument	seconds		1038512	3					
ANR	1038587	Identifier	seconds		1038512	0					
ANR	1038588	ElseStatement	else		1038512	0					
ANR	1038589	CompoundStatement		23:1:506:506	1038512	0					
ANR	1038590	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Creating kill timer for '%s'\\n"" , GetName ( ) )"	938:2:21105:21187	1038512	0	True				
ANR	1038591	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Creating kill timer for '%s'\\n"" , GetName ( ) )"		1038512	0					
ANR	1038592	Callee	dprintf		1038512	0					
ANR	1038593	Identifier	dprintf		1038512	0					
ANR	1038594	ArgumentList	D_FULLDEBUG		1038512	1					
ANR	1038595	Argument	D_FULLDEBUG		1038512	0					
ANR	1038596	Identifier	D_FULLDEBUG		1038512	0					
ANR	1038597	Argument	"""CronJob: Creating kill timer for '%s'\\n"""		1038512	1					
ANR	1038598	PrimaryExpression	"""CronJob: Creating kill timer for '%s'\\n"""		1038512	0					
ANR	1038599	Argument	GetName ( )		1038512	2					
ANR	1038600	CallExpression	GetName ( )		1038512	0					
ANR	1038601	Callee	GetName		1038512	0					
ANR	1038602	Identifier	GetName		1038512	0					
ANR	1038603	ArgumentList			1038512	1					
ANR	1038604	ExpressionStatement	"m_killTimer = daemonCore -> Register_Timer ( seconds , 0 , ( TimerHandlercpp ) & CronJob :: KillHandler , ""KillJob"" , this )"	940:2:21191:21318	1038512	1	True				
ANR	1038605	AssignmentExpression	"m_killTimer = daemonCore -> Register_Timer ( seconds , 0 , ( TimerHandlercpp ) & CronJob :: KillHandler , ""KillJob"" , this )"		1038512	0		=			
ANR	1038606	Identifier	m_killTimer		1038512	0					
ANR	1038607	CallExpression	"daemonCore -> Register_Timer ( seconds , 0 , ( TimerHandlercpp ) & CronJob :: KillHandler , ""KillJob"" , this )"		1038512	1					
ANR	1038608	Callee	daemonCore -> Register_Timer		1038512	0					
ANR	1038609	PtrMemberAccess	daemonCore -> Register_Timer		1038512	0					
ANR	1038610	Identifier	daemonCore		1038512	0					
ANR	1038611	Identifier	Register_Timer		1038512	1					
ANR	1038612	ArgumentList	seconds		1038512	1					
ANR	1038613	Argument	seconds		1038512	0					
ANR	1038614	Identifier	seconds		1038512	0					
ANR	1038615	Argument	0		1038512	1					
ANR	1038616	PrimaryExpression	0		1038512	0					
ANR	1038617	Argument	( TimerHandlercpp ) & CronJob :: KillHandler		1038512	2					
ANR	1038618	CastExpression	( TimerHandlercpp ) & CronJob :: KillHandler		1038512	0					
ANR	1038619	CastTarget	TimerHandlercpp		1038512	0					
ANR	1038620	UnaryOperationExpression	& CronJob :: KillHandler		1038512	1					
ANR	1038621	UnaryOperator	&		1038512	0					
ANR	1038622	Identifier	CronJob :: KillHandler		1038512	1					
ANR	1038623	Argument	"""KillJob"""		1038512	3					
ANR	1038624	PrimaryExpression	"""KillJob"""		1038512	0					
ANR	1038625	Argument	this		1038512	4					
ANR	1038626	Identifier	this		1038512	0					
ANR	1038627	IfStatement	if ( m_killTimer < 0 )		1038512	2					
ANR	1038628	Condition	m_killTimer < 0	946:7:21327:21341	1038512	0	True				
ANR	1038629	RelationalExpression	m_killTimer < 0		1038512	0		<			
ANR	1038630	Identifier	m_killTimer		1038512	0					
ANR	1038631	PrimaryExpression	0		1038512	1					
ANR	1038632	CompoundStatement		33:25:761:761	1038512	1					
ANR	1038633	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Failed to create kill timer\\n"" )"	947:3:21350:21411	1038512	0	True				
ANR	1038634	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Failed to create kill timer\\n"" )"		1038512	0					
ANR	1038635	Callee	dprintf		1038512	0					
ANR	1038636	Identifier	dprintf		1038512	0					
ANR	1038637	ArgumentList	D_ALWAYS		1038512	1					
ANR	1038638	Argument	D_ALWAYS		1038512	0					
ANR	1038639	Identifier	D_ALWAYS		1038512	0					
ANR	1038640	Argument	"""CronJob: Failed to create kill timer\\n"""		1038512	1					
ANR	1038641	PrimaryExpression	"""CronJob: Failed to create kill timer\\n"""		1038512	0					
ANR	1038642	ReturnStatement	return - 1 ;	948:3:21416:21425	1038512	1	True				
ANR	1038643	UnaryOperationExpression	- 1		1038512	0					
ANR	1038644	UnaryOperator	-		1038512	0					
ANR	1038645	PrimaryExpression	1		1038512	1					
ANR	1038646	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: new kill timer ID=%d set to %us\\n"" , m_killTimer , seconds )"	950:2:21433:21528	1038512	3	True				
ANR	1038647	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: new kill timer ID=%d set to %us\\n"" , m_killTimer , seconds )"		1038512	0					
ANR	1038648	Callee	dprintf		1038512	0					
ANR	1038649	Identifier	dprintf		1038512	0					
ANR	1038650	ArgumentList	D_FULLDEBUG		1038512	1					
ANR	1038651	Argument	D_FULLDEBUG		1038512	0					
ANR	1038652	Identifier	D_FULLDEBUG		1038512	0					
ANR	1038653	Argument	"""CronJob: new kill timer ID=%d set to %us\\n"""		1038512	1					
ANR	1038654	PrimaryExpression	"""CronJob: new kill timer ID=%d set to %us\\n"""		1038512	0					
ANR	1038655	Argument	m_killTimer		1038512	2					
ANR	1038656	Identifier	m_killTimer		1038512	0					
ANR	1038657	Argument	seconds		1038512	3					
ANR	1038658	Identifier	seconds		1038512	0					
ANR	1038659	ReturnStatement	return 0 ;	954:1:21535:21543	1038512	2	True				
ANR	1038660	PrimaryExpression	0		1038512	0					
ANR	1038661	ReturnType	int		1038512	1					
ANR	1038662	Identifier	CronJob :: KillTimer		1038512	2					
ANR	1038663	ParameterList	unsigned seconds		1038512	3					
ANR	1038664	Parameter	unsigned seconds	913:20:20564:20579	1038512	0	True				
ANR	1038665	ParameterType	unsigned		1038512	0					
ANR	1038666	Identifier	seconds		1038512	1					
ANR	1038667	CFGEntryNode	ENTRY		1038512		True				
ANR	1038668	CFGExitNode	EXIT		1038512		True				
ANR	1038669	Symbol	m_killTimer		1038512						
ANR	1038670	Symbol	seconds		1038512						
ANR	1038671	Symbol	daemonCore -> Reset_Timer		1038512						
ANR	1038672	Symbol	* daemonCore		1038512						
ANR	1038673	Symbol	daemonCore		1038512						
ANR	1038674	Symbol	daemonCore -> Register_Timer		1038512						
ANR	1038675	Symbol	this		1038512						
ANR	1038676	Symbol	D_ALWAYS		1038512						
ANR	1038677	Symbol	GetName		1038512						
ANR	1038678	Symbol	D_FULLDEBUG		1038512						
ANR	1038679	Symbol	TIMER_NEVER		1038512						
ANR	1038680	Symbol	& CronJob :: KillHandler		1038512						
ANR	1038681	Function	CronJob :: StateString	958:0:21598:21911							
ANR	1038682	FunctionDef	CronJob :: StateString (CronJobState state_arg)		1038681	0					
ANR	1038683	CompoundStatement		960:0:21658:21911	1038681	0					
ANR	1038684	SwitchStatement	switch ( state_arg )		1038681	0					
ANR	1038685	Condition	state_arg	961:9:21669:21677	1038681	0	True				
ANR	1038686	Identifier	state_arg		1038681	0					
ANR	1038687	CompoundStatement		3:1:23:23	1038681	1					
ANR	1038688	Label	case CRON_IDLE :	963:1:21685:21699	1038681	0	True				
ANR	1038689	Identifier	CRON_IDLE		1038681	0					
ANR	1038690	ReturnStatement	"return ""Idle"" ;"	964:2:21703:21716	1038681	1	True				
ANR	1038691	PrimaryExpression	"""Idle"""		1038681	0					
ANR	1038692	Label	case CRON_RUNNING :	965:1:21719:21736	1038681	2	True				
ANR	1038693	Identifier	CRON_RUNNING		1038681	0					
ANR	1038694	ReturnStatement	"return ""Running"" ;"	966:2:21740:21756	1038681	3	True				
ANR	1038695	PrimaryExpression	"""Running"""		1038681	0					
ANR	1038696	Label	case CRON_TERM_SENT :	967:1:21759:21778	1038681	4	True				
ANR	1038697	Identifier	CRON_TERM_SENT		1038681	0					
ANR	1038698	ReturnStatement	"return ""TermSent"" ;"	968:2:21782:21799	1038681	5	True				
ANR	1038699	PrimaryExpression	"""TermSent"""		1038681	0					
ANR	1038700	Label	case CRON_KILL_SENT :	969:1:21802:21821	1038681	6	True				
ANR	1038701	Identifier	CRON_KILL_SENT		1038681	0					
ANR	1038702	ReturnStatement	"return ""KillSent"" ;"	970:2:21825:21842	1038681	7	True				
ANR	1038703	PrimaryExpression	"""KillSent"""		1038681	0					
ANR	1038704	Label	case CRON_DEAD :	971:1:21845:21859	1038681	8	True				
ANR	1038705	Identifier	CRON_DEAD		1038681	0					
ANR	1038706	ReturnStatement	"return ""Dead"" ;"	972:2:21863:21876	1038681	9	True				
ANR	1038707	PrimaryExpression	"""Dead"""		1038681	0					
ANR	1038708	Label	default :	973:1:21879:21886	1038681	10	True				
ANR	1038709	Identifier	default		1038681	0					
ANR	1038710	ReturnStatement	"return ""Unknown"" ;"	974:2:21890:21906	1038681	11	True				
ANR	1038711	PrimaryExpression	"""Unknown"""		1038681	0					
ANR	1038712	ReturnType	const char *		1038681	1					
ANR	1038713	Identifier	CronJob :: StateString		1038681	2					
ANR	1038714	ParameterList	CronJobState state_arg		1038681	3					
ANR	1038715	Parameter	CronJobState state_arg	959:22:21633:21654	1038681	0	True				
ANR	1038716	ParameterType	CronJobState		1038681	0					
ANR	1038717	Identifier	state_arg		1038681	1					
ANR	1038718	CFGEntryNode	ENTRY		1038681		True				
ANR	1038719	CFGExitNode	EXIT		1038681		True				
ANR	1038720	Symbol	state_arg		1038681						
ANR	1038721	Function	CronJob :: StateString	979:0:21956:22035							
ANR	1038722	FunctionDef	CronJob :: StateString ()		1038721	0					
ANR	1038723	CompoundStatement		981:0:21998:22035	1038721	0					
ANR	1038724	ReturnStatement	return StateString ( GetState ( ) ) ;	982:1:22001:22033	1038721	0	True				
ANR	1038725	CallExpression	StateString ( GetState ( ) )		1038721	0					
ANR	1038726	Callee	StateString		1038721	0					
ANR	1038727	Identifier	StateString		1038721	0					
ANR	1038728	ArgumentList	GetState ( )		1038721	1					
ANR	1038729	Argument	GetState ( )		1038721	0					
ANR	1038730	CallExpression	GetState ( )		1038721	0					
ANR	1038731	Callee	GetState		1038721	0					
ANR	1038732	Identifier	GetState		1038721	0					
ANR	1038733	ArgumentList			1038721	1					
ANR	1038734	ReturnType	const char *		1038721	1					
ANR	1038735	Identifier	CronJob :: StateString		1038721	2					
ANR	1038736	ParameterList			1038721	3					
ANR	1038737	CFGEntryNode	ENTRY		1038721		True				
ANR	1038738	CFGExitNode	EXIT		1038721		True				
ANR	1038739	Symbol	StateString		1038721						
ANR	1038740	Symbol	GetState		1038721						
