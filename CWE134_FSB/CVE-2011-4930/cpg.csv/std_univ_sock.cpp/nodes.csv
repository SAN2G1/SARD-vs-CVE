command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5251809	File	data/converged/CVE-2011-4930_htcondor/std_univ_sock.cpp								
ANR	5251810	Function	StdUnivSock :: setsockopt	37:1:1154:1418							
ANR	5251811	FunctionDef	"StdUnivSock :: setsockopt (int level , int optname , const char * optval , int optlen)"		5251810	0					
ANR	5251812	CompoundStatement		41:0:1282:1418	5251810	0					
ANR	5251813	ExpressionStatement	ASSERT ( _sock != INVALID_SOCKET )	42:1:1285:1317	5251810	0	True				
ANR	5251814	CallExpression	ASSERT ( _sock != INVALID_SOCKET )		5251810	0					
ANR	5251815	Callee	ASSERT		5251810	0					
ANR	5251816	Identifier	ASSERT		5251810	0					
ANR	5251817	ArgumentList	_sock != INVALID_SOCKET		5251810	1					
ANR	5251818	Argument	_sock != INVALID_SOCKET		5251810	0					
ANR	5251819	EqualityExpression	_sock != INVALID_SOCKET		5251810	0		!=			
ANR	5251820	Identifier	_sock		5251810	0					
ANR	5251821	Identifier	INVALID_SOCKET		5251810	1					
ANR	5251822	Statement	if	44:1:1321:1322	5251810	1	True				
ANR	5251823	Statement	(	44:3:1323:1323	5251810	2	True				
ANR	5251824	Statement	::	44:4:1324:1325	5251810	3	True				
ANR	5251825	Statement	setsockopt	44:6:1326:1335	5251810	4	True				
ANR	5251826	Statement	(	44:16:1336:1336	5251810	5	True				
ANR	5251827	Statement	_sock	44:17:1337:1341	5251810	6	True				
ANR	5251828	Statement	","	44:22:1342:1342	5251810	7	True				
ANR	5251829	Statement	level	44:24:1344:1348	5251810	8	True				
ANR	5251830	Statement	","	44:29:1349:1349	5251810	9	True				
ANR	5251831	Statement	optname	44:31:1351:1357	5251810	10	True				
ANR	5251832	Statement	","	44:38:1358:1358	5251810	11	True				
ANR	5251833	Statement	optval	44:40:1360:1365	5251810	12	True				
ANR	5251834	Statement	","	44:46:1366:1366	5251810	13	True				
ANR	5251835	Statement	optlen	44:48:1368:1373	5251810	14	True				
ANR	5251836	Statement	)	44:54:1374:1374	5251810	15	True				
ANR	5251837	Statement	<	44:56:1376:1376	5251810	16	True				
ANR	5251838	Statement	0	44:58:1378:1378	5251810	17	True				
ANR	5251839	Statement	)	44:59:1379:1379	5251810	18	True				
ANR	5251840	CompoundStatement		5:1:99:99	5251810	19					
ANR	5251841	ReturnStatement	return FALSE ;	46:2:1386:1398	5251810	0	True				
ANR	5251842	Identifier	FALSE		5251810	0					
ANR	5251843	ReturnStatement	return TRUE ;	48:1:1404:1415	5251810	20	True				
ANR	5251844	Identifier	TRUE		5251810	0					
ANR	5251845	ReturnType	define MAX_HEADER_SIZE NORMAL_HEADER_SIZE int		5251810	1					
ANR	5251846	Identifier	StdUnivSock :: setsockopt		5251810	2					
ANR	5251847	ParameterList	"int level , int optname , const char * optval , int optlen"		5251810	3					
ANR	5251848	Parameter	int level	40:28:1226:1234	5251810	0	True				
ANR	5251849	ParameterType	int		5251810	0					
ANR	5251850	Identifier	level		5251810	1					
ANR	5251851	Parameter	int optname	40:39:1237:1247	5251810	1	True				
ANR	5251852	ParameterType	int		5251810	0					
ANR	5251853	Identifier	optname		5251810	1					
ANR	5251854	Parameter	const char * optval	40:52:1250:1267	5251810	2	True				
ANR	5251855	ParameterType	const char *		5251810	0					
ANR	5251856	Identifier	optval		5251810	1					
ANR	5251857	Parameter	int optlen	40:72:1270:1279	5251810	3	True				
ANR	5251858	ParameterType	int		5251810	0					
ANR	5251859	Identifier	optlen		5251810	1					
ANR	5251860	CFGEntryNode	ENTRY		5251810		True				
ANR	5251861	CFGExitNode	EXIT		5251810		True				
ANR	5251862	Symbol	_sock		5251810						
ANR	5251863	Symbol	optval		5251810						
ANR	5251864	Symbol	level		5251810						
ANR	5251865	Symbol	optname		5251810						
ANR	5251866	Symbol	optlen		5251810						
ANR	5251867	Symbol	TRUE		5251810						
ANR	5251868	Symbol	FALSE		5251810						
ANR	5251869	Symbol	INVALID_SOCKET		5251810						
ANR	5251870	Function	StdUnivSock :: close	51:0:1421:1757							
ANR	5251871	FunctionDef	StdUnivSock :: close ()		5251870	0					
ANR	5251872	CompoundStatement		52:0:1446:1757	5251870	0					
ANR	5251873	IfStatement	if ( type ( ) == Stream :: reli_sock && ( DebugFlags & D_NETWORK ) )		5251870	0					
ANR	5251874	Condition	type ( ) == Stream :: reli_sock && ( DebugFlags & D_NETWORK )	53:5:1453:1507	5251870	0	True				
ANR	5251875	AndExpression	type ( ) == Stream :: reli_sock && ( DebugFlags & D_NETWORK )		5251870	0		&&			
ANR	5251876	EqualityExpression	type ( ) == Stream :: reli_sock		5251870	0		==			
ANR	5251877	CallExpression	type ( )		5251870	0					
ANR	5251878	Callee	type		5251870	0					
ANR	5251879	Identifier	type		5251870	0					
ANR	5251880	ArgumentList			5251870	1					
ANR	5251881	Identifier	Stream :: reli_sock		5251870	1					
ANR	5251882	BitAndExpression	DebugFlags & D_NETWORK		5251870	1		&			
ANR	5251883	Identifier	DebugFlags		5251870	0					
ANR	5251884	Identifier	D_NETWORK		5251870	1					
ANR	5251885	CompoundStatement		2:62:63:63	5251870	1					
ANR	5251886	ExpressionStatement	"dprintf ( D_NETWORK , ""CLOSE %s fd=%d\\n"" , sock_to_string ( _sock ) , _sock )"	54:2:1514:1591	5251870	0	True				
ANR	5251887	CallExpression	"dprintf ( D_NETWORK , ""CLOSE %s fd=%d\\n"" , sock_to_string ( _sock ) , _sock )"		5251870	0					
ANR	5251888	Callee	dprintf		5251870	0					
ANR	5251889	Identifier	dprintf		5251870	0					
ANR	5251890	ArgumentList	D_NETWORK		5251870	1					
ANR	5251891	Argument	D_NETWORK		5251870	0					
ANR	5251892	Identifier	D_NETWORK		5251870	0					
ANR	5251893	Argument	"""CLOSE %s fd=%d\\n"""		5251870	1					
ANR	5251894	PrimaryExpression	"""CLOSE %s fd=%d\\n"""		5251870	0					
ANR	5251895	Argument	sock_to_string ( _sock )		5251870	2					
ANR	5251896	CallExpression	sock_to_string ( _sock )		5251870	0					
ANR	5251897	Callee	sock_to_string		5251870	0					
ANR	5251898	Identifier	sock_to_string		5251870	0					
ANR	5251899	ArgumentList	_sock		5251870	1					
ANR	5251900	Argument	_sock		5251870	0					
ANR	5251901	Identifier	_sock		5251870	0					
ANR	5251902	Argument	_sock		5251870	3					
ANR	5251903	Identifier	_sock		5251870	0					
ANR	5251904	IfStatement	if ( _sock != INVALID_SOCKET )		5251870	1					
ANR	5251905	Condition	_sock != INVALID_SOCKET	58:6:1603:1625	5251870	0	True				
ANR	5251906	EqualityExpression	_sock != INVALID_SOCKET		5251870	0		!=			
ANR	5251907	Identifier	_sock		5251870	0					
ANR	5251908	Identifier	INVALID_SOCKET		5251870	1					
ANR	5251909	CompoundStatement		7:32:182:182	5251870	1					
ANR	5251910	Statement	if	59:2:1633:1634	5251870	0	True				
ANR	5251911	Statement	(	59:5:1636:1636	5251870	1	True				
ANR	5251912	Statement	::	59:6:1637:1638	5251870	2	True				
ANR	5251913	Statement	closesocket	59:8:1639:1649	5251870	3	True				
ANR	5251914	Statement	(	59:19:1650:1650	5251870	4	True				
ANR	5251915	Statement	_sock	59:20:1651:1655	5251870	5	True				
ANR	5251916	Statement	)	59:25:1656:1656	5251870	6	True				
ANR	5251917	Statement	<	59:27:1658:1658	5251870	7	True				
ANR	5251918	Statement	0	59:29:1660:1660	5251870	8	True				
ANR	5251919	Statement	)	59:30:1661:1661	5251870	9	True				
ANR	5251920	ReturnStatement	return FALSE ;	59:32:1663:1675	5251870	10	True				
ANR	5251921	Identifier	FALSE		5251870	0					
ANR	5251922	ExpressionStatement	_sock = INVALID_SOCKET	62:1:1682:1704	5251870	2	True				
ANR	5251923	AssignmentExpression	_sock = INVALID_SOCKET		5251870	0		=			
ANR	5251924	Identifier	_sock		5251870	0					
ANR	5251925	Identifier	INVALID_SOCKET		5251870	1					
ANR	5251926	ExpressionStatement	_who . clear ( )	63:1:1707:1719	5251870	3	True				
ANR	5251927	CallExpression	_who . clear ( )		5251870	0					
ANR	5251928	Callee	_who . clear		5251870	0					
ANR	5251929	MemberAccess	_who . clear		5251870	0					
ANR	5251930	Identifier	_who		5251870	0					
ANR	5251931	Identifier	clear		5251870	1					
ANR	5251932	ArgumentList			5251870	1					
ANR	5251933	ExpressionStatement	addr_changed ( )	64:4:1725:1739	5251870	4	True				
ANR	5251934	CallExpression	addr_changed ( )		5251870	0					
ANR	5251935	Callee	addr_changed		5251870	0					
ANR	5251936	Identifier	addr_changed		5251870	0					
ANR	5251937	ArgumentList			5251870	1					
ANR	5251938	ReturnStatement	return TRUE ;	66:1:1744:1755	5251870	5	True				
ANR	5251939	Identifier	TRUE		5251870	0					
ANR	5251940	ReturnType	int		5251870	1					
ANR	5251941	Identifier	StdUnivSock :: close		5251870	2					
ANR	5251942	ParameterList			5251870	3					
ANR	5251943	CFGEntryNode	ENTRY		5251870		True				
ANR	5251944	CFGExitNode	EXIT		5251870		True				
ANR	5251945	Symbol	_sock		5251870						
ANR	5251946	Symbol	_who		5251870						
ANR	5251947	Symbol	D_NETWORK		5251870						
ANR	5251948	Symbol	TRUE		5251870						
ANR	5251949	Symbol	Stream :: reli_sock		5251870						
ANR	5251950	Symbol	DebugFlags		5251870						
ANR	5251951	Symbol	FALSE		5251870						
ANR	5251952	Symbol	type		5251870						
ANR	5251953	Symbol	sock_to_string		5251870						
ANR	5251954	Symbol	INVALID_SOCKET		5251870						
ANR	5251955	Function	StdUnivSock :: timeout	74:0:1949:2878							
ANR	5251956	FunctionDef	StdUnivSock :: timeout (int sec)		5251955	0					
ANR	5251957	CompoundStatement		76:0:1983:2878	5251955	0					
ANR	5251958	IdentifierDeclStatement	int t = _timeout ;	77:1:1986:2002	5251955	0	True				
ANR	5251959	IdentifierDecl	t = _timeout		5251955	0					
ANR	5251960	IdentifierDeclType	int		5251955	0					
ANR	5251961	Identifier	t		5251955	1					
ANR	5251962	AssignmentExpression	t = _timeout		5251955	2		=			
ANR	5251963	Identifier	_timeout		5251955	0					
ANR	5251964	Identifier	_timeout		5251955	1					
ANR	5251965	ExpressionStatement	_timeout = sec	79:1:2006:2020	5251955	1	True				
ANR	5251966	AssignmentExpression	_timeout = sec		5251955	0		=			
ANR	5251967	Identifier	_timeout		5251955	0					
ANR	5251968	Identifier	sec		5251955	1					
ANR	5251969	IfStatement	if ( _sock == INVALID_SOCKET )		5251955	2					
ANR	5251970	Condition	_sock == INVALID_SOCKET	81:5:2028:2050	5251955	0	True				
ANR	5251971	EqualityExpression	_sock == INVALID_SOCKET		5251955	0		==			
ANR	5251972	Identifier	_sock		5251955	0					
ANR	5251973	Identifier	INVALID_SOCKET		5251955	1					
ANR	5251974	CompoundStatement		6:30:69:69	5251955	1					
ANR	5251975	ReturnStatement	return t ;	85:2:2201:2209	5251955	0	True				
ANR	5251976	Identifier	t		5251955	0					
ANR	5251977	IfStatement	if ( _timeout == 0 )		5251955	3					
ANR	5251978	Condition	_timeout == 0	88:5:2220:2232	5251955	0	True				
ANR	5251979	EqualityExpression	_timeout == 0		5251955	0		==			
ANR	5251980	Identifier	_timeout		5251955	0					
ANR	5251981	PrimaryExpression	0		5251955	1					
ANR	5251982	CompoundStatement		15:2:290:305	5251955	1					
ANR	5251983	IdentifierDeclStatement	int fcntl_flags ;	90:2:2274:2289	5251955	0	True				
ANR	5251984	IdentifierDecl	fcntl_flags		5251955	0					
ANR	5251985	IdentifierDeclType	int		5251955	0					
ANR	5251986	Identifier	fcntl_flags		5251955	1					
ANR	5251987	IfStatement	"if ( ( fcntl_flags = fcntl ( _sock , F_GETFL ) ) < 0 )"		5251955	1					
ANR	5251988	Condition	"( fcntl_flags = fcntl ( _sock , F_GETFL ) ) < 0"	91:7:2298:2336	5251955	0	True				
ANR	5251989	RelationalExpression	"( fcntl_flags = fcntl ( _sock , F_GETFL ) ) < 0"		5251955	0		<			
ANR	5251990	AssignmentExpression	"fcntl_flags = fcntl ( _sock , F_GETFL )"		5251955	0		=			
ANR	5251991	Identifier	fcntl_flags		5251955	0					
ANR	5251992	CallExpression	"fcntl ( _sock , F_GETFL )"		5251955	1					
ANR	5251993	Callee	fcntl		5251955	0					
ANR	5251994	Identifier	fcntl		5251955	0					
ANR	5251995	ArgumentList	_sock		5251955	1					
ANR	5251996	Argument	_sock		5251955	0					
ANR	5251997	Identifier	_sock		5251955	0					
ANR	5251998	Argument	F_GETFL		5251955	1					
ANR	5251999	Identifier	F_GETFL		5251955	0					
ANR	5252000	PrimaryExpression	0		5251955	1					
ANR	5252001	ReturnStatement	return - 1 ;	92:3:2343:2352	5251955	1	True				
ANR	5252002	UnaryOperationExpression	- 1		5251955	0					
ANR	5252003	UnaryOperator	-		5251955	0					
ANR	5252004	PrimaryExpression	1		5251955	1					
ANR	5252005	ExpressionStatement	fcntl_flags &= ~O_NONBLOCK	93:2:2356:2382	5251955	2	True				
ANR	5252006	AssignmentExpression	fcntl_flags &= ~O_NONBLOCK		5251955	0		&=			
ANR	5252007	Identifier	fcntl_flags		5251955	0					
ANR	5252008	Identifier	~O_NONBLOCK		5251955	1					
ANR	5252009	IfStatement	"if ( fcntl ( _sock , F_SETFL , fcntl_flags ) == - 1 )"		5251955	3					
ANR	5252010	Condition	"fcntl ( _sock , F_SETFL , fcntl_flags ) == - 1"	94:7:2414:2451	5251955	0	True				
ANR	5252011	EqualityExpression	"fcntl ( _sock , F_SETFL , fcntl_flags ) == - 1"		5251955	0		==			
ANR	5252012	CallExpression	"fcntl ( _sock , F_SETFL , fcntl_flags )"		5251955	0					
ANR	5252013	Callee	fcntl		5251955	0					
ANR	5252014	Identifier	fcntl		5251955	0					
ANR	5252015	ArgumentList	_sock		5251955	1					
ANR	5252016	Argument	_sock		5251955	0					
ANR	5252017	Identifier	_sock		5251955	0					
ANR	5252018	Argument	F_SETFL		5251955	1					
ANR	5252019	Identifier	F_SETFL		5251955	0					
ANR	5252020	Argument	fcntl_flags		5251955	2					
ANR	5252021	Identifier	fcntl_flags		5251955	0					
ANR	5252022	UnaryOperationExpression	- 1		5251955	1					
ANR	5252023	UnaryOperator	-		5251955	0					
ANR	5252024	PrimaryExpression	1		5251955	1					
ANR	5252025	ReturnStatement	return - 1 ;	95:3:2458:2467	5251955	1	True				
ANR	5252026	UnaryOperationExpression	- 1		5251955	0					
ANR	5252027	UnaryOperator	-		5251955	0					
ANR	5252028	PrimaryExpression	1		5251955	1					
ANR	5252029	ElseStatement	else		5251955	0					
ANR	5252030	CompoundStatement		21:8:493:493	5251955	0					
ANR	5252031	IfStatement	if ( type ( ) != safe_sock )		5251955	0					
ANR	5252032	Condition	type ( ) != safe_sock	99:7:2600:2618	5251955	0	True				
ANR	5252033	EqualityExpression	type ( ) != safe_sock		5251955	0		!=			
ANR	5252034	CallExpression	type ( )		5251955	0					
ANR	5252035	Callee	type		5251955	0					
ANR	5252036	Identifier	type		5251955	0					
ANR	5252037	ArgumentList			5251955	1					
ANR	5252038	Identifier	safe_sock		5251955	1					
ANR	5252039	CompoundStatement		25:3:675:690	5251955	1					
ANR	5252040	IdentifierDeclStatement	int fcntl_flags ;	100:3:2659:2674	5251955	0	True				
ANR	5252041	IdentifierDecl	fcntl_flags		5251955	0					
ANR	5252042	IdentifierDeclType	int		5251955	0					
ANR	5252043	Identifier	fcntl_flags		5251955	1					
ANR	5252044	IfStatement	"if ( ( fcntl_flags = fcntl ( _sock , F_GETFL ) ) < 0 )"		5251955	1					
ANR	5252045	Condition	"( fcntl_flags = fcntl ( _sock , F_GETFL ) ) < 0"	101:8:2684:2722	5251955	0	True				
ANR	5252046	RelationalExpression	"( fcntl_flags = fcntl ( _sock , F_GETFL ) ) < 0"		5251955	0		<			
ANR	5252047	AssignmentExpression	"fcntl_flags = fcntl ( _sock , F_GETFL )"		5251955	0		=			
ANR	5252048	Identifier	fcntl_flags		5251955	0					
ANR	5252049	CallExpression	"fcntl ( _sock , F_GETFL )"		5251955	1					
ANR	5252050	Callee	fcntl		5251955	0					
ANR	5252051	Identifier	fcntl		5251955	0					
ANR	5252052	ArgumentList	_sock		5251955	1					
ANR	5252053	Argument	_sock		5251955	0					
ANR	5252054	Identifier	_sock		5251955	0					
ANR	5252055	Argument	F_GETFL		5251955	1					
ANR	5252056	Identifier	F_GETFL		5251955	0					
ANR	5252057	PrimaryExpression	0		5251955	1					
ANR	5252058	ReturnStatement	return - 1 ;	102:4:2730:2739	5251955	1	True				
ANR	5252059	UnaryOperationExpression	- 1		5251955	0					
ANR	5252060	UnaryOperator	-		5251955	0					
ANR	5252061	PrimaryExpression	1		5251955	1					
ANR	5252062	ExpressionStatement	fcntl_flags |= O_NONBLOCK	103:3:2744:2769	5251955	2	True				
ANR	5252063	AssignmentExpression	fcntl_flags |= O_NONBLOCK		5251955	0		|=			
ANR	5252064	Identifier	fcntl_flags		5251955	0					
ANR	5252065	Identifier	O_NONBLOCK		5251955	1					
ANR	5252066	IfStatement	"if ( fcntl ( _sock , F_SETFL , fcntl_flags ) == - 1 )"		5251955	3					
ANR	5252067	Condition	"fcntl ( _sock , F_SETFL , fcntl_flags ) == - 1"	104:8:2803:2840	5251955	0	True				
ANR	5252068	EqualityExpression	"fcntl ( _sock , F_SETFL , fcntl_flags ) == - 1"		5251955	0		==			
ANR	5252069	CallExpression	"fcntl ( _sock , F_SETFL , fcntl_flags )"		5251955	0					
ANR	5252070	Callee	fcntl		5251955	0					
ANR	5252071	Identifier	fcntl		5251955	0					
ANR	5252072	ArgumentList	_sock		5251955	1					
ANR	5252073	Argument	_sock		5251955	0					
ANR	5252074	Identifier	_sock		5251955	0					
ANR	5252075	Argument	F_SETFL		5251955	1					
ANR	5252076	Identifier	F_SETFL		5251955	0					
ANR	5252077	Argument	fcntl_flags		5251955	2					
ANR	5252078	Identifier	fcntl_flags		5251955	0					
ANR	5252079	UnaryOperationExpression	- 1		5251955	1					
ANR	5252080	UnaryOperator	-		5251955	0					
ANR	5252081	PrimaryExpression	1		5251955	1					
ANR	5252082	ReturnStatement	return - 1 ;	105:4:2848:2857	5251955	1	True				
ANR	5252083	UnaryOperationExpression	- 1		5251955	0					
ANR	5252084	UnaryOperator	-		5251955	0					
ANR	5252085	PrimaryExpression	1		5251955	1					
ANR	5252086	ReturnStatement	return t ;	109:1:2868:2876	5251955	4	True				
ANR	5252087	Identifier	t		5251955	0					
ANR	5252088	ReturnType	int		5251955	1					
ANR	5252089	Identifier	StdUnivSock :: timeout		5251955	2					
ANR	5252090	ParameterList	int sec		5251955	3					
ANR	5252091	Parameter	int sec	75:21:1974:1980	5251955	0	True				
ANR	5252092	ParameterType	int		5251955	0					
ANR	5252093	Identifier	sec		5251955	1					
ANR	5252094	CFGEntryNode	ENTRY		5251955		True				
ANR	5252095	CFGExitNode	EXIT		5251955		True				
ANR	5252096	Symbol	safe_sock		5251955						
ANR	5252097	Symbol	fcntl		5251955						
ANR	5252098	Symbol	O_NONBLOCK		5251955						
ANR	5252099	Symbol	~O_NONBLOCK		5251955						
ANR	5252100	Symbol	type		5251955						
ANR	5252101	Symbol	F_SETFL		5251955						
ANR	5252102	Symbol	INVALID_SOCKET		5251955						
ANR	5252103	Symbol	sec		5251955						
ANR	5252104	Symbol	fcntl_flags		5251955						
ANR	5252105	Symbol	_sock		5251955						
ANR	5252106	Symbol	t		5251955						
ANR	5252107	Symbol	F_GETFL		5251955						
ANR	5252108	Symbol	_timeout		5251955						
ANR	5252109	Function	StdUnivSock :: addr_changed	112:0:2881:3112							
ANR	5252110	FunctionDef	StdUnivSock :: addr_changed ()		5252109	0					
ANR	5252111	CompoundStatement		114:0:2914:3112	5252109	0					
ANR	5252112	ExpressionStatement	_peer_ip_buf [ 0 ] = '\\0'	117:4:3056:3078	5252109	0	True				
ANR	5252113	AssignmentExpression	_peer_ip_buf [ 0 ] = '\\0'		5252109	0		=			
ANR	5252114	ArrayIndexing	_peer_ip_buf [ 0 ]		5252109	0					
ANR	5252115	Identifier	_peer_ip_buf		5252109	0					
ANR	5252116	PrimaryExpression	0		5252109	1					
ANR	5252117	PrimaryExpression	'\\0'		5252109	1					
ANR	5252118	ExpressionStatement	_sinful_peer_buf [ 0 ] = '\\0'	118:4:3084:3110	5252109	1	True				
ANR	5252119	AssignmentExpression	_sinful_peer_buf [ 0 ] = '\\0'		5252109	0		=			
ANR	5252120	ArrayIndexing	_sinful_peer_buf [ 0 ]		5252109	0					
ANR	5252121	Identifier	_sinful_peer_buf		5252109	0					
ANR	5252122	PrimaryExpression	0		5252109	1					
ANR	5252123	PrimaryExpression	'\\0'		5252109	1					
ANR	5252124	ReturnType	void		5252109	1					
ANR	5252125	Identifier	StdUnivSock :: addr_changed		5252109	2					
ANR	5252126	ParameterList			5252109	3					
ANR	5252127	CFGEntryNode	ENTRY		5252109		True				
ANR	5252128	CFGExitNode	EXIT		5252109		True				
ANR	5252129	Symbol	* _sinful_peer_buf		5252109						
ANR	5252130	Symbol	_peer_ip_buf		5252109						
ANR	5252131	Symbol	_sinful_peer_buf		5252109						
ANR	5252132	Symbol	* _peer_ip_buf		5252109						
ANR	5252133	Function	StdUnivSock :: peer_ip_str	121:0:3115:3400							
ANR	5252134	FunctionDef	StdUnivSock :: peer_ip_str ()		5252133	0					
ANR	5252135	CompoundStatement		123:0:3155:3400	5252133	0					
ANR	5252136	IfStatement	if ( _peer_ip_buf [ 0 ] )		5252133	0					
ANR	5252137	Condition	_peer_ip_buf [ 0 ]	124:8:3165:3179	5252133	0	True				
ANR	5252138	ArrayIndexing	_peer_ip_buf [ 0 ]		5252133	0					
ANR	5252139	Identifier	_peer_ip_buf		5252133	0					
ANR	5252140	PrimaryExpression	0		5252133	1					
ANR	5252141	CompoundStatement		2:26:27:27	5252133	1					
ANR	5252142	ReturnStatement	return _peer_ip_buf ;	125:8:3193:3212	5252133	0	True				
ANR	5252143	Identifier	_peer_ip_buf		5252133	0					
ANR	5252144	IdentifierDeclStatement	MyString ip_string = _who . to_ip_string ( ) ;	127:1:3221:3261	5252133	1	True				
ANR	5252145	IdentifierDecl	ip_string = _who . to_ip_string ( )		5252133	0					
ANR	5252146	IdentifierDeclType	MyString		5252133	0					
ANR	5252147	Identifier	ip_string		5252133	1					
ANR	5252148	AssignmentExpression	ip_string = _who . to_ip_string ( )		5252133	2		=			
ANR	5252149	Identifier	ip_string		5252133	0					
ANR	5252150	CallExpression	_who . to_ip_string ( )		5252133	1					
ANR	5252151	Callee	_who . to_ip_string		5252133	0					
ANR	5252152	MemberAccess	_who . to_ip_string		5252133	0					
ANR	5252153	Identifier	_who		5252133	0					
ANR	5252154	Identifier	to_ip_string		5252133	1					
ANR	5252155	ArgumentList			5252133	1					
ANR	5252156	ExpressionStatement	"strncpy ( _peer_ip_buf , ip_string . Value ( ) , IP_STRING_BUF_SIZE )"	128:4:3267:3329	5252133	2	True				
ANR	5252157	CallExpression	"strncpy ( _peer_ip_buf , ip_string . Value ( ) , IP_STRING_BUF_SIZE )"		5252133	0					
ANR	5252158	Callee	strncpy		5252133	0					
ANR	5252159	Identifier	strncpy		5252133	0					
ANR	5252160	ArgumentList	_peer_ip_buf		5252133	1					
ANR	5252161	Argument	_peer_ip_buf		5252133	0					
ANR	5252162	Identifier	_peer_ip_buf		5252133	0					
ANR	5252163	Argument	ip_string . Value ( )		5252133	1					
ANR	5252164	CallExpression	ip_string . Value ( )		5252133	0					
ANR	5252165	Callee	ip_string . Value		5252133	0					
ANR	5252166	MemberAccess	ip_string . Value		5252133	0					
ANR	5252167	Identifier	ip_string		5252133	0					
ANR	5252168	Identifier	Value		5252133	1					
ANR	5252169	ArgumentList			5252133	1					
ANR	5252170	Argument	IP_STRING_BUF_SIZE		5252133	2					
ANR	5252171	Identifier	IP_STRING_BUF_SIZE		5252133	0					
ANR	5252172	ExpressionStatement	_peer_ip_buf [ IP_STRING_BUF_SIZE - 1 ] = '\\0'	129:4:3335:3376	5252133	3	True				
ANR	5252173	AssignmentExpression	_peer_ip_buf [ IP_STRING_BUF_SIZE - 1 ] = '\\0'		5252133	0		=			
ANR	5252174	ArrayIndexing	_peer_ip_buf [ IP_STRING_BUF_SIZE - 1 ]		5252133	0					
ANR	5252175	Identifier	_peer_ip_buf		5252133	0					
ANR	5252176	AdditiveExpression	IP_STRING_BUF_SIZE - 1		5252133	1		-			
ANR	5252177	Identifier	IP_STRING_BUF_SIZE		5252133	0					
ANR	5252178	PrimaryExpression	1		5252133	1					
ANR	5252179	PrimaryExpression	'\\0'		5252133	1					
ANR	5252180	ReturnStatement	return _peer_ip_buf ;	130:1:3379:3398	5252133	4	True				
ANR	5252181	Identifier	_peer_ip_buf		5252133	0					
ANR	5252182	ReturnType	const char *		5252133	1					
ANR	5252183	Identifier	StdUnivSock :: peer_ip_str		5252133	2					
ANR	5252184	ParameterList			5252133	3					
ANR	5252185	CFGEntryNode	ENTRY		5252133		True				
ANR	5252186	CFGExitNode	EXIT		5252133		True				
ANR	5252187	Symbol	_who . to_ip_string		5252133						
ANR	5252188	Symbol	* IP_STRING_BUF_SIZE		5252133						
ANR	5252189	Symbol	_who		5252133						
ANR	5252190	Symbol	ip_string		5252133						
ANR	5252191	Symbol	IP_STRING_BUF_SIZE		5252133						
ANR	5252192	Symbol	_peer_ip_buf		5252133						
ANR	5252193	Symbol	ip_string . Value		5252133						
ANR	5252194	Symbol	* _peer_ip_buf		5252133						
ANR	5252195	Function	StdUnivSock :: my_addr	133:0:3403:3663							
ANR	5252196	FunctionDef	StdUnivSock :: my_addr ()		5252195	0					
ANR	5252197	CompoundStatement		135:0:3442:3663	5252195	0					
ANR	5252198	IdentifierDeclStatement	sockaddr_storage addr ;	136:1:3445:3466	5252195	0	True				
ANR	5252199	IdentifierDecl	addr		5252195	0					
ANR	5252200	IdentifierDeclType	sockaddr_storage		5252195	0					
ANR	5252201	Identifier	addr		5252195	1					
ANR	5252202	IdentifierDeclStatement	SOCKET_LENGTH_TYPE addr_len ;	137:1:3469:3496	5252195	1	True				
ANR	5252203	IdentifierDecl	addr_len		5252195	0					
ANR	5252204	IdentifierDeclType	SOCKET_LENGTH_TYPE		5252195	0					
ANR	5252205	Identifier	addr_len		5252195	1					
ANR	5252206	ExpressionStatement	addr_len = sizeof ( addr )	138:1:3499:3522	5252195	2	True				
ANR	5252207	AssignmentExpression	addr_len = sizeof ( addr )		5252195	0		=			
ANR	5252208	Identifier	addr_len		5252195	0					
ANR	5252209	SizeofExpression	sizeof ( addr )		5252195	1					
ANR	5252210	Sizeof	sizeof		5252195	0					
ANR	5252211	SizeofOperand	addr		5252195	1					
ANR	5252212	IfStatement	"if ( getsockname ( _sock , ( sockaddr * ) & addr , & addr_len ) < 0 )"		5252195	3					
ANR	5252213	Condition	"getsockname ( _sock , ( sockaddr * ) & addr , & addr_len ) < 0"	139:5:3529:3579	5252195	0	True				
ANR	5252214	RelationalExpression	"getsockname ( _sock , ( sockaddr * ) & addr , & addr_len ) < 0"		5252195	0		<			
ANR	5252215	CallExpression	"getsockname ( _sock , ( sockaddr * ) & addr , & addr_len )"		5252195	0					
ANR	5252216	Callee	getsockname		5252195	0					
ANR	5252217	Identifier	getsockname		5252195	0					
ANR	5252218	ArgumentList	_sock		5252195	1					
ANR	5252219	Argument	_sock		5252195	0					
ANR	5252220	Identifier	_sock		5252195	0					
ANR	5252221	Argument	( sockaddr * ) & addr		5252195	1					
ANR	5252222	CastExpression	( sockaddr * ) & addr		5252195	0					
ANR	5252223	CastTarget	sockaddr *		5252195	0					
ANR	5252224	UnaryOperationExpression	& addr		5252195	1					
ANR	5252225	UnaryOperator	&		5252195	0					
ANR	5252226	Identifier	addr		5252195	1					
ANR	5252227	Argument	& addr_len		5252195	2					
ANR	5252228	UnaryOperationExpression	& addr_len		5252195	0					
ANR	5252229	UnaryOperator	&		5252195	0					
ANR	5252230	Identifier	addr_len		5252195	1					
ANR	5252231	PrimaryExpression	0		5252195	1					
ANR	5252232	ReturnStatement	return condor_sockaddr :: null ;	140:2:3584:3612	5252195	1	True				
ANR	5252233	Identifier	condor_sockaddr :: null		5252195	0					
ANR	5252234	ReturnStatement	return condor_sockaddr ( ( const sockaddr * ) & addr ) ;	141:1:3615:3661	5252195	4	True				
ANR	5252235	CallExpression	condor_sockaddr ( ( const sockaddr * ) & addr )		5252195	0					
ANR	5252236	Callee	condor_sockaddr		5252195	0					
ANR	5252237	Identifier	condor_sockaddr		5252195	0					
ANR	5252238	ArgumentList	( const sockaddr * ) & addr		5252195	1					
ANR	5252239	Argument	( const sockaddr * ) & addr		5252195	0					
ANR	5252240	CastExpression	( const sockaddr * ) & addr		5252195	0					
ANR	5252241	CastTarget	const sockaddr *		5252195	0					
ANR	5252242	UnaryOperationExpression	& addr		5252195	1					
ANR	5252243	UnaryOperator	&		5252195	0					
ANR	5252244	Identifier	addr		5252195	1					
ANR	5252245	ReturnType	condor_sockaddr		5252195	1					
ANR	5252246	Identifier	StdUnivSock :: my_addr		5252195	2					
ANR	5252247	ParameterList			5252195	3					
ANR	5252248	CFGEntryNode	ENTRY		5252195		True				
ANR	5252249	CFGExitNode	EXIT		5252195		True				
ANR	5252250	Symbol	& addr		5252195						
ANR	5252251	Symbol	_sock		5252195						
ANR	5252252	Symbol	getsockname		5252195						
ANR	5252253	Symbol	condor_sockaddr :: null		5252195						
ANR	5252254	Symbol	condor_sockaddr		5252195						
ANR	5252255	Symbol	addr		5252195						
ANR	5252256	Symbol	& addr_len		5252195						
ANR	5252257	Symbol	addr_len		5252195						
ANR	5252258	Function	StdUnivSock :: get_sinful_peer	144:0:3666:3964							
ANR	5252259	FunctionDef	StdUnivSock :: get_sinful_peer ()		5252258	0					
ANR	5252260	CompoundStatement		146:0:3704:3964	5252258	0					
ANR	5252261	IfStatement	if ( _sinful_peer_buf [ 0 ] )		5252258	0					
ANR	5252262	Condition	_sinful_peer_buf [ 0 ]	147:8:3721:3739	5252258	0	True				
ANR	5252263	ArrayIndexing	_sinful_peer_buf [ 0 ]		5252258	0					
ANR	5252264	Identifier	_sinful_peer_buf		5252258	0					
ANR	5252265	PrimaryExpression	0		5252258	1					
ANR	5252266	CompoundStatement		2:30:38:38	5252258	1					
ANR	5252267	ReturnStatement	return _sinful_peer_buf ;	148:8:3753:3776	5252258	0	True				
ANR	5252268	Identifier	_sinful_peer_buf		5252258	0					
ANR	5252269	IdentifierDeclStatement	MyString sinful_string = _who . to_sinful ( ) ;	150:1:3785:3826	5252258	1	True				
ANR	5252270	IdentifierDecl	sinful_string = _who . to_sinful ( )		5252258	0					
ANR	5252271	IdentifierDeclType	MyString		5252258	0					
ANR	5252272	Identifier	sinful_string		5252258	1					
ANR	5252273	AssignmentExpression	sinful_string = _who . to_sinful ( )		5252258	2		=			
ANR	5252274	Identifier	sinful_string		5252258	0					
ANR	5252275	CallExpression	_who . to_sinful ( )		5252258	1					
ANR	5252276	Callee	_who . to_sinful		5252258	0					
ANR	5252277	MemberAccess	_who . to_sinful		5252258	0					
ANR	5252278	Identifier	_who		5252258	0					
ANR	5252279	Identifier	to_sinful		5252258	1					
ANR	5252280	ArgumentList			5252258	1					
ANR	5252281	ExpressionStatement	ASSERT ( sinful_string . Length ( ) < sizeof ( _sinful_peer_buf ) )	151:1:3829:3886	5252258	2	True				
ANR	5252282	CallExpression	ASSERT ( sinful_string . Length ( ) < sizeof ( _sinful_peer_buf ) )		5252258	0					
ANR	5252283	Callee	ASSERT		5252258	0					
ANR	5252284	Identifier	ASSERT		5252258	0					
ANR	5252285	ArgumentList	sinful_string . Length ( ) < sizeof ( _sinful_peer_buf )		5252258	1					
ANR	5252286	Argument	sinful_string . Length ( ) < sizeof ( _sinful_peer_buf )		5252258	0					
ANR	5252287	RelationalExpression	sinful_string . Length ( ) < sizeof ( _sinful_peer_buf )		5252258	0		<			
ANR	5252288	CallExpression	sinful_string . Length ( )		5252258	0					
ANR	5252289	Callee	sinful_string . Length		5252258	0					
ANR	5252290	MemberAccess	sinful_string . Length		5252258	0					
ANR	5252291	Identifier	sinful_string		5252258	0					
ANR	5252292	Identifier	Length		5252258	1					
ANR	5252293	ArgumentList			5252258	1					
ANR	5252294	SizeofExpression	sizeof ( _sinful_peer_buf )		5252258	1					
ANR	5252295	Sizeof	sizeof		5252258	0					
ANR	5252296	SizeofOperand	_sinful_peer_buf		5252258	1					
ANR	5252297	ExpressionStatement	"strcpy ( _sinful_peer_buf , sinful_string . Value ( ) )"	152:1:3889:3936	5252258	3	True				
ANR	5252298	CallExpression	"strcpy ( _sinful_peer_buf , sinful_string . Value ( ) )"		5252258	0					
ANR	5252299	Callee	strcpy		5252258	0					
ANR	5252300	Identifier	strcpy		5252258	0					
ANR	5252301	ArgumentList	_sinful_peer_buf		5252258	1					
ANR	5252302	Argument	_sinful_peer_buf		5252258	0					
ANR	5252303	Identifier	_sinful_peer_buf		5252258	0					
ANR	5252304	Argument	sinful_string . Value ( )		5252258	1					
ANR	5252305	CallExpression	sinful_string . Value ( )		5252258	0					
ANR	5252306	Callee	sinful_string . Value		5252258	0					
ANR	5252307	MemberAccess	sinful_string . Value		5252258	0					
ANR	5252308	Identifier	sinful_string		5252258	0					
ANR	5252309	Identifier	Value		5252258	1					
ANR	5252310	ArgumentList			5252258	1					
ANR	5252311	ReturnStatement	return _sinful_peer_buf ;	153:1:3939:3962	5252258	4	True				
ANR	5252312	Identifier	_sinful_peer_buf		5252258	0					
ANR	5252313	ReturnType	char *		5252258	1					
ANR	5252314	Identifier	StdUnivSock :: get_sinful_peer		5252258	2					
ANR	5252315	ParameterList			5252258	3					
ANR	5252316	CFGEntryNode	ENTRY		5252258		True				
ANR	5252317	CFGExitNode	EXIT		5252258		True				
ANR	5252318	Symbol	sinful_string		5252258						
ANR	5252319	Symbol	* _sinful_peer_buf		5252258						
ANR	5252320	Symbol	_who		5252258						
ANR	5252321	Symbol	sinful_string . Length		5252258						
ANR	5252322	Symbol	sinful_string . Value		5252258						
ANR	5252323	Symbol	_who . to_sinful		5252258						
ANR	5252324	Symbol	_sinful_peer_buf		5252258						
ANR	5252325	Function	StdUnivSock :: default_peer_description	156:0:3967:4132							
ANR	5252326	FunctionDef	StdUnivSock :: default_peer_description ()		5252325	0					
ANR	5252327	CompoundStatement		158:0:4020:4132	5252325	0					
ANR	5252328	IdentifierDeclStatement	char const * retval = get_sinful_peer ( ) ;	159:1:4023:4061	5252325	0	True				
ANR	5252329	IdentifierDecl	* retval = get_sinful_peer ( )		5252325	0					
ANR	5252330	IdentifierDeclType	char const *		5252325	0					
ANR	5252331	Identifier	retval		5252325	1					
ANR	5252332	AssignmentExpression	* retval = get_sinful_peer ( )		5252325	2		=			
ANR	5252333	Identifier	retval		5252325	0					
ANR	5252334	CallExpression	get_sinful_peer ( )		5252325	1					
ANR	5252335	Callee	get_sinful_peer		5252325	0					
ANR	5252336	Identifier	get_sinful_peer		5252325	0					
ANR	5252337	ArgumentList			5252325	1					
ANR	5252338	IfStatement	if ( ! retval )		5252325	1					
ANR	5252339	Condition	! retval	160:5:4068:4074	5252325	0	True				
ANR	5252340	UnaryOperationExpression	! retval		5252325	0					
ANR	5252341	UnaryOperator	!		5252325	0					
ANR	5252342	Identifier	retval		5252325	1					
ANR	5252343	CompoundStatement		3:15:57:57	5252325	1					
ANR	5252344	ReturnStatement	"return ""(unconnected socket)"" ;"	161:2:4082:4111	5252325	0	True				
ANR	5252345	PrimaryExpression	"""(unconnected socket)"""		5252325	0					
ANR	5252346	ReturnStatement	return retval ;	163:1:4117:4130	5252325	2	True				
ANR	5252347	Identifier	retval		5252325	0					
ANR	5252348	ReturnType	char const *		5252325	1					
ANR	5252349	Identifier	StdUnivSock :: default_peer_description		5252325	2					
ANR	5252350	ParameterList			5252325	3					
ANR	5252351	CFGEntryNode	ENTRY		5252325		True				
ANR	5252352	CFGExitNode	EXIT		5252325		True				
ANR	5252353	Symbol	get_sinful_peer		5252325						
ANR	5252354	Symbol	retval		5252325						
ANR	5252355	Function	StdUnivSock :: canEncrypt	166:0:4135:4183							
ANR	5252356	FunctionDef	StdUnivSock :: canEncrypt ()		5252355	0					
ANR	5252357	CompoundStatement		168:0:4166:4183	5252355	0					
ANR	5252358	ReturnStatement	return false ;	169:1:4169:4181	5252355	0	True				
ANR	5252359	Identifier	false		5252355	0					
ANR	5252360	ReturnType	bool		5252355	1					
ANR	5252361	Identifier	StdUnivSock :: canEncrypt		5252355	2					
ANR	5252362	ParameterList			5252355	3					
ANR	5252363	CFGEntryNode	ENTRY		5252355		True				
ANR	5252364	CFGExitNode	EXIT		5252355		True				
ANR	5252365	Symbol	false		5252355						
ANR	5252366	Function	StdUnivSock :: init	176:0:4331:4696							
ANR	5252367	FunctionDef	StdUnivSock :: init ()		5252366	0					
ANR	5252368	CompoundStatement		178:0:4356:4696	5252366	0					
ANR	5252369	ExpressionStatement	ignore_next_encode_eom = FALSE	179:1:4359:4389	5252366	0	True				
ANR	5252370	AssignmentExpression	ignore_next_encode_eom = FALSE		5252366	0		=			
ANR	5252371	Identifier	ignore_next_encode_eom		5252366	0					
ANR	5252372	Identifier	FALSE		5252366	1					
ANR	5252373	ExpressionStatement	ignore_next_decode_eom = FALSE	180:1:4392:4422	5252366	1	True				
ANR	5252374	AssignmentExpression	ignore_next_decode_eom = FALSE		5252366	0		=			
ANR	5252375	Identifier	ignore_next_decode_eom		5252366	0					
ANR	5252376	Identifier	FALSE		5252366	1					
ANR	5252377	ExpressionStatement	_bytes_sent = 0.0	181:1:4425:4442	5252366	2	True				
ANR	5252378	AssignmentExpression	_bytes_sent = 0.0		5252366	0		=			
ANR	5252379	Identifier	_bytes_sent		5252366	0					
ANR	5252380	PrimaryExpression	0.0		5252366	1					
ANR	5252381	ExpressionStatement	_bytes_recvd = 0.0	182:1:4445:4463	5252366	3	True				
ANR	5252382	AssignmentExpression	_bytes_recvd = 0.0		5252366	0		=			
ANR	5252383	Identifier	_bytes_recvd		5252366	0					
ANR	5252384	PrimaryExpression	0.0		5252366	1					
ANR	5252385	ExpressionStatement	snd_msg . buf . reset ( )	183:1:4466:4485	5252366	4	True				
ANR	5252386	CallExpression	snd_msg . buf . reset ( )		5252366	0					
ANR	5252387	Callee	snd_msg . buf . reset		5252366	0					
ANR	5252388	MemberAccess	snd_msg . buf . reset		5252366	0					
ANR	5252389	MemberAccess	snd_msg . buf		5252366	0					
ANR	5252390	Identifier	snd_msg		5252366	0					
ANR	5252391	Identifier	buf		5252366	1					
ANR	5252392	Identifier	reset		5252366	1					
ANR	5252393	ArgumentList			5252366	1					
ANR	5252394	ExpressionStatement	rcv_msg . buf . reset ( )	184:1:4540:4559	5252366	5	True				
ANR	5252395	CallExpression	rcv_msg . buf . reset ( )		5252366	0					
ANR	5252396	Callee	rcv_msg . buf . reset		5252366	0					
ANR	5252397	MemberAccess	rcv_msg . buf . reset		5252366	0					
ANR	5252398	MemberAccess	rcv_msg . buf		5252366	0					
ANR	5252399	Identifier	rcv_msg		5252366	0					
ANR	5252400	Identifier	buf		5252366	1					
ANR	5252401	Identifier	reset		5252366	1					
ANR	5252402	ArgumentList			5252366	1					
ANR	5252403	ExpressionStatement	rcv_msg . init_parent ( this )	185:1:4565:4590	5252366	6	True				
ANR	5252404	CallExpression	rcv_msg . init_parent ( this )		5252366	0					
ANR	5252405	Callee	rcv_msg . init_parent		5252366	0					
ANR	5252406	MemberAccess	rcv_msg . init_parent		5252366	0					
ANR	5252407	Identifier	rcv_msg		5252366	0					
ANR	5252408	Identifier	init_parent		5252366	1					
ANR	5252409	ArgumentList	this		5252366	1					
ANR	5252410	Argument	this		5252366	0					
ANR	5252411	Identifier	this		5252366	0					
ANR	5252412	ExpressionStatement	snd_msg . init_parent ( this )	186:1:4593:4618	5252366	7	True				
ANR	5252413	CallExpression	snd_msg . init_parent ( this )		5252366	0					
ANR	5252414	Callee	snd_msg . init_parent		5252366	0					
ANR	5252415	MemberAccess	snd_msg . init_parent		5252366	0					
ANR	5252416	Identifier	snd_msg		5252366	0					
ANR	5252417	Identifier	init_parent		5252366	1					
ANR	5252418	ArgumentList	this		5252366	1					
ANR	5252419	Argument	this		5252366	0					
ANR	5252420	Identifier	this		5252366	0					
ANR	5252421	ExpressionStatement	_sock = INVALID_SOCKET	188:1:4622:4644	5252366	8	True				
ANR	5252422	AssignmentExpression	_sock = INVALID_SOCKET		5252366	0		=			
ANR	5252423	Identifier	_sock		5252366	0					
ANR	5252424	Identifier	INVALID_SOCKET		5252366	1					
ANR	5252425	ExpressionStatement	_timeout = 0	189:1:4647:4659	5252366	9	True				
ANR	5252426	AssignmentExpression	_timeout = 0		5252366	0		=			
ANR	5252427	Identifier	_timeout		5252366	0					
ANR	5252428	PrimaryExpression	0		5252366	1					
ANR	5252429	ExpressionStatement	_who . clear ( )	190:1:4662:4674	5252366	10	True				
ANR	5252430	CallExpression	_who . clear ( )		5252366	0					
ANR	5252431	Callee	_who . clear		5252366	0					
ANR	5252432	MemberAccess	_who . clear		5252366	0					
ANR	5252433	Identifier	_who		5252366	0					
ANR	5252434	Identifier	clear		5252366	1					
ANR	5252435	ArgumentList			5252366	1					
ANR	5252436	ExpressionStatement	addr_changed ( )	191:4:4680:4694	5252366	11	True				
ANR	5252437	CallExpression	addr_changed ( )		5252366	0					
ANR	5252438	Callee	addr_changed		5252366	0					
ANR	5252439	Identifier	addr_changed		5252366	0					
ANR	5252440	ArgumentList			5252366	1					
ANR	5252441	ReturnType	void		5252366	1					
ANR	5252442	Identifier	StdUnivSock :: init		5252366	2					
ANR	5252443	ParameterList			5252366	3					
ANR	5252444	CFGEntryNode	ENTRY		5252366		True				
ANR	5252445	CFGExitNode	EXIT		5252366		True				
ANR	5252446	Symbol	snd_msg		5252366						
ANR	5252447	Symbol	ignore_next_decode_eom		5252366						
ANR	5252448	Symbol	rcv_msg		5252366						
ANR	5252449	Symbol	this		5252366						
ANR	5252450	Symbol	snd_msg . buf		5252366						
ANR	5252451	Symbol	_bytes_recvd		5252366						
ANR	5252452	Symbol	INVALID_SOCKET		5252366						
ANR	5252453	Symbol	_sock		5252366						
ANR	5252454	Symbol	_who		5252366						
ANR	5252455	Symbol	_bytes_sent		5252366						
ANR	5252456	Symbol	FALSE		5252366						
ANR	5252457	Symbol	ignore_next_encode_eom		5252366						
ANR	5252458	Symbol	_timeout		5252366						
ANR	5252459	Symbol	rcv_msg . buf		5252366						
ANR	5252460	Function	StdUnivSock :: StdUnivSock	195:0:4700:4750							
ANR	5252461	FunctionDef	StdUnivSock :: StdUnivSock ()		5252460	0					
ANR	5252462	CompoundStatement		197:0:4739:4750	5252460	0					
ANR	5252463	ExpressionStatement	init ( )	198:1:4742:4748	5252460	0	True				
ANR	5252464	CallExpression	init ( )		5252460	0					
ANR	5252465	Callee	init		5252460	0					
ANR	5252466	Identifier	init		5252460	0					
ANR	5252467	ArgumentList			5252460	1					
ANR	5252468	Identifier	StdUnivSock :: StdUnivSock		5252460	1					
ANR	5252469	ParameterList			5252460	2					
ANR	5252470	CFGEntryNode	ENTRY		5252460		True				
ANR	5252471	CFGExitNode	EXIT		5252460		True				
ANR	5252472	Function	StdUnivSock :: ~StdUnivSock	201:0:4753:4793							
ANR	5252473	FunctionDef	StdUnivSock :: ~StdUnivSock ()		5252472	0					
ANR	5252474	CompoundStatement		202:0:4781:4793	5252472	0					
ANR	5252475	ExpressionStatement	close ( )	203:1:4784:4791	5252472	0	True				
ANR	5252476	CallExpression	close ( )		5252472	0					
ANR	5252477	Callee	close		5252472	0					
ANR	5252478	Identifier	close		5252472	0					
ANR	5252479	ArgumentList			5252472	1					
ANR	5252480	Identifier	StdUnivSock :: ~StdUnivSock		5252472	1					
ANR	5252481	ParameterList			5252472	2					
ANR	5252482	CFGEntryNode	ENTRY		5252472		True				
ANR	5252483	CFGExitNode	EXIT		5252472		True				
ANR	5252484	Function	StdUnivSock :: handle_incoming_packet	206:0:4796:5121							
ANR	5252485	FunctionDef	StdUnivSock :: handle_incoming_packet ()		5252484	0					
ANR	5252486	CompoundStatement		208:0:4839:5121	5252484	0					
ANR	5252487	IfStatement	if ( rcv_msg . ready )		5252484	0					
ANR	5252488	Condition	rcv_msg . ready	211:5:4986:4998	5252484	0	True				
ANR	5252489	MemberAccess	rcv_msg . ready		5252484	0					
ANR	5252490	Identifier	rcv_msg		5252484	0					
ANR	5252491	Identifier	ready		5252484	1					
ANR	5252492	CompoundStatement		4:20:161:161	5252484	1					
ANR	5252493	ReturnStatement	return TRUE ;	212:2:5005:5016	5252484	0	True				
ANR	5252494	Identifier	TRUE		5252484	0					
ANR	5252495	IfStatement	"if ( ! rcv_msg . rcv_packet ( peer_description ( ) , _sock , _timeout ) )"		5252484	1					
ANR	5252496	Condition	"! rcv_msg . rcv_packet ( peer_description ( ) , _sock , _timeout )"	215:5:5027:5082	5252484	0	True				
ANR	5252497	UnaryOperationExpression	"! rcv_msg . rcv_packet ( peer_description ( ) , _sock , _timeout )"		5252484	0					
ANR	5252498	UnaryOperator	!		5252484	0					
ANR	5252499	CallExpression	"rcv_msg . rcv_packet ( peer_description ( ) , _sock , _timeout )"		5252484	1					
ANR	5252500	Callee	rcv_msg . rcv_packet		5252484	0					
ANR	5252501	MemberAccess	rcv_msg . rcv_packet		5252484	0					
ANR	5252502	Identifier	rcv_msg		5252484	0					
ANR	5252503	Identifier	rcv_packet		5252484	1					
ANR	5252504	ArgumentList	peer_description ( )		5252484	1					
ANR	5252505	Argument	peer_description ( )		5252484	0					
ANR	5252506	CallExpression	peer_description ( )		5252484	0					
ANR	5252507	Callee	peer_description		5252484	0					
ANR	5252508	Identifier	peer_description		5252484	0					
ANR	5252509	ArgumentList			5252484	1					
ANR	5252510	Argument	_sock		5252484	1					
ANR	5252511	Identifier	_sock		5252484	0					
ANR	5252512	Argument	_timeout		5252484	2					
ANR	5252513	Identifier	_timeout		5252484	0					
ANR	5252514	CompoundStatement		8:63:245:245	5252484	1					
ANR	5252515	ReturnStatement	return FALSE ;	216:2:5089:5101	5252484	0	True				
ANR	5252516	Identifier	FALSE		5252484	0					
ANR	5252517	ReturnStatement	return TRUE ;	219:1:5108:5119	5252484	2	True				
ANR	5252518	Identifier	TRUE		5252484	0					
ANR	5252519	ReturnType	int		5252484	1					
ANR	5252520	Identifier	StdUnivSock :: handle_incoming_packet		5252484	2					
ANR	5252521	ParameterList			5252484	3					
ANR	5252522	CFGEntryNode	ENTRY		5252484		True				
ANR	5252523	CFGExitNode	EXIT		5252484		True				
ANR	5252524	Symbol	peer_description		5252484						
ANR	5252525	Symbol	_sock		5252484						
ANR	5252526	Symbol	rcv_msg		5252484						
ANR	5252527	Symbol	TRUE		5252484						
ANR	5252528	Symbol	FALSE		5252484						
ANR	5252529	Symbol	_timeout		5252484						
ANR	5252530	Symbol	rcv_msg . ready		5252484						
ANR	5252531	Symbol	rcv_msg . rcv_packet		5252484						
ANR	5252532	Function	StdUnivSock :: end_of_message	224:0:5126:6147							
ANR	5252533	FunctionDef	StdUnivSock :: end_of_message ()		5252532	0					
ANR	5252534	CompoundStatement		226:0:5161:6147	5252532	0					
ANR	5252535	IdentifierDeclStatement	int ret_val = FALSE ;	227:1:5164:5183	5252532	0	True				
ANR	5252536	IdentifierDecl	ret_val = FALSE		5252532	0					
ANR	5252537	IdentifierDeclType	int		5252532	0					
ANR	5252538	Identifier	ret_val		5252532	1					
ANR	5252539	AssignmentExpression	ret_val = FALSE		5252532	2		=			
ANR	5252540	Identifier	FALSE		5252532	0					
ANR	5252541	Identifier	FALSE		5252532	1					
ANR	5252542	SwitchStatement	switch ( _coding )		5252532	1					
ANR	5252543	Condition	_coding	229:8:5194:5200	5252532	0	True				
ANR	5252544	Identifier	_coding		5252532	0					
ANR	5252545	CompoundStatement		4:16:40:40	5252532	1					
ANR	5252546	Label	case stream_encode :	230:2:5206:5224	5252532	0	True				
ANR	5252547	Identifier	stream_encode		5252532	0					
ANR	5252548	IfStatement	if ( ignore_next_encode_eom == TRUE )		5252532	1					
ANR	5252549	Condition	ignore_next_encode_eom == TRUE	231:8:5234:5263	5252532	0	True				
ANR	5252550	EqualityExpression	ignore_next_encode_eom == TRUE		5252532	0		==			
ANR	5252551	Identifier	ignore_next_encode_eom		5252532	0					
ANR	5252552	Identifier	TRUE		5252532	1					
ANR	5252553	CompoundStatement		6:41:105:105	5252532	1					
ANR	5252554	ExpressionStatement	ignore_next_encode_eom = FALSE	232:4:5273:5303	5252532	0	True				
ANR	5252555	AssignmentExpression	ignore_next_encode_eom = FALSE		5252532	0		=			
ANR	5252556	Identifier	ignore_next_encode_eom		5252532	0					
ANR	5252557	Identifier	FALSE		5252532	1					
ANR	5252558	ReturnStatement	return TRUE ;	233:4:5309:5320	5252532	1	True				
ANR	5252559	Identifier	TRUE		5252532	0					
ANR	5252560	IfStatement	if ( ! snd_msg . buf . empty ( ) )		5252532	2					
ANR	5252561	Condition	! snd_msg . buf . empty ( )	235:7:5334:5353	5252532	0	True				
ANR	5252562	UnaryOperationExpression	! snd_msg . buf . empty ( )		5252532	0					
ANR	5252563	UnaryOperator	!		5252532	0					
ANR	5252564	CallExpression	snd_msg . buf . empty ( )		5252532	1					
ANR	5252565	Callee	snd_msg . buf . empty		5252532	0					
ANR	5252566	MemberAccess	snd_msg . buf . empty		5252532	0					
ANR	5252567	MemberAccess	snd_msg . buf		5252532	0					
ANR	5252568	Identifier	snd_msg		5252532	0					
ANR	5252569	Identifier	buf		5252532	1					
ANR	5252570	Identifier	empty		5252532	1					
ANR	5252571	ArgumentList			5252532	1					
ANR	5252572	CompoundStatement		10:29:194:194	5252532	1					
ANR	5252573	ReturnStatement	"return snd_msg . snd_packet ( peer_description ( ) , _sock , TRUE , _timeout ) ;"	236:4:5362:5430	5252532	0	True				
ANR	5252574	CallExpression	"snd_msg . snd_packet ( peer_description ( ) , _sock , TRUE , _timeout )"		5252532	0					
ANR	5252575	Callee	snd_msg . snd_packet		5252532	0					
ANR	5252576	MemberAccess	snd_msg . snd_packet		5252532	0					
ANR	5252577	Identifier	snd_msg		5252532	0					
ANR	5252578	Identifier	snd_packet		5252532	1					
ANR	5252579	ArgumentList	peer_description ( )		5252532	1					
ANR	5252580	Argument	peer_description ( )		5252532	0					
ANR	5252581	CallExpression	peer_description ( )		5252532	0					
ANR	5252582	Callee	peer_description		5252532	0					
ANR	5252583	Identifier	peer_description		5252532	0					
ANR	5252584	ArgumentList			5252532	1					
ANR	5252585	Argument	_sock		5252532	1					
ANR	5252586	Identifier	_sock		5252532	0					
ANR	5252587	Argument	TRUE		5252532	2					
ANR	5252588	Identifier	TRUE		5252532	0					
ANR	5252589	Argument	_timeout		5252532	3					
ANR	5252590	Identifier	_timeout		5252532	0					
ANR	5252591	IfStatement	if ( allow_empty_message_flag )		5252532	3					
ANR	5252592	Condition	allow_empty_message_flag	238:8:5445:5468	5252532	0	True				
ANR	5252593	Identifier	allow_empty_message_flag		5252532	0					
ANR	5252594	CompoundStatement		13:35:310:310	5252532	1					
ANR	5252595	ExpressionStatement	allow_empty_message_flag = FALSE	239:4:5478:5510	5252532	0	True				
ANR	5252596	AssignmentExpression	allow_empty_message_flag = FALSE		5252532	0		=			
ANR	5252597	Identifier	allow_empty_message_flag		5252532	0					
ANR	5252598	Identifier	FALSE		5252532	1					
ANR	5252599	ReturnStatement	return TRUE ;	240:4:5516:5527	5252532	1	True				
ANR	5252600	Identifier	TRUE		5252532	0					
ANR	5252601	BreakStatement	break ;	242:3:5537:5542	5252532	4	True				
ANR	5252602	Label	case stream_decode :	244:2:5547:5565	5252532	5	True				
ANR	5252603	Identifier	stream_decode		5252532	0					
ANR	5252604	IfStatement	if ( ignore_next_decode_eom == TRUE )		5252532	6					
ANR	5252605	Condition	ignore_next_decode_eom == TRUE	245:8:5575:5604	5252532	0	True				
ANR	5252606	EqualityExpression	ignore_next_decode_eom == TRUE		5252532	0		==			
ANR	5252607	Identifier	ignore_next_decode_eom		5252532	0					
ANR	5252608	Identifier	TRUE		5252532	1					
ANR	5252609	CompoundStatement		20:41:446:446	5252532	1					
ANR	5252610	ExpressionStatement	ignore_next_decode_eom = FALSE	246:4:5614:5644	5252532	0	True				
ANR	5252611	AssignmentExpression	ignore_next_decode_eom = FALSE		5252532	0		=			
ANR	5252612	Identifier	ignore_next_decode_eom		5252532	0					
ANR	5252613	Identifier	FALSE		5252532	1					
ANR	5252614	ReturnStatement	return TRUE ;	247:4:5650:5661	5252532	1	True				
ANR	5252615	Identifier	TRUE		5252532	0					
ANR	5252616	IfStatement	if ( rcv_msg . ready )		5252532	7					
ANR	5252617	Condition	rcv_msg . ready	249:8:5676:5688	5252532	0	True				
ANR	5252618	MemberAccess	rcv_msg . ready		5252532	0					
ANR	5252619	Identifier	rcv_msg		5252532	0					
ANR	5252620	Identifier	ready		5252532	1					
ANR	5252621	CompoundStatement		24:24:530:530	5252532	1					
ANR	5252622	IfStatement	if ( rcv_msg . buf . consumed ( ) )		5252532	0					
ANR	5252623	Condition	rcv_msg . buf . consumed ( )	250:9:5703:5724	5252532	0	True				
ANR	5252624	CallExpression	rcv_msg . buf . consumed ( )		5252532	0					
ANR	5252625	Callee	rcv_msg . buf . consumed		5252532	0					
ANR	5252626	MemberAccess	rcv_msg . buf . consumed		5252532	0					
ANR	5252627	MemberAccess	rcv_msg . buf		5252532	0					
ANR	5252628	Identifier	rcv_msg		5252532	0					
ANR	5252629	Identifier	buf		5252532	1					
ANR	5252630	Identifier	consumed		5252532	1					
ANR	5252631	ArgumentList			5252532	1					
ANR	5252632	CompoundStatement		25:34:566:566	5252532	1					
ANR	5252633	ExpressionStatement	ret_val = TRUE	251:5:5735:5749	5252532	0	True				
ANR	5252634	AssignmentExpression	ret_val = TRUE		5252532	0		=			
ANR	5252635	Identifier	ret_val		5252532	0					
ANR	5252636	Identifier	TRUE		5252532	1					
ANR	5252637	ElseStatement	else		5252532	0					
ANR	5252638	IfStatement	if ( ! allow_empty_message_flag )		5252532	0					
ANR	5252639	Condition	! allow_empty_message_flag	253:13:5770:5794	5252532	0	True				
ANR	5252640	UnaryOperationExpression	! allow_empty_message_flag		5252532	0					
ANR	5252641	UnaryOperator	!		5252532	0					
ANR	5252642	Identifier	allow_empty_message_flag		5252532	1					
ANR	5252643	CompoundStatement		29:5:643:677	5252532	1					
ANR	5252644	IdentifierDeclStatement	char const * ip = get_sinful_peer ( ) ;	254:5:5805:5839	5252532	0	True				
ANR	5252645	IdentifierDecl	* ip = get_sinful_peer ( )		5252532	0					
ANR	5252646	IdentifierDeclType	char const *		5252532	0					
ANR	5252647	Identifier	ip		5252532	1					
ANR	5252648	AssignmentExpression	* ip = get_sinful_peer ( )		5252532	2		=			
ANR	5252649	Identifier	ip		5252532	0					
ANR	5252650	CallExpression	get_sinful_peer ( )		5252532	1					
ANR	5252651	Callee	get_sinful_peer		5252532	0					
ANR	5252652	Identifier	get_sinful_peer		5252532	0					
ANR	5252653	ArgumentList			5252532	1					
ANR	5252654	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to read end of message from %s.\\n"" , ip ? ip : ""(null)"" )"	255:5:5846:5928	5252532	1	True				
ANR	5252655	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to read end of message from %s.\\n"" , ip ? ip : ""(null)"" )"		5252532	0					
ANR	5252656	Callee	dprintf		5252532	0					
ANR	5252657	Identifier	dprintf		5252532	0					
ANR	5252658	ArgumentList	D_FULLDEBUG		5252532	1					
ANR	5252659	Argument	D_FULLDEBUG		5252532	0					
ANR	5252660	Identifier	D_FULLDEBUG		5252532	0					
ANR	5252661	Argument	"""Failed to read end of message from %s.\\n"""		5252532	1					
ANR	5252662	PrimaryExpression	"""Failed to read end of message from %s.\\n"""		5252532	0					
ANR	5252663	Argument	"ip ? ip : ""(null)"""		5252532	2					
ANR	5252664	ConditionalExpression	"ip ? ip : ""(null)"""		5252532	0					
ANR	5252665	Condition	ip		5252532	0					
ANR	5252666	Identifier	ip		5252532	0					
ANR	5252667	Identifier	ip		5252532	1					
ANR	5252668	PrimaryExpression	"""(null)"""		5252532	2					
ANR	5252669	ExpressionStatement	rcv_msg . ready = FALSE	257:4:5940:5961	5252532	1	True				
ANR	5252670	AssignmentExpression	rcv_msg . ready = FALSE		5252532	0		=			
ANR	5252671	MemberAccess	rcv_msg . ready		5252532	0					
ANR	5252672	Identifier	rcv_msg		5252532	0					
ANR	5252673	Identifier	ready		5252532	1					
ANR	5252674	Identifier	FALSE		5252532	1					
ANR	5252675	ExpressionStatement	rcv_msg . buf . reset ( )	258:4:5967:5986	5252532	2	True				
ANR	5252676	CallExpression	rcv_msg . buf . reset ( )		5252532	0					
ANR	5252677	Callee	rcv_msg . buf . reset		5252532	0					
ANR	5252678	MemberAccess	rcv_msg . buf . reset		5252532	0					
ANR	5252679	MemberAccess	rcv_msg . buf		5252532	0					
ANR	5252680	Identifier	rcv_msg		5252532	0					
ANR	5252681	Identifier	buf		5252532	1					
ANR	5252682	Identifier	reset		5252532	1					
ANR	5252683	ArgumentList			5252532	1					
ANR	5252684	IfStatement	if ( allow_empty_message_flag )		5252532	8					
ANR	5252685	Condition	allow_empty_message_flag	260:8:6001:6024	5252532	0	True				
ANR	5252686	Identifier	allow_empty_message_flag		5252532	0					
ANR	5252687	CompoundStatement		35:35:866:866	5252532	1					
ANR	5252688	ExpressionStatement	allow_empty_message_flag = FALSE	261:4:6034:6066	5252532	0	True				
ANR	5252689	AssignmentExpression	allow_empty_message_flag = FALSE		5252532	0		=			
ANR	5252690	Identifier	allow_empty_message_flag		5252532	0					
ANR	5252691	Identifier	FALSE		5252532	1					
ANR	5252692	ReturnStatement	return TRUE ;	262:4:6072:6083	5252532	1	True				
ANR	5252693	Identifier	TRUE		5252532	0					
ANR	5252694	BreakStatement	break ;	264:3:6093:6098	5252532	9	True				
ANR	5252695	Label	default :	266:2:6103:6110	5252532	10	True				
ANR	5252696	Identifier	default		5252532	0					
ANR	5252697	ExpressionStatement	ASSERT ( 0 )	267:3:6115:6124	5252532	11	True				
ANR	5252698	CallExpression	ASSERT ( 0 )		5252532	0					
ANR	5252699	Callee	ASSERT		5252532	0					
ANR	5252700	Identifier	ASSERT		5252532	0					
ANR	5252701	ArgumentList	0		5252532	1					
ANR	5252702	Argument	0		5252532	0					
ANR	5252703	PrimaryExpression	0		5252532	0					
ANR	5252704	ReturnStatement	return ret_val ;	270:1:6131:6145	5252532	2	True				
ANR	5252705	Identifier	ret_val		5252532	0					
ANR	5252706	ReturnType	int		5252532	1					
ANR	5252707	Identifier	StdUnivSock :: end_of_message		5252532	2					
ANR	5252708	ParameterList			5252532	3					
ANR	5252709	CFGEntryNode	ENTRY		5252532		True				
ANR	5252710	CFGExitNode	EXIT		5252532		True				
ANR	5252711	Symbol	_coding		5252532						
ANR	5252712	Symbol	peer_description		5252532						
ANR	5252713	Symbol	snd_msg		5252532						
ANR	5252714	Symbol	ignore_next_decode_eom		5252532						
ANR	5252715	Symbol	rcv_msg		5252532						
ANR	5252716	Symbol	ip		5252532						
ANR	5252717	Symbol	snd_msg . buf . empty		5252532						
ANR	5252718	Symbol	rcv_msg . buf . consumed		5252532						
ANR	5252719	Symbol	TRUE		5252532						
ANR	5252720	Symbol	D_FULLDEBUG		5252532						
ANR	5252721	Symbol	snd_msg . buf		5252532						
ANR	5252722	Symbol	ret_val		5252532						
ANR	5252723	Symbol	snd_msg . snd_packet		5252532						
ANR	5252724	Symbol	get_sinful_peer		5252532						
ANR	5252725	Symbol	_sock		5252532						
ANR	5252726	Symbol	allow_empty_message_flag		5252532						
ANR	5252727	Symbol	FALSE		5252532						
ANR	5252728	Symbol	ignore_next_encode_eom		5252532						
ANR	5252729	Symbol	_timeout		5252532						
ANR	5252730	Symbol	rcv_msg . buf		5252532						
ANR	5252731	Symbol	rcv_msg . ready		5252532						
ANR	5252732	Function	StdUnivSock :: peek_end_of_message	274:0:6151:6237							
ANR	5252733	FunctionDef	StdUnivSock :: peek_end_of_message ()		5252732	0					
ANR	5252734	CompoundStatement		276:0:6192:6237	5252732	0					
ANR	5252735	ExpressionStatement	"EXCEPT ( ""not implemented"" )"	277:1:6195:6220	5252732	0	True				
ANR	5252736	CallExpression	"EXCEPT ( ""not implemented"" )"		5252732	0					
ANR	5252737	Callee	EXCEPT		5252732	0					
ANR	5252738	Identifier	EXCEPT		5252732	0					
ANR	5252739	ArgumentList	"""not implemented"""		5252732	1					
ANR	5252740	Argument	"""not implemented"""		5252732	0					
ANR	5252741	PrimaryExpression	"""not implemented"""		5252732	0					
ANR	5252742	ReturnStatement	return false ;	278:1:6223:6235	5252732	1	True				
ANR	5252743	Identifier	false		5252732	0					
ANR	5252744	ReturnType	bool		5252732	1					
ANR	5252745	Identifier	StdUnivSock :: peek_end_of_message		5252732	2					
ANR	5252746	ParameterList			5252732	3					
ANR	5252747	CFGEntryNode	ENTRY		5252732		True				
ANR	5252748	CFGExitNode	EXIT		5252732		True				
ANR	5252749	Symbol	false		5252732						
ANR	5252750	Function	StdUnivSock :: put_bytes	281:0:6240:7050							
ANR	5252751	FunctionDef	"StdUnivSock :: put_bytes (const void * data , int sz)"		5252750	0					
ANR	5252752	CompoundStatement		283:0:6294:7050	5252750	0					
ANR	5252753	IdentifierDeclStatement	"int tw , header_size = NORMAL_HEADER_SIZE ;"	284:1:6297:6338	5252750	0	True				
ANR	5252754	IdentifierDecl	tw		5252750	0					
ANR	5252755	IdentifierDeclType	int		5252750	0					
ANR	5252756	Identifier	tw		5252750	1					
ANR	5252757	IdentifierDecl	header_size = NORMAL_HEADER_SIZE		5252750	1					
ANR	5252758	IdentifierDeclType	int		5252750	0					
ANR	5252759	Identifier	header_size		5252750	1					
ANR	5252760	AssignmentExpression	header_size = NORMAL_HEADER_SIZE		5252750	2		=			
ANR	5252761	Identifier	NORMAL_HEADER_SIZE		5252750	0					
ANR	5252762	Identifier	NORMAL_HEADER_SIZE		5252750	1					
ANR	5252763	IdentifierDeclStatement	int nw ;	285:1:6341:6348	5252750	1	True				
ANR	5252764	IdentifierDecl	nw		5252750	0					
ANR	5252765	IdentifierDeclType	int		5252750	0					
ANR	5252766	Identifier	nw		5252750	1					
ANR	5252767	IdentifierDeclStatement	unsigned char * dta = NULL ;	286:1:6351:6377	5252750	2	True				
ANR	5252768	IdentifierDecl	* dta = NULL		5252750	0					
ANR	5252769	IdentifierDeclType	unsigned char *		5252750	0					
ANR	5252770	Identifier	dta		5252750	1					
ANR	5252771	AssignmentExpression	* dta = NULL		5252750	2		=			
ANR	5252772	Identifier	NULL		5252750	0					
ANR	5252773	Identifier	NULL		5252750	1					
ANR	5252774	IfStatement	if ( ( dta = ( unsigned char * ) malloc ( sz ) ) != 0 )		5252750	3					
ANR	5252775	Condition	( dta = ( unsigned char * ) malloc ( sz ) ) != 0	288:4:6384:6424	5252750	0	True				
ANR	5252776	EqualityExpression	( dta = ( unsigned char * ) malloc ( sz ) ) != 0		5252750	0		!=			
ANR	5252777	AssignmentExpression	dta = ( unsigned char * ) malloc ( sz )		5252750	0		=			
ANR	5252778	Identifier	dta		5252750	0					
ANR	5252779	CastExpression	( unsigned char * ) malloc ( sz )		5252750	1					
ANR	5252780	CastTarget	unsigned char *		5252750	0					
ANR	5252781	CallExpression	malloc ( sz )		5252750	1					
ANR	5252782	Callee	malloc		5252750	0					
ANR	5252783	Identifier	malloc		5252750	0					
ANR	5252784	ArgumentList	sz		5252750	1					
ANR	5252785	Argument	sz		5252750	0					
ANR	5252786	Identifier	sz		5252750	0					
ANR	5252787	PrimaryExpression	0		5252750	1					
ANR	5252788	ExpressionStatement	"memcpy ( dta , data , sz )"	289:2:6429:6450	5252750	1	True				
ANR	5252789	CallExpression	"memcpy ( dta , data , sz )"		5252750	0					
ANR	5252790	Callee	memcpy		5252750	0					
ANR	5252791	Identifier	memcpy		5252750	0					
ANR	5252792	ArgumentList	dta		5252750	1					
ANR	5252793	Argument	dta		5252750	0					
ANR	5252794	Identifier	dta		5252750	0					
ANR	5252795	Argument	data		5252750	1					
ANR	5252796	Identifier	data		5252750	0					
ANR	5252797	Argument	sz		5252750	2					
ANR	5252798	Identifier	sz		5252750	0					
ANR	5252799	ExpressionStatement	ignore_next_encode_eom = FALSE	290:1:6453:6483	5252750	4	True				
ANR	5252800	AssignmentExpression	ignore_next_encode_eom = FALSE		5252750	0		=			
ANR	5252801	Identifier	ignore_next_encode_eom		5252750	0					
ANR	5252802	Identifier	FALSE		5252750	1					
ANR	5252803	ForStatement	for ( nw = 0 ; ; )		5252750	5					
ANR	5252804	ForInit	nw = 0 ;	291:5:6490:6494	5252750	0	True				
ANR	5252805	AssignmentExpression	nw = 0		5252750	0		=			
ANR	5252806	Identifier	nw		5252750	0					
ANR	5252807	PrimaryExpression	0		5252750	1					
ANR	5252808	CompoundStatement		9:13:203:203	5252750	1					
ANR	5252809	IfStatement	if ( snd_msg . buf . full ( ) )		5252750	0					
ANR	5252810	Condition	snd_msg . buf . full ( )	292:6:6506:6523	5252750	0	True				
ANR	5252811	CallExpression	snd_msg . buf . full ( )		5252750	0					
ANR	5252812	Callee	snd_msg . buf . full		5252750	0					
ANR	5252813	MemberAccess	snd_msg . buf . full		5252750	0					
ANR	5252814	MemberAccess	snd_msg . buf		5252750	0					
ANR	5252815	Identifier	snd_msg		5252750	0					
ANR	5252816	Identifier	buf		5252750	1					
ANR	5252817	Identifier	full		5252750	1					
ANR	5252818	ArgumentList			5252750	1					
ANR	5252819	CompoundStatement		10:26:231:231	5252750	1					
ANR	5252820	IfStatement	"if ( ! snd_msg . snd_packet ( peer_description ( ) , _sock , FALSE , _timeout ) )"		5252750	0					
ANR	5252821	Condition	"! snd_msg . snd_packet ( peer_description ( ) , _sock , FALSE , _timeout )"	293:7:6535:6597	5252750	0	True				
ANR	5252822	UnaryOperationExpression	"! snd_msg . snd_packet ( peer_description ( ) , _sock , FALSE , _timeout )"		5252750	0					
ANR	5252823	UnaryOperator	!		5252750	0					
ANR	5252824	CallExpression	"snd_msg . snd_packet ( peer_description ( ) , _sock , FALSE , _timeout )"		5252750	1					
ANR	5252825	Callee	snd_msg . snd_packet		5252750	0					
ANR	5252826	MemberAccess	snd_msg . snd_packet		5252750	0					
ANR	5252827	Identifier	snd_msg		5252750	0					
ANR	5252828	Identifier	snd_packet		5252750	1					
ANR	5252829	ArgumentList	peer_description ( )		5252750	1					
ANR	5252830	Argument	peer_description ( )		5252750	0					
ANR	5252831	CallExpression	peer_description ( )		5252750	0					
ANR	5252832	Callee	peer_description		5252750	0					
ANR	5252833	Identifier	peer_description		5252750	0					
ANR	5252834	ArgumentList			5252750	1					
ANR	5252835	Argument	_sock		5252750	1					
ANR	5252836	Identifier	_sock		5252750	0					
ANR	5252837	Argument	FALSE		5252750	2					
ANR	5252838	Identifier	FALSE		5252750	0					
ANR	5252839	Argument	_timeout		5252750	3					
ANR	5252840	Identifier	_timeout		5252750	0					
ANR	5252841	CompoundStatement		11:72:305:305	5252750	1					
ANR	5252842	IfStatement	if ( dta != NULL )		5252750	0					
ANR	5252843	Condition	dta != NULL	294:8:6610:6620	5252750	0	True				
ANR	5252844	EqualityExpression	dta != NULL		5252750	0		!=			
ANR	5252845	Identifier	dta		5252750	0					
ANR	5252846	Identifier	NULL		5252750	1					
ANR	5252847	CompoundStatement		12:21:328:328	5252750	1					
ANR	5252848	ExpressionStatement	free ( dta )	295:5:6630:6639	5252750	0	True				
ANR	5252849	CallExpression	free ( dta )		5252750	0					
ANR	5252850	Callee	free		5252750	0					
ANR	5252851	Identifier	free		5252750	0					
ANR	5252852	ArgumentList	dta		5252750	1					
ANR	5252853	Argument	dta		5252750	0					
ANR	5252854	Identifier	dta		5252750	0					
ANR	5252855	ExpressionStatement	dta = NULL	296:5:6646:6656	5252750	1	True				
ANR	5252856	AssignmentExpression	dta = NULL		5252750	0		=			
ANR	5252857	Identifier	dta		5252750	0					
ANR	5252858	Identifier	NULL		5252750	1					
ANR	5252859	ReturnStatement	return FALSE ;	298:4:6668:6680	5252750	1	True				
ANR	5252860	Identifier	FALSE		5252750	0					
ANR	5252861	IfStatement	if ( snd_msg . buf . empty ( ) )		5252750	1					
ANR	5252862	Condition	snd_msg . buf . empty ( )	301:6:6697:6715	5252750	0	True				
ANR	5252863	CallExpression	snd_msg . buf . empty ( )		5252750	0					
ANR	5252864	Callee	snd_msg . buf . empty		5252750	0					
ANR	5252865	MemberAccess	snd_msg . buf . empty		5252750	0					
ANR	5252866	MemberAccess	snd_msg . buf		5252750	0					
ANR	5252867	Identifier	snd_msg		5252750	0					
ANR	5252868	Identifier	buf		5252750	1					
ANR	5252869	Identifier	empty		5252750	1					
ANR	5252870	ArgumentList			5252750	1					
ANR	5252871	CompoundStatement		19:27:423:423	5252750	1					
ANR	5252872	ExpressionStatement	snd_msg . buf . seek ( header_size )	302:3:6723:6752	5252750	0	True				
ANR	5252873	CallExpression	snd_msg . buf . seek ( header_size )		5252750	0					
ANR	5252874	Callee	snd_msg . buf . seek		5252750	0					
ANR	5252875	MemberAccess	snd_msg . buf . seek		5252750	0					
ANR	5252876	MemberAccess	snd_msg . buf		5252750	0					
ANR	5252877	Identifier	snd_msg		5252750	0					
ANR	5252878	Identifier	buf		5252750	1					
ANR	5252879	Identifier	seek		5252750	1					
ANR	5252880	ArgumentList	header_size		5252750	1					
ANR	5252881	Argument	header_size		5252750	0					
ANR	5252882	Identifier	header_size		5252750	0					
ANR	5252883	IfStatement	"if ( ( tw = snd_msg . buf . put_max ( & ( ( char * ) dta ) [ nw ] , sz - nw ) ) < 0 )"		5252750	2					
ANR	5252884	Condition	"( tw = snd_msg . buf . put_max ( & ( ( char * ) dta ) [ nw ] , sz - nw ) ) < 0"	304:6:6764:6820	5252750	0	True				
ANR	5252885	RelationalExpression	"( tw = snd_msg . buf . put_max ( & ( ( char * ) dta ) [ nw ] , sz - nw ) ) < 0"		5252750	0		<			
ANR	5252886	AssignmentExpression	"tw = snd_msg . buf . put_max ( & ( ( char * ) dta ) [ nw ] , sz - nw )"		5252750	0		=			
ANR	5252887	Identifier	tw		5252750	0					
ANR	5252888	CallExpression	"snd_msg . buf . put_max ( & ( ( char * ) dta ) [ nw ] , sz - nw )"		5252750	1					
ANR	5252889	Callee	snd_msg . buf . put_max		5252750	0					
ANR	5252890	MemberAccess	snd_msg . buf . put_max		5252750	0					
ANR	5252891	MemberAccess	snd_msg . buf		5252750	0					
ANR	5252892	Identifier	snd_msg		5252750	0					
ANR	5252893	Identifier	buf		5252750	1					
ANR	5252894	Identifier	put_max		5252750	1					
ANR	5252895	ArgumentList	& ( ( char * ) dta ) [ nw ]		5252750	1					
ANR	5252896	Argument	& ( ( char * ) dta ) [ nw ]		5252750	0					
ANR	5252897	UnaryOperationExpression	& ( ( char * ) dta ) [ nw ]		5252750	0					
ANR	5252898	UnaryOperator	&		5252750	0					
ANR	5252899	ArrayIndexing	( ( char * ) dta ) [ nw ]		5252750	1					
ANR	5252900	CastExpression	( char * ) dta		5252750	0					
ANR	5252901	CastTarget	char *		5252750	0					
ANR	5252902	Identifier	dta		5252750	1					
ANR	5252903	Identifier	nw		5252750	1					
ANR	5252904	Argument	sz - nw		5252750	1					
ANR	5252905	AdditiveExpression	sz - nw		5252750	0		-			
ANR	5252906	Identifier	sz		5252750	0					
ANR	5252907	Identifier	nw		5252750	1					
ANR	5252908	PrimaryExpression	0		5252750	1					
ANR	5252909	CompoundStatement		22:65:528:528	5252750	1					
ANR	5252910	IfStatement	if ( dta != NULL )		5252750	0					
ANR	5252911	Condition	dta != NULL	305:7:6832:6842	5252750	0	True				
ANR	5252912	EqualityExpression	dta != NULL		5252750	0		!=			
ANR	5252913	Identifier	dta		5252750	0					
ANR	5252914	Identifier	NULL		5252750	1					
ANR	5252915	CompoundStatement		23:20:550:550	5252750	1					
ANR	5252916	ExpressionStatement	free ( dta )	306:4:6851:6860	5252750	0	True				
ANR	5252917	CallExpression	free ( dta )		5252750	0					
ANR	5252918	Callee	free		5252750	0					
ANR	5252919	Identifier	free		5252750	0					
ANR	5252920	ArgumentList	dta		5252750	1					
ANR	5252921	Argument	dta		5252750	0					
ANR	5252922	Identifier	dta		5252750	0					
ANR	5252923	ExpressionStatement	dta = NULL	307:4:6866:6876	5252750	1	True				
ANR	5252924	AssignmentExpression	dta = NULL		5252750	0		=			
ANR	5252925	Identifier	dta		5252750	0					
ANR	5252926	Identifier	NULL		5252750	1					
ANR	5252927	ReturnStatement	return - 1 ;	309:3:6886:6895	5252750	1	True				
ANR	5252928	UnaryOperationExpression	- 1		5252750	0					
ANR	5252929	UnaryOperator	-		5252750	0					
ANR	5252930	PrimaryExpression	1		5252750	1					
ANR	5252931	ExpressionStatement	nw += tw	311:2:6903:6911	5252750	3	True				
ANR	5252932	AssignmentExpression	nw += tw		5252750	0		+=			
ANR	5252933	Identifier	nw		5252750	0					
ANR	5252934	Identifier	tw		5252750	1					
ANR	5252935	IfStatement	if ( nw >= sz )		5252750	4					
ANR	5252936	Condition	nw >= sz	312:6:6919:6926	5252750	0	True				
ANR	5252937	RelationalExpression	nw >= sz		5252750	0		>=			
ANR	5252938	Identifier	nw		5252750	0					
ANR	5252939	Identifier	sz		5252750	1					
ANR	5252940	CompoundStatement		30:16:634:634	5252750	1					
ANR	5252941	BreakStatement	break ;	313:3:6934:6939	5252750	0	True				
ANR	5252942	IfStatement	if ( nw > 0 )		5252750	6					
ANR	5252943	Condition	nw > 0	316:5:6953:6958	5252750	0	True				
ANR	5252944	RelationalExpression	nw > 0		5252750	0		>			
ANR	5252945	Identifier	nw		5252750	0					
ANR	5252946	PrimaryExpression	0		5252750	1					
ANR	5252947	CompoundStatement		34:13:666:666	5252750	1					
ANR	5252948	ExpressionStatement	_bytes_sent += nw	317:2:6965:6982	5252750	0	True				
ANR	5252949	AssignmentExpression	_bytes_sent += nw		5252750	0		+=			
ANR	5252950	Identifier	_bytes_sent		5252750	0					
ANR	5252951	Identifier	nw		5252750	1					
ANR	5252952	IfStatement	if ( dta != NULL )		5252750	7					
ANR	5252953	Condition	dta != NULL	320:5:6993:7003	5252750	0	True				
ANR	5252954	EqualityExpression	dta != NULL		5252750	0		!=			
ANR	5252955	Identifier	dta		5252750	0					
ANR	5252956	Identifier	NULL		5252750	1					
ANR	5252957	CompoundStatement		38:18:711:711	5252750	1					
ANR	5252958	ExpressionStatement	free ( dta )	321:2:7010:7019	5252750	0	True				
ANR	5252959	CallExpression	free ( dta )		5252750	0					
ANR	5252960	Callee	free		5252750	0					
ANR	5252961	Identifier	free		5252750	0					
ANR	5252962	ArgumentList	dta		5252750	1					
ANR	5252963	Argument	dta		5252750	0					
ANR	5252964	Identifier	dta		5252750	0					
ANR	5252965	ExpressionStatement	dta = NULL	322:2:7023:7033	5252750	1	True				
ANR	5252966	AssignmentExpression	dta = NULL		5252750	0		=			
ANR	5252967	Identifier	dta		5252750	0					
ANR	5252968	Identifier	NULL		5252750	1					
ANR	5252969	ReturnStatement	return nw ;	324:1:7039:7048	5252750	8	True				
ANR	5252970	Identifier	nw		5252750	0					
ANR	5252971	ReturnType	int		5252750	1					
ANR	5252972	Identifier	StdUnivSock :: put_bytes		5252750	2					
ANR	5252973	ParameterList	"const void * data , int sz"		5252750	3					
ANR	5252974	Parameter	const void * data	282:23:6268:6283	5252750	0	True				
ANR	5252975	ParameterType	const void *		5252750	0					
ANR	5252976	Identifier	data		5252750	1					
ANR	5252977	Parameter	int sz	282:41:6286:6291	5252750	1	True				
ANR	5252978	ParameterType	int		5252750	0					
ANR	5252979	Identifier	sz		5252750	1					
ANR	5252980	CFGEntryNode	ENTRY		5252750		True				
ANR	5252981	CFGExitNode	EXIT		5252750		True				
ANR	5252982	InfiniteForNode	true		5252750		True				
ANR	5252983	Symbol	malloc		5252750						
ANR	5252984	Symbol	peer_description		5252750						
ANR	5252985	Symbol	tw		5252750						
ANR	5252986	Symbol	NULL		5252750						
ANR	5252987	Symbol	data		5252750						
ANR	5252988	Symbol	snd_msg		5252750						
ANR	5252989	Symbol	sz		5252750						
ANR	5252990	Symbol	header_size		5252750						
ANR	5252991	Symbol	snd_msg . buf . empty		5252750						
ANR	5252992	Symbol	nw		5252750						
ANR	5252993	Symbol	snd_msg . buf		5252750						
ANR	5252994	Symbol	snd_msg . snd_packet		5252750						
ANR	5252995	Symbol	snd_msg . buf . put_max		5252750						
ANR	5252996	Symbol	dta		5252750						
ANR	5252997	Symbol	_sock		5252750						
ANR	5252998	Symbol	_bytes_sent		5252750						
ANR	5252999	Symbol	NORMAL_HEADER_SIZE		5252750						
ANR	5253000	Symbol	FALSE		5252750						
ANR	5253001	Symbol	snd_msg . buf . full		5252750						
ANR	5253002	Symbol	ignore_next_encode_eom		5252750						
ANR	5253003	Symbol	_timeout		5252750						
ANR	5253004	Function	StdUnivSock :: get_bytes	328:0:7054:7367							
ANR	5253005	FunctionDef	"StdUnivSock :: get_bytes (void * dta , int max_sz)"		5253004	0					
ANR	5253006	CompoundStatement		330:0:7105:7367	5253004	0					
ANR	5253007	IdentifierDeclStatement	int bytes ;	331:1:7108:7118	5253004	0	True				
ANR	5253008	IdentifierDecl	bytes		5253004	0					
ANR	5253009	IdentifierDeclType	int		5253004	0					
ANR	5253010	Identifier	bytes		5253004	1					
ANR	5253011	ExpressionStatement	ignore_next_decode_eom = FALSE	333:1:7122:7152	5253004	1	True				
ANR	5253012	AssignmentExpression	ignore_next_decode_eom = FALSE		5253004	0		=			
ANR	5253013	Identifier	ignore_next_decode_eom		5253004	0					
ANR	5253014	Identifier	FALSE		5253004	1					
ANR	5253015	WhileStatement	while ( ! rcv_msg . ready )		5253004	2					
ANR	5253016	Condition	! rcv_msg . ready	335:8:7163:7176	5253004	0	True				
ANR	5253017	UnaryOperationExpression	! rcv_msg . ready		5253004	0					
ANR	5253018	UnaryOperator	!		5253004	0					
ANR	5253019	MemberAccess	rcv_msg . ready		5253004	1					
ANR	5253020	Identifier	rcv_msg		5253004	0					
ANR	5253021	Identifier	ready		5253004	1					
ANR	5253022	CompoundStatement		6:24:73:73	5253004	1					
ANR	5253023	IfStatement	if ( ! handle_incoming_packet ( ) )		5253004	0					
ANR	5253024	Condition	! handle_incoming_packet ( )	336:6:7187:7211	5253004	0	True				
ANR	5253025	UnaryOperationExpression	! handle_incoming_packet ( )		5253004	0					
ANR	5253026	UnaryOperator	!		5253004	0					
ANR	5253027	CallExpression	handle_incoming_packet ( )		5253004	1					
ANR	5253028	Callee	handle_incoming_packet		5253004	0					
ANR	5253029	Identifier	handle_incoming_packet		5253004	0					
ANR	5253030	ArgumentList			5253004	1					
ANR	5253031	CompoundStatement		7:32:107:107	5253004	1					
ANR	5253032	ReturnStatement	return FALSE ;	337:3:7218:7230	5253004	0	True				
ANR	5253033	Identifier	FALSE		5253004	0					
ANR	5253034	ExpressionStatement	"bytes = rcv_msg . buf . get ( dta , max_sz )"	341:1:7241:7277	5253004	3	True				
ANR	5253035	AssignmentExpression	"bytes = rcv_msg . buf . get ( dta , max_sz )"		5253004	0		=			
ANR	5253036	Identifier	bytes		5253004	0					
ANR	5253037	CallExpression	"rcv_msg . buf . get ( dta , max_sz )"		5253004	1					
ANR	5253038	Callee	rcv_msg . buf . get		5253004	0					
ANR	5253039	MemberAccess	rcv_msg . buf . get		5253004	0					
ANR	5253040	MemberAccess	rcv_msg . buf		5253004	0					
ANR	5253041	Identifier	rcv_msg		5253004	0					
ANR	5253042	Identifier	buf		5253004	1					
ANR	5253043	Identifier	get		5253004	1					
ANR	5253044	ArgumentList	dta		5253004	1					
ANR	5253045	Argument	dta		5253004	0					
ANR	5253046	Identifier	dta		5253004	0					
ANR	5253047	Argument	max_sz		5253004	1					
ANR	5253048	Identifier	max_sz		5253004	0					
ANR	5253049	IfStatement	if ( bytes > 0 )		5253004	4					
ANR	5253050	Condition	bytes > 0	343:5:7285:7293	5253004	0	True				
ANR	5253051	RelationalExpression	bytes > 0		5253004	0		>			
ANR	5253052	Identifier	bytes		5253004	0					
ANR	5253053	PrimaryExpression	0		5253004	1					
ANR	5253054	CompoundStatement		14:16:190:190	5253004	1					
ANR	5253055	ExpressionStatement	_bytes_recvd += bytes	344:12:7310:7331	5253004	0	True				
ANR	5253056	AssignmentExpression	_bytes_recvd += bytes		5253004	0		+=			
ANR	5253057	Identifier	_bytes_recvd		5253004	0					
ANR	5253058	Identifier	bytes		5253004	1					
ANR	5253059	ReturnStatement	return bytes ;	347:1:7353:7365	5253004	5	True				
ANR	5253060	Identifier	bytes		5253004	0					
ANR	5253061	ReturnType	int		5253004	1					
ANR	5253062	Identifier	StdUnivSock :: get_bytes		5253004	2					
ANR	5253063	ParameterList	"void * dta , int max_sz"		5253004	3					
ANR	5253064	Parameter	void * dta	329:23:7082:7090	5253004	0	True				
ANR	5253065	ParameterType	void *		5253004	0					
ANR	5253066	Identifier	dta		5253004	1					
ANR	5253067	Parameter	int max_sz	329:34:7093:7102	5253004	1	True				
ANR	5253068	ParameterType	int		5253004	0					
ANR	5253069	Identifier	max_sz		5253004	1					
ANR	5253070	CFGEntryNode	ENTRY		5253004		True				
ANR	5253071	CFGExitNode	EXIT		5253004		True				
ANR	5253072	Symbol	dta		5253004						
ANR	5253073	Symbol	ignore_next_decode_eom		5253004						
ANR	5253074	Symbol	bytes		5253004						
ANR	5253075	Symbol	rcv_msg		5253004						
ANR	5253076	Symbol	FALSE		5253004						
ANR	5253077	Symbol	_bytes_recvd		5253004						
ANR	5253078	Symbol	max_sz		5253004						
ANR	5253079	Symbol	handle_incoming_packet		5253004						
ANR	5253080	Symbol	rcv_msg . buf		5253004						
ANR	5253081	Symbol	rcv_msg . ready		5253004						
ANR	5253082	Symbol	rcv_msg . buf . get		5253004						
ANR	5253083	Function	StdUnivSock :: get_ptr	351:0:7371:7549							
ANR	5253084	FunctionDef	"StdUnivSock :: get_ptr (void * & ptr , char delim)"		5253083	0					
ANR	5253085	CompoundStatement		352:0:7421:7549	5253083	0					
ANR	5253086	WhileStatement	while ( ! rcv_msg . ready )		5253083	0					
ANR	5253087	Condition	! rcv_msg . ready	353:8:7431:7444	5253083	0	True				
ANR	5253088	UnaryOperationExpression	! rcv_msg . ready		5253083	0					
ANR	5253089	UnaryOperator	!		5253083	0					
ANR	5253090	MemberAccess	rcv_msg . ready		5253083	1					
ANR	5253091	Identifier	rcv_msg		5253083	0					
ANR	5253092	Identifier	ready		5253083	1					
ANR	5253093	CompoundStatement		2:23:24:24	5253083	1					
ANR	5253094	IfStatement	if ( ! handle_incoming_packet ( ) )		5253083	0					
ANR	5253095	Condition	! handle_incoming_packet ( )	354:6:7454:7478	5253083	0	True				
ANR	5253096	UnaryOperationExpression	! handle_incoming_packet ( )		5253083	0					
ANR	5253097	UnaryOperator	!		5253083	0					
ANR	5253098	CallExpression	handle_incoming_packet ( )		5253083	1					
ANR	5253099	Callee	handle_incoming_packet		5253083	0					
ANR	5253100	Identifier	handle_incoming_packet		5253083	0					
ANR	5253101	ArgumentList			5253083	1					
ANR	5253102	CompoundStatement		3:33:59:59	5253083	1					
ANR	5253103	ReturnStatement	return FALSE ;	355:3:7486:7498	5253083	0	True				
ANR	5253104	Identifier	FALSE		5253083	0					
ANR	5253105	ReturnStatement	"return rcv_msg . buf . get_tmp ( ptr , delim ) ;"	359:1:7509:7547	5253083	1	True				
ANR	5253106	CallExpression	"rcv_msg . buf . get_tmp ( ptr , delim )"		5253083	0					
ANR	5253107	Callee	rcv_msg . buf . get_tmp		5253083	0					
ANR	5253108	MemberAccess	rcv_msg . buf . get_tmp		5253083	0					
ANR	5253109	MemberAccess	rcv_msg . buf		5253083	0					
ANR	5253110	Identifier	rcv_msg		5253083	0					
ANR	5253111	Identifier	buf		5253083	1					
ANR	5253112	Identifier	get_tmp		5253083	1					
ANR	5253113	ArgumentList	ptr		5253083	1					
ANR	5253114	Argument	ptr		5253083	0					
ANR	5253115	Identifier	ptr		5253083	0					
ANR	5253116	Argument	delim		5253083	1					
ANR	5253117	Identifier	delim		5253083	0					
ANR	5253118	ReturnType	int		5253083	1					
ANR	5253119	Identifier	StdUnivSock :: get_ptr		5253083	2					
ANR	5253120	ParameterList	"void * & ptr , char delim"		5253083	3					
ANR	5253121	Parameter	void * & ptr	351:26:7397:7406	5253083	0	True				
ANR	5253122	ParameterType	void * &		5253083	0					
ANR	5253123	Identifier	ptr		5253083	1					
ANR	5253124	Parameter	char delim	351:38:7409:7418	5253083	1	True				
ANR	5253125	ParameterType	char		5253083	0					
ANR	5253126	Identifier	delim		5253083	1					
ANR	5253127	CFGEntryNode	ENTRY		5253083		True				
ANR	5253128	CFGExitNode	EXIT		5253083		True				
ANR	5253129	Symbol	rcv_msg		5253083						
ANR	5253130	Symbol	FALSE		5253083						
ANR	5253131	Symbol	rcv_msg . buf . get_tmp		5253083						
ANR	5253132	Symbol	handle_incoming_packet		5253083						
ANR	5253133	Symbol	rcv_msg . buf		5253083						
ANR	5253134	Symbol	ptr		5253083						
ANR	5253135	Symbol	delim		5253083						
ANR	5253136	Symbol	rcv_msg . ready		5253083						
ANR	5253137	Function	StdUnivSock :: peek	363:0:7553:7702							
ANR	5253138	FunctionDef	StdUnivSock :: peek (char & c)		5253137	0					
ANR	5253139	CompoundStatement		364:0:7585:7702	5253137	0					
ANR	5253140	WhileStatement	while ( ! rcv_msg . ready )		5253137	0					
ANR	5253141	Condition	! rcv_msg . ready	365:8:7595:7608	5253137	0	True				
ANR	5253142	UnaryOperationExpression	! rcv_msg . ready		5253137	0					
ANR	5253143	UnaryOperator	!		5253137	0					
ANR	5253144	MemberAccess	rcv_msg . ready		5253137	1					
ANR	5253145	Identifier	rcv_msg		5253137	0					
ANR	5253146	Identifier	ready		5253137	1					
ANR	5253147	CompoundStatement		2:24:25:25	5253137	1					
ANR	5253148	IfStatement	if ( ! handle_incoming_packet ( ) )		5253137	0					
ANR	5253149	Condition	! handle_incoming_packet ( )	366:6:7619:7643	5253137	0	True				
ANR	5253150	UnaryOperationExpression	! handle_incoming_packet ( )		5253137	0					
ANR	5253151	UnaryOperator	!		5253137	0					
ANR	5253152	CallExpression	handle_incoming_packet ( )		5253137	1					
ANR	5253153	Callee	handle_incoming_packet		5253137	0					
ANR	5253154	Identifier	handle_incoming_packet		5253137	0					
ANR	5253155	ArgumentList			5253137	1					
ANR	5253156	CompoundStatement		3:33:60:60	5253137	1					
ANR	5253157	ReturnStatement	return FALSE ;	367:3:7651:7663	5253137	0	True				
ANR	5253158	Identifier	FALSE		5253137	0					
ANR	5253159	ReturnStatement	return rcv_msg . buf . peek ( c ) ;	371:1:7674:7700	5253137	1	True				
ANR	5253160	CallExpression	rcv_msg . buf . peek ( c )		5253137	0					
ANR	5253161	Callee	rcv_msg . buf . peek		5253137	0					
ANR	5253162	MemberAccess	rcv_msg . buf . peek		5253137	0					
ANR	5253163	MemberAccess	rcv_msg . buf		5253137	0					
ANR	5253164	Identifier	rcv_msg		5253137	0					
ANR	5253165	Identifier	buf		5253137	1					
ANR	5253166	Identifier	peek		5253137	1					
ANR	5253167	ArgumentList	c		5253137	1					
ANR	5253168	Argument	c		5253137	0					
ANR	5253169	Identifier	c		5253137	0					
ANR	5253170	ReturnType	int		5253137	1					
ANR	5253171	Identifier	StdUnivSock :: peek		5253137	2					
ANR	5253172	ParameterList	char & c		5253137	3					
ANR	5253173	Parameter	char & c	363:23:7576:7582	5253137	0	True				
ANR	5253174	ParameterType	char &		5253137	0					
ANR	5253175	Identifier	c		5253137	1					
ANR	5253176	CFGEntryNode	ENTRY		5253137		True				
ANR	5253177	CFGExitNode	EXIT		5253137		True				
ANR	5253178	Symbol	c		5253137						
ANR	5253179	Symbol	rcv_msg . buf . peek		5253137						
ANR	5253180	Symbol	rcv_msg		5253137						
ANR	5253181	Symbol	FALSE		5253137						
ANR	5253182	Symbol	handle_incoming_packet		5253137						
ANR	5253183	Symbol	rcv_msg . buf		5253137						
ANR	5253184	Symbol	rcv_msg . ready		5253137						
ANR	5253185	Function	StdUnivSock :: RcvMsg :: RcvMsg	374:0:7705:7759							
ANR	5253186	FunctionDef	StdUnivSock :: RcvMsg :: RcvMsg ()		5253185	0					
ANR	5253187	CompoundStatement		374:53:7758:7759	5253185	0					
ANR	5253188	Identifier	StdUnivSock :: RcvMsg :: RcvMsg		5253185	1					
ANR	5253189	ParameterList			5253185	2					
ANR	5253190	CFGEntryNode	ENTRY		5253185		True				
ANR	5253191	CFGExitNode	EXIT		5253185		True				
ANR	5253192	Function	StdUnivSock :: RcvMsg :: ~RcvMsg	376:0:7762:7794							
ANR	5253193	FunctionDef	StdUnivSock :: RcvMsg :: ~RcvMsg ()		5253192	0					
ANR	5253194	CompoundStatement		376:31:7793:7794	5253192	0					
ANR	5253195	Identifier	StdUnivSock :: RcvMsg :: ~RcvMsg		5253192	1					
ANR	5253196	ParameterList			5253192	2					
ANR	5253197	CFGEntryNode	ENTRY		5253192		True				
ANR	5253198	CFGExitNode	EXIT		5253192		True				
ANR	5253199	Function	StdUnivSock :: RcvMsg :: rcv_packet	378:0:7797:9334							
ANR	5253200	FunctionDef	"StdUnivSock :: RcvMsg :: rcv_packet (char const * peer_description , SOCKET _sock , int _timeout)"		5253199	0					
ANR	5253201	CompoundStatement		379:0:7892:9334	5253199	0					
ANR	5253202	IdentifierDeclStatement	StdUnivBuf * tmp ;	380:1:7895:7911	5253199	0	True				
ANR	5253203	IdentifierDecl	* tmp		5253199	0					
ANR	5253204	IdentifierDeclType	StdUnivBuf *		5253199	0					
ANR	5253205	Identifier	tmp		5253199	1					
ANR	5253206	IdentifierDeclStatement	char hdr [ MAX_HEADER_SIZE ] ;	381:1:7914:7947	5253199	1	True				
ANR	5253207	IdentifierDecl	hdr [ MAX_HEADER_SIZE ]		5253199	0					
ANR	5253208	IdentifierDeclType	char [ MAX_HEADER_SIZE ]		5253199	0					
ANR	5253209	Identifier	hdr		5253199	1					
ANR	5253210	Identifier	MAX_HEADER_SIZE		5253199	2					
ANR	5253211	IdentifierDeclStatement	int end ;	382:1:7950:7958	5253199	2	True				
ANR	5253212	IdentifierDecl	end		5253199	0					
ANR	5253213	IdentifierDeclType	int		5253199	0					
ANR	5253214	Identifier	end		5253199	1					
ANR	5253215	IdentifierDeclStatement	"int len , len_t , header_size ;"	383:1:7961:7989	5253199	3	True				
ANR	5253216	IdentifierDecl	len		5253199	0					
ANR	5253217	IdentifierDeclType	int		5253199	0					
ANR	5253218	Identifier	len		5253199	1					
ANR	5253219	IdentifierDecl	len_t		5253199	1					
ANR	5253220	IdentifierDeclType	int		5253199	0					
ANR	5253221	Identifier	len_t		5253199	1					
ANR	5253222	IdentifierDecl	header_size		5253199	2					
ANR	5253223	IdentifierDeclType	int		5253199	0					
ANR	5253224	Identifier	header_size		5253199	1					
ANR	5253225	IdentifierDeclStatement	int tmp_len ;	384:1:7992:8004	5253199	4	True				
ANR	5253226	IdentifierDecl	tmp_len		5253199	0					
ANR	5253227	IdentifierDeclType	int		5253199	0					
ANR	5253228	Identifier	tmp_len		5253199	1					
ANR	5253229	ExpressionStatement	header_size = NORMAL_HEADER_SIZE	386:1:8008:8040	5253199	5	True				
ANR	5253230	AssignmentExpression	header_size = NORMAL_HEADER_SIZE		5253199	0		=			
ANR	5253231	Identifier	header_size		5253199	0					
ANR	5253232	Identifier	NORMAL_HEADER_SIZE		5253199	1					
ANR	5253233	IdentifierDeclStatement	"int retval = condor_read ( peer_description , _sock , hdr , header_size , _timeout ) ;"	388:1:8044:8117	5253199	6	True				
ANR	5253234	IdentifierDecl	"retval = condor_read ( peer_description , _sock , hdr , header_size , _timeout )"		5253199	0					
ANR	5253235	IdentifierDeclType	int		5253199	0					
ANR	5253236	Identifier	retval		5253199	1					
ANR	5253237	AssignmentExpression	"retval = condor_read ( peer_description , _sock , hdr , header_size , _timeout )"		5253199	2		=			
ANR	5253238	Identifier	retval		5253199	0					
ANR	5253239	CallExpression	"condor_read ( peer_description , _sock , hdr , header_size , _timeout )"		5253199	1					
ANR	5253240	Callee	condor_read		5253199	0					
ANR	5253241	Identifier	condor_read		5253199	0					
ANR	5253242	ArgumentList	peer_description		5253199	1					
ANR	5253243	Argument	peer_description		5253199	0					
ANR	5253244	Identifier	peer_description		5253199	0					
ANR	5253245	Argument	_sock		5253199	1					
ANR	5253246	Identifier	_sock		5253199	0					
ANR	5253247	Argument	hdr		5253199	2					
ANR	5253248	Identifier	hdr		5253199	0					
ANR	5253249	Argument	header_size		5253199	3					
ANR	5253250	Identifier	header_size		5253199	0					
ANR	5253251	Argument	_timeout		5253199	4					
ANR	5253252	Identifier	_timeout		5253199	0					
ANR	5253253	IfStatement	if ( retval < 0 && retval != - 2 )		5253199	7					
ANR	5253254	Condition	retval < 0 && retval != - 2	389:6:8125:8154	5253199	0	True				
ANR	5253255	AndExpression	retval < 0 && retval != - 2		5253199	0		&&			
ANR	5253256	RelationalExpression	retval < 0		5253199	0		<			
ANR	5253257	Identifier	retval		5253199	0					
ANR	5253258	PrimaryExpression	0		5253199	1					
ANR	5253259	EqualityExpression	retval != - 2		5253199	1		!=			
ANR	5253260	Identifier	retval		5253199	0					
ANR	5253261	UnaryOperationExpression	- 2		5253199	1					
ANR	5253262	UnaryOperator	-		5253199	0					
ANR	5253263	PrimaryExpression	2		5253199	1					
ANR	5253264	CompoundStatement		13:1:306:306	5253199	1					
ANR	5253265	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Failed to read packet header\\n"" )"	392:2:8203:8257	5253199	0	True				
ANR	5253266	CallExpression	"dprintf ( D_ALWAYS , ""IO: Failed to read packet header\\n"" )"		5253199	0					
ANR	5253267	Callee	dprintf		5253199	0					
ANR	5253268	Identifier	dprintf		5253199	0					
ANR	5253269	ArgumentList	D_ALWAYS		5253199	1					
ANR	5253270	Argument	D_ALWAYS		5253199	0					
ANR	5253271	Identifier	D_ALWAYS		5253199	0					
ANR	5253272	Argument	"""IO: Failed to read packet header\\n"""		5253199	1					
ANR	5253273	PrimaryExpression	"""IO: Failed to read packet header\\n"""		5253199	0					
ANR	5253274	ReturnStatement	return FALSE ;	393:2:8261:8273	5253199	1	True				
ANR	5253275	Identifier	FALSE		5253199	0					
ANR	5253276	IfStatement	if ( retval == - 2 )		5253199	8					
ANR	5253277	Condition	retval == - 2	395:6:8284:8295	5253199	0	True				
ANR	5253278	EqualityExpression	retval == - 2		5253199	0		==			
ANR	5253279	Identifier	retval		5253199	0					
ANR	5253280	UnaryOperationExpression	- 2		5253199	1					
ANR	5253281	UnaryOperator	-		5253199	0					
ANR	5253282	PrimaryExpression	2		5253199	1					
ANR	5253283	CompoundStatement		17:21:406:406	5253199	1					
ANR	5253284	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""IO: EOF reading packet header\\n"" )"	396:2:8343:8397	5253199	0	True				
ANR	5253285	CallExpression	"dprintf ( D_FULLDEBUG , ""IO: EOF reading packet header\\n"" )"		5253199	0					
ANR	5253286	Callee	dprintf		5253199	0					
ANR	5253287	Identifier	dprintf		5253199	0					
ANR	5253288	ArgumentList	D_FULLDEBUG		5253199	1					
ANR	5253289	Argument	D_FULLDEBUG		5253199	0					
ANR	5253290	Identifier	D_FULLDEBUG		5253199	0					
ANR	5253291	Argument	"""IO: EOF reading packet header\\n"""		5253199	1					
ANR	5253292	PrimaryExpression	"""IO: EOF reading packet header\\n"""		5253199	0					
ANR	5253293	ReturnStatement	return FALSE ;	397:2:8401:8413	5253199	1	True				
ANR	5253294	Identifier	FALSE		5253199	0					
ANR	5253295	ExpressionStatement	end = ( int ) ( ( char * ) hdr ) [ 0 ]	399:1:8419:8447	5253199	9	True				
ANR	5253296	AssignmentExpression	end = ( int ) ( ( char * ) hdr ) [ 0 ]		5253199	0		=			
ANR	5253297	Identifier	end		5253199	0					
ANR	5253298	CastExpression	( int ) ( ( char * ) hdr ) [ 0 ]		5253199	1					
ANR	5253299	CastTarget	int		5253199	0					
ANR	5253300	ArrayIndexing	( ( char * ) hdr ) [ 0 ]		5253199	1					
ANR	5253301	CastExpression	( char * ) hdr		5253199	0					
ANR	5253302	CastTarget	char *		5253199	0					
ANR	5253303	Identifier	hdr		5253199	1					
ANR	5253304	PrimaryExpression	0		5253199	1					
ANR	5253305	ExpressionStatement	"memcpy ( & len_t , & hdr [ 1 ] , 4 )"	400:1:8450:8477	5253199	10	True				
ANR	5253306	CallExpression	"memcpy ( & len_t , & hdr [ 1 ] , 4 )"		5253199	0					
ANR	5253307	Callee	memcpy		5253199	0					
ANR	5253308	Identifier	memcpy		5253199	0					
ANR	5253309	ArgumentList	& len_t		5253199	1					
ANR	5253310	Argument	& len_t		5253199	0					
ANR	5253311	UnaryOperationExpression	& len_t		5253199	0					
ANR	5253312	UnaryOperator	&		5253199	0					
ANR	5253313	Identifier	len_t		5253199	1					
ANR	5253314	Argument	& hdr [ 1 ]		5253199	1					
ANR	5253315	UnaryOperationExpression	& hdr [ 1 ]		5253199	0					
ANR	5253316	UnaryOperator	&		5253199	0					
ANR	5253317	ArrayIndexing	hdr [ 1 ]		5253199	1					
ANR	5253318	Identifier	hdr		5253199	0					
ANR	5253319	PrimaryExpression	1		5253199	1					
ANR	5253320	Argument	4		5253199	2					
ANR	5253321	PrimaryExpression	4		5253199	0					
ANR	5253322	ExpressionStatement	len = ( int ) ntohl ( len_t )	401:1:8480:8504	5253199	11	True				
ANR	5253323	AssignmentExpression	len = ( int ) ntohl ( len_t )		5253199	0		=			
ANR	5253324	Identifier	len		5253199	0					
ANR	5253325	CastExpression	( int ) ntohl ( len_t )		5253199	1					
ANR	5253326	CastTarget	int		5253199	0					
ANR	5253327	CallExpression	ntohl ( len_t )		5253199	1					
ANR	5253328	Callee	ntohl		5253199	0					
ANR	5253329	Identifier	ntohl		5253199	0					
ANR	5253330	ArgumentList	len_t		5253199	1					
ANR	5253331	Argument	len_t		5253199	0					
ANR	5253332	Identifier	len_t		5253199	0					
ANR	5253333	IfStatement	if ( end < 0 || end > 10 )		5253199	12					
ANR	5253334	Condition	end < 0 || end > 10	403:5:8512:8530	5253199	0	True				
ANR	5253335	OrExpression	end < 0 || end > 10		5253199	0		||			
ANR	5253336	RelationalExpression	end < 0		5253199	0		<			
ANR	5253337	Identifier	end		5253199	0					
ANR	5253338	PrimaryExpression	0		5253199	1					
ANR	5253339	RelationalExpression	end > 10		5253199	1		>			
ANR	5253340	Identifier	end		5253199	0					
ANR	5253341	PrimaryExpression	10		5253199	1					
ANR	5253342	CompoundStatement		25:26:640:640	5253199	1					
ANR	5253343	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Incoming packet header unrecognized\\n"" )"	404:2:8537:8598	5253199	0	True				
ANR	5253344	CallExpression	"dprintf ( D_ALWAYS , ""IO: Incoming packet header unrecognized\\n"" )"		5253199	0					
ANR	5253345	Callee	dprintf		5253199	0					
ANR	5253346	Identifier	dprintf		5253199	0					
ANR	5253347	ArgumentList	D_ALWAYS		5253199	1					
ANR	5253348	Argument	D_ALWAYS		5253199	0					
ANR	5253349	Identifier	D_ALWAYS		5253199	0					
ANR	5253350	Argument	"""IO: Incoming packet header unrecognized\\n"""		5253199	1					
ANR	5253351	PrimaryExpression	"""IO: Incoming packet header unrecognized\\n"""		5253199	0					
ANR	5253352	ReturnStatement	return FALSE ;	405:2:8602:8614	5253199	1	True				
ANR	5253353	Identifier	FALSE		5253199	0					
ANR	5253354	Statement	if	408:1:8629:8630	5253199	13	True				
ANR	5253355	Statement	(	408:4:8632:8632	5253199	14	True				
ANR	5253356	Statement	!	408:5:8633:8633	5253199	15	True				
ANR	5253357	Statement	(	408:6:8634:8634	5253199	16	True				
ANR	5253358	Statement	tmp	408:7:8635:8637	5253199	17	True				
ANR	5253359	Statement	=	408:11:8639:8639	5253199	18	True				
ANR	5253360	Statement	new	408:13:8641:8643	5253199	19	True				
ANR	5253361	Statement	StdUnivBuf	408:17:8645:8654	5253199	20	True				
ANR	5253362	Statement	)	408:27:8655:8655	5253199	21	True				
ANR	5253363	Statement	)	408:28:8656:8656	5253199	22	True				
ANR	5253364	CompoundStatement		30:29:764:764	5253199	23					
ANR	5253365	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Out of memory\\n"" )"	409:2:8661:8701	5253199	0	True				
ANR	5253366	CallExpression	"dprintf ( D_ALWAYS , ""IO: Out of memory\\n"" )"		5253199	0					
ANR	5253367	Callee	dprintf		5253199	0					
ANR	5253368	Identifier	dprintf		5253199	0					
ANR	5253369	ArgumentList	D_ALWAYS		5253199	1					
ANR	5253370	Argument	D_ALWAYS		5253199	0					
ANR	5253371	Identifier	D_ALWAYS		5253199	0					
ANR	5253372	Argument	"""IO: Out of memory\\n"""		5253199	1					
ANR	5253373	PrimaryExpression	"""IO: Out of memory\\n"""		5253199	0					
ANR	5253374	ReturnStatement	return FALSE ;	410:2:8705:8717	5253199	1	True				
ANR	5253375	Identifier	FALSE		5253199	0					
ANR	5253376	IfStatement	if ( len > tmp -> max_size ( ) )		5253199	24					
ANR	5253377	Condition	len > tmp -> max_size ( )	412:5:8727:8747	5253199	0	True				
ANR	5253378	RelationalExpression	len > tmp -> max_size ( )		5253199	0		>			
ANR	5253379	Identifier	len		5253199	0					
ANR	5253380	CallExpression	tmp -> max_size ( )		5253199	1					
ANR	5253381	Callee	tmp -> max_size		5253199	0					
ANR	5253382	PtrMemberAccess	tmp -> max_size		5253199	0					
ANR	5253383	Identifier	tmp		5253199	0					
ANR	5253384	Identifier	max_size		5253199	1					
ANR	5253385	ArgumentList			5253199	1					
ANR	5253386	CompoundStatement		34:27:856:856	5253199	1					
ANR	5253387	Statement	delete	413:2:8753:8758	5253199	0	True				
ANR	5253388	ExpressionStatement	tmp	413:9:8760:8763	5253199	1	True				
ANR	5253389	Identifier	tmp		5253199	0					
ANR	5253390	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Incoming packet is too big\\n"" )"	414:2:8767:8820	5253199	2	True				
ANR	5253391	CallExpression	"dprintf ( D_ALWAYS , ""IO: Incoming packet is too big\\n"" )"		5253199	0					
ANR	5253392	Callee	dprintf		5253199	0					
ANR	5253393	Identifier	dprintf		5253199	0					
ANR	5253394	ArgumentList	D_ALWAYS		5253199	1					
ANR	5253395	Argument	D_ALWAYS		5253199	0					
ANR	5253396	Identifier	D_ALWAYS		5253199	0					
ANR	5253397	Argument	"""IO: Incoming packet is too big\\n"""		5253199	1					
ANR	5253398	PrimaryExpression	"""IO: Incoming packet is too big\\n"""		5253199	0					
ANR	5253399	ReturnStatement	return FALSE ;	415:2:8824:8836	5253199	3	True				
ANR	5253400	Identifier	FALSE		5253199	0					
ANR	5253401	IfStatement	if ( len <= 0 )		5253199	25					
ANR	5253402	Condition	len <= 0	417:5:8846:8853	5253199	0	True				
ANR	5253403	RelationalExpression	len <= 0		5253199	0		<=			
ANR	5253404	Identifier	len		5253199	0					
ANR	5253405	PrimaryExpression	0		5253199	1					
ANR	5253406	CompoundStatement		40:1:964:964	5253199	1					
ANR	5253407	Statement	delete	419:2:8861:8866	5253199	0	True				
ANR	5253408	ExpressionStatement	tmp	419:9:8868:8871	5253199	1	True				
ANR	5253409	Identifier	tmp		5253199	0					
ANR	5253410	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Incoming packet improperly sized (len=%d,end=%d)\\n"" , len , end )"	420:2:8875:8966	5253199	2	True				
ANR	5253411	CallExpression	"dprintf ( D_ALWAYS , ""IO: Incoming packet improperly sized (len=%d,end=%d)\\n"" , len , end )"		5253199	0					
ANR	5253412	Callee	dprintf		5253199	0					
ANR	5253413	Identifier	dprintf		5253199	0					
ANR	5253414	ArgumentList	D_ALWAYS		5253199	1					
ANR	5253415	Argument	D_ALWAYS		5253199	0					
ANR	5253416	Identifier	D_ALWAYS		5253199	0					
ANR	5253417	Argument	"""IO: Incoming packet improperly sized (len=%d,end=%d)\\n"""		5253199	1					
ANR	5253418	PrimaryExpression	"""IO: Incoming packet improperly sized (len=%d,end=%d)\\n"""		5253199	0					
ANR	5253419	Argument	len		5253199	2					
ANR	5253420	Identifier	len		5253199	0					
ANR	5253421	Argument	end		5253199	3					
ANR	5253422	Identifier	end		5253199	0					
ANR	5253423	ReturnStatement	return FALSE ;	423:2:8970:8982	5253199	3	True				
ANR	5253424	Identifier	FALSE		5253199	0					
ANR	5253425	IfStatement	"if ( ( tmp_len = tmp -> read ( peer_description , _sock , len , _timeout ) ) != len )"		5253199	26					
ANR	5253426	Condition	"( tmp_len = tmp -> read ( peer_description , _sock , len , _timeout ) ) != len"	425:5:8992:9059	5253199	0	True				
ANR	5253427	EqualityExpression	"( tmp_len = tmp -> read ( peer_description , _sock , len , _timeout ) ) != len"		5253199	0		!=			
ANR	5253428	AssignmentExpression	"tmp_len = tmp -> read ( peer_description , _sock , len , _timeout )"		5253199	0		=			
ANR	5253429	Identifier	tmp_len		5253199	0					
ANR	5253430	CallExpression	"tmp -> read ( peer_description , _sock , len , _timeout )"		5253199	1					
ANR	5253431	Callee	tmp -> read		5253199	0					
ANR	5253432	PtrMemberAccess	tmp -> read		5253199	0					
ANR	5253433	Identifier	tmp		5253199	0					
ANR	5253434	Identifier	read		5253199	1					
ANR	5253435	ArgumentList	peer_description		5253199	1					
ANR	5253436	Argument	peer_description		5253199	0					
ANR	5253437	Identifier	peer_description		5253199	0					
ANR	5253438	Argument	_sock		5253199	1					
ANR	5253439	Identifier	_sock		5253199	0					
ANR	5253440	Argument	len		5253199	2					
ANR	5253441	Identifier	len		5253199	0					
ANR	5253442	Argument	_timeout		5253199	3					
ANR	5253443	Identifier	_timeout		5253199	0					
ANR	5253444	Identifier	len		5253199	1					
ANR	5253445	CompoundStatement		47:74:1168:1168	5253199	1					
ANR	5253446	Statement	delete	426:2:9065:9070	5253199	0	True				
ANR	5253447	ExpressionStatement	tmp	426:9:9072:9075	5253199	1	True				
ANR	5253448	Identifier	tmp		5253199	0					
ANR	5253449	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Packet read failed: read %d of %d\\n"" , tmp_len , len )"	427:2:9079:9157	5253199	2	True				
ANR	5253450	CallExpression	"dprintf ( D_ALWAYS , ""IO: Packet read failed: read %d of %d\\n"" , tmp_len , len )"		5253199	0					
ANR	5253451	Callee	dprintf		5253199	0					
ANR	5253452	Identifier	dprintf		5253199	0					
ANR	5253453	ArgumentList	D_ALWAYS		5253199	1					
ANR	5253454	Argument	D_ALWAYS		5253199	0					
ANR	5253455	Identifier	D_ALWAYS		5253199	0					
ANR	5253456	Argument	"""IO: Packet read failed: read %d of %d\\n"""		5253199	1					
ANR	5253457	PrimaryExpression	"""IO: Packet read failed: read %d of %d\\n"""		5253199	0					
ANR	5253458	Argument	tmp_len		5253199	2					
ANR	5253459	Identifier	tmp_len		5253199	0					
ANR	5253460	Argument	len		5253199	3					
ANR	5253461	Identifier	len		5253199	0					
ANR	5253462	ReturnStatement	return FALSE ;	429:2:9161:9173	5253199	3	True				
ANR	5253463	Identifier	FALSE		5253199	0					
ANR	5253464	IfStatement	if ( ! buf . put ( tmp ) )		5253199	27					
ANR	5253465	Condition	! buf . put ( tmp )	432:5:9184:9196	5253199	0	True				
ANR	5253466	UnaryOperationExpression	! buf . put ( tmp )		5253199	0					
ANR	5253467	UnaryOperator	!		5253199	0					
ANR	5253468	CallExpression	buf . put ( tmp )		5253199	1					
ANR	5253469	Callee	buf . put		5253199	0					
ANR	5253470	MemberAccess	buf . put		5253199	0					
ANR	5253471	Identifier	buf		5253199	0					
ANR	5253472	Identifier	put		5253199	1					
ANR	5253473	ArgumentList	tmp		5253199	1					
ANR	5253474	Argument	tmp		5253199	0					
ANR	5253475	Identifier	tmp		5253199	0					
ANR	5253476	CompoundStatement		54:20:1306:1306	5253199	1					
ANR	5253477	Statement	delete	433:2:9203:9208	5253199	0	True				
ANR	5253478	ExpressionStatement	tmp	433:9:9210:9213	5253199	1	True				
ANR	5253479	Identifier	tmp		5253199	0					
ANR	5253480	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Packet storing failed\\n"" )"	434:2:9217:9265	5253199	2	True				
ANR	5253481	CallExpression	"dprintf ( D_ALWAYS , ""IO: Packet storing failed\\n"" )"		5253199	0					
ANR	5253482	Callee	dprintf		5253199	0					
ANR	5253483	Identifier	dprintf		5253199	0					
ANR	5253484	ArgumentList	D_ALWAYS		5253199	1					
ANR	5253485	Argument	D_ALWAYS		5253199	0					
ANR	5253486	Identifier	D_ALWAYS		5253199	0					
ANR	5253487	Argument	"""IO: Packet storing failed\\n"""		5253199	1					
ANR	5253488	PrimaryExpression	"""IO: Packet storing failed\\n"""		5253199	0					
ANR	5253489	ReturnStatement	return FALSE ;	435:2:9269:9281	5253199	3	True				
ANR	5253490	Identifier	FALSE		5253199	0					
ANR	5253491	IfStatement	if ( end )		5253199	28					
ANR	5253492	Condition	end	438:5:9294:9296	5253199	0	True				
ANR	5253493	Identifier	end		5253199	0					
ANR	5253494	CompoundStatement		60:10:1406:1406	5253199	1					
ANR	5253495	ExpressionStatement	ready = TRUE	439:2:9303:9315	5253199	0	True				
ANR	5253496	AssignmentExpression	ready = TRUE		5253199	0		=			
ANR	5253497	Identifier	ready		5253199	0					
ANR	5253498	Identifier	TRUE		5253199	1					
ANR	5253499	ReturnStatement	return TRUE ;	441:1:9321:9332	5253199	29	True				
ANR	5253500	Identifier	TRUE		5253199	0					
ANR	5253501	ReturnType	int		5253199	1					
ANR	5253502	Identifier	StdUnivSock :: RcvMsg :: rcv_packet		5253199	2					
ANR	5253503	ParameterList	"char const * peer_description , SOCKET _sock , int _timeout"		5253199	3					
ANR	5253504	Parameter	char const * peer_description	378:37:7834:7861	5253199	0	True				
ANR	5253505	ParameterType	char const *		5253199	0					
ANR	5253506	Identifier	peer_description		5253199	1					
ANR	5253507	Parameter	SOCKET _sock	378:67:7864:7875	5253199	1	True				
ANR	5253508	ParameterType	SOCKET		5253199	0					
ANR	5253509	Identifier	_sock		5253199	1					
ANR	5253510	Parameter	int _timeout	378:81:7878:7889	5253199	2	True				
ANR	5253511	ParameterType	int		5253199	0					
ANR	5253512	Identifier	_timeout		5253199	1					
ANR	5253513	CFGEntryNode	ENTRY		5253199		True				
ANR	5253514	CFGExitNode	EXIT		5253199		True				
ANR	5253515	Symbol	* tmp		5253199						
ANR	5253516	Symbol	peer_description		5253199						
ANR	5253517	Symbol	tmp_len		5253199						
ANR	5253518	Symbol	_sock		5253199						
ANR	5253519	Symbol	len		5253199						
ANR	5253520	Symbol	tmp		5253199						
ANR	5253521	Symbol	ready		5253199						
ANR	5253522	Symbol	end		5253199						
ANR	5253523	Symbol	_timeout		5253199						
ANR	5253524	Symbol	* hdr		5253199						
ANR	5253525	Symbol	condor_read		5253199						
ANR	5253526	Symbol	tmp -> read		5253199						
ANR	5253527	Symbol	header_size		5253199						
ANR	5253528	Symbol	D_ALWAYS		5253199						
ANR	5253529	Symbol	ntohl		5253199						
ANR	5253530	Symbol	TRUE		5253199						
ANR	5253531	Symbol	D_FULLDEBUG		5253199						
ANR	5253532	Symbol	len_t		5253199						
ANR	5253533	Symbol	retval		5253199						
ANR	5253534	Symbol	buf		5253199						
ANR	5253535	Symbol	hdr		5253199						
ANR	5253536	Symbol	NORMAL_HEADER_SIZE		5253199						
ANR	5253537	Symbol	& len_t		5253199						
ANR	5253538	Symbol	FALSE		5253199						
ANR	5253539	Symbol	buf . put		5253199						
ANR	5253540	Symbol	tmp -> max_size		5253199						
ANR	5253541	Function	StdUnivSock :: SndMsg :: SndMsg	445:0:9338:9384							
ANR	5253542	FunctionDef	StdUnivSock :: SndMsg :: SndMsg ()		5253541	0					
ANR	5253543	CompoundStatement		447:0:9382:9384	5253541	0					
ANR	5253544	Identifier	StdUnivSock :: SndMsg :: SndMsg		5253541	1					
ANR	5253545	ParameterList			5253541	2					
ANR	5253546	CFGEntryNode	ENTRY		5253541		True				
ANR	5253547	CFGExitNode	EXIT		5253541		True				
ANR	5253548	Function	StdUnivSock :: SndMsg :: ~SndMsg	450:0:9387:9421							
ANR	5253549	FunctionDef	StdUnivSock :: SndMsg :: ~SndMsg ()		5253548	0					
ANR	5253550	CompoundStatement		451:0:9419:9421	5253548	0					
ANR	5253551	Identifier	StdUnivSock :: SndMsg :: ~SndMsg		5253548	1					
ANR	5253552	ParameterList			5253548	2					
ANR	5253553	CFGEntryNode	ENTRY		5253548		True				
ANR	5253554	CFGExitNode	EXIT		5253548		True				
ANR	5253555	Function	StdUnivSock :: SndMsg :: snd_packet	454:0:9424:9985							
ANR	5253556	FunctionDef	"StdUnivSock :: SndMsg :: snd_packet (char const * peer_description , int _sock , int end , int _timeout)"		5253555	0					
ANR	5253557	CompoundStatement		455:0:9526:9985	5253555	0					
ANR	5253558	IdentifierDeclStatement	char hdr [ MAX_HEADER_SIZE ] ;	456:1:9529:9562	5253555	0	True				
ANR	5253559	IdentifierDecl	hdr [ MAX_HEADER_SIZE ]		5253555	0					
ANR	5253560	IdentifierDeclType	char [ MAX_HEADER_SIZE ]		5253555	0					
ANR	5253561	Identifier	hdr		5253555	1					
ANR	5253562	Identifier	MAX_HEADER_SIZE		5253555	2					
ANR	5253563	IdentifierDeclStatement	"int len , header_size ;"	457:1:9565:9586	5253555	1	True				
ANR	5253564	IdentifierDecl	len		5253555	0					
ANR	5253565	IdentifierDeclType	int		5253555	0					
ANR	5253566	Identifier	len		5253555	1					
ANR	5253567	IdentifierDecl	header_size		5253555	1					
ANR	5253568	IdentifierDeclType	int		5253555	0					
ANR	5253569	Identifier	header_size		5253555	1					
ANR	5253570	IdentifierDeclStatement	int ns ;	458:1:9589:9596	5253555	2	True				
ANR	5253571	IdentifierDecl	ns		5253555	0					
ANR	5253572	IdentifierDeclType	int		5253555	0					
ANR	5253573	Identifier	ns		5253555	1					
ANR	5253574	ExpressionStatement	header_size = NORMAL_HEADER_SIZE	460:4:9603:9635	5253555	3	True				
ANR	5253575	AssignmentExpression	header_size = NORMAL_HEADER_SIZE		5253555	0		=			
ANR	5253576	Identifier	header_size		5253555	0					
ANR	5253577	Identifier	NORMAL_HEADER_SIZE		5253555	1					
ANR	5253578	ExpressionStatement	hdr [ 0 ] = ( char ) end	461:1:9638:9657	5253555	4	True				
ANR	5253579	AssignmentExpression	hdr [ 0 ] = ( char ) end		5253555	0		=			
ANR	5253580	ArrayIndexing	hdr [ 0 ]		5253555	0					
ANR	5253581	Identifier	hdr		5253555	0					
ANR	5253582	PrimaryExpression	0		5253555	1					
ANR	5253583	CastExpression	( char ) end		5253555	1					
ANR	5253584	CastTarget	char		5253555	0					
ANR	5253585	Identifier	end		5253555	1					
ANR	5253586	ExpressionStatement	ns = buf . num_used ( ) - header_size	462:1:9660:9693	5253555	5	True				
ANR	5253587	AssignmentExpression	ns = buf . num_used ( ) - header_size		5253555	0		=			
ANR	5253588	Identifier	ns		5253555	0					
ANR	5253589	AdditiveExpression	buf . num_used ( ) - header_size		5253555	1		-			
ANR	5253590	CallExpression	buf . num_used ( )		5253555	0					
ANR	5253591	Callee	buf . num_used		5253555	0					
ANR	5253592	MemberAccess	buf . num_used		5253555	0					
ANR	5253593	Identifier	buf		5253555	0					
ANR	5253594	Identifier	num_used		5253555	1					
ANR	5253595	ArgumentList			5253555	1					
ANR	5253596	Identifier	header_size		5253555	1					
ANR	5253597	ExpressionStatement	len = ( int ) htonl ( ns )	463:1:9696:9717	5253555	6	True				
ANR	5253598	AssignmentExpression	len = ( int ) htonl ( ns )		5253555	0		=			
ANR	5253599	Identifier	len		5253555	0					
ANR	5253600	CastExpression	( int ) htonl ( ns )		5253555	1					
ANR	5253601	CastTarget	int		5253555	0					
ANR	5253602	CallExpression	htonl ( ns )		5253555	1					
ANR	5253603	Callee	htonl		5253555	0					
ANR	5253604	Identifier	htonl		5253555	0					
ANR	5253605	ArgumentList	ns		5253555	1					
ANR	5253606	Argument	ns		5253555	0					
ANR	5253607	Identifier	ns		5253555	0					
ANR	5253608	ExpressionStatement	"memcpy ( & hdr [ 1 ] , & len , 4 )"	465:1:9721:9745	5253555	7	True				
ANR	5253609	CallExpression	"memcpy ( & hdr [ 1 ] , & len , 4 )"		5253555	0					
ANR	5253610	Callee	memcpy		5253555	0					
ANR	5253611	Identifier	memcpy		5253555	0					
ANR	5253612	ArgumentList	& hdr [ 1 ]		5253555	1					
ANR	5253613	Argument	& hdr [ 1 ]		5253555	0					
ANR	5253614	UnaryOperationExpression	& hdr [ 1 ]		5253555	0					
ANR	5253615	UnaryOperator	&		5253555	0					
ANR	5253616	ArrayIndexing	hdr [ 1 ]		5253555	1					
ANR	5253617	Identifier	hdr		5253555	0					
ANR	5253618	PrimaryExpression	1		5253555	1					
ANR	5253619	Argument	& len		5253555	1					
ANR	5253620	UnaryOperationExpression	& len		5253555	0					
ANR	5253621	UnaryOperator	&		5253555	0					
ANR	5253622	Identifier	len		5253555	1					
ANR	5253623	Argument	4		5253555	2					
ANR	5253624	PrimaryExpression	4		5253555	0					
ANR	5253625	IfStatement	"if ( buf . flush ( peer_description , _sock , hdr , header_size , _timeout ) != ( ns + header_size ) )"		5253555	8					
ANR	5253626	Condition	"buf . flush ( peer_description , _sock , hdr , header_size , _timeout ) != ( ns + header_size )"	467:12:9760:9841	5253555	0	True				
ANR	5253627	EqualityExpression	"buf . flush ( peer_description , _sock , hdr , header_size , _timeout ) != ( ns + header_size )"		5253555	0		!=			
ANR	5253628	CallExpression	"buf . flush ( peer_description , _sock , hdr , header_size , _timeout )"		5253555	0					
ANR	5253629	Callee	buf . flush		5253555	0					
ANR	5253630	MemberAccess	buf . flush		5253555	0					
ANR	5253631	Identifier	buf		5253555	0					
ANR	5253632	Identifier	flush		5253555	1					
ANR	5253633	ArgumentList	peer_description		5253555	1					
ANR	5253634	Argument	peer_description		5253555	0					
ANR	5253635	Identifier	peer_description		5253555	0					
ANR	5253636	Argument	_sock		5253555	1					
ANR	5253637	Identifier	_sock		5253555	0					
ANR	5253638	Argument	hdr		5253555	2					
ANR	5253639	Identifier	hdr		5253555	0					
ANR	5253640	Argument	header_size		5253555	3					
ANR	5253641	Identifier	header_size		5253555	0					
ANR	5253642	Argument	_timeout		5253555	4					
ANR	5253643	Identifier	_timeout		5253555	0					
ANR	5253644	AdditiveExpression	ns + header_size		5253555	1		+			
ANR	5253645	Identifier	ns		5253555	0					
ANR	5253646	Identifier	header_size		5253555	1					
ANR	5253647	CompoundStatement		13:95:316:316	5253555	1					
ANR	5253648	ReturnStatement	return FALSE ;	468:12:9857:9869	5253555	0	True				
ANR	5253649	Identifier	FALSE		5253555	0					
ANR	5253650	IfStatement	if ( end )		5253555	9					
ANR	5253651	Condition	end	471:5:9895:9897	5253555	0	True				
ANR	5253652	Identifier	end		5253555	0					
ANR	5253653	CompoundStatement		17:11:374:374	5253555	1					
ANR	5253654	ExpressionStatement	buf . dealloc_buf ( )	472:2:9905:9922	5253555	0	True				
ANR	5253655	CallExpression	buf . dealloc_buf ( )		5253555	0					
ANR	5253656	Callee	buf . dealloc_buf		5253555	0					
ANR	5253657	MemberAccess	buf . dealloc_buf		5253555	0					
ANR	5253658	Identifier	buf		5253555	0					
ANR	5253659	Identifier	dealloc_buf		5253555	1					
ANR	5253660	ArgumentList			5253555	1					
ANR	5253661	ReturnStatement	return TRUE ;	474:1:9972:9983	5253555	10	True				
ANR	5253662	Identifier	TRUE		5253555	0					
ANR	5253663	ReturnType	int		5253555	1					
ANR	5253664	Identifier	StdUnivSock :: SndMsg :: snd_packet		5253555	2					
ANR	5253665	ParameterList	"char const * peer_description , int _sock , int end , int _timeout"		5253555	3					
ANR	5253666	Parameter	char const * peer_description	454:37:9461:9488	5253555	0	True				
ANR	5253667	ParameterType	char const *		5253555	0					
ANR	5253668	Identifier	peer_description		5253555	1					
ANR	5253669	Parameter	int _sock	454:67:9491:9499	5253555	1	True				
ANR	5253670	ParameterType	int		5253555	0					
ANR	5253671	Identifier	_sock		5253555	1					
ANR	5253672	Parameter	int end	454:78:9502:9508	5253555	2	True				
ANR	5253673	ParameterType	int		5253555	0					
ANR	5253674	Identifier	end		5253555	1					
ANR	5253675	Parameter	int _timeout	454:87:9511:9522	5253555	3	True				
ANR	5253676	ParameterType	int		5253555	0					
ANR	5253677	Identifier	_timeout		5253555	1					
ANR	5253678	CFGEntryNode	ENTRY		5253555		True				
ANR	5253679	CFGExitNode	EXIT		5253555		True				
ANR	5253680	Symbol	peer_description		5253555						
ANR	5253681	Symbol	ns		5253555						
ANR	5253682	Symbol	buf . num_used		5253555						
ANR	5253683	Symbol	header_size		5253555						
ANR	5253684	Symbol	TRUE		5253555						
ANR	5253685	Symbol	htonl		5253555						
ANR	5253686	Symbol	buf		5253555						
ANR	5253687	Symbol	_sock		5253555						
ANR	5253688	Symbol	len		5253555						
ANR	5253689	Symbol	buf . flush		5253555						
ANR	5253690	Symbol	hdr		5253555						
ANR	5253691	Symbol	NORMAL_HEADER_SIZE		5253555						
ANR	5253692	Symbol	end		5253555						
ANR	5253693	Symbol	FALSE		5253555						
ANR	5253694	Symbol	_timeout		5253555						
ANR	5253695	Symbol	& len		5253555						
ANR	5253696	Symbol	* hdr		5253555						
ANR	5253697	Function	StdUnivSock :: attach_to_file_desc	479:0:10036:10195							
ANR	5253698	FunctionDef	StdUnivSock :: attach_to_file_desc (int fd)		5253697	0					
ANR	5253699	CompoundStatement		481:0:10084:10195	5253697	0					
ANR	5253700	ExpressionStatement	ASSERT ( _sock == INVALID_SOCKET )	482:1:10087:10119	5253697	0	True				
ANR	5253701	CallExpression	ASSERT ( _sock == INVALID_SOCKET )		5253697	0					
ANR	5253702	Callee	ASSERT		5253697	0					
ANR	5253703	Identifier	ASSERT		5253697	0					
ANR	5253704	ArgumentList	_sock == INVALID_SOCKET		5253697	1					
ANR	5253705	Argument	_sock == INVALID_SOCKET		5253697	0					
ANR	5253706	EqualityExpression	_sock == INVALID_SOCKET		5253697	0		==			
ANR	5253707	Identifier	_sock		5253697	0					
ANR	5253708	Identifier	INVALID_SOCKET		5253697	1					
ANR	5253709	ExpressionStatement	_sock = fd	484:1:10123:10133	5253697	1	True				
ANR	5253710	AssignmentExpression	_sock = fd		5253697	0		=			
ANR	5253711	Identifier	_sock		5253697	0					
ANR	5253712	Identifier	fd		5253697	1					
ANR	5253713	ExpressionStatement	timeout ( 0 )	485:1:10136:10146	5253697	2	True				
ANR	5253714	CallExpression	timeout ( 0 )		5253697	0					
ANR	5253715	Callee	timeout		5253697	0					
ANR	5253716	Identifier	timeout		5253697	0					
ANR	5253717	ArgumentList	0		5253697	1					
ANR	5253718	Argument	0		5253697	0					
ANR	5253719	PrimaryExpression	0		5253697	0					
ANR	5253720	ReturnStatement	return TRUE ;	486:1:10182:10193	5253697	3	True				
ANR	5253721	Identifier	TRUE		5253697	0					
ANR	5253722	ReturnType	int		5253697	1					
ANR	5253723	Identifier	StdUnivSock :: attach_to_file_desc		5253697	2					
ANR	5253724	ParameterList	int fd		5253697	3					
ANR	5253725	Parameter	int fd	480:34:10075:10080	5253697	0	True				
ANR	5253726	ParameterType	int		5253697	0					
ANR	5253727	Identifier	fd		5253697	1					
ANR	5253728	CFGEntryNode	ENTRY		5253697		True				
ANR	5253729	CFGExitNode	EXIT		5253697		True				
ANR	5253730	Symbol	_sock		5253697						
ANR	5253731	Symbol	TRUE		5253697						
ANR	5253732	Symbol	fd		5253697						
ANR	5253733	Symbol	INVALID_SOCKET		5253697						
ANR	5253734	Function	StdUnivSock :: type	490:0:10205:10278							
ANR	5253735	FunctionDef	StdUnivSock :: type ()		5253734	0					
ANR	5253736	CompoundStatement		492:0:10247:10278	5253734	0					
ANR	5253737	ReturnStatement	return Stream :: reli_sock ;	493:1:10251:10275	5253734	0	True				
ANR	5253738	Identifier	Stream :: reli_sock		5253734	0					
ANR	5253739	ReturnType	Stream :: stream_type		5253734	1					
ANR	5253740	Identifier	StdUnivSock :: type		5253734	2					
ANR	5253741	ParameterList			5253734	3					
ANR	5253742	CFGEntryNode	ENTRY		5253734		True				
ANR	5253743	CFGExitNode	EXIT		5253734		True				
ANR	5253744	Symbol	Stream :: reli_sock		5253734						
ANR	5253745	Function	StdUnivSock :: peer_is_local	497:0:10282:10361							
ANR	5253746	FunctionDef	StdUnivSock :: peer_is_local ()		5253745	0					
ANR	5253747	CompoundStatement		499:0:10316:10361	5253745	0					
ANR	5253748	ExpressionStatement	"EXCEPT ( ""not implemented"" )"	500:1:10319:10344	5253745	0	True				
ANR	5253749	CallExpression	"EXCEPT ( ""not implemented"" )"		5253745	0					
ANR	5253750	Callee	EXCEPT		5253745	0					
ANR	5253751	Identifier	EXCEPT		5253745	0					
ANR	5253752	ArgumentList	"""not implemented"""		5253745	1					
ANR	5253753	Argument	"""not implemented"""		5253745	0					
ANR	5253754	PrimaryExpression	"""not implemented"""		5253745	0					
ANR	5253755	ReturnStatement	return false ;	501:1:10347:10359	5253745	1	True				
ANR	5253756	Identifier	false		5253745	0					
ANR	5253757	ReturnType	bool		5253745	1					
ANR	5253758	Identifier	StdUnivSock :: peer_is_local		5253745	2					
ANR	5253759	ParameterList			5253745	3					
ANR	5253760	CFGEntryNode	ENTRY		5253745		True				
ANR	5253761	CFGExitNode	EXIT		5253745		True				
ANR	5253762	Symbol	false		5253745						
ANR	5253763	Function	StdUnivSock :: serialize	510:0:10448:10530							
ANR	5253764	FunctionDef	StdUnivSock :: serialize ()		5253763	0					
ANR	5253765	CompoundStatement		512:0:10486:10530	5253763	0					
ANR	5253766	ExpressionStatement	"EXCEPT ( ""not implemented"" )"	513:1:10489:10514	5253763	0	True				
ANR	5253767	CallExpression	"EXCEPT ( ""not implemented"" )"		5253763	0					
ANR	5253768	Callee	EXCEPT		5253763	0					
ANR	5253769	Identifier	EXCEPT		5253763	0					
ANR	5253770	ArgumentList	"""not implemented"""		5253763	1					
ANR	5253771	Argument	"""not implemented"""		5253763	0					
ANR	5253772	PrimaryExpression	"""not implemented"""		5253763	0					
ANR	5253773	ReturnStatement	return NULL ;	514:1:10517:10528	5253763	1	True				
ANR	5253774	Identifier	NULL		5253763	0					
ANR	5253775	ReturnType	char *		5253763	1					
ANR	5253776	Identifier	StdUnivSock :: serialize		5253763	2					
ANR	5253777	ParameterList			5253763	3					
ANR	5253778	CFGEntryNode	ENTRY		5253763		True				
ANR	5253779	CFGExitNode	EXIT		5253763		True				
ANR	5253780	Symbol	NULL		5253763						
ANR	5253781	Function	StdUnivSock :: CloneStream	517:0:10533:10613							
ANR	5253782	FunctionDef	StdUnivSock :: CloneStream ()		5253781	0					
ANR	5253783	CompoundStatement		519:0:10569:10613	5253781	0					
ANR	5253784	ExpressionStatement	"EXCEPT ( ""not implemented"" )"	520:1:10572:10597	5253781	0	True				
ANR	5253785	CallExpression	"EXCEPT ( ""not implemented"" )"		5253781	0					
ANR	5253786	Callee	EXCEPT		5253781	0					
ANR	5253787	Identifier	EXCEPT		5253781	0					
ANR	5253788	ArgumentList	"""not implemented"""		5253781	1					
ANR	5253789	Argument	"""not implemented"""		5253781	0					
ANR	5253790	PrimaryExpression	"""not implemented"""		5253781	0					
ANR	5253791	ReturnStatement	return NULL ;	521:1:10600:10611	5253781	1	True				
ANR	5253792	Identifier	NULL		5253781	0					
ANR	5253793	ReturnType	Stream *		5253781	1					
ANR	5253794	Identifier	StdUnivSock :: CloneStream		5253781	2					
ANR	5253795	ParameterList			5253781	3					
ANR	5253796	CFGEntryNode	ENTRY		5253781		True				
ANR	5253797	CFGExitNode	EXIT		5253781		True				
ANR	5253798	Symbol	NULL		5253781						
ANR	5253799	Function	StdUnivSock :: bytes_available_to_read	524:0:10616:10701							
ANR	5253800	FunctionDef	StdUnivSock :: bytes_available_to_read ()		5253799	0					
ANR	5253801	CompoundStatement		526:0:10659:10701	5253799	0					
ANR	5253802	ExpressionStatement	"EXCEPT ( ""not implemented"" )"	527:1:10662:10687	5253799	0	True				
ANR	5253803	CallExpression	"EXCEPT ( ""not implemented"" )"		5253799	0					
ANR	5253804	Callee	EXCEPT		5253799	0					
ANR	5253805	Identifier	EXCEPT		5253799	0					
ANR	5253806	ArgumentList	"""not implemented"""		5253799	1					
ANR	5253807	Argument	"""not implemented"""		5253799	0					
ANR	5253808	PrimaryExpression	"""not implemented"""		5253799	0					
ANR	5253809	ReturnStatement	return - 1 ;	528:1:10690:10699	5253799	1	True				
ANR	5253810	UnaryOperationExpression	- 1		5253799	0					
ANR	5253811	UnaryOperator	-		5253799	0					
ANR	5253812	PrimaryExpression	1		5253799	1					
ANR	5253813	ReturnType	int		5253799	1					
ANR	5253814	Identifier	StdUnivSock :: bytes_available_to_read		5253799	2					
ANR	5253815	ParameterList			5253799	3					
ANR	5253816	CFGEntryNode	ENTRY		5253799		True				
ANR	5253817	CFGExitNode	EXIT		5253799		True				
ANR	5253818	Function	StdUnivSock :: my_ip_str	531:0:10704:10785							
ANR	5253819	FunctionDef	StdUnivSock :: my_ip_str ()		5253818	0					
ANR	5253820	CompoundStatement		533:0:10741:10785	5253818	0					
ANR	5253821	ExpressionStatement	"EXCEPT ( ""not implemented"" )"	534:1:10744:10769	5253818	0	True				
ANR	5253822	CallExpression	"EXCEPT ( ""not implemented"" )"		5253818	0					
ANR	5253823	Callee	EXCEPT		5253818	0					
ANR	5253824	Identifier	EXCEPT		5253818	0					
ANR	5253825	ArgumentList	"""not implemented"""		5253818	1					
ANR	5253826	Argument	"""not implemented"""		5253818	0					
ANR	5253827	PrimaryExpression	"""not implemented"""		5253818	0					
ANR	5253828	ReturnStatement	return NULL ;	535:1:10772:10783	5253818	1	True				
ANR	5253829	Identifier	NULL		5253818	0					
ANR	5253830	ReturnType	const char *		5253818	1					
ANR	5253831	Identifier	StdUnivSock :: my_ip_str		5253818	2					
ANR	5253832	ParameterList			5253818	3					
ANR	5253833	CFGEntryNode	ENTRY		5253818		True				
ANR	5253834	CFGExitNode	EXIT		5253818		True				
ANR	5253835	Symbol	NULL		5253818						
