command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	547516	File	data/converged/CVE-2011-4930_htcondor/SafeMsg.cpp								
ANR	547517	DeclStmt									
ANR	547518	Decl							const char	const char [ ]	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD
ANR	547519	DeclStmt									
ANR	547520	Decl							const int	const int	SAFE_MSG_CRYPTO_HEADER_SIZE
ANR	547521	Function	_condorPacket :: _condorPacket	33:0:1205:1250							
ANR	547522	FunctionDef	_condorPacket :: _condorPacket ()		547521	0					
ANR	547523	CompoundStatement		34:0:1236:1250	547521	0					
ANR	547524	ExpressionStatement	init ( )	35:4:1242:1248	547521	0	True				
ANR	547525	CallExpression	init ( )		547521	0					
ANR	547526	Callee	init		547521	0					
ANR	547527	Identifier	init		547521	0					
ANR	547528	ArgumentList			547521	1					
ANR	547529	Identifier	_condorPacket :: _condorPacket		547521	1					
ANR	547530	ParameterList			547521	2					
ANR	547531	CFGEntryNode	ENTRY		547521		True				
ANR	547532	CFGExitNode	EXIT		547521		True				
ANR	547533	Function	_condorPacket :: ~_condorPacket	38:0:1253:1717							
ANR	547534	FunctionDef	_condorPacket :: ~_condorPacket ()		547533	0					
ANR	547535	CompoundStatement		39:0:1285:1717	547533	0					
ANR	547536	IfStatement	if ( incomingMD5KeyId_ )		547533	0					
ANR	547537	Condition	incomingMD5KeyId_	40:8:1295:1311	547533	0	True				
ANR	547538	Identifier	incomingMD5KeyId_		547533	0					
ANR	547539	CompoundStatement		2:27:28:28	547533	1					
ANR	547540	ExpressionStatement	free ( incomingMD5KeyId_ )	41:8:1324:1347	547533	0	True				
ANR	547541	CallExpression	free ( incomingMD5KeyId_ )		547533	0					
ANR	547542	Callee	free		547533	0					
ANR	547543	Identifier	free		547533	0					
ANR	547544	ArgumentList	incomingMD5KeyId_		547533	1					
ANR	547545	Argument	incomingMD5KeyId_		547533	0					
ANR	547546	Identifier	incomingMD5KeyId_		547533	0					
ANR	547547	ExpressionStatement	incomingMD5KeyId_ = 0	42:8:1357:1378	547533	1	True				
ANR	547548	AssignmentExpression	incomingMD5KeyId_ = 0		547533	0		=			
ANR	547549	Identifier	incomingMD5KeyId_		547533	0					
ANR	547550	PrimaryExpression	0		547533	1					
ANR	547551	IfStatement	if ( outgoingMD5KeyId_ )		547533	1					
ANR	547552	Condition	outgoingMD5KeyId_	45:8:1395:1411	547533	0	True				
ANR	547553	Identifier	outgoingMD5KeyId_		547533	0					
ANR	547554	CompoundStatement		7:27:128:128	547533	1					
ANR	547555	ExpressionStatement	free ( outgoingMD5KeyId_ )	46:8:1424:1447	547533	0	True				
ANR	547556	CallExpression	free ( outgoingMD5KeyId_ )		547533	0					
ANR	547557	Callee	free		547533	0					
ANR	547558	Identifier	free		547533	0					
ANR	547559	ArgumentList	outgoingMD5KeyId_		547533	1					
ANR	547560	Argument	outgoingMD5KeyId_		547533	0					
ANR	547561	Identifier	outgoingMD5KeyId_		547533	0					
ANR	547562	ExpressionStatement	outgoingMD5KeyId_ = 0	47:8:1457:1478	547533	1	True				
ANR	547563	AssignmentExpression	outgoingMD5KeyId_ = 0		547533	0		=			
ANR	547564	Identifier	outgoingMD5KeyId_		547533	0					
ANR	547565	PrimaryExpression	0		547533	1					
ANR	547566	IfStatement	if ( incomingEncKeyId_ )		547533	2					
ANR	547567	Condition	incomingEncKeyId_	50:8:1495:1511	547533	0	True				
ANR	547568	Identifier	incomingEncKeyId_		547533	0					
ANR	547569	CompoundStatement		12:27:228:228	547533	1					
ANR	547570	ExpressionStatement	free ( incomingEncKeyId_ )	51:8:1524:1547	547533	0	True				
ANR	547571	CallExpression	free ( incomingEncKeyId_ )		547533	0					
ANR	547572	Callee	free		547533	0					
ANR	547573	Identifier	free		547533	0					
ANR	547574	ArgumentList	incomingEncKeyId_		547533	1					
ANR	547575	Argument	incomingEncKeyId_		547533	0					
ANR	547576	Identifier	incomingEncKeyId_		547533	0					
ANR	547577	ExpressionStatement	incomingEncKeyId_ = 0	52:8:1557:1578	547533	1	True				
ANR	547578	AssignmentExpression	incomingEncKeyId_ = 0		547533	0		=			
ANR	547579	Identifier	incomingEncKeyId_		547533	0					
ANR	547580	PrimaryExpression	0		547533	1					
ANR	547581	IfStatement	if ( outgoingEncKeyId_ )		547533	3					
ANR	547582	Condition	outgoingEncKeyId_	55:8:1595:1611	547533	0	True				
ANR	547583	Identifier	outgoingEncKeyId_		547533	0					
ANR	547584	CompoundStatement		17:27:328:328	547533	1					
ANR	547585	ExpressionStatement	free ( outgoingEncKeyId_ )	56:8:1624:1647	547533	0	True				
ANR	547586	CallExpression	free ( outgoingEncKeyId_ )		547533	0					
ANR	547587	Callee	free		547533	0					
ANR	547588	Identifier	free		547533	0					
ANR	547589	ArgumentList	outgoingEncKeyId_		547533	1					
ANR	547590	Argument	outgoingEncKeyId_		547533	0					
ANR	547591	Identifier	outgoingEncKeyId_		547533	0					
ANR	547592	ExpressionStatement	outgoingEncKeyId_ = 0	57:8:1657:1678	547533	1	True				
ANR	547593	AssignmentExpression	outgoingEncKeyId_ = 0		547533	0		=			
ANR	547594	Identifier	outgoingEncKeyId_		547533	0					
ANR	547595	PrimaryExpression	0		547533	1					
ANR	547596	IfStatement	if ( md_ )		547533	4					
ANR	547597	Condition	md_	59:5:1691:1693	547533	0	True				
ANR	547598	Identifier	md_		547533	0					
ANR	547599	CompoundStatement		21:11:411:411	547533	1					
ANR	547600	ExpressionStatement	free ( md_ )	60:2:1701:1712	547533	0	True				
ANR	547601	CallExpression	free ( md_ )		547533	0					
ANR	547602	Callee	free		547533	0					
ANR	547603	Identifier	free		547533	0					
ANR	547604	ArgumentList	md_		547533	1					
ANR	547605	Argument	md_		547533	0					
ANR	547606	Identifier	md_		547533	0					
ANR	547607	Identifier	_condorPacket :: ~_condorPacket		547533	1					
ANR	547608	ParameterList			547533	2					
ANR	547609	CFGEntryNode	ENTRY		547533		True				
ANR	547610	CFGExitNode	EXIT		547533		True				
ANR	547611	Symbol	incomingMD5KeyId_		547533						
ANR	547612	Symbol	outgoingEncKeyId_		547533						
ANR	547613	Symbol	md_		547533						
ANR	547614	Symbol	outgoingMD5KeyId_		547533						
ANR	547615	Symbol	incomingEncKeyId_		547533						
ANR	547616	Function	_condorPacket :: init	64:0:1720:2050							
ANR	547617	FunctionDef	_condorPacket :: init ()		547616	0					
ANR	547618	CompoundStatement		65:0:1749:2050	547616	0					
ANR	547619	ExpressionStatement	length = 0	66:1:1752:1766	547616	0	True				
ANR	547620	AssignmentExpression	length = 0		547616	0		=			
ANR	547621	Identifier	length		547616	0					
ANR	547622	PrimaryExpression	0		547616	1					
ANR	547623	ExpressionStatement	data = & dataGram [ SAFE_MSG_HEADER_SIZE ]	67:1:1769:1813	547616	1	True				
ANR	547624	AssignmentExpression	data = & dataGram [ SAFE_MSG_HEADER_SIZE ]		547616	0		=			
ANR	547625	Identifier	data		547616	0					
ANR	547626	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE ]		547616	1					
ANR	547627	UnaryOperator	&		547616	0					
ANR	547628	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE ]		547616	1					
ANR	547629	Identifier	dataGram		547616	0					
ANR	547630	Identifier	SAFE_MSG_HEADER_SIZE		547616	1					
ANR	547631	ExpressionStatement	curIndex = 0	68:1:1816:1830	547616	2	True				
ANR	547632	AssignmentExpression	curIndex = 0		547616	0		=			
ANR	547633	Identifier	curIndex		547616	0					
ANR	547634	PrimaryExpression	0		547616	1					
ANR	547635	ExpressionStatement	next = NULL	69:1:1833:1850	547616	3	True				
ANR	547636	AssignmentExpression	next = NULL		547616	0		=			
ANR	547637	Identifier	next		547616	0					
ANR	547638	Identifier	NULL		547616	1					
ANR	547639	ExpressionStatement	verified_ = true	70:4:1856:1873	547616	4	True				
ANR	547640	AssignmentExpression	verified_ = true		547616	0		=			
ANR	547641	Identifier	verified_		547616	0					
ANR	547642	Identifier	true		547616	1					
ANR	547643	ExpressionStatement	incomingMD5KeyId_ = 0	71:4:1879:1900	547616	5	True				
ANR	547644	AssignmentExpression	incomingMD5KeyId_ = 0		547616	0		=			
ANR	547645	Identifier	incomingMD5KeyId_		547616	0					
ANR	547646	PrimaryExpression	0		547616	1					
ANR	547647	ExpressionStatement	outgoingMD5KeyId_ = 0	72:4:1906:1927	547616	6	True				
ANR	547648	AssignmentExpression	outgoingMD5KeyId_ = 0		547616	0		=			
ANR	547649	Identifier	outgoingMD5KeyId_		547616	0					
ANR	547650	PrimaryExpression	0		547616	1					
ANR	547651	ExpressionStatement	outgoingMdLen_ = 0	73:4:1933:1954	547616	7	True				
ANR	547652	AssignmentExpression	outgoingMdLen_ = 0		547616	0		=			
ANR	547653	Identifier	outgoingMdLen_		547616	0					
ANR	547654	PrimaryExpression	0		547616	1					
ANR	547655	ExpressionStatement	incomingEncKeyId_ = 0	74:4:1960:1981	547616	8	True				
ANR	547656	AssignmentExpression	incomingEncKeyId_ = 0		547616	0		=			
ANR	547657	Identifier	incomingEncKeyId_		547616	0					
ANR	547658	PrimaryExpression	0		547616	1					
ANR	547659	ExpressionStatement	outgoingEncKeyId_ = 0	75:4:1987:2008	547616	9	True				
ANR	547660	AssignmentExpression	outgoingEncKeyId_ = 0		547616	0		=			
ANR	547661	Identifier	outgoingEncKeyId_		547616	0					
ANR	547662	PrimaryExpression	0		547616	1					
ANR	547663	ExpressionStatement	outgoingEidLen_ = 0	76:4:2014:2035	547616	10	True				
ANR	547664	AssignmentExpression	outgoingEidLen_ = 0		547616	0		=			
ANR	547665	Identifier	outgoingEidLen_		547616	0					
ANR	547666	PrimaryExpression	0		547616	1					
ANR	547667	ExpressionStatement	md_ = NULL	77:1:2038:2048	547616	11	True				
ANR	547668	AssignmentExpression	md_ = NULL		547616	0		=			
ANR	547669	Identifier	md_		547616	0					
ANR	547670	Identifier	NULL		547616	1					
ANR	547671	ReturnType	void		547616	1					
ANR	547672	Identifier	_condorPacket :: init		547616	2					
ANR	547673	ParameterList			547616	3					
ANR	547674	CFGEntryNode	ENTRY		547616		True				
ANR	547675	CFGExitNode	EXIT		547616		True				
ANR	547676	Symbol	next		547616						
ANR	547677	Symbol	NULL		547616						
ANR	547678	Symbol	data		547616						
ANR	547679	Symbol	outgoingEncKeyId_		547616						
ANR	547680	Symbol	length		547616						
ANR	547681	Symbol	md_		547616						
ANR	547682	Symbol	outgoingMdLen_		547616						
ANR	547683	Symbol	incomingEncKeyId_		547616						
ANR	547684	Symbol	verified_		547616						
ANR	547685	Symbol	incomingMD5KeyId_		547616						
ANR	547686	Symbol	true		547616						
ANR	547687	Symbol	dataGram		547616						
ANR	547688	Symbol	curIndex		547616						
ANR	547689	Symbol	outgoingEidLen_		547616						
ANR	547690	Symbol	SAFE_MSG_HEADER_SIZE		547616						
ANR	547691	Symbol	outgoingMD5KeyId_		547616						
ANR	547692	Function	_condorPacket :: isDataMD5ed	80:0:2053:2129							
ANR	547693	FunctionDef	_condorPacket :: isDataMD5ed ()		547692	0					
ANR	547694	CompoundStatement		81:0:2097:2129	547692	0					
ANR	547695	ReturnStatement	return incomingMD5KeyId_ ;	82:4:2103:2127	547692	0	True				
ANR	547696	Identifier	incomingMD5KeyId_		547692	0					
ANR	547697	ReturnType	const char *		547692	1					
ANR	547698	Identifier	_condorPacket :: isDataMD5ed		547692	2					
ANR	547699	ParameterList			547692	3					
ANR	547700	CFGEntryNode	ENTRY		547692		True				
ANR	547701	CFGExitNode	EXIT		547692		True				
ANR	547702	Symbol	incomingMD5KeyId_		547692						
ANR	547703	Function	_condorPacket :: isDataEncrypted	85:0:2132:2212							
ANR	547704	FunctionDef	_condorPacket :: isDataEncrypted ()		547703	0					
ANR	547705	CompoundStatement		86:0:2180:2212	547703	0					
ANR	547706	ReturnStatement	return incomingEncKeyId_ ;	87:4:2186:2210	547703	0	True				
ANR	547707	Identifier	incomingEncKeyId_		547703	0					
ANR	547708	ReturnType	const char *		547703	1					
ANR	547709	Identifier	_condorPacket :: isDataEncrypted		547703	2					
ANR	547710	ParameterList			547703	3					
ANR	547711	CFGEntryNode	ENTRY		547703		True				
ANR	547712	CFGExitNode	EXIT		547703		True				
ANR	547713	Symbol	incomingEncKeyId_		547703						
ANR	547714	Function	_condorPacket :: md	90:0:2215:2277							
ANR	547715	FunctionDef	_condorPacket :: md ()		547714	0					
ANR	547716	CompoundStatement		91:0:2259:2277	547714	0					
ANR	547717	ReturnStatement	return md_ ;	92:4:2265:2275	547714	0	True				
ANR	547718	Identifier	md_		547714	0					
ANR	547719	ReturnType	const unsigned char *		547714	1					
ANR	547720	Identifier	_condorPacket :: md		547714	2					
ANR	547721	ParameterList			547714	3					
ANR	547722	CFGEntryNode	ENTRY		547714		True				
ANR	547723	CFGExitNode	EXIT		547714		True				
ANR	547724	Symbol	md_		547714						
ANR	547725	Function	_condorPacket :: set_encryption_id	95:0:2280:3262							
ANR	547726	FunctionDef	_condorPacket :: set_encryption_id (const char * keyId)		547725	0					
ANR	547727	CompoundStatement		96:0:2340:3262	547725	0					
ANR	547728	ExpressionStatement	ASSERT ( empty ( ) )	98:4:2388:2403	547725	0	True				
ANR	547729	CallExpression	ASSERT ( empty ( ) )		547725	0					
ANR	547730	Callee	ASSERT		547725	0					
ANR	547731	Identifier	ASSERT		547725	0					
ANR	547732	ArgumentList	empty ( )		547725	1					
ANR	547733	Argument	empty ( )		547725	0					
ANR	547734	CallExpression	empty ( )		547725	0					
ANR	547735	Callee	empty		547725	0					
ANR	547736	Identifier	empty		547725	0					
ANR	547737	ArgumentList			547725	1					
ANR	547738	IfStatement	if ( outgoingEncKeyId_ )		547725	1					
ANR	547739	Condition	outgoingEncKeyId_	99:8:2413:2429	547725	0	True				
ANR	547740	Identifier	outgoingEncKeyId_		547725	0					
ANR	547741	CompoundStatement		4:27:91:91	547725	1					
ANR	547742	IfStatement	if ( curIndex > 0 )		547725	0					
ANR	547743	Condition	curIndex > 0	100:12:2446:2457	547725	0	True				
ANR	547744	RelationalExpression	curIndex > 0		547725	0		>			
ANR	547745	Identifier	curIndex		547725	0					
ANR	547746	PrimaryExpression	0		547725	1					
ANR	547747	CompoundStatement		5:27:120:120	547725	1					
ANR	547748	ExpressionStatement	curIndex -= outgoingEidLen_	101:12:2475:2502	547725	0	True				
ANR	547749	AssignmentExpression	curIndex -= outgoingEidLen_		547725	0		-=			
ANR	547750	Identifier	curIndex		547725	0					
ANR	547751	Identifier	outgoingEidLen_		547725	1					
ANR	547752	IfStatement	if ( curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE )		547725	1					
ANR	547753	Condition	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE	102:16:2520:2558	547725	0	True				
ANR	547754	EqualityExpression	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE		547725	0		==			
ANR	547755	Identifier	curIndex		547725	0					
ANR	547756	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		547725	1					
ANR	547757	CompoundStatement		7:57:220:220	547725	1					
ANR	547758	ExpressionStatement	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE	104:16:2615:2654	547725	0	True				
ANR	547759	AssignmentExpression	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE		547725	0		-=			
ANR	547760	Identifier	curIndex		547725	0					
ANR	547761	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		547725	1					
ANR	547762	ExpressionStatement	ASSERT ( curIndex >= 0 )	106:12:2682:2705	547725	2	True				
ANR	547763	CallExpression	ASSERT ( curIndex >= 0 )		547725	0					
ANR	547764	Callee	ASSERT		547725	0					
ANR	547765	Identifier	ASSERT		547725	0					
ANR	547766	ArgumentList	curIndex >= 0		547725	1					
ANR	547767	Argument	curIndex >= 0		547725	0					
ANR	547768	RelationalExpression	curIndex >= 0		547725	0		>=			
ANR	547769	Identifier	curIndex		547725	0					
ANR	547770	PrimaryExpression	0		547725	1					
ANR	547771	ExpressionStatement	free ( outgoingEncKeyId_ )	109:8:2726:2749	547725	1	True				
ANR	547772	CallExpression	free ( outgoingEncKeyId_ )		547725	0					
ANR	547773	Callee	free		547725	0					
ANR	547774	Identifier	free		547725	0					
ANR	547775	ArgumentList	outgoingEncKeyId_		547725	1					
ANR	547776	Argument	outgoingEncKeyId_		547725	0					
ANR	547777	Identifier	outgoingEncKeyId_		547725	0					
ANR	547778	ExpressionStatement	outgoingEncKeyId_ = 0	110:8:2759:2780	547725	2	True				
ANR	547779	AssignmentExpression	outgoingEncKeyId_ = 0		547725	0		=			
ANR	547780	Identifier	outgoingEncKeyId_		547725	0					
ANR	547781	PrimaryExpression	0		547725	1					
ANR	547782	ExpressionStatement	outgoingEidLen_ = 0	111:8:2790:2811	547725	3	True				
ANR	547783	AssignmentExpression	outgoingEidLen_ = 0		547725	0		=			
ANR	547784	Identifier	outgoingEidLen_		547725	0					
ANR	547785	PrimaryExpression	0		547725	1					
ANR	547786	IfStatement	if ( keyId )		547725	2					
ANR	547787	Condition	keyId	114:8:2832:2836	547725	0	True				
ANR	547788	Identifier	keyId		547725	0					
ANR	547789	CompoundStatement		19:15:498:498	547725	1					
ANR	547790	ExpressionStatement	outgoingEncKeyId_ = strdup ( keyId )	115:8:2849:2882	547725	0	True				
ANR	547791	AssignmentExpression	outgoingEncKeyId_ = strdup ( keyId )		547725	0		=			
ANR	547792	Identifier	outgoingEncKeyId_		547725	0					
ANR	547793	CallExpression	strdup ( keyId )		547725	1					
ANR	547794	Callee	strdup		547725	0					
ANR	547795	Identifier	strdup		547725	0					
ANR	547796	ArgumentList	keyId		547725	1					
ANR	547797	Argument	keyId		547725	0					
ANR	547798	Identifier	keyId		547725	0					
ANR	547799	ExpressionStatement	outgoingEidLen_ = strlen ( outgoingEncKeyId_ )	116:8:2892:2937	547725	1	True				
ANR	547800	AssignmentExpression	outgoingEidLen_ = strlen ( outgoingEncKeyId_ )		547725	0		=			
ANR	547801	Identifier	outgoingEidLen_		547725	0					
ANR	547802	CallExpression	strlen ( outgoingEncKeyId_ )		547725	1					
ANR	547803	Callee	strlen		547725	0					
ANR	547804	Identifier	strlen		547725	0					
ANR	547805	ArgumentList	outgoingEncKeyId_		547725	1					
ANR	547806	Argument	outgoingEncKeyId_		547725	0					
ANR	547807	Identifier	outgoingEncKeyId_		547725	0					
ANR	547808	IfStatement	if ( DebugFlags & D_FULLDEBUG )		547725	2					
ANR	547809	Condition	DebugFlags & D_FULLDEBUG	117:6:2945:2968	547725	0	True				
ANR	547810	BitAndExpression	DebugFlags & D_FULLDEBUG		547725	0		&			
ANR	547811	Identifier	DebugFlags		547725	0					
ANR	547812	Identifier	D_FULLDEBUG		547725	1					
ANR	547813	CompoundStatement		22:33:631:631	547725	1					
ANR	547814	ExpressionStatement	"dprintf ( D_SECURITY , ""set_encryption_id: setting key length %d\\n"" , outgoingEidLen_ )"	118:3:2977:3075	547725	0	True				
ANR	547815	CallExpression	"dprintf ( D_SECURITY , ""set_encryption_id: setting key length %d\\n"" , outgoingEidLen_ )"		547725	0					
ANR	547816	Callee	dprintf		547725	0					
ANR	547817	Identifier	dprintf		547725	0					
ANR	547818	ArgumentList	D_SECURITY		547725	1					
ANR	547819	Argument	D_SECURITY		547725	0					
ANR	547820	Identifier	D_SECURITY		547725	0					
ANR	547821	Argument	"""set_encryption_id: setting key length %d\\n"""		547725	1					
ANR	547822	PrimaryExpression	"""set_encryption_id: setting key length %d\\n"""		547725	0					
ANR	547823	Argument	outgoingEidLen_		547725	2					
ANR	547824	Identifier	outgoingEidLen_		547725	0					
ANR	547825	IfStatement	if ( curIndex == 0 )		547725	3					
ANR	547826	Condition	curIndex == 0	122:13:3096:3108	547725	0	True				
ANR	547827	EqualityExpression	curIndex == 0		547725	0		==			
ANR	547828	Identifier	curIndex		547725	0					
ANR	547829	PrimaryExpression	0		547725	1					
ANR	547830	CompoundStatement		27:29:771:771	547725	1					
ANR	547831	ExpressionStatement	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE	123:12:3126:3165	547725	0	True				
ANR	547832	AssignmentExpression	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE		547725	0		+=			
ANR	547833	Identifier	curIndex		547725	0					
ANR	547834	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		547725	1					
ANR	547835	ExpressionStatement	curIndex += outgoingEidLen_	125:8:3185:3212	547725	4	True				
ANR	547836	AssignmentExpression	curIndex += outgoingEidLen_		547725	0		+=			
ANR	547837	Identifier	curIndex		547725	0					
ANR	547838	Identifier	outgoingEidLen_		547725	1					
ANR	547839	ExpressionStatement	length = curIndex	128:4:3225:3242	547725	3	True				
ANR	547840	AssignmentExpression	length = curIndex		547725	0		=			
ANR	547841	Identifier	length		547725	0					
ANR	547842	Identifier	curIndex		547725	1					
ANR	547843	ReturnStatement	return true ;	130:4:3249:3260	547725	4	True				
ANR	547844	Identifier	true		547725	0					
ANR	547845	ReturnType	bool		547725	1					
ANR	547846	Identifier	_condorPacket :: set_encryption_id		547725	2					
ANR	547847	ParameterList	const char * keyId		547725	3					
ANR	547848	Parameter	const char * keyId	95:40:2320:2337	547725	0	True				
ANR	547849	ParameterType	const char *		547725	0					
ANR	547850	Identifier	keyId		547725	1					
ANR	547851	CFGEntryNode	ENTRY		547725		True				
ANR	547852	CFGExitNode	EXIT		547725		True				
ANR	547853	Symbol	D_SECURITY		547725						
ANR	547854	Symbol	outgoingEncKeyId_		547725						
ANR	547855	Symbol	length		547725						
ANR	547856	Symbol	keyId		547725						
ANR	547857	Symbol	DebugFlags		547725						
ANR	547858	Symbol	D_FULLDEBUG		547725						
ANR	547859	Symbol	empty		547725						
ANR	547860	Symbol	strlen		547725						
ANR	547861	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		547725						
ANR	547862	Symbol	true		547725						
ANR	547863	Symbol	strdup		547725						
ANR	547864	Symbol	curIndex		547725						
ANR	547865	Symbol	outgoingEidLen_		547725						
ANR	547866	Function	_condorPacket :: init_MD	133:0:3265:4132							
ANR	547867	FunctionDef	_condorPacket :: init_MD (const char * keyId)		547866	0					
ANR	547868	CompoundStatement		134:0:3313:4132	547866	0					
ANR	547869	IdentifierDeclStatement	bool inited = true ;	135:4:3319:3337	547866	0	True				
ANR	547870	IdentifierDecl	inited = true		547866	0					
ANR	547871	IdentifierDeclType	bool		547866	0					
ANR	547872	Identifier	inited		547866	1					
ANR	547873	AssignmentExpression	inited = true		547866	2		=			
ANR	547874	Identifier	true		547866	0					
ANR	547875	Identifier	true		547866	1					
ANR	547876	ExpressionStatement	ASSERT ( empty ( ) )	136:4:3343:3358	547866	1	True				
ANR	547877	CallExpression	ASSERT ( empty ( ) )		547866	0					
ANR	547878	Callee	ASSERT		547866	0					
ANR	547879	Identifier	ASSERT		547866	0					
ANR	547880	ArgumentList	empty ( )		547866	1					
ANR	547881	Argument	empty ( )		547866	0					
ANR	547882	CallExpression	empty ( )		547866	0					
ANR	547883	Callee	empty		547866	0					
ANR	547884	Identifier	empty		547866	0					
ANR	547885	ArgumentList			547866	1					
ANR	547886	IfStatement	if ( outgoingMD5KeyId_ )		547866	2					
ANR	547887	Condition	outgoingMD5KeyId_	138:8:3369:3385	547866	0	True				
ANR	547888	Identifier	outgoingMD5KeyId_		547866	0					
ANR	547889	CompoundStatement		5:27:74:74	547866	1					
ANR	547890	IfStatement	if ( curIndex > 0 )		547866	0					
ANR	547891	Condition	curIndex > 0	139:12:3402:3413	547866	0	True				
ANR	547892	RelationalExpression	curIndex > 0		547866	0		>			
ANR	547893	Identifier	curIndex		547866	0					
ANR	547894	PrimaryExpression	0		547866	1					
ANR	547895	CompoundStatement		6:27:103:103	547866	1					
ANR	547896	ExpressionStatement	curIndex -= MAC_SIZE	140:12:3431:3451	547866	0	True				
ANR	547897	AssignmentExpression	curIndex -= MAC_SIZE		547866	0		-=			
ANR	547898	Identifier	curIndex		547866	0					
ANR	547899	Identifier	MAC_SIZE		547866	1					
ANR	547900	ExpressionStatement	curIndex -= outgoingMdLen_	141:12:3465:3491	547866	1	True				
ANR	547901	AssignmentExpression	curIndex -= outgoingMdLen_		547866	0		-=			
ANR	547902	Identifier	curIndex		547866	0					
ANR	547903	Identifier	outgoingMdLen_		547866	1					
ANR	547904	IfStatement	if ( curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE )		547866	2					
ANR	547905	Condition	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE	142:16:3509:3547	547866	0	True				
ANR	547906	EqualityExpression	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE		547866	0		==			
ANR	547907	Identifier	curIndex		547866	0					
ANR	547908	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		547866	1					
ANR	547909	CompoundStatement		9:57:236:236	547866	1					
ANR	547910	ExpressionStatement	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE	144:16:3604:3643	547866	0	True				
ANR	547911	AssignmentExpression	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE		547866	0		-=			
ANR	547912	Identifier	curIndex		547866	0					
ANR	547913	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		547866	1					
ANR	547914	ExpressionStatement	ASSERT ( curIndex >= 0 )	146:12:3671:3694	547866	3	True				
ANR	547915	CallExpression	ASSERT ( curIndex >= 0 )		547866	0					
ANR	547916	Callee	ASSERT		547866	0					
ANR	547917	Identifier	ASSERT		547866	0					
ANR	547918	ArgumentList	curIndex >= 0		547866	1					
ANR	547919	Argument	curIndex >= 0		547866	0					
ANR	547920	RelationalExpression	curIndex >= 0		547866	0		>=			
ANR	547921	Identifier	curIndex		547866	0					
ANR	547922	PrimaryExpression	0		547866	1					
ANR	547923	ExpressionStatement	free ( outgoingMD5KeyId_ )	149:8:3715:3738	547866	1	True				
ANR	547924	CallExpression	free ( outgoingMD5KeyId_ )		547866	0					
ANR	547925	Callee	free		547866	0					
ANR	547926	Identifier	free		547866	0					
ANR	547927	ArgumentList	outgoingMD5KeyId_		547866	1					
ANR	547928	Argument	outgoingMD5KeyId_		547866	0					
ANR	547929	Identifier	outgoingMD5KeyId_		547866	0					
ANR	547930	ExpressionStatement	outgoingMD5KeyId_ = 0	150:8:3748:3769	547866	2	True				
ANR	547931	AssignmentExpression	outgoingMD5KeyId_ = 0		547866	0		=			
ANR	547932	Identifier	outgoingMD5KeyId_		547866	0					
ANR	547933	PrimaryExpression	0		547866	1					
ANR	547934	ExpressionStatement	outgoingMdLen_ = 0	151:8:3779:3797	547866	3	True				
ANR	547935	AssignmentExpression	outgoingMdLen_ = 0		547866	0		=			
ANR	547936	Identifier	outgoingMdLen_		547866	0					
ANR	547937	PrimaryExpression	0		547866	1					
ANR	547938	IfStatement	if ( keyId )		547866	3					
ANR	547939	Condition	keyId	154:8:3814:3818	547866	0	True				
ANR	547940	Identifier	keyId		547866	0					
ANR	547941	CompoundStatement		21:15:507:507	547866	1					
ANR	547942	ExpressionStatement	outgoingMD5KeyId_ = strdup ( keyId )	155:8:3831:3864	547866	0	True				
ANR	547943	AssignmentExpression	outgoingMD5KeyId_ = strdup ( keyId )		547866	0		=			
ANR	547944	Identifier	outgoingMD5KeyId_		547866	0					
ANR	547945	CallExpression	strdup ( keyId )		547866	1					
ANR	547946	Callee	strdup		547866	0					
ANR	547947	Identifier	strdup		547866	0					
ANR	547948	ArgumentList	keyId		547866	1					
ANR	547949	Argument	keyId		547866	0					
ANR	547950	Identifier	keyId		547866	0					
ANR	547951	ExpressionStatement	outgoingMdLen_ = strlen ( outgoingMD5KeyId_ )	156:8:3874:3919	547866	1	True				
ANR	547952	AssignmentExpression	outgoingMdLen_ = strlen ( outgoingMD5KeyId_ )		547866	0		=			
ANR	547953	Identifier	outgoingMdLen_		547866	0					
ANR	547954	CallExpression	strlen ( outgoingMD5KeyId_ )		547866	1					
ANR	547955	Callee	strlen		547866	0					
ANR	547956	Identifier	strlen		547866	0					
ANR	547957	ArgumentList	outgoingMD5KeyId_		547866	1					
ANR	547958	Argument	outgoingMD5KeyId_		547866	0					
ANR	547959	Identifier	outgoingMD5KeyId_		547866	0					
ANR	547960	IfStatement	if ( curIndex == 0 )		547866	2					
ANR	547961	Condition	curIndex == 0	157:13:3934:3946	547866	0	True				
ANR	547962	EqualityExpression	curIndex == 0		547866	0		==			
ANR	547963	Identifier	curIndex		547866	0					
ANR	547964	PrimaryExpression	0		547866	1					
ANR	547965	CompoundStatement		24:29:636:636	547866	1					
ANR	547966	ExpressionStatement	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE	158:12:3964:4003	547866	0	True				
ANR	547967	AssignmentExpression	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE		547866	0		+=			
ANR	547968	Identifier	curIndex		547866	0					
ANR	547969	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		547866	1					
ANR	547970	ExpressionStatement	curIndex += MAC_SIZE	160:8:4023:4043	547866	3	True				
ANR	547971	AssignmentExpression	curIndex += MAC_SIZE		547866	0		+=			
ANR	547972	Identifier	curIndex		547866	0					
ANR	547973	Identifier	MAC_SIZE		547866	1					
ANR	547974	ExpressionStatement	curIndex += outgoingMdLen_	161:8:4053:4079	547866	4	True				
ANR	547975	AssignmentExpression	curIndex += outgoingMdLen_		547866	0		+=			
ANR	547976	Identifier	curIndex		547866	0					
ANR	547977	Identifier	outgoingMdLen_		547866	1					
ANR	547978	ExpressionStatement	length = curIndex	164:4:4093:4110	547866	4	True				
ANR	547979	AssignmentExpression	length = curIndex		547866	0		=			
ANR	547980	Identifier	length		547866	0					
ANR	547981	Identifier	curIndex		547866	1					
ANR	547982	ReturnStatement	return inited ;	166:4:4117:4130	547866	5	True				
ANR	547983	Identifier	inited		547866	0					
ANR	547984	ReturnType	bool		547866	1					
ANR	547985	Identifier	_condorPacket :: init_MD		547866	2					
ANR	547986	ParameterList	const char * keyId		547866	3					
ANR	547987	Parameter	const char * keyId	133:28:3293:3310	547866	0	True				
ANR	547988	ParameterType	const char *		547866	0					
ANR	547989	Identifier	keyId		547866	1					
ANR	547990	CFGEntryNode	ENTRY		547866		True				
ANR	547991	CFGExitNode	EXIT		547866		True				
ANR	547992	Symbol	strlen		547866						
ANR	547993	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		547866						
ANR	547994	Symbol	inited		547866						
ANR	547995	Symbol	MAC_SIZE		547866						
ANR	547996	Symbol	true		547866						
ANR	547997	Symbol	length		547866						
ANR	547998	Symbol	keyId		547866						
ANR	547999	Symbol	outgoingMdLen_		547866						
ANR	548000	Symbol	strdup		547866						
ANR	548001	Symbol	curIndex		547866						
ANR	548002	Symbol	outgoingMD5KeyId_		547866						
ANR	548003	Symbol	empty		547866						
ANR	548004	DeclStmt									
ANR	548005	Decl							uint16_t	uint16_t	stemp
ANR	548006	DeclStmt									
ANR	548007	Decl							uint32_t	uint32_t	ltemp
ANR	548008	Function	_condorPacket :: checkHeader	235:0:5812:7879							
ANR	548009	FunctionDef	"_condorPacket :: checkHeader (int & len , void * & dta)"		548008	0					
ANR	548010	CompoundStatement		236:0:5870:7879	548008	0					
ANR	548011	IdentifierDeclStatement	uint16_t stemp ;	237:4:5876:5890	548008	0	True				
ANR	548012	IdentifierDecl	stemp		548008	0					
ANR	548013	IdentifierDeclType	uint16_t		548008	0					
ANR	548014	Identifier	stemp		548008	1					
ANR	548015	IdentifierDeclStatement	"short flags = 0 , mdKeyIdLen = 0 , encKeyIdLen = 0 ;"	238:4:5896:5944	548008	1	True				
ANR	548016	IdentifierDecl	flags = 0		548008	0					
ANR	548017	IdentifierDeclType	short		548008	0					
ANR	548018	Identifier	flags		548008	1					
ANR	548019	AssignmentExpression	flags = 0		548008	2		=			
ANR	548020	Identifier	flags		548008	0					
ANR	548021	PrimaryExpression	0		548008	1					
ANR	548022	IdentifierDecl	mdKeyIdLen = 0		548008	1					
ANR	548023	IdentifierDeclType	short		548008	0					
ANR	548024	Identifier	mdKeyIdLen		548008	1					
ANR	548025	AssignmentExpression	mdKeyIdLen = 0		548008	2		=			
ANR	548026	Identifier	mdKeyIdLen		548008	0					
ANR	548027	PrimaryExpression	0		548008	1					
ANR	548028	IdentifierDecl	encKeyIdLen = 0		548008	2					
ANR	548029	IdentifierDeclType	short		548008	0					
ANR	548030	Identifier	encKeyIdLen		548008	1					
ANR	548031	AssignmentExpression	encKeyIdLen = 0		548008	2		=			
ANR	548032	Identifier	encKeyIdLen		548008	0					
ANR	548033	PrimaryExpression	0		548008	1					
ANR	548034	IfStatement	"if ( memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 ) == 0 )"		548008	2					
ANR	548035	Condition	"memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 ) == 0"	240:7:5954:6016	548008	0	True				
ANR	548036	EqualityExpression	"memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 ) == 0"		548008	0		==			
ANR	548037	CallExpression	"memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 )"		548008	0					
ANR	548038	Callee	memcmp		548008	0					
ANR	548039	Identifier	memcmp		548008	0					
ANR	548040	ArgumentList	data		548008	1					
ANR	548041	Argument	data		548008	0					
ANR	548042	Identifier	data		548008	0					
ANR	548043	Argument	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		548008	1					
ANR	548044	Identifier	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		548008	0					
ANR	548045	Argument	4		548008	2					
ANR	548046	PrimaryExpression	4		548008	0					
ANR	548047	PrimaryExpression	0		548008	1					
ANR	548048	CompoundStatement		5:72:148:148	548008	1					
ANR	548049	ExpressionStatement	data += 4	243:8:6136:6145	548008	0	True				
ANR	548050	AssignmentExpression	data += 4		548008	0		+=			
ANR	548051	Identifier	data		548008	0					
ANR	548052	PrimaryExpression	4		548008	1					
ANR	548053	ExpressionStatement	"memcpy ( & stemp , data , 2 )"	244:8:6155:6178	548008	1	True				
ANR	548054	CallExpression	"memcpy ( & stemp , data , 2 )"		548008	0					
ANR	548055	Callee	memcpy		548008	0					
ANR	548056	Identifier	memcpy		548008	0					
ANR	548057	ArgumentList	& stemp		548008	1					
ANR	548058	Argument	& stemp		548008	0					
ANR	548059	UnaryOperationExpression	& stemp		548008	0					
ANR	548060	UnaryOperator	&		548008	0					
ANR	548061	Identifier	stemp		548008	1					
ANR	548062	Argument	data		548008	1					
ANR	548063	Identifier	data		548008	0					
ANR	548064	Argument	2		548008	2					
ANR	548065	PrimaryExpression	2		548008	0					
ANR	548066	ExpressionStatement	flags = ntohs ( stemp )	245:8:6188:6208	548008	2	True				
ANR	548067	AssignmentExpression	flags = ntohs ( stemp )		548008	0		=			
ANR	548068	Identifier	flags		548008	0					
ANR	548069	CallExpression	ntohs ( stemp )		548008	1					
ANR	548070	Callee	ntohs		548008	0					
ANR	548071	Identifier	ntohs		548008	0					
ANR	548072	ArgumentList	stemp		548008	1					
ANR	548073	Argument	stemp		548008	0					
ANR	548074	Identifier	stemp		548008	0					
ANR	548075	ExpressionStatement	data += 2	246:8:6218:6227	548008	3	True				
ANR	548076	AssignmentExpression	data += 2		548008	0		+=			
ANR	548077	Identifier	data		548008	0					
ANR	548078	PrimaryExpression	2		548008	1					
ANR	548079	ExpressionStatement	"memcpy ( & stemp , data , 2 )"	247:8:6237:6260	548008	4	True				
ANR	548080	CallExpression	"memcpy ( & stemp , data , 2 )"		548008	0					
ANR	548081	Callee	memcpy		548008	0					
ANR	548082	Identifier	memcpy		548008	0					
ANR	548083	ArgumentList	& stemp		548008	1					
ANR	548084	Argument	& stemp		548008	0					
ANR	548085	UnaryOperationExpression	& stemp		548008	0					
ANR	548086	UnaryOperator	&		548008	0					
ANR	548087	Identifier	stemp		548008	1					
ANR	548088	Argument	data		548008	1					
ANR	548089	Identifier	data		548008	0					
ANR	548090	Argument	2		548008	2					
ANR	548091	PrimaryExpression	2		548008	0					
ANR	548092	ExpressionStatement	mdKeyIdLen = ntohs ( stemp )	248:8:6270:6295	548008	5	True				
ANR	548093	AssignmentExpression	mdKeyIdLen = ntohs ( stemp )		548008	0		=			
ANR	548094	Identifier	mdKeyIdLen		548008	0					
ANR	548095	CallExpression	ntohs ( stemp )		548008	1					
ANR	548096	Callee	ntohs		548008	0					
ANR	548097	Identifier	ntohs		548008	0					
ANR	548098	ArgumentList	stemp		548008	1					
ANR	548099	Argument	stemp		548008	0					
ANR	548100	Identifier	stemp		548008	0					
ANR	548101	ExpressionStatement	data += 2	249:8:6305:6314	548008	6	True				
ANR	548102	AssignmentExpression	data += 2		548008	0		+=			
ANR	548103	Identifier	data		548008	0					
ANR	548104	PrimaryExpression	2		548008	1					
ANR	548105	ExpressionStatement	"memcpy ( & stemp , data , 2 )"	250:8:6324:6347	548008	7	True				
ANR	548106	CallExpression	"memcpy ( & stemp , data , 2 )"		548008	0					
ANR	548107	Callee	memcpy		548008	0					
ANR	548108	Identifier	memcpy		548008	0					
ANR	548109	ArgumentList	& stemp		548008	1					
ANR	548110	Argument	& stemp		548008	0					
ANR	548111	UnaryOperationExpression	& stemp		548008	0					
ANR	548112	UnaryOperator	&		548008	0					
ANR	548113	Identifier	stemp		548008	1					
ANR	548114	Argument	data		548008	1					
ANR	548115	Identifier	data		548008	0					
ANR	548116	Argument	2		548008	2					
ANR	548117	PrimaryExpression	2		548008	0					
ANR	548118	ExpressionStatement	encKeyIdLen = ntohs ( stemp )	251:8:6357:6383	548008	8	True				
ANR	548119	AssignmentExpression	encKeyIdLen = ntohs ( stemp )		548008	0		=			
ANR	548120	Identifier	encKeyIdLen		548008	0					
ANR	548121	CallExpression	ntohs ( stemp )		548008	1					
ANR	548122	Callee	ntohs		548008	0					
ANR	548123	Identifier	ntohs		548008	0					
ANR	548124	ArgumentList	stemp		548008	1					
ANR	548125	Argument	stemp		548008	0					
ANR	548126	Identifier	stemp		548008	0					
ANR	548127	ExpressionStatement	data += 2	252:8:6393:6402	548008	9	True				
ANR	548128	AssignmentExpression	data += 2		548008	0		+=			
ANR	548129	Identifier	data		548008	0					
ANR	548130	PrimaryExpression	2		548008	1					
ANR	548131	ExpressionStatement	length -= SAFE_MSG_CRYPTO_HEADER_SIZE	254:8:6413:6450	548008	10	True				
ANR	548132	AssignmentExpression	length -= SAFE_MSG_CRYPTO_HEADER_SIZE		548008	0		-=			
ANR	548133	Identifier	length		548008	0					
ANR	548134	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		548008	1					
ANR	548135	ExpressionStatement	"dprintf ( D_NETWORK , ""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"" , mdKeyIdLen , encKeyIdLen )"	255:8:6460:6629	548008	11	True				
ANR	548136	CallExpression	"dprintf ( D_NETWORK , ""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"" , mdKeyIdLen , encKeyIdLen )"		548008	0					
ANR	548137	Callee	dprintf		548008	0					
ANR	548138	Identifier	dprintf		548008	0					
ANR	548139	ArgumentList	D_NETWORK		548008	1					
ANR	548140	Argument	D_NETWORK		548008	0					
ANR	548141	Identifier	D_NETWORK		548008	0					
ANR	548142	Argument	"""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"""		548008	1					
ANR	548143	PrimaryExpression	"""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"""		548008	0					
ANR	548144	Argument	mdKeyIdLen		548008	2					
ANR	548145	Identifier	mdKeyIdLen		548008	0					
ANR	548146	Argument	encKeyIdLen		548008	3					
ANR	548147	Identifier	encKeyIdLen		548008	0					
ANR	548148	IfStatement	if ( ( flags & MD_IS_ON ) && ( mdKeyIdLen > 0 ) )		548008	12					
ANR	548149	Condition	( flags & MD_IS_ON ) && ( mdKeyIdLen > 0 )	259:12:6644:6681	548008	0	True				
ANR	548150	AndExpression	( flags & MD_IS_ON ) && ( mdKeyIdLen > 0 )		548008	0		&&			
ANR	548151	BitAndExpression	flags & MD_IS_ON		548008	0		&			
ANR	548152	Identifier	flags		548008	0					
ANR	548153	Identifier	MD_IS_ON		548008	1					
ANR	548154	RelationalExpression	mdKeyIdLen > 0		548008	1		>			
ANR	548155	Identifier	mdKeyIdLen		548008	0					
ANR	548156	PrimaryExpression	0		548008	1					
ANR	548157	CompoundStatement		24:52:813:813	548008	1					
ANR	548158	ExpressionStatement	incomingMD5KeyId_ = ( char * ) malloc ( mdKeyIdLen + 1 )	261:12:6730:6779	548008	0	True				
ANR	548159	AssignmentExpression	incomingMD5KeyId_ = ( char * ) malloc ( mdKeyIdLen + 1 )		548008	0		=			
ANR	548160	Identifier	incomingMD5KeyId_		548008	0					
ANR	548161	CastExpression	( char * ) malloc ( mdKeyIdLen + 1 )		548008	1					
ANR	548162	CastTarget	char *		548008	0					
ANR	548163	CallExpression	malloc ( mdKeyIdLen + 1 )		548008	1					
ANR	548164	Callee	malloc		548008	0					
ANR	548165	Identifier	malloc		548008	0					
ANR	548166	ArgumentList	mdKeyIdLen + 1		548008	1					
ANR	548167	Argument	mdKeyIdLen + 1		548008	0					
ANR	548168	AdditiveExpression	mdKeyIdLen + 1		548008	0		+			
ANR	548169	Identifier	mdKeyIdLen		548008	0					
ANR	548170	PrimaryExpression	1		548008	1					
ANR	548171	ExpressionStatement	"memset ( incomingMD5KeyId_ , 0 , mdKeyIdLen + 1 )"	262:12:6793:6835	548008	1	True				
ANR	548172	CallExpression	"memset ( incomingMD5KeyId_ , 0 , mdKeyIdLen + 1 )"		548008	0					
ANR	548173	Callee	memset		548008	0					
ANR	548174	Identifier	memset		548008	0					
ANR	548175	ArgumentList	incomingMD5KeyId_		548008	1					
ANR	548176	Argument	incomingMD5KeyId_		548008	0					
ANR	548177	Identifier	incomingMD5KeyId_		548008	0					
ANR	548178	Argument	0		548008	1					
ANR	548179	PrimaryExpression	0		548008	0					
ANR	548180	Argument	mdKeyIdLen + 1		548008	2					
ANR	548181	AdditiveExpression	mdKeyIdLen + 1		548008	0		+			
ANR	548182	Identifier	mdKeyIdLen		548008	0					
ANR	548183	PrimaryExpression	1		548008	1					
ANR	548184	ExpressionStatement	"memcpy ( incomingMD5KeyId_ , data , mdKeyIdLen )"	263:12:6849:6892	548008	2	True				
ANR	548185	CallExpression	"memcpy ( incomingMD5KeyId_ , data , mdKeyIdLen )"		548008	0					
ANR	548186	Callee	memcpy		548008	0					
ANR	548187	Identifier	memcpy		548008	0					
ANR	548188	ArgumentList	incomingMD5KeyId_		548008	1					
ANR	548189	Argument	incomingMD5KeyId_		548008	0					
ANR	548190	Identifier	incomingMD5KeyId_		548008	0					
ANR	548191	Argument	data		548008	1					
ANR	548192	Identifier	data		548008	0					
ANR	548193	Argument	mdKeyIdLen		548008	2					
ANR	548194	Identifier	mdKeyIdLen		548008	0					
ANR	548195	ExpressionStatement	data += mdKeyIdLen	264:12:6906:6924	548008	3	True				
ANR	548196	AssignmentExpression	data += mdKeyIdLen		548008	0		+=			
ANR	548197	Identifier	data		548008	0					
ANR	548198	Identifier	mdKeyIdLen		548008	1					
ANR	548199	ExpressionStatement	length -= mdKeyIdLen	265:12:6938:6958	548008	4	True				
ANR	548200	AssignmentExpression	length -= mdKeyIdLen		548008	0		-=			
ANR	548201	Identifier	length		548008	0					
ANR	548202	Identifier	mdKeyIdLen		548008	1					
ANR	548203	ExpressionStatement	md_ = ( unsigned char * ) malloc ( MAC_SIZE )	268:12:7008:7048	548008	5	True				
ANR	548204	AssignmentExpression	md_ = ( unsigned char * ) malloc ( MAC_SIZE )		548008	0		=			
ANR	548205	Identifier	md_		548008	0					
ANR	548206	CastExpression	( unsigned char * ) malloc ( MAC_SIZE )		548008	1					
ANR	548207	CastTarget	unsigned char *		548008	0					
ANR	548208	CallExpression	malloc ( MAC_SIZE )		548008	1					
ANR	548209	Callee	malloc		548008	0					
ANR	548210	Identifier	malloc		548008	0					
ANR	548211	ArgumentList	MAC_SIZE		548008	1					
ANR	548212	Argument	MAC_SIZE		548008	0					
ANR	548213	Identifier	MAC_SIZE		548008	0					
ANR	548214	ExpressionStatement	"memcpy ( ( void * ) & md_ [ 0 ] , data , MAC_SIZE )"	269:12:7062:7100	548008	6	True				
ANR	548215	CallExpression	"memcpy ( ( void * ) & md_ [ 0 ] , data , MAC_SIZE )"		548008	0					
ANR	548216	Callee	memcpy		548008	0					
ANR	548217	Identifier	memcpy		548008	0					
ANR	548218	ArgumentList	( void * ) & md_ [ 0 ]		548008	1					
ANR	548219	Argument	( void * ) & md_ [ 0 ]		548008	0					
ANR	548220	CastExpression	( void * ) & md_ [ 0 ]		548008	0					
ANR	548221	CastTarget	void *		548008	0					
ANR	548222	UnaryOperationExpression	& md_ [ 0 ]		548008	1					
ANR	548223	UnaryOperator	&		548008	0					
ANR	548224	ArrayIndexing	md_ [ 0 ]		548008	1					
ANR	548225	Identifier	md_		548008	0					
ANR	548226	PrimaryExpression	0		548008	1					
ANR	548227	Argument	data		548008	1					
ANR	548228	Identifier	data		548008	0					
ANR	548229	Argument	MAC_SIZE		548008	2					
ANR	548230	Identifier	MAC_SIZE		548008	0					
ANR	548231	ExpressionStatement	data += MAC_SIZE	270:12:7114:7130	548008	7	True				
ANR	548232	AssignmentExpression	data += MAC_SIZE		548008	0		+=			
ANR	548233	Identifier	data		548008	0					
ANR	548234	Identifier	MAC_SIZE		548008	1					
ANR	548235	ExpressionStatement	length -= MAC_SIZE	271:12:7144:7162	548008	8	True				
ANR	548236	AssignmentExpression	length -= MAC_SIZE		548008	0		-=			
ANR	548237	Identifier	length		548008	0					
ANR	548238	Identifier	MAC_SIZE		548008	1					
ANR	548239	ExpressionStatement	verified_ = false	272:12:7176:7193	548008	9	True				
ANR	548240	AssignmentExpression	verified_ = false		548008	0		=			
ANR	548241	Identifier	verified_		548008	0					
ANR	548242	Identifier	false		548008	1					
ANR	548243	ElseStatement	else		548008	0					
ANR	548244	CompoundStatement		39:13:1347:1347	548008	0					
ANR	548245	IfStatement	if ( flags & MD_IS_ON )		548008	0					
ANR	548246	Condition	flags & MD_IS_ON	275:16:7236:7251	548008	0	True				
ANR	548247	BitAndExpression	flags & MD_IS_ON		548008	0		&			
ANR	548248	Identifier	flags		548008	0					
ANR	548249	Identifier	MD_IS_ON		548008	1					
ANR	548250	CompoundStatement		40:34:1383:1383	548008	1					
ANR	548251	ExpressionStatement	"dprintf ( D_ALWAYS , ""Incorrect MD header information\\n"" )"	276:16:7272:7325	548008	0	True				
ANR	548252	CallExpression	"dprintf ( D_ALWAYS , ""Incorrect MD header information\\n"" )"		548008	0					
ANR	548253	Callee	dprintf		548008	0					
ANR	548254	Identifier	dprintf		548008	0					
ANR	548255	ArgumentList	D_ALWAYS		548008	1					
ANR	548256	Argument	D_ALWAYS		548008	0					
ANR	548257	Identifier	D_ALWAYS		548008	0					
ANR	548258	Argument	"""Incorrect MD header information\\n"""		548008	1					
ANR	548259	PrimaryExpression	"""Incorrect MD header information\\n"""		548008	0					
ANR	548260	IfStatement	if ( ( flags & ENCRYPTION_IS_ON ) && ( encKeyIdLen > 0 ) )		548008	13					
ANR	548261	Condition	( flags & ENCRYPTION_IS_ON ) && ( encKeyIdLen > 0 )	280:12:7364:7410	548008	0	True				
ANR	548262	AndExpression	( flags & ENCRYPTION_IS_ON ) && ( encKeyIdLen > 0 )		548008	0		&&			
ANR	548263	BitAndExpression	flags & ENCRYPTION_IS_ON		548008	0		&			
ANR	548264	Identifier	flags		548008	0					
ANR	548265	Identifier	ENCRYPTION_IS_ON		548008	1					
ANR	548266	RelationalExpression	encKeyIdLen > 0		548008	1		>			
ANR	548267	Identifier	encKeyIdLen		548008	0					
ANR	548268	PrimaryExpression	0		548008	1					
ANR	548269	CompoundStatement		45:61:1542:1542	548008	1					
ANR	548270	ExpressionStatement	incomingEncKeyId_ = ( char * ) malloc ( encKeyIdLen + 1 )	281:12:7427:7477	548008	0	True				
ANR	548271	AssignmentExpression	incomingEncKeyId_ = ( char * ) malloc ( encKeyIdLen + 1 )		548008	0		=			
ANR	548272	Identifier	incomingEncKeyId_		548008	0					
ANR	548273	CastExpression	( char * ) malloc ( encKeyIdLen + 1 )		548008	1					
ANR	548274	CastTarget	char *		548008	0					
ANR	548275	CallExpression	malloc ( encKeyIdLen + 1 )		548008	1					
ANR	548276	Callee	malloc		548008	0					
ANR	548277	Identifier	malloc		548008	0					
ANR	548278	ArgumentList	encKeyIdLen + 1		548008	1					
ANR	548279	Argument	encKeyIdLen + 1		548008	0					
ANR	548280	AdditiveExpression	encKeyIdLen + 1		548008	0		+			
ANR	548281	Identifier	encKeyIdLen		548008	0					
ANR	548282	PrimaryExpression	1		548008	1					
ANR	548283	ExpressionStatement	"memset ( incomingEncKeyId_ , 0 , encKeyIdLen + 1 )"	282:12:7491:7536	548008	1	True				
ANR	548284	CallExpression	"memset ( incomingEncKeyId_ , 0 , encKeyIdLen + 1 )"		548008	0					
ANR	548285	Callee	memset		548008	0					
ANR	548286	Identifier	memset		548008	0					
ANR	548287	ArgumentList	incomingEncKeyId_		548008	1					
ANR	548288	Argument	incomingEncKeyId_		548008	0					
ANR	548289	Identifier	incomingEncKeyId_		548008	0					
ANR	548290	Argument	0		548008	1					
ANR	548291	PrimaryExpression	0		548008	0					
ANR	548292	Argument	encKeyIdLen + 1		548008	2					
ANR	548293	AdditiveExpression	encKeyIdLen + 1		548008	0		+			
ANR	548294	Identifier	encKeyIdLen		548008	0					
ANR	548295	PrimaryExpression	1		548008	1					
ANR	548296	ExpressionStatement	"memcpy ( incomingEncKeyId_ , data , encKeyIdLen )"	283:12:7550:7594	548008	2	True				
ANR	548297	CallExpression	"memcpy ( incomingEncKeyId_ , data , encKeyIdLen )"		548008	0					
ANR	548298	Callee	memcpy		548008	0					
ANR	548299	Identifier	memcpy		548008	0					
ANR	548300	ArgumentList	incomingEncKeyId_		548008	1					
ANR	548301	Argument	incomingEncKeyId_		548008	0					
ANR	548302	Identifier	incomingEncKeyId_		548008	0					
ANR	548303	Argument	data		548008	1					
ANR	548304	Identifier	data		548008	0					
ANR	548305	Argument	encKeyIdLen		548008	2					
ANR	548306	Identifier	encKeyIdLen		548008	0					
ANR	548307	ExpressionStatement	data += encKeyIdLen	284:12:7608:7627	548008	3	True				
ANR	548308	AssignmentExpression	data += encKeyIdLen		548008	0		+=			
ANR	548309	Identifier	data		548008	0					
ANR	548310	Identifier	encKeyIdLen		548008	1					
ANR	548311	ExpressionStatement	length -= encKeyIdLen	285:12:7641:7662	548008	4	True				
ANR	548312	AssignmentExpression	length -= encKeyIdLen		548008	0		-=			
ANR	548313	Identifier	length		548008	0					
ANR	548314	Identifier	encKeyIdLen		548008	1					
ANR	548315	ElseStatement	else		548008	0					
ANR	548316	CompoundStatement		52:13:1816:1816	548008	0					
ANR	548317	IfStatement	if ( flags & ENCRYPTION_IS_ON )		548008	0					
ANR	548318	Condition	flags & ENCRYPTION_IS_ON	288:16:7705:7728	548008	0	True				
ANR	548319	BitAndExpression	flags & ENCRYPTION_IS_ON		548008	0		&			
ANR	548320	Identifier	flags		548008	0					
ANR	548321	Identifier	ENCRYPTION_IS_ON		548008	1					
ANR	548322	CompoundStatement		53:42:1860:1860	548008	1					
ANR	548323	ExpressionStatement	"dprintf ( D_ALWAYS , ""Incorrect ENC Header information\\n"" )"	289:16:7749:7804	548008	0	True				
ANR	548324	CallExpression	"dprintf ( D_ALWAYS , ""Incorrect ENC Header information\\n"" )"		548008	0					
ANR	548325	Callee	dprintf		548008	0					
ANR	548326	Identifier	dprintf		548008	0					
ANR	548327	ArgumentList	D_ALWAYS		548008	1					
ANR	548328	Argument	D_ALWAYS		548008	0					
ANR	548329	Identifier	D_ALWAYS		548008	0					
ANR	548330	Argument	"""Incorrect ENC Header information\\n"""		548008	1					
ANR	548331	PrimaryExpression	"""Incorrect ENC Header information\\n"""		548008	0					
ANR	548332	ExpressionStatement	len = length	293:8:7839:7851	548008	14	True				
ANR	548333	AssignmentExpression	len = length		548008	0		=			
ANR	548334	Identifier	len		548008	0					
ANR	548335	Identifier	length		548008	1					
ANR	548336	ExpressionStatement	dta = data	294:8:7861:7871	548008	15	True				
ANR	548337	AssignmentExpression	dta = data		548008	0		=			
ANR	548338	Identifier	dta		548008	0					
ANR	548339	Identifier	data		548008	1					
ANR	548340	ReturnType	void		548008	1					
ANR	548341	Identifier	_condorPacket :: checkHeader		548008	2					
ANR	548342	ParameterList	"int & len , void * & dta"		548008	3					
ANR	548343	Parameter	int & len	235:34:5846:5854	548008	0	True				
ANR	548344	ParameterType	int &		548008	0					
ANR	548345	Identifier	len		548008	1					
ANR	548346	Parameter	void * & dta	235:45:5857:5867	548008	1	True				
ANR	548347	ParameterType	void * &		548008	0					
ANR	548348	Identifier	dta		548008	1					
ANR	548349	CFGEntryNode	ENTRY		548008		True				
ANR	548350	CFGExitNode	EXIT		548008		True				
ANR	548351	Symbol	malloc		548008						
ANR	548352	Symbol	data		548008						
ANR	548353	Symbol	MD_IS_ON		548008						
ANR	548354	Symbol	flags		548008						
ANR	548355	Symbol	length		548008						
ANR	548356	Symbol	false		548008						
ANR	548357	Symbol	D_ALWAYS		548008						
ANR	548358	Symbol	mdKeyIdLen		548008						
ANR	548359	Symbol	md_		548008						
ANR	548360	Symbol	ENCRYPTION_IS_ON		548008						
ANR	548361	Symbol	stemp		548008						
ANR	548362	Symbol	incomingEncKeyId_		548008						
ANR	548363	Symbol	encKeyIdLen		548008						
ANR	548364	Symbol	dta		548008						
ANR	548365	Symbol	ntohs		548008						
ANR	548366	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		548008						
ANR	548367	Symbol	memcmp		548008						
ANR	548368	Symbol	len		548008						
ANR	548369	Symbol	MAC_SIZE		548008						
ANR	548370	Symbol	verified_		548008						
ANR	548371	Symbol	incomingMD5KeyId_		548008						
ANR	548372	Symbol	D_NETWORK		548008						
ANR	548373	Symbol	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		548008						
ANR	548374	Symbol	& stemp		548008						
ANR	548375	Function	_condorPacket :: verifyMD	298:0:7882:8805							
ANR	548376	FunctionDef	_condorPacket :: verifyMD (Condor_MD_MAC * mdChecker)		548375	0					
ANR	548377	CompoundStatement		299:0:7938:8805	548375	0					
ANR	548378	IfStatement	if ( mdChecker )		548375	0					
ANR	548379	Condition	mdChecker	300:8:7948:7956	548375	0	True				
ANR	548380	Identifier	mdChecker		548375	0					
ANR	548381	CompoundStatement		2:19:20:20	548375	1					
ANR	548382	IfStatement	if ( md_ == NULL )		548375	0					
ANR	548383	Condition	md_ == NULL	301:12:7973:7983	548375	0	True				
ANR	548384	EqualityExpression	md_ == NULL		548375	0		==			
ANR	548385	Identifier	md_		548375	0					
ANR	548386	Identifier	NULL		548375	1					
ANR	548387	CompoundStatement		3:25:47:47	548375	1					
ANR	548388	ExpressionStatement	verified_ = false	302:12:8000:8017	548375	0	True				
ANR	548389	AssignmentExpression	verified_ = false		548375	0		=			
ANR	548390	Identifier	verified_		548375	0					
ANR	548391	Identifier	false		548375	1					
ANR	548392	ReturnStatement	return verified_ ;	303:12:8031:8047	548375	1	True				
ANR	548393	Identifier	verified_		548375	0					
ANR	548394	ElseStatement	else		548375	0					
ANR	548395	CompoundStatement		7:13:133:133	548375	0					
ANR	548396	IfStatement	if ( ( curIndex == 0 ) && ! verified_ )		548375	0					
ANR	548397	Condition	( curIndex == 0 ) && ! verified_	306:17:8091:8119	548375	0	True				
ANR	548398	AndExpression	( curIndex == 0 ) && ! verified_		548375	0		&&			
ANR	548399	EqualityExpression	curIndex == 0		548375	0		==			
ANR	548400	Identifier	curIndex		548375	0					
ANR	548401	PrimaryExpression	0		548375	1					
ANR	548402	UnaryOperationExpression	! verified_		548375	1					
ANR	548403	UnaryOperator	!		548375	0					
ANR	548404	Identifier	verified_		548375	1					
ANR	548405	CompoundStatement		8:48:183:183	548375	1					
ANR	548406	ExpressionStatement	"mdChecker -> addMD ( ( unsigned char * ) data , length )"	307:16:8140:8187	548375	0	True				
ANR	548407	CallExpression	"mdChecker -> addMD ( ( unsigned char * ) data , length )"		548375	0					
ANR	548408	Callee	mdChecker -> addMD		548375	0					
ANR	548409	PtrMemberAccess	mdChecker -> addMD		548375	0					
ANR	548410	Identifier	mdChecker		548375	0					
ANR	548411	Identifier	addMD		548375	1					
ANR	548412	ArgumentList	( unsigned char * ) data		548375	1					
ANR	548413	Argument	( unsigned char * ) data		548375	0					
ANR	548414	CastExpression	( unsigned char * ) data		548375	0					
ANR	548415	CastTarget	unsigned char *		548375	0					
ANR	548416	Identifier	data		548375	1					
ANR	548417	Argument	length		548375	1					
ANR	548418	Identifier	length		548375	0					
ANR	548419	IfStatement	if ( mdChecker -> verifyMD ( ( unsigned char * ) & md_ [ 0 ] ) )		548375	1					
ANR	548420	Condition	mdChecker -> verifyMD ( ( unsigned char * ) & md_ [ 0 ] )	309:20:8222:8266	548375	0	True				
ANR	548421	CallExpression	mdChecker -> verifyMD ( ( unsigned char * ) & md_ [ 0 ] )		548375	0					
ANR	548422	Callee	mdChecker -> verifyMD		548375	0					
ANR	548423	PtrMemberAccess	mdChecker -> verifyMD		548375	0					
ANR	548424	Identifier	mdChecker		548375	0					
ANR	548425	Identifier	verifyMD		548375	1					
ANR	548426	ArgumentList	( unsigned char * ) & md_ [ 0 ]		548375	1					
ANR	548427	Argument	( unsigned char * ) & md_ [ 0 ]		548375	0					
ANR	548428	CastExpression	( unsigned char * ) & md_ [ 0 ]		548375	0					
ANR	548429	CastTarget	unsigned char *		548375	0					
ANR	548430	UnaryOperationExpression	& md_ [ 0 ]		548375	1					
ANR	548431	UnaryOperator	&		548375	0					
ANR	548432	ArrayIndexing	md_ [ 0 ]		548375	1					
ANR	548433	Identifier	md_		548375	0					
ANR	548434	PrimaryExpression	0		548375	1					
ANR	548435	CompoundStatement		11:67:330:330	548375	1					
ANR	548436	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"	310:20:8291:8328	548375	0	True				
ANR	548437	CallExpression	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"		548375	0					
ANR	548438	Callee	dprintf		548375	0					
ANR	548439	Identifier	dprintf		548375	0					
ANR	548440	ArgumentList	D_SECURITY		548375	1					
ANR	548441	Argument	D_SECURITY		548375	0					
ANR	548442	Identifier	D_SECURITY		548375	0					
ANR	548443	Argument	"""MD verified!\\n"""		548375	1					
ANR	548444	PrimaryExpression	"""MD verified!\\n"""		548375	0					
ANR	548445	ExpressionStatement	verified_ = true	311:20:8350:8366	548375	1	True				
ANR	548446	AssignmentExpression	verified_ = true		548375	0		=			
ANR	548447	Identifier	verified_		548375	0					
ANR	548448	Identifier	true		548375	1					
ANR	548449	ElseStatement	else		548375	0					
ANR	548450	CompoundStatement		15:21:468:468	548375	0					
ANR	548451	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verification failed for short message\\n"" )"	314:20:8429:8494	548375	0	True				
ANR	548452	CallExpression	"dprintf ( D_SECURITY , ""MD verification failed for short message\\n"" )"		548375	0					
ANR	548453	Callee	dprintf		548375	0					
ANR	548454	Identifier	dprintf		548375	0					
ANR	548455	ArgumentList	D_SECURITY		548375	1					
ANR	548456	Argument	D_SECURITY		548375	0					
ANR	548457	Identifier	D_SECURITY		548375	0					
ANR	548458	Argument	"""MD verification failed for short message\\n"""		548375	1					
ANR	548459	PrimaryExpression	"""MD verification failed for short message\\n"""		548375	0					
ANR	548460	ExpressionStatement	verified_ = false	315:20:8516:8533	548375	1	True				
ANR	548461	AssignmentExpression	verified_ = false		548375	0		=			
ANR	548462	Identifier	verified_		548375	0					
ANR	548463	Identifier	false		548375	1					
ANR	548464	ElseStatement	else		548375	0					
ANR	548465	IfStatement	if ( curIndex != 0 )		548375	0					
ANR	548466	Condition	curIndex != 0	318:21:8588:8600	548375	0	True				
ANR	548467	EqualityExpression	curIndex != 0		548375	0		!=			
ANR	548468	Identifier	curIndex		548375	0					
ANR	548469	PrimaryExpression	0		548375	1					
ANR	548470	CompoundStatement		20:36:664:664	548375	1					
ANR	548471	ExpressionStatement	verified_ = false	319:16:8621:8638	548375	0	True				
ANR	548472	AssignmentExpression	verified_ = false		548375	0		=			
ANR	548473	Identifier	verified_		548375	0					
ANR	548474	Identifier	false		548375	1					
ANR	548475	ElseStatement	else		548375	0					
ANR	548476	CompoundStatement		23:17:732:732	548375	0					
ANR	548477	ElseStatement	else		548375	0					
ANR	548478	CompoundStatement		28:9:810:810	548375	0					
ANR	548479	ExpressionStatement	verified_ = true	327:8:8759:8775	548375	0	True				
ANR	548480	AssignmentExpression	verified_ = true		548375	0		=			
ANR	548481	Identifier	verified_		548375	0					
ANR	548482	Identifier	true		548375	1					
ANR	548483	ReturnStatement	return verified_ ;	329:4:8787:8803	548375	1	True				
ANR	548484	Identifier	verified_		548375	0					
ANR	548485	ReturnType	bool		548375	1					
ANR	548486	Identifier	_condorPacket :: verifyMD		548375	2					
ANR	548487	ParameterList	Condor_MD_MAC * mdChecker		548375	3					
ANR	548488	Parameter	Condor_MD_MAC * mdChecker	298:29:7911:7935	548375	0	True				
ANR	548489	ParameterType	Condor_MD_MAC *		548375	0					
ANR	548490	Identifier	mdChecker		548375	1					
ANR	548491	CFGEntryNode	ENTRY		548375		True				
ANR	548492	CFGExitNode	EXIT		548375		True				
ANR	548493	Symbol	mdChecker -> verifyMD		548375						
ANR	548494	Symbol	NULL		548375						
ANR	548495	Symbol	verified_		548375						
ANR	548496	Symbol	data		548375						
ANR	548497	Symbol	D_SECURITY		548375						
ANR	548498	Symbol	false		548375						
ANR	548499	Symbol	length		548375						
ANR	548500	Symbol	true		548375						
ANR	548501	Symbol	md_		548375						
ANR	548502	Symbol	* mdChecker		548375						
ANR	548503	Symbol	curIndex		548375						
ANR	548504	Symbol	mdChecker		548375						
ANR	548505	Function	_condorPacket :: getn	343:0:9254:9519							
ANR	548506	FunctionDef	"_condorPacket :: getn (char * dta , const int size)"		548505	0					
ANR	548507	CompoundStatement		344:0:9305:9519	548505	0					
ANR	548508	IfStatement	if ( ! dta || curIndex + size > length )		548505	0					
ANR	548509	Condition	! dta || curIndex + size > length	345:4:9311:9342	548505	0	True				
ANR	548510	OrExpression	! dta || curIndex + size > length		548505	0		||			
ANR	548511	UnaryOperationExpression	! dta		548505	0					
ANR	548512	UnaryOperator	!		548505	0					
ANR	548513	Identifier	dta		548505	1					
ANR	548514	RelationalExpression	curIndex + size > length		548505	1		>			
ANR	548515	AdditiveExpression	curIndex + size		548505	0		+			
ANR	548516	Identifier	curIndex		548505	0					
ANR	548517	Identifier	size		548505	1					
ANR	548518	Identifier	length		548505	1					
ANR	548519	CompoundStatement		2:38:39:39	548505	1					
ANR	548520	ExpressionStatement	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"	346:8:9355:9428	548505	0	True				
ANR	548521	CallExpression	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"		548505	0					
ANR	548522	Callee	dprintf		548505	0					
ANR	548523	Identifier	dprintf		548505	0					
ANR	548524	ArgumentList	D_NETWORK		548505	1					
ANR	548525	Argument	D_NETWORK		548505	0					
ANR	548526	Identifier	D_NETWORK		548505	0					
ANR	548527	Argument	"""dta is NULL or more data than queued is requested\\n"""		548505	1					
ANR	548528	PrimaryExpression	"""dta is NULL or more data than queued is requested\\n"""		548505	0					
ANR	548529	ReturnStatement	return - 1 ;	347:2:9432:9441	548505	1	True				
ANR	548530	UnaryOperationExpression	- 1		548505	0					
ANR	548531	UnaryOperator	-		548505	0					
ANR	548532	PrimaryExpression	1		548505	1					
ANR	548533	ExpressionStatement	"memcpy ( dta , & data [ curIndex ] , size )"	349:1:9450:9484	548505	1	True				
ANR	548534	CallExpression	"memcpy ( dta , & data [ curIndex ] , size )"		548505	0					
ANR	548535	Callee	memcpy		548505	0					
ANR	548536	Identifier	memcpy		548505	0					
ANR	548537	ArgumentList	dta		548505	1					
ANR	548538	Argument	dta		548505	0					
ANR	548539	Identifier	dta		548505	0					
ANR	548540	Argument	& data [ curIndex ]		548505	1					
ANR	548541	UnaryOperationExpression	& data [ curIndex ]		548505	0					
ANR	548542	UnaryOperator	&		548505	0					
ANR	548543	ArrayIndexing	data [ curIndex ]		548505	1					
ANR	548544	Identifier	data		548505	0					
ANR	548545	Identifier	curIndex		548505	1					
ANR	548546	Argument	size		548505	2					
ANR	548547	Identifier	size		548505	0					
ANR	548548	ExpressionStatement	curIndex += size	350:1:9487:9503	548505	2	True				
ANR	548549	AssignmentExpression	curIndex += size		548505	0		+=			
ANR	548550	Identifier	curIndex		548505	0					
ANR	548551	Identifier	size		548505	1					
ANR	548552	ReturnStatement	return size ;	351:1:9506:9517	548505	3	True				
ANR	548553	Identifier	size		548505	0					
ANR	548554	ReturnType	int		548505	1					
ANR	548555	Identifier	_condorPacket :: getn		548505	2					
ANR	548556	ParameterList	"char * dta , const int size"		548505	3					
ANR	548557	Parameter	char * dta	343:24:9278:9286	548505	0	True				
ANR	548558	ParameterType	char *		548505	0					
ANR	548559	Identifier	dta		548505	1					
ANR	548560	Parameter	const int size	343:35:9289:9302	548505	1	True				
ANR	548561	ParameterType	const int		548505	0					
ANR	548562	Identifier	size		548505	1					
ANR	548563	CFGEntryNode	ENTRY		548505		True				
ANR	548564	CFGExitNode	EXIT		548505		True				
ANR	548565	Symbol	dta		548505						
ANR	548566	Symbol	size		548505						
ANR	548567	Symbol	data		548505						
ANR	548568	Symbol	length		548505						
ANR	548569	Symbol	D_NETWORK		548505						
ANR	548570	Symbol	curIndex		548505						
ANR	548571	Function	_condorPacket :: getPtr	366:0:10001:10289							
ANR	548572	FunctionDef	"_condorPacket :: getPtr (void * & ptr , const char delim)"		548571	0					
ANR	548573	CompoundStatement		367:0:10057:10289	548571	0					
ANR	548574	IdentifierDeclStatement	int temp ;	368:1:10060:10068	548571	0	True				
ANR	548575	IdentifierDecl	temp		548571	0					
ANR	548576	IdentifierDeclType	int		548571	0					
ANR	548577	Identifier	temp		548571	1					
ANR	548578	IdentifierDeclStatement	int size = 1 ;	369:1:10071:10084	548571	1	True				
ANR	548579	IdentifierDecl	size = 1		548571	0					
ANR	548580	IdentifierDeclType	int		548571	0					
ANR	548581	Identifier	size		548571	1					
ANR	548582	AssignmentExpression	size = 1		548571	2		=			
ANR	548583	Identifier	size		548571	0					
ANR	548584	PrimaryExpression	1		548571	1					
ANR	548585	ExpressionStatement	temp = curIndex	371:1:10088:10103	548571	2	True				
ANR	548586	AssignmentExpression	temp = curIndex		548571	0		=			
ANR	548587	Identifier	temp		548571	0					
ANR	548588	Identifier	curIndex		548571	1					
ANR	548589	WhileStatement	while ( temp < length && data [ temp ] != delim )		548571	3					
ANR	548590	Condition	temp < length && data [ temp ] != delim	372:7:10112:10147	548571	0	True				
ANR	548591	AndExpression	temp < length && data [ temp ] != delim		548571	0		&&			
ANR	548592	RelationalExpression	temp < length		548571	0		<			
ANR	548593	Identifier	temp		548571	0					
ANR	548594	Identifier	length		548571	1					
ANR	548595	EqualityExpression	data [ temp ] != delim		548571	1		!=			
ANR	548596	ArrayIndexing	data [ temp ]		548571	0					
ANR	548597	Identifier	data		548571	0					
ANR	548598	Identifier	temp		548571	1					
ANR	548599	Identifier	delim		548571	1					
ANR	548600	CompoundStatement		6:45:92:92	548571	1					
ANR	548601	ExpressionStatement	temp ++	373:2:10154:10160	548571	0	True				
ANR	548602	PostIncDecOperationExpression	temp ++		548571	0					
ANR	548603	Identifier	temp		548571	0					
ANR	548604	IncDec	++		548571	1					
ANR	548605	ExpressionStatement	size ++	374:2:10164:10170	548571	1	True				
ANR	548606	PostIncDecOperationExpression	size ++		548571	0					
ANR	548607	Identifier	size		548571	0					
ANR	548608	IncDec	++		548571	1					
ANR	548609	IfStatement	if ( temp == length )		548571	4					
ANR	548610	Condition	temp == length	377:4:10180:10193	548571	0	True				
ANR	548611	EqualityExpression	temp == length		548571	0		==			
ANR	548612	Identifier	temp		548571	0					
ANR	548613	Identifier	length		548571	1					
ANR	548614	ReturnStatement	return - 1 ;	378:2:10211:10220	548571	1	True				
ANR	548615	UnaryOperationExpression	- 1		548571	0					
ANR	548616	UnaryOperator	-		548571	0					
ANR	548617	PrimaryExpression	1		548571	1					
ANR	548618	ExpressionStatement	ptr = & data [ curIndex ]	380:1:10233:10254	548571	5	True				
ANR	548619	AssignmentExpression	ptr = & data [ curIndex ]		548571	0		=			
ANR	548620	Identifier	ptr		548571	0					
ANR	548621	UnaryOperationExpression	& data [ curIndex ]		548571	1					
ANR	548622	UnaryOperator	&		548571	0					
ANR	548623	ArrayIndexing	data [ curIndex ]		548571	1					
ANR	548624	Identifier	data		548571	0					
ANR	548625	Identifier	curIndex		548571	1					
ANR	548626	ExpressionStatement	curIndex += size	381:1:10257:10273	548571	6	True				
ANR	548627	AssignmentExpression	curIndex += size		548571	0		+=			
ANR	548628	Identifier	curIndex		548571	0					
ANR	548629	Identifier	size		548571	1					
ANR	548630	ReturnStatement	return size ;	382:1:10276:10287	548571	7	True				
ANR	548631	Identifier	size		548571	0					
ANR	548632	ReturnType	int		548571	1					
ANR	548633	Identifier	_condorPacket :: getPtr		548571	2					
ANR	548634	ParameterList	"void * & ptr , const char delim"		548571	3					
ANR	548635	Parameter	void * & ptr	366:26:10027:10036	548571	0	True				
ANR	548636	ParameterType	void * &		548571	0					
ANR	548637	Identifier	ptr		548571	1					
ANR	548638	Parameter	const char delim	366:38:10039:10054	548571	1	True				
ANR	548639	ParameterType	const char		548571	0					
ANR	548640	Identifier	delim		548571	1					
ANR	548641	CFGEntryNode	ENTRY		548571		True				
ANR	548642	CFGExitNode	EXIT		548571		True				
ANR	548643	Symbol	temp		548571						
ANR	548644	Symbol	size		548571						
ANR	548645	Symbol	data		548571						
ANR	548646	Symbol	length		548571						
ANR	548647	Symbol	curIndex		548571						
ANR	548648	Symbol	* data		548571						
ANR	548649	Symbol	* temp		548571						
ANR	548650	Symbol	ptr		548571						
ANR	548651	Symbol	delim		548571						
ANR	548652	Function	_condorPacket :: peek	393:0:10481:10591							
ANR	548653	FunctionDef	_condorPacket :: peek (char & c)		548652	0					
ANR	548654	CompoundStatement		394:0:10514:10591	548652	0					
ANR	548655	IfStatement	if ( curIndex == length )		548652	0					
ANR	548656	Condition	curIndex == length	395:4:10520:10537	548652	0	True				
ANR	548657	EqualityExpression	curIndex == length		548652	0		==			
ANR	548658	Identifier	curIndex		548652	0					
ANR	548659	Identifier	length		548652	1					
ANR	548660	ReturnStatement	return FALSE ;	396:2:10542:10554	548652	1	True				
ANR	548661	Identifier	FALSE		548652	0					
ANR	548662	ExpressionStatement	c = data [ curIndex ]	397:1:10557:10575	548652	1	True				
ANR	548663	AssignmentExpression	c = data [ curIndex ]		548652	0		=			
ANR	548664	Identifier	c		548652	0					
ANR	548665	ArrayIndexing	data [ curIndex ]		548652	1					
ANR	548666	Identifier	data		548652	0					
ANR	548667	Identifier	curIndex		548652	1					
ANR	548668	ReturnStatement	return TRUE ;	398:1:10578:10589	548652	2	True				
ANR	548669	Identifier	TRUE		548652	0					
ANR	548670	ReturnType	int		548652	1					
ANR	548671	Identifier	_condorPacket :: peek		548652	2					
ANR	548672	ParameterList	char & c		548652	3					
ANR	548673	Parameter	char & c	393:24:10505:10511	548652	0	True				
ANR	548674	ParameterType	char &		548652	0					
ANR	548675	Identifier	c		548652	1					
ANR	548676	CFGEntryNode	ENTRY		548652		True				
ANR	548677	CFGExitNode	EXIT		548652		True				
ANR	548678	Symbol	* curIndex		548652						
ANR	548679	Symbol	c		548652						
ANR	548680	Symbol	data		548652						
ANR	548681	Symbol	length		548652						
ANR	548682	Symbol	TRUE		548652						
ANR	548683	Symbol	FALSE		548652						
ANR	548684	Symbol	curIndex		548652						
ANR	548685	Symbol	* data		548652						
ANR	548686	Function	_condorPacket :: reset	402:0:10626:11287							
ANR	548687	FunctionDef	_condorPacket :: reset ()		548686	0					
ANR	548688	CompoundStatement		403:0:10654:11287	548686	0					
ANR	548689	ExpressionStatement	curIndex = 0	404:4:10660:10672	548686	0	True				
ANR	548690	AssignmentExpression	curIndex = 0		548686	0		=			
ANR	548691	Identifier	curIndex		548686	0					
ANR	548692	PrimaryExpression	0		548686	1					
ANR	548693	ExpressionStatement	length = 0	405:4:10678:10690	548686	1	True				
ANR	548694	AssignmentExpression	length = 0		548686	0		=			
ANR	548695	Identifier	length		548686	0					
ANR	548696	PrimaryExpression	0		548686	1					
ANR	548697	IfStatement	if ( outgoingMD5KeyId_ )		548686	2					
ANR	548698	Condition	outgoingMD5KeyId_	407:8:10701:10717	548686	0	True				
ANR	548699	Identifier	outgoingMD5KeyId_		548686	0					
ANR	548700	CompoundStatement		5:27:65:65	548686	1					
ANR	548701	ExpressionStatement	curIndex = MAC_SIZE + outgoingMdLen_	410:8:10798:10834	548686	0	True				
ANR	548702	AssignmentExpression	curIndex = MAC_SIZE + outgoingMdLen_		548686	0		=			
ANR	548703	Identifier	curIndex		548686	0					
ANR	548704	AdditiveExpression	MAC_SIZE + outgoingMdLen_		548686	1		+			
ANR	548705	Identifier	MAC_SIZE		548686	0					
ANR	548706	Identifier	outgoingMdLen_		548686	1					
ANR	548707	IfStatement	if ( outgoingEncKeyId_ )		548686	3					
ANR	548708	Condition	outgoingEncKeyId_	413:8:10851:10867	548686	0	True				
ANR	548709	Identifier	outgoingEncKeyId_		548686	0					
ANR	548710	CompoundStatement		11:27:215:215	548686	1					
ANR	548711	ExpressionStatement	curIndex += outgoingEidLen_	416:8:10948:10975	548686	0	True				
ANR	548712	AssignmentExpression	curIndex += outgoingEidLen_		548686	0		+=			
ANR	548713	Identifier	curIndex		548686	0					
ANR	548714	Identifier	outgoingEidLen_		548686	1					
ANR	548715	IfStatement	if ( curIndex > 0 )		548686	4					
ANR	548716	Condition	curIndex > 0	419:8:10992:11003	548686	0	True				
ANR	548717	RelationalExpression	curIndex > 0		548686	0		>			
ANR	548718	Identifier	curIndex		548686	0					
ANR	548719	PrimaryExpression	0		548686	1					
ANR	548720	CompoundStatement		17:22:351:351	548686	1					
ANR	548721	ExpressionStatement	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE	420:8:11016:11055	548686	0	True				
ANR	548722	AssignmentExpression	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE		548686	0		+=			
ANR	548723	Identifier	curIndex		548686	0					
ANR	548724	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		548686	1					
ANR	548725	ExpressionStatement	length = curIndex	423:4:11068:11085	548686	5	True				
ANR	548726	AssignmentExpression	length = curIndex		548686	0		=			
ANR	548727	Identifier	length		548686	0					
ANR	548728	Identifier	curIndex		548686	1					
ANR	548729	IfStatement	if ( incomingMD5KeyId_ )		548686	6					
ANR	548730	Condition	incomingMD5KeyId_	425:8:11096:11112	548686	0	True				
ANR	548731	Identifier	incomingMD5KeyId_		548686	0					
ANR	548732	CompoundStatement		23:27:460:460	548686	1					
ANR	548733	ExpressionStatement	free ( incomingMD5KeyId_ )	426:8:11125:11148	548686	0	True				
ANR	548734	CallExpression	free ( incomingMD5KeyId_ )		548686	0					
ANR	548735	Callee	free		548686	0					
ANR	548736	Identifier	free		548686	0					
ANR	548737	ArgumentList	incomingMD5KeyId_		548686	1					
ANR	548738	Argument	incomingMD5KeyId_		548686	0					
ANR	548739	Identifier	incomingMD5KeyId_		548686	0					
ANR	548740	ExpressionStatement	incomingMD5KeyId_ = 0	427:8:11158:11179	548686	1	True				
ANR	548741	AssignmentExpression	incomingMD5KeyId_ = 0		548686	0		=			
ANR	548742	Identifier	incomingMD5KeyId_		548686	0					
ANR	548743	PrimaryExpression	0		548686	1					
ANR	548744	IfStatement	if ( incomingEncKeyId_ )		548686	7					
ANR	548745	Condition	incomingEncKeyId_	430:8:11196:11212	548686	0	True				
ANR	548746	Identifier	incomingEncKeyId_		548686	0					
ANR	548747	CompoundStatement		28:27:560:560	548686	1					
ANR	548748	ExpressionStatement	free ( incomingEncKeyId_ )	431:8:11225:11248	548686	0	True				
ANR	548749	CallExpression	free ( incomingEncKeyId_ )		548686	0					
ANR	548750	Callee	free		548686	0					
ANR	548751	Identifier	free		548686	0					
ANR	548752	ArgumentList	incomingEncKeyId_		548686	1					
ANR	548753	Argument	incomingEncKeyId_		548686	0					
ANR	548754	Identifier	incomingEncKeyId_		548686	0					
ANR	548755	ExpressionStatement	incomingEncKeyId_ = 0	432:8:11258:11279	548686	1	True				
ANR	548756	AssignmentExpression	incomingEncKeyId_ = 0		548686	0		=			
ANR	548757	Identifier	incomingEncKeyId_		548686	0					
ANR	548758	PrimaryExpression	0		548686	1					
ANR	548759	ReturnType	void		548686	1					
ANR	548760	Identifier	_condorPacket :: reset		548686	2					
ANR	548761	ParameterList			548686	3					
ANR	548762	CFGEntryNode	ENTRY		548686		True				
ANR	548763	CFGExitNode	EXIT		548686		True				
ANR	548764	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		548686						
ANR	548765	Symbol	MAC_SIZE		548686						
ANR	548766	Symbol	outgoingEncKeyId_		548686						
ANR	548767	Symbol	incomingMD5KeyId_		548686						
ANR	548768	Symbol	length		548686						
ANR	548769	Symbol	outgoingMdLen_		548686						
ANR	548770	Symbol	curIndex		548686						
ANR	548771	Symbol	outgoingEidLen_		548686						
ANR	548772	Symbol	outgoingMD5KeyId_		548686						
ANR	548773	Symbol	incomingEncKeyId_		548686						
ANR	548774	Function	_condorPacket :: consumed	437:0:11344:11406							
ANR	548775	FunctionDef	_condorPacket :: consumed ()		548774	0					
ANR	548776	CompoundStatement		438:0:11375:11406	548774	0					
ANR	548777	ReturnStatement	return ( curIndex == length ) ;	439:1:11378:11404	548774	0	True				
ANR	548778	EqualityExpression	curIndex == length		548774	0		==			
ANR	548779	Identifier	curIndex		548774	0					
ANR	548780	Identifier	length		548774	1					
ANR	548781	ReturnType	bool		548774	1					
ANR	548782	Identifier	_condorPacket :: consumed		548774	2					
ANR	548783	ParameterList			548774	3					
ANR	548784	CFGEntryNode	ENTRY		548774		True				
ANR	548785	CFGExitNode	EXIT		548774		True				
ANR	548786	Symbol	length		548774						
ANR	548787	Symbol	curIndex		548774						
ANR	548788	Function	_condorPacket :: putMax	450:0:11742:11988							
ANR	548789	FunctionDef	"_condorPacket :: putMax (const void * dta , const int size)"		548788	0					
ANR	548790	CompoundStatement		451:0:11801:11988	548788	0					
ANR	548791	IdentifierDeclStatement	"int len , left = USABLE_PACKET_SIZE - curIndex ;"	452:4:11807:11852	548788	0	True				
ANR	548792	IdentifierDecl	len		548788	0					
ANR	548793	IdentifierDeclType	int		548788	0					
ANR	548794	Identifier	len		548788	1					
ANR	548795	IdentifierDecl	left = USABLE_PACKET_SIZE - curIndex		548788	1					
ANR	548796	IdentifierDeclType	int		548788	0					
ANR	548797	Identifier	left		548788	1					
ANR	548798	AssignmentExpression	left = USABLE_PACKET_SIZE - curIndex		548788	2		=			
ANR	548799	Identifier	left		548788	0					
ANR	548800	AdditiveExpression	USABLE_PACKET_SIZE - curIndex		548788	1		-			
ANR	548801	Identifier	USABLE_PACKET_SIZE		548788	0					
ANR	548802	Identifier	curIndex		548788	1					
ANR	548803	ExpressionStatement	len = size > left ? left : size	454:4:11863:11893	548788	1	True				
ANR	548804	AssignmentExpression	len = size > left ? left : size		548788	0		=			
ANR	548805	Identifier	len		548788	0					
ANR	548806	ConditionalExpression	size > left ? left : size		548788	1					
ANR	548807	Condition	size > left		548788	0					
ANR	548808	RelationalExpression	size > left		548788	0		>			
ANR	548809	Identifier	size		548788	0					
ANR	548810	Identifier	left		548788	1					
ANR	548811	Identifier	left		548788	1					
ANR	548812	Identifier	size		548788	2					
ANR	548813	ExpressionStatement	"memcpy ( & data [ curIndex ] , dta , len )"	456:1:11901:11934	548788	2	True				
ANR	548814	CallExpression	"memcpy ( & data [ curIndex ] , dta , len )"		548788	0					
ANR	548815	Callee	memcpy		548788	0					
ANR	548816	Identifier	memcpy		548788	0					
ANR	548817	ArgumentList	& data [ curIndex ]		548788	1					
ANR	548818	Argument	& data [ curIndex ]		548788	0					
ANR	548819	UnaryOperationExpression	& data [ curIndex ]		548788	0					
ANR	548820	UnaryOperator	&		548788	0					
ANR	548821	ArrayIndexing	data [ curIndex ]		548788	1					
ANR	548822	Identifier	data		548788	0					
ANR	548823	Identifier	curIndex		548788	1					
ANR	548824	Argument	dta		548788	1					
ANR	548825	Identifier	dta		548788	0					
ANR	548826	Argument	len		548788	2					
ANR	548827	Identifier	len		548788	0					
ANR	548828	ExpressionStatement	curIndex += len	457:1:11937:11952	548788	3	True				
ANR	548829	AssignmentExpression	curIndex += len		548788	0		+=			
ANR	548830	Identifier	curIndex		548788	0					
ANR	548831	Identifier	len		548788	1					
ANR	548832	ExpressionStatement	length = curIndex	458:1:11955:11972	548788	4	True				
ANR	548833	AssignmentExpression	length = curIndex		548788	0		=			
ANR	548834	Identifier	length		548788	0					
ANR	548835	Identifier	curIndex		548788	1					
ANR	548836	ReturnStatement	return len ;	460:1:11976:11986	548788	5	True				
ANR	548837	Identifier	len		548788	0					
ANR	548838	ReturnType	int		548788	1					
ANR	548839	Identifier	_condorPacket :: putMax		548788	2					
ANR	548840	ParameterList	"const void * dta , const int size"		548788	3					
ANR	548841	Parameter	const void * dta	450:26:11768:11782	548788	0	True				
ANR	548842	ParameterType	const void *		548788	0					
ANR	548843	Identifier	dta		548788	1					
ANR	548844	Parameter	const int size	450:43:11785:11798	548788	1	True				
ANR	548845	ParameterType	const int		548788	0					
ANR	548846	Identifier	size		548788	1					
ANR	548847	CFGEntryNode	ENTRY		548788		True				
ANR	548848	CFGExitNode	EXIT		548788		True				
ANR	548849	Symbol	dta		548788						
ANR	548850	Symbol	size		548788						
ANR	548851	Symbol	len		548788						
ANR	548852	Symbol	data		548788						
ANR	548853	Symbol	left		548788						
ANR	548854	Symbol	length		548788						
ANR	548855	Symbol	USABLE_PACKET_SIZE		548788						
ANR	548856	Symbol	curIndex		548788						
ANR	548857	Function	_condorPacket :: addExtendedHeader	463:0:11991:12680							
ANR	548858	FunctionDef	_condorPacket :: addExtendedHeader (unsigned char * mac)		548857	0					
ANR	548859	CompoundStatement		464:0:12051:12680	548857	0					
ANR	548860	IdentifierDeclStatement	int where = SAFE_MSG_CRYPTO_HEADER_SIZE ;	465:4:12057:12096	548857	0	True				
ANR	548861	IdentifierDecl	where = SAFE_MSG_CRYPTO_HEADER_SIZE		548857	0					
ANR	548862	IdentifierDeclType	int		548857	0					
ANR	548863	Identifier	where		548857	1					
ANR	548864	AssignmentExpression	where = SAFE_MSG_CRYPTO_HEADER_SIZE		548857	2		=			
ANR	548865	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		548857	0					
ANR	548866	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		548857	1					
ANR	548867	IfStatement	if ( mac )		548857	1					
ANR	548868	Condition	mac	466:8:12106:12108	548857	0	True				
ANR	548869	Identifier	mac		548857	0					
ANR	548870	CompoundStatement		3:13:59:59	548857	1					
ANR	548871	IfStatement	if ( mac && outgoingMD5KeyId_ )		548857	0					
ANR	548872	Condition	mac && outgoingMD5KeyId_	467:12:12125:12148	548857	0	True				
ANR	548873	AndExpression	mac && outgoingMD5KeyId_		548857	0		&&			
ANR	548874	Identifier	mac		548857	0					
ANR	548875	Identifier	outgoingMD5KeyId_		548857	1					
ANR	548876	CompoundStatement		4:38:99:99	548857	1					
ANR	548877	ExpressionStatement	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingMD5KeyId_ , outgoingMdLen_ )"	469:12:12214:12314	548857	0	True				
ANR	548878	CallExpression	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingMD5KeyId_ , outgoingMdLen_ )"		548857	0					
ANR	548879	Callee	memcpy		548857	0					
ANR	548880	Identifier	memcpy		548857	0					
ANR	548881	ArgumentList	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	1					
ANR	548882	Argument	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	0					
ANR	548883	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	0					
ANR	548884	UnaryOperator	&		548857	0					
ANR	548885	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	1					
ANR	548886	Identifier	dataGram		548857	0					
ANR	548887	AdditiveExpression	SAFE_MSG_HEADER_SIZE + where		548857	1		+			
ANR	548888	Identifier	SAFE_MSG_HEADER_SIZE		548857	0					
ANR	548889	Identifier	where		548857	1					
ANR	548890	Argument	outgoingMD5KeyId_		548857	1					
ANR	548891	Identifier	outgoingMD5KeyId_		548857	0					
ANR	548892	Argument	outgoingMdLen_		548857	2					
ANR	548893	Identifier	outgoingMdLen_		548857	0					
ANR	548894	ExpressionStatement	where += outgoingMdLen_	472:12:12356:12379	548857	1	True				
ANR	548895	AssignmentExpression	where += outgoingMdLen_		548857	0		+=			
ANR	548896	Identifier	where		548857	0					
ANR	548897	Identifier	outgoingMdLen_		548857	1					
ANR	548898	ExpressionStatement	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , mac , MAC_SIZE )"	473:12:12393:12453	548857	2	True				
ANR	548899	CallExpression	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , mac , MAC_SIZE )"		548857	0					
ANR	548900	Callee	memcpy		548857	0					
ANR	548901	Identifier	memcpy		548857	0					
ANR	548902	ArgumentList	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	1					
ANR	548903	Argument	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	0					
ANR	548904	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	0					
ANR	548905	UnaryOperator	&		548857	0					
ANR	548906	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	1					
ANR	548907	Identifier	dataGram		548857	0					
ANR	548908	AdditiveExpression	SAFE_MSG_HEADER_SIZE + where		548857	1		+			
ANR	548909	Identifier	SAFE_MSG_HEADER_SIZE		548857	0					
ANR	548910	Identifier	where		548857	1					
ANR	548911	Argument	mac		548857	1					
ANR	548912	Identifier	mac		548857	0					
ANR	548913	Argument	MAC_SIZE		548857	2					
ANR	548914	Identifier	MAC_SIZE		548857	0					
ANR	548915	ExpressionStatement	where += MAC_SIZE	474:12:12467:12484	548857	3	True				
ANR	548916	AssignmentExpression	where += MAC_SIZE		548857	0		+=			
ANR	548917	Identifier	where		548857	0					
ANR	548918	Identifier	MAC_SIZE		548857	1					
ANR	548919	IfStatement	if ( outgoingEncKeyId_ )		548857	2					
ANR	548920	Condition	outgoingEncKeyId_	478:8:12511:12527	548857	0	True				
ANR	548921	Identifier	outgoingEncKeyId_		548857	0					
ANR	548922	CompoundStatement		15:27:478:478	548857	1					
ANR	548923	ExpressionStatement	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingEncKeyId_ , outgoingEidLen_ )"	480:8:12575:12672	548857	0	True				
ANR	548924	CallExpression	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingEncKeyId_ , outgoingEidLen_ )"		548857	0					
ANR	548925	Callee	memcpy		548857	0					
ANR	548926	Identifier	memcpy		548857	0					
ANR	548927	ArgumentList	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	1					
ANR	548928	Argument	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	0					
ANR	548929	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	0					
ANR	548930	UnaryOperator	&		548857	0					
ANR	548931	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE + where ]		548857	1					
ANR	548932	Identifier	dataGram		548857	0					
ANR	548933	AdditiveExpression	SAFE_MSG_HEADER_SIZE + where		548857	1		+			
ANR	548934	Identifier	SAFE_MSG_HEADER_SIZE		548857	0					
ANR	548935	Identifier	where		548857	1					
ANR	548936	Argument	outgoingEncKeyId_		548857	1					
ANR	548937	Identifier	outgoingEncKeyId_		548857	0					
ANR	548938	Argument	outgoingEidLen_		548857	2					
ANR	548939	Identifier	outgoingEidLen_		548857	0					
ANR	548940	ReturnType	void		548857	1					
ANR	548941	Identifier	_condorPacket :: addExtendedHeader		548857	2					
ANR	548942	ParameterList	unsigned char * mac		548857	3					
ANR	548943	Parameter	unsigned char * mac	463:38:12029:12047	548857	0	True				
ANR	548944	ParameterType	unsigned char *		548857	0					
ANR	548945	Identifier	mac		548857	1					
ANR	548946	CFGEntryNode	ENTRY		548857		True				
ANR	548947	CFGExitNode	EXIT		548857		True				
ANR	548948	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		548857						
ANR	548949	Symbol	MAC_SIZE		548857						
ANR	548950	Symbol	outgoingEncKeyId_		548857						
ANR	548951	Symbol	where		548857						
ANR	548952	Symbol	outgoingMdLen_		548857						
ANR	548953	Symbol	dataGram		548857						
ANR	548954	Symbol	outgoingEidLen_		548857						
ANR	548955	Symbol	outgoingMD5KeyId_		548857						
ANR	548956	Symbol	SAFE_MSG_HEADER_SIZE		548857						
ANR	548957	Symbol	mac		548857						
ANR	548958	Function	_condorPacket :: full	485:0:12683:12757							
ANR	548959	FunctionDef	_condorPacket :: full ()		548958	0					
ANR	548960	CompoundStatement		486:0:12710:12757	548958	0					
ANR	548961	ReturnStatement	return ( curIndex == USABLE_PACKET_SIZE ) ;	487:4:12716:12755	548958	0	True				
ANR	548962	EqualityExpression	curIndex == USABLE_PACKET_SIZE		548958	0		==			
ANR	548963	Identifier	curIndex		548958	0					
ANR	548964	Identifier	USABLE_PACKET_SIZE		548958	1					
ANR	548965	ReturnType	bool		548958	1					
ANR	548966	Identifier	_condorPacket :: full		548958	2					
ANR	548967	ParameterList			548958	3					
ANR	548968	CFGEntryNode	ENTRY		548958		True				
ANR	548969	CFGExitNode	EXIT		548958		True				
ANR	548970	Symbol	USABLE_PACKET_SIZE		548958						
ANR	548971	Symbol	curIndex		548958						
ANR	548972	Function	_condorPacket :: empty	490:0:12760:13246							
ANR	548973	FunctionDef	_condorPacket :: empty ()		548972	0					
ANR	548974	CompoundStatement		491:0:12788:13246	548972	0					
ANR	548975	IdentifierDeclStatement	int forward = 0 ;	492:4:12794:12809	548972	0	True				
ANR	548976	IdentifierDecl	forward = 0		548972	0					
ANR	548977	IdentifierDeclType	int		548972	0					
ANR	548978	Identifier	forward		548972	1					
ANR	548979	AssignmentExpression	forward = 0		548972	2		=			
ANR	548980	Identifier	forward		548972	0					
ANR	548981	PrimaryExpression	0		548972	1					
ANR	548982	IfStatement	if ( outgoingMD5KeyId_ )		548972	1					
ANR	548983	Condition	outgoingMD5KeyId_	493:8:12819:12835	548972	0	True				
ANR	548984	Identifier	outgoingMD5KeyId_		548972	0					
ANR	548985	CompoundStatement		3:27:49:49	548972	1					
ANR	548986	ExpressionStatement	forward = MAC_SIZE + outgoingMdLen_	494:8:12848:12883	548972	0	True				
ANR	548987	AssignmentExpression	forward = MAC_SIZE + outgoingMdLen_		548972	0		=			
ANR	548988	Identifier	forward		548972	0					
ANR	548989	AdditiveExpression	MAC_SIZE + outgoingMdLen_		548972	1		+			
ANR	548990	Identifier	MAC_SIZE		548972	0					
ANR	548991	Identifier	outgoingMdLen_		548972	1					
ANR	548992	IfStatement	if ( outgoingEncKeyId_ )		548972	2					
ANR	548993	Condition	outgoingEncKeyId_	496:8:12899:12915	548972	0	True				
ANR	548994	Identifier	outgoingEncKeyId_		548972	0					
ANR	548995	CompoundStatement		6:27:129:129	548972	1					
ANR	548996	ExpressionStatement	forward += outgoingEidLen_	497:8:12928:12954	548972	0	True				
ANR	548997	AssignmentExpression	forward += outgoingEidLen_		548972	0		+=			
ANR	548998	Identifier	forward		548972	0					
ANR	548999	Identifier	outgoingEidLen_		548972	1					
ANR	549000	IfStatement	if ( forward > 0 )		548972	3					
ANR	549001	Condition	forward > 0	499:8:12970:12980	548972	0	True				
ANR	549002	RelationalExpression	forward > 0		548972	0		>			
ANR	549003	Identifier	forward		548972	0					
ANR	549004	PrimaryExpression	0		548972	1					
ANR	549005	CompoundStatement		9:21:194:194	548972	1					
ANR	549006	ExpressionStatement	forward += SAFE_MSG_CRYPTO_HEADER_SIZE	500:8:12993:13031	548972	0	True				
ANR	549007	AssignmentExpression	forward += SAFE_MSG_CRYPTO_HEADER_SIZE		548972	0		+=			
ANR	549008	Identifier	forward		548972	0					
ANR	549009	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		548972	1					
ANR	549010	ReturnStatement	return ( length == forward ) ;	506:4:13219:13244	548972	4	True				
ANR	549011	EqualityExpression	length == forward		548972	0		==			
ANR	549012	Identifier	length		548972	0					
ANR	549013	Identifier	forward		548972	1					
ANR	549014	ReturnType	bool		548972	1					
ANR	549015	Identifier	_condorPacket :: empty		548972	2					
ANR	549016	ParameterList			548972	3					
ANR	549017	CFGEntryNode	ENTRY		548972		True				
ANR	549018	CFGExitNode	EXIT		548972		True				
ANR	549019	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		548972						
ANR	549020	Symbol	MAC_SIZE		548972						
ANR	549021	Symbol	outgoingEncKeyId_		548972						
ANR	549022	Symbol	forward		548972						
ANR	549023	Symbol	length		548972						
ANR	549024	Symbol	outgoingMdLen_		548972						
ANR	549025	Symbol	outgoingEidLen_		548972						
ANR	549026	Symbol	outgoingMD5KeyId_		548972						
ANR	549027	Function	_condorPacket :: makeHeader	516:0:13546:15129							
ANR	549028	FunctionDef	"_condorPacket :: makeHeader (bool last , int seqNo , _condorMsgID msgID , unsigned char * mac)"		549027	0					
ANR	549029	CompoundStatement		519:0:13704:15129	549027	0					
ANR	549030	IdentifierDeclStatement	uint16_t stemp ;	520:4:13710:13724	549027	0	True				
ANR	549031	IdentifierDecl	stemp		549027	0					
ANR	549032	IdentifierDeclType	uint16_t		549027	0					
ANR	549033	Identifier	stemp		549027	1					
ANR	549034	IdentifierDeclStatement	uint32_t ltemp ;	521:4:13730:13744	549027	1	True				
ANR	549035	IdentifierDecl	ltemp		549027	0					
ANR	549036	IdentifierDeclType	uint32_t		549027	0					
ANR	549037	Identifier	ltemp		549027	1					
ANR	549038	ExpressionStatement	"memcpy ( dataGram , SAFE_MSG_MAGIC , 8 )"	523:1:13748:13783	549027	2	True				
ANR	549039	CallExpression	"memcpy ( dataGram , SAFE_MSG_MAGIC , 8 )"		549027	0					
ANR	549040	Callee	memcpy		549027	0					
ANR	549041	Identifier	memcpy		549027	0					
ANR	549042	ArgumentList	dataGram		549027	1					
ANR	549043	Argument	dataGram		549027	0					
ANR	549044	Identifier	dataGram		549027	0					
ANR	549045	Argument	SAFE_MSG_MAGIC		549027	1					
ANR	549046	Identifier	SAFE_MSG_MAGIC		549027	0					
ANR	549047	Argument	8		549027	2					
ANR	549048	PrimaryExpression	8		549027	0					
ANR	549049	ExpressionStatement	dataGram [ 8 ] = ( char ) last	525:1:13787:13812	549027	3	True				
ANR	549050	AssignmentExpression	dataGram [ 8 ] = ( char ) last		549027	0		=			
ANR	549051	ArrayIndexing	dataGram [ 8 ]		549027	0					
ANR	549052	Identifier	dataGram		549027	0					
ANR	549053	PrimaryExpression	8		549027	1					
ANR	549054	CastExpression	( char ) last		549027	1					
ANR	549055	CastTarget	char		549027	0					
ANR	549056	Identifier	last		549027	1					
ANR	549057	ExpressionStatement	stemp = htons ( ( u_short ) seqNo )	526:1:13815:13844	549027	4	True				
ANR	549058	AssignmentExpression	stemp = htons ( ( u_short ) seqNo )		549027	0		=			
ANR	549059	Identifier	stemp		549027	0					
ANR	549060	CallExpression	htons ( ( u_short ) seqNo )		549027	1					
ANR	549061	Callee	htons		549027	0					
ANR	549062	Identifier	htons		549027	0					
ANR	549063	ArgumentList	( u_short ) seqNo		549027	1					
ANR	549064	Argument	( u_short ) seqNo		549027	0					
ANR	549065	CastExpression	( u_short ) seqNo		549027	0					
ANR	549066	CastTarget	u_short		549027	0					
ANR	549067	Identifier	seqNo		549027	1					
ANR	549068	ExpressionStatement	"memcpy ( & dataGram [ 9 ] , & stemp , 2 )"	527:1:13847:13878	549027	5	True				
ANR	549069	CallExpression	"memcpy ( & dataGram [ 9 ] , & stemp , 2 )"		549027	0					
ANR	549070	Callee	memcpy		549027	0					
ANR	549071	Identifier	memcpy		549027	0					
ANR	549072	ArgumentList	& dataGram [ 9 ]		549027	1					
ANR	549073	Argument	& dataGram [ 9 ]		549027	0					
ANR	549074	UnaryOperationExpression	& dataGram [ 9 ]		549027	0					
ANR	549075	UnaryOperator	&		549027	0					
ANR	549076	ArrayIndexing	dataGram [ 9 ]		549027	1					
ANR	549077	Identifier	dataGram		549027	0					
ANR	549078	PrimaryExpression	9		549027	1					
ANR	549079	Argument	& stemp		549027	1					
ANR	549080	UnaryOperationExpression	& stemp		549027	0					
ANR	549081	UnaryOperator	&		549027	0					
ANR	549082	Identifier	stemp		549027	1					
ANR	549083	Argument	2		549027	2					
ANR	549084	PrimaryExpression	2		549027	0					
ANR	549085	ExpressionStatement	stemp = htons ( ( u_short ) length )	529:1:13882:13912	549027	6	True				
ANR	549086	AssignmentExpression	stemp = htons ( ( u_short ) length )		549027	0		=			
ANR	549087	Identifier	stemp		549027	0					
ANR	549088	CallExpression	htons ( ( u_short ) length )		549027	1					
ANR	549089	Callee	htons		549027	0					
ANR	549090	Identifier	htons		549027	0					
ANR	549091	ArgumentList	( u_short ) length		549027	1					
ANR	549092	Argument	( u_short ) length		549027	0					
ANR	549093	CastExpression	( u_short ) length		549027	0					
ANR	549094	CastTarget	u_short		549027	0					
ANR	549095	Identifier	length		549027	1					
ANR	549096	ExpressionStatement	"memcpy ( & dataGram [ 11 ] , & stemp , 2 )"	530:1:13915:13947	549027	7	True				
ANR	549097	CallExpression	"memcpy ( & dataGram [ 11 ] , & stemp , 2 )"		549027	0					
ANR	549098	Callee	memcpy		549027	0					
ANR	549099	Identifier	memcpy		549027	0					
ANR	549100	ArgumentList	& dataGram [ 11 ]		549027	1					
ANR	549101	Argument	& dataGram [ 11 ]		549027	0					
ANR	549102	UnaryOperationExpression	& dataGram [ 11 ]		549027	0					
ANR	549103	UnaryOperator	&		549027	0					
ANR	549104	ArrayIndexing	dataGram [ 11 ]		549027	1					
ANR	549105	Identifier	dataGram		549027	0					
ANR	549106	PrimaryExpression	11		549027	1					
ANR	549107	Argument	& stemp		549027	1					
ANR	549108	UnaryOperationExpression	& stemp		549027	0					
ANR	549109	UnaryOperator	&		549027	0					
ANR	549110	Identifier	stemp		549027	1					
ANR	549111	Argument	2		549027	2					
ANR	549112	PrimaryExpression	2		549027	0					
ANR	549113	ExpressionStatement	ltemp = htonl ( ( u_long ) msgID . ip_addr )	532:1:13951:13987	549027	8	True				
ANR	549114	AssignmentExpression	ltemp = htonl ( ( u_long ) msgID . ip_addr )		549027	0		=			
ANR	549115	Identifier	ltemp		549027	0					
ANR	549116	CallExpression	htonl ( ( u_long ) msgID . ip_addr )		549027	1					
ANR	549117	Callee	htonl		549027	0					
ANR	549118	Identifier	htonl		549027	0					
ANR	549119	ArgumentList	( u_long ) msgID . ip_addr		549027	1					
ANR	549120	Argument	( u_long ) msgID . ip_addr		549027	0					
ANR	549121	CastExpression	( u_long ) msgID . ip_addr		549027	0					
ANR	549122	CastTarget	u_long		549027	0					
ANR	549123	MemberAccess	msgID . ip_addr		549027	1					
ANR	549124	Identifier	msgID		549027	0					
ANR	549125	Identifier	ip_addr		549027	1					
ANR	549126	ExpressionStatement	"memcpy ( & dataGram [ 13 ] , & ltemp , 4 )"	533:1:13990:14022	549027	9	True				
ANR	549127	CallExpression	"memcpy ( & dataGram [ 13 ] , & ltemp , 4 )"		549027	0					
ANR	549128	Callee	memcpy		549027	0					
ANR	549129	Identifier	memcpy		549027	0					
ANR	549130	ArgumentList	& dataGram [ 13 ]		549027	1					
ANR	549131	Argument	& dataGram [ 13 ]		549027	0					
ANR	549132	UnaryOperationExpression	& dataGram [ 13 ]		549027	0					
ANR	549133	UnaryOperator	&		549027	0					
ANR	549134	ArrayIndexing	dataGram [ 13 ]		549027	1					
ANR	549135	Identifier	dataGram		549027	0					
ANR	549136	PrimaryExpression	13		549027	1					
ANR	549137	Argument	& ltemp		549027	1					
ANR	549138	UnaryOperationExpression	& ltemp		549027	0					
ANR	549139	UnaryOperator	&		549027	0					
ANR	549140	Identifier	ltemp		549027	1					
ANR	549141	Argument	4		549027	2					
ANR	549142	PrimaryExpression	4		549027	0					
ANR	549143	ExpressionStatement	stemp = htons ( ( u_short ) msgID . pid )	535:1:14026:14059	549027	10	True				
ANR	549144	AssignmentExpression	stemp = htons ( ( u_short ) msgID . pid )		549027	0		=			
ANR	549145	Identifier	stemp		549027	0					
ANR	549146	CallExpression	htons ( ( u_short ) msgID . pid )		549027	1					
ANR	549147	Callee	htons		549027	0					
ANR	549148	Identifier	htons		549027	0					
ANR	549149	ArgumentList	( u_short ) msgID . pid		549027	1					
ANR	549150	Argument	( u_short ) msgID . pid		549027	0					
ANR	549151	CastExpression	( u_short ) msgID . pid		549027	0					
ANR	549152	CastTarget	u_short		549027	0					
ANR	549153	MemberAccess	msgID . pid		549027	1					
ANR	549154	Identifier	msgID		549027	0					
ANR	549155	Identifier	pid		549027	1					
ANR	549156	ExpressionStatement	"memcpy ( & dataGram [ 17 ] , & stemp , 2 )"	536:1:14062:14094	549027	11	True				
ANR	549157	CallExpression	"memcpy ( & dataGram [ 17 ] , & stemp , 2 )"		549027	0					
ANR	549158	Callee	memcpy		549027	0					
ANR	549159	Identifier	memcpy		549027	0					
ANR	549160	ArgumentList	& dataGram [ 17 ]		549027	1					
ANR	549161	Argument	& dataGram [ 17 ]		549027	0					
ANR	549162	UnaryOperationExpression	& dataGram [ 17 ]		549027	0					
ANR	549163	UnaryOperator	&		549027	0					
ANR	549164	ArrayIndexing	dataGram [ 17 ]		549027	1					
ANR	549165	Identifier	dataGram		549027	0					
ANR	549166	PrimaryExpression	17		549027	1					
ANR	549167	Argument	& stemp		549027	1					
ANR	549168	UnaryOperationExpression	& stemp		549027	0					
ANR	549169	UnaryOperator	&		549027	0					
ANR	549170	Identifier	stemp		549027	1					
ANR	549171	Argument	2		549027	2					
ANR	549172	PrimaryExpression	2		549027	0					
ANR	549173	ExpressionStatement	ltemp = htonl ( ( u_long ) msgID . time )	538:1:14098:14131	549027	12	True				
ANR	549174	AssignmentExpression	ltemp = htonl ( ( u_long ) msgID . time )		549027	0		=			
ANR	549175	Identifier	ltemp		549027	0					
ANR	549176	CallExpression	htonl ( ( u_long ) msgID . time )		549027	1					
ANR	549177	Callee	htonl		549027	0					
ANR	549178	Identifier	htonl		549027	0					
ANR	549179	ArgumentList	( u_long ) msgID . time		549027	1					
ANR	549180	Argument	( u_long ) msgID . time		549027	0					
ANR	549181	CastExpression	( u_long ) msgID . time		549027	0					
ANR	549182	CastTarget	u_long		549027	0					
ANR	549183	MemberAccess	msgID . time		549027	1					
ANR	549184	Identifier	msgID		549027	0					
ANR	549185	Identifier	time		549027	1					
ANR	549186	ExpressionStatement	"memcpy ( & dataGram [ 19 ] , & ltemp , 4 )"	539:1:14134:14166	549027	13	True				
ANR	549187	CallExpression	"memcpy ( & dataGram [ 19 ] , & ltemp , 4 )"		549027	0					
ANR	549188	Callee	memcpy		549027	0					
ANR	549189	Identifier	memcpy		549027	0					
ANR	549190	ArgumentList	& dataGram [ 19 ]		549027	1					
ANR	549191	Argument	& dataGram [ 19 ]		549027	0					
ANR	549192	UnaryOperationExpression	& dataGram [ 19 ]		549027	0					
ANR	549193	UnaryOperator	&		549027	0					
ANR	549194	ArrayIndexing	dataGram [ 19 ]		549027	1					
ANR	549195	Identifier	dataGram		549027	0					
ANR	549196	PrimaryExpression	19		549027	1					
ANR	549197	Argument	& ltemp		549027	1					
ANR	549198	UnaryOperationExpression	& ltemp		549027	0					
ANR	549199	UnaryOperator	&		549027	0					
ANR	549200	Identifier	ltemp		549027	1					
ANR	549201	Argument	4		549027	2					
ANR	549202	PrimaryExpression	4		549027	0					
ANR	549203	ExpressionStatement	stemp = htons ( ( u_short ) msgID . msgNo )	541:1:14170:14205	549027	14	True				
ANR	549204	AssignmentExpression	stemp = htons ( ( u_short ) msgID . msgNo )		549027	0		=			
ANR	549205	Identifier	stemp		549027	0					
ANR	549206	CallExpression	htons ( ( u_short ) msgID . msgNo )		549027	1					
ANR	549207	Callee	htons		549027	0					
ANR	549208	Identifier	htons		549027	0					
ANR	549209	ArgumentList	( u_short ) msgID . msgNo		549027	1					
ANR	549210	Argument	( u_short ) msgID . msgNo		549027	0					
ANR	549211	CastExpression	( u_short ) msgID . msgNo		549027	0					
ANR	549212	CastTarget	u_short		549027	0					
ANR	549213	MemberAccess	msgID . msgNo		549027	1					
ANR	549214	Identifier	msgID		549027	0					
ANR	549215	Identifier	msgNo		549027	1					
ANR	549216	ExpressionStatement	"memcpy ( & dataGram [ 23 ] , & stemp , 2 )"	542:1:14208:14240	549027	15	True				
ANR	549217	CallExpression	"memcpy ( & dataGram [ 23 ] , & stemp , 2 )"		549027	0					
ANR	549218	Callee	memcpy		549027	0					
ANR	549219	Identifier	memcpy		549027	0					
ANR	549220	ArgumentList	& dataGram [ 23 ]		549027	1					
ANR	549221	Argument	& dataGram [ 23 ]		549027	0					
ANR	549222	UnaryOperationExpression	& dataGram [ 23 ]		549027	0					
ANR	549223	UnaryOperator	&		549027	0					
ANR	549224	ArrayIndexing	dataGram [ 23 ]		549027	1					
ANR	549225	Identifier	dataGram		549027	0					
ANR	549226	PrimaryExpression	23		549027	1					
ANR	549227	Argument	& stemp		549027	1					
ANR	549228	UnaryOperationExpression	& stemp		549027	0					
ANR	549229	UnaryOperator	&		549027	0					
ANR	549230	Identifier	stemp		549027	1					
ANR	549231	Argument	2		549027	2					
ANR	549232	PrimaryExpression	2		549027	0					
ANR	549233	IdentifierDeclStatement	short flags = 0 ;	547:4:14399:14414	549027	16	True				
ANR	549234	IdentifierDecl	flags = 0		549027	0					
ANR	549235	IdentifierDeclType	short		549027	0					
ANR	549236	Identifier	flags		549027	1					
ANR	549237	AssignmentExpression	flags = 0		549027	2		=			
ANR	549238	Identifier	flags		549027	0					
ANR	549239	PrimaryExpression	0		549027	1					
ANR	549240	IfStatement	if ( outgoingMD5KeyId_ )		549027	17					
ANR	549241	Condition	outgoingMD5KeyId_	548:8:14424:14440	549027	0	True				
ANR	549242	Identifier	outgoingMD5KeyId_		549027	0					
ANR	549243	CompoundStatement		30:27:738:738	549027	1					
ANR	549244	ExpressionStatement	flags |= MD_IS_ON	549:8:14453:14470	549027	0	True				
ANR	549245	AssignmentExpression	flags |= MD_IS_ON		549027	0		|=			
ANR	549246	Identifier	flags		549027	0					
ANR	549247	Identifier	MD_IS_ON		549027	1					
ANR	549248	IfStatement	if ( outgoingEncKeyId_ )		549027	18					
ANR	549249	Condition	outgoingEncKeyId_	551:8:14486:14502	549027	0	True				
ANR	549250	Identifier	outgoingEncKeyId_		549027	0					
ANR	549251	CompoundStatement		33:27:800:800	549027	1					
ANR	549252	ExpressionStatement	flags |= ENCRYPTION_IS_ON	552:8:14515:14540	549027	0	True				
ANR	549253	AssignmentExpression	flags |= ENCRYPTION_IS_ON		549027	0		|=			
ANR	549254	Identifier	flags		549027	0					
ANR	549255	Identifier	ENCRYPTION_IS_ON		549027	1					
ANR	549256	IfStatement	if ( flags != 0 )		549027	19					
ANR	549257	Condition	flags != 0	555:8:14561:14570	549027	0	True				
ANR	549258	EqualityExpression	flags != 0		549027	0		!=			
ANR	549259	Identifier	flags		549027	0					
ANR	549260	PrimaryExpression	0		549027	1					
ANR	549261	CompoundStatement		37:20:868:868	549027	1					
ANR	549262	ExpressionStatement	"memcpy ( & dataGram [ 25 ] , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 )"	557:8:14632:14699	549027	0	True				
ANR	549263	CallExpression	"memcpy ( & dataGram [ 25 ] , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 )"		549027	0					
ANR	549264	Callee	memcpy		549027	0					
ANR	549265	Identifier	memcpy		549027	0					
ANR	549266	ArgumentList	& dataGram [ 25 ]		549027	1					
ANR	549267	Argument	& dataGram [ 25 ]		549027	0					
ANR	549268	UnaryOperationExpression	& dataGram [ 25 ]		549027	0					
ANR	549269	UnaryOperator	&		549027	0					
ANR	549270	ArrayIndexing	dataGram [ 25 ]		549027	1					
ANR	549271	Identifier	dataGram		549027	0					
ANR	549272	PrimaryExpression	25		549027	1					
ANR	549273	Argument	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		549027	1					
ANR	549274	Identifier	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		549027	0					
ANR	549275	Argument	4		549027	2					
ANR	549276	PrimaryExpression	4		549027	0					
ANR	549277	ExpressionStatement	stemp = htons ( ( u_short ) flags )	559:8:14710:14739	549027	1	True				
ANR	549278	AssignmentExpression	stemp = htons ( ( u_short ) flags )		549027	0		=			
ANR	549279	Identifier	stemp		549027	0					
ANR	549280	CallExpression	htons ( ( u_short ) flags )		549027	1					
ANR	549281	Callee	htons		549027	0					
ANR	549282	Identifier	htons		549027	0					
ANR	549283	ArgumentList	( u_short ) flags		549027	1					
ANR	549284	Argument	( u_short ) flags		549027	0					
ANR	549285	CastExpression	( u_short ) flags		549027	0					
ANR	549286	CastTarget	u_short		549027	0					
ANR	549287	Identifier	flags		549027	1					
ANR	549288	ExpressionStatement	"memcpy ( & dataGram [ 29 ] , & stemp , 2 )"	560:8:14749:14781	549027	2	True				
ANR	549289	CallExpression	"memcpy ( & dataGram [ 29 ] , & stemp , 2 )"		549027	0					
ANR	549290	Callee	memcpy		549027	0					
ANR	549291	Identifier	memcpy		549027	0					
ANR	549292	ArgumentList	& dataGram [ 29 ]		549027	1					
ANR	549293	Argument	& dataGram [ 29 ]		549027	0					
ANR	549294	UnaryOperationExpression	& dataGram [ 29 ]		549027	0					
ANR	549295	UnaryOperator	&		549027	0					
ANR	549296	ArrayIndexing	dataGram [ 29 ]		549027	1					
ANR	549297	Identifier	dataGram		549027	0					
ANR	549298	PrimaryExpression	29		549027	1					
ANR	549299	Argument	& stemp		549027	1					
ANR	549300	UnaryOperationExpression	& stemp		549027	0					
ANR	549301	UnaryOperator	&		549027	0					
ANR	549302	Identifier	stemp		549027	1					
ANR	549303	Argument	2		549027	2					
ANR	549304	PrimaryExpression	2		549027	0					
ANR	549305	ExpressionStatement	stemp = htons ( ( u_short ) outgoingMdLen_ )	562:8:14835:14874	549027	3	True				
ANR	549306	AssignmentExpression	stemp = htons ( ( u_short ) outgoingMdLen_ )		549027	0		=			
ANR	549307	Identifier	stemp		549027	0					
ANR	549308	CallExpression	htons ( ( u_short ) outgoingMdLen_ )		549027	1					
ANR	549309	Callee	htons		549027	0					
ANR	549310	Identifier	htons		549027	0					
ANR	549311	ArgumentList	( u_short ) outgoingMdLen_		549027	1					
ANR	549312	Argument	( u_short ) outgoingMdLen_		549027	0					
ANR	549313	CastExpression	( u_short ) outgoingMdLen_		549027	0					
ANR	549314	CastTarget	u_short		549027	0					
ANR	549315	Identifier	outgoingMdLen_		549027	1					
ANR	549316	ExpressionStatement	"memcpy ( & dataGram [ 31 ] , & stemp , 2 )"	563:8:14884:14916	549027	4	True				
ANR	549317	CallExpression	"memcpy ( & dataGram [ 31 ] , & stemp , 2 )"		549027	0					
ANR	549318	Callee	memcpy		549027	0					
ANR	549319	Identifier	memcpy		549027	0					
ANR	549320	ArgumentList	& dataGram [ 31 ]		549027	1					
ANR	549321	Argument	& dataGram [ 31 ]		549027	0					
ANR	549322	UnaryOperationExpression	& dataGram [ 31 ]		549027	0					
ANR	549323	UnaryOperator	&		549027	0					
ANR	549324	ArrayIndexing	dataGram [ 31 ]		549027	1					
ANR	549325	Identifier	dataGram		549027	0					
ANR	549326	PrimaryExpression	31		549027	1					
ANR	549327	Argument	& stemp		549027	1					
ANR	549328	UnaryOperationExpression	& stemp		549027	0					
ANR	549329	UnaryOperator	&		549027	0					
ANR	549330	Identifier	stemp		549027	1					
ANR	549331	Argument	2		549027	2					
ANR	549332	PrimaryExpression	2		549027	0					
ANR	549333	ExpressionStatement	stemp = htons ( ( u_short ) outgoingEidLen_ )	565:8:14970:15010	549027	5	True				
ANR	549334	AssignmentExpression	stemp = htons ( ( u_short ) outgoingEidLen_ )		549027	0		=			
ANR	549335	Identifier	stemp		549027	0					
ANR	549336	CallExpression	htons ( ( u_short ) outgoingEidLen_ )		549027	1					
ANR	549337	Callee	htons		549027	0					
ANR	549338	Identifier	htons		549027	0					
ANR	549339	ArgumentList	( u_short ) outgoingEidLen_		549027	1					
ANR	549340	Argument	( u_short ) outgoingEidLen_		549027	0					
ANR	549341	CastExpression	( u_short ) outgoingEidLen_		549027	0					
ANR	549342	CastTarget	u_short		549027	0					
ANR	549343	Identifier	outgoingEidLen_		549027	1					
ANR	549344	ExpressionStatement	"memcpy ( & dataGram [ 33 ] , & stemp , 2 )"	566:8:15020:15052	549027	6	True				
ANR	549345	CallExpression	"memcpy ( & dataGram [ 33 ] , & stemp , 2 )"		549027	0					
ANR	549346	Callee	memcpy		549027	0					
ANR	549347	Identifier	memcpy		549027	0					
ANR	549348	ArgumentList	& dataGram [ 33 ]		549027	1					
ANR	549349	Argument	& dataGram [ 33 ]		549027	0					
ANR	549350	UnaryOperationExpression	& dataGram [ 33 ]		549027	0					
ANR	549351	UnaryOperator	&		549027	0					
ANR	549352	ArrayIndexing	dataGram [ 33 ]		549027	1					
ANR	549353	Identifier	dataGram		549027	0					
ANR	549354	PrimaryExpression	33		549027	1					
ANR	549355	Argument	& stemp		549027	1					
ANR	549356	UnaryOperationExpression	& stemp		549027	0					
ANR	549357	UnaryOperator	&		549027	0					
ANR	549358	Identifier	stemp		549027	1					
ANR	549359	Argument	2		549027	2					
ANR	549360	PrimaryExpression	2		549027	0					
ANR	549361	ExpressionStatement	addExtendedHeader ( mac )	568:8:15063:15085	549027	7	True				
ANR	549362	CallExpression	addExtendedHeader ( mac )		549027	0					
ANR	549363	Callee	addExtendedHeader		549027	0					
ANR	549364	Identifier	addExtendedHeader		549027	0					
ANR	549365	ArgumentList	mac		549027	1					
ANR	549366	Argument	mac		549027	0					
ANR	549367	Identifier	mac		549027	0					
ANR	549368	ReturnType	void		549027	1					
ANR	549369	Identifier	_condorPacket :: makeHeader		549027	2					
ANR	549370	ParameterList	"bool last , int seqNo , _condorMsgID msgID , unsigned char * mac"		549027	3					
ANR	549371	Parameter	bool last	516:31:13577:13585	549027	0	True				
ANR	549372	ParameterType	bool		549027	0					
ANR	549373	Identifier	last		549027	1					
ANR	549374	Parameter	int seqNo	516:42:13588:13596	549027	1	True				
ANR	549375	ParameterType	int		549027	0					
ANR	549376	Identifier	seqNo		549027	1					
ANR	549377	Parameter	_condorMsgID msgID	517:31:13631:13648	549027	2	True				
ANR	549378	ParameterType	_condorMsgID		549027	0					
ANR	549379	Identifier	msgID		549027	1					
ANR	549380	Parameter	unsigned char * mac	518:31:13683:13701	549027	3	True				
ANR	549381	ParameterType	unsigned char *		549027	0					
ANR	549382	Identifier	mac		549027	1					
ANR	549383	CFGEntryNode	ENTRY		549027		True				
ANR	549384	CFGExitNode	EXIT		549027		True				
ANR	549385	Symbol	seqNo		549027						
ANR	549386	Symbol	outgoingEncKeyId_		549027						
ANR	549387	Symbol	MD_IS_ON		549027						
ANR	549388	Symbol	htons		549027						
ANR	549389	Symbol	flags		549027						
ANR	549390	Symbol	outgoingMdLen_		549027						
ANR	549391	Symbol	stemp		549027						
ANR	549392	Symbol	mac		549027						
ANR	549393	Symbol	htonl		549027						
ANR	549394	Symbol	msgID . ip_addr		549027						
ANR	549395	Symbol	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		549027						
ANR	549396	Symbol	& stemp		549027						
ANR	549397	Symbol	* dataGram		549027						
ANR	549398	Symbol	msgID . pid		549027						
ANR	549399	Symbol	msgID . msgNo		549027						
ANR	549400	Symbol	last		549027						
ANR	549401	Symbol	ltemp		549027						
ANR	549402	Symbol	length		549027						
ANR	549403	Symbol	msgID		549027						
ANR	549404	Symbol	ENCRYPTION_IS_ON		549027						
ANR	549405	Symbol	SAFE_MSG_MAGIC		549027						
ANR	549406	Symbol	& ltemp		549027						
ANR	549407	Symbol	dataGram		549027						
ANR	549408	Symbol	msgID . time		549027						
ANR	549409	Symbol	outgoingEidLen_		549027						
ANR	549410	Symbol	outgoingMD5KeyId_		549027						
ANR	549411	Function	_condorPacket :: dumpPacket	573:0:15145:15931							
ANR	549412	FunctionDef	_condorPacket :: dumpPacket ()		549411	0					
ANR	549413	CompoundStatement		574:0:15178:15931	549411	0					
ANR	549414	IdentifierDeclStatement	bool last ;	575:1:15181:15190	549411	0	True				
ANR	549415	IdentifierDecl	last		549411	0					
ANR	549416	IdentifierDeclType	bool		549411	0					
ANR	549417	Identifier	last		549411	1					
ANR	549418	IdentifierDeclStatement	int seq ;	576:1:15193:15200	549411	1	True				
ANR	549419	IdentifierDecl	seq		549411	0					
ANR	549420	IdentifierDeclType	int		549411	0					
ANR	549421	Identifier	seq		549411	1					
ANR	549422	IdentifierDeclStatement	int len = - 1 ;	577:1:15203:15215	549411	2	True				
ANR	549423	IdentifierDecl	len = - 1		549411	0					
ANR	549424	IdentifierDeclType	int		549411	0					
ANR	549425	Identifier	len		549411	1					
ANR	549426	AssignmentExpression	len = - 1		549411	2		=			
ANR	549427	Identifier	len		549411	0					
ANR	549428	UnaryOperationExpression	- 1		549411	1					
ANR	549429	UnaryOperator	-		549411	0					
ANR	549430	PrimaryExpression	1		549411	1					
ANR	549431	IdentifierDeclStatement	_condorMsgID mID ;	578:1:15218:15234	549411	3	True				
ANR	549432	IdentifierDecl	mID		549411	0					
ANR	549433	IdentifierDeclType	_condorMsgID		549411	0					
ANR	549434	Identifier	mID		549411	1					
ANR	549435	IdentifierDeclStatement	void * dta ;	579:1:15237:15246	549411	4	True				
ANR	549436	IdentifierDecl	* dta		549411	0					
ANR	549437	IdentifierDeclType	void *		549411	0					
ANR	549438	Identifier	dta		549411	1					
ANR	549439	IfStatement	"if ( getHeader ( 6000 , last , seq , len , mID , dta ) )"		549411	5					
ANR	549440	Condition	"getHeader ( 6000 , last , seq , len , mID , dta )"	582:4:15311:15351	549411	0	True				
ANR	549441	CallExpression	"getHeader ( 6000 , last , seq , len , mID , dta )"		549411	0					
ANR	549442	Callee	getHeader		549411	0					
ANR	549443	Identifier	getHeader		549411	0					
ANR	549444	ArgumentList	6000		549411	1					
ANR	549445	Argument	6000		549411	0					
ANR	549446	PrimaryExpression	6000		549411	0					
ANR	549447	Argument	last		549411	1					
ANR	549448	Identifier	last		549411	0					
ANR	549449	Argument	seq		549411	2					
ANR	549450	Identifier	seq		549411	0					
ANR	549451	Argument	len		549411	3					
ANR	549452	Identifier	len		549411	0					
ANR	549453	Argument	mID		549411	4					
ANR	549454	Identifier	mID		549411	0					
ANR	549455	Argument	dta		549411	5					
ANR	549456	Identifier	dta		549411	0					
ANR	549457	CompoundStatement		9:47:175:175	549411	1					
ANR	549458	ExpressionStatement	"dprintf ( D_NETWORK , ""(short) "" )"	583:2:15358:15388	549411	0	True				
ANR	549459	CallExpression	"dprintf ( D_NETWORK , ""(short) "" )"		549411	0					
ANR	549460	Callee	dprintf		549411	0					
ANR	549461	Identifier	dprintf		549411	0					
ANR	549462	ArgumentList	D_NETWORK		549411	1					
ANR	549463	Argument	D_NETWORK		549411	0					
ANR	549464	Identifier	D_NETWORK		549411	0					
ANR	549465	Argument	"""(short) """		549411	1					
ANR	549466	PrimaryExpression	"""(short) """		549411	0					
ANR	549467	ForStatement	for ( int i = 0 ; i < length ; i ++ )		549411	1					
ANR	549468	ForInit	int i = 0 ;	584:6:15396:15403	549411	0	True				
ANR	549469	IdentifierDeclStatement	int i = 0 ;		549411	0					
ANR	549470	IdentifierDecl	i = 0		549411	0					
ANR	549471	IdentifierDeclType	int		549411	0					
ANR	549472	Identifier	i		549411	1					
ANR	549473	AssignmentExpression	i = 0		549411	2		=			
ANR	549474	Identifier	i		549411	0					
ANR	549475	PrimaryExpression	0		549411	1					
ANR	549476	Condition	i < length	584:15:15405:15412	549411	1	True				
ANR	549477	RelationalExpression	i < length		549411	0		<			
ANR	549478	Identifier	i		549411	0					
ANR	549479	Identifier	length		549411	1					
ANR	549480	PostIncDecOperationExpression	i ++	584:25:15415:15417	549411	2	True				
ANR	549481	Identifier	i		549411	0					
ANR	549482	IncDec	++		549411	1					
ANR	549483	CompoundStatement		11:30:241:241	549411	3					
ANR	549484	IfStatement	if ( i < 200 )		549411	0					
ANR	549485	Condition	i < 200	585:6:15428:15434	549411	0	True				
ANR	549486	RelationalExpression	i < 200		549411	0		<			
ANR	549487	Identifier	i		549411	0					
ANR	549488	PrimaryExpression	200		549411	1					
ANR	549489	ExpressionStatement	"dprintf ( D_NETWORK , ""%c"" , data [ i ] )"	586:4:15441:15474	549411	1	True				
ANR	549490	CallExpression	"dprintf ( D_NETWORK , ""%c"" , data [ i ] )"		549411	0					
ANR	549491	Callee	dprintf		549411	0					
ANR	549492	Identifier	dprintf		549411	0					
ANR	549493	ArgumentList	D_NETWORK		549411	1					
ANR	549494	Argument	D_NETWORK		549411	0					
ANR	549495	Identifier	D_NETWORK		549411	0					
ANR	549496	Argument	"""%c"""		549411	1					
ANR	549497	PrimaryExpression	"""%c"""		549411	0					
ANR	549498	Argument	data [ i ]		549411	2					
ANR	549499	ArrayIndexing	data [ i ]		549411	0					
ANR	549500	Identifier	data		549411	0					
ANR	549501	Identifier	i		549411	1					
ANR	549502	ElseStatement	else		549411	0					
ANR	549503	CompoundStatement		14:8:305:305	549411	0					
ANR	549504	ExpressionStatement	"dprintf ( D_NETWORK , ""..."" )"	588:4:15490:15515	549411	0	True				
ANR	549505	CallExpression	"dprintf ( D_NETWORK , ""..."" )"		549411	0					
ANR	549506	Callee	dprintf		549411	0					
ANR	549507	Identifier	dprintf		549411	0					
ANR	549508	ArgumentList	D_NETWORK		549411	1					
ANR	549509	Argument	D_NETWORK		549411	0					
ANR	549510	Identifier	D_NETWORK		549411	0					
ANR	549511	Argument	"""..."""		549411	1					
ANR	549512	PrimaryExpression	"""..."""		549411	0					
ANR	549513	BreakStatement	break ;	589:4:15521:15526	549411	1	True				
ANR	549514	ExpressionStatement	"dprintf ( D_NETWORK , ""\\n"" )"	592:2:15539:15563	549411	2	True				
ANR	549515	CallExpression	"dprintf ( D_NETWORK , ""\\n"" )"		549411	0					
ANR	549516	Callee	dprintf		549411	0					
ANR	549517	Identifier	dprintf		549411	0					
ANR	549518	ArgumentList	D_NETWORK		549411	1					
ANR	549519	Argument	D_NETWORK		549411	0					
ANR	549520	Identifier	D_NETWORK		549411	0					
ANR	549521	Argument	"""\\n"""		549411	1					
ANR	549522	PrimaryExpression	"""\\n"""		549411	0					
ANR	549523	ElseStatement	else		549411	0					
ANR	549524	CompoundStatement		22:6:425:425	549411	0					
ANR	549525	ExpressionStatement	"dprintf ( D_NETWORK , ""[%d] ("" , seq )"	596:2:15608:15641	549411	0	True				
ANR	549526	CallExpression	"dprintf ( D_NETWORK , ""[%d] ("" , seq )"		549411	0					
ANR	549527	Callee	dprintf		549411	0					
ANR	549528	Identifier	dprintf		549411	0					
ANR	549529	ArgumentList	D_NETWORK		549411	1					
ANR	549530	Argument	D_NETWORK		549411	0					
ANR	549531	Identifier	D_NETWORK		549411	0					
ANR	549532	Argument	"""[%d] ("""		549411	1					
ANR	549533	PrimaryExpression	"""[%d] ("""		549411	0					
ANR	549534	Argument	seq		549411	2					
ANR	549535	Identifier	seq		549411	0					
ANR	549536	IfStatement	if ( last )		549411	1					
ANR	549537	Condition	last	597:5:15648:15651	549411	0	True				
ANR	549538	Identifier	last		549411	0					
ANR	549539	ExpressionStatement	"dprintf ( D_NETWORK , ""Y, "" )"	598:3:15657:15682	549411	1	True				
ANR	549540	CallExpression	"dprintf ( D_NETWORK , ""Y, "" )"		549411	0					
ANR	549541	Callee	dprintf		549411	0					
ANR	549542	Identifier	dprintf		549411	0					
ANR	549543	ArgumentList	D_NETWORK		549411	1					
ANR	549544	Argument	D_NETWORK		549411	0					
ANR	549545	Identifier	D_NETWORK		549411	0					
ANR	549546	Argument	"""Y, """		549411	1					
ANR	549547	PrimaryExpression	"""Y, """		549411	0					
ANR	549548	ElseStatement	else		549411	0					
ANR	549549	ExpressionStatement	"dprintf ( D_NETWORK , ""N, "" )"	600:3:15694:15719	549411	0	True				
ANR	549550	CallExpression	"dprintf ( D_NETWORK , ""N, "" )"		549411	0					
ANR	549551	Callee	dprintf		549411	0					
ANR	549552	Identifier	dprintf		549411	0					
ANR	549553	ArgumentList	D_NETWORK		549411	1					
ANR	549554	Argument	D_NETWORK		549411	0					
ANR	549555	Identifier	D_NETWORK		549411	0					
ANR	549556	Argument	"""N, """		549411	1					
ANR	549557	PrimaryExpression	"""N, """		549411	0					
ANR	549558	ExpressionStatement	"dprintf ( D_NETWORK , ""%d)\\t"" , len )"	601:2:15723:15755	549411	2	True				
ANR	549559	CallExpression	"dprintf ( D_NETWORK , ""%d)\\t"" , len )"		549411	0					
ANR	549560	Callee	dprintf		549411	0					
ANR	549561	Identifier	dprintf		549411	0					
ANR	549562	ArgumentList	D_NETWORK		549411	1					
ANR	549563	Argument	D_NETWORK		549411	0					
ANR	549564	Identifier	D_NETWORK		549411	0					
ANR	549565	Argument	"""%d)\\t"""		549411	1					
ANR	549566	PrimaryExpression	"""%d)\\t"""		549411	0					
ANR	549567	Argument	len		549411	2					
ANR	549568	Identifier	len		549411	0					
ANR	549569	ForStatement	for ( int i = 0 ; i < len ; i ++ )		549411	3					
ANR	549570	ForInit	int i = 0 ;	602:6:15763:15770	549411	0	True				
ANR	549571	IdentifierDeclStatement	int i = 0 ;		549411	0					
ANR	549572	IdentifierDecl	i = 0		549411	0					
ANR	549573	IdentifierDeclType	int		549411	0					
ANR	549574	Identifier	i		549411	1					
ANR	549575	AssignmentExpression	i = 0		549411	2		=			
ANR	549576	Identifier	i		549411	0					
ANR	549577	PrimaryExpression	0		549411	1					
ANR	549578	Condition	i < len	602:15:15772:15776	549411	1	True				
ANR	549579	RelationalExpression	i < len		549411	0		<			
ANR	549580	Identifier	i		549411	0					
ANR	549581	Identifier	len		549411	1					
ANR	549582	PostIncDecOperationExpression	i ++	602:22:15779:15781	549411	2	True				
ANR	549583	Identifier	i		549411	0					
ANR	549584	IncDec	++		549411	1					
ANR	549585	CompoundStatement		29:27:605:605	549411	3					
ANR	549586	IfStatement	if ( i < 200 )		549411	0					
ANR	549587	Condition	i < 200	603:6:15792:15798	549411	0	True				
ANR	549588	RelationalExpression	i < 200		549411	0		<			
ANR	549589	Identifier	i		549411	0					
ANR	549590	PrimaryExpression	200		549411	1					
ANR	549591	ExpressionStatement	"dprintf ( D_NETWORK , ""%c"" , dta [ i ] )"	604:4:15805:15837	549411	1	True				
ANR	549592	CallExpression	"dprintf ( D_NETWORK , ""%c"" , dta [ i ] )"		549411	0					
ANR	549593	Callee	dprintf		549411	0					
ANR	549594	Identifier	dprintf		549411	0					
ANR	549595	ArgumentList	D_NETWORK		549411	1					
ANR	549596	Argument	D_NETWORK		549411	0					
ANR	549597	Identifier	D_NETWORK		549411	0					
ANR	549598	Argument	"""%c"""		549411	1					
ANR	549599	PrimaryExpression	"""%c"""		549411	0					
ANR	549600	Argument	dta [ i ]		549411	2					
ANR	549601	ArrayIndexing	dta [ i ]		549411	0					
ANR	549602	Identifier	dta		549411	0					
ANR	549603	Identifier	i		549411	1					
ANR	549604	ElseStatement	else		549411	0					
ANR	549605	CompoundStatement		32:8:668:668	549411	0					
ANR	549606	ExpressionStatement	"dprintf ( D_NETWORK , ""..."" )"	606:4:15853:15878	549411	0	True				
ANR	549607	CallExpression	"dprintf ( D_NETWORK , ""..."" )"		549411	0					
ANR	549608	Callee	dprintf		549411	0					
ANR	549609	Identifier	dprintf		549411	0					
ANR	549610	ArgumentList	D_NETWORK		549411	1					
ANR	549611	Argument	D_NETWORK		549411	0					
ANR	549612	Identifier	D_NETWORK		549411	0					
ANR	549613	Argument	"""..."""		549411	1					
ANR	549614	PrimaryExpression	"""..."""		549411	0					
ANR	549615	BreakStatement	break ;	607:4:15884:15889	549411	1	True				
ANR	549616	ExpressionStatement	"dprintf ( D_NETWORK , ""\\n"" )"	610:2:15902:15926	549411	4	True				
ANR	549617	CallExpression	"dprintf ( D_NETWORK , ""\\n"" )"		549411	0					
ANR	549618	Callee	dprintf		549411	0					
ANR	549619	Identifier	dprintf		549411	0					
ANR	549620	ArgumentList	D_NETWORK		549411	1					
ANR	549621	Argument	D_NETWORK		549411	0					
ANR	549622	Identifier	D_NETWORK		549411	0					
ANR	549623	Argument	"""\\n"""		549411	1					
ANR	549624	PrimaryExpression	"""\\n"""		549411	0					
ANR	549625	ReturnType	void		549411	1					
ANR	549626	Identifier	_condorPacket :: dumpPacket		549411	2					
ANR	549627	ParameterList			549411	3					
ANR	549628	CFGEntryNode	ENTRY		549411		True				
ANR	549629	CFGExitNode	EXIT		549411		True				
ANR	549630	Symbol	last		549411						
ANR	549631	Symbol	data		549411						
ANR	549632	Symbol	* dta		549411						
ANR	549633	Symbol	length		549411						
ANR	549634	Symbol	mID		549411						
ANR	549635	Symbol	i		549411						
ANR	549636	Symbol	getHeader		549411						
ANR	549637	Symbol	dta		549411						
ANR	549638	Symbol	* i		549411						
ANR	549639	Symbol	len		549411						
ANR	549640	Symbol	D_NETWORK		549411						
ANR	549641	Symbol	* data		549411						
ANR	549642	Symbol	seq		549411						
ANR	549643	Function	_condorOutMsg :: _condorOutMsg	615:0:15941:16182							
ANR	549644	FunctionDef	_condorOutMsg :: _condorOutMsg ()		549643	0					
ANR	549645	CompoundStatement		616:0:15972:16182	549643	0					
ANR	549646	ExpressionStatement	headPacket = lastPacket = new _condorPacket ( )	617:1:15975:16020	549643	0	True				
ANR	549647	AssignmentExpression	headPacket = lastPacket = new _condorPacket ( )		549643	0		=			
ANR	549648	Identifier	headPacket		549643	0					
ANR	549649	AssignmentExpression	lastPacket = new _condorPacket ( )		549643	1		=			
ANR	549650	Identifier	lastPacket		549643	0					
ANR	549651	UnaryExpression	new _condorPacket ( )		549643	1					
ANR	549652	IfStatement	if ( ! headPacket )		549643	1					
ANR	549653	Condition	! headPacket	618:4:16026:16036	549643	0	True				
ANR	549654	UnaryOperationExpression	! headPacket		549643	0					
ANR	549655	UnaryOperator	!		549643	0					
ANR	549656	Identifier	headPacket		549643	1					
ANR	549657	CompoundStatement		3:17:66:66	549643	1					
ANR	549658	ExpressionStatement	"dprintf ( D_ALWAYS , ""new Packet failed. out of memory\\n"" )"	619:2:16043:16098	549643	0	True				
ANR	549659	CallExpression	"dprintf ( D_ALWAYS , ""new Packet failed. out of memory\\n"" )"		549643	0					
ANR	549660	Callee	dprintf		549643	0					
ANR	549661	Identifier	dprintf		549643	0					
ANR	549662	ArgumentList	D_ALWAYS		549643	1					
ANR	549663	Argument	D_ALWAYS		549643	0					
ANR	549664	Identifier	D_ALWAYS		549643	0					
ANR	549665	Argument	"""new Packet failed. out of memory\\n"""		549643	1					
ANR	549666	PrimaryExpression	"""new Packet failed. out of memory\\n"""		549643	0					
ANR	549667	ExpressionStatement	"EXCEPT ( ""new Packet failed. out of memory"" )"	620:2:16102:16144	549643	1	True				
ANR	549668	CallExpression	"EXCEPT ( ""new Packet failed. out of memory"" )"		549643	0					
ANR	549669	Callee	EXCEPT		549643	0					
ANR	549670	Identifier	EXCEPT		549643	0					
ANR	549671	ArgumentList	"""new Packet failed. out of memory"""		549643	1					
ANR	549672	Argument	"""new Packet failed. out of memory"""		549643	0					
ANR	549673	PrimaryExpression	"""new Packet failed. out of memory"""		549643	0					
ANR	549674	ExpressionStatement	noMsgSent = 0	622:1:16150:16163	549643	2	True				
ANR	549675	AssignmentExpression	noMsgSent = 0		549643	0		=			
ANR	549676	Identifier	noMsgSent		549643	0					
ANR	549677	PrimaryExpression	0		549643	1					
ANR	549678	ExpressionStatement	avgMsgSize = 0	623:1:16166:16180	549643	3	True				
ANR	549679	AssignmentExpression	avgMsgSize = 0		549643	0		=			
ANR	549680	Identifier	avgMsgSize		549643	0					
ANR	549681	PrimaryExpression	0		549643	1					
ANR	549682	Identifier	_condorOutMsg :: _condorOutMsg		549643	1					
ANR	549683	ParameterList			549643	2					
ANR	549684	CFGEntryNode	ENTRY		549643		True				
ANR	549685	CFGExitNode	EXIT		549643		True				
ANR	549686	Symbol	noMsgSent		549643						
ANR	549687	Symbol	lastPacket		549643						
ANR	549688	Symbol	avgMsgSize		549643						
ANR	549689	Symbol	headPacket		549643						
ANR	549690	Symbol	D_ALWAYS		549643						
ANR	549691	Function	_condorOutMsg :: ~_condorOutMsg	626:0:16185:16356							
ANR	549692	FunctionDef	_condorOutMsg :: ~_condorOutMsg ()		549691	0					
ANR	549693	CompoundStatement		626:32:16217:16356	549691	0					
ANR	549694	IdentifierDeclStatement	_condorPacket * tempPacket ;	627:1:16220:16245	549691	0	True				
ANR	549695	IdentifierDecl	* tempPacket		549691	0					
ANR	549696	IdentifierDeclType	_condorPacket *		549691	0					
ANR	549697	Identifier	tempPacket		549691	1					
ANR	549698	WhileStatement	while ( headPacket )		549691	1					
ANR	549699	Condition	headPacket	629:7:16258:16267	549691	0	True				
ANR	549700	Identifier	headPacket		549691	0					
ANR	549701	CompoundStatement		4:19:52:52	549691	1					
ANR	549702	ExpressionStatement	tempPacket = headPacket	630:2:16274:16297	549691	0	True				
ANR	549703	AssignmentExpression	tempPacket = headPacket		549691	0		=			
ANR	549704	Identifier	tempPacket		549691	0					
ANR	549705	Identifier	headPacket		549691	1					
ANR	549706	ExpressionStatement	headPacket = headPacket -> next	631:2:16301:16330	549691	1	True				
ANR	549707	AssignmentExpression	headPacket = headPacket -> next		549691	0		=			
ANR	549708	Identifier	headPacket		549691	0					
ANR	549709	PtrMemberAccess	headPacket -> next		549691	1					
ANR	549710	Identifier	headPacket		549691	0					
ANR	549711	Identifier	next		549691	1					
ANR	549712	Statement	delete	632:2:16334:16339	549691	2	True				
ANR	549713	ExpressionStatement	tempPacket	632:9:16341:16351	549691	3	True				
ANR	549714	Identifier	tempPacket		549691	0					
ANR	549715	Identifier	_condorOutMsg :: ~_condorOutMsg		549691	1					
ANR	549716	ParameterList			549691	2					
ANR	549717	CFGEntryNode	ENTRY		549691		True				
ANR	549718	CFGExitNode	EXIT		549691		True				
ANR	549719	Symbol	headPacket -> next		549691						
ANR	549720	Symbol	* headPacket		549691						
ANR	549721	Symbol	tempPacket		549691						
ANR	549722	Symbol	headPacket		549691						
ANR	549723	Function	_condorOutMsg :: set_encryption_id	636:0:16359:16608							
ANR	549724	FunctionDef	_condorOutMsg :: set_encryption_id (const char * keyId)		549723	0					
ANR	549725	CompoundStatement		637:0:16419:16608	549723	0					
ANR	549726	IfStatement	if ( ( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) ) )		549723	0					
ANR	549727	Condition	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )	639:8:16474:16525	549723	0	True				
ANR	549728	OrExpression	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )		549723	0		||			
ANR	549729	EqualityExpression	headPacket != lastPacket		549723	0		!=			
ANR	549730	Identifier	headPacket		549723	0					
ANR	549731	Identifier	lastPacket		549723	1					
ANR	549732	UnaryOperationExpression	! headPacket -> empty ( )		549723	1					
ANR	549733	UnaryOperator	!		549723	0					
ANR	549734	CallExpression	headPacket -> empty ( )		549723	1					
ANR	549735	Callee	headPacket -> empty		549723	0					
ANR	549736	PtrMemberAccess	headPacket -> empty		549723	0					
ANR	549737	Identifier	headPacket		549723	0					
ANR	549738	Identifier	empty		549723	1					
ANR	549739	ArgumentList			549723	1					
ANR	549740	CompoundStatement		3:62:108:108	549723	1					
ANR	549741	ReturnStatement	return false ;	640:8:16538:16550	549723	0	True				
ANR	549742	Identifier	false		549723	0					
ANR	549743	ReturnStatement	return headPacket -> set_encryption_id ( keyId ) ;	643:4:16563:16606	549723	1	True				
ANR	549744	CallExpression	headPacket -> set_encryption_id ( keyId )		549723	0					
ANR	549745	Callee	headPacket -> set_encryption_id		549723	0					
ANR	549746	PtrMemberAccess	headPacket -> set_encryption_id		549723	0					
ANR	549747	Identifier	headPacket		549723	0					
ANR	549748	Identifier	set_encryption_id		549723	1					
ANR	549749	ArgumentList	keyId		549723	1					
ANR	549750	Argument	keyId		549723	0					
ANR	549751	Identifier	keyId		549723	0					
ANR	549752	ReturnType	bool		549723	1					
ANR	549753	Identifier	_condorOutMsg :: set_encryption_id		549723	2					
ANR	549754	ParameterList	const char * keyId		549723	3					
ANR	549755	Parameter	const char * keyId	636:40:16399:16416	549723	0	True				
ANR	549756	ParameterType	const char *		549723	0					
ANR	549757	Identifier	keyId		549723	1					
ANR	549758	CFGEntryNode	ENTRY		549723		True				
ANR	549759	CFGExitNode	EXIT		549723		True				
ANR	549760	Symbol	lastPacket		549723						
ANR	549761	Symbol	headPacket -> set_encryption_id		549723						
ANR	549762	Symbol	* headPacket		549723						
ANR	549763	Symbol	headPacket		549723						
ANR	549764	Symbol	false		549723						
ANR	549765	Symbol	keyId		549723						
ANR	549766	Symbol	headPacket -> empty		549723						
ANR	549767	Function	_condorOutMsg :: init_MD	646:0:16611:16793							
ANR	549768	FunctionDef	_condorOutMsg :: init_MD (const char * keyId)		549767	0					
ANR	549769	CompoundStatement		647:0:16659:16793	549767	0					
ANR	549770	IfStatement	if ( ( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) ) )		549767	0					
ANR	549771	Condition	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )	648:8:16669:16720	549767	0	True				
ANR	549772	OrExpression	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )		549767	0		||			
ANR	549773	EqualityExpression	headPacket != lastPacket		549767	0		!=			
ANR	549774	Identifier	headPacket		549767	0					
ANR	549775	Identifier	lastPacket		549767	1					
ANR	549776	UnaryOperationExpression	! headPacket -> empty ( )		549767	1					
ANR	549777	UnaryOperator	!		549767	0					
ANR	549778	CallExpression	headPacket -> empty ( )		549767	1					
ANR	549779	Callee	headPacket -> empty		549767	0					
ANR	549780	PtrMemberAccess	headPacket -> empty		549767	0					
ANR	549781	Identifier	headPacket		549767	0					
ANR	549782	Identifier	empty		549767	1					
ANR	549783	ArgumentList			549767	1					
ANR	549784	CompoundStatement		2:62:63:63	549767	1					
ANR	549785	ReturnStatement	return false ;	649:8:16733:16745	549767	0	True				
ANR	549786	Identifier	false		549767	0					
ANR	549787	ReturnStatement	return headPacket -> init_MD ( keyId ) ;	652:4:16758:16791	549767	1	True				
ANR	549788	CallExpression	headPacket -> init_MD ( keyId )		549767	0					
ANR	549789	Callee	headPacket -> init_MD		549767	0					
ANR	549790	PtrMemberAccess	headPacket -> init_MD		549767	0					
ANR	549791	Identifier	headPacket		549767	0					
ANR	549792	Identifier	init_MD		549767	1					
ANR	549793	ArgumentList	keyId		549767	1					
ANR	549794	Argument	keyId		549767	0					
ANR	549795	Identifier	keyId		549767	0					
ANR	549796	ReturnType	bool		549767	1					
ANR	549797	Identifier	_condorOutMsg :: init_MD		549767	2					
ANR	549798	ParameterList	const char * keyId		549767	3					
ANR	549799	Parameter	const char * keyId	646:28:16639:16656	549767	0	True				
ANR	549800	ParameterType	const char *		549767	0					
ANR	549801	Identifier	keyId		549767	1					
ANR	549802	CFGEntryNode	ENTRY		549767		True				
ANR	549803	CFGExitNode	EXIT		549767		True				
ANR	549804	Symbol	lastPacket		549767						
ANR	549805	Symbol	* headPacket		549767						
ANR	549806	Symbol	headPacket -> init_MD		549767						
ANR	549807	Symbol	headPacket		549767						
ANR	549808	Symbol	false		549767						
ANR	549809	Symbol	keyId		549767						
ANR	549810	Symbol	headPacket -> empty		549767						
ANR	549811	Function	_condorOutMsg :: putn	659:0:16966:17382							
ANR	549812	FunctionDef	"_condorOutMsg :: putn (const char * dta , const int size)"		549811	0					
ANR	549813	CompoundStatement		659:57:17023:17382	549811	0					
ANR	549814	IdentifierDeclStatement	"int total = 0 , len = 0 ;"	660:1:17026:17048	549811	0	True				
ANR	549815	IdentifierDecl	total = 0		549811	0					
ANR	549816	IdentifierDeclType	int		549811	0					
ANR	549817	Identifier	total		549811	1					
ANR	549818	AssignmentExpression	total = 0		549811	2		=			
ANR	549819	Identifier	total		549811	0					
ANR	549820	PrimaryExpression	0		549811	1					
ANR	549821	IdentifierDecl	len = 0		549811	1					
ANR	549822	IdentifierDeclType	int		549811	0					
ANR	549823	Identifier	len		549811	1					
ANR	549824	AssignmentExpression	len = 0		549811	2		=			
ANR	549825	Identifier	len		549811	0					
ANR	549826	PrimaryExpression	0		549811	1					
ANR	549827	WhileStatement	while ( total != size )		549811	1					
ANR	549828	Condition	total != size	662:7:17058:17070	549811	0	True				
ANR	549829	EqualityExpression	total != size		549811	0		!=			
ANR	549830	Identifier	total		549811	0					
ANR	549831	Identifier	size		549811	1					
ANR	549832	CompoundStatement		4:22:49:49	549811	1					
ANR	549833	IfStatement	if ( lastPacket -> full ( ) )		549811	0					
ANR	549834	Condition	lastPacket -> full ( )	663:5:17080:17097	549811	0	True				
ANR	549835	CallExpression	lastPacket -> full ( )		549811	0					
ANR	549836	Callee	lastPacket -> full		549811	0					
ANR	549837	PtrMemberAccess	lastPacket -> full		549811	0					
ANR	549838	Identifier	lastPacket		549811	0					
ANR	549839	Identifier	full		549811	1					
ANR	549840	ArgumentList			549811	1					
ANR	549841	CompoundStatement		5:25:76:76	549811	1					
ANR	549842	ExpressionStatement	lastPacket -> next = new _condorPacket ( )	664:3:17105:17143	549811	0	True				
ANR	549843	AssignmentExpression	lastPacket -> next = new _condorPacket ( )		549811	0		=			
ANR	549844	PtrMemberAccess	lastPacket -> next		549811	0					
ANR	549845	Identifier	lastPacket		549811	0					
ANR	549846	Identifier	next		549811	1					
ANR	549847	UnaryExpression	new _condorPacket ( )		549811	1					
ANR	549848	IfStatement	if ( ! lastPacket -> next )		549811	1					
ANR	549849	Condition	! lastPacket -> next	665:6:17151:17167	549811	0	True				
ANR	549850	UnaryOperationExpression	! lastPacket -> next		549811	0					
ANR	549851	UnaryOperator	!		549811	0					
ANR	549852	PtrMemberAccess	lastPacket -> next		549811	1					
ANR	549853	Identifier	lastPacket		549811	0					
ANR	549854	Identifier	next		549811	1					
ANR	549855	CompoundStatement		7:25:146:146	549811	1					
ANR	549856	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: OutMsg::putn: out of memory\\n"" )"	666:4:17176:17233	549811	0	True				
ANR	549857	CallExpression	"dprintf ( D_ALWAYS , ""Error: OutMsg::putn: out of memory\\n"" )"		549811	0					
ANR	549858	Callee	dprintf		549811	0					
ANR	549859	Identifier	dprintf		549811	0					
ANR	549860	ArgumentList	D_ALWAYS		549811	1					
ANR	549861	Argument	D_ALWAYS		549811	0					
ANR	549862	Identifier	D_ALWAYS		549811	0					
ANR	549863	Argument	"""Error: OutMsg::putn: out of memory\\n"""		549811	1					
ANR	549864	PrimaryExpression	"""Error: OutMsg::putn: out of memory\\n"""		549811	0					
ANR	549865	ReturnStatement	return - 1 ;	667:4:17239:17248	549811	1	True				
ANR	549866	UnaryOperationExpression	- 1		549811	0					
ANR	549867	UnaryOperator	-		549811	0					
ANR	549868	PrimaryExpression	1		549811	1					
ANR	549869	ExpressionStatement	lastPacket = lastPacket -> next	669:3:17258:17287	549811	2	True				
ANR	549870	AssignmentExpression	lastPacket = lastPacket -> next		549811	0		=			
ANR	549871	Identifier	lastPacket		549811	0					
ANR	549872	PtrMemberAccess	lastPacket -> next		549811	1					
ANR	549873	Identifier	lastPacket		549811	0					
ANR	549874	Identifier	next		549811	1					
ANR	549875	ExpressionStatement	"len = lastPacket -> putMax ( & dta [ total ] , size - total )"	671:2:17295:17346	549811	1	True				
ANR	549876	AssignmentExpression	"len = lastPacket -> putMax ( & dta [ total ] , size - total )"		549811	0		=			
ANR	549877	Identifier	len		549811	0					
ANR	549878	CallExpression	"lastPacket -> putMax ( & dta [ total ] , size - total )"		549811	1					
ANR	549879	Callee	lastPacket -> putMax		549811	0					
ANR	549880	PtrMemberAccess	lastPacket -> putMax		549811	0					
ANR	549881	Identifier	lastPacket		549811	0					
ANR	549882	Identifier	putMax		549811	1					
ANR	549883	ArgumentList	& dta [ total ]		549811	1					
ANR	549884	Argument	& dta [ total ]		549811	0					
ANR	549885	UnaryOperationExpression	& dta [ total ]		549811	0					
ANR	549886	UnaryOperator	&		549811	0					
ANR	549887	ArrayIndexing	dta [ total ]		549811	1					
ANR	549888	Identifier	dta		549811	0					
ANR	549889	Identifier	total		549811	1					
ANR	549890	Argument	size - total		549811	1					
ANR	549891	AdditiveExpression	size - total		549811	0		-			
ANR	549892	Identifier	size		549811	0					
ANR	549893	Identifier	total		549811	1					
ANR	549894	ExpressionStatement	total += len	672:2:17350:17362	549811	2	True				
ANR	549895	AssignmentExpression	total += len		549811	0		+=			
ANR	549896	Identifier	total		549811	0					
ANR	549897	Identifier	len		549811	1					
ANR	549898	ReturnStatement	return total ;	674:1:17368:17380	549811	2	True				
ANR	549899	Identifier	total		549811	0					
ANR	549900	ReturnType	int		549811	1					
ANR	549901	Identifier	_condorOutMsg :: putn		549811	2					
ANR	549902	ParameterList	"const char * dta , const int size"		549811	3					
ANR	549903	Parameter	const char * dta	659:24:16990:17004	549811	0	True				
ANR	549904	ParameterType	const char *		549811	0					
ANR	549905	Identifier	dta		549811	1					
ANR	549906	Parameter	const int size	659:41:17007:17020	549811	1	True				
ANR	549907	ParameterType	const int		549811	0					
ANR	549908	Identifier	size		549811	1					
ANR	549909	CFGEntryNode	ENTRY		549811		True				
ANR	549910	CFGExitNode	EXIT		549811		True				
ANR	549911	Symbol	dta		549811						
ANR	549912	Symbol	total		549811						
ANR	549913	Symbol	lastPacket		549811						
ANR	549914	Symbol	size		549811						
ANR	549915	Symbol	len		549811						
ANR	549916	Symbol	lastPacket -> next		549811						
ANR	549917	Symbol	D_ALWAYS		549811						
ANR	549918	Symbol	lastPacket -> putMax		549811						
ANR	549919	Symbol	* lastPacket		549811						
ANR	549920	Symbol	lastPacket -> full		549811						
ANR	549921	Function	_condorOutMsg :: sendMsg	682:0:17470:21040							
ANR	549922	FunctionDef	"_condorOutMsg :: sendMsg (const int sock , const condor_sockaddr & who , _condorMsgID msgID , unsigned char * mac)"		549921	0					
ANR	549923	CompoundStatement		686:0:17663:21040	549921	0					
ANR	549924	IdentifierDeclStatement	_condorPacket * tempPkt ;	687:1:17666:17688	549921	0	True				
ANR	549925	IdentifierDecl	* tempPkt		549921	0					
ANR	549926	IdentifierDeclType	_condorPacket *		549921	0					
ANR	549927	Identifier	tempPkt		549921	1					
ANR	549928	IdentifierDeclStatement	"int seqNo = 0 , msgLen = 0 , sent ;"	688:1:17691:17722	549921	1	True				
ANR	549929	IdentifierDecl	seqNo = 0		549921	0					
ANR	549930	IdentifierDeclType	int		549921	0					
ANR	549931	Identifier	seqNo		549921	1					
ANR	549932	AssignmentExpression	seqNo = 0		549921	2		=			
ANR	549933	Identifier	seqNo		549921	0					
ANR	549934	PrimaryExpression	0		549921	1					
ANR	549935	IdentifierDecl	msgLen = 0		549921	1					
ANR	549936	IdentifierDeclType	int		549921	0					
ANR	549937	Identifier	msgLen		549921	1					
ANR	549938	AssignmentExpression	msgLen = 0		549921	2		=			
ANR	549939	Identifier	msgLen		549921	0					
ANR	549940	PrimaryExpression	0		549921	1					
ANR	549941	IdentifierDecl	sent		549921	2					
ANR	549942	IdentifierDeclType	int		549921	0					
ANR	549943	Identifier	sent		549921	1					
ANR	549944	IdentifierDeclStatement	int total = 0 ;	689:1:17725:17738	549921	2	True				
ANR	549945	IdentifierDecl	total = 0		549921	0					
ANR	549946	IdentifierDeclType	int		549921	0					
ANR	549947	Identifier	total		549921	1					
ANR	549948	AssignmentExpression	total = 0		549921	2		=			
ANR	549949	Identifier	total		549921	0					
ANR	549950	PrimaryExpression	0		549921	1					
ANR	549951	IdentifierDeclStatement	unsigned char * md = mac ;	690:4:17744:17768	549921	3	True				
ANR	549952	IdentifierDecl	* md = mac		549921	0					
ANR	549953	IdentifierDeclType	unsigned char *		549921	0					
ANR	549954	Identifier	md		549921	1					
ANR	549955	AssignmentExpression	* md = mac		549921	2		=			
ANR	549956	Identifier	mac		549921	0					
ANR	549957	Identifier	mac		549921	1					
ANR	549958	IfStatement	if ( headPacket -> empty ( ) )		549921	4					
ANR	549959	Condition	headPacket -> empty ( )	693:4:17798:17816	549921	0	True				
ANR	549960	CallExpression	headPacket -> empty ( )		549921	0					
ANR	549961	Callee	headPacket -> empty		549921	0					
ANR	549962	PtrMemberAccess	headPacket -> empty		549921	0					
ANR	549963	Identifier	headPacket		549921	0					
ANR	549964	Identifier	empty		549921	1					
ANR	549965	ArgumentList			549921	1					
ANR	549966	ReturnStatement	return 0 ;	694:2:17838:17846	549921	1	True				
ANR	549967	PrimaryExpression	0		549921	0					
ANR	549968	WhileStatement	while ( headPacket != lastPacket )		549921	5					
ANR	549969	Condition	headPacket != lastPacket	696:7:17859:17882	549921	0	True				
ANR	549970	EqualityExpression	headPacket != lastPacket		549921	0		!=			
ANR	549971	Identifier	headPacket		549921	0					
ANR	549972	Identifier	lastPacket		549921	1					
ANR	549973	CompoundStatement		11:33:221:221	549921	1					
ANR	549974	ExpressionStatement	tempPkt = headPacket	697:2:17889:17912	549921	0	True				
ANR	549975	AssignmentExpression	tempPkt = headPacket		549921	0		=			
ANR	549976	Identifier	tempPkt		549921	0					
ANR	549977	Identifier	headPacket		549921	1					
ANR	549978	ExpressionStatement	headPacket = headPacket -> next	698:2:17916:17945	549921	1	True				
ANR	549979	AssignmentExpression	headPacket = headPacket -> next		549921	0		=			
ANR	549980	Identifier	headPacket		549921	0					
ANR	549981	PtrMemberAccess	headPacket -> next		549921	1					
ANR	549982	Identifier	headPacket		549921	0					
ANR	549983	Identifier	next		549921	1					
ANR	549984	ExpressionStatement	"tempPkt -> makeHeader ( false , seqNo ++ , msgID , md )"	699:2:17949:17995	549921	2	True				
ANR	549985	CallExpression	"tempPkt -> makeHeader ( false , seqNo ++ , msgID , md )"		549921	0					
ANR	549986	Callee	tempPkt -> makeHeader		549921	0					
ANR	549987	PtrMemberAccess	tempPkt -> makeHeader		549921	0					
ANR	549988	Identifier	tempPkt		549921	0					
ANR	549989	Identifier	makeHeader		549921	1					
ANR	549990	ArgumentList	false		549921	1					
ANR	549991	Argument	false		549921	0					
ANR	549992	Identifier	false		549921	0					
ANR	549993	Argument	seqNo ++		549921	1					
ANR	549994	PostIncDecOperationExpression	seqNo ++		549921	0					
ANR	549995	Identifier	seqNo		549921	0					
ANR	549996	IncDec	++		549921	1					
ANR	549997	Argument	msgID		549921	2					
ANR	549998	Identifier	msgID		549921	0					
ANR	549999	Argument	md		549921	3					
ANR	550000	Identifier	md		549921	0					
ANR	550001	ExpressionStatement	msgLen += tempPkt -> length	700:2:17999:18027	549921	3	True				
ANR	550002	AssignmentExpression	msgLen += tempPkt -> length		549921	0		+=			
ANR	550003	Identifier	msgLen		549921	0					
ANR	550004	PtrMemberAccess	tempPkt -> length		549921	1					
ANR	550005	Identifier	tempPkt		549921	0					
ANR	550006	Identifier	length		549921	1					
ANR	550007	ExpressionStatement	"sent = condor_sendto ( sock , tempPkt -> dataGram , tempPkt -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"	703:2:18035:18166	549921	4	True				
ANR	550008	AssignmentExpression	"sent = condor_sendto ( sock , tempPkt -> dataGram , tempPkt -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		549921	0		=			
ANR	550009	Identifier	sent		549921	0					
ANR	550010	CallExpression	"condor_sendto ( sock , tempPkt -> dataGram , tempPkt -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		549921	1					
ANR	550011	Callee	condor_sendto		549921	0					
ANR	550012	Identifier	condor_sendto		549921	0					
ANR	550013	ArgumentList	sock		549921	1					
ANR	550014	Argument	sock		549921	0					
ANR	550015	Identifier	sock		549921	0					
ANR	550016	Argument	tempPkt -> dataGram		549921	1					
ANR	550017	PtrMemberAccess	tempPkt -> dataGram		549921	0					
ANR	550018	Identifier	tempPkt		549921	0					
ANR	550019	Identifier	dataGram		549921	1					
ANR	550020	Argument	tempPkt -> length + SAFE_MSG_HEADER_SIZE		549921	2					
ANR	550021	AdditiveExpression	tempPkt -> length + SAFE_MSG_HEADER_SIZE		549921	0		+			
ANR	550022	PtrMemberAccess	tempPkt -> length		549921	0					
ANR	550023	Identifier	tempPkt		549921	0					
ANR	550024	Identifier	length		549921	1					
ANR	550025	Identifier	SAFE_MSG_HEADER_SIZE		549921	1					
ANR	550026	Argument	0		549921	3					
ANR	550027	PrimaryExpression	0		549921	0					
ANR	550028	Argument	who		549921	4					
ANR	550029	Identifier	who		549921	0					
ANR	550030	IfStatement	if ( sent != tempPkt -> length + SAFE_MSG_HEADER_SIZE )		549921	5					
ANR	550031	Condition	sent != tempPkt -> length + SAFE_MSG_HEADER_SIZE	707:5:18174:18219	549921	0	True				
ANR	550032	EqualityExpression	sent != tempPkt -> length + SAFE_MSG_HEADER_SIZE		549921	0		!=			
ANR	550033	Identifier	sent		549921	0					
ANR	550034	AdditiveExpression	tempPkt -> length + SAFE_MSG_HEADER_SIZE		549921	1		+			
ANR	550035	PtrMemberAccess	tempPkt -> length		549921	0					
ANR	550036	Identifier	tempPkt		549921	0					
ANR	550037	Identifier	length		549921	1					
ANR	550038	Identifier	SAFE_MSG_HEADER_SIZE		549921	1					
ANR	550039	CompoundStatement		22:53:558:558	549921	1					
ANR	550040	ExpressionStatement	"dprintf ( D_ALWAYS , ""sendMsg:sendto failed - errno: %d\\n"" , errno )"	708:3:18227:18290	549921	0	True				
ANR	550041	CallExpression	"dprintf ( D_ALWAYS , ""sendMsg:sendto failed - errno: %d\\n"" , errno )"		549921	0					
ANR	550042	Callee	dprintf		549921	0					
ANR	550043	Identifier	dprintf		549921	0					
ANR	550044	ArgumentList	D_ALWAYS		549921	1					
ANR	550045	Argument	D_ALWAYS		549921	0					
ANR	550046	Identifier	D_ALWAYS		549921	0					
ANR	550047	Argument	"""sendMsg:sendto failed - errno: %d\\n"""		549921	1					
ANR	550048	PrimaryExpression	"""sendMsg:sendto failed - errno: %d\\n"""		549921	0					
ANR	550049	Argument	errno		549921	2					
ANR	550050	Identifier	errno		549921	0					
ANR	550051	ExpressionStatement	headPacket = tempPkt	709:3:18295:18315	549921	1	True				
ANR	550052	AssignmentExpression	headPacket = tempPkt		549921	0		=			
ANR	550053	Identifier	headPacket		549921	0					
ANR	550054	Identifier	tempPkt		549921	1					
ANR	550055	ExpressionStatement	clearMsg ( )	710:3:18320:18330	549921	2	True				
ANR	550056	CallExpression	clearMsg ( )		549921	0					
ANR	550057	Callee	clearMsg		549921	0					
ANR	550058	Identifier	clearMsg		549921	0					
ANR	550059	ArgumentList			549921	1					
ANR	550060	ReturnStatement	return - 1 ;	711:3:18335:18344	549921	3	True				
ANR	550061	UnaryOperationExpression	- 1		549921	0					
ANR	550062	UnaryOperator	-		549921	0					
ANR	550063	PrimaryExpression	1		549921	1					
ANR	550064	ExpressionStatement	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"	720:2:18618:18683	549921	6	True				
ANR	550065	CallExpression	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"		549921	0					
ANR	550066	Callee	dprintf		549921	0					
ANR	550067	Identifier	dprintf		549921	0					
ANR	550068	ArgumentList	D_NETWORK		549921	1					
ANR	550069	Argument	D_NETWORK		549921	0					
ANR	550070	Identifier	D_NETWORK		549921	0					
ANR	550071	Argument	"""SEND [%d] %s """		549921	1					
ANR	550072	PrimaryExpression	"""SEND [%d] %s """		549921	0					
ANR	550073	Argument	sent		549921	2					
ANR	550074	Identifier	sent		549921	0					
ANR	550075	Argument	sock_to_string ( sock )		549921	3					
ANR	550076	CallExpression	sock_to_string ( sock )		549921	0					
ANR	550077	Callee	sock_to_string		549921	0					
ANR	550078	Identifier	sock_to_string		549921	0					
ANR	550079	ArgumentList	sock		549921	1					
ANR	550080	Argument	sock		549921	0					
ANR	550081	Identifier	sock		549921	0					
ANR	550082	ExpressionStatement	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"	721:2:18687:18755	549921	7	True				
ANR	550083	CallExpression	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"		549921	0					
ANR	550084	Callee	dprintf		549921	0					
ANR	550085	Identifier	dprintf		549921	0					
ANR	550086	ArgumentList	D_NETWORK | D_NOHEADER		549921	1					
ANR	550087	Argument	D_NETWORK | D_NOHEADER		549921	0					
ANR	550088	InclusiveOrExpression	D_NETWORK | D_NOHEADER		549921	0		|			
ANR	550089	Identifier	D_NETWORK		549921	0					
ANR	550090	Identifier	D_NOHEADER		549921	1					
ANR	550091	Argument	"""%s\\n"""		549921	1					
ANR	550092	PrimaryExpression	"""%s\\n"""		549921	0					
ANR	550093	Argument	who . to_sinful ( ) . Value ( )		549921	2					
ANR	550094	CallExpression	who . to_sinful ( ) . Value ( )		549921	0					
ANR	550095	Callee	who . to_sinful ( ) . Value		549921	0					
ANR	550096	MemberAccess	who . to_sinful ( ) . Value		549921	0					
ANR	550097	CallExpression	who . to_sinful ( )		549921	0					
ANR	550098	Callee	who . to_sinful		549921	0					
ANR	550099	MemberAccess	who . to_sinful		549921	0					
ANR	550100	Identifier	who		549921	0					
ANR	550101	Identifier	to_sinful		549921	1					
ANR	550102	ArgumentList			549921	1					
ANR	550103	Identifier	Value		549921	1					
ANR	550104	ArgumentList			549921	1					
ANR	550105	ExpressionStatement	total += sent	723:2:18759:18772	549921	8	True				
ANR	550106	AssignmentExpression	total += sent		549921	0		+=			
ANR	550107	Identifier	total		549921	0					
ANR	550108	Identifier	sent		549921	1					
ANR	550109	Statement	delete	724:2:18776:18781	549921	9	True				
ANR	550110	ExpressionStatement	tempPkt	724:9:18783:18790	549921	10	True				
ANR	550111	Identifier	tempPkt		549921	0					
ANR	550112	ExpressionStatement	md = 0	725:8:18800:18806	549921	11	True				
ANR	550113	AssignmentExpression	md = 0		549921	0		=			
ANR	550114	Identifier	md		549921	0					
ANR	550115	PrimaryExpression	0		549921	1					
ANR	550116	IfStatement	if ( seqNo == 0 )		549921	6					
ANR	550117	Condition	seqNo == 0	729:7:18847:18856	549921	0	True				
ANR	550118	EqualityExpression	seqNo == 0		549921	0		==			
ANR	550119	Identifier	seqNo		549921	0					
ANR	550120	PrimaryExpression	0		549921	1					
ANR	550121	CompoundStatement		44:19:1195:1195	549921	1					
ANR	550122	ExpressionStatement	msgLen = lastPacket -> length	730:2:18882:18909	549921	0	True				
ANR	550123	AssignmentExpression	msgLen = lastPacket -> length		549921	0		=			
ANR	550124	Identifier	msgLen		549921	0					
ANR	550125	PtrMemberAccess	lastPacket -> length		549921	1					
ANR	550126	Identifier	lastPacket		549921	0					
ANR	550127	Identifier	length		549921	1					
ANR	550128	ExpressionStatement	"lastPacket -> makeHeader ( true , 0 , msgID , md )"	731:8:18919:18961	549921	1	True				
ANR	550129	CallExpression	"lastPacket -> makeHeader ( true , 0 , msgID , md )"		549921	0					
ANR	550130	Callee	lastPacket -> makeHeader		549921	0					
ANR	550131	PtrMemberAccess	lastPacket -> makeHeader		549921	0					
ANR	550132	Identifier	lastPacket		549921	0					
ANR	550133	Identifier	makeHeader		549921	1					
ANR	550134	ArgumentList	true		549921	1					
ANR	550135	Argument	true		549921	0					
ANR	550136	Identifier	true		549921	0					
ANR	550137	Argument	0		549921	1					
ANR	550138	PrimaryExpression	0		549921	0					
ANR	550139	Argument	msgID		549921	2					
ANR	550140	Identifier	msgID		549921	0					
ANR	550141	Argument	md		549921	3					
ANR	550142	Identifier	md		549921	0					
ANR	550143	ExpressionStatement	"sent = condor_sendto ( sock , lastPacket -> data , lastPacket -> length , 0 , who )"	738:2:19297:19377	549921	2	True				
ANR	550144	AssignmentExpression	"sent = condor_sendto ( sock , lastPacket -> data , lastPacket -> length , 0 , who )"		549921	0		=			
ANR	550145	Identifier	sent		549921	0					
ANR	550146	CallExpression	"condor_sendto ( sock , lastPacket -> data , lastPacket -> length , 0 , who )"		549921	1					
ANR	550147	Callee	condor_sendto		549921	0					
ANR	550148	Identifier	condor_sendto		549921	0					
ANR	550149	ArgumentList	sock		549921	1					
ANR	550150	Argument	sock		549921	0					
ANR	550151	Identifier	sock		549921	0					
ANR	550152	Argument	lastPacket -> data		549921	1					
ANR	550153	PtrMemberAccess	lastPacket -> data		549921	0					
ANR	550154	Identifier	lastPacket		549921	0					
ANR	550155	Identifier	data		549921	1					
ANR	550156	Argument	lastPacket -> length		549921	2					
ANR	550157	PtrMemberAccess	lastPacket -> length		549921	0					
ANR	550158	Identifier	lastPacket		549921	0					
ANR	550159	Identifier	length		549921	1					
ANR	550160	Argument	0		549921	3					
ANR	550161	PrimaryExpression	0		549921	0					
ANR	550162	Argument	who		549921	4					
ANR	550163	Identifier	who		549921	0					
ANR	550164	IfStatement	if ( sent != lastPacket -> length )		549921	3					
ANR	550165	Condition	sent != lastPacket -> length	740:5:19384:19409	549921	0	True				
ANR	550166	EqualityExpression	sent != lastPacket -> length		549921	0		!=			
ANR	550167	Identifier	sent		549921	0					
ANR	550168	PtrMemberAccess	lastPacket -> length		549921	1					
ANR	550169	Identifier	lastPacket		549921	0					
ANR	550170	Identifier	length		549921	1					
ANR	550171	CompoundStatement		55:33:1748:1748	549921	1					
ANR	550172	ExpressionStatement	"dprintf ( D_ALWAYS , ""SafeMsg: sending small msg failed. errno: %d\\n"" , errno )"	741:3:19417:19504	549921	0	True				
ANR	550173	CallExpression	"dprintf ( D_ALWAYS , ""SafeMsg: sending small msg failed. errno: %d\\n"" , errno )"		549921	0					
ANR	550174	Callee	dprintf		549921	0					
ANR	550175	Identifier	dprintf		549921	0					
ANR	550176	ArgumentList	D_ALWAYS		549921	1					
ANR	550177	Argument	D_ALWAYS		549921	0					
ANR	550178	Identifier	D_ALWAYS		549921	0					
ANR	550179	Argument	"""SafeMsg: sending small msg failed. errno: %d\\n"""		549921	1					
ANR	550180	PrimaryExpression	"""SafeMsg: sending small msg failed. errno: %d\\n"""		549921	0					
ANR	550181	Argument	errno		549921	2					
ANR	550182	Identifier	errno		549921	0					
ANR	550183	ExpressionStatement	headPacket -> reset ( )	744:3:19509:19528	549921	1	True				
ANR	550184	CallExpression	headPacket -> reset ( )		549921	0					
ANR	550185	Callee	headPacket -> reset		549921	0					
ANR	550186	PtrMemberAccess	headPacket -> reset		549921	0					
ANR	550187	Identifier	headPacket		549921	0					
ANR	550188	Identifier	reset		549921	1					
ANR	550189	ArgumentList			549921	1					
ANR	550190	ReturnStatement	return - 1 ;	745:3:19533:19542	549921	2	True				
ANR	550191	UnaryOperationExpression	- 1		549921	0					
ANR	550192	UnaryOperator	-		549921	0					
ANR	550193	PrimaryExpression	1		549921	1					
ANR	550194	ExpressionStatement	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"	752:2:19804:19869	549921	4	True				
ANR	550195	CallExpression	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"		549921	0					
ANR	550196	Callee	dprintf		549921	0					
ANR	550197	Identifier	dprintf		549921	0					
ANR	550198	ArgumentList	D_NETWORK		549921	1					
ANR	550199	Argument	D_NETWORK		549921	0					
ANR	550200	Identifier	D_NETWORK		549921	0					
ANR	550201	Argument	"""SEND [%d] %s """		549921	1					
ANR	550202	PrimaryExpression	"""SEND [%d] %s """		549921	0					
ANR	550203	Argument	sent		549921	2					
ANR	550204	Identifier	sent		549921	0					
ANR	550205	Argument	sock_to_string ( sock )		549921	3					
ANR	550206	CallExpression	sock_to_string ( sock )		549921	0					
ANR	550207	Callee	sock_to_string		549921	0					
ANR	550208	Identifier	sock_to_string		549921	0					
ANR	550209	ArgumentList	sock		549921	1					
ANR	550210	Argument	sock		549921	0					
ANR	550211	Identifier	sock		549921	0					
ANR	550212	ExpressionStatement	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"	753:2:19873:19936	549921	5	True				
ANR	550213	CallExpression	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"		549921	0					
ANR	550214	Callee	dprintf		549921	0					
ANR	550215	Identifier	dprintf		549921	0					
ANR	550216	ArgumentList	D_NETWORK | D_NOHEADER		549921	1					
ANR	550217	Argument	D_NETWORK | D_NOHEADER		549921	0					
ANR	550218	InclusiveOrExpression	D_NETWORK | D_NOHEADER		549921	0		|			
ANR	550219	Identifier	D_NETWORK		549921	0					
ANR	550220	Identifier	D_NOHEADER		549921	1					
ANR	550221	Argument	"""%s\\n"""		549921	1					
ANR	550222	PrimaryExpression	"""%s\\n"""		549921	0					
ANR	550223	Argument	who . to_sinful ( ) . Value ( )		549921	2					
ANR	550224	CallExpression	who . to_sinful ( ) . Value ( )		549921	0					
ANR	550225	Callee	who . to_sinful ( ) . Value		549921	0					
ANR	550226	MemberAccess	who . to_sinful ( ) . Value		549921	0					
ANR	550227	CallExpression	who . to_sinful ( )		549921	0					
ANR	550228	Callee	who . to_sinful		549921	0					
ANR	550229	MemberAccess	who . to_sinful		549921	0					
ANR	550230	Identifier	who		549921	0					
ANR	550231	Identifier	to_sinful		549921	1					
ANR	550232	ArgumentList			549921	1					
ANR	550233	Identifier	Value		549921	1					
ANR	550234	ArgumentList			549921	1					
ANR	550235	ExpressionStatement	total = sent	754:2:19940:19952	549921	6	True				
ANR	550236	AssignmentExpression	total = sent		549921	0		=			
ANR	550237	Identifier	total		549921	0					
ANR	550238	Identifier	sent		549921	1					
ANR	550239	ElseStatement	else		549921	0					
ANR	550240	CompoundStatement		71:9:2305:2305	549921	0					
ANR	550241	ExpressionStatement	"lastPacket -> makeHeader ( true , seqNo , msgID , md )"	757:8:19979:20025	549921	0	True				
ANR	550242	CallExpression	"lastPacket -> makeHeader ( true , seqNo , msgID , md )"		549921	0					
ANR	550243	Callee	lastPacket -> makeHeader		549921	0					
ANR	550244	PtrMemberAccess	lastPacket -> makeHeader		549921	0					
ANR	550245	Identifier	lastPacket		549921	0					
ANR	550246	Identifier	makeHeader		549921	1					
ANR	550247	ArgumentList	true		549921	1					
ANR	550248	Argument	true		549921	0					
ANR	550249	Identifier	true		549921	0					
ANR	550250	Argument	seqNo		549921	1					
ANR	550251	Identifier	seqNo		549921	0					
ANR	550252	Argument	msgID		549921	2					
ANR	550253	Identifier	msgID		549921	0					
ANR	550254	Argument	md		549921	3					
ANR	550255	Identifier	md		549921	0					
ANR	550256	ExpressionStatement	msgLen += lastPacket -> length	758:8:20035:20063	549921	1	True				
ANR	550257	AssignmentExpression	msgLen += lastPacket -> length		549921	0		+=			
ANR	550258	Identifier	msgLen		549921	0					
ANR	550259	PtrMemberAccess	lastPacket -> length		549921	1					
ANR	550260	Identifier	lastPacket		549921	0					
ANR	550261	Identifier	length		549921	1					
ANR	550262	ExpressionStatement	"sent = condor_sendto ( sock , lastPacket -> dataGram , lastPacket -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"	759:8:20073:20216	549921	2	True				
ANR	550263	AssignmentExpression	"sent = condor_sendto ( sock , lastPacket -> dataGram , lastPacket -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		549921	0		=			
ANR	550264	Identifier	sent		549921	0					
ANR	550265	CallExpression	"condor_sendto ( sock , lastPacket -> dataGram , lastPacket -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		549921	1					
ANR	550266	Callee	condor_sendto		549921	0					
ANR	550267	Identifier	condor_sendto		549921	0					
ANR	550268	ArgumentList	sock		549921	1					
ANR	550269	Argument	sock		549921	0					
ANR	550270	Identifier	sock		549921	0					
ANR	550271	Argument	lastPacket -> dataGram		549921	1					
ANR	550272	PtrMemberAccess	lastPacket -> dataGram		549921	0					
ANR	550273	Identifier	lastPacket		549921	0					
ANR	550274	Identifier	dataGram		549921	1					
ANR	550275	Argument	lastPacket -> length + SAFE_MSG_HEADER_SIZE		549921	2					
ANR	550276	AdditiveExpression	lastPacket -> length + SAFE_MSG_HEADER_SIZE		549921	0		+			
ANR	550277	PtrMemberAccess	lastPacket -> length		549921	0					
ANR	550278	Identifier	lastPacket		549921	0					
ANR	550279	Identifier	length		549921	1					
ANR	550280	Identifier	SAFE_MSG_HEADER_SIZE		549921	1					
ANR	550281	Argument	0		549921	3					
ANR	550282	PrimaryExpression	0		549921	0					
ANR	550283	Argument	who		549921	4					
ANR	550284	Identifier	who		549921	0					
ANR	550285	IfStatement	if ( sent != lastPacket -> length + SAFE_MSG_HEADER_SIZE )		549921	3					
ANR	550286	Condition	sent != lastPacket -> length + SAFE_MSG_HEADER_SIZE	762:11:20229:20277	549921	0	True				
ANR	550287	EqualityExpression	sent != lastPacket -> length + SAFE_MSG_HEADER_SIZE		549921	0		!=			
ANR	550288	Identifier	sent		549921	0					
ANR	550289	AdditiveExpression	lastPacket -> length + SAFE_MSG_HEADER_SIZE		549921	1		+			
ANR	550290	PtrMemberAccess	lastPacket -> length		549921	0					
ANR	550291	Identifier	lastPacket		549921	0					
ANR	550292	Identifier	length		549921	1					
ANR	550293	Identifier	SAFE_MSG_HEADER_SIZE		549921	1					
ANR	550294	CompoundStatement		77:62:2616:2616	549921	1					
ANR	550295	ExpressionStatement	"dprintf ( D_ALWAYS , ""SafeMsg: sending last packet failed. errno: %d\\n"" , errno )"	763:12:20294:20372	549921	0	True				
ANR	550296	CallExpression	"dprintf ( D_ALWAYS , ""SafeMsg: sending last packet failed. errno: %d\\n"" , errno )"		549921	0					
ANR	550297	Callee	dprintf		549921	0					
ANR	550298	Identifier	dprintf		549921	0					
ANR	550299	ArgumentList	D_ALWAYS		549921	1					
ANR	550300	Argument	D_ALWAYS		549921	0					
ANR	550301	Identifier	D_ALWAYS		549921	0					
ANR	550302	Argument	"""SafeMsg: sending last packet failed. errno: %d\\n"""		549921	1					
ANR	550303	PrimaryExpression	"""SafeMsg: sending last packet failed. errno: %d\\n"""		549921	0					
ANR	550304	Argument	errno		549921	2					
ANR	550305	Identifier	errno		549921	0					
ANR	550306	ExpressionStatement	headPacket -> reset ( )	764:12:20386:20405	549921	1	True				
ANR	550307	CallExpression	headPacket -> reset ( )		549921	0					
ANR	550308	Callee	headPacket -> reset		549921	0					
ANR	550309	PtrMemberAccess	headPacket -> reset		549921	0					
ANR	550310	Identifier	headPacket		549921	0					
ANR	550311	Identifier	reset		549921	1					
ANR	550312	ArgumentList			549921	1					
ANR	550313	ReturnStatement	return - 1 ;	765:12:20419:20428	549921	2	True				
ANR	550314	UnaryOperationExpression	- 1		549921	0					
ANR	550315	UnaryOperator	-		549921	0					
ANR	550316	PrimaryExpression	1		549921	1					
ANR	550317	ExpressionStatement	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"	772:8:20702:20767	549921	4	True				
ANR	550318	CallExpression	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"		549921	0					
ANR	550319	Callee	dprintf		549921	0					
ANR	550320	Identifier	dprintf		549921	0					
ANR	550321	ArgumentList	D_NETWORK		549921	1					
ANR	550322	Argument	D_NETWORK		549921	0					
ANR	550323	Identifier	D_NETWORK		549921	0					
ANR	550324	Argument	"""SEND [%d] %s """		549921	1					
ANR	550325	PrimaryExpression	"""SEND [%d] %s """		549921	0					
ANR	550326	Argument	sent		549921	2					
ANR	550327	Identifier	sent		549921	0					
ANR	550328	Argument	sock_to_string ( sock )		549921	3					
ANR	550329	CallExpression	sock_to_string ( sock )		549921	0					
ANR	550330	Callee	sock_to_string		549921	0					
ANR	550331	Identifier	sock_to_string		549921	0					
ANR	550332	ArgumentList	sock		549921	1					
ANR	550333	Argument	sock		549921	0					
ANR	550334	Identifier	sock		549921	0					
ANR	550335	ExpressionStatement	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"	773:8:20777:20840	549921	5	True				
ANR	550336	CallExpression	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"		549921	0					
ANR	550337	Callee	dprintf		549921	0					
ANR	550338	Identifier	dprintf		549921	0					
ANR	550339	ArgumentList	D_NETWORK | D_NOHEADER		549921	1					
ANR	550340	Argument	D_NETWORK | D_NOHEADER		549921	0					
ANR	550341	InclusiveOrExpression	D_NETWORK | D_NOHEADER		549921	0		|			
ANR	550342	Identifier	D_NETWORK		549921	0					
ANR	550343	Identifier	D_NOHEADER		549921	1					
ANR	550344	Argument	"""%s\\n"""		549921	1					
ANR	550345	PrimaryExpression	"""%s\\n"""		549921	0					
ANR	550346	Argument	who . to_sinful ( ) . Value ( )		549921	2					
ANR	550347	CallExpression	who . to_sinful ( ) . Value ( )		549921	0					
ANR	550348	Callee	who . to_sinful ( ) . Value		549921	0					
ANR	550349	MemberAccess	who . to_sinful ( ) . Value		549921	0					
ANR	550350	CallExpression	who . to_sinful ( )		549921	0					
ANR	550351	Callee	who . to_sinful		549921	0					
ANR	550352	MemberAccess	who . to_sinful		549921	0					
ANR	550353	Identifier	who		549921	0					
ANR	550354	Identifier	to_sinful		549921	1					
ANR	550355	ArgumentList			549921	1					
ANR	550356	Identifier	Value		549921	1					
ANR	550357	ArgumentList			549921	1					
ANR	550358	ExpressionStatement	total += sent	774:8:20850:20863	549921	6	True				
ANR	550359	AssignmentExpression	total += sent		549921	0		+=			
ANR	550360	Identifier	total		549921	0					
ANR	550361	Identifier	sent		549921	1					
ANR	550362	ExpressionStatement	headPacket -> reset ( )	777:1:20873:20892	549921	7	True				
ANR	550363	CallExpression	headPacket -> reset ( )		549921	0					
ANR	550364	Callee	headPacket -> reset		549921	0					
ANR	550365	PtrMemberAccess	headPacket -> reset		549921	0					
ANR	550366	Identifier	headPacket		549921	0					
ANR	550367	Identifier	reset		549921	1					
ANR	550368	ArgumentList			549921	1					
ANR	550369	ExpressionStatement	noMsgSent ++	778:1:20895:20906	549921	8	True				
ANR	550370	PostIncDecOperationExpression	noMsgSent ++		549921	0					
ANR	550371	Identifier	noMsgSent		549921	0					
ANR	550372	IncDec	++		549921	1					
ANR	550373	IfStatement	if ( noMsgSent == 1 )		549921	9					
ANR	550374	Condition	noMsgSent == 1	779:4:20912:20925	549921	0	True				
ANR	550375	EqualityExpression	noMsgSent == 1		549921	0		==			
ANR	550376	Identifier	noMsgSent		549921	0					
ANR	550377	PrimaryExpression	1		549921	1					
ANR	550378	ExpressionStatement	avgMsgSize = msgLen	780:2:20930:20949	549921	1	True				
ANR	550379	AssignmentExpression	avgMsgSize = msgLen		549921	0		=			
ANR	550380	Identifier	avgMsgSize		549921	0					
ANR	550381	Identifier	msgLen		549921	1					
ANR	550382	ElseStatement	else		549921	0					
ANR	550383	ExpressionStatement	avgMsgSize = ( ( noMsgSent - 1 ) * avgMsgSize + msgLen ) / noMsgSent	782:2:20959:21023	549921	0	True				
ANR	550384	AssignmentExpression	avgMsgSize = ( ( noMsgSent - 1 ) * avgMsgSize + msgLen ) / noMsgSent		549921	0		=			
ANR	550385	Identifier	avgMsgSize		549921	0					
ANR	550386	MultiplicativeExpression	( ( noMsgSent - 1 ) * avgMsgSize + msgLen ) / noMsgSent		549921	1		/			
ANR	550387	AdditiveExpression	( noMsgSent - 1 ) * avgMsgSize + msgLen		549921	0		+			
ANR	550388	MultiplicativeExpression	( noMsgSent - 1 ) * avgMsgSize		549921	0		*			
ANR	550389	AdditiveExpression	noMsgSent - 1		549921	0		-			
ANR	550390	Identifier	noMsgSent		549921	0					
ANR	550391	PrimaryExpression	1		549921	1					
ANR	550392	Identifier	avgMsgSize		549921	1					
ANR	550393	Identifier	msgLen		549921	1					
ANR	550394	Identifier	noMsgSent		549921	1					
ANR	550395	ReturnStatement	return total ;	783:1:21026:21038	549921	10	True				
ANR	550396	Identifier	total		549921	0					
ANR	550397	ReturnType	int		549921	1					
ANR	550398	Identifier	_condorOutMsg :: sendMsg		549921	2					
ANR	550399	ParameterList	"const int sock , const condor_sockaddr & who , _condorMsgID msgID , unsigned char * mac"		549921	3					
ANR	550400	Parameter	const int sock	682:27:17497:17510	549921	0	True				
ANR	550401	ParameterType	const int		549921	0					
ANR	550402	Identifier	sock		549921	1					
ANR	550403	Parameter	const condor_sockaddr & who	683:27:17540:17565	549921	1	True				
ANR	550404	ParameterType	const condor_sockaddr &		549921	0					
ANR	550405	Identifier	who		549921	1					
ANR	550406	Parameter	_condorMsgID msgID	684:27:17595:17612	549921	2	True				
ANR	550407	ParameterType	_condorMsgID		549921	0					
ANR	550408	Identifier	msgID		549921	1					
ANR	550409	Parameter	unsigned char * mac	685:27:17642:17660	549921	3	True				
ANR	550410	ParameterType	unsigned char *		549921	0					
ANR	550411	Identifier	mac		549921	1					
ANR	550412	CFGEntryNode	ENTRY		549921		True				
ANR	550413	CFGExitNode	EXIT		549921		True				
ANR	550414	Symbol	seqNo		549921						
ANR	550415	Symbol	tempPkt		549921						
ANR	550416	Symbol	mac		549921						
ANR	550417	Symbol	msgLen		549921						
ANR	550418	Symbol	total		549921						
ANR	550419	Symbol	lastPacket		549921						
ANR	550420	Symbol	tempPkt -> dataGram		549921						
ANR	550421	Symbol	md		549921						
ANR	550422	Symbol	tempPkt -> length		549921						
ANR	550423	Symbol	lastPacket -> dataGram		549921						
ANR	550424	Symbol	* lastPacket		549921						
ANR	550425	Symbol	headPacket -> empty		549921						
ANR	550426	Symbol	errno		549921						
ANR	550427	Symbol	noMsgSent		549921						
ANR	550428	Symbol	who . to_sinful ( ) . Value		549921						
ANR	550429	Symbol	* headPacket		549921						
ANR	550430	Symbol	who . to_sinful		549921						
ANR	550431	Symbol	lastPacket -> data		549921						
ANR	550432	Symbol	headPacket		549921						
ANR	550433	Symbol	false		549921						
ANR	550434	Symbol	D_ALWAYS		549921						
ANR	550435	Symbol	msgID		549921						
ANR	550436	Symbol	sent		549921						
ANR	550437	Symbol	* tempPkt		549921						
ANR	550438	Symbol	lastPacket -> length		549921						
ANR	550439	Symbol	sock		549921						
ANR	550440	Symbol	headPacket -> next		549921						
ANR	550441	Symbol	condor_sendto		549921						
ANR	550442	Symbol	avgMsgSize		549921						
ANR	550443	Symbol	true		549921						
ANR	550444	Symbol	D_NETWORK		549921						
ANR	550445	Symbol	sock_to_string		549921						
ANR	550446	Symbol	SAFE_MSG_HEADER_SIZE		549921						
ANR	550447	Symbol	D_NOHEADER		549921						
ANR	550448	Symbol	who		549921						
ANR	550449	Function	_condorOutMsg :: getAvgMsgSize	787:0:21044:21111							
ANR	550450	FunctionDef	_condorOutMsg :: getAvgMsgSize ()		550449	0					
ANR	550451	CompoundStatement		788:0:21089:21111	550449	0					
ANR	550452	ReturnStatement	return avgMsgSize ;	789:1:21092:21109	550449	0	True				
ANR	550453	Identifier	avgMsgSize		550449	0					
ANR	550454	ReturnType	unsigned long		550449	1					
ANR	550455	Identifier	_condorOutMsg :: getAvgMsgSize		550449	2					
ANR	550456	ParameterList			550449	3					
ANR	550457	CFGEntryNode	ENTRY		550449		True				
ANR	550458	CFGExitNode	EXIT		550449		True				
ANR	550459	Symbol	avgMsgSize		550449						
ANR	550460	Function	_condorOutMsg :: clearMsg	793:0:21115:21366							
ANR	550461	FunctionDef	_condorOutMsg :: clearMsg ()		550460	0					
ANR	550462	CompoundStatement		794:0:21146:21366	550460	0					
ANR	550463	IdentifierDeclStatement	_condorPacket * tempPkt ;	795:1:21149:21171	550460	0	True				
ANR	550464	IdentifierDecl	* tempPkt		550460	0					
ANR	550465	IdentifierDeclType	_condorPacket *		550460	0					
ANR	550466	Identifier	tempPkt		550460	1					
ANR	550467	IfStatement	if ( headPacket -> empty ( ) )		550460	1					
ANR	550468	Condition	headPacket -> empty ( )	797:4:21178:21196	550460	0	True				
ANR	550469	CallExpression	headPacket -> empty ( )		550460	0					
ANR	550470	Callee	headPacket -> empty		550460	0					
ANR	550471	PtrMemberAccess	headPacket -> empty		550460	0					
ANR	550472	Identifier	headPacket		550460	0					
ANR	550473	Identifier	empty		550460	1					
ANR	550474	ArgumentList			550460	1					
ANR	550475	ReturnStatement	return ;	798:2:21218:21224	550460	1	True				
ANR	550476	WhileStatement	while ( headPacket != lastPacket )		550460	2					
ANR	550477	Condition	headPacket != lastPacket	800:7:21237:21260	550460	0	True				
ANR	550478	EqualityExpression	headPacket != lastPacket		550460	0		!=			
ANR	550479	Identifier	headPacket		550460	0					
ANR	550480	Identifier	lastPacket		550460	1					
ANR	550481	CompoundStatement		7:33:116:116	550460	1					
ANR	550482	ExpressionStatement	tempPkt = headPacket	801:2:21267:21287	550460	0	True				
ANR	550483	AssignmentExpression	tempPkt = headPacket		550460	0		=			
ANR	550484	Identifier	tempPkt		550460	0					
ANR	550485	Identifier	headPacket		550460	1					
ANR	550486	ExpressionStatement	headPacket = headPacket -> next	802:2:21291:21320	550460	1	True				
ANR	550487	AssignmentExpression	headPacket = headPacket -> next		550460	0		=			
ANR	550488	Identifier	headPacket		550460	0					
ANR	550489	PtrMemberAccess	headPacket -> next		550460	1					
ANR	550490	Identifier	headPacket		550460	0					
ANR	550491	Identifier	next		550460	1					
ANR	550492	Statement	delete	803:2:21324:21329	550460	2	True				
ANR	550493	ExpressionStatement	tempPkt	803:9:21331:21338	550460	3	True				
ANR	550494	Identifier	tempPkt		550460	0					
ANR	550495	ExpressionStatement	headPacket -> reset ( )	806:1:21345:21364	550460	3	True				
ANR	550496	CallExpression	headPacket -> reset ( )		550460	0					
ANR	550497	Callee	headPacket -> reset		550460	0					
ANR	550498	PtrMemberAccess	headPacket -> reset		550460	0					
ANR	550499	Identifier	headPacket		550460	0					
ANR	550500	Identifier	reset		550460	1					
ANR	550501	ArgumentList			550460	1					
ANR	550502	ReturnType	void		550460	1					
ANR	550503	Identifier	_condorOutMsg :: clearMsg		550460	2					
ANR	550504	ParameterList			550460	3					
ANR	550505	CFGEntryNode	ENTRY		550460		True				
ANR	550506	CFGExitNode	EXIT		550460		True				
ANR	550507	Symbol	lastPacket		550460						
ANR	550508	Symbol	headPacket -> next		550460						
ANR	550509	Symbol	tempPkt		550460						
ANR	550510	Symbol	* headPacket		550460						
ANR	550511	Symbol	headPacket		550460						
ANR	550512	Symbol	headPacket -> empty		550460						
ANR	550513	Function	_condorOutMsg :: dumpMsg	810:0:21382:22097							
ANR	550514	FunctionDef	_condorOutMsg :: dumpMsg (const _condorMsgID mID)		550513	0					
ANR	550515	CompoundStatement		811:0:21433:22097	550513	0					
ANR	550516	IdentifierDeclStatement	"_condorPacket * tempPkt , * nextPkt ;"	812:1:21436:21468	550513	0	True				
ANR	550517	IdentifierDecl	* tempPkt		550513	0					
ANR	550518	IdentifierDeclType	_condorPacket *		550513	0					
ANR	550519	Identifier	tempPkt		550513	1					
ANR	550520	IdentifierDecl	* nextPkt		550513	1					
ANR	550521	IdentifierDeclType	_condorPacket *		550513	0					
ANR	550522	Identifier	nextPkt		550513	1					
ANR	550523	IdentifierDeclStatement	int dumped ;	813:1:21471:21481	550513	1	True				
ANR	550524	IdentifierDecl	dumped		550513	0					
ANR	550525	IdentifierDeclType	int		550513	0					
ANR	550526	Identifier	dumped		550513	1					
ANR	550527	IdentifierDeclStatement	int seqNo = 0 ;	814:1:21484:21497	550513	2	True				
ANR	550528	IdentifierDecl	seqNo = 0		550513	0					
ANR	550529	IdentifierDeclType	int		550513	0					
ANR	550530	Identifier	seqNo		550513	1					
ANR	550531	AssignmentExpression	seqNo = 0		550513	2		=			
ANR	550532	Identifier	seqNo		550513	0					
ANR	550533	PrimaryExpression	0		550513	1					
ANR	550534	IdentifierDeclStatement	int total = 0 ;	815:1:21500:21513	550513	3	True				
ANR	550535	IdentifierDecl	total = 0		550513	0					
ANR	550536	IdentifierDeclType	int		550513	0					
ANR	550537	Identifier	total		550513	1					
ANR	550538	AssignmentExpression	total = 0		550513	2		=			
ANR	550539	Identifier	total		550513	0					
ANR	550540	PrimaryExpression	0		550513	1					
ANR	550541	ExpressionStatement	"dprintf ( D_NETWORK , ""================================================\\n"" )"	817:1:21517:21598	550513	4	True				
ANR	550542	CallExpression	"dprintf ( D_NETWORK , ""================================================\\n"" )"		550513	0					
ANR	550543	Callee	dprintf		550513	0					
ANR	550544	Identifier	dprintf		550513	0					
ANR	550545	ArgumentList	D_NETWORK		550513	1					
ANR	550546	Argument	D_NETWORK		550513	0					
ANR	550547	Identifier	D_NETWORK		550513	0					
ANR	550548	Argument	"""================================================\\n"""		550513	1					
ANR	550549	PrimaryExpression	"""================================================\\n"""		550513	0					
ANR	550550	IfStatement	if ( headPacket -> empty ( ) )		550513	5					
ANR	550551	Condition	headPacket -> empty ( )	820:4:21605:21623	550513	0	True				
ANR	550552	CallExpression	headPacket -> empty ( )		550513	0					
ANR	550553	Callee	headPacket -> empty		550513	0					
ANR	550554	PtrMemberAccess	headPacket -> empty		550513	0					
ANR	550555	Identifier	headPacket		550513	0					
ANR	550556	Identifier	empty		550513	1					
ANR	550557	ArgumentList			550513	1					
ANR	550558	CompoundStatement		10:25:192:192	550513	1					
ANR	550559	ExpressionStatement	"dprintf ( D_NETWORK , ""empty message\\n"" )"	821:2:21647:21684	550513	0	True				
ANR	550560	CallExpression	"dprintf ( D_NETWORK , ""empty message\\n"" )"		550513	0					
ANR	550561	Callee	dprintf		550513	0					
ANR	550562	Identifier	dprintf		550513	0					
ANR	550563	ArgumentList	D_NETWORK		550513	1					
ANR	550564	Argument	D_NETWORK		550513	0					
ANR	550565	Identifier	D_NETWORK		550513	0					
ANR	550566	Argument	"""empty message\\n"""		550513	1					
ANR	550567	PrimaryExpression	"""empty message\\n"""		550513	0					
ANR	550568	ReturnStatement	return 0 ;	822:2:21688:21696	550513	1	True				
ANR	550569	PrimaryExpression	0		550513	0					
ANR	550570	ExpressionStatement	tempPkt = headPacket	826:1:21735:21755	550513	6	True				
ANR	550571	AssignmentExpression	tempPkt = headPacket		550513	0		=			
ANR	550572	Identifier	tempPkt		550513	0					
ANR	550573	Identifier	headPacket		550513	1					
ANR	550574	WhileStatement	while ( tempPkt )		550513	7					
ANR	550575	Condition	tempPkt	827:7:21764:21770	550513	0	True				
ANR	550576	Identifier	tempPkt		550513	0					
ANR	550577	CompoundStatement		17:16:339:339	550513	1					
ANR	550578	ExpressionStatement	nextPkt = tempPkt -> next	828:2:21777:21800	550513	0	True				
ANR	550579	AssignmentExpression	nextPkt = tempPkt -> next		550513	0		=			
ANR	550580	Identifier	nextPkt		550513	0					
ANR	550581	PtrMemberAccess	tempPkt -> next		550513	1					
ANR	550582	Identifier	tempPkt		550513	0					
ANR	550583	Identifier	next		550513	1					
ANR	550584	ExpressionStatement	"tempPkt -> makeHeader ( ( nextPkt == NULL ) , seqNo ++ , mID )"	829:2:21804:21856	550513	1	True				
ANR	550585	CallExpression	"tempPkt -> makeHeader ( ( nextPkt == NULL ) , seqNo ++ , mID )"		550513	0					
ANR	550586	Callee	tempPkt -> makeHeader		550513	0					
ANR	550587	PtrMemberAccess	tempPkt -> makeHeader		550513	0					
ANR	550588	Identifier	tempPkt		550513	0					
ANR	550589	Identifier	makeHeader		550513	1					
ANR	550590	ArgumentList	nextPkt == NULL		550513	1					
ANR	550591	Argument	nextPkt == NULL		550513	0					
ANR	550592	EqualityExpression	nextPkt == NULL		550513	0		==			
ANR	550593	Identifier	nextPkt		550513	0					
ANR	550594	Identifier	NULL		550513	1					
ANR	550595	Argument	seqNo ++		550513	1					
ANR	550596	PostIncDecOperationExpression	seqNo ++		550513	0					
ANR	550597	Identifier	seqNo		550513	0					
ANR	550598	IncDec	++		550513	1					
ANR	550599	Argument	mID		550513	2					
ANR	550600	Identifier	mID		550513	0					
ANR	550601	ExpressionStatement	tempPkt -> dumpPacket ( )	830:2:21860:21881	550513	2	True				
ANR	550602	CallExpression	tempPkt -> dumpPacket ( )		550513	0					
ANR	550603	Callee	tempPkt -> dumpPacket		550513	0					
ANR	550604	PtrMemberAccess	tempPkt -> dumpPacket		550513	0					
ANR	550605	Identifier	tempPkt		550513	0					
ANR	550606	Identifier	dumpPacket		550513	1					
ANR	550607	ArgumentList			550513	1					
ANR	550608	ExpressionStatement	dumped = tempPkt -> length + SAFE_MSG_HEADER_SIZE	831:2:21885:21932	550513	3	True				
ANR	550609	AssignmentExpression	dumped = tempPkt -> length + SAFE_MSG_HEADER_SIZE		550513	0		=			
ANR	550610	Identifier	dumped		550513	0					
ANR	550611	AdditiveExpression	tempPkt -> length + SAFE_MSG_HEADER_SIZE		550513	1		+			
ANR	550612	PtrMemberAccess	tempPkt -> length		550513	0					
ANR	550613	Identifier	tempPkt		550513	0					
ANR	550614	Identifier	length		550513	1					
ANR	550615	Identifier	SAFE_MSG_HEADER_SIZE		550513	1					
ANR	550616	ExpressionStatement	total += dumped	832:2:21936:21951	550513	4	True				
ANR	550617	AssignmentExpression	total += dumped		550513	0		+=			
ANR	550618	Identifier	total		550513	0					
ANR	550619	Identifier	dumped		550513	1					
ANR	550620	ExpressionStatement	tempPkt = nextPkt	833:2:21955:21972	550513	5	True				
ANR	550621	AssignmentExpression	tempPkt = nextPkt		550513	0		=			
ANR	550622	Identifier	tempPkt		550513	0					
ANR	550623	Identifier	nextPkt		550513	1					
ANR	550624	ExpressionStatement	"dprintf ( D_NETWORK , ""------------------- has %d bytes -----------------------\\n"" , total )"	836:1:21979:22079	550513	8	True				
ANR	550625	CallExpression	"dprintf ( D_NETWORK , ""------------------- has %d bytes -----------------------\\n"" , total )"		550513	0					
ANR	550626	Callee	dprintf		550513	0					
ANR	550627	Identifier	dprintf		550513	0					
ANR	550628	ArgumentList	D_NETWORK		550513	1					
ANR	550629	Argument	D_NETWORK		550513	0					
ANR	550630	Identifier	D_NETWORK		550513	0					
ANR	550631	Argument	"""------------------- has %d bytes -----------------------\\n"""		550513	1					
ANR	550632	PrimaryExpression	"""------------------- has %d bytes -----------------------\\n"""		550513	0					
ANR	550633	Argument	total		550513	2					
ANR	550634	Identifier	total		550513	0					
ANR	550635	ReturnStatement	return total ;	840:1:22083:22095	550513	9	True				
ANR	550636	Identifier	total		550513	0					
ANR	550637	ReturnType	int		550513	1					
ANR	550638	Identifier	_condorOutMsg :: dumpMsg		550513	2					
ANR	550639	ParameterList	const _condorMsgID mID		550513	3					
ANR	550640	Parameter	const _condorMsgID mID	810:27:21409:21430	550513	0	True				
ANR	550641	ParameterType	const _condorMsgID		550513	0					
ANR	550642	Identifier	mID		550513	1					
ANR	550643	CFGEntryNode	ENTRY		550513		True				
ANR	550644	CFGExitNode	EXIT		550513		True				
ANR	550645	Symbol	NULL		550513						
ANR	550646	Symbol	seqNo		550513						
ANR	550647	Symbol	tempPkt		550513						
ANR	550648	Symbol	* headPacket		550513						
ANR	550649	Symbol	headPacket		550513						
ANR	550650	Symbol	mID		550513						
ANR	550651	Symbol	* tempPkt		550513						
ANR	550652	Symbol	nextPkt		550513						
ANR	550653	Symbol	total		550513						
ANR	550654	Symbol	D_NETWORK		550513						
ANR	550655	Symbol	tempPkt -> length		550513						
ANR	550656	Symbol	dumped		550513						
ANR	550657	Symbol	tempPkt -> next		550513						
ANR	550658	Symbol	SAFE_MSG_HEADER_SIZE		550513						
ANR	550659	Symbol	headPacket -> empty		550513						
ANR	550660	Function	_condorDirPage :: _condorDirPage	845:0:22108:22332							
ANR	550661	FunctionDef	"_condorDirPage :: _condorDirPage (_condorDirPage * prev , const int num)"		550660	0					
ANR	550662	CompoundStatement		846:0:22176:22332	550660	0					
ANR	550663	ExpressionStatement	prevDir = prev	847:1:22179:22193	550660	0	True				
ANR	550664	AssignmentExpression	prevDir = prev		550660	0		=			
ANR	550665	Identifier	prevDir		550660	0					
ANR	550666	Identifier	prev		550660	1					
ANR	550667	ExpressionStatement	dirNo = num	848:1:22196:22207	550660	1	True				
ANR	550668	AssignmentExpression	dirNo = num		550660	0		=			
ANR	550669	Identifier	dirNo		550660	0					
ANR	550670	Identifier	num		550660	1					
ANR	550671	ForStatement	for ( int i = 0 ; i < SAFE_MSG_NO_OF_DIR_ENTRY ; i ++ )		550660	2					
ANR	550672	ForInit	int i = 0 ;	849:5:22214:22221	550660	0	True				
ANR	550673	IdentifierDeclStatement	int i = 0 ;		550660	0					
ANR	550674	IdentifierDecl	i = 0		550660	0					
ANR	550675	IdentifierDeclType	int		550660	0					
ANR	550676	Identifier	i		550660	1					
ANR	550677	AssignmentExpression	i = 0		550660	2		=			
ANR	550678	Identifier	i		550660	0					
ANR	550679	PrimaryExpression	0		550660	1					
ANR	550680	Condition	i < SAFE_MSG_NO_OF_DIR_ENTRY	849:14:22223:22249	550660	1	True				
ANR	550681	RelationalExpression	i < SAFE_MSG_NO_OF_DIR_ENTRY		550660	0		<			
ANR	550682	Identifier	i		550660	0					
ANR	550683	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		550660	1					
ANR	550684	PostIncDecOperationExpression	i ++	849:43:22252:22254	550660	2	True				
ANR	550685	Identifier	i		550660	0					
ANR	550686	IncDec	++		550660	1					
ANR	550687	CompoundStatement		4:48:80:80	550660	3					
ANR	550688	ExpressionStatement	dEntry [ i ] . dLen = 0	850:2:22261:22282	550660	0	True				
ANR	550689	AssignmentExpression	dEntry [ i ] . dLen = 0		550660	0		=			
ANR	550690	MemberAccess	dEntry [ i ] . dLen		550660	0					
ANR	550691	ArrayIndexing	dEntry [ i ]		550660	0					
ANR	550692	Identifier	dEntry		550660	0					
ANR	550693	Identifier	i		550660	1					
ANR	550694	Identifier	dLen		550660	1					
ANR	550695	PrimaryExpression	0		550660	1					
ANR	550696	ExpressionStatement	dEntry [ i ] . dGram = NULL	851:2:22286:22310	550660	1	True				
ANR	550697	AssignmentExpression	dEntry [ i ] . dGram = NULL		550660	0		=			
ANR	550698	MemberAccess	dEntry [ i ] . dGram		550660	0					
ANR	550699	ArrayIndexing	dEntry [ i ]		550660	0					
ANR	550700	Identifier	dEntry		550660	0					
ANR	550701	Identifier	i		550660	1					
ANR	550702	Identifier	dGram		550660	1					
ANR	550703	Identifier	NULL		550660	1					
ANR	550704	ExpressionStatement	nextDir = NULL	853:1:22316:22330	550660	3	True				
ANR	550705	AssignmentExpression	nextDir = NULL		550660	0		=			
ANR	550706	Identifier	nextDir		550660	0					
ANR	550707	Identifier	NULL		550660	1					
ANR	550708	Identifier	_condorDirPage :: _condorDirPage		550660	1					
ANR	550709	ParameterList	"_condorDirPage * prev , const int num"		550660	2					
ANR	550710	Parameter	_condorDirPage * prev	845:31:22139:22158	550660	0	True				
ANR	550711	ParameterType	_condorDirPage *		550660	0					
ANR	550712	Identifier	prev		550660	1					
ANR	550713	Parameter	const int num	845:53:22161:22173	550660	1	True				
ANR	550714	ParameterType	const int		550660	0					
ANR	550715	Identifier	num		550660	1					
ANR	550716	CFGEntryNode	ENTRY		550660		True				
ANR	550717	CFGExitNode	EXIT		550660		True				
ANR	550718	Symbol	NULL		550660						
ANR	550719	Symbol	prev		550660						
ANR	550720	Symbol	num		550660						
ANR	550721	Symbol	i		550660						
ANR	550722	Symbol	dEntry [ i ] . dGram		550660						
ANR	550723	Symbol	dEntry		550660						
ANR	550724	Symbol	nextDir		550660						
ANR	550725	Symbol	prevDir		550660						
ANR	550726	Symbol	* i		550660						
ANR	550727	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		550660						
ANR	550728	Symbol	* dEntry		550660						
ANR	550729	Symbol	dEntry [ i ] . dLen		550660						
ANR	550730	Symbol	dirNo		550660						
ANR	550731	Function	_condorDirPage :: ~_condorDirPage	857:0:22336:22482							
ANR	550732	FunctionDef	_condorDirPage :: ~_condorDirPage ()		550731	0					
ANR	550733	CompoundStatement		857:34:22370:22482	550731	0					
ANR	550734	ForStatement	for ( int i = 0 ; i < SAFE_MSG_NO_OF_DIR_ENTRY ; i ++ )		550731	0					
ANR	550735	ForInit	int i = 0 ;	858:5:22377:22384	550731	0	True				
ANR	550736	IdentifierDeclStatement	int i = 0 ;		550731	0					
ANR	550737	IdentifierDecl	i = 0		550731	0					
ANR	550738	IdentifierDeclType	int		550731	0					
ANR	550739	Identifier	i		550731	1					
ANR	550740	AssignmentExpression	i = 0		550731	2		=			
ANR	550741	Identifier	i		550731	0					
ANR	550742	PrimaryExpression	0		550731	1					
ANR	550743	Condition	i < SAFE_MSG_NO_OF_DIR_ENTRY	858:14:22386:22412	550731	1	True				
ANR	550744	RelationalExpression	i < SAFE_MSG_NO_OF_DIR_ENTRY		550731	0		<			
ANR	550745	Identifier	i		550731	0					
ANR	550746	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		550731	1					
ANR	550747	PostIncDecOperationExpression	i ++	858:43:22415:22417	550731	2	True				
ANR	550748	Identifier	i		550731	0					
ANR	550749	IncDec	++		550731	1					
ANR	550750	CompoundStatement		2:48:49:49	550731	3					
ANR	550751	IfStatement	if ( dEntry [ i ] . dGram )		550731	0					
ANR	550752	Condition	dEntry [ i ] . dGram	859:5:22427:22441	550731	0	True				
ANR	550753	MemberAccess	dEntry [ i ] . dGram		550731	0					
ANR	550754	ArrayIndexing	dEntry [ i ]		550731	0					
ANR	550755	Identifier	dEntry		550731	0					
ANR	550756	Identifier	i		550731	1					
ANR	550757	Identifier	dGram		550731	1					
ANR	550758	CompoundStatement		3:22:73:73	550731	1					
ANR	550759	ExpressionStatement	free ( dEntry [ i ] . dGram )	860:3:22449:22470	550731	0	True				
ANR	550760	CallExpression	free ( dEntry [ i ] . dGram )		550731	0					
ANR	550761	Callee	free		550731	0					
ANR	550762	Identifier	free		550731	0					
ANR	550763	ArgumentList	dEntry [ i ] . dGram		550731	1					
ANR	550764	Argument	dEntry [ i ] . dGram		550731	0					
ANR	550765	MemberAccess	dEntry [ i ] . dGram		550731	0					
ANR	550766	ArrayIndexing	dEntry [ i ]		550731	0					
ANR	550767	Identifier	dEntry		550731	0					
ANR	550768	Identifier	i		550731	1					
ANR	550769	Identifier	dGram		550731	1					
ANR	550770	Identifier	_condorDirPage :: ~_condorDirPage		550731	1					
ANR	550771	ParameterList			550731	2					
ANR	550772	CFGEntryNode	ENTRY		550731		True				
ANR	550773	CFGExitNode	EXIT		550731		True				
ANR	550774	Symbol	* i		550731						
ANR	550775	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		550731						
ANR	550776	Symbol	i		550731						
ANR	550777	Symbol	dEntry [ i ] . dGram		550731						
ANR	550778	Symbol	* dEntry		550731						
ANR	550779	Symbol	dEntry		550731						
ANR	550780	Function	_condorInMsg :: _condorInMsg	873:0:22859:24593							
ANR	550781	FunctionDef	"_condorInMsg :: _condorInMsg (const _condorMsgID mID , const bool last , const int seq , const int len , const void * data , const char * MD5Keyid , const unsigned char * md , const char * EncKeyId , _condorInMsg * prev)"		550780	0					
ANR	550782	CompoundStatement		883:0:23355:24593	550780	0					
ANR	550783	IdentifierDeclStatement	int destDirNo ;	884:1:23358:23371	550780	0	True				
ANR	550784	IdentifierDecl	destDirNo		550780	0					
ANR	550785	IdentifierDeclType	int		550780	0					
ANR	550786	Identifier	destDirNo		550780	1					
ANR	550787	IdentifierDeclStatement	int index ;	885:1:23374:23383	550780	1	True				
ANR	550788	IdentifierDecl	index		550780	0					
ANR	550789	IdentifierDeclType	int		550780	0					
ANR	550790	Identifier	index		550780	1					
ANR	550791	ExpressionStatement	msgID . ip_addr = mID . ip_addr	888:1:23413:23440	550780	2	True				
ANR	550792	AssignmentExpression	msgID . ip_addr = mID . ip_addr		550780	0		=			
ANR	550793	MemberAccess	msgID . ip_addr		550780	0					
ANR	550794	Identifier	msgID		550780	0					
ANR	550795	Identifier	ip_addr		550780	1					
ANR	550796	MemberAccess	mID . ip_addr		550780	1					
ANR	550797	Identifier	mID		550780	0					
ANR	550798	Identifier	ip_addr		550780	1					
ANR	550799	ExpressionStatement	msgID . pid = mID . pid	889:1:23443:23462	550780	3	True				
ANR	550800	AssignmentExpression	msgID . pid = mID . pid		550780	0		=			
ANR	550801	MemberAccess	msgID . pid		550780	0					
ANR	550802	Identifier	msgID		550780	0					
ANR	550803	Identifier	pid		550780	1					
ANR	550804	MemberAccess	mID . pid		550780	1					
ANR	550805	Identifier	mID		550780	0					
ANR	550806	Identifier	pid		550780	1					
ANR	550807	ExpressionStatement	msgID . time = mID . time	890:1:23465:23486	550780	4	True				
ANR	550808	AssignmentExpression	msgID . time = mID . time		550780	0		=			
ANR	550809	MemberAccess	msgID . time		550780	0					
ANR	550810	Identifier	msgID		550780	0					
ANR	550811	Identifier	time		550780	1					
ANR	550812	MemberAccess	mID . time		550780	1					
ANR	550813	Identifier	mID		550780	0					
ANR	550814	Identifier	time		550780	1					
ANR	550815	ExpressionStatement	msgID . msgNo = mID . msgNo	891:1:23489:23512	550780	5	True				
ANR	550816	AssignmentExpression	msgID . msgNo = mID . msgNo		550780	0		=			
ANR	550817	MemberAccess	msgID . msgNo		550780	0					
ANR	550818	Identifier	msgID		550780	0					
ANR	550819	Identifier	msgNo		550780	1					
ANR	550820	MemberAccess	mID . msgNo		550780	1					
ANR	550821	Identifier	mID		550780	0					
ANR	550822	Identifier	msgNo		550780	1					
ANR	550823	ExpressionStatement	msgLen = len	894:1:23556:23568	550780	6	True				
ANR	550824	AssignmentExpression	msgLen = len		550780	0		=			
ANR	550825	Identifier	msgLen		550780	0					
ANR	550826	Identifier	len		550780	1					
ANR	550827	ExpressionStatement	lastNo = ( last ) ? seq : 0	895:1:23571:23596	550780	7	True				
ANR	550828	AssignmentExpression	lastNo = ( last ) ? seq : 0		550780	0		=			
ANR	550829	Identifier	lastNo		550780	0					
ANR	550830	ConditionalExpression	( last ) ? seq : 0		550780	1					
ANR	550831	Condition	last		550780	0					
ANR	550832	Identifier	last		550780	0					
ANR	550833	Identifier	seq		550780	1					
ANR	550834	PrimaryExpression	0		550780	2					
ANR	550835	ExpressionStatement	received = 1	896:1:23599:23611	550780	8	True				
ANR	550836	AssignmentExpression	received = 1		550780	0		=			
ANR	550837	Identifier	received		550780	0					
ANR	550838	PrimaryExpression	1		550780	1					
ANR	550839	ExpressionStatement	lastTime = time ( NULL )	897:1:23614:23635	550780	9	True				
ANR	550840	AssignmentExpression	lastTime = time ( NULL )		550780	0		=			
ANR	550841	Identifier	lastTime		550780	0					
ANR	550842	CallExpression	time ( NULL )		550780	1					
ANR	550843	Callee	time		550780	0					
ANR	550844	Identifier	time		550780	0					
ANR	550845	ArgumentList	NULL		550780	1					
ANR	550846	Argument	NULL		550780	0					
ANR	550847	Identifier	NULL		550780	0					
ANR	550848	ExpressionStatement	passed = 0	898:1:23638:23648	550780	10	True				
ANR	550849	AssignmentExpression	passed = 0		550780	0		=			
ANR	550850	Identifier	passed		550780	0					
ANR	550851	PrimaryExpression	0		550780	1					
ANR	550852	ExpressionStatement	curData = 0	899:1:23651:23662	550780	11	True				
ANR	550853	AssignmentExpression	curData = 0		550780	0		=			
ANR	550854	Identifier	curData		550780	0					
ANR	550855	PrimaryExpression	0		550780	1					
ANR	550856	ExpressionStatement	curPacket = 0	900:1:23665:23678	550780	12	True				
ANR	550857	AssignmentExpression	curPacket = 0		550780	0		=			
ANR	550858	Identifier	curPacket		550780	0					
ANR	550859	PrimaryExpression	0		550780	1					
ANR	550860	ExpressionStatement	"headDir = curDir = new _condorDirPage ( NULL , 0 )"	903:1:23719:23765	550780	13	True				
ANR	550861	AssignmentExpression	"headDir = curDir = new _condorDirPage ( NULL , 0 )"		550780	0		=			
ANR	550862	Identifier	headDir		550780	0					
ANR	550863	AssignmentExpression	"curDir = new _condorDirPage ( NULL , 0 )"		550780	1		=			
ANR	550864	Identifier	curDir		550780	0					
ANR	550865	Expression	"NULL , 0"		550780	1					
ANR	550866	Identifier	NULL		550780	0					
ANR	550867	PrimaryExpression	0		550780	1					
ANR	550868	IfStatement	if ( ! curDir )		550780	14					
ANR	550869	Condition	! curDir	904:4:23771:23777	550780	0	True				
ANR	550870	UnaryOperationExpression	! curDir		550780	0					
ANR	550871	UnaryOperator	!		550780	0					
ANR	550872	Identifier	curDir		550780	1					
ANR	550873	CompoundStatement		22:13:424:424	550780	1					
ANR	550874	ExpressionStatement	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"	905:2:23784:23835	550780	0	True				
ANR	550875	CallExpression	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"		550780	0					
ANR	550876	Callee	EXCEPT		550780	0					
ANR	550877	Identifier	EXCEPT		550780	0					
ANR	550878	ArgumentList	"""::InMsg, new DirPage failed. out of mem"""		550780	1					
ANR	550879	Argument	"""::InMsg, new DirPage failed. out of mem"""		550780	0					
ANR	550880	PrimaryExpression	"""::InMsg, new DirPage failed. out of mem"""		550780	0					
ANR	550881	ExpressionStatement	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY	907:1:23841:23883	550780	15	True				
ANR	550882	AssignmentExpression	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY		550780	0		=			
ANR	550883	Identifier	destDirNo		550780	0					
ANR	550884	MultiplicativeExpression	seq / SAFE_MSG_NO_OF_DIR_ENTRY		550780	1		/			
ANR	550885	Identifier	seq		550780	0					
ANR	550886	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		550780	1					
ANR	550887	WhileStatement	while ( curDir -> dirNo != destDirNo )		550780	16					
ANR	550888	Condition	curDir -> dirNo != destDirNo	908:7:23892:23917	550780	0	True				
ANR	550889	EqualityExpression	curDir -> dirNo != destDirNo		550780	0		!=			
ANR	550890	PtrMemberAccess	curDir -> dirNo		550780	0					
ANR	550891	Identifier	curDir		550780	0					
ANR	550892	Identifier	dirNo		550780	1					
ANR	550893	Identifier	destDirNo		550780	1					
ANR	550894	CompoundStatement		26:35:564:564	550780	1					
ANR	550895	ExpressionStatement	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"	909:2:23924:23987	550780	0	True				
ANR	550896	AssignmentExpression	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"		550780	0		=			
ANR	550897	PtrMemberAccess	curDir -> nextDir		550780	0					
ANR	550898	Identifier	curDir		550780	0					
ANR	550899	Identifier	nextDir		550780	1					
ANR	550900	Expression	"curDir , curDir -> dirNo + 1"		550780	1					
ANR	550901	Identifier	curDir		550780	0					
ANR	550902	AdditiveExpression	curDir -> dirNo + 1		550780	1		+			
ANR	550903	PtrMemberAccess	curDir -> dirNo		550780	0					
ANR	550904	Identifier	curDir		550780	0					
ANR	550905	Identifier	dirNo		550780	1					
ANR	550906	PrimaryExpression	1		550780	1					
ANR	550907	IfStatement	if ( ! curDir -> nextDir )		550780	1					
ANR	550908	Condition	! curDir -> nextDir	910:5:23994:24009	550780	0	True				
ANR	550909	UnaryOperationExpression	! curDir -> nextDir		550780	0					
ANR	550910	UnaryOperator	!		550780	0					
ANR	550911	PtrMemberAccess	curDir -> nextDir		550780	1					
ANR	550912	Identifier	curDir		550780	0					
ANR	550913	Identifier	nextDir		550780	1					
ANR	550914	CompoundStatement		28:23:656:656	550780	1					
ANR	550915	ExpressionStatement	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"	911:6:24020:24069	550780	0	True				
ANR	550916	CallExpression	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"		550780	0					
ANR	550917	Callee	EXCEPT		550780	0					
ANR	550918	Identifier	EXCEPT		550780	0					
ANR	550919	ArgumentList	"""::InMsg, new DirPage failed. out of mem"""		550780	1					
ANR	550920	Argument	"""::InMsg, new DirPage failed. out of mem"""		550780	0					
ANR	550921	PrimaryExpression	"""::InMsg, new DirPage failed. out of mem"""		550780	0					
ANR	550922	ExpressionStatement	curDir = curDir -> nextDir	913:2:24077:24101	550780	2	True				
ANR	550923	AssignmentExpression	curDir = curDir -> nextDir		550780	0		=			
ANR	550924	Identifier	curDir		550780	0					
ANR	550925	PtrMemberAccess	curDir -> nextDir		550780	1					
ANR	550926	Identifier	curDir		550780	0					
ANR	550927	Identifier	nextDir		550780	1					
ANR	550928	ExpressionStatement	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY	917:1:24169:24207	550780	17	True				
ANR	550929	AssignmentExpression	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY		550780	0		=			
ANR	550930	Identifier	index		550780	0					
ANR	550931	MultiplicativeExpression	seq % SAFE_MSG_NO_OF_DIR_ENTRY		550780	1		%			
ANR	550932	Identifier	seq		550780	0					
ANR	550933	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		550780	1					
ANR	550934	ExpressionStatement	curDir -> dEntry [ index ] . dLen = len	918:1:24210:24242	550780	18	True				
ANR	550935	AssignmentExpression	curDir -> dEntry [ index ] . dLen = len		550780	0		=			
ANR	550936	MemberAccess	curDir -> dEntry [ index ] . dLen		550780	0					
ANR	550937	ArrayIndexing	curDir -> dEntry [ index ]		550780	0					
ANR	550938	PtrMemberAccess	curDir -> dEntry		550780	0					
ANR	550939	Identifier	curDir		550780	0					
ANR	550940	Identifier	dEntry		550780	1					
ANR	550941	Identifier	index		550780	1					
ANR	550942	Identifier	dLen		550780	1					
ANR	550943	Identifier	len		550780	1					
ANR	550944	ExpressionStatement	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )	919:1:24245:24294	550780	19	True				
ANR	550945	AssignmentExpression	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )		550780	0		=			
ANR	550946	MemberAccess	curDir -> dEntry [ index ] . dGram		550780	0					
ANR	550947	ArrayIndexing	curDir -> dEntry [ index ]		550780	0					
ANR	550948	PtrMemberAccess	curDir -> dEntry		550780	0					
ANR	550949	Identifier	curDir		550780	0					
ANR	550950	Identifier	dEntry		550780	1					
ANR	550951	Identifier	index		550780	1					
ANR	550952	Identifier	dGram		550780	1					
ANR	550953	CastExpression	( char * ) malloc ( len )		550780	1					
ANR	550954	CastTarget	char *		550780	0					
ANR	550955	CallExpression	malloc ( len )		550780	1					
ANR	550956	Callee	malloc		550780	0					
ANR	550957	Identifier	malloc		550780	0					
ANR	550958	ArgumentList	len		550780	1					
ANR	550959	Argument	len		550780	0					
ANR	550960	Identifier	len		550780	0					
ANR	550961	IfStatement	if ( ! curDir -> dEntry [ index ] . dGram )		550780	20					
ANR	550962	Condition	! curDir -> dEntry [ index ] . dGram	920:4:24300:24327	550780	0	True				
ANR	550963	UnaryOperationExpression	! curDir -> dEntry [ index ] . dGram		550780	0					
ANR	550964	UnaryOperator	!		550780	0					
ANR	550965	MemberAccess	curDir -> dEntry [ index ] . dGram		550780	1					
ANR	550966	ArrayIndexing	curDir -> dEntry [ index ]		550780	0					
ANR	550967	PtrMemberAccess	curDir -> dEntry		550780	0					
ANR	550968	Identifier	curDir		550780	0					
ANR	550969	Identifier	dEntry		550780	1					
ANR	550970	Identifier	index		550780	1					
ANR	550971	Identifier	dGram		550780	1					
ANR	550972	CompoundStatement		38:34:974:974	550780	1					
ANR	550973	ExpressionStatement	"EXCEPT ( ""::InMsg, new char[%d] failed. out of mem"" , len )"	921:2:24334:24391	550780	0	True				
ANR	550974	CallExpression	"EXCEPT ( ""::InMsg, new char[%d] failed. out of mem"" , len )"		550780	0					
ANR	550975	Callee	EXCEPT		550780	0					
ANR	550976	Identifier	EXCEPT		550780	0					
ANR	550977	ArgumentList	"""::InMsg, new char[%d] failed. out of mem"""		550780	1					
ANR	550978	Argument	"""::InMsg, new char[%d] failed. out of mem"""		550780	0					
ANR	550979	PrimaryExpression	"""::InMsg, new char[%d] failed. out of mem"""		550780	0					
ANR	550980	Argument	len		550780	1					
ANR	550981	Identifier	len		550780	0					
ANR	550982	ExpressionStatement	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"	923:1:24397:24443	550780	21	True				
ANR	550983	CallExpression	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"		550780	0					
ANR	550984	Callee	memcpy		550780	0					
ANR	550985	Identifier	memcpy		550780	0					
ANR	550986	ArgumentList	curDir -> dEntry [ index ] . dGram		550780	1					
ANR	550987	Argument	curDir -> dEntry [ index ] . dGram		550780	0					
ANR	550988	MemberAccess	curDir -> dEntry [ index ] . dGram		550780	0					
ANR	550989	ArrayIndexing	curDir -> dEntry [ index ]		550780	0					
ANR	550990	PtrMemberAccess	curDir -> dEntry		550780	0					
ANR	550991	Identifier	curDir		550780	0					
ANR	550992	Identifier	dEntry		550780	1					
ANR	550993	Identifier	index		550780	1					
ANR	550994	Identifier	dGram		550780	1					
ANR	550995	Argument	data		550780	1					
ANR	550996	Identifier	data		550780	0					
ANR	550997	Argument	len		550780	2					
ANR	550998	Identifier	len		550780	0					
ANR	550999	ExpressionStatement	tempBuf = NULL	926:1:24487:24501	550780	22	True				
ANR	551000	AssignmentExpression	tempBuf = NULL		550780	0		=			
ANR	551001	Identifier	tempBuf		550780	0					
ANR	551002	Identifier	NULL		550780	1					
ANR	551003	ExpressionStatement	tempBufLen = 0	927:1:24504:24518	550780	23	True				
ANR	551004	AssignmentExpression	tempBufLen = 0		550780	0		=			
ANR	551005	Identifier	tempBufLen		550780	0					
ANR	551006	PrimaryExpression	0		550780	1					
ANR	551007	ExpressionStatement	prevMsg = prev	929:1:24522:24536	550780	24	True				
ANR	551008	AssignmentExpression	prevMsg = prev		550780	0		=			
ANR	551009	Identifier	prevMsg		550780	0					
ANR	551010	Identifier	prev		550780	1					
ANR	551011	ExpressionStatement	nextMsg = NULL	930:1:24539:24553	550780	25	True				
ANR	551012	AssignmentExpression	nextMsg = NULL		550780	0		=			
ANR	551013	Identifier	nextMsg		550780	0					
ANR	551014	Identifier	NULL		550780	1					
ANR	551015	ExpressionStatement	"set_sec ( MD5Keyid , md , EncKeyId )"	932:4:24560:24591	550780	26	True				
ANR	551016	CallExpression	"set_sec ( MD5Keyid , md , EncKeyId )"		550780	0					
ANR	551017	Callee	set_sec		550780	0					
ANR	551018	Identifier	set_sec		550780	0					
ANR	551019	ArgumentList	MD5Keyid		550780	1					
ANR	551020	Argument	MD5Keyid		550780	0					
ANR	551021	Identifier	MD5Keyid		550780	0					
ANR	551022	Argument	md		550780	1					
ANR	551023	Identifier	md		550780	0					
ANR	551024	Argument	EncKeyId		550780	2					
ANR	551025	Identifier	EncKeyId		550780	0					
ANR	551026	Identifier	_condorInMsg :: _condorInMsg		550780	1					
ANR	551027	ParameterList	"const _condorMsgID mID , const bool last , const int seq , const int len , const void * data , const char * MD5Keyid , const unsigned char * md , const char * EncKeyId , _condorInMsg * prev"		550780	2					
ANR	551028	Parameter	const _condorMsgID mID	873:27:22886:22907	550780	0	True				
ANR	551029	ParameterType	const _condorMsgID		550780	0					
ANR	551030	Identifier	mID		550780	1					
ANR	551031	Parameter	const bool last	874:4:22939:22953	550780	1	True				
ANR	551032	ParameterType	const bool		550780	0					
ANR	551033	Identifier	last		550780	1					
ANR	551034	Parameter	const int seq	875:4:22990:23002	550780	2	True				
ANR	551035	ParameterType	const int		550780	0					
ANR	551036	Identifier	seq		550780	1					
ANR	551037	Parameter	const int len	876:4:23034:23046	550780	3	True				
ANR	551038	ParameterType	const int		550780	0					
ANR	551039	Identifier	len		550780	1					
ANR	551040	Parameter	const void * data	877:4:23078:23093	550780	4	True				
ANR	551041	ParameterType	const void *		550780	0					
ANR	551042	Identifier	data		550780	1					
ANR	551043	Parameter	const char * MD5Keyid	878:16:23135:23155	550780	5	True				
ANR	551044	ParameterType	const char *		550780	0					
ANR	551045	Identifier	MD5Keyid		550780	1					
ANR	551046	Parameter	const unsigned char * md	879:16:23189:23212	550780	6	True				
ANR	551047	ParameterType	const unsigned char *		550780	0					
ANR	551048	Identifier	md		550780	1					
ANR	551049	Parameter	const char * EncKeyId	880:16:23246:23266	550780	7	True				
ANR	551050	ParameterType	const char *		550780	0					
ANR	551051	Identifier	EncKeyId		550780	1					
ANR	551052	Parameter	_condorInMsg * prev	881:4:23273:23290	550780	8	True				
ANR	551053	ParameterType	_condorInMsg *		550780	0					
ANR	551054	Identifier	prev		550780	1					
ANR	551055	CFGEntryNode	ENTRY		550780		True				
ANR	551056	CFGExitNode	EXIT		550780		True				
ANR	551057	Symbol	lastTime		550780						
ANR	551058	Symbol	data		550780						
ANR	551059	Symbol	prevMsg		550780						
ANR	551060	Symbol	prev		550780						
ANR	551061	Symbol	* index		550780						
ANR	551062	Symbol	mID		550780						
ANR	551063	Symbol	* curDir -> dEntry		550780						
ANR	551064	Symbol	destDirNo		550780						
ANR	551065	Symbol	mID . msgNo		550780						
ANR	551066	Symbol	mID . time		550780						
ANR	551067	Symbol	msgLen		550780						
ANR	551068	Symbol	msgID . ip_addr		550780						
ANR	551069	Symbol	len		550780						
ANR	551070	Symbol	md		550780						
ANR	551071	Symbol	curDir -> dEntry [ index ] . dGram		550780						
ANR	551072	Symbol	curPacket		550780						
ANR	551073	Symbol	nextMsg		550780						
ANR	551074	Symbol	passed		550780						
ANR	551075	Symbol	curData		550780						
ANR	551076	Symbol	curDir -> nextDir		550780						
ANR	551077	Symbol	seq		550780						
ANR	551078	Symbol	EncKeyId		550780						
ANR	551079	Symbol	tempBuf		550780						
ANR	551080	Symbol	malloc		550780						
ANR	551081	Symbol	msgID . pid		550780						
ANR	551082	Symbol	msgID . msgNo		550780						
ANR	551083	Symbol	NULL		550780						
ANR	551084	Symbol	last		550780						
ANR	551085	Symbol	curDir -> dirNo		550780						
ANR	551086	Symbol	curDir -> dEntry [ index ] . dLen		550780						
ANR	551087	Symbol	index		550780						
ANR	551088	Symbol	msgID		550780						
ANR	551089	Symbol	received		550780						
ANR	551090	Symbol	curDir -> dEntry		550780						
ANR	551091	Symbol	headDir		550780						
ANR	551092	Symbol	* curDir		550780						
ANR	551093	Symbol	lastNo		550780						
ANR	551094	Symbol	* * curDir		550780						
ANR	551095	Symbol	mID . pid		550780						
ANR	551096	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		550780						
ANR	551097	Symbol	tempBufLen		550780						
ANR	551098	Symbol	curDir		550780						
ANR	551099	Symbol	mID . ip_addr		550780						
ANR	551100	Symbol	time		550780						
ANR	551101	Symbol	msgID . time		550780						
ANR	551102	Symbol	MD5Keyid		550780						
ANR	551103	Function	_condorInMsg :: ~_condorInMsg	935:0:24596:24950							
ANR	551104	FunctionDef	_condorInMsg :: ~_condorInMsg ()		551103	0					
ANR	551105	CompoundStatement		935:30:24626:24950	551103	0					
ANR	551106	IfStatement	if ( tempBuf )		551103	0					
ANR	551107	Condition	tempBuf	937:4:24633:24639	551103	0	True				
ANR	551108	Identifier	tempBuf		551103	0					
ANR	551109	ExpressionStatement	free ( tempBuf )	937:13:24642:24655	551103	1	True				
ANR	551110	CallExpression	free ( tempBuf )		551103	0					
ANR	551111	Callee	free		551103	0					
ANR	551112	Identifier	free		551103	0					
ANR	551113	ArgumentList	tempBuf		551103	1					
ANR	551114	Argument	tempBuf		551103	0					
ANR	551115	Identifier	tempBuf		551103	0					
ANR	551116	IdentifierDeclStatement	_condorDirPage * tempDir ;	939:1:24659:24682	551103	1	True				
ANR	551117	IdentifierDecl	* tempDir		551103	0					
ANR	551118	IdentifierDeclType	_condorDirPage *		551103	0					
ANR	551119	Identifier	tempDir		551103	1					
ANR	551120	WhileStatement	while ( headDir )		551103	2					
ANR	551121	Condition	headDir	940:7:24691:24697	551103	0	True				
ANR	551122	Identifier	headDir		551103	0					
ANR	551123	CompoundStatement		6:16:73:73	551103	1					
ANR	551124	ExpressionStatement	tempDir = headDir	941:2:24704:24721	551103	0	True				
ANR	551125	AssignmentExpression	tempDir = headDir		551103	0		=			
ANR	551126	Identifier	tempDir		551103	0					
ANR	551127	Identifier	headDir		551103	1					
ANR	551128	ExpressionStatement	headDir = headDir -> nextDir	942:2:24725:24751	551103	1	True				
ANR	551129	AssignmentExpression	headDir = headDir -> nextDir		551103	0		=			
ANR	551130	Identifier	headDir		551103	0					
ANR	551131	PtrMemberAccess	headDir -> nextDir		551103	1					
ANR	551132	Identifier	headDir		551103	0					
ANR	551133	Identifier	nextDir		551103	1					
ANR	551134	Statement	delete	943:2:24755:24760	551103	2	True				
ANR	551135	ExpressionStatement	tempDir	943:9:24762:24769	551103	3	True				
ANR	551136	Identifier	tempDir		551103	0					
ANR	551137	IfStatement	if ( incomingMD5KeyId_ )		551103	3					
ANR	551138	Condition	incomingMD5KeyId_	945:8:24782:24798	551103	0	True				
ANR	551139	Identifier	incomingMD5KeyId_		551103	0					
ANR	551140	CompoundStatement		11:27:174:174	551103	1					
ANR	551141	ExpressionStatement	free ( incomingMD5KeyId_ )	946:8:24811:24834	551103	0	True				
ANR	551142	CallExpression	free ( incomingMD5KeyId_ )		551103	0					
ANR	551143	Callee	free		551103	0					
ANR	551144	Identifier	free		551103	0					
ANR	551145	ArgumentList	incomingMD5KeyId_		551103	1					
ANR	551146	Argument	incomingMD5KeyId_		551103	0					
ANR	551147	Identifier	incomingMD5KeyId_		551103	0					
ANR	551148	IfStatement	if ( incomingEncKeyId_ )		551103	4					
ANR	551149	Condition	incomingEncKeyId_	948:8:24850:24866	551103	0	True				
ANR	551150	Identifier	incomingEncKeyId_		551103	0					
ANR	551151	CompoundStatement		14:27:242:242	551103	1					
ANR	551152	ExpressionStatement	free ( incomingEncKeyId_ )	949:8:24879:24902	551103	0	True				
ANR	551153	CallExpression	free ( incomingEncKeyId_ )		551103	0					
ANR	551154	Callee	free		551103	0					
ANR	551155	Identifier	free		551103	0					
ANR	551156	ArgumentList	incomingEncKeyId_		551103	1					
ANR	551157	Argument	incomingEncKeyId_		551103	0					
ANR	551158	Identifier	incomingEncKeyId_		551103	0					
ANR	551159	IfStatement	if ( md_ )		551103	5					
ANR	551160	Condition	md_	951:8:24918:24920	551103	0	True				
ANR	551161	Identifier	md_		551103	0					
ANR	551162	CompoundStatement		17:13:296:296	551103	1					
ANR	551163	ExpressionStatement	free ( md_ )	952:8:24933:24942	551103	0	True				
ANR	551164	CallExpression	free ( md_ )		551103	0					
ANR	551165	Callee	free		551103	0					
ANR	551166	Identifier	free		551103	0					
ANR	551167	ArgumentList	md_		551103	1					
ANR	551168	Argument	md_		551103	0					
ANR	551169	Identifier	md_		551103	0					
ANR	551170	Identifier	_condorInMsg :: ~_condorInMsg		551103	1					
ANR	551171	ParameterList			551103	2					
ANR	551172	CFGEntryNode	ENTRY		551103		True				
ANR	551173	CFGExitNode	EXIT		551103		True				
ANR	551174	Symbol	* headDir		551103						
ANR	551175	Symbol	incomingMD5KeyId_		551103						
ANR	551176	Symbol	tempDir		551103						
ANR	551177	Symbol	md_		551103						
ANR	551178	Symbol	headDir		551103						
ANR	551179	Symbol	headDir -> nextDir		551103						
ANR	551180	Symbol	incomingEncKeyId_		551103						
ANR	551181	Symbol	tempBuf		551103						
ANR	551182	Function	_condorInMsg :: addPacket	960:0:24977:26727							
ANR	551183	FunctionDef	"_condorInMsg :: addPacket (const bool last , const int seq , const int len , const void * data)"		551182	0					
ANR	551184	CompoundStatement		964:0:25159:26727	551182	0					
ANR	551185	IdentifierDeclStatement	"int destDirNo , index ;"	965:1:25162:25182	551182	0	True				
ANR	551186	IdentifierDecl	destDirNo		551182	0					
ANR	551187	IdentifierDeclType	int		551182	0					
ANR	551188	Identifier	destDirNo		551182	1					
ANR	551189	IdentifierDecl	index		551182	1					
ANR	551190	IdentifierDeclType	int		551182	0					
ANR	551191	Identifier	index		551182	1					
ANR	551192	IfStatement	if ( lastNo != 0 && lastNo + 1 == received )		551182	1					
ANR	551193	Condition	lastNo != 0 && lastNo + 1 == received	968:4:25231:25265	551182	0	True				
ANR	551194	AndExpression	lastNo != 0 && lastNo + 1 == received		551182	0		&&			
ANR	551195	EqualityExpression	lastNo != 0		551182	0		!=			
ANR	551196	Identifier	lastNo		551182	0					
ANR	551197	PrimaryExpression	0		551182	1					
ANR	551198	EqualityExpression	lastNo + 1 == received		551182	1		==			
ANR	551199	AdditiveExpression	lastNo + 1		551182	0		+			
ANR	551200	Identifier	lastNo		551182	0					
ANR	551201	PrimaryExpression	1		551182	1					
ANR	551202	Identifier	received		551182	1					
ANR	551203	CompoundStatement		5:41:108:108	551182	1					
ANR	551204	ExpressionStatement	"dprintf ( D_NETWORK , ""Duplicated packet. The msg fully defragmented.\\n"" )"	969:8:25278:25348	551182	0	True				
ANR	551205	CallExpression	"dprintf ( D_NETWORK , ""Duplicated packet. The msg fully defragmented.\\n"" )"		551182	0					
ANR	551206	Callee	dprintf		551182	0					
ANR	551207	Identifier	dprintf		551182	0					
ANR	551208	ArgumentList	D_NETWORK		551182	1					
ANR	551209	Argument	D_NETWORK		551182	0					
ANR	551210	Identifier	D_NETWORK		551182	0					
ANR	551211	Argument	"""Duplicated packet. The msg fully defragmented.\\n"""		551182	1					
ANR	551212	PrimaryExpression	"""Duplicated packet. The msg fully defragmented.\\n"""		551182	0					
ANR	551213	ReturnStatement	return false ;	970:2:25352:25364	551182	1	True				
ANR	551214	Identifier	false		551182	0					
ANR	551215	ExpressionStatement	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY	973:1:25401:25443	551182	2	True				
ANR	551216	AssignmentExpression	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY		551182	0		=			
ANR	551217	Identifier	destDirNo		551182	0					
ANR	551218	MultiplicativeExpression	seq / SAFE_MSG_NO_OF_DIR_ENTRY		551182	1		/			
ANR	551219	Identifier	seq		551182	0					
ANR	551220	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		551182	1					
ANR	551221	WhileStatement	while ( destDirNo != curDir -> dirNo )		551182	3					
ANR	551222	Condition	destDirNo != curDir -> dirNo	974:7:25452:25477	551182	0	True				
ANR	551223	EqualityExpression	destDirNo != curDir -> dirNo		551182	0		!=			
ANR	551224	Identifier	destDirNo		551182	0					
ANR	551225	PtrMemberAccess	curDir -> dirNo		551182	1					
ANR	551226	Identifier	curDir		551182	0					
ANR	551227	Identifier	dirNo		551182	1					
ANR	551228	CompoundStatement		11:35:320:320	551182	1					
ANR	551229	IfStatement	if ( destDirNo > curDir -> dirNo )		551182	0					
ANR	551230	Condition	destDirNo > curDir -> dirNo	975:5:25487:25511	551182	0	True				
ANR	551231	RelationalExpression	destDirNo > curDir -> dirNo		551182	0		>			
ANR	551232	Identifier	destDirNo		551182	0					
ANR	551233	PtrMemberAccess	curDir -> dirNo		551182	1					
ANR	551234	Identifier	curDir		551182	0					
ANR	551235	Identifier	dirNo		551182	1					
ANR	551236	CompoundStatement		12:32:354:354	551182	1					
ANR	551237	IfStatement	if ( curDir -> nextDir == NULL )		551182	0					
ANR	551238	Condition	curDir -> nextDir == NULL	976:6:25570:25592	551182	0	True				
ANR	551239	EqualityExpression	curDir -> nextDir == NULL		551182	0		==			
ANR	551240	PtrMemberAccess	curDir -> nextDir		551182	0					
ANR	551241	Identifier	curDir		551182	0					
ANR	551242	Identifier	nextDir		551182	1					
ANR	551243	Identifier	NULL		551182	1					
ANR	551244	CompoundStatement		13:31:435:435	551182	1					
ANR	551245	ExpressionStatement	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"	977:4:25601:25664	551182	0	True				
ANR	551246	AssignmentExpression	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"		551182	0		=			
ANR	551247	PtrMemberAccess	curDir -> nextDir		551182	0					
ANR	551248	Identifier	curDir		551182	0					
ANR	551249	Identifier	nextDir		551182	1					
ANR	551250	Expression	"curDir , curDir -> dirNo + 1"		551182	1					
ANR	551251	Identifier	curDir		551182	0					
ANR	551252	AdditiveExpression	curDir -> dirNo + 1		551182	1		+			
ANR	551253	PtrMemberAccess	curDir -> dirNo		551182	0					
ANR	551254	Identifier	curDir		551182	0					
ANR	551255	Identifier	dirNo		551182	1					
ANR	551256	PrimaryExpression	1		551182	1					
ANR	551257	IfStatement	if ( ! curDir -> nextDir )		551182	1					
ANR	551258	Condition	! curDir -> nextDir	978:7:25673:25688	551182	0	True				
ANR	551259	UnaryOperationExpression	! curDir -> nextDir		551182	0					
ANR	551260	UnaryOperator	!		551182	0					
ANR	551261	PtrMemberAccess	curDir -> nextDir		551182	1					
ANR	551262	Identifier	curDir		551182	0					
ANR	551263	Identifier	nextDir		551182	1					
ANR	551264	CompoundStatement		15:25:531:531	551182	1					
ANR	551265	ExpressionStatement	"dprintf ( D_ALWAYS , ""addPacket, out of memory\\n"" )"	979:5:25698:25745	551182	0	True				
ANR	551266	CallExpression	"dprintf ( D_ALWAYS , ""addPacket, out of memory\\n"" )"		551182	0					
ANR	551267	Callee	dprintf		551182	0					
ANR	551268	Identifier	dprintf		551182	0					
ANR	551269	ArgumentList	D_ALWAYS		551182	1					
ANR	551270	Argument	D_ALWAYS		551182	0					
ANR	551271	Identifier	D_ALWAYS		551182	0					
ANR	551272	Argument	"""addPacket, out of memory\\n"""		551182	1					
ANR	551273	PrimaryExpression	"""addPacket, out of memory\\n"""		551182	0					
ANR	551274	ReturnStatement	return false ;	980:5:25752:25764	551182	1	True				
ANR	551275	Identifier	false		551182	0					
ANR	551276	ExpressionStatement	curDir = curDir -> nextDir	983:3:25780:25804	551182	1	True				
ANR	551277	AssignmentExpression	curDir = curDir -> nextDir		551182	0		=			
ANR	551278	Identifier	curDir		551182	0					
ANR	551279	PtrMemberAccess	curDir -> nextDir		551182	1					
ANR	551280	Identifier	curDir		551182	0					
ANR	551281	Identifier	nextDir		551182	1					
ANR	551282	ElseStatement	else		551182	0					
ANR	551283	ExpressionStatement	curDir = curDir -> prevDir	986:3:25886:25910	551182	0	True				
ANR	551284	AssignmentExpression	curDir = curDir -> prevDir		551182	0		=			
ANR	551285	Identifier	curDir		551182	0					
ANR	551286	PtrMemberAccess	curDir -> prevDir		551182	1					
ANR	551287	Identifier	curDir		551182	0					
ANR	551288	Identifier	prevDir		551182	1					
ANR	551289	ExpressionStatement	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY	989:1:25943:25981	551182	4	True				
ANR	551290	AssignmentExpression	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY		551182	0		=			
ANR	551291	Identifier	index		551182	0					
ANR	551292	MultiplicativeExpression	seq % SAFE_MSG_NO_OF_DIR_ENTRY		551182	1		%			
ANR	551293	Identifier	seq		551182	0					
ANR	551294	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		551182	1					
ANR	551295	IfStatement	if ( curDir -> dEntry [ index ] . dLen == 0 )		551182	5					
ANR	551296	Condition	curDir -> dEntry [ index ] . dLen == 0	990:4:25987:26017	551182	0	True				
ANR	551297	EqualityExpression	curDir -> dEntry [ index ] . dLen == 0		551182	0		==			
ANR	551298	MemberAccess	curDir -> dEntry [ index ] . dLen		551182	0					
ANR	551299	ArrayIndexing	curDir -> dEntry [ index ]		551182	0					
ANR	551300	PtrMemberAccess	curDir -> dEntry		551182	0					
ANR	551301	Identifier	curDir		551182	0					
ANR	551302	Identifier	dEntry		551182	1					
ANR	551303	Identifier	index		551182	1					
ANR	551304	Identifier	dLen		551182	1					
ANR	551305	PrimaryExpression	0		551182	1					
ANR	551306	CompoundStatement		27:37:860:860	551182	1					
ANR	551307	ExpressionStatement	curDir -> dEntry [ index ] . dLen = len	991:2:26038:26070	551182	0	True				
ANR	551308	AssignmentExpression	curDir -> dEntry [ index ] . dLen = len		551182	0		=			
ANR	551309	MemberAccess	curDir -> dEntry [ index ] . dLen		551182	0					
ANR	551310	ArrayIndexing	curDir -> dEntry [ index ]		551182	0					
ANR	551311	PtrMemberAccess	curDir -> dEntry		551182	0					
ANR	551312	Identifier	curDir		551182	0					
ANR	551313	Identifier	dEntry		551182	1					
ANR	551314	Identifier	index		551182	1					
ANR	551315	Identifier	dLen		551182	1					
ANR	551316	Identifier	len		551182	1					
ANR	551317	ExpressionStatement	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )	992:2:26074:26123	551182	1	True				
ANR	551318	AssignmentExpression	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )		551182	0		=			
ANR	551319	MemberAccess	curDir -> dEntry [ index ] . dGram		551182	0					
ANR	551320	ArrayIndexing	curDir -> dEntry [ index ]		551182	0					
ANR	551321	PtrMemberAccess	curDir -> dEntry		551182	0					
ANR	551322	Identifier	curDir		551182	0					
ANR	551323	Identifier	dEntry		551182	1					
ANR	551324	Identifier	index		551182	1					
ANR	551325	Identifier	dGram		551182	1					
ANR	551326	CastExpression	( char * ) malloc ( len )		551182	1					
ANR	551327	CastTarget	char *		551182	0					
ANR	551328	CallExpression	malloc ( len )		551182	1					
ANR	551329	Callee	malloc		551182	0					
ANR	551330	Identifier	malloc		551182	0					
ANR	551331	ArgumentList	len		551182	1					
ANR	551332	Argument	len		551182	0					
ANR	551333	Identifier	len		551182	0					
ANR	551334	IfStatement	if ( ! curDir -> dEntry [ index ] . dGram )		551182	2					
ANR	551335	Condition	! curDir -> dEntry [ index ] . dGram	993:5:26130:26157	551182	0	True				
ANR	551336	UnaryOperationExpression	! curDir -> dEntry [ index ] . dGram		551182	0					
ANR	551337	UnaryOperator	!		551182	0					
ANR	551338	MemberAccess	curDir -> dEntry [ index ] . dGram		551182	1					
ANR	551339	ArrayIndexing	curDir -> dEntry [ index ]		551182	0					
ANR	551340	PtrMemberAccess	curDir -> dEntry		551182	0					
ANR	551341	Identifier	curDir		551182	0					
ANR	551342	Identifier	dEntry		551182	1					
ANR	551343	Identifier	index		551182	1					
ANR	551344	Identifier	dGram		551182	1					
ANR	551345	CompoundStatement		30:35:1000:1000	551182	1					
ANR	551346	ExpressionStatement	"dprintf ( D_ALWAYS , ""addPacket, new char[%d] failed. out of mem\\n"" , len )"	994:3:26165:26235	551182	0	True				
ANR	551347	CallExpression	"dprintf ( D_ALWAYS , ""addPacket, new char[%d] failed. out of mem\\n"" , len )"		551182	0					
ANR	551348	Callee	dprintf		551182	0					
ANR	551349	Identifier	dprintf		551182	0					
ANR	551350	ArgumentList	D_ALWAYS		551182	1					
ANR	551351	Argument	D_ALWAYS		551182	0					
ANR	551352	Identifier	D_ALWAYS		551182	0					
ANR	551353	Argument	"""addPacket, new char[%d] failed. out of mem\\n"""		551182	1					
ANR	551354	PrimaryExpression	"""addPacket, new char[%d] failed. out of mem\\n"""		551182	0					
ANR	551355	Argument	len		551182	2					
ANR	551356	Identifier	len		551182	0					
ANR	551357	ReturnStatement	return false ;	995:3:26240:26252	551182	1	True				
ANR	551358	Identifier	false		551182	0					
ANR	551359	ExpressionStatement	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"	997:2:26260:26306	551182	3	True				
ANR	551360	CallExpression	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"		551182	0					
ANR	551361	Callee	memcpy		551182	0					
ANR	551362	Identifier	memcpy		551182	0					
ANR	551363	ArgumentList	curDir -> dEntry [ index ] . dGram		551182	1					
ANR	551364	Argument	curDir -> dEntry [ index ] . dGram		551182	0					
ANR	551365	MemberAccess	curDir -> dEntry [ index ] . dGram		551182	0					
ANR	551366	ArrayIndexing	curDir -> dEntry [ index ]		551182	0					
ANR	551367	PtrMemberAccess	curDir -> dEntry		551182	0					
ANR	551368	Identifier	curDir		551182	0					
ANR	551369	Identifier	dEntry		551182	1					
ANR	551370	Identifier	index		551182	1					
ANR	551371	Identifier	dGram		551182	1					
ANR	551372	Argument	data		551182	1					
ANR	551373	Identifier	data		551182	0					
ANR	551374	Argument	len		551182	2					
ANR	551375	Identifier	len		551182	0					
ANR	551376	ExpressionStatement	msgLen += len	998:2:26310:26323	551182	4	True				
ANR	551377	AssignmentExpression	msgLen += len		551182	0		+=			
ANR	551378	Identifier	msgLen		551182	0					
ANR	551379	Identifier	len		551182	1					
ANR	551380	IfStatement	if ( last )		551182	5					
ANR	551381	Condition	last	1000:5:26331:26334	551182	0	True				
ANR	551382	Identifier	last		551182	0					
ANR	551383	ExpressionStatement	lastNo = seq	1001:3:26340:26352	551182	1	True				
ANR	551384	AssignmentExpression	lastNo = seq		551182	0		=			
ANR	551385	Identifier	lastNo		551182	0					
ANR	551386	Identifier	seq		551182	1					
ANR	551387	ExpressionStatement	received ++	1002:2:26356:26366	551182	6	True				
ANR	551388	PostIncDecOperationExpression	received ++		551182	0					
ANR	551389	Identifier	received		551182	0					
ANR	551390	IncDec	++		551182	1					
ANR	551391	IfStatement	if ( lastNo + 1 == received )		551182	7					
ANR	551392	Condition	lastNo + 1 == received	1003:5:26373:26394	551182	0	True				
ANR	551393	EqualityExpression	lastNo + 1 == received		551182	0		==			
ANR	551394	AdditiveExpression	lastNo + 1		551182	0		+			
ANR	551395	Identifier	lastNo		551182	0					
ANR	551396	PrimaryExpression	1		551182	1					
ANR	551397	Identifier	received		551182	1					
ANR	551398	CompoundStatement		40:29:1237:1237	551182	1					
ANR	551399	ExpressionStatement	curDir = headDir	1004:3:26436:26452	551182	0	True				
ANR	551400	AssignmentExpression	curDir = headDir		551182	0		=			
ANR	551401	Identifier	curDir		551182	0					
ANR	551402	Identifier	headDir		551182	1					
ANR	551403	ExpressionStatement	curPacket = 0	1005:3:26457:26470	551182	1	True				
ANR	551404	AssignmentExpression	curPacket = 0		551182	0		=			
ANR	551405	Identifier	curPacket		551182	0					
ANR	551406	PrimaryExpression	0		551182	1					
ANR	551407	ExpressionStatement	curData = 0	1006:3:26475:26486	551182	2	True				
ANR	551408	AssignmentExpression	curData = 0		551182	0		=			
ANR	551409	Identifier	curData		551182	0					
ANR	551410	PrimaryExpression	0		551182	1					
ANR	551411	ExpressionStatement	"dprintf ( D_NETWORK , ""long msg ready: %ld bytes\\n"" , msgLen )"	1007:12:26500:26557	551182	3	True				
ANR	551412	CallExpression	"dprintf ( D_NETWORK , ""long msg ready: %ld bytes\\n"" , msgLen )"		551182	0					
ANR	551413	Callee	dprintf		551182	0					
ANR	551414	Identifier	dprintf		551182	0					
ANR	551415	ArgumentList	D_NETWORK		551182	1					
ANR	551416	Argument	D_NETWORK		551182	0					
ANR	551417	Identifier	D_NETWORK		551182	0					
ANR	551418	Argument	"""long msg ready: %ld bytes\\n"""		551182	1					
ANR	551419	PrimaryExpression	"""long msg ready: %ld bytes\\n"""		551182	0					
ANR	551420	Argument	msgLen		551182	2					
ANR	551421	Identifier	msgLen		551182	0					
ANR	551422	ReturnStatement	return true ;	1008:3:26562:26573	551182	4	True				
ANR	551423	Identifier	true		551182	0					
ANR	551424	ElseStatement	else		551182	0					
ANR	551425	CompoundStatement		46:9:1424:1424	551182	0					
ANR	551426	ExpressionStatement	lastTime = time ( NULL )	1010:3:26589:26610	551182	0	True				
ANR	551427	AssignmentExpression	lastTime = time ( NULL )		551182	0		=			
ANR	551428	Identifier	lastTime		551182	0					
ANR	551429	CallExpression	time ( NULL )		551182	1					
ANR	551430	Callee	time		551182	0					
ANR	551431	Identifier	time		551182	0					
ANR	551432	ArgumentList	NULL		551182	1					
ANR	551433	Argument	NULL		551182	0					
ANR	551434	Identifier	NULL		551182	0					
ANR	551435	ReturnStatement	return false ;	1011:3:26615:26627	551182	1	True				
ANR	551436	Identifier	false		551182	0					
ANR	551437	ElseStatement	else		551182	0					
ANR	551438	ReturnStatement	return false ;	1014:2:26713:26725	551182	0	True				
ANR	551439	Identifier	false		551182	0					
ANR	551440	ReturnType	bool		551182	1					
ANR	551441	Identifier	_condorInMsg :: addPacket		551182	2					
ANR	551442	ParameterList	"const bool last , const int seq , const int len , const void * data"		551182	3					
ANR	551443	Parameter	const bool last	960:29:25006:25020	551182	0	True				
ANR	551444	ParameterType	const bool		551182	0					
ANR	551445	Identifier	last		551182	1					
ANR	551446	Parameter	const int seq	961:29:25052:25064	551182	1	True				
ANR	551447	ParameterType	const int		551182	0					
ANR	551448	Identifier	seq		551182	1					
ANR	551449	Parameter	const int len	962:29:25096:25108	551182	2	True				
ANR	551450	ParameterType	const int		551182	0					
ANR	551451	Identifier	len		551182	1					
ANR	551452	Parameter	const void * data	963:29:25141:25156	551182	3	True				
ANR	551453	ParameterType	const void *		551182	0					
ANR	551454	Identifier	data		551182	1					
ANR	551455	CFGEntryNode	ENTRY		551182		True				
ANR	551456	CFGExitNode	EXIT		551182		True				
ANR	551457	Symbol	lastTime		551182						
ANR	551458	Symbol	data		551182						
ANR	551459	Symbol	* index		551182						
ANR	551460	Symbol	* curDir -> dEntry		551182						
ANR	551461	Symbol	destDirNo		551182						
ANR	551462	Symbol	msgLen		551182						
ANR	551463	Symbol	len		551182						
ANR	551464	Symbol	curDir -> dEntry [ index ] . dGram		551182						
ANR	551465	Symbol	curPacket		551182						
ANR	551466	Symbol	curDir -> nextDir		551182						
ANR	551467	Symbol	curData		551182						
ANR	551468	Symbol	seq		551182						
ANR	551469	Symbol	malloc		551182						
ANR	551470	Symbol	NULL		551182						
ANR	551471	Symbol	last		551182						
ANR	551472	Symbol	curDir -> dirNo		551182						
ANR	551473	Symbol	curDir -> dEntry [ index ] . dLen		551182						
ANR	551474	Symbol	false		551182						
ANR	551475	Symbol	D_ALWAYS		551182						
ANR	551476	Symbol	index		551182						
ANR	551477	Symbol	received		551182						
ANR	551478	Symbol	curDir -> dEntry		551182						
ANR	551479	Symbol	headDir		551182						
ANR	551480	Symbol	* curDir		551182						
ANR	551481	Symbol	curDir -> prevDir		551182						
ANR	551482	Symbol	lastNo		551182						
ANR	551483	Symbol	* * curDir		551182						
ANR	551484	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		551182						
ANR	551485	Symbol	curDir		551182						
ANR	551486	Symbol	true		551182						
ANR	551487	Symbol	D_NETWORK		551182						
ANR	551488	Symbol	time		551182						
ANR	551489	Function	_condorInMsg :: verifyMD	1017:0:26730:28148							
ANR	551490	FunctionDef	_condorInMsg :: verifyMD (Condor_MD_MAC * mdChecker)		551489	0					
ANR	551491	CompoundStatement		1018:0:26787:28148	551489	0					
ANR	551492	IdentifierDeclStatement	int currentPacket ;	1019:4:26793:26810	551489	0	True				
ANR	551493	IdentifierDecl	currentPacket		551489	0					
ANR	551494	IdentifierDeclType	int		551489	0					
ANR	551495	Identifier	currentPacket		551489	1					
ANR	551496	IdentifierDeclStatement	_condorDirPage * start = headDir ;	1020:4:26816:26848	551489	1	True				
ANR	551497	IdentifierDecl	* start = headDir		551489	0					
ANR	551498	IdentifierDeclType	_condorDirPage *		551489	0					
ANR	551499	Identifier	start		551489	1					
ANR	551500	AssignmentExpression	* start = headDir		551489	2		=			
ANR	551501	Identifier	headDir		551489	0					
ANR	551502	Identifier	headDir		551489	1					
ANR	551503	IfStatement	if ( ! verified_ )		551489	2					
ANR	551504	Condition	! verified_	1022:8:26859:26868	551489	0	True				
ANR	551505	UnaryOperationExpression	! verified_		551489	0					
ANR	551506	UnaryOperator	!		551489	0					
ANR	551507	Identifier	verified_		551489	1					
ANR	551508	CompoundStatement		5:20:83:83	551489	1					
ANR	551509	IfStatement	if ( curDir != start )		551489	0					
ANR	551510	Condition	curDir != start	1023:12:26885:26899	551489	0	True				
ANR	551511	EqualityExpression	curDir != start		551489	0		!=			
ANR	551512	Identifier	curDir		551489	0					
ANR	551513	Identifier	start		551489	1					
ANR	551514	CompoundStatement		6:29:114:114	551489	1					
ANR	551515	ReturnStatement	return false ;	1024:12:26917:26929	551489	0	True				
ANR	551516	Identifier	false		551489	0					
ANR	551517	IfStatement	if ( mdChecker && md_ )		551489	1					
ANR	551518	Condition	mdChecker && md_	1027:12:26954:26969	551489	0	True				
ANR	551519	AndExpression	mdChecker && md_		551489	0		&&			
ANR	551520	Identifier	mdChecker		551489	0					
ANR	551521	Identifier	md_		551489	1					
ANR	551522	CompoundStatement		10:30:184:184	551489	1					
ANR	551523	WhileStatement	while ( start != NULL )		551489	0					
ANR	551524	Condition	start != NULL	1028:19:26993:27005	551489	0	True				
ANR	551525	EqualityExpression	start != NULL		551489	0		!=			
ANR	551526	Identifier	start		551489	0					
ANR	551527	Identifier	NULL		551489	1					
ANR	551528	CompoundStatement		11:34:220:220	551489	1					
ANR	551529	ExpressionStatement	currentPacket = 0	1029:16:27026:27043	551489	0	True				
ANR	551530	AssignmentExpression	currentPacket = 0		551489	0		=			
ANR	551531	Identifier	currentPacket		551489	0					
ANR	551532	PrimaryExpression	0		551489	1					
ANR	551533	WhileStatement	while ( currentPacket != SAFE_MSG_NO_OF_DIR_ENTRY )		551489	1					
ANR	551534	Condition	currentPacket != SAFE_MSG_NO_OF_DIR_ENTRY	1030:22:27067:27107	551489	0	True				
ANR	551535	EqualityExpression	currentPacket != SAFE_MSG_NO_OF_DIR_ENTRY		551489	0		!=			
ANR	551536	Identifier	currentPacket		551489	0					
ANR	551537	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		551489	1					
ANR	551538	CompoundStatement		13:65:322:322	551489	1					
ANR	551539	ExpressionStatement	"mdChecker -> addMD ( ( unsigned char * ) start -> dEntry [ currentPacket ] . dGram , start -> dEntry [ currentPacket ] . dLen )"	1031:20:27132:27274	551489	0	True				
ANR	551540	CallExpression	"mdChecker -> addMD ( ( unsigned char * ) start -> dEntry [ currentPacket ] . dGram , start -> dEntry [ currentPacket ] . dLen )"		551489	0					
ANR	551541	Callee	mdChecker -> addMD		551489	0					
ANR	551542	PtrMemberAccess	mdChecker -> addMD		551489	0					
ANR	551543	Identifier	mdChecker		551489	0					
ANR	551544	Identifier	addMD		551489	1					
ANR	551545	ArgumentList	( unsigned char * ) start -> dEntry [ currentPacket ] . dGram		551489	1					
ANR	551546	Argument	( unsigned char * ) start -> dEntry [ currentPacket ] . dGram		551489	0					
ANR	551547	CastExpression	( unsigned char * ) start -> dEntry [ currentPacket ] . dGram		551489	0					
ANR	551548	CastTarget	unsigned char *		551489	0					
ANR	551549	MemberAccess	start -> dEntry [ currentPacket ] . dGram		551489	1					
ANR	551550	ArrayIndexing	start -> dEntry [ currentPacket ]		551489	0					
ANR	551551	PtrMemberAccess	start -> dEntry		551489	0					
ANR	551552	Identifier	start		551489	0					
ANR	551553	Identifier	dEntry		551489	1					
ANR	551554	Identifier	currentPacket		551489	1					
ANR	551555	Identifier	dGram		551489	1					
ANR	551556	Argument	start -> dEntry [ currentPacket ] . dLen		551489	1					
ANR	551557	MemberAccess	start -> dEntry [ currentPacket ] . dLen		551489	0					
ANR	551558	ArrayIndexing	start -> dEntry [ currentPacket ]		551489	0					
ANR	551559	PtrMemberAccess	start -> dEntry		551489	0					
ANR	551560	Identifier	start		551489	0					
ANR	551561	Identifier	dEntry		551489	1					
ANR	551562	Identifier	currentPacket		551489	1					
ANR	551563	Identifier	dLen		551489	1					
ANR	551564	IfStatement	if ( ++ currentPacket == SAFE_MSG_NO_OF_DIR_ENTRY )		551489	1					
ANR	551565	Condition	++ currentPacket == SAFE_MSG_NO_OF_DIR_ENTRY	1033:23:27299:27341	551489	0	True				
ANR	551566	EqualityExpression	++ currentPacket == SAFE_MSG_NO_OF_DIR_ENTRY		551489	0		==			
ANR	551567	UnaryExpression	++ currentPacket		551489	0					
ANR	551568	IncDec	++		551489	0					
ANR	551569	Identifier	currentPacket		551489	1					
ANR	551570	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		551489	1					
ANR	551571	CompoundStatement		16:68:556:556	551489	1					
ANR	551572	ExpressionStatement	start = start -> nextDir	1035:24:27429:27451	551489	0	True				
ANR	551573	AssignmentExpression	start = start -> nextDir		551489	0		=			
ANR	551574	Identifier	start		551489	0					
ANR	551575	PtrMemberAccess	start -> nextDir		551489	1					
ANR	551576	Identifier	start		551489	0					
ANR	551577	Identifier	nextDir		551489	1					
ANR	551578	IfStatement	if ( mdChecker -> verifyMD ( md_ ) )		551489	1					
ANR	551579	Condition	mdChecker -> verifyMD ( md_ )	1041:16:27575:27598	551489	0	True				
ANR	551580	CallExpression	mdChecker -> verifyMD ( md_ )		551489	0					
ANR	551581	Callee	mdChecker -> verifyMD		551489	0					
ANR	551582	PtrMemberAccess	mdChecker -> verifyMD		551489	0					
ANR	551583	Identifier	mdChecker		551489	0					
ANR	551584	Identifier	verifyMD		551489	1					
ANR	551585	ArgumentList	md_		551489	1					
ANR	551586	Argument	md_		551489	0					
ANR	551587	Identifier	md_		551489	0					
ANR	551588	CompoundStatement		24:42:813:813	551489	1					
ANR	551589	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"	1042:16:27619:27656	551489	0	True				
ANR	551590	CallExpression	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"		551489	0					
ANR	551591	Callee	dprintf		551489	0					
ANR	551592	Identifier	dprintf		551489	0					
ANR	551593	ArgumentList	D_SECURITY		551489	1					
ANR	551594	Argument	D_SECURITY		551489	0					
ANR	551595	Identifier	D_SECURITY		551489	0					
ANR	551596	Argument	"""MD verified!\\n"""		551489	1					
ANR	551597	PrimaryExpression	"""MD verified!\\n"""		551489	0					
ANR	551598	ExpressionStatement	verified_ = true	1043:16:27674:27690	551489	1	True				
ANR	551599	AssignmentExpression	verified_ = true		551489	0		=			
ANR	551600	Identifier	verified_		551489	0					
ANR	551601	Identifier	true		551489	1					
ANR	551602	ElseStatement	else		551489	0					
ANR	551603	CompoundStatement		28:17:935:935	551489	0					
ANR	551604	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verification failed for long messag\\n"" )"	1046:16:27741:27804	551489	0	True				
ANR	551605	CallExpression	"dprintf ( D_SECURITY , ""MD verification failed for long messag\\n"" )"		551489	0					
ANR	551606	Callee	dprintf		551489	0					
ANR	551607	Identifier	dprintf		551489	0					
ANR	551608	ArgumentList	D_SECURITY		551489	1					
ANR	551609	Argument	D_SECURITY		551489	0					
ANR	551610	Identifier	D_SECURITY		551489	0					
ANR	551611	Argument	"""MD verification failed for long messag\\n"""		551489	1					
ANR	551612	PrimaryExpression	"""MD verification failed for long messag\\n"""		551489	0					
ANR	551613	ExpressionStatement	verified_ = false	1047:16:27822:27839	551489	1	True				
ANR	551614	AssignmentExpression	verified_ = false		551489	0		=			
ANR	551615	Identifier	verified_		551489	0					
ANR	551616	Identifier	false		551489	1					
ANR	551617	ElseStatement	else		551489	0					
ANR	551618	CompoundStatement		33:13:1090:1090	551489	0					
ANR	551619	IfStatement	if ( md_ )		551489	0					
ANR	551620	Condition	md_	1051:16:27896:27898	551489	0	True				
ANR	551621	Identifier	md_		551489	0					
ANR	551622	CompoundStatement		34:21:1113:1113	551489	1					
ANR	551623	ExpressionStatement	"dprintf ( D_SECURITY , ""WARNING, incorrect MAC object is being used\\n"" )"	1052:16:27919:27987	551489	0	True				
ANR	551624	CallExpression	"dprintf ( D_SECURITY , ""WARNING, incorrect MAC object is being used\\n"" )"		551489	0					
ANR	551625	Callee	dprintf		551489	0					
ANR	551626	Identifier	dprintf		551489	0					
ANR	551627	ArgumentList	D_SECURITY		551489	1					
ANR	551628	Argument	D_SECURITY		551489	0					
ANR	551629	Identifier	D_SECURITY		551489	0					
ANR	551630	Argument	"""WARNING, incorrect MAC object is being used\\n"""		551489	1					
ANR	551631	PrimaryExpression	"""WARNING, incorrect MAC object is being used\\n"""		551489	0					
ANR	551632	ElseStatement	else		551489	0					
ANR	551633	CompoundStatement		37:17:1232:1232	551489	0					
ANR	551634	ExpressionStatement	"dprintf ( D_SECURITY , ""WARNING, no MAC data is found!\\n"" )"	1055:16:28038:28093	551489	0	True				
ANR	551635	CallExpression	"dprintf ( D_SECURITY , ""WARNING, no MAC data is found!\\n"" )"		551489	0					
ANR	551636	Callee	dprintf		551489	0					
ANR	551637	Identifier	dprintf		551489	0					
ANR	551638	ArgumentList	D_SECURITY		551489	1					
ANR	551639	Argument	D_SECURITY		551489	0					
ANR	551640	Identifier	D_SECURITY		551489	0					
ANR	551641	Argument	"""WARNING, no MAC data is found!\\n"""		551489	1					
ANR	551642	PrimaryExpression	"""WARNING, no MAC data is found!\\n"""		551489	0					
ANR	551643	ReturnStatement	return verified_ ;	1060:4:28130:28146	551489	3	True				
ANR	551644	Identifier	verified_		551489	0					
ANR	551645	ReturnType	bool		551489	1					
ANR	551646	Identifier	_condorInMsg :: verifyMD		551489	2					
ANR	551647	ParameterList	Condor_MD_MAC * mdChecker		551489	3					
ANR	551648	Parameter	Condor_MD_MAC * mdChecker	1017:30:26760:26784	551489	0	True				
ANR	551649	ParameterType	Condor_MD_MAC *		551489	0					
ANR	551650	Identifier	mdChecker		551489	1					
ANR	551651	CFGEntryNode	ENTRY		551489		True				
ANR	551652	CFGExitNode	EXIT		551489		True				
ANR	551653	Symbol	NULL		551489						
ANR	551654	Symbol	start -> dEntry		551489						
ANR	551655	Symbol	currentPacket		551489						
ANR	551656	Symbol	D_SECURITY		551489						
ANR	551657	Symbol	* start		551489						
ANR	551658	Symbol	start		551489						
ANR	551659	Symbol	false		551489						
ANR	551660	Symbol	md_		551489						
ANR	551661	Symbol	start -> nextDir		551489						
ANR	551662	Symbol	headDir		551489						
ANR	551663	Symbol	* mdChecker		551489						
ANR	551664	Symbol	start -> dEntry [ currentPacket ] . dGram		551489						
ANR	551665	Symbol	mdChecker		551489						
ANR	551666	Symbol	mdChecker -> verifyMD		551489						
ANR	551667	Symbol	verified_		551489						
ANR	551668	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		551489						
ANR	551669	Symbol	* currentPacket		551489						
ANR	551670	Symbol	curDir		551489						
ANR	551671	Symbol	true		551489						
ANR	551672	Symbol	start -> dEntry [ currentPacket ] . dLen		551489						
ANR	551673	Symbol	* * start		551489						
ANR	551674	Symbol	* start -> dEntry		551489						
ANR	551675	Function	_condorInMsg :: incrementCurData	1063:0:28151:28731							
ANR	551676	FunctionDef	_condorInMsg :: incrementCurData (int n)		551675	0					
ANR	551677	CompoundStatement		1063:45:28196:28731	551675	0					
ANR	551678	ExpressionStatement	curData += n	1064:1:28199:28211	551675	0	True				
ANR	551679	AssignmentExpression	curData += n		551675	0		+=			
ANR	551680	Identifier	curData		551675	0					
ANR	551681	Identifier	n		551675	1					
ANR	551682	ExpressionStatement	passed += n	1065:1:28214:28225	551675	1	True				
ANR	551683	AssignmentExpression	passed += n		551675	0		+=			
ANR	551684	Identifier	passed		551675	0					
ANR	551685	Identifier	n		551675	1					
ANR	551686	IfStatement	if ( curData == curDir -> dEntry [ curPacket ] . dLen )		551675	2					
ANR	551687	Condition	curData == curDir -> dEntry [ curPacket ] . dLen	1067:4:28232:28272	551675	0	True				
ANR	551688	EqualityExpression	curData == curDir -> dEntry [ curPacket ] . dLen		551675	0		==			
ANR	551689	Identifier	curData		551675	0					
ANR	551690	MemberAccess	curDir -> dEntry [ curPacket ] . dLen		551675	1					
ANR	551691	ArrayIndexing	curDir -> dEntry [ curPacket ]		551675	0					
ANR	551692	PtrMemberAccess	curDir -> dEntry		551675	0					
ANR	551693	Identifier	curDir		551675	0					
ANR	551694	Identifier	dEntry		551675	1					
ANR	551695	Identifier	curPacket		551675	1					
ANR	551696	Identifier	dLen		551675	1					
ANR	551697	CompoundStatement		5:47:78:78	551675	1					
ANR	551698	ExpressionStatement	free ( curDir -> dEntry [ curPacket ] . dGram )	1070:2:28375:28412	551675	0	True				
ANR	551699	CallExpression	free ( curDir -> dEntry [ curPacket ] . dGram )		551675	0					
ANR	551700	Callee	free		551675	0					
ANR	551701	Identifier	free		551675	0					
ANR	551702	ArgumentList	curDir -> dEntry [ curPacket ] . dGram		551675	1					
ANR	551703	Argument	curDir -> dEntry [ curPacket ] . dGram		551675	0					
ANR	551704	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		551675	0					
ANR	551705	ArrayIndexing	curDir -> dEntry [ curPacket ]		551675	0					
ANR	551706	PtrMemberAccess	curDir -> dEntry		551675	0					
ANR	551707	Identifier	curDir		551675	0					
ANR	551708	Identifier	dEntry		551675	1					
ANR	551709	Identifier	curPacket		551675	1					
ANR	551710	Identifier	dGram		551675	1					
ANR	551711	ExpressionStatement	curDir -> dEntry [ curPacket ] . dGram = NULL	1071:2:28416:28454	551675	1	True				
ANR	551712	AssignmentExpression	curDir -> dEntry [ curPacket ] . dGram = NULL		551675	0		=			
ANR	551713	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		551675	0					
ANR	551714	ArrayIndexing	curDir -> dEntry [ curPacket ]		551675	0					
ANR	551715	PtrMemberAccess	curDir -> dEntry		551675	0					
ANR	551716	Identifier	curDir		551675	0					
ANR	551717	Identifier	dEntry		551675	1					
ANR	551718	Identifier	curPacket		551675	1					
ANR	551719	Identifier	dGram		551675	1					
ANR	551720	Identifier	NULL		551675	1					
ANR	551721	IfStatement	if ( ++ curPacket == SAFE_MSG_NO_OF_DIR_ENTRY )		551675	2					
ANR	551722	Condition	++ curPacket == SAFE_MSG_NO_OF_DIR_ENTRY	1073:5:28462:28500	551675	0	True				
ANR	551723	EqualityExpression	++ curPacket == SAFE_MSG_NO_OF_DIR_ENTRY		551675	0		==			
ANR	551724	UnaryExpression	++ curPacket		551675	0					
ANR	551725	IncDec	++		551675	0					
ANR	551726	Identifier	curPacket		551675	1					
ANR	551727	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		551675	1					
ANR	551728	CompoundStatement		13:3:349:382	551675	1					
ANR	551729	IdentifierDeclStatement	_condorDirPage * tempDir = headDir ;	1075:3:28546:28579	551675	0	True				
ANR	551730	IdentifierDecl	* tempDir = headDir		551675	0					
ANR	551731	IdentifierDeclType	_condorDirPage *		551675	0					
ANR	551732	Identifier	tempDir		551675	1					
ANR	551733	AssignmentExpression	* tempDir = headDir		551675	2		=			
ANR	551734	Identifier	headDir		551675	0					
ANR	551735	Identifier	headDir		551675	1					
ANR	551736	ExpressionStatement	headDir = curDir = headDir -> nextDir	1076:3:28584:28619	551675	1	True				
ANR	551737	AssignmentExpression	headDir = curDir = headDir -> nextDir		551675	0		=			
ANR	551738	Identifier	headDir		551675	0					
ANR	551739	AssignmentExpression	curDir = headDir -> nextDir		551675	1		=			
ANR	551740	Identifier	curDir		551675	0					
ANR	551741	PtrMemberAccess	headDir -> nextDir		551675	1					
ANR	551742	Identifier	headDir		551675	0					
ANR	551743	Identifier	nextDir		551675	1					
ANR	551744	IfStatement	if ( headDir )		551675	2					
ANR	551745	Condition	headDir	1077:6:28627:28633	551675	0	True				
ANR	551746	Identifier	headDir		551675	0					
ANR	551747	CompoundStatement		15:15:439:439	551675	1					
ANR	551748	ExpressionStatement	headDir -> prevDir = NULL	1078:4:28642:28665	551675	0	True				
ANR	551749	AssignmentExpression	headDir -> prevDir = NULL		551675	0		=			
ANR	551750	PtrMemberAccess	headDir -> prevDir		551675	0					
ANR	551751	Identifier	headDir		551675	0					
ANR	551752	Identifier	prevDir		551675	1					
ANR	551753	Identifier	NULL		551675	1					
ANR	551754	Statement	delete	1080:3:28675:28680	551675	3	True				
ANR	551755	ExpressionStatement	tempDir	1080:10:28682:28689	551675	4	True				
ANR	551756	Identifier	tempDir		551675	0					
ANR	551757	ExpressionStatement	curPacket = 0	1081:3:28694:28707	551675	5	True				
ANR	551758	AssignmentExpression	curPacket = 0		551675	0		=			
ANR	551759	Identifier	curPacket		551675	0					
ANR	551760	PrimaryExpression	0		551675	1					
ANR	551761	ExpressionStatement	curData = 0	1083:2:28715:28726	551675	3	True				
ANR	551762	AssignmentExpression	curData = 0		551675	0		=			
ANR	551763	Identifier	curData		551675	0					
ANR	551764	PrimaryExpression	0		551675	1					
ANR	551765	ReturnType	void		551675	1					
ANR	551766	Identifier	_condorInMsg :: incrementCurData		551675	2					
ANR	551767	ParameterList	int n		551675	3					
ANR	551768	Parameter	int n	1063:37:28188:28192	551675	0	True				
ANR	551769	ParameterType	int		551675	0					
ANR	551770	Identifier	n		551675	1					
ANR	551771	CFGEntryNode	ENTRY		551675		True				
ANR	551772	CFGExitNode	EXIT		551675		True				
ANR	551773	Symbol	NULL		551675						
ANR	551774	Symbol	curDir -> dEntry		551675						
ANR	551775	Symbol	* curDir -> dEntry		551675						
ANR	551776	Symbol	headDir		551675						
ANR	551777	Symbol	headDir -> nextDir		551675						
ANR	551778	Symbol	curDir -> dEntry [ curPacket ] . dLen		551675						
ANR	551779	Symbol	* curDir		551675						
ANR	551780	Symbol	n		551675						
ANR	551781	Symbol	* curPacket		551675						
ANR	551782	Symbol	* * curDir		551675						
ANR	551783	Symbol	* headDir		551675						
ANR	551784	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		551675						
ANR	551785	Symbol	curPacket		551675						
ANR	551786	Symbol	curDir		551675						
ANR	551787	Symbol	tempDir		551675						
ANR	551788	Symbol	passed		551675						
ANR	551789	Symbol	headDir -> prevDir		551675						
ANR	551790	Symbol	curData		551675						
ANR	551791	Symbol	curDir -> dEntry [ curPacket ] . dGram		551675						
ANR	551792	Function	_condorInMsg :: getn	1095:0:29070:29757							
ANR	551793	FunctionDef	"_condorInMsg :: getn (char * dta , const int size)"		551792	0					
ANR	551794	CompoundStatement		1096:0:29120:29757	551792	0					
ANR	551795	IdentifierDeclStatement	"int len , total = 0 ;"	1097:1:29123:29141	551792	0	True				
ANR	551796	IdentifierDecl	len		551792	0					
ANR	551797	IdentifierDeclType	int		551792	0					
ANR	551798	Identifier	len		551792	1					
ANR	551799	IdentifierDecl	total = 0		551792	1					
ANR	551800	IdentifierDeclType	int		551792	0					
ANR	551801	Identifier	total		551792	1					
ANR	551802	AssignmentExpression	total = 0		551792	2		=			
ANR	551803	Identifier	total		551792	0					
ANR	551804	PrimaryExpression	0		551792	1					
ANR	551805	IfStatement	if ( ! dta || passed + size > msgLen )		551792	1					
ANR	551806	Condition	! dta || passed + size > msgLen	1099:4:29148:29177	551792	0	True				
ANR	551807	OrExpression	! dta || passed + size > msgLen		551792	0		||			
ANR	551808	UnaryOperationExpression	! dta		551792	0					
ANR	551809	UnaryOperator	!		551792	0					
ANR	551810	Identifier	dta		551792	1					
ANR	551811	RelationalExpression	passed + size > msgLen		551792	1		>			
ANR	551812	AdditiveExpression	passed + size		551792	0		+			
ANR	551813	Identifier	passed		551792	0					
ANR	551814	Identifier	size		551792	1					
ANR	551815	Identifier	msgLen		551792	1					
ANR	551816	CompoundStatement		4:36:59:59	551792	1					
ANR	551817	ExpressionStatement	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"	1100:8:29190:29263	551792	0	True				
ANR	551818	CallExpression	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"		551792	0					
ANR	551819	Callee	dprintf		551792	0					
ANR	551820	Identifier	dprintf		551792	0					
ANR	551821	ArgumentList	D_NETWORK		551792	1					
ANR	551822	Argument	D_NETWORK		551792	0					
ANR	551823	Identifier	D_NETWORK		551792	0					
ANR	551824	Argument	"""dta is NULL or more data than queued is requested\\n"""		551792	1					
ANR	551825	PrimaryExpression	"""dta is NULL or more data than queued is requested\\n"""		551792	0					
ANR	551826	ReturnStatement	return - 1 ;	1101:2:29267:29276	551792	1	True				
ANR	551827	UnaryOperationExpression	- 1		551792	0					
ANR	551828	UnaryOperator	-		551792	0					
ANR	551829	PrimaryExpression	1		551792	1					
ANR	551830	WhileStatement	while ( total != size )		551792	2					
ANR	551831	Condition	total != size	1104:7:29292:29304	551792	0	True				
ANR	551832	EqualityExpression	total != size		551792	0		!=			
ANR	551833	Identifier	total		551792	0					
ANR	551834	Identifier	size		551792	1					
ANR	551835	CompoundStatement		9:22:186:186	551792	1					
ANR	551836	ExpressionStatement	len = size - total	1105:2:29311:29329	551792	0	True				
ANR	551837	AssignmentExpression	len = size - total		551792	0		=			
ANR	551838	Identifier	len		551792	0					
ANR	551839	AdditiveExpression	size - total		551792	1		-			
ANR	551840	Identifier	size		551792	0					
ANR	551841	Identifier	total		551792	1					
ANR	551842	IfStatement	if ( len > curDir -> dEntry [ curPacket ] . dLen - curData )		551792	1					
ANR	551843	Condition	len > curDir -> dEntry [ curPacket ] . dLen - curData	1106:5:29336:29381	551792	0	True				
ANR	551844	RelationalExpression	len > curDir -> dEntry [ curPacket ] . dLen - curData		551792	0		>			
ANR	551845	Identifier	len		551792	0					
ANR	551846	AdditiveExpression	curDir -> dEntry [ curPacket ] . dLen - curData		551792	1		-			
ANR	551847	MemberAccess	curDir -> dEntry [ curPacket ] . dLen		551792	0					
ANR	551848	ArrayIndexing	curDir -> dEntry [ curPacket ]		551792	0					
ANR	551849	PtrMemberAccess	curDir -> dEntry		551792	0					
ANR	551850	Identifier	curDir		551792	0					
ANR	551851	Identifier	dEntry		551792	1					
ANR	551852	Identifier	curPacket		551792	1					
ANR	551853	Identifier	dLen		551792	1					
ANR	551854	Identifier	curData		551792	1					
ANR	551855	ExpressionStatement	len = curDir -> dEntry [ curPacket ] . dLen - curData	1107:3:29387:29433	551792	1	True				
ANR	551856	AssignmentExpression	len = curDir -> dEntry [ curPacket ] . dLen - curData		551792	0		=			
ANR	551857	Identifier	len		551792	0					
ANR	551858	AdditiveExpression	curDir -> dEntry [ curPacket ] . dLen - curData		551792	1		-			
ANR	551859	MemberAccess	curDir -> dEntry [ curPacket ] . dLen		551792	0					
ANR	551860	ArrayIndexing	curDir -> dEntry [ curPacket ]		551792	0					
ANR	551861	PtrMemberAccess	curDir -> dEntry		551792	0					
ANR	551862	Identifier	curDir		551792	0					
ANR	551863	Identifier	dEntry		551792	1					
ANR	551864	Identifier	curPacket		551792	1					
ANR	551865	Identifier	dLen		551792	1					
ANR	551866	Identifier	curData		551792	1					
ANR	551867	ExpressionStatement	"memcpy ( & dta [ total ] , & ( curDir -> dEntry [ curPacket ] . dGram [ curData ] ) , len )"	1108:2:29437:29515	551792	2	True				
ANR	551868	CallExpression	"memcpy ( & dta [ total ] , & ( curDir -> dEntry [ curPacket ] . dGram [ curData ] ) , len )"		551792	0					
ANR	551869	Callee	memcpy		551792	0					
ANR	551870	Identifier	memcpy		551792	0					
ANR	551871	ArgumentList	& dta [ total ]		551792	1					
ANR	551872	Argument	& dta [ total ]		551792	0					
ANR	551873	UnaryOperationExpression	& dta [ total ]		551792	0					
ANR	551874	UnaryOperator	&		551792	0					
ANR	551875	ArrayIndexing	dta [ total ]		551792	1					
ANR	551876	Identifier	dta		551792	0					
ANR	551877	Identifier	total		551792	1					
ANR	551878	Argument	& ( curDir -> dEntry [ curPacket ] . dGram [ curData ] )		551792	1					
ANR	551879	UnaryOperationExpression	& ( curDir -> dEntry [ curPacket ] . dGram [ curData ] )		551792	0					
ANR	551880	UnaryOperator	&		551792	0					
ANR	551881	ArrayIndexing	curDir -> dEntry [ curPacket ] . dGram [ curData ]		551792	1					
ANR	551882	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		551792	0					
ANR	551883	ArrayIndexing	curDir -> dEntry [ curPacket ]		551792	0					
ANR	551884	PtrMemberAccess	curDir -> dEntry		551792	0					
ANR	551885	Identifier	curDir		551792	0					
ANR	551886	Identifier	dEntry		551792	1					
ANR	551887	Identifier	curPacket		551792	1					
ANR	551888	Identifier	dGram		551792	1					
ANR	551889	Identifier	curData		551792	1					
ANR	551890	Argument	len		551792	2					
ANR	551891	Identifier	len		551792	0					
ANR	551892	ExpressionStatement	total += len	1110:2:29519:29531	551792	3	True				
ANR	551893	AssignmentExpression	total += len		551792	0		+=			
ANR	551894	Identifier	total		551792	0					
ANR	551895	Identifier	len		551792	1					
ANR	551896	ExpressionStatement	incrementCurData ( len )	1111:2:29535:29556	551792	4	True				
ANR	551897	CallExpression	incrementCurData ( len )		551792	0					
ANR	551898	Callee	incrementCurData		551792	0					
ANR	551899	Identifier	incrementCurData		551792	0					
ANR	551900	ArgumentList	len		551792	1					
ANR	551901	Argument	len		551792	0					
ANR	551902	Identifier	len		551792	0					
ANR	551903	IfStatement	if ( D_FULLDEBUG & DebugFlags )		551792	3					
ANR	551904	Condition	D_FULLDEBUG & DebugFlags	1114:8:29591:29614	551792	0	True				
ANR	551905	BitAndExpression	D_FULLDEBUG & DebugFlags		551792	0		&			
ANR	551906	Identifier	D_FULLDEBUG		551792	0					
ANR	551907	Identifier	DebugFlags		551792	1					
ANR	551908	CompoundStatement		19:35:497:497	551792	1					
ANR	551909	ExpressionStatement	"dprintf ( D_NETWORK , ""%d bytes read from UDP[size=%ld, passed=%d]\\n"" , total , msgLen , passed )"	1115:8:29628:29734	551792	0	True				
ANR	551910	CallExpression	"dprintf ( D_NETWORK , ""%d bytes read from UDP[size=%ld, passed=%d]\\n"" , total , msgLen , passed )"		551792	0					
ANR	551911	Callee	dprintf		551792	0					
ANR	551912	Identifier	dprintf		551792	0					
ANR	551913	ArgumentList	D_NETWORK		551792	1					
ANR	551914	Argument	D_NETWORK		551792	0					
ANR	551915	Identifier	D_NETWORK		551792	0					
ANR	551916	Argument	"""%d bytes read from UDP[size=%ld, passed=%d]\\n"""		551792	1					
ANR	551917	PrimaryExpression	"""%d bytes read from UDP[size=%ld, passed=%d]\\n"""		551792	0					
ANR	551918	Argument	total		551792	2					
ANR	551919	Identifier	total		551792	0					
ANR	551920	Argument	msgLen		551792	3					
ANR	551921	Identifier	msgLen		551792	0					
ANR	551922	Argument	passed		551792	4					
ANR	551923	Identifier	passed		551792	0					
ANR	551924	ReturnStatement	return total ;	1118:1:29743:29755	551792	4	True				
ANR	551925	Identifier	total		551792	0					
ANR	551926	ReturnType	int		551792	1					
ANR	551927	Identifier	_condorInMsg :: getn		551792	2					
ANR	551928	ParameterList	"char * dta , const int size"		551792	3					
ANR	551929	Parameter	char * dta	1095:23:29093:29101	551792	0	True				
ANR	551930	ParameterType	char *		551792	0					
ANR	551931	Identifier	dta		551792	1					
ANR	551932	Parameter	const int size	1095:34:29104:29117	551792	1	True				
ANR	551933	ParameterType	const int		551792	0					
ANR	551934	Identifier	size		551792	1					
ANR	551935	CFGEntryNode	ENTRY		551792		True				
ANR	551936	CFGExitNode	EXIT		551792		True				
ANR	551937	Symbol	curDir -> dEntry		551792						
ANR	551938	Symbol	DebugFlags		551792						
ANR	551939	Symbol	D_FULLDEBUG		551792						
ANR	551940	Symbol	* curDir -> dEntry		551792						
ANR	551941	Symbol	curDir -> dEntry [ curPacket ] . dLen		551792						
ANR	551942	Symbol	* curDir		551792						
ANR	551943	Symbol	dta		551792						
ANR	551944	Symbol	msgLen		551792						
ANR	551945	Symbol	* curPacket		551792						
ANR	551946	Symbol	* * curDir		551792						
ANR	551947	Symbol	total		551792						
ANR	551948	Symbol	size		551792						
ANR	551949	Symbol	len		551792						
ANR	551950	Symbol	curPacket		551792						
ANR	551951	Symbol	curDir		551792						
ANR	551952	Symbol	D_NETWORK		551792						
ANR	551953	Symbol	passed		551792						
ANR	551954	Symbol	curData		551792						
ANR	551955	Symbol	curDir -> dEntry [ curPacket ] . dGram		551792						
ANR	551956	Function	_condorInMsg :: getPtr	1132:0:30299:32205							
ANR	551957	FunctionDef	"_condorInMsg :: getPtr (void * & buf , char delim)"		551956	0					
ANR	551958	CompoundStatement		1133:0:30348:32205	551956	0					
ANR	551959	IdentifierDeclStatement	_condorDirPage * tempDir ;	1134:1:30351:30374	551956	0	True				
ANR	551960	IdentifierDecl	* tempDir		551956	0					
ANR	551961	IdentifierDeclType	_condorDirPage *		551956	0					
ANR	551962	Identifier	tempDir		551956	1					
ANR	551963	IdentifierDeclStatement	"int tempPkt , tempData ;"	1135:1:30377:30398	551956	1	True				
ANR	551964	IdentifierDecl	tempPkt		551956	0					
ANR	551965	IdentifierDeclType	int		551956	0					
ANR	551966	Identifier	tempPkt		551956	1					
ANR	551967	IdentifierDecl	tempData		551956	1					
ANR	551968	IdentifierDeclType	int		551956	0					
ANR	551969	Identifier	tempData		551956	1					
ANR	551970	IdentifierDeclStatement	size_t n = 1 ;	1136:1:30401:30413	551956	2	True				
ANR	551971	IdentifierDecl	n = 1		551956	0					
ANR	551972	IdentifierDeclType	size_t		551956	0					
ANR	551973	Identifier	n		551956	1					
ANR	551974	AssignmentExpression	n = 1		551956	2		=			
ANR	551975	Identifier	n		551956	0					
ANR	551976	PrimaryExpression	1		551956	1					
ANR	551977	IdentifierDeclStatement	int size ;	1137:1:30416:30424	551956	3	True				
ANR	551978	IdentifierDecl	size		551956	0					
ANR	551979	IdentifierDeclType	int		551956	0					
ANR	551980	Identifier	size		551956	1					
ANR	551981	ExpressionStatement	tempDir = curDir	1139:1:30428:30444	551956	4	True				
ANR	551982	AssignmentExpression	tempDir = curDir		551956	0		=			
ANR	551983	Identifier	tempDir		551956	0					
ANR	551984	Identifier	curDir		551956	1					
ANR	551985	ExpressionStatement	tempPkt = curPacket	1140:1:30447:30466	551956	5	True				
ANR	551986	AssignmentExpression	tempPkt = curPacket		551956	0		=			
ANR	551987	Identifier	tempPkt		551956	0					
ANR	551988	Identifier	curPacket		551956	1					
ANR	551989	ExpressionStatement	tempData = curData	1141:1:30469:30487	551956	6	True				
ANR	551990	AssignmentExpression	tempData = curData		551956	0		=			
ANR	551991	Identifier	tempData		551956	0					
ANR	551992	Identifier	curData		551956	1					
ANR	551993	IdentifierDeclStatement	bool copy_needed = false ;	1143:1:30491:30515	551956	7	True				
ANR	551994	IdentifierDecl	copy_needed = false		551956	0					
ANR	551995	IdentifierDeclType	bool		551956	0					
ANR	551996	Identifier	copy_needed		551956	1					
ANR	551997	AssignmentExpression	copy_needed = false		551956	2		=			
ANR	551998	Identifier	false		551956	0					
ANR	551999	Identifier	false		551956	1					
ANR	552000	WhileStatement	while ( 1 )		551956	8					
ANR	552001	Condition	1	1144:7:30524:30524	551956	0	True				
ANR	552002	PrimaryExpression	1		551956	0					
ANR	552003	CompoundStatement		15:2:306:363	551956	1					
ANR	552004	IdentifierDeclStatement	char * msgbuf = & tempDir -> dEntry [ tempPkt ] . dGram [ tempData ] ;	1145:2:30531:30587	551956	0	True				
ANR	552005	IdentifierDecl	* msgbuf = & tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		551956	0					
ANR	552006	IdentifierDeclType	char *		551956	0					
ANR	552007	Identifier	msgbuf		551956	1					
ANR	552008	AssignmentExpression	* msgbuf = & tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		551956	2		=			
ANR	552009	Identifier	msgbuf		551956	0					
ANR	552010	UnaryOperationExpression	& tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		551956	1					
ANR	552011	UnaryOperator	&		551956	0					
ANR	552012	ArrayIndexing	tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		551956	1					
ANR	552013	MemberAccess	tempDir -> dEntry [ tempPkt ] . dGram		551956	0					
ANR	552014	ArrayIndexing	tempDir -> dEntry [ tempPkt ]		551956	0					
ANR	552015	PtrMemberAccess	tempDir -> dEntry		551956	0					
ANR	552016	Identifier	tempDir		551956	0					
ANR	552017	Identifier	dEntry		551956	1					
ANR	552018	Identifier	tempPkt		551956	1					
ANR	552019	Identifier	dGram		551956	1					
ANR	552020	Identifier	tempData		551956	1					
ANR	552021	IdentifierDeclStatement	size_t msgbufsize = tempDir -> dEntry [ tempPkt ] . dLen - tempData ;	1146:2:30591:30651	551956	1	True				
ANR	552022	IdentifierDecl	msgbufsize = tempDir -> dEntry [ tempPkt ] . dLen - tempData		551956	0					
ANR	552023	IdentifierDeclType	size_t		551956	0					
ANR	552024	Identifier	msgbufsize		551956	1					
ANR	552025	AssignmentExpression	msgbufsize = tempDir -> dEntry [ tempPkt ] . dLen - tempData		551956	2		=			
ANR	552026	Identifier	msgbufsize		551956	0					
ANR	552027	AdditiveExpression	tempDir -> dEntry [ tempPkt ] . dLen - tempData		551956	1		-			
ANR	552028	MemberAccess	tempDir -> dEntry [ tempPkt ] . dLen		551956	0					
ANR	552029	ArrayIndexing	tempDir -> dEntry [ tempPkt ]		551956	0					
ANR	552030	PtrMemberAccess	tempDir -> dEntry		551956	0					
ANR	552031	Identifier	tempDir		551956	0					
ANR	552032	Identifier	dEntry		551956	1					
ANR	552033	Identifier	tempPkt		551956	1					
ANR	552034	Identifier	dLen		551956	1					
ANR	552035	Identifier	tempData		551956	1					
ANR	552036	IdentifierDeclStatement	"char * delim_ptr = ( char * ) memchr ( msgbuf , delim , msgbufsize ) ;"	1147:2:30655:30712	551956	2	True				
ANR	552037	IdentifierDecl	"* delim_ptr = ( char * ) memchr ( msgbuf , delim , msgbufsize )"		551956	0					
ANR	552038	IdentifierDeclType	char *		551956	0					
ANR	552039	Identifier	delim_ptr		551956	1					
ANR	552040	AssignmentExpression	"* delim_ptr = ( char * ) memchr ( msgbuf , delim , msgbufsize )"		551956	2		=			
ANR	552041	Identifier	delim_ptr		551956	0					
ANR	552042	CastExpression	"( char * ) memchr ( msgbuf , delim , msgbufsize )"		551956	1					
ANR	552043	CastTarget	char *		551956	0					
ANR	552044	CallExpression	"memchr ( msgbuf , delim , msgbufsize )"		551956	1					
ANR	552045	Callee	memchr		551956	0					
ANR	552046	Identifier	memchr		551956	0					
ANR	552047	ArgumentList	msgbuf		551956	1					
ANR	552048	Argument	msgbuf		551956	0					
ANR	552049	Identifier	msgbuf		551956	0					
ANR	552050	Argument	delim		551956	1					
ANR	552051	Identifier	delim		551956	0					
ANR	552052	Argument	msgbufsize		551956	2					
ANR	552053	Identifier	msgbufsize		551956	0					
ANR	552054	IfStatement	if ( delim_ptr )		551956	3					
ANR	552055	Condition	delim_ptr	1149:6:30721:30729	551956	0	True				
ANR	552056	Identifier	delim_ptr		551956	0					
ANR	552057	CompoundStatement		17:18:384:384	551956	1					
ANR	552058	ExpressionStatement	n += delim_ptr - msgbuf	1150:3:30738:30761	551956	0	True				
ANR	552059	AssignmentExpression	n += delim_ptr - msgbuf		551956	0		+=			
ANR	552060	Identifier	n		551956	0					
ANR	552061	AdditiveExpression	delim_ptr - msgbuf		551956	1		-			
ANR	552062	Identifier	delim_ptr		551956	0					
ANR	552063	Identifier	msgbuf		551956	1					
ANR	552064	IfStatement	if ( n == msgbufsize )		551956	1					
ANR	552065	Condition	n == msgbufsize	1151:7:30770:30784	551956	0	True				
ANR	552066	EqualityExpression	n == msgbufsize		551956	0		==			
ANR	552067	Identifier	n		551956	0					
ANR	552068	Identifier	msgbufsize		551956	1					
ANR	552069	CompoundStatement		19:25:439:439	551956	1					
ANR	552070	ExpressionStatement	copy_needed = true	1155:4:30927:30945	551956	0	True				
ANR	552071	AssignmentExpression	copy_needed = true		551956	0		=			
ANR	552072	Identifier	copy_needed		551956	0					
ANR	552073	Identifier	true		551956	1					
ANR	552074	IfStatement	if ( ! copy_needed )		551956	2					
ANR	552075	Condition	! copy_needed	1157:7:30959:30970	551956	0	True				
ANR	552076	UnaryOperationExpression	! copy_needed		551956	0					
ANR	552077	UnaryOperator	!		551956	0					
ANR	552078	Identifier	copy_needed		551956	1					
ANR	552079	CompoundStatement		25:22:625:625	551956	1					
ANR	552080	ExpressionStatement	incrementCurData ( n )	1161:4:31155:31174	551956	0	True				
ANR	552081	CallExpression	incrementCurData ( n )		551956	0					
ANR	552082	Callee	incrementCurData		551956	0					
ANR	552083	Identifier	incrementCurData		551956	0					
ANR	552084	ArgumentList	n		551956	1					
ANR	552085	Argument	n		551956	0					
ANR	552086	Identifier	n		551956	0					
ANR	552087	ExpressionStatement	buf = msgbuf	1162:4:31180:31192	551956	1	True				
ANR	552088	AssignmentExpression	buf = msgbuf		551956	0		=			
ANR	552089	Identifier	buf		551956	0					
ANR	552090	Identifier	msgbuf		551956	1					
ANR	552091	ReturnStatement	return n ;	1163:4:31198:31206	551956	2	True				
ANR	552092	Identifier	n		551956	0					
ANR	552093	BreakStatement	break ;	1165:3:31216:31221	551956	3	True				
ANR	552094	ExpressionStatement	copy_needed = true	1167:2:31244:31262	551956	4	True				
ANR	552095	AssignmentExpression	copy_needed = true		551956	0		=			
ANR	552096	Identifier	copy_needed		551956	0					
ANR	552097	Identifier	true		551956	1					
ANR	552098	ExpressionStatement	n += msgbufsize	1169:2:31300:31315	551956	5	True				
ANR	552099	AssignmentExpression	n += msgbufsize		551956	0		+=			
ANR	552100	Identifier	n		551956	0					
ANR	552101	Identifier	msgbufsize		551956	1					
ANR	552102	ExpressionStatement	tempPkt ++	1170:2:31319:31328	551956	6	True				
ANR	552103	PostIncDecOperationExpression	tempPkt ++		551956	0					
ANR	552104	Identifier	tempPkt		551956	0					
ANR	552105	IncDec	++		551956	1					
ANR	552106	ExpressionStatement	tempData = 0	1171:2:31332:31344	551956	7	True				
ANR	552107	AssignmentExpression	tempData = 0		551956	0		=			
ANR	552108	Identifier	tempData		551956	0					
ANR	552109	PrimaryExpression	0		551956	1					
ANR	552110	IfStatement	if ( tempPkt == SAFE_MSG_NO_OF_DIR_ENTRY )		551956	8					
ANR	552111	Condition	tempPkt == SAFE_MSG_NO_OF_DIR_ENTRY	1172:5:31351:31385	551956	0	True				
ANR	552112	EqualityExpression	tempPkt == SAFE_MSG_NO_OF_DIR_ENTRY		551956	0		==			
ANR	552113	Identifier	tempPkt		551956	0					
ANR	552114	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		551956	1					
ANR	552115	CompoundStatement		40:42:1039:1039	551956	1					
ANR	552116	IfStatement	if ( ! tempDir -> nextDir )		551956	0					
ANR	552117	Condition	! tempDir -> nextDir	1173:6:31396:31412	551956	0	True				
ANR	552118	UnaryOperationExpression	! tempDir -> nextDir		551956	0					
ANR	552119	UnaryOperator	!		551956	0					
ANR	552120	PtrMemberAccess	tempDir -> nextDir		551956	1					
ANR	552121	Identifier	tempDir		551956	0					
ANR	552122	Identifier	nextDir		551956	1					
ANR	552123	CompoundStatement		41:25:1066:1066	551956	1					
ANR	552124	ReturnStatement	return - 1 ;	1174:4:31421:31430	551956	0	True				
ANR	552125	UnaryOperationExpression	- 1		551956	0					
ANR	552126	UnaryOperator	-		551956	0					
ANR	552127	PrimaryExpression	1		551956	1					
ANR	552128	ExpressionStatement	tempDir = tempDir -> nextDir	1176:3:31440:31466	551956	1	True				
ANR	552129	AssignmentExpression	tempDir = tempDir -> nextDir		551956	0		=			
ANR	552130	Identifier	tempDir		551956	0					
ANR	552131	PtrMemberAccess	tempDir -> nextDir		551956	1					
ANR	552132	Identifier	tempDir		551956	0					
ANR	552133	Identifier	nextDir		551956	1					
ANR	552134	ExpressionStatement	tempPkt = 0	1177:3:31471:31482	551956	2	True				
ANR	552135	AssignmentExpression	tempPkt = 0		551956	0		=			
ANR	552136	Identifier	tempPkt		551956	0					
ANR	552137	PrimaryExpression	0		551956	1					
ANR	552138	ElseStatement	else		551956	0					
ANR	552139	IfStatement	if ( ! tempDir -> dEntry [ tempPkt ] . dGram )		551956	0					
ANR	552140	Condition	! tempDir -> dEntry [ tempPkt ] . dGram	1178:12:31496:31526	551956	0	True				
ANR	552141	UnaryOperationExpression	! tempDir -> dEntry [ tempPkt ] . dGram		551956	0					
ANR	552142	UnaryOperator	!		551956	0					
ANR	552143	MemberAccess	tempDir -> dEntry [ tempPkt ] . dGram		551956	1					
ANR	552144	ArrayIndexing	tempDir -> dEntry [ tempPkt ]		551956	0					
ANR	552145	PtrMemberAccess	tempDir -> dEntry		551956	0					
ANR	552146	Identifier	tempDir		551956	0					
ANR	552147	Identifier	dEntry		551956	1					
ANR	552148	Identifier	tempPkt		551956	1					
ANR	552149	Identifier	dGram		551956	1					
ANR	552150	CompoundStatement		46:45:1180:1180	551956	1					
ANR	552151	IfStatement	if ( D_FULLDEBUG & DebugFlags )		551956	0					
ANR	552152	Condition	D_FULLDEBUG & DebugFlags	1179:7:31561:31584	551956	0	True				
ANR	552153	BitAndExpression	D_FULLDEBUG & DebugFlags		551956	0		&			
ANR	552154	Identifier	D_FULLDEBUG		551956	0					
ANR	552155	Identifier	DebugFlags		551956	1					
ANR	552156	ExpressionStatement	"dprintf ( D_NETWORK , ""SafeMsg::getPtr: get to end & '%c' not found\\n"" , delim )"	1180:4:31592:31679	551956	1	True				
ANR	552157	CallExpression	"dprintf ( D_NETWORK , ""SafeMsg::getPtr: get to end & '%c' not found\\n"" , delim )"		551956	0					
ANR	552158	Callee	dprintf		551956	0					
ANR	552159	Identifier	dprintf		551956	0					
ANR	552160	ArgumentList	D_NETWORK		551956	1					
ANR	552161	Argument	D_NETWORK		551956	0					
ANR	552162	Identifier	D_NETWORK		551956	0					
ANR	552163	Argument	"""SafeMsg::getPtr: get to end & '%c' not found\\n"""		551956	1					
ANR	552164	PrimaryExpression	"""SafeMsg::getPtr: get to end & '%c' not found\\n"""		551956	0					
ANR	552165	Argument	delim		551956	2					
ANR	552166	Identifier	delim		551956	0					
ANR	552167	ReturnStatement	return - 1 ;	1182:3:31684:31693	551956	1	True				
ANR	552168	UnaryOperationExpression	- 1		551956	0					
ANR	552169	UnaryOperator	-		551956	0					
ANR	552170	PrimaryExpression	1		551956	1					
ANR	552171	IfStatement	if ( D_FULLDEBUG & DebugFlags )		551956	9					
ANR	552172	Condition	D_FULLDEBUG & DebugFlags	1186:5:31708:31731	551956	0	True				
ANR	552173	BitAndExpression	D_FULLDEBUG & DebugFlags		551956	0		&			
ANR	552174	Identifier	D_FULLDEBUG		551956	0					
ANR	552175	Identifier	DebugFlags		551956	1					
ANR	552176	ExpressionStatement	"dprintf ( D_NETWORK , ""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"" , delim , ( unsigned long ) n )"	1187:2:31737:31849	551956	1	True				
ANR	552177	CallExpression	"dprintf ( D_NETWORK , ""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"" , delim , ( unsigned long ) n )"		551956	0					
ANR	552178	Callee	dprintf		551956	0					
ANR	552179	Identifier	dprintf		551956	0					
ANR	552180	ArgumentList	D_NETWORK		551956	1					
ANR	552181	Argument	D_NETWORK		551956	0					
ANR	552182	Identifier	D_NETWORK		551956	0					
ANR	552183	Argument	"""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"""		551956	1					
ANR	552184	PrimaryExpression	"""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"""		551956	0					
ANR	552185	Argument	delim		551956	2					
ANR	552186	Identifier	delim		551956	0					
ANR	552187	Argument	( unsigned long ) n		551956	3					
ANR	552188	CastExpression	( unsigned long ) n		551956	0					
ANR	552189	CastTarget	unsigned long		551956	0					
ANR	552190	Identifier	n		551956	1					
ANR	552191	IfStatement	if ( n > tempBufLen )		551956	10					
ANR	552192	Condition	n > tempBufLen	1189:5:31856:31869	551956	0	True				
ANR	552193	RelationalExpression	n > tempBufLen		551956	0		>			
ANR	552194	Identifier	n		551956	0					
ANR	552195	Identifier	tempBufLen		551956	1					
ANR	552196	CompoundStatement		57:22:1524:1524	551956	1					
ANR	552197	IfStatement	if ( tempBuf )		551956	0					
ANR	552198	Condition	tempBuf	1190:5:31880:31886	551956	0	True				
ANR	552199	Identifier	tempBuf		551956	0					
ANR	552200	CompoundStatement		58:14:1540:1540	551956	1					
ANR	552201	ExpressionStatement	free ( tempBuf )	1191:3:31894:31907	551956	0	True				
ANR	552202	CallExpression	free ( tempBuf )		551956	0					
ANR	552203	Callee	free		551956	0					
ANR	552204	Identifier	free		551956	0					
ANR	552205	ArgumentList	tempBuf		551956	1					
ANR	552206	Argument	tempBuf		551956	0					
ANR	552207	Identifier	tempBuf		551956	0					
ANR	552208	ExpressionStatement	tempBuf = ( char * ) malloc ( n )	1193:2:31915:31942	551956	1	True				
ANR	552209	AssignmentExpression	tempBuf = ( char * ) malloc ( n )		551956	0		=			
ANR	552210	Identifier	tempBuf		551956	0					
ANR	552211	CastExpression	( char * ) malloc ( n )		551956	1					
ANR	552212	CastTarget	char *		551956	0					
ANR	552213	CallExpression	malloc ( n )		551956	1					
ANR	552214	Callee	malloc		551956	0					
ANR	552215	Identifier	malloc		551956	0					
ANR	552216	ArgumentList	n		551956	1					
ANR	552217	Argument	n		551956	0					
ANR	552218	Identifier	n		551956	0					
ANR	552219	IfStatement	if ( ! tempBuf )		551956	2					
ANR	552220	Condition	! tempBuf	1194:5:31949:31956	551956	0	True				
ANR	552221	UnaryOperationExpression	! tempBuf		551956	0					
ANR	552222	UnaryOperator	!		551956	0					
ANR	552223	Identifier	tempBuf		551956	1					
ANR	552224	CompoundStatement		62:15:1610:1610	551956	1					
ANR	552225	ExpressionStatement	"dprintf ( D_ALWAYS , ""getPtr, fail at malloc(%lu)\\n"" , ( unsigned long ) n )"	1195:3:31964:32032	551956	0	True				
ANR	552226	CallExpression	"dprintf ( D_ALWAYS , ""getPtr, fail at malloc(%lu)\\n"" , ( unsigned long ) n )"		551956	0					
ANR	552227	Callee	dprintf		551956	0					
ANR	552228	Identifier	dprintf		551956	0					
ANR	552229	ArgumentList	D_ALWAYS		551956	1					
ANR	552230	Argument	D_ALWAYS		551956	0					
ANR	552231	Identifier	D_ALWAYS		551956	0					
ANR	552232	Argument	"""getPtr, fail at malloc(%lu)\\n"""		551956	1					
ANR	552233	PrimaryExpression	"""getPtr, fail at malloc(%lu)\\n"""		551956	0					
ANR	552234	Argument	( unsigned long ) n		551956	2					
ANR	552235	CastExpression	( unsigned long ) n		551956	0					
ANR	552236	CastTarget	unsigned long		551956	0					
ANR	552237	Identifier	n		551956	1					
ANR	552238	ExpressionStatement	tempBufLen = 0	1196:3:32037:32051	551956	1	True				
ANR	552239	AssignmentExpression	tempBufLen = 0		551956	0		=			
ANR	552240	Identifier	tempBufLen		551956	0					
ANR	552241	PrimaryExpression	0		551956	1					
ANR	552242	ReturnStatement	return - 1 ;	1197:3:32056:32065	551956	2	True				
ANR	552243	UnaryOperationExpression	- 1		551956	0					
ANR	552244	UnaryOperator	-		551956	0					
ANR	552245	PrimaryExpression	1		551956	1					
ANR	552246	ExpressionStatement	tempBufLen = n	1199:2:32073:32087	551956	3	True				
ANR	552247	AssignmentExpression	tempBufLen = n		551956	0		=			
ANR	552248	Identifier	tempBufLen		551956	0					
ANR	552249	Identifier	n		551956	1					
ANR	552250	ExpressionStatement	"size = getn ( tempBuf , n )"	1201:1:32093:32116	551956	11	True				
ANR	552251	AssignmentExpression	"size = getn ( tempBuf , n )"		551956	0		=			
ANR	552252	Identifier	size		551956	0					
ANR	552253	CallExpression	"getn ( tempBuf , n )"		551956	1					
ANR	552254	Callee	getn		551956	0					
ANR	552255	Identifier	getn		551956	0					
ANR	552256	ArgumentList	tempBuf		551956	1					
ANR	552257	Argument	tempBuf		551956	0					
ANR	552258	Identifier	tempBuf		551956	0					
ANR	552259	Argument	n		551956	1					
ANR	552260	Identifier	n		551956	0					
ANR	552261	ExpressionStatement	buf = tempBuf	1202:1:32119:32132	551956	12	True				
ANR	552262	AssignmentExpression	buf = tempBuf		551956	0		=			
ANR	552263	Identifier	buf		551956	0					
ANR	552264	Identifier	tempBuf		551956	1					
ANR	552265	ReturnStatement	return size ;	1204:1:32192:32203	551956	13	True				
ANR	552266	Identifier	size		551956	0					
ANR	552267	ReturnType	int		551956	1					
ANR	552268	Identifier	_condorInMsg :: getPtr		551956	2					
ANR	552269	ParameterList	"void * & buf , char delim"		551956	3					
ANR	552270	Parameter	void * & buf	1132:25:30324:30333	551956	0	True				
ANR	552271	ParameterType	void * &		551956	0					
ANR	552272	Identifier	buf		551956	1					
ANR	552273	Parameter	char delim	1132:37:30336:30345	551956	1	True				
ANR	552274	ParameterType	char		551956	0					
ANR	552275	Identifier	delim		551956	1					
ANR	552276	CFGEntryNode	ENTRY		551956		True				
ANR	552277	CFGExitNode	EXIT		551956		True				
ANR	552278	Symbol	tempPkt		551956						
ANR	552279	Symbol	tempDir -> dEntry [ tempPkt ] . dLen		551956						
ANR	552280	Symbol	tempDir -> dEntry		551956						
ANR	552281	Symbol	delim_ptr		551956						
ANR	552282	Symbol	* tempDir -> dEntry		551956						
ANR	552283	Symbol	msgbuf		551956						
ANR	552284	Symbol	curPacket		551956						
ANR	552285	Symbol	tempDir -> nextDir		551956						
ANR	552286	Symbol	curData		551956						
ANR	552287	Symbol	* * tempDir		551956						
ANR	552288	Symbol	delim		551956						
ANR	552289	Symbol	tempBuf		551956						
ANR	552290	Symbol	malloc		551956						
ANR	552291	Symbol	* tempDir		551956						
ANR	552292	Symbol	tempDir -> dEntry [ tempPkt ] . dGram		551956						
ANR	552293	Symbol	false		551956						
ANR	552294	Symbol	D_ALWAYS		551956						
ANR	552295	Symbol	getn		551956						
ANR	552296	Symbol	msgbufsize		551956						
ANR	552297	Symbol	D_FULLDEBUG		551956						
ANR	552298	Symbol	DebugFlags		551956						
ANR	552299	Symbol	n		551956						
ANR	552300	Symbol	* tempPkt		551956						
ANR	552301	Symbol	buf		551956						
ANR	552302	Symbol	size		551956						
ANR	552303	Symbol	copy_needed		551956						
ANR	552304	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		551956						
ANR	552305	Symbol	tempData		551956						
ANR	552306	Symbol	tempBufLen		551956						
ANR	552307	Symbol	curDir		551956						
ANR	552308	Symbol	true		551956						
ANR	552309	Symbol	tempDir		551956						
ANR	552310	Symbol	D_NETWORK		551956						
ANR	552311	Symbol	memchr		551956						
ANR	552312	Function	_condorInMsg :: peek	1208:0:32233:32328							
ANR	552313	FunctionDef	_condorInMsg :: peek (char & c)		552312	0					
ANR	552314	CompoundStatement		1209:0:32265:32328	552312	0					
ANR	552315	ExpressionStatement	c = curDir -> dEntry [ curPacket ] . dGram [ curData ]	1210:1:32268:32312	552312	0	True				
ANR	552316	AssignmentExpression	c = curDir -> dEntry [ curPacket ] . dGram [ curData ]		552312	0		=			
ANR	552317	Identifier	c		552312	0					
ANR	552318	ArrayIndexing	curDir -> dEntry [ curPacket ] . dGram [ curData ]		552312	1					
ANR	552319	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		552312	0					
ANR	552320	ArrayIndexing	curDir -> dEntry [ curPacket ]		552312	0					
ANR	552321	PtrMemberAccess	curDir -> dEntry		552312	0					
ANR	552322	Identifier	curDir		552312	0					
ANR	552323	Identifier	dEntry		552312	1					
ANR	552324	Identifier	curPacket		552312	1					
ANR	552325	Identifier	dGram		552312	1					
ANR	552326	Identifier	curData		552312	1					
ANR	552327	ReturnStatement	return TRUE ;	1211:1:32315:32326	552312	1	True				
ANR	552328	Identifier	TRUE		552312	0					
ANR	552329	ReturnType	int		552312	1					
ANR	552330	Identifier	_condorInMsg :: peek		552312	2					
ANR	552331	ParameterList	char & c		552312	3					
ANR	552332	Parameter	char & c	1208:23:32256:32262	552312	0	True				
ANR	552333	ParameterType	char &		552312	0					
ANR	552334	Identifier	c		552312	1					
ANR	552335	CFGEntryNode	ENTRY		552312		True				
ANR	552336	CFGExitNode	EXIT		552312		True				
ANR	552337	Symbol	* curData		552312						
ANR	552338	Symbol	c		552312						
ANR	552339	Symbol	TRUE		552312						
ANR	552340	Symbol	curDir -> dEntry		552312						
ANR	552341	Symbol	* curDir -> dEntry		552312						
ANR	552342	Symbol	* * * curDir		552312						
ANR	552343	Symbol	* * curPacket		552312						
ANR	552344	Symbol	* curDir		552312						
ANR	552345	Symbol	* * curDir		552312						
ANR	552346	Symbol	* curPacket		552312						
ANR	552347	Symbol	* * curDir -> dEntry		552312						
ANR	552348	Symbol	curDir		552312						
ANR	552349	Symbol	curPacket		552312						
ANR	552350	Symbol	curData		552312						
ANR	552351	Symbol	curDir -> dEntry [ curPacket ] . dGram		552312						
ANR	552352	Symbol	* curDir -> dEntry [ curPacket ] . dGram		552312						
ANR	552353	Function	_condorInMsg :: consumed	1215:0:32404:32478							
ANR	552354	FunctionDef	_condorInMsg :: consumed ()		552353	0					
ANR	552355	CompoundStatement		1216:0:32434:32478	552353	0					
ANR	552356	ReturnStatement	return ( msgLen != 0 && msgLen == passed ) ;	1217:1:32437:32476	552353	0	True				
ANR	552357	AndExpression	msgLen != 0 && msgLen == passed		552353	0		&&			
ANR	552358	EqualityExpression	msgLen != 0		552353	0		!=			
ANR	552359	Identifier	msgLen		552353	0					
ANR	552360	PrimaryExpression	0		552353	1					
ANR	552361	EqualityExpression	msgLen == passed		552353	1		==			
ANR	552362	Identifier	msgLen		552353	0					
ANR	552363	Identifier	passed		552353	1					
ANR	552364	ReturnType	bool		552353	1					
ANR	552365	Identifier	_condorInMsg :: consumed		552353	2					
ANR	552366	ParameterList			552353	3					
ANR	552367	CFGEntryNode	ENTRY		552353		True				
ANR	552368	CFGExitNode	EXIT		552353		True				
ANR	552369	Symbol	msgLen		552353						
ANR	552370	Symbol	passed		552353						
ANR	552371	Function	_condorInMsg :: set_sec	1220:0:32481:33077							
ANR	552372	FunctionDef	"_condorInMsg :: set_sec (const char * MD5Keyid , const unsigned char * md , const char * EncKeyId)"		552371	0					
ANR	552373	CompoundStatement		1224:0:32642:33077	552371	0					
ANR	552374	IfStatement	if ( md )		552371	0					
ANR	552375	Condition	md	1225:7:32651:32652	552371	0	True				
ANR	552376	Identifier	md		552371	0					
ANR	552377	CompoundStatement		2:11:12:12	552371	1					
ANR	552378	ExpressionStatement	md_ = ( unsigned char * ) malloc ( MAC_SIZE )	1226:8:32665:32705	552371	0	True				
ANR	552379	AssignmentExpression	md_ = ( unsigned char * ) malloc ( MAC_SIZE )		552371	0		=			
ANR	552380	Identifier	md_		552371	0					
ANR	552381	CastExpression	( unsigned char * ) malloc ( MAC_SIZE )		552371	1					
ANR	552382	CastTarget	unsigned char *		552371	0					
ANR	552383	CallExpression	malloc ( MAC_SIZE )		552371	1					
ANR	552384	Callee	malloc		552371	0					
ANR	552385	Identifier	malloc		552371	0					
ANR	552386	ArgumentList	MAC_SIZE		552371	1					
ANR	552387	Argument	MAC_SIZE		552371	0					
ANR	552388	Identifier	MAC_SIZE		552371	0					
ANR	552389	ExpressionStatement	"memcpy ( md_ , md , MAC_SIZE )"	1227:8:32715:32740	552371	1	True				
ANR	552390	CallExpression	"memcpy ( md_ , md , MAC_SIZE )"		552371	0					
ANR	552391	Callee	memcpy		552371	0					
ANR	552392	Identifier	memcpy		552371	0					
ANR	552393	ArgumentList	md_		552371	1					
ANR	552394	Argument	md_		552371	0					
ANR	552395	Identifier	md_		552371	0					
ANR	552396	Argument	md		552371	1					
ANR	552397	Identifier	md		552371	0					
ANR	552398	Argument	MAC_SIZE		552371	2					
ANR	552399	Identifier	MAC_SIZE		552371	0					
ANR	552400	ExpressionStatement	verified_ = false	1228:8:32750:32767	552371	2	True				
ANR	552401	AssignmentExpression	verified_ = false		552371	0		=			
ANR	552402	Identifier	verified_		552371	0					
ANR	552403	Identifier	false		552371	1					
ANR	552404	ElseStatement	else		552371	0					
ANR	552405	CompoundStatement		7:9:141:141	552371	0					
ANR	552406	ExpressionStatement	md_ = 0	1231:8:32794:32801	552371	0	True				
ANR	552407	AssignmentExpression	md_ = 0		552371	0		=			
ANR	552408	Identifier	md_		552371	0					
ANR	552409	PrimaryExpression	0		552371	1					
ANR	552410	ExpressionStatement	verified_ = true	1232:8:32811:32827	552371	1	True				
ANR	552411	AssignmentExpression	verified_ = true		552371	0		=			
ANR	552412	Identifier	verified_		552371	0					
ANR	552413	Identifier	true		552371	1					
ANR	552414	IfStatement	if ( MD5Keyid )		552371	1					
ANR	552415	Condition	MD5Keyid	1235:8:32844:32851	552371	0	True				
ANR	552416	Identifier	MD5Keyid		552371	0					
ANR	552417	CompoundStatement		12:18:211:211	552371	1					
ANR	552418	ExpressionStatement	incomingMD5KeyId_ = strdup ( MD5Keyid )	1236:8:32864:32900	552371	0	True				
ANR	552419	AssignmentExpression	incomingMD5KeyId_ = strdup ( MD5Keyid )		552371	0		=			
ANR	552420	Identifier	incomingMD5KeyId_		552371	0					
ANR	552421	CallExpression	strdup ( MD5Keyid )		552371	1					
ANR	552422	Callee	strdup		552371	0					
ANR	552423	Identifier	strdup		552371	0					
ANR	552424	ArgumentList	MD5Keyid		552371	1					
ANR	552425	Argument	MD5Keyid		552371	0					
ANR	552426	Identifier	MD5Keyid		552371	0					
ANR	552427	ElseStatement	else		552371	0					
ANR	552428	CompoundStatement		15:9:274:274	552371	0					
ANR	552429	ExpressionStatement	incomingMD5KeyId_ = 0	1239:8:32927:32948	552371	0	True				
ANR	552430	AssignmentExpression	incomingMD5KeyId_ = 0		552371	0		=			
ANR	552431	Identifier	incomingMD5KeyId_		552371	0					
ANR	552432	PrimaryExpression	0		552371	1					
ANR	552433	IfStatement	if ( EncKeyId )		552371	2					
ANR	552434	Condition	EncKeyId	1242:8:32965:32972	552371	0	True				
ANR	552435	Identifier	EncKeyId		552371	0					
ANR	552436	CompoundStatement		19:18:332:332	552371	1					
ANR	552437	ExpressionStatement	incomingEncKeyId_ = strdup ( EncKeyId )	1243:8:32985:33021	552371	0	True				
ANR	552438	AssignmentExpression	incomingEncKeyId_ = strdup ( EncKeyId )		552371	0		=			
ANR	552439	Identifier	incomingEncKeyId_		552371	0					
ANR	552440	CallExpression	strdup ( EncKeyId )		552371	1					
ANR	552441	Callee	strdup		552371	0					
ANR	552442	Identifier	strdup		552371	0					
ANR	552443	ArgumentList	EncKeyId		552371	1					
ANR	552444	Argument	EncKeyId		552371	0					
ANR	552445	Identifier	EncKeyId		552371	0					
ANR	552446	ElseStatement	else		552371	0					
ANR	552447	CompoundStatement		22:9:395:395	552371	0					
ANR	552448	ExpressionStatement	incomingEncKeyId_ = 0	1246:8:33048:33069	552371	0	True				
ANR	552449	AssignmentExpression	incomingEncKeyId_ = 0		552371	0		=			
ANR	552450	Identifier	incomingEncKeyId_		552371	0					
ANR	552451	PrimaryExpression	0		552371	1					
ANR	552452	ReturnType	void		552371	1					
ANR	552453	Identifier	_condorInMsg :: set_sec		552371	2					
ANR	552454	ParameterList	"const char * MD5Keyid , const unsigned char * md , const char * EncKeyId"		552371	3					
ANR	552455	Parameter	const char * MD5Keyid	1221:22:32508:32528	552371	0	True				
ANR	552456	ParameterType	const char *		552371	0					
ANR	552457	Identifier	MD5Keyid		552371	1					
ANR	552458	Parameter	const unsigned char * md	1222:16:32562:32585	552371	1	True				
ANR	552459	ParameterType	const unsigned char *		552371	0					
ANR	552460	Identifier	md		552371	1					
ANR	552461	Parameter	const char * EncKeyId	1223:16:32619:32639	552371	2	True				
ANR	552462	ParameterType	const char *		552371	0					
ANR	552463	Identifier	EncKeyId		552371	1					
ANR	552464	CFGEntryNode	ENTRY		552371		True				
ANR	552465	CFGExitNode	EXIT		552371		True				
ANR	552466	Symbol	malloc		552371						
ANR	552467	Symbol	MAC_SIZE		552371						
ANR	552468	Symbol	verified_		552371						
ANR	552469	Symbol	incomingMD5KeyId_		552371						
ANR	552470	Symbol	md		552371						
ANR	552471	Symbol	false		552371						
ANR	552472	Symbol	true		552371						
ANR	552473	Symbol	md_		552371						
ANR	552474	Symbol	strdup		552371						
ANR	552475	Symbol	incomingEncKeyId_		552371						
ANR	552476	Symbol	EncKeyId		552371						
ANR	552477	Symbol	MD5Keyid		552371						
ANR	552478	Function	_condorInMsg :: isDataMD5ed	1250:0:33080:33155							
ANR	552479	FunctionDef	_condorInMsg :: isDataMD5ed ()		552478	0					
ANR	552480	CompoundStatement		1251:0:33123:33155	552478	0					
ANR	552481	ReturnStatement	return incomingMD5KeyId_ ;	1252:4:33129:33153	552478	0	True				
ANR	552482	Identifier	incomingMD5KeyId_		552478	0					
ANR	552483	ReturnType	const char *		552478	1					
ANR	552484	Identifier	_condorInMsg :: isDataMD5ed		552478	2					
ANR	552485	ParameterList			552478	3					
ANR	552486	CFGEntryNode	ENTRY		552478		True				
ANR	552487	CFGExitNode	EXIT		552478		True				
ANR	552488	Symbol	incomingMD5KeyId_		552478						
ANR	552489	Function	_condorInMsg :: isDataEncrypted	1255:0:33158:33237							
ANR	552490	FunctionDef	_condorInMsg :: isDataEncrypted ()		552489	0					
ANR	552491	CompoundStatement		1256:0:33205:33237	552489	0					
ANR	552492	ReturnStatement	return incomingEncKeyId_ ;	1257:4:33211:33235	552489	0	True				
ANR	552493	Identifier	incomingEncKeyId_		552489	0					
ANR	552494	ReturnType	const char *		552489	1					
ANR	552495	Identifier	_condorInMsg :: isDataEncrypted		552489	2					
ANR	552496	ParameterList			552489	3					
ANR	552497	CFGEntryNode	ENTRY		552489		True				
ANR	552498	CFGExitNode	EXIT		552489		True				
ANR	552499	Symbol	incomingEncKeyId_		552489						
ANR	552500	Function	_condorInMsg :: resetEnc	1260:0:33240:33373							
ANR	552501	FunctionDef	_condorInMsg :: resetEnc ()		552500	0					
ANR	552502	CompoundStatement		1261:0:33272:33373	552500	0					
ANR	552503	IfStatement	if ( incomingEncKeyId_ )		552500	0					
ANR	552504	Condition	incomingEncKeyId_	1262:8:33282:33298	552500	0	True				
ANR	552505	Identifier	incomingEncKeyId_		552500	0					
ANR	552506	CompoundStatement		2:27:28:28	552500	1					
ANR	552507	ExpressionStatement	free ( incomingEncKeyId_ )	1263:8:33311:33334	552500	0	True				
ANR	552508	CallExpression	free ( incomingEncKeyId_ )		552500	0					
ANR	552509	Callee	free		552500	0					
ANR	552510	Identifier	free		552500	0					
ANR	552511	ArgumentList	incomingEncKeyId_		552500	1					
ANR	552512	Argument	incomingEncKeyId_		552500	0					
ANR	552513	Identifier	incomingEncKeyId_		552500	0					
ANR	552514	ExpressionStatement	incomingEncKeyId_ = 0	1264:8:33344:33365	552500	1	True				
ANR	552515	AssignmentExpression	incomingEncKeyId_ = 0		552500	0		=			
ANR	552516	Identifier	incomingEncKeyId_		552500	0					
ANR	552517	PrimaryExpression	0		552500	1					
ANR	552518	ReturnType	void		552500	1					
ANR	552519	Identifier	_condorInMsg :: resetEnc		552500	2					
ANR	552520	ParameterList			552500	3					
ANR	552521	CFGEntryNode	ENTRY		552500		True				
ANR	552522	CFGExitNode	EXIT		552500		True				
ANR	552523	Symbol	incomingEncKeyId_		552500						
ANR	552524	Function	_condorInMsg :: resetMD	1268:0:33376:33508							
ANR	552525	FunctionDef	_condorInMsg :: resetMD ()		552524	0					
ANR	552526	CompoundStatement		1269:0:33407:33508	552524	0					
ANR	552527	IfStatement	if ( incomingMD5KeyId_ )		552524	0					
ANR	552528	Condition	incomingMD5KeyId_	1270:8:33417:33433	552524	0	True				
ANR	552529	Identifier	incomingMD5KeyId_		552524	0					
ANR	552530	CompoundStatement		2:27:28:28	552524	1					
ANR	552531	ExpressionStatement	free ( incomingMD5KeyId_ )	1271:8:33446:33469	552524	0	True				
ANR	552532	CallExpression	free ( incomingMD5KeyId_ )		552524	0					
ANR	552533	Callee	free		552524	0					
ANR	552534	Identifier	free		552524	0					
ANR	552535	ArgumentList	incomingMD5KeyId_		552524	1					
ANR	552536	Argument	incomingMD5KeyId_		552524	0					
ANR	552537	Identifier	incomingMD5KeyId_		552524	0					
ANR	552538	ExpressionStatement	incomingMD5KeyId_ = 0	1272:8:33479:33500	552524	1	True				
ANR	552539	AssignmentExpression	incomingMD5KeyId_ = 0		552524	0		=			
ANR	552540	Identifier	incomingMD5KeyId_		552524	0					
ANR	552541	PrimaryExpression	0		552524	1					
ANR	552542	ReturnType	void		552524	1					
ANR	552543	Identifier	_condorInMsg :: resetMD		552524	2					
ANR	552544	ParameterList			552524	3					
ANR	552545	CFGEntryNode	ENTRY		552524		True				
ANR	552546	CFGExitNode	EXIT		552524		True				
ANR	552547	Symbol	incomingMD5KeyId_		552524						
ANR	552548	Function	_condorInMsg :: dumpMsg	1276:0:33511:34890							
ANR	552549	FunctionDef	_condorInMsg :: dumpMsg ()		552548	0					
ANR	552550	CompoundStatement		1277:0:33540:34890	552548	0					
ANR	552551	IdentifierDeclStatement	char str [ 10000 ] ;	1278:4:33546:33561	552548	0	True				
ANR	552552	IdentifierDecl	str [ 10000 ]		552548	0					
ANR	552553	IdentifierDeclType	char [ 10000 ]		552548	0					
ANR	552554	Identifier	str		552548	1					
ANR	552555	PrimaryExpression	10000		552548	2					
ANR	552556	IdentifierDeclStatement	struct in_addr in ;	1279:4:33567:33584	552548	1	True				
ANR	552557	IdentifierDecl	in		552548	0					
ANR	552558	IdentifierDeclType	struct in_addr		552548	0					
ANR	552559	Identifier	in		552548	1					
ANR	552560	ExpressionStatement	in . s_addr = msgID . ip_addr	1281:4:33591:33616	552548	2	True				
ANR	552561	AssignmentExpression	in . s_addr = msgID . ip_addr		552548	0		=			
ANR	552562	MemberAccess	in . s_addr		552548	0					
ANR	552563	Identifier	in		552548	0					
ANR	552564	Identifier	s_addr		552548	1					
ANR	552565	MemberAccess	msgID . ip_addr		552548	1					
ANR	552566	Identifier	msgID		552548	0					
ANR	552567	Identifier	ip_addr		552548	1					
ANR	552568	ExpressionStatement	"sprintf ( str , ""ID: %s, %d, %lu, %d\\n"" , inet_ntoa ( in ) , msgID . pid , msgID . time , msgID . msgNo )"	1282:4:33622:33722	552548	3	True				
ANR	552569	CallExpression	"sprintf ( str , ""ID: %s, %d, %lu, %d\\n"" , inet_ntoa ( in ) , msgID . pid , msgID . time , msgID . msgNo )"		552548	0					
ANR	552570	Callee	sprintf		552548	0					
ANR	552571	Identifier	sprintf		552548	0					
ANR	552572	ArgumentList	str		552548	1					
ANR	552573	Argument	str		552548	0					
ANR	552574	Identifier	str		552548	0					
ANR	552575	Argument	"""ID: %s, %d, %lu, %d\\n"""		552548	1					
ANR	552576	PrimaryExpression	"""ID: %s, %d, %lu, %d\\n"""		552548	0					
ANR	552577	Argument	inet_ntoa ( in )		552548	2					
ANR	552578	CallExpression	inet_ntoa ( in )		552548	0					
ANR	552579	Callee	inet_ntoa		552548	0					
ANR	552580	Identifier	inet_ntoa		552548	0					
ANR	552581	ArgumentList	in		552548	1					
ANR	552582	Argument	in		552548	0					
ANR	552583	Identifier	in		552548	0					
ANR	552584	Argument	msgID . pid		552548	3					
ANR	552585	MemberAccess	msgID . pid		552548	0					
ANR	552586	Identifier	msgID		552548	0					
ANR	552587	Identifier	pid		552548	1					
ANR	552588	Argument	msgID . time		552548	4					
ANR	552589	MemberAccess	msgID . time		552548	0					
ANR	552590	Identifier	msgID		552548	0					
ANR	552591	Identifier	time		552548	1					
ANR	552592	Argument	msgID . msgNo		552548	5					
ANR	552593	MemberAccess	msgID . msgNo		552548	0					
ANR	552594	Identifier	msgID		552548	0					
ANR	552595	Identifier	msgNo		552548	1					
ANR	552596	ExpressionStatement	"sprintf ( & str [ strlen ( str ) ] , ""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"" , msgLen , lastNo , received , lastTime )"	1284:4:33728:33850	552548	4	True				
ANR	552597	CallExpression	"sprintf ( & str [ strlen ( str ) ] , ""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"" , msgLen , lastNo , received , lastTime )"		552548	0					
ANR	552598	Callee	sprintf		552548	0					
ANR	552599	Identifier	sprintf		552548	0					
ANR	552600	ArgumentList	& str [ strlen ( str ) ]		552548	1					
ANR	552601	Argument	& str [ strlen ( str ) ]		552548	0					
ANR	552602	UnaryOperationExpression	& str [ strlen ( str ) ]		552548	0					
ANR	552603	UnaryOperator	&		552548	0					
ANR	552604	ArrayIndexing	str [ strlen ( str ) ]		552548	1					
ANR	552605	Identifier	str		552548	0					
ANR	552606	CallExpression	strlen ( str )		552548	1					
ANR	552607	Callee	strlen		552548	0					
ANR	552608	Identifier	strlen		552548	0					
ANR	552609	ArgumentList	str		552548	1					
ANR	552610	Argument	str		552548	0					
ANR	552611	Identifier	str		552548	0					
ANR	552612	Argument	"""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"""		552548	1					
ANR	552613	PrimaryExpression	"""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"""		552548	0					
ANR	552614	Argument	msgLen		552548	2					
ANR	552615	Identifier	msgLen		552548	0					
ANR	552616	Argument	lastNo		552548	3					
ANR	552617	Identifier	lastNo		552548	0					
ANR	552618	Argument	received		552548	4					
ANR	552619	Identifier	received		552548	0					
ANR	552620	Argument	lastTime		552548	5					
ANR	552621	Identifier	lastTime		552548	0					
ANR	552622	ExpressionStatement	"dprintf ( D_NETWORK , ""========================\\n%s\\n===================\\n"" , str )"	1286:4:33856:33934	552548	5	True				
ANR	552623	CallExpression	"dprintf ( D_NETWORK , ""========================\\n%s\\n===================\\n"" , str )"		552548	0					
ANR	552624	Callee	dprintf		552548	0					
ANR	552625	Identifier	dprintf		552548	0					
ANR	552626	ArgumentList	D_NETWORK		552548	1					
ANR	552627	Argument	D_NETWORK		552548	0					
ANR	552628	Identifier	D_NETWORK		552548	0					
ANR	552629	Argument	"""========================\\n%s\\n===================\\n"""		552548	1					
ANR	552630	PrimaryExpression	"""========================\\n%s\\n===================\\n"""		552548	0					
ANR	552631	Argument	str		552548	2					
ANR	552632	Identifier	str		552548	0					
ANR	552633	ReturnType	void		552548	1					
ANR	552634	Identifier	_condorInMsg :: dumpMsg		552548	2					
ANR	552635	ParameterList			552548	3					
ANR	552636	CFGEntryNode	ENTRY		552548		True				
ANR	552637	CFGExitNode	EXIT		552548		True				
ANR	552638	Symbol	lastTime		552548						
ANR	552639	Symbol	msgID . pid		552548						
ANR	552640	Symbol	msgID . msgNo		552548						
ANR	552641	Symbol	in		552548						
ANR	552642	Symbol	in . s_addr		552548						
ANR	552643	Symbol	msgID		552548						
ANR	552644	Symbol	received		552548						
ANR	552645	Symbol	inet_ntoa		552548						
ANR	552646	Symbol	lastNo		552548						
ANR	552647	Symbol	str		552548						
ANR	552648	Symbol	msgLen		552548						
ANR	552649	Symbol	msgID . ip_addr		552548						
ANR	552650	Symbol	strlen		552548						
ANR	552651	Symbol	D_NETWORK		552548						
ANR	552652	Symbol	msgID . time		552548						
