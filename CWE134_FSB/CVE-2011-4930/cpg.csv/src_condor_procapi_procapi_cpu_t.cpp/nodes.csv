command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3599472	File	data/converged/CVE-2011-4930_htcondor/src_condor_procapi_procapi_cpu_t.cpp								
ANR	3599473	Function	cpuusage_test	25:0:1019:4274							
ANR	3599474	FunctionDef	cpuusage_test (bool verbose)		3599473	0					
ANR	3599475	CompoundStatement		25:32:1051:4274	3599473	0					
ANR	3599476	IdentifierDeclStatement	int status ;	28:1:1056:1066	3599473	0	True				
ANR	3599477	IdentifierDecl	status		3599473	0					
ANR	3599478	IdentifierDeclType	int		3599473	0					
ANR	3599479	Identifier	status		3599473	1					
ANR	3599480	IdentifierDeclStatement	int success = 1 ;	29:2:1070:1085	3599473	1	True				
ANR	3599481	IdentifierDecl	success = 1		3599473	0					
ANR	3599482	IdentifierDeclType	int		3599473	0					
ANR	3599483	Identifier	success		3599473	1					
ANR	3599484	AssignmentExpression	success = 1		3599473	2		=			
ANR	3599485	Identifier	success		3599473	0					
ANR	3599486	PrimaryExpression	1		3599473	1					
ANR	3599487	IdentifierDeclStatement	piPTR pi_s = NULL ;	31:2:1090:1107	3599473	2	True				
ANR	3599488	IdentifierDecl	pi_s = NULL		3599473	0					
ANR	3599489	IdentifierDeclType	piPTR		3599473	0					
ANR	3599490	Identifier	pi_s		3599473	1					
ANR	3599491	AssignmentExpression	pi_s = NULL		3599473	2		=			
ANR	3599492	Identifier	NULL		3599473	0					
ANR	3599493	Identifier	NULL		3599473	1					
ANR	3599494	IdentifierDeclStatement	piPTR pi_r = NULL ;	32:2:1111:1128	3599473	3	True				
ANR	3599495	IdentifierDecl	pi_r = NULL		3599473	0					
ANR	3599496	IdentifierDeclType	piPTR		3599473	0					
ANR	3599497	Identifier	pi_r		3599473	1					
ANR	3599498	AssignmentExpression	pi_r = NULL		3599473	2		=			
ANR	3599499	Identifier	NULL		3599473	0					
ANR	3599500	Identifier	NULL		3599473	1					
ANR	3599501	IdentifierDeclStatement	pid_t child ;	34:2:1133:1144	3599473	4	True				
ANR	3599502	IdentifierDecl	child		3599473	0					
ANR	3599503	IdentifierDeclType	pid_t		3599473	0					
ANR	3599504	Identifier	child		3599473	1					
ANR	3599505	IfStatement	if ( verbose )		3599473	5					
ANR	3599506	Condition	verbose	36:5:1152:1158	3599473	0	True				
ANR	3599507	Identifier	verbose		3599473	0					
ANR	3599508	CompoundStatement		12:13:108:108	3599473	1					
ANR	3599509	ExpressionStatement	"printf ( ""\\n..................................\\n"" )"	37:2:1164:1215	3599473	0	True				
ANR	3599510	CallExpression	"printf ( ""\\n..................................\\n"" )"		3599473	0					
ANR	3599511	Callee	printf		3599473	0					
ANR	3599512	Identifier	printf		3599473	0					
ANR	3599513	ArgumentList	"""\\n..................................\\n"""		3599473	1					
ANR	3599514	Argument	"""\\n..................................\\n"""		3599473	0					
ANR	3599515	PrimaryExpression	"""\\n..................................\\n"""		3599473	0					
ANR	3599516	ExpressionStatement	"printf ( ""Here's the test of cpu usage monitoring over time.  I'll\\n"" )"	38:2:1219:1289	3599473	1	True				
ANR	3599517	CallExpression	"printf ( ""Here's the test of cpu usage monitoring over time.  I'll\\n"" )"		3599473	0					
ANR	3599518	Callee	printf		3599473	0					
ANR	3599519	Identifier	printf		3599473	0					
ANR	3599520	ArgumentList	"""Here's the test of cpu usage monitoring over time.  I'll\\n"""		3599473	1					
ANR	3599521	Argument	"""Here's the test of cpu usage monitoring over time.  I'll\\n"""		3599473	0					
ANR	3599522	PrimaryExpression	"""Here's the test of cpu usage monitoring over time.  I'll\\n"""		3599473	0					
ANR	3599523	ExpressionStatement	"printf ( ""fork off a process.  The parent will then start and stop it\\n"" )"	39:2:1293:1366	3599473	2	True				
ANR	3599524	CallExpression	"printf ( ""fork off a process.  The parent will then start and stop it\\n"" )"		3599473	0					
ANR	3599525	Callee	printf		3599473	0					
ANR	3599526	Identifier	printf		3599473	0					
ANR	3599527	ArgumentList	"""fork off a process.  The parent will then start and stop it\\n"""		3599473	1					
ANR	3599528	Argument	"""fork off a process.  The parent will then start and stop it\\n"""		3599473	0					
ANR	3599529	PrimaryExpression	"""fork off a process.  The parent will then start and stop it\\n"""		3599473	0					
ANR	3599530	ExpressionStatement	"printf ( ""(5s intervals) making sure cpuusage is doing the right thing.\\n"" )"	40:2:1370:1445	3599473	3	True				
ANR	3599531	CallExpression	"printf ( ""(5s intervals) making sure cpuusage is doing the right thing.\\n"" )"		3599473	0					
ANR	3599532	Callee	printf		3599473	0					
ANR	3599533	Identifier	printf		3599473	0					
ANR	3599534	ArgumentList	"""(5s intervals) making sure cpuusage is doing the right thing.\\n"""		3599473	1					
ANR	3599535	Argument	"""(5s intervals) making sure cpuusage is doing the right thing.\\n"""		3599473	0					
ANR	3599536	PrimaryExpression	"""(5s intervals) making sure cpuusage is doing the right thing.\\n"""		3599473	0					
ANR	3599537	ExpressionStatement	"printf ( ""This test runs for one minute.\\n"" )"	41:2:1449:1493	3599473	4	True				
ANR	3599538	CallExpression	"printf ( ""This test runs for one minute.\\n"" )"		3599473	0					
ANR	3599539	Callee	printf		3599473	0					
ANR	3599540	Identifier	printf		3599473	0					
ANR	3599541	ArgumentList	"""This test runs for one minute.\\n"""		3599473	1					
ANR	3599542	Argument	"""This test runs for one minute.\\n"""		3599473	0					
ANR	3599543	PrimaryExpression	"""This test runs for one minute.\\n"""		3599473	0					
ANR	3599544	ExpressionStatement	child = fork ( )	44:2:1502:1516	3599473	6	True				
ANR	3599545	AssignmentExpression	child = fork ( )		3599473	0		=			
ANR	3599546	Identifier	child		3599473	0					
ANR	3599547	CallExpression	fork ( )		3599473	1					
ANR	3599548	Callee	fork		3599473	0					
ANR	3599549	Identifier	fork		3599473	0					
ANR	3599550	ArgumentList			3599473	1					
ANR	3599551	IfStatement	if ( ! child )		3599473	7					
ANR	3599552	Condition	! child	45:7:1525:1530	3599473	0	True				
ANR	3599553	UnaryOperationExpression	! child		3599473	0					
ANR	3599554	UnaryOperator	!		3599473	0					
ANR	3599555	Identifier	child		3599473	1					
ANR	3599556	CompoundStatement		21:16:482:482	3599473	1					
ANR	3599557	ExpressionStatement	"kill ( getpid ( ) , SIGSTOP )"	48:4:1683:1706	3599473	0	True				
ANR	3599558	CallExpression	"kill ( getpid ( ) , SIGSTOP )"		3599473	0					
ANR	3599559	Callee	kill		3599473	0					
ANR	3599560	Identifier	kill		3599473	0					
ANR	3599561	ArgumentList	getpid ( )		3599473	1					
ANR	3599562	Argument	getpid ( )		3599473	0					
ANR	3599563	CallExpression	getpid ( )		3599473	0					
ANR	3599564	Callee	getpid		3599473	0					
ANR	3599565	Identifier	getpid		3599473	0					
ANR	3599566	ArgumentList			3599473	1					
ANR	3599567	Argument	SIGSTOP		3599473	1					
ANR	3599568	Identifier	SIGSTOP		3599473	0					
ANR	3599569	WhileStatement	while ( 1 )		3599473	1					
ANR	3599570	Condition	1	49:10:1718:1718	3599473	0	True				
ANR	3599571	PrimaryExpression	1		3599473	0					
ANR	3599572	CompoundStatement		25:12:668:668	3599473	1					
ANR	3599573	IfStatement	if ( child < 0 )		3599473	8					
ANR	3599574	Condition	child < 0	56:5:1770:1778	3599473	0	True				
ANR	3599575	RelationalExpression	child < 0		3599473	0		<			
ANR	3599576	Identifier	child		3599473	0					
ANR	3599577	PrimaryExpression	0		3599473	1					
ANR	3599578	CompoundStatement		32:15:728:728	3599473	1					
ANR	3599579	ExpressionStatement	"perror ( ""Error forking"" )"	57:4:1786:1809	3599473	0	True				
ANR	3599580	CallExpression	"perror ( ""Error forking"" )"		3599473	0					
ANR	3599581	Callee	perror		3599473	0					
ANR	3599582	Identifier	perror		3599473	0					
ANR	3599583	ArgumentList	"""Error forking"""		3599473	1					
ANR	3599584	Argument	"""Error forking"""		3599473	0					
ANR	3599585	PrimaryExpression	"""Error forking"""		3599473	0					
ANR	3599586	IfStatement	"if ( ProcAPI :: getProcInfo ( child , pi_s , status ) == PROCAPI_FAILURE )"		3599473	9					
ANR	3599587	Condition	"ProcAPI :: getProcInfo ( child , pi_s , status ) == PROCAPI_FAILURE"	61:6:1827:1889	3599473	0	True				
ANR	3599588	EqualityExpression	"ProcAPI :: getProcInfo ( child , pi_s , status ) == PROCAPI_FAILURE"		3599473	0		==			
ANR	3599589	CallExpression	"ProcAPI :: getProcInfo ( child , pi_s , status )"		3599473	0					
ANR	3599590	Callee	ProcAPI :: getProcInfo		3599473	0					
ANR	3599591	Identifier	ProcAPI :: getProcInfo		3599473	0					
ANR	3599592	ArgumentList	child		3599473	1					
ANR	3599593	Argument	child		3599473	0					
ANR	3599594	Identifier	child		3599473	0					
ANR	3599595	Argument	pi_s		3599473	1					
ANR	3599596	Identifier	pi_s		3599473	0					
ANR	3599597	Argument	status		3599473	2					
ANR	3599598	Identifier	status		3599473	0					
ANR	3599599	Identifier	PROCAPI_FAILURE		3599473	1					
ANR	3599600	CompoundStatement		37:70:839:839	3599473	1					
ANR	3599601	ExpressionStatement	"printf ( ""Error:\\n"" )"	62:4:1897:1915	3599473	0	True				
ANR	3599602	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599603	Callee	printf		3599473	0					
ANR	3599604	Identifier	printf		3599473	0					
ANR	3599605	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599606	Argument	"""Error:\\n"""		3599473	0					
ANR	3599607	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599608	ExpressionStatement	"printf ( ""Unable to getProcInfo for process %d\\n"" , child )"	63:4:1921:1976	3599473	1	True				
ANR	3599609	CallExpression	"printf ( ""Unable to getProcInfo for process %d\\n"" , child )"		3599473	0					
ANR	3599610	Callee	printf		3599473	0					
ANR	3599611	Identifier	printf		3599473	0					
ANR	3599612	ArgumentList	"""Unable to getProcInfo for process %d\\n"""		3599473	1					
ANR	3599613	Argument	"""Unable to getProcInfo for process %d\\n"""		3599473	0					
ANR	3599614	PrimaryExpression	"""Unable to getProcInfo for process %d\\n"""		3599473	0					
ANR	3599615	Argument	child		3599473	1					
ANR	3599616	Identifier	child		3599473	0					
ANR	3599617	ExpressionStatement	success = - 1	64:4:1982:1994	3599473	2	True				
ANR	3599618	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599619	Identifier	success		3599473	0					
ANR	3599620	UnaryOperationExpression	- 1		3599473	1					
ANR	3599621	UnaryOperator	-		3599473	0					
ANR	3599622	PrimaryExpression	1		3599473	1					
ANR	3599623	ForStatement	for ( int i = 0 ; i < 3 ; i ++ )		3599473	10					
ANR	3599624	ForInit	int i = 0 ;	68:6:2012:2021	3599473	0	True				
ANR	3599625	IdentifierDeclStatement	int i = 0 ;		3599473	0					
ANR	3599626	IdentifierDecl	i = 0		3599473	0					
ANR	3599627	IdentifierDeclType	int		3599473	0					
ANR	3599628	Identifier	i		3599473	1					
ANR	3599629	AssignmentExpression	i = 0		3599473	2		=			
ANR	3599630	Identifier	i		3599473	0					
ANR	3599631	PrimaryExpression	0		3599473	1					
ANR	3599632	Condition	i < 3	68:17:2023:2027	3599473	1	True				
ANR	3599633	RelationalExpression	i < 3		3599473	0		<			
ANR	3599634	Identifier	i		3599473	0					
ANR	3599635	PrimaryExpression	3		3599473	1					
ANR	3599636	PostIncDecOperationExpression	i ++	68:24:2030:2032	3599473	2	True				
ANR	3599637	Identifier	i		3599473	0					
ANR	3599638	IncDec	++		3599473	1					
ANR	3599639	CompoundStatement		44:28:982:982	3599473	3					
ANR	3599640	ExpressionStatement	"kill ( child , SIGCONT )"	71:4:2068:2088	3599473	0	True				
ANR	3599641	CallExpression	"kill ( child , SIGCONT )"		3599473	0					
ANR	3599642	Callee	kill		3599473	0					
ANR	3599643	Identifier	kill		3599473	0					
ANR	3599644	ArgumentList	child		3599473	1					
ANR	3599645	Argument	child		3599473	0					
ANR	3599646	Identifier	child		3599473	0					
ANR	3599647	Argument	SIGCONT		3599473	1					
ANR	3599648	Identifier	SIGCONT		3599473	0					
ANR	3599649	IfStatement	if ( verbose )		3599473	1					
ANR	3599650	Condition	verbose	72:7:2097:2103	3599473	0	True				
ANR	3599651	Identifier	verbose		3599473	0					
ANR	3599652	CompoundStatement		48:15:1053:1053	3599473	1					
ANR	3599653	ExpressionStatement	"printf ( ""Child is running\\n"" )"	73:6:2113:2141	3599473	0	True				
ANR	3599654	CallExpression	"printf ( ""Child is running\\n"" )"		3599473	0					
ANR	3599655	Callee	printf		3599473	0					
ANR	3599656	Identifier	printf		3599473	0					
ANR	3599657	ArgumentList	"""Child is running\\n"""		3599473	1					
ANR	3599658	Argument	"""Child is running\\n"""		3599473	0					
ANR	3599659	PrimaryExpression	"""Child is running\\n"""		3599473	0					
ANR	3599660	ExpressionStatement	sleep ( 5 )	77:4:2210:2218	3599473	2	True				
ANR	3599661	CallExpression	sleep ( 5 )		3599473	0					
ANR	3599662	Callee	sleep		3599473	0					
ANR	3599663	Identifier	sleep		3599473	0					
ANR	3599664	ArgumentList	5		3599473	1					
ANR	3599665	Argument	5		3599473	0					
ANR	3599666	PrimaryExpression	5		3599473	0					
ANR	3599667	IfStatement	"if ( ProcAPI :: getProcInfo ( child , pi_r , status ) == PROCAPI_FAILURE )"		3599473	3					
ANR	3599668	Condition	"ProcAPI :: getProcInfo ( child , pi_r , status ) == PROCAPI_FAILURE"	78:8:2228:2290	3599473	0	True				
ANR	3599669	EqualityExpression	"ProcAPI :: getProcInfo ( child , pi_r , status ) == PROCAPI_FAILURE"		3599473	0		==			
ANR	3599670	CallExpression	"ProcAPI :: getProcInfo ( child , pi_r , status )"		3599473	0					
ANR	3599671	Callee	ProcAPI :: getProcInfo		3599473	0					
ANR	3599672	Identifier	ProcAPI :: getProcInfo		3599473	0					
ANR	3599673	ArgumentList	child		3599473	1					
ANR	3599674	Argument	child		3599473	0					
ANR	3599675	Identifier	child		3599473	0					
ANR	3599676	Argument	pi_r		3599473	1					
ANR	3599677	Identifier	pi_r		3599473	0					
ANR	3599678	Argument	status		3599473	2					
ANR	3599679	Identifier	status		3599473	0					
ANR	3599680	Identifier	PROCAPI_FAILURE		3599473	1					
ANR	3599681	CompoundStatement		54:72:1240:1240	3599473	1					
ANR	3599682	ExpressionStatement	"printf ( ""Error:\\n"" )"	79:6:2300:2318	3599473	0	True				
ANR	3599683	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599684	Callee	printf		3599473	0					
ANR	3599685	Identifier	printf		3599473	0					
ANR	3599686	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599687	Argument	"""Error:\\n"""		3599473	0					
ANR	3599688	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599689	ExpressionStatement	"printf ( ""Unable to getProcInfo for process %d\\n"" , child )"	80:6:2326:2381	3599473	1	True				
ANR	3599690	CallExpression	"printf ( ""Unable to getProcInfo for process %d\\n"" , child )"		3599473	0					
ANR	3599691	Callee	printf		3599473	0					
ANR	3599692	Identifier	printf		3599473	0					
ANR	3599693	ArgumentList	"""Unable to getProcInfo for process %d\\n"""		3599473	1					
ANR	3599694	Argument	"""Unable to getProcInfo for process %d\\n"""		3599473	0					
ANR	3599695	PrimaryExpression	"""Unable to getProcInfo for process %d\\n"""		3599473	0					
ANR	3599696	Argument	child		3599473	1					
ANR	3599697	Identifier	child		3599473	0					
ANR	3599698	ExpressionStatement	success = - 1	81:6:2389:2401	3599473	2	True				
ANR	3599699	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599700	Identifier	success		3599473	0					
ANR	3599701	UnaryOperationExpression	- 1		3599473	1					
ANR	3599702	UnaryOperator	-		3599473	0					
ANR	3599703	PrimaryExpression	1		3599473	1					
ANR	3599704	IfStatement	if ( verbose )		3599473	4					
ANR	3599705	Condition	verbose	83:7:2417:2423	3599473	0	True				
ANR	3599706	Identifier	verbose		3599473	0					
ANR	3599707	CompoundStatement		59:15:1373:1373	3599473	1					
ANR	3599708	ExpressionStatement	"printf ( ""\\n"" )"	84:6:2433:2446	3599473	0	True				
ANR	3599709	CallExpression	"printf ( ""\\n"" )"		3599473	0					
ANR	3599710	Callee	printf		3599473	0					
ANR	3599711	Identifier	printf		3599473	0					
ANR	3599712	ArgumentList	"""\\n"""		3599473	1					
ANR	3599713	Argument	"""\\n"""		3599473	0					
ANR	3599714	PrimaryExpression	"""\\n"""		3599473	0					
ANR	3599715	ExpressionStatement	ProcAPI :: printProcInfo ( pi_r )	85:6:2454:2485	3599473	1	True				
ANR	3599716	CallExpression	ProcAPI :: printProcInfo ( pi_r )		3599473	0					
ANR	3599717	Callee	ProcAPI :: printProcInfo		3599473	0					
ANR	3599718	Identifier	ProcAPI :: printProcInfo		3599473	0					
ANR	3599719	ArgumentList	pi_r		3599473	1					
ANR	3599720	Argument	pi_r		3599473	0					
ANR	3599721	Identifier	pi_r		3599473	0					
ANR	3599722	IfStatement	if ( pi_r -> pid != child )		3599473	5					
ANR	3599723	Condition	pi_r -> pid != child	87:7:2500:2517	3599473	0	True				
ANR	3599724	EqualityExpression	pi_r -> pid != child		3599473	0		!=			
ANR	3599725	PtrMemberAccess	pi_r -> pid		3599473	0					
ANR	3599726	Identifier	pi_r		3599473	0					
ANR	3599727	Identifier	pid		3599473	1					
ANR	3599728	Identifier	child		3599473	1					
ANR	3599729	CompoundStatement		63:26:1467:1467	3599473	1					
ANR	3599730	ExpressionStatement	"printf ( ""Error:\\n"" )"	88:6:2527:2545	3599473	0	True				
ANR	3599731	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599732	Callee	printf		3599473	0					
ANR	3599733	Identifier	printf		3599473	0					
ANR	3599734	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599735	Argument	"""Error:\\n"""		3599473	0					
ANR	3599736	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599737	ExpressionStatement	"printf ( ""process pid %d does not match that returned in procinfo %d\\n"" , child , pi_r -> pid )"	89:6:2553:2641	3599473	1	True				
ANR	3599738	CallExpression	"printf ( ""process pid %d does not match that returned in procinfo %d\\n"" , child , pi_r -> pid )"		3599473	0					
ANR	3599739	Callee	printf		3599473	0					
ANR	3599740	Identifier	printf		3599473	0					
ANR	3599741	ArgumentList	"""process pid %d does not match that returned in procinfo %d\\n"""		3599473	1					
ANR	3599742	Argument	"""process pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599743	PrimaryExpression	"""process pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599744	Argument	child		3599473	1					
ANR	3599745	Identifier	child		3599473	0					
ANR	3599746	Argument	pi_r -> pid		3599473	2					
ANR	3599747	PtrMemberAccess	pi_r -> pid		3599473	0					
ANR	3599748	Identifier	pi_r		3599473	0					
ANR	3599749	Identifier	pid		3599473	1					
ANR	3599750	ExpressionStatement	success = - 1	90:6:2649:2661	3599473	2	True				
ANR	3599751	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599752	Identifier	success		3599473	0					
ANR	3599753	UnaryOperationExpression	- 1		3599473	1					
ANR	3599754	UnaryOperator	-		3599473	0					
ANR	3599755	PrimaryExpression	1		3599473	1					
ANR	3599756	IfStatement	if ( pi_r -> ppid != getpid ( ) )		3599473	6					
ANR	3599757	Condition	pi_r -> ppid != getpid ( )	92:7:2676:2697	3599473	0	True				
ANR	3599758	EqualityExpression	pi_r -> ppid != getpid ( )		3599473	0		!=			
ANR	3599759	PtrMemberAccess	pi_r -> ppid		3599473	0					
ANR	3599760	Identifier	pi_r		3599473	0					
ANR	3599761	Identifier	ppid		3599473	1					
ANR	3599762	CallExpression	getpid ( )		3599473	1					
ANR	3599763	Callee	getpid		3599473	0					
ANR	3599764	Identifier	getpid		3599473	0					
ANR	3599765	ArgumentList			3599473	1					
ANR	3599766	CompoundStatement		68:30:1647:1647	3599473	1					
ANR	3599767	ExpressionStatement	"printf ( ""Error:\\n"" )"	93:6:2707:2725	3599473	0	True				
ANR	3599768	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599769	Callee	printf		3599473	0					
ANR	3599770	Identifier	printf		3599473	0					
ANR	3599771	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599772	Argument	"""Error:\\n"""		3599473	0					
ANR	3599773	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599774	ExpressionStatement	"printf ( ""parent pid %d does not match that returned in procinfo %d\\n"" , getpid ( ) , pi_r -> ppid )"	94:6:2733:2824	3599473	1	True				
ANR	3599775	CallExpression	"printf ( ""parent pid %d does not match that returned in procinfo %d\\n"" , getpid ( ) , pi_r -> ppid )"		3599473	0					
ANR	3599776	Callee	printf		3599473	0					
ANR	3599777	Identifier	printf		3599473	0					
ANR	3599778	ArgumentList	"""parent pid %d does not match that returned in procinfo %d\\n"""		3599473	1					
ANR	3599779	Argument	"""parent pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599780	PrimaryExpression	"""parent pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599781	Argument	getpid ( )		3599473	1					
ANR	3599782	CallExpression	getpid ( )		3599473	0					
ANR	3599783	Callee	getpid		3599473	0					
ANR	3599784	Identifier	getpid		3599473	0					
ANR	3599785	ArgumentList			3599473	1					
ANR	3599786	Argument	pi_r -> ppid		3599473	2					
ANR	3599787	PtrMemberAccess	pi_r -> ppid		3599473	0					
ANR	3599788	Identifier	pi_r		3599473	0					
ANR	3599789	Identifier	ppid		3599473	1					
ANR	3599790	ExpressionStatement	success = - 1	95:6:2832:2844	3599473	2	True				
ANR	3599791	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599792	Identifier	success		3599473	0					
ANR	3599793	UnaryOperationExpression	- 1		3599473	1					
ANR	3599794	UnaryOperator	-		3599473	0					
ANR	3599795	PrimaryExpression	1		3599473	1					
ANR	3599796	ExpressionStatement	"kill ( child , SIGSTOP )"	99:4:2887:2907	3599473	7	True				
ANR	3599797	CallExpression	"kill ( child , SIGSTOP )"		3599473	0					
ANR	3599798	Callee	kill		3599473	0					
ANR	3599799	Identifier	kill		3599473	0					
ANR	3599800	ArgumentList	child		3599473	1					
ANR	3599801	Argument	child		3599473	0					
ANR	3599802	Identifier	child		3599473	0					
ANR	3599803	Argument	SIGSTOP		3599473	1					
ANR	3599804	Identifier	SIGSTOP		3599473	0					
ANR	3599805	IfStatement	if ( verbose )		3599473	8					
ANR	3599806	Condition	verbose	100:7:2916:2922	3599473	0	True				
ANR	3599807	Identifier	verbose		3599473	0					
ANR	3599808	CompoundStatement		76:15:1872:1872	3599473	1					
ANR	3599809	ExpressionStatement	"printf ( ""Child is stopped\\n"" )"	101:6:2932:2960	3599473	0	True				
ANR	3599810	CallExpression	"printf ( ""Child is stopped\\n"" )"		3599473	0					
ANR	3599811	Callee	printf		3599473	0					
ANR	3599812	Identifier	printf		3599473	0					
ANR	3599813	ArgumentList	"""Child is stopped\\n"""		3599473	1					
ANR	3599814	Argument	"""Child is stopped\\n"""		3599473	0					
ANR	3599815	PrimaryExpression	"""Child is stopped\\n"""		3599473	0					
ANR	3599816	ExpressionStatement	sleep ( 5 )	104:4:3032:3040	3599473	9	True				
ANR	3599817	CallExpression	sleep ( 5 )		3599473	0					
ANR	3599818	Callee	sleep		3599473	0					
ANR	3599819	Identifier	sleep		3599473	0					
ANR	3599820	ArgumentList	5		3599473	1					
ANR	3599821	Argument	5		3599473	0					
ANR	3599822	PrimaryExpression	5		3599473	0					
ANR	3599823	IfStatement	"if ( ProcAPI :: getProcInfo ( child , pi_s , status ) == PROCAPI_FAILURE )"		3599473	10					
ANR	3599824	Condition	"ProcAPI :: getProcInfo ( child , pi_s , status ) == PROCAPI_FAILURE"	105:8:3050:3112	3599473	0	True				
ANR	3599825	EqualityExpression	"ProcAPI :: getProcInfo ( child , pi_s , status ) == PROCAPI_FAILURE"		3599473	0		==			
ANR	3599826	CallExpression	"ProcAPI :: getProcInfo ( child , pi_s , status )"		3599473	0					
ANR	3599827	Callee	ProcAPI :: getProcInfo		3599473	0					
ANR	3599828	Identifier	ProcAPI :: getProcInfo		3599473	0					
ANR	3599829	ArgumentList	child		3599473	1					
ANR	3599830	Argument	child		3599473	0					
ANR	3599831	Identifier	child		3599473	0					
ANR	3599832	Argument	pi_s		3599473	1					
ANR	3599833	Identifier	pi_s		3599473	0					
ANR	3599834	Argument	status		3599473	2					
ANR	3599835	Identifier	status		3599473	0					
ANR	3599836	Identifier	PROCAPI_FAILURE		3599473	1					
ANR	3599837	CompoundStatement		81:73:2063:2063	3599473	1					
ANR	3599838	ExpressionStatement	"printf ( ""Error:\\n"" )"	106:6:3123:3141	3599473	0	True				
ANR	3599839	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599840	Callee	printf		3599473	0					
ANR	3599841	Identifier	printf		3599473	0					
ANR	3599842	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599843	Argument	"""Error:\\n"""		3599473	0					
ANR	3599844	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599845	ExpressionStatement	"printf ( ""Unable to getProcInfo for process %d\\n"" , child )"	107:6:3149:3204	3599473	1	True				
ANR	3599846	CallExpression	"printf ( ""Unable to getProcInfo for process %d\\n"" , child )"		3599473	0					
ANR	3599847	Callee	printf		3599473	0					
ANR	3599848	Identifier	printf		3599473	0					
ANR	3599849	ArgumentList	"""Unable to getProcInfo for process %d\\n"""		3599473	1					
ANR	3599850	Argument	"""Unable to getProcInfo for process %d\\n"""		3599473	0					
ANR	3599851	PrimaryExpression	"""Unable to getProcInfo for process %d\\n"""		3599473	0					
ANR	3599852	Argument	child		3599473	1					
ANR	3599853	Identifier	child		3599473	0					
ANR	3599854	ExpressionStatement	success = - 1	108:6:3212:3224	3599473	2	True				
ANR	3599855	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599856	Identifier	success		3599473	0					
ANR	3599857	UnaryOperationExpression	- 1		3599473	1					
ANR	3599858	UnaryOperator	-		3599473	0					
ANR	3599859	PrimaryExpression	1		3599473	1					
ANR	3599860	IfStatement	if ( verbose )		3599473	11					
ANR	3599861	Condition	verbose	110:7:3240:3246	3599473	0	True				
ANR	3599862	Identifier	verbose		3599473	0					
ANR	3599863	CompoundStatement		86:15:2196:2196	3599473	1					
ANR	3599864	ExpressionStatement	"printf ( ""\\n"" )"	111:6:3256:3269	3599473	0	True				
ANR	3599865	CallExpression	"printf ( ""\\n"" )"		3599473	0					
ANR	3599866	Callee	printf		3599473	0					
ANR	3599867	Identifier	printf		3599473	0					
ANR	3599868	ArgumentList	"""\\n"""		3599473	1					
ANR	3599869	Argument	"""\\n"""		3599473	0					
ANR	3599870	PrimaryExpression	"""\\n"""		3599473	0					
ANR	3599871	ExpressionStatement	ProcAPI :: printProcInfo ( pi_s )	112:6:3277:3308	3599473	1	True				
ANR	3599872	CallExpression	ProcAPI :: printProcInfo ( pi_s )		3599473	0					
ANR	3599873	Callee	ProcAPI :: printProcInfo		3599473	0					
ANR	3599874	Identifier	ProcAPI :: printProcInfo		3599473	0					
ANR	3599875	ArgumentList	pi_s		3599473	1					
ANR	3599876	Argument	pi_s		3599473	0					
ANR	3599877	Identifier	pi_s		3599473	0					
ANR	3599878	IfStatement	if ( pi_s -> pid != child )		3599473	12					
ANR	3599879	Condition	pi_s -> pid != child	115:7:3349:3366	3599473	0	True				
ANR	3599880	EqualityExpression	pi_s -> pid != child		3599473	0		!=			
ANR	3599881	PtrMemberAccess	pi_s -> pid		3599473	0					
ANR	3599882	Identifier	pi_s		3599473	0					
ANR	3599883	Identifier	pid		3599473	1					
ANR	3599884	Identifier	child		3599473	1					
ANR	3599885	CompoundStatement		91:26:2316:2316	3599473	1					
ANR	3599886	ExpressionStatement	"printf ( ""Error:\\n"" )"	116:6:3376:3394	3599473	0	True				
ANR	3599887	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599888	Callee	printf		3599473	0					
ANR	3599889	Identifier	printf		3599473	0					
ANR	3599890	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599891	Argument	"""Error:\\n"""		3599473	0					
ANR	3599892	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599893	ExpressionStatement	"printf ( ""process pid %d does not match that returned in procinfo %d\\n"" , child , pi_s -> pid )"	117:6:3402:3490	3599473	1	True				
ANR	3599894	CallExpression	"printf ( ""process pid %d does not match that returned in procinfo %d\\n"" , child , pi_s -> pid )"		3599473	0					
ANR	3599895	Callee	printf		3599473	0					
ANR	3599896	Identifier	printf		3599473	0					
ANR	3599897	ArgumentList	"""process pid %d does not match that returned in procinfo %d\\n"""		3599473	1					
ANR	3599898	Argument	"""process pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599899	PrimaryExpression	"""process pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599900	Argument	child		3599473	1					
ANR	3599901	Identifier	child		3599473	0					
ANR	3599902	Argument	pi_s -> pid		3599473	2					
ANR	3599903	PtrMemberAccess	pi_s -> pid		3599473	0					
ANR	3599904	Identifier	pi_s		3599473	0					
ANR	3599905	Identifier	pid		3599473	1					
ANR	3599906	ExpressionStatement	success = - 1	118:6:3498:3510	3599473	2	True				
ANR	3599907	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599908	Identifier	success		3599473	0					
ANR	3599909	UnaryOperationExpression	- 1		3599473	1					
ANR	3599910	UnaryOperator	-		3599473	0					
ANR	3599911	PrimaryExpression	1		3599473	1					
ANR	3599912	IfStatement	if ( pi_s -> ppid != getpid ( ) )		3599473	13					
ANR	3599913	Condition	pi_s -> ppid != getpid ( )	120:7:3525:3546	3599473	0	True				
ANR	3599914	EqualityExpression	pi_s -> ppid != getpid ( )		3599473	0		!=			
ANR	3599915	PtrMemberAccess	pi_s -> ppid		3599473	0					
ANR	3599916	Identifier	pi_s		3599473	0					
ANR	3599917	Identifier	ppid		3599473	1					
ANR	3599918	CallExpression	getpid ( )		3599473	1					
ANR	3599919	Callee	getpid		3599473	0					
ANR	3599920	Identifier	getpid		3599473	0					
ANR	3599921	ArgumentList			3599473	1					
ANR	3599922	CompoundStatement		96:30:2496:2496	3599473	1					
ANR	3599923	ExpressionStatement	"printf ( ""Error:\\n"" )"	121:6:3556:3574	3599473	0	True				
ANR	3599924	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599925	Callee	printf		3599473	0					
ANR	3599926	Identifier	printf		3599473	0					
ANR	3599927	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599928	Argument	"""Error:\\n"""		3599473	0					
ANR	3599929	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599930	ExpressionStatement	"printf ( ""parent pid %d does not match that returned in procinfo %d\\n"" , getpid ( ) , pi_s -> ppid )"	122:6:3582:3673	3599473	1	True				
ANR	3599931	CallExpression	"printf ( ""parent pid %d does not match that returned in procinfo %d\\n"" , getpid ( ) , pi_s -> ppid )"		3599473	0					
ANR	3599932	Callee	printf		3599473	0					
ANR	3599933	Identifier	printf		3599473	0					
ANR	3599934	ArgumentList	"""parent pid %d does not match that returned in procinfo %d\\n"""		3599473	1					
ANR	3599935	Argument	"""parent pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599936	PrimaryExpression	"""parent pid %d does not match that returned in procinfo %d\\n"""		3599473	0					
ANR	3599937	Argument	getpid ( )		3599473	1					
ANR	3599938	CallExpression	getpid ( )		3599473	0					
ANR	3599939	Callee	getpid		3599473	0					
ANR	3599940	Identifier	getpid		3599473	0					
ANR	3599941	ArgumentList			3599473	1					
ANR	3599942	Argument	pi_s -> ppid		3599473	2					
ANR	3599943	PtrMemberAccess	pi_s -> ppid		3599473	0					
ANR	3599944	Identifier	pi_s		3599473	0					
ANR	3599945	Identifier	ppid		3599473	1					
ANR	3599946	ExpressionStatement	success = - 1	123:6:3681:3693	3599473	2	True				
ANR	3599947	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599948	Identifier	success		3599473	0					
ANR	3599949	UnaryOperationExpression	- 1		3599473	1					
ANR	3599950	UnaryOperator	-		3599473	0					
ANR	3599951	PrimaryExpression	1		3599473	1					
ANR	3599952	IfStatement	if ( pi_s -> cpuusage > pi_r -> cpuusage )		3599473	14					
ANR	3599953	Condition	pi_s -> cpuusage > pi_r -> cpuusage	128:7:3834:3864	3599473	0	True				
ANR	3599954	RelationalExpression	pi_s -> cpuusage > pi_r -> cpuusage		3599473	0		>			
ANR	3599955	PtrMemberAccess	pi_s -> cpuusage		3599473	0					
ANR	3599956	Identifier	pi_s		3599473	0					
ANR	3599957	Identifier	cpuusage		3599473	1					
ANR	3599958	PtrMemberAccess	pi_r -> cpuusage		3599473	1					
ANR	3599959	Identifier	pi_r		3599473	0					
ANR	3599960	Identifier	cpuusage		3599473	1					
ANR	3599961	CompoundStatement		104:39:2814:2814	3599473	1					
ANR	3599962	ExpressionStatement	"printf ( ""Error:\\n"" )"	129:6:3874:3892	3599473	0	True				
ANR	3599963	CallExpression	"printf ( ""Error:\\n"" )"		3599473	0					
ANR	3599964	Callee	printf		3599473	0					
ANR	3599965	Identifier	printf		3599473	0					
ANR	3599966	ArgumentList	"""Error:\\n"""		3599473	1					
ANR	3599967	Argument	"""Error:\\n"""		3599473	0					
ANR	3599968	PrimaryExpression	"""Error:\\n"""		3599473	0					
ANR	3599969	ExpressionStatement	"printf ( ""cpuusage of the process while stopped %f higher than while running %f\\n"" , pi_s -> cpuusage , pi_r -> cpuusage )"	130:6:3900:4013	3599473	1	True				
ANR	3599970	CallExpression	"printf ( ""cpuusage of the process while stopped %f higher than while running %f\\n"" , pi_s -> cpuusage , pi_r -> cpuusage )"		3599473	0					
ANR	3599971	Callee	printf		3599473	0					
ANR	3599972	Identifier	printf		3599473	0					
ANR	3599973	ArgumentList	"""cpuusage of the process while stopped %f higher than while running %f\\n"""		3599473	1					
ANR	3599974	Argument	"""cpuusage of the process while stopped %f higher than while running %f\\n"""		3599473	0					
ANR	3599975	PrimaryExpression	"""cpuusage of the process while stopped %f higher than while running %f\\n"""		3599473	0					
ANR	3599976	Argument	pi_s -> cpuusage		3599473	1					
ANR	3599977	PtrMemberAccess	pi_s -> cpuusage		3599473	0					
ANR	3599978	Identifier	pi_s		3599473	0					
ANR	3599979	Identifier	cpuusage		3599473	1					
ANR	3599980	Argument	pi_r -> cpuusage		3599473	2					
ANR	3599981	PtrMemberAccess	pi_r -> cpuusage		3599473	0					
ANR	3599982	Identifier	pi_r		3599473	0					
ANR	3599983	Identifier	cpuusage		3599473	1					
ANR	3599984	ExpressionStatement	success = - 1	131:6:4021:4033	3599473	2	True				
ANR	3599985	AssignmentExpression	success = - 1		3599473	0		=			
ANR	3599986	Identifier	success		3599473	0					
ANR	3599987	UnaryOperationExpression	- 1		3599473	1					
ANR	3599988	UnaryOperator	-		3599473	0					
ANR	3599989	PrimaryExpression	1		3599473	1					
ANR	3599990	ExpressionStatement	"kill ( child , SIGKILL )"	137:2:4231:4251	3599473	11	True				
ANR	3599991	CallExpression	"kill ( child , SIGKILL )"		3599473	0					
ANR	3599992	Callee	kill		3599473	0					
ANR	3599993	Identifier	kill		3599473	0					
ANR	3599994	ArgumentList	child		3599473	1					
ANR	3599995	Argument	child		3599473	0					
ANR	3599996	Identifier	child		3599473	0					
ANR	3599997	Argument	SIGKILL		3599473	1					
ANR	3599998	Identifier	SIGKILL		3599473	0					
ANR	3599999	ReturnStatement	return success ;	139:2:4258:4272	3599473	12	True				
ANR	3600000	Identifier	success		3599473	0					
ANR	3600001	ReturnType	int		3599473	1					
ANR	3600002	Identifier	cpuusage_test		3599473	2					
ANR	3600003	ParameterList	bool verbose		3599473	3					
ANR	3600004	Parameter	bool verbose	25:18:1037:1048	3599473	0	True				
ANR	3600005	ParameterType	bool		3599473	0					
ANR	3600006	Identifier	verbose		3599473	1					
ANR	3600007	CFGEntryNode	ENTRY		3599473		True				
ANR	3600008	CFGExitNode	EXIT		3599473		True				
ANR	3600009	Symbol	* pi_r		3599473						
ANR	3600010	Symbol	* pi_s		3599473						
ANR	3600011	Symbol	pi_s -> cpuusage		3599473						
ANR	3600012	Symbol	NULL		3599473						
ANR	3600013	Symbol	pi_r -> cpuusage		3599473						
ANR	3600014	Symbol	PROCAPI_FAILURE		3599473						
ANR	3600015	Symbol	i		3599473						
ANR	3600016	Symbol	pi_s -> pid		3599473						
ANR	3600017	Symbol	SIGKILL		3599473						
ANR	3600018	Symbol	verbose		3599473						
ANR	3600019	Symbol	pi_s -> ppid		3599473						
ANR	3600020	Symbol	fork		3599473						
ANR	3600021	Symbol	ProcAPI :: getProcInfo		3599473						
ANR	3600022	Symbol	pi_r -> pid		3599473						
ANR	3600023	Symbol	pi_r -> ppid		3599473						
ANR	3600024	Symbol	SIGSTOP		3599473						
ANR	3600025	Symbol	success		3599473						
ANR	3600026	Symbol	pi_r		3599473						
ANR	3600027	Symbol	pi_s		3599473						
ANR	3600028	Symbol	SIGCONT		3599473						
ANR	3600029	Symbol	getpid		3599473						
ANR	3600030	Symbol	status		3599473						
ANR	3600031	Symbol	child		3599473						
