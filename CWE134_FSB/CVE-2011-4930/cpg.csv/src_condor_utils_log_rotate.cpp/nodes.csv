command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4810881	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_log_rotate.cpp								
ANR	4810882	DeclStmt									
ANR	4810883	Decl							char	char [ PATH_MAX ]	searchLogName
ANR	4810884	DeclStmt									
ANR	4810885	Decl							char	char [ PATH_MAX ]	logBaseName
ANR	4810886	DeclStmt									
ANR	4810887	Decl							char	char [ PATH_MAX ]	baseDirName
ANR	4810888	DeclStmt									
ANR	4810889	Decl							int	int	isInitialized
ANR	4810890	DeclStmt									
ANR	4810891	Decl							int	int	numLogs
ANR	4810892	DeclStmt									
ANR	4810893	Decl							char	char * ( )	createTimestampString
ANR	4810894	Function	scandirectory	45:0:1264:2231							
ANR	4810895	FunctionDef	"scandirectory (const char * dir , struct dirent * * * namelist , int ( * select ) ( const struct dirent * ) , int ( * compar ) ( const void * , const void * ))"		4810894	0					
ANR	4810896	CompoundStatement		47:50:1426:2231	4810894	0					
ANR	4810897	IdentifierDeclStatement	DIR * d ;	48:1:1429:1435	4810894	0	True				
ANR	4810898	IdentifierDecl	* d		4810894	0					
ANR	4810899	IdentifierDeclType	DIR *		4810894	0					
ANR	4810900	Identifier	d		4810894	1					
ANR	4810901	IdentifierDeclStatement	struct dirent * entry ;	49:1:1438:1458	4810894	1	True				
ANR	4810902	IdentifierDecl	* entry		4810894	0					
ANR	4810903	IdentifierDeclType	struct dirent *		4810894	0					
ANR	4810904	Identifier	entry		4810894	1					
ANR	4810905	Statement	register	50:1:1461:1468	4810894	2	True				
ANR	4810906	IdentifierDeclStatement	int i = 0 ;	50:10:1470:1479	4810894	3	True				
ANR	4810907	IdentifierDecl	i = 0		4810894	0					
ANR	4810908	IdentifierDeclType	int		4810894	0					
ANR	4810909	Identifier	i		4810894	1					
ANR	4810910	AssignmentExpression	i = 0		4810894	2		=			
ANR	4810911	Identifier	i		4810894	0					
ANR	4810912	PrimaryExpression	0		4810894	1					
ANR	4810913	IdentifierDeclStatement	size_t entrysize ;	51:1:1482:1498	4810894	4	True				
ANR	4810914	IdentifierDecl	entrysize		4810894	0					
ANR	4810915	IdentifierDeclType	size_t		4810894	0					
ANR	4810916	Identifier	entrysize		4810894	1					
ANR	4810917	IfStatement	if ( ( d = opendir ( dir ) ) == NULL )		4810894	5					
ANR	4810918	Condition	( d = opendir ( dir ) ) == NULL	53:5:1506:1529	4810894	0	True				
ANR	4810919	EqualityExpression	( d = opendir ( dir ) ) == NULL		4810894	0		==			
ANR	4810920	AssignmentExpression	d = opendir ( dir )		4810894	0		=			
ANR	4810921	Identifier	d		4810894	0					
ANR	4810922	CallExpression	opendir ( dir )		4810894	1					
ANR	4810923	Callee	opendir		4810894	0					
ANR	4810924	Identifier	opendir		4810894	0					
ANR	4810925	ArgumentList	dir		4810894	1					
ANR	4810926	Argument	dir		4810894	0					
ANR	4810927	Identifier	dir		4810894	0					
ANR	4810928	Identifier	NULL		4810894	1					
ANR	4810929	ReturnStatement	return ( - 1 ) ;	54:2:1534:1544	4810894	1	True				
ANR	4810930	UnaryOperationExpression	- 1		4810894	0					
ANR	4810931	UnaryOperator	-		4810894	0					
ANR	4810932	PrimaryExpression	1		4810894	1					
ANR	4810933	ExpressionStatement	* namelist = NULL	56:1:1548:1562	4810894	6	True				
ANR	4810934	AssignmentExpression	* namelist = NULL		4810894	0		=			
ANR	4810935	UnaryOperationExpression	* namelist		4810894	0					
ANR	4810936	UnaryOperator	*		4810894	0					
ANR	4810937	Identifier	namelist		4810894	1					
ANR	4810938	Identifier	NULL		4810894	1					
ANR	4810939	WhileStatement	while ( ( entry = readdir ( d ) ) != NULL )		4810894	7					
ANR	4810940	Condition	( entry = readdir ( d ) ) != NULL	57:8:1572:1597	4810894	0	True				
ANR	4810941	EqualityExpression	( entry = readdir ( d ) ) != NULL		4810894	0		!=			
ANR	4810942	AssignmentExpression	entry = readdir ( d )		4810894	0		=			
ANR	4810943	Identifier	entry		4810894	0					
ANR	4810944	CallExpression	readdir ( d )		4810894	1					
ANR	4810945	Callee	readdir		4810894	0					
ANR	4810946	Identifier	readdir		4810894	0					
ANR	4810947	ArgumentList	d		4810894	1					
ANR	4810948	Argument	d		4810894	0					
ANR	4810949	Identifier	d		4810894	0					
ANR	4810950	Identifier	NULL		4810894	1					
ANR	4810951	CompoundStatement		11:36:173:173	4810894	1					
ANR	4810952	IfStatement	if ( select == NULL || ( select != NULL && ( * select ) ( entry ) ) )		4810894	0					
ANR	4810953	Condition	select == NULL || ( select != NULL && ( * select ) ( entry ) )	58:6:1608:1661	4810894	0	True				
ANR	4810954	OrExpression	select == NULL || ( select != NULL && ( * select ) ( entry ) )		4810894	0		||			
ANR	4810955	EqualityExpression	select == NULL		4810894	0		==			
ANR	4810956	Identifier	select		4810894	0					
ANR	4810957	Identifier	NULL		4810894	1					
ANR	4810958	AndExpression	select != NULL && ( * select ) ( entry )		4810894	1		&&			
ANR	4810959	EqualityExpression	select != NULL		4810894	0		!=			
ANR	4810960	Identifier	select		4810894	0					
ANR	4810961	Identifier	NULL		4810894	1					
ANR	4810962	CallExpression	( * select ) ( entry )		4810894	1					
ANR	4810963	Callee	* select		4810894	0					
ANR	4810964	UnaryOperationExpression	* select		4810894	0					
ANR	4810965	UnaryOperator	*		4810894	0					
ANR	4810966	Identifier	select		4810894	1					
ANR	4810967	ArgumentList	entry		4810894	1					
ANR	4810968	Argument	entry		4810894	0					
ANR	4810969	Identifier	entry		4810894	0					
ANR	4810970	CompoundStatement		12:62:237:237	4810894	1					
ANR	4810971	ExpressionStatement	"* namelist = ( struct dirent * * ) realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"	59:3:1669:1766	4810894	0	True				
ANR	4810972	AssignmentExpression	"* namelist = ( struct dirent * * ) realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"		4810894	0		=			
ANR	4810973	UnaryOperationExpression	* namelist		4810894	0					
ANR	4810974	UnaryOperator	*		4810894	0					
ANR	4810975	Identifier	namelist		4810894	1					
ANR	4810976	CastExpression	"( struct dirent * * ) realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"		4810894	1					
ANR	4810977	CastTarget	struct dirent * *		4810894	0					
ANR	4810978	CallExpression	"realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"		4810894	1					
ANR	4810979	Callee	realloc		4810894	0					
ANR	4810980	Identifier	realloc		4810894	0					
ANR	4810981	ArgumentList	( void * ) ( * namelist )		4810894	1					
ANR	4810982	Argument	( void * ) ( * namelist )		4810894	0					
ANR	4810983	CastExpression	( void * ) ( * namelist )		4810894	0					
ANR	4810984	CastTarget	void *		4810894	0					
ANR	4810985	UnaryOperationExpression	* namelist		4810894	1					
ANR	4810986	UnaryOperator	*		4810894	0					
ANR	4810987	Identifier	namelist		4810894	1					
ANR	4810988	Argument	( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) )		4810894	1					
ANR	4810989	CastExpression	( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) )		4810894	0					
ANR	4810990	CastTarget	size_t		4810894	0					
ANR	4810991	MultiplicativeExpression	( i + 1 ) * sizeof ( struct dirent * )		4810894	1		*			
ANR	4810992	AdditiveExpression	i + 1		4810894	0		+			
ANR	4810993	Identifier	i		4810894	0					
ANR	4810994	PrimaryExpression	1		4810894	1					
ANR	4810995	SizeofExpression	sizeof ( struct dirent * )		4810894	1					
ANR	4810996	Sizeof	sizeof		4810894	0					
ANR	4810997	SizeofOperand	struct dirent *		4810894	1					
ANR	4810998	IfStatement	if ( * namelist == NULL )		4810894	1					
ANR	4810999	Condition	* namelist == NULL	60:7:1775:1791	4810894	0	True				
ANR	4811000	EqualityExpression	* namelist == NULL		4810894	0		==			
ANR	4811001	UnaryOperationExpression	* namelist		4810894	0					
ANR	4811002	UnaryOperator	*		4810894	0					
ANR	4811003	Identifier	namelist		4810894	1					
ANR	4811004	Identifier	NULL		4810894	1					
ANR	4811005	ReturnStatement	return - 1 ;	61:4:1799:1808	4810894	1	True				
ANR	4811006	UnaryOperationExpression	- 1		4810894	0					
ANR	4811007	UnaryOperator	-		4810894	0					
ANR	4811008	PrimaryExpression	1		4810894	1					
ANR	4811009	ExpressionStatement	entrysize = sizeof ( struct dirent ) - sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1	62:3:1813:1890	4810894	2	True				
ANR	4811010	AssignmentExpression	entrysize = sizeof ( struct dirent ) - sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1		4810894	0		=			
ANR	4811011	Identifier	entrysize		4810894	0					
ANR	4811012	AdditiveExpression	sizeof ( struct dirent ) - sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1		4810894	1		-			
ANR	4811013	SizeofExpression	sizeof ( struct dirent )		4810894	0					
ANR	4811014	Sizeof	sizeof		4810894	0					
ANR	4811015	SizeofOperand	struct dirent		4810894	1					
ANR	4811016	AdditiveExpression	sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1		4810894	1		+			
ANR	4811017	SizeofExpression	sizeof ( entry -> d_name )		4810894	0					
ANR	4811018	Sizeof	sizeof		4810894	0					
ANR	4811019	PtrMemberAccess	entry -> d_name		4810894	1					
ANR	4811020	Identifier	entry		4810894	0					
ANR	4811021	Identifier	d_name		4810894	1					
ANR	4811022	AdditiveExpression	strlen ( entry -> d_name ) + 1		4810894	1		+			
ANR	4811023	CallExpression	strlen ( entry -> d_name )		4810894	0					
ANR	4811024	Callee	strlen		4810894	0					
ANR	4811025	Identifier	strlen		4810894	0					
ANR	4811026	ArgumentList	entry -> d_name		4810894	1					
ANR	4811027	Argument	entry -> d_name		4810894	0					
ANR	4811028	PtrMemberAccess	entry -> d_name		4810894	0					
ANR	4811029	Identifier	entry		4810894	0					
ANR	4811030	Identifier	d_name		4810894	1					
ANR	4811031	PrimaryExpression	1		4810894	1					
ANR	4811032	ExpressionStatement	( * namelist ) [ i ] = ( struct dirent * ) malloc ( entrysize )	63:3:1895:1944	4810894	3	True				
ANR	4811033	AssignmentExpression	( * namelist ) [ i ] = ( struct dirent * ) malloc ( entrysize )		4810894	0		=			
ANR	4811034	ArrayIndexing	( * namelist ) [ i ]		4810894	0					
ANR	4811035	UnaryOperationExpression	* namelist		4810894	0					
ANR	4811036	UnaryOperator	*		4810894	0					
ANR	4811037	Identifier	namelist		4810894	1					
ANR	4811038	Identifier	i		4810894	1					
ANR	4811039	CastExpression	( struct dirent * ) malloc ( entrysize )		4810894	1					
ANR	4811040	CastTarget	struct dirent *		4810894	0					
ANR	4811041	CallExpression	malloc ( entrysize )		4810894	1					
ANR	4811042	Callee	malloc		4810894	0					
ANR	4811043	Identifier	malloc		4810894	0					
ANR	4811044	ArgumentList	entrysize		4810894	1					
ANR	4811045	Argument	entrysize		4810894	0					
ANR	4811046	Identifier	entrysize		4810894	0					
ANR	4811047	IfStatement	if ( ( * namelist ) [ i ] == NULL )		4810894	4					
ANR	4811048	Condition	( * namelist ) [ i ] == NULL	64:7:1953:1974	4810894	0	True				
ANR	4811049	EqualityExpression	( * namelist ) [ i ] == NULL		4810894	0		==			
ANR	4811050	ArrayIndexing	( * namelist ) [ i ]		4810894	0					
ANR	4811051	UnaryOperationExpression	* namelist		4810894	0					
ANR	4811052	UnaryOperator	*		4810894	0					
ANR	4811053	Identifier	namelist		4810894	1					
ANR	4811054	Identifier	i		4810894	1					
ANR	4811055	Identifier	NULL		4810894	1					
ANR	4811056	ReturnStatement	return ( - 1 ) ;	65:4:1982:1992	4810894	1	True				
ANR	4811057	UnaryOperationExpression	- 1		4810894	0					
ANR	4811058	UnaryOperator	-		4810894	0					
ANR	4811059	PrimaryExpression	1		4810894	1					
ANR	4811060	ExpressionStatement	"memcpy ( ( * namelist ) [ i ] , entry , entrysize )"	66:3:1997:2037	4810894	5	True				
ANR	4811061	CallExpression	"memcpy ( ( * namelist ) [ i ] , entry , entrysize )"		4810894	0					
ANR	4811062	Callee	memcpy		4810894	0					
ANR	4811063	Identifier	memcpy		4810894	0					
ANR	4811064	ArgumentList	( * namelist ) [ i ]		4810894	1					
ANR	4811065	Argument	( * namelist ) [ i ]		4810894	0					
ANR	4811066	ArrayIndexing	( * namelist ) [ i ]		4810894	0					
ANR	4811067	UnaryOperationExpression	* namelist		4810894	0					
ANR	4811068	UnaryOperator	*		4810894	0					
ANR	4811069	Identifier	namelist		4810894	1					
ANR	4811070	Identifier	i		4810894	1					
ANR	4811071	Argument	entry		4810894	1					
ANR	4811072	Identifier	entry		4810894	0					
ANR	4811073	Argument	entrysize		4810894	2					
ANR	4811074	Identifier	entrysize		4810894	0					
ANR	4811075	ExpressionStatement	i ++	67:9:2048:2051	4810894	6	True				
ANR	4811076	PostIncDecOperationExpression	i ++		4810894	0					
ANR	4811077	Identifier	i		4810894	0					
ANR	4811078	IncDec	++		4810894	1					
ANR	4811079	IfStatement	if ( closedir ( d ) )		4810894	8					
ANR	4811080	Condition	closedir ( d )	70:5:2065:2075	4810894	0	True				
ANR	4811081	CallExpression	closedir ( d )		4810894	0					
ANR	4811082	Callee	closedir		4810894	0					
ANR	4811083	Identifier	closedir		4810894	0					
ANR	4811084	ArgumentList	d		4810894	1					
ANR	4811085	Argument	d		4810894	0					
ANR	4811086	Identifier	d		4810894	0					
ANR	4811087	ReturnStatement	return - 1 ;	71:4:2083:2092	4810894	1	True				
ANR	4811088	UnaryOperationExpression	- 1		4810894	0					
ANR	4811089	UnaryOperator	-		4810894	0					
ANR	4811090	PrimaryExpression	1		4810894	1					
ANR	4811091	IfStatement	if ( i == 0 )		4810894	9					
ANR	4811092	Condition	i == 0	72:5:2099:2104	4810894	0	True				
ANR	4811093	EqualityExpression	i == 0		4810894	0		==			
ANR	4811094	Identifier	i		4810894	0					
ANR	4811095	PrimaryExpression	0		4810894	1					
ANR	4811096	ReturnStatement	return - 1 ;	73:2:2110:2119	4810894	1	True				
ANR	4811097	UnaryOperationExpression	- 1		4810894	0					
ANR	4811098	UnaryOperator	-		4810894	0					
ANR	4811099	PrimaryExpression	1		4810894	1					
ANR	4811100	IfStatement	if ( compar != NULL )		4810894	10					
ANR	4811101	Condition	compar != NULL	74:5:2126:2139	4810894	0	True				
ANR	4811102	EqualityExpression	compar != NULL		4810894	0		!=			
ANR	4811103	Identifier	compar		4810894	0					
ANR	4811104	Identifier	NULL		4810894	1					
ANR	4811105	ExpressionStatement	"qsort ( ( void * ) ( * namelist ) , ( size_t ) i , sizeof ( struct dirent * ) , compar )"	75:5:2147:2217	4810894	1	True				
ANR	4811106	CallExpression	"qsort ( ( void * ) ( * namelist ) , ( size_t ) i , sizeof ( struct dirent * ) , compar )"		4810894	0					
ANR	4811107	Callee	qsort		4810894	0					
ANR	4811108	Identifier	qsort		4810894	0					
ANR	4811109	ArgumentList	( void * ) ( * namelist )		4810894	1					
ANR	4811110	Argument	( void * ) ( * namelist )		4810894	0					
ANR	4811111	CastExpression	( void * ) ( * namelist )		4810894	0					
ANR	4811112	CastTarget	void *		4810894	0					
ANR	4811113	UnaryOperationExpression	* namelist		4810894	1					
ANR	4811114	UnaryOperator	*		4810894	0					
ANR	4811115	Identifier	namelist		4810894	1					
ANR	4811116	Argument	( size_t ) i		4810894	1					
ANR	4811117	CastExpression	( size_t ) i		4810894	0					
ANR	4811118	CastTarget	size_t		4810894	0					
ANR	4811119	Identifier	i		4810894	1					
ANR	4811120	Argument	sizeof ( struct dirent * )		4810894	2					
ANR	4811121	SizeofExpression	sizeof ( struct dirent * )		4810894	0					
ANR	4811122	Sizeof	sizeof		4810894	0					
ANR	4811123	SizeofOperand	struct dirent *		4810894	1					
ANR	4811124	Argument	compar		4810894	3					
ANR	4811125	Identifier	compar		4810894	0					
ANR	4811126	ReturnStatement	return i ;	77:1:2221:2229	4810894	11	True				
ANR	4811127	Identifier	i		4810894	0					
ANR	4811128	ReturnType	int		4810894	1					
ANR	4811129	Identifier	scandirectory		4810894	2					
ANR	4811130	ParameterList	"const char * dir , struct dirent * * * namelist , int ( * select ) ( const struct dirent * ) , int ( * compar ) ( const void * , const void * )"		4810894	3					
ANR	4811131	Parameter	const char * dir	45:18:1282:1296	4810894	0	True				
ANR	4811132	ParameterType	const char *		4810894	0					
ANR	4811133	Identifier	dir		4810894	1					
ANR	4811134	Parameter	struct dirent * * * namelist	45:35:1299:1323	4810894	1	True				
ANR	4811135	ParameterType	struct dirent * * *		4810894	0					
ANR	4811136	Identifier	namelist		4810894	1					
ANR	4811137	Parameter	int ( * select ) ( const struct dirent * )	46:12:1338:1373	4810894	2	True				
ANR	4811138	ParameterType	(( const struct dirent * ) int) *		4810894	0					
ANR	4811139	Identifier	select		4810894	1					
ANR	4811140	Parameter	"int ( * compar ) ( const void * , const void * )"	47:8:1384:1422	4810894	3	True				
ANR	4811141	ParameterType	"(( const void * , const void * ) int) *"		4810894	0					
ANR	4811142	Identifier	compar		4810894	1					
ANR	4811143	CFGEntryNode	ENTRY		4810894		True				
ANR	4811144	CFGExitNode	EXIT		4810894		True				
ANR	4811145	Symbol	* * namelist		4810894						
ANR	4811146	Symbol	malloc		4810894						
ANR	4811147	Symbol	select		4810894						
ANR	4811148	Symbol	NULL		4810894						
ANR	4811149	Symbol	d		4810894						
ANR	4811150	Symbol	* namelist		4810894						
ANR	4811151	Symbol	* select		4810894						
ANR	4811152	Symbol	entrysize		4810894						
ANR	4811153	Symbol	i		4810894						
ANR	4811154	Symbol	realloc		4810894						
ANR	4811155	Symbol	dir		4810894						
ANR	4811156	Symbol	entry -> d_name		4810894						
ANR	4811157	Symbol	entry		4810894						
ANR	4811158	Symbol	strlen		4810894						
ANR	4811159	Symbol	readdir		4810894						
ANR	4811160	Symbol	* i		4810894						
ANR	4811161	Symbol	namelist		4810894						
ANR	4811162	Symbol	opendir		4810894						
ANR	4811163	Symbol	closedir		4810894						
ANR	4811164	Symbol	compar		4810894						
ANR	4811165	Symbol	* entry		4810894						
ANR	4811166	Function	doalphasort	80:0:2234:2500							
ANR	4811167	FunctionDef	"doalphasort (const void * a , const void * b)"		4811166	0					
ANR	4811168	CompoundStatement		80:46:2280:2500	4811166	0					
ANR	4811169	IdentifierDeclStatement	const struct dirent * * d1 = ( const struct dirent * * ) a ;	81:8:2290:2341	4811166	0	True				
ANR	4811170	IdentifierDecl	* * d1 = ( const struct dirent * * ) a		4811166	0					
ANR	4811171	IdentifierDeclType	const struct dirent * *		4811166	0					
ANR	4811172	Identifier	d1		4811166	1					
ANR	4811173	AssignmentExpression	* * d1 = ( const struct dirent * * ) a		4811166	2		=			
ANR	4811174	Identifier	d1		4811166	0					
ANR	4811175	CastExpression	( const struct dirent * * ) a		4811166	1					
ANR	4811176	CastTarget	const struct dirent * *		4811166	0					
ANR	4811177	Identifier	a		4811166	1					
ANR	4811178	IdentifierDeclStatement	const struct dirent * * d2 = ( const struct dirent * * ) b ;	82:8:2351:2402	4811166	1	True				
ANR	4811179	IdentifierDecl	* * d2 = ( const struct dirent * * ) b		4811166	0					
ANR	4811180	IdentifierDeclType	const struct dirent * *		4811166	0					
ANR	4811181	Identifier	d2		4811166	1					
ANR	4811182	AssignmentExpression	* * d2 = ( const struct dirent * * ) b		4811166	2		=			
ANR	4811183	Identifier	d2		4811166	0					
ANR	4811184	CastExpression	( const struct dirent * * ) b		4811166	1					
ANR	4811185	CastTarget	const struct dirent * *		4811166	0					
ANR	4811186	Identifier	b		4811166	1					
ANR	4811187	Statement	return	83:8:2414:2419	4811166	2	True				
ANR	4811188	Statement	(	83:14:2420:2420	4811166	3	True				
ANR	4811189	Statement	strcmp	83:15:2421:2426	4811166	4	True				
ANR	4811190	Statement	(	83:21:2427:2427	4811166	5	True				
ANR	4811191	Statement	const_cast	83:22:2428:2437	4811166	6	True				
ANR	4811192	Statement	<	83:32:2438:2438	4811166	7	True				
ANR	4811193	Statement	char	83:33:2439:2442	4811166	8	True				
ANR	4811194	Statement	*	83:37:2443:2443	4811166	9	True				
ANR	4811195	Statement	>	83:38:2444:2444	4811166	10	True				
ANR	4811196	Statement	(	83:39:2445:2445	4811166	11	True				
ANR	4811197	Statement	(	83:40:2446:2446	4811166	12	True				
ANR	4811198	Statement	*	83:41:2447:2447	4811166	13	True				
ANR	4811199	Statement	d1	83:42:2448:2449	4811166	14	True				
ANR	4811200	Statement	)	83:44:2450:2450	4811166	15	True				
ANR	4811201	Statement	->	83:45:2451:2452	4811166	16	True				
ANR	4811202	Statement	d_name	83:47:2453:2458	4811166	17	True				
ANR	4811203	Statement	)	83:53:2459:2459	4811166	18	True				
ANR	4811204	Statement	","	83:54:2460:2460	4811166	19	True				
ANR	4811205	Statement	const_cast	84:2:2464:2473	4811166	20	True				
ANR	4811206	Statement	<	84:12:2474:2474	4811166	21	True				
ANR	4811207	Statement	char	84:13:2475:2478	4811166	22	True				
ANR	4811208	Statement	*	84:17:2479:2479	4811166	23	True				
ANR	4811209	Statement	>	84:18:2480:2480	4811166	24	True				
ANR	4811210	Statement	(	84:19:2481:2481	4811166	25	True				
ANR	4811211	Statement	(	84:20:2482:2482	4811166	26	True				
ANR	4811212	Statement	*	84:21:2483:2483	4811166	27	True				
ANR	4811213	Statement	d2	84:22:2484:2485	4811166	28	True				
ANR	4811214	Statement	)	84:24:2486:2486	4811166	29	True				
ANR	4811215	Statement	->	84:25:2487:2488	4811166	30	True				
ANR	4811216	Statement	d_name	84:27:2489:2494	4811166	31	True				
ANR	4811217	Statement	)	84:33:2495:2495	4811166	32	True				
ANR	4811218	Statement	)	84:34:2496:2496	4811166	33	True				
ANR	4811219	Statement	)	84:35:2497:2497	4811166	34	True				
ANR	4811220	ExpressionStatement		84:36:2498:2498	4811166	35	True				
ANR	4811221	ReturnType	int		4811166	1					
ANR	4811222	Identifier	doalphasort		4811166	2					
ANR	4811223	ParameterList	"const void * a , const void * b"		4811166	3					
ANR	4811224	Parameter	const void * a	80:16:2250:2262	4811166	0	True				
ANR	4811225	ParameterType	const void *		4811166	0					
ANR	4811226	Identifier	a		4811166	1					
ANR	4811227	Parameter	const void * b	80:31:2265:2277	4811166	1	True				
ANR	4811228	ParameterType	const void *		4811166	0					
ANR	4811229	Identifier	b		4811166	1					
ANR	4811230	CFGEntryNode	ENTRY		4811166		True				
ANR	4811231	CFGExitNode	EXIT		4811166		True				
ANR	4811232	Symbol	a		4811166						
ANR	4811233	Symbol	b		4811166						
ANR	4811234	Symbol	d1		4811166						
ANR	4811235	Symbol	d2		4811166						
ANR	4811236	Function	setBaseName	89:0:2511:3071							
ANR	4811237	FunctionDef	setBaseName (const char * baseName)		4811236	0					
ANR	4811238	CompoundStatement		89:39:2550:3071	4811236	0					
ANR	4811239	IfStatement	"if ( ( isInitialized == 1 ) && ( strcmp ( baseName , logBaseName ) != 0 ) )"		4811236	0					
ANR	4811240	Condition	"( isInitialized == 1 ) && ( strcmp ( baseName , logBaseName ) != 0 )"	92:7:2696:2755	4811236	0	True				
ANR	4811241	AndExpression	"( isInitialized == 1 ) && ( strcmp ( baseName , logBaseName ) != 0 )"		4811236	0		&&			
ANR	4811242	EqualityExpression	isInitialized == 1		4811236	0		==			
ANR	4811243	Identifier	isInitialized		4811236	0					
ANR	4811244	PrimaryExpression	1		4811236	1					
ANR	4811245	EqualityExpression	"strcmp ( baseName , logBaseName ) != 0"		4811236	1		!=			
ANR	4811246	CallExpression	"strcmp ( baseName , logBaseName )"		4811236	0					
ANR	4811247	Callee	strcmp		4811236	0					
ANR	4811248	Identifier	strcmp		4811236	0					
ANR	4811249	ArgumentList	baseName		4811236	1					
ANR	4811250	Argument	baseName		4811236	0					
ANR	4811251	Identifier	baseName		4811236	0					
ANR	4811252	Argument	logBaseName		4811236	1					
ANR	4811253	Identifier	logBaseName		4811236	0					
ANR	4811254	PrimaryExpression	0		4811236	1					
ANR	4811255	CompoundStatement		4:71:209:209	4811236	1					
ANR	4811256	ExpressionStatement	isInitialized = 0	93:2:2764:2781	4811236	0	True				
ANR	4811257	AssignmentExpression	isInitialized = 0		4811236	0		=			
ANR	4811258	Identifier	isInitialized		4811236	0					
ANR	4811259	PrimaryExpression	0		4811236	1					
ANR	4811260	IfStatement	if ( isInitialized == 0 )		4811236	1					
ANR	4811261	Condition	isInitialized == 0	95:5:2791:2808	4811236	0	True				
ANR	4811262	EqualityExpression	isInitialized == 0		4811236	0		==			
ANR	4811263	Identifier	isInitialized		4811236	0					
ANR	4811264	PrimaryExpression	0		4811236	1					
ANR	4811265	CompoundStatement		8:2:264:276	4811236	1					
ANR	4811266	IdentifierDeclStatement	char * tmpDir ;	96:2:2815:2827	4811236	0	True				
ANR	4811267	IdentifierDecl	* tmpDir		4811236	0					
ANR	4811268	IdentifierDeclType	char *		4811236	0					
ANR	4811269	Identifier	tmpDir		4811236	1					
ANR	4811270	ExpressionStatement	"sprintf ( logBaseName , ""%s"" , baseName )"	98:2:2832:2868	4811236	1	True				
ANR	4811271	CallExpression	"sprintf ( logBaseName , ""%s"" , baseName )"		4811236	0					
ANR	4811272	Callee	sprintf		4811236	0					
ANR	4811273	Identifier	sprintf		4811236	0					
ANR	4811274	ArgumentList	logBaseName		4811236	1					
ANR	4811275	Argument	logBaseName		4811236	0					
ANR	4811276	Identifier	logBaseName		4811236	0					
ANR	4811277	Argument	"""%s"""		4811236	1					
ANR	4811278	PrimaryExpression	"""%s"""		4811236	0					
ANR	4811279	Argument	baseName		4811236	2					
ANR	4811280	Identifier	baseName		4811236	0					
ANR	4811281	ExpressionStatement	tmpDir = condor_dirname ( logBaseName )	99:2:2872:2908	4811236	2	True				
ANR	4811282	AssignmentExpression	tmpDir = condor_dirname ( logBaseName )		4811236	0		=			
ANR	4811283	Identifier	tmpDir		4811236	0					
ANR	4811284	CallExpression	condor_dirname ( logBaseName )		4811236	1					
ANR	4811285	Callee	condor_dirname		4811236	0					
ANR	4811286	Identifier	condor_dirname		4811236	0					
ANR	4811287	ArgumentList	logBaseName		4811236	1					
ANR	4811288	Argument	logBaseName		4811236	0					
ANR	4811289	Identifier	logBaseName		4811236	0					
ANR	4811290	ExpressionStatement	"sprintf ( baseDirName , ""%s"" , tmpDir )"	100:2:2912:2946	4811236	3	True				
ANR	4811291	CallExpression	"sprintf ( baseDirName , ""%s"" , tmpDir )"		4811236	0					
ANR	4811292	Callee	sprintf		4811236	0					
ANR	4811293	Identifier	sprintf		4811236	0					
ANR	4811294	ArgumentList	baseDirName		4811236	1					
ANR	4811295	Argument	baseDirName		4811236	0					
ANR	4811296	Identifier	baseDirName		4811236	0					
ANR	4811297	Argument	"""%s"""		4811236	1					
ANR	4811298	PrimaryExpression	"""%s"""		4811236	0					
ANR	4811299	Argument	tmpDir		4811236	2					
ANR	4811300	Identifier	tmpDir		4811236	0					
ANR	4811301	ExpressionStatement	free ( tmpDir )	101:2:2950:2962	4811236	4	True				
ANR	4811302	CallExpression	free ( tmpDir )		4811236	0					
ANR	4811303	Callee	free		4811236	0					
ANR	4811304	Identifier	free		4811236	0					
ANR	4811305	ArgumentList	tmpDir		4811236	1					
ANR	4811306	Argument	tmpDir		4811236	0					
ANR	4811307	Identifier	tmpDir		4811236	0					
ANR	4811308	ExpressionStatement	"sprintf ( searchLogName , ""%s.*"" , ( const char * ) logBaseName )"	103:2:2979:3035	4811236	5	True				
ANR	4811309	CallExpression	"sprintf ( searchLogName , ""%s.*"" , ( const char * ) logBaseName )"		4811236	0					
ANR	4811310	Callee	sprintf		4811236	0					
ANR	4811311	Identifier	sprintf		4811236	0					
ANR	4811312	ArgumentList	searchLogName		4811236	1					
ANR	4811313	Argument	searchLogName		4811236	0					
ANR	4811314	Identifier	searchLogName		4811236	0					
ANR	4811315	Argument	"""%s.*"""		4811236	1					
ANR	4811316	PrimaryExpression	"""%s.*"""		4811236	0					
ANR	4811317	Argument	( const char * ) logBaseName		4811236	2					
ANR	4811318	CastExpression	( const char * ) logBaseName		4811236	0					
ANR	4811319	CastTarget	const char *		4811236	0					
ANR	4811320	Identifier	logBaseName		4811236	1					
ANR	4811321	ExpressionStatement	isInitialized = 1	105:2:3049:3066	4811236	6	True				
ANR	4811322	AssignmentExpression	isInitialized = 1		4811236	0		=			
ANR	4811323	Identifier	isInitialized		4811236	0					
ANR	4811324	PrimaryExpression	1		4811236	1					
ANR	4811325	ReturnType	void		4811236	1					
ANR	4811326	Identifier	setBaseName		4811236	2					
ANR	4811327	ParameterList	const char * baseName		4811236	3					
ANR	4811328	Parameter	const char * baseName	89:17:2528:2547	4811236	0	True				
ANR	4811329	ParameterType	const char *		4811236	0					
ANR	4811330	Identifier	baseName		4811236	1					
ANR	4811331	CFGEntryNode	ENTRY		4811236		True				
ANR	4811332	CFGExitNode	EXIT		4811236		True				
ANR	4811333	Symbol	strcmp		4811236						
ANR	4811334	Symbol	tmpDir		4811236						
ANR	4811335	Symbol	baseDirName		4811236						
ANR	4811336	Symbol	searchLogName		4811236						
ANR	4811337	Symbol	logBaseName		4811236						
ANR	4811338	Symbol	isInitialized		4811236						
ANR	4811339	Symbol	condor_dirname		4811236						
ANR	4811340	Symbol	baseName		4811236						
ANR	4811341	Function	rotateSingle	109:0:3074:3130							
ANR	4811342	FunctionDef	rotateSingle ()		4811341	0					
ANR	4811343	CompoundStatement		111:0:3093:3130	4811341	0					
ANR	4811344	ReturnStatement	"return rotateTimestamp ( ""old"" , 1 ) ;"	112:1:3096:3128	4811341	0	True				
ANR	4811345	CallExpression	"rotateTimestamp ( ""old"" , 1 )"		4811341	0					
ANR	4811346	Callee	rotateTimestamp		4811341	0					
ANR	4811347	Identifier	rotateTimestamp		4811341	0					
ANR	4811348	ArgumentList	"""old"""		4811341	1					
ANR	4811349	Argument	"""old"""		4811341	0					
ANR	4811350	PrimaryExpression	"""old"""		4811341	0					
ANR	4811351	Argument	1		4811341	1					
ANR	4811352	PrimaryExpression	1		4811341	0					
ANR	4811353	ReturnType	int		4811341	1					
ANR	4811354	Identifier	rotateSingle		4811341	2					
ANR	4811355	ParameterList			4811341	3					
ANR	4811356	CFGEntryNode	ENTRY		4811341		True				
ANR	4811357	CFGExitNode	EXIT		4811341		True				
ANR	4811358	Symbol	rotateTimestamp		4811341						
ANR	4811359	Function	createRotateFilename	116:0:3135:3390							
ANR	4811360	FunctionDef	"createRotateFilename (const char * ending , int maxNum)"		4811359	0					
ANR	4811361	CompoundStatement		118:0:3201:3390	4811359	0					
ANR	4811362	IdentifierDeclStatement	const char * timeStamp ;	119:1:3204:3225	4811359	0	True				
ANR	4811363	IdentifierDecl	* timeStamp		4811359	0					
ANR	4811364	IdentifierDeclType	const char *		4811359	0					
ANR	4811365	Identifier	timeStamp		4811359	1					
ANR	4811366	IfStatement	if ( maxNum <= 1 )		4811359	1					
ANR	4811367	Condition	maxNum <= 1	120:5:3232:3242	4811359	0	True				
ANR	4811368	RelationalExpression	maxNum <= 1		4811359	0		<=			
ANR	4811369	Identifier	maxNum		4811359	0					
ANR	4811370	PrimaryExpression	1		4811359	1					
ANR	4811371	ExpressionStatement	"timeStamp = ""old"""	121:2:3247:3264	4811359	1	True				
ANR	4811372	AssignmentExpression	"timeStamp = ""old"""		4811359	0		=			
ANR	4811373	Identifier	timeStamp		4811359	0					
ANR	4811374	PrimaryExpression	"""old"""		4811359	1					
ANR	4811375	ElseStatement	else		4811359	0					
ANR	4811376	IfStatement	if ( ending == NULL )		4811359	0					
ANR	4811377	Condition	ending == NULL	123:5:3279:3292	4811359	0	True				
ANR	4811378	EqualityExpression	ending == NULL		4811359	0		==			
ANR	4811379	Identifier	ending		4811359	0					
ANR	4811380	Identifier	NULL		4811359	1					
ANR	4811381	CompoundStatement		6:21:93:93	4811359	1					
ANR	4811382	ExpressionStatement	timeStamp = createTimestampString ( )	124:2:3299:3334	4811359	0	True				
ANR	4811383	AssignmentExpression	timeStamp = createTimestampString ( )		4811359	0		=			
ANR	4811384	Identifier	timeStamp		4811359	0					
ANR	4811385	CallExpression	createTimestampString ( )		4811359	1					
ANR	4811386	Callee	createTimestampString		4811359	0					
ANR	4811387	Identifier	createTimestampString		4811359	0					
ANR	4811388	ArgumentList			4811359	1					
ANR	4811389	ElseStatement	else		4811359	0					
ANR	4811390	CompoundStatement		8:8:142:142	4811359	0					
ANR	4811391	ExpressionStatement	timeStamp = ending	126:2:3348:3366	4811359	0	True				
ANR	4811392	AssignmentExpression	timeStamp = ending		4811359	0		=			
ANR	4811393	Identifier	timeStamp		4811359	0					
ANR	4811394	Identifier	ending		4811359	1					
ANR	4811395	ReturnStatement	return timeStamp ;	128:1:3372:3388	4811359	2	True				
ANR	4811396	Identifier	timeStamp		4811359	0					
ANR	4811397	ReturnType	const char *		4811359	1					
ANR	4811398	Identifier	createRotateFilename		4811359	2					
ANR	4811399	ParameterList	"const char * ending , int maxNum"		4811359	3					
ANR	4811400	Parameter	const char * ending	117:21:3169:3186	4811359	0	True				
ANR	4811401	ParameterType	const char *		4811359	0					
ANR	4811402	Identifier	ending		4811359	1					
ANR	4811403	Parameter	int maxNum	117:41:3189:3198	4811359	1	True				
ANR	4811404	ParameterType	int		4811359	0					
ANR	4811405	Identifier	maxNum		4811359	1					
ANR	4811406	CFGEntryNode	ENTRY		4811359		True				
ANR	4811407	CFGExitNode	EXIT		4811359		True				
ANR	4811408	Symbol	timeStamp		4811359						
ANR	4811409	Symbol	ending		4811359						
ANR	4811410	Symbol	createTimestampString		4811359						
ANR	4811411	Symbol	NULL		4811359						
ANR	4811412	Symbol	maxNum		4811359						
ANR	4811413	Function	rotateTimestamp	131:0:3393:3870							
ANR	4811414	FunctionDef	"rotateTimestamp (const char * timeStamp , int maxNum)"		4811413	0					
ANR	4811415	CompoundStatement		133:0:3448:3870	4811413	0					
ANR	4811416	IdentifierDeclStatement	int save_errno ;	134:1:3451:3465	4811413	0	True				
ANR	4811417	IdentifierDecl	save_errno		4811413	0					
ANR	4811418	IdentifierDeclType	int		4811413	0					
ANR	4811419	Identifier	save_errno		4811413	1					
ANR	4811420	IdentifierDeclStatement	"const char * ts = createRotateFilename ( timeStamp , maxNum ) ;"	135:1:3468:3524	4811413	1	True				
ANR	4811421	IdentifierDecl	"* ts = createRotateFilename ( timeStamp , maxNum )"		4811413	0					
ANR	4811422	IdentifierDeclType	const char *		4811413	0					
ANR	4811423	Identifier	ts		4811413	1					
ANR	4811424	AssignmentExpression	"* ts = createRotateFilename ( timeStamp , maxNum )"		4811413	2		=			
ANR	4811425	Identifier	ts		4811413	0					
ANR	4811426	CallExpression	"createRotateFilename ( timeStamp , maxNum )"		4811413	1					
ANR	4811427	Callee	createRotateFilename		4811413	0					
ANR	4811428	Identifier	createRotateFilename		4811413	0					
ANR	4811429	ArgumentList	timeStamp		4811413	1					
ANR	4811430	Argument	timeStamp		4811413	0					
ANR	4811431	Identifier	timeStamp		4811413	0					
ANR	4811432	Argument	maxNum		4811413	1					
ANR	4811433	Identifier	maxNum		4811413	0					
ANR	4811434	IdentifierDeclStatement	char * rotated_log_name = ( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 ) ;	138:1:3582:3659	4811413	2	True				
ANR	4811435	IdentifierDecl	* rotated_log_name = ( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		4811413	0					
ANR	4811436	IdentifierDeclType	char *		4811413	0					
ANR	4811437	Identifier	rotated_log_name		4811413	1					
ANR	4811438	AssignmentExpression	* rotated_log_name = ( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		4811413	2		=			
ANR	4811439	Identifier	rotated_log_name		4811413	0					
ANR	4811440	CastExpression	( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		4811413	1					
ANR	4811441	CastTarget	char *		4811413	0					
ANR	4811442	CallExpression	malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		4811413	1					
ANR	4811443	Callee	malloc		4811413	0					
ANR	4811444	Identifier	malloc		4811413	0					
ANR	4811445	ArgumentList	strlen ( logBaseName ) + strlen ( ts ) + 2		4811413	1					
ANR	4811446	Argument	strlen ( logBaseName ) + strlen ( ts ) + 2		4811413	0					
ANR	4811447	AdditiveExpression	strlen ( logBaseName ) + strlen ( ts ) + 2		4811413	0		+			
ANR	4811448	CallExpression	strlen ( logBaseName )		4811413	0					
ANR	4811449	Callee	strlen		4811413	0					
ANR	4811450	Identifier	strlen		4811413	0					
ANR	4811451	ArgumentList	logBaseName		4811413	1					
ANR	4811452	Argument	logBaseName		4811413	0					
ANR	4811453	Identifier	logBaseName		4811413	0					
ANR	4811454	AdditiveExpression	strlen ( ts ) + 2		4811413	1		+			
ANR	4811455	CallExpression	strlen ( ts )		4811413	0					
ANR	4811456	Callee	strlen		4811413	0					
ANR	4811457	Identifier	strlen		4811413	0					
ANR	4811458	ArgumentList	ts		4811413	1					
ANR	4811459	Argument	ts		4811413	0					
ANR	4811460	Identifier	ts		4811413	0					
ANR	4811461	PrimaryExpression	2		4811413	1					
ANR	4811462	ExpressionStatement	"( void ) sprintf ( rotated_log_name , ""%s.%s"" , logBaseName , ts )"	139:1:3662:3721	4811413	3	True				
ANR	4811463	CastExpression	"( void ) sprintf ( rotated_log_name , ""%s.%s"" , logBaseName , ts )"		4811413	0					
ANR	4811464	CastTarget	void		4811413	0					
ANR	4811465	CallExpression	"sprintf ( rotated_log_name , ""%s.%s"" , logBaseName , ts )"		4811413	1					
ANR	4811466	Callee	sprintf		4811413	0					
ANR	4811467	Identifier	sprintf		4811413	0					
ANR	4811468	ArgumentList	rotated_log_name		4811413	1					
ANR	4811469	Argument	rotated_log_name		4811413	0					
ANR	4811470	Identifier	rotated_log_name		4811413	0					
ANR	4811471	Argument	"""%s.%s"""		4811413	1					
ANR	4811472	PrimaryExpression	"""%s.%s"""		4811413	0					
ANR	4811473	Argument	logBaseName		4811413	2					
ANR	4811474	Identifier	logBaseName		4811413	0					
ANR	4811475	Argument	ts		4811413	3					
ANR	4811476	Identifier	ts		4811413	0					
ANR	4811477	ExpressionStatement	"save_errno = rotate_file_dprintf ( logBaseName , rotated_log_name , 1 )"	140:1:3724:3790	4811413	4	True				
ANR	4811478	AssignmentExpression	"save_errno = rotate_file_dprintf ( logBaseName , rotated_log_name , 1 )"		4811413	0		=			
ANR	4811479	Identifier	save_errno		4811413	0					
ANR	4811480	CallExpression	"rotate_file_dprintf ( logBaseName , rotated_log_name , 1 )"		4811413	1					
ANR	4811481	Callee	rotate_file_dprintf		4811413	0					
ANR	4811482	Identifier	rotate_file_dprintf		4811413	0					
ANR	4811483	ArgumentList	logBaseName		4811413	1					
ANR	4811484	Argument	logBaseName		4811413	0					
ANR	4811485	Identifier	logBaseName		4811413	0					
ANR	4811486	Argument	rotated_log_name		4811413	1					
ANR	4811487	Identifier	rotated_log_name		4811413	0					
ANR	4811488	Argument	1		4811413	2					
ANR	4811489	PrimaryExpression	1		4811413	0					
ANR	4811490	ExpressionStatement	free ( rotated_log_name )	141:1:3793:3815	4811413	5	True				
ANR	4811491	CallExpression	free ( rotated_log_name )		4811413	0					
ANR	4811492	Callee	free		4811413	0					
ANR	4811493	Identifier	free		4811413	0					
ANR	4811494	ArgumentList	rotated_log_name		4811413	1					
ANR	4811495	Argument	rotated_log_name		4811413	0					
ANR	4811496	Identifier	rotated_log_name		4811413	0					
ANR	4811497	ReturnStatement	return save_errno ;	142:1:3818:3835	4811413	6	True				
ANR	4811498	Identifier	save_errno		4811413	0					
ANR	4811499	ReturnType	int		4811413	1					
ANR	4811500	Identifier	rotateTimestamp		4811413	2					
ANR	4811501	ParameterList	"const char * timeStamp , int maxNum"		4811413	3					
ANR	4811502	Parameter	const char * timeStamp	132:16:3413:3433	4811413	0	True				
ANR	4811503	ParameterType	const char *		4811413	0					
ANR	4811504	Identifier	timeStamp		4811413	1					
ANR	4811505	Parameter	int maxNum	132:39:3436:3445	4811413	1	True				
ANR	4811506	ParameterType	int		4811413	0					
ANR	4811507	Identifier	maxNum		4811413	1					
ANR	4811508	CFGEntryNode	ENTRY		4811413		True				
ANR	4811509	CFGExitNode	EXIT		4811413		True				
ANR	4811510	Symbol	timeStamp		4811413						
ANR	4811511	Symbol	strlen		4811413						
ANR	4811512	Symbol	malloc		4811413						
ANR	4811513	Symbol	rotated_log_name		4811413						
ANR	4811514	Symbol	logBaseName		4811413						
ANR	4811515	Symbol	save_errno		4811413						
ANR	4811516	Symbol	maxNum		4811413						
ANR	4811517	Symbol	rotate_file_dprintf		4811413						
ANR	4811518	Symbol	createRotateFilename		4811413						
ANR	4811519	Symbol	ts		4811413						
ANR	4811520	Function	cleanUp	145:0:3873:4599							
ANR	4811521	FunctionDef	cleanUp (int maxNum)		4811520	0					
ANR	4811522	CompoundStatement		145:24:3897:4599	4811520	0					
ANR	4811523	IdentifierDeclStatement	int count ;	146:1:3900:3909	4811520	0	True				
ANR	4811524	IdentifierDecl	count		4811520	0					
ANR	4811525	IdentifierDeclType	int		4811520	0					
ANR	4811526	Identifier	count		4811520	1					
ANR	4811527	IdentifierDeclStatement	char * oldFile = NULL ;	147:1:3912:3932	4811520	1	True				
ANR	4811528	IdentifierDecl	* oldFile = NULL		4811520	0					
ANR	4811529	IdentifierDeclType	char *		4811520	0					
ANR	4811530	Identifier	oldFile		4811520	1					
ANR	4811531	AssignmentExpression	* oldFile = NULL		4811520	2		=			
ANR	4811532	Identifier	NULL		4811520	0					
ANR	4811533	Identifier	NULL		4811520	1					
ANR	4811534	IdentifierDeclStatement	char empty [ BUFSIZ ] ;	148:1:3935:3953	4811520	2	True				
ANR	4811535	IdentifierDecl	empty [ BUFSIZ ]		4811520	0					
ANR	4811536	IdentifierDeclType	char [ BUFSIZ ]		4811520	0					
ANR	4811537	Identifier	empty		4811520	1					
ANR	4811538	Identifier	BUFSIZ		4811520	2					
ANR	4811539	IfStatement	if ( maxNum > 0 )		4811520	3					
ANR	4811540	Condition	maxNum > 0	151:5:4053:4062	4811520	0	True				
ANR	4811541	RelationalExpression	maxNum > 0		4811520	0		>			
ANR	4811542	Identifier	maxNum		4811520	0					
ANR	4811543	PrimaryExpression	0		4811520	1					
ANR	4811544	CompoundStatement		7:18:168:168	4811520	1					
ANR	4811545	ExpressionStatement	"oldFile = findOldest ( baseDirName , & count )"	152:2:4070:4111	4811520	0	True				
ANR	4811546	AssignmentExpression	"oldFile = findOldest ( baseDirName , & count )"		4811520	0		=			
ANR	4811547	Identifier	oldFile		4811520	0					
ANR	4811548	CallExpression	"findOldest ( baseDirName , & count )"		4811520	1					
ANR	4811549	Callee	findOldest		4811520	0					
ANR	4811550	Identifier	findOldest		4811520	0					
ANR	4811551	ArgumentList	baseDirName		4811520	1					
ANR	4811552	Argument	baseDirName		4811520	0					
ANR	4811553	Identifier	baseDirName		4811520	0					
ANR	4811554	Argument	& count		4811520	1					
ANR	4811555	UnaryOperationExpression	& count		4811520	0					
ANR	4811556	UnaryOperator	&		4811520	0					
ANR	4811557	Identifier	count		4811520	1					
ANR	4811558	WhileStatement	while ( count > maxNum )		4811520	1					
ANR	4811559	Condition	count > maxNum	153:9:4122:4135	4811520	0	True				
ANR	4811560	RelationalExpression	count > maxNum		4811520	0		>			
ANR	4811561	Identifier	count		4811520	0					
ANR	4811562	Identifier	maxNum		4811520	1					
ANR	4811563	CompoundStatement		9:25:240:240	4811520	1					
ANR	4811564	ExpressionStatement	"( void ) sprintf ( empty , ""%s.old"" , logBaseName )"	154:3:4143:4188	4811520	0	True				
ANR	4811565	CastExpression	"( void ) sprintf ( empty , ""%s.old"" , logBaseName )"		4811520	0					
ANR	4811566	CastTarget	void		4811520	0					
ANR	4811567	CallExpression	"sprintf ( empty , ""%s.old"" , logBaseName )"		4811520	1					
ANR	4811568	Callee	sprintf		4811520	0					
ANR	4811569	Identifier	sprintf		4811520	0					
ANR	4811570	ArgumentList	empty		4811520	1					
ANR	4811571	Argument	empty		4811520	0					
ANR	4811572	Identifier	empty		4811520	0					
ANR	4811573	Argument	"""%s.old"""		4811520	1					
ANR	4811574	PrimaryExpression	"""%s.old"""		4811520	0					
ANR	4811575	Argument	logBaseName		4811520	2					
ANR	4811576	Identifier	logBaseName		4811520	0					
ANR	4811577	IfStatement	"if ( strcmp ( oldFile , empty ) == 0 )"		4811520	1					
ANR	4811578	Condition	"strcmp ( oldFile , empty ) == 0"	156:7:4285:4311	4811520	0	True				
ANR	4811579	EqualityExpression	"strcmp ( oldFile , empty ) == 0"		4811520	0		==			
ANR	4811580	CallExpression	"strcmp ( oldFile , empty )"		4811520	0					
ANR	4811581	Callee	strcmp		4811520	0					
ANR	4811582	Identifier	strcmp		4811520	0					
ANR	4811583	ArgumentList	oldFile		4811520	1					
ANR	4811584	Argument	oldFile		4811520	0					
ANR	4811585	Identifier	oldFile		4811520	0					
ANR	4811586	Argument	empty		4811520	1					
ANR	4811587	Identifier	empty		4811520	0					
ANR	4811588	PrimaryExpression	0		4811520	1					
ANR	4811589	BreakStatement	break ;	157:4:4318:4323	4811520	1	True				
ANR	4811590	IfStatement	"if ( rotate_file ( oldFile , empty ) != 0 )"		4811520	2					
ANR	4811591	Condition	"rotate_file ( oldFile , empty ) != 0"	158:8:4333:4363	4811520	0	True				
ANR	4811592	EqualityExpression	"rotate_file ( oldFile , empty ) != 0"		4811520	0		!=			
ANR	4811593	CallExpression	"rotate_file ( oldFile , empty )"		4811520	0					
ANR	4811594	Callee	rotate_file		4811520	0					
ANR	4811595	Identifier	rotate_file		4811520	0					
ANR	4811596	ArgumentList	oldFile		4811520	1					
ANR	4811597	Argument	oldFile		4811520	0					
ANR	4811598	Identifier	oldFile		4811520	0					
ANR	4811599	Argument	empty		4811520	1					
ANR	4811600	Identifier	empty		4811520	0					
ANR	4811601	PrimaryExpression	0		4811520	1					
ANR	4811602	CompoundStatement		14:41:468:468	4811520	1					
ANR	4811603	ExpressionStatement	"dprintf ( D_ALWAYS , ""Rotation cleanup of old file %s failed.\\n"" , oldFile )"	159:4:4372:4443	4811520	0	True				
ANR	4811604	CallExpression	"dprintf ( D_ALWAYS , ""Rotation cleanup of old file %s failed.\\n"" , oldFile )"		4811520	0					
ANR	4811605	Callee	dprintf		4811520	0					
ANR	4811606	Identifier	dprintf		4811520	0					
ANR	4811607	ArgumentList	D_ALWAYS		4811520	1					
ANR	4811608	Argument	D_ALWAYS		4811520	0					
ANR	4811609	Identifier	D_ALWAYS		4811520	0					
ANR	4811610	Argument	"""Rotation cleanup of old file %s failed.\\n"""		4811520	1					
ANR	4811611	PrimaryExpression	"""Rotation cleanup of old file %s failed.\\n"""		4811520	0					
ANR	4811612	Argument	oldFile		4811520	2					
ANR	4811613	Identifier	oldFile		4811520	0					
ANR	4811614	ExpressionStatement	free ( oldFile )	161:3:4453:4466	4811520	3	True				
ANR	4811615	CallExpression	free ( oldFile )		4811520	0					
ANR	4811616	Callee	free		4811520	0					
ANR	4811617	Identifier	free		4811520	0					
ANR	4811618	ArgumentList	oldFile		4811520	1					
ANR	4811619	Argument	oldFile		4811520	0					
ANR	4811620	Identifier	oldFile		4811520	0					
ANR	4811621	ExpressionStatement	"oldFile = findOldest ( baseDirName , & count )"	162:3:4471:4512	4811520	4	True				
ANR	4811622	AssignmentExpression	"oldFile = findOldest ( baseDirName , & count )"		4811520	0		=			
ANR	4811623	Identifier	oldFile		4811520	0					
ANR	4811624	CallExpression	"findOldest ( baseDirName , & count )"		4811520	1					
ANR	4811625	Callee	findOldest		4811520	0					
ANR	4811626	Identifier	findOldest		4811520	0					
ANR	4811627	ArgumentList	baseDirName		4811520	1					
ANR	4811628	Argument	baseDirName		4811520	0					
ANR	4811629	Identifier	baseDirName		4811520	0					
ANR	4811630	Argument	& count		4811520	1					
ANR	4811631	UnaryOperationExpression	& count		4811520	0					
ANR	4811632	UnaryOperator	&		4811520	0					
ANR	4811633	Identifier	count		4811520	1					
ANR	4811634	IfStatement	if ( oldFile != NULL )		4811520	4					
ANR	4811635	Condition	oldFile != NULL	165:5:4526:4540	4811520	0	True				
ANR	4811636	EqualityExpression	oldFile != NULL		4811520	0		!=			
ANR	4811637	Identifier	oldFile		4811520	0					
ANR	4811638	Identifier	NULL		4811520	1					
ANR	4811639	CompoundStatement		21:22:645:645	4811520	1					
ANR	4811640	ExpressionStatement	free ( oldFile )	166:3:4548:4561	4811520	0	True				
ANR	4811641	CallExpression	free ( oldFile )		4811520	0					
ANR	4811642	Callee	free		4811520	0					
ANR	4811643	Identifier	free		4811520	0					
ANR	4811644	ArgumentList	oldFile		4811520	1					
ANR	4811645	Argument	oldFile		4811520	0					
ANR	4811646	Identifier	oldFile		4811520	0					
ANR	4811647	ExpressionStatement	oldFile = NULL	167:3:4566:4580	4811520	1	True				
ANR	4811648	AssignmentExpression	oldFile = NULL		4811520	0		=			
ANR	4811649	Identifier	oldFile		4811520	0					
ANR	4811650	Identifier	NULL		4811520	1					
ANR	4811651	ReturnStatement	return 0 ;	170:1:4588:4596	4811520	5	True				
ANR	4811652	PrimaryExpression	0		4811520	0					
ANR	4811653	ReturnType	int		4811520	1					
ANR	4811654	Identifier	cleanUp		4811520	2					
ANR	4811655	ParameterList	int maxNum		4811520	3					
ANR	4811656	Parameter	int maxNum	145:12:3885:3894	4811520	0	True				
ANR	4811657	ParameterType	int		4811520	0					
ANR	4811658	Identifier	maxNum		4811520	1					
ANR	4811659	CFGEntryNode	ENTRY		4811520		True				
ANR	4811660	CFGExitNode	EXIT		4811520		True				
ANR	4811661	Symbol	strcmp		4811520						
ANR	4811662	Symbol	oldFile		4811520						
ANR	4811663	Symbol	NULL		4811520						
ANR	4811664	Symbol	baseDirName		4811520						
ANR	4811665	Symbol	logBaseName		4811520						
ANR	4811666	Symbol	count		4811520						
ANR	4811667	Symbol	D_ALWAYS		4811520						
ANR	4811668	Symbol	& count		4811520						
ANR	4811669	Symbol	rotate_file		4811520						
ANR	4811670	Symbol	maxNum		4811520						
ANR	4811671	Symbol	findOldest		4811520						
ANR	4811672	Symbol	empty		4811520						
ANR	4811673	Function	isOldString	178:0:4619:4700							
ANR	4811674	FunctionDef	isOldString (char * str)		4811673	0					
ANR	4811675	CompoundStatement		178:26:4645:4700	4811673	0					
ANR	4811676	IfStatement	"if ( strcmp ( str , ""old"" ) == 0 )"		4811673	0					
ANR	4811677	Condition	"strcmp ( str , ""old"" ) == 0"	179:5:4652:4674	4811673	0	True				
ANR	4811678	EqualityExpression	"strcmp ( str , ""old"" ) == 0"		4811673	0		==			
ANR	4811679	CallExpression	"strcmp ( str , ""old"" )"		4811673	0					
ANR	4811680	Callee	strcmp		4811673	0					
ANR	4811681	Identifier	strcmp		4811673	0					
ANR	4811682	ArgumentList	str		4811673	1					
ANR	4811683	Argument	str		4811673	0					
ANR	4811684	Identifier	str		4811673	0					
ANR	4811685	Argument	"""old"""		4811673	1					
ANR	4811686	PrimaryExpression	"""old"""		4811673	0					
ANR	4811687	PrimaryExpression	0		4811673	1					
ANR	4811688	ReturnStatement	return 1 ;	180:2:4679:4687	4811673	1	True				
ANR	4811689	PrimaryExpression	1		4811673	0					
ANR	4811690	ReturnStatement	return 0 ;	181:1:4690:4698	4811673	1	True				
ANR	4811691	PrimaryExpression	0		4811673	0					
ANR	4811692	ReturnType	int		4811673	1					
ANR	4811693	Identifier	isOldString		4811673	2					
ANR	4811694	ParameterList	char * str		4811673	3					
ANR	4811695	Parameter	char * str	178:16:4635:4643	4811673	0	True				
ANR	4811696	ParameterType	char *		4811673	0					
ANR	4811697	Identifier	str		4811673	1					
ANR	4811698	CFGEntryNode	ENTRY		4811673		True				
ANR	4811699	CFGExitNode	EXIT		4811673		True				
ANR	4811700	Symbol	str		4811673						
ANR	4811701	Symbol	strcmp		4811673						
ANR	4811702	Function	isTimestampString	184:0:4703:5006							
ANR	4811703	FunctionDef	isTimestampString (char * str)		4811702	0					
ANR	4811704	CompoundStatement		184:33:4736:5006	4811702	0					
ANR	4811705	IdentifierDeclStatement	int len = strlen ( str ) ;	185:1:4739:4760	4811702	0	True				
ANR	4811706	IdentifierDecl	len = strlen ( str )		4811702	0					
ANR	4811707	IdentifierDeclType	int		4811702	0					
ANR	4811708	Identifier	len		4811702	1					
ANR	4811709	AssignmentExpression	len = strlen ( str )		4811702	2		=			
ANR	4811710	Identifier	len		4811702	0					
ANR	4811711	CallExpression	strlen ( str )		4811702	1					
ANR	4811712	Callee	strlen		4811702	0					
ANR	4811713	Identifier	strlen		4811702	0					
ANR	4811714	ArgumentList	str		4811702	1					
ANR	4811715	Argument	str		4811702	0					
ANR	4811716	Identifier	str		4811702	0					
ANR	4811717	IfStatement	if ( len != 15 )		4811702	1					
ANR	4811718	Condition	len != 15	186:5:4767:4775	4811702	0	True				
ANR	4811719	EqualityExpression	len != 15		4811702	0		!=			
ANR	4811720	Identifier	len		4811702	0					
ANR	4811721	PrimaryExpression	15		4811702	1					
ANR	4811722	CompoundStatement		3:16:41:41	4811702	1					
ANR	4811723	ReturnStatement	return 0 ;	187:2:4782:4790	4811702	0	True				
ANR	4811724	PrimaryExpression	0		4811702	0					
ANR	4811725	IdentifierDeclStatement	int i = 0 ;	189:1:4796:4805	4811702	2	True				
ANR	4811726	IdentifierDecl	i = 0		4811702	0					
ANR	4811727	IdentifierDeclType	int		4811702	0					
ANR	4811728	Identifier	i		4811702	1					
ANR	4811729	AssignmentExpression	i = 0		4811702	2		=			
ANR	4811730	Identifier	i		4811702	0					
ANR	4811731	PrimaryExpression	0		4811702	1					
ANR	4811732	WhileStatement	while ( i < 8 )		4811702	3					
ANR	4811733	Condition	i < 8	190:8:4815:4819	4811702	0	True				
ANR	4811734	RelationalExpression	i < 8		4811702	0		<			
ANR	4811735	Identifier	i		4811702	0					
ANR	4811736	PrimaryExpression	8		4811702	1					
ANR	4811737	CompoundStatement		7:15:85:85	4811702	1					
ANR	4811738	IfStatement	if ( str [ i ] < '0' || str [ i ] > '9' )		4811702	0					
ANR	4811739	Condition	str [ i ] < '0' || str [ i ] > '9'	191:6:4830:4857	4811702	0	True				
ANR	4811740	OrExpression	str [ i ] < '0' || str [ i ] > '9'		4811702	0		||			
ANR	4811741	RelationalExpression	str [ i ] < '0'		4811702	0		<			
ANR	4811742	ArrayIndexing	str [ i ]		4811702	0					
ANR	4811743	Identifier	str		4811702	0					
ANR	4811744	Identifier	i		4811702	1					
ANR	4811745	PrimaryExpression	'0'		4811702	1					
ANR	4811746	RelationalExpression	str [ i ] > '9'		4811702	1		>			
ANR	4811747	ArrayIndexing	str [ i ]		4811702	0					
ANR	4811748	Identifier	str		4811702	0					
ANR	4811749	Identifier	i		4811702	1					
ANR	4811750	PrimaryExpression	'9'		4811702	1					
ANR	4811751	ReturnStatement	return 0 ;	192:3:4863:4871	4811702	1	True				
ANR	4811752	PrimaryExpression	0		4811702	0					
ANR	4811753	ExpressionStatement	++ i	193:2:4875:4878	4811702	1	True				
ANR	4811754	UnaryExpression	++ i		4811702	0					
ANR	4811755	IncDec	++		4811702	0					
ANR	4811756	Identifier	i		4811702	1					
ANR	4811757	IfStatement	if ( str [ i ++ ] != 'T' )		4811702	4					
ANR	4811758	Condition	str [ i ++ ] != 'T'	195:5:4888:4902	4811702	0	True				
ANR	4811759	EqualityExpression	str [ i ++ ] != 'T'		4811702	0		!=			
ANR	4811760	ArrayIndexing	str [ i ++ ]		4811702	0					
ANR	4811761	Identifier	str		4811702	0					
ANR	4811762	PostIncDecOperationExpression	i ++		4811702	1					
ANR	4811763	Identifier	i		4811702	0					
ANR	4811764	IncDec	++		4811702	1					
ANR	4811765	PrimaryExpression	'T'		4811702	1					
ANR	4811766	ReturnStatement	return 0 ;	196:2:4907:4915	4811702	1	True				
ANR	4811767	PrimaryExpression	0		4811702	0					
ANR	4811768	WhileStatement	while ( i < len )		4811702	5					
ANR	4811769	Condition	i < len	197:8:4925:4931	4811702	0	True				
ANR	4811770	RelationalExpression	i < len		4811702	0		<			
ANR	4811771	Identifier	i		4811702	0					
ANR	4811772	Identifier	len		4811702	1					
ANR	4811773	CompoundStatement		14:17:197:197	4811702	1					
ANR	4811774	IfStatement	if ( str [ i ] < '0' || str [ i ] > '9' )		4811702	0					
ANR	4811775	Condition	str [ i ] < '0' || str [ i ] > '9'	198:6:4942:4969	4811702	0	True				
ANR	4811776	OrExpression	str [ i ] < '0' || str [ i ] > '9'		4811702	0		||			
ANR	4811777	RelationalExpression	str [ i ] < '0'		4811702	0		<			
ANR	4811778	ArrayIndexing	str [ i ]		4811702	0					
ANR	4811779	Identifier	str		4811702	0					
ANR	4811780	Identifier	i		4811702	1					
ANR	4811781	PrimaryExpression	'0'		4811702	1					
ANR	4811782	RelationalExpression	str [ i ] > '9'		4811702	1		>			
ANR	4811783	ArrayIndexing	str [ i ]		4811702	0					
ANR	4811784	Identifier	str		4811702	0					
ANR	4811785	Identifier	i		4811702	1					
ANR	4811786	PrimaryExpression	'9'		4811702	1					
ANR	4811787	ReturnStatement	return 0 ;	199:3:4975:4983	4811702	1	True				
ANR	4811788	PrimaryExpression	0		4811702	0					
ANR	4811789	ExpressionStatement	++ i	200:2:4987:4990	4811702	1	True				
ANR	4811790	UnaryExpression	++ i		4811702	0					
ANR	4811791	IncDec	++		4811702	0					
ANR	4811792	Identifier	i		4811702	1					
ANR	4811793	ReturnStatement	return 1 ;	202:1:4996:5004	4811702	6	True				
ANR	4811794	PrimaryExpression	1		4811702	0					
ANR	4811795	ReturnType	int		4811702	1					
ANR	4811796	Identifier	isTimestampString		4811702	2					
ANR	4811797	ParameterList	char * str		4811702	3					
ANR	4811798	Parameter	char * str	184:22:4725:4733	4811702	0	True				
ANR	4811799	ParameterType	char *		4811702	0					
ANR	4811800	Identifier	str		4811702	1					
ANR	4811801	CFGEntryNode	ENTRY		4811702		True				
ANR	4811802	CFGExitNode	EXIT		4811702		True				
ANR	4811803	Symbol	str		4811702						
ANR	4811804	Symbol	strlen		4811702						
ANR	4811805	Symbol	* i		4811702						
ANR	4811806	Symbol	len		4811702						
ANR	4811807	Symbol	i		4811702						
ANR	4811808	Symbol	* str		4811702						
ANR	4811809	Function	isLogFilename	205:0:5010:5516							
ANR	4811810	FunctionDef	isLogFilename (char * filename)		4811809	0					
ANR	4811811	CompoundStatement		205:35:5045:5516	4811809	0					
ANR	4811812	IdentifierDeclStatement	int dirLen = strlen ( baseDirName ) ;	206:1:5048:5080	4811809	0	True				
ANR	4811813	IdentifierDecl	dirLen = strlen ( baseDirName )		4811809	0					
ANR	4811814	IdentifierDeclType	int		4811809	0					
ANR	4811815	Identifier	dirLen		4811809	1					
ANR	4811816	AssignmentExpression	dirLen = strlen ( baseDirName )		4811809	2		=			
ANR	4811817	Identifier	dirLen		4811809	0					
ANR	4811818	CallExpression	strlen ( baseDirName )		4811809	1					
ANR	4811819	Callee	strlen		4811809	0					
ANR	4811820	Identifier	strlen		4811809	0					
ANR	4811821	ArgumentList	baseDirName		4811809	1					
ANR	4811822	Argument	baseDirName		4811809	0					
ANR	4811823	Identifier	baseDirName		4811809	0					
ANR	4811824	IfStatement	if ( baseDirName [ dirLen - 1 ] != DIR_DELIM_CHAR )		4811809	1					
ANR	4811825	Condition	baseDirName [ dirLen - 1 ] != DIR_DELIM_CHAR	207:5:5087:5125	4811809	0	True				
ANR	4811826	EqualityExpression	baseDirName [ dirLen - 1 ] != DIR_DELIM_CHAR		4811809	0		!=			
ANR	4811827	ArrayIndexing	baseDirName [ dirLen - 1 ]		4811809	0					
ANR	4811828	Identifier	baseDirName		4811809	0					
ANR	4811829	AdditiveExpression	dirLen - 1		4811809	1		-			
ANR	4811830	Identifier	dirLen		4811809	0					
ANR	4811831	PrimaryExpression	1		4811809	1					
ANR	4811832	Identifier	DIR_DELIM_CHAR		4811809	1					
ANR	4811833	ExpressionStatement	++ dirLen	208:2:5130:5138	4811809	1	True				
ANR	4811834	UnaryExpression	++ dirLen		4811809	0					
ANR	4811835	IncDec	++		4811809	0					
ANR	4811836	Identifier	dirLen		4811809	1					
ANR	4811837	IdentifierDeclStatement	int fLen = strlen ( logBaseName ) ;	209:4:5144:5174	4811809	2	True				
ANR	4811838	IdentifierDecl	fLen = strlen ( logBaseName )		4811809	0					
ANR	4811839	IdentifierDeclType	int		4811809	0					
ANR	4811840	Identifier	fLen		4811809	1					
ANR	4811841	AssignmentExpression	fLen = strlen ( logBaseName )		4811809	2		=			
ANR	4811842	Identifier	fLen		4811809	0					
ANR	4811843	CallExpression	strlen ( logBaseName )		4811809	1					
ANR	4811844	Callee	strlen		4811809	0					
ANR	4811845	Identifier	strlen		4811809	0					
ANR	4811846	ArgumentList	logBaseName		4811809	1					
ANR	4811847	Argument	logBaseName		4811809	0					
ANR	4811848	Identifier	logBaseName		4811809	0					
ANR	4811849	IfStatement	"if ( strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 ) == 0 )"		4811809	3					
ANR	4811850	Condition	"strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 ) == 0"	210:8:5184:5246	4811809	0	True				
ANR	4811851	EqualityExpression	"strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 ) == 0"		4811809	0		==			
ANR	4811852	CallExpression	"strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 )"		4811809	0					
ANR	4811853	Callee	strncmp		4811809	0					
ANR	4811854	Identifier	strncmp		4811809	0					
ANR	4811855	ArgumentList	filename		4811809	1					
ANR	4811856	Argument	filename		4811809	0					
ANR	4811857	Identifier	filename		4811809	0					
ANR	4811858	Argument	logBaseName + dirLen		4811809	1					
ANR	4811859	AdditiveExpression	logBaseName + dirLen		4811809	0		+			
ANR	4811860	Identifier	logBaseName		4811809	0					
ANR	4811861	Identifier	dirLen		4811809	1					
ANR	4811862	Argument	fLen - dirLen - 1		4811809	2					
ANR	4811863	AdditiveExpression	fLen - dirLen - 1		4811809	0		-			
ANR	4811864	Identifier	fLen		4811809	0					
ANR	4811865	AdditiveExpression	dirLen - 1		4811809	1		-			
ANR	4811866	Identifier	dirLen		4811809	0					
ANR	4811867	PrimaryExpression	1		4811809	1					
ANR	4811868	PrimaryExpression	0		4811809	1					
ANR	4811869	CompoundStatement		6:74:204:204	4811809	1					
ANR	4811870	Statement	if	211:5:5257:5258	4811809	0	True				
ANR	4811871	Statement	(	211:8:5260:5260	4811809	1	True				
ANR	4811872	Statement	(	211:11:5263:5263	4811809	2	True				
ANR	4811873	Statement	strlen	211:12:5264:5269	4811809	3	True				
ANR	4811874	Statement	(	211:18:5270:5270	4811809	4	True				
ANR	4811875	Statement	filename	211:19:5271:5278	4811809	5	True				
ANR	4811876	Statement	)	211:27:5279:5279	4811809	6	True				
ANR	4811877	Statement	>	211:29:5281:5281	4811809	7	True				
ANR	4811878	Statement	unsigned	211:31:5283:5290	4811809	8	True				
ANR	4811879	Statement	(	211:39:5291:5291	4811809	9	True				
ANR	4811880	Statement	fLen	211:40:5292:5295	4811809	10	True				
ANR	4811881	Statement	-	211:44:5296:5296	4811809	11	True				
ANR	4811882	Statement	dirLen	211:45:5297:5302	4811809	12	True				
ANR	4811883	Statement	)	211:51:5303:5303	4811809	13	True				
ANR	4811884	Statement	)	211:52:5304:5304	4811809	14	True				
ANR	4811885	Statement	&&	211:54:5306:5307	4811809	15	True				
ANR	4811886	Statement	(	212:5:5315:5315	4811809	16	True				
ANR	4811887	Statement	filename	212:6:5316:5323	4811809	17	True				
ANR	4811888	Statement	[	212:14:5324:5324	4811809	18	True				
ANR	4811889	Statement	fLen	212:15:5325:5328	4811809	19	True				
ANR	4811890	Statement	-	212:19:5329:5329	4811809	20	True				
ANR	4811891	Statement	dirLen	212:20:5330:5335	4811809	21	True				
ANR	4811892	Statement	]	212:26:5336:5336	4811809	22	True				
ANR	4811893	Statement	==	212:28:5338:5339	4811809	23	True				
ANR	4811894	Statement	'.'	212:31:5341:5343	4811809	24	True				
ANR	4811895	Statement	)	212:34:5344:5344	4811809	25	True				
ANR	4811896	Statement	)	212:37:5347:5347	4811809	26	True				
ANR	4811897	CompoundStatement		8:39:303:303	4811809	27					
ANR	4811898	IfStatement	if ( ( isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) || ( isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) )		4811809	0					
ANR	4811899	Condition	( isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) || ( isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1 )	213:9:5360:5463	4811809	0	True				
ANR	4811900	OrExpression	( isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) || ( isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1 )		4811809	0		||			
ANR	4811901	EqualityExpression	isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1		4811809	0		==			
ANR	4811902	CallExpression	isTimestampString ( filename + ( fLen - dirLen + 1 ) )		4811809	0					
ANR	4811903	Callee	isTimestampString		4811809	0					
ANR	4811904	Identifier	isTimestampString		4811809	0					
ANR	4811905	ArgumentList	filename + ( fLen - dirLen + 1 )		4811809	1					
ANR	4811906	Argument	filename + ( fLen - dirLen + 1 )		4811809	0					
ANR	4811907	AdditiveExpression	filename + ( fLen - dirLen + 1 )		4811809	0		+			
ANR	4811908	Identifier	filename		4811809	0					
ANR	4811909	AdditiveExpression	fLen - dirLen + 1		4811809	1		-			
ANR	4811910	Identifier	fLen		4811809	0					
ANR	4811911	AdditiveExpression	dirLen + 1		4811809	1		+			
ANR	4811912	Identifier	dirLen		4811809	0					
ANR	4811913	PrimaryExpression	1		4811809	1					
ANR	4811914	PrimaryExpression	1		4811809	1					
ANR	4811915	EqualityExpression	isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1		4811809	1		==			
ANR	4811916	CallExpression	isOldString ( filename + ( fLen - dirLen + 1 ) )		4811809	0					
ANR	4811917	Callee	isOldString		4811809	0					
ANR	4811918	Identifier	isOldString		4811809	0					
ANR	4811919	ArgumentList	filename + ( fLen - dirLen + 1 )		4811809	1					
ANR	4811920	Argument	filename + ( fLen - dirLen + 1 )		4811809	0					
ANR	4811921	AdditiveExpression	filename + ( fLen - dirLen + 1 )		4811809	0		+			
ANR	4811922	Identifier	filename		4811809	0					
ANR	4811923	AdditiveExpression	fLen - dirLen + 1		4811809	1		-			
ANR	4811924	Identifier	fLen		4811809	0					
ANR	4811925	AdditiveExpression	dirLen + 1		4811809	1		+			
ANR	4811926	Identifier	dirLen		4811809	0					
ANR	4811927	PrimaryExpression	1		4811809	1					
ANR	4811928	PrimaryExpression	1		4811809	1					
ANR	4811929	ReturnStatement	return 1 ;	215:8:5475:5483	4811809	1	True				
ANR	4811930	PrimaryExpression	1		4811809	0					
ANR	4811931	ReturnStatement	return 0 ;	219:1:5506:5514	4811809	4	True				
ANR	4811932	PrimaryExpression	0		4811809	0					
ANR	4811933	ReturnType	int		4811809	1					
ANR	4811934	Identifier	isLogFilename		4811809	2					
ANR	4811935	ParameterList	char * filename		4811809	3					
ANR	4811936	Parameter	char * filename	205:19:5029:5042	4811809	0	True				
ANR	4811937	ParameterType	char *		4811809	0					
ANR	4811938	Identifier	filename		4811809	1					
ANR	4811939	CFGEntryNode	ENTRY		4811809		True				
ANR	4811940	CFGExitNode	EXIT		4811809		True				
ANR	4811941	Symbol	fLen		4811809						
ANR	4811942	Symbol	strlen		4811809						
ANR	4811943	Symbol	strncmp		4811809						
ANR	4811944	Symbol	isTimestampString		4811809						
ANR	4811945	Symbol	filename		4811809						
ANR	4811946	Symbol	baseDirName		4811809						
ANR	4811947	Symbol	* dirLen		4811809						
ANR	4811948	Symbol	DIR_DELIM_CHAR		4811809						
ANR	4811949	Symbol	logBaseName		4811809						
ANR	4811950	Symbol	dirLen		4811809						
ANR	4811951	Symbol	* baseDirName		4811809						
ANR	4811952	Symbol	isOldString		4811809						
ANR	4811953	Function	file_select	222:0:5519:5662							
ANR	4811954	FunctionDef	file_select (const struct dirent * entry)		4811953	0					
ANR	4811955	CompoundStatement		222:44:5563:5662	4811953	0					
ANR	4811956	Statement	char	224:1:5568:5571	4811953	0	True				
ANR	4811957	Statement	*	224:6:5573:5573	4811953	1	True				
ANR	4811958	Statement	entryData	224:7:5574:5582	4811953	2	True				
ANR	4811959	Statement	=	224:17:5584:5584	4811953	3	True				
ANR	4811960	Statement	const_cast	224:19:5586:5595	4811953	4	True				
ANR	4811961	Statement	<	224:29:5596:5596	4811953	5	True				
ANR	4811962	Statement	char	224:30:5597:5600	4811953	6	True				
ANR	4811963	Statement	*	224:34:5601:5601	4811953	7	True				
ANR	4811964	Statement	>	224:35:5602:5602	4811953	8	True				
ANR	4811965	ExpressionStatement	entry -> d_name	224:36:5603:5618	4811953	9	True				
ANR	4811966	PtrMemberAccess	entry -> d_name		4811953	0					
ANR	4811967	Identifier	entry		4811953	0					
ANR	4811968	Identifier	d_name		4811953	1					
ANR	4811969	ReturnStatement	return isLogFilename ( entryData ) ? 1 : 0 ;	225:1:5621:5660	4811953	10	True				
ANR	4811970	ConditionalExpression	isLogFilename ( entryData ) ? 1 : 0		4811953	0					
ANR	4811971	Condition	isLogFilename ( entryData )		4811953	0					
ANR	4811972	CallExpression	isLogFilename ( entryData )		4811953	0					
ANR	4811973	Callee	isLogFilename		4811953	0					
ANR	4811974	Identifier	isLogFilename		4811953	0					
ANR	4811975	ArgumentList	entryData		4811953	1					
ANR	4811976	Argument	entryData		4811953	0					
ANR	4811977	Identifier	entryData		4811953	0					
ANR	4811978	PrimaryExpression	1		4811953	1					
ANR	4811979	PrimaryExpression	0		4811953	2					
ANR	4811980	ReturnType	int		4811953	1					
ANR	4811981	Identifier	file_select		4811953	2					
ANR	4811982	ParameterList	const struct dirent * entry		4811953	3					
ANR	4811983	Parameter	const struct dirent * entry	222:16:5535:5560	4811953	0	True				
ANR	4811984	ParameterType	const struct dirent *		4811953	0					
ANR	4811985	Identifier	entry		4811953	1					
ANR	4811986	CFGEntryNode	ENTRY		4811953		True				
ANR	4811987	CFGExitNode	EXIT		4811953		True				
ANR	4811988	Symbol	entry		4811953						
ANR	4811989	Symbol	entryData		4811953						
ANR	4811990	Symbol	isLogFilename		4811953						
ANR	4811991	Function	findOldest	229:0:5666:6097							
ANR	4811992	FunctionDef	"findOldest (char * dirName , int * count)"		4811991	0					
ANR	4811993	CompoundStatement		229:44:5710:6097	4811991	0					
ANR	4811994	IdentifierDeclStatement	struct dirent * * files ;	230:1:5713:5734	4811991	0	True				
ANR	4811995	IdentifierDecl	* * files		4811991	0					
ANR	4811996	IdentifierDeclType	struct dirent * *		4811991	0					
ANR	4811997	Identifier	files		4811991	1					
ANR	4811998	IdentifierDeclStatement	int len ;	231:1:5737:5745	4811991	1	True				
ANR	4811999	IdentifierDecl	len		4811991	0					
ANR	4812000	IdentifierDeclType	int		4811991	0					
ANR	4812001	Identifier	len		4811991	1					
ANR	4812002	ExpressionStatement	"* count = scandirectory ( dirName , & files , file_select , doalphasort )"	232:1:5748:5813	4811991	2	True				
ANR	4812003	AssignmentExpression	"* count = scandirectory ( dirName , & files , file_select , doalphasort )"		4811991	0		=			
ANR	4812004	UnaryOperationExpression	* count		4811991	0					
ANR	4812005	UnaryOperator	*		4811991	0					
ANR	4812006	Identifier	count		4811991	1					
ANR	4812007	CallExpression	"scandirectory ( dirName , & files , file_select , doalphasort )"		4811991	1					
ANR	4812008	Callee	scandirectory		4811991	0					
ANR	4812009	Identifier	scandirectory		4811991	0					
ANR	4812010	ArgumentList	dirName		4811991	1					
ANR	4812011	Argument	dirName		4811991	0					
ANR	4812012	Identifier	dirName		4811991	0					
ANR	4812013	Argument	& files		4811991	1					
ANR	4812014	UnaryOperationExpression	& files		4811991	0					
ANR	4812015	UnaryOperator	&		4811991	0					
ANR	4812016	Identifier	files		4811991	1					
ANR	4812017	Argument	file_select		4811991	2					
ANR	4812018	Identifier	file_select		4811991	0					
ANR	4812019	Argument	doalphasort		4811991	3					
ANR	4812020	Identifier	doalphasort		4811991	0					
ANR	4812021	IfStatement	if ( * count <= 0 )		4811991	3					
ANR	4812022	Condition	* count <= 0	234:5:5859:5869	4811991	0	True				
ANR	4812023	RelationalExpression	* count <= 0		4811991	0		<=			
ANR	4812024	UnaryOperationExpression	* count		4811991	0					
ANR	4812025	UnaryOperator	*		4811991	0					
ANR	4812026	Identifier	count		4811991	1					
ANR	4812027	PrimaryExpression	0		4811991	1					
ANR	4812028	ReturnStatement	return NULL ;	235:2:5874:5885	4811991	1	True				
ANR	4812029	Identifier	NULL		4811991	0					
ANR	4812030	IdentifierDeclStatement	char * oldFile = ( char * ) files [ 0 ] -> d_name ;	236:1:5888:5927	4811991	4	True				
ANR	4812031	IdentifierDecl	* oldFile = ( char * ) files [ 0 ] -> d_name		4811991	0					
ANR	4812032	IdentifierDeclType	char *		4811991	0					
ANR	4812033	Identifier	oldFile		4811991	1					
ANR	4812034	AssignmentExpression	* oldFile = ( char * ) files [ 0 ] -> d_name		4811991	2		=			
ANR	4812035	Identifier	oldFile		4811991	0					
ANR	4812036	CastExpression	( char * ) files [ 0 ] -> d_name		4811991	1					
ANR	4812037	CastTarget	char *		4811991	0					
ANR	4812038	PtrMemberAccess	files [ 0 ] -> d_name		4811991	1					
ANR	4812039	ArrayIndexing	files [ 0 ]		4811991	0					
ANR	4812040	Identifier	files		4811991	0					
ANR	4812041	PrimaryExpression	0		4811991	1					
ANR	4812042	Identifier	d_name		4811991	1					
ANR	4812043	ExpressionStatement	len = strlen ( oldFile )	237:1:5930:5951	4811991	5	True				
ANR	4812044	AssignmentExpression	len = strlen ( oldFile )		4811991	0		=			
ANR	4812045	Identifier	len		4811991	0					
ANR	4812046	CallExpression	strlen ( oldFile )		4811991	1					
ANR	4812047	Callee	strlen		4811991	0					
ANR	4812048	Identifier	strlen		4811991	0					
ANR	4812049	ArgumentList	oldFile		4811991	1					
ANR	4812050	Argument	oldFile		4811991	0					
ANR	4812051	Identifier	oldFile		4811991	0					
ANR	4812052	IdentifierDeclStatement	char * result = ( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 ) ;	238:1:5954:6011	4811991	6	True				
ANR	4812053	IdentifierDecl	* result = ( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 )		4811991	0					
ANR	4812054	IdentifierDeclType	char *		4811991	0					
ANR	4812055	Identifier	result		4811991	1					
ANR	4812056	AssignmentExpression	* result = ( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 )		4811991	2		=			
ANR	4812057	Identifier	result		4811991	0					
ANR	4812058	CastExpression	( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 )		4811991	1					
ANR	4812059	CastTarget	char *		4811991	0					
ANR	4812060	CallExpression	malloc ( len + 1 + strlen ( dirName ) + 1 )		4811991	1					
ANR	4812061	Callee	malloc		4811991	0					
ANR	4812062	Identifier	malloc		4811991	0					
ANR	4812063	ArgumentList	len + 1 + strlen ( dirName ) + 1		4811991	1					
ANR	4812064	Argument	len + 1 + strlen ( dirName ) + 1		4811991	0					
ANR	4812065	AdditiveExpression	len + 1 + strlen ( dirName ) + 1		4811991	0		+			
ANR	4812066	Identifier	len		4811991	0					
ANR	4812067	AdditiveExpression	1 + strlen ( dirName ) + 1		4811991	1		+			
ANR	4812068	PrimaryExpression	1		4811991	0					
ANR	4812069	AdditiveExpression	strlen ( dirName ) + 1		4811991	1		+			
ANR	4812070	CallExpression	strlen ( dirName )		4811991	0					
ANR	4812071	Callee	strlen		4811991	0					
ANR	4812072	Identifier	strlen		4811991	0					
ANR	4812073	ArgumentList	dirName		4811991	1					
ANR	4812074	Argument	dirName		4811991	0					
ANR	4812075	Identifier	dirName		4811991	0					
ANR	4812076	PrimaryExpression	1		4811991	1					
ANR	4812077	ExpressionStatement	"( void ) sprintf ( result , ""%s%c%s"" , dirName , DIR_DELIM_CHAR , oldFile )"	239:1:6014:6079	4811991	7	True				
ANR	4812078	CastExpression	"( void ) sprintf ( result , ""%s%c%s"" , dirName , DIR_DELIM_CHAR , oldFile )"		4811991	0					
ANR	4812079	CastTarget	void		4811991	0					
ANR	4812080	CallExpression	"sprintf ( result , ""%s%c%s"" , dirName , DIR_DELIM_CHAR , oldFile )"		4811991	1					
ANR	4812081	Callee	sprintf		4811991	0					
ANR	4812082	Identifier	sprintf		4811991	0					
ANR	4812083	ArgumentList	result		4811991	1					
ANR	4812084	Argument	result		4811991	0					
ANR	4812085	Identifier	result		4811991	0					
ANR	4812086	Argument	"""%s%c%s"""		4811991	1					
ANR	4812087	PrimaryExpression	"""%s%c%s"""		4811991	0					
ANR	4812088	Argument	dirName		4811991	2					
ANR	4812089	Identifier	dirName		4811991	0					
ANR	4812090	Argument	DIR_DELIM_CHAR		4811991	3					
ANR	4812091	Identifier	DIR_DELIM_CHAR		4811991	0					
ANR	4812092	Argument	oldFile		4811991	4					
ANR	4812093	Identifier	oldFile		4811991	0					
ANR	4812094	ReturnStatement	return result ;	240:1:6082:6095	4811991	8	True				
ANR	4812095	Identifier	result		4811991	0					
ANR	4812096	ReturnType	char *		4811991	1					
ANR	4812097	Identifier	findOldest		4811991	2					
ANR	4812098	ParameterList	"char * dirName , int * count"		4811991	3					
ANR	4812099	Parameter	char * dirName	229:17:5683:5695	4811991	0	True				
ANR	4812100	ParameterType	char *		4811991	0					
ANR	4812101	Identifier	dirName		4811991	1					
ANR	4812102	Parameter	int * count	229:32:5698:5707	4811991	1	True				
ANR	4812103	ParameterType	int *		4811991	0					
ANR	4812104	Identifier	count		4811991	1					
ANR	4812105	CFGEntryNode	ENTRY		4811991		True				
ANR	4812106	CFGExitNode	EXIT		4811991		True				
ANR	4812107	Symbol	malloc		4811991						
ANR	4812108	Symbol	oldFile		4811991						
ANR	4812109	Symbol	NULL		4811991						
ANR	4812110	Symbol	* * files		4811991						
ANR	4812111	Symbol	DIR_DELIM_CHAR		4811991						
ANR	4812112	Symbol	count		4811991						
ANR	4812113	Symbol	doalphasort		4811991						
ANR	4812114	Symbol	& files		4811991						
ANR	4812115	Symbol	files [ 0 ] -> d_name		4811991						
ANR	4812116	Symbol	* files		4811991						
ANR	4812117	Symbol	result		4811991						
ANR	4812118	Symbol	* count		4811991						
ANR	4812119	Symbol	strlen		4811991						
ANR	4812120	Symbol	len		4811991						
ANR	4812121	Symbol	scandirectory		4811991						
ANR	4812122	Symbol	files		4811991						
ANR	4812123	Symbol	file_select		4811991						
ANR	4812124	Symbol	dirName		4811991						
ANR	4812125	Function	findOldest	244:0:6106:6630							
ANR	4812126	FunctionDef	"findOldest (char * dirName , int * count)"		4812125	0					
ANR	4812127	CompoundStatement		244:44:6150:6630	4812125	0					
ANR	4812128	IdentifierDeclStatement	char * oldFile ;	245:1:6153:6166	4812125	0	True				
ANR	4812129	IdentifierDecl	* oldFile		4812125	0					
ANR	4812130	IdentifierDeclType	char *		4812125	0					
ANR	4812131	Identifier	oldFile		4812125	1					
ANR	4812132	IdentifierDeclStatement	WIN32_FIND_DATA ffd ;	246:1:6169:6188	4812125	1	True				
ANR	4812133	IdentifierDecl	ffd		4812125	0					
ANR	4812134	IdentifierDeclType	WIN32_FIND_DATA		4812125	0					
ANR	4812135	Identifier	ffd		4812125	1					
ANR	4812136	IdentifierDeclStatement	HANDLE hFind = INVALID_HANDLE_VALUE ;	247:1:6191:6226	4812125	2	True				
ANR	4812137	IdentifierDecl	hFind = INVALID_HANDLE_VALUE		4812125	0					
ANR	4812138	IdentifierDeclType	HANDLE		4812125	0					
ANR	4812139	Identifier	hFind		4812125	1					
ANR	4812140	AssignmentExpression	hFind = INVALID_HANDLE_VALUE		4812125	2		=			
ANR	4812141	Identifier	INVALID_HANDLE_VALUE		4812125	0					
ANR	4812142	Identifier	INVALID_HANDLE_VALUE		4812125	1					
ANR	4812143	IdentifierDeclStatement	int result ;	248:1:6229:6239	4812125	3	True				
ANR	4812144	IdentifierDecl	result		4812125	0					
ANR	4812145	IdentifierDeclType	int		4812125	0					
ANR	4812146	Identifier	result		4812125	1					
ANR	4812147	ExpressionStatement	* count = 0	250:1:6244:6254	4812125	4	True				
ANR	4812148	AssignmentExpression	* count = 0		4812125	0		=			
ANR	4812149	UnaryOperationExpression	* count		4812125	0					
ANR	4812150	UnaryOperator	*		4812125	0					
ANR	4812151	Identifier	count		4812125	1					
ANR	4812152	PrimaryExpression	0		4812125	1					
ANR	4812153	ExpressionStatement	"hFind = FindFirstFile ( searchLogName , & ffd )"	252:1:6259:6301	4812125	5	True				
ANR	4812154	AssignmentExpression	"hFind = FindFirstFile ( searchLogName , & ffd )"		4812125	0		=			
ANR	4812155	Identifier	hFind		4812125	0					
ANR	4812156	CallExpression	"FindFirstFile ( searchLogName , & ffd )"		4812125	1					
ANR	4812157	Callee	FindFirstFile		4812125	0					
ANR	4812158	Identifier	FindFirstFile		4812125	0					
ANR	4812159	ArgumentList	searchLogName		4812125	1					
ANR	4812160	Argument	searchLogName		4812125	0					
ANR	4812161	Identifier	searchLogName		4812125	0					
ANR	4812162	Argument	& ffd		4812125	1					
ANR	4812163	UnaryOperationExpression	& ffd		4812125	0					
ANR	4812164	UnaryOperator	&		4812125	0					
ANR	4812165	Identifier	ffd		4812125	1					
ANR	4812166	IfStatement	if ( hFind == INVALID_HANDLE_VALUE )		4812125	6					
ANR	4812167	Condition	hFind == INVALID_HANDLE_VALUE	253:5:6308:6336	4812125	0	True				
ANR	4812168	EqualityExpression	hFind == INVALID_HANDLE_VALUE		4812125	0		==			
ANR	4812169	Identifier	hFind		4812125	0					
ANR	4812170	Identifier	INVALID_HANDLE_VALUE		4812125	1					
ANR	4812171	CompoundStatement		10:36:188:188	4812125	1					
ANR	4812172	ReturnStatement	return NULL ;	254:2:6343:6354	4812125	0	True				
ANR	4812173	Identifier	NULL		4812125	0					
ANR	4812174	ExpressionStatement	"result = FindNextFile ( hFind , & ffd )"	257:1:6362:6396	4812125	7	True				
ANR	4812175	AssignmentExpression	"result = FindNextFile ( hFind , & ffd )"		4812125	0		=			
ANR	4812176	Identifier	result		4812125	0					
ANR	4812177	CallExpression	"FindNextFile ( hFind , & ffd )"		4812125	1					
ANR	4812178	Callee	FindNextFile		4812125	0					
ANR	4812179	Identifier	FindNextFile		4812125	0					
ANR	4812180	ArgumentList	hFind		4812125	1					
ANR	4812181	Argument	hFind		4812125	0					
ANR	4812182	Identifier	hFind		4812125	0					
ANR	4812183	Argument	& ffd		4812125	1					
ANR	4812184	UnaryOperationExpression	& ffd		4812125	0					
ANR	4812185	UnaryOperator	&		4812125	0					
ANR	4812186	Identifier	ffd		4812125	1					
ANR	4812187	IfStatement	if ( result == 0 )		4812125	8					
ANR	4812188	Condition	result == 0	258:5:6403:6413	4812125	0	True				
ANR	4812189	EqualityExpression	result == 0		4812125	0		==			
ANR	4812190	Identifier	result		4812125	0					
ANR	4812191	PrimaryExpression	0		4812125	1					
ANR	4812192	CompoundStatement		15:18:265:265	4812125	1					
ANR	4812193	ReturnStatement	return NULL ;	259:2:6420:6431	4812125	0	True				
ANR	4812194	Identifier	NULL		4812125	0					
ANR	4812195	ElseStatement	else		4812125	0					
ANR	4812196	CompoundStatement		17:8:290:290	4812125	0					
ANR	4812197	ExpressionStatement	oldFile = ( char * ) malloc ( strlen ( logBaseName ) + 16 )	261:2:6445:6494	4812125	0	True				
ANR	4812198	AssignmentExpression	oldFile = ( char * ) malloc ( strlen ( logBaseName ) + 16 )		4812125	0		=			
ANR	4812199	Identifier	oldFile		4812125	0					
ANR	4812200	CastExpression	( char * ) malloc ( strlen ( logBaseName ) + 16 )		4812125	1					
ANR	4812201	CastTarget	char *		4812125	0					
ANR	4812202	CallExpression	malloc ( strlen ( logBaseName ) + 16 )		4812125	1					
ANR	4812203	Callee	malloc		4812125	0					
ANR	4812204	Identifier	malloc		4812125	0					
ANR	4812205	ArgumentList	strlen ( logBaseName ) + 16		4812125	1					
ANR	4812206	Argument	strlen ( logBaseName ) + 16		4812125	0					
ANR	4812207	AdditiveExpression	strlen ( logBaseName ) + 16		4812125	0		+			
ANR	4812208	CallExpression	strlen ( logBaseName )		4812125	0					
ANR	4812209	Callee	strlen		4812125	0					
ANR	4812210	Identifier	strlen		4812125	0					
ANR	4812211	ArgumentList	logBaseName		4812125	1					
ANR	4812212	Argument	logBaseName		4812125	0					
ANR	4812213	Identifier	logBaseName		4812125	0					
ANR	4812214	PrimaryExpression	16		4812125	1					
ANR	4812215	ExpressionStatement	"strcpy ( oldFile , ffd . cFileName )"	262:2:6498:6528	4812125	1	True				
ANR	4812216	CallExpression	"strcpy ( oldFile , ffd . cFileName )"		4812125	0					
ANR	4812217	Callee	strcpy		4812125	0					
ANR	4812218	Identifier	strcpy		4812125	0					
ANR	4812219	ArgumentList	oldFile		4812125	1					
ANR	4812220	Argument	oldFile		4812125	0					
ANR	4812221	Identifier	oldFile		4812125	0					
ANR	4812222	Argument	ffd . cFileName		4812125	1					
ANR	4812223	MemberAccess	ffd . cFileName		4812125	0					
ANR	4812224	Identifier	ffd		4812125	0					
ANR	4812225	Identifier	cFileName		4812125	1					
ANR	4812226	WhileStatement	while ( result != 0 )		4812125	9					
ANR	4812227	Condition	result != 0	264:8:6541:6551	4812125	0	True				
ANR	4812228	EqualityExpression	result != 0		4812125	0		!=			
ANR	4812229	Identifier	result		4812125	0					
ANR	4812230	PrimaryExpression	0		4812125	1					
ANR	4812231	CompoundStatement		21:21:403:403	4812125	1					
ANR	4812232	ExpressionStatement	++ ( * count )	265:2:6558:6568	4812125	0	True				
ANR	4812233	UnaryExpression	++ ( * count )		4812125	0					
ANR	4812234	IncDec	++		4812125	0					
ANR	4812235	UnaryOperationExpression	* count		4812125	1					
ANR	4812236	UnaryOperator	*		4812125	0					
ANR	4812237	Identifier	count		4812125	1					
ANR	4812238	ExpressionStatement	"result = FindNextFile ( hFind , & ffd )"	266:2:6572:6606	4812125	1	True				
ANR	4812239	AssignmentExpression	"result = FindNextFile ( hFind , & ffd )"		4812125	0		=			
ANR	4812240	Identifier	result		4812125	0					
ANR	4812241	CallExpression	"FindNextFile ( hFind , & ffd )"		4812125	1					
ANR	4812242	Callee	FindNextFile		4812125	0					
ANR	4812243	Identifier	FindNextFile		4812125	0					
ANR	4812244	ArgumentList	hFind		4812125	1					
ANR	4812245	Argument	hFind		4812125	0					
ANR	4812246	Identifier	hFind		4812125	0					
ANR	4812247	Argument	& ffd		4812125	1					
ANR	4812248	UnaryOperationExpression	& ffd		4812125	0					
ANR	4812249	UnaryOperator	&		4812125	0					
ANR	4812250	Identifier	ffd		4812125	1					
ANR	4812251	ReturnStatement	return oldFile ;	269:1:6614:6628	4812125	10	True				
ANR	4812252	Identifier	oldFile		4812125	0					
ANR	4812253	ReturnType	char *		4812125	1					
ANR	4812254	Identifier	findOldest		4812125	2					
ANR	4812255	ParameterList	"char * dirName , int * count"		4812125	3					
ANR	4812256	Parameter	char * dirName	244:17:6123:6135	4812125	0	True				
ANR	4812257	ParameterType	char *		4812125	0					
ANR	4812258	Identifier	dirName		4812125	1					
ANR	4812259	Parameter	int * count	244:32:6138:6147	4812125	1	True				
ANR	4812260	ParameterType	int *		4812125	0					
ANR	4812261	Identifier	count		4812125	1					
ANR	4812262	CFGEntryNode	ENTRY		4812125		True				
ANR	4812263	CFGExitNode	EXIT		4812125		True				
ANR	4812264	Symbol	malloc		4812125						
ANR	4812265	Symbol	oldFile		4812125						
ANR	4812266	Symbol	NULL		4812125						
ANR	4812267	Symbol	ffd		4812125						
ANR	4812268	Symbol	count		4812125						
ANR	4812269	Symbol	FindFirstFile		4812125						
ANR	4812270	Symbol	INVALID_HANDLE_VALUE		4812125						
ANR	4812271	Symbol	& ffd		4812125						
ANR	4812272	Symbol	FindNextFile		4812125						
ANR	4812273	Symbol	result		4812125						
ANR	4812274	Symbol	* count		4812125						
ANR	4812275	Symbol	strlen		4812125						
ANR	4812276	Symbol	searchLogName		4812125						
ANR	4812277	Symbol	logBaseName		4812125						
ANR	4812278	Symbol	ffd . cFileName		4812125						
ANR	4812279	Symbol	hFind		4812125						
ANR	4812280	Symbol	dirName		4812125						
ANR	4812281	Function	createTimestampString	274:0:6641:6966							
ANR	4812282	FunctionDef	createTimestampString ()		4812281	0					
ANR	4812283	CompoundStatement		274:30:6671:6966	4812281	0					
ANR	4812284	IdentifierDeclStatement	time_t clock_now ;	275:1:6674:6690	4812281	0	True				
ANR	4812285	IdentifierDecl	clock_now		4812281	0					
ANR	4812286	IdentifierDeclType	time_t		4812281	0					
ANR	4812287	Identifier	clock_now		4812281	1					
ANR	4812288	IdentifierDeclStatement	struct tm * tm ;	276:1:6693:6706	4812281	1	True				
ANR	4812289	IdentifierDecl	* tm		4812281	0					
ANR	4812290	IdentifierDeclType	struct tm *		4812281	0					
ANR	4812291	Identifier	tm		4812281	1					
ANR	4812292	Statement	static	277:1:6709:6714	4812281	2	True				
ANR	4812293	IdentifierDeclStatement	char timebuf [ 80 ] ;	277:8:6716:6732	4812281	3	True				
ANR	4812294	IdentifierDecl	timebuf [ 80 ]		4812281	0					
ANR	4812295	IdentifierDeclType	char [ 80 ]		4812281	0					
ANR	4812296	Identifier	timebuf		4812281	1					
ANR	4812297	PrimaryExpression	80		4812281	2					
ANR	4812298	Statement	static	278:1:6735:6740	4812281	4	True				
ANR	4812299	IdentifierDeclStatement	char * timeFormat = 0 ;	278:8:6742:6762	4812281	5	True				
ANR	4812300	IdentifierDecl	* timeFormat = 0		4812281	0					
ANR	4812301	IdentifierDeclType	char *		4812281	0					
ANR	4812302	Identifier	timeFormat		4812281	1					
ANR	4812303	AssignmentExpression	* timeFormat = 0		4812281	2		=			
ANR	4812304	Identifier	timeFormat		4812281	0					
ANR	4812305	PrimaryExpression	0		4812281	1					
ANR	4812306	ExpressionStatement	"timeFormat = strdup ( ""%Y%m%dT%H%M%S"" )"	279:1:6765:6801	4812281	6	True				
ANR	4812307	AssignmentExpression	"timeFormat = strdup ( ""%Y%m%dT%H%M%S"" )"		4812281	0		=			
ANR	4812308	Identifier	timeFormat		4812281	0					
ANR	4812309	CallExpression	"strdup ( ""%Y%m%dT%H%M%S"" )"		4812281	1					
ANR	4812310	Callee	strdup		4812281	0					
ANR	4812311	Identifier	strdup		4812281	0					
ANR	4812312	ArgumentList	"""%Y%m%dT%H%M%S"""		4812281	1					
ANR	4812313	Argument	"""%Y%m%dT%H%M%S"""		4812281	0					
ANR	4812314	PrimaryExpression	"""%Y%m%dT%H%M%S"""		4812281	0					
ANR	4812315	ExpressionStatement	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"	280:1:6804:6846	4812281	7	True				
ANR	4812316	CallExpression	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"		4812281	0					
ANR	4812317	Callee	memset		4812281	0					
ANR	4812318	Identifier	memset		4812281	0					
ANR	4812319	ArgumentList	( void * ) & clock_now		4812281	1					
ANR	4812320	Argument	( void * ) & clock_now		4812281	0					
ANR	4812321	CastExpression	( void * ) & clock_now		4812281	0					
ANR	4812322	CastTarget	void *		4812281	0					
ANR	4812323	UnaryOperationExpression	& clock_now		4812281	1					
ANR	4812324	UnaryOperator	&		4812281	0					
ANR	4812325	Identifier	clock_now		4812281	1					
ANR	4812326	Argument	0		4812281	1					
ANR	4812327	PrimaryExpression	0		4812281	0					
ANR	4812328	Argument	sizeof ( time_t )		4812281	2					
ANR	4812329	SizeofExpression	sizeof ( time_t )		4812281	0					
ANR	4812330	Sizeof	sizeof		4812281	0					
ANR	4812331	SizeofOperand	time_t		4812281	1					
ANR	4812332	ExpressionStatement	( void ) time ( & clock_now )	281:1:6850:6875	4812281	8	True				
ANR	4812333	CastExpression	( void ) time ( & clock_now )		4812281	0					
ANR	4812334	CastTarget	void		4812281	0					
ANR	4812335	CallExpression	time ( & clock_now )		4812281	1					
ANR	4812336	Callee	time		4812281	0					
ANR	4812337	Identifier	time		4812281	0					
ANR	4812338	ArgumentList	& clock_now		4812281	1					
ANR	4812339	Argument	& clock_now		4812281	0					
ANR	4812340	UnaryOperationExpression	& clock_now		4812281	0					
ANR	4812341	UnaryOperator	&		4812281	0					
ANR	4812342	Identifier	clock_now		4812281	1					
ANR	4812343	ExpressionStatement	tm = localtime ( & clock_now )	282:1:6878:6906	4812281	9	True				
ANR	4812344	AssignmentExpression	tm = localtime ( & clock_now )		4812281	0		=			
ANR	4812345	Identifier	tm		4812281	0					
ANR	4812346	CallExpression	localtime ( & clock_now )		4812281	1					
ANR	4812347	Callee	localtime		4812281	0					
ANR	4812348	Identifier	localtime		4812281	0					
ANR	4812349	ArgumentList	& clock_now		4812281	1					
ANR	4812350	Argument	& clock_now		4812281	0					
ANR	4812351	UnaryOperationExpression	& clock_now		4812281	0					
ANR	4812352	UnaryOperator	&		4812281	0					
ANR	4812353	Identifier	clock_now		4812281	1					
ANR	4812354	ExpressionStatement	"strftime ( timebuf , 80 , timeFormat , tm )"	283:1:6910:6947	4812281	10	True				
ANR	4812355	CallExpression	"strftime ( timebuf , 80 , timeFormat , tm )"		4812281	0					
ANR	4812356	Callee	strftime		4812281	0					
ANR	4812357	Identifier	strftime		4812281	0					
ANR	4812358	ArgumentList	timebuf		4812281	1					
ANR	4812359	Argument	timebuf		4812281	0					
ANR	4812360	Identifier	timebuf		4812281	0					
ANR	4812361	Argument	80		4812281	1					
ANR	4812362	PrimaryExpression	80		4812281	0					
ANR	4812363	Argument	timeFormat		4812281	2					
ANR	4812364	Identifier	timeFormat		4812281	0					
ANR	4812365	Argument	tm		4812281	3					
ANR	4812366	Identifier	tm		4812281	0					
ANR	4812367	ReturnStatement	return timebuf ;	284:1:6950:6964	4812281	11	True				
ANR	4812368	Identifier	timebuf		4812281	0					
ANR	4812369	ReturnType	char *		4812281	1					
ANR	4812370	Identifier	createTimestampString		4812281	2					
ANR	4812371	ParameterList			4812281	3					
ANR	4812372	CFGEntryNode	ENTRY		4812281		True				
ANR	4812373	CFGExitNode	EXIT		4812281		True				
ANR	4812374	Symbol	localtime		4812281						
ANR	4812375	Symbol	& clock_now		4812281						
ANR	4812376	Symbol	timeFormat		4812281						
ANR	4812377	Symbol	tm		4812281						
ANR	4812378	Symbol	timebuf		4812281						
ANR	4812379	Symbol	strdup		4812281						
ANR	4812380	Symbol	clock_now		4812281						
