command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4246922	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_store_cred_main.cpp								
ANR	4246923	ClassDef	StoreCredOptions	37:0:1136:1302							
ANR	4246924	DeclStmt									
ANR	4246925	Decl							int	int	mode
ANR	4246926	DeclStmt									
ANR	4246927	Decl							char	char [ MAX_PASSWORD_LENGTH + 1 ]	pw
ANR	4246928	DeclStmt									
ANR	4246929	Decl							char	char [ MAX_PASSWORD_LENGTH + 1 ]	username
ANR	4246930	DeclStmt									
ANR	4246931	Decl							char	char *	daemonname
ANR	4246932	DeclStmt									
ANR	4246933	Decl							char	char *	password_file
ANR	4246934	DeclStmt									
ANR	4246935	Decl							bool	bool	help
ANR	4246936	DeclStmt									
ANR	4246937	Decl							const char	const char *	MyName
ANR	4246938	DeclStmt									
ANR	4246939	Decl							void	void ( void )	usage
ANR	4246940	DeclStmt									
ANR	4246941	Decl							bool	"bool ( StoreCredOptions * opts , int argc , char * argv [ ] )"	parseCommandLine
ANR	4246942	DeclStmt									
ANR	4246943	Decl							void	void ( const char * option )	badOption
ANR	4246944	DeclStmt									
ANR	4246945	Decl							void	void ( const char * command )	badCommand
ANR	4246946	DeclStmt									
ANR	4246947	Decl							void	void ( const char * option )	optionNeedsArg
ANR	4246948	DeclStmt									
ANR	4246949	Decl							bool	bool ( )	goAheadAnyways
ANR	4246950	Function	main	54:0:1554:7606							
ANR	4246951	FunctionDef	"main (int argc , char * argv [ ])"		4246950	0					
ANR	4246952	CompoundStatement		54:33:1587:7606	4246950	0					
ANR	4246953	IdentifierDeclStatement	MyString my_full_name ;	56:1:1592:1613	4246950	0	True				
ANR	4246954	IdentifierDecl	my_full_name		4246950	0					
ANR	4246955	IdentifierDeclType	MyString		4246950	0					
ANR	4246956	Identifier	my_full_name		4246950	1					
ANR	4246957	IdentifierDeclStatement	const char * full_name ;	57:1:1616:1637	4246950	1	True				
ANR	4246958	IdentifierDecl	* full_name		4246950	0					
ANR	4246959	IdentifierDeclType	const char *		4246950	0					
ANR	4246960	Identifier	full_name		4246950	1					
ANR	4246961	IdentifierDeclStatement	char * pw = NULL ;	58:1:1640:1655	4246950	2	True				
ANR	4246962	IdentifierDecl	* pw = NULL		4246950	0					
ANR	4246963	IdentifierDeclType	char *		4246950	0					
ANR	4246964	Identifier	pw		4246950	1					
ANR	4246965	AssignmentExpression	* pw = NULL		4246950	2		=			
ANR	4246966	Identifier	NULL		4246950	0					
ANR	4246967	Identifier	NULL		4246950	1					
ANR	4246968	IdentifierDeclStatement	struct StoreCredOptions options ;	59:1:1658:1689	4246950	3	True				
ANR	4246969	IdentifierDecl	options		4246950	0					
ANR	4246970	IdentifierDeclType	struct StoreCredOptions		4246950	0					
ANR	4246971	Identifier	options		4246950	1					
ANR	4246972	IdentifierDeclStatement	int result = FAILURE_ABORTED ;	60:1:1692:1720	4246950	4	True				
ANR	4246973	IdentifierDecl	result = FAILURE_ABORTED		4246950	0					
ANR	4246974	IdentifierDeclType	int		4246950	0					
ANR	4246975	Identifier	result		4246950	1					
ANR	4246976	AssignmentExpression	result = FAILURE_ABORTED		4246950	2		=			
ANR	4246977	Identifier	FAILURE_ABORTED		4246950	0					
ANR	4246978	Identifier	FAILURE_ABORTED		4246950	1					
ANR	4246979	IdentifierDeclStatement	bool pool_password_arg = false ;	61:1:1723:1753	4246950	5	True				
ANR	4246980	IdentifierDecl	pool_password_arg = false		4246950	0					
ANR	4246981	IdentifierDeclType	bool		4246950	0					
ANR	4246982	Identifier	pool_password_arg		4246950	1					
ANR	4246983	AssignmentExpression	pool_password_arg = false		4246950	2		=			
ANR	4246984	Identifier	false		4246950	0					
ANR	4246985	Identifier	false		4246950	1					
ANR	4246986	IdentifierDeclStatement	bool pool_password_delete = false ;	62:1:1756:1789	4246950	6	True				
ANR	4246987	IdentifierDecl	pool_password_delete = false		4246950	0					
ANR	4246988	IdentifierDeclType	bool		4246950	0					
ANR	4246989	Identifier	pool_password_delete		4246950	1					
ANR	4246990	AssignmentExpression	pool_password_delete = false		4246950	2		=			
ANR	4246991	Identifier	false		4246950	0					
ANR	4246992	Identifier	false		4246950	1					
ANR	4246993	IdentifierDeclStatement	Daemon * daemon = NULL ;	63:1:1792:1813	4246950	7	True				
ANR	4246994	IdentifierDecl	* daemon = NULL		4246950	0					
ANR	4246995	IdentifierDeclType	Daemon *		4246950	0					
ANR	4246996	Identifier	daemon		4246950	1					
ANR	4246997	AssignmentExpression	* daemon = NULL		4246950	2		=			
ANR	4246998	Identifier	NULL		4246950	0					
ANR	4246999	Identifier	NULL		4246950	1					
ANR	4247000	IdentifierDeclStatement	char * credd_host ;	64:1:1816:1832	4246950	8	True				
ANR	4247001	IdentifierDecl	* credd_host		4246950	0					
ANR	4247002	IdentifierDeclType	char *		4246950	0					
ANR	4247003	Identifier	credd_host		4246950	1					
ANR	4247004	ExpressionStatement	MyName = condor_basename ( argv [ 0 ] )	66:1:1836:1869	4246950	9	True				
ANR	4247005	AssignmentExpression	MyName = condor_basename ( argv [ 0 ] )		4246950	0		=			
ANR	4247006	Identifier	MyName		4246950	0					
ANR	4247007	CallExpression	condor_basename ( argv [ 0 ] )		4246950	1					
ANR	4247008	Callee	condor_basename		4246950	0					
ANR	4247009	Identifier	condor_basename		4246950	0					
ANR	4247010	ArgumentList	argv [ 0 ]		4246950	1					
ANR	4247011	Argument	argv [ 0 ]		4246950	0					
ANR	4247012	ArrayIndexing	argv [ 0 ]		4246950	0					
ANR	4247013	Identifier	argv		4246950	0					
ANR	4247014	PrimaryExpression	0		4246950	1					
ANR	4247015	ExpressionStatement	"myDistro -> Init ( argc , argv )"	69:1:1905:1933	4246950	10	True				
ANR	4247016	CallExpression	"myDistro -> Init ( argc , argv )"		4246950	0					
ANR	4247017	Callee	myDistro -> Init		4246950	0					
ANR	4247018	PtrMemberAccess	myDistro -> Init		4246950	0					
ANR	4247019	Identifier	myDistro		4246950	0					
ANR	4247020	Identifier	Init		4246950	1					
ANR	4247021	ArgumentList	argc		4246950	1					
ANR	4247022	Argument	argc		4246950	0					
ANR	4247023	Identifier	argc		4246950	0					
ANR	4247024	Argument	argv		4246950	1					
ANR	4247025	Identifier	argv		4246950	0					
ANR	4247026	ExpressionStatement	config ( )	70:1:1936:1944	4246950	11	True				
ANR	4247027	CallExpression	config ( )		4246950	0					
ANR	4247028	Callee	config		4246950	0					
ANR	4247029	Identifier	config		4246950	0					
ANR	4247030	ArgumentList			4246950	1					
ANR	4247031	IfStatement	"if ( ! parseCommandLine ( & options , argc , argv ) )"		4246950	12					
ANR	4247032	Condition	"! parseCommandLine ( & options , argc , argv )"	72:5:1952:1990	4246950	0	True				
ANR	4247033	UnaryOperationExpression	"! parseCommandLine ( & options , argc , argv )"		4246950	0					
ANR	4247034	UnaryOperator	!		4246950	0					
ANR	4247035	CallExpression	"parseCommandLine ( & options , argc , argv )"		4246950	1					
ANR	4247036	Callee	parseCommandLine		4246950	0					
ANR	4247037	Identifier	parseCommandLine		4246950	0					
ANR	4247038	ArgumentList	& options		4246950	1					
ANR	4247039	Argument	& options		4246950	0					
ANR	4247040	UnaryOperationExpression	& options		4246950	0					
ANR	4247041	UnaryOperator	&		4246950	0					
ANR	4247042	Identifier	options		4246950	1					
ANR	4247043	Argument	argc		4246950	1					
ANR	4247044	Identifier	argc		4246950	0					
ANR	4247045	Argument	argv		4246950	2					
ANR	4247046	Identifier	argv		4246950	0					
ANR	4247047	CompoundStatement		19:46:405:405	4246950	1					
ANR	4247048	GotoStatement	goto cleanup ;	73:2:1997:2009	4246950	0	True				
ANR	4247049	Identifier	cleanup		4246950	0					
ANR	4247050	IfStatement	if ( options . help || ( options . mode == 0 ) )		4246950	13					
ANR	4247051	Condition	options . help || ( options . mode == 0 )	77:5:2058:2092	4246950	0	True				
ANR	4247052	OrExpression	options . help || ( options . mode == 0 )		4246950	0		||			
ANR	4247053	MemberAccess	options . help		4246950	0					
ANR	4247054	Identifier	options		4246950	0					
ANR	4247055	Identifier	help		4246950	1					
ANR	4247056	EqualityExpression	options . mode == 0		4246950	1		==			
ANR	4247057	MemberAccess	options . mode		4246950	0					
ANR	4247058	Identifier	options		4246950	0					
ANR	4247059	Identifier	mode		4246950	1					
ANR	4247060	PrimaryExpression	0		4246950	1					
ANR	4247061	CompoundStatement		24:42:507:507	4246950	1					
ANR	4247062	ExpressionStatement	usage ( )	78:2:2099:2106	4246950	0	True				
ANR	4247063	CallExpression	usage ( )		4246950	0					
ANR	4247064	Callee	usage		4246950	0					
ANR	4247065	Identifier	usage		4246950	0					
ANR	4247066	ArgumentList			4246950	1					
ANR	4247067	GotoStatement	goto cleanup ;	79:2:2110:2122	4246950	1	True				
ANR	4247068	Identifier	cleanup		4246950	0					
ANR	4247069	IfStatement	if ( options . password_file != NULL )		4246950	14					
ANR	4247070	Condition	options . password_file != NULL	86:5:2285:2313	4246950	0	True				
ANR	4247071	EqualityExpression	options . password_file != NULL		4246950	0		!=			
ANR	4247072	MemberAccess	options . password_file		4246950	0					
ANR	4247073	Identifier	options		4246950	0					
ANR	4247074	Identifier	password_file		4246950	1					
ANR	4247075	Identifier	NULL		4246950	1					
ANR	4247076	CompoundStatement		33:36:728:728	4246950	1					
ANR	4247077	IfStatement	if ( options . pw [ 0 ] == '\\0' )		4246950	0					
ANR	4247078	Condition	options . pw [ 0 ] == '\\0'	87:6:2324:2344	4246950	0	True				
ANR	4247079	EqualityExpression	options . pw [ 0 ] == '\\0'		4246950	0		==			
ANR	4247080	ArrayIndexing	options . pw [ 0 ]		4246950	0					
ANR	4247081	MemberAccess	options . pw		4246950	0					
ANR	4247082	Identifier	options		4246950	0					
ANR	4247083	Identifier	pw		4246950	1					
ANR	4247084	PrimaryExpression	0		4246950	1					
ANR	4247085	PrimaryExpression	'\\0'		4246950	1					
ANR	4247086	CompoundStatement		34:29:759:759	4246950	1					
ANR	4247087	ExpressionStatement	pw = get_password ( )	88:3:2352:2371	4246950	0	True				
ANR	4247088	AssignmentExpression	pw = get_password ( )		4246950	0		=			
ANR	4247089	Identifier	pw		4246950	0					
ANR	4247090	CallExpression	get_password ( )		4246950	1					
ANR	4247091	Callee	get_password		4246950	0					
ANR	4247092	Identifier	get_password		4246950	0					
ANR	4247093	ArgumentList			4246950	1					
ANR	4247094	ExpressionStatement	"printf ( ""\\n"" )"	89:3:2376:2388	4246950	1	True				
ANR	4247095	CallExpression	"printf ( ""\\n"" )"		4246950	0					
ANR	4247096	Callee	printf		4246950	0					
ANR	4247097	Identifier	printf		4246950	0					
ANR	4247098	ArgumentList	"""\\n"""		4246950	1					
ANR	4247099	Argument	"""\\n"""		4246950	0					
ANR	4247100	PrimaryExpression	"""\\n"""		4246950	0					
ANR	4247101	ElseStatement	else		4246950	0					
ANR	4247102	CompoundStatement		38:7:813:813	4246950	0					
ANR	4247103	ExpressionStatement	pw = strnewp ( options . pw )	92:3:2406:2430	4246950	0	True				
ANR	4247104	AssignmentExpression	pw = strnewp ( options . pw )		4246950	0		=			
ANR	4247105	Identifier	pw		4246950	0					
ANR	4247106	CallExpression	strnewp ( options . pw )		4246950	1					
ANR	4247107	Callee	strnewp		4246950	0					
ANR	4247108	Identifier	strnewp		4246950	0					
ANR	4247109	ArgumentList	options . pw		4246950	1					
ANR	4247110	Argument	options . pw		4246950	0					
ANR	4247111	MemberAccess	options . pw		4246950	0					
ANR	4247112	Identifier	options		4246950	0					
ANR	4247113	Identifier	pw		4246950	1					
ANR	4247114	ExpressionStatement	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH + 1 )"	93:3:2435:2488	4246950	1	True				
ANR	4247115	CallExpression	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH + 1 )"		4246950	0					
ANR	4247116	Callee	SecureZeroMemory		4246950	0					
ANR	4247117	Identifier	SecureZeroMemory		4246950	0					
ANR	4247118	ArgumentList	options . pw		4246950	1					
ANR	4247119	Argument	options . pw		4246950	0					
ANR	4247120	MemberAccess	options . pw		4246950	0					
ANR	4247121	Identifier	options		4246950	0					
ANR	4247122	Identifier	pw		4246950	1					
ANR	4247123	Argument	MAX_PASSWORD_LENGTH + 1		4246950	1					
ANR	4247124	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4246950	0		+			
ANR	4247125	Identifier	MAX_PASSWORD_LENGTH		4246950	0					
ANR	4247126	PrimaryExpression	1		4246950	1					
ANR	4247127	ExpressionStatement	"result = write_password_file ( options . password_file , pw )"	95:2:2496:2551	4246950	1	True				
ANR	4247128	AssignmentExpression	"result = write_password_file ( options . password_file , pw )"		4246950	0		=			
ANR	4247129	Identifier	result		4246950	0					
ANR	4247130	CallExpression	"write_password_file ( options . password_file , pw )"		4246950	1					
ANR	4247131	Callee	write_password_file		4246950	0					
ANR	4247132	Identifier	write_password_file		4246950	0					
ANR	4247133	ArgumentList	options . password_file		4246950	1					
ANR	4247134	Argument	options . password_file		4246950	0					
ANR	4247135	MemberAccess	options . password_file		4246950	0					
ANR	4247136	Identifier	options		4246950	0					
ANR	4247137	Identifier	password_file		4246950	1					
ANR	4247138	Argument	pw		4246950	1					
ANR	4247139	Identifier	pw		4246950	0					
ANR	4247140	ExpressionStatement	"SecureZeroMemory ( pw , strlen ( pw ) )"	96:2:2555:2587	4246950	2	True				
ANR	4247141	CallExpression	"SecureZeroMemory ( pw , strlen ( pw ) )"		4246950	0					
ANR	4247142	Callee	SecureZeroMemory		4246950	0					
ANR	4247143	Identifier	SecureZeroMemory		4246950	0					
ANR	4247144	ArgumentList	pw		4246950	1					
ANR	4247145	Argument	pw		4246950	0					
ANR	4247146	Identifier	pw		4246950	0					
ANR	4247147	Argument	strlen ( pw )		4246950	1					
ANR	4247148	CallExpression	strlen ( pw )		4246950	0					
ANR	4247149	Callee	strlen		4246950	0					
ANR	4247150	Identifier	strlen		4246950	0					
ANR	4247151	ArgumentList	pw		4246950	1					
ANR	4247152	Argument	pw		4246950	0					
ANR	4247153	Identifier	pw		4246950	0					
ANR	4247154	IfStatement	if ( result != SUCCESS )		4246950	3					
ANR	4247155	Condition	result != SUCCESS	97:6:2595:2611	4246950	0	True				
ANR	4247156	EqualityExpression	result != SUCCESS		4246950	0		!=			
ANR	4247157	Identifier	result		4246950	0					
ANR	4247158	Identifier	SUCCESS		4246950	1					
ANR	4247159	CompoundStatement		44:25:1026:1026	4246950	1					
ANR	4247160	ExpressionStatement	"fprintf ( stderr , ""error writing password file: %s\\n"" , options . password_file )"	98:3:2619:2716	4246950	0	True				
ANR	4247161	CallExpression	"fprintf ( stderr , ""error writing password file: %s\\n"" , options . password_file )"		4246950	0					
ANR	4247162	Callee	fprintf		4246950	0					
ANR	4247163	Identifier	fprintf		4246950	0					
ANR	4247164	ArgumentList	stderr		4246950	1					
ANR	4247165	Argument	stderr		4246950	0					
ANR	4247166	Identifier	stderr		4246950	0					
ANR	4247167	Argument	"""error writing password file: %s\\n"""		4246950	1					
ANR	4247168	PrimaryExpression	"""error writing password file: %s\\n"""		4246950	0					
ANR	4247169	Argument	options . password_file		4246950	2					
ANR	4247170	MemberAccess	options . password_file		4246950	0					
ANR	4247171	Identifier	options		4246950	0					
ANR	4247172	Identifier	password_file		4246950	1					
ANR	4247173	GotoStatement	goto cleanup ;	102:2:2724:2736	4246950	4	True				
ANR	4247174	Identifier	cleanup		4246950	0					
ANR	4247175	IfStatement	"if ( strcmp ( options . username , """" ) == 0 )"		4246950	15					
ANR	4247176	Condition	"strcmp ( options . username , """" ) == 0"	107:6:2789:2821	4246950	0	True				
ANR	4247177	EqualityExpression	"strcmp ( options . username , """" ) == 0"		4246950	0		==			
ANR	4247178	CallExpression	"strcmp ( options . username , """" )"		4246950	0					
ANR	4247179	Callee	strcmp		4246950	0					
ANR	4247180	Identifier	strcmp		4246950	0					
ANR	4247181	ArgumentList	options . username		4246950	1					
ANR	4247182	Argument	options . username		4246950	0					
ANR	4247183	MemberAccess	options . username		4246950	0					
ANR	4247184	Identifier	options		4246950	0					
ANR	4247185	Identifier	username		4246950	1					
ANR	4247186	Argument	""""""		4246950	1					
ANR	4247187	PrimaryExpression	""""""		4246950	0					
ANR	4247188	PrimaryExpression	0		4246950	1					
ANR	4247189	CompoundStatement		57:2:1316:1349	4246950	1					
ANR	4247190	IdentifierDeclStatement	char * my_name = my_username ( ) ;	109:2:2870:2899	4246950	0	True				
ANR	4247191	IdentifierDecl	* my_name = my_username ( )		4246950	0					
ANR	4247192	IdentifierDeclType	char *		4246950	0					
ANR	4247193	Identifier	my_name		4246950	1					
ANR	4247194	AssignmentExpression	* my_name = my_username ( )		4246950	2		=			
ANR	4247195	Identifier	my_name		4246950	0					
ANR	4247196	CallExpression	my_username ( )		4246950	1					
ANR	4247197	Callee	my_username		4246950	0					
ANR	4247198	Identifier	my_username		4246950	0					
ANR	4247199	ArgumentList			4246950	1					
ANR	4247200	IdentifierDeclStatement	char * my_domain = my_domainname ( ) ;	110:2:2904:2937	4246950	1	True				
ANR	4247201	IdentifierDecl	* my_domain = my_domainname ( )		4246950	0					
ANR	4247202	IdentifierDeclType	char *		4246950	0					
ANR	4247203	Identifier	my_domain		4246950	1					
ANR	4247204	AssignmentExpression	* my_domain = my_domainname ( )		4246950	2		=			
ANR	4247205	Identifier	my_domain		4246950	0					
ANR	4247206	CallExpression	my_domainname ( )		4246950	1					
ANR	4247207	Callee	my_domainname		4246950	0					
ANR	4247208	Identifier	my_domainname		4246950	0					
ANR	4247209	ArgumentList			4246950	1					
ANR	4247210	ExpressionStatement	"my_full_name . sprintf ( ""%s@%s"" , my_name , my_domain )"	112:2:2942:2991	4246950	2	True				
ANR	4247211	CallExpression	"my_full_name . sprintf ( ""%s@%s"" , my_name , my_domain )"		4246950	0					
ANR	4247212	Callee	my_full_name . sprintf		4246950	0					
ANR	4247213	MemberAccess	my_full_name . sprintf		4246950	0					
ANR	4247214	Identifier	my_full_name		4246950	0					
ANR	4247215	Identifier	sprintf		4246950	1					
ANR	4247216	ArgumentList	"""%s@%s"""		4246950	1					
ANR	4247217	Argument	"""%s@%s"""		4246950	0					
ANR	4247218	PrimaryExpression	"""%s@%s"""		4246950	0					
ANR	4247219	Argument	my_name		4246950	1					
ANR	4247220	Identifier	my_name		4246950	0					
ANR	4247221	Argument	my_domain		4246950	2					
ANR	4247222	Identifier	my_domain		4246950	0					
ANR	4247223	IfStatement	if ( my_name )		4246950	3					
ANR	4247224	Condition	my_name	113:7:3000:3006	4246950	0	True				
ANR	4247225	Identifier	my_name		4246950	0					
ANR	4247226	CompoundStatement		60:16:1421:1421	4246950	1					
ANR	4247227	ExpressionStatement	free ( my_name )	113:18:3011:3024	4246950	0	True				
ANR	4247228	CallExpression	free ( my_name )		4246950	0					
ANR	4247229	Callee	free		4246950	0					
ANR	4247230	Identifier	free		4246950	0					
ANR	4247231	ArgumentList	my_name		4246950	1					
ANR	4247232	Argument	my_name		4246950	0					
ANR	4247233	Identifier	my_name		4246950	0					
ANR	4247234	IfStatement	if ( my_domain )		4246950	4					
ANR	4247235	Condition	my_domain	114:7:3035:3043	4246950	0	True				
ANR	4247236	Identifier	my_domain		4246950	0					
ANR	4247237	CompoundStatement		61:18:1458:1458	4246950	1					
ANR	4247238	ExpressionStatement	free ( my_domain )	114:20:3048:3063	4246950	0	True				
ANR	4247239	CallExpression	free ( my_domain )		4246950	0					
ANR	4247240	Callee	free		4246950	0					
ANR	4247241	Identifier	free		4246950	0					
ANR	4247242	ArgumentList	my_domain		4246950	1					
ANR	4247243	Argument	my_domain		4246950	0					
ANR	4247244	Identifier	my_domain		4246950	0					
ANR	4247245	ExpressionStatement	my_name = my_domain = NULL	115:2:3069:3095	4246950	5	True				
ANR	4247246	AssignmentExpression	my_name = my_domain = NULL		4246950	0		=			
ANR	4247247	Identifier	my_name		4246950	0					
ANR	4247248	AssignmentExpression	my_domain = NULL		4246950	1		=			
ANR	4247249	Identifier	my_domain		4246950	0					
ANR	4247250	Identifier	NULL		4246950	1					
ANR	4247251	ElseStatement	else		4246950	0					
ANR	4247252	IfStatement	"if ( strcmp ( options . username , POOL_PASSWORD_USERNAME ) == 0 )"		4246950	0					
ANR	4247253	Condition	"strcmp ( options . username , POOL_PASSWORD_USERNAME ) == 0"	116:12:3109:3161	4246950	0	True				
ANR	4247254	EqualityExpression	"strcmp ( options . username , POOL_PASSWORD_USERNAME ) == 0"		4246950	0		==			
ANR	4247255	CallExpression	"strcmp ( options . username , POOL_PASSWORD_USERNAME )"		4246950	0					
ANR	4247256	Callee	strcmp		4246950	0					
ANR	4247257	Identifier	strcmp		4246950	0					
ANR	4247258	ArgumentList	options . username		4246950	1					
ANR	4247259	Argument	options . username		4246950	0					
ANR	4247260	MemberAccess	options . username		4246950	0					
ANR	4247261	Identifier	options		4246950	0					
ANR	4247262	Identifier	username		4246950	1					
ANR	4247263	Argument	POOL_PASSWORD_USERNAME		4246950	1					
ANR	4247264	Identifier	POOL_PASSWORD_USERNAME		4246950	0					
ANR	4247265	PrimaryExpression	0		4246950	1					
ANR	4247266	CompoundStatement		76:2:2025:2037	4246950	1					
ANR	4247267	IfStatement	if ( options . mode == QUERY_MODE )		4246950	0					
ANR	4247268	Condition	options . mode == QUERY_MODE	121:6:3332:3357	4246950	0	True				
ANR	4247269	EqualityExpression	options . mode == QUERY_MODE		4246950	0		==			
ANR	4247270	MemberAccess	options . mode		4246950	0					
ANR	4247271	Identifier	options		4246950	0					
ANR	4247272	Identifier	mode		4246950	1					
ANR	4247273	Identifier	QUERY_MODE		4246950	1					
ANR	4247274	CompoundStatement		68:34:1772:1772	4246950	1					
ANR	4247275	ExpressionStatement	"fprintf ( stderr , ""Querying the pool password is not supported.\\n"" )"	122:3:3365:3430	4246950	0	True				
ANR	4247276	CallExpression	"fprintf ( stderr , ""Querying the pool password is not supported.\\n"" )"		4246950	0					
ANR	4247277	Callee	fprintf		4246950	0					
ANR	4247278	Identifier	fprintf		4246950	0					
ANR	4247279	ArgumentList	stderr		4246950	1					
ANR	4247280	Argument	stderr		4246950	0					
ANR	4247281	Identifier	stderr		4246950	0					
ANR	4247282	Argument	"""Querying the pool password is not supported.\\n"""		4246950	1					
ANR	4247283	PrimaryExpression	"""Querying the pool password is not supported.\\n"""		4246950	0					
ANR	4247284	GotoStatement	goto cleanup ;	123:3:3435:3447	4246950	1	True				
ANR	4247285	Identifier	cleanup		4246950	0					
ANR	4247286	ExpressionStatement	pool_password_arg = true	128:2:3585:3609	4246950	1	True				
ANR	4247287	AssignmentExpression	pool_password_arg = true		4246950	0		=			
ANR	4247288	Identifier	pool_password_arg		4246950	0					
ANR	4247289	Identifier	true		4246950	1					
ANR	4247290	IdentifierDeclStatement	char * domain ;	129:2:3613:3625	4246950	2	True				
ANR	4247291	IdentifierDecl	* domain		4246950	0					
ANR	4247292	IdentifierDeclType	char *		4246950	0					
ANR	4247293	Identifier	domain		4246950	1					
ANR	4247294	IfStatement	"if ( ( domain = param ( ""SEC_PASSWORD_DOMAIN"" ) ) == NULL )"		4246950	3					
ANR	4247295	Condition	"( domain = param ( ""SEC_PASSWORD_DOMAIN"" ) ) == NULL"	130:6:3633:3679	4246950	0	True				
ANR	4247296	EqualityExpression	"( domain = param ( ""SEC_PASSWORD_DOMAIN"" ) ) == NULL"		4246950	0		==			
ANR	4247297	AssignmentExpression	"domain = param ( ""SEC_PASSWORD_DOMAIN"" )"		4246950	0		=			
ANR	4247298	Identifier	domain		4246950	0					
ANR	4247299	CallExpression	"param ( ""SEC_PASSWORD_DOMAIN"" )"		4246950	1					
ANR	4247300	Callee	param		4246950	0					
ANR	4247301	Identifier	param		4246950	0					
ANR	4247302	ArgumentList	"""SEC_PASSWORD_DOMAIN"""		4246950	1					
ANR	4247303	Argument	"""SEC_PASSWORD_DOMAIN"""		4246950	0					
ANR	4247304	PrimaryExpression	"""SEC_PASSWORD_DOMAIN"""		4246950	0					
ANR	4247305	Identifier	NULL		4246950	1					
ANR	4247306	CompoundStatement		77:55:2094:2094	4246950	1					
ANR	4247307	IfStatement	"if ( ( domain = param ( ""UID_DOMAIN"" ) ) == NULL )"		4246950	0					
ANR	4247308	Condition	"( domain = param ( ""UID_DOMAIN"" ) ) == NULL"	131:7:3691:3728	4246950	0	True				
ANR	4247309	EqualityExpression	"( domain = param ( ""UID_DOMAIN"" ) ) == NULL"		4246950	0		==			
ANR	4247310	AssignmentExpression	"domain = param ( ""UID_DOMAIN"" )"		4246950	0		=			
ANR	4247311	Identifier	domain		4246950	0					
ANR	4247312	CallExpression	"param ( ""UID_DOMAIN"" )"		4246950	1					
ANR	4247313	Callee	param		4246950	0					
ANR	4247314	Identifier	param		4246950	0					
ANR	4247315	ArgumentList	"""UID_DOMAIN"""		4246950	1					
ANR	4247316	Argument	"""UID_DOMAIN"""		4246950	0					
ANR	4247317	PrimaryExpression	"""UID_DOMAIN"""		4246950	0					
ANR	4247318	Identifier	NULL		4246950	1					
ANR	4247319	CompoundStatement		78:47:2143:2143	4246950	1					
ANR	4247320	ExpressionStatement	"fprintf ( stderr , ""ERROR: could not domain for pool password\\n"" )"	132:4:3737:3799	4246950	0	True				
ANR	4247321	CallExpression	"fprintf ( stderr , ""ERROR: could not domain for pool password\\n"" )"		4246950	0					
ANR	4247322	Callee	fprintf		4246950	0					
ANR	4247323	Identifier	fprintf		4246950	0					
ANR	4247324	ArgumentList	stderr		4246950	1					
ANR	4247325	Argument	stderr		4246950	0					
ANR	4247326	Identifier	stderr		4246950	0					
ANR	4247327	Argument	"""ERROR: could not domain for pool password\\n"""		4246950	1					
ANR	4247328	PrimaryExpression	"""ERROR: could not domain for pool password\\n"""		4246950	0					
ANR	4247329	GotoStatement	goto cleanup ;	133:4:3805:3817	4246950	1	True				
ANR	4247330	Identifier	cleanup		4246950	0					
ANR	4247331	Statement	my_full_name	136:2:3830:3841	4246950	4	True				
ANR	4247332	Statement	.	136:14:3842:3842	4246950	5	True				
ANR	4247333	Statement	sprintf	136:15:3843:3849	4246950	6	True				
ANR	4247334	Statement	(	136:22:3850:3850	4246950	7	True				
ANR	4247335	Statement	POOL_PASSWORD_USERNAME	136:23:3851:3872	4246950	8	True				
ANR	4247336	Statement	"""@%s"""	136:46:3874:3878	4246950	9	True				
ANR	4247337	Statement	","	136:51:3879:3879	4246950	10	True				
ANR	4247338	Statement	domain	136:53:3881:3886	4246950	11	True				
ANR	4247339	Statement	)	136:59:3887:3887	4246950	12	True				
ANR	4247340	ExpressionStatement		136:60:3888:3888	4246950	13	True				
ANR	4247341	ExpressionStatement	free ( domain )	137:2:3892:3904	4246950	14	True				
ANR	4247342	CallExpression	free ( domain )		4246950	0					
ANR	4247343	Callee	free		4246950	0					
ANR	4247344	Identifier	free		4246950	0					
ANR	4247345	ArgumentList	domain		4246950	1					
ANR	4247346	Argument	domain		4246950	0					
ANR	4247347	Identifier	domain		4246950	0					
ANR	4247348	ElseStatement	else		4246950	0					
ANR	4247349	CompoundStatement		85:8:2326:2326	4246950	0					
ANR	4247350	ExpressionStatement	my_full_name += options . username	140:2:3967:3999	4246950	0	True				
ANR	4247351	AssignmentExpression	my_full_name += options . username		4246950	0		+=			
ANR	4247352	Identifier	my_full_name		4246950	0					
ANR	4247353	MemberAccess	options . username		4246950	1					
ANR	4247354	Identifier	options		4246950	0					
ANR	4247355	Identifier	username		4246950	1					
ANR	4247356	ExpressionStatement	full_name = my_full_name . Value ( )	142:1:4005:4037	4246950	16	True				
ANR	4247357	AssignmentExpression	full_name = my_full_name . Value ( )		4246950	0		=			
ANR	4247358	Identifier	full_name		4246950	0					
ANR	4247359	CallExpression	my_full_name . Value ( )		4246950	1					
ANR	4247360	Callee	my_full_name . Value		4246950	0					
ANR	4247361	MemberAccess	my_full_name . Value		4246950	0					
ANR	4247362	Identifier	my_full_name		4246950	0					
ANR	4247363	Identifier	Value		4246950	1					
ANR	4247364	ArgumentList			4246950	1					
ANR	4247365	ExpressionStatement	"printf ( ""Account: %s\\n\\n"" , full_name )"	143:1:4040:4076	4246950	17	True				
ANR	4247366	CallExpression	"printf ( ""Account: %s\\n\\n"" , full_name )"		4246950	0					
ANR	4247367	Callee	printf		4246950	0					
ANR	4247368	Identifier	printf		4246950	0					
ANR	4247369	ArgumentList	"""Account: %s\\n\\n"""		4246950	1					
ANR	4247370	Argument	"""Account: %s\\n\\n"""		4246950	0					
ANR	4247371	PrimaryExpression	"""Account: %s\\n\\n"""		4246950	0					
ANR	4247372	Argument	full_name		4246950	1					
ANR	4247373	Identifier	full_name		4246950	0					
ANR	4247374	ExpressionStatement	daemon = NULL	146:1:4122:4135	4246950	18	True				
ANR	4247375	AssignmentExpression	daemon = NULL		4246950	0		=			
ANR	4247376	Identifier	daemon		4246950	0					
ANR	4247377	Identifier	NULL		4246950	1					
ANR	4247378	ExpressionStatement	credd_host = NULL	147:1:4138:4155	4246950	19	True				
ANR	4247379	AssignmentExpression	credd_host = NULL		4246950	0		=			
ANR	4247380	Identifier	credd_host		4246950	0					
ANR	4247381	Identifier	NULL		4246950	1					
ANR	4247382	IfStatement	if ( options . daemonname != NULL )		4246950	20					
ANR	4247383	Condition	options . daemonname != NULL	148:5:4162:4187	4246950	0	True				
ANR	4247384	EqualityExpression	options . daemonname != NULL		4246950	0		!=			
ANR	4247385	MemberAccess	options . daemonname		4246950	0					
ANR	4247386	Identifier	options		4246950	0					
ANR	4247387	Identifier	daemonname		4246950	1					
ANR	4247388	Identifier	NULL		4246950	1					
ANR	4247389	CompoundStatement		95:33:2602:2602	4246950	1					
ANR	4247390	IfStatement	if ( pool_password_arg && ( options . mode != QUERY_MODE ) )		4246950	0					
ANR	4247391	Condition	pool_password_arg && ( options . mode != QUERY_MODE )	149:6:4198:4246	4246950	0	True				
ANR	4247392	AndExpression	pool_password_arg && ( options . mode != QUERY_MODE )		4246950	0		&&			
ANR	4247393	Identifier	pool_password_arg		4246950	0					
ANR	4247394	EqualityExpression	options . mode != QUERY_MODE		4246950	1		!=			
ANR	4247395	MemberAccess	options . mode		4246950	0					
ANR	4247396	Identifier	options		4246950	0					
ANR	4247397	Identifier	mode		4246950	1					
ANR	4247398	Identifier	QUERY_MODE		4246950	1					
ANR	4247399	CompoundStatement		96:57:2661:2661	4246950	1					
ANR	4247400	ExpressionStatement	"daemon = new Daemon ( DT_MASTER , options . daemonname )"	152:3:4389:4439	4246950	0	True				
ANR	4247401	AssignmentExpression	"daemon = new Daemon ( DT_MASTER , options . daemonname )"		4246950	0		=			
ANR	4247402	Identifier	daemon		4246950	0					
ANR	4247403	Expression	"DT_MASTER , options . daemonname"		4246950	1					
ANR	4247404	Identifier	DT_MASTER		4246950	0					
ANR	4247405	MemberAccess	options . daemonname		4246950	1					
ANR	4247406	Identifier	options		4246950	0					
ANR	4247407	Identifier	daemonname		4246950	1					
ANR	4247408	ElseStatement	else		4246950	0					
ANR	4247409	CompoundStatement		101:7:2864:2864	4246950	0					
ANR	4247410	ExpressionStatement	"daemon = new Daemon ( DT_SCHEDD , options . daemonname )"	157:3:4592:4642	4246950	0	True				
ANR	4247411	AssignmentExpression	"daemon = new Daemon ( DT_SCHEDD , options . daemonname )"		4246950	0		=			
ANR	4247412	Identifier	daemon		4246950	0					
ANR	4247413	Expression	"DT_SCHEDD , options . daemonname"		4246950	1					
ANR	4247414	Identifier	DT_SCHEDD		4246950	0					
ANR	4247415	MemberAccess	options . daemonname		4246950	1					
ANR	4247416	Identifier	options		4246950	0					
ANR	4247417	Identifier	daemonname		4246950	1					
ANR	4247418	ElseStatement	else		4246950	0					
ANR	4247419	IfStatement	"if ( ! pool_password_arg && ( ( credd_host = param ( ""CREDD_HOST"" ) ) != NULL ) )"		4246950	0					
ANR	4247420	Condition	"! pool_password_arg && ( ( credd_host = param ( ""CREDD_HOST"" ) ) != NULL )"	160:10:4661:4726	4246950	0	True				
ANR	4247421	AndExpression	"! pool_password_arg && ( ( credd_host = param ( ""CREDD_HOST"" ) ) != NULL )"		4246950	0		&&			
ANR	4247422	UnaryOperationExpression	! pool_password_arg		4246950	0					
ANR	4247423	UnaryOperator	!		4246950	0					
ANR	4247424	Identifier	pool_password_arg		4246950	1					
ANR	4247425	EqualityExpression	"( credd_host = param ( ""CREDD_HOST"" ) ) != NULL"		4246950	1		!=			
ANR	4247426	AssignmentExpression	"credd_host = param ( ""CREDD_HOST"" )"		4246950	0		=			
ANR	4247427	Identifier	credd_host		4246950	0					
ANR	4247428	CallExpression	"param ( ""CREDD_HOST"" )"		4246950	1					
ANR	4247429	Callee	param		4246950	0					
ANR	4247430	Identifier	param		4246950	0					
ANR	4247431	ArgumentList	"""CREDD_HOST"""		4246950	1					
ANR	4247432	Argument	"""CREDD_HOST"""		4246950	0					
ANR	4247433	PrimaryExpression	"""CREDD_HOST"""		4246950	0					
ANR	4247434	Identifier	NULL		4246950	1					
ANR	4247435	CompoundStatement		107:78:3141:3141	4246950	1					
ANR	4247436	ExpressionStatement	daemon = new Daemon ( DT_CREDD )	164:2:4909:4938	4246950	0	True				
ANR	4247437	AssignmentExpression	daemon = new Daemon ( DT_CREDD )		4246950	0		=			
ANR	4247438	Identifier	daemon		4246950	0					
ANR	4247439	Identifier	DT_CREDD		4246950	1					
ANR	4247440	ElseStatement	else		4246950	0					
ANR	4247441	CompoundStatement		113:6:3361:3361	4246950	0					
ANR	4247442	IfStatement	if ( pool_password_arg && ( options . mode == DELETE_MODE ) )		4246950	21					
ANR	4247443	Condition	pool_password_arg && ( options . mode == DELETE_MODE )	171:5:5066:5115	4246950	0	True				
ANR	4247444	AndExpression	pool_password_arg && ( options . mode == DELETE_MODE )		4246950	0		&&			
ANR	4247445	Identifier	pool_password_arg		4246950	0					
ANR	4247446	EqualityExpression	options . mode == DELETE_MODE		4246950	1		==			
ANR	4247447	MemberAccess	options . mode		4246950	0					
ANR	4247448	Identifier	options		4246950	0					
ANR	4247449	Identifier	mode		4246950	1					
ANR	4247450	Identifier	DELETE_MODE		4246950	1					
ANR	4247451	CompoundStatement		118:57:3530:3530	4246950	1					
ANR	4247452	ExpressionStatement	pool_password_delete = true	172:2:5122:5149	4246950	0	True				
ANR	4247453	AssignmentExpression	pool_password_delete = true		4246950	0		=			
ANR	4247454	Identifier	pool_password_delete		4246950	0					
ANR	4247455	Identifier	true		4246950	1					
ANR	4247456	SwitchStatement	switch ( options . mode )		4246950	22					
ANR	4247457	Condition	options . mode	175:9:5164:5175	4246950	0	True				
ANR	4247458	MemberAccess	options . mode		4246950	0					
ANR	4247459	Identifier	options		4246950	0					
ANR	4247460	Identifier	mode		4246950	1					
ANR	4247461	CompoundStatement		122:23:3590:3590	4246950	1					
ANR	4247462	Label	case ADD_MODE :	176:2:5182:5195	4246950	0	True				
ANR	4247463	Identifier	ADD_MODE		4246950	0					
ANR	4247464	Label	case DELETE_MODE :	177:2:5199:5215	4246950	1	True				
ANR	4247465	Identifier	DELETE_MODE		4246950	0					
ANR	4247466	IfStatement	if ( ! pool_password_delete )		4246950	2					
ANR	4247467	Condition	! pool_password_delete	178:7:5224:5244	4246950	0	True				
ANR	4247468	UnaryOperationExpression	! pool_password_delete		4246950	0					
ANR	4247469	UnaryOperator	!		4246950	0					
ANR	4247470	Identifier	pool_password_delete		4246950	1					
ANR	4247471	CompoundStatement		125:30:3659:3659	4246950	1					
ANR	4247472	IfStatement	"if ( strcmp ( options . pw , """" ) == 0 )"		4246950	0					
ANR	4247473	Condition	"strcmp ( options . pw , """" ) == 0"	179:9:5258:5284	4246950	0	True				
ANR	4247474	EqualityExpression	"strcmp ( options . pw , """" ) == 0"		4246950	0		==			
ANR	4247475	CallExpression	"strcmp ( options . pw , """" )"		4246950	0					
ANR	4247476	Callee	strcmp		4246950	0					
ANR	4247477	Identifier	strcmp		4246950	0					
ANR	4247478	ArgumentList	options . pw		4246950	1					
ANR	4247479	Argument	options . pw		4246950	0					
ANR	4247480	MemberAccess	options . pw		4246950	0					
ANR	4247481	Identifier	options		4246950	0					
ANR	4247482	Identifier	pw		4246950	1					
ANR	4247483	Argument	""""""		4246950	1					
ANR	4247484	PrimaryExpression	""""""		4246950	0					
ANR	4247485	PrimaryExpression	0		4246950	1					
ANR	4247486	CompoundStatement		126:39:3700:3700	4246950	1					
ANR	4247487	ExpressionStatement	pw = get_password ( )	181:5:5331:5350	4246950	0	True				
ANR	4247488	AssignmentExpression	pw = get_password ( )		4246950	0		=			
ANR	4247489	Identifier	pw		4246950	0					
ANR	4247490	CallExpression	get_password ( )		4246950	1					
ANR	4247491	Callee	get_password		4246950	0					
ANR	4247492	Identifier	get_password		4246950	0					
ANR	4247493	ArgumentList			4246950	1					
ANR	4247494	ExpressionStatement	"printf ( ""\\n\\n"" )"	182:5:5357:5371	4246950	1	True				
ANR	4247495	CallExpression	"printf ( ""\\n\\n"" )"		4246950	0					
ANR	4247496	Callee	printf		4246950	0					
ANR	4247497	Identifier	printf		4246950	0					
ANR	4247498	ArgumentList	"""\\n\\n"""		4246950	1					
ANR	4247499	Argument	"""\\n\\n"""		4246950	0					
ANR	4247500	PrimaryExpression	"""\\n\\n"""		4246950	0					
ANR	4247501	ElseStatement	else		4246950	0					
ANR	4247502	CompoundStatement		130:11:3796:3796	4246950	0					
ANR	4247503	ExpressionStatement	pw = strnewp ( options . pw )	185:5:5437:5461	4246950	0	True				
ANR	4247504	AssignmentExpression	pw = strnewp ( options . pw )		4246950	0		=			
ANR	4247505	Identifier	pw		4246950	0					
ANR	4247506	CallExpression	strnewp ( options . pw )		4246950	1					
ANR	4247507	Callee	strnewp		4246950	0					
ANR	4247508	Identifier	strnewp		4246950	0					
ANR	4247509	ArgumentList	options . pw		4246950	1					
ANR	4247510	Argument	options . pw		4246950	0					
ANR	4247511	MemberAccess	options . pw		4246950	0					
ANR	4247512	Identifier	options		4246950	0					
ANR	4247513	Identifier	pw		4246950	1					
ANR	4247514	ExpressionStatement	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH )"	186:5:5468:5517	4246950	1	True				
ANR	4247515	CallExpression	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH )"		4246950	0					
ANR	4247516	Callee	SecureZeroMemory		4246950	0					
ANR	4247517	Identifier	SecureZeroMemory		4246950	0					
ANR	4247518	ArgumentList	options . pw		4246950	1					
ANR	4247519	Argument	options . pw		4246950	0					
ANR	4247520	MemberAccess	options . pw		4246950	0					
ANR	4247521	Identifier	options		4246950	0					
ANR	4247522	Identifier	pw		4246950	1					
ANR	4247523	Argument	MAX_PASSWORD_LENGTH		4246950	1					
ANR	4247524	Identifier	MAX_PASSWORD_LENGTH		4246950	0					
ANR	4247525	IfStatement	if ( pw || pool_password_delete )		4246950	3					
ANR	4247526	Condition	pw || pool_password_delete	189:8:5538:5563	4246950	0	True				
ANR	4247527	OrExpression	pw || pool_password_delete		4246950	0		||			
ANR	4247528	Identifier	pw		4246950	0					
ANR	4247529	Identifier	pool_password_delete		4246950	1					
ANR	4247530	CompoundStatement		136:36:3978:3978	4246950	1					
ANR	4247531	ExpressionStatement	"result = store_cred ( full_name , pw , options . mode , daemon )"	190:4:5572:5628	4246950	0	True				
ANR	4247532	AssignmentExpression	"result = store_cred ( full_name , pw , options . mode , daemon )"		4246950	0		=			
ANR	4247533	Identifier	result		4246950	0					
ANR	4247534	CallExpression	"store_cred ( full_name , pw , options . mode , daemon )"		4246950	1					
ANR	4247535	Callee	store_cred		4246950	0					
ANR	4247536	Identifier	store_cred		4246950	0					
ANR	4247537	ArgumentList	full_name		4246950	1					
ANR	4247538	Argument	full_name		4246950	0					
ANR	4247539	Identifier	full_name		4246950	0					
ANR	4247540	Argument	pw		4246950	1					
ANR	4247541	Identifier	pw		4246950	0					
ANR	4247542	Argument	options . mode		4246950	2					
ANR	4247543	MemberAccess	options . mode		4246950	0					
ANR	4247544	Identifier	options		4246950	0					
ANR	4247545	Identifier	mode		4246950	1					
ANR	4247546	Argument	daemon		4246950	3					
ANR	4247547	Identifier	daemon		4246950	0					
ANR	4247548	IfStatement	if ( ( result == FAILURE_NOT_SECURE ) && goAheadAnyways ( ) )		4246950	1					
ANR	4247549	Condition	( result == FAILURE_NOT_SECURE ) && goAheadAnyways ( )	191:8:5638:5687	4246950	0	True				
ANR	4247550	AndExpression	( result == FAILURE_NOT_SECURE ) && goAheadAnyways ( )		4246950	0		&&			
ANR	4247551	EqualityExpression	result == FAILURE_NOT_SECURE		4246950	0		==			
ANR	4247552	Identifier	result		4246950	0					
ANR	4247553	Identifier	FAILURE_NOT_SECURE		4246950	1					
ANR	4247554	CallExpression	goAheadAnyways ( )		4246950	1					
ANR	4247555	Callee	goAheadAnyways		4246950	0					
ANR	4247556	Identifier	goAheadAnyways		4246950	0					
ANR	4247557	ArgumentList			4246950	1					
ANR	4247558	CompoundStatement		138:60:4102:4102	4246950	1					
ANR	4247559	ExpressionStatement	"result = store_cred ( full_name , pw , options . mode , daemon , true )"	193:5:5760:5822	4246950	0	True				
ANR	4247560	AssignmentExpression	"result = store_cred ( full_name , pw , options . mode , daemon , true )"		4246950	0		=			
ANR	4247561	Identifier	result		4246950	0					
ANR	4247562	CallExpression	"store_cred ( full_name , pw , options . mode , daemon , true )"		4246950	1					
ANR	4247563	Callee	store_cred		4246950	0					
ANR	4247564	Identifier	store_cred		4246950	0					
ANR	4247565	ArgumentList	full_name		4246950	1					
ANR	4247566	Argument	full_name		4246950	0					
ANR	4247567	Identifier	full_name		4246950	0					
ANR	4247568	Argument	pw		4246950	1					
ANR	4247569	Identifier	pw		4246950	0					
ANR	4247570	Argument	options . mode		4246950	2					
ANR	4247571	MemberAccess	options . mode		4246950	0					
ANR	4247572	Identifier	options		4246950	0					
ANR	4247573	Identifier	mode		4246950	1					
ANR	4247574	Argument	daemon		4246950	3					
ANR	4247575	Identifier	daemon		4246950	0					
ANR	4247576	Argument	true		4246950	4					
ANR	4247577	Identifier	true		4246950	0					
ANR	4247578	IfStatement	if ( pw )		4246950	2					
ANR	4247579	Condition	pw	195:8:5838:5839	4246950	0	True				
ANR	4247580	Identifier	pw		4246950	0					
ANR	4247581	CompoundStatement		142:12:4254:4254	4246950	1					
ANR	4247582	ExpressionStatement	"SecureZeroMemory ( pw , strlen ( pw ) )"	196:5:5849:5881	4246950	0	True				
ANR	4247583	CallExpression	"SecureZeroMemory ( pw , strlen ( pw ) )"		4246950	0					
ANR	4247584	Callee	SecureZeroMemory		4246950	0					
ANR	4247585	Identifier	SecureZeroMemory		4246950	0					
ANR	4247586	ArgumentList	pw		4246950	1					
ANR	4247587	Argument	pw		4246950	0					
ANR	4247588	Identifier	pw		4246950	0					
ANR	4247589	Argument	strlen ( pw )		4246950	1					
ANR	4247590	CallExpression	strlen ( pw )		4246950	0					
ANR	4247591	Callee	strlen		4246950	0					
ANR	4247592	Identifier	strlen		4246950	0					
ANR	4247593	ArgumentList	pw		4246950	1					
ANR	4247594	Argument	pw		4246950	0					
ANR	4247595	Identifier	pw		4246950	0					
ANR	4247596	Statement	delete	197:5:5888:5893	4246950	1	True				
ANR	4247597	Statement	[	197:11:5894:5894	4246950	2	True				
ANR	4247598	Statement	]	197:12:5895:5895	4246950	3	True				
ANR	4247599	ExpressionStatement	pw	197:14:5897:5899	4246950	4	True				
ANR	4247600	Identifier	pw		4246950	0					
ANR	4247601	BreakStatement	break ;	200:3:5915:5920	4246950	4	True				
ANR	4247602	Label	case QUERY_MODE :	201:2:5924:5939	4246950	5	True				
ANR	4247603	Identifier	QUERY_MODE		4246950	0					
ANR	4247604	ExpressionStatement	"result = queryCredential ( full_name , daemon )"	202:3:5944:5987	4246950	6	True				
ANR	4247605	AssignmentExpression	"result = queryCredential ( full_name , daemon )"		4246950	0		=			
ANR	4247606	Identifier	result		4246950	0					
ANR	4247607	CallExpression	"queryCredential ( full_name , daemon )"		4246950	1					
ANR	4247608	Callee	queryCredential		4246950	0					
ANR	4247609	Identifier	queryCredential		4246950	0					
ANR	4247610	ArgumentList	full_name		4246950	1					
ANR	4247611	Argument	full_name		4246950	0					
ANR	4247612	Identifier	full_name		4246950	0					
ANR	4247613	Argument	daemon		4246950	1					
ANR	4247614	Identifier	daemon		4246950	0					
ANR	4247615	BreakStatement	break ;	203:3:5992:5997	4246950	7	True				
ANR	4247616	Label	case CONFIG_MODE :	205:2:6020:6036	4246950	8	True				
ANR	4247617	Identifier	CONFIG_MODE		4246950	0					
ANR	4247618	ReturnStatement	return interactive ( ) ;	206:3:6041:6061	4246950	9	True				
ANR	4247619	CallExpression	interactive ( )		4246950	0					
ANR	4247620	Callee	interactive		4246950	0					
ANR	4247621	Identifier	interactive		4246950	0					
ANR	4247622	ArgumentList			4246950	1					
ANR	4247623	BreakStatement	break ;	207:3:6066:6071	4246950	10	True				
ANR	4247624	Label	default :	209:2:6082:6089	4246950	11	True				
ANR	4247625	Identifier	default		4246950	0					
ANR	4247626	ExpressionStatement	"fprintf ( stderr , ""Internal error\\n"" )"	210:3:6094:6129	4246950	12	True				
ANR	4247627	CallExpression	"fprintf ( stderr , ""Internal error\\n"" )"		4246950	0					
ANR	4247628	Callee	fprintf		4246950	0					
ANR	4247629	Identifier	fprintf		4246950	0					
ANR	4247630	ArgumentList	stderr		4246950	1					
ANR	4247631	Argument	stderr		4246950	0					
ANR	4247632	Identifier	stderr		4246950	0					
ANR	4247633	Argument	"""Internal error\\n"""		4246950	1					
ANR	4247634	PrimaryExpression	"""Internal error\\n"""		4246950	0					
ANR	4247635	GotoStatement	goto cleanup ;	211:3:6134:6146	4246950	13	True				
ANR	4247636	Identifier	cleanup		4246950	0					
ANR	4247637	SwitchStatement	switch ( result )		4246950	23					
ANR	4247638	Condition	result	215:9:6192:6197	4246950	0	True				
ANR	4247639	Identifier	result		4246950	0					
ANR	4247640	CompoundStatement		162:17:4612:4612	4246950	1					
ANR	4247641	Label	case SUCCESS :	216:2:6204:6216	4246950	0	True				
ANR	4247642	Identifier	SUCCESS		4246950	0					
ANR	4247643	IfStatement	if ( options . mode == QUERY_MODE )		4246950	1					
ANR	4247644	Condition	options . mode == QUERY_MODE	217:7:6225:6250	4246950	0	True				
ANR	4247645	EqualityExpression	options . mode == QUERY_MODE		4246950	0		==			
ANR	4247646	MemberAccess	options . mode		4246950	0					
ANR	4247647	Identifier	options		4246950	0					
ANR	4247648	Identifier	mode		4246950	1					
ANR	4247649	Identifier	QUERY_MODE		4246950	1					
ANR	4247650	CompoundStatement		164:35:4665:4665	4246950	1					
ANR	4247651	ExpressionStatement	"printf ( ""A credential is stored and is valid.\\n"" )"	218:4:6259:6307	4246950	0	True				
ANR	4247652	CallExpression	"printf ( ""A credential is stored and is valid.\\n"" )"		4246950	0					
ANR	4247653	Callee	printf		4246950	0					
ANR	4247654	Identifier	printf		4246950	0					
ANR	4247655	ArgumentList	"""A credential is stored and is valid.\\n"""		4246950	1					
ANR	4247656	Argument	"""A credential is stored and is valid.\\n"""		4246950	0					
ANR	4247657	PrimaryExpression	"""A credential is stored and is valid.\\n"""		4246950	0					
ANR	4247658	ElseStatement	else		4246950	0					
ANR	4247659	CompoundStatement		167:8:4734:4734	4246950	0					
ANR	4247660	ExpressionStatement	"printf ( ""Operation succeeded.\\n"" )"	221:4:6328:6360	4246950	0	True				
ANR	4247661	CallExpression	"printf ( ""Operation succeeded.\\n"" )"		4246950	0					
ANR	4247662	Callee	printf		4246950	0					
ANR	4247663	Identifier	printf		4246950	0					
ANR	4247664	ArgumentList	"""Operation succeeded.\\n"""		4246950	1					
ANR	4247665	Argument	"""Operation succeeded.\\n"""		4246950	0					
ANR	4247666	PrimaryExpression	"""Operation succeeded.\\n"""		4246950	0					
ANR	4247667	BreakStatement	break ;	223:3:6370:6375	4246950	2	True				
ANR	4247668	Label	case FAILURE :	225:2:6380:6392	4246950	3	True				
ANR	4247669	Identifier	FAILURE		4246950	0					
ANR	4247670	ExpressionStatement	"printf ( ""Operation failed.\\n"" )"	226:3:6397:6426	4246950	4	True				
ANR	4247671	CallExpression	"printf ( ""Operation failed.\\n"" )"		4246950	0					
ANR	4247672	Callee	printf		4246950	0					
ANR	4247673	Identifier	printf		4246950	0					
ANR	4247674	ArgumentList	"""Operation failed.\\n"""		4246950	1					
ANR	4247675	Argument	"""Operation failed.\\n"""		4246950	0					
ANR	4247676	PrimaryExpression	"""Operation failed.\\n"""		4246950	0					
ANR	4247677	IfStatement	if ( pool_password_arg && ( options . mode != QUERY_MODE ) )		4246950	5					
ANR	4247678	Condition	pool_password_arg && ( options . mode != QUERY_MODE )	227:7:6435:6483	4246950	0	True				
ANR	4247679	AndExpression	pool_password_arg && ( options . mode != QUERY_MODE )		4246950	0		&&			
ANR	4247680	Identifier	pool_password_arg		4246950	0					
ANR	4247681	EqualityExpression	options . mode != QUERY_MODE		4246950	1		!=			
ANR	4247682	MemberAccess	options . mode		4246950	0					
ANR	4247683	Identifier	options		4246950	0					
ANR	4247684	Identifier	mode		4246950	1					
ANR	4247685	Identifier	QUERY_MODE		4246950	1					
ANR	4247686	CompoundStatement		174:58:4898:4898	4246950	1					
ANR	4247687	ExpressionStatement	"printf ( ""    Make sure you have CONFIG access to the target Master.\\n"" )"	228:4:6492:6562	4246950	0	True				
ANR	4247688	CallExpression	"printf ( ""    Make sure you have CONFIG access to the target Master.\\n"" )"		4246950	0					
ANR	4247689	Callee	printf		4246950	0					
ANR	4247690	Identifier	printf		4246950	0					
ANR	4247691	ArgumentList	"""    Make sure you have CONFIG access to the target Master.\\n"""		4246950	1					
ANR	4247692	Argument	"""    Make sure you have CONFIG access to the target Master.\\n"""		4246950	0					
ANR	4247693	PrimaryExpression	"""    Make sure you have CONFIG access to the target Master.\\n"""		4246950	0					
ANR	4247694	ElseStatement	else		4246950	0					
ANR	4247695	CompoundStatement		177:8:4989:4989	4246950	0					
ANR	4247696	ExpressionStatement	"printf ( ""    Make sure your ALLOW_WRITE setting includes this host.\\n"" )"	231:4:6583:6653	4246950	0	True				
ANR	4247697	CallExpression	"printf ( ""    Make sure your ALLOW_WRITE setting includes this host.\\n"" )"		4246950	0					
ANR	4247698	Callee	printf		4246950	0					
ANR	4247699	Identifier	printf		4246950	0					
ANR	4247700	ArgumentList	"""    Make sure your ALLOW_WRITE setting includes this host.\\n"""		4246950	1					
ANR	4247701	Argument	"""    Make sure your ALLOW_WRITE setting includes this host.\\n"""		4246950	0					
ANR	4247702	PrimaryExpression	"""    Make sure your ALLOW_WRITE setting includes this host.\\n"""		4246950	0					
ANR	4247703	BreakStatement	break ;	233:3:6663:6668	4246950	6	True				
ANR	4247704	Label	case FAILURE_BAD_PASSWORD :	235:2:6673:6698	4246950	7	True				
ANR	4247705	Identifier	FAILURE_BAD_PASSWORD		4246950	0					
ANR	4247706	IfStatement	if ( options . mode == QUERY_MODE )		4246950	8					
ANR	4247707	Condition	options . mode == QUERY_MODE	236:7:6707:6732	4246950	0	True				
ANR	4247708	EqualityExpression	options . mode == QUERY_MODE		4246950	0		==			
ANR	4247709	MemberAccess	options . mode		4246950	0					
ANR	4247710	Identifier	options		4246950	0					
ANR	4247711	Identifier	mode		4246950	1					
ANR	4247712	Identifier	QUERY_MODE		4246950	1					
ANR	4247713	CompoundStatement		183:35:5147:5147	4246950	1					
ANR	4247714	Statement	printf	237:4:6741:6746	4246950	0	True				
ANR	4247715	Statement	(	237:10:6747:6747	4246950	1	True				
ANR	4247716	Statement	"""A credential is stored, but it is invalid. """	237:11:6748:6792	4246950	2	True				
ANR	4247717	Statement	"""Run 'condor_store_cred add' again.\\n"""	238:11:6805:6842	4246950	3	True				
ANR	4247718	Statement	)	238:49:6843:6843	4246950	4	True				
ANR	4247719	ExpressionStatement		238:50:6844:6844	4246950	5	True				
ANR	4247720	ElseStatement	else		4246950	0					
ANR	4247721	CompoundStatement		187:8:5271:5271	4246950	0					
ANR	4247722	ExpressionStatement	"printf ( ""Operation failed: bad password.\\n"" )"	241:4:6865:6908	4246950	0	True				
ANR	4247723	CallExpression	"printf ( ""Operation failed: bad password.\\n"" )"		4246950	0					
ANR	4247724	Callee	printf		4246950	0					
ANR	4247725	Identifier	printf		4246950	0					
ANR	4247726	ArgumentList	"""Operation failed: bad password.\\n"""		4246950	1					
ANR	4247727	Argument	"""Operation failed: bad password.\\n"""		4246950	0					
ANR	4247728	PrimaryExpression	"""Operation failed: bad password.\\n"""		4246950	0					
ANR	4247729	BreakStatement	break ;	243:3:6918:6923	4246950	9	True				
ANR	4247730	Label	case FAILURE_NOT_FOUND :	245:2:6928:6950	4246950	10	True				
ANR	4247731	Identifier	FAILURE_NOT_FOUND		4246950	0					
ANR	4247732	IfStatement	if ( options . mode == QUERY_MODE )		4246950	11					
ANR	4247733	Condition	options . mode == QUERY_MODE	246:7:6959:6984	4246950	0	True				
ANR	4247734	EqualityExpression	options . mode == QUERY_MODE		4246950	0		==			
ANR	4247735	MemberAccess	options . mode		4246950	0					
ANR	4247736	Identifier	options		4246950	0					
ANR	4247737	Identifier	mode		4246950	1					
ANR	4247738	Identifier	QUERY_MODE		4246950	1					
ANR	4247739	CompoundStatement		193:35:5399:5399	4246950	1					
ANR	4247740	ExpressionStatement	"printf ( ""No credential is stored.\\n"" )"	247:4:6993:7029	4246950	0	True				
ANR	4247741	CallExpression	"printf ( ""No credential is stored.\\n"" )"		4246950	0					
ANR	4247742	Callee	printf		4246950	0					
ANR	4247743	Identifier	printf		4246950	0					
ANR	4247744	ArgumentList	"""No credential is stored.\\n"""		4246950	1					
ANR	4247745	Argument	"""No credential is stored.\\n"""		4246950	0					
ANR	4247746	PrimaryExpression	"""No credential is stored.\\n"""		4246950	0					
ANR	4247747	ElseStatement	else		4246950	0					
ANR	4247748	CompoundStatement		196:8:5456:5456	4246950	0					
ANR	4247749	ExpressionStatement	"printf ( ""Operation failed: username not found.\\n"" )"	250:4:7050:7099	4246950	0	True				
ANR	4247750	CallExpression	"printf ( ""Operation failed: username not found.\\n"" )"		4246950	0					
ANR	4247751	Callee	printf		4246950	0					
ANR	4247752	Identifier	printf		4246950	0					
ANR	4247753	ArgumentList	"""Operation failed: username not found.\\n"""		4246950	1					
ANR	4247754	Argument	"""Operation failed: username not found.\\n"""		4246950	0					
ANR	4247755	PrimaryExpression	"""Operation failed: username not found.\\n"""		4246950	0					
ANR	4247756	BreakStatement	break ;	252:3:7109:7114	4246950	12	True				
ANR	4247757	Label	case FAILURE_NOT_SECURE :	254:2:7119:7142	4246950	13	True				
ANR	4247758	Identifier	FAILURE_NOT_SECURE		4246950	0					
ANR	4247759	Label	case FAILURE_ABORTED :	255:2:7146:7166	4246950	14	True				
ANR	4247760	Identifier	FAILURE_ABORTED		4246950	0					
ANR	4247761	ExpressionStatement	"printf ( ""Operation aborted.\\n"" )"	256:3:7171:7201	4246950	15	True				
ANR	4247762	CallExpression	"printf ( ""Operation aborted.\\n"" )"		4246950	0					
ANR	4247763	Callee	printf		4246950	0					
ANR	4247764	Identifier	printf		4246950	0					
ANR	4247765	ArgumentList	"""Operation aborted.\\n"""		4246950	1					
ANR	4247766	Argument	"""Operation aborted.\\n"""		4246950	0					
ANR	4247767	PrimaryExpression	"""Operation aborted.\\n"""		4246950	0					
ANR	4247768	BreakStatement	break ;	257:3:7206:7211	4246950	16	True				
ANR	4247769	Label	case FAILURE_NOT_SUPPORTED :	259:2:7216:7242	4246950	17	True				
ANR	4247770	Identifier	FAILURE_NOT_SUPPORTED		4246950	0					
ANR	4247771	Statement	printf	260:3:7247:7252	4246950	18	True				
ANR	4247772	Statement	(	260:9:7253:7253	4246950	19	True				
ANR	4247773	Statement	"""Operation failed.\\n"""	260:10:7254:7274	4246950	20	True				
ANR	4247774	Statement	"""    The target daemon is not running as SYSTEM.\\n"""	261:10:7286:7336	4246950	21	True				
ANR	4247775	Statement	)	261:61:7337:7337	4246950	22	True				
ANR	4247776	ExpressionStatement		261:62:7338:7338	4246950	23	True				
ANR	4247777	BreakStatement	break ;	262:3:7343:7348	4246950	24	True				
ANR	4247778	Label	default :	264:2:7353:7360	4246950	25	True				
ANR	4247779	Identifier	default		4246950	0					
ANR	4247780	ExpressionStatement	"fprintf ( stderr , ""Operation failed: unknown error code\\n"" )"	265:3:7365:7422	4246950	26	True				
ANR	4247781	CallExpression	"fprintf ( stderr , ""Operation failed: unknown error code\\n"" )"		4246950	0					
ANR	4247782	Callee	fprintf		4246950	0					
ANR	4247783	Identifier	fprintf		4246950	0					
ANR	4247784	ArgumentList	stderr		4246950	1					
ANR	4247785	Argument	stderr		4246950	0					
ANR	4247786	Identifier	stderr		4246950	0					
ANR	4247787	Argument	"""Operation failed: unknown error code\\n"""		4246950	1					
ANR	4247788	PrimaryExpression	"""Operation failed: unknown error code\\n"""		4246950	0					
ANR	4247789	Label	cleanup :	268:0:7428:7435	4246950	24	True				
ANR	4247790	Identifier	cleanup		4246950	0					
ANR	4247791	IfStatement	if ( options . daemonname )		4246950	25					
ANR	4247792	Condition	options . daemonname	269:5:7445:7462	4246950	0	True				
ANR	4247793	MemberAccess	options . daemonname		4246950	0					
ANR	4247794	Identifier	options		4246950	0					
ANR	4247795	Identifier	daemonname		4246950	1					
ANR	4247796	CompoundStatement		216:25:5877:5877	4246950	1					
ANR	4247797	Statement	delete	270:2:7469:7474	4246950	0	True				
ANR	4247798	Statement	[	270:8:7475:7475	4246950	1	True				
ANR	4247799	Statement	]	270:9:7476:7476	4246950	2	True				
ANR	4247800	ExpressionStatement	options . daemonname	270:11:7478:7496	4246950	3	True				
ANR	4247801	MemberAccess	options . daemonname		4246950	0					
ANR	4247802	Identifier	options		4246950	0					
ANR	4247803	Identifier	daemonname		4246950	1					
ANR	4247804	IfStatement	if ( daemon )		4246950	26					
ANR	4247805	Condition	daemon	272:5:7506:7511	4246950	0	True				
ANR	4247806	Identifier	daemon		4246950	0					
ANR	4247807	CompoundStatement		219:13:5926:5926	4246950	1					
ANR	4247808	Statement	delete	273:2:7518:7523	4246950	0	True				
ANR	4247809	ExpressionStatement	daemon	273:9:7525:7531	4246950	1	True				
ANR	4247810	Identifier	daemon		4246950	0					
ANR	4247811	IfStatement	if ( result == SUCCESS )		4246950	27					
ANR	4247812	Condition	result == SUCCESS	276:6:7544:7560	4246950	0	True				
ANR	4247813	EqualityExpression	result == SUCCESS		4246950	0		==			
ANR	4247814	Identifier	result		4246950	0					
ANR	4247815	Identifier	SUCCESS		4246950	1					
ANR	4247816	CompoundStatement		223:26:5976:5976	4246950	1					
ANR	4247817	ReturnStatement	return 0 ;	277:5:7571:7579	4246950	0	True				
ANR	4247818	PrimaryExpression	0		4246950	0					
ANR	4247819	ElseStatement	else		4246950	0					
ANR	4247820	CompoundStatement		225:8:6001:6001	4246950	0					
ANR	4247821	ReturnStatement	return 1 ;	279:2:7593:7601	4246950	0	True				
ANR	4247822	PrimaryExpression	1		4246950	0					
ANR	4247823	ReturnType	int		4246950	1					
ANR	4247824	Identifier	main		4246950	2					
ANR	4247825	ParameterList	"int argc , char * argv [ ]"		4246950	3					
ANR	4247826	Parameter	int argc	54:9:1563:1570	4246950	0	True				
ANR	4247827	ParameterType	int		4246950	0					
ANR	4247828	Identifier	argc		4246950	1					
ANR	4247829	Parameter	char * argv [ ]	54:19:1573:1584	4246950	1	True				
ANR	4247830	ParameterType	char * [ ]		4246950	0					
ANR	4247831	Identifier	argv		4246950	1					
ANR	4247832	CFGEntryNode	ENTRY		4246950		True				
ANR	4247833	CFGExitNode	EXIT		4246950		True				
ANR	4247834	Symbol	DELETE_MODE		4246950						
ANR	4247835	Symbol	FAILURE_NOT_SECURE		4246950						
ANR	4247836	Symbol	pw		4246950						
ANR	4247837	Symbol	store_cred		4246950						
ANR	4247838	Symbol	interactive		4246950						
ANR	4247839	Symbol	DT_CREDD		4246950						
ANR	4247840	Symbol	* argv		4246950						
ANR	4247841	Symbol	queryCredential		4246950						
ANR	4247842	Symbol	get_password		4246950						
ANR	4247843	Symbol	strlen		4246950						
ANR	4247844	Symbol	myDistro		4246950						
ANR	4247845	Symbol	options		4246950						
ANR	4247846	Symbol	strcmp		4246950						
ANR	4247847	Symbol	goAheadAnyways		4246950						
ANR	4247848	Symbol	NULL		4246950						
ANR	4247849	Symbol	options . username		4246950						
ANR	4247850	Symbol	stderr		4246950						
ANR	4247851	Symbol	my_username		4246950						
ANR	4247852	Symbol	FAILURE_ABORTED		4246950						
ANR	4247853	Symbol	daemon		4246950						
ANR	4247854	Symbol	full_name		4246950						
ANR	4247855	Symbol	options . daemonname		4246950						
ANR	4247856	Symbol	POOL_PASSWORD_USERNAME		4246950						
ANR	4247857	Symbol	domain		4246950						
ANR	4247858	Symbol	true		4246950						
ANR	4247859	Symbol	condor_basename		4246950						
ANR	4247860	Symbol	pool_password_arg		4246950						
ANR	4247861	Symbol	my_domain		4246950						
ANR	4247862	Symbol	MyName		4246950						
ANR	4247863	Symbol	my_domainname		4246950						
ANR	4247864	Symbol	credd_host		4246950						
ANR	4247865	Symbol	argv		4246950						
ANR	4247866	Symbol	* options		4246950						
ANR	4247867	Symbol	result		4246950						
ANR	4247868	Symbol	my_name		4246950						
ANR	4247869	Symbol	DT_MASTER		4246950						
ANR	4247870	Symbol	param		4246950						
ANR	4247871	Symbol	strnewp		4246950						
ANR	4247872	Symbol	parseCommandLine		4246950						
ANR	4247873	Symbol	options . help		4246950						
ANR	4247874	Symbol	my_full_name . Value		4246950						
ANR	4247875	Symbol	argc		4246950						
ANR	4247876	Symbol	SUCCESS		4246950						
ANR	4247877	Symbol	* options . pw		4246950						
ANR	4247878	Symbol	false		4246950						
ANR	4247879	Symbol	options . pw		4246950						
ANR	4247880	Symbol	DT_SCHEDD		4246950						
ANR	4247881	Symbol	my_full_name		4246950						
ANR	4247882	Symbol	& options		4246950						
ANR	4247883	Symbol	write_password_file		4246950						
ANR	4247884	Symbol	QUERY_MODE		4246950						
ANR	4247885	Symbol	pool_password_delete		4246950						
ANR	4247886	Symbol	options . mode		4246950						
ANR	4247887	Symbol	options . password_file		4246950						
ANR	4247888	Symbol	MAX_PASSWORD_LENGTH		4246950						
ANR	4247889	Function	parseCommandLine	283:0:7609:12056							
ANR	4247890	FunctionDef	"parseCommandLine (StoreCredOptions * opts , int argc , char * argv [ ])"		4247889	0					
ANR	4247891	CompoundStatement		284:65:7679:12056	4247889	0					
ANR	4247892	IdentifierDeclStatement	int i ;	286:1:7683:7688	4247889	0	True				
ANR	4247893	IdentifierDecl	i		4247889	0					
ANR	4247894	IdentifierDeclType	int		4247889	0					
ANR	4247895	Identifier	i		4247889	1					
ANR	4247896	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	287:1:7691:7722	4247889	1	True				
ANR	4247897	IdentifierDecl	* p_funcs = NULL		4247889	0					
ANR	4247898	IdentifierDeclType	param_functions *		4247889	0					
ANR	4247899	Identifier	p_funcs		4247889	1					
ANR	4247900	AssignmentExpression	* p_funcs = NULL		4247889	2		=			
ANR	4247901	Identifier	NULL		4247889	0					
ANR	4247902	Identifier	NULL		4247889	1					
ANR	4247903	ExpressionStatement	opts -> mode = 0	288:1:7725:7739	4247889	2	True				
ANR	4247904	AssignmentExpression	opts -> mode = 0		4247889	0		=			
ANR	4247905	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4247906	Identifier	opts		4247889	0					
ANR	4247907	Identifier	mode		4247889	1					
ANR	4247908	PrimaryExpression	0		4247889	1					
ANR	4247909	ExpressionStatement	opts -> pw [ 0 ] = opts -> pw [ MAX_PASSWORD_LENGTH ] = '\\0'	289:1:7742:7792	4247889	3	True				
ANR	4247910	AssignmentExpression	opts -> pw [ 0 ] = opts -> pw [ MAX_PASSWORD_LENGTH ] = '\\0'		4247889	0		=			
ANR	4247911	ArrayIndexing	opts -> pw [ 0 ]		4247889	0					
ANR	4247912	PtrMemberAccess	opts -> pw		4247889	0					
ANR	4247913	Identifier	opts		4247889	0					
ANR	4247914	Identifier	pw		4247889	1					
ANR	4247915	PrimaryExpression	0		4247889	1					
ANR	4247916	AssignmentExpression	opts -> pw [ MAX_PASSWORD_LENGTH ] = '\\0'		4247889	1		=			
ANR	4247917	ArrayIndexing	opts -> pw [ MAX_PASSWORD_LENGTH ]		4247889	0					
ANR	4247918	PtrMemberAccess	opts -> pw		4247889	0					
ANR	4247919	Identifier	opts		4247889	0					
ANR	4247920	Identifier	pw		4247889	1					
ANR	4247921	Identifier	MAX_PASSWORD_LENGTH		4247889	1					
ANR	4247922	PrimaryExpression	'\\0'		4247889	1					
ANR	4247923	ExpressionStatement	opts -> username [ 0 ] = opts -> username [ MAX_PASSWORD_LENGTH ] = '\\0'	290:1:7795:7857	4247889	4	True				
ANR	4247924	AssignmentExpression	opts -> username [ 0 ] = opts -> username [ MAX_PASSWORD_LENGTH ] = '\\0'		4247889	0		=			
ANR	4247925	ArrayIndexing	opts -> username [ 0 ]		4247889	0					
ANR	4247926	PtrMemberAccess	opts -> username		4247889	0					
ANR	4247927	Identifier	opts		4247889	0					
ANR	4247928	Identifier	username		4247889	1					
ANR	4247929	PrimaryExpression	0		4247889	1					
ANR	4247930	AssignmentExpression	opts -> username [ MAX_PASSWORD_LENGTH ] = '\\0'		4247889	1		=			
ANR	4247931	ArrayIndexing	opts -> username [ MAX_PASSWORD_LENGTH ]		4247889	0					
ANR	4247932	PtrMemberAccess	opts -> username		4247889	0					
ANR	4247933	Identifier	opts		4247889	0					
ANR	4247934	Identifier	username		4247889	1					
ANR	4247935	Identifier	MAX_PASSWORD_LENGTH		4247889	1					
ANR	4247936	PrimaryExpression	'\\0'		4247889	1					
ANR	4247937	ExpressionStatement	opts -> daemonname = NULL	291:1:7860:7883	4247889	5	True				
ANR	4247938	AssignmentExpression	opts -> daemonname = NULL		4247889	0		=			
ANR	4247939	PtrMemberAccess	opts -> daemonname		4247889	0					
ANR	4247940	Identifier	opts		4247889	0					
ANR	4247941	Identifier	daemonname		4247889	1					
ANR	4247942	Identifier	NULL		4247889	1					
ANR	4247943	ExpressionStatement	opts -> password_file = NULL	292:1:7886:7912	4247889	6	True				
ANR	4247944	AssignmentExpression	opts -> password_file = NULL		4247889	0		=			
ANR	4247945	PtrMemberAccess	opts -> password_file		4247889	0					
ANR	4247946	Identifier	opts		4247889	0					
ANR	4247947	Identifier	password_file		4247889	1					
ANR	4247948	Identifier	NULL		4247889	1					
ANR	4247949	ExpressionStatement		292:28:7913:7913	4247889	7	True				
ANR	4247950	ExpressionStatement	opts -> help = false	293:1:7916:7934	4247889	8	True				
ANR	4247951	AssignmentExpression	opts -> help = false		4247889	0		=			
ANR	4247952	PtrMemberAccess	opts -> help		4247889	0					
ANR	4247953	Identifier	opts		4247889	0					
ANR	4247954	Identifier	help		4247889	1					
ANR	4247955	Identifier	false		4247889	1					
ANR	4247956	IdentifierDeclStatement	bool err = false ;	295:1:7938:7954	4247889	9	True				
ANR	4247957	IdentifierDecl	err = false		4247889	0					
ANR	4247958	IdentifierDeclType	bool		4247889	0					
ANR	4247959	Identifier	err		4247889	1					
ANR	4247960	AssignmentExpression	err = false		4247889	2		=			
ANR	4247961	Identifier	false		4247889	0					
ANR	4247962	Identifier	false		4247889	1					
ANR	4247963	ForStatement	for ( i = 1 ; i < argc && ! err ; i ++ )		4247889	10					
ANR	4247964	ForInit	i = 1 ;	296:6:7962:7965	4247889	0	True				
ANR	4247965	AssignmentExpression	i = 1		4247889	0		=			
ANR	4247966	Identifier	i		4247889	0					
ANR	4247967	PrimaryExpression	1		4247889	1					
ANR	4247968	Condition	i < argc && ! err	296:11:7967:7980	4247889	1	True				
ANR	4247969	AndExpression	i < argc && ! err		4247889	0		&&			
ANR	4247970	RelationalExpression	i < argc		4247889	0		<			
ANR	4247971	Identifier	i		4247889	0					
ANR	4247972	Identifier	argc		4247889	1					
ANR	4247973	UnaryOperationExpression	! err		4247889	1					
ANR	4247974	UnaryOperator	!		4247889	0					
ANR	4247975	Identifier	err		4247889	1					
ANR	4247976	PostIncDecOperationExpression	i ++	296:27:7983:7985	4247889	2	True				
ANR	4247977	Identifier	i		4247889	0					
ANR	4247978	IncDec	++		4247889	1					
ANR	4247979	CompoundStatement		13:32:308:308	4247889	3					
ANR	4247980	SwitchStatement	switch ( argv [ i ] [ 0 ] )		4247889	0					
ANR	4247981	Condition	argv [ i ] [ 0 ]	297:9:7999:8008	4247889	0	True				
ANR	4247982	ArrayIndexing	argv [ i ] [ 0 ]		4247889	0					
ANR	4247983	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4247984	Identifier	argv		4247889	0					
ANR	4247985	Identifier	i		4247889	1					
ANR	4247986	PrimaryExpression	0		4247889	1					
ANR	4247987	CompoundStatement		14:21:331:331	4247889	1					
ANR	4247988	Label	case 'a' :	298:2:8015:8023	4247889	0	True				
ANR	4247989	Label	case 'A' :	299:2:8027:8035	4247889	1	True				
ANR	4247990	IfStatement	"if ( strcasecmp ( argv [ i ] , ADD_CREDENTIAL ) == 0 )"		4247889	2					
ANR	4247991	Condition	"strcasecmp ( argv [ i ] , ADD_CREDENTIAL ) == 0"	300:7:8051:8090	4247889	0	True				
ANR	4247992	EqualityExpression	"strcasecmp ( argv [ i ] , ADD_CREDENTIAL ) == 0"		4247889	0		==			
ANR	4247993	CallExpression	"strcasecmp ( argv [ i ] , ADD_CREDENTIAL )"		4247889	0					
ANR	4247994	Callee	strcasecmp		4247889	0					
ANR	4247995	Identifier	strcasecmp		4247889	0					
ANR	4247996	ArgumentList	argv [ i ]		4247889	1					
ANR	4247997	Argument	argv [ i ]		4247889	0					
ANR	4247998	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4247999	Identifier	argv		4247889	0					
ANR	4248000	Identifier	i		4247889	1					
ANR	4248001	Argument	ADD_CREDENTIAL		4247889	1					
ANR	4248002	Identifier	ADD_CREDENTIAL		4247889	0					
ANR	4248003	PrimaryExpression	0		4247889	1					
ANR	4248004	CompoundStatement		17:49:413:413	4247889	1					
ANR	4248005	IfStatement	if ( ! opts -> mode )		4247889	0					
ANR	4248006	Condition	! opts -> mode	301:8:8103:8113	4247889	0	True				
ANR	4248007	UnaryOperationExpression	! opts -> mode		4247889	0					
ANR	4248008	UnaryOperator	!		4247889	0					
ANR	4248009	PtrMemberAccess	opts -> mode		4247889	1					
ANR	4248010	Identifier	opts		4247889	0					
ANR	4248011	Identifier	mode		4247889	1					
ANR	4248012	CompoundStatement		18:21:436:436	4247889	1					
ANR	4248013	ExpressionStatement	opts -> mode = ADD_MODE	302:5:8123:8144	4247889	0	True				
ANR	4248014	AssignmentExpression	opts -> mode = ADD_MODE		4247889	0		=			
ANR	4248015	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248016	Identifier	opts		4247889	0					
ANR	4248017	Identifier	mode		4247889	1					
ANR	4248018	Identifier	ADD_MODE		4247889	1					
ANR	4248019	ElseStatement	else		4247889	0					
ANR	4248020	IfStatement	if ( opts -> mode != ADD_MODE )		4247889	0					
ANR	4248021	Condition	opts -> mode != ADD_MODE	304:13:8165:8186	4247889	0	True				
ANR	4248022	EqualityExpression	opts -> mode != ADD_MODE		4247889	0		!=			
ANR	4248023	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248024	Identifier	opts		4247889	0					
ANR	4248025	Identifier	mode		4247889	1					
ANR	4248026	Identifier	ADD_MODE		4247889	1					
ANR	4248027	CompoundStatement		21:37:509:509	4247889	1					
ANR	4248028	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	305:5:8196:8273	4247889	0	True				
ANR	4248029	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		4247889	0					
ANR	4248030	Callee	fprintf		4247889	0					
ANR	4248031	Identifier	fprintf		4247889	0					
ANR	4248032	ArgumentList	stderr		4247889	1					
ANR	4248033	Argument	stderr		4247889	0					
ANR	4248034	Identifier	stderr		4247889	0					
ANR	4248035	Argument	"""ERROR: exactly one command must be provided\\n"""		4247889	1					
ANR	4248036	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		4247889	0					
ANR	4248037	ExpressionStatement	usage ( )	307:5:8280:8287	4247889	1	True				
ANR	4248038	CallExpression	usage ( )		4247889	0					
ANR	4248039	Callee	usage		4247889	0					
ANR	4248040	Identifier	usage		4247889	0					
ANR	4248041	ArgumentList			4247889	1					
ANR	4248042	ExpressionStatement	err = true	308:5:8294:8304	4247889	2	True				
ANR	4248043	AssignmentExpression	err = true		4247889	0		=			
ANR	4248044	Identifier	err		4247889	0					
ANR	4248045	Identifier	true		4247889	1					
ANR	4248046	ElseStatement	else		4247889	0					
ANR	4248047	CompoundStatement		27:10:642:642	4247889	0					
ANR	4248048	ExpressionStatement	err = true	311:4:8328:8338	4247889	0	True				
ANR	4248049	AssignmentExpression	err = true		4247889	0		=			
ANR	4248050	Identifier	err		4247889	0					
ANR	4248051	Identifier	true		4247889	1					
ANR	4248052	ExpressionStatement	badCommand ( argv [ i ] )	312:4:8344:8363	4247889	1	True				
ANR	4248053	CallExpression	badCommand ( argv [ i ] )		4247889	0					
ANR	4248054	Callee	badCommand		4247889	0					
ANR	4248055	Identifier	badCommand		4247889	0					
ANR	4248056	ArgumentList	argv [ i ]		4247889	1					
ANR	4248057	Argument	argv [ i ]		4247889	0					
ANR	4248058	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248059	Identifier	argv		4247889	0					
ANR	4248060	Identifier	i		4247889	1					
ANR	4248061	BreakStatement	break ;	314:3:8374:8379	4247889	3	True				
ANR	4248062	Label	case 'd' :	315:2:8383:8391	4247889	4	True				
ANR	4248063	Label	case 'D' :	316:2:8396:8404	4247889	5	True				
ANR	4248064	IfStatement	"if ( strcasecmp ( argv [ i ] , DELETE_CREDENTIAL ) == 0 )"		4247889	6					
ANR	4248065	Condition	"strcasecmp ( argv [ i ] , DELETE_CREDENTIAL ) == 0"	317:7:8423:8465	4247889	0	True				
ANR	4248066	EqualityExpression	"strcasecmp ( argv [ i ] , DELETE_CREDENTIAL ) == 0"		4247889	0		==			
ANR	4248067	CallExpression	"strcasecmp ( argv [ i ] , DELETE_CREDENTIAL )"		4247889	0					
ANR	4248068	Callee	strcasecmp		4247889	0					
ANR	4248069	Identifier	strcasecmp		4247889	0					
ANR	4248070	ArgumentList	argv [ i ]		4247889	1					
ANR	4248071	Argument	argv [ i ]		4247889	0					
ANR	4248072	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248073	Identifier	argv		4247889	0					
ANR	4248074	Identifier	i		4247889	1					
ANR	4248075	Argument	DELETE_CREDENTIAL		4247889	1					
ANR	4248076	Identifier	DELETE_CREDENTIAL		4247889	0					
ANR	4248077	PrimaryExpression	0		4247889	1					
ANR	4248078	CompoundStatement		34:52:788:788	4247889	1					
ANR	4248079	IfStatement	if ( ! opts -> mode )		4247889	0					
ANR	4248080	Condition	! opts -> mode	318:8:8478:8488	4247889	0	True				
ANR	4248081	UnaryOperationExpression	! opts -> mode		4247889	0					
ANR	4248082	UnaryOperator	!		4247889	0					
ANR	4248083	PtrMemberAccess	opts -> mode		4247889	1					
ANR	4248084	Identifier	opts		4247889	0					
ANR	4248085	Identifier	mode		4247889	1					
ANR	4248086	CompoundStatement		35:21:811:811	4247889	1					
ANR	4248087	ExpressionStatement	opts -> mode = DELETE_MODE	319:5:8498:8522	4247889	0	True				
ANR	4248088	AssignmentExpression	opts -> mode = DELETE_MODE		4247889	0		=			
ANR	4248089	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248090	Identifier	opts		4247889	0					
ANR	4248091	Identifier	mode		4247889	1					
ANR	4248092	Identifier	DELETE_MODE		4247889	1					
ANR	4248093	ElseStatement	else		4247889	0					
ANR	4248094	IfStatement	if ( opts -> mode != DELETE_MODE )		4247889	0					
ANR	4248095	Condition	opts -> mode != DELETE_MODE	321:13:8543:8567	4247889	0	True				
ANR	4248096	EqualityExpression	opts -> mode != DELETE_MODE		4247889	0		!=			
ANR	4248097	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248098	Identifier	opts		4247889	0					
ANR	4248099	Identifier	mode		4247889	1					
ANR	4248100	Identifier	DELETE_MODE		4247889	1					
ANR	4248101	CompoundStatement		38:40:890:890	4247889	1					
ANR	4248102	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	322:5:8577:8654	4247889	0	True				
ANR	4248103	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		4247889	0					
ANR	4248104	Callee	fprintf		4247889	0					
ANR	4248105	Identifier	fprintf		4247889	0					
ANR	4248106	ArgumentList	stderr		4247889	1					
ANR	4248107	Argument	stderr		4247889	0					
ANR	4248108	Identifier	stderr		4247889	0					
ANR	4248109	Argument	"""ERROR: exactly one command must be provided\\n"""		4247889	1					
ANR	4248110	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		4247889	0					
ANR	4248111	ExpressionStatement	usage ( )	324:5:8661:8668	4247889	1	True				
ANR	4248112	CallExpression	usage ( )		4247889	0					
ANR	4248113	Callee	usage		4247889	0					
ANR	4248114	Identifier	usage		4247889	0					
ANR	4248115	ArgumentList			4247889	1					
ANR	4248116	ExpressionStatement	err = true	325:5:8675:8685	4247889	2	True				
ANR	4248117	AssignmentExpression	err = true		4247889	0		=			
ANR	4248118	Identifier	err		4247889	0					
ANR	4248119	Identifier	true		4247889	1					
ANR	4248120	ElseStatement	else		4247889	0					
ANR	4248121	CompoundStatement		44:10:1023:1023	4247889	0					
ANR	4248122	ExpressionStatement	err = true	328:4:8709:8719	4247889	0	True				
ANR	4248123	AssignmentExpression	err = true		4247889	0		=			
ANR	4248124	Identifier	err		4247889	0					
ANR	4248125	Identifier	true		4247889	1					
ANR	4248126	ExpressionStatement	badCommand ( argv [ i ] )	329:4:8725:8744	4247889	1	True				
ANR	4248127	CallExpression	badCommand ( argv [ i ] )		4247889	0					
ANR	4248128	Callee	badCommand		4247889	0					
ANR	4248129	Identifier	badCommand		4247889	0					
ANR	4248130	ArgumentList	argv [ i ]		4247889	1					
ANR	4248131	Argument	argv [ i ]		4247889	0					
ANR	4248132	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248133	Identifier	argv		4247889	0					
ANR	4248134	Identifier	i		4247889	1					
ANR	4248135	BreakStatement	break ;	331:3:8755:8760	4247889	7	True				
ANR	4248136	Label	case 'q' :	332:2:8764:8772	4247889	8	True				
ANR	4248137	Label	case 'Q' :	333:2:8777:8785	4247889	9	True				
ANR	4248138	IfStatement	"if ( strcasecmp ( argv [ i ] , QUERY_CREDENTIAL ) == 0 )"		4247889	10					
ANR	4248139	Condition	"strcasecmp ( argv [ i ] , QUERY_CREDENTIAL ) == 0"	334:7:8831:8872	4247889	0	True				
ANR	4248140	EqualityExpression	"strcasecmp ( argv [ i ] , QUERY_CREDENTIAL ) == 0"		4247889	0		==			
ANR	4248141	CallExpression	"strcasecmp ( argv [ i ] , QUERY_CREDENTIAL )"		4247889	0					
ANR	4248142	Callee	strcasecmp		4247889	0					
ANR	4248143	Identifier	strcasecmp		4247889	0					
ANR	4248144	ArgumentList	argv [ i ]		4247889	1					
ANR	4248145	Argument	argv [ i ]		4247889	0					
ANR	4248146	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248147	Identifier	argv		4247889	0					
ANR	4248148	Identifier	i		4247889	1					
ANR	4248149	Argument	QUERY_CREDENTIAL		4247889	1					
ANR	4248150	Identifier	QUERY_CREDENTIAL		4247889	0					
ANR	4248151	PrimaryExpression	0		4247889	1					
ANR	4248152	CompoundStatement		51:51:1195:1195	4247889	1					
ANR	4248153	IfStatement	if ( ! opts -> mode )		4247889	0					
ANR	4248154	Condition	! opts -> mode	335:8:8885:8895	4247889	0	True				
ANR	4248155	UnaryOperationExpression	! opts -> mode		4247889	0					
ANR	4248156	UnaryOperator	!		4247889	0					
ANR	4248157	PtrMemberAccess	opts -> mode		4247889	1					
ANR	4248158	Identifier	opts		4247889	0					
ANR	4248159	Identifier	mode		4247889	1					
ANR	4248160	CompoundStatement		52:21:1218:1218	4247889	1					
ANR	4248161	ExpressionStatement	opts -> mode = QUERY_MODE	336:5:8905:8928	4247889	0	True				
ANR	4248162	AssignmentExpression	opts -> mode = QUERY_MODE		4247889	0		=			
ANR	4248163	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248164	Identifier	opts		4247889	0					
ANR	4248165	Identifier	mode		4247889	1					
ANR	4248166	Identifier	QUERY_MODE		4247889	1					
ANR	4248167	ElseStatement	else		4247889	0					
ANR	4248168	IfStatement	if ( opts -> mode != QUERY_MODE )		4247889	0					
ANR	4248169	Condition	opts -> mode != QUERY_MODE	338:13:8949:8972	4247889	0	True				
ANR	4248170	EqualityExpression	opts -> mode != QUERY_MODE		4247889	0		!=			
ANR	4248171	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248172	Identifier	opts		4247889	0					
ANR	4248173	Identifier	mode		4247889	1					
ANR	4248174	Identifier	QUERY_MODE		4247889	1					
ANR	4248175	CompoundStatement		55:39:1295:1295	4247889	1					
ANR	4248176	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	339:5:8982:9059	4247889	0	True				
ANR	4248177	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		4247889	0					
ANR	4248178	Callee	fprintf		4247889	0					
ANR	4248179	Identifier	fprintf		4247889	0					
ANR	4248180	ArgumentList	stderr		4247889	1					
ANR	4248181	Argument	stderr		4247889	0					
ANR	4248182	Identifier	stderr		4247889	0					
ANR	4248183	Argument	"""ERROR: exactly one command must be provided\\n"""		4247889	1					
ANR	4248184	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		4247889	0					
ANR	4248185	ExpressionStatement	usage ( )	341:5:9066:9073	4247889	1	True				
ANR	4248186	CallExpression	usage ( )		4247889	0					
ANR	4248187	Callee	usage		4247889	0					
ANR	4248188	Identifier	usage		4247889	0					
ANR	4248189	ArgumentList			4247889	1					
ANR	4248190	ExpressionStatement	err = true	342:5:9080:9090	4247889	2	True				
ANR	4248191	AssignmentExpression	err = true		4247889	0		=			
ANR	4248192	Identifier	err		4247889	0					
ANR	4248193	Identifier	true		4247889	1					
ANR	4248194	ElseStatement	else		4247889	0					
ANR	4248195	CompoundStatement		61:10:1428:1428	4247889	0					
ANR	4248196	ExpressionStatement	err = true	345:4:9114:9124	4247889	0	True				
ANR	4248197	AssignmentExpression	err = true		4247889	0		=			
ANR	4248198	Identifier	err		4247889	0					
ANR	4248199	Identifier	true		4247889	1					
ANR	4248200	ExpressionStatement	badCommand ( argv [ i ] )	346:4:9130:9149	4247889	1	True				
ANR	4248201	CallExpression	badCommand ( argv [ i ] )		4247889	0					
ANR	4248202	Callee	badCommand		4247889	0					
ANR	4248203	Identifier	badCommand		4247889	0					
ANR	4248204	ArgumentList	argv [ i ]		4247889	1					
ANR	4248205	Argument	argv [ i ]		4247889	0					
ANR	4248206	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248207	Identifier	argv		4247889	0					
ANR	4248208	Identifier	i		4247889	1					
ANR	4248209	BreakStatement	break ;	348:3:9160:9165	4247889	11	True				
ANR	4248210	Label	case 'c' :	350:2:9188:9196	4247889	12	True				
ANR	4248211	Label	case 'C' :	351:2:9201:9209	4247889	13	True				
ANR	4248212	IfStatement	"if ( strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL ) == 0 )"		4247889	14					
ANR	4248213	Condition	"strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL ) == 0"	352:7:9228:9270	4247889	0	True				
ANR	4248214	EqualityExpression	"strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL ) == 0"		4247889	0		==			
ANR	4248215	CallExpression	"strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL )"		4247889	0					
ANR	4248216	Callee	strcasecmp		4247889	0					
ANR	4248217	Identifier	strcasecmp		4247889	0					
ANR	4248218	ArgumentList	argv [ i ]		4247889	1					
ANR	4248219	Argument	argv [ i ]		4247889	0					
ANR	4248220	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248221	Identifier	argv		4247889	0					
ANR	4248222	Identifier	i		4247889	1					
ANR	4248223	Argument	CONFIG_CREDENTIAL		4247889	1					
ANR	4248224	Identifier	CONFIG_CREDENTIAL		4247889	0					
ANR	4248225	PrimaryExpression	0		4247889	1					
ANR	4248226	CompoundStatement		69:52:1593:1593	4247889	1					
ANR	4248227	IfStatement	if ( ! opts -> mode )		4247889	0					
ANR	4248228	Condition	! opts -> mode	353:8:9283:9293	4247889	0	True				
ANR	4248229	UnaryOperationExpression	! opts -> mode		4247889	0					
ANR	4248230	UnaryOperator	!		4247889	0					
ANR	4248231	PtrMemberAccess	opts -> mode		4247889	1					
ANR	4248232	Identifier	opts		4247889	0					
ANR	4248233	Identifier	mode		4247889	1					
ANR	4248234	CompoundStatement		70:21:1616:1616	4247889	1					
ANR	4248235	ExpressionStatement	opts -> mode = CONFIG_MODE	354:5:9303:9327	4247889	0	True				
ANR	4248236	AssignmentExpression	opts -> mode = CONFIG_MODE		4247889	0		=			
ANR	4248237	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248238	Identifier	opts		4247889	0					
ANR	4248239	Identifier	mode		4247889	1					
ANR	4248240	Identifier	CONFIG_MODE		4247889	1					
ANR	4248241	ElseStatement	else		4247889	0					
ANR	4248242	CompoundStatement		73:9:1664:1664	4247889	0					
ANR	4248243	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	357:5:9351:9415	4247889	0	True				
ANR	4248244	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		4247889	0					
ANR	4248245	Callee	fprintf		4247889	0					
ANR	4248246	Identifier	fprintf		4247889	0					
ANR	4248247	ArgumentList	stderr		4247889	1					
ANR	4248248	Argument	stderr		4247889	0					
ANR	4248249	Identifier	stderr		4247889	0					
ANR	4248250	Argument	"""ERROR: exactly one command must be provided\\n"""		4247889	1					
ANR	4248251	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		4247889	0					
ANR	4248252	ExpressionStatement	usage ( )	358:5:9422:9429	4247889	1	True				
ANR	4248253	CallExpression	usage ( )		4247889	0					
ANR	4248254	Callee	usage		4247889	0					
ANR	4248255	Identifier	usage		4247889	0					
ANR	4248256	ArgumentList			4247889	1					
ANR	4248257	ExpressionStatement	err = true	359:5:9436:9446	4247889	2	True				
ANR	4248258	AssignmentExpression	err = true		4247889	0		=			
ANR	4248259	Identifier	err		4247889	0					
ANR	4248260	Identifier	true		4247889	1					
ANR	4248261	ElseStatement	else		4247889	0					
ANR	4248262	CompoundStatement		78:10:1784:1784	4247889	0					
ANR	4248263	ExpressionStatement	err = true	362:4:9470:9480	4247889	0	True				
ANR	4248264	AssignmentExpression	err = true		4247889	0		=			
ANR	4248265	Identifier	err		4247889	0					
ANR	4248266	Identifier	true		4247889	1					
ANR	4248267	ExpressionStatement	badCommand ( argv [ i ] )	363:4:9486:9505	4247889	1	True				
ANR	4248268	CallExpression	badCommand ( argv [ i ] )		4247889	0					
ANR	4248269	Callee	badCommand		4247889	0					
ANR	4248270	Identifier	badCommand		4247889	0					
ANR	4248271	ArgumentList	argv [ i ]		4247889	1					
ANR	4248272	Argument	argv [ i ]		4247889	0					
ANR	4248273	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248274	Identifier	argv		4247889	0					
ANR	4248275	Identifier	i		4247889	1					
ANR	4248276	BreakStatement	break ;	365:3:9516:9521	4247889	15	True				
ANR	4248277	Label	case '-' :	367:2:9532:9540	4247889	16	True				
ANR	4248278	SwitchStatement	switch ( argv [ i ] [ 1 ] )		4247889	17					
ANR	4248279	Condition	argv [ i ] [ 1 ]	369:11:9576:9585	4247889	0	True				
ANR	4248280	ArrayIndexing	argv [ i ] [ 1 ]		4247889	0					
ANR	4248281	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248282	Identifier	argv		4247889	0					
ANR	4248283	Identifier	i		4247889	1					
ANR	4248284	PrimaryExpression	1		4247889	1					
ANR	4248285	CompoundStatement		86:23:1908:1908	4247889	1					
ANR	4248286	Label	case 'n' :	370:4:9594:9602	4247889	0	True				
ANR	4248287	IfStatement	if ( i + 1 < argc )		4247889	1					
ANR	4248288	Condition	i + 1 < argc	371:9:9613:9622	4247889	0	True				
ANR	4248289	RelationalExpression	i + 1 < argc		4247889	0		<			
ANR	4248290	AdditiveExpression	i + 1		4247889	0		+			
ANR	4248291	Identifier	i		4247889	0					
ANR	4248292	PrimaryExpression	1		4247889	1					
ANR	4248293	Identifier	argc		4247889	1					
ANR	4248294	CompoundStatement		88:21:1945:1945	4247889	1					
ANR	4248295	IfStatement	if ( opts -> daemonname != NULL )		4247889	0					
ANR	4248296	Condition	opts -> daemonname != NULL	372:10:9637:9660	4247889	0	True				
ANR	4248297	EqualityExpression	opts -> daemonname != NULL		4247889	0		!=			
ANR	4248298	PtrMemberAccess	opts -> daemonname		4247889	0					
ANR	4248299	Identifier	opts		4247889	0					
ANR	4248300	Identifier	daemonname		4247889	1					
ANR	4248301	Identifier	NULL		4247889	1					
ANR	4248302	CompoundStatement		89:36:1983:1983	4247889	1					
ANR	4248303	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one '-n' arg my be provided\\n"" )"	373:7:9672:9732	4247889	0	True				
ANR	4248304	CallExpression	"fprintf ( stderr , ""ERROR: only one '-n' arg my be provided\\n"" )"		4247889	0					
ANR	4248305	Callee	fprintf		4247889	0					
ANR	4248306	Identifier	fprintf		4247889	0					
ANR	4248307	ArgumentList	stderr		4247889	1					
ANR	4248308	Argument	stderr		4247889	0					
ANR	4248309	Identifier	stderr		4247889	0					
ANR	4248310	Argument	"""ERROR: only one '-n' arg my be provided\\n"""		4247889	1					
ANR	4248311	PrimaryExpression	"""ERROR: only one '-n' arg my be provided\\n"""		4247889	0					
ANR	4248312	ExpressionStatement	usage ( )	374:7:9741:9748	4247889	1	True				
ANR	4248313	CallExpression	usage ( )		4247889	0					
ANR	4248314	Callee	usage		4247889	0					
ANR	4248315	Identifier	usage		4247889	0					
ANR	4248316	ArgumentList			4247889	1					
ANR	4248317	ExpressionStatement	err = true	375:7:9757:9767	4247889	2	True				
ANR	4248318	AssignmentExpression	err = true		4247889	0		=			
ANR	4248319	Identifier	err		4247889	0					
ANR	4248320	Identifier	true		4247889	1					
ANR	4248321	ElseStatement	else		4247889	0					
ANR	4248322	CompoundStatement		94:11:2108:2108	4247889	0					
ANR	4248323	ExpressionStatement	opts -> daemonname = get_daemon_name ( argv [ i + 1 ] )	378:7:9797:9842	4247889	0	True				
ANR	4248324	AssignmentExpression	opts -> daemonname = get_daemon_name ( argv [ i + 1 ] )		4247889	0		=			
ANR	4248325	PtrMemberAccess	opts -> daemonname		4247889	0					
ANR	4248326	Identifier	opts		4247889	0					
ANR	4248327	Identifier	daemonname		4247889	1					
ANR	4248328	CallExpression	get_daemon_name ( argv [ i + 1 ] )		4247889	1					
ANR	4248329	Callee	get_daemon_name		4247889	0					
ANR	4248330	Identifier	get_daemon_name		4247889	0					
ANR	4248331	ArgumentList	argv [ i + 1 ]		4247889	1					
ANR	4248332	Argument	argv [ i + 1 ]		4247889	0					
ANR	4248333	ArrayIndexing	argv [ i + 1 ]		4247889	0					
ANR	4248334	Identifier	argv		4247889	0					
ANR	4248335	AdditiveExpression	i + 1		4247889	1		+			
ANR	4248336	Identifier	i		4247889	0					
ANR	4248337	PrimaryExpression	1		4247889	1					
ANR	4248338	IfStatement	if ( opts -> daemonname == NULL )		4247889	1					
ANR	4248339	Condition	opts -> daemonname == NULL	379:11:9855:9878	4247889	0	True				
ANR	4248340	EqualityExpression	opts -> daemonname == NULL		4247889	0		==			
ANR	4248341	PtrMemberAccess	opts -> daemonname		4247889	0					
ANR	4248342	Identifier	opts		4247889	0					
ANR	4248343	Identifier	daemonname		4247889	1					
ANR	4248344	Identifier	NULL		4247889	1					
ANR	4248345	CompoundStatement		96:37:2201:2201	4247889	1					
ANR	4248346	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s is not a valid daemon name\\n"" , argv [ i + 1 ] )"	380:8:9891:9968	4247889	0	True				
ANR	4248347	CallExpression	"fprintf ( stderr , ""ERROR: %s is not a valid daemon name\\n"" , argv [ i + 1 ] )"		4247889	0					
ANR	4248348	Callee	fprintf		4247889	0					
ANR	4248349	Identifier	fprintf		4247889	0					
ANR	4248350	ArgumentList	stderr		4247889	1					
ANR	4248351	Argument	stderr		4247889	0					
ANR	4248352	Identifier	stderr		4247889	0					
ANR	4248353	Argument	"""ERROR: %s is not a valid daemon name\\n"""		4247889	1					
ANR	4248354	PrimaryExpression	"""ERROR: %s is not a valid daemon name\\n"""		4247889	0					
ANR	4248355	Argument	argv [ i + 1 ]		4247889	2					
ANR	4248356	ArrayIndexing	argv [ i + 1 ]		4247889	0					
ANR	4248357	Identifier	argv		4247889	0					
ANR	4248358	AdditiveExpression	i + 1		4247889	1		+			
ANR	4248359	Identifier	i		4247889	0					
ANR	4248360	PrimaryExpression	1		4247889	1					
ANR	4248361	ExpressionStatement	err = true	382:8:9978:9988	4247889	1	True				
ANR	4248362	AssignmentExpression	err = true		4247889	0		=			
ANR	4248363	Identifier	err		4247889	0					
ANR	4248364	Identifier	true		4247889	1					
ANR	4248365	ExpressionStatement	i ++	384:7:10006:10009	4247889	2	True				
ANR	4248366	PostIncDecOperationExpression	i ++		4247889	0					
ANR	4248367	Identifier	i		4247889	0					
ANR	4248368	IncDec	++		4247889	1					
ANR	4248369	ElseStatement	else		4247889	0					
ANR	4248370	CompoundStatement		103:12:2351:2351	4247889	0					
ANR	4248371	ExpressionStatement	err = true	387:6:10039:10049	4247889	0	True				
ANR	4248372	AssignmentExpression	err = true		4247889	0		=			
ANR	4248373	Identifier	err		4247889	0					
ANR	4248374	Identifier	true		4247889	1					
ANR	4248375	ExpressionStatement	optionNeedsArg ( argv [ i ] )	388:6:10057:10080	4247889	1	True				
ANR	4248376	CallExpression	optionNeedsArg ( argv [ i ] )		4247889	0					
ANR	4248377	Callee	optionNeedsArg		4247889	0					
ANR	4248378	Identifier	optionNeedsArg		4247889	0					
ANR	4248379	ArgumentList	argv [ i ]		4247889	1					
ANR	4248380	Argument	argv [ i ]		4247889	0					
ANR	4248381	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248382	Identifier	argv		4247889	0					
ANR	4248383	Identifier	i		4247889	1					
ANR	4248384	BreakStatement	break ;	390:5:10094:10099	4247889	2	True				
ANR	4248385	Label	case 'p' :	391:4:10105:10113	4247889	3	True				
ANR	4248386	IfStatement	if ( i + 1 < argc )		4247889	4					
ANR	4248387	Condition	i + 1 < argc	392:9:10124:10133	4247889	0	True				
ANR	4248388	RelationalExpression	i + 1 < argc		4247889	0		<			
ANR	4248389	AdditiveExpression	i + 1		4247889	0		+			
ANR	4248390	Identifier	i		4247889	0					
ANR	4248391	PrimaryExpression	1		4247889	1					
ANR	4248392	Identifier	argc		4247889	1					
ANR	4248393	CompoundStatement		109:21:2456:2456	4247889	1					
ANR	4248394	IfStatement	if ( opts -> pw [ 0 ] != '\\0' )		4247889	0					
ANR	4248395	Condition	opts -> pw [ 0 ] != '\\0'	393:10:10148:10166	4247889	0	True				
ANR	4248396	EqualityExpression	opts -> pw [ 0 ] != '\\0'		4247889	0		!=			
ANR	4248397	ArrayIndexing	opts -> pw [ 0 ]		4247889	0					
ANR	4248398	PtrMemberAccess	opts -> pw		4247889	0					
ANR	4248399	Identifier	opts		4247889	0					
ANR	4248400	Identifier	pw		4247889	1					
ANR	4248401	PrimaryExpression	0		4247889	1					
ANR	4248402	PrimaryExpression	'\\0'		4247889	1					
ANR	4248403	CompoundStatement		110:31:2489:2489	4247889	1					
ANR	4248404	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one '-p' args may be provided\\n"" )"	394:7:10178:10240	4247889	0	True				
ANR	4248405	CallExpression	"fprintf ( stderr , ""ERROR: only one '-p' args may be provided\\n"" )"		4247889	0					
ANR	4248406	Callee	fprintf		4247889	0					
ANR	4248407	Identifier	fprintf		4247889	0					
ANR	4248408	ArgumentList	stderr		4247889	1					
ANR	4248409	Argument	stderr		4247889	0					
ANR	4248410	Identifier	stderr		4247889	0					
ANR	4248411	Argument	"""ERROR: only one '-p' args may be provided\\n"""		4247889	1					
ANR	4248412	PrimaryExpression	"""ERROR: only one '-p' args may be provided\\n"""		4247889	0					
ANR	4248413	ExpressionStatement	usage ( )	395:7:10249:10256	4247889	1	True				
ANR	4248414	CallExpression	usage ( )		4247889	0					
ANR	4248415	Callee	usage		4247889	0					
ANR	4248416	Identifier	usage		4247889	0					
ANR	4248417	ArgumentList			4247889	1					
ANR	4248418	ExpressionStatement	err = true	396:7:10265:10275	4247889	2	True				
ANR	4248419	AssignmentExpression	err = true		4247889	0		=			
ANR	4248420	Identifier	err		4247889	0					
ANR	4248421	Identifier	true		4247889	1					
ANR	4248422	ElseStatement	else		4247889	0					
ANR	4248423	CompoundStatement		115:11:2616:2616	4247889	0					
ANR	4248424	ExpressionStatement	"strncpy ( opts -> pw , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"	399:7:10305:10354	4247889	0	True				
ANR	4248425	CallExpression	"strncpy ( opts -> pw , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"		4247889	0					
ANR	4248426	Callee	strncpy		4247889	0					
ANR	4248427	Identifier	strncpy		4247889	0					
ANR	4248428	ArgumentList	opts -> pw		4247889	1					
ANR	4248429	Argument	opts -> pw		4247889	0					
ANR	4248430	PtrMemberAccess	opts -> pw		4247889	0					
ANR	4248431	Identifier	opts		4247889	0					
ANR	4248432	Identifier	pw		4247889	1					
ANR	4248433	Argument	argv [ i + 1 ]		4247889	1					
ANR	4248434	ArrayIndexing	argv [ i + 1 ]		4247889	0					
ANR	4248435	Identifier	argv		4247889	0					
ANR	4248436	AdditiveExpression	i + 1		4247889	1		+			
ANR	4248437	Identifier	i		4247889	0					
ANR	4248438	PrimaryExpression	1		4247889	1					
ANR	4248439	Argument	MAX_PASSWORD_LENGTH		4247889	2					
ANR	4248440	Identifier	MAX_PASSWORD_LENGTH		4247889	0					
ANR	4248441	ExpressionStatement	i ++	400:7:10363:10366	4247889	1	True				
ANR	4248442	PostIncDecOperationExpression	i ++		4247889	0					
ANR	4248443	Identifier	i		4247889	0					
ANR	4248444	IncDec	++		4247889	1					
ANR	4248445	ElseStatement	else		4247889	0					
ANR	4248446	CompoundStatement		119:12:2708:2708	4247889	0					
ANR	4248447	ExpressionStatement	err = true	403:6:10396:10406	4247889	0	True				
ANR	4248448	AssignmentExpression	err = true		4247889	0		=			
ANR	4248449	Identifier	err		4247889	0					
ANR	4248450	Identifier	true		4247889	1					
ANR	4248451	ExpressionStatement	optionNeedsArg ( argv [ i ] )	404:6:10414:10437	4247889	1	True				
ANR	4248452	CallExpression	optionNeedsArg ( argv [ i ] )		4247889	0					
ANR	4248453	Callee	optionNeedsArg		4247889	0					
ANR	4248454	Identifier	optionNeedsArg		4247889	0					
ANR	4248455	ArgumentList	argv [ i ]		4247889	1					
ANR	4248456	Argument	argv [ i ]		4247889	0					
ANR	4248457	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248458	Identifier	argv		4247889	0					
ANR	4248459	Identifier	i		4247889	1					
ANR	4248460	BreakStatement	break ;	406:5:10451:10456	4247889	5	True				
ANR	4248461	Label	case 'c' :	407:4:10462:10470	4247889	6	True				
ANR	4248462	IfStatement	if ( opts -> username [ 0 ] != '\\0' )		4247889	7					
ANR	4248463	Condition	opts -> username [ 0 ] != '\\0'	408:9:10481:10505	4247889	0	True				
ANR	4248464	EqualityExpression	opts -> username [ 0 ] != '\\0'		4247889	0		!=			
ANR	4248465	ArrayIndexing	opts -> username [ 0 ]		4247889	0					
ANR	4248466	PtrMemberAccess	opts -> username		4247889	0					
ANR	4248467	Identifier	opts		4247889	0					
ANR	4248468	Identifier	username		4247889	1					
ANR	4248469	PrimaryExpression	0		4247889	1					
ANR	4248470	PrimaryExpression	'\\0'		4247889	1					
ANR	4248471	CompoundStatement		125:36:2828:2828	4247889	1					
ANR	4248472	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one '-c' or '-u' arg may be provided\\n"" )"	409:6:10516:10585	4247889	0	True				
ANR	4248473	CallExpression	"fprintf ( stderr , ""ERROR: only one '-c' or '-u' arg may be provided\\n"" )"		4247889	0					
ANR	4248474	Callee	fprintf		4247889	0					
ANR	4248475	Identifier	fprintf		4247889	0					
ANR	4248476	ArgumentList	stderr		4247889	1					
ANR	4248477	Argument	stderr		4247889	0					
ANR	4248478	Identifier	stderr		4247889	0					
ANR	4248479	Argument	"""ERROR: only one '-c' or '-u' arg may be provided\\n"""		4247889	1					
ANR	4248480	PrimaryExpression	"""ERROR: only one '-c' or '-u' arg may be provided\\n"""		4247889	0					
ANR	4248481	ExpressionStatement	usage ( )	410:6:10593:10600	4247889	1	True				
ANR	4248482	CallExpression	usage ( )		4247889	0					
ANR	4248483	Callee	usage		4247889	0					
ANR	4248484	Identifier	usage		4247889	0					
ANR	4248485	ArgumentList			4247889	1					
ANR	4248486	ExpressionStatement	err = true	411:6:10608:10618	4247889	2	True				
ANR	4248487	AssignmentExpression	err = true		4247889	0		=			
ANR	4248488	Identifier	err		4247889	0					
ANR	4248489	Identifier	true		4247889	1					
ANR	4248490	ElseStatement	else		4247889	0					
ANR	4248491	CompoundStatement		130:10:2957:2957	4247889	0					
ANR	4248492	ExpressionStatement	"strcpy ( opts -> username , POOL_PASSWORD_USERNAME )"	414:6:10645:10691	4247889	0	True				
ANR	4248493	CallExpression	"strcpy ( opts -> username , POOL_PASSWORD_USERNAME )"		4247889	0					
ANR	4248494	Callee	strcpy		4247889	0					
ANR	4248495	Identifier	strcpy		4247889	0					
ANR	4248496	ArgumentList	opts -> username		4247889	1					
ANR	4248497	Argument	opts -> username		4247889	0					
ANR	4248498	PtrMemberAccess	opts -> username		4247889	0					
ANR	4248499	Identifier	opts		4247889	0					
ANR	4248500	Identifier	username		4247889	1					
ANR	4248501	Argument	POOL_PASSWORD_USERNAME		4247889	1					
ANR	4248502	Identifier	POOL_PASSWORD_USERNAME		4247889	0					
ANR	4248503	BreakStatement	break ;	416:5:10705:10710	4247889	8	True				
ANR	4248504	Label	case 'u' :	417:4:10716:10724	4247889	9	True				
ANR	4248505	IfStatement	if ( i + 1 < argc )		4247889	10					
ANR	4248506	Condition	i + 1 < argc	418:9:10735:10744	4247889	0	True				
ANR	4248507	RelationalExpression	i + 1 < argc		4247889	0		<			
ANR	4248508	AdditiveExpression	i + 1		4247889	0		+			
ANR	4248509	Identifier	i		4247889	0					
ANR	4248510	PrimaryExpression	1		4247889	1					
ANR	4248511	Identifier	argc		4247889	1					
ANR	4248512	CompoundStatement		135:21:3067:3067	4247889	1					
ANR	4248513	IfStatement	if ( opts -> username [ 0 ] != '\\0' )		4247889	0					
ANR	4248514	Condition	opts -> username [ 0 ] != '\\0'	419:10:10759:10783	4247889	0	True				
ANR	4248515	EqualityExpression	opts -> username [ 0 ] != '\\0'		4247889	0		!=			
ANR	4248516	ArrayIndexing	opts -> username [ 0 ]		4247889	0					
ANR	4248517	PtrMemberAccess	opts -> username		4247889	0					
ANR	4248518	Identifier	opts		4247889	0					
ANR	4248519	Identifier	username		4247889	1					
ANR	4248520	PrimaryExpression	0		4247889	1					
ANR	4248521	PrimaryExpression	'\\0'		4247889	1					
ANR	4248522	CompoundStatement		136:37:3106:3106	4247889	1					
ANR	4248523	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one of '-s' or '-u' may be provided\\n"" )"	420:7:10795:10863	4247889	0	True				
ANR	4248524	CallExpression	"fprintf ( stderr , ""ERROR: only one of '-s' or '-u' may be provided\\n"" )"		4247889	0					
ANR	4248525	Callee	fprintf		4247889	0					
ANR	4248526	Identifier	fprintf		4247889	0					
ANR	4248527	ArgumentList	stderr		4247889	1					
ANR	4248528	Argument	stderr		4247889	0					
ANR	4248529	Identifier	stderr		4247889	0					
ANR	4248530	Argument	"""ERROR: only one of '-s' or '-u' may be provided\\n"""		4247889	1					
ANR	4248531	PrimaryExpression	"""ERROR: only one of '-s' or '-u' may be provided\\n"""		4247889	0					
ANR	4248532	ExpressionStatement	usage ( )	421:7:10872:10879	4247889	1	True				
ANR	4248533	CallExpression	usage ( )		4247889	0					
ANR	4248534	Callee	usage		4247889	0					
ANR	4248535	Identifier	usage		4247889	0					
ANR	4248536	ArgumentList			4247889	1					
ANR	4248537	ExpressionStatement	err = true	422:7:10888:10898	4247889	2	True				
ANR	4248538	AssignmentExpression	err = true		4247889	0		=			
ANR	4248539	Identifier	err		4247889	0					
ANR	4248540	Identifier	true		4247889	1					
ANR	4248541	ElseStatement	else		4247889	0					
ANR	4248542	CompoundStatement		144:7:3324:3366	4247889	0					
ANR	4248543	ExpressionStatement	"strncpy ( opts -> username , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"	425:7:10928:10983	4247889	0	True				
ANR	4248544	CallExpression	"strncpy ( opts -> username , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"		4247889	0					
ANR	4248545	Callee	strncpy		4247889	0					
ANR	4248546	Identifier	strncpy		4247889	0					
ANR	4248547	ArgumentList	opts -> username		4247889	1					
ANR	4248548	Argument	opts -> username		4247889	0					
ANR	4248549	PtrMemberAccess	opts -> username		4247889	0					
ANR	4248550	Identifier	opts		4247889	0					
ANR	4248551	Identifier	username		4247889	1					
ANR	4248552	Argument	argv [ i + 1 ]		4247889	1					
ANR	4248553	ArrayIndexing	argv [ i + 1 ]		4247889	0					
ANR	4248554	Identifier	argv		4247889	0					
ANR	4248555	AdditiveExpression	i + 1		4247889	1		+			
ANR	4248556	Identifier	i		4247889	0					
ANR	4248557	PrimaryExpression	1		4247889	1					
ANR	4248558	Argument	MAX_PASSWORD_LENGTH		4247889	2					
ANR	4248559	Identifier	MAX_PASSWORD_LENGTH		4247889	0					
ANR	4248560	ExpressionStatement	i ++	426:7:10992:10995	4247889	1	True				
ANR	4248561	PostIncDecOperationExpression	i ++		4247889	0					
ANR	4248562	Identifier	i		4247889	0					
ANR	4248563	IncDec	++		4247889	1					
ANR	4248564	IdentifierDeclStatement	"char * at_ptr = strchr ( opts -> username , '@' ) ;"	427:7:11004:11046	4247889	2	True				
ANR	4248565	IdentifierDecl	"* at_ptr = strchr ( opts -> username , '@' )"		4247889	0					
ANR	4248566	IdentifierDeclType	char *		4247889	0					
ANR	4248567	Identifier	at_ptr		4247889	1					
ANR	4248568	AssignmentExpression	"* at_ptr = strchr ( opts -> username , '@' )"		4247889	2		=			
ANR	4248569	Identifier	at_ptr		4247889	0					
ANR	4248570	CallExpression	"strchr ( opts -> username , '@' )"		4247889	1					
ANR	4248571	Callee	strchr		4247889	0					
ANR	4248572	Identifier	strchr		4247889	0					
ANR	4248573	ArgumentList	opts -> username		4247889	1					
ANR	4248574	Argument	opts -> username		4247889	0					
ANR	4248575	PtrMemberAccess	opts -> username		4247889	0					
ANR	4248576	Identifier	opts		4247889	0					
ANR	4248577	Identifier	username		4247889	1					
ANR	4248578	Argument	'@'		4247889	1					
ANR	4248579	PrimaryExpression	'@'		4247889	0					
ANR	4248580	IfStatement	if ( at_ptr == NULL || at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1 )		4247889	3					
ANR	4248581	Condition	at_ptr == NULL || at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1	430:11:11150:11264	4247889	0	True				
ANR	4248582	OrExpression	at_ptr == NULL || at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1		4247889	0		||			
ANR	4248583	EqualityExpression	at_ptr == NULL		4247889	0		==			
ANR	4248584	Identifier	at_ptr		4247889	0					
ANR	4248585	Identifier	NULL		4247889	1					
ANR	4248586	OrExpression	at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1		4247889	1		||			
ANR	4248587	EqualityExpression	at_ptr == opts -> username		4247889	0		==			
ANR	4248588	Identifier	at_ptr		4247889	0					
ANR	4248589	PtrMemberAccess	opts -> username		4247889	1					
ANR	4248590	Identifier	opts		4247889	0					
ANR	4248591	Identifier	username		4247889	1					
ANR	4248592	EqualityExpression	at_ptr == opts -> username + strlen ( opts -> username ) - 1		4247889	1		==			
ANR	4248593	Identifier	at_ptr		4247889	0					
ANR	4248594	AdditiveExpression	opts -> username + strlen ( opts -> username ) - 1		4247889	1		+			
ANR	4248595	PtrMemberAccess	opts -> username		4247889	0					
ANR	4248596	Identifier	opts		4247889	0					
ANR	4248597	Identifier	username		4247889	1					
ANR	4248598	AdditiveExpression	strlen ( opts -> username ) - 1		4247889	1		-			
ANR	4248599	CallExpression	strlen ( opts -> username )		4247889	0					
ANR	4248600	Callee	strlen		4247889	0					
ANR	4248601	Identifier	strlen		4247889	0					
ANR	4248602	ArgumentList	opts -> username		4247889	1					
ANR	4248603	Argument	opts -> username		4247889	0					
ANR	4248604	PtrMemberAccess	opts -> username		4247889	0					
ANR	4248605	Identifier	opts		4247889	0					
ANR	4248606	Identifier	username		4247889	1					
ANR	4248607	PrimaryExpression	1		4247889	1					
ANR	4248608	CompoundStatement		149:62:3587:3587	4247889	1					
ANR	4248609	Statement	fprintf	433:8:11277:11283	4247889	0	True				
ANR	4248610	Statement	(	433:15:11284:11284	4247889	1	True				
ANR	4248611	Statement	stderr	433:16:11285:11290	4247889	2	True				
ANR	4248612	Statement	","	433:22:11291:11291	4247889	3	True				
ANR	4248613	Statement	"""ERROR: Username '%s' is not of """	433:24:11293:11325	4247889	4	True				
ANR	4248614	Statement	"""the form: account@domain\\n"""	434:12:11339:11366	4247889	5	True				
ANR	4248615	Statement	","	434:40:11367:11367	4247889	6	True				
ANR	4248616	Statement	opts	434:42:11369:11372	4247889	7	True				
ANR	4248617	Statement	->	434:46:11373:11374	4247889	8	True				
ANR	4248618	Statement	username	434:48:11375:11382	4247889	9	True				
ANR	4248619	Statement	)	434:56:11383:11383	4247889	10	True				
ANR	4248620	ExpressionStatement		434:57:11384:11384	4247889	11	True				
ANR	4248621	ExpressionStatement	usage ( )	435:8:11394:11401	4247889	12	True				
ANR	4248622	CallExpression	usage ( )		4247889	0					
ANR	4248623	Callee	usage		4247889	0					
ANR	4248624	Identifier	usage		4247889	0					
ANR	4248625	ArgumentList			4247889	1					
ANR	4248626	ElseStatement	else		4247889	0					
ANR	4248627	CompoundStatement		155:12:3752:3752	4247889	0					
ANR	4248628	ExpressionStatement	err = true	439:6:11440:11450	4247889	0	True				
ANR	4248629	AssignmentExpression	err = true		4247889	0		=			
ANR	4248630	Identifier	err		4247889	0					
ANR	4248631	Identifier	true		4247889	1					
ANR	4248632	ExpressionStatement	optionNeedsArg ( argv [ i ] )	440:6:11458:11481	4247889	1	True				
ANR	4248633	CallExpression	optionNeedsArg ( argv [ i ] )		4247889	0					
ANR	4248634	Callee	optionNeedsArg		4247889	0					
ANR	4248635	Identifier	optionNeedsArg		4247889	0					
ANR	4248636	ArgumentList	argv [ i ]		4247889	1					
ANR	4248637	Argument	argv [ i ]		4247889	0					
ANR	4248638	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248639	Identifier	argv		4247889	0					
ANR	4248640	Identifier	i		4247889	1					
ANR	4248641	BreakStatement	break ;	442:5:11495:11500	4247889	11	True				
ANR	4248642	Label	case 'f' :	444:4:11526:11534	4247889	12	True				
ANR	4248643	IfStatement	if ( i + 1 >= argc )		4247889	13					
ANR	4248644	Condition	i + 1 >= argc	445:9:11545:11555	4247889	0	True				
ANR	4248645	RelationalExpression	i + 1 >= argc		4247889	0		>=			
ANR	4248646	AdditiveExpression	i + 1		4247889	0		+			
ANR	4248647	Identifier	i		4247889	0					
ANR	4248648	PrimaryExpression	1		4247889	1					
ANR	4248649	Identifier	argc		4247889	1					
ANR	4248650	CompoundStatement		162:22:3878:3878	4247889	1					
ANR	4248651	ExpressionStatement	err = true	446:6:11566:11576	4247889	0	True				
ANR	4248652	AssignmentExpression	err = true		4247889	0		=			
ANR	4248653	Identifier	err		4247889	0					
ANR	4248654	Identifier	true		4247889	1					
ANR	4248655	ExpressionStatement	optionNeedsArg ( argv [ i ] )	447:6:11584:11607	4247889	1	True				
ANR	4248656	CallExpression	optionNeedsArg ( argv [ i ] )		4247889	0					
ANR	4248657	Callee	optionNeedsArg		4247889	0					
ANR	4248658	Identifier	optionNeedsArg		4247889	0					
ANR	4248659	ArgumentList	argv [ i ]		4247889	1					
ANR	4248660	Argument	argv [ i ]		4247889	0					
ANR	4248661	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248662	Identifier	argv		4247889	0					
ANR	4248663	Identifier	i		4247889	1					
ANR	4248664	ExpressionStatement	opts -> password_file = argv [ i + 1 ]	449:5:11621:11652	4247889	14	True				
ANR	4248665	AssignmentExpression	opts -> password_file = argv [ i + 1 ]		4247889	0		=			
ANR	4248666	PtrMemberAccess	opts -> password_file		4247889	0					
ANR	4248667	Identifier	opts		4247889	0					
ANR	4248668	Identifier	password_file		4247889	1					
ANR	4248669	ArrayIndexing	argv [ i + 1 ]		4247889	1					
ANR	4248670	Identifier	argv		4247889	0					
ANR	4248671	AdditiveExpression	i + 1		4247889	1		+			
ANR	4248672	Identifier	i		4247889	0					
ANR	4248673	PrimaryExpression	1		4247889	1					
ANR	4248674	ExpressionStatement	i ++	450:5:11659:11662	4247889	15	True				
ANR	4248675	PostIncDecOperationExpression	i ++		4247889	0					
ANR	4248676	Identifier	i		4247889	0					
ANR	4248677	IncDec	++		4247889	1					
ANR	4248678	ExpressionStatement	opts -> mode = ADD_MODE	451:5:11669:11690	4247889	16	True				
ANR	4248679	AssignmentExpression	opts -> mode = ADD_MODE		4247889	0		=			
ANR	4248680	PtrMemberAccess	opts -> mode		4247889	0					
ANR	4248681	Identifier	opts		4247889	0					
ANR	4248682	Identifier	mode		4247889	1					
ANR	4248683	Identifier	ADD_MODE		4247889	1					
ANR	4248684	BreakStatement	break ;	452:5:11697:11702	4247889	17	True				
ANR	4248685	Label	case 'd' :	454:4:11715:11723	4247889	18	True				
ANR	4248686	ExpressionStatement	Termlog = 1	455:5:11730:11741	4247889	19	True				
ANR	4248687	AssignmentExpression	Termlog = 1		4247889	0		=			
ANR	4248688	Identifier	Termlog		4247889	0					
ANR	4248689	PrimaryExpression	1		4247889	1					
ANR	4248690	ExpressionStatement	p_funcs = get_param_functions ( )	456:5:11748:11779	4247889	20	True				
ANR	4248691	AssignmentExpression	p_funcs = get_param_functions ( )		4247889	0		=			
ANR	4248692	Identifier	p_funcs		4247889	0					
ANR	4248693	CallExpression	get_param_functions ( )		4247889	1					
ANR	4248694	Callee	get_param_functions		4247889	0					
ANR	4248695	Identifier	get_param_functions		4247889	0					
ANR	4248696	ArgumentList			4247889	1					
ANR	4248697	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	457:5:11786:11818	4247889	21	True				
ANR	4248698	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		4247889	0					
ANR	4248699	Callee	dprintf_config		4247889	0					
ANR	4248700	Identifier	dprintf_config		4247889	0					
ANR	4248701	ArgumentList	"""TOOL"""		4247889	1					
ANR	4248702	Argument	"""TOOL"""		4247889	0					
ANR	4248703	PrimaryExpression	"""TOOL"""		4247889	0					
ANR	4248704	Argument	p_funcs		4247889	1					
ANR	4248705	Identifier	p_funcs		4247889	0					
ANR	4248706	BreakStatement	break ;	458:5:11825:11830	4247889	22	True				
ANR	4248707	Label	case 'h' :	459:4:11836:11844	4247889	23	True				
ANR	4248708	ExpressionStatement	opts -> help = true	460:5:11851:11868	4247889	24	True				
ANR	4248709	AssignmentExpression	opts -> help = true		4247889	0		=			
ANR	4248710	PtrMemberAccess	opts -> help		4247889	0					
ANR	4248711	Identifier	opts		4247889	0					
ANR	4248712	Identifier	help		4247889	1					
ANR	4248713	Identifier	true		4247889	1					
ANR	4248714	BreakStatement	break ;	461:5:11875:11880	4247889	25	True				
ANR	4248715	Label	default :	462:4:11886:11893	4247889	26	True				
ANR	4248716	Identifier	default		4247889	0					
ANR	4248717	ExpressionStatement	err = true	463:5:11900:11910	4247889	27	True				
ANR	4248718	AssignmentExpression	err = true		4247889	0		=			
ANR	4248719	Identifier	err		4247889	0					
ANR	4248720	Identifier	true		4247889	1					
ANR	4248721	ExpressionStatement	badOption ( argv [ i ] )	464:5:11917:11935	4247889	28	True				
ANR	4248722	CallExpression	badOption ( argv [ i ] )		4247889	0					
ANR	4248723	Callee	badOption		4247889	0					
ANR	4248724	Identifier	badOption		4247889	0					
ANR	4248725	ArgumentList	argv [ i ]		4247889	1					
ANR	4248726	Argument	argv [ i ]		4247889	0					
ANR	4248727	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248728	Identifier	argv		4247889	0					
ANR	4248729	Identifier	i		4247889	1					
ANR	4248730	BreakStatement	break ;	466:3:11945:11950	4247889	18	True				
ANR	4248731	Label	default :	467:2:11976:11983	4247889	19	True				
ANR	4248732	Identifier	default		4247889	0					
ANR	4248733	ExpressionStatement	err = true	468:3:11988:11998	4247889	20	True				
ANR	4248734	AssignmentExpression	err = true		4247889	0		=			
ANR	4248735	Identifier	err		4247889	0					
ANR	4248736	Identifier	true		4247889	1					
ANR	4248737	ExpressionStatement	badCommand ( argv [ i ] )	469:3:12003:12022	4247889	21	True				
ANR	4248738	CallExpression	badCommand ( argv [ i ] )		4247889	0					
ANR	4248739	Callee	badCommand		4247889	0					
ANR	4248740	Identifier	badCommand		4247889	0					
ANR	4248741	ArgumentList	argv [ i ]		4247889	1					
ANR	4248742	Argument	argv [ i ]		4247889	0					
ANR	4248743	ArrayIndexing	argv [ i ]		4247889	0					
ANR	4248744	Identifier	argv		4247889	0					
ANR	4248745	Identifier	i		4247889	1					
ANR	4248746	BreakStatement	break ;	470:3:12027:12032	4247889	22	True				
ANR	4248747	ReturnStatement	return ! err ;	474:1:12043:12054	4247889	11	True				
ANR	4248748	UnaryOperationExpression	! err		4247889	0					
ANR	4248749	UnaryOperator	!		4247889	0					
ANR	4248750	Identifier	err		4247889	1					
ANR	4248751	ReturnType	bool		4247889	1					
ANR	4248752	Identifier	parseCommandLine		4247889	2					
ANR	4248753	ParameterList	"StoreCredOptions * opts , int argc , char * argv [ ]"		4247889	3					
ANR	4248754	Parameter	StoreCredOptions * opts	284:17:7631:7652	4247889	0	True				
ANR	4248755	ParameterType	StoreCredOptions *		4247889	0					
ANR	4248756	Identifier	opts		4247889	1					
ANR	4248757	Parameter	int argc	284:41:7655:7662	4247889	1	True				
ANR	4248758	ParameterType	int		4247889	0					
ANR	4248759	Identifier	argc		4247889	1					
ANR	4248760	Parameter	char * argv [ ]	284:51:7665:7676	4247889	2	True				
ANR	4248761	ParameterType	char * [ ]		4247889	0					
ANR	4248762	Identifier	argv		4247889	1					
ANR	4248763	CFGEntryNode	ENTRY		4247889		True				
ANR	4248764	CFGExitNode	EXIT		4247889		True				
ANR	4248765	Symbol	QUERY_CREDENTIAL		4247889						
ANR	4248766	Symbol	DELETE_MODE		4247889						
ANR	4248767	Symbol	opts -> mode		4247889						
ANR	4248768	Symbol	strchr		4247889						
ANR	4248769	Symbol	p_funcs		4247889						
ANR	4248770	Symbol	* argv		4247889						
ANR	4248771	Symbol	argv		4247889						
ANR	4248772	Symbol	opts -> password_file		4247889						
ANR	4248773	Symbol	ADD_CREDENTIAL		4247889						
ANR	4248774	Symbol	CONFIG_CREDENTIAL		4247889						
ANR	4248775	Symbol	strlen		4247889						
ANR	4248776	Symbol	opts		4247889						
ANR	4248777	Symbol	* * opts		4247889						
ANR	4248778	Symbol	* * argv		4247889						
ANR	4248779	Symbol	strcasecmp		4247889						
ANR	4248780	Symbol	ADD_MODE		4247889						
ANR	4248781	Symbol	opts -> daemonname		4247889						
ANR	4248782	Symbol	CONFIG_MODE		4247889						
ANR	4248783	Symbol	* MAX_PASSWORD_LENGTH		4247889						
ANR	4248784	Symbol	argc		4247889						
ANR	4248785	Symbol	* * i		4247889						
ANR	4248786	Symbol	NULL		4247889						
ANR	4248787	Symbol	opts -> username		4247889						
ANR	4248788	Symbol	err		4247889						
ANR	4248789	Symbol	* opts -> pw		4247889						
ANR	4248790	Symbol	Termlog		4247889						
ANR	4248791	Symbol	get_param_functions		4247889						
ANR	4248792	Symbol	false		4247889						
ANR	4248793	Symbol	opts -> help		4247889						
ANR	4248794	Symbol	i		4247889						
ANR	4248795	Symbol	get_daemon_name		4247889						
ANR	4248796	Symbol	stderr		4247889						
ANR	4248797	Symbol	DELETE_CREDENTIAL		4247889						
ANR	4248798	Symbol	* i		4247889						
ANR	4248799	Symbol	* opts		4247889						
ANR	4248800	Symbol	POOL_PASSWORD_USERNAME		4247889						
ANR	4248801	Symbol	* opts -> username		4247889						
ANR	4248802	Symbol	at_ptr		4247889						
ANR	4248803	Symbol	true		4247889						
ANR	4248804	Symbol	opts -> pw		4247889						
ANR	4248805	Symbol	QUERY_MODE		4247889						
ANR	4248806	Symbol	MAX_PASSWORD_LENGTH		4247889						
ANR	4248807	Function	badCommand	477:0:12059:12177							
ANR	4248808	FunctionDef	badCommand (const char * command)		4248807	0					
ANR	4248809	CompoundStatement		478:32:12096:12177	4248807	0					
ANR	4248810	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unrecognized command - '%s'\\n\\n"" , command )"	479:1:12099:12165	4248807	0	True				
ANR	4248811	CallExpression	"fprintf ( stderr , ""ERROR: Unrecognized command - '%s'\\n\\n"" , command )"		4248807	0					
ANR	4248812	Callee	fprintf		4248807	0					
ANR	4248813	Identifier	fprintf		4248807	0					
ANR	4248814	ArgumentList	stderr		4248807	1					
ANR	4248815	Argument	stderr		4248807	0					
ANR	4248816	Identifier	stderr		4248807	0					
ANR	4248817	Argument	"""ERROR: Unrecognized command - '%s'\\n\\n"""		4248807	1					
ANR	4248818	PrimaryExpression	"""ERROR: Unrecognized command - '%s'\\n\\n"""		4248807	0					
ANR	4248819	Argument	command		4248807	2					
ANR	4248820	Identifier	command		4248807	0					
ANR	4248821	ExpressionStatement	usage ( )	480:1:12168:12175	4248807	1	True				
ANR	4248822	CallExpression	usage ( )		4248807	0					
ANR	4248823	Callee	usage		4248807	0					
ANR	4248824	Identifier	usage		4248807	0					
ANR	4248825	ArgumentList			4248807	1					
ANR	4248826	ReturnType	void		4248807	1					
ANR	4248827	Identifier	badCommand		4248807	2					
ANR	4248828	ParameterList	const char * command		4248807	3					
ANR	4248829	Parameter	const char * command	478:11:12075:12093	4248807	0	True				
ANR	4248830	ParameterType	const char *		4248807	0					
ANR	4248831	Identifier	command		4248807	1					
ANR	4248832	CFGEntryNode	ENTRY		4248807		True				
ANR	4248833	CFGExitNode	EXIT		4248807		True				
ANR	4248834	Symbol	stderr		4248807						
ANR	4248835	Symbol	command		4248807						
ANR	4248836	Function	badOption	483:0:12180:12294							
ANR	4248837	FunctionDef	badOption (const char * option)		4248836	0					
ANR	4248838	CompoundStatement		484:30:12215:12294	4248836	0					
ANR	4248839	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unrecognized option - '%s'\\n\\n"" , option )"	485:1:12218:12282	4248836	0	True				
ANR	4248840	CallExpression	"fprintf ( stderr , ""ERROR: Unrecognized option - '%s'\\n\\n"" , option )"		4248836	0					
ANR	4248841	Callee	fprintf		4248836	0					
ANR	4248842	Identifier	fprintf		4248836	0					
ANR	4248843	ArgumentList	stderr		4248836	1					
ANR	4248844	Argument	stderr		4248836	0					
ANR	4248845	Identifier	stderr		4248836	0					
ANR	4248846	Argument	"""ERROR: Unrecognized option - '%s'\\n\\n"""		4248836	1					
ANR	4248847	PrimaryExpression	"""ERROR: Unrecognized option - '%s'\\n\\n"""		4248836	0					
ANR	4248848	Argument	option		4248836	2					
ANR	4248849	Identifier	option		4248836	0					
ANR	4248850	ExpressionStatement	usage ( )	486:1:12285:12292	4248836	1	True				
ANR	4248851	CallExpression	usage ( )		4248836	0					
ANR	4248852	Callee	usage		4248836	0					
ANR	4248853	Identifier	usage		4248836	0					
ANR	4248854	ArgumentList			4248836	1					
ANR	4248855	ReturnType	void		4248836	1					
ANR	4248856	Identifier	badOption		4248836	2					
ANR	4248857	ParameterList	const char * option		4248836	3					
ANR	4248858	Parameter	const char * option	484:10:12195:12212	4248836	0	True				
ANR	4248859	ParameterType	const char *		4248836	0					
ANR	4248860	Identifier	option		4248836	1					
ANR	4248861	CFGEntryNode	ENTRY		4248836		True				
ANR	4248862	CFGExitNode	EXIT		4248836		True				
ANR	4248863	Symbol	stderr		4248836						
ANR	4248864	Symbol	option		4248836						
ANR	4248865	Function	optionNeedsArg	489:0:12297:12422							
ANR	4248866	FunctionDef	optionNeedsArg (const char * option)		4248865	0					
ANR	4248867	CompoundStatement		491:0:12337:12422	4248865	0					
ANR	4248868	ExpressionStatement	"fprintf ( stderr , ""ERROR: Option '%s' requires an argument\\n\\n"" , option )"	492:1:12340:12410	4248865	0	True				
ANR	4248869	CallExpression	"fprintf ( stderr , ""ERROR: Option '%s' requires an argument\\n\\n"" , option )"		4248865	0					
ANR	4248870	Callee	fprintf		4248865	0					
ANR	4248871	Identifier	fprintf		4248865	0					
ANR	4248872	ArgumentList	stderr		4248865	1					
ANR	4248873	Argument	stderr		4248865	0					
ANR	4248874	Identifier	stderr		4248865	0					
ANR	4248875	Argument	"""ERROR: Option '%s' requires an argument\\n\\n"""		4248865	1					
ANR	4248876	PrimaryExpression	"""ERROR: Option '%s' requires an argument\\n\\n"""		4248865	0					
ANR	4248877	Argument	option		4248865	2					
ANR	4248878	Identifier	option		4248865	0					
ANR	4248879	ExpressionStatement	usage ( )	493:1:12413:12420	4248865	1	True				
ANR	4248880	CallExpression	usage ( )		4248865	0					
ANR	4248881	Callee	usage		4248865	0					
ANR	4248882	Identifier	usage		4248865	0					
ANR	4248883	ArgumentList			4248865	1					
ANR	4248884	ReturnType	void		4248865	1					
ANR	4248885	Identifier	optionNeedsArg		4248865	2					
ANR	4248886	ParameterList	const char * option		4248865	3					
ANR	4248887	Parameter	const char * option	490:15:12317:12334	4248865	0	True				
ANR	4248888	ParameterType	const char *		4248865	0					
ANR	4248889	Identifier	option		4248865	1					
ANR	4248890	CFGEntryNode	ENTRY		4248865		True				
ANR	4248891	CFGExitNode	EXIT		4248865		True				
ANR	4248892	Symbol	stderr		4248865						
ANR	4248893	Symbol	option		4248865						
ANR	4248894	Function	usage	496:0:12425:13507							
ANR	4248895	FunctionDef	usage ()		4248894	0					
ANR	4248896	CompoundStatement		498:0:12438:13507	4248894	0					
ANR	4248897	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [options] action\\n"" , MyName )"	499:1:12441:12498	4248894	0	True				
ANR	4248898	CallExpression	"fprintf ( stderr , ""Usage: %s [options] action\\n"" , MyName )"		4248894	0					
ANR	4248899	Callee	fprintf		4248894	0					
ANR	4248900	Identifier	fprintf		4248894	0					
ANR	4248901	ArgumentList	stderr		4248894	1					
ANR	4248902	Argument	stderr		4248894	0					
ANR	4248903	Identifier	stderr		4248894	0					
ANR	4248904	Argument	"""Usage: %s [options] action\\n"""		4248894	1					
ANR	4248905	PrimaryExpression	"""Usage: %s [options] action\\n"""		4248894	0					
ANR	4248906	Argument	MyName		4248894	2					
ANR	4248907	Identifier	MyName		4248894	0					
ANR	4248908	ExpressionStatement	"fprintf ( stderr , ""  where action is one of:\\n"" )"	500:1:12501:12549	4248894	1	True				
ANR	4248909	CallExpression	"fprintf ( stderr , ""  where action is one of:\\n"" )"		4248894	0					
ANR	4248910	Callee	fprintf		4248894	0					
ANR	4248911	Identifier	fprintf		4248894	0					
ANR	4248912	ArgumentList	stderr		4248894	1					
ANR	4248913	Argument	stderr		4248894	0					
ANR	4248914	Identifier	stderr		4248894	0					
ANR	4248915	Argument	"""  where action is one of:\\n"""		4248894	1					
ANR	4248916	PrimaryExpression	"""  where action is one of:\\n"""		4248894	0					
ANR	4248917	ExpressionStatement	"fprintf ( stderr , ""    add               (Add credential to secure storage)\\n"" )"	501:1:12552:12631	4248894	2	True				
ANR	4248918	CallExpression	"fprintf ( stderr , ""    add               (Add credential to secure storage)\\n"" )"		4248894	0					
ANR	4248919	Callee	fprintf		4248894	0					
ANR	4248920	Identifier	fprintf		4248894	0					
ANR	4248921	ArgumentList	stderr		4248894	1					
ANR	4248922	Argument	stderr		4248894	0					
ANR	4248923	Identifier	stderr		4248894	0					
ANR	4248924	Argument	"""    add               (Add credential to secure storage)\\n"""		4248894	1					
ANR	4248925	PrimaryExpression	"""    add               (Add credential to secure storage)\\n"""		4248894	0					
ANR	4248926	ExpressionStatement	"fprintf ( stderr , ""    delete            (Remove credential from secure storage)\\n"" )"	502:1:12634:12718	4248894	3	True				
ANR	4248927	CallExpression	"fprintf ( stderr , ""    delete            (Remove credential from secure storage)\\n"" )"		4248894	0					
ANR	4248928	Callee	fprintf		4248894	0					
ANR	4248929	Identifier	fprintf		4248894	0					
ANR	4248930	ArgumentList	stderr		4248894	1					
ANR	4248931	Argument	stderr		4248894	0					
ANR	4248932	Identifier	stderr		4248894	0					
ANR	4248933	Argument	"""    delete            (Remove credential from secure storage)\\n"""		4248894	1					
ANR	4248934	PrimaryExpression	"""    delete            (Remove credential from secure storage)\\n"""		4248894	0					
ANR	4248935	ExpressionStatement	"fprintf ( stderr , ""    query             (Check if a credential has been stored)\\n"" )"	503:1:12721:12805	4248894	4	True				
ANR	4248936	CallExpression	"fprintf ( stderr , ""    query             (Check if a credential has been stored)\\n"" )"		4248894	0					
ANR	4248937	Callee	fprintf		4248894	0					
ANR	4248938	Identifier	fprintf		4248894	0					
ANR	4248939	ArgumentList	stderr		4248894	1					
ANR	4248940	Argument	stderr		4248894	0					
ANR	4248941	Identifier	stderr		4248894	0					
ANR	4248942	Argument	"""    query             (Check if a credential has been stored)\\n"""		4248894	1					
ANR	4248943	PrimaryExpression	"""    query             (Check if a credential has been stored)\\n"""		4248894	0					
ANR	4248944	ExpressionStatement	"fprintf ( stderr , ""  and where [options] is one or more of:\\n"" )"	504:1:12808:12871	4248894	5	True				
ANR	4248945	CallExpression	"fprintf ( stderr , ""  and where [options] is one or more of:\\n"" )"		4248894	0					
ANR	4248946	Callee	fprintf		4248894	0					
ANR	4248947	Identifier	fprintf		4248894	0					
ANR	4248948	ArgumentList	stderr		4248894	1					
ANR	4248949	Argument	stderr		4248894	0					
ANR	4248950	Identifier	stderr		4248894	0					
ANR	4248951	Argument	"""  and where [options] is one or more of:\\n"""		4248894	1					
ANR	4248952	PrimaryExpression	"""  and where [options] is one or more of:\\n"""		4248894	0					
ANR	4248953	ExpressionStatement	"fprintf ( stderr , ""    -u username       (use the specified username)\\n"" )"	505:1:12874:12947	4248894	6	True				
ANR	4248954	CallExpression	"fprintf ( stderr , ""    -u username       (use the specified username)\\n"" )"		4248894	0					
ANR	4248955	Callee	fprintf		4248894	0					
ANR	4248956	Identifier	fprintf		4248894	0					
ANR	4248957	ArgumentList	stderr		4248894	1					
ANR	4248958	Argument	stderr		4248894	0					
ANR	4248959	Identifier	stderr		4248894	0					
ANR	4248960	Argument	"""    -u username       (use the specified username)\\n"""		4248894	1					
ANR	4248961	PrimaryExpression	"""    -u username       (use the specified username)\\n"""		4248894	0					
ANR	4248962	ExpressionStatement	"fprintf ( stderr , ""    -c                (update/query the condor pool password)\\n"" )"	506:1:12950:13033	4248894	7	True				
ANR	4248963	CallExpression	"fprintf ( stderr , ""    -c                (update/query the condor pool password)\\n"" )"		4248894	0					
ANR	4248964	Callee	fprintf		4248894	0					
ANR	4248965	Identifier	fprintf		4248894	0					
ANR	4248966	ArgumentList	stderr		4248894	1					
ANR	4248967	Argument	stderr		4248894	0					
ANR	4248968	Identifier	stderr		4248894	0					
ANR	4248969	Argument	"""    -c                (update/query the condor pool password)\\n"""		4248894	1					
ANR	4248970	PrimaryExpression	"""    -c                (update/query the condor pool password)\\n"""		4248894	0					
ANR	4248971	ExpressionStatement	"fprintf ( stderr , ""    -p password       (use the specified password rather than prompting)\\n"" )"	507:1:13036:13131	4248894	8	True				
ANR	4248972	CallExpression	"fprintf ( stderr , ""    -p password       (use the specified password rather than prompting)\\n"" )"		4248894	0					
ANR	4248973	Callee	fprintf		4248894	0					
ANR	4248974	Identifier	fprintf		4248894	0					
ANR	4248975	ArgumentList	stderr		4248894	1					
ANR	4248976	Argument	stderr		4248894	0					
ANR	4248977	Identifier	stderr		4248894	0					
ANR	4248978	Argument	"""    -p password       (use the specified password rather than prompting)\\n"""		4248894	1					
ANR	4248979	PrimaryExpression	"""    -p password       (use the specified password rather than prompting)\\n"""		4248894	0					
ANR	4248980	ExpressionStatement	"fprintf ( stderr , ""    -n name           (update/query to the named machine)\\n"" )"	508:1:13134:13214	4248894	9	True				
ANR	4248981	CallExpression	"fprintf ( stderr , ""    -n name           (update/query to the named machine)\\n"" )"		4248894	0					
ANR	4248982	Callee	fprintf		4248894	0					
ANR	4248983	Identifier	fprintf		4248894	0					
ANR	4248984	ArgumentList	stderr		4248894	1					
ANR	4248985	Argument	stderr		4248894	0					
ANR	4248986	Identifier	stderr		4248894	0					
ANR	4248987	Argument	"""    -n name           (update/query to the named machine)\\n"""		4248894	1					
ANR	4248988	PrimaryExpression	"""    -n name           (update/query to the named machine)\\n"""		4248894	0					
ANR	4248989	ExpressionStatement	"fprintf ( stderr , ""    -f filename       (generate a pool password file)\\n"" )"	510:1:13237:13313	4248894	10	True				
ANR	4248990	CallExpression	"fprintf ( stderr , ""    -f filename       (generate a pool password file)\\n"" )"		4248894	0					
ANR	4248991	Callee	fprintf		4248894	0					
ANR	4248992	Identifier	fprintf		4248894	0					
ANR	4248993	ArgumentList	stderr		4248894	1					
ANR	4248994	Argument	stderr		4248894	0					
ANR	4248995	Identifier	stderr		4248894	0					
ANR	4248996	Argument	"""    -f filename       (generate a pool password file)\\n"""		4248894	1					
ANR	4248997	PrimaryExpression	"""    -f filename       (generate a pool password file)\\n"""		4248894	0					
ANR	4248998	ExpressionStatement	"fprintf ( stderr , ""    -d                (display debugging messages)\\n"" )"	512:1:13323:13396	4248894	11	True				
ANR	4248999	CallExpression	"fprintf ( stderr , ""    -d                (display debugging messages)\\n"" )"		4248894	0					
ANR	4249000	Callee	fprintf		4248894	0					
ANR	4249001	Identifier	fprintf		4248894	0					
ANR	4249002	ArgumentList	stderr		4248894	1					
ANR	4249003	Argument	stderr		4248894	0					
ANR	4249004	Identifier	stderr		4248894	0					
ANR	4249005	Argument	"""    -d                (display debugging messages)\\n"""		4248894	1					
ANR	4249006	PrimaryExpression	"""    -d                (display debugging messages)\\n"""		4248894	0					
ANR	4249007	ExpressionStatement	"fprintf ( stderr , ""    -h                (display this message)\\n"" )"	513:1:13399:13466	4248894	12	True				
ANR	4249008	CallExpression	"fprintf ( stderr , ""    -h                (display this message)\\n"" )"		4248894	0					
ANR	4249009	Callee	fprintf		4248894	0					
ANR	4249010	Identifier	fprintf		4248894	0					
ANR	4249011	ArgumentList	stderr		4248894	1					
ANR	4249012	Argument	stderr		4248894	0					
ANR	4249013	Identifier	stderr		4248894	0					
ANR	4249014	Argument	"""    -h                (display this message)\\n"""		4248894	1					
ANR	4249015	PrimaryExpression	"""    -h                (display this message)\\n"""		4248894	0					
ANR	4249016	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	514:1:13469:13492	4248894	13	True				
ANR	4249017	CallExpression	"fprintf ( stderr , ""\\n"" )"		4248894	0					
ANR	4249018	Callee	fprintf		4248894	0					
ANR	4249019	Identifier	fprintf		4248894	0					
ANR	4249020	ArgumentList	stderr		4248894	1					
ANR	4249021	Argument	stderr		4248894	0					
ANR	4249022	Identifier	stderr		4248894	0					
ANR	4249023	Argument	"""\\n"""		4248894	1					
ANR	4249024	PrimaryExpression	"""\\n"""		4248894	0					
ANR	4249025	ExpressionStatement	exit ( 1 )	516:1:13496:13505	4248894	14	True				
ANR	4249026	CallExpression	exit ( 1 )		4248894	0					
ANR	4249027	Callee	exit		4248894	0					
ANR	4249028	Identifier	exit		4248894	0					
ANR	4249029	ArgumentList	1		4248894	1					
ANR	4249030	Argument	1		4248894	0					
ANR	4249031	PrimaryExpression	1		4248894	0					
ANR	4249032	ReturnType	void		4248894	1					
ANR	4249033	Identifier	usage		4248894	2					
ANR	4249034	ParameterList			4248894	3					
ANR	4249035	CFGEntryNode	ENTRY		4248894		True				
ANR	4249036	CFGExitNode	EXIT		4248894		True				
ANR	4249037	Symbol	MyName		4248894						
ANR	4249038	Symbol	stderr		4248894						
ANR	4249039	Function	goAheadAnyways	519:0:13511:13912							
ANR	4249040	FunctionDef	goAheadAnyways ()		4249039	0					
ANR	4249041	CompoundStatement		521:0:13533:13912	4249039	0					
ANR	4249042	Statement	printf	522:1:13536:13541	4249039	0	True				
ANR	4249043	Statement	(	522:7:13542:13542	4249039	1	True				
ANR	4249044	Statement	"""WARNING: Continuing will result in your password """	522:8:13543:13593	4249039	2	True				
ANR	4249045	Statement	"""being sent in the clear!\\n"""	523:5:13600:13627	4249039	3	True				
ANR	4249046	Statement	"""  Do you want to continue? [y/N] """	524:5:13634:13668	4249039	4	True				
ANR	4249047	Statement	)	524:40:13669:13669	4249039	5	True				
ANR	4249048	ExpressionStatement		524:41:13670:13670	4249039	6	True				
ANR	4249049	ExpressionStatement	fflush ( stdout )	525:1:13673:13687	4249039	7	True				
ANR	4249050	CallExpression	fflush ( stdout )		4249039	0					
ANR	4249051	Callee	fflush		4249039	0					
ANR	4249052	Identifier	fflush		4249039	0					
ANR	4249053	ArgumentList	stdout		4249039	1					
ANR	4249054	Argument	stdout		4249039	0					
ANR	4249055	Identifier	stdout		4249039	0					
ANR	4249056	IdentifierDeclStatement	const int BUFSIZE = 10 ;	527:1:13691:13713	4249039	8	True				
ANR	4249057	IdentifierDecl	BUFSIZE = 10		4249039	0					
ANR	4249058	IdentifierDeclType	const int		4249039	0					
ANR	4249059	Identifier	BUFSIZE		4249039	1					
ANR	4249060	AssignmentExpression	BUFSIZE = 10		4249039	2		=			
ANR	4249061	Identifier	BUFSIZE		4249039	0					
ANR	4249062	PrimaryExpression	10		4249039	1					
ANR	4249063	IdentifierDeclStatement	char buf [ BUFSIZE ] ;	528:1:13716:13733	4249039	9	True				
ANR	4249064	IdentifierDecl	buf [ BUFSIZE ]		4249039	0					
ANR	4249065	IdentifierDeclType	char [ BUFSIZE ]		4249039	0					
ANR	4249066	Identifier	buf		4249039	1					
ANR	4249067	Identifier	BUFSIZE		4249039	2					
ANR	4249068	IdentifierDeclStatement	"bool result = read_from_keyboard ( buf , BUFSIZE ) ;"	529:1:13736:13782	4249039	10	True				
ANR	4249069	IdentifierDecl	"result = read_from_keyboard ( buf , BUFSIZE )"		4249039	0					
ANR	4249070	IdentifierDeclType	bool		4249039	0					
ANR	4249071	Identifier	result		4249039	1					
ANR	4249072	AssignmentExpression	"result = read_from_keyboard ( buf , BUFSIZE )"		4249039	2		=			
ANR	4249073	Identifier	result		4249039	0					
ANR	4249074	CallExpression	"read_from_keyboard ( buf , BUFSIZE )"		4249039	1					
ANR	4249075	Callee	read_from_keyboard		4249039	0					
ANR	4249076	Identifier	read_from_keyboard		4249039	0					
ANR	4249077	ArgumentList	buf		4249039	1					
ANR	4249078	Argument	buf		4249039	0					
ANR	4249079	Identifier	buf		4249039	0					
ANR	4249080	Argument	BUFSIZE		4249039	1					
ANR	4249081	Identifier	BUFSIZE		4249039	0					
ANR	4249082	ExpressionStatement	"printf ( ""\\n\\n"" )"	530:1:13785:13799	4249039	11	True				
ANR	4249083	CallExpression	"printf ( ""\\n\\n"" )"		4249039	0					
ANR	4249084	Callee	printf		4249039	0					
ANR	4249085	Identifier	printf		4249039	0					
ANR	4249086	ArgumentList	"""\\n\\n"""		4249039	1					
ANR	4249087	Argument	"""\\n\\n"""		4249039	0					
ANR	4249088	PrimaryExpression	"""\\n\\n"""		4249039	0					
ANR	4249089	IfStatement	if ( ! result )		4249039	12					
ANR	4249090	Condition	! result	531:5:13806:13812	4249039	0	True				
ANR	4249091	UnaryOperationExpression	! result		4249039	0					
ANR	4249092	UnaryOperator	!		4249039	0					
ANR	4249093	Identifier	result		4249039	1					
ANR	4249094	CompoundStatement		11:14:281:281	4249039	1					
ANR	4249095	ReturnStatement	return false ;	532:2:13819:13831	4249039	0	True				
ANR	4249096	Identifier	false		4249039	0					
ANR	4249097	IfStatement	if ( ( buf [ 0 ] == 'y' ) || ( buf [ 0 ] == 'Y' ) )		4249039	13					
ANR	4249098	Condition	( buf [ 0 ] == 'y' ) || ( buf [ 0 ] == 'Y' )	534:5:13841:13874	4249039	0	True				
ANR	4249099	OrExpression	( buf [ 0 ] == 'y' ) || ( buf [ 0 ] == 'Y' )		4249039	0		||			
ANR	4249100	EqualityExpression	buf [ 0 ] == 'y'		4249039	0		==			
ANR	4249101	ArrayIndexing	buf [ 0 ]		4249039	0					
ANR	4249102	Identifier	buf		4249039	0					
ANR	4249103	PrimaryExpression	0		4249039	1					
ANR	4249104	PrimaryExpression	'y'		4249039	1					
ANR	4249105	EqualityExpression	buf [ 0 ] == 'Y'		4249039	1		==			
ANR	4249106	ArrayIndexing	buf [ 0 ]		4249039	0					
ANR	4249107	Identifier	buf		4249039	0					
ANR	4249108	PrimaryExpression	0		4249039	1					
ANR	4249109	PrimaryExpression	'Y'		4249039	1					
ANR	4249110	CompoundStatement		14:41:343:343	4249039	1					
ANR	4249111	ReturnStatement	return true ;	535:2:13881:13892	4249039	0	True				
ANR	4249112	Identifier	true		4249039	0					
ANR	4249113	ReturnStatement	return false ;	537:1:13898:13910	4249039	14	True				
ANR	4249114	Identifier	false		4249039	0					
ANR	4249115	ReturnType	bool		4249039	1					
ANR	4249116	Identifier	goAheadAnyways		4249039	2					
ANR	4249117	ParameterList			4249039	3					
ANR	4249118	CFGEntryNode	ENTRY		4249039		True				
ANR	4249119	CFGExitNode	EXIT		4249039		True				
ANR	4249120	Symbol	result		4249039						
ANR	4249121	Symbol	buf		4249039						
ANR	4249122	Symbol	* buf		4249039						
ANR	4249123	Symbol	stdout		4249039						
ANR	4249124	Symbol	false		4249039						
ANR	4249125	Symbol	true		4249039						
ANR	4249126	Symbol	BUFSIZE		4249039						
ANR	4249127	Symbol	read_from_keyboard		4249039						
