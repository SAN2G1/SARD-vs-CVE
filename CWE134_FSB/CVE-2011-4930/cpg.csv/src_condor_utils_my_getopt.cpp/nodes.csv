command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4818365	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_my_getopt.cpp								
ANR	4818366	DeclStmt									
ANR	4818367	Decl							int	int	my_optind
ANR	4818368	Decl							int	int	my_opterr
ANR	4818369	Decl							int	int	my_optopt
ANR	4818370	DeclStmt									
ANR	4818371	Decl							char	char *	my_optarg
ANR	4818372	Function	my_getopt	46:0:1752:4306							
ANR	4818373	FunctionDef	"my_getopt (int argc , char * argv [ ] , const char * opts)"		4818372	0					
ANR	4818374	CompoundStatement		47:0:1809:4306	4818372	0					
ANR	4818375	Statement	static	48:2:1813:1818	4818372	0	True				
ANR	4818376	IdentifierDeclStatement	int charind = 0 ;	48:9:1820:1833	4818372	1	True				
ANR	4818377	IdentifierDecl	charind = 0		4818372	0					
ANR	4818378	IdentifierDeclType	int		4818372	0					
ANR	4818379	Identifier	charind		4818372	1					
ANR	4818380	AssignmentExpression	charind = 0		4818372	2		=			
ANR	4818381	Identifier	charind		4818372	0					
ANR	4818382	PrimaryExpression	0		4818372	1					
ANR	4818383	IdentifierDeclStatement	const char * s ;	49:2:1837:1850	4818372	2	True				
ANR	4818384	IdentifierDecl	* s		4818372	0					
ANR	4818385	IdentifierDeclType	const char *		4818372	0					
ANR	4818386	Identifier	s		4818372	1					
ANR	4818387	IdentifierDeclStatement	"char mode , colon_mode ;"	50:2:1854:1875	4818372	3	True				
ANR	4818388	IdentifierDecl	mode		4818372	0					
ANR	4818389	IdentifierDeclType	char		4818372	0					
ANR	4818390	Identifier	mode		4818372	1					
ANR	4818391	IdentifierDecl	colon_mode		4818372	1					
ANR	4818392	IdentifierDeclType	char		4818372	0					
ANR	4818393	Identifier	colon_mode		4818372	1					
ANR	4818394	IdentifierDeclStatement	"int off = 0 , opt = - 1 ;"	51:2:1879:1900	4818372	4	True				
ANR	4818395	IdentifierDecl	off = 0		4818372	0					
ANR	4818396	IdentifierDeclType	int		4818372	0					
ANR	4818397	Identifier	off		4818372	1					
ANR	4818398	AssignmentExpression	off = 0		4818372	2		=			
ANR	4818399	Identifier	off		4818372	0					
ANR	4818400	PrimaryExpression	0		4818372	1					
ANR	4818401	IdentifierDecl	opt = - 1		4818372	1					
ANR	4818402	IdentifierDeclType	int		4818372	0					
ANR	4818403	Identifier	opt		4818372	1					
ANR	4818404	AssignmentExpression	opt = - 1		4818372	2		=			
ANR	4818405	Identifier	opt		4818372	0					
ANR	4818406	UnaryOperationExpression	- 1		4818372	1					
ANR	4818407	UnaryOperator	-		4818372	0					
ANR	4818408	PrimaryExpression	1		4818372	1					
ANR	4818409	IfStatement	"if ( getenv ( ""POSIXLY_CORRECT"" ) )"		4818372	5					
ANR	4818410	Condition	"getenv ( ""POSIXLY_CORRECT"" )"	53:5:1908:1932	4818372	0	True				
ANR	4818411	CallExpression	"getenv ( ""POSIXLY_CORRECT"" )"		4818372	0					
ANR	4818412	Callee	getenv		4818372	0					
ANR	4818413	Identifier	getenv		4818372	0					
ANR	4818414	ArgumentList	"""POSIXLY_CORRECT"""		4818372	1					
ANR	4818415	Argument	"""POSIXLY_CORRECT"""		4818372	0					
ANR	4818416	PrimaryExpression	"""POSIXLY_CORRECT"""		4818372	0					
ANR	4818417	ExpressionStatement	colon_mode = mode = '+'	53:32:1935:1958	4818372	1	True				
ANR	4818418	AssignmentExpression	colon_mode = mode = '+'		4818372	0		=			
ANR	4818419	Identifier	colon_mode		4818372	0					
ANR	4818420	AssignmentExpression	mode = '+'		4818372	1		=			
ANR	4818421	Identifier	mode		4818372	0					
ANR	4818422	PrimaryExpression	'+'		4818372	1					
ANR	4818423	ElseStatement	else		4818372	0					
ANR	4818424	CompoundStatement		8:7:157:157	4818372	0					
ANR	4818425	IfStatement	if ( ( colon_mode = * opts ) == ':' )		4818372	0					
ANR	4818426	Condition	( colon_mode = * opts ) == ':'	55:7:1976:2002	4818372	0	True				
ANR	4818427	EqualityExpression	( colon_mode = * opts ) == ':'		4818372	0		==			
ANR	4818428	AssignmentExpression	colon_mode = * opts		4818372	0		=			
ANR	4818429	Identifier	colon_mode		4818372	0					
ANR	4818430	UnaryOperationExpression	* opts		4818372	1					
ANR	4818431	UnaryOperator	*		4818372	0					
ANR	4818432	Identifier	opts		4818372	1					
ANR	4818433	PrimaryExpression	':'		4818372	1					
ANR	4818434	ExpressionStatement	off ++	55:36:2005:2011	4818372	1	True				
ANR	4818435	PostIncDecOperationExpression	off ++		4818372	0					
ANR	4818436	Identifier	off		4818372	0					
ANR	4818437	IncDec	++		4818372	1					
ANR	4818438	IfStatement	if ( ( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' ) )		4818372	1					
ANR	4818439	Condition	( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' )	56:7:2020:2063	4818372	0	True				
ANR	4818440	OrExpression	( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' )		4818372	0		||			
ANR	4818441	EqualityExpression	( mode = opts [ off ] ) == '+'		4818372	0		==			
ANR	4818442	AssignmentExpression	mode = opts [ off ]		4818372	0		=			
ANR	4818443	Identifier	mode		4818372	0					
ANR	4818444	ArrayIndexing	opts [ off ]		4818372	1					
ANR	4818445	Identifier	opts		4818372	0					
ANR	4818446	Identifier	off		4818372	1					
ANR	4818447	PrimaryExpression	'+'		4818372	1					
ANR	4818448	EqualityExpression	mode == '-'		4818372	1		==			
ANR	4818449	Identifier	mode		4818372	0					
ANR	4818450	PrimaryExpression	'-'		4818372	1					
ANR	4818451	CompoundStatement		10:53:256:256	4818372	1					
ANR	4818452	ExpressionStatement	off ++	57:6:2074:2079	4818372	0	True				
ANR	4818453	PostIncDecOperationExpression	off ++		4818372	0					
ANR	4818454	Identifier	off		4818372	0					
ANR	4818455	IncDec	++		4818372	1					
ANR	4818456	IfStatement	if ( ( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' ) )		4818372	1					
ANR	4818457	Condition	( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' )	58:9:2090:2145	4818372	0	True				
ANR	4818458	AndExpression	( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' )		4818372	0		&&			
ANR	4818459	EqualityExpression	colon_mode != ':'		4818372	0		!=			
ANR	4818460	Identifier	colon_mode		4818372	0					
ANR	4818461	PrimaryExpression	':'		4818372	1					
ANR	4818462	EqualityExpression	( colon_mode = opts [ off ] ) == ':'		4818372	1		==			
ANR	4818463	AssignmentExpression	colon_mode = opts [ off ]		4818372	0		=			
ANR	4818464	Identifier	colon_mode		4818372	0					
ANR	4818465	ArrayIndexing	opts [ off ]		4818372	1					
ANR	4818466	Identifier	opts		4818372	0					
ANR	4818467	Identifier	off		4818372	1					
ANR	4818468	PrimaryExpression	':'		4818372	1					
ANR	4818469	ExpressionStatement	off ++	59:8:2156:2162	4818372	1	True				
ANR	4818470	PostIncDecOperationExpression	off ++		4818372	0					
ANR	4818471	Identifier	off		4818372	0					
ANR	4818472	IncDec	++		4818372	1					
ANR	4818473	ExpressionStatement	my_optarg = 0	62:2:2176:2189	4818372	6	True				
ANR	4818474	AssignmentExpression	my_optarg = 0		4818372	0		=			
ANR	4818475	Identifier	my_optarg		4818372	0					
ANR	4818476	PrimaryExpression	0		4818372	1					
ANR	4818477	IfStatement	if ( charind )		4818372	7					
ANR	4818478	Condition	charind	63:5:2196:2202	4818372	0	True				
ANR	4818479	Identifier	charind		4818372	0					
ANR	4818480	CompoundStatement		17:14:395:395	4818372	1					
ANR	4818481	ExpressionStatement	my_optopt = argv [ my_optind ] [ charind ]	64:4:2211:2247	4818372	0	True				
ANR	4818482	AssignmentExpression	my_optopt = argv [ my_optind ] [ charind ]		4818372	0		=			
ANR	4818483	Identifier	my_optopt		4818372	0					
ANR	4818484	ArrayIndexing	argv [ my_optind ] [ charind ]		4818372	1					
ANR	4818485	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818486	Identifier	argv		4818372	0					
ANR	4818487	Identifier	my_optind		4818372	1					
ANR	4818488	Identifier	charind		4818372	1					
ANR	4818489	ForStatement	for ( s = opts + off ; * s ; s ++ )		4818372	1					
ANR	4818490	ForInit	s = opts + off ;	65:8:2257:2267	4818372	0	True				
ANR	4818491	AssignmentExpression	s = opts + off		4818372	0		=			
ANR	4818492	Identifier	s		4818372	0					
ANR	4818493	AdditiveExpression	opts + off		4818372	1		+			
ANR	4818494	Identifier	opts		4818372	0					
ANR	4818495	Identifier	off		4818372	1					
ANR	4818496	Condition	* s	65:20:2269:2270	4818372	1	True				
ANR	4818497	UnaryOperationExpression	* s		4818372	0					
ANR	4818498	UnaryOperator	*		4818372	0					
ANR	4818499	Identifier	s		4818372	1					
ANR	4818500	PostIncDecOperationExpression	s ++	65:24:2273:2275	4818372	2	True				
ANR	4818501	Identifier	s		4818372	0					
ANR	4818502	IncDec	++		4818372	1					
ANR	4818503	IfStatement	if ( my_optopt == * s )		4818372	3					
ANR	4818504	Condition	my_optopt == * s	65:32:2281:2295	4818372	0	True				
ANR	4818505	EqualityExpression	my_optopt == * s		4818372	0		==			
ANR	4818506	Identifier	my_optopt		4818372	0					
ANR	4818507	UnaryOperationExpression	* s		4818372	1					
ANR	4818508	UnaryOperator	*		4818372	0					
ANR	4818509	Identifier	s		4818372	1					
ANR	4818510	CompoundStatement		19:49:488:488	4818372	1					
ANR	4818511	ExpressionStatement	charind ++	66:6:2306:2315	4818372	0	True				
ANR	4818512	PostIncDecOperationExpression	charind ++		4818372	0					
ANR	4818513	Identifier	charind		4818372	0					
ANR	4818514	IncDec	++		4818372	1					
ANR	4818515	IfStatement	if ( ( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) ) )		4818372	1					
ANR	4818516	Condition	( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) )	67:9:2326:2379	4818372	0	True				
ANR	4818517	OrExpression	( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) )		4818372	0		||			
ANR	4818518	EqualityExpression	* ( ++ s ) == ':'		4818372	0		==			
ANR	4818519	UnaryOperationExpression	* ( ++ s )		4818372	0					
ANR	4818520	UnaryOperator	*		4818372	0					
ANR	4818521	UnaryExpression	++ s		4818372	1					
ANR	4818522	IncDec	++		4818372	0					
ANR	4818523	Identifier	s		4818372	1					
ANR	4818524	PrimaryExpression	':'		4818372	1					
ANR	4818525	AndExpression	( my_optopt == 'W' ) && ( * s == ';' )		4818372	1		&&			
ANR	4818526	EqualityExpression	my_optopt == 'W'		4818372	0		==			
ANR	4818527	Identifier	my_optopt		4818372	0					
ANR	4818528	PrimaryExpression	'W'		4818372	1					
ANR	4818529	EqualityExpression	* s == ';'		4818372	1		==			
ANR	4818530	UnaryOperationExpression	* s		4818372	0					
ANR	4818531	UnaryOperator	*		4818372	0					
ANR	4818532	Identifier	s		4818372	1					
ANR	4818533	PrimaryExpression	';'		4818372	1					
ANR	4818534	CompoundStatement		21:65:572:572	4818372	1					
ANR	4818535	IfStatement	if ( argv [ my_optind ] [ charind ] )		4818372	0					
ANR	4818536	Condition	argv [ my_optind ] [ charind ]	68:11:2395:2418	4818372	0	True				
ANR	4818537	ArrayIndexing	argv [ my_optind ] [ charind ]		4818372	0					
ANR	4818538	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818539	Identifier	argv		4818372	0					
ANR	4818540	Identifier	my_optind		4818372	1					
ANR	4818541	Identifier	charind		4818372	1					
ANR	4818542	CompoundStatement		22:37:611:611	4818372	1					
ANR	4818543	ExpressionStatement	my_optarg = & ( argv [ my_optind ++ ] [ charind ] )	69:10:2433:2474	4818372	0	True				
ANR	4818544	AssignmentExpression	my_optarg = & ( argv [ my_optind ++ ] [ charind ] )		4818372	0		=			
ANR	4818545	Identifier	my_optarg		4818372	0					
ANR	4818546	UnaryOperationExpression	& ( argv [ my_optind ++ ] [ charind ] )		4818372	1					
ANR	4818547	UnaryOperator	&		4818372	0					
ANR	4818548	ArrayIndexing	argv [ my_optind ++ ] [ charind ]		4818372	1					
ANR	4818549	ArrayIndexing	argv [ my_optind ++ ]		4818372	0					
ANR	4818550	Identifier	argv		4818372	0					
ANR	4818551	PostIncDecOperationExpression	my_optind ++		4818372	1					
ANR	4818552	Identifier	my_optind		4818372	0					
ANR	4818553	IncDec	++		4818372	1					
ANR	4818554	Identifier	charind		4818372	1					
ANR	4818555	ExpressionStatement	charind = 0	70:10:2486:2497	4818372	1	True				
ANR	4818556	AssignmentExpression	charind = 0		4818372	0		=			
ANR	4818557	Identifier	charind		4818372	0					
ANR	4818558	PrimaryExpression	0		4818372	1					
ANR	4818559	ElseStatement	else		4818372	0					
ANR	4818560	IfStatement	if ( * ( ++ s ) != ':' )		4818372	0					
ANR	4818561	Condition	* ( ++ s ) != ':'	71:18:2517:2529	4818372	0	True				
ANR	4818562	EqualityExpression	* ( ++ s ) != ':'		4818372	0		!=			
ANR	4818563	UnaryOperationExpression	* ( ++ s )		4818372	0					
ANR	4818564	UnaryOperator	*		4818372	0					
ANR	4818565	UnaryExpression	++ s		4818372	1					
ANR	4818566	IncDec	++		4818372	0					
ANR	4818567	Identifier	s		4818372	1					
ANR	4818568	PrimaryExpression	':'		4818372	1					
ANR	4818569	CompoundStatement		25:33:722:722	4818372	1					
ANR	4818570	ExpressionStatement	charind = 0	72:10:2544:2555	4818372	0	True				
ANR	4818571	AssignmentExpression	charind = 0		4818372	0		=			
ANR	4818572	Identifier	charind		4818372	0					
ANR	4818573	PrimaryExpression	0		4818372	1					
ANR	4818574	IfStatement	if ( ++ my_optind >= argc )		4818372	1					
ANR	4818575	Condition	++ my_optind >= argc	73:13:2582:2600	4818372	0	True				
ANR	4818576	RelationalExpression	++ my_optind >= argc		4818372	0		>=			
ANR	4818577	UnaryExpression	++ my_optind		4818372	0					
ANR	4818578	IncDec	++		4818372	0					
ANR	4818579	Identifier	my_optind		4818372	1					
ANR	4818580	Identifier	argc		4818372	1					
ANR	4818581	CompoundStatement		27:34:793:793	4818372	1					
ANR	4818582	IfStatement	if ( my_opterr )		4818372	0					
ANR	4818583	Condition	my_opterr	74:6:2611:2619	4818372	0	True				
ANR	4818584	Identifier	my_opterr		4818372	0					
ANR	4818585	ExpressionStatement	"fprintf ( stderr , ""%s: option requires an argument -- %c\\n"" , argv [ 0 ] , my_optopt )"	74:17:2622:2764	4818372	1	True				
ANR	4818586	CallExpression	"fprintf ( stderr , ""%s: option requires an argument -- %c\\n"" , argv [ 0 ] , my_optopt )"		4818372	0					
ANR	4818587	Callee	fprintf		4818372	0					
ANR	4818588	Identifier	fprintf		4818372	0					
ANR	4818589	ArgumentList	stderr		4818372	1					
ANR	4818590	Argument	stderr		4818372	0					
ANR	4818591	Identifier	stderr		4818372	0					
ANR	4818592	Argument	"""%s: option requires an argument -- %c\\n"""		4818372	1					
ANR	4818593	PrimaryExpression	"""%s: option requires an argument -- %c\\n"""		4818372	0					
ANR	4818594	Argument	argv [ 0 ]		4818372	2					
ANR	4818595	ArrayIndexing	argv [ 0 ]		4818372	0					
ANR	4818596	Identifier	argv		4818372	0					
ANR	4818597	PrimaryExpression	0		4818372	1					
ANR	4818598	Argument	my_optopt		4818372	3					
ANR	4818599	Identifier	my_optopt		4818372	0					
ANR	4818600	ExpressionStatement	opt = ( colon_mode == ':' ) ? ':' : '?'	77:12:2778:2815	4818372	1	True				
ANR	4818601	AssignmentExpression	opt = ( colon_mode == ':' ) ? ':' : '?'		4818372	0		=			
ANR	4818602	Identifier	opt		4818372	0					
ANR	4818603	ConditionalExpression	( colon_mode == ':' ) ? ':' : '?'		4818372	1					
ANR	4818604	Condition	colon_mode == ':'		4818372	0					
ANR	4818605	EqualityExpression	colon_mode == ':'		4818372	0		==			
ANR	4818606	Identifier	colon_mode		4818372	0					
ANR	4818607	PrimaryExpression	':'		4818372	1					
ANR	4818608	PrimaryExpression	':'		4818372	1					
ANR	4818609	PrimaryExpression	'?'		4818372	2					
ANR	4818610	GotoStatement	goto my_getopt_ok ;	78:12:2829:2846	4818372	2	True				
ANR	4818611	Identifier	my_getopt_ok		4818372	0					
ANR	4818612	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	80:10:2870:2899	4818372	2	True				
ANR	4818613	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		4818372	0		=			
ANR	4818614	Identifier	my_optarg		4818372	0					
ANR	4818615	ArrayIndexing	argv [ my_optind ++ ]		4818372	1					
ANR	4818616	Identifier	argv		4818372	0					
ANR	4818617	PostIncDecOperationExpression	my_optind ++		4818372	1					
ANR	4818618	Identifier	my_optind		4818372	0					
ANR	4818619	IncDec	++		4818372	1					
ANR	4818620	ExpressionStatement	opt = my_optopt	83:6:2925:2940	4818372	2	True				
ANR	4818621	AssignmentExpression	opt = my_optopt		4818372	0		=			
ANR	4818622	Identifier	opt		4818372	0					
ANR	4818623	Identifier	my_optopt		4818372	1					
ANR	4818624	GotoStatement	goto my_getopt_ok ;	84:6:2948:2965	4818372	3	True				
ANR	4818625	Identifier	my_getopt_ok		4818372	0					
ANR	4818626	IfStatement	if ( my_opterr )		4818372	2					
ANR	4818627	Condition	my_opterr	86:7:2980:2988	4818372	0	True				
ANR	4818628	Identifier	my_opterr		4818372	0					
ANR	4818629	ExpressionStatement	"fprintf ( stderr , ""%s: illegal option -- %c\\n"" , argv [ 0 ] , my_optopt )"	86:18:2991:3104	4818372	1	True				
ANR	4818630	CallExpression	"fprintf ( stderr , ""%s: illegal option -- %c\\n"" , argv [ 0 ] , my_optopt )"		4818372	0					
ANR	4818631	Callee	fprintf		4818372	0					
ANR	4818632	Identifier	fprintf		4818372	0					
ANR	4818633	ArgumentList	stderr		4818372	1					
ANR	4818634	Argument	stderr		4818372	0					
ANR	4818635	Identifier	stderr		4818372	0					
ANR	4818636	Argument	"""%s: illegal option -- %c\\n"""		4818372	1					
ANR	4818637	PrimaryExpression	"""%s: illegal option -- %c\\n"""		4818372	0					
ANR	4818638	Argument	argv [ 0 ]		4818372	2					
ANR	4818639	ArrayIndexing	argv [ 0 ]		4818372	0					
ANR	4818640	Identifier	argv		4818372	0					
ANR	4818641	PrimaryExpression	0		4818372	1					
ANR	4818642	Argument	my_optopt		4818372	3					
ANR	4818643	Identifier	my_optopt		4818372	0					
ANR	4818644	ExpressionStatement	opt = '?'	89:4:3110:3119	4818372	3	True				
ANR	4818645	AssignmentExpression	opt = '?'		4818372	0		=			
ANR	4818646	Identifier	opt		4818372	0					
ANR	4818647	PrimaryExpression	'?'		4818372	1					
ANR	4818648	IfStatement	if ( argv [ my_optind ] [ ++ charind ] == '\\0' )		4818372	4					
ANR	4818649	Condition	argv [ my_optind ] [ ++ charind ] == '\\0'	90:7:3128:3161	4818372	0	True				
ANR	4818650	EqualityExpression	argv [ my_optind ] [ ++ charind ] == '\\0'		4818372	0		==			
ANR	4818651	ArrayIndexing	argv [ my_optind ] [ ++ charind ]		4818372	0					
ANR	4818652	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818653	Identifier	argv		4818372	0					
ANR	4818654	Identifier	my_optind		4818372	1					
ANR	4818655	UnaryExpression	++ charind		4818372	1					
ANR	4818656	IncDec	++		4818372	0					
ANR	4818657	Identifier	charind		4818372	1					
ANR	4818658	PrimaryExpression	'\\0'		4818372	1					
ANR	4818659	CompoundStatement		44:43:1354:1354	4818372	1					
ANR	4818660	ExpressionStatement	my_optind ++	91:6:3172:3183	4818372	0	True				
ANR	4818661	PostIncDecOperationExpression	my_optind ++		4818372	0					
ANR	4818662	Identifier	my_optind		4818372	0					
ANR	4818663	IncDec	++		4818372	1					
ANR	4818664	ExpressionStatement	charind = 0	92:6:3191:3202	4818372	1	True				
ANR	4818665	AssignmentExpression	charind = 0		4818372	0		=			
ANR	4818666	Identifier	charind		4818372	0					
ANR	4818667	PrimaryExpression	0		4818372	1					
ANR	4818668	Label	my_getopt_ok :	94:2:3212:3224	4818372	5	True				
ANR	4818669	Identifier	my_getopt_ok		4818372	0					
ANR	4818670	IfStatement	if ( charind && ! argv [ my_optind ] [ charind ] )		4818372	6					
ANR	4818671	Condition	charind && ! argv [ my_optind ] [ charind ]	95:7:3233:3269	4818372	0	True				
ANR	4818672	AndExpression	charind && ! argv [ my_optind ] [ charind ]		4818372	0		&&			
ANR	4818673	Identifier	charind		4818372	0					
ANR	4818674	UnaryOperationExpression	! argv [ my_optind ] [ charind ]		4818372	1					
ANR	4818675	UnaryOperator	!		4818372	0					
ANR	4818676	ArrayIndexing	argv [ my_optind ] [ charind ]		4818372	1					
ANR	4818677	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818678	Identifier	argv		4818372	0					
ANR	4818679	Identifier	my_optind		4818372	1					
ANR	4818680	Identifier	charind		4818372	1					
ANR	4818681	CompoundStatement		49:46:1462:1462	4818372	1					
ANR	4818682	ExpressionStatement	my_optind ++	96:6:3280:3291	4818372	0	True				
ANR	4818683	PostIncDecOperationExpression	my_optind ++		4818372	0					
ANR	4818684	Identifier	my_optind		4818372	0					
ANR	4818685	IncDec	++		4818372	1					
ANR	4818686	ExpressionStatement	charind = 0	97:6:3299:3310	4818372	1	True				
ANR	4818687	AssignmentExpression	charind = 0		4818372	0		=			
ANR	4818688	Identifier	charind		4818372	0					
ANR	4818689	PrimaryExpression	0		4818372	1					
ANR	4818690	ElseStatement	else		4818372	0					
ANR	4818691	IfStatement	if ( ( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) ) )		4818372	0					
ANR	4818692	Condition	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )	99:12:3330:3485	4818372	0	True				
ANR	4818693	OrExpression	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )		4818372	0		||			
ANR	4818694	RelationalExpression	my_optind >= argc		4818372	0		>=			
ANR	4818695	Identifier	my_optind		4818372	0					
ANR	4818696	Identifier	argc		4818372	1					
ANR	4818697	AndExpression	( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		4818372	1		&&			
ANR	4818698	EqualityExpression	argv [ my_optind ] [ 0 ] == '-'		4818372	0		==			
ANR	4818699	ArrayIndexing	argv [ my_optind ] [ 0 ]		4818372	0					
ANR	4818700	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818701	Identifier	argv		4818372	0					
ANR	4818702	Identifier	my_optind		4818372	1					
ANR	4818703	PrimaryExpression	0		4818372	1					
ANR	4818704	PrimaryExpression	'-'		4818372	1					
ANR	4818705	AndExpression	( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		4818372	1		&&			
ANR	4818706	EqualityExpression	argv [ my_optind ] [ 1 ] == '-'		4818372	0		==			
ANR	4818707	ArrayIndexing	argv [ my_optind ] [ 1 ]		4818372	0					
ANR	4818708	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818709	Identifier	argv		4818372	0					
ANR	4818710	Identifier	my_optind		4818372	1					
ANR	4818711	PrimaryExpression	1		4818372	1					
ANR	4818712	PrimaryExpression	'-'		4818372	1					
ANR	4818713	EqualityExpression	argv [ my_optind ] [ 2 ] == '\\0'		4818372	1		==			
ANR	4818714	ArrayIndexing	argv [ my_optind ] [ 2 ]		4818372	0					
ANR	4818715	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818716	Identifier	argv		4818372	0					
ANR	4818717	Identifier	my_optind		4818372	1					
ANR	4818718	PrimaryExpression	2		4818372	1					
ANR	4818719	PrimaryExpression	'\\0'		4818372	1					
ANR	4818720	CompoundStatement		56:45:1678:1678	4818372	1					
ANR	4818721	ExpressionStatement	my_optind ++	103:4:3494:3505	4818372	0	True				
ANR	4818722	PostIncDecOperationExpression	my_optind ++		4818372	0					
ANR	4818723	Identifier	my_optind		4818372	0					
ANR	4818724	IncDec	++		4818372	1					
ANR	4818725	ExpressionStatement	opt = - 1	104:4:3511:3519	4818372	1	True				
ANR	4818726	AssignmentExpression	opt = - 1		4818372	0		=			
ANR	4818727	Identifier	opt		4818372	0					
ANR	4818728	UnaryOperationExpression	- 1		4818372	1					
ANR	4818729	UnaryOperator	-		4818372	0					
ANR	4818730	PrimaryExpression	1		4818372	1					
ANR	4818731	ElseStatement	else		4818372	0					
ANR	4818732	IfStatement	if ( ( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' ) )		4818372	0					
ANR	4818733	Condition	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )	105:12:3533:3604	4818372	0	True				
ANR	4818734	OrExpression	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )		4818372	0		||			
ANR	4818735	EqualityExpression	argv [ my_optind ] [ 0 ] != '-'		4818372	0		!=			
ANR	4818736	ArrayIndexing	argv [ my_optind ] [ 0 ]		4818372	0					
ANR	4818737	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818738	Identifier	argv		4818372	0					
ANR	4818739	Identifier	my_optind		4818372	1					
ANR	4818740	PrimaryExpression	0		4818372	1					
ANR	4818741	PrimaryExpression	'-'		4818372	1					
ANR	4818742	EqualityExpression	argv [ my_optind ] [ 1 ] == '\\0'		4818372	1		==			
ANR	4818743	ArrayIndexing	argv [ my_optind ] [ 1 ]		4818372	0					
ANR	4818744	ArrayIndexing	argv [ my_optind ]		4818372	0					
ANR	4818745	Identifier	argv		4818372	0					
ANR	4818746	Identifier	my_optind		4818372	1					
ANR	4818747	PrimaryExpression	1		4818372	1					
ANR	4818748	PrimaryExpression	'\\0'		4818372	1					
ANR	4818749	CompoundStatement		62:4:1818:1829	4818372	1					
ANR	4818750	IdentifierDeclStatement	char * tmp ;	107:4:3613:3622	4818372	0	True				
ANR	4818751	IdentifierDecl	* tmp		4818372	0					
ANR	4818752	IdentifierDeclType	char *		4818372	0					
ANR	4818753	Identifier	tmp		4818372	1					
ANR	4818754	IdentifierDeclStatement	"int i , j , k ;"	108:4:3628:3639	4818372	1	True				
ANR	4818755	IdentifierDecl	i		4818372	0					
ANR	4818756	IdentifierDeclType	int		4818372	0					
ANR	4818757	Identifier	i		4818372	1					
ANR	4818758	IdentifierDecl	j		4818372	1					
ANR	4818759	IdentifierDeclType	int		4818372	0					
ANR	4818760	Identifier	j		4818372	1					
ANR	4818761	IdentifierDecl	k		4818372	2					
ANR	4818762	IdentifierDeclType	int		4818372	0					
ANR	4818763	Identifier	k		4818372	1					
ANR	4818764	IfStatement	if ( mode == '+' )		4818372	2					
ANR	4818765	Condition	mode == '+'	110:7:3649:3659	4818372	0	True				
ANR	4818766	EqualityExpression	mode == '+'		4818372	0		==			
ANR	4818767	Identifier	mode		4818372	0					
ANR	4818768	PrimaryExpression	'+'		4818372	1					
ANR	4818769	ExpressionStatement	opt = - 1	110:20:3662:3670	4818372	1	True				
ANR	4818770	AssignmentExpression	opt = - 1		4818372	0		=			
ANR	4818771	Identifier	opt		4818372	0					
ANR	4818772	UnaryOperationExpression	- 1		4818372	1					
ANR	4818773	UnaryOperator	-		4818372	0					
ANR	4818774	PrimaryExpression	1		4818372	1					
ANR	4818775	ElseStatement	else		4818372	0					
ANR	4818776	IfStatement	if ( mode == '-' )		4818372	0					
ANR	4818777	Condition	mode == '-'	111:12:3684:3694	4818372	0	True				
ANR	4818778	EqualityExpression	mode == '-'		4818372	0		==			
ANR	4818779	Identifier	mode		4818372	0					
ANR	4818780	PrimaryExpression	'-'		4818372	1					
ANR	4818781	CompoundStatement		65:25:1887:1887	4818372	1					
ANR	4818782	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	112:6:3705:3734	4818372	0	True				
ANR	4818783	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		4818372	0		=			
ANR	4818784	Identifier	my_optarg		4818372	0					
ANR	4818785	ArrayIndexing	argv [ my_optind ++ ]		4818372	1					
ANR	4818786	Identifier	argv		4818372	0					
ANR	4818787	PostIncDecOperationExpression	my_optind ++		4818372	1					
ANR	4818788	Identifier	my_optind		4818372	0					
ANR	4818789	IncDec	++		4818372	1					
ANR	4818790	ExpressionStatement	charind = 0	113:6:3742:3753	4818372	1	True				
ANR	4818791	AssignmentExpression	charind = 0		4818372	0		=			
ANR	4818792	Identifier	charind		4818372	0					
ANR	4818793	PrimaryExpression	0		4818372	1					
ANR	4818794	ExpressionStatement	opt = 1	114:6:3761:3768	4818372	2	True				
ANR	4818795	AssignmentExpression	opt = 1		4818372	0		=			
ANR	4818796	Identifier	opt		4818372	0					
ANR	4818797	PrimaryExpression	1		4818372	1					
ANR	4818798	ElseStatement	else		4818372	0					
ANR	4818799	CompoundStatement		69:11:1971:1971	4818372	0					
ANR	4818800	ForStatement	for ( i = j = my_optind ; i < argc ; i ++ )		4818372	0					
ANR	4818801	ForInit	i = j = my_optind ;	116:10:3793:3806	4818372	0	True				
ANR	4818802	AssignmentExpression	i = j = my_optind		4818372	0		=			
ANR	4818803	Identifier	i		4818372	0					
ANR	4818804	AssignmentExpression	j = my_optind		4818372	1		=			
ANR	4818805	Identifier	j		4818372	0					
ANR	4818806	Identifier	my_optind		4818372	1					
ANR	4818807	Condition	i < argc	116:25:3808:3813	4818372	1	True				
ANR	4818808	RelationalExpression	i < argc		4818372	0		<			
ANR	4818809	Identifier	i		4818372	0					
ANR	4818810	Identifier	argc		4818372	1					
ANR	4818811	PostIncDecOperationExpression	i ++	116:33:3816:3818	4818372	2	True				
ANR	4818812	Identifier	i		4818372	0					
ANR	4818813	IncDec	++		4818372	1					
ANR	4818814	IfStatement	if ( ( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' ) )		4818372	3					
ANR	4818815	Condition	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )	116:41:3824:3906	4818372	0	True				
ANR	4818816	AndExpression	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )		4818372	0		&&			
ANR	4818817	EqualityExpression	argv [ i ] [ 0 ] == '-'		4818372	0		==			
ANR	4818818	ArrayIndexing	argv [ i ] [ 0 ]		4818372	0					
ANR	4818819	ArrayIndexing	argv [ i ]		4818372	0					
ANR	4818820	Identifier	argv		4818372	0					
ANR	4818821	Identifier	i		4818372	1					
ANR	4818822	PrimaryExpression	0		4818372	1					
ANR	4818823	PrimaryExpression	'-'		4818372	1					
ANR	4818824	EqualityExpression	argv [ i ] [ 1 ] != '\\0'		4818372	1		!=			
ANR	4818825	ArrayIndexing	argv [ i ] [ 1 ]		4818372	0					
ANR	4818826	ArrayIndexing	argv [ i ]		4818372	0					
ANR	4818827	Identifier	argv		4818372	0					
ANR	4818828	Identifier	i		4818372	1					
ANR	4818829	PrimaryExpression	1		4818372	1					
ANR	4818830	PrimaryExpression	'\\0'		4818372	1					
ANR	4818831	CompoundStatement		71:62:2099:2099	4818372	1					
ANR	4818832	ExpressionStatement	my_optind = i	118:8:3919:3930	4818372	0	True				
ANR	4818833	AssignmentExpression	my_optind = i		4818372	0		=			
ANR	4818834	Identifier	my_optind		4818372	0					
ANR	4818835	Identifier	i		4818372	1					
ANR	4818836	ExpressionStatement	"opt = my_getopt ( argc , argv , opts )"	119:8:3940:3971	4818372	1	True				
ANR	4818837	AssignmentExpression	"opt = my_getopt ( argc , argv , opts )"		4818372	0		=			
ANR	4818838	Identifier	opt		4818372	0					
ANR	4818839	CallExpression	"my_getopt ( argc , argv , opts )"		4818372	1					
ANR	4818840	Callee	my_getopt		4818372	0					
ANR	4818841	Identifier	my_getopt		4818372	0					
ANR	4818842	ArgumentList	argc		4818372	1					
ANR	4818843	Argument	argc		4818372	0					
ANR	4818844	Identifier	argc		4818372	0					
ANR	4818845	Argument	argv		4818372	1					
ANR	4818846	Identifier	argv		4818372	0					
ANR	4818847	Argument	opts		4818372	2					
ANR	4818848	Identifier	opts		4818372	0					
ANR	4818849	WhileStatement	while ( i > j )		4818372	2					
ANR	4818850	Condition	i > j	120:14:3987:3991	4818372	0	True				
ANR	4818851	RelationalExpression	i > j		4818372	0		>			
ANR	4818852	Identifier	i		4818372	0					
ANR	4818853	Identifier	j		4818372	1					
ANR	4818854	CompoundStatement		74:21:2184:2184	4818372	1					
ANR	4818855	ExpressionStatement	tmp = argv [ -- i ]	121:10:4006:4019	4818372	0	True				
ANR	4818856	AssignmentExpression	tmp = argv [ -- i ]		4818372	0		=			
ANR	4818857	Identifier	tmp		4818372	0					
ANR	4818858	ArrayIndexing	argv [ -- i ]		4818372	1					
ANR	4818859	Identifier	argv		4818372	0					
ANR	4818860	UnaryExpression	-- i		4818372	1					
ANR	4818861	IncDec	--		4818372	0					
ANR	4818862	Identifier	i		4818372	1					
ANR	4818863	ForStatement	for ( k = i ; k + 1 < my_optind ; k ++ )		4818372	1					
ANR	4818864	ForInit	k = i ;	122:14:4035:4038	4818372	0	True				
ANR	4818865	AssignmentExpression	k = i		4818372	0		=			
ANR	4818866	Identifier	k		4818372	0					
ANR	4818867	Identifier	i		4818372	1					
ANR	4818868	Condition	k + 1 < my_optind	122:19:4040:4052	4818372	1	True				
ANR	4818869	RelationalExpression	k + 1 < my_optind		4818372	0		<			
ANR	4818870	AdditiveExpression	k + 1		4818372	0		+			
ANR	4818871	Identifier	k		4818372	0					
ANR	4818872	PrimaryExpression	1		4818372	1					
ANR	4818873	Identifier	my_optind		4818372	1					
ANR	4818874	PostIncDecOperationExpression	k ++	122:34:4055:4057	4818372	2	True				
ANR	4818875	Identifier	k		4818372	0					
ANR	4818876	IncDec	++		4818372	1					
ANR	4818877	ExpressionStatement	argv [ k ] = argv [ k + 1 ]	122:39:4060:4077	4818372	3	True				
ANR	4818878	AssignmentExpression	argv [ k ] = argv [ k + 1 ]		4818372	0		=			
ANR	4818879	ArrayIndexing	argv [ k ]		4818372	0					
ANR	4818880	Identifier	argv		4818372	0					
ANR	4818881	Identifier	k		4818372	1					
ANR	4818882	ArrayIndexing	argv [ k + 1 ]		4818372	1					
ANR	4818883	Identifier	argv		4818372	0					
ANR	4818884	AdditiveExpression	k + 1		4818372	1		+			
ANR	4818885	Identifier	k		4818372	0					
ANR	4818886	PrimaryExpression	1		4818372	1					
ANR	4818887	ExpressionStatement	argv [ -- my_optind ] = tmp	123:10:4089:4110	4818372	2	True				
ANR	4818888	AssignmentExpression	argv [ -- my_optind ] = tmp		4818372	0		=			
ANR	4818889	ArrayIndexing	argv [ -- my_optind ]		4818372	0					
ANR	4818890	Identifier	argv		4818372	0					
ANR	4818891	UnaryExpression	-- my_optind		4818372	1					
ANR	4818892	IncDec	--		4818372	0					
ANR	4818893	Identifier	my_optind		4818372	1					
ANR	4818894	Identifier	tmp		4818372	1					
ANR	4818895	BreakStatement	break ;	125:8:4130:4135	4818372	3	True				
ANR	4818896	IfStatement	if ( i == argc )		4818372	1					
ANR	4818897	Condition	i == argc	127:9:4154:4162	4818372	0	True				
ANR	4818898	EqualityExpression	i == argc		4818372	0		==			
ANR	4818899	Identifier	i		4818372	0					
ANR	4818900	Identifier	argc		4818372	1					
ANR	4818901	ExpressionStatement	opt = - 1	127:20:4165:4173	4818372	1	True				
ANR	4818902	AssignmentExpression	opt = - 1		4818372	0		=			
ANR	4818903	Identifier	opt		4818372	0					
ANR	4818904	UnaryOperationExpression	- 1		4818372	1					
ANR	4818905	UnaryOperator	-		4818372	0					
ANR	4818906	PrimaryExpression	1		4818372	1					
ANR	4818907	ElseStatement	else		4818372	0					
ANR	4818908	CompoundStatement		83:9:2380:2380	4818372	0					
ANR	4818909	ExpressionStatement	charind ++	130:4:4196:4205	4818372	0	True				
ANR	4818910	PostIncDecOperationExpression	charind ++		4818372	0					
ANR	4818911	Identifier	charind		4818372	0					
ANR	4818912	IncDec	++		4818372	1					
ANR	4818913	ExpressionStatement	"opt = my_getopt ( argc , argv , opts )"	131:4:4211:4244	4818372	1	True				
ANR	4818914	AssignmentExpression	"opt = my_getopt ( argc , argv , opts )"		4818372	0		=			
ANR	4818915	Identifier	opt		4818372	0					
ANR	4818916	CallExpression	"my_getopt ( argc , argv , opts )"		4818372	1					
ANR	4818917	Callee	my_getopt		4818372	0					
ANR	4818918	Identifier	my_getopt		4818372	0					
ANR	4818919	ArgumentList	argc		4818372	1					
ANR	4818920	Argument	argc		4818372	0					
ANR	4818921	Identifier	argc		4818372	0					
ANR	4818922	Argument	argv		4818372	1					
ANR	4818923	Identifier	argv		4818372	0					
ANR	4818924	Argument	opts		4818372	2					
ANR	4818925	Identifier	opts		4818372	0					
ANR	4818926	IfStatement	if ( my_optind > argc )		4818372	8					
ANR	4818927	Condition	my_optind > argc	133:6:4256:4271	4818372	0	True				
ANR	4818928	RelationalExpression	my_optind > argc		4818372	0		>			
ANR	4818929	Identifier	my_optind		4818372	0					
ANR	4818930	Identifier	argc		4818372	1					
ANR	4818931	ExpressionStatement	my_optind = argc	133:24:4274:4290	4818372	1	True				
ANR	4818932	AssignmentExpression	my_optind = argc		4818372	0		=			
ANR	4818933	Identifier	my_optind		4818372	0					
ANR	4818934	Identifier	argc		4818372	1					
ANR	4818935	ReturnStatement	return opt ;	134:2:4294:4304	4818372	9	True				
ANR	4818936	Identifier	opt		4818372	0					
ANR	4818937	ReturnType	int		4818372	1					
ANR	4818938	Identifier	my_getopt		4818372	2					
ANR	4818939	ParameterList	"int argc , char * argv [ ] , const char * opts"		4818372	3					
ANR	4818940	Parameter	int argc	46:14:1766:1773	4818372	0	True				
ANR	4818941	ParameterType	int		4818372	0					
ANR	4818942	Identifier	argc		4818372	1					
ANR	4818943	Parameter	char * argv [ ]	46:24:1776:1788	4818372	1	True				
ANR	4818944	ParameterType	char * [ ]		4818372	0					
ANR	4818945	Identifier	argv		4818372	1					
ANR	4818946	Parameter	const char * opts	46:39:1791:1806	4818372	2	True				
ANR	4818947	ParameterType	const char *		4818372	0					
ANR	4818948	Identifier	opts		4818372	1					
ANR	4818949	CFGEntryNode	ENTRY		4818372		True				
ANR	4818950	CFGExitNode	EXIT		4818372		True				
ANR	4818951	Symbol	charind		4818372						
ANR	4818952	Symbol	* argv		4818372						
ANR	4818953	Symbol	colon_mode		4818372						
ANR	4818954	Symbol	argv		4818372						
ANR	4818955	Symbol	my_opterr		4818372						
ANR	4818956	Symbol	mode		4818372						
ANR	4818957	Symbol	opts		4818372						
ANR	4818958	Symbol	tmp		4818372						
ANR	4818959	Symbol	* off		4818372						
ANR	4818960	Symbol	* * argv		4818372						
ANR	4818961	Symbol	my_getopt		4818372						
ANR	4818962	Symbol	getenv		4818372						
ANR	4818963	Symbol	my_optopt		4818372						
ANR	4818964	Symbol	argc		4818372						
ANR	4818965	Symbol	* * my_optind		4818372						
ANR	4818966	Symbol	* * i		4818372						
ANR	4818967	Symbol	i		4818372						
ANR	4818968	Symbol	j		4818372						
ANR	4818969	Symbol	k		4818372						
ANR	4818970	Symbol	stderr		4818372						
ANR	4818971	Symbol	off		4818372						
ANR	4818972	Symbol	opt		4818372						
ANR	4818973	Symbol	s		4818372						
ANR	4818974	Symbol	* i		4818372						
ANR	4818975	Symbol	* opts		4818372						
ANR	4818976	Symbol	my_optind		4818372						
ANR	4818977	Symbol	* ( ++ s )		4818372						
ANR	4818978	Symbol	* k		4818372						
ANR	4818979	Symbol	* my_optind		4818372						
ANR	4818980	Symbol	my_optarg		4818372						
ANR	4818981	Symbol	* s		4818372						
ANR	4818982	Symbol	* charind		4818372						
ANR	4818983	Function	_my_getopt_internal	142:0:4480:8632							
ANR	4818984	FunctionDef	"_my_getopt_internal (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind , int long_only)"		4818983	0					
ANR	4818985	CompoundStatement		145:0:4654:8632	4818983	0					
ANR	4818986	IdentifierDeclStatement	"char mode , colon_mode = * shortopts ;"	146:2:4658:4692	4818983	0	True				
ANR	4818987	IdentifierDecl	mode		4818983	0					
ANR	4818988	IdentifierDeclType	char		4818983	0					
ANR	4818989	Identifier	mode		4818983	1					
ANR	4818990	IdentifierDecl	colon_mode = * shortopts		4818983	1					
ANR	4818991	IdentifierDeclType	char		4818983	0					
ANR	4818992	Identifier	colon_mode		4818983	1					
ANR	4818993	AssignmentExpression	colon_mode = * shortopts		4818983	2		=			
ANR	4818994	Identifier	colon_mode		4818983	0					
ANR	4818995	UnaryOperationExpression	* shortopts		4818983	1					
ANR	4818996	UnaryOperator	*		4818983	0					
ANR	4818997	Identifier	shortopts		4818983	1					
ANR	4818998	IdentifierDeclStatement	"int shortoff = 0 , opt = - 1 ;"	147:2:4696:4722	4818983	1	True				
ANR	4818999	IdentifierDecl	shortoff = 0		4818983	0					
ANR	4819000	IdentifierDeclType	int		4818983	0					
ANR	4819001	Identifier	shortoff		4818983	1					
ANR	4819002	AssignmentExpression	shortoff = 0		4818983	2		=			
ANR	4819003	Identifier	shortoff		4818983	0					
ANR	4819004	PrimaryExpression	0		4818983	1					
ANR	4819005	IdentifierDecl	opt = - 1		4818983	1					
ANR	4819006	IdentifierDeclType	int		4818983	0					
ANR	4819007	Identifier	opt		4818983	1					
ANR	4819008	AssignmentExpression	opt = - 1		4818983	2		=			
ANR	4819009	Identifier	opt		4818983	0					
ANR	4819010	UnaryOperationExpression	- 1		4818983	1					
ANR	4819011	UnaryOperator	-		4818983	0					
ANR	4819012	PrimaryExpression	1		4818983	1					
ANR	4819013	IfStatement	"if ( getenv ( ""POSIXLY_CORRECT"" ) )"		4818983	2					
ANR	4819014	Condition	"getenv ( ""POSIXLY_CORRECT"" )"	149:5:4730:4754	4818983	0	True				
ANR	4819015	CallExpression	"getenv ( ""POSIXLY_CORRECT"" )"		4818983	0					
ANR	4819016	Callee	getenv		4818983	0					
ANR	4819017	Identifier	getenv		4818983	0					
ANR	4819018	ArgumentList	"""POSIXLY_CORRECT"""		4818983	1					
ANR	4819019	Argument	"""POSIXLY_CORRECT"""		4818983	0					
ANR	4819020	PrimaryExpression	"""POSIXLY_CORRECT"""		4818983	0					
ANR	4819021	ExpressionStatement	colon_mode = mode = '+'	149:32:4757:4780	4818983	1	True				
ANR	4819022	AssignmentExpression	colon_mode = mode = '+'		4818983	0		=			
ANR	4819023	Identifier	colon_mode		4818983	0					
ANR	4819024	AssignmentExpression	mode = '+'		4818983	1		=			
ANR	4819025	Identifier	mode		4818983	0					
ANR	4819026	PrimaryExpression	'+'		4818983	1					
ANR	4819027	ElseStatement	else		4818983	0					
ANR	4819028	CompoundStatement		6:7:134:134	4818983	0					
ANR	4819029	IfStatement	if ( ( colon_mode = * shortopts ) == ':' )		4818983	0					
ANR	4819030	Condition	( colon_mode = * shortopts ) == ':'	151:7:4798:4829	4818983	0	True				
ANR	4819031	EqualityExpression	( colon_mode = * shortopts ) == ':'		4818983	0		==			
ANR	4819032	AssignmentExpression	colon_mode = * shortopts		4818983	0		=			
ANR	4819033	Identifier	colon_mode		4818983	0					
ANR	4819034	UnaryOperationExpression	* shortopts		4818983	1					
ANR	4819035	UnaryOperator	*		4818983	0					
ANR	4819036	Identifier	shortopts		4818983	1					
ANR	4819037	PrimaryExpression	':'		4818983	1					
ANR	4819038	ExpressionStatement	shortoff ++	151:41:4832:4843	4818983	1	True				
ANR	4819039	PostIncDecOperationExpression	shortoff ++		4818983	0					
ANR	4819040	Identifier	shortoff		4818983	0					
ANR	4819041	IncDec	++		4818983	1					
ANR	4819042	IfStatement	if ( ( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' ) )		4818983	1					
ANR	4819043	Condition	( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' )	152:7:4852:4905	4818983	0	True				
ANR	4819044	OrExpression	( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' )		4818983	0		||			
ANR	4819045	EqualityExpression	( mode = shortopts [ shortoff ] ) == '+'		4818983	0		==			
ANR	4819046	AssignmentExpression	mode = shortopts [ shortoff ]		4818983	0		=			
ANR	4819047	Identifier	mode		4818983	0					
ANR	4819048	ArrayIndexing	shortopts [ shortoff ]		4818983	1					
ANR	4819049	Identifier	shortopts		4818983	0					
ANR	4819050	Identifier	shortoff		4818983	1					
ANR	4819051	PrimaryExpression	'+'		4818983	1					
ANR	4819052	EqualityExpression	mode == '-'		4818983	1		==			
ANR	4819053	Identifier	mode		4818983	0					
ANR	4819054	PrimaryExpression	'-'		4818983	1					
ANR	4819055	CompoundStatement		8:63:253:253	4818983	1					
ANR	4819056	ExpressionStatement	shortoff ++	153:6:4916:4926	4818983	0	True				
ANR	4819057	PostIncDecOperationExpression	shortoff ++		4818983	0					
ANR	4819058	Identifier	shortoff		4818983	0					
ANR	4819059	IncDec	++		4818983	1					
ANR	4819060	IfStatement	if ( ( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' ) )		4818983	1					
ANR	4819061	Condition	( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' )	154:9:4937:5002	4818983	0	True				
ANR	4819062	AndExpression	( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' )		4818983	0		&&			
ANR	4819063	EqualityExpression	colon_mode != ':'		4818983	0		!=			
ANR	4819064	Identifier	colon_mode		4818983	0					
ANR	4819065	PrimaryExpression	':'		4818983	1					
ANR	4819066	EqualityExpression	( colon_mode = shortopts [ shortoff ] ) == ':'		4818983	1		==			
ANR	4819067	AssignmentExpression	colon_mode = shortopts [ shortoff ]		4818983	0		=			
ANR	4819068	Identifier	colon_mode		4818983	0					
ANR	4819069	ArrayIndexing	shortopts [ shortoff ]		4818983	1					
ANR	4819070	Identifier	shortopts		4818983	0					
ANR	4819071	Identifier	shortoff		4818983	1					
ANR	4819072	PrimaryExpression	':'		4818983	1					
ANR	4819073	ExpressionStatement	shortoff ++	155:8:5013:5024	4818983	1	True				
ANR	4819074	PostIncDecOperationExpression	shortoff ++		4818983	0					
ANR	4819075	Identifier	shortoff		4818983	0					
ANR	4819076	IncDec	++		4818983	1					
ANR	4819077	ExpressionStatement	my_optarg = 0	158:2:5038:5051	4818983	3	True				
ANR	4819078	AssignmentExpression	my_optarg = 0		4818983	0		=			
ANR	4819079	Identifier	my_optarg		4818983	0					
ANR	4819080	PrimaryExpression	0		4818983	1					
ANR	4819081	IfStatement	if ( ( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) ) )		4818983	4					
ANR	4819082	Condition	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )	159:5:5058:5192	4818983	0	True				
ANR	4819083	OrExpression	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )		4818983	0		||			
ANR	4819084	RelationalExpression	my_optind >= argc		4818983	0		>=			
ANR	4819085	Identifier	my_optind		4818983	0					
ANR	4819086	Identifier	argc		4818983	1					
ANR	4819087	AndExpression	( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		4818983	1		&&			
ANR	4819088	EqualityExpression	argv [ my_optind ] [ 0 ] == '-'		4818983	0		==			
ANR	4819089	ArrayIndexing	argv [ my_optind ] [ 0 ]		4818983	0					
ANR	4819090	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819091	Identifier	argv		4818983	0					
ANR	4819092	Identifier	my_optind		4818983	1					
ANR	4819093	PrimaryExpression	0		4818983	1					
ANR	4819094	PrimaryExpression	'-'		4818983	1					
ANR	4819095	AndExpression	( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		4818983	1		&&			
ANR	4819096	EqualityExpression	argv [ my_optind ] [ 1 ] == '-'		4818983	0		==			
ANR	4819097	ArrayIndexing	argv [ my_optind ] [ 1 ]		4818983	0					
ANR	4819098	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819099	Identifier	argv		4818983	0					
ANR	4819100	Identifier	my_optind		4818983	1					
ANR	4819101	PrimaryExpression	1		4818983	1					
ANR	4819102	PrimaryExpression	'-'		4818983	1					
ANR	4819103	EqualityExpression	argv [ my_optind ] [ 2 ] == '\\0'		4818983	1		==			
ANR	4819104	ArrayIndexing	argv [ my_optind ] [ 2 ]		4818983	0					
ANR	4819105	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819106	Identifier	argv		4818983	0					
ANR	4819107	Identifier	my_optind		4818983	1					
ANR	4819108	PrimaryExpression	2		4818983	1					
ANR	4819109	PrimaryExpression	'\\0'		4818983	1					
ANR	4819110	CompoundStatement		18:38:540:540	4818983	1					
ANR	4819111	ExpressionStatement	my_optind ++	163:4:5201:5212	4818983	0	True				
ANR	4819112	PostIncDecOperationExpression	my_optind ++		4818983	0					
ANR	4819113	Identifier	my_optind		4818983	0					
ANR	4819114	IncDec	++		4818983	1					
ANR	4819115	ExpressionStatement	opt = - 1	164:4:5218:5226	4818983	1	True				
ANR	4819116	AssignmentExpression	opt = - 1		4818983	0		=			
ANR	4819117	Identifier	opt		4818983	0					
ANR	4819118	UnaryOperationExpression	- 1		4818983	1					
ANR	4819119	UnaryOperator	-		4818983	0					
ANR	4819120	PrimaryExpression	1		4818983	1					
ANR	4819121	ElseStatement	else		4818983	0					
ANR	4819122	IfStatement	if ( ( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' ) )		4818983	0					
ANR	4819123	Condition	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )	165:12:5240:5310	4818983	0	True				
ANR	4819124	OrExpression	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )		4818983	0		||			
ANR	4819125	EqualityExpression	argv [ my_optind ] [ 0 ] != '-'		4818983	0		!=			
ANR	4819126	ArrayIndexing	argv [ my_optind ] [ 0 ]		4818983	0					
ANR	4819127	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819128	Identifier	argv		4818983	0					
ANR	4819129	Identifier	my_optind		4818983	1					
ANR	4819130	PrimaryExpression	0		4818983	1					
ANR	4819131	PrimaryExpression	'-'		4818983	1					
ANR	4819132	EqualityExpression	argv [ my_optind ] [ 1 ] == '\\0'		4818983	1		==			
ANR	4819133	ArrayIndexing	argv [ my_optind ] [ 1 ]		4818983	0					
ANR	4819134	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819135	Identifier	argv		4818983	0					
ANR	4819136	Identifier	my_optind		4818983	1					
ANR	4819137	PrimaryExpression	1		4818983	1					
ANR	4819138	PrimaryExpression	'\\0'		4818983	1					
ANR	4819139	CompoundStatement		24:4:679:690	4818983	1					
ANR	4819140	IdentifierDeclStatement	char * tmp ;	167:4:5319:5328	4818983	0	True				
ANR	4819141	IdentifierDecl	* tmp		4818983	0					
ANR	4819142	IdentifierDeclType	char *		4818983	0					
ANR	4819143	Identifier	tmp		4818983	1					
ANR	4819144	IdentifierDeclStatement	"int i , j , k ;"	168:4:5334:5345	4818983	1	True				
ANR	4819145	IdentifierDecl	i		4818983	0					
ANR	4819146	IdentifierDeclType	int		4818983	0					
ANR	4819147	Identifier	i		4818983	1					
ANR	4819148	IdentifierDecl	j		4818983	1					
ANR	4819149	IdentifierDeclType	int		4818983	0					
ANR	4819150	Identifier	j		4818983	1					
ANR	4819151	IdentifierDecl	k		4818983	2					
ANR	4819152	IdentifierDeclType	int		4818983	0					
ANR	4819153	Identifier	k		4818983	1					
ANR	4819154	ExpressionStatement	opt = - 1	170:4:5352:5360	4818983	2	True				
ANR	4819155	AssignmentExpression	opt = - 1		4818983	0		=			
ANR	4819156	Identifier	opt		4818983	0					
ANR	4819157	UnaryOperationExpression	- 1		4818983	1					
ANR	4819158	UnaryOperator	-		4818983	0					
ANR	4819159	PrimaryExpression	1		4818983	1					
ANR	4819160	IfStatement	if ( mode == '+' )		4818983	3					
ANR	4819161	Condition	mode == '+'	171:7:5369:5379	4818983	0	True				
ANR	4819162	EqualityExpression	mode == '+'		4818983	0		==			
ANR	4819163	Identifier	mode		4818983	0					
ANR	4819164	PrimaryExpression	'+'		4818983	1					
ANR	4819165	ReturnStatement	return - 1 ;	171:20:5382:5391	4818983	1	True				
ANR	4819166	UnaryOperationExpression	- 1		4818983	0					
ANR	4819167	UnaryOperator	-		4818983	0					
ANR	4819168	PrimaryExpression	1		4818983	1					
ANR	4819169	ElseStatement	else		4818983	0					
ANR	4819170	IfStatement	if ( mode == '-' )		4818983	0					
ANR	4819171	Condition	mode == '-'	172:12:5405:5415	4818983	0	True				
ANR	4819172	EqualityExpression	mode == '-'		4818983	0		==			
ANR	4819173	Identifier	mode		4818983	0					
ANR	4819174	PrimaryExpression	'-'		4818983	1					
ANR	4819175	CompoundStatement		28:25:763:763	4818983	1					
ANR	4819176	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	173:6:5426:5455	4818983	0	True				
ANR	4819177	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		4818983	0		=			
ANR	4819178	Identifier	my_optarg		4818983	0					
ANR	4819179	ArrayIndexing	argv [ my_optind ++ ]		4818983	1					
ANR	4819180	Identifier	argv		4818983	0					
ANR	4819181	PostIncDecOperationExpression	my_optind ++		4818983	1					
ANR	4819182	Identifier	my_optind		4818983	0					
ANR	4819183	IncDec	++		4818983	1					
ANR	4819184	ReturnStatement	return 1 ;	174:6:5463:5471	4818983	1	True				
ANR	4819185	PrimaryExpression	1		4818983	0					
ANR	4819186	ForStatement	for ( i = j = my_optind ; i < argc ; i ++ )		4818983	4					
ANR	4819187	ForInit	i = j = my_optind ;	176:8:5487:5500	4818983	0	True				
ANR	4819188	AssignmentExpression	i = j = my_optind		4818983	0		=			
ANR	4819189	Identifier	i		4818983	0					
ANR	4819190	AssignmentExpression	j = my_optind		4818983	1		=			
ANR	4819191	Identifier	j		4818983	0					
ANR	4819192	Identifier	my_optind		4818983	1					
ANR	4819193	Condition	i < argc	176:23:5502:5507	4818983	1	True				
ANR	4819194	RelationalExpression	i < argc		4818983	0		<			
ANR	4819195	Identifier	i		4818983	0					
ANR	4819196	Identifier	argc		4818983	1					
ANR	4819197	PostIncDecOperationExpression	i ++	176:31:5510:5512	4818983	2	True				
ANR	4819198	Identifier	i		4818983	0					
ANR	4819199	IncDec	++		4818983	1					
ANR	4819200	IfStatement	if ( ( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' ) )		4818983	3					
ANR	4819201	Condition	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )	176:39:5518:5596	4818983	0	True				
ANR	4819202	AndExpression	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )		4818983	0		&&			
ANR	4819203	EqualityExpression	argv [ i ] [ 0 ] == '-'		4818983	0		==			
ANR	4819204	ArrayIndexing	argv [ i ] [ 0 ]		4818983	0					
ANR	4819205	ArrayIndexing	argv [ i ]		4818983	0					
ANR	4819206	Identifier	argv		4818983	0					
ANR	4819207	Identifier	i		4818983	1					
ANR	4819208	PrimaryExpression	0		4818983	1					
ANR	4819209	PrimaryExpression	'-'		4818983	1					
ANR	4819210	EqualityExpression	argv [ i ] [ 1 ] != '\\0'		4818983	1		!=			
ANR	4819211	ArrayIndexing	argv [ i ] [ 1 ]		4818983	0					
ANR	4819212	ArrayIndexing	argv [ i ]		4818983	0					
ANR	4819213	Identifier	argv		4818983	0					
ANR	4819214	Identifier	i		4818983	1					
ANR	4819215	PrimaryExpression	1		4818983	1					
ANR	4819216	PrimaryExpression	'\\0'		4818983	1					
ANR	4819217	CompoundStatement		33:58:944:944	4818983	1					
ANR	4819218	ExpressionStatement	my_optind = i	178:6:5607:5618	4818983	0	True				
ANR	4819219	AssignmentExpression	my_optind = i		4818983	0		=			
ANR	4819220	Identifier	my_optind		4818983	0					
ANR	4819221	Identifier	i		4818983	1					
ANR	4819222	ExpressionStatement	"opt = _my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"	179:6:5626:5762	4818983	1	True				
ANR	4819223	AssignmentExpression	"opt = _my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"		4818983	0		=			
ANR	4819224	Identifier	opt		4818983	0					
ANR	4819225	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"		4818983	1					
ANR	4819226	Callee	_my_getopt_internal		4818983	0					
ANR	4819227	Identifier	_my_getopt_internal		4818983	0					
ANR	4819228	ArgumentList	argc		4818983	1					
ANR	4819229	Argument	argc		4818983	0					
ANR	4819230	Identifier	argc		4818983	0					
ANR	4819231	Argument	argv		4818983	1					
ANR	4819232	Identifier	argv		4818983	0					
ANR	4819233	Argument	shortopts		4818983	2					
ANR	4819234	Identifier	shortopts		4818983	0					
ANR	4819235	Argument	longopts		4818983	3					
ANR	4819236	Identifier	longopts		4818983	0					
ANR	4819237	Argument	longind		4818983	4					
ANR	4819238	Identifier	longind		4818983	0					
ANR	4819239	Argument	long_only		4818983	5					
ANR	4819240	Identifier	long_only		4818983	0					
ANR	4819241	WhileStatement	while ( i > j )		4818983	2					
ANR	4819242	Condition	i > j	182:12:5776:5780	4818983	0	True				
ANR	4819243	RelationalExpression	i > j		4818983	0		>			
ANR	4819244	Identifier	i		4818983	0					
ANR	4819245	Identifier	j		4818983	1					
ANR	4819246	CompoundStatement		38:19:1128:1128	4818983	1					
ANR	4819247	ExpressionStatement	tmp = argv [ -- i ]	183:8:5793:5806	4818983	0	True				
ANR	4819248	AssignmentExpression	tmp = argv [ -- i ]		4818983	0		=			
ANR	4819249	Identifier	tmp		4818983	0					
ANR	4819250	ArrayIndexing	argv [ -- i ]		4818983	1					
ANR	4819251	Identifier	argv		4818983	0					
ANR	4819252	UnaryExpression	-- i		4818983	1					
ANR	4819253	IncDec	--		4818983	0					
ANR	4819254	Identifier	i		4818983	1					
ANR	4819255	ForStatement	for ( k = i ; k + 1 < my_optind ; k ++ )		4818983	1					
ANR	4819256	ForInit	k = i ;	184:12:5820:5823	4818983	0	True				
ANR	4819257	AssignmentExpression	k = i		4818983	0		=			
ANR	4819258	Identifier	k		4818983	0					
ANR	4819259	Identifier	i		4818983	1					
ANR	4819260	Condition	k + 1 < my_optind	184:17:5825:5837	4818983	1	True				
ANR	4819261	RelationalExpression	k + 1 < my_optind		4818983	0		<			
ANR	4819262	AdditiveExpression	k + 1		4818983	0		+			
ANR	4819263	Identifier	k		4818983	0					
ANR	4819264	PrimaryExpression	1		4818983	1					
ANR	4819265	Identifier	my_optind		4818983	1					
ANR	4819266	PostIncDecOperationExpression	k ++	184:32:5840:5842	4818983	2	True				
ANR	4819267	Identifier	k		4818983	0					
ANR	4819268	IncDec	++		4818983	1					
ANR	4819269	ExpressionStatement	argv [ k ] = argv [ k + 1 ]	185:10:5855:5872	4818983	3	True				
ANR	4819270	AssignmentExpression	argv [ k ] = argv [ k + 1 ]		4818983	0		=			
ANR	4819271	ArrayIndexing	argv [ k ]		4818983	0					
ANR	4819272	Identifier	argv		4818983	0					
ANR	4819273	Identifier	k		4818983	1					
ANR	4819274	ArrayIndexing	argv [ k + 1 ]		4818983	1					
ANR	4819275	Identifier	argv		4818983	0					
ANR	4819276	AdditiveExpression	k + 1		4818983	1		+			
ANR	4819277	Identifier	k		4818983	0					
ANR	4819278	PrimaryExpression	1		4818983	1					
ANR	4819279	ExpressionStatement	argv [ -- my_optind ] = tmp	186:8:5882:5903	4818983	2	True				
ANR	4819280	AssignmentExpression	argv [ -- my_optind ] = tmp		4818983	0		=			
ANR	4819281	ArrayIndexing	argv [ -- my_optind ]		4818983	0					
ANR	4819282	Identifier	argv		4818983	0					
ANR	4819283	UnaryExpression	-- my_optind		4818983	1					
ANR	4819284	IncDec	--		4818983	0					
ANR	4819285	Identifier	my_optind		4818983	1					
ANR	4819286	Identifier	tmp		4818983	1					
ANR	4819287	BreakStatement	break ;	188:6:5919:5924	4818983	3	True				
ANR	4819288	ElseStatement	else		4818983	0					
ANR	4819289	IfStatement	if ( ( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' ) )		4818983	0					
ANR	4819290	Condition	( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' )	190:12:5944:5986	4818983	0	True				
ANR	4819291	AndExpression	( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' )		4818983	0		&&			
ANR	4819292	UnaryOperationExpression	! long_only		4818983	0					
ANR	4819293	UnaryOperator	!		4818983	0					
ANR	4819294	Identifier	long_only		4818983	1					
ANR	4819295	EqualityExpression	argv [ my_optind ] [ 1 ] != '-'		4818983	1		!=			
ANR	4819296	ArrayIndexing	argv [ my_optind ] [ 1 ]		4818983	0					
ANR	4819297	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819298	Identifier	argv		4818983	0					
ANR	4819299	Identifier	my_optind		4818983	1					
ANR	4819300	PrimaryExpression	1		4818983	1					
ANR	4819301	PrimaryExpression	'-'		4818983	1					
ANR	4819302	ExpressionStatement	"opt = my_getopt ( argc , argv , shortopts )"	191:4:5993:6031	4818983	1	True				
ANR	4819303	AssignmentExpression	"opt = my_getopt ( argc , argv , shortopts )"		4818983	0		=			
ANR	4819304	Identifier	opt		4818983	0					
ANR	4819305	CallExpression	"my_getopt ( argc , argv , shortopts )"		4818983	1					
ANR	4819306	Callee	my_getopt		4818983	0					
ANR	4819307	Identifier	my_getopt		4818983	0					
ANR	4819308	ArgumentList	argc		4818983	1					
ANR	4819309	Argument	argc		4818983	0					
ANR	4819310	Identifier	argc		4818983	0					
ANR	4819311	Argument	argv		4818983	1					
ANR	4819312	Identifier	argv		4818983	0					
ANR	4819313	Argument	shortopts		4818983	2					
ANR	4819314	Identifier	shortopts		4818983	0					
ANR	4819315	ElseStatement	else		4818983	0					
ANR	4819316	CompoundStatement		50:4:1416:1444	4818983	0					
ANR	4819317	IdentifierDeclStatement	"int charind , offset ;"	193:4:6046:6065	4818983	0	True				
ANR	4819318	IdentifierDecl	charind		4818983	0					
ANR	4819319	IdentifierDeclType	int		4818983	0					
ANR	4819320	Identifier	charind		4818983	1					
ANR	4819321	IdentifierDecl	offset		4818983	1					
ANR	4819322	IdentifierDeclType	int		4818983	0					
ANR	4819323	Identifier	offset		4818983	1					
ANR	4819324	IdentifierDeclStatement	"int found = 0 , ind , hits = 0 ;"	194:4:6071:6099	4818983	1	True				
ANR	4819325	IdentifierDecl	found = 0		4818983	0					
ANR	4819326	IdentifierDeclType	int		4818983	0					
ANR	4819327	Identifier	found		4818983	1					
ANR	4819328	AssignmentExpression	found = 0		4818983	2		=			
ANR	4819329	Identifier	found		4818983	0					
ANR	4819330	PrimaryExpression	0		4818983	1					
ANR	4819331	IdentifierDecl	ind		4818983	1					
ANR	4819332	IdentifierDeclType	int		4818983	0					
ANR	4819333	Identifier	ind		4818983	1					
ANR	4819334	IdentifierDecl	hits = 0		4818983	2					
ANR	4819335	IdentifierDeclType	int		4818983	0					
ANR	4819336	Identifier	hits		4818983	1					
ANR	4819337	AssignmentExpression	hits = 0		4818983	2		=			
ANR	4819338	Identifier	hits		4818983	0					
ANR	4819339	PrimaryExpression	0		4818983	1					
ANR	4819340	IfStatement	if ( ( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ] )		4818983	2					
ANR	4819341	Condition	( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ]	196:7:6109:6173	4818983	0	True				
ANR	4819342	AndExpression	( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ]		4818983	0		&&			
ANR	4819343	EqualityExpression	( my_optopt = argv [ my_optind ] [ 1 ] ) != '-'		4818983	0		!=			
ANR	4819344	AssignmentExpression	my_optopt = argv [ my_optind ] [ 1 ]		4818983	0		=			
ANR	4819345	Identifier	my_optopt		4818983	0					
ANR	4819346	ArrayIndexing	argv [ my_optind ] [ 1 ]		4818983	1					
ANR	4819347	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819348	Identifier	argv		4818983	0					
ANR	4819349	Identifier	my_optind		4818983	1					
ANR	4819350	PrimaryExpression	1		4818983	1					
ANR	4819351	PrimaryExpression	'-'		4818983	1					
ANR	4819352	UnaryOperationExpression	! argv [ my_optind ] [ 2 ]		4818983	1					
ANR	4819353	UnaryOperator	!		4818983	0					
ANR	4819354	ArrayIndexing	argv [ my_optind ] [ 2 ]		4818983	1					
ANR	4819355	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819356	Identifier	argv		4818983	0					
ANR	4819357	Identifier	my_optind		4818983	1					
ANR	4819358	PrimaryExpression	2		4818983	1					
ANR	4819359	CompoundStatement		53:6:1529:1534	4818983	1					
ANR	4819360	IdentifierDeclStatement	int c ;	197:6:6184:6189	4818983	0	True				
ANR	4819361	IdentifierDecl	c		4818983	0					
ANR	4819362	IdentifierDeclType	int		4818983	0					
ANR	4819363	Identifier	c		4818983	1					
ANR	4819364	ExpressionStatement	ind = shortoff	199:6:6204:6218	4818983	1	True				
ANR	4819365	AssignmentExpression	ind = shortoff		4818983	0		=			
ANR	4819366	Identifier	ind		4818983	0					
ANR	4819367	Identifier	shortoff		4818983	1					
ANR	4819368	WhileStatement	while ( ( c = shortopts [ ind ++ ] ) )		4818983	2					
ANR	4819369	Condition	c = shortopts [ ind ++ ]	200:12:6232:6253	4818983	0	True				
ANR	4819370	AssignmentExpression	c = shortopts [ ind ++ ]		4818983	0		=			
ANR	4819371	Identifier	c		4818983	0					
ANR	4819372	ArrayIndexing	shortopts [ ind ++ ]		4818983	1					
ANR	4819373	Identifier	shortopts		4818983	0					
ANR	4819374	PostIncDecOperationExpression	ind ++		4818983	1					
ANR	4819375	Identifier	ind		4818983	0					
ANR	4819376	IncDec	++		4818983	1					
ANR	4819377	CompoundStatement		56:36:1601:1601	4818983	1					
ANR	4819378	IfStatement	if ( ( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' ) )		4818983	0					
ANR	4819379	Condition	( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' )	201:11:6269:6388	4818983	0	True				
ANR	4819380	AndExpression	( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' )		4818983	0		&&			
ANR	4819381	OrExpression	( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) )		4818983	0		||			
ANR	4819382	EqualityExpression	shortopts [ ind ] == ':'		4818983	0		==			
ANR	4819383	ArrayIndexing	shortopts [ ind ]		4818983	0					
ANR	4819384	Identifier	shortopts		4818983	0					
ANR	4819385	Identifier	ind		4818983	1					
ANR	4819386	PrimaryExpression	':'		4818983	1					
ANR	4819387	AndExpression	( c == 'W' ) && ( shortopts [ ind ] == ';' )		4818983	1		&&			
ANR	4819388	EqualityExpression	c == 'W'		4818983	0		==			
ANR	4819389	Identifier	c		4818983	0					
ANR	4819390	PrimaryExpression	'W'		4818983	1					
ANR	4819391	EqualityExpression	shortopts [ ind ] == ';'		4818983	1		==			
ANR	4819392	ArrayIndexing	shortopts [ ind ]		4818983	0					
ANR	4819393	Identifier	shortopts		4818983	0					
ANR	4819394	Identifier	ind		4818983	1					
ANR	4819395	PrimaryExpression	';'		4818983	1					
ANR	4819396	EqualityExpression	shortopts [ ++ ind ] == ':'		4818983	1		==			
ANR	4819397	ArrayIndexing	shortopts [ ++ ind ]		4818983	0					
ANR	4819398	Identifier	shortopts		4818983	0					
ANR	4819399	UnaryExpression	++ ind		4818983	1					
ANR	4819400	IncDec	++		4818983	0					
ANR	4819401	Identifier	ind		4818983	1					
ANR	4819402	PrimaryExpression	':'		4818983	1					
ANR	4819403	ExpressionStatement	ind ++	204:10:6401:6407	4818983	1	True				
ANR	4819404	PostIncDecOperationExpression	ind ++		4818983	0					
ANR	4819405	Identifier	ind		4818983	0					
ANR	4819406	IncDec	++		4818983	1					
ANR	4819407	IfStatement	if ( my_optopt == c )		4818983	1					
ANR	4819408	Condition	my_optopt == c	205:11:6420:6433	4818983	0	True				
ANR	4819409	EqualityExpression	my_optopt == c		4818983	0		==			
ANR	4819410	Identifier	my_optopt		4818983	0					
ANR	4819411	Identifier	c		4818983	1					
ANR	4819412	ReturnStatement	"return my_getopt ( argc , argv , shortopts ) ;"	205:27:6436:6475	4818983	1	True				
ANR	4819413	CallExpression	"my_getopt ( argc , argv , shortopts )"		4818983	0					
ANR	4819414	Callee	my_getopt		4818983	0					
ANR	4819415	Identifier	my_getopt		4818983	0					
ANR	4819416	ArgumentList	argc		4818983	1					
ANR	4819417	Argument	argc		4818983	0					
ANR	4819418	Identifier	argc		4818983	0					
ANR	4819419	Argument	argv		4818983	1					
ANR	4819420	Identifier	argv		4818983	0					
ANR	4819421	Argument	shortopts		4818983	2					
ANR	4819422	Identifier	shortopts		4818983	0					
ANR	4819423	ExpressionStatement	offset = 2 - ( argv [ my_optind ] [ 1 ] != '-' )	208:4:6495:6535	4818983	3	True				
ANR	4819424	AssignmentExpression	offset = 2 - ( argv [ my_optind ] [ 1 ] != '-' )		4818983	0		=			
ANR	4819425	Identifier	offset		4818983	0					
ANR	4819426	AdditiveExpression	2 - ( argv [ my_optind ] [ 1 ] != '-' )		4818983	1		-			
ANR	4819427	PrimaryExpression	2		4818983	0					
ANR	4819428	EqualityExpression	argv [ my_optind ] [ 1 ] != '-'		4818983	1		!=			
ANR	4819429	ArrayIndexing	argv [ my_optind ] [ 1 ]		4818983	0					
ANR	4819430	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819431	Identifier	argv		4818983	0					
ANR	4819432	Identifier	my_optind		4818983	1					
ANR	4819433	PrimaryExpression	1		4818983	1					
ANR	4819434	PrimaryExpression	'-'		4818983	1					
ANR	4819435	ForStatement	for ( charind = offset ; ( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' ) ; charind ++ )		4818983	4					
ANR	4819436	ForInit	charind = offset ;	209:8:6545:6561	4818983	0	True				
ANR	4819437	AssignmentExpression	charind = offset		4818983	0		=			
ANR	4819438	Identifier	charind		4818983	0					
ANR	4819439	Identifier	offset		4818983	1					
ANR	4819440	Condition	( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' )	210:8:6571:6651	4818983	1	True				
ANR	4819441	AndExpression	( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' )		4818983	0		&&			
ANR	4819442	EqualityExpression	argv [ my_optind ] [ charind ] != '\\0'		4818983	0		!=			
ANR	4819443	ArrayIndexing	argv [ my_optind ] [ charind ]		4818983	0					
ANR	4819444	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819445	Identifier	argv		4818983	0					
ANR	4819446	Identifier	my_optind		4818983	1					
ANR	4819447	Identifier	charind		4818983	1					
ANR	4819448	PrimaryExpression	'\\0'		4818983	1					
ANR	4819449	EqualityExpression	argv [ my_optind ] [ charind ] != '='		4818983	1		!=			
ANR	4819450	ArrayIndexing	argv [ my_optind ] [ charind ]		4818983	0					
ANR	4819451	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819452	Identifier	argv		4818983	0					
ANR	4819453	Identifier	my_optind		4818983	1					
ANR	4819454	Identifier	charind		4818983	1					
ANR	4819455	PrimaryExpression	'='		4818983	1					
ANR	4819456	PostIncDecOperationExpression	charind ++	212:8:6662:6670	4818983	2	True				
ANR	4819457	Identifier	charind		4818983	0					
ANR	4819458	IncDec	++		4818983	1					
ANR	4819459	ExpressionStatement		212:18:6672:6672	4818983	3	True				
ANR	4819460	ForStatement	for ( ind = 0 ; longopts [ ind ] . name && ! hits ; ind ++ )		4818983	5					
ANR	4819461	ForInit	ind = 0 ;	213:8:6682:6689	4818983	0	True				
ANR	4819462	AssignmentExpression	ind = 0		4818983	0		=			
ANR	4819463	Identifier	ind		4818983	0					
ANR	4819464	PrimaryExpression	0		4818983	1					
ANR	4819465	Condition	longopts [ ind ] . name && ! hits	213:17:6691:6717	4818983	1	True				
ANR	4819466	AndExpression	longopts [ ind ] . name && ! hits		4818983	0		&&			
ANR	4819467	MemberAccess	longopts [ ind ] . name		4818983	0					
ANR	4819468	ArrayIndexing	longopts [ ind ]		4818983	0					
ANR	4819469	Identifier	longopts		4818983	0					
ANR	4819470	Identifier	ind		4818983	1					
ANR	4819471	Identifier	name		4818983	1					
ANR	4819472	UnaryOperationExpression	! hits		4818983	1					
ANR	4819473	UnaryOperator	!		4818983	0					
ANR	4819474	Identifier	hits		4818983	1					
ANR	4819475	PostIncDecOperationExpression	ind ++	213:46:6720:6724	4818983	2	True				
ANR	4819476	Identifier	ind		4818983	0					
ANR	4819477	IncDec	++		4818983	1					
ANR	4819478	IfStatement	"if ( ( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 ) )"		4818983	3					
ANR	4819479	Condition	"( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"	214:9:6736:6903	4818983	0	True				
ANR	4819480	AndExpression	"( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"		4818983	0		&&			
ANR	4819481	EqualityExpression	strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset )		4818983	0		==			
ANR	4819482	CallExpression	strlen ( longopts [ ind ] . name )		4818983	0					
ANR	4819483	Callee	strlen		4818983	0					
ANR	4819484	Identifier	strlen		4818983	0					
ANR	4819485	ArgumentList	longopts [ ind ] . name		4818983	1					
ANR	4819486	Argument	longopts [ ind ] . name		4818983	0					
ANR	4819487	MemberAccess	longopts [ ind ] . name		4818983	0					
ANR	4819488	ArrayIndexing	longopts [ ind ]		4818983	0					
ANR	4819489	Identifier	longopts		4818983	0					
ANR	4819490	Identifier	ind		4818983	1					
ANR	4819491	Identifier	name		4818983	1					
ANR	4819492	CastExpression	( size_t ) ( charind - offset )		4818983	1					
ANR	4819493	CastTarget	size_t		4818983	0					
ANR	4819494	AdditiveExpression	charind - offset		4818983	1		-			
ANR	4819495	Identifier	charind		4818983	0					
ANR	4819496	Identifier	offset		4818983	1					
ANR	4819497	EqualityExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"		4818983	1		==			
ANR	4819498	CallExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset )"		4818983	0					
ANR	4819499	Callee	strncmp		4818983	0					
ANR	4819500	Identifier	strncmp		4818983	0					
ANR	4819501	ArgumentList	longopts [ ind ] . name		4818983	1					
ANR	4819502	Argument	longopts [ ind ] . name		4818983	0					
ANR	4819503	MemberAccess	longopts [ ind ] . name		4818983	0					
ANR	4819504	ArrayIndexing	longopts [ ind ]		4818983	0					
ANR	4819505	Identifier	longopts		4818983	0					
ANR	4819506	Identifier	ind		4818983	1					
ANR	4819507	Identifier	name		4818983	1					
ANR	4819508	Argument	argv [ my_optind ] + offset		4818983	1					
ANR	4819509	AdditiveExpression	argv [ my_optind ] + offset		4818983	0		+			
ANR	4819510	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819511	Identifier	argv		4818983	0					
ANR	4819512	Identifier	my_optind		4818983	1					
ANR	4819513	Identifier	offset		4818983	1					
ANR	4819514	Argument	charind - offset		4818983	2					
ANR	4819515	AdditiveExpression	charind - offset		4818983	0		-			
ANR	4819516	Identifier	charind		4818983	0					
ANR	4819517	Identifier	offset		4818983	1					
ANR	4819518	PrimaryExpression	0		4818983	1					
ANR	4819519	ExpressionStatement	"found = ind , hits ++"	217:8:6914:6933	4818983	1	True				
ANR	4819520	Expression	"found = ind , hits ++"		4818983	0					
ANR	4819521	AssignmentExpression	found = ind		4818983	0		=			
ANR	4819522	Identifier	found		4818983	0					
ANR	4819523	Identifier	ind		4818983	1					
ANR	4819524	PostIncDecOperationExpression	hits ++		4818983	1					
ANR	4819525	Identifier	hits		4818983	0					
ANR	4819526	IncDec	++		4818983	1					
ANR	4819527	IfStatement	if ( ! hits )		4818983	6					
ANR	4819528	Condition	! hits	218:7:6942:6946	4818983	0	True				
ANR	4819529	UnaryOperationExpression	! hits		4818983	0					
ANR	4819530	UnaryOperator	!		4818983	0					
ANR	4819531	Identifier	hits		4818983	1					
ANR	4819532	ForStatement	for ( ind = 0 ; longopts [ ind ] . name ; ind ++ )		4818983	1					
ANR	4819533	ForInit	ind = 0 ;	218:18:6953:6960	4818983	0	True				
ANR	4819534	AssignmentExpression	ind = 0		4818983	0		=			
ANR	4819535	Identifier	ind		4818983	0					
ANR	4819536	PrimaryExpression	0		4818983	1					
ANR	4819537	Condition	longopts [ ind ] . name	218:27:6962:6979	4818983	1	True				
ANR	4819538	MemberAccess	longopts [ ind ] . name		4818983	0					
ANR	4819539	ArrayIndexing	longopts [ ind ]		4818983	0					
ANR	4819540	Identifier	longopts		4818983	0					
ANR	4819541	Identifier	ind		4818983	1					
ANR	4819542	Identifier	name		4818983	1					
ANR	4819543	PostIncDecOperationExpression	ind ++	218:47:6982:6986	4818983	2	True				
ANR	4819544	Identifier	ind		4818983	0					
ANR	4819545	IncDec	++		4818983	1					
ANR	4819546	IfStatement	"if ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"		4818983	3					
ANR	4819547	Condition	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"	219:9:6998:7090	4818983	0	True				
ANR	4819548	EqualityExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"		4818983	0		==			
ANR	4819549	CallExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset )"		4818983	0					
ANR	4819550	Callee	strncmp		4818983	0					
ANR	4819551	Identifier	strncmp		4818983	0					
ANR	4819552	ArgumentList	longopts [ ind ] . name		4818983	1					
ANR	4819553	Argument	longopts [ ind ] . name		4818983	0					
ANR	4819554	MemberAccess	longopts [ ind ] . name		4818983	0					
ANR	4819555	ArrayIndexing	longopts [ ind ]		4818983	0					
ANR	4819556	Identifier	longopts		4818983	0					
ANR	4819557	Identifier	ind		4818983	1					
ANR	4819558	Identifier	name		4818983	1					
ANR	4819559	Argument	argv [ my_optind ] + offset		4818983	1					
ANR	4819560	AdditiveExpression	argv [ my_optind ] + offset		4818983	0		+			
ANR	4819561	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819562	Identifier	argv		4818983	0					
ANR	4819563	Identifier	my_optind		4818983	1					
ANR	4819564	Identifier	offset		4818983	1					
ANR	4819565	Argument	charind - offset		4818983	2					
ANR	4819566	AdditiveExpression	charind - offset		4818983	0		-			
ANR	4819567	Identifier	charind		4818983	0					
ANR	4819568	Identifier	offset		4818983	1					
ANR	4819569	PrimaryExpression	0		4818983	1					
ANR	4819570	ExpressionStatement	"found = ind , hits ++"	221:8:7101:7120	4818983	1	True				
ANR	4819571	Expression	"found = ind , hits ++"		4818983	0					
ANR	4819572	AssignmentExpression	found = ind		4818983	0		=			
ANR	4819573	Identifier	found		4818983	0					
ANR	4819574	Identifier	ind		4818983	1					
ANR	4819575	PostIncDecOperationExpression	hits ++		4818983	1					
ANR	4819576	Identifier	hits		4818983	0					
ANR	4819577	IncDec	++		4818983	1					
ANR	4819578	IfStatement	if ( hits == 1 )		4818983	7					
ANR	4819579	Condition	hits == 1	222:7:7129:7137	4818983	0	True				
ANR	4819580	EqualityExpression	hits == 1		4818983	0		==			
ANR	4819581	Identifier	hits		4818983	0					
ANR	4819582	PrimaryExpression	1		4818983	1					
ANR	4819583	CompoundStatement		78:18:2485:2485	4818983	1					
ANR	4819584	ExpressionStatement	opt = 0	223:6:7148:7155	4818983	0	True				
ANR	4819585	AssignmentExpression	opt = 0		4818983	0		=			
ANR	4819586	Identifier	opt		4818983	0					
ANR	4819587	PrimaryExpression	0		4818983	1					
ANR	4819588	IfStatement	if ( argv [ my_optind ] [ charind ] == '=' )		4818983	1					
ANR	4819589	Condition	argv [ my_optind ] [ charind ] == '='	225:9:7167:7197	4818983	0	True				
ANR	4819590	EqualityExpression	argv [ my_optind ] [ charind ] == '='		4818983	0		==			
ANR	4819591	ArrayIndexing	argv [ my_optind ] [ charind ]		4818983	0					
ANR	4819592	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819593	Identifier	argv		4818983	0					
ANR	4819594	Identifier	my_optind		4818983	1					
ANR	4819595	Identifier	charind		4818983	1					
ANR	4819596	PrimaryExpression	'='		4818983	1					
ANR	4819597	CompoundStatement		81:42:2545:2545	4818983	1					
ANR	4819598	IfStatement	if ( longopts [ found ] . has_arg == 0 )		4818983	0					
ANR	4819599	Condition	longopts [ found ] . has_arg == 0	226:11:7213:7240	4818983	0	True				
ANR	4819600	EqualityExpression	longopts [ found ] . has_arg == 0		4818983	0		==			
ANR	4819601	MemberAccess	longopts [ found ] . has_arg		4818983	0					
ANR	4819602	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819603	Identifier	longopts		4818983	0					
ANR	4819604	Identifier	found		4818983	1					
ANR	4819605	Identifier	has_arg		4818983	1					
ANR	4819606	PrimaryExpression	0		4818983	1					
ANR	4819607	CompoundStatement		82:41:2588:2588	4818983	1					
ANR	4819608	ExpressionStatement	opt = '?'	227:10:7255:7264	4818983	0	True				
ANR	4819609	AssignmentExpression	opt = '?'		4818983	0		=			
ANR	4819610	Identifier	opt		4818983	0					
ANR	4819611	PrimaryExpression	'?'		4818983	1					
ANR	4819612	IfStatement	if ( my_opterr )		4818983	1					
ANR	4819613	Condition	my_opterr	228:13:7279:7287	4818983	0	True				
ANR	4819614	Identifier	my_opterr		4818983	0					
ANR	4819615	ExpressionStatement	"fprintf ( stderr , ""%s: option `--%s' doesn't allow an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"	228:24:7290:7443	4818983	1	True				
ANR	4819616	CallExpression	"fprintf ( stderr , ""%s: option `--%s' doesn't allow an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"		4818983	0					
ANR	4819617	Callee	fprintf		4818983	0					
ANR	4819618	Identifier	fprintf		4818983	0					
ANR	4819619	ArgumentList	stderr		4818983	1					
ANR	4819620	Argument	stderr		4818983	0					
ANR	4819621	Identifier	stderr		4818983	0					
ANR	4819622	Argument	"""%s: option `--%s' doesn't allow an argument\\n"""		4818983	1					
ANR	4819623	PrimaryExpression	"""%s: option `--%s' doesn't allow an argument\\n"""		4818983	0					
ANR	4819624	Argument	argv [ 0 ]		4818983	2					
ANR	4819625	ArrayIndexing	argv [ 0 ]		4818983	0					
ANR	4819626	Identifier	argv		4818983	0					
ANR	4819627	PrimaryExpression	0		4818983	1					
ANR	4819628	Argument	longopts [ found ] . name		4818983	3					
ANR	4819629	MemberAccess	longopts [ found ] . name		4818983	0					
ANR	4819630	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819631	Identifier	longopts		4818983	0					
ANR	4819632	Identifier	found		4818983	1					
ANR	4819633	Identifier	name		4818983	1					
ANR	4819634	ElseStatement	else		4818983	0					
ANR	4819635	CompoundStatement		87:15:2805:2805	4818983	0					
ANR	4819636	ExpressionStatement	my_optarg = argv [ my_optind ] + ++ charind	232:10:7472:7511	4818983	0	True				
ANR	4819637	AssignmentExpression	my_optarg = argv [ my_optind ] + ++ charind		4818983	0		=			
ANR	4819638	Identifier	my_optarg		4818983	0					
ANR	4819639	AdditiveExpression	argv [ my_optind ] + ++ charind		4818983	1		+			
ANR	4819640	ArrayIndexing	argv [ my_optind ]		4818983	0					
ANR	4819641	Identifier	argv		4818983	0					
ANR	4819642	Identifier	my_optind		4818983	1					
ANR	4819643	UnaryExpression	++ charind		4818983	1					
ANR	4819644	IncDec	++		4818983	0					
ANR	4819645	Identifier	charind		4818983	1					
ANR	4819646	ExpressionStatement	charind = 0	233:10:7523:7534	4818983	1	True				
ANR	4819647	AssignmentExpression	charind = 0		4818983	0		=			
ANR	4819648	Identifier	charind		4818983	0					
ANR	4819649	PrimaryExpression	0		4818983	1					
ANR	4819650	ElseStatement	else		4818983	0					
ANR	4819651	IfStatement	if ( longopts [ found ] . has_arg == 1 )		4818983	0					
ANR	4819652	Condition	longopts [ found ] . has_arg == 1	235:16:7562:7589	4818983	0	True				
ANR	4819653	EqualityExpression	longopts [ found ] . has_arg == 1		4818983	0		==			
ANR	4819654	MemberAccess	longopts [ found ] . has_arg		4818983	0					
ANR	4819655	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819656	Identifier	longopts		4818983	0					
ANR	4819657	Identifier	found		4818983	1					
ANR	4819658	Identifier	has_arg		4818983	1					
ANR	4819659	PrimaryExpression	1		4818983	1					
ANR	4819660	CompoundStatement		91:46:2937:2937	4818983	1					
ANR	4819661	IfStatement	if ( ++ my_optind >= argc )		4818983	0					
ANR	4819662	Condition	++ my_optind >= argc	236:11:7605:7623	4818983	0	True				
ANR	4819663	RelationalExpression	++ my_optind >= argc		4818983	0		>=			
ANR	4819664	UnaryExpression	++ my_optind		4818983	0					
ANR	4819665	IncDec	++		4818983	0					
ANR	4819666	Identifier	my_optind		4818983	1					
ANR	4819667	Identifier	argc		4818983	1					
ANR	4819668	CompoundStatement		92:32:2971:2971	4818983	1					
ANR	4819669	ExpressionStatement	opt = ( colon_mode == ':' ) ? ':' : '?'	237:10:7638:7675	4818983	0	True				
ANR	4819670	AssignmentExpression	opt = ( colon_mode == ':' ) ? ':' : '?'		4818983	0		=			
ANR	4819671	Identifier	opt		4818983	0					
ANR	4819672	ConditionalExpression	( colon_mode == ':' ) ? ':' : '?'		4818983	1					
ANR	4819673	Condition	colon_mode == ':'		4818983	0					
ANR	4819674	EqualityExpression	colon_mode == ':'		4818983	0		==			
ANR	4819675	Identifier	colon_mode		4818983	0					
ANR	4819676	PrimaryExpression	':'		4818983	1					
ANR	4819677	PrimaryExpression	':'		4818983	1					
ANR	4819678	PrimaryExpression	'?'		4818983	2					
ANR	4819679	IfStatement	if ( my_opterr )		4818983	1					
ANR	4819680	Condition	my_opterr	238:13:7690:7698	4818983	0	True				
ANR	4819681	Identifier	my_opterr		4818983	0					
ANR	4819682	ExpressionStatement	"fprintf ( stderr , ""%s: option `--%s' requires an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"	238:24:7701:7849	4818983	1	True				
ANR	4819683	CallExpression	"fprintf ( stderr , ""%s: option `--%s' requires an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"		4818983	0					
ANR	4819684	Callee	fprintf		4818983	0					
ANR	4819685	Identifier	fprintf		4818983	0					
ANR	4819686	ArgumentList	stderr		4818983	1					
ANR	4819687	Argument	stderr		4818983	0					
ANR	4819688	Identifier	stderr		4818983	0					
ANR	4819689	Argument	"""%s: option `--%s' requires an argument\\n"""		4818983	1					
ANR	4819690	PrimaryExpression	"""%s: option `--%s' requires an argument\\n"""		4818983	0					
ANR	4819691	Argument	argv [ 0 ]		4818983	2					
ANR	4819692	ArrayIndexing	argv [ 0 ]		4818983	0					
ANR	4819693	Identifier	argv		4818983	0					
ANR	4819694	PrimaryExpression	0		4818983	1					
ANR	4819695	Argument	longopts [ found ] . name		4818983	3					
ANR	4819696	MemberAccess	longopts [ found ] . name		4818983	0					
ANR	4819697	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819698	Identifier	longopts		4818983	0					
ANR	4819699	Identifier	found		4818983	1					
ANR	4819700	Identifier	name		4818983	1					
ANR	4819701	ElseStatement	else		4818983	0					
ANR	4819702	ExpressionStatement	my_optarg = argv [ my_optind ]	241:15:7866:7893	4818983	0	True				
ANR	4819703	AssignmentExpression	my_optarg = argv [ my_optind ]		4818983	0		=			
ANR	4819704	Identifier	my_optarg		4818983	0					
ANR	4819705	ArrayIndexing	argv [ my_optind ]		4818983	1					
ANR	4819706	Identifier	argv		4818983	0					
ANR	4819707	Identifier	my_optind		4818983	1					
ANR	4819708	IfStatement	if ( ! opt )		4818983	2					
ANR	4819709	Condition	! opt	243:9:7912:7915	4818983	0	True				
ANR	4819710	UnaryOperationExpression	! opt		4818983	0					
ANR	4819711	UnaryOperator	!		4818983	0					
ANR	4819712	Identifier	opt		4818983	1					
ANR	4819713	CompoundStatement		99:15:3263:3263	4818983	1					
ANR	4819714	IfStatement	if ( longind )		4818983	0					
ANR	4819715	Condition	longind	244:12:7932:7938	4818983	0	True				
ANR	4819716	Identifier	longind		4818983	0					
ANR	4819717	ExpressionStatement	* longind = found	244:21:7941:7957	4818983	1	True				
ANR	4819718	AssignmentExpression	* longind = found		4818983	0		=			
ANR	4819719	UnaryOperationExpression	* longind		4818983	0					
ANR	4819720	UnaryOperator	*		4818983	0					
ANR	4819721	Identifier	longind		4818983	1					
ANR	4819722	Identifier	found		4818983	1					
ANR	4819723	IfStatement	if ( ! longopts [ found ] . flag )		4818983	1					
ANR	4819724	Condition	! longopts [ found ] . flag	245:11:7970:7990	4818983	0	True				
ANR	4819725	UnaryOperationExpression	! longopts [ found ] . flag		4818983	0					
ANR	4819726	UnaryOperator	!		4818983	0					
ANR	4819727	MemberAccess	longopts [ found ] . flag		4818983	1					
ANR	4819728	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819729	Identifier	longopts		4818983	0					
ANR	4819730	Identifier	found		4818983	1					
ANR	4819731	Identifier	flag		4818983	1					
ANR	4819732	ExpressionStatement	opt = longopts [ found ] . val	245:34:7993:8018	4818983	1	True				
ANR	4819733	AssignmentExpression	opt = longopts [ found ] . val		4818983	0		=			
ANR	4819734	Identifier	opt		4818983	0					
ANR	4819735	MemberAccess	longopts [ found ] . val		4818983	1					
ANR	4819736	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819737	Identifier	longopts		4818983	0					
ANR	4819738	Identifier	found		4818983	1					
ANR	4819739	Identifier	val		4818983	1					
ANR	4819740	ElseStatement	else		4818983	0					
ANR	4819741	ExpressionStatement	* ( longopts [ found ] . flag ) = longopts [ found ] . val	246:13:8033:8078	4818983	0	True				
ANR	4819742	AssignmentExpression	* ( longopts [ found ] . flag ) = longopts [ found ] . val		4818983	0		=			
ANR	4819743	UnaryOperationExpression	* ( longopts [ found ] . flag )		4818983	0					
ANR	4819744	UnaryOperator	*		4818983	0					
ANR	4819745	MemberAccess	longopts [ found ] . flag		4818983	1					
ANR	4819746	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819747	Identifier	longopts		4818983	0					
ANR	4819748	Identifier	found		4818983	1					
ANR	4819749	Identifier	flag		4818983	1					
ANR	4819750	MemberAccess	longopts [ found ] . val		4818983	1					
ANR	4819751	ArrayIndexing	longopts [ found ]		4818983	0					
ANR	4819752	Identifier	longopts		4818983	0					
ANR	4819753	Identifier	found		4818983	1					
ANR	4819754	Identifier	val		4818983	1					
ANR	4819755	ExpressionStatement	my_optind ++	248:6:8094:8105	4818983	3	True				
ANR	4819756	PostIncDecOperationExpression	my_optind ++		4818983	0					
ANR	4819757	Identifier	my_optind		4818983	0					
ANR	4819758	IncDec	++		4818983	1					
ANR	4819759	ElseStatement	else		4818983	0					
ANR	4819760	IfStatement	if ( ! hits )		4818983	0					
ANR	4819761	Condition	! hits	249:14:8121:8125	4818983	0	True				
ANR	4819762	UnaryOperationExpression	! hits		4818983	0					
ANR	4819763	UnaryOperator	!		4818983	0					
ANR	4819764	Identifier	hits		4818983	1					
ANR	4819765	CompoundStatement		105:21:3473:3473	4818983	1					
ANR	4819766	IfStatement	if ( offset == 1 )		4818983	0					
ANR	4819767	Condition	offset == 1	250:9:8139:8149	4818983	0	True				
ANR	4819768	EqualityExpression	offset == 1		4818983	0		==			
ANR	4819769	Identifier	offset		4818983	0					
ANR	4819770	PrimaryExpression	1		4818983	1					
ANR	4819771	ExpressionStatement	"opt = my_getopt ( argc , argv , shortopts )"	250:22:8152:8190	4818983	1	True				
ANR	4819772	AssignmentExpression	"opt = my_getopt ( argc , argv , shortopts )"		4818983	0		=			
ANR	4819773	Identifier	opt		4818983	0					
ANR	4819774	CallExpression	"my_getopt ( argc , argv , shortopts )"		4818983	1					
ANR	4819775	Callee	my_getopt		4818983	0					
ANR	4819776	Identifier	my_getopt		4818983	0					
ANR	4819777	ArgumentList	argc		4818983	1					
ANR	4819778	Argument	argc		4818983	0					
ANR	4819779	Identifier	argc		4818983	0					
ANR	4819780	Argument	argv		4818983	1					
ANR	4819781	Identifier	argv		4818983	0					
ANR	4819782	Argument	shortopts		4818983	2					
ANR	4819783	Identifier	shortopts		4818983	0					
ANR	4819784	ElseStatement	else		4818983	0					
ANR	4819785	CompoundStatement		107:11:3548:3548	4818983	0					
ANR	4819786	ExpressionStatement	opt = '?'	252:8:8213:8222	4818983	0	True				
ANR	4819787	AssignmentExpression	opt = '?'		4818983	0		=			
ANR	4819788	Identifier	opt		4818983	0					
ANR	4819789	PrimaryExpression	'?'		4818983	1					
ANR	4819790	IfStatement	if ( my_opterr )		4818983	1					
ANR	4819791	Condition	my_opterr	253:11:8235:8243	4818983	0	True				
ANR	4819792	Identifier	my_opterr		4818983	0					
ANR	4819793	ExpressionStatement	"fprintf ( stderr , ""%s: unrecognized option `%s'\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"	253:22:8246:8377	4818983	1	True				
ANR	4819794	CallExpression	"fprintf ( stderr , ""%s: unrecognized option `%s'\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"		4818983	0					
ANR	4819795	Callee	fprintf		4818983	0					
ANR	4819796	Identifier	fprintf		4818983	0					
ANR	4819797	ArgumentList	stderr		4818983	1					
ANR	4819798	Argument	stderr		4818983	0					
ANR	4819799	Identifier	stderr		4818983	0					
ANR	4819800	Argument	"""%s: unrecognized option `%s'\\n"""		4818983	1					
ANR	4819801	PrimaryExpression	"""%s: unrecognized option `%s'\\n"""		4818983	0					
ANR	4819802	Argument	argv [ 0 ]		4818983	2					
ANR	4819803	ArrayIndexing	argv [ 0 ]		4818983	0					
ANR	4819804	Identifier	argv		4818983	0					
ANR	4819805	PrimaryExpression	0		4818983	1					
ANR	4819806	Argument	argv [ my_optind ++ ]		4818983	3					
ANR	4819807	ArrayIndexing	argv [ my_optind ++ ]		4818983	0					
ANR	4819808	Identifier	argv		4818983	0					
ANR	4819809	PostIncDecOperationExpression	my_optind ++		4818983	1					
ANR	4819810	Identifier	my_optind		4818983	0					
ANR	4819811	IncDec	++		4818983	1					
ANR	4819812	ElseStatement	else		4818983	0					
ANR	4819813	CompoundStatement		113:11:3743:3743	4818983	0					
ANR	4819814	ExpressionStatement	opt = '?'	258:6:8406:8415	4818983	0	True				
ANR	4819815	AssignmentExpression	opt = '?'		4818983	0		=			
ANR	4819816	Identifier	opt		4818983	0					
ANR	4819817	PrimaryExpression	'?'		4818983	1					
ANR	4819818	IfStatement	if ( my_opterr )		4818983	1					
ANR	4819819	Condition	my_opterr	259:9:8426:8434	4818983	0	True				
ANR	4819820	Identifier	my_opterr		4818983	0					
ANR	4819821	ExpressionStatement	"fprintf ( stderr , ""%s: option `%s' is ambiguous\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"	259:20:8437:8564	4818983	1	True				
ANR	4819822	CallExpression	"fprintf ( stderr , ""%s: option `%s' is ambiguous\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"		4818983	0					
ANR	4819823	Callee	fprintf		4818983	0					
ANR	4819824	Identifier	fprintf		4818983	0					
ANR	4819825	ArgumentList	stderr		4818983	1					
ANR	4819826	Argument	stderr		4818983	0					
ANR	4819827	Identifier	stderr		4818983	0					
ANR	4819828	Argument	"""%s: option `%s' is ambiguous\\n"""		4818983	1					
ANR	4819829	PrimaryExpression	"""%s: option `%s' is ambiguous\\n"""		4818983	0					
ANR	4819830	Argument	argv [ 0 ]		4818983	2					
ANR	4819831	ArrayIndexing	argv [ 0 ]		4818983	0					
ANR	4819832	Identifier	argv		4818983	0					
ANR	4819833	PrimaryExpression	0		4818983	1					
ANR	4819834	Argument	argv [ my_optind ++ ]		4818983	3					
ANR	4819835	ArrayIndexing	argv [ my_optind ++ ]		4818983	0					
ANR	4819836	Identifier	argv		4818983	0					
ANR	4819837	PostIncDecOperationExpression	my_optind ++		4818983	1					
ANR	4819838	Identifier	my_optind		4818983	0					
ANR	4819839	IncDec	++		4818983	1					
ANR	4819840	IfStatement	if ( my_optind > argc )		4818983	5					
ANR	4819841	Condition	my_optind > argc	264:6:8582:8597	4818983	0	True				
ANR	4819842	RelationalExpression	my_optind > argc		4818983	0		>			
ANR	4819843	Identifier	my_optind		4818983	0					
ANR	4819844	Identifier	argc		4818983	1					
ANR	4819845	ExpressionStatement	my_optind = argc	264:24:8600:8616	4818983	1	True				
ANR	4819846	AssignmentExpression	my_optind = argc		4818983	0		=			
ANR	4819847	Identifier	my_optind		4818983	0					
ANR	4819848	Identifier	argc		4818983	1					
ANR	4819849	ReturnStatement	return opt ;	265:2:8620:8630	4818983	6	True				
ANR	4819850	Identifier	opt		4818983	0					
ANR	4819851	ReturnType	int		4818983	1					
ANR	4819852	Identifier	_my_getopt_internal		4818983	2					
ANR	4819853	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind , int long_only"		4818983	3					
ANR	4819854	Parameter	int argc	142:24:4504:4511	4818983	0	True				
ANR	4819855	ParameterType	int		4818983	0					
ANR	4819856	Identifier	argc		4818983	1					
ANR	4819857	Parameter	char * argv [ ]	142:34:4514:4526	4818983	1	True				
ANR	4819858	ParameterType	char * [ ]		4818983	0					
ANR	4819859	Identifier	argv		4818983	1					
ANR	4819860	Parameter	const char * shortopts	142:49:4529:4549	4818983	2	True				
ANR	4819861	ParameterType	const char *		4818983	0					
ANR	4819862	Identifier	shortopts		4818983	1					
ANR	4819863	Parameter	const struct option * longopts	143:21:4573:4601	4818983	3	True				
ANR	4819864	ParameterType	const struct option *		4818983	0					
ANR	4819865	Identifier	longopts		4818983	1					
ANR	4819866	Parameter	int * longind	143:52:4604:4615	4818983	4	True				
ANR	4819867	ParameterType	int *		4818983	0					
ANR	4819868	Identifier	longind		4818983	1					
ANR	4819869	Parameter	int long_only	144:21:4639:4651	4818983	5	True				
ANR	4819870	ParameterType	int		4818983	0					
ANR	4819871	Identifier	long_only		4818983	1					
ANR	4819872	CFGEntryNode	ENTRY		4818983		True				
ANR	4819873	CFGExitNode	EXIT		4818983		True				
ANR	4819874	Symbol	_my_getopt_internal		4818983						
ANR	4819875	Symbol	* * found		4818983						
ANR	4819876	Symbol	* argv		4818983						
ANR	4819877	Symbol	* ( longopts [ found ] . flag )		4818983						
ANR	4819878	Symbol	colon_mode		4818983						
ANR	4819879	Symbol	my_opterr		4818983						
ANR	4819880	Symbol	mode		4818983						
ANR	4819881	Symbol	longopts [ found ] . has_arg		4818983						
ANR	4819882	Symbol	strlen		4818983						
ANR	4819883	Symbol	strncmp		4818983						
ANR	4819884	Symbol	tmp		4818983						
ANR	4819885	Symbol	* shortoff		4818983						
ANR	4819886	Symbol	* * argv		4818983						
ANR	4819887	Symbol	my_getopt		4818983						
ANR	4819888	Symbol	* * i		4818983						
ANR	4819889	Symbol	offset		4818983						
ANR	4819890	Symbol	longind		4818983						
ANR	4819891	Symbol	longopts [ ind ] . name		4818983						
ANR	4819892	Symbol	stderr		4818983						
ANR	4819893	Symbol	long_only		4818983						
ANR	4819894	Symbol	opt		4818983						
ANR	4819895	Symbol	* * longopts		4818983						
ANR	4819896	Symbol	* my_optind		4818983						
ANR	4819897	Symbol	* ind		4818983						
ANR	4819898	Symbol	shortopts		4818983						
ANR	4819899	Symbol	* charind		4818983						
ANR	4819900	Symbol	* found		4818983						
ANR	4819901	Symbol	longopts [ found ] . val		4818983						
ANR	4819902	Symbol	charind		4818983						
ANR	4819903	Symbol	* longind		4818983						
ANR	4819904	Symbol	argv		4818983						
ANR	4819905	Symbol	longopts [ found ] . name		4818983						
ANR	4819906	Symbol	found		4818983						
ANR	4819907	Symbol	* longopts		4818983						
ANR	4819908	Symbol	ind		4818983						
ANR	4819909	Symbol	getenv		4818983						
ANR	4819910	Symbol	my_optopt		4818983						
ANR	4819911	Symbol	argc		4818983						
ANR	4819912	Symbol	* * my_optind		4818983						
ANR	4819913	Symbol	c		4818983						
ANR	4819914	Symbol	shortoff		4818983						
ANR	4819915	Symbol	i		4818983						
ANR	4819916	Symbol	j		4818983						
ANR	4819917	Symbol	k		4818983						
ANR	4819918	Symbol	hits		4818983						
ANR	4819919	Symbol	* i		4818983						
ANR	4819920	Symbol	my_optind		4818983						
ANR	4819921	Symbol	* k		4818983						
ANR	4819922	Symbol	* shortopts		4818983						
ANR	4819923	Symbol	* longopts [ found ] . flag		4818983						
ANR	4819924	Symbol	longopts		4818983						
ANR	4819925	Symbol	longopts [ found ] . flag		4818983						
ANR	4819926	Symbol	my_optarg		4818983						
ANR	4819927	Function	my_getopt_long	268:0:8635:8840							
ANR	4819928	FunctionDef	"my_getopt_long (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind)"		4819927	0					
ANR	4819929	CompoundStatement		270:0:8763:8840	4819927	0					
ANR	4819930	ReturnStatement	"return _my_getopt_internal ( argc , argv , shortopts , longopts , longind , 0 ) ;"	271:2:8767:8838	4819927	0	True				
ANR	4819931	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , 0 )"		4819927	0					
ANR	4819932	Callee	_my_getopt_internal		4819927	0					
ANR	4819933	Identifier	_my_getopt_internal		4819927	0					
ANR	4819934	ArgumentList	argc		4819927	1					
ANR	4819935	Argument	argc		4819927	0					
ANR	4819936	Identifier	argc		4819927	0					
ANR	4819937	Argument	argv		4819927	1					
ANR	4819938	Identifier	argv		4819927	0					
ANR	4819939	Argument	shortopts		4819927	2					
ANR	4819940	Identifier	shortopts		4819927	0					
ANR	4819941	Argument	longopts		4819927	3					
ANR	4819942	Identifier	longopts		4819927	0					
ANR	4819943	Argument	longind		4819927	4					
ANR	4819944	Identifier	longind		4819927	0					
ANR	4819945	Argument	0		4819927	5					
ANR	4819946	PrimaryExpression	0		4819927	0					
ANR	4819947	ReturnType	int		4819927	1					
ANR	4819948	Identifier	my_getopt_long		4819927	2					
ANR	4819949	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind"		4819927	3					
ANR	4819950	Parameter	int argc	268:19:8654:8661	4819927	0	True				
ANR	4819951	ParameterType	int		4819927	0					
ANR	4819952	Identifier	argc		4819927	1					
ANR	4819953	Parameter	char * argv [ ]	268:29:8664:8676	4819927	1	True				
ANR	4819954	ParameterType	char * [ ]		4819927	0					
ANR	4819955	Identifier	argv		4819927	1					
ANR	4819956	Parameter	const char * shortopts	268:44:8679:8699	4819927	2	True				
ANR	4819957	ParameterType	const char *		4819927	0					
ANR	4819958	Identifier	shortopts		4819927	1					
ANR	4819959	Parameter	const struct option * longopts	269:16:8718:8746	4819927	3	True				
ANR	4819960	ParameterType	const struct option *		4819927	0					
ANR	4819961	Identifier	longopts		4819927	1					
ANR	4819962	Parameter	int * longind	269:47:8749:8760	4819927	4	True				
ANR	4819963	ParameterType	int *		4819927	0					
ANR	4819964	Identifier	longind		4819927	1					
ANR	4819965	CFGEntryNode	ENTRY		4819927		True				
ANR	4819966	CFGExitNode	EXIT		4819927		True				
ANR	4819967	Symbol	argc		4819927						
ANR	4819968	Symbol	_my_getopt_internal		4819927						
ANR	4819969	Symbol	shortopts		4819927						
ANR	4819970	Symbol	longind		4819927						
ANR	4819971	Symbol	longopts		4819927						
ANR	4819972	Symbol	argv		4819927						
ANR	4819973	Function	my_getopt_long_only	274:0:8843:9053							
ANR	4819974	FunctionDef	"my_getopt_long_only (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind)"		4819973	0					
ANR	4819975	CompoundStatement		276:0:8976:9053	4819973	0					
ANR	4819976	ReturnStatement	"return _my_getopt_internal ( argc , argv , shortopts , longopts , longind , 1 ) ;"	277:2:8980:9051	4819973	0	True				
ANR	4819977	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , 1 )"		4819973	0					
ANR	4819978	Callee	_my_getopt_internal		4819973	0					
ANR	4819979	Identifier	_my_getopt_internal		4819973	0					
ANR	4819980	ArgumentList	argc		4819973	1					
ANR	4819981	Argument	argc		4819973	0					
ANR	4819982	Identifier	argc		4819973	0					
ANR	4819983	Argument	argv		4819973	1					
ANR	4819984	Identifier	argv		4819973	0					
ANR	4819985	Argument	shortopts		4819973	2					
ANR	4819986	Identifier	shortopts		4819973	0					
ANR	4819987	Argument	longopts		4819973	3					
ANR	4819988	Identifier	longopts		4819973	0					
ANR	4819989	Argument	longind		4819973	4					
ANR	4819990	Identifier	longind		4819973	0					
ANR	4819991	Argument	1		4819973	5					
ANR	4819992	PrimaryExpression	1		4819973	0					
ANR	4819993	ReturnType	int		4819973	1					
ANR	4819994	Identifier	my_getopt_long_only		4819973	2					
ANR	4819995	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind"		4819973	3					
ANR	4819996	Parameter	int argc	274:24:8867:8874	4819973	0	True				
ANR	4819997	ParameterType	int		4819973	0					
ANR	4819998	Identifier	argc		4819973	1					
ANR	4819999	Parameter	char * argv [ ]	274:34:8877:8889	4819973	1	True				
ANR	4820000	ParameterType	char * [ ]		4819973	0					
ANR	4820001	Identifier	argv		4819973	1					
ANR	4820002	Parameter	const char * shortopts	274:49:8892:8912	4819973	2	True				
ANR	4820003	ParameterType	const char *		4819973	0					
ANR	4820004	Identifier	shortopts		4819973	1					
ANR	4820005	Parameter	const struct option * longopts	275:16:8931:8959	4819973	3	True				
ANR	4820006	ParameterType	const struct option *		4819973	0					
ANR	4820007	Identifier	longopts		4819973	1					
ANR	4820008	Parameter	int * longind	275:47:8962:8973	4819973	4	True				
ANR	4820009	ParameterType	int *		4819973	0					
ANR	4820010	Identifier	longind		4819973	1					
ANR	4820011	CFGEntryNode	ENTRY		4819973		True				
ANR	4820012	CFGExitNode	EXIT		4819973		True				
ANR	4820013	Symbol	argc		4819973						
ANR	4820014	Symbol	_my_getopt_internal		4819973						
ANR	4820015	Symbol	shortopts		4819973						
ANR	4820016	Symbol	longind		4819973						
ANR	4820017	Symbol	longopts		4819973						
ANR	4820018	Symbol	argv		4819973						
