command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1033273	File	data/converged/CVE-2011-4930_htcondor/credd.windows.cpp								
ANR	1033274	DeclStmt									
ANR	1033275	Decl							CredDaemon	CredDaemon *	credd
ANR	1033276	Function	CredDaemon :: CredDaemon	35:0:1139:2122							
ANR	1033277	FunctionDef	CredDaemon :: CredDaemon ()		1033276	0					
ANR	1033278	CompoundStatement		36:0:1207:2122	1033276	0					
ANR	1033279	ExpressionStatement	reconfig ( )	38:1:1211:1221	1033276	0	True				
ANR	1033280	CallExpression	reconfig ( )		1033276	0					
ANR	1033281	Callee	reconfig		1033276	0					
ANR	1033282	Identifier	reconfig		1033276	0					
ANR	1033283	ArgumentList			1033276	1					
ANR	1033284	ExpressionStatement	"daemonCore -> Register_Command ( STORE_CRED , ""STORE_CRED"" , ( CommandHandler ) & store_cred_handler , ""store_cred_handler"" , NULL , WRITE , D_FULLDEBUG )"	41:1:1282:1450	1033276	1	True				
ANR	1033285	CallExpression	"daemonCore -> Register_Command ( STORE_CRED , ""STORE_CRED"" , ( CommandHandler ) & store_cred_handler , ""store_cred_handler"" , NULL , WRITE , D_FULLDEBUG )"		1033276	0					
ANR	1033286	Callee	daemonCore -> Register_Command		1033276	0					
ANR	1033287	PtrMemberAccess	daemonCore -> Register_Command		1033276	0					
ANR	1033288	Identifier	daemonCore		1033276	0					
ANR	1033289	Identifier	Register_Command		1033276	1					
ANR	1033290	ArgumentList	STORE_CRED		1033276	1					
ANR	1033291	Argument	STORE_CRED		1033276	0					
ANR	1033292	Identifier	STORE_CRED		1033276	0					
ANR	1033293	Argument	"""STORE_CRED"""		1033276	1					
ANR	1033294	PrimaryExpression	"""STORE_CRED"""		1033276	0					
ANR	1033295	Argument	( CommandHandler ) & store_cred_handler		1033276	2					
ANR	1033296	CastExpression	( CommandHandler ) & store_cred_handler		1033276	0					
ANR	1033297	CastTarget	CommandHandler		1033276	0					
ANR	1033298	UnaryOperationExpression	& store_cred_handler		1033276	1					
ANR	1033299	UnaryOperator	&		1033276	0					
ANR	1033300	Identifier	store_cred_handler		1033276	1					
ANR	1033301	Argument	"""store_cred_handler"""		1033276	3					
ANR	1033302	PrimaryExpression	"""store_cred_handler"""		1033276	0					
ANR	1033303	Argument	NULL		1033276	4					
ANR	1033304	Identifier	NULL		1033276	0					
ANR	1033305	Argument	WRITE		1033276	5					
ANR	1033306	Identifier	WRITE		1033276	0					
ANR	1033307	Argument	D_FULLDEBUG		1033276	6					
ANR	1033308	Identifier	D_FULLDEBUG		1033276	0					
ANR	1033309	ExpressionStatement	"daemonCore -> Register_Command ( CREDD_GET_PASSWD , ""CREDD_GET_PASSWD"" , ( CommandHandlercpp ) & CredDaemon :: get_passwd_handler , ""get_passwd_handler"" , this , DAEMON , D_FULLDEBUG )"	47:1:1507:1703	1033276	2	True				
ANR	1033310	CallExpression	"daemonCore -> Register_Command ( CREDD_GET_PASSWD , ""CREDD_GET_PASSWD"" , ( CommandHandlercpp ) & CredDaemon :: get_passwd_handler , ""get_passwd_handler"" , this , DAEMON , D_FULLDEBUG )"		1033276	0					
ANR	1033311	Callee	daemonCore -> Register_Command		1033276	0					
ANR	1033312	PtrMemberAccess	daemonCore -> Register_Command		1033276	0					
ANR	1033313	Identifier	daemonCore		1033276	0					
ANR	1033314	Identifier	Register_Command		1033276	1					
ANR	1033315	ArgumentList	CREDD_GET_PASSWD		1033276	1					
ANR	1033316	Argument	CREDD_GET_PASSWD		1033276	0					
ANR	1033317	Identifier	CREDD_GET_PASSWD		1033276	0					
ANR	1033318	Argument	"""CREDD_GET_PASSWD"""		1033276	1					
ANR	1033319	PrimaryExpression	"""CREDD_GET_PASSWD"""		1033276	0					
ANR	1033320	Argument	( CommandHandlercpp ) & CredDaemon :: get_passwd_handler		1033276	2					
ANR	1033321	CastExpression	( CommandHandlercpp ) & CredDaemon :: get_passwd_handler		1033276	0					
ANR	1033322	CastTarget	CommandHandlercpp		1033276	0					
ANR	1033323	UnaryOperationExpression	& CredDaemon :: get_passwd_handler		1033276	1					
ANR	1033324	UnaryOperator	&		1033276	0					
ANR	1033325	Identifier	CredDaemon :: get_passwd_handler		1033276	1					
ANR	1033326	Argument	"""get_passwd_handler"""		1033276	3					
ANR	1033327	PrimaryExpression	"""get_passwd_handler"""		1033276	0					
ANR	1033328	Argument	this		1033276	4					
ANR	1033329	Identifier	this		1033276	0					
ANR	1033330	Argument	DAEMON		1033276	5					
ANR	1033331	Identifier	DAEMON		1033276	0					
ANR	1033332	Argument	D_FULLDEBUG		1033276	6					
ANR	1033333	Identifier	D_FULLDEBUG		1033276	0					
ANR	1033334	ExpressionStatement	"daemonCore -> Register_Command ( CREDD_NOP , ""CREDD_NOP"" , ( CommandHandlercpp ) & CredDaemon :: nop_handler , ""nop_handler"" , this , DAEMON , D_FULLDEBUG )"	53:1:1751:1916	1033276	3	True				
ANR	1033335	CallExpression	"daemonCore -> Register_Command ( CREDD_NOP , ""CREDD_NOP"" , ( CommandHandlercpp ) & CredDaemon :: nop_handler , ""nop_handler"" , this , DAEMON , D_FULLDEBUG )"		1033276	0					
ANR	1033336	Callee	daemonCore -> Register_Command		1033276	0					
ANR	1033337	PtrMemberAccess	daemonCore -> Register_Command		1033276	0					
ANR	1033338	Identifier	daemonCore		1033276	0					
ANR	1033339	Identifier	Register_Command		1033276	1					
ANR	1033340	ArgumentList	CREDD_NOP		1033276	1					
ANR	1033341	Argument	CREDD_NOP		1033276	0					
ANR	1033342	Identifier	CREDD_NOP		1033276	0					
ANR	1033343	Argument	"""CREDD_NOP"""		1033276	1					
ANR	1033344	PrimaryExpression	"""CREDD_NOP"""		1033276	0					
ANR	1033345	Argument	( CommandHandlercpp ) & CredDaemon :: nop_handler		1033276	2					
ANR	1033346	CastExpression	( CommandHandlercpp ) & CredDaemon :: nop_handler		1033276	0					
ANR	1033347	CastTarget	CommandHandlercpp		1033276	0					
ANR	1033348	UnaryOperationExpression	& CredDaemon :: nop_handler		1033276	1					
ANR	1033349	UnaryOperator	&		1033276	0					
ANR	1033350	Identifier	CredDaemon :: nop_handler		1033276	1					
ANR	1033351	Argument	"""nop_handler"""		1033276	3					
ANR	1033352	PrimaryExpression	"""nop_handler"""		1033276	0					
ANR	1033353	Argument	this		1033276	4					
ANR	1033354	Identifier	this		1033276	0					
ANR	1033355	Argument	DAEMON		1033276	5					
ANR	1033356	Identifier	DAEMON		1033276	0					
ANR	1033357	Argument	D_FULLDEBUG		1033276	6					
ANR	1033358	Identifier	D_FULLDEBUG		1033276	0					
ANR	1033359	ExpressionStatement	"daemonCore -> Register_Timer ( 0 , m_update_collector_interval , ( TimerHandlercpp ) & CredDaemon :: update_collector , ""update_collector"" , this )"	59:1:1986:2120	1033276	4	True				
ANR	1033360	CallExpression	"daemonCore -> Register_Timer ( 0 , m_update_collector_interval , ( TimerHandlercpp ) & CredDaemon :: update_collector , ""update_collector"" , this )"		1033276	0					
ANR	1033361	Callee	daemonCore -> Register_Timer		1033276	0					
ANR	1033362	PtrMemberAccess	daemonCore -> Register_Timer		1033276	0					
ANR	1033363	Identifier	daemonCore		1033276	0					
ANR	1033364	Identifier	Register_Timer		1033276	1					
ANR	1033365	ArgumentList	0		1033276	1					
ANR	1033366	Argument	0		1033276	0					
ANR	1033367	PrimaryExpression	0		1033276	0					
ANR	1033368	Argument	m_update_collector_interval		1033276	1					
ANR	1033369	Identifier	m_update_collector_interval		1033276	0					
ANR	1033370	Argument	( TimerHandlercpp ) & CredDaemon :: update_collector		1033276	2					
ANR	1033371	CastExpression	( TimerHandlercpp ) & CredDaemon :: update_collector		1033276	0					
ANR	1033372	CastTarget	TimerHandlercpp		1033276	0					
ANR	1033373	UnaryOperationExpression	& CredDaemon :: update_collector		1033276	1					
ANR	1033374	UnaryOperator	&		1033276	0					
ANR	1033375	Identifier	CredDaemon :: update_collector		1033276	1					
ANR	1033376	Argument	"""update_collector"""		1033276	3					
ANR	1033377	PrimaryExpression	"""update_collector"""		1033276	0					
ANR	1033378	Argument	this		1033276	4					
ANR	1033379	Identifier	this		1033276	0					
ANR	1033380	Identifier	CredDaemon :: CredDaemon		1033276	1					
ANR	1033381	ParameterList			1033276	2					
ANR	1033382	CFGEntryNode	ENTRY		1033276		True				
ANR	1033383	CFGExitNode	EXIT		1033276		True				
ANR	1033384	Symbol	& CredDaemon :: nop_handler		1033276						
ANR	1033385	Symbol	NULL		1033276						
ANR	1033386	Symbol	& CredDaemon :: get_passwd_handler		1033276						
ANR	1033387	Symbol	this		1033276						
ANR	1033388	Symbol	D_FULLDEBUG		1033276						
ANR	1033389	Symbol	CREDD_GET_PASSWD		1033276						
ANR	1033390	Symbol	& CredDaemon :: update_collector		1033276						
ANR	1033391	Symbol	CREDD_NOP		1033276						
ANR	1033392	Symbol	WRITE		1033276						
ANR	1033393	Symbol	m_update_collector_interval		1033276						
ANR	1033394	Symbol	& store_cred_handler		1033276						
ANR	1033395	Symbol	STORE_CRED		1033276						
ANR	1033396	Symbol	daemonCore		1033276						
ANR	1033397	Symbol	DAEMON		1033276						
ANR	1033398	Function	CredDaemon :: ~CredDaemon	63:0:2125:2254							
ANR	1033399	FunctionDef	CredDaemon :: ~CredDaemon ()		1033398	0					
ANR	1033400	CompoundStatement		64:0:2151:2254	1033398	0					
ANR	1033401	ExpressionStatement	invalidate_ad ( )	66:1:2194:2209	1033398	0	True				
ANR	1033402	CallExpression	invalidate_ad ( )		1033398	0					
ANR	1033403	Callee	invalidate_ad		1033398	0					
ANR	1033404	Identifier	invalidate_ad		1033398	0					
ANR	1033405	ArgumentList			1033398	1					
ANR	1033406	IfStatement	if ( m_name != NULL )		1033398	1					
ANR	1033407	Condition	m_name != NULL	68:5:2217:2230	1033398	0	True				
ANR	1033408	EqualityExpression	m_name != NULL		1033398	0		!=			
ANR	1033409	Identifier	m_name		1033398	0					
ANR	1033410	Identifier	NULL		1033398	1					
ANR	1033411	CompoundStatement		5:21:81:81	1033398	1					
ANR	1033412	ExpressionStatement	free ( m_name )	69:2:2237:2249	1033398	0	True				
ANR	1033413	CallExpression	free ( m_name )		1033398	0					
ANR	1033414	Callee	free		1033398	0					
ANR	1033415	Identifier	free		1033398	0					
ANR	1033416	ArgumentList	m_name		1033398	1					
ANR	1033417	Argument	m_name		1033398	0					
ANR	1033418	Identifier	m_name		1033398	0					
ANR	1033419	Identifier	CredDaemon :: ~CredDaemon		1033398	1					
ANR	1033420	ParameterList			1033398	2					
ANR	1033421	CFGEntryNode	ENTRY		1033398		True				
ANR	1033422	CFGExitNode	EXIT		1033398		True				
ANR	1033423	Symbol	NULL		1033398						
ANR	1033424	Symbol	m_name		1033398						
ANR	1033425	Function	CredDaemon :: reconfig	73:0:2257:3329							
ANR	1033426	FunctionDef	CredDaemon :: reconfig ()		1033425	0					
ANR	1033427	CompoundStatement		75:0:2285:3329	1033425	0					
ANR	1033428	IfStatement	if ( m_name != NULL )		1033425	0					
ANR	1033429	Condition	m_name != NULL	83:5:2664:2677	1033425	0	True				
ANR	1033430	EqualityExpression	m_name != NULL		1033425	0		!=			
ANR	1033431	Identifier	m_name		1033425	0					
ANR	1033432	Identifier	NULL		1033425	1					
ANR	1033433	CompoundStatement		9:21:394:394	1033425	1					
ANR	1033434	ExpressionStatement	free ( m_name )	84:2:2684:2696	1033425	0	True				
ANR	1033435	CallExpression	free ( m_name )		1033425	0					
ANR	1033436	Callee	free		1033425	0					
ANR	1033437	Identifier	free		1033425	0					
ANR	1033438	ArgumentList	m_name		1033425	1					
ANR	1033439	Argument	m_name		1033425	0					
ANR	1033440	Identifier	m_name		1033425	0					
ANR	1033441	ExpressionStatement	"m_name = param ( ""CREDD_HOST"" )"	86:1:2702:2730	1033425	1	True				
ANR	1033442	AssignmentExpression	"m_name = param ( ""CREDD_HOST"" )"		1033425	0		=			
ANR	1033443	Identifier	m_name		1033425	0					
ANR	1033444	CallExpression	"param ( ""CREDD_HOST"" )"		1033425	1					
ANR	1033445	Callee	param		1033425	0					
ANR	1033446	Identifier	param		1033425	0					
ANR	1033447	ArgumentList	"""CREDD_HOST"""		1033425	1					
ANR	1033448	Argument	"""CREDD_HOST"""		1033425	0					
ANR	1033449	PrimaryExpression	"""CREDD_HOST"""		1033425	0					
ANR	1033450	IfStatement	if ( m_name == NULL )		1033425	2					
ANR	1033451	Condition	m_name == NULL	87:5:2737:2750	1033425	0	True				
ANR	1033452	EqualityExpression	m_name == NULL		1033425	0		==			
ANR	1033453	Identifier	m_name		1033425	0					
ANR	1033454	Identifier	NULL		1033425	1					
ANR	1033455	CompoundStatement		14:2:471:504	1033425	1					
ANR	1033456	IdentifierDeclStatement	char * tmp = default_daemon_name ( ) ;	88:2:2757:2790	1033425	0	True				
ANR	1033457	IdentifierDecl	* tmp = default_daemon_name ( )		1033425	0					
ANR	1033458	IdentifierDeclType	char *		1033425	0					
ANR	1033459	Identifier	tmp		1033425	1					
ANR	1033460	AssignmentExpression	* tmp = default_daemon_name ( )		1033425	2		=			
ANR	1033461	Identifier	tmp		1033425	0					
ANR	1033462	CallExpression	default_daemon_name ( )		1033425	1					
ANR	1033463	Callee	default_daemon_name		1033425	0					
ANR	1033464	Identifier	default_daemon_name		1033425	0					
ANR	1033465	ArgumentList			1033425	1					
ANR	1033466	ExpressionStatement	ASSERT ( tmp != NULL )	89:2:2794:2813	1033425	1	True				
ANR	1033467	CallExpression	ASSERT ( tmp != NULL )		1033425	0					
ANR	1033468	Callee	ASSERT		1033425	0					
ANR	1033469	Identifier	ASSERT		1033425	0					
ANR	1033470	ArgumentList	tmp != NULL		1033425	1					
ANR	1033471	Argument	tmp != NULL		1033425	0					
ANR	1033472	EqualityExpression	tmp != NULL		1033425	0		!=			
ANR	1033473	Identifier	tmp		1033425	0					
ANR	1033474	Identifier	NULL		1033425	1					
ANR	1033475	ExpressionStatement	m_name = strdup ( tmp )	90:2:2817:2837	1033425	2	True				
ANR	1033476	AssignmentExpression	m_name = strdup ( tmp )		1033425	0		=			
ANR	1033477	Identifier	m_name		1033425	0					
ANR	1033478	CallExpression	strdup ( tmp )		1033425	1					
ANR	1033479	Callee	strdup		1033425	0					
ANR	1033480	Identifier	strdup		1033425	0					
ANR	1033481	ArgumentList	tmp		1033425	1					
ANR	1033482	Argument	tmp		1033425	0					
ANR	1033483	Identifier	tmp		1033425	0					
ANR	1033484	ExpressionStatement	ASSERT ( m_name != NULL )	91:2:2841:2863	1033425	3	True				
ANR	1033485	CallExpression	ASSERT ( m_name != NULL )		1033425	0					
ANR	1033486	Callee	ASSERT		1033425	0					
ANR	1033487	Identifier	ASSERT		1033425	0					
ANR	1033488	ArgumentList	m_name != NULL		1033425	1					
ANR	1033489	Argument	m_name != NULL		1033425	0					
ANR	1033490	EqualityExpression	m_name != NULL		1033425	0		!=			
ANR	1033491	Identifier	m_name		1033425	0					
ANR	1033492	Identifier	NULL		1033425	1					
ANR	1033493	Statement	delete	92:2:2867:2872	1033425	4	True				
ANR	1033494	Statement	[	92:8:2873:2873	1033425	5	True				
ANR	1033495	Statement	]	92:9:2874:2874	1033425	6	True				
ANR	1033496	ExpressionStatement	tmp	92:11:2876:2879	1033425	7	True				
ANR	1033497	Identifier	tmp		1033425	0					
ANR	1033498	IfStatement	if ( m_name == NULL )		1033425	3					
ANR	1033499	Condition	m_name == NULL	94:4:2888:2901	1033425	0	True				
ANR	1033500	EqualityExpression	m_name == NULL		1033425	0		==			
ANR	1033501	Identifier	m_name		1033425	0					
ANR	1033502	Identifier	NULL		1033425	1					
ANR	1033503	CompoundStatement		20:20:618:618	1033425	1					
ANR	1033504	ExpressionStatement	"EXCEPT ( ""default_daemon_name() returned NULL"" )"	95:2:2908:2953	1033425	0	True				
ANR	1033505	CallExpression	"EXCEPT ( ""default_daemon_name() returned NULL"" )"		1033425	0					
ANR	1033506	Callee	EXCEPT		1033425	0					
ANR	1033507	Identifier	EXCEPT		1033425	0					
ANR	1033508	ArgumentList	"""default_daemon_name() returned NULL"""		1033425	1					
ANR	1033509	Argument	"""default_daemon_name() returned NULL"""		1033425	0					
ANR	1033510	PrimaryExpression	"""default_daemon_name() returned NULL"""		1033425	0					
ANR	1033511	ExpressionStatement	"m_update_collector_interval = param_integer ( ""CREDD_UPDATE_INTERVAL"" , 5 * MINUTE )"	99:1:3002:3096	1033425	4	True				
ANR	1033512	AssignmentExpression	"m_update_collector_interval = param_integer ( ""CREDD_UPDATE_INTERVAL"" , 5 * MINUTE )"		1033425	0		=			
ANR	1033513	Identifier	m_update_collector_interval		1033425	0					
ANR	1033514	CallExpression	"param_integer ( ""CREDD_UPDATE_INTERVAL"" , 5 * MINUTE )"		1033425	1					
ANR	1033515	Callee	param_integer		1033425	0					
ANR	1033516	Identifier	param_integer		1033425	0					
ANR	1033517	ArgumentList	"""CREDD_UPDATE_INTERVAL"""		1033425	1					
ANR	1033518	Argument	"""CREDD_UPDATE_INTERVAL"""		1033425	0					
ANR	1033519	PrimaryExpression	"""CREDD_UPDATE_INTERVAL"""		1033425	0					
ANR	1033520	Argument	5 * MINUTE		1033425	1					
ANR	1033521	MultiplicativeExpression	5 * MINUTE		1033425	0		*			
ANR	1033522	PrimaryExpression	5		1033425	0					
ANR	1033523	Identifier	MINUTE		1033425	1					
ANR	1033524	ExpressionStatement	initialize_classad ( )	103:1:3124:3144	1033425	5	True				
ANR	1033525	CallExpression	initialize_classad ( )		1033425	0					
ANR	1033526	Callee	initialize_classad		1033425	0					
ANR	1033527	Identifier	initialize_classad		1033425	0					
ANR	1033528	ArgumentList			1033425	1					
ANR	1033529	IfStatement	if ( m_update_collector_tid != - 1 )		1033425	6					
ANR	1033530	Condition	m_update_collector_tid != - 1	106:5:3211:3238	1033425	0	True				
ANR	1033531	EqualityExpression	m_update_collector_tid != - 1		1033425	0		!=			
ANR	1033532	Identifier	m_update_collector_tid		1033425	0					
ANR	1033533	UnaryOperationExpression	- 1		1033425	1					
ANR	1033534	UnaryOperator	-		1033425	0					
ANR	1033535	PrimaryExpression	1		1033425	1					
ANR	1033536	CompoundStatement		32:35:955:955	1033425	1					
ANR	1033537	ExpressionStatement	"daemonCore -> Reset_Timer ( m_update_collector_tid , 0 , m_update_collector_interval )"	107:2:3245:3324	1033425	0	True				
ANR	1033538	CallExpression	"daemonCore -> Reset_Timer ( m_update_collector_tid , 0 , m_update_collector_interval )"		1033425	0					
ANR	1033539	Callee	daemonCore -> Reset_Timer		1033425	0					
ANR	1033540	PtrMemberAccess	daemonCore -> Reset_Timer		1033425	0					
ANR	1033541	Identifier	daemonCore		1033425	0					
ANR	1033542	Identifier	Reset_Timer		1033425	1					
ANR	1033543	ArgumentList	m_update_collector_tid		1033425	1					
ANR	1033544	Argument	m_update_collector_tid		1033425	0					
ANR	1033545	Identifier	m_update_collector_tid		1033425	0					
ANR	1033546	Argument	0		1033425	1					
ANR	1033547	PrimaryExpression	0		1033425	0					
ANR	1033548	Argument	m_update_collector_interval		1033425	2					
ANR	1033549	Identifier	m_update_collector_interval		1033425	0					
ANR	1033550	ReturnType	void		1033425	1					
ANR	1033551	Identifier	CredDaemon :: reconfig		1033425	2					
ANR	1033552	ParameterList			1033425	3					
ANR	1033553	CFGEntryNode	ENTRY		1033425		True				
ANR	1033554	CFGExitNode	EXIT		1033425		True				
ANR	1033555	Symbol	NULL		1033425						
ANR	1033556	Symbol	m_name		1033425						
ANR	1033557	Symbol	param		1033425						
ANR	1033558	Symbol	tmp		1033425						
ANR	1033559	Symbol	daemonCore		1033425						
ANR	1033560	Symbol	param_integer		1033425						
ANR	1033561	Symbol	MINUTE		1033425						
ANR	1033562	Symbol	m_update_collector_tid		1033425						
ANR	1033563	Symbol	strdup		1033425						
ANR	1033564	Symbol	default_daemon_name		1033425						
ANR	1033565	Symbol	m_update_collector_interval		1033425						
ANR	1033566	Function	CredDaemon :: initialize_classad	111:0:3332:3840							
ANR	1033567	FunctionDef	CredDaemon :: initialize_classad ()		1033566	0					
ANR	1033568	CompoundStatement		113:0:3370:3840	1033566	0					
ANR	1033569	ExpressionStatement	m_classad . Clear ( )	114:1:3373:3390	1033566	0	True				
ANR	1033570	CallExpression	m_classad . Clear ( )		1033566	0					
ANR	1033571	Callee	m_classad . Clear		1033566	0					
ANR	1033572	MemberAccess	m_classad . Clear		1033566	0					
ANR	1033573	Identifier	m_classad		1033566	0					
ANR	1033574	Identifier	Clear		1033566	1					
ANR	1033575	ArgumentList			1033566	1					
ANR	1033576	ExpressionStatement	m_classad . SetMyTypeName ( CREDD_ADTYPE )	116:1:3394:3431	1033566	1	True				
ANR	1033577	CallExpression	m_classad . SetMyTypeName ( CREDD_ADTYPE )		1033566	0					
ANR	1033578	Callee	m_classad . SetMyTypeName		1033566	0					
ANR	1033579	MemberAccess	m_classad . SetMyTypeName		1033566	0					
ANR	1033580	Identifier	m_classad		1033566	0					
ANR	1033581	Identifier	SetMyTypeName		1033566	1					
ANR	1033582	ArgumentList	CREDD_ADTYPE		1033566	1					
ANR	1033583	Argument	CREDD_ADTYPE		1033566	0					
ANR	1033584	Identifier	CREDD_ADTYPE		1033566	0					
ANR	1033585	ExpressionStatement	"m_classad . SetTargetTypeName ( """" )"	117:1:3434:3465	1033566	2	True				
ANR	1033586	CallExpression	"m_classad . SetTargetTypeName ( """" )"		1033566	0					
ANR	1033587	Callee	m_classad . SetTargetTypeName		1033566	0					
ANR	1033588	MemberAccess	m_classad . SetTargetTypeName		1033566	0					
ANR	1033589	Identifier	m_classad		1033566	0					
ANR	1033590	Identifier	SetTargetTypeName		1033566	1					
ANR	1033591	ArgumentList	""""""		1033566	1					
ANR	1033592	Argument	""""""		1033566	0					
ANR	1033593	PrimaryExpression	""""""		1033566	0					
ANR	1033594	IdentifierDeclStatement	MyString line ;	119:1:3469:3482	1033566	3	True				
ANR	1033595	IdentifierDecl	line		1033566	0					
ANR	1033596	IdentifierDeclType	MyString		1033566	0					
ANR	1033597	Identifier	line		1033566	1					
ANR	1033598	ExpressionStatement	"line . sprintf ( ""%s = \\""%s\\"""" , ATTR_NAME , m_name )"	121:1:3486:3533	1033566	4	True				
ANR	1033599	CallExpression	"line . sprintf ( ""%s = \\""%s\\"""" , ATTR_NAME , m_name )"		1033566	0					
ANR	1033600	Callee	line . sprintf		1033566	0					
ANR	1033601	MemberAccess	line . sprintf		1033566	0					
ANR	1033602	Identifier	line		1033566	0					
ANR	1033603	Identifier	sprintf		1033566	1					
ANR	1033604	ArgumentList	"""%s = \\""%s\\"""""		1033566	1					
ANR	1033605	Argument	"""%s = \\""%s\\"""""		1033566	0					
ANR	1033606	PrimaryExpression	"""%s = \\""%s\\"""""		1033566	0					
ANR	1033607	Argument	ATTR_NAME		1033566	1					
ANR	1033608	Identifier	ATTR_NAME		1033566	0					
ANR	1033609	Argument	m_name		1033566	2					
ANR	1033610	Identifier	m_name		1033566	0					
ANR	1033611	ExpressionStatement	m_classad . Insert ( line . Value ( ) )	122:1:3536:3566	1033566	5	True				
ANR	1033612	CallExpression	m_classad . Insert ( line . Value ( ) )		1033566	0					
ANR	1033613	Callee	m_classad . Insert		1033566	0					
ANR	1033614	MemberAccess	m_classad . Insert		1033566	0					
ANR	1033615	Identifier	m_classad		1033566	0					
ANR	1033616	Identifier	Insert		1033566	1					
ANR	1033617	ArgumentList	line . Value ( )		1033566	1					
ANR	1033618	Argument	line . Value ( )		1033566	0					
ANR	1033619	CallExpression	line . Value ( )		1033566	0					
ANR	1033620	Callee	line . Value		1033566	0					
ANR	1033621	MemberAccess	line . Value		1033566	0					
ANR	1033622	Identifier	line		1033566	0					
ANR	1033623	Identifier	Value		1033566	1					
ANR	1033624	ArgumentList			1033566	1					
ANR	1033625	ExpressionStatement	"line . sprintf ( ""%s = \\""%s\\"""" , ATTR_CREDD_IP_ADDR , daemonCore -> InfoCommandSinfulString ( ) )"	124:1:3570:3661	1033566	6	True				
ANR	1033626	CallExpression	"line . sprintf ( ""%s = \\""%s\\"""" , ATTR_CREDD_IP_ADDR , daemonCore -> InfoCommandSinfulString ( ) )"		1033566	0					
ANR	1033627	Callee	line . sprintf		1033566	0					
ANR	1033628	MemberAccess	line . sprintf		1033566	0					
ANR	1033629	Identifier	line		1033566	0					
ANR	1033630	Identifier	sprintf		1033566	1					
ANR	1033631	ArgumentList	"""%s = \\""%s\\"""""		1033566	1					
ANR	1033632	Argument	"""%s = \\""%s\\"""""		1033566	0					
ANR	1033633	PrimaryExpression	"""%s = \\""%s\\"""""		1033566	0					
ANR	1033634	Argument	ATTR_CREDD_IP_ADDR		1033566	1					
ANR	1033635	Identifier	ATTR_CREDD_IP_ADDR		1033566	0					
ANR	1033636	Argument	daemonCore -> InfoCommandSinfulString ( )		1033566	2					
ANR	1033637	CallExpression	daemonCore -> InfoCommandSinfulString ( )		1033566	0					
ANR	1033638	Callee	daemonCore -> InfoCommandSinfulString		1033566	0					
ANR	1033639	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		1033566	0					
ANR	1033640	Identifier	daemonCore		1033566	0					
ANR	1033641	Identifier	InfoCommandSinfulString		1033566	1					
ANR	1033642	ArgumentList			1033566	1					
ANR	1033643	ExpressionStatement	m_classad . Insert ( line . Value ( ) )	126:1:3664:3694	1033566	7	True				
ANR	1033644	CallExpression	m_classad . Insert ( line . Value ( ) )		1033566	0					
ANR	1033645	Callee	m_classad . Insert		1033566	0					
ANR	1033646	MemberAccess	m_classad . Insert		1033566	0					
ANR	1033647	Identifier	m_classad		1033566	0					
ANR	1033648	Identifier	Insert		1033566	1					
ANR	1033649	ArgumentList	line . Value ( )		1033566	1					
ANR	1033650	Argument	line . Value ( )		1033566	0					
ANR	1033651	CallExpression	line . Value ( )		1033566	0					
ANR	1033652	Callee	line . Value		1033566	0					
ANR	1033653	MemberAccess	line . Value		1033566	0					
ANR	1033654	Identifier	line		1033566	0					
ANR	1033655	Identifier	Value		1033566	1					
ANR	1033656	ArgumentList			1033566	1					
ANR	1033657	ExpressionStatement	daemonCore -> publish ( & m_classad )	130:4:3807:3838	1033566	8	True				
ANR	1033658	CallExpression	daemonCore -> publish ( & m_classad )		1033566	0					
ANR	1033659	Callee	daemonCore -> publish		1033566	0					
ANR	1033660	PtrMemberAccess	daemonCore -> publish		1033566	0					
ANR	1033661	Identifier	daemonCore		1033566	0					
ANR	1033662	Identifier	publish		1033566	1					
ANR	1033663	ArgumentList	& m_classad		1033566	1					
ANR	1033664	Argument	& m_classad		1033566	0					
ANR	1033665	UnaryOperationExpression	& m_classad		1033566	0					
ANR	1033666	UnaryOperator	&		1033566	0					
ANR	1033667	Identifier	m_classad		1033566	1					
ANR	1033668	ReturnType	void		1033566	1					
ANR	1033669	Identifier	CredDaemon :: initialize_classad		1033566	2					
ANR	1033670	ParameterList			1033566	3					
ANR	1033671	CFGEntryNode	ENTRY		1033566		True				
ANR	1033672	CFGExitNode	EXIT		1033566		True				
ANR	1033673	Symbol	ATTR_CREDD_IP_ADDR		1033566						
ANR	1033674	Symbol	daemonCore -> InfoCommandSinfulString		1033566						
ANR	1033675	Symbol	ATTR_NAME		1033566						
ANR	1033676	Symbol	m_name		1033566						
ANR	1033677	Symbol	line . Value		1033566						
ANR	1033678	Symbol	line		1033566						
ANR	1033679	Symbol	* daemonCore		1033566						
ANR	1033680	Symbol	daemonCore		1033566						
ANR	1033681	Symbol	& m_classad		1033566						
ANR	1033682	Symbol	m_classad		1033566						
ANR	1033683	Symbol	CREDD_ADTYPE		1033566						
ANR	1033684	Function	CredDaemon :: update_collector	133:0:3843:3950							
ANR	1033685	FunctionDef	CredDaemon :: update_collector ()		1033684	0					
ANR	1033686	CompoundStatement		135:0:3879:3950	1033684	0					
ANR	1033687	ExpressionStatement	"daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_classad , NULL , true )"	136:1:3882:3948	1033684	0	True				
ANR	1033688	CallExpression	"daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_classad , NULL , true )"		1033684	0					
ANR	1033689	Callee	daemonCore -> sendUpdates		1033684	0					
ANR	1033690	PtrMemberAccess	daemonCore -> sendUpdates		1033684	0					
ANR	1033691	Identifier	daemonCore		1033684	0					
ANR	1033692	Identifier	sendUpdates		1033684	1					
ANR	1033693	ArgumentList	UPDATE_AD_GENERIC		1033684	1					
ANR	1033694	Argument	UPDATE_AD_GENERIC		1033684	0					
ANR	1033695	Identifier	UPDATE_AD_GENERIC		1033684	0					
ANR	1033696	Argument	& m_classad		1033684	1					
ANR	1033697	UnaryOperationExpression	& m_classad		1033684	0					
ANR	1033698	UnaryOperator	&		1033684	0					
ANR	1033699	Identifier	m_classad		1033684	1					
ANR	1033700	Argument	NULL		1033684	2					
ANR	1033701	Identifier	NULL		1033684	0					
ANR	1033702	Argument	true		1033684	3					
ANR	1033703	Identifier	true		1033684	0					
ANR	1033704	ReturnType	void		1033684	1					
ANR	1033705	Identifier	CredDaemon :: update_collector		1033684	2					
ANR	1033706	ParameterList			1033684	3					
ANR	1033707	CFGEntryNode	ENTRY		1033684		True				
ANR	1033708	CFGExitNode	EXIT		1033684		True				
ANR	1033709	Symbol	NULL		1033684						
ANR	1033710	Symbol	daemonCore		1033684						
ANR	1033711	Symbol	true		1033684						
ANR	1033712	Symbol	UPDATE_AD_GENERIC		1033684						
ANR	1033713	Symbol	& m_classad		1033684						
ANR	1033714	Function	CredDaemon :: invalidate_ad	139:0:3953:4332							
ANR	1033715	FunctionDef	CredDaemon :: invalidate_ad ()		1033714	0					
ANR	1033716	CompoundStatement		141:0:3986:4332	1033714	0					
ANR	1033717	IdentifierDeclStatement	ClassAd query_ad ;	142:1:3989:4005	1033714	0	True				
ANR	1033718	IdentifierDecl	query_ad		1033714	0					
ANR	1033719	IdentifierDeclType	ClassAd		1033714	0					
ANR	1033720	Identifier	query_ad		1033714	1					
ANR	1033721	ExpressionStatement	query_ad . SetMyTypeName ( QUERY_ADTYPE )	143:1:4008:4044	1033714	1	True				
ANR	1033722	CallExpression	query_ad . SetMyTypeName ( QUERY_ADTYPE )		1033714	0					
ANR	1033723	Callee	query_ad . SetMyTypeName		1033714	0					
ANR	1033724	MemberAccess	query_ad . SetMyTypeName		1033714	0					
ANR	1033725	Identifier	query_ad		1033714	0					
ANR	1033726	Identifier	SetMyTypeName		1033714	1					
ANR	1033727	ArgumentList	QUERY_ADTYPE		1033714	1					
ANR	1033728	Argument	QUERY_ADTYPE		1033714	0					
ANR	1033729	Identifier	QUERY_ADTYPE		1033714	0					
ANR	1033730	ExpressionStatement	query_ad . SetTargetTypeName ( CREDD_ADTYPE )	144:1:4047:4087	1033714	2	True				
ANR	1033731	CallExpression	query_ad . SetTargetTypeName ( CREDD_ADTYPE )		1033714	0					
ANR	1033732	Callee	query_ad . SetTargetTypeName		1033714	0					
ANR	1033733	MemberAccess	query_ad . SetTargetTypeName		1033714	0					
ANR	1033734	Identifier	query_ad		1033714	0					
ANR	1033735	Identifier	SetTargetTypeName		1033714	1					
ANR	1033736	ArgumentList	CREDD_ADTYPE		1033714	1					
ANR	1033737	Argument	CREDD_ADTYPE		1033714	0					
ANR	1033738	Identifier	CREDD_ADTYPE		1033714	0					
ANR	1033739	IdentifierDeclStatement	MyString line ;	146:1:4091:4104	1033714	3	True				
ANR	1033740	IdentifierDecl	line		1033714	0					
ANR	1033741	IdentifierDeclType	MyString		1033714	0					
ANR	1033742	Identifier	line		1033714	1					
ANR	1033743	ExpressionStatement	"line . sprintf ( ""%s = TARGET.%s == \\""%s\\"""" , ATTR_REQUIREMENTS , ATTR_NAME , m_name )"	147:1:4107:4185	1033714	4	True				
ANR	1033744	CallExpression	"line . sprintf ( ""%s = TARGET.%s == \\""%s\\"""" , ATTR_REQUIREMENTS , ATTR_NAME , m_name )"		1033714	0					
ANR	1033745	Callee	line . sprintf		1033714	0					
ANR	1033746	MemberAccess	line . sprintf		1033714	0					
ANR	1033747	Identifier	line		1033714	0					
ANR	1033748	Identifier	sprintf		1033714	1					
ANR	1033749	ArgumentList	"""%s = TARGET.%s == \\""%s\\"""""		1033714	1					
ANR	1033750	Argument	"""%s = TARGET.%s == \\""%s\\"""""		1033714	0					
ANR	1033751	PrimaryExpression	"""%s = TARGET.%s == \\""%s\\"""""		1033714	0					
ANR	1033752	Argument	ATTR_REQUIREMENTS		1033714	1					
ANR	1033753	Identifier	ATTR_REQUIREMENTS		1033714	0					
ANR	1033754	Argument	ATTR_NAME		1033714	2					
ANR	1033755	Identifier	ATTR_NAME		1033714	0					
ANR	1033756	Argument	m_name		1033714	3					
ANR	1033757	Identifier	m_name		1033714	0					
ANR	1033758	ExpressionStatement	query_ad . Insert ( line . Value ( ) )	148:4:4191:4220	1033714	5	True				
ANR	1033759	CallExpression	query_ad . Insert ( line . Value ( ) )		1033714	0					
ANR	1033760	Callee	query_ad . Insert		1033714	0					
ANR	1033761	MemberAccess	query_ad . Insert		1033714	0					
ANR	1033762	Identifier	query_ad		1033714	0					
ANR	1033763	Identifier	Insert		1033714	1					
ANR	1033764	ArgumentList	line . Value ( )		1033714	1					
ANR	1033765	Argument	line . Value ( )		1033714	0					
ANR	1033766	CallExpression	line . Value ( )		1033714	0					
ANR	1033767	Callee	line . Value		1033714	0					
ANR	1033768	MemberAccess	line . Value		1033714	0					
ANR	1033769	Identifier	line		1033714	0					
ANR	1033770	Identifier	Value		1033714	1					
ANR	1033771	ArgumentList			1033714	1					
ANR	1033772	ExpressionStatement	"query_ad . Assign ( ATTR_NAME , m_name )"	149:1:4223:4256	1033714	6	True				
ANR	1033773	CallExpression	"query_ad . Assign ( ATTR_NAME , m_name )"		1033714	0					
ANR	1033774	Callee	query_ad . Assign		1033714	0					
ANR	1033775	MemberAccess	query_ad . Assign		1033714	0					
ANR	1033776	Identifier	query_ad		1033714	0					
ANR	1033777	Identifier	Assign		1033714	1					
ANR	1033778	ArgumentList	ATTR_NAME		1033714	1					
ANR	1033779	Argument	ATTR_NAME		1033714	0					
ANR	1033780	Identifier	ATTR_NAME		1033714	0					
ANR	1033781	Argument	m_name		1033714	1					
ANR	1033782	Identifier	m_name		1033714	0					
ANR	1033783	ExpressionStatement	"daemonCore -> sendUpdates ( INVALIDATE_ADS_GENERIC , & query_ad , NULL , true )"	151:1:4260:4330	1033714	7	True				
ANR	1033784	CallExpression	"daemonCore -> sendUpdates ( INVALIDATE_ADS_GENERIC , & query_ad , NULL , true )"		1033714	0					
ANR	1033785	Callee	daemonCore -> sendUpdates		1033714	0					
ANR	1033786	PtrMemberAccess	daemonCore -> sendUpdates		1033714	0					
ANR	1033787	Identifier	daemonCore		1033714	0					
ANR	1033788	Identifier	sendUpdates		1033714	1					
ANR	1033789	ArgumentList	INVALIDATE_ADS_GENERIC		1033714	1					
ANR	1033790	Argument	INVALIDATE_ADS_GENERIC		1033714	0					
ANR	1033791	Identifier	INVALIDATE_ADS_GENERIC		1033714	0					
ANR	1033792	Argument	& query_ad		1033714	1					
ANR	1033793	UnaryOperationExpression	& query_ad		1033714	0					
ANR	1033794	UnaryOperator	&		1033714	0					
ANR	1033795	Identifier	query_ad		1033714	1					
ANR	1033796	Argument	NULL		1033714	2					
ANR	1033797	Identifier	NULL		1033714	0					
ANR	1033798	Argument	true		1033714	3					
ANR	1033799	Identifier	true		1033714	0					
ANR	1033800	ReturnType	void		1033714	1					
ANR	1033801	Identifier	CredDaemon :: invalidate_ad		1033714	2					
ANR	1033802	ParameterList			1033714	3					
ANR	1033803	CFGEntryNode	ENTRY		1033714		True				
ANR	1033804	CFGExitNode	EXIT		1033714		True				
ANR	1033805	Symbol	ATTR_NAME		1033714						
ANR	1033806	Symbol	NULL		1033714						
ANR	1033807	Symbol	line . Value		1033714						
ANR	1033808	Symbol	line		1033714						
ANR	1033809	Symbol	ATTR_REQUIREMENTS		1033714						
ANR	1033810	Symbol	INVALIDATE_ADS_GENERIC		1033714						
ANR	1033811	Symbol	query_ad		1033714						
ANR	1033812	Symbol	CREDD_ADTYPE		1033714						
ANR	1033813	Symbol	QUERY_ADTYPE		1033714						
ANR	1033814	Symbol	m_name		1033714						
ANR	1033815	Symbol	daemonCore		1033714						
ANR	1033816	Symbol	true		1033714						
ANR	1033817	Symbol	& query_ad		1033714						
ANR	1033818	Function	CredDaemon :: get_passwd_handler	154:0:4335:7185							
ANR	1033819	FunctionDef	"CredDaemon :: get_passwd_handler (int i , Stream * s)"		1033818	0					
ANR	1033820	CompoundStatement		156:0:4389:7185	1033818	0					
ANR	1033821	IdentifierDeclStatement	char * client_user = NULL ;	157:1:4392:4416	1033818	0	True				
ANR	1033822	IdentifierDecl	* client_user = NULL		1033818	0					
ANR	1033823	IdentifierDeclType	char *		1033818	0					
ANR	1033824	Identifier	client_user		1033818	1					
ANR	1033825	AssignmentExpression	* client_user = NULL		1033818	2		=			
ANR	1033826	Identifier	NULL		1033818	0					
ANR	1033827	Identifier	NULL		1033818	1					
ANR	1033828	IdentifierDeclStatement	char * client_domain = NULL ;	158:1:4419:4445	1033818	1	True				
ANR	1033829	IdentifierDecl	* client_domain = NULL		1033818	0					
ANR	1033830	IdentifierDeclType	char *		1033818	0					
ANR	1033831	Identifier	client_domain		1033818	1					
ANR	1033832	AssignmentExpression	* client_domain = NULL		1033818	2		=			
ANR	1033833	Identifier	NULL		1033818	0					
ANR	1033834	Identifier	NULL		1033818	1					
ANR	1033835	IdentifierDeclStatement	char * client_ipaddr = NULL ;	159:1:4448:4474	1033818	2	True				
ANR	1033836	IdentifierDecl	* client_ipaddr = NULL		1033818	0					
ANR	1033837	IdentifierDeclType	char *		1033818	0					
ANR	1033838	Identifier	client_ipaddr		1033818	1					
ANR	1033839	AssignmentExpression	* client_ipaddr = NULL		1033818	2		=			
ANR	1033840	Identifier	NULL		1033818	0					
ANR	1033841	Identifier	NULL		1033818	1					
ANR	1033842	IdentifierDeclStatement	int result ;	160:1:4477:4487	1033818	3	True				
ANR	1033843	IdentifierDecl	result		1033818	0					
ANR	1033844	IdentifierDeclType	int		1033818	0					
ANR	1033845	Identifier	result		1033818	1					
ANR	1033846	IdentifierDeclStatement	char * user = NULL ;	161:1:4490:4508	1033818	4	True				
ANR	1033847	IdentifierDecl	* user = NULL		1033818	0					
ANR	1033848	IdentifierDeclType	char *		1033818	0					
ANR	1033849	Identifier	user		1033818	1					
ANR	1033850	AssignmentExpression	* user = NULL		1033818	2		=			
ANR	1033851	Identifier	NULL		1033818	0					
ANR	1033852	Identifier	NULL		1033818	1					
ANR	1033853	IdentifierDeclStatement	char * domain = NULL ;	162:1:4511:4531	1033818	5	True				
ANR	1033854	IdentifierDecl	* domain = NULL		1033818	0					
ANR	1033855	IdentifierDeclType	char *		1033818	0					
ANR	1033856	Identifier	domain		1033818	1					
ANR	1033857	AssignmentExpression	* domain = NULL		1033818	2		=			
ANR	1033858	Identifier	NULL		1033818	0					
ANR	1033859	Identifier	NULL		1033818	1					
ANR	1033860	IdentifierDeclStatement	char * password = NULL ;	163:1:4534:4556	1033818	6	True				
ANR	1033861	IdentifierDecl	* password = NULL		1033818	0					
ANR	1033862	IdentifierDeclType	char *		1033818	0					
ANR	1033863	Identifier	password		1033818	1					
ANR	1033864	AssignmentExpression	* password = NULL		1033818	2		=			
ANR	1033865	Identifier	NULL		1033818	0					
ANR	1033866	Identifier	NULL		1033818	1					
ANR	1033867	IfStatement	if ( s -> type ( ) != Stream :: reli_sock )		1033818	7					
ANR	1033868	Condition	s -> type ( ) != Stream :: reli_sock	172:6:4823:4852	1033818	0	True				
ANR	1033869	EqualityExpression	s -> type ( ) != Stream :: reli_sock		1033818	0		!=			
ANR	1033870	CallExpression	s -> type ( )		1033818	0					
ANR	1033871	Callee	s -> type		1033818	0					
ANR	1033872	PtrMemberAccess	s -> type		1033818	0					
ANR	1033873	Identifier	s		1033818	0					
ANR	1033874	Identifier	type		1033818	1					
ANR	1033875	ArgumentList			1033818	1					
ANR	1033876	Identifier	Stream :: reli_sock		1033818	1					
ANR	1033877	CompoundStatement		17:39:466:466	1033818	1					
ANR	1033878	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING - password fetch attempt via UDP from %s\\n"" , ( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( ) . Value ( ) )"	173:2:4860:4983	1033818	0	True				
ANR	1033879	CallExpression	"dprintf ( D_ALWAYS , ""WARNING - password fetch attempt via UDP from %s\\n"" , ( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( ) . Value ( ) )"		1033818	0					
ANR	1033880	Callee	dprintf		1033818	0					
ANR	1033881	Identifier	dprintf		1033818	0					
ANR	1033882	ArgumentList	D_ALWAYS		1033818	1					
ANR	1033883	Argument	D_ALWAYS		1033818	0					
ANR	1033884	Identifier	D_ALWAYS		1033818	0					
ANR	1033885	Argument	"""WARNING - password fetch attempt via UDP from %s\\n"""		1033818	1					
ANR	1033886	PrimaryExpression	"""WARNING - password fetch attempt via UDP from %s\\n"""		1033818	0					
ANR	1033887	Argument	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	2					
ANR	1033888	CallExpression	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	0					
ANR	1033889	Callee	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1033890	MemberAccess	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1033891	CallExpression	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( )		1033818	0					
ANR	1033892	Callee	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1033893	MemberAccess	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1033894	CallExpression	( ( Sock * ) s ) -> peer_addr ( )		1033818	0					
ANR	1033895	Callee	( ( Sock * ) s ) -> peer_addr		1033818	0					
ANR	1033896	PtrMemberAccess	( ( Sock * ) s ) -> peer_addr		1033818	0					
ANR	1033897	CastExpression	( Sock * ) s		1033818	0					
ANR	1033898	CastTarget	Sock *		1033818	0					
ANR	1033899	Identifier	s		1033818	1					
ANR	1033900	Identifier	peer_addr		1033818	1					
ANR	1033901	ArgumentList			1033818	1					
ANR	1033902	Identifier	to_sinful		1033818	1					
ANR	1033903	ArgumentList			1033818	1					
ANR	1033904	Identifier	Value		1033818	1					
ANR	1033905	ArgumentList			1033818	1					
ANR	1033906	ReturnStatement	return ;	176:2:4987:4993	1033818	1	True				
ANR	1033907	IdentifierDeclStatement	ReliSock * sock = ( ReliSock * ) s ;	179:1:5000:5029	1033818	8	True				
ANR	1033908	IdentifierDecl	* sock = ( ReliSock * ) s		1033818	0					
ANR	1033909	IdentifierDeclType	ReliSock *		1033818	0					
ANR	1033910	Identifier	sock		1033818	1					
ANR	1033911	AssignmentExpression	* sock = ( ReliSock * ) s		1033818	2		=			
ANR	1033912	Identifier	sock		1033818	0					
ANR	1033913	CastExpression	( ReliSock * ) s		1033818	1					
ANR	1033914	CastTarget	ReliSock *		1033818	0					
ANR	1033915	Identifier	s		1033818	1					
ANR	1033916	IfStatement	if ( ! sock -> triedAuthentication ( ) )		1033818	9					
ANR	1033917	Condition	! sock -> triedAuthentication ( )	181:6:5038:5065	1033818	0	True				
ANR	1033918	UnaryOperationExpression	! sock -> triedAuthentication ( )		1033818	0					
ANR	1033919	UnaryOperator	!		1033818	0					
ANR	1033920	CallExpression	sock -> triedAuthentication ( )		1033818	1					
ANR	1033921	Callee	sock -> triedAuthentication		1033818	0					
ANR	1033922	PtrMemberAccess	sock -> triedAuthentication		1033818	0					
ANR	1033923	Identifier	sock		1033818	0					
ANR	1033924	Identifier	triedAuthentication		1033818	1					
ANR	1033925	ArgumentList			1033818	1					
ANR	1033926	CompoundStatement		26:37:679:679	1033818	1					
ANR	1033927	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING - password fetch attempt without authentication from %s\\n"" , sock -> peer_addr ( ) . to_sinful ( ) . Value ( ) )"	182:2:5073:5205	1033818	0	True				
ANR	1033928	CallExpression	"dprintf ( D_ALWAYS , ""WARNING - password fetch attempt without authentication from %s\\n"" , sock -> peer_addr ( ) . to_sinful ( ) . Value ( ) )"		1033818	0					
ANR	1033929	Callee	dprintf		1033818	0					
ANR	1033930	Identifier	dprintf		1033818	0					
ANR	1033931	ArgumentList	D_ALWAYS		1033818	1					
ANR	1033932	Argument	D_ALWAYS		1033818	0					
ANR	1033933	Identifier	D_ALWAYS		1033818	0					
ANR	1033934	Argument	"""WARNING - password fetch attempt without authentication from %s\\n"""		1033818	1					
ANR	1033935	PrimaryExpression	"""WARNING - password fetch attempt without authentication from %s\\n"""		1033818	0					
ANR	1033936	Argument	sock -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	2					
ANR	1033937	CallExpression	sock -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	0					
ANR	1033938	Callee	sock -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1033939	MemberAccess	sock -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1033940	CallExpression	sock -> peer_addr ( ) . to_sinful ( )		1033818	0					
ANR	1033941	Callee	sock -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1033942	MemberAccess	sock -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1033943	CallExpression	sock -> peer_addr ( )		1033818	0					
ANR	1033944	Callee	sock -> peer_addr		1033818	0					
ANR	1033945	PtrMemberAccess	sock -> peer_addr		1033818	0					
ANR	1033946	Identifier	sock		1033818	0					
ANR	1033947	Identifier	peer_addr		1033818	1					
ANR	1033948	ArgumentList			1033818	1					
ANR	1033949	Identifier	to_sinful		1033818	1					
ANR	1033950	ArgumentList			1033818	1					
ANR	1033951	Identifier	Value		1033818	1					
ANR	1033952	ArgumentList			1033818	1					
ANR	1033953	GotoStatement	goto bail_out ;	185:2:5209:5222	1033818	1	True				
ANR	1033954	Identifier	bail_out		1033818	0					
ANR	1033955	IfStatement	if ( ! sock -> get_encryption ( ) )		1033818	10					
ANR	1033956	Condition	! sock -> get_encryption ( )	188:6:5234:5256	1033818	0	True				
ANR	1033957	UnaryOperationExpression	! sock -> get_encryption ( )		1033818	0					
ANR	1033958	UnaryOperator	!		1033818	0					
ANR	1033959	CallExpression	sock -> get_encryption ( )		1033818	1					
ANR	1033960	Callee	sock -> get_encryption		1033818	0					
ANR	1033961	PtrMemberAccess	sock -> get_encryption		1033818	0					
ANR	1033962	Identifier	sock		1033818	0					
ANR	1033963	Identifier	get_encryption		1033818	1					
ANR	1033964	ArgumentList			1033818	1					
ANR	1033965	CompoundStatement		33:32:870:870	1033818	1					
ANR	1033966	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING - password fetch attempt without encryption from %s\\n"" , sock -> peer_addr ( ) . to_sinful ( ) . Value ( ) )"	189:2:5264:5392	1033818	0	True				
ANR	1033967	CallExpression	"dprintf ( D_ALWAYS , ""WARNING - password fetch attempt without encryption from %s\\n"" , sock -> peer_addr ( ) . to_sinful ( ) . Value ( ) )"		1033818	0					
ANR	1033968	Callee	dprintf		1033818	0					
ANR	1033969	Identifier	dprintf		1033818	0					
ANR	1033970	ArgumentList	D_ALWAYS		1033818	1					
ANR	1033971	Argument	D_ALWAYS		1033818	0					
ANR	1033972	Identifier	D_ALWAYS		1033818	0					
ANR	1033973	Argument	"""WARNING - password fetch attempt without encryption from %s\\n"""		1033818	1					
ANR	1033974	PrimaryExpression	"""WARNING - password fetch attempt without encryption from %s\\n"""		1033818	0					
ANR	1033975	Argument	sock -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	2					
ANR	1033976	CallExpression	sock -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	0					
ANR	1033977	Callee	sock -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1033978	MemberAccess	sock -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1033979	CallExpression	sock -> peer_addr ( ) . to_sinful ( )		1033818	0					
ANR	1033980	Callee	sock -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1033981	MemberAccess	sock -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1033982	CallExpression	sock -> peer_addr ( )		1033818	0					
ANR	1033983	Callee	sock -> peer_addr		1033818	0					
ANR	1033984	PtrMemberAccess	sock -> peer_addr		1033818	0					
ANR	1033985	Identifier	sock		1033818	0					
ANR	1033986	Identifier	peer_addr		1033818	1					
ANR	1033987	ArgumentList			1033818	1					
ANR	1033988	Identifier	to_sinful		1033818	1					
ANR	1033989	ArgumentList			1033818	1					
ANR	1033990	Identifier	Value		1033818	1					
ANR	1033991	ArgumentList			1033818	1					
ANR	1033992	GotoStatement	goto bail_out ;	192:2:5396:5409	1033818	1	True				
ANR	1033993	Identifier	bail_out		1033818	0					
ANR	1033994	ExpressionStatement	sock -> decode ( )	197:1:5464:5478	1033818	11	True				
ANR	1033995	CallExpression	sock -> decode ( )		1033818	0					
ANR	1033996	Callee	sock -> decode		1033818	0					
ANR	1033997	PtrMemberAccess	sock -> decode		1033818	0					
ANR	1033998	Identifier	sock		1033818	0					
ANR	1033999	Identifier	decode		1033818	1					
ANR	1034000	ArgumentList			1033818	1					
ANR	1034001	ExpressionStatement	result = sock -> code ( user )	199:1:5483:5508	1033818	12	True				
ANR	1034002	AssignmentExpression	result = sock -> code ( user )		1033818	0		=			
ANR	1034003	Identifier	result		1033818	0					
ANR	1034004	CallExpression	sock -> code ( user )		1033818	1					
ANR	1034005	Callee	sock -> code		1033818	0					
ANR	1034006	PtrMemberAccess	sock -> code		1033818	0					
ANR	1034007	Identifier	sock		1033818	0					
ANR	1034008	Identifier	code		1033818	1					
ANR	1034009	ArgumentList	user		1033818	1					
ANR	1034010	Argument	user		1033818	0					
ANR	1034011	Identifier	user		1033818	0					
ANR	1034012	IfStatement	if ( ! result )		1033818	13					
ANR	1034013	Condition	! result	200:5:5515:5521	1033818	0	True				
ANR	1034014	UnaryOperationExpression	! result		1033818	0					
ANR	1034015	UnaryOperator	!		1033818	0					
ANR	1034016	Identifier	result		1033818	1					
ANR	1034017	CompoundStatement		45:15:1135:1135	1033818	1					
ANR	1034018	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to recv user.\\n"" )"	201:2:5529:5592	1033818	0	True				
ANR	1034019	CallExpression	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to recv user.\\n"" )"		1033818	0					
ANR	1034020	Callee	dprintf		1033818	0					
ANR	1034021	Identifier	dprintf		1033818	0					
ANR	1034022	ArgumentList	D_ALWAYS		1033818	1					
ANR	1034023	Argument	D_ALWAYS		1033818	0					
ANR	1034024	Identifier	D_ALWAYS		1033818	0					
ANR	1034025	Argument	"""get_passwd_handler: Failed to recv user.\\n"""		1033818	1					
ANR	1034026	PrimaryExpression	"""get_passwd_handler: Failed to recv user.\\n"""		1033818	0					
ANR	1034027	GotoStatement	goto bail_out ;	202:2:5596:5609	1033818	1	True				
ANR	1034028	Identifier	bail_out		1033818	0					
ANR	1034029	ExpressionStatement	result = sock -> code ( domain )	205:1:5617:5644	1033818	14	True				
ANR	1034030	AssignmentExpression	result = sock -> code ( domain )		1033818	0		=			
ANR	1034031	Identifier	result		1033818	0					
ANR	1034032	CallExpression	sock -> code ( domain )		1033818	1					
ANR	1034033	Callee	sock -> code		1033818	0					
ANR	1034034	PtrMemberAccess	sock -> code		1033818	0					
ANR	1034035	Identifier	sock		1033818	0					
ANR	1034036	Identifier	code		1033818	1					
ANR	1034037	ArgumentList	domain		1033818	1					
ANR	1034038	Argument	domain		1033818	0					
ANR	1034039	Identifier	domain		1033818	0					
ANR	1034040	IfStatement	if ( ! result )		1033818	15					
ANR	1034041	Condition	! result	206:5:5651:5657	1033818	0	True				
ANR	1034042	UnaryOperationExpression	! result		1033818	0					
ANR	1034043	UnaryOperator	!		1033818	0					
ANR	1034044	Identifier	result		1033818	1					
ANR	1034045	CompoundStatement		51:15:1271:1271	1033818	1					
ANR	1034046	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to recv domain.\\n"" )"	207:2:5665:5730	1033818	0	True				
ANR	1034047	CallExpression	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to recv domain.\\n"" )"		1033818	0					
ANR	1034048	Callee	dprintf		1033818	0					
ANR	1034049	Identifier	dprintf		1033818	0					
ANR	1034050	ArgumentList	D_ALWAYS		1033818	1					
ANR	1034051	Argument	D_ALWAYS		1033818	0					
ANR	1034052	Identifier	D_ALWAYS		1033818	0					
ANR	1034053	Argument	"""get_passwd_handler: Failed to recv domain.\\n"""		1033818	1					
ANR	1034054	PrimaryExpression	"""get_passwd_handler: Failed to recv domain.\\n"""		1033818	0					
ANR	1034055	GotoStatement	goto bail_out ;	208:2:5734:5747	1033818	1	True				
ANR	1034056	Identifier	bail_out		1033818	0					
ANR	1034057	ExpressionStatement	result = sock -> end_of_message ( )	211:1:5755:5786	1033818	16	True				
ANR	1034058	AssignmentExpression	result = sock -> end_of_message ( )		1033818	0		=			
ANR	1034059	Identifier	result		1033818	0					
ANR	1034060	CallExpression	sock -> end_of_message ( )		1033818	1					
ANR	1034061	Callee	sock -> end_of_message		1033818	0					
ANR	1034062	PtrMemberAccess	sock -> end_of_message		1033818	0					
ANR	1034063	Identifier	sock		1033818	0					
ANR	1034064	Identifier	end_of_message		1033818	1					
ANR	1034065	ArgumentList			1033818	1					
ANR	1034066	IfStatement	if ( ! result )		1033818	17					
ANR	1034067	Condition	! result	212:5:5793:5799	1033818	0	True				
ANR	1034068	UnaryOperationExpression	! result		1033818	0					
ANR	1034069	UnaryOperator	!		1033818	0					
ANR	1034070	Identifier	result		1033818	1					
ANR	1034071	CompoundStatement		57:15:1413:1413	1033818	1					
ANR	1034072	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to recv eom.\\n"" )"	213:2:5807:5869	1033818	0	True				
ANR	1034073	CallExpression	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to recv eom.\\n"" )"		1033818	0					
ANR	1034074	Callee	dprintf		1033818	0					
ANR	1034075	Identifier	dprintf		1033818	0					
ANR	1034076	ArgumentList	D_ALWAYS		1033818	1					
ANR	1034077	Argument	D_ALWAYS		1033818	0					
ANR	1034078	Identifier	D_ALWAYS		1033818	0					
ANR	1034079	Argument	"""get_passwd_handler: Failed to recv eom.\\n"""		1033818	1					
ANR	1034080	PrimaryExpression	"""get_passwd_handler: Failed to recv eom.\\n"""		1033818	0					
ANR	1034081	GotoStatement	goto bail_out ;	214:2:5873:5886	1033818	1	True				
ANR	1034082	Identifier	bail_out		1033818	0					
ANR	1034083	ExpressionStatement	client_user = strdup ( sock -> getOwner ( ) )	217:1:5893:5931	1033818	18	True				
ANR	1034084	AssignmentExpression	client_user = strdup ( sock -> getOwner ( ) )		1033818	0		=			
ANR	1034085	Identifier	client_user		1033818	0					
ANR	1034086	CallExpression	strdup ( sock -> getOwner ( ) )		1033818	1					
ANR	1034087	Callee	strdup		1033818	0					
ANR	1034088	Identifier	strdup		1033818	0					
ANR	1034089	ArgumentList	sock -> getOwner ( )		1033818	1					
ANR	1034090	Argument	sock -> getOwner ( )		1033818	0					
ANR	1034091	CallExpression	sock -> getOwner ( )		1033818	0					
ANR	1034092	Callee	sock -> getOwner		1033818	0					
ANR	1034093	PtrMemberAccess	sock -> getOwner		1033818	0					
ANR	1034094	Identifier	sock		1033818	0					
ANR	1034095	Identifier	getOwner		1033818	1					
ANR	1034096	ArgumentList			1033818	1					
ANR	1034097	ExpressionStatement	client_domain = strdup ( sock -> getDomain ( ) )	218:1:5934:5975	1033818	19	True				
ANR	1034098	AssignmentExpression	client_domain = strdup ( sock -> getDomain ( ) )		1033818	0		=			
ANR	1034099	Identifier	client_domain		1033818	0					
ANR	1034100	CallExpression	strdup ( sock -> getDomain ( ) )		1033818	1					
ANR	1034101	Callee	strdup		1033818	0					
ANR	1034102	Identifier	strdup		1033818	0					
ANR	1034103	ArgumentList	sock -> getDomain ( )		1033818	1					
ANR	1034104	Argument	sock -> getDomain ( )		1033818	0					
ANR	1034105	CallExpression	sock -> getDomain ( )		1033818	0					
ANR	1034106	Callee	sock -> getDomain		1033818	0					
ANR	1034107	PtrMemberAccess	sock -> getDomain		1033818	0					
ANR	1034108	Identifier	sock		1033818	0					
ANR	1034109	Identifier	getDomain		1033818	1					
ANR	1034110	ArgumentList			1033818	1					
ANR	1034111	ExpressionStatement	client_ipaddr = strdup ( sock -> peer_addr ( ) . to_sinful ( ) . Value ( ) )	219:1:5978:6039	1033818	20	True				
ANR	1034112	AssignmentExpression	client_ipaddr = strdup ( sock -> peer_addr ( ) . to_sinful ( ) . Value ( ) )		1033818	0		=			
ANR	1034113	Identifier	client_ipaddr		1033818	0					
ANR	1034114	CallExpression	strdup ( sock -> peer_addr ( ) . to_sinful ( ) . Value ( ) )		1033818	1					
ANR	1034115	Callee	strdup		1033818	0					
ANR	1034116	Identifier	strdup		1033818	0					
ANR	1034117	ArgumentList	sock -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	1					
ANR	1034118	Argument	sock -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	0					
ANR	1034119	CallExpression	sock -> peer_addr ( ) . to_sinful ( ) . Value ( )		1033818	0					
ANR	1034120	Callee	sock -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1034121	MemberAccess	sock -> peer_addr ( ) . to_sinful ( ) . Value		1033818	0					
ANR	1034122	CallExpression	sock -> peer_addr ( ) . to_sinful ( )		1033818	0					
ANR	1034123	Callee	sock -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1034124	MemberAccess	sock -> peer_addr ( ) . to_sinful		1033818	0					
ANR	1034125	CallExpression	sock -> peer_addr ( )		1033818	0					
ANR	1034126	Callee	sock -> peer_addr		1033818	0					
ANR	1034127	PtrMemberAccess	sock -> peer_addr		1033818	0					
ANR	1034128	Identifier	sock		1033818	0					
ANR	1034129	Identifier	peer_addr		1033818	1					
ANR	1034130	ArgumentList			1033818	1					
ANR	1034131	Identifier	to_sinful		1033818	1					
ANR	1034132	ArgumentList			1033818	1					
ANR	1034133	Identifier	Value		1033818	1					
ANR	1034134	ArgumentList			1033818	1					
ANR	1034135	ExpressionStatement	"password = getStoredCredential ( user , domain )"	223:1:6143:6186	1033818	21	True				
ANR	1034136	AssignmentExpression	"password = getStoredCredential ( user , domain )"		1033818	0		=			
ANR	1034137	Identifier	password		1033818	0					
ANR	1034138	CallExpression	"getStoredCredential ( user , domain )"		1033818	1					
ANR	1034139	Callee	getStoredCredential		1033818	0					
ANR	1034140	Identifier	getStoredCredential		1033818	0					
ANR	1034141	ArgumentList	user		1033818	1					
ANR	1034142	Argument	user		1033818	0					
ANR	1034143	Identifier	user		1033818	0					
ANR	1034144	Argument	domain		1033818	1					
ANR	1034145	Identifier	domain		1033818	0					
ANR	1034146	IfStatement	if ( ! password )		1033818	22					
ANR	1034147	Condition	! password	224:5:6193:6201	1033818	0	True				
ANR	1034148	UnaryOperationExpression	! password		1033818	0					
ANR	1034149	UnaryOperator	!		1033818	0					
ANR	1034150	Identifier	password		1033818	1					
ANR	1034151	CompoundStatement		69:16:1814:1814	1033818	1					
ANR	1034152	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to fetch password for %s@%s requested by %s@%s at %s\\n"" , user , domain , client_user , client_domain , client_ipaddr )"	225:2:6208:6353	1033818	0	True				
ANR	1034153	CallExpression	"dprintf ( D_ALWAYS , ""Failed to fetch password for %s@%s requested by %s@%s at %s\\n"" , user , domain , client_user , client_domain , client_ipaddr )"		1033818	0					
ANR	1034154	Callee	dprintf		1033818	0					
ANR	1034155	Identifier	dprintf		1033818	0					
ANR	1034156	ArgumentList	D_ALWAYS		1033818	1					
ANR	1034157	Argument	D_ALWAYS		1033818	0					
ANR	1034158	Identifier	D_ALWAYS		1033818	0					
ANR	1034159	Argument	"""Failed to fetch password for %s@%s requested by %s@%s at %s\\n"""		1033818	1					
ANR	1034160	PrimaryExpression	"""Failed to fetch password for %s@%s requested by %s@%s at %s\\n"""		1033818	0					
ANR	1034161	Argument	user		1033818	2					
ANR	1034162	Identifier	user		1033818	0					
ANR	1034163	Argument	domain		1033818	3					
ANR	1034164	Identifier	domain		1033818	0					
ANR	1034165	Argument	client_user		1033818	4					
ANR	1034166	Identifier	client_user		1033818	0					
ANR	1034167	Argument	client_domain		1033818	5					
ANR	1034168	Identifier	client_domain		1033818	0					
ANR	1034169	Argument	client_ipaddr		1033818	6					
ANR	1034170	Identifier	client_ipaddr		1033818	0					
ANR	1034171	GotoStatement	goto bail_out ;	229:2:6357:6370	1033818	1	True				
ANR	1034172	Identifier	bail_out		1033818	0					
ANR	1034173	ExpressionStatement	sock -> encode ( )	233:1:6408:6422	1033818	23	True				
ANR	1034174	CallExpression	sock -> encode ( )		1033818	0					
ANR	1034175	Callee	sock -> encode		1033818	0					
ANR	1034176	PtrMemberAccess	sock -> encode		1033818	0					
ANR	1034177	Identifier	sock		1033818	0					
ANR	1034178	Identifier	encode		1033818	1					
ANR	1034179	ArgumentList			1033818	1					
ANR	1034180	ExpressionStatement	result = sock -> code ( password )	234:1:6425:6454	1033818	24	True				
ANR	1034181	AssignmentExpression	result = sock -> code ( password )		1033818	0		=			
ANR	1034182	Identifier	result		1033818	0					
ANR	1034183	CallExpression	sock -> code ( password )		1033818	1					
ANR	1034184	Callee	sock -> code		1033818	0					
ANR	1034185	PtrMemberAccess	sock -> code		1033818	0					
ANR	1034186	Identifier	sock		1033818	0					
ANR	1034187	Identifier	code		1033818	1					
ANR	1034188	ArgumentList	password		1033818	1					
ANR	1034189	Argument	password		1033818	0					
ANR	1034190	Identifier	password		1033818	0					
ANR	1034191	IfStatement	if ( ! result )		1033818	25					
ANR	1034192	Condition	! result	235:5:6461:6467	1033818	0	True				
ANR	1034193	UnaryOperationExpression	! result		1033818	0					
ANR	1034194	UnaryOperator	!		1033818	0					
ANR	1034195	Identifier	result		1033818	1					
ANR	1034196	CompoundStatement		80:15:2081:2081	1033818	1					
ANR	1034197	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to send password.\\n"" )"	236:2:6475:6542	1033818	0	True				
ANR	1034198	CallExpression	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to send password.\\n"" )"		1033818	0					
ANR	1034199	Callee	dprintf		1033818	0					
ANR	1034200	Identifier	dprintf		1033818	0					
ANR	1034201	ArgumentList	D_ALWAYS		1033818	1					
ANR	1034202	Argument	D_ALWAYS		1033818	0					
ANR	1034203	Identifier	D_ALWAYS		1033818	0					
ANR	1034204	Argument	"""get_passwd_handler: Failed to send password.\\n"""		1033818	1					
ANR	1034205	PrimaryExpression	"""get_passwd_handler: Failed to send password.\\n"""		1033818	0					
ANR	1034206	ExpressionStatement	free ( password )	237:2:6546:6560	1033818	1	True				
ANR	1034207	CallExpression	free ( password )		1033818	0					
ANR	1034208	Callee	free		1033818	0					
ANR	1034209	Identifier	free		1033818	0					
ANR	1034210	ArgumentList	password		1033818	1					
ANR	1034211	Argument	password		1033818	0					
ANR	1034212	Identifier	password		1033818	0					
ANR	1034213	GotoStatement	goto bail_out ;	238:2:6564:6577	1033818	2	True				
ANR	1034214	Identifier	bail_out		1033818	0					
ANR	1034215	ExpressionStatement	result = sock -> end_of_message ( )	241:1:6584:6615	1033818	26	True				
ANR	1034216	AssignmentExpression	result = sock -> end_of_message ( )		1033818	0		=			
ANR	1034217	Identifier	result		1033818	0					
ANR	1034218	CallExpression	sock -> end_of_message ( )		1033818	1					
ANR	1034219	Callee	sock -> end_of_message		1033818	0					
ANR	1034220	PtrMemberAccess	sock -> end_of_message		1033818	0					
ANR	1034221	Identifier	sock		1033818	0					
ANR	1034222	Identifier	end_of_message		1033818	1					
ANR	1034223	ArgumentList			1033818	1					
ANR	1034224	IfStatement	if ( ! result )		1033818	27					
ANR	1034225	Condition	! result	242:5:6622:6628	1033818	0	True				
ANR	1034226	UnaryOperationExpression	! result		1033818	0					
ANR	1034227	UnaryOperator	!		1033818	0					
ANR	1034228	Identifier	result		1033818	1					
ANR	1034229	CompoundStatement		87:15:2242:2242	1033818	1					
ANR	1034230	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to send eom.\\n"" )"	243:2:6636:6698	1033818	0	True				
ANR	1034231	CallExpression	"dprintf ( D_ALWAYS , ""get_passwd_handler: Failed to send eom.\\n"" )"		1033818	0					
ANR	1034232	Callee	dprintf		1033818	0					
ANR	1034233	Identifier	dprintf		1033818	0					
ANR	1034234	ArgumentList	D_ALWAYS		1033818	1					
ANR	1034235	Argument	D_ALWAYS		1033818	0					
ANR	1034236	Identifier	D_ALWAYS		1033818	0					
ANR	1034237	Argument	"""get_passwd_handler: Failed to send eom.\\n"""		1033818	1					
ANR	1034238	PrimaryExpression	"""get_passwd_handler: Failed to send eom.\\n"""		1033818	0					
ANR	1034239	GotoStatement	goto bail_out ;	244:2:6702:6715	1033818	1	True				
ANR	1034240	Identifier	bail_out		1033818	0					
ANR	1034241	ExpressionStatement	"SecureZeroMemory ( password , strlen ( password ) )"	248:1:6791:6834	1033818	28	True				
ANR	1034242	CallExpression	"SecureZeroMemory ( password , strlen ( password ) )"		1033818	0					
ANR	1034243	Callee	SecureZeroMemory		1033818	0					
ANR	1034244	Identifier	SecureZeroMemory		1033818	0					
ANR	1034245	ArgumentList	password		1033818	1					
ANR	1034246	Argument	password		1033818	0					
ANR	1034247	Identifier	password		1033818	0					
ANR	1034248	Argument	strlen ( password )		1033818	1					
ANR	1034249	CallExpression	strlen ( password )		1033818	0					
ANR	1034250	Callee	strlen		1033818	0					
ANR	1034251	Identifier	strlen		1033818	0					
ANR	1034252	ArgumentList	password		1033818	1					
ANR	1034253	Argument	password		1033818	0					
ANR	1034254	Identifier	password		1033818	0					
ANR	1034255	ExpressionStatement	"dprintf ( D_ALWAYS , ""Fetched user %s@%s password requested by %s@%s at %s\\n"" , user , domain , client_user , client_domain , client_ipaddr )"	250:1:6838:6972	1033818	29	True				
ANR	1034256	CallExpression	"dprintf ( D_ALWAYS , ""Fetched user %s@%s password requested by %s@%s at %s\\n"" , user , domain , client_user , client_domain , client_ipaddr )"		1033818	0					
ANR	1034257	Callee	dprintf		1033818	0					
ANR	1034258	Identifier	dprintf		1033818	0					
ANR	1034259	ArgumentList	D_ALWAYS		1033818	1					
ANR	1034260	Argument	D_ALWAYS		1033818	0					
ANR	1034261	Identifier	D_ALWAYS		1033818	0					
ANR	1034262	Argument	"""Fetched user %s@%s password requested by %s@%s at %s\\n"""		1033818	1					
ANR	1034263	PrimaryExpression	"""Fetched user %s@%s password requested by %s@%s at %s\\n"""		1033818	0					
ANR	1034264	Argument	user		1033818	2					
ANR	1034265	Identifier	user		1033818	0					
ANR	1034266	Argument	domain		1033818	3					
ANR	1034267	Identifier	domain		1033818	0					
ANR	1034268	Argument	client_user		1033818	4					
ANR	1034269	Identifier	client_user		1033818	0					
ANR	1034270	Argument	client_domain		1033818	5					
ANR	1034271	Identifier	client_domain		1033818	0					
ANR	1034272	Argument	client_ipaddr		1033818	6					
ANR	1034273	Identifier	client_ipaddr		1033818	0					
ANR	1034274	Label	bail_out :	254:0:6975:6983	1033818	30	True				
ANR	1034275	Identifier	bail_out		1033818	0					
ANR	1034276	IfStatement	if ( client_user )		1033818	31					
ANR	1034277	Condition	client_user	255:5:6990:7000	1033818	0	True				
ANR	1034278	Identifier	client_user		1033818	0					
ANR	1034279	ExpressionStatement	free ( client_user )	255:18:7003:7020	1033818	1	True				
ANR	1034280	CallExpression	free ( client_user )		1033818	0					
ANR	1034281	Callee	free		1033818	0					
ANR	1034282	Identifier	free		1033818	0					
ANR	1034283	ArgumentList	client_user		1033818	1					
ANR	1034284	Argument	client_user		1033818	0					
ANR	1034285	Identifier	client_user		1033818	0					
ANR	1034286	IfStatement	if ( client_domain )		1033818	32					
ANR	1034287	Condition	client_domain	256:5:7027:7039	1033818	0	True				
ANR	1034288	Identifier	client_domain		1033818	0					
ANR	1034289	ExpressionStatement	free ( client_domain )	256:20:7042:7061	1033818	1	True				
ANR	1034290	CallExpression	free ( client_domain )		1033818	0					
ANR	1034291	Callee	free		1033818	0					
ANR	1034292	Identifier	free		1033818	0					
ANR	1034293	ArgumentList	client_domain		1033818	1					
ANR	1034294	Argument	client_domain		1033818	0					
ANR	1034295	Identifier	client_domain		1033818	0					
ANR	1034296	IfStatement	if ( client_ipaddr )		1033818	33					
ANR	1034297	Condition	client_ipaddr	257:5:7068:7080	1033818	0	True				
ANR	1034298	Identifier	client_ipaddr		1033818	0					
ANR	1034299	ExpressionStatement	free ( client_ipaddr )	257:20:7083:7102	1033818	1	True				
ANR	1034300	CallExpression	free ( client_ipaddr )		1033818	0					
ANR	1034301	Callee	free		1033818	0					
ANR	1034302	Identifier	free		1033818	0					
ANR	1034303	ArgumentList	client_ipaddr		1033818	1					
ANR	1034304	Argument	client_ipaddr		1033818	0					
ANR	1034305	Identifier	client_ipaddr		1033818	0					
ANR	1034306	IfStatement	if ( user )		1033818	34					
ANR	1034307	Condition	user	258:5:7109:7112	1033818	0	True				
ANR	1034308	Identifier	user		1033818	0					
ANR	1034309	ExpressionStatement	free ( user )	258:11:7115:7125	1033818	1	True				
ANR	1034310	CallExpression	free ( user )		1033818	0					
ANR	1034311	Callee	free		1033818	0					
ANR	1034312	Identifier	free		1033818	0					
ANR	1034313	ArgumentList	user		1033818	1					
ANR	1034314	Argument	user		1033818	0					
ANR	1034315	Identifier	user		1033818	0					
ANR	1034316	IfStatement	if ( domain )		1033818	35					
ANR	1034317	Condition	domain	259:5:7132:7137	1033818	0	True				
ANR	1034318	Identifier	domain		1033818	0					
ANR	1034319	ExpressionStatement	free ( domain )	259:13:7140:7152	1033818	1	True				
ANR	1034320	CallExpression	free ( domain )		1033818	0					
ANR	1034321	Callee	free		1033818	0					
ANR	1034322	Identifier	free		1033818	0					
ANR	1034323	ArgumentList	domain		1033818	1					
ANR	1034324	Argument	domain		1033818	0					
ANR	1034325	Identifier	domain		1033818	0					
ANR	1034326	IfStatement	if ( password )		1033818	36					
ANR	1034327	Condition	password	260:5:7159:7166	1033818	0	True				
ANR	1034328	Identifier	password		1033818	0					
ANR	1034329	ExpressionStatement	free ( password )	260:15:7169:7183	1033818	1	True				
ANR	1034330	CallExpression	free ( password )		1033818	0					
ANR	1034331	Callee	free		1033818	0					
ANR	1034332	Identifier	free		1033818	0					
ANR	1034333	ArgumentList	password		1033818	1					
ANR	1034334	Argument	password		1033818	0					
ANR	1034335	Identifier	password		1033818	0					
ANR	1034336	ReturnType	void		1033818	1					
ANR	1034337	Identifier	CredDaemon :: get_passwd_handler		1033818	2					
ANR	1034338	ParameterList	"int i , Stream * s"		1033818	3					
ANR	1034339	Parameter	int i	155:31:4371:4375	1033818	0	True				
ANR	1034340	ParameterType	int		1033818	0					
ANR	1034341	Identifier	i		1033818	1					
ANR	1034342	Parameter	Stream * s	155:38:4378:4386	1033818	1	True				
ANR	1034343	ParameterType	Stream *		1033818	0					
ANR	1034344	Identifier	s		1033818	1					
ANR	1034345	CFGEntryNode	ENTRY		1033818		True				
ANR	1034346	CFGExitNode	EXIT		1033818		True				
ANR	1034347	Symbol	client_domain		1033818						
ANR	1034348	Symbol	getStoredCredential		1033818						
ANR	1034349	Symbol	client_ipaddr		1033818						
ANR	1034350	Symbol	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful ( ) . Value		1033818						
ANR	1034351	Symbol	sock -> end_of_message		1033818						
ANR	1034352	Symbol	sock -> peer_addr		1033818						
ANR	1034353	Symbol	result		1033818						
ANR	1034354	Symbol	( ( Sock * ) s ) -> peer_addr ( ) . to_sinful		1033818						
ANR	1034355	Symbol	strlen		1033818						
ANR	1034356	Symbol	password		1033818						
ANR	1034357	Symbol	sock -> get_encryption		1033818						
ANR	1034358	Symbol	sock -> getOwner		1033818						
ANR	1034359	Symbol	client_user		1033818						
ANR	1034360	Symbol	Stream :: reli_sock		1033818						
ANR	1034361	Symbol	sock -> peer_addr ( ) . to_sinful ( ) . Value		1033818						
ANR	1034362	Symbol	* sock		1033818						
ANR	1034363	Symbol	( ( Sock * ) s ) -> peer_addr		1033818						
ANR	1034364	Symbol	NULL		1033818						
ANR	1034365	Symbol	D_ALWAYS		1033818						
ANR	1034366	Symbol	i		1033818						
ANR	1034367	Symbol	sock		1033818						
ANR	1034368	Symbol	sock -> triedAuthentication		1033818						
ANR	1034369	Symbol	sock -> peer_addr ( ) . to_sinful		1033818						
ANR	1034370	Symbol	s		1033818						
ANR	1034371	Symbol	sock -> code		1033818						
ANR	1034372	Symbol	sock -> getDomain		1033818						
ANR	1034373	Symbol	domain		1033818						
ANR	1034374	Symbol	strdup		1033818						
ANR	1034375	Symbol	user		1033818						
ANR	1034376	Symbol	* s		1033818						
ANR	1034377	Symbol	s -> type		1033818						
ANR	1034378	Function	main_init	271:0:7310:7421							
ANR	1034379	FunctionDef	"main_init (int argc , char * argv [ ])"		1034378	0					
ANR	1034380	CompoundStatement		273:0:7349:7421	1034378	0					
ANR	1034381	ExpressionStatement	"dprintf ( D_ALWAYS , ""main_init() called\\n"" )"	274:1:7352:7393	1034378	0	True				
ANR	1034382	CallExpression	"dprintf ( D_ALWAYS , ""main_init() called\\n"" )"		1034378	0					
ANR	1034383	Callee	dprintf		1034378	0					
ANR	1034384	Identifier	dprintf		1034378	0					
ANR	1034385	ArgumentList	D_ALWAYS		1034378	1					
ANR	1034386	Argument	D_ALWAYS		1034378	0					
ANR	1034387	Identifier	D_ALWAYS		1034378	0					
ANR	1034388	Argument	"""main_init() called\\n"""		1034378	1					
ANR	1034389	PrimaryExpression	"""main_init() called\\n"""		1034378	0					
ANR	1034390	Statement	credd	276:1:7397:7401	1034378	1	True				
ANR	1034391	Statement	=	276:7:7403:7403	1034378	2	True				
ANR	1034392	Statement	new	276:9:7405:7407	1034378	3	True				
ANR	1034393	ExpressionStatement	CredDaemon	276:13:7409:7419	1034378	4	True				
ANR	1034394	Identifier	CredDaemon		1034378	0					
ANR	1034395	ReturnType	void		1034378	1					
ANR	1034396	Identifier	main_init		1034378	2					
ANR	1034397	ParameterList	"int argc , char * argv [ ]"		1034378	3					
ANR	1034398	Parameter	int argc	272:10:7325:7332	1034378	0	True				
ANR	1034399	ParameterType	int		1034378	0					
ANR	1034400	Identifier	argc		1034378	1					
ANR	1034401	Parameter	char * argv [ ]	272:20:7335:7346	1034378	1	True				
ANR	1034402	ParameterType	char * [ ]		1034378	0					
ANR	1034403	Identifier	argv		1034378	1					
ANR	1034404	CFGEntryNode	ENTRY		1034378		True				
ANR	1034405	CFGExitNode	EXIT		1034378		True				
ANR	1034406	Symbol	argc		1034378						
ANR	1034407	Symbol	D_ALWAYS		1034378						
ANR	1034408	Symbol	argv		1034378						
ANR	1034409	Function	main_config	281:0:7489:7577							
ANR	1034410	FunctionDef	main_config ()		1034409	0					
ANR	1034411	CompoundStatement		283:0:7508:7577	1034409	0					
ANR	1034412	ExpressionStatement	"dprintf ( D_ALWAYS , ""main_config() called\\n"" )"	284:1:7511:7554	1034409	0	True				
ANR	1034413	CallExpression	"dprintf ( D_ALWAYS , ""main_config() called\\n"" )"		1034409	0					
ANR	1034414	Callee	dprintf		1034409	0					
ANR	1034415	Identifier	dprintf		1034409	0					
ANR	1034416	ArgumentList	D_ALWAYS		1034409	1					
ANR	1034417	Argument	D_ALWAYS		1034409	0					
ANR	1034418	Identifier	D_ALWAYS		1034409	0					
ANR	1034419	Argument	"""main_config() called\\n"""		1034409	1					
ANR	1034420	PrimaryExpression	"""main_config() called\\n"""		1034409	0					
ANR	1034421	ExpressionStatement	credd -> reconfig ( )	286:1:7558:7575	1034409	1	True				
ANR	1034422	CallExpression	credd -> reconfig ( )		1034409	0					
ANR	1034423	Callee	credd -> reconfig		1034409	0					
ANR	1034424	PtrMemberAccess	credd -> reconfig		1034409	0					
ANR	1034425	Identifier	credd		1034409	0					
ANR	1034426	Identifier	reconfig		1034409	1					
ANR	1034427	ArgumentList			1034409	1					
ANR	1034428	ReturnType	void		1034409	1					
ANR	1034429	Identifier	main_config		1034409	2					
ANR	1034430	ParameterList			1034409	3					
ANR	1034431	CFGEntryNode	ENTRY		1034409		True				
ANR	1034432	CFGExitNode	EXIT		1034409		True				
ANR	1034433	Symbol	D_ALWAYS		1034409						
ANR	1034434	Symbol	credd		1034409						
ANR	1034435	Function	main_shutdown_fast	291:0:7645:7756							
ANR	1034436	FunctionDef	main_shutdown_fast ()		1034435	0					
ANR	1034437	CompoundStatement		292:0:7671:7756	1034435	0					
ANR	1034438	ExpressionStatement	"dprintf ( D_ALWAYS , ""main_shutdown_fast() called\\n"" )"	293:1:7674:7724	1034435	0	True				
ANR	1034439	CallExpression	"dprintf ( D_ALWAYS , ""main_shutdown_fast() called\\n"" )"		1034435	0					
ANR	1034440	Callee	dprintf		1034435	0					
ANR	1034441	Identifier	dprintf		1034435	0					
ANR	1034442	ArgumentList	D_ALWAYS		1034435	1					
ANR	1034443	Argument	D_ALWAYS		1034435	0					
ANR	1034444	Identifier	D_ALWAYS		1034435	0					
ANR	1034445	Argument	"""main_shutdown_fast() called\\n"""		1034435	1					
ANR	1034446	PrimaryExpression	"""main_shutdown_fast() called\\n"""		1034435	0					
ANR	1034447	Statement	delete	295:1:7728:7733	1034435	1	True				
ANR	1034448	ExpressionStatement	credd	295:8:7735:7740	1034435	2	True				
ANR	1034449	Identifier	credd		1034435	0					
ANR	1034450	ExpressionStatement	DC_Exit ( 0 )	297:1:7744:7754	1034435	3	True				
ANR	1034451	CallExpression	DC_Exit ( 0 )		1034435	0					
ANR	1034452	Callee	DC_Exit		1034435	0					
ANR	1034453	Identifier	DC_Exit		1034435	0					
ANR	1034454	ArgumentList	0		1034435	1					
ANR	1034455	Argument	0		1034435	0					
ANR	1034456	PrimaryExpression	0		1034435	0					
ANR	1034457	ReturnType	void		1034435	1					
ANR	1034458	Identifier	main_shutdown_fast		1034435	2					
ANR	1034459	ParameterList			1034435	3					
ANR	1034460	CFGEntryNode	ENTRY		1034435		True				
ANR	1034461	CFGExitNode	EXIT		1034435		True				
ANR	1034462	Symbol	D_ALWAYS		1034435						
ANR	1034463	Function	main_shutdown_graceful	302:0:7824:7943							
ANR	1034464	FunctionDef	main_shutdown_graceful ()		1034463	0					
ANR	1034465	CompoundStatement		303:0:7854:7943	1034463	0					
ANR	1034466	ExpressionStatement	"dprintf ( D_ALWAYS , ""main_shutdown_graceful() called\\n"" )"	304:1:7857:7911	1034463	0	True				
ANR	1034467	CallExpression	"dprintf ( D_ALWAYS , ""main_shutdown_graceful() called\\n"" )"		1034463	0					
ANR	1034468	Callee	dprintf		1034463	0					
ANR	1034469	Identifier	dprintf		1034463	0					
ANR	1034470	ArgumentList	D_ALWAYS		1034463	1					
ANR	1034471	Argument	D_ALWAYS		1034463	0					
ANR	1034472	Identifier	D_ALWAYS		1034463	0					
ANR	1034473	Argument	"""main_shutdown_graceful() called\\n"""		1034463	1					
ANR	1034474	PrimaryExpression	"""main_shutdown_graceful() called\\n"""		1034463	0					
ANR	1034475	Statement	delete	306:1:7915:7920	1034463	1	True				
ANR	1034476	ExpressionStatement	credd	306:8:7922:7927	1034463	2	True				
ANR	1034477	Identifier	credd		1034463	0					
ANR	1034478	ExpressionStatement	DC_Exit ( 0 )	308:1:7931:7941	1034463	3	True				
ANR	1034479	CallExpression	DC_Exit ( 0 )		1034463	0					
ANR	1034480	Callee	DC_Exit		1034463	0					
ANR	1034481	Identifier	DC_Exit		1034463	0					
ANR	1034482	ArgumentList	0		1034463	1					
ANR	1034483	Argument	0		1034463	0					
ANR	1034484	PrimaryExpression	0		1034463	0					
ANR	1034485	ReturnType	void		1034463	1					
ANR	1034486	Identifier	main_shutdown_graceful		1034463	2					
ANR	1034487	ParameterList			1034463	3					
ANR	1034488	CFGEntryNode	ENTRY		1034463		True				
ANR	1034489	CFGExitNode	EXIT		1034463		True				
ANR	1034490	Symbol	D_ALWAYS		1034463						
ANR	1034491	Function	main	313:0:8011:8287							
ANR	1034492	FunctionDef	"main (int argc , char * * argv)"		1034491	0					
ANR	1034493	CompoundStatement		315:0:8045:8287	1034491	0					
ANR	1034494	ExpressionStatement	"set_mySubSystem ( ""CREDD"" , SUBSYSTEM_TYPE_DAEMON )"	316:1:8048:8097	1034491	0	True				
ANR	1034495	CallExpression	"set_mySubSystem ( ""CREDD"" , SUBSYSTEM_TYPE_DAEMON )"		1034491	0					
ANR	1034496	Callee	set_mySubSystem		1034491	0					
ANR	1034497	Identifier	set_mySubSystem		1034491	0					
ANR	1034498	ArgumentList	"""CREDD"""		1034491	1					
ANR	1034499	Argument	"""CREDD"""		1034491	0					
ANR	1034500	PrimaryExpression	"""CREDD"""		1034491	0					
ANR	1034501	Argument	SUBSYSTEM_TYPE_DAEMON		1034491	1					
ANR	1034502	Identifier	SUBSYSTEM_TYPE_DAEMON		1034491	0					
ANR	1034503	ExpressionStatement	dc_main_init = main_init	318:1:8101:8125	1034491	1	True				
ANR	1034504	AssignmentExpression	dc_main_init = main_init		1034491	0		=			
ANR	1034505	Identifier	dc_main_init		1034491	0					
ANR	1034506	Identifier	main_init		1034491	1					
ANR	1034507	ExpressionStatement	dc_main_config = main_config	319:1:8128:8156	1034491	2	True				
ANR	1034508	AssignmentExpression	dc_main_config = main_config		1034491	0		=			
ANR	1034509	Identifier	dc_main_config		1034491	0					
ANR	1034510	Identifier	main_config		1034491	1					
ANR	1034511	ExpressionStatement	dc_main_shutdown_fast = main_shutdown_fast	320:1:8159:8201	1034491	3	True				
ANR	1034512	AssignmentExpression	dc_main_shutdown_fast = main_shutdown_fast		1034491	0		=			
ANR	1034513	Identifier	dc_main_shutdown_fast		1034491	0					
ANR	1034514	Identifier	main_shutdown_fast		1034491	1					
ANR	1034515	ExpressionStatement	dc_main_shutdown_graceful = main_shutdown_graceful	321:1:8204:8254	1034491	4	True				
ANR	1034516	AssignmentExpression	dc_main_shutdown_graceful = main_shutdown_graceful		1034491	0		=			
ANR	1034517	Identifier	dc_main_shutdown_graceful		1034491	0					
ANR	1034518	Identifier	main_shutdown_graceful		1034491	1					
ANR	1034519	ReturnStatement	"return dc_main ( argc , argv ) ;"	322:1:8257:8285	1034491	5	True				
ANR	1034520	CallExpression	"dc_main ( argc , argv )"		1034491	0					
ANR	1034521	Callee	dc_main		1034491	0					
ANR	1034522	Identifier	dc_main		1034491	0					
ANR	1034523	ArgumentList	argc		1034491	1					
ANR	1034524	Argument	argc		1034491	0					
ANR	1034525	Identifier	argc		1034491	0					
ANR	1034526	Argument	argv		1034491	1					
ANR	1034527	Identifier	argv		1034491	0					
ANR	1034528	ReturnType	int		1034491	1					
ANR	1034529	Identifier	main		1034491	2					
ANR	1034530	ParameterList	"int argc , char * * argv"		1034491	3					
ANR	1034531	Parameter	int argc	314:6:8021:8028	1034491	0	True				
ANR	1034532	ParameterType	int		1034491	0					
ANR	1034533	Identifier	argc		1034491	1					
ANR	1034534	Parameter	char * * argv	314:16:8031:8041	1034491	1	True				
ANR	1034535	ParameterType	char * *		1034491	0					
ANR	1034536	Identifier	argv		1034491	1					
ANR	1034537	CFGEntryNode	ENTRY		1034491		True				
ANR	1034538	CFGExitNode	EXIT		1034491		True				
ANR	1034539	Symbol	argc		1034491						
ANR	1034540	Symbol	main_init		1034491						
ANR	1034541	Symbol	dc_main_shutdown_fast		1034491						
ANR	1034542	Symbol	main_shutdown_fast		1034491						
ANR	1034543	Symbol	dc_main		1034491						
ANR	1034544	Symbol	dc_main_config		1034491						
ANR	1034545	Symbol	argv		1034491						
ANR	1034546	Symbol	dc_main_init		1034491						
ANR	1034547	Symbol	main_config		1034491						
ANR	1034548	Symbol	SUBSYSTEM_TYPE_DAEMON		1034491						
ANR	1034549	Symbol	main_shutdown_graceful		1034491						
ANR	1034550	Symbol	dc_main_shutdown_graceful		1034491						
