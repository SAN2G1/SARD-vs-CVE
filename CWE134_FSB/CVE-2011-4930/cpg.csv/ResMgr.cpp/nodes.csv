command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	519887	File	data/converged/CVE-2011-4930_htcondor/ResMgr.cpp								
ANR	519888	Function	ResMgr :: ResMgr	28:1:1000:2760							
ANR	519889	FunctionDef	ResMgr :: ResMgr ()		519888	0					
ANR	519890	CompoundStatement		32:0:1036:2760	519888	0					
ANR	519891	ExpressionStatement	totals_classad = NULL	33:1:1039:1060	519888	0	True				
ANR	519892	AssignmentExpression	totals_classad = NULL		519888	0		=			
ANR	519893	Identifier	totals_classad		519888	0					
ANR	519894	Identifier	NULL		519888	1					
ANR	519895	ExpressionStatement	config_classad = NULL	34:1:1063:1084	519888	1	True				
ANR	519896	AssignmentExpression	config_classad = NULL		519888	0		=			
ANR	519897	Identifier	config_classad		519888	0					
ANR	519898	Identifier	NULL		519888	1					
ANR	519899	ExpressionStatement	up_tid = - 1	35:1:1087:1098	519888	2	True				
ANR	519900	AssignmentExpression	up_tid = - 1		519888	0		=			
ANR	519901	Identifier	up_tid		519888	0					
ANR	519902	UnaryOperationExpression	- 1		519888	1					
ANR	519903	UnaryOperator	-		519888	0					
ANR	519904	PrimaryExpression	1		519888	1					
ANR	519905	ExpressionStatement	poll_tid = - 1	36:1:1101:1114	519888	3	True				
ANR	519906	AssignmentExpression	poll_tid = - 1		519888	0		=			
ANR	519907	Identifier	poll_tid		519888	0					
ANR	519908	UnaryOperationExpression	- 1		519888	1					
ANR	519909	UnaryOperator	-		519888	0					
ANR	519910	PrimaryExpression	1		519888	1					
ANR	519911	ExpressionStatement	draining = false	38:1:1118:1134	519888	4	True				
ANR	519912	AssignmentExpression	draining = false		519888	0		=			
ANR	519913	Identifier	draining		519888	0					
ANR	519914	Identifier	false		519888	1					
ANR	519915	ExpressionStatement	draining_is_graceful = false	39:1:1137:1165	519888	5	True				
ANR	519916	AssignmentExpression	draining_is_graceful = false		519888	0		=			
ANR	519917	Identifier	draining_is_graceful		519888	0					
ANR	519918	Identifier	false		519888	1					
ANR	519919	ExpressionStatement	resume_on_completion_of_draining = false	40:1:1168:1208	519888	6	True				
ANR	519920	AssignmentExpression	resume_on_completion_of_draining = false		519888	0		=			
ANR	519921	Identifier	resume_on_completion_of_draining		519888	0					
ANR	519922	Identifier	false		519888	1					
ANR	519923	ExpressionStatement	draining_id = 0	41:1:1211:1226	519888	7	True				
ANR	519924	AssignmentExpression	draining_id = 0		519888	0		=			
ANR	519925	Identifier	draining_id		519888	0					
ANR	519926	PrimaryExpression	0		519888	1					
ANR	519927	ExpressionStatement	expected_graceful_draining_completion = 0	42:1:1229:1270	519888	8	True				
ANR	519928	AssignmentExpression	expected_graceful_draining_completion = 0		519888	0		=			
ANR	519929	Identifier	expected_graceful_draining_completion		519888	0					
ANR	519930	PrimaryExpression	0		519888	1					
ANR	519931	ExpressionStatement	expected_quick_draining_completion = 0	43:1:1273:1311	519888	9	True				
ANR	519932	AssignmentExpression	expected_quick_draining_completion = 0		519888	0		=			
ANR	519933	Identifier	expected_quick_draining_completion		519888	0					
ANR	519934	PrimaryExpression	0		519888	1					
ANR	519935	ExpressionStatement	expected_graceful_draining_badput = 0	44:1:1314:1351	519888	10	True				
ANR	519936	AssignmentExpression	expected_graceful_draining_badput = 0		519888	0		=			
ANR	519937	Identifier	expected_graceful_draining_badput		519888	0					
ANR	519938	PrimaryExpression	0		519888	1					
ANR	519939	ExpressionStatement	expected_quick_draining_badput = 0	45:1:1354:1388	519888	11	True				
ANR	519940	AssignmentExpression	expected_quick_draining_badput = 0		519888	0		=			
ANR	519941	Identifier	expected_quick_draining_badput		519888	0					
ANR	519942	PrimaryExpression	0		519888	1					
ANR	519943	ExpressionStatement	total_draining_badput = 0	46:1:1391:1416	519888	12	True				
ANR	519944	AssignmentExpression	total_draining_badput = 0		519888	0		=			
ANR	519945	Identifier	total_draining_badput		519888	0					
ANR	519946	PrimaryExpression	0		519888	1					
ANR	519947	ExpressionStatement	total_draining_unclaimed = 0	47:1:1419:1447	519888	13	True				
ANR	519948	AssignmentExpression	total_draining_unclaimed = 0		519888	0		=			
ANR	519949	Identifier	total_draining_unclaimed		519888	0					
ANR	519950	PrimaryExpression	0		519888	1					
ANR	519951	Statement	m_attr	49:1:1451:1456	519888	14	True				
ANR	519952	Statement	=	49:8:1458:1458	519888	15	True				
ANR	519953	Statement	new	49:10:1460:1462	519888	16	True				
ANR	519954	ExpressionStatement	MachAttributes	49:14:1464:1478	519888	17	True				
ANR	519955	Identifier	MachAttributes		519888	0					
ANR	519956	ExpressionStatement	m_backfill_mgr = NULL	52:1:1500:1521	519888	18	True				
ANR	519957	AssignmentExpression	m_backfill_mgr = NULL		519888	0		=			
ANR	519958	Identifier	m_backfill_mgr		519888	0					
ANR	519959	Identifier	NULL		519888	1					
ANR	519960	ExpressionStatement	m_backfill_shutdown_pending = false	53:1:1524:1559	519888	19	True				
ANR	519961	AssignmentExpression	m_backfill_shutdown_pending = false		519888	0		=			
ANR	519962	Identifier	m_backfill_shutdown_pending		519888	0					
ANR	519963	Identifier	false		519888	1					
ANR	519964	ExpressionStatement	m_hook_mgr = NULL	57:1:1589:1606	519888	20	True				
ANR	519965	AssignmentExpression	m_hook_mgr = NULL		519888	0		=			
ANR	519966	Identifier	m_hook_mgr		519888	0					
ANR	519967	Identifier	NULL		519888	1					
ANR	519968	ExpressionStatement	"m_netif = NetworkAdapterBase :: createNetworkAdapter ( daemonCore -> InfoCommandSinfulString ( ) , false )"	61:1:1638:1739	519888	21	True				
ANR	519969	AssignmentExpression	"m_netif = NetworkAdapterBase :: createNetworkAdapter ( daemonCore -> InfoCommandSinfulString ( ) , false )"		519888	0		=			
ANR	519970	Identifier	m_netif		519888	0					
ANR	519971	CallExpression	"NetworkAdapterBase :: createNetworkAdapter ( daemonCore -> InfoCommandSinfulString ( ) , false )"		519888	1					
ANR	519972	Callee	NetworkAdapterBase :: createNetworkAdapter		519888	0					
ANR	519973	Identifier	NetworkAdapterBase :: createNetworkAdapter		519888	0					
ANR	519974	ArgumentList	daemonCore -> InfoCommandSinfulString ( )		519888	1					
ANR	519975	Argument	daemonCore -> InfoCommandSinfulString ( )		519888	0					
ANR	519976	CallExpression	daemonCore -> InfoCommandSinfulString ( )		519888	0					
ANR	519977	Callee	daemonCore -> InfoCommandSinfulString		519888	0					
ANR	519978	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		519888	0					
ANR	519979	Identifier	daemonCore		519888	0					
ANR	519980	Identifier	InfoCommandSinfulString		519888	1					
ANR	519981	ArgumentList			519888	1					
ANR	519982	Argument	false		519888	1					
ANR	519983	Identifier	false		519888	0					
ANR	519984	Statement	StartdHibernator	63:1:1742:1757	519888	22	True				
ANR	519985	Statement	*	63:18:1759:1759	519888	23	True				
ANR	519986	Statement	hibernator	63:19:1760:1769	519888	24	True				
ANR	519987	Statement	=	63:30:1771:1771	519888	25	True				
ANR	519988	Statement	new	63:32:1773:1775	519888	26	True				
ANR	519989	ExpressionStatement	StartdHibernator	63:36:1777:1793	519888	27	True				
ANR	519990	Identifier	StartdHibernator		519888	0					
ANR	519991	ExpressionStatement	m_hibernation_manager = new HibernationManager ( hibernator )	64:1:1796:1856	519888	28	True				
ANR	519992	AssignmentExpression	m_hibernation_manager = new HibernationManager ( hibernator )		519888	0		=			
ANR	519993	Identifier	m_hibernation_manager		519888	0					
ANR	519994	Identifier	hibernator		519888	1					
ANR	519995	IfStatement	if ( m_netif )		519888	29					
ANR	519996	Condition	m_netif	65:6:1864:1870	519888	0	True				
ANR	519997	Identifier	m_netif		519888	0					
ANR	519998	CompoundStatement		34:16:837:837	519888	1					
ANR	519999	ExpressionStatement	m_hibernation_manager -> addInterface ( * m_netif )	66:2:1878:1925	519888	0	True				
ANR	520000	CallExpression	m_hibernation_manager -> addInterface ( * m_netif )		519888	0					
ANR	520001	Callee	m_hibernation_manager -> addInterface		519888	0					
ANR	520002	PtrMemberAccess	m_hibernation_manager -> addInterface		519888	0					
ANR	520003	Identifier	m_hibernation_manager		519888	0					
ANR	520004	Identifier	addInterface		519888	1					
ANR	520005	ArgumentList	* m_netif		519888	1					
ANR	520006	Argument	* m_netif		519888	0					
ANR	520007	UnaryOperationExpression	* m_netif		519888	0					
ANR	520008	UnaryOperator	*		519888	0					
ANR	520009	Identifier	m_netif		519888	1					
ANR	520010	ExpressionStatement	m_hibernate_tid = - 1	68:1:1931:1951	519888	30	True				
ANR	520011	AssignmentExpression	m_hibernate_tid = - 1		519888	0		=			
ANR	520012	Identifier	m_hibernate_tid		519888	0					
ANR	520013	UnaryOperationExpression	- 1		519888	1					
ANR	520014	UnaryOperator	-		519888	0					
ANR	520015	PrimaryExpression	1		519888	1					
ANR	520016	IdentifierDeclStatement	NetworkAdapterBase * primary = m_hibernation_manager -> getNetworkAdapter ( ) ;	69:1:1954:2026	519888	31	True				
ANR	520017	IdentifierDecl	* primary = m_hibernation_manager -> getNetworkAdapter ( )		519888	0					
ANR	520018	IdentifierDeclType	NetworkAdapterBase *		519888	0					
ANR	520019	Identifier	primary		519888	1					
ANR	520020	AssignmentExpression	* primary = m_hibernation_manager -> getNetworkAdapter ( )		519888	2		=			
ANR	520021	Identifier	primary		519888	0					
ANR	520022	CallExpression	m_hibernation_manager -> getNetworkAdapter ( )		519888	1					
ANR	520023	Callee	m_hibernation_manager -> getNetworkAdapter		519888	0					
ANR	520024	PtrMemberAccess	m_hibernation_manager -> getNetworkAdapter		519888	0					
ANR	520025	Identifier	m_hibernation_manager		519888	0					
ANR	520026	Identifier	getNetworkAdapter		519888	1					
ANR	520027	ArgumentList			519888	1					
ANR	520028	IfStatement	if ( NULL == primary )		519888	32					
ANR	520029	Condition	NULL == primary	70:6:2034:2048	519888	0	True				
ANR	520030	EqualityExpression	NULL == primary		519888	0		==			
ANR	520031	Identifier	NULL		519888	0					
ANR	520032	Identifier	primary		519888	1					
ANR	520033	CompoundStatement		39:24:1015:1015	519888	1					
ANR	520034	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""No usable network interface: hibernation disabled\\n"" )"	71:2:2056:2138	519888	0	True				
ANR	520035	CallExpression	"dprintf ( D_FULLDEBUG , ""No usable network interface: hibernation disabled\\n"" )"		519888	0					
ANR	520036	Callee	dprintf		519888	0					
ANR	520037	Identifier	dprintf		519888	0					
ANR	520038	ArgumentList	D_FULLDEBUG		519888	1					
ANR	520039	Argument	D_FULLDEBUG		519888	0					
ANR	520040	Identifier	D_FULLDEBUG		519888	0					
ANR	520041	Argument	"""No usable network interface: hibernation disabled\\n"""		519888	1					
ANR	520042	PrimaryExpression	"""No usable network interface: hibernation disabled\\n"""		519888	0					
ANR	520043	ElseStatement	else		519888	0					
ANR	520044	CompoundStatement		43:6:1112:1112	519888	0					
ANR	520045	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using network interface %s for hibernation\\n"" , primary -> interfaceName ( ) )"	75:2:2153:2254	519888	0	True				
ANR	520046	CallExpression	"dprintf ( D_FULLDEBUG , ""Using network interface %s for hibernation\\n"" , primary -> interfaceName ( ) )"		519888	0					
ANR	520047	Callee	dprintf		519888	0					
ANR	520048	Identifier	dprintf		519888	0					
ANR	520049	ArgumentList	D_FULLDEBUG		519888	1					
ANR	520050	Argument	D_FULLDEBUG		519888	0					
ANR	520051	Identifier	D_FULLDEBUG		519888	0					
ANR	520052	Argument	"""Using network interface %s for hibernation\\n"""		519888	1					
ANR	520053	PrimaryExpression	"""Using network interface %s for hibernation\\n"""		519888	0					
ANR	520054	Argument	primary -> interfaceName ( )		519888	2					
ANR	520055	CallExpression	primary -> interfaceName ( )		519888	0					
ANR	520056	Callee	primary -> interfaceName		519888	0					
ANR	520057	PtrMemberAccess	primary -> interfaceName		519888	0					
ANR	520058	Identifier	primary		519888	0					
ANR	520059	Identifier	interfaceName		519888	1					
ANR	520060	ArgumentList			519888	1					
ANR	520061	ExpressionStatement	m_hibernation_manager -> initialize ( )	78:1:2260:2296	519888	33	True				
ANR	520062	CallExpression	m_hibernation_manager -> initialize ( )		519888	0					
ANR	520063	Callee	m_hibernation_manager -> initialize		519888	0					
ANR	520064	PtrMemberAccess	m_hibernation_manager -> initialize		519888	0					
ANR	520065	Identifier	m_hibernation_manager		519888	0					
ANR	520066	Identifier	initialize		519888	1					
ANR	520067	ArgumentList			519888	1					
ANR	520068	IdentifierDeclStatement	MyString states ;	79:1:2299:2314	519888	34	True				
ANR	520069	IdentifierDecl	states		519888	0					
ANR	520070	IdentifierDeclType	MyString		519888	0					
ANR	520071	Identifier	states		519888	1					
ANR	520072	ExpressionStatement	m_hibernation_manager -> getSupportedStates ( states )	80:1:2317:2366	519888	35	True				
ANR	520073	CallExpression	m_hibernation_manager -> getSupportedStates ( states )		519888	0					
ANR	520074	Callee	m_hibernation_manager -> getSupportedStates		519888	0					
ANR	520075	PtrMemberAccess	m_hibernation_manager -> getSupportedStates		519888	0					
ANR	520076	Identifier	m_hibernation_manager		519888	0					
ANR	520077	Identifier	getSupportedStates		519888	1					
ANR	520078	ArgumentList	states		519888	1					
ANR	520079	Argument	states		519888	0					
ANR	520080	Identifier	states		519888	0					
ANR	520081	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Detected hibernation states: %s\\n"" , states . Value ( ) )"	81:1:2369:2448	519888	36	True				
ANR	520082	CallExpression	"dprintf ( D_FULLDEBUG , ""Detected hibernation states: %s\\n"" , states . Value ( ) )"		519888	0					
ANR	520083	Callee	dprintf		519888	0					
ANR	520084	Identifier	dprintf		519888	0					
ANR	520085	ArgumentList	D_FULLDEBUG		519888	1					
ANR	520086	Argument	D_FULLDEBUG		519888	0					
ANR	520087	Identifier	D_FULLDEBUG		519888	0					
ANR	520088	Argument	"""Detected hibernation states: %s\\n"""		519888	1					
ANR	520089	PrimaryExpression	"""Detected hibernation states: %s\\n"""		519888	0					
ANR	520090	Argument	states . Value ( )		519888	2					
ANR	520091	CallExpression	states . Value ( )		519888	0					
ANR	520092	Callee	states . Value		519888	0					
ANR	520093	MemberAccess	states . Value		519888	0					
ANR	520094	Identifier	states		519888	0					
ANR	520095	Identifier	Value		519888	1					
ANR	520096	ArgumentList			519888	1					
ANR	520097	ExpressionStatement	m_hibernating = FALSE	84:1:2452:2473	519888	37	True				
ANR	520098	AssignmentExpression	m_hibernating = FALSE		519888	0		=			
ANR	520099	Identifier	m_hibernating		519888	0					
ANR	520100	Identifier	FALSE		519888	1					
ANR	520101	ExpressionStatement	id_disp = NULL	87:1:2484:2498	519888	38	True				
ANR	520102	AssignmentExpression	id_disp = NULL		519888	0		=			
ANR	520103	Identifier	id_disp		519888	0					
ANR	520104	Identifier	NULL		519888	1					
ANR	520105	ExpressionStatement	nresources = 0	89:1:2502:2516	519888	39	True				
ANR	520106	AssignmentExpression	nresources = 0		519888	0		=			
ANR	520107	Identifier	nresources		519888	0					
ANR	520108	PrimaryExpression	0		519888	1					
ANR	520109	ExpressionStatement	resources = NULL	90:1:2519:2535	519888	40	True				
ANR	520110	AssignmentExpression	resources = NULL		519888	0		=			
ANR	520111	Identifier	resources		519888	0					
ANR	520112	Identifier	NULL		519888	1					
ANR	520113	ExpressionStatement	type_nums = NULL	91:1:2538:2554	519888	41	True				
ANR	520114	AssignmentExpression	type_nums = NULL		519888	0		=			
ANR	520115	Identifier	type_nums		519888	0					
ANR	520116	Identifier	NULL		519888	1					
ANR	520117	ExpressionStatement	new_type_nums = NULL	92:1:2557:2577	519888	42	True				
ANR	520118	AssignmentExpression	new_type_nums = NULL		519888	0		=			
ANR	520119	Identifier	new_type_nums		519888	0					
ANR	520120	Identifier	NULL		519888	1					
ANR	520121	ExpressionStatement	is_shutting_down = false	93:1:2580:2604	519888	43	True				
ANR	520122	AssignmentExpression	is_shutting_down = false		519888	0		=			
ANR	520123	Identifier	is_shutting_down		519888	0					
ANR	520124	Identifier	false		519888	1					
ANR	520125	ExpressionStatement	cur_time = last_in_use = time ( NULL )	94:1:2607:2644	519888	44	True				
ANR	520126	AssignmentExpression	cur_time = last_in_use = time ( NULL )		519888	0		=			
ANR	520127	Identifier	cur_time		519888	0					
ANR	520128	AssignmentExpression	last_in_use = time ( NULL )		519888	1		=			
ANR	520129	Identifier	last_in_use		519888	0					
ANR	520130	CallExpression	time ( NULL )		519888	1					
ANR	520131	Callee	time		519888	0					
ANR	520132	Identifier	time		519888	0					
ANR	520133	ArgumentList	NULL		519888	1					
ANR	520134	Argument	NULL		519888	0					
ANR	520135	Identifier	NULL		519888	0					
ANR	520136	ExpressionStatement	max_types = 0	96:1:2648:2661	519888	45	True				
ANR	520137	AssignmentExpression	max_types = 0		519888	0		=			
ANR	520138	Identifier	max_types		519888	0					
ANR	520139	PrimaryExpression	0		519888	1					
ANR	520140	ExpressionStatement	num_updates = 0	97:1:2664:2679	519888	46	True				
ANR	520141	AssignmentExpression	num_updates = 0		519888	0		=			
ANR	520142	Identifier	num_updates		519888	0					
ANR	520143	PrimaryExpression	0		519888	1					
ANR	520144	ExpressionStatement	startTime = 0	98:1:2682:2695	519888	47	True				
ANR	520145	AssignmentExpression	startTime = 0		519888	0		=			
ANR	520146	Identifier	startTime		519888	0					
ANR	520147	PrimaryExpression	0		519888	1					
ANR	520148	ExpressionStatement	type_strings = NULL	99:1:2698:2717	519888	48	True				
ANR	520149	AssignmentExpression	type_strings = NULL		519888	0		=			
ANR	520150	Identifier	type_strings		519888	0					
ANR	520151	Identifier	NULL		519888	1					
ANR	520152	ExpressionStatement	m_startd_hook_shutdown_pending = false	100:1:2720:2758	519888	49	True				
ANR	520153	AssignmentExpression	m_startd_hook_shutdown_pending = false		519888	0		=			
ANR	520154	Identifier	m_startd_hook_shutdown_pending		519888	0					
ANR	520155	Identifier	false		519888	1					
ANR	520156	ReturnType	include < math . h >		519888	1					
ANR	520157	Identifier	ResMgr :: ResMgr		519888	2					
ANR	520158	ParameterList			519888	3					
ANR	520159	CFGEntryNode	ENTRY		519888		True				
ANR	520160	CFGExitNode	EXIT		519888		True				
ANR	520161	Symbol	m_hibernation_manager		519888						
ANR	520162	Symbol	* primary		519888						
ANR	520163	Symbol	up_tid		519888						
ANR	520164	Symbol	draining		519888						
ANR	520165	Symbol	m_backfill_mgr		519888						
ANR	520166	Symbol	num_updates		519888						
ANR	520167	Symbol	hibernator		519888						
ANR	520168	Symbol	NULL		519888						
ANR	520169	Symbol	D_FULLDEBUG		519888						
ANR	520170	Symbol	cur_time		519888						
ANR	520171	Symbol	totals_classad		519888						
ANR	520172	Symbol	nresources		519888						
ANR	520173	Symbol	m_hibernate_tid		519888						
ANR	520174	Symbol	m_hibernating		519888						
ANR	520175	Symbol	is_shutting_down		519888						
ANR	520176	Symbol	total_draining_badput		519888						
ANR	520177	Symbol	* daemonCore		519888						
ANR	520178	Symbol	m_hibernation_manager -> getNetworkAdapter		519888						
ANR	520179	Symbol	id_disp		519888						
ANR	520180	Symbol	NetworkAdapterBase :: createNetworkAdapter		519888						
ANR	520181	Symbol	draining_id		519888						
ANR	520182	Symbol	config_classad		519888						
ANR	520183	Symbol	primary		519888						
ANR	520184	Symbol	expected_quick_draining_badput		519888						
ANR	520185	Symbol	max_types		519888						
ANR	520186	Symbol	m_netif		519888						
ANR	520187	Symbol	poll_tid		519888						
ANR	520188	Symbol	states		519888						
ANR	520189	Symbol	new_type_nums		519888						
ANR	520190	Symbol	daemonCore		519888						
ANR	520191	Symbol	resume_on_completion_of_draining		519888						
ANR	520192	Symbol	total_draining_unclaimed		519888						
ANR	520193	Symbol	startTime		519888						
ANR	520194	Symbol	last_in_use		519888						
ANR	520195	Symbol	type_nums		519888						
ANR	520196	Symbol	daemonCore -> InfoCommandSinfulString		519888						
ANR	520197	Symbol	type_strings		519888						
ANR	520198	Symbol	expected_graceful_draining_badput		519888						
ANR	520199	Symbol	false		519888						
ANR	520200	Symbol	expected_graceful_draining_completion		519888						
ANR	520201	Symbol	resources		519888						
ANR	520202	Symbol	m_backfill_shutdown_pending		519888						
ANR	520203	Symbol	* m_hibernation_manager		519888						
ANR	520204	Symbol	states . Value		519888						
ANR	520205	Symbol	m_startd_hook_shutdown_pending		519888						
ANR	520206	Symbol	expected_quick_draining_completion		519888						
ANR	520207	Symbol	* m_netif		519888						
ANR	520208	Symbol	primary -> interfaceName		519888						
ANR	520209	Symbol	FALSE		519888						
ANR	520210	Symbol	draining_is_graceful		519888						
ANR	520211	Symbol	time		519888						
ANR	520212	Symbol	m_hook_mgr		519888						
ANR	520213	Function	ResMgr :: Stats :: Init	103:0:2763:3123							
ANR	520214	FunctionDef	ResMgr :: Stats :: Init ()		520213	0					
ANR	520215	CompoundStatement		104:0:2790:3123	520213	0					
ANR	520216	ExpressionStatement	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , Compute , IF_VERBOSEPUB )"	105:3:2795:2870	520213	0	True				
ANR	520217	CallExpression	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , Compute , IF_VERBOSEPUB )"		520213	0					
ANR	520218	Callee	STATS_POOL_ADD		520213	0					
ANR	520219	Identifier	STATS_POOL_ADD		520213	0					
ANR	520220	ArgumentList	daemonCore -> dc_stats . Pool		520213	1					
ANR	520221	Argument	daemonCore -> dc_stats . Pool		520213	0					
ANR	520222	MemberAccess	daemonCore -> dc_stats . Pool		520213	0					
ANR	520223	PtrMemberAccess	daemonCore -> dc_stats		520213	0					
ANR	520224	Identifier	daemonCore		520213	0					
ANR	520225	Identifier	dc_stats		520213	1					
ANR	520226	Identifier	Pool		520213	1					
ANR	520227	Argument	"""ResMgr"""		520213	1					
ANR	520228	PrimaryExpression	"""ResMgr"""		520213	0					
ANR	520229	Argument	Compute		520213	2					
ANR	520230	Identifier	Compute		520213	0					
ANR	520231	Argument	IF_VERBOSEPUB		520213	3					
ANR	520232	Identifier	IF_VERBOSEPUB		520213	0					
ANR	520233	ExpressionStatement	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , WalkEvalState , IF_VERBOSEPUB )"	106:3:2875:2956	520213	1	True				
ANR	520234	CallExpression	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , WalkEvalState , IF_VERBOSEPUB )"		520213	0					
ANR	520235	Callee	STATS_POOL_ADD		520213	0					
ANR	520236	Identifier	STATS_POOL_ADD		520213	0					
ANR	520237	ArgumentList	daemonCore -> dc_stats . Pool		520213	1					
ANR	520238	Argument	daemonCore -> dc_stats . Pool		520213	0					
ANR	520239	MemberAccess	daemonCore -> dc_stats . Pool		520213	0					
ANR	520240	PtrMemberAccess	daemonCore -> dc_stats		520213	0					
ANR	520241	Identifier	daemonCore		520213	0					
ANR	520242	Identifier	dc_stats		520213	1					
ANR	520243	Identifier	Pool		520213	1					
ANR	520244	Argument	"""ResMgr"""		520213	1					
ANR	520245	PrimaryExpression	"""ResMgr"""		520213	0					
ANR	520246	Argument	WalkEvalState		520213	2					
ANR	520247	Identifier	WalkEvalState		520213	0					
ANR	520248	Argument	IF_VERBOSEPUB		520213	3					
ANR	520249	Identifier	IF_VERBOSEPUB		520213	0					
ANR	520250	ExpressionStatement	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , WalkUpdate , IF_VERBOSEPUB )"	107:3:2961:3039	520213	2	True				
ANR	520251	CallExpression	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , WalkUpdate , IF_VERBOSEPUB )"		520213	0					
ANR	520252	Callee	STATS_POOL_ADD		520213	0					
ANR	520253	Identifier	STATS_POOL_ADD		520213	0					
ANR	520254	ArgumentList	daemonCore -> dc_stats . Pool		520213	1					
ANR	520255	Argument	daemonCore -> dc_stats . Pool		520213	0					
ANR	520256	MemberAccess	daemonCore -> dc_stats . Pool		520213	0					
ANR	520257	PtrMemberAccess	daemonCore -> dc_stats		520213	0					
ANR	520258	Identifier	daemonCore		520213	0					
ANR	520259	Identifier	dc_stats		520213	1					
ANR	520260	Identifier	Pool		520213	1					
ANR	520261	Argument	"""ResMgr"""		520213	1					
ANR	520262	PrimaryExpression	"""ResMgr"""		520213	0					
ANR	520263	Argument	WalkUpdate		520213	2					
ANR	520264	Identifier	WalkUpdate		520213	0					
ANR	520265	Argument	IF_VERBOSEPUB		520213	3					
ANR	520266	Identifier	IF_VERBOSEPUB		520213	0					
ANR	520267	ExpressionStatement	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , WalkOther , IF_VERBOSEPUB )"	108:3:3044:3121	520213	3	True				
ANR	520268	CallExpression	"STATS_POOL_ADD ( daemonCore -> dc_stats . Pool , ""ResMgr"" , WalkOther , IF_VERBOSEPUB )"		520213	0					
ANR	520269	Callee	STATS_POOL_ADD		520213	0					
ANR	520270	Identifier	STATS_POOL_ADD		520213	0					
ANR	520271	ArgumentList	daemonCore -> dc_stats . Pool		520213	1					
ANR	520272	Argument	daemonCore -> dc_stats . Pool		520213	0					
ANR	520273	MemberAccess	daemonCore -> dc_stats . Pool		520213	0					
ANR	520274	PtrMemberAccess	daemonCore -> dc_stats		520213	0					
ANR	520275	Identifier	daemonCore		520213	0					
ANR	520276	Identifier	dc_stats		520213	1					
ANR	520277	Identifier	Pool		520213	1					
ANR	520278	Argument	"""ResMgr"""		520213	1					
ANR	520279	PrimaryExpression	"""ResMgr"""		520213	0					
ANR	520280	Argument	WalkOther		520213	2					
ANR	520281	Identifier	WalkOther		520213	0					
ANR	520282	Argument	IF_VERBOSEPUB		520213	3					
ANR	520283	Identifier	IF_VERBOSEPUB		520213	0					
ANR	520284	ReturnType	void		520213	1					
ANR	520285	Identifier	ResMgr :: Stats :: Init		520213	2					
ANR	520286	ParameterList			520213	3					
ANR	520287	CFGEntryNode	ENTRY		520213		True				
ANR	520288	CFGExitNode	EXIT		520213		True				
ANR	520289	Symbol	daemonCore -> dc_stats . Pool		520213						
ANR	520290	Symbol	WalkUpdate		520213						
ANR	520291	Symbol	daemonCore -> dc_stats		520213						
ANR	520292	Symbol	IF_VERBOSEPUB		520213						
ANR	520293	Symbol	* daemonCore		520213						
ANR	520294	Symbol	Compute		520213						
ANR	520295	Symbol	daemonCore		520213						
ANR	520296	Symbol	WalkEvalState		520213						
ANR	520297	Symbol	WalkOther		520213						
ANR	520298	Function	ResMgr :: Stats :: EndRuntime	116:0:3243:3414							
ANR	520299	FunctionDef	"ResMgr :: Stats :: EndRuntime (stats_recent_counter_timer & probe , double before)"		520298	0					
ANR	520300	CompoundStatement		117:0:3327:3414	520298	0					
ANR	520301	IdentifierDeclStatement	double now = UtcTime :: getTimeDouble ( ) ;	118:3:3332:3369	520298	0	True				
ANR	520302	IdentifierDecl	now = UtcTime :: getTimeDouble ( )		520298	0					
ANR	520303	IdentifierDeclType	double		520298	0					
ANR	520304	Identifier	now		520298	1					
ANR	520305	AssignmentExpression	now = UtcTime :: getTimeDouble ( )		520298	2		=			
ANR	520306	Identifier	now		520298	0					
ANR	520307	CallExpression	UtcTime :: getTimeDouble ( )		520298	1					
ANR	520308	Callee	UtcTime :: getTimeDouble		520298	0					
ANR	520309	Identifier	UtcTime :: getTimeDouble		520298	0					
ANR	520310	ArgumentList			520298	1					
ANR	520311	ExpressionStatement	probe . Add ( now - before )	119:3:3374:3397	520298	1	True				
ANR	520312	CallExpression	probe . Add ( now - before )		520298	0					
ANR	520313	Callee	probe . Add		520298	0					
ANR	520314	MemberAccess	probe . Add		520298	0					
ANR	520315	Identifier	probe		520298	0					
ANR	520316	Identifier	Add		520298	1					
ANR	520317	ArgumentList	now - before		520298	1					
ANR	520318	Argument	now - before		520298	0					
ANR	520319	AdditiveExpression	now - before		520298	0		-			
ANR	520320	Identifier	now		520298	0					
ANR	520321	Identifier	before		520298	1					
ANR	520322	ReturnStatement	return now ;	120:3:3402:3412	520298	2	True				
ANR	520323	Identifier	now		520298	0					
ANR	520324	ReturnType	double		520298	1					
ANR	520325	Identifier	ResMgr :: Stats :: EndRuntime		520298	2					
ANR	520326	ParameterList	"stats_recent_counter_timer & probe , double before"		520298	3					
ANR	520327	Parameter	stats_recent_counter_timer & probe	116:33:3276:3309	520298	0	True				
ANR	520328	ParameterType	stats_recent_counter_timer &		520298	0					
ANR	520329	Identifier	probe		520298	1					
ANR	520330	Parameter	double before	116:69:3312:3324	520298	1	True				
ANR	520331	ParameterType	double		520298	0					
ANR	520332	Identifier	before		520298	1					
ANR	520333	CFGEntryNode	ENTRY		520298		True				
ANR	520334	CFGExitNode	EXIT		520298		True				
ANR	520335	Symbol	UtcTime :: getTimeDouble		520298						
ANR	520336	Symbol	before		520298						
ANR	520337	Symbol	now		520298						
ANR	520338	Symbol	probe		520298						
ANR	520339	Function	ResMgr :: Stats :: EndWalk	128:0:3526:3847							
ANR	520340	FunctionDef	"ResMgr :: Stats :: EndWalk (VoidResourceMember memberfunc , double before)"		520339	0					
ANR	520341	CompoundStatement		129:0:3602:3847	520339	0					
ANR	520342	IdentifierDeclStatement	stats_recent_counter_timer * probe = & WalkOther ;	130:4:3608:3655	520339	0	True				
ANR	520343	IdentifierDecl	* probe = & WalkOther		520339	0					
ANR	520344	IdentifierDeclType	stats_recent_counter_timer *		520339	0					
ANR	520345	Identifier	probe		520339	1					
ANR	520346	AssignmentExpression	* probe = & WalkOther		520339	2		=			
ANR	520347	Identifier	probe		520339	0					
ANR	520348	UnaryOperationExpression	& WalkOther		520339	1					
ANR	520349	UnaryOperator	&		520339	0					
ANR	520350	Identifier	WalkOther		520339	1					
ANR	520351	IfStatement	if ( memberfunc == & Resource :: update )		520339	1					
ANR	520352	Condition	memberfunc == & Resource :: update	131:8:3665:3695	520339	0	True				
ANR	520353	EqualityExpression	memberfunc == & Resource :: update		520339	0		==			
ANR	520354	Identifier	memberfunc		520339	0					
ANR	520355	UnaryOperationExpression	& Resource :: update		520339	1					
ANR	520356	UnaryOperator	&		520339	0					
ANR	520357	Identifier	Resource :: update		520339	1					
ANR	520358	ExpressionStatement	probe = & WalkUpdate	132:7:3706:3725	520339	1	True				
ANR	520359	AssignmentExpression	probe = & WalkUpdate		520339	0		=			
ANR	520360	Identifier	probe		520339	0					
ANR	520361	UnaryOperationExpression	& WalkUpdate		520339	1					
ANR	520362	UnaryOperator	&		520339	0					
ANR	520363	Identifier	WalkUpdate		520339	1					
ANR	520364	ElseStatement	else		520339	0					
ANR	520365	IfStatement	if ( memberfunc == & Resource :: eval_state )		520339	0					
ANR	520366	Condition	memberfunc == & Resource :: eval_state	133:13:3740:3774	520339	0	True				
ANR	520367	EqualityExpression	memberfunc == & Resource :: eval_state		520339	0		==			
ANR	520368	Identifier	memberfunc		520339	0					
ANR	520369	UnaryOperationExpression	& Resource :: eval_state		520339	1					
ANR	520370	UnaryOperator	&		520339	0					
ANR	520371	Identifier	Resource :: eval_state		520339	1					
ANR	520372	ExpressionStatement	probe = & WalkEvalState	134:7:3784:3806	520339	1	True				
ANR	520373	AssignmentExpression	probe = & WalkEvalState		520339	0		=			
ANR	520374	Identifier	probe		520339	0					
ANR	520375	UnaryOperationExpression	& WalkEvalState		520339	1					
ANR	520376	UnaryOperator	&		520339	0					
ANR	520377	Identifier	WalkEvalState		520339	1					
ANR	520378	ReturnStatement	"return EndRuntime ( * probe , before ) ;"	135:4:3812:3845	520339	2	True				
ANR	520379	CallExpression	"EndRuntime ( * probe , before )"		520339	0					
ANR	520380	Callee	EndRuntime		520339	0					
ANR	520381	Identifier	EndRuntime		520339	0					
ANR	520382	ArgumentList	* probe		520339	1					
ANR	520383	Argument	* probe		520339	0					
ANR	520384	UnaryOperationExpression	* probe		520339	0					
ANR	520385	UnaryOperator	*		520339	0					
ANR	520386	Identifier	probe		520339	1					
ANR	520387	Argument	before		520339	1					
ANR	520388	Identifier	before		520339	0					
ANR	520389	ReturnType	double		520339	1					
ANR	520390	Identifier	ResMgr :: Stats :: EndWalk		520339	2					
ANR	520391	ParameterList	"VoidResourceMember memberfunc , double before"		520339	3					
ANR	520392	Parameter	VoidResourceMember memberfunc	128:30:3556:3584	520339	0	True				
ANR	520393	ParameterType	VoidResourceMember		520339	0					
ANR	520394	Identifier	memberfunc		520339	1					
ANR	520395	Parameter	double before	128:61:3587:3599	520339	1	True				
ANR	520396	ParameterType	double		520339	0					
ANR	520397	Identifier	before		520339	1					
ANR	520398	CFGEntryNode	ENTRY		520339		True				
ANR	520399	CFGExitNode	EXIT		520339		True				
ANR	520400	Symbol	before		520339						
ANR	520401	Symbol	& WalkOther		520339						
ANR	520402	Symbol	& Resource :: update		520339						
ANR	520403	Symbol	memberfunc		520339						
ANR	520404	Symbol	& WalkEvalState		520339						
ANR	520405	Symbol	* probe		520339						
ANR	520406	Symbol	& WalkUpdate		520339						
ANR	520407	Symbol	EndRuntime		520339						
ANR	520408	Symbol	probe		520339						
ANR	520409	Symbol	& Resource :: eval_state		520339						
ANR	520410	Function	ResMgr :: ~ResMgr	139:0:3851:4669							
ANR	520411	FunctionDef	ResMgr :: ~ResMgr ()		520410	0					
ANR	520412	CompoundStatement		140:0:3869:4669	520410	0					
ANR	520413	IdentifierDeclStatement	int i ;	141:1:3872:3877	520410	0	True				
ANR	520414	IdentifierDecl	i		520410	0					
ANR	520415	IdentifierDeclType	int		520410	0					
ANR	520416	Identifier	i		520410	1					
ANR	520417	IfStatement	if ( config_classad )		520410	1					
ANR	520418	Condition	config_classad	142:5:3884:3897	520410	0	True				
ANR	520419	Identifier	config_classad		520410	0					
ANR	520420	Statement	delete	142:22:3901:3906	520410	1	True				
ANR	520421	ExpressionStatement	config_classad	142:29:3908:3922	520410	2	True				
ANR	520422	Identifier	config_classad		520410	0					
ANR	520423	IfStatement	if ( totals_classad )		520410	3					
ANR	520424	Condition	totals_classad	143:5:3929:3942	520410	0	True				
ANR	520425	Identifier	totals_classad		520410	0					
ANR	520426	Statement	delete	143:22:3946:3951	520410	1	True				
ANR	520427	ExpressionStatement	totals_classad	143:29:3953:3967	520410	4	True				
ANR	520428	Identifier	totals_classad		520410	0					
ANR	520429	IfStatement	if ( id_disp )		520410	5					
ANR	520430	Condition	id_disp	144:5:3974:3980	520410	0	True				
ANR	520431	Identifier	id_disp		520410	0					
ANR	520432	Statement	delete	144:15:3984:3989	520410	1	True				
ANR	520433	ExpressionStatement	id_disp	144:22:3991:3998	520410	6	True				
ANR	520434	Identifier	id_disp		520410	0					
ANR	520435	Statement	delete	145:1:4001:4006	520410	7	True				
ANR	520436	ExpressionStatement	m_attr	145:8:4008:4014	520410	8	True				
ANR	520437	Identifier	m_attr		520410	0					
ANR	520438	IfStatement	if ( m_backfill_mgr )		520410	9					
ANR	520439	Condition	m_backfill_mgr	148:5:4040:4053	520410	0	True				
ANR	520440	Identifier	m_backfill_mgr		520410	0					
ANR	520441	CompoundStatement		9:22:187:187	520410	1					
ANR	520442	Statement	delete	149:2:4061:4066	520410	0	True				
ANR	520443	ExpressionStatement	m_backfill_mgr	149:9:4068:4082	520410	1	True				
ANR	520444	Identifier	m_backfill_mgr		520410	0					
ANR	520445	IfStatement	if ( m_hook_mgr )		520410	10					
ANR	520446	Condition	m_hook_mgr	154:5:4119:4128	520410	0	True				
ANR	520447	Identifier	m_hook_mgr		520410	0					
ANR	520448	CompoundStatement		15:17:261:261	520410	1					
ANR	520449	Statement	delete	155:2:4135:4140	520410	0	True				
ANR	520450	ExpressionStatement	m_hook_mgr	155:9:4142:4152	520410	1	True				
ANR	520451	Identifier	m_hook_mgr		520410	0					
ANR	520452	ExpressionStatement	cancelHibernateTimer ( )	160:1:4187:4209	520410	11	True				
ANR	520453	CallExpression	cancelHibernateTimer ( )		520410	0					
ANR	520454	Callee	cancelHibernateTimer		520410	0					
ANR	520455	Identifier	cancelHibernateTimer		520410	0					
ANR	520456	ArgumentList			520410	1					
ANR	520457	IfStatement	if ( m_hibernation_manager )		520410	12					
ANR	520458	Condition	m_hibernation_manager	161:5:4216:4236	520410	0	True				
ANR	520459	Identifier	m_hibernation_manager		520410	0					
ANR	520460	CompoundStatement		22:28:369:369	520410	1					
ANR	520461	Statement	delete	162:2:4243:4248	520410	0	True				
ANR	520462	ExpressionStatement	m_hibernation_manager	162:9:4250:4271	520410	1	True				
ANR	520463	Identifier	m_hibernation_manager		520410	0					
ANR	520464	IfStatement	if ( m_netif )		520410	13					
ANR	520465	Condition	m_netif	165:6:4283:4289	520410	0	True				
ANR	520466	Identifier	m_netif		520410	0					
ANR	520467	CompoundStatement		26:16:423:423	520410	1					
ANR	520468	Statement	delete	166:2:4297:4302	520410	0	True				
ANR	520469	ExpressionStatement	m_netif	166:9:4304:4311	520410	1	True				
ANR	520470	Identifier	m_netif		520410	0					
ANR	520471	ExpressionStatement	m_netif = NULL	167:2:4315:4329	520410	2	True				
ANR	520472	AssignmentExpression	m_netif = NULL		520410	0		=			
ANR	520473	Identifier	m_netif		520410	0					
ANR	520474	Identifier	NULL		520410	1					
ANR	520475	IfStatement	if ( resources )		520410	14					
ANR	520476	Condition	resources	172:5:4371:4379	520410	0	True				
ANR	520477	Identifier	resources		520410	0					
ANR	520478	CompoundStatement		33:17:513:513	520410	1					
ANR	520479	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		520410	0					
ANR	520480	ForInit	i = 0 ;	173:7:4392:4397	520410	0	True				
ANR	520481	AssignmentExpression	i = 0		520410	0		=			
ANR	520482	Identifier	i		520410	0					
ANR	520483	PrimaryExpression	0		520410	1					
ANR	520484	Condition	i < nresources	173:14:4399:4412	520410	1	True				
ANR	520485	RelationalExpression	i < nresources		520410	0		<			
ANR	520486	Identifier	i		520410	0					
ANR	520487	Identifier	nresources		520410	1					
ANR	520488	PostIncDecOperationExpression	i ++	173:30:4415:4417	520410	2	True				
ANR	520489	Identifier	i		520410	0					
ANR	520490	IncDec	++		520410	1					
ANR	520491	CompoundStatement		34:36:551:551	520410	3					
ANR	520492	Statement	delete	174:3:4426:4431	520410	0	True				
ANR	520493	ExpressionStatement	resources [ i ]	174:10:4433:4445	520410	1	True				
ANR	520494	ArrayIndexing	resources [ i ]		520410	0					
ANR	520495	Identifier	resources		520410	0					
ANR	520496	Identifier	i		520410	1					
ANR	520497	Statement	delete	176:2:4453:4458	520410	1	True				
ANR	520498	Statement	[	176:9:4460:4460	520410	2	True				
ANR	520499	Statement	]	176:10:4461:4461	520410	3	True				
ANR	520500	ExpressionStatement	resources	176:12:4463:4472	520410	4	True				
ANR	520501	Identifier	resources		520410	0					
ANR	520502	ForStatement	for ( i = 0 ; i < max_types ; i ++ )		520410	15					
ANR	520503	ForInit	i = 0 ;	178:6:4483:4486	520410	0	True				
ANR	520504	AssignmentExpression	i = 0		520410	0		=			
ANR	520505	Identifier	i		520410	0					
ANR	520506	PrimaryExpression	0		520410	1					
ANR	520507	Condition	i < max_types	178:11:4488:4498	520410	1	True				
ANR	520508	RelationalExpression	i < max_types		520410	0		<			
ANR	520509	Identifier	i		520410	0					
ANR	520510	Identifier	max_types		520410	1					
ANR	520511	PostIncDecOperationExpression	i ++	178:24:4501:4503	520410	2	True				
ANR	520512	Identifier	i		520410	0					
ANR	520513	IncDec	++		520410	1					
ANR	520514	CompoundStatement		39:30:637:637	520410	3					
ANR	520515	IfStatement	if ( type_strings [ i ] )		520410	0					
ANR	520516	Condition	type_strings [ i ]	179:6:4515:4529	520410	0	True				
ANR	520517	ArrayIndexing	type_strings [ i ]		520410	0					
ANR	520518	Identifier	type_strings		520410	0					
ANR	520519	Identifier	i		520410	1					
ANR	520520	CompoundStatement		40:24:663:663	520410	1					
ANR	520521	Statement	delete	180:3:4538:4543	520410	0	True				
ANR	520522	ExpressionStatement	type_strings [ i ]	180:10:4545:4560	520410	1	True				
ANR	520523	ArrayIndexing	type_strings [ i ]		520410	0					
ANR	520524	Identifier	type_strings		520410	0					
ANR	520525	Identifier	i		520410	1					
ANR	520526	Statement	delete	183:1:4570:4575	520410	16	True				
ANR	520527	Statement	[	183:8:4577:4577	520410	17	True				
ANR	520528	Statement	]	183:9:4578:4578	520410	18	True				
ANR	520529	ExpressionStatement	type_strings	183:11:4580:4592	520410	19	True				
ANR	520530	Identifier	type_strings		520410	0					
ANR	520531	Statement	delete	184:1:4595:4600	520410	20	True				
ANR	520532	Statement	[	184:8:4602:4602	520410	21	True				
ANR	520533	Statement	]	184:9:4603:4603	520410	22	True				
ANR	520534	ExpressionStatement	type_nums	184:11:4605:4614	520410	23	True				
ANR	520535	Identifier	type_nums		520410	0					
ANR	520536	IfStatement	if ( new_type_nums )		520410	24					
ANR	520537	Condition	new_type_nums	185:5:4621:4633	520410	0	True				
ANR	520538	Identifier	new_type_nums		520410	0					
ANR	520539	CompoundStatement		46:21:767:767	520410	1					
ANR	520540	Statement	delete	186:2:4641:4646	520410	0	True				
ANR	520541	Statement	[	186:9:4648:4648	520410	1	True				
ANR	520542	Statement	]	186:10:4649:4649	520410	2	True				
ANR	520543	ExpressionStatement	new_type_nums	186:12:4651:4664	520410	3	True				
ANR	520544	Identifier	new_type_nums		520410	0					
ANR	520545	Identifier	ResMgr :: ~ResMgr		520410	1					
ANR	520546	ParameterList			520410	2					
ANR	520547	CFGEntryNode	ENTRY		520410		True				
ANR	520548	CFGExitNode	EXIT		520410		True				
ANR	520549	Symbol	NULL		520410						
ANR	520550	Symbol	type_strings		520410						
ANR	520551	Symbol	max_types		520410						
ANR	520552	Symbol	i		520410						
ANR	520553	Symbol	m_netif		520410						
ANR	520554	Symbol	resources		520410						
ANR	520555	Symbol	totals_classad		520410						
ANR	520556	Symbol	nresources		520410						
ANR	520557	Symbol	m_hibernation_manager		520410						
ANR	520558	Symbol	* type_strings		520410						
ANR	520559	Symbol	* i		520410						
ANR	520560	Symbol	new_type_nums		520410						
ANR	520561	Symbol	id_disp		520410						
ANR	520562	Symbol	m_hook_mgr		520410						
ANR	520563	Symbol	m_backfill_mgr		520410						
ANR	520564	Symbol	config_classad		520410						
ANR	520565	Function	ResMgr :: init_config_classad	191:0:4673:7912							
ANR	520566	FunctionDef	ResMgr :: init_config_classad ()		520565	0					
ANR	520567	CompoundStatement		193:0:4714:7912	520565	0					
ANR	520568	IfStatement	if ( config_classad )		520565	0					
ANR	520569	Condition	config_classad	194:5:4721:4734	520565	0	True				
ANR	520570	Identifier	config_classad		520565	0					
ANR	520571	Statement	delete	194:22:4738:4743	520565	1	True				
ANR	520572	ExpressionStatement	config_classad	194:29:4745:4759	520565	1	True				
ANR	520573	Identifier	config_classad		520565	0					
ANR	520574	ExpressionStatement	config_classad = new ClassAd ( )	195:1:4762:4792	520565	2	True				
ANR	520575	AssignmentExpression	config_classad = new ClassAd ( )		520565	0		=			
ANR	520576	Identifier	config_classad		520565	0					
ANR	520577	UnaryExpression	new ClassAd ( )		520565	1					
ANR	520578	ExpressionStatement	"configInsert ( config_classad , ""START"" , true )"	198:1:4844:4889	520565	3	True				
ANR	520579	CallExpression	"configInsert ( config_classad , ""START"" , true )"		520565	0					
ANR	520580	Callee	configInsert		520565	0					
ANR	520581	Identifier	configInsert		520565	0					
ANR	520582	ArgumentList	config_classad		520565	1					
ANR	520583	Argument	config_classad		520565	0					
ANR	520584	Identifier	config_classad		520565	0					
ANR	520585	Argument	"""START"""		520565	1					
ANR	520586	PrimaryExpression	"""START"""		520565	0					
ANR	520587	Argument	true		520565	2					
ANR	520588	Identifier	true		520565	0					
ANR	520589	ExpressionStatement	"configInsert ( config_classad , ""SUSPEND"" , true )"	199:1:4892:4939	520565	4	True				
ANR	520590	CallExpression	"configInsert ( config_classad , ""SUSPEND"" , true )"		520565	0					
ANR	520591	Callee	configInsert		520565	0					
ANR	520592	Identifier	configInsert		520565	0					
ANR	520593	ArgumentList	config_classad		520565	1					
ANR	520594	Argument	config_classad		520565	0					
ANR	520595	Identifier	config_classad		520565	0					
ANR	520596	Argument	"""SUSPEND"""		520565	1					
ANR	520597	PrimaryExpression	"""SUSPEND"""		520565	0					
ANR	520598	Argument	true		520565	2					
ANR	520599	Identifier	true		520565	0					
ANR	520600	ExpressionStatement	"configInsert ( config_classad , ""CONTINUE"" , true )"	200:1:4942:4990	520565	5	True				
ANR	520601	CallExpression	"configInsert ( config_classad , ""CONTINUE"" , true )"		520565	0					
ANR	520602	Callee	configInsert		520565	0					
ANR	520603	Identifier	configInsert		520565	0					
ANR	520604	ArgumentList	config_classad		520565	1					
ANR	520605	Argument	config_classad		520565	0					
ANR	520606	Identifier	config_classad		520565	0					
ANR	520607	Argument	"""CONTINUE"""		520565	1					
ANR	520608	PrimaryExpression	"""CONTINUE"""		520565	0					
ANR	520609	Argument	true		520565	2					
ANR	520610	Identifier	true		520565	0					
ANR	520611	ExpressionStatement	"configInsert ( config_classad , ""PREEMPT"" , true )"	201:1:4993:5040	520565	6	True				
ANR	520612	CallExpression	"configInsert ( config_classad , ""PREEMPT"" , true )"		520565	0					
ANR	520613	Callee	configInsert		520565	0					
ANR	520614	Identifier	configInsert		520565	0					
ANR	520615	ArgumentList	config_classad		520565	1					
ANR	520616	Argument	config_classad		520565	0					
ANR	520617	Identifier	config_classad		520565	0					
ANR	520618	Argument	"""PREEMPT"""		520565	1					
ANR	520619	PrimaryExpression	"""PREEMPT"""		520565	0					
ANR	520620	Argument	true		520565	2					
ANR	520621	Identifier	true		520565	0					
ANR	520622	ExpressionStatement	"configInsert ( config_classad , ""KILL"" , true )"	202:1:5043:5087	520565	7	True				
ANR	520623	CallExpression	"configInsert ( config_classad , ""KILL"" , true )"		520565	0					
ANR	520624	Callee	configInsert		520565	0					
ANR	520625	Identifier	configInsert		520565	0					
ANR	520626	ArgumentList	config_classad		520565	1					
ANR	520627	Argument	config_classad		520565	0					
ANR	520628	Identifier	config_classad		520565	0					
ANR	520629	Argument	"""KILL"""		520565	1					
ANR	520630	PrimaryExpression	"""KILL"""		520565	0					
ANR	520631	Argument	true		520565	2					
ANR	520632	Identifier	true		520565	0					
ANR	520633	ExpressionStatement	"configInsert ( config_classad , ""WANT_SUSPEND"" , true )"	203:1:5090:5142	520565	8	True				
ANR	520634	CallExpression	"configInsert ( config_classad , ""WANT_SUSPEND"" , true )"		520565	0					
ANR	520635	Callee	configInsert		520565	0					
ANR	520636	Identifier	configInsert		520565	0					
ANR	520637	ArgumentList	config_classad		520565	1					
ANR	520638	Argument	config_classad		520565	0					
ANR	520639	Identifier	config_classad		520565	0					
ANR	520640	Argument	"""WANT_SUSPEND"""		520565	1					
ANR	520641	PrimaryExpression	"""WANT_SUSPEND"""		520565	0					
ANR	520642	Argument	true		520565	2					
ANR	520643	Identifier	true		520565	0					
ANR	520644	ExpressionStatement	"configInsert ( config_classad , ""WANT_VACATE"" , true )"	204:1:5145:5196	520565	9	True				
ANR	520645	CallExpression	"configInsert ( config_classad , ""WANT_VACATE"" , true )"		520565	0					
ANR	520646	Callee	configInsert		520565	0					
ANR	520647	Identifier	configInsert		520565	0					
ANR	520648	ArgumentList	config_classad		520565	1					
ANR	520649	Argument	config_classad		520565	0					
ANR	520650	Identifier	config_classad		520565	0					
ANR	520651	Argument	"""WANT_VACATE"""		520565	1					
ANR	520652	PrimaryExpression	"""WANT_VACATE"""		520565	0					
ANR	520653	Argument	true		520565	2					
ANR	520654	Identifier	true		520565	0					
ANR	520655	IfStatement	"if ( ! configInsert ( config_classad , ""WANT_HOLD"" , false ) )"		520565	10					
ANR	520656	Condition	"! configInsert ( config_classad , ""WANT_HOLD"" , false )"	205:5:5203:5253	520565	0	True				
ANR	520657	UnaryOperationExpression	"! configInsert ( config_classad , ""WANT_HOLD"" , false )"		520565	0					
ANR	520658	UnaryOperator	!		520565	0					
ANR	520659	CallExpression	"configInsert ( config_classad , ""WANT_HOLD"" , false )"		520565	1					
ANR	520660	Callee	configInsert		520565	0					
ANR	520661	Identifier	configInsert		520565	0					
ANR	520662	ArgumentList	config_classad		520565	1					
ANR	520663	Argument	config_classad		520565	0					
ANR	520664	Identifier	config_classad		520565	0					
ANR	520665	Argument	"""WANT_HOLD"""		520565	1					
ANR	520666	PrimaryExpression	"""WANT_HOLD"""		520565	0					
ANR	520667	Argument	false		520565	2					
ANR	520668	Identifier	false		520565	0					
ANR	520669	CompoundStatement		13:59:542:542	520565	1					
ANR	520670	ExpressionStatement	"config_classad -> AssignExpr ( ""WANT_HOLD"" , ""False"" )"	207:2:5299:5346	520565	0	True				
ANR	520671	CallExpression	"config_classad -> AssignExpr ( ""WANT_HOLD"" , ""False"" )"		520565	0					
ANR	520672	Callee	config_classad -> AssignExpr		520565	0					
ANR	520673	PtrMemberAccess	config_classad -> AssignExpr		520565	0					
ANR	520674	Identifier	config_classad		520565	0					
ANR	520675	Identifier	AssignExpr		520565	1					
ANR	520676	ArgumentList	"""WANT_HOLD"""		520565	1					
ANR	520677	Argument	"""WANT_HOLD"""		520565	0					
ANR	520678	PrimaryExpression	"""WANT_HOLD"""		520565	0					
ANR	520679	Argument	"""False"""		520565	1					
ANR	520680	PrimaryExpression	"""False"""		520565	0					
ANR	520681	ExpressionStatement	"configInsert ( config_classad , ""WANT_HOLD_REASON"" , false )"	209:1:5352:5409	520565	11	True				
ANR	520682	CallExpression	"configInsert ( config_classad , ""WANT_HOLD_REASON"" , false )"		520565	0					
ANR	520683	Callee	configInsert		520565	0					
ANR	520684	Identifier	configInsert		520565	0					
ANR	520685	ArgumentList	config_classad		520565	1					
ANR	520686	Argument	config_classad		520565	0					
ANR	520687	Identifier	config_classad		520565	0					
ANR	520688	Argument	"""WANT_HOLD_REASON"""		520565	1					
ANR	520689	PrimaryExpression	"""WANT_HOLD_REASON"""		520565	0					
ANR	520690	Argument	false		520565	2					
ANR	520691	Identifier	false		520565	0					
ANR	520692	ExpressionStatement	"configInsert ( config_classad , ""WANT_HOLD_SUBCODE"" , false )"	210:1:5412:5470	520565	12	True				
ANR	520693	CallExpression	"configInsert ( config_classad , ""WANT_HOLD_SUBCODE"" , false )"		520565	0					
ANR	520694	Callee	configInsert		520565	0					
ANR	520695	Identifier	configInsert		520565	0					
ANR	520696	ArgumentList	config_classad		520565	1					
ANR	520697	Argument	config_classad		520565	0					
ANR	520698	Identifier	config_classad		520565	0					
ANR	520699	Argument	"""WANT_HOLD_SUBCODE"""		520565	1					
ANR	520700	PrimaryExpression	"""WANT_HOLD_SUBCODE"""		520565	0					
ANR	520701	Argument	false		520565	2					
ANR	520702	Identifier	false		520565	0					
ANR	520703	ExpressionStatement	"configInsert ( config_classad , ""CLAIM_WORKLIFE"" , false )"	211:1:5473:5528	520565	13	True				
ANR	520704	CallExpression	"configInsert ( config_classad , ""CLAIM_WORKLIFE"" , false )"		520565	0					
ANR	520705	Callee	configInsert		520565	0					
ANR	520706	Identifier	configInsert		520565	0					
ANR	520707	ArgumentList	config_classad		520565	1					
ANR	520708	Argument	config_classad		520565	0					
ANR	520709	Identifier	config_classad		520565	0					
ANR	520710	Argument	"""CLAIM_WORKLIFE"""		520565	1					
ANR	520711	PrimaryExpression	"""CLAIM_WORKLIFE"""		520565	0					
ANR	520712	Argument	false		520565	2					
ANR	520713	Identifier	false		520565	0					
ANR	520714	ExpressionStatement	"configInsert ( config_classad , ATTR_MAX_JOB_RETIREMENT_TIME , false )"	212:1:5531:5598	520565	14	True				
ANR	520715	CallExpression	"configInsert ( config_classad , ATTR_MAX_JOB_RETIREMENT_TIME , false )"		520565	0					
ANR	520716	Callee	configInsert		520565	0					
ANR	520717	Identifier	configInsert		520565	0					
ANR	520718	ArgumentList	config_classad		520565	1					
ANR	520719	Argument	config_classad		520565	0					
ANR	520720	Identifier	config_classad		520565	0					
ANR	520721	Argument	ATTR_MAX_JOB_RETIREMENT_TIME		520565	1					
ANR	520722	Identifier	ATTR_MAX_JOB_RETIREMENT_TIME		520565	0					
ANR	520723	Argument	false		520565	2					
ANR	520724	Identifier	false		520565	0					
ANR	520725	ExpressionStatement	"configInsert ( config_classad , ATTR_MACHINE_MAX_VACATE_TIME , true )"	213:1:5601:5667	520565	15	True				
ANR	520726	CallExpression	"configInsert ( config_classad , ATTR_MACHINE_MAX_VACATE_TIME , true )"		520565	0					
ANR	520727	Callee	configInsert		520565	0					
ANR	520728	Identifier	configInsert		520565	0					
ANR	520729	ArgumentList	config_classad		520565	1					
ANR	520730	Argument	config_classad		520565	0					
ANR	520731	Identifier	config_classad		520565	0					
ANR	520732	Argument	ATTR_MACHINE_MAX_VACATE_TIME		520565	1					
ANR	520733	Identifier	ATTR_MACHINE_MAX_VACATE_TIME		520565	0					
ANR	520734	Argument	true		520565	2					
ANR	520735	Identifier	true		520565	0					
ANR	520736	ExpressionStatement	"configInsert ( config_classad , ""PERIODIC_CHECKPOINT"" , false )"	216:1:5716:5776	520565	16	True				
ANR	520737	CallExpression	"configInsert ( config_classad , ""PERIODIC_CHECKPOINT"" , false )"		520565	0					
ANR	520738	Callee	configInsert		520565	0					
ANR	520739	Identifier	configInsert		520565	0					
ANR	520740	ArgumentList	config_classad		520565	1					
ANR	520741	Argument	config_classad		520565	0					
ANR	520742	Identifier	config_classad		520565	0					
ANR	520743	Argument	"""PERIODIC_CHECKPOINT"""		520565	1					
ANR	520744	PrimaryExpression	"""PERIODIC_CHECKPOINT"""		520565	0					
ANR	520745	Argument	false		520565	2					
ANR	520746	Identifier	false		520565	0					
ANR	520747	ExpressionStatement	"configInsert ( config_classad , ""RunBenchmarks"" , false )"	217:1:5779:5833	520565	17	True				
ANR	520748	CallExpression	"configInsert ( config_classad , ""RunBenchmarks"" , false )"		520565	0					
ANR	520749	Callee	configInsert		520565	0					
ANR	520750	Identifier	configInsert		520565	0					
ANR	520751	ArgumentList	config_classad		520565	1					
ANR	520752	Argument	config_classad		520565	0					
ANR	520753	Identifier	config_classad		520565	0					
ANR	520754	Argument	"""RunBenchmarks"""		520565	1					
ANR	520755	PrimaryExpression	"""RunBenchmarks"""		520565	0					
ANR	520756	Argument	false		520565	2					
ANR	520757	Identifier	false		520565	0					
ANR	520758	ExpressionStatement	"configInsert ( config_classad , ATTR_RANK , false )"	218:1:5836:5884	520565	18	True				
ANR	520759	CallExpression	"configInsert ( config_classad , ATTR_RANK , false )"		520565	0					
ANR	520760	Callee	configInsert		520565	0					
ANR	520761	Identifier	configInsert		520565	0					
ANR	520762	ArgumentList	config_classad		520565	1					
ANR	520763	Argument	config_classad		520565	0					
ANR	520764	Identifier	config_classad		520565	0					
ANR	520765	Argument	ATTR_RANK		520565	1					
ANR	520766	Identifier	ATTR_RANK		520565	0					
ANR	520767	Argument	false		520565	2					
ANR	520768	Identifier	false		520565	0					
ANR	520769	ExpressionStatement	"configInsert ( config_classad , ""SUSPEND_VANILLA"" , false )"	219:1:5887:5943	520565	19	True				
ANR	520770	CallExpression	"configInsert ( config_classad , ""SUSPEND_VANILLA"" , false )"		520565	0					
ANR	520771	Callee	configInsert		520565	0					
ANR	520772	Identifier	configInsert		520565	0					
ANR	520773	ArgumentList	config_classad		520565	1					
ANR	520774	Argument	config_classad		520565	0					
ANR	520775	Identifier	config_classad		520565	0					
ANR	520776	Argument	"""SUSPEND_VANILLA"""		520565	1					
ANR	520777	PrimaryExpression	"""SUSPEND_VANILLA"""		520565	0					
ANR	520778	Argument	false		520565	2					
ANR	520779	Identifier	false		520565	0					
ANR	520780	ExpressionStatement	"configInsert ( config_classad , ""CONTINUE_VANILLA"" , false )"	220:1:5946:6003	520565	20	True				
ANR	520781	CallExpression	"configInsert ( config_classad , ""CONTINUE_VANILLA"" , false )"		520565	0					
ANR	520782	Callee	configInsert		520565	0					
ANR	520783	Identifier	configInsert		520565	0					
ANR	520784	ArgumentList	config_classad		520565	1					
ANR	520785	Argument	config_classad		520565	0					
ANR	520786	Identifier	config_classad		520565	0					
ANR	520787	Argument	"""CONTINUE_VANILLA"""		520565	1					
ANR	520788	PrimaryExpression	"""CONTINUE_VANILLA"""		520565	0					
ANR	520789	Argument	false		520565	2					
ANR	520790	Identifier	false		520565	0					
ANR	520791	ExpressionStatement	"configInsert ( config_classad , ""PREEMPT_VANILLA"" , false )"	221:1:6006:6062	520565	21	True				
ANR	520792	CallExpression	"configInsert ( config_classad , ""PREEMPT_VANILLA"" , false )"		520565	0					
ANR	520793	Callee	configInsert		520565	0					
ANR	520794	Identifier	configInsert		520565	0					
ANR	520795	ArgumentList	config_classad		520565	1					
ANR	520796	Argument	config_classad		520565	0					
ANR	520797	Identifier	config_classad		520565	0					
ANR	520798	Argument	"""PREEMPT_VANILLA"""		520565	1					
ANR	520799	PrimaryExpression	"""PREEMPT_VANILLA"""		520565	0					
ANR	520800	Argument	false		520565	2					
ANR	520801	Identifier	false		520565	0					
ANR	520802	ExpressionStatement	"configInsert ( config_classad , ""KILL_VANILLA"" , false )"	222:1:6065:6118	520565	22	True				
ANR	520803	CallExpression	"configInsert ( config_classad , ""KILL_VANILLA"" , false )"		520565	0					
ANR	520804	Callee	configInsert		520565	0					
ANR	520805	Identifier	configInsert		520565	0					
ANR	520806	ArgumentList	config_classad		520565	1					
ANR	520807	Argument	config_classad		520565	0					
ANR	520808	Identifier	config_classad		520565	0					
ANR	520809	Argument	"""KILL_VANILLA"""		520565	1					
ANR	520810	PrimaryExpression	"""KILL_VANILLA"""		520565	0					
ANR	520811	Argument	false		520565	2					
ANR	520812	Identifier	false		520565	0					
ANR	520813	ExpressionStatement	"configInsert ( config_classad , ""WANT_SUSPEND_VANILLA"" , false )"	223:1:6121:6182	520565	23	True				
ANR	520814	CallExpression	"configInsert ( config_classad , ""WANT_SUSPEND_VANILLA"" , false )"		520565	0					
ANR	520815	Callee	configInsert		520565	0					
ANR	520816	Identifier	configInsert		520565	0					
ANR	520817	ArgumentList	config_classad		520565	1					
ANR	520818	Argument	config_classad		520565	0					
ANR	520819	Identifier	config_classad		520565	0					
ANR	520820	Argument	"""WANT_SUSPEND_VANILLA"""		520565	1					
ANR	520821	PrimaryExpression	"""WANT_SUSPEND_VANILLA"""		520565	0					
ANR	520822	Argument	false		520565	2					
ANR	520823	Identifier	false		520565	0					
ANR	520824	ExpressionStatement	"configInsert ( config_classad , ""WANT_VACATE_VANILLA"" , false )"	224:1:6185:6245	520565	24	True				
ANR	520825	CallExpression	"configInsert ( config_classad , ""WANT_VACATE_VANILLA"" , false )"		520565	0					
ANR	520826	Callee	configInsert		520565	0					
ANR	520827	Identifier	configInsert		520565	0					
ANR	520828	ArgumentList	config_classad		520565	1					
ANR	520829	Argument	config_classad		520565	0					
ANR	520830	Identifier	config_classad		520565	0					
ANR	520831	Argument	"""WANT_VACATE_VANILLA"""		520565	1					
ANR	520832	PrimaryExpression	"""WANT_VACATE_VANILLA"""		520565	0					
ANR	520833	Argument	false		520565	2					
ANR	520834	Identifier	false		520565	0					
ANR	520835	ExpressionStatement	"configInsert ( config_classad , ""START_BACKFILL"" , false )"	226:1:6266:6321	520565	25	True				
ANR	520836	CallExpression	"configInsert ( config_classad , ""START_BACKFILL"" , false )"		520565	0					
ANR	520837	Callee	configInsert		520565	0					
ANR	520838	Identifier	configInsert		520565	0					
ANR	520839	ArgumentList	config_classad		520565	1					
ANR	520840	Argument	config_classad		520565	0					
ANR	520841	Identifier	config_classad		520565	0					
ANR	520842	Argument	"""START_BACKFILL"""		520565	1					
ANR	520843	PrimaryExpression	"""START_BACKFILL"""		520565	0					
ANR	520844	Argument	false		520565	2					
ANR	520845	Identifier	false		520565	0					
ANR	520846	ExpressionStatement	"configInsert ( config_classad , ""EVICT_BACKFILL"" , false )"	227:1:6324:6379	520565	26	True				
ANR	520847	CallExpression	"configInsert ( config_classad , ""EVICT_BACKFILL"" , false )"		520565	0					
ANR	520848	Callee	configInsert		520565	0					
ANR	520849	Identifier	configInsert		520565	0					
ANR	520850	ArgumentList	config_classad		520565	1					
ANR	520851	Argument	config_classad		520565	0					
ANR	520852	Identifier	config_classad		520565	0					
ANR	520853	Argument	"""EVICT_BACKFILL"""		520565	1					
ANR	520854	PrimaryExpression	"""EVICT_BACKFILL"""		520565	0					
ANR	520855	Argument	false		520565	2					
ANR	520856	Identifier	false		520565	0					
ANR	520857	ExpressionStatement	"configInsert ( config_classad , ATTR_FETCH_WORK_DELAY , false )"	230:1:6428:6488	520565	27	True				
ANR	520858	CallExpression	"configInsert ( config_classad , ATTR_FETCH_WORK_DELAY , false )"		520565	0					
ANR	520859	Callee	configInsert		520565	0					
ANR	520860	Identifier	configInsert		520565	0					
ANR	520861	ArgumentList	config_classad		520565	1					
ANR	520862	Argument	config_classad		520565	0					
ANR	520863	Identifier	config_classad		520565	0					
ANR	520864	Argument	ATTR_FETCH_WORK_DELAY		520565	1					
ANR	520865	Identifier	ATTR_FETCH_WORK_DELAY		520565	0					
ANR	520866	Argument	false		520565	2					
ANR	520867	Identifier	false		520565	0					
ANR	520868	ExpressionStatement	"configInsert ( config_classad , ""HIBERNATE"" , false )"	233:1:6540:6590	520565	28	True				
ANR	520869	CallExpression	"configInsert ( config_classad , ""HIBERNATE"" , false )"		520565	0					
ANR	520870	Callee	configInsert		520565	0					
ANR	520871	Identifier	configInsert		520565	0					
ANR	520872	ArgumentList	config_classad		520565	1					
ANR	520873	Argument	config_classad		520565	0					
ANR	520874	Identifier	config_classad		520565	0					
ANR	520875	Argument	"""HIBERNATE"""		520565	1					
ANR	520876	PrimaryExpression	"""HIBERNATE"""		520565	0					
ANR	520877	Argument	false		520565	2					
ANR	520878	Identifier	false		520565	0					
ANR	520879	IfStatement	"if ( ! configInsert ( config_classad , ATTR_UNHIBERNATE , false ) )"		520565	29					
ANR	520880	Condition	"! configInsert ( config_classad , ATTR_UNHIBERNATE , false )"	234:5:6597:6652	520565	0	True				
ANR	520881	UnaryOperationExpression	"! configInsert ( config_classad , ATTR_UNHIBERNATE , false )"		520565	0					
ANR	520882	UnaryOperator	!		520565	0					
ANR	520883	CallExpression	"configInsert ( config_classad , ATTR_UNHIBERNATE , false )"		520565	1					
ANR	520884	Callee	configInsert		520565	0					
ANR	520885	Identifier	configInsert		520565	0					
ANR	520886	ArgumentList	config_classad		520565	1					
ANR	520887	Argument	config_classad		520565	0					
ANR	520888	Identifier	config_classad		520565	0					
ANR	520889	Argument	ATTR_UNHIBERNATE		520565	1					
ANR	520890	Identifier	ATTR_UNHIBERNATE		520565	0					
ANR	520891	Argument	false		520565	2					
ANR	520892	Identifier	false		520565	0					
ANR	520893	CompoundStatement		43:2:1945:1966	520565	1					
ANR	520894	IdentifierDeclStatement	MyString default_expr ;	235:2:6660:6681	520565	0	True				
ANR	520895	IdentifierDecl	default_expr		520565	0					
ANR	520896	IdentifierDeclType	MyString		520565	0					
ANR	520897	Identifier	default_expr		520565	1					
ANR	520898	ExpressionStatement	"default_expr . sprintf ( ""MY.%s =!= UNDEFINED"" , ATTR_MACHINE_LAST_MATCH_TIME )"	236:2:6685:6757	520565	1	True				
ANR	520899	CallExpression	"default_expr . sprintf ( ""MY.%s =!= UNDEFINED"" , ATTR_MACHINE_LAST_MATCH_TIME )"		520565	0					
ANR	520900	Callee	default_expr . sprintf		520565	0					
ANR	520901	MemberAccess	default_expr . sprintf		520565	0					
ANR	520902	Identifier	default_expr		520565	0					
ANR	520903	Identifier	sprintf		520565	1					
ANR	520904	ArgumentList	"""MY.%s =!= UNDEFINED"""		520565	1					
ANR	520905	Argument	"""MY.%s =!= UNDEFINED"""		520565	0					
ANR	520906	PrimaryExpression	"""MY.%s =!= UNDEFINED"""		520565	0					
ANR	520907	Argument	ATTR_MACHINE_LAST_MATCH_TIME		520565	1					
ANR	520908	Identifier	ATTR_MACHINE_LAST_MATCH_TIME		520565	0					
ANR	520909	ExpressionStatement	"config_classad -> AssignExpr ( ATTR_UNHIBERNATE , default_expr . Value ( ) )"	237:2:6761:6829	520565	2	True				
ANR	520910	CallExpression	"config_classad -> AssignExpr ( ATTR_UNHIBERNATE , default_expr . Value ( ) )"		520565	0					
ANR	520911	Callee	config_classad -> AssignExpr		520565	0					
ANR	520912	PtrMemberAccess	config_classad -> AssignExpr		520565	0					
ANR	520913	Identifier	config_classad		520565	0					
ANR	520914	Identifier	AssignExpr		520565	1					
ANR	520915	ArgumentList	ATTR_UNHIBERNATE		520565	1					
ANR	520916	Argument	ATTR_UNHIBERNATE		520565	0					
ANR	520917	Identifier	ATTR_UNHIBERNATE		520565	0					
ANR	520918	Argument	default_expr . Value ( )		520565	1					
ANR	520919	CallExpression	default_expr . Value ( )		520565	0					
ANR	520920	Callee	default_expr . Value		520565	0					
ANR	520921	MemberAccess	default_expr . Value		520565	0					
ANR	520922	Identifier	default_expr		520565	0					
ANR	520923	Identifier	Value		520565	1					
ANR	520924	ArgumentList			520565	1					
ANR	520925	IfStatement	"if ( ! configInsert ( config_classad , ATTR_SLOT_WEIGHT , false ) )"		520565	30					
ANR	520926	Condition	"! configInsert ( config_classad , ATTR_SLOT_WEIGHT , false )"	241:5:6870:6925	520565	0	True				
ANR	520927	UnaryOperationExpression	"! configInsert ( config_classad , ATTR_SLOT_WEIGHT , false )"		520565	0					
ANR	520928	UnaryOperator	!		520565	0					
ANR	520929	CallExpression	"configInsert ( config_classad , ATTR_SLOT_WEIGHT , false )"		520565	1					
ANR	520930	Callee	configInsert		520565	0					
ANR	520931	Identifier	configInsert		520565	0					
ANR	520932	ArgumentList	config_classad		520565	1					
ANR	520933	Argument	config_classad		520565	0					
ANR	520934	Identifier	config_classad		520565	0					
ANR	520935	Argument	ATTR_SLOT_WEIGHT		520565	1					
ANR	520936	Identifier	ATTR_SLOT_WEIGHT		520565	0					
ANR	520937	Argument	false		520565	2					
ANR	520938	Identifier	false		520565	0					
ANR	520939	CompoundStatement		49:64:2214:2214	520565	1					
ANR	520940	ExpressionStatement	"config_classad -> AssignExpr ( ATTR_SLOT_WEIGHT , ATTR_CPUS )"	242:2:6933:6990	520565	0	True				
ANR	520941	CallExpression	"config_classad -> AssignExpr ( ATTR_SLOT_WEIGHT , ATTR_CPUS )"		520565	0					
ANR	520942	Callee	config_classad -> AssignExpr		520565	0					
ANR	520943	PtrMemberAccess	config_classad -> AssignExpr		520565	0					
ANR	520944	Identifier	config_classad		520565	0					
ANR	520945	Identifier	AssignExpr		520565	1					
ANR	520946	ArgumentList	ATTR_SLOT_WEIGHT		520565	1					
ANR	520947	Argument	ATTR_SLOT_WEIGHT		520565	0					
ANR	520948	Identifier	ATTR_SLOT_WEIGHT		520565	0					
ANR	520949	Argument	ATTR_CPUS		520565	1					
ANR	520950	Identifier	ATTR_CPUS		520565	0					
ANR	520951	IfStatement	"if ( ! configInsert ( config_classad , ATTR_IS_OWNER , false ) )"		520565	31					
ANR	520952	Condition	"! configInsert ( config_classad , ATTR_IS_OWNER , false )"	247:5:7130:7181	520565	0	True				
ANR	520953	UnaryOperationExpression	"! configInsert ( config_classad , ATTR_IS_OWNER , false )"		520565	0					
ANR	520954	UnaryOperator	!		520565	0					
ANR	520955	CallExpression	"configInsert ( config_classad , ATTR_IS_OWNER , false )"		520565	1					
ANR	520956	Callee	configInsert		520565	0					
ANR	520957	Identifier	configInsert		520565	0					
ANR	520958	ArgumentList	config_classad		520565	1					
ANR	520959	Argument	config_classad		520565	0					
ANR	520960	Identifier	config_classad		520565	0					
ANR	520961	Argument	ATTR_IS_OWNER		520565	1					
ANR	520962	Identifier	ATTR_IS_OWNER		520565	0					
ANR	520963	Argument	false		520565	2					
ANR	520964	Identifier	false		520565	0					
ANR	520965	CompoundStatement		55:60:2470:2470	520565	1					
ANR	520966	ExpressionStatement	"config_classad -> AssignExpr ( ATTR_IS_OWNER , ""(START =?= False)"" )"	248:2:7189:7253	520565	0	True				
ANR	520967	CallExpression	"config_classad -> AssignExpr ( ATTR_IS_OWNER , ""(START =?= False)"" )"		520565	0					
ANR	520968	Callee	config_classad -> AssignExpr		520565	0					
ANR	520969	PtrMemberAccess	config_classad -> AssignExpr		520565	0					
ANR	520970	Identifier	config_classad		520565	0					
ANR	520971	Identifier	AssignExpr		520565	1					
ANR	520972	ArgumentList	ATTR_IS_OWNER		520565	1					
ANR	520973	Argument	ATTR_IS_OWNER		520565	0					
ANR	520974	Identifier	ATTR_IS_OWNER		520565	0					
ANR	520975	Argument	"""(START =?= False)"""		520565	1					
ANR	520976	PrimaryExpression	"""(START =?= False)"""		520565	0					
ANR	520977	IfStatement	"if ( ! configInsert ( config_classad , ATTR_CPU_BUSY , false ) )"		520565	32					
ANR	520978	Condition	"! configInsert ( config_classad , ATTR_CPU_BUSY , false )"	254:5:7485:7536	520565	0	True				
ANR	520979	UnaryOperationExpression	"! configInsert ( config_classad , ATTR_CPU_BUSY , false )"		520565	0					
ANR	520980	UnaryOperator	!		520565	0					
ANR	520981	CallExpression	"configInsert ( config_classad , ATTR_CPU_BUSY , false )"		520565	1					
ANR	520982	Callee	configInsert		520565	0					
ANR	520983	Identifier	configInsert		520565	0					
ANR	520984	ArgumentList	config_classad		520565	1					
ANR	520985	Argument	config_classad		520565	0					
ANR	520986	Identifier	config_classad		520565	0					
ANR	520987	Argument	ATTR_CPU_BUSY		520565	1					
ANR	520988	Identifier	ATTR_CPU_BUSY		520565	0					
ANR	520989	Argument	false		520565	2					
ANR	520990	Identifier	false		520565	0					
ANR	520991	CompoundStatement		62:60:2825:2825	520565	1					
ANR	520992	IfStatement	"if ( ! configInsert ( config_classad , ""cpu_busy"" , ATTR_CPU_BUSY , false ) )"		520565	0					
ANR	520993	Condition	"! configInsert ( config_classad , ""cpu_busy"" , ATTR_CPU_BUSY , false )"	255:6:7548:7620	520565	0	True				
ANR	520994	UnaryOperationExpression	"! configInsert ( config_classad , ""cpu_busy"" , ATTR_CPU_BUSY , false )"		520565	0					
ANR	520995	UnaryOperator	!		520565	0					
ANR	520996	CallExpression	"configInsert ( config_classad , ""cpu_busy"" , ATTR_CPU_BUSY , false )"		520565	1					
ANR	520997	Callee	configInsert		520565	0					
ANR	520998	Identifier	configInsert		520565	0					
ANR	520999	ArgumentList	config_classad		520565	1					
ANR	521000	Argument	config_classad		520565	0					
ANR	521001	Identifier	config_classad		520565	0					
ANR	521002	Argument	"""cpu_busy"""		520565	1					
ANR	521003	PrimaryExpression	"""cpu_busy"""		520565	0					
ANR	521004	Argument	ATTR_CPU_BUSY		520565	2					
ANR	521005	Identifier	ATTR_CPU_BUSY		520565	0					
ANR	521006	Argument	false		520565	3					
ANR	521007	Identifier	false		520565	0					
ANR	521008	CompoundStatement		64:18:2909:2909	520565	1					
ANR	521009	ExpressionStatement	"config_classad -> Assign ( ATTR_CPU_BUSY , false )"	257:3:7629:7675	520565	0	True				
ANR	521010	CallExpression	"config_classad -> Assign ( ATTR_CPU_BUSY , false )"		520565	0					
ANR	521011	Callee	config_classad -> Assign		520565	0					
ANR	521012	PtrMemberAccess	config_classad -> Assign		520565	0					
ANR	521013	Identifier	config_classad		520565	0					
ANR	521014	Identifier	Assign		520565	1					
ANR	521015	ArgumentList	ATTR_CPU_BUSY		520565	1					
ANR	521016	Argument	ATTR_CPU_BUSY		520565	0					
ANR	521017	Identifier	ATTR_CPU_BUSY		520565	0					
ANR	521018	Argument	false		520565	1					
ANR	521019	Identifier	false		520565	0					
ANR	521020	ExpressionStatement	daemonCore -> publish ( config_classad )	263:1:7778:7813	520565	33	True				
ANR	521021	CallExpression	daemonCore -> publish ( config_classad )		520565	0					
ANR	521022	Callee	daemonCore -> publish		520565	0					
ANR	521023	PtrMemberAccess	daemonCore -> publish		520565	0					
ANR	521024	Identifier	daemonCore		520565	0					
ANR	521025	Identifier	publish		520565	1					
ANR	521026	ArgumentList	config_classad		520565	1					
ANR	521027	Argument	config_classad		520565	0					
ANR	521028	Identifier	config_classad		520565	0					
ANR	521029	ExpressionStatement	"config_classad -> AddTargetRefs ( TargetJobAttrs , false )"	266:1:7849:7903	520565	34	True				
ANR	521030	CallExpression	"config_classad -> AddTargetRefs ( TargetJobAttrs , false )"		520565	0					
ANR	521031	Callee	config_classad -> AddTargetRefs		520565	0					
ANR	521032	PtrMemberAccess	config_classad -> AddTargetRefs		520565	0					
ANR	521033	Identifier	config_classad		520565	0					
ANR	521034	Identifier	AddTargetRefs		520565	1					
ANR	521035	ArgumentList	TargetJobAttrs		520565	1					
ANR	521036	Argument	TargetJobAttrs		520565	0					
ANR	521037	Identifier	TargetJobAttrs		520565	0					
ANR	521038	Argument	false		520565	1					
ANR	521039	Identifier	false		520565	0					
ANR	521040	ReturnType	void		520565	1					
ANR	521041	Identifier	ResMgr :: init_config_classad		520565	2					
ANR	521042	ParameterList			520565	3					
ANR	521043	CFGEntryNode	ENTRY		520565		True				
ANR	521044	CFGExitNode	EXIT		520565		True				
ANR	521045	Symbol	TargetJobAttrs		520565						
ANR	521046	Symbol	ATTR_FETCH_WORK_DELAY		520565						
ANR	521047	Symbol	default_expr		520565						
ANR	521048	Symbol	ATTR_RANK		520565						
ANR	521049	Symbol	default_expr . Value		520565						
ANR	521050	Symbol	false		520565						
ANR	521051	Symbol	ATTR_MAX_JOB_RETIREMENT_TIME		520565						
ANR	521052	Symbol	ATTR_CPUS		520565						
ANR	521053	Symbol	ATTR_SLOT_WEIGHT		520565						
ANR	521054	Symbol	ATTR_UNHIBERNATE		520565						
ANR	521055	Symbol	ATTR_IS_OWNER		520565						
ANR	521056	Symbol	ATTR_CPU_BUSY		520565						
ANR	521057	Symbol	ATTR_MACHINE_LAST_MATCH_TIME		520565						
ANR	521058	Symbol	daemonCore		520565						
ANR	521059	Symbol	true		520565						
ANR	521060	Symbol	configInsert		520565						
ANR	521061	Symbol	ATTR_MACHINE_MAX_VACATE_TIME		520565						
ANR	521062	Symbol	config_classad		520565						
ANR	521063	Function	ResMgr :: backfillMgrDone	273:0:7935:8294							
ANR	521064	FunctionDef	ResMgr :: backfillMgrDone ()		521063	0					
ANR	521065	CompoundStatement		275:0:7966:8294	521063	0					
ANR	521066	ExpressionStatement	ASSERT ( m_backfill_mgr )	276:1:7969:7993	521063	0	True				
ANR	521067	CallExpression	ASSERT ( m_backfill_mgr )		521063	0					
ANR	521068	Callee	ASSERT		521063	0					
ANR	521069	Identifier	ASSERT		521063	0					
ANR	521070	ArgumentList	m_backfill_mgr		521063	1					
ANR	521071	Argument	m_backfill_mgr		521063	0					
ANR	521072	Identifier	m_backfill_mgr		521063	0					
ANR	521073	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""BackfillMgr now ready to be deleted\\n"" )"	277:1:7996:8059	521063	1	True				
ANR	521074	CallExpression	"dprintf ( D_FULLDEBUG , ""BackfillMgr now ready to be deleted\\n"" )"		521063	0					
ANR	521075	Callee	dprintf		521063	0					
ANR	521076	Identifier	dprintf		521063	0					
ANR	521077	ArgumentList	D_FULLDEBUG		521063	1					
ANR	521078	Argument	D_FULLDEBUG		521063	0					
ANR	521079	Identifier	D_FULLDEBUG		521063	0					
ANR	521080	Argument	"""BackfillMgr now ready to be deleted\\n"""		521063	1					
ANR	521081	PrimaryExpression	"""BackfillMgr now ready to be deleted\\n"""		521063	0					
ANR	521082	Statement	delete	278:1:8062:8067	521063	2	True				
ANR	521083	ExpressionStatement	m_backfill_mgr	278:8:8069:8083	521063	3	True				
ANR	521084	Identifier	m_backfill_mgr		521063	0					
ANR	521085	ExpressionStatement	m_backfill_mgr = NULL	279:1:8086:8107	521063	4	True				
ANR	521086	AssignmentExpression	m_backfill_mgr = NULL		521063	0		=			
ANR	521087	Identifier	m_backfill_mgr		521063	0					
ANR	521088	Identifier	NULL		521063	1					
ANR	521089	ExpressionStatement	m_backfill_shutdown_pending = false	280:1:8110:8145	521063	5	True				
ANR	521090	AssignmentExpression	m_backfill_shutdown_pending = false		521063	0		=			
ANR	521091	Identifier	m_backfill_shutdown_pending		521063	0					
ANR	521092	Identifier	false		521063	1					
ANR	521093	ExpressionStatement	backfillConfig ( )	284:1:8276:8292	521063	6	True				
ANR	521094	CallExpression	backfillConfig ( )		521063	0					
ANR	521095	Callee	backfillConfig		521063	0					
ANR	521096	Identifier	backfillConfig		521063	0					
ANR	521097	ArgumentList			521063	1					
ANR	521098	ReturnType	void		521063	1					
ANR	521099	Identifier	ResMgr :: backfillMgrDone		521063	2					
ANR	521100	ParameterList			521063	3					
ANR	521101	CFGEntryNode	ENTRY		521063		True				
ANR	521102	CFGExitNode	EXIT		521063		True				
ANR	521103	Symbol	NULL		521063						
ANR	521104	Symbol	false		521063						
ANR	521105	Symbol	D_FULLDEBUG		521063						
ANR	521106	Symbol	m_backfill_shutdown_pending		521063						
ANR	521107	Symbol	m_backfill_mgr		521063						
ANR	521108	Function	verifyBackfillSystem	288:0:8298:8462							
ANR	521109	FunctionDef	verifyBackfillSystem (const char * sys)		521108	0					
ANR	521110	CompoundStatement		290:0:8350:8462	521108	0					
ANR	521111	IfStatement	"if ( ! strcasecmp ( sys , ""BOINC"" ) )"		521108	0					
ANR	521112	Condition	"! strcasecmp ( sys , ""BOINC"" )"	293:5:8373:8398	521108	0	True				
ANR	521113	UnaryOperationExpression	"! strcasecmp ( sys , ""BOINC"" )"		521108	0					
ANR	521114	UnaryOperator	!		521108	0					
ANR	521115	CallExpression	"strcasecmp ( sys , ""BOINC"" )"		521108	1					
ANR	521116	Callee	strcasecmp		521108	0					
ANR	521117	Identifier	strcasecmp		521108	0					
ANR	521118	ArgumentList	sys		521108	1					
ANR	521119	Argument	sys		521108	0					
ANR	521120	Identifier	sys		521108	0					
ANR	521121	Argument	"""BOINC"""		521108	1					
ANR	521122	PrimaryExpression	"""BOINC"""		521108	0					
ANR	521123	CompoundStatement		4:34:51:51	521108	1					
ANR	521124	ReturnStatement	return true ;	294:2:8406:8417	521108	0	True				
ANR	521125	Identifier	true		521108	0					
ANR	521126	ReturnStatement	return false ;	298:1:8448:8460	521108	1	True				
ANR	521127	Identifier	false		521108	0					
ANR	521128	ReturnType	static bool		521108	1					
ANR	521129	Identifier	verifyBackfillSystem		521108	2					
ANR	521130	ParameterList	const char * sys		521108	3					
ANR	521131	Parameter	const char * sys	289:22:8332:8346	521108	0	True				
ANR	521132	ParameterType	const char *		521108	0					
ANR	521133	Identifier	sys		521108	1					
ANR	521134	CFGEntryNode	ENTRY		521108		True				
ANR	521135	CFGExitNode	EXIT		521108		True				
ANR	521136	Symbol	true		521108						
ANR	521137	Symbol	false		521108						
ANR	521138	Symbol	sys		521108						
ANR	521139	Symbol	strcasecmp		521108						
ANR	521140	Function	ResMgr :: backfillConfig	302:0:8466:12182							
ANR	521141	FunctionDef	ResMgr :: backfillConfig ()		521140	0					
ANR	521142	CompoundStatement		304:0:8496:12182	521140	0					
ANR	521143	IfStatement	if ( m_backfill_shutdown_pending )		521140	0					
ANR	521144	Condition	m_backfill_shutdown_pending	305:5:8503:8529	521140	0	True				
ANR	521145	Identifier	m_backfill_shutdown_pending		521140	0					
ANR	521146	CompoundStatement		2:35:36:36	521140	1					
ANR	521147	Statement	dprintf	319:2:9201:9207	521140	0	True				
ANR	521148	Statement	(	319:9:9208:9208	521140	1	True				
ANR	521149	Statement	D_ALWAYS	319:11:9210:9217	521140	2	True				
ANR	521150	Statement	","	319:19:9218:9218	521140	3	True				
ANR	521151	Statement	"""Got another reconfig while waiting for the old """	319:21:9220:9268	521140	4	True				
ANR	521152	Statement	"""backfill system to finish cleaning up, delaying\\n"""	320:5:9275:9325	521140	5	True				
ANR	521153	Statement	)	320:57:9327:9327	521140	6	True				
ANR	521154	ExpressionStatement		320:58:9328:9328	521140	7	True				
ANR	521155	ReturnStatement	return true ;	321:2:9332:9343	521140	8	True				
ANR	521156	Identifier	true		521140	0					
ANR	521157	IfStatement	"if ( ! param_boolean ( ""ENABLE_BACKFILL"" , false ) )"		521140	1					
ANR	521158	Condition	"! param_boolean ( ""ENABLE_BACKFILL"" , false )"	324:5:9354:9394	521140	0	True				
ANR	521159	UnaryOperationExpression	"! param_boolean ( ""ENABLE_BACKFILL"" , false )"		521140	0					
ANR	521160	UnaryOperator	!		521140	0					
ANR	521161	CallExpression	"param_boolean ( ""ENABLE_BACKFILL"" , false )"		521140	1					
ANR	521162	Callee	param_boolean		521140	0					
ANR	521163	Identifier	param_boolean		521140	0					
ANR	521164	ArgumentList	"""ENABLE_BACKFILL"""		521140	1					
ANR	521165	Argument	"""ENABLE_BACKFILL"""		521140	0					
ANR	521166	PrimaryExpression	"""ENABLE_BACKFILL"""		521140	0					
ANR	521167	Argument	false		521140	1					
ANR	521168	Identifier	false		521140	0					
ANR	521169	CompoundStatement		21:49:901:901	521140	1					
ANR	521170	IfStatement	if ( m_backfill_mgr )		521140	0					
ANR	521171	Condition	m_backfill_mgr	325:6:9406:9419	521140	0	True				
ANR	521172	Identifier	m_backfill_mgr		521140	0					
ANR	521173	CompoundStatement		22:23:926:926	521140	1					
ANR	521174	ExpressionStatement	"dprintf ( D_ALWAYS , ""ENABLE_BACKFILL is false, destroying BackfillMgr\\n"" )"	326:3:9428:9507	521140	0	True				
ANR	521175	CallExpression	"dprintf ( D_ALWAYS , ""ENABLE_BACKFILL is false, destroying BackfillMgr\\n"" )"		521140	0					
ANR	521176	Callee	dprintf		521140	0					
ANR	521177	Identifier	dprintf		521140	0					
ANR	521178	ArgumentList	D_ALWAYS		521140	1					
ANR	521179	Argument	D_ALWAYS		521140	0					
ANR	521180	Identifier	D_ALWAYS		521140	0					
ANR	521181	Argument	"""ENABLE_BACKFILL is false, destroying BackfillMgr\\n"""		521140	1					
ANR	521182	PrimaryExpression	"""ENABLE_BACKFILL is false, destroying BackfillMgr\\n"""		521140	0					
ANR	521183	IfStatement	if ( m_backfill_mgr -> destroy ( ) )		521140	1					
ANR	521184	Condition	m_backfill_mgr -> destroy ( )	328:7:9516:9540	521140	0	True				
ANR	521185	CallExpression	m_backfill_mgr -> destroy ( )		521140	0					
ANR	521186	Callee	m_backfill_mgr -> destroy		521140	0					
ANR	521187	PtrMemberAccess	m_backfill_mgr -> destroy		521140	0					
ANR	521188	Identifier	m_backfill_mgr		521140	0					
ANR	521189	Identifier	destroy		521140	1					
ANR	521190	ArgumentList			521140	1					
ANR	521191	CompoundStatement		25:35:1047:1047	521140	1					
ANR	521192	Statement	delete	331:4:9627:9632	521140	0	True				
ANR	521193	ExpressionStatement	m_backfill_mgr	331:11:9634:9648	521140	1	True				
ANR	521194	Identifier	m_backfill_mgr		521140	0					
ANR	521195	ExpressionStatement	m_backfill_mgr = NULL	332:4:9654:9675	521140	2	True				
ANR	521196	AssignmentExpression	m_backfill_mgr = NULL		521140	0		=			
ANR	521197	Identifier	m_backfill_mgr		521140	0					
ANR	521198	Identifier	NULL		521140	1					
ANR	521199	ElseStatement	else		521140	0					
ANR	521200	CompoundStatement		30:10:1190:1190	521140	0					
ANR	521201	Statement	dprintf	337:4:9839:9845	521140	0	True				
ANR	521202	Statement	(	337:11:9846:9846	521140	1	True				
ANR	521203	Statement	D_ALWAYS	337:13:9848:9855	521140	2	True				
ANR	521204	Statement	","	337:21:9856:9856	521140	3	True				
ANR	521205	Statement	"""BackfillMgr still has cleanup to """	337:23:9858:9892	521140	4	True				
ANR	521206	Statement	"""perform, postponing delete\\n"""	338:7:9901:9930	521140	5	True				
ANR	521207	Statement	)	338:38:9932:9932	521140	6	True				
ANR	521208	ExpressionStatement		338:39:9933:9933	521140	7	True				
ANR	521209	ExpressionStatement	m_backfill_shutdown_pending = true	339:4:9939:9973	521140	8	True				
ANR	521210	AssignmentExpression	m_backfill_shutdown_pending = true		521140	0		=			
ANR	521211	Identifier	m_backfill_shutdown_pending		521140	0					
ANR	521212	Identifier	true		521140	1					
ANR	521213	ReturnStatement	return false ;	342:2:9986:9998	521140	1	True				
ANR	521214	Identifier	false		521140	0					
ANR	521215	IdentifierDeclStatement	"char * new_system = param ( ""BACKFILL_SYSTEM"" ) ;"	345:1:10005:10050	521140	2	True				
ANR	521216	IdentifierDecl	"* new_system = param ( ""BACKFILL_SYSTEM"" )"		521140	0					
ANR	521217	IdentifierDeclType	char *		521140	0					
ANR	521218	Identifier	new_system		521140	1					
ANR	521219	AssignmentExpression	"* new_system = param ( ""BACKFILL_SYSTEM"" )"		521140	2		=			
ANR	521220	Identifier	new_system		521140	0					
ANR	521221	CallExpression	"param ( ""BACKFILL_SYSTEM"" )"		521140	1					
ANR	521222	Callee	param		521140	0					
ANR	521223	Identifier	param		521140	0					
ANR	521224	ArgumentList	"""BACKFILL_SYSTEM"""		521140	1					
ANR	521225	Argument	"""BACKFILL_SYSTEM"""		521140	0					
ANR	521226	PrimaryExpression	"""BACKFILL_SYSTEM"""		521140	0					
ANR	521227	IfStatement	if ( ! new_system )		521140	3					
ANR	521228	Condition	! new_system	346:5:10057:10068	521140	0	True				
ANR	521229	UnaryOperationExpression	! new_system		521140	0					
ANR	521230	UnaryOperator	!		521140	0					
ANR	521231	Identifier	new_system		521140	1					
ANR	521232	CompoundStatement		43:20:1575:1575	521140	1					
ANR	521233	Statement	dprintf	347:2:10076:10082	521140	0	True				
ANR	521234	Statement	(	347:9:10083:10083	521140	1	True				
ANR	521235	Statement	D_ALWAYS	347:11:10085:10092	521140	2	True				
ANR	521236	Statement	","	347:19:10093:10093	521140	3	True				
ANR	521237	Statement	"""ERROR: ENABLE_BACKFILL is TRUE, but """	347:21:10095:10132	521140	4	True				
ANR	521238	Statement	"""BACKFILL_SYSTEM is undefined!\\n"""	348:5:10139:10171	521140	5	True				
ANR	521239	Statement	)	348:39:10173:10173	521140	6	True				
ANR	521240	ExpressionStatement		348:40:10174:10174	521140	7	True				
ANR	521241	ReturnStatement	return false ;	349:2:10178:10190	521140	8	True				
ANR	521242	Identifier	false		521140	0					
ANR	521243	IfStatement	if ( ! verifyBackfillSystem ( new_system ) )		521140	4					
ANR	521244	Condition	! verifyBackfillSystem ( new_system )	351:5:10200:10233	521140	0	True				
ANR	521245	UnaryOperationExpression	! verifyBackfillSystem ( new_system )		521140	0					
ANR	521246	UnaryOperator	!		521140	0					
ANR	521247	CallExpression	verifyBackfillSystem ( new_system )		521140	1					
ANR	521248	Callee	verifyBackfillSystem		521140	0					
ANR	521249	Identifier	verifyBackfillSystem		521140	0					
ANR	521250	ArgumentList	new_system		521140	1					
ANR	521251	Argument	new_system		521140	0					
ANR	521252	Identifier	new_system		521140	0					
ANR	521253	CompoundStatement		48:42:1740:1740	521140	1					
ANR	521254	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: BACKFILL_SYSTEM '%s' not supported, ignoring\\n"" , new_system )"	352:2:10241:10339	521140	0	True				
ANR	521255	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: BACKFILL_SYSTEM '%s' not supported, ignoring\\n"" , new_system )"		521140	0					
ANR	521256	Callee	dprintf		521140	0					
ANR	521257	Identifier	dprintf		521140	0					
ANR	521258	ArgumentList	D_ALWAYS		521140	1					
ANR	521259	Argument	D_ALWAYS		521140	0					
ANR	521260	Identifier	D_ALWAYS		521140	0					
ANR	521261	Argument	"""ERROR: BACKFILL_SYSTEM '%s' not supported, ignoring\\n"""		521140	1					
ANR	521262	PrimaryExpression	"""ERROR: BACKFILL_SYSTEM '%s' not supported, ignoring\\n"""		521140	0					
ANR	521263	Argument	new_system		521140	2					
ANR	521264	Identifier	new_system		521140	0					
ANR	521265	ExpressionStatement	free ( new_system )	355:2:10343:10361	521140	1	True				
ANR	521266	CallExpression	free ( new_system )		521140	0					
ANR	521267	Callee	free		521140	0					
ANR	521268	Identifier	free		521140	0					
ANR	521269	ArgumentList	new_system		521140	1					
ANR	521270	Argument	new_system		521140	0					
ANR	521271	Identifier	new_system		521140	0					
ANR	521272	ReturnStatement	return false ;	356:2:10365:10377	521140	2	True				
ANR	521273	Identifier	false		521140	0					
ANR	521274	IfStatement	if ( m_backfill_mgr )		521140	5					
ANR	521275	Condition	m_backfill_mgr	359:5:10388:10401	521140	0	True				
ANR	521276	Identifier	m_backfill_mgr		521140	0					
ANR	521277	CompoundStatement		56:22:1908:1908	521140	1					
ANR	521278	IfStatement	"if ( ! strcasecmp ( new_system , m_backfill_mgr -> backfillSystemName ( ) ) )"		521140	0					
ANR	521279	Condition	"! strcasecmp ( new_system , m_backfill_mgr -> backfillSystemName ( ) )"	360:6:10413:10474	521140	0	True				
ANR	521280	UnaryOperationExpression	"! strcasecmp ( new_system , m_backfill_mgr -> backfillSystemName ( ) )"		521140	0					
ANR	521281	UnaryOperator	!		521140	0					
ANR	521282	CallExpression	"strcasecmp ( new_system , m_backfill_mgr -> backfillSystemName ( ) )"		521140	1					
ANR	521283	Callee	strcasecmp		521140	0					
ANR	521284	Identifier	strcasecmp		521140	0					
ANR	521285	ArgumentList	new_system		521140	1					
ANR	521286	Argument	new_system		521140	0					
ANR	521287	Identifier	new_system		521140	0					
ANR	521288	Argument	m_backfill_mgr -> backfillSystemName ( )		521140	1					
ANR	521289	CallExpression	m_backfill_mgr -> backfillSystemName ( )		521140	0					
ANR	521290	Callee	m_backfill_mgr -> backfillSystemName		521140	0					
ANR	521291	PtrMemberAccess	m_backfill_mgr -> backfillSystemName		521140	0					
ANR	521292	Identifier	m_backfill_mgr		521140	0					
ANR	521293	Identifier	backfillSystemName		521140	1					
ANR	521294	ArgumentList			521140	1					
ANR	521295	CompoundStatement		57:71:1981:1981	521140	1					
ANR	521296	ExpressionStatement	free ( new_system )	362:3:10505:10523	521140	0	True				
ANR	521297	CallExpression	free ( new_system )		521140	0					
ANR	521298	Callee	free		521140	0					
ANR	521299	Identifier	free		521140	0					
ANR	521300	ArgumentList	new_system		521140	1					
ANR	521301	Argument	new_system		521140	0					
ANR	521302	Identifier	new_system		521140	0					
ANR	521303	ExpressionStatement	m_backfill_mgr -> reconfig ( )	365:3:10626:10652	521140	1	True				
ANR	521304	CallExpression	m_backfill_mgr -> reconfig ( )		521140	0					
ANR	521305	Callee	m_backfill_mgr -> reconfig		521140	0					
ANR	521306	PtrMemberAccess	m_backfill_mgr -> reconfig		521140	0					
ANR	521307	Identifier	m_backfill_mgr		521140	0					
ANR	521308	Identifier	reconfig		521140	1					
ANR	521309	ArgumentList			521140	1					
ANR	521310	ReturnStatement	return true ;	367:3:10675:10686	521140	2	True				
ANR	521311	Identifier	true		521140	0					
ANR	521312	ElseStatement	else		521140	0					
ANR	521313	CompoundStatement		65:9:2200:2200	521140	0					
ANR	521314	Statement	dprintf	370:3:10720:10726	521140	0	True				
ANR	521315	Statement	(	370:10:10727:10727	521140	1	True				
ANR	521316	Statement	D_ALWAYS	370:12:10729:10736	521140	2	True				
ANR	521317	Statement	","	370:20:10737:10737	521140	3	True				
ANR	521318	Statement	"""BACKFILL_SYSTEM has changed """	370:22:10739:10768	521140	4	True				
ANR	521319	Statement	"""(old: '%s', new: '%s'), re-initializing\\n"""	371:6:10776:10818	521140	5	True				
ANR	521320	Statement	","	371:49:10819:10819	521140	6	True				
ANR	521321	Statement	m_backfill_mgr	372:6:10827:10840	521140	7	True				
ANR	521322	Statement	->	372:20:10841:10842	521140	8	True				
ANR	521323	Statement	backfillSystemName	372:22:10843:10860	521140	9	True				
ANR	521324	Statement	(	372:40:10861:10861	521140	10	True				
ANR	521325	Statement	)	372:41:10862:10862	521140	11	True				
ANR	521326	Statement	","	372:42:10863:10863	521140	12	True				
ANR	521327	Statement	new_system	372:44:10865:10874	521140	13	True				
ANR	521328	Statement	)	372:55:10876:10876	521140	14	True				
ANR	521329	ExpressionStatement		372:56:10877:10877	521140	15	True				
ANR	521330	IfStatement	if ( m_backfill_mgr -> destroy ( ) )		521140	16					
ANR	521331	Condition	m_backfill_mgr -> destroy ( )	373:7:10886:10910	521140	0	True				
ANR	521332	CallExpression	m_backfill_mgr -> destroy ( )		521140	0					
ANR	521333	Callee	m_backfill_mgr -> destroy		521140	0					
ANR	521334	PtrMemberAccess	m_backfill_mgr -> destroy		521140	0					
ANR	521335	Identifier	m_backfill_mgr		521140	0					
ANR	521336	Identifier	destroy		521140	1					
ANR	521337	ArgumentList			521140	1					
ANR	521338	CompoundStatement		70:35:2417:2417	521140	1					
ANR	521339	Statement	delete	376:4:10997:11002	521140	0	True				
ANR	521340	ExpressionStatement	m_backfill_mgr	376:11:11004:11018	521140	1	True				
ANR	521341	Identifier	m_backfill_mgr		521140	0					
ANR	521342	ExpressionStatement	m_backfill_mgr = NULL	377:4:11024:11045	521140	2	True				
ANR	521343	AssignmentExpression	m_backfill_mgr = NULL		521140	0		=			
ANR	521344	Identifier	m_backfill_mgr		521140	0					
ANR	521345	Identifier	NULL		521140	1					
ANR	521346	ElseStatement	else		521140	0					
ANR	521347	CompoundStatement		75:10:2560:2560	521140	0					
ANR	521348	Statement	dprintf	382:4:11209:11215	521140	0	True				
ANR	521349	Statement	(	382:11:11216:11216	521140	1	True				
ANR	521350	Statement	D_ALWAYS	382:13:11218:11225	521140	2	True				
ANR	521351	Statement	","	382:21:11226:11226	521140	3	True				
ANR	521352	Statement	"""BackfillMgr still has cleanup to """	382:23:11228:11262	521140	4	True				
ANR	521353	Statement	"""perform, postponing delete\\n"""	383:7:11271:11300	521140	5	True				
ANR	521354	Statement	)	383:38:11302:11302	521140	6	True				
ANR	521355	ExpressionStatement		383:39:11303:11303	521140	7	True				
ANR	521356	ExpressionStatement	m_backfill_shutdown_pending = true	384:4:11309:11343	521140	8	True				
ANR	521357	AssignmentExpression	m_backfill_shutdown_pending = true		521140	0		=			
ANR	521358	Identifier	m_backfill_shutdown_pending		521140	0					
ANR	521359	Identifier	true		521140	1					
ANR	521360	ExpressionStatement	free ( new_system )	385:4:11349:11367	521140	9	True				
ANR	521361	CallExpression	free ( new_system )		521140	0					
ANR	521362	Callee	free		521140	0					
ANR	521363	Identifier	free		521140	0					
ANR	521364	ArgumentList	new_system		521140	1					
ANR	521365	Argument	new_system		521140	0					
ANR	521366	Identifier	new_system		521140	0					
ANR	521367	ReturnStatement	return true ;	386:4:11373:11384	521140	10	True				
ANR	521368	Identifier	true		521140	0					
ANR	521369	IfStatement	"if ( ! strcasecmp ( new_system , ""BOINC"" ) )"		521140	6					
ANR	521370	Condition	"! strcasecmp ( new_system , ""BOINC"" )"	395:5:11571:11603	521140	0	True				
ANR	521371	UnaryOperationExpression	"! strcasecmp ( new_system , ""BOINC"" )"		521140	0					
ANR	521372	UnaryOperator	!		521140	0					
ANR	521373	CallExpression	"strcasecmp ( new_system , ""BOINC"" )"		521140	1					
ANR	521374	Callee	strcasecmp		521140	0					
ANR	521375	Identifier	strcasecmp		521140	0					
ANR	521376	ArgumentList	new_system		521140	1					
ANR	521377	Argument	new_system		521140	0					
ANR	521378	Identifier	new_system		521140	0					
ANR	521379	Argument	"""BOINC"""		521140	1					
ANR	521380	PrimaryExpression	"""BOINC"""		521140	0					
ANR	521381	CompoundStatement		92:41:3110:3110	521140	1					
ANR	521382	ExpressionStatement	m_backfill_mgr = new BOINC_BackfillMgr ( )	396:2:11611:11651	521140	0	True				
ANR	521383	AssignmentExpression	m_backfill_mgr = new BOINC_BackfillMgr ( )		521140	0		=			
ANR	521384	Identifier	m_backfill_mgr		521140	0					
ANR	521385	UnaryExpression	new BOINC_BackfillMgr ( )		521140	1					
ANR	521386	IfStatement	if ( ! m_backfill_mgr -> init ( ) )		521140	1					
ANR	521387	Condition	! m_backfill_mgr -> init ( )	397:6:11659:11682	521140	0	True				
ANR	521388	UnaryOperationExpression	! m_backfill_mgr -> init ( )		521140	0					
ANR	521389	UnaryOperator	!		521140	0					
ANR	521390	CallExpression	m_backfill_mgr -> init ( )		521140	1					
ANR	521391	Callee	m_backfill_mgr -> init		521140	0					
ANR	521392	PtrMemberAccess	m_backfill_mgr -> init		521140	0					
ANR	521393	Identifier	m_backfill_mgr		521140	0					
ANR	521394	Identifier	init		521140	1					
ANR	521395	ArgumentList			521140	1					
ANR	521396	CompoundStatement		94:33:3189:3189	521140	1					
ANR	521397	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR initializing BOINC_BackfillMgr\\n"" )"	398:3:11691:11752	521140	0	True				
ANR	521398	CallExpression	"dprintf ( D_ALWAYS , ""ERROR initializing BOINC_BackfillMgr\\n"" )"		521140	0					
ANR	521399	Callee	dprintf		521140	0					
ANR	521400	Identifier	dprintf		521140	0					
ANR	521401	ArgumentList	D_ALWAYS		521140	1					
ANR	521402	Argument	D_ALWAYS		521140	0					
ANR	521403	Identifier	D_ALWAYS		521140	0					
ANR	521404	Argument	"""ERROR initializing BOINC_BackfillMgr\\n"""		521140	1					
ANR	521405	PrimaryExpression	"""ERROR initializing BOINC_BackfillMgr\\n"""		521140	0					
ANR	521406	Statement	delete	399:3:11757:11762	521140	1	True				
ANR	521407	ExpressionStatement	m_backfill_mgr	399:10:11764:11778	521140	2	True				
ANR	521408	Identifier	m_backfill_mgr		521140	0					
ANR	521409	ExpressionStatement	m_backfill_mgr = NULL	400:3:11783:11804	521140	3	True				
ANR	521410	AssignmentExpression	m_backfill_mgr = NULL		521140	0		=			
ANR	521411	Identifier	m_backfill_mgr		521140	0					
ANR	521412	Identifier	NULL		521140	1					
ANR	521413	ExpressionStatement	free ( new_system )	401:3:11809:11827	521140	4	True				
ANR	521414	CallExpression	free ( new_system )		521140	0					
ANR	521415	Callee	free		521140	0					
ANR	521416	Identifier	free		521140	0					
ANR	521417	ArgumentList	new_system		521140	1					
ANR	521418	Argument	new_system		521140	0					
ANR	521419	Identifier	new_system		521140	0					
ANR	521420	ReturnStatement	return false ;	402:3:11832:11844	521140	5	True				
ANR	521421	Identifier	false		521140	0					
ANR	521422	IfStatement	if ( ! m_backfill_mgr )		521140	7					
ANR	521423	Condition	! m_backfill_mgr	407:5:11883:11898	521140	0	True				
ANR	521424	UnaryOperationExpression	! m_backfill_mgr		521140	0					
ANR	521425	UnaryOperator	!		521140	0					
ANR	521426	Identifier	m_backfill_mgr		521140	1					
ANR	521427	CompoundStatement		104:24:3405:3405	521140	1					
ANR	521428	ExpressionStatement	"EXCEPT ( ""IMPOSSILE: unrecognized BACKFILL_SYSTEM: '%s'"" , new_system )"	409:2:11967:12040	521140	0	True				
ANR	521429	CallExpression	"EXCEPT ( ""IMPOSSILE: unrecognized BACKFILL_SYSTEM: '%s'"" , new_system )"		521140	0					
ANR	521430	Callee	EXCEPT		521140	0					
ANR	521431	Identifier	EXCEPT		521140	0					
ANR	521432	ArgumentList	"""IMPOSSILE: unrecognized BACKFILL_SYSTEM: '%s'"""		521140	1					
ANR	521433	Argument	"""IMPOSSILE: unrecognized BACKFILL_SYSTEM: '%s'"""		521140	0					
ANR	521434	PrimaryExpression	"""IMPOSSILE: unrecognized BACKFILL_SYSTEM: '%s'"""		521140	0					
ANR	521435	Argument	new_system		521140	1					
ANR	521436	Identifier	new_system		521140	0					
ANR	521437	ExpressionStatement	"dprintf ( D_ALWAYS , ""Created a %s Backfill Manager\\n"" , m_backfill_mgr -> backfillSystemName ( ) )"	413:1:12047:12143	521140	8	True				
ANR	521438	CallExpression	"dprintf ( D_ALWAYS , ""Created a %s Backfill Manager\\n"" , m_backfill_mgr -> backfillSystemName ( ) )"		521140	0					
ANR	521439	Callee	dprintf		521140	0					
ANR	521440	Identifier	dprintf		521140	0					
ANR	521441	ArgumentList	D_ALWAYS		521140	1					
ANR	521442	Argument	D_ALWAYS		521140	0					
ANR	521443	Identifier	D_ALWAYS		521140	0					
ANR	521444	Argument	"""Created a %s Backfill Manager\\n"""		521140	1					
ANR	521445	PrimaryExpression	"""Created a %s Backfill Manager\\n"""		521140	0					
ANR	521446	Argument	m_backfill_mgr -> backfillSystemName ( )		521140	2					
ANR	521447	CallExpression	m_backfill_mgr -> backfillSystemName ( )		521140	0					
ANR	521448	Callee	m_backfill_mgr -> backfillSystemName		521140	0					
ANR	521449	PtrMemberAccess	m_backfill_mgr -> backfillSystemName		521140	0					
ANR	521450	Identifier	m_backfill_mgr		521140	0					
ANR	521451	Identifier	backfillSystemName		521140	1					
ANR	521452	ArgumentList			521140	1					
ANR	521453	ExpressionStatement	free ( new_system )	416:1:12147:12165	521140	9	True				
ANR	521454	CallExpression	free ( new_system )		521140	0					
ANR	521455	Callee	free		521140	0					
ANR	521456	Identifier	free		521140	0					
ANR	521457	ArgumentList	new_system		521140	1					
ANR	521458	Argument	new_system		521140	0					
ANR	521459	Identifier	new_system		521140	0					
ANR	521460	ReturnStatement	return true ;	418:1:12169:12180	521140	10	True				
ANR	521461	Identifier	true		521140	0					
ANR	521462	ReturnType	bool		521140	1					
ANR	521463	Identifier	ResMgr :: backfillConfig		521140	2					
ANR	521464	ParameterList			521140	3					
ANR	521465	CFGEntryNode	ENTRY		521140		True				
ANR	521466	CFGExitNode	EXIT		521140		True				
ANR	521467	Symbol	NULL		521140						
ANR	521468	Symbol	m_backfill_mgr -> backfillSystemName		521140						
ANR	521469	Symbol	false		521140						
ANR	521470	Symbol	D_ALWAYS		521140						
ANR	521471	Symbol	m_backfill_mgr -> destroy		521140						
ANR	521472	Symbol	new_system		521140						
ANR	521473	Symbol	verifyBackfillSystem		521140						
ANR	521474	Symbol	param_boolean		521140						
ANR	521475	Symbol	m_backfill_shutdown_pending		521140						
ANR	521476	Symbol	* m_backfill_mgr		521140						
ANR	521477	Symbol	m_backfill_mgr -> init		521140						
ANR	521478	Symbol	param		521140						
ANR	521479	Symbol	true		521140						
ANR	521480	Symbol	strcasecmp		521140						
ANR	521481	Symbol	m_backfill_mgr		521140						
ANR	521482	Function	ResMgr :: init_resources	426:0:12216:14451							
ANR	521483	FunctionDef	ResMgr :: init_resources ()		521482	0					
ANR	521484	CompoundStatement		428:0:12252:14451	521482	0					
ANR	521485	IdentifierDeclStatement	"int i , num_res ;"	429:1:12255:12269	521482	0	True				
ANR	521486	IdentifierDecl	i		521482	0					
ANR	521487	IdentifierDeclType	int		521482	0					
ANR	521488	Identifier	i		521482	1					
ANR	521489	IdentifierDecl	num_res		521482	1					
ANR	521490	IdentifierDeclType	int		521482	0					
ANR	521491	Identifier	num_res		521482	1					
ANR	521492	IdentifierDeclStatement	CpuAttributes * * new_cpu_attrs ;	430:1:12272:12301	521482	1	True				
ANR	521493	IdentifierDecl	* * new_cpu_attrs		521482	0					
ANR	521494	IdentifierDeclType	CpuAttributes * *		521482	0					
ANR	521495	Identifier	new_cpu_attrs		521482	1					
ANR	521496	ExpressionStatement	stats . Init ( )	432:4:12308:12320	521482	2	True				
ANR	521497	CallExpression	stats . Init ( )		521482	0					
ANR	521498	Callee	stats . Init		521482	0					
ANR	521499	MemberAccess	stats . Init		521482	0					
ANR	521500	Identifier	stats		521482	0					
ANR	521501	Identifier	Init		521482	1					
ANR	521502	ArgumentList			521482	1					
ANR	521503	IfStatement	"if ( param_boolean ( ""ALLOW_VM_CRUFT"" , false ) )"		521482	3					
ANR	521504	Condition	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"	436:5:12439:12476	521482	0	True				
ANR	521505	CallExpression	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"		521482	0					
ANR	521506	Callee	param_boolean		521482	0					
ANR	521507	Identifier	param_boolean		521482	0					
ANR	521508	ArgumentList	"""ALLOW_VM_CRUFT"""		521482	1					
ANR	521509	Argument	"""ALLOW_VM_CRUFT"""		521482	0					
ANR	521510	PrimaryExpression	"""ALLOW_VM_CRUFT"""		521482	0					
ANR	521511	Argument	false		521482	1					
ANR	521512	Identifier	false		521482	0					
ANR	521513	CompoundStatement		9:45:226:226	521482	1					
ANR	521514	ExpressionStatement	"max_types = param_integer ( ""MAX_SLOT_TYPES"" , param_integer ( ""MAX_VIRTUAL_MACHINE_TYPES"" , 10 ) )"	437:2:12483:12596	521482	0	True				
ANR	521515	AssignmentExpression	"max_types = param_integer ( ""MAX_SLOT_TYPES"" , param_integer ( ""MAX_VIRTUAL_MACHINE_TYPES"" , 10 ) )"		521482	0		=			
ANR	521516	Identifier	max_types		521482	0					
ANR	521517	CallExpression	"param_integer ( ""MAX_SLOT_TYPES"" , param_integer ( ""MAX_VIRTUAL_MACHINE_TYPES"" , 10 ) )"		521482	1					
ANR	521518	Callee	param_integer		521482	0					
ANR	521519	Identifier	param_integer		521482	0					
ANR	521520	ArgumentList	"""MAX_SLOT_TYPES"""		521482	1					
ANR	521521	Argument	"""MAX_SLOT_TYPES"""		521482	0					
ANR	521522	PrimaryExpression	"""MAX_SLOT_TYPES"""		521482	0					
ANR	521523	Argument	"param_integer ( ""MAX_VIRTUAL_MACHINE_TYPES"" , 10 )"		521482	1					
ANR	521524	CallExpression	"param_integer ( ""MAX_VIRTUAL_MACHINE_TYPES"" , 10 )"		521482	0					
ANR	521525	Callee	param_integer		521482	0					
ANR	521526	Identifier	param_integer		521482	0					
ANR	521527	ArgumentList	"""MAX_VIRTUAL_MACHINE_TYPES"""		521482	1					
ANR	521528	Argument	"""MAX_VIRTUAL_MACHINE_TYPES"""		521482	0					
ANR	521529	PrimaryExpression	"""MAX_VIRTUAL_MACHINE_TYPES"""		521482	0					
ANR	521530	Argument	10		521482	1					
ANR	521531	PrimaryExpression	10		521482	0					
ANR	521532	ElseStatement	else		521482	0					
ANR	521533	CompoundStatement		13:8:353:353	521482	0					
ANR	521534	ExpressionStatement	"max_types = param_integer ( ""MAX_SLOT_TYPES"" , 10 )"	441:2:12610:12657	521482	0	True				
ANR	521535	AssignmentExpression	"max_types = param_integer ( ""MAX_SLOT_TYPES"" , 10 )"		521482	0		=			
ANR	521536	Identifier	max_types		521482	0					
ANR	521537	CallExpression	"param_integer ( ""MAX_SLOT_TYPES"" , 10 )"		521482	1					
ANR	521538	Callee	param_integer		521482	0					
ANR	521539	Identifier	param_integer		521482	0					
ANR	521540	ArgumentList	"""MAX_SLOT_TYPES"""		521482	1					
ANR	521541	Argument	"""MAX_SLOT_TYPES"""		521482	0					
ANR	521542	PrimaryExpression	"""MAX_SLOT_TYPES"""		521482	0					
ANR	521543	Argument	10		521482	1					
ANR	521544	PrimaryExpression	10		521482	0					
ANR	521545	ExpressionStatement	max_types += 1	444:1:12664:12678	521482	4	True				
ANR	521546	AssignmentExpression	max_types += 1		521482	0		+=			
ANR	521547	Identifier	max_types		521482	0					
ANR	521548	PrimaryExpression	1		521482	1					
ANR	521549	Statement	type_strings	448:1:12778:12789	521482	5	True				
ANR	521550	Statement	=	448:14:12791:12791	521482	6	True				
ANR	521551	Statement	new	448:16:12793:12795	521482	7	True				
ANR	521552	Statement	StringList	448:20:12797:12806	521482	8	True				
ANR	521553	Statement	*	448:30:12807:12807	521482	9	True				
ANR	521554	Statement	[	448:31:12808:12808	521482	10	True				
ANR	521555	Statement	max_types	448:32:12809:12817	521482	11	True				
ANR	521556	Statement	]	448:41:12818:12818	521482	12	True				
ANR	521557	ExpressionStatement		448:42:12819:12819	521482	13	True				
ANR	521558	ExpressionStatement	"memset ( type_strings , 0 , ( sizeof ( StringList * ) * max_types ) )"	449:1:12822:12882	521482	14	True				
ANR	521559	CallExpression	"memset ( type_strings , 0 , ( sizeof ( StringList * ) * max_types ) )"		521482	0					
ANR	521560	Callee	memset		521482	0					
ANR	521561	Identifier	memset		521482	0					
ANR	521562	ArgumentList	type_strings		521482	1					
ANR	521563	Argument	type_strings		521482	0					
ANR	521564	Identifier	type_strings		521482	0					
ANR	521565	Argument	0		521482	1					
ANR	521566	PrimaryExpression	0		521482	0					
ANR	521567	Argument	sizeof ( StringList * ) * max_types		521482	2					
ANR	521568	MultiplicativeExpression	sizeof ( StringList * ) * max_types		521482	0		*			
ANR	521569	SizeofExpression	sizeof ( StringList * )		521482	0					
ANR	521570	Sizeof	sizeof		521482	0					
ANR	521571	SizeofOperand	StringList *		521482	1					
ANR	521572	Identifier	max_types		521482	1					
ANR	521573	ExpressionStatement	initTypes ( 1 )	455:1:13132:13146	521482	15	True				
ANR	521574	CallExpression	initTypes ( 1 )		521482	0					
ANR	521575	Callee	initTypes		521482	0					
ANR	521576	Identifier	initTypes		521482	0					
ANR	521577	ArgumentList	1		521482	1					
ANR	521578	Argument	1		521482	0					
ANR	521579	PrimaryExpression	1		521482	0					
ANR	521580	ExpressionStatement	"num_res = countTypes ( & type_nums , true )"	458:1:13209:13249	521482	16	True				
ANR	521581	AssignmentExpression	"num_res = countTypes ( & type_nums , true )"		521482	0		=			
ANR	521582	Identifier	num_res		521482	0					
ANR	521583	CallExpression	"countTypes ( & type_nums , true )"		521482	1					
ANR	521584	Callee	countTypes		521482	0					
ANR	521585	Identifier	countTypes		521482	0					
ANR	521586	ArgumentList	& type_nums		521482	1					
ANR	521587	Argument	& type_nums		521482	0					
ANR	521588	UnaryOperationExpression	& type_nums		521482	0					
ANR	521589	UnaryOperator	&		521482	0					
ANR	521590	Identifier	type_nums		521482	1					
ANR	521591	Argument	true		521482	1					
ANR	521592	Identifier	true		521482	0					
ANR	521593	IfStatement	if ( ! num_res )		521482	17					
ANR	521594	Condition	! num_res	460:5:13257:13265	521482	0	True				
ANR	521595	UnaryOperationExpression	! num_res		521482	0					
ANR	521596	UnaryOperator	!		521482	0					
ANR	521597	Identifier	num_res		521482	1					
ANR	521598	CompoundStatement		33:17:1016:1016	521482	1					
ANR	521599	ExpressionStatement	resources = NULL	462:2:13324:13340	521482	0	True				
ANR	521600	AssignmentExpression	resources = NULL		521482	0		=			
ANR	521601	Identifier	resources		521482	0					
ANR	521602	Identifier	NULL		521482	1					
ANR	521603	ExpressionStatement	"id_disp = new IdDispenser ( num_cpus ( ) , 1 )"	463:2:13344:13386	521482	1	True				
ANR	521604	AssignmentExpression	"id_disp = new IdDispenser ( num_cpus ( ) , 1 )"		521482	0		=			
ANR	521605	Identifier	id_disp		521482	0					
ANR	521606	Expression	"num_cpus ( ) , 1"		521482	1					
ANR	521607	CallExpression	num_cpus ( )		521482	0					
ANR	521608	Callee	num_cpus		521482	0					
ANR	521609	Identifier	num_cpus		521482	0					
ANR	521610	ArgumentList			521482	1					
ANR	521611	PrimaryExpression	1		521482	1					
ANR	521612	ReturnStatement	return ;	464:2:13390:13396	521482	2	True				
ANR	521613	ExpressionStatement	"new_cpu_attrs = buildCpuAttrs ( num_res , type_nums , true )"	470:1:13566:13623	521482	18	True				
ANR	521614	AssignmentExpression	"new_cpu_attrs = buildCpuAttrs ( num_res , type_nums , true )"		521482	0		=			
ANR	521615	Identifier	new_cpu_attrs		521482	0					
ANR	521616	CallExpression	"buildCpuAttrs ( num_res , type_nums , true )"		521482	1					
ANR	521617	Callee	buildCpuAttrs		521482	0					
ANR	521618	Identifier	buildCpuAttrs		521482	0					
ANR	521619	ArgumentList	num_res		521482	1					
ANR	521620	Argument	num_res		521482	0					
ANR	521621	Identifier	num_res		521482	0					
ANR	521622	Argument	type_nums		521482	1					
ANR	521623	Identifier	type_nums		521482	0					
ANR	521624	Argument	true		521482	2					
ANR	521625	Identifier	true		521482	0					
ANR	521626	IfStatement	if ( ! new_cpu_attrs )		521482	19					
ANR	521627	Condition	! new_cpu_attrs	471:5:13630:13644	521482	0	True				
ANR	521628	UnaryOperationExpression	! new_cpu_attrs		521482	0					
ANR	521629	UnaryOperator	!		521482	0					
ANR	521630	Identifier	new_cpu_attrs		521482	1					
ANR	521631	CompoundStatement		44:23:1395:1395	521482	1					
ANR	521632	ExpressionStatement	"EXCEPT ( ""buildCpuAttrs() failed and should have already EXCEPT'ed"" )"	472:2:13652:13720	521482	0	True				
ANR	521633	CallExpression	"EXCEPT ( ""buildCpuAttrs() failed and should have already EXCEPT'ed"" )"		521482	0					
ANR	521634	Callee	EXCEPT		521482	0					
ANR	521635	Identifier	EXCEPT		521482	0					
ANR	521636	ArgumentList	"""buildCpuAttrs() failed and should have already EXCEPT'ed"""		521482	1					
ANR	521637	Argument	"""buildCpuAttrs() failed and should have already EXCEPT'ed"""		521482	0					
ANR	521638	PrimaryExpression	"""buildCpuAttrs() failed and should have already EXCEPT'ed"""		521482	0					
ANR	521639	ForStatement	for ( i = 0 ; i < num_res ; i ++ )		521482	20					
ANR	521640	ForInit	i = 0 ;	477:6:13809:13812	521482	0	True				
ANR	521641	AssignmentExpression	i = 0		521482	0		=			
ANR	521642	Identifier	i		521482	0					
ANR	521643	PrimaryExpression	0		521482	1					
ANR	521644	Condition	i < num_res	477:11:13814:13822	521482	1	True				
ANR	521645	RelationalExpression	i < num_res		521482	0		<			
ANR	521646	Identifier	i		521482	0					
ANR	521647	Identifier	num_res		521482	1					
ANR	521648	PostIncDecOperationExpression	i ++	477:22:13825:13827	521482	2	True				
ANR	521649	Identifier	i		521482	0					
ANR	521650	IncDec	++		521482	1					
ANR	521651	CompoundStatement		50:28:1578:1578	521482	3					
ANR	521652	ExpressionStatement	"addResource ( new Resource ( new_cpu_attrs [ i ] , i + 1 , num_res > 1 ) )"	478:2:13835:13898	521482	0	True				
ANR	521653	CallExpression	"addResource ( new Resource ( new_cpu_attrs [ i ] , i + 1 , num_res > 1 ) )"		521482	0					
ANR	521654	Callee	addResource		521482	0					
ANR	521655	Identifier	addResource		521482	0					
ANR	521656	ArgumentList	"new_cpu_attrs [ i ] , i + 1 , num_res > 1"		521482	1					
ANR	521657	Argument	"new_cpu_attrs [ i ] , i + 1 , num_res > 1"		521482	0					
ANR	521658	Expression	"new_cpu_attrs [ i ] , i + 1 , num_res > 1"		521482	0					
ANR	521659	ArrayIndexing	new_cpu_attrs [ i ]		521482	0					
ANR	521660	Identifier	new_cpu_attrs		521482	0					
ANR	521661	Identifier	i		521482	1					
ANR	521662	Expression	"i + 1 , num_res > 1"		521482	1					
ANR	521663	AdditiveExpression	i + 1		521482	0		+			
ANR	521664	Identifier	i		521482	0					
ANR	521665	PrimaryExpression	1		521482	1					
ANR	521666	RelationalExpression	num_res > 1		521482	1		>			
ANR	521667	Identifier	num_res		521482	0					
ANR	521668	PrimaryExpression	1		521482	1					
ANR	521669	ExpressionStatement	"id_disp = new IdDispenser ( num_cpus ( ) , i + 1 )"	482:1:13966:14010	521482	21	True				
ANR	521670	AssignmentExpression	"id_disp = new IdDispenser ( num_cpus ( ) , i + 1 )"		521482	0		=			
ANR	521671	Identifier	id_disp		521482	0					
ANR	521672	Expression	"num_cpus ( ) , i + 1"		521482	1					
ANR	521673	CallExpression	num_cpus ( )		521482	0					
ANR	521674	Callee	num_cpus		521482	0					
ANR	521675	Identifier	num_cpus		521482	0					
ANR	521676	ArgumentList			521482	1					
ANR	521677	AdditiveExpression	i + 1		521482	1		+			
ANR	521678	Identifier	i		521482	0					
ANR	521679	PrimaryExpression	1		521482	1					
ANR	521680	Statement	delete	489:1:14294:14299	521482	22	True				
ANR	521681	Statement	[	489:8:14301:14301	521482	23	True				
ANR	521682	Statement	]	489:9:14302:14302	521482	24	True				
ANR	521683	ExpressionStatement	new_cpu_attrs	489:11:14304:14317	521482	25	True				
ANR	521684	Identifier	new_cpu_attrs		521482	0					
ANR	521685	ExpressionStatement	backfillConfig ( )	492:1:14339:14355	521482	26	True				
ANR	521686	CallExpression	backfillConfig ( )		521482	0					
ANR	521687	Callee	backfillConfig		521482	0					
ANR	521688	Identifier	backfillConfig		521482	0					
ANR	521689	ArgumentList			521482	1					
ANR	521690	Statement	m_hook_mgr	496:1:14385:14394	521482	27	True				
ANR	521691	Statement	=	496:12:14396:14396	521482	28	True				
ANR	521692	Statement	new	496:14:14398:14400	521482	29	True				
ANR	521693	ExpressionStatement	StartdHookMgr	496:18:14402:14415	521482	30	True				
ANR	521694	Identifier	StartdHookMgr		521482	0					
ANR	521695	ExpressionStatement	m_hook_mgr -> initialize ( )	497:1:14418:14442	521482	31	True				
ANR	521696	CallExpression	m_hook_mgr -> initialize ( )		521482	0					
ANR	521697	Callee	m_hook_mgr -> initialize		521482	0					
ANR	521698	PtrMemberAccess	m_hook_mgr -> initialize		521482	0					
ANR	521699	Identifier	m_hook_mgr		521482	0					
ANR	521700	Identifier	initialize		521482	1					
ANR	521701	ArgumentList			521482	1					
ANR	521702	ReturnType	void		521482	1					
ANR	521703	Identifier	ResMgr :: init_resources		521482	2					
ANR	521704	ParameterList			521482	3					
ANR	521705	CFGEntryNode	ENTRY		521482		True				
ANR	521706	CFGExitNode	EXIT		521482		True				
ANR	521707	Symbol	num_cpus		521482						
ANR	521708	Symbol	type_nums		521482						
ANR	521709	Symbol	type_strings		521482						
ANR	521710	Symbol	NULL		521482						
ANR	521711	Symbol	num_res		521482						
ANR	521712	Symbol	max_types		521482						
ANR	521713	Symbol	false		521482						
ANR	521714	Symbol	i		521482						
ANR	521715	Symbol	resources		521482						
ANR	521716	Symbol	param_boolean		521482						
ANR	521717	Symbol	& type_nums		521482						
ANR	521718	Symbol	* i		521482						
ANR	521719	Symbol	stats		521482						
ANR	521720	Symbol	true		521482						
ANR	521721	Symbol	param_integer		521482						
ANR	521722	Symbol	id_disp		521482						
ANR	521723	Symbol	new_cpu_attrs		521482						
ANR	521724	Symbol	m_hook_mgr		521482						
ANR	521725	Symbol	countTypes		521482						
ANR	521726	Symbol	buildCpuAttrs		521482						
ANR	521727	Symbol	* new_cpu_attrs		521482						
ANR	521728	Function	ResMgr :: reconfig_resources	501:0:14454:18501							
ANR	521729	FunctionDef	ResMgr :: reconfig_resources ()		521728	0					
ANR	521730	CompoundStatement		503:0:14494:18501	521728	0					
ANR	521731	IdentifierDeclStatement	"int t , i , cur , num ;"	504:1:14497:14515	521728	0	True				
ANR	521732	IdentifierDecl	t		521728	0					
ANR	521733	IdentifierDeclType	int		521728	0					
ANR	521734	Identifier	t		521728	1					
ANR	521735	IdentifierDecl	i		521728	1					
ANR	521736	IdentifierDeclType	int		521728	0					
ANR	521737	Identifier	i		521728	1					
ANR	521738	IdentifierDecl	cur		521728	2					
ANR	521739	IdentifierDeclType	int		521728	0					
ANR	521740	Identifier	cur		521728	1					
ANR	521741	IdentifierDecl	num		521728	3					
ANR	521742	IdentifierDeclType	int		521728	0					
ANR	521743	Identifier	num		521728	1					
ANR	521744	IdentifierDeclStatement	CpuAttributes * * new_cpu_attrs ;	505:1:14518:14547	521728	1	True				
ANR	521745	IdentifierDecl	* * new_cpu_attrs		521728	0					
ANR	521746	IdentifierDeclType	CpuAttributes * *		521728	0					
ANR	521747	Identifier	new_cpu_attrs		521728	1					
ANR	521748	IdentifierDeclStatement	int max_num = num_cpus ( ) ;	506:1:14550:14574	521728	2	True				
ANR	521749	IdentifierDecl	max_num = num_cpus ( )		521728	0					
ANR	521750	IdentifierDeclType	int		521728	0					
ANR	521751	Identifier	max_num		521728	1					
ANR	521752	AssignmentExpression	max_num = num_cpus ( )		521728	2		=			
ANR	521753	Identifier	max_num		521728	0					
ANR	521754	CallExpression	num_cpus ( )		521728	1					
ANR	521755	Callee	num_cpus		521728	0					
ANR	521756	Identifier	num_cpus		521728	0					
ANR	521757	ArgumentList			521728	1					
ANR	521758	IdentifierDeclStatement	int * cur_type_index ;	507:1:14577:14596	521728	3	True				
ANR	521759	IdentifierDecl	* cur_type_index		521728	0					
ANR	521760	IdentifierDeclType	int *		521728	0					
ANR	521761	Identifier	cur_type_index		521728	1					
ANR	521762	IdentifierDeclStatement	Resource * * * sorted_resources ;	508:1:14599:14627	521728	4	True				
ANR	521763	IdentifierDecl	* * * sorted_resources		521728	0					
ANR	521764	IdentifierDeclType	Resource * * *		521728	0					
ANR	521765	Identifier	sorted_resources		521728	1					
ANR	521766	IdentifierDeclStatement	Resource * rip ;	509:1:14662:14675	521728	5	True				
ANR	521767	IdentifierDecl	* rip		521728	0					
ANR	521768	IdentifierDeclType	Resource *		521728	0					
ANR	521769	Identifier	rip		521728	1					
ANR	521770	ExpressionStatement	backfillConfig ( )	512:1:14697:14713	521728	6	True				
ANR	521771	CallExpression	backfillConfig ( )		521728	0					
ANR	521772	Callee	backfillConfig		521728	0					
ANR	521773	Identifier	backfillConfig		521728	0					
ANR	521774	ArgumentList			521728	1					
ANR	521775	ExpressionStatement	m_hook_mgr -> reconfig ( )	516:1:14743:14765	521728	7	True				
ANR	521776	CallExpression	m_hook_mgr -> reconfig ( )		521728	0					
ANR	521777	Callee	m_hook_mgr -> reconfig		521728	0					
ANR	521778	PtrMemberAccess	m_hook_mgr -> reconfig		521728	0					
ANR	521779	Identifier	m_hook_mgr		521728	0					
ANR	521780	Identifier	reconfig		521728	1					
ANR	521781	ArgumentList			521728	1					
ANR	521782	ExpressionStatement	updateHibernateConfiguration ( )	520:1:14797:14827	521728	8	True				
ANR	521783	CallExpression	updateHibernateConfiguration ( )		521728	0					
ANR	521784	Callee	updateHibernateConfiguration		521728	0					
ANR	521785	Identifier	updateHibernateConfiguration		521728	0					
ANR	521786	ArgumentList			521728	1					
ANR	521787	ExpressionStatement	walk ( & Resource :: reconfig )	524:1:14903:14928	521728	9	True				
ANR	521788	CallExpression	walk ( & Resource :: reconfig )		521728	0					
ANR	521789	Callee	walk		521728	0					
ANR	521790	Identifier	walk		521728	0					
ANR	521791	ArgumentList	& Resource :: reconfig		521728	1					
ANR	521792	Argument	& Resource :: reconfig		521728	0					
ANR	521793	UnaryOperationExpression	& Resource :: reconfig		521728	0					
ANR	521794	UnaryOperator	&		521728	0					
ANR	521795	Identifier	Resource :: reconfig		521728	1					
ANR	521796	ExpressionStatement	initTypes ( 0 )	528:1:15030:15044	521728	10	True				
ANR	521797	CallExpression	initTypes ( 0 )		521728	0					
ANR	521798	Callee	initTypes		521728	0					
ANR	521799	Identifier	initTypes		521728	0					
ANR	521800	ArgumentList	0		521728	1					
ANR	521801	Argument	0		521728	0					
ANR	521802	PrimaryExpression	0		521728	0					
ANR	521803	ExpressionStatement	"num = countTypes ( & new_type_nums , false )"	531:1:15107:15148	521728	11	True				
ANR	521804	AssignmentExpression	"num = countTypes ( & new_type_nums , false )"		521728	0		=			
ANR	521805	Identifier	num		521728	0					
ANR	521806	CallExpression	"countTypes ( & new_type_nums , false )"		521728	1					
ANR	521807	Callee	countTypes		521728	0					
ANR	521808	Identifier	countTypes		521728	0					
ANR	521809	ArgumentList	& new_type_nums		521728	1					
ANR	521810	Argument	& new_type_nums		521728	0					
ANR	521811	UnaryOperationExpression	& new_type_nums		521728	0					
ANR	521812	UnaryOperator	&		521728	0					
ANR	521813	Identifier	new_type_nums		521728	1					
ANR	521814	Argument	false		521728	1					
ANR	521815	Identifier	false		521728	0					
ANR	521816	IfStatement	"if ( typeNumCmp ( new_type_nums , type_nums ) )"		521728	12					
ANR	521817	Condition	"typeNumCmp ( new_type_nums , type_nums )"	533:5:15156:15191	521728	0	True				
ANR	521818	CallExpression	"typeNumCmp ( new_type_nums , type_nums )"		521728	0					
ANR	521819	Callee	typeNumCmp		521728	0					
ANR	521820	Identifier	typeNumCmp		521728	0					
ANR	521821	ArgumentList	new_type_nums		521728	1					
ANR	521822	Argument	new_type_nums		521728	0					
ANR	521823	Identifier	new_type_nums		521728	0					
ANR	521824	Argument	type_nums		521728	1					
ANR	521825	Identifier	type_nums		521728	0					
ANR	521826	CompoundStatement		31:44:700:700	521728	1					
ANR	521827	Statement	delete	536:2:15286:15291	521728	0	True				
ANR	521828	Statement	[	536:9:15293:15293	521728	1	True				
ANR	521829	Statement	]	536:10:15294:15294	521728	2	True				
ANR	521830	ExpressionStatement	new_type_nums	536:12:15296:15309	521728	3	True				
ANR	521831	Identifier	new_type_nums		521728	0					
ANR	521832	ExpressionStatement	new_type_nums = NULL	537:2:15313:15333	521728	4	True				
ANR	521833	AssignmentExpression	new_type_nums = NULL		521728	0		=			
ANR	521834	Identifier	new_type_nums		521728	0					
ANR	521835	Identifier	NULL		521728	1					
ANR	521836	ReturnStatement	return true ;	538:2:15337:15348	521728	5	True				
ANR	521837	Identifier	true		521728	0					
ANR	521838	ExpressionStatement	"new_cpu_attrs = buildCpuAttrs ( num , new_type_nums , false )"	543:1:15437:15495	521728	13	True				
ANR	521839	AssignmentExpression	"new_cpu_attrs = buildCpuAttrs ( num , new_type_nums , false )"		521728	0		=			
ANR	521840	Identifier	new_cpu_attrs		521728	0					
ANR	521841	CallExpression	"buildCpuAttrs ( num , new_type_nums , false )"		521728	1					
ANR	521842	Callee	buildCpuAttrs		521728	0					
ANR	521843	Identifier	buildCpuAttrs		521728	0					
ANR	521844	ArgumentList	num		521728	1					
ANR	521845	Argument	num		521728	0					
ANR	521846	Identifier	num		521728	0					
ANR	521847	Argument	new_type_nums		521728	1					
ANR	521848	Identifier	new_type_nums		521728	0					
ANR	521849	Argument	false		521728	2					
ANR	521850	Identifier	false		521728	0					
ANR	521851	IfStatement	if ( ! new_cpu_attrs )		521728	14					
ANR	521852	Condition	! new_cpu_attrs	544:5:15502:15516	521728	0	True				
ANR	521853	UnaryOperationExpression	! new_cpu_attrs		521728	0					
ANR	521854	UnaryOperator	!		521728	0					
ANR	521855	Identifier	new_cpu_attrs		521728	1					
ANR	521856	CompoundStatement		42:23:1025:1025	521728	1					
ANR	521857	ExpressionStatement	"dprintf ( D_ALWAYS , ""Aborting slot type reconfig.\\n"" )"	547:2:15632:15685	521728	0	True				
ANR	521858	CallExpression	"dprintf ( D_ALWAYS , ""Aborting slot type reconfig.\\n"" )"		521728	0					
ANR	521859	Callee	dprintf		521728	0					
ANR	521860	Identifier	dprintf		521728	0					
ANR	521861	ArgumentList	D_ALWAYS		521728	1					
ANR	521862	Argument	D_ALWAYS		521728	0					
ANR	521863	Identifier	D_ALWAYS		521728	0					
ANR	521864	Argument	"""Aborting slot type reconfig.\\n"""		521728	1					
ANR	521865	PrimaryExpression	"""Aborting slot type reconfig.\\n"""		521728	0					
ANR	521866	Statement	delete	548:2:15689:15694	521728	1	True				
ANR	521867	Statement	[	548:9:15696:15696	521728	2	True				
ANR	521868	Statement	]	548:10:15697:15697	521728	3	True				
ANR	521869	ExpressionStatement	new_type_nums	548:12:15699:15712	521728	4	True				
ANR	521870	Identifier	new_type_nums		521728	0					
ANR	521871	ExpressionStatement	new_type_nums = NULL	549:2:15716:15736	521728	5	True				
ANR	521872	AssignmentExpression	new_type_nums = NULL		521728	0		=			
ANR	521873	Identifier	new_type_nums		521728	0					
ANR	521874	Identifier	NULL		521728	1					
ANR	521875	ReturnStatement	return true ;	550:2:15740:15751	521728	6	True				
ANR	521876	Identifier	true		521728	0					
ANR	521877	Statement	sorted_resources	558:1:15957:15972	521728	15	True				
ANR	521878	Statement	=	558:18:15974:15974	521728	16	True				
ANR	521879	Statement	new	558:20:15976:15978	521728	17	True				
ANR	521880	Statement	Resource	558:24:15980:15987	521728	18	True				
ANR	521881	Statement	*	558:32:15988:15988	521728	19	True				
ANR	521882	Statement	*	558:33:15989:15989	521728	20	True				
ANR	521883	Statement	[	558:35:15991:15991	521728	21	True				
ANR	521884	Statement	max_types	558:36:15992:16000	521728	22	True				
ANR	521885	Statement	]	558:45:16001:16001	521728	23	True				
ANR	521886	ExpressionStatement		558:46:16002:16002	521728	24	True				
ANR	521887	ForStatement	for ( i = 0 ; i < max_types ; i ++ )		521728	25					
ANR	521888	ForInit	i = 0 ;	559:6:16010:16013	521728	0	True				
ANR	521889	AssignmentExpression	i = 0		521728	0		=			
ANR	521890	Identifier	i		521728	0					
ANR	521891	PrimaryExpression	0		521728	1					
ANR	521892	Condition	i < max_types	559:11:16015:16025	521728	1	True				
ANR	521893	RelationalExpression	i < max_types		521728	0		<			
ANR	521894	Identifier	i		521728	0					
ANR	521895	Identifier	max_types		521728	1					
ANR	521896	PostIncDecOperationExpression	i ++	559:24:16028:16030	521728	2	True				
ANR	521897	Identifier	i		521728	0					
ANR	521898	IncDec	++		521728	1					
ANR	521899	CompoundStatement		57:30:1539:1539	521728	3					
ANR	521900	Statement	sorted_resources	560:2:16038:16053	521728	0	True				
ANR	521901	Statement	[	560:18:16054:16054	521728	1	True				
ANR	521902	Statement	i	560:19:16055:16055	521728	2	True				
ANR	521903	Statement	]	560:20:16056:16056	521728	3	True				
ANR	521904	Statement	=	560:22:16058:16058	521728	4	True				
ANR	521905	Statement	new	560:24:16060:16062	521728	5	True				
ANR	521906	Statement	Resource	560:28:16064:16071	521728	6	True				
ANR	521907	Statement	*	560:36:16072:16072	521728	7	True				
ANR	521908	Statement	[	560:38:16074:16074	521728	8	True				
ANR	521909	Statement	max_num	560:39:16075:16081	521728	9	True				
ANR	521910	Statement	]	560:46:16082:16082	521728	10	True				
ANR	521911	ExpressionStatement		560:47:16083:16083	521728	11	True				
ANR	521912	ExpressionStatement	"memset ( sorted_resources [ i ] , 0 , ( max_num * sizeof ( Resource * ) ) )"	561:2:16087:16148	521728	12	True				
ANR	521913	CallExpression	"memset ( sorted_resources [ i ] , 0 , ( max_num * sizeof ( Resource * ) ) )"		521728	0					
ANR	521914	Callee	memset		521728	0					
ANR	521915	Identifier	memset		521728	0					
ANR	521916	ArgumentList	sorted_resources [ i ]		521728	1					
ANR	521917	Argument	sorted_resources [ i ]		521728	0					
ANR	521918	ArrayIndexing	sorted_resources [ i ]		521728	0					
ANR	521919	Identifier	sorted_resources		521728	0					
ANR	521920	Identifier	i		521728	1					
ANR	521921	Argument	0		521728	1					
ANR	521922	PrimaryExpression	0		521728	0					
ANR	521923	Argument	max_num * sizeof ( Resource * )		521728	2					
ANR	521924	MultiplicativeExpression	max_num * sizeof ( Resource * )		521728	0		*			
ANR	521925	Identifier	max_num		521728	0					
ANR	521926	SizeofExpression	sizeof ( Resource * )		521728	1					
ANR	521927	Sizeof	sizeof		521728	0					
ANR	521928	SizeofOperand	Resource *		521728	1					
ANR	521929	ExpressionStatement	cur_type_index = new int [ max_types ]	564:1:16155:16191	521728	26	True				
ANR	521930	AssignmentExpression	cur_type_index = new int [ max_types ]		521728	0		=			
ANR	521931	Identifier	cur_type_index		521728	0					
ANR	521932	Identifier	max_types		521728	1					
ANR	521933	ExpressionStatement	"memset ( cur_type_index , 0 , ( max_types * sizeof ( int ) ) )"	565:1:16194:16246	521728	27	True				
ANR	521934	CallExpression	"memset ( cur_type_index , 0 , ( max_types * sizeof ( int ) ) )"		521728	0					
ANR	521935	Callee	memset		521728	0					
ANR	521936	Identifier	memset		521728	0					
ANR	521937	ArgumentList	cur_type_index		521728	1					
ANR	521938	Argument	cur_type_index		521728	0					
ANR	521939	Identifier	cur_type_index		521728	0					
ANR	521940	Argument	0		521728	1					
ANR	521941	PrimaryExpression	0		521728	0					
ANR	521942	Argument	max_types * sizeof ( int )		521728	2					
ANR	521943	MultiplicativeExpression	max_types * sizeof ( int )		521728	0		*			
ANR	521944	Identifier	max_types		521728	0					
ANR	521945	SizeofExpression	sizeof ( int )		521728	1					
ANR	521946	Sizeof	sizeof		521728	0					
ANR	521947	SizeofOperand	int		521728	1					
ANR	521948	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		521728	28					
ANR	521949	ForInit	i = 0 ;	568:6:16305:16308	521728	0	True				
ANR	521950	AssignmentExpression	i = 0		521728	0		=			
ANR	521951	Identifier	i		521728	0					
ANR	521952	PrimaryExpression	0		521728	1					
ANR	521953	Condition	i < nresources	568:11:16310:16321	521728	1	True				
ANR	521954	RelationalExpression	i < nresources		521728	0		<			
ANR	521955	Identifier	i		521728	0					
ANR	521956	Identifier	nresources		521728	1					
ANR	521957	PostIncDecOperationExpression	i ++	568:25:16324:16326	521728	2	True				
ANR	521958	Identifier	i		521728	0					
ANR	521959	IncDec	++		521728	1					
ANR	521960	CompoundStatement		66:31:1835:1835	521728	3					
ANR	521961	ExpressionStatement	t = resources [ i ] -> type ( )	569:2:16334:16358	521728	0	True				
ANR	521962	AssignmentExpression	t = resources [ i ] -> type ( )		521728	0		=			
ANR	521963	Identifier	t		521728	0					
ANR	521964	CallExpression	resources [ i ] -> type ( )		521728	1					
ANR	521965	Callee	resources [ i ] -> type		521728	0					
ANR	521966	PtrMemberAccess	resources [ i ] -> type		521728	0					
ANR	521967	ArrayIndexing	resources [ i ]		521728	0					
ANR	521968	Identifier	resources		521728	0					
ANR	521969	Identifier	i		521728	1					
ANR	521970	Identifier	type		521728	1					
ANR	521971	ArgumentList			521728	1					
ANR	521972	ExpressionStatement	( sorted_resources [ t ] ) [ cur_type_index [ t ] ] = resources [ i ]	570:2:16362:16417	521728	1	True				
ANR	521973	AssignmentExpression	( sorted_resources [ t ] ) [ cur_type_index [ t ] ] = resources [ i ]		521728	0		=			
ANR	521974	ArrayIndexing	( sorted_resources [ t ] ) [ cur_type_index [ t ] ]		521728	0					
ANR	521975	ArrayIndexing	sorted_resources [ t ]		521728	0					
ANR	521976	Identifier	sorted_resources		521728	0					
ANR	521977	Identifier	t		521728	1					
ANR	521978	ArrayIndexing	cur_type_index [ t ]		521728	1					
ANR	521979	Identifier	cur_type_index		521728	0					
ANR	521980	Identifier	t		521728	1					
ANR	521981	ArrayIndexing	resources [ i ]		521728	1					
ANR	521982	Identifier	resources		521728	0					
ANR	521983	Identifier	i		521728	1					
ANR	521984	ExpressionStatement	cur_type_index [ t ] ++	571:2:16421:16440	521728	2	True				
ANR	521985	PostIncDecOperationExpression	cur_type_index [ t ] ++		521728	0					
ANR	521986	ArrayIndexing	cur_type_index [ t ]		521728	0					
ANR	521987	Identifier	cur_type_index		521728	0					
ANR	521988	Identifier	t		521728	1					
ANR	521989	IncDec	++		521728	1					
ANR	521990	ForStatement	for ( t = 0 ; t < max_types ; t ++ )		521728	29					
ANR	521991	ForInit	t = 0 ;	575:6:16506:16509	521728	0	True				
ANR	521992	AssignmentExpression	t = 0		521728	0		=			
ANR	521993	Identifier	t		521728	0					
ANR	521994	PrimaryExpression	0		521728	1					
ANR	521995	Condition	t < max_types	575:11:16511:16521	521728	1	True				
ANR	521996	RelationalExpression	t < max_types		521728	0		<			
ANR	521997	Identifier	t		521728	0					
ANR	521998	Identifier	max_types		521728	1					
ANR	521999	PostIncDecOperationExpression	t ++	575:24:16524:16526	521728	2	True				
ANR	522000	Identifier	t		521728	0					
ANR	522001	IncDec	++		521728	1					
ANR	522002	CompoundStatement		73:30:2035:2035	521728	3					
ANR	522003	ExpressionStatement	ASSERT ( cur_type_index [ t ] == type_nums [ t ] )	576:2:16534:16577	521728	0	True				
ANR	522004	CallExpression	ASSERT ( cur_type_index [ t ] == type_nums [ t ] )		521728	0					
ANR	522005	Callee	ASSERT		521728	0					
ANR	522006	Identifier	ASSERT		521728	0					
ANR	522007	ArgumentList	cur_type_index [ t ] == type_nums [ t ]		521728	1					
ANR	522008	Argument	cur_type_index [ t ] == type_nums [ t ]		521728	0					
ANR	522009	EqualityExpression	cur_type_index [ t ] == type_nums [ t ]		521728	0		==			
ANR	522010	ArrayIndexing	cur_type_index [ t ]		521728	0					
ANR	522011	Identifier	cur_type_index		521728	0					
ANR	522012	Identifier	t		521728	1					
ANR	522013	ArrayIndexing	type_nums [ t ]		521728	1					
ANR	522014	Identifier	type_nums		521728	0					
ANR	522015	Identifier	t		521728	1					
ANR	522016	ExpressionStatement	"qsort ( sorted_resources [ t ] , type_nums [ t ] , sizeof ( Resource * ) , & claimedRankCmp )"	577:2:16581:16665	521728	1	True				
ANR	522017	CallExpression	"qsort ( sorted_resources [ t ] , type_nums [ t ] , sizeof ( Resource * ) , & claimedRankCmp )"		521728	0					
ANR	522018	Callee	qsort		521728	0					
ANR	522019	Identifier	qsort		521728	0					
ANR	522020	ArgumentList	sorted_resources [ t ]		521728	1					
ANR	522021	Argument	sorted_resources [ t ]		521728	0					
ANR	522022	ArrayIndexing	sorted_resources [ t ]		521728	0					
ANR	522023	Identifier	sorted_resources		521728	0					
ANR	522024	Identifier	t		521728	1					
ANR	522025	Argument	type_nums [ t ]		521728	1					
ANR	522026	ArrayIndexing	type_nums [ t ]		521728	0					
ANR	522027	Identifier	type_nums		521728	0					
ANR	522028	Identifier	t		521728	1					
ANR	522029	Argument	sizeof ( Resource * )		521728	2					
ANR	522030	SizeofExpression	sizeof ( Resource * )		521728	0					
ANR	522031	Sizeof	sizeof		521728	0					
ANR	522032	SizeofOperand	Resource *		521728	1					
ANR	522033	Argument	& claimedRankCmp		521728	3					
ANR	522034	UnaryOperationExpression	& claimedRankCmp		521728	0					
ANR	522035	UnaryOperator	&		521728	0					
ANR	522036	Identifier	claimedRankCmp		521728	1					
ANR	522037	ExpressionStatement	cur = - 1	584:1:16814:16822	521728	30	True				
ANR	522038	AssignmentExpression	cur = - 1		521728	0		=			
ANR	522039	Identifier	cur		521728	0					
ANR	522040	UnaryOperationExpression	- 1		521728	1					
ANR	522041	UnaryOperator	-		521728	0					
ANR	522042	PrimaryExpression	1		521728	1					
ANR	522043	ForStatement	for ( t = 0 ; t < max_types ; t ++ )		521728	31					
ANR	522044	ForInit	t = 0 ;	585:6:16830:16833	521728	0	True				
ANR	522045	AssignmentExpression	t = 0		521728	0		=			
ANR	522046	Identifier	t		521728	0					
ANR	522047	PrimaryExpression	0		521728	1					
ANR	522048	Condition	t < max_types	585:11:16835:16845	521728	1	True				
ANR	522049	RelationalExpression	t < max_types		521728	0		<			
ANR	522050	Identifier	t		521728	0					
ANR	522051	Identifier	max_types		521728	1					
ANR	522052	PostIncDecOperationExpression	t ++	585:24:16848:16850	521728	2	True				
ANR	522053	Identifier	t		521728	0					
ANR	522054	IncDec	++		521728	1					
ANR	522055	CompoundStatement		83:30:2359:2359	521728	3					
ANR	522056	ForStatement	for ( i = 0 ; i < new_type_nums [ t ] ; i ++ )		521728	0					
ANR	522057	ForInit	i = 0 ;	586:7:16863:16866	521728	0	True				
ANR	522058	AssignmentExpression	i = 0		521728	0		=			
ANR	522059	Identifier	i		521728	0					
ANR	522060	PrimaryExpression	0		521728	1					
ANR	522061	Condition	i < new_type_nums [ t ]	586:12:16868:16885	521728	1	True				
ANR	522062	RelationalExpression	i < new_type_nums [ t ]		521728	0		<			
ANR	522063	Identifier	i		521728	0					
ANR	522064	ArrayIndexing	new_type_nums [ t ]		521728	1					
ANR	522065	Identifier	new_type_nums		521728	0					
ANR	522066	Identifier	t		521728	1					
ANR	522067	PostIncDecOperationExpression	i ++	586:32:16888:16890	521728	2	True				
ANR	522068	Identifier	i		521728	0					
ANR	522069	IncDec	++		521728	1					
ANR	522070	CompoundStatement		84:38:2399:2399	521728	3					
ANR	522071	ExpressionStatement	cur ++	587:3:16899:16904	521728	0	True				
ANR	522072	PostIncDecOperationExpression	cur ++		521728	0					
ANR	522073	Identifier	cur		521728	0					
ANR	522074	IncDec	++		521728	1					
ANR	522075	IfStatement	if ( ! ( sorted_resources [ t ] ) [ i ] )		521728	1					
ANR	522076	Condition	! ( sorted_resources [ t ] ) [ i ]	588:7:16913:16938	521728	0	True				
ANR	522077	UnaryOperationExpression	! ( sorted_resources [ t ] ) [ i ]		521728	0					
ANR	522078	UnaryOperator	!		521728	0					
ANR	522079	ArrayIndexing	( sorted_resources [ t ] ) [ i ]		521728	1					
ANR	522080	ArrayIndexing	sorted_resources [ t ]		521728	0					
ANR	522081	Identifier	sorted_resources		521728	0					
ANR	522082	Identifier	t		521728	1					
ANR	522083	Identifier	i		521728	1					
ANR	522084	CompoundStatement		86:36:2447:2447	521728	1					
ANR	522085	ExpressionStatement	alloc_list . Append ( new_cpu_attrs [ cur ] )	591:4:17046:17085	521728	0	True				
ANR	522086	CallExpression	alloc_list . Append ( new_cpu_attrs [ cur ] )		521728	0					
ANR	522087	Callee	alloc_list . Append		521728	0					
ANR	522088	MemberAccess	alloc_list . Append		521728	0					
ANR	522089	Identifier	alloc_list		521728	0					
ANR	522090	Identifier	Append		521728	1					
ANR	522091	ArgumentList	new_cpu_attrs [ cur ]		521728	1					
ANR	522092	Argument	new_cpu_attrs [ cur ]		521728	0					
ANR	522093	ArrayIndexing	new_cpu_attrs [ cur ]		521728	0					
ANR	522094	Identifier	new_cpu_attrs		521728	0					
ANR	522095	Identifier	cur		521728	1					
ANR	522096	ContinueStatement	continue ;	592:4:17091:17099	521728	1	True				
ANR	522097	IfStatement	if ( ( sorted_resources [ t ] ) [ i ] -> type ( ) == new_cpu_attrs [ cur ] -> type ( ) )		521728	2					
ANR	522098	Condition	( sorted_resources [ t ] ) [ i ] -> type ( ) == new_cpu_attrs [ cur ] -> type ( )	594:7:17113:17178	521728	0	True				
ANR	522099	EqualityExpression	( sorted_resources [ t ] ) [ i ] -> type ( ) == new_cpu_attrs [ cur ] -> type ( )		521728	0		==			
ANR	522100	CallExpression	( sorted_resources [ t ] ) [ i ] -> type ( )		521728	0					
ANR	522101	Callee	( sorted_resources [ t ] ) [ i ] -> type		521728	0					
ANR	522102	PtrMemberAccess	( sorted_resources [ t ] ) [ i ] -> type		521728	0					
ANR	522103	ArrayIndexing	( sorted_resources [ t ] ) [ i ]		521728	0					
ANR	522104	ArrayIndexing	sorted_resources [ t ]		521728	0					
ANR	522105	Identifier	sorted_resources		521728	0					
ANR	522106	Identifier	t		521728	1					
ANR	522107	Identifier	i		521728	1					
ANR	522108	Identifier	type		521728	1					
ANR	522109	ArgumentList			521728	1					
ANR	522110	CallExpression	new_cpu_attrs [ cur ] -> type ( )		521728	1					
ANR	522111	Callee	new_cpu_attrs [ cur ] -> type		521728	0					
ANR	522112	PtrMemberAccess	new_cpu_attrs [ cur ] -> type		521728	0					
ANR	522113	ArrayIndexing	new_cpu_attrs [ cur ]		521728	0					
ANR	522114	Identifier	new_cpu_attrs		521728	0					
ANR	522115	Identifier	cur		521728	1					
ANR	522116	Identifier	type		521728	1					
ANR	522117	ArgumentList			521728	1					
ANR	522118	CompoundStatement		93:33:2687:2687	521728	1					
ANR	522119	Statement	delete	598:4:17269:17274	521728	0	True				
ANR	522120	ExpressionStatement	new_cpu_attrs [ cur ]	598:11:17276:17294	521728	1	True				
ANR	522121	ArrayIndexing	new_cpu_attrs [ cur ]		521728	0					
ANR	522122	Identifier	new_cpu_attrs		521728	0					
ANR	522123	Identifier	cur		521728	1					
ANR	522124	ContinueStatement	continue ;	599:4:17300:17308	521728	2	True				
ANR	522125	ForStatement	for ( ; i < max_num ; i ++ )		521728	1					
ANR	522126	Condition	i < max_num	604:9:17453:17461	521728	0	True				
ANR	522127	RelationalExpression	i < max_num		521728	0		<			
ANR	522128	Identifier	i		521728	0					
ANR	522129	Identifier	max_num		521728	1					
ANR	522130	PostIncDecOperationExpression	i ++	604:20:17464:17466	521728	1	True				
ANR	522131	Identifier	i		521728	0					
ANR	522132	IncDec	++		521728	1					
ANR	522133	CompoundStatement		102:26:2975:2975	521728	2					
ANR	522134	IfStatement	if ( ( sorted_resources [ t ] ) [ i ] )		521728	0					
ANR	522135	Condition	( sorted_resources [ t ] ) [ i ]	605:7:17479:17502	521728	0	True				
ANR	522136	ArrayIndexing	( sorted_resources [ t ] ) [ i ]		521728	0					
ANR	522137	ArrayIndexing	sorted_resources [ t ]		521728	0					
ANR	522138	Identifier	sorted_resources		521728	0					
ANR	522139	Identifier	t		521728	1					
ANR	522140	Identifier	i		521728	1					
ANR	522141	CompoundStatement		103:34:3011:3011	521728	1					
ANR	522142	ExpressionStatement	destroy_list . Append ( ( sorted_resources [ t ] ) [ i ] )	606:4:17512:17559	521728	0	True				
ANR	522143	CallExpression	destroy_list . Append ( ( sorted_resources [ t ] ) [ i ] )		521728	0					
ANR	522144	Callee	destroy_list . Append		521728	0					
ANR	522145	MemberAccess	destroy_list . Append		521728	0					
ANR	522146	Identifier	destroy_list		521728	0					
ANR	522147	Identifier	Append		521728	1					
ANR	522148	ArgumentList	( sorted_resources [ t ] ) [ i ]		521728	1					
ANR	522149	Argument	( sorted_resources [ t ] ) [ i ]		521728	0					
ANR	522150	ArrayIndexing	( sorted_resources [ t ] ) [ i ]		521728	0					
ANR	522151	ArrayIndexing	sorted_resources [ t ]		521728	0					
ANR	522152	Identifier	sorted_resources		521728	0					
ANR	522153	Identifier	t		521728	1					
ANR	522154	Identifier	i		521728	1					
ANR	522155	ElseStatement	else		521728	0					
ANR	522156	CompoundStatement		105:10:3076:3076	521728	0					
ANR	522157	BreakStatement	break ;	608:4:17577:17582	521728	0	True				
ANR	522158	Statement	delete	620:1:17903:17908	521728	32	True				
ANR	522159	Statement	[	620:8:17910:17910	521728	33	True				
ANR	522160	Statement	]	620:9:17911:17911	521728	34	True				
ANR	522161	ExpressionStatement	new_cpu_attrs	620:11:17913:17926	521728	35	True				
ANR	522162	Identifier	new_cpu_attrs		521728	0					
ANR	522163	ForStatement	for ( i = 0 ; i < max_types ; i ++ )		521728	36					
ANR	522164	ForInit	i = 0 ;	623:6:17960:17963	521728	0	True				
ANR	522165	AssignmentExpression	i = 0		521728	0		=			
ANR	522166	Identifier	i		521728	0					
ANR	522167	PrimaryExpression	0		521728	1					
ANR	522168	Condition	i < max_types	623:11:17965:17975	521728	1	True				
ANR	522169	RelationalExpression	i < max_types		521728	0		<			
ANR	522170	Identifier	i		521728	0					
ANR	522171	Identifier	max_types		521728	1					
ANR	522172	PostIncDecOperationExpression	i ++	623:24:17978:17980	521728	2	True				
ANR	522173	Identifier	i		521728	0					
ANR	522174	IncDec	++		521728	1					
ANR	522175	CompoundStatement		121:30:3489:3489	521728	3					
ANR	522176	Statement	delete	624:2:17988:17993	521728	0	True				
ANR	522177	Statement	[	624:9:17995:17995	521728	1	True				
ANR	522178	Statement	]	624:10:17996:17996	521728	2	True				
ANR	522179	ExpressionStatement	sorted_resources [ i ]	624:12:17998:18017	521728	3	True				
ANR	522180	ArrayIndexing	sorted_resources [ i ]		521728	0					
ANR	522181	Identifier	sorted_resources		521728	0					
ANR	522182	Identifier	i		521728	1					
ANR	522183	Statement	delete	626:1:18023:18028	521728	37	True				
ANR	522184	Statement	[	626:8:18030:18030	521728	38	True				
ANR	522185	Statement	]	626:9:18031:18031	521728	39	True				
ANR	522186	ExpressionStatement	sorted_resources	626:11:18033:18049	521728	40	True				
ANR	522187	Identifier	sorted_resources		521728	0					
ANR	522188	Statement	delete	627:1:18052:18057	521728	41	True				
ANR	522189	Statement	[	627:8:18059:18059	521728	42	True				
ANR	522190	Statement	]	627:9:18060:18060	521728	43	True				
ANR	522191	ExpressionStatement	cur_type_index	627:11:18062:18076	521728	44	True				
ANR	522192	Identifier	cur_type_index		521728	0					
ANR	522193	ExpressionStatement	destroy_list . Rewind ( )	630:1:18139:18160	521728	45	True				
ANR	522194	CallExpression	destroy_list . Rewind ( )		521728	0					
ANR	522195	Callee	destroy_list . Rewind		521728	0					
ANR	522196	MemberAccess	destroy_list . Rewind		521728	0					
ANR	522197	Identifier	destroy_list		521728	0					
ANR	522198	Identifier	Rewind		521728	1					
ANR	522199	ArgumentList			521728	1					
ANR	522200	WhileStatement	while ( destroy_list . Next ( rip ) )		521728	46					
ANR	522201	Condition	destroy_list . Next ( rip )	631:8:18170:18191	521728	0	True				
ANR	522202	CallExpression	destroy_list . Next ( rip )		521728	0					
ANR	522203	Callee	destroy_list . Next		521728	0					
ANR	522204	MemberAccess	destroy_list . Next		521728	0					
ANR	522205	Identifier	destroy_list		521728	0					
ANR	522206	Identifier	Next		521728	1					
ANR	522207	ArgumentList	rip		521728	1					
ANR	522208	Argument	rip		521728	0					
ANR	522209	Identifier	rip		521728	0					
ANR	522210	CompoundStatement		129:33:3700:3700	521728	1					
ANR	522211	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""State change: resource no longer needed by configuration\\n"" )"	632:2:18199:18292	521728	0	True				
ANR	522212	CallExpression	"rip -> dprintf ( D_ALWAYS , ""State change: resource no longer needed by configuration\\n"" )"		521728	0					
ANR	522213	Callee	rip -> dprintf		521728	0					
ANR	522214	PtrMemberAccess	rip -> dprintf		521728	0					
ANR	522215	Identifier	rip		521728	0					
ANR	522216	Identifier	dprintf		521728	1					
ANR	522217	ArgumentList	D_ALWAYS		521728	1					
ANR	522218	Argument	D_ALWAYS		521728	0					
ANR	522219	Identifier	D_ALWAYS		521728	0					
ANR	522220	Argument	"""State change: resource no longer needed by configuration\\n"""		521728	1					
ANR	522221	PrimaryExpression	"""State change: resource no longer needed by configuration\\n"""		521728	0					
ANR	522222	ExpressionStatement	rip -> set_destination_state ( delete_state )	634:2:18296:18338	521728	1	True				
ANR	522223	CallExpression	rip -> set_destination_state ( delete_state )		521728	0					
ANR	522224	Callee	rip -> set_destination_state		521728	0					
ANR	522225	PtrMemberAccess	rip -> set_destination_state		521728	0					
ANR	522226	Identifier	rip		521728	0					
ANR	522227	Identifier	set_destination_state		521728	1					
ANR	522228	ArgumentList	delete_state		521728	1					
ANR	522229	Argument	delete_state		521728	0					
ANR	522230	Identifier	delete_state		521728	0					
ANR	522231	ReturnStatement	return processAllocList ( ) ;	639:1:18474:18499	521728	47	True				
ANR	522232	CallExpression	processAllocList ( )		521728	0					
ANR	522233	Callee	processAllocList		521728	0					
ANR	522234	Identifier	processAllocList		521728	0					
ANR	522235	ArgumentList			521728	1					
ANR	522236	ReturnType	bool		521728	1					
ANR	522237	Identifier	ResMgr :: reconfig_resources		521728	2					
ANR	522238	ParameterList			521728	3					
ANR	522239	CFGEntryNode	ENTRY		521728		True				
ANR	522240	CFGExitNode	EXIT		521728		True				
ANR	522241	Symbol	num_cpus		521728						
ANR	522242	Symbol	num		521728						
ANR	522243	Symbol	& new_type_nums		521728						
ANR	522244	Symbol	* * resources		521728						
ANR	522245	Symbol	alloc_list		521728						
ANR	522246	Symbol	typeNumCmp		521728						
ANR	522247	Symbol	destroy_list . Next		521728						
ANR	522248	Symbol	( sorted_resources [ t ] ) [ i ] -> type		521728						
ANR	522249	Symbol	resources [ i ] -> type		521728						
ANR	522250	Symbol	* * cur		521728						
ANR	522251	Symbol	* cur		521728						
ANR	522252	Symbol	rip		521728						
ANR	522253	Symbol	* * * sorted_resources		521728						
ANR	522254	Symbol	countTypes		521728						
ANR	522255	Symbol	buildCpuAttrs		521728						
ANR	522256	Symbol	* * i		521728						
ANR	522257	Symbol	NULL		521728						
ANR	522258	Symbol	* new_type_nums		521728						
ANR	522259	Symbol	* * new_cpu_attrs		521728						
ANR	522260	Symbol	& claimedRankCmp		521728						
ANR	522261	Symbol	* sorted_resources		521728						
ANR	522262	Symbol	nresources		521728						
ANR	522263	Symbol	* * * t		521728						
ANR	522264	Symbol	* cur_type_index		521728						
ANR	522265	Symbol	* resources		521728						
ANR	522266	Symbol	true		521728						
ANR	522267	Symbol	* type_nums		521728						
ANR	522268	Symbol	new_cpu_attrs		521728						
ANR	522269	Symbol	cur		521728						
ANR	522270	Symbol	& Resource :: reconfig		521728						
ANR	522271	Symbol	* * sorted_resources		521728						
ANR	522272	Symbol	max_types		521728						
ANR	522273	Symbol	new_cpu_attrs [ cur ] -> type		521728						
ANR	522274	Symbol	new_type_nums		521728						
ANR	522275	Symbol	* * t		521728						
ANR	522276	Symbol	cur_type_index		521728						
ANR	522277	Symbol	type_nums		521728						
ANR	522278	Symbol	delete_state		521728						
ANR	522279	Symbol	destroy_list		521728						
ANR	522280	Symbol	sorted_resources		521728						
ANR	522281	Symbol	false		521728						
ANR	522282	Symbol	D_ALWAYS		521728						
ANR	522283	Symbol	i		521728						
ANR	522284	Symbol	resources		521728						
ANR	522285	Symbol	processAllocList		521728						
ANR	522286	Symbol	* * cur_type_index		521728						
ANR	522287	Symbol	* i		521728						
ANR	522288	Symbol	t		521728						
ANR	522289	Symbol	m_hook_mgr		521728						
ANR	522290	Symbol	max_num		521728						
ANR	522291	Symbol	* t		521728						
ANR	522292	Symbol	* new_cpu_attrs		521728						
ANR	522293	Function	ResMgr :: buildCpuAttrs	643:0:18505:20513							
ANR	522294	FunctionDef	"ResMgr :: buildCpuAttrs (int total , int * type_num_array , bool except)"		522293	0					
ANR	522295	CompoundStatement		645:0:18590:20513	522293	0					
ANR	522296	IdentifierDeclStatement	"int i , j , num ;"	646:1:18593:18606	522293	0	True				
ANR	522297	IdentifierDecl	i		522293	0					
ANR	522298	IdentifierDeclType	int		522293	0					
ANR	522299	Identifier	i		522293	1					
ANR	522300	IdentifierDecl	j		522293	1					
ANR	522301	IdentifierDeclType	int		522293	0					
ANR	522302	Identifier	j		522293	1					
ANR	522303	IdentifierDecl	num		522293	2					
ANR	522304	IdentifierDeclType	int		522293	0					
ANR	522305	Identifier	num		522293	1					
ANR	522306	IdentifierDeclStatement	CpuAttributes * cap ;	647:1:18609:18627	522293	1	True				
ANR	522307	IdentifierDecl	* cap		522293	0					
ANR	522308	IdentifierDeclType	CpuAttributes *		522293	0					
ANR	522309	Identifier	cap		522293	1					
ANR	522310	IdentifierDeclStatement	CpuAttributes * * cap_array ;	648:1:18630:18655	522293	2	True				
ANR	522311	IdentifierDecl	* * cap_array		522293	0					
ANR	522312	IdentifierDeclType	CpuAttributes * *		522293	0					
ANR	522313	Identifier	cap_array		522293	1					
ANR	522314	IdentifierDeclStatement	AvailAttributes avail ( m_attr ) ;	651:1:18692:18723	522293	3	True				
ANR	522315	IdentifierDecl	avail ( m_attr )		522293	0					
ANR	522316	IdentifierDeclType	AvailAttributes		522293	0					
ANR	522317	Identifier	avail		522293	1					
ANR	522318	Identifier	m_attr		522293	2					
ANR	522319	Statement	cap_array	653:1:18727:18735	522293	4	True				
ANR	522320	Statement	=	653:11:18737:18737	522293	5	True				
ANR	522321	Statement	new	653:13:18739:18741	522293	6	True				
ANR	522322	Statement	CpuAttributes	653:17:18743:18755	522293	7	True				
ANR	522323	Statement	*	653:30:18756:18756	522293	8	True				
ANR	522324	Statement	[	653:32:18758:18758	522293	9	True				
ANR	522325	Statement	total	653:33:18759:18763	522293	10	True				
ANR	522326	Statement	]	653:38:18764:18764	522293	11	True				
ANR	522327	ExpressionStatement		653:39:18765:18765	522293	12	True				
ANR	522328	IfStatement	if ( ! cap_array )		522293	13					
ANR	522329	Condition	! cap_array	654:5:18772:18782	522293	0	True				
ANR	522330	UnaryOperationExpression	! cap_array		522293	0					
ANR	522331	UnaryOperator	!		522293	0					
ANR	522332	Identifier	cap_array		522293	1					
ANR	522333	CompoundStatement		10:19:195:195	522293	1					
ANR	522334	ExpressionStatement	"EXCEPT ( ""Out of memory!"" )"	655:2:18790:18816	522293	0	True				
ANR	522335	CallExpression	"EXCEPT ( ""Out of memory!"" )"		522293	0					
ANR	522336	Callee	EXCEPT		522293	0					
ANR	522337	Identifier	EXCEPT		522293	0					
ANR	522338	ArgumentList	"""Out of memory!"""		522293	1					
ANR	522339	Argument	"""Out of memory!"""		522293	0					
ANR	522340	PrimaryExpression	"""Out of memory!"""		522293	0					
ANR	522341	ExpressionStatement	num = 0	658:1:18823:18830	522293	14	True				
ANR	522342	AssignmentExpression	num = 0		522293	0		=			
ANR	522343	Identifier	num		522293	0					
ANR	522344	PrimaryExpression	0		522293	1					
ANR	522345	ForStatement	for ( i = 0 ; i < max_types ; i ++ )		522293	15					
ANR	522346	ForInit	i = 0 ;	659:6:18838:18841	522293	0	True				
ANR	522347	AssignmentExpression	i = 0		522293	0		=			
ANR	522348	Identifier	i		522293	0					
ANR	522349	PrimaryExpression	0		522293	1					
ANR	522350	Condition	i < max_types	659:11:18843:18853	522293	1	True				
ANR	522351	RelationalExpression	i < max_types		522293	0		<			
ANR	522352	Identifier	i		522293	0					
ANR	522353	Identifier	max_types		522293	1					
ANR	522354	PostIncDecOperationExpression	i ++	659:24:18856:18858	522293	2	True				
ANR	522355	Identifier	i		522293	0					
ANR	522356	IncDec	++		522293	1					
ANR	522357	CompoundStatement		15:30:271:271	522293	3					
ANR	522358	IfStatement	if ( type_num_array [ i ] )		522293	0					
ANR	522359	Condition	type_num_array [ i ]	660:6:18870:18886	522293	0	True				
ANR	522360	ArrayIndexing	type_num_array [ i ]		522293	0					
ANR	522361	Identifier	type_num_array		522293	0					
ANR	522362	Identifier	i		522293	1					
ANR	522363	CompoundStatement		16:26:299:299	522293	1					
ANR	522364	ForStatement	for ( j = 0 ; j < type_num_array [ i ] ; j ++ )		522293	0					
ANR	522365	ForInit	j = 0 ;	661:8:18900:18903	522293	0	True				
ANR	522366	AssignmentExpression	j = 0		522293	0		=			
ANR	522367	Identifier	j		522293	0					
ANR	522368	PrimaryExpression	0		522293	1					
ANR	522369	Condition	j < type_num_array [ i ]	661:13:18905:18923	522293	1	True				
ANR	522370	RelationalExpression	j < type_num_array [ i ]		522293	0		<			
ANR	522371	Identifier	j		522293	0					
ANR	522372	ArrayIndexing	type_num_array [ i ]		522293	1					
ANR	522373	Identifier	type_num_array		522293	0					
ANR	522374	Identifier	i		522293	1					
ANR	522375	PostIncDecOperationExpression	j ++	661:34:18926:18928	522293	2	True				
ANR	522376	Identifier	j		522293	0					
ANR	522377	IncDec	++		522293	1					
ANR	522378	CompoundStatement		17:40:341:341	522293	3					
ANR	522379	ExpressionStatement	"cap = buildSlot ( num + 1 , type_strings [ i ] , i , except )"	662:4:18938:18990	522293	0	True				
ANR	522380	AssignmentExpression	"cap = buildSlot ( num + 1 , type_strings [ i ] , i , except )"		522293	0		=			
ANR	522381	Identifier	cap		522293	0					
ANR	522382	CallExpression	"buildSlot ( num + 1 , type_strings [ i ] , i , except )"		522293	1					
ANR	522383	Callee	buildSlot		522293	0					
ANR	522384	Identifier	buildSlot		522293	0					
ANR	522385	ArgumentList	num + 1		522293	1					
ANR	522386	Argument	num + 1		522293	0					
ANR	522387	AdditiveExpression	num + 1		522293	0		+			
ANR	522388	Identifier	num		522293	0					
ANR	522389	PrimaryExpression	1		522293	1					
ANR	522390	Argument	type_strings [ i ]		522293	1					
ANR	522391	ArrayIndexing	type_strings [ i ]		522293	0					
ANR	522392	Identifier	type_strings		522293	0					
ANR	522393	Identifier	i		522293	1					
ANR	522394	Argument	i		522293	2					
ANR	522395	Identifier	i		522293	0					
ANR	522396	Argument	except		522293	3					
ANR	522397	Identifier	except		522293	0					
ANR	522398	IfStatement	if ( avail . decrement ( cap ) )		522293	1					
ANR	522399	Condition	avail . decrement ( cap )	663:8:19000:19019	522293	0	True				
ANR	522400	CallExpression	avail . decrement ( cap )		522293	0					
ANR	522401	Callee	avail . decrement		522293	0					
ANR	522402	MemberAccess	avail . decrement		522293	0					
ANR	522403	Identifier	avail		522293	0					
ANR	522404	Identifier	decrement		522293	1					
ANR	522405	ArgumentList	cap		522293	1					
ANR	522406	Argument	cap		522293	0					
ANR	522407	Identifier	cap		522293	0					
ANR	522408	CompoundStatement		19:31:432:432	522293	1					
ANR	522409	ExpressionStatement	cap_array [ num ] = cap	664:5:19030:19050	522293	0	True				
ANR	522410	AssignmentExpression	cap_array [ num ] = cap		522293	0		=			
ANR	522411	ArrayIndexing	cap_array [ num ]		522293	0					
ANR	522412	Identifier	cap_array		522293	0					
ANR	522413	Identifier	num		522293	1					
ANR	522414	Identifier	cap		522293	1					
ANR	522415	ExpressionStatement	num ++	665:5:19057:19062	522293	1	True				
ANR	522416	PostIncDecOperationExpression	num ++		522293	0					
ANR	522417	Identifier	num		522293	0					
ANR	522418	IncDec	++		522293	1					
ANR	522419	ElseStatement	else		522293	0					
ANR	522420	CompoundStatement		22:11:484:484	522293	0					
ANR	522421	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Can't allocate %s slot of type %d\\n"" , num_string ( j + 1 ) , i )"	668:5:19123:19224	522293	0	True				
ANR	522422	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Can't allocate %s slot of type %d\\n"" , num_string ( j + 1 ) , i )"		522293	0					
ANR	522423	Callee	dprintf		522293	0					
ANR	522424	Identifier	dprintf		522293	0					
ANR	522425	ArgumentList	D_ALWAYS		522293	1					
ANR	522426	Argument	D_ALWAYS		522293	0					
ANR	522427	Identifier	D_ALWAYS		522293	0					
ANR	522428	Argument	"""ERROR: Can't allocate %s slot of type %d\\n"""		522293	1					
ANR	522429	PrimaryExpression	"""ERROR: Can't allocate %s slot of type %d\\n"""		522293	0					
ANR	522430	Argument	num_string ( j + 1 )		522293	2					
ANR	522431	CallExpression	num_string ( j + 1 )		522293	0					
ANR	522432	Callee	num_string		522293	0					
ANR	522433	Identifier	num_string		522293	0					
ANR	522434	ArgumentList	j + 1		522293	1					
ANR	522435	Argument	j + 1		522293	0					
ANR	522436	AdditiveExpression	j + 1		522293	0		+			
ANR	522437	Identifier	j		522293	0					
ANR	522438	PrimaryExpression	1		522293	1					
ANR	522439	Argument	i		522293	3					
ANR	522440	Identifier	i		522293	0					
ANR	522441	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tRequesting: "" )"	671:5:19231:19281	522293	1	True				
ANR	522442	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tRequesting: "" )"		522293	0					
ANR	522443	Callee	dprintf		522293	0					
ANR	522444	Identifier	dprintf		522293	0					
ANR	522445	ArgumentList	D_ALWAYS | D_NOHEADER		522293	1					
ANR	522446	Argument	D_ALWAYS | D_NOHEADER		522293	0					
ANR	522447	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		522293	0		|			
ANR	522448	Identifier	D_ALWAYS		522293	0					
ANR	522449	Identifier	D_NOHEADER		522293	1					
ANR	522450	Argument	"""\\tRequesting: """		522293	1					
ANR	522451	PrimaryExpression	"""\\tRequesting: """		522293	0					
ANR	522452	ExpressionStatement	cap -> show_totals ( D_ALWAYS )	672:5:19288:19316	522293	2	True				
ANR	522453	CallExpression	cap -> show_totals ( D_ALWAYS )		522293	0					
ANR	522454	Callee	cap -> show_totals		522293	0					
ANR	522455	PtrMemberAccess	cap -> show_totals		522293	0					
ANR	522456	Identifier	cap		522293	0					
ANR	522457	Identifier	show_totals		522293	1					
ANR	522458	ArgumentList	D_ALWAYS		522293	1					
ANR	522459	Argument	D_ALWAYS		522293	0					
ANR	522460	Identifier	D_ALWAYS		522293	0					
ANR	522461	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tAvailable:  "" )"	673:5:19323:19373	522293	3	True				
ANR	522462	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tAvailable:  "" )"		522293	0					
ANR	522463	Callee	dprintf		522293	0					
ANR	522464	Identifier	dprintf		522293	0					
ANR	522465	ArgumentList	D_ALWAYS | D_NOHEADER		522293	1					
ANR	522466	Argument	D_ALWAYS | D_NOHEADER		522293	0					
ANR	522467	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		522293	0		|			
ANR	522468	Identifier	D_ALWAYS		522293	0					
ANR	522469	Identifier	D_NOHEADER		522293	1					
ANR	522470	Argument	"""\\tAvailable:  """		522293	1					
ANR	522471	PrimaryExpression	"""\\tAvailable:  """		522293	0					
ANR	522472	ExpressionStatement	"avail . show_totals ( D_ALWAYS , cap )"	674:5:19380:19414	522293	4	True				
ANR	522473	CallExpression	"avail . show_totals ( D_ALWAYS , cap )"		522293	0					
ANR	522474	Callee	avail . show_totals		522293	0					
ANR	522475	MemberAccess	avail . show_totals		522293	0					
ANR	522476	Identifier	avail		522293	0					
ANR	522477	Identifier	show_totals		522293	1					
ANR	522478	ArgumentList	D_ALWAYS		522293	1					
ANR	522479	Argument	D_ALWAYS		522293	0					
ANR	522480	Identifier	D_ALWAYS		522293	0					
ANR	522481	Argument	cap		522293	1					
ANR	522482	Identifier	cap		522293	0					
ANR	522483	Statement	delete	675:5:19421:19426	522293	5	True				
ANR	522484	ExpressionStatement	cap	675:12:19428:19431	522293	6	True				
ANR	522485	Identifier	cap		522293	0					
ANR	522486	IfStatement	if ( except )		522293	7					
ANR	522487	Condition	except	676:9:19474:19479	522293	0	True				
ANR	522488	Identifier	except		522293	0					
ANR	522489	CompoundStatement		32:18:892:892	522293	1					
ANR	522490	ExpressionStatement	"EXCEPT ( ""Ran out of system resources"" )"	677:6:19491:19530	522293	0	True				
ANR	522491	CallExpression	"EXCEPT ( ""Ran out of system resources"" )"		522293	0					
ANR	522492	Callee	EXCEPT		522293	0					
ANR	522493	Identifier	EXCEPT		522293	0					
ANR	522494	ArgumentList	"""Ran out of system resources"""		522293	1					
ANR	522495	Argument	"""Ran out of system resources"""		522293	0					
ANR	522496	PrimaryExpression	"""Ran out of system resources"""		522293	0					
ANR	522497	ElseStatement	else		522293	0					
ANR	522498	CompoundStatement		34:12:953:953	522293	0					
ANR	522499	ForStatement	for ( i = 0 ; i < num ; i ++ )		522293	0					
ANR	522500	ForInit	i = 0 ;	680:11:19596:19599	522293	0	True				
ANR	522501	AssignmentExpression	i = 0		522293	0		=			
ANR	522502	Identifier	i		522293	0					
ANR	522503	PrimaryExpression	0		522293	1					
ANR	522504	Condition	i < num	680:16:19601:19605	522293	1	True				
ANR	522505	RelationalExpression	i < num		522293	0		<			
ANR	522506	Identifier	i		522293	0					
ANR	522507	Identifier	num		522293	1					
ANR	522508	PostIncDecOperationExpression	i ++	680:23:19608:19610	522293	2	True				
ANR	522509	Identifier	i		522293	0					
ANR	522510	IncDec	++		522293	1					
ANR	522511	CompoundStatement		36:29:1023:1023	522293	3					
ANR	522512	Statement	delete	681:7:19623:19628	522293	0	True				
ANR	522513	ExpressionStatement	cap_array [ i ]	681:14:19630:19642	522293	1	True				
ANR	522514	ArrayIndexing	cap_array [ i ]		522293	0					
ANR	522515	Identifier	cap_array		522293	0					
ANR	522516	Identifier	i		522293	1					
ANR	522517	Statement	delete	683:6:19658:19663	522293	1	True				
ANR	522518	Statement	[	683:13:19665:19665	522293	2	True				
ANR	522519	Statement	]	683:14:19666:19666	522293	3	True				
ANR	522520	ExpressionStatement	cap_array	683:16:19668:19677	522293	4	True				
ANR	522521	Identifier	cap_array		522293	0					
ANR	522522	ReturnStatement	return NULL ;	684:6:19685:19696	522293	5	True				
ANR	522523	Identifier	NULL		522293	0					
ANR	522524	ForStatement	for ( i = 0 ; i < num ; i ++ )		522293	16					
ANR	522525	ForInit	i = 0 ;	692:6:19778:19781	522293	0	True				
ANR	522526	AssignmentExpression	i = 0		522293	0		=			
ANR	522527	Identifier	i		522293	0					
ANR	522528	PrimaryExpression	0		522293	1					
ANR	522529	Condition	i < num	692:11:19783:19787	522293	1	True				
ANR	522530	RelationalExpression	i < num		522293	0		<			
ANR	522531	Identifier	i		522293	0					
ANR	522532	Identifier	num		522293	1					
ANR	522533	PostIncDecOperationExpression	i ++	692:18:19790:19792	522293	2	True				
ANR	522534	Identifier	i		522293	0					
ANR	522535	IncDec	++		522293	1					
ANR	522536	CompoundStatement		48:24:1205:1205	522293	3					
ANR	522537	ExpressionStatement	cap = cap_array [ i ]	693:2:19800:19818	522293	0	True				
ANR	522538	AssignmentExpression	cap = cap_array [ i ]		522293	0		=			
ANR	522539	Identifier	cap		522293	0					
ANR	522540	ArrayIndexing	cap_array [ i ]		522293	1					
ANR	522541	Identifier	cap_array		522293	0					
ANR	522542	Identifier	i		522293	1					
ANR	522543	IfStatement	if ( ! avail . computeAutoShares ( cap ) )		522293	1					
ANR	522544	Condition	! avail . computeAutoShares ( cap )	694:6:19826:19854	522293	0	True				
ANR	522545	UnaryOperationExpression	! avail . computeAutoShares ( cap )		522293	0					
ANR	522546	UnaryOperator	!		522293	0					
ANR	522547	CallExpression	avail . computeAutoShares ( cap )		522293	1					
ANR	522548	Callee	avail . computeAutoShares		522293	0					
ANR	522549	MemberAccess	avail . computeAutoShares		522293	0					
ANR	522550	Identifier	avail		522293	0					
ANR	522551	Identifier	computeAutoShares		522293	1					
ANR	522552	ArgumentList	cap		522293	1					
ANR	522553	Argument	cap		522293	0					
ANR	522554	Identifier	cap		522293	0					
ANR	522555	CompoundStatement		50:38:1267:1267	522293	1					
ANR	522556	Statement	dprintf	697:3:19903:19909	522293	0	True				
ANR	522557	Statement	(	697:10:19910:19910	522293	1	True				
ANR	522558	Statement	D_ALWAYS	697:12:19912:19919	522293	2	True				
ANR	522559	Statement	","	697:20:19920:19920	522293	3	True				
ANR	522560	Statement	"""ERROR: Can't allocate slot id %d during auto """	698:6:19928:19974	522293	4	True				
ANR	522561	Statement	"""allocation of resources\\n"""	699:6:19982:20008	522293	5	True				
ANR	522562	Statement	","	699:33:20009:20009	522293	6	True				
ANR	522563	Statement	i	699:35:20011:20011	522293	7	True				
ANR	522564	Statement	+	699:36:20012:20012	522293	8	True				
ANR	522565	Statement	1	699:37:20013:20013	522293	9	True				
ANR	522566	Statement	)	699:39:20015:20015	522293	10	True				
ANR	522567	ExpressionStatement		699:40:20016:20016	522293	11	True				
ANR	522568	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tRequesting: "" )"	700:3:20021:20071	522293	12	True				
ANR	522569	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tRequesting: "" )"		522293	0					
ANR	522570	Callee	dprintf		522293	0					
ANR	522571	Identifier	dprintf		522293	0					
ANR	522572	ArgumentList	D_ALWAYS | D_NOHEADER		522293	1					
ANR	522573	Argument	D_ALWAYS | D_NOHEADER		522293	0					
ANR	522574	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		522293	0		|			
ANR	522575	Identifier	D_ALWAYS		522293	0					
ANR	522576	Identifier	D_NOHEADER		522293	1					
ANR	522577	Argument	"""\\tRequesting: """		522293	1					
ANR	522578	PrimaryExpression	"""\\tRequesting: """		522293	0					
ANR	522579	ExpressionStatement	cap -> show_totals ( D_ALWAYS )	701:3:20076:20104	522293	13	True				
ANR	522580	CallExpression	cap -> show_totals ( D_ALWAYS )		522293	0					
ANR	522581	Callee	cap -> show_totals		522293	0					
ANR	522582	PtrMemberAccess	cap -> show_totals		522293	0					
ANR	522583	Identifier	cap		522293	0					
ANR	522584	Identifier	show_totals		522293	1					
ANR	522585	ArgumentList	D_ALWAYS		522293	1					
ANR	522586	Argument	D_ALWAYS		522293	0					
ANR	522587	Identifier	D_ALWAYS		522293	0					
ANR	522588	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tAvailable:  "" )"	702:3:20109:20159	522293	14	True				
ANR	522589	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tAvailable:  "" )"		522293	0					
ANR	522590	Callee	dprintf		522293	0					
ANR	522591	Identifier	dprintf		522293	0					
ANR	522592	ArgumentList	D_ALWAYS | D_NOHEADER		522293	1					
ANR	522593	Argument	D_ALWAYS | D_NOHEADER		522293	0					
ANR	522594	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		522293	0		|			
ANR	522595	Identifier	D_ALWAYS		522293	0					
ANR	522596	Identifier	D_NOHEADER		522293	1					
ANR	522597	Argument	"""\\tAvailable:  """		522293	1					
ANR	522598	PrimaryExpression	"""\\tAvailable:  """		522293	0					
ANR	522599	ExpressionStatement	"avail . show_totals ( D_ALWAYS , cap )"	703:3:20164:20198	522293	15	True				
ANR	522600	CallExpression	"avail . show_totals ( D_ALWAYS , cap )"		522293	0					
ANR	522601	Callee	avail . show_totals		522293	0					
ANR	522602	MemberAccess	avail . show_totals		522293	0					
ANR	522603	Identifier	avail		522293	0					
ANR	522604	Identifier	show_totals		522293	1					
ANR	522605	ArgumentList	D_ALWAYS		522293	1					
ANR	522606	Argument	D_ALWAYS		522293	0					
ANR	522607	Identifier	D_ALWAYS		522293	0					
ANR	522608	Argument	cap		522293	1					
ANR	522609	Identifier	cap		522293	0					
ANR	522610	Statement	delete	704:3:20203:20208	522293	16	True				
ANR	522611	ExpressionStatement	cap	704:10:20210:20213	522293	17	True				
ANR	522612	Identifier	cap		522293	0					
ANR	522613	IfStatement	if ( except )		522293	18					
ANR	522614	Condition	except	705:7:20254:20259	522293	0	True				
ANR	522615	Identifier	except		522293	0					
ANR	522616	CompoundStatement		61:16:1672:1672	522293	1					
ANR	522617	ExpressionStatement	"EXCEPT ( ""Ran out of system resources in auto allocation"" )"	706:4:20269:20327	522293	0	True				
ANR	522618	CallExpression	"EXCEPT ( ""Ran out of system resources in auto allocation"" )"		522293	0					
ANR	522619	Callee	EXCEPT		522293	0					
ANR	522620	Identifier	EXCEPT		522293	0					
ANR	522621	ArgumentList	"""Ran out of system resources in auto allocation"""		522293	1					
ANR	522622	Argument	"""Ran out of system resources in auto allocation"""		522293	0					
ANR	522623	PrimaryExpression	"""Ran out of system resources in auto allocation"""		522293	0					
ANR	522624	ElseStatement	else		522293	0					
ANR	522625	CompoundStatement		63:10:1748:1748	522293	0					
ANR	522626	ForStatement	for ( i = 0 ; i < num ; i ++ )		522293	0					
ANR	522627	ForInit	i = 0 ;	709:9:20387:20390	522293	0	True				
ANR	522628	AssignmentExpression	i = 0		522293	0		=			
ANR	522629	Identifier	i		522293	0					
ANR	522630	PrimaryExpression	0		522293	1					
ANR	522631	Condition	i < num	709:14:20392:20396	522293	1	True				
ANR	522632	RelationalExpression	i < num		522293	0		<			
ANR	522633	Identifier	i		522293	0					
ANR	522634	Identifier	num		522293	1					
ANR	522635	PostIncDecOperationExpression	i ++	709:21:20399:20401	522293	2	True				
ANR	522636	Identifier	i		522293	0					
ANR	522637	IncDec	++		522293	1					
ANR	522638	CompoundStatement		65:27:1814:1814	522293	3					
ANR	522639	Statement	delete	710:5:20412:20417	522293	0	True				
ANR	522640	ExpressionStatement	cap_array [ i ]	710:12:20419:20431	522293	1	True				
ANR	522641	ArrayIndexing	cap_array [ i ]		522293	0					
ANR	522642	Identifier	cap_array		522293	0					
ANR	522643	Identifier	i		522293	1					
ANR	522644	Statement	delete	712:4:20443:20448	522293	1	True				
ANR	522645	Statement	[	712:11:20450:20450	522293	2	True				
ANR	522646	Statement	]	712:12:20451:20451	522293	3	True				
ANR	522647	ExpressionStatement	cap_array	712:14:20453:20462	522293	4	True				
ANR	522648	Identifier	cap_array		522293	0					
ANR	522649	ReturnStatement	return NULL ;	713:4:20468:20479	522293	5	True				
ANR	522650	Identifier	NULL		522293	0					
ANR	522651	ReturnStatement	return cap_array ;	718:1:20495:20511	522293	17	True				
ANR	522652	Identifier	cap_array		522293	0					
ANR	522653	ReturnType	CpuAttributes * *		522293	1					
ANR	522654	Identifier	ResMgr :: buildCpuAttrs		522293	2					
ANR	522655	ParameterList	"int total , int * type_num_array , bool except"		522293	3					
ANR	522656	Parameter	int total	644:23:18544:18552	522293	0	True				
ANR	522657	ParameterType	int		522293	0					
ANR	522658	Identifier	total		522293	1					
ANR	522659	Parameter	int * type_num_array	644:34:18555:18573	522293	1	True				
ANR	522660	ParameterType	int *		522293	0					
ANR	522661	Identifier	type_num_array		522293	1					
ANR	522662	Parameter	bool except	644:55:18576:18586	522293	2	True				
ANR	522663	ParameterType	bool		522293	0					
ANR	522664	Identifier	except		522293	1					
ANR	522665	CFGEntryNode	ENTRY		522293		True				
ANR	522666	CFGExitNode	EXIT		522293		True				
ANR	522667	Symbol	avail . computeAutoShares		522293						
ANR	522668	Symbol	avail		522293						
ANR	522669	Symbol	type_strings		522293						
ANR	522670	Symbol	NULL		522293						
ANR	522671	Symbol	max_types		522293						
ANR	522672	Symbol	num		522293						
ANR	522673	Symbol	cap_array		522293						
ANR	522674	Symbol	D_ALWAYS		522293						
ANR	522675	Symbol	i		522293						
ANR	522676	Symbol	* cap_array		522293						
ANR	522677	Symbol	j		522293						
ANR	522678	Symbol	avail . decrement		522293						
ANR	522679	Symbol	* type_num_array		522293						
ANR	522680	Symbol	* num		522293						
ANR	522681	Symbol	num_string		522293						
ANR	522682	Symbol	* type_strings		522293						
ANR	522683	Symbol	total		522293						
ANR	522684	Symbol	buildSlot		522293						
ANR	522685	Symbol	cap		522293						
ANR	522686	Symbol	* i		522293						
ANR	522687	Symbol	type_num_array		522293						
ANR	522688	Symbol	except		522293						
ANR	522689	Symbol	D_NOHEADER		522293						
ANR	522690	Function	_checkInvalidParam	721:0:20516:20818							
ANR	522691	FunctionDef	"_checkInvalidParam (const char * name , bool except)"		522690	0					
ANR	522692	CompoundStatement		722:52:20580:20818	522690	0					
ANR	522693	IdentifierDeclStatement	char * tmp ;	723:1:20583:20592	522690	0	True				
ANR	522694	IdentifierDecl	* tmp		522690	0					
ANR	522695	IdentifierDeclType	char *		522690	0					
ANR	522696	Identifier	tmp		522690	1					
ANR	522697	IfStatement	if ( ( tmp = param ( name ) ) )		522690	1					
ANR	522698	Condition	tmp = param ( name )	724:5:20599:20617	522690	0	True				
ANR	522699	AssignmentExpression	tmp = param ( name )		522690	0		=			
ANR	522700	Identifier	tmp		522690	0					
ANR	522701	CallExpression	param ( name )		522690	1					
ANR	522702	Callee	param		522690	0					
ANR	522703	Identifier	param		522690	0					
ANR	522704	ArgumentList	name		522690	1					
ANR	522705	Argument	name		522690	0					
ANR	522706	Identifier	name		522690	0					
ANR	522707	CompoundStatement		3:26:39:39	522690	1					
ANR	522708	IfStatement	if ( except )		522690	0					
ANR	522709	Condition	except	725:6:20628:20633	522690	0	True				
ANR	522710	Identifier	except		522690	0					
ANR	522711	CompoundStatement		4:14:55:55	522690	1					
ANR	522712	ExpressionStatement	"EXCEPT ( ""Can't define %s in the config file"" , name )"	726:3:20641:20693	522690	0	True				
ANR	522713	CallExpression	"EXCEPT ( ""Can't define %s in the config file"" , name )"		522690	0					
ANR	522714	Callee	EXCEPT		522690	0					
ANR	522715	Identifier	EXCEPT		522690	0					
ANR	522716	ArgumentList	"""Can't define %s in the config file"""		522690	1					
ANR	522717	Argument	"""Can't define %s in the config file"""		522690	0					
ANR	522718	PrimaryExpression	"""Can't define %s in the config file"""		522690	0					
ANR	522719	Argument	name		522690	1					
ANR	522720	Identifier	name		522690	0					
ANR	522721	ElseStatement	else		522690	0					
ANR	522722	CompoundStatement		6:9:123:123	522690	0					
ANR	522723	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't define %s in the config file, ignoring\\n"" , name )"	728:3:20709:20796	522690	0	True				
ANR	522724	CallExpression	"dprintf ( D_ALWAYS , ""Can't define %s in the config file, ignoring\\n"" , name )"		522690	0					
ANR	522725	Callee	dprintf		522690	0					
ANR	522726	Identifier	dprintf		522690	0					
ANR	522727	ArgumentList	D_ALWAYS		522690	1					
ANR	522728	Argument	D_ALWAYS		522690	0					
ANR	522729	Identifier	D_ALWAYS		522690	0					
ANR	522730	Argument	"""Can't define %s in the config file, ignoring\\n"""		522690	1					
ANR	522731	PrimaryExpression	"""Can't define %s in the config file, ignoring\\n"""		522690	0					
ANR	522732	Argument	name		522690	2					
ANR	522733	Identifier	name		522690	0					
ANR	522734	ExpressionStatement	free ( tmp )	732:2:20804:20813	522690	1	True				
ANR	522735	CallExpression	free ( tmp )		522690	0					
ANR	522736	Callee	free		522690	0					
ANR	522737	Identifier	free		522690	0					
ANR	522738	ArgumentList	tmp		522690	1					
ANR	522739	Argument	tmp		522690	0					
ANR	522740	Identifier	tmp		522690	0					
ANR	522741	ReturnType	static void		522690	1					
ANR	522742	Identifier	_checkInvalidParam		522690	2					
ANR	522743	ParameterList	"const char * name , bool except"		522690	3					
ANR	522744	Parameter	const char * name	722:20:20548:20563	522690	0	True				
ANR	522745	ParameterType	const char *		522690	0					
ANR	522746	Identifier	name		522690	1					
ANR	522747	Parameter	bool except	722:38:20566:20576	522690	1	True				
ANR	522748	ParameterType	bool		522690	0					
ANR	522749	Identifier	except		522690	1					
ANR	522750	CFGEntryNode	ENTRY		522690		True				
ANR	522751	CFGExitNode	EXIT		522690		True				
ANR	522752	Symbol	param		522690						
ANR	522753	Symbol	tmp		522690						
ANR	522754	Symbol	name		522690						
ANR	522755	Symbol	D_ALWAYS		522690						
ANR	522756	Symbol	except		522690						
ANR	522757	Function	ResMgr :: initTypes	736:0:20821:21632							
ANR	522758	FunctionDef	ResMgr :: initTypes (bool except)		522757	0					
ANR	522759	CompoundStatement		738:0:20859:21632	522757	0					
ANR	522760	IdentifierDeclStatement	int i ;	739:1:20862:20867	522757	0	True				
ANR	522761	IdentifierDecl	i		522757	0					
ANR	522762	IdentifierDeclType	int		522757	0					
ANR	522763	Identifier	i		522757	1					
ANR	522764	IdentifierDeclStatement	char * tmp ;	740:1:20870:20879	522757	1	True				
ANR	522765	IdentifierDecl	* tmp		522757	0					
ANR	522766	IdentifierDeclType	char *		522757	0					
ANR	522767	Identifier	tmp		522757	1					
ANR	522768	IdentifierDeclStatement	MyString buf ;	741:1:20882:20894	522757	2	True				
ANR	522769	IdentifierDecl	buf		522757	0					
ANR	522770	IdentifierDeclType	MyString		522757	0					
ANR	522771	Identifier	buf		522757	1					
ANR	522772	ExpressionStatement	"_checkInvalidParam ( ""SLOT_TYPE_0"" , except )"	743:1:20898:20939	522757	3	True				
ANR	522773	CallExpression	"_checkInvalidParam ( ""SLOT_TYPE_0"" , except )"		522757	0					
ANR	522774	Callee	_checkInvalidParam		522757	0					
ANR	522775	Identifier	_checkInvalidParam		522757	0					
ANR	522776	ArgumentList	"""SLOT_TYPE_0"""		522757	1					
ANR	522777	Argument	"""SLOT_TYPE_0"""		522757	0					
ANR	522778	PrimaryExpression	"""SLOT_TYPE_0"""		522757	0					
ANR	522779	Argument	except		522757	1					
ANR	522780	Identifier	except		522757	0					
ANR	522781	ExpressionStatement	"_checkInvalidParam ( ""VIRTUAL_MACHINE_TYPE_0"" , except )"	745:1:20953:21005	522757	4	True				
ANR	522782	CallExpression	"_checkInvalidParam ( ""VIRTUAL_MACHINE_TYPE_0"" , except )"		522757	0					
ANR	522783	Callee	_checkInvalidParam		522757	0					
ANR	522784	Identifier	_checkInvalidParam		522757	0					
ANR	522785	ArgumentList	"""VIRTUAL_MACHINE_TYPE_0"""		522757	1					
ANR	522786	Argument	"""VIRTUAL_MACHINE_TYPE_0"""		522757	0					
ANR	522787	PrimaryExpression	"""VIRTUAL_MACHINE_TYPE_0"""		522757	0					
ANR	522788	Argument	except		522757	1					
ANR	522789	Identifier	except		522757	0					
ANR	522790	IfStatement	if ( ! type_strings [ 0 ] )		522757	5					
ANR	522791	Condition	! type_strings [ 0 ]	747:5:21013:21029	522757	0	True				
ANR	522792	UnaryOperationExpression	! type_strings [ 0 ]		522757	0					
ANR	522793	UnaryOperator	!		522757	0					
ANR	522794	ArrayIndexing	type_strings [ 0 ]		522757	1					
ANR	522795	Identifier	type_strings		522757	0					
ANR	522796	PrimaryExpression	0		522757	1					
ANR	522797	CompoundStatement		10:24:172:172	522757	1					
ANR	522798	ExpressionStatement	type_strings [ 0 ] = new StringList ( )	749:2:21095:21129	522757	0	True				
ANR	522799	AssignmentExpression	type_strings [ 0 ] = new StringList ( )		522757	0		=			
ANR	522800	ArrayIndexing	type_strings [ 0 ]		522757	0					
ANR	522801	Identifier	type_strings		522757	0					
ANR	522802	PrimaryExpression	0		522757	1					
ANR	522803	UnaryExpression	new StringList ( )		522757	1					
ANR	522804	ExpressionStatement	"type_strings [ 0 ] -> initializeFromString ( ""auto"" )"	750:2:21133:21178	522757	1	True				
ANR	522805	CallExpression	"type_strings [ 0 ] -> initializeFromString ( ""auto"" )"		522757	0					
ANR	522806	Callee	type_strings [ 0 ] -> initializeFromString		522757	0					
ANR	522807	PtrMemberAccess	type_strings [ 0 ] -> initializeFromString		522757	0					
ANR	522808	ArrayIndexing	type_strings [ 0 ]		522757	0					
ANR	522809	Identifier	type_strings		522757	0					
ANR	522810	PrimaryExpression	0		522757	1					
ANR	522811	Identifier	initializeFromString		522757	1					
ANR	522812	ArgumentList	"""auto"""		522757	1					
ANR	522813	Argument	"""auto"""		522757	0					
ANR	522814	PrimaryExpression	"""auto"""		522757	0					
ANR	522815	ForStatement	for ( i = 1 ; i < max_types ; i ++ )		522757	6					
ANR	522816	ForInit	i = 1 ;	753:6:21190:21193	522757	0	True				
ANR	522817	AssignmentExpression	i = 1		522757	0		=			
ANR	522818	Identifier	i		522757	0					
ANR	522819	PrimaryExpression	1		522757	1					
ANR	522820	Condition	i < max_types	753:11:21195:21207	522757	1	True				
ANR	522821	RelationalExpression	i < max_types		522757	0		<			
ANR	522822	Identifier	i		522757	0					
ANR	522823	Identifier	max_types		522757	1					
ANR	522824	PostIncDecOperationExpression	i ++	753:26:21210:21212	522757	2	True				
ANR	522825	Identifier	i		522757	0					
ANR	522826	IncDec	++		522757	1					
ANR	522827	CompoundStatement		16:32:356:356	522757	3					
ANR	522828	IfStatement	if ( type_strings [ i ] )		522757	0					
ANR	522829	Condition	type_strings [ i ]	754:6:21224:21238	522757	0	True				
ANR	522830	ArrayIndexing	type_strings [ i ]		522757	0					
ANR	522831	Identifier	type_strings		522757	0					
ANR	522832	Identifier	i		522757	1					
ANR	522833	CompoundStatement		17:24:382:382	522757	1					
ANR	522834	ContinueStatement	continue ;	755:3:21247:21255	522757	0	True				
ANR	522835	ExpressionStatement	"buf . sprintf ( ""SLOT_TYPE_%d"" , i )"	757:2:21263:21293	522757	1	True				
ANR	522836	CallExpression	"buf . sprintf ( ""SLOT_TYPE_%d"" , i )"		522757	0					
ANR	522837	Callee	buf . sprintf		522757	0					
ANR	522838	MemberAccess	buf . sprintf		522757	0					
ANR	522839	Identifier	buf		522757	0					
ANR	522840	Identifier	sprintf		522757	1					
ANR	522841	ArgumentList	"""SLOT_TYPE_%d"""		522757	1					
ANR	522842	Argument	"""SLOT_TYPE_%d"""		522757	0					
ANR	522843	PrimaryExpression	"""SLOT_TYPE_%d"""		522757	0					
ANR	522844	Argument	i		522757	1					
ANR	522845	Identifier	i		522757	0					
ANR	522846	ExpressionStatement	tmp = param ( buf . Value ( ) )	758:2:21297:21321	522757	2	True				
ANR	522847	AssignmentExpression	tmp = param ( buf . Value ( ) )		522757	0		=			
ANR	522848	Identifier	tmp		522757	0					
ANR	522849	CallExpression	param ( buf . Value ( ) )		522757	1					
ANR	522850	Callee	param		522757	0					
ANR	522851	Identifier	param		522757	0					
ANR	522852	ArgumentList	buf . Value ( )		522757	1					
ANR	522853	Argument	buf . Value ( )		522757	0					
ANR	522854	CallExpression	buf . Value ( )		522757	0					
ANR	522855	Callee	buf . Value		522757	0					
ANR	522856	MemberAccess	buf . Value		522757	0					
ANR	522857	Identifier	buf		522757	0					
ANR	522858	Identifier	Value		522757	1					
ANR	522859	ArgumentList			522757	1					
ANR	522860	IfStatement	if ( ! tmp )		522757	3					
ANR	522861	Condition	! tmp	759:6:21329:21332	522757	0	True				
ANR	522862	UnaryOperationExpression	! tmp		522757	0					
ANR	522863	UnaryOperator	!		522757	0					
ANR	522864	Identifier	tmp		522757	1					
ANR	522865	CompoundStatement		22:12:475:475	522757	1					
ANR	522866	IfStatement	"if ( param_boolean ( ""ALLOW_VM_CRUFT"" , false ) )"		522757	0					
ANR	522867	Condition	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"	760:7:21344:21381	522757	0	True				
ANR	522868	CallExpression	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"		522757	0					
ANR	522869	Callee	param_boolean		522757	0					
ANR	522870	Identifier	param_boolean		522757	0					
ANR	522871	ArgumentList	"""ALLOW_VM_CRUFT"""		522757	1					
ANR	522872	Argument	"""ALLOW_VM_CRUFT"""		522757	0					
ANR	522873	PrimaryExpression	"""ALLOW_VM_CRUFT"""		522757	0					
ANR	522874	Argument	false		522757	1					
ANR	522875	Identifier	false		522757	0					
ANR	522876	CompoundStatement		23:47:524:524	522757	1					
ANR	522877	ExpressionStatement	"buf . sprintf ( ""VIRTUAL_MACHINE_TYPE_%d"" , i )"	761:4:21390:21431	522757	0	True				
ANR	522878	CallExpression	"buf . sprintf ( ""VIRTUAL_MACHINE_TYPE_%d"" , i )"		522757	0					
ANR	522879	Callee	buf . sprintf		522757	0					
ANR	522880	MemberAccess	buf . sprintf		522757	0					
ANR	522881	Identifier	buf		522757	0					
ANR	522882	Identifier	sprintf		522757	1					
ANR	522883	ArgumentList	"""VIRTUAL_MACHINE_TYPE_%d"""		522757	1					
ANR	522884	Argument	"""VIRTUAL_MACHINE_TYPE_%d"""		522757	0					
ANR	522885	PrimaryExpression	"""VIRTUAL_MACHINE_TYPE_%d"""		522757	0					
ANR	522886	Argument	i		522757	1					
ANR	522887	Identifier	i		522757	0					
ANR	522888	IfStatement	if ( ! ( tmp = param ( buf . Value ( ) ) ) )		522757	1					
ANR	522889	Condition	! ( tmp = param ( buf . Value ( ) ) )	762:8:21441:21467	522757	0	True				
ANR	522890	UnaryOperationExpression	! ( tmp = param ( buf . Value ( ) ) )		522757	0					
ANR	522891	UnaryOperator	!		522757	0					
ANR	522892	AssignmentExpression	tmp = param ( buf . Value ( ) )		522757	1		=			
ANR	522893	Identifier	tmp		522757	0					
ANR	522894	CallExpression	param ( buf . Value ( ) )		522757	1					
ANR	522895	Callee	param		522757	0					
ANR	522896	Identifier	param		522757	0					
ANR	522897	ArgumentList	buf . Value ( )		522757	1					
ANR	522898	Argument	buf . Value ( )		522757	0					
ANR	522899	CallExpression	buf . Value ( )		522757	0					
ANR	522900	Callee	buf . Value		522757	0					
ANR	522901	MemberAccess	buf . Value		522757	0					
ANR	522902	Identifier	buf		522757	0					
ANR	522903	Identifier	Value		522757	1					
ANR	522904	ArgumentList			522757	1					
ANR	522905	CompoundStatement		25:37:610:610	522757	1					
ANR	522906	ContinueStatement	continue ;	763:5:21477:21485	522757	0	True				
ANR	522907	ElseStatement	else		522757	0					
ANR	522908	CompoundStatement		28:10:643:643	522757	0					
ANR	522909	ContinueStatement	continue ;	766:4:21509:21517	522757	0	True				
ANR	522910	ExpressionStatement	type_strings [ i ] = new StringList ( )	769:2:21530:21564	522757	4	True				
ANR	522911	AssignmentExpression	type_strings [ i ] = new StringList ( )		522757	0		=			
ANR	522912	ArrayIndexing	type_strings [ i ]		522757	0					
ANR	522913	Identifier	type_strings		522757	0					
ANR	522914	Identifier	i		522757	1					
ANR	522915	UnaryExpression	new StringList ( )		522757	1					
ANR	522916	ExpressionStatement	type_strings [ i ] -> initializeFromString ( tmp )	770:2:21568:21612	522757	5	True				
ANR	522917	CallExpression	type_strings [ i ] -> initializeFromString ( tmp )		522757	0					
ANR	522918	Callee	type_strings [ i ] -> initializeFromString		522757	0					
ANR	522919	PtrMemberAccess	type_strings [ i ] -> initializeFromString		522757	0					
ANR	522920	ArrayIndexing	type_strings [ i ]		522757	0					
ANR	522921	Identifier	type_strings		522757	0					
ANR	522922	Identifier	i		522757	1					
ANR	522923	Identifier	initializeFromString		522757	1					
ANR	522924	ArgumentList	tmp		522757	1					
ANR	522925	Argument	tmp		522757	0					
ANR	522926	Identifier	tmp		522757	0					
ANR	522927	ExpressionStatement	free ( tmp )	771:2:21616:21627	522757	6	True				
ANR	522928	CallExpression	free ( tmp )		522757	0					
ANR	522929	Callee	free		522757	0					
ANR	522930	Identifier	free		522757	0					
ANR	522931	ArgumentList	tmp		522757	1					
ANR	522932	Argument	tmp		522757	0					
ANR	522933	Identifier	tmp		522757	0					
ANR	522934	ReturnType	void		522757	1					
ANR	522935	Identifier	ResMgr :: initTypes		522757	2					
ANR	522936	ParameterList	bool except		522757	3					
ANR	522937	Parameter	bool except	737:19:20845:20855	522757	0	True				
ANR	522938	ParameterType	bool		522757	0					
ANR	522939	Identifier	except		522757	1					
ANR	522940	CFGEntryNode	ENTRY		522757		True				
ANR	522941	CFGExitNode	EXIT		522757		True				
ANR	522942	Symbol	* type_strings		522757						
ANR	522943	Symbol	buf		522757						
ANR	522944	Symbol	type_strings		522757						
ANR	522945	Symbol	* i		522757						
ANR	522946	Symbol	param		522757						
ANR	522947	Symbol	tmp		522757						
ANR	522948	Symbol	max_types		522757						
ANR	522949	Symbol	buf . Value		522757						
ANR	522950	Symbol	false		522757						
ANR	522951	Symbol	i		522757						
ANR	522952	Symbol	except		522757						
ANR	522953	Symbol	param_boolean		522757						
ANR	522954	Function	ResMgr :: countTypes	776:0:21636:23103							
ANR	522955	FunctionDef	"ResMgr :: countTypes (int * * array_ptr , bool except)"		522954	0					
ANR	522956	CompoundStatement		778:0:21691:23103	522954	0					
ANR	522957	IdentifierDeclStatement	"int i , num = 0 , num_set = 0 ;"	779:1:21694:21717	522954	0	True				
ANR	522958	IdentifierDecl	i		522954	0					
ANR	522959	IdentifierDeclType	int		522954	0					
ANR	522960	Identifier	i		522954	1					
ANR	522961	IdentifierDecl	num = 0		522954	1					
ANR	522962	IdentifierDeclType	int		522954	0					
ANR	522963	Identifier	num		522954	1					
ANR	522964	AssignmentExpression	num = 0		522954	2		=			
ANR	522965	Identifier	num		522954	0					
ANR	522966	PrimaryExpression	0		522954	1					
ANR	522967	IdentifierDecl	num_set = 0		522954	2					
ANR	522968	IdentifierDeclType	int		522954	0					
ANR	522969	Identifier	num_set		522954	1					
ANR	522970	AssignmentExpression	num_set = 0		522954	2		=			
ANR	522971	Identifier	num_set		522954	0					
ANR	522972	PrimaryExpression	0		522954	1					
ANR	522973	IdentifierDeclStatement	MyString param_name ;	780:4:21723:21742	522954	1	True				
ANR	522974	IdentifierDecl	param_name		522954	0					
ANR	522975	IdentifierDeclType	MyString		522954	0					
ANR	522976	Identifier	param_name		522954	1					
ANR	522977	IdentifierDeclStatement	MyString cruft_name ;	781:4:21748:21767	522954	2	True				
ANR	522978	IdentifierDecl	cruft_name		522954	0					
ANR	522979	IdentifierDeclType	MyString		522954	0					
ANR	522980	Identifier	cruft_name		522954	1					
ANR	522981	IdentifierDeclStatement	int * my_type_nums = new int [ max_types ] ;	782:1:21770:21808	522954	3	True				
ANR	522982	IdentifierDecl	* my_type_nums = new int [ max_types ]		522954	0					
ANR	522983	IdentifierDeclType	int *		522954	0					
ANR	522984	Identifier	my_type_nums		522954	1					
ANR	522985	AssignmentExpression	* my_type_nums = new int [ max_types ]		522954	2		=			
ANR	522986	Identifier	max_types		522954	0					
ANR	522987	Identifier	max_types		522954	1					
ANR	522988	IfStatement	if ( ! array_ptr )		522954	4					
ANR	522989	Condition	! array_ptr	784:5:21816:21826	522954	0	True				
ANR	522990	UnaryOperationExpression	! array_ptr		522954	0					
ANR	522991	UnaryOperator	!		522954	0					
ANR	522992	Identifier	array_ptr		522954	1					
ANR	522993	CompoundStatement		7:19:138:138	522954	1					
ANR	522994	ExpressionStatement	"EXCEPT ( ""ResMgr:countTypes() called with NULL array_ptr!"" )"	785:2:21834:21893	522954	0	True				
ANR	522995	CallExpression	"EXCEPT ( ""ResMgr:countTypes() called with NULL array_ptr!"" )"		522954	0					
ANR	522996	Callee	EXCEPT		522954	0					
ANR	522997	Identifier	EXCEPT		522954	0					
ANR	522998	ArgumentList	"""ResMgr:countTypes() called with NULL array_ptr!"""		522954	1					
ANR	522999	Argument	"""ResMgr:countTypes() called with NULL array_ptr!"""		522954	0					
ANR	523000	PrimaryExpression	"""ResMgr:countTypes() called with NULL array_ptr!"""		522954	0					
ANR	523001	ExpressionStatement	"_checkInvalidParam ( ""NUM_SLOTS_TYPE_0"" , except )"	789:1:21952:21998	522954	5	True				
ANR	523002	CallExpression	"_checkInvalidParam ( ""NUM_SLOTS_TYPE_0"" , except )"		522954	0					
ANR	523003	Callee	_checkInvalidParam		522954	0					
ANR	523004	Identifier	_checkInvalidParam		522954	0					
ANR	523005	ArgumentList	"""NUM_SLOTS_TYPE_0"""		522954	1					
ANR	523006	Argument	"""NUM_SLOTS_TYPE_0"""		522954	0					
ANR	523007	PrimaryExpression	"""NUM_SLOTS_TYPE_0"""		522954	0					
ANR	523008	Argument	except		522954	1					
ANR	523009	Identifier	except		522954	0					
ANR	523010	ExpressionStatement	"_checkInvalidParam ( ""NUM_VIRTUAL_MACHINES_TYPE_0"" , except )"	791:1:22012:22069	522954	6	True				
ANR	523011	CallExpression	"_checkInvalidParam ( ""NUM_VIRTUAL_MACHINES_TYPE_0"" , except )"		522954	0					
ANR	523012	Callee	_checkInvalidParam		522954	0					
ANR	523013	Identifier	_checkInvalidParam		522954	0					
ANR	523014	ArgumentList	"""NUM_VIRTUAL_MACHINES_TYPE_0"""		522954	1					
ANR	523015	Argument	"""NUM_VIRTUAL_MACHINES_TYPE_0"""		522954	0					
ANR	523016	PrimaryExpression	"""NUM_VIRTUAL_MACHINES_TYPE_0"""		522954	0					
ANR	523017	Argument	except		522954	1					
ANR	523018	Identifier	except		522954	0					
ANR	523019	ForStatement	for ( i = 1 ; i < max_types ; i ++ )		522954	7					
ANR	523020	ForInit	i = 1 ;	793:6:22078:22081	522954	0	True				
ANR	523021	AssignmentExpression	i = 1		522954	0		=			
ANR	523022	Identifier	i		522954	0					
ANR	523023	PrimaryExpression	1		522954	1					
ANR	523024	Condition	i < max_types	793:11:22083:22093	522954	1	True				
ANR	523025	RelationalExpression	i < max_types		522954	0		<			
ANR	523026	Identifier	i		522954	0					
ANR	523027	Identifier	max_types		522954	1					
ANR	523028	PostIncDecOperationExpression	i ++	793:24:22096:22098	522954	2	True				
ANR	523029	Identifier	i		522954	0					
ANR	523030	IncDec	++		522954	1					
ANR	523031	CompoundStatement		16:30:410:410	522954	3					
ANR	523032	ExpressionStatement	"param_name . sprintf ( ""NUM_SLOTS_TYPE_%d"" , i )"	794:2:22106:22148	522954	0	True				
ANR	523033	CallExpression	"param_name . sprintf ( ""NUM_SLOTS_TYPE_%d"" , i )"		522954	0					
ANR	523034	Callee	param_name . sprintf		522954	0					
ANR	523035	MemberAccess	param_name . sprintf		522954	0					
ANR	523036	Identifier	param_name		522954	0					
ANR	523037	Identifier	sprintf		522954	1					
ANR	523038	ArgumentList	"""NUM_SLOTS_TYPE_%d"""		522954	1					
ANR	523039	Argument	"""NUM_SLOTS_TYPE_%d"""		522954	0					
ANR	523040	PrimaryExpression	"""NUM_SLOTS_TYPE_%d"""		522954	0					
ANR	523041	Argument	i		522954	1					
ANR	523042	Identifier	i		522954	0					
ANR	523043	IfStatement	"if ( param_boolean ( ""ALLOW_VM_CRUFT"" , false ) )"		522954	1					
ANR	523044	Condition	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"	795:6:22156:22193	522954	0	True				
ANR	523045	CallExpression	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"		522954	0					
ANR	523046	Callee	param_boolean		522954	0					
ANR	523047	Identifier	param_boolean		522954	0					
ANR	523048	ArgumentList	"""ALLOW_VM_CRUFT"""		522954	1					
ANR	523049	Argument	"""ALLOW_VM_CRUFT"""		522954	0					
ANR	523050	PrimaryExpression	"""ALLOW_VM_CRUFT"""		522954	0					
ANR	523051	Argument	false		522954	1					
ANR	523052	Identifier	false		522954	0					
ANR	523053	CompoundStatement		18:46:504:504	522954	1					
ANR	523054	ExpressionStatement	"cruft_name . sprintf ( ""NUM_VIRTUAL_MACHINES_TYPE_%d"" , i )"	796:3:22201:22254	522954	0	True				
ANR	523055	CallExpression	"cruft_name . sprintf ( ""NUM_VIRTUAL_MACHINES_TYPE_%d"" , i )"		522954	0					
ANR	523056	Callee	cruft_name . sprintf		522954	0					
ANR	523057	MemberAccess	cruft_name . sprintf		522954	0					
ANR	523058	Identifier	cruft_name		522954	0					
ANR	523059	Identifier	sprintf		522954	1					
ANR	523060	ArgumentList	"""NUM_VIRTUAL_MACHINES_TYPE_%d"""		522954	1					
ANR	523061	Argument	"""NUM_VIRTUAL_MACHINES_TYPE_%d"""		522954	0					
ANR	523062	PrimaryExpression	"""NUM_VIRTUAL_MACHINES_TYPE_%d"""		522954	0					
ANR	523063	Argument	i		522954	1					
ANR	523064	Identifier	i		522954	0					
ANR	523065	ExpressionStatement	"my_type_nums [ i ] = param_integer ( param_name . Value ( ) , param_integer ( cruft_name . Value ( ) , 0 ) )"	797:3:22259:22377	522954	1	True				
ANR	523066	AssignmentExpression	"my_type_nums [ i ] = param_integer ( param_name . Value ( ) , param_integer ( cruft_name . Value ( ) , 0 ) )"		522954	0		=			
ANR	523067	ArrayIndexing	my_type_nums [ i ]		522954	0					
ANR	523068	Identifier	my_type_nums		522954	0					
ANR	523069	Identifier	i		522954	1					
ANR	523070	CallExpression	"param_integer ( param_name . Value ( ) , param_integer ( cruft_name . Value ( ) , 0 ) )"		522954	1					
ANR	523071	Callee	param_integer		522954	0					
ANR	523072	Identifier	param_integer		522954	0					
ANR	523073	ArgumentList	param_name . Value ( )		522954	1					
ANR	523074	Argument	param_name . Value ( )		522954	0					
ANR	523075	CallExpression	param_name . Value ( )		522954	0					
ANR	523076	Callee	param_name . Value		522954	0					
ANR	523077	MemberAccess	param_name . Value		522954	0					
ANR	523078	Identifier	param_name		522954	0					
ANR	523079	Identifier	Value		522954	1					
ANR	523080	ArgumentList			522954	1					
ANR	523081	Argument	"param_integer ( cruft_name . Value ( ) , 0 )"		522954	1					
ANR	523082	CallExpression	"param_integer ( cruft_name . Value ( ) , 0 )"		522954	0					
ANR	523083	Callee	param_integer		522954	0					
ANR	523084	Identifier	param_integer		522954	0					
ANR	523085	ArgumentList	cruft_name . Value ( )		522954	1					
ANR	523086	Argument	cruft_name . Value ( )		522954	0					
ANR	523087	CallExpression	cruft_name . Value ( )		522954	0					
ANR	523088	Callee	cruft_name . Value		522954	0					
ANR	523089	MemberAccess	cruft_name . Value		522954	0					
ANR	523090	Identifier	cruft_name		522954	0					
ANR	523091	Identifier	Value		522954	1					
ANR	523092	ArgumentList			522954	1					
ANR	523093	Argument	0		522954	1					
ANR	523094	PrimaryExpression	0		522954	0					
ANR	523095	ElseStatement	else		522954	0					
ANR	523096	CompoundStatement		23:9:696:696	522954	0					
ANR	523097	ExpressionStatement	"my_type_nums [ i ] = param_integer ( param_name . Value ( ) , 0 )"	801:3:22393:22447	522954	0	True				
ANR	523098	AssignmentExpression	"my_type_nums [ i ] = param_integer ( param_name . Value ( ) , 0 )"		522954	0		=			
ANR	523099	ArrayIndexing	my_type_nums [ i ]		522954	0					
ANR	523100	Identifier	my_type_nums		522954	0					
ANR	523101	Identifier	i		522954	1					
ANR	523102	CallExpression	"param_integer ( param_name . Value ( ) , 0 )"		522954	1					
ANR	523103	Callee	param_integer		522954	0					
ANR	523104	Identifier	param_integer		522954	0					
ANR	523105	ArgumentList	param_name . Value ( )		522954	1					
ANR	523106	Argument	param_name . Value ( )		522954	0					
ANR	523107	CallExpression	param_name . Value ( )		522954	0					
ANR	523108	Callee	param_name . Value		522954	0					
ANR	523109	MemberAccess	param_name . Value		522954	0					
ANR	523110	Identifier	param_name		522954	0					
ANR	523111	Identifier	Value		522954	1					
ANR	523112	ArgumentList			522954	1					
ANR	523113	Argument	0		522954	1					
ANR	523114	PrimaryExpression	0		522954	0					
ANR	523115	IfStatement	if ( my_type_nums [ i ] )		522954	2					
ANR	523116	Condition	my_type_nums [ i ]	803:6:22459:22473	522954	0	True				
ANR	523117	ArrayIndexing	my_type_nums [ i ]		522954	0					
ANR	523118	Identifier	my_type_nums		522954	0					
ANR	523119	Identifier	i		522954	1					
ANR	523120	CompoundStatement		26:23:784:784	522954	1					
ANR	523121	ExpressionStatement	num_set = 1	804:3:22481:22492	522954	0	True				
ANR	523122	AssignmentExpression	num_set = 1		522954	0		=			
ANR	523123	Identifier	num_set		522954	0					
ANR	523124	PrimaryExpression	1		522954	1					
ANR	523125	ExpressionStatement	num += my_type_nums [ i ]	805:3:22497:22519	522954	1	True				
ANR	523126	AssignmentExpression	num += my_type_nums [ i ]		522954	0		+=			
ANR	523127	Identifier	num		522954	0					
ANR	523128	ArrayIndexing	my_type_nums [ i ]		522954	1					
ANR	523129	Identifier	my_type_nums		522954	0					
ANR	523130	Identifier	i		522954	1					
ANR	523131	IfStatement	if ( num_set )		522954	8					
ANR	523132	Condition	num_set	809:5:22534:22540	522954	0	True				
ANR	523133	Identifier	num_set		522954	0					
ANR	523134	CompoundStatement		32:15:852:852	522954	1					
ANR	523135	ExpressionStatement	my_type_nums [ 0 ] = 0	811:2:22594:22613	522954	0	True				
ANR	523136	AssignmentExpression	my_type_nums [ 0 ] = 0		522954	0		=			
ANR	523137	ArrayIndexing	my_type_nums [ 0 ]		522954	0					
ANR	523138	Identifier	my_type_nums		522954	0					
ANR	523139	PrimaryExpression	0		522954	1					
ANR	523140	PrimaryExpression	0		522954	1					
ANR	523141	ElseStatement	else		522954	0					
ANR	523142	CompoundStatement		35:8:931:931	522954	0					
ANR	523143	IfStatement	"if ( param_boolean ( ""ALLOW_VM_CRUFT"" , false ) )"		522954	0					
ANR	523144	Condition	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"	816:6:22790:22827	522954	0	True				
ANR	523145	CallExpression	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"		522954	0					
ANR	523146	Callee	param_boolean		522954	0					
ANR	523147	Identifier	param_boolean		522954	0					
ANR	523148	ArgumentList	"""ALLOW_VM_CRUFT"""		522954	1					
ANR	523149	Argument	"""ALLOW_VM_CRUFT"""		522954	0					
ANR	523150	PrimaryExpression	"""ALLOW_VM_CRUFT"""		522954	0					
ANR	523151	Argument	false		522954	1					
ANR	523152	Identifier	false		522954	0					
ANR	523153	CompoundStatement		39:46:1138:1138	522954	1					
ANR	523154	ExpressionStatement	"my_type_nums [ 0 ] = param_integer ( ""NUM_SLOTS"" , param_integer ( ""NUM_VIRTUAL_MACHINES"" , num_cpus ( ) ) )"	817:3:22835:22956	522954	0	True				
ANR	523155	AssignmentExpression	"my_type_nums [ 0 ] = param_integer ( ""NUM_SLOTS"" , param_integer ( ""NUM_VIRTUAL_MACHINES"" , num_cpus ( ) ) )"		522954	0		=			
ANR	523156	ArrayIndexing	my_type_nums [ 0 ]		522954	0					
ANR	523157	Identifier	my_type_nums		522954	0					
ANR	523158	PrimaryExpression	0		522954	1					
ANR	523159	CallExpression	"param_integer ( ""NUM_SLOTS"" , param_integer ( ""NUM_VIRTUAL_MACHINES"" , num_cpus ( ) ) )"		522954	1					
ANR	523160	Callee	param_integer		522954	0					
ANR	523161	Identifier	param_integer		522954	0					
ANR	523162	ArgumentList	"""NUM_SLOTS"""		522954	1					
ANR	523163	Argument	"""NUM_SLOTS"""		522954	0					
ANR	523164	PrimaryExpression	"""NUM_SLOTS"""		522954	0					
ANR	523165	Argument	"param_integer ( ""NUM_VIRTUAL_MACHINES"" , num_cpus ( ) )"		522954	1					
ANR	523166	CallExpression	"param_integer ( ""NUM_VIRTUAL_MACHINES"" , num_cpus ( ) )"		522954	0					
ANR	523167	Callee	param_integer		522954	0					
ANR	523168	Identifier	param_integer		522954	0					
ANR	523169	ArgumentList	"""NUM_VIRTUAL_MACHINES"""		522954	1					
ANR	523170	Argument	"""NUM_VIRTUAL_MACHINES"""		522954	0					
ANR	523171	PrimaryExpression	"""NUM_VIRTUAL_MACHINES"""		522954	0					
ANR	523172	Argument	num_cpus ( )		522954	1					
ANR	523173	CallExpression	num_cpus ( )		522954	0					
ANR	523174	Callee	num_cpus		522954	0					
ANR	523175	Identifier	num_cpus		522954	0					
ANR	523176	ArgumentList			522954	1					
ANR	523177	ElseStatement	else		522954	0					
ANR	523178	CompoundStatement		43:9:1275:1275	522954	0					
ANR	523179	ExpressionStatement	"my_type_nums [ 0 ] = param_integer ( ""NUM_SLOTS"" , num_cpus ( ) )"	821:3:22972:23028	522954	0	True				
ANR	523180	AssignmentExpression	"my_type_nums [ 0 ] = param_integer ( ""NUM_SLOTS"" , num_cpus ( ) )"		522954	0		=			
ANR	523181	ArrayIndexing	my_type_nums [ 0 ]		522954	0					
ANR	523182	Identifier	my_type_nums		522954	0					
ANR	523183	PrimaryExpression	0		522954	1					
ANR	523184	CallExpression	"param_integer ( ""NUM_SLOTS"" , num_cpus ( ) )"		522954	1					
ANR	523185	Callee	param_integer		522954	0					
ANR	523186	Identifier	param_integer		522954	0					
ANR	523187	ArgumentList	"""NUM_SLOTS"""		522954	1					
ANR	523188	Argument	"""NUM_SLOTS"""		522954	0					
ANR	523189	PrimaryExpression	"""NUM_SLOTS"""		522954	0					
ANR	523190	Argument	num_cpus ( )		522954	1					
ANR	523191	CallExpression	num_cpus ( )		522954	0					
ANR	523192	Callee	num_cpus		522954	0					
ANR	523193	Identifier	num_cpus		522954	0					
ANR	523194	ArgumentList			522954	1					
ANR	523195	ExpressionStatement	num = my_type_nums [ 0 ]	823:2:23036:23057	522954	1	True				
ANR	523196	AssignmentExpression	num = my_type_nums [ 0 ]		522954	0		=			
ANR	523197	Identifier	num		522954	0					
ANR	523198	ArrayIndexing	my_type_nums [ 0 ]		522954	1					
ANR	523199	Identifier	my_type_nums		522954	0					
ANR	523200	PrimaryExpression	0		522954	1					
ANR	523201	ExpressionStatement	* array_ptr = my_type_nums	825:1:23063:23088	522954	9	True				
ANR	523202	AssignmentExpression	* array_ptr = my_type_nums		522954	0		=			
ANR	523203	UnaryOperationExpression	* array_ptr		522954	0					
ANR	523204	UnaryOperator	*		522954	0					
ANR	523205	Identifier	array_ptr		522954	1					
ANR	523206	Identifier	my_type_nums		522954	1					
ANR	523207	ReturnStatement	return num ;	826:1:23091:23101	522954	10	True				
ANR	523208	Identifier	num		522954	0					
ANR	523209	ReturnType	int		522954	1					
ANR	523210	Identifier	ResMgr :: countTypes		522954	2					
ANR	523211	ParameterList	"int * * array_ptr , bool except"		522954	3					
ANR	523212	Parameter	int * * array_ptr	777:20:21660:21674	522954	0	True				
ANR	523213	ParameterType	int * *		522954	0					
ANR	523214	Identifier	array_ptr		522954	1					
ANR	523215	Parameter	bool except	777:37:21677:21687	522954	1	True				
ANR	523216	ParameterType	bool		522954	0					
ANR	523217	Identifier	except		522954	1					
ANR	523218	CFGEntryNode	ENTRY		522954		True				
ANR	523219	CFGExitNode	EXIT		522954		True				
ANR	523220	Symbol	num_cpus		522954						
ANR	523221	Symbol	max_types		522954						
ANR	523222	Symbol	* my_type_nums		522954						
ANR	523223	Symbol	num		522954						
ANR	523224	Symbol	num_set		522954						
ANR	523225	Symbol	false		522954						
ANR	523226	Symbol	i		522954						
ANR	523227	Symbol	param_boolean		522954						
ANR	523228	Symbol	my_type_nums		522954						
ANR	523229	Symbol	cruft_name		522954						
ANR	523230	Symbol	* i		522954						
ANR	523231	Symbol	except		522954						
ANR	523232	Symbol	cruft_name . Value		522954						
ANR	523233	Symbol	param_integer		522954						
ANR	523234	Symbol	* array_ptr		522954						
ANR	523235	Symbol	param_name		522954						
ANR	523236	Symbol	param_name . Value		522954						
ANR	523237	Symbol	array_ptr		522954						
ANR	523238	Function	ResMgr :: typeNumCmp	830:0:23107:23252							
ANR	523239	FunctionDef	"ResMgr :: typeNumCmp (int * a , int * b)"		523238	0					
ANR	523240	CompoundStatement		832:0:23149:23252	523238	0					
ANR	523241	IdentifierDeclStatement	int i ;	833:1:23152:23157	523238	0	True				
ANR	523242	IdentifierDecl	i		523238	0					
ANR	523243	IdentifierDeclType	int		523238	0					
ANR	523244	Identifier	i		523238	1					
ANR	523245	ForStatement	for ( i = 0 ; i < max_types ; i ++ )		523238	1					
ANR	523246	ForInit	i = 0 ;	834:6:23165:23168	523238	0	True				
ANR	523247	AssignmentExpression	i = 0		523238	0		=			
ANR	523248	Identifier	i		523238	0					
ANR	523249	PrimaryExpression	0		523238	1					
ANR	523250	Condition	i < max_types	834:11:23170:23180	523238	1	True				
ANR	523251	RelationalExpression	i < max_types		523238	0		<			
ANR	523252	Identifier	i		523238	0					
ANR	523253	Identifier	max_types		523238	1					
ANR	523254	PostIncDecOperationExpression	i ++	834:24:23183:23185	523238	2	True				
ANR	523255	Identifier	i		523238	0					
ANR	523256	IncDec	++		523238	1					
ANR	523257	CompoundStatement		3:30:39:39	523238	3					
ANR	523258	IfStatement	if ( a [ i ] != b [ i ] )		523238	0					
ANR	523259	Condition	a [ i ] != b [ i ]	835:6:23197:23208	523238	0	True				
ANR	523260	EqualityExpression	a [ i ] != b [ i ]		523238	0		!=			
ANR	523261	ArrayIndexing	a [ i ]		523238	0					
ANR	523262	Identifier	a		523238	0					
ANR	523263	Identifier	i		523238	1					
ANR	523264	ArrayIndexing	b [ i ]		523238	1					
ANR	523265	Identifier	b		523238	0					
ANR	523266	Identifier	i		523238	1					
ANR	523267	CompoundStatement		4:21:62:62	523238	1					
ANR	523268	ReturnStatement	return false ;	836:3:23217:23229	523238	0	True				
ANR	523269	Identifier	false		523238	0					
ANR	523270	ReturnStatement	return true ;	839:1:23239:23250	523238	2	True				
ANR	523271	Identifier	true		523238	0					
ANR	523272	ReturnType	bool		523238	1					
ANR	523273	Identifier	ResMgr :: typeNumCmp		523238	2					
ANR	523274	ParameterList	"int * a , int * b"		523238	3					
ANR	523275	Parameter	int * a	831:20:23132:23137	523238	0	True				
ANR	523276	ParameterType	int *		523238	0					
ANR	523277	Identifier	a		523238	1					
ANR	523278	Parameter	int * b	831:28:23140:23145	523238	1	True				
ANR	523279	ParameterType	int *		523238	0					
ANR	523280	Identifier	b		523238	1					
ANR	523281	CFGEntryNode	ENTRY		523238		True				
ANR	523282	CFGExitNode	EXIT		523238		True				
ANR	523283	Symbol	a		523238						
ANR	523284	Symbol	b		523238						
ANR	523285	Symbol	* i		523238						
ANR	523286	Symbol	max_types		523238						
ANR	523287	Symbol	false		523238						
ANR	523288	Symbol	true		523238						
ANR	523289	Symbol	i		523238						
ANR	523290	Symbol	* a		523238						
ANR	523291	Symbol	* b		523238						
ANR	523292	Function	ResMgr :: buildSlot	843:0:23256:27181							
ANR	523293	FunctionDef	"ResMgr :: buildSlot (int slot_id , StringList * list , int type , bool except)"		523292	0					
ANR	523294	CompoundStatement		845:0:23345:27181	523292	0					
ANR	523295	IdentifierDeclStatement	"char * attr , * val ;"	846:1:23348:23364	523292	0	True				
ANR	523296	IdentifierDecl	* attr		523292	0					
ANR	523297	IdentifierDeclType	char *		523292	0					
ANR	523298	Identifier	attr		523292	1					
ANR	523299	IdentifierDecl	* val		523292	1					
ANR	523300	IdentifierDeclType	char *		523292	0					
ANR	523301	Identifier	val		523292	1					
ANR	523302	IdentifierDeclStatement	"int cpus = 0 , ram = 0 ;"	847:1:23367:23384	523292	1	True				
ANR	523303	IdentifierDecl	cpus = 0		523292	0					
ANR	523304	IdentifierDeclType	int		523292	0					
ANR	523305	Identifier	cpus		523292	1					
ANR	523306	AssignmentExpression	cpus = 0		523292	2		=			
ANR	523307	Identifier	cpus		523292	0					
ANR	523308	PrimaryExpression	0		523292	1					
ANR	523309	IdentifierDecl	ram = 0		523292	1					
ANR	523310	IdentifierDeclType	int		523292	0					
ANR	523311	Identifier	ram		523292	1					
ANR	523312	AssignmentExpression	ram = 0		523292	2		=			
ANR	523313	Identifier	ram		523292	0					
ANR	523314	PrimaryExpression	0		523292	1					
ANR	523315	IdentifierDeclStatement	"float disk = 0 , swap = 0 , share ;"	848:1:23387:23414	523292	2	True				
ANR	523316	IdentifierDecl	disk = 0		523292	0					
ANR	523317	IdentifierDeclType	float		523292	0					
ANR	523318	Identifier	disk		523292	1					
ANR	523319	AssignmentExpression	disk = 0		523292	2		=			
ANR	523320	Identifier	disk		523292	0					
ANR	523321	PrimaryExpression	0		523292	1					
ANR	523322	IdentifierDecl	swap = 0		523292	1					
ANR	523323	IdentifierDeclType	float		523292	0					
ANR	523324	Identifier	swap		523292	1					
ANR	523325	AssignmentExpression	swap = 0		523292	2		=			
ANR	523326	Identifier	swap		523292	0					
ANR	523327	PrimaryExpression	0		523292	1					
ANR	523328	IdentifierDecl	share		523292	2					
ANR	523329	IdentifierDeclType	float		523292	0					
ANR	523330	Identifier	share		523292	1					
ANR	523331	IdentifierDeclStatement	float default_share = AUTO_SHARE ;	849:1:23417:23449	523292	3	True				
ANR	523332	IdentifierDecl	default_share = AUTO_SHARE		523292	0					
ANR	523333	IdentifierDeclType	float		523292	0					
ANR	523334	Identifier	default_share		523292	1					
ANR	523335	AssignmentExpression	default_share = AUTO_SHARE		523292	2		=			
ANR	523336	Identifier	AUTO_SHARE		523292	0					
ANR	523337	Identifier	AUTO_SHARE		523292	1					
ANR	523338	IdentifierDeclStatement	"MyString execute_dir , partition_id ;"	851:1:23453:23487	523292	4	True				
ANR	523339	IdentifierDecl	execute_dir		523292	0					
ANR	523340	IdentifierDeclType	MyString		523292	0					
ANR	523341	Identifier	execute_dir		523292	1					
ANR	523342	IdentifierDecl	partition_id		523292	1					
ANR	523343	IdentifierDeclType	MyString		523292	0					
ANR	523344	Identifier	partition_id		523292	1					
ANR	523345	ExpressionStatement	"GetConfigExecuteDir ( slot_id , & execute_dir , & partition_id )"	852:1:23490:23549	523292	5	True				
ANR	523346	CallExpression	"GetConfigExecuteDir ( slot_id , & execute_dir , & partition_id )"		523292	0					
ANR	523347	Callee	GetConfigExecuteDir		523292	0					
ANR	523348	Identifier	GetConfigExecuteDir		523292	0					
ANR	523349	ArgumentList	slot_id		523292	1					
ANR	523350	Argument	slot_id		523292	0					
ANR	523351	Identifier	slot_id		523292	0					
ANR	523352	Argument	& execute_dir		523292	1					
ANR	523353	UnaryOperationExpression	& execute_dir		523292	0					
ANR	523354	UnaryOperator	&		523292	0					
ANR	523355	Identifier	execute_dir		523292	1					
ANR	523356	Argument	& partition_id		523292	2					
ANR	523357	UnaryOperationExpression	& partition_id		523292	0					
ANR	523358	UnaryOperator	&		523292	0					
ANR	523359	Identifier	partition_id		523292	1					
ANR	523360	IfStatement	if ( list == NULL )		523292	6					
ANR	523361	Condition	list == NULL	854:6:23558:23569	523292	0	True				
ANR	523362	EqualityExpression	list == NULL		523292	0		==			
ANR	523363	Identifier	list		523292	0					
ANR	523364	Identifier	NULL		523292	1					
ANR	523365	CompoundStatement		10:20:226:226	523292	1					
ANR	523366	ExpressionStatement	cpus = compute_cpus ( default_share )	857:3:23629:23665	523292	0	True				
ANR	523367	AssignmentExpression	cpus = compute_cpus ( default_share )		523292	0		=			
ANR	523368	Identifier	cpus		523292	0					
ANR	523369	CallExpression	compute_cpus ( default_share )		523292	1					
ANR	523370	Callee	compute_cpus		523292	0					
ANR	523371	Identifier	compute_cpus		523292	0					
ANR	523372	ArgumentList	default_share		523292	1					
ANR	523373	Argument	default_share		523292	0					
ANR	523374	Identifier	default_share		523292	0					
ANR	523375	ExpressionStatement	ram = compute_phys_mem ( default_share )	858:3:23670:23709	523292	1	True				
ANR	523376	AssignmentExpression	ram = compute_phys_mem ( default_share )		523292	0		=			
ANR	523377	Identifier	ram		523292	0					
ANR	523378	CallExpression	compute_phys_mem ( default_share )		523292	1					
ANR	523379	Callee	compute_phys_mem		523292	0					
ANR	523380	Identifier	compute_phys_mem		523292	0					
ANR	523381	ArgumentList	default_share		523292	1					
ANR	523382	Argument	default_share		523292	0					
ANR	523383	Identifier	default_share		523292	0					
ANR	523384	ExpressionStatement	swap = default_share	859:3:23714:23734	523292	2	True				
ANR	523385	AssignmentExpression	swap = default_share		523292	0		=			
ANR	523386	Identifier	swap		523292	0					
ANR	523387	Identifier	default_share		523292	1					
ANR	523388	ExpressionStatement	disk = default_share	860:3:23739:23759	523292	3	True				
ANR	523389	AssignmentExpression	disk = default_share		523292	0		=			
ANR	523390	Identifier	disk		523292	0					
ANR	523391	Identifier	default_share		523292	1					
ANR	523392	ReturnStatement	"return new CpuAttributes ( m_attr , type , cpus , ram , swap , disk , execute_dir , partition_id ) ;"	862:3:23765:23855	523292	4	True				
ANR	523393	Expression	"m_attr , type , cpus , ram , swap , disk , execute_dir , partition_id"		523292	0					
ANR	523394	Identifier	m_attr		523292	0					
ANR	523395	Expression	"type , cpus , ram , swap , disk , execute_dir , partition_id"		523292	1					
ANR	523396	Identifier	type		523292	0					
ANR	523397	Expression	"cpus , ram , swap , disk , execute_dir , partition_id"		523292	1					
ANR	523398	Identifier	cpus		523292	0					
ANR	523399	Expression	"ram , swap , disk , execute_dir , partition_id"		523292	1					
ANR	523400	Identifier	ram		523292	0					
ANR	523401	Expression	"swap , disk , execute_dir , partition_id"		523292	1					
ANR	523402	Identifier	swap		523292	0					
ANR	523403	Expression	"disk , execute_dir , partition_id"		523292	1					
ANR	523404	Identifier	disk		523292	0					
ANR	523405	Expression	"execute_dir , partition_id"		523292	1					
ANR	523406	Identifier	execute_dir		523292	0					
ANR	523407	Identifier	partition_id		523292	1					
ANR	523408	ExpressionStatement	list -> rewind ( )	871:1:24123:24137	523292	7	True				
ANR	523409	CallExpression	list -> rewind ( )		523292	0					
ANR	523410	Callee	list -> rewind		523292	0					
ANR	523411	PtrMemberAccess	list -> rewind		523292	0					
ANR	523412	Identifier	list		523292	0					
ANR	523413	Identifier	rewind		523292	1					
ANR	523414	ArgumentList			523292	1					
ANR	523415	WhileStatement	while ( ( attr = list -> next ( ) ) )		523292	8					
ANR	523416	Condition	attr = list -> next ( )	872:8:24147:24167	523292	0	True				
ANR	523417	AssignmentExpression	attr = list -> next ( )		523292	0		=			
ANR	523418	Identifier	attr		523292	0					
ANR	523419	CallExpression	list -> next ( )		523292	1					
ANR	523420	Callee	list -> next		523292	0					
ANR	523421	PtrMemberAccess	list -> next		523292	0					
ANR	523422	Identifier	list		523292	0					
ANR	523423	Identifier	next		523292	1					
ANR	523424	ArgumentList			523292	1					
ANR	523425	CompoundStatement		28:32:825:825	523292	1					
ANR	523426	IfStatement	"if ( ! ( val = strchr ( attr , '=' ) ) )"		523292	0					
ANR	523427	Condition	"! ( val = strchr ( attr , '=' ) )"	873:6:24179:24205	523292	0	True				
ANR	523428	UnaryOperationExpression	"! ( val = strchr ( attr , '=' ) )"		523292	0					
ANR	523429	UnaryOperator	!		523292	0					
ANR	523430	AssignmentExpression	"val = strchr ( attr , '=' )"		523292	1		=			
ANR	523431	Identifier	val		523292	0					
ANR	523432	CallExpression	"strchr ( attr , '=' )"		523292	1					
ANR	523433	Callee	strchr		523292	0					
ANR	523434	Identifier	strchr		523292	0					
ANR	523435	ArgumentList	attr		523292	1					
ANR	523436	Argument	attr		523292	0					
ANR	523437	Identifier	attr		523292	0					
ANR	523438	Argument	'='		523292	1					
ANR	523439	PrimaryExpression	'='		523292	0					
ANR	523440	CompoundStatement		29:36:863:863	523292	1					
ANR	523441	ExpressionStatement	"default_share = parse_value ( attr , type , except )"	878:3:24433:24482	523292	0	True				
ANR	523442	AssignmentExpression	"default_share = parse_value ( attr , type , except )"		523292	0		=			
ANR	523443	Identifier	default_share		523292	0					
ANR	523444	CallExpression	"parse_value ( attr , type , except )"		523292	1					
ANR	523445	Callee	parse_value		523292	0					
ANR	523446	Identifier	parse_value		523292	0					
ANR	523447	ArgumentList	attr		523292	1					
ANR	523448	Argument	attr		523292	0					
ANR	523449	Identifier	attr		523292	0					
ANR	523450	Argument	type		523292	1					
ANR	523451	Identifier	type		523292	0					
ANR	523452	Argument	except		523292	2					
ANR	523453	Identifier	except		523292	0					
ANR	523454	IfStatement	if ( default_share <= 0 && ! IS_AUTO_SHARE ( default_share ) )		523292	1					
ANR	523455	Condition	default_share <= 0 && ! IS_AUTO_SHARE ( default_share )	879:7:24491:24541	523292	0	True				
ANR	523456	AndExpression	default_share <= 0 && ! IS_AUTO_SHARE ( default_share )		523292	0		&&			
ANR	523457	RelationalExpression	default_share <= 0		523292	0		<=			
ANR	523458	Identifier	default_share		523292	0					
ANR	523459	PrimaryExpression	0		523292	1					
ANR	523460	UnaryOperationExpression	! IS_AUTO_SHARE ( default_share )		523292	1					
ANR	523461	UnaryOperator	!		523292	0					
ANR	523462	CallExpression	IS_AUTO_SHARE ( default_share )		523292	1					
ANR	523463	Callee	IS_AUTO_SHARE		523292	0					
ANR	523464	Identifier	IS_AUTO_SHARE		523292	0					
ANR	523465	ArgumentList	default_share		523292	1					
ANR	523466	Argument	default_share		523292	0					
ANR	523467	Identifier	default_share		523292	0					
ANR	523468	CompoundStatement		35:61:1199:1199	523292	1					
ANR	523469	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Bad description of slot type %d: "" , type )"	880:4:24551:24627	523292	0	True				
ANR	523470	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Bad description of slot type %d: "" , type )"		523292	0					
ANR	523471	Callee	dprintf		523292	0					
ANR	523472	Identifier	dprintf		523292	0					
ANR	523473	ArgumentList	D_ALWAYS		523292	1					
ANR	523474	Argument	D_ALWAYS		523292	0					
ANR	523475	Identifier	D_ALWAYS		523292	0					
ANR	523476	Argument	"""ERROR: Bad description of slot type %d: """		523292	1					
ANR	523477	PrimaryExpression	"""ERROR: Bad description of slot type %d: """		523292	0					
ANR	523478	Argument	type		523292	2					
ANR	523479	Identifier	type		523292	0					
ANR	523480	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\""%s\\"" is invalid.\\n"" , attr )"	882:4:24633:24696	523292	1	True				
ANR	523481	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\""%s\\"" is invalid.\\n"" , attr )"		523292	0					
ANR	523482	Callee	dprintf		523292	0					
ANR	523483	Identifier	dprintf		523292	0					
ANR	523484	ArgumentList	D_ALWAYS | D_NOHEADER		523292	1					
ANR	523485	Argument	D_ALWAYS | D_NOHEADER		523292	0					
ANR	523486	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		523292	0		|			
ANR	523487	Identifier	D_ALWAYS		523292	0					
ANR	523488	Identifier	D_NOHEADER		523292	1					
ANR	523489	Argument	"""\\""%s\\"" is invalid.\\n"""		523292	1					
ANR	523490	PrimaryExpression	"""\\""%s\\"" is invalid.\\n"""		523292	0					
ANR	523491	Argument	attr		523292	2					
ANR	523492	Identifier	attr		523292	0					
ANR	523493	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tYou must specify a percentage (like \\""25%%\\""), "" )"	883:4:24702:24794	523292	2	True				
ANR	523494	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tYou must specify a percentage (like \\""25%%\\""), "" )"		523292	0					
ANR	523495	Callee	dprintf		523292	0					
ANR	523496	Identifier	dprintf		523292	0					
ANR	523497	ArgumentList	D_ALWAYS | D_NOHEADER		523292	1					
ANR	523498	Argument	D_ALWAYS | D_NOHEADER		523292	0					
ANR	523499	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		523292	0		|			
ANR	523500	Identifier	D_ALWAYS		523292	0					
ANR	523501	Identifier	D_NOHEADER		523292	1					
ANR	523502	Argument	"""\\tYou must specify a percentage (like \\""25%%\\""), """		523292	1					
ANR	523503	PrimaryExpression	"""\\tYou must specify a percentage (like \\""25%%\\""), """		523292	0					
ANR	523504	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""a fraction (like \\""1/4\\""),\\n"" )"	885:4:24800:24864	523292	3	True				
ANR	523505	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""a fraction (like \\""1/4\\""),\\n"" )"		523292	0					
ANR	523506	Callee	dprintf		523292	0					
ANR	523507	Identifier	dprintf		523292	0					
ANR	523508	ArgumentList	D_ALWAYS | D_NOHEADER		523292	1					
ANR	523509	Argument	D_ALWAYS | D_NOHEADER		523292	0					
ANR	523510	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		523292	0		|			
ANR	523511	Identifier	D_ALWAYS		523292	0					
ANR	523512	Identifier	D_NOHEADER		523292	1					
ANR	523513	Argument	"""a fraction (like \\""1/4\\""),\\n"""		523292	1					
ANR	523514	PrimaryExpression	"""a fraction (like \\""1/4\\""),\\n"""		523292	0					
ANR	523515	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tor list all attributes (like \\""c=1, r=25%%, s=25%%, d=25%%\\"").\\n"" )"	886:4:24870:24979	523292	4	True				
ANR	523516	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tor list all attributes (like \\""c=1, r=25%%, s=25%%, d=25%%\\"").\\n"" )"		523292	0					
ANR	523517	Callee	dprintf		523292	0					
ANR	523518	Identifier	dprintf		523292	0					
ANR	523519	ArgumentList	D_ALWAYS | D_NOHEADER		523292	1					
ANR	523520	Argument	D_ALWAYS | D_NOHEADER		523292	0					
ANR	523521	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		523292	0		|			
ANR	523522	Identifier	D_ALWAYS		523292	0					
ANR	523523	Identifier	D_NOHEADER		523292	1					
ANR	523524	Argument	"""\\tor list all attributes (like \\""c=1, r=25%%, s=25%%, d=25%%\\"").\\n"""		523292	1					
ANR	523525	PrimaryExpression	"""\\tor list all attributes (like \\""c=1, r=25%%, s=25%%, d=25%%\\"").\\n"""		523292	0					
ANR	523526	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tSee the manual for details.\\n"" )"	888:4:24985:25059	523292	5	True				
ANR	523527	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\tSee the manual for details.\\n"" )"		523292	0					
ANR	523528	Callee	dprintf		523292	0					
ANR	523529	Identifier	dprintf		523292	0					
ANR	523530	ArgumentList	D_ALWAYS | D_NOHEADER		523292	1					
ANR	523531	Argument	D_ALWAYS | D_NOHEADER		523292	0					
ANR	523532	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		523292	0		|			
ANR	523533	Identifier	D_ALWAYS		523292	0					
ANR	523534	Identifier	D_NOHEADER		523292	1					
ANR	523535	Argument	"""\\tSee the manual for details.\\n"""		523292	1					
ANR	523536	PrimaryExpression	"""\\tSee the manual for details.\\n"""		523292	0					
ANR	523537	IfStatement	if ( except )		523292	6					
ANR	523538	Condition	except	890:8:25069:25074	523292	0	True				
ANR	523539	Identifier	except		523292	0					
ANR	523540	CompoundStatement		46:17:1732:1732	523292	1					
ANR	523541	ExpressionStatement	DC_Exit ( 4 )	891:5:25085:25097	523292	0	True				
ANR	523542	CallExpression	DC_Exit ( 4 )		523292	0					
ANR	523543	Callee	DC_Exit		523292	0					
ANR	523544	Identifier	DC_Exit		523292	0					
ANR	523545	ArgumentList	4		523292	1					
ANR	523546	Argument	4		523292	0					
ANR	523547	PrimaryExpression	4		523292	0					
ANR	523548	ElseStatement	else		523292	0					
ANR	523549	CompoundStatement		48:11:1764:1764	523292	0					
ANR	523550	ReturnStatement	return NULL ;	893:5:25117:25128	523292	0	True				
ANR	523551	Identifier	NULL		523292	0					
ANR	523552	ContinueStatement	continue ;	896:3:25144:25152	523292	2	True				
ANR	523553	IfStatement	if ( ! val [ 1 ] )		523292	1					
ANR	523554	Condition	! val [ 1 ]	905:6:25451:25458	523292	0	True				
ANR	523555	UnaryOperationExpression	! val [ 1 ]		523292	0					
ANR	523556	UnaryOperator	!		523292	0					
ANR	523557	ArrayIndexing	val [ 1 ]		523292	1					
ANR	523558	Identifier	val		523292	0					
ANR	523559	PrimaryExpression	1		523292	1					
ANR	523560	CompoundStatement		61:17:2116:2116	523292	1					
ANR	523561	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"" , attr , type )"	906:3:25467:25575	523292	0	True				
ANR	523562	CallExpression	"dprintf ( D_ALWAYS , ""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"" , attr , type )"		523292	0					
ANR	523563	Callee	dprintf		523292	0					
ANR	523564	Identifier	dprintf		523292	0					
ANR	523565	ArgumentList	D_ALWAYS		523292	1					
ANR	523566	Argument	D_ALWAYS		523292	0					
ANR	523567	Identifier	D_ALWAYS		523292	0					
ANR	523568	Argument	"""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"""		523292	1					
ANR	523569	PrimaryExpression	"""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"""		523292	0					
ANR	523570	Argument	attr		523292	2					
ANR	523571	Identifier	attr		523292	0					
ANR	523572	Argument	type		523292	3					
ANR	523573	Identifier	type		523292	0					
ANR	523574	IfStatement	if ( except )		523292	1					
ANR	523575	Condition	except	909:7:25584:25589	523292	0	True				
ANR	523576	Identifier	except		523292	0					
ANR	523577	CompoundStatement		65:16:2247:2247	523292	1					
ANR	523578	ExpressionStatement	DC_Exit ( 4 )	910:4:25599:25611	523292	0	True				
ANR	523579	CallExpression	DC_Exit ( 4 )		523292	0					
ANR	523580	Callee	DC_Exit		523292	0					
ANR	523581	Identifier	DC_Exit		523292	0					
ANR	523582	ArgumentList	4		523292	1					
ANR	523583	Argument	4		523292	0					
ANR	523584	PrimaryExpression	4		523292	0					
ANR	523585	ElseStatement	else		523292	0					
ANR	523586	CompoundStatement		67:10:2277:2277	523292	0					
ANR	523587	ReturnStatement	return NULL ;	912:4:25629:25640	523292	0	True				
ANR	523588	Identifier	NULL		523292	0					
ANR	523589	ExpressionStatement	"share = parse_value ( & val [ 1 ] , type , except )"	915:2:25653:25697	523292	2	True				
ANR	523590	AssignmentExpression	"share = parse_value ( & val [ 1 ] , type , except )"		523292	0		=			
ANR	523591	Identifier	share		523292	0					
ANR	523592	CallExpression	"parse_value ( & val [ 1 ] , type , except )"		523292	1					
ANR	523593	Callee	parse_value		523292	0					
ANR	523594	Identifier	parse_value		523292	0					
ANR	523595	ArgumentList	& val [ 1 ]		523292	1					
ANR	523596	Argument	& val [ 1 ]		523292	0					
ANR	523597	UnaryOperationExpression	& val [ 1 ]		523292	0					
ANR	523598	UnaryOperator	&		523292	0					
ANR	523599	ArrayIndexing	val [ 1 ]		523292	1					
ANR	523600	Identifier	val		523292	0					
ANR	523601	PrimaryExpression	1		523292	1					
ANR	523602	Argument	type		523292	1					
ANR	523603	Identifier	type		523292	0					
ANR	523604	Argument	except		523292	2					
ANR	523605	Identifier	except		523292	0					
ANR	523606	IfStatement	if ( share < 0.001 )		523292	3					
ANR	523607	Condition	share < 0.001	916:6:25705:25717	523292	0	True				
ANR	523608	RelationalExpression	share < 0.001		523292	0		<			
ANR	523609	Identifier	share		523292	0					
ANR	523610	PrimaryExpression	0.001		523292	1					
ANR	523611	CompoundStatement		72:22:2375:2375	523292	1					
ANR	523612	SwitchStatement	switch ( tolower ( attr [ 0 ] ) )		523292	4					
ANR	523613	Condition	tolower ( attr [ 0 ] )	921:10:25812:25827	523292	0	True				
ANR	523614	CallExpression	tolower ( attr [ 0 ] )		523292	0					
ANR	523615	Callee	tolower		523292	0					
ANR	523616	Identifier	tolower		523292	0					
ANR	523617	ArgumentList	attr [ 0 ]		523292	1					
ANR	523618	Argument	attr [ 0 ]		523292	0					
ANR	523619	ArrayIndexing	attr [ 0 ]		523292	0					
ANR	523620	Identifier	attr		523292	0					
ANR	523621	PrimaryExpression	0		523292	1					
ANR	523622	CompoundStatement		77:29:2485:2485	523292	1					
ANR	523623	Label	case 'c' :	922:2:25835:25843	523292	0	True				
ANR	523624	ExpressionStatement	cpus = compute_cpus ( share )	923:3:25848:25876	523292	1	True				
ANR	523625	AssignmentExpression	cpus = compute_cpus ( share )		523292	0		=			
ANR	523626	Identifier	cpus		523292	0					
ANR	523627	CallExpression	compute_cpus ( share )		523292	1					
ANR	523628	Callee	compute_cpus		523292	0					
ANR	523629	Identifier	compute_cpus		523292	0					
ANR	523630	ArgumentList	share		523292	1					
ANR	523631	Argument	share		523292	0					
ANR	523632	Identifier	share		523292	0					
ANR	523633	BreakStatement	break ;	924:3:25881:25886	523292	2	True				
ANR	523634	Label	case 'r' :	925:2:25890:25898	523292	3	True				
ANR	523635	Label	case 'm' :	926:2:25902:25910	523292	4	True				
ANR	523636	ExpressionStatement	ram = compute_phys_mem ( share )	927:3:25915:25946	523292	5	True				
ANR	523637	AssignmentExpression	ram = compute_phys_mem ( share )		523292	0		=			
ANR	523638	Identifier	ram		523292	0					
ANR	523639	CallExpression	compute_phys_mem ( share )		523292	1					
ANR	523640	Callee	compute_phys_mem		523292	0					
ANR	523641	Identifier	compute_phys_mem		523292	0					
ANR	523642	ArgumentList	share		523292	1					
ANR	523643	Argument	share		523292	0					
ANR	523644	Identifier	share		523292	0					
ANR	523645	BreakStatement	break ;	928:3:25951:25956	523292	6	True				
ANR	523646	Label	case 's' :	929:2:25960:25968	523292	7	True				
ANR	523647	Label	case 'v' :	930:2:25972:25980	523292	8	True				
ANR	523648	IfStatement	if ( share > 0 || IS_AUTO_SHARE ( share ) )		523292	9					
ANR	523649	Condition	share > 0 || IS_AUTO_SHARE ( share )	931:7:25989:26021	523292	0	True				
ANR	523650	OrExpression	share > 0 || IS_AUTO_SHARE ( share )		523292	0		||			
ANR	523651	RelationalExpression	share > 0		523292	0		>			
ANR	523652	Identifier	share		523292	0					
ANR	523653	PrimaryExpression	0		523292	1					
ANR	523654	CallExpression	IS_AUTO_SHARE ( share )		523292	1					
ANR	523655	Callee	IS_AUTO_SHARE		523292	0					
ANR	523656	Identifier	IS_AUTO_SHARE		523292	0					
ANR	523657	ArgumentList	share		523292	1					
ANR	523658	Argument	share		523292	0					
ANR	523659	Identifier	share		523292	0					
ANR	523660	CompoundStatement		87:43:2679:2679	523292	1					
ANR	523661	ExpressionStatement	swap = share	932:4:26031:26043	523292	0	True				
ANR	523662	AssignmentExpression	swap = share		523292	0		=			
ANR	523663	Identifier	swap		523292	0					
ANR	523664	Identifier	share		523292	1					
ANR	523665	ElseStatement	else		523292	0					
ANR	523666	CompoundStatement		89:10:2709:2709	523292	0					
ANR	523667	ExpressionStatement	"dprintf ( D_ALWAYS , ""You must specify a percent or fraction for swap in slot type %d\\n"" , type )"	934:4:26061:26169	523292	0	True				
ANR	523668	CallExpression	"dprintf ( D_ALWAYS , ""You must specify a percent or fraction for swap in slot type %d\\n"" , type )"		523292	0					
ANR	523669	Callee	dprintf		523292	0					
ANR	523670	Identifier	dprintf		523292	0					
ANR	523671	ArgumentList	D_ALWAYS		523292	1					
ANR	523672	Argument	D_ALWAYS		523292	0					
ANR	523673	Identifier	D_ALWAYS		523292	0					
ANR	523674	Argument	"""You must specify a percent or fraction for swap in slot type %d\\n"""		523292	1					
ANR	523675	PrimaryExpression	"""You must specify a percent or fraction for swap in slot type %d\\n"""		523292	0					
ANR	523676	Argument	type		523292	2					
ANR	523677	Identifier	type		523292	0					
ANR	523678	IfStatement	if ( except )		523292	1					
ANR	523679	Condition	except	937:8:26179:26184	523292	0	True				
ANR	523680	Identifier	except		523292	0					
ANR	523681	CompoundStatement		93:17:2842:2842	523292	1					
ANR	523682	ExpressionStatement	DC_Exit ( 4 )	938:5:26195:26207	523292	0	True				
ANR	523683	CallExpression	DC_Exit ( 4 )		523292	0					
ANR	523684	Callee	DC_Exit		523292	0					
ANR	523685	Identifier	DC_Exit		523292	0					
ANR	523686	ArgumentList	4		523292	1					
ANR	523687	Argument	4		523292	0					
ANR	523688	PrimaryExpression	4		523292	0					
ANR	523689	ElseStatement	else		523292	0					
ANR	523690	CompoundStatement		95:11:2874:2874	523292	0					
ANR	523691	ReturnStatement	return NULL ;	940:5:26227:26238	523292	0	True				
ANR	523692	Identifier	NULL		523292	0					
ANR	523693	BreakStatement	break ;	943:3:26254:26259	523292	10	True				
ANR	523694	Label	case 'd' :	944:2:26263:26271	523292	11	True				
ANR	523695	IfStatement	if ( share > 0 || IS_AUTO_SHARE ( share ) )		523292	12					
ANR	523696	Condition	share > 0 || IS_AUTO_SHARE ( share )	945:7:26280:26312	523292	0	True				
ANR	523697	OrExpression	share > 0 || IS_AUTO_SHARE ( share )		523292	0		||			
ANR	523698	RelationalExpression	share > 0		523292	0		>			
ANR	523699	Identifier	share		523292	0					
ANR	523700	PrimaryExpression	0		523292	1					
ANR	523701	CallExpression	IS_AUTO_SHARE ( share )		523292	1					
ANR	523702	Callee	IS_AUTO_SHARE		523292	0					
ANR	523703	Identifier	IS_AUTO_SHARE		523292	0					
ANR	523704	ArgumentList	share		523292	1					
ANR	523705	Argument	share		523292	0					
ANR	523706	Identifier	share		523292	0					
ANR	523707	CompoundStatement		101:43:2970:2970	523292	1					
ANR	523708	ExpressionStatement	disk = share	946:4:26322:26334	523292	0	True				
ANR	523709	AssignmentExpression	disk = share		523292	0		=			
ANR	523710	Identifier	disk		523292	0					
ANR	523711	Identifier	share		523292	1					
ANR	523712	ElseStatement	else		523292	0					
ANR	523713	CompoundStatement		103:10:3000:3000	523292	0					
ANR	523714	ExpressionStatement	"dprintf ( D_ALWAYS , ""You must specify a percent or fraction for disk in slot type %d\\n"" , type )"	948:4:26352:26459	523292	0	True				
ANR	523715	CallExpression	"dprintf ( D_ALWAYS , ""You must specify a percent or fraction for disk in slot type %d\\n"" , type )"		523292	0					
ANR	523716	Callee	dprintf		523292	0					
ANR	523717	Identifier	dprintf		523292	0					
ANR	523718	ArgumentList	D_ALWAYS		523292	1					
ANR	523719	Argument	D_ALWAYS		523292	0					
ANR	523720	Identifier	D_ALWAYS		523292	0					
ANR	523721	Argument	"""You must specify a percent or fraction for disk in slot type %d\\n"""		523292	1					
ANR	523722	PrimaryExpression	"""You must specify a percent or fraction for disk in slot type %d\\n"""		523292	0					
ANR	523723	Argument	type		523292	2					
ANR	523724	Identifier	type		523292	0					
ANR	523725	IfStatement	if ( except )		523292	1					
ANR	523726	Condition	except	951:8:26469:26474	523292	0	True				
ANR	523727	Identifier	except		523292	0					
ANR	523728	CompoundStatement		107:17:3132:3132	523292	1					
ANR	523729	ExpressionStatement	DC_Exit ( 4 )	952:5:26485:26497	523292	0	True				
ANR	523730	CallExpression	DC_Exit ( 4 )		523292	0					
ANR	523731	Callee	DC_Exit		523292	0					
ANR	523732	Identifier	DC_Exit		523292	0					
ANR	523733	ArgumentList	4		523292	1					
ANR	523734	Argument	4		523292	0					
ANR	523735	PrimaryExpression	4		523292	0					
ANR	523736	ElseStatement	else		523292	0					
ANR	523737	CompoundStatement		109:11:3164:3164	523292	0					
ANR	523738	ReturnStatement	return NULL ;	954:5:26517:26528	523292	0	True				
ANR	523739	Identifier	NULL		523292	0					
ANR	523740	BreakStatement	break ;	957:3:26544:26549	523292	13	True				
ANR	523741	Label	default :	958:2:26553:26560	523292	14	True				
ANR	523742	Identifier	default		523292	0					
ANR	523743	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unknown attribute \\""%s\\"" in slot type %d\\n"" , attr , type )"	959:3:26565:26648	523292	15	True				
ANR	523744	CallExpression	"dprintf ( D_ALWAYS , ""Unknown attribute \\""%s\\"" in slot type %d\\n"" , attr , type )"		523292	0					
ANR	523745	Callee	dprintf		523292	0					
ANR	523746	Identifier	dprintf		523292	0					
ANR	523747	ArgumentList	D_ALWAYS		523292	1					
ANR	523748	Argument	D_ALWAYS		523292	0					
ANR	523749	Identifier	D_ALWAYS		523292	0					
ANR	523750	Argument	"""Unknown attribute \\""%s\\"" in slot type %d\\n"""		523292	1					
ANR	523751	PrimaryExpression	"""Unknown attribute \\""%s\\"" in slot type %d\\n"""		523292	0					
ANR	523752	Argument	attr		523292	2					
ANR	523753	Identifier	attr		523292	0					
ANR	523754	Argument	type		523292	3					
ANR	523755	Identifier	type		523292	0					
ANR	523756	IfStatement	if ( except )		523292	16					
ANR	523757	Condition	except	961:7:26657:26662	523292	0	True				
ANR	523758	Identifier	except		523292	0					
ANR	523759	CompoundStatement		117:16:3320:3320	523292	1					
ANR	523760	ExpressionStatement	DC_Exit ( 4 )	962:4:26672:26684	523292	0	True				
ANR	523761	CallExpression	DC_Exit ( 4 )		523292	0					
ANR	523762	Callee	DC_Exit		523292	0					
ANR	523763	Identifier	DC_Exit		523292	0					
ANR	523764	ArgumentList	4		523292	1					
ANR	523765	Argument	4		523292	0					
ANR	523766	PrimaryExpression	4		523292	0					
ANR	523767	ElseStatement	else		523292	0					
ANR	523768	CompoundStatement		119:10:3350:3350	523292	0					
ANR	523769	ReturnStatement	return NULL ;	964:4:26702:26713	523292	0	True				
ANR	523770	Identifier	NULL		523292	0					
ANR	523771	BreakStatement	break ;	966:3:26723:26728	523292	17	True				
ANR	523772	IfStatement	if ( ! cpus )		523292	9					
ANR	523773	Condition	! cpus	972:5:26842:26847	523292	0	True				
ANR	523774	UnaryOperationExpression	! cpus		523292	0					
ANR	523775	UnaryOperator	!		523292	0					
ANR	523776	Identifier	cpus		523292	1					
ANR	523777	CompoundStatement		128:14:3505:3505	523292	1					
ANR	523778	ExpressionStatement	cpus = compute_cpus ( default_share )	973:2:26855:26891	523292	0	True				
ANR	523779	AssignmentExpression	cpus = compute_cpus ( default_share )		523292	0		=			
ANR	523780	Identifier	cpus		523292	0					
ANR	523781	CallExpression	compute_cpus ( default_share )		523292	1					
ANR	523782	Callee	compute_cpus		523292	0					
ANR	523783	Identifier	compute_cpus		523292	0					
ANR	523784	ArgumentList	default_share		523292	1					
ANR	523785	Argument	default_share		523292	0					
ANR	523786	Identifier	default_share		523292	0					
ANR	523787	IfStatement	if ( ! ram )		523292	10					
ANR	523788	Condition	! ram	975:5:26901:26905	523292	0	True				
ANR	523789	UnaryOperationExpression	! ram		523292	0					
ANR	523790	UnaryOperator	!		523292	0					
ANR	523791	Identifier	ram		523292	1					
ANR	523792	CompoundStatement		131:13:3563:3563	523292	1					
ANR	523793	ExpressionStatement	ram = compute_phys_mem ( default_share )	976:2:26913:26952	523292	0	True				
ANR	523794	AssignmentExpression	ram = compute_phys_mem ( default_share )		523292	0		=			
ANR	523795	Identifier	ram		523292	0					
ANR	523796	CallExpression	compute_phys_mem ( default_share )		523292	1					
ANR	523797	Callee	compute_phys_mem		523292	0					
ANR	523798	Identifier	compute_phys_mem		523292	0					
ANR	523799	ArgumentList	default_share		523292	1					
ANR	523800	Argument	default_share		523292	0					
ANR	523801	Identifier	default_share		523292	0					
ANR	523802	IfStatement	if ( swap <= 0.0001 )		523292	11					
ANR	523803	Condition	swap <= 0.0001	978:5:26962:26975	523292	0	True				
ANR	523804	RelationalExpression	swap <= 0.0001		523292	0		<=			
ANR	523805	Identifier	swap		523292	0					
ANR	523806	PrimaryExpression	0.0001		523292	1					
ANR	523807	CompoundStatement		134:22:3633:3633	523292	1					
ANR	523808	ExpressionStatement	swap = default_share	979:2:26983:27003	523292	0	True				
ANR	523809	AssignmentExpression	swap = default_share		523292	0		=			
ANR	523810	Identifier	swap		523292	0					
ANR	523811	Identifier	default_share		523292	1					
ANR	523812	IfStatement	if ( disk <= 0.0001 )		523292	12					
ANR	523813	Condition	disk <= 0.0001	981:5:27013:27026	523292	0	True				
ANR	523814	RelationalExpression	disk <= 0.0001		523292	0		<=			
ANR	523815	Identifier	disk		523292	0					
ANR	523816	PrimaryExpression	0.0001		523292	1					
ANR	523817	CompoundStatement		137:22:3684:3684	523292	1					
ANR	523818	ExpressionStatement	disk = default_share	982:2:27034:27054	523292	0	True				
ANR	523819	AssignmentExpression	disk = default_share		523292	0		=			
ANR	523820	Identifier	disk		523292	0					
ANR	523821	Identifier	default_share		523292	1					
ANR	523822	ReturnStatement	"return new CpuAttributes ( m_attr , type , cpus , ram , swap , disk , execute_dir , partition_id ) ;"	986:1:27089:27179	523292	13	True				
ANR	523823	Expression	"m_attr , type , cpus , ram , swap , disk , execute_dir , partition_id"		523292	0					
ANR	523824	Identifier	m_attr		523292	0					
ANR	523825	Expression	"type , cpus , ram , swap , disk , execute_dir , partition_id"		523292	1					
ANR	523826	Identifier	type		523292	0					
ANR	523827	Expression	"cpus , ram , swap , disk , execute_dir , partition_id"		523292	1					
ANR	523828	Identifier	cpus		523292	0					
ANR	523829	Expression	"ram , swap , disk , execute_dir , partition_id"		523292	1					
ANR	523830	Identifier	ram		523292	0					
ANR	523831	Expression	"swap , disk , execute_dir , partition_id"		523292	1					
ANR	523832	Identifier	swap		523292	0					
ANR	523833	Expression	"disk , execute_dir , partition_id"		523292	1					
ANR	523834	Identifier	disk		523292	0					
ANR	523835	Expression	"execute_dir , partition_id"		523292	1					
ANR	523836	Identifier	execute_dir		523292	0					
ANR	523837	Identifier	partition_id		523292	1					
ANR	523838	ReturnType	CpuAttributes *		523292	1					
ANR	523839	Identifier	ResMgr :: buildSlot		523292	2					
ANR	523840	ParameterList	"int slot_id , StringList * list , int type , bool except"		523292	3					
ANR	523841	Parameter	int slot_id	844:19:23290:23300	523292	0	True				
ANR	523842	ParameterType	int		523292	0					
ANR	523843	Identifier	slot_id		523292	1					
ANR	523844	Parameter	StringList * list	844:32:23303:23318	523292	1	True				
ANR	523845	ParameterType	StringList *		523292	0					
ANR	523846	Identifier	list		523292	1					
ANR	523847	Parameter	int type	844:50:23321:23328	523292	2	True				
ANR	523848	ParameterType	int		523292	0					
ANR	523849	Identifier	type		523292	1					
ANR	523850	Parameter	bool except	844:60:23331:23341	523292	3	True				
ANR	523851	ParameterType	bool		523292	0					
ANR	523852	Identifier	except		523292	1					
ANR	523853	CFGEntryNode	ENTRY		523292		True				
ANR	523854	CFGExitNode	EXIT		523292		True				
ANR	523855	Symbol	compute_cpus		523292						
ANR	523856	Symbol	& execute_dir		523292						
ANR	523857	Symbol	& partition_id		523292						
ANR	523858	Symbol	tolower		523292						
ANR	523859	Symbol	parse_value		523292						
ANR	523860	Symbol	strchr		523292						
ANR	523861	Symbol	* val		523292						
ANR	523862	Symbol	type		523292						
ANR	523863	Symbol	partition_id		523292						
ANR	523864	Symbol	default_share		523292						
ANR	523865	Symbol	IS_AUTO_SHARE		523292						
ANR	523866	Symbol	share		523292						
ANR	523867	Symbol	attr		523292						
ANR	523868	Symbol	ram		523292						
ANR	523869	Symbol	val		523292						
ANR	523870	Symbol	list -> next		523292						
ANR	523871	Symbol	execute_dir		523292						
ANR	523872	Symbol	NULL		523292						
ANR	523873	Symbol	cpus		523292						
ANR	523874	Symbol	swap		523292						
ANR	523875	Symbol	D_ALWAYS		523292						
ANR	523876	Symbol	m_attr		523292						
ANR	523877	Symbol	list		523292						
ANR	523878	Symbol	disk		523292						
ANR	523879	Symbol	AUTO_SHARE		523292						
ANR	523880	Symbol	compute_phys_mem		523292						
ANR	523881	Symbol	* list		523292						
ANR	523882	Symbol	slot_id		523292						
ANR	523883	Symbol	except		523292						
ANR	523884	Symbol	* attr		523292						
ANR	523885	Symbol	D_NOHEADER		523292						
ANR	523886	Function	ResMgr :: GetConfigExecuteDir	989:0:27184:28270							
ANR	523887	FunctionDef	"ResMgr :: GetConfigExecuteDir (int slot_id , MyString * execute_dir , MyString * partition_id)"		523886	0					
ANR	523888	CompoundStatement		991:0:27279:28270	523886	0					
ANR	523889	IdentifierDeclStatement	MyString execute_param ;	992:1:27282:27304	523886	0	True				
ANR	523890	IdentifierDecl	execute_param		523886	0					
ANR	523891	IdentifierDeclType	MyString		523886	0					
ANR	523892	Identifier	execute_param		523886	1					
ANR	523893	IdentifierDeclStatement	char * execute_value = NULL ;	993:1:27307:27333	523886	1	True				
ANR	523894	IdentifierDecl	* execute_value = NULL		523886	0					
ANR	523895	IdentifierDeclType	char *		523886	0					
ANR	523896	Identifier	execute_value		523886	1					
ANR	523897	AssignmentExpression	* execute_value = NULL		523886	2		=			
ANR	523898	Identifier	NULL		523886	0					
ANR	523899	Identifier	NULL		523886	1					
ANR	523900	ExpressionStatement	"execute_param . sprintf ( ""SLOT%d_EXECUTE"" , slot_id )"	994:1:27336:27383	523886	2	True				
ANR	523901	CallExpression	"execute_param . sprintf ( ""SLOT%d_EXECUTE"" , slot_id )"		523886	0					
ANR	523902	Callee	execute_param . sprintf		523886	0					
ANR	523903	MemberAccess	execute_param . sprintf		523886	0					
ANR	523904	Identifier	execute_param		523886	0					
ANR	523905	Identifier	sprintf		523886	1					
ANR	523906	ArgumentList	"""SLOT%d_EXECUTE"""		523886	1					
ANR	523907	Argument	"""SLOT%d_EXECUTE"""		523886	0					
ANR	523908	PrimaryExpression	"""SLOT%d_EXECUTE"""		523886	0					
ANR	523909	Argument	slot_id		523886	1					
ANR	523910	Identifier	slot_id		523886	0					
ANR	523911	ExpressionStatement	execute_value = param ( execute_param . Value ( ) )	995:1:27386:27432	523886	3	True				
ANR	523912	AssignmentExpression	execute_value = param ( execute_param . Value ( ) )		523886	0		=			
ANR	523913	Identifier	execute_value		523886	0					
ANR	523914	CallExpression	param ( execute_param . Value ( ) )		523886	1					
ANR	523915	Callee	param		523886	0					
ANR	523916	Identifier	param		523886	0					
ANR	523917	ArgumentList	execute_param . Value ( )		523886	1					
ANR	523918	Argument	execute_param . Value ( )		523886	0					
ANR	523919	CallExpression	execute_param . Value ( )		523886	0					
ANR	523920	Callee	execute_param . Value		523886	0					
ANR	523921	MemberAccess	execute_param . Value		523886	0					
ANR	523922	Identifier	execute_param		523886	0					
ANR	523923	Identifier	Value		523886	1					
ANR	523924	ArgumentList			523886	1					
ANR	523925	IfStatement	if ( ! execute_value )		523886	4					
ANR	523926	Condition	! execute_value	996:5:27439:27452	523886	0	True				
ANR	523927	UnaryOperationExpression	! execute_value		523886	0					
ANR	523928	UnaryOperator	!		523886	0					
ANR	523929	Identifier	execute_value		523886	1					
ANR	523930	CompoundStatement		6:22:176:176	523886	1					
ANR	523931	ExpressionStatement	"execute_value = param ( ""EXECUTE"" )"	997:2:27460:27494	523886	0	True				
ANR	523932	AssignmentExpression	"execute_value = param ( ""EXECUTE"" )"		523886	0		=			
ANR	523933	Identifier	execute_value		523886	0					
ANR	523934	CallExpression	"param ( ""EXECUTE"" )"		523886	1					
ANR	523935	Callee	param		523886	0					
ANR	523936	Identifier	param		523886	0					
ANR	523937	ArgumentList	"""EXECUTE"""		523886	1					
ANR	523938	Argument	"""EXECUTE"""		523886	0					
ANR	523939	PrimaryExpression	"""EXECUTE"""		523886	0					
ANR	523940	IfStatement	if ( ! execute_value )		523886	5					
ANR	523941	Condition	! execute_value	999:5:27504:27517	523886	0	True				
ANR	523942	UnaryOperationExpression	! execute_value		523886	0					
ANR	523943	UnaryOperator	!		523886	0					
ANR	523944	Identifier	execute_value		523886	1					
ANR	523945	CompoundStatement		9:22:241:241	523886	1					
ANR	523946	ExpressionStatement	"EXCEPT ( ""EXECUTE (or %s) is not defined in the configuration."" , execute_param . Value ( ) )"	1000:2:27525:27616	523886	0	True				
ANR	523947	CallExpression	"EXCEPT ( ""EXECUTE (or %s) is not defined in the configuration."" , execute_param . Value ( ) )"		523886	0					
ANR	523948	Callee	EXCEPT		523886	0					
ANR	523949	Identifier	EXCEPT		523886	0					
ANR	523950	ArgumentList	"""EXECUTE (or %s) is not defined in the configuration."""		523886	1					
ANR	523951	Argument	"""EXECUTE (or %s) is not defined in the configuration."""		523886	0					
ANR	523952	PrimaryExpression	"""EXECUTE (or %s) is not defined in the configuration."""		523886	0					
ANR	523953	Argument	execute_param . Value ( )		523886	1					
ANR	523954	CallExpression	execute_param . Value ( )		523886	0					
ANR	523955	Callee	execute_param . Value		523886	0					
ANR	523956	MemberAccess	execute_param . Value		523886	0					
ANR	523957	Identifier	execute_param		523886	0					
ANR	523958	Identifier	Value		523886	1					
ANR	523959	ArgumentList			523886	1					
ANR	523960	IdentifierDeclStatement	int i ;	1005:1:27642:27647	523886	6	True				
ANR	523961	IdentifierDecl	i		523886	0					
ANR	523962	IdentifierDeclType	int		523886	0					
ANR	523963	Identifier	i		523886	1					
ANR	523964	ForStatement	for ( i = 0 ; execute_value [ i ] ; i ++ )		523886	7					
ANR	523965	ForInit	i = 0 ;	1007:6:27704:27707	523886	0	True				
ANR	523966	AssignmentExpression	i = 0		523886	0		=			
ANR	523967	Identifier	i		523886	0					
ANR	523968	PrimaryExpression	0		523886	1					
ANR	523969	Condition	execute_value [ i ]	1007:11:27709:27724	523886	1	True				
ANR	523970	ArrayIndexing	execute_value [ i ]		523886	0					
ANR	523971	Identifier	execute_value		523886	0					
ANR	523972	Identifier	i		523886	1					
ANR	523973	PostIncDecOperationExpression	i ++	1007:29:27727:27729	523886	2	True				
ANR	523974	Identifier	i		523886	0					
ANR	523975	IncDec	++		523886	1					
ANR	523976	CompoundStatement		17:34:452:452	523886	3					
ANR	523977	IfStatement	if ( execute_value [ i ] == '/' )		523886	0					
ANR	523978	Condition	execute_value [ i ] == '/'	1008:6:27740:27762	523886	0	True				
ANR	523979	EqualityExpression	execute_value [ i ] == '/'		523886	0		==			
ANR	523980	ArrayIndexing	execute_value [ i ]		523886	0					
ANR	523981	Identifier	execute_value		523886	0					
ANR	523982	Identifier	i		523886	1					
ANR	523983	PrimaryExpression	'/'		523886	1					
ANR	523984	CompoundStatement		18:31:485:485	523886	1					
ANR	523985	ExpressionStatement	execute_value [ i ] = '\\\\'	1009:3:27770:27793	523886	0	True				
ANR	523986	AssignmentExpression	execute_value [ i ] = '\\\\'		523886	0		=			
ANR	523987	ArrayIndexing	execute_value [ i ]		523886	0					
ANR	523988	Identifier	execute_value		523886	0					
ANR	523989	Identifier	i		523886	1					
ANR	523990	PrimaryExpression	'\\\\'		523886	1					
ANR	523991	ExpressionStatement	* execute_dir = execute_value	1014:1:27811:27839	523886	8	True				
ANR	523992	AssignmentExpression	* execute_dir = execute_value		523886	0		=			
ANR	523993	UnaryOperationExpression	* execute_dir		523886	0					
ANR	523994	UnaryOperator	*		523886	0					
ANR	523995	Identifier	execute_dir		523886	1					
ANR	523996	Identifier	execute_value		523886	1					
ANR	523997	ExpressionStatement	free ( execute_value )	1015:1:27842:27863	523886	9	True				
ANR	523998	CallExpression	free ( execute_value )		523886	0					
ANR	523999	Callee	free		523886	0					
ANR	524000	Identifier	free		523886	0					
ANR	524001	ArgumentList	execute_value		523886	1					
ANR	524002	Argument	execute_value		523886	0					
ANR	524003	Identifier	execute_value		523886	0					
ANR	524004	IdentifierDeclStatement	char * partition_value = NULL ;	1018:1:27941:27969	523886	10	True				
ANR	524005	IdentifierDecl	* partition_value = NULL		523886	0					
ANR	524006	IdentifierDeclType	char *		523886	0					
ANR	524007	Identifier	partition_value		523886	1					
ANR	524008	AssignmentExpression	* partition_value = NULL		523886	2		=			
ANR	524009	Identifier	NULL		523886	0					
ANR	524010	Identifier	NULL		523886	1					
ANR	524011	IdentifierDeclStatement	"bool partition_rc = sysapi_partition_id ( execute_dir -> Value ( ) , & partition_value ) ;"	1019:1:27972:28053	523886	11	True				
ANR	524012	IdentifierDecl	"partition_rc = sysapi_partition_id ( execute_dir -> Value ( ) , & partition_value )"		523886	0					
ANR	524013	IdentifierDeclType	bool		523886	0					
ANR	524014	Identifier	partition_rc		523886	1					
ANR	524015	AssignmentExpression	"partition_rc = sysapi_partition_id ( execute_dir -> Value ( ) , & partition_value )"		523886	2		=			
ANR	524016	Identifier	partition_rc		523886	0					
ANR	524017	CallExpression	"sysapi_partition_id ( execute_dir -> Value ( ) , & partition_value )"		523886	1					
ANR	524018	Callee	sysapi_partition_id		523886	0					
ANR	524019	Identifier	sysapi_partition_id		523886	0					
ANR	524020	ArgumentList	execute_dir -> Value ( )		523886	1					
ANR	524021	Argument	execute_dir -> Value ( )		523886	0					
ANR	524022	CallExpression	execute_dir -> Value ( )		523886	0					
ANR	524023	Callee	execute_dir -> Value		523886	0					
ANR	524024	PtrMemberAccess	execute_dir -> Value		523886	0					
ANR	524025	Identifier	execute_dir		523886	0					
ANR	524026	Identifier	Value		523886	1					
ANR	524027	ArgumentList			523886	1					
ANR	524028	Argument	& partition_value		523886	1					
ANR	524029	UnaryOperationExpression	& partition_value		523886	0					
ANR	524030	UnaryOperator	&		523886	0					
ANR	524031	Identifier	partition_value		523886	1					
ANR	524032	IfStatement	if ( ! partition_rc )		523886	12					
ANR	524033	Condition	! partition_rc	1020:5:28060:28072	523886	0	True				
ANR	524034	UnaryOperationExpression	! partition_rc		523886	0					
ANR	524035	UnaryOperator	!		523886	0					
ANR	524036	Identifier	partition_rc		523886	1					
ANR	524037	CompoundStatement		30:21:796:796	523886	1					
ANR	524038	ExpressionStatement	"EXCEPT ( ""Failed to get partition id for %s=%s\\n"" , execute_param . Value ( ) , execute_dir -> Value ( ) )"	1021:2:28080:28179	523886	0	True				
ANR	524039	CallExpression	"EXCEPT ( ""Failed to get partition id for %s=%s\\n"" , execute_param . Value ( ) , execute_dir -> Value ( ) )"		523886	0					
ANR	524040	Callee	EXCEPT		523886	0					
ANR	524041	Identifier	EXCEPT		523886	0					
ANR	524042	ArgumentList	"""Failed to get partition id for %s=%s\\n"""		523886	1					
ANR	524043	Argument	"""Failed to get partition id for %s=%s\\n"""		523886	0					
ANR	524044	PrimaryExpression	"""Failed to get partition id for %s=%s\\n"""		523886	0					
ANR	524045	Argument	execute_param . Value ( )		523886	1					
ANR	524046	CallExpression	execute_param . Value ( )		523886	0					
ANR	524047	Callee	execute_param . Value		523886	0					
ANR	524048	MemberAccess	execute_param . Value		523886	0					
ANR	524049	Identifier	execute_param		523886	0					
ANR	524050	Identifier	Value		523886	1					
ANR	524051	ArgumentList			523886	1					
ANR	524052	Argument	execute_dir -> Value ( )		523886	2					
ANR	524053	CallExpression	execute_dir -> Value ( )		523886	0					
ANR	524054	Callee	execute_dir -> Value		523886	0					
ANR	524055	PtrMemberAccess	execute_dir -> Value		523886	0					
ANR	524056	Identifier	execute_dir		523886	0					
ANR	524057	Identifier	Value		523886	1					
ANR	524058	ArgumentList			523886	1					
ANR	524059	ExpressionStatement	ASSERT ( partition_value )	1024:1:28185:28210	523886	13	True				
ANR	524060	CallExpression	ASSERT ( partition_value )		523886	0					
ANR	524061	Callee	ASSERT		523886	0					
ANR	524062	Identifier	ASSERT		523886	0					
ANR	524063	ArgumentList	partition_value		523886	1					
ANR	524064	Argument	partition_value		523886	0					
ANR	524065	Identifier	partition_value		523886	0					
ANR	524066	ExpressionStatement	* partition_id = partition_value	1025:1:28213:28244	523886	14	True				
ANR	524067	AssignmentExpression	* partition_id = partition_value		523886	0		=			
ANR	524068	UnaryOperationExpression	* partition_id		523886	0					
ANR	524069	UnaryOperator	*		523886	0					
ANR	524070	Identifier	partition_id		523886	1					
ANR	524071	Identifier	partition_value		523886	1					
ANR	524072	ExpressionStatement	free ( partition_value )	1026:1:28247:28268	523886	15	True				
ANR	524073	CallExpression	free ( partition_value )		523886	0					
ANR	524074	Callee	free		523886	0					
ANR	524075	Identifier	free		523886	0					
ANR	524076	ArgumentList	partition_value		523886	1					
ANR	524077	Argument	partition_value		523886	0					
ANR	524078	Identifier	partition_value		523886	0					
ANR	524079	ReturnType	void		523886	1					
ANR	524080	Identifier	ResMgr :: GetConfigExecuteDir		523886	2					
ANR	524081	ParameterList	"int slot_id , MyString * execute_dir , MyString * partition_id"		523886	3					
ANR	524082	Parameter	int slot_id	990:29:27218:27228	523886	0	True				
ANR	524083	ParameterType	int		523886	0					
ANR	524084	Identifier	slot_id		523886	1					
ANR	524085	Parameter	MyString * execute_dir	990:42:27231:27251	523886	1	True				
ANR	524086	ParameterType	MyString *		523886	0					
ANR	524087	Identifier	execute_dir		523886	1					
ANR	524088	Parameter	MyString * partition_id	990:65:27254:27275	523886	2	True				
ANR	524089	ParameterType	MyString *		523886	0					
ANR	524090	Identifier	partition_id		523886	1					
ANR	524091	CFGEntryNode	ENTRY		523886		True				
ANR	524092	CFGExitNode	EXIT		523886		True				
ANR	524093	Symbol	execute_dir		523886						
ANR	524094	Symbol	execute_value		523886						
ANR	524095	Symbol	partition_value		523886						
ANR	524096	Symbol	execute_dir -> Value		523886						
ANR	524097	Symbol	NULL		523886						
ANR	524098	Symbol	* partition_id		523886						
ANR	524099	Symbol	partition_rc		523886						
ANR	524100	Symbol	i		523886						
ANR	524101	Symbol	sysapi_partition_id		523886						
ANR	524102	Symbol	execute_param . Value		523886						
ANR	524103	Symbol	* execute_value		523886						
ANR	524104	Symbol	partition_id		523886						
ANR	524105	Symbol	execute_param		523886						
ANR	524106	Symbol	* i		523886						
ANR	524107	Symbol	& partition_value		523886						
ANR	524108	Symbol	param		523886						
ANR	524109	Symbol	slot_id		523886						
ANR	524110	Symbol	* execute_dir		523886						
ANR	524111	Function	ResMgr :: parse_value	1037:0:28645:29571							
ANR	524112	FunctionDef	"ResMgr :: parse_value (const char * str , int type , bool except)"		524111	0					
ANR	524113	CompoundStatement		1039:0:28713:29571	524111	0					
ANR	524114	IdentifierDeclStatement	"char * tmp , * foo = strdup ( str ) ;"	1040:1:28716:28747	524111	0	True				
ANR	524115	IdentifierDecl	* tmp		524111	0					
ANR	524116	IdentifierDeclType	char *		524111	0					
ANR	524117	Identifier	tmp		524111	1					
ANR	524118	IdentifierDecl	* foo = strdup ( str )		524111	1					
ANR	524119	IdentifierDeclType	char *		524111	0					
ANR	524120	Identifier	foo		524111	1					
ANR	524121	AssignmentExpression	* foo = strdup ( str )		524111	2		=			
ANR	524122	Identifier	foo		524111	0					
ANR	524123	CallExpression	strdup ( str )		524111	1					
ANR	524124	Callee	strdup		524111	0					
ANR	524125	Identifier	strdup		524111	0					
ANR	524126	ArgumentList	str		524111	1					
ANR	524127	Argument	str		524111	0					
ANR	524128	Identifier	str		524111	0					
ANR	524129	IdentifierDeclStatement	float val ;	1041:1:28750:28759	524111	1	True				
ANR	524130	IdentifierDecl	val		524111	0					
ANR	524131	IdentifierDeclType	float		524111	0					
ANR	524132	Identifier	val		524111	1					
ANR	524133	IfStatement	"if ( strcasecmp ( foo , ""auto"" ) == 0 || strcasecmp ( foo , ""automatic"" ) == 0 )"		524111	2					
ANR	524134	Condition	"strcasecmp ( foo , ""auto"" ) == 0 || strcasecmp ( foo , ""automatic"" ) == 0"	1042:5:28766:28828	524111	0	True				
ANR	524135	OrExpression	"strcasecmp ( foo , ""auto"" ) == 0 || strcasecmp ( foo , ""automatic"" ) == 0"		524111	0		||			
ANR	524136	EqualityExpression	"strcasecmp ( foo , ""auto"" ) == 0"		524111	0		==			
ANR	524137	CallExpression	"strcasecmp ( foo , ""auto"" )"		524111	0					
ANR	524138	Callee	strcasecmp		524111	0					
ANR	524139	Identifier	strcasecmp		524111	0					
ANR	524140	ArgumentList	foo		524111	1					
ANR	524141	Argument	foo		524111	0					
ANR	524142	Identifier	foo		524111	0					
ANR	524143	Argument	"""auto"""		524111	1					
ANR	524144	PrimaryExpression	"""auto"""		524111	0					
ANR	524145	PrimaryExpression	0		524111	1					
ANR	524146	EqualityExpression	"strcasecmp ( foo , ""automatic"" ) == 0"		524111	1		==			
ANR	524147	CallExpression	"strcasecmp ( foo , ""automatic"" )"		524111	0					
ANR	524148	Callee	strcasecmp		524111	0					
ANR	524149	Identifier	strcasecmp		524111	0					
ANR	524150	ArgumentList	foo		524111	1					
ANR	524151	Argument	foo		524111	0					
ANR	524152	Identifier	foo		524111	0					
ANR	524153	Argument	"""automatic"""		524111	1					
ANR	524154	PrimaryExpression	"""automatic"""		524111	0					
ANR	524155	PrimaryExpression	0		524111	1					
ANR	524156	CompoundStatement		4:71:118:118	524111	1					
ANR	524157	ExpressionStatement	free ( foo )	1043:2:28836:28847	524111	0	True				
ANR	524158	CallExpression	free ( foo )		524111	0					
ANR	524159	Callee	free		524111	0					
ANR	524160	Identifier	free		524111	0					
ANR	524161	ArgumentList	foo		524111	1					
ANR	524162	Argument	foo		524111	0					
ANR	524163	Identifier	foo		524111	0					
ANR	524164	ReturnStatement	return AUTO_SHARE ;	1044:2:28851:28868	524111	1	True				
ANR	524165	Identifier	AUTO_SHARE		524111	0					
ANR	524166	ElseStatement	else		524111	0					
ANR	524167	IfStatement	"if ( ( tmp = strchr ( foo , '%' ) ) )"		524111	0					
ANR	524168	Condition	"tmp = strchr ( foo , '%' )"	1046:10:28883:28906	524111	0	True				
ANR	524169	AssignmentExpression	"tmp = strchr ( foo , '%' )"		524111	0		=			
ANR	524170	Identifier	tmp		524111	0					
ANR	524171	CallExpression	"strchr ( foo , '%' )"		524111	1					
ANR	524172	Callee	strchr		524111	0					
ANR	524173	Identifier	strchr		524111	0					
ANR	524174	ArgumentList	foo		524111	1					
ANR	524175	Argument	foo		524111	0					
ANR	524176	Identifier	foo		524111	0					
ANR	524177	Argument	'%'		524111	1					
ANR	524178	PrimaryExpression	'%'		524111	0					
ANR	524179	CompoundStatement		8:37:196:196	524111	1					
ANR	524180	ExpressionStatement	* tmp = '\\0'	1048:2:28935:28946	524111	0	True				
ANR	524181	AssignmentExpression	* tmp = '\\0'		524111	0		=			
ANR	524182	UnaryOperationExpression	* tmp		524111	0					
ANR	524183	UnaryOperator	*		524111	0					
ANR	524184	Identifier	tmp		524111	1					
ANR	524185	PrimaryExpression	'\\0'		524111	1					
ANR	524186	ExpressionStatement	val = ( float ) atoi ( foo ) / 100	1049:2:28950:28978	524111	1	True				
ANR	524187	AssignmentExpression	val = ( float ) atoi ( foo ) / 100		524111	0		=			
ANR	524188	Identifier	val		524111	0					
ANR	524189	MultiplicativeExpression	( float ) atoi ( foo ) / 100		524111	1		/			
ANR	524190	CastExpression	( float ) atoi ( foo )		524111	0					
ANR	524191	CastTarget	float		524111	0					
ANR	524192	CallExpression	atoi ( foo )		524111	1					
ANR	524193	Callee	atoi		524111	0					
ANR	524194	Identifier	atoi		524111	0					
ANR	524195	ArgumentList	foo		524111	1					
ANR	524196	Argument	foo		524111	0					
ANR	524197	Identifier	foo		524111	0					
ANR	524198	PrimaryExpression	100		524111	1					
ANR	524199	ExpressionStatement	free ( foo )	1050:2:28982:28993	524111	2	True				
ANR	524200	CallExpression	free ( foo )		524111	0					
ANR	524201	Callee	free		524111	0					
ANR	524202	Identifier	free		524111	0					
ANR	524203	ArgumentList	foo		524111	1					
ANR	524204	Argument	foo		524111	0					
ANR	524205	Identifier	foo		524111	0					
ANR	524206	ReturnStatement	return val ;	1051:2:28997:29007	524111	3	True				
ANR	524207	Identifier	val		524111	0					
ANR	524208	ElseStatement	else		524111	0					
ANR	524209	IfStatement	"if ( ( tmp = strchr ( foo , '/' ) ) )"		524111	0					
ANR	524210	Condition	"tmp = strchr ( foo , '/' )"	1052:12:29021:29044	524111	0	True				
ANR	524211	AssignmentExpression	"tmp = strchr ( foo , '/' )"		524111	0		=			
ANR	524212	Identifier	tmp		524111	0					
ANR	524213	CallExpression	"strchr ( foo , '/' )"		524111	1					
ANR	524214	Callee	strchr		524111	0					
ANR	524215	Identifier	strchr		524111	0					
ANR	524216	ArgumentList	foo		524111	1					
ANR	524217	Argument	foo		524111	0					
ANR	524218	Identifier	foo		524111	0					
ANR	524219	Argument	'/'		524111	1					
ANR	524220	PrimaryExpression	'/'		524111	0					
ANR	524221	CompoundStatement		14:39:334:334	524111	1					
ANR	524222	ExpressionStatement	* tmp = '\\0'	1054:2:29074:29085	524111	0	True				
ANR	524223	AssignmentExpression	* tmp = '\\0'		524111	0		=			
ANR	524224	UnaryOperationExpression	* tmp		524111	0					
ANR	524225	UnaryOperator	*		524111	0					
ANR	524226	Identifier	tmp		524111	1					
ANR	524227	PrimaryExpression	'\\0'		524111	1					
ANR	524228	IfStatement	if ( ! tmp [ 1 ] )		524111	1					
ANR	524229	Condition	! tmp [ 1 ]	1055:6:29093:29100	524111	0	True				
ANR	524230	UnaryOperationExpression	! tmp [ 1 ]		524111	0					
ANR	524231	UnaryOperator	!		524111	0					
ANR	524232	ArrayIndexing	tmp [ 1 ]		524111	1					
ANR	524233	Identifier	tmp		524111	0					
ANR	524234	PrimaryExpression	1		524111	1					
ANR	524235	CompoundStatement		17:17:390:390	524111	1					
ANR	524236	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"" , foo , type )"	1056:3:29109:29210	524111	0	True				
ANR	524237	CallExpression	"dprintf ( D_ALWAYS , ""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"" , foo , type )"		524111	0					
ANR	524238	Callee	dprintf		524111	0					
ANR	524239	Identifier	dprintf		524111	0					
ANR	524240	ArgumentList	D_ALWAYS		524111	1					
ANR	524241	Argument	D_ALWAYS		524111	0					
ANR	524242	Identifier	D_ALWAYS		524111	0					
ANR	524243	Argument	"""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"""		524111	1					
ANR	524244	PrimaryExpression	"""Can't parse attribute \\""%s\\"" in description of slot type %d\\n"""		524111	0					
ANR	524245	Argument	foo		524111	2					
ANR	524246	Identifier	foo		524111	0					
ANR	524247	Argument	type		524111	3					
ANR	524248	Identifier	type		524111	0					
ANR	524249	IfStatement	if ( except )		524111	1					
ANR	524250	Condition	except	1058:7:29219:29224	524111	0	True				
ANR	524251	Identifier	except		524111	0					
ANR	524252	CompoundStatement		20:16:514:514	524111	1					
ANR	524253	ExpressionStatement	DC_Exit ( 4 )	1059:4:29234:29246	524111	0	True				
ANR	524254	CallExpression	DC_Exit ( 4 )		524111	0					
ANR	524255	Callee	DC_Exit		524111	0					
ANR	524256	Identifier	DC_Exit		524111	0					
ANR	524257	ArgumentList	4		524111	1					
ANR	524258	Argument	4		524111	0					
ANR	524259	PrimaryExpression	4		524111	0					
ANR	524260	ElseStatement	else		524111	0					
ANR	524261	CompoundStatement		22:10:544:544	524111	0					
ANR	524262	ExpressionStatement	free ( foo )	1061:4:29264:29275	524111	0	True				
ANR	524263	CallExpression	free ( foo )		524111	0					
ANR	524264	Callee	free		524111	0					
ANR	524265	Identifier	free		524111	0					
ANR	524266	ArgumentList	foo		524111	1					
ANR	524267	Argument	foo		524111	0					
ANR	524268	Identifier	foo		524111	0					
ANR	524269	ReturnStatement	return 0 ;	1062:4:29281:29289	524111	1	True				
ANR	524270	PrimaryExpression	0		524111	0					
ANR	524271	ExpressionStatement	val = ( float ) atoi ( foo ) / ( ( float ) atoi ( & tmp [ 1 ] ) )	1065:2:29302:29349	524111	2	True				
ANR	524272	AssignmentExpression	val = ( float ) atoi ( foo ) / ( ( float ) atoi ( & tmp [ 1 ] ) )		524111	0		=			
ANR	524273	Identifier	val		524111	0					
ANR	524274	MultiplicativeExpression	( float ) atoi ( foo ) / ( ( float ) atoi ( & tmp [ 1 ] ) )		524111	1		/			
ANR	524275	CastExpression	( float ) atoi ( foo )		524111	0					
ANR	524276	CastTarget	float		524111	0					
ANR	524277	CallExpression	atoi ( foo )		524111	1					
ANR	524278	Callee	atoi		524111	0					
ANR	524279	Identifier	atoi		524111	0					
ANR	524280	ArgumentList	foo		524111	1					
ANR	524281	Argument	foo		524111	0					
ANR	524282	Identifier	foo		524111	0					
ANR	524283	CastExpression	( float ) atoi ( & tmp [ 1 ] )		524111	1					
ANR	524284	CastTarget	float		524111	0					
ANR	524285	CallExpression	atoi ( & tmp [ 1 ] )		524111	1					
ANR	524286	Callee	atoi		524111	0					
ANR	524287	Identifier	atoi		524111	0					
ANR	524288	ArgumentList	& tmp [ 1 ]		524111	1					
ANR	524289	Argument	& tmp [ 1 ]		524111	0					
ANR	524290	UnaryOperationExpression	& tmp [ 1 ]		524111	0					
ANR	524291	UnaryOperator	&		524111	0					
ANR	524292	ArrayIndexing	tmp [ 1 ]		524111	1					
ANR	524293	Identifier	tmp		524111	0					
ANR	524294	PrimaryExpression	1		524111	1					
ANR	524295	ExpressionStatement	free ( foo )	1066:2:29353:29364	524111	3	True				
ANR	524296	CallExpression	free ( foo )		524111	0					
ANR	524297	Callee	free		524111	0					
ANR	524298	Identifier	free		524111	0					
ANR	524299	ArgumentList	foo		524111	1					
ANR	524300	Argument	foo		524111	0					
ANR	524301	Identifier	foo		524111	0					
ANR	524302	ReturnStatement	return val ;	1067:2:29368:29378	524111	4	True				
ANR	524303	Identifier	val		524111	0					
ANR	524304	ElseStatement	else		524111	0					
ANR	524305	CompoundStatement		30:8:674:674	524111	0					
ANR	524306	ExpressionStatement	val = - ( float ) atoi ( foo )	1071:2:29514:29537	524111	0	True				
ANR	524307	AssignmentExpression	val = - ( float ) atoi ( foo )		524111	0		=			
ANR	524308	Identifier	val		524111	0					
ANR	524309	UnaryOperationExpression	- ( float ) atoi ( foo )		524111	1					
ANR	524310	UnaryOperator	-		524111	0					
ANR	524311	CastExpression	( float ) atoi ( foo )		524111	1					
ANR	524312	CastTarget	float		524111	0					
ANR	524313	CallExpression	atoi ( foo )		524111	1					
ANR	524314	Callee	atoi		524111	0					
ANR	524315	Identifier	atoi		524111	0					
ANR	524316	ArgumentList	foo		524111	1					
ANR	524317	Argument	foo		524111	0					
ANR	524318	Identifier	foo		524111	0					
ANR	524319	ExpressionStatement	free ( foo )	1072:2:29541:29552	524111	1	True				
ANR	524320	CallExpression	free ( foo )		524111	0					
ANR	524321	Callee	free		524111	0					
ANR	524322	Identifier	free		524111	0					
ANR	524323	ArgumentList	foo		524111	1					
ANR	524324	Argument	foo		524111	0					
ANR	524325	Identifier	foo		524111	0					
ANR	524326	ReturnStatement	return val ;	1073:2:29556:29566	524111	2	True				
ANR	524327	Identifier	val		524111	0					
ANR	524328	ReturnType	float		524111	1					
ANR	524329	Identifier	ResMgr :: parse_value		524111	2					
ANR	524330	ParameterList	"const char * str , int type , bool except"		524111	3					
ANR	524331	Parameter	const char * str	1038:21:28672:28686	524111	0	True				
ANR	524332	ParameterType	const char *		524111	0					
ANR	524333	Identifier	str		524111	1					
ANR	524334	Parameter	int type	1038:38:28689:28696	524111	1	True				
ANR	524335	ParameterType	int		524111	0					
ANR	524336	Identifier	type		524111	1					
ANR	524337	Parameter	bool except	1038:48:28699:28709	524111	2	True				
ANR	524338	ParameterType	bool		524111	0					
ANR	524339	Identifier	except		524111	1					
ANR	524340	CFGEntryNode	ENTRY		524111		True				
ANR	524341	CFGExitNode	EXIT		524111		True				
ANR	524342	Symbol	val		524111						
ANR	524343	Symbol	atoi		524111						
ANR	524344	Symbol	* tmp		524111						
ANR	524345	Symbol	foo		524111						
ANR	524346	Symbol	D_ALWAYS		524111						
ANR	524347	Symbol	strchr		524111						
ANR	524348	Symbol	type		524111						
ANR	524349	Symbol	str		524111						
ANR	524350	Symbol	AUTO_SHARE		524111						
ANR	524351	Symbol	tmp		524111						
ANR	524352	Symbol	except		524111						
ANR	524353	Symbol	strdup		524111						
ANR	524354	Symbol	strcasecmp		524111						
ANR	524355	Function	ResMgr :: compute_cpus	1084:0:29808:30117							
ANR	524356	FunctionDef	ResMgr :: compute_cpus (float share)		524355	0					
ANR	524357	CompoundStatement		1086:0:29848:30117	524355	0					
ANR	524358	IdentifierDeclStatement	int cpus ;	1087:1:29851:29859	524355	0	True				
ANR	524359	IdentifierDecl	cpus		524355	0					
ANR	524360	IdentifierDeclType	int		524355	0					
ANR	524361	Identifier	cpus		524355	1					
ANR	524362	IfStatement	if ( IS_AUTO_SHARE ( share ) )		524355	1					
ANR	524363	Condition	IS_AUTO_SHARE ( share )	1088:5:29866:29885	524355	0	True				
ANR	524364	CallExpression	IS_AUTO_SHARE ( share )		524355	0					
ANR	524365	Callee	IS_AUTO_SHARE		524355	0					
ANR	524366	Identifier	IS_AUTO_SHARE		524355	0					
ANR	524367	ArgumentList	share		524355	1					
ANR	524368	Argument	share		524355	0					
ANR	524369	Identifier	share		524355	0					
ANR	524370	CompoundStatement		3:28:40:40	524355	1					
ANR	524371	ReturnStatement	return 1 ;	1090:2:29953:29961	524355	0	True				
ANR	524372	PrimaryExpression	1		524355	0					
ANR	524373	IfStatement	if ( share > 0 )		524355	2					
ANR	524374	Condition	share > 0	1092:5:29971:29979	524355	0	True				
ANR	524375	RelationalExpression	share > 0		524355	0		>			
ANR	524376	Identifier	share		524355	0					
ANR	524377	PrimaryExpression	0		524355	1					
ANR	524378	CompoundStatement		7:17:134:134	524355	1					
ANR	524379	ExpressionStatement	cpus = ( int ) floor ( share * num_cpus ( ) )	1093:2:29987:30026	524355	0	True				
ANR	524380	AssignmentExpression	cpus = ( int ) floor ( share * num_cpus ( ) )		524355	0		=			
ANR	524381	Identifier	cpus		524355	0					
ANR	524382	CastExpression	( int ) floor ( share * num_cpus ( ) )		524355	1					
ANR	524383	CastTarget	int		524355	0					
ANR	524384	CallExpression	floor ( share * num_cpus ( ) )		524355	1					
ANR	524385	Callee	floor		524355	0					
ANR	524386	Identifier	floor		524355	0					
ANR	524387	ArgumentList	share * num_cpus ( )		524355	1					
ANR	524388	Argument	share * num_cpus ( )		524355	0					
ANR	524389	MultiplicativeExpression	share * num_cpus ( )		524355	0		*			
ANR	524390	Identifier	share		524355	0					
ANR	524391	CallExpression	num_cpus ( )		524355	1					
ANR	524392	Callee	num_cpus		524355	0					
ANR	524393	Identifier	num_cpus		524355	0					
ANR	524394	ArgumentList			524355	1					
ANR	524395	ElseStatement	else		524355	0					
ANR	524396	CompoundStatement		9:8:187:187	524355	0					
ANR	524397	ExpressionStatement	cpus = ( int ) floor ( - share )	1095:2:30040:30067	524355	0	True				
ANR	524398	AssignmentExpression	cpus = ( int ) floor ( - share )		524355	0		=			
ANR	524399	Identifier	cpus		524355	0					
ANR	524400	CastExpression	( int ) floor ( - share )		524355	1					
ANR	524401	CastTarget	int		524355	0					
ANR	524402	CallExpression	floor ( - share )		524355	1					
ANR	524403	Callee	floor		524355	0					
ANR	524404	Identifier	floor		524355	0					
ANR	524405	ArgumentList	- share		524355	1					
ANR	524406	Argument	- share		524355	0					
ANR	524407	UnaryOperationExpression	- share		524355	0					
ANR	524408	UnaryOperator	-		524355	0					
ANR	524409	Identifier	share		524355	1					
ANR	524410	IfStatement	if ( ! cpus )		524355	3					
ANR	524411	Condition	! cpus	1097:5:30077:30082	524355	0	True				
ANR	524412	UnaryOperationExpression	! cpus		524355	0					
ANR	524413	UnaryOperator	!		524355	0					
ANR	524414	Identifier	cpus		524355	1					
ANR	524415	CompoundStatement		12:14:237:237	524355	1					
ANR	524416	ExpressionStatement	cpus = 1	1098:2:30090:30098	524355	0	True				
ANR	524417	AssignmentExpression	cpus = 1		524355	0		=			
ANR	524418	Identifier	cpus		524355	0					
ANR	524419	PrimaryExpression	1		524355	1					
ANR	524420	ReturnStatement	return cpus ;	1100:1:30104:30115	524355	4	True				
ANR	524421	Identifier	cpus		524355	0					
ANR	524422	ReturnType	int		524355	1					
ANR	524423	Identifier	ResMgr :: compute_cpus		524355	2					
ANR	524424	ParameterList	float share		524355	3					
ANR	524425	Parameter	float share	1085:22:29834:29844	524355	0	True				
ANR	524426	ParameterType	float		524355	0					
ANR	524427	Identifier	share		524355	1					
ANR	524428	CFGEntryNode	ENTRY		524355		True				
ANR	524429	CFGExitNode	EXIT		524355		True				
ANR	524430	Symbol	num_cpus		524355						
ANR	524431	Symbol	cpus		524355						
ANR	524432	Symbol	IS_AUTO_SHARE		524355						
ANR	524433	Symbol	share		524355						
ANR	524434	Symbol	floor		524355						
ANR	524435	Function	ResMgr :: compute_phys_mem	1110:0:30363:30747							
ANR	524436	FunctionDef	ResMgr :: compute_phys_mem (float share)		524435	0					
ANR	524437	CompoundStatement		1112:0:30407:30747	524435	0					
ANR	524438	IdentifierDeclStatement	int phys_mem ;	1113:1:30410:30422	524435	0	True				
ANR	524439	IdentifierDecl	phys_mem		524435	0					
ANR	524440	IdentifierDeclType	int		524435	0					
ANR	524441	Identifier	phys_mem		524435	1					
ANR	524442	IfStatement	if ( IS_AUTO_SHARE ( share ) )		524435	1					
ANR	524443	Condition	IS_AUTO_SHARE ( share )	1114:5:30429:30448	524435	0	True				
ANR	524444	CallExpression	IS_AUTO_SHARE ( share )		524435	0					
ANR	524445	Callee	IS_AUTO_SHARE		524435	0					
ANR	524446	Identifier	IS_AUTO_SHARE		524435	0					
ANR	524447	ArgumentList	share		524435	1					
ANR	524448	Argument	share		524435	0					
ANR	524449	Identifier	share		524435	0					
ANR	524450	CompoundStatement		3:28:44:44	524435	1					
ANR	524451	ReturnStatement	return AUTO_MEM ;	1117:2:30548:30563	524435	0	True				
ANR	524452	Identifier	AUTO_MEM		524435	0					
ANR	524453	IfStatement	if ( share > 0 )		524435	2					
ANR	524454	Condition	share > 0	1119:5:30573:30581	524435	0	True				
ANR	524455	RelationalExpression	share > 0		524435	0		>			
ANR	524456	Identifier	share		524435	0					
ANR	524457	PrimaryExpression	0		524435	1					
ANR	524458	CompoundStatement		8:17:177:177	524435	1					
ANR	524459	ExpressionStatement	phys_mem = ( int ) floor ( share * m_attr -> phys_mem ( ) )	1120:2:30589:30640	524435	0	True				
ANR	524460	AssignmentExpression	phys_mem = ( int ) floor ( share * m_attr -> phys_mem ( ) )		524435	0		=			
ANR	524461	Identifier	phys_mem		524435	0					
ANR	524462	CastExpression	( int ) floor ( share * m_attr -> phys_mem ( ) )		524435	1					
ANR	524463	CastTarget	int		524435	0					
ANR	524464	CallExpression	floor ( share * m_attr -> phys_mem ( ) )		524435	1					
ANR	524465	Callee	floor		524435	0					
ANR	524466	Identifier	floor		524435	0					
ANR	524467	ArgumentList	share * m_attr -> phys_mem ( )		524435	1					
ANR	524468	Argument	share * m_attr -> phys_mem ( )		524435	0					
ANR	524469	MultiplicativeExpression	share * m_attr -> phys_mem ( )		524435	0		*			
ANR	524470	Identifier	share		524435	0					
ANR	524471	CallExpression	m_attr -> phys_mem ( )		524435	1					
ANR	524472	Callee	m_attr -> phys_mem		524435	0					
ANR	524473	PtrMemberAccess	m_attr -> phys_mem		524435	0					
ANR	524474	Identifier	m_attr		524435	0					
ANR	524475	Identifier	phys_mem		524435	1					
ANR	524476	ArgumentList			524435	1					
ANR	524477	ElseStatement	else		524435	0					
ANR	524478	CompoundStatement		10:8:242:242	524435	0					
ANR	524479	ExpressionStatement	phys_mem = ( int ) floor ( - share )	1122:2:30654:30685	524435	0	True				
ANR	524480	AssignmentExpression	phys_mem = ( int ) floor ( - share )		524435	0		=			
ANR	524481	Identifier	phys_mem		524435	0					
ANR	524482	CastExpression	( int ) floor ( - share )		524435	1					
ANR	524483	CastTarget	int		524435	0					
ANR	524484	CallExpression	floor ( - share )		524435	1					
ANR	524485	Callee	floor		524435	0					
ANR	524486	Identifier	floor		524435	0					
ANR	524487	ArgumentList	- share		524435	1					
ANR	524488	Argument	- share		524435	0					
ANR	524489	UnaryOperationExpression	- share		524435	0					
ANR	524490	UnaryOperator	-		524435	0					
ANR	524491	Identifier	share		524435	1					
ANR	524492	IfStatement	if ( ! phys_mem )		524435	3					
ANR	524493	Condition	! phys_mem	1124:5:30695:30704	524435	0	True				
ANR	524494	UnaryOperationExpression	! phys_mem		524435	0					
ANR	524495	UnaryOperator	!		524435	0					
ANR	524496	Identifier	phys_mem		524435	1					
ANR	524497	CompoundStatement		13:18:300:300	524435	1					
ANR	524498	ExpressionStatement	phys_mem = 1	1125:2:30712:30724	524435	0	True				
ANR	524499	AssignmentExpression	phys_mem = 1		524435	0		=			
ANR	524500	Identifier	phys_mem		524435	0					
ANR	524501	PrimaryExpression	1		524435	1					
ANR	524502	ReturnStatement	return phys_mem ;	1127:1:30730:30745	524435	4	True				
ANR	524503	Identifier	phys_mem		524435	0					
ANR	524504	ReturnType	int		524435	1					
ANR	524505	Identifier	ResMgr :: compute_phys_mem		524435	2					
ANR	524506	ParameterList	float share		524435	3					
ANR	524507	Parameter	float share	1111:26:30393:30403	524435	0	True				
ANR	524508	ParameterType	float		524435	0					
ANR	524509	Identifier	share		524435	1					
ANR	524510	CFGEntryNode	ENTRY		524435		True				
ANR	524511	CFGExitNode	EXIT		524435		True				
ANR	524512	Symbol	IS_AUTO_SHARE		524435						
ANR	524513	Symbol	* m_attr		524435						
ANR	524514	Symbol	share		524435						
ANR	524515	Symbol	m_attr		524435						
ANR	524516	Symbol	m_attr -> phys_mem		524435						
ANR	524517	Symbol	floor		524435						
ANR	524518	Symbol	phys_mem		524435						
ANR	524519	Symbol	AUTO_MEM		524435						
ANR	524520	Function	ResMgr :: walk	1131:0:30751:31454							
ANR	524521	FunctionDef	ResMgr :: walk (VoidResourceMember memberfunc)		524520	0					
ANR	524522	CompoundStatement		1133:0:30802:31454	524520	0					
ANR	524523	IfStatement	if ( ! resources )		524520	0					
ANR	524524	Condition	! resources	1134:5:30809:30819	524520	0	True				
ANR	524525	UnaryOperationExpression	! resources		524520	0					
ANR	524526	UnaryOperator	!		524520	0					
ANR	524527	Identifier	resources		524520	1					
ANR	524528	CompoundStatement		2:19:20:20	524520	1					
ANR	524529	ReturnStatement	return ;	1135:2:30827:30833	524520	0	True				
ANR	524530	IdentifierDeclStatement	double currenttime = stats . BeginWalk ( memberfunc ) ;	1138:4:30843:30891	524520	1	True				
ANR	524531	IdentifierDecl	currenttime = stats . BeginWalk ( memberfunc )		524520	0					
ANR	524532	IdentifierDeclType	double		524520	0					
ANR	524533	Identifier	currenttime		524520	1					
ANR	524534	AssignmentExpression	currenttime = stats . BeginWalk ( memberfunc )		524520	2		=			
ANR	524535	Identifier	currenttime		524520	0					
ANR	524536	CallExpression	stats . BeginWalk ( memberfunc )		524520	1					
ANR	524537	Callee	stats . BeginWalk		524520	0					
ANR	524538	MemberAccess	stats . BeginWalk		524520	0					
ANR	524539	Identifier	stats		524520	0					
ANR	524540	Identifier	BeginWalk		524520	1					
ANR	524541	ArgumentList	memberfunc		524520	1					
ANR	524542	Argument	memberfunc		524520	0					
ANR	524543	Identifier	memberfunc		524520	0					
ANR	524544	IdentifierDeclStatement	int ncache = nresources ;	1145:1:31181:31204	524520	2	True				
ANR	524545	IdentifierDecl	ncache = nresources		524520	0					
ANR	524546	IdentifierDeclType	int		524520	0					
ANR	524547	Identifier	ncache		524520	1					
ANR	524548	AssignmentExpression	ncache = nresources		524520	2		=			
ANR	524549	Identifier	nresources		524520	0					
ANR	524550	Identifier	nresources		524520	1					
ANR	524551	Statement	Resource	1146:1:31207:31214	524520	3	True				
ANR	524552	Statement	*	1146:10:31216:31216	524520	4	True				
ANR	524553	Statement	*	1146:11:31217:31217	524520	5	True				
ANR	524554	Statement	cache	1146:12:31218:31222	524520	6	True				
ANR	524555	Statement	=	1146:18:31224:31224	524520	7	True				
ANR	524556	Statement	new	1146:20:31226:31228	524520	8	True				
ANR	524557	Statement	Resource	1146:24:31230:31237	524520	9	True				
ANR	524558	Statement	*	1146:32:31238:31238	524520	10	True				
ANR	524559	Statement	[	1146:33:31239:31239	524520	11	True				
ANR	524560	Statement	ncache	1146:34:31240:31245	524520	12	True				
ANR	524561	Statement	]	1146:40:31246:31246	524520	13	True				
ANR	524562	ExpressionStatement		1146:41:31247:31247	524520	14	True				
ANR	524563	ExpressionStatement	"memcpy ( ( void * ) cache , ( void * ) resources , ( sizeof ( Resource * ) * ncache ) )"	1147:1:31250:31316	524520	15	True				
ANR	524564	CallExpression	"memcpy ( ( void * ) cache , ( void * ) resources , ( sizeof ( Resource * ) * ncache ) )"		524520	0					
ANR	524565	Callee	memcpy		524520	0					
ANR	524566	Identifier	memcpy		524520	0					
ANR	524567	ArgumentList	( void * ) cache		524520	1					
ANR	524568	Argument	( void * ) cache		524520	0					
ANR	524569	CastExpression	( void * ) cache		524520	0					
ANR	524570	CastTarget	void *		524520	0					
ANR	524571	Identifier	cache		524520	1					
ANR	524572	Argument	( void * ) resources		524520	1					
ANR	524573	CastExpression	( void * ) resources		524520	0					
ANR	524574	CastTarget	void *		524520	0					
ANR	524575	Identifier	resources		524520	1					
ANR	524576	Argument	sizeof ( Resource * ) * ncache		524520	2					
ANR	524577	MultiplicativeExpression	sizeof ( Resource * ) * ncache		524520	0		*			
ANR	524578	SizeofExpression	sizeof ( Resource * )		524520	0					
ANR	524579	Sizeof	sizeof		524520	0					
ANR	524580	SizeofOperand	Resource *		524520	1					
ANR	524581	Identifier	ncache		524520	1					
ANR	524582	ForStatement	for ( int i = 0 ; i < ncache ; i ++ )		524520	16					
ANR	524583	ForInit	int i = 0 ;	1149:6:31325:31334	524520	0	True				
ANR	524584	IdentifierDeclStatement	int i = 0 ;		524520	0					
ANR	524585	IdentifierDecl	i = 0		524520	0					
ANR	524586	IdentifierDeclType	int		524520	0					
ANR	524587	Identifier	i		524520	1					
ANR	524588	AssignmentExpression	i = 0		524520	2		=			
ANR	524589	Identifier	i		524520	0					
ANR	524590	PrimaryExpression	0		524520	1					
ANR	524591	Condition	i < ncache	1149:17:31336:31345	524520	1	True				
ANR	524592	RelationalExpression	i < ncache		524520	0		<			
ANR	524593	Identifier	i		524520	0					
ANR	524594	Identifier	ncache		524520	1					
ANR	524595	PostIncDecOperationExpression	i ++	1149:29:31348:31350	524520	2	True				
ANR	524596	Identifier	i		524520	0					
ANR	524597	IncDec	++		524520	1					
ANR	524598	CompoundStatement		17:35:551:551	524520	3					
ANR	524599	Statement	(	1150:2:31358:31358	524520	0	True				
ANR	524600	Statement	cache	1150:3:31359:31363	524520	1	True				
ANR	524601	Statement	[	1150:8:31364:31364	524520	2	True				
ANR	524602	Statement	i	1150:9:31365:31365	524520	3	True				
ANR	524603	Statement	]	1150:10:31366:31366	524520	4	True				
ANR	524604	Statement	->*	1150:11:31367:31369	524520	5	True				
ANR	524605	Statement	(	1150:14:31370:31370	524520	6	True				
ANR	524606	Statement	memberfunc	1150:15:31371:31380	524520	7	True				
ANR	524607	Statement	)	1150:25:31381:31381	524520	8	True				
ANR	524608	Statement	)	1150:26:31382:31382	524520	9	True				
ANR	524609	Statement	(	1150:27:31383:31383	524520	10	True				
ANR	524610	Statement	)	1150:28:31384:31384	524520	11	True				
ANR	524611	ExpressionStatement		1150:29:31385:31385	524520	12	True				
ANR	524612	Statement	delete	1153:1:31392:31397	524520	17	True				
ANR	524613	Statement	[	1153:8:31399:31399	524520	18	True				
ANR	524614	Statement	]	1153:9:31400:31400	524520	19	True				
ANR	524615	ExpressionStatement	cache	1153:11:31402:31407	524520	20	True				
ANR	524616	Identifier	cache		524520	0					
ANR	524617	ExpressionStatement	"stats . EndWalk ( memberfunc , currenttime )"	1155:4:31414:31452	524520	21	True				
ANR	524618	CallExpression	"stats . EndWalk ( memberfunc , currenttime )"		524520	0					
ANR	524619	Callee	stats . EndWalk		524520	0					
ANR	524620	MemberAccess	stats . EndWalk		524520	0					
ANR	524621	Identifier	stats		524520	0					
ANR	524622	Identifier	EndWalk		524520	1					
ANR	524623	ArgumentList	memberfunc		524520	1					
ANR	524624	Argument	memberfunc		524520	0					
ANR	524625	Identifier	memberfunc		524520	0					
ANR	524626	Argument	currenttime		524520	1					
ANR	524627	Identifier	currenttime		524520	0					
ANR	524628	ReturnType	void		524520	1					
ANR	524629	Identifier	ResMgr :: walk		524520	2					
ANR	524630	ParameterList	VoidResourceMember memberfunc		524520	3					
ANR	524631	Parameter	VoidResourceMember memberfunc	1132:14:30770:30798	524520	0	True				
ANR	524632	ParameterType	VoidResourceMember		524520	0					
ANR	524633	Identifier	memberfunc		524520	1					
ANR	524634	CFGEntryNode	ENTRY		524520		True				
ANR	524635	CFGExitNode	EXIT		524520		True				
ANR	524636	Symbol	ncache		524520						
ANR	524637	Symbol	currenttime		524520						
ANR	524638	Symbol	cache		524520						
ANR	524639	Symbol	stats		524520						
ANR	524640	Symbol	memberfunc		524520						
ANR	524641	Symbol	resources		524520						
ANR	524642	Symbol	i		524520						
ANR	524643	Symbol	nresources		524520						
ANR	524644	Symbol	stats . BeginWalk		524520						
ANR	524645	Function	ResMgr :: walk	1159:0:31458:31646							
ANR	524646	FunctionDef	"ResMgr :: walk (ResourceMaskMember memberfunc , amask_t mask)"		524645	0					
ANR	524647	CompoundStatement		1161:0:31523:31646	524645	0					
ANR	524648	IfStatement	if ( ! resources )		524645	0					
ANR	524649	Condition	! resources	1162:5:31530:31540	524645	0	True				
ANR	524650	UnaryOperationExpression	! resources		524645	0					
ANR	524651	UnaryOperator	!		524645	0					
ANR	524652	Identifier	resources		524645	1					
ANR	524653	CompoundStatement		2:19:20:20	524645	1					
ANR	524654	ReturnStatement	return ;	1163:2:31548:31554	524645	0	True				
ANR	524655	IdentifierDeclStatement	int i ;	1165:1:31560:31565	524645	1	True				
ANR	524656	IdentifierDecl	i		524645	0					
ANR	524657	IdentifierDeclType	int		524645	0					
ANR	524658	Identifier	i		524645	1					
ANR	524659	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		524645	2					
ANR	524660	ForInit	i = 0 ;	1166:6:31573:31578	524645	0	True				
ANR	524661	AssignmentExpression	i = 0		524645	0		=			
ANR	524662	Identifier	i		524645	0					
ANR	524663	PrimaryExpression	0		524645	1					
ANR	524664	Condition	i < nresources	1166:13:31580:31593	524645	1	True				
ANR	524665	RelationalExpression	i < nresources		524645	0		<			
ANR	524666	Identifier	i		524645	0					
ANR	524667	Identifier	nresources		524645	1					
ANR	524668	PostIncDecOperationExpression	i ++	1166:29:31596:31598	524645	2	True				
ANR	524669	Identifier	i		524645	0					
ANR	524670	IncDec	++		524645	1					
ANR	524671	CompoundStatement		6:35:78:78	524645	3					
ANR	524672	Statement	(	1167:2:31606:31606	524645	0	True				
ANR	524673	Statement	resources	1167:3:31607:31615	524645	1	True				
ANR	524674	Statement	[	1167:12:31616:31616	524645	2	True				
ANR	524675	Statement	i	1167:13:31617:31617	524645	3	True				
ANR	524676	Statement	]	1167:14:31618:31618	524645	4	True				
ANR	524677	Statement	->*	1167:15:31619:31621	524645	5	True				
ANR	524678	Statement	(	1167:18:31622:31622	524645	6	True				
ANR	524679	Statement	memberfunc	1167:19:31623:31632	524645	7	True				
ANR	524680	Statement	)	1167:29:31633:31633	524645	8	True				
ANR	524681	Statement	)	1167:30:31634:31634	524645	9	True				
ANR	524682	ExpressionStatement	mask	1167:31:31635:31641	524645	10	True				
ANR	524683	Identifier	mask		524645	0					
ANR	524684	ReturnType	void		524645	1					
ANR	524685	Identifier	ResMgr :: walk		524645	2					
ANR	524686	ParameterList	"ResourceMaskMember memberfunc , amask_t mask"		524645	3					
ANR	524687	Parameter	ResourceMaskMember memberfunc	1160:14:31477:31505	524645	0	True				
ANR	524688	ParameterType	ResourceMaskMember		524645	0					
ANR	524689	Identifier	memberfunc		524645	1					
ANR	524690	Parameter	amask_t mask	1160:45:31508:31519	524645	1	True				
ANR	524691	ParameterType	amask_t		524645	0					
ANR	524692	Identifier	mask		524645	1					
ANR	524693	CFGEntryNode	ENTRY		524645		True				
ANR	524694	CFGExitNode	EXIT		524645		True				
ANR	524695	Symbol	memberfunc		524645						
ANR	524696	Symbol	resources		524645						
ANR	524697	Symbol	i		524645						
ANR	524698	Symbol	nresources		524645						
ANR	524699	Symbol	mask		524645						
ANR	524700	Function	ResMgr :: sum	1172:0:31650:31859							
ANR	524701	FunctionDef	ResMgr :: sum (ResourceFloatMember memberfunc)		524700	0					
ANR	524702	CompoundStatement		1174:0:31702:31859	524700	0					
ANR	524703	IfStatement	if ( ! resources )		524700	0					
ANR	524704	Condition	! resources	1175:5:31709:31719	524700	0	True				
ANR	524705	UnaryOperationExpression	! resources		524700	0					
ANR	524706	UnaryOperator	!		524700	0					
ANR	524707	Identifier	resources		524700	1					
ANR	524708	CompoundStatement		2:19:20:20	524700	1					
ANR	524709	ReturnStatement	return 0 ;	1176:2:31727:31735	524700	0	True				
ANR	524710	PrimaryExpression	0		524700	0					
ANR	524711	IdentifierDeclStatement	int i ;	1178:1:31741:31746	524700	1	True				
ANR	524712	IdentifierDecl	i		524700	0					
ANR	524713	IdentifierDeclType	int		524700	0					
ANR	524714	Identifier	i		524700	1					
ANR	524715	IdentifierDeclStatement	float tot = 0 ;	1179:1:31749:31762	524700	2	True				
ANR	524716	IdentifierDecl	tot = 0		524700	0					
ANR	524717	IdentifierDeclType	float		524700	0					
ANR	524718	Identifier	tot		524700	1					
ANR	524719	AssignmentExpression	tot = 0		524700	2		=			
ANR	524720	Identifier	tot		524700	0					
ANR	524721	PrimaryExpression	0		524700	1					
ANR	524722	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		524700	3					
ANR	524723	ForInit	i = 0 ;	1180:6:31770:31775	524700	0	True				
ANR	524724	AssignmentExpression	i = 0		524700	0		=			
ANR	524725	Identifier	i		524700	0					
ANR	524726	PrimaryExpression	0		524700	1					
ANR	524727	Condition	i < nresources	1180:13:31777:31790	524700	1	True				
ANR	524728	RelationalExpression	i < nresources		524700	0		<			
ANR	524729	Identifier	i		524700	0					
ANR	524730	Identifier	nresources		524700	1					
ANR	524731	PostIncDecOperationExpression	i ++	1180:29:31793:31795	524700	2	True				
ANR	524732	Identifier	i		524700	0					
ANR	524733	IncDec	++		524700	1					
ANR	524734	CompoundStatement		7:35:96:96	524700	3					
ANR	524735	Statement	tot	1181:2:31803:31805	524700	0	True				
ANR	524736	Statement	+=	1181:6:31807:31808	524700	1	True				
ANR	524737	Statement	(	1181:9:31810:31810	524700	2	True				
ANR	524738	Statement	resources	1181:10:31811:31819	524700	3	True				
ANR	524739	Statement	[	1181:19:31820:31820	524700	4	True				
ANR	524740	Statement	i	1181:20:31821:31821	524700	5	True				
ANR	524741	Statement	]	1181:21:31822:31822	524700	6	True				
ANR	524742	Statement	->*	1181:22:31823:31825	524700	7	True				
ANR	524743	Statement	(	1181:25:31826:31826	524700	8	True				
ANR	524744	Statement	memberfunc	1181:26:31827:31836	524700	9	True				
ANR	524745	Statement	)	1181:36:31837:31837	524700	10	True				
ANR	524746	Statement	)	1181:37:31838:31838	524700	11	True				
ANR	524747	Statement	(	1181:38:31839:31839	524700	12	True				
ANR	524748	Statement	)	1181:39:31840:31840	524700	13	True				
ANR	524749	ExpressionStatement		1181:40:31841:31841	524700	14	True				
ANR	524750	ReturnStatement	return tot ;	1183:1:31847:31857	524700	4	True				
ANR	524751	Identifier	tot		524700	0					
ANR	524752	ReturnType	float		524700	1					
ANR	524753	Identifier	ResMgr :: sum		524700	2					
ANR	524754	ParameterList	ResourceFloatMember memberfunc		524700	3					
ANR	524755	Parameter	ResourceFloatMember memberfunc	1173:13:31669:31698	524700	0	True				
ANR	524756	ParameterType	ResourceFloatMember		524700	0					
ANR	524757	Identifier	memberfunc		524700	1					
ANR	524758	CFGEntryNode	ENTRY		524700		True				
ANR	524759	CFGExitNode	EXIT		524700		True				
ANR	524760	Symbol	tot		524700						
ANR	524761	Symbol	memberfunc		524700						
ANR	524762	Symbol	resources		524700						
ANR	524763	Symbol	i		524700						
ANR	524764	Symbol	nresources		524700						
ANR	524765	Function	ResMgr :: resource_sort	1187:0:31863:32039							
ANR	524766	FunctionDef	ResMgr :: resource_sort (ComparisonFunc compar)		524765	0					
ANR	524767	CompoundStatement		1189:0:31915:32039	524765	0					
ANR	524768	IfStatement	if ( ! resources )		524765	0					
ANR	524769	Condition	! resources	1190:5:31922:31932	524765	0	True				
ANR	524770	UnaryOperationExpression	! resources		524765	0					
ANR	524771	UnaryOperator	!		524765	0					
ANR	524772	Identifier	resources		524765	1					
ANR	524773	CompoundStatement		2:19:20:20	524765	1					
ANR	524774	ReturnStatement	return ;	1191:2:31940:31946	524765	0	True				
ANR	524775	IfStatement	if ( nresources > 1 )		524765	1					
ANR	524776	Condition	nresources > 1	1193:5:31956:31969	524765	0	True				
ANR	524777	RelationalExpression	nresources > 1		524765	0		>			
ANR	524778	Identifier	nresources		524765	0					
ANR	524779	PrimaryExpression	1		524765	1					
ANR	524780	CompoundStatement		5:22:57:57	524765	1					
ANR	524781	ExpressionStatement	"qsort ( resources , nresources , sizeof ( Resource * ) , compar )"	1194:2:31977:32034	524765	0	True				
ANR	524782	CallExpression	"qsort ( resources , nresources , sizeof ( Resource * ) , compar )"		524765	0					
ANR	524783	Callee	qsort		524765	0					
ANR	524784	Identifier	qsort		524765	0					
ANR	524785	ArgumentList	resources		524765	1					
ANR	524786	Argument	resources		524765	0					
ANR	524787	Identifier	resources		524765	0					
ANR	524788	Argument	nresources		524765	1					
ANR	524789	Identifier	nresources		524765	0					
ANR	524790	Argument	sizeof ( Resource * )		524765	2					
ANR	524791	SizeofExpression	sizeof ( Resource * )		524765	0					
ANR	524792	Sizeof	sizeof		524765	0					
ANR	524793	SizeofOperand	Resource *		524765	1					
ANR	524794	Argument	compar		524765	3					
ANR	524795	Identifier	compar		524765	0					
ANR	524796	ReturnType	void		524765	1					
ANR	524797	Identifier	ResMgr :: resource_sort		524765	2					
ANR	524798	ParameterList	ComparisonFunc compar		524765	3					
ANR	524799	Parameter	ComparisonFunc compar	1188:23:31891:31911	524765	0	True				
ANR	524800	ParameterType	ComparisonFunc		524765	0					
ANR	524801	Identifier	compar		524765	1					
ANR	524802	CFGEntryNode	ENTRY		524765		True				
ANR	524803	CFGExitNode	EXIT		524765		True				
ANR	524804	Symbol	resources		524765						
ANR	524805	Symbol	nresources		524765						
ANR	524806	Symbol	compar		524765						
ANR	524807	Function	ResMgr :: adlist_register	1200:0:32098:32188							
ANR	524808	FunctionDef	ResMgr :: adlist_register (StartdNamedClassAd * ad)		524807	0					
ANR	524809	CompoundStatement		1202:0:32152:32188	524807	0					
ANR	524810	ReturnStatement	return extra_ads . Register ( ad ) ;	1203:1:32155:32186	524807	0	True				
ANR	524811	CallExpression	extra_ads . Register ( ad )		524807	0					
ANR	524812	Callee	extra_ads . Register		524807	0					
ANR	524813	MemberAccess	extra_ads . Register		524807	0					
ANR	524814	Identifier	extra_ads		524807	0					
ANR	524815	Identifier	Register		524807	1					
ANR	524816	ArgumentList	ad		524807	1					
ANR	524817	Argument	ad		524807	0					
ANR	524818	Identifier	ad		524807	0					
ANR	524819	ReturnType	int		524807	1					
ANR	524820	Identifier	ResMgr :: adlist_register		524807	2					
ANR	524821	ParameterList	StartdNamedClassAd * ad		524807	3					
ANR	524822	Parameter	StartdNamedClassAd * ad	1201:25:32127:32148	524807	0	True				
ANR	524823	ParameterType	StartdNamedClassAd *		524807	0					
ANR	524824	Identifier	ad		524807	1					
ANR	524825	CFGEntryNode	ENTRY		524807		True				
ANR	524826	CFGExitNode	EXIT		524807		True				
ANR	524827	Symbol	ad		524807						
ANR	524828	Symbol	extra_ads		524807						
ANR	524829	Symbol	extra_ads . Register		524807						
ANR	524830	Function	ResMgr :: adlist_replace	1206:0:32191:32534							
ANR	524831	FunctionDef	"ResMgr :: adlist_replace (const char * name , ClassAd * newAd , bool report_diff)"		524830	0					
ANR	524832	CompoundStatement		1208:0:32272:32534	524830	0					
ANR	524833	IfStatement	if ( report_diff )		524830	0					
ANR	524834	Condition	report_diff	1209:5:32279:32289	524830	0	True				
ANR	524835	Identifier	report_diff		524830	0					
ANR	524836	CompoundStatement		4:2:50:72	524830	1					
ANR	524837	IdentifierDeclStatement	StringList ignore_list ;	1210:2:32297:32319	524830	0	True				
ANR	524838	IdentifierDecl	ignore_list		524830	0					
ANR	524839	IdentifierDeclType	StringList		524830	0					
ANR	524840	Identifier	ignore_list		524830	1					
ANR	524841	IdentifierDeclStatement	MyString ignore = name ;	1211:2:32323:32345	524830	1	True				
ANR	524842	IdentifierDecl	ignore = name		524830	0					
ANR	524843	IdentifierDeclType	MyString		524830	0					
ANR	524844	Identifier	ignore		524830	1					
ANR	524845	AssignmentExpression	ignore = name		524830	2		=			
ANR	524846	Identifier	name		524830	0					
ANR	524847	Identifier	name		524830	1					
ANR	524848	ExpressionStatement	"ignore += ""_LastUpdate"""	1212:2:32349:32372	524830	2	True				
ANR	524849	AssignmentExpression	"ignore += ""_LastUpdate"""		524830	0		+=			
ANR	524850	Identifier	ignore		524830	0					
ANR	524851	PrimaryExpression	"""_LastUpdate"""		524830	1					
ANR	524852	ExpressionStatement	ignore_list . append ( ignore . Value ( ) )	1213:2:32376:32412	524830	3	True				
ANR	524853	CallExpression	ignore_list . append ( ignore . Value ( ) )		524830	0					
ANR	524854	Callee	ignore_list . append		524830	0					
ANR	524855	MemberAccess	ignore_list . append		524830	0					
ANR	524856	Identifier	ignore_list		524830	0					
ANR	524857	Identifier	append		524830	1					
ANR	524858	ArgumentList	ignore . Value ( )		524830	1					
ANR	524859	Argument	ignore . Value ( )		524830	0					
ANR	524860	CallExpression	ignore . Value ( )		524830	0					
ANR	524861	Callee	ignore . Value		524830	0					
ANR	524862	MemberAccess	ignore . Value		524830	0					
ANR	524863	Identifier	ignore		524830	0					
ANR	524864	Identifier	Value		524830	1					
ANR	524865	ArgumentList			524830	1					
ANR	524866	ReturnStatement	"return extra_ads . Replace ( name , newAd , true , & ignore_list ) ;"	1214:2:32416:32475	524830	4	True				
ANR	524867	CallExpression	"extra_ads . Replace ( name , newAd , true , & ignore_list )"		524830	0					
ANR	524868	Callee	extra_ads . Replace		524830	0					
ANR	524869	MemberAccess	extra_ads . Replace		524830	0					
ANR	524870	Identifier	extra_ads		524830	0					
ANR	524871	Identifier	Replace		524830	1					
ANR	524872	ArgumentList	name		524830	1					
ANR	524873	Argument	name		524830	0					
ANR	524874	Identifier	name		524830	0					
ANR	524875	Argument	newAd		524830	1					
ANR	524876	Identifier	newAd		524830	0					
ANR	524877	Argument	true		524830	2					
ANR	524878	Identifier	true		524830	0					
ANR	524879	Argument	& ignore_list		524830	3					
ANR	524880	UnaryOperationExpression	& ignore_list		524830	0					
ANR	524881	UnaryOperator	&		524830	0					
ANR	524882	Identifier	ignore_list		524830	1					
ANR	524883	ElseStatement	else		524830	0					
ANR	524884	CompoundStatement		9:6:213:213	524830	0					
ANR	524885	ReturnStatement	"return extra_ads . Replace ( name , newAd ) ;"	1217:2:32490:32529	524830	0	True				
ANR	524886	CallExpression	"extra_ads . Replace ( name , newAd )"		524830	0					
ANR	524887	Callee	extra_ads . Replace		524830	0					
ANR	524888	MemberAccess	extra_ads . Replace		524830	0					
ANR	524889	Identifier	extra_ads		524830	0					
ANR	524890	Identifier	Replace		524830	1					
ANR	524891	ArgumentList	name		524830	1					
ANR	524892	Argument	name		524830	0					
ANR	524893	Identifier	name		524830	0					
ANR	524894	Argument	newAd		524830	1					
ANR	524895	Identifier	newAd		524830	0					
ANR	524896	ReturnType	int		524830	1					
ANR	524897	Identifier	ResMgr :: adlist_replace		524830	2					
ANR	524898	ParameterList	"const char * name , ClassAd * newAd , bool report_diff"		524830	3					
ANR	524899	Parameter	const char * name	1207:24:32219:32234	524830	0	True				
ANR	524900	ParameterType	const char *		524830	0					
ANR	524901	Identifier	name		524830	1					
ANR	524902	Parameter	ClassAd * newAd	1207:42:32237:32250	524830	1	True				
ANR	524903	ParameterType	ClassAd *		524830	0					
ANR	524904	Identifier	newAd		524830	1					
ANR	524905	Parameter	bool report_diff	1207:58:32253:32268	524830	2	True				
ANR	524906	ParameterType	bool		524830	0					
ANR	524907	Identifier	report_diff		524830	1					
ANR	524908	CFGEntryNode	ENTRY		524830		True				
ANR	524909	CFGExitNode	EXIT		524830		True				
ANR	524910	Symbol	report_diff		524830						
ANR	524911	Symbol	extra_ads . Replace		524830						
ANR	524912	Symbol	name		524830						
ANR	524913	Symbol	true		524830						
ANR	524914	Symbol	ignore		524830						
ANR	524915	Symbol	& ignore_list		524830						
ANR	524916	Symbol	ignore_list		524830						
ANR	524917	Symbol	ignore . Value		524830						
ANR	524918	Symbol	extra_ads		524830						
ANR	524919	Symbol	newAd		524830						
ANR	524920	Function	ResMgr :: adlist_delete	1221:0:32537:32619							
ANR	524921	FunctionDef	ResMgr :: adlist_delete (const char * name)		524920	0					
ANR	524922	CompoundStatement		1223:0:32583:32619	524920	0					
ANR	524923	ReturnStatement	return extra_ads . Delete ( name ) ;	1224:1:32586:32617	524920	0	True				
ANR	524924	CallExpression	extra_ads . Delete ( name )		524920	0					
ANR	524925	Callee	extra_ads . Delete		524920	0					
ANR	524926	MemberAccess	extra_ads . Delete		524920	0					
ANR	524927	Identifier	extra_ads		524920	0					
ANR	524928	Identifier	Delete		524920	1					
ANR	524929	ArgumentList	name		524920	1					
ANR	524930	Argument	name		524920	0					
ANR	524931	Identifier	name		524920	0					
ANR	524932	ReturnType	int		524920	1					
ANR	524933	Identifier	ResMgr :: adlist_delete		524920	2					
ANR	524934	ParameterList	const char * name		524920	3					
ANR	524935	Parameter	const char * name	1222:23:32564:32579	524920	0	True				
ANR	524936	ParameterType	const char *		524920	0					
ANR	524937	Identifier	name		524920	1					
ANR	524938	CFGEntryNode	ENTRY		524920		True				
ANR	524939	CFGExitNode	EXIT		524920		True				
ANR	524940	Symbol	extra_ads . Delete		524920						
ANR	524941	Symbol	name		524920						
ANR	524942	Symbol	extra_ads		524920						
ANR	524943	Function	ResMgr :: adlist_publish	1227:0:32622:32849							
ANR	524944	FunctionDef	"ResMgr :: adlist_publish (unsigned r_id , ClassAd * resAd , amask_t mask)"		524943	0					
ANR	524945	CompoundStatement		1229:0:32696:32849	524943	0					
ANR	524946	IfStatement	if ( ( mask & ( A_PUBLIC | A_UPDATE ) ) != ( A_PUBLIC | A_UPDATE ) )		524943	0					
ANR	524947	Condition	( mask & ( A_PUBLIC | A_UPDATE ) ) != ( A_PUBLIC | A_UPDATE )	1231:7:32724:32784	524943	0	True				
ANR	524948	EqualityExpression	( mask & ( A_PUBLIC | A_UPDATE ) ) != ( A_PUBLIC | A_UPDATE )		524943	0		!=			
ANR	524949	BitAndExpression	mask & ( A_PUBLIC | A_UPDATE )		524943	0		&			
ANR	524950	Identifier	mask		524943	0					
ANR	524951	InclusiveOrExpression	A_PUBLIC | A_UPDATE		524943	1		|			
ANR	524952	Identifier	A_PUBLIC		524943	0					
ANR	524953	Identifier	A_UPDATE		524943	1					
ANR	524954	InclusiveOrExpression	A_PUBLIC | A_UPDATE		524943	1		|			
ANR	524955	Identifier	A_PUBLIC		524943	0					
ANR	524956	Identifier	A_UPDATE		524943	1					
ANR	524957	CompoundStatement		3:72:92:92	524943	1					
ANR	524958	ReturnStatement	return 0 ;	1232:2:32793:32801	524943	0	True				
ANR	524959	PrimaryExpression	0		524943	0					
ANR	524960	ReturnStatement	"return extra_ads . Publish ( resAd , r_id ) ;"	1235:1:32808:32847	524943	1	True				
ANR	524961	CallExpression	"extra_ads . Publish ( resAd , r_id )"		524943	0					
ANR	524962	Callee	extra_ads . Publish		524943	0					
ANR	524963	MemberAccess	extra_ads . Publish		524943	0					
ANR	524964	Identifier	extra_ads		524943	0					
ANR	524965	Identifier	Publish		524943	1					
ANR	524966	ArgumentList	resAd		524943	1					
ANR	524967	Argument	resAd		524943	0					
ANR	524968	Identifier	resAd		524943	0					
ANR	524969	Argument	r_id		524943	1					
ANR	524970	Identifier	r_id		524943	0					
ANR	524971	ReturnType	int		524943	1					
ANR	524972	Identifier	ResMgr :: adlist_publish		524943	2					
ANR	524973	ParameterList	"unsigned r_id , ClassAd * resAd , amask_t mask"		524943	3					
ANR	524974	Parameter	unsigned r_id	1228:24:32650:32662	524943	0	True				
ANR	524975	ParameterType	unsigned		524943	0					
ANR	524976	Identifier	r_id		524943	1					
ANR	524977	Parameter	ClassAd * resAd	1228:39:32665:32678	524943	1	True				
ANR	524978	ParameterType	ClassAd *		524943	0					
ANR	524979	Identifier	resAd		524943	1					
ANR	524980	Parameter	amask_t mask	1228:55:32681:32692	524943	2	True				
ANR	524981	ParameterType	amask_t		524943	0					
ANR	524982	Identifier	mask		524943	1					
ANR	524983	CFGEntryNode	ENTRY		524943		True				
ANR	524984	CFGExitNode	EXIT		524943		True				
ANR	524985	Symbol	resAd		524943						
ANR	524986	Symbol	A_UPDATE		524943						
ANR	524987	Symbol	A_PUBLIC		524943						
ANR	524988	Symbol	extra_ads		524943						
ANR	524989	Symbol	r_id		524943						
ANR	524990	Symbol	extra_ads . Publish		524943						
ANR	524991	Symbol	mask		524943						
ANR	524992	Function	ResMgr :: needsPolling	1239:0:32853:33051							
ANR	524993	FunctionDef	ResMgr :: needsPolling ()		524992	0					
ANR	524994	CompoundStatement		1241:0:32887:33051	524992	0					
ANR	524995	IfStatement	if ( ! resources )		524992	0					
ANR	524996	Condition	! resources	1242:5:32894:32904	524992	0	True				
ANR	524997	UnaryOperationExpression	! resources		524992	0					
ANR	524998	UnaryOperator	!		524992	0					
ANR	524999	Identifier	resources		524992	1					
ANR	525000	CompoundStatement		2:19:20:20	524992	1					
ANR	525001	ReturnStatement	return false ;	1243:2:32912:32924	524992	0	True				
ANR	525002	Identifier	false		524992	0					
ANR	525003	IdentifierDeclStatement	int i ;	1245:1:32930:32935	524992	1	True				
ANR	525004	IdentifierDecl	i		524992	0					
ANR	525005	IdentifierDeclType	int		524992	0					
ANR	525006	Identifier	i		524992	1					
ANR	525007	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		524992	2					
ANR	525008	ForInit	i = 0 ;	1246:6:32943:32948	524992	0	True				
ANR	525009	AssignmentExpression	i = 0		524992	0		=			
ANR	525010	Identifier	i		524992	0					
ANR	525011	PrimaryExpression	0		524992	1					
ANR	525012	Condition	i < nresources	1246:13:32950:32963	524992	1	True				
ANR	525013	RelationalExpression	i < nresources		524992	0		<			
ANR	525014	Identifier	i		524992	0					
ANR	525015	Identifier	nresources		524992	1					
ANR	525016	PostIncDecOperationExpression	i ++	1246:29:32966:32968	524992	2	True				
ANR	525017	Identifier	i		524992	0					
ANR	525018	IncDec	++		524992	1					
ANR	525019	CompoundStatement		6:35:84:84	524992	3					
ANR	525020	IfStatement	if ( resources [ i ] -> needsPolling ( ) )		524992	0					
ANR	525021	Condition	resources [ i ] -> needsPolling ( )	1247:6:32980:33007	524992	0	True				
ANR	525022	CallExpression	resources [ i ] -> needsPolling ( )		524992	0					
ANR	525023	Callee	resources [ i ] -> needsPolling		524992	0					
ANR	525024	PtrMemberAccess	resources [ i ] -> needsPolling		524992	0					
ANR	525025	ArrayIndexing	resources [ i ]		524992	0					
ANR	525026	Identifier	resources		524992	0					
ANR	525027	Identifier	i		524992	1					
ANR	525028	Identifier	needsPolling		524992	1					
ANR	525029	ArgumentList			524992	1					
ANR	525030	CompoundStatement		7:37:123:123	524992	1					
ANR	525031	ReturnStatement	return true ;	1248:3:33016:33027	524992	0	True				
ANR	525032	Identifier	true		524992	0					
ANR	525033	ReturnStatement	return false ;	1251:1:33037:33049	524992	3	True				
ANR	525034	Identifier	false		524992	0					
ANR	525035	ReturnType	bool		524992	1					
ANR	525036	Identifier	ResMgr :: needsPolling		524992	2					
ANR	525037	ParameterList			524992	3					
ANR	525038	CFGEntryNode	ENTRY		524992		True				
ANR	525039	CFGExitNode	EXIT		524992		True				
ANR	525040	Symbol	* * i		524992						
ANR	525041	Symbol	* i		524992						
ANR	525042	Symbol	resources [ i ] -> needsPolling		524992						
ANR	525043	Symbol	false		524992						
ANR	525044	Symbol	true		524992						
ANR	525045	Symbol	resources		524992						
ANR	525046	Symbol	i		524992						
ANR	525047	Symbol	* * resources		524992						
ANR	525048	Symbol	nresources		524992						
ANR	525049	Symbol	* resources		524992						
ANR	525050	Function	ResMgr :: hasAnyClaim	1255:0:33055:33251							
ANR	525051	FunctionDef	ResMgr :: hasAnyClaim ()		525050	0					
ANR	525052	CompoundStatement		1257:0:33088:33251	525050	0					
ANR	525053	IfStatement	if ( ! resources )		525050	0					
ANR	525054	Condition	! resources	1258:5:33095:33105	525050	0	True				
ANR	525055	UnaryOperationExpression	! resources		525050	0					
ANR	525056	UnaryOperator	!		525050	0					
ANR	525057	Identifier	resources		525050	1					
ANR	525058	CompoundStatement		2:19:20:20	525050	1					
ANR	525059	ReturnStatement	return false ;	1259:2:33113:33125	525050	0	True				
ANR	525060	Identifier	false		525050	0					
ANR	525061	IdentifierDeclStatement	int i ;	1261:1:33131:33136	525050	1	True				
ANR	525062	IdentifierDecl	i		525050	0					
ANR	525063	IdentifierDeclType	int		525050	0					
ANR	525064	Identifier	i		525050	1					
ANR	525065	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525050	2					
ANR	525066	ForInit	i = 0 ;	1262:6:33144:33149	525050	0	True				
ANR	525067	AssignmentExpression	i = 0		525050	0		=			
ANR	525068	Identifier	i		525050	0					
ANR	525069	PrimaryExpression	0		525050	1					
ANR	525070	Condition	i < nresources	1262:13:33151:33164	525050	1	True				
ANR	525071	RelationalExpression	i < nresources		525050	0		<			
ANR	525072	Identifier	i		525050	0					
ANR	525073	Identifier	nresources		525050	1					
ANR	525074	PostIncDecOperationExpression	i ++	1262:29:33167:33169	525050	2	True				
ANR	525075	Identifier	i		525050	0					
ANR	525076	IncDec	++		525050	1					
ANR	525077	CompoundStatement		6:35:84:84	525050	3					
ANR	525078	IfStatement	if ( resources [ i ] -> hasAnyClaim ( ) )		525050	0					
ANR	525079	Condition	resources [ i ] -> hasAnyClaim ( )	1263:6:33181:33207	525050	0	True				
ANR	525080	CallExpression	resources [ i ] -> hasAnyClaim ( )		525050	0					
ANR	525081	Callee	resources [ i ] -> hasAnyClaim		525050	0					
ANR	525082	PtrMemberAccess	resources [ i ] -> hasAnyClaim		525050	0					
ANR	525083	ArrayIndexing	resources [ i ]		525050	0					
ANR	525084	Identifier	resources		525050	0					
ANR	525085	Identifier	i		525050	1					
ANR	525086	Identifier	hasAnyClaim		525050	1					
ANR	525087	ArgumentList			525050	1					
ANR	525088	CompoundStatement		7:36:122:122	525050	1					
ANR	525089	ReturnStatement	return true ;	1264:3:33216:33227	525050	0	True				
ANR	525090	Identifier	true		525050	0					
ANR	525091	ReturnStatement	return false ;	1267:1:33237:33249	525050	3	True				
ANR	525092	Identifier	false		525050	0					
ANR	525093	ReturnType	bool		525050	1					
ANR	525094	Identifier	ResMgr :: hasAnyClaim		525050	2					
ANR	525095	ParameterList			525050	3					
ANR	525096	CFGEntryNode	ENTRY		525050		True				
ANR	525097	CFGExitNode	EXIT		525050		True				
ANR	525098	Symbol	* * i		525050						
ANR	525099	Symbol	resources [ i ] -> hasAnyClaim		525050						
ANR	525100	Symbol	* i		525050						
ANR	525101	Symbol	false		525050						
ANR	525102	Symbol	true		525050						
ANR	525103	Symbol	resources		525050						
ANR	525104	Symbol	i		525050						
ANR	525105	Symbol	* * resources		525050						
ANR	525106	Symbol	nresources		525050						
ANR	525107	Symbol	* resources		525050						
ANR	525108	Function	ResMgr :: getClaimByPid	1271:0:33255:33491							
ANR	525109	FunctionDef	ResMgr :: getClaimByPid (pid_t pid)		525108	0					
ANR	525110	CompoundStatement		1273:0:33297:33491	525108	0					
ANR	525111	IdentifierDeclStatement	Claim * foo = NULL ;	1274:1:33300:33317	525108	0	True				
ANR	525112	IdentifierDecl	* foo = NULL		525108	0					
ANR	525113	IdentifierDeclType	Claim *		525108	0					
ANR	525114	Identifier	foo		525108	1					
ANR	525115	AssignmentExpression	* foo = NULL		525108	2		=			
ANR	525116	Identifier	NULL		525108	0					
ANR	525117	Identifier	NULL		525108	1					
ANR	525118	IfStatement	if ( ! resources )		525108	1					
ANR	525119	Condition	! resources	1275:5:33324:33334	525108	0	True				
ANR	525120	UnaryOperationExpression	! resources		525108	0					
ANR	525121	UnaryOperator	!		525108	0					
ANR	525122	Identifier	resources		525108	1					
ANR	525123	CompoundStatement		3:19:40:40	525108	1					
ANR	525124	ReturnStatement	return NULL ;	1276:2:33342:33353	525108	0	True				
ANR	525125	Identifier	NULL		525108	0					
ANR	525126	IdentifierDeclStatement	int i ;	1278:1:33359:33364	525108	2	True				
ANR	525127	IdentifierDecl	i		525108	0					
ANR	525128	IdentifierDeclType	int		525108	0					
ANR	525129	Identifier	i		525108	1					
ANR	525130	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525108	3					
ANR	525131	ForInit	i = 0 ;	1279:6:33372:33377	525108	0	True				
ANR	525132	AssignmentExpression	i = 0		525108	0		=			
ANR	525133	Identifier	i		525108	0					
ANR	525134	PrimaryExpression	0		525108	1					
ANR	525135	Condition	i < nresources	1279:13:33379:33392	525108	1	True				
ANR	525136	RelationalExpression	i < nresources		525108	0		<			
ANR	525137	Identifier	i		525108	0					
ANR	525138	Identifier	nresources		525108	1					
ANR	525139	PostIncDecOperationExpression	i ++	1279:29:33395:33397	525108	2	True				
ANR	525140	Identifier	i		525108	0					
ANR	525141	IncDec	++		525108	1					
ANR	525142	CompoundStatement		7:35:103:103	525108	3					
ANR	525143	IfStatement	if ( ( foo = resources [ i ] -> findClaimByPid ( pid ) ) )		525108	0					
ANR	525144	Condition	foo = resources [ i ] -> findClaimByPid ( pid )	1280:6:33409:33449	525108	0	True				
ANR	525145	AssignmentExpression	foo = resources [ i ] -> findClaimByPid ( pid )		525108	0		=			
ANR	525146	Identifier	foo		525108	0					
ANR	525147	CallExpression	resources [ i ] -> findClaimByPid ( pid )		525108	1					
ANR	525148	Callee	resources [ i ] -> findClaimByPid		525108	0					
ANR	525149	PtrMemberAccess	resources [ i ] -> findClaimByPid		525108	0					
ANR	525150	ArrayIndexing	resources [ i ]		525108	0					
ANR	525151	Identifier	resources		525108	0					
ANR	525152	Identifier	i		525108	1					
ANR	525153	Identifier	findClaimByPid		525108	1					
ANR	525154	ArgumentList	pid		525108	1					
ANR	525155	Argument	pid		525108	0					
ANR	525156	Identifier	pid		525108	0					
ANR	525157	CompoundStatement		8:50:155:155	525108	1					
ANR	525158	ReturnStatement	return foo ;	1281:3:33458:33468	525108	0	True				
ANR	525159	Identifier	foo		525108	0					
ANR	525160	ReturnStatement	return NULL ;	1284:1:33478:33489	525108	4	True				
ANR	525161	Identifier	NULL		525108	0					
ANR	525162	ReturnType	Claim *		525108	1					
ANR	525163	Identifier	ResMgr :: getClaimByPid		525108	2					
ANR	525164	ParameterList	pid_t pid		525108	3					
ANR	525165	Parameter	pid_t pid	1272:23:33285:33293	525108	0	True				
ANR	525166	ParameterType	pid_t		525108	0					
ANR	525167	Identifier	pid		525108	1					
ANR	525168	CFGEntryNode	ENTRY		525108		True				
ANR	525169	CFGExitNode	EXIT		525108		True				
ANR	525170	Symbol	resources [ i ] -> findClaimByPid		525108						
ANR	525171	Symbol	* * i		525108						
ANR	525172	Symbol	NULL		525108						
ANR	525173	Symbol	* i		525108						
ANR	525174	Symbol	foo		525108						
ANR	525175	Symbol	resources		525108						
ANR	525176	Symbol	i		525108						
ANR	525177	Symbol	pid		525108						
ANR	525178	Symbol	* * resources		525108						
ANR	525179	Symbol	nresources		525108						
ANR	525180	Symbol	* resources		525108						
ANR	525181	Function	ResMgr :: getClaimById	1288:0:33495:33733							
ANR	525182	FunctionDef	ResMgr :: getClaimById (const char * id)		525181	0					
ANR	525183	CompoundStatement		1290:0:33541:33733	525181	0					
ANR	525184	IdentifierDeclStatement	Claim * foo = NULL ;	1291:1:33544:33561	525181	0	True				
ANR	525185	IdentifierDecl	* foo = NULL		525181	0					
ANR	525186	IdentifierDeclType	Claim *		525181	0					
ANR	525187	Identifier	foo		525181	1					
ANR	525188	AssignmentExpression	* foo = NULL		525181	2		=			
ANR	525189	Identifier	NULL		525181	0					
ANR	525190	Identifier	NULL		525181	1					
ANR	525191	IfStatement	if ( ! resources )		525181	1					
ANR	525192	Condition	! resources	1292:5:33568:33578	525181	0	True				
ANR	525193	UnaryOperationExpression	! resources		525181	0					
ANR	525194	UnaryOperator	!		525181	0					
ANR	525195	Identifier	resources		525181	1					
ANR	525196	CompoundStatement		3:19:40:40	525181	1					
ANR	525197	ReturnStatement	return NULL ;	1293:2:33586:33597	525181	0	True				
ANR	525198	Identifier	NULL		525181	0					
ANR	525199	IdentifierDeclStatement	int i ;	1295:1:33603:33608	525181	2	True				
ANR	525200	IdentifierDecl	i		525181	0					
ANR	525201	IdentifierDeclType	int		525181	0					
ANR	525202	Identifier	i		525181	1					
ANR	525203	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525181	3					
ANR	525204	ForInit	i = 0 ;	1296:6:33616:33621	525181	0	True				
ANR	525205	AssignmentExpression	i = 0		525181	0		=			
ANR	525206	Identifier	i		525181	0					
ANR	525207	PrimaryExpression	0		525181	1					
ANR	525208	Condition	i < nresources	1296:13:33623:33636	525181	1	True				
ANR	525209	RelationalExpression	i < nresources		525181	0		<			
ANR	525210	Identifier	i		525181	0					
ANR	525211	Identifier	nresources		525181	1					
ANR	525212	PostIncDecOperationExpression	i ++	1296:29:33639:33641	525181	2	True				
ANR	525213	Identifier	i		525181	0					
ANR	525214	IncDec	++		525181	1					
ANR	525215	CompoundStatement		7:35:103:103	525181	3					
ANR	525216	IfStatement	if ( ( foo = resources [ i ] -> findClaimById ( id ) ) )		525181	0					
ANR	525217	Condition	foo = resources [ i ] -> findClaimById ( id )	1297:6:33653:33691	525181	0	True				
ANR	525218	AssignmentExpression	foo = resources [ i ] -> findClaimById ( id )		525181	0		=			
ANR	525219	Identifier	foo		525181	0					
ANR	525220	CallExpression	resources [ i ] -> findClaimById ( id )		525181	1					
ANR	525221	Callee	resources [ i ] -> findClaimById		525181	0					
ANR	525222	PtrMemberAccess	resources [ i ] -> findClaimById		525181	0					
ANR	525223	ArrayIndexing	resources [ i ]		525181	0					
ANR	525224	Identifier	resources		525181	0					
ANR	525225	Identifier	i		525181	1					
ANR	525226	Identifier	findClaimById		525181	1					
ANR	525227	ArgumentList	id		525181	1					
ANR	525228	Argument	id		525181	0					
ANR	525229	Identifier	id		525181	0					
ANR	525230	CompoundStatement		8:48:153:153	525181	1					
ANR	525231	ReturnStatement	return foo ;	1298:3:33700:33710	525181	0	True				
ANR	525232	Identifier	foo		525181	0					
ANR	525233	ReturnStatement	return NULL ;	1301:1:33720:33731	525181	4	True				
ANR	525234	Identifier	NULL		525181	0					
ANR	525235	ReturnType	Claim *		525181	1					
ANR	525236	Identifier	ResMgr :: getClaimById		525181	2					
ANR	525237	ParameterList	const char * id		525181	3					
ANR	525238	Parameter	const char * id	1289:22:33524:33537	525181	0	True				
ANR	525239	ParameterType	const char *		525181	0					
ANR	525240	Identifier	id		525181	1					
ANR	525241	CFGEntryNode	ENTRY		525181		True				
ANR	525242	CFGExitNode	EXIT		525181		True				
ANR	525243	Symbol	resources [ i ] -> findClaimById		525181						
ANR	525244	Symbol	* * i		525181						
ANR	525245	Symbol	NULL		525181						
ANR	525246	Symbol	* i		525181						
ANR	525247	Symbol	foo		525181						
ANR	525248	Symbol	resources		525181						
ANR	525249	Symbol	i		525181						
ANR	525250	Symbol	* * resources		525181						
ANR	525251	Symbol	id		525181						
ANR	525252	Symbol	nresources		525181						
ANR	525253	Symbol	* resources		525181						
ANR	525254	Function	ResMgr :: getClaimByGlobalJobId	1305:0:33737:33993							
ANR	525255	FunctionDef	ResMgr :: getClaimByGlobalJobId (const char * id)		525254	0					
ANR	525256	CompoundStatement		1307:0:33792:33993	525254	0					
ANR	525257	IdentifierDeclStatement	Claim * foo = NULL ;	1308:1:33795:33812	525254	0	True				
ANR	525258	IdentifierDecl	* foo = NULL		525254	0					
ANR	525259	IdentifierDeclType	Claim *		525254	0					
ANR	525260	Identifier	foo		525254	1					
ANR	525261	AssignmentExpression	* foo = NULL		525254	2		=			
ANR	525262	Identifier	NULL		525254	0					
ANR	525263	Identifier	NULL		525254	1					
ANR	525264	IfStatement	if ( ! resources )		525254	1					
ANR	525265	Condition	! resources	1309:5:33819:33829	525254	0	True				
ANR	525266	UnaryOperationExpression	! resources		525254	0					
ANR	525267	UnaryOperator	!		525254	0					
ANR	525268	Identifier	resources		525254	1					
ANR	525269	CompoundStatement		3:19:40:40	525254	1					
ANR	525270	ReturnStatement	return NULL ;	1310:2:33837:33848	525254	0	True				
ANR	525271	Identifier	NULL		525254	0					
ANR	525272	IdentifierDeclStatement	int i ;	1312:1:33854:33859	525254	2	True				
ANR	525273	IdentifierDecl	i		525254	0					
ANR	525274	IdentifierDeclType	int		525254	0					
ANR	525275	Identifier	i		525254	1					
ANR	525276	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525254	3					
ANR	525277	ForInit	i = 0 ;	1313:6:33867:33872	525254	0	True				
ANR	525278	AssignmentExpression	i = 0		525254	0		=			
ANR	525279	Identifier	i		525254	0					
ANR	525280	PrimaryExpression	0		525254	1					
ANR	525281	Condition	i < nresources	1313:13:33874:33887	525254	1	True				
ANR	525282	RelationalExpression	i < nresources		525254	0		<			
ANR	525283	Identifier	i		525254	0					
ANR	525284	Identifier	nresources		525254	1					
ANR	525285	PostIncDecOperationExpression	i ++	1313:29:33890:33892	525254	2	True				
ANR	525286	Identifier	i		525254	0					
ANR	525287	IncDec	++		525254	1					
ANR	525288	CompoundStatement		7:35:103:103	525254	3					
ANR	525289	IfStatement	if ( ( foo = resources [ i ] -> findClaimByGlobalJobId ( id ) ) )		525254	0					
ANR	525290	Condition	foo = resources [ i ] -> findClaimByGlobalJobId ( id )	1314:6:33904:33951	525254	0	True				
ANR	525291	AssignmentExpression	foo = resources [ i ] -> findClaimByGlobalJobId ( id )		525254	0		=			
ANR	525292	Identifier	foo		525254	0					
ANR	525293	CallExpression	resources [ i ] -> findClaimByGlobalJobId ( id )		525254	1					
ANR	525294	Callee	resources [ i ] -> findClaimByGlobalJobId		525254	0					
ANR	525295	PtrMemberAccess	resources [ i ] -> findClaimByGlobalJobId		525254	0					
ANR	525296	ArrayIndexing	resources [ i ]		525254	0					
ANR	525297	Identifier	resources		525254	0					
ANR	525298	Identifier	i		525254	1					
ANR	525299	Identifier	findClaimByGlobalJobId		525254	1					
ANR	525300	ArgumentList	id		525254	1					
ANR	525301	Argument	id		525254	0					
ANR	525302	Identifier	id		525254	0					
ANR	525303	CompoundStatement		8:57:162:162	525254	1					
ANR	525304	ReturnStatement	return foo ;	1315:3:33960:33970	525254	0	True				
ANR	525305	Identifier	foo		525254	0					
ANR	525306	ReturnStatement	return NULL ;	1318:1:33980:33991	525254	4	True				
ANR	525307	Identifier	NULL		525254	0					
ANR	525308	ReturnType	Claim *		525254	1					
ANR	525309	Identifier	ResMgr :: getClaimByGlobalJobId		525254	2					
ANR	525310	ParameterList	const char * id		525254	3					
ANR	525311	Parameter	const char * id	1306:31:33775:33788	525254	0	True				
ANR	525312	ParameterType	const char *		525254	0					
ANR	525313	Identifier	id		525254	1					
ANR	525314	CFGEntryNode	ENTRY		525254		True				
ANR	525315	CFGExitNode	EXIT		525254		True				
ANR	525316	Symbol	resources [ i ] -> findClaimByGlobalJobId		525254						
ANR	525317	Symbol	* * i		525254						
ANR	525318	Symbol	NULL		525254						
ANR	525319	Symbol	* i		525254						
ANR	525320	Symbol	foo		525254						
ANR	525321	Symbol	resources		525254						
ANR	525322	Symbol	i		525254						
ANR	525323	Symbol	* * resources		525254						
ANR	525324	Symbol	id		525254						
ANR	525325	Symbol	nresources		525254						
ANR	525326	Symbol	* resources		525254						
ANR	525327	Function	ResMgr :: getClaimByGlobalJobIdAndId	1321:0:33996:34357							
ANR	525328	FunctionDef	"ResMgr :: getClaimByGlobalJobIdAndId (const char * job_id , const char * claimId)"		525327	0					
ANR	525329	CompoundStatement		1324:0:34090:34357	525327	0					
ANR	525330	IdentifierDeclStatement	Claim * foo = NULL ;	1325:1:34093:34110	525327	0	True				
ANR	525331	IdentifierDecl	* foo = NULL		525327	0					
ANR	525332	IdentifierDeclType	Claim *		525327	0					
ANR	525333	Identifier	foo		525327	1					
ANR	525334	AssignmentExpression	* foo = NULL		525327	2		=			
ANR	525335	Identifier	NULL		525327	0					
ANR	525336	Identifier	NULL		525327	1					
ANR	525337	IfStatement	if ( ! resources )		525327	1					
ANR	525338	Condition	! resources	1326:5:34117:34127	525327	0	True				
ANR	525339	UnaryOperationExpression	! resources		525327	0					
ANR	525340	UnaryOperator	!		525327	0					
ANR	525341	Identifier	resources		525327	1					
ANR	525342	CompoundStatement		3:19:40:40	525327	1					
ANR	525343	ReturnStatement	return NULL ;	1327:2:34135:34146	525327	0	True				
ANR	525344	Identifier	NULL		525327	0					
ANR	525345	IdentifierDeclStatement	int i ;	1329:1:34152:34157	525327	2	True				
ANR	525346	IdentifierDecl	i		525327	0					
ANR	525347	IdentifierDeclType	int		525327	0					
ANR	525348	Identifier	i		525327	1					
ANR	525349	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525327	3					
ANR	525350	ForInit	i = 0 ;	1330:6:34165:34170	525327	0	True				
ANR	525351	AssignmentExpression	i = 0		525327	0		=			
ANR	525352	Identifier	i		525327	0					
ANR	525353	PrimaryExpression	0		525327	1					
ANR	525354	Condition	i < nresources	1330:13:34172:34185	525327	1	True				
ANR	525355	RelationalExpression	i < nresources		525327	0		<			
ANR	525356	Identifier	i		525327	0					
ANR	525357	Identifier	nresources		525327	1					
ANR	525358	PostIncDecOperationExpression	i ++	1330:29:34188:34190	525327	2	True				
ANR	525359	Identifier	i		525327	0					
ANR	525360	IncDec	++		525327	1					
ANR	525361	CompoundStatement		7:35:103:103	525327	3					
ANR	525362	IfStatement	if ( ( foo = resources [ i ] -> findClaimByGlobalJobId ( job_id ) ) )		525327	0					
ANR	525363	Condition	foo = resources [ i ] -> findClaimByGlobalJobId ( job_id )	1331:6:34202:34253	525327	0	True				
ANR	525364	AssignmentExpression	foo = resources [ i ] -> findClaimByGlobalJobId ( job_id )		525327	0		=			
ANR	525365	Identifier	foo		525327	0					
ANR	525366	CallExpression	resources [ i ] -> findClaimByGlobalJobId ( job_id )		525327	1					
ANR	525367	Callee	resources [ i ] -> findClaimByGlobalJobId		525327	0					
ANR	525368	PtrMemberAccess	resources [ i ] -> findClaimByGlobalJobId		525327	0					
ANR	525369	ArrayIndexing	resources [ i ]		525327	0					
ANR	525370	Identifier	resources		525327	0					
ANR	525371	Identifier	i		525327	1					
ANR	525372	Identifier	findClaimByGlobalJobId		525327	1					
ANR	525373	ArgumentList	job_id		525327	1					
ANR	525374	Argument	job_id		525327	0					
ANR	525375	Identifier	job_id		525327	0					
ANR	525376	CompoundStatement		8:61:166:166	525327	1					
ANR	525377	IfStatement	if ( foo == resources [ i ] -> findClaimById ( claimId ) )		525327	0					
ANR	525378	Condition	foo == resources [ i ] -> findClaimById ( claimId )	1332:7:34266:34308	525327	0	True				
ANR	525379	EqualityExpression	foo == resources [ i ] -> findClaimById ( claimId )		525327	0		==			
ANR	525380	Identifier	foo		525327	0					
ANR	525381	CallExpression	resources [ i ] -> findClaimById ( claimId )		525327	1					
ANR	525382	Callee	resources [ i ] -> findClaimById		525327	0					
ANR	525383	PtrMemberAccess	resources [ i ] -> findClaimById		525327	0					
ANR	525384	ArrayIndexing	resources [ i ]		525327	0					
ANR	525385	Identifier	resources		525327	0					
ANR	525386	Identifier	i		525327	1					
ANR	525387	Identifier	findClaimById		525327	1					
ANR	525388	ArgumentList	claimId		525327	1					
ANR	525389	Argument	claimId		525327	0					
ANR	525390	Identifier	claimId		525327	0					
ANR	525391	CompoundStatement		9:53:221:221	525327	1					
ANR	525392	ReturnStatement	return foo ;	1333:4:34318:34328	525327	0	True				
ANR	525393	Identifier	foo		525327	0					
ANR	525394	ReturnStatement	return NULL ;	1337:1:34343:34354	525327	4	True				
ANR	525395	Identifier	NULL		525327	0					
ANR	525396	ReturnType	Claim *		525327	1					
ANR	525397	Identifier	ResMgr :: getClaimByGlobalJobIdAndId		525327	2					
ANR	525398	ParameterList	"const char * job_id , const char * claimId"		525327	3					
ANR	525399	Parameter	const char * job_id	1322:36:34040:34057	525327	0	True				
ANR	525400	ParameterType	const char *		525327	0					
ANR	525401	Identifier	job_id		525327	1					
ANR	525402	Parameter	const char * claimId	1323:9:34069:34087	525327	1	True				
ANR	525403	ParameterType	const char *		525327	0					
ANR	525404	Identifier	claimId		525327	1					
ANR	525405	CFGEntryNode	ENTRY		525327		True				
ANR	525406	CFGExitNode	EXIT		525327		True				
ANR	525407	Symbol	resources [ i ] -> findClaimByGlobalJobId		525327						
ANR	525408	Symbol	* * i		525327						
ANR	525409	Symbol	NULL		525327						
ANR	525410	Symbol	foo		525327						
ANR	525411	Symbol	resources		525327						
ANR	525412	Symbol	i		525327						
ANR	525413	Symbol	* * resources		525327						
ANR	525414	Symbol	claimId		525327						
ANR	525415	Symbol	nresources		525327						
ANR	525416	Symbol	* resources		525327						
ANR	525417	Symbol	resources [ i ] -> findClaimById		525327						
ANR	525418	Symbol	* i		525327						
ANR	525419	Symbol	job_id		525327						
ANR	525420	Function	ResMgr :: findRipForNewCOD	1342:0:34361:35331							
ANR	525421	FunctionDef	ResMgr :: findRipForNewCOD (ClassAd * ad)		525420	0					
ANR	525422	CompoundStatement		1344:0:34411:35331	525420	0					
ANR	525423	IfStatement	if ( ! resources )		525420	0					
ANR	525424	Condition	! resources	1345:5:34418:34428	525420	0	True				
ANR	525425	UnaryOperationExpression	! resources		525420	0					
ANR	525426	UnaryOperator	!		525420	0					
ANR	525427	Identifier	resources		525420	1					
ANR	525428	CompoundStatement		2:19:20:20	525420	1					
ANR	525429	ReturnStatement	return NULL ;	1346:2:34436:34447	525420	0	True				
ANR	525430	Identifier	NULL		525420	0					
ANR	525431	IdentifierDeclStatement	int requirements ;	1348:1:34453:34469	525420	1	True				
ANR	525432	IdentifierDecl	requirements		525420	0					
ANR	525433	IdentifierDeclType	int		525420	0					
ANR	525434	Identifier	requirements		525420	1					
ANR	525435	IdentifierDeclStatement	int i ;	1349:1:34472:34477	525420	2	True				
ANR	525436	IdentifierDecl	i		525420	0					
ANR	525437	IdentifierDeclType	int		525420	0					
ANR	525438	Identifier	i		525420	1					
ANR	525439	ExpressionStatement	resource_sort ( newCODClaimCmp )	1365:1:35017:35048	525420	3	True				
ANR	525440	CallExpression	resource_sort ( newCODClaimCmp )		525420	0					
ANR	525441	Callee	resource_sort		525420	0					
ANR	525442	Identifier	resource_sort		525420	0					
ANR	525443	ArgumentList	newCODClaimCmp		525420	1					
ANR	525444	Argument	newCODClaimCmp		525420	0					
ANR	525445	Identifier	newCODClaimCmp		525420	0					
ANR	525446	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525420	4					
ANR	525447	ForInit	i = 0 ;	1368:6:35111:35116	525420	0	True				
ANR	525448	AssignmentExpression	i = 0		525420	0		=			
ANR	525449	Identifier	i		525420	0					
ANR	525450	PrimaryExpression	0		525420	1					
ANR	525451	Condition	i < nresources	1368:13:35118:35131	525420	1	True				
ANR	525452	RelationalExpression	i < nresources		525420	0		<			
ANR	525453	Identifier	i		525420	0					
ANR	525454	Identifier	nresources		525420	1					
ANR	525455	PostIncDecOperationExpression	i ++	1368:29:35134:35136	525420	2	True				
ANR	525456	Identifier	i		525420	0					
ANR	525457	IncDec	++		525420	1					
ANR	525458	CompoundStatement		25:35:728:728	525420	3					
ANR	525459	IfStatement	"if ( ad -> EvalBool ( ATTR_REQUIREMENTS , resources [ i ] -> r_classad , requirements ) == 0 )"		525420	0					
ANR	525460	Condition	"ad -> EvalBool ( ATTR_REQUIREMENTS , resources [ i ] -> r_classad , requirements ) == 0"	1369:6:35148:35232	525420	0	True				
ANR	525461	EqualityExpression	"ad -> EvalBool ( ATTR_REQUIREMENTS , resources [ i ] -> r_classad , requirements ) == 0"		525420	0		==			
ANR	525462	CallExpression	"ad -> EvalBool ( ATTR_REQUIREMENTS , resources [ i ] -> r_classad , requirements )"		525420	0					
ANR	525463	Callee	ad -> EvalBool		525420	0					
ANR	525464	PtrMemberAccess	ad -> EvalBool		525420	0					
ANR	525465	Identifier	ad		525420	0					
ANR	525466	Identifier	EvalBool		525420	1					
ANR	525467	ArgumentList	ATTR_REQUIREMENTS		525420	1					
ANR	525468	Argument	ATTR_REQUIREMENTS		525420	0					
ANR	525469	Identifier	ATTR_REQUIREMENTS		525420	0					
ANR	525470	Argument	resources [ i ] -> r_classad		525420	1					
ANR	525471	PtrMemberAccess	resources [ i ] -> r_classad		525420	0					
ANR	525472	ArrayIndexing	resources [ i ]		525420	0					
ANR	525473	Identifier	resources		525420	0					
ANR	525474	Identifier	i		525420	1					
ANR	525475	Identifier	r_classad		525420	1					
ANR	525476	Argument	requirements		525420	2					
ANR	525477	Identifier	requirements		525420	0					
ANR	525478	PrimaryExpression	0		525420	1					
ANR	525479	CompoundStatement		27:30:824:824	525420	1					
ANR	525480	ExpressionStatement	requirements = 0	1371:3:35241:35257	525420	0	True				
ANR	525481	AssignmentExpression	requirements = 0		525420	0		=			
ANR	525482	Identifier	requirements		525420	0					
ANR	525483	PrimaryExpression	0		525420	1					
ANR	525484	IfStatement	if ( requirements )		525420	1					
ANR	525485	Condition	requirements	1373:6:35269:35280	525420	0	True				
ANR	525486	Identifier	requirements		525420	0					
ANR	525487	CompoundStatement		30:21:872:872	525420	1					
ANR	525488	ReturnStatement	return resources [ i ] ;	1374:3:35289:35308	525420	0	True				
ANR	525489	ArrayIndexing	resources [ i ]		525420	0					
ANR	525490	Identifier	resources		525420	0					
ANR	525491	Identifier	i		525420	1					
ANR	525492	ReturnStatement	return NULL ;	1377:1:35318:35329	525420	5	True				
ANR	525493	Identifier	NULL		525420	0					
ANR	525494	ReturnType	Resource *		525420	1					
ANR	525495	Identifier	ResMgr :: findRipForNewCOD		525420	2					
ANR	525496	ParameterList	ClassAd * ad		525420	3					
ANR	525497	Parameter	ClassAd * ad	1343:26:34397:34407	525420	0	True				
ANR	525498	ParameterType	ClassAd *		525420	0					
ANR	525499	Identifier	ad		525420	1					
ANR	525500	CFGEntryNode	ENTRY		525420		True				
ANR	525501	CFGExitNode	EXIT		525420		True				
ANR	525502	Symbol	requirements		525420						
ANR	525503	Symbol	* * i		525420						
ANR	525504	Symbol	ad		525420						
ANR	525505	Symbol	NULL		525420						
ANR	525506	Symbol	resources [ i ] -> r_classad		525420						
ANR	525507	Symbol	ATTR_REQUIREMENTS		525420						
ANR	525508	Symbol	ad -> EvalBool		525420						
ANR	525509	Symbol	resources		525420						
ANR	525510	Symbol	i		525420						
ANR	525511	Symbol	* ad		525420						
ANR	525512	Symbol	* * resources		525420						
ANR	525513	Symbol	nresources		525420						
ANR	525514	Symbol	* resources		525420						
ANR	525515	Symbol	* i		525420						
ANR	525516	Symbol	newCODClaimCmp		525420						
ANR	525517	Function	ResMgr :: get_by_cur_id	1382:0:35336:35556							
ANR	525518	FunctionDef	ResMgr :: get_by_cur_id (char * id)		525517	0					
ANR	525519	CompoundStatement		1384:0:35380:35556	525517	0					
ANR	525520	IfStatement	if ( ! resources )		525517	0					
ANR	525521	Condition	! resources	1385:5:35387:35397	525517	0	True				
ANR	525522	UnaryOperationExpression	! resources		525517	0					
ANR	525523	UnaryOperator	!		525517	0					
ANR	525524	Identifier	resources		525517	1					
ANR	525525	CompoundStatement		2:19:20:20	525517	1					
ANR	525526	ReturnStatement	return NULL ;	1386:2:35405:35416	525517	0	True				
ANR	525527	Identifier	NULL		525517	0					
ANR	525528	IdentifierDeclStatement	int i ;	1388:1:35422:35427	525517	1	True				
ANR	525529	IdentifierDecl	i		525517	0					
ANR	525530	IdentifierDeclType	int		525517	0					
ANR	525531	Identifier	i		525517	1					
ANR	525532	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525517	2					
ANR	525533	ForInit	i = 0 ;	1389:6:35435:35440	525517	0	True				
ANR	525534	AssignmentExpression	i = 0		525517	0		=			
ANR	525535	Identifier	i		525517	0					
ANR	525536	PrimaryExpression	0		525517	1					
ANR	525537	Condition	i < nresources	1389:13:35442:35455	525517	1	True				
ANR	525538	RelationalExpression	i < nresources		525517	0		<			
ANR	525539	Identifier	i		525517	0					
ANR	525540	Identifier	nresources		525517	1					
ANR	525541	PostIncDecOperationExpression	i ++	1389:29:35458:35460	525517	2	True				
ANR	525542	Identifier	i		525517	0					
ANR	525543	IncDec	++		525517	1					
ANR	525544	CompoundStatement		6:35:83:83	525517	3					
ANR	525545	IfStatement	if ( resources [ i ] -> r_cur -> idMatches ( id ) )		525517	0					
ANR	525546	Condition	resources [ i ] -> r_cur -> idMatches ( id )	1390:6:35472:35505	525517	0	True				
ANR	525547	CallExpression	resources [ i ] -> r_cur -> idMatches ( id )		525517	0					
ANR	525548	Callee	resources [ i ] -> r_cur -> idMatches		525517	0					
ANR	525549	PtrMemberAccess	resources [ i ] -> r_cur -> idMatches		525517	0					
ANR	525550	PtrMemberAccess	resources [ i ] -> r_cur		525517	0					
ANR	525551	ArrayIndexing	resources [ i ]		525517	0					
ANR	525552	Identifier	resources		525517	0					
ANR	525553	Identifier	i		525517	1					
ANR	525554	Identifier	r_cur		525517	1					
ANR	525555	Identifier	idMatches		525517	1					
ANR	525556	ArgumentList	id		525517	1					
ANR	525557	Argument	id		525517	0					
ANR	525558	Identifier	id		525517	0					
ANR	525559	CompoundStatement		7:43:128:128	525517	1					
ANR	525560	ReturnStatement	return resources [ i ] ;	1391:3:35514:35533	525517	0	True				
ANR	525561	ArrayIndexing	resources [ i ]		525517	0					
ANR	525562	Identifier	resources		525517	0					
ANR	525563	Identifier	i		525517	1					
ANR	525564	ReturnStatement	return NULL ;	1394:1:35543:35554	525517	3	True				
ANR	525565	Identifier	NULL		525517	0					
ANR	525566	ReturnType	Resource *		525517	1					
ANR	525567	Identifier	ResMgr :: get_by_cur_id		525517	2					
ANR	525568	ParameterList	char * id		525517	3					
ANR	525569	Parameter	char * id	1383:23:35369:35376	525517	0	True				
ANR	525570	ParameterType	char *		525517	0					
ANR	525571	Identifier	id		525517	1					
ANR	525572	CFGEntryNode	ENTRY		525517		True				
ANR	525573	CFGExitNode	EXIT		525517		True				
ANR	525574	Symbol	* * i		525517						
ANR	525575	Symbol	resources [ i ] -> r_cur -> idMatches		525517						
ANR	525576	Symbol	NULL		525517						
ANR	525577	Symbol	resources		525517						
ANR	525578	Symbol	i		525517						
ANR	525579	Symbol	* * resources		525517						
ANR	525580	Symbol	* resources [ i ] -> r_cur		525517						
ANR	525581	Symbol	nresources		525517						
ANR	525582	Symbol	* * * resources		525517						
ANR	525583	Symbol	* resources		525517						
ANR	525584	Symbol	* i		525517						
ANR	525585	Symbol	resources [ i ] -> r_cur		525517						
ANR	525586	Symbol	* * * i		525517						
ANR	525587	Symbol	id		525517						
ANR	525588	Function	ResMgr :: get_by_any_id	1398:0:35560:35986							
ANR	525589	FunctionDef	ResMgr :: get_by_any_id (char * id)		525588	0					
ANR	525590	CompoundStatement		1400:0:35604:35986	525588	0					
ANR	525591	IfStatement	if ( ! resources )		525588	0					
ANR	525592	Condition	! resources	1401:5:35611:35621	525588	0	True				
ANR	525593	UnaryOperationExpression	! resources		525588	0					
ANR	525594	UnaryOperator	!		525588	0					
ANR	525595	Identifier	resources		525588	1					
ANR	525596	CompoundStatement		2:19:20:20	525588	1					
ANR	525597	ReturnStatement	return NULL ;	1402:2:35629:35640	525588	0	True				
ANR	525598	Identifier	NULL		525588	0					
ANR	525599	IdentifierDeclStatement	int i ;	1404:1:35646:35651	525588	1	True				
ANR	525600	IdentifierDecl	i		525588	0					
ANR	525601	IdentifierDeclType	int		525588	0					
ANR	525602	Identifier	i		525588	1					
ANR	525603	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525588	2					
ANR	525604	ForInit	i = 0 ;	1405:6:35659:35664	525588	0	True				
ANR	525605	AssignmentExpression	i = 0		525588	0		=			
ANR	525606	Identifier	i		525588	0					
ANR	525607	PrimaryExpression	0		525588	1					
ANR	525608	Condition	i < nresources	1405:13:35666:35679	525588	1	True				
ANR	525609	RelationalExpression	i < nresources		525588	0		<			
ANR	525610	Identifier	i		525588	0					
ANR	525611	Identifier	nresources		525588	1					
ANR	525612	PostIncDecOperationExpression	i ++	1405:29:35682:35684	525588	2	True				
ANR	525613	Identifier	i		525588	0					
ANR	525614	IncDec	++		525588	1					
ANR	525615	CompoundStatement		6:35:83:83	525588	3					
ANR	525616	IfStatement	if ( resources [ i ] -> r_cur -> idMatches ( id ) )		525588	0					
ANR	525617	Condition	resources [ i ] -> r_cur -> idMatches ( id )	1406:6:35696:35729	525588	0	True				
ANR	525618	CallExpression	resources [ i ] -> r_cur -> idMatches ( id )		525588	0					
ANR	525619	Callee	resources [ i ] -> r_cur -> idMatches		525588	0					
ANR	525620	PtrMemberAccess	resources [ i ] -> r_cur -> idMatches		525588	0					
ANR	525621	PtrMemberAccess	resources [ i ] -> r_cur		525588	0					
ANR	525622	ArrayIndexing	resources [ i ]		525588	0					
ANR	525623	Identifier	resources		525588	0					
ANR	525624	Identifier	i		525588	1					
ANR	525625	Identifier	r_cur		525588	1					
ANR	525626	Identifier	idMatches		525588	1					
ANR	525627	ArgumentList	id		525588	1					
ANR	525628	Argument	id		525588	0					
ANR	525629	Identifier	id		525588	0					
ANR	525630	CompoundStatement		7:43:128:128	525588	1					
ANR	525631	ReturnStatement	return resources [ i ] ;	1407:3:35738:35757	525588	0	True				
ANR	525632	ArrayIndexing	resources [ i ]		525588	0					
ANR	525633	Identifier	resources		525588	0					
ANR	525634	Identifier	i		525588	1					
ANR	525635	IfStatement	if ( resources [ i ] -> r_pre && resources [ i ] -> r_pre -> idMatches ( id ) )		525588	1					
ANR	525636	Condition	resources [ i ] -> r_pre && resources [ i ] -> r_pre -> idMatches ( id )	1409:6:35769:35828	525588	0	True				
ANR	525637	AndExpression	resources [ i ] -> r_pre && resources [ i ] -> r_pre -> idMatches ( id )		525588	0		&&			
ANR	525638	PtrMemberAccess	resources [ i ] -> r_pre		525588	0					
ANR	525639	ArrayIndexing	resources [ i ]		525588	0					
ANR	525640	Identifier	resources		525588	0					
ANR	525641	Identifier	i		525588	1					
ANR	525642	Identifier	r_pre		525588	1					
ANR	525643	CallExpression	resources [ i ] -> r_pre -> idMatches ( id )		525588	1					
ANR	525644	Callee	resources [ i ] -> r_pre -> idMatches		525588	0					
ANR	525645	PtrMemberAccess	resources [ i ] -> r_pre -> idMatches		525588	0					
ANR	525646	PtrMemberAccess	resources [ i ] -> r_pre		525588	0					
ANR	525647	ArrayIndexing	resources [ i ]		525588	0					
ANR	525648	Identifier	resources		525588	0					
ANR	525649	Identifier	i		525588	1					
ANR	525650	Identifier	r_pre		525588	1					
ANR	525651	Identifier	idMatches		525588	1					
ANR	525652	ArgumentList	id		525588	1					
ANR	525653	Argument	id		525588	0					
ANR	525654	Identifier	id		525588	0					
ANR	525655	CompoundStatement		11:40:227:227	525588	1					
ANR	525656	ReturnStatement	return resources [ i ] ;	1411:3:35837:35856	525588	0	True				
ANR	525657	ArrayIndexing	resources [ i ]		525588	0					
ANR	525658	Identifier	resources		525588	0					
ANR	525659	Identifier	i		525588	1					
ANR	525660	IfStatement	if ( resources [ i ] -> r_pre_pre && resources [ i ] -> r_pre_pre -> idMatches ( id ) )		525588	2					
ANR	525661	Condition	resources [ i ] -> r_pre_pre && resources [ i ] -> r_pre_pre -> idMatches ( id )	1413:6:35868:35935	525588	0	True				
ANR	525662	AndExpression	resources [ i ] -> r_pre_pre && resources [ i ] -> r_pre_pre -> idMatches ( id )		525588	0		&&			
ANR	525663	PtrMemberAccess	resources [ i ] -> r_pre_pre		525588	0					
ANR	525664	ArrayIndexing	resources [ i ]		525588	0					
ANR	525665	Identifier	resources		525588	0					
ANR	525666	Identifier	i		525588	1					
ANR	525667	Identifier	r_pre_pre		525588	1					
ANR	525668	CallExpression	resources [ i ] -> r_pre_pre -> idMatches ( id )		525588	1					
ANR	525669	Callee	resources [ i ] -> r_pre_pre -> idMatches		525588	0					
ANR	525670	PtrMemberAccess	resources [ i ] -> r_pre_pre -> idMatches		525588	0					
ANR	525671	PtrMemberAccess	resources [ i ] -> r_pre_pre		525588	0					
ANR	525672	ArrayIndexing	resources [ i ]		525588	0					
ANR	525673	Identifier	resources		525588	0					
ANR	525674	Identifier	i		525588	1					
ANR	525675	Identifier	r_pre_pre		525588	1					
ANR	525676	Identifier	idMatches		525588	1					
ANR	525677	ArgumentList	id		525588	1					
ANR	525678	Argument	id		525588	0					
ANR	525679	Identifier	id		525588	0					
ANR	525680	CompoundStatement		15:44:334:334	525588	1					
ANR	525681	ReturnStatement	return resources [ i ] ;	1415:3:35944:35963	525588	0	True				
ANR	525682	ArrayIndexing	resources [ i ]		525588	0					
ANR	525683	Identifier	resources		525588	0					
ANR	525684	Identifier	i		525588	1					
ANR	525685	ReturnStatement	return NULL ;	1418:1:35973:35984	525588	3	True				
ANR	525686	Identifier	NULL		525588	0					
ANR	525687	ReturnType	Resource *		525588	1					
ANR	525688	Identifier	ResMgr :: get_by_any_id		525588	2					
ANR	525689	ParameterList	char * id		525588	3					
ANR	525690	Parameter	char * id	1399:23:35593:35600	525588	0	True				
ANR	525691	ParameterType	char *		525588	0					
ANR	525692	Identifier	id		525588	1					
ANR	525693	CFGEntryNode	ENTRY		525588		True				
ANR	525694	CFGExitNode	EXIT		525588		True				
ANR	525695	Symbol	* * i		525588						
ANR	525696	Symbol	resources [ i ] -> r_cur -> idMatches		525588						
ANR	525697	Symbol	NULL		525588						
ANR	525698	Symbol	* resources [ i ] -> r_pre		525588						
ANR	525699	Symbol	resources		525588						
ANR	525700	Symbol	i		525588						
ANR	525701	Symbol	* * resources		525588						
ANR	525702	Symbol	* resources [ i ] -> r_cur		525588						
ANR	525703	Symbol	nresources		525588						
ANR	525704	Symbol	* * * resources		525588						
ANR	525705	Symbol	* resources		525588						
ANR	525706	Symbol	resources [ i ] -> r_pre		525588						
ANR	525707	Symbol	* i		525588						
ANR	525708	Symbol	resources [ i ] -> r_cur		525588						
ANR	525709	Symbol	resources [ i ] -> r_pre -> idMatches		525588						
ANR	525710	Symbol	* resources [ i ] -> r_pre_pre		525588						
ANR	525711	Symbol	* * * i		525588						
ANR	525712	Symbol	resources [ i ] -> r_pre_pre		525588						
ANR	525713	Symbol	id		525588						
ANR	525714	Symbol	resources [ i ] -> r_pre_pre -> idMatches		525588						
ANR	525715	Function	ResMgr :: get_by_name	1422:0:35990:36211							
ANR	525716	FunctionDef	ResMgr :: get_by_name (char * name)		525715	0					
ANR	525717	CompoundStatement		1424:0:36034:36211	525715	0					
ANR	525718	IfStatement	if ( ! resources )		525715	0					
ANR	525719	Condition	! resources	1425:5:36041:36051	525715	0	True				
ANR	525720	UnaryOperationExpression	! resources		525715	0					
ANR	525721	UnaryOperator	!		525715	0					
ANR	525722	Identifier	resources		525715	1					
ANR	525723	CompoundStatement		2:19:20:20	525715	1					
ANR	525724	ReturnStatement	return NULL ;	1426:2:36059:36070	525715	0	True				
ANR	525725	Identifier	NULL		525715	0					
ANR	525726	IdentifierDeclStatement	int i ;	1428:1:36076:36081	525715	1	True				
ANR	525727	IdentifierDecl	i		525715	0					
ANR	525728	IdentifierDeclType	int		525715	0					
ANR	525729	Identifier	i		525715	1					
ANR	525730	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525715	2					
ANR	525731	ForInit	i = 0 ;	1429:6:36089:36094	525715	0	True				
ANR	525732	AssignmentExpression	i = 0		525715	0		=			
ANR	525733	Identifier	i		525715	0					
ANR	525734	PrimaryExpression	0		525715	1					
ANR	525735	Condition	i < nresources	1429:13:36096:36109	525715	1	True				
ANR	525736	RelationalExpression	i < nresources		525715	0		<			
ANR	525737	Identifier	i		525715	0					
ANR	525738	Identifier	nresources		525715	1					
ANR	525739	PostIncDecOperationExpression	i ++	1429:29:36112:36114	525715	2	True				
ANR	525740	Identifier	i		525715	0					
ANR	525741	IncDec	++		525715	1					
ANR	525742	CompoundStatement		6:35:83:83	525715	3					
ANR	525743	IfStatement	"if ( ! strcmp ( resources [ i ] -> r_name , name ) )"		525715	0					
ANR	525744	Condition	"! strcmp ( resources [ i ] -> r_name , name )"	1430:6:36126:36160	525715	0	True				
ANR	525745	UnaryOperationExpression	"! strcmp ( resources [ i ] -> r_name , name )"		525715	0					
ANR	525746	UnaryOperator	!		525715	0					
ANR	525747	CallExpression	"strcmp ( resources [ i ] -> r_name , name )"		525715	1					
ANR	525748	Callee	strcmp		525715	0					
ANR	525749	Identifier	strcmp		525715	0					
ANR	525750	ArgumentList	resources [ i ] -> r_name		525715	1					
ANR	525751	Argument	resources [ i ] -> r_name		525715	0					
ANR	525752	PtrMemberAccess	resources [ i ] -> r_name		525715	0					
ANR	525753	ArrayIndexing	resources [ i ]		525715	0					
ANR	525754	Identifier	resources		525715	0					
ANR	525755	Identifier	i		525715	1					
ANR	525756	Identifier	r_name		525715	1					
ANR	525757	Argument	name		525715	1					
ANR	525758	Identifier	name		525715	0					
ANR	525759	CompoundStatement		7:44:129:129	525715	1					
ANR	525760	ReturnStatement	return resources [ i ] ;	1431:3:36169:36188	525715	0	True				
ANR	525761	ArrayIndexing	resources [ i ]		525715	0					
ANR	525762	Identifier	resources		525715	0					
ANR	525763	Identifier	i		525715	1					
ANR	525764	ReturnStatement	return NULL ;	1434:1:36198:36209	525715	3	True				
ANR	525765	Identifier	NULL		525715	0					
ANR	525766	ReturnType	Resource *		525715	1					
ANR	525767	Identifier	ResMgr :: get_by_name		525715	2					
ANR	525768	ParameterList	char * name		525715	3					
ANR	525769	Parameter	char * name	1423:21:36021:36030	525715	0	True				
ANR	525770	ParameterType	char *		525715	0					
ANR	525771	Identifier	name		525715	1					
ANR	525772	CFGEntryNode	ENTRY		525715		True				
ANR	525773	CFGExitNode	EXIT		525715		True				
ANR	525774	Symbol	strcmp		525715						
ANR	525775	Symbol	* * i		525715						
ANR	525776	Symbol	NULL		525715						
ANR	525777	Symbol	* i		525715						
ANR	525778	Symbol	name		525715						
ANR	525779	Symbol	resources [ i ] -> r_name		525715						
ANR	525780	Symbol	resources		525715						
ANR	525781	Symbol	i		525715						
ANR	525782	Symbol	* * resources		525715						
ANR	525783	Symbol	nresources		525715						
ANR	525784	Symbol	* resources		525715						
ANR	525785	Function	ResMgr :: get_by_slot_id	1438:0:36215:36424							
ANR	525786	FunctionDef	ResMgr :: get_by_slot_id (int id)		525785	0					
ANR	525787	CompoundStatement		1440:0:36258:36424	525785	0					
ANR	525788	IfStatement	if ( ! resources )		525785	0					
ANR	525789	Condition	! resources	1441:5:36265:36275	525785	0	True				
ANR	525790	UnaryOperationExpression	! resources		525785	0					
ANR	525791	UnaryOperator	!		525785	0					
ANR	525792	Identifier	resources		525785	1					
ANR	525793	CompoundStatement		2:19:20:20	525785	1					
ANR	525794	ReturnStatement	return NULL ;	1442:2:36283:36294	525785	0	True				
ANR	525795	Identifier	NULL		525785	0					
ANR	525796	IdentifierDeclStatement	int i ;	1444:1:36300:36305	525785	1	True				
ANR	525797	IdentifierDecl	i		525785	0					
ANR	525798	IdentifierDeclType	int		525785	0					
ANR	525799	Identifier	i		525785	1					
ANR	525800	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525785	2					
ANR	525801	ForInit	i = 0 ;	1445:6:36313:36318	525785	0	True				
ANR	525802	AssignmentExpression	i = 0		525785	0		=			
ANR	525803	Identifier	i		525785	0					
ANR	525804	PrimaryExpression	0		525785	1					
ANR	525805	Condition	i < nresources	1445:13:36320:36333	525785	1	True				
ANR	525806	RelationalExpression	i < nresources		525785	0		<			
ANR	525807	Identifier	i		525785	0					
ANR	525808	Identifier	nresources		525785	1					
ANR	525809	PostIncDecOperationExpression	i ++	1445:29:36336:36338	525785	2	True				
ANR	525810	Identifier	i		525785	0					
ANR	525811	IncDec	++		525785	1					
ANR	525812	CompoundStatement		6:35:83:83	525785	3					
ANR	525813	IfStatement	if ( resources [ i ] -> r_id == id )		525785	0					
ANR	525814	Condition	resources [ i ] -> r_id == id	1446:6:36350:36373	525785	0	True				
ANR	525815	EqualityExpression	resources [ i ] -> r_id == id		525785	0		==			
ANR	525816	PtrMemberAccess	resources [ i ] -> r_id		525785	0					
ANR	525817	ArrayIndexing	resources [ i ]		525785	0					
ANR	525818	Identifier	resources		525785	0					
ANR	525819	Identifier	i		525785	1					
ANR	525820	Identifier	r_id		525785	1					
ANR	525821	Identifier	id		525785	1					
ANR	525822	CompoundStatement		7:33:118:118	525785	1					
ANR	525823	ReturnStatement	return resources [ i ] ;	1447:3:36382:36401	525785	0	True				
ANR	525824	ArrayIndexing	resources [ i ]		525785	0					
ANR	525825	Identifier	resources		525785	0					
ANR	525826	Identifier	i		525785	1					
ANR	525827	ReturnStatement	return NULL ;	1450:1:36411:36422	525785	3	True				
ANR	525828	Identifier	NULL		525785	0					
ANR	525829	ReturnType	Resource *		525785	1					
ANR	525830	Identifier	ResMgr :: get_by_slot_id		525785	2					
ANR	525831	ParameterList	int id		525785	3					
ANR	525832	Parameter	int id	1439:24:36249:36254	525785	0	True				
ANR	525833	ParameterType	int		525785	0					
ANR	525834	Identifier	id		525785	1					
ANR	525835	CFGEntryNode	ENTRY		525785		True				
ANR	525836	CFGExitNode	EXIT		525785		True				
ANR	525837	Symbol	* * i		525785						
ANR	525838	Symbol	NULL		525785						
ANR	525839	Symbol	* i		525785						
ANR	525840	Symbol	resources [ i ] -> r_id		525785						
ANR	525841	Symbol	resources		525785						
ANR	525842	Symbol	i		525785						
ANR	525843	Symbol	* * resources		525785						
ANR	525844	Symbol	id		525785						
ANR	525845	Symbol	nresources		525785						
ANR	525846	Symbol	* resources		525785						
ANR	525847	Function	ResMgr :: state	1454:0:36428:37113							
ANR	525848	FunctionDef	ResMgr :: state ()		525847	0					
ANR	525849	CompoundStatement		1456:0:36456:37113	525847	0					
ANR	525850	IfStatement	if ( ! resources )		525847	0					
ANR	525851	Condition	! resources	1457:5:36463:36473	525847	0	True				
ANR	525852	UnaryOperationExpression	! resources		525847	0					
ANR	525853	UnaryOperator	!		525847	0					
ANR	525854	Identifier	resources		525847	1					
ANR	525855	CompoundStatement		2:19:20:20	525847	1					
ANR	525856	ReturnStatement	return owner_state ;	1458:2:36481:36499	525847	0	True				
ANR	525857	Identifier	owner_state		525847	0					
ANR	525858	IdentifierDeclStatement	State s = no_state ;	1460:1:36505:36523	525847	1	True				
ANR	525859	IdentifierDecl	s = no_state		525847	0					
ANR	525860	IdentifierDeclType	State		525847	0					
ANR	525861	Identifier	s		525847	1					
ANR	525862	AssignmentExpression	s = no_state		525847	2		=			
ANR	525863	Identifier	no_state		525847	0					
ANR	525864	Identifier	no_state		525847	1					
ANR	525865	IdentifierDeclStatement	Resource * rip ;	1461:1:36526:36539	525847	2	True				
ANR	525866	IdentifierDecl	* rip		525847	0					
ANR	525867	IdentifierDeclType	Resource *		525847	0					
ANR	525868	Identifier	rip		525847	1					
ANR	525869	IdentifierDeclStatement	"int i , is_owner = 0 ;"	1462:1:36542:36561	525847	3	True				
ANR	525870	IdentifierDecl	i		525847	0					
ANR	525871	IdentifierDeclType	int		525847	0					
ANR	525872	Identifier	i		525847	1					
ANR	525873	IdentifierDecl	is_owner = 0		525847	1					
ANR	525874	IdentifierDeclType	int		525847	0					
ANR	525875	Identifier	is_owner		525847	1					
ANR	525876	AssignmentExpression	is_owner = 0		525847	2		=			
ANR	525877	Identifier	is_owner		525847	0					
ANR	525878	PrimaryExpression	0		525847	1					
ANR	525879	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		525847	4					
ANR	525880	ForInit	i = 0 ;	1463:6:36569:36574	525847	0	True				
ANR	525881	AssignmentExpression	i = 0		525847	0		=			
ANR	525882	Identifier	i		525847	0					
ANR	525883	PrimaryExpression	0		525847	1					
ANR	525884	Condition	i < nresources	1463:13:36576:36589	525847	1	True				
ANR	525885	RelationalExpression	i < nresources		525847	0		<			
ANR	525886	Identifier	i		525847	0					
ANR	525887	Identifier	nresources		525847	1					
ANR	525888	PostIncDecOperationExpression	i ++	1463:29:36592:36594	525847	2	True				
ANR	525889	Identifier	i		525847	0					
ANR	525890	IncDec	++		525847	1					
ANR	525891	CompoundStatement		8:35:141:141	525847	3					
ANR	525892	ExpressionStatement	rip = resources [ i ]	1464:2:36602:36620	525847	0	True				
ANR	525893	AssignmentExpression	rip = resources [ i ]		525847	0		=			
ANR	525894	Identifier	rip		525847	0					
ANR	525895	ArrayIndexing	resources [ i ]		525847	1					
ANR	525896	Identifier	resources		525847	0					
ANR	525897	Identifier	i		525847	1					
ANR	525898	IfStatement	if ( rip -> r_cod_mgr -> numClaims ( ) > 0 )		525847	1					
ANR	525899	Condition	rip -> r_cod_mgr -> numClaims ( ) > 0	1468:6:36802:36832	525847	0	True				
ANR	525900	RelationalExpression	rip -> r_cod_mgr -> numClaims ( ) > 0		525847	0		>			
ANR	525901	CallExpression	rip -> r_cod_mgr -> numClaims ( )		525847	0					
ANR	525902	Callee	rip -> r_cod_mgr -> numClaims		525847	0					
ANR	525903	PtrMemberAccess	rip -> r_cod_mgr -> numClaims		525847	0					
ANR	525904	PtrMemberAccess	rip -> r_cod_mgr		525847	0					
ANR	525905	Identifier	rip		525847	0					
ANR	525906	Identifier	r_cod_mgr		525847	1					
ANR	525907	Identifier	numClaims		525847	1					
ANR	525908	ArgumentList			525847	1					
ANR	525909	PrimaryExpression	0		525847	1					
ANR	525910	CompoundStatement		13:40:379:379	525847	1					
ANR	525911	ReturnStatement	return claimed_state ;	1469:3:36841:36861	525847	0	True				
ANR	525912	Identifier	claimed_state		525847	0					
ANR	525913	ExpressionStatement	s = rip -> state ( )	1471:2:36869:36885	525847	2	True				
ANR	525914	AssignmentExpression	s = rip -> state ( )		525847	0		=			
ANR	525915	Identifier	s		525847	0					
ANR	525916	CallExpression	rip -> state ( )		525847	1					
ANR	525917	Callee	rip -> state		525847	0					
ANR	525918	PtrMemberAccess	rip -> state		525847	0					
ANR	525919	Identifier	rip		525847	0					
ANR	525920	Identifier	state		525847	1					
ANR	525921	ArgumentList			525847	1					
ANR	525922	SwitchStatement	switch ( s )		525847	3					
ANR	525923	Condition	s	1472:10:36897:36897	525847	0	True				
ANR	525924	Identifier	s		525847	0					
ANR	525925	CompoundStatement		17:14:444:444	525847	1					
ANR	525926	Label	case claimed_state :	1473:2:36905:36923	525847	0	True				
ANR	525927	Identifier	claimed_state		525847	0					
ANR	525928	Label	case preempting_state :	1474:2:36927:36948	525847	1	True				
ANR	525929	Identifier	preempting_state		525847	0					
ANR	525930	ReturnStatement	return s ;	1475:3:36953:36961	525847	2	True				
ANR	525931	Identifier	s		525847	0					
ANR	525932	BreakStatement	break ;	1476:3:36966:36971	525847	3	True				
ANR	525933	Label	case owner_state :	1477:2:36975:36991	525847	4	True				
ANR	525934	Identifier	owner_state		525847	0					
ANR	525935	ExpressionStatement	is_owner = 1	1478:3:36996:37008	525847	5	True				
ANR	525936	AssignmentExpression	is_owner = 1		525847	0		=			
ANR	525937	Identifier	is_owner		525847	0					
ANR	525938	PrimaryExpression	1		525847	1					
ANR	525939	BreakStatement	break ;	1479:3:37013:37018	525847	6	True				
ANR	525940	Label	default :	1480:2:37022:37029	525847	7	True				
ANR	525941	Identifier	default		525847	0					
ANR	525942	BreakStatement	break ;	1481:3:37034:37039	525847	8	True				
ANR	525943	IfStatement	if ( is_owner )		525847	5					
ANR	525944	Condition	is_owner	1484:5:37053:37060	525847	0	True				
ANR	525945	Identifier	is_owner		525847	0					
ANR	525946	CompoundStatement		29:16:607:607	525847	1					
ANR	525947	ReturnStatement	return owner_state ;	1485:2:37068:37086	525847	0	True				
ANR	525948	Identifier	owner_state		525847	0					
ANR	525949	ElseStatement	else		525847	0					
ANR	525950	CompoundStatement		31:8:639:639	525847	0					
ANR	525951	ReturnStatement	return s ;	1487:2:37100:37108	525847	0	True				
ANR	525952	Identifier	s		525847	0					
ANR	525953	ReturnType	State		525847	1					
ANR	525954	Identifier	ResMgr :: state		525847	2					
ANR	525955	ParameterList			525847	3					
ANR	525956	CFGEntryNode	ENTRY		525847		True				
ANR	525957	CFGExitNode	EXIT		525847		True				
ANR	525958	Symbol	* rip		525847						
ANR	525959	Symbol	is_owner		525847						
ANR	525960	Symbol	resources		525847						
ANR	525961	Symbol	i		525847						
ANR	525962	Symbol	nresources		525847						
ANR	525963	Symbol	* * rip		525847						
ANR	525964	Symbol	rip -> r_cod_mgr		525847						
ANR	525965	Symbol	* rip -> r_cod_mgr		525847						
ANR	525966	Symbol	no_state		525847						
ANR	525967	Symbol	* resources		525847						
ANR	525968	Symbol	s		525847						
ANR	525969	Symbol	* i		525847						
ANR	525970	Symbol	rip		525847						
ANR	525971	Symbol	claimed_state		525847						
ANR	525972	Symbol	owner_state		525847						
ANR	525973	Symbol	rip -> state		525847						
ANR	525974	Symbol	rip -> r_cod_mgr -> numClaims		525847						
ANR	525975	Function	ResMgr :: final_update	1492:0:37117:37221							
ANR	525976	FunctionDef	ResMgr :: final_update ()		525975	0					
ANR	525977	CompoundStatement		1494:0:37151:37221	525975	0					
ANR	525978	IfStatement	if ( ! resources )		525975	0					
ANR	525979	Condition	! resources	1495:5:37158:37168	525975	0	True				
ANR	525980	UnaryOperationExpression	! resources		525975	0					
ANR	525981	UnaryOperator	!		525975	0					
ANR	525982	Identifier	resources		525975	1					
ANR	525983	CompoundStatement		2:19:20:20	525975	1					
ANR	525984	ReturnStatement	return ;	1496:2:37176:37182	525975	0	True				
ANR	525985	ExpressionStatement	walk ( & Resource :: final_update )	1498:1:37188:37219	525975	1	True				
ANR	525986	CallExpression	walk ( & Resource :: final_update )		525975	0					
ANR	525987	Callee	walk		525975	0					
ANR	525988	Identifier	walk		525975	0					
ANR	525989	ArgumentList	& Resource :: final_update		525975	1					
ANR	525990	Argument	& Resource :: final_update		525975	0					
ANR	525991	UnaryOperationExpression	& Resource :: final_update		525975	0					
ANR	525992	UnaryOperator	&		525975	0					
ANR	525993	Identifier	Resource :: final_update		525975	1					
ANR	525994	ReturnType	void		525975	1					
ANR	525995	Identifier	ResMgr :: final_update		525975	2					
ANR	525996	ParameterList			525975	3					
ANR	525997	CFGEntryNode	ENTRY		525975		True				
ANR	525998	CFGExitNode	EXIT		525975		True				
ANR	525999	Symbol	& Resource :: final_update		525975						
ANR	526000	Symbol	resources		525975						
ANR	526001	Function	ResMgr :: send_update	1502:0:37225:37521							
ANR	526002	FunctionDef	"ResMgr :: send_update (int cmd , ClassAd * public_ad , ClassAd * private_ad , bool nonblock)"		526001	0					
ANR	526003	CompoundStatement		1505:0:37322:37521	526001	0					
ANR	526004	ExpressionStatement	num_updates ++	1507:1:37371:37384	526001	0	True				
ANR	526005	PostIncDecOperationExpression	num_updates ++		526001	0					
ANR	526006	Identifier	num_updates		526001	0					
ANR	526007	IncDec	++		526001	1					
ANR	526008	ReturnStatement	"return daemonCore -> sendUpdates ( cmd , public_ad , private_ad , nonblock ) ;"	1509:1:37451:37519	526001	1	True				
ANR	526009	CallExpression	"daemonCore -> sendUpdates ( cmd , public_ad , private_ad , nonblock )"		526001	0					
ANR	526010	Callee	daemonCore -> sendUpdates		526001	0					
ANR	526011	PtrMemberAccess	daemonCore -> sendUpdates		526001	0					
ANR	526012	Identifier	daemonCore		526001	0					
ANR	526013	Identifier	sendUpdates		526001	1					
ANR	526014	ArgumentList	cmd		526001	1					
ANR	526015	Argument	cmd		526001	0					
ANR	526016	Identifier	cmd		526001	0					
ANR	526017	Argument	public_ad		526001	1					
ANR	526018	Identifier	public_ad		526001	0					
ANR	526019	Argument	private_ad		526001	2					
ANR	526020	Identifier	private_ad		526001	0					
ANR	526021	Argument	nonblock		526001	3					
ANR	526022	Identifier	nonblock		526001	0					
ANR	526023	ReturnType	int		526001	1					
ANR	526024	Identifier	ResMgr :: send_update		526001	2					
ANR	526025	ParameterList	"int cmd , ClassAd * public_ad , ClassAd * private_ad , bool nonblock"		526001	3					
ANR	526026	Parameter	int cmd	1503:21:37250:37256	526001	0	True				
ANR	526027	ParameterType	int		526001	0					
ANR	526028	Identifier	cmd		526001	1					
ANR	526029	Parameter	ClassAd * public_ad	1503:30:37259:37276	526001	1	True				
ANR	526030	ParameterType	ClassAd *		526001	0					
ANR	526031	Identifier	public_ad		526001	1					
ANR	526032	Parameter	ClassAd * private_ad	1503:50:37279:37297	526001	2	True				
ANR	526033	ParameterType	ClassAd *		526001	0					
ANR	526034	Identifier	private_ad		526001	1					
ANR	526035	Parameter	bool nonblock	1504:6:37306:37318	526001	3	True				
ANR	526036	ParameterType	bool		526001	0					
ANR	526037	Identifier	nonblock		526001	1					
ANR	526038	CFGEntryNode	ENTRY		526001		True				
ANR	526039	CFGExitNode	EXIT		526001		True				
ANR	526040	Symbol	nonblock		526001						
ANR	526041	Symbol	private_ad		526001						
ANR	526042	Symbol	* daemonCore		526001						
ANR	526043	Symbol	public_ad		526001						
ANR	526044	Symbol	daemonCore		526001						
ANR	526045	Symbol	daemonCore -> sendUpdates		526001						
ANR	526046	Symbol	cmd		526001						
ANR	526047	Symbol	num_updates		526001						
ANR	526048	Function	ResMgr :: update_all	1513:0:37525:38703							
ANR	526049	FunctionDef	ResMgr :: update_all ()		526048	0					
ANR	526050	CompoundStatement		1515:0:37557:38703	526048	0					
ANR	526051	ExpressionStatement	num_updates = 0	1516:1:37560:37575	526048	0	True				
ANR	526052	AssignmentExpression	num_updates = 0		526048	0		=			
ANR	526053	Identifier	num_updates		526048	0					
ANR	526054	PrimaryExpression	0		526048	1					
ANR	526055	ExpressionStatement	walk ( & Resource :: eval_state )	1534:1:38500:38529	526048	1	True				
ANR	526056	CallExpression	walk ( & Resource :: eval_state )		526048	0					
ANR	526057	Callee	walk		526048	0					
ANR	526058	Identifier	walk		526048	0					
ANR	526059	ArgumentList	& Resource :: eval_state		526048	1					
ANR	526060	Argument	& Resource :: eval_state		526048	0					
ANR	526061	UnaryOperationExpression	& Resource :: eval_state		526048	0					
ANR	526062	UnaryOperator	&		526048	0					
ANR	526063	Identifier	Resource :: eval_state		526048	1					
ANR	526064	ExpressionStatement	walk ( & Resource :: update )	1537:1:38624:38649	526048	2	True				
ANR	526065	CallExpression	walk ( & Resource :: update )		526048	0					
ANR	526066	Callee	walk		526048	0					
ANR	526067	Identifier	walk		526048	0					
ANR	526068	ArgumentList	& Resource :: update		526048	1					
ANR	526069	Argument	& Resource :: update		526048	0					
ANR	526070	UnaryOperationExpression	& Resource :: update		526048	0					
ANR	526071	UnaryOperator	&		526048	0					
ANR	526072	Identifier	Resource :: update		526048	1					
ANR	526073	ExpressionStatement	report_updates ( )	1539:1:38653:38669	526048	3	True				
ANR	526074	CallExpression	report_updates ( )		526048	0					
ANR	526075	Callee	report_updates		526048	0					
ANR	526076	Identifier	report_updates		526048	0					
ANR	526077	ArgumentList			526048	1					
ANR	526078	ExpressionStatement	check_polling ( )	1540:1:38672:38687	526048	4	True				
ANR	526079	CallExpression	check_polling ( )		526048	0					
ANR	526080	Callee	check_polling		526048	0					
ANR	526081	Identifier	check_polling		526048	0					
ANR	526082	ArgumentList			526048	1					
ANR	526083	ExpressionStatement	check_use ( )	1541:1:38690:38701	526048	5	True				
ANR	526084	CallExpression	check_use ( )		526048	0					
ANR	526085	Callee	check_use		526048	0					
ANR	526086	Identifier	check_use		526048	0					
ANR	526087	ArgumentList			526048	1					
ANR	526088	ReturnType	void		526048	1					
ANR	526089	Identifier	ResMgr :: update_all		526048	2					
ANR	526090	ParameterList			526048	3					
ANR	526091	CFGEntryNode	ENTRY		526048		True				
ANR	526092	CFGExitNode	EXIT		526048		True				
ANR	526093	Symbol	& Resource :: update		526048						
ANR	526094	Symbol	num_updates		526048						
ANR	526095	Symbol	& Resource :: eval_state		526048						
ANR	526096	Function	ResMgr :: eval_and_update_all	1545:0:38707:38886							
ANR	526097	FunctionDef	ResMgr :: eval_and_update_all ()		526096	0					
ANR	526098	CompoundStatement		1547:0:38748:38886	526096	0					
ANR	526099	IfStatement	if ( ! hibernating ( ) )		526096	0					
ANR	526100	Condition	! hibernating ( )	1549:6:38777:38791	526096	0	True				
ANR	526101	UnaryOperationExpression	! hibernating ( )		526096	0					
ANR	526102	UnaryOperator	!		526096	0					
ANR	526103	CallExpression	hibernating ( )		526096	1					
ANR	526104	Callee	hibernating		526096	0					
ANR	526105	Identifier	hibernating		526096	0					
ANR	526106	ArgumentList			526096	1					
ANR	526107	CompoundStatement		3:24:46:46	526096	1					
ANR	526108	ExpressionStatement	compute ( A_TIMEOUT | A_UPDATE )	1551:2:38806:38837	526096	0	True				
ANR	526109	CallExpression	compute ( A_TIMEOUT | A_UPDATE )		526096	0					
ANR	526110	Callee	compute		526096	0					
ANR	526111	Identifier	compute		526096	0					
ANR	526112	ArgumentList	A_TIMEOUT | A_UPDATE		526096	1					
ANR	526113	Argument	A_TIMEOUT | A_UPDATE		526096	0					
ANR	526114	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		526096	0		|			
ANR	526115	Identifier	A_TIMEOUT		526096	0					
ANR	526116	Identifier	A_UPDATE		526096	1					
ANR	526117	ExpressionStatement	update_all ( )	1552:2:38841:38853	526096	1	True				
ANR	526118	CallExpression	update_all ( )		526096	0					
ANR	526119	Callee	update_all		526096	0					
ANR	526120	Identifier	update_all		526096	0					
ANR	526121	ArgumentList			526096	1					
ANR	526122	ReturnType	void		526096	1					
ANR	526123	Identifier	ResMgr :: eval_and_update_all		526096	2					
ANR	526124	ParameterList			526096	3					
ANR	526125	CFGEntryNode	ENTRY		526096		True				
ANR	526126	CFGExitNode	EXIT		526096		True				
ANR	526127	Symbol	hibernating		526096						
ANR	526128	Symbol	A_UPDATE		526096						
ANR	526129	Symbol	A_TIMEOUT		526096						
ANR	526130	Function	ResMgr :: eval_all	1559:0:38890:39122							
ANR	526131	FunctionDef	ResMgr :: eval_all ()		526130	0					
ANR	526132	CompoundStatement		1561:0:38920:39122	526130	0					
ANR	526133	IfStatement	if ( ! hibernating ( ) )		526130	0					
ANR	526134	Condition	! hibernating ( )	1563:6:38949:38963	526130	0	True				
ANR	526135	UnaryOperationExpression	! hibernating ( )		526130	0					
ANR	526136	UnaryOperator	!		526130	0					
ANR	526137	CallExpression	hibernating ( )		526130	1					
ANR	526138	Callee	hibernating		526130	0					
ANR	526139	Identifier	hibernating		526130	0					
ANR	526140	ArgumentList			526130	1					
ANR	526141	CompoundStatement		3:24:46:46	526130	1					
ANR	526142	ExpressionStatement	num_updates = 0	1565:2:38978:38993	526130	0	True				
ANR	526143	AssignmentExpression	num_updates = 0		526130	0		=			
ANR	526144	Identifier	num_updates		526130	0					
ANR	526145	PrimaryExpression	0		526130	1					
ANR	526146	ExpressionStatement	compute ( A_TIMEOUT )	1566:2:38997:39017	526130	1	True				
ANR	526147	CallExpression	compute ( A_TIMEOUT )		526130	0					
ANR	526148	Callee	compute		526130	0					
ANR	526149	Identifier	compute		526130	0					
ANR	526150	ArgumentList	A_TIMEOUT		526130	1					
ANR	526151	Argument	A_TIMEOUT		526130	0					
ANR	526152	Identifier	A_TIMEOUT		526130	0					
ANR	526153	ExpressionStatement	walk ( & Resource :: eval_state )	1567:2:39021:39050	526130	2	True				
ANR	526154	CallExpression	walk ( & Resource :: eval_state )		526130	0					
ANR	526155	Callee	walk		526130	0					
ANR	526156	Identifier	walk		526130	0					
ANR	526157	ArgumentList	& Resource :: eval_state		526130	1					
ANR	526158	Argument	& Resource :: eval_state		526130	0					
ANR	526159	UnaryOperationExpression	& Resource :: eval_state		526130	0					
ANR	526160	UnaryOperator	&		526130	0					
ANR	526161	Identifier	Resource :: eval_state		526130	1					
ANR	526162	ExpressionStatement	report_updates ( )	1568:2:39054:39070	526130	3	True				
ANR	526163	CallExpression	report_updates ( )		526130	0					
ANR	526164	Callee	report_updates		526130	0					
ANR	526165	Identifier	report_updates		526130	0					
ANR	526166	ArgumentList			526130	1					
ANR	526167	ExpressionStatement	check_polling ( )	1569:2:39074:39089	526130	4	True				
ANR	526168	CallExpression	check_polling ( )		526130	0					
ANR	526169	Callee	check_polling		526130	0					
ANR	526170	Identifier	check_polling		526130	0					
ANR	526171	ArgumentList			526130	1					
ANR	526172	ReturnType	void		526130	1					
ANR	526173	Identifier	ResMgr :: eval_all		526130	2					
ANR	526174	ParameterList			526130	3					
ANR	526175	CFGEntryNode	ENTRY		526130		True				
ANR	526176	CFGExitNode	EXIT		526130		True				
ANR	526177	Symbol	hibernating		526130						
ANR	526178	Symbol	A_TIMEOUT		526130						
ANR	526179	Symbol	num_updates		526130						
ANR	526180	Symbol	& Resource :: eval_state		526130						
ANR	526181	Function	ResMgr :: report_updates	1576:0:39126:39553							
ANR	526182	FunctionDef	ResMgr :: report_updates ()		526181	0					
ANR	526183	CompoundStatement		1578:0:39162:39553	526181	0					
ANR	526184	IfStatement	if ( ! num_updates )		526181	0					
ANR	526185	Condition	! num_updates	1579:5:39169:39180	526181	0	True				
ANR	526186	UnaryOperationExpression	! num_updates		526181	0					
ANR	526187	UnaryOperator	!		526181	0					
ANR	526188	Identifier	num_updates		526181	1					
ANR	526189	CompoundStatement		2:20:21:21	526181	1					
ANR	526190	ReturnStatement	return ;	1580:2:39188:39194	526181	0	True				
ANR	526191	IdentifierDeclStatement	CollectorList * collectors = daemonCore -> getCollectorList ( ) ;	1583:1:39201:39259	526181	1	True				
ANR	526192	IdentifierDecl	* collectors = daemonCore -> getCollectorList ( )		526181	0					
ANR	526193	IdentifierDeclType	CollectorList *		526181	0					
ANR	526194	Identifier	collectors		526181	1					
ANR	526195	AssignmentExpression	* collectors = daemonCore -> getCollectorList ( )		526181	2		=			
ANR	526196	Identifier	collectors		526181	0					
ANR	526197	CallExpression	daemonCore -> getCollectorList ( )		526181	1					
ANR	526198	Callee	daemonCore -> getCollectorList		526181	0					
ANR	526199	PtrMemberAccess	daemonCore -> getCollectorList		526181	0					
ANR	526200	Identifier	daemonCore		526181	0					
ANR	526201	Identifier	getCollectorList		526181	1					
ANR	526202	ArgumentList			526181	1					
ANR	526203	IfStatement	if ( collectors )		526181	2					
ANR	526204	Condition	collectors	1584:5:39266:39275	526181	0	True				
ANR	526205	Identifier	collectors		526181	0					
ANR	526206	CompoundStatement		9:2:137:155	526181	1					
ANR	526207	IdentifierDeclStatement	MyString list ;	1585:2:39283:39296	526181	0	True				
ANR	526208	IdentifierDecl	list		526181	0					
ANR	526209	IdentifierDeclType	MyString		526181	0					
ANR	526210	Identifier	list		526181	1					
ANR	526211	IdentifierDeclStatement	Daemon * collector ;	1586:2:39300:39318	526181	1	True				
ANR	526212	IdentifierDecl	* collector		526181	0					
ANR	526213	IdentifierDeclType	Daemon *		526181	0					
ANR	526214	Identifier	collector		526181	1					
ANR	526215	ExpressionStatement	collectors -> rewind ( )	1587:2:39322:39342	526181	2	True				
ANR	526216	CallExpression	collectors -> rewind ( )		526181	0					
ANR	526217	Callee	collectors -> rewind		526181	0					
ANR	526218	PtrMemberAccess	collectors -> rewind		526181	0					
ANR	526219	Identifier	collectors		526181	0					
ANR	526220	Identifier	rewind		526181	1					
ANR	526221	ArgumentList			526181	1					
ANR	526222	WhileStatement	while ( collectors -> next ( collector ) )		526181	3					
ANR	526223	Condition	collectors -> next ( collector )	1588:9:39353:39380	526181	0	True				
ANR	526224	CallExpression	collectors -> next ( collector )		526181	0					
ANR	526225	Callee	collectors -> next		526181	0					
ANR	526226	PtrMemberAccess	collectors -> next		526181	0					
ANR	526227	Identifier	collectors		526181	0					
ANR	526228	Identifier	next		526181	1					
ANR	526229	ArgumentList	collector		526181	1					
ANR	526230	Argument	collector		526181	0					
ANR	526231	Identifier	collector		526181	0					
ANR	526232	CompoundStatement		11:39:220:220	526181	1					
ANR	526233	ExpressionStatement	list += collector -> fullHostname ( )	1589:3:39388:39421	526181	0	True				
ANR	526234	AssignmentExpression	list += collector -> fullHostname ( )		526181	0		+=			
ANR	526235	Identifier	list		526181	0					
ANR	526236	CallExpression	collector -> fullHostname ( )		526181	1					
ANR	526237	Callee	collector -> fullHostname		526181	0					
ANR	526238	PtrMemberAccess	collector -> fullHostname		526181	0					
ANR	526239	Identifier	collector		526181	0					
ANR	526240	Identifier	fullHostname		526181	1					
ANR	526241	ArgumentList			526181	1					
ANR	526242	ExpressionStatement	"list += "" """	1590:3:39426:39437	526181	1	True				
ANR	526243	AssignmentExpression	"list += "" """		526181	0		+=			
ANR	526244	Identifier	list		526181	0					
ANR	526245	PrimaryExpression	""" """		526181	1					
ANR	526246	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Sent %d update(s) to the collector (%s)\\n"" , num_updates , list . Value ( ) )"	1592:2:39445:39548	526181	4	True				
ANR	526247	CallExpression	"dprintf ( D_FULLDEBUG , ""Sent %d update(s) to the collector (%s)\\n"" , num_updates , list . Value ( ) )"		526181	0					
ANR	526248	Callee	dprintf		526181	0					
ANR	526249	Identifier	dprintf		526181	0					
ANR	526250	ArgumentList	D_FULLDEBUG		526181	1					
ANR	526251	Argument	D_FULLDEBUG		526181	0					
ANR	526252	Identifier	D_FULLDEBUG		526181	0					
ANR	526253	Argument	"""Sent %d update(s) to the collector (%s)\\n"""		526181	1					
ANR	526254	PrimaryExpression	"""Sent %d update(s) to the collector (%s)\\n"""		526181	0					
ANR	526255	Argument	num_updates		526181	2					
ANR	526256	Identifier	num_updates		526181	0					
ANR	526257	Argument	list . Value ( )		526181	3					
ANR	526258	CallExpression	list . Value ( )		526181	0					
ANR	526259	Callee	list . Value		526181	0					
ANR	526260	MemberAccess	list . Value		526181	0					
ANR	526261	Identifier	list		526181	0					
ANR	526262	Identifier	Value		526181	1					
ANR	526263	ArgumentList			526181	1					
ANR	526264	ReturnType	void		526181	1					
ANR	526265	Identifier	ResMgr :: report_updates		526181	2					
ANR	526266	ParameterList			526181	3					
ANR	526267	CFGEntryNode	ENTRY		526181		True				
ANR	526268	CFGExitNode	EXIT		526181		True				
ANR	526269	Symbol	* collector		526181						
ANR	526270	Symbol	daemonCore -> getCollectorList		526181						
ANR	526271	Symbol	D_FULLDEBUG		526181						
ANR	526272	Symbol	list		526181						
ANR	526273	Symbol	* collectors		526181						
ANR	526274	Symbol	collector		526181						
ANR	526275	Symbol	collectors		526181						
ANR	526276	Symbol	list . Value		526181						
ANR	526277	Symbol	* daemonCore		526181						
ANR	526278	Symbol	daemonCore		526181						
ANR	526279	Symbol	collector -> fullHostname		526181						
ANR	526280	Symbol	collectors -> next		526181						
ANR	526281	Symbol	num_updates		526181						
ANR	526282	Function	ResMgr :: refresh_benchmarks	1598:0:39556:39675							
ANR	526283	FunctionDef	ResMgr :: refresh_benchmarks ()		526282	0					
ANR	526284	CompoundStatement		1600:0:39590:39675	526282	0					
ANR	526285	IfStatement	if ( ! resources )		526282	0					
ANR	526286	Condition	! resources	1601:5:39597:39607	526282	0	True				
ANR	526287	UnaryOperationExpression	! resources		526282	0					
ANR	526288	UnaryOperator	!		526282	0					
ANR	526289	Identifier	resources		526282	1					
ANR	526290	CompoundStatement		2:19:20:20	526282	1					
ANR	526291	ReturnStatement	return ;	1602:2:39615:39621	526282	0	True				
ANR	526292	ExpressionStatement	"walk ( & Resource :: refresh_classad , A_TIMEOUT )"	1605:1:39628:39673	526282	1	True				
ANR	526293	CallExpression	"walk ( & Resource :: refresh_classad , A_TIMEOUT )"		526282	0					
ANR	526294	Callee	walk		526282	0					
ANR	526295	Identifier	walk		526282	0					
ANR	526296	ArgumentList	& Resource :: refresh_classad		526282	1					
ANR	526297	Argument	& Resource :: refresh_classad		526282	0					
ANR	526298	UnaryOperationExpression	& Resource :: refresh_classad		526282	0					
ANR	526299	UnaryOperator	&		526282	0					
ANR	526300	Identifier	Resource :: refresh_classad		526282	1					
ANR	526301	Argument	A_TIMEOUT		526282	1					
ANR	526302	Identifier	A_TIMEOUT		526282	0					
ANR	526303	ReturnType	void		526282	1					
ANR	526304	Identifier	ResMgr :: refresh_benchmarks		526282	2					
ANR	526305	ParameterList			526282	3					
ANR	526306	CFGEntryNode	ENTRY		526282		True				
ANR	526307	CFGExitNode	EXIT		526282		True				
ANR	526308	Symbol	& Resource :: refresh_classad		526282						
ANR	526309	Symbol	resources		526282						
ANR	526310	Symbol	A_TIMEOUT		526282						
ANR	526311	Function	ResMgr :: compute	1608:0:39678:41908							
ANR	526312	FunctionDef	ResMgr :: compute (amask_t how_much)		526311	0					
ANR	526313	CompoundStatement		1610:0:39719:41908	526311	0					
ANR	526314	IfStatement	if ( ! resources )		526311	0					
ANR	526315	Condition	! resources	1611:5:39726:39736	526311	0	True				
ANR	526316	UnaryOperationExpression	! resources		526311	0					
ANR	526317	UnaryOperator	!		526311	0					
ANR	526318	Identifier	resources		526311	1					
ANR	526319	CompoundStatement		2:19:20:20	526311	1					
ANR	526320	ReturnStatement	return ;	1612:2:39744:39750	526311	0	True				
ANR	526321	IdentifierDeclStatement	double runtime = stats . BeginRuntime ( stats . Compute ) ;	1615:4:39760:39810	526311	1	True				
ANR	526322	IdentifierDecl	runtime = stats . BeginRuntime ( stats . Compute )		526311	0					
ANR	526323	IdentifierDeclType	double		526311	0					
ANR	526324	Identifier	runtime		526311	1					
ANR	526325	AssignmentExpression	runtime = stats . BeginRuntime ( stats . Compute )		526311	2		=			
ANR	526326	Identifier	runtime		526311	0					
ANR	526327	CallExpression	stats . BeginRuntime ( stats . Compute )		526311	1					
ANR	526328	Callee	stats . BeginRuntime		526311	0					
ANR	526329	MemberAccess	stats . BeginRuntime		526311	0					
ANR	526330	Identifier	stats		526311	0					
ANR	526331	Identifier	BeginRuntime		526311	1					
ANR	526332	ArgumentList	stats . Compute		526311	1					
ANR	526333	Argument	stats . Compute		526311	0					
ANR	526334	MemberAccess	stats . Compute		526311	0					
ANR	526335	Identifier	stats		526311	0					
ANR	526336	Identifier	Compute		526311	1					
ANR	526337	ExpressionStatement	cur_time = time ( 0 )	1619:1:39920:39940	526311	2	True				
ANR	526338	AssignmentExpression	cur_time = time ( 0 )		526311	0		=			
ANR	526339	Identifier	cur_time		526311	0					
ANR	526340	CallExpression	time ( 0 )		526311	1					
ANR	526341	Callee	time		526311	0					
ANR	526342	Identifier	time		526311	0					
ANR	526343	ArgumentList	0		526311	1					
ANR	526344	Argument	0		526311	0					
ANR	526345	PrimaryExpression	0		526311	0					
ANR	526346	ExpressionStatement	compute_draining_attrs ( how_much )	1621:1:39944:39978	526311	3	True				
ANR	526347	CallExpression	compute_draining_attrs ( how_much )		526311	0					
ANR	526348	Callee	compute_draining_attrs		526311	0					
ANR	526349	Identifier	compute_draining_attrs		526311	0					
ANR	526350	ArgumentList	how_much		526311	1					
ANR	526351	Argument	how_much		526311	0					
ANR	526352	Identifier	how_much		526311	0					
ANR	526353	ExpressionStatement	m_attr -> compute ( ( how_much & ~ ( A_SUMMED ) ) | A_SHARED )	1623:1:39982:40036	526311	4	True				
ANR	526354	CallExpression	m_attr -> compute ( ( how_much & ~ ( A_SUMMED ) ) | A_SHARED )		526311	0					
ANR	526355	Callee	m_attr -> compute		526311	0					
ANR	526356	PtrMemberAccess	m_attr -> compute		526311	0					
ANR	526357	Identifier	m_attr		526311	0					
ANR	526358	Identifier	compute		526311	1					
ANR	526359	ArgumentList	( how_much & ~ ( A_SUMMED ) ) | A_SHARED		526311	1					
ANR	526360	Argument	( how_much & ~ ( A_SUMMED ) ) | A_SHARED		526311	0					
ANR	526361	InclusiveOrExpression	( how_much & ~ ( A_SUMMED ) ) | A_SHARED		526311	0		|			
ANR	526362	BitAndExpression	how_much & ~ ( A_SUMMED )		526311	0		&			
ANR	526363	Identifier	how_much		526311	0					
ANR	526364	UnaryOperationExpression	~ ( A_SUMMED )		526311	1					
ANR	526365	UnaryOperator	~		526311	0					
ANR	526366	Identifier	A_SUMMED		526311	1					
ANR	526367	Identifier	A_SHARED		526311	1					
ANR	526368	ExpressionStatement	"walk ( & Resource :: compute , ( how_much & ~ ( A_SHARED ) ) )"	1624:1:40039:40091	526311	5	True				
ANR	526369	CallExpression	"walk ( & Resource :: compute , ( how_much & ~ ( A_SHARED ) ) )"		526311	0					
ANR	526370	Callee	walk		526311	0					
ANR	526371	Identifier	walk		526311	0					
ANR	526372	ArgumentList	& Resource :: compute		526311	1					
ANR	526373	Argument	& Resource :: compute		526311	0					
ANR	526374	UnaryOperationExpression	& Resource :: compute		526311	0					
ANR	526375	UnaryOperator	&		526311	0					
ANR	526376	Identifier	Resource :: compute		526311	1					
ANR	526377	Argument	how_much & ~ ( A_SHARED )		526311	1					
ANR	526378	BitAndExpression	how_much & ~ ( A_SHARED )		526311	0		&			
ANR	526379	Identifier	how_much		526311	0					
ANR	526380	UnaryOperationExpression	~ ( A_SHARED )		526311	1					
ANR	526381	UnaryOperator	~		526311	0					
ANR	526382	Identifier	A_SHARED		526311	1					
ANR	526383	ExpressionStatement	m_attr -> compute ( ( how_much & ~ ( A_SHARED ) ) | A_SUMMED )	1625:1:40094:40148	526311	6	True				
ANR	526384	CallExpression	m_attr -> compute ( ( how_much & ~ ( A_SHARED ) ) | A_SUMMED )		526311	0					
ANR	526385	Callee	m_attr -> compute		526311	0					
ANR	526386	PtrMemberAccess	m_attr -> compute		526311	0					
ANR	526387	Identifier	m_attr		526311	0					
ANR	526388	Identifier	compute		526311	1					
ANR	526389	ArgumentList	( how_much & ~ ( A_SHARED ) ) | A_SUMMED		526311	1					
ANR	526390	Argument	( how_much & ~ ( A_SHARED ) ) | A_SUMMED		526311	0					
ANR	526391	InclusiveOrExpression	( how_much & ~ ( A_SHARED ) ) | A_SUMMED		526311	0		|			
ANR	526392	BitAndExpression	how_much & ~ ( A_SHARED )		526311	0		&			
ANR	526393	Identifier	how_much		526311	0					
ANR	526394	UnaryOperationExpression	~ ( A_SHARED )		526311	1					
ANR	526395	UnaryOperator	~		526311	0					
ANR	526396	Identifier	A_SHARED		526311	1					
ANR	526397	Identifier	A_SUMMED		526311	1					
ANR	526398	ExpressionStatement	"walk ( & Resource :: compute , ( how_much | A_SHARED ) )"	1626:1:40151:40200	526311	7	True				
ANR	526399	CallExpression	"walk ( & Resource :: compute , ( how_much | A_SHARED ) )"		526311	0					
ANR	526400	Callee	walk		526311	0					
ANR	526401	Identifier	walk		526311	0					
ANR	526402	ArgumentList	& Resource :: compute		526311	1					
ANR	526403	Argument	& Resource :: compute		526311	0					
ANR	526404	UnaryOperationExpression	& Resource :: compute		526311	0					
ANR	526405	UnaryOperator	&		526311	0					
ANR	526406	Identifier	Resource :: compute		526311	1					
ANR	526407	Argument	how_much | A_SHARED		526311	1					
ANR	526408	InclusiveOrExpression	how_much | A_SHARED		526311	0		|			
ANR	526409	Identifier	how_much		526311	0					
ANR	526410	Identifier	A_SHARED		526311	1					
ANR	526411	ExpressionStatement	resource_sort ( ownerStateCmp )	1632:1:40400:40430	526311	8	True				
ANR	526412	CallExpression	resource_sort ( ownerStateCmp )		526311	0					
ANR	526413	Callee	resource_sort		526311	0					
ANR	526414	Identifier	resource_sort		526311	0					
ANR	526415	ArgumentList	ownerStateCmp		526311	1					
ANR	526416	Argument	ownerStateCmp		526311	0					
ANR	526417	Identifier	ownerStateCmp		526311	0					
ANR	526418	ExpressionStatement	assign_load ( )	1634:1:40434:40447	526311	9	True				
ANR	526419	CallExpression	assign_load ( )		526311	0					
ANR	526420	Callee	assign_load		526311	0					
ANR	526421	Identifier	assign_load		526311	0					
ANR	526422	ArgumentList			526311	1					
ANR	526423	ExpressionStatement	assign_keyboard ( )	1635:1:40450:40467	526311	10	True				
ANR	526424	CallExpression	assign_keyboard ( )		526311	0					
ANR	526425	Callee	assign_keyboard		526311	0					
ANR	526426	Identifier	assign_keyboard		526311	0					
ANR	526427	ArgumentList			526311	1					
ANR	526428	IfStatement	if ( vmapi_is_virtual_machine ( ) == TRUE )		526311	11					
ANR	526429	Condition	vmapi_is_virtual_machine ( ) == TRUE	1637:5:40475:40508	526311	0	True				
ANR	526430	EqualityExpression	vmapi_is_virtual_machine ( ) == TRUE		526311	0		==			
ANR	526431	CallExpression	vmapi_is_virtual_machine ( )		526311	0					
ANR	526432	Callee	vmapi_is_virtual_machine		526311	0					
ANR	526433	Identifier	vmapi_is_virtual_machine		526311	0					
ANR	526434	ArgumentList			526311	1					
ANR	526435	Identifier	TRUE		526311	1					
ANR	526436	CompoundStatement		29:2:796:817	526311	1					
ANR	526437	IdentifierDeclStatement	ClassAd * host_classad ;	1638:2:40516:40537	526311	0	True				
ANR	526438	IdentifierDecl	* host_classad		526311	0					
ANR	526439	IdentifierDeclType	ClassAd *		526311	0					
ANR	526440	Identifier	host_classad		526311	1					
ANR	526441	ExpressionStatement	vmapi_request_host_classAd ( )	1639:2:40541:40569	526311	1	True				
ANR	526442	CallExpression	vmapi_request_host_classAd ( )		526311	0					
ANR	526443	Callee	vmapi_request_host_classAd		526311	0					
ANR	526444	Identifier	vmapi_request_host_classAd		526311	0					
ANR	526445	ArgumentList			526311	1					
ANR	526446	ExpressionStatement	host_classad = vmapi_get_host_classAd ( )	1640:2:40573:40612	526311	2	True				
ANR	526447	AssignmentExpression	host_classad = vmapi_get_host_classAd ( )		526311	0		=			
ANR	526448	Identifier	host_classad		526311	0					
ANR	526449	CallExpression	vmapi_get_host_classAd ( )		526311	1					
ANR	526450	Callee	vmapi_get_host_classAd		526311	0					
ANR	526451	Identifier	vmapi_get_host_classAd		526311	0					
ANR	526452	ArgumentList			526311	1					
ANR	526453	IfStatement	if ( host_classad )		526311	3					
ANR	526454	Condition	host_classad	1641:6:40620:40631	526311	0	True				
ANR	526455	Identifier	host_classad		526311	0					
ANR	526456	CompoundStatement		33:3:920:925	526311	1					
ANR	526457	IdentifierDeclStatement	int i ;	1642:3:40640:40645	526311	0	True				
ANR	526458	IdentifierDecl	i		526311	0					
ANR	526459	IdentifierDeclType	int		526311	0					
ANR	526460	Identifier	i		526311	1					
ANR	526461	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		526311	1					
ANR	526462	ForInit	i = 0 ;	1643:8:40655:40660	526311	0	True				
ANR	526463	AssignmentExpression	i = 0		526311	0		=			
ANR	526464	Identifier	i		526311	0					
ANR	526465	PrimaryExpression	0		526311	1					
ANR	526466	Condition	i < nresources	1643:15:40662:40675	526311	1	True				
ANR	526467	RelationalExpression	i < nresources		526311	0		<			
ANR	526468	Identifier	i		526311	0					
ANR	526469	Identifier	nresources		526311	1					
ANR	526470	PostIncDecOperationExpression	i ++	1643:31:40678:40680	526311	2	True				
ANR	526471	Identifier	i		526311	0					
ANR	526472	IncDec	++		526311	1					
ANR	526473	CompoundStatement		34:37:964:964	526311	3					
ANR	526474	IfStatement	if ( resources [ i ] -> r_classad )		526311	0					
ANR	526475	Condition	resources [ i ] -> r_classad	1644:8:40694:40716	526311	0	True				
ANR	526476	PtrMemberAccess	resources [ i ] -> r_classad		526311	0					
ANR	526477	ArrayIndexing	resources [ i ]		526311	0					
ANR	526478	Identifier	resources		526311	0					
ANR	526479	Identifier	i		526311	1					
ANR	526480	Identifier	r_classad		526311	1					
ANR	526481	ExpressionStatement	"MergeClassAds ( resources [ i ] -> r_classad , host_classad , true )"	1645:5:40725:40785	526311	1	True				
ANR	526482	CallExpression	"MergeClassAds ( resources [ i ] -> r_classad , host_classad , true )"		526311	0					
ANR	526483	Callee	MergeClassAds		526311	0					
ANR	526484	Identifier	MergeClassAds		526311	0					
ANR	526485	ArgumentList	resources [ i ] -> r_classad		526311	1					
ANR	526486	Argument	resources [ i ] -> r_classad		526311	0					
ANR	526487	PtrMemberAccess	resources [ i ] -> r_classad		526311	0					
ANR	526488	ArrayIndexing	resources [ i ]		526311	0					
ANR	526489	Identifier	resources		526311	0					
ANR	526490	Identifier	i		526311	1					
ANR	526491	Identifier	r_classad		526311	1					
ANR	526492	Argument	host_classad		526311	1					
ANR	526493	Identifier	host_classad		526311	0					
ANR	526494	Argument	true		526311	2					
ANR	526495	Identifier	true		526311	0					
ANR	526496	ExpressionStatement	"walk ( & Resource :: refresh_classad , how_much )"	1655:1:41046:41090	526311	12	True				
ANR	526497	CallExpression	"walk ( & Resource :: refresh_classad , how_much )"		526311	0					
ANR	526498	Callee	walk		526311	0					
ANR	526499	Identifier	walk		526311	0					
ANR	526500	ArgumentList	& Resource :: refresh_classad		526311	1					
ANR	526501	Argument	& Resource :: refresh_classad		526311	0					
ANR	526502	UnaryOperationExpression	& Resource :: refresh_classad		526311	0					
ANR	526503	UnaryOperator	&		526311	0					
ANR	526504	Identifier	Resource :: refresh_classad		526311	1					
ANR	526505	Argument	how_much		526311	1					
ANR	526506	Identifier	how_much		526311	0					
ANR	526507	ExpressionStatement	"walk ( & Resource :: compute , A_EVALUATED )"	1660:1:41264:41303	526311	13	True				
ANR	526508	CallExpression	"walk ( & Resource :: compute , A_EVALUATED )"		526311	0					
ANR	526509	Callee	walk		526311	0					
ANR	526510	Identifier	walk		526311	0					
ANR	526511	ArgumentList	& Resource :: compute		526311	1					
ANR	526512	Argument	& Resource :: compute		526311	0					
ANR	526513	UnaryOperationExpression	& Resource :: compute		526311	0					
ANR	526514	UnaryOperator	&		526311	0					
ANR	526515	Identifier	Resource :: compute		526311	1					
ANR	526516	Argument	A_EVALUATED		526311	1					
ANR	526517	Identifier	A_EVALUATED		526311	0					
ANR	526518	ExpressionStatement	"walk ( & Resource :: refresh_classad , A_EVALUATED )"	1664:1:41425:41472	526311	14	True				
ANR	526519	CallExpression	"walk ( & Resource :: refresh_classad , A_EVALUATED )"		526311	0					
ANR	526520	Callee	walk		526311	0					
ANR	526521	Identifier	walk		526311	0					
ANR	526522	ArgumentList	& Resource :: refresh_classad		526311	1					
ANR	526523	Argument	& Resource :: refresh_classad		526311	0					
ANR	526524	UnaryOperationExpression	& Resource :: refresh_classad		526311	0					
ANR	526525	UnaryOperator	&		526311	0					
ANR	526526	Identifier	Resource :: refresh_classad		526311	1					
ANR	526527	Argument	A_EVALUATED		526311	1					
ANR	526528	Identifier	A_EVALUATED		526311	0					
ANR	526529	ExpressionStatement	"walk ( & Resource :: refresh_classad , A_SHARED_SLOT )"	1670:1:41713:41762	526311	15	True				
ANR	526530	CallExpression	"walk ( & Resource :: refresh_classad , A_SHARED_SLOT )"		526311	0					
ANR	526531	Callee	walk		526311	0					
ANR	526532	Identifier	walk		526311	0					
ANR	526533	ArgumentList	& Resource :: refresh_classad		526311	1					
ANR	526534	Argument	& Resource :: refresh_classad		526311	0					
ANR	526535	UnaryOperationExpression	& Resource :: refresh_classad		526311	0					
ANR	526536	UnaryOperator	&		526311	0					
ANR	526537	Identifier	Resource :: refresh_classad		526311	1					
ANR	526538	Argument	A_SHARED_SLOT		526311	1					
ANR	526539	Identifier	A_SHARED_SLOT		526311	0					
ANR	526540	ExpressionStatement	"walk ( & Resource :: display , how_much )"	1673:1:41823:41859	526311	16	True				
ANR	526541	CallExpression	"walk ( & Resource :: display , how_much )"		526311	0					
ANR	526542	Callee	walk		526311	0					
ANR	526543	Identifier	walk		526311	0					
ANR	526544	ArgumentList	& Resource :: display		526311	1					
ANR	526545	Argument	& Resource :: display		526311	0					
ANR	526546	UnaryOperationExpression	& Resource :: display		526311	0					
ANR	526547	UnaryOperator	&		526311	0					
ANR	526548	Identifier	Resource :: display		526311	1					
ANR	526549	Argument	how_much		526311	1					
ANR	526550	Identifier	how_much		526311	0					
ANR	526551	ExpressionStatement	"stats . EndRuntime ( stats . Compute , runtime )"	1675:4:41866:41906	526311	17	True				
ANR	526552	CallExpression	"stats . EndRuntime ( stats . Compute , runtime )"		526311	0					
ANR	526553	Callee	stats . EndRuntime		526311	0					
ANR	526554	MemberAccess	stats . EndRuntime		526311	0					
ANR	526555	Identifier	stats		526311	0					
ANR	526556	Identifier	EndRuntime		526311	1					
ANR	526557	ArgumentList	stats . Compute		526311	1					
ANR	526558	Argument	stats . Compute		526311	0					
ANR	526559	MemberAccess	stats . Compute		526311	0					
ANR	526560	Identifier	stats		526311	0					
ANR	526561	Identifier	Compute		526311	1					
ANR	526562	Argument	runtime		526311	1					
ANR	526563	Identifier	runtime		526311	0					
ANR	526564	ReturnType	void		526311	1					
ANR	526565	Identifier	ResMgr :: compute		526311	2					
ANR	526566	ParameterList	amask_t how_much		526311	3					
ANR	526567	Parameter	amask_t how_much	1609:17:39700:39715	526311	0	True				
ANR	526568	ParameterType	amask_t		526311	0					
ANR	526569	Identifier	how_much		526311	1					
ANR	526570	CFGEntryNode	ENTRY		526311		True				
ANR	526571	CFGExitNode	EXIT		526311		True				
ANR	526572	Symbol	vmapi_is_virtual_machine		526311						
ANR	526573	Symbol	host_classad		526311						
ANR	526574	Symbol	stats . BeginRuntime		526311						
ANR	526575	Symbol	* * resources		526311						
ANR	526576	Symbol	A_SUMMED		526311						
ANR	526577	Symbol	ownerStateCmp		526311						
ANR	526578	Symbol	vmapi_get_host_classAd		526311						
ANR	526579	Symbol	how_much		526311						
ANR	526580	Symbol	stats . Compute		526311						
ANR	526581	Symbol	stats		526311						
ANR	526582	Symbol	A_EVALUATED		526311						
ANR	526583	Symbol	& Resource :: refresh_classad		526311						
ANR	526584	Symbol	* * i		526311						
ANR	526585	Symbol	A_SHARED_SLOT		526311						
ANR	526586	Symbol	resources [ i ] -> r_classad		526311						
ANR	526587	Symbol	resources		526311						
ANR	526588	Symbol	runtime		526311						
ANR	526589	Symbol	TRUE		526311						
ANR	526590	Symbol	i		526311						
ANR	526591	Symbol	cur_time		526311						
ANR	526592	Symbol	m_attr		526311						
ANR	526593	Symbol	& Resource :: display		526311						
ANR	526594	Symbol	nresources		526311						
ANR	526595	Symbol	* resources		526311						
ANR	526596	Symbol	* i		526311						
ANR	526597	Symbol	A_SHARED		526311						
ANR	526598	Symbol	true		526311						
ANR	526599	Symbol	time		526311						
ANR	526600	Symbol	& Resource :: compute		526311						
ANR	526601	Function	ResMgr :: publish	1679:0:41912:42328							
ANR	526602	FunctionDef	"ResMgr :: publish (ClassAd * cp , amask_t how_much)"		526601	0					
ANR	526603	CompoundStatement		1681:0:41966:42328	526601	0					
ANR	526604	IfStatement	if ( IS_UPDATE ( how_much ) && IS_PUBLIC ( how_much ) )		526601	0					
ANR	526605	Condition	IS_UPDATE ( how_much ) && IS_PUBLIC ( how_much )	1682:5:41973:42014	526601	0	True				
ANR	526606	AndExpression	IS_UPDATE ( how_much ) && IS_PUBLIC ( how_much )		526601	0		&&			
ANR	526607	CallExpression	IS_UPDATE ( how_much )		526601	0					
ANR	526608	Callee	IS_UPDATE		526601	0					
ANR	526609	Identifier	IS_UPDATE		526601	0					
ANR	526610	ArgumentList	how_much		526601	1					
ANR	526611	Argument	how_much		526601	0					
ANR	526612	Identifier	how_much		526601	0					
ANR	526613	CallExpression	IS_PUBLIC ( how_much )		526601	1					
ANR	526614	Callee	IS_PUBLIC		526601	0					
ANR	526615	Identifier	IS_PUBLIC		526601	0					
ANR	526616	ArgumentList	how_much		526601	1					
ANR	526617	Argument	how_much		526601	0					
ANR	526618	Identifier	how_much		526601	0					
ANR	526619	CompoundStatement		2:50:51:51	526601	1					
ANR	526620	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_SLOTS , numSlots ( ) )"	1683:2:42022:42062	526601	0	True				
ANR	526621	CallExpression	"cp -> Assign ( ATTR_TOTAL_SLOTS , numSlots ( ) )"		526601	0					
ANR	526622	Callee	cp -> Assign		526601	0					
ANR	526623	PtrMemberAccess	cp -> Assign		526601	0					
ANR	526624	Identifier	cp		526601	0					
ANR	526625	Identifier	Assign		526601	1					
ANR	526626	ArgumentList	ATTR_TOTAL_SLOTS		526601	1					
ANR	526627	Argument	ATTR_TOTAL_SLOTS		526601	0					
ANR	526628	Identifier	ATTR_TOTAL_SLOTS		526601	0					
ANR	526629	Argument	numSlots ( )		526601	1					
ANR	526630	CallExpression	numSlots ( )		526601	0					
ANR	526631	Callee	numSlots		526601	0					
ANR	526632	Identifier	numSlots		526601	0					
ANR	526633	ArgumentList			526601	1					
ANR	526634	IfStatement	"if ( param_boolean ( ""ALLOW_VM_CRUFT"" , false ) )"		526601	1					
ANR	526635	Condition	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"	1684:6:42070:42107	526601	0	True				
ANR	526636	CallExpression	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"		526601	0					
ANR	526637	Callee	param_boolean		526601	0					
ANR	526638	Identifier	param_boolean		526601	0					
ANR	526639	ArgumentList	"""ALLOW_VM_CRUFT"""		526601	1					
ANR	526640	Argument	"""ALLOW_VM_CRUFT"""		526601	0					
ANR	526641	PrimaryExpression	"""ALLOW_VM_CRUFT"""		526601	0					
ANR	526642	Argument	false		526601	1					
ANR	526643	Identifier	false		526601	0					
ANR	526644	CompoundStatement		4:46:143:143	526601	1					
ANR	526645	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_VIRTUAL_MACHINES , numSlots ( ) )"	1685:3:42115:42166	526601	0	True				
ANR	526646	CallExpression	"cp -> Assign ( ATTR_TOTAL_VIRTUAL_MACHINES , numSlots ( ) )"		526601	0					
ANR	526647	Callee	cp -> Assign		526601	0					
ANR	526648	PtrMemberAccess	cp -> Assign		526601	0					
ANR	526649	Identifier	cp		526601	0					
ANR	526650	Identifier	Assign		526601	1					
ANR	526651	ArgumentList	ATTR_TOTAL_VIRTUAL_MACHINES		526601	1					
ANR	526652	Argument	ATTR_TOTAL_VIRTUAL_MACHINES		526601	0					
ANR	526653	Identifier	ATTR_TOTAL_VIRTUAL_MACHINES		526601	0					
ANR	526654	Argument	numSlots ( )		526601	1					
ANR	526655	CallExpression	numSlots ( )		526601	0					
ANR	526656	Callee	numSlots		526601	0					
ANR	526657	Identifier	numSlots		526601	0					
ANR	526658	ArgumentList			526601	1					
ANR	526659	ExpressionStatement	"starter_mgr . publish ( cp , how_much )"	1689:1:42177:42212	526601	1	True				
ANR	526660	CallExpression	"starter_mgr . publish ( cp , how_much )"		526601	0					
ANR	526661	Callee	starter_mgr . publish		526601	0					
ANR	526662	MemberAccess	starter_mgr . publish		526601	0					
ANR	526663	Identifier	starter_mgr		526601	0					
ANR	526664	Identifier	publish		526601	1					
ANR	526665	ArgumentList	cp		526601	1					
ANR	526666	Argument	cp		526601	0					
ANR	526667	Identifier	cp		526601	0					
ANR	526668	Argument	how_much		526601	1					
ANR	526669	Identifier	how_much		526601	0					
ANR	526670	ExpressionStatement	"m_vmuniverse_mgr . publish ( cp , how_much )"	1690:1:42215:42253	526601	2	True				
ANR	526671	CallExpression	"m_vmuniverse_mgr . publish ( cp , how_much )"		526601	0					
ANR	526672	Callee	m_vmuniverse_mgr . publish		526601	0					
ANR	526673	MemberAccess	m_vmuniverse_mgr . publish		526601	0					
ANR	526674	Identifier	m_vmuniverse_mgr		526601	0					
ANR	526675	Identifier	publish		526601	1					
ANR	526676	ArgumentList	cp		526601	1					
ANR	526677	Argument	cp		526601	0					
ANR	526678	Identifier	cp		526601	0					
ANR	526679	Argument	how_much		526601	1					
ANR	526680	Identifier	how_much		526601	0					
ANR	526681	ExpressionStatement	m_hibernation_manager -> publish ( * cp )	1693:4:42281:42318	526601	3	True				
ANR	526682	CallExpression	m_hibernation_manager -> publish ( * cp )		526601	0					
ANR	526683	Callee	m_hibernation_manager -> publish		526601	0					
ANR	526684	PtrMemberAccess	m_hibernation_manager -> publish		526601	0					
ANR	526685	Identifier	m_hibernation_manager		526601	0					
ANR	526686	Identifier	publish		526601	1					
ANR	526687	ArgumentList	* cp		526601	1					
ANR	526688	Argument	* cp		526601	0					
ANR	526689	UnaryOperationExpression	* cp		526601	0					
ANR	526690	UnaryOperator	*		526601	0					
ANR	526691	Identifier	cp		526601	1					
ANR	526692	ReturnType	void		526601	1					
ANR	526693	Identifier	ResMgr :: publish		526601	2					
ANR	526694	ParameterList	"ClassAd * cp , amask_t how_much"		526601	3					
ANR	526695	Parameter	ClassAd * cp	1680:17:41934:41944	526601	0	True				
ANR	526696	ParameterType	ClassAd *		526601	0					
ANR	526697	Identifier	cp		526601	1					
ANR	526698	Parameter	amask_t how_much	1680:30:41947:41962	526601	1	True				
ANR	526699	ParameterType	amask_t		526601	0					
ANR	526700	Identifier	how_much		526601	1					
ANR	526701	CFGEntryNode	ENTRY		526601		True				
ANR	526702	CFGExitNode	EXIT		526601		True				
ANR	526703	Symbol	m_vmuniverse_mgr		526601						
ANR	526704	Symbol	false		526601						
ANR	526705	Symbol	param_boolean		526601						
ANR	526706	Symbol	cp		526601						
ANR	526707	Symbol	m_hibernation_manager		526601						
ANR	526708	Symbol	ATTR_TOTAL_VIRTUAL_MACHINES		526601						
ANR	526709	Symbol	how_much		526601						
ANR	526710	Symbol	* cp		526601						
ANR	526711	Symbol	numSlots		526601						
ANR	526712	Symbol	IS_UPDATE		526601						
ANR	526713	Symbol	IS_PUBLIC		526601						
ANR	526714	Symbol	ATTR_TOTAL_SLOTS		526601						
ANR	526715	Symbol	starter_mgr		526601						
ANR	526716	Function	ResMgr :: publishSlotAttrs	1699:0:42332:42503							
ANR	526717	FunctionDef	ResMgr :: publishSlotAttrs (ClassAd * cap)		526716	0					
ANR	526718	CompoundStatement		1701:0:42378:42503	526716	0					
ANR	526719	IfStatement	if ( ! resources )		526716	0					
ANR	526720	Condition	! resources	1702:5:42385:42395	526716	0	True				
ANR	526721	UnaryOperationExpression	! resources		526716	0					
ANR	526722	UnaryOperator	!		526716	0					
ANR	526723	Identifier	resources		526716	1					
ANR	526724	CompoundStatement		2:19:20:20	526716	1					
ANR	526725	ReturnStatement	return ;	1703:2:42403:42409	526716	0	True				
ANR	526726	IdentifierDeclStatement	int i ;	1705:1:42415:42420	526716	1	True				
ANR	526727	IdentifierDecl	i		526716	0					
ANR	526728	IdentifierDeclType	int		526716	0					
ANR	526729	Identifier	i		526716	1					
ANR	526730	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		526716	2					
ANR	526731	ForInit	i = 0 ;	1706:6:42428:42433	526716	0	True				
ANR	526732	AssignmentExpression	i = 0		526716	0		=			
ANR	526733	Identifier	i		526716	0					
ANR	526734	PrimaryExpression	0		526716	1					
ANR	526735	Condition	i < nresources	1706:13:42435:42448	526716	1	True				
ANR	526736	RelationalExpression	i < nresources		526716	0		<			
ANR	526737	Identifier	i		526716	0					
ANR	526738	Identifier	nresources		526716	1					
ANR	526739	PostIncDecOperationExpression	i ++	1706:29:42451:42453	526716	2	True				
ANR	526740	Identifier	i		526716	0					
ANR	526741	IncDec	++		526716	1					
ANR	526742	CompoundStatement		6:35:78:78	526716	3					
ANR	526743	ExpressionStatement	resources [ i ] -> publishSlotAttrs ( cap )	1707:2:42461:42498	526716	0	True				
ANR	526744	CallExpression	resources [ i ] -> publishSlotAttrs ( cap )		526716	0					
ANR	526745	Callee	resources [ i ] -> publishSlotAttrs		526716	0					
ANR	526746	PtrMemberAccess	resources [ i ] -> publishSlotAttrs		526716	0					
ANR	526747	ArrayIndexing	resources [ i ]		526716	0					
ANR	526748	Identifier	resources		526716	0					
ANR	526749	Identifier	i		526716	1					
ANR	526750	Identifier	publishSlotAttrs		526716	1					
ANR	526751	ArgumentList	cap		526716	1					
ANR	526752	Argument	cap		526716	0					
ANR	526753	Identifier	cap		526716	0					
ANR	526754	ReturnType	void		526716	1					
ANR	526755	Identifier	ResMgr :: publishSlotAttrs		526716	2					
ANR	526756	ParameterList	ClassAd * cap		526716	3					
ANR	526757	Parameter	ClassAd * cap	1700:26:42363:42374	526716	0	True				
ANR	526758	ParameterType	ClassAd *		526716	0					
ANR	526759	Identifier	cap		526716	1					
ANR	526760	CFGEntryNode	ENTRY		526716		True				
ANR	526761	CFGExitNode	EXIT		526716		True				
ANR	526762	Symbol	cap		526716						
ANR	526763	Symbol	* i		526716						
ANR	526764	Symbol	resources		526716						
ANR	526765	Symbol	i		526716						
ANR	526766	Symbol	nresources		526716						
ANR	526767	Symbol	* resources		526716						
ANR	526768	Function	ResMgr :: assign_load	1712:0:42507:43818							
ANR	526769	FunctionDef	ResMgr :: assign_load ()		526768	0					
ANR	526770	CompoundStatement		1714:0:42540:43818	526768	0					
ANR	526771	IfStatement	if ( ! resources )		526768	0					
ANR	526772	Condition	! resources	1715:5:42547:42557	526768	0	True				
ANR	526773	UnaryOperationExpression	! resources		526768	0					
ANR	526774	UnaryOperator	!		526768	0					
ANR	526775	Identifier	resources		526768	1					
ANR	526776	CompoundStatement		2:19:20:20	526768	1					
ANR	526777	ReturnStatement	return ;	1716:2:42565:42571	526768	0	True				
ANR	526778	IdentifierDeclStatement	int i ;	1719:1:42578:42583	526768	1	True				
ANR	526779	IdentifierDecl	i		526768	0					
ANR	526780	IdentifierDeclType	int		526768	0					
ANR	526781	Identifier	i		526768	1					
ANR	526782	IdentifierDeclStatement	float total_owner_load = m_attr -> load ( ) - m_attr -> condor_load ( ) ;	1720:1:42586:42649	526768	2	True				
ANR	526783	IdentifierDecl	total_owner_load = m_attr -> load ( ) - m_attr -> condor_load ( )		526768	0					
ANR	526784	IdentifierDeclType	float		526768	0					
ANR	526785	Identifier	total_owner_load		526768	1					
ANR	526786	AssignmentExpression	total_owner_load = m_attr -> load ( ) - m_attr -> condor_load ( )		526768	2		=			
ANR	526787	Identifier	total_owner_load		526768	0					
ANR	526788	AdditiveExpression	m_attr -> load ( ) - m_attr -> condor_load ( )		526768	1		-			
ANR	526789	CallExpression	m_attr -> load ( )		526768	0					
ANR	526790	Callee	m_attr -> load		526768	0					
ANR	526791	PtrMemberAccess	m_attr -> load		526768	0					
ANR	526792	Identifier	m_attr		526768	0					
ANR	526793	Identifier	load		526768	1					
ANR	526794	ArgumentList			526768	1					
ANR	526795	CallExpression	m_attr -> condor_load ( )		526768	1					
ANR	526796	Callee	m_attr -> condor_load		526768	0					
ANR	526797	PtrMemberAccess	m_attr -> condor_load		526768	0					
ANR	526798	Identifier	m_attr		526768	0					
ANR	526799	Identifier	condor_load		526768	1					
ANR	526800	ArgumentList			526768	1					
ANR	526801	IfStatement	if ( total_owner_load < 0 )		526768	3					
ANR	526802	Condition	total_owner_load < 0	1721:5:42656:42675	526768	0	True				
ANR	526803	RelationalExpression	total_owner_load < 0		526768	0		<			
ANR	526804	Identifier	total_owner_load		526768	0					
ANR	526805	PrimaryExpression	0		526768	1					
ANR	526806	CompoundStatement		8:28:138:138	526768	1					
ANR	526807	ExpressionStatement	total_owner_load = 0	1722:2:42683:42703	526768	0	True				
ANR	526808	AssignmentExpression	total_owner_load = 0		526768	0		=			
ANR	526809	Identifier	total_owner_load		526768	0					
ANR	526810	PrimaryExpression	0		526768	1					
ANR	526811	IfStatement	if ( is_smp ( ) )		526768	4					
ANR	526812	Condition	is_smp ( )	1724:5:42713:42720	526768	0	True				
ANR	526813	CallExpression	is_smp ( )		526768	0					
ANR	526814	Callee	is_smp		526768	0					
ANR	526815	Identifier	is_smp		526768	0					
ANR	526816	ArgumentList			526768	1					
ANR	526817	CompoundStatement		11:16:183:183	526768	1					
ANR	526818	IfStatement	if ( DebugFlags & D_LOAD )		526768	0					
ANR	526819	Condition	DebugFlags & D_LOAD	1726:6:42776:42794	526768	0	True				
ANR	526820	BitAndExpression	DebugFlags & D_LOAD		526768	0		&			
ANR	526821	Identifier	DebugFlags		526768	0					
ANR	526822	Identifier	D_LOAD		526768	1					
ANR	526823	CompoundStatement		13:28:257:257	526768	1					
ANR	526824	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s %.3f\\t%s %.3f\\t%s %.3f\\n"" , ""SystemLoad:"" , m_attr -> load ( ) , ""TotalCondorLoad:"" , m_attr -> condor_load ( ) , ""TotalOwnerLoad:"" , total_owner_load )"	1727:3:42803:42991	526768	0	True				
ANR	526825	CallExpression	"dprintf ( D_FULLDEBUG , ""%s %.3f\\t%s %.3f\\t%s %.3f\\n"" , ""SystemLoad:"" , m_attr -> load ( ) , ""TotalCondorLoad:"" , m_attr -> condor_load ( ) , ""TotalOwnerLoad:"" , total_owner_load )"		526768	0					
ANR	526826	Callee	dprintf		526768	0					
ANR	526827	Identifier	dprintf		526768	0					
ANR	526828	ArgumentList	D_FULLDEBUG		526768	1					
ANR	526829	Argument	D_FULLDEBUG		526768	0					
ANR	526830	Identifier	D_FULLDEBUG		526768	0					
ANR	526831	Argument	"""%s %.3f\\t%s %.3f\\t%s %.3f\\n"""		526768	1					
ANR	526832	PrimaryExpression	"""%s %.3f\\t%s %.3f\\t%s %.3f\\n"""		526768	0					
ANR	526833	Argument	"""SystemLoad:"""		526768	2					
ANR	526834	PrimaryExpression	"""SystemLoad:"""		526768	0					
ANR	526835	Argument	m_attr -> load ( )		526768	3					
ANR	526836	CallExpression	m_attr -> load ( )		526768	0					
ANR	526837	Callee	m_attr -> load		526768	0					
ANR	526838	PtrMemberAccess	m_attr -> load		526768	0					
ANR	526839	Identifier	m_attr		526768	0					
ANR	526840	Identifier	load		526768	1					
ANR	526841	ArgumentList			526768	1					
ANR	526842	Argument	"""TotalCondorLoad:"""		526768	4					
ANR	526843	PrimaryExpression	"""TotalCondorLoad:"""		526768	0					
ANR	526844	Argument	m_attr -> condor_load ( )		526768	5					
ANR	526845	CallExpression	m_attr -> condor_load ( )		526768	0					
ANR	526846	Callee	m_attr -> condor_load		526768	0					
ANR	526847	PtrMemberAccess	m_attr -> condor_load		526768	0					
ANR	526848	Identifier	m_attr		526768	0					
ANR	526849	Identifier	condor_load		526768	1					
ANR	526850	ArgumentList			526768	1					
ANR	526851	Argument	"""TotalOwnerLoad:"""		526768	6					
ANR	526852	PrimaryExpression	"""TotalOwnerLoad:"""		526768	0					
ANR	526853	Argument	total_owner_load		526768	7					
ANR	526854	Identifier	total_owner_load		526768	0					
ANR	526855	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		526768	1					
ANR	526856	ForInit	i = 0 ;	1737:7:43158:43163	526768	0	True				
ANR	526857	AssignmentExpression	i = 0		526768	0		=			
ANR	526858	Identifier	i		526768	0					
ANR	526859	PrimaryExpression	0		526768	1					
ANR	526860	Condition	i < nresources	1737:14:43165:43178	526768	1	True				
ANR	526861	RelationalExpression	i < nresources		526768	0		<			
ANR	526862	Identifier	i		526768	0					
ANR	526863	Identifier	nresources		526768	1					
ANR	526864	PostIncDecOperationExpression	i ++	1737:30:43181:43183	526768	2	True				
ANR	526865	Identifier	i		526768	0					
ANR	526866	IncDec	++		526768	1					
ANR	526867	CompoundStatement		24:36:646:646	526768	3					
ANR	526868	ExpressionStatement	resources [ i ] -> set_owner_load ( 0 )	1738:3:43192:43225	526768	0	True				
ANR	526869	CallExpression	resources [ i ] -> set_owner_load ( 0 )		526768	0					
ANR	526870	Callee	resources [ i ] -> set_owner_load		526768	0					
ANR	526871	PtrMemberAccess	resources [ i ] -> set_owner_load		526768	0					
ANR	526872	ArrayIndexing	resources [ i ]		526768	0					
ANR	526873	Identifier	resources		526768	0					
ANR	526874	Identifier	i		526768	1					
ANR	526875	Identifier	set_owner_load		526768	1					
ANR	526876	ArgumentList	0		526768	1					
ANR	526877	Argument	0		526768	0					
ANR	526878	PrimaryExpression	0		526768	0					
ANR	526879	ForStatement	for ( i = 0 ; i < ( nresources - 1 ) && total_owner_load > 1 ; i ++ )		526768	5					
ANR	526880	ForInit	i = 0 ;	1749:6:43637:43642	526768	0	True				
ANR	526881	AssignmentExpression	i = 0		526768	0		=			
ANR	526882	Identifier	i		526768	0					
ANR	526883	PrimaryExpression	0		526768	1					
ANR	526884	Condition	i < ( nresources - 1 ) && total_owner_load > 1	1749:13:43644:43687	526768	1	True				
ANR	526885	AndExpression	i < ( nresources - 1 ) && total_owner_load > 1		526768	0		&&			
ANR	526886	RelationalExpression	i < ( nresources - 1 )		526768	0		<			
ANR	526887	Identifier	i		526768	0					
ANR	526888	AdditiveExpression	nresources - 1		526768	1		-			
ANR	526889	Identifier	nresources		526768	0					
ANR	526890	PrimaryExpression	1		526768	1					
ANR	526891	RelationalExpression	total_owner_load > 1		526768	1		>			
ANR	526892	Identifier	total_owner_load		526768	0					
ANR	526893	PrimaryExpression	1		526768	1					
ANR	526894	PostIncDecOperationExpression	i ++	1749:59:43690:43692	526768	2	True				
ANR	526895	Identifier	i		526768	0					
ANR	526896	IncDec	++		526768	1					
ANR	526897	CompoundStatement		36:65:1155:1155	526768	3					
ANR	526898	ExpressionStatement	resources [ i ] -> set_owner_load ( 1.0 )	1750:2:43700:43735	526768	0	True				
ANR	526899	CallExpression	resources [ i ] -> set_owner_load ( 1.0 )		526768	0					
ANR	526900	Callee	resources [ i ] -> set_owner_load		526768	0					
ANR	526901	PtrMemberAccess	resources [ i ] -> set_owner_load		526768	0					
ANR	526902	ArrayIndexing	resources [ i ]		526768	0					
ANR	526903	Identifier	resources		526768	0					
ANR	526904	Identifier	i		526768	1					
ANR	526905	Identifier	set_owner_load		526768	1					
ANR	526906	ArgumentList	1.0		526768	1					
ANR	526907	Argument	1.0		526768	0					
ANR	526908	PrimaryExpression	1.0		526768	0					
ANR	526909	ExpressionStatement	total_owner_load -= 1.0	1751:2:43739:43762	526768	1	True				
ANR	526910	AssignmentExpression	total_owner_load -= 1.0		526768	0		-=			
ANR	526911	Identifier	total_owner_load		526768	0					
ANR	526912	PrimaryExpression	1.0		526768	1					
ANR	526913	ExpressionStatement	resources [ i ] -> set_owner_load ( total_owner_load )	1753:1:43768:43816	526768	6	True				
ANR	526914	CallExpression	resources [ i ] -> set_owner_load ( total_owner_load )		526768	0					
ANR	526915	Callee	resources [ i ] -> set_owner_load		526768	0					
ANR	526916	PtrMemberAccess	resources [ i ] -> set_owner_load		526768	0					
ANR	526917	ArrayIndexing	resources [ i ]		526768	0					
ANR	526918	Identifier	resources		526768	0					
ANR	526919	Identifier	i		526768	1					
ANR	526920	Identifier	set_owner_load		526768	1					
ANR	526921	ArgumentList	total_owner_load		526768	1					
ANR	526922	Argument	total_owner_load		526768	0					
ANR	526923	Identifier	total_owner_load		526768	0					
ANR	526924	ReturnType	void		526768	1					
ANR	526925	Identifier	ResMgr :: assign_load		526768	2					
ANR	526926	ParameterList			526768	3					
ANR	526927	CFGEntryNode	ENTRY		526768		True				
ANR	526928	CFGExitNode	EXIT		526768		True				
ANR	526929	Symbol	m_attr -> condor_load		526768						
ANR	526930	Symbol	m_attr -> load		526768						
ANR	526931	Symbol	resources		526768						
ANR	526932	Symbol	i		526768						
ANR	526933	Symbol	total_owner_load		526768						
ANR	526934	Symbol	D_LOAD		526768						
ANR	526935	Symbol	DebugFlags		526768						
ANR	526936	Symbol	D_FULLDEBUG		526768						
ANR	526937	Symbol	m_attr		526768						
ANR	526938	Symbol	nresources		526768						
ANR	526939	Symbol	is_smp		526768						
ANR	526940	Symbol	* resources		526768						
ANR	526941	Symbol	* i		526768						
ANR	526942	Symbol	* m_attr		526768						
ANR	526943	Function	ResMgr :: assign_keyboard	1757:0:43822:44898							
ANR	526944	FunctionDef	ResMgr :: assign_keyboard ()		526943	0					
ANR	526945	CompoundStatement		1759:0:43859:44898	526943	0					
ANR	526946	IfStatement	if ( ! resources )		526943	0					
ANR	526947	Condition	! resources	1760:5:43866:43876	526943	0	True				
ANR	526948	UnaryOperationExpression	! resources		526943	0					
ANR	526949	UnaryOperator	!		526943	0					
ANR	526950	Identifier	resources		526943	1					
ANR	526951	CompoundStatement		2:19:20:20	526943	1					
ANR	526952	ReturnStatement	return ;	1761:2:43884:43890	526943	0	True				
ANR	526953	IdentifierDeclStatement	int i ;	1764:1:43897:43902	526943	1	True				
ANR	526954	IdentifierDecl	i		526943	0					
ANR	526955	IdentifierDeclType	int		526943	0					
ANR	526956	Identifier	i		526943	1					
ANR	526957	IdentifierDeclStatement	time_t console = m_attr -> console_idle ( ) ;	1765:1:43905:43944	526943	2	True				
ANR	526958	IdentifierDecl	console = m_attr -> console_idle ( )		526943	0					
ANR	526959	IdentifierDeclType	time_t		526943	0					
ANR	526960	Identifier	console		526943	1					
ANR	526961	AssignmentExpression	console = m_attr -> console_idle ( )		526943	2		=			
ANR	526962	Identifier	console		526943	0					
ANR	526963	CallExpression	m_attr -> console_idle ( )		526943	1					
ANR	526964	Callee	m_attr -> console_idle		526943	0					
ANR	526965	PtrMemberAccess	m_attr -> console_idle		526943	0					
ANR	526966	Identifier	m_attr		526943	0					
ANR	526967	Identifier	console_idle		526943	1					
ANR	526968	ArgumentList			526943	1					
ANR	526969	IdentifierDeclStatement	time_t keyboard = m_attr -> keyboard_idle ( ) ;	1766:1:43947:43988	526943	3	True				
ANR	526970	IdentifierDecl	keyboard = m_attr -> keyboard_idle ( )		526943	0					
ANR	526971	IdentifierDeclType	time_t		526943	0					
ANR	526972	Identifier	keyboard		526943	1					
ANR	526973	AssignmentExpression	keyboard = m_attr -> keyboard_idle ( )		526943	2		=			
ANR	526974	Identifier	keyboard		526943	0					
ANR	526975	CallExpression	m_attr -> keyboard_idle ( )		526943	1					
ANR	526976	Callee	m_attr -> keyboard_idle		526943	0					
ANR	526977	PtrMemberAccess	m_attr -> keyboard_idle		526943	0					
ANR	526978	Identifier	m_attr		526943	0					
ANR	526979	Identifier	keyboard_idle		526943	1					
ANR	526980	ArgumentList			526943	1					
ANR	526981	IdentifierDeclStatement	time_t max ;	1767:1:43991:44001	526943	4	True				
ANR	526982	IdentifierDecl	max		526943	0					
ANR	526983	IdentifierDeclType	time_t		526943	0					
ANR	526984	Identifier	max		526943	1					
ANR	526985	ExpressionStatement	max = ( cur_time - startd_startup ) + disconnected_keyboard_boost	1772:1:44166:44229	526943	5	True				
ANR	526986	AssignmentExpression	max = ( cur_time - startd_startup ) + disconnected_keyboard_boost		526943	0		=			
ANR	526987	Identifier	max		526943	0					
ANR	526988	AdditiveExpression	( cur_time - startd_startup ) + disconnected_keyboard_boost		526943	1		+			
ANR	526989	AdditiveExpression	cur_time - startd_startup		526943	0		-			
ANR	526990	Identifier	cur_time		526943	0					
ANR	526991	Identifier	startd_startup		526943	1					
ANR	526992	Identifier	disconnected_keyboard_boost		526943	1					
ANR	526993	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		526943	6					
ANR	526994	ForInit	i = 0 ;	1773:6:44237:44242	526943	0	True				
ANR	526995	AssignmentExpression	i = 0		526943	0		=			
ANR	526996	Identifier	i		526943	0					
ANR	526997	PrimaryExpression	0		526943	1					
ANR	526998	Condition	i < nresources	1773:13:44244:44257	526943	1	True				
ANR	526999	RelationalExpression	i < nresources		526943	0		<			
ANR	527000	Identifier	i		526943	0					
ANR	527001	Identifier	nresources		526943	1					
ANR	527002	PostIncDecOperationExpression	i ++	1773:29:44260:44262	526943	2	True				
ANR	527003	Identifier	i		526943	0					
ANR	527004	IncDec	++		526943	1					
ANR	527005	CompoundStatement		15:35:406:406	526943	3					
ANR	527006	ExpressionStatement	resources [ i ] -> r_attr -> set_console ( max )	1774:2:44270:44310	526943	0	True				
ANR	527007	CallExpression	resources [ i ] -> r_attr -> set_console ( max )		526943	0					
ANR	527008	Callee	resources [ i ] -> r_attr -> set_console		526943	0					
ANR	527009	PtrMemberAccess	resources [ i ] -> r_attr -> set_console		526943	0					
ANR	527010	PtrMemberAccess	resources [ i ] -> r_attr		526943	0					
ANR	527011	ArrayIndexing	resources [ i ]		526943	0					
ANR	527012	Identifier	resources		526943	0					
ANR	527013	Identifier	i		526943	1					
ANR	527014	Identifier	r_attr		526943	1					
ANR	527015	Identifier	set_console		526943	1					
ANR	527016	ArgumentList	max		526943	1					
ANR	527017	Argument	max		526943	0					
ANR	527018	Identifier	max		526943	0					
ANR	527019	ExpressionStatement	resources [ i ] -> r_attr -> set_keyboard ( max )	1775:2:44314:44355	526943	1	True				
ANR	527020	CallExpression	resources [ i ] -> r_attr -> set_keyboard ( max )		526943	0					
ANR	527021	Callee	resources [ i ] -> r_attr -> set_keyboard		526943	0					
ANR	527022	PtrMemberAccess	resources [ i ] -> r_attr -> set_keyboard		526943	0					
ANR	527023	PtrMemberAccess	resources [ i ] -> r_attr		526943	0					
ANR	527024	ArrayIndexing	resources [ i ]		526943	0					
ANR	527025	Identifier	resources		526943	0					
ANR	527026	Identifier	i		526943	1					
ANR	527027	Identifier	r_attr		526943	1					
ANR	527028	Identifier	set_keyboard		526943	1					
ANR	527029	ArgumentList	max		526943	1					
ANR	527030	Argument	max		526943	0					
ANR	527031	Identifier	max		526943	0					
ANR	527032	ForStatement	for ( i = 0 ; i < console_slots && i < nresources ; i ++ )		526943	7					
ANR	527033	ForInit	i = 0 ;	1782:6:44570:44575	526943	0	True				
ANR	527034	AssignmentExpression	i = 0		526943	0		=			
ANR	527035	Identifier	i		526943	0					
ANR	527036	PrimaryExpression	0		526943	1					
ANR	527037	Condition	i < console_slots && i < nresources	1782:13:44577:44612	526943	1	True				
ANR	527038	AndExpression	i < console_slots && i < nresources		526943	0		&&			
ANR	527039	RelationalExpression	i < console_slots		526943	0		<			
ANR	527040	Identifier	i		526943	0					
ANR	527041	Identifier	console_slots		526943	1					
ANR	527042	RelationalExpression	i < nresources		526943	1		<			
ANR	527043	Identifier	i		526943	0					
ANR	527044	Identifier	nresources		526943	1					
ANR	527045	PostIncDecOperationExpression	i ++	1782:51:44615:44617	526943	2	True				
ANR	527046	Identifier	i		526943	0					
ANR	527047	IncDec	++		526943	1					
ANR	527048	CompoundStatement		24:57:761:761	526943	3					
ANR	527049	ExpressionStatement	resources [ i ] -> r_attr -> set_console ( console )	1783:2:44625:44669	526943	0	True				
ANR	527050	CallExpression	resources [ i ] -> r_attr -> set_console ( console )		526943	0					
ANR	527051	Callee	resources [ i ] -> r_attr -> set_console		526943	0					
ANR	527052	PtrMemberAccess	resources [ i ] -> r_attr -> set_console		526943	0					
ANR	527053	PtrMemberAccess	resources [ i ] -> r_attr		526943	0					
ANR	527054	ArrayIndexing	resources [ i ]		526943	0					
ANR	527055	Identifier	resources		526943	0					
ANR	527056	Identifier	i		526943	1					
ANR	527057	Identifier	r_attr		526943	1					
ANR	527058	Identifier	set_console		526943	1					
ANR	527059	ArgumentList	console		526943	1					
ANR	527060	Argument	console		526943	0					
ANR	527061	Identifier	console		526943	0					
ANR	527062	ExpressionStatement	resources [ i ] -> r_attr -> set_keyboard ( console )	1784:2:44673:44718	526943	1	True				
ANR	527063	CallExpression	resources [ i ] -> r_attr -> set_keyboard ( console )		526943	0					
ANR	527064	Callee	resources [ i ] -> r_attr -> set_keyboard		526943	0					
ANR	527065	PtrMemberAccess	resources [ i ] -> r_attr -> set_keyboard		526943	0					
ANR	527066	PtrMemberAccess	resources [ i ] -> r_attr		526943	0					
ANR	527067	ArrayIndexing	resources [ i ]		526943	0					
ANR	527068	Identifier	resources		526943	0					
ANR	527069	Identifier	i		526943	1					
ANR	527070	Identifier	r_attr		526943	1					
ANR	527071	Identifier	set_keyboard		526943	1					
ANR	527072	ArgumentList	console		526943	1					
ANR	527073	Argument	console		526943	0					
ANR	527074	Identifier	console		526943	0					
ANR	527075	ForStatement	for ( i = 0 ; i < keyboard_slots && i < nresources ; i ++ )		526943	8					
ANR	527076	ForInit	i = 0 ;	1788:6:44792:44797	526943	0	True				
ANR	527077	AssignmentExpression	i = 0		526943	0		=			
ANR	527078	Identifier	i		526943	0					
ANR	527079	PrimaryExpression	0		526943	1					
ANR	527080	Condition	i < keyboard_slots && i < nresources	1788:13:44799:44834	526943	1	True				
ANR	527081	AndExpression	i < keyboard_slots && i < nresources		526943	0		&&			
ANR	527082	RelationalExpression	i < keyboard_slots		526943	0		<			
ANR	527083	Identifier	i		526943	0					
ANR	527084	Identifier	keyboard_slots		526943	1					
ANR	527085	RelationalExpression	i < nresources		526943	1		<			
ANR	527086	Identifier	i		526943	0					
ANR	527087	Identifier	nresources		526943	1					
ANR	527088	PostIncDecOperationExpression	i ++	1788:51:44837:44839	526943	2	True				
ANR	527089	Identifier	i		526943	0					
ANR	527090	IncDec	++		526943	1					
ANR	527091	CompoundStatement		30:57:983:983	526943	3					
ANR	527092	ExpressionStatement	resources [ i ] -> r_attr -> set_keyboard ( keyboard )	1789:2:44847:44893	526943	0	True				
ANR	527093	CallExpression	resources [ i ] -> r_attr -> set_keyboard ( keyboard )		526943	0					
ANR	527094	Callee	resources [ i ] -> r_attr -> set_keyboard		526943	0					
ANR	527095	PtrMemberAccess	resources [ i ] -> r_attr -> set_keyboard		526943	0					
ANR	527096	PtrMemberAccess	resources [ i ] -> r_attr		526943	0					
ANR	527097	ArrayIndexing	resources [ i ]		526943	0					
ANR	527098	Identifier	resources		526943	0					
ANR	527099	Identifier	i		526943	1					
ANR	527100	Identifier	r_attr		526943	1					
ANR	527101	Identifier	set_keyboard		526943	1					
ANR	527102	ArgumentList	keyboard		526943	1					
ANR	527103	Argument	keyboard		526943	0					
ANR	527104	Identifier	keyboard		526943	0					
ANR	527105	ReturnType	void		526943	1					
ANR	527106	Identifier	ResMgr :: assign_keyboard		526943	2					
ANR	527107	ParameterList			526943	3					
ANR	527108	CFGEntryNode	ENTRY		526943		True				
ANR	527109	CFGExitNode	EXIT		526943		True				
ANR	527110	Symbol	console		526943						
ANR	527111	Symbol	keyboard		526943						
ANR	527112	Symbol	* * i		526943						
ANR	527113	Symbol	max		526943						
ANR	527114	Symbol	startd_startup		526943						
ANR	527115	Symbol	disconnected_keyboard_boost		526943						
ANR	527116	Symbol	resources		526943						
ANR	527117	Symbol	i		526943						
ANR	527118	Symbol	cur_time		526943						
ANR	527119	Symbol	* * resources		526943						
ANR	527120	Symbol	m_attr		526943						
ANR	527121	Symbol	nresources		526943						
ANR	527122	Symbol	m_attr -> keyboard_idle		526943						
ANR	527123	Symbol	* resources		526943						
ANR	527124	Symbol	* i		526943						
ANR	527125	Symbol	console_slots		526943						
ANR	527126	Symbol	* m_attr		526943						
ANR	527127	Symbol	keyboard_slots		526943						
ANR	527128	Symbol	resources [ i ] -> r_attr		526943						
ANR	527129	Symbol	m_attr -> console_idle		526943						
ANR	527130	Function	ResMgr :: check_polling	1794:0:44902:45085							
ANR	527131	FunctionDef	ResMgr :: check_polling ()		527130	0					
ANR	527132	CompoundStatement		1796:0:44937:45085	527130	0					
ANR	527133	IfStatement	if ( ! resources )		527130	0					
ANR	527134	Condition	! resources	1797:5:44944:44954	527130	0	True				
ANR	527135	UnaryOperationExpression	! resources		527130	0					
ANR	527136	UnaryOperator	!		527130	0					
ANR	527137	Identifier	resources		527130	1					
ANR	527138	CompoundStatement		2:19:20:20	527130	1					
ANR	527139	ReturnStatement	return ;	1798:2:44962:44968	527130	0	True				
ANR	527140	IfStatement	if ( needsPolling ( ) || m_attr -> condor_load ( ) > 0 )		527130	1					
ANR	527141	Condition	needsPolling ( ) || m_attr -> condor_load ( ) > 0	1801:5:44979:45021	527130	0	True				
ANR	527142	OrExpression	needsPolling ( ) || m_attr -> condor_load ( ) > 0		527130	0		||			
ANR	527143	CallExpression	needsPolling ( )		527130	0					
ANR	527144	Callee	needsPolling		527130	0					
ANR	527145	Identifier	needsPolling		527130	0					
ANR	527146	ArgumentList			527130	1					
ANR	527147	RelationalExpression	m_attr -> condor_load ( ) > 0		527130	1		>			
ANR	527148	CallExpression	m_attr -> condor_load ( )		527130	0					
ANR	527149	Callee	m_attr -> condor_load		527130	0					
ANR	527150	PtrMemberAccess	m_attr -> condor_load		527130	0					
ANR	527151	Identifier	m_attr		527130	0					
ANR	527152	Identifier	condor_load		527130	1					
ANR	527153	ArgumentList			527130	1					
ANR	527154	PrimaryExpression	0		527130	1					
ANR	527155	CompoundStatement		6:51:87:87	527130	1					
ANR	527156	ExpressionStatement	start_poll_timer ( )	1802:2:45029:45047	527130	0	True				
ANR	527157	CallExpression	start_poll_timer ( )		527130	0					
ANR	527158	Callee	start_poll_timer		527130	0					
ANR	527159	Identifier	start_poll_timer		527130	0					
ANR	527160	ArgumentList			527130	1					
ANR	527161	ElseStatement	else		527130	0					
ANR	527162	CompoundStatement		8:8:119:119	527130	0					
ANR	527163	ExpressionStatement	cancel_poll_timer ( )	1804:2:45061:45080	527130	0	True				
ANR	527164	CallExpression	cancel_poll_timer ( )		527130	0					
ANR	527165	Callee	cancel_poll_timer		527130	0					
ANR	527166	Identifier	cancel_poll_timer		527130	0					
ANR	527167	ArgumentList			527130	1					
ANR	527168	ReturnType	void		527130	1					
ANR	527169	Identifier	ResMgr :: check_polling		527130	2					
ANR	527170	ParameterList			527130	3					
ANR	527171	CFGEntryNode	ENTRY		527130		True				
ANR	527172	CFGExitNode	EXIT		527130		True				
ANR	527173	Symbol	m_attr -> condor_load		527130						
ANR	527174	Symbol	* m_attr		527130						
ANR	527175	Symbol	resources		527130						
ANR	527176	Symbol	needsPolling		527130						
ANR	527177	Symbol	m_attr		527130						
ANR	527178	Function	ResMgr :: start_update_timer	1809:0:45089:45617							
ANR	527179	FunctionDef	ResMgr :: start_update_timer ()		527178	0					
ANR	527180	CompoundStatement		1811:0:45128:45617	527178	0					
ANR	527181	IdentifierDeclStatement	int initial_interval ;	1812:1:45131:45152	527178	0	True				
ANR	527182	IdentifierDecl	initial_interval		527178	0					
ANR	527183	IdentifierDeclType	int		527178	0					
ANR	527184	Identifier	initial_interval		527178	1					
ANR	527185	IfStatement	if ( update_offset )		527178	1					
ANR	527186	Condition	update_offset	1814:6:45161:45173	527178	0	True				
ANR	527187	Identifier	update_offset		527178	0					
ANR	527188	CompoundStatement		4:22:48:48	527178	1					
ANR	527189	ExpressionStatement	initial_interval = update_offset	1815:2:45181:45213	527178	0	True				
ANR	527190	AssignmentExpression	initial_interval = update_offset		527178	0		=			
ANR	527191	Identifier	initial_interval		527178	0					
ANR	527192	Identifier	update_offset		527178	1					
ANR	527193	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delaying initial update by %d seconds\\n"" , update_offset )"	1816:2:45217:45302	527178	1	True				
ANR	527194	CallExpression	"dprintf ( D_FULLDEBUG , ""Delaying initial update by %d seconds\\n"" , update_offset )"		527178	0					
ANR	527195	Callee	dprintf		527178	0					
ANR	527196	Identifier	dprintf		527178	0					
ANR	527197	ArgumentList	D_FULLDEBUG		527178	1					
ANR	527198	Argument	D_FULLDEBUG		527178	0					
ANR	527199	Identifier	D_FULLDEBUG		527178	0					
ANR	527200	Argument	"""Delaying initial update by %d seconds\\n"""		527178	1					
ANR	527201	PrimaryExpression	"""Delaying initial update by %d seconds\\n"""		527178	0					
ANR	527202	Argument	update_offset		527178	2					
ANR	527203	Identifier	update_offset		527178	0					
ANR	527204	ElseStatement	else		527178	0					
ANR	527205	CompoundStatement		8:8:183:183	527178	0					
ANR	527206	ExpressionStatement	initial_interval = update_interval	1819:2:45316:45350	527178	0	True				
ANR	527207	AssignmentExpression	initial_interval = update_interval		527178	0		=			
ANR	527208	Identifier	initial_interval		527178	0					
ANR	527209	Identifier	update_interval		527178	1					
ANR	527210	ExpressionStatement	update_all ( )	1820:2:45354:45367	527178	1	True				
ANR	527211	CallExpression	update_all ( )		527178	0					
ANR	527212	Callee	update_all		527178	0					
ANR	527213	Identifier	update_all		527178	0					
ANR	527214	ArgumentList			527178	1					
ANR	527215	ExpressionStatement	"up_tid = daemonCore -> Register_Timer ( initial_interval , update_interval , ( TimerHandlercpp ) & ResMgr :: eval_and_update_all , ""eval_and_update_all"" , this )"	1822:1:45373:45531	527178	2	True				
ANR	527216	AssignmentExpression	"up_tid = daemonCore -> Register_Timer ( initial_interval , update_interval , ( TimerHandlercpp ) & ResMgr :: eval_and_update_all , ""eval_and_update_all"" , this )"		527178	0		=			
ANR	527217	Identifier	up_tid		527178	0					
ANR	527218	CallExpression	"daemonCore -> Register_Timer ( initial_interval , update_interval , ( TimerHandlercpp ) & ResMgr :: eval_and_update_all , ""eval_and_update_all"" , this )"		527178	1					
ANR	527219	Callee	daemonCore -> Register_Timer		527178	0					
ANR	527220	PtrMemberAccess	daemonCore -> Register_Timer		527178	0					
ANR	527221	Identifier	daemonCore		527178	0					
ANR	527222	Identifier	Register_Timer		527178	1					
ANR	527223	ArgumentList	initial_interval		527178	1					
ANR	527224	Argument	initial_interval		527178	0					
ANR	527225	Identifier	initial_interval		527178	0					
ANR	527226	Argument	update_interval		527178	1					
ANR	527227	Identifier	update_interval		527178	0					
ANR	527228	Argument	( TimerHandlercpp ) & ResMgr :: eval_and_update_all		527178	2					
ANR	527229	CastExpression	( TimerHandlercpp ) & ResMgr :: eval_and_update_all		527178	0					
ANR	527230	CastTarget	TimerHandlercpp		527178	0					
ANR	527231	UnaryOperationExpression	& ResMgr :: eval_and_update_all		527178	1					
ANR	527232	UnaryOperator	&		527178	0					
ANR	527233	Identifier	ResMgr :: eval_and_update_all		527178	1					
ANR	527234	Argument	"""eval_and_update_all"""		527178	3					
ANR	527235	PrimaryExpression	"""eval_and_update_all"""		527178	0					
ANR	527236	Argument	this		527178	4					
ANR	527237	Identifier	this		527178	0					
ANR	527238	IfStatement	if ( up_tid < 0 )		527178	3					
ANR	527239	Condition	up_tid < 0	1828:5:45538:45547	527178	0	True				
ANR	527240	RelationalExpression	up_tid < 0		527178	0		<			
ANR	527241	Identifier	up_tid		527178	0					
ANR	527242	PrimaryExpression	0		527178	1					
ANR	527243	CompoundStatement		18:18:422:422	527178	1					
ANR	527244	ExpressionStatement	"EXCEPT ( ""Can't register DaemonCore timer"" )"	1829:2:45555:45598	527178	0	True				
ANR	527245	CallExpression	"EXCEPT ( ""Can't register DaemonCore timer"" )"		527178	0					
ANR	527246	Callee	EXCEPT		527178	0					
ANR	527247	Identifier	EXCEPT		527178	0					
ANR	527248	ArgumentList	"""Can't register DaemonCore timer"""		527178	1					
ANR	527249	Argument	"""Can't register DaemonCore timer"""		527178	0					
ANR	527250	PrimaryExpression	"""Can't register DaemonCore timer"""		527178	0					
ANR	527251	ReturnStatement	return TRUE ;	1831:1:45604:45615	527178	4	True				
ANR	527252	Identifier	TRUE		527178	0					
ANR	527253	ReturnType	int		527178	1					
ANR	527254	Identifier	ResMgr :: start_update_timer		527178	2					
ANR	527255	ParameterList			527178	3					
ANR	527256	CFGEntryNode	ENTRY		527178		True				
ANR	527257	CFGExitNode	EXIT		527178		True				
ANR	527258	Symbol	up_tid		527178						
ANR	527259	Symbol	& ResMgr :: eval_and_update_all		527178						
ANR	527260	Symbol	update_interval		527178						
ANR	527261	Symbol	* daemonCore		527178						
ANR	527262	Symbol	initial_interval		527178						
ANR	527263	Symbol	daemonCore		527178						
ANR	527264	Symbol	daemonCore -> Register_Timer		527178						
ANR	527265	Symbol	this		527178						
ANR	527266	Symbol	TRUE		527178						
ANR	527267	Symbol	D_FULLDEBUG		527178						
ANR	527268	Symbol	update_offset		527178						
ANR	527269	Function	ResMgr :: start_poll_timer	1835:0:45621:46030							
ANR	527270	FunctionDef	ResMgr :: start_poll_timer ()		527269	0					
ANR	527271	CompoundStatement		1837:0:45658:46030	527269	0					
ANR	527272	IfStatement	if ( poll_tid >= 0 )		527269	0					
ANR	527273	Condition	poll_tid >= 0	1838:5:45665:45677	527269	0	True				
ANR	527274	RelationalExpression	poll_tid >= 0		527269	0		>=			
ANR	527275	Identifier	poll_tid		527269	0					
ANR	527276	PrimaryExpression	0		527269	1					
ANR	527277	CompoundStatement		2:21:22:22	527269	1					
ANR	527278	ReturnStatement	return TRUE ;	1840:2:45714:45725	527269	0	True				
ANR	527279	Identifier	TRUE		527269	0					
ANR	527280	ExpressionStatement	"poll_tid = daemonCore -> Register_Timer ( polling_interval , polling_interval , ( TimerHandlercpp ) & ResMgr :: eval_all , ""poll_resources"" , this )"	1842:1:45731:45889	527269	1	True				
ANR	527281	AssignmentExpression	"poll_tid = daemonCore -> Register_Timer ( polling_interval , polling_interval , ( TimerHandlercpp ) & ResMgr :: eval_all , ""poll_resources"" , this )"		527269	0		=			
ANR	527282	Identifier	poll_tid		527269	0					
ANR	527283	CallExpression	"daemonCore -> Register_Timer ( polling_interval , polling_interval , ( TimerHandlercpp ) & ResMgr :: eval_all , ""poll_resources"" , this )"		527269	1					
ANR	527284	Callee	daemonCore -> Register_Timer		527269	0					
ANR	527285	PtrMemberAccess	daemonCore -> Register_Timer		527269	0					
ANR	527286	Identifier	daemonCore		527269	0					
ANR	527287	Identifier	Register_Timer		527269	1					
ANR	527288	ArgumentList	polling_interval		527269	1					
ANR	527289	Argument	polling_interval		527269	0					
ANR	527290	Identifier	polling_interval		527269	0					
ANR	527291	Argument	polling_interval		527269	1					
ANR	527292	Identifier	polling_interval		527269	0					
ANR	527293	Argument	( TimerHandlercpp ) & ResMgr :: eval_all		527269	2					
ANR	527294	CastExpression	( TimerHandlercpp ) & ResMgr :: eval_all		527269	0					
ANR	527295	CastTarget	TimerHandlercpp		527269	0					
ANR	527296	UnaryOperationExpression	& ResMgr :: eval_all		527269	1					
ANR	527297	UnaryOperator	&		527269	0					
ANR	527298	Identifier	ResMgr :: eval_all		527269	1					
ANR	527299	Argument	"""poll_resources"""		527269	3					
ANR	527300	PrimaryExpression	"""poll_resources"""		527269	0					
ANR	527301	Argument	this		527269	4					
ANR	527302	Identifier	this		527269	0					
ANR	527303	IfStatement	if ( poll_tid < 0 )		527269	2					
ANR	527304	Condition	poll_tid < 0	1847:5:45896:45907	527269	0	True				
ANR	527305	RelationalExpression	poll_tid < 0		527269	0		<			
ANR	527306	Identifier	poll_tid		527269	0					
ANR	527307	PrimaryExpression	0		527269	1					
ANR	527308	CompoundStatement		11:20:252:252	527269	1					
ANR	527309	ExpressionStatement	"EXCEPT ( ""Can't register DaemonCore timer"" )"	1848:2:45915:45958	527269	0	True				
ANR	527310	CallExpression	"EXCEPT ( ""Can't register DaemonCore timer"" )"		527269	0					
ANR	527311	Callee	EXCEPT		527269	0					
ANR	527312	Identifier	EXCEPT		527269	0					
ANR	527313	ArgumentList	"""Can't register DaemonCore timer"""		527269	1					
ANR	527314	Argument	"""Can't register DaemonCore timer"""		527269	0					
ANR	527315	PrimaryExpression	"""Can't register DaemonCore timer"""		527269	0					
ANR	527316	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Started polling timer.\\n"" )"	1850:1:45964:46014	527269	3	True				
ANR	527317	CallExpression	"dprintf ( D_FULLDEBUG , ""Started polling timer.\\n"" )"		527269	0					
ANR	527318	Callee	dprintf		527269	0					
ANR	527319	Identifier	dprintf		527269	0					
ANR	527320	ArgumentList	D_FULLDEBUG		527269	1					
ANR	527321	Argument	D_FULLDEBUG		527269	0					
ANR	527322	Identifier	D_FULLDEBUG		527269	0					
ANR	527323	Argument	"""Started polling timer.\\n"""		527269	1					
ANR	527324	PrimaryExpression	"""Started polling timer.\\n"""		527269	0					
ANR	527325	ReturnStatement	return TRUE ;	1851:1:46017:46028	527269	4	True				
ANR	527326	Identifier	TRUE		527269	0					
ANR	527327	ReturnType	int		527269	1					
ANR	527328	Identifier	ResMgr :: start_poll_timer		527269	2					
ANR	527329	ParameterList			527269	3					
ANR	527330	CFGEntryNode	ENTRY		527269		True				
ANR	527331	CFGExitNode	EXIT		527269		True				
ANR	527332	Symbol	* daemonCore		527269						
ANR	527333	Symbol	daemonCore		527269						
ANR	527334	Symbol	daemonCore -> Register_Timer		527269						
ANR	527335	Symbol	this		527269						
ANR	527336	Symbol	TRUE		527269						
ANR	527337	Symbol	D_FULLDEBUG		527269						
ANR	527338	Symbol	& ResMgr :: eval_all		527269						
ANR	527339	Symbol	poll_tid		527269						
ANR	527340	Symbol	polling_interval		527269						
ANR	527341	Function	ResMgr :: cancel_poll_timer	1855:0:46034:46389							
ANR	527342	FunctionDef	ResMgr :: cancel_poll_timer ()		527341	0					
ANR	527343	CompoundStatement		1857:0:46073:46389	527341	0					
ANR	527344	IdentifierDeclStatement	int rval ;	1858:1:46076:46084	527341	0	True				
ANR	527345	IdentifierDecl	rval		527341	0					
ANR	527346	IdentifierDeclType	int		527341	0					
ANR	527347	Identifier	rval		527341	1					
ANR	527348	IfStatement	if ( poll_tid != - 1 )		527341	1					
ANR	527349	Condition	poll_tid != - 1	1859:5:46091:46104	527341	0	True				
ANR	527350	EqualityExpression	poll_tid != - 1		527341	0		!=			
ANR	527351	Identifier	poll_tid		527341	0					
ANR	527352	UnaryOperationExpression	- 1		527341	1					
ANR	527353	UnaryOperator	-		527341	0					
ANR	527354	PrimaryExpression	1		527341	1					
ANR	527355	CompoundStatement		3:22:34:34	527341	1					
ANR	527356	ExpressionStatement	rval = daemonCore -> Cancel_Timer ( poll_tid )	1860:2:46112:46155	527341	0	True				
ANR	527357	AssignmentExpression	rval = daemonCore -> Cancel_Timer ( poll_tid )		527341	0		=			
ANR	527358	Identifier	rval		527341	0					
ANR	527359	CallExpression	daemonCore -> Cancel_Timer ( poll_tid )		527341	1					
ANR	527360	Callee	daemonCore -> Cancel_Timer		527341	0					
ANR	527361	PtrMemberAccess	daemonCore -> Cancel_Timer		527341	0					
ANR	527362	Identifier	daemonCore		527341	0					
ANR	527363	Identifier	Cancel_Timer		527341	1					
ANR	527364	ArgumentList	poll_tid		527341	1					
ANR	527365	Argument	poll_tid		527341	0					
ANR	527366	Identifier	poll_tid		527341	0					
ANR	527367	IfStatement	if ( rval < 0 )		527341	1					
ANR	527368	Condition	rval < 0	1861:6:46163:46170	527341	0	True				
ANR	527369	RelationalExpression	rval < 0		527341	0		<			
ANR	527370	Identifier	rval		527341	0					
ANR	527371	PrimaryExpression	0		527341	1					
ANR	527372	CompoundStatement		5:17:100:100	527341	1					
ANR	527373	Statement	dprintf	1862:3:46179:46185	527341	0	True				
ANR	527374	Statement	(	1862:10:46186:46186	527341	1	True				
ANR	527375	Statement	D_ALWAYS	1862:12:46188:46195	527341	2	True				
ANR	527376	Statement	","	1862:20:46196:46196	527341	3	True				
ANR	527377	Statement	"""Failed to cancel polling timer (%d): """	1862:22:46198:46236	527341	4	True				
ANR	527378	Statement	"""daemonCore error\\n"""	1863:6:46244:46263	527341	5	True				
ANR	527379	Statement	","	1863:26:46264:46264	527341	6	True				
ANR	527380	Statement	poll_tid	1863:28:46266:46273	527341	7	True				
ANR	527381	Statement	)	1863:37:46275:46275	527341	8	True				
ANR	527382	ExpressionStatement		1863:38:46276:46276	527341	9	True				
ANR	527383	ElseStatement	else		527341	0					
ANR	527384	CompoundStatement		8:9:213:213	527341	0					
ANR	527385	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Canceled polling timer (%d)\\n"" , poll_tid )"	1865:3:46292:46363	527341	0	True				
ANR	527386	CallExpression	"dprintf ( D_FULLDEBUG , ""Canceled polling timer (%d)\\n"" , poll_tid )"		527341	0					
ANR	527387	Callee	dprintf		527341	0					
ANR	527388	Identifier	dprintf		527341	0					
ANR	527389	ArgumentList	D_FULLDEBUG		527341	1					
ANR	527390	Argument	D_FULLDEBUG		527341	0					
ANR	527391	Identifier	D_FULLDEBUG		527341	0					
ANR	527392	Argument	"""Canceled polling timer (%d)\\n"""		527341	1					
ANR	527393	PrimaryExpression	"""Canceled polling timer (%d)\\n"""		527341	0					
ANR	527394	Argument	poll_tid		527341	2					
ANR	527395	Identifier	poll_tid		527341	0					
ANR	527396	ExpressionStatement	poll_tid = - 1	1868:2:46371:46384	527341	2	True				
ANR	527397	AssignmentExpression	poll_tid = - 1		527341	0		=			
ANR	527398	Identifier	poll_tid		527341	0					
ANR	527399	UnaryOperationExpression	- 1		527341	1					
ANR	527400	UnaryOperator	-		527341	0					
ANR	527401	PrimaryExpression	1		527341	1					
ANR	527402	ReturnType	void		527341	1					
ANR	527403	Identifier	ResMgr :: cancel_poll_timer		527341	2					
ANR	527404	ParameterList			527341	3					
ANR	527405	CFGEntryNode	ENTRY		527341		True				
ANR	527406	CFGExitNode	EXIT		527341		True				
ANR	527407	Symbol	* daemonCore		527341						
ANR	527408	Symbol	daemonCore		527341						
ANR	527409	Symbol	rval		527341						
ANR	527410	Symbol	D_FULLDEBUG		527341						
ANR	527411	Symbol	daemonCore -> Cancel_Timer		527341						
ANR	527412	Symbol	poll_tid		527341						
ANR	527413	Function	ResMgr :: reset_timers	1873:0:46393:46846							
ANR	527414	FunctionDef	ResMgr :: reset_timers ()		527413	0					
ANR	527415	CompoundStatement		1875:0:46427:46846	527413	0					
ANR	527416	IfStatement	if ( update_offset )		527413	0					
ANR	527417	Condition	update_offset	1876:6:46435:46447	527413	0	True				
ANR	527418	Identifier	update_offset		527413	0					
ANR	527419	CompoundStatement		2:22:23:23	527413	1					
ANR	527420	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delaying update after reconfig by %d seconds\\n"" , update_offset )"	1877:2:46455:46552	527413	0	True				
ANR	527421	CallExpression	"dprintf ( D_FULLDEBUG , ""Delaying update after reconfig by %d seconds\\n"" , update_offset )"		527413	0					
ANR	527422	Callee	dprintf		527413	0					
ANR	527423	Identifier	dprintf		527413	0					
ANR	527424	ArgumentList	D_FULLDEBUG		527413	1					
ANR	527425	Argument	D_FULLDEBUG		527413	0					
ANR	527426	Identifier	D_FULLDEBUG		527413	0					
ANR	527427	Argument	"""Delaying update after reconfig by %d seconds\\n"""		527413	1					
ANR	527428	PrimaryExpression	"""Delaying update after reconfig by %d seconds\\n"""		527413	0					
ANR	527429	Argument	update_offset		527413	2					
ANR	527430	Identifier	update_offset		527413	0					
ANR	527431	IfStatement	if ( poll_tid != - 1 )		527413	1					
ANR	527432	Condition	poll_tid != - 1	1881:5:46562:46575	527413	0	True				
ANR	527433	EqualityExpression	poll_tid != - 1		527413	0		!=			
ANR	527434	Identifier	poll_tid		527413	0					
ANR	527435	UnaryOperationExpression	- 1		527413	1					
ANR	527436	UnaryOperator	-		527413	0					
ANR	527437	PrimaryExpression	1		527413	1					
ANR	527438	CompoundStatement		7:22:151:151	527413	1					
ANR	527439	ExpressionStatement	"daemonCore -> Reset_Timer ( poll_tid , polling_interval , polling_interval )"	1882:2:46583:46663	527413	0	True				
ANR	527440	CallExpression	"daemonCore -> Reset_Timer ( poll_tid , polling_interval , polling_interval )"		527413	0					
ANR	527441	Callee	daemonCore -> Reset_Timer		527413	0					
ANR	527442	PtrMemberAccess	daemonCore -> Reset_Timer		527413	0					
ANR	527443	Identifier	daemonCore		527413	0					
ANR	527444	Identifier	Reset_Timer		527413	1					
ANR	527445	ArgumentList	poll_tid		527413	1					
ANR	527446	Argument	poll_tid		527413	0					
ANR	527447	Identifier	poll_tid		527413	0					
ANR	527448	Argument	polling_interval		527413	1					
ANR	527449	Identifier	polling_interval		527413	0					
ANR	527450	Argument	polling_interval		527413	2					
ANR	527451	Identifier	polling_interval		527413	0					
ANR	527452	IfStatement	if ( up_tid != - 1 )		527413	2					
ANR	527453	Condition	up_tid != - 1	1885:5:46673:46684	527413	0	True				
ANR	527454	EqualityExpression	up_tid != - 1		527413	0		!=			
ANR	527455	Identifier	up_tid		527413	0					
ANR	527456	UnaryOperationExpression	- 1		527413	1					
ANR	527457	UnaryOperator	-		527413	0					
ANR	527458	PrimaryExpression	1		527413	1					
ANR	527459	CompoundStatement		11:20:260:260	527413	1					
ANR	527460	ExpressionStatement	"daemonCore -> Reset_Timer ( up_tid , update_offset , update_interval )"	1886:2:46692:46766	527413	0	True				
ANR	527461	CallExpression	"daemonCore -> Reset_Timer ( up_tid , update_offset , update_interval )"		527413	0					
ANR	527462	Callee	daemonCore -> Reset_Timer		527413	0					
ANR	527463	PtrMemberAccess	daemonCore -> Reset_Timer		527413	0					
ANR	527464	Identifier	daemonCore		527413	0					
ANR	527465	Identifier	Reset_Timer		527413	1					
ANR	527466	ArgumentList	up_tid		527413	1					
ANR	527467	Argument	up_tid		527413	0					
ANR	527468	Identifier	up_tid		527413	0					
ANR	527469	Argument	update_offset		527413	1					
ANR	527470	Identifier	update_offset		527413	0					
ANR	527471	Argument	update_interval		527413	2					
ANR	527472	Identifier	update_interval		527413	0					
ANR	527473	ExpressionStatement	resetHibernateTimer ( )	1891:1:46794:46815	527413	3	True				
ANR	527474	CallExpression	resetHibernateTimer ( )		527413	0					
ANR	527475	Callee	resetHibernateTimer		527413	0					
ANR	527476	Identifier	resetHibernateTimer		527413	0					
ANR	527477	ArgumentList			527413	1					
ANR	527478	ReturnType	void		527413	1					
ANR	527479	Identifier	ResMgr :: reset_timers		527413	2					
ANR	527480	ParameterList			527413	3					
ANR	527481	CFGEntryNode	ENTRY		527413		True				
ANR	527482	CFGExitNode	EXIT		527413		True				
ANR	527483	Symbol	up_tid		527413						
ANR	527484	Symbol	update_interval		527413						
ANR	527485	Symbol	daemonCore		527413						
ANR	527486	Symbol	D_FULLDEBUG		527413						
ANR	527487	Symbol	update_offset		527413						
ANR	527488	Symbol	poll_tid		527413						
ANR	527489	Symbol	polling_interval		527413						
ANR	527490	Function	ResMgr :: addResource	1897:0:46850:47515							
ANR	527491	FunctionDef	ResMgr :: addResource (Resource * rip)		527490	0					
ANR	527492	CompoundStatement		1899:0:46892:47515	527490	0					
ANR	527493	IdentifierDeclStatement	Resource * * new_resources = NULL ;	1900:1:46895:46926	527490	0	True				
ANR	527494	IdentifierDecl	* * new_resources = NULL		527490	0					
ANR	527495	IdentifierDeclType	Resource * *		527490	0					
ANR	527496	Identifier	new_resources		527490	1					
ANR	527497	AssignmentExpression	* * new_resources = NULL		527490	2		=			
ANR	527498	Identifier	NULL		527490	0					
ANR	527499	Identifier	NULL		527490	1					
ANR	527500	IfStatement	if ( ! rip )		527490	1					
ANR	527501	Condition	! rip	1902:5:46934:46937	527490	0	True				
ANR	527502	UnaryOperationExpression	! rip		527490	0					
ANR	527503	UnaryOperator	!		527490	0					
ANR	527504	Identifier	rip		527490	1					
ANR	527505	CompoundStatement		4:12:48:48	527490	1					
ANR	527506	ExpressionStatement	"EXCEPT ( ""Error: attempt to add a NULL resource\\n"" )"	1903:2:46945:46994	527490	0	True				
ANR	527507	CallExpression	"EXCEPT ( ""Error: attempt to add a NULL resource\\n"" )"		527490	0					
ANR	527508	Callee	EXCEPT		527490	0					
ANR	527509	Identifier	EXCEPT		527490	0					
ANR	527510	ArgumentList	"""Error: attempt to add a NULL resource\\n"""		527490	1					
ANR	527511	Argument	"""Error: attempt to add a NULL resource\\n"""		527490	0					
ANR	527512	PrimaryExpression	"""Error: attempt to add a NULL resource\\n"""		527490	0					
ANR	527513	Statement	new_resources	1906:1:47001:47013	527490	2	True				
ANR	527514	Statement	=	1906:15:47015:47015	527490	3	True				
ANR	527515	Statement	new	1906:17:47017:47019	527490	4	True				
ANR	527516	Statement	Resource	1906:21:47021:47028	527490	5	True				
ANR	527517	Statement	*	1906:29:47029:47029	527490	6	True				
ANR	527518	Statement	[	1906:30:47030:47030	527490	7	True				
ANR	527519	Statement	nresources	1906:31:47031:47040	527490	8	True				
ANR	527520	Statement	+	1906:42:47042:47042	527490	9	True				
ANR	527521	Statement	1	1906:44:47044:47044	527490	10	True				
ANR	527522	Statement	]	1906:45:47045:47045	527490	11	True				
ANR	527523	ExpressionStatement		1906:46:47046:47046	527490	12	True				
ANR	527524	IfStatement	if ( ! new_resources )		527490	13					
ANR	527525	Condition	! new_resources	1907:5:47053:47066	527490	0	True				
ANR	527526	UnaryOperationExpression	! new_resources		527490	0					
ANR	527527	UnaryOperator	!		527490	0					
ANR	527528	Identifier	new_resources		527490	1					
ANR	527529	CompoundStatement		9:22:177:177	527490	1					
ANR	527530	ExpressionStatement	"EXCEPT ( ""Failed to allocate memory for new resource\\n"" )"	1908:2:47074:47128	527490	0	True				
ANR	527531	CallExpression	"EXCEPT ( ""Failed to allocate memory for new resource\\n"" )"		527490	0					
ANR	527532	Callee	EXCEPT		527490	0					
ANR	527533	Identifier	EXCEPT		527490	0					
ANR	527534	ArgumentList	"""Failed to allocate memory for new resource\\n"""		527490	1					
ANR	527535	Argument	"""Failed to allocate memory for new resource\\n"""		527490	0					
ANR	527536	PrimaryExpression	"""Failed to allocate memory for new resource\\n"""		527490	0					
ANR	527537	ExpressionStatement	"memcpy ( ( void * ) new_resources , ( void * ) resources , ( sizeof ( Resource * ) * nresources ) )"	1914:1:47304:47387	527490	14	True				
ANR	527538	CallExpression	"memcpy ( ( void * ) new_resources , ( void * ) resources , ( sizeof ( Resource * ) * nresources ) )"		527490	0					
ANR	527539	Callee	memcpy		527490	0					
ANR	527540	Identifier	memcpy		527490	0					
ANR	527541	ArgumentList	( void * ) new_resources		527490	1					
ANR	527542	Argument	( void * ) new_resources		527490	0					
ANR	527543	CastExpression	( void * ) new_resources		527490	0					
ANR	527544	CastTarget	void *		527490	0					
ANR	527545	Identifier	new_resources		527490	1					
ANR	527546	Argument	( void * ) resources		527490	1					
ANR	527547	CastExpression	( void * ) resources		527490	0					
ANR	527548	CastTarget	void *		527490	0					
ANR	527549	Identifier	resources		527490	1					
ANR	527550	Argument	sizeof ( Resource * ) * nresources		527490	2					
ANR	527551	MultiplicativeExpression	sizeof ( Resource * ) * nresources		527490	0		*			
ANR	527552	SizeofExpression	sizeof ( Resource * )		527490	0					
ANR	527553	Sizeof	sizeof		527490	0					
ANR	527554	SizeofOperand	Resource *		527490	1					
ANR	527555	Identifier	nresources		527490	1					
ANR	527556	ExpressionStatement	new_resources [ nresources ] = rip	1917:1:47391:47422	527490	15	True				
ANR	527557	AssignmentExpression	new_resources [ nresources ] = rip		527490	0		=			
ANR	527558	ArrayIndexing	new_resources [ nresources ]		527490	0					
ANR	527559	Identifier	new_resources		527490	0					
ANR	527560	Identifier	nresources		527490	1					
ANR	527561	Identifier	rip		527490	1					
ANR	527562	IfStatement	if ( resources )		527490	16					
ANR	527563	Condition	resources	1920:5:47431:47439	527490	0	True				
ANR	527564	Identifier	resources		527490	0					
ANR	527565	CompoundStatement		22:17:550:550	527490	1					
ANR	527566	Statement	delete	1921:2:47447:47452	527490	0	True				
ANR	527567	Statement	[	1921:9:47454:47454	527490	1	True				
ANR	527568	Statement	]	1921:10:47455:47455	527490	2	True				
ANR	527569	ExpressionStatement	resources	1921:12:47457:47466	527490	3	True				
ANR	527570	Identifier	resources		527490	0					
ANR	527571	ExpressionStatement	resources = new_resources	1924:1:47473:47498	527490	17	True				
ANR	527572	AssignmentExpression	resources = new_resources		527490	0		=			
ANR	527573	Identifier	resources		527490	0					
ANR	527574	Identifier	new_resources		527490	1					
ANR	527575	ExpressionStatement	nresources ++	1925:1:47501:47513	527490	18	True				
ANR	527576	PostIncDecOperationExpression	nresources ++		527490	0					
ANR	527577	Identifier	nresources		527490	0					
ANR	527578	IncDec	++		527490	1					
ANR	527579	ReturnType	void		527490	1					
ANR	527580	Identifier	ResMgr :: addResource		527490	2					
ANR	527581	ParameterList	Resource * rip		527490	3					
ANR	527582	Parameter	Resource * rip	1898:21:46876:46888	527490	0	True				
ANR	527583	ParameterType	Resource *		527490	0					
ANR	527584	Identifier	rip		527490	1					
ANR	527585	CFGEntryNode	ENTRY		527490		True				
ANR	527586	CFGExitNode	EXIT		527490		True				
ANR	527587	Symbol	NULL		527490						
ANR	527588	Symbol	rip		527490						
ANR	527589	Symbol	* new_resources		527490						
ANR	527590	Symbol	new_resources		527490						
ANR	527591	Symbol	resources		527490						
ANR	527592	Symbol	* nresources		527490						
ANR	527593	Symbol	nresources		527490						
ANR	527594	Function	ResMgr :: removeResource	1929:0:47519:49045							
ANR	527595	FunctionDef	ResMgr :: removeResource (Resource * rip)		527594	0					
ANR	527596	CompoundStatement		1931:0:47564:49045	527594	0					
ANR	527597	IdentifierDeclStatement	"int i , j ;"	1932:1:47567:47575	527594	0	True				
ANR	527598	IdentifierDecl	i		527594	0					
ANR	527599	IdentifierDeclType	int		527594	0					
ANR	527600	Identifier	i		527594	1					
ANR	527601	IdentifierDecl	j		527594	1					
ANR	527602	IdentifierDeclType	int		527594	0					
ANR	527603	Identifier	j		527594	1					
ANR	527604	IdentifierDeclStatement	Resource * * new_resources = NULL ;	1933:1:47578:47609	527594	1	True				
ANR	527605	IdentifierDecl	* * new_resources = NULL		527594	0					
ANR	527606	IdentifierDeclType	Resource * *		527594	0					
ANR	527607	Identifier	new_resources		527594	1					
ANR	527608	AssignmentExpression	* * new_resources = NULL		527594	2		=			
ANR	527609	Identifier	NULL		527594	0					
ANR	527610	Identifier	NULL		527594	1					
ANR	527611	IdentifierDeclStatement	Resource * rip2 ;	1934:1:47612:47626	527594	2	True				
ANR	527612	IdentifierDecl	* rip2		527594	0					
ANR	527613	IdentifierDeclType	Resource *		527594	0					
ANR	527614	Identifier	rip2		527594	1					
ANR	527615	IfStatement	if ( nresources > 1 )		527594	3					
ANR	527616	Condition	nresources > 1	1936:5:47634:47647	527594	0	True				
ANR	527617	RelationalExpression	nresources > 1		527594	0		>			
ANR	527618	Identifier	nresources		527594	0					
ANR	527619	PrimaryExpression	1		527594	1					
ANR	527620	CompoundStatement		6:22:86:86	527594	1					
ANR	527621	Statement	new_resources	1940:2:47798:47810	527594	0	True				
ANR	527622	Statement	=	1940:16:47812:47812	527594	1	True				
ANR	527623	Statement	new	1940:18:47814:47816	527594	2	True				
ANR	527624	Statement	Resource	1940:22:47818:47825	527594	3	True				
ANR	527625	Statement	*	1940:30:47826:47826	527594	4	True				
ANR	527626	Statement	[	1940:32:47828:47828	527594	5	True				
ANR	527627	Statement	nresources	1940:34:47830:47839	527594	6	True				
ANR	527628	Statement	-	1940:45:47841:47841	527594	7	True				
ANR	527629	Statement	1	1940:47:47843:47843	527594	8	True				
ANR	527630	Statement	]	1940:49:47845:47845	527594	9	True				
ANR	527631	ExpressionStatement		1940:50:47846:47846	527594	10	True				
ANR	527632	ExpressionStatement	j = 0	1941:2:47850:47855	527594	11	True				
ANR	527633	AssignmentExpression	j = 0		527594	0		=			
ANR	527634	Identifier	j		527594	0					
ANR	527635	PrimaryExpression	0		527594	1					
ANR	527636	ForStatement	for ( i = 0 ; i < nresources ; i ++ )		527594	12					
ANR	527637	ForInit	i = 0 ;	1942:7:47864:47869	527594	0	True				
ANR	527638	AssignmentExpression	i = 0		527594	0		=			
ANR	527639	Identifier	i		527594	0					
ANR	527640	PrimaryExpression	0		527594	1					
ANR	527641	Condition	i < nresources	1942:14:47871:47884	527594	1	True				
ANR	527642	RelationalExpression	i < nresources		527594	0		<			
ANR	527643	Identifier	i		527594	0					
ANR	527644	Identifier	nresources		527594	1					
ANR	527645	PostIncDecOperationExpression	i ++	1942:30:47887:47889	527594	2	True				
ANR	527646	Identifier	i		527594	0					
ANR	527647	IncDec	++		527594	1					
ANR	527648	CompoundStatement		12:36:328:328	527594	3					
ANR	527649	IfStatement	if ( resources [ i ] != rip )		527594	0					
ANR	527650	Condition	resources [ i ] != rip	1943:7:47902:47920	527594	0	True				
ANR	527651	EqualityExpression	resources [ i ] != rip		527594	0		!=			
ANR	527652	ArrayIndexing	resources [ i ]		527594	0					
ANR	527653	Identifier	resources		527594	0					
ANR	527654	Identifier	i		527594	1					
ANR	527655	Identifier	rip		527594	1					
ANR	527656	CompoundStatement		13:29:359:359	527594	1					
ANR	527657	ExpressionStatement	new_resources [ j ++ ] = resources [ i ]	1944:4:47930:47963	527594	0	True				
ANR	527658	AssignmentExpression	new_resources [ j ++ ] = resources [ i ]		527594	0		=			
ANR	527659	ArrayIndexing	new_resources [ j ++ ]		527594	0					
ANR	527660	Identifier	new_resources		527594	0					
ANR	527661	PostIncDecOperationExpression	j ++		527594	1					
ANR	527662	Identifier	j		527594	0					
ANR	527663	IncDec	++		527594	1					
ANR	527664	ArrayIndexing	resources [ i ]		527594	1					
ANR	527665	Identifier	resources		527594	0					
ANR	527666	Identifier	i		527594	1					
ANR	527667	IfStatement	if ( j == nresources )		527594	13					
ANR	527668	Condition	j == nresources	1948:7:47982:47996	527594	0	True				
ANR	527669	EqualityExpression	j == nresources		527594	0		==			
ANR	527670	Identifier	j		527594	0					
ANR	527671	Identifier	nresources		527594	1					
ANR	527672	CompoundStatement		18:25:435:435	527594	1					
ANR	527673	Statement	delete	1950:3:48091:48096	527594	0	True				
ANR	527674	Statement	[	1950:10:48098:48098	527594	1	True				
ANR	527675	Statement	]	1950:11:48099:48099	527594	2	True				
ANR	527676	ExpressionStatement	new_resources	1950:13:48101:48114	527594	3	True				
ANR	527677	Identifier	new_resources		527594	0					
ANR	527678	ReturnStatement	return false ;	1951:3:48119:48131	527594	4	True				
ANR	527679	Identifier	false		527594	0					
ANR	527680	ExpressionStatement	destroy_list . Rewind ( )	1956:1:48186:48207	527594	4	True				
ANR	527681	CallExpression	destroy_list . Rewind ( )		527594	0					
ANR	527682	Callee	destroy_list . Rewind		527594	0					
ANR	527683	MemberAccess	destroy_list . Rewind		527594	0					
ANR	527684	Identifier	destroy_list		527594	0					
ANR	527685	Identifier	Rewind		527594	1					
ANR	527686	ArgumentList			527594	1					
ANR	527687	WhileStatement	while ( destroy_list . Next ( rip2 ) )		527594	5					
ANR	527688	Condition	destroy_list . Next ( rip2 )	1957:8:48217:48239	527594	0	True				
ANR	527689	CallExpression	destroy_list . Next ( rip2 )		527594	0					
ANR	527690	Callee	destroy_list . Next		527594	0					
ANR	527691	MemberAccess	destroy_list . Next		527594	0					
ANR	527692	Identifier	destroy_list		527594	0					
ANR	527693	Identifier	Next		527594	1					
ANR	527694	ArgumentList	rip2		527594	1					
ANR	527695	Argument	rip2		527594	0					
ANR	527696	Identifier	rip2		527594	0					
ANR	527697	CompoundStatement		27:34:678:678	527594	1					
ANR	527698	IfStatement	if ( rip2 == rip )		527594	0					
ANR	527699	Condition	rip2 == rip	1958:6:48251:48261	527594	0	True				
ANR	527700	EqualityExpression	rip2 == rip		527594	0		==			
ANR	527701	Identifier	rip2		527594	0					
ANR	527702	Identifier	rip		527594	1					
ANR	527703	CompoundStatement		28:20:700:700	527594	1					
ANR	527704	ExpressionStatement	destroy_list . DeleteCurrent ( )	1959:3:48270:48298	527594	0	True				
ANR	527705	CallExpression	destroy_list . DeleteCurrent ( )		527594	0					
ANR	527706	Callee	destroy_list . DeleteCurrent		527594	0					
ANR	527707	MemberAccess	destroy_list . DeleteCurrent		527594	0					
ANR	527708	Identifier	destroy_list		527594	0					
ANR	527709	Identifier	DeleteCurrent		527594	1					
ANR	527710	ArgumentList			527594	1					
ANR	527711	BreakStatement	break ;	1960:3:48303:48308	527594	1	True				
ANR	527712	Statement	delete	1967:1:48475:48480	527594	6	True				
ANR	527713	Statement	[	1967:8:48482:48482	527594	7	True				
ANR	527714	Statement	]	1967:9:48483:48483	527594	8	True				
ANR	527715	ExpressionStatement	resources	1967:11:48485:48494	527594	9	True				
ANR	527716	Identifier	resources		527594	0					
ANR	527717	ExpressionStatement	resources = new_resources	1968:1:48497:48522	527594	10	True				
ANR	527718	AssignmentExpression	resources = new_resources		527594	0		=			
ANR	527719	Identifier	resources		527594	0					
ANR	527720	Identifier	new_resources		527594	1					
ANR	527721	ExpressionStatement	nresources --	1969:1:48525:48537	527594	11	True				
ANR	527722	PostIncDecOperationExpression	nresources --		527594	0					
ANR	527723	Identifier	nresources		527594	0					
ANR	527724	IncDec	--		527594	1					
ANR	527725	IfStatement	if ( Resource :: DYNAMIC_SLOT != rip -> get_feature ( ) )		527594	12					
ANR	527726	Condition	Resource :: DYNAMIC_SLOT != rip -> get_feature ( )	1974:5:48705:48748	527594	0	True				
ANR	527727	EqualityExpression	Resource :: DYNAMIC_SLOT != rip -> get_feature ( )		527594	0		!=			
ANR	527728	Identifier	Resource :: DYNAMIC_SLOT		527594	0					
ANR	527729	CallExpression	rip -> get_feature ( )		527594	1					
ANR	527730	Callee	rip -> get_feature		527594	0					
ANR	527731	PtrMemberAccess	rip -> get_feature		527594	0					
ANR	527732	Identifier	rip		527594	0					
ANR	527733	Identifier	get_feature		527594	1					
ANR	527734	ArgumentList			527594	1					
ANR	527735	CompoundStatement		44:52:1187:1187	527594	1					
ANR	527736	ExpressionStatement	id_disp -> insert ( rip -> r_id )	1975:2:48756:48784	527594	0	True				
ANR	527737	CallExpression	id_disp -> insert ( rip -> r_id )		527594	0					
ANR	527738	Callee	id_disp -> insert		527594	0					
ANR	527739	PtrMemberAccess	id_disp -> insert		527594	0					
ANR	527740	Identifier	id_disp		527594	0					
ANR	527741	Identifier	insert		527594	1					
ANR	527742	ArgumentList	rip -> r_id		527594	1					
ANR	527743	Argument	rip -> r_id		527594	0					
ANR	527744	PtrMemberAccess	rip -> r_id		527594	0					
ANR	527745	Identifier	rip		527594	0					
ANR	527746	Identifier	r_id		527594	1					
ANR	527747	ExpressionStatement	rip -> final_update ( )	1979:1:48838:48857	527594	13	True				
ANR	527748	CallExpression	rip -> final_update ( )		527594	0					
ANR	527749	Callee	rip -> final_update		527594	0					
ANR	527750	PtrMemberAccess	rip -> final_update		527594	0					
ANR	527751	Identifier	rip		527594	0					
ANR	527752	Identifier	final_update		527594	1					
ANR	527753	ArgumentList			527594	1					
ANR	527754	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Resource no longer needed, deleting\\n"" )"	1982:1:48902:48967	527594	14	True				
ANR	527755	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Resource no longer needed, deleting\\n"" )"		527594	0					
ANR	527756	Callee	rip -> dprintf		527594	0					
ANR	527757	PtrMemberAccess	rip -> dprintf		527594	0					
ANR	527758	Identifier	rip		527594	0					
ANR	527759	Identifier	dprintf		527594	1					
ANR	527760	ArgumentList	D_ALWAYS		527594	1					
ANR	527761	Argument	D_ALWAYS		527594	0					
ANR	527762	Identifier	D_ALWAYS		527594	0					
ANR	527763	Argument	"""Resource no longer needed, deleting\\n"""		527594	1					
ANR	527764	PrimaryExpression	"""Resource no longer needed, deleting\\n"""		527594	0					
ANR	527765	Statement	delete	1985:1:49018:49023	527594	15	True				
ANR	527766	ExpressionStatement	rip	1985:8:49025:49028	527594	16	True				
ANR	527767	Identifier	rip		527594	0					
ANR	527768	ReturnStatement	return true ;	1987:1:49032:49043	527594	17	True				
ANR	527769	Identifier	true		527594	0					
ANR	527770	ReturnType	bool		527594	1					
ANR	527771	Identifier	ResMgr :: removeResource		527594	2					
ANR	527772	ParameterList	Resource * rip		527594	3					
ANR	527773	Parameter	Resource * rip	1930:24:47548:47560	527594	0	True				
ANR	527774	ParameterType	Resource *		527594	0					
ANR	527775	Identifier	rip		527594	1					
ANR	527776	CFGEntryNode	ENTRY		527594		True				
ANR	527777	CFGExitNode	EXIT		527594		True				
ANR	527778	Symbol	NULL		527594						
ANR	527779	Symbol	destroy_list		527594						
ANR	527780	Symbol	* rip		527594						
ANR	527781	Symbol	* new_resources		527594						
ANR	527782	Symbol	false		527594						
ANR	527783	Symbol	D_ALWAYS		527594						
ANR	527784	Symbol	i		527594						
ANR	527785	Symbol	resources		527594						
ANR	527786	Symbol	j		527594						
ANR	527787	Symbol	rip2		527594						
ANR	527788	Symbol	nresources		527594						
ANR	527789	Symbol	* resources		527594						
ANR	527790	Symbol	destroy_list . Next		527594						
ANR	527791	Symbol	* i		527594						
ANR	527792	Symbol	Resource :: DYNAMIC_SLOT		527594						
ANR	527793	Symbol	rip		527594						
ANR	527794	Symbol	true		527594						
ANR	527795	Symbol	new_resources		527594						
ANR	527796	Symbol	rip -> get_feature		527594						
ANR	527797	Symbol	rip -> r_id		527594						
ANR	527798	Symbol	id_disp		527594						
ANR	527799	Function	ResMgr :: deleteResource	1991:0:49049:49612							
ANR	527800	FunctionDef	ResMgr :: deleteResource (Resource * rip)		527799	0					
ANR	527801	CompoundStatement		1993:0:49094:49612	527799	0					
ANR	527802	IfStatement	if ( ! removeResource ( rip ) )		527799	0					
ANR	527803	Condition	! removeResource ( rip )	1994:5:49101:49123	527799	0	True				
ANR	527804	UnaryOperationExpression	! removeResource ( rip )		527799	0					
ANR	527805	UnaryOperator	!		527799	0					
ANR	527806	CallExpression	removeResource ( rip )		527799	1					
ANR	527807	Callee	removeResource		527799	0					
ANR	527808	Identifier	removeResource		527799	0					
ANR	527809	ArgumentList	rip		527799	1					
ANR	527810	Argument	rip		527799	0					
ANR	527811	Identifier	rip		527799	0					
ANR	527812	CompoundStatement		2:31:32:32	527799	1					
ANR	527813	ExpressionStatement	"EXCEPT ( ""ResMgr::deleteResource() failed: couldn't find resource"" )"	1998:2:49313:49380	527799	0	True				
ANR	527814	CallExpression	"EXCEPT ( ""ResMgr::deleteResource() failed: couldn't find resource"" )"		527799	0					
ANR	527815	Callee	EXCEPT		527799	0					
ANR	527816	Identifier	EXCEPT		527799	0					
ANR	527817	ArgumentList	"""ResMgr::deleteResource() failed: couldn't find resource"""		527799	1					
ANR	527818	Argument	"""ResMgr::deleteResource() failed: couldn't find resource"""		527799	0					
ANR	527819	PrimaryExpression	"""ResMgr::deleteResource() failed: couldn't find resource"""		527799	0					
ANR	527820	IfStatement	if ( processAllocList ( ) )		527799	1					
ANR	527821	Condition	processAllocList ( )	2003:5:49502:49519	527799	0	True				
ANR	527822	CallExpression	processAllocList ( )		527799	0					
ANR	527823	Callee	processAllocList		527799	0					
ANR	527824	Identifier	processAllocList		527799	0					
ANR	527825	ArgumentList			527799	1					
ANR	527826	CompoundStatement		11:26:428:428	527799	1					
ANR	527827	ExpressionStatement	finish_main_config ( )	2005:2:49587:49607	527799	0	True				
ANR	527828	CallExpression	finish_main_config ( )		527799	0					
ANR	527829	Callee	finish_main_config		527799	0					
ANR	527830	Identifier	finish_main_config		527799	0					
ANR	527831	ArgumentList			527799	1					
ANR	527832	ReturnType	void		527799	1					
ANR	527833	Identifier	ResMgr :: deleteResource		527799	2					
ANR	527834	ParameterList	Resource * rip		527799	3					
ANR	527835	Parameter	Resource * rip	1992:24:49078:49090	527799	0	True				
ANR	527836	ParameterType	Resource *		527799	0					
ANR	527837	Identifier	rip		527799	1					
ANR	527838	CFGEntryNode	ENTRY		527799		True				
ANR	527839	CFGExitNode	EXIT		527799		True				
ANR	527840	Symbol	removeResource		527799						
ANR	527841	Symbol	rip		527799						
ANR	527842	Symbol	processAllocList		527799						
ANR	527843	DeclStmt									
ANR	527844	Decl							ClassAd	ClassAd *	ad
ANR	527845	DeclStmt									
ANR	527846	Decl							int	int	i
ANR	527847	Function	ResMgr :: processAllocList	2032:0:50187:50903							
ANR	527848	FunctionDef	ResMgr :: processAllocList ()		527847	0					
ANR	527849	CompoundStatement		2034:0:50225:50903	527847	0					
ANR	527850	IfStatement	if ( ! destroy_list . IsEmpty ( ) )		527847	0					
ANR	527851	Condition	! destroy_list . IsEmpty ( )	2035:5:50232:50255	527847	0	True				
ANR	527852	UnaryOperationExpression	! destroy_list . IsEmpty ( )		527847	0					
ANR	527853	UnaryOperator	!		527847	0					
ANR	527854	CallExpression	destroy_list . IsEmpty ( )		527847	1					
ANR	527855	Callee	destroy_list . IsEmpty		527847	0					
ANR	527856	MemberAccess	destroy_list . IsEmpty		527847	0					
ANR	527857	Identifier	destroy_list		527847	0					
ANR	527858	Identifier	IsEmpty		527847	1					
ANR	527859	ArgumentList			527847	1					
ANR	527860	CompoundStatement		2:32:33:33	527847	1					
ANR	527861	ReturnStatement	return false ;	2038:2:50335:50347	527847	0	True				
ANR	527862	Identifier	false		527847	0					
ANR	527863	IfStatement	if ( alloc_list . IsEmpty ( ) )		527847	1					
ANR	527864	Condition	alloc_list . IsEmpty ( )	2040:5:50357:50376	527847	0	True				
ANR	527865	CallExpression	alloc_list . IsEmpty ( )		527847	0					
ANR	527866	Callee	alloc_list . IsEmpty		527847	0					
ANR	527867	MemberAccess	alloc_list . IsEmpty		527847	0					
ANR	527868	Identifier	alloc_list		527847	0					
ANR	527869	Identifier	IsEmpty		527847	1					
ANR	527870	ArgumentList			527847	1					
ANR	527871	CompoundStatement		7:28:154:154	527847	1					
ANR	527872	ReturnStatement	return true ;	2041:2:50384:50395	527847	0	True				
ANR	527873	Identifier	true		527847	0					
ANR	527874	IdentifierDeclStatement	bool multiple_slots = ( alloc_list . Number ( ) + numSlots ( ) ) > 1 ;	2046:1:50507:50567	527847	2	True				
ANR	527875	IdentifierDecl	multiple_slots = ( alloc_list . Number ( ) + numSlots ( ) ) > 1		527847	0					
ANR	527876	IdentifierDeclType	bool		527847	0					
ANR	527877	Identifier	multiple_slots		527847	1					
ANR	527878	AssignmentExpression	multiple_slots = ( alloc_list . Number ( ) + numSlots ( ) ) > 1		527847	2		=			
ANR	527879	Identifier	multiple_slots		527847	0					
ANR	527880	RelationalExpression	( alloc_list . Number ( ) + numSlots ( ) ) > 1		527847	1		>			
ANR	527881	AdditiveExpression	alloc_list . Number ( ) + numSlots ( )		527847	0		+			
ANR	527882	CallExpression	alloc_list . Number ( )		527847	0					
ANR	527883	Callee	alloc_list . Number		527847	0					
ANR	527884	MemberAccess	alloc_list . Number		527847	0					
ANR	527885	Identifier	alloc_list		527847	0					
ANR	527886	Identifier	Number		527847	1					
ANR	527887	ArgumentList			527847	1					
ANR	527888	CallExpression	numSlots ( )		527847	1					
ANR	527889	Callee	numSlots		527847	0					
ANR	527890	Identifier	numSlots		527847	0					
ANR	527891	ArgumentList			527847	1					
ANR	527892	PrimaryExpression	1		527847	1					
ANR	527893	IdentifierDeclStatement	CpuAttributes * cap ;	2049:1:50609:50627	527847	3	True				
ANR	527894	IdentifierDecl	* cap		527847	0					
ANR	527895	IdentifierDeclType	CpuAttributes *		527847	0					
ANR	527896	Identifier	cap		527847	1					
ANR	527897	ExpressionStatement	alloc_list . Rewind ( )	2050:1:50630:50649	527847	4	True				
ANR	527898	CallExpression	alloc_list . Rewind ( )		527847	0					
ANR	527899	Callee	alloc_list . Rewind		527847	0					
ANR	527900	MemberAccess	alloc_list . Rewind		527847	0					
ANR	527901	Identifier	alloc_list		527847	0					
ANR	527902	Identifier	Rewind		527847	1					
ANR	527903	ArgumentList			527847	1					
ANR	527904	WhileStatement	while ( alloc_list . Next ( cap ) )		527847	5					
ANR	527905	Condition	alloc_list . Next ( cap )	2051:8:50659:50678	527847	0	True				
ANR	527906	CallExpression	alloc_list . Next ( cap )		527847	0					
ANR	527907	Callee	alloc_list . Next		527847	0					
ANR	527908	MemberAccess	alloc_list . Next		527847	0					
ANR	527909	Identifier	alloc_list		527847	0					
ANR	527910	Identifier	Next		527847	1					
ANR	527911	ArgumentList	cap		527847	1					
ANR	527912	Argument	cap		527847	0					
ANR	527913	Identifier	cap		527847	0					
ANR	527914	CompoundStatement		18:31:456:456	527847	1					
ANR	527915	ExpressionStatement	"addResource ( new Resource ( cap , nextId ( ) , multiple_slots ) )"	2052:2:50686:50746	527847	0	True				
ANR	527916	CallExpression	"addResource ( new Resource ( cap , nextId ( ) , multiple_slots ) )"		527847	0					
ANR	527917	Callee	addResource		527847	0					
ANR	527918	Identifier	addResource		527847	0					
ANR	527919	ArgumentList	"cap , nextId ( ) , multiple_slots"		527847	1					
ANR	527920	Argument	"cap , nextId ( ) , multiple_slots"		527847	0					
ANR	527921	Expression	"cap , nextId ( ) , multiple_slots"		527847	0					
ANR	527922	Identifier	cap		527847	0					
ANR	527923	Expression	"nextId ( ) , multiple_slots"		527847	1					
ANR	527924	CallExpression	nextId ( )		527847	0					
ANR	527925	Callee	nextId		527847	0					
ANR	527926	Identifier	nextId		527847	0					
ANR	527927	ArgumentList			527847	1					
ANR	527928	Identifier	multiple_slots		527847	1					
ANR	527929	ExpressionStatement	alloc_list . DeleteCurrent ( )	2053:2:50750:50776	527847	1	True				
ANR	527930	CallExpression	alloc_list . DeleteCurrent ( )		527847	0					
ANR	527931	Callee	alloc_list . DeleteCurrent		527847	0					
ANR	527932	MemberAccess	alloc_list . DeleteCurrent		527847	0					
ANR	527933	Identifier	alloc_list		527847	0					
ANR	527934	Identifier	DeleteCurrent		527847	1					
ANR	527935	ArgumentList			527847	1					
ANR	527936	Statement	delete	2056:1:50783:50788	527847	6	True				
ANR	527937	Statement	[	2056:8:50790:50790	527847	7	True				
ANR	527938	Statement	]	2056:9:50791:50791	527847	8	True				
ANR	527939	ExpressionStatement	type_nums	2056:11:50793:50802	527847	9	True				
ANR	527940	Identifier	type_nums		527847	0					
ANR	527941	ExpressionStatement	type_nums = new_type_nums	2057:1:50805:50830	527847	10	True				
ANR	527942	AssignmentExpression	type_nums = new_type_nums		527847	0		=			
ANR	527943	Identifier	type_nums		527847	0					
ANR	527944	Identifier	new_type_nums		527847	1					
ANR	527945	ExpressionStatement	new_type_nums = NULL	2058:1:50833:50853	527847	11	True				
ANR	527946	AssignmentExpression	new_type_nums = NULL		527847	0		=			
ANR	527947	Identifier	new_type_nums		527847	0					
ANR	527948	Identifier	NULL		527847	1					
ANR	527949	ReturnStatement	return true ;	2060:1:50857:50868	527847	12	True				
ANR	527950	Identifier	true		527847	0					
ANR	527951	ReturnType	bool		527847	1					
ANR	527952	Identifier	ResMgr :: processAllocList		527847	2					
ANR	527953	ParameterList			527847	3					
ANR	527954	CFGEntryNode	ENTRY		527847		True				
ANR	527955	CFGExitNode	EXIT		527847		True				
ANR	527956	Symbol	type_nums		527847						
ANR	527957	Symbol	alloc_list . IsEmpty		527847						
ANR	527958	Symbol	destroy_list		527847						
ANR	527959	Symbol	NULL		527847						
ANR	527960	Symbol	false		527847						
ANR	527961	Symbol	alloc_list . Number		527847						
ANR	527962	Symbol	alloc_list		527847						
ANR	527963	Symbol	multiple_slots		527847						
ANR	527964	Symbol	destroy_list . IsEmpty		527847						
ANR	527965	Symbol	numSlots		527847						
ANR	527966	Symbol	nextId		527847						
ANR	527967	Symbol	cap		527847						
ANR	527968	Symbol	alloc_list . Next		527847						
ANR	527969	Symbol	new_type_nums		527847						
ANR	527970	Symbol	true		527847						
ANR	527971	Function	ResMgr :: getHibernationManager	2066:0:50929:51031							
ANR	527972	FunctionDef	ResMgr :: getHibernationManager ()		527971	0					
ANR	527973	CompoundStatement		2067:0:50997:51031	527971	0					
ANR	527974	ReturnStatement	return * m_hibernation_manager ;	2068:1:51000:51029	527971	0	True				
ANR	527975	UnaryOperationExpression	* m_hibernation_manager		527971	0					
ANR	527976	UnaryOperator	*		527971	0					
ANR	527977	Identifier	m_hibernation_manager		527971	1					
ANR	527978	ReturnType	HibernationManager const &		527971	1					
ANR	527979	Identifier	ResMgr :: getHibernationManager		527971	2					
ANR	527980	ParameterList			527971	3					
ANR	527981	CFGEntryNode	ENTRY		527971		True				
ANR	527982	CFGExitNode	EXIT		527971		True				
ANR	527983	Symbol	m_hibernation_manager		527971						
ANR	527984	Symbol	* m_hibernation_manager		527971						
ANR	527985	Function	ResMgr :: updateHibernateConfiguration	2072:0:51035:51305							
ANR	527986	FunctionDef	ResMgr :: updateHibernateConfiguration ()		527985	0					
ANR	527987	CompoundStatement		2072:44:51079:51305	527985	0					
ANR	527988	ExpressionStatement	m_hibernation_manager -> update ( )	2073:1:51082:51113	527985	0	True				
ANR	527989	CallExpression	m_hibernation_manager -> update ( )		527985	0					
ANR	527990	Callee	m_hibernation_manager -> update		527985	0					
ANR	527991	PtrMemberAccess	m_hibernation_manager -> update		527985	0					
ANR	527992	Identifier	m_hibernation_manager		527985	0					
ANR	527993	Identifier	update		527985	1					
ANR	527994	ArgumentList			527985	1					
ANR	527995	IfStatement	if ( m_hibernation_manager -> wantsHibernate ( ) )		527985	1					
ANR	527996	Condition	m_hibernation_manager -> wantsHibernate ( )	2074:6:51121:51159	527985	0	True				
ANR	527997	CallExpression	m_hibernation_manager -> wantsHibernate ( )		527985	0					
ANR	527998	Callee	m_hibernation_manager -> wantsHibernate		527985	0					
ANR	527999	PtrMemberAccess	m_hibernation_manager -> wantsHibernate		527985	0					
ANR	528000	Identifier	m_hibernation_manager		527985	0					
ANR	528001	Identifier	wantsHibernate		527985	1					
ANR	528002	ArgumentList			527985	1					
ANR	528003	CompoundStatement		3:48:83:83	527985	1					
ANR	528004	IfStatement	if ( - 1 == m_hibernate_tid )		527985	0					
ANR	528005	Condition	- 1 == m_hibernate_tid	2075:7:51172:51192	527985	0	True				
ANR	528006	EqualityExpression	- 1 == m_hibernate_tid		527985	0		==			
ANR	528007	UnaryOperationExpression	- 1		527985	0					
ANR	528008	UnaryOperator	-		527985	0					
ANR	528009	PrimaryExpression	1		527985	1					
ANR	528010	Identifier	m_hibernate_tid		527985	1					
ANR	528011	CompoundStatement		4:31:116:116	527985	1					
ANR	528012	ExpressionStatement	startHibernateTimer ( )	2076:3:51201:51222	527985	0	True				
ANR	528013	CallExpression	startHibernateTimer ( )		527985	0					
ANR	528014	Callee	startHibernateTimer		527985	0					
ANR	528015	Identifier	startHibernateTimer		527985	0					
ANR	528016	ArgumentList			527985	1					
ANR	528017	ElseStatement	else		527985	0					
ANR	528018	CompoundStatement		7:8:156:156	527985	0					
ANR	528019	IfStatement	if ( - 1 != m_hibernate_tid )		527985	0					
ANR	528020	Condition	- 1 != m_hibernate_tid	2079:7:51245:51265	527985	0	True				
ANR	528021	EqualityExpression	- 1 != m_hibernate_tid		527985	0		!=			
ANR	528022	UnaryOperationExpression	- 1		527985	0					
ANR	528023	UnaryOperator	-		527985	0					
ANR	528024	PrimaryExpression	1		527985	1					
ANR	528025	Identifier	m_hibernate_tid		527985	1					
ANR	528026	CompoundStatement		8:31:189:189	527985	1					
ANR	528027	ExpressionStatement	cancelHibernateTimer ( )	2080:3:51274:51296	527985	0	True				
ANR	528028	CallExpression	cancelHibernateTimer ( )		527985	0					
ANR	528029	Callee	cancelHibernateTimer		527985	0					
ANR	528030	Identifier	cancelHibernateTimer		527985	0					
ANR	528031	ArgumentList			527985	1					
ANR	528032	ReturnType	void		527985	1					
ANR	528033	Identifier	ResMgr :: updateHibernateConfiguration		527985	2					
ANR	528034	ParameterList			527985	3					
ANR	528035	CFGEntryNode	ENTRY		527985		True				
ANR	528036	CFGExitNode	EXIT		527985		True				
ANR	528037	Symbol	m_hibernation_manager -> wantsHibernate		527985						
ANR	528038	Symbol	m_hibernation_manager		527985						
ANR	528039	Symbol	* m_hibernation_manager		527985						
ANR	528040	Symbol	m_hibernate_tid		527985						
ANR	528041	Function	ResMgr :: allHibernating	2086:0:51309:52364							
ANR	528042	FunctionDef	ResMgr :: allHibernating (MyString & target)		528041	0					
ANR	528043	CompoundStatement		2088:0:51362:52364	528041	0					
ANR	528044	IfStatement	if ( ! resources || ! m_hibernation_manager -> wantsHibernate ( ) )		528041	0					
ANR	528045	Condition	! resources || ! m_hibernation_manager -> wantsHibernate ( )	2091:8:51455:51510	528041	0	True				
ANR	528046	OrExpression	! resources || ! m_hibernation_manager -> wantsHibernate ( )		528041	0		||			
ANR	528047	UnaryOperationExpression	! resources		528041	0					
ANR	528048	UnaryOperator	!		528041	0					
ANR	528049	Identifier	resources		528041	1					
ANR	528050	UnaryOperationExpression	! m_hibernation_manager -> wantsHibernate ( )		528041	1					
ANR	528051	UnaryOperator	!		528041	0					
ANR	528052	CallExpression	m_hibernation_manager -> wantsHibernate ( )		528041	1					
ANR	528053	Callee	m_hibernation_manager -> wantsHibernate		528041	0					
ANR	528054	PtrMemberAccess	m_hibernation_manager -> wantsHibernate		528041	0					
ANR	528055	Identifier	m_hibernation_manager		528041	0					
ANR	528056	Identifier	wantsHibernate		528041	1					
ANR	528057	ArgumentList			528041	1					
ANR	528058	CompoundStatement		4:68:152:152	528041	1					
ANR	528059	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""allHibernating: doesn't want hibernate\\n"" )"	2092:2:51519:51585	528041	0	True				
ANR	528060	CallExpression	"dprintf ( D_FULLDEBUG , ""allHibernating: doesn't want hibernate\\n"" )"		528041	0					
ANR	528061	Callee	dprintf		528041	0					
ANR	528062	Identifier	dprintf		528041	0					
ANR	528063	ArgumentList	D_FULLDEBUG		528041	1					
ANR	528064	Argument	D_FULLDEBUG		528041	0					
ANR	528065	Identifier	D_FULLDEBUG		528041	0					
ANR	528066	Argument	"""allHibernating: doesn't want hibernate\\n"""		528041	1					
ANR	528067	PrimaryExpression	"""allHibernating: doesn't want hibernate\\n"""		528041	0					
ANR	528068	ReturnStatement	return 0 ;	2093:2:51589:51597	528041	1	True				
ANR	528069	PrimaryExpression	0		528041	0					
ANR	528070	ExpressionStatement	"target = """""	2101:1:51851:51862	528041	1	True				
ANR	528071	AssignmentExpression	"target = """""		528041	0		=			
ANR	528072	Identifier	target		528041	0					
ANR	528073	PrimaryExpression	""""""		528041	1					
ANR	528074	IdentifierDeclStatement	MyString str ;	2102:1:51865:51877	528041	2	True				
ANR	528075	IdentifierDecl	str		528041	0					
ANR	528076	IdentifierDeclType	MyString		528041	0					
ANR	528077	Identifier	str		528041	1					
ANR	528078	IdentifierDeclStatement	int level = 0 ;	2103:1:51880:51893	528041	3	True				
ANR	528079	IdentifierDecl	level = 0		528041	0					
ANR	528080	IdentifierDeclType	int		528041	0					
ANR	528081	Identifier	level		528041	1					
ANR	528082	AssignmentExpression	level = 0		528041	2		=			
ANR	528083	Identifier	level		528041	0					
ANR	528084	PrimaryExpression	0		528041	1					
ANR	528085	IdentifierDeclStatement	bool activity = false ;	2104:1:51896:51917	528041	4	True				
ANR	528086	IdentifierDecl	activity = false		528041	0					
ANR	528087	IdentifierDeclType	bool		528041	0					
ANR	528088	Identifier	activity		528041	1					
ANR	528089	AssignmentExpression	activity = false		528041	2		=			
ANR	528090	Identifier	false		528041	0					
ANR	528091	Identifier	false		528041	1					
ANR	528092	ForStatement	for ( int i = 0 ; i < nresources ; i ++ )		528041	5					
ANR	528093	ForInit	int i = 0 ;	2105:6:51925:51934	528041	0	True				
ANR	528094	IdentifierDeclStatement	int i = 0 ;		528041	0					
ANR	528095	IdentifierDecl	i = 0		528041	0					
ANR	528096	IdentifierDeclType	int		528041	0					
ANR	528097	Identifier	i		528041	1					
ANR	528098	AssignmentExpression	i = 0		528041	2		=			
ANR	528099	Identifier	i		528041	0					
ANR	528100	PrimaryExpression	0		528041	1					
ANR	528101	Condition	i < nresources	2105:17:51936:51949	528041	1	True				
ANR	528102	RelationalExpression	i < nresources		528041	0		<			
ANR	528103	Identifier	i		528041	0					
ANR	528104	Identifier	nresources		528041	1					
ANR	528105	PostIncDecOperationExpression	i ++	2105:33:51952:51954	528041	2	True				
ANR	528106	Identifier	i		528041	0					
ANR	528107	IncDec	++		528041	1					
ANR	528108	CompoundStatement		25:2:682:753	528041	3					
ANR	528109	ExpressionStatement	"str = """""	2107:2:51963:51971	528041	0	True				
ANR	528110	AssignmentExpression	"str = """""		528041	0		=			
ANR	528111	Identifier	str		528041	0					
ANR	528112	PrimaryExpression	""""""		528041	1					
ANR	528113	IfStatement	if ( ! resources [ i ] -> evaluateHibernate ( str ) )		528041	1					
ANR	528114	Condition	! resources [ i ] -> evaluateHibernate ( str )	2108:7:51980:52019	528041	0	True				
ANR	528115	UnaryOperationExpression	! resources [ i ] -> evaluateHibernate ( str )		528041	0					
ANR	528116	UnaryOperator	!		528041	0					
ANR	528117	CallExpression	resources [ i ] -> evaluateHibernate ( str )		528041	1					
ANR	528118	Callee	resources [ i ] -> evaluateHibernate		528041	0					
ANR	528119	PtrMemberAccess	resources [ i ] -> evaluateHibernate		528041	0					
ANR	528120	ArrayIndexing	resources [ i ]		528041	0					
ANR	528121	Identifier	resources		528041	0					
ANR	528122	Identifier	i		528041	1					
ANR	528123	Identifier	evaluateHibernate		528041	1					
ANR	528124	ArgumentList	str		528041	1					
ANR	528125	Argument	str		528041	0					
ANR	528126	Identifier	str		528041	0					
ANR	528127	CompoundStatement		21:50:660:660	528041	1					
ANR	528128	ReturnStatement	return 0 ;	2109:3:52028:52036	528041	0	True				
ANR	528129	PrimaryExpression	0		528041	0					
ANR	528130	IdentifierDeclStatement	int tmp = m_hibernation_manager -> stringToSleepState ( str . Value ( ) ) ;	2112:2:52045:52116	528041	2	True				
ANR	528131	IdentifierDecl	tmp = m_hibernation_manager -> stringToSleepState ( str . Value ( ) )		528041	0					
ANR	528132	IdentifierDeclType	int		528041	0					
ANR	528133	Identifier	tmp		528041	1					
ANR	528134	AssignmentExpression	tmp = m_hibernation_manager -> stringToSleepState ( str . Value ( ) )		528041	2		=			
ANR	528135	Identifier	tmp		528041	0					
ANR	528136	CallExpression	m_hibernation_manager -> stringToSleepState ( str . Value ( ) )		528041	1					
ANR	528137	Callee	m_hibernation_manager -> stringToSleepState		528041	0					
ANR	528138	PtrMemberAccess	m_hibernation_manager -> stringToSleepState		528041	0					
ANR	528139	Identifier	m_hibernation_manager		528041	0					
ANR	528140	Identifier	stringToSleepState		528041	1					
ANR	528141	ArgumentList	str . Value ( )		528041	1					
ANR	528142	Argument	str . Value ( )		528041	0					
ANR	528143	CallExpression	str . Value ( )		528041	0					
ANR	528144	Callee	str . Value		528041	0					
ANR	528145	MemberAccess	str . Value		528041	0					
ANR	528146	Identifier	str		528041	0					
ANR	528147	Identifier	Value		528041	1					
ANR	528148	ArgumentList			528041	1					
ANR	528149	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""allHibernating: resource #%d: '%s' (0x%x)\\n"" , i + 1 , str . Value ( ) , tmp )"	2115:2:52121:52223	528041	3	True				
ANR	528150	CallExpression	"dprintf ( D_FULLDEBUG , ""allHibernating: resource #%d: '%s' (0x%x)\\n"" , i + 1 , str . Value ( ) , tmp )"		528041	0					
ANR	528151	Callee	dprintf		528041	0					
ANR	528152	Identifier	dprintf		528041	0					
ANR	528153	ArgumentList	D_FULLDEBUG		528041	1					
ANR	528154	Argument	D_FULLDEBUG		528041	0					
ANR	528155	Identifier	D_FULLDEBUG		528041	0					
ANR	528156	Argument	"""allHibernating: resource #%d: '%s' (0x%x)\\n"""		528041	1					
ANR	528157	PrimaryExpression	"""allHibernating: resource #%d: '%s' (0x%x)\\n"""		528041	0					
ANR	528158	Argument	i + 1		528041	2					
ANR	528159	AdditiveExpression	i + 1		528041	0		+			
ANR	528160	Identifier	i		528041	0					
ANR	528161	PrimaryExpression	1		528041	1					
ANR	528162	Argument	str . Value ( )		528041	3					
ANR	528163	CallExpression	str . Value ( )		528041	0					
ANR	528164	Callee	str . Value		528041	0					
ANR	528165	MemberAccess	str . Value		528041	0					
ANR	528166	Identifier	str		528041	0					
ANR	528167	Identifier	Value		528041	1					
ANR	528168	ArgumentList			528041	1					
ANR	528169	Argument	tmp		528041	4					
ANR	528170	Identifier	tmp		528041	0					
ANR	528171	IfStatement	if ( 0 == tmp )		528041	4					
ANR	528172	Condition	0 == tmp	2119:7:52233:52240	528041	0	True				
ANR	528173	EqualityExpression	0 == tmp		528041	0		==			
ANR	528174	PrimaryExpression	0		528041	0					
ANR	528175	Identifier	tmp		528041	1					
ANR	528176	CompoundStatement		32:18:881:881	528041	1					
ANR	528177	ExpressionStatement	activity = true	2120:3:52249:52264	528041	0	True				
ANR	528178	AssignmentExpression	activity = true		528041	0		=			
ANR	528179	Identifier	activity		528041	0					
ANR	528180	Identifier	true		528041	1					
ANR	528181	IfStatement	if ( tmp > level )		528041	5					
ANR	528182	Condition	tmp > level	2123:7:52278:52288	528041	0	True				
ANR	528183	RelationalExpression	tmp > level		528041	0		>			
ANR	528184	Identifier	tmp		528041	0					
ANR	528185	Identifier	level		528041	1					
ANR	528186	CompoundStatement		36:21:929:929	528041	1					
ANR	528187	ExpressionStatement	target = str	2124:3:52297:52309	528041	0	True				
ANR	528188	AssignmentExpression	target = str		528041	0		=			
ANR	528189	Identifier	target		528041	0					
ANR	528190	Identifier	str		528041	1					
ANR	528191	ExpressionStatement	level = tmp	2125:3:52314:52325	528041	1	True				
ANR	528192	AssignmentExpression	level = tmp		528041	0		=			
ANR	528193	Identifier	level		528041	0					
ANR	528194	Identifier	tmp		528041	1					
ANR	528195	ReturnStatement	return activity ? 0 : level ;	2128:1:52335:52362	528041	6	True				
ANR	528196	ConditionalExpression	activity ? 0 : level		528041	0					
ANR	528197	Condition	activity		528041	0					
ANR	528198	Identifier	activity		528041	0					
ANR	528199	PrimaryExpression	0		528041	1					
ANR	528200	Identifier	level		528041	2					
ANR	528201	ReturnType	int		528041	1					
ANR	528202	Identifier	ResMgr :: allHibernating		528041	2					
ANR	528203	ParameterList	MyString & target		528041	3					
ANR	528204	Parameter	MyString & target	2087:24:51337:51352	528041	0	True				
ANR	528205	ParameterType	MyString &		528041	0					
ANR	528206	Identifier	target		528041	1					
ANR	528207	CFGEntryNode	ENTRY		528041		True				
ANR	528208	CFGExitNode	EXIT		528041		True				
ANR	528209	Symbol	* * i		528041						
ANR	528210	Symbol	activity		528041						
ANR	528211	Symbol	level		528041						
ANR	528212	Symbol	false		528041						
ANR	528213	Symbol	resources		528041						
ANR	528214	Symbol	i		528041						
ANR	528215	Symbol	D_FULLDEBUG		528041						
ANR	528216	Symbol	* * resources		528041						
ANR	528217	Symbol	nresources		528041						
ANR	528218	Symbol	* m_hibernation_manager		528041						
ANR	528219	Symbol	m_hibernation_manager		528041						
ANR	528220	Symbol	target		528041						
ANR	528221	Symbol	* resources		528041						
ANR	528222	Symbol	str		528041						
ANR	528223	Symbol	m_hibernation_manager -> stringToSleepState		528041						
ANR	528224	Symbol	* i		528041						
ANR	528225	Symbol	str . Value		528041						
ANR	528226	Symbol	tmp		528041						
ANR	528227	Symbol	true		528041						
ANR	528228	Symbol	resources [ i ] -> evaluateHibernate		528041						
ANR	528229	Symbol	m_hibernation_manager -> wantsHibernate		528041						
ANR	528230	Function	ResMgr :: checkHibernate	2132:0:52368:54643							
ANR	528231	FunctionDef	ResMgr :: checkHibernate ()		528230	0					
ANR	528232	CompoundStatement		2134:0:52404:54643	528230	0					
ANR	528233	IfStatement	if ( hibernating ( ) )		528230	0					
ANR	528234	Condition	hibernating ( )	2138:6:52527:52540	528230	0	True				
ANR	528235	CallExpression	hibernating ( )		528230	0					
ANR	528236	Callee	hibernating		528230	0					
ANR	528237	Identifier	hibernating		528230	0					
ANR	528238	ArgumentList			528230	1					
ANR	528239	CompoundStatement		5:23:139:139	528230	1					
ANR	528240	ReturnStatement	return ;	2139:2:52548:52554	528230	0	True				
ANR	528241	IdentifierDeclStatement	MyString target ;	2144:1:52649:52664	528230	1	True				
ANR	528242	IdentifierDecl	target		528230	0					
ANR	528243	IdentifierDeclType	MyString		528230	0					
ANR	528244	Identifier	target		528230	1					
ANR	528245	IdentifierDeclStatement	int level = allHibernating ( target ) ;	2145:1:52667:52703	528230	2	True				
ANR	528246	IdentifierDecl	level = allHibernating ( target )		528230	0					
ANR	528247	IdentifierDeclType	int		528230	0					
ANR	528248	Identifier	level		528230	1					
ANR	528249	AssignmentExpression	level = allHibernating ( target )		528230	2		=			
ANR	528250	Identifier	level		528230	0					
ANR	528251	CallExpression	allHibernating ( target )		528230	1					
ANR	528252	Callee	allHibernating		528230	0					
ANR	528253	Identifier	allHibernating		528230	0					
ANR	528254	ArgumentList	target		528230	1					
ANR	528255	Argument	target		528230	0					
ANR	528256	Identifier	target		528230	0					
ANR	528257	IfStatement	if ( level > 0 )		528230	3					
ANR	528258	Condition	level > 0	2146:5:52710:52718	528230	0	True				
ANR	528259	RelationalExpression	level > 0		528230	0		>			
ANR	528260	Identifier	level		528230	0					
ANR	528261	PrimaryExpression	0		528230	1					
ANR	528262	CompoundStatement		13:17:317:317	528230	1					
ANR	528263	IfStatement	if ( ! m_hibernation_manager -> canHibernate ( ) )		528230	0					
ANR	528264	Condition	! m_hibernation_manager -> canHibernate ( )	2148:12:52737:52774	528230	0	True				
ANR	528265	UnaryOperationExpression	! m_hibernation_manager -> canHibernate ( )		528230	0					
ANR	528266	UnaryOperator	!		528230	0					
ANR	528267	CallExpression	m_hibernation_manager -> canHibernate ( )		528230	1					
ANR	528268	Callee	m_hibernation_manager -> canHibernate		528230	0					
ANR	528269	PtrMemberAccess	m_hibernation_manager -> canHibernate		528230	0					
ANR	528270	Identifier	m_hibernation_manager		528230	0					
ANR	528271	Identifier	canHibernate		528230	1					
ANR	528272	ArgumentList			528230	1					
ANR	528273	CompoundStatement		15:53:373:373	528230	1					
ANR	528274	Statement	dprintf	2149:12:52792:52798	528230	0	True				
ANR	528275	Statement	(	2149:20:52800:52800	528230	1	True				
ANR	528276	Statement	D_ALWAYS	2149:22:52802:52809	528230	2	True				
ANR	528277	Statement	","	2149:30:52810:52810	528230	3	True				
ANR	528278	Statement	"""ResMgr: ERROR: Ignoring """	2149:32:52812:52837	528230	4	True				
ANR	528279	Statement	"""HIBERNATE: Machine does not support any """	2150:16:52855:52896	528230	5	True				
ANR	528280	Statement	"""sleep states.\\n"""	2151:16:52914:52930	528230	6	True				
ANR	528281	Statement	)	2151:34:52932:52932	528230	7	True				
ANR	528282	ExpressionStatement		2151:35:52933:52933	528230	8	True				
ANR	528283	ReturnStatement	return ;	2152:12:52947:52953	528230	9	True				
ANR	528284	IfStatement	if ( ! m_hibernation_manager -> canWake ( ) )		528230	1					
ANR	528285	Condition	! m_hibernation_manager -> canWake ( )	2155:12:52978:53010	528230	0	True				
ANR	528286	UnaryOperationExpression	! m_hibernation_manager -> canWake ( )		528230	0					
ANR	528287	UnaryOperator	!		528230	0					
ANR	528288	CallExpression	m_hibernation_manager -> canWake ( )		528230	1					
ANR	528289	Callee	m_hibernation_manager -> canWake		528230	0					
ANR	528290	PtrMemberAccess	m_hibernation_manager -> canWake		528230	0					
ANR	528291	Identifier	m_hibernation_manager		528230	0					
ANR	528292	Identifier	canWake		528230	1					
ANR	528293	ArgumentList			528230	1					
ANR	528294	CompoundStatement		23:3:614:688	528230	1					
ANR	528295	IdentifierDeclStatement	NetworkAdapterBase * netif = m_hibernation_manager -> getNetworkAdapter ( ) ;	2156:3:53019:53093	528230	0	True				
ANR	528296	IdentifierDecl	* netif = m_hibernation_manager -> getNetworkAdapter ( )		528230	0					
ANR	528297	IdentifierDeclType	NetworkAdapterBase *		528230	0					
ANR	528298	Identifier	netif		528230	1					
ANR	528299	AssignmentExpression	* netif = m_hibernation_manager -> getNetworkAdapter ( )		528230	2		=			
ANR	528300	Identifier	netif		528230	0					
ANR	528301	CallExpression	m_hibernation_manager -> getNetworkAdapter ( )		528230	1					
ANR	528302	Callee	m_hibernation_manager -> getNetworkAdapter		528230	0					
ANR	528303	PtrMemberAccess	m_hibernation_manager -> getNetworkAdapter		528230	0					
ANR	528304	Identifier	m_hibernation_manager		528230	0					
ANR	528305	Identifier	getNetworkAdapter		528230	1					
ANR	528306	ArgumentList			528230	1					
ANR	528307	IfStatement	"if ( param_boolean ( ""HIBERNATION_OVERRIDE_WOL"" , false ) )"		528230	1					
ANR	528308	Condition	"param_boolean ( ""HIBERNATION_OVERRIDE_WOL"" , false )"	2158:8:53103:53152	528230	0	True				
ANR	528309	CallExpression	"param_boolean ( ""HIBERNATION_OVERRIDE_WOL"" , false )"		528230	0					
ANR	528310	Callee	param_boolean		528230	0					
ANR	528311	Identifier	param_boolean		528230	0					
ANR	528312	ArgumentList	"""HIBERNATION_OVERRIDE_WOL"""		528230	1					
ANR	528313	Argument	"""HIBERNATION_OVERRIDE_WOL"""		528230	0					
ANR	528314	PrimaryExpression	"""HIBERNATION_OVERRIDE_WOL"""		528230	0					
ANR	528315	Argument	false		528230	1					
ANR	528316	Identifier	false		528230	0					
ANR	528317	CompoundStatement		25:61:751:751	528230	1					
ANR	528318	Statement	dprintf	2159:4:53162:53168	528230	0	True				
ANR	528319	Statement	(	2159:12:53170:53170	528230	1	True				
ANR	528320	Statement	D_ALWAYS	2159:14:53172:53179	528230	2	True				
ANR	528321	Statement	","	2159:22:53180:53180	528230	3	True				
ANR	528322	Statement	"""ResMgr: """	2160:8:53190:53199	528230	4	True				
ANR	528323	Statement	"""HIBERNATE: Machine cannot be woken by its """	2161:8:53209:53252	528230	5	True				
ANR	528324	Statement	"""public network adapter (%s); hibernating anyway\\n"""	2162:8:53262:53312	528230	6	True				
ANR	528325	Statement	","	2162:59:53313:53313	528230	7	True				
ANR	528326	Statement	netif	2163:8:53323:53327	528230	8	True				
ANR	528327	Statement	->	2163:13:53328:53329	528230	9	True				
ANR	528328	Statement	interfaceName	2163:15:53330:53342	528230	10	True				
ANR	528329	Statement	(	2163:28:53343:53343	528230	11	True				
ANR	528330	Statement	)	2163:29:53344:53344	528230	12	True				
ANR	528331	Statement	)	2163:31:53346:53346	528230	13	True				
ANR	528332	ExpressionStatement		2163:32:53347:53347	528230	14	True				
ANR	528333	ElseStatement	else		528230	0					
ANR	528334	CompoundStatement		32:8:957:957	528230	0					
ANR	528335	Statement	dprintf	2166:4:53368:53374	528230	0	True				
ANR	528336	Statement	(	2166:12:53376:53376	528230	1	True				
ANR	528337	Statement	D_ALWAYS	2166:14:53378:53385	528230	2	True				
ANR	528338	Statement	","	2166:22:53386:53386	528230	3	True				
ANR	528339	Statement	"""ResMgr: ERROR: Ignoring """	2166:24:53388:53413	528230	4	True				
ANR	528340	Statement	"""HIBERNATE: Machine cannot be woken by its """	2167:8:53423:53466	528230	5	True				
ANR	528341	Statement	"""public network adapter (%s).\\n"""	2168:8:53476:53507	528230	6	True				
ANR	528342	Statement	","	2168:40:53508:53508	528230	7	True				
ANR	528343	Statement	netif	2169:8:53518:53522	528230	8	True				
ANR	528344	Statement	->	2169:13:53523:53524	528230	9	True				
ANR	528345	Statement	interfaceName	2169:15:53525:53537	528230	10	True				
ANR	528346	Statement	(	2169:28:53538:53538	528230	11	True				
ANR	528347	Statement	)	2169:29:53539:53539	528230	12	True				
ANR	528348	Statement	)	2169:31:53541:53541	528230	13	True				
ANR	528349	ExpressionStatement		2169:32:53542:53542	528230	14	True				
ANR	528350	ReturnStatement	return ;	2170:4:53548:53554	528230	15	True				
ANR	528351	Statement	dprintf	2174:2:53568:53574	528230	2	True				
ANR	528352	Statement	(	2174:10:53576:53576	528230	3	True				
ANR	528353	Statement	D_ALWAYS	2174:12:53578:53585	528230	4	True				
ANR	528354	Statement	","	2174:20:53586:53586	528230	5	True				
ANR	528355	Statement	"""ResMgr: This machine is about to """	2174:22:53588:53622	528230	6	True				
ANR	528356	Statement	"""enter hibernation\\n"""	2175:10:53634:53654	528230	7	True				
ANR	528357	Statement	)	2175:32:53656:53656	528230	8	True				
ANR	528358	ExpressionStatement		2175:33:53657:53657	528230	9	True				
ANR	528359	IfStatement	if ( disableResources ( target ) )		528230	10					
ANR	528360	Condition	disableResources ( target )	2190:7:54273:54298	528230	0	True				
ANR	528361	CallExpression	disableResources ( target )		528230	0					
ANR	528362	Callee	disableResources		528230	0					
ANR	528363	Identifier	disableResources		528230	0					
ANR	528364	ArgumentList	target		528230	1					
ANR	528365	Argument	target		528230	0					
ANR	528366	Identifier	target		528230	0					
ANR	528367	CompoundStatement		57:36:1897:1897	528230	1					
ANR	528368	ExpressionStatement	m_hibernation_manager -> switchToTargetState ( )	2191:3:54307:54352	528230	0	True				
ANR	528369	CallExpression	m_hibernation_manager -> switchToTargetState ( )		528230	0					
ANR	528370	Callee	m_hibernation_manager -> switchToTargetState		528230	0					
ANR	528371	PtrMemberAccess	m_hibernation_manager -> switchToTargetState		528230	0					
ANR	528372	Identifier	m_hibernation_manager		528230	0					
ANR	528373	Identifier	switchToTargetState		528230	1					
ANR	528374	ArgumentList			528230	1					
ANR	528375	Statement	if	2193:6:54364:54365	528230	11	True				
ANR	528376	Statement	!	2193:9:54367:54367	528230	12	True				
ANR	528377	Statement	defined	2193:10:54368:54374	528230	13	True				
ANR	528378	ExpressionStatement	( WIN32 ) sleep ( 10 )	2193:17:54375:54396	528230	14	True				
ANR	528379	CastExpression	( WIN32 ) sleep ( 10 )		528230	0					
ANR	528380	CastTarget	WIN32		528230	0					
ANR	528381	CallExpression	sleep ( 10 )		528230	1					
ANR	528382	Callee	sleep		528230	0					
ANR	528383	Identifier	sleep		528230	0					
ANR	528384	ArgumentList	10		528230	1					
ANR	528385	Argument	10		528230	0					
ANR	528386	PrimaryExpression	10		528230	0					
ANR	528387	ExpressionStatement	m_hibernation_manager -> setTargetState ( HibernatorBase :: NONE )	2195:8:54406:54468	528230	15	True				
ANR	528388	CallExpression	m_hibernation_manager -> setTargetState ( HibernatorBase :: NONE )		528230	0					
ANR	528389	Callee	m_hibernation_manager -> setTargetState		528230	0					
ANR	528390	PtrMemberAccess	m_hibernation_manager -> setTargetState		528230	0					
ANR	528391	Identifier	m_hibernation_manager		528230	0					
ANR	528392	Identifier	setTargetState		528230	1					
ANR	528393	ArgumentList	HibernatorBase :: NONE		528230	1					
ANR	528394	Argument	HibernatorBase :: NONE		528230	0					
ANR	528395	Identifier	HibernatorBase :: NONE		528230	0					
ANR	528396	ForStatement	for ( int i = 0 ; i < nresources ; ++ i )		528230	16					
ANR	528397	ForInit	int i = 0 ;	2196:14:54484:54493	528230	0	True				
ANR	528398	IdentifierDeclStatement	int i = 0 ;		528230	0					
ANR	528399	IdentifierDecl	i = 0		528230	0					
ANR	528400	IdentifierDeclType	int		528230	0					
ANR	528401	Identifier	i		528230	1					
ANR	528402	AssignmentExpression	i = 0		528230	2		=			
ANR	528403	Identifier	i		528230	0					
ANR	528404	PrimaryExpression	0		528230	1					
ANR	528405	Condition	i < nresources	2196:25:54495:54508	528230	1	True				
ANR	528406	RelationalExpression	i < nresources		528230	0		<			
ANR	528407	Identifier	i		528230	0					
ANR	528408	Identifier	nresources		528230	1					
ANR	528409	UnaryExpression	++ i	2196:41:54511:54513	528230	2	True				
ANR	528410	IncDec	++		528230	0					
ANR	528411	Identifier	i		528230	1					
ANR	528412	CompoundStatement		63:47:2112:2112	528230	3					
ANR	528413	ExpressionStatement	resources [ i ] -> enable ( )	2197:12:54531:54553	528230	0	True				
ANR	528414	CallExpression	resources [ i ] -> enable ( )		528230	0					
ANR	528415	Callee	resources [ i ] -> enable		528230	0					
ANR	528416	PtrMemberAccess	resources [ i ] -> enable		528230	0					
ANR	528417	ArrayIndexing	resources [ i ]		528230	0					
ANR	528418	Identifier	resources		528230	0					
ANR	528419	Identifier	i		528230	1					
ANR	528420	Identifier	enable		528230	1					
ANR	528421	ArgumentList			528230	1					
ANR	528422	ExpressionStatement	resources [ i ] -> update ( )	2198:12:54567:54589	528230	1	True				
ANR	528423	CallExpression	resources [ i ] -> update ( )		528230	0					
ANR	528424	Callee	resources [ i ] -> update		528230	0					
ANR	528425	PtrMemberAccess	resources [ i ] -> update		528230	0					
ANR	528426	ArrayIndexing	resources [ i ]		528230	0					
ANR	528427	Identifier	resources		528230	0					
ANR	528428	Identifier	i		528230	1					
ANR	528429	Identifier	update		528230	1					
ANR	528430	ArgumentList			528230	1					
ANR	528431	ExpressionStatement	m_hibernating = false	2199:3:54594:54615	528230	2	True				
ANR	528432	AssignmentExpression	m_hibernating = false		528230	0		=			
ANR	528433	Identifier	m_hibernating		528230	0					
ANR	528434	Identifier	false		528230	1					
ANR	528435	Statement	endif	2202:6:54631:54635	528230	17	True				
ANR	528436	ReturnType	void		528230	1					
ANR	528437	Identifier	ResMgr :: checkHibernate		528230	2					
ANR	528438	ParameterList			528230	3					
ANR	528439	CFGEntryNode	ENTRY		528230		True				
ANR	528440	CFGExitNode	EXIT		528230		True				
ANR	528441	Symbol	level		528230						
ANR	528442	Symbol	m_hibernation_manager -> canWake		528230						
ANR	528443	Symbol	netif		528230						
ANR	528444	Symbol	false		528230						
ANR	528445	Symbol	disableResources		528230						
ANR	528446	Symbol	i		528230						
ANR	528447	Symbol	resources		528230						
ANR	528448	Symbol	param_boolean		528230						
ANR	528449	Symbol	allHibernating		528230						
ANR	528450	Symbol	nresources		528230						
ANR	528451	Symbol	* m_hibernation_manager		528230						
ANR	528452	Symbol	m_hibernation_manager		528230						
ANR	528453	Symbol	m_hibernating		528230						
ANR	528454	Symbol	target		528230						
ANR	528455	Symbol	HibernatorBase :: NONE		528230						
ANR	528456	Symbol	* resources		528230						
ANR	528457	Symbol	* i		528230						
ANR	528458	Symbol	hibernating		528230						
ANR	528459	Symbol	m_hibernation_manager -> getNetworkAdapter		528230						
ANR	528460	Symbol	m_hibernation_manager -> canHibernate		528230						
ANR	528461	Function	ResMgr :: startHibernateTimer	2207:0:54647:55055							
ANR	528462	FunctionDef	ResMgr :: startHibernateTimer ()		528461	0					
ANR	528463	CompoundStatement		2209:0:54687:55055	528461	0					
ANR	528464	IdentifierDeclStatement	int interval = m_hibernation_manager -> getCheckInterval ( ) ;	2210:1:54690:54746	528461	0	True				
ANR	528465	IdentifierDecl	interval = m_hibernation_manager -> getCheckInterval ( )		528461	0					
ANR	528466	IdentifierDeclType	int		528461	0					
ANR	528467	Identifier	interval		528461	1					
ANR	528468	AssignmentExpression	interval = m_hibernation_manager -> getCheckInterval ( )		528461	2		=			
ANR	528469	Identifier	interval		528461	0					
ANR	528470	CallExpression	m_hibernation_manager -> getCheckInterval ( )		528461	1					
ANR	528471	Callee	m_hibernation_manager -> getCheckInterval		528461	0					
ANR	528472	PtrMemberAccess	m_hibernation_manager -> getCheckInterval		528461	0					
ANR	528473	Identifier	m_hibernation_manager		528461	0					
ANR	528474	Identifier	getCheckInterval		528461	1					
ANR	528475	ArgumentList			528461	1					
ANR	528476	ExpressionStatement	"m_hibernate_tid = daemonCore -> Register_Timer ( interval , interval , ( TimerHandlercpp ) & ResMgr :: checkHibernate , ""ResMgr::startHibernateTimer()"" , this )"	2211:1:54749:54902	528461	1	True				
ANR	528477	AssignmentExpression	"m_hibernate_tid = daemonCore -> Register_Timer ( interval , interval , ( TimerHandlercpp ) & ResMgr :: checkHibernate , ""ResMgr::startHibernateTimer()"" , this )"		528461	0		=			
ANR	528478	Identifier	m_hibernate_tid		528461	0					
ANR	528479	CallExpression	"daemonCore -> Register_Timer ( interval , interval , ( TimerHandlercpp ) & ResMgr :: checkHibernate , ""ResMgr::startHibernateTimer()"" , this )"		528461	1					
ANR	528480	Callee	daemonCore -> Register_Timer		528461	0					
ANR	528481	PtrMemberAccess	daemonCore -> Register_Timer		528461	0					
ANR	528482	Identifier	daemonCore		528461	0					
ANR	528483	Identifier	Register_Timer		528461	1					
ANR	528484	ArgumentList	interval		528461	1					
ANR	528485	Argument	interval		528461	0					
ANR	528486	Identifier	interval		528461	0					
ANR	528487	Argument	interval		528461	1					
ANR	528488	Identifier	interval		528461	0					
ANR	528489	Argument	( TimerHandlercpp ) & ResMgr :: checkHibernate		528461	2					
ANR	528490	CastExpression	( TimerHandlercpp ) & ResMgr :: checkHibernate		528461	0					
ANR	528491	CastTarget	TimerHandlercpp		528461	0					
ANR	528492	UnaryOperationExpression	& ResMgr :: checkHibernate		528461	1					
ANR	528493	UnaryOperator	&		528461	0					
ANR	528494	Identifier	ResMgr :: checkHibernate		528461	1					
ANR	528495	Argument	"""ResMgr::startHibernateTimer()"""		528461	3					
ANR	528496	PrimaryExpression	"""ResMgr::startHibernateTimer()"""		528461	0					
ANR	528497	Argument	this		528461	4					
ANR	528498	Identifier	this		528461	0					
ANR	528499	IfStatement	if ( m_hibernate_tid < 0 )		528461	2					
ANR	528500	Condition	m_hibernate_tid < 0	2215:5:54909:54927	528461	0	True				
ANR	528501	RelationalExpression	m_hibernate_tid < 0		528461	0		<			
ANR	528502	Identifier	m_hibernate_tid		528461	0					
ANR	528503	PrimaryExpression	0		528461	1					
ANR	528504	CompoundStatement		7:27:243:243	528461	1					
ANR	528505	ExpressionStatement	"EXCEPT ( ""Can't register hibernation timer"" )"	2216:2:54935:54979	528461	0	True				
ANR	528506	CallExpression	"EXCEPT ( ""Can't register hibernation timer"" )"		528461	0					
ANR	528507	Callee	EXCEPT		528461	0					
ANR	528508	Identifier	EXCEPT		528461	0					
ANR	528509	ArgumentList	"""Can't register hibernation timer"""		528461	1					
ANR	528510	Argument	"""Can't register hibernation timer"""		528461	0					
ANR	528511	PrimaryExpression	"""Can't register hibernation timer"""		528461	0					
ANR	528512	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Started hibernation timer.\\n"" )"	2218:1:54985:55039	528461	3	True				
ANR	528513	CallExpression	"dprintf ( D_FULLDEBUG , ""Started hibernation timer.\\n"" )"		528461	0					
ANR	528514	Callee	dprintf		528461	0					
ANR	528515	Identifier	dprintf		528461	0					
ANR	528516	ArgumentList	D_FULLDEBUG		528461	1					
ANR	528517	Argument	D_FULLDEBUG		528461	0					
ANR	528518	Identifier	D_FULLDEBUG		528461	0					
ANR	528519	Argument	"""Started hibernation timer.\\n"""		528461	1					
ANR	528520	PrimaryExpression	"""Started hibernation timer.\\n"""		528461	0					
ANR	528521	ReturnStatement	return TRUE ;	2219:1:55042:55053	528461	4	True				
ANR	528522	Identifier	TRUE		528461	0					
ANR	528523	ReturnType	int		528461	1					
ANR	528524	Identifier	ResMgr :: startHibernateTimer		528461	2					
ANR	528525	ParameterList			528461	3					
ANR	528526	CFGEntryNode	ENTRY		528461		True				
ANR	528527	CFGExitNode	EXIT		528461		True				
ANR	528528	Symbol	& ResMgr :: checkHibernate		528461						
ANR	528529	Symbol	* daemonCore		528461						
ANR	528530	Symbol	daemonCore		528461						
ANR	528531	Symbol	daemonCore -> Register_Timer		528461						
ANR	528532	Symbol	m_hibernation_manager -> getCheckInterval		528461						
ANR	528533	Symbol	this		528461						
ANR	528534	Symbol	TRUE		528461						
ANR	528535	Symbol	interval		528461						
ANR	528536	Symbol	D_FULLDEBUG		528461						
ANR	528537	Symbol	m_hibernation_manager		528461						
ANR	528538	Symbol	* m_hibernation_manager		528461						
ANR	528539	Symbol	m_hibernate_tid		528461						
ANR	528540	Function	ResMgr :: resetHibernateTimer	2223:0:55059:55327							
ANR	528541	FunctionDef	ResMgr :: resetHibernateTimer ()		528540	0					
ANR	528542	CompoundStatement		2225:0:55100:55327	528540	0					
ANR	528543	IfStatement	if ( m_hibernation_manager -> wantsHibernate ( ) )		528540	0					
ANR	528544	Condition	m_hibernation_manager -> wantsHibernate ( )	2226:6:55108:55146	528540	0	True				
ANR	528545	CallExpression	m_hibernation_manager -> wantsHibernate ( )		528540	0					
ANR	528546	Callee	m_hibernation_manager -> wantsHibernate		528540	0					
ANR	528547	PtrMemberAccess	m_hibernation_manager -> wantsHibernate		528540	0					
ANR	528548	Identifier	m_hibernation_manager		528540	0					
ANR	528549	Identifier	wantsHibernate		528540	1					
ANR	528550	ArgumentList			528540	1					
ANR	528551	CompoundStatement		2:48:49:49	528540	1					
ANR	528552	IfStatement	if ( m_hibernate_tid != - 1 )		528540	0					
ANR	528553	Condition	m_hibernate_tid != - 1	2227:6:55158:55178	528540	0	True				
ANR	528554	EqualityExpression	m_hibernate_tid != - 1		528540	0		!=			
ANR	528555	Identifier	m_hibernate_tid		528540	0					
ANR	528556	UnaryOperationExpression	- 1		528540	1					
ANR	528557	UnaryOperator	-		528540	0					
ANR	528558	PrimaryExpression	1		528540	1					
ANR	528559	CompoundStatement		4:3:86:142	528540	1					
ANR	528560	IdentifierDeclStatement	int interval = m_hibernation_manager -> getCheckInterval ( ) ;	2228:3:55187:55243	528540	0	True				
ANR	528561	IdentifierDecl	interval = m_hibernation_manager -> getCheckInterval ( )		528540	0					
ANR	528562	IdentifierDeclType	int		528540	0					
ANR	528563	Identifier	interval		528540	1					
ANR	528564	AssignmentExpression	interval = m_hibernation_manager -> getCheckInterval ( )		528540	2		=			
ANR	528565	Identifier	interval		528540	0					
ANR	528566	CallExpression	m_hibernation_manager -> getCheckInterval ( )		528540	1					
ANR	528567	Callee	m_hibernation_manager -> getCheckInterval		528540	0					
ANR	528568	PtrMemberAccess	m_hibernation_manager -> getCheckInterval		528540	0					
ANR	528569	Identifier	m_hibernation_manager		528540	0					
ANR	528570	Identifier	getCheckInterval		528540	1					
ANR	528571	ArgumentList			528540	1					
ANR	528572	ExpressionStatement	"daemonCore -> Reset_Timer ( m_hibernate_tid , interval , interval )"	2229:3:55248:55318	528540	1	True				
ANR	528573	CallExpression	"daemonCore -> Reset_Timer ( m_hibernate_tid , interval , interval )"		528540	0					
ANR	528574	Callee	daemonCore -> Reset_Timer		528540	0					
ANR	528575	PtrMemberAccess	daemonCore -> Reset_Timer		528540	0					
ANR	528576	Identifier	daemonCore		528540	0					
ANR	528577	Identifier	Reset_Timer		528540	1					
ANR	528578	ArgumentList	m_hibernate_tid		528540	1					
ANR	528579	Argument	m_hibernate_tid		528540	0					
ANR	528580	Identifier	m_hibernate_tid		528540	0					
ANR	528581	Argument	interval		528540	1					
ANR	528582	Identifier	interval		528540	0					
ANR	528583	Argument	interval		528540	2					
ANR	528584	Identifier	interval		528540	0					
ANR	528585	ReturnType	void		528540	1					
ANR	528586	Identifier	ResMgr :: resetHibernateTimer		528540	2					
ANR	528587	ParameterList			528540	3					
ANR	528588	CFGEntryNode	ENTRY		528540		True				
ANR	528589	CFGExitNode	EXIT		528540		True				
ANR	528590	Symbol	daemonCore		528540						
ANR	528591	Symbol	m_hibernation_manager -> getCheckInterval		528540						
ANR	528592	Symbol	interval		528540						
ANR	528593	Symbol	m_hibernation_manager -> wantsHibernate		528540						
ANR	528594	Symbol	m_hibernation_manager		528540						
ANR	528595	Symbol	* m_hibernation_manager		528540						
ANR	528596	Symbol	m_hibernate_tid		528540						
ANR	528597	Function	ResMgr :: cancelHibernateTimer	2237:0:55331:55728							
ANR	528598	FunctionDef	ResMgr :: cancelHibernateTimer ()		528597	0					
ANR	528599	CompoundStatement		2239:0:55373:55728	528597	0					
ANR	528600	IdentifierDeclStatement	int rval ;	2240:1:55376:55384	528597	0	True				
ANR	528601	IdentifierDecl	rval		528597	0					
ANR	528602	IdentifierDeclType	int		528597	0					
ANR	528603	Identifier	rval		528597	1					
ANR	528604	IfStatement	if ( m_hibernate_tid != - 1 )		528597	1					
ANR	528605	Condition	m_hibernate_tid != - 1	2241:5:55391:55411	528597	0	True				
ANR	528606	EqualityExpression	m_hibernate_tid != - 1		528597	0		!=			
ANR	528607	Identifier	m_hibernate_tid		528597	0					
ANR	528608	UnaryOperationExpression	- 1		528597	1					
ANR	528609	UnaryOperator	-		528597	0					
ANR	528610	PrimaryExpression	1		528597	1					
ANR	528611	CompoundStatement		3:29:41:41	528597	1					
ANR	528612	ExpressionStatement	rval = daemonCore -> Cancel_Timer ( m_hibernate_tid )	2242:2:55419:55469	528597	0	True				
ANR	528613	AssignmentExpression	rval = daemonCore -> Cancel_Timer ( m_hibernate_tid )		528597	0		=			
ANR	528614	Identifier	rval		528597	0					
ANR	528615	CallExpression	daemonCore -> Cancel_Timer ( m_hibernate_tid )		528597	1					
ANR	528616	Callee	daemonCore -> Cancel_Timer		528597	0					
ANR	528617	PtrMemberAccess	daemonCore -> Cancel_Timer		528597	0					
ANR	528618	Identifier	daemonCore		528597	0					
ANR	528619	Identifier	Cancel_Timer		528597	1					
ANR	528620	ArgumentList	m_hibernate_tid		528597	1					
ANR	528621	Argument	m_hibernate_tid		528597	0					
ANR	528622	Identifier	m_hibernate_tid		528597	0					
ANR	528623	IfStatement	if ( rval < 0 )		528597	1					
ANR	528624	Condition	rval < 0	2243:6:55477:55484	528597	0	True				
ANR	528625	RelationalExpression	rval < 0		528597	0		<			
ANR	528626	Identifier	rval		528597	0					
ANR	528627	PrimaryExpression	0		528597	1					
ANR	528628	CompoundStatement		5:17:114:114	528597	1					
ANR	528629	Statement	dprintf	2244:3:55493:55499	528597	0	True				
ANR	528630	Statement	(	2244:10:55500:55500	528597	1	True				
ANR	528631	Statement	D_ALWAYS	2244:12:55502:55509	528597	2	True				
ANR	528632	Statement	","	2244:20:55510:55510	528597	3	True				
ANR	528633	Statement	"""Failed to cancel hibernation timer (%d): """	2244:22:55512:55554	528597	4	True				
ANR	528634	Statement	"""daemonCore error\\n"""	2245:4:55560:55579	528597	5	True				
ANR	528635	Statement	","	2245:24:55580:55580	528597	6	True				
ANR	528636	Statement	m_hibernate_tid	2245:26:55582:55596	528597	7	True				
ANR	528637	Statement	)	2245:42:55598:55598	528597	8	True				
ANR	528638	ExpressionStatement		2245:43:55599:55599	528597	9	True				
ANR	528639	ElseStatement	else		528597	0					
ANR	528640	CompoundStatement		8:9:236:236	528597	0					
ANR	528641	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Canceled hibernation timer (%d)\\n"" , m_hibernate_tid )"	2247:3:55615:55695	528597	0	True				
ANR	528642	CallExpression	"dprintf ( D_FULLDEBUG , ""Canceled hibernation timer (%d)\\n"" , m_hibernate_tid )"		528597	0					
ANR	528643	Callee	dprintf		528597	0					
ANR	528644	Identifier	dprintf		528597	0					
ANR	528645	ArgumentList	D_FULLDEBUG		528597	1					
ANR	528646	Argument	D_FULLDEBUG		528597	0					
ANR	528647	Identifier	D_FULLDEBUG		528597	0					
ANR	528648	Argument	"""Canceled hibernation timer (%d)\\n"""		528597	1					
ANR	528649	PrimaryExpression	"""Canceled hibernation timer (%d)\\n"""		528597	0					
ANR	528650	Argument	m_hibernate_tid		528597	2					
ANR	528651	Identifier	m_hibernate_tid		528597	0					
ANR	528652	ExpressionStatement	m_hibernate_tid = - 1	2250:2:55703:55723	528597	2	True				
ANR	528653	AssignmentExpression	m_hibernate_tid = - 1		528597	0		=			
ANR	528654	Identifier	m_hibernate_tid		528597	0					
ANR	528655	UnaryOperationExpression	- 1		528597	1					
ANR	528656	UnaryOperator	-		528597	0					
ANR	528657	PrimaryExpression	1		528597	1					
ANR	528658	ReturnType	void		528597	1					
ANR	528659	Identifier	ResMgr :: cancelHibernateTimer		528597	2					
ANR	528660	ParameterList			528597	3					
ANR	528661	CFGEntryNode	ENTRY		528597		True				
ANR	528662	CFGExitNode	EXIT		528597		True				
ANR	528663	Symbol	* daemonCore		528597						
ANR	528664	Symbol	daemonCore		528597						
ANR	528665	Symbol	rval		528597						
ANR	528666	Symbol	D_FULLDEBUG		528597						
ANR	528667	Symbol	m_hibernate_tid		528597						
ANR	528668	Symbol	daemonCore -> Cancel_Timer		528597						
ANR	528669	Function	ResMgr :: disableResources	2255:0:55732:57068							
ANR	528670	FunctionDef	ResMgr :: disableResources (const MyString & state_str)		528669	0					
ANR	528671	CompoundStatement		2257:0:55790:57068	528669	0					
ANR	528672	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""In ResMgr::disableResources ()\\n"" )"	2259:1:55794:55857	528669	0	True				
ANR	528673	CallExpression	"dprintf ( D_FULLDEBUG , ""In ResMgr::disableResources ()\\n"" )"		528669	0					
ANR	528674	Callee	dprintf		528669	0					
ANR	528675	Identifier	dprintf		528669	0					
ANR	528676	ArgumentList	D_FULLDEBUG		528669	1					
ANR	528677	Argument	D_FULLDEBUG		528669	0					
ANR	528678	Identifier	D_FULLDEBUG		528669	0					
ANR	528679	Argument	"""In ResMgr::disableResources ()\\n"""		528669	1					
ANR	528680	PrimaryExpression	"""In ResMgr::disableResources ()\\n"""		528669	0					
ANR	528681	IdentifierDeclStatement	int i ;	2263:1:55861:55866	528669	1	True				
ANR	528682	IdentifierDecl	i		528669	0					
ANR	528683	IdentifierDeclType	int		528669	0					
ANR	528684	Identifier	i		528669	1					
ANR	528685	ExpressionStatement	m_hibernation_manager -> setTargetState ( state_str . Value ( ) )	2267:1:55974:56033	528669	2	True				
ANR	528686	CallExpression	m_hibernation_manager -> setTargetState ( state_str . Value ( ) )		528669	0					
ANR	528687	Callee	m_hibernation_manager -> setTargetState		528669	0					
ANR	528688	PtrMemberAccess	m_hibernation_manager -> setTargetState		528669	0					
ANR	528689	Identifier	m_hibernation_manager		528669	0					
ANR	528690	Identifier	setTargetState		528669	1					
ANR	528691	ArgumentList	state_str . Value ( )		528669	1					
ANR	528692	Argument	state_str . Value ( )		528669	0					
ANR	528693	CallExpression	state_str . Value ( )		528669	0					
ANR	528694	Callee	state_str . Value		528669	0					
ANR	528695	MemberAccess	state_str . Value		528669	0					
ANR	528696	Identifier	state_str		528669	0					
ANR	528697	Identifier	Value		528669	1					
ANR	528698	ArgumentList			528669	1					
ANR	528699	IdentifierDeclStatement	bool ok = true ;	2270:1:56058:56072	528669	3	True				
ANR	528700	IdentifierDecl	ok = true		528669	0					
ANR	528701	IdentifierDeclType	bool		528669	0					
ANR	528702	Identifier	ok		528669	1					
ANR	528703	AssignmentExpression	ok = true		528669	2		=			
ANR	528704	Identifier	true		528669	0					
ANR	528705	Identifier	true		528669	1					
ANR	528706	ForStatement	for ( i = 0 ; i < nresources && ok ; ++ i )		528669	4					
ANR	528707	ForInit	i = 0 ;	2271:7:56081:56086	528669	0	True				
ANR	528708	AssignmentExpression	i = 0		528669	0		=			
ANR	528709	Identifier	i		528669	0					
ANR	528710	PrimaryExpression	0		528669	1					
ANR	528711	Condition	i < nresources && ok	2271:14:56088:56107	528669	1	True				
ANR	528712	AndExpression	i < nresources && ok		528669	0		&&			
ANR	528713	RelationalExpression	i < nresources		528669	0		<			
ANR	528714	Identifier	i		528669	0					
ANR	528715	Identifier	nresources		528669	1					
ANR	528716	Identifier	ok		528669	1					
ANR	528717	UnaryExpression	++ i	2271:36:56110:56112	528669	2	True				
ANR	528718	IncDec	++		528669	0					
ANR	528719	Identifier	i		528669	1					
ANR	528720	CompoundStatement		15:42:325:325	528669	3					
ANR	528721	ExpressionStatement	ok = resources [ i ] -> update_with_ack ( )	2272:2:56120:56156	528669	0	True				
ANR	528722	AssignmentExpression	ok = resources [ i ] -> update_with_ack ( )		528669	0		=			
ANR	528723	Identifier	ok		528669	0					
ANR	528724	CallExpression	resources [ i ] -> update_with_ack ( )		528669	1					
ANR	528725	Callee	resources [ i ] -> update_with_ack		528669	0					
ANR	528726	PtrMemberAccess	resources [ i ] -> update_with_ack		528669	0					
ANR	528727	ArrayIndexing	resources [ i ]		528669	0					
ANR	528728	Identifier	resources		528669	0					
ANR	528729	Identifier	i		528669	1					
ANR	528730	Identifier	update_with_ack		528669	1					
ANR	528731	ArgumentList			528669	1					
ANR	528732	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""All resources disabled: %s.\\n"" , ok ? ""yes"" : ""no"" )"	2275:1:56163:56244	528669	5	True				
ANR	528733	CallExpression	"dprintf ( D_FULLDEBUG , ""All resources disabled: %s.\\n"" , ok ? ""yes"" : ""no"" )"		528669	0					
ANR	528734	Callee	dprintf		528669	0					
ANR	528735	Identifier	dprintf		528669	0					
ANR	528736	ArgumentList	D_FULLDEBUG		528669	1					
ANR	528737	Argument	D_FULLDEBUG		528669	0					
ANR	528738	Identifier	D_FULLDEBUG		528669	0					
ANR	528739	Argument	"""All resources disabled: %s.\\n"""		528669	1					
ANR	528740	PrimaryExpression	"""All resources disabled: %s.\\n"""		528669	0					
ANR	528741	Argument	"ok ? ""yes"" : ""no"""		528669	2					
ANR	528742	ConditionalExpression	"ok ? ""yes"" : ""no"""		528669	0					
ANR	528743	Condition	ok		528669	0					
ANR	528744	Identifier	ok		528669	0					
ANR	528745	PrimaryExpression	"""yes"""		528669	1					
ANR	528746	PrimaryExpression	"""no"""		528669	2					
ANR	528747	IfStatement	if ( ! ok )		528669	6					
ANR	528748	Condition	! ok	2283:6:56390:56392	528669	0	True				
ANR	528749	UnaryOperationExpression	! ok		528669	0					
ANR	528750	UnaryOperator	!		528669	0					
ANR	528751	Identifier	ok		528669	1					
ANR	528752	CompoundStatement		27:12:605:605	528669	1					
ANR	528753	ExpressionStatement	m_hibernation_manager -> setTargetState ( HibernatorBase :: NONE )	2284:2:56400:56465	528669	0	True				
ANR	528754	CallExpression	m_hibernation_manager -> setTargetState ( HibernatorBase :: NONE )		528669	0					
ANR	528755	Callee	m_hibernation_manager -> setTargetState		528669	0					
ANR	528756	PtrMemberAccess	m_hibernation_manager -> setTargetState		528669	0					
ANR	528757	Identifier	m_hibernation_manager		528669	0					
ANR	528758	Identifier	setTargetState		528669	1					
ANR	528759	ArgumentList	HibernatorBase :: NONE		528669	1					
ANR	528760	Argument	HibernatorBase :: NONE		528669	0					
ANR	528761	Identifier	HibernatorBase :: NONE		528669	0					
ANR	528762	ElseStatement	else		528669	0					
ANR	528763	CompoundStatement		31:6:685:685	528669	0					
ANR	528764	ForStatement	for ( i = 0 ; i < nresources ; ++ i )		528669	0					
ANR	528765	ForInit	i = 0 ;	2294:8:56834:56839	528669	0	True				
ANR	528766	AssignmentExpression	i = 0		528669	0		=			
ANR	528767	Identifier	i		528669	0					
ANR	528768	PrimaryExpression	0		528669	1					
ANR	528769	Condition	i < nresources	2294:15:56841:56854	528669	1	True				
ANR	528770	RelationalExpression	i < nresources		528669	0		<			
ANR	528771	Identifier	i		528669	0					
ANR	528772	Identifier	nresources		528669	1					
ANR	528773	UnaryExpression	++ i	2294:31:56857:56859	528669	2	True				
ANR	528774	IncDec	++		528669	0					
ANR	528775	Identifier	i		528669	1					
ANR	528776	CompoundStatement		38:37:1072:1072	528669	3					
ANR	528777	ExpressionStatement	resources [ i ] -> disable ( )	2295:3:56868:56891	528669	0	True				
ANR	528778	CallExpression	resources [ i ] -> disable ( )		528669	0					
ANR	528779	Callee	resources [ i ] -> disable		528669	0					
ANR	528780	PtrMemberAccess	resources [ i ] -> disable		528669	0					
ANR	528781	ArrayIndexing	resources [ i ]		528669	0					
ANR	528782	Identifier	resources		528669	0					
ANR	528783	Identifier	i		528669	1					
ANR	528784	Identifier	disable		528669	1					
ANR	528785	ArgumentList			528669	1					
ANR	528786	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""All resources disabled: %s.\\n"" , ok ? ""yes"" : ""no"" )"	2299:1:56902:56985	528669	7	True				
ANR	528787	CallExpression	"dprintf ( D_FULLDEBUG , ""All resources disabled: %s.\\n"" , ok ? ""yes"" : ""no"" )"		528669	0					
ANR	528788	Callee	dprintf		528669	0					
ANR	528789	Identifier	dprintf		528669	0					
ANR	528790	ArgumentList	D_FULLDEBUG		528669	1					
ANR	528791	Argument	D_FULLDEBUG		528669	0					
ANR	528792	Identifier	D_FULLDEBUG		528669	0					
ANR	528793	Argument	"""All resources disabled: %s.\\n"""		528669	1					
ANR	528794	PrimaryExpression	"""All resources disabled: %s.\\n"""		528669	0					
ANR	528795	Argument	"ok ? ""yes"" : ""no"""		528669	2					
ANR	528796	ConditionalExpression	"ok ? ""yes"" : ""no"""		528669	0					
ANR	528797	Condition	ok		528669	0					
ANR	528798	Identifier	ok		528669	0					
ANR	528799	PrimaryExpression	"""yes"""		528669	1					
ANR	528800	PrimaryExpression	"""no"""		528669	2					
ANR	528801	ExpressionStatement	m_hibernating = ok	2305:1:57035:57053	528669	8	True				
ANR	528802	AssignmentExpression	m_hibernating = ok		528669	0		=			
ANR	528803	Identifier	m_hibernating		528669	0					
ANR	528804	Identifier	ok		528669	1					
ANR	528805	ReturnStatement	return ok ;	2307:1:57057:57066	528669	9	True				
ANR	528806	Identifier	ok		528669	0					
ANR	528807	ReturnType	int		528669	1					
ANR	528808	Identifier	ResMgr :: disableResources		528669	2					
ANR	528809	ParameterList	const MyString & state_str		528669	3					
ANR	528810	Parameter	const MyString & state_str	2256:26:55762:55786	528669	0	True				
ANR	528811	ParameterType	const MyString &		528669	0					
ANR	528812	Identifier	state_str		528669	1					
ANR	528813	CFGEntryNode	ENTRY		528669		True				
ANR	528814	CFGExitNode	EXIT		528669		True				
ANR	528815	Symbol	* * i		528669						
ANR	528816	Symbol	i		528669						
ANR	528817	Symbol	resources		528669						
ANR	528818	Symbol	D_FULLDEBUG		528669						
ANR	528819	Symbol	* * resources		528669						
ANR	528820	Symbol	nresources		528669						
ANR	528821	Symbol	m_hibernation_manager		528669						
ANR	528822	Symbol	m_hibernating		528669						
ANR	528823	Symbol	state_str . Value		528669						
ANR	528824	Symbol	* resources		528669						
ANR	528825	Symbol	HibernatorBase :: NONE		528669						
ANR	528826	Symbol	state_str		528669						
ANR	528827	Symbol	* i		528669						
ANR	528828	Symbol	true		528669						
ANR	528829	Symbol	ok		528669						
ANR	528830	Symbol	resources [ i ] -> update_with_ack		528669						
ANR	528831	Function	ResMgr :: hibernating	2311:0:57072:57131							
ANR	528832	FunctionDef	ResMgr :: hibernating ()		528831	0					
ANR	528833	CompoundStatement		2311:34:57106:57131	528831	0					
ANR	528834	ReturnStatement	return m_hibernating ;	2312:1:57109:57129	528831	0	True				
ANR	528835	Identifier	m_hibernating		528831	0					
ANR	528836	ReturnType	bool		528831	1					
ANR	528837	Identifier	ResMgr :: hibernating		528831	2					
ANR	528838	ParameterList			528831	3					
ANR	528839	CFGEntryNode	ENTRY		528831		True				
ANR	528840	CFGExitNode	EXIT		528831		True				
ANR	528841	Symbol	m_hibernating		528831						
ANR	528842	Function	ResMgr :: check_use	2318:0:57166:57750							
ANR	528843	FunctionDef	ResMgr :: check_use ()		528842	0					
ANR	528844	CompoundStatement		2320:0:57197:57750	528842	0					
ANR	528845	IdentifierDeclStatement	int current_time = time ( NULL ) ;	2321:1:57200:57229	528842	0	True				
ANR	528846	IdentifierDecl	current_time = time ( NULL )		528842	0					
ANR	528847	IdentifierDeclType	int		528842	0					
ANR	528848	Identifier	current_time		528842	1					
ANR	528849	AssignmentExpression	current_time = time ( NULL )		528842	2		=			
ANR	528850	Identifier	current_time		528842	0					
ANR	528851	CallExpression	time ( NULL )		528842	1					
ANR	528852	Callee	time		528842	0					
ANR	528853	Identifier	time		528842	0					
ANR	528854	ArgumentList	NULL		528842	1					
ANR	528855	Argument	NULL		528842	0					
ANR	528856	Identifier	NULL		528842	0					
ANR	528857	IfStatement	if ( hasAnyClaim ( ) )		528842	1					
ANR	528858	Condition	hasAnyClaim ( )	2322:5:57236:57248	528842	0	True				
ANR	528859	CallExpression	hasAnyClaim ( )		528842	0					
ANR	528860	Callee	hasAnyClaim		528842	0					
ANR	528861	Identifier	hasAnyClaim		528842	0					
ANR	528862	ArgumentList			528842	1					
ANR	528863	CompoundStatement		3:21:54:54	528842	1					
ANR	528864	ExpressionStatement	last_in_use = current_time	2323:2:57256:57282	528842	0	True				
ANR	528865	AssignmentExpression	last_in_use = current_time		528842	0		=			
ANR	528866	Identifier	last_in_use		528842	0					
ANR	528867	Identifier	current_time		528842	1					
ANR	528868	IfStatement	if ( ! startd_noclaim_shutdown )		528842	2					
ANR	528869	Condition	! startd_noclaim_shutdown	2325:5:57292:57316	528842	0	True				
ANR	528870	UnaryOperationExpression	! startd_noclaim_shutdown		528842	0					
ANR	528871	UnaryOperator	!		528842	0					
ANR	528872	Identifier	startd_noclaim_shutdown		528842	1					
ANR	528873	CompoundStatement		6:33:122:122	528842	1					
ANR	528874	ReturnStatement	return ;	2327:2:57345:57351	528842	0	True				
ANR	528875	IfStatement	if ( current_time - last_in_use > startd_noclaim_shutdown )		528842	3					
ANR	528876	Condition	current_time - last_in_use > startd_noclaim_shutdown	2329:5:57361:57412	528842	0	True				
ANR	528877	RelationalExpression	current_time - last_in_use > startd_noclaim_shutdown		528842	0		>			
ANR	528878	AdditiveExpression	current_time - last_in_use		528842	0		-			
ANR	528879	Identifier	current_time		528842	0					
ANR	528880	Identifier	last_in_use		528842	1					
ANR	528881	Identifier	startd_noclaim_shutdown		528842	1					
ANR	528882	CompoundStatement		10:60:218:218	528842	1					
ANR	528883	ExpressionStatement	"dprintf ( D_ALWAYS , ""No resources have been claimed for %d seconds\\n"" , startd_noclaim_shutdown )"	2332:2:57513:57618	528842	0	True				
ANR	528884	CallExpression	"dprintf ( D_ALWAYS , ""No resources have been claimed for %d seconds\\n"" , startd_noclaim_shutdown )"		528842	0					
ANR	528885	Callee	dprintf		528842	0					
ANR	528886	Identifier	dprintf		528842	0					
ANR	528887	ArgumentList	D_ALWAYS		528842	1					
ANR	528888	Argument	D_ALWAYS		528842	0					
ANR	528889	Identifier	D_ALWAYS		528842	0					
ANR	528890	Argument	"""No resources have been claimed for %d seconds\\n"""		528842	1					
ANR	528891	PrimaryExpression	"""No resources have been claimed for %d seconds\\n"""		528842	0					
ANR	528892	Argument	startd_noclaim_shutdown		528842	2					
ANR	528893	Identifier	startd_noclaim_shutdown		528842	0					
ANR	528894	ExpressionStatement	"dprintf ( D_ALWAYS , ""Shutting down Condor on this machine.\\n"" )"	2335:2:57622:57684	528842	1	True				
ANR	528895	CallExpression	"dprintf ( D_ALWAYS , ""Shutting down Condor on this machine.\\n"" )"		528842	0					
ANR	528896	Callee	dprintf		528842	0					
ANR	528897	Identifier	dprintf		528842	0					
ANR	528898	ArgumentList	D_ALWAYS		528842	1					
ANR	528899	Argument	D_ALWAYS		528842	0					
ANR	528900	Identifier	D_ALWAYS		528842	0					
ANR	528901	Argument	"""Shutting down Condor on this machine.\\n"""		528842	1					
ANR	528902	PrimaryExpression	"""Shutting down Condor on this machine.\\n"""		528842	0					
ANR	528903	ExpressionStatement	"daemonCore -> Send_Signal ( daemonCore -> getppid ( ) , SIGTERM )"	2336:2:57688:57745	528842	2	True				
ANR	528904	CallExpression	"daemonCore -> Send_Signal ( daemonCore -> getppid ( ) , SIGTERM )"		528842	0					
ANR	528905	Callee	daemonCore -> Send_Signal		528842	0					
ANR	528906	PtrMemberAccess	daemonCore -> Send_Signal		528842	0					
ANR	528907	Identifier	daemonCore		528842	0					
ANR	528908	Identifier	Send_Signal		528842	1					
ANR	528909	ArgumentList	daemonCore -> getppid ( )		528842	1					
ANR	528910	Argument	daemonCore -> getppid ( )		528842	0					
ANR	528911	CallExpression	daemonCore -> getppid ( )		528842	0					
ANR	528912	Callee	daemonCore -> getppid		528842	0					
ANR	528913	PtrMemberAccess	daemonCore -> getppid		528842	0					
ANR	528914	Identifier	daemonCore		528842	0					
ANR	528915	Identifier	getppid		528842	1					
ANR	528916	ArgumentList			528842	1					
ANR	528917	Argument	SIGTERM		528842	1					
ANR	528918	Identifier	SIGTERM		528842	0					
ANR	528919	ReturnType	void		528842	1					
ANR	528920	Identifier	ResMgr :: check_use		528842	2					
ANR	528921	ParameterList			528842	3					
ANR	528922	CFGEntryNode	ENTRY		528842		True				
ANR	528923	CFGExitNode	EXIT		528842		True				
ANR	528924	Symbol	daemonCore -> getppid		528842						
ANR	528925	Symbol	NULL		528842						
ANR	528926	Symbol	* daemonCore		528842						
ANR	528927	Symbol	daemonCore		528842						
ANR	528928	Symbol	D_ALWAYS		528842						
ANR	528929	Symbol	time		528842						
ANR	528930	Symbol	hasAnyClaim		528842						
ANR	528931	Symbol	last_in_use		528842						
ANR	528932	Symbol	startd_noclaim_shutdown		528842						
ANR	528933	Symbol	SIGTERM		528842						
ANR	528934	Symbol	current_time		528842						
ANR	528935	Function	ownerStateCmp	2341:0:57754:58595							
ANR	528936	FunctionDef	"ownerStateCmp (const void * a , const void * b)"		528935	0					
ANR	528937	CompoundStatement		2343:0:57804:58595	528935	0					
ANR	528938	IdentifierDeclStatement	"Resource * rip1 , * rip2 ;"	2344:1:57807:57828	528935	0	True				
ANR	528939	IdentifierDecl	* rip1		528935	0					
ANR	528940	IdentifierDeclType	Resource *		528935	0					
ANR	528941	Identifier	rip1		528935	1					
ANR	528942	IdentifierDecl	* rip2		528935	1					
ANR	528943	IdentifierDeclType	Resource *		528935	0					
ANR	528944	Identifier	rip2		528935	1					
ANR	528945	IdentifierDeclStatement	"int val1 , val2 , diff ;"	2345:1:57831:57851	528935	1	True				
ANR	528946	IdentifierDecl	val1		528935	0					
ANR	528947	IdentifierDeclType	int		528935	0					
ANR	528948	Identifier	val1		528935	1					
ANR	528949	IdentifierDecl	val2		528935	1					
ANR	528950	IdentifierDeclType	int		528935	0					
ANR	528951	Identifier	val2		528935	1					
ANR	528952	IdentifierDecl	diff		528935	2					
ANR	528953	IdentifierDeclType	int		528935	0					
ANR	528954	Identifier	diff		528935	1					
ANR	528955	IdentifierDeclStatement	"float fval1 , fval2 ;"	2346:1:57854:57872	528935	2	True				
ANR	528956	IdentifierDecl	fval1		528935	0					
ANR	528957	IdentifierDeclType	float		528935	0					
ANR	528958	Identifier	fval1		528935	1					
ANR	528959	IdentifierDecl	fval2		528935	1					
ANR	528960	IdentifierDeclType	float		528935	0					
ANR	528961	Identifier	fval2		528935	1					
ANR	528962	IdentifierDeclStatement	State s ;	2347:1:57875:57882	528935	3	True				
ANR	528963	IdentifierDecl	s		528935	0					
ANR	528964	IdentifierDeclType	State		528935	0					
ANR	528965	Identifier	s		528935	1					
ANR	528966	ExpressionStatement	rip1 = * ( ( Resource * * ) a )	2348:1:57885:57908	528935	4	True				
ANR	528967	AssignmentExpression	rip1 = * ( ( Resource * * ) a )		528935	0		=			
ANR	528968	Identifier	rip1		528935	0					
ANR	528969	UnaryOperationExpression	* ( ( Resource * * ) a )		528935	1					
ANR	528970	UnaryOperator	*		528935	0					
ANR	528971	CastExpression	( Resource * * ) a		528935	1					
ANR	528972	CastTarget	Resource * *		528935	0					
ANR	528973	Identifier	a		528935	1					
ANR	528974	ExpressionStatement	rip2 = * ( ( Resource * * ) b )	2349:1:57911:57934	528935	5	True				
ANR	528975	AssignmentExpression	rip2 = * ( ( Resource * * ) b )		528935	0		=			
ANR	528976	Identifier	rip2		528935	0					
ANR	528977	UnaryOperationExpression	* ( ( Resource * * ) b )		528935	1					
ANR	528978	UnaryOperator	*		528935	0					
ANR	528979	CastExpression	( Resource * * ) b		528935	1					
ANR	528980	CastTarget	Resource * *		528935	0					
ANR	528981	Identifier	b		528935	1					
ANR	528982	ExpressionStatement	s = rip1 -> state ( )	2353:1:58118:58135	528935	6	True				
ANR	528983	AssignmentExpression	s = rip1 -> state ( )		528935	0		=			
ANR	528984	Identifier	s		528935	0					
ANR	528985	CallExpression	rip1 -> state ( )		528935	1					
ANR	528986	Callee	rip1 -> state		528935	0					
ANR	528987	PtrMemberAccess	rip1 -> state		528935	0					
ANR	528988	Identifier	rip1		528935	0					
ANR	528989	Identifier	state		528935	1					
ANR	528990	ArgumentList			528935	1					
ANR	528991	ExpressionStatement	val1 = ( int ) s	2354:1:58138:58151	528935	7	True				
ANR	528992	AssignmentExpression	val1 = ( int ) s		528935	0		=			
ANR	528993	Identifier	val1		528935	0					
ANR	528994	CastExpression	( int ) s		528935	1					
ANR	528995	CastTarget	int		528935	0					
ANR	528996	Identifier	s		528935	1					
ANR	528997	ExpressionStatement	val2 = ( int ) rip2 -> state ( )	2355:1:58154:58179	528935	8	True				
ANR	528998	AssignmentExpression	val2 = ( int ) rip2 -> state ( )		528935	0		=			
ANR	528999	Identifier	val2		528935	0					
ANR	529000	CastExpression	( int ) rip2 -> state ( )		528935	1					
ANR	529001	CastTarget	int		528935	0					
ANR	529002	CallExpression	rip2 -> state ( )		528935	1					
ANR	529003	Callee	rip2 -> state		528935	0					
ANR	529004	PtrMemberAccess	rip2 -> state		528935	0					
ANR	529005	Identifier	rip2		528935	0					
ANR	529006	Identifier	state		528935	1					
ANR	529007	ArgumentList			528935	1					
ANR	529008	ExpressionStatement	diff = val1 - val2	2356:1:58182:58200	528935	9	True				
ANR	529009	AssignmentExpression	diff = val1 - val2		528935	0		=			
ANR	529010	Identifier	diff		528935	0					
ANR	529011	AdditiveExpression	val1 - val2		528935	1		-			
ANR	529012	Identifier	val1		528935	0					
ANR	529013	Identifier	val2		528935	1					
ANR	529014	IfStatement	if ( diff )		528935	10					
ANR	529015	Condition	diff	2357:5:58207:58210	528935	0	True				
ANR	529016	Identifier	diff		528935	0					
ANR	529017	CompoundStatement		15:12:409:409	528935	1					
ANR	529018	ReturnStatement	return diff ;	2358:2:58218:58229	528935	0	True				
ANR	529019	Identifier	diff		528935	0					
ANR	529020	IfStatement	if ( s == claimed_state || s == preempting_state )		528935	11					
ANR	529021	Condition	s == claimed_state || s == preempting_state	2363:5:58425:58467	528935	0	True				
ANR	529022	OrExpression	s == claimed_state || s == preempting_state		528935	0		||			
ANR	529023	EqualityExpression	s == claimed_state		528935	0		==			
ANR	529024	Identifier	s		528935	0					
ANR	529025	Identifier	claimed_state		528935	1					
ANR	529026	EqualityExpression	s == preempting_state		528935	1		==			
ANR	529027	Identifier	s		528935	0					
ANR	529028	Identifier	preempting_state		528935	1					
ANR	529029	CompoundStatement		21:51:666:666	528935	1					
ANR	529030	ExpressionStatement	fval1 = rip1 -> r_cur -> rank ( )	2364:2:58475:58502	528935	0	True				
ANR	529031	AssignmentExpression	fval1 = rip1 -> r_cur -> rank ( )		528935	0		=			
ANR	529032	Identifier	fval1		528935	0					
ANR	529033	CallExpression	rip1 -> r_cur -> rank ( )		528935	1					
ANR	529034	Callee	rip1 -> r_cur -> rank		528935	0					
ANR	529035	PtrMemberAccess	rip1 -> r_cur -> rank		528935	0					
ANR	529036	PtrMemberAccess	rip1 -> r_cur		528935	0					
ANR	529037	Identifier	rip1		528935	0					
ANR	529038	Identifier	r_cur		528935	1					
ANR	529039	Identifier	rank		528935	1					
ANR	529040	ArgumentList			528935	1					
ANR	529041	ExpressionStatement	fval2 = rip2 -> r_cur -> rank ( )	2365:2:58506:58533	528935	1	True				
ANR	529042	AssignmentExpression	fval2 = rip2 -> r_cur -> rank ( )		528935	0		=			
ANR	529043	Identifier	fval2		528935	0					
ANR	529044	CallExpression	rip2 -> r_cur -> rank ( )		528935	1					
ANR	529045	Callee	rip2 -> r_cur -> rank		528935	0					
ANR	529046	PtrMemberAccess	rip2 -> r_cur -> rank		528935	0					
ANR	529047	PtrMemberAccess	rip2 -> r_cur		528935	0					
ANR	529048	Identifier	rip2		528935	0					
ANR	529049	Identifier	r_cur		528935	1					
ANR	529050	Identifier	rank		528935	1					
ANR	529051	ArgumentList			528935	1					
ANR	529052	ExpressionStatement	diff = ( int ) ( fval1 - fval2 )	2366:2:58537:58564	528935	2	True				
ANR	529053	AssignmentExpression	diff = ( int ) ( fval1 - fval2 )		528935	0		=			
ANR	529054	Identifier	diff		528935	0					
ANR	529055	CastExpression	( int ) ( fval1 - fval2 )		528935	1					
ANR	529056	CastTarget	int		528935	0					
ANR	529057	AdditiveExpression	fval1 - fval2		528935	1		-			
ANR	529058	Identifier	fval1		528935	0					
ANR	529059	Identifier	fval2		528935	1					
ANR	529060	ReturnStatement	return diff ;	2367:2:58568:58579	528935	3	True				
ANR	529061	Identifier	diff		528935	0					
ANR	529062	ReturnStatement	return 0 ;	2369:1:58585:58593	528935	12	True				
ANR	529063	PrimaryExpression	0		528935	0					
ANR	529064	ReturnType	int		528935	1					
ANR	529065	Identifier	ownerStateCmp		528935	2					
ANR	529066	ParameterList	"const void * a , const void * b"		528935	3					
ANR	529067	Parameter	const void * a	2342:15:57773:57785	528935	0	True				
ANR	529068	ParameterType	const void *		528935	0					
ANR	529069	Identifier	a		528935	1					
ANR	529070	Parameter	const void * b	2342:30:57788:57800	528935	1	True				
ANR	529071	ParameterType	const void *		528935	0					
ANR	529072	Identifier	b		528935	1					
ANR	529073	CFGEntryNode	ENTRY		528935		True				
ANR	529074	CFGExitNode	EXIT		528935		True				
ANR	529075	Symbol	rip2 -> r_cur -> rank		528935						
ANR	529076	Symbol	fval1		528935						
ANR	529077	Symbol	fval2		528935						
ANR	529078	Symbol	rip2 -> r_cur		528935						
ANR	529079	Symbol	val2		528935						
ANR	529080	Symbol	val1		528935						
ANR	529081	Symbol	preempting_state		528935						
ANR	529082	Symbol	* rip1 -> r_cur		528935						
ANR	529083	Symbol	rip2		528935						
ANR	529084	Symbol	* rip2		528935						
ANR	529085	Symbol	rip1		528935						
ANR	529086	Symbol	* rip1		528935						
ANR	529087	Symbol	rip2 -> state		528935						
ANR	529088	Symbol	rip1 -> r_cur -> rank		528935						
ANR	529089	Symbol	rip1 -> state		528935						
ANR	529090	Symbol	claimed_state		528935						
ANR	529091	Symbol	* rip2 -> r_cur		528935						
ANR	529092	Symbol	a		528935						
ANR	529093	Symbol	* ( ( Resource * * ) a )		528935						
ANR	529094	Symbol	b		528935						
ANR	529095	Symbol	* ( ( Resource * * ) b )		528935						
ANR	529096	Symbol	rip1 -> r_cur		528935						
ANR	529097	Symbol	diff		528935						
ANR	529098	Symbol	* a		528935						
ANR	529099	Symbol	* b		528935						
ANR	529100	Symbol	s		528935						
ANR	529101	Symbol	* * rip1		528935						
ANR	529102	Symbol	* * rip2		528935						
ANR	529103	Function	claimedRankCmp	2375:0:58713:59375							
ANR	529104	FunctionDef	"claimedRankCmp (const void * a , const void * b)"		529103	0					
ANR	529105	CompoundStatement		2377:0:58764:59375	529103	0					
ANR	529106	IdentifierDeclStatement	"Resource * rip1 , * rip2 ;"	2378:1:58767:58788	529103	0	True				
ANR	529107	IdentifierDecl	* rip1		529103	0					
ANR	529108	IdentifierDeclType	Resource *		529103	0					
ANR	529109	Identifier	rip1		529103	1					
ANR	529110	IdentifierDecl	* rip2		529103	1					
ANR	529111	IdentifierDeclType	Resource *		529103	0					
ANR	529112	Identifier	rip2		529103	1					
ANR	529113	IdentifierDeclStatement	"int val1 , val2 , diff ;"	2379:1:58791:58811	529103	1	True				
ANR	529114	IdentifierDecl	val1		529103	0					
ANR	529115	IdentifierDeclType	int		529103	0					
ANR	529116	Identifier	val1		529103	1					
ANR	529117	IdentifierDecl	val2		529103	1					
ANR	529118	IdentifierDeclType	int		529103	0					
ANR	529119	Identifier	val2		529103	1					
ANR	529120	IdentifierDecl	diff		529103	2					
ANR	529121	IdentifierDeclType	int		529103	0					
ANR	529122	Identifier	diff		529103	1					
ANR	529123	IdentifierDeclStatement	"float fval1 , fval2 ;"	2380:1:58814:58832	529103	2	True				
ANR	529124	IdentifierDecl	fval1		529103	0					
ANR	529125	IdentifierDeclType	float		529103	0					
ANR	529126	Identifier	fval1		529103	1					
ANR	529127	IdentifierDecl	fval2		529103	1					
ANR	529128	IdentifierDeclType	float		529103	0					
ANR	529129	Identifier	fval2		529103	1					
ANR	529130	IdentifierDeclStatement	State s ;	2381:1:58835:58842	529103	3	True				
ANR	529131	IdentifierDecl	s		529103	0					
ANR	529132	IdentifierDeclType	State		529103	0					
ANR	529133	Identifier	s		529103	1					
ANR	529134	ExpressionStatement	rip1 = * ( ( Resource * * ) a )	2382:1:58845:58868	529103	4	True				
ANR	529135	AssignmentExpression	rip1 = * ( ( Resource * * ) a )		529103	0		=			
ANR	529136	Identifier	rip1		529103	0					
ANR	529137	UnaryOperationExpression	* ( ( Resource * * ) a )		529103	1					
ANR	529138	UnaryOperator	*		529103	0					
ANR	529139	CastExpression	( Resource * * ) a		529103	1					
ANR	529140	CastTarget	Resource * *		529103	0					
ANR	529141	Identifier	a		529103	1					
ANR	529142	ExpressionStatement	rip2 = * ( ( Resource * * ) b )	2383:1:58871:58894	529103	5	True				
ANR	529143	AssignmentExpression	rip2 = * ( ( Resource * * ) b )		529103	0		=			
ANR	529144	Identifier	rip2		529103	0					
ANR	529145	UnaryOperationExpression	* ( ( Resource * * ) b )		529103	1					
ANR	529146	UnaryOperator	*		529103	0					
ANR	529147	CastExpression	( Resource * * ) b		529103	1					
ANR	529148	CastTarget	Resource * *		529103	0					
ANR	529149	Identifier	b		529103	1					
ANR	529150	ExpressionStatement	s = rip1 -> state ( )	2385:1:58898:58915	529103	6	True				
ANR	529151	AssignmentExpression	s = rip1 -> state ( )		529103	0		=			
ANR	529152	Identifier	s		529103	0					
ANR	529153	CallExpression	rip1 -> state ( )		529103	1					
ANR	529154	Callee	rip1 -> state		529103	0					
ANR	529155	PtrMemberAccess	rip1 -> state		529103	0					
ANR	529156	Identifier	rip1		529103	0					
ANR	529157	Identifier	state		529103	1					
ANR	529158	ArgumentList			529103	1					
ANR	529159	ExpressionStatement	val1 = ( int ) s	2386:1:58918:58931	529103	7	True				
ANR	529160	AssignmentExpression	val1 = ( int ) s		529103	0		=			
ANR	529161	Identifier	val1		529103	0					
ANR	529162	CastExpression	( int ) s		529103	1					
ANR	529163	CastTarget	int		529103	0					
ANR	529164	Identifier	s		529103	1					
ANR	529165	ExpressionStatement	val2 = ( int ) rip2 -> state ( )	2387:1:58934:58959	529103	8	True				
ANR	529166	AssignmentExpression	val2 = ( int ) rip2 -> state ( )		529103	0		=			
ANR	529167	Identifier	val2		529103	0					
ANR	529168	CastExpression	( int ) rip2 -> state ( )		529103	1					
ANR	529169	CastTarget	int		529103	0					
ANR	529170	CallExpression	rip2 -> state ( )		529103	1					
ANR	529171	Callee	rip2 -> state		529103	0					
ANR	529172	PtrMemberAccess	rip2 -> state		529103	0					
ANR	529173	Identifier	rip2		529103	0					
ANR	529174	Identifier	state		529103	1					
ANR	529175	ArgumentList			529103	1					
ANR	529176	ExpressionStatement	diff = val2 - val1	2388:1:58962:58980	529103	9	True				
ANR	529177	AssignmentExpression	diff = val2 - val1		529103	0		=			
ANR	529178	Identifier	diff		529103	0					
ANR	529179	AdditiveExpression	val2 - val1		529103	1		-			
ANR	529180	Identifier	val2		529103	0					
ANR	529181	Identifier	val1		529103	1					
ANR	529182	IfStatement	if ( diff )		529103	10					
ANR	529183	Condition	diff	2389:5:58987:58990	529103	0	True				
ANR	529184	Identifier	diff		529103	0					
ANR	529185	CompoundStatement		13:12:229:229	529103	1					
ANR	529186	ReturnStatement	return diff ;	2390:2:58998:59009	529103	0	True				
ANR	529187	Identifier	diff		529103	0					
ANR	529188	IfStatement	if ( s == claimed_state || s == preempting_state )		529103	11					
ANR	529189	Condition	s == claimed_state || s == preempting_state	2395:5:59205:59247	529103	0	True				
ANR	529190	OrExpression	s == claimed_state || s == preempting_state		529103	0		||			
ANR	529191	EqualityExpression	s == claimed_state		529103	0		==			
ANR	529192	Identifier	s		529103	0					
ANR	529193	Identifier	claimed_state		529103	1					
ANR	529194	EqualityExpression	s == preempting_state		529103	1		==			
ANR	529195	Identifier	s		529103	0					
ANR	529196	Identifier	preempting_state		529103	1					
ANR	529197	CompoundStatement		19:51:486:486	529103	1					
ANR	529198	ExpressionStatement	fval1 = rip1 -> r_cur -> rank ( )	2396:2:59255:59282	529103	0	True				
ANR	529199	AssignmentExpression	fval1 = rip1 -> r_cur -> rank ( )		529103	0		=			
ANR	529200	Identifier	fval1		529103	0					
ANR	529201	CallExpression	rip1 -> r_cur -> rank ( )		529103	1					
ANR	529202	Callee	rip1 -> r_cur -> rank		529103	0					
ANR	529203	PtrMemberAccess	rip1 -> r_cur -> rank		529103	0					
ANR	529204	PtrMemberAccess	rip1 -> r_cur		529103	0					
ANR	529205	Identifier	rip1		529103	0					
ANR	529206	Identifier	r_cur		529103	1					
ANR	529207	Identifier	rank		529103	1					
ANR	529208	ArgumentList			529103	1					
ANR	529209	ExpressionStatement	fval2 = rip2 -> r_cur -> rank ( )	2397:2:59286:59313	529103	1	True				
ANR	529210	AssignmentExpression	fval2 = rip2 -> r_cur -> rank ( )		529103	0		=			
ANR	529211	Identifier	fval2		529103	0					
ANR	529212	CallExpression	rip2 -> r_cur -> rank ( )		529103	1					
ANR	529213	Callee	rip2 -> r_cur -> rank		529103	0					
ANR	529214	PtrMemberAccess	rip2 -> r_cur -> rank		529103	0					
ANR	529215	PtrMemberAccess	rip2 -> r_cur		529103	0					
ANR	529216	Identifier	rip2		529103	0					
ANR	529217	Identifier	r_cur		529103	1					
ANR	529218	Identifier	rank		529103	1					
ANR	529219	ArgumentList			529103	1					
ANR	529220	ExpressionStatement	diff = ( int ) ( fval2 - fval1 )	2398:2:59317:59344	529103	2	True				
ANR	529221	AssignmentExpression	diff = ( int ) ( fval2 - fval1 )		529103	0		=			
ANR	529222	Identifier	diff		529103	0					
ANR	529223	CastExpression	( int ) ( fval2 - fval1 )		529103	1					
ANR	529224	CastTarget	int		529103	0					
ANR	529225	AdditiveExpression	fval2 - fval1		529103	1		-			
ANR	529226	Identifier	fval2		529103	0					
ANR	529227	Identifier	fval1		529103	1					
ANR	529228	ReturnStatement	return diff ;	2399:2:59348:59359	529103	3	True				
ANR	529229	Identifier	diff		529103	0					
ANR	529230	ReturnStatement	return 0 ;	2401:1:59365:59373	529103	12	True				
ANR	529231	PrimaryExpression	0		529103	0					
ANR	529232	ReturnType	int		529103	1					
ANR	529233	Identifier	claimedRankCmp		529103	2					
ANR	529234	ParameterList	"const void * a , const void * b"		529103	3					
ANR	529235	Parameter	const void * a	2376:16:58733:58745	529103	0	True				
ANR	529236	ParameterType	const void *		529103	0					
ANR	529237	Identifier	a		529103	1					
ANR	529238	Parameter	const void * b	2376:31:58748:58760	529103	1	True				
ANR	529239	ParameterType	const void *		529103	0					
ANR	529240	Identifier	b		529103	1					
ANR	529241	CFGEntryNode	ENTRY		529103		True				
ANR	529242	CFGExitNode	EXIT		529103		True				
ANR	529243	Symbol	rip2 -> r_cur -> rank		529103						
ANR	529244	Symbol	fval1		529103						
ANR	529245	Symbol	fval2		529103						
ANR	529246	Symbol	rip2 -> r_cur		529103						
ANR	529247	Symbol	val2		529103						
ANR	529248	Symbol	val1		529103						
ANR	529249	Symbol	preempting_state		529103						
ANR	529250	Symbol	* rip1 -> r_cur		529103						
ANR	529251	Symbol	rip2		529103						
ANR	529252	Symbol	* rip2		529103						
ANR	529253	Symbol	rip1		529103						
ANR	529254	Symbol	* rip1		529103						
ANR	529255	Symbol	rip2 -> state		529103						
ANR	529256	Symbol	rip1 -> r_cur -> rank		529103						
ANR	529257	Symbol	rip1 -> state		529103						
ANR	529258	Symbol	claimed_state		529103						
ANR	529259	Symbol	* rip2 -> r_cur		529103						
ANR	529260	Symbol	a		529103						
ANR	529261	Symbol	* ( ( Resource * * ) a )		529103						
ANR	529262	Symbol	b		529103						
ANR	529263	Symbol	* ( ( Resource * * ) b )		529103						
ANR	529264	Symbol	rip1 -> r_cur		529103						
ANR	529265	Symbol	diff		529103						
ANR	529266	Symbol	* a		529103						
ANR	529267	Symbol	* b		529103						
ANR	529268	Symbol	s		529103						
ANR	529269	Symbol	* * rip1		529103						
ANR	529270	Symbol	* * rip2		529103						
ANR	529271	Function	newCODClaimCmp	2415:0:59805:60996							
ANR	529272	FunctionDef	"newCODClaimCmp (const void * a , const void * b)"		529271	0					
ANR	529273	CompoundStatement		2417:0:59856:60996	529271	0					
ANR	529274	IdentifierDeclStatement	"Resource * rip1 , * rip2 ;"	2418:1:59859:59880	529271	0	True				
ANR	529275	IdentifierDecl	* rip1		529271	0					
ANR	529276	IdentifierDeclType	Resource *		529271	0					
ANR	529277	Identifier	rip1		529271	1					
ANR	529278	IdentifierDecl	* rip2		529271	1					
ANR	529279	IdentifierDeclType	Resource *		529271	0					
ANR	529280	Identifier	rip2		529271	1					
ANR	529281	IdentifierDeclStatement	"int val1 , val2 , diff ;"	2419:1:59883:59903	529271	1	True				
ANR	529282	IdentifierDecl	val1		529271	0					
ANR	529283	IdentifierDeclType	int		529271	0					
ANR	529284	Identifier	val1		529271	1					
ANR	529285	IdentifierDecl	val2		529271	1					
ANR	529286	IdentifierDeclType	int		529271	0					
ANR	529287	Identifier	val2		529271	1					
ANR	529288	IdentifierDecl	diff		529271	2					
ANR	529289	IdentifierDeclType	int		529271	0					
ANR	529290	Identifier	diff		529271	1					
ANR	529291	IdentifierDeclStatement	"int numCOD1 , numCOD2 ;"	2420:1:59906:59926	529271	2	True				
ANR	529292	IdentifierDecl	numCOD1		529271	0					
ANR	529293	IdentifierDeclType	int		529271	0					
ANR	529294	Identifier	numCOD1		529271	1					
ANR	529295	IdentifierDecl	numCOD2		529271	1					
ANR	529296	IdentifierDeclType	int		529271	0					
ANR	529297	Identifier	numCOD2		529271	1					
ANR	529298	IdentifierDeclStatement	"float fval1 , fval2 ;"	2421:1:59929:59947	529271	3	True				
ANR	529299	IdentifierDecl	fval1		529271	0					
ANR	529300	IdentifierDeclType	float		529271	0					
ANR	529301	Identifier	fval1		529271	1					
ANR	529302	IdentifierDecl	fval2		529271	1					
ANR	529303	IdentifierDeclType	float		529271	0					
ANR	529304	Identifier	fval2		529271	1					
ANR	529305	IdentifierDeclStatement	State s ;	2422:1:59950:59957	529271	4	True				
ANR	529306	IdentifierDecl	s		529271	0					
ANR	529307	IdentifierDeclType	State		529271	0					
ANR	529308	Identifier	s		529271	1					
ANR	529309	ExpressionStatement	rip1 = * ( ( Resource * * ) a )	2423:1:59960:59983	529271	5	True				
ANR	529310	AssignmentExpression	rip1 = * ( ( Resource * * ) a )		529271	0		=			
ANR	529311	Identifier	rip1		529271	0					
ANR	529312	UnaryOperationExpression	* ( ( Resource * * ) a )		529271	1					
ANR	529313	UnaryOperator	*		529271	0					
ANR	529314	CastExpression	( Resource * * ) a		529271	1					
ANR	529315	CastTarget	Resource * *		529271	0					
ANR	529316	Identifier	a		529271	1					
ANR	529317	ExpressionStatement	rip2 = * ( ( Resource * * ) b )	2424:1:59986:60009	529271	6	True				
ANR	529318	AssignmentExpression	rip2 = * ( ( Resource * * ) b )		529271	0		=			
ANR	529319	Identifier	rip2		529271	0					
ANR	529320	UnaryOperationExpression	* ( ( Resource * * ) b )		529271	1					
ANR	529321	UnaryOperator	*		529271	0					
ANR	529322	CastExpression	( Resource * * ) b		529271	1					
ANR	529323	CastTarget	Resource * *		529271	0					
ANR	529324	Identifier	b		529271	1					
ANR	529325	ExpressionStatement	numCOD1 = rip1 -> r_cod_mgr -> numClaims ( )	2426:1:60013:60051	529271	7	True				
ANR	529326	AssignmentExpression	numCOD1 = rip1 -> r_cod_mgr -> numClaims ( )		529271	0		=			
ANR	529327	Identifier	numCOD1		529271	0					
ANR	529328	CallExpression	rip1 -> r_cod_mgr -> numClaims ( )		529271	1					
ANR	529329	Callee	rip1 -> r_cod_mgr -> numClaims		529271	0					
ANR	529330	PtrMemberAccess	rip1 -> r_cod_mgr -> numClaims		529271	0					
ANR	529331	PtrMemberAccess	rip1 -> r_cod_mgr		529271	0					
ANR	529332	Identifier	rip1		529271	0					
ANR	529333	Identifier	r_cod_mgr		529271	1					
ANR	529334	Identifier	numClaims		529271	1					
ANR	529335	ArgumentList			529271	1					
ANR	529336	ExpressionStatement	numCOD2 = rip2 -> r_cod_mgr -> numClaims ( )	2427:1:60054:60092	529271	8	True				
ANR	529337	AssignmentExpression	numCOD2 = rip2 -> r_cod_mgr -> numClaims ( )		529271	0		=			
ANR	529338	Identifier	numCOD2		529271	0					
ANR	529339	CallExpression	rip2 -> r_cod_mgr -> numClaims ( )		529271	1					
ANR	529340	Callee	rip2 -> r_cod_mgr -> numClaims		529271	0					
ANR	529341	PtrMemberAccess	rip2 -> r_cod_mgr -> numClaims		529271	0					
ANR	529342	PtrMemberAccess	rip2 -> r_cod_mgr		529271	0					
ANR	529343	Identifier	rip2		529271	0					
ANR	529344	Identifier	r_cod_mgr		529271	1					
ANR	529345	Identifier	numClaims		529271	1					
ANR	529346	ArgumentList			529271	1					
ANR	529347	ExpressionStatement	diff = numCOD1 - numCOD2	2430:1:60150:60174	529271	9	True				
ANR	529348	AssignmentExpression	diff = numCOD1 - numCOD2		529271	0		=			
ANR	529349	Identifier	diff		529271	0					
ANR	529350	AdditiveExpression	numCOD1 - numCOD2		529271	1		-			
ANR	529351	Identifier	numCOD1		529271	0					
ANR	529352	Identifier	numCOD2		529271	1					
ANR	529353	IfStatement	if ( diff )		529271	10					
ANR	529354	Condition	diff	2431:5:60181:60184	529271	0	True				
ANR	529355	Identifier	diff		529271	0					
ANR	529356	CompoundStatement		15:12:331:331	529271	1					
ANR	529357	ReturnStatement	return diff ;	2432:2:60192:60203	529271	0	True				
ANR	529358	Identifier	diff		529271	0					
ANR	529359	ExpressionStatement	s = rip1 -> state ( )	2440:1:60479:60496	529271	11	True				
ANR	529360	AssignmentExpression	s = rip1 -> state ( )		529271	0		=			
ANR	529361	Identifier	s		529271	0					
ANR	529362	CallExpression	rip1 -> state ( )		529271	1					
ANR	529363	Callee	rip1 -> state		529271	0					
ANR	529364	PtrMemberAccess	rip1 -> state		529271	0					
ANR	529365	Identifier	rip1		529271	0					
ANR	529366	Identifier	state		529271	1					
ANR	529367	ArgumentList			529271	1					
ANR	529368	ExpressionStatement	val1 = ( int ) s	2441:1:60499:60512	529271	12	True				
ANR	529369	AssignmentExpression	val1 = ( int ) s		529271	0		=			
ANR	529370	Identifier	val1		529271	0					
ANR	529371	CastExpression	( int ) s		529271	1					
ANR	529372	CastTarget	int		529271	0					
ANR	529373	Identifier	s		529271	1					
ANR	529374	ExpressionStatement	val2 = ( int ) rip2 -> state ( )	2442:1:60515:60540	529271	13	True				
ANR	529375	AssignmentExpression	val2 = ( int ) rip2 -> state ( )		529271	0		=			
ANR	529376	Identifier	val2		529271	0					
ANR	529377	CastExpression	( int ) rip2 -> state ( )		529271	1					
ANR	529378	CastTarget	int		529271	0					
ANR	529379	CallExpression	rip2 -> state ( )		529271	1					
ANR	529380	Callee	rip2 -> state		529271	0					
ANR	529381	PtrMemberAccess	rip2 -> state		529271	0					
ANR	529382	Identifier	rip2		529271	0					
ANR	529383	Identifier	state		529271	1					
ANR	529384	ArgumentList			529271	1					
ANR	529385	ExpressionStatement	diff = val1 - val2	2443:1:60543:60561	529271	14	True				
ANR	529386	AssignmentExpression	diff = val1 - val2		529271	0		=			
ANR	529387	Identifier	diff		529271	0					
ANR	529388	AdditiveExpression	val1 - val2		529271	1		-			
ANR	529389	Identifier	val1		529271	0					
ANR	529390	Identifier	val2		529271	1					
ANR	529391	IfStatement	if ( diff )		529271	15					
ANR	529392	Condition	diff	2444:5:60568:60571	529271	0	True				
ANR	529393	Identifier	diff		529271	0					
ANR	529394	CompoundStatement		28:12:718:718	529271	1					
ANR	529395	ReturnStatement	return diff ;	2445:2:60579:60590	529271	0	True				
ANR	529396	Identifier	diff		529271	0					
ANR	529397	IfStatement	if ( s == claimed_state || s == preempting_state )		529271	16					
ANR	529398	Condition	s == claimed_state || s == preempting_state	2452:5:60826:60868	529271	0	True				
ANR	529399	OrExpression	s == claimed_state || s == preempting_state		529271	0		||			
ANR	529400	EqualityExpression	s == claimed_state		529271	0		==			
ANR	529401	Identifier	s		529271	0					
ANR	529402	Identifier	claimed_state		529271	1					
ANR	529403	EqualityExpression	s == preempting_state		529271	1		==			
ANR	529404	Identifier	s		529271	0					
ANR	529405	Identifier	preempting_state		529271	1					
ANR	529406	CompoundStatement		36:51:1015:1015	529271	1					
ANR	529407	ExpressionStatement	fval1 = rip1 -> r_cur -> rank ( )	2453:2:60876:60903	529271	0	True				
ANR	529408	AssignmentExpression	fval1 = rip1 -> r_cur -> rank ( )		529271	0		=			
ANR	529409	Identifier	fval1		529271	0					
ANR	529410	CallExpression	rip1 -> r_cur -> rank ( )		529271	1					
ANR	529411	Callee	rip1 -> r_cur -> rank		529271	0					
ANR	529412	PtrMemberAccess	rip1 -> r_cur -> rank		529271	0					
ANR	529413	PtrMemberAccess	rip1 -> r_cur		529271	0					
ANR	529414	Identifier	rip1		529271	0					
ANR	529415	Identifier	r_cur		529271	1					
ANR	529416	Identifier	rank		529271	1					
ANR	529417	ArgumentList			529271	1					
ANR	529418	ExpressionStatement	fval2 = rip2 -> r_cur -> rank ( )	2454:2:60907:60934	529271	1	True				
ANR	529419	AssignmentExpression	fval2 = rip2 -> r_cur -> rank ( )		529271	0		=			
ANR	529420	Identifier	fval2		529271	0					
ANR	529421	CallExpression	rip2 -> r_cur -> rank ( )		529271	1					
ANR	529422	Callee	rip2 -> r_cur -> rank		529271	0					
ANR	529423	PtrMemberAccess	rip2 -> r_cur -> rank		529271	0					
ANR	529424	PtrMemberAccess	rip2 -> r_cur		529271	0					
ANR	529425	Identifier	rip2		529271	0					
ANR	529426	Identifier	r_cur		529271	1					
ANR	529427	Identifier	rank		529271	1					
ANR	529428	ArgumentList			529271	1					
ANR	529429	ExpressionStatement	diff = ( int ) ( fval1 - fval2 )	2455:2:60938:60965	529271	2	True				
ANR	529430	AssignmentExpression	diff = ( int ) ( fval1 - fval2 )		529271	0		=			
ANR	529431	Identifier	diff		529271	0					
ANR	529432	CastExpression	( int ) ( fval1 - fval2 )		529271	1					
ANR	529433	CastTarget	int		529271	0					
ANR	529434	AdditiveExpression	fval1 - fval2		529271	1		-			
ANR	529435	Identifier	fval1		529271	0					
ANR	529436	Identifier	fval2		529271	1					
ANR	529437	ReturnStatement	return diff ;	2456:2:60969:60980	529271	3	True				
ANR	529438	Identifier	diff		529271	0					
ANR	529439	ReturnStatement	return 0 ;	2458:1:60986:60994	529271	17	True				
ANR	529440	PrimaryExpression	0		529271	0					
ANR	529441	ReturnType	int		529271	1					
ANR	529442	Identifier	newCODClaimCmp		529271	2					
ANR	529443	ParameterList	"const void * a , const void * b"		529271	3					
ANR	529444	Parameter	const void * a	2416:16:59825:59837	529271	0	True				
ANR	529445	ParameterType	const void *		529271	0					
ANR	529446	Identifier	a		529271	1					
ANR	529447	Parameter	const void * b	2416:31:59840:59852	529271	1	True				
ANR	529448	ParameterType	const void *		529271	0					
ANR	529449	Identifier	b		529271	1					
ANR	529450	CFGEntryNode	ENTRY		529271		True				
ANR	529451	CFGExitNode	EXIT		529271		True				
ANR	529452	Symbol	rip2 -> r_cur -> rank		529271						
ANR	529453	Symbol	fval1		529271						
ANR	529454	Symbol	rip2 -> r_cod_mgr		529271						
ANR	529455	Symbol	fval2		529271						
ANR	529456	Symbol	rip2 -> r_cur		529271						
ANR	529457	Symbol	val2		529271						
ANR	529458	Symbol	val1		529271						
ANR	529459	Symbol	preempting_state		529271						
ANR	529460	Symbol	* rip1 -> r_cur		529271						
ANR	529461	Symbol	rip2		529271						
ANR	529462	Symbol	* rip2		529271						
ANR	529463	Symbol	rip1		529271						
ANR	529464	Symbol	* rip1		529271						
ANR	529465	Symbol	rip2 -> state		529271						
ANR	529466	Symbol	rip1 -> r_cur -> rank		529271						
ANR	529467	Symbol	numCOD2		529271						
ANR	529468	Symbol	rip1 -> state		529271						
ANR	529469	Symbol	claimed_state		529271						
ANR	529470	Symbol	* rip2 -> r_cur		529271						
ANR	529471	Symbol	a		529271						
ANR	529472	Symbol	* ( ( Resource * * ) a )		529271						
ANR	529473	Symbol	b		529271						
ANR	529474	Symbol	* ( ( Resource * * ) b )		529271						
ANR	529475	Symbol	* rip2 -> r_cod_mgr		529271						
ANR	529476	Symbol	rip1 -> r_cur		529271						
ANR	529477	Symbol	diff		529271						
ANR	529478	Symbol	numCOD1		529271						
ANR	529479	Symbol	* a		529271						
ANR	529480	Symbol	rip2 -> r_cod_mgr -> numClaims		529271						
ANR	529481	Symbol	* b		529271						
ANR	529482	Symbol	s		529271						
ANR	529483	Symbol	* rip1 -> r_cod_mgr		529271						
ANR	529484	Symbol	* * rip1		529271						
ANR	529485	Symbol	rip1 -> r_cod_mgr -> numClaims		529271						
ANR	529486	Symbol	* * rip2		529271						
ANR	529487	Symbol	rip1 -> r_cod_mgr		529271						
ANR	529488	Function	ResMgr :: FillExecuteDirsList	2462:0:61000:61280							
ANR	529489	FunctionDef	ResMgr :: FillExecuteDirsList (class StringList * list)		529488	0					
ANR	529490	CompoundStatement		2464:0:61059:61280	529488	0					
ANR	529491	ExpressionStatement	ASSERT ( list )	2465:1:61062:61076	529488	0	True				
ANR	529492	CallExpression	ASSERT ( list )		529488	0					
ANR	529493	Callee	ASSERT		529488	0					
ANR	529494	Identifier	ASSERT		529488	0					
ANR	529495	ArgumentList	list		529488	1					
ANR	529496	Argument	list		529488	0					
ANR	529497	Identifier	list		529488	0					
ANR	529498	ForStatement	for ( int i = 0 ; i < nresources ; i ++ )		529488	1					
ANR	529499	ForInit	int i = 0 ;	2466:6:61084:61091	529488	0	True				
ANR	529500	IdentifierDeclStatement	int i = 0 ;		529488	0					
ANR	529501	IdentifierDecl	i = 0		529488	0					
ANR	529502	IdentifierDeclType	int		529488	0					
ANR	529503	Identifier	i		529488	1					
ANR	529504	AssignmentExpression	i = 0		529488	2		=			
ANR	529505	Identifier	i		529488	0					
ANR	529506	PrimaryExpression	0		529488	1					
ANR	529507	Condition	i < nresources	2466:15:61093:61104	529488	1	True				
ANR	529508	RelationalExpression	i < nresources		529488	0		<			
ANR	529509	Identifier	i		529488	0					
ANR	529510	Identifier	nresources		529488	1					
ANR	529511	PostIncDecOperationExpression	i ++	2466:29:61107:61109	529488	2	True				
ANR	529512	Identifier	i		529488	0					
ANR	529513	IncDec	++		529488	1					
ANR	529514	CompoundStatement		3:35:53:53	529488	3					
ANR	529515	IfStatement	if ( resources [ i ] )		529488	0					
ANR	529516	Condition	resources [ i ]	2467:6:61121:61132	529488	0	True				
ANR	529517	ArrayIndexing	resources [ i ]		529488	0					
ANR	529518	Identifier	resources		529488	0					
ANR	529519	Identifier	i		529488	1					
ANR	529520	CompoundStatement		5:3:81:133	529488	1					
ANR	529521	IdentifierDeclStatement	char const * execute_dir = resources [ i ] -> executeDir ( ) ;	2468:3:61141:61193	529488	0	True				
ANR	529522	IdentifierDecl	* execute_dir = resources [ i ] -> executeDir ( )		529488	0					
ANR	529523	IdentifierDeclType	char const *		529488	0					
ANR	529524	Identifier	execute_dir		529488	1					
ANR	529525	AssignmentExpression	* execute_dir = resources [ i ] -> executeDir ( )		529488	2		=			
ANR	529526	Identifier	execute_dir		529488	0					
ANR	529527	CallExpression	resources [ i ] -> executeDir ( )		529488	1					
ANR	529528	Callee	resources [ i ] -> executeDir		529488	0					
ANR	529529	PtrMemberAccess	resources [ i ] -> executeDir		529488	0					
ANR	529530	ArrayIndexing	resources [ i ]		529488	0					
ANR	529531	Identifier	resources		529488	0					
ANR	529532	Identifier	i		529488	1					
ANR	529533	Identifier	executeDir		529488	1					
ANR	529534	ArgumentList			529488	1					
ANR	529535	IfStatement	if ( ! list -> contains ( execute_dir ) )		529488	1					
ANR	529536	Condition	! list -> contains ( execute_dir )	2469:7:61202:61231	529488	0	True				
ANR	529537	UnaryOperationExpression	! list -> contains ( execute_dir )		529488	0					
ANR	529538	UnaryOperator	!		529488	0					
ANR	529539	CallExpression	list -> contains ( execute_dir )		529488	1					
ANR	529540	Callee	list -> contains		529488	0					
ANR	529541	PtrMemberAccess	list -> contains		529488	0					
ANR	529542	Identifier	list		529488	0					
ANR	529543	Identifier	contains		529488	1					
ANR	529544	ArgumentList	execute_dir		529488	1					
ANR	529545	Argument	execute_dir		529488	0					
ANR	529546	Identifier	execute_dir		529488	0					
ANR	529547	CompoundStatement		6:40:175:175	529488	1					
ANR	529548	ExpressionStatement	list -> append ( execute_dir )	2470:4:61241:61266	529488	0	True				
ANR	529549	CallExpression	list -> append ( execute_dir )		529488	0					
ANR	529550	Callee	list -> append		529488	0					
ANR	529551	PtrMemberAccess	list -> append		529488	0					
ANR	529552	Identifier	list		529488	0					
ANR	529553	Identifier	append		529488	1					
ANR	529554	ArgumentList	execute_dir		529488	1					
ANR	529555	Argument	execute_dir		529488	0					
ANR	529556	Identifier	execute_dir		529488	0					
ANR	529557	ReturnType	void		529488	1					
ANR	529558	Identifier	ResMgr :: FillExecuteDirsList		529488	2					
ANR	529559	ParameterList	class StringList * list		529488	3					
ANR	529560	Parameter	class StringList * list	2463:29:61034:61055	529488	0	True				
ANR	529561	ParameterType	class StringList *		529488	0					
ANR	529562	Identifier	list		529488	1					
ANR	529563	CFGEntryNode	ENTRY		529488		True				
ANR	529564	CFGExitNode	EXIT		529488		True				
ANR	529565	Symbol	execute_dir		529488						
ANR	529566	Symbol	* * i		529488						
ANR	529567	Symbol	* i		529488						
ANR	529568	Symbol	* list		529488						
ANR	529569	Symbol	i		529488						
ANR	529570	Symbol	resources		529488						
ANR	529571	Symbol	list -> contains		529488						
ANR	529572	Symbol	* * resources		529488						
ANR	529573	Symbol	resources [ i ] -> executeDir		529488						
ANR	529574	Symbol	list		529488						
ANR	529575	Symbol	nresources		529488						
ANR	529576	Symbol	* resources		529488						
ANR	529577	Function	ResMgr :: startDraining	2476:0:61283:63780							
ANR	529578	FunctionDef	"ResMgr :: startDraining (int how_fast , bool resume_on_completion , ExprTree * check_expr , std :: string & new_request_id , std :: string & error_msg , int & error_code)"		529577	0					
ANR	529579	CompoundStatement		2478:0:61438:63780	529577	0					
ANR	529580	IfStatement	if ( draining )		529577	0					
ANR	529581	Condition	draining	2479:5:61445:61452	529577	0	True				
ANR	529582	Identifier	draining		529577	0					
ANR	529583	CompoundStatement		2:16:17:17	529577	1					
ANR	529584	ExpressionStatement	"new_request_id = """""	2480:2:61460:61479	529577	0	True				
ANR	529585	AssignmentExpression	"new_request_id = """""		529577	0		=			
ANR	529586	Identifier	new_request_id		529577	0					
ANR	529587	PrimaryExpression	""""""		529577	1					
ANR	529588	ExpressionStatement	"error_msg = ""Draining already in progress."""	2481:2:61483:61526	529577	1	True				
ANR	529589	AssignmentExpression	"error_msg = ""Draining already in progress."""		529577	0		=			
ANR	529590	Identifier	error_msg		529577	0					
ANR	529591	PrimaryExpression	"""Draining already in progress."""		529577	1					
ANR	529592	ExpressionStatement	error_code = DRAINING_ALREADY_IN_PROGRESS	2482:2:61530:61571	529577	2	True				
ANR	529593	AssignmentExpression	error_code = DRAINING_ALREADY_IN_PROGRESS		529577	0		=			
ANR	529594	Identifier	error_code		529577	0					
ANR	529595	Identifier	DRAINING_ALREADY_IN_PROGRESS		529577	1					
ANR	529596	ReturnStatement	return false ;	2483:2:61575:61587	529577	3	True				
ANR	529597	Identifier	false		529577	0					
ANR	529598	IfStatement	if ( check_expr )		529577	1					
ANR	529599	Condition	check_expr	2486:5:61598:61607	529577	0	True				
ANR	529600	Identifier	check_expr		529577	0					
ANR	529601	CompoundStatement		9:18:172:172	529577	1					
ANR	529602	ForStatement	for ( int i = 0 ; i < nresources ; i ++ )		529577	0					
ANR	529603	ForInit	int i = 0 ;	2487:7:61620:61629	529577	0	True				
ANR	529604	IdentifierDeclStatement	int i = 0 ;		529577	0					
ANR	529605	IdentifierDecl	i = 0		529577	0					
ANR	529606	IdentifierDeclType	int		529577	0					
ANR	529607	Identifier	i		529577	1					
ANR	529608	AssignmentExpression	i = 0		529577	2		=			
ANR	529609	Identifier	i		529577	0					
ANR	529610	PrimaryExpression	0		529577	1					
ANR	529611	Condition	i < nresources	2487:18:61631:61644	529577	1	True				
ANR	529612	RelationalExpression	i < nresources		529577	0		<			
ANR	529613	Identifier	i		529577	0					
ANR	529614	Identifier	nresources		529577	1					
ANR	529615	PostIncDecOperationExpression	i ++	2487:34:61647:61649	529577	2	True				
ANR	529616	Identifier	i		529577	0					
ANR	529617	IncDec	++		529577	1					
ANR	529618	CompoundStatement		13:3:266:295	529577	3					
ANR	529619	IdentifierDeclStatement	classad :: Value v ;	2488:3:61658:61674	529577	0	True				
ANR	529620	IdentifierDecl	v		529577	0					
ANR	529621	IdentifierDeclType	classad :: Value		529577	0					
ANR	529622	Identifier	v		529577	1					
ANR	529623	IdentifierDeclStatement	bool check_ok = false ;	2489:3:61679:61700	529577	1	True				
ANR	529624	IdentifierDecl	check_ok = false		529577	0					
ANR	529625	IdentifierDeclType	bool		529577	0					
ANR	529626	Identifier	check_ok		529577	1					
ANR	529627	AssignmentExpression	check_ok = false		529577	2		=			
ANR	529628	Identifier	false		529577	0					
ANR	529629	Identifier	false		529577	1					
ANR	529630	IdentifierDeclStatement	classad :: EvalState eval_state ;	2490:3:61705:61734	529577	2	True				
ANR	529631	IdentifierDecl	eval_state		529577	0					
ANR	529632	IdentifierDeclType	classad :: EvalState		529577	0					
ANR	529633	Identifier	eval_state		529577	1					
ANR	529634	ExpressionStatement	eval_state . SetScopes ( resources [ i ] -> r_classad )	2491:3:61739:61786	529577	3	True				
ANR	529635	CallExpression	eval_state . SetScopes ( resources [ i ] -> r_classad )		529577	0					
ANR	529636	Callee	eval_state . SetScopes		529577	0					
ANR	529637	MemberAccess	eval_state . SetScopes		529577	0					
ANR	529638	Identifier	eval_state		529577	0					
ANR	529639	Identifier	SetScopes		529577	1					
ANR	529640	ArgumentList	resources [ i ] -> r_classad		529577	1					
ANR	529641	Argument	resources [ i ] -> r_classad		529577	0					
ANR	529642	PtrMemberAccess	resources [ i ] -> r_classad		529577	0					
ANR	529643	ArrayIndexing	resources [ i ]		529577	0					
ANR	529644	Identifier	resources		529577	0					
ANR	529645	Identifier	i		529577	1					
ANR	529646	Identifier	r_classad		529577	1					
ANR	529647	IfStatement	"if ( ! check_expr -> Evaluate ( eval_state , v ) )"		529577	4					
ANR	529648	Condition	"! check_expr -> Evaluate ( eval_state , v )"	2492:7:61795:61832	529577	0	True				
ANR	529649	UnaryOperationExpression	"! check_expr -> Evaluate ( eval_state , v )"		529577	0					
ANR	529650	UnaryOperator	!		529577	0					
ANR	529651	CallExpression	"check_expr -> Evaluate ( eval_state , v )"		529577	1					
ANR	529652	Callee	check_expr -> Evaluate		529577	0					
ANR	529653	PtrMemberAccess	check_expr -> Evaluate		529577	0					
ANR	529654	Identifier	check_expr		529577	0					
ANR	529655	Identifier	Evaluate		529577	1					
ANR	529656	ArgumentList	eval_state		529577	1					
ANR	529657	Argument	eval_state		529577	0					
ANR	529658	Identifier	eval_state		529577	0					
ANR	529659	Argument	v		529577	1					
ANR	529660	Identifier	v		529577	0					
ANR	529661	CompoundStatement		15:48:397:397	529577	1					
ANR	529662	ExpressionStatement	"sprintf ( error_msg , ""Failed to evaluate draining check expression against %s."" , resources [ i ] -> r_name )"	2493:4:61842:61942	529577	0	True				
ANR	529663	CallExpression	"sprintf ( error_msg , ""Failed to evaluate draining check expression against %s."" , resources [ i ] -> r_name )"		529577	0					
ANR	529664	Callee	sprintf		529577	0					
ANR	529665	Identifier	sprintf		529577	0					
ANR	529666	ArgumentList	error_msg		529577	1					
ANR	529667	Argument	error_msg		529577	0					
ANR	529668	Identifier	error_msg		529577	0					
ANR	529669	Argument	"""Failed to evaluate draining check expression against %s."""		529577	1					
ANR	529670	PrimaryExpression	"""Failed to evaluate draining check expression against %s."""		529577	0					
ANR	529671	Argument	resources [ i ] -> r_name		529577	2					
ANR	529672	PtrMemberAccess	resources [ i ] -> r_name		529577	0					
ANR	529673	ArrayIndexing	resources [ i ]		529577	0					
ANR	529674	Identifier	resources		529577	0					
ANR	529675	Identifier	i		529577	1					
ANR	529676	Identifier	r_name		529577	1					
ANR	529677	ExpressionStatement	error_code = DRAINING_CHECK_EXPR_FAILED	2494:4:61948:61987	529577	1	True				
ANR	529678	AssignmentExpression	error_code = DRAINING_CHECK_EXPR_FAILED		529577	0		=			
ANR	529679	Identifier	error_code		529577	0					
ANR	529680	Identifier	DRAINING_CHECK_EXPR_FAILED		529577	1					
ANR	529681	ReturnStatement	return false ;	2495:4:61993:62005	529577	2	True				
ANR	529682	Identifier	false		529577	0					
ANR	529683	IfStatement	if ( ! v . IsBooleanValue ( check_ok ) )		529577	5					
ANR	529684	Condition	! v . IsBooleanValue ( check_ok )	2497:7:62019:62045	529577	0	True				
ANR	529685	UnaryOperationExpression	! v . IsBooleanValue ( check_ok )		529577	0					
ANR	529686	UnaryOperator	!		529577	0					
ANR	529687	CallExpression	v . IsBooleanValue ( check_ok )		529577	1					
ANR	529688	Callee	v . IsBooleanValue		529577	0					
ANR	529689	MemberAccess	v . IsBooleanValue		529577	0					
ANR	529690	Identifier	v		529577	0					
ANR	529691	Identifier	IsBooleanValue		529577	1					
ANR	529692	ArgumentList	check_ok		529577	1					
ANR	529693	Argument	check_ok		529577	0					
ANR	529694	Identifier	check_ok		529577	0					
ANR	529695	CompoundStatement		20:37:610:610	529577	1					
ANR	529696	ExpressionStatement	"sprintf ( error_msg , ""Draining check expression does not evaluate to a bool on %s."" , resources [ i ] -> r_name )"	2498:4:62055:62159	529577	0	True				
ANR	529697	CallExpression	"sprintf ( error_msg , ""Draining check expression does not evaluate to a bool on %s."" , resources [ i ] -> r_name )"		529577	0					
ANR	529698	Callee	sprintf		529577	0					
ANR	529699	Identifier	sprintf		529577	0					
ANR	529700	ArgumentList	error_msg		529577	1					
ANR	529701	Argument	error_msg		529577	0					
ANR	529702	Identifier	error_msg		529577	0					
ANR	529703	Argument	"""Draining check expression does not evaluate to a bool on %s."""		529577	1					
ANR	529704	PrimaryExpression	"""Draining check expression does not evaluate to a bool on %s."""		529577	0					
ANR	529705	Argument	resources [ i ] -> r_name		529577	2					
ANR	529706	PtrMemberAccess	resources [ i ] -> r_name		529577	0					
ANR	529707	ArrayIndexing	resources [ i ]		529577	0					
ANR	529708	Identifier	resources		529577	0					
ANR	529709	Identifier	i		529577	1					
ANR	529710	Identifier	r_name		529577	1					
ANR	529711	ExpressionStatement	error_code = DRAINING_CHECK_EXPR_FAILED	2499:4:62165:62204	529577	1	True				
ANR	529712	AssignmentExpression	error_code = DRAINING_CHECK_EXPR_FAILED		529577	0		=			
ANR	529713	Identifier	error_code		529577	0					
ANR	529714	Identifier	DRAINING_CHECK_EXPR_FAILED		529577	1					
ANR	529715	ReturnStatement	return false ;	2500:4:62210:62222	529577	2	True				
ANR	529716	Identifier	false		529577	0					
ANR	529717	IfStatement	if ( ! check_ok )		529577	6					
ANR	529718	Condition	! check_ok	2502:7:62236:62244	529577	0	True				
ANR	529719	UnaryOperationExpression	! check_ok		529577	0					
ANR	529720	UnaryOperator	!		529577	0					
ANR	529721	Identifier	check_ok		529577	1					
ANR	529722	CompoundStatement		25:19:809:809	529577	1					
ANR	529723	ExpressionStatement	"sprintf ( error_msg , ""Draining check expression is false on %s."" , resources [ i ] -> r_name )"	2503:4:62254:62339	529577	0	True				
ANR	529724	CallExpression	"sprintf ( error_msg , ""Draining check expression is false on %s."" , resources [ i ] -> r_name )"		529577	0					
ANR	529725	Callee	sprintf		529577	0					
ANR	529726	Identifier	sprintf		529577	0					
ANR	529727	ArgumentList	error_msg		529577	1					
ANR	529728	Argument	error_msg		529577	0					
ANR	529729	Identifier	error_msg		529577	0					
ANR	529730	Argument	"""Draining check expression is false on %s."""		529577	1					
ANR	529731	PrimaryExpression	"""Draining check expression is false on %s."""		529577	0					
ANR	529732	Argument	resources [ i ] -> r_name		529577	2					
ANR	529733	PtrMemberAccess	resources [ i ] -> r_name		529577	0					
ANR	529734	ArrayIndexing	resources [ i ]		529577	0					
ANR	529735	Identifier	resources		529577	0					
ANR	529736	Identifier	i		529577	1					
ANR	529737	Identifier	r_name		529577	1					
ANR	529738	ExpressionStatement	error_code = DRAINING_CHECK_EXPR_FAILED	2504:4:62345:62384	529577	1	True				
ANR	529739	AssignmentExpression	error_code = DRAINING_CHECK_EXPR_FAILED		529577	0		=			
ANR	529740	Identifier	error_code		529577	0					
ANR	529741	Identifier	DRAINING_CHECK_EXPR_FAILED		529577	1					
ANR	529742	ReturnStatement	return false ;	2505:4:62390:62402	529577	2	True				
ANR	529743	Identifier	false		529577	0					
ANR	529744	ExpressionStatement	draining = true	2510:1:62418:62433	529577	2	True				
ANR	529745	AssignmentExpression	draining = true		529577	0		=			
ANR	529746	Identifier	draining		529577	0					
ANR	529747	Identifier	true		529577	1					
ANR	529748	ExpressionStatement	draining_id += 1	2511:1:62436:62452	529577	3	True				
ANR	529749	AssignmentExpression	draining_id += 1		529577	0		+=			
ANR	529750	Identifier	draining_id		529577	0					
ANR	529751	PrimaryExpression	1		529577	1					
ANR	529752	ExpressionStatement	"sprintf ( new_request_id , ""%d"" , draining_id )"	2512:1:62455:62495	529577	4	True				
ANR	529753	CallExpression	"sprintf ( new_request_id , ""%d"" , draining_id )"		529577	0					
ANR	529754	Callee	sprintf		529577	0					
ANR	529755	Identifier	sprintf		529577	0					
ANR	529756	ArgumentList	new_request_id		529577	1					
ANR	529757	Argument	new_request_id		529577	0					
ANR	529758	Identifier	new_request_id		529577	0					
ANR	529759	Argument	"""%d"""		529577	1					
ANR	529760	PrimaryExpression	"""%d"""		529577	0					
ANR	529761	Argument	draining_id		529577	2					
ANR	529762	Identifier	draining_id		529577	0					
ANR	529763	ExpressionStatement	this -> resume_on_completion_of_draining = resume_on_completion	2513:1:62498:62559	529577	5	True				
ANR	529764	AssignmentExpression	this -> resume_on_completion_of_draining = resume_on_completion		529577	0		=			
ANR	529765	PtrMemberAccess	this -> resume_on_completion_of_draining		529577	0					
ANR	529766	Identifier	this		529577	0					
ANR	529767	Identifier	resume_on_completion_of_draining		529577	1					
ANR	529768	Identifier	resume_on_completion		529577	1					
ANR	529769	IfStatement	if ( how_fast <= DRAIN_GRACEFUL )		529577	6					
ANR	529770	Condition	how_fast <= DRAIN_GRACEFUL	2515:5:62567:62592	529577	0	True				
ANR	529771	RelationalExpression	how_fast <= DRAIN_GRACEFUL		529577	0		<=			
ANR	529772	Identifier	how_fast		529577	0					
ANR	529773	Identifier	DRAIN_GRACEFUL		529577	1					
ANR	529774	CompoundStatement		41:2:1242:1299	529577	1					
ANR	529775	ExpressionStatement	draining_is_graceful = true	2517:2:62650:62677	529577	0	True				
ANR	529776	AssignmentExpression	draining_is_graceful = true		529577	0		=			
ANR	529777	Identifier	draining_is_graceful		529577	0					
ANR	529778	Identifier	true		529577	1					
ANR	529779	IdentifierDeclStatement	int graceful_retirement = gracefulDrainingTimeRemaining ( ) ;	2518:2:62681:62738	529577	1	True				
ANR	529780	IdentifierDecl	graceful_retirement = gracefulDrainingTimeRemaining ( )		529577	0					
ANR	529781	IdentifierDeclType	int		529577	0					
ANR	529782	Identifier	graceful_retirement		529577	1					
ANR	529783	AssignmentExpression	graceful_retirement = gracefulDrainingTimeRemaining ( )		529577	2		=			
ANR	529784	Identifier	graceful_retirement		529577	0					
ANR	529785	CallExpression	gracefulDrainingTimeRemaining ( )		529577	1					
ANR	529786	Callee	gracefulDrainingTimeRemaining		529577	0					
ANR	529787	Identifier	gracefulDrainingTimeRemaining		529577	0					
ANR	529788	ArgumentList			529577	1					
ANR	529789	ExpressionStatement	"dprintf ( D_ALWAYS , ""Initiating graceful draining.\\n"" )"	2519:2:62742:62793	529577	2	True				
ANR	529790	CallExpression	"dprintf ( D_ALWAYS , ""Initiating graceful draining.\\n"" )"		529577	0					
ANR	529791	Callee	dprintf		529577	0					
ANR	529792	Identifier	dprintf		529577	0					
ANR	529793	ArgumentList	D_ALWAYS		529577	1					
ANR	529794	Argument	D_ALWAYS		529577	0					
ANR	529795	Identifier	D_ALWAYS		529577	0					
ANR	529796	Argument	"""Initiating graceful draining.\\n"""		529577	1					
ANR	529797	PrimaryExpression	"""Initiating graceful draining.\\n"""		529577	0					
ANR	529798	IfStatement	if ( graceful_retirement > 0 )		529577	3					
ANR	529799	Condition	graceful_retirement > 0	2520:6:62801:62823	529577	0	True				
ANR	529800	RelationalExpression	graceful_retirement > 0		529577	0		>			
ANR	529801	Identifier	graceful_retirement		529577	0					
ANR	529802	PrimaryExpression	0		529577	1					
ANR	529803	CompoundStatement		43:32:1388:1388	529577	1					
ANR	529804	ExpressionStatement	"dprintf ( D_ALWAYS , ""Coordinating retirement of draining slots; retirement of all draining slots ends in %ds.\\n"" , graceful_retirement )"	2521:3:62832:62974	529577	0	True				
ANR	529805	CallExpression	"dprintf ( D_ALWAYS , ""Coordinating retirement of draining slots; retirement of all draining slots ends in %ds.\\n"" , graceful_retirement )"		529577	0					
ANR	529806	Callee	dprintf		529577	0					
ANR	529807	Identifier	dprintf		529577	0					
ANR	529808	ArgumentList	D_ALWAYS		529577	1					
ANR	529809	Argument	D_ALWAYS		529577	0					
ANR	529810	Identifier	D_ALWAYS		529577	0					
ANR	529811	Argument	"""Coordinating retirement of draining slots; retirement of all draining slots ends in %ds.\\n"""		529577	1					
ANR	529812	PrimaryExpression	"""Coordinating retirement of draining slots; retirement of all draining slots ends in %ds.\\n"""		529577	0					
ANR	529813	Argument	graceful_retirement		529577	2					
ANR	529814	Identifier	graceful_retirement		529577	0					
ANR	529815	ExpressionStatement	walk ( & Resource :: releaseAllClaimsReversibly )	2530:2:63151:63194	529577	4	True				
ANR	529816	CallExpression	walk ( & Resource :: releaseAllClaimsReversibly )		529577	0					
ANR	529817	Callee	walk		529577	0					
ANR	529818	Identifier	walk		529577	0					
ANR	529819	ArgumentList	& Resource :: releaseAllClaimsReversibly		529577	1					
ANR	529820	Argument	& Resource :: releaseAllClaimsReversibly		529577	0					
ANR	529821	UnaryOperationExpression	& Resource :: releaseAllClaimsReversibly		529577	0					
ANR	529822	UnaryOperator	&		529577	0					
ANR	529823	Identifier	Resource :: releaseAllClaimsReversibly		529577	1					
ANR	529824	ElseStatement	else		529577	0					
ANR	529825	IfStatement	if ( how_fast <= DRAIN_QUICK )		529577	0					
ANR	529826	Condition	how_fast <= DRAIN_QUICK	2532:10:63209:63231	529577	0	True				
ANR	529827	RelationalExpression	how_fast <= DRAIN_QUICK		529577	0		<=			
ANR	529828	Identifier	how_fast		529577	0					
ANR	529829	Identifier	DRAIN_QUICK		529577	1					
ANR	529830	CompoundStatement		55:36:1796:1796	529577	1					
ANR	529831	ExpressionStatement	"dprintf ( D_ALWAYS , ""Initiating quick draining.\\n"" )"	2534:2:63303:63351	529577	0	True				
ANR	529832	CallExpression	"dprintf ( D_ALWAYS , ""Initiating quick draining.\\n"" )"		529577	0					
ANR	529833	Callee	dprintf		529577	0					
ANR	529834	Identifier	dprintf		529577	0					
ANR	529835	ArgumentList	D_ALWAYS		529577	1					
ANR	529836	Argument	D_ALWAYS		529577	0					
ANR	529837	Identifier	D_ALWAYS		529577	0					
ANR	529838	Argument	"""Initiating quick draining.\\n"""		529577	1					
ANR	529839	PrimaryExpression	"""Initiating quick draining.\\n"""		529577	0					
ANR	529840	ExpressionStatement	draining_is_graceful = false	2535:2:63355:63383	529577	1	True				
ANR	529841	AssignmentExpression	draining_is_graceful = false		529577	0		=			
ANR	529842	Identifier	draining_is_graceful		529577	0					
ANR	529843	Identifier	false		529577	1					
ANR	529844	ExpressionStatement	walk ( & Resource :: setBadputCausedByDraining )	2536:2:63387:63429	529577	2	True				
ANR	529845	CallExpression	walk ( & Resource :: setBadputCausedByDraining )		529577	0					
ANR	529846	Callee	walk		529577	0					
ANR	529847	Identifier	walk		529577	0					
ANR	529848	ArgumentList	& Resource :: setBadputCausedByDraining		529577	1					
ANR	529849	Argument	& Resource :: setBadputCausedByDraining		529577	0					
ANR	529850	UnaryOperationExpression	& Resource :: setBadputCausedByDraining		529577	0					
ANR	529851	UnaryOperator	&		529577	0					
ANR	529852	Identifier	Resource :: setBadputCausedByDraining		529577	1					
ANR	529853	ExpressionStatement	walk ( & Resource :: releaseAllClaims )	2537:2:63433:63466	529577	3	True				
ANR	529854	CallExpression	walk ( & Resource :: releaseAllClaims )		529577	0					
ANR	529855	Callee	walk		529577	0					
ANR	529856	Identifier	walk		529577	0					
ANR	529857	ArgumentList	& Resource :: releaseAllClaims		529577	1					
ANR	529858	Argument	& Resource :: releaseAllClaims		529577	0					
ANR	529859	UnaryOperationExpression	& Resource :: releaseAllClaims		529577	0					
ANR	529860	UnaryOperator	&		529577	0					
ANR	529861	Identifier	Resource :: releaseAllClaims		529577	1					
ANR	529862	ElseStatement	else		529577	0					
ANR	529863	IfStatement	if ( how_fast > DRAIN_QUICK )		529577	0					
ANR	529864	Condition	how_fast > DRAIN_QUICK	2539:10:63481:63502	529577	0	True				
ANR	529865	RelationalExpression	how_fast > DRAIN_QUICK		529577	0		>			
ANR	529866	Identifier	how_fast		529577	0					
ANR	529867	Identifier	DRAIN_QUICK		529577	1					
ANR	529868	CompoundStatement		62:35:2067:2067	529577	1					
ANR	529869	ExpressionStatement	"dprintf ( D_ALWAYS , ""Initiating fast draining.\\n"" )"	2541:2:63586:63633	529577	0	True				
ANR	529870	CallExpression	"dprintf ( D_ALWAYS , ""Initiating fast draining.\\n"" )"		529577	0					
ANR	529871	Callee	dprintf		529577	0					
ANR	529872	Identifier	dprintf		529577	0					
ANR	529873	ArgumentList	D_ALWAYS		529577	1					
ANR	529874	Argument	D_ALWAYS		529577	0					
ANR	529875	Identifier	D_ALWAYS		529577	0					
ANR	529876	Argument	"""Initiating fast draining.\\n"""		529577	1					
ANR	529877	PrimaryExpression	"""Initiating fast draining.\\n"""		529577	0					
ANR	529878	ExpressionStatement	draining_is_graceful = false	2542:2:63637:63665	529577	1	True				
ANR	529879	AssignmentExpression	draining_is_graceful = false		529577	0		=			
ANR	529880	Identifier	draining_is_graceful		529577	0					
ANR	529881	Identifier	false		529577	1					
ANR	529882	ExpressionStatement	walk ( & Resource :: setBadputCausedByDraining )	2543:2:63669:63711	529577	2	True				
ANR	529883	CallExpression	walk ( & Resource :: setBadputCausedByDraining )		529577	0					
ANR	529884	Callee	walk		529577	0					
ANR	529885	Identifier	walk		529577	0					
ANR	529886	ArgumentList	& Resource :: setBadputCausedByDraining		529577	1					
ANR	529887	Argument	& Resource :: setBadputCausedByDraining		529577	0					
ANR	529888	UnaryOperationExpression	& Resource :: setBadputCausedByDraining		529577	0					
ANR	529889	UnaryOperator	&		529577	0					
ANR	529890	Identifier	Resource :: setBadputCausedByDraining		529577	1					
ANR	529891	ExpressionStatement	walk ( & Resource :: killAllClaims )	2544:2:63715:63745	529577	3	True				
ANR	529892	CallExpression	walk ( & Resource :: killAllClaims )		529577	0					
ANR	529893	Callee	walk		529577	0					
ANR	529894	Identifier	walk		529577	0					
ANR	529895	ArgumentList	& Resource :: killAllClaims		529577	1					
ANR	529896	Argument	& Resource :: killAllClaims		529577	0					
ANR	529897	UnaryOperationExpression	& Resource :: killAllClaims		529577	0					
ANR	529898	UnaryOperator	&		529577	0					
ANR	529899	Identifier	Resource :: killAllClaims		529577	1					
ANR	529900	ExpressionStatement	update_all ( )	2547:1:63752:63764	529577	7	True				
ANR	529901	CallExpression	update_all ( )		529577	0					
ANR	529902	Callee	update_all		529577	0					
ANR	529903	Identifier	update_all		529577	0					
ANR	529904	ArgumentList			529577	1					
ANR	529905	ReturnStatement	return true ;	2548:1:63767:63778	529577	8	True				
ANR	529906	Identifier	true		529577	0					
ANR	529907	ReturnType	bool		529577	1					
ANR	529908	Identifier	ResMgr :: startDraining		529577	2					
ANR	529909	ParameterList	"int how_fast , bool resume_on_completion , ExprTree * check_expr , std :: string & new_request_id , std :: string & error_msg , int & error_code"		529577	3					
ANR	529910	Parameter	int how_fast	2477:22:61310:61321	529577	0	True				
ANR	529911	ParameterType	int		529577	0					
ANR	529912	Identifier	how_fast		529577	1					
ANR	529913	Parameter	bool resume_on_completion	2477:35:61323:61347	529577	1	True				
ANR	529914	ParameterType	bool		529577	0					
ANR	529915	Identifier	resume_on_completion		529577	1					
ANR	529916	Parameter	ExprTree * check_expr	2477:61:61349:61368	529577	2	True				
ANR	529917	ParameterType	ExprTree *		529577	0					
ANR	529918	Identifier	check_expr		529577	1					
ANR	529919	Parameter	std :: string & new_request_id	2477:82:61370:61396	529577	3	True				
ANR	529920	ParameterType	std :: string &		529577	0					
ANR	529921	Identifier	new_request_id		529577	1					
ANR	529922	Parameter	std :: string & error_msg	2477:110:61398:61419	529577	4	True				
ANR	529923	ParameterType	std :: string &		529577	0					
ANR	529924	Identifier	error_msg		529577	1					
ANR	529925	Parameter	int & error_code	2477:133:61421:61435	529577	5	True				
ANR	529926	ParameterType	int &		529577	0					
ANR	529927	Identifier	error_code		529577	1					
ANR	529928	CFGEntryNode	ENTRY		529577		True				
ANR	529929	CFGExitNode	EXIT		529577		True				
ANR	529930	Symbol	this -> resume_on_completion_of_draining		529577						
ANR	529931	Symbol	& Resource :: releaseAllClaims		529577						
ANR	529932	Symbol	* * resources		529577						
ANR	529933	Symbol	* check_expr		529577						
ANR	529934	Symbol	DRAINING_ALREADY_IN_PROGRESS		529577						
ANR	529935	Symbol	graceful_retirement		529577						
ANR	529936	Symbol	check_expr -> Evaluate		529577						
ANR	529937	Symbol	draining		529577						
ANR	529938	Symbol	check_expr		529577						
ANR	529939	Symbol	resources [ i ] -> r_name		529577						
ANR	529940	Symbol	resume_on_completion		529577						
ANR	529941	Symbol	DRAINING_CHECK_EXPR_FAILED		529577						
ANR	529942	Symbol	DRAIN_QUICK		529577						
ANR	529943	Symbol	& Resource :: setBadputCausedByDraining		529577						
ANR	529944	Symbol	how_fast		529577						
ANR	529945	Symbol	* * i		529577						
ANR	529946	Symbol	error_msg		529577						
ANR	529947	Symbol	resources [ i ] -> r_classad		529577						
ANR	529948	Symbol	false		529577						
ANR	529949	Symbol	check_ok		529577						
ANR	529950	Symbol	this		529577						
ANR	529951	Symbol	D_ALWAYS		529577						
ANR	529952	Symbol	i		529577						
ANR	529953	Symbol	resources		529577						
ANR	529954	Symbol	& Resource :: killAllClaims		529577						
ANR	529955	Symbol	DRAIN_GRACEFUL		529577						
ANR	529956	Symbol	new_request_id		529577						
ANR	529957	Symbol	nresources		529577						
ANR	529958	Symbol	* resources		529577						
ANR	529959	Symbol	eval_state		529577						
ANR	529960	Symbol	* this		529577						
ANR	529961	Symbol	gracefulDrainingTimeRemaining		529577						
ANR	529962	Symbol	* i		529577						
ANR	529963	Symbol	v		529577						
ANR	529964	Symbol	true		529577						
ANR	529965	Symbol	v . IsBooleanValue		529577						
ANR	529966	Symbol	error_code		529577						
ANR	529967	Symbol	draining_is_graceful		529577						
ANR	529968	Symbol	draining_id		529577						
ANR	529969	Symbol	& Resource :: releaseAllClaimsReversibly		529577						
ANR	529970	Function	ResMgr :: cancelDraining	2551:0:63783:64254							
ANR	529971	FunctionDef	"ResMgr :: cancelDraining (std :: string request_id , std :: string & error_msg , int & error_code)"		529970	0					
ANR	529972	CompoundStatement		2553:0:63874:64254	529970	0					
ANR	529973	IfStatement	if ( ! this -> draining )		529970	0					
ANR	529974	Condition	! this -> draining	2554:5:63881:63895	529970	0	True				
ANR	529975	UnaryOperationExpression	! this -> draining		529970	0					
ANR	529976	UnaryOperator	!		529970	0					
ANR	529977	PtrMemberAccess	this -> draining		529970	1					
ANR	529978	Identifier	this		529970	0					
ANR	529979	Identifier	draining		529970	1					
ANR	529980	CompoundStatement		2:23:24:24	529970	1					
ANR	529981	IfStatement	if ( request_id . empty ( ) )		529970	0					
ANR	529982	Condition	request_id . empty ( )	2555:6:63907:63924	529970	0	True				
ANR	529983	CallExpression	request_id . empty ( )		529970	0					
ANR	529984	Callee	request_id . empty		529970	0					
ANR	529985	MemberAccess	request_id . empty		529970	0					
ANR	529986	Identifier	request_id		529970	0					
ANR	529987	Identifier	empty		529970	1					
ANR	529988	ArgumentList			529970	1					
ANR	529989	CompoundStatement		3:27:53:53	529970	1					
ANR	529990	ReturnStatement	return true ;	2556:3:63933:63944	529970	0	True				
ANR	529991	Identifier	true		529970	0					
ANR	529992	IfStatement	if ( ! request_id . empty ( ) && atoi ( request_id . c_str ( ) ) != this -> draining_id )		529970	1					
ANR	529993	Condition	! request_id . empty ( ) && atoi ( request_id . c_str ( ) ) != this -> draining_id	2560:5:63959:64026	529970	0	True				
ANR	529994	AndExpression	! request_id . empty ( ) && atoi ( request_id . c_str ( ) ) != this -> draining_id		529970	0		&&			
ANR	529995	UnaryOperationExpression	! request_id . empty ( )		529970	0					
ANR	529996	UnaryOperator	!		529970	0					
ANR	529997	CallExpression	request_id . empty ( )		529970	1					
ANR	529998	Callee	request_id . empty		529970	0					
ANR	529999	MemberAccess	request_id . empty		529970	0					
ANR	530000	Identifier	request_id		529970	0					
ANR	530001	Identifier	empty		529970	1					
ANR	530002	ArgumentList			529970	1					
ANR	530003	EqualityExpression	atoi ( request_id . c_str ( ) ) != this -> draining_id		529970	1		!=			
ANR	530004	CallExpression	atoi ( request_id . c_str ( ) )		529970	0					
ANR	530005	Callee	atoi		529970	0					
ANR	530006	Identifier	atoi		529970	0					
ANR	530007	ArgumentList	request_id . c_str ( )		529970	1					
ANR	530008	Argument	request_id . c_str ( )		529970	0					
ANR	530009	CallExpression	request_id . c_str ( )		529970	0					
ANR	530010	Callee	request_id . c_str		529970	0					
ANR	530011	MemberAccess	request_id . c_str		529970	0					
ANR	530012	Identifier	request_id		529970	0					
ANR	530013	Identifier	c_str		529970	1					
ANR	530014	ArgumentList			529970	1					
ANR	530015	PtrMemberAccess	this -> draining_id		529970	1					
ANR	530016	Identifier	this		529970	0					
ANR	530017	Identifier	draining_id		529970	1					
ANR	530018	CompoundStatement		8:76:155:155	529970	1					
ANR	530019	ExpressionStatement	"sprintf ( error_msg , ""No matching draining request id %s."" , request_id . c_str ( ) )"	2561:2:64034:64109	529970	0	True				
ANR	530020	CallExpression	"sprintf ( error_msg , ""No matching draining request id %s."" , request_id . c_str ( ) )"		529970	0					
ANR	530021	Callee	sprintf		529970	0					
ANR	530022	Identifier	sprintf		529970	0					
ANR	530023	ArgumentList	error_msg		529970	1					
ANR	530024	Argument	error_msg		529970	0					
ANR	530025	Identifier	error_msg		529970	0					
ANR	530026	Argument	"""No matching draining request id %s."""		529970	1					
ANR	530027	PrimaryExpression	"""No matching draining request id %s."""		529970	0					
ANR	530028	Argument	request_id . c_str ( )		529970	2					
ANR	530029	CallExpression	request_id . c_str ( )		529970	0					
ANR	530030	Callee	request_id . c_str		529970	0					
ANR	530031	MemberAccess	request_id . c_str		529970	0					
ANR	530032	Identifier	request_id		529970	0					
ANR	530033	Identifier	c_str		529970	1					
ANR	530034	ArgumentList			529970	1					
ANR	530035	ExpressionStatement	error_code = DRAINING_NO_MATCHING_REQUEST_ID	2562:2:64113:64157	529970	1	True				
ANR	530036	AssignmentExpression	error_code = DRAINING_NO_MATCHING_REQUEST_ID		529970	0		=			
ANR	530037	Identifier	error_code		529970	0					
ANR	530038	Identifier	DRAINING_NO_MATCHING_REQUEST_ID		529970	1					
ANR	530039	ReturnStatement	return false ;	2563:2:64161:64173	529970	2	True				
ANR	530040	Identifier	false		529970	0					
ANR	530041	ExpressionStatement	draining = false	2566:1:64180:64196	529970	2	True				
ANR	530042	AssignmentExpression	draining = false		529970	0		=			
ANR	530043	Identifier	draining		529970	0					
ANR	530044	Identifier	false		529970	1					
ANR	530045	ExpressionStatement	walk ( & Resource :: enable )	2568:1:64200:64223	529970	3	True				
ANR	530046	CallExpression	walk ( & Resource :: enable )		529970	0					
ANR	530047	Callee	walk		529970	0					
ANR	530048	Identifier	walk		529970	0					
ANR	530049	ArgumentList	& Resource :: enable		529970	1					
ANR	530050	Argument	& Resource :: enable		529970	0					
ANR	530051	UnaryOperationExpression	& Resource :: enable		529970	0					
ANR	530052	UnaryOperator	&		529970	0					
ANR	530053	Identifier	Resource :: enable		529970	1					
ANR	530054	ExpressionStatement	update_all ( )	2569:1:64226:64238	529970	4	True				
ANR	530055	CallExpression	update_all ( )		529970	0					
ANR	530056	Callee	update_all		529970	0					
ANR	530057	Identifier	update_all		529970	0					
ANR	530058	ArgumentList			529970	1					
ANR	530059	ReturnStatement	return true ;	2570:1:64241:64252	529970	5	True				
ANR	530060	Identifier	true		529970	0					
ANR	530061	ReturnType	bool		529970	1					
ANR	530062	Identifier	ResMgr :: cancelDraining		529970	2					
ANR	530063	ParameterList	"std :: string request_id , std :: string & error_msg , int & error_code"		529970	3					
ANR	530064	Parameter	std :: string request_id	2552:23:63811:63832	529970	0	True				
ANR	530065	ParameterType	std :: string		529970	0					
ANR	530066	Identifier	request_id		529970	1					
ANR	530067	Parameter	std :: string & error_msg	2552:46:63834:63855	529970	1	True				
ANR	530068	ParameterType	std :: string &		529970	0					
ANR	530069	Identifier	error_msg		529970	1					
ANR	530070	Parameter	int & error_code	2552:69:63857:63871	529970	2	True				
ANR	530071	ParameterType	int &		529970	0					
ANR	530072	Identifier	error_code		529970	1					
ANR	530073	CFGEntryNode	ENTRY		529970		True				
ANR	530074	CFGExitNode	EXIT		529970		True				
ANR	530075	Symbol	atoi		529970						
ANR	530076	Symbol	error_msg		529970						
ANR	530077	Symbol	& Resource :: enable		529970						
ANR	530078	Symbol	this		529970						
ANR	530079	Symbol	false		529970						
ANR	530080	Symbol	* this		529970						
ANR	530081	Symbol	this -> draining_id		529970						
ANR	530082	Symbol	request_id . c_str		529970						
ANR	530083	Symbol	draining		529970						
ANR	530084	Symbol	true		529970						
ANR	530085	Symbol	error_code		529970						
ANR	530086	Symbol	request_id . empty		529970						
ANR	530087	Symbol	this -> draining		529970						
ANR	530088	Symbol	request_id		529970						
ANR	530089	Symbol	DRAINING_NO_MATCHING_REQUEST_ID		529970						
ANR	530090	Function	ResMgr :: gracefulDrainingTimeRemaining	2579:0:64328:64419							
ANR	530091	FunctionDef	ResMgr :: gracefulDrainingTimeRemaining ()		530090	0					
ANR	530092	CompoundStatement		2581:0:64372:64419	530090	0					
ANR	530093	ReturnStatement	return gracefulDrainingTimeRemaining ( NULL ) ;	2582:1:64375:64417	530090	0	True				
ANR	530094	CallExpression	gracefulDrainingTimeRemaining ( NULL )		530090	0					
ANR	530095	Callee	gracefulDrainingTimeRemaining		530090	0					
ANR	530096	Identifier	gracefulDrainingTimeRemaining		530090	0					
ANR	530097	ArgumentList	NULL		530090	1					
ANR	530098	Argument	NULL		530090	0					
ANR	530099	Identifier	NULL		530090	0					
ANR	530100	ReturnType	int		530090	1					
ANR	530101	Identifier	ResMgr :: gracefulDrainingTimeRemaining		530090	2					
ANR	530102	ParameterList			530090	3					
ANR	530103	CFGEntryNode	ENTRY		530090		True				
ANR	530104	CFGExitNode	EXIT		530090		True				
ANR	530105	Symbol	gracefulDrainingTimeRemaining		530090						
ANR	530106	Symbol	NULL		530090						
ANR	530107	DeclStmt									
ANR	530108	Decl							int	int	longest_retirement_remaining
ANR	530109	DeclStmt									
ANR	530110	Decl							int	int	i
ANR	530111	DeclStmt									
ANR	530112	Decl							int	int	retirement_remaining
ANR	530113	DeclStmt									
ANR	530114	Decl							int	int	i
ANR	530115	Function	ResMgr :: considerResumingAfterDraining	2622:0:65258:65876							
ANR	530116	FunctionDef	ResMgr :: considerResumingAfterDraining ()		530115	0					
ANR	530117	CompoundStatement		2624:0:65303:65876	530115	0					
ANR	530118	IfStatement	if ( ! draining || ! resume_on_completion_of_draining )		530115	0					
ANR	530119	Condition	! draining || ! resume_on_completion_of_draining	2625:5:65310:65355	530115	0	True				
ANR	530120	OrExpression	! draining || ! resume_on_completion_of_draining		530115	0		||			
ANR	530121	UnaryOperationExpression	! draining		530115	0					
ANR	530122	UnaryOperator	!		530115	0					
ANR	530123	Identifier	draining		530115	1					
ANR	530124	UnaryOperationExpression	! resume_on_completion_of_draining		530115	1					
ANR	530125	UnaryOperator	!		530115	0					
ANR	530126	Identifier	resume_on_completion_of_draining		530115	1					
ANR	530127	CompoundStatement		2:54:55:55	530115	1					
ANR	530128	ReturnStatement	return false ;	2626:2:65363:65375	530115	0	True				
ANR	530129	Identifier	false		530115	0					
ANR	530130	ForStatement	for ( int i = 0 ; i < nresources ; i ++ )		530115	1					
ANR	530131	ForInit	int i = 0 ;	2629:6:65387:65396	530115	0	True				
ANR	530132	IdentifierDeclStatement	int i = 0 ;		530115	0					
ANR	530133	IdentifierDecl	i = 0		530115	0					
ANR	530134	IdentifierDeclType	int		530115	0					
ANR	530135	Identifier	i		530115	1					
ANR	530136	AssignmentExpression	i = 0		530115	2		=			
ANR	530137	Identifier	i		530115	0					
ANR	530138	PrimaryExpression	0		530115	1					
ANR	530139	Condition	i < nresources	2629:17:65398:65411	530115	1	True				
ANR	530140	RelationalExpression	i < nresources		530115	0		<			
ANR	530141	Identifier	i		530115	0					
ANR	530142	Identifier	nresources		530115	1					
ANR	530143	PostIncDecOperationExpression	i ++	2629:33:65414:65416	530115	2	True				
ANR	530144	Identifier	i		530115	0					
ANR	530145	IncDec	++		530115	1					
ANR	530146	CompoundStatement		6:39:116:116	530115	3					
ANR	530147	IfStatement	if ( resources [ i ] -> state ( ) != drained_state || resources [ i ] -> activity ( ) != idle_act )		530115	0					
ANR	530148	Condition	resources [ i ] -> state ( ) != drained_state || resources [ i ] -> activity ( ) != idle_act	2630:6:65428:65508	530115	0	True				
ANR	530149	OrExpression	resources [ i ] -> state ( ) != drained_state || resources [ i ] -> activity ( ) != idle_act		530115	0		||			
ANR	530150	EqualityExpression	resources [ i ] -> state ( ) != drained_state		530115	0		!=			
ANR	530151	CallExpression	resources [ i ] -> state ( )		530115	0					
ANR	530152	Callee	resources [ i ] -> state		530115	0					
ANR	530153	PtrMemberAccess	resources [ i ] -> state		530115	0					
ANR	530154	ArrayIndexing	resources [ i ]		530115	0					
ANR	530155	Identifier	resources		530115	0					
ANR	530156	Identifier	i		530115	1					
ANR	530157	Identifier	state		530115	1					
ANR	530158	ArgumentList			530115	1					
ANR	530159	Identifier	drained_state		530115	1					
ANR	530160	EqualityExpression	resources [ i ] -> activity ( ) != idle_act		530115	1		!=			
ANR	530161	CallExpression	resources [ i ] -> activity ( )		530115	0					
ANR	530162	Callee	resources [ i ] -> activity		530115	0					
ANR	530163	PtrMemberAccess	resources [ i ] -> activity		530115	0					
ANR	530164	ArrayIndexing	resources [ i ]		530115	0					
ANR	530165	Identifier	resources		530115	0					
ANR	530166	Identifier	i		530115	1					
ANR	530167	Identifier	activity		530115	1					
ANR	530168	ArgumentList			530115	1					
ANR	530169	Identifier	idle_act		530115	1					
ANR	530170	CompoundStatement		9:2:210:210	530115	1					
ANR	530171	ReturnStatement	return false ;	2633:3:65519:65531	530115	0	True				
ANR	530172	Identifier	false		530115	0					
ANR	530173	ExpressionStatement	"dprintf ( D_ALWAYS , ""As specified in draining request, resuming normal operation after completion of draining.\\n"" )"	2637:1:65542:65653	530115	2	True				
ANR	530174	CallExpression	"dprintf ( D_ALWAYS , ""As specified in draining request, resuming normal operation after completion of draining.\\n"" )"		530115	0					
ANR	530175	Callee	dprintf		530115	0					
ANR	530176	Identifier	dprintf		530115	0					
ANR	530177	ArgumentList	D_ALWAYS		530115	1					
ANR	530178	Argument	D_ALWAYS		530115	0					
ANR	530179	Identifier	D_ALWAYS		530115	0					
ANR	530180	Argument	"""As specified in draining request, resuming normal operation after completion of draining.\\n"""		530115	1					
ANR	530181	PrimaryExpression	"""As specified in draining request, resuming normal operation after completion of draining.\\n"""		530115	0					
ANR	530182	IdentifierDeclStatement	std :: string error_msg ;	2638:1:65656:65677	530115	3	True				
ANR	530183	IdentifierDecl	error_msg		530115	0					
ANR	530184	IdentifierDeclType	std :: string		530115	0					
ANR	530185	Identifier	error_msg		530115	1					
ANR	530186	IdentifierDeclStatement	int error_code = 0 ;	2639:1:65680:65698	530115	4	True				
ANR	530187	IdentifierDecl	error_code = 0		530115	0					
ANR	530188	IdentifierDeclType	int		530115	0					
ANR	530189	Identifier	error_code		530115	1					
ANR	530190	AssignmentExpression	error_code = 0		530115	2		=			
ANR	530191	Identifier	error_code		530115	0					
ANR	530192	PrimaryExpression	0		530115	1					
ANR	530193	IfStatement	"if ( ! cancelDraining ( """" , error_msg , error_code ) )"		530115	5					
ANR	530194	Condition	"! cancelDraining ( """" , error_msg , error_code )"	2640:5:65705:65744	530115	0	True				
ANR	530195	UnaryOperationExpression	"! cancelDraining ( """" , error_msg , error_code )"		530115	0					
ANR	530196	UnaryOperator	!		530115	0					
ANR	530197	CallExpression	"cancelDraining ( """" , error_msg , error_code )"		530115	1					
ANR	530198	Callee	cancelDraining		530115	0					
ANR	530199	Identifier	cancelDraining		530115	0					
ANR	530200	ArgumentList	""""""		530115	1					
ANR	530201	Argument	""""""		530115	0					
ANR	530202	PrimaryExpression	""""""		530115	0					
ANR	530203	Argument	error_msg		530115	1					
ANR	530204	Identifier	error_msg		530115	0					
ANR	530205	Argument	error_code		530115	2					
ANR	530206	Identifier	error_code		530115	0					
ANR	530207	CompoundStatement		17:48:444:444	530115	1					
ANR	530208	ExpressionStatement	"EXCEPT ( ""failed to cancel draining: (code %d) %s"" , error_code , error_msg . c_str ( ) )"	2642:2:65779:65857	530115	0	True				
ANR	530209	CallExpression	"EXCEPT ( ""failed to cancel draining: (code %d) %s"" , error_code , error_msg . c_str ( ) )"		530115	0					
ANR	530210	Callee	EXCEPT		530115	0					
ANR	530211	Identifier	EXCEPT		530115	0					
ANR	530212	ArgumentList	"""failed to cancel draining: (code %d) %s"""		530115	1					
ANR	530213	Argument	"""failed to cancel draining: (code %d) %s"""		530115	0					
ANR	530214	PrimaryExpression	"""failed to cancel draining: (code %d) %s"""		530115	0					
ANR	530215	Argument	error_code		530115	1					
ANR	530216	Identifier	error_code		530115	0					
ANR	530217	Argument	error_msg . c_str ( )		530115	2					
ANR	530218	CallExpression	error_msg . c_str ( )		530115	0					
ANR	530219	Callee	error_msg . c_str		530115	0					
ANR	530220	MemberAccess	error_msg . c_str		530115	0					
ANR	530221	Identifier	error_msg		530115	0					
ANR	530222	Identifier	c_str		530115	1					
ANR	530223	ArgumentList			530115	1					
ANR	530224	ReturnStatement	return true ;	2644:1:65863:65874	530115	6	True				
ANR	530225	Identifier	true		530115	0					
ANR	530226	ReturnType	bool		530115	1					
ANR	530227	Identifier	ResMgr :: considerResumingAfterDraining		530115	2					
ANR	530228	ParameterList			530115	3					
ANR	530229	CFGEntryNode	ENTRY		530115		True				
ANR	530230	CFGExitNode	EXIT		530115		True				
ANR	530231	Symbol	* * i		530115						
ANR	530232	Symbol	error_msg		530115						
ANR	530233	Symbol	cancelDraining		530115						
ANR	530234	Symbol	false		530115						
ANR	530235	Symbol	D_ALWAYS		530115						
ANR	530236	Symbol	i		530115						
ANR	530237	Symbol	resources		530115						
ANR	530238	Symbol	error_msg . c_str		530115						
ANR	530239	Symbol	* * resources		530115						
ANR	530240	Symbol	resources [ i ] -> activity		530115						
ANR	530241	Symbol	nresources		530115						
ANR	530242	Symbol	drained_state		530115						
ANR	530243	Symbol	* resources		530115						
ANR	530244	Symbol	* i		530115						
ANR	530245	Symbol	idle_act		530115						
ANR	530246	Symbol	draining		530115						
ANR	530247	Symbol	true		530115						
ANR	530248	Symbol	resume_on_completion_of_draining		530115						
ANR	530249	Symbol	resources [ i ] -> state		530115						
ANR	530250	Symbol	error_code		530115						
ANR	530251	Function	ResMgr :: publish_draining_attrs	2657:0:66056:67103							
ANR	530252	FunctionDef	"ResMgr :: publish_draining_attrs (Resource * rip , ClassAd * cap , amask_t mask)"		530251	0					
ANR	530253	CompoundStatement		2659:0:66137:67103	530251	0					
ANR	530254	IfStatement	if ( ! IS_PUBLIC ( mask ) )		530251	0					
ANR	530255	Condition	! IS_PUBLIC ( mask )	2660:5:66144:66159	530251	0	True				
ANR	530256	UnaryOperationExpression	! IS_PUBLIC ( mask )		530251	0					
ANR	530257	UnaryOperator	!		530251	0					
ANR	530258	CallExpression	IS_PUBLIC ( mask )		530251	1					
ANR	530259	Callee	IS_PUBLIC		530251	0					
ANR	530260	Identifier	IS_PUBLIC		530251	0					
ANR	530261	ArgumentList	mask		530251	1					
ANR	530262	Argument	mask		530251	0					
ANR	530263	Identifier	mask		530251	0					
ANR	530264	CompoundStatement		2:24:25:25	530251	1					
ANR	530265	ReturnStatement	return ;	2661:2:66167:66173	530251	0	True				
ANR	530266	IfStatement	if ( isSlotDraining ( rip ) )		530251	1					
ANR	530267	Condition	isSlotDraining ( rip )	2664:5:66184:66202	530251	0	True				
ANR	530268	CallExpression	isSlotDraining ( rip )		530251	0					
ANR	530269	Callee	isSlotDraining		530251	0					
ANR	530270	Identifier	isSlotDraining		530251	0					
ANR	530271	ArgumentList	rip		530251	1					
ANR	530272	Argument	rip		530251	0					
ANR	530273	Identifier	rip		530251	0					
ANR	530274	CompoundStatement		9:2:111:133	530251	1					
ANR	530275	ExpressionStatement	"cap -> Assign ( ATTR_DRAINING , true )"	2665:2:66210:66244	530251	0	True				
ANR	530276	CallExpression	"cap -> Assign ( ATTR_DRAINING , true )"		530251	0					
ANR	530277	Callee	cap -> Assign		530251	0					
ANR	530278	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530279	Identifier	cap		530251	0					
ANR	530280	Identifier	Assign		530251	1					
ANR	530281	ArgumentList	ATTR_DRAINING		530251	1					
ANR	530282	Argument	ATTR_DRAINING		530251	0					
ANR	530283	Identifier	ATTR_DRAINING		530251	0					
ANR	530284	Argument	true		530251	1					
ANR	530285	Identifier	true		530251	0					
ANR	530286	IdentifierDeclStatement	std :: string request_id ;	2667:2:66249:66271	530251	1	True				
ANR	530287	IdentifierDecl	request_id		530251	0					
ANR	530288	IdentifierDeclType	std :: string		530251	0					
ANR	530289	Identifier	request_id		530251	1					
ANR	530290	ExpressionStatement	"resmgr -> getDrainingRequestId ( rip , request_id )"	2668:2:66275:66322	530251	2	True				
ANR	530291	CallExpression	"resmgr -> getDrainingRequestId ( rip , request_id )"		530251	0					
ANR	530292	Callee	resmgr -> getDrainingRequestId		530251	0					
ANR	530293	PtrMemberAccess	resmgr -> getDrainingRequestId		530251	0					
ANR	530294	Identifier	resmgr		530251	0					
ANR	530295	Identifier	getDrainingRequestId		530251	1					
ANR	530296	ArgumentList	rip		530251	1					
ANR	530297	Argument	rip		530251	0					
ANR	530298	Identifier	rip		530251	0					
ANR	530299	Argument	request_id		530251	1					
ANR	530300	Identifier	request_id		530251	0					
ANR	530301	ExpressionStatement	"cap -> Assign ( ATTR_DRAINING_REQUEST_ID , request_id )"	2669:2:66326:66377	530251	3	True				
ANR	530302	CallExpression	"cap -> Assign ( ATTR_DRAINING_REQUEST_ID , request_id )"		530251	0					
ANR	530303	Callee	cap -> Assign		530251	0					
ANR	530304	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530305	Identifier	cap		530251	0					
ANR	530306	Identifier	Assign		530251	1					
ANR	530307	ArgumentList	ATTR_DRAINING_REQUEST_ID		530251	1					
ANR	530308	Argument	ATTR_DRAINING_REQUEST_ID		530251	0					
ANR	530309	Identifier	ATTR_DRAINING_REQUEST_ID		530251	0					
ANR	530310	Argument	request_id		530251	1					
ANR	530311	Identifier	request_id		530251	0					
ANR	530312	ElseStatement	else		530251	0					
ANR	530313	CompoundStatement		13:6:250:250	530251	0					
ANR	530314	ExpressionStatement	cap -> Delete ( ATTR_DRAINING )	2672:2:66392:66420	530251	0	True				
ANR	530315	CallExpression	cap -> Delete ( ATTR_DRAINING )		530251	0					
ANR	530316	Callee	cap -> Delete		530251	0					
ANR	530317	PtrMemberAccess	cap -> Delete		530251	0					
ANR	530318	Identifier	cap		530251	0					
ANR	530319	Identifier	Delete		530251	1					
ANR	530320	ArgumentList	ATTR_DRAINING		530251	1					
ANR	530321	Argument	ATTR_DRAINING		530251	0					
ANR	530322	Identifier	ATTR_DRAINING		530251	0					
ANR	530323	ExpressionStatement	cap -> Delete ( ATTR_DRAINING_REQUEST_ID )	2673:2:66424:66463	530251	1	True				
ANR	530324	CallExpression	cap -> Delete ( ATTR_DRAINING_REQUEST_ID )		530251	0					
ANR	530325	Callee	cap -> Delete		530251	0					
ANR	530326	PtrMemberAccess	cap -> Delete		530251	0					
ANR	530327	Identifier	cap		530251	0					
ANR	530328	Identifier	Delete		530251	1					
ANR	530329	ArgumentList	ATTR_DRAINING_REQUEST_ID		530251	1					
ANR	530330	Argument	ATTR_DRAINING_REQUEST_ID		530251	0					
ANR	530331	Identifier	ATTR_DRAINING_REQUEST_ID		530251	0					
ANR	530332	ExpressionStatement	"cap -> Assign ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT , expected_graceful_draining_badput )"	2676:1:66470:66566	530251	2	True				
ANR	530333	CallExpression	"cap -> Assign ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT , expected_graceful_draining_badput )"		530251	0					
ANR	530334	Callee	cap -> Assign		530251	0					
ANR	530335	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530336	Identifier	cap		530251	0					
ANR	530337	Identifier	Assign		530251	1					
ANR	530338	ArgumentList	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		530251	1					
ANR	530339	Argument	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		530251	0					
ANR	530340	Identifier	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		530251	0					
ANR	530341	Argument	expected_graceful_draining_badput		530251	1					
ANR	530342	Identifier	expected_graceful_draining_badput		530251	0					
ANR	530343	ExpressionStatement	"cap -> Assign ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT , expected_quick_draining_badput )"	2677:1:66569:66659	530251	3	True				
ANR	530344	CallExpression	"cap -> Assign ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT , expected_quick_draining_badput )"		530251	0					
ANR	530345	Callee	cap -> Assign		530251	0					
ANR	530346	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530347	Identifier	cap		530251	0					
ANR	530348	Identifier	Assign		530251	1					
ANR	530349	ArgumentList	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		530251	1					
ANR	530350	Argument	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		530251	0					
ANR	530351	Identifier	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		530251	0					
ANR	530352	Argument	expected_quick_draining_badput		530251	1					
ANR	530353	Identifier	expected_quick_draining_badput		530251	0					
ANR	530354	ExpressionStatement	"cap -> Assign ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION , expected_graceful_draining_completion )"	2678:1:66662:66766	530251	4	True				
ANR	530355	CallExpression	"cap -> Assign ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION , expected_graceful_draining_completion )"		530251	0					
ANR	530356	Callee	cap -> Assign		530251	0					
ANR	530357	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530358	Identifier	cap		530251	0					
ANR	530359	Identifier	Assign		530251	1					
ANR	530360	ArgumentList	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		530251	1					
ANR	530361	Argument	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		530251	0					
ANR	530362	Identifier	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		530251	0					
ANR	530363	Argument	expected_graceful_draining_completion		530251	1					
ANR	530364	Identifier	expected_graceful_draining_completion		530251	0					
ANR	530365	ExpressionStatement	"cap -> Assign ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION , expected_quick_draining_completion )"	2679:1:66769:66867	530251	5	True				
ANR	530366	CallExpression	"cap -> Assign ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION , expected_quick_draining_completion )"		530251	0					
ANR	530367	Callee	cap -> Assign		530251	0					
ANR	530368	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530369	Identifier	cap		530251	0					
ANR	530370	Identifier	Assign		530251	1					
ANR	530371	ArgumentList	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		530251	1					
ANR	530372	Argument	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		530251	0					
ANR	530373	Identifier	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		530251	0					
ANR	530374	Argument	expected_quick_draining_completion		530251	1					
ANR	530375	Identifier	expected_quick_draining_completion		530251	0					
ANR	530376	IfStatement	if ( total_draining_badput )		530251	6					
ANR	530377	Condition	total_draining_badput	2680:5:66874:66894	530251	0	True				
ANR	530378	Identifier	total_draining_badput		530251	0					
ANR	530379	CompoundStatement		22:29:760:760	530251	1					
ANR	530380	ExpressionStatement	"cap -> Assign ( ATTR_TOTAL_MACHINE_DRAINING_BADPUT , total_draining_badput )"	2681:2:66902:66974	530251	0	True				
ANR	530381	CallExpression	"cap -> Assign ( ATTR_TOTAL_MACHINE_DRAINING_BADPUT , total_draining_badput )"		530251	0					
ANR	530382	Callee	cap -> Assign		530251	0					
ANR	530383	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530384	Identifier	cap		530251	0					
ANR	530385	Identifier	Assign		530251	1					
ANR	530386	ArgumentList	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		530251	1					
ANR	530387	Argument	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		530251	0					
ANR	530388	Identifier	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		530251	0					
ANR	530389	Argument	total_draining_badput		530251	1					
ANR	530390	Identifier	total_draining_badput		530251	0					
ANR	530391	IfStatement	if ( total_draining_unclaimed )		530251	7					
ANR	530392	Condition	total_draining_unclaimed	2683:5:66984:67007	530251	0	True				
ANR	530393	Identifier	total_draining_unclaimed		530251	0					
ANR	530394	CompoundStatement		25:32:873:873	530251	1					
ANR	530395	ExpressionStatement	"cap -> Assign ( ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME , total_draining_unclaimed )"	2684:2:67015:67098	530251	0	True				
ANR	530396	CallExpression	"cap -> Assign ( ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME , total_draining_unclaimed )"		530251	0					
ANR	530397	Callee	cap -> Assign		530251	0					
ANR	530398	PtrMemberAccess	cap -> Assign		530251	0					
ANR	530399	Identifier	cap		530251	0					
ANR	530400	Identifier	Assign		530251	1					
ANR	530401	ArgumentList	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		530251	1					
ANR	530402	Argument	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		530251	0					
ANR	530403	Identifier	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		530251	0					
ANR	530404	Argument	total_draining_unclaimed		530251	1					
ANR	530405	Identifier	total_draining_unclaimed		530251	0					
ANR	530406	ReturnType	void		530251	1					
ANR	530407	Identifier	ResMgr :: publish_draining_attrs		530251	2					
ANR	530408	ParameterList	"Resource * rip , ClassAd * cap , amask_t mask"		530251	3					
ANR	530409	Parameter	Resource * rip	2658:32:66093:66105	530251	0	True				
ANR	530410	ParameterType	Resource *		530251	0					
ANR	530411	Identifier	rip		530251	1					
ANR	530412	Parameter	ClassAd * cap	2658:47:66108:66119	530251	1	True				
ANR	530413	ParameterType	ClassAd *		530251	0					
ANR	530414	Identifier	cap		530251	1					
ANR	530415	Parameter	amask_t mask	2658:61:66122:66133	530251	2	True				
ANR	530416	ParameterType	amask_t		530251	0					
ANR	530417	Identifier	mask		530251	1					
ANR	530418	CFGEntryNode	ENTRY		530251		True				
ANR	530419	CFGExitNode	EXIT		530251		True				
ANR	530420	Symbol	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		530251						
ANR	530421	Symbol	expected_quick_draining_badput		530251						
ANR	530422	Symbol	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		530251						
ANR	530423	Symbol	expected_graceful_draining_badput		530251						
ANR	530424	Symbol	expected_graceful_draining_completion		530251						
ANR	530425	Symbol	ATTR_DRAINING_REQUEST_ID		530251						
ANR	530426	Symbol	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		530251						
ANR	530427	Symbol	isSlotDraining		530251						
ANR	530428	Symbol	ATTR_DRAINING		530251						
ANR	530429	Symbol	expected_quick_draining_completion		530251						
ANR	530430	Symbol	cap		530251						
ANR	530431	Symbol	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		530251						
ANR	530432	Symbol	resmgr		530251						
ANR	530433	Symbol	total_draining_badput		530251						
ANR	530434	Symbol	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		530251						
ANR	530435	Symbol	rip		530251						
ANR	530436	Symbol	true		530251						
ANR	530437	Symbol	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		530251						
ANR	530438	Symbol	total_draining_unclaimed		530251						
ANR	530439	Symbol	IS_PUBLIC		530251						
ANR	530440	Symbol	request_id		530251						
ANR	530441	Symbol	mask		530251						
ANR	530442	DeclStmt									
ANR	530443	Decl							int	int	i
ANR	530444	DeclStmt									
ANR	530445	Decl							Resource	Resource *	rip
ANR	530446	DeclStmt									
ANR	530447	Decl							int	int	runtime
ANR	530448	DeclStmt									
ANR	530449	Decl							int	int	retirement_remaining
ANR	530450	DeclStmt									
ANR	530451	Decl							int	int	max_vacate_time
ANR	530452	DeclStmt									
ANR	530453	Decl							int	int	cpus
ANR	530454	DeclStmt									
ANR	530455	Decl							cpus	cpus *	runtime
ANR	530456	DeclStmt									
ANR	530457	Decl							int	int	graceful_time_remaining
ANR	530458	DeclStmt									
ANR	530459	Decl							cpus	cpus *	graceful_time_remaining
ANR	530460	Function	ResMgr :: addToDrainingBadput	2735:0:68680:68763							
ANR	530461	FunctionDef	ResMgr :: addToDrainingBadput (int badput)		530460	0					
ANR	530462	CompoundStatement		2737:0:68727:68763	530460	0					
ANR	530463	ExpressionStatement	total_draining_badput += badput	2738:1:68730:68761	530460	0	True				
ANR	530464	AssignmentExpression	total_draining_badput += badput		530460	0		+=			
ANR	530465	Identifier	total_draining_badput		530460	0					
ANR	530466	Identifier	badput		530460	1					
ANR	530467	ReturnType	void		530460	1					
ANR	530468	Identifier	ResMgr :: addToDrainingBadput		530460	2					
ANR	530469	ParameterList	int badput		530460	3					
ANR	530470	Parameter	int badput	2736:29:68714:68723	530460	0	True				
ANR	530471	ParameterType	int		530460	0					
ANR	530472	Identifier	badput		530460	1					
ANR	530473	CFGEntryNode	ENTRY		530460		True				
ANR	530474	CFGExitNode	EXIT		530460		True				
ANR	530475	Symbol	total_draining_badput		530460						
ANR	530476	Symbol	badput		530460						
