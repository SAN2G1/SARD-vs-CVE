command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3385694	File	data/converged/CVE-2011-4930_htcondor/src_condor_io_authentication.cpp								
ANR	3385695	DeclStmt									
ANR	3385696	Decl							MapFile	MapFile *	Authentication :: global_map_file
ANR	3385697	DeclStmt									
ANR	3385698	Decl							bool	bool	Authentication :: global_map_file_load_attempted
ANR	3385699	DeclStmt									
ANR	3385700	Decl							bool	bool	Authentication :: globus_activated
ANR	3385701	DeclStmt									
ANR	3385702	Decl							char const	char const *	UNMAPPED_DOMAIN
ANR	3385703	DeclStmt									
ANR	3385704	Decl							char const	char const *	MATCHSESSION_DOMAIN
ANR	3385705	DeclStmt									
ANR	3385706	Decl							char const	char const *	UNAUTHENTICATED_FQU
ANR	3385707	DeclStmt									
ANR	3385708	Decl							char const	char const *	UNAUTHENTICATED_USER
ANR	3385709	DeclStmt									
ANR	3385710	Decl							char const	char const *	EXECUTE_SIDE_MATCHSESSION_FQU
ANR	3385711	DeclStmt									
ANR	3385712	Decl							char const	char const *	SUBMIT_SIDE_MATCHSESSION_FQU
ANR	3385713	DeclStmt									
ANR	3385714	Decl							char const	char const *	CONDOR_CHILD_FQU
ANR	3385715	DeclStmt									
ANR	3385716	Decl							char const	char const *	CONDOR_PARENT_FQU
ANR	3385717	Function	Authentication :: Authentication	64:0:2153:2453							
ANR	3385718	FunctionDef	Authentication :: Authentication (ReliSock * sock)		3385717	0					
ANR	3385719	CompoundStatement		65:0:2202:2453	3385717	0					
ANR	3385720	ExpressionStatement	mySock = sock	68:1:2332:2358	3385717	0	True				
ANR	3385721	AssignmentExpression	mySock = sock		3385717	0		=			
ANR	3385722	Identifier	mySock		3385717	0					
ANR	3385723	Identifier	sock		3385717	1					
ANR	3385724	ExpressionStatement	auth_status = CAUTH_NONE	69:1:2361:2393	3385717	1	True				
ANR	3385725	AssignmentExpression	auth_status = CAUTH_NONE		3385717	0		=			
ANR	3385726	Identifier	auth_status		3385717	0					
ANR	3385727	Identifier	CAUTH_NONE		3385717	1					
ANR	3385728	ExpressionStatement	method_used = NULL	70:1:2396:2422	3385717	2	True				
ANR	3385729	AssignmentExpression	method_used = NULL		3385717	0		=			
ANR	3385730	Identifier	method_used		3385717	0					
ANR	3385731	Identifier	NULL		3385717	1					
ANR	3385732	ExpressionStatement	authenticator_ = NULL	71:1:2425:2451	3385717	3	True				
ANR	3385733	AssignmentExpression	authenticator_ = NULL		3385717	0		=			
ANR	3385734	Identifier	authenticator_		3385717	0					
ANR	3385735	Identifier	NULL		3385717	1					
ANR	3385736	Identifier	Authentication :: Authentication		3385717	1					
ANR	3385737	ParameterList	ReliSock * sock		3385717	2					
ANR	3385738	Parameter	ReliSock * sock	64:32:2185:2198	3385717	0	True				
ANR	3385739	ParameterType	ReliSock *		3385717	0					
ANR	3385740	Identifier	sock		3385717	1					
ANR	3385741	CFGEntryNode	ENTRY		3385717		True				
ANR	3385742	CFGExitNode	EXIT		3385717		True				
ANR	3385743	Symbol	mySock		3385717						
ANR	3385744	Symbol	sock		3385717						
ANR	3385745	Symbol	NULL		3385717						
ANR	3385746	Symbol	CAUTH_NONE		3385717						
ANR	3385747	Symbol	auth_status		3385717						
ANR	3385748	Symbol	method_used		3385717						
ANR	3385749	Symbol	authenticator_		3385717						
ANR	3385750	Function	Authentication :: ~Authentication	74:0:2456:2621							
ANR	3385751	FunctionDef	Authentication :: ~Authentication ()		3385750	0					
ANR	3385752	CompoundStatement		75:0:2490:2621	3385750	0					
ANR	3385753	ExpressionStatement	mySock = NULL	77:1:2527:2540	3385750	0	True				
ANR	3385754	AssignmentExpression	mySock = NULL		3385750	0		=			
ANR	3385755	Identifier	mySock		3385750	0					
ANR	3385756	Identifier	NULL		3385750	1					
ANR	3385757	Statement	delete	79:1:2544:2549	3385750	1	True				
ANR	3385758	ExpressionStatement	authenticator_	79:8:2551:2565	3385750	2	True				
ANR	3385759	Identifier	authenticator_		3385750	0					
ANR	3385760	IfStatement	if ( method_used )		3385750	3					
ANR	3385761	Condition	method_used	81:5:2573:2583	3385750	0	True				
ANR	3385762	Identifier	method_used		3385750	0					
ANR	3385763	CompoundStatement		7:18:95:95	3385750	1					
ANR	3385764	ExpressionStatement	free ( method_used )	82:2:2590:2608	3385750	0	True				
ANR	3385765	CallExpression	free ( method_used )		3385750	0					
ANR	3385766	Callee	free		3385750	0					
ANR	3385767	Identifier	free		3385750	0					
ANR	3385768	ArgumentList	method_used		3385750	1					
ANR	3385769	Argument	method_used		3385750	0					
ANR	3385770	Identifier	method_used		3385750	0					
ANR	3385771	Identifier	Authentication :: ~Authentication		3385750	1					
ANR	3385772	ParameterList			3385750	2					
ANR	3385773	CFGEntryNode	ENTRY		3385750		True				
ANR	3385774	CFGExitNode	EXIT		3385750		True				
ANR	3385775	Symbol	mySock		3385750						
ANR	3385776	Symbol	NULL		3385750						
ANR	3385777	Symbol	method_used		3385750						
ANR	3385778	Function	Authentication :: authenticate	88:0:2624:3346							
ANR	3385779	FunctionDef	"Authentication :: authenticate (char * hostAddr , KeyInfo * & key , const char * auth_methods , CondorError * errstack , int timeout)"		3385778	0					
ANR	3385780	CompoundStatement		90:0:2763:3346	3385778	0					
ANR	3385781	IdentifierDeclStatement	"int retval = authenticate ( hostAddr , auth_methods , errstack , timeout ) ;"	91:4:2769:2837	3385778	0	True				
ANR	3385782	IdentifierDecl	"retval = authenticate ( hostAddr , auth_methods , errstack , timeout )"		3385778	0					
ANR	3385783	IdentifierDeclType	int		3385778	0					
ANR	3385784	Identifier	retval		3385778	1					
ANR	3385785	AssignmentExpression	"retval = authenticate ( hostAddr , auth_methods , errstack , timeout )"		3385778	2		=			
ANR	3385786	Identifier	retval		3385778	0					
ANR	3385787	CallExpression	"authenticate ( hostAddr , auth_methods , errstack , timeout )"		3385778	1					
ANR	3385788	Callee	authenticate		3385778	0					
ANR	3385789	Identifier	authenticate		3385778	0					
ANR	3385790	ArgumentList	hostAddr		3385778	1					
ANR	3385791	Argument	hostAddr		3385778	0					
ANR	3385792	Identifier	hostAddr		3385778	0					
ANR	3385793	Argument	auth_methods		3385778	1					
ANR	3385794	Identifier	auth_methods		3385778	0					
ANR	3385795	Argument	errstack		3385778	2					
ANR	3385796	Identifier	errstack		3385778	0					
ANR	3385797	Argument	timeout		3385778	3					
ANR	3385798	Identifier	timeout		3385778	0					
ANR	3385799	IfStatement	if ( retval )		3385778	1					
ANR	3385800	Condition	retval	94:8:2886:2891	3385778	0	True				
ANR	3385801	Identifier	retval		3385778	0					
ANR	3385802	CompoundStatement		5:16:130:130	3385778	1					
ANR	3385803	ExpressionStatement	mySock -> allow_empty_message_flag = FALSE	97:8:3053:3093	3385778	0	True				
ANR	3385804	AssignmentExpression	mySock -> allow_empty_message_flag = FALSE		3385778	0		=			
ANR	3385805	PtrMemberAccess	mySock -> allow_empty_message_flag		3385778	0					
ANR	3385806	Identifier	mySock		3385778	0					
ANR	3385807	Identifier	allow_empty_message_flag		3385778	1					
ANR	3385808	Identifier	FALSE		3385778	1					
ANR	3385809	ExpressionStatement	retval = exchangeKey ( key )	98:8:3103:3128	3385778	1	True				
ANR	3385810	AssignmentExpression	retval = exchangeKey ( key )		3385778	0		=			
ANR	3385811	Identifier	retval		3385778	0					
ANR	3385812	CallExpression	exchangeKey ( key )		3385778	1					
ANR	3385813	Callee	exchangeKey		3385778	0					
ANR	3385814	Identifier	exchangeKey		3385778	0					
ANR	3385815	ArgumentList	key		3385778	1					
ANR	3385816	Argument	key		3385778	0					
ANR	3385817	Identifier	key		3385778	0					
ANR	3385818	IfStatement	if ( ! retval )		3385778	2					
ANR	3385819	Condition	! retval	99:7:3137:3143	3385778	0	True				
ANR	3385820	UnaryOperationExpression	! retval		3385778	0					
ANR	3385821	UnaryOperator	!		3385778	0					
ANR	3385822	Identifier	retval		3385778	1					
ANR	3385823	CompoundStatement		10:17:383:383	3385778	1					
ANR	3385824	ExpressionStatement	"errstack -> push ( ""AUTHENTICATE"" , AUTHENTICATE_ERR_KEYEXCHANGE_FAILED , ""Failed to securely exchange session key"" )"	100:3:3152:3265	3385778	0	True				
ANR	3385825	CallExpression	"errstack -> push ( ""AUTHENTICATE"" , AUTHENTICATE_ERR_KEYEXCHANGE_FAILED , ""Failed to securely exchange session key"" )"		3385778	0					
ANR	3385826	Callee	errstack -> push		3385778	0					
ANR	3385827	PtrMemberAccess	errstack -> push		3385778	0					
ANR	3385828	Identifier	errstack		3385778	0					
ANR	3385829	Identifier	push		3385778	1					
ANR	3385830	ArgumentList	"""AUTHENTICATE"""		3385778	1					
ANR	3385831	Argument	"""AUTHENTICATE"""		3385778	0					
ANR	3385832	PrimaryExpression	"""AUTHENTICATE"""		3385778	0					
ANR	3385833	Argument	AUTHENTICATE_ERR_KEYEXCHANGE_FAILED		3385778	1					
ANR	3385834	Identifier	AUTHENTICATE_ERR_KEYEXCHANGE_FAILED		3385778	0					
ANR	3385835	Argument	"""Failed to securely exchange session key"""		3385778	2					
ANR	3385836	PrimaryExpression	"""Failed to securely exchange session key"""		3385778	0					
ANR	3385837	ExpressionStatement	mySock -> allow_one_empty_message ( )	103:8:3279:3312	3385778	3	True				
ANR	3385838	CallExpression	mySock -> allow_one_empty_message ( )		3385778	0					
ANR	3385839	Callee	mySock -> allow_one_empty_message		3385778	0					
ANR	3385840	PtrMemberAccess	mySock -> allow_one_empty_message		3385778	0					
ANR	3385841	Identifier	mySock		3385778	0					
ANR	3385842	Identifier	allow_one_empty_message		3385778	1					
ANR	3385843	ArgumentList			3385778	1					
ANR	3385844	ReturnStatement	return retval ;	106:4:3331:3344	3385778	2	True				
ANR	3385845	Identifier	retval		3385778	0					
ANR	3385846	ReturnType	int		3385778	1					
ANR	3385847	Identifier	Authentication :: authenticate		3385778	2					
ANR	3385848	ParameterList	"char * hostAddr , KeyInfo * & key , const char * auth_methods , CondorError * errstack , int timeout"		3385778	3					
ANR	3385849	Parameter	char * hostAddr	88:34:2658:2671	3385778	0	True				
ANR	3385850	ParameterType	char *		3385778	0					
ANR	3385851	Identifier	hostAddr		3385778	1					
ANR	3385852	Parameter	KeyInfo * & key	88:50:2674:2687	3385778	1	True				
ANR	3385853	ParameterType	KeyInfo * &		3385778	0					
ANR	3385854	Identifier	key		3385778	1					
ANR	3385855	Parameter	const char * auth_methods	89:10:2701:2724	3385778	2	True				
ANR	3385856	ParameterType	const char *		3385778	0					
ANR	3385857	Identifier	auth_methods		3385778	1					
ANR	3385858	Parameter	CondorError * errstack	89:36:2727:2747	3385778	3	True				
ANR	3385859	ParameterType	CondorError *		3385778	0					
ANR	3385860	Identifier	errstack		3385778	1					
ANR	3385861	Parameter	int timeout	89:59:2750:2760	3385778	4	True				
ANR	3385862	ParameterType	int		3385778	0					
ANR	3385863	Identifier	timeout		3385778	1					
ANR	3385864	CFGEntryNode	ENTRY		3385778		True				
ANR	3385865	CFGExitNode	EXIT		3385778		True				
ANR	3385866	Symbol	mySock		3385778						
ANR	3385867	Symbol	AUTHENTICATE_ERR_KEYEXCHANGE_FAILED		3385778						
ANR	3385868	Symbol	authenticate		3385778						
ANR	3385869	Symbol	mySock -> allow_empty_message_flag		3385778						
ANR	3385870	Symbol	timeout		3385778						
ANR	3385871	Symbol	retval		3385778						
ANR	3385872	Symbol	* mySock		3385778						
ANR	3385873	Symbol	errstack		3385778						
ANR	3385874	Symbol	hostAddr		3385778						
ANR	3385875	Symbol	auth_methods		3385778						
ANR	3385876	Symbol	exchangeKey		3385778						
ANR	3385877	Symbol	FALSE		3385778						
ANR	3385878	Symbol	key		3385778						
ANR	3385879	Function	Authentication :: authenticate	109:0:3349:3703							
ANR	3385880	FunctionDef	"Authentication :: authenticate (char * hostAddr , const char * auth_methods , CondorError * errstack , int timeout)"		3385879	0					
ANR	3385881	CompoundStatement		111:0:3463:3703	3385879	0					
ANR	3385882	IdentifierDeclStatement	int retval ;	112:1:3466:3476	3385879	0	True				
ANR	3385883	IdentifierDecl	retval		3385879	0					
ANR	3385884	IdentifierDeclType	int		3385879	0					
ANR	3385885	Identifier	retval		3385879	1					
ANR	3385886	IdentifierDeclStatement	int old_timeout = 0 ;	113:1:3479:3496	3385879	1	True				
ANR	3385887	IdentifierDecl	old_timeout = 0		3385879	0					
ANR	3385888	IdentifierDeclType	int		3385879	0					
ANR	3385889	Identifier	old_timeout		3385879	1					
ANR	3385890	AssignmentExpression	old_timeout = 0		3385879	2		=			
ANR	3385891	Identifier	old_timeout		3385879	0					
ANR	3385892	PrimaryExpression	0		3385879	1					
ANR	3385893	IfStatement	if ( timeout >= 0 )		3385879	2					
ANR	3385894	Condition	timeout >= 0	114:5:3503:3512	3385879	0	True				
ANR	3385895	RelationalExpression	timeout >= 0		3385879	0		>=			
ANR	3385896	Identifier	timeout		3385879	0					
ANR	3385897	PrimaryExpression	0		3385879	1					
ANR	3385898	CompoundStatement		4:17:51:51	3385879	1					
ANR	3385899	ExpressionStatement	old_timeout = mySock -> timeout ( timeout )	115:2:3519:3555	3385879	0	True				
ANR	3385900	AssignmentExpression	old_timeout = mySock -> timeout ( timeout )		3385879	0		=			
ANR	3385901	Identifier	old_timeout		3385879	0					
ANR	3385902	CallExpression	mySock -> timeout ( timeout )		3385879	1					
ANR	3385903	Callee	mySock -> timeout		3385879	0					
ANR	3385904	PtrMemberAccess	mySock -> timeout		3385879	0					
ANR	3385905	Identifier	mySock		3385879	0					
ANR	3385906	Identifier	timeout		3385879	1					
ANR	3385907	ArgumentList	timeout		3385879	1					
ANR	3385908	Argument	timeout		3385879	0					
ANR	3385909	Identifier	timeout		3385879	0					
ANR	3385910	ExpressionStatement	"retval = authenticate_inner ( hostAddr , auth_methods , errstack , timeout )"	118:1:3562:3629	3385879	3	True				
ANR	3385911	AssignmentExpression	"retval = authenticate_inner ( hostAddr , auth_methods , errstack , timeout )"		3385879	0		=			
ANR	3385912	Identifier	retval		3385879	0					
ANR	3385913	CallExpression	"authenticate_inner ( hostAddr , auth_methods , errstack , timeout )"		3385879	1					
ANR	3385914	Callee	authenticate_inner		3385879	0					
ANR	3385915	Identifier	authenticate_inner		3385879	0					
ANR	3385916	ArgumentList	hostAddr		3385879	1					
ANR	3385917	Argument	hostAddr		3385879	0					
ANR	3385918	Identifier	hostAddr		3385879	0					
ANR	3385919	Argument	auth_methods		3385879	1					
ANR	3385920	Identifier	auth_methods		3385879	0					
ANR	3385921	Argument	errstack		3385879	2					
ANR	3385922	Identifier	errstack		3385879	0					
ANR	3385923	Argument	timeout		3385879	3					
ANR	3385924	Identifier	timeout		3385879	0					
ANR	3385925	IfStatement	if ( timeout >= 0 )		3385879	4					
ANR	3385926	Condition	timeout >= 0	120:5:3637:3646	3385879	0	True				
ANR	3385927	RelationalExpression	timeout >= 0		3385879	0		>=			
ANR	3385928	Identifier	timeout		3385879	0					
ANR	3385929	PrimaryExpression	0		3385879	1					
ANR	3385930	CompoundStatement		10:17:185:185	3385879	1					
ANR	3385931	ExpressionStatement	mySock -> timeout ( old_timeout )	121:2:3653:3681	3385879	0	True				
ANR	3385932	CallExpression	mySock -> timeout ( old_timeout )		3385879	0					
ANR	3385933	Callee	mySock -> timeout		3385879	0					
ANR	3385934	PtrMemberAccess	mySock -> timeout		3385879	0					
ANR	3385935	Identifier	mySock		3385879	0					
ANR	3385936	Identifier	timeout		3385879	1					
ANR	3385937	ArgumentList	old_timeout		3385879	1					
ANR	3385938	Argument	old_timeout		3385879	0					
ANR	3385939	Identifier	old_timeout		3385879	0					
ANR	3385940	ReturnStatement	return retval ;	124:1:3688:3701	3385879	5	True				
ANR	3385941	Identifier	retval		3385879	0					
ANR	3385942	ReturnType	int		3385879	1					
ANR	3385943	Identifier	Authentication :: authenticate		3385879	2					
ANR	3385944	ParameterList	"char * hostAddr , const char * auth_methods , CondorError * errstack , int timeout"		3385879	3					
ANR	3385945	Parameter	char * hostAddr	109:34:3383:3396	3385879	0	True				
ANR	3385946	ParameterType	char *		3385879	0					
ANR	3385947	Identifier	hostAddr		3385879	1					
ANR	3385948	Parameter	const char * auth_methods	109:50:3399:3422	3385879	1	True				
ANR	3385949	ParameterType	const char *		3385879	0					
ANR	3385950	Identifier	auth_methods		3385879	1					
ANR	3385951	Parameter	CondorError * errstack	110:2:3427:3447	3385879	2	True				
ANR	3385952	ParameterType	CondorError *		3385879	0					
ANR	3385953	Identifier	errstack		3385879	1					
ANR	3385954	Parameter	int timeout	110:25:3450:3460	3385879	3	True				
ANR	3385955	ParameterType	int		3385879	0					
ANR	3385956	Identifier	timeout		3385879	1					
ANR	3385957	CFGEntryNode	ENTRY		3385879		True				
ANR	3385958	CFGExitNode	EXIT		3385879		True				
ANR	3385959	Symbol	mySock		3385879						
ANR	3385960	Symbol	errstack		3385879						
ANR	3385961	Symbol	authenticate_inner		3385879						
ANR	3385962	Symbol	hostAddr		3385879						
ANR	3385963	Symbol	auth_methods		3385879						
ANR	3385964	Symbol	old_timeout		3385879						
ANR	3385965	Symbol	mySock -> timeout		3385879						
ANR	3385966	Symbol	timeout		3385879						
ANR	3385967	Symbol	retval		3385879						
ANR	3385968	Symbol	* mySock		3385879						
ANR	3385969	Function	Authentication :: authenticate_inner	127:0:3706:12541							
ANR	3385970	FunctionDef	"Authentication :: authenticate_inner (char * hostAddr , const char * auth_methods , CondorError * errstack , int timeout)"		3385969	0					
ANR	3385971	CompoundStatement		129:0:3826:12541	3385969	0					
ANR	3385972	ExpressionStatement	"dprintf ( D_ALWAYS , ""Skipping....\\n"" )"	131:1:3862:3897	3385969	0	True				
ANR	3385973	CallExpression	"dprintf ( D_ALWAYS , ""Skipping....\\n"" )"		3385969	0					
ANR	3385974	Callee	dprintf		3385969	0					
ANR	3385975	Identifier	dprintf		3385969	0					
ANR	3385976	ArgumentList	D_ALWAYS		3385969	1					
ANR	3385977	Argument	D_ALWAYS		3385969	0					
ANR	3385978	Identifier	D_ALWAYS		3385969	0					
ANR	3385979	Argument	"""Skipping....\\n"""		3385969	1					
ANR	3385980	PrimaryExpression	"""Skipping....\\n"""		3385969	0					
ANR	3385981	ReturnStatement	return 0 ;	136:1:4024:4032	3385969	1	True				
ANR	3385982	PrimaryExpression	0		3385969	0					
ANR	3385983	ReturnType	int		3385969	1					
ANR	3385984	Identifier	Authentication :: authenticate_inner		3385969	2					
ANR	3385985	ParameterList	"char * hostAddr , const char * auth_methods , CondorError * errstack , int timeout"		3385969	3					
ANR	3385986	Parameter	char * hostAddr	127:40:3746:3759	3385969	0	True				
ANR	3385987	ParameterType	char *		3385969	0					
ANR	3385988	Identifier	hostAddr		3385969	1					
ANR	3385989	Parameter	const char * auth_methods	127:56:3762:3785	3385969	1	True				
ANR	3385990	ParameterType	const char *		3385969	0					
ANR	3385991	Identifier	auth_methods		3385969	1					
ANR	3385992	Parameter	CondorError * errstack	128:2:3790:3810	3385969	2	True				
ANR	3385993	ParameterType	CondorError *		3385969	0					
ANR	3385994	Identifier	errstack		3385969	1					
ANR	3385995	Parameter	int timeout	128:25:3813:3823	3385969	3	True				
ANR	3385996	ParameterType	int		3385969	0					
ANR	3385997	Identifier	timeout		3385969	1					
ANR	3385998	CFGEntryNode	ENTRY		3385969		True				
ANR	3385999	CFGExitNode	EXIT		3385969		True				
ANR	3386000	Symbol	errstack		3385969						
ANR	3386001	Symbol	hostAddr		3385969						
ANR	3386002	Symbol	auth_methods		3385969						
ANR	3386003	Symbol	D_ALWAYS		3385969						
ANR	3386004	Symbol	timeout		3385969						
ANR	3386005	Function	Authentication :: reconfigMapFile	383:0:12544:12626							
ANR	3386006	FunctionDef	Authentication :: reconfigMapFile ()		3386005	0					
ANR	3386007	CompoundStatement		384:0:12583:12626	3386005	0					
ANR	3386008	ExpressionStatement	global_map_file_load_attempted = false	385:1:12586:12624	3386005	0	True				
ANR	3386009	AssignmentExpression	global_map_file_load_attempted = false		3386005	0		=			
ANR	3386010	Identifier	global_map_file_load_attempted		3386005	0					
ANR	3386011	Identifier	false		3386005	1					
ANR	3386012	ReturnType	void		3386005	1					
ANR	3386013	Identifier	Authentication :: reconfigMapFile		3386005	2					
ANR	3386014	ParameterList			3386005	3					
ANR	3386015	CFGEntryNode	ENTRY		3386005		True				
ANR	3386016	CFGExitNode	EXIT		3386005		True				
ANR	3386017	Symbol	global_map_file_load_attempted		3386005						
ANR	3386018	Symbol	false		3386005						
ANR	3386019	Function	Authentication :: map_authentication_name_to_canonical_name	393:0:12804:17252							
ANR	3386020	FunctionDef	"Authentication :: map_authentication_name_to_canonical_name (int authentication_type , const char * method_string , const char * authentication_name)"		3386019	0					
ANR	3386021	CompoundStatement		393:148:12952:17252	3386019	0					
ANR	3386022	IfStatement	if ( global_map_file_load_attempted == false )		3386019	0					
ANR	3386023	Condition	global_map_file_load_attempted == false	396:5:13029:13067	3386019	0	True				
ANR	3386024	EqualityExpression	global_map_file_load_attempted == false		3386019	0		==			
ANR	3386025	Identifier	global_map_file_load_attempted		3386019	0					
ANR	3386026	Identifier	false		3386019	1					
ANR	3386027	CompoundStatement		13:8:297:322	3386019	1					
ANR	3386028	IfStatement	if ( global_map_file )		3386019	0					
ANR	3386029	Condition	global_map_file	397:6:13078:13092	3386019	0	True				
ANR	3386030	Identifier	global_map_file		3386019	0					
ANR	3386031	CompoundStatement		5:23:142:142	3386019	1					
ANR	3386032	Statement	delete	398:3:13100:13105	3386019	0	True				
ANR	3386033	ExpressionStatement	global_map_file	398:10:13107:13122	3386019	1	True				
ANR	3386034	Identifier	global_map_file		3386019	0					
ANR	3386035	ExpressionStatement	global_map_file = NULL	399:3:13127:13149	3386019	2	True				
ANR	3386036	AssignmentExpression	global_map_file = NULL		3386019	0		=			
ANR	3386037	Identifier	global_map_file		3386019	0					
ANR	3386038	Identifier	NULL		3386019	1					
ANR	3386039	ExpressionStatement	global_map_file = new MapFile ( )	402:2:13158:13189	3386019	1	True				
ANR	3386040	AssignmentExpression	global_map_file = new MapFile ( )		3386019	0		=			
ANR	3386041	Identifier	global_map_file		3386019	0					
ANR	3386042	UnaryExpression	new MapFile ( )		3386019	1					
ANR	3386043	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: Parsing map file.\\n"" )"	404:2:13194:13240	3386019	2	True				
ANR	3386044	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: Parsing map file.\\n"" )"		3386019	0					
ANR	3386045	Callee	dprintf		3386019	0					
ANR	3386046	Identifier	dprintf		3386019	0					
ANR	3386047	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386048	Argument	D_ALWAYS		3386019	0					
ANR	3386049	Identifier	D_ALWAYS		3386019	0					
ANR	3386050	Argument	"""ZKM: Parsing map file.\\n"""		3386019	1					
ANR	3386051	PrimaryExpression	"""ZKM: Parsing map file.\\n"""		3386019	0					
ANR	3386052	IdentifierDeclStatement	char * credential_mapfile ;	405:8:13250:13275	3386019	3	True				
ANR	3386053	IdentifierDecl	* credential_mapfile		3386019	0					
ANR	3386054	IdentifierDeclType	char *		3386019	0					
ANR	3386055	Identifier	credential_mapfile		3386019	1					
ANR	3386056	IfStatement	"if ( NULL == ( credential_mapfile = param ( ""CERTIFICATE_MAPFILE"" ) ) )"		3386019	4					
ANR	3386057	Condition	"NULL == ( credential_mapfile = param ( ""CERTIFICATE_MAPFILE"" ) )"	406:12:13289:13347	3386019	0	True				
ANR	3386058	EqualityExpression	"NULL == ( credential_mapfile = param ( ""CERTIFICATE_MAPFILE"" ) )"		3386019	0		==			
ANR	3386059	Identifier	NULL		3386019	0					
ANR	3386060	AssignmentExpression	"credential_mapfile = param ( ""CERTIFICATE_MAPFILE"" )"		3386019	1		=			
ANR	3386061	Identifier	credential_mapfile		3386019	0					
ANR	3386062	CallExpression	"param ( ""CERTIFICATE_MAPFILE"" )"		3386019	1					
ANR	3386063	Callee	param		3386019	0					
ANR	3386064	Identifier	param		3386019	0					
ANR	3386065	ArgumentList	"""CERTIFICATE_MAPFILE"""		3386019	1					
ANR	3386066	Argument	"""CERTIFICATE_MAPFILE"""		3386019	0					
ANR	3386067	PrimaryExpression	"""CERTIFICATE_MAPFILE"""		3386019	0					
ANR	3386068	CompoundStatement		14:73:397:397	3386019	1					
ANR	3386069	ExpressionStatement	"dprintf ( D_SECURITY , ""ZKM: No CERTIFICATE_MAPFILE defined\\n"" )"	407:12:13364:13424	3386019	0	True				
ANR	3386070	CallExpression	"dprintf ( D_SECURITY , ""ZKM: No CERTIFICATE_MAPFILE defined\\n"" )"		3386019	0					
ANR	3386071	Callee	dprintf		3386019	0					
ANR	3386072	Identifier	dprintf		3386019	0					
ANR	3386073	ArgumentList	D_SECURITY		3386019	1					
ANR	3386074	Argument	D_SECURITY		3386019	0					
ANR	3386075	Identifier	D_SECURITY		3386019	0					
ANR	3386076	Argument	"""ZKM: No CERTIFICATE_MAPFILE defined\\n"""		3386019	1					
ANR	3386077	PrimaryExpression	"""ZKM: No CERTIFICATE_MAPFILE defined\\n"""		3386019	0					
ANR	3386078	Statement	delete	408:3:13429:13434	3386019	1	True				
ANR	3386079	ExpressionStatement	global_map_file	408:10:13436:13451	3386019	2	True				
ANR	3386080	Identifier	global_map_file		3386019	0					
ANR	3386081	ExpressionStatement	global_map_file = NULL	409:3:13456:13478	3386019	3	True				
ANR	3386082	AssignmentExpression	global_map_file = NULL		3386019	0		=			
ANR	3386083	Identifier	global_map_file		3386019	0					
ANR	3386084	Identifier	NULL		3386019	1					
ANR	3386085	ElseStatement	else		3386019	0					
ANR	3386086	CompoundStatement		19:9:553:561	3386019	0					
ANR	3386087	IdentifierDeclStatement	int line ;	411:9:13506:13514	3386019	0	True				
ANR	3386088	IdentifierDecl	line		3386019	0					
ANR	3386089	IdentifierDeclType	int		3386019	0					
ANR	3386090	Identifier	line		3386019	1					
ANR	3386091	IfStatement	if ( 0 != ( line = global_map_file -> ParseCanonicalizationFile ( credential_mapfile ) ) )		3386019	1					
ANR	3386092	Condition	0 != ( line = global_map_file -> ParseCanonicalizationFile ( credential_mapfile ) )	412:13:13529:13604	3386019	0	True				
ANR	3386093	EqualityExpression	0 != ( line = global_map_file -> ParseCanonicalizationFile ( credential_mapfile ) )		3386019	0		!=			
ANR	3386094	PrimaryExpression	0		3386019	0					
ANR	3386095	AssignmentExpression	line = global_map_file -> ParseCanonicalizationFile ( credential_mapfile )		3386019	1		=			
ANR	3386096	Identifier	line		3386019	0					
ANR	3386097	CallExpression	global_map_file -> ParseCanonicalizationFile ( credential_mapfile )		3386019	1					
ANR	3386098	Callee	global_map_file -> ParseCanonicalizationFile		3386019	0					
ANR	3386099	PtrMemberAccess	global_map_file -> ParseCanonicalizationFile		3386019	0					
ANR	3386100	Identifier	global_map_file		3386019	0					
ANR	3386101	Identifier	ParseCanonicalizationFile		3386019	1					
ANR	3386102	ArgumentList	credential_mapfile		3386019	1					
ANR	3386103	Argument	credential_mapfile		3386019	0					
ANR	3386104	Identifier	credential_mapfile		3386019	0					
ANR	3386105	CompoundStatement		20:91:654:654	3386019	1					
ANR	3386106	ExpressionStatement	"dprintf ( D_SECURITY , ""ZKM: Error parsing %s at line %d"" , credential_mapfile , line )"	413:13:13622:13703	3386019	0	True				
ANR	3386107	CallExpression	"dprintf ( D_SECURITY , ""ZKM: Error parsing %s at line %d"" , credential_mapfile , line )"		3386019	0					
ANR	3386108	Callee	dprintf		3386019	0					
ANR	3386109	Identifier	dprintf		3386019	0					
ANR	3386110	ArgumentList	D_SECURITY		3386019	1					
ANR	3386111	Argument	D_SECURITY		3386019	0					
ANR	3386112	Identifier	D_SECURITY		3386019	0					
ANR	3386113	Argument	"""ZKM: Error parsing %s at line %d"""		3386019	1					
ANR	3386114	PrimaryExpression	"""ZKM: Error parsing %s at line %d"""		3386019	0					
ANR	3386115	Argument	credential_mapfile		3386019	2					
ANR	3386116	Identifier	credential_mapfile		3386019	0					
ANR	3386117	Argument	line		3386019	3					
ANR	3386118	Identifier	line		3386019	0					
ANR	3386119	Statement	delete	414:4:13709:13714	3386019	1	True				
ANR	3386120	ExpressionStatement	global_map_file	414:11:13716:13731	3386019	2	True				
ANR	3386121	Identifier	global_map_file		3386019	0					
ANR	3386122	ExpressionStatement	global_map_file = NULL	415:4:13737:13759	3386019	3	True				
ANR	3386123	AssignmentExpression	global_map_file = NULL		3386019	0		=			
ANR	3386124	Identifier	global_map_file		3386019	0					
ANR	3386125	Identifier	NULL		3386019	1					
ANR	3386126	ExpressionStatement	free ( credential_mapfile )	417:3:13769:13795	3386019	2	True				
ANR	3386127	CallExpression	free ( credential_mapfile )		3386019	0					
ANR	3386128	Callee	free		3386019	0					
ANR	3386129	Identifier	free		3386019	0					
ANR	3386130	ArgumentList	credential_mapfile		3386019	1					
ANR	3386131	Argument	credential_mapfile		3386019	0					
ANR	3386132	Identifier	credential_mapfile		3386019	0					
ANR	3386133	ExpressionStatement	global_map_file_load_attempted = true	419:2:13803:13840	3386019	5	True				
ANR	3386134	AssignmentExpression	global_map_file_load_attempted = true		3386019	0		=			
ANR	3386135	Identifier	global_map_file_load_attempted		3386019	0					
ANR	3386136	Identifier	true		3386019	1					
ANR	3386137	ElseStatement	else		3386019	0					
ANR	3386138	CompoundStatement		28:8:897:897	3386019	0					
ANR	3386139	ExpressionStatement	"dprintf ( D_SECURITY , ""ZKM: map file already loaded.\\n"" )"	421:2:13854:13909	3386019	0	True				
ANR	3386140	CallExpression	"dprintf ( D_SECURITY , ""ZKM: map file already loaded.\\n"" )"		3386019	0					
ANR	3386141	Callee	dprintf		3386019	0					
ANR	3386142	Identifier	dprintf		3386019	0					
ANR	3386143	ArgumentList	D_SECURITY		3386019	1					
ANR	3386144	Argument	D_SECURITY		3386019	0					
ANR	3386145	Identifier	D_SECURITY		3386019	0					
ANR	3386146	Argument	"""ZKM: map file already loaded.\\n"""		3386019	1					
ANR	3386147	PrimaryExpression	"""ZKM: map file already loaded.\\n"""		3386019	0					
ANR	3386148	IfStatement	if ( globus_activated == false )		3386019	1					
ANR	3386149	Condition	globus_activated == false	425:5:13949:13973	3386019	0	True				
ANR	3386150	EqualityExpression	globus_activated == false		3386019	0		==			
ANR	3386151	Identifier	globus_activated		3386019	0					
ANR	3386152	Identifier	false		3386019	1					
ANR	3386153	CompoundStatement		33:32:1023:1023	3386019	1					
ANR	3386154	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Activating Globus GSI_GSSAPI_ASSIST module.\\n"" )"	426:2:13980:14050	3386019	0	True				
ANR	3386155	CallExpression	"dprintf ( D_FULLDEBUG , ""Activating Globus GSI_GSSAPI_ASSIST module.\\n"" )"		3386019	0					
ANR	3386156	Callee	dprintf		3386019	0					
ANR	3386157	Identifier	dprintf		3386019	0					
ANR	3386158	ArgumentList	D_FULLDEBUG		3386019	1					
ANR	3386159	Argument	D_FULLDEBUG		3386019	0					
ANR	3386160	Identifier	D_FULLDEBUG		3386019	0					
ANR	3386161	Argument	"""Activating Globus GSI_GSSAPI_ASSIST module.\\n"""		3386019	1					
ANR	3386162	PrimaryExpression	"""Activating Globus GSI_GSSAPI_ASSIST module.\\n"""		3386019	0					
ANR	3386163	ExpressionStatement	globus_module_activate ( GLOBUS_GSI_GSS_ASSIST_MODULE )	427:2:14054:14106	3386019	1	True				
ANR	3386164	CallExpression	globus_module_activate ( GLOBUS_GSI_GSS_ASSIST_MODULE )		3386019	0					
ANR	3386165	Callee	globus_module_activate		3386019	0					
ANR	3386166	Identifier	globus_module_activate		3386019	0					
ANR	3386167	ArgumentList	GLOBUS_GSI_GSS_ASSIST_MODULE		3386019	1					
ANR	3386168	Argument	GLOBUS_GSI_GSS_ASSIST_MODULE		3386019	0					
ANR	3386169	Identifier	GLOBUS_GSI_GSS_ASSIST_MODULE		3386019	0					
ANR	3386170	ExpressionStatement	globus_activated = true	428:2:14110:14133	3386019	2	True				
ANR	3386171	AssignmentExpression	globus_activated = true		3386019	0		=			
ANR	3386172	Identifier	globus_activated		3386019	0					
ANR	3386173	Identifier	true		3386019	1					
ANR	3386174	ExpressionStatement	"dprintf ( D_SECURITY , ""ZKM: attempting to map '%s'\\n"" , authentication_name )"	433:1:14154:14228	3386019	2	True				
ANR	3386175	CallExpression	"dprintf ( D_SECURITY , ""ZKM: attempting to map '%s'\\n"" , authentication_name )"		3386019	0					
ANR	3386176	Callee	dprintf		3386019	0					
ANR	3386177	Identifier	dprintf		3386019	0					
ANR	3386178	ArgumentList	D_SECURITY		3386019	1					
ANR	3386179	Argument	D_SECURITY		3386019	0					
ANR	3386180	Identifier	D_SECURITY		3386019	0					
ANR	3386181	Argument	"""ZKM: attempting to map '%s'\\n"""		3386019	1					
ANR	3386182	PrimaryExpression	"""ZKM: attempting to map '%s'\\n"""		3386019	0					
ANR	3386183	Argument	authentication_name		3386019	2					
ANR	3386184	Identifier	authentication_name		3386019	0					
ANR	3386185	IdentifierDeclStatement	MyString auth_name_to_map = authentication_name ;	436:1:14288:14335	3386019	3	True				
ANR	3386186	IdentifierDecl	auth_name_to_map = authentication_name		3386019	0					
ANR	3386187	IdentifierDeclType	MyString		3386019	0					
ANR	3386188	Identifier	auth_name_to_map		3386019	1					
ANR	3386189	AssignmentExpression	auth_name_to_map = authentication_name		3386019	2		=			
ANR	3386190	Identifier	authentication_name		3386019	0					
ANR	3386191	Identifier	authentication_name		3386019	1					
ANR	3386192	IdentifierDeclStatement	bool included_voms = false ;	438:1:14339:14365	3386019	4	True				
ANR	3386193	IdentifierDecl	included_voms = false		3386019	0					
ANR	3386194	IdentifierDeclType	bool		3386019	0					
ANR	3386195	Identifier	included_voms		3386019	1					
ANR	3386196	AssignmentExpression	included_voms = false		3386019	2		=			
ANR	3386197	Identifier	false		3386019	0					
ANR	3386198	Identifier	false		3386019	1					
ANR	3386199	IfStatement	if ( authentication_type == CAUTH_GSI )		3386019	5					
ANR	3386200	Condition	authentication_type == CAUTH_GSI	442:5:14459:14490	3386019	0	True				
ANR	3386201	EqualityExpression	authentication_type == CAUTH_GSI		3386019	0		==			
ANR	3386202	Identifier	authentication_type		3386019	0					
ANR	3386203	Identifier	CAUTH_GSI		3386019	1					
ANR	3386204	CompoundStatement		51:2:1544:1609	3386019	1					
ANR	3386205	IdentifierDeclStatement	const char * fqan = ( ( Condor_Auth_X509 * ) authenticator_ ) -> getFQAN ( ) ;	443:2:14497:14562	3386019	0	True				
ANR	3386206	IdentifierDecl	* fqan = ( ( Condor_Auth_X509 * ) authenticator_ ) -> getFQAN ( )		3386019	0					
ANR	3386207	IdentifierDeclType	const char *		3386019	0					
ANR	3386208	Identifier	fqan		3386019	1					
ANR	3386209	AssignmentExpression	* fqan = ( ( Condor_Auth_X509 * ) authenticator_ ) -> getFQAN ( )		3386019	2		=			
ANR	3386210	Identifier	fqan		3386019	0					
ANR	3386211	CallExpression	( ( Condor_Auth_X509 * ) authenticator_ ) -> getFQAN ( )		3386019	1					
ANR	3386212	Callee	( ( Condor_Auth_X509 * ) authenticator_ ) -> getFQAN		3386019	0					
ANR	3386213	PtrMemberAccess	( ( Condor_Auth_X509 * ) authenticator_ ) -> getFQAN		3386019	0					
ANR	3386214	CastExpression	( Condor_Auth_X509 * ) authenticator_		3386019	0					
ANR	3386215	CastTarget	Condor_Auth_X509 *		3386019	0					
ANR	3386216	Identifier	authenticator_		3386019	1					
ANR	3386217	Identifier	getFQAN		3386019	1					
ANR	3386218	ArgumentList			3386019	1					
ANR	3386219	IfStatement	if ( fqan && fqan [ 0 ] )		3386019	1					
ANR	3386220	Condition	fqan && fqan [ 0 ]	444:6:14570:14584	3386019	0	True				
ANR	3386221	AndExpression	fqan && fqan [ 0 ]		3386019	0		&&			
ANR	3386222	Identifier	fqan		3386019	0					
ANR	3386223	ArrayIndexing	fqan [ 0 ]		3386019	1					
ANR	3386224	Identifier	fqan		3386019	0					
ANR	3386225	PrimaryExpression	0		3386019	1					
ANR	3386226	CompoundStatement		52:23:1634:1634	3386019	1					
ANR	3386227	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: GSI was used, and FQAN is present.\\n"" )"	445:3:14592:14655	3386019	0	True				
ANR	3386228	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: GSI was used, and FQAN is present.\\n"" )"		3386019	0					
ANR	3386229	Callee	dprintf		3386019	0					
ANR	3386230	Identifier	dprintf		3386019	0					
ANR	3386231	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386232	Argument	D_ALWAYS		3386019	0					
ANR	3386233	Identifier	D_ALWAYS		3386019	0					
ANR	3386234	Argument	"""ZKM: GSI was used, and FQAN is present.\\n"""		3386019	1					
ANR	3386235	PrimaryExpression	"""ZKM: GSI was used, and FQAN is present.\\n"""		3386019	0					
ANR	3386236	ExpressionStatement	auth_name_to_map = fqan	446:3:14660:14683	3386019	1	True				
ANR	3386237	AssignmentExpression	auth_name_to_map = fqan		3386019	0		=			
ANR	3386238	Identifier	auth_name_to_map		3386019	0					
ANR	3386239	Identifier	fqan		3386019	1					
ANR	3386240	ExpressionStatement	included_voms = true	447:3:14688:14708	3386019	2	True				
ANR	3386241	AssignmentExpression	included_voms = true		3386019	0		=			
ANR	3386242	Identifier	included_voms		3386019	0					
ANR	3386243	Identifier	true		3386019	1					
ANR	3386244	IfStatement	if ( global_map_file )		3386019	6					
ANR	3386245	Condition	global_map_file	452:5:14730:14744	3386019	0	True				
ANR	3386246	Identifier	global_map_file		3386019	0					
ANR	3386247	CompoundStatement		64:2:1910:2017	3386019	1					
ANR	3386248	IdentifierDeclStatement	MyString canonical_user ;	453:2:14751:14774	3386019	0	True				
ANR	3386249	IdentifierDecl	canonical_user		3386019	0					
ANR	3386250	IdentifierDeclType	MyString		3386019	0					
ANR	3386251	Identifier	canonical_user		3386019	1					
ANR	3386252	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: 1: attempting to map '%s'\\n"" , auth_name_to_map . Value ( ) )"	455:2:14779:14859	3386019	1	True				
ANR	3386253	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: 1: attempting to map '%s'\\n"" , auth_name_to_map . Value ( ) )"		3386019	0					
ANR	3386254	Callee	dprintf		3386019	0					
ANR	3386255	Identifier	dprintf		3386019	0					
ANR	3386256	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386257	Argument	D_ALWAYS		3386019	0					
ANR	3386258	Identifier	D_ALWAYS		3386019	0					
ANR	3386259	Argument	"""ZKM: 1: attempting to map '%s'\\n"""		3386019	1					
ANR	3386260	PrimaryExpression	"""ZKM: 1: attempting to map '%s'\\n"""		3386019	0					
ANR	3386261	Argument	auth_name_to_map . Value ( )		3386019	2					
ANR	3386262	CallExpression	auth_name_to_map . Value ( )		3386019	0					
ANR	3386263	Callee	auth_name_to_map . Value		3386019	0					
ANR	3386264	MemberAccess	auth_name_to_map . Value		3386019	0					
ANR	3386265	Identifier	auth_name_to_map		3386019	0					
ANR	3386266	Identifier	Value		3386019	1					
ANR	3386267	ArgumentList			3386019	1					
ANR	3386268	IdentifierDeclStatement	"bool mapret = global_map_file -> GetCanonicalization ( method_string , auth_name_to_map . Value ( ) , canonical_user ) ;"	456:2:14863:14970	3386019	2	True				
ANR	3386269	IdentifierDecl	"mapret = global_map_file -> GetCanonicalization ( method_string , auth_name_to_map . Value ( ) , canonical_user )"		3386019	0					
ANR	3386270	IdentifierDeclType	bool		3386019	0					
ANR	3386271	Identifier	mapret		3386019	1					
ANR	3386272	AssignmentExpression	"mapret = global_map_file -> GetCanonicalization ( method_string , auth_name_to_map . Value ( ) , canonical_user )"		3386019	2		=			
ANR	3386273	Identifier	mapret		3386019	0					
ANR	3386274	CallExpression	"global_map_file -> GetCanonicalization ( method_string , auth_name_to_map . Value ( ) , canonical_user )"		3386019	1					
ANR	3386275	Callee	global_map_file -> GetCanonicalization		3386019	0					
ANR	3386276	PtrMemberAccess	global_map_file -> GetCanonicalization		3386019	0					
ANR	3386277	Identifier	global_map_file		3386019	0					
ANR	3386278	Identifier	GetCanonicalization		3386019	1					
ANR	3386279	ArgumentList	method_string		3386019	1					
ANR	3386280	Argument	method_string		3386019	0					
ANR	3386281	Identifier	method_string		3386019	0					
ANR	3386282	Argument	auth_name_to_map . Value ( )		3386019	1					
ANR	3386283	CallExpression	auth_name_to_map . Value ( )		3386019	0					
ANR	3386284	Callee	auth_name_to_map . Value		3386019	0					
ANR	3386285	MemberAccess	auth_name_to_map . Value		3386019	0					
ANR	3386286	Identifier	auth_name_to_map		3386019	0					
ANR	3386287	Identifier	Value		3386019	1					
ANR	3386288	ArgumentList			3386019	1					
ANR	3386289	Argument	canonical_user		3386019	2					
ANR	3386290	Identifier	canonical_user		3386019	0					
ANR	3386291	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: 2: mapret: %i included_voms: %i canonical_user: %s\\n"" , mapret , included_voms , canonical_user . Value ( ) )"	457:2:14974:15100	3386019	3	True				
ANR	3386292	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: 2: mapret: %i included_voms: %i canonical_user: %s\\n"" , mapret , included_voms , canonical_user . Value ( ) )"		3386019	0					
ANR	3386293	Callee	dprintf		3386019	0					
ANR	3386294	Identifier	dprintf		3386019	0					
ANR	3386295	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386296	Argument	D_ALWAYS		3386019	0					
ANR	3386297	Identifier	D_ALWAYS		3386019	0					
ANR	3386298	Argument	"""ZKM: 2: mapret: %i included_voms: %i canonical_user: %s\\n"""		3386019	1					
ANR	3386299	PrimaryExpression	"""ZKM: 2: mapret: %i included_voms: %i canonical_user: %s\\n"""		3386019	0					
ANR	3386300	Argument	mapret		3386019	2					
ANR	3386301	Identifier	mapret		3386019	0					
ANR	3386302	Argument	included_voms		3386019	3					
ANR	3386303	Identifier	included_voms		3386019	0					
ANR	3386304	Argument	canonical_user . Value ( )		3386019	4					
ANR	3386305	CallExpression	canonical_user . Value ( )		3386019	0					
ANR	3386306	Callee	canonical_user . Value		3386019	0					
ANR	3386307	MemberAccess	canonical_user . Value		3386019	0					
ANR	3386308	Identifier	canonical_user		3386019	0					
ANR	3386309	Identifier	Value		3386019	1					
ANR	3386310	ArgumentList			3386019	1					
ANR	3386311	IfStatement	if ( mapret && included_voms )		3386019	4					
ANR	3386312	Condition	mapret && included_voms	460:6:15192:15214	3386019	0	True				
ANR	3386313	AndExpression	mapret && included_voms		3386019	0		&&			
ANR	3386314	Identifier	mapret		3386019	0					
ANR	3386315	Identifier	included_voms		3386019	1					
ANR	3386316	CompoundStatement		68:31:2264:2264	3386019	1					
ANR	3386317	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: now attempting to map '%s'\\n"" , authentication_name )"	461:3:15222:15298	3386019	0	True				
ANR	3386318	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: now attempting to map '%s'\\n"" , authentication_name )"		3386019	0					
ANR	3386319	Callee	dprintf		3386019	0					
ANR	3386320	Identifier	dprintf		3386019	0					
ANR	3386321	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386322	Argument	D_ALWAYS		3386019	0					
ANR	3386323	Identifier	D_ALWAYS		3386019	0					
ANR	3386324	Argument	"""ZKM: now attempting to map '%s'\\n"""		3386019	1					
ANR	3386325	PrimaryExpression	"""ZKM: now attempting to map '%s'\\n"""		3386019	0					
ANR	3386326	Argument	authentication_name		3386019	2					
ANR	3386327	Identifier	authentication_name		3386019	0					
ANR	3386328	ExpressionStatement	"mapret = global_map_file -> GetCanonicalization ( method_string , authentication_name , canonical_user )"	462:3:15303:15400	3386019	1	True				
ANR	3386329	AssignmentExpression	"mapret = global_map_file -> GetCanonicalization ( method_string , authentication_name , canonical_user )"		3386019	0		=			
ANR	3386330	Identifier	mapret		3386019	0					
ANR	3386331	CallExpression	"global_map_file -> GetCanonicalization ( method_string , authentication_name , canonical_user )"		3386019	1					
ANR	3386332	Callee	global_map_file -> GetCanonicalization		3386019	0					
ANR	3386333	PtrMemberAccess	global_map_file -> GetCanonicalization		3386019	0					
ANR	3386334	Identifier	global_map_file		3386019	0					
ANR	3386335	Identifier	GetCanonicalization		3386019	1					
ANR	3386336	ArgumentList	method_string		3386019	1					
ANR	3386337	Argument	method_string		3386019	0					
ANR	3386338	Identifier	method_string		3386019	0					
ANR	3386339	Argument	authentication_name		3386019	1					
ANR	3386340	Identifier	authentication_name		3386019	0					
ANR	3386341	Argument	canonical_user		3386019	2					
ANR	3386342	Identifier	canonical_user		3386019	0					
ANR	3386343	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: now 2: mapret: %i included_voms: %i canonical_user: %s\\n"" , mapret , included_voms , canonical_user . Value ( ) )"	463:3:15405:15535	3386019	2	True				
ANR	3386344	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: now 2: mapret: %i included_voms: %i canonical_user: %s\\n"" , mapret , included_voms , canonical_user . Value ( ) )"		3386019	0					
ANR	3386345	Callee	dprintf		3386019	0					
ANR	3386346	Identifier	dprintf		3386019	0					
ANR	3386347	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386348	Argument	D_ALWAYS		3386019	0					
ANR	3386349	Identifier	D_ALWAYS		3386019	0					
ANR	3386350	Argument	"""ZKM: now 2: mapret: %i included_voms: %i canonical_user: %s\\n"""		3386019	1					
ANR	3386351	PrimaryExpression	"""ZKM: now 2: mapret: %i included_voms: %i canonical_user: %s\\n"""		3386019	0					
ANR	3386352	Argument	mapret		3386019	2					
ANR	3386353	Identifier	mapret		3386019	0					
ANR	3386354	Argument	included_voms		3386019	3					
ANR	3386355	Identifier	included_voms		3386019	0					
ANR	3386356	Argument	canonical_user . Value ( )		3386019	4					
ANR	3386357	CallExpression	canonical_user . Value ( )		3386019	0					
ANR	3386358	Callee	canonical_user . Value		3386019	0					
ANR	3386359	MemberAccess	canonical_user . Value		3386019	0					
ANR	3386360	Identifier	canonical_user		3386019	0					
ANR	3386361	Identifier	Value		3386019	1					
ANR	3386362	ArgumentList			3386019	1					
ANR	3386363	IfStatement	if ( ! mapret )		3386019	5					
ANR	3386364	Condition	! mapret	466:6:15548:15554	3386019	0	True				
ANR	3386365	UnaryOperationExpression	! mapret		3386019	0					
ANR	3386366	UnaryOperator	!		3386019	0					
ANR	3386367	Identifier	mapret		3386019	1					
ANR	3386368	CompoundStatement		74:15:2604:2604	3386019	1					
ANR	3386369	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: successful mapping to %s\\n"" , canonical_user . Value ( ) )"	468:3:15593:15670	3386019	0	True				
ANR	3386370	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: successful mapping to %s\\n"" , canonical_user . Value ( ) )"		3386019	0					
ANR	3386371	Callee	dprintf		3386019	0					
ANR	3386372	Identifier	dprintf		3386019	0					
ANR	3386373	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386374	Argument	D_ALWAYS		3386019	0					
ANR	3386375	Identifier	D_ALWAYS		3386019	0					
ANR	3386376	Argument	"""ZKM: successful mapping to %s\\n"""		3386019	1					
ANR	3386377	PrimaryExpression	"""ZKM: successful mapping to %s\\n"""		3386019	0					
ANR	3386378	Argument	canonical_user . Value ( )		3386019	2					
ANR	3386379	CallExpression	canonical_user . Value ( )		3386019	0					
ANR	3386380	Callee	canonical_user . Value		3386019	0					
ANR	3386381	MemberAccess	canonical_user . Value		3386019	0					
ANR	3386382	Identifier	canonical_user		3386019	0					
ANR	3386383	Identifier	Value		3386019	1					
ANR	3386384	ArgumentList			3386019	1					
ANR	3386385	IfStatement	"if ( ( authentication_type == CAUTH_GSI ) && ( canonical_user == ""GSS_ASSIST_GRIDMAP"" ) )"		3386019	1					
ANR	3386386	Condition	"( authentication_type == CAUTH_GSI ) && ( canonical_user == ""GSS_ASSIST_GRIDMAP"" )"	477:7:16004:16081	3386019	0	True				
ANR	3386387	AndExpression	"( authentication_type == CAUTH_GSI ) && ( canonical_user == ""GSS_ASSIST_GRIDMAP"" )"		3386019	0		&&			
ANR	3386388	EqualityExpression	authentication_type == CAUTH_GSI		3386019	0		==			
ANR	3386389	Identifier	authentication_type		3386019	0					
ANR	3386390	Identifier	CAUTH_GSI		3386019	1					
ANR	3386391	EqualityExpression	"canonical_user == ""GSS_ASSIST_GRIDMAP"""		3386019	1		==			
ANR	3386392	Identifier	canonical_user		3386019	0					
ANR	3386393	PrimaryExpression	"""GSS_ASSIST_GRIDMAP"""		3386019	1					
ANR	3386394	CompoundStatement		85:87:3131:3131	3386019	1					
ANR	3386395	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: GRIDMAPPED!\\n"" )"	489:4:16576:16616	3386019	0	True				
ANR	3386396	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: GRIDMAPPED!\\n"" )"		3386019	0					
ANR	3386397	Callee	dprintf		3386019	0					
ANR	3386398	Identifier	dprintf		3386019	0					
ANR	3386399	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386400	Argument	D_ALWAYS		3386019	0					
ANR	3386401	Identifier	D_ALWAYS		3386019	0					
ANR	3386402	Argument	"""ZKM: GRIDMAPPED!\\n"""		3386019	1					
ANR	3386403	PrimaryExpression	"""ZKM: GRIDMAPPED!\\n"""		3386019	0					
ANR	3386404	ReturnStatement	return ;	493:4:16700:16706	3386019	1	True				
ANR	3386405	ElseStatement	else		3386019	0					
ANR	3386406	CompoundStatement		107:4:3878:3893	3386019	0					
ANR	3386407	ExpressionStatement	"dprintf ( D_SECURITY , ""ZKM: found user %s, splitting.\\n"" , canonical_user . Value ( ) )"	496:4:16725:16805	3386019	0	True				
ANR	3386408	CallExpression	"dprintf ( D_SECURITY , ""ZKM: found user %s, splitting.\\n"" , canonical_user . Value ( ) )"		3386019	0					
ANR	3386409	Callee	dprintf		3386019	0					
ANR	3386410	Identifier	dprintf		3386019	0					
ANR	3386411	ArgumentList	D_SECURITY		3386019	1					
ANR	3386412	Argument	D_SECURITY		3386019	0					
ANR	3386413	Identifier	D_SECURITY		3386019	0					
ANR	3386414	Argument	"""ZKM: found user %s, splitting.\\n"""		3386019	1					
ANR	3386415	PrimaryExpression	"""ZKM: found user %s, splitting.\\n"""		3386019	0					
ANR	3386416	Argument	canonical_user . Value ( )		3386019	2					
ANR	3386417	CallExpression	canonical_user . Value ( )		3386019	0					
ANR	3386418	Callee	canonical_user . Value		3386019	0					
ANR	3386419	MemberAccess	canonical_user . Value		3386019	0					
ANR	3386420	Identifier	canonical_user		3386019	0					
ANR	3386421	Identifier	Value		3386019	1					
ANR	3386422	ArgumentList			3386019	1					
ANR	3386423	IdentifierDeclStatement	MyString user ;	498:4:16812:16825	3386019	1	True				
ANR	3386424	IdentifierDecl	user		3386019	0					
ANR	3386425	IdentifierDeclType	MyString		3386019	0					
ANR	3386426	Identifier	user		3386019	1					
ANR	3386427	IdentifierDeclStatement	MyString domain ;	499:4:16831:16846	3386019	2	True				
ANR	3386428	IdentifierDecl	domain		3386019	0					
ANR	3386429	IdentifierDeclType	MyString		3386019	0					
ANR	3386430	Identifier	domain		3386019	1					
ANR	3386431	ExpressionStatement	"split_canonical_name ( canonical_user , user , domain )"	502:4:16886:16937	3386019	3	True				
ANR	3386432	CallExpression	"split_canonical_name ( canonical_user , user , domain )"		3386019	0					
ANR	3386433	Callee	split_canonical_name		3386019	0					
ANR	3386434	Identifier	split_canonical_name		3386019	0					
ANR	3386435	ArgumentList	canonical_user		3386019	1					
ANR	3386436	Argument	canonical_user		3386019	0					
ANR	3386437	Identifier	canonical_user		3386019	0					
ANR	3386438	Argument	user		3386019	1					
ANR	3386439	Identifier	user		3386019	0					
ANR	3386440	Argument	domain		3386019	2					
ANR	3386441	Identifier	domain		3386019	0					
ANR	3386442	ExpressionStatement	authenticator_ -> setRemoteUser ( user . Value ( ) )	504:4:16944:16989	3386019	4	True				
ANR	3386443	CallExpression	authenticator_ -> setRemoteUser ( user . Value ( ) )		3386019	0					
ANR	3386444	Callee	authenticator_ -> setRemoteUser		3386019	0					
ANR	3386445	PtrMemberAccess	authenticator_ -> setRemoteUser		3386019	0					
ANR	3386446	Identifier	authenticator_		3386019	0					
ANR	3386447	Identifier	setRemoteUser		3386019	1					
ANR	3386448	ArgumentList	user . Value ( )		3386019	1					
ANR	3386449	Argument	user . Value ( )		3386019	0					
ANR	3386450	CallExpression	user . Value ( )		3386019	0					
ANR	3386451	Callee	user . Value		3386019	0					
ANR	3386452	MemberAccess	user . Value		3386019	0					
ANR	3386453	Identifier	user		3386019	0					
ANR	3386454	Identifier	Value		3386019	1					
ANR	3386455	ArgumentList			3386019	1					
ANR	3386456	ExpressionStatement	authenticator_ -> setRemoteDomain ( domain . Value ( ) )	505:4:16995:17044	3386019	5	True				
ANR	3386457	CallExpression	authenticator_ -> setRemoteDomain ( domain . Value ( ) )		3386019	0					
ANR	3386458	Callee	authenticator_ -> setRemoteDomain		3386019	0					
ANR	3386459	PtrMemberAccess	authenticator_ -> setRemoteDomain		3386019	0					
ANR	3386460	Identifier	authenticator_		3386019	0					
ANR	3386461	Identifier	setRemoteDomain		3386019	1					
ANR	3386462	ArgumentList	domain . Value ( )		3386019	1					
ANR	3386463	Argument	domain . Value ( )		3386019	0					
ANR	3386464	CallExpression	domain . Value ( )		3386019	0					
ANR	3386465	Callee	domain . Value		3386019	0					
ANR	3386466	MemberAccess	domain . Value		3386019	0					
ANR	3386467	Identifier	domain		3386019	0					
ANR	3386468	Identifier	Value		3386019	1					
ANR	3386469	ArgumentList			3386019	1					
ANR	3386470	ReturnStatement	return ;	508:4:17070:17076	3386019	6	True				
ANR	3386471	ElseStatement	else		3386019	0					
ANR	3386472	CompoundStatement		118:9:4139:4139	3386019	0					
ANR	3386473	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: did not find user %s.\\n"" , canonical_user . Value ( ) )"	511:3:17097:17171	3386019	0	True				
ANR	3386474	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: did not find user %s.\\n"" , canonical_user . Value ( ) )"		3386019	0					
ANR	3386475	Callee	dprintf		3386019	0					
ANR	3386476	Identifier	dprintf		3386019	0					
ANR	3386477	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386478	Argument	D_ALWAYS		3386019	0					
ANR	3386479	Identifier	D_ALWAYS		3386019	0					
ANR	3386480	Argument	"""ZKM: did not find user %s.\\n"""		3386019	1					
ANR	3386481	PrimaryExpression	"""ZKM: did not find user %s.\\n"""		3386019	0					
ANR	3386482	Argument	canonical_user . Value ( )		3386019	2					
ANR	3386483	CallExpression	canonical_user . Value ( )		3386019	0					
ANR	3386484	Callee	canonical_user . Value		3386019	0					
ANR	3386485	MemberAccess	canonical_user . Value		3386019	0					
ANR	3386486	Identifier	canonical_user		3386019	0					
ANR	3386487	Identifier	Value		3386019	1					
ANR	3386488	ArgumentList			3386019	1					
ANR	3386489	ElseStatement	else		3386019	0					
ANR	3386490	CompoundStatement		121:8:4232:4232	3386019	0					
ANR	3386491	ExpressionStatement	"dprintf ( D_ALWAYS , ""ZKM: global_map_file not present!\\n"" )"	514:2:17189:17246	3386019	0	True				
ANR	3386492	CallExpression	"dprintf ( D_ALWAYS , ""ZKM: global_map_file not present!\\n"" )"		3386019	0					
ANR	3386493	Callee	dprintf		3386019	0					
ANR	3386494	Identifier	dprintf		3386019	0					
ANR	3386495	ArgumentList	D_ALWAYS		3386019	1					
ANR	3386496	Argument	D_ALWAYS		3386019	0					
ANR	3386497	Identifier	D_ALWAYS		3386019	0					
ANR	3386498	Argument	"""ZKM: global_map_file not present!\\n"""		3386019	1					
ANR	3386499	PrimaryExpression	"""ZKM: global_map_file not present!\\n"""		3386019	0					
ANR	3386500	ReturnType	void		3386019	1					
ANR	3386501	Identifier	Authentication :: map_authentication_name_to_canonical_name		3386019	2					
ANR	3386502	ParameterList	"int authentication_type , const char * method_string , const char * authentication_name"		3386019	3					
ANR	3386503	Parameter	int authentication_type	393:63:12867:12889	3386019	0	True				
ANR	3386504	ParameterType	int		3386019	0					
ANR	3386505	Identifier	authentication_type		3386019	1					
ANR	3386506	Parameter	const char * method_string	393:88:12892:12916	3386019	1	True				
ANR	3386507	ParameterType	const char *		3386019	0					
ANR	3386508	Identifier	method_string		3386019	1					
ANR	3386509	Parameter	const char * authentication_name	393:115:12919:12949	3386019	2	True				
ANR	3386510	ParameterType	const char *		3386019	0					
ANR	3386511	Identifier	authentication_name		3386019	1					
ANR	3386512	CFGEntryNode	ENTRY		3386019		True				
ANR	3386513	CFGExitNode	EXIT		3386019		True				
ANR	3386514	Symbol	* authenticator_		3386019						
ANR	3386515	Symbol	global_map_file		3386019						
ANR	3386516	Symbol	D_SECURITY		3386019						
ANR	3386517	Symbol	auth_name_to_map		3386019						
ANR	3386518	Symbol	line		3386019						
ANR	3386519	Symbol	CAUTH_GSI		3386019						
ANR	3386520	Symbol	fqan		3386019						
ANR	3386521	Symbol	auth_name_to_map . Value		3386019						
ANR	3386522	Symbol	GLOBUS_GSI_GSS_ASSIST_MODULE		3386019						
ANR	3386523	Symbol	authentication_type		3386019						
ANR	3386524	Symbol	global_map_file -> ParseCanonicalizationFile		3386019						
ANR	3386525	Symbol	mapret		3386019						
ANR	3386526	Symbol	domain . Value		3386019						
ANR	3386527	Symbol	method_string		3386019						
ANR	3386528	Symbol	global_map_file -> GetCanonicalization		3386019						
ANR	3386529	Symbol	global_map_file_load_attempted		3386019						
ANR	3386530	Symbol	param		3386019						
ANR	3386531	Symbol	* global_map_file		3386019						
ANR	3386532	Symbol	globus_activated		3386019						
ANR	3386533	Symbol	authentication_name		3386019						
ANR	3386534	Symbol	canonical_user		3386019						
ANR	3386535	Symbol	canonical_user . Value		3386019						
ANR	3386536	Symbol	user . Value		3386019						
ANR	3386537	Symbol	NULL		3386019						
ANR	3386538	Symbol	credential_mapfile		3386019						
ANR	3386539	Symbol	included_voms		3386019						
ANR	3386540	Symbol	false		3386019						
ANR	3386541	Symbol	D_ALWAYS		3386019						
ANR	3386542	Symbol	D_FULLDEBUG		3386019						
ANR	3386543	Symbol	( ( Condor_Auth_X509 * ) authenticator_ ) -> getFQAN		3386019						
ANR	3386544	Symbol	authenticator_		3386019						
ANR	3386545	Symbol	* fqan		3386019						
ANR	3386546	Symbol	domain		3386019						
ANR	3386547	Symbol	true		3386019						
ANR	3386548	Symbol	user		3386019						
ANR	3386549	Function	Authentication :: split_canonical_name	519:0:17255:17682							
ANR	3386550	FunctionDef	"Authentication :: split_canonical_name (char const * can_name , char * * user , char * * domain)"		3386549	0					
ANR	3386551	CompoundStatement		519:90:17345:17682	3386549	0					
ANR	3386552	IdentifierDeclStatement	"MyString my_user , my_domain ;"	523:1:17531:17557	3386549	0	True				
ANR	3386553	IdentifierDecl	my_user		3386549	0					
ANR	3386554	IdentifierDeclType	MyString		3386549	0					
ANR	3386555	Identifier	my_user		3386549	1					
ANR	3386556	IdentifierDecl	my_domain		3386549	1					
ANR	3386557	IdentifierDeclType	MyString		3386549	0					
ANR	3386558	Identifier	my_domain		3386549	1					
ANR	3386559	ExpressionStatement	"split_canonical_name ( can_name , my_user , my_domain )"	524:1:17560:17608	3386549	1	True				
ANR	3386560	CallExpression	"split_canonical_name ( can_name , my_user , my_domain )"		3386549	0					
ANR	3386561	Callee	split_canonical_name		3386549	0					
ANR	3386562	Identifier	split_canonical_name		3386549	0					
ANR	3386563	ArgumentList	can_name		3386549	1					
ANR	3386564	Argument	can_name		3386549	0					
ANR	3386565	Identifier	can_name		3386549	0					
ANR	3386566	Argument	my_user		3386549	1					
ANR	3386567	Identifier	my_user		3386549	0					
ANR	3386568	Argument	my_domain		3386549	2					
ANR	3386569	Identifier	my_domain		3386549	0					
ANR	3386570	ExpressionStatement	* user = strdup ( my_user . Value ( ) )	525:1:17611:17642	3386549	2	True				
ANR	3386571	AssignmentExpression	* user = strdup ( my_user . Value ( ) )		3386549	0		=			
ANR	3386572	UnaryOperationExpression	* user		3386549	0					
ANR	3386573	UnaryOperator	*		3386549	0					
ANR	3386574	Identifier	user		3386549	1					
ANR	3386575	CallExpression	strdup ( my_user . Value ( ) )		3386549	1					
ANR	3386576	Callee	strdup		3386549	0					
ANR	3386577	Identifier	strdup		3386549	0					
ANR	3386578	ArgumentList	my_user . Value ( )		3386549	1					
ANR	3386579	Argument	my_user . Value ( )		3386549	0					
ANR	3386580	CallExpression	my_user . Value ( )		3386549	0					
ANR	3386581	Callee	my_user . Value		3386549	0					
ANR	3386582	MemberAccess	my_user . Value		3386549	0					
ANR	3386583	Identifier	my_user		3386549	0					
ANR	3386584	Identifier	Value		3386549	1					
ANR	3386585	ArgumentList			3386549	1					
ANR	3386586	ExpressionStatement	* domain = strdup ( my_domain . Value ( ) )	526:1:17645:17680	3386549	3	True				
ANR	3386587	AssignmentExpression	* domain = strdup ( my_domain . Value ( ) )		3386549	0		=			
ANR	3386588	UnaryOperationExpression	* domain		3386549	0					
ANR	3386589	UnaryOperator	*		3386549	0					
ANR	3386590	Identifier	domain		3386549	1					
ANR	3386591	CallExpression	strdup ( my_domain . Value ( ) )		3386549	1					
ANR	3386592	Callee	strdup		3386549	0					
ANR	3386593	Identifier	strdup		3386549	0					
ANR	3386594	ArgumentList	my_domain . Value ( )		3386549	1					
ANR	3386595	Argument	my_domain . Value ( )		3386549	0					
ANR	3386596	CallExpression	my_domain . Value ( )		3386549	0					
ANR	3386597	Callee	my_domain . Value		3386549	0					
ANR	3386598	MemberAccess	my_domain . Value		3386549	0					
ANR	3386599	Identifier	my_domain		3386549	0					
ANR	3386600	Identifier	Value		3386549	1					
ANR	3386601	ArgumentList			3386549	1					
ANR	3386602	ReturnType	void		3386549	1					
ANR	3386603	Identifier	Authentication :: split_canonical_name		3386549	2					
ANR	3386604	ParameterList	"char const * can_name , char * * user , char * * domain"		3386549	3					
ANR	3386605	Parameter	char const * can_name	519:42:17297:17316	3386549	0	True				
ANR	3386606	ParameterType	char const *		3386549	0					
ANR	3386607	Identifier	can_name		3386549	1					
ANR	3386608	Parameter	char * * user	519:63:17318:17328	3386549	1	True				
ANR	3386609	ParameterType	char * *		3386549	0					
ANR	3386610	Identifier	user		3386549	1					
ANR	3386611	Parameter	char * * domain	519:75:17330:17342	3386549	2	True				
ANR	3386612	ParameterType	char * *		3386549	0					
ANR	3386613	Identifier	domain		3386549	1					
ANR	3386614	CFGEntryNode	ENTRY		3386549		True				
ANR	3386615	CFGExitNode	EXIT		3386549		True				
ANR	3386616	Symbol	my_domain		3386549						
ANR	3386617	Symbol	* user		3386549						
ANR	3386618	Symbol	my_user . Value		3386549						
ANR	3386619	Symbol	* domain		3386549						
ANR	3386620	Symbol	domain		3386549						
ANR	3386621	Symbol	my_domain . Value		3386549						
ANR	3386622	Symbol	strdup		3386549						
ANR	3386623	Symbol	user		3386549						
ANR	3386624	Symbol	my_user		3386549						
ANR	3386625	Symbol	can_name		3386549						
ANR	3386626	Function	Authentication :: split_canonical_name	529:0:17685:18405							
ANR	3386627	FunctionDef	"Authentication :: split_canonical_name (MyString can_name , MyString & user , MyString & domain)"		3386626	0					
ANR	3386628	CompoundStatement		529:96:17781:18405	3386626	0					
ANR	3386629	IdentifierDeclStatement	char local_user [ 256 ] ;	531:4:17788:17808	3386626	0	True				
ANR	3386630	IdentifierDecl	local_user [ 256 ]		3386626	0					
ANR	3386631	IdentifierDeclType	char [ 256 ]		3386626	0					
ANR	3386632	Identifier	local_user		3386626	1					
ANR	3386633	PrimaryExpression	256		3386626	2					
ANR	3386634	ExpressionStatement	"strncpy ( local_user , can_name . Value ( ) , 255 )"	534:1:17852:17895	3386626	1	True				
ANR	3386635	CallExpression	"strncpy ( local_user , can_name . Value ( ) , 255 )"		3386626	0					
ANR	3386636	Callee	strncpy		3386626	0					
ANR	3386637	Identifier	strncpy		3386626	0					
ANR	3386638	ArgumentList	local_user		3386626	1					
ANR	3386639	Argument	local_user		3386626	0					
ANR	3386640	Identifier	local_user		3386626	0					
ANR	3386641	Argument	can_name . Value ( )		3386626	1					
ANR	3386642	CallExpression	can_name . Value ( )		3386626	0					
ANR	3386643	Callee	can_name . Value		3386626	0					
ANR	3386644	MemberAccess	can_name . Value		3386626	0					
ANR	3386645	Identifier	can_name		3386626	0					
ANR	3386646	Identifier	Value		3386626	1					
ANR	3386647	ArgumentList			3386626	1					
ANR	3386648	Argument	255		3386626	2					
ANR	3386649	PrimaryExpression	255		3386626	0					
ANR	3386650	IdentifierDeclStatement	"char * tmp = strchr ( local_user , '@' ) ;"	537:4:17935:17970	3386626	2	True				
ANR	3386651	IdentifierDecl	"* tmp = strchr ( local_user , '@' )"		3386626	0					
ANR	3386652	IdentifierDeclType	char *		3386626	0					
ANR	3386653	Identifier	tmp		3386626	1					
ANR	3386654	AssignmentExpression	"* tmp = strchr ( local_user , '@' )"		3386626	2		=			
ANR	3386655	Identifier	tmp		3386626	0					
ANR	3386656	CallExpression	"strchr ( local_user , '@' )"		3386626	1					
ANR	3386657	Callee	strchr		3386626	0					
ANR	3386658	Identifier	strchr		3386626	0					
ANR	3386659	ArgumentList	local_user		3386626	1					
ANR	3386660	Argument	local_user		3386626	0					
ANR	3386661	Identifier	local_user		3386626	0					
ANR	3386662	Argument	'@'		3386626	1					
ANR	3386663	PrimaryExpression	'@'		3386626	0					
ANR	3386664	IfStatement	if ( tmp == NULL )		3386626	3					
ANR	3386665	Condition	tmp == NULL	538:8:17980:17990	3386626	0	True				
ANR	3386666	EqualityExpression	tmp == NULL		3386626	0		==			
ANR	3386667	Identifier	tmp		3386626	0					
ANR	3386668	Identifier	NULL		3386626	1					
ANR	3386669	CompoundStatement		12:8:248:287	3386626	1					
ANR	3386670	ExpressionStatement	user = local_user	539:8:18003:18020	3386626	0	True				
ANR	3386671	AssignmentExpression	user = local_user		3386626	0		=			
ANR	3386672	Identifier	user		3386626	0					
ANR	3386673	Identifier	local_user		3386626	1					
ANR	3386674	IdentifierDeclStatement	"char * uid_domain = param ( ""UID_DOMAIN"" ) ;"	540:8:18030:18069	3386626	1	True				
ANR	3386675	IdentifierDecl	"* uid_domain = param ( ""UID_DOMAIN"" )"		3386626	0					
ANR	3386676	IdentifierDeclType	char *		3386626	0					
ANR	3386677	Identifier	uid_domain		3386626	1					
ANR	3386678	AssignmentExpression	"* uid_domain = param ( ""UID_DOMAIN"" )"		3386626	2		=			
ANR	3386679	Identifier	uid_domain		3386626	0					
ANR	3386680	CallExpression	"param ( ""UID_DOMAIN"" )"		3386626	1					
ANR	3386681	Callee	param		3386626	0					
ANR	3386682	Identifier	param		3386626	0					
ANR	3386683	ArgumentList	"""UID_DOMAIN"""		3386626	1					
ANR	3386684	Argument	"""UID_DOMAIN"""		3386626	0					
ANR	3386685	PrimaryExpression	"""UID_DOMAIN"""		3386626	0					
ANR	3386686	IfStatement	if ( uid_domain )		3386626	2					
ANR	3386687	Condition	uid_domain	541:12:18083:18092	3386626	0	True				
ANR	3386688	Identifier	uid_domain		3386626	0					
ANR	3386689	CompoundStatement		13:24:313:313	3386626	1					
ANR	3386690	ExpressionStatement	domain = uid_domain	542:12:18109:18128	3386626	0	True				
ANR	3386691	AssignmentExpression	domain = uid_domain		3386626	0		=			
ANR	3386692	Identifier	domain		3386626	0					
ANR	3386693	Identifier	uid_domain		3386626	1					
ANR	3386694	ExpressionStatement	free ( uid_domain )	543:12:18142:18158	3386626	1	True				
ANR	3386695	CallExpression	free ( uid_domain )		3386626	0					
ANR	3386696	Callee	free		3386626	0					
ANR	3386697	Identifier	free		3386626	0					
ANR	3386698	ArgumentList	uid_domain		3386626	1					
ANR	3386699	Argument	uid_domain		3386626	0					
ANR	3386700	Identifier	uid_domain		3386626	0					
ANR	3386701	ElseStatement	else		3386626	0					
ANR	3386702	CompoundStatement		16:15:393:393	3386626	0					
ANR	3386703	ExpressionStatement	"dprintf ( D_SECURITY , ""AUTHENTICATION: UID_DOMAIN not defined.\\n"" )"	545:12:18189:18253	3386626	0	True				
ANR	3386704	CallExpression	"dprintf ( D_SECURITY , ""AUTHENTICATION: UID_DOMAIN not defined.\\n"" )"		3386626	0					
ANR	3386705	Callee	dprintf		3386626	0					
ANR	3386706	Identifier	dprintf		3386626	0					
ANR	3386707	ArgumentList	D_SECURITY		3386626	1					
ANR	3386708	Argument	D_SECURITY		3386626	0					
ANR	3386709	Identifier	D_SECURITY		3386626	0					
ANR	3386710	Argument	"""AUTHENTICATION: UID_DOMAIN not defined.\\n"""		3386626	1					
ANR	3386711	PrimaryExpression	"""AUTHENTICATION: UID_DOMAIN not defined.\\n"""		3386626	0					
ANR	3386712	ElseStatement	else		3386626	0					
ANR	3386713	CompoundStatement		19:11:494:494	3386626	0					
ANR	3386714	ExpressionStatement	* tmp = 0	549:8:18336:18344	3386626	0	True				
ANR	3386715	AssignmentExpression	* tmp = 0		3386626	0		=			
ANR	3386716	UnaryOperationExpression	* tmp		3386626	0					
ANR	3386717	UnaryOperator	*		3386626	0					
ANR	3386718	Identifier	tmp		3386626	1					
ANR	3386719	PrimaryExpression	0		3386626	1					
ANR	3386720	ExpressionStatement	user = local_user	550:8:18354:18371	3386626	1	True				
ANR	3386721	AssignmentExpression	user = local_user		3386626	0		=			
ANR	3386722	Identifier	user		3386626	0					
ANR	3386723	Identifier	local_user		3386626	1					
ANR	3386724	ExpressionStatement	domain = ( tmp + 1 )	551:8:18381:18397	3386626	2	True				
ANR	3386725	AssignmentExpression	domain = ( tmp + 1 )		3386626	0		=			
ANR	3386726	Identifier	domain		3386626	0					
ANR	3386727	AdditiveExpression	tmp + 1		3386626	1		+			
ANR	3386728	Identifier	tmp		3386626	0					
ANR	3386729	PrimaryExpression	1		3386626	1					
ANR	3386730	ReturnType	void		3386626	1					
ANR	3386731	Identifier	Authentication :: split_canonical_name		3386626	2					
ANR	3386732	ParameterList	"MyString can_name , MyString & user , MyString & domain"		3386626	3					
ANR	3386733	Parameter	MyString can_name	529:42:17727:17743	3386626	0	True				
ANR	3386734	ParameterType	MyString		3386626	0					
ANR	3386735	Identifier	can_name		3386626	1					
ANR	3386736	Parameter	MyString & user	529:61:17746:17759	3386626	1	True				
ANR	3386737	ParameterType	MyString &		3386626	0					
ANR	3386738	Identifier	user		3386626	1					
ANR	3386739	Parameter	MyString & domain	529:77:17762:17777	3386626	2	True				
ANR	3386740	ParameterType	MyString &		3386626	0					
ANR	3386741	Identifier	domain		3386626	1					
ANR	3386742	CFGEntryNode	ENTRY		3386626		True				
ANR	3386743	CFGExitNode	EXIT		3386626		True				
ANR	3386744	Symbol	* tmp		3386626						
ANR	3386745	Symbol	NULL		3386626						
ANR	3386746	Symbol	D_SECURITY		3386626						
ANR	3386747	Symbol	param		3386626						
ANR	3386748	Symbol	tmp		3386626						
ANR	3386749	Symbol	domain		3386626						
ANR	3386750	Symbol	uid_domain		3386626						
ANR	3386751	Symbol	strchr		3386626						
ANR	3386752	Symbol	local_user		3386626						
ANR	3386753	Symbol	can_name . Value		3386626						
ANR	3386754	Symbol	user		3386626						
ANR	3386755	Symbol	can_name		3386626						
ANR	3386756	Function	Authentication :: isAuthenticated	557:0:18438:18585							
ANR	3386757	FunctionDef	Authentication :: isAuthenticated ()		3386756	0					
ANR	3386758	CompoundStatement		558:0:18482:18585	3386756	0					
ANR	3386759	ReturnStatement	return 0 ;	560:4:18521:18529	3386756	0	True				
ANR	3386760	PrimaryExpression	0		3386756	0					
ANR	3386761	ReturnType	int		3386756	1					
ANR	3386762	Identifier	Authentication :: isAuthenticated		3386756	2					
ANR	3386763	ParameterList			3386756	3					
ANR	3386764	CFGEntryNode	ENTRY		3386756		True				
ANR	3386765	CFGExitNode	EXIT		3386756		True				
ANR	3386766	Function	Authentication :: unAuthenticate	567:0:18589:18843							
ANR	3386767	FunctionDef	Authentication :: unAuthenticate ()		3386766	0					
ANR	3386768	CompoundStatement		568:0:18627:18843	3386766	0					
ANR	3386769	ExpressionStatement	auth_status = CAUTH_NONE	570:4:18667:18691	3386766	0	True				
ANR	3386770	AssignmentExpression	auth_status = CAUTH_NONE		3386766	0		=			
ANR	3386771	Identifier	auth_status		3386766	0					
ANR	3386772	Identifier	CAUTH_NONE		3386766	1					
ANR	3386773	IfStatement	if ( authenticator_ )		3386766	1					
ANR	3386774	Condition	authenticator_	571:5:18698:18711	3386766	0	True				
ANR	3386775	Identifier	authenticator_		3386766	0					
ANR	3386776	CompoundStatement		4:21:86:86	3386766	1					
ANR	3386777	Statement	delete	572:5:18721:18726	3386766	0	True				
ANR	3386778	ExpressionStatement	authenticator_	572:12:18728:18742	3386766	1	True				
ANR	3386779	Identifier	authenticator_		3386766	0					
ANR	3386780	ExpressionStatement	authenticator_ = 0	573:5:18749:18767	3386766	2	True				
ANR	3386781	AssignmentExpression	authenticator_ = 0		3386766	0		=			
ANR	3386782	Identifier	authenticator_		3386766	0					
ANR	3386783	PrimaryExpression	0		3386766	1					
ANR	3386784	IfStatement	if ( method_used )		3386766	2					
ANR	3386785	Condition	method_used	575:5:18777:18787	3386766	0	True				
ANR	3386786	Identifier	method_used		3386766	0					
ANR	3386787	CompoundStatement		8:18:162:162	3386766	1					
ANR	3386788	ExpressionStatement	free ( method_used )	576:2:18794:18812	3386766	0	True				
ANR	3386789	CallExpression	free ( method_used )		3386766	0					
ANR	3386790	Callee	free		3386766	0					
ANR	3386791	Identifier	free		3386766	0					
ANR	3386792	ArgumentList	method_used		3386766	1					
ANR	3386793	Argument	method_used		3386766	0					
ANR	3386794	Identifier	method_used		3386766	0					
ANR	3386795	ExpressionStatement	method_used = 0	577:2:18816:18831	3386766	1	True				
ANR	3386796	AssignmentExpression	method_used = 0		3386766	0		=			
ANR	3386797	Identifier	method_used		3386766	0					
ANR	3386798	PrimaryExpression	0		3386766	1					
ANR	3386799	ReturnType	void		3386766	1					
ANR	3386800	Identifier	Authentication :: unAuthenticate		3386766	2					
ANR	3386801	ParameterList			3386766	3					
ANR	3386802	CFGEntryNode	ENTRY		3386766		True				
ANR	3386803	CFGExitNode	EXIT		3386766		True				
ANR	3386804	Symbol	CAUTH_NONE		3386766						
ANR	3386805	Symbol	auth_status		3386766						
ANR	3386806	Symbol	authenticator_		3386766						
ANR	3386807	Symbol	method_used		3386766						
ANR	3386808	Function	Authentication :: getMethodUsed	583:0:18847:18969							
ANR	3386809	FunctionDef	Authentication :: getMethodUsed ()		3386808	0					
ANR	3386810	CompoundStatement		583:38:18885:18969	3386808	0					
ANR	3386811	ReturnStatement	return method_used ;	585:1:18922:18940	3386808	0	True				
ANR	3386812	Identifier	method_used		3386808	0					
ANR	3386813	ReturnType	char *		3386808	1					
ANR	3386814	Identifier	Authentication :: getMethodUsed		3386808	2					
ANR	3386815	ParameterList			3386808	3					
ANR	3386816	CFGEntryNode	ENTRY		3386808		True				
ANR	3386817	CFGExitNode	EXIT		3386808		True				
ANR	3386818	Symbol	method_used		3386808						
ANR	3386819	Function	Authentication :: setOwner	599:0:19086:19410							
ANR	3386820	FunctionDef	Authentication :: setOwner (const char * owner)		3386819	0					
ANR	3386821	CompoundStatement		600:0:19137:19410	3386819	0					
ANR	3386822	ReturnStatement	return 0 ;	602:1:19173:19181	3386819	0	True				
ANR	3386823	PrimaryExpression	0		3386819	0					
ANR	3386824	ReturnType	int		3386819	1					
ANR	3386825	Identifier	Authentication :: setOwner		3386819	2					
ANR	3386826	ParameterList	const char * owner		3386819	3					
ANR	3386827	Parameter	const char * owner	599:30:19116:19132	3386819	0	True				
ANR	3386828	ParameterType	const char *		3386819	0					
ANR	3386829	Identifier	owner		3386819	1					
ANR	3386830	CFGEntryNode	ENTRY		3386819		True				
ANR	3386831	CFGExitNode	EXIT		3386819		True				
ANR	3386832	Symbol	owner		3386819						
ANR	3386833	Function	Authentication :: getRemoteAddress	620:0:19628:19903							
ANR	3386834	FunctionDef	Authentication :: getRemoteAddress ()		3386833	0					
ANR	3386835	CompoundStatement		621:0:19684:19903	3386833	0					
ANR	3386836	ReturnStatement	return NULL ;	623:4:19723:19734	3386833	0	True				
ANR	3386837	Identifier	NULL		3386833	0					
ANR	3386838	ReturnType	const char *		3386833	1					
ANR	3386839	Identifier	Authentication :: getRemoteAddress		3386833	2					
ANR	3386840	ParameterList			3386833	3					
ANR	3386841	CFGEntryNode	ENTRY		3386833		True				
ANR	3386842	CFGExitNode	EXIT		3386833		True				
ANR	3386843	Symbol	NULL		3386833						
ANR	3386844	Function	Authentication :: getDomain	638:0:20093:20327							
ANR	3386845	FunctionDef	Authentication :: getDomain ()		3386844	0					
ANR	3386846	CompoundStatement		639:0:20142:20327	3386844	0					
ANR	3386847	ReturnStatement	return NULL ;	641:4:20181:20192	3386844	0	True				
ANR	3386848	Identifier	NULL		3386844	0					
ANR	3386849	ReturnType	const char *		3386844	1					
ANR	3386850	Identifier	Authentication :: getDomain		3386844	2					
ANR	3386851	ParameterList			3386844	3					
ANR	3386852	CFGEntryNode	ENTRY		3386844		True				
ANR	3386853	CFGExitNode	EXIT		3386844		True				
ANR	3386854	Symbol	NULL		3386844						
ANR	3386855	Function	Authentication :: getOwner	652:0:20330:21073							
ANR	3386856	FunctionDef	Authentication :: getOwner ()		3386855	0					
ANR	3386857	CompoundStatement		653:0:20376:21073	3386855	0					
ANR	3386858	ReturnStatement	return NULL ;	655:4:20415:20426	3386855	0	True				
ANR	3386859	Identifier	NULL		3386855	0					
ANR	3386860	ReturnType	const char *		3386855	1					
ANR	3386861	Identifier	Authentication :: getOwner		3386855	2					
ANR	3386862	ParameterList			3386855	3					
ANR	3386863	CFGEntryNode	ENTRY		3386855		True				
ANR	3386864	CFGExitNode	EXIT		3386855		True				
ANR	3386865	Symbol	NULL		3386855						
ANR	3386866	Function	Authentication :: getFullyQualifiedUser	680:0:21091:21624							
ANR	3386867	FunctionDef	Authentication :: getFullyQualifiedUser ()		3386866	0					
ANR	3386868	CompoundStatement		681:0:21150:21624	3386866	0					
ANR	3386869	ReturnStatement	return NULL ;	683:4:21189:21200	3386866	0	True				
ANR	3386870	Identifier	NULL		3386866	0					
ANR	3386871	ReturnType	const char *		3386866	1					
ANR	3386872	Identifier	Authentication :: getFullyQualifiedUser		3386866	2					
ANR	3386873	ParameterList			3386866	3					
ANR	3386874	CFGEntryNode	ENTRY		3386866		True				
ANR	3386875	CFGExitNode	EXIT		3386866		True				
ANR	3386876	Symbol	NULL		3386866						
ANR	3386877	Function	Authentication :: end_time	699:0:21638:21832							
ANR	3386878	FunctionDef	Authentication :: end_time ()		3386877	0					
ANR	3386879	CompoundStatement		700:0:21671:21832	3386877	0					
ANR	3386880	IdentifierDeclStatement	int endtime = 0 ;	701:4:21677:21692	3386877	0	True				
ANR	3386881	IdentifierDecl	endtime = 0		3386877	0					
ANR	3386882	IdentifierDeclType	int		3386877	0					
ANR	3386883	Identifier	endtime		3386877	1					
ANR	3386884	AssignmentExpression	endtime = 0		3386877	2		=			
ANR	3386885	Identifier	endtime		3386877	0					
ANR	3386886	PrimaryExpression	0		3386877	1					
ANR	3386887	IfStatement	if ( authenticator_ )		3386877	1					
ANR	3386888	Condition	authenticator_	703:8:21736:21749	3386877	0	True				
ANR	3386889	Identifier	authenticator_		3386877	0					
ANR	3386890	CompoundStatement		4:24:80:80	3386877	1					
ANR	3386891	ExpressionStatement	endtime = authenticator_ -> endTime ( )	704:8:21762:21797	3386877	0	True				
ANR	3386892	AssignmentExpression	endtime = authenticator_ -> endTime ( )		3386877	0		=			
ANR	3386893	Identifier	endtime		3386877	0					
ANR	3386894	CallExpression	authenticator_ -> endTime ( )		3386877	1					
ANR	3386895	Callee	authenticator_ -> endTime		3386877	0					
ANR	3386896	PtrMemberAccess	authenticator_ -> endTime		3386877	0					
ANR	3386897	Identifier	authenticator_		3386877	0					
ANR	3386898	Identifier	endTime		3386877	1					
ANR	3386899	ArgumentList			3386877	1					
ANR	3386900	ReturnStatement	return endtime ;	707:4:21816:21830	3386877	2	True				
ANR	3386901	Identifier	endtime		3386877	0					
ANR	3386902	ReturnType	int		3386877	1					
ANR	3386903	Identifier	Authentication :: end_time		3386877	2					
ANR	3386904	ParameterList			3386877	3					
ANR	3386905	CFGEntryNode	ENTRY		3386877		True				
ANR	3386906	CFGExitNode	EXIT		3386877		True				
ANR	3386907	Symbol	* authenticator_		3386877						
ANR	3386908	Symbol	authenticator_ -> endTime		3386877						
ANR	3386909	Symbol	endtime		3386877						
ANR	3386910	Symbol	authenticator_		3386877						
ANR	3386911	Function	Authentication :: is_valid	710:0:21835:22029							
ANR	3386912	FunctionDef	Authentication :: is_valid ()		3386911	0					
ANR	3386913	CompoundStatement		711:0:21869:22029	3386911	0					
ANR	3386914	IdentifierDeclStatement	bool valid = FALSE ;	712:4:21875:21893	3386911	0	True				
ANR	3386915	IdentifierDecl	valid = FALSE		3386911	0					
ANR	3386916	IdentifierDeclType	bool		3386911	0					
ANR	3386917	Identifier	valid		3386911	1					
ANR	3386918	AssignmentExpression	valid = FALSE		3386911	2		=			
ANR	3386919	Identifier	FALSE		3386911	0					
ANR	3386920	Identifier	FALSE		3386911	1					
ANR	3386921	IfStatement	if ( authenticator_ )		3386911	1					
ANR	3386922	Condition	authenticator_	714:8:21937:21950	3386911	0	True				
ANR	3386923	Identifier	authenticator_		3386911	0					
ANR	3386924	CompoundStatement		4:24:83:83	3386911	1					
ANR	3386925	ExpressionStatement	valid = authenticator_ -> isValid ( )	715:8:21963:21996	3386911	0	True				
ANR	3386926	AssignmentExpression	valid = authenticator_ -> isValid ( )		3386911	0		=			
ANR	3386927	Identifier	valid		3386911	0					
ANR	3386928	CallExpression	authenticator_ -> isValid ( )		3386911	1					
ANR	3386929	Callee	authenticator_ -> isValid		3386911	0					
ANR	3386930	PtrMemberAccess	authenticator_ -> isValid		3386911	0					
ANR	3386931	Identifier	authenticator_		3386911	0					
ANR	3386932	Identifier	isValid		3386911	1					
ANR	3386933	ArgumentList			3386911	1					
ANR	3386934	ReturnStatement	return valid ;	718:4:22015:22027	3386911	2	True				
ANR	3386935	Identifier	valid		3386911	0					
ANR	3386936	ReturnType	bool		3386911	1					
ANR	3386937	Identifier	Authentication :: is_valid		3386911	2					
ANR	3386938	ParameterList			3386911	3					
ANR	3386939	CFGEntryNode	ENTRY		3386911		True				
ANR	3386940	CFGExitNode	EXIT		3386911		True				
ANR	3386941	Symbol	valid		3386911						
ANR	3386942	Symbol	* authenticator_		3386911						
ANR	3386943	Symbol	FALSE		3386911						
ANR	3386944	Symbol	authenticator_		3386911						
ANR	3386945	Symbol	authenticator_ -> isValid		3386911						
ANR	3386946	Function	Authentication :: wrap	721:0:22032:22399							
ANR	3386947	FunctionDef	"Authentication :: wrap (char * input , int input_len , char * & output , int & output_len)"		3386946	0					
ANR	3386948	CompoundStatement		725:0:22145:22399	3386946	0					
ANR	3386949	ReturnStatement	return FALSE ;	727:4:22184:22196	3386946	0	True				
ANR	3386950	Identifier	FALSE		3386946	0					
ANR	3386951	ReturnType	int		3386946	1					
ANR	3386952	Identifier	Authentication :: wrap		3386946	2					
ANR	3386953	ParameterList	"char * input , int input_len , char * & output , int & output_len"		3386946	3					
ANR	3386954	Parameter	char * input	721:27:22059:22070	3386946	0	True				
ANR	3386955	ParameterType	char *		3386946	0					
ANR	3386956	Identifier	input		3386946	1					
ANR	3386957	Parameter	int input_len	722:6:22080:22095	3386946	1	True				
ANR	3386958	ParameterType	int		3386946	0					
ANR	3386959	Identifier	input_len		3386946	1					
ANR	3386960	Parameter	char * & output	723:6:22105:22117	3386946	2	True				
ANR	3386961	ParameterType	char * &		3386946	0					
ANR	3386962	Identifier	output		3386946	1					
ANR	3386963	Parameter	int & output_len	724:6:22126:22142	3386946	3	True				
ANR	3386964	ParameterType	int &		3386946	0					
ANR	3386965	Identifier	output_len		3386946	1					
ANR	3386966	CFGEntryNode	ENTRY		3386946		True				
ANR	3386967	CFGExitNode	EXIT		3386946		True				
ANR	3386968	Symbol	output		3386946						
ANR	3386969	Symbol	output_len		3386946						
ANR	3386970	Symbol	input		3386946						
ANR	3386971	Symbol	input_len		3386946						
ANR	3386972	Symbol	FALSE		3386946						
ANR	3386973	Function	Authentication :: unwrap	739:0:22403:22781							
ANR	3386974	FunctionDef	"Authentication :: unwrap (char * input , int input_len , char * & output , int & output_len)"		3386973	0					
ANR	3386975	CompoundStatement		743:0:22525:22781	3386973	0					
ANR	3386976	ReturnStatement	return FALSE ;	745:4:22564:22576	3386973	0	True				
ANR	3386977	Identifier	FALSE		3386973	0					
ANR	3386978	ReturnType	int		3386973	1					
ANR	3386979	Identifier	Authentication :: unwrap		3386973	2					
ANR	3386980	ParameterList	"char * input , int input_len , char * & output , int & output_len"		3386973	3					
ANR	3386981	Parameter	char * input	739:29:22432:22443	3386973	0	True				
ANR	3386982	ParameterType	char *		3386973	0					
ANR	3386983	Identifier	input		3386973	1					
ANR	3386984	Parameter	int input_len	740:8:22455:22470	3386973	1	True				
ANR	3386985	ParameterType	int		3386973	0					
ANR	3386986	Identifier	input_len		3386973	1					
ANR	3386987	Parameter	char * & output	741:8:22482:22494	3386973	2	True				
ANR	3386988	ParameterType	char * &		3386973	0					
ANR	3386989	Identifier	output		3386973	1					
ANR	3386990	Parameter	int & output_len	742:8:22506:22522	3386973	3	True				
ANR	3386991	ParameterType	int &		3386973	0					
ANR	3386992	Identifier	output_len		3386973	1					
ANR	3386993	CFGEntryNode	ENTRY		3386973		True				
ANR	3386994	CFGExitNode	EXIT		3386973		True				
ANR	3386995	Symbol	output		3386973						
ANR	3386996	Symbol	output_len		3386973						
ANR	3386997	Symbol	input		3386973						
ANR	3386998	Symbol	input_len		3386973						
ANR	3386999	Symbol	FALSE		3386973						
ANR	3387000	Function	Authentication :: exchangeKey	760:0:22820:25080							
ANR	3387001	FunctionDef	Authentication :: exchangeKey (KeyInfo * & key)		3387000	0					
ANR	3387002	CompoundStatement		761:0:22868:25080	3387000	0					
ANR	3387003	IdentifierDeclStatement	int retval = 1 ;	762:4:22874:22888	3387000	0	True				
ANR	3387004	IdentifierDecl	retval = 1		3387000	0					
ANR	3387005	IdentifierDeclType	int		3387000	0					
ANR	3387006	Identifier	retval		3387000	1					
ANR	3387007	AssignmentExpression	retval = 1		3387000	2		=			
ANR	3387008	Identifier	retval		3387000	0					
ANR	3387009	PrimaryExpression	1		3387000	1					
ANR	3387010	IdentifierDeclStatement	"int hasKey , keyLength , protocol , duration ;"	763:4:22894:22935	3387000	1	True				
ANR	3387011	IdentifierDecl	hasKey		3387000	0					
ANR	3387012	IdentifierDeclType	int		3387000	0					
ANR	3387013	Identifier	hasKey		3387000	1					
ANR	3387014	IdentifierDecl	keyLength		3387000	1					
ANR	3387015	IdentifierDeclType	int		3387000	0					
ANR	3387016	Identifier	keyLength		3387000	1					
ANR	3387017	IdentifierDecl	protocol		3387000	2					
ANR	3387018	IdentifierDeclType	int		3387000	0					
ANR	3387019	Identifier	protocol		3387000	1					
ANR	3387020	IdentifierDecl	duration		3387000	3					
ANR	3387021	IdentifierDeclType	int		3387000	0					
ANR	3387022	Identifier	duration		3387000	1					
ANR	3387023	IdentifierDeclStatement	"int outputLen , inputLen ;"	764:4:22941:22964	3387000	2	True				
ANR	3387024	IdentifierDecl	outputLen		3387000	0					
ANR	3387025	IdentifierDeclType	int		3387000	0					
ANR	3387026	Identifier	outputLen		3387000	1					
ANR	3387027	IdentifierDecl	inputLen		3387000	1					
ANR	3387028	IdentifierDeclType	int		3387000	0					
ANR	3387029	Identifier	inputLen		3387000	1					
ANR	3387030	IdentifierDeclStatement	"char * encryptedKey = 0 , * decryptedKey = 0 ;"	765:4:22970:23013	3387000	3	True				
ANR	3387031	IdentifierDecl	* encryptedKey = 0		3387000	0					
ANR	3387032	IdentifierDeclType	char *		3387000	0					
ANR	3387033	Identifier	encryptedKey		3387000	1					
ANR	3387034	AssignmentExpression	* encryptedKey = 0		3387000	2		=			
ANR	3387035	Identifier	encryptedKey		3387000	0					
ANR	3387036	PrimaryExpression	0		3387000	1					
ANR	3387037	IdentifierDecl	* decryptedKey = 0		3387000	1					
ANR	3387038	IdentifierDeclType	char *		3387000	0					
ANR	3387039	Identifier	decryptedKey		3387000	1					
ANR	3387040	AssignmentExpression	* decryptedKey = 0		3387000	2		=			
ANR	3387041	Identifier	decryptedKey		3387000	0					
ANR	3387042	PrimaryExpression	0		3387000	1					
ANR	3387043	IfStatement	if ( mySock -> isClient ( ) )		3387000	4					
ANR	3387044	Condition	mySock -> isClient ( )	767:8:23024:23041	3387000	0	True				
ANR	3387045	CallExpression	mySock -> isClient ( )		3387000	0					
ANR	3387046	Callee	mySock -> isClient		3387000	0					
ANR	3387047	PtrMemberAccess	mySock -> isClient		3387000	0					
ANR	3387048	Identifier	mySock		3387000	0					
ANR	3387049	Identifier	isClient		3387000	1					
ANR	3387050	ArgumentList			3387000	1					
ANR	3387051	CompoundStatement		7:28:175:175	3387000	1					
ANR	3387052	ExpressionStatement	mySock -> decode ( )	768:8:23054:23070	3387000	0	True				
ANR	3387053	CallExpression	mySock -> decode ( )		3387000	0					
ANR	3387054	Callee	mySock -> decode		3387000	0					
ANR	3387055	PtrMemberAccess	mySock -> decode		3387000	0					
ANR	3387056	Identifier	mySock		3387000	0					
ANR	3387057	Identifier	decode		3387000	1					
ANR	3387058	ArgumentList			3387000	1					
ANR	3387059	ExpressionStatement	mySock -> code ( hasKey )	769:8:23080:23100	3387000	1	True				
ANR	3387060	CallExpression	mySock -> code ( hasKey )		3387000	0					
ANR	3387061	Callee	mySock -> code		3387000	0					
ANR	3387062	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387063	Identifier	mySock		3387000	0					
ANR	3387064	Identifier	code		3387000	1					
ANR	3387065	ArgumentList	hasKey		3387000	1					
ANR	3387066	Argument	hasKey		3387000	0					
ANR	3387067	Identifier	hasKey		3387000	0					
ANR	3387068	ExpressionStatement	mySock -> end_of_message ( )	770:8:23110:23134	3387000	2	True				
ANR	3387069	CallExpression	mySock -> end_of_message ( )		3387000	0					
ANR	3387070	Callee	mySock -> end_of_message		3387000	0					
ANR	3387071	PtrMemberAccess	mySock -> end_of_message		3387000	0					
ANR	3387072	Identifier	mySock		3387000	0					
ANR	3387073	Identifier	end_of_message		3387000	1					
ANR	3387074	ArgumentList			3387000	1					
ANR	3387075	IfStatement	if ( hasKey )		3387000	3					
ANR	3387076	Condition	hasKey	771:12:23148:23153	3387000	0	True				
ANR	3387077	Identifier	hasKey		3387000	0					
ANR	3387078	CompoundStatement		11:20:287:287	3387000	1					
ANR	3387079	IfStatement	if ( ! mySock -> code ( keyLength ) || ! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( inputLen ) )		3387000	0					
ANR	3387080	Condition	! mySock -> code ( keyLength ) || ! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( inputLen )	772:16:23174:23328	3387000	0	True				
ANR	3387081	OrExpression	! mySock -> code ( keyLength ) || ! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( inputLen )		3387000	0		||			
ANR	3387082	UnaryOperationExpression	! mySock -> code ( keyLength )		3387000	0					
ANR	3387083	UnaryOperator	!		3387000	0					
ANR	3387084	CallExpression	mySock -> code ( keyLength )		3387000	1					
ANR	3387085	Callee	mySock -> code		3387000	0					
ANR	3387086	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387087	Identifier	mySock		3387000	0					
ANR	3387088	Identifier	code		3387000	1					
ANR	3387089	ArgumentList	keyLength		3387000	1					
ANR	3387090	Argument	keyLength		3387000	0					
ANR	3387091	Identifier	keyLength		3387000	0					
ANR	3387092	OrExpression	! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( inputLen )		3387000	1		||			
ANR	3387093	UnaryOperationExpression	! mySock -> code ( protocol )		3387000	0					
ANR	3387094	UnaryOperator	!		3387000	0					
ANR	3387095	CallExpression	mySock -> code ( protocol )		3387000	1					
ANR	3387096	Callee	mySock -> code		3387000	0					
ANR	3387097	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387098	Identifier	mySock		3387000	0					
ANR	3387099	Identifier	code		3387000	1					
ANR	3387100	ArgumentList	protocol		3387000	1					
ANR	3387101	Argument	protocol		3387000	0					
ANR	3387102	Identifier	protocol		3387000	0					
ANR	3387103	OrExpression	! mySock -> code ( duration ) || ! mySock -> code ( inputLen )		3387000	1		||			
ANR	3387104	UnaryOperationExpression	! mySock -> code ( duration )		3387000	0					
ANR	3387105	UnaryOperator	!		3387000	0					
ANR	3387106	CallExpression	mySock -> code ( duration )		3387000	1					
ANR	3387107	Callee	mySock -> code		3387000	0					
ANR	3387108	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387109	Identifier	mySock		3387000	0					
ANR	3387110	Identifier	code		3387000	1					
ANR	3387111	ArgumentList	duration		3387000	1					
ANR	3387112	Argument	duration		3387000	0					
ANR	3387113	Identifier	duration		3387000	0					
ANR	3387114	UnaryOperationExpression	! mySock -> code ( inputLen )		3387000	1					
ANR	3387115	UnaryOperator	!		3387000	0					
ANR	3387116	CallExpression	mySock -> code ( inputLen )		3387000	1					
ANR	3387117	Callee	mySock -> code		3387000	0					
ANR	3387118	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387119	Identifier	mySock		3387000	0					
ANR	3387120	Identifier	code		3387000	1					
ANR	3387121	ArgumentList	inputLen		3387000	1					
ANR	3387122	Argument	inputLen		3387000	0					
ANR	3387123	Identifier	inputLen		3387000	0					
ANR	3387124	CompoundStatement		15:41:462:462	3387000	1					
ANR	3387125	ReturnStatement	return 0 ;	776:16:23349:23357	3387000	0	True				
ANR	3387126	PrimaryExpression	0		3387000	0					
ANR	3387127	ExpressionStatement	encryptedKey = ( char * ) malloc ( inputLen )	778:12:23385:23425	3387000	1	True				
ANR	3387128	AssignmentExpression	encryptedKey = ( char * ) malloc ( inputLen )		3387000	0		=			
ANR	3387129	Identifier	encryptedKey		3387000	0					
ANR	3387130	CastExpression	( char * ) malloc ( inputLen )		3387000	1					
ANR	3387131	CastTarget	char *		3387000	0					
ANR	3387132	CallExpression	malloc ( inputLen )		3387000	1					
ANR	3387133	Callee	malloc		3387000	0					
ANR	3387134	Identifier	malloc		3387000	0					
ANR	3387135	ArgumentList	inputLen		3387000	1					
ANR	3387136	Argument	inputLen		3387000	0					
ANR	3387137	Identifier	inputLen		3387000	0					
ANR	3387138	ExpressionStatement	"mySock -> get_bytes ( encryptedKey , inputLen )"	779:12:23439:23480	3387000	2	True				
ANR	3387139	CallExpression	"mySock -> get_bytes ( encryptedKey , inputLen )"		3387000	0					
ANR	3387140	Callee	mySock -> get_bytes		3387000	0					
ANR	3387141	PtrMemberAccess	mySock -> get_bytes		3387000	0					
ANR	3387142	Identifier	mySock		3387000	0					
ANR	3387143	Identifier	get_bytes		3387000	1					
ANR	3387144	ArgumentList	encryptedKey		3387000	1					
ANR	3387145	Argument	encryptedKey		3387000	0					
ANR	3387146	Identifier	encryptedKey		3387000	0					
ANR	3387147	Argument	inputLen		3387000	1					
ANR	3387148	Identifier	inputLen		3387000	0					
ANR	3387149	ExpressionStatement	mySock -> end_of_message ( )	780:12:23494:23518	3387000	3	True				
ANR	3387150	CallExpression	mySock -> end_of_message ( )		3387000	0					
ANR	3387151	Callee	mySock -> end_of_message		3387000	0					
ANR	3387152	PtrMemberAccess	mySock -> end_of_message		3387000	0					
ANR	3387153	Identifier	mySock		3387000	0					
ANR	3387154	Identifier	end_of_message		3387000	1					
ANR	3387155	ArgumentList			3387000	1					
ANR	3387156	IfStatement	"if ( authenticator_ -> unwrap ( encryptedKey , inputLen , decryptedKey , outputLen ) )"		3387000	4					
ANR	3387157	Condition	"authenticator_ -> unwrap ( encryptedKey , inputLen , decryptedKey , outputLen )"	783:17:23571:23642	3387000	0	True				
ANR	3387158	CallExpression	"authenticator_ -> unwrap ( encryptedKey , inputLen , decryptedKey , outputLen )"		3387000	0					
ANR	3387159	Callee	authenticator_ -> unwrap		3387000	0					
ANR	3387160	PtrMemberAccess	authenticator_ -> unwrap		3387000	0					
ANR	3387161	Identifier	authenticator_		3387000	0					
ANR	3387162	Identifier	unwrap		3387000	1					
ANR	3387163	ArgumentList	encryptedKey		3387000	1					
ANR	3387164	Argument	encryptedKey		3387000	0					
ANR	3387165	Identifier	encryptedKey		3387000	0					
ANR	3387166	Argument	inputLen		3387000	1					
ANR	3387167	Identifier	inputLen		3387000	0					
ANR	3387168	Argument	decryptedKey		3387000	2					
ANR	3387169	Identifier	decryptedKey		3387000	0					
ANR	3387170	Argument	outputLen		3387000	3					
ANR	3387171	Identifier	outputLen		3387000	0					
ANR	3387172	CompoundStatement		23:92:777:777	3387000	1					
ANR	3387173	ExpressionStatement	"key = new KeyInfo ( ( unsigned char * ) decryptedKey , keyLength , ( Protocol ) protocol , duration )"	785:4:23668:23756	3387000	0	True				
ANR	3387174	AssignmentExpression	"key = new KeyInfo ( ( unsigned char * ) decryptedKey , keyLength , ( Protocol ) protocol , duration )"		3387000	0		=			
ANR	3387175	Identifier	key		3387000	0					
ANR	3387176	Expression	"( unsigned char * ) decryptedKey , keyLength , ( Protocol ) protocol , duration"		3387000	1					
ANR	3387177	CastExpression	( unsigned char * ) decryptedKey		3387000	0					
ANR	3387178	CastTarget	unsigned char *		3387000	0					
ANR	3387179	Identifier	decryptedKey		3387000	1					
ANR	3387180	Expression	"keyLength , ( Protocol ) protocol , duration"		3387000	1					
ANR	3387181	Identifier	keyLength		3387000	0					
ANR	3387182	Expression	"( Protocol ) protocol , duration"		3387000	1					
ANR	3387183	CastExpression	( Protocol ) protocol		3387000	0					
ANR	3387184	CastTarget	Protocol		3387000	0					
ANR	3387185	Identifier	protocol		3387000	1					
ANR	3387186	Identifier	duration		3387000	1					
ANR	3387187	ElseStatement	else		3387000	0					
ANR	3387188	CompoundStatement		26:10:899:899	3387000	0					
ANR	3387189	ExpressionStatement	retval = 0	788:4:23791:23801	3387000	0	True				
ANR	3387190	AssignmentExpression	retval = 0		3387000	0		=			
ANR	3387191	Identifier	retval		3387000	0					
ANR	3387192	PrimaryExpression	0		3387000	1					
ANR	3387193	ExpressionStatement	key = NULL	789:4:23807:23817	3387000	1	True				
ANR	3387194	AssignmentExpression	key = NULL		3387000	0		=			
ANR	3387195	Identifier	key		3387000	0					
ANR	3387196	Identifier	NULL		3387000	1					
ANR	3387197	ElseStatement	else		3387000	0					
ANR	3387198	CompoundStatement		32:13:978:978	3387000	0					
ANR	3387199	ExpressionStatement	key = NULL	793:12:23861:23871	3387000	0	True				
ANR	3387200	AssignmentExpression	key = NULL		3387000	0		=			
ANR	3387201	Identifier	key		3387000	0					
ANR	3387202	Identifier	NULL		3387000	1					
ANR	3387203	ElseStatement	else		3387000	0					
ANR	3387204	CompoundStatement		36:9:1029:1029	3387000	0					
ANR	3387205	ExpressionStatement	mySock -> encode ( )	797:8:23934:23950	3387000	0	True				
ANR	3387206	CallExpression	mySock -> encode ( )		3387000	0					
ANR	3387207	Callee	mySock -> encode		3387000	0					
ANR	3387208	PtrMemberAccess	mySock -> encode		3387000	0					
ANR	3387209	Identifier	mySock		3387000	0					
ANR	3387210	Identifier	encode		3387000	1					
ANR	3387211	ArgumentList			3387000	1					
ANR	3387212	IfStatement	if ( key == 0 )		3387000	1					
ANR	3387213	Condition	key == 0	798:12:23964:23971	3387000	0	True				
ANR	3387214	EqualityExpression	key == 0		3387000	0		==			
ANR	3387215	Identifier	key		3387000	0					
ANR	3387216	PrimaryExpression	0		3387000	1					
ANR	3387217	CompoundStatement		38:22:1105:1105	3387000	1					
ANR	3387218	ExpressionStatement	hasKey = 0	799:12:23988:23998	3387000	0	True				
ANR	3387219	AssignmentExpression	hasKey = 0		3387000	0		=			
ANR	3387220	Identifier	hasKey		3387000	0					
ANR	3387221	PrimaryExpression	0		3387000	1					
ANR	3387222	ExpressionStatement	mySock -> code ( hasKey )	800:12:24012:24032	3387000	1	True				
ANR	3387223	CallExpression	mySock -> code ( hasKey )		3387000	0					
ANR	3387224	Callee	mySock -> code		3387000	0					
ANR	3387225	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387226	Identifier	mySock		3387000	0					
ANR	3387227	Identifier	code		3387000	1					
ANR	3387228	ArgumentList	hasKey		3387000	1					
ANR	3387229	Argument	hasKey		3387000	0					
ANR	3387230	Identifier	hasKey		3387000	0					
ANR	3387231	ExpressionStatement	mySock -> end_of_message ( )	801:12:24046:24070	3387000	2	True				
ANR	3387232	CallExpression	mySock -> end_of_message ( )		3387000	0					
ANR	3387233	Callee	mySock -> end_of_message		3387000	0					
ANR	3387234	PtrMemberAccess	mySock -> end_of_message		3387000	0					
ANR	3387235	Identifier	mySock		3387000	0					
ANR	3387236	Identifier	end_of_message		3387000	1					
ANR	3387237	ArgumentList			3387000	1					
ANR	3387238	ReturnStatement	return 1 ;	802:12:24084:24092	3387000	3	True				
ANR	3387239	PrimaryExpression	1		3387000	0					
ANR	3387240	ElseStatement	else		3387000	0					
ANR	3387241	CompoundStatement		44:13:1248:1248	3387000	0					
ANR	3387242	ExpressionStatement	hasKey = 1	805:12:24149:24159	3387000	0	True				
ANR	3387243	AssignmentExpression	hasKey = 1		3387000	0		=			
ANR	3387244	Identifier	hasKey		3387000	0					
ANR	3387245	PrimaryExpression	1		3387000	1					
ANR	3387246	IfStatement	if ( ! mySock -> code ( hasKey ) || ! mySock -> end_of_message ( ) )		3387000	1					
ANR	3387247	Condition	! mySock -> code ( hasKey ) || ! mySock -> end_of_message ( )	806:16:24177:24226	3387000	0	True				
ANR	3387248	OrExpression	! mySock -> code ( hasKey ) || ! mySock -> end_of_message ( )		3387000	0		||			
ANR	3387249	UnaryOperationExpression	! mySock -> code ( hasKey )		3387000	0					
ANR	3387250	UnaryOperator	!		3387000	0					
ANR	3387251	CallExpression	mySock -> code ( hasKey )		3387000	1					
ANR	3387252	Callee	mySock -> code		3387000	0					
ANR	3387253	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387254	Identifier	mySock		3387000	0					
ANR	3387255	Identifier	code		3387000	1					
ANR	3387256	ArgumentList	hasKey		3387000	1					
ANR	3387257	Argument	hasKey		3387000	0					
ANR	3387258	Identifier	hasKey		3387000	0					
ANR	3387259	UnaryOperationExpression	! mySock -> end_of_message ( )		3387000	1					
ANR	3387260	UnaryOperator	!		3387000	0					
ANR	3387261	CallExpression	mySock -> end_of_message ( )		3387000	1					
ANR	3387262	Callee	mySock -> end_of_message		3387000	0					
ANR	3387263	PtrMemberAccess	mySock -> end_of_message		3387000	0					
ANR	3387264	Identifier	mySock		3387000	0					
ANR	3387265	Identifier	end_of_message		3387000	1					
ANR	3387266	ArgumentList			3387000	1					
ANR	3387267	CompoundStatement		46:68:1360:1360	3387000	1					
ANR	3387268	ReturnStatement	return 0 ;	807:16:24247:24255	3387000	0	True				
ANR	3387269	PrimaryExpression	0		3387000	0					
ANR	3387270	ExpressionStatement	keyLength = key -> getKeyLength ( )	809:12:24283:24314	3387000	2	True				
ANR	3387271	AssignmentExpression	keyLength = key -> getKeyLength ( )		3387000	0		=			
ANR	3387272	Identifier	keyLength		3387000	0					
ANR	3387273	CallExpression	key -> getKeyLength ( )		3387000	1					
ANR	3387274	Callee	key -> getKeyLength		3387000	0					
ANR	3387275	PtrMemberAccess	key -> getKeyLength		3387000	0					
ANR	3387276	Identifier	key		3387000	0					
ANR	3387277	Identifier	getKeyLength		3387000	1					
ANR	3387278	ArgumentList			3387000	1					
ANR	3387279	ExpressionStatement	protocol = ( int ) key -> getProtocol ( )	810:12:24328:24364	3387000	3	True				
ANR	3387280	AssignmentExpression	protocol = ( int ) key -> getProtocol ( )		3387000	0		=			
ANR	3387281	Identifier	protocol		3387000	0					
ANR	3387282	CastExpression	( int ) key -> getProtocol ( )		3387000	1					
ANR	3387283	CastTarget	int		3387000	0					
ANR	3387284	CallExpression	key -> getProtocol ( )		3387000	1					
ANR	3387285	Callee	key -> getProtocol		3387000	0					
ANR	3387286	PtrMemberAccess	key -> getProtocol		3387000	0					
ANR	3387287	Identifier	key		3387000	0					
ANR	3387288	Identifier	getProtocol		3387000	1					
ANR	3387289	ArgumentList			3387000	1					
ANR	3387290	ExpressionStatement	duration = key -> getDuration ( )	811:12:24378:24408	3387000	4	True				
ANR	3387291	AssignmentExpression	duration = key -> getDuration ( )		3387000	0		=			
ANR	3387292	Identifier	duration		3387000	0					
ANR	3387293	CallExpression	key -> getDuration ( )		3387000	1					
ANR	3387294	Callee	key -> getDuration		3387000	0					
ANR	3387295	PtrMemberAccess	key -> getDuration		3387000	0					
ANR	3387296	Identifier	key		3387000	0					
ANR	3387297	Identifier	getDuration		3387000	1					
ANR	3387298	ArgumentList			3387000	1					
ANR	3387299	IfStatement	"if ( ! authenticator_ -> wrap ( ( char * ) key -> getKeyData ( ) , keyLength , encryptedKey , outputLen ) )"		3387000	5					
ANR	3387300	Condition	"! authenticator_ -> wrap ( ( char * ) key -> getKeyData ( ) , keyLength , encryptedKey , outputLen )"	813:16:24427:24510	3387000	0	True				
ANR	3387301	UnaryOperationExpression	"! authenticator_ -> wrap ( ( char * ) key -> getKeyData ( ) , keyLength , encryptedKey , outputLen )"		3387000	0					
ANR	3387302	UnaryOperator	!		3387000	0					
ANR	3387303	CallExpression	"authenticator_ -> wrap ( ( char * ) key -> getKeyData ( ) , keyLength , encryptedKey , outputLen )"		3387000	1					
ANR	3387304	Callee	authenticator_ -> wrap		3387000	0					
ANR	3387305	PtrMemberAccess	authenticator_ -> wrap		3387000	0					
ANR	3387306	Identifier	authenticator_		3387000	0					
ANR	3387307	Identifier	wrap		3387000	1					
ANR	3387308	ArgumentList	( char * ) key -> getKeyData ( )		3387000	1					
ANR	3387309	Argument	( char * ) key -> getKeyData ( )		3387000	0					
ANR	3387310	CastExpression	( char * ) key -> getKeyData ( )		3387000	0					
ANR	3387311	CastTarget	char *		3387000	0					
ANR	3387312	CallExpression	key -> getKeyData ( )		3387000	1					
ANR	3387313	Callee	key -> getKeyData		3387000	0					
ANR	3387314	PtrMemberAccess	key -> getKeyData		3387000	0					
ANR	3387315	Identifier	key		3387000	0					
ANR	3387316	Identifier	getKeyData		3387000	1					
ANR	3387317	ArgumentList			3387000	1					
ANR	3387318	Argument	keyLength		3387000	1					
ANR	3387319	Identifier	keyLength		3387000	0					
ANR	3387320	Argument	encryptedKey		3387000	2					
ANR	3387321	Identifier	encryptedKey		3387000	0					
ANR	3387322	Argument	outputLen		3387000	3					
ANR	3387323	Identifier	outputLen		3387000	0					
ANR	3387324	CompoundStatement		54:3:1647:1647	3387000	1					
ANR	3387325	ReturnStatement	return 0 ;	816:4:24549:24557	3387000	0	True				
ANR	3387326	PrimaryExpression	0		3387000	0					
ANR	3387327	IfStatement	"if ( ! mySock -> code ( keyLength ) || ! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( outputLen ) || ! mySock -> put_bytes ( encryptedKey , outputLen ) || ! mySock -> end_of_message ( ) )"		3387000	6					
ANR	3387328	Condition	"! mySock -> code ( keyLength ) || ! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( outputLen ) || ! mySock -> put_bytes ( encryptedKey , outputLen ) || ! mySock -> end_of_message ( )"	819:16:24581:24845	3387000	0	True				
ANR	3387329	OrExpression	"! mySock -> code ( keyLength ) || ! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( outputLen ) || ! mySock -> put_bytes ( encryptedKey , outputLen ) || ! mySock -> end_of_message ( )"		3387000	0		||			
ANR	3387330	UnaryOperationExpression	! mySock -> code ( keyLength )		3387000	0					
ANR	3387331	UnaryOperator	!		3387000	0					
ANR	3387332	CallExpression	mySock -> code ( keyLength )		3387000	1					
ANR	3387333	Callee	mySock -> code		3387000	0					
ANR	3387334	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387335	Identifier	mySock		3387000	0					
ANR	3387336	Identifier	code		3387000	1					
ANR	3387337	ArgumentList	keyLength		3387000	1					
ANR	3387338	Argument	keyLength		3387000	0					
ANR	3387339	Identifier	keyLength		3387000	0					
ANR	3387340	OrExpression	"! mySock -> code ( protocol ) || ! mySock -> code ( duration ) || ! mySock -> code ( outputLen ) || ! mySock -> put_bytes ( encryptedKey , outputLen ) || ! mySock -> end_of_message ( )"		3387000	1		||			
ANR	3387341	UnaryOperationExpression	! mySock -> code ( protocol )		3387000	0					
ANR	3387342	UnaryOperator	!		3387000	0					
ANR	3387343	CallExpression	mySock -> code ( protocol )		3387000	1					
ANR	3387344	Callee	mySock -> code		3387000	0					
ANR	3387345	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387346	Identifier	mySock		3387000	0					
ANR	3387347	Identifier	code		3387000	1					
ANR	3387348	ArgumentList	protocol		3387000	1					
ANR	3387349	Argument	protocol		3387000	0					
ANR	3387350	Identifier	protocol		3387000	0					
ANR	3387351	OrExpression	"! mySock -> code ( duration ) || ! mySock -> code ( outputLen ) || ! mySock -> put_bytes ( encryptedKey , outputLen ) || ! mySock -> end_of_message ( )"		3387000	1		||			
ANR	3387352	UnaryOperationExpression	! mySock -> code ( duration )		3387000	0					
ANR	3387353	UnaryOperator	!		3387000	0					
ANR	3387354	CallExpression	mySock -> code ( duration )		3387000	1					
ANR	3387355	Callee	mySock -> code		3387000	0					
ANR	3387356	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387357	Identifier	mySock		3387000	0					
ANR	3387358	Identifier	code		3387000	1					
ANR	3387359	ArgumentList	duration		3387000	1					
ANR	3387360	Argument	duration		3387000	0					
ANR	3387361	Identifier	duration		3387000	0					
ANR	3387362	OrExpression	"! mySock -> code ( outputLen ) || ! mySock -> put_bytes ( encryptedKey , outputLen ) || ! mySock -> end_of_message ( )"		3387000	1		||			
ANR	3387363	UnaryOperationExpression	! mySock -> code ( outputLen )		3387000	0					
ANR	3387364	UnaryOperator	!		3387000	0					
ANR	3387365	CallExpression	mySock -> code ( outputLen )		3387000	1					
ANR	3387366	Callee	mySock -> code		3387000	0					
ANR	3387367	PtrMemberAccess	mySock -> code		3387000	0					
ANR	3387368	Identifier	mySock		3387000	0					
ANR	3387369	Identifier	code		3387000	1					
ANR	3387370	ArgumentList	outputLen		3387000	1					
ANR	3387371	Argument	outputLen		3387000	0					
ANR	3387372	Identifier	outputLen		3387000	0					
ANR	3387373	OrExpression	"! mySock -> put_bytes ( encryptedKey , outputLen ) || ! mySock -> end_of_message ( )"		3387000	1		||			
ANR	3387374	UnaryOperationExpression	"! mySock -> put_bytes ( encryptedKey , outputLen )"		3387000	0					
ANR	3387375	UnaryOperator	!		3387000	0					
ANR	3387376	CallExpression	"mySock -> put_bytes ( encryptedKey , outputLen )"		3387000	1					
ANR	3387377	Callee	mySock -> put_bytes		3387000	0					
ANR	3387378	PtrMemberAccess	mySock -> put_bytes		3387000	0					
ANR	3387379	Identifier	mySock		3387000	0					
ANR	3387380	Identifier	put_bytes		3387000	1					
ANR	3387381	ArgumentList	encryptedKey		3387000	1					
ANR	3387382	Argument	encryptedKey		3387000	0					
ANR	3387383	Identifier	encryptedKey		3387000	0					
ANR	3387384	Argument	outputLen		3387000	1					
ANR	3387385	Identifier	outputLen		3387000	0					
ANR	3387386	UnaryOperationExpression	! mySock -> end_of_message ( )		3387000	1					
ANR	3387387	UnaryOperator	!		3387000	0					
ANR	3387388	CallExpression	mySock -> end_of_message ( )		3387000	1					
ANR	3387389	Callee	mySock -> end_of_message		3387000	0					
ANR	3387390	PtrMemberAccess	mySock -> end_of_message		3387000	0					
ANR	3387391	Identifier	mySock		3387000	0					
ANR	3387392	Identifier	end_of_message		3387000	1					
ANR	3387393	ArgumentList			3387000	1					
ANR	3387394	CompoundStatement		64:43:1979:1979	3387000	1					
ANR	3387395	ExpressionStatement	free ( encryptedKey )	825:16:24866:24884	3387000	0	True				
ANR	3387396	CallExpression	free ( encryptedKey )		3387000	0					
ANR	3387397	Callee	free		3387000	0					
ANR	3387398	Identifier	free		3387000	0					
ANR	3387399	ArgumentList	encryptedKey		3387000	1					
ANR	3387400	Argument	encryptedKey		3387000	0					
ANR	3387401	Identifier	encryptedKey		3387000	0					
ANR	3387402	ReturnStatement	return 0 ;	826:16:24902:24910	3387000	1	True				
ANR	3387403	PrimaryExpression	0		3387000	0					
ANR	3387404	IfStatement	if ( encryptedKey )		3387000	5					
ANR	3387405	Condition	encryptedKey	831:8:24951:24962	3387000	0	True				
ANR	3387406	Identifier	encryptedKey		3387000	0					
ANR	3387407	CompoundStatement		71:22:2096:2096	3387000	1					
ANR	3387408	ExpressionStatement	free ( encryptedKey )	832:8:24975:24993	3387000	0	True				
ANR	3387409	CallExpression	free ( encryptedKey )		3387000	0					
ANR	3387410	Callee	free		3387000	0					
ANR	3387411	Identifier	free		3387000	0					
ANR	3387412	ArgumentList	encryptedKey		3387000	1					
ANR	3387413	Argument	encryptedKey		3387000	0					
ANR	3387414	Identifier	encryptedKey		3387000	0					
ANR	3387415	IfStatement	if ( decryptedKey )		3387000	6					
ANR	3387416	Condition	decryptedKey	835:8:25010:25021	3387000	0	True				
ANR	3387417	Identifier	decryptedKey		3387000	0					
ANR	3387418	CompoundStatement		75:22:2155:2155	3387000	1					
ANR	3387419	ExpressionStatement	free ( decryptedKey )	836:8:25034:25052	3387000	0	True				
ANR	3387420	CallExpression	free ( decryptedKey )		3387000	0					
ANR	3387421	Callee	free		3387000	0					
ANR	3387422	Identifier	free		3387000	0					
ANR	3387423	ArgumentList	decryptedKey		3387000	1					
ANR	3387424	Argument	decryptedKey		3387000	0					
ANR	3387425	Identifier	decryptedKey		3387000	0					
ANR	3387426	ReturnStatement	return retval ;	839:4:25065:25078	3387000	7	True				
ANR	3387427	Identifier	retval		3387000	0					
ANR	3387428	ReturnType	int		3387000	1					
ANR	3387429	Identifier	Authentication :: exchangeKey		3387000	2					
ANR	3387430	ParameterList	KeyInfo * & key		3387000	3					
ANR	3387431	Parameter	KeyInfo * & key	760:32:22852:22865	3387000	0	True				
ANR	3387432	ParameterType	KeyInfo * &		3387000	0					
ANR	3387433	Identifier	key		3387000	1					
ANR	3387434	CFGEntryNode	ENTRY		3387000		True				
ANR	3387435	CFGExitNode	EXIT		3387000		True				
ANR	3387436	Symbol	mySock		3387000						
ANR	3387437	Symbol	* authenticator_		3387000						
ANR	3387438	Symbol	authenticator_ -> unwrap		3387000						
ANR	3387439	Symbol	decryptedKey		3387000						
ANR	3387440	Symbol	mySock -> isClient		3387000						
ANR	3387441	Symbol	* key		3387000						
ANR	3387442	Symbol	key -> getKeyData		3387000						
ANR	3387443	Symbol	* mySock		3387000						
ANR	3387444	Symbol	duration		3387000						
ANR	3387445	Symbol	mySock -> code		3387000						
ANR	3387446	Symbol	authenticator_ -> wrap		3387000						
ANR	3387447	Symbol	protocol		3387000						
ANR	3387448	Symbol	keyLength		3387000						
ANR	3387449	Symbol	mySock -> end_of_message		3387000						
ANR	3387450	Symbol	key -> getDuration		3387000						
ANR	3387451	Symbol	key		3387000						
ANR	3387452	Symbol	hasKey		3387000						
ANR	3387453	Symbol	malloc		3387000						
ANR	3387454	Symbol	NULL		3387000						
ANR	3387455	Symbol	inputLen		3387000						
ANR	3387456	Symbol	encryptedKey		3387000						
ANR	3387457	Symbol	key -> getKeyLength		3387000						
ANR	3387458	Symbol	authenticator_		3387000						
ANR	3387459	Symbol	retval		3387000						
ANR	3387460	Symbol	key -> getProtocol		3387000						
ANR	3387461	Symbol	mySock -> put_bytes		3387000						
ANR	3387462	Symbol	outputLen		3387000						
ANR	3387463	Function	Authentication :: setAuthType	843:0:25084:25157							
ANR	3387464	FunctionDef	Authentication :: setAuthType (int state)		3387463	0					
ANR	3387465	CompoundStatement		843:46:25130:25157	3387463	0					
ANR	3387466	ExpressionStatement	auth_status = state	844:4:25136:25155	3387463	0	True				
ANR	3387467	AssignmentExpression	auth_status = state		3387463	0		=			
ANR	3387468	Identifier	auth_status		3387463	0					
ANR	3387469	Identifier	state		3387463	1					
ANR	3387470	ReturnType	void		3387463	1					
ANR	3387471	Identifier	Authentication :: setAuthType		3387463	2					
ANR	3387472	ParameterList	int state		3387463	3					
ANR	3387473	Parameter	int state	843:34:25118:25126	3387463	0	True				
ANR	3387474	ParameterType	int		3387463	0					
ANR	3387475	Identifier	state		3387463	1					
ANR	3387476	CFGEntryNode	ENTRY		3387463		True				
ANR	3387477	CFGExitNode	EXIT		3387463		True				
ANR	3387478	Symbol	state		3387463						
ANR	3387479	Symbol	auth_status		3387463						
ANR	3387480	Function	Authentication :: handshake	848:0:25161:26815							
ANR	3387481	FunctionDef	Authentication :: handshake (MyString my_methods)		3387480	0					
ANR	3387482	CompoundStatement		848:51:25212:26815	3387480	0					
ANR	3387483	IdentifierDeclStatement	int shouldUseMethod = 0 ;	850:4:25219:25242	3387480	0	True				
ANR	3387484	IdentifierDecl	shouldUseMethod = 0		3387480	0					
ANR	3387485	IdentifierDeclType	int		3387480	0					
ANR	3387486	Identifier	shouldUseMethod		3387480	1					
ANR	3387487	AssignmentExpression	shouldUseMethod = 0		3387480	2		=			
ANR	3387488	Identifier	shouldUseMethod		3387480	0					
ANR	3387489	PrimaryExpression	0		3387480	1					
ANR	3387490	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: in handshake(my_methods = '%s')\\n"" , my_methods . Value ( ) )"	852:4:25253:25342	3387480	1	True				
ANR	3387491	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: in handshake(my_methods = '%s')\\n"" , my_methods . Value ( ) )"		3387480	0					
ANR	3387492	Callee	dprintf		3387480	0					
ANR	3387493	Identifier	dprintf		3387480	0					
ANR	3387494	ArgumentList	D_SECURITY		3387480	1					
ANR	3387495	Argument	D_SECURITY		3387480	0					
ANR	3387496	Identifier	D_SECURITY		3387480	0					
ANR	3387497	Argument	"""HANDSHAKE: in handshake(my_methods = '%s')\\n"""		3387480	1					
ANR	3387498	PrimaryExpression	"""HANDSHAKE: in handshake(my_methods = '%s')\\n"""		3387480	0					
ANR	3387499	Argument	my_methods . Value ( )		3387480	2					
ANR	3387500	CallExpression	my_methods . Value ( )		3387480	0					
ANR	3387501	Callee	my_methods . Value		3387480	0					
ANR	3387502	MemberAccess	my_methods . Value		3387480	0					
ANR	3387503	Identifier	my_methods		3387480	0					
ANR	3387504	Identifier	Value		3387480	1					
ANR	3387505	ArgumentList			3387480	1					
ANR	3387506	IfStatement	if ( mySock -> isClient ( ) )		3387480	2					
ANR	3387507	Condition	mySock -> isClient ( )	854:9:25354:25371	3387480	0	True				
ANR	3387508	CallExpression	mySock -> isClient ( )		3387480	0					
ANR	3387509	Callee	mySock -> isClient		3387480	0					
ANR	3387510	PtrMemberAccess	mySock -> isClient		3387480	0					
ANR	3387511	Identifier	mySock		3387480	0					
ANR	3387512	Identifier	isClient		3387480	1					
ANR	3387513	ArgumentList			3387480	1					
ANR	3387514	CompoundStatement		13:2:282:345	3387480	1					
ANR	3387515	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: handshake() - i am the client\\n"" )"	858:8:25399:25465	3387480	0	True				
ANR	3387516	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: handshake() - i am the client\\n"" )"		3387480	0					
ANR	3387517	Callee	dprintf		3387480	0					
ANR	3387518	Identifier	dprintf		3387480	0					
ANR	3387519	ArgumentList	D_SECURITY		3387480	1					
ANR	3387520	Argument	D_SECURITY		3387480	0					
ANR	3387521	Identifier	D_SECURITY		3387480	0					
ANR	3387522	Argument	"""HANDSHAKE: handshake() - i am the client\\n"""		3387480	1					
ANR	3387523	PrimaryExpression	"""HANDSHAKE: handshake() - i am the client\\n"""		3387480	0					
ANR	3387524	ExpressionStatement	mySock -> encode ( )	859:8:25475:25491	3387480	1	True				
ANR	3387525	CallExpression	mySock -> encode ( )		3387480	0					
ANR	3387526	Callee	mySock -> encode		3387480	0					
ANR	3387527	PtrMemberAccess	mySock -> encode		3387480	0					
ANR	3387528	Identifier	mySock		3387480	0					
ANR	3387529	Identifier	encode		3387480	1					
ANR	3387530	ArgumentList			3387480	1					
ANR	3387531	IdentifierDeclStatement	int method_bitmask = SecMan :: getAuthBitmask ( my_methods . Value ( ) ) ;	860:2:25495:25558	3387480	2	True				
ANR	3387532	IdentifierDecl	method_bitmask = SecMan :: getAuthBitmask ( my_methods . Value ( ) )		3387480	0					
ANR	3387533	IdentifierDeclType	int		3387480	0					
ANR	3387534	Identifier	method_bitmask		3387480	1					
ANR	3387535	AssignmentExpression	method_bitmask = SecMan :: getAuthBitmask ( my_methods . Value ( ) )		3387480	2		=			
ANR	3387536	Identifier	method_bitmask		3387480	0					
ANR	3387537	CallExpression	SecMan :: getAuthBitmask ( my_methods . Value ( ) )		3387480	1					
ANR	3387538	Callee	SecMan :: getAuthBitmask		3387480	0					
ANR	3387539	Identifier	SecMan :: getAuthBitmask		3387480	0					
ANR	3387540	ArgumentList	my_methods . Value ( )		3387480	1					
ANR	3387541	Argument	my_methods . Value ( )		3387480	0					
ANR	3387542	CallExpression	my_methods . Value ( )		3387480	0					
ANR	3387543	Callee	my_methods . Value		3387480	0					
ANR	3387544	MemberAccess	my_methods . Value		3387480	0					
ANR	3387545	Identifier	my_methods		3387480	0					
ANR	3387546	Identifier	Value		3387480	1					
ANR	3387547	ArgumentList			3387480	1					
ANR	3387548	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: sending (methods == %i) to server\\n"" , method_bitmask )"	861:8:25568:25655	3387480	3	True				
ANR	3387549	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: sending (methods == %i) to server\\n"" , method_bitmask )"		3387480	0					
ANR	3387550	Callee	dprintf		3387480	0					
ANR	3387551	Identifier	dprintf		3387480	0					
ANR	3387552	ArgumentList	D_SECURITY		3387480	1					
ANR	3387553	Argument	D_SECURITY		3387480	0					
ANR	3387554	Identifier	D_SECURITY		3387480	0					
ANR	3387555	Argument	"""HANDSHAKE: sending (methods == %i) to server\\n"""		3387480	1					
ANR	3387556	PrimaryExpression	"""HANDSHAKE: sending (methods == %i) to server\\n"""		3387480	0					
ANR	3387557	Argument	method_bitmask		3387480	2					
ANR	3387558	Identifier	method_bitmask		3387480	0					
ANR	3387559	IfStatement	if ( ! mySock -> code ( method_bitmask ) || ! mySock -> end_of_message ( ) )		3387480	4					
ANR	3387560	Condition	! mySock -> code ( method_bitmask ) || ! mySock -> end_of_message ( )	862:13:25670:25729	3387480	0	True				
ANR	3387561	OrExpression	! mySock -> code ( method_bitmask ) || ! mySock -> end_of_message ( )		3387480	0		||			
ANR	3387562	UnaryOperationExpression	! mySock -> code ( method_bitmask )		3387480	0					
ANR	3387563	UnaryOperator	!		3387480	0					
ANR	3387564	CallExpression	mySock -> code ( method_bitmask )		3387480	1					
ANR	3387565	Callee	mySock -> code		3387480	0					
ANR	3387566	PtrMemberAccess	mySock -> code		3387480	0					
ANR	3387567	Identifier	mySock		3387480	0					
ANR	3387568	Identifier	code		3387480	1					
ANR	3387569	ArgumentList	method_bitmask		3387480	1					
ANR	3387570	Argument	method_bitmask		3387480	0					
ANR	3387571	Identifier	method_bitmask		3387480	0					
ANR	3387572	UnaryOperationExpression	! mySock -> end_of_message ( )		3387480	1					
ANR	3387573	UnaryOperator	!		3387480	0					
ANR	3387574	CallExpression	mySock -> end_of_message ( )		3387480	1					
ANR	3387575	Callee	mySock -> end_of_message		3387480	0					
ANR	3387576	PtrMemberAccess	mySock -> end_of_message		3387480	0					
ANR	3387577	Identifier	mySock		3387480	0					
ANR	3387578	Identifier	end_of_message		3387480	1					
ANR	3387579	ArgumentList			3387480	1					
ANR	3387580	CompoundStatement		15:76:520:520	3387480	1					
ANR	3387581	ReturnStatement	return - 1 ;	863:12:25747:25756	3387480	0	True				
ANR	3387582	UnaryOperationExpression	- 1		3387480	0					
ANR	3387583	UnaryOperator	-		3387480	0					
ANR	3387584	PrimaryExpression	1		3387480	1					
ANR	3387585	ExpressionStatement	mySock -> decode ( )	866:5:25774:25790	3387480	5	True				
ANR	3387586	CallExpression	mySock -> decode ( )		3387480	0					
ANR	3387587	Callee	mySock -> decode		3387480	0					
ANR	3387588	PtrMemberAccess	mySock -> decode		3387480	0					
ANR	3387589	Identifier	mySock		3387480	0					
ANR	3387590	Identifier	decode		3387480	1					
ANR	3387591	ArgumentList			3387480	1					
ANR	3387592	IfStatement	if ( ! mySock -> code ( shouldUseMethod ) || ! mySock -> end_of_message ( ) )		3387480	6					
ANR	3387593	Condition	! mySock -> code ( shouldUseMethod ) || ! mySock -> end_of_message ( )	867:10:25802:25862	3387480	0	True				
ANR	3387594	OrExpression	! mySock -> code ( shouldUseMethod ) || ! mySock -> end_of_message ( )		3387480	0		||			
ANR	3387595	UnaryOperationExpression	! mySock -> code ( shouldUseMethod )		3387480	0					
ANR	3387596	UnaryOperator	!		3387480	0					
ANR	3387597	CallExpression	mySock -> code ( shouldUseMethod )		3387480	1					
ANR	3387598	Callee	mySock -> code		3387480	0					
ANR	3387599	PtrMemberAccess	mySock -> code		3387480	0					
ANR	3387600	Identifier	mySock		3387480	0					
ANR	3387601	Identifier	code		3387480	1					
ANR	3387602	ArgumentList	shouldUseMethod		3387480	1					
ANR	3387603	Argument	shouldUseMethod		3387480	0					
ANR	3387604	Identifier	shouldUseMethod		3387480	0					
ANR	3387605	UnaryOperationExpression	! mySock -> end_of_message ( )		3387480	1					
ANR	3387606	UnaryOperator	!		3387480	0					
ANR	3387607	CallExpression	mySock -> end_of_message ( )		3387480	1					
ANR	3387608	Callee	mySock -> end_of_message		3387480	0					
ANR	3387609	PtrMemberAccess	mySock -> end_of_message		3387480	0					
ANR	3387610	Identifier	mySock		3387480	0					
ANR	3387611	Identifier	end_of_message		3387480	1					
ANR	3387612	ArgumentList			3387480	1					
ANR	3387613	CompoundStatement		20:75:654:654	3387480	1					
ANR	3387614	ReturnStatement	return - 1 ;	868:9:25878:25887	3387480	0	True				
ANR	3387615	UnaryOperationExpression	- 1		3387480	0					
ANR	3387616	UnaryOperator	-		3387480	0					
ANR	3387617	PrimaryExpression	1		3387480	1					
ANR	3387618	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: server replied (method = %i)\\n"" , shouldUseMethod )"	870:5:25901:25984	3387480	7	True				
ANR	3387619	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: server replied (method = %i)\\n"" , shouldUseMethod )"		3387480	0					
ANR	3387620	Callee	dprintf		3387480	0					
ANR	3387621	Identifier	dprintf		3387480	0					
ANR	3387622	ArgumentList	D_SECURITY		3387480	1					
ANR	3387623	Argument	D_SECURITY		3387480	0					
ANR	3387624	Identifier	D_SECURITY		3387480	0					
ANR	3387625	Argument	"""HANDSHAKE: server replied (method = %i)\\n"""		3387480	1					
ANR	3387626	PrimaryExpression	"""HANDSHAKE: server replied (method = %i)\\n"""		3387480	0					
ANR	3387627	Argument	shouldUseMethod		3387480	2					
ANR	3387628	Identifier	shouldUseMethod		3387480	0					
ANR	3387629	ElseStatement	else		3387480	0					
ANR	3387630	CompoundStatement		29:2:802:824	3387480	0					
ANR	3387631	IdentifierDeclStatement	int client_methods = 0 ;	876:2:26015:26037	3387480	0	True				
ANR	3387632	IdentifierDecl	client_methods = 0		3387480	0					
ANR	3387633	IdentifierDeclType	int		3387480	0					
ANR	3387634	Identifier	client_methods		3387480	1					
ANR	3387635	AssignmentExpression	client_methods = 0		3387480	2		=			
ANR	3387636	Identifier	client_methods		3387480	0					
ANR	3387637	PrimaryExpression	0		3387480	1					
ANR	3387638	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: handshake() - i am the server\\n"" )"	877:8:26047:26113	3387480	1	True				
ANR	3387639	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: handshake() - i am the server\\n"" )"		3387480	0					
ANR	3387640	Callee	dprintf		3387480	0					
ANR	3387641	Identifier	dprintf		3387480	0					
ANR	3387642	ArgumentList	D_SECURITY		3387480	1					
ANR	3387643	Argument	D_SECURITY		3387480	0					
ANR	3387644	Identifier	D_SECURITY		3387480	0					
ANR	3387645	Argument	"""HANDSHAKE: handshake() - i am the server\\n"""		3387480	1					
ANR	3387646	PrimaryExpression	"""HANDSHAKE: handshake() - i am the server\\n"""		3387480	0					
ANR	3387647	ExpressionStatement	mySock -> decode ( )	878:8:26123:26139	3387480	2	True				
ANR	3387648	CallExpression	mySock -> decode ( )		3387480	0					
ANR	3387649	Callee	mySock -> decode		3387480	0					
ANR	3387650	PtrMemberAccess	mySock -> decode		3387480	0					
ANR	3387651	Identifier	mySock		3387480	0					
ANR	3387652	Identifier	decode		3387480	1					
ANR	3387653	ArgumentList			3387480	1					
ANR	3387654	IfStatement	if ( ! mySock -> code ( client_methods ) || ! mySock -> end_of_message ( ) )		3387480	3					
ANR	3387655	Condition	! mySock -> code ( client_methods ) || ! mySock -> end_of_message ( )	879:13:26154:26213	3387480	0	True				
ANR	3387656	OrExpression	! mySock -> code ( client_methods ) || ! mySock -> end_of_message ( )		3387480	0		||			
ANR	3387657	UnaryOperationExpression	! mySock -> code ( client_methods )		3387480	0					
ANR	3387658	UnaryOperator	!		3387480	0					
ANR	3387659	CallExpression	mySock -> code ( client_methods )		3387480	1					
ANR	3387660	Callee	mySock -> code		3387480	0					
ANR	3387661	PtrMemberAccess	mySock -> code		3387480	0					
ANR	3387662	Identifier	mySock		3387480	0					
ANR	3387663	Identifier	code		3387480	1					
ANR	3387664	ArgumentList	client_methods		3387480	1					
ANR	3387665	Argument	client_methods		3387480	0					
ANR	3387666	Identifier	client_methods		3387480	0					
ANR	3387667	UnaryOperationExpression	! mySock -> end_of_message ( )		3387480	1					
ANR	3387668	UnaryOperator	!		3387480	0					
ANR	3387669	CallExpression	mySock -> end_of_message ( )		3387480	1					
ANR	3387670	Callee	mySock -> end_of_message		3387480	0					
ANR	3387671	PtrMemberAccess	mySock -> end_of_message		3387480	0					
ANR	3387672	Identifier	mySock		3387480	0					
ANR	3387673	Identifier	end_of_message		3387480	1					
ANR	3387674	ArgumentList			3387480	1					
ANR	3387675	CompoundStatement		32:76:1004:1004	3387480	1					
ANR	3387676	ReturnStatement	return - 1 ;	880:12:26231:26240	3387480	0	True				
ANR	3387677	UnaryOperationExpression	- 1		3387480	0					
ANR	3387678	UnaryOperator	-		3387480	0					
ANR	3387679	PrimaryExpression	1		3387480	1					
ANR	3387680	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: client sent (methods == %i)\\n"" , client_methods )"	882:8:26260:26341	3387480	4	True				
ANR	3387681	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: client sent (methods == %i)\\n"" , client_methods )"		3387480	0					
ANR	3387682	Callee	dprintf		3387480	0					
ANR	3387683	Identifier	dprintf		3387480	0					
ANR	3387684	ArgumentList	D_SECURITY		3387480	1					
ANR	3387685	Argument	D_SECURITY		3387480	0					
ANR	3387686	Identifier	D_SECURITY		3387480	0					
ANR	3387687	Argument	"""HANDSHAKE: client sent (methods == %i)\\n"""		3387480	1					
ANR	3387688	PrimaryExpression	"""HANDSHAKE: client sent (methods == %i)\\n"""		3387480	0					
ANR	3387689	Argument	client_methods		3387480	2					
ANR	3387690	Identifier	client_methods		3387480	0					
ANR	3387691	ExpressionStatement	"shouldUseMethod = selectAuthenticationType ( my_methods , client_methods )"	884:8:26360:26432	3387480	5	True				
ANR	3387692	AssignmentExpression	"shouldUseMethod = selectAuthenticationType ( my_methods , client_methods )"		3387480	0		=			
ANR	3387693	Identifier	shouldUseMethod		3387480	0					
ANR	3387694	CallExpression	"selectAuthenticationType ( my_methods , client_methods )"		3387480	1					
ANR	3387695	Callee	selectAuthenticationType		3387480	0					
ANR	3387696	Identifier	selectAuthenticationType		3387480	0					
ANR	3387697	ArgumentList	my_methods		3387480	1					
ANR	3387698	Argument	my_methods		3387480	0					
ANR	3387699	Identifier	my_methods		3387480	0					
ANR	3387700	Argument	client_methods		3387480	1					
ANR	3387701	Identifier	client_methods		3387480	0					
ANR	3387702	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: i picked (method == %i)\\n"" , shouldUseMethod )"	886:8:26443:26521	3387480	6	True				
ANR	3387703	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: i picked (method == %i)\\n"" , shouldUseMethod )"		3387480	0					
ANR	3387704	Callee	dprintf		3387480	0					
ANR	3387705	Identifier	dprintf		3387480	0					
ANR	3387706	ArgumentList	D_SECURITY		3387480	1					
ANR	3387707	Argument	D_SECURITY		3387480	0					
ANR	3387708	Identifier	D_SECURITY		3387480	0					
ANR	3387709	Argument	"""HANDSHAKE: i picked (method == %i)\\n"""		3387480	1					
ANR	3387710	PrimaryExpression	"""HANDSHAKE: i picked (method == %i)\\n"""		3387480	0					
ANR	3387711	Argument	shouldUseMethod		3387480	2					
ANR	3387712	Identifier	shouldUseMethod		3387480	0					
ANR	3387713	ExpressionStatement	mySock -> encode ( )	889:8:26549:26565	3387480	7	True				
ANR	3387714	CallExpression	mySock -> encode ( )		3387480	0					
ANR	3387715	Callee	mySock -> encode		3387480	0					
ANR	3387716	PtrMemberAccess	mySock -> encode		3387480	0					
ANR	3387717	Identifier	mySock		3387480	0					
ANR	3387718	Identifier	encode		3387480	1					
ANR	3387719	ArgumentList			3387480	1					
ANR	3387720	IfStatement	if ( ! mySock -> code ( shouldUseMethod ) || ! mySock -> end_of_message ( ) )		3387480	8					
ANR	3387721	Condition	! mySock -> code ( shouldUseMethod ) || ! mySock -> end_of_message ( )	890:13:26580:26640	3387480	0	True				
ANR	3387722	OrExpression	! mySock -> code ( shouldUseMethod ) || ! mySock -> end_of_message ( )		3387480	0		||			
ANR	3387723	UnaryOperationExpression	! mySock -> code ( shouldUseMethod )		3387480	0					
ANR	3387724	UnaryOperator	!		3387480	0					
ANR	3387725	CallExpression	mySock -> code ( shouldUseMethod )		3387480	1					
ANR	3387726	Callee	mySock -> code		3387480	0					
ANR	3387727	PtrMemberAccess	mySock -> code		3387480	0					
ANR	3387728	Identifier	mySock		3387480	0					
ANR	3387729	Identifier	code		3387480	1					
ANR	3387730	ArgumentList	shouldUseMethod		3387480	1					
ANR	3387731	Argument	shouldUseMethod		3387480	0					
ANR	3387732	Identifier	shouldUseMethod		3387480	0					
ANR	3387733	UnaryOperationExpression	! mySock -> end_of_message ( )		3387480	1					
ANR	3387734	UnaryOperator	!		3387480	0					
ANR	3387735	CallExpression	mySock -> end_of_message ( )		3387480	1					
ANR	3387736	Callee	mySock -> end_of_message		3387480	0					
ANR	3387737	PtrMemberAccess	mySock -> end_of_message		3387480	0					
ANR	3387738	Identifier	mySock		3387480	0					
ANR	3387739	Identifier	end_of_message		3387480	1					
ANR	3387740	ArgumentList			3387480	1					
ANR	3387741	CompoundStatement		43:77:1431:1431	3387480	1					
ANR	3387742	ReturnStatement	return - 1 ;	891:12:26658:26667	3387480	0	True				
ANR	3387743	UnaryOperationExpression	- 1		3387480	0					
ANR	3387744	UnaryOperator	-		3387480	0					
ANR	3387745	PrimaryExpression	1		3387480	1					
ANR	3387746	ExpressionStatement	"dprintf ( D_SECURITY , ""HANDSHAKE: client received (method == %i)\\n"" , shouldUseMethod )"	894:2:26690:26775	3387480	9	True				
ANR	3387747	CallExpression	"dprintf ( D_SECURITY , ""HANDSHAKE: client received (method == %i)\\n"" , shouldUseMethod )"		3387480	0					
ANR	3387748	Callee	dprintf		3387480	0					
ANR	3387749	Identifier	dprintf		3387480	0					
ANR	3387750	ArgumentList	D_SECURITY		3387480	1					
ANR	3387751	Argument	D_SECURITY		3387480	0					
ANR	3387752	Identifier	D_SECURITY		3387480	0					
ANR	3387753	Argument	"""HANDSHAKE: client received (method == %i)\\n"""		3387480	1					
ANR	3387754	PrimaryExpression	"""HANDSHAKE: client received (method == %i)\\n"""		3387480	0					
ANR	3387755	Argument	shouldUseMethod		3387480	2					
ANR	3387756	Identifier	shouldUseMethod		3387480	0					
ANR	3387757	ReturnStatement	return ( shouldUseMethod ) ;	897:4:26788:26813	3387480	3	True				
ANR	3387758	Identifier	shouldUseMethod		3387480	0					
ANR	3387759	ReturnType	int		3387480	1					
ANR	3387760	Identifier	Authentication :: handshake		3387480	2					
ANR	3387761	ParameterList	MyString my_methods		3387480	3					
ANR	3387762	Parameter	MyString my_methods	848:30:25191:25209	3387480	0	True				
ANR	3387763	ParameterType	MyString		3387480	0					
ANR	3387764	Identifier	my_methods		3387480	1					
ANR	3387765	CFGEntryNode	ENTRY		3387480		True				
ANR	3387766	CFGExitNode	EXIT		3387480		True				
ANR	3387767	Symbol	mySock		3387480						
ANR	3387768	Symbol	my_methods . Value		3387480						
ANR	3387769	Symbol	shouldUseMethod		3387480						
ANR	3387770	Symbol	D_SECURITY		3387480						
ANR	3387771	Symbol	mySock -> isClient		3387480						
ANR	3387772	Symbol	client_methods		3387480						
ANR	3387773	Symbol	SecMan :: getAuthBitmask		3387480						
ANR	3387774	Symbol	method_bitmask		3387480						
ANR	3387775	Symbol	selectAuthenticationType		3387480						
ANR	3387776	Symbol	* mySock		3387480						
ANR	3387777	Symbol	mySock -> code		3387480						
ANR	3387778	Symbol	mySock -> end_of_message		3387480						
ANR	3387779	Symbol	my_methods		3387480						
ANR	3387780	Function	Authentication :: selectAuthenticationType	902:0:26820:27305							
ANR	3387781	FunctionDef	"Authentication :: selectAuthenticationType (MyString method_order , int remote_methods)"		3387780	0					
ANR	3387782	CompoundStatement		902:90:26910:27305	3387780	0					
ANR	3387783	IdentifierDeclStatement	StringList method_list ( method_order . Value ( ) ) ;	907:1:27025:27071	3387780	0	True				
ANR	3387784	IdentifierDecl	method_list ( method_order . Value ( ) )		3387780	0					
ANR	3387785	IdentifierDeclType	StringList		3387780	0					
ANR	3387786	Identifier	method_list		3387780	1					
ANR	3387787	CallExpression	method_order . Value ( )		3387780	2					
ANR	3387788	Callee	method_order . Value		3387780	0					
ANR	3387789	MemberAccess	method_order . Value		3387780	0					
ANR	3387790	Identifier	method_order		3387780	0					
ANR	3387791	Identifier	Value		3387780	1					
ANR	3387792	ArgumentList			3387780	1					
ANR	3387793	IdentifierDeclStatement	char * tmp = NULL ;	909:1:27075:27092	3387780	1	True				
ANR	3387794	IdentifierDecl	* tmp = NULL		3387780	0					
ANR	3387795	IdentifierDeclType	char *		3387780	0					
ANR	3387796	Identifier	tmp		3387780	1					
ANR	3387797	AssignmentExpression	* tmp = NULL		3387780	2		=			
ANR	3387798	Identifier	NULL		3387780	0					
ANR	3387799	Identifier	NULL		3387780	1					
ANR	3387800	ExpressionStatement	method_list . rewind ( )	910:1:27095:27115	3387780	2	True				
ANR	3387801	CallExpression	method_list . rewind ( )		3387780	0					
ANR	3387802	Callee	method_list . rewind		3387780	0					
ANR	3387803	MemberAccess	method_list . rewind		3387780	0					
ANR	3387804	Identifier	method_list		3387780	0					
ANR	3387805	Identifier	rewind		3387780	1					
ANR	3387806	ArgumentList			3387780	1					
ANR	3387807	WhileStatement	while ( ( tmp = method_list . next ( ) ) )		3387780	3					
ANR	3387808	Condition	tmp = method_list . next ( )	912:9:27127:27152	3387780	0	True				
ANR	3387809	AssignmentExpression	tmp = method_list . next ( )		3387780	0		=			
ANR	3387810	Identifier	tmp		3387780	0					
ANR	3387811	CallExpression	method_list . next ( )		3387780	1					
ANR	3387812	Callee	method_list . next		3387780	0					
ANR	3387813	MemberAccess	method_list . next		3387780	0					
ANR	3387814	Identifier	method_list		3387780	0					
ANR	3387815	Identifier	next		3387780	1					
ANR	3387816	ArgumentList			3387780	1					
ANR	3387817	CompoundStatement		12:2:249:293	3387780	1					
ANR	3387818	IdentifierDeclStatement	int that_bit = SecMan :: getAuthBitmask ( tmp ) ;	913:2:27160:27204	3387780	0	True				
ANR	3387819	IdentifierDecl	that_bit = SecMan :: getAuthBitmask ( tmp )		3387780	0					
ANR	3387820	IdentifierDeclType	int		3387780	0					
ANR	3387821	Identifier	that_bit		3387780	1					
ANR	3387822	AssignmentExpression	that_bit = SecMan :: getAuthBitmask ( tmp )		3387780	2		=			
ANR	3387823	Identifier	that_bit		3387780	0					
ANR	3387824	CallExpression	SecMan :: getAuthBitmask ( tmp )		3387780	1					
ANR	3387825	Callee	SecMan :: getAuthBitmask		3387780	0					
ANR	3387826	Identifier	SecMan :: getAuthBitmask		3387780	0					
ANR	3387827	ArgumentList	tmp		3387780	1					
ANR	3387828	Argument	tmp		3387780	0					
ANR	3387829	Identifier	tmp		3387780	0					
ANR	3387830	IfStatement	if ( remote_methods & that_bit )		3387780	1					
ANR	3387831	Condition	remote_methods & that_bit	914:7:27213:27237	3387780	0	True				
ANR	3387832	BitAndExpression	remote_methods & that_bit		3387780	0		&			
ANR	3387833	Identifier	remote_methods		3387780	0					
ANR	3387834	Identifier	that_bit		3387780	1					
ANR	3387835	CompoundStatement		13:35:330:330	3387780	1					
ANR	3387836	ReturnStatement	return that_bit ;	916:3:27269:27284	3387780	0	True				
ANR	3387837	Identifier	that_bit		3387780	0					
ANR	3387838	ReturnStatement	return 0 ;	920:1:27295:27303	3387780	4	True				
ANR	3387839	PrimaryExpression	0		3387780	0					
ANR	3387840	ReturnType	int		3387780	1					
ANR	3387841	Identifier	Authentication :: selectAuthenticationType		3387780	2					
ANR	3387842	ParameterList	"MyString method_order , int remote_methods"		3387780	3					
ANR	3387843	Parameter	MyString method_order	902:46:26866:26886	3387780	0	True				
ANR	3387844	ParameterType	MyString		3387780	0					
ANR	3387845	Identifier	method_order		3387780	1					
ANR	3387846	Parameter	int remote_methods	902:69:26889:26906	3387780	1	True				
ANR	3387847	ParameterType	int		3387780	0					
ANR	3387848	Identifier	remote_methods		3387780	1					
ANR	3387849	CFGEntryNode	ENTRY		3387780		True				
ANR	3387850	CFGExitNode	EXIT		3387780		True				
ANR	3387851	Symbol	that_bit		3387780						
ANR	3387852	Symbol	method_order		3387780						
ANR	3387853	Symbol	NULL		3387780						
ANR	3387854	Symbol	remote_methods		3387780						
ANR	3387855	Symbol	tmp		3387780						
ANR	3387856	Symbol	method_list		3387780						
ANR	3387857	Symbol	method_list . next		3387780						
ANR	3387858	Symbol	SecMan :: getAuthBitmask		3387780						
