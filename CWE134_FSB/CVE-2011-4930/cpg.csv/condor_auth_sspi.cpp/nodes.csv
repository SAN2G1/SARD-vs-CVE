command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	850059	File	data/converged/CVE-2011-4930_htcondor/condor_auth_sspi.cpp								
ANR	850060	DeclStmt									
ANR	850061	Decl							extern HINSTANCE	extern HINSTANCE	_condor_hSecDll
ANR	850062	DeclStmt									
ANR	850063	Decl							PSecurityFunctionTable	PSecurityFunctionTable	Condor_Auth_SSPI :: pf
ANR	850064	Function	Condor_Auth_SSPI :: Condor_Auth_SSPI	32:0:1072:1215							
ANR	850065	FunctionDef	Condor_Auth_SSPI :: Condor_Auth_SSPI (ReliSock * sock)		850064	0					
ANR	850066	CompoundStatement		34:0:1169:1215	850064	0					
ANR	850067	ExpressionStatement	theCtx . dwLower = 0L	35:1:1172:1191	850064	0	True				
ANR	850068	AssignmentExpression	theCtx . dwLower = 0L		850064	0		=			
ANR	850069	MemberAccess	theCtx . dwLower		850064	0					
ANR	850070	Identifier	theCtx		850064	0					
ANR	850071	Identifier	dwLower		850064	1					
ANR	850072	PrimaryExpression	0L		850064	1					
ANR	850073	ExpressionStatement	theCtx . dwUpper = 0L	36:1:1194:1213	850064	1	True				
ANR	850074	AssignmentExpression	theCtx . dwUpper = 0L		850064	0		=			
ANR	850075	MemberAccess	theCtx . dwUpper		850064	0					
ANR	850076	Identifier	theCtx		850064	0					
ANR	850077	Identifier	dwUpper		850064	1					
ANR	850078	PrimaryExpression	0L		850064	1					
ANR	850079	Identifier	Condor_Auth_SSPI :: Condor_Auth_SSPI		850064	1					
ANR	850080	ParameterList	ReliSock * sock		850064	2					
ANR	850081	Parameter	ReliSock * sock	32:37:1109:1123	850064	0	True				
ANR	850082	ParameterType	ReliSock *		850064	0					
ANR	850083	Identifier	sock		850064	1					
ANR	850084	CFGEntryNode	ENTRY		850064		True				
ANR	850085	CFGExitNode	EXIT		850064		True				
ANR	850086	Symbol	sock		850064						
ANR	850087	Symbol	theCtx . dwUpper		850064						
ANR	850088	Symbol	theCtx		850064						
ANR	850089	Symbol	theCtx . dwLower		850064						
ANR	850090	Function	Condor_Auth_SSPI :: ~Condor_Auth_SSPI	39:0:1218:1355							
ANR	850091	FunctionDef	Condor_Auth_SSPI :: ~Condor_Auth_SSPI ()		850090	0					
ANR	850092	CompoundStatement		40:0:1258:1355	850090	0					
ANR	850093	IfStatement	if ( theCtx . dwLower != 0L || theCtx . dwUpper != 0L )		850090	0					
ANR	850094	Condition	theCtx . dwLower != 0L || theCtx . dwUpper != 0L	41:6:1266:1309	850090	0	True				
ANR	850095	OrExpression	theCtx . dwLower != 0L || theCtx . dwUpper != 0L		850090	0		||			
ANR	850096	EqualityExpression	theCtx . dwLower != 0L		850090	0		!=			
ANR	850097	MemberAccess	theCtx . dwLower		850090	0					
ANR	850098	Identifier	theCtx		850090	0					
ANR	850099	Identifier	dwLower		850090	1					
ANR	850100	PrimaryExpression	0L		850090	1					
ANR	850101	EqualityExpression	theCtx . dwUpper != 0L		850090	1		!=			
ANR	850102	MemberAccess	theCtx . dwUpper		850090	0					
ANR	850103	Identifier	theCtx		850090	0					
ANR	850104	Identifier	dwUpper		850090	1					
ANR	850105	PrimaryExpression	0L		850090	1					
ANR	850106	ExpressionStatement	( pf -> DeleteSecurityContext ) ( & theCtx )	42:2:1315:1353	850090	1	True				
ANR	850107	CallExpression	( pf -> DeleteSecurityContext ) ( & theCtx )		850090	0					
ANR	850108	Callee	pf -> DeleteSecurityContext		850090	0					
ANR	850109	PtrMemberAccess	pf -> DeleteSecurityContext		850090	0					
ANR	850110	Identifier	pf		850090	0					
ANR	850111	Identifier	DeleteSecurityContext		850090	1					
ANR	850112	ArgumentList	& theCtx		850090	1					
ANR	850113	Argument	& theCtx		850090	0					
ANR	850114	UnaryOperationExpression	& theCtx		850090	0					
ANR	850115	UnaryOperator	&		850090	0					
ANR	850116	Identifier	theCtx		850090	1					
ANR	850117	Identifier	Condor_Auth_SSPI :: ~Condor_Auth_SSPI		850090	1					
ANR	850118	ParameterList			850090	2					
ANR	850119	CFGEntryNode	ENTRY		850090		True				
ANR	850120	CFGExitNode	EXIT		850090		True				
ANR	850121	Symbol	pf		850090						
ANR	850122	Symbol	theCtx . dwUpper		850090						
ANR	850123	Symbol	theCtx		850090						
ANR	850124	Symbol	theCtx . dwLower		850090						
ANR	850125	Symbol	& theCtx		850090						
ANR	850126	Function	Condor_Auth_SSPI :: sspi_client_auth	45:0:1358:6650							
ANR	850127	FunctionDef	"Condor_Auth_SSPI :: sspi_client_auth (CredHandle & cred , CtxtHandle & cliCtx , const char * tokenSource)"		850126	0					
ANR	850128	CompoundStatement		49:0:1552:6650	850126	0					
ANR	850129	IdentifierDeclStatement	int rc ;	50:4:1558:1564	850126	0	True				
ANR	850130	IdentifierDecl	rc		850126	0					
ANR	850131	IdentifierDeclType	int		850126	0					
ANR	850132	Identifier	rc		850126	1					
ANR	850133	IdentifierDeclStatement	SecPkgInfo * secPackInfo ;	51:4:1570:1593	850126	1	True				
ANR	850134	IdentifierDecl	* secPackInfo		850126	0					
ANR	850135	IdentifierDeclType	SecPkgInfo *		850126	0					
ANR	850136	Identifier	secPackInfo		850126	1					
ANR	850137	IdentifierDeclStatement	char * myTokenSource ;	52:4:1599:1618	850126	2	True				
ANR	850138	IdentifierDecl	* myTokenSource		850126	0					
ANR	850139	IdentifierDeclType	char *		850126	0					
ANR	850140	Identifier	myTokenSource		850126	1					
ANR	850141	ExpressionStatement	myTokenSource = NULL	55:4:1676:1696	850126	3	True				
ANR	850142	AssignmentExpression	myTokenSource = NULL		850126	0		=			
ANR	850143	Identifier	myTokenSource		850126	0					
ANR	850144	Identifier	NULL		850126	1					
ANR	850145	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_client_auth() entered\\n"" )"	57:4:1707:1760	850126	4	True				
ANR	850146	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_client_auth() entered\\n"" )"		850126	0					
ANR	850147	Callee	dprintf		850126	0					
ANR	850148	Identifier	dprintf		850126	0					
ANR	850149	ArgumentList	D_FULLDEBUG		850126	1					
ANR	850150	Argument	D_FULLDEBUG		850126	0					
ANR	850151	Identifier	D_FULLDEBUG		850126	0					
ANR	850152	Argument	"""sspi_client_auth() entered\\n"""		850126	1					
ANR	850153	PrimaryExpression	"""sspi_client_auth() entered\\n"""		850126	0					
ANR	850154	ExpressionStatement	"rc = ( pf -> QuerySecurityPackageInfo ) ( ""NTLM"" , & secPackInfo )"	59:4:1771:1830	850126	5	True				
ANR	850155	AssignmentExpression	"rc = ( pf -> QuerySecurityPackageInfo ) ( ""NTLM"" , & secPackInfo )"		850126	0		=			
ANR	850156	Identifier	rc		850126	0					
ANR	850157	CallExpression	"( pf -> QuerySecurityPackageInfo ) ( ""NTLM"" , & secPackInfo )"		850126	1					
ANR	850158	Callee	pf -> QuerySecurityPackageInfo		850126	0					
ANR	850159	PtrMemberAccess	pf -> QuerySecurityPackageInfo		850126	0					
ANR	850160	Identifier	pf		850126	0					
ANR	850161	Identifier	QuerySecurityPackageInfo		850126	1					
ANR	850162	ArgumentList	"""NTLM"""		850126	1					
ANR	850163	Argument	"""NTLM"""		850126	0					
ANR	850164	PrimaryExpression	"""NTLM"""		850126	0					
ANR	850165	Argument	& secPackInfo		850126	1					
ANR	850166	UnaryOperationExpression	& secPackInfo		850126	0					
ANR	850167	UnaryOperator	&		850126	0					
ANR	850168	Identifier	secPackInfo		850126	1					
ANR	850169	IdentifierDeclStatement	TimeStamp useBefore ;	61:4:1841:1860	850126	6	True				
ANR	850170	IdentifierDecl	useBefore		850126	0					
ANR	850171	IdentifierDeclType	TimeStamp		850126	0					
ANR	850172	Identifier	useBefore		850126	1					
ANR	850173	ExpressionStatement	"rc = ( pf -> AcquireCredentialsHandle ) ( NULL , ""NTLM"" , SECPKG_CRED_OUTBOUND , NULL , NULL , NULL , NULL , & cred , & useBefore )"	63:4:1871:2028	850126	7	True				
ANR	850174	AssignmentExpression	"rc = ( pf -> AcquireCredentialsHandle ) ( NULL , ""NTLM"" , SECPKG_CRED_OUTBOUND , NULL , NULL , NULL , NULL , & cred , & useBefore )"		850126	0		=			
ANR	850175	Identifier	rc		850126	0					
ANR	850176	CallExpression	"( pf -> AcquireCredentialsHandle ) ( NULL , ""NTLM"" , SECPKG_CRED_OUTBOUND , NULL , NULL , NULL , NULL , & cred , & useBefore )"		850126	1					
ANR	850177	Callee	pf -> AcquireCredentialsHandle		850126	0					
ANR	850178	PtrMemberAccess	pf -> AcquireCredentialsHandle		850126	0					
ANR	850179	Identifier	pf		850126	0					
ANR	850180	Identifier	AcquireCredentialsHandle		850126	1					
ANR	850181	ArgumentList	NULL		850126	1					
ANR	850182	Argument	NULL		850126	0					
ANR	850183	Identifier	NULL		850126	0					
ANR	850184	Argument	"""NTLM"""		850126	1					
ANR	850185	PrimaryExpression	"""NTLM"""		850126	0					
ANR	850186	Argument	SECPKG_CRED_OUTBOUND		850126	2					
ANR	850187	Identifier	SECPKG_CRED_OUTBOUND		850126	0					
ANR	850188	Argument	NULL		850126	3					
ANR	850189	Identifier	NULL		850126	0					
ANR	850190	Argument	NULL		850126	4					
ANR	850191	Identifier	NULL		850126	0					
ANR	850192	Argument	NULL		850126	5					
ANR	850193	Identifier	NULL		850126	0					
ANR	850194	Argument	NULL		850126	6					
ANR	850195	Identifier	NULL		850126	0					
ANR	850196	Argument	& cred		850126	7					
ANR	850197	UnaryOperationExpression	& cred		850126	0					
ANR	850198	UnaryOperator	&		850126	0					
ANR	850199	Identifier	cred		850126	1					
ANR	850200	Argument	& useBefore		850126	8					
ANR	850201	UnaryOperationExpression	& useBefore		850126	0					
ANR	850202	UnaryOperator	&		850126	0					
ANR	850203	Identifier	useBefore		850126	1					
ANR	850204	IdentifierDeclStatement	"SecBufferDesc obd , ibd ;"	67:4:2071:2093	850126	8	True				
ANR	850205	IdentifierDecl	obd		850126	0					
ANR	850206	IdentifierDeclType	SecBufferDesc		850126	0					
ANR	850207	Identifier	obd		850126	1					
ANR	850208	IdentifierDecl	ibd		850126	1					
ANR	850209	IdentifierDeclType	SecBufferDesc		850126	0					
ANR	850210	Identifier	ibd		850126	1					
ANR	850211	IdentifierDeclStatement	"SecBuffer ob , ib ;"	68:4:2099:2115	850126	9	True				
ANR	850212	IdentifierDecl	ob		850126	0					
ANR	850213	IdentifierDeclType	SecBuffer		850126	0					
ANR	850214	Identifier	ob		850126	1					
ANR	850215	IdentifierDecl	ib		850126	1					
ANR	850216	IdentifierDeclType	SecBuffer		850126	0					
ANR	850217	Identifier	ib		850126	1					
ANR	850218	IdentifierDeclStatement	"DWORD ctxReq , ctxAttr ;"	70:4:2126:2147	850126	10	True				
ANR	850219	IdentifierDecl	ctxReq		850126	0					
ANR	850220	IdentifierDeclType	DWORD		850126	0					
ANR	850221	Identifier	ctxReq		850126	1					
ANR	850222	IdentifierDecl	ctxAttr		850126	1					
ANR	850223	IdentifierDeclType	DWORD		850126	0					
ANR	850224	Identifier	ctxAttr		850126	1					
ANR	850225	ExpressionStatement	ctxReq = ISC_REQ_REPLAY_DETECT | ISC_REQ_SEQUENCE_DETECT | ISC_REQ_CONFIDENTIALITY | ISC_REQ_DELEGATE	72:4:2158:2267	850126	11	True				
ANR	850226	AssignmentExpression	ctxReq = ISC_REQ_REPLAY_DETECT | ISC_REQ_SEQUENCE_DETECT | ISC_REQ_CONFIDENTIALITY | ISC_REQ_DELEGATE		850126	0		=			
ANR	850227	Identifier	ctxReq		850126	0					
ANR	850228	InclusiveOrExpression	ISC_REQ_REPLAY_DETECT | ISC_REQ_SEQUENCE_DETECT | ISC_REQ_CONFIDENTIALITY | ISC_REQ_DELEGATE		850126	1		|			
ANR	850229	Identifier	ISC_REQ_REPLAY_DETECT		850126	0					
ANR	850230	InclusiveOrExpression	ISC_REQ_SEQUENCE_DETECT | ISC_REQ_CONFIDENTIALITY | ISC_REQ_DELEGATE		850126	1		|			
ANR	850231	Identifier	ISC_REQ_SEQUENCE_DETECT		850126	0					
ANR	850232	InclusiveOrExpression	ISC_REQ_CONFIDENTIALITY | ISC_REQ_DELEGATE		850126	1		|			
ANR	850233	Identifier	ISC_REQ_CONFIDENTIALITY		850126	0					
ANR	850234	Identifier	ISC_REQ_DELEGATE		850126	1					
ANR	850235	IdentifierDeclStatement	bool haveInbuffer = false ;	75:4:2278:2303	850126	12	True				
ANR	850236	IdentifierDecl	haveInbuffer = false		850126	0					
ANR	850237	IdentifierDeclType	bool		850126	0					
ANR	850238	Identifier	haveInbuffer		850126	1					
ANR	850239	AssignmentExpression	haveInbuffer = false		850126	2		=			
ANR	850240	Identifier	false		850126	0					
ANR	850241	Identifier	false		850126	1					
ANR	850242	IdentifierDeclStatement	bool haveContext = false ;	76:4:2309:2333	850126	13	True				
ANR	850243	IdentifierDecl	haveContext = false		850126	0					
ANR	850244	IdentifierDeclType	bool		850126	0					
ANR	850245	Identifier	haveContext		850126	1					
ANR	850246	AssignmentExpression	haveContext = false		850126	2		=			
ANR	850247	Identifier	false		850126	0					
ANR	850248	Identifier	false		850126	1					
ANR	850249	ExpressionStatement	ib . pvBuffer = NULL	77:4:2339:2357	850126	14	True				
ANR	850250	AssignmentExpression	ib . pvBuffer = NULL		850126	0		=			
ANR	850251	MemberAccess	ib . pvBuffer		850126	0					
ANR	850252	Identifier	ib		850126	0					
ANR	850253	Identifier	pvBuffer		850126	1					
ANR	850254	Identifier	NULL		850126	1					
ANR	850255	WhileStatement	while ( 1 )		850126	15					
ANR	850256	Condition	1	79:12:2376:2376	850126	0	True				
ANR	850257	PrimaryExpression	1		850126	0					
ANR	850258	CompoundStatement		31:16:827:827	850126	1					
ANR	850259	ExpressionStatement	obd . ulVersion = SECBUFFER_VERSION	81:8:2391:2424	850126	0	True				
ANR	850260	AssignmentExpression	obd . ulVersion = SECBUFFER_VERSION		850126	0		=			
ANR	850261	MemberAccess	obd . ulVersion		850126	0					
ANR	850262	Identifier	obd		850126	0					
ANR	850263	Identifier	ulVersion		850126	1					
ANR	850264	Identifier	SECBUFFER_VERSION		850126	1					
ANR	850265	ExpressionStatement	obd . cBuffers = 1	82:8:2434:2450	850126	1	True				
ANR	850266	AssignmentExpression	obd . cBuffers = 1		850126	0		=			
ANR	850267	MemberAccess	obd . cBuffers		850126	0					
ANR	850268	Identifier	obd		850126	0					
ANR	850269	Identifier	cBuffers		850126	1					
ANR	850270	PrimaryExpression	1		850126	1					
ANR	850271	ExpressionStatement	obd . pBuffers = & ob	83:8:2460:2478	850126	2	True				
ANR	850272	AssignmentExpression	obd . pBuffers = & ob		850126	0		=			
ANR	850273	MemberAccess	obd . pBuffers		850126	0					
ANR	850274	Identifier	obd		850126	0					
ANR	850275	Identifier	pBuffers		850126	1					
ANR	850276	UnaryOperationExpression	& ob		850126	1					
ANR	850277	UnaryOperator	&		850126	0					
ANR	850278	Identifier	ob		850126	1					
ANR	850279	ExpressionStatement	ob . BufferType = SECBUFFER_TOKEN	84:8:2507:2538	850126	3	True				
ANR	850280	AssignmentExpression	ob . BufferType = SECBUFFER_TOKEN		850126	0		=			
ANR	850281	MemberAccess	ob . BufferType		850126	0					
ANR	850282	Identifier	ob		850126	0					
ANR	850283	Identifier	BufferType		850126	1					
ANR	850284	Identifier	SECBUFFER_TOKEN		850126	1					
ANR	850285	ExpressionStatement	ob . cbBuffer = secPackInfo -> cbMaxToken	85:8:2572:2609	850126	4	True				
ANR	850286	AssignmentExpression	ob . cbBuffer = secPackInfo -> cbMaxToken		850126	0		=			
ANR	850287	MemberAccess	ob . cbBuffer		850126	0					
ANR	850288	Identifier	ob		850126	0					
ANR	850289	Identifier	cbBuffer		850126	1					
ANR	850290	PtrMemberAccess	secPackInfo -> cbMaxToken		850126	1					
ANR	850291	Identifier	secPackInfo		850126	0					
ANR	850292	Identifier	cbMaxToken		850126	1					
ANR	850293	ExpressionStatement	"ob . pvBuffer = LocalAlloc ( 0 , ob . cbBuffer )"	86:8:2619:2661	850126	5	True				
ANR	850294	AssignmentExpression	"ob . pvBuffer = LocalAlloc ( 0 , ob . cbBuffer )"		850126	0		=			
ANR	850295	MemberAccess	ob . pvBuffer		850126	0					
ANR	850296	Identifier	ob		850126	0					
ANR	850297	Identifier	pvBuffer		850126	1					
ANR	850298	CallExpression	"LocalAlloc ( 0 , ob . cbBuffer )"		850126	1					
ANR	850299	Callee	LocalAlloc		850126	0					
ANR	850300	Identifier	LocalAlloc		850126	0					
ANR	850301	ArgumentList	0		850126	1					
ANR	850302	Argument	0		850126	0					
ANR	850303	PrimaryExpression	0		850126	0					
ANR	850304	Argument	ob . cbBuffer		850126	1					
ANR	850305	MemberAccess	ob . cbBuffer		850126	0					
ANR	850306	Identifier	ob		850126	0					
ANR	850307	Identifier	cbBuffer		850126	1					
ANR	850308	ExpressionStatement	"rc = ( pf -> InitializeSecurityContext ) ( & cred , haveContext ? & cliCtx : NULL , myTokenSource , ctxReq , 0 , SECURITY_NATIVE_DREP , haveInbuffer ? & ibd : NULL , 0 , & cliCtx , & obd , & ctxAttr , & useBefore )"	88:8:2684:3198	850126	6	True				
ANR	850309	AssignmentExpression	"rc = ( pf -> InitializeSecurityContext ) ( & cred , haveContext ? & cliCtx : NULL , myTokenSource , ctxReq , 0 , SECURITY_NATIVE_DREP , haveInbuffer ? & ibd : NULL , 0 , & cliCtx , & obd , & ctxAttr , & useBefore )"		850126	0		=			
ANR	850310	Identifier	rc		850126	0					
ANR	850311	CallExpression	"( pf -> InitializeSecurityContext ) ( & cred , haveContext ? & cliCtx : NULL , myTokenSource , ctxReq , 0 , SECURITY_NATIVE_DREP , haveInbuffer ? & ibd : NULL , 0 , & cliCtx , & obd , & ctxAttr , & useBefore )"		850126	1					
ANR	850312	Callee	pf -> InitializeSecurityContext		850126	0					
ANR	850313	PtrMemberAccess	pf -> InitializeSecurityContext		850126	0					
ANR	850314	Identifier	pf		850126	0					
ANR	850315	Identifier	InitializeSecurityContext		850126	1					
ANR	850316	ArgumentList	& cred		850126	1					
ANR	850317	Argument	& cred		850126	0					
ANR	850318	UnaryOperationExpression	& cred		850126	0					
ANR	850319	UnaryOperator	&		850126	0					
ANR	850320	Identifier	cred		850126	1					
ANR	850321	Argument	haveContext ? & cliCtx : NULL		850126	1					
ANR	850322	ConditionalExpression	haveContext ? & cliCtx : NULL		850126	0					
ANR	850323	Condition	haveContext		850126	0					
ANR	850324	Identifier	haveContext		850126	0					
ANR	850325	UnaryOperationExpression	& cliCtx		850126	1					
ANR	850326	UnaryOperator	&		850126	0					
ANR	850327	Identifier	cliCtx		850126	1					
ANR	850328	Identifier	NULL		850126	2					
ANR	850329	Argument	myTokenSource		850126	2					
ANR	850330	Identifier	myTokenSource		850126	0					
ANR	850331	Argument	ctxReq		850126	3					
ANR	850332	Identifier	ctxReq		850126	0					
ANR	850333	Argument	0		850126	4					
ANR	850334	PrimaryExpression	0		850126	0					
ANR	850335	Argument	SECURITY_NATIVE_DREP		850126	5					
ANR	850336	Identifier	SECURITY_NATIVE_DREP		850126	0					
ANR	850337	Argument	haveInbuffer ? & ibd : NULL		850126	6					
ANR	850338	ConditionalExpression	haveInbuffer ? & ibd : NULL		850126	0					
ANR	850339	Condition	haveInbuffer		850126	0					
ANR	850340	Identifier	haveInbuffer		850126	0					
ANR	850341	UnaryOperationExpression	& ibd		850126	1					
ANR	850342	UnaryOperator	&		850126	0					
ANR	850343	Identifier	ibd		850126	1					
ANR	850344	Identifier	NULL		850126	2					
ANR	850345	Argument	0		850126	7					
ANR	850346	PrimaryExpression	0		850126	0					
ANR	850347	Argument	& cliCtx		850126	8					
ANR	850348	UnaryOperationExpression	& cliCtx		850126	0					
ANR	850349	UnaryOperator	&		850126	0					
ANR	850350	Identifier	cliCtx		850126	1					
ANR	850351	Argument	& obd		850126	9					
ANR	850352	UnaryOperationExpression	& obd		850126	0					
ANR	850353	UnaryOperator	&		850126	0					
ANR	850354	Identifier	obd		850126	1					
ANR	850355	Argument	& ctxAttr		850126	10					
ANR	850356	UnaryOperationExpression	& ctxAttr		850126	0					
ANR	850357	UnaryOperator	&		850126	0					
ANR	850358	Identifier	ctxAttr		850126	1					
ANR	850359	Argument	& useBefore		850126	11					
ANR	850360	UnaryOperationExpression	& useBefore		850126	0					
ANR	850361	UnaryOperator	&		850126	0					
ANR	850362	Identifier	useBefore		850126	1					
ANR	850363	IfStatement	if ( ib . pvBuffer != NULL )		850126	7					
ANR	850364	Condition	ib . pvBuffer != NULL	97:13:3222:3240	850126	0	True				
ANR	850365	EqualityExpression	ib . pvBuffer != NULL		850126	0		!=			
ANR	850366	MemberAccess	ib . pvBuffer		850126	0					
ANR	850367	Identifier	ib		850126	0					
ANR	850368	Identifier	pvBuffer		850126	1					
ANR	850369	Identifier	NULL		850126	1					
ANR	850370	CompoundStatement		50:12:1703:1703	850126	1					
ANR	850371	ExpressionStatement	LocalFree ( ib . pvBuffer )	99:16:3274:3298	850126	0	True				
ANR	850372	CallExpression	LocalFree ( ib . pvBuffer )		850126	0					
ANR	850373	Callee	LocalFree		850126	0					
ANR	850374	Identifier	LocalFree		850126	0					
ANR	850375	ArgumentList	ib . pvBuffer		850126	1					
ANR	850376	Argument	ib . pvBuffer		850126	0					
ANR	850377	MemberAccess	ib . pvBuffer		850126	0					
ANR	850378	Identifier	ib		850126	0					
ANR	850379	Identifier	pvBuffer		850126	1					
ANR	850380	ExpressionStatement	ib . pvBuffer = NULL	100:16:3316:3334	850126	1	True				
ANR	850381	AssignmentExpression	ib . pvBuffer = NULL		850126	0		=			
ANR	850382	MemberAccess	ib . pvBuffer		850126	0					
ANR	850383	Identifier	ib		850126	0					
ANR	850384	Identifier	pvBuffer		850126	1					
ANR	850385	Identifier	NULL		850126	1					
ANR	850386	IfStatement	if ( rc == SEC_I_COMPLETE_AND_CONTINUE || rc == SEC_I_COMPLETE_NEEDED )		850126	8					
ANR	850387	Condition	rc == SEC_I_COMPLETE_AND_CONTINUE || rc == SEC_I_COMPLETE_NEEDED	103:13:3372:3435	850126	0	True				
ANR	850388	OrExpression	rc == SEC_I_COMPLETE_AND_CONTINUE || rc == SEC_I_COMPLETE_NEEDED		850126	0		||			
ANR	850389	EqualityExpression	rc == SEC_I_COMPLETE_AND_CONTINUE		850126	0		==			
ANR	850390	Identifier	rc		850126	0					
ANR	850391	Identifier	SEC_I_COMPLETE_AND_CONTINUE		850126	1					
ANR	850392	EqualityExpression	rc == SEC_I_COMPLETE_NEEDED		850126	1		==			
ANR	850393	Identifier	rc		850126	0					
ANR	850394	Identifier	SEC_I_COMPLETE_NEEDED		850126	1					
ANR	850395	CompoundStatement		56:12:1898:1898	850126	1					
ANR	850396	IfStatement	if ( pf -> CompleteAuthToken != NULL )		850126	0					
ANR	850397	Condition	pf -> CompleteAuthToken != NULL	105:21:3474:3502	850126	0	True				
ANR	850398	EqualityExpression	pf -> CompleteAuthToken != NULL		850126	0		!=			
ANR	850399	PtrMemberAccess	pf -> CompleteAuthToken		850126	0					
ANR	850400	Identifier	pf		850126	0					
ANR	850401	Identifier	CompleteAuthToken		850126	1					
ANR	850402	Identifier	NULL		850126	1					
ANR	850403	ExpressionStatement	"( pf -> CompleteAuthToken ) ( & cliCtx , & obd )"	106:20:3549:3589	850126	1	True				
ANR	850404	CallExpression	"( pf -> CompleteAuthToken ) ( & cliCtx , & obd )"		850126	0					
ANR	850405	Callee	pf -> CompleteAuthToken		850126	0					
ANR	850406	PtrMemberAccess	pf -> CompleteAuthToken		850126	0					
ANR	850407	Identifier	pf		850126	0					
ANR	850408	Identifier	CompleteAuthToken		850126	1					
ANR	850409	ArgumentList	& cliCtx		850126	1					
ANR	850410	Argument	& cliCtx		850126	0					
ANR	850411	UnaryOperationExpression	& cliCtx		850126	0					
ANR	850412	UnaryOperator	&		850126	0					
ANR	850413	Identifier	cliCtx		850126	1					
ANR	850414	Argument	& obd		850126	1					
ANR	850415	UnaryOperationExpression	& obd		850126	0					
ANR	850416	UnaryOperator	&		850126	0					
ANR	850417	Identifier	obd		850126	1					
ANR	850418	IfStatement	if ( rc == SEC_I_COMPLETE_NEEDED )		850126	1					
ANR	850419	Condition	rc == SEC_I_COMPLETE_NEEDED	107:21:3612:3638	850126	0	True				
ANR	850420	EqualityExpression	rc == SEC_I_COMPLETE_NEEDED		850126	0		==			
ANR	850421	Identifier	rc		850126	0					
ANR	850422	Identifier	SEC_I_COMPLETE_NEEDED		850126	1					
ANR	850423	ExpressionStatement	rc = SEC_E_OK	108:20:3662:3675	850126	1	True				
ANR	850424	AssignmentExpression	rc = SEC_E_OK		850126	0		=			
ANR	850425	Identifier	rc		850126	0					
ANR	850426	Identifier	SEC_E_OK		850126	1					
ANR	850427	ElseStatement	else		850126	0					
ANR	850428	IfStatement	if ( rc == SEC_I_COMPLETE_AND_CONTINUE )		850126	0					
ANR	850429	Condition	rc == SEC_I_COMPLETE_AND_CONTINUE	109:26:3703:3735	850126	0	True				
ANR	850430	EqualityExpression	rc == SEC_I_COMPLETE_AND_CONTINUE		850126	0		==			
ANR	850431	Identifier	rc		850126	0					
ANR	850432	Identifier	SEC_I_COMPLETE_AND_CONTINUE		850126	1					
ANR	850433	ExpressionStatement	rc = SEC_I_CONTINUE_NEEDED	110:20:3759:3785	850126	1	True				
ANR	850434	AssignmentExpression	rc = SEC_I_CONTINUE_NEEDED		850126	0		=			
ANR	850435	Identifier	rc		850126	0					
ANR	850436	Identifier	SEC_I_CONTINUE_NEEDED		850126	1					
ANR	850437	IfStatement	if ( ob . cbBuffer != 0 )		850126	9					
ANR	850438	Condition	ob . cbBuffer != 0	114:13:3875:3890	850126	0	True				
ANR	850439	EqualityExpression	ob . cbBuffer != 0		850126	0		!=			
ANR	850440	MemberAccess	ob . cbBuffer		850126	0					
ANR	850441	Identifier	ob		850126	0					
ANR	850442	Identifier	cbBuffer		850126	1					
ANR	850443	PrimaryExpression	0		850126	1					
ANR	850444	CompoundStatement		67:12:2353:2353	850126	1					
ANR	850445	ExpressionStatement	mySock_ -> encode ( )	116:16:3924:3941	850126	0	True				
ANR	850446	CallExpression	mySock_ -> encode ( )		850126	0					
ANR	850447	Callee	mySock_ -> encode		850126	0					
ANR	850448	PtrMemberAccess	mySock_ -> encode		850126	0					
ANR	850449	Identifier	mySock_		850126	0					
ANR	850450	Identifier	encode		850126	1					
ANR	850451	ArgumentList			850126	1					
ANR	850452	IfStatement	"if ( ! mySock_ -> code ( ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) )"		850126	1					
ANR	850453	Condition	"! mySock_ -> code ( ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"	119:21:4053:4267	850126	0	True				
ANR	850454	OrExpression	"! mySock_ -> code ( ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850126	0		||			
ANR	850455	UnaryOperationExpression	! mySock_ -> code ( ob . cbBuffer )		850126	0					
ANR	850456	UnaryOperator	!		850126	0					
ANR	850457	CallExpression	mySock_ -> code ( ob . cbBuffer )		850126	1					
ANR	850458	Callee	mySock_ -> code		850126	0					
ANR	850459	PtrMemberAccess	mySock_ -> code		850126	0					
ANR	850460	Identifier	mySock_		850126	0					
ANR	850461	Identifier	code		850126	1					
ANR	850462	ArgumentList	ob . cbBuffer		850126	1					
ANR	850463	Argument	ob . cbBuffer		850126	0					
ANR	850464	MemberAccess	ob . cbBuffer		850126	0					
ANR	850465	Identifier	ob		850126	0					
ANR	850466	Identifier	cbBuffer		850126	1					
ANR	850467	OrExpression	"! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850126	1		||			
ANR	850468	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850126	0					
ANR	850469	UnaryOperator	!		850126	0					
ANR	850470	CallExpression	mySock_ -> end_of_message ( )		850126	1					
ANR	850471	Callee	mySock_ -> end_of_message		850126	0					
ANR	850472	PtrMemberAccess	mySock_ -> end_of_message		850126	0					
ANR	850473	Identifier	mySock_		850126	0					
ANR	850474	Identifier	end_of_message		850126	1					
ANR	850475	ArgumentList			850126	1					
ANR	850476	OrExpression	"! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850126	1		||			
ANR	850477	UnaryOperationExpression	"! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer )"		850126	0					
ANR	850478	UnaryOperator	!		850126	0					
ANR	850479	CallExpression	"mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer )"		850126	1					
ANR	850480	Callee	mySock_ -> put_bytes		850126	0					
ANR	850481	PtrMemberAccess	mySock_ -> put_bytes		850126	0					
ANR	850482	Identifier	mySock_		850126	0					
ANR	850483	Identifier	put_bytes		850126	1					
ANR	850484	ArgumentList	( const char * ) ob . pvBuffer		850126	1					
ANR	850485	Argument	( const char * ) ob . pvBuffer		850126	0					
ANR	850486	CastExpression	( const char * ) ob . pvBuffer		850126	0					
ANR	850487	CastTarget	const char *		850126	0					
ANR	850488	MemberAccess	ob . pvBuffer		850126	1					
ANR	850489	Identifier	ob		850126	0					
ANR	850490	Identifier	pvBuffer		850126	1					
ANR	850491	Argument	ob . cbBuffer		850126	1					
ANR	850492	MemberAccess	ob . cbBuffer		850126	0					
ANR	850493	Identifier	ob		850126	0					
ANR	850494	Identifier	cbBuffer		850126	1					
ANR	850495	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850126	1					
ANR	850496	UnaryOperator	!		850126	0					
ANR	850497	CallExpression	mySock_ -> end_of_message ( )		850126	1					
ANR	850498	Callee	mySock_ -> end_of_message		850126	0					
ANR	850499	PtrMemberAccess	mySock_ -> end_of_message		850126	0					
ANR	850500	Identifier	mySock_		850126	0					
ANR	850501	Identifier	end_of_message		850126	1					
ANR	850502	ArgumentList			850126	1					
ANR	850503	CompoundStatement		74:50:2718:2718	850126	1					
ANR	850504	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR sspi_client_auth() failed to send blob to server!\\n"" )"	123:20:4293:4399	850126	0	True				
ANR	850505	CallExpression	"dprintf ( D_ALWAYS , ""ERROR sspi_client_auth() failed to send blob to server!\\n"" )"		850126	0					
ANR	850506	Callee	dprintf		850126	0					
ANR	850507	Identifier	dprintf		850126	0					
ANR	850508	ArgumentList	D_ALWAYS		850126	1					
ANR	850509	Argument	D_ALWAYS		850126	0					
ANR	850510	Identifier	D_ALWAYS		850126	0					
ANR	850511	Argument	"""ERROR sspi_client_auth() failed to send blob to server!\\n"""		850126	1					
ANR	850512	PrimaryExpression	"""ERROR sspi_client_auth() failed to send blob to server!\\n"""		850126	0					
ANR	850513	ExpressionStatement	LocalFree ( ob . pvBuffer )	125:20:4421:4445	850126	1	True				
ANR	850514	CallExpression	LocalFree ( ob . pvBuffer )		850126	0					
ANR	850515	Callee	LocalFree		850126	0					
ANR	850516	Identifier	LocalFree		850126	0					
ANR	850517	ArgumentList	ob . pvBuffer		850126	1					
ANR	850518	Argument	ob . pvBuffer		850126	0					
ANR	850519	MemberAccess	ob . pvBuffer		850126	0					
ANR	850520	Identifier	ob		850126	0					
ANR	850521	Identifier	pvBuffer		850126	1					
ANR	850522	ExpressionStatement	ob . pvBuffer = NULL	126:20:4467:4485	850126	2	True				
ANR	850523	AssignmentExpression	ob . pvBuffer = NULL		850126	0		=			
ANR	850524	MemberAccess	ob . pvBuffer		850126	0					
ANR	850525	Identifier	ob		850126	0					
ANR	850526	Identifier	pvBuffer		850126	1					
ANR	850527	Identifier	NULL		850126	1					
ANR	850528	ExpressionStatement	( pf -> FreeContextBuffer ) ( secPackInfo )	127:20:4507:4545	850126	3	True				
ANR	850529	CallExpression	( pf -> FreeContextBuffer ) ( secPackInfo )		850126	0					
ANR	850530	Callee	pf -> FreeContextBuffer		850126	0					
ANR	850531	PtrMemberAccess	pf -> FreeContextBuffer		850126	0					
ANR	850532	Identifier	pf		850126	0					
ANR	850533	Identifier	FreeContextBuffer		850126	1					
ANR	850534	ArgumentList	secPackInfo		850126	1					
ANR	850535	Argument	secPackInfo		850126	0					
ANR	850536	Identifier	secPackInfo		850126	0					
ANR	850537	IfStatement	if ( myTokenSource )		850126	4					
ANR	850538	Condition	myTokenSource	128:25:4572:4584	850126	0	True				
ANR	850539	Identifier	myTokenSource		850126	0					
ANR	850540	CompoundStatement		80:41:3035:3035	850126	1					
ANR	850541	ExpressionStatement	free ( myTokenSource )	129:24:4614:4635	850126	0	True				
ANR	850542	CallExpression	free ( myTokenSource )		850126	0					
ANR	850543	Callee	free		850126	0					
ANR	850544	Identifier	free		850126	0					
ANR	850545	ArgumentList	myTokenSource		850126	1					
ANR	850546	Argument	myTokenSource		850126	0					
ANR	850547	Identifier	myTokenSource		850126	0					
ANR	850548	ReturnStatement	return 0 ;	131:20:4679:4687	850126	5	True				
ANR	850549	PrimaryExpression	0		850126	0					
ANR	850550	ExpressionStatement	LocalFree ( ob . pvBuffer )	134:8:4732:4756	850126	10	True				
ANR	850551	CallExpression	LocalFree ( ob . pvBuffer )		850126	0					
ANR	850552	Callee	LocalFree		850126	0					
ANR	850553	Identifier	LocalFree		850126	0					
ANR	850554	ArgumentList	ob . pvBuffer		850126	1					
ANR	850555	Argument	ob . pvBuffer		850126	0					
ANR	850556	MemberAccess	ob . pvBuffer		850126	0					
ANR	850557	Identifier	ob		850126	0					
ANR	850558	Identifier	pvBuffer		850126	1					
ANR	850559	ExpressionStatement	ob . pvBuffer = NULL	135:8:4766:4784	850126	11	True				
ANR	850560	AssignmentExpression	ob . pvBuffer = NULL		850126	0		=			
ANR	850561	MemberAccess	ob . pvBuffer		850126	0					
ANR	850562	Identifier	ob		850126	0					
ANR	850563	Identifier	pvBuffer		850126	1					
ANR	850564	Identifier	NULL		850126	1					
ANR	850565	IfStatement	if ( rc != SEC_I_CONTINUE_NEEDED )		850126	12					
ANR	850566	Condition	rc != SEC_I_CONTINUE_NEEDED	137:13:4808:4834	850126	0	True				
ANR	850567	EqualityExpression	rc != SEC_I_CONTINUE_NEEDED		850126	0		!=			
ANR	850568	Identifier	rc		850126	0					
ANR	850569	Identifier	SEC_I_CONTINUE_NEEDED		850126	1					
ANR	850570	BreakStatement	break ;	138:12:4850:4855	850126	1	True				
ANR	850571	ExpressionStatement	ibd . ulVersion = SECBUFFER_VERSION	141:8:4922:4955	850126	13	True				
ANR	850572	AssignmentExpression	ibd . ulVersion = SECBUFFER_VERSION		850126	0		=			
ANR	850573	MemberAccess	ibd . ulVersion		850126	0					
ANR	850574	Identifier	ibd		850126	0					
ANR	850575	Identifier	ulVersion		850126	1					
ANR	850576	Identifier	SECBUFFER_VERSION		850126	1					
ANR	850577	ExpressionStatement	ibd . cBuffers = 1	142:8:4965:4981	850126	14	True				
ANR	850578	AssignmentExpression	ibd . cBuffers = 1		850126	0		=			
ANR	850579	MemberAccess	ibd . cBuffers		850126	0					
ANR	850580	Identifier	ibd		850126	0					
ANR	850581	Identifier	cBuffers		850126	1					
ANR	850582	PrimaryExpression	1		850126	1					
ANR	850583	ExpressionStatement	ibd . pBuffers = & ib	143:8:4991:5009	850126	15	True				
ANR	850584	AssignmentExpression	ibd . pBuffers = & ib		850126	0		=			
ANR	850585	MemberAccess	ibd . pBuffers		850126	0					
ANR	850586	Identifier	ibd		850126	0					
ANR	850587	Identifier	pBuffers		850126	1					
ANR	850588	UnaryOperationExpression	& ib		850126	1					
ANR	850589	UnaryOperator	&		850126	0					
ANR	850590	Identifier	ib		850126	1					
ANR	850591	ExpressionStatement	ib . BufferType = SECBUFFER_TOKEN	144:8:5038:5069	850126	16	True				
ANR	850592	AssignmentExpression	ib . BufferType = SECBUFFER_TOKEN		850126	0		=			
ANR	850593	MemberAccess	ib . BufferType		850126	0					
ANR	850594	Identifier	ib		850126	0					
ANR	850595	Identifier	BufferType		850126	1					
ANR	850596	Identifier	SECBUFFER_TOKEN		850126	1					
ANR	850597	ExpressionStatement	ib . pvBuffer = NULL	147:8:5153:5171	850126	17	True				
ANR	850598	AssignmentExpression	ib . pvBuffer = NULL		850126	0		=			
ANR	850599	MemberAccess	ib . pvBuffer		850126	0					
ANR	850600	Identifier	ib		850126	0					
ANR	850601	Identifier	pvBuffer		850126	1					
ANR	850602	Identifier	NULL		850126	1					
ANR	850603	ExpressionStatement	mySock_ -> decode ( )	148:8:5181:5198	850126	18	True				
ANR	850604	CallExpression	mySock_ -> decode ( )		850126	0					
ANR	850605	Callee	mySock_ -> decode		850126	0					
ANR	850606	PtrMemberAccess	mySock_ -> decode		850126	0					
ANR	850607	Identifier	mySock_		850126	0					
ANR	850608	Identifier	decode		850126	1					
ANR	850609	ArgumentList			850126	1					
ANR	850610	IfStatement	"if ( ! mySock_ -> code ( ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) )"		850126	19					
ANR	850611	Condition	"! mySock_ -> code ( ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"	149:13:5213:5460	850126	0	True				
ANR	850612	OrExpression	"! mySock_ -> code ( ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850126	0		||			
ANR	850613	UnaryOperationExpression	! mySock_ -> code ( ib . cbBuffer )		850126	0					
ANR	850614	UnaryOperator	!		850126	0					
ANR	850615	CallExpression	mySock_ -> code ( ib . cbBuffer )		850126	1					
ANR	850616	Callee	mySock_ -> code		850126	0					
ANR	850617	PtrMemberAccess	mySock_ -> code		850126	0					
ANR	850618	Identifier	mySock_		850126	0					
ANR	850619	Identifier	code		850126	1					
ANR	850620	ArgumentList	ib . cbBuffer		850126	1					
ANR	850621	Argument	ib . cbBuffer		850126	0					
ANR	850622	MemberAccess	ib . cbBuffer		850126	0					
ANR	850623	Identifier	ib		850126	0					
ANR	850624	Identifier	cbBuffer		850126	1					
ANR	850625	OrExpression	"! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850126	1		||			
ANR	850626	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850126	0					
ANR	850627	UnaryOperator	!		850126	0					
ANR	850628	CallExpression	mySock_ -> end_of_message ( )		850126	1					
ANR	850629	Callee	mySock_ -> end_of_message		850126	0					
ANR	850630	PtrMemberAccess	mySock_ -> end_of_message		850126	0					
ANR	850631	Identifier	mySock_		850126	0					
ANR	850632	Identifier	end_of_message		850126	1					
ANR	850633	ArgumentList			850126	1					
ANR	850634	OrExpression	"! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850126	1		||			
ANR	850635	UnaryOperationExpression	"! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) )"		850126	0					
ANR	850636	UnaryOperator	!		850126	0					
ANR	850637	AssignmentExpression	"ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer )"		850126	1		=			
ANR	850638	MemberAccess	ib . pvBuffer		850126	0					
ANR	850639	Identifier	ib		850126	0					
ANR	850640	Identifier	pvBuffer		850126	1					
ANR	850641	CallExpression	"LocalAlloc ( 0 , ib . cbBuffer )"		850126	1					
ANR	850642	Callee	LocalAlloc		850126	0					
ANR	850643	Identifier	LocalAlloc		850126	0					
ANR	850644	ArgumentList	0		850126	1					
ANR	850645	Argument	0		850126	0					
ANR	850646	PrimaryExpression	0		850126	0					
ANR	850647	Argument	ib . cbBuffer		850126	1					
ANR	850648	MemberAccess	ib . cbBuffer		850126	0					
ANR	850649	Identifier	ib		850126	0					
ANR	850650	Identifier	cbBuffer		850126	1					
ANR	850651	OrExpression	"! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850126	1		||			
ANR	850652	UnaryOperationExpression	"! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer )"		850126	0					
ANR	850653	UnaryOperator	!		850126	0					
ANR	850654	CallExpression	"mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer )"		850126	1					
ANR	850655	Callee	mySock_ -> get_bytes		850126	0					
ANR	850656	PtrMemberAccess	mySock_ -> get_bytes		850126	0					
ANR	850657	Identifier	mySock_		850126	0					
ANR	850658	Identifier	get_bytes		850126	1					
ANR	850659	ArgumentList	( char * ) ib . pvBuffer		850126	1					
ANR	850660	Argument	( char * ) ib . pvBuffer		850126	0					
ANR	850661	CastExpression	( char * ) ib . pvBuffer		850126	0					
ANR	850662	CastTarget	char *		850126	0					
ANR	850663	MemberAccess	ib . pvBuffer		850126	1					
ANR	850664	Identifier	ib		850126	0					
ANR	850665	Identifier	pvBuffer		850126	1					
ANR	850666	Argument	ib . cbBuffer		850126	1					
ANR	850667	MemberAccess	ib . cbBuffer		850126	0					
ANR	850668	Identifier	ib		850126	0					
ANR	850669	Identifier	cbBuffer		850126	1					
ANR	850670	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850126	1					
ANR	850671	UnaryOperator	!		850126	0					
ANR	850672	CallExpression	mySock_ -> end_of_message ( )		850126	1					
ANR	850673	Callee	mySock_ -> end_of_message		850126	0					
ANR	850674	PtrMemberAccess	mySock_ -> end_of_message		850126	0					
ANR	850675	Identifier	mySock_		850126	0					
ANR	850676	Identifier	end_of_message		850126	1					
ANR	850677	ArgumentList			850126	1					
ANR	850678	CompoundStatement		106:12:3924:3924	850126	1					
ANR	850679	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR sspi_client_auth() failed to receive blob from server!\\n"" )"	155:16:5495:5602	850126	0	True				
ANR	850680	CallExpression	"dprintf ( D_ALWAYS , ""ERROR sspi_client_auth() failed to receive blob from server!\\n"" )"		850126	0					
ANR	850681	Callee	dprintf		850126	0					
ANR	850682	Identifier	dprintf		850126	0					
ANR	850683	ArgumentList	D_ALWAYS		850126	1					
ANR	850684	Argument	D_ALWAYS		850126	0					
ANR	850685	Identifier	D_ALWAYS		850126	0					
ANR	850686	Argument	"""ERROR sspi_client_auth() failed to receive blob from server!\\n"""		850126	1					
ANR	850687	PrimaryExpression	"""ERROR sspi_client_auth() failed to receive blob from server!\\n"""		850126	0					
ANR	850688	IfStatement	if ( ib . pvBuffer )		850126	1					
ANR	850689	Condition	ib . pvBuffer	157:20:5624:5634	850126	0	True				
ANR	850690	MemberAccess	ib . pvBuffer		850126	0					
ANR	850691	Identifier	ib		850126	0					
ANR	850692	Identifier	pvBuffer		850126	1					
ANR	850693	CompoundStatement		109:33:4084:4084	850126	1					
ANR	850694	ExpressionStatement	LocalFree ( ib . pvBuffer )	158:20:5659:5681	850126	0	True				
ANR	850695	CallExpression	LocalFree ( ib . pvBuffer )		850126	0					
ANR	850696	Callee	LocalFree		850126	0					
ANR	850697	Identifier	LocalFree		850126	0					
ANR	850698	ArgumentList	ib . pvBuffer		850126	1					
ANR	850699	Argument	ib . pvBuffer		850126	0					
ANR	850700	MemberAccess	ib . pvBuffer		850126	0					
ANR	850701	Identifier	ib		850126	0					
ANR	850702	Identifier	pvBuffer		850126	1					
ANR	850703	ExpressionStatement	ib . pvBuffer = NULL	159:20:5703:5721	850126	1	True				
ANR	850704	AssignmentExpression	ib . pvBuffer = NULL		850126	0		=			
ANR	850705	MemberAccess	ib . pvBuffer		850126	0					
ANR	850706	Identifier	ib		850126	0					
ANR	850707	Identifier	pvBuffer		850126	1					
ANR	850708	Identifier	NULL		850126	1					
ANR	850709	ExpressionStatement	( pf -> FreeContextBuffer ) ( secPackInfo )	161:16:5757:5795	850126	2	True				
ANR	850710	CallExpression	( pf -> FreeContextBuffer ) ( secPackInfo )		850126	0					
ANR	850711	Callee	pf -> FreeContextBuffer		850126	0					
ANR	850712	PtrMemberAccess	pf -> FreeContextBuffer		850126	0					
ANR	850713	Identifier	pf		850126	0					
ANR	850714	Identifier	FreeContextBuffer		850126	1					
ANR	850715	ArgumentList	secPackInfo		850126	1					
ANR	850716	Argument	secPackInfo		850126	0					
ANR	850717	Identifier	secPackInfo		850126	0					
ANR	850718	IfStatement	if ( myTokenSource )		850126	3					
ANR	850719	Condition	myTokenSource	162:21:5818:5830	850126	0	True				
ANR	850720	Identifier	myTokenSource		850126	0					
ANR	850721	CompoundStatement		114:37:4281:4281	850126	1					
ANR	850722	ExpressionStatement	free ( myTokenSource )	163:20:5856:5877	850126	0	True				
ANR	850723	CallExpression	free ( myTokenSource )		850126	0					
ANR	850724	Callee	free		850126	0					
ANR	850725	Identifier	free		850126	0					
ANR	850726	ArgumentList	myTokenSource		850126	1					
ANR	850727	Argument	myTokenSource		850126	0					
ANR	850728	Identifier	myTokenSource		850126	0					
ANR	850729	ReturnStatement	return 0 ;	165:16:5913:5921	850126	4	True				
ANR	850730	PrimaryExpression	0		850126	0					
ANR	850731	ExpressionStatement	haveInbuffer = true	170:8:6026:6045	850126	20	True				
ANR	850732	AssignmentExpression	haveInbuffer = true		850126	0		=			
ANR	850733	Identifier	haveInbuffer		850126	0					
ANR	850734	Identifier	true		850126	1					
ANR	850735	ExpressionStatement	haveContext = true	171:8:6055:6073	850126	21	True				
ANR	850736	AssignmentExpression	haveContext = true		850126	0		=			
ANR	850737	Identifier	haveContext		850126	0					
ANR	850738	Identifier	true		850126	1					
ANR	850739	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_client_auth() looping\\n"" )"	174:8:6131:6184	850126	22	True				
ANR	850740	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_client_auth() looping\\n"" )"		850126	0					
ANR	850741	Callee	dprintf		850126	0					
ANR	850742	Identifier	dprintf		850126	0					
ANR	850743	ArgumentList	D_FULLDEBUG		850126	1					
ANR	850744	Argument	D_FULLDEBUG		850126	0					
ANR	850745	Identifier	D_FULLDEBUG		850126	0					
ANR	850746	Argument	"""sspi_client_auth() looping\\n"""		850126	1					
ANR	850747	PrimaryExpression	"""sspi_client_auth() looping\\n"""		850126	0					
ANR	850748	IfStatement	if ( rc != SEC_E_OK )		850126	16					
ANR	850749	Condition	rc != SEC_E_OK	180:9:6313:6326	850126	0	True				
ANR	850750	EqualityExpression	rc != SEC_E_OK		850126	0		!=			
ANR	850751	Identifier	rc		850126	0					
ANR	850752	Identifier	SEC_E_OK		850126	1					
ANR	850753	CompoundStatement		132:26:4777:4777	850126	1					
ANR	850754	ExpressionStatement	"dprintf ( D_ALWAYS , ""sspi_client_auth(): Oops! ISC() returned %d!\\n"" , rc )"	181:8:6340:6429	850126	0	True				
ANR	850755	CallExpression	"dprintf ( D_ALWAYS , ""sspi_client_auth(): Oops! ISC() returned %d!\\n"" , rc )"		850126	0					
ANR	850756	Callee	dprintf		850126	0					
ANR	850757	Identifier	dprintf		850126	0					
ANR	850758	ArgumentList	D_ALWAYS		850126	1					
ANR	850759	Argument	D_ALWAYS		850126	0					
ANR	850760	Identifier	D_ALWAYS		850126	0					
ANR	850761	Argument	"""sspi_client_auth(): Oops! ISC() returned %d!\\n"""		850126	1					
ANR	850762	PrimaryExpression	"""sspi_client_auth(): Oops! ISC() returned %d!\\n"""		850126	0					
ANR	850763	Argument	rc		850126	2					
ANR	850764	Identifier	rc		850126	0					
ANR	850765	ExpressionStatement	( pf -> FreeContextBuffer ) ( secPackInfo )	185:4:6446:6484	850126	17	True				
ANR	850766	CallExpression	( pf -> FreeContextBuffer ) ( secPackInfo )		850126	0					
ANR	850767	Callee	pf -> FreeContextBuffer		850126	0					
ANR	850768	PtrMemberAccess	pf -> FreeContextBuffer		850126	0					
ANR	850769	Identifier	pf		850126	0					
ANR	850770	Identifier	FreeContextBuffer		850126	1					
ANR	850771	ArgumentList	secPackInfo		850126	1					
ANR	850772	Argument	secPackInfo		850126	0					
ANR	850773	Identifier	secPackInfo		850126	0					
ANR	850774	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_client_auth() exiting\\n"" )"	186:4:6490:6543	850126	18	True				
ANR	850775	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_client_auth() exiting\\n"" )"		850126	0					
ANR	850776	Callee	dprintf		850126	0					
ANR	850777	Identifier	dprintf		850126	0					
ANR	850778	ArgumentList	D_FULLDEBUG		850126	1					
ANR	850779	Argument	D_FULLDEBUG		850126	0					
ANR	850780	Identifier	D_FULLDEBUG		850126	0					
ANR	850781	Argument	"""sspi_client_auth() exiting\\n"""		850126	1					
ANR	850782	PrimaryExpression	"""sspi_client_auth() exiting\\n"""		850126	0					
ANR	850783	IfStatement	if ( myTokenSource )		850126	19					
ANR	850784	Condition	myTokenSource	187:9:6554:6566	850126	0	True				
ANR	850785	Identifier	myTokenSource		850126	0					
ANR	850786	CompoundStatement		139:25:5017:5017	850126	1					
ANR	850787	ExpressionStatement	free ( myTokenSource )	188:8:6580:6601	850126	0	True				
ANR	850788	CallExpression	free ( myTokenSource )		850126	0					
ANR	850789	Callee	free		850126	0					
ANR	850790	Identifier	free		850126	0					
ANR	850791	ArgumentList	myTokenSource		850126	1					
ANR	850792	Argument	myTokenSource		850126	0					
ANR	850793	Identifier	myTokenSource		850126	0					
ANR	850794	ReturnStatement	return 1 ;	192:4:6640:6648	850126	20	True				
ANR	850795	PrimaryExpression	1		850126	0					
ANR	850796	ReturnType	int		850126	1					
ANR	850797	Identifier	Condor_Auth_SSPI :: sspi_client_auth		850126	2					
ANR	850798	ParameterList	"CredHandle & cred , CtxtHandle & cliCtx , const char * tokenSource"		850126	3					
ANR	850799	Parameter	CredHandle & cred	46:38:1401:1419	850126	0	True				
ANR	850800	ParameterType	CredHandle &		850126	0					
ANR	850801	Identifier	cred		850126	1					
ANR	850802	Parameter	CtxtHandle & cliCtx	47:38:1461:1481	850126	1	True				
ANR	850803	ParameterType	CtxtHandle &		850126	0					
ANR	850804	Identifier	cliCtx		850126	1					
ANR	850805	Parameter	const char * tokenSource	48:38:1523:1548	850126	2	True				
ANR	850806	ParameterType	const char *		850126	0					
ANR	850807	Identifier	tokenSource		850126	1					
ANR	850808	CFGEntryNode	ENTRY		850126		True				
ANR	850809	CFGExitNode	EXIT		850126		True				
ANR	850810	Symbol	ob . cbBuffer		850126						
ANR	850811	Symbol	ibd . pBuffers		850126						
ANR	850812	Symbol	obd . pBuffers		850126						
ANR	850813	Symbol	haveInbuffer		850126						
ANR	850814	Symbol	pf -> CompleteAuthToken		850126						
ANR	850815	Symbol	ib . pvBuffer		850126						
ANR	850816	Symbol	obd . ulVersion		850126						
ANR	850817	Symbol	mySock_		850126						
ANR	850818	Symbol	SECBUFFER_VERSION		850126						
ANR	850819	Symbol	ISC_REQ_CONFIDENTIALITY		850126						
ANR	850820	Symbol	SECPKG_CRED_OUTBOUND		850126						
ANR	850821	Symbol	mySock_ -> code		850126						
ANR	850822	Symbol	ctxAttr		850126						
ANR	850823	Symbol	ob . pvBuffer		850126						
ANR	850824	Symbol	pf -> InitializeSecurityContext		850126						
ANR	850825	Symbol	SECURITY_NATIVE_DREP		850126						
ANR	850826	Symbol	secPackInfo -> cbMaxToken		850126						
ANR	850827	Symbol	* secPackInfo		850126						
ANR	850828	Symbol	ib . cbBuffer		850126						
ANR	850829	Symbol	ibd . ulVersion		850126						
ANR	850830	Symbol	ib		850126						
ANR	850831	Symbol	& ob		850126						
ANR	850832	Symbol	NULL		850126						
ANR	850833	Symbol	SEC_I_COMPLETE_AND_CONTINUE		850126						
ANR	850834	Symbol	mySock_ -> end_of_message		850126						
ANR	850835	Symbol	haveContext		850126						
ANR	850836	Symbol	D_FULLDEBUG		850126						
ANR	850837	Symbol	ib . BufferType		850126						
ANR	850838	Symbol	mySock_ -> get_bytes		850126						
ANR	850839	Symbol	& useBefore		850126						
ANR	850840	Symbol	rc		850126						
ANR	850841	Symbol	tokenSource		850126						
ANR	850842	Symbol	true		850126						
ANR	850843	Symbol	& secPackInfo		850126						
ANR	850844	Symbol	& ctxAttr		850126						
ANR	850845	Symbol	* pf		850126						
ANR	850846	Symbol	& cred		850126						
ANR	850847	Symbol	& ib		850126						
ANR	850848	Symbol	ISC_REQ_DELEGATE		850126						
ANR	850849	Symbol	useBefore		850126						
ANR	850850	Symbol	SECBUFFER_TOKEN		850126						
ANR	850851	Symbol	ob . BufferType		850126						
ANR	850852	Symbol	SEC_I_CONTINUE_NEEDED		850126						
ANR	850853	Symbol	& obd		850126						
ANR	850854	Symbol	ob		850126						
ANR	850855	Symbol	& ibd		850126						
ANR	850856	Symbol	SEC_E_OK		850126						
ANR	850857	Symbol	mySock_ -> put_bytes		850126						
ANR	850858	Symbol	myTokenSource		850126						
ANR	850859	Symbol	cred		850126						
ANR	850860	Symbol	obd . cBuffers		850126						
ANR	850861	Symbol	pf -> QuerySecurityPackageInfo		850126						
ANR	850862	Symbol	secPackInfo		850126						
ANR	850863	Symbol	& cliCtx		850126						
ANR	850864	Symbol	false		850126						
ANR	850865	Symbol	D_ALWAYS		850126						
ANR	850866	Symbol	ibd . cBuffers		850126						
ANR	850867	Symbol	ibd		850126						
ANR	850868	Symbol	ISC_REQ_REPLAY_DETECT		850126						
ANR	850869	Symbol	SEC_I_COMPLETE_NEEDED		850126						
ANR	850870	Symbol	obd		850126						
ANR	850871	Symbol	cliCtx		850126						
ANR	850872	Symbol	pf		850126						
ANR	850873	Symbol	LocalAlloc		850126						
ANR	850874	Symbol	pf -> AcquireCredentialsHandle		850126						
ANR	850875	Symbol	ctxReq		850126						
ANR	850876	Symbol	ISC_REQ_SEQUENCE_DETECT		850126						
ANR	850877	Symbol	* mySock_		850126						
ANR	850878	Function	Condor_Auth_SSPI :: sspi_server_auth	195:0:6653:12375							
ANR	850879	FunctionDef	"Condor_Auth_SSPI :: sspi_server_auth (CredHandle & cred , CtxtHandle & srvCtx)"		850878	0					
ANR	850880	CompoundStatement		197:0:6730:12375	850878	0					
ANR	850881	IdentifierDeclStatement	int rc ;	198:4:6736:6742	850878	0	True				
ANR	850882	IdentifierDecl	rc		850878	0					
ANR	850883	IdentifierDeclType	int		850878	0					
ANR	850884	Identifier	rc		850878	1					
ANR	850885	IdentifierDeclStatement	SecPkgInfo * secPackInfo ;	199:4:6748:6771	850878	1	True				
ANR	850886	IdentifierDecl	* secPackInfo		850878	0					
ANR	850887	IdentifierDeclType	SecPkgInfo *		850878	0					
ANR	850888	Identifier	secPackInfo		850878	1					
ANR	850889	IdentifierDeclStatement	int it_worked = FALSE ;	200:4:6777:6798	850878	2	True				
ANR	850890	IdentifierDecl	it_worked = FALSE		850878	0					
ANR	850891	IdentifierDeclType	int		850878	0					
ANR	850892	Identifier	it_worked		850878	1					
ANR	850893	AssignmentExpression	it_worked = FALSE		850878	2		=			
ANR	850894	Identifier	FALSE		850878	0					
ANR	850895	Identifier	FALSE		850878	1					
ANR	850896	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_server_auth() entered\\n"" )"	202:4:6828:6881	850878	3	True				
ANR	850897	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_server_auth() entered\\n"" )"		850878	0					
ANR	850898	Callee	dprintf		850878	0					
ANR	850899	Identifier	dprintf		850878	0					
ANR	850900	ArgumentList	D_FULLDEBUG		850878	1					
ANR	850901	Argument	D_FULLDEBUG		850878	0					
ANR	850902	Identifier	D_FULLDEBUG		850878	0					
ANR	850903	Argument	"""sspi_server_auth() entered\\n"""		850878	1					
ANR	850904	PrimaryExpression	"""sspi_server_auth() entered\\n"""		850878	0					
ANR	850905	ExpressionStatement	"rc = ( pf -> QuerySecurityPackageInfo ) ( ""NTLM"" , & secPackInfo )"	204:4:6892:6951	850878	4	True				
ANR	850906	AssignmentExpression	"rc = ( pf -> QuerySecurityPackageInfo ) ( ""NTLM"" , & secPackInfo )"		850878	0		=			
ANR	850907	Identifier	rc		850878	0					
ANR	850908	CallExpression	"( pf -> QuerySecurityPackageInfo ) ( ""NTLM"" , & secPackInfo )"		850878	1					
ANR	850909	Callee	pf -> QuerySecurityPackageInfo		850878	0					
ANR	850910	PtrMemberAccess	pf -> QuerySecurityPackageInfo		850878	0					
ANR	850911	Identifier	pf		850878	0					
ANR	850912	Identifier	QuerySecurityPackageInfo		850878	1					
ANR	850913	ArgumentList	"""NTLM"""		850878	1					
ANR	850914	Argument	"""NTLM"""		850878	0					
ANR	850915	PrimaryExpression	"""NTLM"""		850878	0					
ANR	850916	Argument	& secPackInfo		850878	1					
ANR	850917	UnaryOperationExpression	& secPackInfo		850878	0					
ANR	850918	UnaryOperator	&		850878	0					
ANR	850919	Identifier	secPackInfo		850878	1					
ANR	850920	IdentifierDeclStatement	TimeStamp useBefore ;	206:4:6962:6981	850878	5	True				
ANR	850921	IdentifierDecl	useBefore		850878	0					
ANR	850922	IdentifierDeclType	TimeStamp		850878	0					
ANR	850923	Identifier	useBefore		850878	1					
ANR	850924	ExpressionStatement	"rc = ( pf -> AcquireCredentialsHandle ) ( NULL , ""NTLM"" , SECPKG_CRED_INBOUND , NULL , NULL , NULL , NULL , & cred , & useBefore )"	208:4:6992:7148	850878	6	True				
ANR	850925	AssignmentExpression	"rc = ( pf -> AcquireCredentialsHandle ) ( NULL , ""NTLM"" , SECPKG_CRED_INBOUND , NULL , NULL , NULL , NULL , & cred , & useBefore )"		850878	0		=			
ANR	850926	Identifier	rc		850878	0					
ANR	850927	CallExpression	"( pf -> AcquireCredentialsHandle ) ( NULL , ""NTLM"" , SECPKG_CRED_INBOUND , NULL , NULL , NULL , NULL , & cred , & useBefore )"		850878	1					
ANR	850928	Callee	pf -> AcquireCredentialsHandle		850878	0					
ANR	850929	PtrMemberAccess	pf -> AcquireCredentialsHandle		850878	0					
ANR	850930	Identifier	pf		850878	0					
ANR	850931	Identifier	AcquireCredentialsHandle		850878	1					
ANR	850932	ArgumentList	NULL		850878	1					
ANR	850933	Argument	NULL		850878	0					
ANR	850934	Identifier	NULL		850878	0					
ANR	850935	Argument	"""NTLM"""		850878	1					
ANR	850936	PrimaryExpression	"""NTLM"""		850878	0					
ANR	850937	Argument	SECPKG_CRED_INBOUND		850878	2					
ANR	850938	Identifier	SECPKG_CRED_INBOUND		850878	0					
ANR	850939	Argument	NULL		850878	3					
ANR	850940	Identifier	NULL		850878	0					
ANR	850941	Argument	NULL		850878	4					
ANR	850942	Identifier	NULL		850878	0					
ANR	850943	Argument	NULL		850878	5					
ANR	850944	Identifier	NULL		850878	0					
ANR	850945	Argument	NULL		850878	6					
ANR	850946	Identifier	NULL		850878	0					
ANR	850947	Argument	& cred		850878	7					
ANR	850948	UnaryOperationExpression	& cred		850878	0					
ANR	850949	UnaryOperator	&		850878	0					
ANR	850950	Identifier	cred		850878	1					
ANR	850951	Argument	& useBefore		850878	8					
ANR	850952	UnaryOperationExpression	& useBefore		850878	0					
ANR	850953	UnaryOperator	&		850878	0					
ANR	850954	Identifier	useBefore		850878	1					
ANR	850955	IdentifierDeclStatement	"SecBufferDesc obd , ibd ;"	212:4:7191:7213	850878	7	True				
ANR	850956	IdentifierDecl	obd		850878	0					
ANR	850957	IdentifierDeclType	SecBufferDesc		850878	0					
ANR	850958	Identifier	obd		850878	1					
ANR	850959	IdentifierDecl	ibd		850878	1					
ANR	850960	IdentifierDeclType	SecBufferDesc		850878	0					
ANR	850961	Identifier	ibd		850878	1					
ANR	850962	IdentifierDeclStatement	"SecBuffer ob , ib ;"	213:4:7219:7235	850878	8	True				
ANR	850963	IdentifierDecl	ob		850878	0					
ANR	850964	IdentifierDeclType	SecBuffer		850878	0					
ANR	850965	Identifier	ob		850878	1					
ANR	850966	IdentifierDecl	ib		850878	1					
ANR	850967	IdentifierDeclType	SecBuffer		850878	0					
ANR	850968	Identifier	ib		850878	1					
ANR	850969	IdentifierDeclStatement	DWORD ctxAttr ;	215:4:7246:7259	850878	9	True				
ANR	850970	IdentifierDecl	ctxAttr		850878	0					
ANR	850971	IdentifierDeclType	DWORD		850878	0					
ANR	850972	Identifier	ctxAttr		850878	1					
ANR	850973	IdentifierDeclStatement	bool haveContext = false ;	217:4:7270:7294	850878	10	True				
ANR	850974	IdentifierDecl	haveContext = false		850878	0					
ANR	850975	IdentifierDeclType	bool		850878	0					
ANR	850976	Identifier	haveContext		850878	1					
ANR	850977	AssignmentExpression	haveContext = false		850878	2		=			
ANR	850978	Identifier	false		850878	0					
ANR	850979	Identifier	false		850878	1					
ANR	850980	WhileStatement	while ( 1 )		850878	11					
ANR	850981	Condition	1	219:12:7313:7313	850878	0	True				
ANR	850982	PrimaryExpression	1		850878	0					
ANR	850983	CompoundStatement		24:1:587:587	850878	1					
ANR	850984	ExpressionStatement	ibd . ulVersion = SECBUFFER_VERSION	222:12:7384:7417	850878	0	True				
ANR	850985	AssignmentExpression	ibd . ulVersion = SECBUFFER_VERSION		850878	0		=			
ANR	850986	MemberAccess	ibd . ulVersion		850878	0					
ANR	850987	Identifier	ibd		850878	0					
ANR	850988	Identifier	ulVersion		850878	1					
ANR	850989	Identifier	SECBUFFER_VERSION		850878	1					
ANR	850990	ExpressionStatement	ibd . cBuffers = 1	223:12:7431:7447	850878	1	True				
ANR	850991	AssignmentExpression	ibd . cBuffers = 1		850878	0		=			
ANR	850992	MemberAccess	ibd . cBuffers		850878	0					
ANR	850993	Identifier	ibd		850878	0					
ANR	850994	Identifier	cBuffers		850878	1					
ANR	850995	PrimaryExpression	1		850878	1					
ANR	850996	ExpressionStatement	ibd . pBuffers = & ib	224:12:7461:7479	850878	2	True				
ANR	850997	AssignmentExpression	ibd . pBuffers = & ib		850878	0		=			
ANR	850998	MemberAccess	ibd . pBuffers		850878	0					
ANR	850999	Identifier	ibd		850878	0					
ANR	851000	Identifier	pBuffers		850878	1					
ANR	851001	UnaryOperationExpression	& ib		850878	1					
ANR	851002	UnaryOperator	&		850878	0					
ANR	851003	Identifier	ib		850878	1					
ANR	851004	ExpressionStatement	ib . BufferType = SECBUFFER_TOKEN	225:12:7512:7543	850878	3	True				
ANR	851005	AssignmentExpression	ib . BufferType = SECBUFFER_TOKEN		850878	0		=			
ANR	851006	MemberAccess	ib . BufferType		850878	0					
ANR	851007	Identifier	ib		850878	0					
ANR	851008	Identifier	BufferType		850878	1					
ANR	851009	Identifier	SECBUFFER_TOKEN		850878	1					
ANR	851010	ExpressionStatement	ib . pvBuffer = NULL	228:12:7634:7652	850878	4	True				
ANR	851011	AssignmentExpression	ib . pvBuffer = NULL		850878	0		=			
ANR	851012	MemberAccess	ib . pvBuffer		850878	0					
ANR	851013	Identifier	ib		850878	0					
ANR	851014	Identifier	pvBuffer		850878	1					
ANR	851015	Identifier	NULL		850878	1					
ANR	851016	ExpressionStatement	mySock_ -> decode ( )	229:12:7666:7683	850878	5	True				
ANR	851017	CallExpression	mySock_ -> decode ( )		850878	0					
ANR	851018	Callee	mySock_ -> decode		850878	0					
ANR	851019	PtrMemberAccess	mySock_ -> decode		850878	0					
ANR	851020	Identifier	mySock_		850878	0					
ANR	851021	Identifier	decode		850878	1					
ANR	851022	ArgumentList			850878	1					
ANR	851023	IfStatement	"if ( ! mySock_ -> code ( ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) )"		850878	6					
ANR	851024	Condition	"! mySock_ -> code ( ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"	230:17:7702:7963	850878	0	True				
ANR	851025	OrExpression	"! mySock_ -> code ( ib . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850878	0		||			
ANR	851026	UnaryOperationExpression	! mySock_ -> code ( ib . cbBuffer )		850878	0					
ANR	851027	UnaryOperator	!		850878	0					
ANR	851028	CallExpression	mySock_ -> code ( ib . cbBuffer )		850878	1					
ANR	851029	Callee	mySock_ -> code		850878	0					
ANR	851030	PtrMemberAccess	mySock_ -> code		850878	0					
ANR	851031	Identifier	mySock_		850878	0					
ANR	851032	Identifier	code		850878	1					
ANR	851033	ArgumentList	ib . cbBuffer		850878	1					
ANR	851034	Argument	ib . cbBuffer		850878	0					
ANR	851035	MemberAccess	ib . cbBuffer		850878	0					
ANR	851036	Identifier	ib		850878	0					
ANR	851037	Identifier	cbBuffer		850878	1					
ANR	851038	OrExpression	"! mySock_ -> end_of_message ( ) || ! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850878	1		||			
ANR	851039	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850878	0					
ANR	851040	UnaryOperator	!		850878	0					
ANR	851041	CallExpression	mySock_ -> end_of_message ( )		850878	1					
ANR	851042	Callee	mySock_ -> end_of_message		850878	0					
ANR	851043	PtrMemberAccess	mySock_ -> end_of_message		850878	0					
ANR	851044	Identifier	mySock_		850878	0					
ANR	851045	Identifier	end_of_message		850878	1					
ANR	851046	ArgumentList			850878	1					
ANR	851047	OrExpression	"! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) ) || ! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850878	1		||			
ANR	851048	UnaryOperationExpression	"! ( ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer ) )"		850878	0					
ANR	851049	UnaryOperator	!		850878	0					
ANR	851050	AssignmentExpression	"ib . pvBuffer = LocalAlloc ( 0 , ib . cbBuffer )"		850878	1		=			
ANR	851051	MemberAccess	ib . pvBuffer		850878	0					
ANR	851052	Identifier	ib		850878	0					
ANR	851053	Identifier	pvBuffer		850878	1					
ANR	851054	CallExpression	"LocalAlloc ( 0 , ib . cbBuffer )"		850878	1					
ANR	851055	Callee	LocalAlloc		850878	0					
ANR	851056	Identifier	LocalAlloc		850878	0					
ANR	851057	ArgumentList	0		850878	1					
ANR	851058	Argument	0		850878	0					
ANR	851059	PrimaryExpression	0		850878	0					
ANR	851060	Argument	ib . cbBuffer		850878	1					
ANR	851061	MemberAccess	ib . cbBuffer		850878	0					
ANR	851062	Identifier	ib		850878	0					
ANR	851063	Identifier	cbBuffer		850878	1					
ANR	851064	OrExpression	"! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850878	1		||			
ANR	851065	UnaryOperationExpression	"! mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer )"		850878	0					
ANR	851066	UnaryOperator	!		850878	0					
ANR	851067	CallExpression	"mySock_ -> get_bytes ( ( char * ) ib . pvBuffer , ib . cbBuffer )"		850878	1					
ANR	851068	Callee	mySock_ -> get_bytes		850878	0					
ANR	851069	PtrMemberAccess	mySock_ -> get_bytes		850878	0					
ANR	851070	Identifier	mySock_		850878	0					
ANR	851071	Identifier	get_bytes		850878	1					
ANR	851072	ArgumentList	( char * ) ib . pvBuffer		850878	1					
ANR	851073	Argument	( char * ) ib . pvBuffer		850878	0					
ANR	851074	CastExpression	( char * ) ib . pvBuffer		850878	0					
ANR	851075	CastTarget	char *		850878	0					
ANR	851076	MemberAccess	ib . pvBuffer		850878	1					
ANR	851077	Identifier	ib		850878	0					
ANR	851078	Identifier	pvBuffer		850878	1					
ANR	851079	Argument	ib . cbBuffer		850878	1					
ANR	851080	MemberAccess	ib . cbBuffer		850878	0					
ANR	851081	Identifier	ib		850878	0					
ANR	851082	Identifier	cbBuffer		850878	1					
ANR	851083	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850878	1					
ANR	851084	UnaryOperator	!		850878	0					
ANR	851085	CallExpression	mySock_ -> end_of_message ( )		850878	1					
ANR	851086	Callee	mySock_ -> end_of_message		850878	0					
ANR	851087	PtrMemberAccess	mySock_ -> end_of_message		850878	0					
ANR	851088	Identifier	mySock_		850878	0					
ANR	851089	Identifier	end_of_message		850878	1					
ANR	851090	ArgumentList			850878	1					
ANR	851091	CompoundStatement		39:2:1238:1238	850878	1					
ANR	851092	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR sspi_server_auth() failed to received client POD\\n"" )"	236:20:7991:8096	850878	0	True				
ANR	851093	CallExpression	"dprintf ( D_ALWAYS , ""ERROR sspi_server_auth() failed to received client POD\\n"" )"		850878	0					
ANR	851094	Callee	dprintf		850878	0					
ANR	851095	Identifier	dprintf		850878	0					
ANR	851096	ArgumentList	D_ALWAYS		850878	1					
ANR	851097	Argument	D_ALWAYS		850878	0					
ANR	851098	Identifier	D_ALWAYS		850878	0					
ANR	851099	Argument	"""ERROR sspi_server_auth() failed to received client POD\\n"""		850878	1					
ANR	851100	PrimaryExpression	"""ERROR sspi_server_auth() failed to received client POD\\n"""		850878	0					
ANR	851101	IfStatement	if ( ib . pvBuffer )		850878	1					
ANR	851102	Condition	ib . pvBuffer	238:25:8123:8133	850878	0	True				
ANR	851103	MemberAccess	ib . pvBuffer		850878	0					
ANR	851104	Identifier	ib		850878	0					
ANR	851105	Identifier	pvBuffer		850878	1					
ANR	851106	CompoundStatement		42:39:1406:1406	850878	1					
ANR	851107	ExpressionStatement	LocalFree ( ib . pvBuffer )	239:24:8163:8187	850878	0	True				
ANR	851108	CallExpression	LocalFree ( ib . pvBuffer )		850878	0					
ANR	851109	Callee	LocalFree		850878	0					
ANR	851110	Identifier	LocalFree		850878	0					
ANR	851111	ArgumentList	ib . pvBuffer		850878	1					
ANR	851112	Argument	ib . pvBuffer		850878	0					
ANR	851113	MemberAccess	ib . pvBuffer		850878	0					
ANR	851114	Identifier	ib		850878	0					
ANR	851115	Identifier	pvBuffer		850878	1					
ANR	851116	ExpressionStatement	ib . pvBuffer = NULL	240:24:8213:8231	850878	1	True				
ANR	851117	AssignmentExpression	ib . pvBuffer = NULL		850878	0		=			
ANR	851118	MemberAccess	ib . pvBuffer		850878	0					
ANR	851119	Identifier	ib		850878	0					
ANR	851120	Identifier	pvBuffer		850878	1					
ANR	851121	Identifier	NULL		850878	1					
ANR	851122	ExpressionStatement	( pf -> FreeContextBuffer ) ( secPackInfo )	242:20:8275:8313	850878	2	True				
ANR	851123	CallExpression	( pf -> FreeContextBuffer ) ( secPackInfo )		850878	0					
ANR	851124	Callee	pf -> FreeContextBuffer		850878	0					
ANR	851125	PtrMemberAccess	pf -> FreeContextBuffer		850878	0					
ANR	851126	Identifier	pf		850878	0					
ANR	851127	Identifier	FreeContextBuffer		850878	1					
ANR	851128	ArgumentList	secPackInfo		850878	1					
ANR	851129	Argument	secPackInfo		850878	0					
ANR	851130	Identifier	secPackInfo		850878	0					
ANR	851131	ReturnStatement	return 0 ;	243:20:8338:8346	850878	3	True				
ANR	851132	PrimaryExpression	0		850878	0					
ANR	851133	ExpressionStatement	obd . ulVersion = SECBUFFER_VERSION	248:12:8436:8469	850878	7	True				
ANR	851134	AssignmentExpression	obd . ulVersion = SECBUFFER_VERSION		850878	0		=			
ANR	851135	MemberAccess	obd . ulVersion		850878	0					
ANR	851136	Identifier	obd		850878	0					
ANR	851137	Identifier	ulVersion		850878	1					
ANR	851138	Identifier	SECBUFFER_VERSION		850878	1					
ANR	851139	ExpressionStatement	obd . cBuffers = 1	249:12:8483:8499	850878	8	True				
ANR	851140	AssignmentExpression	obd . cBuffers = 1		850878	0		=			
ANR	851141	MemberAccess	obd . cBuffers		850878	0					
ANR	851142	Identifier	obd		850878	0					
ANR	851143	Identifier	cBuffers		850878	1					
ANR	851144	PrimaryExpression	1		850878	1					
ANR	851145	ExpressionStatement	obd . pBuffers = & ob	250:12:8513:8531	850878	9	True				
ANR	851146	AssignmentExpression	obd . pBuffers = & ob		850878	0		=			
ANR	851147	MemberAccess	obd . pBuffers		850878	0					
ANR	851148	Identifier	obd		850878	0					
ANR	851149	Identifier	pBuffers		850878	1					
ANR	851150	UnaryOperationExpression	& ob		850878	1					
ANR	851151	UnaryOperator	&		850878	0					
ANR	851152	Identifier	ob		850878	1					
ANR	851153	ExpressionStatement	ob . BufferType = SECBUFFER_TOKEN	251:12:8564:8595	850878	10	True				
ANR	851154	AssignmentExpression	ob . BufferType = SECBUFFER_TOKEN		850878	0		=			
ANR	851155	MemberAccess	ob . BufferType		850878	0					
ANR	851156	Identifier	ob		850878	0					
ANR	851157	Identifier	BufferType		850878	1					
ANR	851158	Identifier	SECBUFFER_TOKEN		850878	1					
ANR	851159	ExpressionStatement	ob . cbBuffer = secPackInfo -> cbMaxToken	252:12:8633:8670	850878	11	True				
ANR	851160	AssignmentExpression	ob . cbBuffer = secPackInfo -> cbMaxToken		850878	0		=			
ANR	851161	MemberAccess	ob . cbBuffer		850878	0					
ANR	851162	Identifier	ob		850878	0					
ANR	851163	Identifier	cbBuffer		850878	1					
ANR	851164	PtrMemberAccess	secPackInfo -> cbMaxToken		850878	1					
ANR	851165	Identifier	secPackInfo		850878	0					
ANR	851166	Identifier	cbMaxToken		850878	1					
ANR	851167	ExpressionStatement	"ob . pvBuffer = LocalAlloc ( 0 , ob . cbBuffer )"	253:12:8684:8726	850878	12	True				
ANR	851168	AssignmentExpression	"ob . pvBuffer = LocalAlloc ( 0 , ob . cbBuffer )"		850878	0		=			
ANR	851169	MemberAccess	ob . pvBuffer		850878	0					
ANR	851170	Identifier	ob		850878	0					
ANR	851171	Identifier	pvBuffer		850878	1					
ANR	851172	CallExpression	"LocalAlloc ( 0 , ob . cbBuffer )"		850878	1					
ANR	851173	Callee	LocalAlloc		850878	0					
ANR	851174	Identifier	LocalAlloc		850878	0					
ANR	851175	ArgumentList	0		850878	1					
ANR	851176	Argument	0		850878	0					
ANR	851177	PrimaryExpression	0		850878	0					
ANR	851178	Argument	ob . cbBuffer		850878	1					
ANR	851179	MemberAccess	ob . cbBuffer		850878	0					
ANR	851180	Identifier	ob		850878	0					
ANR	851181	Identifier	cbBuffer		850878	1					
ANR	851182	ExpressionStatement	"rc = ( pf -> AcceptSecurityContext ) ( & cred , haveContext ? & srvCtx : NULL , & ibd , 0 , SECURITY_NATIVE_DREP , & srvCtx , & obd , & ctxAttr , & useBefore )"	255:12:8753:9170	850878	13	True				
ANR	851183	AssignmentExpression	"rc = ( pf -> AcceptSecurityContext ) ( & cred , haveContext ? & srvCtx : NULL , & ibd , 0 , SECURITY_NATIVE_DREP , & srvCtx , & obd , & ctxAttr , & useBefore )"		850878	0		=			
ANR	851184	Identifier	rc		850878	0					
ANR	851185	CallExpression	"( pf -> AcceptSecurityContext ) ( & cred , haveContext ? & srvCtx : NULL , & ibd , 0 , SECURITY_NATIVE_DREP , & srvCtx , & obd , & ctxAttr , & useBefore )"		850878	1					
ANR	851186	Callee	pf -> AcceptSecurityContext		850878	0					
ANR	851187	PtrMemberAccess	pf -> AcceptSecurityContext		850878	0					
ANR	851188	Identifier	pf		850878	0					
ANR	851189	Identifier	AcceptSecurityContext		850878	1					
ANR	851190	ArgumentList	& cred		850878	1					
ANR	851191	Argument	& cred		850878	0					
ANR	851192	UnaryOperationExpression	& cred		850878	0					
ANR	851193	UnaryOperator	&		850878	0					
ANR	851194	Identifier	cred		850878	1					
ANR	851195	Argument	haveContext ? & srvCtx : NULL		850878	1					
ANR	851196	ConditionalExpression	haveContext ? & srvCtx : NULL		850878	0					
ANR	851197	Condition	haveContext		850878	0					
ANR	851198	Identifier	haveContext		850878	0					
ANR	851199	UnaryOperationExpression	& srvCtx		850878	1					
ANR	851200	UnaryOperator	&		850878	0					
ANR	851201	Identifier	srvCtx		850878	1					
ANR	851202	Identifier	NULL		850878	2					
ANR	851203	Argument	& ibd		850878	2					
ANR	851204	UnaryOperationExpression	& ibd		850878	0					
ANR	851205	UnaryOperator	&		850878	0					
ANR	851206	Identifier	ibd		850878	1					
ANR	851207	Argument	0		850878	3					
ANR	851208	PrimaryExpression	0		850878	0					
ANR	851209	Argument	SECURITY_NATIVE_DREP		850878	4					
ANR	851210	Identifier	SECURITY_NATIVE_DREP		850878	0					
ANR	851211	Argument	& srvCtx		850878	5					
ANR	851212	UnaryOperationExpression	& srvCtx		850878	0					
ANR	851213	UnaryOperator	&		850878	0					
ANR	851214	Identifier	srvCtx		850878	1					
ANR	851215	Argument	& obd		850878	6					
ANR	851216	UnaryOperationExpression	& obd		850878	0					
ANR	851217	UnaryOperator	&		850878	0					
ANR	851218	Identifier	obd		850878	1					
ANR	851219	Argument	& ctxAttr		850878	7					
ANR	851220	UnaryOperationExpression	& ctxAttr		850878	0					
ANR	851221	UnaryOperator	&		850878	0					
ANR	851222	Identifier	ctxAttr		850878	1					
ANR	851223	Argument	& useBefore		850878	8					
ANR	851224	UnaryOperationExpression	& useBefore		850878	0					
ANR	851225	UnaryOperator	&		850878	0					
ANR	851226	Identifier	useBefore		850878	1					
ANR	851227	IfStatement	if ( ib . pvBuffer != NULL )		850878	14					
ANR	851228	Condition	ib . pvBuffer != NULL	263:17:9202:9220	850878	0	True				
ANR	851229	EqualityExpression	ib . pvBuffer != NULL		850878	0		!=			
ANR	851230	MemberAccess	ib . pvBuffer		850878	0					
ANR	851231	Identifier	ib		850878	0					
ANR	851232	Identifier	pvBuffer		850878	1					
ANR	851233	Identifier	NULL		850878	1					
ANR	851234	CompoundStatement		68:2:2495:2495	850878	1					
ANR	851235	ExpressionStatement	LocalFree ( ib . pvBuffer )	265:20:9248:9272	850878	0	True				
ANR	851236	CallExpression	LocalFree ( ib . pvBuffer )		850878	0					
ANR	851237	Callee	LocalFree		850878	0					
ANR	851238	Identifier	LocalFree		850878	0					
ANR	851239	ArgumentList	ib . pvBuffer		850878	1					
ANR	851240	Argument	ib . pvBuffer		850878	0					
ANR	851241	MemberAccess	ib . pvBuffer		850878	0					
ANR	851242	Identifier	ib		850878	0					
ANR	851243	Identifier	pvBuffer		850878	1					
ANR	851244	ExpressionStatement	ib . pvBuffer = NULL	266:20:9294:9312	850878	1	True				
ANR	851245	AssignmentExpression	ib . pvBuffer = NULL		850878	0		=			
ANR	851246	MemberAccess	ib . pvBuffer		850878	0					
ANR	851247	Identifier	ib		850878	0					
ANR	851248	Identifier	pvBuffer		850878	1					
ANR	851249	Identifier	NULL		850878	1					
ANR	851250	IfStatement	if ( rc == SEC_I_COMPLETE_AND_CONTINUE || rc == SEC_I_COMPLETE_NEEDED )		850878	15					
ANR	851251	Condition	rc == SEC_I_COMPLETE_AND_CONTINUE || rc == SEC_I_COMPLETE_NEEDED	269:17:9348:9411	850878	0	True				
ANR	851252	OrExpression	rc == SEC_I_COMPLETE_AND_CONTINUE || rc == SEC_I_COMPLETE_NEEDED		850878	0		||			
ANR	851253	EqualityExpression	rc == SEC_I_COMPLETE_AND_CONTINUE		850878	0		==			
ANR	851254	Identifier	rc		850878	0					
ANR	851255	Identifier	SEC_I_COMPLETE_AND_CONTINUE		850878	1					
ANR	851256	EqualityExpression	rc == SEC_I_COMPLETE_NEEDED		850878	1		==			
ANR	851257	Identifier	rc		850878	0					
ANR	851258	Identifier	SEC_I_COMPLETE_NEEDED		850878	1					
ANR	851259	CompoundStatement		74:2:2686:2686	850878	1					
ANR	851260	IfStatement	if ( pf -> CompleteAuthToken != NULL )		850878	0					
ANR	851261	Condition	pf -> CompleteAuthToken != NULL	271:25:9444:9472	850878	0	True				
ANR	851262	EqualityExpression	pf -> CompleteAuthToken != NULL		850878	0		!=			
ANR	851263	PtrMemberAccess	pf -> CompleteAuthToken		850878	0					
ANR	851264	Identifier	pf		850878	0					
ANR	851265	Identifier	CompleteAuthToken		850878	1					
ANR	851266	Identifier	NULL		850878	1					
ANR	851267	ExpressionStatement	"( pf -> CompleteAuthToken ) ( & srvCtx , & obd )"	272:24:9523:9563	850878	1	True				
ANR	851268	CallExpression	"( pf -> CompleteAuthToken ) ( & srvCtx , & obd )"		850878	0					
ANR	851269	Callee	pf -> CompleteAuthToken		850878	0					
ANR	851270	PtrMemberAccess	pf -> CompleteAuthToken		850878	0					
ANR	851271	Identifier	pf		850878	0					
ANR	851272	Identifier	CompleteAuthToken		850878	1					
ANR	851273	ArgumentList	& srvCtx		850878	1					
ANR	851274	Argument	& srvCtx		850878	0					
ANR	851275	UnaryOperationExpression	& srvCtx		850878	0					
ANR	851276	UnaryOperator	&		850878	0					
ANR	851277	Identifier	srvCtx		850878	1					
ANR	851278	Argument	& obd		850878	1					
ANR	851279	UnaryOperationExpression	& obd		850878	0					
ANR	851280	UnaryOperator	&		850878	0					
ANR	851281	Identifier	obd		850878	1					
ANR	851282	IfStatement	if ( rc == SEC_I_COMPLETE_NEEDED )		850878	1					
ANR	851283	Condition	rc == SEC_I_COMPLETE_NEEDED	273:25:9590:9616	850878	0	True				
ANR	851284	EqualityExpression	rc == SEC_I_COMPLETE_NEEDED		850878	0		==			
ANR	851285	Identifier	rc		850878	0					
ANR	851286	Identifier	SEC_I_COMPLETE_NEEDED		850878	1					
ANR	851287	ExpressionStatement	rc = SEC_E_OK	274:24:9644:9657	850878	1	True				
ANR	851288	AssignmentExpression	rc = SEC_E_OK		850878	0		=			
ANR	851289	Identifier	rc		850878	0					
ANR	851290	Identifier	SEC_E_OK		850878	1					
ANR	851291	ElseStatement	else		850878	0					
ANR	851292	IfStatement	if ( rc == SEC_I_COMPLETE_AND_CONTINUE )		850878	0					
ANR	851293	Condition	rc == SEC_I_COMPLETE_AND_CONTINUE	275:30:9689:9721	850878	0	True				
ANR	851294	EqualityExpression	rc == SEC_I_COMPLETE_AND_CONTINUE		850878	0		==			
ANR	851295	Identifier	rc		850878	0					
ANR	851296	Identifier	SEC_I_COMPLETE_AND_CONTINUE		850878	1					
ANR	851297	ExpressionStatement	rc = SEC_I_CONTINUE_NEEDED	276:24:9749:9775	850878	1	True				
ANR	851298	AssignmentExpression	rc = SEC_I_CONTINUE_NEEDED		850878	0		=			
ANR	851299	Identifier	rc		850878	0					
ANR	851300	Identifier	SEC_I_CONTINUE_NEEDED		850878	1					
ANR	851301	IfStatement	if ( ob . cbBuffer != 0 )		850878	16					
ANR	851302	Condition	ob . cbBuffer != 0	280:17:9867:9882	850878	0	True				
ANR	851303	EqualityExpression	ob . cbBuffer != 0		850878	0		!=			
ANR	851304	MemberAccess	ob . cbBuffer		850878	0					
ANR	851305	Identifier	ob		850878	0					
ANR	851306	Identifier	cbBuffer		850878	1					
ANR	851307	PrimaryExpression	0		850878	1					
ANR	851308	CompoundStatement		85:2:3157:3157	850878	1					
ANR	851309	ExpressionStatement	mySock_ -> encode ( )	282:20:9910:9927	850878	0	True				
ANR	851310	CallExpression	mySock_ -> encode ( )		850878	0					
ANR	851311	Callee	mySock_ -> encode		850878	0					
ANR	851312	PtrMemberAccess	mySock_ -> encode		850878	0					
ANR	851313	Identifier	mySock_		850878	0					
ANR	851314	Identifier	encode		850878	1					
ANR	851315	ArgumentList			850878	1					
ANR	851316	IfStatement	"if ( ! mySock_ -> code ( ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) )"		850878	1					
ANR	851317	Condition	"! mySock_ -> code ( ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"	283:25:9954:10181	850878	0	True				
ANR	851318	OrExpression	"! mySock_ -> code ( ob . cbBuffer ) || ! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850878	0		||			
ANR	851319	UnaryOperationExpression	! mySock_ -> code ( ob . cbBuffer )		850878	0					
ANR	851320	UnaryOperator	!		850878	0					
ANR	851321	CallExpression	mySock_ -> code ( ob . cbBuffer )		850878	1					
ANR	851322	Callee	mySock_ -> code		850878	0					
ANR	851323	PtrMemberAccess	mySock_ -> code		850878	0					
ANR	851324	Identifier	mySock_		850878	0					
ANR	851325	Identifier	code		850878	1					
ANR	851326	ArgumentList	ob . cbBuffer		850878	1					
ANR	851327	Argument	ob . cbBuffer		850878	0					
ANR	851328	MemberAccess	ob . cbBuffer		850878	0					
ANR	851329	Identifier	ob		850878	0					
ANR	851330	Identifier	cbBuffer		850878	1					
ANR	851331	OrExpression	"! mySock_ -> end_of_message ( ) || ! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850878	1		||			
ANR	851332	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850878	0					
ANR	851333	UnaryOperator	!		850878	0					
ANR	851334	CallExpression	mySock_ -> end_of_message ( )		850878	1					
ANR	851335	Callee	mySock_ -> end_of_message		850878	0					
ANR	851336	PtrMemberAccess	mySock_ -> end_of_message		850878	0					
ANR	851337	Identifier	mySock_		850878	0					
ANR	851338	Identifier	end_of_message		850878	1					
ANR	851339	ArgumentList			850878	1					
ANR	851340	OrExpression	"! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer ) || ! mySock_ -> end_of_message ( )"		850878	1		||			
ANR	851341	UnaryOperationExpression	"! mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer )"		850878	0					
ANR	851342	UnaryOperator	!		850878	0					
ANR	851343	CallExpression	"mySock_ -> put_bytes ( ( const char * ) ob . pvBuffer , ob . cbBuffer )"		850878	1					
ANR	851344	Callee	mySock_ -> put_bytes		850878	0					
ANR	851345	PtrMemberAccess	mySock_ -> put_bytes		850878	0					
ANR	851346	Identifier	mySock_		850878	0					
ANR	851347	Identifier	put_bytes		850878	1					
ANR	851348	ArgumentList	( const char * ) ob . pvBuffer		850878	1					
ANR	851349	Argument	( const char * ) ob . pvBuffer		850878	0					
ANR	851350	CastExpression	( const char * ) ob . pvBuffer		850878	0					
ANR	851351	CastTarget	const char *		850878	0					
ANR	851352	MemberAccess	ob . pvBuffer		850878	1					
ANR	851353	Identifier	ob		850878	0					
ANR	851354	Identifier	pvBuffer		850878	1					
ANR	851355	Argument	ob . cbBuffer		850878	1					
ANR	851356	MemberAccess	ob . cbBuffer		850878	0					
ANR	851357	Identifier	ob		850878	0					
ANR	851358	Identifier	cbBuffer		850878	1					
ANR	851359	UnaryOperationExpression	! mySock_ -> end_of_message ( )		850878	1					
ANR	851360	UnaryOperator	!		850878	0					
ANR	851361	CallExpression	mySock_ -> end_of_message ( )		850878	1					
ANR	851362	Callee	mySock_ -> end_of_message		850878	0					
ANR	851363	PtrMemberAccess	mySock_ -> end_of_message		850878	0					
ANR	851364	Identifier	mySock_		850878	0					
ANR	851365	Identifier	end_of_message		850878	1					
ANR	851366	ArgumentList			850878	1					
ANR	851367	CompoundStatement		91:3:3458:3458	850878	1					
ANR	851368	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR sspi_server_auth() failed to send output blob\\n"" )"	288:28:10219:10329	850878	0	True				
ANR	851369	CallExpression	"dprintf ( D_ALWAYS , ""ERROR sspi_server_auth() failed to send output blob\\n"" )"		850878	0					
ANR	851370	Callee	dprintf		850878	0					
ANR	851371	Identifier	dprintf		850878	0					
ANR	851372	ArgumentList	D_ALWAYS		850878	1					
ANR	851373	Argument	D_ALWAYS		850878	0					
ANR	851374	Identifier	D_ALWAYS		850878	0					
ANR	851375	Argument	"""ERROR sspi_server_auth() failed to send output blob\\n"""		850878	1					
ANR	851376	PrimaryExpression	"""ERROR sspi_server_auth() failed to send output blob\\n"""		850878	0					
ANR	851377	ExpressionStatement	LocalFree ( ob . pvBuffer )	290:28:10359:10383	850878	1	True				
ANR	851378	CallExpression	LocalFree ( ob . pvBuffer )		850878	0					
ANR	851379	Callee	LocalFree		850878	0					
ANR	851380	Identifier	LocalFree		850878	0					
ANR	851381	ArgumentList	ob . pvBuffer		850878	1					
ANR	851382	Argument	ob . pvBuffer		850878	0					
ANR	851383	MemberAccess	ob . pvBuffer		850878	0					
ANR	851384	Identifier	ob		850878	0					
ANR	851385	Identifier	pvBuffer		850878	1					
ANR	851386	ExpressionStatement	ob . pvBuffer = NULL	291:28:10413:10431	850878	2	True				
ANR	851387	AssignmentExpression	ob . pvBuffer = NULL		850878	0		=			
ANR	851388	MemberAccess	ob . pvBuffer		850878	0					
ANR	851389	Identifier	ob		850878	0					
ANR	851390	Identifier	pvBuffer		850878	1					
ANR	851391	Identifier	NULL		850878	1					
ANR	851392	ExpressionStatement	( pf -> FreeContextBuffer ) ( secPackInfo )	292:28:10461:10499	850878	3	True				
ANR	851393	CallExpression	( pf -> FreeContextBuffer ) ( secPackInfo )		850878	0					
ANR	851394	Callee	pf -> FreeContextBuffer		850878	0					
ANR	851395	PtrMemberAccess	pf -> FreeContextBuffer		850878	0					
ANR	851396	Identifier	pf		850878	0					
ANR	851397	Identifier	FreeContextBuffer		850878	1					
ANR	851398	ArgumentList	secPackInfo		850878	1					
ANR	851399	Argument	secPackInfo		850878	0					
ANR	851400	Identifier	secPackInfo		850878	0					
ANR	851401	ReturnStatement	return 0 ;	293:28:10532:10540	850878	4	True				
ANR	851402	PrimaryExpression	0		850878	0					
ANR	851403	ExpressionStatement	LocalFree ( ob . pvBuffer )	296:12:10563:10587	850878	17	True				
ANR	851404	CallExpression	LocalFree ( ob . pvBuffer )		850878	0					
ANR	851405	Callee	LocalFree		850878	0					
ANR	851406	Identifier	LocalFree		850878	0					
ANR	851407	ArgumentList	ob . pvBuffer		850878	1					
ANR	851408	Argument	ob . pvBuffer		850878	0					
ANR	851409	MemberAccess	ob . pvBuffer		850878	0					
ANR	851410	Identifier	ob		850878	0					
ANR	851411	Identifier	pvBuffer		850878	1					
ANR	851412	ExpressionStatement	ob . pvBuffer = NULL	297:12:10601:10619	850878	18	True				
ANR	851413	AssignmentExpression	ob . pvBuffer = NULL		850878	0		=			
ANR	851414	MemberAccess	ob . pvBuffer		850878	0					
ANR	851415	Identifier	ob		850878	0					
ANR	851416	Identifier	pvBuffer		850878	1					
ANR	851417	Identifier	NULL		850878	1					
ANR	851418	IfStatement	if ( rc != SEC_I_CONTINUE_NEEDED )		850878	19					
ANR	851419	Condition	rc != SEC_I_CONTINUE_NEEDED	299:17:10651:10677	850878	0	True				
ANR	851420	EqualityExpression	rc != SEC_I_CONTINUE_NEEDED		850878	0		!=			
ANR	851421	Identifier	rc		850878	0					
ANR	851422	Identifier	SEC_I_CONTINUE_NEEDED		850878	1					
ANR	851423	BreakStatement	break ;	300:16:10697:10702	850878	1	True				
ANR	851424	ExpressionStatement	haveContext = true	302:12:10729:10747	850878	20	True				
ANR	851425	AssignmentExpression	haveContext = true		850878	0		=			
ANR	851426	Identifier	haveContext		850878	0					
ANR	851427	Identifier	true		850878	1					
ANR	851428	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_server_auth() looping\\n"" )"	305:12:10817:10868	850878	21	True				
ANR	851429	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_server_auth() looping\\n"" )"		850878	0					
ANR	851430	Callee	dprintf		850878	0					
ANR	851431	Identifier	dprintf		850878	0					
ANR	851432	ArgumentList	D_FULLDEBUG		850878	1					
ANR	851433	Argument	D_FULLDEBUG		850878	0					
ANR	851434	Identifier	D_FULLDEBUG		850878	0					
ANR	851435	Argument	"""sspi_server_auth() looping\\n"""		850878	1					
ANR	851436	PrimaryExpression	"""sspi_server_auth() looping\\n"""		850878	0					
ANR	851437	IfStatement	if ( rc != SEC_E_OK )		850878	12					
ANR	851438	Condition	rc != SEC_E_OK	311:9:10994:11007	850878	0	True				
ANR	851439	EqualityExpression	rc != SEC_E_OK		850878	0		!=			
ANR	851440	Identifier	rc		850878	0					
ANR	851441	Identifier	SEC_E_OK		850878	1					
ANR	851442	CompoundStatement		115:26:4280:4280	850878	1					
ANR	851443	ExpressionStatement	"dprintf ( D_ALWAYS , ""sspi_server_auth(): Oops! ASC() returned %d!\\n"" , rc )"	312:8:11021:11111	850878	0	True				
ANR	851444	CallExpression	"dprintf ( D_ALWAYS , ""sspi_server_auth(): Oops! ASC() returned %d!\\n"" , rc )"		850878	0					
ANR	851445	Callee	dprintf		850878	0					
ANR	851446	Identifier	dprintf		850878	0					
ANR	851447	ArgumentList	D_ALWAYS		850878	1					
ANR	851448	Argument	D_ALWAYS		850878	0					
ANR	851449	Identifier	D_ALWAYS		850878	0					
ANR	851450	Argument	"""sspi_server_auth(): Oops! ASC() returned %d!\\n"""		850878	1					
ANR	851451	PrimaryExpression	"""sspi_server_auth(): Oops! ASC() returned %d!\\n"""		850878	0					
ANR	851452	Argument	rc		850878	2					
ANR	851453	Identifier	rc		850878	0					
ANR	851454	ExpressionStatement	rc = ( pf -> ImpersonateSecurityContext ) ( & srvCtx )	317:4:11206:11254	850878	13	True				
ANR	851455	AssignmentExpression	rc = ( pf -> ImpersonateSecurityContext ) ( & srvCtx )		850878	0		=			
ANR	851456	Identifier	rc		850878	0					
ANR	851457	CallExpression	( pf -> ImpersonateSecurityContext ) ( & srvCtx )		850878	1					
ANR	851458	Callee	pf -> ImpersonateSecurityContext		850878	0					
ANR	851459	PtrMemberAccess	pf -> ImpersonateSecurityContext		850878	0					
ANR	851460	Identifier	pf		850878	0					
ANR	851461	Identifier	ImpersonateSecurityContext		850878	1					
ANR	851462	ArgumentList	& srvCtx		850878	1					
ANR	851463	Argument	& srvCtx		850878	0					
ANR	851464	UnaryOperationExpression	& srvCtx		850878	0					
ANR	851465	UnaryOperator	&		850878	0					
ANR	851466	Identifier	srvCtx		850878	1					
ANR	851467	IdentifierDeclStatement	char buf [ 256 ] ;	319:1:11258:11271	850878	14	True				
ANR	851468	IdentifierDecl	buf [ 256 ]		850878	0					
ANR	851469	IdentifierDeclType	char [ 256 ]		850878	0					
ANR	851470	Identifier	buf		850878	1					
ANR	851471	PrimaryExpression	256		850878	2					
ANR	851472	IdentifierDeclStatement	char * dom = NULL ;	320:1:11274:11290	850878	15	True				
ANR	851473	IdentifierDecl	* dom = NULL		850878	0					
ANR	851474	IdentifierDeclType	char *		850878	0					
ANR	851475	Identifier	dom		850878	1					
ANR	851476	AssignmentExpression	* dom = NULL		850878	2		=			
ANR	851477	Identifier	NULL		850878	0					
ANR	851478	Identifier	NULL		850878	1					
ANR	851479	IdentifierDeclStatement	DWORD bufsiz = sizeof buf ;	321:1:11293:11318	850878	16	True				
ANR	851480	IdentifierDecl	bufsiz = sizeof buf		850878	0					
ANR	851481	IdentifierDeclType	DWORD		850878	0					
ANR	851482	Identifier	bufsiz		850878	1					
ANR	851483	AssignmentExpression	bufsiz = sizeof buf		850878	2		=			
ANR	851484	Identifier	bufsiz		850878	0					
ANR	851485	SizeofExpression	sizeof buf		850878	1					
ANR	851486	Sizeof	sizeof		850878	0					
ANR	851487	Identifier	buf		850878	1					
ANR	851488	IfStatement	if ( rc != SEC_E_OK )		850878	17					
ANR	851489	Condition	rc != SEC_E_OK	323:9:11330:11343	850878	0	True				
ANR	851490	EqualityExpression	rc != SEC_E_OK		850878	0		!=			
ANR	851491	Identifier	rc		850878	0					
ANR	851492	Identifier	SEC_E_OK		850878	1					
ANR	851493	CompoundStatement		127:26:4616:4616	850878	1					
ANR	851494	ExpressionStatement	"dprintf ( D_ALWAYS , ""sspi_server_auth(): Failed to impersonate (returns %d)!\\n"" , rc )"	324:8:11357:11464	850878	0	True				
ANR	851495	CallExpression	"dprintf ( D_ALWAYS , ""sspi_server_auth(): Failed to impersonate (returns %d)!\\n"" , rc )"		850878	0					
ANR	851496	Callee	dprintf		850878	0					
ANR	851497	Identifier	dprintf		850878	0					
ANR	851498	ArgumentList	D_ALWAYS		850878	1					
ANR	851499	Argument	D_ALWAYS		850878	0					
ANR	851500	Identifier	D_ALWAYS		850878	0					
ANR	851501	Argument	"""sspi_server_auth(): Failed to impersonate (returns %d)!\\n"""		850878	1					
ANR	851502	PrimaryExpression	"""sspi_server_auth(): Failed to impersonate (returns %d)!\\n"""		850878	0					
ANR	851503	Argument	rc		850878	2					
ANR	851504	Identifier	rc		850878	0					
ANR	851505	ElseStatement	else		850878	0					
ANR	851506	CompoundStatement		131:11:4746:4746	850878	0					
ANR	851507	ExpressionStatement	"GetUserName ( buf , & bufsiz )"	335:8:11778:11805	850878	0	True				
ANR	851508	CallExpression	"GetUserName ( buf , & bufsiz )"		850878	0					
ANR	851509	Callee	GetUserName		850878	0					
ANR	851510	Identifier	GetUserName		850878	0					
ANR	851511	ArgumentList	buf		850878	1					
ANR	851512	Argument	buf		850878	0					
ANR	851513	Identifier	buf		850878	0					
ANR	851514	Argument	& bufsiz		850878	1					
ANR	851515	UnaryOperationExpression	& bufsiz		850878	0					
ANR	851516	UnaryOperator	&		850878	0					
ANR	851517	Identifier	bufsiz		850878	1					
ANR	851518	ExpressionStatement	dom = my_domainname ( )	336:2:11809:11830	850878	1	True				
ANR	851519	AssignmentExpression	dom = my_domainname ( )		850878	0		=			
ANR	851520	Identifier	dom		850878	0					
ANR	851521	CallExpression	my_domainname ( )		850878	1					
ANR	851522	Callee	my_domainname		850878	0					
ANR	851523	Identifier	my_domainname		850878	0					
ANR	851524	ArgumentList			850878	1					
ANR	851525	ExpressionStatement	( pf -> RevertSecurityContext ) ( & srvCtx )	339:5:11871:11909	850878	2	True				
ANR	851526	CallExpression	( pf -> RevertSecurityContext ) ( & srvCtx )		850878	0					
ANR	851527	Callee	pf -> RevertSecurityContext		850878	0					
ANR	851528	PtrMemberAccess	pf -> RevertSecurityContext		850878	0					
ANR	851529	Identifier	pf		850878	0					
ANR	851530	Identifier	RevertSecurityContext		850878	1					
ANR	851531	ArgumentList	& srvCtx		850878	1					
ANR	851532	Argument	& srvCtx		850878	0					
ANR	851533	UnaryOperationExpression	& srvCtx		850878	0					
ANR	851534	UnaryOperator	&		850878	0					
ANR	851535	Identifier	srvCtx		850878	1					
ANR	851536	ExpressionStatement	it_worked = TRUE	343:2:11949:11965	850878	3	True				
ANR	851537	AssignmentExpression	it_worked = TRUE		850878	0		=			
ANR	851538	Identifier	it_worked		850878	0					
ANR	851539	Identifier	TRUE		850878	1					
ANR	851540	ExpressionStatement	setRemoteUser ( buf )	345:2:11970:11988	850878	4	True				
ANR	851541	CallExpression	setRemoteUser ( buf )		850878	0					
ANR	851542	Callee	setRemoteUser		850878	0					
ANR	851543	Identifier	setRemoteUser		850878	0					
ANR	851544	ArgumentList	buf		850878	1					
ANR	851545	Argument	buf		850878	0					
ANR	851546	Identifier	buf		850878	0					
ANR	851547	ExpressionStatement	setRemoteDomain ( dom )	346:2:11992:12012	850878	5	True				
ANR	851548	CallExpression	setRemoteDomain ( dom )		850878	0					
ANR	851549	Callee	setRemoteDomain		850878	0					
ANR	851550	Identifier	setRemoteDomain		850878	0					
ANR	851551	ArgumentList	dom		850878	1					
ANR	851552	Argument	dom		850878	0					
ANR	851553	Identifier	dom		850878	0					
ANR	851554	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_server_auth(): user name is: \\""%s\\""\\n"" , buf )"	348:2:12017:12090	850878	6	True				
ANR	851555	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_server_auth(): user name is: \\""%s\\""\\n"" , buf )"		850878	0					
ANR	851556	Callee	dprintf		850878	0					
ANR	851557	Identifier	dprintf		850878	0					
ANR	851558	ArgumentList	D_FULLDEBUG		850878	1					
ANR	851559	Argument	D_FULLDEBUG		850878	0					
ANR	851560	Identifier	D_FULLDEBUG		850878	0					
ANR	851561	Argument	"""sspi_server_auth(): user name is: \\""%s\\""\\n"""		850878	1					
ANR	851562	PrimaryExpression	"""sspi_server_auth(): user name is: \\""%s\\""\\n"""		850878	0					
ANR	851563	Argument	buf		850878	2					
ANR	851564	Identifier	buf		850878	0					
ANR	851565	IfStatement	if ( dom )		850878	7					
ANR	851566	Condition	dom	349:6:12098:12100	850878	0	True				
ANR	851567	Identifier	dom		850878	0					
ANR	851568	CompoundStatement		153:11:5372:5372	850878	1					
ANR	851569	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_server_auth(): domain name is: \\""%s\\""\\n"" , dom )"	350:3:12108:12182	850878	0	True				
ANR	851570	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_server_auth(): domain name is: \\""%s\\""\\n"" , dom )"		850878	0					
ANR	851571	Callee	dprintf		850878	0					
ANR	851572	Identifier	dprintf		850878	0					
ANR	851573	ArgumentList	D_FULLDEBUG		850878	1					
ANR	851574	Argument	D_FULLDEBUG		850878	0					
ANR	851575	Identifier	D_FULLDEBUG		850878	0					
ANR	851576	Argument	"""sspi_server_auth(): domain name is: \\""%s\\""\\n"""		850878	1					
ANR	851577	PrimaryExpression	"""sspi_server_auth(): domain name is: \\""%s\\""\\n"""		850878	0					
ANR	851578	Argument	dom		850878	2					
ANR	851579	Identifier	dom		850878	0					
ANR	851580	ExpressionStatement	free ( dom )	351:3:12187:12196	850878	1	True				
ANR	851581	CallExpression	free ( dom )		850878	0					
ANR	851582	Callee	free		850878	0					
ANR	851583	Identifier	free		850878	0					
ANR	851584	ArgumentList	dom		850878	1					
ANR	851585	Argument	dom		850878	0					
ANR	851586	Identifier	dom		850878	0					
ANR	851587	ExpressionStatement	( pf -> FreeContextBuffer ) ( secPackInfo )	355:4:12213:12251	850878	18	True				
ANR	851588	CallExpression	( pf -> FreeContextBuffer ) ( secPackInfo )		850878	0					
ANR	851589	Callee	pf -> FreeContextBuffer		850878	0					
ANR	851590	PtrMemberAccess	pf -> FreeContextBuffer		850878	0					
ANR	851591	Identifier	pf		850878	0					
ANR	851592	Identifier	FreeContextBuffer		850878	1					
ANR	851593	ArgumentList	secPackInfo		850878	1					
ANR	851594	Argument	secPackInfo		850878	0					
ANR	851595	Identifier	secPackInfo		850878	0					
ANR	851596	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sspi_server_auth() exiting\\n"" )"	357:4:12258:12311	850878	19	True				
ANR	851597	CallExpression	"dprintf ( D_FULLDEBUG , ""sspi_server_auth() exiting\\n"" )"		850878	0					
ANR	851598	Callee	dprintf		850878	0					
ANR	851599	Identifier	dprintf		850878	0					
ANR	851600	ArgumentList	D_FULLDEBUG		850878	1					
ANR	851601	Argument	D_FULLDEBUG		850878	0					
ANR	851602	Identifier	D_FULLDEBUG		850878	0					
ANR	851603	Argument	"""sspi_server_auth() exiting\\n"""		850878	1					
ANR	851604	PrimaryExpression	"""sspi_server_auth() exiting\\n"""		850878	0					
ANR	851605	ReturnStatement	return it_worked ;	360:1:12357:12373	850878	20	True				
ANR	851606	Identifier	it_worked		850878	0					
ANR	851607	ReturnType	int		850878	1					
ANR	851608	Identifier	Condor_Auth_SSPI :: sspi_server_auth		850878	2					
ANR	851609	ParameterList	"CredHandle & cred , CtxtHandle & srvCtx"		850878	3					
ANR	851610	Parameter	CredHandle & cred	196:35:6693:6708	850878	0	True				
ANR	851611	ParameterType	CredHandle &		850878	0					
ANR	851612	Identifier	cred		850878	1					
ANR	851613	Parameter	CtxtHandle & srvCtx	196:52:6710:6727	850878	1	True				
ANR	851614	ParameterType	CtxtHandle &		850878	0					
ANR	851615	Identifier	srvCtx		850878	1					
ANR	851616	CFGEntryNode	ENTRY		850878		True				
ANR	851617	CFGExitNode	EXIT		850878		True				
ANR	851618	Symbol	ob . cbBuffer		850878						
ANR	851619	Symbol	ibd . pBuffers		850878						
ANR	851620	Symbol	& srvCtx		850878						
ANR	851621	Symbol	obd . pBuffers		850878						
ANR	851622	Symbol	pf -> CompleteAuthToken		850878						
ANR	851623	Symbol	ib . pvBuffer		850878						
ANR	851624	Symbol	obd . ulVersion		850878						
ANR	851625	Symbol	mySock_		850878						
ANR	851626	Symbol	SECBUFFER_VERSION		850878						
ANR	851627	Symbol	srvCtx		850878						
ANR	851628	Symbol	pf -> ImpersonateSecurityContext		850878						
ANR	851629	Symbol	mySock_ -> code		850878						
ANR	851630	Symbol	ctxAttr		850878						
ANR	851631	Symbol	ob . pvBuffer		850878						
ANR	851632	Symbol	SECURITY_NATIVE_DREP		850878						
ANR	851633	Symbol	secPackInfo -> cbMaxToken		850878						
ANR	851634	Symbol	* secPackInfo		850878						
ANR	851635	Symbol	ib . cbBuffer		850878						
ANR	851636	Symbol	SECPKG_CRED_INBOUND		850878						
ANR	851637	Symbol	ibd . ulVersion		850878						
ANR	851638	Symbol	ib		850878						
ANR	851639	Symbol	& ob		850878						
ANR	851640	Symbol	NULL		850878						
ANR	851641	Symbol	mySock_ -> end_of_message		850878						
ANR	851642	Symbol	SEC_I_COMPLETE_AND_CONTINUE		850878						
ANR	851643	Symbol	haveContext		850878						
ANR	851644	Symbol	TRUE		850878						
ANR	851645	Symbol	D_FULLDEBUG		850878						
ANR	851646	Symbol	ib . BufferType		850878						
ANR	851647	Symbol	mySock_ -> get_bytes		850878						
ANR	851648	Symbol	& useBefore		850878						
ANR	851649	Symbol	rc		850878						
ANR	851650	Symbol	true		850878						
ANR	851651	Symbol	& secPackInfo		850878						
ANR	851652	Symbol	& ctxAttr		850878						
ANR	851653	Symbol	* pf		850878						
ANR	851654	Symbol	& cred		850878						
ANR	851655	Symbol	& ib		850878						
ANR	851656	Symbol	dom		850878						
ANR	851657	Symbol	useBefore		850878						
ANR	851658	Symbol	& bufsiz		850878						
ANR	851659	Symbol	my_domainname		850878						
ANR	851660	Symbol	SECBUFFER_TOKEN		850878						
ANR	851661	Symbol	ob . BufferType		850878						
ANR	851662	Symbol	SEC_I_CONTINUE_NEEDED		850878						
ANR	851663	Symbol	bufsiz		850878						
ANR	851664	Symbol	& obd		850878						
ANR	851665	Symbol	ob		850878						
ANR	851666	Symbol	& ibd		850878						
ANR	851667	Symbol	SEC_E_OK		850878						
ANR	851668	Symbol	mySock_ -> put_bytes		850878						
ANR	851669	Symbol	cred		850878						
ANR	851670	Symbol	obd . cBuffers		850878						
ANR	851671	Symbol	pf -> QuerySecurityPackageInfo		850878						
ANR	851672	Symbol	secPackInfo		850878						
ANR	851673	Symbol	it_worked		850878						
ANR	851674	Symbol	false		850878						
ANR	851675	Symbol	ibd . cBuffers		850878						
ANR	851676	Symbol	D_ALWAYS		850878						
ANR	851677	Symbol	ibd		850878						
ANR	851678	Symbol	SEC_I_COMPLETE_NEEDED		850878						
ANR	851679	Symbol	obd		850878						
ANR	851680	Symbol	buf		850878						
ANR	851681	Symbol	pf -> AcceptSecurityContext		850878						
ANR	851682	Symbol	pf		850878						
ANR	851683	Symbol	LocalAlloc		850878						
ANR	851684	Symbol	pf -> AcquireCredentialsHandle		850878						
ANR	851685	Symbol	FALSE		850878						
ANR	851686	Symbol	* mySock_		850878						
ANR	851687	Function	Condor_Auth_SSPI :: wrap	363:0:12378:14029							
ANR	851688	FunctionDef	"Condor_Auth_SSPI :: wrap (char * input , int input_len , char * & output , int & output_len)"		851687	0					
ANR	851689	CompoundStatement		368:0:12570:14029	851687	0					
ANR	851690	IfStatement	if ( ! input || ! input_len )		851687	0					
ANR	851691	Condition	! input || ! input_len	369:6:12578:12597	851687	0	True				
ANR	851692	OrExpression	! input || ! input_len		851687	0		||			
ANR	851693	UnaryOperationExpression	! input		851687	0					
ANR	851694	UnaryOperator	!		851687	0					
ANR	851695	Identifier	input		851687	1					
ANR	851696	UnaryOperationExpression	! input_len		851687	1					
ANR	851697	UnaryOperator	!		851687	0					
ANR	851698	Identifier	input_len		851687	1					
ANR	851699	CompoundStatement		2:29:30:30	851687	1					
ANR	851700	ReturnStatement	return FALSE ;	370:2:12605:12617	851687	0	True				
ANR	851701	Identifier	FALSE		851687	0					
ANR	851702	IfStatement	if ( ! isValid ( ) )		851687	1					
ANR	851703	Condition	! isValid ( )	373:6:12629:12638	851687	0	True				
ANR	851704	UnaryOperationExpression	! isValid ( )		851687	0					
ANR	851705	UnaryOperator	!		851687	0					
ANR	851706	CallExpression	isValid ( )		851687	1					
ANR	851707	Callee	isValid		851687	0					
ANR	851708	Identifier	isValid		851687	0					
ANR	851709	ArgumentList			851687	1					
ANR	851710	CompoundStatement		6:19:71:71	851687	1					
ANR	851711	ReturnStatement	return FALSE ;	374:2:12646:12658	851687	0	True				
ANR	851712	Identifier	FALSE		851687	0					
ANR	851713	IdentifierDeclStatement	const void * pvMessage = input ;	377:1:12665:12694	851687	2	True				
ANR	851714	IdentifierDecl	* pvMessage = input		851687	0					
ANR	851715	IdentifierDeclType	const void *		851687	0					
ANR	851716	Identifier	pvMessage		851687	1					
ANR	851717	AssignmentExpression	* pvMessage = input		851687	2		=			
ANR	851718	Identifier	input		851687	0					
ANR	851719	Identifier	input		851687	1					
ANR	851720	IdentifierDeclStatement	DWORD cbMessage = input_len ;	378:1:12697:12724	851687	3	True				
ANR	851721	IdentifierDecl	cbMessage = input_len		851687	0					
ANR	851722	IdentifierDeclType	DWORD		851687	0					
ANR	851723	Identifier	cbMessage		851687	1					
ANR	851724	AssignmentExpression	cbMessage = input_len		851687	2		=			
ANR	851725	Identifier	input_len		851687	0					
ANR	851726	Identifier	input_len		851687	1					
ANR	851727	IdentifierDeclStatement	void * * ppvSealedMessage = ( void * * ) & output ;	379:1:12727:12768	851687	4	True				
ANR	851728	IdentifierDecl	* * ppvSealedMessage = ( void * * ) & output		851687	0					
ANR	851729	IdentifierDeclType	void * *		851687	0					
ANR	851730	Identifier	ppvSealedMessage		851687	1					
ANR	851731	AssignmentExpression	* * ppvSealedMessage = ( void * * ) & output		851687	2		=			
ANR	851732	Identifier	ppvSealedMessage		851687	0					
ANR	851733	CastExpression	( void * * ) & output		851687	1					
ANR	851734	CastTarget	void * *		851687	0					
ANR	851735	UnaryOperationExpression	& output		851687	1					
ANR	851736	UnaryOperator	&		851687	0					
ANR	851737	Identifier	output		851687	1					
ANR	851738	IdentifierDeclStatement	SecPkgContext_Sizes sizes ;	382:4:12818:12843	851687	5	True				
ANR	851739	IdentifierDecl	sizes		851687	0					
ANR	851740	IdentifierDeclType	SecPkgContext_Sizes		851687	0					
ANR	851741	Identifier	sizes		851687	1					
ANR	851742	IdentifierDeclStatement	"SECURITY_STATUS err = ( pf -> QueryContextAttributes ) ( & theCtx , SECPKG_ATTR_SIZES , & sizes ) ;"	383:4:12849:13024	851687	6	True				
ANR	851743	IdentifierDecl	"err = ( pf -> QueryContextAttributes ) ( & theCtx , SECPKG_ATTR_SIZES , & sizes )"		851687	0					
ANR	851744	IdentifierDeclType	SECURITY_STATUS		851687	0					
ANR	851745	Identifier	err		851687	1					
ANR	851746	AssignmentExpression	"err = ( pf -> QueryContextAttributes ) ( & theCtx , SECPKG_ATTR_SIZES , & sizes )"		851687	2		=			
ANR	851747	Identifier	err		851687	0					
ANR	851748	CallExpression	"( pf -> QueryContextAttributes ) ( & theCtx , SECPKG_ATTR_SIZES , & sizes )"		851687	1					
ANR	851749	Callee	pf -> QueryContextAttributes		851687	0					
ANR	851750	PtrMemberAccess	pf -> QueryContextAttributes		851687	0					
ANR	851751	Identifier	pf		851687	0					
ANR	851752	Identifier	QueryContextAttributes		851687	1					
ANR	851753	ArgumentList	& theCtx		851687	1					
ANR	851754	Argument	& theCtx		851687	0					
ANR	851755	UnaryOperationExpression	& theCtx		851687	0					
ANR	851756	UnaryOperator	&		851687	0					
ANR	851757	Identifier	theCtx		851687	1					
ANR	851758	Argument	SECPKG_ATTR_SIZES		851687	1					
ANR	851759	Identifier	SECPKG_ATTR_SIZES		851687	0					
ANR	851760	Argument	& sizes		851687	2					
ANR	851761	UnaryOperationExpression	& sizes		851687	0					
ANR	851762	UnaryOperator	&		851687	0					
ANR	851763	Identifier	sizes		851687	1					
ANR	851764	ExpressionStatement	* ppvSealedMessage = malloc ( cbMessage + sizes . cbSecurityTrailer )	390:4:13131:13225	851687	7	True				
ANR	851765	AssignmentExpression	* ppvSealedMessage = malloc ( cbMessage + sizes . cbSecurityTrailer )		851687	0		=			
ANR	851766	UnaryOperationExpression	* ppvSealedMessage		851687	0					
ANR	851767	UnaryOperator	*		851687	0					
ANR	851768	Identifier	ppvSealedMessage		851687	1					
ANR	851769	CallExpression	malloc ( cbMessage + sizes . cbSecurityTrailer )		851687	1					
ANR	851770	Callee	malloc		851687	0					
ANR	851771	Identifier	malloc		851687	0					
ANR	851772	ArgumentList	cbMessage + sizes . cbSecurityTrailer		851687	1					
ANR	851773	Argument	cbMessage + sizes . cbSecurityTrailer		851687	0					
ANR	851774	AdditiveExpression	cbMessage + sizes . cbSecurityTrailer		851687	0		+			
ANR	851775	Identifier	cbMessage		851687	0					
ANR	851776	MemberAccess	sizes . cbSecurityTrailer		851687	1					
ANR	851777	Identifier	sizes		851687	0					
ANR	851778	Identifier	cbSecurityTrailer		851687	1					
ANR	851779	ExpressionStatement	"CopyMemory ( * ppvSealedMessage , pvMessage , cbMessage )"	392:4:13231:13282	851687	8	True				
ANR	851780	CallExpression	"CopyMemory ( * ppvSealedMessage , pvMessage , cbMessage )"		851687	0					
ANR	851781	Callee	CopyMemory		851687	0					
ANR	851782	Identifier	CopyMemory		851687	0					
ANR	851783	ArgumentList	* ppvSealedMessage		851687	1					
ANR	851784	Argument	* ppvSealedMessage		851687	0					
ANR	851785	UnaryOperationExpression	* ppvSealedMessage		851687	0					
ANR	851786	UnaryOperator	*		851687	0					
ANR	851787	Identifier	ppvSealedMessage		851687	1					
ANR	851788	Argument	pvMessage		851687	1					
ANR	851789	Identifier	pvMessage		851687	0					
ANR	851790	Argument	cbMessage		851687	2					
ANR	851791	Identifier	cbMessage		851687	0					
ANR	851792	Statement	SecBuffer	395:4:13325:13333	851687	9	True				
ANR	851793	Statement	rgsb	395:14:13335:13338	851687	10	True				
ANR	851794	Statement	[	395:18:13339:13339	851687	11	True				
ANR	851795	Statement	]	395:19:13340:13340	851687	12	True				
ANR	851796	Statement	=	395:21:13342:13342	851687	13	True				
ANR	851797	CompoundStatement		28:23:773:773	851687	14					
ANR	851798	CompoundStatement		29:8:783:783	851687	0					
ANR	851799	Statement	cbMessage	396:9:13355:13363	851687	0	True				
ANR	851800	Statement	","	396:18:13364:13364	851687	1	True				
ANR	851801	Statement	SECBUFFER_DATA	396:20:13366:13379	851687	2	True				
ANR	851802	Statement	","	396:34:13380:13380	851687	3	True				
ANR	851803	Statement	*	396:36:13382:13382	851687	4	True				
ANR	851804	Statement	ppvSealedMessage	396:37:13383:13398	851687	5	True				
ANR	851805	Statement	","	396:54:13400:13400	851687	1	True				
ANR	851806	CompoundStatement		30:8:839:839	851687	2					
ANR	851807	Statement	sizes	397:9:13411:13415	851687	0	True				
ANR	851808	Statement	.	397:14:13416:13416	851687	1	True				
ANR	851809	Statement	cbSecurityTrailer	397:15:13417:13433	851687	2	True				
ANR	851810	Statement	","	397:32:13434:13434	851687	3	True				
ANR	851811	Statement	SECBUFFER_TOKEN	397:34:13436:13450	851687	4	True				
ANR	851812	Statement	","	397:49:13451:13451	851687	5	True				
ANR	851813	Statement	static_cast	398:12:13465:13475	851687	6	True				
ANR	851814	Statement	<	398:23:13476:13476	851687	7	True				
ANR	851815	Statement	BYTE	398:24:13477:13480	851687	8	True				
ANR	851816	Statement	*	398:28:13481:13481	851687	9	True				
ANR	851817	Statement	>	398:29:13482:13482	851687	10	True				
ANR	851818	Statement	(	398:30:13483:13483	851687	11	True				
ANR	851819	Statement	*	398:31:13484:13484	851687	12	True				
ANR	851820	Statement	ppvSealedMessage	398:32:13485:13500	851687	13	True				
ANR	851821	Statement	)	398:48:13501:13501	851687	14	True				
ANR	851822	Statement	+	398:50:13503:13503	851687	15	True				
ANR	851823	Statement	cbMessage	399:12:13517:13525	851687	16	True				
ANR	851824	Statement	","	399:22:13527:13527	851687	3	True				
ANR	851825	ExpressionStatement		400:5:13534:13534	851687	15	True				
ANR	851826	IdentifierDeclStatement	"SecBufferDesc sbd = { SECBUFFER_VERSION , sizeof rgsb / sizeof * rgsb , rgsb } ;"	401:4:13540:13638	851687	16	True				
ANR	851827	IdentifierDecl	"sbd = { SECBUFFER_VERSION , sizeof rgsb / sizeof * rgsb , rgsb }"		851687	0					
ANR	851828	IdentifierDeclType	SecBufferDesc		851687	0					
ANR	851829	Identifier	sbd		851687	1					
ANR	851830	AssignmentExpression	"sbd = { SECBUFFER_VERSION , sizeof rgsb / sizeof * rgsb , rgsb }"		851687	2		=			
ANR	851831	Identifier	sbd		851687	0					
ANR	851832	InitializerList	SECBUFFER_VERSION		851687	1					
ANR	851833	Identifier	SECBUFFER_VERSION		851687	0					
ANR	851834	MultiplicativeExpression	sizeof rgsb / sizeof * rgsb		851687	1		/			
ANR	851835	SizeofExpression	sizeof rgsb		851687	0					
ANR	851836	Sizeof	sizeof		851687	0					
ANR	851837	Identifier	rgsb		851687	1					
ANR	851838	SizeofExpression	sizeof * rgsb		851687	1					
ANR	851839	Sizeof	sizeof		851687	0					
ANR	851840	UnaryOperationExpression	* rgsb		851687	1					
ANR	851841	UnaryOperator	*		851687	0					
ANR	851842	Identifier	rgsb		851687	1					
ANR	851843	Identifier	rgsb		851687	2					
ANR	851844	ExpressionStatement	"err = ( pf -> EncryptMessage ) ( & theCtx , 0 , & sbd , 0 )"	404:4:13668:13715	851687	17	True				
ANR	851845	AssignmentExpression	"err = ( pf -> EncryptMessage ) ( & theCtx , 0 , & sbd , 0 )"		851687	0		=			
ANR	851846	Identifier	err		851687	0					
ANR	851847	CallExpression	"( pf -> EncryptMessage ) ( & theCtx , 0 , & sbd , 0 )"		851687	1					
ANR	851848	Callee	pf -> EncryptMessage		851687	0					
ANR	851849	PtrMemberAccess	pf -> EncryptMessage		851687	0					
ANR	851850	Identifier	pf		851687	0					
ANR	851851	Identifier	EncryptMessage		851687	1					
ANR	851852	ArgumentList	& theCtx		851687	1					
ANR	851853	Argument	& theCtx		851687	0					
ANR	851854	UnaryOperationExpression	& theCtx		851687	0					
ANR	851855	UnaryOperator	&		851687	0					
ANR	851856	Identifier	theCtx		851687	1					
ANR	851857	Argument	0		851687	1					
ANR	851858	PrimaryExpression	0		851687	0					
ANR	851859	Argument	& sbd		851687	2					
ANR	851860	UnaryOperationExpression	& sbd		851687	0					
ANR	851861	UnaryOperator	&		851687	0					
ANR	851862	Identifier	sbd		851687	1					
ANR	851863	Argument	0		851687	3					
ANR	851864	PrimaryExpression	0		851687	0					
ANR	851865	IdentifierDeclStatement	bool bOk = true ;	405:4:13721:13736	851687	18	True				
ANR	851866	IdentifierDecl	bOk = true		851687	0					
ANR	851867	IdentifierDeclType	bool		851687	0					
ANR	851868	Identifier	bOk		851687	1					
ANR	851869	AssignmentExpression	bOk = true		851687	2		=			
ANR	851870	Identifier	true		851687	0					
ANR	851871	Identifier	true		851687	1					
ANR	851872	IfStatement	if ( err )		851687	19					
ANR	851873	Condition	err	406:8:13746:13748	851687	0	True				
ANR	851874	Identifier	err		851687	0					
ANR	851875	CompoundStatement		39:13:1180:1180	851687	1					
ANR	851876	ExpressionStatement	bOk = false	407:8:13761:13772	851687	0	True				
ANR	851877	AssignmentExpression	bOk = false		851687	0		=			
ANR	851878	Identifier	bOk		851687	0					
ANR	851879	Identifier	false		851687	1					
ANR	851880	ExpressionStatement	free ( * ppvSealedMessage )	408:8:13782:13805	851687	1	True				
ANR	851881	CallExpression	free ( * ppvSealedMessage )		851687	0					
ANR	851882	Callee	free		851687	0					
ANR	851883	Identifier	free		851687	0					
ANR	851884	ArgumentList	* ppvSealedMessage		851687	1					
ANR	851885	Argument	* ppvSealedMessage		851687	0					
ANR	851886	UnaryOperationExpression	* ppvSealedMessage		851687	0					
ANR	851887	UnaryOperator	*		851687	0					
ANR	851888	Identifier	ppvSealedMessage		851687	1					
ANR	851889	ExpressionStatement	* ppvSealedMessage = 0	409:8:13815:13836	851687	2	True				
ANR	851890	AssignmentExpression	* ppvSealedMessage = 0		851687	0		=			
ANR	851891	UnaryOperationExpression	* ppvSealedMessage		851687	0					
ANR	851892	UnaryOperator	*		851687	0					
ANR	851893	Identifier	ppvSealedMessage		851687	1					
ANR	851894	PrimaryExpression	0		851687	1					
ANR	851895	ExpressionStatement	output_len = cbMessage + rgsb [ 1 ] . cbBuffer	411:4:13848:13889	851687	20	True				
ANR	851896	AssignmentExpression	output_len = cbMessage + rgsb [ 1 ] . cbBuffer		851687	0		=			
ANR	851897	Identifier	output_len		851687	0					
ANR	851898	AdditiveExpression	cbMessage + rgsb [ 1 ] . cbBuffer		851687	1		+			
ANR	851899	Identifier	cbMessage		851687	0					
ANR	851900	MemberAccess	rgsb [ 1 ] . cbBuffer		851687	1					
ANR	851901	ArrayIndexing	rgsb [ 1 ]		851687	0					
ANR	851902	Identifier	rgsb		851687	0					
ANR	851903	PrimaryExpression	1		851687	1					
ANR	851904	Identifier	cbBuffer		851687	1					
ANR	851905	ExpressionStatement	"dprintf ( D_SECURITY , ""Condor_Auth_SSPI::wrap() - input_len=%d output_len=%d\\n"" , input_len , output_len )"	412:1:13892:13996	851687	21	True				
ANR	851906	CallExpression	"dprintf ( D_SECURITY , ""Condor_Auth_SSPI::wrap() - input_len=%d output_len=%d\\n"" , input_len , output_len )"		851687	0					
ANR	851907	Callee	dprintf		851687	0					
ANR	851908	Identifier	dprintf		851687	0					
ANR	851909	ArgumentList	D_SECURITY		851687	1					
ANR	851910	Argument	D_SECURITY		851687	0					
ANR	851911	Identifier	D_SECURITY		851687	0					
ANR	851912	Argument	"""Condor_Auth_SSPI::wrap() - input_len=%d output_len=%d\\n"""		851687	1					
ANR	851913	PrimaryExpression	"""Condor_Auth_SSPI::wrap() - input_len=%d output_len=%d\\n"""		851687	0					
ANR	851914	Argument	input_len		851687	2					
ANR	851915	Identifier	input_len		851687	0					
ANR	851916	Argument	output_len		851687	3					
ANR	851917	Identifier	output_len		851687	0					
ANR	851918	ReturnStatement	return bOk ? TRUE : FALSE ;	415:4:14002:14027	851687	22	True				
ANR	851919	ConditionalExpression	bOk ? TRUE : FALSE		851687	0					
ANR	851920	Condition	bOk		851687	0					
ANR	851921	Identifier	bOk		851687	0					
ANR	851922	Identifier	TRUE		851687	1					
ANR	851923	Identifier	FALSE		851687	2					
ANR	851924	ReturnType	int		851687	1					
ANR	851925	Identifier	Condor_Auth_SSPI :: wrap		851687	2					
ANR	851926	ParameterList	"char * input , int input_len , char * & output , int & output_len"		851687	3					
ANR	851927	Parameter	char * input	364:23:12406:12419	851687	0	True				
ANR	851928	ParameterType	char *		851687	0					
ANR	851929	Identifier	input		851687	1					
ANR	851930	Parameter	int input_len	365:29:12452:12469	851687	1	True				
ANR	851931	ParameterType	int		851687	0					
ANR	851932	Identifier	input_len		851687	1					
ANR	851933	Parameter	char * & output	366:29:12502:12516	851687	2	True				
ANR	851934	ParameterType	char * &		851687	0					
ANR	851935	Identifier	output		851687	1					
ANR	851936	Parameter	int & output_len	367:29:12549:12567	851687	3	True				
ANR	851937	ParameterType	int &		851687	0					
ANR	851938	Identifier	output_len		851687	1					
ANR	851939	CFGEntryNode	ENTRY		851687		True				
ANR	851940	CFGExitNode	EXIT		851687		True				
ANR	851941	Symbol	output_len		851687						
ANR	851942	Symbol	D_SECURITY		851687						
ANR	851943	Symbol	SECBUFFER_VERSION		851687						
ANR	851944	Symbol	output		851687						
ANR	851945	Symbol	sizes		851687						
ANR	851946	Symbol	& sizes		851687						
ANR	851947	Symbol	* rgsb		851687						
ANR	851948	Symbol	pf -> EncryptMessage		851687						
ANR	851949	Symbol	& sbd		851687						
ANR	851950	Symbol	bOk		851687						
ANR	851951	Symbol	malloc		851687						
ANR	851952	Symbol	input_len		851687						
ANR	851953	Symbol	err		851687						
ANR	851954	Symbol	cbMessage		851687						
ANR	851955	Symbol	sizes . cbSecurityTrailer		851687						
ANR	851956	Symbol	isValid		851687						
ANR	851957	Symbol	* ppvSealedMessage		851687						
ANR	851958	Symbol	false		851687						
ANR	851959	Symbol	TRUE		851687						
ANR	851960	Symbol	ppvSealedMessage		851687						
ANR	851961	Symbol	rgsb [ 1 ] . cbBuffer		851687						
ANR	851962	Symbol	pf -> QueryContextAttributes		851687						
ANR	851963	Symbol	input		851687						
ANR	851964	Symbol	rgsb		851687						
ANR	851965	Symbol	sbd		851687						
ANR	851966	Symbol	pf		851687						
ANR	851967	Symbol	true		851687						
ANR	851968	Symbol	FALSE		851687						
ANR	851969	Symbol	SECPKG_ATTR_SIZES		851687						
ANR	851970	Symbol	& output		851687						
ANR	851971	Symbol	& theCtx		851687						
ANR	851972	Symbol	pvMessage		851687						
ANR	851973	Symbol	* pf		851687						
ANR	851974	Function	Condor_Auth_SSPI :: unwrap	418:0:14032:15418							
ANR	851975	FunctionDef	"Condor_Auth_SSPI :: unwrap (char * input , int input_len , char * & output , int & output_len)"		851974	0					
ANR	851976	CompoundStatement		423:0:14226:15418	851974	0					
ANR	851977	IfStatement	if ( ! input || ! input_len )		851974	0					
ANR	851978	Condition	! input || ! input_len	424:6:14234:14253	851974	0	True				
ANR	851979	OrExpression	! input || ! input_len		851974	0		||			
ANR	851980	UnaryOperationExpression	! input		851974	0					
ANR	851981	UnaryOperator	!		851974	0					
ANR	851982	Identifier	input		851974	1					
ANR	851983	UnaryOperationExpression	! input_len		851974	1					
ANR	851984	UnaryOperator	!		851974	0					
ANR	851985	Identifier	input_len		851974	1					
ANR	851986	CompoundStatement		2:29:30:30	851974	1					
ANR	851987	ReturnStatement	return FALSE ;	425:2:14261:14273	851974	0	True				
ANR	851988	Identifier	FALSE		851974	0					
ANR	851989	IfStatement	if ( ! isValid ( ) )		851974	1					
ANR	851990	Condition	! isValid ( )	428:6:14285:14294	851974	0	True				
ANR	851991	UnaryOperationExpression	! isValid ( )		851974	0					
ANR	851992	UnaryOperator	!		851974	0					
ANR	851993	CallExpression	isValid ( )		851974	1					
ANR	851994	Callee	isValid		851974	0					
ANR	851995	Identifier	isValid		851974	0					
ANR	851996	ArgumentList			851974	1					
ANR	851997	CompoundStatement		6:19:71:71	851974	1					
ANR	851998	ReturnStatement	return FALSE ;	429:2:14302:14314	851974	0	True				
ANR	851999	Identifier	FALSE		851974	0					
ANR	852000	IdentifierDeclStatement	const void * pvSealedMessage = input ;	432:1:14321:14356	851974	2	True				
ANR	852001	IdentifierDecl	* pvSealedMessage = input		851974	0					
ANR	852002	IdentifierDeclType	const void *		851974	0					
ANR	852003	Identifier	pvSealedMessage		851974	1					
ANR	852004	AssignmentExpression	* pvSealedMessage = input		851974	2		=			
ANR	852005	Identifier	input		851974	0					
ANR	852006	Identifier	input		851974	1					
ANR	852007	IdentifierDeclStatement	DWORD cbSealedMessage = input_len ;	433:1:14359:14392	851974	3	True				
ANR	852008	IdentifierDecl	cbSealedMessage = input_len		851974	0					
ANR	852009	IdentifierDeclType	DWORD		851974	0					
ANR	852010	Identifier	cbSealedMessage		851974	1					
ANR	852011	AssignmentExpression	cbSealedMessage = input_len		851974	2		=			
ANR	852012	Identifier	input_len		851974	0					
ANR	852013	Identifier	input_len		851974	1					
ANR	852014	ExpressionStatement	ASSERT ( input_len > 16 )	434:1:14395:14417	851974	4	True				
ANR	852015	CallExpression	ASSERT ( input_len > 16 )		851974	0					
ANR	852016	Callee	ASSERT		851974	0					
ANR	852017	Identifier	ASSERT		851974	0					
ANR	852018	ArgumentList	input_len > 16		851974	1					
ANR	852019	Argument	input_len > 16		851974	0					
ANR	852020	RelationalExpression	input_len > 16		851974	0		>			
ANR	852021	Identifier	input_len		851974	0					
ANR	852022	PrimaryExpression	16		851974	1					
ANR	852023	IdentifierDeclStatement	DWORD cbMessage = input_len - 16 ;	435:1:14420:14452	851974	5	True				
ANR	852024	IdentifierDecl	cbMessage = input_len - 16		851974	0					
ANR	852025	IdentifierDeclType	DWORD		851974	0					
ANR	852026	Identifier	cbMessage		851974	1					
ANR	852027	AssignmentExpression	cbMessage = input_len - 16		851974	2		=			
ANR	852028	Identifier	cbMessage		851974	0					
ANR	852029	AdditiveExpression	input_len - 16		851974	1		-			
ANR	852030	Identifier	input_len		851974	0					
ANR	852031	PrimaryExpression	16		851974	1					
ANR	852032	ExpressionStatement	output_len = input_len - 16	436:1:14487:14514	851974	6	True				
ANR	852033	AssignmentExpression	output_len = input_len - 16		851974	0		=			
ANR	852034	Identifier	output_len		851974	0					
ANR	852035	AdditiveExpression	input_len - 16		851974	1		-			
ANR	852036	Identifier	input_len		851974	0					
ANR	852037	PrimaryExpression	16		851974	1					
ANR	852038	IdentifierDeclStatement	void * * ppvMessage = ( void * * ) & output ;	437:1:14517:14552	851974	7	True				
ANR	852039	IdentifierDecl	* * ppvMessage = ( void * * ) & output		851974	0					
ANR	852040	IdentifierDeclType	void * *		851974	0					
ANR	852041	Identifier	ppvMessage		851974	1					
ANR	852042	AssignmentExpression	* * ppvMessage = ( void * * ) & output		851974	2		=			
ANR	852043	Identifier	ppvMessage		851974	0					
ANR	852044	CastExpression	( void * * ) & output		851974	1					
ANR	852045	CastTarget	void * *		851974	0					
ANR	852046	UnaryOperationExpression	& output		851974	1					
ANR	852047	UnaryOperator	&		851974	0					
ANR	852048	Identifier	output		851974	1					
ANR	852049	ExpressionStatement	* ppvMessage = malloc ( cbSealedMessage )	440:4:14609:14646	851974	8	True				
ANR	852050	AssignmentExpression	* ppvMessage = malloc ( cbSealedMessage )		851974	0		=			
ANR	852051	UnaryOperationExpression	* ppvMessage		851974	0					
ANR	852052	UnaryOperator	*		851974	0					
ANR	852053	Identifier	ppvMessage		851974	1					
ANR	852054	CallExpression	malloc ( cbSealedMessage )		851974	1					
ANR	852055	Callee	malloc		851974	0					
ANR	852056	Identifier	malloc		851974	0					
ANR	852057	ArgumentList	cbSealedMessage		851974	1					
ANR	852058	Argument	cbSealedMessage		851974	0					
ANR	852059	Identifier	cbSealedMessage		851974	0					
ANR	852060	ExpressionStatement	"CopyMemory ( * ppvMessage , pvSealedMessage , cbSealedMessage )"	441:4:14652:14739	851974	9	True				
ANR	852061	CallExpression	"CopyMemory ( * ppvMessage , pvSealedMessage , cbSealedMessage )"		851974	0					
ANR	852062	Callee	CopyMemory		851974	0					
ANR	852063	Identifier	CopyMemory		851974	0					
ANR	852064	ArgumentList	* ppvMessage		851974	1					
ANR	852065	Argument	* ppvMessage		851974	0					
ANR	852066	UnaryOperationExpression	* ppvMessage		851974	0					
ANR	852067	UnaryOperator	*		851974	0					
ANR	852068	Identifier	ppvMessage		851974	1					
ANR	852069	Argument	pvSealedMessage		851974	1					
ANR	852070	Identifier	pvSealedMessage		851974	0					
ANR	852071	Argument	cbSealedMessage		851974	2					
ANR	852072	Identifier	cbSealedMessage		851974	0					
ANR	852073	IdentifierDeclStatement	const DWORD cbTrailer = cbSealedMessage - cbMessage ;	444:4:14745:14796	851974	10	True				
ANR	852074	IdentifierDecl	cbTrailer = cbSealedMessage - cbMessage		851974	0					
ANR	852075	IdentifierDeclType	const DWORD		851974	0					
ANR	852076	Identifier	cbTrailer		851974	1					
ANR	852077	AssignmentExpression	cbTrailer = cbSealedMessage - cbMessage		851974	2		=			
ANR	852078	Identifier	cbTrailer		851974	0					
ANR	852079	AdditiveExpression	cbSealedMessage - cbMessage		851974	1		-			
ANR	852080	Identifier	cbSealedMessage		851974	0					
ANR	852081	Identifier	cbMessage		851974	1					
ANR	852082	Statement	SecBuffer	447:4:14838:14846	851974	11	True				
ANR	852083	Statement	rgsb	447:14:14848:14851	851974	12	True				
ANR	852084	Statement	[	447:18:14852:14852	851974	13	True				
ANR	852085	Statement	]	447:19:14853:14853	851974	14	True				
ANR	852086	Statement	=	447:21:14855:14855	851974	15	True				
ANR	852087	CompoundStatement		25:23:630:630	851974	16					
ANR	852088	CompoundStatement		26:8:640:640	851974	0					
ANR	852089	Statement	cbMessage	448:9:14868:14876	851974	0	True				
ANR	852090	Statement	","	448:18:14877:14877	851974	1	True				
ANR	852091	Statement	SECBUFFER_DATA	448:20:14879:14892	851974	2	True				
ANR	852092	Statement	","	448:34:14893:14893	851974	3	True				
ANR	852093	Statement	*	448:36:14895:14895	851974	4	True				
ANR	852094	Statement	ppvMessage	448:37:14896:14905	851974	5	True				
ANR	852095	Statement	","	448:48:14907:14907	851974	1	True				
ANR	852096	CompoundStatement		27:8:690:690	851974	2					
ANR	852097	Statement	cbTrailer	449:9:14918:14926	851974	0	True				
ANR	852098	Statement	","	449:18:14927:14927	851974	1	True				
ANR	852099	Statement	SECBUFFER_TOKEN	449:20:14929:14943	851974	2	True				
ANR	852100	Statement	","	449:35:14944:14944	851974	3	True				
ANR	852101	Statement	static_cast	450:9:14955:14965	851974	4	True				
ANR	852102	Statement	<	450:20:14966:14966	851974	5	True				
ANR	852103	Statement	BYTE	450:21:14967:14970	851974	6	True				
ANR	852104	Statement	*	450:25:14971:14971	851974	7	True				
ANR	852105	Statement	>	450:26:14972:14972	851974	8	True				
ANR	852106	Statement	(	450:27:14973:14973	851974	9	True				
ANR	852107	Statement	*	450:28:14974:14974	851974	10	True				
ANR	852108	Statement	ppvMessage	450:29:14975:14984	851974	11	True				
ANR	852109	Statement	)	450:39:14985:14985	851974	12	True				
ANR	852110	Statement	+	450:41:14987:14987	851974	13	True				
ANR	852111	Statement	cbMessage	450:43:14989:14997	851974	14	True				
ANR	852112	Statement	","	450:53:14999:14999	851974	3	True				
ANR	852113	ExpressionStatement		451:5:15006:15006	851974	17	True				
ANR	852114	IdentifierDeclStatement	"SecBufferDesc sbd = { SECBUFFER_VERSION , sizeof rgsb / sizeof * rgsb , rgsb } ;"	452:4:15012:15135	851974	18	True				
ANR	852115	IdentifierDecl	"sbd = { SECBUFFER_VERSION , sizeof rgsb / sizeof * rgsb , rgsb }"		851974	0					
ANR	852116	IdentifierDeclType	SecBufferDesc		851974	0					
ANR	852117	Identifier	sbd		851974	1					
ANR	852118	AssignmentExpression	"sbd = { SECBUFFER_VERSION , sizeof rgsb / sizeof * rgsb , rgsb }"		851974	2		=			
ANR	852119	Identifier	sbd		851974	0					
ANR	852120	InitializerList	SECBUFFER_VERSION		851974	1					
ANR	852121	Identifier	SECBUFFER_VERSION		851974	0					
ANR	852122	MultiplicativeExpression	sizeof rgsb / sizeof * rgsb		851974	1		/			
ANR	852123	SizeofExpression	sizeof rgsb		851974	0					
ANR	852124	Sizeof	sizeof		851974	0					
ANR	852125	Identifier	rgsb		851974	1					
ANR	852126	SizeofExpression	sizeof * rgsb		851974	1					
ANR	852127	Sizeof	sizeof		851974	0					
ANR	852128	UnaryOperationExpression	* rgsb		851974	1					
ANR	852129	UnaryOperator	*		851974	0					
ANR	852130	Identifier	rgsb		851974	1					
ANR	852131	Identifier	rgsb		851974	2					
ANR	852132	IdentifierDeclStatement	"SECURITY_STATUS err = ( pf -> DecryptMessage ) ( & theCtx , & sbd , 0 , 0 ) ;"	456:4:15165:15235	851974	19	True				
ANR	852133	IdentifierDecl	"err = ( pf -> DecryptMessage ) ( & theCtx , & sbd , 0 , 0 )"		851974	0					
ANR	852134	IdentifierDeclType	SECURITY_STATUS		851974	0					
ANR	852135	Identifier	err		851974	1					
ANR	852136	AssignmentExpression	"err = ( pf -> DecryptMessage ) ( & theCtx , & sbd , 0 , 0 )"		851974	2		=			
ANR	852137	Identifier	err		851974	0					
ANR	852138	CallExpression	"( pf -> DecryptMessage ) ( & theCtx , & sbd , 0 , 0 )"		851974	1					
ANR	852139	Callee	pf -> DecryptMessage		851974	0					
ANR	852140	PtrMemberAccess	pf -> DecryptMessage		851974	0					
ANR	852141	Identifier	pf		851974	0					
ANR	852142	Identifier	DecryptMessage		851974	1					
ANR	852143	ArgumentList	& theCtx		851974	1					
ANR	852144	Argument	& theCtx		851974	0					
ANR	852145	UnaryOperationExpression	& theCtx		851974	0					
ANR	852146	UnaryOperator	&		851974	0					
ANR	852147	Identifier	theCtx		851974	1					
ANR	852148	Argument	& sbd		851974	1					
ANR	852149	UnaryOperationExpression	& sbd		851974	0					
ANR	852150	UnaryOperator	&		851974	0					
ANR	852151	Identifier	sbd		851974	1					
ANR	852152	Argument	0		851974	2					
ANR	852153	PrimaryExpression	0		851974	0					
ANR	852154	Argument	0		851974	3					
ANR	852155	PrimaryExpression	0		851974	0					
ANR	852156	IfStatement	if ( err )		851974	20					
ANR	852157	Condition	err	458:8:15245:15247	851974	0	True				
ANR	852158	Identifier	err		851974	0					
ANR	852159	CompoundStatement		36:13:1023:1023	851974	1					
ANR	852160	ExpressionStatement	free ( * ppvMessage )	459:8:15260:15277	851974	0	True				
ANR	852161	CallExpression	free ( * ppvMessage )		851974	0					
ANR	852162	Callee	free		851974	0					
ANR	852163	Identifier	free		851974	0					
ANR	852164	ArgumentList	* ppvMessage		851974	1					
ANR	852165	Argument	* ppvMessage		851974	0					
ANR	852166	UnaryOperationExpression	* ppvMessage		851974	0					
ANR	852167	UnaryOperator	*		851974	0					
ANR	852168	Identifier	ppvMessage		851974	1					
ANR	852169	ExpressionStatement	* ppvMessage = 0	460:8:15287:15302	851974	1	True				
ANR	852170	AssignmentExpression	* ppvMessage = 0		851974	0		=			
ANR	852171	UnaryOperationExpression	* ppvMessage		851974	0					
ANR	852172	UnaryOperator	*		851974	0					
ANR	852173	Identifier	ppvMessage		851974	1					
ANR	852174	PrimaryExpression	0		851974	1					
ANR	852175	ExpressionStatement	output_len = 0	461:2:15306:15320	851974	2	True				
ANR	852176	AssignmentExpression	output_len = 0		851974	0		=			
ANR	852177	Identifier	output_len		851974	0					
ANR	852178	PrimaryExpression	0		851974	1					
ANR	852179	ExpressionStatement	"dprintf ( D_ALWAYS , ""Condor_Auth_SSPI::unwrap() failed!\\n"" )"	462:2:15324:15380	851974	3	True				
ANR	852180	CallExpression	"dprintf ( D_ALWAYS , ""Condor_Auth_SSPI::unwrap() failed!\\n"" )"		851974	0					
ANR	852181	Callee	dprintf		851974	0					
ANR	852182	Identifier	dprintf		851974	0					
ANR	852183	ArgumentList	D_ALWAYS		851974	1					
ANR	852184	Argument	D_ALWAYS		851974	0					
ANR	852185	Identifier	D_ALWAYS		851974	0					
ANR	852186	Argument	"""Condor_Auth_SSPI::unwrap() failed!\\n"""		851974	1					
ANR	852187	PrimaryExpression	"""Condor_Auth_SSPI::unwrap() failed!\\n"""		851974	0					
ANR	852188	ReturnStatement	return FALSE ;	463:2:15384:15396	851974	4	True				
ANR	852189	Identifier	FALSE		851974	0					
ANR	852190	ReturnStatement	return TRUE ;	465:1:15405:15416	851974	21	True				
ANR	852191	Identifier	TRUE		851974	0					
ANR	852192	ReturnType	int		851974	1					
ANR	852193	Identifier	Condor_Auth_SSPI :: unwrap		851974	2					
ANR	852194	ParameterList	"char * input , int input_len , char * & output , int & output_len"		851974	3					
ANR	852195	Parameter	char * input	419:25:14062:14075	851974	0	True				
ANR	852196	ParameterType	char *		851974	0					
ANR	852197	Identifier	input		851974	1					
ANR	852198	Parameter	int input_len	420:29:14108:14125	851974	1	True				
ANR	852199	ParameterType	int		851974	0					
ANR	852200	Identifier	input_len		851974	1					
ANR	852201	Parameter	char * & output	421:29:14158:14172	851974	2	True				
ANR	852202	ParameterType	char * &		851974	0					
ANR	852203	Identifier	output		851974	1					
ANR	852204	Parameter	int & output_len	422:29:14205:14223	851974	3	True				
ANR	852205	ParameterType	int &		851974	0					
ANR	852206	Identifier	output_len		851974	1					
ANR	852207	CFGEntryNode	ENTRY		851974		True				
ANR	852208	CFGExitNode	EXIT		851974		True				
ANR	852209	Symbol	output_len		851974						
ANR	852210	Symbol	SECBUFFER_VERSION		851974						
ANR	852211	Symbol	output		851974						
ANR	852212	Symbol	cbTrailer		851974						
ANR	852213	Symbol	* rgsb		851974						
ANR	852214	Symbol	* ppvMessage		851974						
ANR	852215	Symbol	& sbd		851974						
ANR	852216	Symbol	malloc		851974						
ANR	852217	Symbol	pvSealedMessage		851974						
ANR	852218	Symbol	cbSealedMessage		851974						
ANR	852219	Symbol	input_len		851974						
ANR	852220	Symbol	err		851974						
ANR	852221	Symbol	cbMessage		851974						
ANR	852222	Symbol	isValid		851974						
ANR	852223	Symbol	D_ALWAYS		851974						
ANR	852224	Symbol	TRUE		851974						
ANR	852225	Symbol	input		851974						
ANR	852226	Symbol	ppvMessage		851974						
ANR	852227	Symbol	rgsb		851974						
ANR	852228	Symbol	sbd		851974						
ANR	852229	Symbol	pf		851974						
ANR	852230	Symbol	FALSE		851974						
ANR	852231	Symbol	pf -> DecryptMessage		851974						
ANR	852232	Symbol	& output		851974						
ANR	852233	Symbol	& theCtx		851974						
ANR	852234	Symbol	* pf		851974						
ANR	852235	Function	Condor_Auth_SSPI :: authenticate	468:0:15421:16722							
ANR	852236	FunctionDef	"Condor_Auth_SSPI :: authenticate (const char * remoteHost , CondorError * errstack)"		852235	0					
ANR	852237	CompoundStatement		470:0:15504:16722	852235	0					
ANR	852238	IdentifierDeclStatement	int ret_value ;	471:1:15507:15520	852235	0	True				
ANR	852239	IdentifierDecl	ret_value		852235	0					
ANR	852240	IdentifierDeclType	int		852235	0					
ANR	852241	Identifier	ret_value		852235	1					
ANR	852242	IdentifierDeclStatement	CredHandle cred ;	472:1:15523:15538	852235	1	True				
ANR	852243	IdentifierDecl	cred		852235	0					
ANR	852244	IdentifierDeclType	CredHandle		852235	0					
ANR	852245	Identifier	cred		852235	1					
ANR	852246	ExpressionStatement	cred . dwLower = 0L	474:1:15542:15559	852235	2	True				
ANR	852247	AssignmentExpression	cred . dwLower = 0L		852235	0		=			
ANR	852248	MemberAccess	cred . dwLower		852235	0					
ANR	852249	Identifier	cred		852235	0					
ANR	852250	Identifier	dwLower		852235	1					
ANR	852251	PrimaryExpression	0L		852235	1					
ANR	852252	ExpressionStatement	cred . dwUpper = 0L	475:1:15562:15579	852235	3	True				
ANR	852253	AssignmentExpression	cred . dwUpper = 0L		852235	0		=			
ANR	852254	MemberAccess	cred . dwUpper		852235	0					
ANR	852255	Identifier	cred		852235	0					
ANR	852256	Identifier	dwUpper		852235	1					
ANR	852257	PrimaryExpression	0L		852235	1					
ANR	852258	IfStatement	if ( pf == NULL )		852235	4					
ANR	852259	Condition	pf == NULL	477:6:15588:15597	852235	0	True				
ANR	852260	EqualityExpression	pf == NULL		852235	0		==			
ANR	852261	Identifier	pf		852235	0					
ANR	852262	Identifier	NULL		852235	1					
ANR	852263	CompoundStatement		9:2:100:138	852235	1					
ANR	852264	IdentifierDeclStatement	PSecurityFunctionTable ( * pSFT ) ( void ) ;	478:2:15605:15643	852235	0	True				
ANR	852265	IdentifierDecl	( * pSFT ) ( void )		852235	0					
ANR	852266	IdentifierDeclType	PSecurityFunctionTable ( * ) ( void )		852235	0					
ANR	852267	Identifier	pSFT		852235	1					
ANR	852268	Statement	pSFT	480:2:15648:15651	852235	1	True				
ANR	852269	Statement	=	480:7:15653:15653	852235	2	True				
ANR	852270	Statement	(	480:9:15655:15655	852235	3	True				
ANR	852271	Statement	PSecurityFunctionTable	480:10:15656:15677	852235	4	True				
ANR	852272	Statement	(	480:33:15679:15679	852235	5	True				
ANR	852273	Statement	*	480:34:15680:15680	852235	6	True				
ANR	852274	Statement	)	480:35:15681:15681	852235	7	True				
ANR	852275	Statement	(	480:36:15682:15682	852235	8	True				
ANR	852276	Statement	void	480:38:15684:15687	852235	9	True				
ANR	852277	Statement	)	480:43:15689:15689	852235	10	True				
ANR	852278	Statement	)	480:44:15690:15690	852235	11	True				
ANR	852279	ExpressionStatement	"GetProcAddress ( _condor_hSecDll , ""InitSecurityInterfaceA"" )"	481:3:15696:15755	852235	12	True				
ANR	852280	CallExpression	"GetProcAddress ( _condor_hSecDll , ""InitSecurityInterfaceA"" )"		852235	0					
ANR	852281	Callee	GetProcAddress		852235	0					
ANR	852282	Identifier	GetProcAddress		852235	0					
ANR	852283	ArgumentList	_condor_hSecDll		852235	1					
ANR	852284	Argument	_condor_hSecDll		852235	0					
ANR	852285	Identifier	_condor_hSecDll		852235	0					
ANR	852286	Argument	"""InitSecurityInterfaceA"""		852235	1					
ANR	852287	PrimaryExpression	"""InitSecurityInterfaceA"""		852235	0					
ANR	852288	IfStatement	if ( pSFT )		852235	13					
ANR	852289	Condition	pSFT	482:7:15764:15767	852235	0	True				
ANR	852290	Identifier	pSFT		852235	0					
ANR	852291	CompoundStatement		14:2:268:268	852235	1					
ANR	852292	ExpressionStatement	pf = pSFT ( )	484:3:15778:15789	852235	0	True				
ANR	852293	AssignmentExpression	pf = pSFT ( )		852235	0		=			
ANR	852294	Identifier	pf		852235	0					
ANR	852295	CallExpression	pSFT ( )		852235	1					
ANR	852296	Callee	pSFT		852235	0					
ANR	852297	Identifier	pSFT		852235	0					
ANR	852298	ArgumentList			852235	1					
ANR	852299	IfStatement	if ( pf == NULL )		852235	14					
ANR	852300	Condition	pf == NULL	487:7:15803:15812	852235	0	True				
ANR	852301	EqualityExpression	pf == NULL		852235	0		==			
ANR	852302	Identifier	pf		852235	0					
ANR	852303	Identifier	NULL		852235	1					
ANR	852304	CompoundStatement		19:2:313:313	852235	1					
ANR	852305	ExpressionStatement	"EXCEPT ( ""SECURITY.DLL load messed up!"" )"	489:3:15823:15861	852235	0	True				
ANR	852306	CallExpression	"EXCEPT ( ""SECURITY.DLL load messed up!"" )"		852235	0					
ANR	852307	Callee	EXCEPT		852235	0					
ANR	852308	Identifier	EXCEPT		852235	0					
ANR	852309	ArgumentList	"""SECURITY.DLL load messed up!"""		852235	1					
ANR	852310	Argument	"""SECURITY.DLL load messed up!"""		852235	0					
ANR	852311	PrimaryExpression	"""SECURITY.DLL load messed up!"""		852235	0					
ANR	852312	IfStatement	if ( theCtx . dwLower != 0L || theCtx . dwUpper != 0L )		852235	5					
ANR	852313	Condition	theCtx . dwLower != 0L || theCtx . dwUpper != 0L	493:6:15877:15920	852235	0	True				
ANR	852314	OrExpression	theCtx . dwLower != 0L || theCtx . dwUpper != 0L		852235	0		||			
ANR	852315	EqualityExpression	theCtx . dwLower != 0L		852235	0		!=			
ANR	852316	MemberAccess	theCtx . dwLower		852235	0					
ANR	852317	Identifier	theCtx		852235	0					
ANR	852318	Identifier	dwLower		852235	1					
ANR	852319	PrimaryExpression	0L		852235	1					
ANR	852320	EqualityExpression	theCtx . dwUpper != 0L		852235	1		!=			
ANR	852321	MemberAccess	theCtx . dwUpper		852235	0					
ANR	852322	Identifier	theCtx		852235	0					
ANR	852323	Identifier	dwUpper		852235	1					
ANR	852324	PrimaryExpression	0L		852235	1					
ANR	852325	ExpressionStatement	( pf -> DeleteSecurityContext ) ( & theCtx )	494:2:15926:15964	852235	1	True				
ANR	852326	CallExpression	( pf -> DeleteSecurityContext ) ( & theCtx )		852235	0					
ANR	852327	Callee	pf -> DeleteSecurityContext		852235	0					
ANR	852328	PtrMemberAccess	pf -> DeleteSecurityContext		852235	0					
ANR	852329	Identifier	pf		852235	0					
ANR	852330	Identifier	DeleteSecurityContext		852235	1					
ANR	852331	ArgumentList	& theCtx		852235	1					
ANR	852332	Argument	& theCtx		852235	0					
ANR	852333	UnaryOperationExpression	& theCtx		852235	0					
ANR	852334	UnaryOperator	&		852235	0					
ANR	852335	Identifier	theCtx		852235	1					
ANR	852336	ExpressionStatement	theCtx . dwLower = 0L	495:1:15967:15986	852235	6	True				
ANR	852337	AssignmentExpression	theCtx . dwLower = 0L		852235	0		=			
ANR	852338	MemberAccess	theCtx . dwLower		852235	0					
ANR	852339	Identifier	theCtx		852235	0					
ANR	852340	Identifier	dwLower		852235	1					
ANR	852341	PrimaryExpression	0L		852235	1					
ANR	852342	ExpressionStatement	theCtx . dwUpper = 0L	496:1:15989:16008	852235	7	True				
ANR	852343	AssignmentExpression	theCtx . dwUpper = 0L		852235	0		=			
ANR	852344	MemberAccess	theCtx . dwUpper		852235	0					
ANR	852345	Identifier	theCtx		852235	0					
ANR	852346	Identifier	dwUpper		852235	1					
ANR	852347	PrimaryExpression	0L		852235	1					
ANR	852348	IfStatement	if ( mySock_ -> isClient ( ) )		852235	8					
ANR	852349	Condition	mySock_ -> isClient ( )	499:6:16018:16036	852235	0	True				
ANR	852350	CallExpression	mySock_ -> isClient ( )		852235	0					
ANR	852351	Callee	mySock_ -> isClient		852235	0					
ANR	852352	PtrMemberAccess	mySock_ -> isClient		852235	0					
ANR	852353	Identifier	mySock_		852235	0					
ANR	852354	Identifier	isClient		852235	1					
ANR	852355	ArgumentList			852235	1					
ANR	852356	CompoundStatement		30:28:535:535	852235	1					
ANR	852357	ExpressionStatement	"ret_value = sspi_client_auth ( cred , theCtx , NULL )"	502:2:16073:16119	852235	0	True				
ANR	852358	AssignmentExpression	"ret_value = sspi_client_auth ( cred , theCtx , NULL )"		852235	0		=			
ANR	852359	Identifier	ret_value		852235	0					
ANR	852360	CallExpression	"sspi_client_auth ( cred , theCtx , NULL )"		852235	1					
ANR	852361	Callee	sspi_client_auth		852235	0					
ANR	852362	Identifier	sspi_client_auth		852235	0					
ANR	852363	ArgumentList	cred		852235	1					
ANR	852364	Argument	cred		852235	0					
ANR	852365	Identifier	cred		852235	0					
ANR	852366	Argument	theCtx		852235	1					
ANR	852367	Identifier	theCtx		852235	0					
ANR	852368	Argument	NULL		852235	2					
ANR	852369	Identifier	NULL		852235	0					
ANR	852370	ElseStatement	else		852235	0					
ANR	852371	CompoundStatement		35:6:625:625	852235	0					
ANR	852372	ExpressionStatement	"ret_value = sspi_server_auth ( cred , theCtx )"	507:2:16161:16202	852235	0	True				
ANR	852373	AssignmentExpression	"ret_value = sspi_server_auth ( cred , theCtx )"		852235	0		=			
ANR	852374	Identifier	ret_value		852235	0					
ANR	852375	CallExpression	"sspi_server_auth ( cred , theCtx )"		852235	1					
ANR	852376	Callee	sspi_server_auth		852235	0					
ANR	852377	Identifier	sspi_server_auth		852235	0					
ANR	852378	ArgumentList	cred		852235	1					
ANR	852379	Argument	cred		852235	0					
ANR	852380	Identifier	cred		852235	0					
ANR	852381	Argument	theCtx		852235	1					
ANR	852382	Identifier	theCtx		852235	0					
ANR	852383	IfStatement	if ( cred . dwLower != 0L || cred . dwUpper != 0L )		852235	9					
ANR	852384	Condition	cred . dwLower != 0L || cred . dwUpper != 0L	511:6:16227:16266	852235	0	True				
ANR	852385	OrExpression	cred . dwLower != 0L || cred . dwUpper != 0L		852235	0		||			
ANR	852386	EqualityExpression	cred . dwLower != 0L		852235	0		!=			
ANR	852387	MemberAccess	cred . dwLower		852235	0					
ANR	852388	Identifier	cred		852235	0					
ANR	852389	Identifier	dwLower		852235	1					
ANR	852390	PrimaryExpression	0L		852235	1					
ANR	852391	EqualityExpression	cred . dwUpper != 0L		852235	1		!=			
ANR	852392	MemberAccess	cred . dwUpper		852235	0					
ANR	852393	Identifier	cred		852235	0					
ANR	852394	Identifier	dwUpper		852235	1					
ANR	852395	PrimaryExpression	0L		852235	1					
ANR	852396	ExpressionStatement	( pf -> FreeCredentialHandle ) ( & cred )	512:2:16272:16307	852235	1	True				
ANR	852397	CallExpression	( pf -> FreeCredentialHandle ) ( & cred )		852235	0					
ANR	852398	Callee	pf -> FreeCredentialHandle		852235	0					
ANR	852399	PtrMemberAccess	pf -> FreeCredentialHandle		852235	0					
ANR	852400	Identifier	pf		852235	0					
ANR	852401	Identifier	FreeCredentialHandle		852235	1					
ANR	852402	ArgumentList	& cred		852235	1					
ANR	852403	Argument	& cred		852235	0					
ANR	852404	UnaryOperationExpression	& cred		852235	0					
ANR	852405	UnaryOperator	&		852235	0					
ANR	852406	Identifier	cred		852235	1					
ANR	852407	IfStatement	if ( ret_value == 0 )		852235	10					
ANR	852408	Condition	ret_value == 0	517:6:16445:16458	852235	0	True				
ANR	852409	EqualityExpression	ret_value == 0		852235	0		==			
ANR	852410	Identifier	ret_value		852235	0					
ANR	852411	PrimaryExpression	0		852235	1					
ANR	852412	CompoundStatement		48:23:957:957	852235	1					
ANR	852413	IfStatement	if ( theCtx . dwLower != 0L || theCtx . dwUpper != 0L )		852235	0					
ANR	852414	Condition	theCtx . dwLower != 0L || theCtx . dwUpper != 0L	520:7:16563:16606	852235	0	True				
ANR	852415	OrExpression	theCtx . dwLower != 0L || theCtx . dwUpper != 0L		852235	0		||			
ANR	852416	EqualityExpression	theCtx . dwLower != 0L		852235	0		!=			
ANR	852417	MemberAccess	theCtx . dwLower		852235	0					
ANR	852418	Identifier	theCtx		852235	0					
ANR	852419	Identifier	dwLower		852235	1					
ANR	852420	PrimaryExpression	0L		852235	1					
ANR	852421	EqualityExpression	theCtx . dwUpper != 0L		852235	1		!=			
ANR	852422	MemberAccess	theCtx . dwUpper		852235	0					
ANR	852423	Identifier	theCtx		852235	0					
ANR	852424	Identifier	dwUpper		852235	1					
ANR	852425	PrimaryExpression	0L		852235	1					
ANR	852426	ExpressionStatement	( pf -> DeleteSecurityContext ) ( & theCtx )	521:3:16613:16651	852235	1	True				
ANR	852427	CallExpression	( pf -> DeleteSecurityContext ) ( & theCtx )		852235	0					
ANR	852428	Callee	pf -> DeleteSecurityContext		852235	0					
ANR	852429	PtrMemberAccess	pf -> DeleteSecurityContext		852235	0					
ANR	852430	Identifier	pf		852235	0					
ANR	852431	Identifier	DeleteSecurityContext		852235	1					
ANR	852432	ArgumentList	& theCtx		852235	1					
ANR	852433	Argument	& theCtx		852235	0					
ANR	852434	UnaryOperationExpression	& theCtx		852235	0					
ANR	852435	UnaryOperator	&		852235	0					
ANR	852436	Identifier	theCtx		852235	1					
ANR	852437	ExpressionStatement	theCtx . dwLower = 0L	522:2:16655:16674	852235	1	True				
ANR	852438	AssignmentExpression	theCtx . dwLower = 0L		852235	0		=			
ANR	852439	MemberAccess	theCtx . dwLower		852235	0					
ANR	852440	Identifier	theCtx		852235	0					
ANR	852441	Identifier	dwLower		852235	1					
ANR	852442	PrimaryExpression	0L		852235	1					
ANR	852443	ExpressionStatement	theCtx . dwUpper = 0L	523:2:16678:16697	852235	2	True				
ANR	852444	AssignmentExpression	theCtx . dwUpper = 0L		852235	0		=			
ANR	852445	MemberAccess	theCtx . dwUpper		852235	0					
ANR	852446	Identifier	theCtx		852235	0					
ANR	852447	Identifier	dwUpper		852235	1					
ANR	852448	PrimaryExpression	0L		852235	1					
ANR	852449	ReturnStatement	return ret_value ;	526:1:16704:16720	852235	11	True				
ANR	852450	Identifier	ret_value		852235	0					
ANR	852451	ReturnType	int		852235	1					
ANR	852452	Identifier	Condor_Auth_SSPI :: authenticate		852235	2					
ANR	852453	ParameterList	"const char * remoteHost , CondorError * errstack"		852235	3					
ANR	852454	Parameter	const char * remoteHost	469:31:15456:15478	852235	0	True				
ANR	852455	ParameterType	const char *		852235	0					
ANR	852456	Identifier	remoteHost		852235	1					
ANR	852457	Parameter	CondorError * errstack	469:56:15481:15501	852235	1	True				
ANR	852458	ParameterType	CondorError *		852235	0					
ANR	852459	Identifier	errstack		852235	1					
ANR	852460	CFGEntryNode	ENTRY		852235		True				
ANR	852461	CFGExitNode	EXIT		852235		True				
ANR	852462	Symbol	cred		852235						
ANR	852463	Symbol	cred . dwUpper		852235						
ANR	852464	Symbol	& cred		852235						
ANR	852465	Symbol	NULL		852235						
ANR	852466	Symbol	remoteHost		852235						
ANR	852467	Symbol	pSFT		852235						
ANR	852468	Symbol	cred . dwLower		852235						
ANR	852469	Symbol	theCtx . dwUpper		852235						
ANR	852470	Symbol	mySock_		852235						
ANR	852471	Symbol	theCtx		852235						
ANR	852472	Symbol	theCtx . dwLower		852235						
ANR	852473	Symbol	mySock_ -> isClient		852235						
ANR	852474	Symbol	sspi_client_auth		852235						
ANR	852475	Symbol	errstack		852235						
ANR	852476	Symbol	_condor_hSecDll		852235						
ANR	852477	Symbol	sspi_server_auth		852235						
ANR	852478	Symbol	pf		852235						
ANR	852479	Symbol	ret_value		852235						
ANR	852480	Symbol	& theCtx		852235						
ANR	852481	Symbol	* mySock_		852235						
ANR	852482	Function	Condor_Auth_SSPI :: isValid	529:0:16725:16866							
ANR	852483	FunctionDef	Condor_Auth_SSPI :: isValid ()		852482	0					
ANR	852484	CompoundStatement		530:0:16765:16866	852482	0					
ANR	852485	IfStatement	if ( theCtx . dwLower != 0L || theCtx . dwUpper != 0L )		852482	0					
ANR	852486	Condition	theCtx . dwLower != 0L || theCtx . dwUpper != 0L	531:6:16773:16816	852482	0	True				
ANR	852487	OrExpression	theCtx . dwLower != 0L || theCtx . dwUpper != 0L		852482	0		||			
ANR	852488	EqualityExpression	theCtx . dwLower != 0L		852482	0		!=			
ANR	852489	MemberAccess	theCtx . dwLower		852482	0					
ANR	852490	Identifier	theCtx		852482	0					
ANR	852491	Identifier	dwLower		852482	1					
ANR	852492	PrimaryExpression	0L		852482	1					
ANR	852493	EqualityExpression	theCtx . dwUpper != 0L		852482	1		!=			
ANR	852494	MemberAccess	theCtx . dwUpper		852482	0					
ANR	852495	Identifier	theCtx		852482	0					
ANR	852496	Identifier	dwUpper		852482	1					
ANR	852497	PrimaryExpression	0L		852482	1					
ANR	852498	CompoundStatement		2:53:54:54	852482	1					
ANR	852499	ReturnStatement	return TRUE ;	532:2:16824:16835	852482	0	True				
ANR	852500	Identifier	TRUE		852482	0					
ANR	852501	ElseStatement	else		852482	0					
ANR	852502	CompoundStatement		4:8:79:79	852482	0					
ANR	852503	ReturnStatement	return FALSE ;	534:2:16849:16861	852482	0	True				
ANR	852504	Identifier	FALSE		852482	0					
ANR	852505	ReturnType	int		852482	1					
ANR	852506	Identifier	Condor_Auth_SSPI :: isValid		852482	2					
ANR	852507	ParameterList			852482	3					
ANR	852508	CFGEntryNode	ENTRY		852482		True				
ANR	852509	CFGExitNode	EXIT		852482		True				
ANR	852510	Symbol	theCtx . dwUpper		852482						
ANR	852511	Symbol	TRUE		852482						
ANR	852512	Symbol	FALSE		852482						
ANR	852513	Symbol	theCtx		852482						
ANR	852514	Symbol	theCtx . dwLower		852482						
