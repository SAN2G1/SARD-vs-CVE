command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1970621	File	data/converged/CVE-2011-4930_htcondor/passwd_cache.unix.cpp								
ANR	1970622	Function	compute_user_hash	33:0:1121:1198							
ANR	1970623	FunctionDef	compute_user_hash (const MyString & key)		1970622	0					
ANR	1970624	CompoundStatement		33:52:1173:1198	1970622	0					
ANR	1970625	ReturnStatement	return key . Hash ( ) ;	34:4:1179:1196	1970622	0	True				
ANR	1970626	CallExpression	key . Hash ( )		1970622	0					
ANR	1970627	Callee	key . Hash		1970622	0					
ANR	1970628	MemberAccess	key . Hash		1970622	0					
ANR	1970629	Identifier	key		1970622	0					
ANR	1970630	Identifier	Hash		1970622	1					
ANR	1970631	ArgumentList			1970622	1					
ANR	1970632	ReturnType	unsigned int		1970622	1					
ANR	1970633	Identifier	compute_user_hash		1970622	2					
ANR	1970634	ParameterList	const MyString & key		1970622	3					
ANR	1970635	Parameter	const MyString & key	33:31:1152:1170	1970622	0	True				
ANR	1970636	ParameterType	const MyString &		1970622	0					
ANR	1970637	Identifier	key		1970622	1					
ANR	1970638	CFGEntryNode	ENTRY		1970622		True				
ANR	1970639	CFGExitNode	EXIT		1970622		True				
ANR	1970640	Symbol	key . Hash		1970622						
ANR	1970641	Symbol	key		1970622						
ANR	1970642	Function	passwd_cache :: passwd_cache	37:0:1202:1713							
ANR	1970643	FunctionDef	passwd_cache :: passwd_cache ()		1970642	0					
ANR	1970644	CompoundStatement		37:29:1231:1713	1970642	0					
ANR	1970645	ExpressionStatement	"uid_table = new UidHashTable ( 10 , compute_user_hash , updateDuplicateKeys )"	39:1:1235:1307	1970642	0	True				
ANR	1970646	AssignmentExpression	"uid_table = new UidHashTable ( 10 , compute_user_hash , updateDuplicateKeys )"		1970642	0		=			
ANR	1970647	Identifier	uid_table		1970642	0					
ANR	1970648	Expression	"10 , compute_user_hash , updateDuplicateKeys"		1970642	1					
ANR	1970649	PrimaryExpression	10		1970642	0					
ANR	1970650	Expression	"compute_user_hash , updateDuplicateKeys"		1970642	1					
ANR	1970651	Identifier	compute_user_hash		1970642	0					
ANR	1970652	Identifier	updateDuplicateKeys		1970642	1					
ANR	1970653	ExpressionStatement	"group_table = new GroupHashTable ( 10 , compute_user_hash , updateDuplicateKeys )"	40:1:1310:1389	1970642	1	True				
ANR	1970654	AssignmentExpression	"group_table = new GroupHashTable ( 10 , compute_user_hash , updateDuplicateKeys )"		1970642	0		=			
ANR	1970655	Identifier	group_table		1970642	0					
ANR	1970656	Expression	"10 , compute_user_hash , updateDuplicateKeys"		1970642	1					
ANR	1970657	PrimaryExpression	10		1970642	0					
ANR	1970658	Expression	"compute_user_hash , updateDuplicateKeys"		1970642	1					
ANR	1970659	Identifier	compute_user_hash		1970642	0					
ANR	1970660	Identifier	updateDuplicateKeys		1970642	1					
ANR	1970661	IdentifierDeclStatement	int default_lifetime = 300 + get_random_int ( ) % 60 ;	45:1:1570:1620	1970642	2	True				
ANR	1970662	IdentifierDecl	default_lifetime = 300 + get_random_int ( ) % 60		1970642	0					
ANR	1970663	IdentifierDeclType	int		1970642	0					
ANR	1970664	Identifier	default_lifetime		1970642	1					
ANR	1970665	AssignmentExpression	default_lifetime = 300 + get_random_int ( ) % 60		1970642	2		=			
ANR	1970666	Identifier	default_lifetime		1970642	0					
ANR	1970667	AdditiveExpression	300 + get_random_int ( ) % 60		1970642	1		+			
ANR	1970668	PrimaryExpression	300		1970642	0					
ANR	1970669	MultiplicativeExpression	get_random_int ( ) % 60		1970642	1		%			
ANR	1970670	CallExpression	get_random_int ( )		1970642	0					
ANR	1970671	Callee	get_random_int		1970642	0					
ANR	1970672	Identifier	get_random_int		1970642	0					
ANR	1970673	ArgumentList			1970642	1					
ANR	1970674	PrimaryExpression	60		1970642	1					
ANR	1970675	ExpressionStatement	"Entry_lifetime = param_integer ( ""PASSWD_CACHE_REFRESH"" , default_lifetime )"	46:1:1623:1696	1970642	3	True				
ANR	1970676	AssignmentExpression	"Entry_lifetime = param_integer ( ""PASSWD_CACHE_REFRESH"" , default_lifetime )"		1970642	0		=			
ANR	1970677	Identifier	Entry_lifetime		1970642	0					
ANR	1970678	CallExpression	"param_integer ( ""PASSWD_CACHE_REFRESH"" , default_lifetime )"		1970642	1					
ANR	1970679	Callee	param_integer		1970642	0					
ANR	1970680	Identifier	param_integer		1970642	0					
ANR	1970681	ArgumentList	"""PASSWD_CACHE_REFRESH"""		1970642	1					
ANR	1970682	Argument	"""PASSWD_CACHE_REFRESH"""		1970642	0					
ANR	1970683	PrimaryExpression	"""PASSWD_CACHE_REFRESH"""		1970642	0					
ANR	1970684	Argument	default_lifetime		1970642	1					
ANR	1970685	Identifier	default_lifetime		1970642	0					
ANR	1970686	ExpressionStatement	loadConfig ( )	47:1:1699:1711	1970642	4	True				
ANR	1970687	CallExpression	loadConfig ( )		1970642	0					
ANR	1970688	Callee	loadConfig		1970642	0					
ANR	1970689	Identifier	loadConfig		1970642	0					
ANR	1970690	ArgumentList			1970642	1					
ANR	1970691	Identifier	passwd_cache :: passwd_cache		1970642	1					
ANR	1970692	ParameterList			1970642	2					
ANR	1970693	CFGEntryNode	ENTRY		1970642		True				
ANR	1970694	CFGExitNode	EXIT		1970642		True				
ANR	1970695	Symbol	Entry_lifetime		1970642						
ANR	1970696	Symbol	compute_user_hash		1970642						
ANR	1970697	Symbol	uid_table		1970642						
ANR	1970698	Symbol	get_random_int		1970642						
ANR	1970699	Symbol	group_table		1970642						
ANR	1970700	Symbol	param_integer		1970642						
ANR	1970701	Symbol	updateDuplicateKeys		1970642						
ANR	1970702	Symbol	default_lifetime		1970642						
ANR	1970703	Function	passwd_cache :: reset	49:0:1715:2094							
ANR	1970704	FunctionDef	passwd_cache :: reset ()		1970703	0					
ANR	1970705	CompoundStatement		50:22:1742:2094	1970703	0					
ANR	1970706	IdentifierDeclStatement	group_entry * gent ;	52:1:1746:1763	1970703	0	True				
ANR	1970707	IdentifierDecl	* gent		1970703	0					
ANR	1970708	IdentifierDeclType	group_entry *		1970703	0					
ANR	1970709	Identifier	gent		1970703	1					
ANR	1970710	IdentifierDeclStatement	uid_entry * uent ;	53:1:1766:1781	1970703	1	True				
ANR	1970711	IdentifierDecl	* uent		1970703	0					
ANR	1970712	IdentifierDeclType	uid_entry *		1970703	0					
ANR	1970713	Identifier	uent		1970703	1					
ANR	1970714	IdentifierDeclStatement	MyString index ;	54:1:1784:1798	1970703	2	True				
ANR	1970715	IdentifierDecl	index		1970703	0					
ANR	1970716	IdentifierDeclType	MyString		1970703	0					
ANR	1970717	Identifier	index		1970703	1					
ANR	1970718	ExpressionStatement	group_table -> startIterations ( )	56:1:1802:1832	1970703	3	True				
ANR	1970719	CallExpression	group_table -> startIterations ( )		1970703	0					
ANR	1970720	Callee	group_table -> startIterations		1970703	0					
ANR	1970721	PtrMemberAccess	group_table -> startIterations		1970703	0					
ANR	1970722	Identifier	group_table		1970703	0					
ANR	1970723	Identifier	startIterations		1970703	1					
ANR	1970724	ArgumentList			1970703	1					
ANR	1970725	WhileStatement	"while ( group_table -> iterate ( index , gent ) )"		1970703	4					
ANR	1970726	Condition	"group_table -> iterate ( index , gent )"	57:9:1843:1875	1970703	0	True				
ANR	1970727	CallExpression	"group_table -> iterate ( index , gent )"		1970703	0					
ANR	1970728	Callee	group_table -> iterate		1970703	0					
ANR	1970729	PtrMemberAccess	group_table -> iterate		1970703	0					
ANR	1970730	Identifier	group_table		1970703	0					
ANR	1970731	Identifier	iterate		1970703	1					
ANR	1970732	ArgumentList	index		1970703	1					
ANR	1970733	Argument	index		1970703	0					
ANR	1970734	Identifier	index		1970703	0					
ANR	1970735	Argument	gent		1970703	1					
ANR	1970736	Identifier	gent		1970703	0					
ANR	1970737	CompoundStatement		8:45:136:136	1970703	1					
ANR	1970738	Statement	delete	58:2:1883:1888	1970703	0	True				
ANR	1970739	Statement	[	58:8:1889:1889	1970703	1	True				
ANR	1970740	Statement	]	58:9:1890:1890	1970703	2	True				
ANR	1970741	ExpressionStatement	gent -> gidlist	58:11:1892:1905	1970703	3	True				
ANR	1970742	PtrMemberAccess	gent -> gidlist		1970703	0					
ANR	1970743	Identifier	gent		1970703	0					
ANR	1970744	Identifier	gidlist		1970703	1					
ANR	1970745	Statement	delete	59:2:1909:1914	1970703	4	True				
ANR	1970746	ExpressionStatement	gent	59:9:1916:1920	1970703	5	True				
ANR	1970747	Identifier	gent		1970703	0					
ANR	1970748	ExpressionStatement	group_table -> remove ( index )	60:2:1924:1950	1970703	6	True				
ANR	1970749	CallExpression	group_table -> remove ( index )		1970703	0					
ANR	1970750	Callee	group_table -> remove		1970703	0					
ANR	1970751	PtrMemberAccess	group_table -> remove		1970703	0					
ANR	1970752	Identifier	group_table		1970703	0					
ANR	1970753	Identifier	remove		1970703	1					
ANR	1970754	ArgumentList	index		1970703	1					
ANR	1970755	Argument	index		1970703	0					
ANR	1970756	Identifier	index		1970703	0					
ANR	1970757	ExpressionStatement	uid_table -> startIterations ( )	63:1:1957:1985	1970703	5	True				
ANR	1970758	CallExpression	uid_table -> startIterations ( )		1970703	0					
ANR	1970759	Callee	uid_table -> startIterations		1970703	0					
ANR	1970760	PtrMemberAccess	uid_table -> startIterations		1970703	0					
ANR	1970761	Identifier	uid_table		1970703	0					
ANR	1970762	Identifier	startIterations		1970703	1					
ANR	1970763	ArgumentList			1970703	1					
ANR	1970764	WhileStatement	"while ( uid_table -> iterate ( index , uent ) )"		1970703	6					
ANR	1970765	Condition	"uid_table -> iterate ( index , uent )"	64:9:1996:2026	1970703	0	True				
ANR	1970766	CallExpression	"uid_table -> iterate ( index , uent )"		1970703	0					
ANR	1970767	Callee	uid_table -> iterate		1970703	0					
ANR	1970768	PtrMemberAccess	uid_table -> iterate		1970703	0					
ANR	1970769	Identifier	uid_table		1970703	0					
ANR	1970770	Identifier	iterate		1970703	1					
ANR	1970771	ArgumentList	index		1970703	1					
ANR	1970772	Argument	index		1970703	0					
ANR	1970773	Identifier	index		1970703	0					
ANR	1970774	Argument	uent		1970703	1					
ANR	1970775	Identifier	uent		1970703	0					
ANR	1970776	CompoundStatement		15:43:287:287	1970703	1					
ANR	1970777	Statement	delete	65:2:2034:2039	1970703	0	True				
ANR	1970778	ExpressionStatement	uent	65:9:2041:2045	1970703	1	True				
ANR	1970779	Identifier	uent		1970703	0					
ANR	1970780	ExpressionStatement	uid_table -> remove ( index )	66:2:2049:2073	1970703	2	True				
ANR	1970781	CallExpression	uid_table -> remove ( index )		1970703	0					
ANR	1970782	Callee	uid_table -> remove		1970703	0					
ANR	1970783	PtrMemberAccess	uid_table -> remove		1970703	0					
ANR	1970784	Identifier	uid_table		1970703	0					
ANR	1970785	Identifier	remove		1970703	1					
ANR	1970786	ArgumentList	index		1970703	1					
ANR	1970787	Argument	index		1970703	0					
ANR	1970788	Identifier	index		1970703	0					
ANR	1970789	ExpressionStatement	loadConfig ( )	69:1:2080:2092	1970703	7	True				
ANR	1970790	CallExpression	loadConfig ( )		1970703	0					
ANR	1970791	Callee	loadConfig		1970703	0					
ANR	1970792	Identifier	loadConfig		1970703	0					
ANR	1970793	ArgumentList			1970703	1					
ANR	1970794	ReturnType	void		1970703	1					
ANR	1970795	Identifier	passwd_cache :: reset		1970703	2					
ANR	1970796	ParameterList			1970703	3					
ANR	1970797	CFGEntryNode	ENTRY		1970703		True				
ANR	1970798	CFGExitNode	EXIT		1970703		True				
ANR	1970799	Symbol	uent		1970703						
ANR	1970800	Symbol	* group_table		1970703						
ANR	1970801	Symbol	group_table -> iterate		1970703						
ANR	1970802	Symbol	uid_table		1970703						
ANR	1970803	Symbol	gent		1970703						
ANR	1970804	Symbol	uid_table -> iterate		1970703						
ANR	1970805	Symbol	* uid_table		1970703						
ANR	1970806	Symbol	index		1970703						
ANR	1970807	Symbol	group_table		1970703						
ANR	1970808	Function	parseUid	72:0:2097:2265							
ANR	1970809	FunctionDef	"parseUid (char const * str , uid_t * uid)"		1970808	0					
ANR	1970810	CompoundStatement		73:37:2139:2265	1970808	0					
ANR	1970811	ExpressionStatement	ASSERT ( uid )	74:1:2142:2155	1970808	0	True				
ANR	1970812	CallExpression	ASSERT ( uid )		1970808	0					
ANR	1970813	Callee	ASSERT		1970808	0					
ANR	1970814	Identifier	ASSERT		1970808	0					
ANR	1970815	ArgumentList	uid		1970808	1					
ANR	1970816	Argument	uid		1970808	0					
ANR	1970817	Identifier	uid		1970808	0					
ANR	1970818	IdentifierDeclStatement	char * endstr ;	75:1:2158:2170	1970808	1	True				
ANR	1970819	IdentifierDecl	* endstr		1970808	0					
ANR	1970820	IdentifierDeclType	char *		1970808	0					
ANR	1970821	Identifier	endstr		1970808	1					
ANR	1970822	ExpressionStatement	"* uid = strtol ( str , & endstr , 10 )"	76:1:2173:2202	1970808	2	True				
ANR	1970823	AssignmentExpression	"* uid = strtol ( str , & endstr , 10 )"		1970808	0		=			
ANR	1970824	UnaryOperationExpression	* uid		1970808	0					
ANR	1970825	UnaryOperator	*		1970808	0					
ANR	1970826	Identifier	uid		1970808	1					
ANR	1970827	CallExpression	"strtol ( str , & endstr , 10 )"		1970808	1					
ANR	1970828	Callee	strtol		1970808	0					
ANR	1970829	Identifier	strtol		1970808	0					
ANR	1970830	ArgumentList	str		1970808	1					
ANR	1970831	Argument	str		1970808	0					
ANR	1970832	Identifier	str		1970808	0					
ANR	1970833	Argument	& endstr		1970808	1					
ANR	1970834	UnaryOperationExpression	& endstr		1970808	0					
ANR	1970835	UnaryOperator	&		1970808	0					
ANR	1970836	Identifier	endstr		1970808	1					
ANR	1970837	Argument	10		1970808	2					
ANR	1970838	PrimaryExpression	10		1970808	0					
ANR	1970839	IfStatement	if ( ! endstr || * endstr )		1970808	3					
ANR	1970840	Condition	! endstr || * endstr	77:5:2209:2226	1970808	0	True				
ANR	1970841	OrExpression	! endstr || * endstr		1970808	0		||			
ANR	1970842	UnaryOperationExpression	! endstr		1970808	0					
ANR	1970843	UnaryOperator	!		1970808	0					
ANR	1970844	Identifier	endstr		1970808	1					
ANR	1970845	UnaryOperationExpression	* endstr		1970808	1					
ANR	1970846	UnaryOperator	*		1970808	0					
ANR	1970847	Identifier	endstr		1970808	1					
ANR	1970848	CompoundStatement		5:26:90:90	1970808	1					
ANR	1970849	ReturnStatement	return false ;	78:2:2234:2246	1970808	0	True				
ANR	1970850	Identifier	false		1970808	0					
ANR	1970851	ReturnStatement	return true ;	80:1:2252:2263	1970808	4	True				
ANR	1970852	Identifier	true		1970808	0					
ANR	1970853	ReturnType	bool		1970808	1					
ANR	1970854	Identifier	parseUid		1970808	2					
ANR	1970855	ParameterList	"char const * str , uid_t * uid"		1970808	3					
ANR	1970856	Parameter	char const * str	73:9:2111:2125	1970808	0	True				
ANR	1970857	ParameterType	char const *		1970808	0					
ANR	1970858	Identifier	str		1970808	1					
ANR	1970859	Parameter	uid_t * uid	73:25:2127:2136	1970808	1	True				
ANR	1970860	ParameterType	uid_t *		1970808	0					
ANR	1970861	Identifier	uid		1970808	1					
ANR	1970862	CFGEntryNode	ENTRY		1970808		True				
ANR	1970863	CFGExitNode	EXIT		1970808		True				
ANR	1970864	Symbol	str		1970808						
ANR	1970865	Symbol	endstr		1970808						
ANR	1970866	Symbol	uid		1970808						
ANR	1970867	Symbol	* endstr		1970808						
ANR	1970868	Symbol	strtol		1970808						
ANR	1970869	Symbol	false		1970808						
ANR	1970870	Symbol	true		1970808						
ANR	1970871	Symbol	* uid		1970808						
ANR	1970872	Symbol	& endstr		1970808						
ANR	1970873	Function	parseGid	83:0:2268:2436							
ANR	1970874	FunctionDef	"parseGid (char const * str , gid_t * gid)"		1970873	0					
ANR	1970875	CompoundStatement		84:37:2310:2436	1970873	0					
ANR	1970876	ExpressionStatement	ASSERT ( gid )	85:1:2313:2326	1970873	0	True				
ANR	1970877	CallExpression	ASSERT ( gid )		1970873	0					
ANR	1970878	Callee	ASSERT		1970873	0					
ANR	1970879	Identifier	ASSERT		1970873	0					
ANR	1970880	ArgumentList	gid		1970873	1					
ANR	1970881	Argument	gid		1970873	0					
ANR	1970882	Identifier	gid		1970873	0					
ANR	1970883	IdentifierDeclStatement	char * endstr ;	86:1:2329:2341	1970873	1	True				
ANR	1970884	IdentifierDecl	* endstr		1970873	0					
ANR	1970885	IdentifierDeclType	char *		1970873	0					
ANR	1970886	Identifier	endstr		1970873	1					
ANR	1970887	ExpressionStatement	"* gid = strtol ( str , & endstr , 10 )"	87:1:2344:2373	1970873	2	True				
ANR	1970888	AssignmentExpression	"* gid = strtol ( str , & endstr , 10 )"		1970873	0		=			
ANR	1970889	UnaryOperationExpression	* gid		1970873	0					
ANR	1970890	UnaryOperator	*		1970873	0					
ANR	1970891	Identifier	gid		1970873	1					
ANR	1970892	CallExpression	"strtol ( str , & endstr , 10 )"		1970873	1					
ANR	1970893	Callee	strtol		1970873	0					
ANR	1970894	Identifier	strtol		1970873	0					
ANR	1970895	ArgumentList	str		1970873	1					
ANR	1970896	Argument	str		1970873	0					
ANR	1970897	Identifier	str		1970873	0					
ANR	1970898	Argument	& endstr		1970873	1					
ANR	1970899	UnaryOperationExpression	& endstr		1970873	0					
ANR	1970900	UnaryOperator	&		1970873	0					
ANR	1970901	Identifier	endstr		1970873	1					
ANR	1970902	Argument	10		1970873	2					
ANR	1970903	PrimaryExpression	10		1970873	0					
ANR	1970904	IfStatement	if ( ! endstr || * endstr )		1970873	3					
ANR	1970905	Condition	! endstr || * endstr	88:5:2380:2397	1970873	0	True				
ANR	1970906	OrExpression	! endstr || * endstr		1970873	0		||			
ANR	1970907	UnaryOperationExpression	! endstr		1970873	0					
ANR	1970908	UnaryOperator	!		1970873	0					
ANR	1970909	Identifier	endstr		1970873	1					
ANR	1970910	UnaryOperationExpression	* endstr		1970873	1					
ANR	1970911	UnaryOperator	*		1970873	0					
ANR	1970912	Identifier	endstr		1970873	1					
ANR	1970913	CompoundStatement		5:26:90:90	1970873	1					
ANR	1970914	ReturnStatement	return false ;	89:2:2405:2417	1970873	0	True				
ANR	1970915	Identifier	false		1970873	0					
ANR	1970916	ReturnStatement	return true ;	91:1:2423:2434	1970873	4	True				
ANR	1970917	Identifier	true		1970873	0					
ANR	1970918	ReturnType	bool		1970873	1					
ANR	1970919	Identifier	parseGid		1970873	2					
ANR	1970920	ParameterList	"char const * str , gid_t * gid"		1970873	3					
ANR	1970921	Parameter	char const * str	84:9:2282:2296	1970873	0	True				
ANR	1970922	ParameterType	char const *		1970873	0					
ANR	1970923	Identifier	str		1970873	1					
ANR	1970924	Parameter	gid_t * gid	84:25:2298:2307	1970873	1	True				
ANR	1970925	ParameterType	gid_t *		1970873	0					
ANR	1970926	Identifier	gid		1970873	1					
ANR	1970927	CFGEntryNode	ENTRY		1970873		True				
ANR	1970928	CFGExitNode	EXIT		1970873		True				
ANR	1970929	Symbol	str		1970873						
ANR	1970930	Symbol	endstr		1970873						
ANR	1970931	Symbol	gid		1970873						
ANR	1970932	Symbol	* gid		1970873						
ANR	1970933	Symbol	* endstr		1970873						
ANR	1970934	Symbol	strtol		1970873						
ANR	1970935	Symbol	false		1970873						
ANR	1970936	Symbol	true		1970873						
ANR	1970937	Symbol	& endstr		1970873						
ANR	1970938	Function	passwd_cache :: getUseridMap	94:0:2439:3210							
ANR	1970939	FunctionDef	passwd_cache :: getUseridMap (MyString & usermap)		1970938	0					
ANR	1970940	CompoundStatement		96:0:2490:3210	1970938	0					
ANR	1970941	IdentifierDeclStatement	uid_entry * uent ;	98:1:2558:2573	1970938	0	True				
ANR	1970942	IdentifierDecl	* uent		1970938	0					
ANR	1970943	IdentifierDeclType	uid_entry *		1970938	0					
ANR	1970944	Identifier	uent		1970938	1					
ANR	1970945	IdentifierDeclStatement	group_entry * gent ;	99:1:2576:2593	1970938	1	True				
ANR	1970946	IdentifierDecl	* gent		1970938	0					
ANR	1970947	IdentifierDeclType	group_entry *		1970938	0					
ANR	1970948	Identifier	gent		1970938	1					
ANR	1970949	IdentifierDeclStatement	MyString index ;	100:1:2596:2610	1970938	2	True				
ANR	1970950	IdentifierDecl	index		1970938	0					
ANR	1970951	IdentifierDeclType	MyString		1970938	0					
ANR	1970952	Identifier	index		1970938	1					
ANR	1970953	ExpressionStatement	uid_table -> startIterations ( )	102:1:2614:2642	1970938	3	True				
ANR	1970954	CallExpression	uid_table -> startIterations ( )		1970938	0					
ANR	1970955	Callee	uid_table -> startIterations		1970938	0					
ANR	1970956	PtrMemberAccess	uid_table -> startIterations		1970938	0					
ANR	1970957	Identifier	uid_table		1970938	0					
ANR	1970958	Identifier	startIterations		1970938	1					
ANR	1970959	ArgumentList			1970938	1					
ANR	1970960	WhileStatement	"while ( uid_table -> iterate ( index , uent ) )"		1970938	4					
ANR	1970961	Condition	"uid_table -> iterate ( index , uent )"	103:9:2653:2683	1970938	0	True				
ANR	1970962	CallExpression	"uid_table -> iterate ( index , uent )"		1970938	0					
ANR	1970963	Callee	uid_table -> iterate		1970938	0					
ANR	1970964	PtrMemberAccess	uid_table -> iterate		1970938	0					
ANR	1970965	Identifier	uid_table		1970938	0					
ANR	1970966	Identifier	iterate		1970938	1					
ANR	1970967	ArgumentList	index		1970938	1					
ANR	1970968	Argument	index		1970938	0					
ANR	1970969	Identifier	index		1970938	0					
ANR	1970970	Argument	uent		1970938	1					
ANR	1970971	Identifier	uent		1970938	0					
ANR	1970972	CompoundStatement		8:43:196:196	1970938	1					
ANR	1970973	IfStatement	if ( ! usermap . IsEmpty ( ) )		1970938	0					
ANR	1970974	Condition	! usermap . IsEmpty ( )	104:6:2695:2712	1970938	0	True				
ANR	1970975	UnaryOperationExpression	! usermap . IsEmpty ( )		1970938	0					
ANR	1970976	UnaryOperator	!		1970938	0					
ANR	1970977	CallExpression	usermap . IsEmpty ( )		1970938	1					
ANR	1970978	Callee	usermap . IsEmpty		1970938	0					
ANR	1970979	MemberAccess	usermap . IsEmpty		1970938	0					
ANR	1970980	Identifier	usermap		1970938	0					
ANR	1970981	Identifier	IsEmpty		1970938	1					
ANR	1970982	ArgumentList			1970938	1					
ANR	1970983	CompoundStatement		9:27:225:225	1970938	1					
ANR	1970984	ExpressionStatement	"usermap += "" """	105:3:2721:2735	1970938	0	True				
ANR	1970985	AssignmentExpression	"usermap += "" """		1970938	0		+=			
ANR	1970986	Identifier	usermap		1970938	0					
ANR	1970987	PrimaryExpression	""" """		1970938	1					
ANR	1970988	ExpressionStatement	"usermap . sprintf_cat ( ""%s=%ld,%ld"" , index . Value ( ) , ( long ) uent -> uid , ( long ) uent -> gid )"	107:2:2743:2822	1970938	1	True				
ANR	1970989	CallExpression	"usermap . sprintf_cat ( ""%s=%ld,%ld"" , index . Value ( ) , ( long ) uent -> uid , ( long ) uent -> gid )"		1970938	0					
ANR	1970990	Callee	usermap . sprintf_cat		1970938	0					
ANR	1970991	MemberAccess	usermap . sprintf_cat		1970938	0					
ANR	1970992	Identifier	usermap		1970938	0					
ANR	1970993	Identifier	sprintf_cat		1970938	1					
ANR	1970994	ArgumentList	"""%s=%ld,%ld"""		1970938	1					
ANR	1970995	Argument	"""%s=%ld,%ld"""		1970938	0					
ANR	1970996	PrimaryExpression	"""%s=%ld,%ld"""		1970938	0					
ANR	1970997	Argument	index . Value ( )		1970938	1					
ANR	1970998	CallExpression	index . Value ( )		1970938	0					
ANR	1970999	Callee	index . Value		1970938	0					
ANR	1971000	MemberAccess	index . Value		1970938	0					
ANR	1971001	Identifier	index		1970938	0					
ANR	1971002	Identifier	Value		1970938	1					
ANR	1971003	ArgumentList			1970938	1					
ANR	1971004	Argument	( long ) uent -> uid		1970938	2					
ANR	1971005	CastExpression	( long ) uent -> uid		1970938	0					
ANR	1971006	CastTarget	long		1970938	0					
ANR	1971007	PtrMemberAccess	uent -> uid		1970938	1					
ANR	1971008	Identifier	uent		1970938	0					
ANR	1971009	Identifier	uid		1970938	1					
ANR	1971010	Argument	( long ) uent -> gid		1970938	3					
ANR	1971011	CastExpression	( long ) uent -> gid		1970938	0					
ANR	1971012	CastTarget	long		1970938	0					
ANR	1971013	PtrMemberAccess	uent -> gid		1970938	1					
ANR	1971014	Identifier	uent		1970938	0					
ANR	1971015	Identifier	gid		1970938	1					
ANR	1971016	IfStatement	"if ( group_table -> lookup ( index , gent ) == 0 )"		1970938	2					
ANR	1971017	Condition	"group_table -> lookup ( index , gent ) == 0"	108:6:2830:2865	1970938	0	True				
ANR	1971018	EqualityExpression	"group_table -> lookup ( index , gent ) == 0"		1970938	0		==			
ANR	1971019	CallExpression	"group_table -> lookup ( index , gent )"		1970938	0					
ANR	1971020	Callee	group_table -> lookup		1970938	0					
ANR	1971021	PtrMemberAccess	group_table -> lookup		1970938	0					
ANR	1971022	Identifier	group_table		1970938	0					
ANR	1971023	Identifier	lookup		1970938	1					
ANR	1971024	ArgumentList	index		1970938	1					
ANR	1971025	Argument	index		1970938	0					
ANR	1971026	Identifier	index		1970938	0					
ANR	1971027	Argument	gent		1970938	1					
ANR	1971028	Identifier	gent		1970938	0					
ANR	1971029	PrimaryExpression	0		1970938	1					
ANR	1971030	CompoundStatement		14:3:383:393	1970938	1					
ANR	1971031	IdentifierDeclStatement	unsigned i ;	109:3:2874:2884	1970938	0	True				
ANR	1971032	IdentifierDecl	i		1970938	0					
ANR	1971033	IdentifierDeclType	unsigned		1970938	0					
ANR	1971034	Identifier	i		1970938	1					
ANR	1971035	ForStatement	for ( i = 0 ; i < gent -> gidlist_sz ; i ++ )		1970938	1					
ANR	1971036	ForInit	i = 0 ;	110:7:2893:2896	1970938	0	True				
ANR	1971037	AssignmentExpression	i = 0		1970938	0		=			
ANR	1971038	Identifier	i		1970938	0					
ANR	1971039	PrimaryExpression	0		1970938	1					
ANR	1971040	Condition	i < gent -> gidlist_sz	110:11:2897:2914	1970938	1	True				
ANR	1971041	RelationalExpression	i < gent -> gidlist_sz		1970938	0		<			
ANR	1971042	Identifier	i		1970938	0					
ANR	1971043	PtrMemberAccess	gent -> gidlist_sz		1970938	1					
ANR	1971044	Identifier	gent		1970938	0					
ANR	1971045	Identifier	gidlist_sz		1970938	1					
ANR	1971046	PostIncDecOperationExpression	i ++	110:30:2916:2918	1970938	2	True				
ANR	1971047	Identifier	i		1970938	0					
ANR	1971048	IncDec	++		1970938	1					
ANR	1971049	CompoundStatement		15:35:430:430	1970938	3					
ANR	1971050	IfStatement	if ( gent -> gidlist [ i ] == uent -> gid )		1970938	0					
ANR	1971051	Condition	gent -> gidlist [ i ] == uent -> gid	111:8:2931:2959	1970938	0	True				
ANR	1971052	EqualityExpression	gent -> gidlist [ i ] == uent -> gid		1970938	0		==			
ANR	1971053	ArrayIndexing	gent -> gidlist [ i ]		1970938	0					
ANR	1971054	PtrMemberAccess	gent -> gidlist		1970938	0					
ANR	1971055	Identifier	gent		1970938	0					
ANR	1971056	Identifier	gidlist		1970938	1					
ANR	1971057	Identifier	i		1970938	1					
ANR	1971058	PtrMemberAccess	uent -> gid		1970938	1					
ANR	1971059	Identifier	uent		1970938	0					
ANR	1971060	Identifier	gid		1970938	1					
ANR	1971061	CompoundStatement		16:40:472:472	1970938	1					
ANR	1971062	ContinueStatement	continue ;	113:5:3031:3039	1970938	0	True				
ANR	1971063	ExpressionStatement	"usermap . sprintf_cat ( "",%ld"" , ( long ) gent -> gidlist [ i ] )"	115:4:3051:3101	1970938	1	True				
ANR	1971064	CallExpression	"usermap . sprintf_cat ( "",%ld"" , ( long ) gent -> gidlist [ i ] )"		1970938	0					
ANR	1971065	Callee	usermap . sprintf_cat		1970938	0					
ANR	1971066	MemberAccess	usermap . sprintf_cat		1970938	0					
ANR	1971067	Identifier	usermap		1970938	0					
ANR	1971068	Identifier	sprintf_cat		1970938	1					
ANR	1971069	ArgumentList	""",%ld"""		1970938	1					
ANR	1971070	Argument	""",%ld"""		1970938	0					
ANR	1971071	PrimaryExpression	""",%ld"""		1970938	0					
ANR	1971072	Argument	( long ) gent -> gidlist [ i ]		1970938	1					
ANR	1971073	CastExpression	( long ) gent -> gidlist [ i ]		1970938	0					
ANR	1971074	CastTarget	long		1970938	0					
ANR	1971075	ArrayIndexing	gent -> gidlist [ i ]		1970938	1					
ANR	1971076	PtrMemberAccess	gent -> gidlist		1970938	0					
ANR	1971077	Identifier	gent		1970938	0					
ANR	1971078	Identifier	gidlist		1970938	1					
ANR	1971079	Identifier	i		1970938	1					
ANR	1971080	ElseStatement	else		1970938	0					
ANR	1971081	CompoundStatement		23:7:628:628	1970938	0					
ANR	1971082	ExpressionStatement	"usermap . sprintf_cat ( "",?"" )"	120:3:3176:3201	1970938	0	True				
ANR	1971083	CallExpression	"usermap . sprintf_cat ( "",?"" )"		1970938	0					
ANR	1971084	Callee	usermap . sprintf_cat		1970938	0					
ANR	1971085	MemberAccess	usermap . sprintf_cat		1970938	0					
ANR	1971086	Identifier	usermap		1970938	0					
ANR	1971087	Identifier	sprintf_cat		1970938	1					
ANR	1971088	ArgumentList	""",?"""		1970938	1					
ANR	1971089	Argument	""",?"""		1970938	0					
ANR	1971090	PrimaryExpression	""",?"""		1970938	0					
ANR	1971091	ReturnType	void		1970938	1					
ANR	1971092	Identifier	passwd_cache :: getUseridMap		1970938	2					
ANR	1971093	ParameterList	MyString & usermap		1970938	3					
ANR	1971094	Parameter	MyString & usermap	95:27:2471:2487	1970938	0	True				
ANR	1971095	ParameterType	MyString &		1970938	0					
ANR	1971096	Identifier	usermap		1970938	1					
ANR	1971097	CFGEntryNode	ENTRY		1970938		True				
ANR	1971098	CFGExitNode	EXIT		1970938		True				
ANR	1971099	Symbol	uent		1970938						
ANR	1971100	Symbol	gent -> gidlist_sz		1970938						
ANR	1971101	Symbol	uid_table		1970938						
ANR	1971102	Symbol	gent -> gidlist		1970938						
ANR	1971103	Symbol	* gent		1970938						
ANR	1971104	Symbol	uent -> gid		1970938						
ANR	1971105	Symbol	* * gent		1970938						
ANR	1971106	Symbol	index		1970938						
ANR	1971107	Symbol	* uent		1970938						
ANR	1971108	Symbol	i		1970938						
ANR	1971109	Symbol	usermap		1970938						
ANR	1971110	Symbol	usermap . IsEmpty		1970938						
ANR	1971111	Symbol	index . Value		1970938						
ANR	1971112	Symbol	* group_table		1970938						
ANR	1971113	Symbol	group_table -> lookup		1970938						
ANR	1971114	Symbol	uent -> uid		1970938						
ANR	1971115	Symbol	* i		1970938						
ANR	1971116	Symbol	gent		1970938						
ANR	1971117	Symbol	uid_table -> iterate		1970938						
ANR	1971118	Symbol	* uid_table		1970938						
ANR	1971119	Symbol	group_table		1970938						
ANR	1971120	Symbol	* gent -> gidlist		1970938						
ANR	1971121	Function	passwd_cache :: loadConfig	125:0:3213:5309							
ANR	1971122	FunctionDef	passwd_cache :: loadConfig ()		1971121	0					
ANR	1971123	CompoundStatement		126:27:3245:5309	1971121	0					
ANR	1971124	IdentifierDeclStatement	"char * usermap_str = param ( ""USERID_MAP"" ) ;"	128:1:3299:3338	1971121	0	True				
ANR	1971125	IdentifierDecl	"* usermap_str = param ( ""USERID_MAP"" )"		1971121	0					
ANR	1971126	IdentifierDeclType	char *		1971121	0					
ANR	1971127	Identifier	usermap_str		1971121	1					
ANR	1971128	AssignmentExpression	"* usermap_str = param ( ""USERID_MAP"" )"		1971121	2		=			
ANR	1971129	Identifier	usermap_str		1971121	0					
ANR	1971130	CallExpression	"param ( ""USERID_MAP"" )"		1971121	1					
ANR	1971131	Callee	param		1971121	0					
ANR	1971132	Identifier	param		1971121	0					
ANR	1971133	ArgumentList	"""USERID_MAP"""		1971121	1					
ANR	1971134	Argument	"""USERID_MAP"""		1971121	0					
ANR	1971135	PrimaryExpression	"""USERID_MAP"""		1971121	0					
ANR	1971136	IfStatement	if ( ! usermap_str )		1971121	1					
ANR	1971137	Condition	! usermap_str	129:5:3345:3356	1971121	0	True				
ANR	1971138	UnaryOperationExpression	! usermap_str		1971121	0					
ANR	1971139	UnaryOperator	!		1971121	0					
ANR	1971140	Identifier	usermap_str		1971121	1					
ANR	1971141	CompoundStatement		4:20:114:114	1971121	1					
ANR	1971142	ReturnStatement	return ;	130:2:3364:3370	1971121	0	True				
ANR	1971143	IdentifierDeclStatement	"StringList usermap ( usermap_str , "" "" ) ;"	137:1:3579:3614	1971121	2	True				
ANR	1971144	IdentifierDecl	"usermap ( usermap_str , "" "" )"		1971121	0					
ANR	1971145	IdentifierDeclType	StringList		1971121	0					
ANR	1971146	Identifier	usermap		1971121	1					
ANR	1971147	Expression	"usermap_str , "" """		1971121	2					
ANR	1971148	Identifier	usermap_str		1971121	0					
ANR	1971149	PrimaryExpression	""" """		1971121	1					
ANR	1971150	ExpressionStatement	free ( usermap_str )	138:1:3617:3636	1971121	3	True				
ANR	1971151	CallExpression	free ( usermap_str )		1971121	0					
ANR	1971152	Callee	free		1971121	0					
ANR	1971153	Identifier	free		1971121	0					
ANR	1971154	ArgumentList	usermap_str		1971121	1					
ANR	1971155	Argument	usermap_str		1971121	0					
ANR	1971156	Identifier	usermap_str		1971121	0					
ANR	1971157	IdentifierDeclStatement	char * username ;	140:1:3640:3654	1971121	4	True				
ANR	1971158	IdentifierDecl	* username		1971121	0					
ANR	1971159	IdentifierDeclType	char *		1971121	0					
ANR	1971160	Identifier	username		1971121	1					
ANR	1971161	ExpressionStatement	usermap . rewind ( )	141:1:3657:3673	1971121	5	True				
ANR	1971162	CallExpression	usermap . rewind ( )		1971121	0					
ANR	1971163	Callee	usermap . rewind		1971121	0					
ANR	1971164	MemberAccess	usermap . rewind		1971121	0					
ANR	1971165	Identifier	usermap		1971121	0					
ANR	1971166	Identifier	rewind		1971121	1					
ANR	1971167	ArgumentList			1971121	1					
ANR	1971168	WhileStatement	while ( ( username = usermap . next ( ) ) )		1971121	6					
ANR	1971169	Condition	username = usermap . next ( )	142:8:3683:3707	1971121	0	True				
ANR	1971170	AssignmentExpression	username = usermap . next ( )		1971121	0		=			
ANR	1971171	Identifier	username		1971121	0					
ANR	1971172	CallExpression	usermap . next ( )		1971121	1					
ANR	1971173	Callee	usermap . next		1971121	0					
ANR	1971174	MemberAccess	usermap . next		1971121	0					
ANR	1971175	Identifier	usermap		1971121	0					
ANR	1971176	Identifier	next		1971121	1					
ANR	1971177	ArgumentList			1971121	1					
ANR	1971178	CompoundStatement		66:2:1677:1687	1971121	1					
ANR	1971179	IdentifierDeclStatement	"char * userids = strchr ( username , '=' ) ;"	143:2:3715:3751	1971121	0	True				
ANR	1971180	IdentifierDecl	"* userids = strchr ( username , '=' )"		1971121	0					
ANR	1971181	IdentifierDeclType	char *		1971121	0					
ANR	1971182	Identifier	userids		1971121	1					
ANR	1971183	AssignmentExpression	"* userids = strchr ( username , '=' )"		1971121	2		=			
ANR	1971184	Identifier	userids		1971121	0					
ANR	1971185	CallExpression	"strchr ( username , '=' )"		1971121	1					
ANR	1971186	Callee	strchr		1971121	0					
ANR	1971187	Identifier	strchr		1971121	0					
ANR	1971188	ArgumentList	username		1971121	1					
ANR	1971189	Argument	username		1971121	0					
ANR	1971190	Identifier	username		1971121	0					
ANR	1971191	Argument	'='		1971121	1					
ANR	1971192	PrimaryExpression	'='		1971121	0					
ANR	1971193	ExpressionStatement	ASSERT ( userids )	144:2:3755:3772	1971121	1	True				
ANR	1971194	CallExpression	ASSERT ( userids )		1971121	0					
ANR	1971195	Callee	ASSERT		1971121	0					
ANR	1971196	Identifier	ASSERT		1971121	0					
ANR	1971197	ArgumentList	userids		1971121	1					
ANR	1971198	Argument	userids		1971121	0					
ANR	1971199	Identifier	userids		1971121	0					
ANR	1971200	ExpressionStatement	* userids = '\\0'	145:2:3776:3791	1971121	2	True				
ANR	1971201	AssignmentExpression	* userids = '\\0'		1971121	0		=			
ANR	1971202	UnaryOperationExpression	* userids		1971121	0					
ANR	1971203	UnaryOperator	*		1971121	0					
ANR	1971204	Identifier	userids		1971121	1					
ANR	1971205	PrimaryExpression	'\\0'		1971121	1					
ANR	1971206	ExpressionStatement	userids ++	146:2:3795:3804	1971121	3	True				
ANR	1971207	PostIncDecOperationExpression	userids ++		1971121	0					
ANR	1971208	Identifier	userids		1971121	0					
ANR	1971209	IncDec	++		1971121	1					
ANR	1971210	IdentifierDeclStatement	"StringList ids ( userids , "","" ) ;"	149:2:3852:3879	1971121	4	True				
ANR	1971211	IdentifierDecl	"ids ( userids , "","" )"		1971121	0					
ANR	1971212	IdentifierDeclType	StringList		1971121	0					
ANR	1971213	Identifier	ids		1971121	1					
ANR	1971214	Expression	"userids , "","""		1971121	2					
ANR	1971215	Identifier	userids		1971121	0					
ANR	1971216	PrimaryExpression	""","""		1971121	1					
ANR	1971217	ExpressionStatement	ids . rewind ( )	150:2:3883:3895	1971121	5	True				
ANR	1971218	CallExpression	ids . rewind ( )		1971121	0					
ANR	1971219	Callee	ids . rewind		1971121	0					
ANR	1971220	MemberAccess	ids . rewind		1971121	0					
ANR	1971221	Identifier	ids		1971121	0					
ANR	1971222	Identifier	rewind		1971121	1					
ANR	1971223	ArgumentList			1971121	1					
ANR	1971224	IdentifierDeclStatement	struct passwd pwent ;	152:2:3900:3919	1971121	6	True				
ANR	1971225	IdentifierDecl	pwent		1971121	0					
ANR	1971226	IdentifierDeclType	struct passwd		1971121	0					
ANR	1971227	Identifier	pwent		1971121	1					
ANR	1971228	IdentifierDeclStatement	char const * idstr = ids . next ( ) ;	154:2:3924:3954	1971121	7	True				
ANR	1971229	IdentifierDecl	* idstr = ids . next ( )		1971121	0					
ANR	1971230	IdentifierDeclType	char const *		1971121	0					
ANR	1971231	Identifier	idstr		1971121	1					
ANR	1971232	AssignmentExpression	* idstr = ids . next ( )		1971121	2		=			
ANR	1971233	Identifier	idstr		1971121	0					
ANR	1971234	CallExpression	ids . next ( )		1971121	1					
ANR	1971235	Callee	ids . next		1971121	0					
ANR	1971236	MemberAccess	ids . next		1971121	0					
ANR	1971237	Identifier	ids		1971121	0					
ANR	1971238	Identifier	next		1971121	1					
ANR	1971239	ArgumentList			1971121	1					
ANR	1971240	IdentifierDeclStatement	uid_t uid ;	155:2:3958:3967	1971121	8	True				
ANR	1971241	IdentifierDecl	uid		1971121	0					
ANR	1971242	IdentifierDeclType	uid_t		1971121	0					
ANR	1971243	Identifier	uid		1971121	1					
ANR	1971244	IdentifierDeclStatement	gid_t gid ;	156:2:3971:3980	1971121	9	True				
ANR	1971245	IdentifierDecl	gid		1971121	0					
ANR	1971246	IdentifierDeclType	gid_t		1971121	0					
ANR	1971247	Identifier	gid		1971121	1					
ANR	1971248	IfStatement	"if ( ! idstr || ! parseUid ( idstr , & uid ) )"		1971121	10					
ANR	1971249	Condition	"! idstr || ! parseUid ( idstr , & uid )"	157:6:3988:4018	1971121	0	True				
ANR	1971250	OrExpression	"! idstr || ! parseUid ( idstr , & uid )"		1971121	0		||			
ANR	1971251	UnaryOperationExpression	! idstr		1971121	0					
ANR	1971252	UnaryOperator	!		1971121	0					
ANR	1971253	Identifier	idstr		1971121	1					
ANR	1971254	UnaryOperationExpression	"! parseUid ( idstr , & uid )"		1971121	1					
ANR	1971255	UnaryOperator	!		1971121	0					
ANR	1971256	CallExpression	"parseUid ( idstr , & uid )"		1971121	1					
ANR	1971257	Callee	parseUid		1971121	0					
ANR	1971258	Identifier	parseUid		1971121	0					
ANR	1971259	ArgumentList	idstr		1971121	1					
ANR	1971260	Argument	idstr		1971121	0					
ANR	1971261	Identifier	idstr		1971121	0					
ANR	1971262	Argument	& uid		1971121	1					
ANR	1971263	UnaryOperationExpression	& uid		1971121	0					
ANR	1971264	UnaryOperator	&		1971121	0					
ANR	1971265	Identifier	uid		1971121	1					
ANR	1971266	CompoundStatement		32:40:776:776	1971121	1					
ANR	1971267	ExpressionStatement	"EXCEPT ( ""Invalid USERID_MAP entry %s=%s"" , username , userids )"	158:3:4027:4084	1971121	0	True				
ANR	1971268	CallExpression	"EXCEPT ( ""Invalid USERID_MAP entry %s=%s"" , username , userids )"		1971121	0					
ANR	1971269	Callee	EXCEPT		1971121	0					
ANR	1971270	Identifier	EXCEPT		1971121	0					
ANR	1971271	ArgumentList	"""Invalid USERID_MAP entry %s=%s"""		1971121	1					
ANR	1971272	Argument	"""Invalid USERID_MAP entry %s=%s"""		1971121	0					
ANR	1971273	PrimaryExpression	"""Invalid USERID_MAP entry %s=%s"""		1971121	0					
ANR	1971274	Argument	username		1971121	1					
ANR	1971275	Identifier	username		1971121	0					
ANR	1971276	Argument	userids		1971121	2					
ANR	1971277	Identifier	userids		1971121	0					
ANR	1971278	ExpressionStatement	idstr = ids . next ( )	160:2:4092:4110	1971121	11	True				
ANR	1971279	AssignmentExpression	idstr = ids . next ( )		1971121	0		=			
ANR	1971280	Identifier	idstr		1971121	0					
ANR	1971281	CallExpression	ids . next ( )		1971121	1					
ANR	1971282	Callee	ids . next		1971121	0					
ANR	1971283	MemberAccess	ids . next		1971121	0					
ANR	1971284	Identifier	ids		1971121	0					
ANR	1971285	Identifier	next		1971121	1					
ANR	1971286	ArgumentList			1971121	1					
ANR	1971287	IfStatement	"if ( ! idstr || ! parseGid ( idstr , & gid ) )"		1971121	12					
ANR	1971288	Condition	"! idstr || ! parseGid ( idstr , & gid )"	161:6:4118:4148	1971121	0	True				
ANR	1971289	OrExpression	"! idstr || ! parseGid ( idstr , & gid )"		1971121	0		||			
ANR	1971290	UnaryOperationExpression	! idstr		1971121	0					
ANR	1971291	UnaryOperator	!		1971121	0					
ANR	1971292	Identifier	idstr		1971121	1					
ANR	1971293	UnaryOperationExpression	"! parseGid ( idstr , & gid )"		1971121	1					
ANR	1971294	UnaryOperator	!		1971121	0					
ANR	1971295	CallExpression	"parseGid ( idstr , & gid )"		1971121	1					
ANR	1971296	Callee	parseGid		1971121	0					
ANR	1971297	Identifier	parseGid		1971121	0					
ANR	1971298	ArgumentList	idstr		1971121	1					
ANR	1971299	Argument	idstr		1971121	0					
ANR	1971300	Identifier	idstr		1971121	0					
ANR	1971301	Argument	& gid		1971121	1					
ANR	1971302	UnaryOperationExpression	& gid		1971121	0					
ANR	1971303	UnaryOperator	&		1971121	0					
ANR	1971304	Identifier	gid		1971121	1					
ANR	1971305	CompoundStatement		36:40:906:906	1971121	1					
ANR	1971306	ExpressionStatement	"EXCEPT ( ""Invalid USERID_MAP entry %s=%s"" , username , userids )"	162:3:4157:4214	1971121	0	True				
ANR	1971307	CallExpression	"EXCEPT ( ""Invalid USERID_MAP entry %s=%s"" , username , userids )"		1971121	0					
ANR	1971308	Callee	EXCEPT		1971121	0					
ANR	1971309	Identifier	EXCEPT		1971121	0					
ANR	1971310	ArgumentList	"""Invalid USERID_MAP entry %s=%s"""		1971121	1					
ANR	1971311	Argument	"""Invalid USERID_MAP entry %s=%s"""		1971121	0					
ANR	1971312	PrimaryExpression	"""Invalid USERID_MAP entry %s=%s"""		1971121	0					
ANR	1971313	Argument	username		1971121	1					
ANR	1971314	Identifier	username		1971121	0					
ANR	1971315	Argument	userids		1971121	2					
ANR	1971316	Identifier	userids		1971121	0					
ANR	1971317	ExpressionStatement	pwent . pw_name = username	164:2:4222:4246	1971121	13	True				
ANR	1971318	AssignmentExpression	pwent . pw_name = username		1971121	0		=			
ANR	1971319	MemberAccess	pwent . pw_name		1971121	0					
ANR	1971320	Identifier	pwent		1971121	0					
ANR	1971321	Identifier	pw_name		1971121	1					
ANR	1971322	Identifier	username		1971121	1					
ANR	1971323	ExpressionStatement	pwent . pw_uid = uid	165:2:4250:4268	1971121	14	True				
ANR	1971324	AssignmentExpression	pwent . pw_uid = uid		1971121	0		=			
ANR	1971325	MemberAccess	pwent . pw_uid		1971121	0					
ANR	1971326	Identifier	pwent		1971121	0					
ANR	1971327	Identifier	pw_uid		1971121	1					
ANR	1971328	Identifier	uid		1971121	1					
ANR	1971329	ExpressionStatement	pwent . pw_gid = gid	166:2:4272:4290	1971121	15	True				
ANR	1971330	AssignmentExpression	pwent . pw_gid = gid		1971121	0		=			
ANR	1971331	MemberAccess	pwent . pw_gid		1971121	0					
ANR	1971332	Identifier	pwent		1971121	0					
ANR	1971333	Identifier	pw_gid		1971121	1					
ANR	1971334	Identifier	gid		1971121	1					
ANR	1971335	ExpressionStatement	cache_uid ( & pwent )	167:2:4294:4311	1971121	16	True				
ANR	1971336	CallExpression	cache_uid ( & pwent )		1971121	0					
ANR	1971337	Callee	cache_uid		1971121	0					
ANR	1971338	Identifier	cache_uid		1971121	0					
ANR	1971339	ArgumentList	& pwent		1971121	1					
ANR	1971340	Argument	& pwent		1971121	0					
ANR	1971341	UnaryOperationExpression	& pwent		1971121	0					
ANR	1971342	UnaryOperator	&		1971121	0					
ANR	1971343	Identifier	pwent		1971121	1					
ANR	1971344	ExpressionStatement	idstr = ids . next ( )	169:2:4316:4334	1971121	17	True				
ANR	1971345	AssignmentExpression	idstr = ids . next ( )		1971121	0		=			
ANR	1971346	Identifier	idstr		1971121	0					
ANR	1971347	CallExpression	ids . next ( )		1971121	1					
ANR	1971348	Callee	ids . next		1971121	0					
ANR	1971349	MemberAccess	ids . next		1971121	0					
ANR	1971350	Identifier	ids		1971121	0					
ANR	1971351	Identifier	next		1971121	1					
ANR	1971352	ArgumentList			1971121	1					
ANR	1971353	IfStatement	"if ( idstr && ! strcmp ( idstr , ""?"" ) )"		1971121	18					
ANR	1971354	Condition	"idstr && ! strcmp ( idstr , ""?"" )"	170:6:4342:4368	1971121	0	True				
ANR	1971355	AndExpression	"idstr && ! strcmp ( idstr , ""?"" )"		1971121	0		&&			
ANR	1971356	Identifier	idstr		1971121	0					
ANR	1971357	UnaryOperationExpression	"! strcmp ( idstr , ""?"" )"		1971121	1					
ANR	1971358	UnaryOperator	!		1971121	0					
ANR	1971359	CallExpression	"strcmp ( idstr , ""?"" )"		1971121	1					
ANR	1971360	Callee	strcmp		1971121	0					
ANR	1971361	Identifier	strcmp		1971121	0					
ANR	1971362	ArgumentList	idstr		1971121	1					
ANR	1971363	Argument	idstr		1971121	0					
ANR	1971364	Identifier	idstr		1971121	0					
ANR	1971365	Argument	"""?"""		1971121	1					
ANR	1971366	PrimaryExpression	"""?"""		1971121	0					
ANR	1971367	CompoundStatement		45:36:1126:1126	1971121	1					
ANR	1971368	ContinueStatement	continue ;	171:3:4377:4385	1971121	0	True				
ANR	1971369	ExpressionStatement	ids . rewind ( )	174:2:4438:4450	1971121	19	True				
ANR	1971370	CallExpression	ids . rewind ( )		1971121	0					
ANR	1971371	Callee	ids . rewind		1971121	0					
ANR	1971372	MemberAccess	ids . rewind		1971121	0					
ANR	1971373	Identifier	ids		1971121	0					
ANR	1971374	Identifier	rewind		1971121	1					
ANR	1971375	ArgumentList			1971121	1					
ANR	1971376	ExpressionStatement	ids . next ( )	175:2:4454:4464	1971121	20	True				
ANR	1971377	CallExpression	ids . next ( )		1971121	0					
ANR	1971378	Callee	ids . next		1971121	0					
ANR	1971379	MemberAccess	ids . next		1971121	0					
ANR	1971380	Identifier	ids		1971121	0					
ANR	1971381	Identifier	next		1971121	1					
ANR	1971382	ArgumentList			1971121	1					
ANR	1971383	IdentifierDeclStatement	group_entry * group_cache_entry ;	177:2:4493:4523	1971121	21	True				
ANR	1971384	IdentifierDecl	* group_cache_entry		1971121	0					
ANR	1971385	IdentifierDeclType	group_entry *		1971121	0					
ANR	1971386	Identifier	group_cache_entry		1971121	1					
ANR	1971387	IfStatement	"if ( group_table -> lookup ( username , group_cache_entry ) < 0 )"		1971121	22					
ANR	1971388	Condition	"group_table -> lookup ( username , group_cache_entry ) < 0"	178:7:4532:4583	1971121	0	True				
ANR	1971389	RelationalExpression	"group_table -> lookup ( username , group_cache_entry ) < 0"		1971121	0		<			
ANR	1971390	CallExpression	"group_table -> lookup ( username , group_cache_entry )"		1971121	0					
ANR	1971391	Callee	group_table -> lookup		1971121	0					
ANR	1971392	PtrMemberAccess	group_table -> lookup		1971121	0					
ANR	1971393	Identifier	group_table		1971121	0					
ANR	1971394	Identifier	lookup		1971121	1					
ANR	1971395	ArgumentList	username		1971121	1					
ANR	1971396	Argument	username		1971121	0					
ANR	1971397	Identifier	username		1971121	0					
ANR	1971398	Argument	group_cache_entry		1971121	1					
ANR	1971399	Identifier	group_cache_entry		1971121	0					
ANR	1971400	PrimaryExpression	0		1971121	1					
ANR	1971401	CompoundStatement		53:62:1341:1341	1971121	1					
ANR	1971402	ExpressionStatement	init_group_entry ( group_cache_entry )	179:3:4592:4627	1971121	0	True				
ANR	1971403	CallExpression	init_group_entry ( group_cache_entry )		1971121	0					
ANR	1971404	Callee	init_group_entry		1971121	0					
ANR	1971405	Identifier	init_group_entry		1971121	0					
ANR	1971406	ArgumentList	group_cache_entry		1971121	1					
ANR	1971407	Argument	group_cache_entry		1971121	0					
ANR	1971408	Identifier	group_cache_entry		1971121	0					
ANR	1971409	IfStatement	if ( group_cache_entry -> gidlist != NULL )		1971121	23					
ANR	1971410	Condition	group_cache_entry -> gidlist != NULL	183:7:4673:4706	1971121	0	True				
ANR	1971411	EqualityExpression	group_cache_entry -> gidlist != NULL		1971121	0		!=			
ANR	1971412	PtrMemberAccess	group_cache_entry -> gidlist		1971121	0					
ANR	1971413	Identifier	group_cache_entry		1971121	0					
ANR	1971414	Identifier	gidlist		1971121	1					
ANR	1971415	Identifier	NULL		1971121	1					
ANR	1971416	CompoundStatement		58:44:1464:1464	1971121	1					
ANR	1971417	Statement	delete	184:3:4715:4720	1971121	0	True				
ANR	1971418	Statement	[	184:9:4721:4721	1971121	1	True				
ANR	1971419	Statement	]	184:10:4722:4722	1971121	2	True				
ANR	1971420	ExpressionStatement	group_cache_entry -> gidlist	184:12:4724:4750	1971121	3	True				
ANR	1971421	PtrMemberAccess	group_cache_entry -> gidlist		1971121	0					
ANR	1971422	Identifier	group_cache_entry		1971121	0					
ANR	1971423	Identifier	gidlist		1971121	1					
ANR	1971424	ExpressionStatement	group_cache_entry -> gidlist = NULL	185:3:4755:4788	1971121	4	True				
ANR	1971425	AssignmentExpression	group_cache_entry -> gidlist = NULL		1971121	0		=			
ANR	1971426	PtrMemberAccess	group_cache_entry -> gidlist		1971121	0					
ANR	1971427	Identifier	group_cache_entry		1971121	0					
ANR	1971428	Identifier	gidlist		1971121	1					
ANR	1971429	Identifier	NULL		1971121	1					
ANR	1971430	ExpressionStatement	group_cache_entry -> gidlist_sz = ids . number ( ) - 1	187:2:4796:4842	1971121	24	True				
ANR	1971431	AssignmentExpression	group_cache_entry -> gidlist_sz = ids . number ( ) - 1		1971121	0		=			
ANR	1971432	PtrMemberAccess	group_cache_entry -> gidlist_sz		1971121	0					
ANR	1971433	Identifier	group_cache_entry		1971121	0					
ANR	1971434	Identifier	gidlist_sz		1971121	1					
ANR	1971435	AdditiveExpression	ids . number ( ) - 1		1971121	1		-			
ANR	1971436	CallExpression	ids . number ( )		1971121	0					
ANR	1971437	Callee	ids . number		1971121	0					
ANR	1971438	MemberAccess	ids . number		1971121	0					
ANR	1971439	Identifier	ids		1971121	0					
ANR	1971440	Identifier	number		1971121	1					
ANR	1971441	ArgumentList			1971121	1					
ANR	1971442	PrimaryExpression	1		1971121	1					
ANR	1971443	ExpressionStatement	group_cache_entry -> gidlist = new gid_t [ group_cache_entry -> gidlist_sz ]	188:2:4846:4918	1971121	25	True				
ANR	1971444	AssignmentExpression	group_cache_entry -> gidlist = new gid_t [ group_cache_entry -> gidlist_sz ]		1971121	0		=			
ANR	1971445	PtrMemberAccess	group_cache_entry -> gidlist		1971121	0					
ANR	1971446	Identifier	group_cache_entry		1971121	0					
ANR	1971447	Identifier	gidlist		1971121	1					
ANR	1971448	PtrMemberAccess	group_cache_entry -> gidlist_sz		1971121	1					
ANR	1971449	Identifier	group_cache_entry		1971121	0					
ANR	1971450	Identifier	gidlist_sz		1971121	1					
ANR	1971451	IdentifierDeclStatement	unsigned g ;	191:2:4923:4933	1971121	26	True				
ANR	1971452	IdentifierDecl	g		1971121	0					
ANR	1971453	IdentifierDeclType	unsigned		1971121	0					
ANR	1971454	Identifier	g		1971121	1					
ANR	1971455	ForStatement	for ( g = 0 ; g < group_cache_entry -> gidlist_sz ; g ++ )		1971121	27					
ANR	1971456	ForInit	g = 0 ;	192:6:4941:4944	1971121	0	True				
ANR	1971457	AssignmentExpression	g = 0		1971121	0		=			
ANR	1971458	Identifier	g		1971121	0					
ANR	1971459	PrimaryExpression	0		1971121	1					
ANR	1971460	Condition	g < group_cache_entry -> gidlist_sz	192:11:4946:4976	1971121	1	True				
ANR	1971461	RelationalExpression	g < group_cache_entry -> gidlist_sz		1971121	0		<			
ANR	1971462	Identifier	g		1971121	0					
ANR	1971463	PtrMemberAccess	group_cache_entry -> gidlist_sz		1971121	1					
ANR	1971464	Identifier	group_cache_entry		1971121	0					
ANR	1971465	Identifier	gidlist_sz		1971121	1					
ANR	1971466	PostIncDecOperationExpression	g ++	192:44:4979:4981	1971121	2	True				
ANR	1971467	Identifier	g		1971121	0					
ANR	1971468	IncDec	++		1971121	1					
ANR	1971469	CompoundStatement		67:49:1738:1738	1971121	3					
ANR	1971470	ExpressionStatement	idstr = ids . next ( )	193:3:4989:5007	1971121	0	True				
ANR	1971471	AssignmentExpression	idstr = ids . next ( )		1971121	0		=			
ANR	1971472	Identifier	idstr		1971121	0					
ANR	1971473	CallExpression	ids . next ( )		1971121	1					
ANR	1971474	Callee	ids . next		1971121	0					
ANR	1971475	MemberAccess	ids . next		1971121	0					
ANR	1971476	Identifier	ids		1971121	0					
ANR	1971477	Identifier	next		1971121	1					
ANR	1971478	ArgumentList			1971121	1					
ANR	1971479	ExpressionStatement	ASSERT ( idstr )	194:3:5012:5027	1971121	1	True				
ANR	1971480	CallExpression	ASSERT ( idstr )		1971121	0					
ANR	1971481	Callee	ASSERT		1971121	0					
ANR	1971482	Identifier	ASSERT		1971121	0					
ANR	1971483	ArgumentList	idstr		1971121	1					
ANR	1971484	Argument	idstr		1971121	0					
ANR	1971485	Identifier	idstr		1971121	0					
ANR	1971486	IfStatement	"if ( ! parseGid ( idstr , & group_cache_entry -> gidlist [ g ] ) )"		1971121	2					
ANR	1971487	Condition	"! parseGid ( idstr , & group_cache_entry -> gidlist [ g ] )"	196:7:5037:5083	1971121	0	True				
ANR	1971488	UnaryOperationExpression	"! parseGid ( idstr , & group_cache_entry -> gidlist [ g ] )"		1971121	0					
ANR	1971489	UnaryOperator	!		1971121	0					
ANR	1971490	CallExpression	"parseGid ( idstr , & group_cache_entry -> gidlist [ g ] )"		1971121	1					
ANR	1971491	Callee	parseGid		1971121	0					
ANR	1971492	Identifier	parseGid		1971121	0					
ANR	1971493	ArgumentList	idstr		1971121	1					
ANR	1971494	Argument	idstr		1971121	0					
ANR	1971495	Identifier	idstr		1971121	0					
ANR	1971496	Argument	& group_cache_entry -> gidlist [ g ]		1971121	1					
ANR	1971497	UnaryOperationExpression	& group_cache_entry -> gidlist [ g ]		1971121	0					
ANR	1971498	UnaryOperator	&		1971121	0					
ANR	1971499	ArrayIndexing	group_cache_entry -> gidlist [ g ]		1971121	1					
ANR	1971500	PtrMemberAccess	group_cache_entry -> gidlist		1971121	0					
ANR	1971501	Identifier	group_cache_entry		1971121	0					
ANR	1971502	Identifier	gidlist		1971121	1					
ANR	1971503	Identifier	g		1971121	1					
ANR	1971504	CompoundStatement		71:57:1841:1841	1971121	1					
ANR	1971505	ExpressionStatement	"EXCEPT ( ""Invalid USERID_MAP entry %s=%s"" , username , userids )"	197:4:5093:5150	1971121	0	True				
ANR	1971506	CallExpression	"EXCEPT ( ""Invalid USERID_MAP entry %s=%s"" , username , userids )"		1971121	0					
ANR	1971507	Callee	EXCEPT		1971121	0					
ANR	1971508	Identifier	EXCEPT		1971121	0					
ANR	1971509	ArgumentList	"""Invalid USERID_MAP entry %s=%s"""		1971121	1					
ANR	1971510	Argument	"""Invalid USERID_MAP entry %s=%s"""		1971121	0					
ANR	1971511	PrimaryExpression	"""Invalid USERID_MAP entry %s=%s"""		1971121	0					
ANR	1971512	Argument	username		1971121	1					
ANR	1971513	Identifier	username		1971121	0					
ANR	1971514	Argument	userids		1971121	2					
ANR	1971515	Identifier	userids		1971121	0					
ANR	1971516	ExpressionStatement	group_cache_entry -> lastupdated = time ( NULL )	202:2:5209:5252	1971121	28	True				
ANR	1971517	AssignmentExpression	group_cache_entry -> lastupdated = time ( NULL )		1971121	0		=			
ANR	1971518	PtrMemberAccess	group_cache_entry -> lastupdated		1971121	0					
ANR	1971519	Identifier	group_cache_entry		1971121	0					
ANR	1971520	Identifier	lastupdated		1971121	1					
ANR	1971521	CallExpression	time ( NULL )		1971121	1					
ANR	1971522	Callee	time		1971121	0					
ANR	1971523	Identifier	time		1971121	0					
ANR	1971524	ArgumentList	NULL		1971121	1					
ANR	1971525	Argument	NULL		1971121	0					
ANR	1971526	Identifier	NULL		1971121	0					
ANR	1971527	ExpressionStatement	"group_table -> insert ( username , group_cache_entry )"	203:2:5256:5304	1971121	29	True				
ANR	1971528	CallExpression	"group_table -> insert ( username , group_cache_entry )"		1971121	0					
ANR	1971529	Callee	group_table -> insert		1971121	0					
ANR	1971530	PtrMemberAccess	group_table -> insert		1971121	0					
ANR	1971531	Identifier	group_table		1971121	0					
ANR	1971532	Identifier	insert		1971121	1					
ANR	1971533	ArgumentList	username		1971121	1					
ANR	1971534	Argument	username		1971121	0					
ANR	1971535	Identifier	username		1971121	0					
ANR	1971536	Argument	group_cache_entry		1971121	1					
ANR	1971537	Identifier	group_cache_entry		1971121	0					
ANR	1971538	ReturnType	void		1971121	1					
ANR	1971539	Identifier	passwd_cache :: loadConfig		1971121	2					
ANR	1971540	ParameterList			1971121	3					
ANR	1971541	CFGEntryNode	ENTRY		1971121		True				
ANR	1971542	CFGExitNode	EXIT		1971121		True				
ANR	1971543	Symbol	idstr		1971121						
ANR	1971544	Symbol	group_cache_entry		1971121						
ANR	1971545	Symbol	gid		1971121						
ANR	1971546	Symbol	parseGid		1971121						
ANR	1971547	Symbol	strchr		1971121						
ANR	1971548	Symbol	usermap		1971121						
ANR	1971549	Symbol	* userids		1971121						
ANR	1971550	Symbol	usermap_str		1971121						
ANR	1971551	Symbol	pwent . pw_uid		1971121						
ANR	1971552	Symbol	uid		1971121						
ANR	1971553	Symbol	parseUid		1971121						
ANR	1971554	Symbol	group_cache_entry -> gidlist_sz		1971121						
ANR	1971555	Symbol	group_cache_entry -> lastupdated		1971121						
ANR	1971556	Symbol	param		1971121						
ANR	1971557	Symbol	* group_cache_entry		1971121						
ANR	1971558	Symbol	strcmp		1971121						
ANR	1971559	Symbol	pwent . pw_name		1971121						
ANR	1971560	Symbol	& pwent		1971121						
ANR	1971561	Symbol	NULL		1971121						
ANR	1971562	Symbol	pwent		1971121						
ANR	1971563	Symbol	g		1971121						
ANR	1971564	Symbol	usermap . next		1971121						
ANR	1971565	Symbol	pwent . pw_gid		1971121						
ANR	1971566	Symbol	& gid		1971121						
ANR	1971567	Symbol	* group_table		1971121						
ANR	1971568	Symbol	group_table -> lookup		1971121						
ANR	1971569	Symbol	& uid		1971121						
ANR	1971570	Symbol	ids . next		1971121						
ANR	1971571	Symbol	userids		1971121						
ANR	1971572	Symbol	ids . number		1971121						
ANR	1971573	Symbol	ids		1971121						
ANR	1971574	Symbol	group_table		1971121						
ANR	1971575	Symbol	group_cache_entry -> gidlist		1971121						
ANR	1971576	Symbol	time		1971121						
ANR	1971577	Symbol	username		1971121						
ANR	1971578	Function	passwd_cache :: ~passwd_cache	207:0:5312:5395							
ANR	1971579	FunctionDef	passwd_cache :: ~passwd_cache ()		1971578	0					
ANR	1971580	CompoundStatement		207:30:5342:5395	1971578	0					
ANR	1971581	ExpressionStatement	reset ( )	209:1:5346:5353	1971578	0	True				
ANR	1971582	CallExpression	reset ( )		1971578	0					
ANR	1971583	Callee	reset		1971578	0					
ANR	1971584	Identifier	reset		1971578	0					
ANR	1971585	ArgumentList			1971578	1					
ANR	1971586	Statement	delete	210:1:5356:5361	1971578	1	True				
ANR	1971587	ExpressionStatement	group_table	210:8:5363:5374	1971578	2	True				
ANR	1971588	Identifier	group_table		1971578	0					
ANR	1971589	Statement	delete	211:1:5377:5382	1971578	3	True				
ANR	1971590	ExpressionStatement	uid_table	211:8:5384:5393	1971578	4	True				
ANR	1971591	Identifier	uid_table		1971578	0					
ANR	1971592	Identifier	passwd_cache :: ~passwd_cache		1971578	1					
ANR	1971593	ParameterList			1971578	2					
ANR	1971594	CFGEntryNode	ENTRY		1971578		True				
ANR	1971595	CFGExitNode	EXIT		1971578		True				
ANR	1971596	Function	passwd_cache :: cache_groups	217:0:5582:7313							
ANR	1971597	FunctionDef	passwd_cache :: cache_groups (const char * user)		1971596	0					
ANR	1971598	CompoundStatement		217:50:5632:7313	1971596	0					
ANR	1971599	IdentifierDeclStatement	bool result ;	219:1:5636:5647	1971596	0	True				
ANR	1971600	IdentifierDecl	result		1971596	0					
ANR	1971601	IdentifierDeclType	bool		1971596	0					
ANR	1971602	Identifier	result		1971596	1					
ANR	1971603	IdentifierDeclStatement	group_entry * group_cache_entry ;	220:1:5650:5680	1971596	1	True				
ANR	1971604	IdentifierDecl	* group_cache_entry		1971596	0					
ANR	1971605	IdentifierDeclType	group_entry *		1971596	0					
ANR	1971606	Identifier	group_cache_entry		1971596	1					
ANR	1971607	IdentifierDeclStatement	gid_t user_gid ;	221:1:5683:5697	1971596	2	True				
ANR	1971608	IdentifierDecl	user_gid		1971596	0					
ANR	1971609	IdentifierDeclType	gid_t		1971596	0					
ANR	1971610	Identifier	user_gid		1971596	1					
ANR	1971611	ExpressionStatement	group_cache_entry = NULL	223:1:5704:5728	1971596	3	True				
ANR	1971612	AssignmentExpression	group_cache_entry = NULL		1971596	0		=			
ANR	1971613	Identifier	group_cache_entry		1971596	0					
ANR	1971614	Identifier	NULL		1971596	1					
ANR	1971615	ExpressionStatement	result = true	224:1:5731:5744	1971596	4	True				
ANR	1971616	AssignmentExpression	result = true		1971596	0		=			
ANR	1971617	Identifier	result		1971596	0					
ANR	1971618	Identifier	true		1971596	1					
ANR	1971619	IfStatement	if ( user == NULL )		1971596	5					
ANR	1971620	Condition	user == NULL	226:6:5753:5764	1971596	0	True				
ANR	1971621	EqualityExpression	user == NULL		1971596	0		==			
ANR	1971622	Identifier	user		1971596	0					
ANR	1971623	Identifier	NULL		1971596	1					
ANR	1971624	CompoundStatement		10:21:135:135	1971596	1					
ANR	1971625	ReturnStatement	return false ;	227:2:5772:5784	1971596	0	True				
ANR	1971626	Identifier	false		1971596	0					
ANR	1971627	ElseStatement	else		1971596	0					
ANR	1971628	CompoundStatement		12:8:161:161	1971596	0					
ANR	1971629	IfStatement	"if ( ! get_user_gid ( user , user_gid ) )"		1971596	0					
ANR	1971630	Condition	"! get_user_gid ( user , user_gid )"	230:7:5805:5833	1971596	0	True				
ANR	1971631	UnaryOperationExpression	"! get_user_gid ( user , user_gid )"		1971596	0					
ANR	1971632	UnaryOperator	!		1971596	0					
ANR	1971633	CallExpression	"get_user_gid ( user , user_gid )"		1971596	1					
ANR	1971634	Callee	get_user_gid		1971596	0					
ANR	1971635	Identifier	get_user_gid		1971596	0					
ANR	1971636	ArgumentList	user		1971596	1					
ANR	1971637	Argument	user		1971596	0					
ANR	1971638	Identifier	user		1971596	0					
ANR	1971639	Argument	user_gid		1971596	1					
ANR	1971640	Identifier	user_gid		1971596	0					
ANR	1971641	CompoundStatement		14:39:204:204	1971596	1					
ANR	1971642	Statement	dprintf	231:3:5842:5848	1971596	0	True				
ANR	1971643	Statement	(	231:10:5849:5849	1971596	1	True				
ANR	1971644	Statement	D_ALWAYS	231:11:5850:5857	1971596	2	True				
ANR	1971645	Statement	","	231:19:5858:5858	1971596	3	True				
ANR	1971646	Statement	"""cache_groups(): get_user_gid() failed! """	231:21:5860:5900	1971596	4	True				
ANR	1971647	Statement	"""errno=%s\\n"""	232:7:5909:5920	1971596	5	True				
ANR	1971648	Statement	","	232:19:5921:5921	1971596	6	True				
ANR	1971649	Statement	strerror	232:21:5923:5930	1971596	7	True				
ANR	1971650	Statement	(	232:29:5931:5931	1971596	8	True				
ANR	1971651	Statement	errno	232:30:5932:5936	1971596	9	True				
ANR	1971652	Statement	)	232:35:5937:5937	1971596	10	True				
ANR	1971653	Statement	)	232:36:5938:5938	1971596	11	True				
ANR	1971654	ExpressionStatement		232:37:5939:5939	1971596	12	True				
ANR	1971655	ReturnStatement	return false ;	233:3:5944:5956	1971596	13	True				
ANR	1971656	Identifier	false		1971596	0					
ANR	1971657	IfStatement	"if ( group_table -> lookup ( user , group_cache_entry ) < 0 )"		1971596	1					
ANR	1971658	Condition	"group_table -> lookup ( user , group_cache_entry ) < 0"	236:7:5970:6017	1971596	0	True				
ANR	1971659	RelationalExpression	"group_table -> lookup ( user , group_cache_entry ) < 0"		1971596	0		<			
ANR	1971660	CallExpression	"group_table -> lookup ( user , group_cache_entry )"		1971596	0					
ANR	1971661	Callee	group_table -> lookup		1971596	0					
ANR	1971662	PtrMemberAccess	group_table -> lookup		1971596	0					
ANR	1971663	Identifier	group_table		1971596	0					
ANR	1971664	Identifier	lookup		1971596	1					
ANR	1971665	ArgumentList	user		1971596	1					
ANR	1971666	Argument	user		1971596	0					
ANR	1971667	Identifier	user		1971596	0					
ANR	1971668	Argument	group_cache_entry		1971596	1					
ANR	1971669	Identifier	group_cache_entry		1971596	0					
ANR	1971670	PrimaryExpression	0		1971596	1					
ANR	1971671	CompoundStatement		20:58:388:388	1971596	1					
ANR	1971672	ExpressionStatement	init_group_entry ( group_cache_entry )	237:3:6026:6061	1971596	0	True				
ANR	1971673	CallExpression	init_group_entry ( group_cache_entry )		1971596	0					
ANR	1971674	Callee	init_group_entry		1971596	0					
ANR	1971675	Identifier	init_group_entry		1971596	0					
ANR	1971676	ArgumentList	group_cache_entry		1971596	1					
ANR	1971677	Argument	group_cache_entry		1971596	0					
ANR	1971678	Identifier	group_cache_entry		1971596	0					
ANR	1971679	IfStatement	"if ( initgroups ( user , user_gid ) != 0 )"		1971596	2					
ANR	1971680	Condition	"initgroups ( user , user_gid ) != 0"	244:7:6247:6277	1971596	0	True				
ANR	1971681	EqualityExpression	"initgroups ( user , user_gid ) != 0"		1971596	0		!=			
ANR	1971682	CallExpression	"initgroups ( user , user_gid )"		1971596	0					
ANR	1971683	Callee	initgroups		1971596	0					
ANR	1971684	Identifier	initgroups		1971596	0					
ANR	1971685	ArgumentList	user		1971596	1					
ANR	1971686	Argument	user		1971596	0					
ANR	1971687	Identifier	user		1971596	0					
ANR	1971688	Argument	user_gid		1971596	1					
ANR	1971689	Identifier	user_gid		1971596	0					
ANR	1971690	PrimaryExpression	0		1971596	1					
ANR	1971691	CompoundStatement		28:41:648:648	1971596	1					
ANR	1971692	ExpressionStatement	"dprintf ( D_ALWAYS , ""passwd_cache: initgroups() failed! errno=%s\\n"" , strerror ( errno ) )"	245:3:6286:6374	1971596	0	True				
ANR	1971693	CallExpression	"dprintf ( D_ALWAYS , ""passwd_cache: initgroups() failed! errno=%s\\n"" , strerror ( errno ) )"		1971596	0					
ANR	1971694	Callee	dprintf		1971596	0					
ANR	1971695	Identifier	dprintf		1971596	0					
ANR	1971696	ArgumentList	D_ALWAYS		1971596	1					
ANR	1971697	Argument	D_ALWAYS		1971596	0					
ANR	1971698	Identifier	D_ALWAYS		1971596	0					
ANR	1971699	Argument	"""passwd_cache: initgroups() failed! errno=%s\\n"""		1971596	1					
ANR	1971700	PrimaryExpression	"""passwd_cache: initgroups() failed! errno=%s\\n"""		1971596	0					
ANR	1971701	Argument	strerror ( errno )		1971596	2					
ANR	1971702	CallExpression	strerror ( errno )		1971596	0					
ANR	1971703	Callee	strerror		1971596	0					
ANR	1971704	Identifier	strerror		1971596	0					
ANR	1971705	ArgumentList	errno		1971596	1					
ANR	1971706	Argument	errno		1971596	0					
ANR	1971707	Identifier	errno		1971596	0					
ANR	1971708	Statement	delete	247:3:6379:6384	1971596	1	True				
ANR	1971709	ExpressionStatement	group_cache_entry	247:10:6386:6403	1971596	2	True				
ANR	1971710	Identifier	group_cache_entry		1971596	0					
ANR	1971711	ReturnStatement	return false ;	248:3:6408:6420	1971596	3	True				
ANR	1971712	Identifier	false		1971596	0					
ANR	1971713	Statement	int	252:2:6480:6482	1971596	3	True				
ANR	1971714	Statement	ret	252:6:6484:6486	1971596	4	True				
ANR	1971715	Statement	=	252:10:6488:6488	1971596	5	True				
ANR	1971716	Statement	::	252:12:6490:6491	1971596	6	True				
ANR	1971717	ExpressionStatement	"getgroups ( 0 , NULL )"	252:14:6492:6509	1971596	7	True				
ANR	1971718	CallExpression	"getgroups ( 0 , NULL )"		1971596	0					
ANR	1971719	Callee	getgroups		1971596	0					
ANR	1971720	Identifier	getgroups		1971596	0					
ANR	1971721	ArgumentList	0		1971596	1					
ANR	1971722	Argument	0		1971596	0					
ANR	1971723	PrimaryExpression	0		1971596	0					
ANR	1971724	Argument	NULL		1971596	1					
ANR	1971725	Identifier	NULL		1971596	0					
ANR	1971726	IfStatement	if ( ret < 0 )		1971596	8					
ANR	1971727	Condition	ret < 0	254:7:6519:6525	1971596	0	True				
ANR	1971728	RelationalExpression	ret < 0		1971596	0		<			
ANR	1971729	Identifier	ret		1971596	0					
ANR	1971730	PrimaryExpression	0		1971596	1					
ANR	1971731	CompoundStatement		38:17:896:896	1971596	1					
ANR	1971732	Statement	delete	255:3:6534:6539	1971596	0	True				
ANR	1971733	ExpressionStatement	group_cache_entry	255:10:6541:6558	1971596	1	True				
ANR	1971734	Identifier	group_cache_entry		1971596	0					
ANR	1971735	ExpressionStatement	result = false	256:3:6563:6577	1971596	2	True				
ANR	1971736	AssignmentExpression	result = false		1971596	0		=			
ANR	1971737	Identifier	result		1971596	0					
ANR	1971738	Identifier	false		1971596	1					
ANR	1971739	ElseStatement	else		1971596	0					
ANR	1971740	CompoundStatement		41:9:955:955	1971596	0					
ANR	1971741	ExpressionStatement	group_cache_entry -> gidlist_sz = ret	258:3:6593:6628	1971596	0	True				
ANR	1971742	AssignmentExpression	group_cache_entry -> gidlist_sz = ret		1971596	0		=			
ANR	1971743	PtrMemberAccess	group_cache_entry -> gidlist_sz		1971596	0					
ANR	1971744	Identifier	group_cache_entry		1971596	0					
ANR	1971745	Identifier	gidlist_sz		1971596	1					
ANR	1971746	Identifier	ret		1971596	1					
ANR	1971747	IfStatement	if ( group_cache_entry -> gidlist != NULL )		1971596	1					
ANR	1971748	Condition	group_cache_entry -> gidlist != NULL	261:8:6671:6704	1971596	0	True				
ANR	1971749	EqualityExpression	group_cache_entry -> gidlist != NULL		1971596	0		!=			
ANR	1971750	PtrMemberAccess	group_cache_entry -> gidlist		1971596	0					
ANR	1971751	Identifier	group_cache_entry		1971596	0					
ANR	1971752	Identifier	gidlist		1971596	1					
ANR	1971753	Identifier	NULL		1971596	1					
ANR	1971754	CompoundStatement		45:45:1075:1075	1971596	1					
ANR	1971755	Statement	delete	262:4:6714:6719	1971596	0	True				
ANR	1971756	Statement	[	262:10:6720:6720	1971596	1	True				
ANR	1971757	Statement	]	262:11:6721:6721	1971596	2	True				
ANR	1971758	ExpressionStatement	group_cache_entry -> gidlist	262:13:6723:6749	1971596	3	True				
ANR	1971759	PtrMemberAccess	group_cache_entry -> gidlist		1971596	0					
ANR	1971760	Identifier	group_cache_entry		1971596	0					
ANR	1971761	Identifier	gidlist		1971596	1					
ANR	1971762	ExpressionStatement	group_cache_entry -> gidlist = NULL	263:4:6755:6788	1971596	4	True				
ANR	1971763	AssignmentExpression	group_cache_entry -> gidlist = NULL		1971596	0		=			
ANR	1971764	PtrMemberAccess	group_cache_entry -> gidlist		1971596	0					
ANR	1971765	Identifier	group_cache_entry		1971596	0					
ANR	1971766	Identifier	gidlist		1971596	1					
ANR	1971767	Identifier	NULL		1971596	1					
ANR	1971768	ElseStatement	else		1971596	0					
ANR	1971769	CompoundStatement		57:10:1502:1502	1971596	0					
ANR	1971770	ExpressionStatement	group_cache_entry -> lastupdated = time ( NULL )	275:4:7187:7230	1971596	0	True				
ANR	1971771	AssignmentExpression	group_cache_entry -> lastupdated = time ( NULL )		1971596	0		=			
ANR	1971772	PtrMemberAccess	group_cache_entry -> lastupdated		1971596	0					
ANR	1971773	Identifier	group_cache_entry		1971596	0					
ANR	1971774	Identifier	lastupdated		1971596	1					
ANR	1971775	CallExpression	time ( NULL )		1971596	1					
ANR	1971776	Callee	time		1971596	0					
ANR	1971777	Identifier	time		1971596	0					
ANR	1971778	ArgumentList	NULL		1971596	1					
ANR	1971779	Argument	NULL		1971596	0					
ANR	1971780	Identifier	NULL		1971596	0					
ANR	1971781	ExpressionStatement	"group_table -> insert ( user , group_cache_entry )"	276:4:7236:7280	1971596	1	True				
ANR	1971782	CallExpression	"group_table -> insert ( user , group_cache_entry )"		1971596	0					
ANR	1971783	Callee	group_table -> insert		1971596	0					
ANR	1971784	PtrMemberAccess	group_table -> insert		1971596	0					
ANR	1971785	Identifier	group_table		1971596	0					
ANR	1971786	Identifier	insert		1971596	1					
ANR	1971787	ArgumentList	user		1971596	1					
ANR	1971788	Argument	user		1971596	0					
ANR	1971789	Identifier	user		1971596	0					
ANR	1971790	Argument	group_cache_entry		1971596	1					
ANR	1971791	Identifier	group_cache_entry		1971596	0					
ANR	1971792	ExpressionStatement	group_cache_entry -> gidlist = new gid_t [ group_cache_entry -> gidlist_sz ]	265:6:6801:6879	1971596	2	True				
ANR	1971793	AssignmentExpression	group_cache_entry -> gidlist = new gid_t [ group_cache_entry -> gidlist_sz ]		1971596	0		=			
ANR	1971794	PtrMemberAccess	group_cache_entry -> gidlist		1971596	0					
ANR	1971795	Identifier	group_cache_entry		1971596	0					
ANR	1971796	Identifier	gidlist		1971596	1					
ANR	1971797	PtrMemberAccess	group_cache_entry -> gidlist_sz		1971596	1					
ANR	1971798	Identifier	group_cache_entry		1971596	0					
ANR	1971799	Identifier	gidlist_sz		1971596	1					
ANR	1971800	Statement	if	267:3:6884:6885	1971596	3	True				
ANR	1971801	Statement	(	267:6:6887:6887	1971596	4	True				
ANR	1971802	Statement	::	267:7:6888:6889	1971596	5	True				
ANR	1971803	Statement	getgroups	267:9:6890:6898	1971596	6	True				
ANR	1971804	Statement	(	267:18:6899:6899	1971596	7	True				
ANR	1971805	Statement	group_cache_entry	267:21:6902:6918	1971596	8	True				
ANR	1971806	Statement	->	267:38:6919:6920	1971596	9	True				
ANR	1971807	Statement	gidlist_sz	267:40:6921:6930	1971596	10	True				
ANR	1971808	Statement	","	267:50:6931:6931	1971596	11	True				
ANR	1971809	Statement	group_cache_entry	268:8:6941:6957	1971596	12	True				
ANR	1971810	Statement	->	268:25:6958:6959	1971596	13	True				
ANR	1971811	Statement	gidlist	268:27:6960:6966	1971596	14	True				
ANR	1971812	Statement	)	268:34:6967:6967	1971596	15	True				
ANR	1971813	Statement	<	268:36:6969:6969	1971596	16	True				
ANR	1971814	Statement	0	268:38:6971:6971	1971596	17	True				
ANR	1971815	Statement	)	268:39:6972:6972	1971596	18	True				
ANR	1971816	CompoundStatement		52:41:1341:1341	1971596	19					
ANR	1971817	Statement	dprintf	269:4:6980:6986	1971596	0	True				
ANR	1971818	Statement	(	269:11:6987:6987	1971596	1	True				
ANR	1971819	Statement	D_ALWAYS	269:12:6988:6995	1971596	2	True				
ANR	1971820	Statement	","	269:20:6996:6996	1971596	3	True				
ANR	1971821	Statement	"""cache_groups(): getgroups() failed! """	269:22:6998:7035	1971596	4	True				
ANR	1971822	Statement	"""errno=%s\\n"""	270:6:7043:7054	1971596	5	True				
ANR	1971823	Statement	","	270:18:7055:7055	1971596	6	True				
ANR	1971824	Statement	strerror	270:20:7057:7064	1971596	7	True				
ANR	1971825	Statement	(	270:28:7065:7065	1971596	8	True				
ANR	1971826	Statement	errno	270:29:7066:7070	1971596	9	True				
ANR	1971827	Statement	)	270:34:7071:7071	1971596	10	True				
ANR	1971828	Statement	)	270:35:7072:7072	1971596	11	True				
ANR	1971829	ExpressionStatement		270:36:7073:7073	1971596	12	True				
ANR	1971830	Statement	delete	271:4:7079:7084	1971596	13	True				
ANR	1971831	ExpressionStatement	group_cache_entry	271:11:7086:7103	1971596	14	True				
ANR	1971832	Identifier	group_cache_entry		1971596	0					
ANR	1971833	ExpressionStatement	result = false	272:4:7109:7123	1971596	15	True				
ANR	1971834	AssignmentExpression	result = false		1971596	0		=			
ANR	1971835	Identifier	result		1971596	0					
ANR	1971836	Identifier	false		1971596	1					
ANR	1971837	ReturnStatement	return result ;	280:2:7294:7307	1971596	9	True				
ANR	1971838	Identifier	result		1971596	0					
ANR	1971839	ReturnType	bool		1971596	1					
ANR	1971840	Identifier	passwd_cache :: cache_groups		1971596	2					
ANR	1971841	ParameterList	const char * user		1971596	3					
ANR	1971842	Parameter	const char * user	217:32:5614:5629	1971596	0	True				
ANR	1971843	ParameterType	const char *		1971596	0					
ANR	1971844	Identifier	user		1971596	1					
ANR	1971845	CFGEntryNode	ENTRY		1971596		True				
ANR	1971846	CFGExitNode	EXIT		1971596		True				
ANR	1971847	Symbol	ret		1971596						
ANR	1971848	Symbol	group_cache_entry		1971596						
ANR	1971849	Symbol	errno		1971596						
ANR	1971850	Symbol	NULL		1971596						
ANR	1971851	Symbol	false		1971596						
ANR	1971852	Symbol	D_ALWAYS		1971596						
ANR	1971853	Symbol	user_gid		1971596						
ANR	1971854	Symbol	result		1971596						
ANR	1971855	Symbol	* group_table		1971596						
ANR	1971856	Symbol	group_table -> lookup		1971596						
ANR	1971857	Symbol	strerror		1971596						
ANR	1971858	Symbol	group_cache_entry -> gidlist_sz		1971596						
ANR	1971859	Symbol	group_cache_entry -> lastupdated		1971596						
ANR	1971860	Symbol	get_user_gid		1971596						
ANR	1971861	Symbol	initgroups		1971596						
ANR	1971862	Symbol	true		1971596						
ANR	1971863	Symbol	* group_cache_entry		1971596						
ANR	1971864	Symbol	group_table		1971596						
ANR	1971865	Symbol	group_cache_entry -> gidlist		1971596						
ANR	1971866	Symbol	time		1971596						
ANR	1971867	Symbol	user		1971596						
ANR	1971868	Function	passwd_cache :: cache_uid	287:0:7433:8629							
ANR	1971869	FunctionDef	passwd_cache :: cache_uid (const char * user)		1971868	0					
ANR	1971870	CompoundStatement		288:42:7480:8629	1971868	0					
ANR	1971871	IdentifierDeclStatement	struct passwd * pwent ;	290:1:7484:7504	1971868	0	True				
ANR	1971872	IdentifierDecl	* pwent		1971868	0					
ANR	1971873	IdentifierDeclType	struct passwd *		1971868	0					
ANR	1971874	Identifier	pwent		1971868	1					
ANR	1971875	IdentifierDeclStatement	const char * err_string ;	291:1:7507:7529	1971868	1	True				
ANR	1971876	IdentifierDecl	* err_string		1971868	0					
ANR	1971877	IdentifierDeclType	const char *		1971868	0					
ANR	1971878	Identifier	err_string		1971868	1					
ANR	1971879	ExpressionStatement	errno = 0	293:1:7533:7542	1971868	2	True				
ANR	1971880	AssignmentExpression	errno = 0		1971868	0		=			
ANR	1971881	Identifier	errno		1971868	0					
ANR	1971882	PrimaryExpression	0		1971868	1					
ANR	1971883	ExpressionStatement	pwent = getpwnam ( user )	294:1:7545:7567	1971868	3	True				
ANR	1971884	AssignmentExpression	pwent = getpwnam ( user )		1971868	0		=			
ANR	1971885	Identifier	pwent		1971868	0					
ANR	1971886	CallExpression	getpwnam ( user )		1971868	1					
ANR	1971887	Callee	getpwnam		1971868	0					
ANR	1971888	Identifier	getpwnam		1971868	0					
ANR	1971889	ArgumentList	user		1971868	1					
ANR	1971890	Argument	user		1971868	0					
ANR	1971891	Identifier	user		1971868	0					
ANR	1971892	IfStatement	if ( pwent == NULL )		1971868	4					
ANR	1971893	Condition	pwent == NULL	295:6:7575:7587	1971868	0	True				
ANR	1971894	EqualityExpression	pwent == NULL		1971868	0		==			
ANR	1971895	Identifier	pwent		1971868	0					
ANR	1971896	Identifier	NULL		1971868	1					
ANR	1971897	CompoundStatement		8:22:110:110	1971868	1					
ANR	1971898	Statement	if	309:2:8209:8210	1971868	0	True				
ANR	1971899	Statement	(	309:4:8211:8211	1971868	1	True				
ANR	1971900	Statement	errno	309:6:8213:8217	1971868	2	True				
ANR	1971901	Statement	==	309:12:8219:8220	1971868	3	True				
ANR	1971902	Statement	0	309:15:8222:8222	1971868	4	True				
ANR	1971903	Statement	||	311:3:8247:8248	1971868	5	True				
ANR	1971904	Statement	errno	311:6:8250:8254	1971868	6	True				
ANR	1971905	Statement	==	311:12:8256:8257	1971868	7	True				
ANR	1971906	Statement	ENOENT	311:15:8259:8264	1971868	8	True				
ANR	1971907	Statement	)	315:2:8315:8315	1971868	9	True				
ANR	1971908	CompoundStatement		30:10:851:901	1971868	10					
ANR	1971909	Statement	static	317:3:8325:8330	1971868	0	True				
ANR	1971910	IdentifierDeclStatement	"const char * errno_clarification = ""user not found"" ;"	317:10:8332:8382	1971868	1	True				
ANR	1971911	IdentifierDecl	"* errno_clarification = ""user not found"""		1971868	0					
ANR	1971912	IdentifierDeclType	const char *		1971868	0					
ANR	1971913	Identifier	errno_clarification		1971868	1					
ANR	1971914	AssignmentExpression	"* errno_clarification = ""user not found"""		1971868	2		=			
ANR	1971915	Identifier	errno_clarification		1971868	0					
ANR	1971916	PrimaryExpression	"""user not found"""		1971868	1					
ANR	1971917	ExpressionStatement	err_string = errno_clarification	318:3:8387:8419	1971868	2	True				
ANR	1971918	AssignmentExpression	err_string = errno_clarification		1971868	0		=			
ANR	1971919	Identifier	err_string		1971868	0					
ANR	1971920	Identifier	errno_clarification		1971868	1					
ANR	1971921	Statement	dprintf	322:2:8473:8479	1971868	11	True				
ANR	1971922	Statement	(	322:9:8480:8480	1971868	12	True				
ANR	1971923	Statement	D_ALWAYS	322:11:8482:8489	1971868	13	True				
ANR	1971924	Statement	","	322:19:8490:8490	1971868	14	True				
ANR	1971925	Statement	"""passwd_cache::cache_uid(): getpwnam(\\""%s\\"") """	322:21:8492:8537	1971868	15	True				
ANR	1971926	Statement	"""failed: %s\\n"""	323:5:8544:8557	1971868	16	True				
ANR	1971927	Statement	","	323:19:8558:8558	1971868	17	True				
ANR	1971928	Statement	user	323:21:8560:8563	1971868	18	True				
ANR	1971929	Statement	","	323:25:8564:8564	1971868	19	True				
ANR	1971930	Statement	err_string	323:27:8566:8575	1971868	20	True				
ANR	1971931	Statement	)	323:38:8577:8577	1971868	21	True				
ANR	1971932	ExpressionStatement		323:39:8578:8578	1971868	22	True				
ANR	1971933	ReturnStatement	return false ;	324:2:8582:8594	1971868	23	True				
ANR	1971934	Identifier	false		1971868	0					
ANR	1971935	ElseStatement	else		1971868	0					
ANR	1971936	CompoundStatement		32:9:949:949	1971868	0					
ANR	1971937	ExpressionStatement	err_string = strerror ( errno )	320:3:8435:8465	1971868	0	True				
ANR	1971938	AssignmentExpression	err_string = strerror ( errno )		1971868	0		=			
ANR	1971939	Identifier	err_string		1971868	0					
ANR	1971940	CallExpression	strerror ( errno )		1971868	1					
ANR	1971941	Callee	strerror		1971868	0					
ANR	1971942	Identifier	strerror		1971868	0					
ANR	1971943	ArgumentList	errno		1971868	1					
ANR	1971944	Argument	errno		1971868	0					
ANR	1971945	Identifier	errno		1971868	0					
ANR	1971946	ReturnStatement	return cache_uid ( pwent ) ;	327:4:8604:8627	1971868	5	True				
ANR	1971947	CallExpression	cache_uid ( pwent )		1971868	0					
ANR	1971948	Callee	cache_uid		1971868	0					
ANR	1971949	Identifier	cache_uid		1971868	0					
ANR	1971950	ArgumentList	pwent		1971868	1					
ANR	1971951	Argument	pwent		1971868	0					
ANR	1971952	Identifier	pwent		1971868	0					
ANR	1971953	ReturnType	bool		1971868	1					
ANR	1971954	Identifier	passwd_cache :: cache_uid		1971868	2					
ANR	1971955	ParameterList	const char * user		1971868	3					
ANR	1971956	Parameter	const char * user	288:24:7462:7477	1971868	0	True				
ANR	1971957	ParameterType	const char *		1971868	0					
ANR	1971958	Identifier	user		1971868	1					
ANR	1971959	CFGEntryNode	ENTRY		1971868		True				
ANR	1971960	CFGExitNode	EXIT		1971868		True				
ANR	1971961	Symbol	strerror		1971868						
ANR	1971962	Symbol	errno		1971868						
ANR	1971963	Symbol	NULL		1971868						
ANR	1971964	Symbol	pwent		1971868						
ANR	1971965	Symbol	err_string		1971868						
ANR	1971966	Symbol	cache_uid		1971868						
ANR	1971967	Symbol	false		1971868						
ANR	1971968	Symbol	errno_clarification		1971868						
ANR	1971969	Symbol	user		1971868						
ANR	1971970	Symbol	getpwnam		1971868						
ANR	1971971	Function	passwd_cache :: cache_uid	336:0:8958:9542							
ANR	1971972	FunctionDef	passwd_cache :: cache_uid (const struct passwd * pwent)		1971971	0					
ANR	1971973	CompoundStatement		337:52:9015:9542	1971971	0					
ANR	1971974	IdentifierDeclStatement	uid_entry * cache_entry ;	339:1:9020:9042	1971971	0	True				
ANR	1971975	IdentifierDecl	* cache_entry		1971971	0					
ANR	1971976	IdentifierDeclType	uid_entry *		1971971	0					
ANR	1971977	Identifier	cache_entry		1971971	1					
ANR	1971978	IdentifierDeclStatement	MyString index ;	340:1:9045:9059	1971971	1	True				
ANR	1971979	IdentifierDecl	index		1971971	0					
ANR	1971980	IdentifierDeclType	MyString		1971971	0					
ANR	1971981	Identifier	index		1971971	1					
ANR	1971982	IfStatement	if ( pwent == NULL )		1971971	2					
ANR	1971983	Condition	pwent == NULL	343:6:9072:9084	1971971	0	True				
ANR	1971984	EqualityExpression	pwent == NULL		1971971	0		==			
ANR	1971985	Identifier	pwent		1971971	0					
ANR	1971986	Identifier	NULL		1971971	1					
ANR	1971987	CompoundStatement		7:22:72:72	1971971	1					
ANR	1971988	ReturnStatement	return false ;	345:2:9123:9135	1971971	0	True				
ANR	1971989	Identifier	false		1971971	0					
ANR	1971990	ElseStatement	else		1971971	0					
ANR	1971991	CompoundStatement		10:8:129:129	1971971	0					
ANR	1971992	ExpressionStatement	index = pwent -> pw_name	348:2:9150:9172	1971971	0	True				
ANR	1971993	AssignmentExpression	index = pwent -> pw_name		1971971	0		=			
ANR	1971994	Identifier	index		1971971	0					
ANR	1971995	PtrMemberAccess	pwent -> pw_name		1971971	1					
ANR	1971996	Identifier	pwent		1971971	0					
ANR	1971997	Identifier	pw_name		1971971	1					
ANR	1971998	IfStatement	"if ( uid_table -> lookup ( index . Value ( ) , cache_entry ) < 0 )"		1971971	1					
ANR	1971999	Condition	"uid_table -> lookup ( index . Value ( ) , cache_entry ) < 0"	350:7:9182:9230	1971971	0	True				
ANR	1972000	RelationalExpression	"uid_table -> lookup ( index . Value ( ) , cache_entry ) < 0"		1971971	0		<			
ANR	1972001	CallExpression	"uid_table -> lookup ( index . Value ( ) , cache_entry )"		1971971	0					
ANR	1972002	Callee	uid_table -> lookup		1971971	0					
ANR	1972003	PtrMemberAccess	uid_table -> lookup		1971971	0					
ANR	1972004	Identifier	uid_table		1971971	0					
ANR	1972005	Identifier	lookup		1971971	1					
ANR	1972006	ArgumentList	index . Value ( )		1971971	1					
ANR	1972007	Argument	index . Value ( )		1971971	0					
ANR	1972008	CallExpression	index . Value ( )		1971971	0					
ANR	1972009	Callee	index . Value		1971971	0					
ANR	1972010	MemberAccess	index . Value		1971971	0					
ANR	1972011	Identifier	index		1971971	0					
ANR	1972012	Identifier	Value		1971971	1					
ANR	1972013	ArgumentList			1971971	1					
ANR	1972014	Argument	cache_entry		1971971	1					
ANR	1972015	Identifier	cache_entry		1971971	0					
ANR	1972016	PrimaryExpression	0		1971971	1					
ANR	1972017	CompoundStatement		14:59:218:218	1971971	1					
ANR	1972018	ExpressionStatement	init_uid_entry ( cache_entry )	352:3:9303:9330	1971971	0	True				
ANR	1972019	CallExpression	init_uid_entry ( cache_entry )		1971971	0					
ANR	1972020	Callee	init_uid_entry		1971971	0					
ANR	1972021	Identifier	init_uid_entry		1971971	0					
ANR	1972022	ArgumentList	cache_entry		1971971	1					
ANR	1972023	Argument	cache_entry		1971971	0					
ANR	1972024	Identifier	cache_entry		1971971	0					
ANR	1972025	ExpressionStatement	cache_entry -> uid = pwent -> pw_uid	355:5:9342:9374	1971971	2	True				
ANR	1972026	AssignmentExpression	cache_entry -> uid = pwent -> pw_uid		1971971	0		=			
ANR	1972027	PtrMemberAccess	cache_entry -> uid		1971971	0					
ANR	1972028	Identifier	cache_entry		1971971	0					
ANR	1972029	Identifier	uid		1971971	1					
ANR	1972030	PtrMemberAccess	pwent -> pw_uid		1971971	1					
ANR	1972031	Identifier	pwent		1971971	0					
ANR	1972032	Identifier	pw_uid		1971971	1					
ANR	1972033	ExpressionStatement	cache_entry -> gid = pwent -> pw_gid	356:5:9381:9413	1971971	3	True				
ANR	1972034	AssignmentExpression	cache_entry -> gid = pwent -> pw_gid		1971971	0		=			
ANR	1972035	PtrMemberAccess	cache_entry -> gid		1971971	0					
ANR	1972036	Identifier	cache_entry		1971971	0					
ANR	1972037	Identifier	gid		1971971	1					
ANR	1972038	PtrMemberAccess	pwent -> pw_gid		1971971	1					
ANR	1972039	Identifier	pwent		1971971	0					
ANR	1972040	Identifier	pw_gid		1971971	1					
ANR	1972041	ExpressionStatement	cache_entry -> lastupdated = time ( NULL )	358:2:9444:9481	1971971	4	True				
ANR	1972042	AssignmentExpression	cache_entry -> lastupdated = time ( NULL )		1971971	0		=			
ANR	1972043	PtrMemberAccess	cache_entry -> lastupdated		1971971	0					
ANR	1972044	Identifier	cache_entry		1971971	0					
ANR	1972045	Identifier	lastupdated		1971971	1					
ANR	1972046	CallExpression	time ( NULL )		1971971	1					
ANR	1972047	Callee	time		1971971	0					
ANR	1972048	Identifier	time		1971971	0					
ANR	1972049	ArgumentList	NULL		1971971	1					
ANR	1972050	Argument	NULL		1971971	0					
ANR	1972051	Identifier	NULL		1971971	0					
ANR	1972052	ExpressionStatement	"uid_table -> insert ( index , cache_entry )"	359:2:9485:9522	1971971	5	True				
ANR	1972053	CallExpression	"uid_table -> insert ( index , cache_entry )"		1971971	0					
ANR	1972054	Callee	uid_table -> insert		1971971	0					
ANR	1972055	PtrMemberAccess	uid_table -> insert		1971971	0					
ANR	1972056	Identifier	uid_table		1971971	0					
ANR	1972057	Identifier	insert		1971971	1					
ANR	1972058	ArgumentList	index		1971971	1					
ANR	1972059	Argument	index		1971971	0					
ANR	1972060	Identifier	index		1971971	0					
ANR	1972061	Argument	cache_entry		1971971	1					
ANR	1972062	Identifier	cache_entry		1971971	0					
ANR	1972063	ReturnStatement	return true ;	360:2:9526:9537	1971971	6	True				
ANR	1972064	Identifier	true		1971971	0					
ANR	1972065	ReturnType	bool		1971971	1					
ANR	1972066	Identifier	passwd_cache :: cache_uid		1971971	2					
ANR	1972067	ParameterList	const struct passwd * pwent		1971971	3					
ANR	1972068	Parameter	const struct passwd * pwent	337:24:8987:9012	1971971	0	True				
ANR	1972069	ParameterType	const struct passwd *		1971971	0					
ANR	1972070	Identifier	pwent		1971971	1					
ANR	1972071	CFGEntryNode	ENTRY		1971971		True				
ANR	1972072	CFGExitNode	EXIT		1971971		True				
ANR	1972073	Symbol	pwent -> pw_gid		1971971						
ANR	1972074	Symbol	* cache_entry		1971971						
ANR	1972075	Symbol	uid_table		1971971						
ANR	1972076	Symbol	NULL		1971971						
ANR	1972077	Symbol	cache_entry -> uid		1971971						
ANR	1972078	Symbol	pwent		1971971						
ANR	1972079	Symbol	false		1971971						
ANR	1972080	Symbol	index		1971971						
ANR	1972081	Symbol	* pwent		1971971						
ANR	1972082	Symbol	index . Value		1971971						
ANR	1972083	Symbol	uid_table -> lookup		1971971						
ANR	1972084	Symbol	cache_entry -> lastupdated		1971971						
ANR	1972085	Symbol	pwent -> pw_uid		1971971						
ANR	1972086	Symbol	cache_entry -> gid		1971971						
ANR	1972087	Symbol	* uid_table		1971971						
ANR	1972088	Symbol	true		1971971						
ANR	1972089	Symbol	time		1971971						
ANR	1972090	Symbol	pwent -> pw_name		1971971						
ANR	1972091	Symbol	cache_entry		1971971						
ANR	1972092	Function	passwd_cache :: num_groups	365:0:9603:10093							
ANR	1972093	FunctionDef	passwd_cache :: num_groups (const char * user)		1972092	0					
ANR	1972094	CompoundStatement		366:43:9650:10093	1972092	0					
ANR	1972095	IdentifierDeclStatement	group_entry * cache_entry ;	368:1:9654:9678	1972092	0	True				
ANR	1972096	IdentifierDecl	* cache_entry		1972092	0					
ANR	1972097	IdentifierDeclType	group_entry *		1972092	0					
ANR	1972098	Identifier	cache_entry		1972092	1					
ANR	1972099	IfStatement	"if ( ! lookup_group ( user , cache_entry ) )"		1972092	1					
ANR	1972100	Condition	"! lookup_group ( user , cache_entry )"	370:6:9687:9719	1972092	0	True				
ANR	1972101	UnaryOperationExpression	"! lookup_group ( user , cache_entry )"		1972092	0					
ANR	1972102	UnaryOperator	!		1972092	0					
ANR	1972103	CallExpression	"lookup_group ( user , cache_entry )"		1972092	1					
ANR	1972104	Callee	lookup_group		1972092	0					
ANR	1972105	Identifier	lookup_group		1972092	0					
ANR	1972106	ArgumentList	user		1972092	1					
ANR	1972107	Argument	user		1972092	0					
ANR	1972108	Identifier	user		1972092	0					
ANR	1972109	Argument	cache_entry		1972092	1					
ANR	1972110	Identifier	cache_entry		1972092	0					
ANR	1972111	CompoundStatement		5:42:72:72	1972092	1					
ANR	1972112	IfStatement	if ( cache_groups ( user ) )		1972092	0					
ANR	1972113	Condition	cache_groups ( user )	374:7:9805:9822	1972092	0	True				
ANR	1972114	CallExpression	cache_groups ( user )		1972092	0					
ANR	1972115	Callee	cache_groups		1972092	0					
ANR	1972116	Identifier	cache_groups		1972092	0					
ANR	1972117	ArgumentList	user		1972092	1					
ANR	1972118	Argument	user		1972092	0					
ANR	1972119	Identifier	user		1972092	0					
ANR	1972120	CompoundStatement		9:28:175:175	1972092	1					
ANR	1972121	ExpressionStatement	"lookup_group ( user , cache_entry )"	376:3:9893:9924	1972092	0	True				
ANR	1972122	CallExpression	"lookup_group ( user , cache_entry )"		1972092	0					
ANR	1972123	Callee	lookup_group		1972092	0					
ANR	1972124	Identifier	lookup_group		1972092	0					
ANR	1972125	ArgumentList	user		1972092	1					
ANR	1972126	Argument	user		1972092	0					
ANR	1972127	Identifier	user		1972092	0					
ANR	1972128	Argument	cache_entry		1972092	1					
ANR	1972129	Identifier	cache_entry		1972092	0					
ANR	1972130	ElseStatement	else		1972092	0					
ANR	1972131	CompoundStatement		12:9:284:284	1972092	0					
ANR	1972132	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to cache info for user %s\\n"" , user )"	378:3:9940:10009	1972092	0	True				
ANR	1972133	CallExpression	"dprintf ( D_ALWAYS , ""Failed to cache info for user %s\\n"" , user )"		1972092	0					
ANR	1972134	Callee	dprintf		1972092	0					
ANR	1972135	Identifier	dprintf		1972092	0					
ANR	1972136	ArgumentList	D_ALWAYS		1972092	1					
ANR	1972137	Argument	D_ALWAYS		1972092	0					
ANR	1972138	Identifier	D_ALWAYS		1972092	0					
ANR	1972139	Argument	"""Failed to cache info for user %s\\n"""		1972092	1					
ANR	1972140	PrimaryExpression	"""Failed to cache info for user %s\\n"""		1972092	0					
ANR	1972141	Argument	user		1972092	2					
ANR	1972142	Identifier	user		1972092	0					
ANR	1972143	ReturnStatement	return - 1 ;	380:3:10014:10023	1972092	1	True				
ANR	1972144	UnaryOperationExpression	- 1		1972092	0					
ANR	1972145	UnaryOperator	-		1972092	0					
ANR	1972146	PrimaryExpression	1		1972092	1					
ANR	1972147	ElseStatement	else		1972092	0					
ANR	1972148	CompoundStatement		17:8:386:386	1972092	0					
ANR	1972149	ReturnStatement	return cache_entry -> gidlist_sz ;	385:1:10061:10091	1972092	2	True				
ANR	1972150	PtrMemberAccess	cache_entry -> gidlist_sz		1972092	0					
ANR	1972151	Identifier	cache_entry		1972092	0					
ANR	1972152	Identifier	gidlist_sz		1972092	1					
ANR	1972153	ReturnType	int		1972092	1					
ANR	1972154	Identifier	passwd_cache :: num_groups		1972092	2					
ANR	1972155	ParameterList	const char * user		1972092	3					
ANR	1972156	Parameter	const char * user	366:25:9632:9647	1972092	0	True				
ANR	1972157	ParameterType	const char *		1972092	0					
ANR	1972158	Identifier	user		1972092	1					
ANR	1972159	CFGEntryNode	ENTRY		1972092		True				
ANR	1972160	CFGExitNode	EXIT		1972092		True				
ANR	1972161	Symbol	* cache_entry		1972092						
ANR	1972162	Symbol	cache_groups		1972092						
ANR	1972163	Symbol	lookup_group		1972092						
ANR	1972164	Symbol	D_ALWAYS		1972092						
ANR	1972165	Symbol	cache_entry -> gidlist_sz		1972092						
ANR	1972166	Symbol	user		1972092						
ANR	1972167	Symbol	cache_entry		1972092						
ANR	1972168	Function	passwd_cache :: get_groups	389:0:10137:11013							
ANR	1972169	FunctionDef	"passwd_cache :: get_groups (const char * user , size_t groupsize , gid_t gid_list [ ])"		1972168	0					
ANR	1972170	CompoundStatement		390:81:10223:11013	1972168	0					
ANR	1972171	IdentifierDeclStatement	unsigned int i ;	392:4:10230:10244	1972168	0	True				
ANR	1972172	IdentifierDecl	i		1972168	0					
ANR	1972173	IdentifierDeclType	unsigned int		1972168	0					
ANR	1972174	Identifier	i		1972168	1					
ANR	1972175	IdentifierDeclStatement	group_entry * cache_entry ;	393:1:10247:10271	1972168	1	True				
ANR	1972176	IdentifierDecl	* cache_entry		1972168	0					
ANR	1972177	IdentifierDeclType	group_entry *		1972168	0					
ANR	1972178	Identifier	cache_entry		1972168	1					
ANR	1972179	IfStatement	"if ( ! lookup_group ( user , cache_entry ) )"		1972168	2					
ANR	1972180	Condition	"! lookup_group ( user , cache_entry )"	397:6:10329:10361	1972168	0	True				
ANR	1972181	UnaryOperationExpression	"! lookup_group ( user , cache_entry )"		1972168	0					
ANR	1972182	UnaryOperator	!		1972168	0					
ANR	1972183	CallExpression	"lookup_group ( user , cache_entry )"		1972168	1					
ANR	1972184	Callee	lookup_group		1972168	0					
ANR	1972185	Identifier	lookup_group		1972168	0					
ANR	1972186	ArgumentList	user		1972168	1					
ANR	1972187	Argument	user		1972168	0					
ANR	1972188	Identifier	user		1972168	0					
ANR	1972189	Argument	cache_entry		1972168	1					
ANR	1972190	Identifier	cache_entry		1972168	0					
ANR	1972191	CompoundStatement		8:42:141:141	1972168	1					
ANR	1972192	IfStatement	if ( cache_groups ( user ) )		1972168	0					
ANR	1972193	Condition	cache_groups ( user )	401:7:10447:10464	1972168	0	True				
ANR	1972194	CallExpression	cache_groups ( user )		1972168	0					
ANR	1972195	Callee	cache_groups		1972168	0					
ANR	1972196	Identifier	cache_groups		1972168	0					
ANR	1972197	ArgumentList	user		1972168	1					
ANR	1972198	Argument	user		1972168	0					
ANR	1972199	Identifier	user		1972168	0					
ANR	1972200	CompoundStatement		12:28:244:244	1972168	1					
ANR	1972201	ExpressionStatement	"lookup_group ( user , cache_entry )"	403:3:10535:10566	1972168	0	True				
ANR	1972202	CallExpression	"lookup_group ( user , cache_entry )"		1972168	0					
ANR	1972203	Callee	lookup_group		1972168	0					
ANR	1972204	Identifier	lookup_group		1972168	0					
ANR	1972205	ArgumentList	user		1972168	1					
ANR	1972206	Argument	user		1972168	0					
ANR	1972207	Identifier	user		1972168	0					
ANR	1972208	Argument	cache_entry		1972168	1					
ANR	1972209	Identifier	cache_entry		1972168	0					
ANR	1972210	ElseStatement	else		1972168	0					
ANR	1972211	CompoundStatement		15:9:353:353	1972168	0					
ANR	1972212	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to cache info for user %s\\n"" , user )"	405:3:10582:10651	1972168	0	True				
ANR	1972213	CallExpression	"dprintf ( D_ALWAYS , ""Failed to cache info for user %s\\n"" , user )"		1972168	0					
ANR	1972214	Callee	dprintf		1972168	0					
ANR	1972215	Identifier	dprintf		1972168	0					
ANR	1972216	ArgumentList	D_ALWAYS		1972168	1					
ANR	1972217	Argument	D_ALWAYS		1972168	0					
ANR	1972218	Identifier	D_ALWAYS		1972168	0					
ANR	1972219	Argument	"""Failed to cache info for user %s\\n"""		1972168	1					
ANR	1972220	PrimaryExpression	"""Failed to cache info for user %s\\n"""		1972168	0					
ANR	1972221	Argument	user		1972168	2					
ANR	1972222	Identifier	user		1972168	0					
ANR	1972223	ReturnStatement	return false ;	407:3:10656:10668	1972168	1	True				
ANR	1972224	Identifier	false		1972168	0					
ANR	1972225	ElseStatement	else		1972168	0					
ANR	1972226	CompoundStatement		20:8:458:458	1972168	0					
ANR	1972227	IfStatement	if ( cache_entry -> gidlist_sz > groupsize )		1972168	3					
ANR	1972228	Condition	cache_entry -> gidlist_sz > groupsize	413:6:10713:10747	1972168	0	True				
ANR	1972229	RelationalExpression	cache_entry -> gidlist_sz > groupsize		1972168	0		>			
ANR	1972230	PtrMemberAccess	cache_entry -> gidlist_sz		1972168	0					
ANR	1972231	Identifier	cache_entry		1972168	0					
ANR	1972232	Identifier	gidlist_sz		1972168	1					
ANR	1972233	Identifier	groupsize		1972168	1					
ANR	1972234	CompoundStatement		24:44:527:527	1972168	1					
ANR	1972235	ExpressionStatement	"dprintf ( D_ALWAYS , ""Inadequate size for gid list!\\n"" )"	414:2:10755:10807	1972168	0	True				
ANR	1972236	CallExpression	"dprintf ( D_ALWAYS , ""Inadequate size for gid list!\\n"" )"		1972168	0					
ANR	1972237	Callee	dprintf		1972168	0					
ANR	1972238	Identifier	dprintf		1972168	0					
ANR	1972239	ArgumentList	D_ALWAYS		1972168	1					
ANR	1972240	Argument	D_ALWAYS		1972168	0					
ANR	1972241	Identifier	D_ALWAYS		1972168	0					
ANR	1972242	Argument	"""Inadequate size for gid list!\\n"""		1972168	1					
ANR	1972243	PrimaryExpression	"""Inadequate size for gid list!\\n"""		1972168	0					
ANR	1972244	ReturnStatement	return false ;	415:2:10811:10823	1972168	1	True				
ANR	1972245	Identifier	false		1972168	0					
ANR	1972246	ForStatement	for ( i = 0 ; ( i < groupsize && i < cache_entry -> gidlist_sz ) ; i ++ )		1972168	4					
ANR	1972247	ForInit	i = 0 ;	419:6:10899:10902	1972168	0	True				
ANR	1972248	AssignmentExpression	i = 0		1972168	0		=			
ANR	1972249	Identifier	i		1972168	0					
ANR	1972250	PrimaryExpression	0		1972168	1					
ANR	1972251	Condition	i < groupsize && i < cache_entry -> gidlist_sz	419:11:10904:10945	1972168	1	True				
ANR	1972252	AndExpression	i < groupsize && i < cache_entry -> gidlist_sz		1972168	0		&&			
ANR	1972253	RelationalExpression	i < groupsize		1972168	0		<			
ANR	1972254	Identifier	i		1972168	0					
ANR	1972255	Identifier	groupsize		1972168	1					
ANR	1972256	RelationalExpression	i < cache_entry -> gidlist_sz		1972168	1		<			
ANR	1972257	Identifier	i		1972168	0					
ANR	1972258	PtrMemberAccess	cache_entry -> gidlist_sz		1972168	1					
ANR	1972259	Identifier	cache_entry		1972168	0					
ANR	1972260	Identifier	gidlist_sz		1972168	1					
ANR	1972261	PostIncDecOperationExpression	i ++	419:55:10948:10950	1972168	2	True				
ANR	1972262	Identifier	i		1972168	0					
ANR	1972263	IncDec	++		1972168	1					
ANR	1972264	CompoundStatement		30:60:729:729	1972168	3					
ANR	1972265	ExpressionStatement	gid_list [ i ] = cache_entry -> gidlist [ i ]	420:2:10957:10994	1972168	0	True				
ANR	1972266	AssignmentExpression	gid_list [ i ] = cache_entry -> gidlist [ i ]		1972168	0		=			
ANR	1972267	ArrayIndexing	gid_list [ i ]		1972168	0					
ANR	1972268	Identifier	gid_list		1972168	0					
ANR	1972269	Identifier	i		1972168	1					
ANR	1972270	ArrayIndexing	cache_entry -> gidlist [ i ]		1972168	1					
ANR	1972271	PtrMemberAccess	cache_entry -> gidlist		1972168	0					
ANR	1972272	Identifier	cache_entry		1972168	0					
ANR	1972273	Identifier	gidlist		1972168	1					
ANR	1972274	Identifier	i		1972168	1					
ANR	1972275	ReturnStatement	return true ;	422:1:11000:11011	1972168	5	True				
ANR	1972276	Identifier	true		1972168	0					
ANR	1972277	ReturnType	bool		1972168	1					
ANR	1972278	Identifier	passwd_cache :: get_groups		1972168	2					
ANR	1972279	ParameterList	"const char * user , size_t groupsize , gid_t gid_list [ ]"		1972168	3					
ANR	1972280	Parameter	const char * user	390:26:10168:10183	1972168	0	True				
ANR	1972281	ParameterType	const char *		1972168	0					
ANR	1972282	Identifier	user		1972168	1					
ANR	1972283	Parameter	size_t groupsize	390:44:10186:10201	1972168	1	True				
ANR	1972284	ParameterType	size_t		1972168	0					
ANR	1972285	Identifier	groupsize		1972168	1					
ANR	1972286	Parameter	gid_t gid_list [ ]	390:62:10204:10219	1972168	2	True				
ANR	1972287	ParameterType	gid_t [ ]		1972168	0					
ANR	1972288	Identifier	gid_list		1972168	1					
ANR	1972289	CFGEntryNode	ENTRY		1972168		True				
ANR	1972290	CFGExitNode	EXIT		1972168		True				
ANR	1972291	Symbol	* cache_entry		1972168						
ANR	1972292	Symbol	gid_list		1972168						
ANR	1972293	Symbol	cache_groups		1972168						
ANR	1972294	Symbol	* gid_list		1972168						
ANR	1972295	Symbol	D_ALWAYS		1972168						
ANR	1972296	Symbol	false		1972168						
ANR	1972297	Symbol	cache_entry -> gidlist_sz		1972168						
ANR	1972298	Symbol	groupsize		1972168						
ANR	1972299	Symbol	i		1972168						
ANR	1972300	Symbol	* cache_entry -> gidlist		1972168						
ANR	1972301	Symbol	* i		1972168						
ANR	1972302	Symbol	cache_entry -> gidlist		1972168						
ANR	1972303	Symbol	lookup_group		1972168						
ANR	1972304	Symbol	true		1972168						
ANR	1972305	Symbol	user		1972168						
ANR	1972306	Symbol	* * cache_entry		1972168						
ANR	1972307	Symbol	cache_entry		1972168						
ANR	1972308	Function	passwd_cache :: get_user_uid	426:0:11017:11213							
ANR	1972309	FunctionDef	"passwd_cache :: get_user_uid (const char * user , uid_t & uid)"		1972308	0					
ANR	1972310	CompoundStatement		428:0:11081:11213	1972308	0					
ANR	1972311	IdentifierDeclStatement	uid_entry * cache_entry ;	429:1:11084:11106	1972308	0	True				
ANR	1972312	IdentifierDecl	* cache_entry		1972308	0					
ANR	1972313	IdentifierDeclType	uid_entry *		1972308	0					
ANR	1972314	Identifier	cache_entry		1972308	1					
ANR	1972315	IfStatement	"if ( ! lookup_uid_entry ( user , cache_entry ) )"		1972308	1					
ANR	1972316	Condition	"! lookup_uid_entry ( user , cache_entry )"	430:5:11113:11149	1972308	0	True				
ANR	1972317	UnaryOperationExpression	"! lookup_uid_entry ( user , cache_entry )"		1972308	0					
ANR	1972318	UnaryOperator	!		1972308	0					
ANR	1972319	CallExpression	"lookup_uid_entry ( user , cache_entry )"		1972308	1					
ANR	1972320	Callee	lookup_uid_entry		1972308	0					
ANR	1972321	Identifier	lookup_uid_entry		1972308	0					
ANR	1972322	ArgumentList	user		1972308	1					
ANR	1972323	Argument	user		1972308	0					
ANR	1972324	Identifier	user		1972308	0					
ANR	1972325	Argument	cache_entry		1972308	1					
ANR	1972326	Identifier	cache_entry		1972308	0					
ANR	1972327	CompoundStatement		3:45:71:71	1972308	1					
ANR	1972328	ReturnStatement	return false ;	431:2:11157:11169	1972308	0	True				
ANR	1972329	Identifier	false		1972308	0					
ANR	1972330	ExpressionStatement	uid = cache_entry -> uid	433:1:11175:11197	1972308	2	True				
ANR	1972331	AssignmentExpression	uid = cache_entry -> uid		1972308	0		=			
ANR	1972332	Identifier	uid		1972308	0					
ANR	1972333	PtrMemberAccess	cache_entry -> uid		1972308	1					
ANR	1972334	Identifier	cache_entry		1972308	0					
ANR	1972335	Identifier	uid		1972308	1					
ANR	1972336	ReturnStatement	return true ;	434:1:11200:11211	1972308	3	True				
ANR	1972337	Identifier	true		1972308	0					
ANR	1972338	ReturnType	bool		1972308	1					
ANR	1972339	Identifier	passwd_cache :: get_user_uid		1972308	2					
ANR	1972340	ParameterList	"const char * user , uid_t & uid"		1972308	3					
ANR	1972341	Parameter	const char * user	427:28:11050:11065	1972308	0	True				
ANR	1972342	ParameterType	const char *		1972308	0					
ANR	1972343	Identifier	user		1972308	1					
ANR	1972344	Parameter	uid_t & uid	427:46:11068:11077	1972308	1	True				
ANR	1972345	ParameterType	uid_t &		1972308	0					
ANR	1972346	Identifier	uid		1972308	1					
ANR	1972347	CFGEntryNode	ENTRY		1972308		True				
ANR	1972348	CFGExitNode	EXIT		1972308		True				
ANR	1972349	Symbol	uid		1972308						
ANR	1972350	Symbol	* cache_entry		1972308						
ANR	1972351	Symbol	cache_entry -> uid		1972308						
ANR	1972352	Symbol	lookup_uid_entry		1972308						
ANR	1972353	Symbol	false		1972308						
ANR	1972354	Symbol	true		1972308						
ANR	1972355	Symbol	user		1972308						
ANR	1972356	Symbol	cache_entry		1972308						
ANR	1972357	Function	passwd_cache :: get_user_gid	438:0:11217:11413							
ANR	1972358	FunctionDef	"passwd_cache :: get_user_gid (const char * user , gid_t & gid)"		1972357	0					
ANR	1972359	CompoundStatement		440:0:11281:11413	1972357	0					
ANR	1972360	IdentifierDeclStatement	uid_entry * cache_entry ;	441:1:11284:11306	1972357	0	True				
ANR	1972361	IdentifierDecl	* cache_entry		1972357	0					
ANR	1972362	IdentifierDeclType	uid_entry *		1972357	0					
ANR	1972363	Identifier	cache_entry		1972357	1					
ANR	1972364	IfStatement	"if ( ! lookup_uid_entry ( user , cache_entry ) )"		1972357	1					
ANR	1972365	Condition	"! lookup_uid_entry ( user , cache_entry )"	442:5:11313:11349	1972357	0	True				
ANR	1972366	UnaryOperationExpression	"! lookup_uid_entry ( user , cache_entry )"		1972357	0					
ANR	1972367	UnaryOperator	!		1972357	0					
ANR	1972368	CallExpression	"lookup_uid_entry ( user , cache_entry )"		1972357	1					
ANR	1972369	Callee	lookup_uid_entry		1972357	0					
ANR	1972370	Identifier	lookup_uid_entry		1972357	0					
ANR	1972371	ArgumentList	user		1972357	1					
ANR	1972372	Argument	user		1972357	0					
ANR	1972373	Identifier	user		1972357	0					
ANR	1972374	Argument	cache_entry		1972357	1					
ANR	1972375	Identifier	cache_entry		1972357	0					
ANR	1972376	CompoundStatement		3:45:71:71	1972357	1					
ANR	1972377	ReturnStatement	return false ;	443:2:11357:11369	1972357	0	True				
ANR	1972378	Identifier	false		1972357	0					
ANR	1972379	ExpressionStatement	gid = cache_entry -> gid	445:1:11375:11397	1972357	2	True				
ANR	1972380	AssignmentExpression	gid = cache_entry -> gid		1972357	0		=			
ANR	1972381	Identifier	gid		1972357	0					
ANR	1972382	PtrMemberAccess	cache_entry -> gid		1972357	1					
ANR	1972383	Identifier	cache_entry		1972357	0					
ANR	1972384	Identifier	gid		1972357	1					
ANR	1972385	ReturnStatement	return true ;	446:1:11400:11411	1972357	3	True				
ANR	1972386	Identifier	true		1972357	0					
ANR	1972387	ReturnType	bool		1972357	1					
ANR	1972388	Identifier	passwd_cache :: get_user_gid		1972357	2					
ANR	1972389	ParameterList	"const char * user , gid_t & gid"		1972357	3					
ANR	1972390	Parameter	const char * user	439:28:11250:11265	1972357	0	True				
ANR	1972391	ParameterType	const char *		1972357	0					
ANR	1972392	Identifier	user		1972357	1					
ANR	1972393	Parameter	gid_t & gid	439:46:11268:11277	1972357	1	True				
ANR	1972394	ParameterType	gid_t &		1972357	0					
ANR	1972395	Identifier	gid		1972357	1					
ANR	1972396	CFGEntryNode	ENTRY		1972357		True				
ANR	1972397	CFGExitNode	EXIT		1972357		True				
ANR	1972398	Symbol	* cache_entry		1972357						
ANR	1972399	Symbol	gid		1972357						
ANR	1972400	Symbol	lookup_uid_entry		1972357						
ANR	1972401	Symbol	cache_entry -> gid		1972357						
ANR	1972402	Symbol	false		1972357						
ANR	1972403	Symbol	true		1972357						
ANR	1972404	Symbol	user		1972357						
ANR	1972405	Symbol	cache_entry		1972357						
ANR	1972406	Function	passwd_cache :: get_user_ids	450:0:11417:11650							
ANR	1972407	FunctionDef	"passwd_cache :: get_user_ids (const char * user , uid_t & uid , gid_t & gid)"		1972406	0					
ANR	1972408	CompoundStatement		452:0:11493:11650	1972406	0					
ANR	1972409	IdentifierDeclStatement	uid_entry * cache_entry ;	453:1:11496:11518	1972406	0	True				
ANR	1972410	IdentifierDecl	* cache_entry		1972406	0					
ANR	1972411	IdentifierDeclType	uid_entry *		1972406	0					
ANR	1972412	Identifier	cache_entry		1972406	1					
ANR	1972413	IfStatement	"if ( ! lookup_uid_entry ( user , cache_entry ) )"		1972406	1					
ANR	1972414	Condition	"! lookup_uid_entry ( user , cache_entry )"	454:5:11525:11561	1972406	0	True				
ANR	1972415	UnaryOperationExpression	"! lookup_uid_entry ( user , cache_entry )"		1972406	0					
ANR	1972416	UnaryOperator	!		1972406	0					
ANR	1972417	CallExpression	"lookup_uid_entry ( user , cache_entry )"		1972406	1					
ANR	1972418	Callee	lookup_uid_entry		1972406	0					
ANR	1972419	Identifier	lookup_uid_entry		1972406	0					
ANR	1972420	ArgumentList	user		1972406	1					
ANR	1972421	Argument	user		1972406	0					
ANR	1972422	Identifier	user		1972406	0					
ANR	1972423	Argument	cache_entry		1972406	1					
ANR	1972424	Identifier	cache_entry		1972406	0					
ANR	1972425	CompoundStatement		3:45:71:71	1972406	1					
ANR	1972426	ReturnStatement	return false ;	455:2:11569:11581	1972406	0	True				
ANR	1972427	Identifier	false		1972406	0					
ANR	1972428	ExpressionStatement	uid = cache_entry -> uid	457:1:11587:11609	1972406	2	True				
ANR	1972429	AssignmentExpression	uid = cache_entry -> uid		1972406	0		=			
ANR	1972430	Identifier	uid		1972406	0					
ANR	1972431	PtrMemberAccess	cache_entry -> uid		1972406	1					
ANR	1972432	Identifier	cache_entry		1972406	0					
ANR	1972433	Identifier	uid		1972406	1					
ANR	1972434	ExpressionStatement	gid = cache_entry -> gid	458:1:11612:11634	1972406	3	True				
ANR	1972435	AssignmentExpression	gid = cache_entry -> gid		1972406	0		=			
ANR	1972436	Identifier	gid		1972406	0					
ANR	1972437	PtrMemberAccess	cache_entry -> gid		1972406	1					
ANR	1972438	Identifier	cache_entry		1972406	0					
ANR	1972439	Identifier	gid		1972406	1					
ANR	1972440	ReturnStatement	return true ;	459:1:11637:11648	1972406	4	True				
ANR	1972441	Identifier	true		1972406	0					
ANR	1972442	ReturnType	bool		1972406	1					
ANR	1972443	Identifier	passwd_cache :: get_user_ids		1972406	2					
ANR	1972444	ParameterList	"const char * user , uid_t & uid , gid_t & gid"		1972406	3					
ANR	1972445	Parameter	const char * user	451:28:11450:11465	1972406	0	True				
ANR	1972446	ParameterType	const char *		1972406	0					
ANR	1972447	Identifier	user		1972406	1					
ANR	1972448	Parameter	uid_t & uid	451:46:11468:11477	1972406	1	True				
ANR	1972449	ParameterType	uid_t &		1972406	0					
ANR	1972450	Identifier	uid		1972406	1					
ANR	1972451	Parameter	gid_t & gid	451:58:11480:11489	1972406	2	True				
ANR	1972452	ParameterType	gid_t &		1972406	0					
ANR	1972453	Identifier	gid		1972406	1					
ANR	1972454	CFGEntryNode	ENTRY		1972406		True				
ANR	1972455	CFGExitNode	EXIT		1972406		True				
ANR	1972456	Symbol	uid		1972406						
ANR	1972457	Symbol	* cache_entry		1972406						
ANR	1972458	Symbol	gid		1972406						
ANR	1972459	Symbol	cache_entry -> uid		1972406						
ANR	1972460	Symbol	lookup_uid_entry		1972406						
ANR	1972461	Symbol	cache_entry -> gid		1972406						
ANR	1972462	Symbol	false		1972406						
ANR	1972463	Symbol	true		1972406						
ANR	1972464	Symbol	user		1972406						
ANR	1972465	Symbol	cache_entry		1972406						
ANR	1972466	Function	passwd_cache :: lookup_uid_entry	463:0:11654:12052							
ANR	1972467	FunctionDef	"passwd_cache :: lookup_uid_entry (const char * user , uid_entry * & uce)"		1972466	0					
ANR	1972468	CompoundStatement		465:0:11727:12052	1972466	0					
ANR	1972469	IfStatement	"if ( ! lookup_uid ( user , uce ) )"		1972466	0					
ANR	1972470	Condition	"! lookup_uid ( user , uce )"	466:5:11734:11756	1972466	0	True				
ANR	1972471	UnaryOperationExpression	"! lookup_uid ( user , uce )"		1972466	0					
ANR	1972472	UnaryOperator	!		1972466	0					
ANR	1972473	CallExpression	"lookup_uid ( user , uce )"		1972466	1					
ANR	1972474	Callee	lookup_uid		1972466	0					
ANR	1972475	Identifier	lookup_uid		1972466	0					
ANR	1972476	ArgumentList	user		1972466	1					
ANR	1972477	Argument	user		1972466	0					
ANR	1972478	Identifier	user		1972466	0					
ANR	1972479	Argument	uce		1972466	1					
ANR	1972480	Identifier	uce		1972466	0					
ANR	1972481	CompoundStatement		2:31:32:32	1972466	1					
ANR	1972482	IfStatement	if ( cache_uid ( user ) )		1972466	0					
ANR	1972483	Condition	cache_uid ( user )	468:6:11788:11802	1972466	0	True				
ANR	1972484	CallExpression	cache_uid ( user )		1972466	0					
ANR	1972485	Callee	cache_uid		1972466	0					
ANR	1972486	Identifier	cache_uid		1972466	0					
ANR	1972487	ArgumentList	user		1972466	1					
ANR	1972488	Argument	user		1972466	0					
ANR	1972489	Identifier	user		1972466	0					
ANR	1972490	CompoundStatement		4:24:78:78	1972466	1					
ANR	1972491	IfStatement	"if ( ! lookup_uid ( user , uce ) )"		1972466	0					
ANR	1972492	Condition	"! lookup_uid ( user , uce )"	469:7:11815:11836	1972466	0	True				
ANR	1972493	UnaryOperationExpression	"! lookup_uid ( user , uce )"		1972466	0					
ANR	1972494	UnaryOperator	!		1972466	0					
ANR	1972495	CallExpression	"lookup_uid ( user , uce )"		1972466	1					
ANR	1972496	Callee	lookup_uid		1972466	0					
ANR	1972497	Identifier	lookup_uid		1972466	0					
ANR	1972498	ArgumentList	user		1972466	1					
ANR	1972499	Argument	user		1972466	0					
ANR	1972500	Identifier	user		1972466	0					
ANR	1972501	Argument	uce		1972466	1					
ANR	1972502	Identifier	uce		1972466	0					
ANR	1972503	CompoundStatement		5:32:112:112	1972466	1					
ANR	1972504	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to cache user info for user %s\\n"" , user )"	470:4:11846:11922	1972466	0	True				
ANR	1972505	CallExpression	"dprintf ( D_ALWAYS , ""Failed to cache user info for user %s\\n"" , user )"		1972466	0					
ANR	1972506	Callee	dprintf		1972466	0					
ANR	1972507	Identifier	dprintf		1972466	0					
ANR	1972508	ArgumentList	D_ALWAYS		1972466	1					
ANR	1972509	Argument	D_ALWAYS		1972466	0					
ANR	1972510	Identifier	D_ALWAYS		1972466	0					
ANR	1972511	Argument	"""Failed to cache user info for user %s\\n"""		1972466	1					
ANR	1972512	PrimaryExpression	"""Failed to cache user info for user %s\\n"""		1972466	0					
ANR	1972513	Argument	user		1972466	2					
ANR	1972514	Identifier	user		1972466	0					
ANR	1972515	ReturnStatement	return false ;	472:4:11928:11940	1972466	1	True				
ANR	1972516	Identifier	false		1972466	0					
ANR	1972517	ElseStatement	else		1972466	0					
ANR	1972518	CompoundStatement		10:9:228:228	1972466	0					
ANR	1972519	ReturnStatement	return false ;	476:3:12016:12028	1972466	0	True				
ANR	1972520	Identifier	false		1972466	0					
ANR	1972521	ReturnStatement	return true ;	479:1:12039:12050	1972466	1	True				
ANR	1972522	Identifier	true		1972466	0					
ANR	1972523	ReturnType	bool		1972466	1					
ANR	1972524	Identifier	passwd_cache :: lookup_uid_entry		1972466	2					
ANR	1972525	ParameterList	"const char * user , uid_entry * & uce"		1972466	3					
ANR	1972526	Parameter	const char * user	464:32:11691:11706	1972466	0	True				
ANR	1972527	ParameterType	const char *		1972466	0					
ANR	1972528	Identifier	user		1972466	1					
ANR	1972529	Parameter	uid_entry * & uce	464:50:11709:11723	1972466	1	True				
ANR	1972530	ParameterType	uid_entry * &		1972466	0					
ANR	1972531	Identifier	uce		1972466	1					
ANR	1972532	CFGEntryNode	ENTRY		1972466		True				
ANR	1972533	CFGExitNode	EXIT		1972466		True				
ANR	1972534	Symbol	cache_uid		1972466						
ANR	1972535	Symbol	uce		1972466						
ANR	1972536	Symbol	lookup_uid		1972466						
ANR	1972537	Symbol	D_ALWAYS		1972466						
ANR	1972538	Symbol	false		1972466						
ANR	1972539	Symbol	true		1972466						
ANR	1972540	Symbol	user		1972466						
ANR	1972541	Function	passwd_cache :: get_user_name	483:0:12056:12642							
ANR	1972542	FunctionDef	"passwd_cache :: get_user_name (const uid_t uid , char * & user)"		1972541	0					
ANR	1972543	CompoundStatement		484:58:12119:12642	1972541	0					
ANR	1972544	IdentifierDeclStatement	uid_entry * ent ;	486:1:12123:12137	1972541	0	True				
ANR	1972545	IdentifierDecl	* ent		1972541	0					
ANR	1972546	IdentifierDeclType	uid_entry *		1972541	0					
ANR	1972547	Identifier	ent		1972541	1					
ANR	1972548	IdentifierDeclStatement	struct passwd * pwd ;	487:1:12140:12158	1972541	1	True				
ANR	1972549	IdentifierDecl	* pwd		1972541	0					
ANR	1972550	IdentifierDeclType	struct passwd *		1972541	0					
ANR	1972551	Identifier	pwd		1972541	1					
ANR	1972552	IdentifierDeclStatement	MyString index ;	488:1:12161:12175	1972541	2	True				
ANR	1972553	IdentifierDecl	index		1972541	0					
ANR	1972554	IdentifierDeclType	MyString		1972541	0					
ANR	1972555	Identifier	index		1972541	1					
ANR	1972556	ExpressionStatement	uid_table -> startIterations ( )	490:1:12179:12207	1972541	3	True				
ANR	1972557	CallExpression	uid_table -> startIterations ( )		1972541	0					
ANR	1972558	Callee	uid_table -> startIterations		1972541	0					
ANR	1972559	PtrMemberAccess	uid_table -> startIterations		1972541	0					
ANR	1972560	Identifier	uid_table		1972541	0					
ANR	1972561	Identifier	startIterations		1972541	1					
ANR	1972562	ArgumentList			1972541	1					
ANR	1972563	WhileStatement	"while ( uid_table -> iterate ( index , ent ) )"		1972541	4					
ANR	1972564	Condition	"uid_table -> iterate ( index , ent )"	491:9:12218:12247	1972541	0	True				
ANR	1972565	CallExpression	"uid_table -> iterate ( index , ent )"		1972541	0					
ANR	1972566	Callee	uid_table -> iterate		1972541	0					
ANR	1972567	PtrMemberAccess	uid_table -> iterate		1972541	0					
ANR	1972568	Identifier	uid_table		1972541	0					
ANR	1972569	Identifier	iterate		1972541	1					
ANR	1972570	ArgumentList	index		1972541	1					
ANR	1972571	Argument	index		1972541	0					
ANR	1972572	Identifier	index		1972541	0					
ANR	1972573	Argument	ent		1972541	1					
ANR	1972574	Identifier	ent		1972541	0					
ANR	1972575	CompoundStatement		8:42:131:131	1972541	1					
ANR	1972576	IfStatement	if ( ent -> uid == uid )		1972541	0					
ANR	1972577	Condition	ent -> uid == uid	492:7:12260:12274	1972541	0	True				
ANR	1972578	EqualityExpression	ent -> uid == uid		1972541	0		==			
ANR	1972579	PtrMemberAccess	ent -> uid		1972541	0					
ANR	1972580	Identifier	ent		1972541	0					
ANR	1972581	Identifier	uid		1972541	1					
ANR	1972582	Identifier	uid		1972541	1					
ANR	1972583	CompoundStatement		9:25:158:158	1972541	1					
ANR	1972584	ExpressionStatement	user = strdup ( index . Value ( ) )	493:3:12283:12311	1972541	0	True				
ANR	1972585	AssignmentExpression	user = strdup ( index . Value ( ) )		1972541	0		=			
ANR	1972586	Identifier	user		1972541	0					
ANR	1972587	CallExpression	strdup ( index . Value ( ) )		1972541	1					
ANR	1972588	Callee	strdup		1972541	0					
ANR	1972589	Identifier	strdup		1972541	0					
ANR	1972590	ArgumentList	index . Value ( )		1972541	1					
ANR	1972591	Argument	index . Value ( )		1972541	0					
ANR	1972592	CallExpression	index . Value ( )		1972541	0					
ANR	1972593	Callee	index . Value		1972541	0					
ANR	1972594	MemberAccess	index . Value		1972541	0					
ANR	1972595	Identifier	index		1972541	0					
ANR	1972596	Identifier	Value		1972541	1					
ANR	1972597	ArgumentList			1972541	1					
ANR	1972598	ReturnStatement	return true ;	494:3:12316:12327	1972541	1	True				
ANR	1972599	Identifier	true		1972541	0					
ANR	1972600	ExpressionStatement	pwd = getpwuid ( uid )	501:1:12414:12431	1972541	5	True				
ANR	1972601	AssignmentExpression	pwd = getpwuid ( uid )		1972541	0		=			
ANR	1972602	Identifier	pwd		1972541	0					
ANR	1972603	CallExpression	getpwuid ( uid )		1972541	1					
ANR	1972604	Callee	getpwuid		1972541	0					
ANR	1972605	Identifier	getpwuid		1972541	0					
ANR	1972606	ArgumentList	uid		1972541	1					
ANR	1972607	Argument	uid		1972541	0					
ANR	1972608	Identifier	uid		1972541	0					
ANR	1972609	IfStatement	if ( pwd )		1972541	6					
ANR	1972610	Condition	pwd	502:6:12439:12441	1972541	0	True				
ANR	1972611	Identifier	pwd		1972541	0					
ANR	1972612	CompoundStatement		19:12:325:325	1972541	1					
ANR	1972613	ExpressionStatement	cache_uid ( pwd )	505:2:12484:12498	1972541	0	True				
ANR	1972614	CallExpression	cache_uid ( pwd )		1972541	0					
ANR	1972615	Callee	cache_uid		1972541	0					
ANR	1972616	Identifier	cache_uid		1972541	0					
ANR	1972617	ArgumentList	pwd		1972541	1					
ANR	1972618	Argument	pwd		1972541	0					
ANR	1972619	Identifier	pwd		1972541	0					
ANR	1972620	ExpressionStatement	user = strdup ( pwd -> pw_name )	507:2:12503:12530	1972541	1	True				
ANR	1972621	AssignmentExpression	user = strdup ( pwd -> pw_name )		1972541	0		=			
ANR	1972622	Identifier	user		1972541	0					
ANR	1972623	CallExpression	strdup ( pwd -> pw_name )		1972541	1					
ANR	1972624	Callee	strdup		1972541	0					
ANR	1972625	Identifier	strdup		1972541	0					
ANR	1972626	ArgumentList	pwd -> pw_name		1972541	1					
ANR	1972627	Argument	pwd -> pw_name		1972541	0					
ANR	1972628	PtrMemberAccess	pwd -> pw_name		1972541	0					
ANR	1972629	Identifier	pwd		1972541	0					
ANR	1972630	Identifier	pw_name		1972541	1					
ANR	1972631	ReturnStatement	return true ;	508:2:12534:12545	1972541	2	True				
ANR	1972632	Identifier	true		1972541	0					
ANR	1972633	ElseStatement	else		1972541	0					
ANR	1972634	CompoundStatement		26:8:435:435	1972541	0					
ANR	1972635	ExpressionStatement	user = NULL	511:2:12560:12571	1972541	0	True				
ANR	1972636	AssignmentExpression	user = NULL		1972541	0		=			
ANR	1972637	Identifier	user		1972541	0					
ANR	1972638	Identifier	NULL		1972541	1					
ANR	1972639	ReturnStatement	return false ;	513:2:12625:12637	1972541	1	True				
ANR	1972640	Identifier	false		1972541	0					
ANR	1972641	ReturnType	bool		1972541	1					
ANR	1972642	Identifier	passwd_cache :: get_user_name		1972541	2					
ANR	1972643	ParameterList	"const uid_t uid , char * & user"		1972541	3					
ANR	1972644	Parameter	const uid_t uid	484:28:12089:12103	1972541	0	True				
ANR	1972645	ParameterType	const uid_t		1972541	0					
ANR	1972646	Identifier	uid		1972541	1					
ANR	1972647	Parameter	char * & user	484:45:12106:12116	1972541	1	True				
ANR	1972648	ParameterType	char * &		1972541	0					
ANR	1972649	Identifier	user		1972541	1					
ANR	1972650	CFGEntryNode	ENTRY		1972541		True				
ANR	1972651	CFGExitNode	EXIT		1972541		True				
ANR	1972652	Symbol	uid_table		1972541						
ANR	1972653	Symbol	ent -> uid		1972541						
ANR	1972654	Symbol	NULL		1972541						
ANR	1972655	Symbol	* pwd		1972541						
ANR	1972656	Symbol	false		1972541						
ANR	1972657	Symbol	index		1972541						
ANR	1972658	Symbol	ent		1972541						
ANR	1972659	Symbol	* ent		1972541						
ANR	1972660	Symbol	index . Value		1972541						
ANR	1972661	Symbol	uid		1972541						
ANR	1972662	Symbol	getpwuid		1972541						
ANR	1972663	Symbol	pwd -> pw_name		1972541						
ANR	1972664	Symbol	uid_table -> iterate		1972541						
ANR	1972665	Symbol	* uid_table		1972541						
ANR	1972666	Symbol	true		1972541						
ANR	1972667	Symbol	strdup		1972541						
ANR	1972668	Symbol	pwd		1972541						
ANR	1972669	Symbol	user		1972541						
ANR	1972670	Function	passwd_cache :: init_groups	517:0:12645:13520							
ANR	1972671	FunctionDef	"passwd_cache :: init_groups (const char * user , gid_t additional_gid)"		1972670	0					
ANR	1972672	CompoundStatement		518:68:12718:13520	1972670	0					
ANR	1972673	IdentifierDeclStatement	gid_t * gid_list ;	520:1:12722:12737	1972670	0	True				
ANR	1972674	IdentifierDecl	* gid_list		1972670	0					
ANR	1972675	IdentifierDeclType	gid_t *		1972670	0					
ANR	1972676	Identifier	gid_list		1972670	1					
ANR	1972677	IdentifierDeclStatement	bool result ;	521:1:12740:12751	1972670	1	True				
ANR	1972678	IdentifierDecl	result		1972670	0					
ANR	1972679	IdentifierDeclType	bool		1972670	0					
ANR	1972680	Identifier	result		1972670	1					
ANR	1972681	IdentifierDeclStatement	int siz ;	522:1:12754:12761	1972670	2	True				
ANR	1972682	IdentifierDecl	siz		1972670	0					
ANR	1972683	IdentifierDeclType	int		1972670	0					
ANR	1972684	Identifier	siz		1972670	1					
ANR	1972685	ExpressionStatement	siz = num_groups ( user )	524:1:12765:12787	1972670	3	True				
ANR	1972686	AssignmentExpression	siz = num_groups ( user )		1972670	0		=			
ANR	1972687	Identifier	siz		1972670	0					
ANR	1972688	CallExpression	num_groups ( user )		1972670	1					
ANR	1972689	Callee	num_groups		1972670	0					
ANR	1972690	Identifier	num_groups		1972670	0					
ANR	1972691	ArgumentList	user		1972670	1					
ANR	1972692	Argument	user		1972670	0					
ANR	1972693	Identifier	user		1972670	0					
ANR	1972694	ExpressionStatement	result = true	525:1:12790:12803	1972670	4	True				
ANR	1972695	AssignmentExpression	result = true		1972670	0		=			
ANR	1972696	Identifier	result		1972670	0					
ANR	1972697	Identifier	true		1972670	1					
ANR	1972698	ExpressionStatement	gid_list = NULL	526:1:12806:12821	1972670	5	True				
ANR	1972699	AssignmentExpression	gid_list = NULL		1972670	0		=			
ANR	1972700	Identifier	gid_list		1972670	0					
ANR	1972701	Identifier	NULL		1972670	1					
ANR	1972702	IfStatement	if ( siz > 0 )		1972670	6					
ANR	1972703	Condition	siz > 0	528:6:12830:12836	1972670	0	True				
ANR	1972704	RelationalExpression	siz > 0		1972670	0		>			
ANR	1972705	Identifier	siz		1972670	0					
ANR	1972706	PrimaryExpression	0		1972670	1					
ANR	1972707	CompoundStatement		11:16:121:121	1972670	1					
ANR	1972708	ExpressionStatement	gid_list = new gid_t [ siz + 1 ]	530:2:12845:12874	1972670	0	True				
ANR	1972709	AssignmentExpression	gid_list = new gid_t [ siz + 1 ]		1972670	0		=			
ANR	1972710	Identifier	gid_list		1972670	0					
ANR	1972711	AdditiveExpression	siz + 1		1972670	1		+			
ANR	1972712	Identifier	siz		1972670	0					
ANR	1972713	PrimaryExpression	1		1972670	1					
ANR	1972714	IfStatement	"if ( get_groups ( user , siz , gid_list ) )"		1972670	1					
ANR	1972715	Condition	"get_groups ( user , siz , gid_list )"	532:7:12884:12914	1972670	0	True				
ANR	1972716	CallExpression	"get_groups ( user , siz , gid_list )"		1972670	0					
ANR	1972717	Callee	get_groups		1972670	0					
ANR	1972718	Identifier	get_groups		1972670	0					
ANR	1972719	ArgumentList	user		1972670	1					
ANR	1972720	Argument	user		1972670	0					
ANR	1972721	Identifier	user		1972670	0					
ANR	1972722	Argument	siz		1972670	1					
ANR	1972723	Identifier	siz		1972670	0					
ANR	1972724	Argument	gid_list		1972670	2					
ANR	1972725	Identifier	gid_list		1972670	0					
ANR	1972726	CompoundStatement		15:41:199:199	1972670	1					
ANR	1972727	IfStatement	if ( additional_gid != 0 )		1972670	0					
ANR	1972728	Condition	additional_gid != 0	534:7:12929:12947	1972670	0	True				
ANR	1972729	EqualityExpression	additional_gid != 0		1972670	0		!=			
ANR	1972730	Identifier	additional_gid		1972670	0					
ANR	1972731	PrimaryExpression	0		1972670	1					
ANR	1972732	CompoundStatement		17:28:231:231	1972670	1					
ANR	1972733	ExpressionStatement	gid_list [ siz ] = additional_gid	535:4:12956:12986	1972670	0	True				
ANR	1972734	AssignmentExpression	gid_list [ siz ] = additional_gid		1972670	0		=			
ANR	1972735	ArrayIndexing	gid_list [ siz ]		1972670	0					
ANR	1972736	Identifier	gid_list		1972670	0					
ANR	1972737	Identifier	siz		1972670	1					
ANR	1972738	Identifier	additional_gid		1972670	1					
ANR	1972739	ExpressionStatement	siz ++	536:4:12992:12997	1972670	1	True				
ANR	1972740	PostIncDecOperationExpression	siz ++		1972670	0					
ANR	1972741	Identifier	siz		1972670	0					
ANR	1972742	IncDec	++		1972670	1					
ANR	1972743	IfStatement	"if ( setgroups ( siz , gid_list ) != 0 )"		1972670	1					
ANR	1972744	Condition	"setgroups ( siz , gid_list ) != 0"	539:8:13013:13041	1972670	0	True				
ANR	1972745	EqualityExpression	"setgroups ( siz , gid_list ) != 0"		1972670	0		!=			
ANR	1972746	CallExpression	"setgroups ( siz , gid_list )"		1972670	0					
ANR	1972747	Callee	setgroups		1972670	0					
ANR	1972748	Identifier	setgroups		1972670	0					
ANR	1972749	ArgumentList	siz		1972670	1					
ANR	1972750	Argument	siz		1972670	0					
ANR	1972751	Identifier	siz		1972670	0					
ANR	1972752	Argument	gid_list		1972670	1					
ANR	1972753	Identifier	gid_list		1972670	0					
ANR	1972754	PrimaryExpression	0		1972670	1					
ANR	1972755	CompoundStatement		22:40:326:326	1972670	1					
ANR	1972756	ExpressionStatement	"dprintf ( D_ALWAYS , ""passwd_cache: setgroups( %s ) failed.\\n"" , user )"	540:4:13051:13117	1972670	0	True				
ANR	1972757	CallExpression	"dprintf ( D_ALWAYS , ""passwd_cache: setgroups( %s ) failed.\\n"" , user )"		1972670	0					
ANR	1972758	Callee	dprintf		1972670	0					
ANR	1972759	Identifier	dprintf		1972670	0					
ANR	1972760	ArgumentList	D_ALWAYS		1972670	1					
ANR	1972761	Argument	D_ALWAYS		1972670	0					
ANR	1972762	Identifier	D_ALWAYS		1972670	0					
ANR	1972763	Argument	"""passwd_cache: setgroups( %s ) failed.\\n"""		1972670	1					
ANR	1972764	PrimaryExpression	"""passwd_cache: setgroups( %s ) failed.\\n"""		1972670	0					
ANR	1972765	Argument	user		1972670	2					
ANR	1972766	Identifier	user		1972670	0					
ANR	1972767	ExpressionStatement	result = false	541:4:13123:13137	1972670	1	True				
ANR	1972768	AssignmentExpression	result = false		1972670	0		=			
ANR	1972769	Identifier	result		1972670	0					
ANR	1972770	Identifier	false		1972670	1					
ANR	1972771	ElseStatement	else		1972670	0					
ANR	1972772	CompoundStatement		25:10:430:430	1972670	0					
ANR	1972773	ExpressionStatement	result = true	544:4:13174:13187	1972670	0	True				
ANR	1972774	AssignmentExpression	result = true		1972670	0		=			
ANR	1972775	Identifier	result		1972670	0					
ANR	1972776	Identifier	true		1972670	1					
ANR	1972777	ElseStatement	else		1972670	0					
ANR	1972778	CompoundStatement		30:9:491:491	1972670	0					
ANR	1972779	ExpressionStatement	"dprintf ( D_ALWAYS , ""passwd_cache: getgroups( %s ) failed.\\n"" , user )"	548:3:13215:13281	1972670	0	True				
ANR	1972780	CallExpression	"dprintf ( D_ALWAYS , ""passwd_cache: getgroups( %s ) failed.\\n"" , user )"		1972670	0					
ANR	1972781	Callee	dprintf		1972670	0					
ANR	1972782	Identifier	dprintf		1972670	0					
ANR	1972783	ArgumentList	D_ALWAYS		1972670	1					
ANR	1972784	Argument	D_ALWAYS		1972670	0					
ANR	1972785	Identifier	D_ALWAYS		1972670	0					
ANR	1972786	Argument	"""passwd_cache: getgroups( %s ) failed.\\n"""		1972670	1					
ANR	1972787	PrimaryExpression	"""passwd_cache: getgroups( %s ) failed.\\n"""		1972670	0					
ANR	1972788	Argument	user		1972670	2					
ANR	1972789	Identifier	user		1972670	0					
ANR	1972790	ExpressionStatement	result = false	549:3:13286:13300	1972670	1	True				
ANR	1972791	AssignmentExpression	result = false		1972670	0		=			
ANR	1972792	Identifier	result		1972670	0					
ANR	1972793	Identifier	false		1972670	1					
ANR	1972794	ElseStatement	else		1972670	0					
ANR	1972795	CompoundStatement		35:8:596:596	1972670	0					
ANR	1972796	ExpressionStatement	"dprintf ( D_ALWAYS , ""passwd_cache: num_groups( %s ) returned %d\\n"" , user , siz )"	554:2:13334:13440	1972670	0	True				
ANR	1972797	CallExpression	"dprintf ( D_ALWAYS , ""passwd_cache: num_groups( %s ) returned %d\\n"" , user , siz )"		1972670	0					
ANR	1972798	Callee	dprintf		1972670	0					
ANR	1972799	Identifier	dprintf		1972670	0					
ANR	1972800	ArgumentList	D_ALWAYS		1972670	1					
ANR	1972801	Argument	D_ALWAYS		1972670	0					
ANR	1972802	Identifier	D_ALWAYS		1972670	0					
ANR	1972803	Argument	"""passwd_cache: num_groups( %s ) returned %d\\n"""		1972670	1					
ANR	1972804	PrimaryExpression	"""passwd_cache: num_groups( %s ) returned %d\\n"""		1972670	0					
ANR	1972805	Argument	user		1972670	2					
ANR	1972806	Identifier	user		1972670	0					
ANR	1972807	Argument	siz		1972670	3					
ANR	1972808	Identifier	siz		1972670	0					
ANR	1972809	ExpressionStatement	result = false	558:2:13444:13458	1972670	1	True				
ANR	1972810	AssignmentExpression	result = false		1972670	0		=			
ANR	1972811	Identifier	result		1972670	0					
ANR	1972812	Identifier	false		1972670	1					
ANR	1972813	IfStatement	if ( gid_list )		1972670	7					
ANR	1972814	Condition	gid_list	561:6:13470:13477	1972670	0	True				
ANR	1972815	Identifier	gid_list		1972670	0					
ANR	1972816	CompoundStatement		44:17:762:762	1972670	1					
ANR	1972817	Statement	delete	561:19:13483:13488	1972670	0	True				
ANR	1972818	Statement	[	561:25:13489:13489	1972670	1	True				
ANR	1972819	Statement	]	561:26:13490:13490	1972670	2	True				
ANR	1972820	ExpressionStatement	gid_list	561:28:13492:13500	1972670	3	True				
ANR	1972821	Identifier	gid_list		1972670	0					
ANR	1972822	ReturnStatement	return result ;	562:1:13505:13518	1972670	8	True				
ANR	1972823	Identifier	result		1972670	0					
ANR	1972824	ReturnType	bool		1972670	1					
ANR	1972825	Identifier	passwd_cache :: init_groups		1972670	2					
ANR	1972826	ParameterList	"const char * user , gid_t additional_gid"		1972670	3					
ANR	1972827	Parameter	const char * user	518:27:12677:12692	1972670	0	True				
ANR	1972828	ParameterType	const char *		1972670	0					
ANR	1972829	Identifier	user		1972670	1					
ANR	1972830	Parameter	gid_t additional_gid	518:45:12695:12714	1972670	1	True				
ANR	1972831	ParameterType	gid_t		1972670	0					
ANR	1972832	Identifier	additional_gid		1972670	1					
ANR	1972833	CFGEntryNode	ENTRY		1972670		True				
ANR	1972834	CFGExitNode	EXIT		1972670		True				
ANR	1972835	Symbol	gid_list		1972670						
ANR	1972836	Symbol	* gid_list		1972670						
ANR	1972837	Symbol	NULL		1972670						
ANR	1972838	Symbol	siz		1972670						
ANR	1972839	Symbol	D_ALWAYS		1972670						
ANR	1972840	Symbol	false		1972670						
ANR	1972841	Symbol	num_groups		1972670						
ANR	1972842	Symbol	* siz		1972670						
ANR	1972843	Symbol	result		1972670						
ANR	1972844	Symbol	setgroups		1972670						
ANR	1972845	Symbol	true		1972670						
ANR	1972846	Symbol	user		1972670						
ANR	1972847	Symbol	additional_gid		1972670						
ANR	1972848	Symbol	get_groups		1972670						
ANR	1972849	Function	passwd_cache :: lookup_uid	567:0:13631:14041							
ANR	1972850	FunctionDef	"passwd_cache :: lookup_uid (const char * user , uid_entry * & uce)"		1972849	0					
ANR	1972851	CompoundStatement		568:60:13696:14041	1972849	0					
ANR	1972852	IfStatement	"if ( uid_table -> lookup ( user , uce ) < 0 )"		1972849	0					
ANR	1972853	Condition	"uid_table -> lookup ( user , uce ) < 0"	570:6:13705:13736	1972849	0	True				
ANR	1972854	RelationalExpression	"uid_table -> lookup ( user , uce ) < 0"		1972849	0		<			
ANR	1972855	CallExpression	"uid_table -> lookup ( user , uce )"		1972849	0					
ANR	1972856	Callee	uid_table -> lookup		1972849	0					
ANR	1972857	PtrMemberAccess	uid_table -> lookup		1972849	0					
ANR	1972858	Identifier	uid_table		1972849	0					
ANR	1972859	Identifier	lookup		1972849	1					
ANR	1972860	ArgumentList	user		1972849	1					
ANR	1972861	Argument	user		1972849	0					
ANR	1972862	Identifier	user		1972849	0					
ANR	1972863	Argument	uce		1972849	1					
ANR	1972864	Identifier	uce		1972849	0					
ANR	1972865	PrimaryExpression	0		1972849	1					
ANR	1972866	CompoundStatement		3:41:43:43	1972849	1					
ANR	1972867	ReturnStatement	return false ;	572:2:13763:13775	1972849	0	True				
ANR	1972868	Identifier	false		1972849	0					
ANR	1972869	ElseStatement	else		1972849	0					
ANR	1972870	CompoundStatement		6:8:88:88	1972849	0					
ANR	1972871	IfStatement	if ( ( time ( NULL ) - uce -> lastupdated ) > Entry_lifetime )		1972849	0					
ANR	1972872	Condition	( time ( NULL ) - uce -> lastupdated ) > Entry_lifetime	574:7:13794:13841	1972849	0	True				
ANR	1972873	RelationalExpression	( time ( NULL ) - uce -> lastupdated ) > Entry_lifetime		1972849	0		>			
ANR	1972874	AdditiveExpression	time ( NULL ) - uce -> lastupdated		1972849	0		-			
ANR	1972875	CallExpression	time ( NULL )		1972849	0					
ANR	1972876	Callee	time		1972849	0					
ANR	1972877	Identifier	time		1972849	0					
ANR	1972878	ArgumentList	NULL		1972849	1					
ANR	1972879	Argument	NULL		1972849	0					
ANR	1972880	Identifier	NULL		1972849	0					
ANR	1972881	PtrMemberAccess	uce -> lastupdated		1972849	1					
ANR	1972882	Identifier	uce		1972849	0					
ANR	1972883	Identifier	lastupdated		1972849	1					
ANR	1972884	Identifier	Entry_lifetime		1972849	1					
ANR	1972885	CompoundStatement		7:58:148:148	1972849	1					
ANR	1972886	ExpressionStatement	cache_uid ( user )	576:3:13886:13901	1972849	0	True				
ANR	1972887	CallExpression	cache_uid ( user )		1972849	0					
ANR	1972888	Callee	cache_uid		1972849	0					
ANR	1972889	Identifier	cache_uid		1972849	0					
ANR	1972890	ArgumentList	user		1972849	1					
ANR	1972891	Argument	user		1972849	0					
ANR	1972892	Identifier	user		1972849	0					
ANR	1972893	ReturnStatement	"return ( uid_table -> lookup ( user , uce ) == 0 ) ;"	577:3:13906:13948	1972849	1	True				
ANR	1972894	EqualityExpression	"uid_table -> lookup ( user , uce ) == 0"		1972849	0		==			
ANR	1972895	CallExpression	"uid_table -> lookup ( user , uce )"		1972849	0					
ANR	1972896	Callee	uid_table -> lookup		1972849	0					
ANR	1972897	PtrMemberAccess	uid_table -> lookup		1972849	0					
ANR	1972898	Identifier	uid_table		1972849	0					
ANR	1972899	Identifier	lookup		1972849	1					
ANR	1972900	ArgumentList	user		1972849	1					
ANR	1972901	Argument	user		1972849	0					
ANR	1972902	Identifier	user		1972849	0					
ANR	1972903	Argument	uce		1972849	1					
ANR	1972904	Identifier	uce		1972849	0					
ANR	1972905	PrimaryExpression	0		1972849	1					
ANR	1972906	ElseStatement	else		1972849	0					
ANR	1972907	CompoundStatement		11:9:262:262	1972849	0					
ANR	1972908	ReturnStatement	return true ;	580:3:14021:14032	1972849	0	True				
ANR	1972909	Identifier	true		1972849	0					
ANR	1972910	ReturnType	bool		1972849	1					
ANR	1972911	Identifier	passwd_cache :: lookup_uid		1972849	2					
ANR	1972912	ParameterList	"const char * user , uid_entry * & uce"		1972849	3					
ANR	1972913	Parameter	const char * user	568:25:13661:13676	1972849	0	True				
ANR	1972914	ParameterType	const char *		1972849	0					
ANR	1972915	Identifier	user		1972849	1					
ANR	1972916	Parameter	uid_entry * & uce	568:43:13679:13693	1972849	1	True				
ANR	1972917	ParameterType	uid_entry * &		1972849	0					
ANR	1972918	Identifier	uce		1972849	1					
ANR	1972919	CFGEntryNode	ENTRY		1972849		True				
ANR	1972920	CFGExitNode	EXIT		1972849		True				
ANR	1972921	Symbol	Entry_lifetime		1972849						
ANR	1972922	Symbol	* uce		1972849						
ANR	1972923	Symbol	uid_table		1972849						
ANR	1972924	Symbol	NULL		1972849						
ANR	1972925	Symbol	uid_table -> lookup		1972849						
ANR	1972926	Symbol	uce		1972849						
ANR	1972927	Symbol	* uid_table		1972849						
ANR	1972928	Symbol	false		1972849						
ANR	1972929	Symbol	true		1972849						
ANR	1972930	Symbol	time		1972849						
ANR	1972931	Symbol	user		1972849						
ANR	1972932	Symbol	uce -> lastupdated		1972849						
ANR	1972933	Function	passwd_cache :: lookup_group	588:0:14153:14576							
ANR	1972934	FunctionDef	"passwd_cache :: lookup_group (const char * user , group_entry * & gce)"		1972933	0					
ANR	1972935	CompoundStatement		589:64:14222:14576	1972933	0					
ANR	1972936	IfStatement	"if ( group_table -> lookup ( user , gce ) < 0 )"		1972933	0					
ANR	1972937	Condition	"group_table -> lookup ( user , gce ) < 0"	591:6:14231:14264	1972933	0	True				
ANR	1972938	RelationalExpression	"group_table -> lookup ( user , gce ) < 0"		1972933	0		<			
ANR	1972939	CallExpression	"group_table -> lookup ( user , gce )"		1972933	0					
ANR	1972940	Callee	group_table -> lookup		1972933	0					
ANR	1972941	PtrMemberAccess	group_table -> lookup		1972933	0					
ANR	1972942	Identifier	group_table		1972933	0					
ANR	1972943	Identifier	lookup		1972933	1					
ANR	1972944	ArgumentList	user		1972933	1					
ANR	1972945	Argument	user		1972933	0					
ANR	1972946	Identifier	user		1972933	0					
ANR	1972947	Argument	gce		1972933	1					
ANR	1972948	Identifier	gce		1972933	0					
ANR	1972949	PrimaryExpression	0		1972933	1					
ANR	1972950	CompoundStatement		3:43:45:45	1972933	1					
ANR	1972951	ReturnStatement	return false ;	593:2:14292:14304	1972933	0	True				
ANR	1972952	Identifier	false		1972933	0					
ANR	1972953	ElseStatement	else		1972933	0					
ANR	1972954	CompoundStatement		6:8:91:91	1972933	0					
ANR	1972955	IfStatement	if ( ( time ( NULL ) - gce -> lastupdated ) > Entry_lifetime )		1972933	0					
ANR	1972956	Condition	( time ( NULL ) - gce -> lastupdated ) > Entry_lifetime	595:7:14323:14370	1972933	0	True				
ANR	1972957	RelationalExpression	( time ( NULL ) - gce -> lastupdated ) > Entry_lifetime		1972933	0		>			
ANR	1972958	AdditiveExpression	time ( NULL ) - gce -> lastupdated		1972933	0		-			
ANR	1972959	CallExpression	time ( NULL )		1972933	0					
ANR	1972960	Callee	time		1972933	0					
ANR	1972961	Identifier	time		1972933	0					
ANR	1972962	ArgumentList	NULL		1972933	1					
ANR	1972963	Argument	NULL		1972933	0					
ANR	1972964	Identifier	NULL		1972933	0					
ANR	1972965	PtrMemberAccess	gce -> lastupdated		1972933	1					
ANR	1972966	Identifier	gce		1972933	0					
ANR	1972967	Identifier	lastupdated		1972933	1					
ANR	1972968	Identifier	Entry_lifetime		1972933	1					
ANR	1972969	CompoundStatement		7:58:151:151	1972933	1					
ANR	1972970	ExpressionStatement	cache_groups ( user )	597:3:14416:14434	1972933	0	True				
ANR	1972971	CallExpression	cache_groups ( user )		1972933	0					
ANR	1972972	Callee	cache_groups		1972933	0					
ANR	1972973	Identifier	cache_groups		1972933	0					
ANR	1972974	ArgumentList	user		1972933	1					
ANR	1972975	Argument	user		1972933	0					
ANR	1972976	Identifier	user		1972933	0					
ANR	1972977	ReturnStatement	"return ( group_table -> lookup ( user , gce ) == 0 ) ;"	598:3:14439:14483	1972933	1	True				
ANR	1972978	EqualityExpression	"group_table -> lookup ( user , gce ) == 0"		1972933	0		==			
ANR	1972979	CallExpression	"group_table -> lookup ( user , gce )"		1972933	0					
ANR	1972980	Callee	group_table -> lookup		1972933	0					
ANR	1972981	PtrMemberAccess	group_table -> lookup		1972933	0					
ANR	1972982	Identifier	group_table		1972933	0					
ANR	1972983	Identifier	lookup		1972933	1					
ANR	1972984	ArgumentList	user		1972933	1					
ANR	1972985	Argument	user		1972933	0					
ANR	1972986	Identifier	user		1972933	0					
ANR	1972987	Argument	gce		1972933	1					
ANR	1972988	Identifier	gce		1972933	0					
ANR	1972989	PrimaryExpression	0		1972933	1					
ANR	1972990	ElseStatement	else		1972933	0					
ANR	1972991	CompoundStatement		11:9:271:271	1972933	0					
ANR	1972992	ReturnStatement	return true ;	601:3:14556:14567	1972933	0	True				
ANR	1972993	Identifier	true		1972933	0					
ANR	1972994	ReturnType	bool		1972933	1					
ANR	1972995	Identifier	passwd_cache :: lookup_group		1972933	2					
ANR	1972996	ParameterList	"const char * user , group_entry * & gce"		1972933	3					
ANR	1972997	Parameter	const char * user	589:27:14185:14200	1972933	0	True				
ANR	1972998	ParameterType	const char *		1972933	0					
ANR	1972999	Identifier	user		1972933	1					
ANR	1973000	Parameter	group_entry * & gce	589:45:14203:14219	1972933	1	True				
ANR	1973001	ParameterType	group_entry * &		1972933	0					
ANR	1973002	Identifier	gce		1972933	1					
ANR	1973003	CFGEntryNode	ENTRY		1972933		True				
ANR	1973004	CFGExitNode	EXIT		1972933		True				
ANR	1973005	Symbol	group_table -> lookup		1972933						
ANR	1973006	Symbol	* group_table		1972933						
ANR	1973007	Symbol	Entry_lifetime		1972933						
ANR	1973008	Symbol	NULL		1972933						
ANR	1973009	Symbol	gce		1972933						
ANR	1973010	Symbol	false		1972933						
ANR	1973011	Symbol	gce -> lastupdated		1972933						
ANR	1973012	Symbol	true		1972933						
ANR	1973013	Symbol	group_table		1972933						
ANR	1973014	Symbol	time		1972933						
ANR	1973015	Symbol	* gce		1972933						
ANR	1973016	Symbol	user		1972933						
ANR	1973017	Function	passwd_cache :: get_uid_entry_age	607:0:14611:14787							
ANR	1973018	FunctionDef	passwd_cache :: get_uid_entry_age (const char * user)		1973017	0					
ANR	1973019	CompoundStatement		608:50:14665:14787	1973017	0					
ANR	1973020	IdentifierDeclStatement	uid_entry * uce ;	610:1:14669:14683	1973017	0	True				
ANR	1973021	IdentifierDecl	* uce		1973017	0					
ANR	1973022	IdentifierDeclType	uid_entry *		1973017	0					
ANR	1973023	Identifier	uce		1973017	1					
ANR	1973024	IfStatement	"if ( ! lookup_uid ( user , uce ) )"		1973017	1					
ANR	1973025	Condition	"! lookup_uid ( user , uce )"	612:6:14692:14713	1973017	0	True				
ANR	1973026	UnaryOperationExpression	"! lookup_uid ( user , uce )"		1973017	0					
ANR	1973027	UnaryOperator	!		1973017	0					
ANR	1973028	CallExpression	"lookup_uid ( user , uce )"		1973017	1					
ANR	1973029	Callee	lookup_uid		1973017	0					
ANR	1973030	Identifier	lookup_uid		1973017	0					
ANR	1973031	ArgumentList	user		1973017	1					
ANR	1973032	Argument	user		1973017	0					
ANR	1973033	Identifier	user		1973017	0					
ANR	1973034	Argument	uce		1973017	1					
ANR	1973035	Identifier	uce		1973017	0					
ANR	1973036	CompoundStatement		5:31:51:51	1973017	1					
ANR	1973037	ReturnStatement	return - 1 ;	613:2:14721:14730	1973017	0	True				
ANR	1973038	UnaryOperationExpression	- 1		1973017	0					
ANR	1973039	UnaryOperator	-		1973017	0					
ANR	1973040	PrimaryExpression	1		1973017	1					
ANR	1973041	ElseStatement	else		1973017	0					
ANR	1973042	CompoundStatement		7:8:74:74	1973017	0					
ANR	1973043	ReturnStatement	return ( time ( NULL ) - uce -> lastupdated ) ;	615:2:14744:14782	1973017	0	True				
ANR	1973044	AdditiveExpression	time ( NULL ) - uce -> lastupdated		1973017	0		-			
ANR	1973045	CallExpression	time ( NULL )		1973017	0					
ANR	1973046	Callee	time		1973017	0					
ANR	1973047	Identifier	time		1973017	0					
ANR	1973048	ArgumentList	NULL		1973017	1					
ANR	1973049	Argument	NULL		1973017	0					
ANR	1973050	Identifier	NULL		1973017	0					
ANR	1973051	PtrMemberAccess	uce -> lastupdated		1973017	1					
ANR	1973052	Identifier	uce		1973017	0					
ANR	1973053	Identifier	lastupdated		1973017	1					
ANR	1973054	ReturnType	int		1973017	1					
ANR	1973055	Identifier	passwd_cache :: get_uid_entry_age		1973017	2					
ANR	1973056	ParameterList	const char * user		1973017	3					
ANR	1973057	Parameter	const char * user	608:32:14647:14662	1973017	0	True				
ANR	1973058	ParameterType	const char *		1973017	0					
ANR	1973059	Identifier	user		1973017	1					
ANR	1973060	CFGEntryNode	ENTRY		1973017		True				
ANR	1973061	CFGExitNode	EXIT		1973017		True				
ANR	1973062	Symbol	* uce		1973017						
ANR	1973063	Symbol	NULL		1973017						
ANR	1973064	Symbol	uce		1973017						
ANR	1973065	Symbol	lookup_uid		1973017						
ANR	1973066	Symbol	time		1973017						
ANR	1973067	Symbol	user		1973017						
ANR	1973068	Symbol	uce -> lastupdated		1973017						
ANR	1973069	Function	passwd_cache :: get_group_entry_age	620:0:14822:15004							
ANR	1973070	FunctionDef	passwd_cache :: get_group_entry_age (const char * user)		1973069	0					
ANR	1973071	CompoundStatement		621:52:14878:15004	1973069	0					
ANR	1973072	IdentifierDeclStatement	group_entry * gce ;	623:1:14882:14898	1973069	0	True				
ANR	1973073	IdentifierDecl	* gce		1973069	0					
ANR	1973074	IdentifierDeclType	group_entry *		1973069	0					
ANR	1973075	Identifier	gce		1973069	1					
ANR	1973076	IfStatement	"if ( ! lookup_group ( user , gce ) )"		1973069	1					
ANR	1973077	Condition	"! lookup_group ( user , gce )"	625:6:14907:14930	1973069	0	True				
ANR	1973078	UnaryOperationExpression	"! lookup_group ( user , gce )"		1973069	0					
ANR	1973079	UnaryOperator	!		1973069	0					
ANR	1973080	CallExpression	"lookup_group ( user , gce )"		1973069	1					
ANR	1973081	Callee	lookup_group		1973069	0					
ANR	1973082	Identifier	lookup_group		1973069	0					
ANR	1973083	ArgumentList	user		1973069	1					
ANR	1973084	Argument	user		1973069	0					
ANR	1973085	Identifier	user		1973069	0					
ANR	1973086	Argument	gce		1973069	1					
ANR	1973087	Identifier	gce		1973069	0					
ANR	1973088	CompoundStatement		5:33:55:55	1973069	1					
ANR	1973089	ReturnStatement	return - 1 ;	626:2:14938:14947	1973069	0	True				
ANR	1973090	UnaryOperationExpression	- 1		1973069	0					
ANR	1973091	UnaryOperator	-		1973069	0					
ANR	1973092	PrimaryExpression	1		1973069	1					
ANR	1973093	ElseStatement	else		1973069	0					
ANR	1973094	CompoundStatement		7:8:78:78	1973069	0					
ANR	1973095	ReturnStatement	return ( time ( NULL ) - gce -> lastupdated ) ;	628:2:14961:14999	1973069	0	True				
ANR	1973096	AdditiveExpression	time ( NULL ) - gce -> lastupdated		1973069	0		-			
ANR	1973097	CallExpression	time ( NULL )		1973069	0					
ANR	1973098	Callee	time		1973069	0					
ANR	1973099	Identifier	time		1973069	0					
ANR	1973100	ArgumentList	NULL		1973069	1					
ANR	1973101	Argument	NULL		1973069	0					
ANR	1973102	Identifier	NULL		1973069	0					
ANR	1973103	PtrMemberAccess	gce -> lastupdated		1973069	1					
ANR	1973104	Identifier	gce		1973069	0					
ANR	1973105	Identifier	lastupdated		1973069	1					
ANR	1973106	ReturnType	int		1973069	1					
ANR	1973107	Identifier	passwd_cache :: get_group_entry_age		1973069	2					
ANR	1973108	ParameterList	const char * user		1973069	3					
ANR	1973109	Parameter	const char * user	621:34:14860:14875	1973069	0	True				
ANR	1973110	ParameterType	const char *		1973069	0					
ANR	1973111	Identifier	user		1973069	1					
ANR	1973112	CFGEntryNode	ENTRY		1973069		True				
ANR	1973113	CFGExitNode	EXIT		1973069		True				
ANR	1973114	Symbol	NULL		1973069						
ANR	1973115	Symbol	lookup_group		1973069						
ANR	1973116	Symbol	gce		1973069						
ANR	1973117	Symbol	gce -> lastupdated		1973069						
ANR	1973118	Symbol	time		1973069						
ANR	1973119	Symbol	* gce		1973069						
ANR	1973120	Symbol	user		1973069						
ANR	1973121	Function	passwd_cache :: init_uid_entry	633:0:15068:15224							
ANR	1973122	FunctionDef	passwd_cache :: init_uid_entry (uid_entry * & uce)		1973121	0					
ANR	1973123	CompoundStatement		634:46:15119:15224	1973121	0					
ANR	1973124	ExpressionStatement	uce = new uid_entry ( )	636:1:15125:15146	1973121	0	True				
ANR	1973125	AssignmentExpression	uce = new uid_entry ( )		1973121	0		=			
ANR	1973126	Identifier	uce		1973121	0					
ANR	1973127	UnaryExpression	new uid_entry ( )		1973121	1					
ANR	1973128	ExpressionStatement	uce -> uid = INT_MAX	637:1:15149:15167	1973121	1	True				
ANR	1973129	AssignmentExpression	uce -> uid = INT_MAX		1973121	0		=			
ANR	1973130	PtrMemberAccess	uce -> uid		1973121	0					
ANR	1973131	Identifier	uce		1973121	0					
ANR	1973132	Identifier	uid		1973121	1					
ANR	1973133	Identifier	INT_MAX		1973121	1					
ANR	1973134	ExpressionStatement	uce -> gid = INT_MAX	638:1:15171:15189	1973121	2	True				
ANR	1973135	AssignmentExpression	uce -> gid = INT_MAX		1973121	0		=			
ANR	1973136	PtrMemberAccess	uce -> gid		1973121	0					
ANR	1973137	Identifier	uce		1973121	0					
ANR	1973138	Identifier	gid		1973121	1					
ANR	1973139	Identifier	INT_MAX		1973121	1					
ANR	1973140	ExpressionStatement	uce -> lastupdated = time ( NULL )	639:1:15193:15222	1973121	3	True				
ANR	1973141	AssignmentExpression	uce -> lastupdated = time ( NULL )		1973121	0		=			
ANR	1973142	PtrMemberAccess	uce -> lastupdated		1973121	0					
ANR	1973143	Identifier	uce		1973121	0					
ANR	1973144	Identifier	lastupdated		1973121	1					
ANR	1973145	CallExpression	time ( NULL )		1973121	1					
ANR	1973146	Callee	time		1973121	0					
ANR	1973147	Identifier	time		1973121	0					
ANR	1973148	ArgumentList	NULL		1973121	1					
ANR	1973149	Argument	NULL		1973121	0					
ANR	1973150	Identifier	NULL		1973121	0					
ANR	1973151	ReturnType	void		1973121	1					
ANR	1973152	Identifier	passwd_cache :: init_uid_entry		1973121	2					
ANR	1973153	ParameterList	uid_entry * & uce		1973121	3					
ANR	1973154	Parameter	uid_entry * & uce	634:29:15102:15116	1973121	0	True				
ANR	1973155	ParameterType	uid_entry * &		1973121	0					
ANR	1973156	Identifier	uce		1973121	1					
ANR	1973157	CFGEntryNode	ENTRY		1973121		True				
ANR	1973158	CFGExitNode	EXIT		1973121		True				
ANR	1973159	Symbol	* uce		1973121						
ANR	1973160	Symbol	uce -> uid		1973121						
ANR	1973161	Symbol	NULL		1973121						
ANR	1973162	Symbol	uce -> gid		1973121						
ANR	1973163	Symbol	uce		1973121						
ANR	1973164	Symbol	INT_MAX		1973121						
ANR	1973165	Symbol	time		1973121						
ANR	1973166	Symbol	uce -> lastupdated		1973121						
ANR	1973167	Function	passwd_cache :: init_group_entry	643:0:15288:15450							
ANR	1973168	FunctionDef	passwd_cache :: init_group_entry (group_entry * & gce)		1973167	0					
ANR	1973169	CompoundStatement		644:50:15343:15450	1973167	0					
ANR	1973170	ExpressionStatement	gce = new group_entry ( )	646:1:15349:15372	1973167	0	True				
ANR	1973171	AssignmentExpression	gce = new group_entry ( )		1973167	0		=			
ANR	1973172	Identifier	gce		1973167	0					
ANR	1973173	UnaryExpression	new group_entry ( )		1973167	1					
ANR	1973174	ExpressionStatement	gce -> gidlist = NULL	647:1:15375:15394	1973167	1	True				
ANR	1973175	AssignmentExpression	gce -> gidlist = NULL		1973167	0		=			
ANR	1973176	PtrMemberAccess	gce -> gidlist		1973167	0					
ANR	1973177	Identifier	gce		1973167	0					
ANR	1973178	Identifier	gidlist		1973167	1					
ANR	1973179	Identifier	NULL		1973167	1					
ANR	1973180	ExpressionStatement	gce -> gidlist_sz = 0	648:1:15397:15416	1973167	2	True				
ANR	1973181	AssignmentExpression	gce -> gidlist_sz = 0		1973167	0		=			
ANR	1973182	PtrMemberAccess	gce -> gidlist_sz		1973167	0					
ANR	1973183	Identifier	gce		1973167	0					
ANR	1973184	Identifier	gidlist_sz		1973167	1					
ANR	1973185	PrimaryExpression	0		1973167	1					
ANR	1973186	ExpressionStatement	gce -> lastupdated = time ( NULL )	649:1:15419:15448	1973167	3	True				
ANR	1973187	AssignmentExpression	gce -> lastupdated = time ( NULL )		1973167	0		=			
ANR	1973188	PtrMemberAccess	gce -> lastupdated		1973167	0					
ANR	1973189	Identifier	gce		1973167	0					
ANR	1973190	Identifier	lastupdated		1973167	1					
ANR	1973191	CallExpression	time ( NULL )		1973167	1					
ANR	1973192	Callee	time		1973167	0					
ANR	1973193	Identifier	time		1973167	0					
ANR	1973194	ArgumentList	NULL		1973167	1					
ANR	1973195	Argument	NULL		1973167	0					
ANR	1973196	Identifier	NULL		1973167	0					
ANR	1973197	ReturnType	void		1973167	1					
ANR	1973198	Identifier	passwd_cache :: init_group_entry		1973167	2					
ANR	1973199	ParameterList	group_entry * & gce		1973167	3					
ANR	1973200	Parameter	group_entry * & gce	644:31:15324:15340	1973167	0	True				
ANR	1973201	ParameterType	group_entry * &		1973167	0					
ANR	1973202	Identifier	gce		1973167	1					
ANR	1973203	CFGEntryNode	ENTRY		1973167		True				
ANR	1973204	CFGExitNode	EXIT		1973167		True				
ANR	1973205	Symbol	gce -> gidlist		1973167						
ANR	1973206	Symbol	NULL		1973167						
ANR	1973207	Symbol	gce -> gidlist_sz		1973167						
ANR	1973208	Symbol	gce		1973167						
ANR	1973209	Symbol	gce -> lastupdated		1973167						
ANR	1973210	Symbol	time		1973167						
ANR	1973211	Symbol	* gce		1973167						
