command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4580654	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_classad_log.cpp								
ANR	4580655	DeclStmt									
ANR	4580656	Decl							const char	const char *	EMPTY_CLASSAD_TYPE_NAME
ANR	4580657	Function	ClassAdLog :: ClassAdLog	57:0:1711:1916							
ANR	4580658	FunctionDef	ClassAdLog :: ClassAdLog ()		4580657	0					
ANR	4580659	CompoundStatement		58:0:1786:1916	4580657	0					
ANR	4580660	ExpressionStatement	active_transaction = NULL	59:1:1789:1814	4580657	0	True				
ANR	4580661	AssignmentExpression	active_transaction = NULL		4580657	0		=			
ANR	4580662	Identifier	active_transaction		4580657	0					
ANR	4580663	Identifier	NULL		4580657	1					
ANR	4580664	ExpressionStatement	log_fp = NULL	60:1:1817:1830	4580657	1	True				
ANR	4580665	AssignmentExpression	log_fp = NULL		4580657	0		=			
ANR	4580666	Identifier	log_fp		4580657	0					
ANR	4580667	Identifier	NULL		4580657	1					
ANR	4580668	ExpressionStatement	m_nondurable_level = 0	61:1:1833:1855	4580657	2	True				
ANR	4580669	AssignmentExpression	m_nondurable_level = 0		4580657	0		=			
ANR	4580670	Identifier	m_nondurable_level		4580657	0					
ANR	4580671	PrimaryExpression	0		4580657	1					
ANR	4580672	ExpressionStatement	max_historical_logs = 0	62:1:1858:1881	4580657	3	True				
ANR	4580673	AssignmentExpression	max_historical_logs = 0		4580657	0		=			
ANR	4580674	Identifier	max_historical_logs		4580657	0					
ANR	4580675	PrimaryExpression	0		4580657	1					
ANR	4580676	ExpressionStatement	historical_sequence_number = 0	63:1:1884:1914	4580657	4	True				
ANR	4580677	AssignmentExpression	historical_sequence_number = 0		4580657	0		=			
ANR	4580678	Identifier	historical_sequence_number		4580657	0					
ANR	4580679	PrimaryExpression	0		4580657	1					
ANR	4580680	Identifier	ClassAdLog :: ClassAdLog		4580657	1					
ANR	4580681	ParameterList			4580657	2					
ANR	4580682	CFGEntryNode	ENTRY		4580657		True				
ANR	4580683	CFGExitNode	EXIT		4580657		True				
ANR	4580684	Symbol	log_fp		4580657						
ANR	4580685	Symbol	NULL		4580657						
ANR	4580686	Symbol	m_nondurable_level		4580657						
ANR	4580687	Symbol	max_historical_logs		4580657						
ANR	4580688	Symbol	active_transaction		4580657						
ANR	4580689	Symbol	historical_sequence_number		4580657						
ANR	4580690	Function	ClassAdLog :: ClassAdLog	66:0:1919:5806							
ANR	4580691	FunctionDef	"ClassAdLog :: ClassAdLog (const char * filename , int max_historical_logs_arg)"		4580690	0					
ANR	4580692	CompoundStatement		67:0:2042:5806	4580690	0					
ANR	4580693	ExpressionStatement	log_filename_buf = filename	68:1:2045:2072	4580690	0	True				
ANR	4580694	AssignmentExpression	log_filename_buf = filename		4580690	0		=			
ANR	4580695	Identifier	log_filename_buf		4580690	0					
ANR	4580696	Identifier	filename		4580690	1					
ANR	4580697	ExpressionStatement	active_transaction = NULL	69:1:2075:2100	4580690	1	True				
ANR	4580698	AssignmentExpression	active_transaction = NULL		4580690	0		=			
ANR	4580699	Identifier	active_transaction		4580690	0					
ANR	4580700	Identifier	NULL		4580690	1					
ANR	4580701	ExpressionStatement	m_nondurable_level = 0	70:1:2103:2125	4580690	2	True				
ANR	4580702	AssignmentExpression	m_nondurable_level = 0		4580690	0		=			
ANR	4580703	Identifier	m_nondurable_level		4580690	0					
ANR	4580704	PrimaryExpression	0		4580690	1					
ANR	4580705	ExpressionStatement	this -> max_historical_logs = max_historical_logs_arg	72:1:2129:2180	4580690	3	True				
ANR	4580706	AssignmentExpression	this -> max_historical_logs = max_historical_logs_arg		4580690	0		=			
ANR	4580707	PtrMemberAccess	this -> max_historical_logs		4580690	0					
ANR	4580708	Identifier	this		4580690	0					
ANR	4580709	Identifier	max_historical_logs		4580690	1					
ANR	4580710	Identifier	max_historical_logs_arg		4580690	1					
ANR	4580711	ExpressionStatement	historical_sequence_number = 1	73:1:2183:2213	4580690	4	True				
ANR	4580712	AssignmentExpression	historical_sequence_number = 1		4580690	0		=			
ANR	4580713	Identifier	historical_sequence_number		4580690	0					
ANR	4580714	PrimaryExpression	1		4580690	1					
ANR	4580715	ExpressionStatement	m_original_log_birthdate = time ( NULL )	74:1:2216:2253	4580690	5	True				
ANR	4580716	AssignmentExpression	m_original_log_birthdate = time ( NULL )		4580690	0		=			
ANR	4580717	Identifier	m_original_log_birthdate		4580690	0					
ANR	4580718	CallExpression	time ( NULL )		4580690	1					
ANR	4580719	Callee	time		4580690	0					
ANR	4580720	Identifier	time		4580690	0					
ANR	4580721	ArgumentList	NULL		4580690	1					
ANR	4580722	Argument	NULL		4580690	0					
ANR	4580723	Identifier	NULL		4580690	0					
ANR	4580724	IdentifierDeclStatement	"int log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 ) ;"	76:1:2257:2347	4580690	6	True				
ANR	4580725	IdentifierDecl	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		4580690	0					
ANR	4580726	IdentifierDeclType	int		4580690	0					
ANR	4580727	Identifier	log_fd		4580690	1					
ANR	4580728	AssignmentExpression	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		4580690	2		=			
ANR	4580729	Identifier	log_fd		4580690	0					
ANR	4580730	CallExpression	"safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		4580690	1					
ANR	4580731	Callee	safe_open_wrapper_follow		4580690	0					
ANR	4580732	Identifier	safe_open_wrapper_follow		4580690	0					
ANR	4580733	ArgumentList	logFilename ( )		4580690	1					
ANR	4580734	Argument	logFilename ( )		4580690	0					
ANR	4580735	CallExpression	logFilename ( )		4580690	0					
ANR	4580736	Callee	logFilename		4580690	0					
ANR	4580737	Identifier	logFilename		4580690	0					
ANR	4580738	ArgumentList			4580690	1					
ANR	4580739	Argument	O_RDWR | O_CREAT | O_LARGEFILE		4580690	1					
ANR	4580740	InclusiveOrExpression	O_RDWR | O_CREAT | O_LARGEFILE		4580690	0		|			
ANR	4580741	Identifier	O_RDWR		4580690	0					
ANR	4580742	InclusiveOrExpression	O_CREAT | O_LARGEFILE		4580690	1		|			
ANR	4580743	Identifier	O_CREAT		4580690	0					
ANR	4580744	Identifier	O_LARGEFILE		4580690	1					
ANR	4580745	Argument	0600		4580690	2					
ANR	4580746	PrimaryExpression	0600		4580690	0					
ANR	4580747	IfStatement	if ( log_fd < 0 )		4580690	7					
ANR	4580748	Condition	log_fd < 0	77:5:2354:2363	4580690	0	True				
ANR	4580749	RelationalExpression	log_fd < 0		4580690	0		<			
ANR	4580750	Identifier	log_fd		4580690	0					
ANR	4580751	PrimaryExpression	0		4580690	1					
ANR	4580752	CompoundStatement		11:17:323:323	4580690	1					
ANR	4580753	ExpressionStatement	"EXCEPT ( ""failed to open log %s, errno = %d"" , logFilename ( ) , errno )"	78:2:2370:2435	4580690	0	True				
ANR	4580754	CallExpression	"EXCEPT ( ""failed to open log %s, errno = %d"" , logFilename ( ) , errno )"		4580690	0					
ANR	4580755	Callee	EXCEPT		4580690	0					
ANR	4580756	Identifier	EXCEPT		4580690	0					
ANR	4580757	ArgumentList	"""failed to open log %s, errno = %d"""		4580690	1					
ANR	4580758	Argument	"""failed to open log %s, errno = %d"""		4580690	0					
ANR	4580759	PrimaryExpression	"""failed to open log %s, errno = %d"""		4580690	0					
ANR	4580760	Argument	logFilename ( )		4580690	1					
ANR	4580761	CallExpression	logFilename ( )		4580690	0					
ANR	4580762	Callee	logFilename		4580690	0					
ANR	4580763	Identifier	logFilename		4580690	0					
ANR	4580764	ArgumentList			4580690	1					
ANR	4580765	Argument	errno		4580690	2					
ANR	4580766	Identifier	errno		4580690	0					
ANR	4580767	ExpressionStatement	"log_fp = fdopen ( log_fd , ""r+"" )"	81:1:2442:2471	4580690	8	True				
ANR	4580768	AssignmentExpression	"log_fp = fdopen ( log_fd , ""r+"" )"		4580690	0		=			
ANR	4580769	Identifier	log_fp		4580690	0					
ANR	4580770	CallExpression	"fdopen ( log_fd , ""r+"" )"		4580690	1					
ANR	4580771	Callee	fdopen		4580690	0					
ANR	4580772	Identifier	fdopen		4580690	0					
ANR	4580773	ArgumentList	log_fd		4580690	1					
ANR	4580774	Argument	log_fd		4580690	0					
ANR	4580775	Identifier	log_fd		4580690	0					
ANR	4580776	Argument	"""r+"""		4580690	1					
ANR	4580777	PrimaryExpression	"""r+"""		4580690	0					
ANR	4580778	IfStatement	if ( log_fp == NULL )		4580690	9					
ANR	4580779	Condition	log_fp == NULL	82:5:2478:2491	4580690	0	True				
ANR	4580780	EqualityExpression	log_fp == NULL		4580690	0		==			
ANR	4580781	Identifier	log_fp		4580690	0					
ANR	4580782	Identifier	NULL		4580690	1					
ANR	4580783	CompoundStatement		16:21:451:451	4580690	1					
ANR	4580784	ExpressionStatement	"EXCEPT ( ""failed to fdopen log %s, errno = %d"" , logFilename ( ) , errno )"	83:2:2498:2565	4580690	0	True				
ANR	4580785	CallExpression	"EXCEPT ( ""failed to fdopen log %s, errno = %d"" , logFilename ( ) , errno )"		4580690	0					
ANR	4580786	Callee	EXCEPT		4580690	0					
ANR	4580787	Identifier	EXCEPT		4580690	0					
ANR	4580788	ArgumentList	"""failed to fdopen log %s, errno = %d"""		4580690	1					
ANR	4580789	Argument	"""failed to fdopen log %s, errno = %d"""		4580690	0					
ANR	4580790	PrimaryExpression	"""failed to fdopen log %s, errno = %d"""		4580690	0					
ANR	4580791	Argument	logFilename ( )		4580690	1					
ANR	4580792	CallExpression	logFilename ( )		4580690	0					
ANR	4580793	Callee	logFilename		4580690	0					
ANR	4580794	Identifier	logFilename		4580690	0					
ANR	4580795	ArgumentList			4580690	1					
ANR	4580796	Argument	errno		4580690	2					
ANR	4580797	Identifier	errno		4580690	0					
ANR	4580798	IdentifierDeclStatement	LogRecord * log_rec ;	88:1:2605:2624	4580690	10	True				
ANR	4580799	IdentifierDecl	* log_rec		4580690	0					
ANR	4580800	IdentifierDeclType	LogRecord *		4580690	0					
ANR	4580801	Identifier	log_rec		4580690	1					
ANR	4580802	IdentifierDeclStatement	unsigned long count = 0 ;	89:1:2627:2650	4580690	11	True				
ANR	4580803	IdentifierDecl	count = 0		4580690	0					
ANR	4580804	IdentifierDeclType	unsigned long		4580690	0					
ANR	4580805	Identifier	count		4580690	1					
ANR	4580806	AssignmentExpression	count = 0		4580690	2		=			
ANR	4580807	Identifier	count		4580690	0					
ANR	4580808	PrimaryExpression	0		4580690	1					
ANR	4580809	IdentifierDeclStatement	bool is_clean = true ;	90:1:2653:2673	4580690	12	True				
ANR	4580810	IdentifierDecl	is_clean = true		4580690	0					
ANR	4580811	IdentifierDeclType	bool		4580690	0					
ANR	4580812	Identifier	is_clean		4580690	1					
ANR	4580813	AssignmentExpression	is_clean = true		4580690	2		=			
ANR	4580814	Identifier	true		4580690	0					
ANR	4580815	Identifier	true		4580690	1					
ANR	4580816	IdentifierDeclStatement	bool requires_successful_cleaning = false ;	91:1:2728:2769	4580690	13	True				
ANR	4580817	IdentifierDecl	requires_successful_cleaning = false		4580690	0					
ANR	4580818	IdentifierDeclType	bool		4580690	0					
ANR	4580819	Identifier	requires_successful_cleaning		4580690	1					
ANR	4580820	AssignmentExpression	requires_successful_cleaning = false		4580690	2		=			
ANR	4580821	Identifier	false		4580690	0					
ANR	4580822	Identifier	false		4580690	1					
ANR	4580823	IdentifierDeclStatement	long next_log_entry_pos = 0 ;	92:1:2772:2799	4580690	14	True				
ANR	4580824	IdentifierDecl	next_log_entry_pos = 0		4580690	0					
ANR	4580825	IdentifierDeclType	long		4580690	0					
ANR	4580826	Identifier	next_log_entry_pos		4580690	1					
ANR	4580827	AssignmentExpression	next_log_entry_pos = 0		4580690	2		=			
ANR	4580828	Identifier	next_log_entry_pos		4580690	0					
ANR	4580829	PrimaryExpression	0		4580690	1					
ANR	4580830	WhileStatement	"while ( ( log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry ) ) != 0 )"		4580690	15					
ANR	4580831	Condition	"( log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry ) ) != 0"	93:8:2809:2866	4580690	0	True				
ANR	4580832	EqualityExpression	"( log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry ) ) != 0"		4580690	0		!=			
ANR	4580833	AssignmentExpression	"log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry )"		4580690	0		=			
ANR	4580834	Identifier	log_rec		4580690	0					
ANR	4580835	CallExpression	"ReadLogEntry ( log_fp , InstantiateLogEntry )"		4580690	1					
ANR	4580836	Callee	ReadLogEntry		4580690	0					
ANR	4580837	Identifier	ReadLogEntry		4580690	0					
ANR	4580838	ArgumentList	log_fp		4580690	1					
ANR	4580839	Argument	log_fp		4580690	0					
ANR	4580840	Identifier	log_fp		4580690	0					
ANR	4580841	Argument	InstantiateLogEntry		4580690	1					
ANR	4580842	Identifier	InstantiateLogEntry		4580690	0					
ANR	4580843	PrimaryExpression	0		4580690	1					
ANR	4580844	CompoundStatement		27:68:826:826	4580690	1					
ANR	4580845	ExpressionStatement	next_log_entry_pos = ftell ( log_fp )	94:2:2873:2907	4580690	0	True				
ANR	4580846	AssignmentExpression	next_log_entry_pos = ftell ( log_fp )		4580690	0		=			
ANR	4580847	Identifier	next_log_entry_pos		4580690	0					
ANR	4580848	CallExpression	ftell ( log_fp )		4580690	1					
ANR	4580849	Callee	ftell		4580690	0					
ANR	4580850	Identifier	ftell		4580690	0					
ANR	4580851	ArgumentList	log_fp		4580690	1					
ANR	4580852	Argument	log_fp		4580690	0					
ANR	4580853	Identifier	log_fp		4580690	0					
ANR	4580854	ExpressionStatement	count ++	95:2:2911:2918	4580690	1	True				
ANR	4580855	PostIncDecOperationExpression	count ++		4580690	0					
ANR	4580856	Identifier	count		4580690	0					
ANR	4580857	IncDec	++		4580690	1					
ANR	4580858	SwitchStatement	switch ( log_rec -> get_op_type ( ) )		4580690	2					
ANR	4580859	Condition	log_rec -> get_op_type ( )	96:10:2930:2951	4580690	0	True				
ANR	4580860	CallExpression	log_rec -> get_op_type ( )		4580690	0					
ANR	4580861	Callee	log_rec -> get_op_type		4580690	0					
ANR	4580862	PtrMemberAccess	log_rec -> get_op_type		4580690	0					
ANR	4580863	Identifier	log_rec		4580690	0					
ANR	4580864	Identifier	get_op_type		4580690	1					
ANR	4580865	ArgumentList			4580690	1					
ANR	4580866	CompoundStatement		30:34:911:911	4580690	1					
ANR	4580867	Label	case CondorLogOp_BeginTransaction :	97:2:2958:2991	4580690	0	True				
ANR	4580868	Identifier	CondorLogOp_BeginTransaction		4580690	0					
ANR	4580869	ExpressionStatement	is_clean = false	100:3:3084:3100	4580690	1	True				
ANR	4580870	AssignmentExpression	is_clean = false		4580690	0		=			
ANR	4580871	Identifier	is_clean		4580690	0					
ANR	4580872	Identifier	false		4580690	1					
ANR	4580873	IfStatement	if ( active_transaction )		4580690	2					
ANR	4580874	Condition	active_transaction	101:7:3109:3126	4580690	0	True				
ANR	4580875	Identifier	active_transaction		4580690	0					
ANR	4580876	CompoundStatement		35:27:1086:1086	4580690	1					
ANR	4580877	Statement	dprintf	102:4:3135:3141	4580690	0	True				
ANR	4580878	Statement	(	102:11:3142:3142	4580690	1	True				
ANR	4580879	Statement	D_ALWAYS	102:12:3143:3150	4580690	2	True				
ANR	4580880	Statement	","	102:20:3151:3151	4580690	3	True				
ANR	4580881	Statement	"""Warning: Encountered nested transactions in %s, """	102:22:3153:3202	4580690	4	True				
ANR	4580882	Statement	"""log may be bogus..."""	103:6:3210:3230	4580690	5	True				
ANR	4580883	Statement	","	103:27:3231:3231	4580690	6	True				
ANR	4580884	Statement	filename	103:29:3233:3240	4580690	7	True				
ANR	4580885	Statement	)	103:37:3241:3241	4580690	8	True				
ANR	4580886	ExpressionStatement		103:38:3242:3242	4580690	9	True				
ANR	4580887	ElseStatement	else		4580690	0					
ANR	4580888	CompoundStatement		38:10:1211:1211	4580690	0					
ANR	4580889	ExpressionStatement	active_transaction = new Transaction ( )	105:4:3260:3298	4580690	0	True				
ANR	4580890	AssignmentExpression	active_transaction = new Transaction ( )		4580690	0		=			
ANR	4580891	Identifier	active_transaction		4580690	0					
ANR	4580892	UnaryExpression	new Transaction ( )		4580690	1					
ANR	4580893	Statement	delete	107:3:3308:3313	4580690	3	True				
ANR	4580894	ExpressionStatement	log_rec	107:10:3315:3322	4580690	4	True				
ANR	4580895	Identifier	log_rec		4580690	0					
ANR	4580896	BreakStatement	break ;	108:3:3327:3332	4580690	5	True				
ANR	4580897	Label	case CondorLogOp_EndTransaction :	109:2:3336:3367	4580690	6	True				
ANR	4580898	Identifier	CondorLogOp_EndTransaction		4580690	0					
ANR	4580899	IfStatement	if ( ! active_transaction )		4580690	7					
ANR	4580900	Condition	! active_transaction	110:7:3376:3394	4580690	0	True				
ANR	4580901	UnaryOperationExpression	! active_transaction		4580690	0					
ANR	4580902	UnaryOperator	!		4580690	0					
ANR	4580903	Identifier	active_transaction		4580690	1					
ANR	4580904	CompoundStatement		44:28:1354:1354	4580690	1					
ANR	4580905	Statement	dprintf	111:4:3403:3409	4580690	0	True				
ANR	4580906	Statement	(	111:11:3410:3410	4580690	1	True				
ANR	4580907	Statement	D_ALWAYS	111:12:3411:3418	4580690	2	True				
ANR	4580908	Statement	","	111:20:3419:3419	4580690	3	True				
ANR	4580909	Statement	"""Warning: Encountered unmatched end transaction in %s, """	111:22:3421:3476	4580690	4	True				
ANR	4580910	Statement	"""log may be bogus..."""	112:6:3484:3504	4580690	5	True				
ANR	4580911	Statement	","	112:27:3505:3505	4580690	6	True				
ANR	4580912	Statement	filename	112:29:3507:3514	4580690	7	True				
ANR	4580913	Statement	)	112:37:3515:3515	4580690	8	True				
ANR	4580914	ExpressionStatement		112:38:3516:3516	4580690	9	True				
ANR	4580915	ElseStatement	else		4580690	0					
ANR	4580916	CompoundStatement		47:10:1485:1485	4580690	0					
ANR	4580917	ExpressionStatement	"active_transaction -> Commit ( NULL , ( void * ) & table )"	114:4:3534:3582	4580690	0	True				
ANR	4580918	CallExpression	"active_transaction -> Commit ( NULL , ( void * ) & table )"		4580690	0					
ANR	4580919	Callee	active_transaction -> Commit		4580690	0					
ANR	4580920	PtrMemberAccess	active_transaction -> Commit		4580690	0					
ANR	4580921	Identifier	active_transaction		4580690	0					
ANR	4580922	Identifier	Commit		4580690	1					
ANR	4580923	ArgumentList	NULL		4580690	1					
ANR	4580924	Argument	NULL		4580690	0					
ANR	4580925	Identifier	NULL		4580690	0					
ANR	4580926	Argument	( void * ) & table		4580690	1					
ANR	4580927	CastExpression	( void * ) & table		4580690	0					
ANR	4580928	CastTarget	void *		4580690	0					
ANR	4580929	UnaryOperationExpression	& table		4580690	1					
ANR	4580930	UnaryOperator	&		4580690	0					
ANR	4580931	Identifier	table		4580690	1					
ANR	4580932	Statement	delete	115:4:3613:3618	4580690	1	True				
ANR	4580933	ExpressionStatement	active_transaction	115:11:3620:3638	4580690	2	True				
ANR	4580934	Identifier	active_transaction		4580690	0					
ANR	4580935	ExpressionStatement	active_transaction = NULL	116:4:3644:3669	4580690	3	True				
ANR	4580936	AssignmentExpression	active_transaction = NULL		4580690	0		=			
ANR	4580937	Identifier	active_transaction		4580690	0					
ANR	4580938	Identifier	NULL		4580690	1					
ANR	4580939	Statement	delete	118:3:3679:3684	4580690	8	True				
ANR	4580940	ExpressionStatement	log_rec	118:10:3686:3693	4580690	9	True				
ANR	4580941	Identifier	log_rec		4580690	0					
ANR	4580942	BreakStatement	break ;	119:3:3698:3703	4580690	10	True				
ANR	4580943	Label	case CondorLogOp_LogHistoricalSequenceNumber :	120:2:3707:3751	4580690	11	True				
ANR	4580944	Identifier	CondorLogOp_LogHistoricalSequenceNumber		4580690	0					
ANR	4580945	IfStatement	if ( count != 1 )		4580690	12					
ANR	4580946	Condition	count != 1	121:6:3759:3768	4580690	0	True				
ANR	4580947	EqualityExpression	count != 1		4580690	0		!=			
ANR	4580948	Identifier	count		4580690	0					
ANR	4580949	PrimaryExpression	1		4580690	1					
ANR	4580950	CompoundStatement		55:18:1728:1728	4580690	1					
ANR	4580951	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"" , count )"	122:4:3777:3896	4580690	0	True				
ANR	4580952	CallExpression	"dprintf ( D_ALWAYS , ""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"" , count )"		4580690	0					
ANR	4580953	Callee	dprintf		4580690	0					
ANR	4580954	Identifier	dprintf		4580690	0					
ANR	4580955	ArgumentList	D_ALWAYS		4580690	1					
ANR	4580956	Argument	D_ALWAYS		4580690	0					
ANR	4580957	Identifier	D_ALWAYS		4580690	0					
ANR	4580958	Argument	"""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"""		4580690	1					
ANR	4580959	PrimaryExpression	"""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"""		4580690	0					
ANR	4580960	Argument	count		4580690	2					
ANR	4580961	Identifier	count		4580690	0					
ANR	4580962	ExpressionStatement	historical_sequence_number = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number ( )	124:3:3906:4009	4580690	13	True				
ANR	4580963	AssignmentExpression	historical_sequence_number = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number ( )		4580690	0		=			
ANR	4580964	Identifier	historical_sequence_number		4580690	0					
ANR	4580965	CallExpression	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number ( )		4580690	1					
ANR	4580966	Callee	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number		4580690	0					
ANR	4580967	PtrMemberAccess	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number		4580690	0					
ANR	4580968	CastExpression	( LogHistoricalSequenceNumber * ) log_rec		4580690	0					
ANR	4580969	CastTarget	LogHistoricalSequenceNumber *		4580690	0					
ANR	4580970	Identifier	log_rec		4580690	1					
ANR	4580971	Identifier	get_historical_sequence_number		4580690	1					
ANR	4580972	ArgumentList			4580690	1					
ANR	4580973	ExpressionStatement	m_original_log_birthdate = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp ( )	125:3:4014:4098	4580690	14	True				
ANR	4580974	AssignmentExpression	m_original_log_birthdate = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp ( )		4580690	0		=			
ANR	4580975	Identifier	m_original_log_birthdate		4580690	0					
ANR	4580976	CallExpression	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp ( )		4580690	1					
ANR	4580977	Callee	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp		4580690	0					
ANR	4580978	PtrMemberAccess	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp		4580690	0					
ANR	4580979	CastExpression	( LogHistoricalSequenceNumber * ) log_rec		4580690	0					
ANR	4580980	CastTarget	LogHistoricalSequenceNumber *		4580690	0					
ANR	4580981	Identifier	log_rec		4580690	1					
ANR	4580982	Identifier	get_timestamp		4580690	1					
ANR	4580983	ArgumentList			4580690	1					
ANR	4580984	Statement	delete	126:3:4103:4108	4580690	15	True				
ANR	4580985	ExpressionStatement	log_rec	126:10:4110:4117	4580690	16	True				
ANR	4580986	Identifier	log_rec		4580690	0					
ANR	4580987	BreakStatement	break ;	127:3:4122:4127	4580690	17	True				
ANR	4580988	Label	default :	128:2:4131:4138	4580690	18	True				
ANR	4580989	Identifier	default		4580690	0					
ANR	4580990	IfStatement	if ( active_transaction )		4580690	19					
ANR	4580991	Condition	active_transaction	129:7:4147:4164	4580690	0	True				
ANR	4580992	Identifier	active_transaction		4580690	0					
ANR	4580993	CompoundStatement		63:27:2124:2124	4580690	1					
ANR	4580994	ExpressionStatement	active_transaction -> AppendLog ( log_rec )	130:4:4173:4211	4580690	0	True				
ANR	4580995	CallExpression	active_transaction -> AppendLog ( log_rec )		4580690	0					
ANR	4580996	Callee	active_transaction -> AppendLog		4580690	0					
ANR	4580997	PtrMemberAccess	active_transaction -> AppendLog		4580690	0					
ANR	4580998	Identifier	active_transaction		4580690	0					
ANR	4580999	Identifier	AppendLog		4580690	1					
ANR	4581000	ArgumentList	log_rec		4580690	1					
ANR	4581001	Argument	log_rec		4580690	0					
ANR	4581002	Identifier	log_rec		4580690	0					
ANR	4581003	ElseStatement	else		4580690	0					
ANR	4581004	CompoundStatement		65:10:2180:2180	4580690	0					
ANR	4581005	ExpressionStatement	log_rec -> Play ( ( void * ) & table )	132:4:4229:4258	4580690	0	True				
ANR	4581006	CallExpression	log_rec -> Play ( ( void * ) & table )		4580690	0					
ANR	4581007	Callee	log_rec -> Play		4580690	0					
ANR	4581008	PtrMemberAccess	log_rec -> Play		4580690	0					
ANR	4581009	Identifier	log_rec		4580690	0					
ANR	4581010	Identifier	Play		4580690	1					
ANR	4581011	ArgumentList	( void * ) & table		4580690	1					
ANR	4581012	Argument	( void * ) & table		4580690	0					
ANR	4581013	CastExpression	( void * ) & table		4580690	0					
ANR	4581014	CastTarget	void *		4580690	0					
ANR	4581015	UnaryOperationExpression	& table		4580690	1					
ANR	4581016	UnaryOperator	&		4580690	0					
ANR	4581017	Identifier	table		4580690	1					
ANR	4581018	Statement	delete	133:4:4264:4269	4580690	1	True				
ANR	4581019	ExpressionStatement	log_rec	133:11:4271:4278	4580690	2	True				
ANR	4581020	Identifier	log_rec		4580690	0					
ANR	4581021	IdentifierDeclStatement	long final_log_entry_pos = ftell ( log_fp ) ;	137:1:4293:4333	4580690	16	True				
ANR	4581022	IdentifierDecl	final_log_entry_pos = ftell ( log_fp )		4580690	0					
ANR	4581023	IdentifierDeclType	long		4580690	0					
ANR	4581024	Identifier	final_log_entry_pos		4580690	1					
ANR	4581025	AssignmentExpression	final_log_entry_pos = ftell ( log_fp )		4580690	2		=			
ANR	4581026	Identifier	final_log_entry_pos		4580690	0					
ANR	4581027	CallExpression	ftell ( log_fp )		4580690	1					
ANR	4581028	Callee	ftell		4580690	0					
ANR	4581029	Identifier	ftell		4580690	0					
ANR	4581030	ArgumentList	log_fp		4580690	1					
ANR	4581031	Argument	log_fp		4580690	0					
ANR	4581032	Identifier	log_fp		4580690	0					
ANR	4581033	IfStatement	if ( next_log_entry_pos != final_log_entry_pos )		4580690	17					
ANR	4581034	Condition	next_log_entry_pos != final_log_entry_pos	138:5:4340:4380	4580690	0	True				
ANR	4581035	EqualityExpression	next_log_entry_pos != final_log_entry_pos		4580690	0		!=			
ANR	4581036	Identifier	next_log_entry_pos		4580690	0					
ANR	4581037	Identifier	final_log_entry_pos		4580690	1					
ANR	4581038	CompoundStatement		72:49:2341:2341	4580690	1					
ANR	4581039	Statement	dprintf	146:2:4832:4838	4580690	0	True				
ANR	4581040	Statement	(	146:9:4839:4839	4580690	1	True				
ANR	4581041	Statement	D_ALWAYS	146:10:4840:4847	4580690	2	True				
ANR	4581042	Statement	","	146:18:4848:4848	4580690	3	True				
ANR	4581043	Statement	"""Detected unterminated log entry in ClassAd Log %s."""	146:19:4849:4900	4580690	4	True				
ANR	4581044	Statement	""" Forcing rotation.\\n"""	147:4:4906:4927	4580690	5	True				
ANR	4581045	Statement	","	147:26:4928:4928	4580690	6	True				
ANR	4581046	Statement	logFilename	147:28:4930:4940	4580690	7	True				
ANR	4581047	Statement	(	147:39:4941:4941	4580690	8	True				
ANR	4581048	Statement	)	147:40:4942:4942	4580690	9	True				
ANR	4581049	Statement	)	147:41:4943:4943	4580690	10	True				
ANR	4581050	ExpressionStatement		147:42:4944:4944	4580690	11	True				
ANR	4581051	ExpressionStatement	requires_successful_cleaning = true	148:2:4948:4983	4580690	12	True				
ANR	4581052	AssignmentExpression	requires_successful_cleaning = true		4580690	0		=			
ANR	4581053	Identifier	requires_successful_cleaning		4580690	0					
ANR	4581054	Identifier	true		4580690	1					
ANR	4581055	IfStatement	if ( active_transaction )		4580690	18					
ANR	4581056	Condition	active_transaction	150:5:4993:5010	4580690	0	True				
ANR	4581057	Identifier	active_transaction		4580690	0					
ANR	4581058	CompoundStatement		84:25:2970:2970	4580690	1					
ANR	4581059	Statement	delete	151:2:5049:5054	4580690	0	True				
ANR	4581060	ExpressionStatement	active_transaction	151:9:5056:5074	4580690	1	True				
ANR	4581061	Identifier	active_transaction		4580690	0					
ANR	4581062	ExpressionStatement	active_transaction = NULL	152:2:5078:5103	4580690	2	True				
ANR	4581063	AssignmentExpression	active_transaction = NULL		4580690	0		=			
ANR	4581064	Identifier	active_transaction		4580690	0					
ANR	4581065	Identifier	NULL		4580690	1					
ANR	4581066	IfStatement	if ( ! requires_successful_cleaning )		4580690	3					
ANR	4581067	Condition	! requires_successful_cleaning	154:6:5112:5140	4580690	0	True				
ANR	4581068	UnaryOperationExpression	! requires_successful_cleaning		4580690	0					
ANR	4581069	UnaryOperator	!		4580690	0					
ANR	4581070	Identifier	requires_successful_cleaning		4580690	1					
ANR	4581071	CompoundStatement		88:38:3101:3101	4580690	1					
ANR	4581072	Statement	dprintf	157:3:5242:5248	4580690	0	True				
ANR	4581073	Statement	(	157:10:5249:5249	4580690	1	True				
ANR	4581074	Statement	D_ALWAYS	157:11:5250:5257	4580690	2	True				
ANR	4581075	Statement	","	157:19:5258:5258	4580690	3	True				
ANR	4581076	Statement	"""Detected unterminated transaction in ClassAd Log"""	157:20:5259:5308	4580690	4	True				
ANR	4581077	Statement	"""%s. Forcing rotation.\\n"""	158:5:5315:5339	4580690	5	True				
ANR	4581078	Statement	","	158:30:5340:5340	4580690	6	True				
ANR	4581079	Statement	logFilename	158:32:5342:5352	4580690	7	True				
ANR	4581080	Statement	(	158:43:5353:5353	4580690	8	True				
ANR	4581081	Statement	)	158:44:5354:5354	4580690	9	True				
ANR	4581082	Statement	)	158:45:5355:5355	4580690	10	True				
ANR	4581083	ExpressionStatement		158:46:5356:5356	4580690	11	True				
ANR	4581084	ExpressionStatement	requires_successful_cleaning = true	159:3:5361:5396	4580690	12	True				
ANR	4581085	AssignmentExpression	requires_successful_cleaning = true		4580690	0		=			
ANR	4581086	Identifier	requires_successful_cleaning		4580690	0					
ANR	4581087	Identifier	true		4580690	1					
ANR	4581088	IfStatement	if ( ! count )		4580690	19					
ANR	4581089	Condition	! count	162:4:5409:5414	4580690	0	True				
ANR	4581090	UnaryOperationExpression	! count		4580690	0					
ANR	4581091	UnaryOperator	!		4580690	0					
ANR	4581092	Identifier	count		4580690	1					
ANR	4581093	CompoundStatement		96:12:3374:3374	4580690	1					
ANR	4581094	ExpressionStatement	"log_rec = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"	163:2:5421:5518	4580690	0	True				
ANR	4581095	AssignmentExpression	"log_rec = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"		4580690	0		=			
ANR	4581096	Identifier	log_rec		4580690	0					
ANR	4581097	Expression	"historical_sequence_number , m_original_log_birthdate"		4580690	1					
ANR	4581098	Identifier	historical_sequence_number		4580690	0					
ANR	4581099	Identifier	m_original_log_birthdate		4580690	1					
ANR	4581100	IfStatement	if ( log_rec -> Write ( log_fp ) < 0 )		4580690	1					
ANR	4581101	Condition	log_rec -> Write ( log_fp ) < 0	164:6:5526:5551	4580690	0	True				
ANR	4581102	RelationalExpression	log_rec -> Write ( log_fp ) < 0		4580690	0		<			
ANR	4581103	CallExpression	log_rec -> Write ( log_fp )		4580690	0					
ANR	4581104	Callee	log_rec -> Write		4580690	0					
ANR	4581105	PtrMemberAccess	log_rec -> Write		4580690	0					
ANR	4581106	Identifier	log_rec		4580690	0					
ANR	4581107	Identifier	Write		4580690	1					
ANR	4581108	ArgumentList	log_fp		4580690	1					
ANR	4581109	Argument	log_fp		4580690	0					
ANR	4581110	Identifier	log_fp		4580690	0					
ANR	4581111	PrimaryExpression	0		4580690	1					
ANR	4581112	CompoundStatement		98:34:3511:3511	4580690	1					
ANR	4581113	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	165:3:5559:5621	4580690	0	True				
ANR	4581114	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		4580690	0					
ANR	4581115	Callee	EXCEPT		4580690	0					
ANR	4581116	Identifier	EXCEPT		4580690	0					
ANR	4581117	ArgumentList	"""write to %s failed, errno = %d"""		4580690	1					
ANR	4581118	Argument	"""write to %s failed, errno = %d"""		4580690	0					
ANR	4581119	PrimaryExpression	"""write to %s failed, errno = %d"""		4580690	0					
ANR	4581120	Argument	logFilename ( )		4580690	1					
ANR	4581121	CallExpression	logFilename ( )		4580690	0					
ANR	4581122	Callee	logFilename		4580690	0					
ANR	4581123	Identifier	logFilename		4580690	0					
ANR	4581124	ArgumentList			4580690	1					
ANR	4581125	Argument	errno		4580690	2					
ANR	4581126	Identifier	errno		4580690	0					
ANR	4581127	IfStatement	if ( ! is_clean || requires_successful_cleaning )		4580690	20					
ANR	4581128	Condition	! is_clean || requires_successful_cleaning	168:5:5635:5675	4580690	0	True				
ANR	4581129	OrExpression	! is_clean || requires_successful_cleaning		4580690	0		||			
ANR	4581130	UnaryOperationExpression	! is_clean		4580690	0					
ANR	4581131	UnaryOperator	!		4580690	0					
ANR	4581132	Identifier	is_clean		4580690	1					
ANR	4581133	Identifier	requires_successful_cleaning		4580690	1					
ANR	4581134	CompoundStatement		102:49:3636:3636	4580690	1					
ANR	4581135	IfStatement	if ( ! TruncLog ( ) && requires_successful_cleaning )		4580690	0					
ANR	4581136	Condition	! TruncLog ( ) && requires_successful_cleaning	169:6:5687:5729	4580690	0	True				
ANR	4581137	AndExpression	! TruncLog ( ) && requires_successful_cleaning		4580690	0		&&			
ANR	4581138	UnaryOperationExpression	! TruncLog ( )		4580690	0					
ANR	4581139	UnaryOperator	!		4580690	0					
ANR	4581140	CallExpression	TruncLog ( )		4580690	1					
ANR	4581141	Callee	TruncLog		4580690	0					
ANR	4581142	Identifier	TruncLog		4580690	0					
ANR	4581143	ArgumentList			4580690	1					
ANR	4581144	Identifier	requires_successful_cleaning		4580690	1					
ANR	4581145	CompoundStatement		103:52:3690:3690	4580690	1					
ANR	4581146	ExpressionStatement	"EXCEPT ( ""Failed to rotate ClassAd log %s.\\n"" , logFilename ( ) )"	170:3:5738:5797	4580690	0	True				
ANR	4581147	CallExpression	"EXCEPT ( ""Failed to rotate ClassAd log %s.\\n"" , logFilename ( ) )"		4580690	0					
ANR	4581148	Callee	EXCEPT		4580690	0					
ANR	4581149	Identifier	EXCEPT		4580690	0					
ANR	4581150	ArgumentList	"""Failed to rotate ClassAd log %s.\\n"""		4580690	1					
ANR	4581151	Argument	"""Failed to rotate ClassAd log %s.\\n"""		4580690	0					
ANR	4581152	PrimaryExpression	"""Failed to rotate ClassAd log %s.\\n"""		4580690	0					
ANR	4581153	Argument	logFilename ( )		4580690	1					
ANR	4581154	CallExpression	logFilename ( )		4580690	0					
ANR	4581155	Callee	logFilename		4580690	0					
ANR	4581156	Identifier	logFilename		4580690	0					
ANR	4581157	ArgumentList			4580690	1					
ANR	4581158	Identifier	ClassAdLog :: ClassAdLog		4580690	1					
ANR	4581159	ParameterList	"const char * filename , int max_historical_logs_arg"		4580690	2					
ANR	4581160	Parameter	const char * filename	66:23:1942:1961	4580690	0	True				
ANR	4581161	ParameterType	const char *		4580690	0					
ANR	4581162	Identifier	filename		4580690	1					
ANR	4581163	Parameter	int max_historical_logs_arg	66:44:1963:1989	4580690	1	True				
ANR	4581164	ParameterType	int		4580690	0					
ANR	4581165	Identifier	max_historical_logs_arg		4580690	1					
ANR	4581166	CFGEntryNode	ENTRY		4580690		True				
ANR	4581167	CFGExitNode	EXIT		4580690		True				
ANR	4581168	Symbol	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp		4580690						
ANR	4581169	Symbol	logFilename		4580690						
ANR	4581170	Symbol	O_LARGEFILE		4580690						
ANR	4581171	Symbol	safe_open_wrapper_follow		4580690						
ANR	4581172	Symbol	log_filename_buf		4580690						
ANR	4581173	Symbol	ReadLogEntry		4580690						
ANR	4581174	Symbol	ftell		4580690						
ANR	4581175	Symbol	O_CREAT		4580690						
ANR	4581176	Symbol	m_original_log_birthdate		4580690						
ANR	4581177	Symbol	fdopen		4580690						
ANR	4581178	Symbol	& table		4580690						
ANR	4581179	Symbol	log_fd		4580690						
ANR	4581180	Symbol	InstantiateLogEntry		4580690						
ANR	4581181	Symbol	O_RDWR		4580690						
ANR	4581182	Symbol	next_log_entry_pos		4580690						
ANR	4581183	Symbol	requires_successful_cleaning		4580690						
ANR	4581184	Symbol	TruncLog		4580690						
ANR	4581185	Symbol	m_nondurable_level		4580690						
ANR	4581186	Symbol	* log_rec		4580690						
ANR	4581187	Symbol	final_log_entry_pos		4580690						
ANR	4581188	Symbol	errno		4580690						
ANR	4581189	Symbol	NULL		4580690						
ANR	4581190	Symbol	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number		4580690						
ANR	4581191	Symbol	this		4580690						
ANR	4581192	Symbol	count		4580690						
ANR	4581193	Symbol	false		4580690						
ANR	4581194	Symbol	D_ALWAYS		4580690						
ANR	4581195	Symbol	active_transaction		4580690						
ANR	4581196	Symbol	log_rec -> get_op_type		4580690						
ANR	4581197	Symbol	* this		4580690						
ANR	4581198	Symbol	log_fp		4580690						
ANR	4581199	Symbol	filename		4580690						
ANR	4581200	Symbol	log_rec		4580690						
ANR	4581201	Symbol	max_historical_logs_arg		4580690						
ANR	4581202	Symbol	true		4580690						
ANR	4581203	Symbol	this -> max_historical_logs		4580690						
ANR	4581204	Symbol	time		4580690						
ANR	4581205	Symbol	historical_sequence_number		4580690						
ANR	4581206	Symbol	is_clean		4580690						
ANR	4581207	Symbol	log_rec -> Write		4580690						
ANR	4581208	Function	ClassAdLog :: ~ClassAdLog	175:0:5809:6104							
ANR	4581209	FunctionDef	ClassAdLog :: ~ClassAdLog ()		4581208	0					
ANR	4581210	CompoundStatement		176:0:5835:6104	4581208	0					
ANR	4581211	IfStatement	if ( active_transaction )		4581208	0					
ANR	4581212	Condition	active_transaction	177:5:5842:5859	4581208	0	True				
ANR	4581213	Identifier	active_transaction		4581208	0					
ANR	4581214	Statement	delete	177:25:5862:5867	4581208	1	True				
ANR	4581215	ExpressionStatement	active_transaction	177:32:5869:5887	4581208	1	True				
ANR	4581216	Identifier	active_transaction		4581208	0					
ANR	4581217	ExpressionStatement	table . startIterations ( )	181:1:5996:6019	4581208	2	True				
ANR	4581218	CallExpression	table . startIterations ( )		4581208	0					
ANR	4581219	Callee	table . startIterations		4581208	0					
ANR	4581220	MemberAccess	table . startIterations		4581208	0					
ANR	4581221	Identifier	table		4581208	0					
ANR	4581222	Identifier	startIterations		4581208	1					
ANR	4581223	ArgumentList			4581208	1					
ANR	4581224	IdentifierDeclStatement	ClassAd * ad ;	182:1:6022:6033	4581208	3	True				
ANR	4581225	IdentifierDecl	* ad		4581208	0					
ANR	4581226	IdentifierDeclType	ClassAd *		4581208	0					
ANR	4581227	Identifier	ad		4581208	1					
ANR	4581228	IdentifierDeclStatement	HashKey key ;	183:1:6036:6047	4581208	4	True				
ANR	4581229	IdentifierDecl	key		4581208	0					
ANR	4581230	IdentifierDeclType	HashKey		4581208	0					
ANR	4581231	Identifier	key		4581208	1					
ANR	4581232	WhileStatement	"while ( table . iterate ( key , ad ) == 1 )"		4581208	5					
ANR	4581233	Condition	"table . iterate ( key , ad ) == 1"	184:8:6057:6083	4581208	0	True				
ANR	4581234	EqualityExpression	"table . iterate ( key , ad ) == 1"		4581208	0		==			
ANR	4581235	CallExpression	"table . iterate ( key , ad )"		4581208	0					
ANR	4581236	Callee	table . iterate		4581208	0					
ANR	4581237	MemberAccess	table . iterate		4581208	0					
ANR	4581238	Identifier	table		4581208	0					
ANR	4581239	Identifier	iterate		4581208	1					
ANR	4581240	ArgumentList	key		4581208	1					
ANR	4581241	Argument	key		4581208	0					
ANR	4581242	Identifier	key		4581208	0					
ANR	4581243	Argument	ad		4581208	1					
ANR	4581244	Identifier	ad		4581208	0					
ANR	4581245	PrimaryExpression	1		4581208	1					
ANR	4581246	CompoundStatement		9:37:250:250	4581208	1					
ANR	4581247	Statement	delete	185:2:6090:6095	4581208	0	True				
ANR	4581248	ExpressionStatement	ad	185:9:6097:6099	4581208	1	True				
ANR	4581249	Identifier	ad		4581208	0					
ANR	4581250	Identifier	ClassAdLog :: ~ClassAdLog		4581208	1					
ANR	4581251	ParameterList			4581208	2					
ANR	4581252	CFGEntryNode	ENTRY		4581208		True				
ANR	4581253	CFGExitNode	EXIT		4581208		True				
ANR	4581254	Symbol	ad		4581208						
ANR	4581255	Symbol	table . iterate		4581208						
ANR	4581256	Symbol	active_transaction		4581208						
ANR	4581257	Symbol	table		4581208						
ANR	4581258	Symbol	key		4581208						
ANR	4581259	Function	ClassAdLog :: AppendLog	188:0:6106:6929							
ANR	4581260	FunctionDef	ClassAdLog :: AppendLog (LogRecord * log)		4581259	0					
ANR	4581261	CompoundStatement		190:0:6149:6929	4581259	0					
ANR	4581262	IfStatement	if ( active_transaction )		4581259	0					
ANR	4581263	Condition	active_transaction	191:5:6156:6173	4581259	0	True				
ANR	4581264	Identifier	active_transaction		4581259	0					
ANR	4581265	CompoundStatement		2:25:26:26	4581259	1					
ANR	4581266	IfStatement	if ( active_transaction -> EmptyTransaction ( ) )		4581259	0					
ANR	4581267	Condition	active_transaction -> EmptyTransaction ( )	192:6:6184:6221	4581259	0	True				
ANR	4581268	CallExpression	active_transaction -> EmptyTransaction ( )		4581259	0					
ANR	4581269	Callee	active_transaction -> EmptyTransaction		4581259	0					
ANR	4581270	PtrMemberAccess	active_transaction -> EmptyTransaction		4581259	0					
ANR	4581271	Identifier	active_transaction		4581259	0					
ANR	4581272	Identifier	EmptyTransaction		4581259	1					
ANR	4581273	ArgumentList			4581259	1					
ANR	4581274	CompoundStatement		3:46:74:74	4581259	1					
ANR	4581275	Statement	LogBeginTransaction	193:3:6229:6247	4581259	0	True				
ANR	4581276	Statement	*	193:23:6249:6249	4581259	1	True				
ANR	4581277	Statement	l	193:24:6250:6250	4581259	2	True				
ANR	4581278	Statement	=	193:26:6252:6252	4581259	3	True				
ANR	4581279	Statement	new	193:28:6254:6256	4581259	4	True				
ANR	4581280	ExpressionStatement	LogBeginTransaction	193:32:6258:6277	4581259	5	True				
ANR	4581281	Identifier	LogBeginTransaction		4581259	0					
ANR	4581282	ExpressionStatement	active_transaction -> AppendLog ( l )	194:3:6282:6314	4581259	6	True				
ANR	4581283	CallExpression	active_transaction -> AppendLog ( l )		4581259	0					
ANR	4581284	Callee	active_transaction -> AppendLog		4581259	0					
ANR	4581285	PtrMemberAccess	active_transaction -> AppendLog		4581259	0					
ANR	4581286	Identifier	active_transaction		4581259	0					
ANR	4581287	Identifier	AppendLog		4581259	1					
ANR	4581288	ArgumentList	l		4581259	1					
ANR	4581289	Argument	l		4581259	0					
ANR	4581290	Identifier	l		4581259	0					
ANR	4581291	ExpressionStatement	active_transaction -> AppendLog ( log )	196:2:6322:6356	4581259	1	True				
ANR	4581292	CallExpression	active_transaction -> AppendLog ( log )		4581259	0					
ANR	4581293	Callee	active_transaction -> AppendLog		4581259	0					
ANR	4581294	PtrMemberAccess	active_transaction -> AppendLog		4581259	0					
ANR	4581295	Identifier	active_transaction		4581259	0					
ANR	4581296	Identifier	AppendLog		4581259	1					
ANR	4581297	ArgumentList	log		4581259	1					
ANR	4581298	Argument	log		4581259	0					
ANR	4581299	Identifier	log		4581259	0					
ANR	4581300	ElseStatement	else		4581259	0					
ANR	4581301	CompoundStatement		8:8:216:216	4581259	0					
ANR	4581302	IfStatement	if ( log_fp != NULL )		4581259	0					
ANR	4581303	Condition	log_fp != NULL	199:6:6402:6413	4581259	0	True				
ANR	4581304	EqualityExpression	log_fp != NULL		4581259	0		!=			
ANR	4581305	Identifier	log_fp		4581259	0					
ANR	4581306	Identifier	NULL		4581259	1					
ANR	4581307	CompoundStatement		10:20:266:266	4581259	1					
ANR	4581308	IfStatement	if ( log -> Write ( log_fp ) < 0 )		4581259	0					
ANR	4581309	Condition	log -> Write ( log_fp ) < 0	200:7:6425:6446	4581259	0	True				
ANR	4581310	RelationalExpression	log -> Write ( log_fp ) < 0		4581259	0		<			
ANR	4581311	CallExpression	log -> Write ( log_fp )		4581259	0					
ANR	4581312	Callee	log -> Write		4581259	0					
ANR	4581313	PtrMemberAccess	log -> Write		4581259	0					
ANR	4581314	Identifier	log		4581259	0					
ANR	4581315	Identifier	Write		4581259	1					
ANR	4581316	ArgumentList	log_fp		4581259	1					
ANR	4581317	Argument	log_fp		4581259	0					
ANR	4581318	Identifier	log_fp		4581259	0					
ANR	4581319	PrimaryExpression	0		4581259	1					
ANR	4581320	CompoundStatement		11:31:299:299	4581259	1					
ANR	4581321	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	201:4:6455:6517	4581259	0	True				
ANR	4581322	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		4581259	0					
ANR	4581323	Callee	EXCEPT		4581259	0					
ANR	4581324	Identifier	EXCEPT		4581259	0					
ANR	4581325	ArgumentList	"""write to %s failed, errno = %d"""		4581259	1					
ANR	4581326	Argument	"""write to %s failed, errno = %d"""		4581259	0					
ANR	4581327	PrimaryExpression	"""write to %s failed, errno = %d"""		4581259	0					
ANR	4581328	Argument	logFilename ( )		4581259	1					
ANR	4581329	CallExpression	logFilename ( )		4581259	0					
ANR	4581330	Callee	logFilename		4581259	0					
ANR	4581331	Identifier	logFilename		4581259	0					
ANR	4581332	ArgumentList			4581259	1					
ANR	4581333	Argument	errno		4581259	2					
ANR	4581334	Identifier	errno		4581259	0					
ANR	4581335	IfStatement	if ( m_nondurable_level == 0 )		4581259	1					
ANR	4581336	Condition	m_nondurable_level == 0	203:7:6531:6553	4581259	0	True				
ANR	4581337	EqualityExpression	m_nondurable_level == 0		4581259	0		==			
ANR	4581338	Identifier	m_nondurable_level		4581259	0					
ANR	4581339	PrimaryExpression	0		4581259	1					
ANR	4581340	CompoundStatement		14:33:407:407	4581259	1					
ANR	4581341	IfStatement	if ( fflush ( log_fp ) != 0 )		4581259	0					
ANR	4581342	Condition	fflush ( log_fp ) != 0	205:8:6616:6633	4581259	0	True				
ANR	4581343	EqualityExpression	fflush ( log_fp ) != 0		4581259	0		!=			
ANR	4581344	CallExpression	fflush ( log_fp )		4581259	0					
ANR	4581345	Callee	fflush		4581259	0					
ANR	4581346	Identifier	fflush		4581259	0					
ANR	4581347	ArgumentList	log_fp		4581259	1					
ANR	4581348	Argument	log_fp		4581259	0					
ANR	4581349	Identifier	log_fp		4581259	0					
ANR	4581350	PrimaryExpression	0		4581259	1					
ANR	4581351	CompoundStatement		16:27:485:485	4581259	1					
ANR	4581352	ExpressionStatement	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"	206:5:6642:6704	4581259	0	True				
ANR	4581353	CallExpression	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"		4581259	0					
ANR	4581354	Callee	EXCEPT		4581259	0					
ANR	4581355	Identifier	EXCEPT		4581259	0					
ANR	4581356	ArgumentList	"""flush to %s failed, errno = %d"""		4581259	1					
ANR	4581357	Argument	"""flush to %s failed, errno = %d"""		4581259	0					
ANR	4581358	PrimaryExpression	"""flush to %s failed, errno = %d"""		4581259	0					
ANR	4581359	Argument	logFilename ( )		4581259	1					
ANR	4581360	CallExpression	logFilename ( )		4581259	0					
ANR	4581361	Callee	logFilename		4581259	0					
ANR	4581362	Identifier	logFilename		4581259	0					
ANR	4581363	ArgumentList			4581259	1					
ANR	4581364	Argument	errno		4581259	2					
ANR	4581365	Identifier	errno		4581259	0					
ANR	4581366	IfStatement	if ( condor_fsync ( fileno ( log_fp ) ) < 0 )		4581259	1					
ANR	4581367	Condition	condor_fsync ( fileno ( log_fp ) ) < 0	209:8:6763:6794	4581259	0	True				
ANR	4581368	RelationalExpression	condor_fsync ( fileno ( log_fp ) ) < 0		4581259	0		<			
ANR	4581369	CallExpression	condor_fsync ( fileno ( log_fp ) )		4581259	0					
ANR	4581370	Callee	condor_fsync		4581259	0					
ANR	4581371	Identifier	condor_fsync		4581259	0					
ANR	4581372	ArgumentList	fileno ( log_fp )		4581259	1					
ANR	4581373	Argument	fileno ( log_fp )		4581259	0					
ANR	4581374	CallExpression	fileno ( log_fp )		4581259	0					
ANR	4581375	Callee	fileno		4581259	0					
ANR	4581376	Identifier	fileno		4581259	0					
ANR	4581377	ArgumentList	log_fp		4581259	1					
ANR	4581378	Argument	log_fp		4581259	0					
ANR	4581379	Identifier	log_fp		4581259	0					
ANR	4581380	PrimaryExpression	0		4581259	1					
ANR	4581381	CompoundStatement		20:42:647:647	4581259	1					
ANR	4581382	ExpressionStatement	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"	210:5:6804:6866	4581259	0	True				
ANR	4581383	CallExpression	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"		4581259	0					
ANR	4581384	Callee	EXCEPT		4581259	0					
ANR	4581385	Identifier	EXCEPT		4581259	0					
ANR	4581386	ArgumentList	"""fsync of %s failed, errno = %d"""		4581259	1					
ANR	4581387	Argument	"""fsync of %s failed, errno = %d"""		4581259	0					
ANR	4581388	PrimaryExpression	"""fsync of %s failed, errno = %d"""		4581259	0					
ANR	4581389	Argument	logFilename ( )		4581259	1					
ANR	4581390	CallExpression	logFilename ( )		4581259	0					
ANR	4581391	Callee	logFilename		4581259	0					
ANR	4581392	Identifier	logFilename		4581259	0					
ANR	4581393	ArgumentList			4581259	1					
ANR	4581394	Argument	errno		4581259	2					
ANR	4581395	Identifier	errno		4581259	0					
ANR	4581396	ExpressionStatement	log -> Play ( ( void * ) & table )	214:2:6885:6910	4581259	1	True				
ANR	4581397	CallExpression	log -> Play ( ( void * ) & table )		4581259	0					
ANR	4581398	Callee	log -> Play		4581259	0					
ANR	4581399	PtrMemberAccess	log -> Play		4581259	0					
ANR	4581400	Identifier	log		4581259	0					
ANR	4581401	Identifier	Play		4581259	1					
ANR	4581402	ArgumentList	( void * ) & table		4581259	1					
ANR	4581403	Argument	( void * ) & table		4581259	0					
ANR	4581404	CastExpression	( void * ) & table		4581259	0					
ANR	4581405	CastTarget	void *		4581259	0					
ANR	4581406	UnaryOperationExpression	& table		4581259	1					
ANR	4581407	UnaryOperator	&		4581259	0					
ANR	4581408	Identifier	table		4581259	1					
ANR	4581409	Statement	delete	215:2:6914:6919	4581259	2	True				
ANR	4581410	ExpressionStatement	log	215:9:6921:6924	4581259	3	True				
ANR	4581411	Identifier	log		4581259	0					
ANR	4581412	ReturnType	void		4581259	1					
ANR	4581413	Identifier	ClassAdLog :: AppendLog		4581259	2					
ANR	4581414	ParameterList	LogRecord * log		4581259	3					
ANR	4581415	Parameter	LogRecord * log	189:22:6133:6146	4581259	0	True				
ANR	4581416	ParameterType	LogRecord *		4581259	0					
ANR	4581417	Identifier	log		4581259	1					
ANR	4581418	CFGEntryNode	ENTRY		4581259		True				
ANR	4581419	CFGExitNode	EXIT		4581259		True				
ANR	4581420	Symbol	fflush		4581259						
ANR	4581421	Symbol	logFilename		4581259						
ANR	4581422	Symbol	errno		4581259						
ANR	4581423	Symbol	NULL		4581259						
ANR	4581424	Symbol	log		4581259						
ANR	4581425	Symbol	log -> Write		4581259						
ANR	4581426	Symbol	l		4581259						
ANR	4581427	Symbol	& table		4581259						
ANR	4581428	Symbol	active_transaction		4581259						
ANR	4581429	Symbol	* log		4581259						
ANR	4581430	Symbol	log_fp		4581259						
ANR	4581431	Symbol	active_transaction -> EmptyTransaction		4581259						
ANR	4581432	Symbol	fileno		4581259						
ANR	4581433	Symbol	m_nondurable_level		4581259						
ANR	4581434	Symbol	condor_fsync		4581259						
ANR	4581435	Symbol	* active_transaction		4581259						
ANR	4581436	Function	ClassAdLog :: FlushLog	219:0:6932:7084							
ANR	4581437	FunctionDef	ClassAdLog :: FlushLog ()		4581436	0					
ANR	4581438	CompoundStatement		221:0:6960:7084	4581436	0					
ANR	4581439	IfStatement	if ( log_fp != NULL )		4581436	0					
ANR	4581440	Condition	log_fp != NULL	222:5:6967:6978	4581436	0	True				
ANR	4581441	EqualityExpression	log_fp != NULL		4581436	0		!=			
ANR	4581442	Identifier	log_fp		4581436	0					
ANR	4581443	Identifier	NULL		4581436	1					
ANR	4581444	CompoundStatement		2:19:20:20	4581436	1					
ANR	4581445	IfStatement	if ( fflush ( log_fp ) != 0 )		4581436	0					
ANR	4581446	Condition	fflush ( log_fp ) != 0	223:6:6989:7006	4581436	0	True				
ANR	4581447	EqualityExpression	fflush ( log_fp ) != 0		4581436	0		!=			
ANR	4581448	CallExpression	fflush ( log_fp )		4581436	0					
ANR	4581449	Callee	fflush		4581436	0					
ANR	4581450	Identifier	fflush		4581436	0					
ANR	4581451	ArgumentList	log_fp		4581436	1					
ANR	4581452	Argument	log_fp		4581436	0					
ANR	4581453	Identifier	log_fp		4581436	0					
ANR	4581454	PrimaryExpression	0		4581436	1					
ANR	4581455	CompoundStatement		3:25:47:47	4581436	1					
ANR	4581456	ExpressionStatement	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"	224:3:7013:7075	4581436	0	True				
ANR	4581457	CallExpression	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"		4581436	0					
ANR	4581458	Callee	EXCEPT		4581436	0					
ANR	4581459	Identifier	EXCEPT		4581436	0					
ANR	4581460	ArgumentList	"""flush to %s failed, errno = %d"""		4581436	1					
ANR	4581461	Argument	"""flush to %s failed, errno = %d"""		4581436	0					
ANR	4581462	PrimaryExpression	"""flush to %s failed, errno = %d"""		4581436	0					
ANR	4581463	Argument	logFilename ( )		4581436	1					
ANR	4581464	CallExpression	logFilename ( )		4581436	0					
ANR	4581465	Callee	logFilename		4581436	0					
ANR	4581466	Identifier	logFilename		4581436	0					
ANR	4581467	ArgumentList			4581436	1					
ANR	4581468	Argument	errno		4581436	2					
ANR	4581469	Identifier	errno		4581436	0					
ANR	4581470	ReturnType	void		4581436	1					
ANR	4581471	Identifier	ClassAdLog :: FlushLog		4581436	2					
ANR	4581472	ParameterList			4581436	3					
ANR	4581473	CFGEntryNode	ENTRY		4581436		True				
ANR	4581474	CFGExitNode	EXIT		4581436		True				
ANR	4581475	Symbol	fflush		4581436						
ANR	4581476	Symbol	logFilename		4581436						
ANR	4581477	Symbol	log_fp		4581436						
ANR	4581478	Symbol	errno		4581436						
ANR	4581479	Symbol	NULL		4581436						
ANR	4581480	Function	ClassAdLog :: SaveHistoricalLogs	229:0:7087:8339							
ANR	4581481	FunctionDef	ClassAdLog :: SaveHistoricalLogs ()		4581480	0					
ANR	4581482	CompoundStatement		231:0:7125:8339	4581480	0					
ANR	4581483	IfStatement	if ( ! max_historical_logs )		4581480	0					
ANR	4581484	Condition	! max_historical_logs	232:4:7131:7150	4581480	0	True				
ANR	4581485	UnaryOperationExpression	! max_historical_logs		4581480	0					
ANR	4581486	UnaryOperator	!		4581480	0					
ANR	4581487	Identifier	max_historical_logs		4581480	1					
ANR	4581488	ReturnStatement	return true ;	232:26:7153:7164	4581480	1	True				
ANR	4581489	Identifier	true		4581480	0					
ANR	4581490	IdentifierDeclStatement	MyString new_histfile ;	234:1:7168:7189	4581480	1	True				
ANR	4581491	IdentifierDecl	new_histfile		4581480	0					
ANR	4581492	IdentifierDeclType	MyString		4581480	0					
ANR	4581493	Identifier	new_histfile		4581480	1					
ANR	4581494	IfStatement	"if ( ! new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number ) )"		4581480	2					
ANR	4581495	Condition	"! new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number )"	235:4:7195:7266	4581480	0	True				
ANR	4581496	UnaryOperationExpression	"! new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number )"		4581480	0					
ANR	4581497	UnaryOperator	!		4581480	0					
ANR	4581498	CallExpression	"new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number )"		4581480	1					
ANR	4581499	Callee	new_histfile . sprintf		4581480	0					
ANR	4581500	MemberAccess	new_histfile . sprintf		4581480	0					
ANR	4581501	Identifier	new_histfile		4581480	0					
ANR	4581502	Identifier	sprintf		4581480	1					
ANR	4581503	ArgumentList	"""%s.%lu"""		4581480	1					
ANR	4581504	Argument	"""%s.%lu"""		4581480	0					
ANR	4581505	PrimaryExpression	"""%s.%lu"""		4581480	0					
ANR	4581506	Argument	logFilename ( )		4581480	1					
ANR	4581507	CallExpression	logFilename ( )		4581480	0					
ANR	4581508	Callee	logFilename		4581480	0					
ANR	4581509	Identifier	logFilename		4581480	0					
ANR	4581510	ArgumentList			4581480	1					
ANR	4581511	Argument	historical_sequence_number		4581480	2					
ANR	4581512	Identifier	historical_sequence_number		4581480	0					
ANR	4581513	CompoundStatement		6:1:144:144	4581480	1					
ANR	4581514	ExpressionStatement	"dprintf ( D_ALWAYS , ""Aborting save of historical log: out of memory.\\n"" )"	237:2:7274:7343	4581480	0	True				
ANR	4581515	CallExpression	"dprintf ( D_ALWAYS , ""Aborting save of historical log: out of memory.\\n"" )"		4581480	0					
ANR	4581516	Callee	dprintf		4581480	0					
ANR	4581517	Identifier	dprintf		4581480	0					
ANR	4581518	ArgumentList	D_ALWAYS		4581480	1					
ANR	4581519	Argument	D_ALWAYS		4581480	0					
ANR	4581520	Identifier	D_ALWAYS		4581480	0					
ANR	4581521	Argument	"""Aborting save of historical log: out of memory.\\n"""		4581480	1					
ANR	4581522	PrimaryExpression	"""Aborting save of historical log: out of memory.\\n"""		4581480	0					
ANR	4581523	ReturnStatement	return false ;	238:2:7347:7359	4581480	1	True				
ANR	4581524	Identifier	false		4581480	0					
ANR	4581525	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""About to save historical log %s\\n"" , new_histfile . Value ( ) )"	241:1:7366:7443	4581480	3	True				
ANR	4581526	CallExpression	"dprintf ( D_FULLDEBUG , ""About to save historical log %s\\n"" , new_histfile . Value ( ) )"		4581480	0					
ANR	4581527	Callee	dprintf		4581480	0					
ANR	4581528	Identifier	dprintf		4581480	0					
ANR	4581529	ArgumentList	D_FULLDEBUG		4581480	1					
ANR	4581530	Argument	D_FULLDEBUG		4581480	0					
ANR	4581531	Identifier	D_FULLDEBUG		4581480	0					
ANR	4581532	Argument	"""About to save historical log %s\\n"""		4581480	1					
ANR	4581533	PrimaryExpression	"""About to save historical log %s\\n"""		4581480	0					
ANR	4581534	Argument	new_histfile . Value ( )		4581480	2					
ANR	4581535	CallExpression	new_histfile . Value ( )		4581480	0					
ANR	4581536	Callee	new_histfile . Value		4581480	0					
ANR	4581537	MemberAccess	new_histfile . Value		4581480	0					
ANR	4581538	Identifier	new_histfile		4581480	0					
ANR	4581539	Identifier	Value		4581480	1					
ANR	4581540	ArgumentList			4581480	1					
ANR	4581541	IfStatement	"if ( hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) ) < 0 )"		4581480	4					
ANR	4581542	Condition	"hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) ) < 0"	243:5:7451:7512	4581480	0	True				
ANR	4581543	RelationalExpression	"hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) ) < 0"		4581480	0		<			
ANR	4581544	CallExpression	"hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) )"		4581480	0					
ANR	4581545	Callee	hardlink_or_copy_file		4581480	0					
ANR	4581546	Identifier	hardlink_or_copy_file		4581480	0					
ANR	4581547	ArgumentList	logFilename ( )		4581480	1					
ANR	4581548	Argument	logFilename ( )		4581480	0					
ANR	4581549	CallExpression	logFilename ( )		4581480	0					
ANR	4581550	Callee	logFilename		4581480	0					
ANR	4581551	Identifier	logFilename		4581480	0					
ANR	4581552	ArgumentList			4581480	1					
ANR	4581553	Argument	new_histfile . Value ( )		4581480	1					
ANR	4581554	CallExpression	new_histfile . Value ( )		4581480	0					
ANR	4581555	Callee	new_histfile . Value		4581480	0					
ANR	4581556	MemberAccess	new_histfile . Value		4581480	0					
ANR	4581557	Identifier	new_histfile		4581480	0					
ANR	4581558	Identifier	Value		4581480	1					
ANR	4581559	ArgumentList			4581480	1					
ANR	4581560	PrimaryExpression	0		4581480	1					
ANR	4581561	CompoundStatement		13:69:389:389	4581480	1					
ANR	4581562	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to copy %s to %s.\\n"" , logFilename ( ) , new_histfile . Value ( ) )"	244:2:7519:7600	4581480	0	True				
ANR	4581563	CallExpression	"dprintf ( D_ALWAYS , ""Failed to copy %s to %s.\\n"" , logFilename ( ) , new_histfile . Value ( ) )"		4581480	0					
ANR	4581564	Callee	dprintf		4581480	0					
ANR	4581565	Identifier	dprintf		4581480	0					
ANR	4581566	ArgumentList	D_ALWAYS		4581480	1					
ANR	4581567	Argument	D_ALWAYS		4581480	0					
ANR	4581568	Identifier	D_ALWAYS		4581480	0					
ANR	4581569	Argument	"""Failed to copy %s to %s.\\n"""		4581480	1					
ANR	4581570	PrimaryExpression	"""Failed to copy %s to %s.\\n"""		4581480	0					
ANR	4581571	Argument	logFilename ( )		4581480	2					
ANR	4581572	CallExpression	logFilename ( )		4581480	0					
ANR	4581573	Callee	logFilename		4581480	0					
ANR	4581574	Identifier	logFilename		4581480	0					
ANR	4581575	ArgumentList			4581480	1					
ANR	4581576	Argument	new_histfile . Value ( )		4581480	3					
ANR	4581577	CallExpression	new_histfile . Value ( )		4581480	0					
ANR	4581578	Callee	new_histfile . Value		4581480	0					
ANR	4581579	MemberAccess	new_histfile . Value		4581480	0					
ANR	4581580	Identifier	new_histfile		4581480	0					
ANR	4581581	Identifier	Value		4581480	1					
ANR	4581582	ArgumentList			4581480	1					
ANR	4581583	ReturnStatement	return false ;	245:2:7604:7616	4581480	1	True				
ANR	4581584	Identifier	false		4581480	0					
ANR	4581585	IdentifierDeclStatement	MyString old_histfile ;	248:1:7623:7644	4581480	5	True				
ANR	4581586	IdentifierDecl	old_histfile		4581480	0					
ANR	4581587	IdentifierDeclType	MyString		4581480	0					
ANR	4581588	Identifier	old_histfile		4581480	1					
ANR	4581589	IfStatement	"if ( ! old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs ) )"		4581480	6					
ANR	4581590	Condition	"! old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs )"	249:4:7650:7743	4581480	0	True				
ANR	4581591	UnaryOperationExpression	"! old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs )"		4581480	0					
ANR	4581592	UnaryOperator	!		4581480	0					
ANR	4581593	CallExpression	"old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs )"		4581480	1					
ANR	4581594	Callee	old_histfile . sprintf		4581480	0					
ANR	4581595	MemberAccess	old_histfile . sprintf		4581480	0					
ANR	4581596	Identifier	old_histfile		4581480	0					
ANR	4581597	Identifier	sprintf		4581480	1					
ANR	4581598	ArgumentList	"""%s.%lu"""		4581480	1					
ANR	4581599	Argument	"""%s.%lu"""		4581480	0					
ANR	4581600	PrimaryExpression	"""%s.%lu"""		4581480	0					
ANR	4581601	Argument	logFilename ( )		4581480	1					
ANR	4581602	CallExpression	logFilename ( )		4581480	0					
ANR	4581603	Callee	logFilename		4581480	0					
ANR	4581604	Identifier	logFilename		4581480	0					
ANR	4581605	ArgumentList			4581480	1					
ANR	4581606	Argument	historical_sequence_number - max_historical_logs		4581480	2					
ANR	4581607	AdditiveExpression	historical_sequence_number - max_historical_logs		4581480	0		-			
ANR	4581608	Identifier	historical_sequence_number		4581480	0					
ANR	4581609	Identifier	max_historical_logs		4581480	1					
ANR	4581610	CompoundStatement		20:1:621:621	4581480	1					
ANR	4581611	ExpressionStatement	"dprintf ( D_ALWAYS , ""Aborting cleanup of historical logs: out of memory.\\n"" )"	251:2:7751:7824	4581480	0	True				
ANR	4581612	CallExpression	"dprintf ( D_ALWAYS , ""Aborting cleanup of historical logs: out of memory.\\n"" )"		4581480	0					
ANR	4581613	Callee	dprintf		4581480	0					
ANR	4581614	Identifier	dprintf		4581480	0					
ANR	4581615	ArgumentList	D_ALWAYS		4581480	1					
ANR	4581616	Argument	D_ALWAYS		4581480	0					
ANR	4581617	Identifier	D_ALWAYS		4581480	0					
ANR	4581618	Argument	"""Aborting cleanup of historical logs: out of memory.\\n"""		4581480	1					
ANR	4581619	PrimaryExpression	"""Aborting cleanup of historical logs: out of memory.\\n"""		4581480	0					
ANR	4581620	ReturnStatement	return true ;	252:2:7828:7839	4581480	1	True				
ANR	4581621	Identifier	true		4581480	0					
ANR	4581622	IfStatement	if ( unlink ( old_histfile . Value ( ) ) == 0 )		4581480	7					
ANR	4581623	Condition	unlink ( old_histfile . Value ( ) ) == 0	255:5:7879:7911	4581480	0	True				
ANR	4581624	EqualityExpression	unlink ( old_histfile . Value ( ) ) == 0		4581480	0		==			
ANR	4581625	CallExpression	unlink ( old_histfile . Value ( ) )		4581480	0					
ANR	4581626	Callee	unlink		4581480	0					
ANR	4581627	Identifier	unlink		4581480	0					
ANR	4581628	ArgumentList	old_histfile . Value ( )		4581480	1					
ANR	4581629	Argument	old_histfile . Value ( )		4581480	0					
ANR	4581630	CallExpression	old_histfile . Value ( )		4581480	0					
ANR	4581631	Callee	old_histfile . Value		4581480	0					
ANR	4581632	MemberAccess	old_histfile . Value		4581480	0					
ANR	4581633	Identifier	old_histfile		4581480	0					
ANR	4581634	Identifier	Value		4581480	1					
ANR	4581635	ArgumentList			4581480	1					
ANR	4581636	PrimaryExpression	0		4581480	1					
ANR	4581637	CompoundStatement		25:41:789:789	4581480	1					
ANR	4581638	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Removed historical log %s.\\n"" , old_histfile . Value ( ) )"	256:2:7919:7991	4581480	0	True				
ANR	4581639	CallExpression	"dprintf ( D_FULLDEBUG , ""Removed historical log %s.\\n"" , old_histfile . Value ( ) )"		4581480	0					
ANR	4581640	Callee	dprintf		4581480	0					
ANR	4581641	Identifier	dprintf		4581480	0					
ANR	4581642	ArgumentList	D_FULLDEBUG		4581480	1					
ANR	4581643	Argument	D_FULLDEBUG		4581480	0					
ANR	4581644	Identifier	D_FULLDEBUG		4581480	0					
ANR	4581645	Argument	"""Removed historical log %s.\\n"""		4581480	1					
ANR	4581646	PrimaryExpression	"""Removed historical log %s.\\n"""		4581480	0					
ANR	4581647	Argument	old_histfile . Value ( )		4581480	2					
ANR	4581648	CallExpression	old_histfile . Value ( )		4581480	0					
ANR	4581649	Callee	old_histfile . Value		4581480	0					
ANR	4581650	MemberAccess	old_histfile . Value		4581480	0					
ANR	4581651	Identifier	old_histfile		4581480	0					
ANR	4581652	Identifier	Value		4581480	1					
ANR	4581653	ArgumentList			4581480	1					
ANR	4581654	ElseStatement	else		4581480	0					
ANR	4581655	CompoundStatement		28:6:876:876	4581480	0					
ANR	4581656	IfStatement	if ( errno != ENOENT )		4581480	0					
ANR	4581657	Condition	errno != ENOENT	260:6:8061:8075	4581480	0	True				
ANR	4581658	EqualityExpression	errno != ENOENT		4581480	0		!=			
ANR	4581659	Identifier	errno		4581480	0					
ANR	4581660	Identifier	ENOENT		4581480	1					
ANR	4581661	CompoundStatement		30:24:953:953	4581480	1					
ANR	4581662	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: failed to remove '%s': %s\\n"" , old_histfile . Value ( ) , strerror ( errno ) )"	263:3:8179:8272	4581480	0	True				
ANR	4581663	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: failed to remove '%s': %s\\n"" , old_histfile . Value ( ) , strerror ( errno ) )"		4581480	0					
ANR	4581664	Callee	dprintf		4581480	0					
ANR	4581665	Identifier	dprintf		4581480	0					
ANR	4581666	ArgumentList	D_ALWAYS		4581480	1					
ANR	4581667	Argument	D_ALWAYS		4581480	0					
ANR	4581668	Identifier	D_ALWAYS		4581480	0					
ANR	4581669	Argument	"""WARNING: failed to remove '%s': %s\\n"""		4581480	1					
ANR	4581670	PrimaryExpression	"""WARNING: failed to remove '%s': %s\\n"""		4581480	0					
ANR	4581671	Argument	old_histfile . Value ( )		4581480	2					
ANR	4581672	CallExpression	old_histfile . Value ( )		4581480	0					
ANR	4581673	Callee	old_histfile . Value		4581480	0					
ANR	4581674	MemberAccess	old_histfile . Value		4581480	0					
ANR	4581675	Identifier	old_histfile		4581480	0					
ANR	4581676	Identifier	Value		4581480	1					
ANR	4581677	ArgumentList			4581480	1					
ANR	4581678	Argument	strerror ( errno )		4581480	3					
ANR	4581679	CallExpression	strerror ( errno )		4581480	0					
ANR	4581680	Callee	strerror		4581480	0					
ANR	4581681	Identifier	strerror		4581480	0					
ANR	4581682	ArgumentList	errno		4581480	1					
ANR	4581683	Argument	errno		4581480	0					
ANR	4581684	Identifier	errno		4581480	0					
ANR	4581685	ReturnStatement	return true ;	265:2:8280:8291	4581480	1	True				
ANR	4581686	Identifier	true		4581480	0					
ANR	4581687	ReturnStatement	return true ;	267:1:8326:8337	4581480	8	True				
ANR	4581688	Identifier	true		4581480	0					
ANR	4581689	ReturnType	bool		4581480	1					
ANR	4581690	Identifier	ClassAdLog :: SaveHistoricalLogs		4581480	2					
ANR	4581691	ParameterList			4581480	3					
ANR	4581692	CFGEntryNode	ENTRY		4581480		True				
ANR	4581693	CFGExitNode	EXIT		4581480		True				
ANR	4581694	Symbol	logFilename		4581480						
ANR	4581695	Symbol	errno		4581480						
ANR	4581696	Symbol	hardlink_or_copy_file		4581480						
ANR	4581697	Symbol	new_histfile . sprintf		4581480						
ANR	4581698	Symbol	D_ALWAYS		4581480						
ANR	4581699	Symbol	false		4581480						
ANR	4581700	Symbol	D_FULLDEBUG		4581480						
ANR	4581701	Symbol	max_historical_logs		4581480						
ANR	4581702	Symbol	new_histfile . Value		4581480						
ANR	4581703	Symbol	ENOENT		4581480						
ANR	4581704	Symbol	new_histfile		4581480						
ANR	4581705	Symbol	strerror		4581480						
ANR	4581706	Symbol	old_histfile . sprintf		4581480						
ANR	4581707	Symbol	unlink		4581480						
ANR	4581708	Symbol	true		4581480						
ANR	4581709	Symbol	old_histfile . Value		4581480						
ANR	4581710	Symbol	old_histfile		4581480						
ANR	4581711	Symbol	historical_sequence_number		4581480						
ANR	4581712	Function	ClassAdLog :: SetMaxHistoricalLogs	270:0:8342:8425							
ANR	4581713	FunctionDef	ClassAdLog :: SetMaxHistoricalLogs (int max)		4581712	0					
ANR	4581714	CompoundStatement		271:42:8389:8425	4581712	0					
ANR	4581715	ExpressionStatement	this -> max_historical_logs = max	272:1:8392:8423	4581712	0	True				
ANR	4581716	AssignmentExpression	this -> max_historical_logs = max		4581712	0		=			
ANR	4581717	PtrMemberAccess	this -> max_historical_logs		4581712	0					
ANR	4581718	Identifier	this		4581712	0					
ANR	4581719	Identifier	max_historical_logs		4581712	1					
ANR	4581720	Identifier	max		4581712	1					
ANR	4581721	ReturnType	void		4581712	1					
ANR	4581722	Identifier	ClassAdLog :: SetMaxHistoricalLogs		4581712	2					
ANR	4581723	ParameterList	int max		4581712	3					
ANR	4581724	Parameter	int max	271:33:8380:8386	4581712	0	True				
ANR	4581725	ParameterType	int		4581712	0					
ANR	4581726	Identifier	max		4581712	1					
ANR	4581727	CFGEntryNode	ENTRY		4581712		True				
ANR	4581728	CFGExitNode	EXIT		4581712		True				
ANR	4581729	Symbol	* this		4581712						
ANR	4581730	Symbol	max		4581712						
ANR	4581731	Symbol	this		4581712						
ANR	4581732	Symbol	this -> max_historical_logs		4581712						
ANR	4581733	Function	ClassAdLog :: GetMaxHistoricalLogs	275:0:8428:8498							
ANR	4581734	FunctionDef	ClassAdLog :: GetMaxHistoricalLogs ()		4581733	0					
ANR	4581735	CompoundStatement		276:35:8467:8498	4581733	0					
ANR	4581736	ReturnStatement	return max_historical_logs ;	277:1:8470:8496	4581733	0	True				
ANR	4581737	Identifier	max_historical_logs		4581733	0					
ANR	4581738	ReturnType	int		4581733	1					
ANR	4581739	Identifier	ClassAdLog :: GetMaxHistoricalLogs		4581733	2					
ANR	4581740	ParameterList			4581733	3					
ANR	4581741	CFGEntryNode	ENTRY		4581733		True				
ANR	4581742	CFGExitNode	EXIT		4581733		True				
ANR	4581743	Symbol	max_historical_logs		4581733						
ANR	4581744	Function	ClassAdLog :: TruncLog	280:0:8501:10560							
ANR	4581745	FunctionDef	ClassAdLog :: TruncLog ()		4581744	0					
ANR	4581746	CompoundStatement		282:0:8529:10560	4581744	0					
ANR	4581747	IdentifierDeclStatement	MyString tmp_log_filename ;	283:1:8532:8557	4581744	0	True				
ANR	4581748	IdentifierDecl	tmp_log_filename		4581744	0					
ANR	4581749	IdentifierDeclType	MyString		4581744	0					
ANR	4581750	Identifier	tmp_log_filename		4581744	1					
ANR	4581751	IdentifierDeclStatement	int new_log_fd ;	284:1:8560:8574	4581744	1	True				
ANR	4581752	IdentifierDecl	new_log_fd		4581744	0					
ANR	4581753	IdentifierDeclType	int		4581744	0					
ANR	4581754	Identifier	new_log_fd		4581744	1					
ANR	4581755	IdentifierDeclStatement	FILE * new_log_fp ;	285:1:8577:8593	4581744	2	True				
ANR	4581756	IdentifierDecl	* new_log_fp		4581744	0					
ANR	4581757	IdentifierDeclType	FILE *		4581744	0					
ANR	4581758	Identifier	new_log_fp		4581744	1					
ANR	4581759	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to rotate ClassAd log %s\\n"" , logFilename ( ) )"	287:1:8597:8663	4581744	3	True				
ANR	4581760	CallExpression	"dprintf ( D_ALWAYS , ""About to rotate ClassAd log %s\\n"" , logFilename ( ) )"		4581744	0					
ANR	4581761	Callee	dprintf		4581744	0					
ANR	4581762	Identifier	dprintf		4581744	0					
ANR	4581763	ArgumentList	D_ALWAYS		4581744	1					
ANR	4581764	Argument	D_ALWAYS		4581744	0					
ANR	4581765	Identifier	D_ALWAYS		4581744	0					
ANR	4581766	Argument	"""About to rotate ClassAd log %s\\n"""		4581744	1					
ANR	4581767	PrimaryExpression	"""About to rotate ClassAd log %s\\n"""		4581744	0					
ANR	4581768	Argument	logFilename ( )		4581744	2					
ANR	4581769	CallExpression	logFilename ( )		4581744	0					
ANR	4581770	Callee	logFilename		4581744	0					
ANR	4581771	Identifier	logFilename		4581744	0					
ANR	4581772	ArgumentList			4581744	1					
ANR	4581773	IfStatement	if ( ! SaveHistoricalLogs ( ) )		4581744	4					
ANR	4581774	Condition	! SaveHistoricalLogs ( )	289:4:8670:8690	4581744	0	True				
ANR	4581775	UnaryOperationExpression	! SaveHistoricalLogs ( )		4581744	0					
ANR	4581776	UnaryOperator	!		4581744	0					
ANR	4581777	CallExpression	SaveHistoricalLogs ( )		4581744	1					
ANR	4581778	Callee	SaveHistoricalLogs		4581744	0					
ANR	4581779	Identifier	SaveHistoricalLogs		4581744	0					
ANR	4581780	ArgumentList			4581744	1					
ANR	4581781	CompoundStatement		8:27:163:163	4581744	1					
ANR	4581782	ExpressionStatement	"dprintf ( D_ALWAYS , ""Skipping log rotation, because saving of historical log failed for %s.\\n"" , logFilename ( ) )"	290:2:8697:8803	4581744	0	True				
ANR	4581783	CallExpression	"dprintf ( D_ALWAYS , ""Skipping log rotation, because saving of historical log failed for %s.\\n"" , logFilename ( ) )"		4581744	0					
ANR	4581784	Callee	dprintf		4581744	0					
ANR	4581785	Identifier	dprintf		4581744	0					
ANR	4581786	ArgumentList	D_ALWAYS		4581744	1					
ANR	4581787	Argument	D_ALWAYS		4581744	0					
ANR	4581788	Identifier	D_ALWAYS		4581744	0					
ANR	4581789	Argument	"""Skipping log rotation, because saving of historical log failed for %s.\\n"""		4581744	1					
ANR	4581790	PrimaryExpression	"""Skipping log rotation, because saving of historical log failed for %s.\\n"""		4581744	0					
ANR	4581791	Argument	logFilename ( )		4581744	2					
ANR	4581792	CallExpression	logFilename ( )		4581744	0					
ANR	4581793	Callee	logFilename		4581744	0					
ANR	4581794	Identifier	logFilename		4581744	0					
ANR	4581795	ArgumentList			4581744	1					
ANR	4581796	ReturnStatement	return false ;	291:2:8807:8819	4581744	1	True				
ANR	4581797	Identifier	false		4581744	0					
ANR	4581798	ExpressionStatement	"tmp_log_filename . sprintf ( ""%s.tmp"" , logFilename ( ) )"	294:1:8826:8876	4581744	5	True				
ANR	4581799	CallExpression	"tmp_log_filename . sprintf ( ""%s.tmp"" , logFilename ( ) )"		4581744	0					
ANR	4581800	Callee	tmp_log_filename . sprintf		4581744	0					
ANR	4581801	MemberAccess	tmp_log_filename . sprintf		4581744	0					
ANR	4581802	Identifier	tmp_log_filename		4581744	0					
ANR	4581803	Identifier	sprintf		4581744	1					
ANR	4581804	ArgumentList	"""%s.tmp"""		4581744	1					
ANR	4581805	Argument	"""%s.tmp"""		4581744	0					
ANR	4581806	PrimaryExpression	"""%s.tmp"""		4581744	0					
ANR	4581807	Argument	logFilename ( )		4581744	1					
ANR	4581808	CallExpression	logFilename ( )		4581744	0					
ANR	4581809	Callee	logFilename		4581744	0					
ANR	4581810	Identifier	logFilename		4581744	0					
ANR	4581811	ArgumentList			4581744	1					
ANR	4581812	ExpressionStatement	"new_log_fd = safe_open_wrapper_follow ( tmp_log_filename . Value ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"	295:1:8879:8980	4581744	6	True				
ANR	4581813	AssignmentExpression	"new_log_fd = safe_open_wrapper_follow ( tmp_log_filename . Value ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		4581744	0		=			
ANR	4581814	Identifier	new_log_fd		4581744	0					
ANR	4581815	CallExpression	"safe_open_wrapper_follow ( tmp_log_filename . Value ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		4581744	1					
ANR	4581816	Callee	safe_open_wrapper_follow		4581744	0					
ANR	4581817	Identifier	safe_open_wrapper_follow		4581744	0					
ANR	4581818	ArgumentList	tmp_log_filename . Value ( )		4581744	1					
ANR	4581819	Argument	tmp_log_filename . Value ( )		4581744	0					
ANR	4581820	CallExpression	tmp_log_filename . Value ( )		4581744	0					
ANR	4581821	Callee	tmp_log_filename . Value		4581744	0					
ANR	4581822	MemberAccess	tmp_log_filename . Value		4581744	0					
ANR	4581823	Identifier	tmp_log_filename		4581744	0					
ANR	4581824	Identifier	Value		4581744	1					
ANR	4581825	ArgumentList			4581744	1					
ANR	4581826	Argument	O_RDWR | O_CREAT | O_LARGEFILE		4581744	1					
ANR	4581827	InclusiveOrExpression	O_RDWR | O_CREAT | O_LARGEFILE		4581744	0		|			
ANR	4581828	Identifier	O_RDWR		4581744	0					
ANR	4581829	InclusiveOrExpression	O_CREAT | O_LARGEFILE		4581744	1		|			
ANR	4581830	Identifier	O_CREAT		4581744	0					
ANR	4581831	Identifier	O_LARGEFILE		4581744	1					
ANR	4581832	Argument	0600		4581744	2					
ANR	4581833	PrimaryExpression	0600		4581744	0					
ANR	4581834	IfStatement	if ( new_log_fd < 0 )		4581744	7					
ANR	4581835	Condition	new_log_fd < 0	296:5:8987:9000	4581744	0	True				
ANR	4581836	RelationalExpression	new_log_fd < 0		4581744	0		<			
ANR	4581837	Identifier	new_log_fd		4581744	0					
ANR	4581838	PrimaryExpression	0		4581744	1					
ANR	4581839	CompoundStatement		15:21:473:473	4581744	1					
ANR	4581840	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"" , tmp_log_filename . Value ( ) , new_log_fd )"	297:2:9007:9126	4581744	0	True				
ANR	4581841	CallExpression	"dprintf ( D_ALWAYS , ""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"" , tmp_log_filename . Value ( ) , new_log_fd )"		4581744	0					
ANR	4581842	Callee	dprintf		4581744	0					
ANR	4581843	Identifier	dprintf		4581744	0					
ANR	4581844	ArgumentList	D_ALWAYS		4581744	1					
ANR	4581845	Argument	D_ALWAYS		4581744	0					
ANR	4581846	Identifier	D_ALWAYS		4581744	0					
ANR	4581847	Argument	"""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"""		4581744	1					
ANR	4581848	PrimaryExpression	"""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"""		4581744	0					
ANR	4581849	Argument	tmp_log_filename . Value ( )		4581744	2					
ANR	4581850	CallExpression	tmp_log_filename . Value ( )		4581744	0					
ANR	4581851	Callee	tmp_log_filename . Value		4581744	0					
ANR	4581852	MemberAccess	tmp_log_filename . Value		4581744	0					
ANR	4581853	Identifier	tmp_log_filename		4581744	0					
ANR	4581854	Identifier	Value		4581744	1					
ANR	4581855	ArgumentList			4581744	1					
ANR	4581856	Argument	new_log_fd		4581744	3					
ANR	4581857	Identifier	new_log_fd		4581744	0					
ANR	4581858	ReturnStatement	return false ;	299:2:9130:9142	4581744	1	True				
ANR	4581859	Identifier	false		4581744	0					
ANR	4581860	ExpressionStatement	"new_log_fp = fdopen ( new_log_fd , ""r+"" )"	302:1:9149:9186	4581744	8	True				
ANR	4581861	AssignmentExpression	"new_log_fp = fdopen ( new_log_fd , ""r+"" )"		4581744	0		=			
ANR	4581862	Identifier	new_log_fp		4581744	0					
ANR	4581863	CallExpression	"fdopen ( new_log_fd , ""r+"" )"		4581744	1					
ANR	4581864	Callee	fdopen		4581744	0					
ANR	4581865	Identifier	fdopen		4581744	0					
ANR	4581866	ArgumentList	new_log_fd		4581744	1					
ANR	4581867	Argument	new_log_fd		4581744	0					
ANR	4581868	Identifier	new_log_fd		4581744	0					
ANR	4581869	Argument	"""r+"""		4581744	1					
ANR	4581870	PrimaryExpression	"""r+"""		4581744	0					
ANR	4581871	IfStatement	if ( new_log_fp == NULL )		4581744	9					
ANR	4581872	Condition	new_log_fp == NULL	303:5:9193:9210	4581744	0	True				
ANR	4581873	EqualityExpression	new_log_fp == NULL		4581744	0		==			
ANR	4581874	Identifier	new_log_fp		4581744	0					
ANR	4581875	Identifier	NULL		4581744	1					
ANR	4581876	CompoundStatement		22:25:683:683	4581744	1					
ANR	4581877	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to rotate log: fdopen(%s) returns NULL\\n"" , tmp_log_filename . Value ( ) )"	304:2:9217:9315	4581744	0	True				
ANR	4581878	CallExpression	"dprintf ( D_ALWAYS , ""failed to rotate log: fdopen(%s) returns NULL\\n"" , tmp_log_filename . Value ( ) )"		4581744	0					
ANR	4581879	Callee	dprintf		4581744	0					
ANR	4581880	Identifier	dprintf		4581744	0					
ANR	4581881	ArgumentList	D_ALWAYS		4581744	1					
ANR	4581882	Argument	D_ALWAYS		4581744	0					
ANR	4581883	Identifier	D_ALWAYS		4581744	0					
ANR	4581884	Argument	"""failed to rotate log: fdopen(%s) returns NULL\\n"""		4581744	1					
ANR	4581885	PrimaryExpression	"""failed to rotate log: fdopen(%s) returns NULL\\n"""		4581744	0					
ANR	4581886	Argument	tmp_log_filename . Value ( )		4581744	2					
ANR	4581887	CallExpression	tmp_log_filename . Value ( )		4581744	0					
ANR	4581888	Callee	tmp_log_filename . Value		4581744	0					
ANR	4581889	MemberAccess	tmp_log_filename . Value		4581744	0					
ANR	4581890	Identifier	tmp_log_filename		4581744	0					
ANR	4581891	Identifier	Value		4581744	1					
ANR	4581892	ArgumentList			4581744	1					
ANR	4581893	ReturnStatement	return false ;	306:2:9319:9331	4581744	1	True				
ANR	4581894	Identifier	false		4581744	0					
ANR	4581895	ExpressionStatement	historical_sequence_number ++	311:1:9396:9424	4581744	10	True				
ANR	4581896	PostIncDecOperationExpression	historical_sequence_number ++		4581744	0					
ANR	4581897	Identifier	historical_sequence_number		4581744	0					
ANR	4581898	IncDec	++		4581744	1					
ANR	4581899	ExpressionStatement	LogState ( new_log_fp )	313:1:9428:9448	4581744	11	True				
ANR	4581900	CallExpression	LogState ( new_log_fp )		4581744	0					
ANR	4581901	Callee	LogState		4581744	0					
ANR	4581902	Identifier	LogState		4581744	0					
ANR	4581903	ArgumentList	new_log_fp		4581744	1					
ANR	4581904	Argument	new_log_fp		4581744	0					
ANR	4581905	Identifier	new_log_fp		4581744	0					
ANR	4581906	ExpressionStatement	fclose ( log_fp )	314:1:9451:9465	4581744	12	True				
ANR	4581907	CallExpression	fclose ( log_fp )		4581744	0					
ANR	4581908	Callee	fclose		4581744	0					
ANR	4581909	Identifier	fclose		4581744	0					
ANR	4581910	ArgumentList	log_fp		4581744	1					
ANR	4581911	Argument	log_fp		4581744	0					
ANR	4581912	Identifier	log_fp		4581744	0					
ANR	4581913	ExpressionStatement	log_fp = NULL	315:1:9468:9481	4581744	13	True				
ANR	4581914	AssignmentExpression	log_fp = NULL		4581744	0		=			
ANR	4581915	Identifier	log_fp		4581744	0					
ANR	4581916	Identifier	NULL		4581744	1					
ANR	4581917	ExpressionStatement	fclose ( new_log_fp )	316:1:9484:9502	4581744	14	True				
ANR	4581918	CallExpression	fclose ( new_log_fp )		4581744	0					
ANR	4581919	Callee	fclose		4581744	0					
ANR	4581920	Identifier	fclose		4581744	0					
ANR	4581921	ArgumentList	new_log_fp		4581744	1					
ANR	4581922	Argument	new_log_fp		4581744	0					
ANR	4581923	Identifier	new_log_fp		4581744	0					
ANR	4581924	IfStatement	"if ( rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) ) < 0 )"		4581744	15					
ANR	4581925	Condition	"rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) ) < 0"	317:5:9544:9599	4581744	0	True				
ANR	4581926	RelationalExpression	"rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) ) < 0"		4581744	0		<			
ANR	4581927	CallExpression	"rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) )"		4581744	0					
ANR	4581928	Callee	rotate_file		4581744	0					
ANR	4581929	Identifier	rotate_file		4581744	0					
ANR	4581930	ArgumentList	tmp_log_filename . Value ( )		4581744	1					
ANR	4581931	Argument	tmp_log_filename . Value ( )		4581744	0					
ANR	4581932	CallExpression	tmp_log_filename . Value ( )		4581744	0					
ANR	4581933	Callee	tmp_log_filename . Value		4581744	0					
ANR	4581934	MemberAccess	tmp_log_filename . Value		4581744	0					
ANR	4581935	Identifier	tmp_log_filename		4581744	0					
ANR	4581936	Identifier	Value		4581744	1					
ANR	4581937	ArgumentList			4581744	1					
ANR	4581938	Argument	logFilename ( )		4581744	1					
ANR	4581939	CallExpression	logFilename ( )		4581744	0					
ANR	4581940	Callee	logFilename		4581744	0					
ANR	4581941	Identifier	logFilename		4581744	0					
ANR	4581942	ArgumentList			4581744	1					
ANR	4581943	PrimaryExpression	0		4581744	1					
ANR	4581944	CompoundStatement		42:2:1209:1300	4581744	1					
ANR	4581945	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to rotate job queue log!\\n"" )"	318:2:9606:9660	4581744	0	True				
ANR	4581946	CallExpression	"dprintf ( D_ALWAYS , ""failed to rotate job queue log!\\n"" )"		4581744	0					
ANR	4581947	Callee	dprintf		4581744	0					
ANR	4581948	Identifier	dprintf		4581744	0					
ANR	4581949	ArgumentList	D_ALWAYS		4581744	1					
ANR	4581950	Argument	D_ALWAYS		4581744	0					
ANR	4581951	Identifier	D_ALWAYS		4581744	0					
ANR	4581952	Argument	"""failed to rotate job queue log!\\n"""		4581744	1					
ANR	4581953	PrimaryExpression	"""failed to rotate job queue log!\\n"""		4581744	0					
ANR	4581954	ExpressionStatement	historical_sequence_number --	321:2:9706:9734	4581744	1	True				
ANR	4581955	PostIncDecOperationExpression	historical_sequence_number --		4581744	0					
ANR	4581956	Identifier	historical_sequence_number		4581744	0					
ANR	4581957	IncDec	--		4581744	1					
ANR	4581958	IdentifierDeclStatement	"int log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 ) ;"	323:2:9739:9830	4581744	2	True				
ANR	4581959	IdentifierDecl	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		4581744	0					
ANR	4581960	IdentifierDeclType	int		4581744	0					
ANR	4581961	Identifier	log_fd		4581744	1					
ANR	4581962	AssignmentExpression	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		4581744	2		=			
ANR	4581963	Identifier	log_fd		4581744	0					
ANR	4581964	CallExpression	"safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		4581744	1					
ANR	4581965	Callee	safe_open_wrapper_follow		4581744	0					
ANR	4581966	Identifier	safe_open_wrapper_follow		4581744	0					
ANR	4581967	ArgumentList	logFilename ( )		4581744	1					
ANR	4581968	Argument	logFilename ( )		4581744	0					
ANR	4581969	CallExpression	logFilename ( )		4581744	0					
ANR	4581970	Callee	logFilename		4581744	0					
ANR	4581971	Identifier	logFilename		4581744	0					
ANR	4581972	ArgumentList			4581744	1					
ANR	4581973	Argument	O_RDWR | O_APPEND | O_LARGEFILE		4581744	1					
ANR	4581974	InclusiveOrExpression	O_RDWR | O_APPEND | O_LARGEFILE		4581744	0		|			
ANR	4581975	Identifier	O_RDWR		4581744	0					
ANR	4581976	InclusiveOrExpression	O_APPEND | O_LARGEFILE		4581744	1		|			
ANR	4581977	Identifier	O_APPEND		4581744	0					
ANR	4581978	Identifier	O_LARGEFILE		4581744	1					
ANR	4581979	Argument	0600		4581744	2					
ANR	4581980	PrimaryExpression	0600		4581744	0					
ANR	4581981	IfStatement	if ( log_fd < 0 )		4581744	3					
ANR	4581982	Condition	log_fd < 0	324:6:9838:9847	4581744	0	True				
ANR	4581983	RelationalExpression	log_fd < 0		4581744	0		<			
ANR	4581984	Identifier	log_fd		4581744	0					
ANR	4581985	PrimaryExpression	0		4581744	1					
ANR	4581986	CompoundStatement		43:18:1320:1320	4581744	1					
ANR	4581987	ExpressionStatement	"EXCEPT ( ""failed to reopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"	325:3:9855:9949	4581744	0	True				
ANR	4581988	CallExpression	"EXCEPT ( ""failed to reopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"		4581744	0					
ANR	4581989	Callee	EXCEPT		4581744	0					
ANR	4581990	Identifier	EXCEPT		4581744	0					
ANR	4581991	ArgumentList	"""failed to reopen log %s, errno = %d after failing to rotate log."""		4581744	1					
ANR	4581992	Argument	"""failed to reopen log %s, errno = %d after failing to rotate log."""		4581744	0					
ANR	4581993	PrimaryExpression	"""failed to reopen log %s, errno = %d after failing to rotate log."""		4581744	0					
ANR	4581994	Argument	logFilename ( )		4581744	1					
ANR	4581995	CallExpression	logFilename ( )		4581744	0					
ANR	4581996	Callee	logFilename		4581744	0					
ANR	4581997	Identifier	logFilename		4581744	0					
ANR	4581998	ArgumentList			4581744	1					
ANR	4581999	Argument	errno		4581744	2					
ANR	4582000	Identifier	errno		4581744	0					
ANR	4582001	ExpressionStatement	"log_fp = fdopen ( log_fd , ""a+"" )"	328:2:9958:9987	4581744	4	True				
ANR	4582002	AssignmentExpression	"log_fp = fdopen ( log_fd , ""a+"" )"		4581744	0		=			
ANR	4582003	Identifier	log_fp		4581744	0					
ANR	4582004	CallExpression	"fdopen ( log_fd , ""a+"" )"		4581744	1					
ANR	4582005	Callee	fdopen		4581744	0					
ANR	4582006	Identifier	fdopen		4581744	0					
ANR	4582007	ArgumentList	log_fd		4581744	1					
ANR	4582008	Argument	log_fd		4581744	0					
ANR	4582009	Identifier	log_fd		4581744	0					
ANR	4582010	Argument	"""a+"""		4581744	1					
ANR	4582011	PrimaryExpression	"""a+"""		4581744	0					
ANR	4582012	IfStatement	if ( log_fp == NULL )		4581744	5					
ANR	4582013	Condition	log_fp == NULL	329:6:9995:10008	4581744	0	True				
ANR	4582014	EqualityExpression	log_fp == NULL		4581744	0		==			
ANR	4582015	Identifier	log_fp		4581744	0					
ANR	4582016	Identifier	NULL		4581744	1					
ANR	4582017	CompoundStatement		48:22:1481:1481	4581744	1					
ANR	4582018	ExpressionStatement	"EXCEPT ( ""failed to refdopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"	330:3:10016:10112	4581744	0	True				
ANR	4582019	CallExpression	"EXCEPT ( ""failed to refdopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"		4581744	0					
ANR	4582020	Callee	EXCEPT		4581744	0					
ANR	4582021	Identifier	EXCEPT		4581744	0					
ANR	4582022	ArgumentList	"""failed to refdopen log %s, errno = %d after failing to rotate log."""		4581744	1					
ANR	4582023	Argument	"""failed to refdopen log %s, errno = %d after failing to rotate log."""		4581744	0					
ANR	4582024	PrimaryExpression	"""failed to refdopen log %s, errno = %d after failing to rotate log."""		4581744	0					
ANR	4582025	Argument	logFilename ( )		4581744	1					
ANR	4582026	CallExpression	logFilename ( )		4581744	0					
ANR	4582027	Callee	logFilename		4581744	0					
ANR	4582028	Identifier	logFilename		4581744	0					
ANR	4582029	ArgumentList			4581744	1					
ANR	4582030	Argument	errno		4581744	2					
ANR	4582031	Identifier	errno		4581744	0					
ANR	4582032	ReturnStatement	return false ;	333:2:10121:10133	4581744	6	True				
ANR	4582033	Identifier	false		4581744	0					
ANR	4582034	IdentifierDeclStatement	"int log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 ) ;"	335:1:10139:10230	4581744	16	True				
ANR	4582035	IdentifierDecl	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		4581744	0					
ANR	4582036	IdentifierDeclType	int		4581744	0					
ANR	4582037	Identifier	log_fd		4581744	1					
ANR	4582038	AssignmentExpression	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		4581744	2		=			
ANR	4582039	Identifier	log_fd		4581744	0					
ANR	4582040	CallExpression	"safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		4581744	1					
ANR	4582041	Callee	safe_open_wrapper_follow		4581744	0					
ANR	4582042	Identifier	safe_open_wrapper_follow		4581744	0					
ANR	4582043	ArgumentList	logFilename ( )		4581744	1					
ANR	4582044	Argument	logFilename ( )		4581744	0					
ANR	4582045	CallExpression	logFilename ( )		4581744	0					
ANR	4582046	Callee	logFilename		4581744	0					
ANR	4582047	Identifier	logFilename		4581744	0					
ANR	4582048	ArgumentList			4581744	1					
ANR	4582049	Argument	O_RDWR | O_APPEND | O_LARGEFILE		4581744	1					
ANR	4582050	InclusiveOrExpression	O_RDWR | O_APPEND | O_LARGEFILE		4581744	0		|			
ANR	4582051	Identifier	O_RDWR		4581744	0					
ANR	4582052	InclusiveOrExpression	O_APPEND | O_LARGEFILE		4581744	1		|			
ANR	4582053	Identifier	O_APPEND		4581744	0					
ANR	4582054	Identifier	O_LARGEFILE		4581744	1					
ANR	4582055	Argument	0600		4581744	2					
ANR	4582056	PrimaryExpression	0600		4581744	0					
ANR	4582057	IfStatement	if ( log_fd < 0 )		4581744	17					
ANR	4582058	Condition	log_fd < 0	336:5:10237:10246	4581744	0	True				
ANR	4582059	RelationalExpression	log_fd < 0		4581744	0		<			
ANR	4582060	Identifier	log_fd		4581744	0					
ANR	4582061	PrimaryExpression	0		4581744	1					
ANR	4582062	CompoundStatement		55:17:1719:1719	4581744	1					
ANR	4582063	Statement	EXCEPT	337:2:10253:10258	4581744	0	True				
ANR	4582064	Statement	(	337:8:10259:10259	4581744	1	True				
ANR	4582065	Statement	"""failed to open log in append mode: """	337:10:10261:10297	4581744	2	True				
ANR	4582066	Statement	"""safe_open_wrapper(%s) returns %d\\n"""	338:3:10302:10337	4581744	3	True				
ANR	4582067	Statement	","	338:39:10338:10338	4581744	4	True				
ANR	4582068	Statement	logFilename	338:41:10340:10350	4581744	5	True				
ANR	4582069	Statement	(	338:52:10351:10351	4581744	6	True				
ANR	4582070	Statement	)	338:53:10352:10352	4581744	7	True				
ANR	4582071	Statement	","	338:54:10353:10353	4581744	8	True				
ANR	4582072	Statement	log_fd	338:56:10355:10360	4581744	9	True				
ANR	4582073	Statement	)	338:62:10361:10361	4581744	10	True				
ANR	4582074	ExpressionStatement		338:63:10362:10362	4581744	11	True				
ANR	4582075	ExpressionStatement	"log_fp = fdopen ( log_fd , ""a+"" )"	340:1:10368:10397	4581744	18	True				
ANR	4582076	AssignmentExpression	"log_fp = fdopen ( log_fd , ""a+"" )"		4581744	0		=			
ANR	4582077	Identifier	log_fp		4581744	0					
ANR	4582078	CallExpression	"fdopen ( log_fd , ""a+"" )"		4581744	1					
ANR	4582079	Callee	fdopen		4581744	0					
ANR	4582080	Identifier	fdopen		4581744	0					
ANR	4582081	ArgumentList	log_fd		4581744	1					
ANR	4582082	Argument	log_fd		4581744	0					
ANR	4582083	Identifier	log_fd		4581744	0					
ANR	4582084	Argument	"""a+"""		4581744	1					
ANR	4582085	PrimaryExpression	"""a+"""		4581744	0					
ANR	4582086	IfStatement	if ( log_fp == NULL )		4581744	19					
ANR	4582087	Condition	log_fp == NULL	341:5:10404:10417	4581744	0	True				
ANR	4582088	EqualityExpression	log_fp == NULL		4581744	0		==			
ANR	4582089	Identifier	log_fp		4581744	0					
ANR	4582090	Identifier	NULL		4581744	1					
ANR	4582091	CompoundStatement		60:21:1890:1890	4581744	1					
ANR	4582092	ExpressionStatement	close ( log_fd )	342:2:10424:10437	4581744	0	True				
ANR	4582093	CallExpression	close ( log_fd )		4581744	0					
ANR	4582094	Callee	close		4581744	0					
ANR	4582095	Identifier	close		4581744	0					
ANR	4582096	ArgumentList	log_fd		4581744	1					
ANR	4582097	Argument	log_fd		4581744	0					
ANR	4582098	Identifier	log_fd		4581744	0					
ANR	4582099	Statement	EXCEPT	343:2:10441:10446	4581744	1	True				
ANR	4582100	Statement	(	343:8:10447:10447	4581744	2	True				
ANR	4582101	Statement	"""failed to fdopen log in append mode: """	343:9:10448:10486	4581744	3	True				
ANR	4582102	Statement	"""fdopen(%s) returns %d\\n"""	344:3:10491:10515	4581744	4	True				
ANR	4582103	Statement	","	344:28:10516:10516	4581744	5	True				
ANR	4582104	Statement	logFilename	344:30:10518:10528	4581744	6	True				
ANR	4582105	Statement	(	344:41:10529:10529	4581744	7	True				
ANR	4582106	Statement	)	344:42:10530:10530	4581744	8	True				
ANR	4582107	Statement	","	344:43:10531:10531	4581744	9	True				
ANR	4582108	Statement	log_fd	344:45:10533:10538	4581744	10	True				
ANR	4582109	Statement	)	344:51:10539:10539	4581744	11	True				
ANR	4582110	ExpressionStatement		344:52:10540:10540	4581744	12	True				
ANR	4582111	ReturnStatement	return true ;	347:1:10547:10558	4581744	20	True				
ANR	4582112	Identifier	true		4581744	0					
ANR	4582113	ReturnType	bool		4581744	1					
ANR	4582114	Identifier	ClassAdLog :: TruncLog		4581744	2					
ANR	4582115	ParameterList			4581744	3					
ANR	4582116	CFGEntryNode	ENTRY		4581744		True				
ANR	4582117	CFGExitNode	EXIT		4581744		True				
ANR	4582118	Symbol	logFilename		4581744						
ANR	4582119	Symbol	O_LARGEFILE		4581744						
ANR	4582120	Symbol	errno		4581744						
ANR	4582121	Symbol	SaveHistoricalLogs		4581744						
ANR	4582122	Symbol	safe_open_wrapper_follow		4581744						
ANR	4582123	Symbol	NULL		4581744						
ANR	4582124	Symbol	new_log_fp		4581744						
ANR	4582125	Symbol	O_CREAT		4581744						
ANR	4582126	Symbol	tmp_log_filename		4581744						
ANR	4582127	Symbol	D_ALWAYS		4581744						
ANR	4582128	Symbol	false		4581744						
ANR	4582129	Symbol	fdopen		4581744						
ANR	4582130	Symbol	tmp_log_filename . Value		4581744						
ANR	4582131	Symbol	log_fd		4581744						
ANR	4582132	Symbol	O_APPEND		4581744						
ANR	4582133	Symbol	O_RDWR		4581744						
ANR	4582134	Symbol	log_fp		4581744						
ANR	4582135	Symbol	true		4581744						
ANR	4582136	Symbol	new_log_fd		4581744						
ANR	4582137	Symbol	rotate_file		4581744						
ANR	4582138	Symbol	historical_sequence_number		4581744						
ANR	4582139	Function	ClassAdLog :: IncNondurableCommitLevel	350:0:10563:10638							
ANR	4582140	FunctionDef	ClassAdLog :: IncNondurableCommitLevel ()		4582139	0					
ANR	4582141	CompoundStatement		352:0:10606:10638	4582139	0					
ANR	4582142	ReturnStatement	return m_nondurable_level ++ ;	353:1:10609:10636	4582139	0	True				
ANR	4582143	PostIncDecOperationExpression	m_nondurable_level ++		4582139	0					
ANR	4582144	Identifier	m_nondurable_level		4582139	0					
ANR	4582145	IncDec	++		4582139	1					
ANR	4582146	ReturnType	int		4582139	1					
ANR	4582147	Identifier	ClassAdLog :: IncNondurableCommitLevel		4582139	2					
ANR	4582148	ParameterList			4582139	3					
ANR	4582149	CFGEntryNode	ENTRY		4582139		True				
ANR	4582150	CFGExitNode	EXIT		4582139		True				
ANR	4582151	Symbol	m_nondurable_level		4582139						
ANR	4582152	Function	ClassAdLog :: DecNondurableCommitLevel	356:0:10641:10864							
ANR	4582153	FunctionDef	ClassAdLog :: DecNondurableCommitLevel (int old_level)		4582152	0					
ANR	4582154	CompoundStatement		358:0:10698:10864	4582152	0					
ANR	4582155	IfStatement	if ( -- m_nondurable_level != old_level )		4582152	0					
ANR	4582156	Condition	-- m_nondurable_level != old_level	359:5:10705:10737	4582152	0	True				
ANR	4582157	EqualityExpression	-- m_nondurable_level != old_level		4582152	0		!=			
ANR	4582158	UnaryExpression	-- m_nondurable_level		4582152	0					
ANR	4582159	IncDec	--		4582152	0					
ANR	4582160	Identifier	m_nondurable_level		4582152	1					
ANR	4582161	Identifier	old_level		4582152	1					
ANR	4582162	CompoundStatement		2:41:42:42	4582152	1					
ANR	4582163	ExpressionStatement	"EXCEPT ( ""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"" , old_level , m_nondurable_level + 1 )"	360:2:10745:10859	4582152	0	True				
ANR	4582164	CallExpression	"EXCEPT ( ""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"" , old_level , m_nondurable_level + 1 )"		4582152	0					
ANR	4582165	Callee	EXCEPT		4582152	0					
ANR	4582166	Identifier	EXCEPT		4582152	0					
ANR	4582167	ArgumentList	"""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"""		4582152	1					
ANR	4582168	Argument	"""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"""		4582152	0					
ANR	4582169	PrimaryExpression	"""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"""		4582152	0					
ANR	4582170	Argument	old_level		4582152	1					
ANR	4582171	Identifier	old_level		4582152	0					
ANR	4582172	Argument	m_nondurable_level + 1		4582152	2					
ANR	4582173	AdditiveExpression	m_nondurable_level + 1		4582152	0		+			
ANR	4582174	Identifier	m_nondurable_level		4582152	0					
ANR	4582175	PrimaryExpression	1		4582152	1					
ANR	4582176	ReturnType	void		4582152	1					
ANR	4582177	Identifier	ClassAdLog :: DecNondurableCommitLevel		4582152	2					
ANR	4582178	ParameterList	int old_level		4582152	3					
ANR	4582179	Parameter	int old_level	357:37:10683:10695	4582152	0	True				
ANR	4582180	ParameterType	int		4582152	0					
ANR	4582181	Identifier	old_level		4582152	1					
ANR	4582182	CFGEntryNode	ENTRY		4582152		True				
ANR	4582183	CFGExitNode	EXIT		4582152		True				
ANR	4582184	Symbol	old_level		4582152						
ANR	4582185	Symbol	m_nondurable_level		4582152						
ANR	4582186	Function	ClassAdLog :: BeginTransaction	365:0:10867:10976							
ANR	4582187	FunctionDef	ClassAdLog :: BeginTransaction ()		4582186	0					
ANR	4582188	CompoundStatement		367:0:10903:10976	4582186	0					
ANR	4582189	ExpressionStatement	ASSERT ( ! active_transaction )	368:1:10906:10933	4582186	0	True				
ANR	4582190	CallExpression	ASSERT ( ! active_transaction )		4582186	0					
ANR	4582191	Callee	ASSERT		4582186	0					
ANR	4582192	Identifier	ASSERT		4582186	0					
ANR	4582193	ArgumentList	! active_transaction		4582186	1					
ANR	4582194	Argument	! active_transaction		4582186	0					
ANR	4582195	UnaryOperationExpression	! active_transaction		4582186	0					
ANR	4582196	UnaryOperator	!		4582186	0					
ANR	4582197	Identifier	active_transaction		4582186	1					
ANR	4582198	ExpressionStatement	active_transaction = new Transaction ( )	369:1:10936:10974	4582186	1	True				
ANR	4582199	AssignmentExpression	active_transaction = new Transaction ( )		4582186	0		=			
ANR	4582200	Identifier	active_transaction		4582186	0					
ANR	4582201	UnaryExpression	new Transaction ( )		4582186	1					
ANR	4582202	ReturnType	void		4582186	1					
ANR	4582203	Identifier	ClassAdLog :: BeginTransaction		4582186	2					
ANR	4582204	ParameterList			4582186	3					
ANR	4582205	CFGEntryNode	ENTRY		4582186		True				
ANR	4582206	CFGExitNode	EXIT		4582186		True				
ANR	4582207	Symbol	active_transaction		4582186						
ANR	4582208	Function	ClassAdLog :: AbortTransaction	372:0:10979:11254							
ANR	4582209	FunctionDef	ClassAdLog :: AbortTransaction ()		4582208	0					
ANR	4582210	CompoundStatement		374:0:11015:11254	4582208	0					
ANR	4582211	IfStatement	if ( active_transaction )		4582208	0					
ANR	4582212	Condition	active_transaction	377:5:11141:11158	4582208	0	True				
ANR	4582213	Identifier	active_transaction		4582208	0					
ANR	4582214	CompoundStatement		4:25:145:145	4582208	1					
ANR	4582215	Statement	delete	378:2:11165:11170	4582208	0	True				
ANR	4582216	ExpressionStatement	active_transaction	378:9:11172:11190	4582208	1	True				
ANR	4582217	Identifier	active_transaction		4582208	0					
ANR	4582218	ExpressionStatement	active_transaction = NULL	379:2:11194:11219	4582208	2	True				
ANR	4582219	AssignmentExpression	active_transaction = NULL		4582208	0		=			
ANR	4582220	Identifier	active_transaction		4582208	0					
ANR	4582221	Identifier	NULL		4582208	1					
ANR	4582222	ReturnStatement	return true ;	380:2:11223:11234	4582208	3	True				
ANR	4582223	Identifier	true		4582208	0					
ANR	4582224	ReturnStatement	return false ;	382:1:11240:11252	4582208	1	True				
ANR	4582225	Identifier	false		4582208	0					
ANR	4582226	ReturnType	bool		4582208	1					
ANR	4582227	Identifier	ClassAdLog :: AbortTransaction		4582208	2					
ANR	4582228	ParameterList			4582208	3					
ANR	4582229	CFGEntryNode	ENTRY		4582208		True				
ANR	4582230	CFGExitNode	EXIT		4582208		True				
ANR	4582231	Symbol	NULL		4582208						
ANR	4582232	Symbol	true		4582208						
ANR	4582233	Symbol	false		4582208						
ANR	4582234	Symbol	active_transaction		4582208						
ANR	4582235	Function	ClassAdLog :: CommitTransaction	385:0:11257:11755							
ANR	4582236	FunctionDef	ClassAdLog :: CommitTransaction ()		4582235	0					
ANR	4582237	CompoundStatement		387:0:11294:11755	4582235	0					
ANR	4582238	IfStatement	if ( ! active_transaction )		4582235	0					
ANR	4582239	Condition	! active_transaction	390:5:11420:11438	4582235	0	True				
ANR	4582240	UnaryOperationExpression	! active_transaction		4582235	0					
ANR	4582241	UnaryOperator	!		4582235	0					
ANR	4582242	Identifier	active_transaction		4582235	1					
ANR	4582243	ReturnStatement	return ;	390:26:11441:11447	4582235	1	True				
ANR	4582244	IfStatement	if ( ! active_transaction -> EmptyTransaction ( ) )		4582235	1					
ANR	4582245	Condition	! active_transaction -> EmptyTransaction ( )	391:5:11454:11492	4582235	0	True				
ANR	4582246	UnaryOperationExpression	! active_transaction -> EmptyTransaction ( )		4582235	0					
ANR	4582247	UnaryOperator	!		4582235	0					
ANR	4582248	CallExpression	active_transaction -> EmptyTransaction ( )		4582235	1					
ANR	4582249	Callee	active_transaction -> EmptyTransaction		4582235	0					
ANR	4582250	PtrMemberAccess	active_transaction -> EmptyTransaction		4582235	0					
ANR	4582251	Identifier	active_transaction		4582235	0					
ANR	4582252	Identifier	EmptyTransaction		4582235	1					
ANR	4582253	ArgumentList			4582235	1					
ANR	4582254	CompoundStatement		8:2:292:332	4582235	1					
ANR	4582255	Statement	LogEndTransaction	392:2:11499:11515	4582235	0	True				
ANR	4582256	Statement	*	392:20:11517:11517	4582235	1	True				
ANR	4582257	Statement	log	392:21:11518:11520	4582235	2	True				
ANR	4582258	Statement	=	392:25:11522:11522	4582235	3	True				
ANR	4582259	Statement	new	392:27:11524:11526	4582235	4	True				
ANR	4582260	ExpressionStatement	LogEndTransaction	392:31:11528:11545	4582235	5	True				
ANR	4582261	Identifier	LogEndTransaction		4582235	0					
ANR	4582262	ExpressionStatement	active_transaction -> AppendLog ( log )	393:2:11549:11583	4582235	6	True				
ANR	4582263	CallExpression	active_transaction -> AppendLog ( log )		4582235	0					
ANR	4582264	Callee	active_transaction -> AppendLog		4582235	0					
ANR	4582265	PtrMemberAccess	active_transaction -> AppendLog		4582235	0					
ANR	4582266	Identifier	active_transaction		4582235	0					
ANR	4582267	Identifier	AppendLog		4582235	1					
ANR	4582268	ArgumentList	log		4582235	1					
ANR	4582269	Argument	log		4582235	0					
ANR	4582270	Identifier	log		4582235	0					
ANR	4582271	IdentifierDeclStatement	bool nondurable = m_nondurable_level > 0 ;	394:2:11587:11627	4582235	7	True				
ANR	4582272	IdentifierDecl	nondurable = m_nondurable_level > 0		4582235	0					
ANR	4582273	IdentifierDeclType	bool		4582235	0					
ANR	4582274	Identifier	nondurable		4582235	1					
ANR	4582275	AssignmentExpression	nondurable = m_nondurable_level > 0		4582235	2		=			
ANR	4582276	Identifier	nondurable		4582235	0					
ANR	4582277	RelationalExpression	m_nondurable_level > 0		4582235	1		>			
ANR	4582278	Identifier	m_nondurable_level		4582235	0					
ANR	4582279	PrimaryExpression	0		4582235	1					
ANR	4582280	ExpressionStatement	"active_transaction -> Commit ( log_fp , ( void * ) & table , nondurable )"	395:2:11631:11694	4582235	8	True				
ANR	4582281	CallExpression	"active_transaction -> Commit ( log_fp , ( void * ) & table , nondurable )"		4582235	0					
ANR	4582282	Callee	active_transaction -> Commit		4582235	0					
ANR	4582283	PtrMemberAccess	active_transaction -> Commit		4582235	0					
ANR	4582284	Identifier	active_transaction		4582235	0					
ANR	4582285	Identifier	Commit		4582235	1					
ANR	4582286	ArgumentList	log_fp		4582235	1					
ANR	4582287	Argument	log_fp		4582235	0					
ANR	4582288	Identifier	log_fp		4582235	0					
ANR	4582289	Argument	( void * ) & table		4582235	1					
ANR	4582290	CastExpression	( void * ) & table		4582235	0					
ANR	4582291	CastTarget	void *		4582235	0					
ANR	4582292	UnaryOperationExpression	& table		4582235	1					
ANR	4582293	UnaryOperator	&		4582235	0					
ANR	4582294	Identifier	table		4582235	1					
ANR	4582295	Argument	nondurable		4582235	2					
ANR	4582296	Identifier	nondurable		4582235	0					
ANR	4582297	Statement	delete	397:1:11700:11705	4582235	2	True				
ANR	4582298	ExpressionStatement	active_transaction	397:8:11707:11725	4582235	3	True				
ANR	4582299	Identifier	active_transaction		4582235	0					
ANR	4582300	ExpressionStatement	active_transaction = NULL	398:1:11728:11753	4582235	4	True				
ANR	4582301	AssignmentExpression	active_transaction = NULL		4582235	0		=			
ANR	4582302	Identifier	active_transaction		4582235	0					
ANR	4582303	Identifier	NULL		4582235	1					
ANR	4582304	ReturnType	void		4582235	1					
ANR	4582305	Identifier	ClassAdLog :: CommitTransaction		4582235	2					
ANR	4582306	ParameterList			4582235	3					
ANR	4582307	CFGEntryNode	ENTRY		4582235		True				
ANR	4582308	CFGExitNode	EXIT		4582235		True				
ANR	4582309	Symbol	log_fp		4582235						
ANR	4582310	Symbol	active_transaction -> EmptyTransaction		4582235						
ANR	4582311	Symbol	NULL		4582235						
ANR	4582312	Symbol	log		4582235						
ANR	4582313	Symbol	m_nondurable_level		4582235						
ANR	4582314	Symbol	nondurable		4582235						
ANR	4582315	Symbol	* active_transaction		4582235						
ANR	4582316	Symbol	& table		4582235						
ANR	4582317	Symbol	active_transaction		4582235						
ANR	4582318	Function	ClassAdLog :: CommitNondurableTransaction	401:0:11758:11914							
ANR	4582319	FunctionDef	ClassAdLog :: CommitNondurableTransaction ()		4582318	0					
ANR	4582320	CompoundStatement		403:0:11805:11914	4582318	0					
ANR	4582321	IdentifierDeclStatement	int old_level = IncNondurableCommitLevel ( ) ;	404:1:11808:11850	4582318	0	True				
ANR	4582322	IdentifierDecl	old_level = IncNondurableCommitLevel ( )		4582318	0					
ANR	4582323	IdentifierDeclType	int		4582318	0					
ANR	4582324	Identifier	old_level		4582318	1					
ANR	4582325	AssignmentExpression	old_level = IncNondurableCommitLevel ( )		4582318	2		=			
ANR	4582326	Identifier	old_level		4582318	0					
ANR	4582327	CallExpression	IncNondurableCommitLevel ( )		4582318	1					
ANR	4582328	Callee	IncNondurableCommitLevel		4582318	0					
ANR	4582329	Identifier	IncNondurableCommitLevel		4582318	0					
ANR	4582330	ArgumentList			4582318	1					
ANR	4582331	ExpressionStatement	CommitTransaction ( )	405:1:11853:11872	4582318	1	True				
ANR	4582332	CallExpression	CommitTransaction ( )		4582318	0					
ANR	4582333	Callee	CommitTransaction		4582318	0					
ANR	4582334	Identifier	CommitTransaction		4582318	0					
ANR	4582335	ArgumentList			4582318	1					
ANR	4582336	ExpressionStatement	DecNondurableCommitLevel ( old_level )	406:1:11875:11912	4582318	2	True				
ANR	4582337	CallExpression	DecNondurableCommitLevel ( old_level )		4582318	0					
ANR	4582338	Callee	DecNondurableCommitLevel		4582318	0					
ANR	4582339	Identifier	DecNondurableCommitLevel		4582318	0					
ANR	4582340	ArgumentList	old_level		4582318	1					
ANR	4582341	Argument	old_level		4582318	0					
ANR	4582342	Identifier	old_level		4582318	0					
ANR	4582343	ReturnType	void		4582318	1					
ANR	4582344	Identifier	ClassAdLog :: CommitNondurableTransaction		4582318	2					
ANR	4582345	ParameterList			4582318	3					
ANR	4582346	CFGEntryNode	ENTRY		4582318		True				
ANR	4582347	CFGExitNode	EXIT		4582318		True				
ANR	4582348	Symbol	IncNondurableCommitLevel		4582318						
ANR	4582349	Symbol	old_level		4582318						
ANR	4582350	Function	ClassAdLog :: AdExistsInTableOrTransaction	409:0:11917:12651							
ANR	4582351	FunctionDef	ClassAdLog :: AdExistsInTableOrTransaction (const char * key)		4582350	0					
ANR	4582352	CompoundStatement		411:0:11980:12651	4582350	0					
ANR	4582353	IdentifierDeclStatement	bool adexists = false ;	412:1:11983:12004	4582350	0	True				
ANR	4582354	IdentifierDecl	adexists = false		4582350	0					
ANR	4582355	IdentifierDeclType	bool		4582350	0					
ANR	4582356	Identifier	adexists		4582350	1					
ANR	4582357	AssignmentExpression	adexists = false		4582350	2		=			
ANR	4582358	Identifier	false		4582350	0					
ANR	4582359	Identifier	false		4582350	1					
ANR	4582360	IdentifierDeclStatement	HashKey hkey ( key ) ;	415:1:12064:12081	4582350	1	True				
ANR	4582361	IdentifierDecl	hkey ( key )		4582350	0					
ANR	4582362	IdentifierDeclType	HashKey		4582350	0					
ANR	4582363	Identifier	hkey		4582350	1					
ANR	4582364	Identifier	key		4582350	2					
ANR	4582365	IdentifierDeclStatement	ClassAd * ad = NULL ;	416:1:12084:12102	4582350	2	True				
ANR	4582366	IdentifierDecl	* ad = NULL		4582350	0					
ANR	4582367	IdentifierDeclType	ClassAd *		4582350	0					
ANR	4582368	Identifier	ad		4582350	1					
ANR	4582369	AssignmentExpression	* ad = NULL		4582350	2		=			
ANR	4582370	Identifier	NULL		4582350	0					
ANR	4582371	Identifier	NULL		4582350	1					
ANR	4582372	ExpressionStatement	"table . lookup ( hkey , ad )"	417:1:12105:12127	4582350	3	True				
ANR	4582373	CallExpression	"table . lookup ( hkey , ad )"		4582350	0					
ANR	4582374	Callee	table . lookup		4582350	0					
ANR	4582375	MemberAccess	table . lookup		4582350	0					
ANR	4582376	Identifier	table		4582350	0					
ANR	4582377	Identifier	lookup		4582350	1					
ANR	4582378	ArgumentList	hkey		4582350	1					
ANR	4582379	Argument	hkey		4582350	0					
ANR	4582380	Identifier	hkey		4582350	0					
ANR	4582381	Argument	ad		4582350	1					
ANR	4582382	Identifier	ad		4582350	0					
ANR	4582383	IfStatement	if ( ad )		4582350	4					
ANR	4582384	Condition	ad	418:6:12135:12136	4582350	0	True				
ANR	4582385	Identifier	ad		4582350	0					
ANR	4582386	CompoundStatement		8:11:159:159	4582350	1					
ANR	4582387	ExpressionStatement	adexists = true	419:2:12144:12159	4582350	0	True				
ANR	4582388	AssignmentExpression	adexists = true		4582350	0		=			
ANR	4582389	Identifier	adexists		4582350	0					
ANR	4582390	Identifier	true		4582350	1					
ANR	4582391	IfStatement	if ( ! active_transaction )		4582350	5					
ANR	4582392	Condition	! active_transaction	423:5:12222:12240	4582350	0	True				
ANR	4582393	UnaryOperationExpression	! active_transaction		4582350	0					
ANR	4582394	UnaryOperator	!		4582350	0					
ANR	4582395	Identifier	active_transaction		4582350	1					
ANR	4582396	CompoundStatement		13:26:262:262	4582350	1					
ANR	4582397	ReturnStatement	return adexists ;	424:2:12247:12262	4582350	0	True				
ANR	4582398	Identifier	adexists		4582350	0					
ANR	4582399	ForStatement	for ( LogRecord * log = active_transaction -> FirstEntry ( key ) ; log ; log = active_transaction -> NextEntry ( ) )		4582350	6					
ANR	4582400	ForInit	LogRecord * log = active_transaction -> FirstEntry ( key ) ;	428:6:12327:12379	4582350	0	True				
ANR	4582401	IdentifierDeclStatement	LogRecord * log = active_transaction -> FirstEntry ( key ) ;		4582350	0					
ANR	4582402	IdentifierDecl	* log = active_transaction -> FirstEntry ( key )		4582350	0					
ANR	4582403	IdentifierDeclType	LogRecord *		4582350	0					
ANR	4582404	Identifier	log		4582350	1					
ANR	4582405	AssignmentExpression	* log = active_transaction -> FirstEntry ( key )		4582350	2		=			
ANR	4582406	Identifier	log		4582350	0					
ANR	4582407	CallExpression	active_transaction -> FirstEntry ( key )		4582350	1					
ANR	4582408	Callee	active_transaction -> FirstEntry		4582350	0					
ANR	4582409	PtrMemberAccess	active_transaction -> FirstEntry		4582350	0					
ANR	4582410	Identifier	active_transaction		4582350	0					
ANR	4582411	Identifier	FirstEntry		4582350	1					
ANR	4582412	ArgumentList	key		4582350	1					
ANR	4582413	Argument	key		4582350	0					
ANR	4582414	Identifier	key		4582350	0					
ANR	4582415	Condition	log	428:60:12381:12383	4582350	1	True				
ANR	4582416	Identifier	log		4582350	0					
ANR	4582417	AssignmentExpression	log = active_transaction -> NextEntry ( )	429:3:12390:12426	4582350	2	True	=			
ANR	4582418	Identifier	log		4582350	0					
ANR	4582419	CallExpression	active_transaction -> NextEntry ( )		4582350	1					
ANR	4582420	Callee	active_transaction -> NextEntry		4582350	0					
ANR	4582421	PtrMemberAccess	active_transaction -> NextEntry		4582350	0					
ANR	4582422	Identifier	active_transaction		4582350	0					
ANR	4582423	Identifier	NextEntry		4582350	1					
ANR	4582424	ArgumentList			4582350	1					
ANR	4582425	CompoundStatement		20:1:450:450	4582350	3					
ANR	4582426	SwitchStatement	switch ( log -> get_op_type ( ) )		4582350	0					
ANR	4582427	Condition	log -> get_op_type ( )	431:10:12443:12460	4582350	0	True				
ANR	4582428	CallExpression	log -> get_op_type ( )		4582350	0					
ANR	4582429	Callee	log -> get_op_type		4582350	0					
ANR	4582430	PtrMemberAccess	log -> get_op_type		4582350	0					
ANR	4582431	Identifier	log		4582350	0					
ANR	4582432	Identifier	get_op_type		4582350	1					
ANR	4582433	ArgumentList			4582350	1					
ANR	4582434	CompoundStatement		21:30:482:482	4582350	1					
ANR	4582435	Label	case CondorLogOp_NewClassAd :	432:2:12467:12494	4582350	0	True				
ANR	4582436	Identifier	CondorLogOp_NewClassAd		4582350	0					
ANR	4582437	CompoundStatement		22:31:515:515	4582350	1					
ANR	4582438	ExpressionStatement	adexists = true	433:3:12501:12516	4582350	0	True				
ANR	4582439	AssignmentExpression	adexists = true		4582350	0		=			
ANR	4582440	Identifier	adexists		4582350	0					
ANR	4582441	Identifier	true		4582350	1					
ANR	4582442	BreakStatement	break ;	434:3:12521:12526	4582350	1	True				
ANR	4582443	Label	case CondorLogOp_DestroyClassAd :	436:2:12534:12565	4582350	2	True				
ANR	4582444	Identifier	CondorLogOp_DestroyClassAd		4582350	0					
ANR	4582445	CompoundStatement		26:35:586:586	4582350	3					
ANR	4582446	ExpressionStatement	adexists = false	437:3:12572:12588	4582350	0	True				
ANR	4582447	AssignmentExpression	adexists = false		4582350	0		=			
ANR	4582448	Identifier	adexists		4582350	0					
ANR	4582449	Identifier	false		4582350	1					
ANR	4582450	BreakStatement	break ;	438:3:12593:12598	4582350	1	True				
ANR	4582451	Label	default :	440:2:12606:12613	4582350	4	True				
ANR	4582452	Identifier	default		4582350	0					
ANR	4582453	BreakStatement	break ;	441:3:12618:12623	4582350	5	True				
ANR	4582454	ReturnStatement	return adexists ;	445:1:12634:12649	4582350	7	True				
ANR	4582455	Identifier	adexists		4582350	0					
ANR	4582456	ReturnType	bool		4582350	1					
ANR	4582457	Identifier	ClassAdLog :: AdExistsInTableOrTransaction		4582350	2					
ANR	4582458	ParameterList	const char * key		4582350	3					
ANR	4582459	Parameter	const char * key	410:41:11963:11977	4582350	0	True				
ANR	4582460	ParameterType	const char *		4582350	0					
ANR	4582461	Identifier	key		4582350	1					
ANR	4582462	CFGEntryNode	ENTRY		4582350		True				
ANR	4582463	CFGExitNode	EXIT		4582350		True				
ANR	4582464	Symbol	NULL		4582350						
ANR	4582465	Symbol	ad		4582350						
ANR	4582466	Symbol	log		4582350						
ANR	4582467	Symbol	hkey		4582350						
ANR	4582468	Symbol	false		4582350						
ANR	4582469	Symbol	log -> get_op_type		4582350						
ANR	4582470	Symbol	active_transaction		4582350						
ANR	4582471	Symbol	active_transaction -> NextEntry		4582350						
ANR	4582472	Symbol	* log		4582350						
ANR	4582473	Symbol	active_transaction -> FirstEntry		4582350						
ANR	4582474	Symbol	adexists		4582350						
ANR	4582475	Symbol	true		4582350						
ANR	4582476	Symbol	* active_transaction		4582350						
ANR	4582477	Symbol	key		4582350						
ANR	4582478	Symbol	table		4582350						
ANR	4582479	Function	ClassAdLog :: LookupInTransaction	449:0:12655:12834							
ANR	4582480	FunctionDef	"ClassAdLog :: LookupInTransaction (const char * key , const char * name , char * & val)"		4582479	0					
ANR	4582481	CompoundStatement		451:0:12739:12834	4582479	0					
ANR	4582482	IdentifierDeclStatement	ClassAd * ad = NULL ;	452:1:12742:12760	4582479	0	True				
ANR	4582483	IdentifierDecl	* ad = NULL		4582479	0					
ANR	4582484	IdentifierDeclType	ClassAd *		4582479	0					
ANR	4582485	Identifier	ad		4582479	1					
ANR	4582486	AssignmentExpression	* ad = NULL		4582479	2		=			
ANR	4582487	Identifier	NULL		4582479	0					
ANR	4582488	Identifier	NULL		4582479	1					
ANR	4582489	IfStatement	if ( ! name )		4582479	1					
ANR	4582490	Condition	! name	454:5:12768:12772	4582479	0	True				
ANR	4582491	UnaryOperationExpression	! name		4582479	0					
ANR	4582492	UnaryOperator	!		4582479	0					
ANR	4582493	Identifier	name		4582479	1					
ANR	4582494	ReturnStatement	return 0 ;	454:12:12775:12783	4582479	1	True				
ANR	4582495	PrimaryExpression	0		4582479	0					
ANR	4582496	ReturnStatement	"return ExamineTransaction ( key , name , val , ad ) ;"	456:1:12787:12832	4582479	2	True				
ANR	4582497	CallExpression	"ExamineTransaction ( key , name , val , ad )"		4582479	0					
ANR	4582498	Callee	ExamineTransaction		4582479	0					
ANR	4582499	Identifier	ExamineTransaction		4582479	0					
ANR	4582500	ArgumentList	key		4582479	1					
ANR	4582501	Argument	key		4582479	0					
ANR	4582502	Identifier	key		4582479	0					
ANR	4582503	Argument	name		4582479	1					
ANR	4582504	Identifier	name		4582479	0					
ANR	4582505	Argument	val		4582479	2					
ANR	4582506	Identifier	val		4582479	0					
ANR	4582507	Argument	ad		4582479	3					
ANR	4582508	Identifier	ad		4582479	0					
ANR	4582509	ReturnType	int		4582479	1					
ANR	4582510	Identifier	ClassAdLog :: LookupInTransaction		4582479	2					
ANR	4582511	ParameterList	"const char * key , const char * name , char * & val"		4582479	3					
ANR	4582512	Parameter	const char * key	450:32:12692:12706	4582479	0	True				
ANR	4582513	ParameterType	const char *		4582479	0					
ANR	4582514	Identifier	key		4582479	1					
ANR	4582515	Parameter	const char * name	450:49:12709:12724	4582479	1	True				
ANR	4582516	ParameterType	const char *		4582479	0					
ANR	4582517	Identifier	name		4582479	1					
ANR	4582518	Parameter	char * & val	450:67:12727:12736	4582479	2	True				
ANR	4582519	ParameterType	char * &		4582479	0					
ANR	4582520	Identifier	val		4582479	1					
ANR	4582521	CFGEntryNode	ENTRY		4582479		True				
ANR	4582522	CFGExitNode	EXIT		4582479		True				
ANR	4582523	Symbol	val		4582479						
ANR	4582524	Symbol	NULL		4582479						
ANR	4582525	Symbol	ad		4582479						
ANR	4582526	Symbol	ExamineTransaction		4582479						
ANR	4582527	Symbol	name		4582479						
ANR	4582528	Symbol	key		4582479						
ANR	4582529	Function	ClassAdLog :: AddAttrsFromTransaction	459:0:12837:13379							
ANR	4582530	FunctionDef	"ClassAdLog :: AddAttrsFromTransaction (const char * key , ClassAd & ad)"		4582529	0					
ANR	4582531	CompoundStatement		461:0:12908:13379	4582529	0					
ANR	4582532	IdentifierDeclStatement	char * val = NULL ;	462:1:12911:12927	4582529	0	True				
ANR	4582533	IdentifierDecl	* val = NULL		4582529	0					
ANR	4582534	IdentifierDeclType	char *		4582529	0					
ANR	4582535	Identifier	val		4582529	1					
ANR	4582536	AssignmentExpression	* val = NULL		4582529	2		=			
ANR	4582537	Identifier	NULL		4582529	0					
ANR	4582538	Identifier	NULL		4582529	1					
ANR	4582539	IdentifierDeclStatement	ClassAd * attrsFromTransaction ;	463:1:12930:12959	4582529	1	True				
ANR	4582540	IdentifierDecl	* attrsFromTransaction		4582529	0					
ANR	4582541	IdentifierDeclType	ClassAd *		4582529	0					
ANR	4582542	Identifier	attrsFromTransaction		4582529	1					
ANR	4582543	IfStatement	if ( ! key )		4582529	2					
ANR	4582544	Condition	! key	465:6:12968:12971	4582529	0	True				
ANR	4582545	UnaryOperationExpression	! key		4582529	0					
ANR	4582546	UnaryOperator	!		4582529	0					
ANR	4582547	Identifier	key		4582529	1					
ANR	4582548	CompoundStatement		5:13:66:66	4582529	1					
ANR	4582549	ReturnStatement	return false ;	466:2:12979:12991	4582529	0	True				
ANR	4582550	Identifier	false		4582529	0					
ANR	4582551	IfStatement	if ( ! active_transaction )		4582529	3					
ANR	4582552	Condition	! active_transaction	470:5:13054:13072	4582529	0	True				
ANR	4582553	UnaryOperationExpression	! active_transaction		4582529	0					
ANR	4582554	UnaryOperator	!		4582529	0					
ANR	4582555	Identifier	active_transaction		4582529	1					
ANR	4582556	CompoundStatement		10:26:166:166	4582529	1					
ANR	4582557	ReturnStatement	return false ;	471:2:13079:13091	4582529	0	True				
ANR	4582558	Identifier	false		4582529	0					
ANR	4582559	ExpressionStatement	attrsFromTransaction = NULL	475:1:13151:13178	4582529	4	True				
ANR	4582560	AssignmentExpression	attrsFromTransaction = NULL		4582529	0		=			
ANR	4582561	Identifier	attrsFromTransaction		4582529	0					
ANR	4582562	Identifier	NULL		4582529	1					
ANR	4582563	ExpressionStatement	"ExamineTransaction ( key , NULL , val , attrsFromTransaction )"	476:1:13181:13234	4582529	5	True				
ANR	4582564	CallExpression	"ExamineTransaction ( key , NULL , val , attrsFromTransaction )"		4582529	0					
ANR	4582565	Callee	ExamineTransaction		4582529	0					
ANR	4582566	Identifier	ExamineTransaction		4582529	0					
ANR	4582567	ArgumentList	key		4582529	1					
ANR	4582568	Argument	key		4582529	0					
ANR	4582569	Identifier	key		4582529	0					
ANR	4582570	Argument	NULL		4582529	1					
ANR	4582571	Identifier	NULL		4582529	0					
ANR	4582572	Argument	val		4582529	2					
ANR	4582573	Identifier	val		4582529	0					
ANR	4582574	Argument	attrsFromTransaction		4582529	3					
ANR	4582575	Identifier	attrsFromTransaction		4582529	0					
ANR	4582576	IfStatement	if ( attrsFromTransaction )		4582529	6					
ANR	4582577	Condition	attrsFromTransaction	477:6:13242:13261	4582529	0	True				
ANR	4582578	Identifier	attrsFromTransaction		4582529	0					
ANR	4582579	CompoundStatement		17:29:356:356	4582529	1					
ANR	4582580	ExpressionStatement	"MergeClassAds ( & ad , attrsFromTransaction , true )"	478:2:13269:13313	4582529	0	True				
ANR	4582581	CallExpression	"MergeClassAds ( & ad , attrsFromTransaction , true )"		4582529	0					
ANR	4582582	Callee	MergeClassAds		4582529	0					
ANR	4582583	Identifier	MergeClassAds		4582529	0					
ANR	4582584	ArgumentList	& ad		4582529	1					
ANR	4582585	Argument	& ad		4582529	0					
ANR	4582586	UnaryOperationExpression	& ad		4582529	0					
ANR	4582587	UnaryOperator	&		4582529	0					
ANR	4582588	Identifier	ad		4582529	1					
ANR	4582589	Argument	attrsFromTransaction		4582529	1					
ANR	4582590	Identifier	attrsFromTransaction		4582529	0					
ANR	4582591	Argument	true		4582529	2					
ANR	4582592	Identifier	true		4582529	0					
ANR	4582593	Statement	delete	479:2:13317:13322	4582529	1	True				
ANR	4582594	ExpressionStatement	attrsFromTransaction	479:9:13324:13344	4582529	2	True				
ANR	4582595	Identifier	attrsFromTransaction		4582529	0					
ANR	4582596	ReturnStatement	return true ;	480:2:13348:13359	4582529	3	True				
ANR	4582597	Identifier	true		4582529	0					
ANR	4582598	ReturnStatement	return false ;	482:1:13365:13377	4582529	7	True				
ANR	4582599	Identifier	false		4582529	0					
ANR	4582600	ReturnType	bool		4582529	1					
ANR	4582601	Identifier	ClassAdLog :: AddAttrsFromTransaction		4582529	2					
ANR	4582602	ParameterList	"const char * key , ClassAd & ad"		4582529	3					
ANR	4582603	Parameter	const char * key	460:36:12878:12892	4582529	0	True				
ANR	4582604	ParameterType	const char *		4582529	0					
ANR	4582605	Identifier	key		4582529	1					
ANR	4582606	Parameter	ClassAd & ad	460:53:12895:12905	4582529	1	True				
ANR	4582607	ParameterType	ClassAd &		4582529	0					
ANR	4582608	Identifier	ad		4582529	1					
ANR	4582609	CFGEntryNode	ENTRY		4582529		True				
ANR	4582610	CFGExitNode	EXIT		4582529		True				
ANR	4582611	Symbol	val		4582529						
ANR	4582612	Symbol	ad		4582529						
ANR	4582613	Symbol	NULL		4582529						
ANR	4582614	Symbol	false		4582529						
ANR	4582615	Symbol	true		4582529						
ANR	4582616	Symbol	& ad		4582529						
ANR	4582617	Symbol	active_transaction		4582529						
ANR	4582618	Symbol	key		4582529						
ANR	4582619	Symbol	attrsFromTransaction		4582529						
ANR	4582620	Function	ClassAdLog :: ExamineTransaction	485:0:13382:15113							
ANR	4582621	FunctionDef	"ClassAdLog :: ExamineTransaction (const char * key , const char * name , char * & val , ClassAd * & ad)"		4582620	0					
ANR	4582622	CompoundStatement		487:0:13478:15113	4582620	0					
ANR	4582623	IdentifierDeclStatement	"bool AdDeleted = false , ValDeleted = false , ValFound = false ;"	488:1:13481:13535	4582620	0	True				
ANR	4582624	IdentifierDecl	AdDeleted = false		4582620	0					
ANR	4582625	IdentifierDeclType	bool		4582620	0					
ANR	4582626	Identifier	AdDeleted		4582620	1					
ANR	4582627	AssignmentExpression	AdDeleted = false		4582620	2		=			
ANR	4582628	Identifier	false		4582620	0					
ANR	4582629	Identifier	false		4582620	1					
ANR	4582630	IdentifierDecl	ValDeleted = false		4582620	1					
ANR	4582631	IdentifierDeclType	bool		4582620	0					
ANR	4582632	Identifier	ValDeleted		4582620	1					
ANR	4582633	AssignmentExpression	ValDeleted = false		4582620	2		=			
ANR	4582634	Identifier	false		4582620	0					
ANR	4582635	Identifier	false		4582620	1					
ANR	4582636	IdentifierDecl	ValFound = false		4582620	2					
ANR	4582637	IdentifierDeclType	bool		4582620	0					
ANR	4582638	Identifier	ValFound		4582620	1					
ANR	4582639	AssignmentExpression	ValFound = false		4582620	2		=			
ANR	4582640	Identifier	false		4582620	0					
ANR	4582641	Identifier	false		4582620	1					
ANR	4582642	IdentifierDeclStatement	int attrsAdded = 0 ;	489:1:13538:13556	4582620	1	True				
ANR	4582643	IdentifierDecl	attrsAdded = 0		4582620	0					
ANR	4582644	IdentifierDeclType	int		4582620	0					
ANR	4582645	Identifier	attrsAdded		4582620	1					
ANR	4582646	AssignmentExpression	attrsAdded = 0		4582620	2		=			
ANR	4582647	Identifier	attrsAdded		4582620	0					
ANR	4582648	PrimaryExpression	0		4582620	1					
ANR	4582649	IfStatement	if ( ! active_transaction )		4582620	2					
ANR	4582650	Condition	! active_transaction	491:5:13564:13582	4582620	0	True				
ANR	4582651	UnaryOperationExpression	! active_transaction		4582620	0					
ANR	4582652	UnaryOperator	!		4582620	0					
ANR	4582653	Identifier	active_transaction		4582620	1					
ANR	4582654	ReturnStatement	return 0 ;	491:26:13585:13593	4582620	1	True				
ANR	4582655	PrimaryExpression	0		4582620	0					
ANR	4582656	ForStatement	for ( LogRecord * log = active_transaction -> FirstEntry ( key ) ; log ; log = active_transaction -> NextEntry ( ) )		4582620	3					
ANR	4582657	ForInit	LogRecord * log = active_transaction -> FirstEntry ( key ) ;	493:6:13602:13654	4582620	0	True				
ANR	4582658	IdentifierDeclStatement	LogRecord * log = active_transaction -> FirstEntry ( key ) ;		4582620	0					
ANR	4582659	IdentifierDecl	* log = active_transaction -> FirstEntry ( key )		4582620	0					
ANR	4582660	IdentifierDeclType	LogRecord *		4582620	0					
ANR	4582661	Identifier	log		4582620	1					
ANR	4582662	AssignmentExpression	* log = active_transaction -> FirstEntry ( key )		4582620	2		=			
ANR	4582663	Identifier	log		4582620	0					
ANR	4582664	CallExpression	active_transaction -> FirstEntry ( key )		4582620	1					
ANR	4582665	Callee	active_transaction -> FirstEntry		4582620	0					
ANR	4582666	PtrMemberAccess	active_transaction -> FirstEntry		4582620	0					
ANR	4582667	Identifier	active_transaction		4582620	0					
ANR	4582668	Identifier	FirstEntry		4582620	1					
ANR	4582669	ArgumentList	key		4582620	1					
ANR	4582670	Argument	key		4582620	0					
ANR	4582671	Identifier	key		4582620	0					
ANR	4582672	Condition	log	493:60:13656:13658	4582620	1	True				
ANR	4582673	Identifier	log		4582620	0					
ANR	4582674	AssignmentExpression	log = active_transaction -> NextEntry ( )	494:3:13665:13701	4582620	2	True	=			
ANR	4582675	Identifier	log		4582620	0					
ANR	4582676	CallExpression	active_transaction -> NextEntry ( )		4582620	1					
ANR	4582677	Callee	active_transaction -> NextEntry		4582620	0					
ANR	4582678	PtrMemberAccess	active_transaction -> NextEntry		4582620	0					
ANR	4582679	Identifier	active_transaction		4582620	0					
ANR	4582680	Identifier	NextEntry		4582620	1					
ANR	4582681	ArgumentList			4582620	1					
ANR	4582682	CompoundStatement		8:42:225:225	4582620	3					
ANR	4582683	SwitchStatement	switch ( log -> get_op_type ( ) )		4582620	0					
ANR	4582684	Condition	log -> get_op_type ( )	496:10:13717:13734	4582620	0	True				
ANR	4582685	CallExpression	log -> get_op_type ( )		4582620	0					
ANR	4582686	Callee	log -> get_op_type		4582620	0					
ANR	4582687	PtrMemberAccess	log -> get_op_type		4582620	0					
ANR	4582688	Identifier	log		4582620	0					
ANR	4582689	Identifier	get_op_type		4582620	1					
ANR	4582690	ArgumentList			4582620	1					
ANR	4582691	CompoundStatement		10:30:258:258	4582620	1					
ANR	4582692	Label	case CondorLogOp_NewClassAd :	497:2:13741:13768	4582620	0	True				
ANR	4582693	Identifier	CondorLogOp_NewClassAd		4582620	0					
ANR	4582694	CompoundStatement		11:31:291:291	4582620	1					
ANR	4582695	IfStatement	if ( AdDeleted )		4582620	0					
ANR	4582696	Condition	AdDeleted	498:7:13779:13787	4582620	0	True				
ANR	4582697	Identifier	AdDeleted		4582620	0					
ANR	4582698	CompoundStatement		12:18:311:311	4582620	1					
ANR	4582699	ExpressionStatement	AdDeleted = false	499:4:13844:13861	4582620	0	True				
ANR	4582700	AssignmentExpression	AdDeleted = false		4582620	0		=			
ANR	4582701	Identifier	AdDeleted		4582620	0					
ANR	4582702	Identifier	false		4582620	1					
ANR	4582703	BreakStatement	break ;	501:3:13871:13876	4582620	1	True				
ANR	4582704	Label	case CondorLogOp_DestroyClassAd :	503:2:13884:13915	4582620	2	True				
ANR	4582705	Identifier	CondorLogOp_DestroyClassAd		4582620	0					
ANR	4582706	CompoundStatement		17:35:438:438	4582620	3					
ANR	4582707	ExpressionStatement	AdDeleted = true	504:3:13922:13938	4582620	0	True				
ANR	4582708	AssignmentExpression	AdDeleted = true		4582620	0		=			
ANR	4582709	Identifier	AdDeleted		4582620	0					
ANR	4582710	Identifier	true		4582620	1					
ANR	4582711	IfStatement	if ( ad )		4582620	1					
ANR	4582712	Condition	ad	505:8:13948:13949	4582620	0	True				
ANR	4582713	Identifier	ad		4582620	0					
ANR	4582714	CompoundStatement		19:13:474:474	4582620	1					
ANR	4582715	Statement	delete	506:4:13959:13964	4582620	0	True				
ANR	4582716	ExpressionStatement	ad	506:11:13966:13968	4582620	1	True				
ANR	4582717	Identifier	ad		4582620	0					
ANR	4582718	ExpressionStatement	ad = NULL	507:4:13974:13983	4582620	2	True				
ANR	4582719	AssignmentExpression	ad = NULL		4582620	0		=			
ANR	4582720	Identifier	ad		4582620	0					
ANR	4582721	Identifier	NULL		4582620	1					
ANR	4582722	ExpressionStatement	attrsAdded = 0	508:4:13989:14003	4582620	3	True				
ANR	4582723	AssignmentExpression	attrsAdded = 0		4582620	0		=			
ANR	4582724	Identifier	attrsAdded		4582620	0					
ANR	4582725	PrimaryExpression	0		4582620	1					
ANR	4582726	BreakStatement	break ;	510:3:14013:14018	4582620	2	True				
ANR	4582727	Label	case CondorLogOp_SetAttribute :	512:2:14026:14055	4582620	4	True				
ANR	4582728	Identifier	CondorLogOp_SetAttribute		4582620	0					
ANR	4582729	CompoundStatement		27:3:583:639	4582620	5					
ANR	4582730	IdentifierDeclStatement	char const * lname = ( ( LogSetAttribute * ) log ) -> get_name ( ) ;	513:3:14062:14118	4582620	0	True				
ANR	4582731	IdentifierDecl	* lname = ( ( LogSetAttribute * ) log ) -> get_name ( )		4582620	0					
ANR	4582732	IdentifierDeclType	char const *		4582620	0					
ANR	4582733	Identifier	lname		4582620	1					
ANR	4582734	AssignmentExpression	* lname = ( ( LogSetAttribute * ) log ) -> get_name ( )		4582620	2		=			
ANR	4582735	Identifier	lname		4582620	0					
ANR	4582736	CallExpression	( ( LogSetAttribute * ) log ) -> get_name ( )		4582620	1					
ANR	4582737	Callee	( ( LogSetAttribute * ) log ) -> get_name		4582620	0					
ANR	4582738	PtrMemberAccess	( ( LogSetAttribute * ) log ) -> get_name		4582620	0					
ANR	4582739	CastExpression	( LogSetAttribute * ) log		4582620	0					
ANR	4582740	CastTarget	LogSetAttribute *		4582620	0					
ANR	4582741	Identifier	log		4582620	1					
ANR	4582742	Identifier	get_name		4582620	1					
ANR	4582743	ArgumentList			4582620	1					
ANR	4582744	IfStatement	"if ( name && strcasecmp ( lname , name ) == 0 )"		4582620	1					
ANR	4582745	Condition	"name && strcasecmp ( lname , name ) == 0"	514:7:14127:14162	4582620	0	True				
ANR	4582746	AndExpression	"name && strcasecmp ( lname , name ) == 0"		4582620	0		&&			
ANR	4582747	Identifier	name		4582620	0					
ANR	4582748	EqualityExpression	"strcasecmp ( lname , name ) == 0"		4582620	1		==			
ANR	4582749	CallExpression	"strcasecmp ( lname , name )"		4582620	0					
ANR	4582750	Callee	strcasecmp		4582620	0					
ANR	4582751	Identifier	strcasecmp		4582620	0					
ANR	4582752	ArgumentList	lname		4582620	1					
ANR	4582753	Argument	lname		4582620	0					
ANR	4582754	Identifier	lname		4582620	0					
ANR	4582755	Argument	name		4582620	1					
ANR	4582756	Identifier	name		4582620	0					
ANR	4582757	PrimaryExpression	0		4582620	1					
ANR	4582758	CompoundStatement		28:45:686:686	4582620	1					
ANR	4582759	IfStatement	if ( ValFound )		4582620	0					
ANR	4582760	Condition	ValFound	515:8:14175:14182	4582620	0	True				
ANR	4582761	Identifier	ValFound		4582620	0					
ANR	4582762	CompoundStatement		29:18:706:706	4582620	1					
ANR	4582763	ExpressionStatement	free ( val )	516:5:14192:14201	4582620	0	True				
ANR	4582764	CallExpression	free ( val )		4582620	0					
ANR	4582765	Callee	free		4582620	0					
ANR	4582766	Identifier	free		4582620	0					
ANR	4582767	ArgumentList	val		4582620	1					
ANR	4582768	Argument	val		4582620	0					
ANR	4582769	Identifier	val		4582620	0					
ANR	4582770	ExpressionStatement	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )	518:4:14213:14264	4582620	1	True				
ANR	4582771	AssignmentExpression	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		4582620	0		=			
ANR	4582772	Identifier	val		4582620	0					
ANR	4582773	CallExpression	strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		4582620	1					
ANR	4582774	Callee	strdup		4582620	0					
ANR	4582775	Identifier	strdup		4582620	0					
ANR	4582776	ArgumentList	( ( LogSetAttribute * ) log ) -> get_value ( )		4582620	1					
ANR	4582777	Argument	( ( LogSetAttribute * ) log ) -> get_value ( )		4582620	0					
ANR	4582778	CallExpression	( ( LogSetAttribute * ) log ) -> get_value ( )		4582620	0					
ANR	4582779	Callee	( ( LogSetAttribute * ) log ) -> get_value		4582620	0					
ANR	4582780	PtrMemberAccess	( ( LogSetAttribute * ) log ) -> get_value		4582620	0					
ANR	4582781	CastExpression	( LogSetAttribute * ) log		4582620	0					
ANR	4582782	CastTarget	LogSetAttribute *		4582620	0					
ANR	4582783	Identifier	log		4582620	1					
ANR	4582784	Identifier	get_value		4582620	1					
ANR	4582785	ArgumentList			4582620	1					
ANR	4582786	ExpressionStatement	ValFound = true	519:4:14270:14285	4582620	2	True				
ANR	4582787	AssignmentExpression	ValFound = true		4582620	0		=			
ANR	4582788	Identifier	ValFound		4582620	0					
ANR	4582789	Identifier	true		4582620	1					
ANR	4582790	ExpressionStatement	ValDeleted = false	520:4:14291:14309	4582620	3	True				
ANR	4582791	AssignmentExpression	ValDeleted = false		4582620	0		=			
ANR	4582792	Identifier	ValDeleted		4582620	0					
ANR	4582793	Identifier	false		4582620	1					
ANR	4582794	IfStatement	if ( ! name )		4582620	2					
ANR	4582795	Condition	! name	522:7:14323:14327	4582620	0	True				
ANR	4582796	UnaryOperationExpression	! name		4582620	0					
ANR	4582797	UnaryOperator	!		4582620	0					
ANR	4582798	Identifier	name		4582620	1					
ANR	4582799	CompoundStatement		36:14:851:851	4582620	1					
ANR	4582800	IfStatement	if ( ! ad )		4582620	0					
ANR	4582801	Condition	! ad	523:9:14341:14343	4582620	0	True				
ANR	4582802	UnaryOperationExpression	! ad		4582620	0					
ANR	4582803	UnaryOperator	!		4582620	0					
ANR	4582804	Identifier	ad		4582620	1					
ANR	4582805	CompoundStatement		37:15:868:868	4582620	1					
ANR	4582806	Statement	ad	524:5:14354:14355	4582620	0	True				
ANR	4582807	Statement	=	524:8:14357:14357	4582620	1	True				
ANR	4582808	Statement	new	524:10:14359:14361	4582620	2	True				
ANR	4582809	ExpressionStatement	ClassAd	524:14:14363:14370	4582620	3	True				
ANR	4582810	Identifier	ClassAd		4582620	0					
ANR	4582811	ExpressionStatement	ASSERT ( ad )	525:5:14377:14387	4582620	4	True				
ANR	4582812	CallExpression	ASSERT ( ad )		4582620	0					
ANR	4582813	Callee	ASSERT		4582620	0					
ANR	4582814	Identifier	ASSERT		4582620	0					
ANR	4582815	ArgumentList	ad		4582620	1					
ANR	4582816	Argument	ad		4582620	0					
ANR	4582817	Identifier	ad		4582620	0					
ANR	4582818	IfStatement	if ( val )		4582620	1					
ANR	4582819	Condition	val	527:8:14403:14405	4582620	0	True				
ANR	4582820	Identifier	val		4582620	0					
ANR	4582821	CompoundStatement		41:13:929:929	4582620	1					
ANR	4582822	ExpressionStatement	free ( val )	528:5:14415:14424	4582620	0	True				
ANR	4582823	CallExpression	free ( val )		4582620	0					
ANR	4582824	Callee	free		4582620	0					
ANR	4582825	Identifier	free		4582620	0					
ANR	4582826	ArgumentList	val		4582620	1					
ANR	4582827	Argument	val		4582620	0					
ANR	4582828	Identifier	val		4582620	0					
ANR	4582829	ExpressionStatement	val = NULL	529:5:14431:14441	4582620	1	True				
ANR	4582830	AssignmentExpression	val = NULL		4582620	0		=			
ANR	4582831	Identifier	val		4582620	0					
ANR	4582832	Identifier	NULL		4582620	1					
ANR	4582833	ExpressionStatement	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )	531:4:14453:14504	4582620	2	True				
ANR	4582834	AssignmentExpression	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		4582620	0		=			
ANR	4582835	Identifier	val		4582620	0					
ANR	4582836	CallExpression	strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		4582620	1					
ANR	4582837	Callee	strdup		4582620	0					
ANR	4582838	Identifier	strdup		4582620	0					
ANR	4582839	ArgumentList	( ( LogSetAttribute * ) log ) -> get_value ( )		4582620	1					
ANR	4582840	Argument	( ( LogSetAttribute * ) log ) -> get_value ( )		4582620	0					
ANR	4582841	CallExpression	( ( LogSetAttribute * ) log ) -> get_value ( )		4582620	0					
ANR	4582842	Callee	( ( LogSetAttribute * ) log ) -> get_value		4582620	0					
ANR	4582843	PtrMemberAccess	( ( LogSetAttribute * ) log ) -> get_value		4582620	0					
ANR	4582844	CastExpression	( LogSetAttribute * ) log		4582620	0					
ANR	4582845	CastTarget	LogSetAttribute *		4582620	0					
ANR	4582846	Identifier	log		4582620	1					
ANR	4582847	Identifier	get_value		4582620	1					
ANR	4582848	ArgumentList			4582620	1					
ANR	4582849	ExpressionStatement	"ad -> AssignExpr ( lname , val )"	532:4:14510:14535	4582620	3	True				
ANR	4582850	CallExpression	"ad -> AssignExpr ( lname , val )"		4582620	0					
ANR	4582851	Callee	ad -> AssignExpr		4582620	0					
ANR	4582852	PtrMemberAccess	ad -> AssignExpr		4582620	0					
ANR	4582853	Identifier	ad		4582620	0					
ANR	4582854	Identifier	AssignExpr		4582620	1					
ANR	4582855	ArgumentList	lname		4582620	1					
ANR	4582856	Argument	lname		4582620	0					
ANR	4582857	Identifier	lname		4582620	0					
ANR	4582858	Argument	val		4582620	1					
ANR	4582859	Identifier	val		4582620	0					
ANR	4582860	ExpressionStatement	attrsAdded ++	533:4:14541:14553	4582620	4	True				
ANR	4582861	PostIncDecOperationExpression	attrsAdded ++		4582620	0					
ANR	4582862	Identifier	attrsAdded		4582620	0					
ANR	4582863	IncDec	++		4582620	1					
ANR	4582864	BreakStatement	break ;	535:3:14563:14568	4582620	3	True				
ANR	4582865	Label	case CondorLogOp_DeleteAttribute :	537:2:14576:14608	4582620	6	True				
ANR	4582866	Identifier	CondorLogOp_DeleteAttribute		4582620	0					
ANR	4582867	CompoundStatement		52:3:1136:1195	4582620	7					
ANR	4582868	IdentifierDeclStatement	char const * lname = ( ( LogDeleteAttribute * ) log ) -> get_name ( ) ;	538:3:14615:14674	4582620	0	True				
ANR	4582869	IdentifierDecl	* lname = ( ( LogDeleteAttribute * ) log ) -> get_name ( )		4582620	0					
ANR	4582870	IdentifierDeclType	char const *		4582620	0					
ANR	4582871	Identifier	lname		4582620	1					
ANR	4582872	AssignmentExpression	* lname = ( ( LogDeleteAttribute * ) log ) -> get_name ( )		4582620	2		=			
ANR	4582873	Identifier	lname		4582620	0					
ANR	4582874	CallExpression	( ( LogDeleteAttribute * ) log ) -> get_name ( )		4582620	1					
ANR	4582875	Callee	( ( LogDeleteAttribute * ) log ) -> get_name		4582620	0					
ANR	4582876	PtrMemberAccess	( ( LogDeleteAttribute * ) log ) -> get_name		4582620	0					
ANR	4582877	CastExpression	( LogDeleteAttribute * ) log		4582620	0					
ANR	4582878	CastTarget	LogDeleteAttribute *		4582620	0					
ANR	4582879	Identifier	log		4582620	1					
ANR	4582880	Identifier	get_name		4582620	1					
ANR	4582881	ArgumentList			4582620	1					
ANR	4582882	IfStatement	"if ( name && strcasecmp ( lname , name ) == 0 )"		4582620	1					
ANR	4582883	Condition	"name && strcasecmp ( lname , name ) == 0"	539:7:14683:14718	4582620	0	True				
ANR	4582884	AndExpression	"name && strcasecmp ( lname , name ) == 0"		4582620	0		&&			
ANR	4582885	Identifier	name		4582620	0					
ANR	4582886	EqualityExpression	"strcasecmp ( lname , name ) == 0"		4582620	1		==			
ANR	4582887	CallExpression	"strcasecmp ( lname , name )"		4582620	0					
ANR	4582888	Callee	strcasecmp		4582620	0					
ANR	4582889	Identifier	strcasecmp		4582620	0					
ANR	4582890	ArgumentList	lname		4582620	1					
ANR	4582891	Argument	lname		4582620	0					
ANR	4582892	Identifier	lname		4582620	0					
ANR	4582893	Argument	name		4582620	1					
ANR	4582894	Identifier	name		4582620	0					
ANR	4582895	PrimaryExpression	0		4582620	1					
ANR	4582896	CompoundStatement		53:45:1242:1242	4582620	1					
ANR	4582897	IfStatement	if ( ValFound )		4582620	0					
ANR	4582898	Condition	ValFound	540:8:14731:14738	4582620	0	True				
ANR	4582899	Identifier	ValFound		4582620	0					
ANR	4582900	CompoundStatement		54:18:1262:1262	4582620	1					
ANR	4582901	ExpressionStatement	free ( val )	541:5:14748:14757	4582620	0	True				
ANR	4582902	CallExpression	free ( val )		4582620	0					
ANR	4582903	Callee	free		4582620	0					
ANR	4582904	Identifier	free		4582620	0					
ANR	4582905	ArgumentList	val		4582620	1					
ANR	4582906	Argument	val		4582620	0					
ANR	4582907	Identifier	val		4582620	0					
ANR	4582908	ExpressionStatement	ValFound = false	543:4:14769:14785	4582620	1	True				
ANR	4582909	AssignmentExpression	ValFound = false		4582620	0		=			
ANR	4582910	Identifier	ValFound		4582620	0					
ANR	4582911	Identifier	false		4582620	1					
ANR	4582912	ExpressionStatement	ValDeleted = true	544:4:14791:14808	4582620	2	True				
ANR	4582913	AssignmentExpression	ValDeleted = true		4582620	0		=			
ANR	4582914	Identifier	ValDeleted		4582620	0					
ANR	4582915	Identifier	true		4582620	1					
ANR	4582916	IfStatement	if ( ! name )		4582620	2					
ANR	4582917	Condition	! name	546:7:14822:14826	4582620	0	True				
ANR	4582918	UnaryOperationExpression	! name		4582620	0					
ANR	4582919	UnaryOperator	!		4582620	0					
ANR	4582920	Identifier	name		4582620	1					
ANR	4582921	CompoundStatement		60:14:1350:1350	4582620	1					
ANR	4582922	IfStatement	if ( ad )		4582620	0					
ANR	4582923	Condition	ad	547:8:14839:14840	4582620	0	True				
ANR	4582924	Identifier	ad		4582620	0					
ANR	4582925	CompoundStatement		61:12:1364:1364	4582620	1					
ANR	4582926	ExpressionStatement	ad -> Delete ( lname )	548:5:14850:14867	4582620	0	True				
ANR	4582927	CallExpression	ad -> Delete ( lname )		4582620	0					
ANR	4582928	Callee	ad -> Delete		4582620	0					
ANR	4582929	PtrMemberAccess	ad -> Delete		4582620	0					
ANR	4582930	Identifier	ad		4582620	0					
ANR	4582931	Identifier	Delete		4582620	1					
ANR	4582932	ArgumentList	lname		4582620	1					
ANR	4582933	Argument	lname		4582620	0					
ANR	4582934	Identifier	lname		4582620	0					
ANR	4582935	ExpressionStatement	attrsAdded --	549:5:14874:14886	4582620	1	True				
ANR	4582936	PostIncDecOperationExpression	attrsAdded --		4582620	0					
ANR	4582937	Identifier	attrsAdded		4582620	0					
ANR	4582938	IncDec	--		4582620	1					
ANR	4582939	BreakStatement	break ;	552:3:14902:14907	4582620	3	True				
ANR	4582940	Label	default :	554:2:14915:14922	4582620	8	True				
ANR	4582941	Identifier	default		4582620	0					
ANR	4582942	BreakStatement	break ;	555:3:14927:14932	4582620	9	True				
ANR	4582943	IfStatement	if ( name )		4582620	4					
ANR	4582944	Condition	name	559:6:14948:14951	4582620	0	True				
ANR	4582945	Identifier	name		4582620	0					
ANR	4582946	CompoundStatement		73:13:1476:1476	4582620	1					
ANR	4582947	IfStatement	if ( AdDeleted || ValDeleted )		4582620	0					
ANR	4582948	Condition	AdDeleted || ValDeleted	560:6:14963:14985	4582620	0	True				
ANR	4582949	OrExpression	AdDeleted || ValDeleted		4582620	0		||			
ANR	4582950	Identifier	AdDeleted		4582620	0					
ANR	4582951	Identifier	ValDeleted		4582620	1					
ANR	4582952	ReturnStatement	return - 1 ;	560:31:14988:14997	4582620	1	True				
ANR	4582953	UnaryOperationExpression	- 1		4582620	0					
ANR	4582954	UnaryOperator	-		4582620	0					
ANR	4582955	PrimaryExpression	1		4582620	1					
ANR	4582956	IfStatement	if ( ValFound )		4582620	1					
ANR	4582957	Condition	ValFound	561:6:15005:15012	4582620	0	True				
ANR	4582958	Identifier	ValFound		4582620	0					
ANR	4582959	ReturnStatement	return 1 ;	561:16:15015:15023	4582620	1	True				
ANR	4582960	PrimaryExpression	1		4582620	0					
ANR	4582961	ReturnStatement	return 0 ;	562:2:15027:15035	4582620	2	True				
ANR	4582962	PrimaryExpression	0		4582620	0					
ANR	4582963	ElseStatement	else		4582620	0					
ANR	4582964	CompoundStatement		77:8:1566:1566	4582620	0					
ANR	4582965	IfStatement	if ( attrsAdded < 0 )		4582620	0					
ANR	4582966	Condition	attrsAdded < 0	564:6:15053:15066	4582620	0	True				
ANR	4582967	RelationalExpression	attrsAdded < 0		4582620	0		<			
ANR	4582968	Identifier	attrsAdded		4582620	0					
ANR	4582969	PrimaryExpression	0		4582620	1					
ANR	4582970	CompoundStatement		78:23:1591:1591	4582620	1					
ANR	4582971	ReturnStatement	return 0 ;	565:3:15075:15083	4582620	0	True				
ANR	4582972	PrimaryExpression	0		4582620	0					
ANR	4582973	ReturnStatement	return attrsAdded ;	567:2:15091:15108	4582620	1	True				
ANR	4582974	Identifier	attrsAdded		4582620	0					
ANR	4582975	ReturnType	int		4582620	1					
ANR	4582976	Identifier	ClassAdLog :: ExamineTransaction		4582620	2					
ANR	4582977	ParameterList	"const char * key , const char * name , char * & val , ClassAd * & ad"		4582620	3					
ANR	4582978	Parameter	const char * key	486:31:13417:13431	4582620	0	True				
ANR	4582979	ParameterType	const char *		4582620	0					
ANR	4582980	Identifier	key		4582620	1					
ANR	4582981	Parameter	const char * name	486:48:13434:13449	4582620	1	True				
ANR	4582982	ParameterType	const char *		4582620	0					
ANR	4582983	Identifier	name		4582620	1					
ANR	4582984	Parameter	char * & val	486:66:13452:13461	4582620	2	True				
ANR	4582985	ParameterType	char * &		4582620	0					
ANR	4582986	Identifier	val		4582620	1					
ANR	4582987	Parameter	ClassAd * & ad	486:78:13464:13475	4582620	3	True				
ANR	4582988	ParameterType	ClassAd * &		4582620	0					
ANR	4582989	Identifier	ad		4582620	1					
ANR	4582990	CFGEntryNode	ENTRY		4582620		True				
ANR	4582991	CFGExitNode	EXIT		4582620		True				
ANR	4582992	Symbol	val		4582620						
ANR	4582993	Symbol	ad		4582620						
ANR	4582994	Symbol	ValDeleted		4582620						
ANR	4582995	Symbol	NULL		4582620						
ANR	4582996	Symbol	log		4582620						
ANR	4582997	Symbol	false		4582620						
ANR	4582998	Symbol	log -> get_op_type		4582620						
ANR	4582999	Symbol	( ( LogSetAttribute * ) log ) -> get_value		4582620						
ANR	4583000	Symbol	active_transaction		4582620						
ANR	4583001	Symbol	active_transaction -> NextEntry		4582620						
ANR	4583002	Symbol	AdDeleted		4582620						
ANR	4583003	Symbol	* log		4582620						
ANR	4583004	Symbol	lname		4582620						
ANR	4583005	Symbol	active_transaction -> FirstEntry		4582620						
ANR	4583006	Symbol	( ( LogSetAttribute * ) log ) -> get_name		4582620						
ANR	4583007	Symbol	name		4582620						
ANR	4583008	Symbol	true		4582620						
ANR	4583009	Symbol	( ( LogDeleteAttribute * ) log ) -> get_name		4582620						
ANR	4583010	Symbol	ValFound		4582620						
ANR	4583011	Symbol	* active_transaction		4582620						
ANR	4583012	Symbol	attrsAdded		4582620						
ANR	4583013	Symbol	strdup		4582620						
ANR	4583014	Symbol	strcasecmp		4582620						
ANR	4583015	Symbol	key		4582620						
ANR	4583016	Function	ClassAdLog :: getActiveTransaction	571:0:15116:15326							
ANR	4583017	FunctionDef	ClassAdLog :: getActiveTransaction ()		4583016	0					
ANR	4583018	CompoundStatement		573:0:15165:15326	4583016	0					
ANR	4583019	IdentifierDeclStatement	Transaction * ret_value = active_transaction ;	574:1:15168:15211	4583016	0	True				
ANR	4583020	IdentifierDecl	* ret_value = active_transaction		4583016	0					
ANR	4583021	IdentifierDeclType	Transaction *		4583016	0					
ANR	4583022	Identifier	ret_value		4583016	1					
ANR	4583023	AssignmentExpression	* ret_value = active_transaction		4583016	2		=			
ANR	4583024	Identifier	active_transaction		4583016	0					
ANR	4583025	Identifier	active_transaction		4583016	1					
ANR	4583026	ExpressionStatement	active_transaction = NULL	575:1:15214:15239	4583016	1	True				
ANR	4583027	AssignmentExpression	active_transaction = NULL		4583016	0		=			
ANR	4583028	Identifier	active_transaction		4583016	0					
ANR	4583029	Identifier	NULL		4583016	1					
ANR	4583030	ReturnStatement	return ret_value ;	576:1:15308:15324	4583016	2	True				
ANR	4583031	Identifier	ret_value		4583016	0					
ANR	4583032	ReturnType	Transaction *		4583016	1					
ANR	4583033	Identifier	ClassAdLog :: getActiveTransaction		4583016	2					
ANR	4583034	ParameterList			4583016	3					
ANR	4583035	CFGEntryNode	ENTRY		4583016		True				
ANR	4583036	CFGExitNode	EXIT		4583016		True				
ANR	4583037	Symbol	NULL		4583016						
ANR	4583038	Symbol	ret_value		4583016						
ANR	4583039	Symbol	active_transaction		4583016						
ANR	4583040	Function	ClassAdLog :: setActiveTransaction	579:0:15329:15570							
ANR	4583041	FunctionDef	ClassAdLog :: setActiveTransaction (Transaction * & transaction)		4583040	0					
ANR	4583042	CompoundStatement		581:0:15395:15570	4583040	0					
ANR	4583043	IfStatement	if ( active_transaction )		4583040	0					
ANR	4583044	Condition	active_transaction	582:6:15403:15420	4583040	0	True				
ANR	4583045	Identifier	active_transaction		4583040	0					
ANR	4583046	CompoundStatement		2:27:28:28	4583040	1					
ANR	4583047	ReturnStatement	return false ;	583:2:15428:15440	4583040	0	True				
ANR	4583048	Identifier	false		4583040	0					
ANR	4583049	ExpressionStatement	active_transaction = transaction	586:1:15447:15479	4583040	1	True				
ANR	4583050	AssignmentExpression	active_transaction = transaction		4583040	0		=			
ANR	4583051	Identifier	active_transaction		4583040	0					
ANR	4583052	Identifier	transaction		4583040	1					
ANR	4583053	ExpressionStatement	transaction = NULL	588:1:15483:15501	4583040	2	True				
ANR	4583054	AssignmentExpression	transaction = NULL		4583040	0		=			
ANR	4583055	Identifier	transaction		4583040	0					
ANR	4583056	Identifier	NULL		4583040	1					
ANR	4583057	ReturnStatement	return true ;	590:1:15557:15568	4583040	3	True				
ANR	4583058	Identifier	true		4583040	0					
ANR	4583059	ReturnType	bool		4583040	1					
ANR	4583060	Identifier	ClassAdLog :: setActiveTransaction		4583040	2					
ANR	4583061	ParameterList	Transaction * & transaction		4583040	3					
ANR	4583062	Parameter	Transaction * & transaction	580:33:15367:15392	4583040	0	True				
ANR	4583063	ParameterType	Transaction * &		4583040	0					
ANR	4583064	Identifier	transaction		4583040	1					
ANR	4583065	CFGEntryNode	ENTRY		4583040		True				
ANR	4583066	CFGExitNode	EXIT		4583040		True				
ANR	4583067	Symbol	NULL		4583040						
ANR	4583068	Symbol	false		4583040						
ANR	4583069	Symbol	true		4583040						
ANR	4583070	Symbol	active_transaction		4583040						
ANR	4583071	Symbol	transaction		4583040						
ANR	4583072	Function	ClassAdLog :: LogState	594:0:15574:17362							
ANR	4583073	FunctionDef	ClassAdLog :: LogState (FILE * fp)		4583072	0					
ANR	4583074	CompoundStatement		596:0:15610:17362	4583072	0					
ANR	4583075	IdentifierDeclStatement	LogRecord * log = NULL ;	597:1:15613:15632	4583072	0	True				
ANR	4583076	IdentifierDecl	* log = NULL		4583072	0					
ANR	4583077	IdentifierDeclType	LogRecord *		4583072	0					
ANR	4583078	Identifier	log		4583072	1					
ANR	4583079	AssignmentExpression	* log = NULL		4583072	2		=			
ANR	4583080	Identifier	NULL		4583072	0					
ANR	4583081	Identifier	NULL		4583072	1					
ANR	4583082	IdentifierDeclStatement	ClassAd * ad = NULL ;	598:1:15635:15652	4583072	1	True				
ANR	4583083	IdentifierDecl	* ad = NULL		4583072	0					
ANR	4583084	IdentifierDeclType	ClassAd *		4583072	0					
ANR	4583085	Identifier	ad		4583072	1					
ANR	4583086	AssignmentExpression	* ad = NULL		4583072	2		=			
ANR	4583087	Identifier	NULL		4583072	0					
ANR	4583088	Identifier	NULL		4583072	1					
ANR	4583089	IdentifierDeclStatement	ExprTree * expr = NULL ;	599:1:15655:15674	4583072	2	True				
ANR	4583090	IdentifierDecl	* expr = NULL		4583072	0					
ANR	4583091	IdentifierDeclType	ExprTree *		4583072	0					
ANR	4583092	Identifier	expr		4583072	1					
ANR	4583093	AssignmentExpression	* expr = NULL		4583072	2		=			
ANR	4583094	Identifier	NULL		4583072	0					
ANR	4583095	Identifier	NULL		4583072	1					
ANR	4583096	IdentifierDeclStatement	HashKey hashval ;	600:1:15677:15693	4583072	3	True				
ANR	4583097	IdentifierDecl	hashval		4583072	0					
ANR	4583098	IdentifierDeclType	HashKey		4583072	0					
ANR	4583099	Identifier	hashval		4583072	1					
ANR	4583100	IdentifierDeclStatement	MyString key ;	601:1:15696:15708	4583072	4	True				
ANR	4583101	IdentifierDecl	key		4583072	0					
ANR	4583102	IdentifierDeclType	MyString		4583072	0					
ANR	4583103	Identifier	key		4583072	1					
ANR	4583104	IdentifierDeclStatement	const char * attr_name = NULL ;	602:1:15711:15739	4583072	5	True				
ANR	4583105	IdentifierDecl	* attr_name = NULL		4583072	0					
ANR	4583106	IdentifierDeclType	const char *		4583072	0					
ANR	4583107	Identifier	attr_name		4583072	1					
ANR	4583108	AssignmentExpression	* attr_name = NULL		4583072	2		=			
ANR	4583109	Identifier	NULL		4583072	0					
ANR	4583110	Identifier	NULL		4583072	1					
ANR	4583111	ExpressionStatement	"log = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"	605:1:15795:15888	4583072	6	True				
ANR	4583112	AssignmentExpression	"log = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"		4583072	0		=			
ANR	4583113	Identifier	log		4583072	0					
ANR	4583114	Expression	"historical_sequence_number , m_original_log_birthdate"		4583072	1					
ANR	4583115	Identifier	historical_sequence_number		4583072	0					
ANR	4583116	Identifier	m_original_log_birthdate		4583072	1					
ANR	4583117	IfStatement	if ( log -> Write ( fp ) < 0 )		4583072	7					
ANR	4583118	Condition	log -> Write ( fp ) < 0	606:5:15895:15912	4583072	0	True				
ANR	4583119	RelationalExpression	log -> Write ( fp ) < 0		4583072	0		<			
ANR	4583120	CallExpression	log -> Write ( fp )		4583072	0					
ANR	4583121	Callee	log -> Write		4583072	0					
ANR	4583122	PtrMemberAccess	log -> Write		4583072	0					
ANR	4583123	Identifier	log		4583072	0					
ANR	4583124	Identifier	Write		4583072	1					
ANR	4583125	ArgumentList	fp		4583072	1					
ANR	4583126	Argument	fp		4583072	0					
ANR	4583127	Identifier	fp		4583072	0					
ANR	4583128	PrimaryExpression	0		4583072	1					
ANR	4583129	CompoundStatement		11:25:304:304	4583072	1					
ANR	4583130	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	607:2:15919:15981	4583072	0	True				
ANR	4583131	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		4583072	0					
ANR	4583132	Callee	EXCEPT		4583072	0					
ANR	4583133	Identifier	EXCEPT		4583072	0					
ANR	4583134	ArgumentList	"""write to %s failed, errno = %d"""		4583072	1					
ANR	4583135	Argument	"""write to %s failed, errno = %d"""		4583072	0					
ANR	4583136	PrimaryExpression	"""write to %s failed, errno = %d"""		4583072	0					
ANR	4583137	Argument	logFilename ( )		4583072	1					
ANR	4583138	CallExpression	logFilename ( )		4583072	0					
ANR	4583139	Callee	logFilename		4583072	0					
ANR	4583140	Identifier	logFilename		4583072	0					
ANR	4583141	ArgumentList			4583072	1					
ANR	4583142	Argument	errno		4583072	2					
ANR	4583143	Identifier	errno		4583072	0					
ANR	4583144	Statement	delete	609:1:15987:15992	4583072	8	True				
ANR	4583145	ExpressionStatement	log	609:8:15994:15997	4583072	9	True				
ANR	4583146	Identifier	log		4583072	0					
ANR	4583147	ExpressionStatement	table . startIterations ( )	611:1:16001:16024	4583072	10	True				
ANR	4583148	CallExpression	table . startIterations ( )		4583072	0					
ANR	4583149	Callee	table . startIterations		4583072	0					
ANR	4583150	MemberAccess	table . startIterations		4583072	0					
ANR	4583151	Identifier	table		4583072	0					
ANR	4583152	Identifier	startIterations		4583072	1					
ANR	4583153	ArgumentList			4583072	1					
ANR	4583154	WhileStatement	while ( table . iterate ( ad ) == 1 )		4583072	11					
ANR	4583155	Condition	table . iterate ( ad ) == 1	612:7:16033:16054	4583072	0	True				
ANR	4583156	EqualityExpression	table . iterate ( ad ) == 1		4583072	0		==			
ANR	4583157	CallExpression	table . iterate ( ad )		4583072	0					
ANR	4583158	Callee	table . iterate		4583072	0					
ANR	4583159	MemberAccess	table . iterate		4583072	0					
ANR	4583160	Identifier	table		4583072	0					
ANR	4583161	Identifier	iterate		4583072	1					
ANR	4583162	ArgumentList	ad		4583072	1					
ANR	4583163	Argument	ad		4583072	0					
ANR	4583164	Identifier	ad		4583072	0					
ANR	4583165	PrimaryExpression	1		4583072	1					
ANR	4583166	CompoundStatement		17:31:446:446	4583072	1					
ANR	4583167	ExpressionStatement	table . getCurrentKey ( hashval )	613:2:16061:16089	4583072	0	True				
ANR	4583168	CallExpression	table . getCurrentKey ( hashval )		4583072	0					
ANR	4583169	Callee	table . getCurrentKey		4583072	0					
ANR	4583170	MemberAccess	table . getCurrentKey		4583072	0					
ANR	4583171	Identifier	table		4583072	0					
ANR	4583172	Identifier	getCurrentKey		4583072	1					
ANR	4583173	ArgumentList	hashval		4583072	1					
ANR	4583174	Argument	hashval		4583072	0					
ANR	4583175	Identifier	hashval		4583072	0					
ANR	4583176	ExpressionStatement	hashval . sprint ( key )	614:2:16093:16112	4583072	1	True				
ANR	4583177	CallExpression	hashval . sprint ( key )		4583072	0					
ANR	4583178	Callee	hashval . sprint		4583072	0					
ANR	4583179	MemberAccess	hashval . sprint		4583072	0					
ANR	4583180	Identifier	hashval		4583072	0					
ANR	4583181	Identifier	sprint		4583072	1					
ANR	4583182	ArgumentList	key		4583072	1					
ANR	4583183	Argument	key		4583072	0					
ANR	4583184	Identifier	key		4583072	0					
ANR	4583185	ExpressionStatement	"log = new LogNewClassAd ( key . Value ( ) , ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( ) )"	615:2:16116:16198	4583072	2	True				
ANR	4583186	AssignmentExpression	"log = new LogNewClassAd ( key . Value ( ) , ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( ) )"		4583072	0		=			
ANR	4583187	Identifier	log		4583072	0					
ANR	4583188	Expression	"key . Value ( ) , ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( )"		4583072	1					
ANR	4583189	CallExpression	key . Value ( )		4583072	0					
ANR	4583190	Callee	key . Value		4583072	0					
ANR	4583191	MemberAccess	key . Value		4583072	0					
ANR	4583192	Identifier	key		4583072	0					
ANR	4583193	Identifier	Value		4583072	1					
ANR	4583194	ArgumentList			4583072	1					
ANR	4583195	Expression	"ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( )"		4583072	1					
ANR	4583196	CallExpression	ad -> GetMyTypeName ( )		4583072	0					
ANR	4583197	Callee	ad -> GetMyTypeName		4583072	0					
ANR	4583198	PtrMemberAccess	ad -> GetMyTypeName		4583072	0					
ANR	4583199	Identifier	ad		4583072	0					
ANR	4583200	Identifier	GetMyTypeName		4583072	1					
ANR	4583201	ArgumentList			4583072	1					
ANR	4583202	CallExpression	ad -> GetTargetTypeName ( )		4583072	1					
ANR	4583203	Callee	ad -> GetTargetTypeName		4583072	0					
ANR	4583204	PtrMemberAccess	ad -> GetTargetTypeName		4583072	0					
ANR	4583205	Identifier	ad		4583072	0					
ANR	4583206	Identifier	GetTargetTypeName		4583072	1					
ANR	4583207	ArgumentList			4583072	1					
ANR	4583208	IfStatement	if ( log -> Write ( fp ) < 0 )		4583072	3					
ANR	4583209	Condition	log -> Write ( fp ) < 0	616:6:16206:16223	4583072	0	True				
ANR	4583210	RelationalExpression	log -> Write ( fp ) < 0		4583072	0		<			
ANR	4583211	CallExpression	log -> Write ( fp )		4583072	0					
ANR	4583212	Callee	log -> Write		4583072	0					
ANR	4583213	PtrMemberAccess	log -> Write		4583072	0					
ANR	4583214	Identifier	log		4583072	0					
ANR	4583215	Identifier	Write		4583072	1					
ANR	4583216	ArgumentList	fp		4583072	1					
ANR	4583217	Argument	fp		4583072	0					
ANR	4583218	Identifier	fp		4583072	0					
ANR	4583219	PrimaryExpression	0		4583072	1					
ANR	4583220	CompoundStatement		21:26:615:615	4583072	1					
ANR	4583221	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	617:3:16231:16293	4583072	0	True				
ANR	4583222	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		4583072	0					
ANR	4583223	Callee	EXCEPT		4583072	0					
ANR	4583224	Identifier	EXCEPT		4583072	0					
ANR	4583225	ArgumentList	"""write to %s failed, errno = %d"""		4583072	1					
ANR	4583226	Argument	"""write to %s failed, errno = %d"""		4583072	0					
ANR	4583227	PrimaryExpression	"""write to %s failed, errno = %d"""		4583072	0					
ANR	4583228	Argument	logFilename ( )		4583072	1					
ANR	4583229	CallExpression	logFilename ( )		4583072	0					
ANR	4583230	Callee	logFilename		4583072	0					
ANR	4583231	Identifier	logFilename		4583072	0					
ANR	4583232	ArgumentList			4583072	1					
ANR	4583233	Argument	errno		4583072	2					
ANR	4583234	Identifier	errno		4583072	0					
ANR	4583235	Statement	delete	619:2:16301:16306	4583072	4	True				
ANR	4583236	ExpressionStatement	log	619:9:16308:16311	4583072	5	True				
ANR	4583237	Identifier	log		4583072	0					
ANR	4583238	Statement	AttrList	622:2:16432:16439	4583072	6	True				
ANR	4583239	Statement	*	622:11:16441:16441	4583072	7	True				
ANR	4583240	Statement	chain	622:12:16442:16446	4583072	8	True				
ANR	4583241	Statement	=	622:18:16448:16448	4583072	9	True				
ANR	4583242	Statement	dynamic_cast	622:20:16450:16461	4583072	10	True				
ANR	4583243	Statement	<	622:32:16462:16462	4583072	11	True				
ANR	4583244	Statement	AttrList	622:33:16463:16470	4583072	12	True				
ANR	4583245	Statement	*	622:41:16471:16471	4583072	13	True				
ANR	4583246	Statement	>	622:42:16472:16472	4583072	14	True				
ANR	4583247	ExpressionStatement	ad -> GetChainedParentAd ( )	622:43:16473:16499	4583072	15	True				
ANR	4583248	CallExpression	ad -> GetChainedParentAd ( )		4583072	0					
ANR	4583249	Callee	ad -> GetChainedParentAd		4583072	0					
ANR	4583250	PtrMemberAccess	ad -> GetChainedParentAd		4583072	0					
ANR	4583251	Identifier	ad		4583072	0					
ANR	4583252	Identifier	GetChainedParentAd		4583072	1					
ANR	4583253	ArgumentList			4583072	1					
ANR	4583254	ExpressionStatement	ad -> Unchain ( )	623:2:16503:16516	4583072	16	True				
ANR	4583255	CallExpression	ad -> Unchain ( )		4583072	0					
ANR	4583256	Callee	ad -> Unchain		4583072	0					
ANR	4583257	PtrMemberAccess	ad -> Unchain		4583072	0					
ANR	4583258	Identifier	ad		4583072	0					
ANR	4583259	Identifier	Unchain		4583072	1					
ANR	4583260	ArgumentList			4583072	1					
ANR	4583261	ExpressionStatement	ad -> ResetName ( )	624:2:16520:16535	4583072	17	True				
ANR	4583262	CallExpression	ad -> ResetName ( )		4583072	0					
ANR	4583263	Callee	ad -> ResetName		4583072	0					
ANR	4583264	PtrMemberAccess	ad -> ResetName		4583072	0					
ANR	4583265	Identifier	ad		4583072	0					
ANR	4583266	Identifier	ResetName		4583072	1					
ANR	4583267	ArgumentList			4583072	1					
ANR	4583268	ExpressionStatement	attr_name = ad -> NextNameOriginal ( )	625:2:16539:16573	4583072	18	True				
ANR	4583269	AssignmentExpression	attr_name = ad -> NextNameOriginal ( )		4583072	0		=			
ANR	4583270	Identifier	attr_name		4583072	0					
ANR	4583271	CallExpression	ad -> NextNameOriginal ( )		4583072	1					
ANR	4583272	Callee	ad -> NextNameOriginal		4583072	0					
ANR	4583273	PtrMemberAccess	ad -> NextNameOriginal		4583072	0					
ANR	4583274	Identifier	ad		4583072	0					
ANR	4583275	Identifier	NextNameOriginal		4583072	1					
ANR	4583276	ArgumentList			4583072	1					
ANR	4583277	WhileStatement	while ( attr_name )		4583072	19					
ANR	4583278	Condition	attr_name	626:9:16584:16592	4583072	0	True				
ANR	4583279	Identifier	attr_name		4583072	0					
ANR	4583280	CompoundStatement		31:20:984:984	4583072	1					
ANR	4583281	ExpressionStatement	expr = ad -> LookupExpr ( attr_name )	627:3:16600:16632	4583072	0	True				
ANR	4583282	AssignmentExpression	expr = ad -> LookupExpr ( attr_name )		4583072	0		=			
ANR	4583283	Identifier	expr		4583072	0					
ANR	4583284	CallExpression	ad -> LookupExpr ( attr_name )		4583072	1					
ANR	4583285	Callee	ad -> LookupExpr		4583072	0					
ANR	4583286	PtrMemberAccess	ad -> LookupExpr		4583072	0					
ANR	4583287	Identifier	ad		4583072	0					
ANR	4583288	Identifier	LookupExpr		4583072	1					
ANR	4583289	ArgumentList	attr_name		4583072	1					
ANR	4583290	Argument	attr_name		4583072	0					
ANR	4583291	Identifier	attr_name		4583072	0					
ANR	4583292	IfStatement	if ( expr )		4583072	1					
ANR	4583293	Condition	expr	631:7:16789:16792	4583072	0	True				
ANR	4583294	Identifier	expr		4583072	0					
ANR	4583295	CompoundStatement		36:13:1184:1184	4583072	1					
ANR	4583296	ExpressionStatement	"log = new LogSetAttribute ( key . Value ( ) , attr_name , ExprTreeToString ( expr ) )"	632:4:16801:16886	4583072	0	True				
ANR	4583297	AssignmentExpression	"log = new LogSetAttribute ( key . Value ( ) , attr_name , ExprTreeToString ( expr ) )"		4583072	0		=			
ANR	4583298	Identifier	log		4583072	0					
ANR	4583299	Expression	"key . Value ( ) , attr_name , ExprTreeToString ( expr )"		4583072	1					
ANR	4583300	CallExpression	key . Value ( )		4583072	0					
ANR	4583301	Callee	key . Value		4583072	0					
ANR	4583302	MemberAccess	key . Value		4583072	0					
ANR	4583303	Identifier	key		4583072	0					
ANR	4583304	Identifier	Value		4583072	1					
ANR	4583305	ArgumentList			4583072	1					
ANR	4583306	Expression	"attr_name , ExprTreeToString ( expr )"		4583072	1					
ANR	4583307	Identifier	attr_name		4583072	0					
ANR	4583308	CallExpression	ExprTreeToString ( expr )		4583072	1					
ANR	4583309	Callee	ExprTreeToString		4583072	0					
ANR	4583310	Identifier	ExprTreeToString		4583072	0					
ANR	4583311	ArgumentList	expr		4583072	1					
ANR	4583312	Argument	expr		4583072	0					
ANR	4583313	Identifier	expr		4583072	0					
ANR	4583314	IfStatement	if ( log -> Write ( fp ) < 0 )		4583072	1					
ANR	4583315	Condition	log -> Write ( fp ) < 0	634:8:16896:16913	4583072	0	True				
ANR	4583316	RelationalExpression	log -> Write ( fp ) < 0		4583072	0		<			
ANR	4583317	CallExpression	log -> Write ( fp )		4583072	0					
ANR	4583318	Callee	log -> Write		4583072	0					
ANR	4583319	PtrMemberAccess	log -> Write		4583072	0					
ANR	4583320	Identifier	log		4583072	0					
ANR	4583321	Identifier	Write		4583072	1					
ANR	4583322	ArgumentList	fp		4583072	1					
ANR	4583323	Argument	fp		4583072	0					
ANR	4583324	Identifier	fp		4583072	0					
ANR	4583325	PrimaryExpression	0		4583072	1					
ANR	4583326	CompoundStatement		39:28:1305:1305	4583072	1					
ANR	4583327	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	635:5:16923:16994	4583072	0	True				
ANR	4583328	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		4583072	0					
ANR	4583329	Callee	EXCEPT		4583072	0					
ANR	4583330	Identifier	EXCEPT		4583072	0					
ANR	4583331	ArgumentList	"""write to %s failed, errno = %d"""		4583072	1					
ANR	4583332	Argument	"""write to %s failed, errno = %d"""		4583072	0					
ANR	4583333	PrimaryExpression	"""write to %s failed, errno = %d"""		4583072	0					
ANR	4583334	Argument	logFilename ( )		4583072	1					
ANR	4583335	CallExpression	logFilename ( )		4583072	0					
ANR	4583336	Callee	logFilename		4583072	0					
ANR	4583337	Identifier	logFilename		4583072	0					
ANR	4583338	ArgumentList			4583072	1					
ANR	4583339	Argument	errno		4583072	2					
ANR	4583340	Identifier	errno		4583072	0					
ANR	4583341	Statement	delete	638:4:17006:17011	4583072	2	True				
ANR	4583342	ExpressionStatement	log	638:11:17013:17016	4583072	3	True				
ANR	4583343	Identifier	log		4583072	0					
ANR	4583344	ExpressionStatement	attr_name = ad -> NextNameOriginal ( )	640:3:17026:17060	4583072	2	True				
ANR	4583345	AssignmentExpression	attr_name = ad -> NextNameOriginal ( )		4583072	0		=			
ANR	4583346	Identifier	attr_name		4583072	0					
ANR	4583347	CallExpression	ad -> NextNameOriginal ( )		4583072	1					
ANR	4583348	Callee	ad -> NextNameOriginal		4583072	0					
ANR	4583349	PtrMemberAccess	ad -> NextNameOriginal		4583072	0					
ANR	4583350	Identifier	ad		4583072	0					
ANR	4583351	Identifier	NextNameOriginal		4583072	1					
ANR	4583352	ArgumentList			4583072	1					
ANR	4583353	ExpressionStatement	ad -> ChainToAd ( chain )	643:2:17137:17157	4583072	20	True				
ANR	4583354	CallExpression	ad -> ChainToAd ( chain )		4583072	0					
ANR	4583355	Callee	ad -> ChainToAd		4583072	0					
ANR	4583356	PtrMemberAccess	ad -> ChainToAd		4583072	0					
ANR	4583357	Identifier	ad		4583072	0					
ANR	4583358	Identifier	ChainToAd		4583072	1					
ANR	4583359	ArgumentList	chain		4583072	1					
ANR	4583360	Argument	chain		4583072	0					
ANR	4583361	Identifier	chain		4583072	0					
ANR	4583362	IfStatement	if ( fflush ( fp ) != 0 )		4583072	12					
ANR	4583363	Condition	fflush ( fp ) != 0	645:5:17167:17180	4583072	0	True				
ANR	4583364	EqualityExpression	fflush ( fp ) != 0		4583072	0		!=			
ANR	4583365	CallExpression	fflush ( fp )		4583072	0					
ANR	4583366	Callee	fflush		4583072	0					
ANR	4583367	Identifier	fflush		4583072	0					
ANR	4583368	ArgumentList	fp		4583072	1					
ANR	4583369	Argument	fp		4583072	0					
ANR	4583370	Identifier	fp		4583072	0					
ANR	4583371	PrimaryExpression	0		4583072	1					
ANR	4583372	CompoundStatement		50:20:1571:1571	4583072	1					
ANR	4583373	ExpressionStatement	"EXCEPT ( ""fflush of %s failed, errno = %d"" , logFilename ( ) , errno )"	646:3:17187:17250	4583072	0	True				
ANR	4583374	CallExpression	"EXCEPT ( ""fflush of %s failed, errno = %d"" , logFilename ( ) , errno )"		4583072	0					
ANR	4583375	Callee	EXCEPT		4583072	0					
ANR	4583376	Identifier	EXCEPT		4583072	0					
ANR	4583377	ArgumentList	"""fflush of %s failed, errno = %d"""		4583072	1					
ANR	4583378	Argument	"""fflush of %s failed, errno = %d"""		4583072	0					
ANR	4583379	PrimaryExpression	"""fflush of %s failed, errno = %d"""		4583072	0					
ANR	4583380	Argument	logFilename ( )		4583072	1					
ANR	4583381	CallExpression	logFilename ( )		4583072	0					
ANR	4583382	Callee	logFilename		4583072	0					
ANR	4583383	Identifier	logFilename		4583072	0					
ANR	4583384	ArgumentList			4583072	1					
ANR	4583385	Argument	errno		4583072	2					
ANR	4583386	Identifier	errno		4583072	0					
ANR	4583387	IfStatement	if ( condor_fsync ( fileno ( fp ) ) < 0 )		4583072	13					
ANR	4583388	Condition	condor_fsync ( fileno ( fp ) ) < 0	648:5:17260:17287	4583072	0	True				
ANR	4583389	RelationalExpression	condor_fsync ( fileno ( fp ) ) < 0		4583072	0		<			
ANR	4583390	CallExpression	condor_fsync ( fileno ( fp ) )		4583072	0					
ANR	4583391	Callee	condor_fsync		4583072	0					
ANR	4583392	Identifier	condor_fsync		4583072	0					
ANR	4583393	ArgumentList	fileno ( fp )		4583072	1					
ANR	4583394	Argument	fileno ( fp )		4583072	0					
ANR	4583395	CallExpression	fileno ( fp )		4583072	0					
ANR	4583396	Callee	fileno		4583072	0					
ANR	4583397	Identifier	fileno		4583072	0					
ANR	4583398	ArgumentList	fp		4583072	1					
ANR	4583399	Argument	fp		4583072	0					
ANR	4583400	Identifier	fp		4583072	0					
ANR	4583401	PrimaryExpression	0		4583072	1					
ANR	4583402	CompoundStatement		53:35:1679:1679	4583072	1					
ANR	4583403	ExpressionStatement	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"	649:2:17294:17356	4583072	0	True				
ANR	4583404	CallExpression	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"		4583072	0					
ANR	4583405	Callee	EXCEPT		4583072	0					
ANR	4583406	Identifier	EXCEPT		4583072	0					
ANR	4583407	ArgumentList	"""fsync of %s failed, errno = %d"""		4583072	1					
ANR	4583408	Argument	"""fsync of %s failed, errno = %d"""		4583072	0					
ANR	4583409	PrimaryExpression	"""fsync of %s failed, errno = %d"""		4583072	0					
ANR	4583410	Argument	logFilename ( )		4583072	1					
ANR	4583411	CallExpression	logFilename ( )		4583072	0					
ANR	4583412	Callee	logFilename		4583072	0					
ANR	4583413	Identifier	logFilename		4583072	0					
ANR	4583414	ArgumentList			4583072	1					
ANR	4583415	Argument	errno		4583072	2					
ANR	4583416	Identifier	errno		4583072	0					
ANR	4583417	ReturnType	void		4583072	1					
ANR	4583418	Identifier	ClassAdLog :: LogState		4583072	2					
ANR	4583419	ParameterList	FILE * fp		4583072	3					
ANR	4583420	Parameter	FILE * fp	595:21:15600:15607	4583072	0	True				
ANR	4583421	ParameterType	FILE *		4583072	0					
ANR	4583422	Identifier	fp		4583072	1					
ANR	4583423	CFGEntryNode	ENTRY		4583072		True				
ANR	4583424	CFGExitNode	EXIT		4583072		True				
ANR	4583425	Symbol	hashval		4583072						
ANR	4583426	Symbol	fflush		4583072						
ANR	4583427	Symbol	logFilename		4583072						
ANR	4583428	Symbol	log		4583072						
ANR	4583429	Symbol	m_original_log_birthdate		4583072						
ANR	4583430	Symbol	ExprTreeToString		4583072						
ANR	4583431	Symbol	fp		4583072						
ANR	4583432	Symbol	* ad		4583072						
ANR	4583433	Symbol	log -> Write		4583072						
ANR	4583434	Symbol	expr		4583072						
ANR	4583435	Symbol	ad -> NextNameOriginal		4583072						
ANR	4583436	Symbol	key		4583072						
ANR	4583437	Symbol	table		4583072						
ANR	4583438	Symbol	ad -> LookupExpr		4583072						
ANR	4583439	Symbol	errno		4583072						
ANR	4583440	Symbol	chain		4583072						
ANR	4583441	Symbol	NULL		4583072						
ANR	4583442	Symbol	ad		4583072						
ANR	4583443	Symbol	attr_name		4583072						
ANR	4583444	Symbol	ad -> GetTargetTypeName		4583072						
ANR	4583445	Symbol	* log		4583072						
ANR	4583446	Symbol	key . Value		4583072						
ANR	4583447	Symbol	fileno		4583072						
ANR	4583448	Symbol	ad -> GetMyTypeName		4583072						
ANR	4583449	Symbol	condor_fsync		4583072						
ANR	4583450	Symbol	table . iterate		4583072						
ANR	4583451	Symbol	historical_sequence_number		4583072						
ANR	4583452	Function	LogHistoricalSequenceNumber :: LogHistoricalSequenceNumber	653:0:17365:17645							
ANR	4583453	FunctionDef	"LogHistoricalSequenceNumber :: LogHistoricalSequenceNumber (unsigned long historical_sequence_number_arg , time_t timestamp_arg)"		4583452	0					
ANR	4583454	CompoundStatement		654:0:17489:17645	4583452	0					
ANR	4583455	ExpressionStatement	op_type = CondorLogOp_LogHistoricalSequenceNumber	655:1:17492:17541	4583452	0	True				
ANR	4583456	AssignmentExpression	op_type = CondorLogOp_LogHistoricalSequenceNumber		4583452	0		=			
ANR	4583457	Identifier	op_type		4583452	0					
ANR	4583458	Identifier	CondorLogOp_LogHistoricalSequenceNumber		4583452	1					
ANR	4583459	ExpressionStatement	this -> historical_sequence_number = historical_sequence_number_arg	656:1:17544:17609	4583452	1	True				
ANR	4583460	AssignmentExpression	this -> historical_sequence_number = historical_sequence_number_arg		4583452	0		=			
ANR	4583461	PtrMemberAccess	this -> historical_sequence_number		4583452	0					
ANR	4583462	Identifier	this		4583452	0					
ANR	4583463	Identifier	historical_sequence_number		4583452	1					
ANR	4583464	Identifier	historical_sequence_number_arg		4583452	1					
ANR	4583465	ExpressionStatement	this -> timestamp = timestamp_arg	657:1:17612:17643	4583452	2	True				
ANR	4583466	AssignmentExpression	this -> timestamp = timestamp_arg		4583452	0		=			
ANR	4583467	PtrMemberAccess	this -> timestamp		4583452	0					
ANR	4583468	Identifier	this		4583452	0					
ANR	4583469	Identifier	timestamp		4583452	1					
ANR	4583470	Identifier	timestamp_arg		4583452	1					
ANR	4583471	Identifier	LogHistoricalSequenceNumber :: LogHistoricalSequenceNumber		4583452	1					
ANR	4583472	ParameterList	"unsigned long historical_sequence_number_arg , time_t timestamp_arg"		4583452	2					
ANR	4583473	Parameter	unsigned long historical_sequence_number_arg	653:57:17422:17465	4583452	0	True				
ANR	4583474	ParameterType	unsigned long		4583452	0					
ANR	4583475	Identifier	historical_sequence_number_arg		4583452	1					
ANR	4583476	Parameter	time_t timestamp_arg	653:102:17467:17486	4583452	1	True				
ANR	4583477	ParameterType	time_t		4583452	0					
ANR	4583478	Identifier	timestamp_arg		4583452	1					
ANR	4583479	CFGEntryNode	ENTRY		4583452		True				
ANR	4583480	CFGExitNode	EXIT		4583452		True				
ANR	4583481	Symbol	* this		4583452						
ANR	4583482	Symbol	timestamp_arg		4583452						
ANR	4583483	Symbol	historical_sequence_number_arg		4583452						
ANR	4583484	Symbol	this		4583452						
ANR	4583485	Symbol	CondorLogOp_LogHistoricalSequenceNumber		4583452						
ANR	4583486	Symbol	this -> timestamp		4583452						
ANR	4583487	Symbol	op_type		4583452						
ANR	4583488	Symbol	this -> historical_sequence_number		4583452						
ANR	4583489	Function	LogHistoricalSequenceNumber :: ReadBody	668:0:17909:18359							
ANR	4583490	FunctionDef	LogHistoricalSequenceNumber :: ReadBody (FILE * fp)		4583489	0					
ANR	4583491	CompoundStatement		670:0:17961:18359	4583489	0					
ANR	4583492	IdentifierDeclStatement	"int rval , rval1 ;"	671:1:17964:17978	4583489	0	True				
ANR	4583493	IdentifierDecl	rval		4583489	0					
ANR	4583494	IdentifierDeclType	int		4583489	0					
ANR	4583495	Identifier	rval		4583489	1					
ANR	4583496	IdentifierDecl	rval1		4583489	1					
ANR	4583497	IdentifierDeclType	int		4583489	0					
ANR	4583498	Identifier	rval1		4583489	1					
ANR	4583499	IdentifierDeclStatement	char * buf = NULL ;	672:1:17981:17997	4583489	1	True				
ANR	4583500	IdentifierDecl	* buf = NULL		4583489	0					
ANR	4583501	IdentifierDeclType	char *		4583489	0					
ANR	4583502	Identifier	buf		4583489	1					
ANR	4583503	AssignmentExpression	* buf = NULL		4583489	2		=			
ANR	4583504	Identifier	NULL		4583489	0					
ANR	4583505	Identifier	NULL		4583489	1					
ANR	4583506	ExpressionStatement	"rval = readword ( fp , buf )"	673:1:18000:18024	4583489	2	True				
ANR	4583507	AssignmentExpression	"rval = readword ( fp , buf )"		4583489	0		=			
ANR	4583508	Identifier	rval		4583489	0					
ANR	4583509	CallExpression	"readword ( fp , buf )"		4583489	1					
ANR	4583510	Callee	readword		4583489	0					
ANR	4583511	Identifier	readword		4583489	0					
ANR	4583512	ArgumentList	fp		4583489	1					
ANR	4583513	Argument	fp		4583489	0					
ANR	4583514	Identifier	fp		4583489	0					
ANR	4583515	Argument	buf		4583489	1					
ANR	4583516	Identifier	buf		4583489	0					
ANR	4583517	IfStatement	if ( rval < 0 )		4583489	3					
ANR	4583518	Condition	rval < 0	674:5:18031:18038	4583489	0	True				
ANR	4583519	RelationalExpression	rval < 0		4583489	0		<			
ANR	4583520	Identifier	rval		4583489	0					
ANR	4583521	PrimaryExpression	0		4583489	1					
ANR	4583522	ReturnStatement	return rval ;	674:15:18041:18052	4583489	1	True				
ANR	4583523	Identifier	rval		4583489	0					
ANR	4583524	ExpressionStatement	"sscanf ( buf , ""%lu"" , & historical_sequence_number )"	675:1:18055:18100	4583489	4	True				
ANR	4583525	CallExpression	"sscanf ( buf , ""%lu"" , & historical_sequence_number )"		4583489	0					
ANR	4583526	Callee	sscanf		4583489	0					
ANR	4583527	Identifier	sscanf		4583489	0					
ANR	4583528	ArgumentList	buf		4583489	1					
ANR	4583529	Argument	buf		4583489	0					
ANR	4583530	Identifier	buf		4583489	0					
ANR	4583531	Argument	"""%lu"""		4583489	1					
ANR	4583532	PrimaryExpression	"""%lu"""		4583489	0					
ANR	4583533	Argument	& historical_sequence_number		4583489	2					
ANR	4583534	UnaryOperationExpression	& historical_sequence_number		4583489	0					
ANR	4583535	UnaryOperator	&		4583489	0					
ANR	4583536	Identifier	historical_sequence_number		4583489	1					
ANR	4583537	ExpressionStatement	free ( buf )	676:1:18103:18112	4583489	5	True				
ANR	4583538	CallExpression	free ( buf )		4583489	0					
ANR	4583539	Callee	free		4583489	0					
ANR	4583540	Identifier	free		4583489	0					
ANR	4583541	ArgumentList	buf		4583489	1					
ANR	4583542	Argument	buf		4583489	0					
ANR	4583543	Identifier	buf		4583489	0					
ANR	4583544	ExpressionStatement	"rval1 = readword ( fp , buf )"	678:1:18116:18141	4583489	6	True				
ANR	4583545	AssignmentExpression	"rval1 = readword ( fp , buf )"		4583489	0		=			
ANR	4583546	Identifier	rval1		4583489	0					
ANR	4583547	CallExpression	"readword ( fp , buf )"		4583489	1					
ANR	4583548	Callee	readword		4583489	0					
ANR	4583549	Identifier	readword		4583489	0					
ANR	4583550	ArgumentList	fp		4583489	1					
ANR	4583551	Argument	fp		4583489	0					
ANR	4583552	Identifier	fp		4583489	0					
ANR	4583553	Argument	buf		4583489	1					
ANR	4583554	Identifier	buf		4583489	0					
ANR	4583555	IfStatement	if ( rval1 < 0 )		4583489	7					
ANR	4583556	Condition	rval1 < 0	680:5:18197:18205	4583489	0	True				
ANR	4583557	RelationalExpression	rval1 < 0		4583489	0		<			
ANR	4583558	Identifier	rval1		4583489	0					
ANR	4583559	PrimaryExpression	0		4583489	1					
ANR	4583560	ReturnStatement	return rval1 ;	680:16:18208:18220	4583489	1	True				
ANR	4583561	Identifier	rval1		4583489	0					
ANR	4583562	ExpressionStatement	free ( buf )	681:1:18224:18233	4583489	8	True				
ANR	4583563	CallExpression	free ( buf )		4583489	0					
ANR	4583564	Callee	free		4583489	0					
ANR	4583565	Identifier	free		4583489	0					
ANR	4583566	ArgumentList	buf		4583489	1					
ANR	4583567	Argument	buf		4583489	0					
ANR	4583568	Identifier	buf		4583489	0					
ANR	4583569	ExpressionStatement	"rval1 = readword ( fp , buf )"	683:1:18237:18262	4583489	9	True				
ANR	4583570	AssignmentExpression	"rval1 = readword ( fp , buf )"		4583489	0		=			
ANR	4583571	Identifier	rval1		4583489	0					
ANR	4583572	CallExpression	"readword ( fp , buf )"		4583489	1					
ANR	4583573	Callee	readword		4583489	0					
ANR	4583574	Identifier	readword		4583489	0					
ANR	4583575	ArgumentList	fp		4583489	1					
ANR	4583576	Argument	fp		4583489	0					
ANR	4583577	Identifier	fp		4583489	0					
ANR	4583578	Argument	buf		4583489	1					
ANR	4583579	Identifier	buf		4583489	0					
ANR	4583580	IfStatement	if ( rval1 < 0 )		4583489	10					
ANR	4583581	Condition	rval1 < 0	684:5:18269:18277	4583489	0	True				
ANR	4583582	RelationalExpression	rval1 < 0		4583489	0		<			
ANR	4583583	Identifier	rval1		4583489	0					
ANR	4583584	PrimaryExpression	0		4583489	1					
ANR	4583585	ReturnStatement	return rval1 ;	684:16:18280:18292	4583489	1	True				
ANR	4583586	Identifier	rval1		4583489	0					
ANR	4583587	ExpressionStatement	"sscanf ( buf , ""%lu"" , & timestamp )"	685:1:18295:18323	4583489	11	True				
ANR	4583588	CallExpression	"sscanf ( buf , ""%lu"" , & timestamp )"		4583489	0					
ANR	4583589	Callee	sscanf		4583489	0					
ANR	4583590	Identifier	sscanf		4583489	0					
ANR	4583591	ArgumentList	buf		4583489	1					
ANR	4583592	Argument	buf		4583489	0					
ANR	4583593	Identifier	buf		4583489	0					
ANR	4583594	Argument	"""%lu"""		4583489	1					
ANR	4583595	PrimaryExpression	"""%lu"""		4583489	0					
ANR	4583596	Argument	& timestamp		4583489	2					
ANR	4583597	UnaryOperationExpression	& timestamp		4583489	0					
ANR	4583598	UnaryOperator	&		4583489	0					
ANR	4583599	Identifier	timestamp		4583489	1					
ANR	4583600	ExpressionStatement	free ( buf )	686:1:18326:18335	4583489	12	True				
ANR	4583601	CallExpression	free ( buf )		4583489	0					
ANR	4583602	Callee	free		4583489	0					
ANR	4583603	Identifier	free		4583489	0					
ANR	4583604	ArgumentList	buf		4583489	1					
ANR	4583605	Argument	buf		4583489	0					
ANR	4583606	Identifier	buf		4583489	0					
ANR	4583607	ReturnStatement	return rval + rval1 ;	687:1:18338:18357	4583489	13	True				
ANR	4583608	AdditiveExpression	rval + rval1		4583489	0		+			
ANR	4583609	Identifier	rval		4583489	0					
ANR	4583610	Identifier	rval1		4583489	1					
ANR	4583611	ReturnType	int		4583489	1					
ANR	4583612	Identifier	LogHistoricalSequenceNumber :: ReadBody		4583489	2					
ANR	4583613	ParameterList	FILE * fp		4583489	3					
ANR	4583614	Parameter	FILE * fp	669:38:17951:17958	4583489	0	True				
ANR	4583615	ParameterType	FILE *		4583489	0					
ANR	4583616	Identifier	fp		4583489	1					
ANR	4583617	CFGEntryNode	ENTRY		4583489		True				
ANR	4583618	CFGExitNode	EXIT		4583489		True				
ANR	4583619	Symbol	buf		4583489						
ANR	4583620	Symbol	NULL		4583489						
ANR	4583621	Symbol	& timestamp		4583489						
ANR	4583622	Symbol	fp		4583489						
ANR	4583623	Symbol	rval		4583489						
ANR	4583624	Symbol	readword		4583489						
ANR	4583625	Symbol	& historical_sequence_number		4583489						
ANR	4583626	Symbol	rval1		4583489						
ANR	4583627	Function	LogHistoricalSequenceNumber :: WriteBody	690:0:18362:18606							
ANR	4583628	FunctionDef	LogHistoricalSequenceNumber :: WriteBody (FILE * fp)		4583627	0					
ANR	4583629	CompoundStatement		692:0:18415:18606	4583627	0					
ANR	4583630	IdentifierDeclStatement	char buf [ 100 ] ;	693:1:18418:18431	4583627	0	True				
ANR	4583631	IdentifierDecl	buf [ 100 ]		4583627	0					
ANR	4583632	IdentifierDeclType	char [ 100 ]		4583627	0					
ANR	4583633	Identifier	buf		4583627	1					
ANR	4583634	PrimaryExpression	100		4583627	2					
ANR	4583635	ExpressionStatement	"snprintf ( buf , 100 , ""%lu CreationTimestamp %lu"" , historical_sequence_number , timestamp )"	694:1:18434:18519	4583627	1	True				
ANR	4583636	CallExpression	"snprintf ( buf , 100 , ""%lu CreationTimestamp %lu"" , historical_sequence_number , timestamp )"		4583627	0					
ANR	4583637	Callee	snprintf		4583627	0					
ANR	4583638	Identifier	snprintf		4583627	0					
ANR	4583639	ArgumentList	buf		4583627	1					
ANR	4583640	Argument	buf		4583627	0					
ANR	4583641	Identifier	buf		4583627	0					
ANR	4583642	Argument	100		4583627	1					
ANR	4583643	PrimaryExpression	100		4583627	0					
ANR	4583644	Argument	"""%lu CreationTimestamp %lu"""		4583627	2					
ANR	4583645	PrimaryExpression	"""%lu CreationTimestamp %lu"""		4583627	0					
ANR	4583646	Argument	historical_sequence_number		4583627	3					
ANR	4583647	Identifier	historical_sequence_number		4583627	0					
ANR	4583648	Argument	timestamp		4583627	4					
ANR	4583649	Identifier	timestamp		4583627	0					
ANR	4583650	IdentifierDeclStatement	int len = strlen ( buf ) ;	696:1:18522:18543	4583627	2	True				
ANR	4583651	IdentifierDecl	len = strlen ( buf )		4583627	0					
ANR	4583652	IdentifierDeclType	int		4583627	0					
ANR	4583653	Identifier	len		4583627	1					
ANR	4583654	AssignmentExpression	len = strlen ( buf )		4583627	2		=			
ANR	4583655	Identifier	len		4583627	0					
ANR	4583656	CallExpression	strlen ( buf )		4583627	1					
ANR	4583657	Callee	strlen		4583627	0					
ANR	4583658	Identifier	strlen		4583627	0					
ANR	4583659	ArgumentList	buf		4583627	1					
ANR	4583660	Argument	buf		4583627	0					
ANR	4583661	Identifier	buf		4583627	0					
ANR	4583662	ReturnStatement	"return ( fwrite ( buf , 1 , len , fp ) < ( unsigned ) len ) ? - 1 : len ;"	697:1:18546:18604	4583627	3	True				
ANR	4583663	ConditionalExpression	"( fwrite ( buf , 1 , len , fp ) < ( unsigned ) len ) ? - 1 : len"		4583627	0					
ANR	4583664	Condition	"fwrite ( buf , 1 , len , fp ) < ( unsigned ) len"		4583627	0					
ANR	4583665	RelationalExpression	"fwrite ( buf , 1 , len , fp ) < ( unsigned ) len"		4583627	0		<			
ANR	4583666	CallExpression	"fwrite ( buf , 1 , len , fp )"		4583627	0					
ANR	4583667	Callee	fwrite		4583627	0					
ANR	4583668	Identifier	fwrite		4583627	0					
ANR	4583669	ArgumentList	buf		4583627	1					
ANR	4583670	Argument	buf		4583627	0					
ANR	4583671	Identifier	buf		4583627	0					
ANR	4583672	Argument	1		4583627	1					
ANR	4583673	PrimaryExpression	1		4583627	0					
ANR	4583674	Argument	len		4583627	2					
ANR	4583675	Identifier	len		4583627	0					
ANR	4583676	Argument	fp		4583627	3					
ANR	4583677	Identifier	fp		4583627	0					
ANR	4583678	CastExpression	( unsigned ) len		4583627	1					
ANR	4583679	CastTarget	unsigned		4583627	0					
ANR	4583680	Identifier	len		4583627	1					
ANR	4583681	UnaryOperationExpression	- 1		4583627	1					
ANR	4583682	UnaryOperator	-		4583627	0					
ANR	4583683	PrimaryExpression	1		4583627	1					
ANR	4583684	Identifier	len		4583627	2					
ANR	4583685	ReturnType	int		4583627	1					
ANR	4583686	Identifier	LogHistoricalSequenceNumber :: WriteBody		4583627	2					
ANR	4583687	ParameterList	FILE * fp		4583627	3					
ANR	4583688	Parameter	FILE * fp	691:39:18405:18412	4583627	0	True				
ANR	4583689	ParameterType	FILE *		4583627	0					
ANR	4583690	Identifier	fp		4583627	1					
ANR	4583691	CFGEntryNode	ENTRY		4583627		True				
ANR	4583692	CFGExitNode	EXIT		4583627		True				
ANR	4583693	Symbol	strlen		4583627						
ANR	4583694	Symbol	buf		4583627						
ANR	4583695	Symbol	len		4583627						
ANR	4583696	Symbol	fwrite		4583627						
ANR	4583697	Symbol	fp		4583627						
ANR	4583698	Symbol	historical_sequence_number		4583627						
ANR	4583699	Symbol	timestamp		4583627						
ANR	4583700	Function	LogNewClassAd :: LogNewClassAd	700:0:18609:18784							
ANR	4583701	FunctionDef	"LogNewClassAd :: LogNewClassAd (const char * k , const char * m , const char * t)"		4583700	0					
ANR	4583702	CompoundStatement		701:0:18683:18784	4583700	0					
ANR	4583703	ExpressionStatement	op_type = CondorLogOp_NewClassAd	702:1:18686:18718	4583700	0	True				
ANR	4583704	AssignmentExpression	op_type = CondorLogOp_NewClassAd		4583700	0		=			
ANR	4583705	Identifier	op_type		4583700	0					
ANR	4583706	Identifier	CondorLogOp_NewClassAd		4583700	1					
ANR	4583707	ExpressionStatement	key = strdup ( k )	703:1:18721:18736	4583700	1	True				
ANR	4583708	AssignmentExpression	key = strdup ( k )		4583700	0		=			
ANR	4583709	Identifier	key		4583700	0					
ANR	4583710	CallExpression	strdup ( k )		4583700	1					
ANR	4583711	Callee	strdup		4583700	0					
ANR	4583712	Identifier	strdup		4583700	0					
ANR	4583713	ArgumentList	k		4583700	1					
ANR	4583714	Argument	k		4583700	0					
ANR	4583715	Identifier	k		4583700	0					
ANR	4583716	ExpressionStatement	mytype = strdup ( m )	704:1:18739:18757	4583700	2	True				
ANR	4583717	AssignmentExpression	mytype = strdup ( m )		4583700	0		=			
ANR	4583718	Identifier	mytype		4583700	0					
ANR	4583719	CallExpression	strdup ( m )		4583700	1					
ANR	4583720	Callee	strdup		4583700	0					
ANR	4583721	Identifier	strdup		4583700	0					
ANR	4583722	ArgumentList	m		4583700	1					
ANR	4583723	Argument	m		4583700	0					
ANR	4583724	Identifier	m		4583700	0					
ANR	4583725	ExpressionStatement	targettype = strdup ( t )	705:1:18760:18782	4583700	3	True				
ANR	4583726	AssignmentExpression	targettype = strdup ( t )		4583700	0		=			
ANR	4583727	Identifier	targettype		4583700	0					
ANR	4583728	CallExpression	strdup ( t )		4583700	1					
ANR	4583729	Callee	strdup		4583700	0					
ANR	4583730	Identifier	strdup		4583700	0					
ANR	4583731	ArgumentList	t		4583700	1					
ANR	4583732	Argument	t		4583700	0					
ANR	4583733	Identifier	t		4583700	0					
ANR	4583734	Identifier	LogNewClassAd :: LogNewClassAd		4583700	1					
ANR	4583735	ParameterList	"const char * k , const char * m , const char * t"		4583700	2					
ANR	4583736	Parameter	const char * k	700:29:18638:18650	4583700	0	True				
ANR	4583737	ParameterType	const char *		4583700	0					
ANR	4583738	Identifier	k		4583700	1					
ANR	4583739	Parameter	const char * m	700:44:18653:18665	4583700	1	True				
ANR	4583740	ParameterType	const char *		4583700	0					
ANR	4583741	Identifier	m		4583700	1					
ANR	4583742	Parameter	const char * t	700:59:18668:18680	4583700	2	True				
ANR	4583743	ParameterType	const char *		4583700	0					
ANR	4583744	Identifier	t		4583700	1					
ANR	4583745	CFGEntryNode	ENTRY		4583700		True				
ANR	4583746	CFGExitNode	EXIT		4583700		True				
ANR	4583747	Symbol	CondorLogOp_NewClassAd		4583700						
ANR	4583748	Symbol	t		4583700						
ANR	4583749	Symbol	targettype		4583700						
ANR	4583750	Symbol	mytype		4583700						
ANR	4583751	Symbol	k		4583700						
ANR	4583752	Symbol	op_type		4583700						
ANR	4583753	Symbol	strdup		4583700						
ANR	4583754	Symbol	m		4583700						
ANR	4583755	Symbol	key		4583700						
ANR	4583756	Function	LogNewClassAd :: ~LogNewClassAd	708:0:18787:18867							
ANR	4583757	FunctionDef	LogNewClassAd :: ~LogNewClassAd ()		4583756	0					
ANR	4583758	CompoundStatement		709:0:18819:18867	4583756	0					
ANR	4583759	ExpressionStatement	free ( key )	710:1:18822:18831	4583756	0	True				
ANR	4583760	CallExpression	free ( key )		4583756	0					
ANR	4583761	Callee	free		4583756	0					
ANR	4583762	Identifier	free		4583756	0					
ANR	4583763	ArgumentList	key		4583756	1					
ANR	4583764	Argument	key		4583756	0					
ANR	4583765	Identifier	key		4583756	0					
ANR	4583766	ExpressionStatement	free ( mytype )	711:1:18834:18846	4583756	1	True				
ANR	4583767	CallExpression	free ( mytype )		4583756	0					
ANR	4583768	Callee	free		4583756	0					
ANR	4583769	Identifier	free		4583756	0					
ANR	4583770	ArgumentList	mytype		4583756	1					
ANR	4583771	Argument	mytype		4583756	0					
ANR	4583772	Identifier	mytype		4583756	0					
ANR	4583773	ExpressionStatement	free ( targettype )	712:1:18849:18865	4583756	2	True				
ANR	4583774	CallExpression	free ( targettype )		4583756	0					
ANR	4583775	Callee	free		4583756	0					
ANR	4583776	Identifier	free		4583756	0					
ANR	4583777	ArgumentList	targettype		4583756	1					
ANR	4583778	Argument	targettype		4583756	0					
ANR	4583779	Identifier	targettype		4583756	0					
ANR	4583780	Identifier	LogNewClassAd :: ~LogNewClassAd		4583756	1					
ANR	4583781	ParameterList			4583756	2					
ANR	4583782	CFGEntryNode	ENTRY		4583756		True				
ANR	4583783	CFGExitNode	EXIT		4583756		True				
ANR	4583784	Symbol	targettype		4583756						
ANR	4583785	Symbol	mytype		4583756						
ANR	4583786	Symbol	key		4583756						
ANR	4583787	Function	LogNewClassAd :: Play	715:0:18870:19224							
ANR	4583788	FunctionDef	LogNewClassAd :: Play (void * data_structure)		4583787	0					
ANR	4583789	CompoundStatement		717:0:18916:19224	4583787	0					
ANR	4583790	IdentifierDeclStatement	int result ;	718:1:18919:18929	4583787	0	True				
ANR	4583791	IdentifierDecl	result		4583787	0					
ANR	4583792	IdentifierDeclType	int		4583787	0					
ANR	4583793	Identifier	result		4583787	1					
ANR	4583794	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	719:1:18932:18992	4583787	1	True				
ANR	4583795	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		4583787	0					
ANR	4583796	IdentifierDeclType	ClassAdHashTable *		4583787	0					
ANR	4583797	Identifier	table		4583787	1					
ANR	4583798	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		4583787	2		=			
ANR	4583799	Identifier	table		4583787	0					
ANR	4583800	CastExpression	( ClassAdHashTable * ) data_structure		4583787	1					
ANR	4583801	CastTarget	ClassAdHashTable *		4583787	0					
ANR	4583802	Identifier	data_structure		4583787	1					
ANR	4583803	IdentifierDeclStatement	ClassAd * ad = new ClassAd ( ) ;	720:1:18995:19022	4583787	2	True				
ANR	4583804	IdentifierDecl	* ad = new ClassAd ( )		4583787	0					
ANR	4583805	IdentifierDeclType	ClassAd *		4583787	0					
ANR	4583806	Identifier	ad		4583787	1					
ANR	4583807	AssignmentExpression	* ad = new ClassAd ( )		4583787	2		=			
ANR	4583808	Identifier	ad		4583787	0					
ANR	4583809	UnaryExpression	new ClassAd ( )		4583787	1					
ANR	4583810	ExpressionStatement	ad -> SetMyTypeName ( mytype )	721:1:19025:19050	4583787	3	True				
ANR	4583811	CallExpression	ad -> SetMyTypeName ( mytype )		4583787	0					
ANR	4583812	Callee	ad -> SetMyTypeName		4583787	0					
ANR	4583813	PtrMemberAccess	ad -> SetMyTypeName		4583787	0					
ANR	4583814	Identifier	ad		4583787	0					
ANR	4583815	Identifier	SetMyTypeName		4583787	1					
ANR	4583816	ArgumentList	mytype		4583787	1					
ANR	4583817	Argument	mytype		4583787	0					
ANR	4583818	Identifier	mytype		4583787	0					
ANR	4583819	ExpressionStatement	ad -> SetTargetTypeName ( targettype )	722:1:19053:19086	4583787	4	True				
ANR	4583820	CallExpression	ad -> SetTargetTypeName ( targettype )		4583787	0					
ANR	4583821	Callee	ad -> SetTargetTypeName		4583787	0					
ANR	4583822	PtrMemberAccess	ad -> SetTargetTypeName		4583787	0					
ANR	4583823	Identifier	ad		4583787	0					
ANR	4583824	Identifier	SetTargetTypeName		4583787	1					
ANR	4583825	ArgumentList	targettype		4583787	1					
ANR	4583826	Argument	targettype		4583787	0					
ANR	4583827	Identifier	targettype		4583787	0					
ANR	4583828	ExpressionStatement	"result = table -> insert ( HashKey ( key ) , ad )"	723:1:19089:19129	4583787	5	True				
ANR	4583829	AssignmentExpression	"result = table -> insert ( HashKey ( key ) , ad )"		4583787	0		=			
ANR	4583830	Identifier	result		4583787	0					
ANR	4583831	CallExpression	"table -> insert ( HashKey ( key ) , ad )"		4583787	1					
ANR	4583832	Callee	table -> insert		4583787	0					
ANR	4583833	PtrMemberAccess	table -> insert		4583787	0					
ANR	4583834	Identifier	table		4583787	0					
ANR	4583835	Identifier	insert		4583787	1					
ANR	4583836	ArgumentList	HashKey ( key )		4583787	1					
ANR	4583837	Argument	HashKey ( key )		4583787	0					
ANR	4583838	CallExpression	HashKey ( key )		4583787	0					
ANR	4583839	Callee	HashKey		4583787	0					
ANR	4583840	Identifier	HashKey		4583787	0					
ANR	4583841	ArgumentList	key		4583787	1					
ANR	4583842	Argument	key		4583787	0					
ANR	4583843	Identifier	key		4583787	0					
ANR	4583844	Argument	ad		4583787	1					
ANR	4583845	Identifier	ad		4583787	0					
ANR	4583846	ExpressionStatement	ClassAdLogPluginManager :: NewClassAd ( key )	726:1:19158:19198	4583787	6	True				
ANR	4583847	CallExpression	ClassAdLogPluginManager :: NewClassAd ( key )		4583787	0					
ANR	4583848	Callee	ClassAdLogPluginManager :: NewClassAd		4583787	0					
ANR	4583849	Identifier	ClassAdLogPluginManager :: NewClassAd		4583787	0					
ANR	4583850	ArgumentList	key		4583787	1					
ANR	4583851	Argument	key		4583787	0					
ANR	4583852	Identifier	key		4583787	0					
ANR	4583853	ReturnStatement	return result ;	729:1:19209:19222	4583787	7	True				
ANR	4583854	Identifier	result		4583787	0					
ANR	4583855	ReturnType	int		4583787	1					
ANR	4583856	Identifier	LogNewClassAd :: Play		4583787	2					
ANR	4583857	ParameterList	void * data_structure		4583787	3					
ANR	4583858	Parameter	void * data_structure	716:20:18894:18913	4583787	0	True				
ANR	4583859	ParameterType	void *		4583787	0					
ANR	4583860	Identifier	data_structure		4583787	1					
ANR	4583861	CFGEntryNode	ENTRY		4583787		True				
ANR	4583862	CFGExitNode	EXIT		4583787		True				
ANR	4583863	Symbol	result		4583787						
ANR	4583864	Symbol	data_structure		4583787						
ANR	4583865	Symbol	ad		4583787						
ANR	4583866	Symbol	targettype		4583787						
ANR	4583867	Symbol	table -> insert		4583787						
ANR	4583868	Symbol	mytype		4583787						
ANR	4583869	Symbol	* table		4583787						
ANR	4583870	Symbol	HashKey		4583787						
ANR	4583871	Symbol	table		4583787						
ANR	4583872	Symbol	key		4583787						
ANR	4583873	Function	LogNewClassAd :: ReadBody	732:0:19227:19816							
ANR	4583874	FunctionDef	LogNewClassAd :: ReadBody (FILE * fp)		4583873	0					
ANR	4583875	CompoundStatement		734:0:19265:19816	4583873	0					
ANR	4583876	IdentifierDeclStatement	"int rval , rval1 ;"	735:1:19268:19283	4583873	0	True				
ANR	4583877	IdentifierDecl	rval		4583873	0					
ANR	4583878	IdentifierDeclType	int		4583873	0					
ANR	4583879	Identifier	rval		4583873	1					
ANR	4583880	IdentifierDecl	rval1		4583873	1					
ANR	4583881	IdentifierDeclType	int		4583873	0					
ANR	4583882	Identifier	rval1		4583873	1					
ANR	4583883	ExpressionStatement	free ( key )	736:1:19286:19295	4583873	1	True				
ANR	4583884	CallExpression	free ( key )		4583873	0					
ANR	4583885	Callee	free		4583873	0					
ANR	4583886	Identifier	free		4583873	0					
ANR	4583887	ArgumentList	key		4583873	1					
ANR	4583888	Argument	key		4583873	0					
ANR	4583889	Identifier	key		4583873	0					
ANR	4583890	ExpressionStatement	"rval = readword ( fp , key )"	737:1:19298:19322	4583873	2	True				
ANR	4583891	AssignmentExpression	"rval = readword ( fp , key )"		4583873	0		=			
ANR	4583892	Identifier	rval		4583873	0					
ANR	4583893	CallExpression	"readword ( fp , key )"		4583873	1					
ANR	4583894	Callee	readword		4583873	0					
ANR	4583895	Identifier	readword		4583873	0					
ANR	4583896	ArgumentList	fp		4583873	1					
ANR	4583897	Argument	fp		4583873	0					
ANR	4583898	Identifier	fp		4583873	0					
ANR	4583899	Argument	key		4583873	1					
ANR	4583900	Identifier	key		4583873	0					
ANR	4583901	IfStatement	if ( rval < 0 )		4583873	3					
ANR	4583902	Condition	rval < 0	738:5:19329:19336	4583873	0	True				
ANR	4583903	RelationalExpression	rval < 0		4583873	0		<			
ANR	4583904	Identifier	rval		4583873	0					
ANR	4583905	PrimaryExpression	0		4583873	1					
ANR	4583906	ReturnStatement	return rval ;	738:15:19339:19350	4583873	1	True				
ANR	4583907	Identifier	rval		4583873	0					
ANR	4583908	ExpressionStatement	free ( mytype )	739:1:19353:19365	4583873	4	True				
ANR	4583909	CallExpression	free ( mytype )		4583873	0					
ANR	4583910	Callee	free		4583873	0					
ANR	4583911	Identifier	free		4583873	0					
ANR	4583912	ArgumentList	mytype		4583873	1					
ANR	4583913	Argument	mytype		4583873	0					
ANR	4583914	Identifier	mytype		4583873	0					
ANR	4583915	ExpressionStatement	"rval1 = readword ( fp , mytype )"	740:1:19368:19396	4583873	5	True				
ANR	4583916	AssignmentExpression	"rval1 = readword ( fp , mytype )"		4583873	0		=			
ANR	4583917	Identifier	rval1		4583873	0					
ANR	4583918	CallExpression	"readword ( fp , mytype )"		4583873	1					
ANR	4583919	Callee	readword		4583873	0					
ANR	4583920	Identifier	readword		4583873	0					
ANR	4583921	ArgumentList	fp		4583873	1					
ANR	4583922	Argument	fp		4583873	0					
ANR	4583923	Identifier	fp		4583873	0					
ANR	4583924	Argument	mytype		4583873	1					
ANR	4583925	Identifier	mytype		4583873	0					
ANR	4583926	IfStatement	"if ( mytype && strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0 )"		4583873	6					
ANR	4583927	Condition	"mytype && strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"	741:5:19403:19453	4583873	0	True				
ANR	4583928	AndExpression	"mytype && strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		4583873	0		&&			
ANR	4583929	Identifier	mytype		4583873	0					
ANR	4583930	EqualityExpression	"strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		4583873	1		==			
ANR	4583931	CallExpression	"strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME )"		4583873	0					
ANR	4583932	Callee	strcmp		4583873	0					
ANR	4583933	Identifier	strcmp		4583873	0					
ANR	4583934	ArgumentList	mytype		4583873	1					
ANR	4583935	Argument	mytype		4583873	0					
ANR	4583936	Identifier	mytype		4583873	0					
ANR	4583937	Argument	EMPTY_CLASSAD_TYPE_NAME		4583873	1					
ANR	4583938	Identifier	EMPTY_CLASSAD_TYPE_NAME		4583873	0					
ANR	4583939	PrimaryExpression	0		4583873	1					
ANR	4583940	CompoundStatement		8:59:191:191	4583873	1					
ANR	4583941	ExpressionStatement	free ( mytype )	742:2:19461:19473	4583873	0	True				
ANR	4583942	CallExpression	free ( mytype )		4583873	0					
ANR	4583943	Callee	free		4583873	0					
ANR	4583944	Identifier	free		4583873	0					
ANR	4583945	ArgumentList	mytype		4583873	1					
ANR	4583946	Argument	mytype		4583873	0					
ANR	4583947	Identifier	mytype		4583873	0					
ANR	4583948	ExpressionStatement	"mytype = strdup ( """" )"	743:2:19477:19496	4583873	1	True				
ANR	4583949	AssignmentExpression	"mytype = strdup ( """" )"		4583873	0		=			
ANR	4583950	Identifier	mytype		4583873	0					
ANR	4583951	CallExpression	"strdup ( """" )"		4583873	1					
ANR	4583952	Callee	strdup		4583873	0					
ANR	4583953	Identifier	strdup		4583873	0					
ANR	4583954	ArgumentList	""""""		4583873	1					
ANR	4583955	Argument	""""""		4583873	0					
ANR	4583956	PrimaryExpression	""""""		4583873	0					
ANR	4583957	ExpressionStatement	ASSERT ( mytype )	744:2:19500:19516	4583873	2	True				
ANR	4583958	CallExpression	ASSERT ( mytype )		4583873	0					
ANR	4583959	Callee	ASSERT		4583873	0					
ANR	4583960	Identifier	ASSERT		4583873	0					
ANR	4583961	ArgumentList	mytype		4583873	1					
ANR	4583962	Argument	mytype		4583873	0					
ANR	4583963	Identifier	mytype		4583873	0					
ANR	4583964	IfStatement	if ( rval1 < 0 )		4583873	7					
ANR	4583965	Condition	rval1 < 0	746:5:19526:19534	4583873	0	True				
ANR	4583966	RelationalExpression	rval1 < 0		4583873	0		<			
ANR	4583967	Identifier	rval1		4583873	0					
ANR	4583968	PrimaryExpression	0		4583873	1					
ANR	4583969	ReturnStatement	return rval1 ;	746:16:19537:19549	4583873	1	True				
ANR	4583970	Identifier	rval1		4583873	0					
ANR	4583971	ExpressionStatement	rval += rval1	747:1:19552:19565	4583873	8	True				
ANR	4583972	AssignmentExpression	rval += rval1		4583873	0		+=			
ANR	4583973	Identifier	rval		4583873	0					
ANR	4583974	Identifier	rval1		4583873	1					
ANR	4583975	ExpressionStatement	free ( targettype )	748:1:19568:19584	4583873	9	True				
ANR	4583976	CallExpression	free ( targettype )		4583873	0					
ANR	4583977	Callee	free		4583873	0					
ANR	4583978	Identifier	free		4583873	0					
ANR	4583979	ArgumentList	targettype		4583873	1					
ANR	4583980	Argument	targettype		4583873	0					
ANR	4583981	Identifier	targettype		4583873	0					
ANR	4583982	ExpressionStatement	"rval1 = readword ( fp , targettype )"	749:1:19587:19619	4583873	10	True				
ANR	4583983	AssignmentExpression	"rval1 = readword ( fp , targettype )"		4583873	0		=			
ANR	4583984	Identifier	rval1		4583873	0					
ANR	4583985	CallExpression	"readword ( fp , targettype )"		4583873	1					
ANR	4583986	Callee	readword		4583873	0					
ANR	4583987	Identifier	readword		4583873	0					
ANR	4583988	ArgumentList	fp		4583873	1					
ANR	4583989	Argument	fp		4583873	0					
ANR	4583990	Identifier	fp		4583873	0					
ANR	4583991	Argument	targettype		4583873	1					
ANR	4583992	Identifier	targettype		4583873	0					
ANR	4583993	IfStatement	"if ( targettype && strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0 )"		4583873	11					
ANR	4583994	Condition	"targettype && strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"	750:5:19626:19684	4583873	0	True				
ANR	4583995	AndExpression	"targettype && strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		4583873	0		&&			
ANR	4583996	Identifier	targettype		4583873	0					
ANR	4583997	EqualityExpression	"strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		4583873	1		==			
ANR	4583998	CallExpression	"strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME )"		4583873	0					
ANR	4583999	Callee	strcmp		4583873	0					
ANR	4584000	Identifier	strcmp		4583873	0					
ANR	4584001	ArgumentList	targettype		4583873	1					
ANR	4584002	Argument	targettype		4583873	0					
ANR	4584003	Identifier	targettype		4583873	0					
ANR	4584004	Argument	EMPTY_CLASSAD_TYPE_NAME		4583873	1					
ANR	4584005	Identifier	EMPTY_CLASSAD_TYPE_NAME		4583873	0					
ANR	4584006	PrimaryExpression	0		4583873	1					
ANR	4584007	CompoundStatement		17:67:422:422	4583873	1					
ANR	4584008	ExpressionStatement	free ( targettype )	751:2:19692:19708	4583873	0	True				
ANR	4584009	CallExpression	free ( targettype )		4583873	0					
ANR	4584010	Callee	free		4583873	0					
ANR	4584011	Identifier	free		4583873	0					
ANR	4584012	ArgumentList	targettype		4583873	1					
ANR	4584013	Argument	targettype		4583873	0					
ANR	4584014	Identifier	targettype		4583873	0					
ANR	4584015	ExpressionStatement	"targettype = strdup ( """" )"	752:2:19712:19735	4583873	1	True				
ANR	4584016	AssignmentExpression	"targettype = strdup ( """" )"		4583873	0		=			
ANR	4584017	Identifier	targettype		4583873	0					
ANR	4584018	CallExpression	"strdup ( """" )"		4583873	1					
ANR	4584019	Callee	strdup		4583873	0					
ANR	4584020	Identifier	strdup		4583873	0					
ANR	4584021	ArgumentList	""""""		4583873	1					
ANR	4584022	Argument	""""""		4583873	0					
ANR	4584023	PrimaryExpression	""""""		4583873	0					
ANR	4584024	ExpressionStatement	ASSERT ( targettype )	753:2:19739:19759	4583873	2	True				
ANR	4584025	CallExpression	ASSERT ( targettype )		4583873	0					
ANR	4584026	Callee	ASSERT		4583873	0					
ANR	4584027	Identifier	ASSERT		4583873	0					
ANR	4584028	ArgumentList	targettype		4583873	1					
ANR	4584029	Argument	targettype		4583873	0					
ANR	4584030	Identifier	targettype		4583873	0					
ANR	4584031	IfStatement	if ( rval1 < 0 )		4583873	12					
ANR	4584032	Condition	rval1 < 0	755:5:19769:19777	4583873	0	True				
ANR	4584033	RelationalExpression	rval1 < 0		4583873	0		<			
ANR	4584034	Identifier	rval1		4583873	0					
ANR	4584035	PrimaryExpression	0		4583873	1					
ANR	4584036	ReturnStatement	return rval1 ;	755:16:19780:19792	4583873	1	True				
ANR	4584037	Identifier	rval1		4583873	0					
ANR	4584038	ReturnStatement	return rval + rval1 ;	756:1:19795:19814	4583873	13	True				
ANR	4584039	AdditiveExpression	rval + rval1		4583873	0		+			
ANR	4584040	Identifier	rval		4583873	0					
ANR	4584041	Identifier	rval1		4583873	1					
ANR	4584042	ReturnType	int		4583873	1					
ANR	4584043	Identifier	LogNewClassAd :: ReadBody		4583873	2					
ANR	4584044	ParameterList	FILE * fp		4583873	3					
ANR	4584045	Parameter	FILE * fp	733:24:19255:19262	4583873	0	True				
ANR	4584046	ParameterType	FILE *		4583873	0					
ANR	4584047	Identifier	fp		4583873	1					
ANR	4584048	CFGEntryNode	ENTRY		4583873		True				
ANR	4584049	CFGExitNode	EXIT		4583873		True				
ANR	4584050	Symbol	strcmp		4583873						
ANR	4584051	Symbol	targettype		4583873						
ANR	4584052	Symbol	EMPTY_CLASSAD_TYPE_NAME		4583873						
ANR	4584053	Symbol	mytype		4583873						
ANR	4584054	Symbol	fp		4583873						
ANR	4584055	Symbol	rval		4583873						
ANR	4584056	Symbol	readword		4583873						
ANR	4584057	Symbol	strdup		4583873						
ANR	4584058	Symbol	key		4583873						
ANR	4584059	Symbol	rval1		4583873						
ANR	4584060	Function	LogNewClassAd :: WriteBody	759:0:19819:20781							
ANR	4584061	FunctionDef	LogNewClassAd :: WriteBody (FILE * fp)		4584060	0					
ANR	4584062	CompoundStatement		761:0:19858:20781	4584060	0					
ANR	4584063	IdentifierDeclStatement	"int rval , rval1 ;"	762:1:19861:19876	4584060	0	True				
ANR	4584064	IdentifierDecl	rval		4584060	0					
ANR	4584065	IdentifierDeclType	int		4584060	0					
ANR	4584066	Identifier	rval		4584060	1					
ANR	4584067	IdentifierDecl	rval1		4584060	1					
ANR	4584068	IdentifierDeclType	int		4584060	0					
ANR	4584069	Identifier	rval1		4584060	1					
ANR	4584070	ExpressionStatement	"rval = fwrite ( key , sizeof ( char ) , strlen ( key ) , fp )"	763:1:19879:19928	4584060	1	True				
ANR	4584071	AssignmentExpression	"rval = fwrite ( key , sizeof ( char ) , strlen ( key ) , fp )"		4584060	0		=			
ANR	4584072	Identifier	rval		4584060	0					
ANR	4584073	CallExpression	"fwrite ( key , sizeof ( char ) , strlen ( key ) , fp )"		4584060	1					
ANR	4584074	Callee	fwrite		4584060	0					
ANR	4584075	Identifier	fwrite		4584060	0					
ANR	4584076	ArgumentList	key		4584060	1					
ANR	4584077	Argument	key		4584060	0					
ANR	4584078	Identifier	key		4584060	0					
ANR	4584079	Argument	sizeof ( char )		4584060	1					
ANR	4584080	SizeofExpression	sizeof ( char )		4584060	0					
ANR	4584081	Sizeof	sizeof		4584060	0					
ANR	4584082	SizeofOperand	char		4584060	1					
ANR	4584083	Argument	strlen ( key )		4584060	2					
ANR	4584084	CallExpression	strlen ( key )		4584060	0					
ANR	4584085	Callee	strlen		4584060	0					
ANR	4584086	Identifier	strlen		4584060	0					
ANR	4584087	ArgumentList	key		4584060	1					
ANR	4584088	Argument	key		4584060	0					
ANR	4584089	Identifier	key		4584060	0					
ANR	4584090	Argument	fp		4584060	3					
ANR	4584091	Identifier	fp		4584060	0					
ANR	4584092	IfStatement	if ( rval < ( int ) strlen ( key ) )		4584060	2					
ANR	4584093	Condition	rval < ( int ) strlen ( key )	764:5:19935:19957	4584060	0	True				
ANR	4584094	RelationalExpression	rval < ( int ) strlen ( key )		4584060	0		<			
ANR	4584095	Identifier	rval		4584060	0					
ANR	4584096	CastExpression	( int ) strlen ( key )		4584060	1					
ANR	4584097	CastTarget	int		4584060	0					
ANR	4584098	CallExpression	strlen ( key )		4584060	1					
ANR	4584099	Callee	strlen		4584060	0					
ANR	4584100	Identifier	strlen		4584060	0					
ANR	4584101	ArgumentList	key		4584060	1					
ANR	4584102	Argument	key		4584060	0					
ANR	4584103	Identifier	key		4584060	0					
ANR	4584104	ReturnStatement	return - 1 ;	764:30:19960:19969	4584060	1	True				
ANR	4584105	UnaryOperationExpression	- 1		4584060	0					
ANR	4584106	UnaryOperator	-		4584060	0					
ANR	4584107	PrimaryExpression	1		4584060	1					
ANR	4584108	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	765:1:19972:20013	4584060	3	True				
ANR	4584109	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584060	0		=			
ANR	4584110	Identifier	rval1		4584060	0					
ANR	4584111	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584060	1					
ANR	4584112	Callee	fwrite		4584060	0					
ANR	4584113	Identifier	fwrite		4584060	0					
ANR	4584114	ArgumentList	""" """		4584060	1					
ANR	4584115	Argument	""" """		4584060	0					
ANR	4584116	PrimaryExpression	""" """		4584060	0					
ANR	4584117	Argument	sizeof ( char )		4584060	1					
ANR	4584118	SizeofExpression	sizeof ( char )		4584060	0					
ANR	4584119	Sizeof	sizeof		4584060	0					
ANR	4584120	SizeofOperand	char		4584060	1					
ANR	4584121	Argument	1		4584060	2					
ANR	4584122	PrimaryExpression	1		4584060	0					
ANR	4584123	Argument	fp		4584060	3					
ANR	4584124	Identifier	fp		4584060	0					
ANR	4584125	IfStatement	if ( rval1 < 1 )		4584060	4					
ANR	4584126	Condition	rval1 < 1	766:5:20020:20028	4584060	0	True				
ANR	4584127	RelationalExpression	rval1 < 1		4584060	0		<			
ANR	4584128	Identifier	rval1		4584060	0					
ANR	4584129	PrimaryExpression	1		4584060	1					
ANR	4584130	ReturnStatement	return - 1 ;	766:16:20031:20040	4584060	1	True				
ANR	4584131	UnaryOperationExpression	- 1		4584060	0					
ANR	4584132	UnaryOperator	-		4584060	0					
ANR	4584133	PrimaryExpression	1		4584060	1					
ANR	4584134	ExpressionStatement	rval += rval1	767:1:20043:20056	4584060	5	True				
ANR	4584135	AssignmentExpression	rval += rval1		4584060	0		+=			
ANR	4584136	Identifier	rval		4584060	0					
ANR	4584137	Identifier	rval1		4584060	1					
ANR	4584138	IdentifierDeclStatement	char const * s = mytype ;	768:1:20059:20081	4584060	6	True				
ANR	4584139	IdentifierDecl	* s = mytype		4584060	0					
ANR	4584140	IdentifierDeclType	char const *		4584060	0					
ANR	4584141	Identifier	s		4584060	1					
ANR	4584142	AssignmentExpression	* s = mytype		4584060	2		=			
ANR	4584143	Identifier	mytype		4584060	0					
ANR	4584144	Identifier	mytype		4584060	1					
ANR	4584145	IfStatement	if ( ! s || ! s [ 0 ] )		4584060	7					
ANR	4584146	Condition	! s || ! s [ 0 ]	769:5:20088:20098	4584060	0	True				
ANR	4584147	OrExpression	! s || ! s [ 0 ]		4584060	0		||			
ANR	4584148	UnaryOperationExpression	! s		4584060	0					
ANR	4584149	UnaryOperator	!		4584060	0					
ANR	4584150	Identifier	s		4584060	1					
ANR	4584151	UnaryOperationExpression	! s [ 0 ]		4584060	1					
ANR	4584152	UnaryOperator	!		4584060	0					
ANR	4584153	ArrayIndexing	s [ 0 ]		4584060	1					
ANR	4584154	Identifier	s		4584060	0					
ANR	4584155	PrimaryExpression	0		4584060	1					
ANR	4584156	CompoundStatement		9:19:243:243	4584060	1					
ANR	4584157	ExpressionStatement	s = EMPTY_CLASSAD_TYPE_NAME	773:2:20241:20268	4584060	0	True				
ANR	4584158	AssignmentExpression	s = EMPTY_CLASSAD_TYPE_NAME		4584060	0		=			
ANR	4584159	Identifier	s		4584060	0					
ANR	4584160	Identifier	EMPTY_CLASSAD_TYPE_NAME		4584060	1					
ANR	4584161	ExpressionStatement	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"	775:1:20274:20320	4584060	8	True				
ANR	4584162	AssignmentExpression	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		4584060	0		=			
ANR	4584163	Identifier	rval1		4584060	0					
ANR	4584164	CallExpression	"fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		4584060	1					
ANR	4584165	Callee	fwrite		4584060	0					
ANR	4584166	Identifier	fwrite		4584060	0					
ANR	4584167	ArgumentList	s		4584060	1					
ANR	4584168	Argument	s		4584060	0					
ANR	4584169	Identifier	s		4584060	0					
ANR	4584170	Argument	sizeof ( char )		4584060	1					
ANR	4584171	SizeofExpression	sizeof ( char )		4584060	0					
ANR	4584172	Sizeof	sizeof		4584060	0					
ANR	4584173	SizeofOperand	char		4584060	1					
ANR	4584174	Argument	strlen ( s )		4584060	2					
ANR	4584175	CallExpression	strlen ( s )		4584060	0					
ANR	4584176	Callee	strlen		4584060	0					
ANR	4584177	Identifier	strlen		4584060	0					
ANR	4584178	ArgumentList	s		4584060	1					
ANR	4584179	Argument	s		4584060	0					
ANR	4584180	Identifier	s		4584060	0					
ANR	4584181	Argument	fp		4584060	3					
ANR	4584182	Identifier	fp		4584060	0					
ANR	4584183	IfStatement	if ( rval1 < ( int ) strlen ( s ) )		4584060	9					
ANR	4584184	Condition	rval1 < ( int ) strlen ( s )	776:5:20327:20348	4584060	0	True				
ANR	4584185	RelationalExpression	rval1 < ( int ) strlen ( s )		4584060	0		<			
ANR	4584186	Identifier	rval1		4584060	0					
ANR	4584187	CastExpression	( int ) strlen ( s )		4584060	1					
ANR	4584188	CastTarget	int		4584060	0					
ANR	4584189	CallExpression	strlen ( s )		4584060	1					
ANR	4584190	Callee	strlen		4584060	0					
ANR	4584191	Identifier	strlen		4584060	0					
ANR	4584192	ArgumentList	s		4584060	1					
ANR	4584193	Argument	s		4584060	0					
ANR	4584194	Identifier	s		4584060	0					
ANR	4584195	ReturnStatement	return - 1 ;	776:29:20351:20360	4584060	1	True				
ANR	4584196	UnaryOperationExpression	- 1		4584060	0					
ANR	4584197	UnaryOperator	-		4584060	0					
ANR	4584198	PrimaryExpression	1		4584060	1					
ANR	4584199	ExpressionStatement	rval += rval1	777:1:20363:20376	4584060	10	True				
ANR	4584200	AssignmentExpression	rval += rval1		4584060	0		+=			
ANR	4584201	Identifier	rval		4584060	0					
ANR	4584202	Identifier	rval1		4584060	1					
ANR	4584203	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	778:1:20379:20419	4584060	11	True				
ANR	4584204	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584060	0		=			
ANR	4584205	Identifier	rval1		4584060	0					
ANR	4584206	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584060	1					
ANR	4584207	Callee	fwrite		4584060	0					
ANR	4584208	Identifier	fwrite		4584060	0					
ANR	4584209	ArgumentList	""" """		4584060	1					
ANR	4584210	Argument	""" """		4584060	0					
ANR	4584211	PrimaryExpression	""" """		4584060	0					
ANR	4584212	Argument	sizeof ( char )		4584060	1					
ANR	4584213	SizeofExpression	sizeof ( char )		4584060	0					
ANR	4584214	Sizeof	sizeof		4584060	0					
ANR	4584215	SizeofOperand	char		4584060	1					
ANR	4584216	Argument	1		4584060	2					
ANR	4584217	PrimaryExpression	1		4584060	0					
ANR	4584218	Argument	fp		4584060	3					
ANR	4584219	Identifier	fp		4584060	0					
ANR	4584220	IfStatement	if ( rval1 < 1 )		4584060	12					
ANR	4584221	Condition	rval1 < 1	779:5:20426:20434	4584060	0	True				
ANR	4584222	RelationalExpression	rval1 < 1		4584060	0		<			
ANR	4584223	Identifier	rval1		4584060	0					
ANR	4584224	PrimaryExpression	1		4584060	1					
ANR	4584225	ReturnStatement	return - 1 ;	779:16:20437:20446	4584060	1	True				
ANR	4584226	UnaryOperationExpression	- 1		4584060	0					
ANR	4584227	UnaryOperator	-		4584060	0					
ANR	4584228	PrimaryExpression	1		4584060	1					
ANR	4584229	ExpressionStatement	rval += rval1	780:1:20449:20462	4584060	13	True				
ANR	4584230	AssignmentExpression	rval += rval1		4584060	0		+=			
ANR	4584231	Identifier	rval		4584060	0					
ANR	4584232	Identifier	rval1		4584060	1					
ANR	4584233	ExpressionStatement	s = targettype	781:1:20465:20479	4584060	14	True				
ANR	4584234	AssignmentExpression	s = targettype		4584060	0		=			
ANR	4584235	Identifier	s		4584060	0					
ANR	4584236	Identifier	targettype		4584060	1					
ANR	4584237	IfStatement	if ( ! s || ! s [ 0 ] )		4584060	15					
ANR	4584238	Condition	! s || ! s [ 0 ]	782:5:20486:20496	4584060	0	True				
ANR	4584239	OrExpression	! s || ! s [ 0 ]		4584060	0		||			
ANR	4584240	UnaryOperationExpression	! s		4584060	0					
ANR	4584241	UnaryOperator	!		4584060	0					
ANR	4584242	Identifier	s		4584060	1					
ANR	4584243	UnaryOperationExpression	! s [ 0 ]		4584060	1					
ANR	4584244	UnaryOperator	!		4584060	0					
ANR	4584245	ArrayIndexing	s [ 0 ]		4584060	1					
ANR	4584246	Identifier	s		4584060	0					
ANR	4584247	PrimaryExpression	0		4584060	1					
ANR	4584248	CompoundStatement		22:19:641:641	4584060	1					
ANR	4584249	ExpressionStatement	s = EMPTY_CLASSAD_TYPE_NAME	786:2:20639:20666	4584060	0	True				
ANR	4584250	AssignmentExpression	s = EMPTY_CLASSAD_TYPE_NAME		4584060	0		=			
ANR	4584251	Identifier	s		4584060	0					
ANR	4584252	Identifier	EMPTY_CLASSAD_TYPE_NAME		4584060	1					
ANR	4584253	ExpressionStatement	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"	788:1:20672:20717	4584060	16	True				
ANR	4584254	AssignmentExpression	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		4584060	0		=			
ANR	4584255	Identifier	rval1		4584060	0					
ANR	4584256	CallExpression	"fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		4584060	1					
ANR	4584257	Callee	fwrite		4584060	0					
ANR	4584258	Identifier	fwrite		4584060	0					
ANR	4584259	ArgumentList	s		4584060	1					
ANR	4584260	Argument	s		4584060	0					
ANR	4584261	Identifier	s		4584060	0					
ANR	4584262	Argument	sizeof ( char )		4584060	1					
ANR	4584263	SizeofExpression	sizeof ( char )		4584060	0					
ANR	4584264	Sizeof	sizeof		4584060	0					
ANR	4584265	SizeofOperand	char		4584060	1					
ANR	4584266	Argument	strlen ( s )		4584060	2					
ANR	4584267	CallExpression	strlen ( s )		4584060	0					
ANR	4584268	Callee	strlen		4584060	0					
ANR	4584269	Identifier	strlen		4584060	0					
ANR	4584270	ArgumentList	s		4584060	1					
ANR	4584271	Argument	s		4584060	0					
ANR	4584272	Identifier	s		4584060	0					
ANR	4584273	Argument	fp		4584060	3					
ANR	4584274	Identifier	fp		4584060	0					
ANR	4584275	IfStatement	if ( rval1 < ( int ) strlen ( s ) )		4584060	17					
ANR	4584276	Condition	rval1 < ( int ) strlen ( s )	789:5:20724:20745	4584060	0	True				
ANR	4584277	RelationalExpression	rval1 < ( int ) strlen ( s )		4584060	0		<			
ANR	4584278	Identifier	rval1		4584060	0					
ANR	4584279	CastExpression	( int ) strlen ( s )		4584060	1					
ANR	4584280	CastTarget	int		4584060	0					
ANR	4584281	CallExpression	strlen ( s )		4584060	1					
ANR	4584282	Callee	strlen		4584060	0					
ANR	4584283	Identifier	strlen		4584060	0					
ANR	4584284	ArgumentList	s		4584060	1					
ANR	4584285	Argument	s		4584060	0					
ANR	4584286	Identifier	s		4584060	0					
ANR	4584287	ReturnStatement	return - 1 ;	789:29:20748:20757	4584060	1	True				
ANR	4584288	UnaryOperationExpression	- 1		4584060	0					
ANR	4584289	UnaryOperator	-		4584060	0					
ANR	4584290	PrimaryExpression	1		4584060	1					
ANR	4584291	ReturnStatement	return rval + rval1 ;	790:1:20760:20779	4584060	18	True				
ANR	4584292	AdditiveExpression	rval + rval1		4584060	0		+			
ANR	4584293	Identifier	rval		4584060	0					
ANR	4584294	Identifier	rval1		4584060	1					
ANR	4584295	ReturnType	int		4584060	1					
ANR	4584296	Identifier	LogNewClassAd :: WriteBody		4584060	2					
ANR	4584297	ParameterList	FILE * fp		4584060	3					
ANR	4584298	Parameter	FILE * fp	760:25:19848:19855	4584060	0	True				
ANR	4584299	ParameterType	FILE *		4584060	0					
ANR	4584300	Identifier	fp		4584060	1					
ANR	4584301	CFGEntryNode	ENTRY		4584060		True				
ANR	4584302	CFGExitNode	EXIT		4584060		True				
ANR	4584303	Symbol	strlen		4584060						
ANR	4584304	Symbol	s		4584060						
ANR	4584305	Symbol	targettype		4584060						
ANR	4584306	Symbol	EMPTY_CLASSAD_TYPE_NAME		4584060						
ANR	4584307	Symbol	fwrite		4584060						
ANR	4584308	Symbol	mytype		4584060						
ANR	4584309	Symbol	fp		4584060						
ANR	4584310	Symbol	rval		4584060						
ANR	4584311	Symbol	* s		4584060						
ANR	4584312	Symbol	key		4584060						
ANR	4584313	Symbol	rval1		4584060						
ANR	4584314	Function	LogDestroyClassAd :: LogDestroyClassAd	793:0:20784:20895							
ANR	4584315	FunctionDef	LogDestroyClassAd :: LogDestroyClassAd (const char * k)		4584314	0					
ANR	4584316	CompoundStatement		794:0:20836:20895	4584314	0					
ANR	4584317	ExpressionStatement	op_type = CondorLogOp_DestroyClassAd	795:1:20839:20875	4584314	0	True				
ANR	4584318	AssignmentExpression	op_type = CondorLogOp_DestroyClassAd		4584314	0		=			
ANR	4584319	Identifier	op_type		4584314	0					
ANR	4584320	Identifier	CondorLogOp_DestroyClassAd		4584314	1					
ANR	4584321	ExpressionStatement	key = strdup ( k )	796:1:20878:20893	4584314	1	True				
ANR	4584322	AssignmentExpression	key = strdup ( k )		4584314	0		=			
ANR	4584323	Identifier	key		4584314	0					
ANR	4584324	CallExpression	strdup ( k )		4584314	1					
ANR	4584325	Callee	strdup		4584314	0					
ANR	4584326	Identifier	strdup		4584314	0					
ANR	4584327	ArgumentList	k		4584314	1					
ANR	4584328	Argument	k		4584314	0					
ANR	4584329	Identifier	k		4584314	0					
ANR	4584330	Identifier	LogDestroyClassAd :: LogDestroyClassAd		4584314	1					
ANR	4584331	ParameterList	const char * k		4584314	2					
ANR	4584332	Parameter	const char * k	793:37:20821:20833	4584314	0	True				
ANR	4584333	ParameterType	const char *		4584314	0					
ANR	4584334	Identifier	k		4584314	1					
ANR	4584335	CFGEntryNode	ENTRY		4584314		True				
ANR	4584336	CFGExitNode	EXIT		4584314		True				
ANR	4584337	Symbol	k		4584314						
ANR	4584338	Symbol	op_type		4584314						
ANR	4584339	Symbol	strdup		4584314						
ANR	4584340	Symbol	key		4584314						
ANR	4584341	Symbol	CondorLogOp_DestroyClassAd		4584314						
ANR	4584342	Function	LogDestroyClassAd :: ~LogDestroyClassAd	800:0:20899:20953							
ANR	4584343	FunctionDef	LogDestroyClassAd :: ~LogDestroyClassAd ()		4584342	0					
ANR	4584344	CompoundStatement		801:0:20939:20953	4584342	0					
ANR	4584345	ExpressionStatement	free ( key )	802:1:20942:20951	4584342	0	True				
ANR	4584346	CallExpression	free ( key )		4584342	0					
ANR	4584347	Callee	free		4584342	0					
ANR	4584348	Identifier	free		4584342	0					
ANR	4584349	ArgumentList	key		4584342	1					
ANR	4584350	Argument	key		4584342	0					
ANR	4584351	Identifier	key		4584342	0					
ANR	4584352	Identifier	LogDestroyClassAd :: ~LogDestroyClassAd		4584342	1					
ANR	4584353	ParameterList			4584342	2					
ANR	4584354	CFGEntryNode	ENTRY		4584342		True				
ANR	4584355	CFGExitNode	EXIT		4584342		True				
ANR	4584356	Symbol	key		4584342						
ANR	4584357	Function	LogDestroyClassAd :: Play	806:0:20957:21281							
ANR	4584358	FunctionDef	LogDestroyClassAd :: Play (void * data_structure)		4584357	0					
ANR	4584359	CompoundStatement		808:0:21007:21281	4584357	0					
ANR	4584360	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	809:1:21010:21070	4584357	0	True				
ANR	4584361	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		4584357	0					
ANR	4584362	IdentifierDeclType	ClassAdHashTable *		4584357	0					
ANR	4584363	Identifier	table		4584357	1					
ANR	4584364	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		4584357	2		=			
ANR	4584365	Identifier	table		4584357	0					
ANR	4584366	CastExpression	( ClassAdHashTable * ) data_structure		4584357	1					
ANR	4584367	CastTarget	ClassAdHashTable *		4584357	0					
ANR	4584368	Identifier	data_structure		4584357	1					
ANR	4584369	IdentifierDeclStatement	HashKey hkey ( key ) ;	810:1:21073:21090	4584357	1	True				
ANR	4584370	IdentifierDecl	hkey ( key )		4584357	0					
ANR	4584371	IdentifierDeclType	HashKey		4584357	0					
ANR	4584372	Identifier	hkey		4584357	1					
ANR	4584373	Identifier	key		4584357	2					
ANR	4584374	IdentifierDeclStatement	ClassAd * ad ;	811:1:21093:21104	4584357	2	True				
ANR	4584375	IdentifierDecl	* ad		4584357	0					
ANR	4584376	IdentifierDeclType	ClassAd *		4584357	0					
ANR	4584377	Identifier	ad		4584357	1					
ANR	4584378	IfStatement	"if ( table -> lookup ( hkey , ad ) < 0 )"		4584357	3					
ANR	4584379	Condition	"table -> lookup ( hkey , ad ) < 0"	813:5:21112:21138	4584357	0	True				
ANR	4584380	RelationalExpression	"table -> lookup ( hkey , ad ) < 0"		4584357	0		<			
ANR	4584381	CallExpression	"table -> lookup ( hkey , ad )"		4584357	0					
ANR	4584382	Callee	table -> lookup		4584357	0					
ANR	4584383	PtrMemberAccess	table -> lookup		4584357	0					
ANR	4584384	Identifier	table		4584357	0					
ANR	4584385	Identifier	lookup		4584357	1					
ANR	4584386	ArgumentList	hkey		4584357	1					
ANR	4584387	Argument	hkey		4584357	0					
ANR	4584388	Identifier	hkey		4584357	0					
ANR	4584389	Argument	ad		4584357	1					
ANR	4584390	Identifier	ad		4584357	0					
ANR	4584391	PrimaryExpression	0		4584357	1					
ANR	4584392	CompoundStatement		6:34:133:133	4584357	1					
ANR	4584393	ReturnStatement	return - 1 ;	814:2:21145:21154	4584357	0	True				
ANR	4584394	UnaryOperationExpression	- 1		4584357	0					
ANR	4584395	UnaryOperator	-		4584357	0					
ANR	4584396	PrimaryExpression	1		4584357	1					
ANR	4584397	ExpressionStatement	ClassAdLogPluginManager :: DestroyClassAd ( key )	818:1:21186:21230	4584357	4	True				
ANR	4584398	CallExpression	ClassAdLogPluginManager :: DestroyClassAd ( key )		4584357	0					
ANR	4584399	Callee	ClassAdLogPluginManager :: DestroyClassAd		4584357	0					
ANR	4584400	Identifier	ClassAdLogPluginManager :: DestroyClassAd		4584357	0					
ANR	4584401	ArgumentList	key		4584357	1					
ANR	4584402	Argument	key		4584357	0					
ANR	4584403	Identifier	key		4584357	0					
ANR	4584404	Statement	delete	821:1:21241:21246	4584357	5	True				
ANR	4584405	ExpressionStatement	ad	821:8:21248:21250	4584357	6	True				
ANR	4584406	Identifier	ad		4584357	0					
ANR	4584407	ReturnStatement	return table -> remove ( hkey ) ;	822:1:21253:21279	4584357	7	True				
ANR	4584408	CallExpression	table -> remove ( hkey )		4584357	0					
ANR	4584409	Callee	table -> remove		4584357	0					
ANR	4584410	PtrMemberAccess	table -> remove		4584357	0					
ANR	4584411	Identifier	table		4584357	0					
ANR	4584412	Identifier	remove		4584357	1					
ANR	4584413	ArgumentList	hkey		4584357	1					
ANR	4584414	Argument	hkey		4584357	0					
ANR	4584415	Identifier	hkey		4584357	0					
ANR	4584416	ReturnType	int		4584357	1					
ANR	4584417	Identifier	LogDestroyClassAd :: Play		4584357	2					
ANR	4584418	ParameterList	void * data_structure		4584357	3					
ANR	4584419	Parameter	void * data_structure	807:24:20985:21004	4584357	0	True				
ANR	4584420	ParameterType	void *		4584357	0					
ANR	4584421	Identifier	data_structure		4584357	1					
ANR	4584422	CFGEntryNode	ENTRY		4584357		True				
ANR	4584423	CFGExitNode	EXIT		4584357		True				
ANR	4584424	Symbol	data_structure		4584357						
ANR	4584425	Symbol	ad		4584357						
ANR	4584426	Symbol	hkey		4584357						
ANR	4584427	Symbol	* table		4584357						
ANR	4584428	Symbol	table -> remove		4584357						
ANR	4584429	Symbol	table -> lookup		4584357						
ANR	4584430	Symbol	table		4584357						
ANR	4584431	Symbol	key		4584357						
ANR	4584432	Function	LogDestroyClassAd :: ReadBody	825:0:21284:21367							
ANR	4584433	FunctionDef	LogDestroyClassAd :: ReadBody (FILE * fp)		4584432	0					
ANR	4584434	CompoundStatement		827:0:21326:21367	4584432	0					
ANR	4584435	ExpressionStatement	free ( key )	828:1:21329:21338	4584432	0	True				
ANR	4584436	CallExpression	free ( key )		4584432	0					
ANR	4584437	Callee	free		4584432	0					
ANR	4584438	Identifier	free		4584432	0					
ANR	4584439	ArgumentList	key		4584432	1					
ANR	4584440	Argument	key		4584432	0					
ANR	4584441	Identifier	key		4584432	0					
ANR	4584442	ReturnStatement	"return readword ( fp , key ) ;"	829:1:21341:21365	4584432	1	True				
ANR	4584443	CallExpression	"readword ( fp , key )"		4584432	0					
ANR	4584444	Callee	readword		4584432	0					
ANR	4584445	Identifier	readword		4584432	0					
ANR	4584446	ArgumentList	fp		4584432	1					
ANR	4584447	Argument	fp		4584432	0					
ANR	4584448	Identifier	fp		4584432	0					
ANR	4584449	Argument	key		4584432	1					
ANR	4584450	Identifier	key		4584432	0					
ANR	4584451	ReturnType	int		4584432	1					
ANR	4584452	Identifier	LogDestroyClassAd :: ReadBody		4584432	2					
ANR	4584453	ParameterList	FILE * fp		4584432	3					
ANR	4584454	Parameter	FILE * fp	826:28:21316:21323	4584432	0	True				
ANR	4584455	ParameterType	FILE *		4584432	0					
ANR	4584456	Identifier	fp		4584432	1					
ANR	4584457	CFGEntryNode	ENTRY		4584432		True				
ANR	4584458	CFGExitNode	EXIT		4584432		True				
ANR	4584459	Symbol	fp		4584432						
ANR	4584460	Symbol	readword		4584432						
ANR	4584461	Symbol	key		4584432						
ANR	4584462	Function	LogSetAttribute :: LogSetAttribute	832:0:21370:21651							
ANR	4584463	FunctionDef	"LogSetAttribute :: LogSetAttribute (const char * k , const char * n , const char * val , bool dirty)"		4584462	0					
ANR	4584464	CompoundStatement		833:0:21462:21651	4584462	0					
ANR	4584465	ExpressionStatement	op_type = CondorLogOp_SetAttribute	834:1:21465:21499	4584462	0	True				
ANR	4584466	AssignmentExpression	op_type = CondorLogOp_SetAttribute		4584462	0		=			
ANR	4584467	Identifier	op_type		4584462	0					
ANR	4584468	Identifier	CondorLogOp_SetAttribute		4584462	1					
ANR	4584469	ExpressionStatement	key = strdup ( k )	835:1:21502:21517	4584462	1	True				
ANR	4584470	AssignmentExpression	key = strdup ( k )		4584462	0		=			
ANR	4584471	Identifier	key		4584462	0					
ANR	4584472	CallExpression	strdup ( k )		4584462	1					
ANR	4584473	Callee	strdup		4584462	0					
ANR	4584474	Identifier	strdup		4584462	0					
ANR	4584475	ArgumentList	k		4584462	1					
ANR	4584476	Argument	k		4584462	0					
ANR	4584477	Identifier	k		4584462	0					
ANR	4584478	ExpressionStatement	name = strdup ( n )	836:1:21520:21536	4584462	2	True				
ANR	4584479	AssignmentExpression	name = strdup ( n )		4584462	0		=			
ANR	4584480	Identifier	name		4584462	0					
ANR	4584481	CallExpression	strdup ( n )		4584462	1					
ANR	4584482	Callee	strdup		4584462	0					
ANR	4584483	Identifier	strdup		4584462	0					
ANR	4584484	ArgumentList	n		4584462	1					
ANR	4584485	Argument	n		4584462	0					
ANR	4584486	Identifier	n		4584462	0					
ANR	4584487	IfStatement	if ( val && strlen ( val ) )		4584462	3					
ANR	4584488	Condition	val && strlen ( val )	837:5:21543:21560	4584462	0	True				
ANR	4584489	AndExpression	val && strlen ( val )		4584462	0		&&			
ANR	4584490	Identifier	val		4584462	0					
ANR	4584491	CallExpression	strlen ( val )		4584462	1					
ANR	4584492	Callee	strlen		4584462	0					
ANR	4584493	Identifier	strlen		4584462	0					
ANR	4584494	ArgumentList	val		4584462	1					
ANR	4584495	Argument	val		4584462	0					
ANR	4584496	Identifier	val		4584462	0					
ANR	4584497	CompoundStatement		5:25:100:100	4584462	1					
ANR	4584498	ExpressionStatement	value = strdup ( val )	838:2:21567:21586	4584462	0	True				
ANR	4584499	AssignmentExpression	value = strdup ( val )		4584462	0		=			
ANR	4584500	Identifier	value		4584462	0					
ANR	4584501	CallExpression	strdup ( val )		4584462	1					
ANR	4584502	Callee	strdup		4584462	0					
ANR	4584503	Identifier	strdup		4584462	0					
ANR	4584504	ArgumentList	val		4584462	1					
ANR	4584505	Argument	val		4584462	0					
ANR	4584506	Identifier	val		4584462	0					
ANR	4584507	ElseStatement	else		4584462	0					
ANR	4584508	CompoundStatement		7:8:133:133	4584462	0					
ANR	4584509	ExpressionStatement	"value = strdup ( ""UNDEFINED"" )"	840:2:21600:21627	4584462	0	True				
ANR	4584510	AssignmentExpression	"value = strdup ( ""UNDEFINED"" )"		4584462	0		=			
ANR	4584511	Identifier	value		4584462	0					
ANR	4584512	CallExpression	"strdup ( ""UNDEFINED"" )"		4584462	1					
ANR	4584513	Callee	strdup		4584462	0					
ANR	4584514	Identifier	strdup		4584462	0					
ANR	4584515	ArgumentList	"""UNDEFINED"""		4584462	1					
ANR	4584516	Argument	"""UNDEFINED"""		4584462	0					
ANR	4584517	PrimaryExpression	"""UNDEFINED"""		4584462	0					
ANR	4584518	ExpressionStatement	is_dirty = dirty	842:1:21633:21649	4584462	4	True				
ANR	4584519	AssignmentExpression	is_dirty = dirty		4584462	0		=			
ANR	4584520	Identifier	is_dirty		4584462	0					
ANR	4584521	Identifier	dirty		4584462	1					
ANR	4584522	Identifier	LogSetAttribute :: LogSetAttribute		4584462	1					
ANR	4584523	ParameterList	"const char * k , const char * n , const char * val , bool dirty"		4584462	2					
ANR	4584524	Parameter	const char * k	832:33:21403:21415	4584462	0	True				
ANR	4584525	ParameterType	const char *		4584462	0					
ANR	4584526	Identifier	k		4584462	1					
ANR	4584527	Parameter	const char * n	832:48:21418:21430	4584462	1	True				
ANR	4584528	ParameterType	const char *		4584462	0					
ANR	4584529	Identifier	n		4584462	1					
ANR	4584530	Parameter	const char * val	832:63:21433:21447	4584462	2	True				
ANR	4584531	ParameterType	const char *		4584462	0					
ANR	4584532	Identifier	val		4584462	1					
ANR	4584533	Parameter	bool dirty	832:80:21450:21459	4584462	3	True				
ANR	4584534	ParameterType	bool		4584462	0					
ANR	4584535	Identifier	dirty		4584462	1					
ANR	4584536	CFGEntryNode	ENTRY		4584462		True				
ANR	4584537	CFGExitNode	EXIT		4584462		True				
ANR	4584538	Symbol	val		4584462						
ANR	4584539	Symbol	dirty		4584462						
ANR	4584540	Symbol	strlen		4584462						
ANR	4584541	Symbol	name		4584462						
ANR	4584542	Symbol	CondorLogOp_SetAttribute		4584462						
ANR	4584543	Symbol	is_dirty		4584462						
ANR	4584544	Symbol	k		4584462						
ANR	4584545	Symbol	op_type		4584462						
ANR	4584546	Symbol	strdup		4584462						
ANR	4584547	Symbol	value		4584462						
ANR	4584548	Symbol	n		4584462						
ANR	4584549	Symbol	key		4584462						
ANR	4584550	Function	LogSetAttribute :: ~LogSetAttribute	846:0:21655:21732							
ANR	4584551	FunctionDef	LogSetAttribute :: ~LogSetAttribute ()		4584550	0					
ANR	4584552	CompoundStatement		847:0:21691:21732	4584550	0					
ANR	4584553	ExpressionStatement	free ( key )	848:1:21694:21703	4584550	0	True				
ANR	4584554	CallExpression	free ( key )		4584550	0					
ANR	4584555	Callee	free		4584550	0					
ANR	4584556	Identifier	free		4584550	0					
ANR	4584557	ArgumentList	key		4584550	1					
ANR	4584558	Argument	key		4584550	0					
ANR	4584559	Identifier	key		4584550	0					
ANR	4584560	ExpressionStatement	free ( name )	849:1:21706:21716	4584550	1	True				
ANR	4584561	CallExpression	free ( name )		4584550	0					
ANR	4584562	Callee	free		4584550	0					
ANR	4584563	Identifier	free		4584550	0					
ANR	4584564	ArgumentList	name		4584550	1					
ANR	4584565	Argument	name		4584550	0					
ANR	4584566	Identifier	name		4584550	0					
ANR	4584567	ExpressionStatement	free ( value )	850:1:21719:21730	4584550	2	True				
ANR	4584568	CallExpression	free ( value )		4584550	0					
ANR	4584569	Callee	free		4584550	0					
ANR	4584570	Identifier	free		4584550	0					
ANR	4584571	ArgumentList	value		4584550	1					
ANR	4584572	Argument	value		4584550	0					
ANR	4584573	Identifier	value		4584550	0					
ANR	4584574	Identifier	LogSetAttribute :: ~LogSetAttribute		4584550	1					
ANR	4584575	ParameterList			4584550	2					
ANR	4584576	CFGEntryNode	ENTRY		4584550		True				
ANR	4584577	CFGExitNode	EXIT		4584550		True				
ANR	4584578	Symbol	name		4584550						
ANR	4584579	Symbol	value		4584550						
ANR	4584580	Symbol	key		4584550						
ANR	4584581	Function	LogSetAttribute :: Play	854:0:21736:22111							
ANR	4584582	FunctionDef	LogSetAttribute :: Play (void * data_structure)		4584581	0					
ANR	4584583	CompoundStatement		856:0:21784:22111	4584581	0					
ANR	4584584	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	857:1:21787:21847	4584581	0	True				
ANR	4584585	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		4584581	0					
ANR	4584586	IdentifierDeclType	ClassAdHashTable *		4584581	0					
ANR	4584587	Identifier	table		4584581	1					
ANR	4584588	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		4584581	2		=			
ANR	4584589	Identifier	table		4584581	0					
ANR	4584590	CastExpression	( ClassAdHashTable * ) data_structure		4584581	1					
ANR	4584591	CastTarget	ClassAdHashTable *		4584581	0					
ANR	4584592	Identifier	data_structure		4584581	1					
ANR	4584593	IdentifierDeclStatement	int rval ;	858:1:21850:21858	4584581	1	True				
ANR	4584594	IdentifierDecl	rval		4584581	0					
ANR	4584595	IdentifierDeclType	int		4584581	0					
ANR	4584596	Identifier	rval		4584581	1					
ANR	4584597	IdentifierDeclStatement	ClassAd * ad = 0 ;	859:1:21861:21876	4584581	2	True				
ANR	4584598	IdentifierDecl	* ad = 0		4584581	0					
ANR	4584599	IdentifierDeclType	ClassAd *		4584581	0					
ANR	4584600	Identifier	ad		4584581	1					
ANR	4584601	AssignmentExpression	* ad = 0		4584581	2		=			
ANR	4584602	Identifier	ad		4584581	0					
ANR	4584603	PrimaryExpression	0		4584581	1					
ANR	4584604	IfStatement	"if ( table -> lookup ( HashKey ( key ) , ad ) < 0 )"		4584581	3					
ANR	4584605	Condition	"table -> lookup ( HashKey ( key ) , ad ) < 0"	860:5:21883:21917	4584581	0	True				
ANR	4584606	RelationalExpression	"table -> lookup ( HashKey ( key ) , ad ) < 0"		4584581	0		<			
ANR	4584607	CallExpression	"table -> lookup ( HashKey ( key ) , ad )"		4584581	0					
ANR	4584608	Callee	table -> lookup		4584581	0					
ANR	4584609	PtrMemberAccess	table -> lookup		4584581	0					
ANR	4584610	Identifier	table		4584581	0					
ANR	4584611	Identifier	lookup		4584581	1					
ANR	4584612	ArgumentList	HashKey ( key )		4584581	1					
ANR	4584613	Argument	HashKey ( key )		4584581	0					
ANR	4584614	CallExpression	HashKey ( key )		4584581	0					
ANR	4584615	Callee	HashKey		4584581	0					
ANR	4584616	Identifier	HashKey		4584581	0					
ANR	4584617	ArgumentList	key		4584581	1					
ANR	4584618	Argument	key		4584581	0					
ANR	4584619	Identifier	key		4584581	0					
ANR	4584620	Argument	ad		4584581	1					
ANR	4584621	Identifier	ad		4584581	0					
ANR	4584622	PrimaryExpression	0		4584581	1					
ANR	4584623	ReturnStatement	return - 1 ;	861:2:21922:21931	4584581	1	True				
ANR	4584624	UnaryOperationExpression	- 1		4584581	0					
ANR	4584625	UnaryOperator	-		4584581	0					
ANR	4584626	PrimaryExpression	1		4584581	1					
ANR	4584627	ExpressionStatement	"rval = ad -> AssignExpr ( name , value )"	862:1:21934:21968	4584581	4	True				
ANR	4584628	AssignmentExpression	"rval = ad -> AssignExpr ( name , value )"		4584581	0		=			
ANR	4584629	Identifier	rval		4584581	0					
ANR	4584630	CallExpression	"ad -> AssignExpr ( name , value )"		4584581	1					
ANR	4584631	Callee	ad -> AssignExpr		4584581	0					
ANR	4584632	PtrMemberAccess	ad -> AssignExpr		4584581	0					
ANR	4584633	Identifier	ad		4584581	0					
ANR	4584634	Identifier	AssignExpr		4584581	1					
ANR	4584635	ArgumentList	name		4584581	1					
ANR	4584636	Argument	name		4584581	0					
ANR	4584637	Identifier	name		4584581	0					
ANR	4584638	Argument	value		4584581	1					
ANR	4584639	Identifier	value		4584581	0					
ANR	4584640	ExpressionStatement	"ad -> SetDirtyFlag ( name , is_dirty )"	863:1:21971:22003	4584581	5	True				
ANR	4584641	CallExpression	"ad -> SetDirtyFlag ( name , is_dirty )"		4584581	0					
ANR	4584642	Callee	ad -> SetDirtyFlag		4584581	0					
ANR	4584643	PtrMemberAccess	ad -> SetDirtyFlag		4584581	0					
ANR	4584644	Identifier	ad		4584581	0					
ANR	4584645	Identifier	SetDirtyFlag		4584581	1					
ANR	4584646	ArgumentList	name		4584581	1					
ANR	4584647	Argument	name		4584581	0					
ANR	4584648	Identifier	name		4584581	0					
ANR	4584649	Argument	is_dirty		4584581	1					
ANR	4584650	Identifier	is_dirty		4584581	0					
ANR	4584651	ExpressionStatement	"ClassAdLogPluginManager :: SetAttribute ( key , name , value )"	866:1:22032:22087	4584581	6	True				
ANR	4584652	CallExpression	"ClassAdLogPluginManager :: SetAttribute ( key , name , value )"		4584581	0					
ANR	4584653	Callee	ClassAdLogPluginManager :: SetAttribute		4584581	0					
ANR	4584654	Identifier	ClassAdLogPluginManager :: SetAttribute		4584581	0					
ANR	4584655	ArgumentList	key		4584581	1					
ANR	4584656	Argument	key		4584581	0					
ANR	4584657	Identifier	key		4584581	0					
ANR	4584658	Argument	name		4584581	1					
ANR	4584659	Identifier	name		4584581	0					
ANR	4584660	Argument	value		4584581	2					
ANR	4584661	Identifier	value		4584581	0					
ANR	4584662	ReturnStatement	return rval ;	869:1:22098:22109	4584581	7	True				
ANR	4584663	Identifier	rval		4584581	0					
ANR	4584664	ReturnType	int		4584581	1					
ANR	4584665	Identifier	LogSetAttribute :: Play		4584581	2					
ANR	4584666	ParameterList	void * data_structure		4584581	3					
ANR	4584667	Parameter	void * data_structure	855:22:21762:21781	4584581	0	True				
ANR	4584668	ParameterType	void *		4584581	0					
ANR	4584669	Identifier	data_structure		4584581	1					
ANR	4584670	CFGEntryNode	ENTRY		4584581		True				
ANR	4584671	CFGExitNode	EXIT		4584581		True				
ANR	4584672	Symbol	ad		4584581						
ANR	4584673	Symbol	* table		4584581						
ANR	4584674	Symbol	* ad		4584581						
ANR	4584675	Symbol	is_dirty		4584581						
ANR	4584676	Symbol	data_structure		4584581						
ANR	4584677	Symbol	ad -> AssignExpr		4584581						
ANR	4584678	Symbol	name		4584581						
ANR	4584679	Symbol	rval		4584581						
ANR	4584680	Symbol	HashKey		4584581						
ANR	4584681	Symbol	table -> lookup		4584581						
ANR	4584682	Symbol	value		4584581						
ANR	4584683	Symbol	table		4584581						
ANR	4584684	Symbol	key		4584581						
ANR	4584685	Function	LogSetAttribute :: WriteBody	872:0:22114:23007							
ANR	4584686	FunctionDef	LogSetAttribute :: WriteBody (FILE * fp)		4584685	0					
ANR	4584687	CompoundStatement		874:0:22155:23007	4584685	0					
ANR	4584688	IdentifierDeclStatement	"int rval , rval1 , len ;"	875:1:22158:22179	4584685	0	True				
ANR	4584689	IdentifierDecl	rval		4584685	0					
ANR	4584690	IdentifierDeclType	int		4584685	0					
ANR	4584691	Identifier	rval		4584685	1					
ANR	4584692	IdentifierDecl	rval1		4584685	1					
ANR	4584693	IdentifierDeclType	int		4584685	0					
ANR	4584694	Identifier	rval1		4584685	1					
ANR	4584695	IdentifierDecl	len		4584685	2					
ANR	4584696	IdentifierDeclType	int		4584685	0					
ANR	4584697	Identifier	len		4584685	1					
ANR	4584698	IfStatement	"if ( strchr ( key , '\\n' ) || strchr ( name , '\\n' ) || strchr ( value , '\\n' ) )"		4584685	1					
ANR	4584699	Condition	"strchr ( key , '\\n' ) || strchr ( name , '\\n' ) || strchr ( value , '\\n' )"	878:5:22256:22317	4584685	0	True				
ANR	4584700	OrExpression	"strchr ( key , '\\n' ) || strchr ( name , '\\n' ) || strchr ( value , '\\n' )"		4584685	0		||			
ANR	4584701	CallExpression	"strchr ( key , '\\n' )"		4584685	0					
ANR	4584702	Callee	strchr		4584685	0					
ANR	4584703	Identifier	strchr		4584685	0					
ANR	4584704	ArgumentList	key		4584685	1					
ANR	4584705	Argument	key		4584685	0					
ANR	4584706	Identifier	key		4584685	0					
ANR	4584707	Argument	'\\n'		4584685	1					
ANR	4584708	PrimaryExpression	'\\n'		4584685	0					
ANR	4584709	OrExpression	"strchr ( name , '\\n' ) || strchr ( value , '\\n' )"		4584685	1		||			
ANR	4584710	CallExpression	"strchr ( name , '\\n' )"		4584685	0					
ANR	4584711	Callee	strchr		4584685	0					
ANR	4584712	Identifier	strchr		4584685	0					
ANR	4584713	ArgumentList	name		4584685	1					
ANR	4584714	Argument	name		4584685	0					
ANR	4584715	Identifier	name		4584685	0					
ANR	4584716	Argument	'\\n'		4584685	1					
ANR	4584717	PrimaryExpression	'\\n'		4584685	0					
ANR	4584718	CallExpression	"strchr ( value , '\\n' )"		4584685	1					
ANR	4584719	Callee	strchr		4584685	0					
ANR	4584720	Identifier	strchr		4584685	0					
ANR	4584721	ArgumentList	value		4584685	1					
ANR	4584722	Argument	value		4584685	0					
ANR	4584723	Identifier	value		4584685	0					
ANR	4584724	Argument	'\\n'		4584685	1					
ANR	4584725	PrimaryExpression	'\\n'		4584685	0					
ANR	4584726	CompoundStatement		5:70:165:165	4584685	1					
ANR	4584727	ExpressionStatement	"dprintf ( D_ALWAYS , ""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"" , name , value , key )"	879:2:22325:22464	4584685	0	True				
ANR	4584728	CallExpression	"dprintf ( D_ALWAYS , ""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"" , name , value , key )"		4584685	0					
ANR	4584729	Callee	dprintf		4584685	0					
ANR	4584730	Identifier	dprintf		4584685	0					
ANR	4584731	ArgumentList	D_ALWAYS		4584685	1					
ANR	4584732	Argument	D_ALWAYS		4584685	0					
ANR	4584733	Identifier	D_ALWAYS		4584685	0					
ANR	4584734	Argument	"""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"""		4584685	1					
ANR	4584735	PrimaryExpression	"""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"""		4584685	0					
ANR	4584736	Argument	name		4584685	2					
ANR	4584737	Identifier	name		4584685	0					
ANR	4584738	Argument	value		4584685	3					
ANR	4584739	Identifier	value		4584685	0					
ANR	4584740	Argument	key		4584685	4					
ANR	4584741	Identifier	key		4584685	0					
ANR	4584742	ReturnStatement	return - 1 ;	880:2:22468:22477	4584685	1	True				
ANR	4584743	UnaryOperationExpression	- 1		4584685	0					
ANR	4584744	UnaryOperator	-		4584685	0					
ANR	4584745	PrimaryExpression	1		4584685	1					
ANR	4584746	ExpressionStatement	len = strlen ( key )	883:1:22484:22501	4584685	2	True				
ANR	4584747	AssignmentExpression	len = strlen ( key )		4584685	0		=			
ANR	4584748	Identifier	len		4584685	0					
ANR	4584749	CallExpression	strlen ( key )		4584685	1					
ANR	4584750	Callee	strlen		4584685	0					
ANR	4584751	Identifier	strlen		4584685	0					
ANR	4584752	ArgumentList	key		4584685	1					
ANR	4584753	Argument	key		4584685	0					
ANR	4584754	Identifier	key		4584685	0					
ANR	4584755	ExpressionStatement	"rval = fwrite ( key , sizeof ( char ) , len , fp )"	884:1:22504:22545	4584685	3	True				
ANR	4584756	AssignmentExpression	"rval = fwrite ( key , sizeof ( char ) , len , fp )"		4584685	0		=			
ANR	4584757	Identifier	rval		4584685	0					
ANR	4584758	CallExpression	"fwrite ( key , sizeof ( char ) , len , fp )"		4584685	1					
ANR	4584759	Callee	fwrite		4584685	0					
ANR	4584760	Identifier	fwrite		4584685	0					
ANR	4584761	ArgumentList	key		4584685	1					
ANR	4584762	Argument	key		4584685	0					
ANR	4584763	Identifier	key		4584685	0					
ANR	4584764	Argument	sizeof ( char )		4584685	1					
ANR	4584765	SizeofExpression	sizeof ( char )		4584685	0					
ANR	4584766	Sizeof	sizeof		4584685	0					
ANR	4584767	SizeofOperand	char		4584685	1					
ANR	4584768	Argument	len		4584685	2					
ANR	4584769	Identifier	len		4584685	0					
ANR	4584770	Argument	fp		4584685	3					
ANR	4584771	Identifier	fp		4584685	0					
ANR	4584772	IfStatement	if ( rval < len )		4584685	4					
ANR	4584773	Condition	rval < len	885:5:22552:22561	4584685	0	True				
ANR	4584774	RelationalExpression	rval < len		4584685	0		<			
ANR	4584775	Identifier	rval		4584685	0					
ANR	4584776	Identifier	len		4584685	1					
ANR	4584777	CompoundStatement		12:17:408:408	4584685	1					
ANR	4584778	ReturnStatement	return - 1 ;	886:2:22568:22577	4584685	0	True				
ANR	4584779	UnaryOperationExpression	- 1		4584685	0					
ANR	4584780	UnaryOperator	-		4584685	0					
ANR	4584781	PrimaryExpression	1		4584685	1					
ANR	4584782	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	888:1:22583:22622	4584685	5	True				
ANR	4584783	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584685	0		=			
ANR	4584784	Identifier	rval1		4584685	0					
ANR	4584785	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584685	1					
ANR	4584786	Callee	fwrite		4584685	0					
ANR	4584787	Identifier	fwrite		4584685	0					
ANR	4584788	ArgumentList	""" """		4584685	1					
ANR	4584789	Argument	""" """		4584685	0					
ANR	4584790	PrimaryExpression	""" """		4584685	0					
ANR	4584791	Argument	sizeof ( char )		4584685	1					
ANR	4584792	SizeofExpression	sizeof ( char )		4584685	0					
ANR	4584793	Sizeof	sizeof		4584685	0					
ANR	4584794	SizeofOperand	char		4584685	1					
ANR	4584795	Argument	1		4584685	2					
ANR	4584796	PrimaryExpression	1		4584685	0					
ANR	4584797	Argument	fp		4584685	3					
ANR	4584798	Identifier	fp		4584685	0					
ANR	4584799	IfStatement	if ( rval1 < 1 )		4584685	6					
ANR	4584800	Condition	rval1 < 1	889:5:22629:22637	4584685	0	True				
ANR	4584801	RelationalExpression	rval1 < 1		4584685	0		<			
ANR	4584802	Identifier	rval1		4584685	0					
ANR	4584803	PrimaryExpression	1		4584685	1					
ANR	4584804	CompoundStatement		16:16:484:484	4584685	1					
ANR	4584805	ReturnStatement	return - 1 ;	890:2:22644:22653	4584685	0	True				
ANR	4584806	UnaryOperationExpression	- 1		4584685	0					
ANR	4584807	UnaryOperator	-		4584685	0					
ANR	4584808	PrimaryExpression	1		4584685	1					
ANR	4584809	ExpressionStatement	rval1 += rval	892:1:22659:22672	4584685	7	True				
ANR	4584810	AssignmentExpression	rval1 += rval		4584685	0		+=			
ANR	4584811	Identifier	rval1		4584685	0					
ANR	4584812	Identifier	rval		4584685	1					
ANR	4584813	ExpressionStatement	len = strlen ( name )	893:1:22675:22693	4584685	8	True				
ANR	4584814	AssignmentExpression	len = strlen ( name )		4584685	0		=			
ANR	4584815	Identifier	len		4584685	0					
ANR	4584816	CallExpression	strlen ( name )		4584685	1					
ANR	4584817	Callee	strlen		4584685	0					
ANR	4584818	Identifier	strlen		4584685	0					
ANR	4584819	ArgumentList	name		4584685	1					
ANR	4584820	Argument	name		4584685	0					
ANR	4584821	Identifier	name		4584685	0					
ANR	4584822	ExpressionStatement	"rval = fwrite ( name , sizeof ( char ) , len , fp )"	894:1:22696:22738	4584685	9	True				
ANR	4584823	AssignmentExpression	"rval = fwrite ( name , sizeof ( char ) , len , fp )"		4584685	0		=			
ANR	4584824	Identifier	rval		4584685	0					
ANR	4584825	CallExpression	"fwrite ( name , sizeof ( char ) , len , fp )"		4584685	1					
ANR	4584826	Callee	fwrite		4584685	0					
ANR	4584827	Identifier	fwrite		4584685	0					
ANR	4584828	ArgumentList	name		4584685	1					
ANR	4584829	Argument	name		4584685	0					
ANR	4584830	Identifier	name		4584685	0					
ANR	4584831	Argument	sizeof ( char )		4584685	1					
ANR	4584832	SizeofExpression	sizeof ( char )		4584685	0					
ANR	4584833	Sizeof	sizeof		4584685	0					
ANR	4584834	SizeofOperand	char		4584685	1					
ANR	4584835	Argument	len		4584685	2					
ANR	4584836	Identifier	len		4584685	0					
ANR	4584837	Argument	fp		4584685	3					
ANR	4584838	Identifier	fp		4584685	0					
ANR	4584839	IfStatement	if ( rval < len )		4584685	10					
ANR	4584840	Condition	rval < len	895:5:22745:22754	4584685	0	True				
ANR	4584841	RelationalExpression	rval < len		4584685	0		<			
ANR	4584842	Identifier	rval		4584685	0					
ANR	4584843	Identifier	len		4584685	1					
ANR	4584844	CompoundStatement		22:17:601:601	4584685	1					
ANR	4584845	ReturnStatement	return - 1 ;	896:2:22761:22770	4584685	0	True				
ANR	4584846	UnaryOperationExpression	- 1		4584685	0					
ANR	4584847	UnaryOperator	-		4584685	0					
ANR	4584848	PrimaryExpression	1		4584685	1					
ANR	4584849	ExpressionStatement	rval1 += rval	898:1:22776:22789	4584685	11	True				
ANR	4584850	AssignmentExpression	rval1 += rval		4584685	0		+=			
ANR	4584851	Identifier	rval1		4584685	0					
ANR	4584852	Identifier	rval		4584685	1					
ANR	4584853	ExpressionStatement	"rval = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	899:1:22792:22831	4584685	12	True				
ANR	4584854	AssignmentExpression	"rval = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584685	0		=			
ANR	4584855	Identifier	rval		4584685	0					
ANR	4584856	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4584685	1					
ANR	4584857	Callee	fwrite		4584685	0					
ANR	4584858	Identifier	fwrite		4584685	0					
ANR	4584859	ArgumentList	""" """		4584685	1					
ANR	4584860	Argument	""" """		4584685	0					
ANR	4584861	PrimaryExpression	""" """		4584685	0					
ANR	4584862	Argument	sizeof ( char )		4584685	1					
ANR	4584863	SizeofExpression	sizeof ( char )		4584685	0					
ANR	4584864	Sizeof	sizeof		4584685	0					
ANR	4584865	SizeofOperand	char		4584685	1					
ANR	4584866	Argument	1		4584685	2					
ANR	4584867	PrimaryExpression	1		4584685	0					
ANR	4584868	Argument	fp		4584685	3					
ANR	4584869	Identifier	fp		4584685	0					
ANR	4584870	IfStatement	if ( rval < 1 )		4584685	13					
ANR	4584871	Condition	rval < 1	900:5:22838:22845	4584685	0	True				
ANR	4584872	RelationalExpression	rval < 1		4584685	0		<			
ANR	4584873	Identifier	rval		4584685	0					
ANR	4584874	PrimaryExpression	1		4584685	1					
ANR	4584875	CompoundStatement		27:15:692:692	4584685	1					
ANR	4584876	ReturnStatement	return - 1 ;	901:2:22852:22861	4584685	0	True				
ANR	4584877	UnaryOperationExpression	- 1		4584685	0					
ANR	4584878	UnaryOperator	-		4584685	0					
ANR	4584879	PrimaryExpression	1		4584685	1					
ANR	4584880	ExpressionStatement	rval1 += rval	903:1:22867:22880	4584685	14	True				
ANR	4584881	AssignmentExpression	rval1 += rval		4584685	0		+=			
ANR	4584882	Identifier	rval1		4584685	0					
ANR	4584883	Identifier	rval		4584685	1					
ANR	4584884	ExpressionStatement	len = strlen ( value )	904:1:22883:22902	4584685	15	True				
ANR	4584885	AssignmentExpression	len = strlen ( value )		4584685	0		=			
ANR	4584886	Identifier	len		4584685	0					
ANR	4584887	CallExpression	strlen ( value )		4584685	1					
ANR	4584888	Callee	strlen		4584685	0					
ANR	4584889	Identifier	strlen		4584685	0					
ANR	4584890	ArgumentList	value		4584685	1					
ANR	4584891	Argument	value		4584685	0					
ANR	4584892	Identifier	value		4584685	0					
ANR	4584893	ExpressionStatement	"rval = fwrite ( value , sizeof ( char ) , len , fp )"	905:1:22905:22948	4584685	16	True				
ANR	4584894	AssignmentExpression	"rval = fwrite ( value , sizeof ( char ) , len , fp )"		4584685	0		=			
ANR	4584895	Identifier	rval		4584685	0					
ANR	4584896	CallExpression	"fwrite ( value , sizeof ( char ) , len , fp )"		4584685	1					
ANR	4584897	Callee	fwrite		4584685	0					
ANR	4584898	Identifier	fwrite		4584685	0					
ANR	4584899	ArgumentList	value		4584685	1					
ANR	4584900	Argument	value		4584685	0					
ANR	4584901	Identifier	value		4584685	0					
ANR	4584902	Argument	sizeof ( char )		4584685	1					
ANR	4584903	SizeofExpression	sizeof ( char )		4584685	0					
ANR	4584904	Sizeof	sizeof		4584685	0					
ANR	4584905	SizeofOperand	char		4584685	1					
ANR	4584906	Argument	len		4584685	2					
ANR	4584907	Identifier	len		4584685	0					
ANR	4584908	Argument	fp		4584685	3					
ANR	4584909	Identifier	fp		4584685	0					
ANR	4584910	IfStatement	if ( rval < len )		4584685	17					
ANR	4584911	Condition	rval < len	906:5:22955:22964	4584685	0	True				
ANR	4584912	RelationalExpression	rval < len		4584685	0		<			
ANR	4584913	Identifier	rval		4584685	0					
ANR	4584914	Identifier	len		4584685	1					
ANR	4584915	CompoundStatement		33:17:811:811	4584685	1					
ANR	4584916	ReturnStatement	return - 1 ;	907:2:22971:22980	4584685	0	True				
ANR	4584917	UnaryOperationExpression	- 1		4584685	0					
ANR	4584918	UnaryOperator	-		4584685	0					
ANR	4584919	PrimaryExpression	1		4584685	1					
ANR	4584920	ReturnStatement	return rval1 + rval ;	909:1:22986:23005	4584685	18	True				
ANR	4584921	AdditiveExpression	rval1 + rval		4584685	0		+			
ANR	4584922	Identifier	rval1		4584685	0					
ANR	4584923	Identifier	rval		4584685	1					
ANR	4584924	ReturnType	int		4584685	1					
ANR	4584925	Identifier	LogSetAttribute :: WriteBody		4584685	2					
ANR	4584926	ParameterList	FILE * fp		4584685	3					
ANR	4584927	Parameter	FILE * fp	873:27:22145:22152	4584685	0	True				
ANR	4584928	ParameterType	FILE *		4584685	0					
ANR	4584929	Identifier	fp		4584685	1					
ANR	4584930	CFGEntryNode	ENTRY		4584685		True				
ANR	4584931	CFGExitNode	EXIT		4584685		True				
ANR	4584932	Symbol	strlen		4584685						
ANR	4584933	Symbol	len		4584685						
ANR	4584934	Symbol	name		4584685						
ANR	4584935	Symbol	D_ALWAYS		4584685						
ANR	4584936	Symbol	strchr		4584685						
ANR	4584937	Symbol	fwrite		4584685						
ANR	4584938	Symbol	fp		4584685						
ANR	4584939	Symbol	rval		4584685						
ANR	4584940	Symbol	value		4584685						
ANR	4584941	Symbol	key		4584685						
ANR	4584942	Symbol	rval1		4584685						
ANR	4584943	Function	LogSetAttribute :: ReadBody	912:0:23010:23342							
ANR	4584944	FunctionDef	LogSetAttribute :: ReadBody (FILE * fp)		4584943	0					
ANR	4584945	CompoundStatement		914:0:23050:23342	4584943	0					
ANR	4584946	IdentifierDeclStatement	"int rval , rval1 ;"	915:1:23053:23068	4584943	0	True				
ANR	4584947	IdentifierDecl	rval		4584943	0					
ANR	4584948	IdentifierDeclType	int		4584943	0					
ANR	4584949	Identifier	rval		4584943	1					
ANR	4584950	IdentifierDecl	rval1		4584943	1					
ANR	4584951	IdentifierDeclType	int		4584943	0					
ANR	4584952	Identifier	rval1		4584943	1					
ANR	4584953	ExpressionStatement	free ( key )	917:1:23072:23081	4584943	1	True				
ANR	4584954	CallExpression	free ( key )		4584943	0					
ANR	4584955	Callee	free		4584943	0					
ANR	4584956	Identifier	free		4584943	0					
ANR	4584957	ArgumentList	key		4584943	1					
ANR	4584958	Argument	key		4584943	0					
ANR	4584959	Identifier	key		4584943	0					
ANR	4584960	ExpressionStatement	"rval1 = readword ( fp , key )"	918:1:23084:23109	4584943	2	True				
ANR	4584961	AssignmentExpression	"rval1 = readword ( fp , key )"		4584943	0		=			
ANR	4584962	Identifier	rval1		4584943	0					
ANR	4584963	CallExpression	"readword ( fp , key )"		4584943	1					
ANR	4584964	Callee	readword		4584943	0					
ANR	4584965	Identifier	readword		4584943	0					
ANR	4584966	ArgumentList	fp		4584943	1					
ANR	4584967	Argument	fp		4584943	0					
ANR	4584968	Identifier	fp		4584943	0					
ANR	4584969	Argument	key		4584943	1					
ANR	4584970	Identifier	key		4584943	0					
ANR	4584971	IfStatement	if ( rval1 < 0 )		4584943	3					
ANR	4584972	Condition	rval1 < 0	919:5:23116:23124	4584943	0	True				
ANR	4584973	RelationalExpression	rval1 < 0		4584943	0		<			
ANR	4584974	Identifier	rval1		4584943	0					
ANR	4584975	PrimaryExpression	0		4584943	1					
ANR	4584976	CompoundStatement		6:16:76:76	4584943	1					
ANR	4584977	ReturnStatement	return rval1 ;	920:2:23131:23143	4584943	0	True				
ANR	4584978	Identifier	rval1		4584943	0					
ANR	4584979	ExpressionStatement	free ( name )	923:1:23150:23160	4584943	4	True				
ANR	4584980	CallExpression	free ( name )		4584943	0					
ANR	4584981	Callee	free		4584943	0					
ANR	4584982	Identifier	free		4584943	0					
ANR	4584983	ArgumentList	name		4584943	1					
ANR	4584984	Argument	name		4584943	0					
ANR	4584985	Identifier	name		4584943	0					
ANR	4584986	ExpressionStatement	"rval = readword ( fp , name )"	924:1:23163:23188	4584943	5	True				
ANR	4584987	AssignmentExpression	"rval = readword ( fp , name )"		4584943	0		=			
ANR	4584988	Identifier	rval		4584943	0					
ANR	4584989	CallExpression	"readword ( fp , name )"		4584943	1					
ANR	4584990	Callee	readword		4584943	0					
ANR	4584991	Identifier	readword		4584943	0					
ANR	4584992	ArgumentList	fp		4584943	1					
ANR	4584993	Argument	fp		4584943	0					
ANR	4584994	Identifier	fp		4584943	0					
ANR	4584995	Argument	name		4584943	1					
ANR	4584996	Identifier	name		4584943	0					
ANR	4584997	IfStatement	if ( rval < 0 )		4584943	6					
ANR	4584998	Condition	rval < 0	925:5:23195:23202	4584943	0	True				
ANR	4584999	RelationalExpression	rval < 0		4584943	0		<			
ANR	4585000	Identifier	rval		4584943	0					
ANR	4585001	PrimaryExpression	0		4584943	1					
ANR	4585002	CompoundStatement		12:15:154:154	4584943	1					
ANR	4585003	ReturnStatement	return rval ;	926:2:23209:23220	4584943	0	True				
ANR	4585004	Identifier	rval		4584943	0					
ANR	4585005	ExpressionStatement	rval1 += rval	928:1:23226:23239	4584943	7	True				
ANR	4585006	AssignmentExpression	rval1 += rval		4584943	0		+=			
ANR	4585007	Identifier	rval1		4584943	0					
ANR	4585008	Identifier	rval		4584943	1					
ANR	4585009	ExpressionStatement	free ( value )	930:1:23243:23254	4584943	8	True				
ANR	4585010	CallExpression	free ( value )		4584943	0					
ANR	4585011	Callee	free		4584943	0					
ANR	4585012	Identifier	free		4584943	0					
ANR	4585013	ArgumentList	value		4584943	1					
ANR	4585014	Argument	value		4584943	0					
ANR	4585015	Identifier	value		4584943	0					
ANR	4585016	ExpressionStatement	"rval = readline ( fp , value )"	931:1:23257:23283	4584943	9	True				
ANR	4585017	AssignmentExpression	"rval = readline ( fp , value )"		4584943	0		=			
ANR	4585018	Identifier	rval		4584943	0					
ANR	4585019	CallExpression	"readline ( fp , value )"		4584943	1					
ANR	4585020	Callee	readline		4584943	0					
ANR	4585021	Identifier	readline		4584943	0					
ANR	4585022	ArgumentList	fp		4584943	1					
ANR	4585023	Argument	fp		4584943	0					
ANR	4585024	Identifier	fp		4584943	0					
ANR	4585025	Argument	value		4584943	1					
ANR	4585026	Identifier	value		4584943	0					
ANR	4585027	IfStatement	if ( rval < 0 )		4584943	10					
ANR	4585028	Condition	rval < 0	932:5:23290:23297	4584943	0	True				
ANR	4585029	RelationalExpression	rval < 0		4584943	0		<			
ANR	4585030	Identifier	rval		4584943	0					
ANR	4585031	PrimaryExpression	0		4584943	1					
ANR	4585032	CompoundStatement		19:15:249:249	4584943	1					
ANR	4585033	ReturnStatement	return rval ;	933:2:23304:23315	4584943	0	True				
ANR	4585034	Identifier	rval		4584943	0					
ANR	4585035	ReturnStatement	return rval + rval1 ;	935:1:23321:23340	4584943	11	True				
ANR	4585036	AdditiveExpression	rval + rval1		4584943	0		+			
ANR	4585037	Identifier	rval		4584943	0					
ANR	4585038	Identifier	rval1		4584943	1					
ANR	4585039	ReturnType	int		4584943	1					
ANR	4585040	Identifier	LogSetAttribute :: ReadBody		4584943	2					
ANR	4585041	ParameterList	FILE * fp		4584943	3					
ANR	4585042	Parameter	FILE * fp	913:26:23040:23047	4584943	0	True				
ANR	4585043	ParameterType	FILE *		4584943	0					
ANR	4585044	Identifier	fp		4584943	1					
ANR	4585045	CFGEntryNode	ENTRY		4584943		True				
ANR	4585046	CFGExitNode	EXIT		4584943		True				
ANR	4585047	Symbol	name		4584943						
ANR	4585048	Symbol	fp		4584943						
ANR	4585049	Symbol	rval		4584943						
ANR	4585050	Symbol	readword		4584943						
ANR	4585051	Symbol	value		4584943						
ANR	4585052	Symbol	key		4584943						
ANR	4585053	Symbol	rval1		4584943						
ANR	4585054	Symbol	readline		4584943						
ANR	4585055	Function	LogDeleteAttribute :: LogDeleteAttribute	939:0:23346:23494							
ANR	4585056	FunctionDef	"LogDeleteAttribute :: LogDeleteAttribute (const char * k , const char * n)"		4585055	0					
ANR	4585057	CompoundStatement		940:0:23415:23494	4585055	0					
ANR	4585058	ExpressionStatement	op_type = CondorLogOp_DeleteAttribute	941:1:23418:23455	4585055	0	True				
ANR	4585059	AssignmentExpression	op_type = CondorLogOp_DeleteAttribute		4585055	0		=			
ANR	4585060	Identifier	op_type		4585055	0					
ANR	4585061	Identifier	CondorLogOp_DeleteAttribute		4585055	1					
ANR	4585062	ExpressionStatement	key = strdup ( k )	942:1:23458:23473	4585055	1	True				
ANR	4585063	AssignmentExpression	key = strdup ( k )		4585055	0		=			
ANR	4585064	Identifier	key		4585055	0					
ANR	4585065	CallExpression	strdup ( k )		4585055	1					
ANR	4585066	Callee	strdup		4585055	0					
ANR	4585067	Identifier	strdup		4585055	0					
ANR	4585068	ArgumentList	k		4585055	1					
ANR	4585069	Argument	k		4585055	0					
ANR	4585070	Identifier	k		4585055	0					
ANR	4585071	ExpressionStatement	name = strdup ( n )	943:1:23476:23492	4585055	2	True				
ANR	4585072	AssignmentExpression	name = strdup ( n )		4585055	0		=			
ANR	4585073	Identifier	name		4585055	0					
ANR	4585074	CallExpression	strdup ( n )		4585055	1					
ANR	4585075	Callee	strdup		4585055	0					
ANR	4585076	Identifier	strdup		4585055	0					
ANR	4585077	ArgumentList	n		4585055	1					
ANR	4585078	Argument	n		4585055	0					
ANR	4585079	Identifier	n		4585055	0					
ANR	4585080	Identifier	LogDeleteAttribute :: LogDeleteAttribute		4585055	1					
ANR	4585081	ParameterList	"const char * k , const char * n"		4585055	2					
ANR	4585082	Parameter	const char * k	939:39:23385:23397	4585055	0	True				
ANR	4585083	ParameterType	const char *		4585055	0					
ANR	4585084	Identifier	k		4585055	1					
ANR	4585085	Parameter	const char * n	939:54:23400:23412	4585055	1	True				
ANR	4585086	ParameterType	const char *		4585055	0					
ANR	4585087	Identifier	n		4585055	1					
ANR	4585088	CFGEntryNode	ENTRY		4585055		True				
ANR	4585089	CFGExitNode	EXIT		4585055		True				
ANR	4585090	Symbol	CondorLogOp_DeleteAttribute		4585055						
ANR	4585091	Symbol	name		4585055						
ANR	4585092	Symbol	k		4585055						
ANR	4585093	Symbol	op_type		4585055						
ANR	4585094	Symbol	strdup		4585055						
ANR	4585095	Symbol	n		4585055						
ANR	4585096	Symbol	key		4585055						
ANR	4585097	Function	LogDeleteAttribute :: ~LogDeleteAttribute	947:0:23498:23567							
ANR	4585098	FunctionDef	LogDeleteAttribute :: ~LogDeleteAttribute ()		4585097	0					
ANR	4585099	CompoundStatement		948:0:23540:23567	4585097	0					
ANR	4585100	ExpressionStatement	free ( key )	949:1:23543:23552	4585097	0	True				
ANR	4585101	CallExpression	free ( key )		4585097	0					
ANR	4585102	Callee	free		4585097	0					
ANR	4585103	Identifier	free		4585097	0					
ANR	4585104	ArgumentList	key		4585097	1					
ANR	4585105	Argument	key		4585097	0					
ANR	4585106	Identifier	key		4585097	0					
ANR	4585107	ExpressionStatement	free ( name )	950:1:23555:23565	4585097	1	True				
ANR	4585108	CallExpression	free ( name )		4585097	0					
ANR	4585109	Callee	free		4585097	0					
ANR	4585110	Identifier	free		4585097	0					
ANR	4585111	ArgumentList	name		4585097	1					
ANR	4585112	Argument	name		4585097	0					
ANR	4585113	Identifier	name		4585097	0					
ANR	4585114	Identifier	LogDeleteAttribute :: ~LogDeleteAttribute		4585097	1					
ANR	4585115	ParameterList			4585097	2					
ANR	4585116	CFGEntryNode	ENTRY		4585097		True				
ANR	4585117	CFGExitNode	EXIT		4585097		True				
ANR	4585118	Symbol	name		4585097						
ANR	4585119	Symbol	key		4585097						
ANR	4585120	Function	LogDeleteAttribute :: Play	954:0:23571:23874							
ANR	4585121	FunctionDef	LogDeleteAttribute :: Play (void * data_structure)		4585120	0					
ANR	4585122	CompoundStatement		956:0:23622:23874	4585120	0					
ANR	4585123	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	957:1:23625:23685	4585120	0	True				
ANR	4585124	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		4585120	0					
ANR	4585125	IdentifierDeclType	ClassAdHashTable *		4585120	0					
ANR	4585126	Identifier	table		4585120	1					
ANR	4585127	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		4585120	2		=			
ANR	4585128	Identifier	table		4585120	0					
ANR	4585129	CastExpression	( ClassAdHashTable * ) data_structure		4585120	1					
ANR	4585130	CastTarget	ClassAdHashTable *		4585120	0					
ANR	4585131	Identifier	data_structure		4585120	1					
ANR	4585132	IdentifierDeclStatement	ClassAd * ad = 0 ;	958:1:23688:23703	4585120	1	True				
ANR	4585133	IdentifierDecl	* ad = 0		4585120	0					
ANR	4585134	IdentifierDeclType	ClassAd *		4585120	0					
ANR	4585135	Identifier	ad		4585120	1					
ANR	4585136	AssignmentExpression	* ad = 0		4585120	2		=			
ANR	4585137	Identifier	ad		4585120	0					
ANR	4585138	PrimaryExpression	0		4585120	1					
ANR	4585139	IfStatement	"if ( table -> lookup ( HashKey ( key ) , ad ) < 0 )"		4585120	2					
ANR	4585140	Condition	"table -> lookup ( HashKey ( key ) , ad ) < 0"	959:5:23710:23744	4585120	0	True				
ANR	4585141	RelationalExpression	"table -> lookup ( HashKey ( key ) , ad ) < 0"		4585120	0		<			
ANR	4585142	CallExpression	"table -> lookup ( HashKey ( key ) , ad )"		4585120	0					
ANR	4585143	Callee	table -> lookup		4585120	0					
ANR	4585144	PtrMemberAccess	table -> lookup		4585120	0					
ANR	4585145	Identifier	table		4585120	0					
ANR	4585146	Identifier	lookup		4585120	1					
ANR	4585147	ArgumentList	HashKey ( key )		4585120	1					
ANR	4585148	Argument	HashKey ( key )		4585120	0					
ANR	4585149	CallExpression	HashKey ( key )		4585120	0					
ANR	4585150	Callee	HashKey		4585120	0					
ANR	4585151	Identifier	HashKey		4585120	0					
ANR	4585152	ArgumentList	key		4585120	1					
ANR	4585153	Argument	key		4585120	0					
ANR	4585154	Identifier	key		4585120	0					
ANR	4585155	Argument	ad		4585120	1					
ANR	4585156	Identifier	ad		4585120	0					
ANR	4585157	PrimaryExpression	0		4585120	1					
ANR	4585158	ReturnStatement	return - 1 ;	960:2:23749:23758	4585120	1	True				
ANR	4585159	UnaryOperationExpression	- 1		4585120	0					
ANR	4585160	UnaryOperator	-		4585120	0					
ANR	4585161	PrimaryExpression	1		4585120	1					
ANR	4585162	ExpressionStatement	"ClassAdLogPluginManager :: DeleteAttribute ( key , name )"	963:1:23787:23838	4585120	3	True				
ANR	4585163	CallExpression	"ClassAdLogPluginManager :: DeleteAttribute ( key , name )"		4585120	0					
ANR	4585164	Callee	ClassAdLogPluginManager :: DeleteAttribute		4585120	0					
ANR	4585165	Identifier	ClassAdLogPluginManager :: DeleteAttribute		4585120	0					
ANR	4585166	ArgumentList	key		4585120	1					
ANR	4585167	Argument	key		4585120	0					
ANR	4585168	Identifier	key		4585120	0					
ANR	4585169	Argument	name		4585120	1					
ANR	4585170	Identifier	name		4585120	0					
ANR	4585171	ReturnStatement	return ad -> Delete ( name ) ;	966:1:23849:23872	4585120	4	True				
ANR	4585172	CallExpression	ad -> Delete ( name )		4585120	0					
ANR	4585173	Callee	ad -> Delete		4585120	0					
ANR	4585174	PtrMemberAccess	ad -> Delete		4585120	0					
ANR	4585175	Identifier	ad		4585120	0					
ANR	4585176	Identifier	Delete		4585120	1					
ANR	4585177	ArgumentList	name		4585120	1					
ANR	4585178	Argument	name		4585120	0					
ANR	4585179	Identifier	name		4585120	0					
ANR	4585180	ReturnType	int		4585120	1					
ANR	4585181	Identifier	LogDeleteAttribute :: Play		4585120	2					
ANR	4585182	ParameterList	void * data_structure		4585120	3					
ANR	4585183	Parameter	void * data_structure	955:25:23600:23619	4585120	0	True				
ANR	4585184	ParameterType	void *		4585120	0					
ANR	4585185	Identifier	data_structure		4585120	1					
ANR	4585186	CFGEntryNode	ENTRY		4585120		True				
ANR	4585187	CFGExitNode	EXIT		4585120		True				
ANR	4585188	Symbol	data_structure		4585120						
ANR	4585189	Symbol	ad		4585120						
ANR	4585190	Symbol	name		4585120						
ANR	4585191	Symbol	* table		4585120						
ANR	4585192	Symbol	HashKey		4585120						
ANR	4585193	Symbol	* ad		4585120						
ANR	4585194	Symbol	ad -> Delete		4585120						
ANR	4585195	Symbol	table -> lookup		4585120						
ANR	4585196	Symbol	table		4585120						
ANR	4585197	Symbol	key		4585120						
ANR	4585198	Function	LogDeleteAttribute :: WriteBody	969:0:23877:24263							
ANR	4585199	FunctionDef	LogDeleteAttribute :: WriteBody (FILE * fp)		4585198	0					
ANR	4585200	CompoundStatement		971:0:23921:24263	4585198	0					
ANR	4585201	IdentifierDeclStatement	"int rval , rval1 , len ;"	972:1:23924:23945	4585198	0	True				
ANR	4585202	IdentifierDecl	rval		4585198	0					
ANR	4585203	IdentifierDeclType	int		4585198	0					
ANR	4585204	Identifier	rval		4585198	1					
ANR	4585205	IdentifierDecl	rval1		4585198	1					
ANR	4585206	IdentifierDeclType	int		4585198	0					
ANR	4585207	Identifier	rval1		4585198	1					
ANR	4585208	IdentifierDecl	len		4585198	2					
ANR	4585209	IdentifierDeclType	int		4585198	0					
ANR	4585210	Identifier	len		4585198	1					
ANR	4585211	ExpressionStatement	len = strlen ( key )	974:1:23949:23966	4585198	1	True				
ANR	4585212	AssignmentExpression	len = strlen ( key )		4585198	0		=			
ANR	4585213	Identifier	len		4585198	0					
ANR	4585214	CallExpression	strlen ( key )		4585198	1					
ANR	4585215	Callee	strlen		4585198	0					
ANR	4585216	Identifier	strlen		4585198	0					
ANR	4585217	ArgumentList	key		4585198	1					
ANR	4585218	Argument	key		4585198	0					
ANR	4585219	Identifier	key		4585198	0					
ANR	4585220	ExpressionStatement	"rval = fwrite ( key , sizeof ( char ) , len , fp )"	975:1:23969:24010	4585198	2	True				
ANR	4585221	AssignmentExpression	"rval = fwrite ( key , sizeof ( char ) , len , fp )"		4585198	0		=			
ANR	4585222	Identifier	rval		4585198	0					
ANR	4585223	CallExpression	"fwrite ( key , sizeof ( char ) , len , fp )"		4585198	1					
ANR	4585224	Callee	fwrite		4585198	0					
ANR	4585225	Identifier	fwrite		4585198	0					
ANR	4585226	ArgumentList	key		4585198	1					
ANR	4585227	Argument	key		4585198	0					
ANR	4585228	Identifier	key		4585198	0					
ANR	4585229	Argument	sizeof ( char )		4585198	1					
ANR	4585230	SizeofExpression	sizeof ( char )		4585198	0					
ANR	4585231	Sizeof	sizeof		4585198	0					
ANR	4585232	SizeofOperand	char		4585198	1					
ANR	4585233	Argument	len		4585198	2					
ANR	4585234	Identifier	len		4585198	0					
ANR	4585235	Argument	fp		4585198	3					
ANR	4585236	Identifier	fp		4585198	0					
ANR	4585237	IfStatement	if ( rval < len )		4585198	3					
ANR	4585238	Condition	rval < len	976:5:24017:24026	4585198	0	True				
ANR	4585239	RelationalExpression	rval < len		4585198	0		<			
ANR	4585240	Identifier	rval		4585198	0					
ANR	4585241	Identifier	len		4585198	1					
ANR	4585242	CompoundStatement		6:17:107:107	4585198	1					
ANR	4585243	ReturnStatement	return - 1 ;	977:2:24033:24042	4585198	0	True				
ANR	4585244	UnaryOperationExpression	- 1		4585198	0					
ANR	4585245	UnaryOperator	-		4585198	0					
ANR	4585246	PrimaryExpression	1		4585198	1					
ANR	4585247	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	979:1:24048:24088	4585198	4	True				
ANR	4585248	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4585198	0		=			
ANR	4585249	Identifier	rval1		4585198	0					
ANR	4585250	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		4585198	1					
ANR	4585251	Callee	fwrite		4585198	0					
ANR	4585252	Identifier	fwrite		4585198	0					
ANR	4585253	ArgumentList	""" """		4585198	1					
ANR	4585254	Argument	""" """		4585198	0					
ANR	4585255	PrimaryExpression	""" """		4585198	0					
ANR	4585256	Argument	sizeof ( char )		4585198	1					
ANR	4585257	SizeofExpression	sizeof ( char )		4585198	0					
ANR	4585258	Sizeof	sizeof		4585198	0					
ANR	4585259	SizeofOperand	char		4585198	1					
ANR	4585260	Argument	1		4585198	2					
ANR	4585261	PrimaryExpression	1		4585198	0					
ANR	4585262	Argument	fp		4585198	3					
ANR	4585263	Identifier	fp		4585198	0					
ANR	4585264	IfStatement	if ( rval1 < 1 )		4585198	5					
ANR	4585265	Condition	rval1 < 1	980:5:24095:24103	4585198	0	True				
ANR	4585266	RelationalExpression	rval1 < 1		4585198	0		<			
ANR	4585267	Identifier	rval1		4585198	0					
ANR	4585268	PrimaryExpression	1		4585198	1					
ANR	4585269	CompoundStatement		10:16:184:184	4585198	1					
ANR	4585270	ReturnStatement	return - 1 ;	981:2:24110:24119	4585198	0	True				
ANR	4585271	UnaryOperationExpression	- 1		4585198	0					
ANR	4585272	UnaryOperator	-		4585198	0					
ANR	4585273	PrimaryExpression	1		4585198	1					
ANR	4585274	ExpressionStatement	rval1 += rval	983:1:24125:24138	4585198	6	True				
ANR	4585275	AssignmentExpression	rval1 += rval		4585198	0		+=			
ANR	4585276	Identifier	rval1		4585198	0					
ANR	4585277	Identifier	rval		4585198	1					
ANR	4585278	ExpressionStatement	len = strlen ( name )	984:1:24141:24159	4585198	7	True				
ANR	4585279	AssignmentExpression	len = strlen ( name )		4585198	0		=			
ANR	4585280	Identifier	len		4585198	0					
ANR	4585281	CallExpression	strlen ( name )		4585198	1					
ANR	4585282	Callee	strlen		4585198	0					
ANR	4585283	Identifier	strlen		4585198	0					
ANR	4585284	ArgumentList	name		4585198	1					
ANR	4585285	Argument	name		4585198	0					
ANR	4585286	Identifier	name		4585198	0					
ANR	4585287	ExpressionStatement	"rval = fwrite ( name , sizeof ( char ) , len , fp )"	985:1:24162:24204	4585198	8	True				
ANR	4585288	AssignmentExpression	"rval = fwrite ( name , sizeof ( char ) , len , fp )"		4585198	0		=			
ANR	4585289	Identifier	rval		4585198	0					
ANR	4585290	CallExpression	"fwrite ( name , sizeof ( char ) , len , fp )"		4585198	1					
ANR	4585291	Callee	fwrite		4585198	0					
ANR	4585292	Identifier	fwrite		4585198	0					
ANR	4585293	ArgumentList	name		4585198	1					
ANR	4585294	Argument	name		4585198	0					
ANR	4585295	Identifier	name		4585198	0					
ANR	4585296	Argument	sizeof ( char )		4585198	1					
ANR	4585297	SizeofExpression	sizeof ( char )		4585198	0					
ANR	4585298	Sizeof	sizeof		4585198	0					
ANR	4585299	SizeofOperand	char		4585198	1					
ANR	4585300	Argument	len		4585198	2					
ANR	4585301	Identifier	len		4585198	0					
ANR	4585302	Argument	fp		4585198	3					
ANR	4585303	Identifier	fp		4585198	0					
ANR	4585304	IfStatement	if ( rval < len )		4585198	9					
ANR	4585305	Condition	rval < len	986:5:24211:24220	4585198	0	True				
ANR	4585306	RelationalExpression	rval < len		4585198	0		<			
ANR	4585307	Identifier	rval		4585198	0					
ANR	4585308	Identifier	len		4585198	1					
ANR	4585309	CompoundStatement		16:17:301:301	4585198	1					
ANR	4585310	ReturnStatement	return - 1 ;	987:2:24227:24236	4585198	0	True				
ANR	4585311	UnaryOperationExpression	- 1		4585198	0					
ANR	4585312	UnaryOperator	-		4585198	0					
ANR	4585313	PrimaryExpression	1		4585198	1					
ANR	4585314	ReturnStatement	return rval1 + rval ;	989:1:24242:24261	4585198	10	True				
ANR	4585315	AdditiveExpression	rval1 + rval		4585198	0		+			
ANR	4585316	Identifier	rval1		4585198	0					
ANR	4585317	Identifier	rval		4585198	1					
ANR	4585318	ReturnType	int		4585198	1					
ANR	4585319	Identifier	LogDeleteAttribute :: WriteBody		4585198	2					
ANR	4585320	ParameterList	FILE * fp		4585198	3					
ANR	4585321	Parameter	FILE * fp	970:30:23911:23918	4585198	0	True				
ANR	4585322	ParameterType	FILE *		4585198	0					
ANR	4585323	Identifier	fp		4585198	1					
ANR	4585324	CFGEntryNode	ENTRY		4585198		True				
ANR	4585325	CFGExitNode	EXIT		4585198		True				
ANR	4585326	Symbol	strlen		4585198						
ANR	4585327	Symbol	len		4585198						
ANR	4585328	Symbol	name		4585198						
ANR	4585329	Symbol	fwrite		4585198						
ANR	4585330	Symbol	fp		4585198						
ANR	4585331	Symbol	rval		4585198						
ANR	4585332	Symbol	key		4585198						
ANR	4585333	Symbol	rval1		4585198						
ANR	4585334	Function	LogBeginTransaction :: ReadBody	992:0:24266:24436							
ANR	4585335	FunctionDef	LogBeginTransaction :: ReadBody (FILE * fp)		4585334	0					
ANR	4585336	CompoundStatement		994:0:24311:24436	4585334	0					
ANR	4585337	IdentifierDeclStatement	char ch ;	995:1:24314:24322	4585334	0	True				
ANR	4585338	IdentifierDecl	ch		4585334	0					
ANR	4585339	IdentifierDeclType	char		4585334	0					
ANR	4585340	Identifier	ch		4585334	1					
ANR	4585341	IdentifierDeclStatement	"int rval = fread ( & ch , sizeof ( char ) , 1 , fp ) ;"	996:1:24325:24369	4585334	1	True				
ANR	4585342	IdentifierDecl	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		4585334	0					
ANR	4585343	IdentifierDeclType	int		4585334	0					
ANR	4585344	Identifier	rval		4585334	1					
ANR	4585345	AssignmentExpression	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		4585334	2		=			
ANR	4585346	Identifier	rval		4585334	0					
ANR	4585347	CallExpression	"fread ( & ch , sizeof ( char ) , 1 , fp )"		4585334	1					
ANR	4585348	Callee	fread		4585334	0					
ANR	4585349	Identifier	fread		4585334	0					
ANR	4585350	ArgumentList	& ch		4585334	1					
ANR	4585351	Argument	& ch		4585334	0					
ANR	4585352	UnaryOperationExpression	& ch		4585334	0					
ANR	4585353	UnaryOperator	&		4585334	0					
ANR	4585354	Identifier	ch		4585334	1					
ANR	4585355	Argument	sizeof ( char )		4585334	1					
ANR	4585356	SizeofExpression	sizeof ( char )		4585334	0					
ANR	4585357	Sizeof	sizeof		4585334	0					
ANR	4585358	SizeofOperand	char		4585334	1					
ANR	4585359	Argument	1		4585334	2					
ANR	4585360	PrimaryExpression	1		4585334	0					
ANR	4585361	Argument	fp		4585334	3					
ANR	4585362	Identifier	fp		4585334	0					
ANR	4585363	IfStatement	if ( rval < 1 || ch != '\\n' )		4585334	2					
ANR	4585364	Condition	rval < 1 || ch != '\\n'	997:5:24376:24397	4585334	0	True				
ANR	4585365	OrExpression	rval < 1 || ch != '\\n'		4585334	0		||			
ANR	4585366	RelationalExpression	rval < 1		4585334	0		<			
ANR	4585367	Identifier	rval		4585334	0					
ANR	4585368	PrimaryExpression	1		4585334	1					
ANR	4585369	EqualityExpression	ch != '\\n'		4585334	1		!=			
ANR	4585370	Identifier	ch		4585334	0					
ANR	4585371	PrimaryExpression	'\\n'		4585334	1					
ANR	4585372	CompoundStatement		4:30:89:89	4585334	1					
ANR	4585373	ReturnStatement	return ( - 1 ) ;	998:2:24405:24417	4585334	0	True				
ANR	4585374	UnaryOperationExpression	- 1		4585334	0					
ANR	4585375	UnaryOperator	-		4585334	0					
ANR	4585376	PrimaryExpression	1		4585334	1					
ANR	4585377	ReturnStatement	return ( 1 ) ;	1000:1:24423:24434	4585334	3	True				
ANR	4585378	PrimaryExpression	1		4585334	0					
ANR	4585379	ReturnType	int		4585334	1					
ANR	4585380	Identifier	LogBeginTransaction :: ReadBody		4585334	2					
ANR	4585381	ParameterList	FILE * fp		4585334	3					
ANR	4585382	Parameter	FILE * fp	993:30:24301:24308	4585334	0	True				
ANR	4585383	ParameterType	FILE *		4585334	0					
ANR	4585384	Identifier	fp		4585334	1					
ANR	4585385	CFGEntryNode	ENTRY		4585334		True				
ANR	4585386	CFGExitNode	EXIT		4585334		True				
ANR	4585387	Symbol	ch		4585334						
ANR	4585388	Symbol	fp		4585334						
ANR	4585389	Symbol	rval		4585334						
ANR	4585390	Symbol	& ch		4585334						
ANR	4585391	Symbol	fread		4585334						
ANR	4585392	Function	LogEndTransaction :: ReadBody	1003:0:24439:24610							
ANR	4585393	FunctionDef	LogEndTransaction :: ReadBody (FILE * fp)		4585392	0					
ANR	4585394	CompoundStatement		1005:0:24484:24610	4585392	0					
ANR	4585395	IdentifierDeclStatement	char ch ;	1006:1:24487:24495	4585392	0	True				
ANR	4585396	IdentifierDecl	ch		4585392	0					
ANR	4585397	IdentifierDeclType	char		4585392	0					
ANR	4585398	Identifier	ch		4585392	1					
ANR	4585399	IdentifierDeclStatement	"int rval = fread ( & ch , sizeof ( char ) , 1 , fp ) ;"	1007:1:24498:24543	4585392	1	True				
ANR	4585400	IdentifierDecl	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		4585392	0					
ANR	4585401	IdentifierDeclType	int		4585392	0					
ANR	4585402	Identifier	rval		4585392	1					
ANR	4585403	AssignmentExpression	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		4585392	2		=			
ANR	4585404	Identifier	rval		4585392	0					
ANR	4585405	CallExpression	"fread ( & ch , sizeof ( char ) , 1 , fp )"		4585392	1					
ANR	4585406	Callee	fread		4585392	0					
ANR	4585407	Identifier	fread		4585392	0					
ANR	4585408	ArgumentList	& ch		4585392	1					
ANR	4585409	Argument	& ch		4585392	0					
ANR	4585410	UnaryOperationExpression	& ch		4585392	0					
ANR	4585411	UnaryOperator	&		4585392	0					
ANR	4585412	Identifier	ch		4585392	1					
ANR	4585413	Argument	sizeof ( char )		4585392	1					
ANR	4585414	SizeofExpression	sizeof ( char )		4585392	0					
ANR	4585415	Sizeof	sizeof		4585392	0					
ANR	4585416	SizeofOperand	char		4585392	1					
ANR	4585417	Argument	1		4585392	2					
ANR	4585418	PrimaryExpression	1		4585392	0					
ANR	4585419	Argument	fp		4585392	3					
ANR	4585420	Identifier	fp		4585392	0					
ANR	4585421	IfStatement	if ( rval < 1 || ch != '\\n' )		4585392	2					
ANR	4585422	Condition	rval < 1 || ch != '\\n'	1008:5:24550:24571	4585392	0	True				
ANR	4585423	OrExpression	rval < 1 || ch != '\\n'		4585392	0		||			
ANR	4585424	RelationalExpression	rval < 1		4585392	0		<			
ANR	4585425	Identifier	rval		4585392	0					
ANR	4585426	PrimaryExpression	1		4585392	1					
ANR	4585427	EqualityExpression	ch != '\\n'		4585392	1		!=			
ANR	4585428	Identifier	ch		4585392	0					
ANR	4585429	PrimaryExpression	'\\n'		4585392	1					
ANR	4585430	CompoundStatement		4:30:90:90	4585392	1					
ANR	4585431	ReturnStatement	return ( - 1 ) ;	1009:2:24579:24591	4585392	0	True				
ANR	4585432	UnaryOperationExpression	- 1		4585392	0					
ANR	4585433	UnaryOperator	-		4585392	0					
ANR	4585434	PrimaryExpression	1		4585392	1					
ANR	4585435	ReturnStatement	return ( 1 ) ;	1011:1:24597:24608	4585392	3	True				
ANR	4585436	PrimaryExpression	1		4585392	0					
ANR	4585437	ReturnType	int		4585392	1					
ANR	4585438	Identifier	LogEndTransaction :: ReadBody		4585392	2					
ANR	4585439	ParameterList	FILE * fp		4585392	3					
ANR	4585440	Parameter	FILE * fp	1004:29:24473:24480	4585392	0	True				
ANR	4585441	ParameterType	FILE *		4585392	0					
ANR	4585442	Identifier	fp		4585392	1					
ANR	4585443	CFGEntryNode	ENTRY		4585392		True				
ANR	4585444	CFGExitNode	EXIT		4585392		True				
ANR	4585445	Symbol	ch		4585392						
ANR	4585446	Symbol	fp		4585392						
ANR	4585447	Symbol	rval		4585392						
ANR	4585448	Symbol	& ch		4585392						
ANR	4585449	Symbol	fread		4585392						
ANR	4585450	Function	LogDeleteAttribute :: ReadBody	1014:0:24613:24853							
ANR	4585451	FunctionDef	LogDeleteAttribute :: ReadBody (FILE * fp)		4585450	0					
ANR	4585452	CompoundStatement		1016:0:24656:24853	4585450	0					
ANR	4585453	IdentifierDeclStatement	"int rval , rval1 ;"	1017:1:24659:24674	4585450	0	True				
ANR	4585454	IdentifierDecl	rval		4585450	0					
ANR	4585455	IdentifierDeclType	int		4585450	0					
ANR	4585456	Identifier	rval		4585450	1					
ANR	4585457	IdentifierDecl	rval1		4585450	1					
ANR	4585458	IdentifierDeclType	int		4585450	0					
ANR	4585459	Identifier	rval1		4585450	1					
ANR	4585460	ExpressionStatement	free ( key )	1019:1:24678:24687	4585450	1	True				
ANR	4585461	CallExpression	free ( key )		4585450	0					
ANR	4585462	Callee	free		4585450	0					
ANR	4585463	Identifier	free		4585450	0					
ANR	4585464	ArgumentList	key		4585450	1					
ANR	4585465	Argument	key		4585450	0					
ANR	4585466	Identifier	key		4585450	0					
ANR	4585467	ExpressionStatement	"rval1 = readword ( fp , key )"	1020:1:24690:24715	4585450	2	True				
ANR	4585468	AssignmentExpression	"rval1 = readword ( fp , key )"		4585450	0		=			
ANR	4585469	Identifier	rval1		4585450	0					
ANR	4585470	CallExpression	"readword ( fp , key )"		4585450	1					
ANR	4585471	Callee	readword		4585450	0					
ANR	4585472	Identifier	readword		4585450	0					
ANR	4585473	ArgumentList	fp		4585450	1					
ANR	4585474	Argument	fp		4585450	0					
ANR	4585475	Identifier	fp		4585450	0					
ANR	4585476	Argument	key		4585450	1					
ANR	4585477	Identifier	key		4585450	0					
ANR	4585478	IfStatement	if ( rval1 < 0 )		4585450	3					
ANR	4585479	Condition	rval1 < 0	1021:5:24722:24730	4585450	0	True				
ANR	4585480	RelationalExpression	rval1 < 0		4585450	0		<			
ANR	4585481	Identifier	rval1		4585450	0					
ANR	4585482	PrimaryExpression	0		4585450	1					
ANR	4585483	CompoundStatement		6:16:76:76	4585450	1					
ANR	4585484	ReturnStatement	return rval1 ;	1022:2:24737:24749	4585450	0	True				
ANR	4585485	Identifier	rval1		4585450	0					
ANR	4585486	ExpressionStatement	free ( name )	1025:1:24756:24766	4585450	4	True				
ANR	4585487	CallExpression	free ( name )		4585450	0					
ANR	4585488	Callee	free		4585450	0					
ANR	4585489	Identifier	free		4585450	0					
ANR	4585490	ArgumentList	name		4585450	1					
ANR	4585491	Argument	name		4585450	0					
ANR	4585492	Identifier	name		4585450	0					
ANR	4585493	ExpressionStatement	"rval = readword ( fp , name )"	1026:1:24769:24794	4585450	5	True				
ANR	4585494	AssignmentExpression	"rval = readword ( fp , name )"		4585450	0		=			
ANR	4585495	Identifier	rval		4585450	0					
ANR	4585496	CallExpression	"readword ( fp , name )"		4585450	1					
ANR	4585497	Callee	readword		4585450	0					
ANR	4585498	Identifier	readword		4585450	0					
ANR	4585499	ArgumentList	fp		4585450	1					
ANR	4585500	Argument	fp		4585450	0					
ANR	4585501	Identifier	fp		4585450	0					
ANR	4585502	Argument	name		4585450	1					
ANR	4585503	Identifier	name		4585450	0					
ANR	4585504	IfStatement	if ( rval < 0 )		4585450	6					
ANR	4585505	Condition	rval < 0	1027:5:24801:24808	4585450	0	True				
ANR	4585506	RelationalExpression	rval < 0		4585450	0		<			
ANR	4585507	Identifier	rval		4585450	0					
ANR	4585508	PrimaryExpression	0		4585450	1					
ANR	4585509	CompoundStatement		12:15:154:154	4585450	1					
ANR	4585510	ReturnStatement	return rval ;	1028:2:24815:24826	4585450	0	True				
ANR	4585511	Identifier	rval		4585450	0					
ANR	4585512	ReturnStatement	return rval + rval1 ;	1030:1:24832:24851	4585450	7	True				
ANR	4585513	AdditiveExpression	rval + rval1		4585450	0		+			
ANR	4585514	Identifier	rval		4585450	0					
ANR	4585515	Identifier	rval1		4585450	1					
ANR	4585516	ReturnType	int		4585450	1					
ANR	4585517	Identifier	LogDeleteAttribute :: ReadBody		4585450	2					
ANR	4585518	ParameterList	FILE * fp		4585450	3					
ANR	4585519	Parameter	FILE * fp	1015:29:24646:24653	4585450	0	True				
ANR	4585520	ParameterType	FILE *		4585450	0					
ANR	4585521	Identifier	fp		4585450	1					
ANR	4585522	CFGEntryNode	ENTRY		4585450		True				
ANR	4585523	CFGExitNode	EXIT		4585450		True				
ANR	4585524	Symbol	name		4585450						
ANR	4585525	Symbol	fp		4585450						
ANR	4585526	Symbol	rval		4585450						
ANR	4585527	Symbol	readword		4585450						
ANR	4585528	Symbol	key		4585450						
ANR	4585529	Symbol	rval1		4585450						
ANR	4585530	Function	InstantiateLogEntry	1033:0:24856:26854							
ANR	4585531	FunctionDef	"InstantiateLogEntry (FILE * fp , int type)"		4585530	0					
ANR	4585532	CompoundStatement		1035:0:24908:26854	4585530	0					
ANR	4585533	IdentifierDeclStatement	LogRecord * log_rec ;	1036:1:24911:24929	4585530	0	True				
ANR	4585534	IdentifierDecl	* log_rec		4585530	0					
ANR	4585535	IdentifierDeclType	LogRecord *		4585530	0					
ANR	4585536	Identifier	log_rec		4585530	1					
ANR	4585537	SwitchStatement	switch ( type )		4585530	1					
ANR	4585538	Condition	type	1038:8:24940:24943	4585530	0	True				
ANR	4585539	Identifier	type		4585530	0					
ANR	4585540	CompoundStatement		4:14:37:37	4585530	1					
ANR	4585541	Label	case CondorLogOp_NewClassAd :	1039:5:24953:24980	4585530	0	True				
ANR	4585542	Identifier	CondorLogOp_NewClassAd		4585530	0					
ANR	4585543	ExpressionStatement	"log_rec = new LogNewClassAd ( """" , """" , """" )"	1040:6:24988:25027	4585530	1	True				
ANR	4585544	AssignmentExpression	"log_rec = new LogNewClassAd ( """" , """" , """" )"		4585530	0		=			
ANR	4585545	Identifier	log_rec		4585530	0					
ANR	4585546	Expression	""""" , """" , """""		4585530	1					
ANR	4585547	PrimaryExpression	""""""		4585530	0					
ANR	4585548	Expression	""""" , """""		4585530	1					
ANR	4585549	PrimaryExpression	""""""		4585530	0					
ANR	4585550	PrimaryExpression	""""""		4585530	1					
ANR	4585551	BreakStatement	break ;	1041:3:25032:25037	4585530	2	True				
ANR	4585552	Label	case CondorLogOp_DestroyClassAd :	1042:5:25044:25075	4585530	3	True				
ANR	4585553	Identifier	CondorLogOp_DestroyClassAd		4585530	0					
ANR	4585554	ExpressionStatement	"log_rec = new LogDestroyClassAd ( """" )"	1043:6:25083:25118	4585530	4	True				
ANR	4585555	AssignmentExpression	"log_rec = new LogDestroyClassAd ( """" )"		4585530	0		=			
ANR	4585556	Identifier	log_rec		4585530	0					
ANR	4585557	PrimaryExpression	""""""		4585530	1					
ANR	4585558	BreakStatement	break ;	1044:3:25123:25128	4585530	5	True				
ANR	4585559	Label	case CondorLogOp_SetAttribute :	1045:5:25135:25164	4585530	6	True				
ANR	4585560	Identifier	CondorLogOp_SetAttribute		4585530	0					
ANR	4585561	ExpressionStatement	"log_rec = new LogSetAttribute ( """" , """" , """" )"	1046:6:25172:25213	4585530	7	True				
ANR	4585562	AssignmentExpression	"log_rec = new LogSetAttribute ( """" , """" , """" )"		4585530	0		=			
ANR	4585563	Identifier	log_rec		4585530	0					
ANR	4585564	Expression	""""" , """" , """""		4585530	1					
ANR	4585565	PrimaryExpression	""""""		4585530	0					
ANR	4585566	Expression	""""" , """""		4585530	1					
ANR	4585567	PrimaryExpression	""""""		4585530	0					
ANR	4585568	PrimaryExpression	""""""		4585530	1					
ANR	4585569	BreakStatement	break ;	1047:3:25218:25223	4585530	8	True				
ANR	4585570	Label	case CondorLogOp_DeleteAttribute :	1048:5:25230:25262	4585530	9	True				
ANR	4585571	Identifier	CondorLogOp_DeleteAttribute		4585530	0					
ANR	4585572	ExpressionStatement	"log_rec = new LogDeleteAttribute ( """" , """" )"	1049:6:25270:25310	4585530	10	True				
ANR	4585573	AssignmentExpression	"log_rec = new LogDeleteAttribute ( """" , """" )"		4585530	0		=			
ANR	4585574	Identifier	log_rec		4585530	0					
ANR	4585575	Expression	""""" , """""		4585530	1					
ANR	4585576	PrimaryExpression	""""""		4585530	0					
ANR	4585577	PrimaryExpression	""""""		4585530	1					
ANR	4585578	BreakStatement	break ;	1050:3:25315:25320	4585530	11	True				
ANR	4585579	Label	case CondorLogOp_BeginTransaction :	1051:2:25324:25357	4585530	12	True				
ANR	4585580	Identifier	CondorLogOp_BeginTransaction		4585530	0					
ANR	4585581	ExpressionStatement	log_rec = new LogBeginTransaction ( )	1052:3:25362:25397	4585530	13	True				
ANR	4585582	AssignmentExpression	log_rec = new LogBeginTransaction ( )		4585530	0		=			
ANR	4585583	Identifier	log_rec		4585530	0					
ANR	4585584	UnaryExpression	new LogBeginTransaction ( )		4585530	1					
ANR	4585585	BreakStatement	break ;	1053:3:25402:25407	4585530	14	True				
ANR	4585586	Label	case CondorLogOp_EndTransaction :	1054:2:25411:25442	4585530	15	True				
ANR	4585587	Identifier	CondorLogOp_EndTransaction		4585530	0					
ANR	4585588	ExpressionStatement	log_rec = new LogEndTransaction ( )	1055:3:25447:25480	4585530	16	True				
ANR	4585589	AssignmentExpression	log_rec = new LogEndTransaction ( )		4585530	0		=			
ANR	4585590	Identifier	log_rec		4585530	0					
ANR	4585591	UnaryExpression	new LogEndTransaction ( )		4585530	1					
ANR	4585592	BreakStatement	break ;	1056:3:25485:25490	4585530	17	True				
ANR	4585593	Label	case CondorLogOp_LogHistoricalSequenceNumber :	1057:2:25494:25538	4585530	18	True				
ANR	4585594	Identifier	CondorLogOp_LogHistoricalSequenceNumber		4585530	0					
ANR	4585595	ExpressionStatement	"log_rec = new LogHistoricalSequenceNumber ( 0 , 0 )"	1058:3:25543:25589	4585530	19	True				
ANR	4585596	AssignmentExpression	"log_rec = new LogHistoricalSequenceNumber ( 0 , 0 )"		4585530	0		=			
ANR	4585597	Identifier	log_rec		4585530	0					
ANR	4585598	Expression	"0 , 0"		4585530	1					
ANR	4585599	PrimaryExpression	0		4585530	0					
ANR	4585600	PrimaryExpression	0		4585530	1					
ANR	4585601	BreakStatement	break ;	1059:3:25594:25599	4585530	20	True				
ANR	4585602	Label	default :	1060:5:25606:25613	4585530	21	True				
ANR	4585603	Identifier	default		4585530	0					
ANR	4585604	ReturnStatement	return 0 ;	1061:6:25621:25629	4585530	22	True				
ANR	4585605	PrimaryExpression	0		4585530	0					
ANR	4585606	BreakStatement	break ;	1062:3:25634:25639	4585530	23	True				
ANR	4585607	IdentifierDeclStatement	long pos = ftell ( fp ) ;	1065:1:25646:25666	4585530	2	True				
ANR	4585608	IdentifierDecl	pos = ftell ( fp )		4585530	0					
ANR	4585609	IdentifierDeclType	long		4585530	0					
ANR	4585610	Identifier	pos		4585530	1					
ANR	4585611	AssignmentExpression	pos = ftell ( fp )		4585530	2		=			
ANR	4585612	Identifier	pos		4585530	0					
ANR	4585613	CallExpression	ftell ( fp )		4585530	1					
ANR	4585614	Callee	ftell		4585530	0					
ANR	4585615	Identifier	ftell		4585530	0					
ANR	4585616	ArgumentList	fp		4585530	1					
ANR	4585617	Argument	fp		4585530	0					
ANR	4585618	Identifier	fp		4585530	0					
ANR	4585619	IfStatement	if ( log_rec -> ReadBody ( fp ) < 0 )		4585530	3					
ANR	4585620	Condition	log_rec -> ReadBody ( fp ) < 0	1068:5:25736:25760	4585530	0	True				
ANR	4585621	RelationalExpression	log_rec -> ReadBody ( fp ) < 0		4585530	0		<			
ANR	4585622	CallExpression	log_rec -> ReadBody ( fp )		4585530	0					
ANR	4585623	Callee	log_rec -> ReadBody		4585530	0					
ANR	4585624	PtrMemberAccess	log_rec -> ReadBody		4585530	0					
ANR	4585625	Identifier	log_rec		4585530	0					
ANR	4585626	Identifier	ReadBody		4585530	1					
ANR	4585627	ArgumentList	fp		4585530	1					
ANR	4585628	Argument	fp		4585530	0					
ANR	4585629	Identifier	fp		4585530	0					
ANR	4585630	PrimaryExpression	0		4585530	1					
ANR	4585631	CompoundStatement		41:2:1021:1028	4585530	1					
ANR	4585632	IdentifierDeclStatement	char line [ ATTRLIST_MAX_EXPRESSION + 64 ] ;	1074:2:25887:25926	4585530	0	True				
ANR	4585633	IdentifierDecl	line [ ATTRLIST_MAX_EXPRESSION + 64 ]		4585530	0					
ANR	4585634	IdentifierDeclType	char [ ATTRLIST_MAX_EXPRESSION + 64 ]		4585530	0					
ANR	4585635	Identifier	line		4585530	1					
ANR	4585636	AdditiveExpression	ATTRLIST_MAX_EXPRESSION + 64		4585530	2		+			
ANR	4585637	Identifier	ATTRLIST_MAX_EXPRESSION		4585530	0					
ANR	4585638	PrimaryExpression	64		4585530	1					
ANR	4585639	IdentifierDeclStatement	int op ;	1075:2:25930:25937	4585530	1	True				
ANR	4585640	IdentifierDecl	op		4585530	0					
ANR	4585641	IdentifierDeclType	int		4585530	0					
ANR	4585642	Identifier	op		4585530	1					
ANR	4585643	Statement	delete	1077:2:25942:25947	4585530	2	True				
ANR	4585644	ExpressionStatement	log_rec	1077:9:25949:25956	4585530	3	True				
ANR	4585645	Identifier	log_rec		4585530	0					
ANR	4585646	IfStatement	if ( ! fp )		4585530	4					
ANR	4585647	Condition	! fp	1078:6:25964:25966	4585530	0	True				
ANR	4585648	UnaryOperationExpression	! fp		4585530	0					
ANR	4585649	UnaryOperator	!		4585530	0					
ANR	4585650	Identifier	fp		4585530	1					
ANR	4585651	CompoundStatement		44:12:1061:1061	4585530	1					
ANR	4585652	ExpressionStatement	"EXCEPT ( ""Error: failed fdopen() when recovering corrpupt log file"" )"	1079:3:25975:26041	4585530	0	True				
ANR	4585653	CallExpression	"EXCEPT ( ""Error: failed fdopen() when recovering corrpupt log file"" )"		4585530	0					
ANR	4585654	Callee	EXCEPT		4585530	0					
ANR	4585655	Identifier	EXCEPT		4585530	0					
ANR	4585656	ArgumentList	"""Error: failed fdopen() when recovering corrpupt log file"""		4585530	1					
ANR	4585657	Argument	"""Error: failed fdopen() when recovering corrpupt log file"""		4585530	0					
ANR	4585658	PrimaryExpression	"""Error: failed fdopen() when recovering corrpupt log file"""		4585530	0					
ANR	4585659	WhileStatement	"while ( fgets ( line , ATTRLIST_MAX_EXPRESSION + 64 , fp ) )"		4585530	5					
ANR	4585660	Condition	"fgets ( line , ATTRLIST_MAX_EXPRESSION + 64 , fp )"	1082:9:26057:26101	4585530	0	True				
ANR	4585661	CallExpression	"fgets ( line , ATTRLIST_MAX_EXPRESSION + 64 , fp )"		4585530	0					
ANR	4585662	Callee	fgets		4585530	0					
ANR	4585663	Identifier	fgets		4585530	0					
ANR	4585664	ArgumentList	line		4585530	1					
ANR	4585665	Argument	line		4585530	0					
ANR	4585666	Identifier	line		4585530	0					
ANR	4585667	Argument	ATTRLIST_MAX_EXPRESSION + 64		4585530	1					
ANR	4585668	AdditiveExpression	ATTRLIST_MAX_EXPRESSION + 64		4585530	0		+			
ANR	4585669	Identifier	ATTRLIST_MAX_EXPRESSION		4585530	0					
ANR	4585670	PrimaryExpression	64		4585530	1					
ANR	4585671	Argument	fp		4585530	2					
ANR	4585672	Identifier	fp		4585530	0					
ANR	4585673	CompoundStatement		48:57:1196:1196	4585530	1					
ANR	4585674	IfStatement	"if ( sscanf ( line , ""%d "" , & op ) != 1 )"		4585530	0					
ANR	4585675	Condition	"sscanf ( line , ""%d "" , & op ) != 1"	1083:7:26114:26144	4585530	0	True				
ANR	4585676	EqualityExpression	"sscanf ( line , ""%d "" , & op ) != 1"		4585530	0		!=			
ANR	4585677	CallExpression	"sscanf ( line , ""%d "" , & op )"		4585530	0					
ANR	4585678	Callee	sscanf		4585530	0					
ANR	4585679	Identifier	sscanf		4585530	0					
ANR	4585680	ArgumentList	line		4585530	1					
ANR	4585681	Argument	line		4585530	0					
ANR	4585682	Identifier	line		4585530	0					
ANR	4585683	Argument	"""%d """		4585530	1					
ANR	4585684	PrimaryExpression	"""%d """		4585530	0					
ANR	4585685	Argument	& op		4585530	2					
ANR	4585686	UnaryOperationExpression	& op		4585530	0					
ANR	4585687	UnaryOperator	&		4585530	0					
ANR	4585688	Identifier	op		4585530	1					
ANR	4585689	PrimaryExpression	1		4585530	1					
ANR	4585690	CompoundStatement		49:41:1239:1239	4585530	1					
ANR	4585691	ContinueStatement	continue ;	1085:4:26207:26215	4585530	0	True				
ANR	4585692	IfStatement	if ( op == CondorLogOp_EndTransaction )		4585530	1					
ANR	4585693	Condition	op == CondorLogOp_EndTransaction	1087:7:26229:26260	4585530	0	True				
ANR	4585694	EqualityExpression	op == CondorLogOp_EndTransaction		4585530	0		==			
ANR	4585695	Identifier	op		4585530	0					
ANR	4585696	Identifier	CondorLogOp_EndTransaction		4585530	1					
ANR	4585697	CompoundStatement		53:42:1355:1355	4585530	1					
ANR	4585698	ExpressionStatement	"EXCEPT ( ""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"" , type , pos )"	1089:4:26321:26408	4585530	0	True				
ANR	4585699	CallExpression	"EXCEPT ( ""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"" , type , pos )"		4585530	0					
ANR	4585700	Callee	EXCEPT		4585530	0					
ANR	4585701	Identifier	EXCEPT		4585530	0					
ANR	4585702	ArgumentList	"""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"""		4585530	1					
ANR	4585703	Argument	"""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"""		4585530	0					
ANR	4585704	PrimaryExpression	"""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"""		4585530	0					
ANR	4585705	Argument	type		4585530	1					
ANR	4585706	Identifier	type		4585530	0					
ANR	4585707	Argument	pos		4585530	2					
ANR	4585708	Identifier	pos		4585530	0					
ANR	4585709	IfStatement	if ( ! feof ( fp ) )		4585530	6					
ANR	4585710	Condition	! feof ( fp )	1093:6:26426:26436	4585530	0	True				
ANR	4585711	UnaryOperationExpression	! feof ( fp )		4585530	0					
ANR	4585712	UnaryOperator	!		4585530	0					
ANR	4585713	CallExpression	feof ( fp )		4585530	1					
ANR	4585714	Callee	feof		4585530	0					
ANR	4585715	Identifier	feof		4585530	0					
ANR	4585716	ArgumentList	fp		4585530	1					
ANR	4585717	Argument	fp		4585530	0					
ANR	4585718	Identifier	fp		4585530	0					
ANR	4585719	CompoundStatement		59:20:1531:1531	4585530	1					
ANR	4585720	ExpressionStatement	"EXCEPT ( ""Error: failed recovering from corrupt file, errno=%d"" , errno )"	1094:3:26445:26519	4585530	0	True				
ANR	4585721	CallExpression	"EXCEPT ( ""Error: failed recovering from corrupt file, errno=%d"" , errno )"		4585530	0					
ANR	4585722	Callee	EXCEPT		4585530	0					
ANR	4585723	Identifier	EXCEPT		4585530	0					
ANR	4585724	ArgumentList	"""Error: failed recovering from corrupt file, errno=%d"""		4585530	1					
ANR	4585725	Argument	"""Error: failed recovering from corrupt file, errno=%d"""		4585530	0					
ANR	4585726	PrimaryExpression	"""Error: failed recovering from corrupt file, errno=%d"""		4585530	0					
ANR	4585727	Argument	errno		4585530	1					
ANR	4585728	Identifier	errno		4585530	0					
ANR	4585729	ExpressionStatement	"fseek ( fp , 0 , SEEK_END )"	1102:2:26768:26792	4585530	7	True				
ANR	4585730	CallExpression	"fseek ( fp , 0 , SEEK_END )"		4585530	0					
ANR	4585731	Callee	fseek		4585530	0					
ANR	4585732	Identifier	fseek		4585530	0					
ANR	4585733	ArgumentList	fp		4585530	1					
ANR	4585734	Argument	fp		4585530	0					
ANR	4585735	Identifier	fp		4585530	0					
ANR	4585736	Argument	0		4585530	1					
ANR	4585737	PrimaryExpression	0		4585530	0					
ANR	4585738	Argument	SEEK_END		4585530	2					
ANR	4585739	Identifier	SEEK_END		4585530	0					
ANR	4585740	ReturnStatement	return ( NULL ) ;	1103:2:26796:26810	4585530	8	True				
ANR	4585741	Identifier	NULL		4585530	0					
ANR	4585742	ReturnStatement	return log_rec ;	1107:1:26838:26852	4585530	4	True				
ANR	4585743	Identifier	log_rec		4585530	0					
ANR	4585744	ReturnType	LogRecord *		4585530	1					
ANR	4585745	Identifier	InstantiateLogEntry		4585530	2					
ANR	4585746	ParameterList	"FILE * fp , int type"		4585530	3					
ANR	4585747	Parameter	FILE * fp	1034:20:24888:24895	4585530	0	True				
ANR	4585748	ParameterType	FILE *		4585530	0					
ANR	4585749	Identifier	fp		4585530	1					
ANR	4585750	Parameter	int type	1034:30:24898:24905	4585530	1	True				
ANR	4585751	ParameterType	int		4585530	0					
ANR	4585752	Identifier	type		4585530	1					
ANR	4585753	CFGEntryNode	ENTRY		4585530		True				
ANR	4585754	CFGExitNode	EXIT		4585530		True				
ANR	4585755	Symbol	op		4585530						
ANR	4585756	Symbol	CondorLogOp_EndTransaction		4585530						
ANR	4585757	Symbol	errno		4585530						
ANR	4585758	Symbol	NULL		4585530						
ANR	4585759	Symbol	ftell		4585530						
ANR	4585760	Symbol	log_rec -> ReadBody		4585530						
ANR	4585761	Symbol	line		4585530						
ANR	4585762	Symbol	fp		4585530						
ANR	4585763	Symbol	& op		4585530						
ANR	4585764	Symbol	type		4585530						
ANR	4585765	Symbol	fgets		4585530						
ANR	4585766	Symbol	SEEK_END		4585530						
ANR	4585767	Symbol	pos		4585530						
ANR	4585768	Symbol	log_rec		4585530						
ANR	4585769	Symbol	sscanf		4585530						
ANR	4585770	Symbol	ATTRLIST_MAX_EXPRESSION		4585530						
ANR	4585771	Symbol	feof		4585530						
ANR	4585772	Symbol	* log_rec		4585530						
ANR	4585773	Function	ClassAdLog :: ListNewAdsInTransaction	1110:0:26857:27069							
ANR	4585774	FunctionDef	ClassAdLog :: ListNewAdsInTransaction (std :: list < std :: string > & new_keys)		4585773	0					
ANR	4585775	CompoundStatement		1111:0:26934:27069	4585773	0					
ANR	4585776	IfStatement	if ( ! active_transaction )		4585773	0					
ANR	4585777	Condition	! active_transaction	1112:5:26941:26959	4585773	0	True				
ANR	4585778	UnaryOperationExpression	! active_transaction		4585773	0					
ANR	4585779	UnaryOperator	!		4585773	0					
ANR	4585780	Identifier	active_transaction		4585773	1					
ANR	4585781	CompoundStatement		2:27:28:28	4585773	1					
ANR	4585782	ReturnStatement	return ;	1113:2:26967:26973	4585773	0	True				
ANR	4585783	ExpressionStatement	"active_transaction -> InTransactionListKeysWithOpType ( CondorLogOp_NewClassAd , new_keys )"	1116:1:26980:27067	4585773	1	True				
ANR	4585784	CallExpression	"active_transaction -> InTransactionListKeysWithOpType ( CondorLogOp_NewClassAd , new_keys )"		4585773	0					
ANR	4585785	Callee	active_transaction -> InTransactionListKeysWithOpType		4585773	0					
ANR	4585786	PtrMemberAccess	active_transaction -> InTransactionListKeysWithOpType		4585773	0					
ANR	4585787	Identifier	active_transaction		4585773	0					
ANR	4585788	Identifier	InTransactionListKeysWithOpType		4585773	1					
ANR	4585789	ArgumentList	CondorLogOp_NewClassAd		4585773	1					
ANR	4585790	Argument	CondorLogOp_NewClassAd		4585773	0					
ANR	4585791	Identifier	CondorLogOp_NewClassAd		4585773	0					
ANR	4585792	Argument	new_keys		4585773	1					
ANR	4585793	Identifier	new_keys		4585773	0					
ANR	4585794	ReturnType	void		4585773	1					
ANR	4585795	Identifier	ClassAdLog :: ListNewAdsInTransaction		4585773	2					
ANR	4585796	ParameterList	std :: list < std :: string > & new_keys		4585773	3					
ANR	4585797	Parameter	std :: list < std :: string > & new_keys	1110:42:26899:26930	4585773	0	True				
ANR	4585798	ParameterType	std :: list < std :: string > &		4585773	0					
ANR	4585799	Identifier	new_keys		4585773	1					
ANR	4585800	CFGEntryNode	ENTRY		4585773		True				
ANR	4585801	CFGExitNode	EXIT		4585773		True				
ANR	4585802	Symbol	CondorLogOp_NewClassAd		4585773						
ANR	4585803	Symbol	new_keys		4585773						
ANR	4585804	Symbol	active_transaction		4585773						
