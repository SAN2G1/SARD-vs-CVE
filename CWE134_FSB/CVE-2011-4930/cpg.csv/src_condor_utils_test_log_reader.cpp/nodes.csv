command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4931444	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_test_log_reader.cpp								
ANR	4931445	DeclStmt									
ANR	4931446	Decl							const char	const char *	VERSION
ANR	4931447	ClassDef	Status	38:0:1185:1238							
ANR	4931448	ClassDef	Verbosity	40:0:1242:1319							
ANR	4931449	ClassDef	Options	42:0:1323:1696							
ANR	4931450	DeclStmt									
ANR	4931451	Decl							const char	const char *	logFile
ANR	4931452	DeclStmt									
ANR	4931453	Decl							const char	const char *	persistFile
ANR	4931454	DeclStmt									
ANR	4931455	Decl							bool	bool	readPersist
ANR	4931456	DeclStmt									
ANR	4931457	Decl							bool	bool	writePersist
ANR	4931458	DeclStmt									
ANR	4931459	Decl							bool	bool	rotation
ANR	4931460	DeclStmt									
ANR	4931461	Decl							int	int	maxRotations
ANR	4931462	DeclStmt									
ANR	4931463	Decl							bool	bool	readOnly
ANR	4931464	DeclStmt									
ANR	4931465	Decl							bool	bool	dumpState
ANR	4931466	DeclStmt									
ANR	4931467	Decl							bool	bool	missedCheck
ANR	4931468	DeclStmt									
ANR	4931469	Decl							bool	bool	exitAfterInit
ANR	4931470	DeclStmt									
ANR	4931471	Decl							bool	bool	isEventLog
ANR	4931472	DeclStmt									
ANR	4931473	Decl							bool	bool	checkFileStatus
ANR	4931474	DeclStmt									
ANR	4931475	Decl							int	int	maxExec
ANR	4931476	DeclStmt									
ANR	4931477	Decl							bool	bool	exit
ANR	4931478	DeclStmt									
ANR	4931479	Decl							int	int	stop
ANR	4931480	DeclStmt									
ANR	4931481	Decl							int	int	sleep
ANR	4931482	DeclStmt									
ANR	4931483	Decl							int	int	term
ANR	4931484	DeclStmt									
ANR	4931485	Decl							Verbosity	Verbosity	verbosity
ANR	4931486	DeclStmt									
ANR	4931487	Decl							Status	"Status ( int argc , const char * * argv , Options & opts )"	CheckArgs
ANR	4931488	DeclStmt									
ANR	4931489	Decl							Status	"Status ( Options & opts , int & numEvents )"	ReadEvents
ANR	4931490	DeclStmt									
ANR	4931491	Decl							void	void ( const ReadUserLog & reader )	ReportError
ANR	4931492	DeclStmt									
ANR	4931493	Decl							const char	const char * ( struct tm & tm )	timestr
ANR	4931494	DeclStmt									
ANR	4931495	Decl							bool	bool	global_done
ANR	4931496	Function	handle_sig	77:0:1966:2069							
ANR	4931497	FunctionDef	handle_sig (int sig)		4931496	0					
ANR	4931498	CompoundStatement		78:0:1991:2069	4931496	0					
ANR	4931499	ExpressionStatement	( void ) sig	79:1:1994:2004	4931496	0	True				
ANR	4931500	CastExpression	( void ) sig		4931496	0					
ANR	4931501	CastTarget	void		4931496	0					
ANR	4931502	Identifier	sig		4931496	1					
ANR	4931503	ExpressionStatement	"printf ( ""Got signal; shutting down\\n"" )"	80:1:2007:2046	4931496	1	True				
ANR	4931504	CallExpression	"printf ( ""Got signal; shutting down\\n"" )"		4931496	0					
ANR	4931505	Callee	printf		4931496	0					
ANR	4931506	Identifier	printf		4931496	0					
ANR	4931507	ArgumentList	"""Got signal; shutting down\\n"""		4931496	1					
ANR	4931508	Argument	"""Got signal; shutting down\\n"""		4931496	0					
ANR	4931509	PrimaryExpression	"""Got signal; shutting down\\n"""		4931496	0					
ANR	4931510	ExpressionStatement	global_done = true	81:1:2049:2067	4931496	2	True				
ANR	4931511	AssignmentExpression	global_done = true		4931496	0		=			
ANR	4931512	Identifier	global_done		4931496	0					
ANR	4931513	Identifier	true		4931496	1					
ANR	4931514	ReturnType	void		4931496	1					
ANR	4931515	Identifier	handle_sig		4931496	2					
ANR	4931516	ParameterList	int sig		4931496	3					
ANR	4931517	Parameter	int sig	77:16:1982:1988	4931496	0	True				
ANR	4931518	ParameterType	int		4931496	0					
ANR	4931519	Identifier	sig		4931496	1					
ANR	4931520	CFGEntryNode	ENTRY		4931496		True				
ANR	4931521	CFGExitNode	EXIT		4931496		True				
ANR	4931522	Symbol	sig		4931496						
ANR	4931523	Symbol	true		4931496						
ANR	4931524	Symbol	global_done		4931496						
ANR	4931525	Function	main	84:0:2072:3137							
ANR	4931526	FunctionDef	"main (int argc , const char * * argv)"		4931525	0					
ANR	4931527	CompoundStatement		86:0:2110:3137	4931525	0					
ANR	4931528	ExpressionStatement	DebugFlags = D_ALWAYS	87:1:2113:2134	4931525	0	True				
ANR	4931529	AssignmentExpression	DebugFlags = D_ALWAYS		4931525	0		=			
ANR	4931530	Identifier	DebugFlags		4931525	0					
ANR	4931531	Identifier	D_ALWAYS		4931525	1					
ANR	4931532	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	88:1:2137:2168	4931525	1	True				
ANR	4931533	IdentifierDecl	* p_funcs = NULL		4931525	0					
ANR	4931534	IdentifierDeclType	param_functions *		4931525	0					
ANR	4931535	Identifier	p_funcs		4931525	1					
ANR	4931536	AssignmentExpression	* p_funcs = NULL		4931525	2		=			
ANR	4931537	Identifier	NULL		4931525	0					
ANR	4931538	Identifier	NULL		4931525	1					
ANR	4931539	ExpressionStatement	"set_mySubSystem ( ""TEST_LOG_READER"" , SUBSYSTEM_TYPE_TOOL )"	90:1:2172:2229	4931525	2	True				
ANR	4931540	CallExpression	"set_mySubSystem ( ""TEST_LOG_READER"" , SUBSYSTEM_TYPE_TOOL )"		4931525	0					
ANR	4931541	Callee	set_mySubSystem		4931525	0					
ANR	4931542	Identifier	set_mySubSystem		4931525	0					
ANR	4931543	ArgumentList	"""TEST_LOG_READER"""		4931525	1					
ANR	4931544	Argument	"""TEST_LOG_READER"""		4931525	0					
ANR	4931545	PrimaryExpression	"""TEST_LOG_READER"""		4931525	0					
ANR	4931546	Argument	SUBSYSTEM_TYPE_TOOL		4931525	1					
ANR	4931547	Identifier	SUBSYSTEM_TYPE_TOOL		4931525	0					
ANR	4931548	ExpressionStatement	"myDistro -> Init ( argc , argv )"	93:1:2274:2302	4931525	3	True				
ANR	4931549	CallExpression	"myDistro -> Init ( argc , argv )"		4931525	0					
ANR	4931550	Callee	myDistro -> Init		4931525	0					
ANR	4931551	PtrMemberAccess	myDistro -> Init		4931525	0					
ANR	4931552	Identifier	myDistro		4931525	0					
ANR	4931553	Identifier	Init		4931525	1					
ANR	4931554	ArgumentList	argc		4931525	1					
ANR	4931555	Argument	argc		4931525	0					
ANR	4931556	Identifier	argc		4931525	0					
ANR	4931557	Argument	argv		4931525	1					
ANR	4931558	Identifier	argv		4931525	0					
ANR	4931559	ExpressionStatement	config ( )	94:1:2305:2313	4931525	4	True				
ANR	4931560	CallExpression	config ( )		4931525	0					
ANR	4931561	Callee	config		4931525	0					
ANR	4931562	Identifier	config		4931525	0					
ANR	4931563	ArgumentList			4931525	1					
ANR	4931564	ExpressionStatement	Termlog = true	97:1:2350:2364	4931525	5	True				
ANR	4931565	AssignmentExpression	Termlog = true		4931525	0		=			
ANR	4931566	Identifier	Termlog		4931525	0					
ANR	4931567	Identifier	true		4931525	1					
ANR	4931568	ExpressionStatement	p_funcs = get_param_functions ( )	98:1:2367:2398	4931525	6	True				
ANR	4931569	AssignmentExpression	p_funcs = get_param_functions ( )		4931525	0		=			
ANR	4931570	Identifier	p_funcs		4931525	0					
ANR	4931571	CallExpression	get_param_functions ( )		4931525	1					
ANR	4931572	Callee	get_param_functions		4931525	0					
ANR	4931573	Identifier	get_param_functions		4931525	0					
ANR	4931574	ArgumentList			4931525	1					
ANR	4931575	ExpressionStatement	"dprintf_config ( ""TEST_LOG_READER"" , p_funcs )"	99:1:2401:2443	4931525	7	True				
ANR	4931576	CallExpression	"dprintf_config ( ""TEST_LOG_READER"" , p_funcs )"		4931525	0					
ANR	4931577	Callee	dprintf_config		4931525	0					
ANR	4931578	Identifier	dprintf_config		4931525	0					
ANR	4931579	ArgumentList	"""TEST_LOG_READER"""		4931525	1					
ANR	4931580	Argument	"""TEST_LOG_READER"""		4931525	0					
ANR	4931581	PrimaryExpression	"""TEST_LOG_READER"""		4931525	0					
ANR	4931582	Argument	p_funcs		4931525	1					
ANR	4931583	Identifier	p_funcs		4931525	0					
ANR	4931584	IdentifierDeclStatement	int result = 0 ;	101:1:2447:2462	4931525	8	True				
ANR	4931585	IdentifierDecl	result = 0		4931525	0					
ANR	4931586	IdentifierDeclType	int		4931525	0					
ANR	4931587	Identifier	result		4931525	1					
ANR	4931588	AssignmentExpression	result = 0		4931525	2		=			
ANR	4931589	Identifier	result		4931525	0					
ANR	4931590	PrimaryExpression	0		4931525	1					
ANR	4931591	IdentifierDeclStatement	int events = 0 ;	102:1:2465:2480	4931525	9	True				
ANR	4931592	IdentifierDecl	events = 0		4931525	0					
ANR	4931593	IdentifierDeclType	int		4931525	0					
ANR	4931594	Identifier	events		4931525	1					
ANR	4931595	AssignmentExpression	events = 0		4931525	2		=			
ANR	4931596	Identifier	events		4931525	0					
ANR	4931597	PrimaryExpression	0		4931525	1					
ANR	4931598	IdentifierDeclStatement	Options opts ;	104:1:2484:2496	4931525	10	True				
ANR	4931599	IdentifierDecl	opts		4931525	0					
ANR	4931600	IdentifierDeclType	Options		4931525	0					
ANR	4931601	Identifier	opts		4931525	1					
ANR	4931602	IdentifierDeclStatement	"Status tmpStatus = CheckArgs ( argc , argv , opts ) ;"	105:1:2499:2545	4931525	11	True				
ANR	4931603	IdentifierDecl	"tmpStatus = CheckArgs ( argc , argv , opts )"		4931525	0					
ANR	4931604	IdentifierDeclType	Status		4931525	0					
ANR	4931605	Identifier	tmpStatus		4931525	1					
ANR	4931606	AssignmentExpression	"tmpStatus = CheckArgs ( argc , argv , opts )"		4931525	2		=			
ANR	4931607	Identifier	tmpStatus		4931525	0					
ANR	4931608	CallExpression	"CheckArgs ( argc , argv , opts )"		4931525	1					
ANR	4931609	Callee	CheckArgs		4931525	0					
ANR	4931610	Identifier	CheckArgs		4931525	0					
ANR	4931611	ArgumentList	argc		4931525	1					
ANR	4931612	Argument	argc		4931525	0					
ANR	4931613	Identifier	argc		4931525	0					
ANR	4931614	Argument	argv		4931525	1					
ANR	4931615	Identifier	argv		4931525	0					
ANR	4931616	Argument	opts		4931525	2					
ANR	4931617	Identifier	opts		4931525	0					
ANR	4931618	IfStatement	if ( STATUS_CANCEL == tmpStatus )		4931525	12					
ANR	4931619	Condition	STATUS_CANCEL == tmpStatus	106:6:2553:2578	4931525	0	True				
ANR	4931620	EqualityExpression	STATUS_CANCEL == tmpStatus		4931525	0		==			
ANR	4931621	Identifier	STATUS_CANCEL		4931525	0					
ANR	4931622	Identifier	tmpStatus		4931525	1					
ANR	4931623	CompoundStatement		21:35:471:471	4931525	1					
ANR	4931624	ExpressionStatement	exit ( 0 )	107:2:2586:2595	4931525	0	True				
ANR	4931625	CallExpression	exit ( 0 )		4931525	0					
ANR	4931626	Callee	exit		4931525	0					
ANR	4931627	Identifier	exit		4931525	0					
ANR	4931628	ArgumentList	0		4931525	1					
ANR	4931629	Argument	0		4931525	0					
ANR	4931630	PrimaryExpression	0		4931525	0					
ANR	4931631	ElseStatement	else		4931525	0					
ANR	4931632	IfStatement	if ( STATUS_OK != tmpStatus )		4931525	0					
ANR	4931633	Condition	STATUS_OK != tmpStatus	109:11:2611:2632	4931525	0	True				
ANR	4931634	EqualityExpression	STATUS_OK != tmpStatus		4931525	0		!=			
ANR	4931635	Identifier	STATUS_OK		4931525	0					
ANR	4931636	Identifier	tmpStatus		4931525	1					
ANR	4931637	CompoundStatement		24:36:525:525	4931525	1					
ANR	4931638	ExpressionStatement	"printf ( ""Error parsing command line\\n"" )"	110:2:2640:2680	4931525	0	True				
ANR	4931639	CallExpression	"printf ( ""Error parsing command line\\n"" )"		4931525	0					
ANR	4931640	Callee	printf		4931525	0					
ANR	4931641	Identifier	printf		4931525	0					
ANR	4931642	ArgumentList	"""Error parsing command line\\n"""		4931525	1					
ANR	4931643	Argument	"""Error parsing command line\\n"""		4931525	0					
ANR	4931644	PrimaryExpression	"""Error parsing command line\\n"""		4931525	0					
ANR	4931645	ExpressionStatement	exit ( 1 )	111:2:2684:2693	4931525	1	True				
ANR	4931646	CallExpression	exit ( 1 )		4931525	0					
ANR	4931647	Callee	exit		4931525	0					
ANR	4931648	Identifier	exit		4931525	0					
ANR	4931649	ArgumentList	1		4931525	1					
ANR	4931650	Argument	1		4931525	0					
ANR	4931651	PrimaryExpression	1		4931525	0					
ANR	4931652	ExpressionStatement	"tmpStatus = ReadEvents ( opts , events )"	114:1:2700:2736	4931525	13	True				
ANR	4931653	AssignmentExpression	"tmpStatus = ReadEvents ( opts , events )"		4931525	0		=			
ANR	4931654	Identifier	tmpStatus		4931525	0					
ANR	4931655	CallExpression	"ReadEvents ( opts , events )"		4931525	1					
ANR	4931656	Callee	ReadEvents		4931525	0					
ANR	4931657	Identifier	ReadEvents		4931525	0					
ANR	4931658	ArgumentList	opts		4931525	1					
ANR	4931659	Argument	opts		4931525	0					
ANR	4931660	Identifier	opts		4931525	0					
ANR	4931661	Argument	events		4931525	1					
ANR	4931662	Identifier	events		4931525	0					
ANR	4931663	IfStatement	if ( tmpStatus == STATUS_ERROR )		4931525	14					
ANR	4931664	Condition	tmpStatus == STATUS_ERROR	115:6:2744:2768	4931525	0	True				
ANR	4931665	EqualityExpression	tmpStatus == STATUS_ERROR		4931525	0		==			
ANR	4931666	Identifier	tmpStatus		4931525	0					
ANR	4931667	Identifier	STATUS_ERROR		4931525	1					
ANR	4931668	CompoundStatement		30:34:661:661	4931525	1					
ANR	4931669	ExpressionStatement	"printf ( ""Error from ReadEvents: %d\\n"" , ( int ) tmpStatus )"	116:2:2776:2831	4931525	0	True				
ANR	4931670	CallExpression	"printf ( ""Error from ReadEvents: %d\\n"" , ( int ) tmpStatus )"		4931525	0					
ANR	4931671	Callee	printf		4931525	0					
ANR	4931672	Identifier	printf		4931525	0					
ANR	4931673	ArgumentList	"""Error from ReadEvents: %d\\n"""		4931525	1					
ANR	4931674	Argument	"""Error from ReadEvents: %d\\n"""		4931525	0					
ANR	4931675	PrimaryExpression	"""Error from ReadEvents: %d\\n"""		4931525	0					
ANR	4931676	Argument	( int ) tmpStatus		4931525	1					
ANR	4931677	CastExpression	( int ) tmpStatus		4931525	0					
ANR	4931678	CastTarget	int		4931525	0					
ANR	4931679	Identifier	tmpStatus		4931525	1					
ANR	4931680	ExpressionStatement	result = 1	117:2:2835:2845	4931525	1	True				
ANR	4931681	AssignmentExpression	result = 1		4931525	0		=			
ANR	4931682	Identifier	result		4931525	0					
ANR	4931683	PrimaryExpression	1		4931525	1					
ANR	4931684	IfStatement	if ( opts . verbosity >= VERB_INFO )		4931525	15					
ANR	4931685	Condition	opts . verbosity >= VERB_INFO	120:6:2857:2883	4931525	0	True				
ANR	4931686	RelationalExpression	opts . verbosity >= VERB_INFO		4931525	0		>=			
ANR	4931687	MemberAccess	opts . verbosity		4931525	0					
ANR	4931688	Identifier	opts		4931525	0					
ANR	4931689	Identifier	verbosity		4931525	1					
ANR	4931690	Identifier	VERB_INFO		4931525	1					
ANR	4931691	CompoundStatement		35:36:776:776	4931525	1					
ANR	4931692	ExpressionStatement	"printf ( ""Total of %d events read\\n"" , events )"	121:2:2891:2936	4931525	0	True				
ANR	4931693	CallExpression	"printf ( ""Total of %d events read\\n"" , events )"		4931525	0					
ANR	4931694	Callee	printf		4931525	0					
ANR	4931695	Identifier	printf		4931525	0					
ANR	4931696	ArgumentList	"""Total of %d events read\\n"""		4931525	1					
ANR	4931697	Argument	"""Total of %d events read\\n"""		4931525	0					
ANR	4931698	PrimaryExpression	"""Total of %d events read\\n"""		4931525	0					
ANR	4931699	Argument	events		4931525	1					
ANR	4931700	Identifier	events		4931525	0					
ANR	4931701	IfStatement	if ( result != 0 && opts . verbosity >= VERB_ERROR )		4931525	16					
ANR	4931702	Condition	result != 0 && opts . verbosity >= VERB_ERROR	124:6:2948:2990	4931525	0	True				
ANR	4931703	AndExpression	result != 0 && opts . verbosity >= VERB_ERROR		4931525	0		&&			
ANR	4931704	EqualityExpression	result != 0		4931525	0		!=			
ANR	4931705	Identifier	result		4931525	0					
ANR	4931706	PrimaryExpression	0		4931525	1					
ANR	4931707	RelationalExpression	opts . verbosity >= VERB_ERROR		4931525	1		>=			
ANR	4931708	MemberAccess	opts . verbosity		4931525	0					
ANR	4931709	Identifier	opts		4931525	0					
ANR	4931710	Identifier	verbosity		4931525	1					
ANR	4931711	Identifier	VERB_ERROR		4931525	1					
ANR	4931712	CompoundStatement		39:52:883:883	4931525	1					
ANR	4931713	ExpressionStatement	"printf ( ""test_log_reader FAILED\\n"" )"	125:2:2998:3034	4931525	0	True				
ANR	4931714	CallExpression	"printf ( ""test_log_reader FAILED\\n"" )"		4931525	0					
ANR	4931715	Callee	printf		4931525	0					
ANR	4931716	Identifier	printf		4931525	0					
ANR	4931717	ArgumentList	"""test_log_reader FAILED\\n"""		4931525	1					
ANR	4931718	Argument	"""test_log_reader FAILED\\n"""		4931525	0					
ANR	4931719	PrimaryExpression	"""test_log_reader FAILED\\n"""		4931525	0					
ANR	4931720	ExpressionStatement	"printf ( ""test_log_reader: exiting with status %d\\n"" , result )"	128:1:3041:3102	4931525	17	True				
ANR	4931721	CallExpression	"printf ( ""test_log_reader: exiting with status %d\\n"" , result )"		4931525	0					
ANR	4931722	Callee	printf		4931525	0					
ANR	4931723	Identifier	printf		4931525	0					
ANR	4931724	ArgumentList	"""test_log_reader: exiting with status %d\\n"""		4931525	1					
ANR	4931725	Argument	"""test_log_reader: exiting with status %d\\n"""		4931525	0					
ANR	4931726	PrimaryExpression	"""test_log_reader: exiting with status %d\\n"""		4931525	0					
ANR	4931727	Argument	result		4931525	1					
ANR	4931728	Identifier	result		4931525	0					
ANR	4931729	ExpressionStatement	exit ( result )	129:1:3105:3119	4931525	18	True				
ANR	4931730	CallExpression	exit ( result )		4931525	0					
ANR	4931731	Callee	exit		4931525	0					
ANR	4931732	Identifier	exit		4931525	0					
ANR	4931733	ArgumentList	result		4931525	1					
ANR	4931734	Argument	result		4931525	0					
ANR	4931735	Identifier	result		4931525	0					
ANR	4931736	ReturnStatement	return result ;	130:1:3122:3135	4931525	19	True				
ANR	4931737	Identifier	result		4931525	0					
ANR	4931738	ReturnType	int		4931525	1					
ANR	4931739	Identifier	main		4931525	2					
ANR	4931740	ParameterList	"int argc , const char * * argv"		4931525	3					
ANR	4931741	Parameter	int argc	85:5:2081:2088	4931525	0	True				
ANR	4931742	ParameterType	int		4931525	0					
ANR	4931743	Identifier	argc		4931525	1					
ANR	4931744	Parameter	const char * * argv	85:15:2091:2107	4931525	1	True				
ANR	4931745	ParameterType	const char * *		4931525	0					
ANR	4931746	Identifier	argv		4931525	1					
ANR	4931747	CFGEntryNode	ENTRY		4931525		True				
ANR	4931748	CFGExitNode	EXIT		4931525		True				
ANR	4931749	Symbol	argc		4931525						
ANR	4931750	Symbol	STATUS_CANCEL		4931525						
ANR	4931751	Symbol	VERB_ERROR		4931525						
ANR	4931752	Symbol	NULL		4931525						
ANR	4931753	Symbol	SUBSYSTEM_TYPE_TOOL		4931525						
ANR	4931754	Symbol	VERB_INFO		4931525						
ANR	4931755	Symbol	Termlog		4931525						
ANR	4931756	Symbol	get_param_functions		4931525						
ANR	4931757	Symbol	tmpStatus		4931525						
ANR	4931758	Symbol	D_ALWAYS		4931525						
ANR	4931759	Symbol	DebugFlags		4931525						
ANR	4931760	Symbol	p_funcs		4931525						
ANR	4931761	Symbol	argv		4931525						
ANR	4931762	Symbol	CheckArgs		4931525						
ANR	4931763	Symbol	STATUS_ERROR		4931525						
ANR	4931764	Symbol	result		4931525						
ANR	4931765	Symbol	opts . verbosity		4931525						
ANR	4931766	Symbol	opts		4931525						
ANR	4931767	Symbol	myDistro		4931525						
ANR	4931768	Symbol	true		4931525						
ANR	4931769	Symbol	STATUS_OK		4931525						
ANR	4931770	Symbol	ReadEvents		4931525						
ANR	4931771	Symbol	events		4931525						
ANR	4931772	Function	CheckArgs	133:0:3140:9572							
ANR	4931773	FunctionDef	"CheckArgs (int argc , const char * * argv , Options & opts)"		4931772	0					
ANR	4931774	CompoundStatement		135:0:3201:9572	4931772	0					
ANR	4931775	IdentifierDeclStatement	Status status = STATUS_OK ;	136:1:3204:3229	4931772	0	True				
ANR	4931776	IdentifierDecl	status = STATUS_OK		4931772	0					
ANR	4931777	IdentifierDeclType	Status		4931772	0					
ANR	4931778	Identifier	status		4931772	1					
ANR	4931779	AssignmentExpression	status = STATUS_OK		4931772	2		=			
ANR	4931780	Identifier	STATUS_OK		4931772	0					
ANR	4931781	Identifier	STATUS_OK		4931772	1					
ANR	4931782	Statement	const	138:1:3233:3237	4931772	1	True				
ANR	4931783	Statement	char	138:7:3239:3242	4931772	2	True				
ANR	4931784	Statement	*	138:12:3244:3244	4931772	3	True				
ANR	4931785	Statement	usage	138:14:3246:3250	4931772	4	True				
ANR	4931786	Statement	=	138:20:3252:3252	4931772	5	True				
ANR	4931787	Statement	"""Usage: test_log_reader [options] <filename>\\n"""	139:2:3256:3302	4931772	6	True				
ANR	4931788	Statement	"""  --debug|-d <level>: debug level (e.g., D_FULLDEBUG)\\n"""	140:2:3306:3362	4931772	7	True				
ANR	4931789	Statement	"""  --max-exec <number>: maximum number of execute events to read\\n"""	141:2:3366:3432	4931772	8	True				
ANR	4931790	Statement	"""  --miss-check: Enable missed event checking """	142:2:3436:3482	4931772	9	True				
ANR	4931791	Statement	"""(valid only with test writer)\\n"""	143:2:3486:3518	4931772	10	True				
ANR	4931792	Statement	"""  --persist|-p <filename>: file to persist to/from\\n"""	144:2:3522:3575	4931772	11	True				
ANR	4931793	Statement	if	145:6:3583:3584	4931772	12	True				
ANR	4931794	Statement	ENABLE_STATE_DUMP	145:9:3586:3602	4931772	13	True				
ANR	4931795	Statement	"""  --dump-state: dump the persisted reader state after reading it\\n"""	146:2:3606:3673	4931772	14	True				
ANR	4931796	Statement	endif	147:6:3681:3685	4931772	15	True				
ANR	4931797	Statement	"""  --p-ro|--p-rw|--p-wo: Set persitent state to """	148:2:3689:3737	4931772	16	True				
ANR	4931798	Statement	"""read-only/read-write/write-only\\n"""	149:2:3741:3775	4931772	17	True				
ANR	4931799	Statement	"""  --init-only: exit after initialization\\n"""	150:2:3779:3822	4931772	18	True				
ANR	4931800	Statement	"""  --rotation|-r <n>: enable rotation handling, set max #\\n"""	151:2:3826:3885	4931772	19	True				
ANR	4931801	Statement	"""  --no-rotation: disable rotation handling\\n"""	152:2:3889:3934	4931772	20	True				
ANR	4931802	Statement	"""  --no-sleep: No sleep between events\\n"""	153:2:3938:3978	4931772	21	True				
ANR	4931803	Statement	"""  --sleep <number>: how many seconds to sleep between events\\n"""	154:2:3982:4045	4931772	22	True				
ANR	4931804	Statement	"""  --stop: Send myself a SIGSTOP when no events available\\n"""	155:2:4049:4108	4931772	23	True				
ANR	4931805	Statement	"""  --exit|-x: Exit when no events available\\n"""	156:2:4112:4157	4931772	24	True				
ANR	4931806	Statement	"""  --eventlog|-e: Setup to read the EventLog\\n"""	157:2:4161:4207	4931772	25	True				
ANR	4931807	Statement	"""  --check-file-status: Check the file status, print when changed\\n"""	158:2:4211:4278	4931772	26	True				
ANR	4931808	Statement	"""  --ro: Read-only access to log file (disables locking)\\n"""	159:2:4282:4340	4931772	27	True				
ANR	4931809	Statement	"""  --no-term: No limit on terminte events\\n"""	160:2:4344:4387	4931772	28	True				
ANR	4931810	Statement	"""  --term <number>: number of terminate events to exit after\\n"""	161:2:4391:4453	4931772	29	True				
ANR	4931811	Statement	"""  --usage|--help|-h: print this message and exit\\n"""	162:2:4457:4508	4931772	30	True				
ANR	4931812	Statement	"""  -v: Increase verbosity level by 1\\n"""	163:2:4512:4550	4931772	31	True				
ANR	4931813	Statement	"""  --verbosity <number|name>: set verbosity level (default is ERROR)\\n"""	164:2:4554:4624	4931772	32	True				
ANR	4931814	Statement	"""    names: NONE=0 ERROR WARNING INFO ERROR\\n"""	165:2:4628:4673	4931772	33	True				
ANR	4931815	Statement	"""  --version: print the version number and compile date\\n"""	166:2:4677:4734	4931772	34	True				
ANR	4931816	ExpressionStatement	"""  <filename>: the log file to read\\n"""	167:2:4738:4776	4931772	35	True				
ANR	4931817	PrimaryExpression	"""  <filename>: the log file to read\\n"""		4931772	0					
ANR	4931818	ExpressionStatement	opts . logFile = NULL	169:1:4780:4799	4931772	36	True				
ANR	4931819	AssignmentExpression	opts . logFile = NULL		4931772	0		=			
ANR	4931820	MemberAccess	opts . logFile		4931772	0					
ANR	4931821	Identifier	opts		4931772	0					
ANR	4931822	Identifier	logFile		4931772	1					
ANR	4931823	Identifier	NULL		4931772	1					
ANR	4931824	ExpressionStatement	opts . persistFile = NULL	170:1:4802:4825	4931772	37	True				
ANR	4931825	AssignmentExpression	opts . persistFile = NULL		4931772	0		=			
ANR	4931826	MemberAccess	opts . persistFile		4931772	0					
ANR	4931827	Identifier	opts		4931772	0					
ANR	4931828	Identifier	persistFile		4931772	1					
ANR	4931829	Identifier	NULL		4931772	1					
ANR	4931830	ExpressionStatement	opts . readPersist = false	171:1:4828:4852	4931772	38	True				
ANR	4931831	AssignmentExpression	opts . readPersist = false		4931772	0		=			
ANR	4931832	MemberAccess	opts . readPersist		4931772	0					
ANR	4931833	Identifier	opts		4931772	0					
ANR	4931834	Identifier	readPersist		4931772	1					
ANR	4931835	Identifier	false		4931772	1					
ANR	4931836	ExpressionStatement	opts . writePersist = false	172:1:4855:4880	4931772	39	True				
ANR	4931837	AssignmentExpression	opts . writePersist = false		4931772	0		=			
ANR	4931838	MemberAccess	opts . writePersist		4931772	0					
ANR	4931839	Identifier	opts		4931772	0					
ANR	4931840	Identifier	writePersist		4931772	1					
ANR	4931841	Identifier	false		4931772	1					
ANR	4931842	ExpressionStatement	opts . readOnly = false	173:1:4883:4904	4931772	40	True				
ANR	4931843	AssignmentExpression	opts . readOnly = false		4931772	0		=			
ANR	4931844	MemberAccess	opts . readOnly		4931772	0					
ANR	4931845	Identifier	opts		4931772	0					
ANR	4931846	Identifier	readOnly		4931772	1					
ANR	4931847	Identifier	false		4931772	1					
ANR	4931848	ExpressionStatement	opts . maxExec = 0	174:1:4907:4923	4931772	41	True				
ANR	4931849	AssignmentExpression	opts . maxExec = 0		4931772	0		=			
ANR	4931850	MemberAccess	opts . maxExec		4931772	0					
ANR	4931851	Identifier	opts		4931772	0					
ANR	4931852	Identifier	maxExec		4931772	1					
ANR	4931853	PrimaryExpression	0		4931772	1					
ANR	4931854	ExpressionStatement	opts . isEventLog = false	175:1:4926:4949	4931772	42	True				
ANR	4931855	AssignmentExpression	opts . isEventLog = false		4931772	0		=			
ANR	4931856	MemberAccess	opts . isEventLog		4931772	0					
ANR	4931857	Identifier	opts		4931772	0					
ANR	4931858	Identifier	isEventLog		4931772	1					
ANR	4931859	Identifier	false		4931772	1					
ANR	4931860	ExpressionStatement	opts . checkFileStatus = false	176:1:4952:4980	4931772	43	True				
ANR	4931861	AssignmentExpression	opts . checkFileStatus = false		4931772	0		=			
ANR	4931862	MemberAccess	opts . checkFileStatus		4931772	0					
ANR	4931863	Identifier	opts		4931772	0					
ANR	4931864	Identifier	checkFileStatus		4931772	1					
ANR	4931865	Identifier	false		4931772	1					
ANR	4931866	ExpressionStatement	opts . exit = false	177:1:4983:5000	4931772	44	True				
ANR	4931867	AssignmentExpression	opts . exit = false		4931772	0		=			
ANR	4931868	MemberAccess	opts . exit		4931772	0					
ANR	4931869	Identifier	opts		4931772	0					
ANR	4931870	Identifier	exit		4931772	1					
ANR	4931871	Identifier	false		4931772	1					
ANR	4931872	ExpressionStatement	opts . sleep = 5	178:1:5003:5017	4931772	45	True				
ANR	4931873	AssignmentExpression	opts . sleep = 5		4931772	0		=			
ANR	4931874	MemberAccess	opts . sleep		4931772	0					
ANR	4931875	Identifier	opts		4931772	0					
ANR	4931876	Identifier	sleep		4931772	1					
ANR	4931877	PrimaryExpression	5		4931772	1					
ANR	4931878	ExpressionStatement	opts . stop = 0	179:1:5020:5033	4931772	46	True				
ANR	4931879	AssignmentExpression	opts . stop = 0		4931772	0		=			
ANR	4931880	MemberAccess	opts . stop		4931772	0					
ANR	4931881	Identifier	opts		4931772	0					
ANR	4931882	Identifier	stop		4931772	1					
ANR	4931883	PrimaryExpression	0		4931772	1					
ANR	4931884	ExpressionStatement	opts . term = 1	180:1:5036:5049	4931772	47	True				
ANR	4931885	AssignmentExpression	opts . term = 1		4931772	0		=			
ANR	4931886	MemberAccess	opts . term		4931772	0					
ANR	4931887	Identifier	opts		4931772	0					
ANR	4931888	Identifier	term		4931772	1					
ANR	4931889	PrimaryExpression	1		4931772	1					
ANR	4931890	ExpressionStatement	opts . verbosity = VERB_ERROR	181:1:5052:5079	4931772	48	True				
ANR	4931891	AssignmentExpression	opts . verbosity = VERB_ERROR		4931772	0		=			
ANR	4931892	MemberAccess	opts . verbosity		4931772	0					
ANR	4931893	Identifier	opts		4931772	0					
ANR	4931894	Identifier	verbosity		4931772	1					
ANR	4931895	Identifier	VERB_ERROR		4931772	1					
ANR	4931896	ExpressionStatement	opts . rotation = false	182:1:5082:5103	4931772	49	True				
ANR	4931897	AssignmentExpression	opts . rotation = false		4931772	0		=			
ANR	4931898	MemberAccess	opts . rotation		4931772	0					
ANR	4931899	Identifier	opts		4931772	0					
ANR	4931900	Identifier	rotation		4931772	1					
ANR	4931901	Identifier	false		4931772	1					
ANR	4931902	ExpressionStatement	opts . maxRotations = 0	183:1:5106:5127	4931772	50	True				
ANR	4931903	AssignmentExpression	opts . maxRotations = 0		4931772	0		=			
ANR	4931904	MemberAccess	opts . maxRotations		4931772	0					
ANR	4931905	Identifier	opts		4931772	0					
ANR	4931906	Identifier	maxRotations		4931772	1					
ANR	4931907	PrimaryExpression	0		4931772	1					
ANR	4931908	ExpressionStatement	opts . exitAfterInit = false	184:1:5130:5156	4931772	51	True				
ANR	4931909	AssignmentExpression	opts . exitAfterInit = false		4931772	0		=			
ANR	4931910	MemberAccess	opts . exitAfterInit		4931772	0					
ANR	4931911	Identifier	opts		4931772	0					
ANR	4931912	Identifier	exitAfterInit		4931772	1					
ANR	4931913	Identifier	false		4931772	1					
ANR	4931914	ExpressionStatement	opts . dumpState = false	185:1:5159:5181	4931772	52	True				
ANR	4931915	AssignmentExpression	opts . dumpState = false		4931772	0		=			
ANR	4931916	MemberAccess	opts . dumpState		4931772	0					
ANR	4931917	Identifier	opts		4931772	0					
ANR	4931918	Identifier	dumpState		4931772	1					
ANR	4931919	Identifier	false		4931772	1					
ANR	4931920	ExpressionStatement	opts . missedCheck = false	186:1:5184:5208	4931772	53	True				
ANR	4931921	AssignmentExpression	opts . missedCheck = false		4931772	0		=			
ANR	4931922	MemberAccess	opts . missedCheck		4931772	0					
ANR	4931923	Identifier	opts		4931772	0					
ANR	4931924	Identifier	missedCheck		4931772	1					
ANR	4931925	Identifier	false		4931772	1					
ANR	4931926	IdentifierDeclStatement	int argno = 1 ;	188:1:5212:5226	4931772	54	True				
ANR	4931927	IdentifierDecl	argno = 1		4931772	0					
ANR	4931928	IdentifierDeclType	int		4931772	0					
ANR	4931929	Identifier	argno		4931772	1					
ANR	4931930	AssignmentExpression	argno = 1		4931772	2		=			
ANR	4931931	Identifier	argno		4931772	0					
ANR	4931932	PrimaryExpression	1		4931772	1					
ANR	4931933	WhileStatement	while ( ( argno < argc ) & ( status == STATUS_OK ) )		4931772	55					
ANR	4931934	Condition	( argno < argc ) & ( status == STATUS_OK )	189:9:5237:5274	4931772	0	True				
ANR	4931935	BitAndExpression	( argno < argc ) & ( status == STATUS_OK )		4931772	0		&			
ANR	4931936	RelationalExpression	argno < argc		4931772	0		<			
ANR	4931937	Identifier	argno		4931772	0					
ANR	4931938	Identifier	argc		4931772	1					
ANR	4931939	EqualityExpression	status == STATUS_OK		4931772	1		==			
ANR	4931940	Identifier	status		4931772	0					
ANR	4931941	Identifier	STATUS_OK		4931772	1					
ANR	4931942	CompoundStatement		56:2:2080:2114	4931772	1					
ANR	4931943	IdentifierDeclStatement	"SimpleArg arg ( argv , argc , argno ) ;"	190:2:5282:5316	4931772	0	True				
ANR	4931944	IdentifierDecl	"arg ( argv , argc , argno )"		4931772	0					
ANR	4931945	IdentifierDeclType	SimpleArg		4931772	0					
ANR	4931946	Identifier	arg		4931772	1					
ANR	4931947	Expression	"argv , argc , argno"		4931772	2					
ANR	4931948	Identifier	argv		4931772	0					
ANR	4931949	Expression	"argc , argno"		4931772	1					
ANR	4931950	Identifier	argc		4931772	0					
ANR	4931951	Identifier	argno		4931772	1					
ANR	4931952	IfStatement	if ( arg . Error ( ) )		4931772	1					
ANR	4931953	Condition	arg . Error ( )	192:7:5326:5336	4931772	0	True				
ANR	4931954	CallExpression	arg . Error ( )		4931772	0					
ANR	4931955	Callee	arg . Error		4931772	0					
ANR	4931956	MemberAccess	arg . Error		4931772	0					
ANR	4931957	Identifier	arg		4931772	0					
ANR	4931958	Identifier	Error		4931772	1					
ANR	4931959	ArgumentList			4931772	1					
ANR	4931960	CompoundStatement		58:21:2138:2138	4931772	1					
ANR	4931961	ExpressionStatement	"printf ( ""%s"" , usage )"	193:3:5345:5364	4931772	0	True				
ANR	4931962	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4931963	Callee	printf		4931772	0					
ANR	4931964	Identifier	printf		4931772	0					
ANR	4931965	ArgumentList	"""%s"""		4931772	1					
ANR	4931966	Argument	"""%s"""		4931772	0					
ANR	4931967	PrimaryExpression	"""%s"""		4931772	0					
ANR	4931968	Argument	usage		4931772	1					
ANR	4931969	Identifier	usage		4931772	0					
ANR	4931970	ExpressionStatement	status = STATUS_ERROR	194:3:5369:5390	4931772	1	True				
ANR	4931971	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4931972	Identifier	status		4931772	0					
ANR	4931973	Identifier	STATUS_ERROR		4931772	1					
ANR	4931974	IfStatement	"if ( arg . Match ( 'd' , ""debug"" ) )"		4931772	2					
ANR	4931975	Condition	"arg . Match ( 'd' , ""debug"" )"	197:7:5404:5426	4931772	0	True				
ANR	4931976	CallExpression	"arg . Match ( 'd' , ""debug"" )"		4931772	0					
ANR	4931977	Callee	arg . Match		4931772	0					
ANR	4931978	MemberAccess	arg . Match		4931772	0					
ANR	4931979	Identifier	arg		4931772	0					
ANR	4931980	Identifier	Match		4931772	1					
ANR	4931981	ArgumentList	'd'		4931772	1					
ANR	4931982	Argument	'd'		4931772	0					
ANR	4931983	PrimaryExpression	'd'		4931772	0					
ANR	4931984	Argument	"""debug"""		4931772	1					
ANR	4931985	PrimaryExpression	"""debug"""		4931772	0					
ANR	4931986	CompoundStatement		63:33:2228:2228	4931772	1					
ANR	4931987	IfStatement	if ( arg . hasOpt ( ) )		4931772	0					
ANR	4931988	Condition	arg . hasOpt ( )	198:8:5440:5451	4931772	0	True				
ANR	4931989	CallExpression	arg . hasOpt ( )		4931772	0					
ANR	4931990	Callee	arg . hasOpt		4931772	0					
ANR	4931991	MemberAccess	arg . hasOpt		4931772	0					
ANR	4931992	Identifier	arg		4931772	0					
ANR	4931993	Identifier	hasOpt		4931772	1					
ANR	4931994	ArgumentList			4931772	1					
ANR	4931995	CompoundStatement		65:4:2259:2276	4931772	1					
ANR	4931996	IdentifierDeclStatement	const char * flags ;	199:4:5461:5478	4931772	0	True				
ANR	4931997	IdentifierDecl	* flags		4931772	0					
ANR	4931998	IdentifierDeclType	const char *		4931772	0					
ANR	4931999	Identifier	flags		4931772	1					
ANR	4932000	ExpressionStatement	arg . getOpt ( flags )	200:4:5484:5503	4931772	1	True				
ANR	4932001	CallExpression	arg . getOpt ( flags )		4931772	0					
ANR	4932002	Callee	arg . getOpt		4931772	0					
ANR	4932003	MemberAccess	arg . getOpt		4931772	0					
ANR	4932004	Identifier	arg		4931772	0					
ANR	4932005	Identifier	getOpt		4931772	1					
ANR	4932006	ArgumentList	flags		4931772	1					
ANR	4932007	Argument	flags		4931772	0					
ANR	4932008	Identifier	flags		4931772	0					
ANR	4932009	Statement	set_debug_flags	201:4:5509:5523	4931772	2	True				
ANR	4932010	Statement	(	201:19:5524:5524	4931772	3	True				
ANR	4932011	Statement	const_cast	201:21:5526:5535	4931772	4	True				
ANR	4932012	Statement	<	201:31:5536:5536	4931772	5	True				
ANR	4932013	Statement	char	201:32:5537:5540	4931772	6	True				
ANR	4932014	Statement	*	201:37:5542:5542	4931772	7	True				
ANR	4932015	Statement	>	201:38:5543:5543	4931772	8	True				
ANR	4932016	Statement	(	201:39:5544:5544	4931772	9	True				
ANR	4932017	Statement	flags	201:40:5545:5549	4931772	10	True				
ANR	4932018	Statement	)	201:45:5550:5550	4931772	11	True				
ANR	4932019	Statement	)	201:47:5552:5552	4931772	12	True				
ANR	4932020	ExpressionStatement		201:48:5553:5553	4931772	13	True				
ANR	4932021	ElseStatement	else		4931772	0					
ANR	4932022	CompoundStatement		68:10:2363:2363	4931772	0					
ANR	4932023	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	203:4:5571:5625	4931772	0	True				
ANR	4932024	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932025	Callee	fprintf		4931772	0					
ANR	4932026	Identifier	fprintf		4931772	0					
ANR	4932027	ArgumentList	stderr		4931772	1					
ANR	4932028	Argument	stderr		4931772	0					
ANR	4932029	Identifier	stderr		4931772	0					
ANR	4932030	Argument	"""Value needed for '%s'\\n"""		4931772	1					
ANR	4932031	PrimaryExpression	"""Value needed for '%s'\\n"""		4931772	0					
ANR	4932032	Argument	arg . Arg ( )		4931772	2					
ANR	4932033	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932034	Callee	arg . Arg		4931772	0					
ANR	4932035	MemberAccess	arg . Arg		4931772	0					
ANR	4932036	Identifier	arg		4931772	0					
ANR	4932037	Identifier	Arg		4931772	1					
ANR	4932038	ArgumentList			4931772	1					
ANR	4932039	ExpressionStatement	"printf ( ""%s"" , usage )"	204:4:5631:5650	4931772	1	True				
ANR	4932040	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932041	Callee	printf		4931772	0					
ANR	4932042	Identifier	printf		4931772	0					
ANR	4932043	ArgumentList	"""%s"""		4931772	1					
ANR	4932044	Argument	"""%s"""		4931772	0					
ANR	4932045	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932046	Argument	usage		4931772	1					
ANR	4932047	Identifier	usage		4931772	0					
ANR	4932048	ExpressionStatement	status = STATUS_ERROR	205:4:5656:5677	4931772	2	True				
ANR	4932049	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4932050	Identifier	status		4931772	0					
ANR	4932051	Identifier	STATUS_ERROR		4931772	1					
ANR	4932052	ElseStatement	else		4931772	0					
ANR	4932053	IfStatement	"if ( arg . Match ( ""max-exec"" ) )"		4931772	0					
ANR	4932054	Condition	"arg . Match ( ""max-exec"" )"	208:14:5699:5719	4931772	0	True				
ANR	4932055	CallExpression	"arg . Match ( ""max-exec"" )"		4931772	0					
ANR	4932056	Callee	arg . Match		4931772	0					
ANR	4932057	MemberAccess	arg . Match		4931772	0					
ANR	4932058	Identifier	arg		4931772	0					
ANR	4932059	Identifier	Match		4931772	1					
ANR	4932060	ArgumentList	"""max-exec"""		4931772	1					
ANR	4932061	Argument	"""max-exec"""		4931772	0					
ANR	4932062	PrimaryExpression	"""max-exec"""		4931772	0					
ANR	4932063	CompoundStatement		74:38:2521:2521	4931772	1					
ANR	4932064	IfStatement	if ( ! arg . getOpt ( opts . maxExec ) )		4931772	0					
ANR	4932065	Condition	! arg . getOpt ( opts . maxExec )	209:8:5733:5759	4931772	0	True				
ANR	4932066	UnaryOperationExpression	! arg . getOpt ( opts . maxExec )		4931772	0					
ANR	4932067	UnaryOperator	!		4931772	0					
ANR	4932068	CallExpression	arg . getOpt ( opts . maxExec )		4931772	1					
ANR	4932069	Callee	arg . getOpt		4931772	0					
ANR	4932070	MemberAccess	arg . getOpt		4931772	0					
ANR	4932071	Identifier	arg		4931772	0					
ANR	4932072	Identifier	getOpt		4931772	1					
ANR	4932073	ArgumentList	opts . maxExec		4931772	1					
ANR	4932074	Argument	opts . maxExec		4931772	0					
ANR	4932075	MemberAccess	opts . maxExec		4931772	0					
ANR	4932076	Identifier	opts		4931772	0					
ANR	4932077	Identifier	maxExec		4931772	1					
ANR	4932078	CompoundStatement		75:38:2561:2561	4931772	1					
ANR	4932079	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	210:4:5769:5823	4931772	0	True				
ANR	4932080	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932081	Callee	fprintf		4931772	0					
ANR	4932082	Identifier	fprintf		4931772	0					
ANR	4932083	ArgumentList	stderr		4931772	1					
ANR	4932084	Argument	stderr		4931772	0					
ANR	4932085	Identifier	stderr		4931772	0					
ANR	4932086	Argument	"""Value needed for '%s'\\n"""		4931772	1					
ANR	4932087	PrimaryExpression	"""Value needed for '%s'\\n"""		4931772	0					
ANR	4932088	Argument	arg . Arg ( )		4931772	2					
ANR	4932089	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932090	Callee	arg . Arg		4931772	0					
ANR	4932091	MemberAccess	arg . Arg		4931772	0					
ANR	4932092	Identifier	arg		4931772	0					
ANR	4932093	Identifier	Arg		4931772	1					
ANR	4932094	ArgumentList			4931772	1					
ANR	4932095	ExpressionStatement	"printf ( ""%s"" , usage )"	211:4:5829:5848	4931772	1	True				
ANR	4932096	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932097	Callee	printf		4931772	0					
ANR	4932098	Identifier	printf		4931772	0					
ANR	4932099	ArgumentList	"""%s"""		4931772	1					
ANR	4932100	Argument	"""%s"""		4931772	0					
ANR	4932101	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932102	Argument	usage		4931772	1					
ANR	4932103	Identifier	usage		4931772	0					
ANR	4932104	ExpressionStatement	status = STATUS_ERROR	212:4:5854:5875	4931772	2	True				
ANR	4932105	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4932106	Identifier	status		4931772	0					
ANR	4932107	Identifier	STATUS_ERROR		4931772	1					
ANR	4932108	ElseStatement	else		4931772	0					
ANR	4932109	IfStatement	"if ( arg . Match ( ""miss-check"" ) )"		4931772	0					
ANR	4932110	Condition	"arg . Match ( ""miss-check"" )"	215:14:5897:5919	4931772	0	True				
ANR	4932111	CallExpression	"arg . Match ( ""miss-check"" )"		4931772	0					
ANR	4932112	Callee	arg . Match		4931772	0					
ANR	4932113	MemberAccess	arg . Match		4931772	0					
ANR	4932114	Identifier	arg		4931772	0					
ANR	4932115	Identifier	Match		4931772	1					
ANR	4932116	ArgumentList	"""miss-check"""		4931772	1					
ANR	4932117	Argument	"""miss-check"""		4931772	0					
ANR	4932118	PrimaryExpression	"""miss-check"""		4931772	0					
ANR	4932119	CompoundStatement		81:40:2721:2721	4931772	1					
ANR	4932120	ExpressionStatement	opts . missedCheck = true	216:3:5928:5951	4931772	0	True				
ANR	4932121	AssignmentExpression	opts . missedCheck = true		4931772	0		=			
ANR	4932122	MemberAccess	opts . missedCheck		4931772	0					
ANR	4932123	Identifier	opts		4931772	0					
ANR	4932124	Identifier	missedCheck		4931772	1					
ANR	4932125	Identifier	true		4931772	1					
ANR	4932126	ElseStatement	else		4931772	0					
ANR	4932127	IfStatement	"if ( arg . Match ( 'e' , ""eventlog"" ) )"		4931772	0					
ANR	4932128	Condition	"arg . Match ( 'e' , ""eventlog"" )"	218:14:5968:5993	4931772	0	True				
ANR	4932129	CallExpression	"arg . Match ( 'e' , ""eventlog"" )"		4931772	0					
ANR	4932130	Callee	arg . Match		4931772	0					
ANR	4932131	MemberAccess	arg . Match		4931772	0					
ANR	4932132	Identifier	arg		4931772	0					
ANR	4932133	Identifier	Match		4931772	1					
ANR	4932134	ArgumentList	'e'		4931772	1					
ANR	4932135	Argument	'e'		4931772	0					
ANR	4932136	PrimaryExpression	'e'		4931772	0					
ANR	4932137	Argument	"""eventlog"""		4931772	1					
ANR	4932138	PrimaryExpression	"""eventlog"""		4931772	0					
ANR	4932139	CompoundStatement		84:43:2795:2795	4931772	1					
ANR	4932140	ExpressionStatement	opts . isEventLog = true	219:3:6002:6024	4931772	0	True				
ANR	4932141	AssignmentExpression	opts . isEventLog = true		4931772	0		=			
ANR	4932142	MemberAccess	opts . isEventLog		4931772	0					
ANR	4932143	Identifier	opts		4931772	0					
ANR	4932144	Identifier	isEventLog		4931772	1					
ANR	4932145	Identifier	true		4931772	1					
ANR	4932146	ElseStatement	else		4931772	0					
ANR	4932147	IfStatement	"if ( arg . Match ( ""ro"" ) )"		4931772	0					
ANR	4932148	Condition	"arg . Match ( ""ro"" )"	221:14:6041:6055	4931772	0	True				
ANR	4932149	CallExpression	"arg . Match ( ""ro"" )"		4931772	0					
ANR	4932150	Callee	arg . Match		4931772	0					
ANR	4932151	MemberAccess	arg . Match		4931772	0					
ANR	4932152	Identifier	arg		4931772	0					
ANR	4932153	Identifier	Match		4931772	1					
ANR	4932154	ArgumentList	"""ro"""		4931772	1					
ANR	4932155	Argument	"""ro"""		4931772	0					
ANR	4932156	PrimaryExpression	"""ro"""		4931772	0					
ANR	4932157	CompoundStatement		87:32:2857:2857	4931772	1					
ANR	4932158	ExpressionStatement	opts . readOnly = true	222:3:6064:6084	4931772	0	True				
ANR	4932159	AssignmentExpression	opts . readOnly = true		4931772	0		=			
ANR	4932160	MemberAccess	opts . readOnly		4931772	0					
ANR	4932161	Identifier	opts		4931772	0					
ANR	4932162	Identifier	readOnly		4931772	1					
ANR	4932163	Identifier	true		4931772	1					
ANR	4932164	ElseStatement	else		4931772	0					
ANR	4932165	IfStatement	"if ( arg . Match ( 'p' , ""persist"" ) )"		4931772	0					
ANR	4932166	Condition	"arg . Match ( 'p' , ""persist"" )"	224:14:6101:6125	4931772	0	True				
ANR	4932167	CallExpression	"arg . Match ( 'p' , ""persist"" )"		4931772	0					
ANR	4932168	Callee	arg . Match		4931772	0					
ANR	4932169	MemberAccess	arg . Match		4931772	0					
ANR	4932170	Identifier	arg		4931772	0					
ANR	4932171	Identifier	Match		4931772	1					
ANR	4932172	ArgumentList	'p'		4931772	1					
ANR	4932173	Argument	'p'		4931772	0					
ANR	4932174	PrimaryExpression	'p'		4931772	0					
ANR	4932175	Argument	"""persist"""		4931772	1					
ANR	4932176	PrimaryExpression	"""persist"""		4931772	0					
ANR	4932177	CompoundStatement		90:42:2927:2927	4931772	1					
ANR	4932178	IfStatement	if ( arg . hasOpt ( ) )		4931772	0					
ANR	4932179	Condition	arg . hasOpt ( )	225:8:6139:6150	4931772	0	True				
ANR	4932180	CallExpression	arg . hasOpt ( )		4931772	0					
ANR	4932181	Callee	arg . hasOpt		4931772	0					
ANR	4932182	MemberAccess	arg . hasOpt		4931772	0					
ANR	4932183	Identifier	arg		4931772	0					
ANR	4932184	Identifier	hasOpt		4931772	1					
ANR	4932185	ArgumentList			4931772	1					
ANR	4932186	CompoundStatement		91:23:2952:2952	4931772	1					
ANR	4932187	ExpressionStatement	arg . getOpt ( opts . persistFile )	226:4:6160:6190	4931772	0	True				
ANR	4932188	CallExpression	arg . getOpt ( opts . persistFile )		4931772	0					
ANR	4932189	Callee	arg . getOpt		4931772	0					
ANR	4932190	MemberAccess	arg . getOpt		4931772	0					
ANR	4932191	Identifier	arg		4931772	0					
ANR	4932192	Identifier	getOpt		4931772	1					
ANR	4932193	ArgumentList	opts . persistFile		4931772	1					
ANR	4932194	Argument	opts . persistFile		4931772	0					
ANR	4932195	MemberAccess	opts . persistFile		4931772	0					
ANR	4932196	Identifier	opts		4931772	0					
ANR	4932197	Identifier	persistFile		4931772	1					
ANR	4932198	ExpressionStatement	opts . readPersist = true	227:4:6196:6219	4931772	1	True				
ANR	4932199	AssignmentExpression	opts . readPersist = true		4931772	0		=			
ANR	4932200	MemberAccess	opts . readPersist		4931772	0					
ANR	4932201	Identifier	opts		4931772	0					
ANR	4932202	Identifier	readPersist		4931772	1					
ANR	4932203	Identifier	true		4931772	1					
ANR	4932204	ExpressionStatement	opts . writePersist = true	228:4:6225:6249	4931772	2	True				
ANR	4932205	AssignmentExpression	opts . writePersist = true		4931772	0		=			
ANR	4932206	MemberAccess	opts . writePersist		4931772	0					
ANR	4932207	Identifier	opts		4931772	0					
ANR	4932208	Identifier	writePersist		4931772	1					
ANR	4932209	Identifier	true		4931772	1					
ANR	4932210	ElseStatement	else		4931772	0					
ANR	4932211	CompoundStatement		95:10:3059:3059	4931772	0					
ANR	4932212	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	230:4:6267:6321	4931772	0	True				
ANR	4932213	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932214	Callee	fprintf		4931772	0					
ANR	4932215	Identifier	fprintf		4931772	0					
ANR	4932216	ArgumentList	stderr		4931772	1					
ANR	4932217	Argument	stderr		4931772	0					
ANR	4932218	Identifier	stderr		4931772	0					
ANR	4932219	Argument	"""Value needed for '%s'\\n"""		4931772	1					
ANR	4932220	PrimaryExpression	"""Value needed for '%s'\\n"""		4931772	0					
ANR	4932221	Argument	arg . Arg ( )		4931772	2					
ANR	4932222	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932223	Callee	arg . Arg		4931772	0					
ANR	4932224	MemberAccess	arg . Arg		4931772	0					
ANR	4932225	Identifier	arg		4931772	0					
ANR	4932226	Identifier	Arg		4931772	1					
ANR	4932227	ArgumentList			4931772	1					
ANR	4932228	ExpressionStatement	"printf ( ""%s"" , usage )"	231:4:6327:6346	4931772	1	True				
ANR	4932229	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932230	Callee	printf		4931772	0					
ANR	4932231	Identifier	printf		4931772	0					
ANR	4932232	ArgumentList	"""%s"""		4931772	1					
ANR	4932233	Argument	"""%s"""		4931772	0					
ANR	4932234	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932235	Argument	usage		4931772	1					
ANR	4932236	Identifier	usage		4931772	0					
ANR	4932237	ExpressionStatement	status = STATUS_ERROR	232:4:6352:6373	4931772	2	True				
ANR	4932238	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4932239	Identifier	status		4931772	0					
ANR	4932240	Identifier	STATUS_ERROR		4931772	1					
ANR	4932241	Statement	if	235:6:6387:6388	4931772	1	True				
ANR	4932242	Statement	ENABLE_STATE_DUMP	235:9:6390:6406	4931772	2	True				
ANR	4932243	ElseStatement	else		4931772	0					
ANR	4932244	IfStatement	"if ( arg . Match ( ""dump-state"" ) )"		4931772	0					
ANR	4932245	Condition	"arg . Match ( ""dump-state"" )"	236:14:6422:6444	4931772	0	True				
ANR	4932246	CallExpression	"arg . Match ( ""dump-state"" )"		4931772	0					
ANR	4932247	Callee	arg . Match		4931772	0					
ANR	4932248	MemberAccess	arg . Match		4931772	0					
ANR	4932249	Identifier	arg		4931772	0					
ANR	4932250	Identifier	Match		4931772	1					
ANR	4932251	ArgumentList	"""dump-state"""		4931772	1					
ANR	4932252	Argument	"""dump-state"""		4931772	0					
ANR	4932253	PrimaryExpression	"""dump-state"""		4931772	0					
ANR	4932254	CompoundStatement		102:40:3246:3246	4931772	1					
ANR	4932255	ExpressionStatement	opts . dumpState = true	237:3:6453:6474	4931772	0	True				
ANR	4932256	AssignmentExpression	opts . dumpState = true		4931772	0		=			
ANR	4932257	MemberAccess	opts . dumpState		4931772	0					
ANR	4932258	Identifier	opts		4931772	0					
ANR	4932259	Identifier	dumpState		4931772	1					
ANR	4932260	Identifier	true		4931772	1					
ANR	4932261	Statement	endif	238:6:6482:6486	4931772	1	True				
ANR	4932262	ElseStatement	else		4931772	0					
ANR	4932263	IfStatement	"if ( arg . Match ( ""check-file-status"" ) )"		4931772	0					
ANR	4932264	Condition	"arg . Match ( ""check-file-status"" )"	240:14:6503:6532	4931772	0	True				
ANR	4932265	CallExpression	"arg . Match ( ""check-file-status"" )"		4931772	0					
ANR	4932266	Callee	arg . Match		4931772	0					
ANR	4932267	MemberAccess	arg . Match		4931772	0					
ANR	4932268	Identifier	arg		4931772	0					
ANR	4932269	Identifier	Match		4931772	1					
ANR	4932270	ArgumentList	"""check-file-status"""		4931772	1					
ANR	4932271	Argument	"""check-file-status"""		4931772	0					
ANR	4932272	PrimaryExpression	"""check-file-status"""		4931772	0					
ANR	4932273	CompoundStatement		106:47:3334:3334	4931772	1					
ANR	4932274	ExpressionStatement	opts . checkFileStatus = true	241:3:6541:6568	4931772	0	True				
ANR	4932275	AssignmentExpression	opts . checkFileStatus = true		4931772	0		=			
ANR	4932276	MemberAccess	opts . checkFileStatus		4931772	0					
ANR	4932277	Identifier	opts		4931772	0					
ANR	4932278	Identifier	checkFileStatus		4931772	1					
ANR	4932279	Identifier	true		4931772	1					
ANR	4932280	ElseStatement	else		4931772	0					
ANR	4932281	IfStatement	"if ( arg . Match ( ""init-only"" ) )"		4931772	0					
ANR	4932282	Condition	"arg . Match ( ""init-only"" )"	243:14:6585:6606	4931772	0	True				
ANR	4932283	CallExpression	"arg . Match ( ""init-only"" )"		4931772	0					
ANR	4932284	Callee	arg . Match		4931772	0					
ANR	4932285	MemberAccess	arg . Match		4931772	0					
ANR	4932286	Identifier	arg		4931772	0					
ANR	4932287	Identifier	Match		4931772	1					
ANR	4932288	ArgumentList	"""init-only"""		4931772	1					
ANR	4932289	Argument	"""init-only"""		4931772	0					
ANR	4932290	PrimaryExpression	"""init-only"""		4931772	0					
ANR	4932291	CompoundStatement		109:39:3408:3408	4931772	1					
ANR	4932292	ExpressionStatement	opts . exitAfterInit = true	244:3:6615:6640	4931772	0	True				
ANR	4932293	AssignmentExpression	opts . exitAfterInit = true		4931772	0		=			
ANR	4932294	MemberAccess	opts . exitAfterInit		4931772	0					
ANR	4932295	Identifier	opts		4931772	0					
ANR	4932296	Identifier	exitAfterInit		4931772	1					
ANR	4932297	Identifier	true		4931772	1					
ANR	4932298	ElseStatement	else		4931772	0					
ANR	4932299	IfStatement	"if ( arg . Match ( ""p-ro"" ) )"		4931772	0					
ANR	4932300	Condition	"arg . Match ( ""p-ro"" )"	246:14:6657:6673	4931772	0	True				
ANR	4932301	CallExpression	"arg . Match ( ""p-ro"" )"		4931772	0					
ANR	4932302	Callee	arg . Match		4931772	0					
ANR	4932303	MemberAccess	arg . Match		4931772	0					
ANR	4932304	Identifier	arg		4931772	0					
ANR	4932305	Identifier	Match		4931772	1					
ANR	4932306	ArgumentList	"""p-ro"""		4931772	1					
ANR	4932307	Argument	"""p-ro"""		4931772	0					
ANR	4932308	PrimaryExpression	"""p-ro"""		4931772	0					
ANR	4932309	CompoundStatement		112:34:3475:3475	4931772	1					
ANR	4932310	ExpressionStatement	opts . readPersist = true	247:3:6682:6705	4931772	0	True				
ANR	4932311	AssignmentExpression	opts . readPersist = true		4931772	0		=			
ANR	4932312	MemberAccess	opts . readPersist		4931772	0					
ANR	4932313	Identifier	opts		4931772	0					
ANR	4932314	Identifier	readPersist		4931772	1					
ANR	4932315	Identifier	true		4931772	1					
ANR	4932316	ExpressionStatement	opts . writePersist = false	248:3:6710:6735	4931772	1	True				
ANR	4932317	AssignmentExpression	opts . writePersist = false		4931772	0		=			
ANR	4932318	MemberAccess	opts . writePersist		4931772	0					
ANR	4932319	Identifier	opts		4931772	0					
ANR	4932320	Identifier	writePersist		4931772	1					
ANR	4932321	Identifier	false		4931772	1					
ANR	4932322	ElseStatement	else		4931772	0					
ANR	4932323	IfStatement	"if ( arg . Match ( ""p-rw"" ) )"		4931772	0					
ANR	4932324	Condition	"arg . Match ( ""p-rw"" )"	250:14:6752:6768	4931772	0	True				
ANR	4932325	CallExpression	"arg . Match ( ""p-rw"" )"		4931772	0					
ANR	4932326	Callee	arg . Match		4931772	0					
ANR	4932327	MemberAccess	arg . Match		4931772	0					
ANR	4932328	Identifier	arg		4931772	0					
ANR	4932329	Identifier	Match		4931772	1					
ANR	4932330	ArgumentList	"""p-rw"""		4931772	1					
ANR	4932331	Argument	"""p-rw"""		4931772	0					
ANR	4932332	PrimaryExpression	"""p-rw"""		4931772	0					
ANR	4932333	CompoundStatement		116:34:3570:3570	4931772	1					
ANR	4932334	ExpressionStatement	opts . readPersist = true	251:3:6777:6800	4931772	0	True				
ANR	4932335	AssignmentExpression	opts . readPersist = true		4931772	0		=			
ANR	4932336	MemberAccess	opts . readPersist		4931772	0					
ANR	4932337	Identifier	opts		4931772	0					
ANR	4932338	Identifier	readPersist		4931772	1					
ANR	4932339	Identifier	true		4931772	1					
ANR	4932340	ExpressionStatement	opts . writePersist = true	252:3:6805:6829	4931772	1	True				
ANR	4932341	AssignmentExpression	opts . writePersist = true		4931772	0		=			
ANR	4932342	MemberAccess	opts . writePersist		4931772	0					
ANR	4932343	Identifier	opts		4931772	0					
ANR	4932344	Identifier	writePersist		4931772	1					
ANR	4932345	Identifier	true		4931772	1					
ANR	4932346	ElseStatement	else		4931772	0					
ANR	4932347	IfStatement	"if ( arg . Match ( 'x' , ""exit"" ) )"		4931772	0					
ANR	4932348	Condition	"arg . Match ( 'x' , ""exit"" )"	254:14:6846:6868	4931772	0	True				
ANR	4932349	CallExpression	"arg . Match ( 'x' , ""exit"" )"		4931772	0					
ANR	4932350	Callee	arg . Match		4931772	0					
ANR	4932351	MemberAccess	arg . Match		4931772	0					
ANR	4932352	Identifier	arg		4931772	0					
ANR	4932353	Identifier	Match		4931772	1					
ANR	4932354	ArgumentList	'x'		4931772	1					
ANR	4932355	Argument	'x'		4931772	0					
ANR	4932356	PrimaryExpression	'x'		4931772	0					
ANR	4932357	Argument	"""exit"""		4931772	1					
ANR	4932358	PrimaryExpression	"""exit"""		4931772	0					
ANR	4932359	CompoundStatement		120:40:3670:3670	4931772	1					
ANR	4932360	ExpressionStatement	opts . exit = true	255:3:6877:6893	4931772	0	True				
ANR	4932361	AssignmentExpression	opts . exit = true		4931772	0		=			
ANR	4932362	MemberAccess	opts . exit		4931772	0					
ANR	4932363	Identifier	opts		4931772	0					
ANR	4932364	Identifier	exit		4931772	1					
ANR	4932365	Identifier	true		4931772	1					
ANR	4932366	ElseStatement	else		4931772	0					
ANR	4932367	IfStatement	"if ( arg . Match ( ""stop"" ) )"		4931772	0					
ANR	4932368	Condition	"arg . Match ( ""stop"" )"	257:14:6910:6926	4931772	0	True				
ANR	4932369	CallExpression	"arg . Match ( ""stop"" )"		4931772	0					
ANR	4932370	Callee	arg . Match		4931772	0					
ANR	4932371	MemberAccess	arg . Match		4931772	0					
ANR	4932372	Identifier	arg		4931772	0					
ANR	4932373	Identifier	Match		4931772	1					
ANR	4932374	ArgumentList	"""stop"""		4931772	1					
ANR	4932375	Argument	"""stop"""		4931772	0					
ANR	4932376	PrimaryExpression	"""stop"""		4931772	0					
ANR	4932377	CompoundStatement		123:34:3728:3728	4931772	1					
ANR	4932378	ExpressionStatement	opts . stop ++	258:3:6935:6946	4931772	0	True				
ANR	4932379	PostIncDecOperationExpression	opts . stop ++		4931772	0					
ANR	4932380	MemberAccess	opts . stop		4931772	0					
ANR	4932381	Identifier	opts		4931772	0					
ANR	4932382	Identifier	stop		4931772	1					
ANR	4932383	IncDec	++		4931772	1					
ANR	4932384	ElseStatement	else		4931772	0					
ANR	4932385	IfStatement	"if ( arg . Match ( 'r' , ""rotation"" ) )"		4931772	0					
ANR	4932386	Condition	"arg . Match ( 'r' , ""rotation"" )"	260:14:6963:6989	4931772	0	True				
ANR	4932387	CallExpression	"arg . Match ( 'r' , ""rotation"" )"		4931772	0					
ANR	4932388	Callee	arg . Match		4931772	0					
ANR	4932389	MemberAccess	arg . Match		4931772	0					
ANR	4932390	Identifier	arg		4931772	0					
ANR	4932391	Identifier	Match		4931772	1					
ANR	4932392	ArgumentList	'r'		4931772	1					
ANR	4932393	Argument	'r'		4931772	0					
ANR	4932394	PrimaryExpression	'r'		4931772	0					
ANR	4932395	Argument	"""rotation"""		4931772	1					
ANR	4932396	PrimaryExpression	"""rotation"""		4931772	0					
ANR	4932397	CompoundStatement		126:44:3791:3791	4931772	1					
ANR	4932398	IfStatement	if ( arg . getOpt ( opts . maxRotations ) )		4931772	0					
ANR	4932399	Condition	arg . getOpt ( opts . maxRotations )	261:8:7003:7033	4931772	0	True				
ANR	4932400	CallExpression	arg . getOpt ( opts . maxRotations )		4931772	0					
ANR	4932401	Callee	arg . getOpt		4931772	0					
ANR	4932402	MemberAccess	arg . getOpt		4931772	0					
ANR	4932403	Identifier	arg		4931772	0					
ANR	4932404	Identifier	getOpt		4931772	1					
ANR	4932405	ArgumentList	opts . maxRotations		4931772	1					
ANR	4932406	Argument	opts . maxRotations		4931772	0					
ANR	4932407	MemberAccess	opts . maxRotations		4931772	0					
ANR	4932408	Identifier	opts		4931772	0					
ANR	4932409	Identifier	maxRotations		4931772	1					
ANR	4932410	CompoundStatement		127:42:3835:3835	4931772	1					
ANR	4932411	ExpressionStatement	opts . rotation = opts . maxRotations > 0	262:4:7043:7080	4931772	0	True				
ANR	4932412	AssignmentExpression	opts . rotation = opts . maxRotations > 0		4931772	0		=			
ANR	4932413	MemberAccess	opts . rotation		4931772	0					
ANR	4932414	Identifier	opts		4931772	0					
ANR	4932415	Identifier	rotation		4931772	1					
ANR	4932416	RelationalExpression	opts . maxRotations > 0		4931772	1		>			
ANR	4932417	MemberAccess	opts . maxRotations		4931772	0					
ANR	4932418	Identifier	opts		4931772	0					
ANR	4932419	Identifier	maxRotations		4931772	1					
ANR	4932420	PrimaryExpression	0		4931772	1					
ANR	4932421	ElseStatement	else		4931772	0					
ANR	4932422	CompoundStatement		129:10:3890:3890	4931772	0					
ANR	4932423	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	264:4:7098:7152	4931772	0	True				
ANR	4932424	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932425	Callee	fprintf		4931772	0					
ANR	4932426	Identifier	fprintf		4931772	0					
ANR	4932427	ArgumentList	stderr		4931772	1					
ANR	4932428	Argument	stderr		4931772	0					
ANR	4932429	Identifier	stderr		4931772	0					
ANR	4932430	Argument	"""Value needed for '%s'\\n"""		4931772	1					
ANR	4932431	PrimaryExpression	"""Value needed for '%s'\\n"""		4931772	0					
ANR	4932432	Argument	arg . Arg ( )		4931772	2					
ANR	4932433	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932434	Callee	arg . Arg		4931772	0					
ANR	4932435	MemberAccess	arg . Arg		4931772	0					
ANR	4932436	Identifier	arg		4931772	0					
ANR	4932437	Identifier	Arg		4931772	1					
ANR	4932438	ArgumentList			4931772	1					
ANR	4932439	ElseStatement	else		4931772	0					
ANR	4932440	IfStatement	"if ( arg . Match ( ""no-rotation"" ) )"		4931772	0					
ANR	4932441	Condition	"arg . Match ( ""no-rotation"" )"	267:14:7174:7197	4931772	0	True				
ANR	4932442	CallExpression	"arg . Match ( ""no-rotation"" )"		4931772	0					
ANR	4932443	Callee	arg . Match		4931772	0					
ANR	4932444	MemberAccess	arg . Match		4931772	0					
ANR	4932445	Identifier	arg		4931772	0					
ANR	4932446	Identifier	Match		4931772	1					
ANR	4932447	ArgumentList	"""no-rotation"""		4931772	1					
ANR	4932448	Argument	"""no-rotation"""		4931772	0					
ANR	4932449	PrimaryExpression	"""no-rotation"""		4931772	0					
ANR	4932450	CompoundStatement		133:41:3999:3999	4931772	1					
ANR	4932451	ExpressionStatement	opts . rotation = false	268:3:7206:7227	4931772	0	True				
ANR	4932452	AssignmentExpression	opts . rotation = false		4931772	0		=			
ANR	4932453	MemberAccess	opts . rotation		4931772	0					
ANR	4932454	Identifier	opts		4931772	0					
ANR	4932455	Identifier	rotation		4931772	1					
ANR	4932456	Identifier	false		4931772	1					
ANR	4932457	ElseStatement	else		4931772	0					
ANR	4932458	IfStatement	"if ( arg . Match ( ""sleep"" ) )"		4931772	0					
ANR	4932459	Condition	"arg . Match ( ""sleep"" )"	270:14:7244:7261	4931772	0	True				
ANR	4932460	CallExpression	"arg . Match ( ""sleep"" )"		4931772	0					
ANR	4932461	Callee	arg . Match		4931772	0					
ANR	4932462	MemberAccess	arg . Match		4931772	0					
ANR	4932463	Identifier	arg		4931772	0					
ANR	4932464	Identifier	Match		4931772	1					
ANR	4932465	ArgumentList	"""sleep"""		4931772	1					
ANR	4932466	Argument	"""sleep"""		4931772	0					
ANR	4932467	PrimaryExpression	"""sleep"""		4931772	0					
ANR	4932468	CompoundStatement		136:35:4063:4063	4931772	1					
ANR	4932469	IfStatement	if ( ! arg . getOpt ( opts . sleep ) )		4931772	0					
ANR	4932470	Condition	! arg . getOpt ( opts . sleep )	271:8:7275:7299	4931772	0	True				
ANR	4932471	UnaryOperationExpression	! arg . getOpt ( opts . sleep )		4931772	0					
ANR	4932472	UnaryOperator	!		4931772	0					
ANR	4932473	CallExpression	arg . getOpt ( opts . sleep )		4931772	1					
ANR	4932474	Callee	arg . getOpt		4931772	0					
ANR	4932475	MemberAccess	arg . getOpt		4931772	0					
ANR	4932476	Identifier	arg		4931772	0					
ANR	4932477	Identifier	getOpt		4931772	1					
ANR	4932478	ArgumentList	opts . sleep		4931772	1					
ANR	4932479	Argument	opts . sleep		4931772	0					
ANR	4932480	MemberAccess	opts . sleep		4931772	0					
ANR	4932481	Identifier	opts		4931772	0					
ANR	4932482	Identifier	sleep		4931772	1					
ANR	4932483	CompoundStatement		137:36:4101:4101	4931772	1					
ANR	4932484	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	272:4:7309:7363	4931772	0	True				
ANR	4932485	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932486	Callee	fprintf		4931772	0					
ANR	4932487	Identifier	fprintf		4931772	0					
ANR	4932488	ArgumentList	stderr		4931772	1					
ANR	4932489	Argument	stderr		4931772	0					
ANR	4932490	Identifier	stderr		4931772	0					
ANR	4932491	Argument	"""Value needed for '%s'\\n"""		4931772	1					
ANR	4932492	PrimaryExpression	"""Value needed for '%s'\\n"""		4931772	0					
ANR	4932493	Argument	arg . Arg ( )		4931772	2					
ANR	4932494	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932495	Callee	arg . Arg		4931772	0					
ANR	4932496	MemberAccess	arg . Arg		4931772	0					
ANR	4932497	Identifier	arg		4931772	0					
ANR	4932498	Identifier	Arg		4931772	1					
ANR	4932499	ArgumentList			4931772	1					
ANR	4932500	ExpressionStatement	"printf ( ""%s"" , usage )"	273:4:7369:7388	4931772	1	True				
ANR	4932501	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932502	Callee	printf		4931772	0					
ANR	4932503	Identifier	printf		4931772	0					
ANR	4932504	ArgumentList	"""%s"""		4931772	1					
ANR	4932505	Argument	"""%s"""		4931772	0					
ANR	4932506	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932507	Argument	usage		4931772	1					
ANR	4932508	Identifier	usage		4931772	0					
ANR	4932509	ExpressionStatement	status = STATUS_ERROR	274:4:7394:7415	4931772	2	True				
ANR	4932510	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4932511	Identifier	status		4931772	0					
ANR	4932512	Identifier	STATUS_ERROR		4931772	1					
ANR	4932513	ElseStatement	else		4931772	0					
ANR	4932514	IfStatement	"if ( arg . Match ( ""no-sleep"" ) )"		4931772	0					
ANR	4932515	Condition	"arg . Match ( ""no-sleep"" )"	277:14:7437:7457	4931772	0	True				
ANR	4932516	CallExpression	"arg . Match ( ""no-sleep"" )"		4931772	0					
ANR	4932517	Callee	arg . Match		4931772	0					
ANR	4932518	MemberAccess	arg . Match		4931772	0					
ANR	4932519	Identifier	arg		4931772	0					
ANR	4932520	Identifier	Match		4931772	1					
ANR	4932521	ArgumentList	"""no-sleep"""		4931772	1					
ANR	4932522	Argument	"""no-sleep"""		4931772	0					
ANR	4932523	PrimaryExpression	"""no-sleep"""		4931772	0					
ANR	4932524	CompoundStatement		143:38:4259:4259	4931772	1					
ANR	4932525	ExpressionStatement	opts . sleep = 0	278:3:7466:7480	4931772	0	True				
ANR	4932526	AssignmentExpression	opts . sleep = 0		4931772	0		=			
ANR	4932527	MemberAccess	opts . sleep		4931772	0					
ANR	4932528	Identifier	opts		4931772	0					
ANR	4932529	Identifier	sleep		4931772	1					
ANR	4932530	PrimaryExpression	0		4931772	1					
ANR	4932531	ElseStatement	else		4931772	0					
ANR	4932532	IfStatement	"if ( arg . Match ( ""no-term"" ) )"		4931772	0					
ANR	4932533	Condition	"arg . Match ( ""no-term"" )"	280:14:7497:7516	4931772	0	True				
ANR	4932534	CallExpression	"arg . Match ( ""no-term"" )"		4931772	0					
ANR	4932535	Callee	arg . Match		4931772	0					
ANR	4932536	MemberAccess	arg . Match		4931772	0					
ANR	4932537	Identifier	arg		4931772	0					
ANR	4932538	Identifier	Match		4931772	1					
ANR	4932539	ArgumentList	"""no-term"""		4931772	1					
ANR	4932540	Argument	"""no-term"""		4931772	0					
ANR	4932541	PrimaryExpression	"""no-term"""		4931772	0					
ANR	4932542	CompoundStatement		146:37:4318:4318	4931772	1					
ANR	4932543	ExpressionStatement	opts . term = - 1	281:3:7525:7539	4931772	0	True				
ANR	4932544	AssignmentExpression	opts . term = - 1		4931772	0		=			
ANR	4932545	MemberAccess	opts . term		4931772	0					
ANR	4932546	Identifier	opts		4931772	0					
ANR	4932547	Identifier	term		4931772	1					
ANR	4932548	UnaryOperationExpression	- 1		4931772	1					
ANR	4932549	UnaryOperator	-		4931772	0					
ANR	4932550	PrimaryExpression	1		4931772	1					
ANR	4932551	ElseStatement	else		4931772	0					
ANR	4932552	IfStatement	"if ( arg . Match ( ""term"" ) )"		4931772	0					
ANR	4932553	Condition	"arg . Match ( ""term"" )"	283:14:7556:7572	4931772	0	True				
ANR	4932554	CallExpression	"arg . Match ( ""term"" )"		4931772	0					
ANR	4932555	Callee	arg . Match		4931772	0					
ANR	4932556	MemberAccess	arg . Match		4931772	0					
ANR	4932557	Identifier	arg		4931772	0					
ANR	4932558	Identifier	Match		4931772	1					
ANR	4932559	ArgumentList	"""term"""		4931772	1					
ANR	4932560	Argument	"""term"""		4931772	0					
ANR	4932561	PrimaryExpression	"""term"""		4931772	0					
ANR	4932562	CompoundStatement		149:34:4374:4374	4931772	1					
ANR	4932563	IfStatement	if ( ! arg . getOpt ( opts . term ) )		4931772	0					
ANR	4932564	Condition	! arg . getOpt ( opts . term )	284:8:7586:7609	4931772	0	True				
ANR	4932565	UnaryOperationExpression	! arg . getOpt ( opts . term )		4931772	0					
ANR	4932566	UnaryOperator	!		4931772	0					
ANR	4932567	CallExpression	arg . getOpt ( opts . term )		4931772	1					
ANR	4932568	Callee	arg . getOpt		4931772	0					
ANR	4932569	MemberAccess	arg . getOpt		4931772	0					
ANR	4932570	Identifier	arg		4931772	0					
ANR	4932571	Identifier	getOpt		4931772	1					
ANR	4932572	ArgumentList	opts . term		4931772	1					
ANR	4932573	Argument	opts . term		4931772	0					
ANR	4932574	MemberAccess	opts . term		4931772	0					
ANR	4932575	Identifier	opts		4931772	0					
ANR	4932576	Identifier	term		4931772	1					
ANR	4932577	CompoundStatement		150:35:4411:4411	4931772	1					
ANR	4932578	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	285:4:7619:7673	4931772	0	True				
ANR	4932579	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932580	Callee	fprintf		4931772	0					
ANR	4932581	Identifier	fprintf		4931772	0					
ANR	4932582	ArgumentList	stderr		4931772	1					
ANR	4932583	Argument	stderr		4931772	0					
ANR	4932584	Identifier	stderr		4931772	0					
ANR	4932585	Argument	"""Value needed for '%s'\\n"""		4931772	1					
ANR	4932586	PrimaryExpression	"""Value needed for '%s'\\n"""		4931772	0					
ANR	4932587	Argument	arg . Arg ( )		4931772	2					
ANR	4932588	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932589	Callee	arg . Arg		4931772	0					
ANR	4932590	MemberAccess	arg . Arg		4931772	0					
ANR	4932591	Identifier	arg		4931772	0					
ANR	4932592	Identifier	Arg		4931772	1					
ANR	4932593	ArgumentList			4931772	1					
ANR	4932594	ExpressionStatement	"printf ( ""%s"" , usage )"	286:4:7679:7698	4931772	1	True				
ANR	4932595	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932596	Callee	printf		4931772	0					
ANR	4932597	Identifier	printf		4931772	0					
ANR	4932598	ArgumentList	"""%s"""		4931772	1					
ANR	4932599	Argument	"""%s"""		4931772	0					
ANR	4932600	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932601	Argument	usage		4931772	1					
ANR	4932602	Identifier	usage		4931772	0					
ANR	4932603	ExpressionStatement	status = STATUS_ERROR	287:4:7704:7725	4931772	2	True				
ANR	4932604	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4932605	Identifier	status		4931772	0					
ANR	4932606	Identifier	STATUS_ERROR		4931772	1					
ANR	4932607	ElseStatement	else		4931772	0					
ANR	4932608	IfStatement	"if ( ( arg . Match ( ""usage"" ) ) || ( arg . Match ( 'h' ) ) || ( arg . Match ( ""help"" ) ) )"		4931772	0					
ANR	4932609	Condition	"( arg . Match ( ""usage"" ) ) || ( arg . Match ( 'h' ) ) || ( arg . Match ( ""help"" ) )"	290:14:7747:7828	4931772	0	True				
ANR	4932610	OrExpression	"( arg . Match ( ""usage"" ) ) || ( arg . Match ( 'h' ) ) || ( arg . Match ( ""help"" ) )"		4931772	0		||			
ANR	4932611	CallExpression	"arg . Match ( ""usage"" )"		4931772	0					
ANR	4932612	Callee	arg . Match		4931772	0					
ANR	4932613	MemberAccess	arg . Match		4931772	0					
ANR	4932614	Identifier	arg		4931772	0					
ANR	4932615	Identifier	Match		4931772	1					
ANR	4932616	ArgumentList	"""usage"""		4931772	1					
ANR	4932617	Argument	"""usage"""		4931772	0					
ANR	4932618	PrimaryExpression	"""usage"""		4931772	0					
ANR	4932619	OrExpression	"( arg . Match ( 'h' ) ) || ( arg . Match ( ""help"" ) )"		4931772	1		||			
ANR	4932620	CallExpression	arg . Match ( 'h' )		4931772	0					
ANR	4932621	Callee	arg . Match		4931772	0					
ANR	4932622	MemberAccess	arg . Match		4931772	0					
ANR	4932623	Identifier	arg		4931772	0					
ANR	4932624	Identifier	Match		4931772	1					
ANR	4932625	ArgumentList	'h'		4931772	1					
ANR	4932626	Argument	'h'		4931772	0					
ANR	4932627	PrimaryExpression	'h'		4931772	0					
ANR	4932628	CallExpression	"arg . Match ( ""help"" )"		4931772	1					
ANR	4932629	Callee	arg . Match		4931772	0					
ANR	4932630	MemberAccess	arg . Match		4931772	0					
ANR	4932631	Identifier	arg		4931772	0					
ANR	4932632	Identifier	Match		4931772	1					
ANR	4932633	ArgumentList	"""help"""		4931772	1					
ANR	4932634	Argument	"""help"""		4931772	0					
ANR	4932635	PrimaryExpression	"""help"""		4931772	0					
ANR	4932636	CompoundStatement		158:30:4631:4631	4931772	1					
ANR	4932637	ExpressionStatement	"printf ( ""%s"" , usage )"	293:3:7838:7857	4931772	0	True				
ANR	4932638	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932639	Callee	printf		4931772	0					
ANR	4932640	Identifier	printf		4931772	0					
ANR	4932641	ArgumentList	"""%s"""		4931772	1					
ANR	4932642	Argument	"""%s"""		4931772	0					
ANR	4932643	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932644	Argument	usage		4931772	1					
ANR	4932645	Identifier	usage		4931772	0					
ANR	4932646	ExpressionStatement	status = STATUS_CANCEL	294:3:7862:7884	4931772	1	True				
ANR	4932647	AssignmentExpression	status = STATUS_CANCEL		4931772	0		=			
ANR	4932648	Identifier	status		4931772	0					
ANR	4932649	Identifier	STATUS_CANCEL		4931772	1					
ANR	4932650	ElseStatement	else		4931772	0					
ANR	4932651	IfStatement	if ( arg . Match ( 'v' ) )		4931772	0					
ANR	4932652	Condition	arg . Match ( 'v' )	296:14:7901:7914	4931772	0	True				
ANR	4932653	CallExpression	arg . Match ( 'v' )		4931772	0					
ANR	4932654	Callee	arg . Match		4931772	0					
ANR	4932655	MemberAccess	arg . Match		4931772	0					
ANR	4932656	Identifier	arg		4931772	0					
ANR	4932657	Identifier	Match		4931772	1					
ANR	4932658	ArgumentList	'v'		4931772	1					
ANR	4932659	Argument	'v'		4931772	0					
ANR	4932660	PrimaryExpression	'v'		4931772	0					
ANR	4932661	CompoundStatement		163:3:4721:4750	4931772	1					
ANR	4932662	IdentifierDeclStatement	int v = ( int ) opts . verbosity ;	297:3:7923:7952	4931772	0	True				
ANR	4932663	IdentifierDecl	v = ( int ) opts . verbosity		4931772	0					
ANR	4932664	IdentifierDeclType	int		4931772	0					
ANR	4932665	Identifier	v		4931772	1					
ANR	4932666	AssignmentExpression	v = ( int ) opts . verbosity		4931772	2		=			
ANR	4932667	Identifier	v		4931772	0					
ANR	4932668	CastExpression	( int ) opts . verbosity		4931772	1					
ANR	4932669	CastTarget	int		4931772	0					
ANR	4932670	MemberAccess	opts . verbosity		4931772	1					
ANR	4932671	Identifier	opts		4931772	0					
ANR	4932672	Identifier	verbosity		4931772	1					
ANR	4932673	ExpressionStatement	opts . verbosity = ( Verbosity ) ( v + 1 )	298:3:7957:7993	4931772	1	True				
ANR	4932674	AssignmentExpression	opts . verbosity = ( Verbosity ) ( v + 1 )		4931772	0		=			
ANR	4932675	MemberAccess	opts . verbosity		4931772	0					
ANR	4932676	Identifier	opts		4931772	0					
ANR	4932677	Identifier	verbosity		4931772	1					
ANR	4932678	CastExpression	( Verbosity ) ( v + 1 )		4931772	1					
ANR	4932679	CastTarget	Verbosity		4931772	0					
ANR	4932680	AdditiveExpression	v + 1		4931772	1		+			
ANR	4932681	Identifier	v		4931772	0					
ANR	4932682	PrimaryExpression	1		4931772	1					
ANR	4932683	ElseStatement	else		4931772	0					
ANR	4932684	IfStatement	"if ( arg . Match ( ""verbosity"" ) )"		4931772	0					
ANR	4932685	Condition	"arg . Match ( ""verbosity"" )"	300:14:8010:8031	4931772	0	True				
ANR	4932686	CallExpression	"arg . Match ( ""verbosity"" )"		4931772	0					
ANR	4932687	Callee	arg . Match		4931772	0					
ANR	4932688	MemberAccess	arg . Match		4931772	0					
ANR	4932689	Identifier	arg		4931772	0					
ANR	4932690	Identifier	Match		4931772	1					
ANR	4932691	ArgumentList	"""verbosity"""		4931772	1					
ANR	4932692	Argument	"""verbosity"""		4931772	0					
ANR	4932693	PrimaryExpression	"""verbosity"""		4931772	0					
ANR	4932694	CompoundStatement		166:39:4833:4833	4931772	1					
ANR	4932695	IfStatement	if ( arg . isOptInt ( ) )		4931772	0					
ANR	4932696	Condition	arg . isOptInt ( )	301:8:8045:8058	4931772	0	True				
ANR	4932697	CallExpression	arg . isOptInt ( )		4931772	0					
ANR	4932698	Callee	arg . isOptInt		4931772	0					
ANR	4932699	MemberAccess	arg . isOptInt		4931772	0					
ANR	4932700	Identifier	arg		4931772	0					
ANR	4932701	Identifier	isOptInt		4931772	1					
ANR	4932702	ArgumentList			4931772	1					
ANR	4932703	CompoundStatement		168:4:4866:4875	4931772	1					
ANR	4932704	IdentifierDeclStatement	int verb ;	302:4:8068:8077	4931772	0	True				
ANR	4932705	IdentifierDecl	verb		4931772	0					
ANR	4932706	IdentifierDeclType	int		4931772	0					
ANR	4932707	Identifier	verb		4931772	1					
ANR	4932708	ExpressionStatement	arg . getOpt ( verb )	303:4:8083:8099	4931772	1	True				
ANR	4932709	CallExpression	arg . getOpt ( verb )		4931772	0					
ANR	4932710	Callee	arg . getOpt		4931772	0					
ANR	4932711	MemberAccess	arg . getOpt		4931772	0					
ANR	4932712	Identifier	arg		4931772	0					
ANR	4932713	Identifier	getOpt		4931772	1					
ANR	4932714	ArgumentList	verb		4931772	1					
ANR	4932715	Argument	verb		4931772	0					
ANR	4932716	Identifier	verb		4931772	0					
ANR	4932717	ExpressionStatement	opts . verbosity = ( Verbosity ) verb	304:4:8105:8138	4931772	2	True				
ANR	4932718	AssignmentExpression	opts . verbosity = ( Verbosity ) verb		4931772	0		=			
ANR	4932719	MemberAccess	opts . verbosity		4931772	0					
ANR	4932720	Identifier	opts		4931772	0					
ANR	4932721	Identifier	verbosity		4931772	1					
ANR	4932722	CastExpression	( Verbosity ) verb		4931772	1					
ANR	4932723	CastTarget	Verbosity		4931772	0					
ANR	4932724	Identifier	verb		4931772	1					
ANR	4932725	ElseStatement	else		4931772	0					
ANR	4932726	IfStatement	if ( arg . hasOpt ( ) )		4931772	0					
ANR	4932727	Condition	arg . hasOpt ( )	306:13:8158:8169	4931772	0	True				
ANR	4932728	CallExpression	arg . hasOpt ( )		4931772	0					
ANR	4932729	Callee	arg . hasOpt		4931772	0					
ANR	4932730	MemberAccess	arg . hasOpt		4931772	0					
ANR	4932731	Identifier	arg		4931772	0					
ANR	4932732	Identifier	hasOpt		4931772	1					
ANR	4932733	ArgumentList			4931772	1					
ANR	4932734	CompoundStatement		173:4:4977:4990	4931772	1					
ANR	4932735	IdentifierDeclStatement	const char * s ;	307:4:8179:8192	4931772	0	True				
ANR	4932736	IdentifierDecl	* s		4931772	0					
ANR	4932737	IdentifierDeclType	const char *		4931772	0					
ANR	4932738	Identifier	s		4931772	1					
ANR	4932739	ExpressionStatement	arg . getOpt ( s )	308:4:8198:8213	4931772	1	True				
ANR	4932740	CallExpression	arg . getOpt ( s )		4931772	0					
ANR	4932741	Callee	arg . getOpt		4931772	0					
ANR	4932742	MemberAccess	arg . getOpt		4931772	0					
ANR	4932743	Identifier	arg		4931772	0					
ANR	4932744	Identifier	getOpt		4931772	1					
ANR	4932745	ArgumentList	s		4931772	1					
ANR	4932746	Argument	s		4931772	0					
ANR	4932747	Identifier	s		4931772	0					
ANR	4932748	IfStatement	"if ( ! strcasecmp ( s , ""NONE"" ) )"		4931772	2					
ANR	4932749	Condition	"! strcasecmp ( s , ""NONE"" )"	309:9:8224:8246	4931772	0	True				
ANR	4932750	UnaryOperationExpression	"! strcasecmp ( s , ""NONE"" )"		4931772	0					
ANR	4932751	UnaryOperator	!		4931772	0					
ANR	4932752	CallExpression	"strcasecmp ( s , ""NONE"" )"		4931772	1					
ANR	4932753	Callee	strcasecmp		4931772	0					
ANR	4932754	Identifier	strcasecmp		4931772	0					
ANR	4932755	ArgumentList	s		4931772	1					
ANR	4932756	Argument	s		4931772	0					
ANR	4932757	Identifier	s		4931772	0					
ANR	4932758	Argument	"""NONE"""		4931772	1					
ANR	4932759	PrimaryExpression	"""NONE"""		4931772	0					
ANR	4932760	CompoundStatement		175:35:5048:5048	4931772	1					
ANR	4932761	ExpressionStatement	opts . verbosity = VERB_NONE	310:5:8257:8283	4931772	0	True				
ANR	4932762	AssignmentExpression	opts . verbosity = VERB_NONE		4931772	0		=			
ANR	4932763	MemberAccess	opts . verbosity		4931772	0					
ANR	4932764	Identifier	opts		4931772	0					
ANR	4932765	Identifier	verbosity		4931772	1					
ANR	4932766	Identifier	VERB_NONE		4931772	1					
ANR	4932767	ElseStatement	else		4931772	0					
ANR	4932768	IfStatement	"if ( ! strcasecmp ( s , ""ERROR"" ) )"		4931772	0					
ANR	4932769	Condition	"! strcasecmp ( s , ""ERROR"" )"	312:14:8305:8328	4931772	0	True				
ANR	4932770	UnaryOperationExpression	"! strcasecmp ( s , ""ERROR"" )"		4931772	0					
ANR	4932771	UnaryOperator	!		4931772	0					
ANR	4932772	CallExpression	"strcasecmp ( s , ""ERROR"" )"		4931772	1					
ANR	4932773	Callee	strcasecmp		4931772	0					
ANR	4932774	Identifier	strcasecmp		4931772	0					
ANR	4932775	ArgumentList	s		4931772	1					
ANR	4932776	Argument	s		4931772	0					
ANR	4932777	Identifier	s		4931772	0					
ANR	4932778	Argument	"""ERROR"""		4931772	1					
ANR	4932779	PrimaryExpression	"""ERROR"""		4931772	0					
ANR	4932780	CompoundStatement		178:41:5130:5130	4931772	1					
ANR	4932781	ExpressionStatement	opts . verbosity = VERB_ERROR	313:5:8339:8366	4931772	0	True				
ANR	4932782	AssignmentExpression	opts . verbosity = VERB_ERROR		4931772	0		=			
ANR	4932783	MemberAccess	opts . verbosity		4931772	0					
ANR	4932784	Identifier	opts		4931772	0					
ANR	4932785	Identifier	verbosity		4931772	1					
ANR	4932786	Identifier	VERB_ERROR		4931772	1					
ANR	4932787	ElseStatement	else		4931772	0					
ANR	4932788	IfStatement	"if ( ! strcasecmp ( s , ""WARNING"" ) )"		4931772	0					
ANR	4932789	Condition	"! strcasecmp ( s , ""WARNING"" )"	315:14:8388:8413	4931772	0	True				
ANR	4932790	UnaryOperationExpression	"! strcasecmp ( s , ""WARNING"" )"		4931772	0					
ANR	4932791	UnaryOperator	!		4931772	0					
ANR	4932792	CallExpression	"strcasecmp ( s , ""WARNING"" )"		4931772	1					
ANR	4932793	Callee	strcasecmp		4931772	0					
ANR	4932794	Identifier	strcasecmp		4931772	0					
ANR	4932795	ArgumentList	s		4931772	1					
ANR	4932796	Argument	s		4931772	0					
ANR	4932797	Identifier	s		4931772	0					
ANR	4932798	Argument	"""WARNING"""		4931772	1					
ANR	4932799	PrimaryExpression	"""WARNING"""		4931772	0					
ANR	4932800	CompoundStatement		181:43:5215:5215	4931772	1					
ANR	4932801	ExpressionStatement	opts . verbosity = VERB_WARNING	316:5:8424:8453	4931772	0	True				
ANR	4932802	AssignmentExpression	opts . verbosity = VERB_WARNING		4931772	0		=			
ANR	4932803	MemberAccess	opts . verbosity		4931772	0					
ANR	4932804	Identifier	opts		4931772	0					
ANR	4932805	Identifier	verbosity		4931772	1					
ANR	4932806	Identifier	VERB_WARNING		4931772	1					
ANR	4932807	ElseStatement	else		4931772	0					
ANR	4932808	IfStatement	"if ( ! strcasecmp ( s , ""INFO"" ) )"		4931772	0					
ANR	4932809	Condition	"! strcasecmp ( s , ""INFO"" )"	318:14:8475:8497	4931772	0	True				
ANR	4932810	UnaryOperationExpression	"! strcasecmp ( s , ""INFO"" )"		4931772	0					
ANR	4932811	UnaryOperator	!		4931772	0					
ANR	4932812	CallExpression	"strcasecmp ( s , ""INFO"" )"		4931772	1					
ANR	4932813	Callee	strcasecmp		4931772	0					
ANR	4932814	Identifier	strcasecmp		4931772	0					
ANR	4932815	ArgumentList	s		4931772	1					
ANR	4932816	Argument	s		4931772	0					
ANR	4932817	Identifier	s		4931772	0					
ANR	4932818	Argument	"""INFO"""		4931772	1					
ANR	4932819	PrimaryExpression	"""INFO"""		4931772	0					
ANR	4932820	CompoundStatement		184:40:5299:5299	4931772	1					
ANR	4932821	ExpressionStatement	opts . verbosity = VERB_INFO	319:5:8508:8534	4931772	0	True				
ANR	4932822	AssignmentExpression	opts . verbosity = VERB_INFO		4931772	0		=			
ANR	4932823	MemberAccess	opts . verbosity		4931772	0					
ANR	4932824	Identifier	opts		4931772	0					
ANR	4932825	Identifier	verbosity		4931772	1					
ANR	4932826	Identifier	VERB_INFO		4931772	1					
ANR	4932827	ElseStatement	else		4931772	0					
ANR	4932828	IfStatement	"if ( ! strcasecmp ( s , ""ALL"" ) )"		4931772	0					
ANR	4932829	Condition	"! strcasecmp ( s , ""ALL"" )"	321:14:8556:8577	4931772	0	True				
ANR	4932830	UnaryOperationExpression	"! strcasecmp ( s , ""ALL"" )"		4931772	0					
ANR	4932831	UnaryOperator	!		4931772	0					
ANR	4932832	CallExpression	"strcasecmp ( s , ""ALL"" )"		4931772	1					
ANR	4932833	Callee	strcasecmp		4931772	0					
ANR	4932834	Identifier	strcasecmp		4931772	0					
ANR	4932835	ArgumentList	s		4931772	1					
ANR	4932836	Argument	s		4931772	0					
ANR	4932837	Identifier	s		4931772	0					
ANR	4932838	Argument	"""ALL"""		4931772	1					
ANR	4932839	PrimaryExpression	"""ALL"""		4931772	0					
ANR	4932840	CompoundStatement		187:39:5379:5379	4931772	1					
ANR	4932841	ExpressionStatement	opts . verbosity = VERB_ALL	322:5:8588:8613	4931772	0	True				
ANR	4932842	AssignmentExpression	opts . verbosity = VERB_ALL		4931772	0		=			
ANR	4932843	MemberAccess	opts . verbosity		4931772	0					
ANR	4932844	Identifier	opts		4931772	0					
ANR	4932845	Identifier	verbosity		4931772	1					
ANR	4932846	Identifier	VERB_ALL		4931772	1					
ANR	4932847	ElseStatement	else		4931772	0					
ANR	4932848	CompoundStatement		190:9:5428:5428	4931772	0					
ANR	4932849	ExpressionStatement	"fprintf ( stderr , ""Unknown %s '%s'\\n"" , arg . Arg ( ) , s )"	325:5:8637:8688	4931772	0	True				
ANR	4932850	CallExpression	"fprintf ( stderr , ""Unknown %s '%s'\\n"" , arg . Arg ( ) , s )"		4931772	0					
ANR	4932851	Callee	fprintf		4931772	0					
ANR	4932852	Identifier	fprintf		4931772	0					
ANR	4932853	ArgumentList	stderr		4931772	1					
ANR	4932854	Argument	stderr		4931772	0					
ANR	4932855	Identifier	stderr		4931772	0					
ANR	4932856	Argument	"""Unknown %s '%s'\\n"""		4931772	1					
ANR	4932857	PrimaryExpression	"""Unknown %s '%s'\\n"""		4931772	0					
ANR	4932858	Argument	arg . Arg ( )		4931772	2					
ANR	4932859	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932860	Callee	arg . Arg		4931772	0					
ANR	4932861	MemberAccess	arg . Arg		4931772	0					
ANR	4932862	Identifier	arg		4931772	0					
ANR	4932863	Identifier	Arg		4931772	1					
ANR	4932864	ArgumentList			4931772	1					
ANR	4932865	Argument	s		4931772	3					
ANR	4932866	Identifier	s		4931772	0					
ANR	4932867	ExpressionStatement	"printf ( ""%s"" , usage )"	326:5:8695:8714	4931772	1	True				
ANR	4932868	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932869	Callee	printf		4931772	0					
ANR	4932870	Identifier	printf		4931772	0					
ANR	4932871	ArgumentList	"""%s"""		4931772	1					
ANR	4932872	Argument	"""%s"""		4931772	0					
ANR	4932873	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932874	Argument	usage		4931772	1					
ANR	4932875	Identifier	usage		4931772	0					
ANR	4932876	ExpressionStatement	status = STATUS_ERROR	327:5:8721:8742	4931772	2	True				
ANR	4932877	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4932878	Identifier	status		4931772	0					
ANR	4932879	Identifier	STATUS_ERROR		4931772	1					
ANR	4932880	ElseStatement	else		4931772	0					
ANR	4932881	CompoundStatement		196:8:5561:5561	4931772	0					
ANR	4932882	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	331:4:8769:8823	4931772	0	True				
ANR	4932883	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932884	Callee	fprintf		4931772	0					
ANR	4932885	Identifier	fprintf		4931772	0					
ANR	4932886	ArgumentList	stderr		4931772	1					
ANR	4932887	Argument	stderr		4931772	0					
ANR	4932888	Identifier	stderr		4931772	0					
ANR	4932889	Argument	"""Value needed for '%s'\\n"""		4931772	1					
ANR	4932890	PrimaryExpression	"""Value needed for '%s'\\n"""		4931772	0					
ANR	4932891	Argument	arg . Arg ( )		4931772	2					
ANR	4932892	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932893	Callee	arg . Arg		4931772	0					
ANR	4932894	MemberAccess	arg . Arg		4931772	0					
ANR	4932895	Identifier	arg		4931772	0					
ANR	4932896	Identifier	Arg		4931772	1					
ANR	4932897	ArgumentList			4931772	1					
ANR	4932898	ExpressionStatement	"printf ( ""%s"" , usage )"	332:4:8829:8848	4931772	1	True				
ANR	4932899	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4932900	Callee	printf		4931772	0					
ANR	4932901	Identifier	printf		4931772	0					
ANR	4932902	ArgumentList	"""%s"""		4931772	1					
ANR	4932903	Argument	"""%s"""		4931772	0					
ANR	4932904	PrimaryExpression	"""%s"""		4931772	0					
ANR	4932905	Argument	usage		4931772	1					
ANR	4932906	Identifier	usage		4931772	0					
ANR	4932907	ExpressionStatement	status = STATUS_ERROR	333:4:8854:8875	4931772	2	True				
ANR	4932908	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4932909	Identifier	status		4931772	0					
ANR	4932910	Identifier	STATUS_ERROR		4931772	1					
ANR	4932911	ElseStatement	else		4931772	0					
ANR	4932912	IfStatement	"if ( arg . Match ( ""version"" ) )"		4931772	0					
ANR	4932913	Condition	"arg . Match ( ""version"" )"	336:14:8897:8916	4931772	0	True				
ANR	4932914	CallExpression	"arg . Match ( ""version"" )"		4931772	0					
ANR	4932915	Callee	arg . Match		4931772	0					
ANR	4932916	MemberAccess	arg . Match		4931772	0					
ANR	4932917	Identifier	arg		4931772	0					
ANR	4932918	Identifier	Match		4931772	1					
ANR	4932919	ArgumentList	"""version"""		4931772	1					
ANR	4932920	Argument	"""version"""		4931772	0					
ANR	4932921	PrimaryExpression	"""version"""		4931772	0					
ANR	4932922	CompoundStatement		202:37:5718:5718	4931772	1					
ANR	4932923	ExpressionStatement	"printf ( ""test_log_reader: %s, %s\\n"" , VERSION , __DATE__ )"	337:3:8925:8979	4931772	0	True				
ANR	4932924	CallExpression	"printf ( ""test_log_reader: %s, %s\\n"" , VERSION , __DATE__ )"		4931772	0					
ANR	4932925	Callee	printf		4931772	0					
ANR	4932926	Identifier	printf		4931772	0					
ANR	4932927	ArgumentList	"""test_log_reader: %s, %s\\n"""		4931772	1					
ANR	4932928	Argument	"""test_log_reader: %s, %s\\n"""		4931772	0					
ANR	4932929	PrimaryExpression	"""test_log_reader: %s, %s\\n"""		4931772	0					
ANR	4932930	Argument	VERSION		4931772	1					
ANR	4932931	Identifier	VERSION		4931772	0					
ANR	4932932	Argument	__DATE__		4931772	2					
ANR	4932933	Identifier	__DATE__		4931772	0					
ANR	4932934	ExpressionStatement	status = STATUS_CANCEL	338:3:8984:9006	4931772	1	True				
ANR	4932935	AssignmentExpression	status = STATUS_CANCEL		4931772	0		=			
ANR	4932936	Identifier	status		4931772	0					
ANR	4932937	Identifier	STATUS_CANCEL		4931772	1					
ANR	4932938	ElseStatement	else		4931772	0					
ANR	4932939	IfStatement	"if ( arg . Match ( ""p-wo"" ) )"		4931772	0					
ANR	4932940	Condition	"arg . Match ( ""p-wo"" )"	340:14:9023:9039	4931772	0	True				
ANR	4932941	CallExpression	"arg . Match ( ""p-wo"" )"		4931772	0					
ANR	4932942	Callee	arg . Match		4931772	0					
ANR	4932943	MemberAccess	arg . Match		4931772	0					
ANR	4932944	Identifier	arg		4931772	0					
ANR	4932945	Identifier	Match		4931772	1					
ANR	4932946	ArgumentList	"""p-wo"""		4931772	1					
ANR	4932947	Argument	"""p-wo"""		4931772	0					
ANR	4932948	PrimaryExpression	"""p-wo"""		4931772	0					
ANR	4932949	CompoundStatement		206:34:5841:5841	4931772	1					
ANR	4932950	ExpressionStatement	opts . readPersist = false	341:3:9048:9072	4931772	0	True				
ANR	4932951	AssignmentExpression	opts . readPersist = false		4931772	0		=			
ANR	4932952	MemberAccess	opts . readPersist		4931772	0					
ANR	4932953	Identifier	opts		4931772	0					
ANR	4932954	Identifier	readPersist		4931772	1					
ANR	4932955	Identifier	false		4931772	1					
ANR	4932956	ExpressionStatement	opts . writePersist = true	342:3:9077:9101	4931772	1	True				
ANR	4932957	AssignmentExpression	opts . writePersist = true		4931772	0		=			
ANR	4932958	MemberAccess	opts . writePersist		4931772	0					
ANR	4932959	Identifier	opts		4931772	0					
ANR	4932960	Identifier	writePersist		4931772	1					
ANR	4932961	Identifier	true		4931772	1					
ANR	4932962	ElseStatement	else		4931772	0					
ANR	4932963	IfStatement	if ( ! arg . ArgIsOpt ( ) )		4931772	0					
ANR	4932964	Condition	! arg . ArgIsOpt ( )	344:14:9118:9132	4931772	0	True				
ANR	4932965	UnaryOperationExpression	! arg . ArgIsOpt ( )		4931772	0					
ANR	4932966	UnaryOperator	!		4931772	0					
ANR	4932967	CallExpression	arg . ArgIsOpt ( )		4931772	1					
ANR	4932968	Callee	arg . ArgIsOpt		4931772	0					
ANR	4932969	MemberAccess	arg . ArgIsOpt		4931772	0					
ANR	4932970	Identifier	arg		4931772	0					
ANR	4932971	Identifier	ArgIsOpt		4931772	1					
ANR	4932972	ArgumentList			4931772	1					
ANR	4932973	CompoundStatement		210:32:5934:5934	4931772	1					
ANR	4932974	ExpressionStatement	arg . getOpt ( opts . logFile )	345:3:9141:9165	4931772	0	True				
ANR	4932975	CallExpression	arg . getOpt ( opts . logFile )		4931772	0					
ANR	4932976	Callee	arg . getOpt		4931772	0					
ANR	4932977	MemberAccess	arg . getOpt		4931772	0					
ANR	4932978	Identifier	arg		4931772	0					
ANR	4932979	Identifier	getOpt		4931772	1					
ANR	4932980	ArgumentList	opts . logFile		4931772	1					
ANR	4932981	Argument	opts . logFile		4931772	0					
ANR	4932982	MemberAccess	opts . logFile		4931772	0					
ANR	4932983	Identifier	opts		4931772	0					
ANR	4932984	Identifier	logFile		4931772	1					
ANR	4932985	ElseStatement	else		4931772	0					
ANR	4932986	CompoundStatement		213:9:5975:5975	4931772	0					
ANR	4932987	ExpressionStatement	"fprintf ( stderr , ""Unrecognized argument: '%s'\\n"" , arg . Arg ( ) )"	348:3:9182:9242	4931772	0	True				
ANR	4932988	CallExpression	"fprintf ( stderr , ""Unrecognized argument: '%s'\\n"" , arg . Arg ( ) )"		4931772	0					
ANR	4932989	Callee	fprintf		4931772	0					
ANR	4932990	Identifier	fprintf		4931772	0					
ANR	4932991	ArgumentList	stderr		4931772	1					
ANR	4932992	Argument	stderr		4931772	0					
ANR	4932993	Identifier	stderr		4931772	0					
ANR	4932994	Argument	"""Unrecognized argument: '%s'\\n"""		4931772	1					
ANR	4932995	PrimaryExpression	"""Unrecognized argument: '%s'\\n"""		4931772	0					
ANR	4932996	Argument	arg . Arg ( )		4931772	2					
ANR	4932997	CallExpression	arg . Arg ( )		4931772	0					
ANR	4932998	Callee	arg . Arg		4931772	0					
ANR	4932999	MemberAccess	arg . Arg		4931772	0					
ANR	4933000	Identifier	arg		4931772	0					
ANR	4933001	Identifier	Arg		4931772	1					
ANR	4933002	ArgumentList			4931772	1					
ANR	4933003	ExpressionStatement	"printf ( ""%s"" , usage )"	349:3:9247:9266	4931772	1	True				
ANR	4933004	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4933005	Callee	printf		4931772	0					
ANR	4933006	Identifier	printf		4931772	0					
ANR	4933007	ArgumentList	"""%s"""		4931772	1					
ANR	4933008	Argument	"""%s"""		4931772	0					
ANR	4933009	PrimaryExpression	"""%s"""		4931772	0					
ANR	4933010	Argument	usage		4931772	1					
ANR	4933011	Identifier	usage		4931772	0					
ANR	4933012	ExpressionStatement	status = STATUS_ERROR	350:3:9271:9292	4931772	2	True				
ANR	4933013	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4933014	Identifier	status		4931772	0					
ANR	4933015	Identifier	STATUS_ERROR		4931772	1					
ANR	4933016	ExpressionStatement	argno = arg . Index ( )	352:2:9300:9320	4931772	3	True				
ANR	4933017	AssignmentExpression	argno = arg . Index ( )		4931772	0		=			
ANR	4933018	Identifier	argno		4931772	0					
ANR	4933019	CallExpression	arg . Index ( )		4931772	1					
ANR	4933020	Callee	arg . Index		4931772	0					
ANR	4933021	MemberAccess	arg . Index		4931772	0					
ANR	4933022	Identifier	arg		4931772	0					
ANR	4933023	Identifier	Index		4931772	1					
ANR	4933024	ArgumentList			4931772	1					
ANR	4933025	IfStatement	if ( status == STATUS_OK && ! opts . readPersist && ! opts . isEventLog && opts . logFile == NULL )		4931772	56					
ANR	4933026	Condition	status == STATUS_OK && ! opts . readPersist && ! opts . isEventLog && opts . logFile == NULL	355:6:9332:9424	4931772	0	True				
ANR	4933027	AndExpression	status == STATUS_OK && ! opts . readPersist && ! opts . isEventLog && opts . logFile == NULL		4931772	0		&&			
ANR	4933028	EqualityExpression	status == STATUS_OK		4931772	0		==			
ANR	4933029	Identifier	status		4931772	0					
ANR	4933030	Identifier	STATUS_OK		4931772	1					
ANR	4933031	AndExpression	! opts . readPersist && ! opts . isEventLog && opts . logFile == NULL		4931772	1		&&			
ANR	4933032	UnaryOperationExpression	! opts . readPersist		4931772	0					
ANR	4933033	UnaryOperator	!		4931772	0					
ANR	4933034	MemberAccess	opts . readPersist		4931772	1					
ANR	4933035	Identifier	opts		4931772	0					
ANR	4933036	Identifier	readPersist		4931772	1					
ANR	4933037	AndExpression	! opts . isEventLog && opts . logFile == NULL		4931772	1		&&			
ANR	4933038	UnaryOperationExpression	! opts . isEventLog		4931772	0					
ANR	4933039	UnaryOperator	!		4931772	0					
ANR	4933040	MemberAccess	opts . isEventLog		4931772	1					
ANR	4933041	Identifier	opts		4931772	0					
ANR	4933042	Identifier	isEventLog		4931772	1					
ANR	4933043	EqualityExpression	opts . logFile == NULL		4931772	1		==			
ANR	4933044	MemberAccess	opts . logFile		4931772	0					
ANR	4933045	Identifier	opts		4931772	0					
ANR	4933046	Identifier	logFile		4931772	1					
ANR	4933047	Identifier	NULL		4931772	1					
ANR	4933048	CompoundStatement		224:26:6226:6226	4931772	1					
ANR	4933049	ExpressionStatement	"fprintf ( stderr , ""Log file must be specified if not restoring state\\n"" )"	359:2:9432:9502	4931772	0	True				
ANR	4933050	CallExpression	"fprintf ( stderr , ""Log file must be specified if not restoring state\\n"" )"		4931772	0					
ANR	4933051	Callee	fprintf		4931772	0					
ANR	4933052	Identifier	fprintf		4931772	0					
ANR	4933053	ArgumentList	stderr		4931772	1					
ANR	4933054	Argument	stderr		4931772	0					
ANR	4933055	Identifier	stderr		4931772	0					
ANR	4933056	Argument	"""Log file must be specified if not restoring state\\n"""		4931772	1					
ANR	4933057	PrimaryExpression	"""Log file must be specified if not restoring state\\n"""		4931772	0					
ANR	4933058	ExpressionStatement	"printf ( ""%s"" , usage )"	360:2:9506:9525	4931772	1	True				
ANR	4933059	CallExpression	"printf ( ""%s"" , usage )"		4931772	0					
ANR	4933060	Callee	printf		4931772	0					
ANR	4933061	Identifier	printf		4931772	0					
ANR	4933062	ArgumentList	"""%s"""		4931772	1					
ANR	4933063	Argument	"""%s"""		4931772	0					
ANR	4933064	PrimaryExpression	"""%s"""		4931772	0					
ANR	4933065	Argument	usage		4931772	1					
ANR	4933066	Identifier	usage		4931772	0					
ANR	4933067	ExpressionStatement	status = STATUS_ERROR	361:2:9529:9550	4931772	2	True				
ANR	4933068	AssignmentExpression	status = STATUS_ERROR		4931772	0		=			
ANR	4933069	Identifier	status		4931772	0					
ANR	4933070	Identifier	STATUS_ERROR		4931772	1					
ANR	4933071	ReturnStatement	return status ;	364:1:9557:9570	4931772	57	True				
ANR	4933072	Identifier	status		4931772	0					
ANR	4933073	ReturnType	Status		4931772	1					
ANR	4933074	Identifier	CheckArgs		4931772	2					
ANR	4933075	ParameterList	"int argc , const char * * argv , Options & opts"		4931772	3					
ANR	4933076	Parameter	int argc	134:10:3157:3164	4931772	0	True				
ANR	4933077	ParameterType	int		4931772	0					
ANR	4933078	Identifier	argc		4931772	1					
ANR	4933079	Parameter	const char * * argv	134:20:3167:3183	4931772	1	True				
ANR	4933080	ParameterType	const char * *		4931772	0					
ANR	4933081	Identifier	argv		4931772	1					
ANR	4933082	Parameter	Options & opts	134:39:3186:3198	4931772	2	True				
ANR	4933083	ParameterType	Options &		4931772	0					
ANR	4933084	Identifier	opts		4931772	1					
ANR	4933085	CFGEntryNode	ENTRY		4931772		True				
ANR	4933086	CFGExitNode	EXIT		4931772		True				
ANR	4933087	Symbol	VERB_WARNING		4931772						
ANR	4933088	Symbol	opts . maxExec		4931772						
ANR	4933089	Symbol	arg . Match		4931772						
ANR	4933090	Symbol	opts . stop		4931772						
ANR	4933091	Symbol	usage		4931772						
ANR	4933092	Symbol	VERB_ALL		4931772						
ANR	4933093	Symbol	opts . verbosity		4931772						
ANR	4933094	Symbol	opts		4931772						
ANR	4933095	Symbol	argno		4931772						
ANR	4933096	Symbol	strcasecmp		4931772						
ANR	4933097	Symbol	opts . writePersist		4931772						
ANR	4933098	Symbol	NULL		4931772						
ANR	4933099	Symbol	opts . checkFileStatus		4931772						
ANR	4933100	Symbol	VERB_INFO		4931772						
ANR	4933101	Symbol	opts . sleep		4931772						
ANR	4933102	Symbol	opts . exitAfterInit		4931772						
ANR	4933103	Symbol	verb		4931772						
ANR	4933104	Symbol	arg . Error		4931772						
ANR	4933105	Symbol	__DATE__		4931772						
ANR	4933106	Symbol	stderr		4931772						
ANR	4933107	Symbol	opts . term		4931772						
ANR	4933108	Symbol	opts . dumpState		4931772						
ANR	4933109	Symbol	arg . ArgIsOpt		4931772						
ANR	4933110	Symbol	VERB_NONE		4931772						
ANR	4933111	Symbol	true		4931772						
ANR	4933112	Symbol	arg . getOpt		4931772						
ANR	4933113	Symbol	status		4931772						
ANR	4933114	Symbol	STATUS_CANCEL		4931772						
ANR	4933115	Symbol	opts . logFile		4931772						
ANR	4933116	Symbol	opts . missedCheck		4931772						
ANR	4933117	Symbol	flags		4931772						
ANR	4933118	Symbol	arg . Index		4931772						
ANR	4933119	Symbol	argv		4931772						
ANR	4933120	Symbol	arg		4931772						
ANR	4933121	Symbol	opts . readPersist		4931772						
ANR	4933122	Symbol	argc		4931772						
ANR	4933123	Symbol	VERB_ERROR		4931772						
ANR	4933124	Symbol	opts . readOnly		4931772						
ANR	4933125	Symbol	false		4931772						
ANR	4933126	Symbol	arg . isOptInt		4931772						
ANR	4933127	Symbol	opts . maxRotations		4931772						
ANR	4933128	Symbol	STATUS_ERROR		4931772						
ANR	4933129	Symbol	opts . persistFile		4931772						
ANR	4933130	Symbol	opts . isEventLog		4931772						
ANR	4933131	Symbol	arg . Arg		4931772						
ANR	4933132	Symbol	s		4931772						
ANR	4933133	Symbol	arg . hasOpt		4931772						
ANR	4933134	Symbol	v		4931772						
ANR	4933135	Symbol	opts . rotation		4931772						
ANR	4933136	Symbol	VERSION		4931772						
ANR	4933137	Symbol	STATUS_OK		4931772						
ANR	4933138	Symbol	opts . exit		4931772						
ANR	4933139	Function	ReadEvents	367:0:9575:18632							
ANR	4933140	FunctionDef	"ReadEvents (Options & opts , int & totalEvents)"		4933139	0					
ANR	4933141	CompoundStatement		369:0:9626:18632	4933139	0					
ANR	4933142	IdentifierDeclStatement	Status result = STATUS_OK ;	370:1:9629:9659	4933139	0	True				
ANR	4933143	IdentifierDecl	result = STATUS_OK		4933139	0					
ANR	4933144	IdentifierDeclType	Status		4933139	0					
ANR	4933145	Identifier	result		4933139	1					
ANR	4933146	AssignmentExpression	result = STATUS_OK		4933139	2		=			
ANR	4933147	Identifier	STATUS_OK		4933139	0					
ANR	4933148	Identifier	STATUS_OK		4933139	1					
ANR	4933149	IdentifierDeclStatement	int numEvents = 0 ;	371:1:9662:9685	4933139	1	True				
ANR	4933150	IdentifierDecl	numEvents = 0		4933139	0					
ANR	4933151	IdentifierDeclType	int		4933139	0					
ANR	4933152	Identifier	numEvents		4933139	1					
ANR	4933153	AssignmentExpression	numEvents = 0		4933139	2		=			
ANR	4933154	Identifier	numEvents		4933139	0					
ANR	4933155	PrimaryExpression	0		4933139	1					
ANR	4933156	ExpressionStatement	totalEvents = 0	374:1:9708:9723	4933139	2	True				
ANR	4933157	AssignmentExpression	totalEvents = 0		4933139	0		=			
ANR	4933158	Identifier	totalEvents		4933139	0					
ANR	4933159	PrimaryExpression	0		4933139	1					
ANR	4933160	IdentifierDeclStatement	ReadUserLog :: FileState state ;	377:1:9761:9789	4933139	3	True				
ANR	4933161	IdentifierDecl	state		4933139	0					
ANR	4933162	IdentifierDeclType	ReadUserLog :: FileState		4933139	0					
ANR	4933163	Identifier	state		4933139	1					
ANR	4933164	ExpressionStatement	ReadUserLog :: InitFileState ( state )	378:1:9792:9827	4933139	4	True				
ANR	4933165	CallExpression	ReadUserLog :: InitFileState ( state )		4933139	0					
ANR	4933166	Callee	ReadUserLog :: InitFileState		4933139	0					
ANR	4933167	Identifier	ReadUserLog :: InitFileState		4933139	0					
ANR	4933168	ArgumentList	state		4933139	1					
ANR	4933169	Argument	state		4933139	0					
ANR	4933170	Identifier	state		4933139	0					
ANR	4933171	IdentifierDeclStatement	ReadUserLog reader ;	380:1:9831:9849	4933139	5	True				
ANR	4933172	IdentifierDecl	reader		4933139	0					
ANR	4933173	IdentifierDeclType	ReadUserLog		4933139	0					
ANR	4933174	Identifier	reader		4933139	1					
ANR	4933175	IfStatement	if ( opts . readPersist )		4933139	6					
ANR	4933176	Condition	opts . readPersist	383:6:9909:9924	4933139	0	True				
ANR	4933177	MemberAccess	opts . readPersist		4933139	0					
ANR	4933178	Identifier	opts		4933139	0					
ANR	4933179	Identifier	readPersist		4933139	1					
ANR	4933180	CompoundStatement		16:2:305:371	4933139	1					
ANR	4933181	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( opts . persistFile , O_RDONLY , 0 ) ;"	384:2:9932:9998	4933139	0	True				
ANR	4933182	IdentifierDecl	"fd = safe_open_wrapper_follow ( opts . persistFile , O_RDONLY , 0 )"		4933139	0					
ANR	4933183	IdentifierDeclType	int		4933139	0					
ANR	4933184	Identifier	fd		4933139	1					
ANR	4933185	AssignmentExpression	"fd = safe_open_wrapper_follow ( opts . persistFile , O_RDONLY , 0 )"		4933139	2		=			
ANR	4933186	Identifier	fd		4933139	0					
ANR	4933187	CallExpression	"safe_open_wrapper_follow ( opts . persistFile , O_RDONLY , 0 )"		4933139	1					
ANR	4933188	Callee	safe_open_wrapper_follow		4933139	0					
ANR	4933189	Identifier	safe_open_wrapper_follow		4933139	0					
ANR	4933190	ArgumentList	opts . persistFile		4933139	1					
ANR	4933191	Argument	opts . persistFile		4933139	0					
ANR	4933192	MemberAccess	opts . persistFile		4933139	0					
ANR	4933193	Identifier	opts		4933139	0					
ANR	4933194	Identifier	persistFile		4933139	1					
ANR	4933195	Argument	O_RDONLY		4933139	1					
ANR	4933196	Identifier	O_RDONLY		4933139	0					
ANR	4933197	Argument	0		4933139	2					
ANR	4933198	PrimaryExpression	0		4933139	0					
ANR	4933199	IfStatement	if ( fd >= 0 )		4933139	1					
ANR	4933200	Condition	fd >= 0	385:7:10007:10013	4933139	0	True				
ANR	4933201	RelationalExpression	fd >= 0		4933139	0		>=			
ANR	4933202	Identifier	fd		4933139	0					
ANR	4933203	PrimaryExpression	0		4933139	1					
ANR	4933204	CompoundStatement		24:3:561:573	4933139	1					
ANR	4933205	IfStatement	"if ( read ( fd , state . buf , state . size ) != state . size )"		4933139	0					
ANR	4933206	Condition	"read ( fd , state . buf , state . size ) != state . size"	386:8:10027:10073	4933139	0	True				
ANR	4933207	EqualityExpression	"read ( fd , state . buf , state . size ) != state . size"		4933139	0		!=			
ANR	4933208	CallExpression	"read ( fd , state . buf , state . size )"		4933139	0					
ANR	4933209	Callee	read		4933139	0					
ANR	4933210	Identifier	read		4933139	0					
ANR	4933211	ArgumentList	fd		4933139	1					
ANR	4933212	Argument	fd		4933139	0					
ANR	4933213	Identifier	fd		4933139	0					
ANR	4933214	Argument	state . buf		4933139	1					
ANR	4933215	MemberAccess	state . buf		4933139	0					
ANR	4933216	Identifier	state		4933139	0					
ANR	4933217	Identifier	buf		4933139	1					
ANR	4933218	Argument	state . size		4933139	2					
ANR	4933219	MemberAccess	state . size		4933139	0					
ANR	4933220	Identifier	state		4933139	0					
ANR	4933221	Identifier	size		4933139	1					
ANR	4933222	MemberAccess	state . size		4933139	1					
ANR	4933223	Identifier	state		4933139	0					
ANR	4933224	Identifier	size		4933139	1					
ANR	4933225	CompoundStatement		18:58:450:450	4933139	1					
ANR	4933226	ExpressionStatement	"fprintf ( stderr , ""Failed reading persistent file\\n"" )"	387:4:10083:10136	4933139	0	True				
ANR	4933227	CallExpression	"fprintf ( stderr , ""Failed reading persistent file\\n"" )"		4933139	0					
ANR	4933228	Callee	fprintf		4933139	0					
ANR	4933229	Identifier	fprintf		4933139	0					
ANR	4933230	ArgumentList	stderr		4933139	1					
ANR	4933231	Argument	stderr		4933139	0					
ANR	4933232	Identifier	stderr		4933139	0					
ANR	4933233	Argument	"""Failed reading persistent file\\n"""		4933139	1					
ANR	4933234	PrimaryExpression	"""Failed reading persistent file\\n"""		4933139	0					
ANR	4933235	ReturnStatement	return STATUS_ERROR ;	388:4:10142:10161	4933139	1	True				
ANR	4933236	Identifier	STATUS_ERROR		4933139	0					
ANR	4933237	ExpressionStatement	close ( fd )	390:3:10171:10182	4933139	1	True				
ANR	4933238	CallExpression	close ( fd )		4933139	0					
ANR	4933239	Callee	close		4933139	0					
ANR	4933240	Identifier	close		4933139	0					
ANR	4933241	ArgumentList	fd		4933139	1					
ANR	4933242	Argument	fd		4933139	0					
ANR	4933243	Identifier	fd		4933139	0					
ANR	4933244	IdentifierDeclStatement	bool istatus ;	392:3:10188:10200	4933139	2	True				
ANR	4933245	IdentifierDecl	istatus		4933139	0					
ANR	4933246	IdentifierDeclType	bool		4933139	0					
ANR	4933247	Identifier	istatus		4933139	1					
ANR	4933248	IfStatement	if ( opts . maxRotations )		4933139	3					
ANR	4933249	Condition	opts . maxRotations	393:8:10210:10226	4933139	0	True				
ANR	4933250	MemberAccess	opts . maxRotations		4933139	0					
ANR	4933251	Identifier	opts		4933139	0					
ANR	4933252	Identifier	maxRotations		4933139	1					
ANR	4933253	CompoundStatement		25:28:603:603	4933139	1					
ANR	4933254	ExpressionStatement	"istatus = reader . initialize ( state , opts . maxRotations , opts . readOnly )"	394:4:10236:10330	4933139	0	True				
ANR	4933255	AssignmentExpression	"istatus = reader . initialize ( state , opts . maxRotations , opts . readOnly )"		4933139	0		=			
ANR	4933256	Identifier	istatus		4933139	0					
ANR	4933257	CallExpression	"reader . initialize ( state , opts . maxRotations , opts . readOnly )"		4933139	1					
ANR	4933258	Callee	reader . initialize		4933139	0					
ANR	4933259	MemberAccess	reader . initialize		4933139	0					
ANR	4933260	Identifier	reader		4933139	0					
ANR	4933261	Identifier	initialize		4933139	1					
ANR	4933262	ArgumentList	state		4933139	1					
ANR	4933263	Argument	state		4933139	0					
ANR	4933264	Identifier	state		4933139	0					
ANR	4933265	Argument	opts . maxRotations		4933139	1					
ANR	4933266	MemberAccess	opts . maxRotations		4933139	0					
ANR	4933267	Identifier	opts		4933139	0					
ANR	4933268	Identifier	maxRotations		4933139	1					
ANR	4933269	Argument	opts . readOnly		4933139	2					
ANR	4933270	MemberAccess	opts . readOnly		4933139	0					
ANR	4933271	Identifier	opts		4933139	0					
ANR	4933272	Identifier	readOnly		4933139	1					
ANR	4933273	ElseStatement	else		4933139	0					
ANR	4933274	CompoundStatement		30:8:718:718	4933139	0					
ANR	4933275	ExpressionStatement	"istatus = reader . initialize ( state , opts . readOnly )"	399:4:10351:10414	4933139	0	True				
ANR	4933276	AssignmentExpression	"istatus = reader . initialize ( state , opts . readOnly )"		4933139	0		=			
ANR	4933277	Identifier	istatus		4933139	0					
ANR	4933278	CallExpression	"reader . initialize ( state , opts . readOnly )"		4933139	1					
ANR	4933279	Callee	reader . initialize		4933139	0					
ANR	4933280	MemberAccess	reader . initialize		4933139	0					
ANR	4933281	Identifier	reader		4933139	0					
ANR	4933282	Identifier	initialize		4933139	1					
ANR	4933283	ArgumentList	state		4933139	1					
ANR	4933284	Argument	state		4933139	0					
ANR	4933285	Identifier	state		4933139	0					
ANR	4933286	Argument	opts . readOnly		4933139	1					
ANR	4933287	MemberAccess	opts . readOnly		4933139	0					
ANR	4933288	Identifier	opts		4933139	0					
ANR	4933289	Identifier	readOnly		4933139	1					
ANR	4933290	IfStatement	if ( ! istatus )		4933139	4					
ANR	4933291	Condition	! istatus	402:8:10429:10437	4933139	0	True				
ANR	4933292	UnaryOperationExpression	! istatus		4933139	0					
ANR	4933293	UnaryOperator	!		4933139	0					
ANR	4933294	Identifier	istatus		4933139	1					
ANR	4933295	CompoundStatement		34:20:814:814	4933139	1					
ANR	4933296	ExpressionStatement	"fprintf ( stderr , ""Failed to initialize from state\\n"" )"	403:4:10447:10501	4933139	0	True				
ANR	4933297	CallExpression	"fprintf ( stderr , ""Failed to initialize from state\\n"" )"		4933139	0					
ANR	4933298	Callee	fprintf		4933139	0					
ANR	4933299	Identifier	fprintf		4933139	0					
ANR	4933300	ArgumentList	stderr		4933139	1					
ANR	4933301	Argument	stderr		4933139	0					
ANR	4933302	Identifier	stderr		4933139	0					
ANR	4933303	Argument	"""Failed to initialize from state\\n"""		4933139	1					
ANR	4933304	PrimaryExpression	"""Failed to initialize from state\\n"""		4933139	0					
ANR	4933305	ExpressionStatement	ReportError ( reader )	404:4:10507:10528	4933139	1	True				
ANR	4933306	CallExpression	ReportError ( reader )		4933139	0					
ANR	4933307	Callee	ReportError		4933139	0					
ANR	4933308	Identifier	ReportError		4933139	0					
ANR	4933309	ArgumentList	reader		4933139	1					
ANR	4933310	Argument	reader		4933139	0					
ANR	4933311	Identifier	reader		4933139	0					
ANR	4933312	ReturnStatement	return STATUS_ERROR ;	405:4:10534:10553	4933139	2	True				
ANR	4933313	Identifier	STATUS_ERROR		4933139	0					
ANR	4933314	ExpressionStatement	"printf ( ""Initialized log reader from state %s\\n"" , opts . persistFile )"	407:3:10563:10636	4933139	5	True				
ANR	4933315	CallExpression	"printf ( ""Initialized log reader from state %s\\n"" , opts . persistFile )"		4933139	0					
ANR	4933316	Callee	printf		4933139	0					
ANR	4933317	Identifier	printf		4933139	0					
ANR	4933318	ArgumentList	"""Initialized log reader from state %s\\n"""		4933139	1					
ANR	4933319	Argument	"""Initialized log reader from state %s\\n"""		4933139	0					
ANR	4933320	PrimaryExpression	"""Initialized log reader from state %s\\n"""		4933139	0					
ANR	4933321	Argument	opts . persistFile		4933139	1					
ANR	4933322	MemberAccess	opts . persistFile		4933139	0					
ANR	4933323	Identifier	opts		4933139	0					
ANR	4933324	Identifier	persistFile		4933139	1					
ANR	4933325	Statement	if	411:6:10649:10650	4933139	2	True				
ANR	4933326	Statement	ENABLE_STATE_DUMP	411:9:10652:10668	4933139	3	True				
ANR	4933327	IfStatement	if ( opts . dumpState )		4933139	4					
ANR	4933328	Condition	opts . dumpState	412:7:10677:10690	4933139	0	True				
ANR	4933329	MemberAccess	opts . dumpState		4933139	0					
ANR	4933330	Identifier	opts		4933139	0					
ANR	4933331	Identifier	dumpState		4933139	1					
ANR	4933332	CompoundStatement		46:3:1111:1125	4933139	1					
ANR	4933333	IdentifierDeclStatement	"ReadUserLogState rstate ( state , 60 ) ;"	413:3:10699:10733	4933139	0	True				
ANR	4933334	IdentifierDecl	"rstate ( state , 60 )"		4933139	0					
ANR	4933335	IdentifierDeclType	ReadUserLogState		4933139	0					
ANR	4933336	Identifier	rstate		4933139	1					
ANR	4933337	Expression	"state , 60"		4933139	2					
ANR	4933338	Identifier	state		4933139	0					
ANR	4933339	PrimaryExpression	60		4933139	1					
ANR	4933340	IdentifierDeclStatement	MyString str ;	414:3:10738:10752	4933139	1	True				
ANR	4933341	IdentifierDecl	str		4933139	0					
ANR	4933342	IdentifierDeclType	MyString		4933139	0					
ANR	4933343	Identifier	str		4933139	1					
ANR	4933344	ExpressionStatement	"rstate . GetStateString ( state , str , ""Restore File State"" )"	416:3:10758:10815	4933139	2	True				
ANR	4933345	CallExpression	"rstate . GetStateString ( state , str , ""Restore File State"" )"		4933139	0					
ANR	4933346	Callee	rstate . GetStateString		4933139	0					
ANR	4933347	MemberAccess	rstate . GetStateString		4933139	0					
ANR	4933348	Identifier	rstate		4933139	0					
ANR	4933349	Identifier	GetStateString		4933139	1					
ANR	4933350	ArgumentList	state		4933139	1					
ANR	4933351	Argument	state		4933139	0					
ANR	4933352	Identifier	state		4933139	0					
ANR	4933353	Argument	str		4933139	1					
ANR	4933354	Identifier	str		4933139	0					
ANR	4933355	Argument	"""Restore File State"""		4933139	2					
ANR	4933356	PrimaryExpression	"""Restore File State"""		4933139	0					
ANR	4933357	ExpressionStatement	puts ( str . Value ( ) )	417:3:10820:10839	4933139	3	True				
ANR	4933358	CallExpression	puts ( str . Value ( ) )		4933139	0					
ANR	4933359	Callee	puts		4933139	0					
ANR	4933360	Identifier	puts		4933139	0					
ANR	4933361	ArgumentList	str . Value ( )		4933139	1					
ANR	4933362	Argument	str . Value ( )		4933139	0					
ANR	4933363	CallExpression	str . Value ( )		4933139	0					
ANR	4933364	Callee	str . Value		4933139	0					
ANR	4933365	MemberAccess	str . Value		4933139	0					
ANR	4933366	Identifier	str		4933139	0					
ANR	4933367	Identifier	Value		4933139	1					
ANR	4933368	ArgumentList			4933139	1					
ANR	4933369	Statement	endif	419:6:10851:10855	4933139	5	True				
ANR	4933370	IfStatement	if ( ! reader . isInitialized ( ) )		4933139	7					
ANR	4933371	Condition	! reader . isInitialized ( )	424:6:10933:10955	4933139	0	True				
ANR	4933372	UnaryOperationExpression	! reader . isInitialized ( )		4933139	0					
ANR	4933373	UnaryOperator	!		4933139	0					
ANR	4933374	CallExpression	reader . isInitialized ( )		4933139	1					
ANR	4933375	Callee	reader . isInitialized		4933139	0					
ANR	4933376	MemberAccess	reader . isInitialized		4933139	0					
ANR	4933377	Identifier	reader		4933139	0					
ANR	4933378	Identifier	isInitialized		4933139	1					
ANR	4933379	ArgumentList			4933139	1					
ANR	4933380	CompoundStatement		59:2:1391:1405	4933139	1					
ANR	4933381	IdentifierDeclStatement	bool istatus = false ;	425:2:10963:10985	4933139	0	True				
ANR	4933382	IdentifierDecl	istatus = false		4933139	0					
ANR	4933383	IdentifierDeclType	bool		4933139	0					
ANR	4933384	Identifier	istatus		4933139	1					
ANR	4933385	AssignmentExpression	istatus = false		4933139	2		=			
ANR	4933386	Identifier	false		4933139	0					
ANR	4933387	Identifier	false		4933139	1					
ANR	4933388	IdentifierDeclStatement	"const char * type = ""None"" ;"	426:2:10989:11014	4933139	1	True				
ANR	4933389	IdentifierDecl	"* type = ""None"""		4933139	0					
ANR	4933390	IdentifierDeclType	const char *		4933139	0					
ANR	4933391	Identifier	type		4933139	1					
ANR	4933392	AssignmentExpression	"* type = ""None"""		4933139	2		=			
ANR	4933393	Identifier	type		4933139	0					
ANR	4933394	PrimaryExpression	"""None"""		4933139	1					
ANR	4933395	IdentifierDeclStatement	char buf [ 64 ] ;	427:2:11018:11032	4933139	2	True				
ANR	4933396	IdentifierDecl	buf [ 64 ]		4933139	0					
ANR	4933397	IdentifierDeclType	char [ 64 ]		4933139	0					
ANR	4933398	Identifier	buf		4933139	1					
ANR	4933399	PrimaryExpression	64		4933139	2					
ANR	4933400	IfStatement	if ( opts . isEventLog )		4933139	3					
ANR	4933401	Condition	opts . isEventLog	428:7:11041:11055	4933139	0	True				
ANR	4933402	MemberAccess	opts . isEventLog		4933139	0					
ANR	4933403	Identifier	opts		4933139	0					
ANR	4933404	Identifier	isEventLog		4933139	1					
ANR	4933405	CompoundStatement		60:25:1432:1432	4933139	1					
ANR	4933406	ExpressionStatement	istatus = reader . initialize ( )	429:3:11064:11094	4933139	0	True				
ANR	4933407	AssignmentExpression	istatus = reader . initialize ( )		4933139	0		=			
ANR	4933408	Identifier	istatus		4933139	0					
ANR	4933409	CallExpression	reader . initialize ( )		4933139	1					
ANR	4933410	Callee	reader . initialize		4933139	0					
ANR	4933411	MemberAccess	reader . initialize		4933139	0					
ANR	4933412	Identifier	reader		4933139	0					
ANR	4933413	Identifier	initialize		4933139	1					
ANR	4933414	ArgumentList			4933139	1					
ANR	4933415	ExpressionStatement	"type = ""EventLog"""	430:3:11099:11116	4933139	1	True				
ANR	4933416	AssignmentExpression	"type = ""EventLog"""		4933139	0		=			
ANR	4933417	Identifier	type		4933139	0					
ANR	4933418	PrimaryExpression	"""EventLog"""		4933139	1					
ANR	4933419	ElseStatement	else		4933139	0					
ANR	4933420	IfStatement	if ( opts . maxRotations <= 1 )		4933139	0					
ANR	4933421	Condition	opts . maxRotations <= 1	432:12:11134:11155	4933139	0	True				
ANR	4933422	RelationalExpression	opts . maxRotations <= 1		4933139	0		<=			
ANR	4933423	MemberAccess	opts . maxRotations		4933139	0					
ANR	4933424	Identifier	opts		4933139	0					
ANR	4933425	Identifier	maxRotations		4933139	1					
ANR	4933426	PrimaryExpression	1		4933139	1					
ANR	4933427	CompoundStatement		64:37:1532:1532	4933139	1					
ANR	4933428	ExpressionStatement	"istatus = reader . initialize ( opts . logFile , opts . rotation , opts . rotation )"	433:3:11164:11259	4933139	0	True				
ANR	4933429	AssignmentExpression	"istatus = reader . initialize ( opts . logFile , opts . rotation , opts . rotation )"		4933139	0		=			
ANR	4933430	Identifier	istatus		4933139	0					
ANR	4933431	CallExpression	"reader . initialize ( opts . logFile , opts . rotation , opts . rotation )"		4933139	1					
ANR	4933432	Callee	reader . initialize		4933139	0					
ANR	4933433	MemberAccess	reader . initialize		4933139	0					
ANR	4933434	Identifier	reader		4933139	0					
ANR	4933435	Identifier	initialize		4933139	1					
ANR	4933436	ArgumentList	opts . logFile		4933139	1					
ANR	4933437	Argument	opts . logFile		4933139	0					
ANR	4933438	MemberAccess	opts . logFile		4933139	0					
ANR	4933439	Identifier	opts		4933139	0					
ANR	4933440	Identifier	logFile		4933139	1					
ANR	4933441	Argument	opts . rotation		4933139	1					
ANR	4933442	MemberAccess	opts . rotation		4933139	0					
ANR	4933443	Identifier	opts		4933139	0					
ANR	4933444	Identifier	rotation		4933139	1					
ANR	4933445	Argument	opts . rotation		4933139	2					
ANR	4933446	MemberAccess	opts . rotation		4933139	0					
ANR	4933447	Identifier	opts		4933139	0					
ANR	4933448	Identifier	rotation		4933139	1					
ANR	4933449	ExpressionStatement	"type = opts . rotation ? ""file (rotation)"" : ""file (no rotations)"""	436:3:11264:11328	4933139	1	True				
ANR	4933450	AssignmentExpression	"type = opts . rotation ? ""file (rotation)"" : ""file (no rotations)"""		4933139	0		=			
ANR	4933451	Identifier	type		4933139	0					
ANR	4933452	ConditionalExpression	"opts . rotation ? ""file (rotation)"" : ""file (no rotations)"""		4933139	1					
ANR	4933453	Condition	opts . rotation		4933139	0					
ANR	4933454	MemberAccess	opts . rotation		4933139	0					
ANR	4933455	Identifier	opts		4933139	0					
ANR	4933456	Identifier	rotation		4933139	1					
ANR	4933457	PrimaryExpression	"""file (rotation)"""		4933139	1					
ANR	4933458	PrimaryExpression	"""file (no rotations)"""		4933139	2					
ANR	4933459	ElseStatement	else		4933139	0					
ANR	4933460	CompoundStatement		70:7:1714:1714	4933139	0					
ANR	4933461	ExpressionStatement	"istatus = reader . initialize ( opts . logFile , opts . maxRotations , opts . rotation , opts . readOnly )"	439:3:11346:11471	4933139	0	True				
ANR	4933462	AssignmentExpression	"istatus = reader . initialize ( opts . logFile , opts . maxRotations , opts . rotation , opts . readOnly )"		4933139	0		=			
ANR	4933463	Identifier	istatus		4933139	0					
ANR	4933464	CallExpression	"reader . initialize ( opts . logFile , opts . maxRotations , opts . rotation , opts . readOnly )"		4933139	1					
ANR	4933465	Callee	reader . initialize		4933139	0					
ANR	4933466	MemberAccess	reader . initialize		4933139	0					
ANR	4933467	Identifier	reader		4933139	0					
ANR	4933468	Identifier	initialize		4933139	1					
ANR	4933469	ArgumentList	opts . logFile		4933139	1					
ANR	4933470	Argument	opts . logFile		4933139	0					
ANR	4933471	MemberAccess	opts . logFile		4933139	0					
ANR	4933472	Identifier	opts		4933139	0					
ANR	4933473	Identifier	logFile		4933139	1					
ANR	4933474	Argument	opts . maxRotations		4933139	1					
ANR	4933475	MemberAccess	opts . maxRotations		4933139	0					
ANR	4933476	Identifier	opts		4933139	0					
ANR	4933477	Identifier	maxRotations		4933139	1					
ANR	4933478	Argument	opts . rotation		4933139	2					
ANR	4933479	MemberAccess	opts . rotation		4933139	0					
ANR	4933480	Identifier	opts		4933139	0					
ANR	4933481	Identifier	rotation		4933139	1					
ANR	4933482	Argument	opts . readOnly		4933139	3					
ANR	4933483	MemberAccess	opts . readOnly		4933139	0					
ANR	4933484	Identifier	opts		4933139	0					
ANR	4933485	Identifier	readOnly		4933139	1					
ANR	4933486	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""file (%s/%d)"" , opts . rotation ? ""rotation"" : ""no rotations"" , opts . maxRotations )"	443:3:11476:11598	4933139	1	True				
ANR	4933487	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""file (%s/%d)"" , opts . rotation ? ""rotation"" : ""no rotations"" , opts . maxRotations )"		4933139	0					
ANR	4933488	Callee	snprintf		4933139	0					
ANR	4933489	Identifier	snprintf		4933139	0					
ANR	4933490	ArgumentList	buf		4933139	1					
ANR	4933491	Argument	buf		4933139	0					
ANR	4933492	Identifier	buf		4933139	0					
ANR	4933493	Argument	sizeof ( buf )		4933139	1					
ANR	4933494	SizeofExpression	sizeof ( buf )		4933139	0					
ANR	4933495	Sizeof	sizeof		4933139	0					
ANR	4933496	SizeofOperand	buf		4933139	1					
ANR	4933497	Argument	"""file (%s/%d)"""		4933139	2					
ANR	4933498	PrimaryExpression	"""file (%s/%d)"""		4933139	0					
ANR	4933499	Argument	"opts . rotation ? ""rotation"" : ""no rotations"""		4933139	3					
ANR	4933500	ConditionalExpression	"opts . rotation ? ""rotation"" : ""no rotations"""		4933139	0					
ANR	4933501	Condition	opts . rotation		4933139	0					
ANR	4933502	MemberAccess	opts . rotation		4933139	0					
ANR	4933503	Identifier	opts		4933139	0					
ANR	4933504	Identifier	rotation		4933139	1					
ANR	4933505	PrimaryExpression	"""rotation"""		4933139	1					
ANR	4933506	PrimaryExpression	"""no rotations"""		4933139	2					
ANR	4933507	Argument	opts . maxRotations		4933139	4					
ANR	4933508	MemberAccess	opts . maxRotations		4933139	0					
ANR	4933509	Identifier	opts		4933139	0					
ANR	4933510	Identifier	maxRotations		4933139	1					
ANR	4933511	ExpressionStatement	type = buf	446:3:11603:11613	4933139	2	True				
ANR	4933512	AssignmentExpression	type = buf		4933139	0		=			
ANR	4933513	Identifier	type		4933139	0					
ANR	4933514	Identifier	buf		4933139	1					
ANR	4933515	IfStatement	if ( ! istatus )		4933139	4					
ANR	4933516	Condition	! istatus	448:7:11626:11633	4933139	0	True				
ANR	4933517	UnaryOperationExpression	! istatus		4933139	0					
ANR	4933518	UnaryOperator	!		4933139	0					
ANR	4933519	Identifier	istatus		4933139	1					
ANR	4933520	CompoundStatement		80:18:2010:2010	4933139	1					
ANR	4933521	ExpressionStatement	"fprintf ( stderr , ""Failed to initialize with %s\\n"" , type )"	449:3:11642:11699	4933139	0	True				
ANR	4933522	CallExpression	"fprintf ( stderr , ""Failed to initialize with %s\\n"" , type )"		4933139	0					
ANR	4933523	Callee	fprintf		4933139	0					
ANR	4933524	Identifier	fprintf		4933139	0					
ANR	4933525	ArgumentList	stderr		4933139	1					
ANR	4933526	Argument	stderr		4933139	0					
ANR	4933527	Identifier	stderr		4933139	0					
ANR	4933528	Argument	"""Failed to initialize with %s\\n"""		4933139	1					
ANR	4933529	PrimaryExpression	"""Failed to initialize with %s\\n"""		4933139	0					
ANR	4933530	Argument	type		4933139	2					
ANR	4933531	Identifier	type		4933139	0					
ANR	4933532	ReturnStatement	return STATUS_ERROR ;	450:3:11704:11723	4933139	1	True				
ANR	4933533	Identifier	STATUS_ERROR		4933139	0					
ANR	4933534	ExpressionStatement	"printf ( ""Initialized with %s\\n"" , type )"	452:2:11731:11770	4933139	5	True				
ANR	4933535	CallExpression	"printf ( ""Initialized with %s\\n"" , type )"		4933139	0					
ANR	4933536	Callee	printf		4933139	0					
ANR	4933537	Identifier	printf		4933139	0					
ANR	4933538	ArgumentList	"""Initialized with %s\\n"""		4933139	1					
ANR	4933539	Argument	"""Initialized with %s\\n"""		4933139	0					
ANR	4933540	PrimaryExpression	"""Initialized with %s\\n"""		4933139	0					
ANR	4933541	Argument	type		4933139	1					
ANR	4933542	Identifier	type		4933139	0					
ANR	4933543	IfStatement	if ( opts . exitAfterInit )		4933139	8					
ANR	4933544	Condition	opts . exitAfterInit	456:6:11800:11817	4933139	0	True				
ANR	4933545	MemberAccess	opts . exitAfterInit		4933139	0					
ANR	4933546	Identifier	opts		4933139	0					
ANR	4933547	Identifier	exitAfterInit		4933139	1					
ANR	4933548	CompoundStatement		88:27:2194:2194	4933139	1					
ANR	4933549	ExpressionStatement	"printf ( ""Exiting after init (due to --init-only)\\n"" )"	457:2:11825:11878	4933139	0	True				
ANR	4933550	CallExpression	"printf ( ""Exiting after init (due to --init-only)\\n"" )"		4933139	0					
ANR	4933551	Callee	printf		4933139	0					
ANR	4933552	Identifier	printf		4933139	0					
ANR	4933553	ArgumentList	"""Exiting after init (due to --init-only)\\n"""		4933139	1					
ANR	4933554	Argument	"""Exiting after init (due to --init-only)\\n"""		4933139	0					
ANR	4933555	PrimaryExpression	"""Exiting after init (due to --init-only)\\n"""		4933139	0					
ANR	4933556	ReturnStatement	return STATUS_OK ;	458:2:11882:11898	4933139	1	True				
ANR	4933557	Identifier	STATUS_OK		4933139	0					
ANR	4933558	ExpressionStatement	"signal ( SIGTERM , handle_sig )"	461:1:11905:11934	4933139	9	True				
ANR	4933559	CallExpression	"signal ( SIGTERM , handle_sig )"		4933139	0					
ANR	4933560	Callee	signal		4933139	0					
ANR	4933561	Identifier	signal		4933139	0					
ANR	4933562	ArgumentList	SIGTERM		4933139	1					
ANR	4933563	Argument	SIGTERM		4933139	0					
ANR	4933564	Identifier	SIGTERM		4933139	0					
ANR	4933565	Argument	handle_sig		4933139	1					
ANR	4933566	Identifier	handle_sig		4933139	0					
ANR	4933567	ExpressionStatement	"signal ( SIGQUIT , handle_sig )"	462:1:11937:11966	4933139	10	True				
ANR	4933568	CallExpression	"signal ( SIGQUIT , handle_sig )"		4933139	0					
ANR	4933569	Callee	signal		4933139	0					
ANR	4933570	Identifier	signal		4933139	0					
ANR	4933571	ArgumentList	SIGQUIT		4933139	1					
ANR	4933572	Argument	SIGQUIT		4933139	0					
ANR	4933573	Identifier	SIGQUIT		4933139	0					
ANR	4933574	Argument	handle_sig		4933139	1					
ANR	4933575	Identifier	handle_sig		4933139	0					
ANR	4933576	ExpressionStatement	"signal ( SIGINT , handle_sig )"	463:1:11969:11997	4933139	11	True				
ANR	4933577	CallExpression	"signal ( SIGINT , handle_sig )"		4933139	0					
ANR	4933578	Callee	signal		4933139	0					
ANR	4933579	Identifier	signal		4933139	0					
ANR	4933580	ArgumentList	SIGINT		4933139	1					
ANR	4933581	Argument	SIGINT		4933139	0					
ANR	4933582	Identifier	SIGINT		4933139	0					
ANR	4933583	Argument	handle_sig		4933139	1					
ANR	4933584	Identifier	handle_sig		4933139	0					
ANR	4933585	IdentifierDeclStatement	int execEventCount = 0 ;	465:1:12001:12028	4933139	12	True				
ANR	4933586	IdentifierDecl	execEventCount = 0		4933139	0					
ANR	4933587	IdentifierDeclType	int		4933139	0					
ANR	4933588	Identifier	execEventCount		4933139	1					
ANR	4933589	AssignmentExpression	execEventCount = 0		4933139	2		=			
ANR	4933590	Identifier	execEventCount		4933139	0					
ANR	4933591	PrimaryExpression	0		4933139	1					
ANR	4933592	IdentifierDeclStatement	int termEventCount = 0 ;	466:1:12031:12058	4933139	13	True				
ANR	4933593	IdentifierDecl	termEventCount = 0		4933139	0					
ANR	4933594	IdentifierDeclType	int		4933139	0					
ANR	4933595	Identifier	termEventCount		4933139	1					
ANR	4933596	AssignmentExpression	termEventCount = 0		4933139	2		=			
ANR	4933597	Identifier	termEventCount		4933139	0					
ANR	4933598	PrimaryExpression	0		4933139	1					
ANR	4933599	IdentifierDeclStatement	bool done = ( opts . term == 0 ) ;	467:1:12061:12093	4933139	14	True				
ANR	4933600	IdentifierDecl	done = ( opts . term == 0 )		4933139	0					
ANR	4933601	IdentifierDeclType	bool		4933139	0					
ANR	4933602	Identifier	done		4933139	1					
ANR	4933603	AssignmentExpression	done = ( opts . term == 0 )		4933139	2		=			
ANR	4933604	Identifier	done		4933139	0					
ANR	4933605	EqualityExpression	opts . term == 0		4933139	1		==			
ANR	4933606	MemberAccess	opts . term		4933139	0					
ANR	4933607	Identifier	opts		4933139	0					
ANR	4933608	Identifier	term		4933139	1					
ANR	4933609	PrimaryExpression	0		4933139	1					
ANR	4933610	IdentifierDeclStatement	bool missedLast = false ;	468:1:12096:12123	4933139	15	True				
ANR	4933611	IdentifierDecl	missedLast = false		4933139	0					
ANR	4933612	IdentifierDeclType	bool		4933139	0					
ANR	4933613	Identifier	missedLast		4933139	1					
ANR	4933614	AssignmentExpression	missedLast = false		4933139	2		=			
ANR	4933615	Identifier	false		4933139	0					
ANR	4933616	Identifier	false		4933139	1					
ANR	4933617	IdentifierDeclStatement	int prevCluster = 999 ;	469:1:12126:12150	4933139	16	True				
ANR	4933618	IdentifierDecl	prevCluster = 999		4933139	0					
ANR	4933619	IdentifierDeclType	int		4933139	0					
ANR	4933620	Identifier	prevCluster		4933139	1					
ANR	4933621	AssignmentExpression	prevCluster = 999		4933139	2		=			
ANR	4933622	Identifier	prevCluster		4933139	0					
ANR	4933623	PrimaryExpression	999		4933139	1					
ANR	4933624	IdentifierDeclStatement	int prevProc = 999 ;	470:1:12153:12174	4933139	17	True				
ANR	4933625	IdentifierDecl	prevProc = 999		4933139	0					
ANR	4933626	IdentifierDeclType	int		4933139	0					
ANR	4933627	Identifier	prevProc		4933139	1					
ANR	4933628	AssignmentExpression	prevProc = 999		4933139	2		=			
ANR	4933629	Identifier	prevProc		4933139	0					
ANR	4933630	PrimaryExpression	999		4933139	1					
ANR	4933631	IdentifierDeclStatement	int prevSubproc = 999 ;	471:1:12177:12201	4933139	18	True				
ANR	4933632	IdentifierDecl	prevSubproc = 999		4933139	0					
ANR	4933633	IdentifierDeclType	int		4933139	0					
ANR	4933634	Identifier	prevSubproc		4933139	1					
ANR	4933635	AssignmentExpression	prevSubproc = 999		4933139	2		=			
ANR	4933636	Identifier	prevSubproc		4933139	0					
ANR	4933637	PrimaryExpression	999		4933139	1					
ANR	4933638	IdentifierDeclStatement	ReadUserLog :: FileStatus prevFstatus = ( ReadUserLog :: FileStatus ) 999 ;	472:1:12204:12271	4933139	19	True				
ANR	4933639	IdentifierDecl	prevFstatus = ( ReadUserLog :: FileStatus ) 999		4933139	0					
ANR	4933640	IdentifierDeclType	ReadUserLog :: FileStatus		4933139	0					
ANR	4933641	Identifier	prevFstatus		4933139	1					
ANR	4933642	AssignmentExpression	prevFstatus = ( ReadUserLog :: FileStatus ) 999		4933139	2		=			
ANR	4933643	Identifier	prevFstatus		4933139	0					
ANR	4933644	CastExpression	( ReadUserLog :: FileStatus ) 999		4933139	1					
ANR	4933645	CastTarget	ReadUserLog :: FileStatus		4933139	0					
ANR	4933646	PrimaryExpression	999		4933139	1					
ANR	4933647	WhileStatement	while ( ! done && ! global_done )		4933139	20					
ANR	4933648	Condition	! done && ! global_done	474:9:12283:12303	4933139	0	True				
ANR	4933649	AndExpression	! done && ! global_done		4933139	0		&&			
ANR	4933650	UnaryOperationExpression	! done		4933139	0					
ANR	4933651	UnaryOperator	!		4933139	0					
ANR	4933652	Identifier	done		4933139	1					
ANR	4933653	UnaryOperationExpression	! global_done		4933139	1					
ANR	4933654	UnaryOperator	!		4933139	0					
ANR	4933655	Identifier	global_done		4933139	1					
ANR	4933656	CompoundStatement		138:2:3428:3453	4933139	1					
ANR	4933657	IdentifierDeclStatement	bool empty = false ;	475:2:12311:12329	4933139	0	True				
ANR	4933658	IdentifierDecl	empty = false		4933139	0					
ANR	4933659	IdentifierDeclType	bool		4933139	0					
ANR	4933660	Identifier	empty		4933139	1					
ANR	4933661	AssignmentExpression	empty = false		4933139	2		=			
ANR	4933662	Identifier	false		4933139	0					
ANR	4933663	Identifier	false		4933139	1					
ANR	4933664	IfStatement	if ( opts . checkFileStatus )		4933139	1					
ANR	4933665	Condition	opts . checkFileStatus	476:7:12338:12357	4933139	0	True				
ANR	4933666	MemberAccess	opts . checkFileStatus		4933139	0					
ANR	4933667	Identifier	opts		4933139	0					
ANR	4933668	Identifier	checkFileStatus		4933139	1					
ANR	4933669	CompoundStatement		109:3:2739:2804	4933139	1					
ANR	4933670	IdentifierDeclStatement	ReadUserLog :: FileStatus fstatus = reader . CheckFileStatus ( empty ) ;	477:3:12366:12431	4933139	0	True				
ANR	4933671	IdentifierDecl	fstatus = reader . CheckFileStatus ( empty )		4933139	0					
ANR	4933672	IdentifierDeclType	ReadUserLog :: FileStatus		4933139	0					
ANR	4933673	Identifier	fstatus		4933139	1					
ANR	4933674	AssignmentExpression	fstatus = reader . CheckFileStatus ( empty )		4933139	2		=			
ANR	4933675	Identifier	fstatus		4933139	0					
ANR	4933676	CallExpression	reader . CheckFileStatus ( empty )		4933139	1					
ANR	4933677	Callee	reader . CheckFileStatus		4933139	0					
ANR	4933678	MemberAccess	reader . CheckFileStatus		4933139	0					
ANR	4933679	Identifier	reader		4933139	0					
ANR	4933680	Identifier	CheckFileStatus		4933139	1					
ANR	4933681	ArgumentList	empty		4933139	1					
ANR	4933682	Argument	empty		4933139	0					
ANR	4933683	Identifier	empty		4933139	0					
ANR	4933684	IfStatement	if ( fstatus != prevFstatus )		4933139	1					
ANR	4933685	Condition	fstatus != prevFstatus	478:8:12441:12462	4933139	0	True				
ANR	4933686	EqualityExpression	fstatus != prevFstatus		4933139	0		!=			
ANR	4933687	Identifier	fstatus		4933139	0					
ANR	4933688	Identifier	prevFstatus		4933139	1					
ANR	4933689	CompoundStatement		111:4:2845:2858	4933139	1					
ANR	4933690	IdentifierDeclStatement	const char * s ;	479:4:12472:12485	4933139	0	True				
ANR	4933691	IdentifierDecl	* s		4933139	0					
ANR	4933692	IdentifierDeclType	const char *		4933139	0					
ANR	4933693	Identifier	s		4933139	1					
ANR	4933694	SwitchStatement	switch ( fstatus )		4933139	1					
ANR	4933695	Condition	fstatus	480:12:12499:12505	4933139	0	True				
ANR	4933696	Identifier	fstatus		4933139	0					
ANR	4933697	CompoundStatement		112:22:2882:2882	4933139	1					
ANR	4933698	Label	case ReadUserLog :: LOG_STATUS_ERROR :	481:4:12515:12549	4933139	0	True				
ANR	4933699	Identifier	ReadUserLog :: LOG_STATUS_ERROR		4933139	0					
ANR	4933700	ExpressionStatement	"s = ""ERROR"""	482:5:12556:12567	4933139	1	True				
ANR	4933701	AssignmentExpression	"s = ""ERROR"""		4933139	0		=			
ANR	4933702	Identifier	s		4933139	0					
ANR	4933703	PrimaryExpression	"""ERROR"""		4933139	1					
ANR	4933704	BreakStatement	break ;	483:5:12574:12579	4933139	2	True				
ANR	4933705	Label	case ReadUserLog :: LOG_STATUS_NOCHANGE :	484:4:12585:12622	4933139	3	True				
ANR	4933706	Identifier	ReadUserLog :: LOG_STATUS_NOCHANGE		4933139	0					
ANR	4933707	ExpressionStatement	"s = ""NOCHANGE"""	485:5:12629:12643	4933139	4	True				
ANR	4933708	AssignmentExpression	"s = ""NOCHANGE"""		4933139	0		=			
ANR	4933709	Identifier	s		4933139	0					
ANR	4933710	PrimaryExpression	"""NOCHANGE"""		4933139	1					
ANR	4933711	BreakStatement	break ;	486:5:12650:12655	4933139	5	True				
ANR	4933712	Label	case ReadUserLog :: LOG_STATUS_GROWN :	487:4:12661:12695	4933139	6	True				
ANR	4933713	Identifier	ReadUserLog :: LOG_STATUS_GROWN		4933139	0					
ANR	4933714	ExpressionStatement	"s = ""GROWN"""	488:5:12702:12713	4933139	7	True				
ANR	4933715	AssignmentExpression	"s = ""GROWN"""		4933139	0		=			
ANR	4933716	Identifier	s		4933139	0					
ANR	4933717	PrimaryExpression	"""GROWN"""		4933139	1					
ANR	4933718	BreakStatement	break ;	489:5:12720:12725	4933139	8	True				
ANR	4933719	Label	case ReadUserLog :: LOG_STATUS_SHRUNK :	490:4:12731:12766	4933139	9	True				
ANR	4933720	Identifier	ReadUserLog :: LOG_STATUS_SHRUNK		4933139	0					
ANR	4933721	ExpressionStatement	"s = ""SHRUNK"""	491:5:12773:12785	4933139	10	True				
ANR	4933722	AssignmentExpression	"s = ""SHRUNK"""		4933139	0		=			
ANR	4933723	Identifier	s		4933139	0					
ANR	4933724	PrimaryExpression	"""SHRUNK"""		4933139	1					
ANR	4933725	BreakStatement	break ;	492:5:12792:12797	4933139	11	True				
ANR	4933726	Label	default :	493:4:12803:12810	4933139	12	True				
ANR	4933727	Identifier	default		4933139	0					
ANR	4933728	ExpressionStatement	"s = ""unknown"""	494:5:12817:12830	4933139	13	True				
ANR	4933729	AssignmentExpression	"s = ""unknown"""		4933139	0		=			
ANR	4933730	Identifier	s		4933139	0					
ANR	4933731	PrimaryExpression	"""unknown"""		4933139	1					
ANR	4933732	BreakStatement	break ;	495:5:12837:12842	4933139	14	True				
ANR	4933733	IfStatement	if ( opts . verbosity >= VERB_INFO )		4933139	2					
ANR	4933734	Condition	opts . verbosity >= VERB_INFO	497:9:12859:12885	4933139	0	True				
ANR	4933735	RelationalExpression	opts . verbosity >= VERB_INFO		4933139	0		>=			
ANR	4933736	MemberAccess	opts . verbosity		4933139	0					
ANR	4933737	Identifier	opts		4933139	0					
ANR	4933738	Identifier	verbosity		4933139	1					
ANR	4933739	Identifier	VERB_INFO		4933139	1					
ANR	4933740	CompoundStatement		129:39:3262:3262	4933139	1					
ANR	4933741	ExpressionStatement	"printf ( ""New status: %d/%s%s\\n"" , ( int ) fstatus , s , empty ? "" [empty]"" : """" )"	498:5:12896:12979	4933139	0	True				
ANR	4933742	CallExpression	"printf ( ""New status: %d/%s%s\\n"" , ( int ) fstatus , s , empty ? "" [empty]"" : """" )"		4933139	0					
ANR	4933743	Callee	printf		4933139	0					
ANR	4933744	Identifier	printf		4933139	0					
ANR	4933745	ArgumentList	"""New status: %d/%s%s\\n"""		4933139	1					
ANR	4933746	Argument	"""New status: %d/%s%s\\n"""		4933139	0					
ANR	4933747	PrimaryExpression	"""New status: %d/%s%s\\n"""		4933139	0					
ANR	4933748	Argument	( int ) fstatus		4933139	1					
ANR	4933749	CastExpression	( int ) fstatus		4933139	0					
ANR	4933750	CastTarget	int		4933139	0					
ANR	4933751	Identifier	fstatus		4933139	1					
ANR	4933752	Argument	s		4933139	2					
ANR	4933753	Identifier	s		4933139	0					
ANR	4933754	Argument	"empty ? "" [empty]"" : """""		4933139	3					
ANR	4933755	ConditionalExpression	"empty ? "" [empty]"" : """""		4933139	0					
ANR	4933756	Condition	empty		4933139	0					
ANR	4933757	Identifier	empty		4933139	0					
ANR	4933758	PrimaryExpression	""" [empty]"""		4933139	1					
ANR	4933759	PrimaryExpression	""""""		4933139	2					
ANR	4933760	ExpressionStatement	prevFstatus = fstatus	501:4:12991:13012	4933139	3	True				
ANR	4933761	AssignmentExpression	prevFstatus = fstatus		4933139	0		=			
ANR	4933762	Identifier	prevFstatus		4933139	0					
ANR	4933763	Identifier	fstatus		4933139	1					
ANR	4933764	IdentifierDeclStatement	ULogEvent * event = NULL ;	505:2:13026:13051	4933139	2	True				
ANR	4933765	IdentifierDecl	* event = NULL		4933139	0					
ANR	4933766	IdentifierDeclType	ULogEvent *		4933139	0					
ANR	4933767	Identifier	event		4933139	1					
ANR	4933768	AssignmentExpression	* event = NULL		4933139	2		=			
ANR	4933769	Identifier	NULL		4933139	0					
ANR	4933770	Identifier	NULL		4933139	1					
ANR	4933771	IdentifierDeclStatement	ULogEventOutcome outcome ;	506:2:13055:13080	4933139	3	True				
ANR	4933772	IdentifierDecl	outcome		4933139	0					
ANR	4933773	IdentifierDeclType	ULogEventOutcome		4933139	0					
ANR	4933774	Identifier	outcome		4933139	1					
ANR	4933775	IfStatement	if ( empty )		4933139	4					
ANR	4933776	Condition	empty	507:7:13089:13093	4933139	0	True				
ANR	4933777	Identifier	empty		4933139	0					
ANR	4933778	CompoundStatement		139:15:3470:3470	4933139	1					
ANR	4933779	ExpressionStatement	outcome = ULOG_NO_EVENT	508:3:13102:13125	4933139	0	True				
ANR	4933780	AssignmentExpression	outcome = ULOG_NO_EVENT		4933139	0		=			
ANR	4933781	Identifier	outcome		4933139	0					
ANR	4933782	Identifier	ULOG_NO_EVENT		4933139	1					
ANR	4933783	ElseStatement	else		4933139	0					
ANR	4933784	CompoundStatement		142:7:3511:3511	4933139	0					
ANR	4933785	ExpressionStatement	outcome = reader . readEvent ( event )	511:3:13143:13176	4933139	0	True				
ANR	4933786	AssignmentExpression	outcome = reader . readEvent ( event )		4933139	0		=			
ANR	4933787	Identifier	outcome		4933139	0					
ANR	4933788	CallExpression	reader . readEvent ( event )		4933139	1					
ANR	4933789	Callee	reader . readEvent		4933139	0					
ANR	4933790	MemberAccess	reader . readEvent		4933139	0					
ANR	4933791	Identifier	reader		4933139	0					
ANR	4933792	Identifier	readEvent		4933139	1					
ANR	4933793	ArgumentList	event		4933139	1					
ANR	4933794	Argument	event		4933139	0					
ANR	4933795	Identifier	event		4933139	0					
ANR	4933796	IfStatement	if ( outcome == ULOG_OK )		4933139	5					
ANR	4933797	Condition	outcome == ULOG_OK	514:7:13190:13207	4933139	0	True				
ANR	4933798	EqualityExpression	outcome == ULOG_OK		4933139	0		==			
ANR	4933799	Identifier	outcome		4933139	0					
ANR	4933800	Identifier	ULOG_OK		4933139	1					
ANR	4933801	CompoundStatement		146:28:3584:3584	4933139	1					
ANR	4933802	IfStatement	if ( opts . verbosity >= VERB_ALL )		4933139	0					
ANR	4933803	Condition	opts . verbosity >= VERB_ALL	515:8:13221:13246	4933139	0	True				
ANR	4933804	RelationalExpression	opts . verbosity >= VERB_ALL		4933139	0		>=			
ANR	4933805	MemberAccess	opts . verbosity		4933139	0					
ANR	4933806	Identifier	opts		4933139	0					
ANR	4933807	Identifier	verbosity		4933139	1					
ANR	4933808	Identifier	VERB_ALL		4933139	1					
ANR	4933809	CompoundStatement		147:37:3623:3623	4933139	1					
ANR	4933810	ExpressionStatement	"printf ( ""Got an event from %d.%d.%d @ %s"" , event -> cluster , event -> proc , event -> subproc , timestr ( event -> eventTime ) )"	516:4:13256:13383	4933139	0	True				
ANR	4933811	CallExpression	"printf ( ""Got an event from %d.%d.%d @ %s"" , event -> cluster , event -> proc , event -> subproc , timestr ( event -> eventTime ) )"		4933139	0					
ANR	4933812	Callee	printf		4933139	0					
ANR	4933813	Identifier	printf		4933139	0					
ANR	4933814	ArgumentList	"""Got an event from %d.%d.%d @ %s"""		4933139	1					
ANR	4933815	Argument	"""Got an event from %d.%d.%d @ %s"""		4933139	0					
ANR	4933816	PrimaryExpression	"""Got an event from %d.%d.%d @ %s"""		4933139	0					
ANR	4933817	Argument	event -> cluster		4933139	1					
ANR	4933818	PtrMemberAccess	event -> cluster		4933139	0					
ANR	4933819	Identifier	event		4933139	0					
ANR	4933820	Identifier	cluster		4933139	1					
ANR	4933821	Argument	event -> proc		4933139	2					
ANR	4933822	PtrMemberAccess	event -> proc		4933139	0					
ANR	4933823	Identifier	event		4933139	0					
ANR	4933824	Identifier	proc		4933139	1					
ANR	4933825	Argument	event -> subproc		4933139	3					
ANR	4933826	PtrMemberAccess	event -> subproc		4933139	0					
ANR	4933827	Identifier	event		4933139	0					
ANR	4933828	Identifier	subproc		4933139	1					
ANR	4933829	Argument	timestr ( event -> eventTime )		4933139	4					
ANR	4933830	CallExpression	timestr ( event -> eventTime )		4933139	0					
ANR	4933831	Callee	timestr		4933139	0					
ANR	4933832	Identifier	timestr		4933139	0					
ANR	4933833	ArgumentList	event -> eventTime		4933139	1					
ANR	4933834	Argument	event -> eventTime		4933139	0					
ANR	4933835	PtrMemberAccess	event -> eventTime		4933139	0					
ANR	4933836	Identifier	event		4933139	0					
ANR	4933837	Identifier	eventTime		4933139	1					
ANR	4933838	IfStatement	if ( opts . missedCheck )		4933139	1					
ANR	4933839	Condition	opts . missedCheck	521:7:13398:13413	4933139	0	True				
ANR	4933840	MemberAccess	opts . missedCheck		4933139	0					
ANR	4933841	Identifier	opts		4933139	0					
ANR	4933842	Identifier	missedCheck		4933139	1					
ANR	4933843	CompoundStatement		155:4:3856:3953	4933139	1					
ANR	4933844	IdentifierDeclStatement	bool isPrevCluster = ( prevCluster == event -> cluster ) ;	522:4:13423:13477	4933139	0	True				
ANR	4933845	IdentifierDecl	isPrevCluster = ( prevCluster == event -> cluster )		4933139	0					
ANR	4933846	IdentifierDeclType	bool		4933139	0					
ANR	4933847	Identifier	isPrevCluster		4933139	1					
ANR	4933848	AssignmentExpression	isPrevCluster = ( prevCluster == event -> cluster )		4933139	2		=			
ANR	4933849	Identifier	isPrevCluster		4933139	0					
ANR	4933850	EqualityExpression	prevCluster == event -> cluster		4933139	1		==			
ANR	4933851	Identifier	prevCluster		4933139	0					
ANR	4933852	PtrMemberAccess	event -> cluster		4933139	1					
ANR	4933853	Identifier	event		4933139	0					
ANR	4933854	Identifier	cluster		4933139	1					
ANR	4933855	IdentifierDeclStatement	bool isPrevProc = ( ( prevProc == event -> proc ) || ( prevProc + 1 == event -> proc ) ) ;	523:4:13483:13580	4933139	1	True				
ANR	4933856	IdentifierDecl	isPrevProc = ( ( prevProc == event -> proc ) || ( prevProc + 1 == event -> proc ) )		4933139	0					
ANR	4933857	IdentifierDeclType	bool		4933139	0					
ANR	4933858	Identifier	isPrevProc		4933139	1					
ANR	4933859	AssignmentExpression	isPrevProc = ( ( prevProc == event -> proc ) || ( prevProc + 1 == event -> proc ) )		4933139	2		=			
ANR	4933860	Identifier	isPrevProc		4933139	0					
ANR	4933861	OrExpression	( prevProc == event -> proc ) || ( prevProc + 1 == event -> proc )		4933139	1		||			
ANR	4933862	EqualityExpression	prevProc == event -> proc		4933139	0		==			
ANR	4933863	Identifier	prevProc		4933139	0					
ANR	4933864	PtrMemberAccess	event -> proc		4933139	1					
ANR	4933865	Identifier	event		4933139	0					
ANR	4933866	Identifier	proc		4933139	1					
ANR	4933867	EqualityExpression	prevProc + 1 == event -> proc		4933139	1		==			
ANR	4933868	AdditiveExpression	prevProc + 1		4933139	0		+			
ANR	4933869	Identifier	prevProc		4933139	0					
ANR	4933870	PrimaryExpression	1		4933139	1					
ANR	4933871	PtrMemberAccess	event -> proc		4933139	1					
ANR	4933872	Identifier	event		4933139	0					
ANR	4933873	Identifier	proc		4933139	1					
ANR	4933874	IfStatement	if ( missedLast && isPrevCluster && isPrevProc )		4933139	2					
ANR	4933875	Condition	missedLast && isPrevCluster && isPrevProc	525:9:13591:13631	4933139	0	True				
ANR	4933876	AndExpression	missedLast && isPrevCluster && isPrevProc		4933139	0		&&			
ANR	4933877	Identifier	missedLast		4933139	0					
ANR	4933878	AndExpression	isPrevCluster && isPrevProc		4933139	1		&&			
ANR	4933879	Identifier	isPrevCluster		4933139	0					
ANR	4933880	Identifier	isPrevProc		4933139	1					
ANR	4933881	CompoundStatement		157:53:4008:4008	4933139	1					
ANR	4933882	ExpressionStatement	"printf ( ""\\n** Bad missed **\\n"" )"	526:5:13642:13674	4933139	0	True				
ANR	4933883	CallExpression	"printf ( ""\\n** Bad missed **\\n"" )"		4933139	0					
ANR	4933884	Callee	printf		4933139	0					
ANR	4933885	Identifier	printf		4933139	0					
ANR	4933886	ArgumentList	"""\\n** Bad missed **\\n"""		4933139	1					
ANR	4933887	Argument	"""\\n** Bad missed **\\n"""		4933139	0					
ANR	4933888	PrimaryExpression	"""\\n** Bad missed **\\n"""		4933139	0					
ANR	4933889	ExpressionStatement	global_done = true	527:5:13681:13699	4933139	1	True				
ANR	4933890	AssignmentExpression	global_done = true		4933139	0		=			
ANR	4933891	Identifier	global_done		4933139	0					
ANR	4933892	Identifier	true		4933139	1					
ANR	4933893	ElseStatement	else		4933139	0					
ANR	4933894	IfStatement	if ( ( ! missedLast ) && isPrevCluster && ( ! isPrevProc ) )		4933139	0					
ANR	4933895	Condition	( ! missedLast ) && isPrevCluster && ( ! isPrevProc )	529:14:13721:13767	4933139	0	True				
ANR	4933896	AndExpression	( ! missedLast ) && isPrevCluster && ( ! isPrevProc )		4933139	0		&&			
ANR	4933897	UnaryOperationExpression	! missedLast		4933139	0					
ANR	4933898	UnaryOperator	!		4933139	0					
ANR	4933899	Identifier	missedLast		4933139	1					
ANR	4933900	AndExpression	isPrevCluster && ( ! isPrevProc )		4933139	1		&&			
ANR	4933901	Identifier	isPrevCluster		4933139	0					
ANR	4933902	UnaryOperationExpression	! isPrevProc		4933139	1					
ANR	4933903	UnaryOperator	!		4933139	0					
ANR	4933904	Identifier	isPrevProc		4933139	1					
ANR	4933905	CompoundStatement		161:64:4144:4144	4933139	1					
ANR	4933906	ExpressionStatement	"printf ( ""\\n** Undetected missed event **\\n"" )"	530:5:13778:13823	4933139	0	True				
ANR	4933907	CallExpression	"printf ( ""\\n** Undetected missed event **\\n"" )"		4933139	0					
ANR	4933908	Callee	printf		4933139	0					
ANR	4933909	Identifier	printf		4933139	0					
ANR	4933910	ArgumentList	"""\\n** Undetected missed event **\\n"""		4933139	1					
ANR	4933911	Argument	"""\\n** Undetected missed event **\\n"""		4933139	0					
ANR	4933912	PrimaryExpression	"""\\n** Undetected missed event **\\n"""		4933139	0					
ANR	4933913	ExpressionStatement	global_done = true	531:5:13830:13848	4933139	1	True				
ANR	4933914	AssignmentExpression	global_done = true		4933139	0		=			
ANR	4933915	Identifier	global_done		4933139	0					
ANR	4933916	Identifier	true		4933139	1					
ANR	4933917	ExpressionStatement	prevCluster = event -> cluster	535:3:13865:13893	4933139	2	True				
ANR	4933918	AssignmentExpression	prevCluster = event -> cluster		4933139	0		=			
ANR	4933919	Identifier	prevCluster		4933139	0					
ANR	4933920	PtrMemberAccess	event -> cluster		4933139	1					
ANR	4933921	Identifier	event		4933139	0					
ANR	4933922	Identifier	cluster		4933139	1					
ANR	4933923	ExpressionStatement	prevProc = event -> proc	536:3:13898:13920	4933139	3	True				
ANR	4933924	AssignmentExpression	prevProc = event -> proc		4933139	0		=			
ANR	4933925	Identifier	prevProc		4933139	0					
ANR	4933926	PtrMemberAccess	event -> proc		4933139	1					
ANR	4933927	Identifier	event		4933139	0					
ANR	4933928	Identifier	proc		4933139	1					
ANR	4933929	ExpressionStatement	prevSubproc = event -> subproc	537:3:13925:13953	4933139	4	True				
ANR	4933930	AssignmentExpression	prevSubproc = event -> subproc		4933139	0		=			
ANR	4933931	Identifier	prevSubproc		4933139	0					
ANR	4933932	PtrMemberAccess	event -> subproc		4933139	1					
ANR	4933933	Identifier	event		4933139	0					
ANR	4933934	Identifier	subproc		4933139	1					
ANR	4933935	IfStatement	if ( missedLast )		4933139	5					
ANR	4933936	Condition	missedLast	539:8:13964:13973	4933139	0	True				
ANR	4933937	Identifier	missedLast		4933139	0					
ANR	4933938	CompoundStatement		179:4:4601:4621	4933139	1					
ANR	4933939	IdentifierDeclStatement	ReadUserLogStateAccess paccess ( state ) ;	540:4:13983:14023	4933139	0	True				
ANR	4933940	IdentifierDecl	paccess ( state )		4933139	0					
ANR	4933941	IdentifierDeclType	ReadUserLogStateAccess		4933139	0					
ANR	4933942	Identifier	paccess		4933139	1					
ANR	4933943	Identifier	state		4933139	2					
ANR	4933944	IdentifierDeclStatement	ReadUserLog :: FileState nstate ;	541:4:14029:14059	4933139	1	True				
ANR	4933945	IdentifierDecl	nstate		4933139	0					
ANR	4933946	IdentifierDeclType	ReadUserLog :: FileState		4933139	0					
ANR	4933947	Identifier	nstate		4933139	1					
ANR	4933948	ExpressionStatement	ReadUserLog :: InitFileState ( nstate )	542:4:14065:14101	4933139	2	True				
ANR	4933949	CallExpression	ReadUserLog :: InitFileState ( nstate )		4933139	0					
ANR	4933950	Callee	ReadUserLog :: InitFileState		4933139	0					
ANR	4933951	Identifier	ReadUserLog :: InitFileState		4933139	0					
ANR	4933952	ArgumentList	nstate		4933139	1					
ANR	4933953	Argument	nstate		4933139	0					
ANR	4933954	Identifier	nstate		4933139	0					
ANR	4933955	IdentifierDeclStatement	ReadUserLogStateAccess naccess ( nstate ) ;	543:4:14107:14148	4933139	3	True				
ANR	4933956	IdentifierDecl	naccess ( nstate )		4933139	0					
ANR	4933957	IdentifierDeclType	ReadUserLogStateAccess		4933139	0					
ANR	4933958	Identifier	naccess		4933139	1					
ANR	4933959	Identifier	nstate		4933139	2					
ANR	4933960	IdentifierDeclStatement	"long diff_pos , diff_enum ;"	545:4:14155:14184	4933139	4	True				
ANR	4933961	IdentifierDecl	diff_pos		4933139	0					
ANR	4933962	IdentifierDeclType	long		4933139	0					
ANR	4933963	Identifier	diff_pos		4933139	1					
ANR	4933964	IdentifierDecl	diff_enum		4933139	1					
ANR	4933965	IdentifierDeclType	long		4933139	0					
ANR	4933966	Identifier	diff_enum		4933139	1					
ANR	4933967	IdentifierDeclStatement	"char puniq [ 256 ] , nuniq [ 256 ] ;"	546:4:14190:14222	4933139	5	True				
ANR	4933968	IdentifierDecl	puniq [ 256 ]		4933139	0					
ANR	4933969	IdentifierDeclType	char [ 256 ]		4933139	0					
ANR	4933970	Identifier	puniq		4933139	1					
ANR	4933971	PrimaryExpression	256		4933139	2					
ANR	4933972	IdentifierDecl	nuniq [ 256 ]		4933139	1					
ANR	4933973	IdentifierDeclType	char [ 256 ]		4933139	0					
ANR	4933974	Identifier	nuniq		4933139	1					
ANR	4933975	PrimaryExpression	256		4933139	2					
ANR	4933976	IdentifierDeclStatement	"int pseq , nseq ;"	547:4:14228:14248	4933139	6	True				
ANR	4933977	IdentifierDecl	pseq		4933139	0					
ANR	4933978	IdentifierDeclType	int		4933139	0					
ANR	4933979	Identifier	pseq		4933139	1					
ANR	4933980	IdentifierDecl	nseq		4933139	1					
ANR	4933981	IdentifierDeclType	int		4933139	0					
ANR	4933982	Identifier	nseq		4933139	1					
ANR	4933983	ExpressionStatement	"paccess . getLogPositionDiff ( paccess , diff_pos )"	549:4:14255:14302	4933139	7	True				
ANR	4933984	CallExpression	"paccess . getLogPositionDiff ( paccess , diff_pos )"		4933139	0					
ANR	4933985	Callee	paccess . getLogPositionDiff		4933139	0					
ANR	4933986	MemberAccess	paccess . getLogPositionDiff		4933139	0					
ANR	4933987	Identifier	paccess		4933139	0					
ANR	4933988	Identifier	getLogPositionDiff		4933139	1					
ANR	4933989	ArgumentList	paccess		4933139	1					
ANR	4933990	Argument	paccess		4933139	0					
ANR	4933991	Identifier	paccess		4933139	0					
ANR	4933992	Argument	diff_pos		4933139	1					
ANR	4933993	Identifier	diff_pos		4933139	0					
ANR	4933994	ExpressionStatement	"paccess . getEventNumberDiff ( paccess , diff_enum )"	550:4:14308:14356	4933139	8	True				
ANR	4933995	CallExpression	"paccess . getEventNumberDiff ( paccess , diff_enum )"		4933139	0					
ANR	4933996	Callee	paccess . getEventNumberDiff		4933139	0					
ANR	4933997	MemberAccess	paccess . getEventNumberDiff		4933139	0					
ANR	4933998	Identifier	paccess		4933139	0					
ANR	4933999	Identifier	getEventNumberDiff		4933139	1					
ANR	4934000	ArgumentList	paccess		4933139	1					
ANR	4934001	Argument	paccess		4933139	0					
ANR	4934002	Identifier	paccess		4933139	0					
ANR	4934003	Argument	diff_enum		4933139	1					
ANR	4934004	Identifier	diff_enum		4933139	0					
ANR	4934005	ExpressionStatement	"paccess . getUniqId ( puniq , sizeof ( puniq ) )"	551:4:14362:14403	4933139	9	True				
ANR	4934006	CallExpression	"paccess . getUniqId ( puniq , sizeof ( puniq ) )"		4933139	0					
ANR	4934007	Callee	paccess . getUniqId		4933139	0					
ANR	4934008	MemberAccess	paccess . getUniqId		4933139	0					
ANR	4934009	Identifier	paccess		4933139	0					
ANR	4934010	Identifier	getUniqId		4933139	1					
ANR	4934011	ArgumentList	puniq		4933139	1					
ANR	4934012	Argument	puniq		4933139	0					
ANR	4934013	Identifier	puniq		4933139	0					
ANR	4934014	Argument	sizeof ( puniq )		4933139	1					
ANR	4934015	SizeofExpression	sizeof ( puniq )		4933139	0					
ANR	4934016	Sizeof	sizeof		4933139	0					
ANR	4934017	SizeofOperand	puniq		4933139	1					
ANR	4934018	ExpressionStatement	paccess . getSequenceNumber ( pseq )	552:4:14409:14442	4933139	10	True				
ANR	4934019	CallExpression	paccess . getSequenceNumber ( pseq )		4933139	0					
ANR	4934020	Callee	paccess . getSequenceNumber		4933139	0					
ANR	4934021	MemberAccess	paccess . getSequenceNumber		4933139	0					
ANR	4934022	Identifier	paccess		4933139	0					
ANR	4934023	Identifier	getSequenceNumber		4933139	1					
ANR	4934024	ArgumentList	pseq		4933139	1					
ANR	4934025	Argument	pseq		4933139	0					
ANR	4934026	Identifier	pseq		4933139	0					
ANR	4934027	ExpressionStatement	"naccess . getUniqId ( nuniq , sizeof ( nuniq ) )"	553:4:14448:14489	4933139	11	True				
ANR	4934028	CallExpression	"naccess . getUniqId ( nuniq , sizeof ( nuniq ) )"		4933139	0					
ANR	4934029	Callee	naccess . getUniqId		4933139	0					
ANR	4934030	MemberAccess	naccess . getUniqId		4933139	0					
ANR	4934031	Identifier	naccess		4933139	0					
ANR	4934032	Identifier	getUniqId		4933139	1					
ANR	4934033	ArgumentList	nuniq		4933139	1					
ANR	4934034	Argument	nuniq		4933139	0					
ANR	4934035	Identifier	nuniq		4933139	0					
ANR	4934036	Argument	sizeof ( nuniq )		4933139	1					
ANR	4934037	SizeofExpression	sizeof ( nuniq )		4933139	0					
ANR	4934038	Sizeof	sizeof		4933139	0					
ANR	4934039	SizeofOperand	nuniq		4933139	1					
ANR	4934040	ExpressionStatement	paccess . getSequenceNumber ( nseq )	554:4:14495:14528	4933139	12	True				
ANR	4934041	CallExpression	paccess . getSequenceNumber ( nseq )		4933139	0					
ANR	4934042	Callee	paccess . getSequenceNumber		4933139	0					
ANR	4934043	MemberAccess	paccess . getSequenceNumber		4933139	0					
ANR	4934044	Identifier	paccess		4933139	0					
ANR	4934045	Identifier	getSequenceNumber		4933139	1					
ANR	4934046	ArgumentList	nseq		4933139	1					
ANR	4934047	Argument	nseq		4933139	0					
ANR	4934048	Identifier	nseq		4933139	0					
ANR	4934049	Statement	printf	555:4:14534:14539	4933139	13	True				
ANR	4934050	Statement	(	555:10:14540:14540	4933139	14	True				
ANR	4934051	Statement	"""Missed: %ld bytes, %ld events\\n"""	555:12:14542:14574	4933139	15	True				
ANR	4934052	Statement	"""  Previous Uniq=%s, seq=%d\\n"""	556:6:14582:14611	4933139	16	True				
ANR	4934053	Statement	"""  Current  Uniq=%s, seq=%d\\n"""	557:6:14619:14648	4933139	17	True				
ANR	4934054	Statement	","	557:36:14649:14649	4933139	18	True				
ANR	4934055	Statement	diff_pos	558:6:14657:14664	4933139	19	True				
ANR	4934056	Statement	","	558:14:14665:14665	4933139	20	True				
ANR	4934057	Statement	diff_enum	558:16:14667:14675	4933139	21	True				
ANR	4934058	Statement	","	558:25:14676:14676	4933139	22	True				
ANR	4934059	Statement	puniq	559:6:14684:14688	4933139	23	True				
ANR	4934060	Statement	","	559:11:14689:14689	4933139	24	True				
ANR	4934061	Statement	pseq	559:13:14691:14694	4933139	25	True				
ANR	4934062	Statement	","	559:17:14695:14695	4933139	26	True				
ANR	4934063	Statement	nuniq	560:6:14703:14707	4933139	27	True				
ANR	4934064	Statement	","	560:11:14708:14708	4933139	28	True				
ANR	4934065	Statement	nseq	560:13:14710:14713	4933139	29	True				
ANR	4934066	Statement	)	560:18:14715:14715	4933139	30	True				
ANR	4934067	ExpressionStatement		560:19:14716:14716	4933139	31	True				
ANR	4934068	ExpressionStatement	numEvents ++	563:3:14727:14738	4933139	6	True				
ANR	4934069	PostIncDecOperationExpression	numEvents ++		4933139	0					
ANR	4934070	Identifier	numEvents		4933139	0					
ANR	4934071	IncDec	++		4933139	1					
ANR	4934072	ExpressionStatement	totalEvents ++	564:3:14743:14756	4933139	7	True				
ANR	4934073	PostIncDecOperationExpression	totalEvents ++		4933139	0					
ANR	4934074	Identifier	totalEvents		4933139	0					
ANR	4934075	IncDec	++		4933139	1					
ANR	4934076	SwitchStatement	switch ( event -> eventNumber )		4933139	8					
ANR	4934077	Condition	event -> eventNumber	565:12:14770:14787	4933139	0	True				
ANR	4934078	PtrMemberAccess	event -> eventNumber		4933139	0					
ANR	4934079	Identifier	event		4933139	0					
ANR	4934080	Identifier	eventNumber		4933139	1					
ANR	4934081	CompoundStatement		197:33:5164:5164	4933139	1					
ANR	4934082	Label	case ULOG_SUBMIT :	566:3:14796:14812	4933139	0	True				
ANR	4934083	Identifier	ULOG_SUBMIT		4933139	0					
ANR	4934084	IfStatement	if ( opts . verbosity >= VERB_ALL )		4933139	1					
ANR	4934085	Condition	opts . verbosity >= VERB_ALL	567:9:14823:14848	4933139	0	True				
ANR	4934086	RelationalExpression	opts . verbosity >= VERB_ALL		4933139	0		>=			
ANR	4934087	MemberAccess	opts . verbosity		4933139	0					
ANR	4934088	Identifier	opts		4933139	0					
ANR	4934089	Identifier	verbosity		4933139	1					
ANR	4934090	Identifier	VERB_ALL		4933139	1					
ANR	4934091	CompoundStatement		199:38:5225:5225	4933139	1					
ANR	4934092	ExpressionStatement	"printf ( "" (submit)\\n"" )"	568:5:14859:14880	4933139	0	True				
ANR	4934093	CallExpression	"printf ( "" (submit)\\n"" )"		4933139	0					
ANR	4934094	Callee	printf		4933139	0					
ANR	4934095	Identifier	printf		4933139	0					
ANR	4934096	ArgumentList	""" (submit)\\n"""		4933139	1					
ANR	4934097	Argument	""" (submit)\\n"""		4933139	0					
ANR	4934098	PrimaryExpression	""" (submit)\\n"""		4933139	0					
ANR	4934099	ExpressionStatement	missedLast = false	570:4:14892:14910	4933139	2	True				
ANR	4934100	AssignmentExpression	missedLast = false		4933139	0		=			
ANR	4934101	Identifier	missedLast		4933139	0					
ANR	4934102	Identifier	false		4933139	1					
ANR	4934103	BreakStatement	break ;	571:4:14916:14921	4933139	3	True				
ANR	4934104	Label	case ULOG_EXECUTE :	573:3:14927:14944	4933139	4	True				
ANR	4934105	Identifier	ULOG_EXECUTE		4933139	0					
ANR	4934106	IfStatement	if ( opts . verbosity >= VERB_ALL )		4933139	5					
ANR	4934107	Condition	opts . verbosity >= VERB_ALL	574:9:14955:14980	4933139	0	True				
ANR	4934108	RelationalExpression	opts . verbosity >= VERB_ALL		4933139	0		>=			
ANR	4934109	MemberAccess	opts . verbosity		4933139	0					
ANR	4934110	Identifier	opts		4933139	0					
ANR	4934111	Identifier	verbosity		4933139	1					
ANR	4934112	Identifier	VERB_ALL		4933139	1					
ANR	4934113	CompoundStatement		206:38:5357:5357	4933139	1					
ANR	4934114	ExpressionStatement	"printf ( "" (execute)\\n"" )"	575:5:14991:15013	4933139	0	True				
ANR	4934115	CallExpression	"printf ( "" (execute)\\n"" )"		4933139	0					
ANR	4934116	Callee	printf		4933139	0					
ANR	4934117	Identifier	printf		4933139	0					
ANR	4934118	ArgumentList	""" (execute)\\n"""		4933139	1					
ANR	4934119	Argument	""" (execute)\\n"""		4933139	0					
ANR	4934120	PrimaryExpression	""" (execute)\\n"""		4933139	0					
ANR	4934121	IfStatement	if ( opts . maxExec != 0 && ++ execEventCount > opts . maxExec )		4933139	6					
ANR	4934122	Condition	opts . maxExec != 0 && ++ execEventCount > opts . maxExec	577:9:15030:15087	4933139	0	True				
ANR	4934123	AndExpression	opts . maxExec != 0 && ++ execEventCount > opts . maxExec		4933139	0		&&			
ANR	4934124	EqualityExpression	opts . maxExec != 0		4933139	0		!=			
ANR	4934125	MemberAccess	opts . maxExec		4933139	0					
ANR	4934126	Identifier	opts		4933139	0					
ANR	4934127	Identifier	maxExec		4933139	1					
ANR	4934128	PrimaryExpression	0		4933139	1					
ANR	4934129	RelationalExpression	++ execEventCount > opts . maxExec		4933139	1		>			
ANR	4934130	UnaryExpression	++ execEventCount		4933139	0					
ANR	4934131	IncDec	++		4933139	0					
ANR	4934132	Identifier	execEventCount		4933139	1					
ANR	4934133	MemberAccess	opts . maxExec		4933139	1					
ANR	4934134	Identifier	opts		4933139	0					
ANR	4934135	Identifier	maxExec		4933139	1					
ANR	4934136	CompoundStatement		210:40:5464:5464	4933139	1					
ANR	4934137	IfStatement	if ( opts . verbosity >= VERB_ERROR )		4933139	0					
ANR	4934138	Condition	opts . verbosity >= VERB_ERROR	579:10:15103:15130	4933139	0	True				
ANR	4934139	RelationalExpression	opts . verbosity >= VERB_ERROR		4933139	0		>=			
ANR	4934140	MemberAccess	opts . verbosity		4933139	0					
ANR	4934141	Identifier	opts		4933139	0					
ANR	4934142	Identifier	verbosity		4933139	1					
ANR	4934143	Identifier	VERB_ERROR		4933139	1					
ANR	4934144	CompoundStatement		211:41:5507:5507	4933139	1					
ANR	4934145	Statement	fprintf	580:6:15142:15148	4933139	0	True				
ANR	4934146	Statement	(	580:13:15149:15149	4933139	1	True				
ANR	4934147	Statement	stderr	580:14:15150:15155	4933139	2	True				
ANR	4934148	Statement	","	580:20:15156:15156	4933139	3	True				
ANR	4934149	Statement	"""Maximum number of execute """	580:22:15158:15185	4933139	4	True				
ANR	4934150	Statement	"""events (%d) exceeded\\n"""	581:8:15195:15218	4933139	5	True				
ANR	4934151	Statement	","	581:32:15219:15219	4933139	6	True				
ANR	4934152	Statement	opts	581:34:15221:15224	4933139	7	True				
ANR	4934153	Statement	.	581:38:15225:15225	4933139	8	True				
ANR	4934154	Statement	maxExec	581:39:15226:15232	4933139	9	True				
ANR	4934155	Statement	)	581:46:15233:15233	4933139	10	True				
ANR	4934156	ExpressionStatement		581:47:15234:15234	4933139	11	True				
ANR	4934157	ExpressionStatement	result = STATUS_ERROR	583:5:15248:15269	4933139	1	True				
ANR	4934158	AssignmentExpression	result = STATUS_ERROR		4933139	0		=			
ANR	4934159	Identifier	result		4933139	0					
ANR	4934160	Identifier	STATUS_ERROR		4933139	1					
ANR	4934161	ExpressionStatement	done = true	584:5:15276:15287	4933139	2	True				
ANR	4934162	AssignmentExpression	done = true		4933139	0		=			
ANR	4934163	Identifier	done		4933139	0					
ANR	4934164	Identifier	true		4933139	1					
ANR	4934165	ExpressionStatement	missedLast = false	586:4:15299:15317	4933139	7	True				
ANR	4934166	AssignmentExpression	missedLast = false		4933139	0		=			
ANR	4934167	Identifier	missedLast		4933139	0					
ANR	4934168	Identifier	false		4933139	1					
ANR	4934169	BreakStatement	break ;	587:4:15323:15328	4933139	8	True				
ANR	4934170	Label	case ULOG_JOB_TERMINATED :	589:3:15334:15358	4933139	9	True				
ANR	4934171	Identifier	ULOG_JOB_TERMINATED		4933139	0					
ANR	4934172	IfStatement	if ( opts . verbosity >= VERB_ALL )		4933139	10					
ANR	4934173	Condition	opts . verbosity >= VERB_ALL	590:9:15369:15394	4933139	0	True				
ANR	4934174	RelationalExpression	opts . verbosity >= VERB_ALL		4933139	0		>=			
ANR	4934175	MemberAccess	opts . verbosity		4933139	0					
ANR	4934176	Identifier	opts		4933139	0					
ANR	4934177	Identifier	verbosity		4933139	1					
ANR	4934178	Identifier	VERB_ALL		4933139	1					
ANR	4934179	CompoundStatement		222:38:5771:5771	4933139	1					
ANR	4934180	ExpressionStatement	"printf ( "" (terminated)\\n"" )"	591:5:15405:15430	4933139	0	True				
ANR	4934181	CallExpression	"printf ( "" (terminated)\\n"" )"		4933139	0					
ANR	4934182	Callee	printf		4933139	0					
ANR	4934183	Identifier	printf		4933139	0					
ANR	4934184	ArgumentList	""" (terminated)\\n"""		4933139	1					
ANR	4934185	Argument	""" (terminated)\\n"""		4933139	0					
ANR	4934186	PrimaryExpression	""" (terminated)\\n"""		4933139	0					
ANR	4934187	IfStatement	if ( ( opts . term > 0 ) && ( ++ termEventCount >= opts . term ) )		4933139	11					
ANR	4934188	Condition	( opts . term > 0 ) && ( ++ termEventCount >= opts . term )	593:9:15447:15496	4933139	0	True				
ANR	4934189	AndExpression	( opts . term > 0 ) && ( ++ termEventCount >= opts . term )		4933139	0		&&			
ANR	4934190	RelationalExpression	opts . term > 0		4933139	0		>			
ANR	4934191	MemberAccess	opts . term		4933139	0					
ANR	4934192	Identifier	opts		4933139	0					
ANR	4934193	Identifier	term		4933139	1					
ANR	4934194	PrimaryExpression	0		4933139	1					
ANR	4934195	RelationalExpression	++ termEventCount >= opts . term		4933139	1		>=			
ANR	4934196	UnaryExpression	++ termEventCount		4933139	0					
ANR	4934197	IncDec	++		4933139	0					
ANR	4934198	Identifier	termEventCount		4933139	1					
ANR	4934199	MemberAccess	opts . term		4933139	1					
ANR	4934200	Identifier	opts		4933139	0					
ANR	4934201	Identifier	term		4933139	1					
ANR	4934202	CompoundStatement		225:62:5873:5873	4933139	1					
ANR	4934203	IfStatement	if ( opts . verbosity >= VERB_ALL )		4933139	0					
ANR	4934204	Condition	opts . verbosity >= VERB_ALL	594:10:15512:15537	4933139	0	True				
ANR	4934205	RelationalExpression	opts . verbosity >= VERB_ALL		4933139	0		>=			
ANR	4934206	MemberAccess	opts . verbosity		4933139	0					
ANR	4934207	Identifier	opts		4933139	0					
ANR	4934208	Identifier	verbosity		4933139	1					
ANR	4934209	Identifier	VERB_ALL		4933139	1					
ANR	4934210	CompoundStatement		226:39:5914:5914	4933139	1					
ANR	4934211	ExpressionStatement	"printf ( ""Reached terminated event limit (%d); %s\\n"" , opts . term , ""exiting"" )"	595:6:15549:15632	4933139	0	True				
ANR	4934212	CallExpression	"printf ( ""Reached terminated event limit (%d); %s\\n"" , opts . term , ""exiting"" )"		4933139	0					
ANR	4934213	Callee	printf		4933139	0					
ANR	4934214	Identifier	printf		4933139	0					
ANR	4934215	ArgumentList	"""Reached terminated event limit (%d); %s\\n"""		4933139	1					
ANR	4934216	Argument	"""Reached terminated event limit (%d); %s\\n"""		4933139	0					
ANR	4934217	PrimaryExpression	"""Reached terminated event limit (%d); %s\\n"""		4933139	0					
ANR	4934218	Argument	opts . term		4933139	1					
ANR	4934219	MemberAccess	opts . term		4933139	0					
ANR	4934220	Identifier	opts		4933139	0					
ANR	4934221	Identifier	term		4933139	1					
ANR	4934222	Argument	"""exiting"""		4933139	2					
ANR	4934223	PrimaryExpression	"""exiting"""		4933139	0					
ANR	4934224	ExpressionStatement	done = true	598:5:15646:15657	4933139	1	True				
ANR	4934225	AssignmentExpression	done = true		4933139	0		=			
ANR	4934226	Identifier	done		4933139	0					
ANR	4934227	Identifier	true		4933139	1					
ANR	4934228	ExpressionStatement	missedLast = false	600:4:15669:15687	4933139	12	True				
ANR	4934229	AssignmentExpression	missedLast = false		4933139	0		=			
ANR	4934230	Identifier	missedLast		4933139	0					
ANR	4934231	Identifier	false		4933139	1					
ANR	4934232	BreakStatement	break ;	601:4:15693:15698	4933139	13	True				
ANR	4934233	Label	case ULOG_GENERIC :	603:3:15704:15721	4933139	14	True				
ANR	4934234	Identifier	ULOG_GENERIC		4933139	0					
ANR	4934235	CompoundStatement		236:3:6099:6099	4933139	15					
ANR	4934236	Statement	const	605:4:15732:15736	4933139	0	True				
ANR	4934237	Statement	GenericEvent	605:10:15738:15749	4933139	1	True				
ANR	4934238	Statement	*	605:23:15751:15751	4933139	2	True				
ANR	4934239	Statement	generic	605:24:15752:15758	4933139	3	True				
ANR	4934240	Statement	=	605:32:15760:15760	4933139	4	True				
ANR	4934241	Statement	dynamic_cast	606:5:15767:15778	4933139	5	True				
ANR	4934242	Statement	<	606:18:15780:15780	4933139	6	True				
ANR	4934243	Statement	const	606:19:15781:15785	4933139	7	True				
ANR	4934244	Statement	GenericEvent	606:25:15787:15798	4933139	8	True				
ANR	4934245	Statement	*	606:37:15799:15799	4933139	9	True				
ANR	4934246	Statement	>	606:38:15800:15800	4933139	10	True				
ANR	4934247	ExpressionStatement	event	606:39:15801:15810	4933139	11	True				
ANR	4934248	Identifier	event		4933139	0					
ANR	4934249	IfStatement	if ( ! generic )		4933139	12					
ANR	4934250	Condition	! generic	607:9:15821:15829	4933139	0	True				
ANR	4934251	UnaryOperationExpression	! generic		4933139	0					
ANR	4934252	UnaryOperator	!		4933139	0					
ANR	4934253	Identifier	generic		4933139	1					
ANR	4934254	CompoundStatement		239:21:6206:6206	4933139	1					
ANR	4934255	ExpressionStatement	"fprintf ( stderr , ""Can't pointer cast generic event!\\n"" )"	608:5:15840:15896	4933139	0	True				
ANR	4934256	CallExpression	"fprintf ( stderr , ""Can't pointer cast generic event!\\n"" )"		4933139	0					
ANR	4934257	Callee	fprintf		4933139	0					
ANR	4934258	Identifier	fprintf		4933139	0					
ANR	4934259	ArgumentList	stderr		4933139	1					
ANR	4934260	Argument	stderr		4933139	0					
ANR	4934261	Identifier	stderr		4933139	0					
ANR	4934262	Argument	"""Can't pointer cast generic event!\\n"""		4933139	1					
ANR	4934263	PrimaryExpression	"""Can't pointer cast generic event!\\n"""		4933139	0					
ANR	4934264	ElseStatement	else		4933139	0					
ANR	4934265	CompoundStatement		245:5:6367:6385	4933139	0					
ANR	4934266	IdentifierDeclStatement	char * info = strdup ( generic -> info ) ;	611:5:15920:15956	4933139	0	True				
ANR	4934267	IdentifierDecl	* info = strdup ( generic -> info )		4933139	0					
ANR	4934268	IdentifierDeclType	char *		4933139	0					
ANR	4934269	Identifier	info		4933139	1					
ANR	4934270	AssignmentExpression	* info = strdup ( generic -> info )		4933139	2		=			
ANR	4934271	Identifier	info		4933139	0					
ANR	4934272	CallExpression	strdup ( generic -> info )		4933139	1					
ANR	4934273	Callee	strdup		4933139	0					
ANR	4934274	Identifier	strdup		4933139	0					
ANR	4934275	ArgumentList	generic -> info		4933139	1					
ANR	4934276	Argument	generic -> info		4933139	0					
ANR	4934277	PtrMemberAccess	generic -> info		4933139	0					
ANR	4934278	Identifier	generic		4933139	0					
ANR	4934279	Identifier	info		4933139	1					
ANR	4934280	IdentifierDeclStatement	int l = strlen ( info ) ;	612:5:15963:15987	4933139	1	True				
ANR	4934281	IdentifierDecl	l = strlen ( info )		4933139	0					
ANR	4934282	IdentifierDeclType	int		4933139	0					
ANR	4934283	Identifier	l		4933139	1					
ANR	4934284	AssignmentExpression	l = strlen ( info )		4933139	2		=			
ANR	4934285	Identifier	l		4933139	0					
ANR	4934286	CallExpression	strlen ( info )		4933139	1					
ANR	4934287	Callee	strlen		4933139	0					
ANR	4934288	Identifier	strlen		4933139	0					
ANR	4934289	ArgumentList	info		4933139	1					
ANR	4934290	Argument	info		4933139	0					
ANR	4934291	Identifier	info		4933139	0					
ANR	4934292	IdentifierDeclStatement	char * p = info + l - 1 ;	613:5:15994:16012	4933139	2	True				
ANR	4934293	IdentifierDecl	* p = info + l - 1		4933139	0					
ANR	4934294	IdentifierDeclType	char *		4933139	0					
ANR	4934295	Identifier	p		4933139	1					
ANR	4934296	AssignmentExpression	* p = info + l - 1		4933139	2		=			
ANR	4934297	Identifier	p		4933139	0					
ANR	4934298	AdditiveExpression	info + l - 1		4933139	1		+			
ANR	4934299	Identifier	info		4933139	0					
ANR	4934300	AdditiveExpression	l - 1		4933139	1		-			
ANR	4934301	Identifier	l		4933139	0					
ANR	4934302	PrimaryExpression	1		4933139	1					
ANR	4934303	WhileStatement	while ( l && isspace ( * p ) )		4933139	3					
ANR	4934304	Condition	l && isspace ( * p )	614:12:16026:16041	4933139	0	True				
ANR	4934305	AndExpression	l && isspace ( * p )		4933139	0		&&			
ANR	4934306	Identifier	l		4933139	0					
ANR	4934307	CallExpression	isspace ( * p )		4933139	1					
ANR	4934308	Callee	isspace		4933139	0					
ANR	4934309	Identifier	isspace		4933139	0					
ANR	4934310	ArgumentList	* p		4933139	1					
ANR	4934311	Argument	* p		4933139	0					
ANR	4934312	UnaryOperationExpression	* p		4933139	0					
ANR	4934313	UnaryOperator	*		4933139	0					
ANR	4934314	Identifier	p		4933139	1					
ANR	4934315	CompoundStatement		246:31:6418:6418	4933139	1					
ANR	4934316	ExpressionStatement	* p = '\\0'	615:6:16053:16062	4933139	0	True				
ANR	4934317	AssignmentExpression	* p = '\\0'		4933139	0		=			
ANR	4934318	UnaryOperationExpression	* p		4933139	0					
ANR	4934319	UnaryOperator	*		4933139	0					
ANR	4934320	Identifier	p		4933139	1					
ANR	4934321	PrimaryExpression	'\\0'		4933139	1					
ANR	4934322	ExpressionStatement	p --	616:6:16070:16073	4933139	1	True				
ANR	4934323	PostIncDecOperationExpression	p --		4933139	0					
ANR	4934324	Identifier	p		4933139	0					
ANR	4934325	IncDec	--		4933139	1					
ANR	4934326	ExpressionStatement	l --	617:6:16081:16084	4933139	2	True				
ANR	4934327	PostIncDecOperationExpression	l --		4933139	0					
ANR	4934328	Identifier	l		4933139	0					
ANR	4934329	IncDec	--		4933139	1					
ANR	4934330	ExpressionStatement	"printf ( "" (generic): '%s'\\n"" , info )"	619:5:16098:16134	4933139	4	True				
ANR	4934331	CallExpression	"printf ( "" (generic): '%s'\\n"" , info )"		4933139	0					
ANR	4934332	Callee	printf		4933139	0					
ANR	4934333	Identifier	printf		4933139	0					
ANR	4934334	ArgumentList	""" (generic): '%s'\\n"""		4933139	1					
ANR	4934335	Argument	""" (generic): '%s'\\n"""		4933139	0					
ANR	4934336	PrimaryExpression	""" (generic): '%s'\\n"""		4933139	0					
ANR	4934337	Argument	info		4933139	1					
ANR	4934338	Identifier	info		4933139	0					
ANR	4934339	ExpressionStatement	free ( info )	620:5:16141:16153	4933139	5	True				
ANR	4934340	CallExpression	free ( info )		4933139	0					
ANR	4934341	Callee	free		4933139	0					
ANR	4934342	Identifier	free		4933139	0					
ANR	4934343	ArgumentList	info		4933139	1					
ANR	4934344	Argument	info		4933139	0					
ANR	4934345	Identifier	info		4933139	0					
ANR	4934346	BreakStatement	break ;	622:4:16165:16170	4933139	13	True				
ANR	4934347	Label	default :	625:3:16181:16188	4933139	16	True				
ANR	4934348	Identifier	default		4933139	0					
ANR	4934349	IfStatement	if ( opts . verbosity >= VERB_ALL )		4933139	17					
ANR	4934350	Condition	opts . verbosity >= VERB_ALL	626:9:16199:16224	4933139	0	True				
ANR	4934351	RelationalExpression	opts . verbosity >= VERB_ALL		4933139	0		>=			
ANR	4934352	MemberAccess	opts . verbosity		4933139	0					
ANR	4934353	Identifier	opts		4933139	0					
ANR	4934354	Identifier	verbosity		4933139	1					
ANR	4934355	Identifier	VERB_ALL		4933139	1					
ANR	4934356	CompoundStatement		259:5:6608:6646	4933139	1					
ANR	4934357	IdentifierDeclStatement	const char * name = event -> eventName ( ) ;	627:5:16235:16273	4933139	0	True				
ANR	4934358	IdentifierDecl	* name = event -> eventName ( )		4933139	0					
ANR	4934359	IdentifierDeclType	const char *		4933139	0					
ANR	4934360	Identifier	name		4933139	1					
ANR	4934361	AssignmentExpression	* name = event -> eventName ( )		4933139	2		=			
ANR	4934362	Identifier	name		4933139	0					
ANR	4934363	CallExpression	event -> eventName ( )		4933139	1					
ANR	4934364	Callee	event -> eventName		4933139	0					
ANR	4934365	PtrMemberAccess	event -> eventName		4933139	0					
ANR	4934366	Identifier	event		4933139	0					
ANR	4934367	Identifier	eventName		4933139	1					
ANR	4934368	ArgumentList			4933139	1					
ANR	4934369	ExpressionStatement	"printf ( "" (%s)\\n"" , name ? name : ""UNKNOWN"" )"	628:5:16280:16323	4933139	1	True				
ANR	4934370	CallExpression	"printf ( "" (%s)\\n"" , name ? name : ""UNKNOWN"" )"		4933139	0					
ANR	4934371	Callee	printf		4933139	0					
ANR	4934372	Identifier	printf		4933139	0					
ANR	4934373	ArgumentList	""" (%s)\\n"""		4933139	1					
ANR	4934374	Argument	""" (%s)\\n"""		4933139	0					
ANR	4934375	PrimaryExpression	""" (%s)\\n"""		4933139	0					
ANR	4934376	Argument	"name ? name : ""UNKNOWN"""		4933139	1					
ANR	4934377	ConditionalExpression	"name ? name : ""UNKNOWN"""		4933139	0					
ANR	4934378	Condition	name		4933139	0					
ANR	4934379	Identifier	name		4933139	0					
ANR	4934380	Identifier	name		4933139	1					
ANR	4934381	PrimaryExpression	"""UNKNOWN"""		4933139	2					
ANR	4934382	BreakStatement	break ;	630:4:16335:16340	4933139	18	True				
ANR	4934383	IfStatement	if ( opts . writePersist && reader . GetFileState ( state ) )		4933139	9					
ANR	4934384	Condition	opts . writePersist && reader . GetFileState ( state )	635:8:16393:16441	4933139	0	True				
ANR	4934385	AndExpression	opts . writePersist && reader . GetFileState ( state )		4933139	0		&&			
ANR	4934386	MemberAccess	opts . writePersist		4933139	0					
ANR	4934387	Identifier	opts		4933139	0					
ANR	4934388	Identifier	writePersist		4933139	1					
ANR	4934389	CallExpression	reader . GetFileState ( state )		4933139	1					
ANR	4934390	Callee	reader . GetFileState		4933139	0					
ANR	4934391	MemberAccess	reader . GetFileState		4933139	0					
ANR	4934392	Identifier	reader		4933139	0					
ANR	4934393	Identifier	GetFileState		4933139	1					
ANR	4934394	ArgumentList	state		4933139	1					
ANR	4934395	Argument	state		4933139	0					
ANR	4934396	Identifier	state		4933139	0					
ANR	4934397	CompoundStatement		267:60:6818:6818	4933139	1					
ANR	4934398	Statement	int	636:4:16451:16453	4933139	0	True				
ANR	4934399	Statement	fd	636:8:16455:16456	4933139	1	True				
ANR	4934400	Statement	=	636:11:16458:16458	4933139	2	True				
ANR	4934401	Statement	safe_open_wrapper_follow	636:13:16460:16483	4933139	3	True				
ANR	4934402	Statement	(	636:37:16484:16484	4933139	4	True				
ANR	4934403	Statement	opts	636:39:16486:16489	4933139	5	True				
ANR	4934404	Statement	.	636:43:16490:16490	4933139	6	True				
ANR	4934405	Statement	persistFile	636:44:16491:16501	4933139	7	True				
ANR	4934406	Statement	","	636:55:16502:16502	4933139	8	True				
ANR	4934407	Statement	O_WRONLY	637:11:16515:16522	4933139	9	True				
ANR	4934408	Statement	|	637:19:16523:16523	4933139	10	True				
ANR	4934409	Statement	O_CREAT	637:20:16524:16530	4933139	11	True				
ANR	4934410	Statement	","	637:27:16531:16531	4933139	12	True				
ANR	4934411	Statement	_S_IWRITE	639:11:16557:16565	4933139	13	True				
ANR	4934412	Statement	)	639:20:16566:16566	4933139	14	True				
ANR	4934413	ExpressionStatement		639:21:16567:16567	4933139	15	True				
ANR	4934414	IfStatement	if ( fd >= 0 )		4933139	16					
ANR	4934415	Condition	fd >= 0	643:9:16637:16643	4933139	0	True				
ANR	4934416	RelationalExpression	fd >= 0		4933139	0		>=			
ANR	4934417	Identifier	fd		4933139	0					
ANR	4934418	PrimaryExpression	0		4933139	1					
ANR	4934419	CompoundStatement		275:19:7020:7020	4933139	1					
ANR	4934420	IfStatement	"if ( write ( fd , state . buf , state . size ) != state . size )"		4933139	0					
ANR	4934421	Condition	"write ( fd , state . buf , state . size ) != state . size"	644:10:16659:16706	4933139	0	True				
ANR	4934422	EqualityExpression	"write ( fd , state . buf , state . size ) != state . size"		4933139	0		!=			
ANR	4934423	CallExpression	"write ( fd , state . buf , state . size )"		4933139	0					
ANR	4934424	Callee	write		4933139	0					
ANR	4934425	Identifier	write		4933139	0					
ANR	4934426	ArgumentList	fd		4933139	1					
ANR	4934427	Argument	fd		4933139	0					
ANR	4934428	Identifier	fd		4933139	0					
ANR	4934429	Argument	state . buf		4933139	1					
ANR	4934430	MemberAccess	state . buf		4933139	0					
ANR	4934431	Identifier	state		4933139	0					
ANR	4934432	Identifier	buf		4933139	1					
ANR	4934433	Argument	state . size		4933139	2					
ANR	4934434	MemberAccess	state . size		4933139	0					
ANR	4934435	Identifier	state		4933139	0					
ANR	4934436	Identifier	size		4933139	1					
ANR	4934437	MemberAccess	state . size		4933139	1					
ANR	4934438	Identifier	state		4933139	0					
ANR	4934439	Identifier	size		4933139	1					
ANR	4934440	CompoundStatement		276:61:7083:7083	4933139	1					
ANR	4934441	ExpressionStatement	"fprintf ( stderr , ""Failed writing persistent file\\n"" )"	645:6:16718:16771	4933139	0	True				
ANR	4934442	CallExpression	"fprintf ( stderr , ""Failed writing persistent file\\n"" )"		4933139	0					
ANR	4934443	Callee	fprintf		4933139	0					
ANR	4934444	Identifier	fprintf		4933139	0					
ANR	4934445	ArgumentList	stderr		4933139	1					
ANR	4934446	Argument	stderr		4933139	0					
ANR	4934447	Identifier	stderr		4933139	0					
ANR	4934448	Argument	"""Failed writing persistent file\\n"""		4933139	1					
ANR	4934449	PrimaryExpression	"""Failed writing persistent file\\n"""		4933139	0					
ANR	4934450	ExpressionStatement	close ( fd )	647:5:16785:16796	4933139	1	True				
ANR	4934451	CallExpression	close ( fd )		4933139	0					
ANR	4934452	Callee	close		4933139	0					
ANR	4934453	Identifier	close		4933139	0					
ANR	4934454	ArgumentList	fd		4933139	1					
ANR	4934455	Argument	fd		4933139	0					
ANR	4934456	Identifier	fd		4933139	0					
ANR	4934457	ElseStatement	else		4933139	0					
ANR	4934458	IfStatement	if ( outcome == ULOG_NO_EVENT )		4933139	0					
ANR	4934459	Condition	outcome == ULOG_NO_EVENT	651:14:16824:16847	4933139	0	True				
ANR	4934460	EqualityExpression	outcome == ULOG_NO_EVENT		4933139	0		==			
ANR	4934461	Identifier	outcome		4933139	0					
ANR	4934462	Identifier	ULOG_NO_EVENT		4933139	1					
ANR	4934463	CompoundStatement		283:41:7224:7224	4933139	1					
ANR	4934464	IfStatement	if ( opts . verbosity >= VERB_ALL )		4933139	0					
ANR	4934465	Condition	opts . verbosity >= VERB_ALL	652:8:16861:16886	4933139	0	True				
ANR	4934466	RelationalExpression	opts . verbosity >= VERB_ALL		4933139	0		>=			
ANR	4934467	MemberAccess	opts . verbosity		4933139	0					
ANR	4934468	Identifier	opts		4933139	0					
ANR	4934469	Identifier	verbosity		4933139	1					
ANR	4934470	Identifier	VERB_ALL		4933139	1					
ANR	4934471	CompoundStatement		284:37:7263:7263	4933139	1					
ANR	4934472	ExpressionStatement	"printf ( ""No events available\\n"" )"	653:4:16896:16929	4933139	0	True				
ANR	4934473	CallExpression	"printf ( ""No events available\\n"" )"		4933139	0					
ANR	4934474	Callee	printf		4933139	0					
ANR	4934475	Identifier	printf		4933139	0					
ANR	4934476	ArgumentList	"""No events available\\n"""		4933139	1					
ANR	4934477	Argument	"""No events available\\n"""		4933139	0					
ANR	4934478	PrimaryExpression	"""No events available\\n"""		4933139	0					
ANR	4934479	IfStatement	if ( opts . stop > 0 )		4933139	1					
ANR	4934480	Condition	opts . stop > 0	655:8:16944:16956	4933139	0	True				
ANR	4934481	RelationalExpression	opts . stop > 0		4933139	0		>			
ANR	4934482	MemberAccess	opts . stop		4933139	0					
ANR	4934483	Identifier	opts		4933139	0					
ANR	4934484	Identifier	stop		4933139	1					
ANR	4934485	PrimaryExpression	0		4933139	1					
ANR	4934486	CompoundStatement		287:24:7333:7333	4933139	1					
ANR	4934487	IfStatement	if ( opts . verbosity >= VERB_INFO )		4933139	0					
ANR	4934488	Condition	opts . verbosity >= VERB_INFO	656:9:16971:16997	4933139	0	True				
ANR	4934489	RelationalExpression	opts . verbosity >= VERB_INFO		4933139	0		>=			
ANR	4934490	MemberAccess	opts . verbosity		4933139	0					
ANR	4934491	Identifier	opts		4933139	0					
ANR	4934492	Identifier	verbosity		4933139	1					
ANR	4934493	Identifier	VERB_INFO		4933139	1					
ANR	4934494	CompoundStatement		288:39:7374:7374	4933139	1					
ANR	4934495	ExpressionStatement	"printf ( ""Read %d events\\n"" , numEvents )"	657:5:17008:17047	4933139	0	True				
ANR	4934496	CallExpression	"printf ( ""Read %d events\\n"" , numEvents )"		4933139	0					
ANR	4934497	Callee	printf		4933139	0					
ANR	4934498	Identifier	printf		4933139	0					
ANR	4934499	ArgumentList	"""Read %d events\\n"""		4933139	1					
ANR	4934500	Argument	"""Read %d events\\n"""		4933139	0					
ANR	4934501	PrimaryExpression	"""Read %d events\\n"""		4933139	0					
ANR	4934502	Argument	numEvents		4933139	1					
ANR	4934503	Identifier	numEvents		4933139	0					
ANR	4934504	ExpressionStatement	"printf ( ""\\n*** Sending SIGSTOP to myself (PID %d) ***\\n"" , getpid ( ) )"	659:4:17059:17133	4933139	1	True				
ANR	4934505	CallExpression	"printf ( ""\\n*** Sending SIGSTOP to myself (PID %d) ***\\n"" , getpid ( ) )"		4933139	0					
ANR	4934506	Callee	printf		4933139	0					
ANR	4934507	Identifier	printf		4933139	0					
ANR	4934508	ArgumentList	"""\\n*** Sending SIGSTOP to myself (PID %d) ***\\n"""		4933139	1					
ANR	4934509	Argument	"""\\n*** Sending SIGSTOP to myself (PID %d) ***\\n"""		4933139	0					
ANR	4934510	PrimaryExpression	"""\\n*** Sending SIGSTOP to myself (PID %d) ***\\n"""		4933139	0					
ANR	4934511	Argument	getpid ( )		4933139	1					
ANR	4934512	CallExpression	getpid ( )		4933139	0					
ANR	4934513	Callee	getpid		4933139	0					
ANR	4934514	Identifier	getpid		4933139	0					
ANR	4934515	ArgumentList			4933139	1					
ANR	4934516	ExpressionStatement	fflush ( stdout )	661:4:17139:17155	4933139	2	True				
ANR	4934517	CallExpression	fflush ( stdout )		4933139	0					
ANR	4934518	Callee	fflush		4933139	0					
ANR	4934519	Identifier	fflush		4933139	0					
ANR	4934520	ArgumentList	stdout		4933139	1					
ANR	4934521	Argument	stdout		4933139	0					
ANR	4934522	Identifier	stdout		4933139	0					
ANR	4934523	ExpressionStatement	ExitProcess ( SIGSTOP )	663:4:17174:17194	4933139	3	True				
ANR	4934524	CallExpression	ExitProcess ( SIGSTOP )		4933139	0					
ANR	4934525	Callee	ExitProcess		4933139	0					
ANR	4934526	Identifier	ExitProcess		4933139	0					
ANR	4934527	ArgumentList	SIGSTOP		4933139	1					
ANR	4934528	Argument	SIGSTOP		4933139	0					
ANR	4934529	Identifier	SIGSTOP		4933139	0					
ANR	4934530	ExpressionStatement	opts . stop --	667:4:17244:17255	4933139	4	True				
ANR	4934531	PostIncDecOperationExpression	opts . stop --		4933139	0					
ANR	4934532	MemberAccess	opts . stop		4933139	0					
ANR	4934533	Identifier	opts		4933139	0					
ANR	4934534	Identifier	stop		4933139	1					
ANR	4934535	IncDec	--		4933139	1					
ANR	4934536	ExpressionStatement	numEvents = 0	668:4:17261:17274	4933139	5	True				
ANR	4934537	AssignmentExpression	numEvents = 0		4933139	0		=			
ANR	4934538	Identifier	numEvents		4933139	0					
ANR	4934539	PrimaryExpression	0		4933139	1					
ANR	4934540	ExpressionStatement	"printf ( ""\\n*** Continued after stop ***\\n"" )"	669:4:17280:17323	4933139	6	True				
ANR	4934541	CallExpression	"printf ( ""\\n*** Continued after stop ***\\n"" )"		4933139	0					
ANR	4934542	Callee	printf		4933139	0					
ANR	4934543	Identifier	printf		4933139	0					
ANR	4934544	ArgumentList	"""\\n*** Continued after stop ***\\n"""		4933139	1					
ANR	4934545	Argument	"""\\n*** Continued after stop ***\\n"""		4933139	0					
ANR	4934546	PrimaryExpression	"""\\n*** Continued after stop ***\\n"""		4933139	0					
ANR	4934547	ElseStatement	else		4933139	0					
ANR	4934548	IfStatement	if ( opts . exit )		4933139	0					
ANR	4934549	Condition	opts . exit	671:13:17343:17351	4933139	0	True				
ANR	4934550	MemberAccess	opts . exit		4933139	0					
ANR	4934551	Identifier	opts		4933139	0					
ANR	4934552	Identifier	exit		4933139	1					
ANR	4934553	CompoundStatement		303:25:7728:7728	4933139	1					
ANR	4934554	ExpressionStatement	done = true	672:4:17361:17372	4933139	0	True				
ANR	4934555	AssignmentExpression	done = true		4933139	0		=			
ANR	4934556	Identifier	done		4933139	0					
ANR	4934557	Identifier	true		4933139	1					
ANR	4934558	ElseStatement	else		4933139	0					
ANR	4934559	CompoundStatement		306:8:7760:7760	4933139	0					
ANR	4934560	ExpressionStatement	sleep ( opts . sleep )	675:4:17393:17410	4933139	0	True				
ANR	4934561	CallExpression	sleep ( opts . sleep )		4933139	0					
ANR	4934562	Callee	sleep		4933139	0					
ANR	4934563	Identifier	sleep		4933139	0					
ANR	4934564	ArgumentList	opts . sleep		4933139	1					
ANR	4934565	Argument	opts . sleep		4933139	0					
ANR	4934566	MemberAccess	opts . sleep		4933139	0					
ANR	4934567	Identifier	opts		4933139	0					
ANR	4934568	Identifier	sleep		4933139	1					
ANR	4934569	ExpressionStatement	missedLast = false	677:3:17420:17438	4933139	2	True				
ANR	4934570	AssignmentExpression	missedLast = false		4933139	0		=			
ANR	4934571	Identifier	missedLast		4933139	0					
ANR	4934572	Identifier	false		4933139	1					
ANR	4934573	ElseStatement	else		4933139	0					
ANR	4934574	IfStatement	if ( outcome == ULOG_MISSED_EVENT )		4933139	0					
ANR	4934575	Condition	outcome == ULOG_MISSED_EVENT	679:14:17455:17482	4933139	0	True				
ANR	4934576	EqualityExpression	outcome == ULOG_MISSED_EVENT		4933139	0		==			
ANR	4934577	Identifier	outcome		4933139	0					
ANR	4934578	Identifier	ULOG_MISSED_EVENT		4933139	1					
ANR	4934579	CompoundStatement		311:45:7859:7859	4933139	1					
ANR	4934580	ExpressionStatement	"printf ( ""\\n*** Missed event(s) ***\\n"" )"	680:3:17491:17530	4933139	0	True				
ANR	4934581	CallExpression	"printf ( ""\\n*** Missed event(s) ***\\n"" )"		4933139	0					
ANR	4934582	Callee	printf		4933139	0					
ANR	4934583	Identifier	printf		4933139	0					
ANR	4934584	ArgumentList	"""\\n*** Missed event(s) ***\\n"""		4933139	1					
ANR	4934585	Argument	"""\\n*** Missed event(s) ***\\n"""		4933139	0					
ANR	4934586	PrimaryExpression	"""\\n*** Missed event(s) ***\\n"""		4933139	0					
ANR	4934587	ExpressionStatement	missedLast = true	681:3:17535:17552	4933139	1	True				
ANR	4934588	AssignmentExpression	missedLast = true		4933139	0		=			
ANR	4934589	Identifier	missedLast		4933139	0					
ANR	4934590	Identifier	true		4933139	1					
ANR	4934591	ElseStatement	else		4933139	0					
ANR	4934592	IfStatement	if ( outcome == ULOG_RD_ERROR || outcome == ULOG_UNK_ERROR )		4933139	0					
ANR	4934593	Condition	outcome == ULOG_RD_ERROR || outcome == ULOG_UNK_ERROR	683:14:17569:17621	4933139	0	True				
ANR	4934594	OrExpression	outcome == ULOG_RD_ERROR || outcome == ULOG_UNK_ERROR		4933139	0		||			
ANR	4934595	EqualityExpression	outcome == ULOG_RD_ERROR		4933139	0		==			
ANR	4934596	Identifier	outcome		4933139	0					
ANR	4934597	Identifier	ULOG_RD_ERROR		4933139	1					
ANR	4934598	EqualityExpression	outcome == ULOG_UNK_ERROR		4933139	1		==			
ANR	4934599	Identifier	outcome		4933139	0					
ANR	4934600	Identifier	ULOG_UNK_ERROR		4933139	1					
ANR	4934601	CompoundStatement		315:70:7998:7998	4933139	1					
ANR	4934602	IfStatement	if ( opts . verbosity >= VERB_ERROR )		4933139	0					
ANR	4934603	Condition	opts . verbosity >= VERB_ERROR	684:8:17635:17662	4933139	0	True				
ANR	4934604	RelationalExpression	opts . verbosity >= VERB_ERROR		4933139	0		>=			
ANR	4934605	MemberAccess	opts . verbosity		4933139	0					
ANR	4934606	Identifier	opts		4933139	0					
ANR	4934607	Identifier	verbosity		4933139	1					
ANR	4934608	Identifier	VERB_ERROR		4933139	1					
ANR	4934609	CompoundStatement		316:39:8039:8039	4933139	1					
ANR	4934610	ExpressionStatement	"fprintf ( stderr , ""Error reading event @ # %d / %d\\n"" , numEvents , totalEvents )"	685:4:17672:17755	4933139	0	True				
ANR	4934611	CallExpression	"fprintf ( stderr , ""Error reading event @ # %d / %d\\n"" , numEvents , totalEvents )"		4933139	0					
ANR	4934612	Callee	fprintf		4933139	0					
ANR	4934613	Identifier	fprintf		4933139	0					
ANR	4934614	ArgumentList	stderr		4933139	1					
ANR	4934615	Argument	stderr		4933139	0					
ANR	4934616	Identifier	stderr		4933139	0					
ANR	4934617	Argument	"""Error reading event @ # %d / %d\\n"""		4933139	1					
ANR	4934618	PrimaryExpression	"""Error reading event @ # %d / %d\\n"""		4933139	0					
ANR	4934619	Argument	numEvents		4933139	2					
ANR	4934620	Identifier	numEvents		4933139	0					
ANR	4934621	Argument	totalEvents		4933139	3					
ANR	4934622	Identifier	totalEvents		4933139	0					
ANR	4934623	ExpressionStatement	result = STATUS_ERROR	688:3:17765:17786	4933139	1	True				
ANR	4934624	AssignmentExpression	result = STATUS_ERROR		4933139	0		=			
ANR	4934625	Identifier	result		4933139	0					
ANR	4934626	Identifier	STATUS_ERROR		4933139	1					
ANR	4934627	Statement	delete	691:2:17795:17800	4933139	6	True				
ANR	4934628	ExpressionStatement	event	691:9:17802:17807	4933139	7	True				
ANR	4934629	Identifier	event		4933139	0					
ANR	4934630	ExpressionStatement	reader . GetFileState ( state )	694:1:17814:17842	4933139	21	True				
ANR	4934631	CallExpression	reader . GetFileState ( state )		4933139	0					
ANR	4934632	Callee	reader . GetFileState		4933139	0					
ANR	4934633	MemberAccess	reader . GetFileState		4933139	0					
ANR	4934634	Identifier	reader		4933139	0					
ANR	4934635	Identifier	GetFileState		4933139	1					
ANR	4934636	ArgumentList	state		4933139	1					
ANR	4934637	Argument	state		4933139	0					
ANR	4934638	Identifier	state		4933139	0					
ANR	4934639	Statement	if	695:3:17847:17848	4933139	22	True				
ANR	4934640	Statement	ENABLE_STATE_DUMP	695:6:17850:17866	4933139	23	True				
ANR	4934641	IfStatement	if ( opts . dumpState )		4933139	24					
ANR	4934642	Condition	opts . dumpState	696:6:17874:17887	4933139	0	True				
ANR	4934643	MemberAccess	opts . dumpState		4933139	0					
ANR	4934644	Identifier	opts		4933139	0					
ANR	4934645	Identifier	dumpState		4933139	1					
ANR	4934646	CompoundStatement		330:2:8306:8320	4933139	1					
ANR	4934647	IdentifierDeclStatement	"ReadUserLogState rstate ( state , 60 ) ;"	697:2:17895:17929	4933139	0	True				
ANR	4934648	IdentifierDecl	"rstate ( state , 60 )"		4933139	0					
ANR	4934649	IdentifierDeclType	ReadUserLogState		4933139	0					
ANR	4934650	Identifier	rstate		4933139	1					
ANR	4934651	Expression	"state , 60"		4933139	2					
ANR	4934652	Identifier	state		4933139	0					
ANR	4934653	PrimaryExpression	60		4933139	1					
ANR	4934654	IdentifierDeclStatement	MyString str ;	698:2:17933:17947	4933139	1	True				
ANR	4934655	IdentifierDecl	str		4933139	0					
ANR	4934656	IdentifierDeclType	MyString		4933139	0					
ANR	4934657	Identifier	str		4933139	1					
ANR	4934658	ExpressionStatement	"rstate . GetStateString ( state , str , ""Final File State"" )"	700:2:17952:18007	4933139	2	True				
ANR	4934659	CallExpression	"rstate . GetStateString ( state , str , ""Final File State"" )"		4933139	0					
ANR	4934660	Callee	rstate . GetStateString		4933139	0					
ANR	4934661	MemberAccess	rstate . GetStateString		4933139	0					
ANR	4934662	Identifier	rstate		4933139	0					
ANR	4934663	Identifier	GetStateString		4933139	1					
ANR	4934664	ArgumentList	state		4933139	1					
ANR	4934665	Argument	state		4933139	0					
ANR	4934666	Identifier	state		4933139	0					
ANR	4934667	Argument	str		4933139	1					
ANR	4934668	Identifier	str		4933139	0					
ANR	4934669	Argument	"""Final File State"""		4933139	2					
ANR	4934670	PrimaryExpression	"""Final File State"""		4933139	0					
ANR	4934671	ExpressionStatement	puts ( str . Value ( ) )	701:2:18011:18030	4933139	3	True				
ANR	4934672	CallExpression	puts ( str . Value ( ) )		4933139	0					
ANR	4934673	Callee	puts		4933139	0					
ANR	4934674	Identifier	puts		4933139	0					
ANR	4934675	ArgumentList	str . Value ( )		4933139	1					
ANR	4934676	Argument	str . Value ( )		4933139	0					
ANR	4934677	CallExpression	str . Value ( )		4933139	0					
ANR	4934678	Callee	str . Value		4933139	0					
ANR	4934679	MemberAccess	str . Value		4933139	0					
ANR	4934680	Identifier	str		4933139	0					
ANR	4934681	Identifier	Value		4933139	1					
ANR	4934682	ArgumentList			4933139	1					
ANR	4934683	Statement	endif	703:3:18038:18042	4933139	25	True				
ANR	4934684	IfStatement	if ( opts . writePersist )		4933139	26					
ANR	4934685	Condition	opts . writePersist	705:6:18051:18067	4933139	0	True				
ANR	4934686	MemberAccess	opts . writePersist		4933139	0					
ANR	4934687	Identifier	opts		4933139	0					
ANR	4934688	Identifier	writePersist		4933139	1					
ANR	4934689	CompoundStatement		337:26:8444:8444	4933139	1					
ANR	4934690	ExpressionStatement	"fputs ( ""\\nStoring final state..."" , stdout )"	706:2:18075:18118	4933139	0	True				
ANR	4934691	CallExpression	"fputs ( ""\\nStoring final state..."" , stdout )"		4933139	0					
ANR	4934692	Callee	fputs		4933139	0					
ANR	4934693	Identifier	fputs		4933139	0					
ANR	4934694	ArgumentList	"""\\nStoring final state..."""		4933139	1					
ANR	4934695	Argument	"""\\nStoring final state..."""		4933139	0					
ANR	4934696	PrimaryExpression	"""\\nStoring final state..."""		4933139	0					
ANR	4934697	Argument	stdout		4933139	1					
ANR	4934698	Identifier	stdout		4933139	0					
ANR	4934699	Statement	int	707:2:18122:18124	4933139	1	True				
ANR	4934700	Statement	fd	707:6:18126:18127	4933139	2	True				
ANR	4934701	Statement	=	707:9:18129:18129	4933139	3	True				
ANR	4934702	Statement	safe_open_wrapper_follow	707:11:18131:18154	4933139	4	True				
ANR	4934703	Statement	(	707:35:18155:18155	4933139	5	True				
ANR	4934704	Statement	opts	707:37:18157:18160	4933139	6	True				
ANR	4934705	Statement	.	707:41:18161:18161	4933139	7	True				
ANR	4934706	Statement	persistFile	707:42:18162:18172	4933139	8	True				
ANR	4934707	Statement	","	707:53:18173:18173	4933139	9	True				
ANR	4934708	Statement	O_WRONLY	708:9:18184:18191	4933139	10	True				
ANR	4934709	Statement	|	708:17:18192:18192	4933139	11	True				
ANR	4934710	Statement	O_CREAT	708:18:18193:18199	4933139	12	True				
ANR	4934711	Statement	","	708:25:18200:18200	4933139	13	True				
ANR	4934712	Statement	_S_IWRITE	710:9:18224:18232	4933139	14	True				
ANR	4934713	Statement	)	710:18:18233:18233	4933139	15	True				
ANR	4934714	ExpressionStatement		710:19:18234:18234	4933139	16	True				
ANR	4934715	IfStatement	if ( fd >= 0 )		4933139	17					
ANR	4934716	Condition	fd >= 0	714:7:18300:18306	4933139	0	True				
ANR	4934717	RelationalExpression	fd >= 0		4933139	0		>=			
ANR	4934718	Identifier	fd		4933139	0					
ANR	4934719	PrimaryExpression	0		4933139	1					
ANR	4934720	CompoundStatement		346:17:8683:8683	4933139	1					
ANR	4934721	IfStatement	"if ( write ( fd , state . buf , state . size ) != state . size )"		4933139	0					
ANR	4934722	Condition	"write ( fd , state . buf , state . size ) != state . size"	715:8:18320:18367	4933139	0	True				
ANR	4934723	EqualityExpression	"write ( fd , state . buf , state . size ) != state . size"		4933139	0		!=			
ANR	4934724	CallExpression	"write ( fd , state . buf , state . size )"		4933139	0					
ANR	4934725	Callee	write		4933139	0					
ANR	4934726	Identifier	write		4933139	0					
ANR	4934727	ArgumentList	fd		4933139	1					
ANR	4934728	Argument	fd		4933139	0					
ANR	4934729	Identifier	fd		4933139	0					
ANR	4934730	Argument	state . buf		4933139	1					
ANR	4934731	MemberAccess	state . buf		4933139	0					
ANR	4934732	Identifier	state		4933139	0					
ANR	4934733	Identifier	buf		4933139	1					
ANR	4934734	Argument	state . size		4933139	2					
ANR	4934735	MemberAccess	state . size		4933139	0					
ANR	4934736	Identifier	state		4933139	0					
ANR	4934737	Identifier	size		4933139	1					
ANR	4934738	MemberAccess	state . size		4933139	1					
ANR	4934739	Identifier	state		4933139	0					
ANR	4934740	Identifier	size		4933139	1					
ANR	4934741	CompoundStatement		347:59:8744:8744	4933139	1					
ANR	4934742	ExpressionStatement	"fputs ( ""Failed writing persistent file\\n"" , stderr )"	716:4:18377:18428	4933139	0	True				
ANR	4934743	CallExpression	"fputs ( ""Failed writing persistent file\\n"" , stderr )"		4933139	0					
ANR	4934744	Callee	fputs		4933139	0					
ANR	4934745	Identifier	fputs		4933139	0					
ANR	4934746	ArgumentList	"""Failed writing persistent file\\n"""		4933139	1					
ANR	4934747	Argument	"""Failed writing persistent file\\n"""		4933139	0					
ANR	4934748	PrimaryExpression	"""Failed writing persistent file\\n"""		4933139	0					
ANR	4934749	Argument	stderr		4933139	1					
ANR	4934750	Identifier	stderr		4933139	0					
ANR	4934751	ExpressionStatement	close ( fd )	718:3:18438:18449	4933139	1	True				
ANR	4934752	CallExpression	close ( fd )		4933139	0					
ANR	4934753	Callee	close		4933139	0					
ANR	4934754	Identifier	close		4933139	0					
ANR	4934755	ArgumentList	fd		4933139	1					
ANR	4934756	Argument	fd		4933139	0					
ANR	4934757	Identifier	fd		4933139	0					
ANR	4934758	ExpressionStatement	"fputs ( ""  Done\\n"" , stdout )"	720:2:18457:18484	4933139	18	True				
ANR	4934759	CallExpression	"fputs ( ""  Done\\n"" , stdout )"		4933139	0					
ANR	4934760	Callee	fputs		4933139	0					
ANR	4934761	Identifier	fputs		4933139	0					
ANR	4934762	ArgumentList	"""  Done\\n"""		4933139	1					
ANR	4934763	Argument	"""  Done\\n"""		4933139	0					
ANR	4934764	PrimaryExpression	"""  Done\\n"""		4933139	0					
ANR	4934765	Argument	stdout		4933139	1					
ANR	4934766	Identifier	stdout		4933139	0					
ANR	4934767	ExpressionStatement	ReadUserLog :: UninitFileState ( state )	723:1:18491:18528	4933139	27	True				
ANR	4934768	CallExpression	ReadUserLog :: UninitFileState ( state )		4933139	0					
ANR	4934769	Callee	ReadUserLog :: UninitFileState		4933139	0					
ANR	4934770	Identifier	ReadUserLog :: UninitFileState		4933139	0					
ANR	4934771	ArgumentList	state		4933139	1					
ANR	4934772	Argument	state		4933139	0					
ANR	4934773	Identifier	state		4933139	0					
ANR	4934774	IfStatement	if ( opts . verbosity >= VERB_INFO )		4933139	28					
ANR	4934775	Condition	opts . verbosity >= VERB_INFO	725:6:18537:18563	4933139	0	True				
ANR	4934776	RelationalExpression	opts . verbosity >= VERB_INFO		4933139	0		>=			
ANR	4934777	MemberAccess	opts . verbosity		4933139	0					
ANR	4934778	Identifier	opts		4933139	0					
ANR	4934779	Identifier	verbosity		4933139	1					
ANR	4934780	Identifier	VERB_INFO		4933139	1					
ANR	4934781	CompoundStatement		357:36:8940:8940	4933139	1					
ANR	4934782	ExpressionStatement	"printf ( ""Read %d events\\n"" , numEvents )"	726:2:18571:18610	4933139	0	True				
ANR	4934783	CallExpression	"printf ( ""Read %d events\\n"" , numEvents )"		4933139	0					
ANR	4934784	Callee	printf		4933139	0					
ANR	4934785	Identifier	printf		4933139	0					
ANR	4934786	ArgumentList	"""Read %d events\\n"""		4933139	1					
ANR	4934787	Argument	"""Read %d events\\n"""		4933139	0					
ANR	4934788	PrimaryExpression	"""Read %d events\\n"""		4933139	0					
ANR	4934789	Argument	numEvents		4933139	1					
ANR	4934790	Identifier	numEvents		4933139	0					
ANR	4934791	ReturnStatement	return result ;	729:1:18617:18630	4933139	29	True				
ANR	4934792	Identifier	result		4933139	0					
ANR	4934793	ReturnType	Status		4933139	1					
ANR	4934794	Identifier	ReadEvents		4933139	2					
ANR	4934795	ParameterList	"Options & opts , int & totalEvents"		4933139	3					
ANR	4934796	Parameter	Options & opts	368:11:9593:9605	4933139	0	True				
ANR	4934797	ParameterType	Options &		4933139	0					
ANR	4934798	Identifier	opts		4933139	1					
ANR	4934799	Parameter	int & totalEvents	368:26:9608:9623	4933139	1	True				
ANR	4934800	ParameterType	int &		4933139	0					
ANR	4934801	Identifier	totalEvents		4933139	1					
ANR	4934802	CFGEntryNode	ENTRY		4933139		True				
ANR	4934803	CFGExitNode	EXIT		4933139		True				
ANR	4934804	Symbol	nseq		4933139						
ANR	4934805	Symbol	* event		4933139						
ANR	4934806	Symbol	opts . stop		4933139						
ANR	4934807	Symbol	isPrevCluster		4933139						
ANR	4934808	Symbol	type		4933139						
ANR	4934809	Symbol	VERB_ALL		4933139						
ANR	4934810	Symbol	opts		4933139						
ANR	4934811	Symbol	reader . initialize		4933139						
ANR	4934812	Symbol	state		4933139						
ANR	4934813	Symbol	write		4933139						
ANR	4934814	Symbol	event -> proc		4933139						
ANR	4934815	Symbol	prevProc		4933139						
ANR	4934816	Symbol	opts . checkFileStatus		4933139						
ANR	4934817	Symbol	totalEvents		4933139						
ANR	4934818	Symbol	diff_pos		4933139						
ANR	4934819	Symbol	isspace		4933139						
ANR	4934820	Symbol	reader . readEvent		4933139						
ANR	4934821	Symbol	opts . dumpState		4933139						
ANR	4934822	Symbol	state . buf		4933139						
ANR	4934823	Symbol	str		4933139						
ANR	4934824	Symbol	paccess		4933139						
ANR	4934825	Symbol	missedLast		4933139						
ANR	4934826	Symbol	opts . logFile		4933139						
ANR	4934827	Symbol	ULOG_NO_EVENT		4933139						
ANR	4934828	Symbol	handle_sig		4933139						
ANR	4934829	Symbol	naccess		4933139						
ANR	4934830	Symbol	opts . missedCheck		4933139						
ANR	4934831	Symbol	ULOG_UNK_ERROR		4933139						
ANR	4934832	Symbol	rstate		4933139						
ANR	4934833	Symbol	global_done		4933139						
ANR	4934834	Symbol	result		4933139						
ANR	4934835	Symbol	fstatus		4933139						
ANR	4934836	Symbol	event		4933139						
ANR	4934837	Symbol	opts . readPersist		4933139						
ANR	4934838	Symbol	outcome		4933139						
ANR	4934839	Symbol	VERB_ERROR		4933139						
ANR	4934840	Symbol	execEventCount		4933139						
ANR	4934841	Symbol	prevFstatus		4933139						
ANR	4934842	Symbol	event -> eventName		4933139						
ANR	4934843	Symbol	l		4933139						
ANR	4934844	Symbol	STATUS_ERROR		4933139						
ANR	4934845	Symbol	p		4933139						
ANR	4934846	Symbol	buf		4933139						
ANR	4934847	Symbol	opts . isEventLog		4933139						
ANR	4934848	Symbol	O_RDONLY		4933139						
ANR	4934849	Symbol	s		4933139						
ANR	4934850	Symbol	str . Value		4933139						
ANR	4934851	Symbol	SIGSTOP		4933139						
ANR	4934852	Symbol	opts . rotation		4933139						
ANR	4934853	Symbol	state . size		4933139						
ANR	4934854	Symbol	* generic		4933139						
ANR	4934855	Symbol	opts . exit		4933139						
ANR	4934856	Symbol	ULOG_MISSED_EVENT		4933139						
ANR	4934857	Symbol	opts . maxExec		4933139						
ANR	4934858	Symbol	stdout		4933139						
ANR	4934859	Symbol	reader		4933139						
ANR	4934860	Symbol	prevCluster		4933139						
ANR	4934861	Symbol	generic -> info		4933139						
ANR	4934862	Symbol	event -> subproc		4933139						
ANR	4934863	Symbol	empty		4933139						
ANR	4934864	Symbol	opts . verbosity		4933139						
ANR	4934865	Symbol	puniq		4933139						
ANR	4934866	Symbol	prevSubproc		4933139						
ANR	4934867	Symbol	strlen		4933139						
ANR	4934868	Symbol	reader . CheckFileStatus		4933139						
ANR	4934869	Symbol	event -> eventNumber		4933139						
ANR	4934870	Symbol	info		4933139						
ANR	4934871	Symbol	opts . writePersist		4933139						
ANR	4934872	Symbol	read		4933139						
ANR	4934873	Symbol	NULL		4933139						
ANR	4934874	Symbol	VERB_INFO		4933139						
ANR	4934875	Symbol	opts . sleep		4933139						
ANR	4934876	Symbol	reader . isInitialized		4933139						
ANR	4934877	Symbol	istatus		4933139						
ANR	4934878	Symbol	opts . exitAfterInit		4933139						
ANR	4934879	Symbol	event -> eventTime		4933139						
ANR	4934880	Symbol	nuniq		4933139						
ANR	4934881	Symbol	stderr		4933139						
ANR	4934882	Symbol	done		4933139						
ANR	4934883	Symbol	opts . term		4933139						
ANR	4934884	Symbol	reader . GetFileState		4933139						
ANR	4934885	Symbol	diff_enum		4933139						
ANR	4934886	Symbol	isPrevProc		4933139						
ANR	4934887	Symbol	SIGINT		4933139						
ANR	4934888	Symbol	true		4933139						
ANR	4934889	Symbol	name		4933139						
ANR	4934890	Symbol	fd		4933139						
ANR	4934891	Symbol	termEventCount		4933139						
ANR	4934892	Symbol	safe_open_wrapper_follow		4933139						
ANR	4934893	Symbol	SIGQUIT		4933139						
ANR	4934894	Symbol	ULOG_RD_ERROR		4933139						
ANR	4934895	Symbol	SIGTERM		4933139						
ANR	4934896	Symbol	pseq		4933139						
ANR	4934897	Symbol	nstate		4933139						
ANR	4934898	Symbol	opts . readOnly		4933139						
ANR	4934899	Symbol	false		4933139						
ANR	4934900	Symbol	timestr		4933139						
ANR	4934901	Symbol	opts . maxRotations		4933139						
ANR	4934902	Symbol	generic		4933139						
ANR	4934903	Symbol	ULOG_OK		4933139						
ANR	4934904	Symbol	opts . persistFile		4933139						
ANR	4934905	Symbol	STATUS_OK		4933139						
ANR	4934906	Symbol	numEvents		4933139						
ANR	4934907	Symbol	* p		4933139						
ANR	4934908	Symbol	strdup		4933139						
ANR	4934909	Symbol	getpid		4933139						
ANR	4934910	Symbol	event -> cluster		4933139						
ANR	4934911	Function	ReportError	732:0:18635:18897							
ANR	4934912	FunctionDef	ReportError (const ReadUserLog & reader)		4934911	0					
ANR	4934913	CompoundStatement		734:0:18681:18897	4934911	0					
ANR	4934914	IdentifierDeclStatement	ReadUserLog :: ErrorType error ;	735:1:18684:18713	4934911	0	True				
ANR	4934915	IdentifierDecl	error		4934911	0					
ANR	4934916	IdentifierDeclType	ReadUserLog :: ErrorType		4934911	0					
ANR	4934917	Identifier	error		4934911	1					
ANR	4934918	IdentifierDeclStatement	const char * error_str ;	736:1:18716:18740	4934911	1	True				
ANR	4934919	IdentifierDecl	* error_str		4934911	0					
ANR	4934920	IdentifierDeclType	const char *		4934911	0					
ANR	4934921	Identifier	error_str		4934911	1					
ANR	4934922	IdentifierDeclStatement	unsigned line_num ;	737:1:18743:18764	4934911	2	True				
ANR	4934923	IdentifierDecl	line_num		4934911	0					
ANR	4934924	IdentifierDeclType	unsigned		4934911	0					
ANR	4934925	Identifier	line_num		4934911	1					
ANR	4934926	ExpressionStatement	"reader . getErrorInfo ( error , error_str , line_num )"	739:1:18768:18817	4934911	3	True				
ANR	4934927	CallExpression	"reader . getErrorInfo ( error , error_str , line_num )"		4934911	0					
ANR	4934928	Callee	reader . getErrorInfo		4934911	0					
ANR	4934929	MemberAccess	reader . getErrorInfo		4934911	0					
ANR	4934930	Identifier	reader		4934911	0					
ANR	4934931	Identifier	getErrorInfo		4934911	1					
ANR	4934932	ArgumentList	error		4934911	1					
ANR	4934933	Argument	error		4934911	0					
ANR	4934934	Identifier	error		4934911	0					
ANR	4934935	Argument	error_str		4934911	1					
ANR	4934936	Identifier	error_str		4934911	0					
ANR	4934937	Argument	line_num		4934911	2					
ANR	4934938	Identifier	line_num		4934911	0					
ANR	4934939	ExpressionStatement	"fprintf ( stderr , ""  %s (#%d) @ line %d\\n"" , error_str , error , line_num )"	740:1:18820:18895	4934911	4	True				
ANR	4934940	CallExpression	"fprintf ( stderr , ""  %s (#%d) @ line %d\\n"" , error_str , error , line_num )"		4934911	0					
ANR	4934941	Callee	fprintf		4934911	0					
ANR	4934942	Identifier	fprintf		4934911	0					
ANR	4934943	ArgumentList	stderr		4934911	1					
ANR	4934944	Argument	stderr		4934911	0					
ANR	4934945	Identifier	stderr		4934911	0					
ANR	4934946	Argument	"""  %s (#%d) @ line %d\\n"""		4934911	1					
ANR	4934947	PrimaryExpression	"""  %s (#%d) @ line %d\\n"""		4934911	0					
ANR	4934948	Argument	error_str		4934911	2					
ANR	4934949	Identifier	error_str		4934911	0					
ANR	4934950	Argument	error		4934911	3					
ANR	4934951	Identifier	error		4934911	0					
ANR	4934952	Argument	line_num		4934911	4					
ANR	4934953	Identifier	line_num		4934911	0					
ANR	4934954	ReturnType	void		4934911	1					
ANR	4934955	Identifier	ReportError		4934911	2					
ANR	4934956	ParameterList	const ReadUserLog & reader		4934911	3					
ANR	4934957	Parameter	const ReadUserLog & reader	733:13:18653:18677	4934911	0	True				
ANR	4934958	ParameterType	const ReadUserLog &		4934911	0					
ANR	4934959	Identifier	reader		4934911	1					
ANR	4934960	CFGEntryNode	ENTRY		4934911		True				
ANR	4934961	CFGExitNode	EXIT		4934911		True				
ANR	4934962	Symbol	error_str		4934911						
ANR	4934963	Symbol	line_num		4934911						
ANR	4934964	Symbol	reader		4934911						
ANR	4934965	Symbol	error		4934911						
ANR	4934966	Symbol	stderr		4934911						
ANR	4934967	Function	timestr	744:0:18900:19109							
ANR	4934968	FunctionDef	timestr (struct tm & t)		4934967	0					
ANR	4934969	CompoundStatement		745:0:18936:19109	4934967	0					
ANR	4934970	Statement	static	746:1:18939:18944	4934967	0	True				
ANR	4934971	IdentifierDeclStatement	char tbuf [ 64 ] ;	746:8:18946:18959	4934967	1	True				
ANR	4934972	IdentifierDecl	tbuf [ 64 ]		4934967	0					
ANR	4934973	IdentifierDeclType	char [ 64 ]		4934967	0					
ANR	4934974	Identifier	tbuf		4934967	1					
ANR	4934975	PrimaryExpression	64		4934967	2					
ANR	4934976	ExpressionStatement	"strncpy ( tbuf , asctime ( & t ) , sizeof ( tbuf ) )"	747:1:18962:19006	4934967	2	True				
ANR	4934977	CallExpression	"strncpy ( tbuf , asctime ( & t ) , sizeof ( tbuf ) )"		4934967	0					
ANR	4934978	Callee	strncpy		4934967	0					
ANR	4934979	Identifier	strncpy		4934967	0					
ANR	4934980	ArgumentList	tbuf		4934967	1					
ANR	4934981	Argument	tbuf		4934967	0					
ANR	4934982	Identifier	tbuf		4934967	0					
ANR	4934983	Argument	asctime ( & t )		4934967	1					
ANR	4934984	CallExpression	asctime ( & t )		4934967	0					
ANR	4934985	Callee	asctime		4934967	0					
ANR	4934986	Identifier	asctime		4934967	0					
ANR	4934987	ArgumentList	& t		4934967	1					
ANR	4934988	Argument	& t		4934967	0					
ANR	4934989	UnaryOperationExpression	& t		4934967	0					
ANR	4934990	UnaryOperator	&		4934967	0					
ANR	4934991	Identifier	t		4934967	1					
ANR	4934992	Argument	sizeof ( tbuf )		4934967	2					
ANR	4934993	SizeofExpression	sizeof ( tbuf )		4934967	0					
ANR	4934994	Sizeof	sizeof		4934967	0					
ANR	4934995	SizeofOperand	tbuf		4934967	1					
ANR	4934996	ExpressionStatement	tbuf [ sizeof ( tbuf ) - 1 ] = '\\0'	748:1:19009:19036	4934967	3	True				
ANR	4934997	AssignmentExpression	tbuf [ sizeof ( tbuf ) - 1 ] = '\\0'		4934967	0		=			
ANR	4934998	ArrayIndexing	tbuf [ sizeof ( tbuf ) - 1 ]		4934967	0					
ANR	4934999	Identifier	tbuf		4934967	0					
ANR	4935000	AdditiveExpression	sizeof ( tbuf ) - 1		4934967	1		-			
ANR	4935001	SizeofExpression	sizeof ( tbuf )		4934967	0					
ANR	4935002	Sizeof	sizeof		4934967	0					
ANR	4935003	SizeofOperand	tbuf		4934967	1					
ANR	4935004	PrimaryExpression	1		4934967	1					
ANR	4935005	PrimaryExpression	'\\0'		4934967	1					
ANR	4935006	IfStatement	if ( strlen ( tbuf ) )		4934967	4					
ANR	4935007	Condition	strlen ( tbuf )	749:6:19044:19055	4934967	0	True				
ANR	4935008	CallExpression	strlen ( tbuf )		4934967	0					
ANR	4935009	Callee	strlen		4934967	0					
ANR	4935010	Identifier	strlen		4934967	0					
ANR	4935011	ArgumentList	tbuf		4934967	1					
ANR	4935012	Argument	tbuf		4934967	0					
ANR	4935013	Identifier	tbuf		4934967	0					
ANR	4935014	CompoundStatement		5:21:122:122	4934967	1					
ANR	4935015	ExpressionStatement	tbuf [ strlen ( tbuf ) - 1 ] = '\\0'	750:2:19063:19090	4934967	0	True				
ANR	4935016	AssignmentExpression	tbuf [ strlen ( tbuf ) - 1 ] = '\\0'		4934967	0		=			
ANR	4935017	ArrayIndexing	tbuf [ strlen ( tbuf ) - 1 ]		4934967	0					
ANR	4935018	Identifier	tbuf		4934967	0					
ANR	4935019	AdditiveExpression	strlen ( tbuf ) - 1		4934967	1		-			
ANR	4935020	CallExpression	strlen ( tbuf )		4934967	0					
ANR	4935021	Callee	strlen		4934967	0					
ANR	4935022	Identifier	strlen		4934967	0					
ANR	4935023	ArgumentList	tbuf		4934967	1					
ANR	4935024	Argument	tbuf		4934967	0					
ANR	4935025	Identifier	tbuf		4934967	0					
ANR	4935026	PrimaryExpression	1		4934967	1					
ANR	4935027	PrimaryExpression	'\\0'		4934967	1					
ANR	4935028	ReturnStatement	return tbuf ;	752:1:19096:19107	4934967	5	True				
ANR	4935029	Identifier	tbuf		4934967	0					
ANR	4935030	ReturnType	const char *		4934967	1					
ANR	4935031	Identifier	timestr		4934967	2					
ANR	4935032	ParameterList	struct tm & t		4934967	3					
ANR	4935033	Parameter	struct tm & t	744:21:18921:18932	4934967	0	True				
ANR	4935034	ParameterType	struct tm &		4934967	0					
ANR	4935035	Identifier	t		4934967	1					
ANR	4935036	CFGEntryNode	ENTRY		4934967		True				
ANR	4935037	CFGExitNode	EXIT		4934967		True				
ANR	4935038	Symbol	* tbuf		4934967						
ANR	4935039	Symbol	strlen		4934967						
ANR	4935040	Symbol	t		4934967						
ANR	4935041	Symbol	* strlen		4934967						
ANR	4935042	Symbol	tbuf		4934967						
ANR	4935043	Symbol	& t		4934967						
ANR	4935044	Symbol	asctime		4934967						
