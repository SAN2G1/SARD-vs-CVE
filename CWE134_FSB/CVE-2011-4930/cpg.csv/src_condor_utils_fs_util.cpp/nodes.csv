command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4764642	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_fs_util.cpp								
ANR	4764643	Function	detect_nfs_statvfs	89:0:2079:2840							
ANR	4764644	FunctionDef	"detect_nfs_statvfs (const char * path , BOOLEAN * is_nfs)"		4764643	0					
ANR	4764645	CompoundStatement		91:0:2146:2840	4764643	0					
ANR	4764646	IdentifierDeclStatement	int status ;	92:1:2149:2159	4764643	0	True				
ANR	4764647	IdentifierDecl	status		4764643	0					
ANR	4764648	IdentifierDeclType	int		4764643	0					
ANR	4764649	Identifier	status		4764643	1					
ANR	4764650	IdentifierDeclStatement	struct statvfs buf ;	93:1:2162:2180	4764643	1	True				
ANR	4764651	IdentifierDecl	buf		4764643	0					
ANR	4764652	IdentifierDeclType	struct statvfs		4764643	0					
ANR	4764653	Identifier	buf		4764643	1					
ANR	4764654	ExpressionStatement	"status = statvfs ( path , & buf )"	95:1:2184:2214	4764643	2	True				
ANR	4764655	AssignmentExpression	"status = statvfs ( path , & buf )"		4764643	0		=			
ANR	4764656	Identifier	status		4764643	0					
ANR	4764657	CallExpression	"statvfs ( path , & buf )"		4764643	1					
ANR	4764658	Callee	statvfs		4764643	0					
ANR	4764659	Identifier	statvfs		4764643	0					
ANR	4764660	ArgumentList	path		4764643	1					
ANR	4764661	Argument	path		4764643	0					
ANR	4764662	Identifier	path		4764643	0					
ANR	4764663	Argument	& buf		4764643	1					
ANR	4764664	UnaryOperationExpression	& buf		4764643	0					
ANR	4764665	UnaryOperator	&		4764643	0					
ANR	4764666	Identifier	buf		4764643	1					
ANR	4764667	IfStatement	if ( ( status < 0 ) && ( errno == ENOENT ) )		4764643	3					
ANR	4764668	Condition	( status < 0 ) && ( errno == ENOENT )	96:6:2222:2258	4764643	0	True				
ANR	4764669	AndExpression	( status < 0 ) && ( errno == ENOENT )		4764643	0		&&			
ANR	4764670	RelationalExpression	status < 0		4764643	0		<			
ANR	4764671	Identifier	status		4764643	0					
ANR	4764672	PrimaryExpression	0		4764643	1					
ANR	4764673	EqualityExpression	errno == ENOENT		4764643	1		==			
ANR	4764674	Identifier	errno		4764643	0					
ANR	4764675	Identifier	ENOENT		4764643	1					
ANR	4764676	CompoundStatement		8:3:176:191	4764643	1					
ANR	4764677	IdentifierDeclStatement	char * _dir_name ;	98:3:2323:2338	4764643	0	True				
ANR	4764678	IdentifierDecl	* _dir_name		4764643	0					
ANR	4764679	IdentifierDeclType	char *		4764643	0					
ANR	4764680	Identifier	_dir_name		4764643	1					
ANR	4764681	ExpressionStatement	_dir_name = condor_dirname ( path )	99:3:2343:2375	4764643	1	True				
ANR	4764682	AssignmentExpression	_dir_name = condor_dirname ( path )		4764643	0		=			
ANR	4764683	Identifier	_dir_name		4764643	0					
ANR	4764684	CallExpression	condor_dirname ( path )		4764643	1					
ANR	4764685	Callee	condor_dirname		4764643	0					
ANR	4764686	Identifier	condor_dirname		4764643	0					
ANR	4764687	ArgumentList	path		4764643	1					
ANR	4764688	Argument	path		4764643	0					
ANR	4764689	Identifier	path		4764643	0					
ANR	4764690	ExpressionStatement	"status = statvfs ( _dir_name , & buf )"	100:3:2380:2415	4764643	2	True				
ANR	4764691	AssignmentExpression	"status = statvfs ( _dir_name , & buf )"		4764643	0		=			
ANR	4764692	Identifier	status		4764643	0					
ANR	4764693	CallExpression	"statvfs ( _dir_name , & buf )"		4764643	1					
ANR	4764694	Callee	statvfs		4764643	0					
ANR	4764695	Identifier	statvfs		4764643	0					
ANR	4764696	ArgumentList	_dir_name		4764643	1					
ANR	4764697	Argument	_dir_name		4764643	0					
ANR	4764698	Identifier	_dir_name		4764643	0					
ANR	4764699	Argument	& buf		4764643	1					
ANR	4764700	UnaryOperationExpression	& buf		4764643	0					
ANR	4764701	UnaryOperator	&		4764643	0					
ANR	4764702	Identifier	buf		4764643	1					
ANR	4764703	ExpressionStatement	free ( _dir_name )	101:3:2420:2435	4764643	3	True				
ANR	4764704	CallExpression	free ( _dir_name )		4764643	0					
ANR	4764705	Callee	free		4764643	0					
ANR	4764706	Identifier	free		4764643	0					
ANR	4764707	ArgumentList	_dir_name		4764643	1					
ANR	4764708	Argument	_dir_name		4764643	0					
ANR	4764709	Identifier	_dir_name		4764643	0					
ANR	4764710	IfStatement	if ( status < 0 )		4764643	4					
ANR	4764711	Condition	status < 0	104:6:2447:2456	4764643	0	True				
ANR	4764712	RelationalExpression	status < 0		4764643	0		<			
ANR	4764713	Identifier	status		4764643	0					
ANR	4764714	PrimaryExpression	0		4764643	1					
ANR	4764715	CompoundStatement		16:5:321:422	4764643	1					
ANR	4764716	IdentifierDeclStatement	"ifndef FS_UTIL_TEST dprintf ( D_ALWAYS , ""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno ) ) ;"	106:5:2468:2569	4764643	0	True				
ANR	4764717	IdentifierDecl	"dprintf ( D_ALWAYS , ""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno ) )"		4764643	0					
ANR	4764718	IdentifierDeclType	ifndef FS_UTIL_TEST		4764643	0					
ANR	4764719	Identifier	dprintf		4764643	1					
ANR	4764720	Expression	"D_ALWAYS , ""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno )"		4764643	2					
ANR	4764721	Identifier	D_ALWAYS		4764643	0					
ANR	4764722	Expression	"""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno )"		4764643	1					
ANR	4764723	PrimaryExpression	"""statvfs() failed: %d/%s\\n"""		4764643	0					
ANR	4764724	Expression	"errno , strerror ( errno )"		4764643	1					
ANR	4764725	Identifier	errno		4764643	0					
ANR	4764726	CallExpression	strerror ( errno )		4764643	1					
ANR	4764727	Callee	strerror		4764643	0					
ANR	4764728	Identifier	strerror		4764643	0					
ANR	4764729	ArgumentList	errno		4764643	1					
ANR	4764730	Argument	errno		4764643	0					
ANR	4764731	Identifier	errno		4764643	0					
ANR	4764732	Statement	endif	109:5:2576:2580	4764643	1	True				
ANR	4764733	ReturnStatement	return - 1 ;	110:2:2584:2593	4764643	2	True				
ANR	4764734	UnaryOperationExpression	- 1		4764643	0					
ANR	4764735	UnaryOperator	-		4764643	0					
ANR	4764736	PrimaryExpression	1		4764643	1					
ANR	4764737	IfStatement	"if ( ! strncmp ( buf . f_basetype , ""nfs"" , 3 ) )"		4764643	5					
ANR	4764738	Condition	"! strncmp ( buf . f_basetype , ""nfs"" , 3 )"	112:6:2604:2639	4764643	0	True				
ANR	4764739	UnaryOperationExpression	"! strncmp ( buf . f_basetype , ""nfs"" , 3 )"		4764643	0					
ANR	4764740	UnaryOperator	!		4764643	0					
ANR	4764741	CallExpression	"strncmp ( buf . f_basetype , ""nfs"" , 3 )"		4764643	1					
ANR	4764742	Callee	strncmp		4764643	0					
ANR	4764743	Identifier	strncmp		4764643	0					
ANR	4764744	ArgumentList	buf . f_basetype		4764643	1					
ANR	4764745	Argument	buf . f_basetype		4764643	0					
ANR	4764746	MemberAccess	buf . f_basetype		4764643	0					
ANR	4764747	Identifier	buf		4764643	0					
ANR	4764748	Identifier	f_basetype		4764643	1					
ANR	4764749	Argument	"""nfs"""		4764643	1					
ANR	4764750	PrimaryExpression	"""nfs"""		4764643	0					
ANR	4764751	Argument	3		4764643	2					
ANR	4764752	PrimaryExpression	3		4764643	0					
ANR	4764753	CompoundStatement		22:45:496:496	4764643	1					
ANR	4764754	ExpressionStatement	* is_nfs = TRUE	113:2:2647:2661	4764643	0	True				
ANR	4764755	AssignmentExpression	* is_nfs = TRUE		4764643	0		=			
ANR	4764756	UnaryOperationExpression	* is_nfs		4764643	0					
ANR	4764757	UnaryOperator	*		4764643	0					
ANR	4764758	Identifier	is_nfs		4764643	1					
ANR	4764759	Identifier	TRUE		4764643	1					
ANR	4764760	ElseStatement	else		4764643	0					
ANR	4764761	CompoundStatement		24:8:524:524	4764643	0					
ANR	4764762	ExpressionStatement	* is_nfs = FALSE	115:2:2675:2690	4764643	0	True				
ANR	4764763	AssignmentExpression	* is_nfs = FALSE		4764643	0		=			
ANR	4764764	UnaryOperationExpression	* is_nfs		4764643	0					
ANR	4764765	UnaryOperator	*		4764643	0					
ANR	4764766	Identifier	is_nfs		4764643	1					
ANR	4764767	Identifier	FALSE		4764643	1					
ANR	4764768	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""detect_nfs_statvfs: f_basetype = %s -> %s\\n"" , buf . f_basetype , * is_nfs ? ""true"" : ""false"" ) ;"	117:2:2697:2819	4764643	6	True				
ANR	4764769	IdentifierDecl	"printf ( ""detect_nfs_statvfs: f_basetype = %s -> %s\\n"" , buf . f_basetype , * is_nfs ? ""true"" : ""false"" )"		4764643	0					
ANR	4764770	IdentifierDeclType	ifdef FS_UTIL_TEST		4764643	0					
ANR	4764771	Identifier	printf		4764643	1					
ANR	4764772	Expression	"""detect_nfs_statvfs: f_basetype = %s -> %s\\n"" , buf . f_basetype , * is_nfs ? ""true"" : ""false"""		4764643	2					
ANR	4764773	PrimaryExpression	"""detect_nfs_statvfs: f_basetype = %s -> %s\\n"""		4764643	0					
ANR	4764774	Expression	"buf . f_basetype , * is_nfs ? ""true"" : ""false"""		4764643	1					
ANR	4764775	MemberAccess	buf . f_basetype		4764643	0					
ANR	4764776	Identifier	buf		4764643	0					
ANR	4764777	Identifier	f_basetype		4764643	1					
ANR	4764778	ConditionalExpression	"* is_nfs ? ""true"" : ""false"""		4764643	1					
ANR	4764779	Condition	* is_nfs		4764643	0					
ANR	4764780	UnaryOperationExpression	* is_nfs		4764643	0					
ANR	4764781	UnaryOperator	*		4764643	0					
ANR	4764782	Identifier	is_nfs		4764643	1					
ANR	4764783	PrimaryExpression	"""true"""		4764643	1					
ANR	4764784	PrimaryExpression	"""false"""		4764643	2					
ANR	4764785	Statement	endif	120:2:2823:2827	4764643	7	True				
ANR	4764786	ReturnStatement	return 0 ;	121:1:2830:2838	4764643	8	True				
ANR	4764787	PrimaryExpression	0		4764643	0					
ANR	4764788	ReturnType	static int		4764643	1					
ANR	4764789	Identifier	detect_nfs_statvfs		4764643	2					
ANR	4764790	ParameterList	"const char * path , BOOLEAN * is_nfs"		4764643	3					
ANR	4764791	Parameter	const char * path	90:20:2110:2125	4764643	0	True				
ANR	4764792	ParameterType	const char *		4764643	0					
ANR	4764793	Identifier	path		4764643	1					
ANR	4764794	Parameter	BOOLEAN * is_nfs	90:38:2128:2142	4764643	1	True				
ANR	4764795	ParameterType	BOOLEAN *		4764643	0					
ANR	4764796	Identifier	is_nfs		4764643	1					
ANR	4764797	CFGEntryNode	ENTRY		4764643		True				
ANR	4764798	CFGExitNode	EXIT		4764643		True				
ANR	4764799	Symbol	errno		4764643						
ANR	4764800	Symbol	statvfs		4764643						
ANR	4764801	Symbol	_dir_name		4764643						
ANR	4764802	Symbol	is_nfs		4764643						
ANR	4764803	Symbol	condor_dirname		4764643						
ANR	4764804	Symbol	TRUE		4764643						
ANR	4764805	Symbol	ENOENT		4764643						
ANR	4764806	Symbol	printf		4764643						
ANR	4764807	Symbol	path		4764643						
ANR	4764808	Symbol	strncmp		4764643						
ANR	4764809	Symbol	buf		4764643						
ANR	4764810	Symbol	dprintf		4764643						
ANR	4764811	Symbol	buf . f_basetype		4764643						
ANR	4764812	Symbol	FALSE		4764643						
ANR	4764813	Symbol	* is_nfs		4764643						
ANR	4764814	Symbol	& buf		4764643						
ANR	4764815	Symbol	status		4764643						
ANR	4764816	Function	detect_nfs_statfs	125:0:2871:4815							
ANR	4764817	FunctionDef	"detect_nfs_statfs (const char * path , BOOLEAN * is_nfs)"		4764816	0					
ANR	4764818	CompoundStatement		127:0:2937:4815	4764816	0					
ANR	4764819	IdentifierDeclStatement	int status ;	128:1:2940:2950	4764816	0	True				
ANR	4764820	IdentifierDecl	status		4764816	0					
ANR	4764821	IdentifierDeclType	int		4764816	0					
ANR	4764822	Identifier	status		4764816	1					
ANR	4764823	IdentifierDeclStatement	struct statfs buf ;	129:1:2953:2970	4764816	1	True				
ANR	4764824	IdentifierDecl	buf		4764816	0					
ANR	4764825	IdentifierDeclType	struct statfs		4764816	0					
ANR	4764826	Identifier	buf		4764816	1					
ANR	4764827	IfStatement	if ( STATFS_ARGS == 2 )		4764816	2					
ANR	4764828	Condition	STATFS_ARGS == 2	131:6:2979:2994	4764816	0	True				
ANR	4764829	EqualityExpression	STATFS_ARGS == 2		4764816	0		==			
ANR	4764830	Identifier	STATFS_ARGS		4764816	0					
ANR	4764831	PrimaryExpression	2		4764816	1					
ANR	4764832	ExpressionStatement	"status = statfs ( path , & buf )"	132:1:2998:3027	4764816	1	True				
ANR	4764833	AssignmentExpression	"status = statfs ( path , & buf )"		4764816	0		=			
ANR	4764834	Identifier	status		4764816	0					
ANR	4764835	CallExpression	"statfs ( path , & buf )"		4764816	1					
ANR	4764836	Callee	statfs		4764816	0					
ANR	4764837	Identifier	statfs		4764816	0					
ANR	4764838	ArgumentList	path		4764816	1					
ANR	4764839	Argument	path		4764816	0					
ANR	4764840	Identifier	path		4764816	0					
ANR	4764841	Argument	& buf		4764816	1					
ANR	4764842	UnaryOperationExpression	& buf		4764816	0					
ANR	4764843	UnaryOperator	&		4764816	0					
ANR	4764844	Identifier	buf		4764816	1					
ANR	4764845	ElseStatement	else		4764816	0					
ANR	4764846	Statement	error	136:3:3113:3117	4764816	0	True				
ANR	4764847	Statement	elif	133:2:3031:3034	4764816	3	True				
ANR	4764848	Statement	(	133:7:3036:3036	4764816	4	True				
ANR	4764849	Statement	STATFS_ARGS	133:8:3037:3047	4764816	5	True				
ANR	4764850	Statement	==	133:20:3049:3050	4764816	6	True				
ANR	4764851	Statement	4	133:23:3052:3052	4764816	7	True				
ANR	4764852	Statement	)	133:24:3053:3053	4764816	8	True				
ANR	4764853	ExpressionStatement	"status = statfs ( path , & buf , sizeof ( buf ) , 0 )"	134:1:3056:3101	4764816	9	True				
ANR	4764854	AssignmentExpression	"status = statfs ( path , & buf , sizeof ( buf ) , 0 )"		4764816	0		=			
ANR	4764855	Identifier	status		4764816	0					
ANR	4764856	CallExpression	"statfs ( path , & buf , sizeof ( buf ) , 0 )"		4764816	1					
ANR	4764857	Callee	statfs		4764816	0					
ANR	4764858	Identifier	statfs		4764816	0					
ANR	4764859	ArgumentList	path		4764816	1					
ANR	4764860	Argument	path		4764816	0					
ANR	4764861	Identifier	path		4764816	0					
ANR	4764862	Argument	& buf		4764816	1					
ANR	4764863	UnaryOperationExpression	& buf		4764816	0					
ANR	4764864	UnaryOperator	&		4764816	0					
ANR	4764865	Identifier	buf		4764816	1					
ANR	4764866	Argument	sizeof ( buf )		4764816	2					
ANR	4764867	SizeofExpression	sizeof ( buf )		4764816	0					
ANR	4764868	Sizeof	sizeof		4764816	0					
ANR	4764869	SizeofOperand	buf		4764816	1					
ANR	4764870	Argument	0		4764816	3					
ANR	4764871	PrimaryExpression	0		4764816	0					
ANR	4764872	Statement	"""Unknown statfs() implemenation"""	136:9:3119:3150	4764816	10	True				
ANR	4764873	Statement	endif	137:2:3154:3158	4764816	11	True				
ANR	4764874	IfStatement	if ( ( status < 0 ) && ( errno == ENOENT ) )		4764816	12					
ANR	4764875	Condition	( status < 0 ) && ( errno == ENOENT )	139:6:3167:3203	4764816	0	True				
ANR	4764876	AndExpression	( status < 0 ) && ( errno == ENOENT )		4764816	0		&&			
ANR	4764877	RelationalExpression	status < 0		4764816	0		<			
ANR	4764878	Identifier	status		4764816	0					
ANR	4764879	PrimaryExpression	0		4764816	1					
ANR	4764880	EqualityExpression	errno == ENOENT		4764816	1		==			
ANR	4764881	Identifier	errno		4764816	0					
ANR	4764882	Identifier	ENOENT		4764816	1					
ANR	4764883	CompoundStatement		26:2:658:682	4764816	1					
ANR	4764884	IdentifierDeclStatement	char * _dir_name ;	141:3:3268:3283	4764816	0	True				
ANR	4764885	IdentifierDecl	* _dir_name		4764816	0					
ANR	4764886	IdentifierDeclType	char *		4764816	0					
ANR	4764887	Identifier	_dir_name		4764816	1					
ANR	4764888	ExpressionStatement	_dir_name = condor_dirname ( path )	142:3:3288:3320	4764816	1	True				
ANR	4764889	AssignmentExpression	_dir_name = condor_dirname ( path )		4764816	0		=			
ANR	4764890	Identifier	_dir_name		4764816	0					
ANR	4764891	CallExpression	condor_dirname ( path )		4764816	1					
ANR	4764892	Callee	condor_dirname		4764816	0					
ANR	4764893	Identifier	condor_dirname		4764816	0					
ANR	4764894	ArgumentList	path		4764816	1					
ANR	4764895	Argument	path		4764816	0					
ANR	4764896	Identifier	path		4764816	0					
ANR	4764897	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""checking %s instead...\\n"" , _dir_name ) ;"	143:2:3324:3391	4764816	2	True				
ANR	4764898	IdentifierDecl	"printf ( ""checking %s instead...\\n"" , _dir_name )"		4764816	0					
ANR	4764899	IdentifierDeclType	ifdef FS_UTIL_TEST		4764816	0					
ANR	4764900	Identifier	printf		4764816	1					
ANR	4764901	Expression	"""checking %s instead...\\n"" , _dir_name"		4764816	2					
ANR	4764902	PrimaryExpression	"""checking %s instead...\\n"""		4764816	0					
ANR	4764903	Identifier	_dir_name		4764816	1					
ANR	4764904	Statement	endif	145:2:3395:3399	4764816	3	True				
ANR	4764905	IfStatement	if ( STATFS_ARGS == 2 )		4764816	4					
ANR	4764906	Condition	STATFS_ARGS == 2	146:6:3407:3422	4764816	0	True				
ANR	4764907	EqualityExpression	STATFS_ARGS == 2		4764816	0		==			
ANR	4764908	Identifier	STATFS_ARGS		4764816	0					
ANR	4764909	PrimaryExpression	2		4764816	1					
ANR	4764910	ExpressionStatement	"status = statfs ( _dir_name , & buf )"	147:3:3428:3462	4764816	1	True				
ANR	4764911	AssignmentExpression	"status = statfs ( _dir_name , & buf )"		4764816	0		=			
ANR	4764912	Identifier	status		4764816	0					
ANR	4764913	CallExpression	"statfs ( _dir_name , & buf )"		4764816	1					
ANR	4764914	Callee	statfs		4764816	0					
ANR	4764915	Identifier	statfs		4764816	0					
ANR	4764916	ArgumentList	_dir_name		4764816	1					
ANR	4764917	Argument	_dir_name		4764816	0					
ANR	4764918	Identifier	_dir_name		4764816	0					
ANR	4764919	Argument	& buf		4764816	1					
ANR	4764920	UnaryOperationExpression	& buf		4764816	0					
ANR	4764921	UnaryOperator	&		4764816	0					
ANR	4764922	Identifier	buf		4764816	1					
ANR	4764923	ElseStatement	else		4764816	0					
ANR	4764924	Statement	error	151:3:3555:3559	4764816	0	True				
ANR	4764925	Statement	elif	148:2:3466:3469	4764816	5	True				
ANR	4764926	Statement	(	148:7:3471:3471	4764816	6	True				
ANR	4764927	Statement	STATFS_ARGS	148:8:3472:3482	4764816	7	True				
ANR	4764928	Statement	==	148:20:3484:3485	4764816	8	True				
ANR	4764929	Statement	4	148:23:3487:3487	4764816	9	True				
ANR	4764930	Statement	)	148:24:3488:3488	4764816	10	True				
ANR	4764931	ExpressionStatement	"status = statfs ( _dir_name , & buf , sizeof ( buf ) , 0 )"	149:3:3493:3543	4764816	11	True				
ANR	4764932	AssignmentExpression	"status = statfs ( _dir_name , & buf , sizeof ( buf ) , 0 )"		4764816	0		=			
ANR	4764933	Identifier	status		4764816	0					
ANR	4764934	CallExpression	"statfs ( _dir_name , & buf , sizeof ( buf ) , 0 )"		4764816	1					
ANR	4764935	Callee	statfs		4764816	0					
ANR	4764936	Identifier	statfs		4764816	0					
ANR	4764937	ArgumentList	_dir_name		4764816	1					
ANR	4764938	Argument	_dir_name		4764816	0					
ANR	4764939	Identifier	_dir_name		4764816	0					
ANR	4764940	Argument	& buf		4764816	1					
ANR	4764941	UnaryOperationExpression	& buf		4764816	0					
ANR	4764942	UnaryOperator	&		4764816	0					
ANR	4764943	Identifier	buf		4764816	1					
ANR	4764944	Argument	sizeof ( buf )		4764816	2					
ANR	4764945	SizeofExpression	sizeof ( buf )		4764816	0					
ANR	4764946	Sizeof	sizeof		4764816	0					
ANR	4764947	SizeofOperand	buf		4764816	1					
ANR	4764948	Argument	0		4764816	3					
ANR	4764949	PrimaryExpression	0		4764816	0					
ANR	4764950	Statement	"""Unknown statfs() implemenation"""	151:9:3561:3592	4764816	12	True				
ANR	4764951	IdentifierDeclStatement	endif free ( _dir_name ) ;	152:2:3596:3620	4764816	13	True				
ANR	4764952	IdentifierDecl	free ( _dir_name )		4764816	0					
ANR	4764953	IdentifierDeclType	endif		4764816	0					
ANR	4764954	Identifier	free		4764816	1					
ANR	4764955	Identifier	_dir_name		4764816	2					
ANR	4764956	IfStatement	if ( status < 0 )		4764816	13					
ANR	4764957	Condition	status < 0	156:6:3632:3641	4764816	0	True				
ANR	4764958	RelationalExpression	status < 0		4764816	0		<			
ANR	4764959	Identifier	status		4764816	0					
ANR	4764960	PrimaryExpression	0		4764816	1					
ANR	4764961	CompoundStatement		30:19:707:707	4764816	1					
ANR	4764962	Statement	if	157:4:3651:3652	4764816	0	True				
ANR	4764963	Statement	(	157:7:3654:3654	4764816	1	True				
ANR	4764964	Statement	!	157:8:3655:3655	4764816	2	True				
ANR	4764965	Statement	defined	157:9:3656:3662	4764816	3	True				
ANR	4764966	Statement	FS_UTIL_TEST	157:17:3664:3675	4764816	4	True				
ANR	4764967	Statement	)	157:30:3677:3677	4764816	5	True				
ANR	4764968	ExpressionStatement	"dprintf ( D_ALWAYS , ""statfs(%s) failed: %d/%s\\n"" , path , errno , strerror ( errno ) )"	158:2:3681:3767	4764816	6	True				
ANR	4764969	CallExpression	"dprintf ( D_ALWAYS , ""statfs(%s) failed: %d/%s\\n"" , path , errno , strerror ( errno ) )"		4764816	0					
ANR	4764970	Callee	dprintf		4764816	0					
ANR	4764971	Identifier	dprintf		4764816	0					
ANR	4764972	ArgumentList	D_ALWAYS		4764816	1					
ANR	4764973	Argument	D_ALWAYS		4764816	0					
ANR	4764974	Identifier	D_ALWAYS		4764816	0					
ANR	4764975	Argument	"""statfs(%s) failed: %d/%s\\n"""		4764816	1					
ANR	4764976	PrimaryExpression	"""statfs(%s) failed: %d/%s\\n"""		4764816	0					
ANR	4764977	Argument	path		4764816	2					
ANR	4764978	Identifier	path		4764816	0					
ANR	4764979	Argument	errno		4764816	3					
ANR	4764980	Identifier	errno		4764816	0					
ANR	4764981	Argument	strerror ( errno )		4764816	4					
ANR	4764982	CallExpression	strerror ( errno )		4764816	0					
ANR	4764983	Callee	strerror		4764816	0					
ANR	4764984	Identifier	strerror		4764816	0					
ANR	4764985	ArgumentList	errno		4764816	1					
ANR	4764986	Argument	errno		4764816	0					
ANR	4764987	Identifier	errno		4764816	0					
ANR	4764988	IfStatement	if ( EOVERFLOW == errno )		4764816	7					
ANR	4764989	Condition	EOVERFLOW == errno	160:6:3775:3792	4764816	0	True				
ANR	4764990	EqualityExpression	EOVERFLOW == errno		4764816	0		==			
ANR	4764991	Identifier	EOVERFLOW		4764816	0					
ANR	4764992	Identifier	errno		4764816	1					
ANR	4764993	CompoundStatement		34:26:857:857	4764816	1					
ANR	4764994	Statement	dprintf	161:3:3800:3806	4764816	0	True				
ANR	4764995	Statement	(	161:10:3807:3807	4764816	1	True				
ANR	4764996	Statement	D_ALWAYS	161:11:3808:3815	4764816	2	True				
ANR	4764997	Statement	","	161:19:3816:3816	4764816	3	True				
ANR	4764998	Statement	"""statfs overflow, if %s is a large volume make """	162:5:3823:3870	4764816	4	True				
ANR	4764999	Statement	"""sure you have a 64 bit version of Condor\\n"""	163:5:3877:3920	4764816	5	True				
ANR	4765000	Statement	","	163:49:3921:3921	4764816	6	True				
ANR	4765001	Statement	path	163:51:3923:3926	4764816	7	True				
ANR	4765002	Statement	)	163:55:3927:3927	4764816	8	True				
ANR	4765003	ExpressionStatement		163:56:3928:3928	4764816	9	True				
ANR	4765004	Statement	endif	165:4:3938:3942	4764816	8	True				
ANR	4765005	ReturnStatement	return - 1 ;	166:2:3946:3955	4764816	9	True				
ANR	4765006	UnaryOperationExpression	- 1		4764816	0					
ANR	4765007	UnaryOperator	-		4764816	0					
ANR	4765008	PrimaryExpression	1		4764816	1					
ANR	4765009	ElseStatement	else		4764816	0					
ANR	4765010	Statement	error	199:2:4751:4755	4764816	0	True				
ANR	4765011	Statement	if	170:2:4006:4007	4764816	14	True				
ANR	4765012	Statement	defined	170:5:4009:4015	4764816	15	True				
ANR	4765013	Statement	HAVE_STRUCT_STATFS_F_FSTYPENAME	170:13:4017:4047	4764816	16	True				
ANR	4765014	IfStatement	"if ( ! strncmp ( buf . f_fstypename , ""nfs"" , 3 ) )"		4764816	17					
ANR	4765015	Condition	"! strncmp ( buf . f_fstypename , ""nfs"" , 3 )"	171:6:4055:4092	4764816	0	True				
ANR	4765016	UnaryOperationExpression	"! strncmp ( buf . f_fstypename , ""nfs"" , 3 )"		4764816	0					
ANR	4765017	UnaryOperator	!		4764816	0					
ANR	4765018	CallExpression	"strncmp ( buf . f_fstypename , ""nfs"" , 3 )"		4764816	1					
ANR	4765019	Callee	strncmp		4764816	0					
ANR	4765020	Identifier	strncmp		4764816	0					
ANR	4765021	ArgumentList	buf . f_fstypename		4764816	1					
ANR	4765022	Argument	buf . f_fstypename		4764816	0					
ANR	4765023	MemberAccess	buf . f_fstypename		4764816	0					
ANR	4765024	Identifier	buf		4764816	0					
ANR	4765025	Identifier	f_fstypename		4764816	1					
ANR	4765026	Argument	"""nfs"""		4764816	1					
ANR	4765027	PrimaryExpression	"""nfs"""		4764816	0					
ANR	4765028	Argument	3		4764816	2					
ANR	4765029	PrimaryExpression	3		4764816	0					
ANR	4765030	CompoundStatement		45:47:1158:1158	4764816	1					
ANR	4765031	ExpressionStatement	* is_nfs = TRUE	172:2:4100:4114	4764816	0	True				
ANR	4765032	AssignmentExpression	* is_nfs = TRUE		4764816	0		=			
ANR	4765033	UnaryOperationExpression	* is_nfs		4764816	0					
ANR	4765034	UnaryOperator	*		4764816	0					
ANR	4765035	Identifier	is_nfs		4764816	1					
ANR	4765036	Identifier	TRUE		4764816	1					
ANR	4765037	ElseStatement	else		4764816	0					
ANR	4765038	CompoundStatement		47:8:1186:1186	4764816	0					
ANR	4765039	ExpressionStatement	* is_nfs = FALSE	174:2:4128:4143	4764816	0	True				
ANR	4765040	AssignmentExpression	* is_nfs = FALSE		4764816	0		=			
ANR	4765041	UnaryOperationExpression	* is_nfs		4764816	0					
ANR	4765042	UnaryOperator	*		4764816	0					
ANR	4765043	Identifier	is_nfs		4764816	1					
ANR	4765044	Identifier	FALSE		4764816	1					
ANR	4765045	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""detect_nfs_statfs: f_fstypename = %s -> %s\\n"" , buf . f_fstypename , * is_nfs ? ""true"" : ""false"" ) ;"	176:3:4151:4276	4764816	18	True				
ANR	4765046	IdentifierDecl	"printf ( ""detect_nfs_statfs: f_fstypename = %s -> %s\\n"" , buf . f_fstypename , * is_nfs ? ""true"" : ""false"" )"		4764816	0					
ANR	4765047	IdentifierDeclType	ifdef FS_UTIL_TEST		4764816	0					
ANR	4765048	Identifier	printf		4764816	1					
ANR	4765049	Expression	"""detect_nfs_statfs: f_fstypename = %s -> %s\\n"" , buf . f_fstypename , * is_nfs ? ""true"" : ""false"""		4764816	2					
ANR	4765050	PrimaryExpression	"""detect_nfs_statfs: f_fstypename = %s -> %s\\n"""		4764816	0					
ANR	4765051	Expression	"buf . f_fstypename , * is_nfs ? ""true"" : ""false"""		4764816	1					
ANR	4765052	MemberAccess	buf . f_fstypename		4764816	0					
ANR	4765053	Identifier	buf		4764816	0					
ANR	4765054	Identifier	f_fstypename		4764816	1					
ANR	4765055	ConditionalExpression	"* is_nfs ? ""true"" : ""false"""		4764816	1					
ANR	4765056	Condition	* is_nfs		4764816	0					
ANR	4765057	UnaryOperationExpression	* is_nfs		4764816	0					
ANR	4765058	UnaryOperator	*		4764816	0					
ANR	4765059	Identifier	is_nfs		4764816	1					
ANR	4765060	PrimaryExpression	"""true"""		4764816	1					
ANR	4765061	PrimaryExpression	"""false"""		4764816	2					
ANR	4765062	Statement	endif	179:3:4281:4285	4764816	19	True				
ANR	4765063	Statement	elif	182:2:4323:4326	4764816	20	True				
ANR	4765064	Statement	defined	182:7:4328:4334	4764816	21	True				
ANR	4765065	Statement	HAVE_STRUCT_STATFS_F_TYPE	182:15:4336:4360	4764816	22	True				
ANR	4765066	IfStatement	if ( buf . f_type == NFS_SUPER_MAGIC )		4764816	23					
ANR	4765067	Condition	buf . f_type == NFS_SUPER_MAGIC	183:6:4368:4396	4764816	0	True				
ANR	4765068	EqualityExpression	buf . f_type == NFS_SUPER_MAGIC		4764816	0		==			
ANR	4765069	MemberAccess	buf . f_type		4764816	0					
ANR	4765070	Identifier	buf		4764816	0					
ANR	4765071	Identifier	f_type		4764816	1					
ANR	4765072	Identifier	NFS_SUPER_MAGIC		4764816	1					
ANR	4765073	CompoundStatement		57:38:1462:1462	4764816	1					
ANR	4765074	ExpressionStatement	* is_nfs = TRUE	184:2:4404:4418	4764816	0	True				
ANR	4765075	AssignmentExpression	* is_nfs = TRUE		4764816	0		=			
ANR	4765076	UnaryOperationExpression	* is_nfs		4764816	0					
ANR	4765077	UnaryOperator	*		4764816	0					
ANR	4765078	Identifier	is_nfs		4764816	1					
ANR	4765079	Identifier	TRUE		4764816	1					
ANR	4765080	ElseStatement	else		4764816	0					
ANR	4765081	CompoundStatement		59:8:1490:1490	4764816	0					
ANR	4765082	ExpressionStatement	* is_nfs = FALSE	186:2:4432:4447	4764816	0	True				
ANR	4765083	AssignmentExpression	* is_nfs = FALSE		4764816	0		=			
ANR	4765084	UnaryOperationExpression	* is_nfs		4764816	0					
ANR	4765085	UnaryOperator	*		4764816	0					
ANR	4765086	Identifier	is_nfs		4764816	1					
ANR	4765087	Identifier	FALSE		4764816	1					
ANR	4765088	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""detect_nfs_statfs: f_type = %x -> %s\\n"" , buf . f_type , * is_nfs ? ""true"" : ""false"" ) ;"	188:3:4455:4568	4764816	24	True				
ANR	4765089	IdentifierDecl	"printf ( ""detect_nfs_statfs: f_type = %x -> %s\\n"" , buf . f_type , * is_nfs ? ""true"" : ""false"" )"		4764816	0					
ANR	4765090	IdentifierDeclType	ifdef FS_UTIL_TEST		4764816	0					
ANR	4765091	Identifier	printf		4764816	1					
ANR	4765092	Expression	"""detect_nfs_statfs: f_type = %x -> %s\\n"" , buf . f_type , * is_nfs ? ""true"" : ""false"""		4764816	2					
ANR	4765093	PrimaryExpression	"""detect_nfs_statfs: f_type = %x -> %s\\n"""		4764816	0					
ANR	4765094	Expression	"buf . f_type , * is_nfs ? ""true"" : ""false"""		4764816	1					
ANR	4765095	MemberAccess	buf . f_type		4764816	0					
ANR	4765096	Identifier	buf		4764816	0					
ANR	4765097	Identifier	f_type		4764816	1					
ANR	4765098	ConditionalExpression	"* is_nfs ? ""true"" : ""false"""		4764816	1					
ANR	4765099	Condition	* is_nfs		4764816	0					
ANR	4765100	UnaryOperationExpression	* is_nfs		4764816	0					
ANR	4765101	UnaryOperator	*		4764816	0					
ANR	4765102	Identifier	is_nfs		4764816	1					
ANR	4765103	PrimaryExpression	"""true"""		4764816	1					
ANR	4765104	PrimaryExpression	"""false"""		4764816	2					
ANR	4765105	Statement	endif	191:3:4573:4577	4764816	25	True				
ANR	4765106	Statement	elif	194:2:4623:4626	4764816	26	True				
ANR	4765107	Statement	defined	194:7:4628:4634	4764816	27	True				
ANR	4765108	Statement	HAVE_STRUCT_STATFS_F_FSTYP	194:15:4636:4661	4764816	28	True				
ANR	4765109	Statement	error	195:4:4667:4671	4764816	29	True				
ANR	4765110	Statement	"""Don't know how to evaluate f_fstyp yet"""	195:10:4673:4712	4764816	30	True				
ANR	4765111	Statement	"""Neither F_TYPE or F_FSTYP defined!"""	199:8:4757:4792	4764816	31	True				
ANR	4765112	Statement	endif	201:2:4797:4801	4764816	32	True				
ANR	4765113	ReturnStatement	return 0 ;	203:1:4805:4813	4764816	33	True				
ANR	4765114	PrimaryExpression	0		4764816	0					
ANR	4765115	ReturnType	static int		4764816	1					
ANR	4765116	Identifier	detect_nfs_statfs		4764816	2					
ANR	4765117	ParameterList	"const char * path , BOOLEAN * is_nfs"		4764816	3					
ANR	4765118	Parameter	const char * path	126:19:2901:2916	4764816	0	True				
ANR	4765119	ParameterType	const char *		4764816	0					
ANR	4765120	Identifier	path		4764816	1					
ANR	4765121	Parameter	BOOLEAN * is_nfs	126:37:2919:2933	4764816	1	True				
ANR	4765122	ParameterType	BOOLEAN *		4764816	0					
ANR	4765123	Identifier	is_nfs		4764816	1					
ANR	4765124	CFGEntryNode	ENTRY		4764816		True				
ANR	4765125	CFGExitNode	EXIT		4764816		True				
ANR	4765126	Symbol	errno		4764816						
ANR	4765127	Symbol	_dir_name		4764816						
ANR	4765128	Symbol	buf . f_type		4764816						
ANR	4765129	Symbol	is_nfs		4764816						
ANR	4765130	Symbol	condor_dirname		4764816						
ANR	4765131	Symbol	D_ALWAYS		4764816						
ANR	4765132	Symbol	TRUE		4764816						
ANR	4765133	Symbol	STATFS_ARGS		4764816						
ANR	4765134	Symbol	ENOENT		4764816						
ANR	4765135	Symbol	statfs		4764816						
ANR	4765136	Symbol	EOVERFLOW		4764816						
ANR	4765137	Symbol	buf . f_fstypename		4764816						
ANR	4765138	Symbol	printf		4764816						
ANR	4765139	Symbol	strerror		4764816						
ANR	4765140	Symbol	path		4764816						
ANR	4765141	Symbol	strncmp		4764816						
ANR	4765142	Symbol	buf		4764816						
ANR	4765143	Symbol	FALSE		4764816						
ANR	4765144	Symbol	* is_nfs		4764816						
ANR	4765145	Symbol	free		4764816						
ANR	4765146	Symbol	& buf		4764816						
ANR	4765147	Symbol	status		4764816						
ANR	4765148	Symbol	NFS_SUPER_MAGIC		4764816						
ANR	4765149	Function	fs_detect_nfs	207:0:4825:5137							
ANR	4765150	FunctionDef	"fs_detect_nfs (const char * path , BOOLEAN * is_nfs)"		4765149	0					
ANR	4765151	CompoundStatement		210:0:4886:5137	4765149	0					
ANR	4765152	ReturnStatement	"return detect_nfs_statfs ( path , is_nfs ) ;"	212:1:4912:4952	4765149	0	True				
ANR	4765153	CallExpression	"detect_nfs_statfs ( path , is_nfs )"		4765149	0					
ANR	4765154	Callee	detect_nfs_statfs		4765149	0					
ANR	4765155	Identifier	detect_nfs_statfs		4765149	0					
ANR	4765156	ArgumentList	path		4765149	1					
ANR	4765157	Argument	path		4765149	0					
ANR	4765158	Identifier	path		4765149	0					
ANR	4765159	Argument	is_nfs		4765149	1					
ANR	4765160	Identifier	is_nfs		4765149	0					
ANR	4765161	ReturnType	int		4765149	1					
ANR	4765162	Identifier	fs_detect_nfs		4765149	2					
ANR	4765163	ParameterList	"const char * path , BOOLEAN * is_nfs"		4765149	3					
ANR	4765164	Parameter	const char * path	208:15:4844:4859	4765149	0	True				
ANR	4765165	ParameterType	const char *		4765149	0					
ANR	4765166	Identifier	path		4765149	1					
ANR	4765167	Parameter	BOOLEAN * is_nfs	209:6:4868:4882	4765149	1	True				
ANR	4765168	ParameterType	BOOLEAN *		4765149	0					
ANR	4765169	Identifier	is_nfs		4765149	1					
ANR	4765170	CFGEntryNode	ENTRY		4765149		True				
ANR	4765171	CFGExitNode	EXIT		4765149		True				
ANR	4765172	Symbol	path		4765149						
ANR	4765173	Symbol	detect_nfs_statfs		4765149						
ANR	4765174	Symbol	is_nfs		4765149						
ANR	4765175	Function	main	226:0:5160:5528							
ANR	4765176	FunctionDef	"main (int argc , const char * argv [ ])"		4765175	0					
ANR	4765177	CompoundStatement		228:0:5201:5528	4765175	0					
ANR	4765178	IdentifierDeclStatement	const char * path = argv [ 1 ] ;	229:1:5204:5230	4765175	0	True				
ANR	4765179	IdentifierDecl	* path = argv [ 1 ]		4765175	0					
ANR	4765180	IdentifierDeclType	const char *		4765175	0					
ANR	4765181	Identifier	path		4765175	1					
ANR	4765182	AssignmentExpression	* path = argv [ 1 ]		4765175	2		=			
ANR	4765183	Identifier	path		4765175	0					
ANR	4765184	ArrayIndexing	argv [ 1 ]		4765175	1					
ANR	4765185	Identifier	argv		4765175	0					
ANR	4765186	PrimaryExpression	1		4765175	1					
ANR	4765187	IdentifierDeclStatement	BOOLEAN is_nfs ;	230:1:5233:5247	4765175	1	True				
ANR	4765188	IdentifierDecl	is_nfs		4765175	0					
ANR	4765189	IdentifierDeclType	BOOLEAN		4765175	0					
ANR	4765190	Identifier	is_nfs		4765175	1					
ANR	4765191	IfStatement	if ( argc != 2 )		4765175	2					
ANR	4765192	Condition	argc != 2	232:6:5256:5264	4765175	0	True				
ANR	4765193	EqualityExpression	argc != 2		4765175	0		!=			
ANR	4765194	Identifier	argc		4765175	0					
ANR	4765195	PrimaryExpression	2		4765175	1					
ANR	4765196	CompoundStatement		5:18:66:66	4765175	1					
ANR	4765197	ExpressionStatement	"fprintf ( stderr , ""usage: fs_util_test path\\n"" )"	233:2:5272:5319	4765175	0	True				
ANR	4765198	CallExpression	"fprintf ( stderr , ""usage: fs_util_test path\\n"" )"		4765175	0					
ANR	4765199	Callee	fprintf		4765175	0					
ANR	4765200	Identifier	fprintf		4765175	0					
ANR	4765201	ArgumentList	stderr		4765175	1					
ANR	4765202	Argument	stderr		4765175	0					
ANR	4765203	Identifier	stderr		4765175	0					
ANR	4765204	Argument	"""usage: fs_util_test path\\n"""		4765175	1					
ANR	4765205	PrimaryExpression	"""usage: fs_util_test path\\n"""		4765175	0					
ANR	4765206	ExpressionStatement	exit ( 1 )	234:2:5323:5332	4765175	1	True				
ANR	4765207	CallExpression	exit ( 1 )		4765175	0					
ANR	4765208	Callee	exit		4765175	0					
ANR	4765209	Identifier	exit		4765175	0					
ANR	4765210	ArgumentList	1		4765175	1					
ANR	4765211	Argument	1		4765175	0					
ANR	4765212	PrimaryExpression	1		4765175	0					
ANR	4765213	IfStatement	"if ( fs_detect_nfs ( path , & is_nfs ) < 0 )"		4765175	3					
ANR	4765214	Condition	"fs_detect_nfs ( path , & is_nfs ) < 0"	236:6:5343:5376	4765175	0	True				
ANR	4765215	RelationalExpression	"fs_detect_nfs ( path , & is_nfs ) < 0"		4765175	0		<			
ANR	4765216	CallExpression	"fs_detect_nfs ( path , & is_nfs )"		4765175	0					
ANR	4765217	Callee	fs_detect_nfs		4765175	0					
ANR	4765218	Identifier	fs_detect_nfs		4765175	0					
ANR	4765219	ArgumentList	path		4765175	1					
ANR	4765220	Argument	path		4765175	0					
ANR	4765221	Identifier	path		4765175	0					
ANR	4765222	Argument	& is_nfs		4765175	1					
ANR	4765223	UnaryOperationExpression	& is_nfs		4765175	0					
ANR	4765224	UnaryOperator	&		4765175	0					
ANR	4765225	Identifier	is_nfs		4765175	1					
ANR	4765226	PrimaryExpression	0		4765175	1					
ANR	4765227	CompoundStatement		9:43:178:178	4765175	1					
ANR	4765228	ExpressionStatement	"fprintf ( stderr , ""fs_detect_nfs(%s) failed\\n"" , path )"	237:2:5384:5437	4765175	0	True				
ANR	4765229	CallExpression	"fprintf ( stderr , ""fs_detect_nfs(%s) failed\\n"" , path )"		4765175	0					
ANR	4765230	Callee	fprintf		4765175	0					
ANR	4765231	Identifier	fprintf		4765175	0					
ANR	4765232	ArgumentList	stderr		4765175	1					
ANR	4765233	Argument	stderr		4765175	0					
ANR	4765234	Identifier	stderr		4765175	0					
ANR	4765235	Argument	"""fs_detect_nfs(%s) failed\\n"""		4765175	1					
ANR	4765236	PrimaryExpression	"""fs_detect_nfs(%s) failed\\n"""		4765175	0					
ANR	4765237	Argument	path		4765175	2					
ANR	4765238	Identifier	path		4765175	0					
ANR	4765239	ExpressionStatement	exit ( 1 )	238:2:5441:5450	4765175	1	True				
ANR	4765240	CallExpression	exit ( 1 )		4765175	0					
ANR	4765241	Callee	exit		4765175	0					
ANR	4765242	Identifier	exit		4765175	0					
ANR	4765243	ArgumentList	1		4765175	1					
ANR	4765244	Argument	1		4765175	0					
ANR	4765245	PrimaryExpression	1		4765175	0					
ANR	4765246	ExpressionStatement	"printf ( ""%s %s on NFS\\n"" , path , is_nfs ? ""is"" : ""is not"" )"	240:1:5456:5514	4765175	4	True				
ANR	4765247	CallExpression	"printf ( ""%s %s on NFS\\n"" , path , is_nfs ? ""is"" : ""is not"" )"		4765175	0					
ANR	4765248	Callee	printf		4765175	0					
ANR	4765249	Identifier	printf		4765175	0					
ANR	4765250	ArgumentList	"""%s %s on NFS\\n"""		4765175	1					
ANR	4765251	Argument	"""%s %s on NFS\\n"""		4765175	0					
ANR	4765252	PrimaryExpression	"""%s %s on NFS\\n"""		4765175	0					
ANR	4765253	Argument	path		4765175	1					
ANR	4765254	Identifier	path		4765175	0					
ANR	4765255	Argument	"is_nfs ? ""is"" : ""is not"""		4765175	2					
ANR	4765256	ConditionalExpression	"is_nfs ? ""is"" : ""is not"""		4765175	0					
ANR	4765257	Condition	is_nfs		4765175	0					
ANR	4765258	Identifier	is_nfs		4765175	0					
ANR	4765259	PrimaryExpression	"""is"""		4765175	1					
ANR	4765260	PrimaryExpression	"""is not"""		4765175	2					
ANR	4765261	ReturnStatement	return 0 ;	242:1:5518:5526	4765175	5	True				
ANR	4765262	PrimaryExpression	0		4765175	0					
ANR	4765263	ReturnType	int		4765175	1					
ANR	4765264	Identifier	main		4765175	2					
ANR	4765265	ParameterList	"int argc , const char * argv [ ]"		4765175	3					
ANR	4765266	Parameter	int argc	227:6:5170:5177	4765175	0	True				
ANR	4765267	ParameterType	int		4765175	0					
ANR	4765268	Identifier	argc		4765175	1					
ANR	4765269	Parameter	const char * argv [ ]	227:16:5180:5197	4765175	1	True				
ANR	4765270	ParameterType	const char * [ ]		4765175	0					
ANR	4765271	Identifier	argv		4765175	1					
ANR	4765272	CFGEntryNode	ENTRY		4765175		True				
ANR	4765273	CFGExitNode	EXIT		4765175		True				
ANR	4765274	Symbol	argc		4765175						
ANR	4765275	Symbol	path		4765175						
ANR	4765276	Symbol	& is_nfs		4765175						
ANR	4765277	Symbol	is_nfs		4765175						
ANR	4765278	Symbol	* argv		4765175						
ANR	4765279	Symbol	stderr		4765175						
ANR	4765280	Symbol	fs_detect_nfs		4765175						
ANR	4765281	Symbol	argv		4765175						
