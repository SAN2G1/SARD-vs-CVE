command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3515959	File	data/converged/CVE-2011-4930_htcondor/src_condor_master.V6_MasterPluginManager.cpp								
ANR	3515960	Function	MasterPluginManager :: Initialize	28:0:755:949							
ANR	3515961	FunctionDef	MasterPluginManager :: Initialize ()		3515960	0					
ANR	3515962	CompoundStatement		30:0:794:949	3515960	0					
ANR	3515963	IdentifierDeclStatement	MasterPlugin * plugin ;	31:1:797:817	3515960	0	True				
ANR	3515964	IdentifierDecl	* plugin		3515960	0					
ANR	3515965	IdentifierDeclType	MasterPlugin *		3515960	0					
ANR	3515966	Identifier	plugin		3515960	1					
ANR	3515967	IdentifierDeclStatement	SimpleList < MasterPlugin * > plugins = getPlugins ( ) ;	32:1:820:869	3515960	1	True				
ANR	3515968	IdentifierDecl	plugins = getPlugins ( )		3515960	0					
ANR	3515969	IdentifierDeclType	SimpleList < MasterPlugin * >		3515960	0					
ANR	3515970	Identifier	plugins		3515960	1					
ANR	3515971	AssignmentExpression	plugins = getPlugins ( )		3515960	2		=			
ANR	3515972	Identifier	plugins		3515960	0					
ANR	3515973	CallExpression	getPlugins ( )		3515960	1					
ANR	3515974	Callee	getPlugins		3515960	0					
ANR	3515975	Identifier	getPlugins		3515960	0					
ANR	3515976	ArgumentList			3515960	1					
ANR	3515977	ExpressionStatement	plugins . Rewind ( )	33:1:872:888	3515960	2	True				
ANR	3515978	CallExpression	plugins . Rewind ( )		3515960	0					
ANR	3515979	Callee	plugins . Rewind		3515960	0					
ANR	3515980	MemberAccess	plugins . Rewind		3515960	0					
ANR	3515981	Identifier	plugins		3515960	0					
ANR	3515982	Identifier	Rewind		3515960	1					
ANR	3515983	ArgumentList			3515960	1					
ANR	3515984	WhileStatement	while ( plugins . Next ( plugin ) )		3515960	3					
ANR	3515985	Condition	plugins . Next ( plugin )	34:8:898:917	3515960	0	True				
ANR	3515986	CallExpression	plugins . Next ( plugin )		3515960	0					
ANR	3515987	Callee	plugins . Next		3515960	0					
ANR	3515988	MemberAccess	plugins . Next		3515960	0					
ANR	3515989	Identifier	plugins		3515960	0					
ANR	3515990	Identifier	Next		3515960	1					
ANR	3515991	ArgumentList	plugin		3515960	1					
ANR	3515992	Argument	plugin		3515960	0					
ANR	3515993	Identifier	plugin		3515960	0					
ANR	3515994	CompoundStatement		5:30:125:125	3515960	1					
ANR	3515995	ExpressionStatement	plugin -> initialize ( )	35:2:924:944	3515960	0	True				
ANR	3515996	CallExpression	plugin -> initialize ( )		3515960	0					
ANR	3515997	Callee	plugin -> initialize		3515960	0					
ANR	3515998	PtrMemberAccess	plugin -> initialize		3515960	0					
ANR	3515999	Identifier	plugin		3515960	0					
ANR	3516000	Identifier	initialize		3515960	1					
ANR	3516001	ArgumentList			3515960	1					
ANR	3516002	ReturnType	void		3515960	1					
ANR	3516003	Identifier	MasterPluginManager :: Initialize		3515960	2					
ANR	3516004	ParameterList			3515960	3					
ANR	3516005	CFGEntryNode	ENTRY		3515960		True				
ANR	3516006	CFGExitNode	EXIT		3515960		True				
ANR	3516007	Symbol	plugin		3515960						
ANR	3516008	Symbol	plugins		3515960						
ANR	3516009	Symbol	getPlugins		3515960						
ANR	3516010	Symbol	plugins . Next		3515960						
ANR	3516011	Function	MasterPluginManager :: Shutdown	39:0:952:1142							
ANR	3516012	FunctionDef	MasterPluginManager :: Shutdown ()		3516011	0					
ANR	3516013	CompoundStatement		41:0:989:1142	3516011	0					
ANR	3516014	IdentifierDeclStatement	MasterPlugin * plugin ;	42:1:992:1012	3516011	0	True				
ANR	3516015	IdentifierDecl	* plugin		3516011	0					
ANR	3516016	IdentifierDeclType	MasterPlugin *		3516011	0					
ANR	3516017	Identifier	plugin		3516011	1					
ANR	3516018	IdentifierDeclStatement	SimpleList < MasterPlugin * > plugins = getPlugins ( ) ;	43:1:1015:1064	3516011	1	True				
ANR	3516019	IdentifierDecl	plugins = getPlugins ( )		3516011	0					
ANR	3516020	IdentifierDeclType	SimpleList < MasterPlugin * >		3516011	0					
ANR	3516021	Identifier	plugins		3516011	1					
ANR	3516022	AssignmentExpression	plugins = getPlugins ( )		3516011	2		=			
ANR	3516023	Identifier	plugins		3516011	0					
ANR	3516024	CallExpression	getPlugins ( )		3516011	1					
ANR	3516025	Callee	getPlugins		3516011	0					
ANR	3516026	Identifier	getPlugins		3516011	0					
ANR	3516027	ArgumentList			3516011	1					
ANR	3516028	ExpressionStatement	plugins . Rewind ( )	44:1:1067:1083	3516011	2	True				
ANR	3516029	CallExpression	plugins . Rewind ( )		3516011	0					
ANR	3516030	Callee	plugins . Rewind		3516011	0					
ANR	3516031	MemberAccess	plugins . Rewind		3516011	0					
ANR	3516032	Identifier	plugins		3516011	0					
ANR	3516033	Identifier	Rewind		3516011	1					
ANR	3516034	ArgumentList			3516011	1					
ANR	3516035	WhileStatement	while ( plugins . Next ( plugin ) )		3516011	3					
ANR	3516036	Condition	plugins . Next ( plugin )	45:8:1093:1112	3516011	0	True				
ANR	3516037	CallExpression	plugins . Next ( plugin )		3516011	0					
ANR	3516038	Callee	plugins . Next		3516011	0					
ANR	3516039	MemberAccess	plugins . Next		3516011	0					
ANR	3516040	Identifier	plugins		3516011	0					
ANR	3516041	Identifier	Next		3516011	1					
ANR	3516042	ArgumentList	plugin		3516011	1					
ANR	3516043	Argument	plugin		3516011	0					
ANR	3516044	Identifier	plugin		3516011	0					
ANR	3516045	CompoundStatement		5:30:125:125	3516011	1					
ANR	3516046	ExpressionStatement	plugin -> shutdown ( )	46:2:1119:1137	3516011	0	True				
ANR	3516047	CallExpression	plugin -> shutdown ( )		3516011	0					
ANR	3516048	Callee	plugin -> shutdown		3516011	0					
ANR	3516049	PtrMemberAccess	plugin -> shutdown		3516011	0					
ANR	3516050	Identifier	plugin		3516011	0					
ANR	3516051	Identifier	shutdown		3516011	1					
ANR	3516052	ArgumentList			3516011	1					
ANR	3516053	ReturnType	void		3516011	1					
ANR	3516054	Identifier	MasterPluginManager :: Shutdown		3516011	2					
ANR	3516055	ParameterList			3516011	3					
ANR	3516056	CFGEntryNode	ENTRY		3516011		True				
ANR	3516057	CFGExitNode	EXIT		3516011		True				
ANR	3516058	Symbol	plugin		3516011						
ANR	3516059	Symbol	plugins		3516011						
ANR	3516060	Symbol	getPlugins		3516011						
ANR	3516061	Symbol	plugins . Next		3516011						
ANR	3516062	Function	MasterPluginManager :: Update	50:0:1145:1350							
ANR	3516063	FunctionDef	MasterPluginManager :: Update (const ClassAd * ad)		3516062	0					
ANR	3516064	CompoundStatement		52:0:1197:1350	3516062	0					
ANR	3516065	IdentifierDeclStatement	MasterPlugin * plugin ;	53:1:1200:1220	3516062	0	True				
ANR	3516066	IdentifierDecl	* plugin		3516062	0					
ANR	3516067	IdentifierDeclType	MasterPlugin *		3516062	0					
ANR	3516068	Identifier	plugin		3516062	1					
ANR	3516069	IdentifierDeclStatement	SimpleList < MasterPlugin * > plugins = getPlugins ( ) ;	54:1:1223:1272	3516062	1	True				
ANR	3516070	IdentifierDecl	plugins = getPlugins ( )		3516062	0					
ANR	3516071	IdentifierDeclType	SimpleList < MasterPlugin * >		3516062	0					
ANR	3516072	Identifier	plugins		3516062	1					
ANR	3516073	AssignmentExpression	plugins = getPlugins ( )		3516062	2		=			
ANR	3516074	Identifier	plugins		3516062	0					
ANR	3516075	CallExpression	getPlugins ( )		3516062	1					
ANR	3516076	Callee	getPlugins		3516062	0					
ANR	3516077	Identifier	getPlugins		3516062	0					
ANR	3516078	ArgumentList			3516062	1					
ANR	3516079	ExpressionStatement	plugins . Rewind ( )	55:1:1275:1291	3516062	2	True				
ANR	3516080	CallExpression	plugins . Rewind ( )		3516062	0					
ANR	3516081	Callee	plugins . Rewind		3516062	0					
ANR	3516082	MemberAccess	plugins . Rewind		3516062	0					
ANR	3516083	Identifier	plugins		3516062	0					
ANR	3516084	Identifier	Rewind		3516062	1					
ANR	3516085	ArgumentList			3516062	1					
ANR	3516086	WhileStatement	while ( plugins . Next ( plugin ) )		3516062	3					
ANR	3516087	Condition	plugins . Next ( plugin )	56:8:1301:1320	3516062	0	True				
ANR	3516088	CallExpression	plugins . Next ( plugin )		3516062	0					
ANR	3516089	Callee	plugins . Next		3516062	0					
ANR	3516090	MemberAccess	plugins . Next		3516062	0					
ANR	3516091	Identifier	plugins		3516062	0					
ANR	3516092	Identifier	Next		3516062	1					
ANR	3516093	ArgumentList	plugin		3516062	1					
ANR	3516094	Argument	plugin		3516062	0					
ANR	3516095	Identifier	plugin		3516062	0					
ANR	3516096	CompoundStatement		5:30:125:125	3516062	1					
ANR	3516097	ExpressionStatement	plugin -> update ( ad )	57:2:1327:1345	3516062	0	True				
ANR	3516098	CallExpression	plugin -> update ( ad )		3516062	0					
ANR	3516099	Callee	plugin -> update		3516062	0					
ANR	3516100	PtrMemberAccess	plugin -> update		3516062	0					
ANR	3516101	Identifier	plugin		3516062	0					
ANR	3516102	Identifier	update		3516062	1					
ANR	3516103	ArgumentList	ad		3516062	1					
ANR	3516104	Argument	ad		3516062	0					
ANR	3516105	Identifier	ad		3516062	0					
ANR	3516106	ReturnType	void		3516062	1					
ANR	3516107	Identifier	MasterPluginManager :: Update		3516062	2					
ANR	3516108	ParameterList	const ClassAd * ad		3516062	3					
ANR	3516109	Parameter	const ClassAd * ad	51:28:1178:1194	3516062	0	True				
ANR	3516110	ParameterType	const ClassAd *		3516062	0					
ANR	3516111	Identifier	ad		3516062	1					
ANR	3516112	CFGEntryNode	ENTRY		3516062		True				
ANR	3516113	CFGExitNode	EXIT		3516062		True				
ANR	3516114	Symbol	ad		3516062						
ANR	3516115	Symbol	plugin		3516062						
ANR	3516116	Symbol	plugins		3516062						
ANR	3516117	Symbol	getPlugins		3516062						
ANR	3516118	Symbol	plugins . Next		3516062						
ANR	3516119	Function	MasterPlugin :: MasterPlugin	61:0:1353:1579							
ANR	3516120	FunctionDef	MasterPlugin :: MasterPlugin ()		3516119	0					
ANR	3516121	CompoundStatement		62:0:1382:1579	3516119	0					
ANR	3516122	Statement	if	63:4:1388:1389	3516119	0	True				
ANR	3516123	Statement	(	63:7:1391:1391	3516119	1	True				
ANR	3516124	Statement	PluginManager	63:8:1392:1404	3516119	2	True				
ANR	3516125	Statement	<	63:21:1405:1405	3516119	3	True				
ANR	3516126	Statement	MasterPlugin	63:22:1406:1417	3516119	4	True				
ANR	3516127	Statement	>	63:34:1418:1418	3516119	5	True				
ANR	3516128	Statement	::	63:35:1419:1420	3516119	6	True				
ANR	3516129	Statement	registerPlugin	63:37:1421:1434	3516119	7	True				
ANR	3516130	Statement	(	63:51:1435:1435	3516119	8	True				
ANR	3516131	Statement	this	63:52:1436:1439	3516119	9	True				
ANR	3516132	Statement	)	63:56:1440:1440	3516119	10	True				
ANR	3516133	Statement	)	63:57:1441:1441	3516119	11	True				
ANR	3516134	CompoundStatement		2:59:60:60	3516119	12					
ANR	3516135	ExpressionStatement	"dprintf ( D_ALWAYS , ""MasterPlugin registration succeeded\\n"" )"	64:2:1447:1505	3516119	0	True				
ANR	3516136	CallExpression	"dprintf ( D_ALWAYS , ""MasterPlugin registration succeeded\\n"" )"		3516119	0					
ANR	3516137	Callee	dprintf		3516119	0					
ANR	3516138	Identifier	dprintf		3516119	0					
ANR	3516139	ArgumentList	D_ALWAYS		3516119	1					
ANR	3516140	Argument	D_ALWAYS		3516119	0					
ANR	3516141	Identifier	D_ALWAYS		3516119	0					
ANR	3516142	Argument	"""MasterPlugin registration succeeded\\n"""		3516119	1					
ANR	3516143	PrimaryExpression	"""MasterPlugin registration succeeded\\n"""		3516119	0					
ANR	3516144	Identifier	MasterPlugin :: MasterPlugin		3516119	1					
ANR	3516145	ParameterList			3516119	2					
ANR	3516146	CFGEntryNode	ENTRY		3516119		True				
ANR	3516147	CFGExitNode	EXIT		3516119		True				
ANR	3516148	Symbol	D_ALWAYS		3516119						
ANR	3516149	Function	MasterPlugin :: ~MasterPlugin	70:0:1582:1614							
ANR	3516150	FunctionDef	MasterPlugin :: ~MasterPlugin ()		3516149	0					
ANR	3516151	CompoundStatement		70:30:1612:1614	3516149	0					
ANR	3516152	Identifier	MasterPlugin :: ~MasterPlugin		3516149	1					
ANR	3516153	ParameterList			3516149	2					
ANR	3516154	CFGEntryNode	ENTRY		3516149		True				
ANR	3516155	CFGExitNode	EXIT		3516149		True				
