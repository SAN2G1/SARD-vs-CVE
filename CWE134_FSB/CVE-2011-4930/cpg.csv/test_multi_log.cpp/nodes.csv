command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5396062	File	data/converged/CVE-2011-4930_htcondor/test_multi_log.cpp								
ANR	5396063	DeclStmt									
ANR	5396064	Decl							const char	const char *	VERSION
ANR	5396065	ClassDef	Status	36:0:1145:1198							
ANR	5396066	DeclStmt									
ANR	5396067	Decl							int	int	verbosity
ANR	5396068	DeclStmt									
ANR	5396069	Decl							Status	"Status ( int argc , char * * argv )"	CheckArgs
ANR	5396070	DeclStmt									
ANR	5396071	Decl							bool	"bool ( StringList & reference , StringList & test )"	CompareStringLists
ANR	5396072	DeclStmt									
ANR	5396073	Decl							bool	bool ( StringList & logFiles )	GetGoodLogFiles
ANR	5396074	DeclStmt									
ANR	5396075	Decl							bool	bool ( )	GetBadLogFiles
ANR	5396076	DeclStmt									
ANR	5396077	Decl							bool	bool ( StringList & logFiles )	ReadEvents
ANR	5396078	DeclStmt									
ANR	5396079	Decl							bool	bool ( )	ReadEventsLazy
ANR	5396080	DeclStmt									
ANR	5396081	Decl							bool	"bool ( ReadMultipleUserLogs & reader , const char * logfile , bool truncateIfFirst )"	monitorLogFile
ANR	5396082	DeclStmt									
ANR	5396083	Decl							bool	"bool ( ReadMultipleUserLogs & reader , const char * logfile )"	unmonitorLogFile
ANR	5396084	DeclStmt									
ANR	5396085	Decl							bool	"bool ( ReadMultipleUserLogs & reader , ULogEvent * expectedEvent )"	ReadAndTestEvent
ANR	5396086	DeclStmt									
ANR	5396087	Decl							void	void ( ULogEvent * event )	PrintEvent
ANR	5396088	Function	main	52:0:1756:2357							
ANR	5396089	FunctionDef	"main (int argc , char * * argv)"		5396088	0					
ANR	5396090	CompoundStatement		53:0:1788:2357	5396088	0					
ANR	5396091	ExpressionStatement	Termlog = true	55:1:1824:1838	5396088	0	True				
ANR	5396092	AssignmentExpression	Termlog = true		5396088	0		=			
ANR	5396093	Identifier	Termlog		5396088	0					
ANR	5396094	Identifier	true		5396088	1					
ANR	5396095	ExpressionStatement	"dprintf_config ( ""test_multi_log"" , get_param_functions ( ) )"	56:1:1841:1896	5396088	1	True				
ANR	5396096	CallExpression	"dprintf_config ( ""test_multi_log"" , get_param_functions ( ) )"		5396088	0					
ANR	5396097	Callee	dprintf_config		5396088	0					
ANR	5396098	Identifier	dprintf_config		5396088	0					
ANR	5396099	ArgumentList	"""test_multi_log"""		5396088	1					
ANR	5396100	Argument	"""test_multi_log"""		5396088	0					
ANR	5396101	PrimaryExpression	"""test_multi_log"""		5396088	0					
ANR	5396102	Argument	get_param_functions ( )		5396088	1					
ANR	5396103	CallExpression	get_param_functions ( )		5396088	0					
ANR	5396104	Callee	get_param_functions		5396088	0					
ANR	5396105	Identifier	get_param_functions		5396088	0					
ANR	5396106	ArgumentList			5396088	1					
ANR	5396107	ExpressionStatement	DebugFlags = D_ALWAYS	57:1:1899:1920	5396088	2	True				
ANR	5396108	AssignmentExpression	DebugFlags = D_ALWAYS		5396088	0		=			
ANR	5396109	Identifier	DebugFlags		5396088	0					
ANR	5396110	Identifier	D_ALWAYS		5396088	1					
ANR	5396111	IdentifierDeclStatement	int result = 0 ;	59:1:1924:1939	5396088	3	True				
ANR	5396112	IdentifierDecl	result = 0		5396088	0					
ANR	5396113	IdentifierDeclType	int		5396088	0					
ANR	5396114	Identifier	result		5396088	1					
ANR	5396115	AssignmentExpression	result = 0		5396088	2		=			
ANR	5396116	Identifier	result		5396088	0					
ANR	5396117	PrimaryExpression	0		5396088	1					
ANR	5396118	IdentifierDeclStatement	"Status tmpStatus = CheckArgs ( argc , argv ) ;"	61:1:1943:1983	5396088	4	True				
ANR	5396119	IdentifierDecl	"tmpStatus = CheckArgs ( argc , argv )"		5396088	0					
ANR	5396120	IdentifierDeclType	Status		5396088	0					
ANR	5396121	Identifier	tmpStatus		5396088	1					
ANR	5396122	AssignmentExpression	"tmpStatus = CheckArgs ( argc , argv )"		5396088	2		=			
ANR	5396123	Identifier	tmpStatus		5396088	0					
ANR	5396124	CallExpression	"CheckArgs ( argc , argv )"		5396088	1					
ANR	5396125	Callee	CheckArgs		5396088	0					
ANR	5396126	Identifier	CheckArgs		5396088	0					
ANR	5396127	ArgumentList	argc		5396088	1					
ANR	5396128	Argument	argc		5396088	0					
ANR	5396129	Identifier	argc		5396088	0					
ANR	5396130	Argument	argv		5396088	1					
ANR	5396131	Identifier	argv		5396088	0					
ANR	5396132	IfStatement	if ( tmpStatus == STATUS_CANCEL )		5396088	5					
ANR	5396133	Condition	tmpStatus == STATUS_CANCEL	62:6:1991:2016	5396088	0	True				
ANR	5396134	EqualityExpression	tmpStatus == STATUS_CANCEL		5396088	0		==			
ANR	5396135	Identifier	tmpStatus		5396088	0					
ANR	5396136	Identifier	STATUS_CANCEL		5396088	1					
ANR	5396137	CompoundStatement		10:35:231:231	5396088	1					
ANR	5396138	ReturnStatement	return 0 ;	63:2:2024:2032	5396088	0	True				
ANR	5396139	PrimaryExpression	0		5396088	0					
ANR	5396140	ElseStatement	else		5396088	0					
ANR	5396141	IfStatement	if ( tmpStatus == STATUS_ERROR )		5396088	0					
ANR	5396142	Condition	tmpStatus == STATUS_ERROR	64:13:2047:2071	5396088	0	True				
ANR	5396143	EqualityExpression	tmpStatus == STATUS_ERROR		5396088	0		==			
ANR	5396144	Identifier	tmpStatus		5396088	0					
ANR	5396145	Identifier	STATUS_ERROR		5396088	1					
ANR	5396146	CompoundStatement		12:41:286:286	5396088	1					
ANR	5396147	ReturnStatement	return 1 ;	65:2:2079:2087	5396088	0	True				
ANR	5396148	PrimaryExpression	1		5396088	0					
ANR	5396149	ExpressionStatement	"printf ( ""Testing multi-log reading code\\n"" )"	68:1:2094:2136	5396088	6	True				
ANR	5396150	CallExpression	"printf ( ""Testing multi-log reading code\\n"" )"		5396088	0					
ANR	5396151	Callee	printf		5396088	0					
ANR	5396152	Identifier	printf		5396088	0					
ANR	5396153	ArgumentList	"""Testing multi-log reading code\\n"""		5396088	1					
ANR	5396154	Argument	"""Testing multi-log reading code\\n"""		5396088	0					
ANR	5396155	PrimaryExpression	"""Testing multi-log reading code\\n"""		5396088	0					
ANR	5396156	ExpressionStatement	fflush ( stdout )	69:1:2139:2153	5396088	7	True				
ANR	5396157	CallExpression	fflush ( stdout )		5396088	0					
ANR	5396158	Callee	fflush		5396088	0					
ANR	5396159	Identifier	fflush		5396088	0					
ANR	5396160	ArgumentList	stdout		5396088	1					
ANR	5396161	Argument	stdout		5396088	0					
ANR	5396162	Identifier	stdout		5396088	0					
ANR	5396163	IfStatement	if ( ! ReadEventsLazy ( ) )		5396088	8					
ANR	5396164	Condition	! ReadEventsLazy ( )	71:6:2162:2178	5396088	0	True				
ANR	5396165	UnaryOperationExpression	! ReadEventsLazy ( )		5396088	0					
ANR	5396166	UnaryOperator	!		5396088	0					
ANR	5396167	CallExpression	ReadEventsLazy ( )		5396088	1					
ANR	5396168	Callee	ReadEventsLazy		5396088	0					
ANR	5396169	Identifier	ReadEventsLazy		5396088	0					
ANR	5396170	ArgumentList			5396088	1					
ANR	5396171	CompoundStatement		19:26:393:393	5396088	1					
ANR	5396172	ExpressionStatement	result = 1	72:2:2186:2196	5396088	0	True				
ANR	5396173	AssignmentExpression	result = 1		5396088	0		=			
ANR	5396174	Identifier	result		5396088	0					
ANR	5396175	PrimaryExpression	1		5396088	1					
ANR	5396176	IfStatement	if ( result == 0 )		5396088	9					
ANR	5396177	Condition	result == 0	75:6:2208:2218	5396088	0	True				
ANR	5396178	EqualityExpression	result == 0		5396088	0		==			
ANR	5396179	Identifier	result		5396088	0					
ANR	5396180	PrimaryExpression	0		5396088	1					
ANR	5396181	CompoundStatement		23:20:433:433	5396088	1					
ANR	5396182	ExpressionStatement	"printf ( ""\\nTest succeeded\\n"" )"	76:2:2226:2254	5396088	0	True				
ANR	5396183	CallExpression	"printf ( ""\\nTest succeeded\\n"" )"		5396088	0					
ANR	5396184	Callee	printf		5396088	0					
ANR	5396185	Identifier	printf		5396088	0					
ANR	5396186	ArgumentList	"""\\nTest succeeded\\n"""		5396088	1					
ANR	5396187	Argument	"""\\nTest succeeded\\n"""		5396088	0					
ANR	5396188	PrimaryExpression	"""\\nTest succeeded\\n"""		5396088	0					
ANR	5396189	ElseStatement	else		5396088	0					
ANR	5396190	CompoundStatement		25:8:475:475	5396088	0					
ANR	5396191	ExpressionStatement	"printf ( ""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"" )"	78:2:2268:2318	5396088	0	True				
ANR	5396192	CallExpression	"printf ( ""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"" )"		5396088	0					
ANR	5396193	Callee	printf		5396088	0					
ANR	5396194	Identifier	printf		5396088	0					
ANR	5396195	ArgumentList	"""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"""		5396088	1					
ANR	5396196	Argument	"""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"""		5396088	0					
ANR	5396197	PrimaryExpression	"""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"""		5396088	0					
ANR	5396198	ExpressionStatement	fflush ( stdout )	80:1:2324:2338	5396088	10	True				
ANR	5396199	CallExpression	fflush ( stdout )		5396088	0					
ANR	5396200	Callee	fflush		5396088	0					
ANR	5396201	Identifier	fflush		5396088	0					
ANR	5396202	ArgumentList	stdout		5396088	1					
ANR	5396203	Argument	stdout		5396088	0					
ANR	5396204	Identifier	stdout		5396088	0					
ANR	5396205	ReturnStatement	return result ;	82:1:2342:2355	5396088	11	True				
ANR	5396206	Identifier	result		5396088	0					
ANR	5396207	ReturnType	int		5396088	1					
ANR	5396208	Identifier	main		5396088	2					
ANR	5396209	ParameterList	"int argc , char * * argv"		5396088	3					
ANR	5396210	Parameter	int argc	52:9:1765:1772	5396088	0	True				
ANR	5396211	ParameterType	int		5396088	0					
ANR	5396212	Identifier	argc		5396088	1					
ANR	5396213	Parameter	char * * argv	52:19:1775:1785	5396088	1	True				
ANR	5396214	ParameterType	char * *		5396088	0					
ANR	5396215	Identifier	argv		5396088	1					
ANR	5396216	CFGEntryNode	ENTRY		5396088		True				
ANR	5396217	CFGExitNode	EXIT		5396088		True				
ANR	5396218	Symbol	argc		5396088						
ANR	5396219	Symbol	STATUS_CANCEL		5396088						
ANR	5396220	Symbol	stdout		5396088						
ANR	5396221	Symbol	ReadEventsLazy		5396088						
ANR	5396222	Symbol	Termlog		5396088						
ANR	5396223	Symbol	get_param_functions		5396088						
ANR	5396224	Symbol	tmpStatus		5396088						
ANR	5396225	Symbol	D_ALWAYS		5396088						
ANR	5396226	Symbol	DebugFlags		5396088						
ANR	5396227	Symbol	argv		5396088						
ANR	5396228	Symbol	CheckArgs		5396088						
ANR	5396229	Symbol	STATUS_ERROR		5396088						
ANR	5396230	Symbol	result		5396088						
ANR	5396231	Symbol	true		5396088						
ANR	5396232	Function	CheckArgs	87:0:2362:3641							
ANR	5396233	FunctionDef	"CheckArgs (int argc , char * * argv)"		5396232	0					
ANR	5396234	CompoundStatement		89:0:2402:3641	5396232	0					
ANR	5396235	IdentifierDeclStatement	Status status = STATUS_OK ;	90:1:2405:2430	5396232	0	True				
ANR	5396236	IdentifierDecl	status = STATUS_OK		5396232	0					
ANR	5396237	IdentifierDeclType	Status		5396232	0					
ANR	5396238	Identifier	status		5396232	1					
ANR	5396239	AssignmentExpression	status = STATUS_OK		5396232	2		=			
ANR	5396240	Identifier	STATUS_OK		5396232	0					
ANR	5396241	Identifier	STATUS_OK		5396232	1					
ANR	5396242	Statement	const	92:1:2434:2438	5396232	1	True				
ANR	5396243	Statement	char	92:7:2440:2443	5396232	2	True				
ANR	5396244	Statement	*	92:12:2445:2445	5396232	3	True				
ANR	5396245	Statement	usage	92:14:2447:2451	5396232	4	True				
ANR	5396246	Statement	=	92:20:2453:2453	5396232	5	True				
ANR	5396247	Statement	"""Usage: test_multi_log [options]\\n"""	92:22:2455:2489	5396232	6	True				
ANR	5396248	Statement	"""  -debug <level>: debug level (e.g., D_FULLDEBUG)\\n"""	93:3:2494:2546	5396232	7	True				
ANR	5396249	Statement	"""  -usage: print this message and exit\\n"""	94:3:2551:2591	5396232	8	True				
ANR	5396250	Statement	"""  -verbosity <number>: set verbosity level (default is 0)\\n"""	95:3:2596:2656	5396232	9	True				
ANR	5396251	ExpressionStatement	"""  -version: print the version number and compile date\\n"""	96:3:2661:2718	5396232	10	True				
ANR	5396252	PrimaryExpression	"""  -version: print the version number and compile date\\n"""		5396232	0					
ANR	5396253	ForStatement	for ( int index = 1 ; index < argc ; ++ index )		5396232	11					
ANR	5396254	ForInit	int index = 1 ;	98:7:2728:2741	5396232	0	True				
ANR	5396255	IdentifierDeclStatement	int index = 1 ;		5396232	0					
ANR	5396256	IdentifierDecl	index = 1		5396232	0					
ANR	5396257	IdentifierDeclType	int		5396232	0					
ANR	5396258	Identifier	index		5396232	1					
ANR	5396259	AssignmentExpression	index = 1		5396232	2		=			
ANR	5396260	Identifier	index		5396232	0					
ANR	5396261	PrimaryExpression	1		5396232	1					
ANR	5396262	Condition	index < argc	98:22:2743:2754	5396232	1	True				
ANR	5396263	RelationalExpression	index < argc		5396232	0		<			
ANR	5396264	Identifier	index		5396232	0					
ANR	5396265	Identifier	argc		5396232	1					
ANR	5396266	UnaryExpression	++ index	98:36:2757:2763	5396232	2	True				
ANR	5396267	IncDec	++		5396232	0					
ANR	5396268	Identifier	index		5396232	1					
ANR	5396269	CompoundStatement		10:46:364:364	5396232	3					
ANR	5396270	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-debug"" ) )"		5396232	0					
ANR	5396271	Condition	"! strcmp ( argv [ index ] , ""-debug"" )"	99:7:2776:2805	5396232	0	True				
ANR	5396272	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-debug"" )"		5396232	0					
ANR	5396273	UnaryOperator	!		5396232	0					
ANR	5396274	CallExpression	"strcmp ( argv [ index ] , ""-debug"" )"		5396232	1					
ANR	5396275	Callee	strcmp		5396232	0					
ANR	5396276	Identifier	strcmp		5396232	0					
ANR	5396277	ArgumentList	argv [ index ]		5396232	1					
ANR	5396278	Argument	argv [ index ]		5396232	0					
ANR	5396279	ArrayIndexing	argv [ index ]		5396232	0					
ANR	5396280	Identifier	argv		5396232	0					
ANR	5396281	Identifier	index		5396232	1					
ANR	5396282	Argument	"""-debug"""		5396232	1					
ANR	5396283	PrimaryExpression	"""-debug"""		5396232	0					
ANR	5396284	CompoundStatement		11:40:406:406	5396232	1					
ANR	5396285	IfStatement	if ( ++ index >= argc )		5396232	0					
ANR	5396286	Condition	++ index >= argc	100:8:2819:2833	5396232	0	True				
ANR	5396287	RelationalExpression	++ index >= argc		5396232	0		>=			
ANR	5396288	UnaryExpression	++ index		5396232	0					
ANR	5396289	IncDec	++		5396232	0					
ANR	5396290	Identifier	index		5396232	1					
ANR	5396291	Identifier	argc		5396232	1					
ANR	5396292	CompoundStatement		12:26:434:434	5396232	1					
ANR	5396293	ExpressionStatement	"fprintf ( stderr , ""Value needed for -debug argument\\n"" )"	101:4:2843:2896	5396232	0	True				
ANR	5396294	CallExpression	"fprintf ( stderr , ""Value needed for -debug argument\\n"" )"		5396232	0					
ANR	5396295	Callee	fprintf		5396232	0					
ANR	5396296	Identifier	fprintf		5396232	0					
ANR	5396297	ArgumentList	stderr		5396232	1					
ANR	5396298	Argument	stderr		5396232	0					
ANR	5396299	Identifier	stderr		5396232	0					
ANR	5396300	Argument	"""Value needed for -debug argument\\n"""		5396232	1					
ANR	5396301	PrimaryExpression	"""Value needed for -debug argument\\n"""		5396232	0					
ANR	5396302	ExpressionStatement	"printf ( ""%s"" , usage )"	102:4:2902:2921	5396232	1	True				
ANR	5396303	CallExpression	"printf ( ""%s"" , usage )"		5396232	0					
ANR	5396304	Callee	printf		5396232	0					
ANR	5396305	Identifier	printf		5396232	0					
ANR	5396306	ArgumentList	"""%s"""		5396232	1					
ANR	5396307	Argument	"""%s"""		5396232	0					
ANR	5396308	PrimaryExpression	"""%s"""		5396232	0					
ANR	5396309	Argument	usage		5396232	1					
ANR	5396310	Identifier	usage		5396232	0					
ANR	5396311	ExpressionStatement	status = STATUS_ERROR	103:4:2927:2948	5396232	2	True				
ANR	5396312	AssignmentExpression	status = STATUS_ERROR		5396232	0		=			
ANR	5396313	Identifier	status		5396232	0					
ANR	5396314	Identifier	STATUS_ERROR		5396232	1					
ANR	5396315	ElseStatement	else		5396232	0					
ANR	5396316	CompoundStatement		16:10:557:557	5396232	0					
ANR	5396317	ExpressionStatement	set_debug_flags ( argv [ index ] )	105:4:2966:2996	5396232	0	True				
ANR	5396318	CallExpression	set_debug_flags ( argv [ index ] )		5396232	0					
ANR	5396319	Callee	set_debug_flags		5396232	0					
ANR	5396320	Identifier	set_debug_flags		5396232	0					
ANR	5396321	ArgumentList	argv [ index ]		5396232	1					
ANR	5396322	Argument	argv [ index ]		5396232	0					
ANR	5396323	ArrayIndexing	argv [ index ]		5396232	0					
ANR	5396324	Identifier	argv		5396232	0					
ANR	5396325	Identifier	index		5396232	1					
ANR	5396326	ElseStatement	else		5396232	0					
ANR	5396327	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-usage"" ) )"		5396232	0					
ANR	5396328	Condition	"! strcmp ( argv [ index ] , ""-usage"" )"	108:14:3018:3047	5396232	0	True				
ANR	5396329	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-usage"" )"		5396232	0					
ANR	5396330	UnaryOperator	!		5396232	0					
ANR	5396331	CallExpression	"strcmp ( argv [ index ] , ""-usage"" )"		5396232	1					
ANR	5396332	Callee	strcmp		5396232	0					
ANR	5396333	Identifier	strcmp		5396232	0					
ANR	5396334	ArgumentList	argv [ index ]		5396232	1					
ANR	5396335	Argument	argv [ index ]		5396232	0					
ANR	5396336	ArrayIndexing	argv [ index ]		5396232	0					
ANR	5396337	Identifier	argv		5396232	0					
ANR	5396338	Identifier	index		5396232	1					
ANR	5396339	Argument	"""-usage"""		5396232	1					
ANR	5396340	PrimaryExpression	"""-usage"""		5396232	0					
ANR	5396341	CompoundStatement		20:47:648:648	5396232	1					
ANR	5396342	ExpressionStatement	"printf ( ""%s"" , usage )"	109:3:3056:3075	5396232	0	True				
ANR	5396343	CallExpression	"printf ( ""%s"" , usage )"		5396232	0					
ANR	5396344	Callee	printf		5396232	0					
ANR	5396345	Identifier	printf		5396232	0					
ANR	5396346	ArgumentList	"""%s"""		5396232	1					
ANR	5396347	Argument	"""%s"""		5396232	0					
ANR	5396348	PrimaryExpression	"""%s"""		5396232	0					
ANR	5396349	Argument	usage		5396232	1					
ANR	5396350	Identifier	usage		5396232	0					
ANR	5396351	ExpressionStatement	status = STATUS_CANCEL	110:3:3080:3102	5396232	1	True				
ANR	5396352	AssignmentExpression	status = STATUS_CANCEL		5396232	0		=			
ANR	5396353	Identifier	status		5396232	0					
ANR	5396354	Identifier	STATUS_CANCEL		5396232	1					
ANR	5396355	ElseStatement	else		5396232	0					
ANR	5396356	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-verbosity"" ) )"		5396232	0					
ANR	5396357	Condition	"! strcmp ( argv [ index ] , ""-verbosity"" )"	112:14:3119:3152	5396232	0	True				
ANR	5396358	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-verbosity"" )"		5396232	0					
ANR	5396359	UnaryOperator	!		5396232	0					
ANR	5396360	CallExpression	"strcmp ( argv [ index ] , ""-verbosity"" )"		5396232	1					
ANR	5396361	Callee	strcmp		5396232	0					
ANR	5396362	Identifier	strcmp		5396232	0					
ANR	5396363	ArgumentList	argv [ index ]		5396232	1					
ANR	5396364	Argument	argv [ index ]		5396232	0					
ANR	5396365	ArrayIndexing	argv [ index ]		5396232	0					
ANR	5396366	Identifier	argv		5396232	0					
ANR	5396367	Identifier	index		5396232	1					
ANR	5396368	Argument	"""-verbosity"""		5396232	1					
ANR	5396369	PrimaryExpression	"""-verbosity"""		5396232	0					
ANR	5396370	CompoundStatement		24:51:753:753	5396232	1					
ANR	5396371	IfStatement	if ( ++ index >= argc )		5396232	0					
ANR	5396372	Condition	++ index >= argc	113:8:3166:3180	5396232	0	True				
ANR	5396373	RelationalExpression	++ index >= argc		5396232	0		>=			
ANR	5396374	UnaryExpression	++ index		5396232	0					
ANR	5396375	IncDec	++		5396232	0					
ANR	5396376	Identifier	index		5396232	1					
ANR	5396377	Identifier	argc		5396232	1					
ANR	5396378	CompoundStatement		25:26:781:781	5396232	1					
ANR	5396379	ExpressionStatement	"fprintf ( stderr , ""Value needed for -verbosity argument\\n"" )"	114:4:3190:3247	5396232	0	True				
ANR	5396380	CallExpression	"fprintf ( stderr , ""Value needed for -verbosity argument\\n"" )"		5396232	0					
ANR	5396381	Callee	fprintf		5396232	0					
ANR	5396382	Identifier	fprintf		5396232	0					
ANR	5396383	ArgumentList	stderr		5396232	1					
ANR	5396384	Argument	stderr		5396232	0					
ANR	5396385	Identifier	stderr		5396232	0					
ANR	5396386	Argument	"""Value needed for -verbosity argument\\n"""		5396232	1					
ANR	5396387	PrimaryExpression	"""Value needed for -verbosity argument\\n"""		5396232	0					
ANR	5396388	ExpressionStatement	"printf ( ""%s"" , usage )"	115:4:3253:3272	5396232	1	True				
ANR	5396389	CallExpression	"printf ( ""%s"" , usage )"		5396232	0					
ANR	5396390	Callee	printf		5396232	0					
ANR	5396391	Identifier	printf		5396232	0					
ANR	5396392	ArgumentList	"""%s"""		5396232	1					
ANR	5396393	Argument	"""%s"""		5396232	0					
ANR	5396394	PrimaryExpression	"""%s"""		5396232	0					
ANR	5396395	Argument	usage		5396232	1					
ANR	5396396	Identifier	usage		5396232	0					
ANR	5396397	ExpressionStatement	status = STATUS_ERROR	116:4:3278:3299	5396232	2	True				
ANR	5396398	AssignmentExpression	status = STATUS_ERROR		5396232	0		=			
ANR	5396399	Identifier	status		5396232	0					
ANR	5396400	Identifier	STATUS_ERROR		5396232	1					
ANR	5396401	ElseStatement	else		5396232	0					
ANR	5396402	CompoundStatement		29:10:908:908	5396232	0					
ANR	5396403	ExpressionStatement	verbosity = atoi ( argv [ index ] )	118:4:3317:3346	5396232	0	True				
ANR	5396404	AssignmentExpression	verbosity = atoi ( argv [ index ] )		5396232	0		=			
ANR	5396405	Identifier	verbosity		5396232	0					
ANR	5396406	CallExpression	atoi ( argv [ index ] )		5396232	1					
ANR	5396407	Callee	atoi		5396232	0					
ANR	5396408	Identifier	atoi		5396232	0					
ANR	5396409	ArgumentList	argv [ index ]		5396232	1					
ANR	5396410	Argument	argv [ index ]		5396232	0					
ANR	5396411	ArrayIndexing	argv [ index ]		5396232	0					
ANR	5396412	Identifier	argv		5396232	0					
ANR	5396413	Identifier	index		5396232	1					
ANR	5396414	ElseStatement	else		5396232	0					
ANR	5396415	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-version"" ) )"		5396232	0					
ANR	5396416	Condition	"! strcmp ( argv [ index ] , ""-version"" )"	120:14:3367:3398	5396232	0	True				
ANR	5396417	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-version"" )"		5396232	0					
ANR	5396418	UnaryOperator	!		5396232	0					
ANR	5396419	CallExpression	"strcmp ( argv [ index ] , ""-version"" )"		5396232	1					
ANR	5396420	Callee	strcmp		5396232	0					
ANR	5396421	Identifier	strcmp		5396232	0					
ANR	5396422	ArgumentList	argv [ index ]		5396232	1					
ANR	5396423	Argument	argv [ index ]		5396232	0					
ANR	5396424	ArrayIndexing	argv [ index ]		5396232	0					
ANR	5396425	Identifier	argv		5396232	0					
ANR	5396426	Identifier	index		5396232	1					
ANR	5396427	Argument	"""-version"""		5396232	1					
ANR	5396428	PrimaryExpression	"""-version"""		5396232	0					
ANR	5396429	CompoundStatement		32:49:999:999	5396232	1					
ANR	5396430	ExpressionStatement	"printf ( ""test_multi_log: %s, %s\\n"" , VERSION , __DATE__ )"	121:3:3407:3460	5396232	0	True				
ANR	5396431	CallExpression	"printf ( ""test_multi_log: %s, %s\\n"" , VERSION , __DATE__ )"		5396232	0					
ANR	5396432	Callee	printf		5396232	0					
ANR	5396433	Identifier	printf		5396232	0					
ANR	5396434	ArgumentList	"""test_multi_log: %s, %s\\n"""		5396232	1					
ANR	5396435	Argument	"""test_multi_log: %s, %s\\n"""		5396232	0					
ANR	5396436	PrimaryExpression	"""test_multi_log: %s, %s\\n"""		5396232	0					
ANR	5396437	Argument	VERSION		5396232	1					
ANR	5396438	Identifier	VERSION		5396232	0					
ANR	5396439	Argument	__DATE__		5396232	2					
ANR	5396440	Identifier	__DATE__		5396232	0					
ANR	5396441	ExpressionStatement	status = STATUS_CANCEL	122:3:3465:3487	5396232	1	True				
ANR	5396442	AssignmentExpression	status = STATUS_CANCEL		5396232	0		=			
ANR	5396443	Identifier	status		5396232	0					
ANR	5396444	Identifier	STATUS_CANCEL		5396232	1					
ANR	5396445	ElseStatement	else		5396232	0					
ANR	5396446	CompoundStatement		36:9:1096:1096	5396232	0					
ANR	5396447	ExpressionStatement	"fprintf ( stderr , ""Unrecognized argument: <%s>\\n"" , argv [ index ] )"	125:3:3504:3565	5396232	0	True				
ANR	5396448	CallExpression	"fprintf ( stderr , ""Unrecognized argument: <%s>\\n"" , argv [ index ] )"		5396232	0					
ANR	5396449	Callee	fprintf		5396232	0					
ANR	5396450	Identifier	fprintf		5396232	0					
ANR	5396451	ArgumentList	stderr		5396232	1					
ANR	5396452	Argument	stderr		5396232	0					
ANR	5396453	Identifier	stderr		5396232	0					
ANR	5396454	Argument	"""Unrecognized argument: <%s>\\n"""		5396232	1					
ANR	5396455	PrimaryExpression	"""Unrecognized argument: <%s>\\n"""		5396232	0					
ANR	5396456	Argument	argv [ index ]		5396232	2					
ANR	5396457	ArrayIndexing	argv [ index ]		5396232	0					
ANR	5396458	Identifier	argv		5396232	0					
ANR	5396459	Identifier	index		5396232	1					
ANR	5396460	ExpressionStatement	"printf ( ""%s"" , usage )"	126:3:3570:3589	5396232	1	True				
ANR	5396461	CallExpression	"printf ( ""%s"" , usage )"		5396232	0					
ANR	5396462	Callee	printf		5396232	0					
ANR	5396463	Identifier	printf		5396232	0					
ANR	5396464	ArgumentList	"""%s"""		5396232	1					
ANR	5396465	Argument	"""%s"""		5396232	0					
ANR	5396466	PrimaryExpression	"""%s"""		5396232	0					
ANR	5396467	Argument	usage		5396232	1					
ANR	5396468	Identifier	usage		5396232	0					
ANR	5396469	ExpressionStatement	status = STATUS_ERROR	127:3:3594:3615	5396232	2	True				
ANR	5396470	AssignmentExpression	status = STATUS_ERROR		5396232	0		=			
ANR	5396471	Identifier	status		5396232	0					
ANR	5396472	Identifier	STATUS_ERROR		5396232	1					
ANR	5396473	ReturnStatement	return status ;	131:1:3626:3639	5396232	12	True				
ANR	5396474	Identifier	status		5396232	0					
ANR	5396475	ReturnType	Status		5396232	1					
ANR	5396476	Identifier	CheckArgs		5396232	2					
ANR	5396477	ParameterList	"int argc , char * * argv"		5396232	3					
ANR	5396478	Parameter	int argc	88:10:2379:2386	5396232	0	True				
ANR	5396479	ParameterType	int		5396232	0					
ANR	5396480	Identifier	argc		5396232	1					
ANR	5396481	Parameter	char * * argv	88:20:2389:2399	5396232	1	True				
ANR	5396482	ParameterType	char * *		5396232	0					
ANR	5396483	Identifier	argv		5396232	1					
ANR	5396484	CFGEntryNode	ENTRY		5396232		True				
ANR	5396485	CFGExitNode	EXIT		5396232		True				
ANR	5396486	Symbol	argc		5396232						
ANR	5396487	Symbol	strcmp		5396232						
ANR	5396488	Symbol	STATUS_CANCEL		5396232						
ANR	5396489	Symbol	atoi		5396232						
ANR	5396490	Symbol	* index		5396232						
ANR	5396491	Symbol	usage		5396232						
ANR	5396492	Symbol	index		5396232						
ANR	5396493	Symbol	* argv		5396232						
ANR	5396494	Symbol	__DATE__		5396232						
ANR	5396495	Symbol	stderr		5396232						
ANR	5396496	Symbol	argv		5396232						
ANR	5396497	Symbol	STATUS_ERROR		5396232						
ANR	5396498	Symbol	VERSION		5396232						
ANR	5396499	Symbol	STATUS_OK		5396232						
ANR	5396500	Symbol	verbosity		5396232						
ANR	5396501	Symbol	status		5396232						
ANR	5396502	Function	ReadEventsLazy	138:0:3810:18203							
ANR	5396503	FunctionDef	ReadEventsLazy ()		5396502	0					
ANR	5396504	CompoundStatement		140:0:3832:18203	5396502	0					
ANR	5396505	IdentifierDeclStatement	bool isOkay = true ;	141:1:3835:3853	5396502	0	True				
ANR	5396506	IdentifierDecl	isOkay = true		5396502	0					
ANR	5396507	IdentifierDeclType	bool		5396502	0					
ANR	5396508	Identifier	isOkay		5396502	1					
ANR	5396509	AssignmentExpression	isOkay = true		5396502	2		=			
ANR	5396510	Identifier	true		5396502	0					
ANR	5396511	Identifier	true		5396502	1					
ANR	5396512	ExpressionStatement	"printf ( ""\\nReading events with lazy log file evaluation\\n"" )"	143:1:3857:3915	5396502	1	True				
ANR	5396513	CallExpression	"printf ( ""\\nReading events with lazy log file evaluation\\n"" )"		5396502	0					
ANR	5396514	Callee	printf		5396502	0					
ANR	5396515	Identifier	printf		5396502	0					
ANR	5396516	ArgumentList	"""\\nReading events with lazy log file evaluation\\n"""		5396502	1					
ANR	5396517	Argument	"""\\nReading events with lazy log file evaluation\\n"""		5396502	0					
ANR	5396518	PrimaryExpression	"""\\nReading events with lazy log file evaluation\\n"""		5396502	0					
ANR	5396519	ExpressionStatement	fflush ( stdout )	144:1:3918:3932	5396502	2	True				
ANR	5396520	CallExpression	fflush ( stdout )		5396502	0					
ANR	5396521	Callee	fflush		5396502	0					
ANR	5396522	Identifier	fflush		5396502	0					
ANR	5396523	ArgumentList	stdout		5396502	1					
ANR	5396524	Argument	stdout		5396502	0					
ANR	5396525	Identifier	stdout		5396502	0					
ANR	5396526	IdentifierDeclStatement	"const char * file1 = ""test_multi_log.log1"" ;"	146:1:3936:3977	5396502	3	True				
ANR	5396527	IdentifierDecl	"* file1 = ""test_multi_log.log1"""		5396502	0					
ANR	5396528	IdentifierDeclType	const char *		5396502	0					
ANR	5396529	Identifier	file1		5396502	1					
ANR	5396530	AssignmentExpression	"* file1 = ""test_multi_log.log1"""		5396502	2		=			
ANR	5396531	Identifier	file1		5396502	0					
ANR	5396532	PrimaryExpression	"""test_multi_log.log1"""		5396502	1					
ANR	5396533	ExpressionStatement	unlink ( file1 )	147:1:3980:3995	5396502	4	True				
ANR	5396534	CallExpression	unlink ( file1 )		5396502	0					
ANR	5396535	Callee	unlink		5396502	0					
ANR	5396536	Identifier	unlink		5396502	0					
ANR	5396537	ArgumentList	file1		5396502	1					
ANR	5396538	Argument	file1		5396502	0					
ANR	5396539	Identifier	file1		5396502	0					
ANR	5396540	IdentifierDeclStatement	"const char * file2 = ""test_multi_log.log2"" ;"	148:1:3998:4039	5396502	5	True				
ANR	5396541	IdentifierDecl	"* file2 = ""test_multi_log.log2"""		5396502	0					
ANR	5396542	IdentifierDeclType	const char *		5396502	0					
ANR	5396543	Identifier	file2		5396502	1					
ANR	5396544	AssignmentExpression	"* file2 = ""test_multi_log.log2"""		5396502	2		=			
ANR	5396545	Identifier	file2		5396502	0					
ANR	5396546	PrimaryExpression	"""test_multi_log.log2"""		5396502	1					
ANR	5396547	ExpressionStatement	unlink ( file2 )	149:1:4042:4057	5396502	6	True				
ANR	5396548	CallExpression	unlink ( file2 )		5396502	0					
ANR	5396549	Callee	unlink		5396502	0					
ANR	5396550	Identifier	unlink		5396502	0					
ANR	5396551	ArgumentList	file2		5396502	1					
ANR	5396552	Argument	file2		5396502	0					
ANR	5396553	Identifier	file2		5396502	0					
ANR	5396554	IdentifierDeclStatement	"const char * file3 = ""test_multi_log.log3"" ;"	150:1:4060:4101	5396502	7	True				
ANR	5396555	IdentifierDecl	"* file3 = ""test_multi_log.log3"""		5396502	0					
ANR	5396556	IdentifierDeclType	const char *		5396502	0					
ANR	5396557	Identifier	file3		5396502	1					
ANR	5396558	AssignmentExpression	"* file3 = ""test_multi_log.log3"""		5396502	2		=			
ANR	5396559	Identifier	file3		5396502	0					
ANR	5396560	PrimaryExpression	"""test_multi_log.log3"""		5396502	1					
ANR	5396561	ExpressionStatement	unlink ( file3 )	151:1:4104:4119	5396502	8	True				
ANR	5396562	CallExpression	unlink ( file3 )		5396502	0					
ANR	5396563	Callee	unlink		5396502	0					
ANR	5396564	Identifier	unlink		5396502	0					
ANR	5396565	ArgumentList	file3		5396502	1					
ANR	5396566	Argument	file3		5396502	0					
ANR	5396567	Identifier	file3		5396502	0					
ANR	5396568	IdentifierDeclStatement	const char * file4 = file3 ;	152:1:4122:4147	5396502	9	True				
ANR	5396569	IdentifierDecl	* file4 = file3		5396502	0					
ANR	5396570	IdentifierDeclType	const char *		5396502	0					
ANR	5396571	Identifier	file4		5396502	1					
ANR	5396572	AssignmentExpression	* file4 = file3		5396502	2		=			
ANR	5396573	Identifier	file3		5396502	0					
ANR	5396574	Identifier	file3		5396502	1					
ANR	5396575	ExpressionStatement	unlink ( file4 )	153:1:4150:4165	5396502	10	True				
ANR	5396576	CallExpression	unlink ( file4 )		5396502	0					
ANR	5396577	Callee	unlink		5396502	0					
ANR	5396578	Identifier	unlink		5396502	0					
ANR	5396579	ArgumentList	file4		5396502	1					
ANR	5396580	Argument	file4		5396502	0					
ANR	5396581	Identifier	file4		5396502	0					
ANR	5396582	IdentifierDeclStatement	"const char * file5 = ""test_multi_log.log5"" ;"	154:1:4168:4209	5396502	11	True				
ANR	5396583	IdentifierDecl	"* file5 = ""test_multi_log.log5"""		5396502	0					
ANR	5396584	IdentifierDeclType	const char *		5396502	0					
ANR	5396585	Identifier	file5		5396502	1					
ANR	5396586	AssignmentExpression	"* file5 = ""test_multi_log.log5"""		5396502	2		=			
ANR	5396587	Identifier	file5		5396502	0					
ANR	5396588	PrimaryExpression	"""test_multi_log.log5"""		5396502	1					
ANR	5396589	ExpressionStatement	unlink ( file5 )	155:1:4212:4227	5396502	12	True				
ANR	5396590	CallExpression	unlink ( file5 )		5396502	0					
ANR	5396591	Callee	unlink		5396502	0					
ANR	5396592	Identifier	unlink		5396502	0					
ANR	5396593	ArgumentList	file5		5396502	1					
ANR	5396594	Argument	file5		5396502	0					
ANR	5396595	Identifier	file5		5396502	0					
ANR	5396596	IdentifierDeclStatement	"const char * file5a = ""./test_multi_log.log5"" ;"	158:1:4310:4354	5396502	13	True				
ANR	5396597	IdentifierDecl	"* file5a = ""./test_multi_log.log5"""		5396502	0					
ANR	5396598	IdentifierDeclType	const char *		5396502	0					
ANR	5396599	Identifier	file5a		5396502	1					
ANR	5396600	AssignmentExpression	"* file5a = ""./test_multi_log.log5"""		5396502	2		=			
ANR	5396601	Identifier	file5a		5396502	0					
ANR	5396602	PrimaryExpression	"""./test_multi_log.log5"""		5396502	1					
ANR	5396603	ExpressionStatement	unlink ( file5a )	159:1:4357:4373	5396502	14	True				
ANR	5396604	CallExpression	unlink ( file5a )		5396502	0					
ANR	5396605	Callee	unlink		5396502	0					
ANR	5396606	Identifier	unlink		5396502	0					
ANR	5396607	ArgumentList	file5a		5396502	1					
ANR	5396608	Argument	file5a		5396502	0					
ANR	5396609	Identifier	file5a		5396502	0					
ANR	5396610	IdentifierDeclStatement	"const char * file5b = ""test_multi_log.log5b"" ;"	161:1:4406:4449	5396502	15	True				
ANR	5396611	IdentifierDecl	"* file5b = ""test_multi_log.log5b"""		5396502	0					
ANR	5396612	IdentifierDeclType	const char *		5396502	0					
ANR	5396613	Identifier	file5b		5396502	1					
ANR	5396614	AssignmentExpression	"* file5b = ""test_multi_log.log5b"""		5396502	2		=			
ANR	5396615	Identifier	file5b		5396502	0					
ANR	5396616	PrimaryExpression	"""test_multi_log.log5b"""		5396502	1					
ANR	5396617	ExpressionStatement	unlink ( file5b )	162:1:4452:4468	5396502	16	True				
ANR	5396618	CallExpression	unlink ( file5b )		5396502	0					
ANR	5396619	Callee	unlink		5396502	0					
ANR	5396620	Identifier	unlink		5396502	0					
ANR	5396621	ArgumentList	file5b		5396502	1					
ANR	5396622	Argument	file5b		5396502	0					
ANR	5396623	Identifier	file5b		5396502	0					
ANR	5396624	IdentifierDeclStatement	"const char * file5c = ""test_multi_log.log5c"" ;"	164:1:4501:4544	5396502	17	True				
ANR	5396625	IdentifierDecl	"* file5c = ""test_multi_log.log5c"""		5396502	0					
ANR	5396626	IdentifierDeclType	const char *		5396502	0					
ANR	5396627	Identifier	file5c		5396502	1					
ANR	5396628	AssignmentExpression	"* file5c = ""test_multi_log.log5c"""		5396502	2		=			
ANR	5396629	Identifier	file5c		5396502	0					
ANR	5396630	PrimaryExpression	"""test_multi_log.log5c"""		5396502	1					
ANR	5396631	ExpressionStatement	unlink ( file5c )	165:1:4547:4563	5396502	18	True				
ANR	5396632	CallExpression	unlink ( file5c )		5396502	0					
ANR	5396633	Callee	unlink		5396502	0					
ANR	5396634	Identifier	unlink		5396502	0					
ANR	5396635	ArgumentList	file5c		5396502	1					
ANR	5396636	Argument	file5c		5396502	0					
ANR	5396637	Identifier	file5c		5396502	0					
ANR	5396638	IdentifierDeclStatement	"const char * file5d = ""test_multi_log.log5d"" ;"	167:1:4598:4641	5396502	19	True				
ANR	5396639	IdentifierDecl	"* file5d = ""test_multi_log.log5d"""		5396502	0					
ANR	5396640	IdentifierDeclType	const char *		5396502	0					
ANR	5396641	Identifier	file5d		5396502	1					
ANR	5396642	AssignmentExpression	"* file5d = ""test_multi_log.log5d"""		5396502	2		=			
ANR	5396643	Identifier	file5d		5396502	0					
ANR	5396644	PrimaryExpression	"""test_multi_log.log5d"""		5396502	1					
ANR	5396645	ExpressionStatement	unlink ( file5d )	168:1:4644:4660	5396502	20	True				
ANR	5396646	CallExpression	unlink ( file5d )		5396502	0					
ANR	5396647	Callee	unlink		5396502	0					
ANR	5396648	Identifier	unlink		5396502	0					
ANR	5396649	ArgumentList	file5d		5396502	1					
ANR	5396650	Argument	file5d		5396502	0					
ANR	5396651	Identifier	file5d		5396502	0					
ANR	5396652	IdentifierDeclStatement	ReadMultipleUserLogs lazyReader ;	170:1:4664:4695	5396502	21	True				
ANR	5396653	IdentifierDecl	lazyReader		5396502	0					
ANR	5396654	IdentifierDeclType	ReadMultipleUserLogs		5396502	0					
ANR	5396655	Identifier	lazyReader		5396502	1					
ANR	5396656	IdentifierDeclStatement	int totalLogCount ;	171:1:4698:4715	5396502	22	True				
ANR	5396657	IdentifierDecl	totalLogCount		5396502	0					
ANR	5396658	IdentifierDeclType	int		5396502	0					
ANR	5396659	Identifier	totalLogCount		5396502	1					
ANR	5396660	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 0 )		5396502	23					
ANR	5396661	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 0	172:6:4723:4775	5396502	0	True				
ANR	5396662	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 0		5396502	0		!=			
ANR	5396663	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		5396502	0		=			
ANR	5396664	Identifier	totalLogCount		5396502	0					
ANR	5396665	CallExpression	lazyReader . totalLogFileCount ( )		5396502	1					
ANR	5396666	Callee	lazyReader . totalLogFileCount		5396502	0					
ANR	5396667	MemberAccess	lazyReader . totalLogFileCount		5396502	0					
ANR	5396668	Identifier	lazyReader		5396502	0					
ANR	5396669	Identifier	totalLogFileCount		5396502	1					
ANR	5396670	ArgumentList			5396502	1					
ANR	5396671	PrimaryExpression	0		5396502	1					
ANR	5396672	CompoundStatement		33:62:946:946	5396502	1					
ANR	5396673	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	173:2:4783:4834	5396502	0	True				
ANR	5396674	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5396675	Callee	printf		5396502	0					
ANR	5396676	Identifier	printf		5396502	0					
ANR	5396677	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5396678	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5396679	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5396680	Argument	__FILE__		5396502	1					
ANR	5396681	Identifier	__FILE__		5396502	0					
ANR	5396682	Argument	__LINE__		5396502	2					
ANR	5396683	Identifier	__LINE__		5396502	0					
ANR	5396684	Statement	printf	174:2:4838:4843	5396502	1	True				
ANR	5396685	Statement	(	174:8:4844:4844	5396502	2	True				
ANR	5396686	Statement	"""lazyReader.totalLogFileCount() was %d; should """	174:10:4846:4893	5396502	3	True				
ANR	5396687	Statement	"""have been 0\\n"""	175:5:4900:4914	5396502	4	True				
ANR	5396688	Statement	","	175:20:4915:4915	5396502	5	True				
ANR	5396689	Statement	totalLogCount	175:22:4917:4929	5396502	6	True				
ANR	5396690	Statement	)	175:36:4931:4931	5396502	7	True				
ANR	5396691	ExpressionStatement		175:37:4932:4932	5396502	8	True				
ANR	5396692	ExpressionStatement	isOkay = false	176:2:4936:4950	5396502	9	True				
ANR	5396693	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5396694	Identifier	isOkay		5396502	0					
ANR	5396695	Identifier	false		5396502	1					
ANR	5396696	IfStatement	"if ( ! monitorLogFile ( lazyReader , file1 , true ) )"		5396502	24					
ANR	5396697	Condition	"! monitorLogFile ( lazyReader , file1 , true )"	179:6:4962:5003	5396502	0	True				
ANR	5396698	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file1 , true )"		5396502	0					
ANR	5396699	UnaryOperator	!		5396502	0					
ANR	5396700	CallExpression	"monitorLogFile ( lazyReader , file1 , true )"		5396502	1					
ANR	5396701	Callee	monitorLogFile		5396502	0					
ANR	5396702	Identifier	monitorLogFile		5396502	0					
ANR	5396703	ArgumentList	lazyReader		5396502	1					
ANR	5396704	Argument	lazyReader		5396502	0					
ANR	5396705	Identifier	lazyReader		5396502	0					
ANR	5396706	Argument	file1		5396502	1					
ANR	5396707	Identifier	file1		5396502	0					
ANR	5396708	Argument	true		5396502	2					
ANR	5396709	Identifier	true		5396502	0					
ANR	5396710	CompoundStatement		40:51:1174:1174	5396502	1					
ANR	5396711	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	180:2:5011:5062	5396502	0	True				
ANR	5396712	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5396713	Callee	printf		5396502	0					
ANR	5396714	Identifier	printf		5396502	0					
ANR	5396715	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5396716	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5396717	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5396718	Argument	__FILE__		5396502	1					
ANR	5396719	Identifier	__FILE__		5396502	0					
ANR	5396720	Argument	__LINE__		5396502	2					
ANR	5396721	Identifier	__LINE__		5396502	0					
ANR	5396722	ExpressionStatement	"printf ( ""error monitoring log file %s\\n"" , file1 )"	181:2:5066:5115	5396502	1	True				
ANR	5396723	CallExpression	"printf ( ""error monitoring log file %s\\n"" , file1 )"		5396502	0					
ANR	5396724	Callee	printf		5396502	0					
ANR	5396725	Identifier	printf		5396502	0					
ANR	5396726	ArgumentList	"""error monitoring log file %s\\n"""		5396502	1					
ANR	5396727	Argument	"""error monitoring log file %s\\n"""		5396502	0					
ANR	5396728	PrimaryExpression	"""error monitoring log file %s\\n"""		5396502	0					
ANR	5396729	Argument	file1		5396502	1					
ANR	5396730	Identifier	file1		5396502	0					
ANR	5396731	ExpressionStatement	isOkay = false	182:2:5119:5133	5396502	2	True				
ANR	5396732	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5396733	Identifier	isOkay		5396502	0					
ANR	5396734	Identifier	false		5396502	1					
ANR	5396735	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 1 )		5396502	25					
ANR	5396736	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 1	184:6:5144:5196	5396502	0	True				
ANR	5396737	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 1		5396502	0		!=			
ANR	5396738	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		5396502	0		=			
ANR	5396739	Identifier	totalLogCount		5396502	0					
ANR	5396740	CallExpression	lazyReader . totalLogFileCount ( )		5396502	1					
ANR	5396741	Callee	lazyReader . totalLogFileCount		5396502	0					
ANR	5396742	MemberAccess	lazyReader . totalLogFileCount		5396502	0					
ANR	5396743	Identifier	lazyReader		5396502	0					
ANR	5396744	Identifier	totalLogFileCount		5396502	1					
ANR	5396745	ArgumentList			5396502	1					
ANR	5396746	PrimaryExpression	1		5396502	1					
ANR	5396747	CompoundStatement		45:62:1367:1367	5396502	1					
ANR	5396748	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	185:2:5204:5255	5396502	0	True				
ANR	5396749	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5396750	Callee	printf		5396502	0					
ANR	5396751	Identifier	printf		5396502	0					
ANR	5396752	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5396753	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5396754	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5396755	Argument	__FILE__		5396502	1					
ANR	5396756	Identifier	__FILE__		5396502	0					
ANR	5396757	Argument	__LINE__		5396502	2					
ANR	5396758	Identifier	__LINE__		5396502	0					
ANR	5396759	Statement	printf	186:2:5259:5264	5396502	1	True				
ANR	5396760	Statement	(	186:8:5265:5265	5396502	2	True				
ANR	5396761	Statement	"""lazyReader.totalLogFileCount() was %d; should """	186:10:5267:5314	5396502	3	True				
ANR	5396762	Statement	"""have been 1\\n"""	187:5:5321:5335	5396502	4	True				
ANR	5396763	Statement	","	187:20:5336:5336	5396502	5	True				
ANR	5396764	Statement	totalLogCount	187:22:5338:5350	5396502	6	True				
ANR	5396765	Statement	)	187:36:5352:5352	5396502	7	True				
ANR	5396766	ExpressionStatement		187:37:5353:5353	5396502	8	True				
ANR	5396767	ExpressionStatement	isOkay = false	188:2:5357:5371	5396502	9	True				
ANR	5396768	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5396769	Identifier	isOkay		5396502	0					
ANR	5396770	Identifier	false		5396502	1					
ANR	5396771	ExpressionStatement	"printf ( ""Testing detectLogGrowth() on empty files...\\n"" )"	194:1:5520:5575	5396502	26	True				
ANR	5396772	CallExpression	"printf ( ""Testing detectLogGrowth() on empty files...\\n"" )"		5396502	0					
ANR	5396773	Callee	printf		5396502	0					
ANR	5396774	Identifier	printf		5396502	0					
ANR	5396775	ArgumentList	"""Testing detectLogGrowth() on empty files...\\n"""		5396502	1					
ANR	5396776	Argument	"""Testing detectLogGrowth() on empty files...\\n"""		5396502	0					
ANR	5396777	PrimaryExpression	"""Testing detectLogGrowth() on empty files...\\n"""		5396502	0					
ANR	5396778	IfStatement	if ( ! lazyReader . detectLogGrowth ( ) )		5396502	27					
ANR	5396779	Condition	! lazyReader . detectLogGrowth ( )	195:6:5583:5611	5396502	0	True				
ANR	5396780	UnaryOperationExpression	! lazyReader . detectLogGrowth ( )		5396502	0					
ANR	5396781	UnaryOperator	!		5396502	0					
ANR	5396782	CallExpression	lazyReader . detectLogGrowth ( )		5396502	1					
ANR	5396783	Callee	lazyReader . detectLogGrowth		5396502	0					
ANR	5396784	MemberAccess	lazyReader . detectLogGrowth		5396502	0					
ANR	5396785	Identifier	lazyReader		5396502	0					
ANR	5396786	Identifier	detectLogGrowth		5396502	1					
ANR	5396787	ArgumentList			5396502	1					
ANR	5396788	CompoundStatement		56:38:1782:1782	5396502	1					
ANR	5396789	ExpressionStatement	"printf ( ""...succeeded\\n"" )"	196:2:5619:5643	5396502	0	True				
ANR	5396790	CallExpression	"printf ( ""...succeeded\\n"" )"		5396502	0					
ANR	5396791	Callee	printf		5396502	0					
ANR	5396792	Identifier	printf		5396502	0					
ANR	5396793	ArgumentList	"""...succeeded\\n"""		5396502	1					
ANR	5396794	Argument	"""...succeeded\\n"""		5396502	0					
ANR	5396795	PrimaryExpression	"""...succeeded\\n"""		5396502	0					
ANR	5396796	ExpressionStatement	fflush ( stdout )	197:2:5647:5661	5396502	1	True				
ANR	5396797	CallExpression	fflush ( stdout )		5396502	0					
ANR	5396798	Callee	fflush		5396502	0					
ANR	5396799	Identifier	fflush		5396502	0					
ANR	5396800	ArgumentList	stdout		5396502	1					
ANR	5396801	Argument	stdout		5396502	0					
ANR	5396802	Identifier	stdout		5396502	0					
ANR	5396803	ElseStatement	else		5396502	0					
ANR	5396804	CompoundStatement		59:8:1838:1838	5396502	0					
ANR	5396805	ExpressionStatement	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"	199:2:5675:5729	5396502	0	True				
ANR	5396806	CallExpression	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5396807	Callee	printf		5396502	0					
ANR	5396808	Identifier	printf		5396502	0					
ANR	5396809	ArgumentList	"""...FAILURE at %s, %d\\n"""		5396502	1					
ANR	5396810	Argument	"""...FAILURE at %s, %d\\n"""		5396502	0					
ANR	5396811	PrimaryExpression	"""...FAILURE at %s, %d\\n"""		5396502	0					
ANR	5396812	Argument	__FILE__		5396502	1					
ANR	5396813	Identifier	__FILE__		5396502	0					
ANR	5396814	Argument	__LINE__		5396502	2					
ANR	5396815	Identifier	__LINE__		5396502	0					
ANR	5396816	ExpressionStatement	fflush ( stdout )	200:2:5733:5747	5396502	1	True				
ANR	5396817	CallExpression	fflush ( stdout )		5396502	0					
ANR	5396818	Callee	fflush		5396502	0					
ANR	5396819	Identifier	fflush		5396502	0					
ANR	5396820	ArgumentList	stdout		5396502	1					
ANR	5396821	Argument	stdout		5396502	0					
ANR	5396822	Identifier	stdout		5396502	0					
ANR	5396823	ExpressionStatement	isOkay = false	201:2:5751:5765	5396502	2	True				
ANR	5396824	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5396825	Identifier	isOkay		5396502	0					
ANR	5396826	Identifier	false		5396502	1					
ANR	5396827	IdentifierDeclStatement	ULogEvent * event ;	204:1:5772:5788	5396502	28	True				
ANR	5396828	IdentifierDecl	* event		5396502	0					
ANR	5396829	IdentifierDeclType	ULogEvent *		5396502	0					
ANR	5396830	Identifier	event		5396502	1					
ANR	5396831	ExpressionStatement	"printf ( ""Testing readEvent() on empty files...\\n"" )"	205:1:5791:5840	5396502	29	True				
ANR	5396832	CallExpression	"printf ( ""Testing readEvent() on empty files...\\n"" )"		5396502	0					
ANR	5396833	Callee	printf		5396502	0					
ANR	5396834	Identifier	printf		5396502	0					
ANR	5396835	ArgumentList	"""Testing readEvent() on empty files...\\n"""		5396502	1					
ANR	5396836	Argument	"""Testing readEvent() on empty files...\\n"""		5396502	0					
ANR	5396837	PrimaryExpression	"""Testing readEvent() on empty files...\\n"""		5396502	0					
ANR	5396838	IfStatement	if ( lazyReader . readEvent ( event ) != ULOG_NO_EVENT )		5396502	30					
ANR	5396839	Condition	lazyReader . readEvent ( event ) != ULOG_NO_EVENT	206:6:5848:5891	5396502	0	True				
ANR	5396840	EqualityExpression	lazyReader . readEvent ( event ) != ULOG_NO_EVENT		5396502	0		!=			
ANR	5396841	CallExpression	lazyReader . readEvent ( event )		5396502	0					
ANR	5396842	Callee	lazyReader . readEvent		5396502	0					
ANR	5396843	MemberAccess	lazyReader . readEvent		5396502	0					
ANR	5396844	Identifier	lazyReader		5396502	0					
ANR	5396845	Identifier	readEvent		5396502	1					
ANR	5396846	ArgumentList	event		5396502	1					
ANR	5396847	Argument	event		5396502	0					
ANR	5396848	Identifier	event		5396502	0					
ANR	5396849	Identifier	ULOG_NO_EVENT		5396502	1					
ANR	5396850	CompoundStatement		67:53:2062:2062	5396502	1					
ANR	5396851	ExpressionStatement	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"	207:2:5899:5953	5396502	0	True				
ANR	5396852	CallExpression	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5396853	Callee	printf		5396502	0					
ANR	5396854	Identifier	printf		5396502	0					
ANR	5396855	ArgumentList	"""...FAILURE at %s, %d\\n"""		5396502	1					
ANR	5396856	Argument	"""...FAILURE at %s, %d\\n"""		5396502	0					
ANR	5396857	PrimaryExpression	"""...FAILURE at %s, %d\\n"""		5396502	0					
ANR	5396858	Argument	__FILE__		5396502	1					
ANR	5396859	Identifier	__FILE__		5396502	0					
ANR	5396860	Argument	__LINE__		5396502	2					
ANR	5396861	Identifier	__LINE__		5396502	0					
ANR	5396862	ExpressionStatement	fflush ( stdout )	208:2:5957:5971	5396502	1	True				
ANR	5396863	CallExpression	fflush ( stdout )		5396502	0					
ANR	5396864	Callee	fflush		5396502	0					
ANR	5396865	Identifier	fflush		5396502	0					
ANR	5396866	ArgumentList	stdout		5396502	1					
ANR	5396867	Argument	stdout		5396502	0					
ANR	5396868	Identifier	stdout		5396502	0					
ANR	5396869	ExpressionStatement	isOkay = false	209:2:5975:5989	5396502	2	True				
ANR	5396870	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5396871	Identifier	isOkay		5396502	0					
ANR	5396872	Identifier	false		5396502	1					
ANR	5396873	ElseStatement	else		5396502	0					
ANR	5396874	CompoundStatement		71:8:2166:2166	5396502	0					
ANR	5396875	ExpressionStatement	"printf ( ""...succeeded\\n"" )"	211:2:6003:6027	5396502	0	True				
ANR	5396876	CallExpression	"printf ( ""...succeeded\\n"" )"		5396502	0					
ANR	5396877	Callee	printf		5396502	0					
ANR	5396878	Identifier	printf		5396502	0					
ANR	5396879	ArgumentList	"""...succeeded\\n"""		5396502	1					
ANR	5396880	Argument	"""...succeeded\\n"""		5396502	0					
ANR	5396881	PrimaryExpression	"""...succeeded\\n"""		5396502	0					
ANR	5396882	ExpressionStatement	fflush ( stdout )	212:2:6031:6045	5396502	1	True				
ANR	5396883	CallExpression	fflush ( stdout )		5396502	0					
ANR	5396884	Callee	fflush		5396502	0					
ANR	5396885	Identifier	fflush		5396502	0					
ANR	5396886	ArgumentList	stdout		5396502	1					
ANR	5396887	Argument	stdout		5396502	0					
ANR	5396888	Identifier	stdout		5396502	0					
ANR	5396889	ExpressionStatement	"printf ( ""Testing writing and reading events...\\n"" )"	215:1:6052:6101	5396502	31	True				
ANR	5396890	CallExpression	"printf ( ""Testing writing and reading events...\\n"" )"		5396502	0					
ANR	5396891	Callee	printf		5396502	0					
ANR	5396892	Identifier	printf		5396502	0					
ANR	5396893	ArgumentList	"""Testing writing and reading events...\\n"""		5396502	1					
ANR	5396894	Argument	"""Testing writing and reading events...\\n"""		5396502	0					
ANR	5396895	PrimaryExpression	"""Testing writing and reading events...\\n"""		5396502	0					
ANR	5396896	ExpressionStatement	fflush ( stdout )	216:1:6104:6118	5396502	32	True				
ANR	5396897	CallExpression	fflush ( stdout )		5396502	0					
ANR	5396898	Callee	fflush		5396502	0					
ANR	5396899	Identifier	fflush		5396502	0					
ANR	5396900	ArgumentList	stdout		5396502	1					
ANR	5396901	Argument	stdout		5396502	0					
ANR	5396902	Identifier	stdout		5396502	0					
ANR	5396903	IdentifierDeclStatement	"WriteUserLog log1 ( ""test"" , file1 , 1 , 0 , 0 , false ) ;"	218:1:6122:6171	5396502	33	True				
ANR	5396904	IdentifierDecl	"log1 ( ""test"" , file1 , 1 , 0 , 0 , false )"		5396502	0					
ANR	5396905	IdentifierDeclType	WriteUserLog		5396502	0					
ANR	5396906	Identifier	log1		5396502	1					
ANR	5396907	Expression	"""test"" , file1 , 1 , 0 , 0 , false"		5396502	2					
ANR	5396908	PrimaryExpression	"""test"""		5396502	0					
ANR	5396909	Expression	"file1 , 1 , 0 , 0 , false"		5396502	1					
ANR	5396910	Identifier	file1		5396502	0					
ANR	5396911	Expression	"1 , 0 , 0 , false"		5396502	1					
ANR	5396912	PrimaryExpression	1		5396502	0					
ANR	5396913	Expression	"0 , 0 , false"		5396502	1					
ANR	5396914	PrimaryExpression	0		5396502	0					
ANR	5396915	Expression	"0 , false"		5396502	1					
ANR	5396916	PrimaryExpression	0		5396502	0					
ANR	5396917	Identifier	false		5396502	1					
ANR	5396918	IdentifierDeclStatement	"WriteUserLog log2 ( ""test"" , file2 , 2 , 0 , 0 , true ) ;"	219:1:6174:6222	5396502	34	True				
ANR	5396919	IdentifierDecl	"log2 ( ""test"" , file2 , 2 , 0 , 0 , true )"		5396502	0					
ANR	5396920	IdentifierDeclType	WriteUserLog		5396502	0					
ANR	5396921	Identifier	log2		5396502	1					
ANR	5396922	Expression	"""test"" , file2 , 2 , 0 , 0 , true"		5396502	2					
ANR	5396923	PrimaryExpression	"""test"""		5396502	0					
ANR	5396924	Expression	"file2 , 2 , 0 , 0 , true"		5396502	1					
ANR	5396925	Identifier	file2		5396502	0					
ANR	5396926	Expression	"2 , 0 , 0 , true"		5396502	1					
ANR	5396927	PrimaryExpression	2		5396502	0					
ANR	5396928	Expression	"0 , 0 , true"		5396502	1					
ANR	5396929	PrimaryExpression	0		5396502	0					
ANR	5396930	Expression	"0 , true"		5396502	1					
ANR	5396931	PrimaryExpression	0		5396502	0					
ANR	5396932	Identifier	true		5396502	1					
ANR	5396933	IdentifierDeclStatement	"WriteUserLog log3 ( ""test"" , file3 , 3 , 0 , 0 , false ) ;"	220:1:6225:6274	5396502	35	True				
ANR	5396934	IdentifierDecl	"log3 ( ""test"" , file3 , 3 , 0 , 0 , false )"		5396502	0					
ANR	5396935	IdentifierDeclType	WriteUserLog		5396502	0					
ANR	5396936	Identifier	log3		5396502	1					
ANR	5396937	Expression	"""test"" , file3 , 3 , 0 , 0 , false"		5396502	2					
ANR	5396938	PrimaryExpression	"""test"""		5396502	0					
ANR	5396939	Expression	"file3 , 3 , 0 , 0 , false"		5396502	1					
ANR	5396940	Identifier	file3		5396502	0					
ANR	5396941	Expression	"3 , 0 , 0 , false"		5396502	1					
ANR	5396942	PrimaryExpression	3		5396502	0					
ANR	5396943	Expression	"0 , 0 , false"		5396502	1					
ANR	5396944	PrimaryExpression	0		5396502	0					
ANR	5396945	Expression	"0 , false"		5396502	1					
ANR	5396946	PrimaryExpression	0		5396502	0					
ANR	5396947	Identifier	false		5396502	1					
ANR	5396948	IdentifierDeclStatement	"WriteUserLog log4 ( ""test"" , file4 , 4 , 0 , 0 , false ) ;"	221:1:6277:6326	5396502	36	True				
ANR	5396949	IdentifierDecl	"log4 ( ""test"" , file4 , 4 , 0 , 0 , false )"		5396502	0					
ANR	5396950	IdentifierDeclType	WriteUserLog		5396502	0					
ANR	5396951	Identifier	log4		5396502	1					
ANR	5396952	Expression	"""test"" , file4 , 4 , 0 , 0 , false"		5396502	2					
ANR	5396953	PrimaryExpression	"""test"""		5396502	0					
ANR	5396954	Expression	"file4 , 4 , 0 , 0 , false"		5396502	1					
ANR	5396955	Identifier	file4		5396502	0					
ANR	5396956	Expression	"4 , 0 , 0 , false"		5396502	1					
ANR	5396957	PrimaryExpression	4		5396502	0					
ANR	5396958	Expression	"0 , 0 , false"		5396502	1					
ANR	5396959	PrimaryExpression	0		5396502	0					
ANR	5396960	Expression	"0 , false"		5396502	1					
ANR	5396961	PrimaryExpression	0		5396502	0					
ANR	5396962	Identifier	false		5396502	1					
ANR	5396963	IdentifierDeclStatement	SubmitEvent subE ;	223:1:6330:6346	5396502	37	True				
ANR	5396964	IdentifierDecl	subE		5396502	0					
ANR	5396965	IdentifierDeclType	SubmitEvent		5396502	0					
ANR	5396966	Identifier	subE		5396502	1					
ANR	5396967	ExpressionStatement	"strcpy ( subE . submitHost , ""<128.105.165.12:32779>"" )"	224:1:6349:6398	5396502	38	True				
ANR	5396968	CallExpression	"strcpy ( subE . submitHost , ""<128.105.165.12:32779>"" )"		5396502	0					
ANR	5396969	Callee	strcpy		5396502	0					
ANR	5396970	Identifier	strcpy		5396502	0					
ANR	5396971	ArgumentList	subE . submitHost		5396502	1					
ANR	5396972	Argument	subE . submitHost		5396502	0					
ANR	5396973	MemberAccess	subE . submitHost		5396502	0					
ANR	5396974	Identifier	subE		5396502	0					
ANR	5396975	Identifier	submitHost		5396502	1					
ANR	5396976	Argument	"""<128.105.165.12:32779>"""		5396502	1					
ANR	5396977	PrimaryExpression	"""<128.105.165.12:32779>"""		5396502	0					
ANR	5396978	IfStatement	if ( ! log1 . writeEvent ( & subE ) )		5396502	39					
ANR	5396979	Condition	! log1 . writeEvent ( & subE )	225:6:6406:6428	5396502	0	True				
ANR	5396980	UnaryOperationExpression	! log1 . writeEvent ( & subE )		5396502	0					
ANR	5396981	UnaryOperator	!		5396502	0					
ANR	5396982	CallExpression	log1 . writeEvent ( & subE )		5396502	1					
ANR	5396983	Callee	log1 . writeEvent		5396502	0					
ANR	5396984	MemberAccess	log1 . writeEvent		5396502	0					
ANR	5396985	Identifier	log1		5396502	0					
ANR	5396986	Identifier	writeEvent		5396502	1					
ANR	5396987	ArgumentList	& subE		5396502	1					
ANR	5396988	Argument	& subE		5396502	0					
ANR	5396989	UnaryOperationExpression	& subE		5396502	0					
ANR	5396990	UnaryOperator	&		5396502	0					
ANR	5396991	Identifier	subE		5396502	1					
ANR	5396992	CompoundStatement		86:32:2599:2599	5396502	1					
ANR	5396993	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	226:2:6436:6487	5396502	0	True				
ANR	5396994	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5396995	Callee	printf		5396502	0					
ANR	5396996	Identifier	printf		5396502	0					
ANR	5396997	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5396998	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5396999	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397000	Argument	__FILE__		5396502	1					
ANR	5397001	Identifier	__FILE__		5396502	0					
ANR	5397002	Argument	__LINE__		5396502	2					
ANR	5397003	Identifier	__LINE__		5396502	0					
ANR	5397004	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	227:2:6491:6522	5396502	1	True				
ANR	5397005	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397006	Callee	printf		5396502	0					
ANR	5397007	Identifier	printf		5396502	0					
ANR	5397008	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397009	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397010	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397011	ExpressionStatement	fflush ( stdout )	228:2:6526:6542	5396502	2	True				
ANR	5397012	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397013	Callee	fflush		5396502	0					
ANR	5397014	Identifier	fflush		5396502	0					
ANR	5397015	ArgumentList	stdout		5396502	1					
ANR	5397016	Argument	stdout		5396502	0					
ANR	5397017	Identifier	stdout		5396502	0					
ANR	5397018	ExpressionStatement	isOkay = false	229:2:6546:6560	5396502	3	True				
ANR	5397019	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397020	Identifier	isOkay		5396502	0					
ANR	5397021	Identifier	false		5396502	1					
ANR	5397022	IfStatement	if ( ! lazyReader . detectLogGrowth ( ) )		5396502	40					
ANR	5397023	Condition	! lazyReader . detectLogGrowth ( )	232:6:6572:6600	5396502	0	True				
ANR	5397024	UnaryOperationExpression	! lazyReader . detectLogGrowth ( )		5396502	0					
ANR	5397025	UnaryOperator	!		5396502	0					
ANR	5397026	CallExpression	lazyReader . detectLogGrowth ( )		5396502	1					
ANR	5397027	Callee	lazyReader . detectLogGrowth		5396502	0					
ANR	5397028	MemberAccess	lazyReader . detectLogGrowth		5396502	0					
ANR	5397029	Identifier	lazyReader		5396502	0					
ANR	5397030	Identifier	detectLogGrowth		5396502	1					
ANR	5397031	ArgumentList			5396502	1					
ANR	5397032	CompoundStatement		93:38:2771:2771	5396502	1					
ANR	5397033	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	233:2:6608:6659	5396502	0	True				
ANR	5397034	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397035	Callee	printf		5396502	0					
ANR	5397036	Identifier	printf		5396502	0					
ANR	5397037	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397038	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397039	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397040	Argument	__FILE__		5396502	1					
ANR	5397041	Identifier	__FILE__		5396502	0					
ANR	5397042	Argument	__LINE__		5396502	2					
ANR	5397043	Identifier	__LINE__		5396502	0					
ANR	5397044	ExpressionStatement	"printf ( ""should have gotten log growth"" )"	234:2:6663:6704	5396502	1	True				
ANR	5397045	CallExpression	"printf ( ""should have gotten log growth"" )"		5396502	0					
ANR	5397046	Callee	printf		5396502	0					
ANR	5397047	Identifier	printf		5396502	0					
ANR	5397048	ArgumentList	"""should have gotten log growth"""		5396502	1					
ANR	5397049	Argument	"""should have gotten log growth"""		5396502	0					
ANR	5397050	PrimaryExpression	"""should have gotten log growth"""		5396502	0					
ANR	5397051	ExpressionStatement	fflush ( stdout )	235:2:6708:6724	5396502	2	True				
ANR	5397052	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397053	Callee	fflush		5396502	0					
ANR	5397054	Identifier	fflush		5396502	0					
ANR	5397055	ArgumentList	stdout		5396502	1					
ANR	5397056	Argument	stdout		5396502	0					
ANR	5397057	Identifier	stdout		5396502	0					
ANR	5397058	ExpressionStatement	isOkay = false	236:2:6728:6742	5396502	3	True				
ANR	5397059	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397060	Identifier	isOkay		5396502	0					
ANR	5397061	Identifier	false		5396502	1					
ANR	5397062	ExpressionStatement	subE . cluster = 1	239:1:6749:6765	5396502	41	True				
ANR	5397063	AssignmentExpression	subE . cluster = 1		5396502	0		=			
ANR	5397064	MemberAccess	subE . cluster		5396502	0					
ANR	5397065	Identifier	subE		5396502	0					
ANR	5397066	Identifier	cluster		5396502	1					
ANR	5397067	PrimaryExpression	1		5396502	1					
ANR	5397068	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		5396502	42					
ANR	5397069	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	240:6:6773:6808	5396502	0	True				
ANR	5397070	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		5396502	0					
ANR	5397071	UnaryOperator	!		5396502	0					
ANR	5397072	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		5396502	1					
ANR	5397073	Callee	ReadAndTestEvent		5396502	0					
ANR	5397074	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397075	ArgumentList	lazyReader		5396502	1					
ANR	5397076	Argument	lazyReader		5396502	0					
ANR	5397077	Identifier	lazyReader		5396502	0					
ANR	5397078	Argument	& subE		5396502	1					
ANR	5397079	UnaryOperationExpression	& subE		5396502	0					
ANR	5397080	UnaryOperator	&		5396502	0					
ANR	5397081	Identifier	subE		5396502	1					
ANR	5397082	CompoundStatement		101:45:2979:2979	5396502	1					
ANR	5397083	ExpressionStatement	isOkay = false	241:2:6816:6830	5396502	0	True				
ANR	5397084	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397085	Identifier	isOkay		5396502	0					
ANR	5397086	Identifier	false		5396502	1					
ANR	5397087	IfStatement	if ( lazyReader . detectLogGrowth ( ) )		5396502	43					
ANR	5397088	Condition	lazyReader . detectLogGrowth ( )	244:6:6842:6869	5396502	0	True				
ANR	5397089	CallExpression	lazyReader . detectLogGrowth ( )		5396502	0					
ANR	5397090	Callee	lazyReader . detectLogGrowth		5396502	0					
ANR	5397091	MemberAccess	lazyReader . detectLogGrowth		5396502	0					
ANR	5397092	Identifier	lazyReader		5396502	0					
ANR	5397093	Identifier	detectLogGrowth		5396502	1					
ANR	5397094	ArgumentList			5396502	1					
ANR	5397095	CompoundStatement		105:37:3040:3040	5396502	1					
ANR	5397096	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	245:2:6877:6928	5396502	0	True				
ANR	5397097	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397098	Callee	printf		5396502	0					
ANR	5397099	Identifier	printf		5396502	0					
ANR	5397100	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397101	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397102	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397103	Argument	__FILE__		5396502	1					
ANR	5397104	Identifier	__FILE__		5396502	0					
ANR	5397105	Argument	__LINE__		5396502	2					
ANR	5397106	Identifier	__LINE__		5396502	0					
ANR	5397107	ExpressionStatement	"printf ( ""should NOT have gotten log growth"" )"	246:2:6932:6977	5396502	1	True				
ANR	5397108	CallExpression	"printf ( ""should NOT have gotten log growth"" )"		5396502	0					
ANR	5397109	Callee	printf		5396502	0					
ANR	5397110	Identifier	printf		5396502	0					
ANR	5397111	ArgumentList	"""should NOT have gotten log growth"""		5396502	1					
ANR	5397112	Argument	"""should NOT have gotten log growth"""		5396502	0					
ANR	5397113	PrimaryExpression	"""should NOT have gotten log growth"""		5396502	0					
ANR	5397114	ExpressionStatement	fflush ( stdout )	247:2:6981:6997	5396502	2	True				
ANR	5397115	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397116	Callee	fflush		5396502	0					
ANR	5397117	Identifier	fflush		5396502	0					
ANR	5397118	ArgumentList	stdout		5396502	1					
ANR	5397119	Argument	stdout		5396502	0					
ANR	5397120	Identifier	stdout		5396502	0					
ANR	5397121	ExpressionStatement	isOkay = false	248:2:7001:7015	5396502	3	True				
ANR	5397122	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397123	Identifier	isOkay		5396502	0					
ANR	5397124	Identifier	false		5396502	1					
ANR	5397125	IdentifierDeclStatement	JobTerminatedEvent termE ;	251:1:7022:7046	5396502	44	True				
ANR	5397126	IdentifierDecl	termE		5396502	0					
ANR	5397127	IdentifierDeclType	JobTerminatedEvent		5396502	0					
ANR	5397128	Identifier	termE		5396502	1					
ANR	5397129	ExpressionStatement	termE . normal = true	252:1:7049:7068	5396502	45	True				
ANR	5397130	AssignmentExpression	termE . normal = true		5396502	0		=			
ANR	5397131	MemberAccess	termE . normal		5396502	0					
ANR	5397132	Identifier	termE		5396502	0					
ANR	5397133	Identifier	normal		5396502	1					
ANR	5397134	Identifier	true		5396502	1					
ANR	5397135	ExpressionStatement	termE . returnValue = 0	253:1:7071:7092	5396502	46	True				
ANR	5397136	AssignmentExpression	termE . returnValue = 0		5396502	0		=			
ANR	5397137	MemberAccess	termE . returnValue		5396502	0					
ANR	5397138	Identifier	termE		5396502	0					
ANR	5397139	Identifier	returnValue		5396502	1					
ANR	5397140	PrimaryExpression	0		5396502	1					
ANR	5397141	IfStatement	if ( ! log1 . writeEvent ( & termE ) )		5396502	47					
ANR	5397142	Condition	! log1 . writeEvent ( & termE )	254:6:7100:7123	5396502	0	True				
ANR	5397143	UnaryOperationExpression	! log1 . writeEvent ( & termE )		5396502	0					
ANR	5397144	UnaryOperator	!		5396502	0					
ANR	5397145	CallExpression	log1 . writeEvent ( & termE )		5396502	1					
ANR	5397146	Callee	log1 . writeEvent		5396502	0					
ANR	5397147	MemberAccess	log1 . writeEvent		5396502	0					
ANR	5397148	Identifier	log1		5396502	0					
ANR	5397149	Identifier	writeEvent		5396502	1					
ANR	5397150	ArgumentList	& termE		5396502	1					
ANR	5397151	Argument	& termE		5396502	0					
ANR	5397152	UnaryOperationExpression	& termE		5396502	0					
ANR	5397153	UnaryOperator	&		5396502	0					
ANR	5397154	Identifier	termE		5396502	1					
ANR	5397155	CompoundStatement		115:33:3294:3294	5396502	1					
ANR	5397156	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	255:2:7131:7182	5396502	0	True				
ANR	5397157	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397158	Callee	printf		5396502	0					
ANR	5397159	Identifier	printf		5396502	0					
ANR	5397160	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397161	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397162	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397163	Argument	__FILE__		5396502	1					
ANR	5397164	Identifier	__FILE__		5396502	0					
ANR	5397165	Argument	__LINE__		5396502	2					
ANR	5397166	Identifier	__LINE__		5396502	0					
ANR	5397167	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	256:2:7186:7217	5396502	1	True				
ANR	5397168	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397169	Callee	printf		5396502	0					
ANR	5397170	Identifier	printf		5396502	0					
ANR	5397171	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397172	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397173	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397174	ExpressionStatement	fflush ( stdout )	257:2:7221:7237	5396502	2	True				
ANR	5397175	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397176	Callee	fflush		5396502	0					
ANR	5397177	Identifier	fflush		5396502	0					
ANR	5397178	ArgumentList	stdout		5396502	1					
ANR	5397179	Argument	stdout		5396502	0					
ANR	5397180	Identifier	stdout		5396502	0					
ANR	5397181	ExpressionStatement	isOkay = false	258:2:7241:7255	5396502	3	True				
ANR	5397182	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397183	Identifier	isOkay		5396502	0					
ANR	5397184	Identifier	false		5396502	1					
ANR	5397185	ExpressionStatement	termE . cluster = 1	261:1:7262:7279	5396502	48	True				
ANR	5397186	AssignmentExpression	termE . cluster = 1		5396502	0		=			
ANR	5397187	MemberAccess	termE . cluster		5396502	0					
ANR	5397188	Identifier	termE		5396502	0					
ANR	5397189	Identifier	cluster		5396502	1					
ANR	5397190	PrimaryExpression	1		5396502	1					
ANR	5397191	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		5396502	49					
ANR	5397192	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	262:6:7287:7323	5396502	0	True				
ANR	5397193	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		5396502	0					
ANR	5397194	UnaryOperator	!		5396502	0					
ANR	5397195	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		5396502	1					
ANR	5397196	Callee	ReadAndTestEvent		5396502	0					
ANR	5397197	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397198	ArgumentList	lazyReader		5396502	1					
ANR	5397199	Argument	lazyReader		5396502	0					
ANR	5397200	Identifier	lazyReader		5396502	0					
ANR	5397201	Argument	& termE		5396502	1					
ANR	5397202	UnaryOperationExpression	& termE		5396502	0					
ANR	5397203	UnaryOperator	&		5396502	0					
ANR	5397204	Identifier	termE		5396502	1					
ANR	5397205	CompoundStatement		123:46:3494:3494	5396502	1					
ANR	5397206	ExpressionStatement	isOkay = false	263:2:7331:7345	5396502	0	True				
ANR	5397207	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397208	Identifier	isOkay		5396502	0					
ANR	5397209	Identifier	false		5396502	1					
ANR	5397210	IfStatement	if ( ! log2 . writeEvent ( & subE ) )		5396502	50					
ANR	5397211	Condition	! log2 . writeEvent ( & subE )	269:6:7400:7422	5396502	0	True				
ANR	5397212	UnaryOperationExpression	! log2 . writeEvent ( & subE )		5396502	0					
ANR	5397213	UnaryOperator	!		5396502	0					
ANR	5397214	CallExpression	log2 . writeEvent ( & subE )		5396502	1					
ANR	5397215	Callee	log2 . writeEvent		5396502	0					
ANR	5397216	MemberAccess	log2 . writeEvent		5396502	0					
ANR	5397217	Identifier	log2		5396502	0					
ANR	5397218	Identifier	writeEvent		5396502	1					
ANR	5397219	ArgumentList	& subE		5396502	1					
ANR	5397220	Argument	& subE		5396502	0					
ANR	5397221	UnaryOperationExpression	& subE		5396502	0					
ANR	5397222	UnaryOperator	&		5396502	0					
ANR	5397223	Identifier	subE		5396502	1					
ANR	5397224	CompoundStatement		130:32:3593:3593	5396502	1					
ANR	5397225	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	270:2:7430:7481	5396502	0	True				
ANR	5397226	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397227	Callee	printf		5396502	0					
ANR	5397228	Identifier	printf		5396502	0					
ANR	5397229	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397230	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397231	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397232	Argument	__FILE__		5396502	1					
ANR	5397233	Identifier	__FILE__		5396502	0					
ANR	5397234	Argument	__LINE__		5396502	2					
ANR	5397235	Identifier	__LINE__		5396502	0					
ANR	5397236	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	271:2:7485:7516	5396502	1	True				
ANR	5397237	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397238	Callee	printf		5396502	0					
ANR	5397239	Identifier	printf		5396502	0					
ANR	5397240	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397241	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397242	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397243	ExpressionStatement	fflush ( stdout )	272:2:7520:7536	5396502	2	True				
ANR	5397244	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397245	Callee	fflush		5396502	0					
ANR	5397246	Identifier	fflush		5396502	0					
ANR	5397247	ArgumentList	stdout		5396502	1					
ANR	5397248	Argument	stdout		5396502	0					
ANR	5397249	Identifier	stdout		5396502	0					
ANR	5397250	ExpressionStatement	isOkay = false	273:2:7540:7554	5396502	3	True				
ANR	5397251	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397252	Identifier	isOkay		5396502	0					
ANR	5397253	Identifier	false		5396502	1					
ANR	5397254	IfStatement	"if ( ! monitorLogFile ( lazyReader , file2 , true ) )"		5396502	51					
ANR	5397255	Condition	"! monitorLogFile ( lazyReader , file2 , true )"	276:5:7565:7606	5396502	0	True				
ANR	5397256	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file2 , true )"		5396502	0					
ANR	5397257	UnaryOperator	!		5396502	0					
ANR	5397258	CallExpression	"monitorLogFile ( lazyReader , file2 , true )"		5396502	1					
ANR	5397259	Callee	monitorLogFile		5396502	0					
ANR	5397260	Identifier	monitorLogFile		5396502	0					
ANR	5397261	ArgumentList	lazyReader		5396502	1					
ANR	5397262	Argument	lazyReader		5396502	0					
ANR	5397263	Identifier	lazyReader		5396502	0					
ANR	5397264	Argument	file2		5396502	1					
ANR	5397265	Identifier	file2		5396502	0					
ANR	5397266	Argument	true		5396502	2					
ANR	5397267	Identifier	true		5396502	0					
ANR	5397268	CompoundStatement		137:50:3777:3777	5396502	1					
ANR	5397269	ExpressionStatement	isOkay = false	277:2:7614:7628	5396502	0	True				
ANR	5397270	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397271	Identifier	isOkay		5396502	0					
ANR	5397272	Identifier	false		5396502	1					
ANR	5397273	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	52					
ANR	5397274	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	280:6:7640:7676	5396502	0	True				
ANR	5397275	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5397276	UnaryOperator	!		5396502	0					
ANR	5397277	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5397278	Callee	ReadAndTestEvent		5396502	0					
ANR	5397279	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397280	ArgumentList	lazyReader		5396502	1					
ANR	5397281	Argument	lazyReader		5396502	0					
ANR	5397282	Identifier	lazyReader		5396502	0					
ANR	5397283	Argument	NULL		5396502	1					
ANR	5397284	Identifier	NULL		5396502	0					
ANR	5397285	CompoundStatement		141:46:3847:3847	5396502	1					
ANR	5397286	ExpressionStatement	isOkay = false	281:2:7684:7698	5396502	0	True				
ANR	5397287	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397288	Identifier	isOkay		5396502	0					
ANR	5397289	Identifier	false		5396502	1					
ANR	5397290	IfStatement	"if ( unmonitorLogFile ( lazyReader , file3 ) )"		5396502	53					
ANR	5397291	Condition	"unmonitorLogFile ( lazyReader , file3 )"	287:6:7783:7819	5396502	0	True				
ANR	5397292	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		5396502	0					
ANR	5397293	Callee	unmonitorLogFile		5396502	0					
ANR	5397294	Identifier	unmonitorLogFile		5396502	0					
ANR	5397295	ArgumentList	lazyReader		5396502	1					
ANR	5397296	Argument	lazyReader		5396502	0					
ANR	5397297	Identifier	lazyReader		5396502	0					
ANR	5397298	Argument	file3		5396502	1					
ANR	5397299	Identifier	file3		5396502	0					
ANR	5397300	CompoundStatement		148:46:3990:3990	5396502	1					
ANR	5397301	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	288:2:7827:7878	5396502	0	True				
ANR	5397302	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397303	Callee	printf		5396502	0					
ANR	5397304	Identifier	printf		5396502	0					
ANR	5397305	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397306	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397307	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397308	Argument	__FILE__		5396502	1					
ANR	5397309	Identifier	__FILE__		5396502	0					
ANR	5397310	Argument	__LINE__		5396502	2					
ANR	5397311	Identifier	__LINE__		5396502	0					
ANR	5397312	ExpressionStatement	"printf ( ""Unmonitoring file %s should have failed\\n"" , file3 )"	289:2:7882:7942	5396502	1	True				
ANR	5397313	CallExpression	"printf ( ""Unmonitoring file %s should have failed\\n"" , file3 )"		5396502	0					
ANR	5397314	Callee	printf		5396502	0					
ANR	5397315	Identifier	printf		5396502	0					
ANR	5397316	ArgumentList	"""Unmonitoring file %s should have failed\\n"""		5396502	1					
ANR	5397317	Argument	"""Unmonitoring file %s should have failed\\n"""		5396502	0					
ANR	5397318	PrimaryExpression	"""Unmonitoring file %s should have failed\\n"""		5396502	0					
ANR	5397319	Argument	file3		5396502	1					
ANR	5397320	Identifier	file3		5396502	0					
ANR	5397321	ExpressionStatement	fflush ( stdout )	290:2:7946:7962	5396502	2	True				
ANR	5397322	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397323	Callee	fflush		5396502	0					
ANR	5397324	Identifier	fflush		5396502	0					
ANR	5397325	ArgumentList	stdout		5396502	1					
ANR	5397326	Argument	stdout		5396502	0					
ANR	5397327	Identifier	stdout		5396502	0					
ANR	5397328	ExpressionStatement	isOkay = false	291:2:7966:7980	5396502	3	True				
ANR	5397329	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397330	Identifier	isOkay		5396502	0					
ANR	5397331	Identifier	false		5396502	1					
ANR	5397332	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		5396502	54					
ANR	5397333	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	297:5:8067:8108	5396502	0	True				
ANR	5397334	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		5396502	0					
ANR	5397335	UnaryOperator	!		5396502	0					
ANR	5397336	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		5396502	1					
ANR	5397337	Callee	monitorLogFile		5396502	0					
ANR	5397338	Identifier	monitorLogFile		5396502	0					
ANR	5397339	ArgumentList	lazyReader		5396502	1					
ANR	5397340	Argument	lazyReader		5396502	0					
ANR	5397341	Identifier	lazyReader		5396502	0					
ANR	5397342	Argument	file3		5396502	1					
ANR	5397343	Identifier	file3		5396502	0					
ANR	5397344	Argument	true		5396502	2					
ANR	5397345	Identifier	true		5396502	0					
ANR	5397346	CompoundStatement		158:50:4279:4279	5396502	1					
ANR	5397347	ExpressionStatement	isOkay = false	298:2:8116:8130	5396502	0	True				
ANR	5397348	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397349	Identifier	isOkay		5396502	0					
ANR	5397350	Identifier	false		5396502	1					
ANR	5397351	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		5396502	55					
ANR	5397352	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	300:5:8140:8181	5396502	0	True				
ANR	5397353	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		5396502	0					
ANR	5397354	UnaryOperator	!		5396502	0					
ANR	5397355	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		5396502	1					
ANR	5397356	Callee	monitorLogFile		5396502	0					
ANR	5397357	Identifier	monitorLogFile		5396502	0					
ANR	5397358	ArgumentList	lazyReader		5396502	1					
ANR	5397359	Argument	lazyReader		5396502	0					
ANR	5397360	Identifier	lazyReader		5396502	0					
ANR	5397361	Argument	file3		5396502	1					
ANR	5397362	Identifier	file3		5396502	0					
ANR	5397363	Argument	true		5396502	2					
ANR	5397364	Identifier	true		5396502	0					
ANR	5397365	CompoundStatement		161:50:4352:4352	5396502	1					
ANR	5397366	ExpressionStatement	isOkay = false	301:2:8189:8203	5396502	0	True				
ANR	5397367	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397368	Identifier	isOkay		5396502	0					
ANR	5397369	Identifier	false		5396502	1					
ANR	5397370	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		5396502	56					
ANR	5397371	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	303:5:8213:8254	5396502	0	True				
ANR	5397372	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		5396502	0					
ANR	5397373	UnaryOperator	!		5396502	0					
ANR	5397374	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		5396502	1					
ANR	5397375	Callee	monitorLogFile		5396502	0					
ANR	5397376	Identifier	monitorLogFile		5396502	0					
ANR	5397377	ArgumentList	lazyReader		5396502	1					
ANR	5397378	Argument	lazyReader		5396502	0					
ANR	5397379	Identifier	lazyReader		5396502	0					
ANR	5397380	Argument	file3		5396502	1					
ANR	5397381	Identifier	file3		5396502	0					
ANR	5397382	Argument	true		5396502	2					
ANR	5397383	Identifier	true		5396502	0					
ANR	5397384	CompoundStatement		164:50:4425:4425	5396502	1					
ANR	5397385	ExpressionStatement	isOkay = false	304:2:8262:8276	5396502	0	True				
ANR	5397386	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397387	Identifier	isOkay		5396502	0					
ANR	5397388	Identifier	false		5396502	1					
ANR	5397389	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		5396502	57					
ANR	5397390	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	306:5:8286:8327	5396502	0	True				
ANR	5397391	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		5396502	0					
ANR	5397392	UnaryOperator	!		5396502	0					
ANR	5397393	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		5396502	1					
ANR	5397394	Callee	monitorLogFile		5396502	0					
ANR	5397395	Identifier	monitorLogFile		5396502	0					
ANR	5397396	ArgumentList	lazyReader		5396502	1					
ANR	5397397	Argument	lazyReader		5396502	0					
ANR	5397398	Identifier	lazyReader		5396502	0					
ANR	5397399	Argument	file3		5396502	1					
ANR	5397400	Identifier	file3		5396502	0					
ANR	5397401	Argument	true		5396502	2					
ANR	5397402	Identifier	true		5396502	0					
ANR	5397403	CompoundStatement		167:50:4498:4498	5396502	1					
ANR	5397404	ExpressionStatement	isOkay = false	307:2:8335:8349	5396502	0	True				
ANR	5397405	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397406	Identifier	isOkay		5396502	0					
ANR	5397407	Identifier	false		5396502	1					
ANR	5397408	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3 )		5396502	58					
ANR	5397409	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3	309:6:8360:8412	5396502	0	True				
ANR	5397410	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3		5396502	0		!=			
ANR	5397411	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		5396502	0		=			
ANR	5397412	Identifier	totalLogCount		5396502	0					
ANR	5397413	CallExpression	lazyReader . totalLogFileCount ( )		5396502	1					
ANR	5397414	Callee	lazyReader . totalLogFileCount		5396502	0					
ANR	5397415	MemberAccess	lazyReader . totalLogFileCount		5396502	0					
ANR	5397416	Identifier	lazyReader		5396502	0					
ANR	5397417	Identifier	totalLogFileCount		5396502	1					
ANR	5397418	ArgumentList			5396502	1					
ANR	5397419	PrimaryExpression	3		5396502	1					
ANR	5397420	CompoundStatement		170:62:4583:4583	5396502	1					
ANR	5397421	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	310:2:8420:8471	5396502	0	True				
ANR	5397422	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397423	Callee	printf		5396502	0					
ANR	5397424	Identifier	printf		5396502	0					
ANR	5397425	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397426	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397427	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397428	Argument	__FILE__		5396502	1					
ANR	5397429	Identifier	__FILE__		5396502	0					
ANR	5397430	Argument	__LINE__		5396502	2					
ANR	5397431	Identifier	__LINE__		5396502	0					
ANR	5397432	Statement	printf	311:2:8475:8480	5396502	1	True				
ANR	5397433	Statement	(	311:8:8481:8481	5396502	2	True				
ANR	5397434	Statement	"""lazyReader.totalLogFileCount() was %d; should """	311:10:8483:8530	5396502	3	True				
ANR	5397435	Statement	"""have been 3\\n"""	312:5:8537:8551	5396502	4	True				
ANR	5397436	Statement	","	312:20:8552:8552	5396502	5	True				
ANR	5397437	Statement	totalLogCount	312:22:8554:8566	5396502	6	True				
ANR	5397438	Statement	)	312:36:8568:8568	5396502	7	True				
ANR	5397439	ExpressionStatement		312:37:8569:8569	5396502	8	True				
ANR	5397440	ExpressionStatement	fflush ( stdout )	313:2:8573:8589	5396502	9	True				
ANR	5397441	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397442	Callee	fflush		5396502	0					
ANR	5397443	Identifier	fflush		5396502	0					
ANR	5397444	ArgumentList	stdout		5396502	1					
ANR	5397445	Argument	stdout		5396502	0					
ANR	5397446	Identifier	stdout		5396502	0					
ANR	5397447	ExpressionStatement	isOkay = false	314:2:8593:8607	5396502	10	True				
ANR	5397448	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397449	Identifier	isOkay		5396502	0					
ANR	5397450	Identifier	false		5396502	1					
ANR	5397451	ExpressionStatement	lazyReader . printAllLogMonitors ( stdout )	317:1:8614:8654	5396502	59	True				
ANR	5397452	CallExpression	lazyReader . printAllLogMonitors ( stdout )		5396502	0					
ANR	5397453	Callee	lazyReader . printAllLogMonitors		5396502	0					
ANR	5397454	MemberAccess	lazyReader . printAllLogMonitors		5396502	0					
ANR	5397455	Identifier	lazyReader		5396502	0					
ANR	5397456	Identifier	printAllLogMonitors		5396502	1					
ANR	5397457	ArgumentList	stdout		5396502	1					
ANR	5397458	Argument	stdout		5396502	0					
ANR	5397459	Identifier	stdout		5396502	0					
ANR	5397460	IfStatement	if ( ! log2 . writeEvent ( & subE ) )		5396502	60					
ANR	5397461	Condition	! log2 . writeEvent ( & subE )	319:6:8663:8685	5396502	0	True				
ANR	5397462	UnaryOperationExpression	! log2 . writeEvent ( & subE )		5396502	0					
ANR	5397463	UnaryOperator	!		5396502	0					
ANR	5397464	CallExpression	log2 . writeEvent ( & subE )		5396502	1					
ANR	5397465	Callee	log2 . writeEvent		5396502	0					
ANR	5397466	MemberAccess	log2 . writeEvent		5396502	0					
ANR	5397467	Identifier	log2		5396502	0					
ANR	5397468	Identifier	writeEvent		5396502	1					
ANR	5397469	ArgumentList	& subE		5396502	1					
ANR	5397470	Argument	& subE		5396502	0					
ANR	5397471	UnaryOperationExpression	& subE		5396502	0					
ANR	5397472	UnaryOperator	&		5396502	0					
ANR	5397473	Identifier	subE		5396502	1					
ANR	5397474	CompoundStatement		180:32:4856:4856	5396502	1					
ANR	5397475	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	320:2:8693:8744	5396502	0	True				
ANR	5397476	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397477	Callee	printf		5396502	0					
ANR	5397478	Identifier	printf		5396502	0					
ANR	5397479	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397480	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397481	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397482	Argument	__FILE__		5396502	1					
ANR	5397483	Identifier	__FILE__		5396502	0					
ANR	5397484	Argument	__LINE__		5396502	2					
ANR	5397485	Identifier	__LINE__		5396502	0					
ANR	5397486	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	321:2:8748:8779	5396502	1	True				
ANR	5397487	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397488	Callee	printf		5396502	0					
ANR	5397489	Identifier	printf		5396502	0					
ANR	5397490	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397491	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397492	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397493	ExpressionStatement	fflush ( stdout )	322:2:8783:8799	5396502	2	True				
ANR	5397494	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397495	Callee	fflush		5396502	0					
ANR	5397496	Identifier	fflush		5396502	0					
ANR	5397497	ArgumentList	stdout		5396502	1					
ANR	5397498	Argument	stdout		5396502	0					
ANR	5397499	Identifier	stdout		5396502	0					
ANR	5397500	ExpressionStatement	isOkay = false	323:2:8803:8817	5396502	3	True				
ANR	5397501	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397502	Identifier	isOkay		5396502	0					
ANR	5397503	Identifier	false		5396502	1					
ANR	5397504	ExpressionStatement	sleep ( 2 )	326:1:8891:8899	5396502	61	True				
ANR	5397505	CallExpression	sleep ( 2 )		5396502	0					
ANR	5397506	Callee	sleep		5396502	0					
ANR	5397507	Identifier	sleep		5396502	0					
ANR	5397508	ArgumentList	2		5396502	1					
ANR	5397509	Argument	2		5396502	0					
ANR	5397510	PrimaryExpression	2		5396502	0					
ANR	5397511	IfStatement	if ( ! log3 . writeEvent ( & subE ) )		5396502	62					
ANR	5397512	Condition	! log3 . writeEvent ( & subE )	327:6:8907:8929	5396502	0	True				
ANR	5397513	UnaryOperationExpression	! log3 . writeEvent ( & subE )		5396502	0					
ANR	5397514	UnaryOperator	!		5396502	0					
ANR	5397515	CallExpression	log3 . writeEvent ( & subE )		5396502	1					
ANR	5397516	Callee	log3 . writeEvent		5396502	0					
ANR	5397517	MemberAccess	log3 . writeEvent		5396502	0					
ANR	5397518	Identifier	log3		5396502	0					
ANR	5397519	Identifier	writeEvent		5396502	1					
ANR	5397520	ArgumentList	& subE		5396502	1					
ANR	5397521	Argument	& subE		5396502	0					
ANR	5397522	UnaryOperationExpression	& subE		5396502	0					
ANR	5397523	UnaryOperator	&		5396502	0					
ANR	5397524	Identifier	subE		5396502	1					
ANR	5397525	CompoundStatement		188:32:5100:5100	5396502	1					
ANR	5397526	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	328:2:8937:8988	5396502	0	True				
ANR	5397527	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397528	Callee	printf		5396502	0					
ANR	5397529	Identifier	printf		5396502	0					
ANR	5397530	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397531	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397532	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397533	Argument	__FILE__		5396502	1					
ANR	5397534	Identifier	__FILE__		5396502	0					
ANR	5397535	Argument	__LINE__		5396502	2					
ANR	5397536	Identifier	__LINE__		5396502	0					
ANR	5397537	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	329:2:8992:9023	5396502	1	True				
ANR	5397538	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397539	Callee	printf		5396502	0					
ANR	5397540	Identifier	printf		5396502	0					
ANR	5397541	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397542	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397543	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397544	ExpressionStatement	fflush ( stdout )	330:2:9027:9043	5396502	2	True				
ANR	5397545	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397546	Callee	fflush		5396502	0					
ANR	5397547	Identifier	fflush		5396502	0					
ANR	5397548	ArgumentList	stdout		5396502	1					
ANR	5397549	Argument	stdout		5396502	0					
ANR	5397550	Identifier	stdout		5396502	0					
ANR	5397551	ExpressionStatement	isOkay = false	331:2:9047:9061	5396502	3	True				
ANR	5397552	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397553	Identifier	isOkay		5396502	0					
ANR	5397554	Identifier	false		5396502	1					
ANR	5397555	IfStatement	if ( ! lazyReader . detectLogGrowth ( ) )		5396502	63					
ANR	5397556	Condition	! lazyReader . detectLogGrowth ( )	334:6:9073:9101	5396502	0	True				
ANR	5397557	UnaryOperationExpression	! lazyReader . detectLogGrowth ( )		5396502	0					
ANR	5397558	UnaryOperator	!		5396502	0					
ANR	5397559	CallExpression	lazyReader . detectLogGrowth ( )		5396502	1					
ANR	5397560	Callee	lazyReader . detectLogGrowth		5396502	0					
ANR	5397561	MemberAccess	lazyReader . detectLogGrowth		5396502	0					
ANR	5397562	Identifier	lazyReader		5396502	0					
ANR	5397563	Identifier	detectLogGrowth		5396502	1					
ANR	5397564	ArgumentList			5396502	1					
ANR	5397565	CompoundStatement		195:38:5272:5272	5396502	1					
ANR	5397566	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	335:2:9109:9160	5396502	0	True				
ANR	5397567	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397568	Callee	printf		5396502	0					
ANR	5397569	Identifier	printf		5396502	0					
ANR	5397570	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397571	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397572	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397573	Argument	__FILE__		5396502	1					
ANR	5397574	Identifier	__FILE__		5396502	0					
ANR	5397575	Argument	__LINE__		5396502	2					
ANR	5397576	Identifier	__LINE__		5396502	0					
ANR	5397577	ExpressionStatement	"printf ( ""should have gotten log growth"" )"	336:2:9164:9205	5396502	1	True				
ANR	5397578	CallExpression	"printf ( ""should have gotten log growth"" )"		5396502	0					
ANR	5397579	Callee	printf		5396502	0					
ANR	5397580	Identifier	printf		5396502	0					
ANR	5397581	ArgumentList	"""should have gotten log growth"""		5396502	1					
ANR	5397582	Argument	"""should have gotten log growth"""		5396502	0					
ANR	5397583	PrimaryExpression	"""should have gotten log growth"""		5396502	0					
ANR	5397584	ExpressionStatement	fflush ( stdout )	337:2:9209:9225	5396502	2	True				
ANR	5397585	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397586	Callee	fflush		5396502	0					
ANR	5397587	Identifier	fflush		5396502	0					
ANR	5397588	ArgumentList	stdout		5396502	1					
ANR	5397589	Argument	stdout		5396502	0					
ANR	5397590	Identifier	stdout		5396502	0					
ANR	5397591	ExpressionStatement	isOkay = false	338:2:9229:9243	5396502	3	True				
ANR	5397592	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397593	Identifier	isOkay		5396502	0					
ANR	5397594	Identifier	false		5396502	1					
ANR	5397595	ExpressionStatement	subE . cluster = 2	341:1:9250:9266	5396502	64	True				
ANR	5397596	AssignmentExpression	subE . cluster = 2		5396502	0		=			
ANR	5397597	MemberAccess	subE . cluster		5396502	0					
ANR	5397598	Identifier	subE		5396502	0					
ANR	5397599	Identifier	cluster		5396502	1					
ANR	5397600	PrimaryExpression	2		5396502	1					
ANR	5397601	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		5396502	65					
ANR	5397602	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	342:6:9274:9309	5396502	0	True				
ANR	5397603	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		5396502	0					
ANR	5397604	UnaryOperator	!		5396502	0					
ANR	5397605	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		5396502	1					
ANR	5397606	Callee	ReadAndTestEvent		5396502	0					
ANR	5397607	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397608	ArgumentList	lazyReader		5396502	1					
ANR	5397609	Argument	lazyReader		5396502	0					
ANR	5397610	Identifier	lazyReader		5396502	0					
ANR	5397611	Argument	& subE		5396502	1					
ANR	5397612	UnaryOperationExpression	& subE		5396502	0					
ANR	5397613	UnaryOperator	&		5396502	0					
ANR	5397614	Identifier	subE		5396502	1					
ANR	5397615	CompoundStatement		203:45:5480:5480	5396502	1					
ANR	5397616	ExpressionStatement	isOkay = false	343:2:9317:9331	5396502	0	True				
ANR	5397617	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397618	Identifier	isOkay		5396502	0					
ANR	5397619	Identifier	false		5396502	1					
ANR	5397620	ExpressionStatement	subE . cluster = 3	346:1:9338:9354	5396502	66	True				
ANR	5397621	AssignmentExpression	subE . cluster = 3		5396502	0		=			
ANR	5397622	MemberAccess	subE . cluster		5396502	0					
ANR	5397623	Identifier	subE		5396502	0					
ANR	5397624	Identifier	cluster		5396502	1					
ANR	5397625	PrimaryExpression	3		5396502	1					
ANR	5397626	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		5396502	67					
ANR	5397627	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	347:6:9362:9397	5396502	0	True				
ANR	5397628	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		5396502	0					
ANR	5397629	UnaryOperator	!		5396502	0					
ANR	5397630	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		5396502	1					
ANR	5397631	Callee	ReadAndTestEvent		5396502	0					
ANR	5397632	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397633	ArgumentList	lazyReader		5396502	1					
ANR	5397634	Argument	lazyReader		5396502	0					
ANR	5397635	Identifier	lazyReader		5396502	0					
ANR	5397636	Argument	& subE		5396502	1					
ANR	5397637	UnaryOperationExpression	& subE		5396502	0					
ANR	5397638	UnaryOperator	&		5396502	0					
ANR	5397639	Identifier	subE		5396502	1					
ANR	5397640	CompoundStatement		208:45:5568:5568	5396502	1					
ANR	5397641	ExpressionStatement	isOkay = false	348:2:9405:9419	5396502	0	True				
ANR	5397642	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397643	Identifier	isOkay		5396502	0					
ANR	5397644	Identifier	false		5396502	1					
ANR	5397645	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	68					
ANR	5397646	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	351:6:9431:9465	5396502	0	True				
ANR	5397647	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5397648	UnaryOperator	!		5396502	0					
ANR	5397649	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5397650	Callee	ReadAndTestEvent		5396502	0					
ANR	5397651	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397652	ArgumentList	lazyReader		5396502	1					
ANR	5397653	Argument	lazyReader		5396502	0					
ANR	5397654	Identifier	lazyReader		5396502	0					
ANR	5397655	Argument	NULL		5396502	1					
ANR	5397656	Identifier	NULL		5396502	0					
ANR	5397657	CompoundStatement		212:44:5636:5636	5396502	1					
ANR	5397658	ExpressionStatement	isOkay = false	352:2:9473:9487	5396502	0	True				
ANR	5397659	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397660	Identifier	isOkay		5396502	0					
ANR	5397661	Identifier	false		5396502	1					
ANR	5397662	IfStatement	if ( ! log2 . writeEvent ( & termE ) )		5396502	69					
ANR	5397663	Condition	! log2 . writeEvent ( & termE )	355:6:9499:9522	5396502	0	True				
ANR	5397664	UnaryOperationExpression	! log2 . writeEvent ( & termE )		5396502	0					
ANR	5397665	UnaryOperator	!		5396502	0					
ANR	5397666	CallExpression	log2 . writeEvent ( & termE )		5396502	1					
ANR	5397667	Callee	log2 . writeEvent		5396502	0					
ANR	5397668	MemberAccess	log2 . writeEvent		5396502	0					
ANR	5397669	Identifier	log2		5396502	0					
ANR	5397670	Identifier	writeEvent		5396502	1					
ANR	5397671	ArgumentList	& termE		5396502	1					
ANR	5397672	Argument	& termE		5396502	0					
ANR	5397673	UnaryOperationExpression	& termE		5396502	0					
ANR	5397674	UnaryOperator	&		5396502	0					
ANR	5397675	Identifier	termE		5396502	1					
ANR	5397676	CompoundStatement		216:33:5693:5693	5396502	1					
ANR	5397677	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	356:2:9530:9581	5396502	0	True				
ANR	5397678	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397679	Callee	printf		5396502	0					
ANR	5397680	Identifier	printf		5396502	0					
ANR	5397681	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397682	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397683	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397684	Argument	__FILE__		5396502	1					
ANR	5397685	Identifier	__FILE__		5396502	0					
ANR	5397686	Argument	__LINE__		5396502	2					
ANR	5397687	Identifier	__LINE__		5396502	0					
ANR	5397688	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	357:2:9585:9616	5396502	1	True				
ANR	5397689	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397690	Callee	printf		5396502	0					
ANR	5397691	Identifier	printf		5396502	0					
ANR	5397692	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397693	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397694	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397695	ExpressionStatement	fflush ( stdout )	358:2:9620:9636	5396502	2	True				
ANR	5397696	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397697	Callee	fflush		5396502	0					
ANR	5397698	Identifier	fflush		5396502	0					
ANR	5397699	ArgumentList	stdout		5396502	1					
ANR	5397700	Argument	stdout		5396502	0					
ANR	5397701	Identifier	stdout		5396502	0					
ANR	5397702	ExpressionStatement	isOkay = false	359:2:9640:9654	5396502	3	True				
ANR	5397703	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397704	Identifier	isOkay		5396502	0					
ANR	5397705	Identifier	false		5396502	1					
ANR	5397706	ExpressionStatement	sleep ( 2 )	362:1:9728:9736	5396502	70	True				
ANR	5397707	CallExpression	sleep ( 2 )		5396502	0					
ANR	5397708	Callee	sleep		5396502	0					
ANR	5397709	Identifier	sleep		5396502	0					
ANR	5397710	ArgumentList	2		5396502	1					
ANR	5397711	Argument	2		5396502	0					
ANR	5397712	PrimaryExpression	2		5396502	0					
ANR	5397713	IfStatement	if ( ! log3 . writeEvent ( & termE ) )		5396502	71					
ANR	5397714	Condition	! log3 . writeEvent ( & termE )	363:6:9744:9767	5396502	0	True				
ANR	5397715	UnaryOperationExpression	! log3 . writeEvent ( & termE )		5396502	0					
ANR	5397716	UnaryOperator	!		5396502	0					
ANR	5397717	CallExpression	log3 . writeEvent ( & termE )		5396502	1					
ANR	5397718	Callee	log3 . writeEvent		5396502	0					
ANR	5397719	MemberAccess	log3 . writeEvent		5396502	0					
ANR	5397720	Identifier	log3		5396502	0					
ANR	5397721	Identifier	writeEvent		5396502	1					
ANR	5397722	ArgumentList	& termE		5396502	1					
ANR	5397723	Argument	& termE		5396502	0					
ANR	5397724	UnaryOperationExpression	& termE		5396502	0					
ANR	5397725	UnaryOperator	&		5396502	0					
ANR	5397726	Identifier	termE		5396502	1					
ANR	5397727	CompoundStatement		224:33:5938:5938	5396502	1					
ANR	5397728	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	364:2:9775:9826	5396502	0	True				
ANR	5397729	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397730	Callee	printf		5396502	0					
ANR	5397731	Identifier	printf		5396502	0					
ANR	5397732	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397733	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397734	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397735	Argument	__FILE__		5396502	1					
ANR	5397736	Identifier	__FILE__		5396502	0					
ANR	5397737	Argument	__LINE__		5396502	2					
ANR	5397738	Identifier	__LINE__		5396502	0					
ANR	5397739	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	365:2:9830:9861	5396502	1	True				
ANR	5397740	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397741	Callee	printf		5396502	0					
ANR	5397742	Identifier	printf		5396502	0					
ANR	5397743	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397744	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397745	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397746	ExpressionStatement	fflush ( stdout )	366:2:9865:9881	5396502	2	True				
ANR	5397747	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397748	Callee	fflush		5396502	0					
ANR	5397749	Identifier	fflush		5396502	0					
ANR	5397750	ArgumentList	stdout		5396502	1					
ANR	5397751	Argument	stdout		5396502	0					
ANR	5397752	Identifier	stdout		5396502	0					
ANR	5397753	ExpressionStatement	isOkay = false	367:2:9885:9899	5396502	3	True				
ANR	5397754	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397755	Identifier	isOkay		5396502	0					
ANR	5397756	Identifier	false		5396502	1					
ANR	5397757	ExpressionStatement	termE . cluster = 2	370:1:9906:9923	5396502	72	True				
ANR	5397758	AssignmentExpression	termE . cluster = 2		5396502	0		=			
ANR	5397759	MemberAccess	termE . cluster		5396502	0					
ANR	5397760	Identifier	termE		5396502	0					
ANR	5397761	Identifier	cluster		5396502	1					
ANR	5397762	PrimaryExpression	2		5396502	1					
ANR	5397763	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		5396502	73					
ANR	5397764	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	371:6:9931:9967	5396502	0	True				
ANR	5397765	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		5396502	0					
ANR	5397766	UnaryOperator	!		5396502	0					
ANR	5397767	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		5396502	1					
ANR	5397768	Callee	ReadAndTestEvent		5396502	0					
ANR	5397769	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397770	ArgumentList	lazyReader		5396502	1					
ANR	5397771	Argument	lazyReader		5396502	0					
ANR	5397772	Identifier	lazyReader		5396502	0					
ANR	5397773	Argument	& termE		5396502	1					
ANR	5397774	UnaryOperationExpression	& termE		5396502	0					
ANR	5397775	UnaryOperator	&		5396502	0					
ANR	5397776	Identifier	termE		5396502	1					
ANR	5397777	CompoundStatement		232:46:6138:6138	5396502	1					
ANR	5397778	ExpressionStatement	isOkay = false	372:2:9975:9989	5396502	0	True				
ANR	5397779	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397780	Identifier	isOkay		5396502	0					
ANR	5397781	Identifier	false		5396502	1					
ANR	5397782	ExpressionStatement	termE . cluster = 3	375:1:9996:10013	5396502	74	True				
ANR	5397783	AssignmentExpression	termE . cluster = 3		5396502	0		=			
ANR	5397784	MemberAccess	termE . cluster		5396502	0					
ANR	5397785	Identifier	termE		5396502	0					
ANR	5397786	Identifier	cluster		5396502	1					
ANR	5397787	PrimaryExpression	3		5396502	1					
ANR	5397788	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		5396502	75					
ANR	5397789	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	376:6:10021:10057	5396502	0	True				
ANR	5397790	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		5396502	0					
ANR	5397791	UnaryOperator	!		5396502	0					
ANR	5397792	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		5396502	1					
ANR	5397793	Callee	ReadAndTestEvent		5396502	0					
ANR	5397794	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397795	ArgumentList	lazyReader		5396502	1					
ANR	5397796	Argument	lazyReader		5396502	0					
ANR	5397797	Identifier	lazyReader		5396502	0					
ANR	5397798	Argument	& termE		5396502	1					
ANR	5397799	UnaryOperationExpression	& termE		5396502	0					
ANR	5397800	UnaryOperator	&		5396502	0					
ANR	5397801	Identifier	termE		5396502	1					
ANR	5397802	CompoundStatement		237:46:6228:6228	5396502	1					
ANR	5397803	ExpressionStatement	isOkay = false	377:2:10065:10079	5396502	0	True				
ANR	5397804	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397805	Identifier	isOkay		5396502	0					
ANR	5397806	Identifier	false		5396502	1					
ANR	5397807	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	76					
ANR	5397808	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	380:6:10091:10125	5396502	0	True				
ANR	5397809	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5397810	UnaryOperator	!		5396502	0					
ANR	5397811	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5397812	Callee	ReadAndTestEvent		5396502	0					
ANR	5397813	Identifier	ReadAndTestEvent		5396502	0					
ANR	5397814	ArgumentList	lazyReader		5396502	1					
ANR	5397815	Argument	lazyReader		5396502	0					
ANR	5397816	Identifier	lazyReader		5396502	0					
ANR	5397817	Argument	NULL		5396502	1					
ANR	5397818	Identifier	NULL		5396502	0					
ANR	5397819	CompoundStatement		241:44:6296:6296	5396502	1					
ANR	5397820	ExpressionStatement	isOkay = false	381:2:10133:10147	5396502	0	True				
ANR	5397821	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397822	Identifier	isOkay		5396502	0					
ANR	5397823	Identifier	false		5396502	1					
ANR	5397824	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		5396502	77					
ANR	5397825	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	384:5:10158:10195	5396502	0	True				
ANR	5397826	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		5396502	0					
ANR	5397827	UnaryOperator	!		5396502	0					
ANR	5397828	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		5396502	1					
ANR	5397829	Callee	unmonitorLogFile		5396502	0					
ANR	5397830	Identifier	unmonitorLogFile		5396502	0					
ANR	5397831	ArgumentList	lazyReader		5396502	1					
ANR	5397832	Argument	lazyReader		5396502	0					
ANR	5397833	Identifier	lazyReader		5396502	0					
ANR	5397834	Argument	file3		5396502	1					
ANR	5397835	Identifier	file3		5396502	0					
ANR	5397836	CompoundStatement		245:46:6366:6366	5396502	1					
ANR	5397837	ExpressionStatement	isOkay = false	385:2:10203:10217	5396502	0	True				
ANR	5397838	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397839	Identifier	isOkay		5396502	0					
ANR	5397840	Identifier	false		5396502	1					
ANR	5397841	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		5396502	78					
ANR	5397842	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	387:5:10227:10264	5396502	0	True				
ANR	5397843	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		5396502	0					
ANR	5397844	UnaryOperator	!		5396502	0					
ANR	5397845	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		5396502	1					
ANR	5397846	Callee	unmonitorLogFile		5396502	0					
ANR	5397847	Identifier	unmonitorLogFile		5396502	0					
ANR	5397848	ArgumentList	lazyReader		5396502	1					
ANR	5397849	Argument	lazyReader		5396502	0					
ANR	5397850	Identifier	lazyReader		5396502	0					
ANR	5397851	Argument	file3		5396502	1					
ANR	5397852	Identifier	file3		5396502	0					
ANR	5397853	CompoundStatement		248:46:6435:6435	5396502	1					
ANR	5397854	ExpressionStatement	isOkay = false	388:2:10272:10286	5396502	0	True				
ANR	5397855	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397856	Identifier	isOkay		5396502	0					
ANR	5397857	Identifier	false		5396502	1					
ANR	5397858	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		5396502	79					
ANR	5397859	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	390:5:10296:10333	5396502	0	True				
ANR	5397860	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		5396502	0					
ANR	5397861	UnaryOperator	!		5396502	0					
ANR	5397862	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		5396502	1					
ANR	5397863	Callee	unmonitorLogFile		5396502	0					
ANR	5397864	Identifier	unmonitorLogFile		5396502	0					
ANR	5397865	ArgumentList	lazyReader		5396502	1					
ANR	5397866	Argument	lazyReader		5396502	0					
ANR	5397867	Identifier	lazyReader		5396502	0					
ANR	5397868	Argument	file3		5396502	1					
ANR	5397869	Identifier	file3		5396502	0					
ANR	5397870	CompoundStatement		251:46:6504:6504	5396502	1					
ANR	5397871	ExpressionStatement	isOkay = false	391:2:10341:10355	5396502	0	True				
ANR	5397872	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397873	Identifier	isOkay		5396502	0					
ANR	5397874	Identifier	false		5396502	1					
ANR	5397875	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		5396502	80					
ANR	5397876	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	393:5:10365:10402	5396502	0	True				
ANR	5397877	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		5396502	0					
ANR	5397878	UnaryOperator	!		5396502	0					
ANR	5397879	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		5396502	1					
ANR	5397880	Callee	unmonitorLogFile		5396502	0					
ANR	5397881	Identifier	unmonitorLogFile		5396502	0					
ANR	5397882	ArgumentList	lazyReader		5396502	1					
ANR	5397883	Argument	lazyReader		5396502	0					
ANR	5397884	Identifier	lazyReader		5396502	0					
ANR	5397885	Argument	file3		5396502	1					
ANR	5397886	Identifier	file3		5396502	0					
ANR	5397887	CompoundStatement		254:46:6573:6573	5396502	1					
ANR	5397888	ExpressionStatement	isOkay = false	394:2:10410:10424	5396502	0	True				
ANR	5397889	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397890	Identifier	isOkay		5396502	0					
ANR	5397891	Identifier	false		5396502	1					
ANR	5397892	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3 )		5396502	81					
ANR	5397893	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3	396:6:10435:10487	5396502	0	True				
ANR	5397894	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3		5396502	0		!=			
ANR	5397895	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		5396502	0		=			
ANR	5397896	Identifier	totalLogCount		5396502	0					
ANR	5397897	CallExpression	lazyReader . totalLogFileCount ( )		5396502	1					
ANR	5397898	Callee	lazyReader . totalLogFileCount		5396502	0					
ANR	5397899	MemberAccess	lazyReader . totalLogFileCount		5396502	0					
ANR	5397900	Identifier	lazyReader		5396502	0					
ANR	5397901	Identifier	totalLogFileCount		5396502	1					
ANR	5397902	ArgumentList			5396502	1					
ANR	5397903	PrimaryExpression	3		5396502	1					
ANR	5397904	CompoundStatement		257:62:6658:6658	5396502	1					
ANR	5397905	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	397:2:10495:10546	5396502	0	True				
ANR	5397906	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397907	Callee	printf		5396502	0					
ANR	5397908	Identifier	printf		5396502	0					
ANR	5397909	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397910	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397911	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397912	Argument	__FILE__		5396502	1					
ANR	5397913	Identifier	__FILE__		5396502	0					
ANR	5397914	Argument	__LINE__		5396502	2					
ANR	5397915	Identifier	__LINE__		5396502	0					
ANR	5397916	Statement	printf	398:2:10550:10555	5396502	1	True				
ANR	5397917	Statement	(	398:8:10556:10556	5396502	2	True				
ANR	5397918	Statement	"""lazyReader.totalLogFileCount() was %d; should """	398:10:10558:10605	5396502	3	True				
ANR	5397919	Statement	"""have been 3\\n"""	399:5:10612:10626	5396502	4	True				
ANR	5397920	Statement	","	399:20:10627:10627	5396502	5	True				
ANR	5397921	Statement	totalLogCount	399:22:10629:10641	5396502	6	True				
ANR	5397922	Statement	)	399:36:10643:10643	5396502	7	True				
ANR	5397923	ExpressionStatement		399:37:10644:10644	5396502	8	True				
ANR	5397924	ExpressionStatement	fflush ( stdout )	400:2:10648:10664	5396502	9	True				
ANR	5397925	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397926	Callee	fflush		5396502	0					
ANR	5397927	Identifier	fflush		5396502	0					
ANR	5397928	ArgumentList	stdout		5396502	1					
ANR	5397929	Argument	stdout		5396502	0					
ANR	5397930	Identifier	stdout		5396502	0					
ANR	5397931	ExpressionStatement	isOkay = false	401:2:10668:10682	5396502	10	True				
ANR	5397932	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397933	Identifier	isOkay		5396502	0					
ANR	5397934	Identifier	false		5396502	1					
ANR	5397935	ExpressionStatement	lazyReader . printActiveLogMonitors ( stdout )	404:1:10689:10732	5396502	82	True				
ANR	5397936	CallExpression	lazyReader . printActiveLogMonitors ( stdout )		5396502	0					
ANR	5397937	Callee	lazyReader . printActiveLogMonitors		5396502	0					
ANR	5397938	MemberAccess	lazyReader . printActiveLogMonitors		5396502	0					
ANR	5397939	Identifier	lazyReader		5396502	0					
ANR	5397940	Identifier	printActiveLogMonitors		5396502	1					
ANR	5397941	ArgumentList	stdout		5396502	1					
ANR	5397942	Argument	stdout		5396502	0					
ANR	5397943	Identifier	stdout		5396502	0					
ANR	5397944	IfStatement	"if ( ! monitorLogFile ( lazyReader , file4 , true ) )"		5396502	83					
ANR	5397945	Condition	"! monitorLogFile ( lazyReader , file4 , true )"	406:5:10740:10781	5396502	0	True				
ANR	5397946	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file4 , true )"		5396502	0					
ANR	5397947	UnaryOperator	!		5396502	0					
ANR	5397948	CallExpression	"monitorLogFile ( lazyReader , file4 , true )"		5396502	1					
ANR	5397949	Callee	monitorLogFile		5396502	0					
ANR	5397950	Identifier	monitorLogFile		5396502	0					
ANR	5397951	ArgumentList	lazyReader		5396502	1					
ANR	5397952	Argument	lazyReader		5396502	0					
ANR	5397953	Identifier	lazyReader		5396502	0					
ANR	5397954	Argument	file4		5396502	1					
ANR	5397955	Identifier	file4		5396502	0					
ANR	5397956	Argument	true		5396502	2					
ANR	5397957	Identifier	true		5396502	0					
ANR	5397958	CompoundStatement		267:50:6952:6952	5396502	1					
ANR	5397959	ExpressionStatement	isOkay = false	407:2:10789:10803	5396502	0	True				
ANR	5397960	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5397961	Identifier	isOkay		5396502	0					
ANR	5397962	Identifier	false		5396502	1					
ANR	5397963	IfStatement	if ( ! log4 . writeEvent ( & subE ) )		5396502	84					
ANR	5397964	Condition	! log4 . writeEvent ( & subE )	409:6:10814:10836	5396502	0	True				
ANR	5397965	UnaryOperationExpression	! log4 . writeEvent ( & subE )		5396502	0					
ANR	5397966	UnaryOperator	!		5396502	0					
ANR	5397967	CallExpression	log4 . writeEvent ( & subE )		5396502	1					
ANR	5397968	Callee	log4 . writeEvent		5396502	0					
ANR	5397969	MemberAccess	log4 . writeEvent		5396502	0					
ANR	5397970	Identifier	log4		5396502	0					
ANR	5397971	Identifier	writeEvent		5396502	1					
ANR	5397972	ArgumentList	& subE		5396502	1					
ANR	5397973	Argument	& subE		5396502	0					
ANR	5397974	UnaryOperationExpression	& subE		5396502	0					
ANR	5397975	UnaryOperator	&		5396502	0					
ANR	5397976	Identifier	subE		5396502	1					
ANR	5397977	CompoundStatement		270:32:7007:7007	5396502	1					
ANR	5397978	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	410:2:10844:10895	5396502	0	True				
ANR	5397979	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5397980	Callee	printf		5396502	0					
ANR	5397981	Identifier	printf		5396502	0					
ANR	5397982	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5397983	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397984	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5397985	Argument	__FILE__		5396502	1					
ANR	5397986	Identifier	__FILE__		5396502	0					
ANR	5397987	Argument	__LINE__		5396502	2					
ANR	5397988	Identifier	__LINE__		5396502	0					
ANR	5397989	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	411:2:10899:10930	5396502	1	True				
ANR	5397990	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5397991	Callee	printf		5396502	0					
ANR	5397992	Identifier	printf		5396502	0					
ANR	5397993	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5397994	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5397995	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5397996	ExpressionStatement	fflush ( stdout )	412:2:10934:10950	5396502	2	True				
ANR	5397997	CallExpression	fflush ( stdout )		5396502	0					
ANR	5397998	Callee	fflush		5396502	0					
ANR	5397999	Identifier	fflush		5396502	0					
ANR	5398000	ArgumentList	stdout		5396502	1					
ANR	5398001	Argument	stdout		5396502	0					
ANR	5398002	Identifier	stdout		5396502	0					
ANR	5398003	ExpressionStatement	isOkay = false	413:2:10954:10968	5396502	3	True				
ANR	5398004	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398005	Identifier	isOkay		5396502	0					
ANR	5398006	Identifier	false		5396502	1					
ANR	5398007	ExpressionStatement	subE . cluster = 4	416:1:10975:10991	5396502	85	True				
ANR	5398008	AssignmentExpression	subE . cluster = 4		5396502	0		=			
ANR	5398009	MemberAccess	subE . cluster		5396502	0					
ANR	5398010	Identifier	subE		5396502	0					
ANR	5398011	Identifier	cluster		5396502	1					
ANR	5398012	PrimaryExpression	4		5396502	1					
ANR	5398013	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		5396502	86					
ANR	5398014	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	417:6:10999:11034	5396502	0	True				
ANR	5398015	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		5396502	0					
ANR	5398016	UnaryOperator	!		5396502	0					
ANR	5398017	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		5396502	1					
ANR	5398018	Callee	ReadAndTestEvent		5396502	0					
ANR	5398019	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398020	ArgumentList	lazyReader		5396502	1					
ANR	5398021	Argument	lazyReader		5396502	0					
ANR	5398022	Identifier	lazyReader		5396502	0					
ANR	5398023	Argument	& subE		5396502	1					
ANR	5398024	UnaryOperationExpression	& subE		5396502	0					
ANR	5398025	UnaryOperator	&		5396502	0					
ANR	5398026	Identifier	subE		5396502	1					
ANR	5398027	CompoundStatement		278:45:7205:7205	5396502	1					
ANR	5398028	ExpressionStatement	isOkay = false	418:2:11042:11056	5396502	0	True				
ANR	5398029	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398030	Identifier	isOkay		5396502	0					
ANR	5398031	Identifier	false		5396502	1					
ANR	5398032	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	87					
ANR	5398033	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	421:6:11068:11102	5396502	0	True				
ANR	5398034	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5398035	UnaryOperator	!		5396502	0					
ANR	5398036	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5398037	Callee	ReadAndTestEvent		5396502	0					
ANR	5398038	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398039	ArgumentList	lazyReader		5396502	1					
ANR	5398040	Argument	lazyReader		5396502	0					
ANR	5398041	Identifier	lazyReader		5396502	0					
ANR	5398042	Argument	NULL		5396502	1					
ANR	5398043	Identifier	NULL		5396502	0					
ANR	5398044	CompoundStatement		282:44:7273:7273	5396502	1					
ANR	5398045	ExpressionStatement	isOkay = false	422:2:11110:11124	5396502	0	True				
ANR	5398046	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398047	Identifier	isOkay		5396502	0					
ANR	5398048	Identifier	false		5396502	1					
ANR	5398049	IfStatement	if ( ! log4 . writeEvent ( & termE ) )		5396502	88					
ANR	5398050	Condition	! log4 . writeEvent ( & termE )	425:6:11136:11159	5396502	0	True				
ANR	5398051	UnaryOperationExpression	! log4 . writeEvent ( & termE )		5396502	0					
ANR	5398052	UnaryOperator	!		5396502	0					
ANR	5398053	CallExpression	log4 . writeEvent ( & termE )		5396502	1					
ANR	5398054	Callee	log4 . writeEvent		5396502	0					
ANR	5398055	MemberAccess	log4 . writeEvent		5396502	0					
ANR	5398056	Identifier	log4		5396502	0					
ANR	5398057	Identifier	writeEvent		5396502	1					
ANR	5398058	ArgumentList	& termE		5396502	1					
ANR	5398059	Argument	& termE		5396502	0					
ANR	5398060	UnaryOperationExpression	& termE		5396502	0					
ANR	5398061	UnaryOperator	&		5396502	0					
ANR	5398062	Identifier	termE		5396502	1					
ANR	5398063	CompoundStatement		286:33:7330:7330	5396502	1					
ANR	5398064	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	426:2:11167:11218	5396502	0	True				
ANR	5398065	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398066	Callee	printf		5396502	0					
ANR	5398067	Identifier	printf		5396502	0					
ANR	5398068	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398069	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398070	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398071	Argument	__FILE__		5396502	1					
ANR	5398072	Identifier	__FILE__		5396502	0					
ANR	5398073	Argument	__LINE__		5396502	2					
ANR	5398074	Identifier	__LINE__		5396502	0					
ANR	5398075	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	427:2:11222:11253	5396502	1	True				
ANR	5398076	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398077	Callee	printf		5396502	0					
ANR	5398078	Identifier	printf		5396502	0					
ANR	5398079	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398080	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398081	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398082	ExpressionStatement	fflush ( stdout )	428:2:11257:11273	5396502	2	True				
ANR	5398083	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398084	Callee	fflush		5396502	0					
ANR	5398085	Identifier	fflush		5396502	0					
ANR	5398086	ArgumentList	stdout		5396502	1					
ANR	5398087	Argument	stdout		5396502	0					
ANR	5398088	Identifier	stdout		5396502	0					
ANR	5398089	ExpressionStatement	isOkay = false	429:2:11277:11291	5396502	3	True				
ANR	5398090	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398091	Identifier	isOkay		5396502	0					
ANR	5398092	Identifier	false		5396502	1					
ANR	5398093	ExpressionStatement	termE . cluster = 4	432:1:11298:11315	5396502	89	True				
ANR	5398094	AssignmentExpression	termE . cluster = 4		5396502	0		=			
ANR	5398095	MemberAccess	termE . cluster		5396502	0					
ANR	5398096	Identifier	termE		5396502	0					
ANR	5398097	Identifier	cluster		5396502	1					
ANR	5398098	PrimaryExpression	4		5396502	1					
ANR	5398099	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		5396502	90					
ANR	5398100	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	433:6:11323:11359	5396502	0	True				
ANR	5398101	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		5396502	0					
ANR	5398102	UnaryOperator	!		5396502	0					
ANR	5398103	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		5396502	1					
ANR	5398104	Callee	ReadAndTestEvent		5396502	0					
ANR	5398105	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398106	ArgumentList	lazyReader		5396502	1					
ANR	5398107	Argument	lazyReader		5396502	0					
ANR	5398108	Identifier	lazyReader		5396502	0					
ANR	5398109	Argument	& termE		5396502	1					
ANR	5398110	UnaryOperationExpression	& termE		5396502	0					
ANR	5398111	UnaryOperator	&		5396502	0					
ANR	5398112	Identifier	termE		5396502	1					
ANR	5398113	CompoundStatement		294:46:7530:7530	5396502	1					
ANR	5398114	ExpressionStatement	isOkay = false	434:2:11367:11381	5396502	0	True				
ANR	5398115	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398116	Identifier	isOkay		5396502	0					
ANR	5398117	Identifier	false		5396502	1					
ANR	5398118	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	91					
ANR	5398119	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	437:6:11393:11427	5396502	0	True				
ANR	5398120	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5398121	UnaryOperator	!		5396502	0					
ANR	5398122	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5398123	Callee	ReadAndTestEvent		5396502	0					
ANR	5398124	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398125	ArgumentList	lazyReader		5396502	1					
ANR	5398126	Argument	lazyReader		5396502	0					
ANR	5398127	Identifier	lazyReader		5396502	0					
ANR	5398128	Argument	NULL		5396502	1					
ANR	5398129	Identifier	NULL		5396502	0					
ANR	5398130	CompoundStatement		298:44:7598:7598	5396502	1					
ANR	5398131	ExpressionStatement	isOkay = false	438:2:11435:11449	5396502	0	True				
ANR	5398132	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398133	Identifier	isOkay		5396502	0					
ANR	5398134	Identifier	false		5396502	1					
ANR	5398135	ExpressionStatement	unlink ( file5 )	445:1:11585:11600	5396502	92	True				
ANR	5398136	CallExpression	unlink ( file5 )		5396502	0					
ANR	5398137	Callee	unlink		5396502	0					
ANR	5398138	Identifier	unlink		5396502	0					
ANR	5398139	ArgumentList	file5		5396502	1					
ANR	5398140	Argument	file5		5396502	0					
ANR	5398141	Identifier	file5		5396502	0					
ANR	5398142	IdentifierDeclStatement	"WriteUserLog log5 ( ""test"" , file5 , 5 , - 1 , - 1 , false ) ;"	446:1:11603:11654	5396502	93	True				
ANR	5398143	IdentifierDecl	"log5 ( ""test"" , file5 , 5 , - 1 , - 1 , false )"		5396502	0					
ANR	5398144	IdentifierDeclType	WriteUserLog		5396502	0					
ANR	5398145	Identifier	log5		5396502	1					
ANR	5398146	Expression	"""test"" , file5 , 5 , - 1 , - 1 , false"		5396502	2					
ANR	5398147	PrimaryExpression	"""test"""		5396502	0					
ANR	5398148	Expression	"file5 , 5 , - 1 , - 1 , false"		5396502	1					
ANR	5398149	Identifier	file5		5396502	0					
ANR	5398150	Expression	"5 , - 1 , - 1 , false"		5396502	1					
ANR	5398151	PrimaryExpression	5		5396502	0					
ANR	5398152	Expression	"- 1 , - 1 , false"		5396502	1					
ANR	5398153	UnaryOperationExpression	- 1		5396502	0					
ANR	5398154	UnaryOperator	-		5396502	0					
ANR	5398155	PrimaryExpression	1		5396502	1					
ANR	5398156	Expression	"- 1 , false"		5396502	1					
ANR	5398157	UnaryOperationExpression	- 1		5396502	0					
ANR	5398158	UnaryOperator	-		5396502	0					
ANR	5398159	PrimaryExpression	1		5396502	1					
ANR	5398160	Identifier	false		5396502	1					
ANR	5398161	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5 , false ) )"		5396502	94					
ANR	5398162	Condition	"! monitorLogFile ( lazyReader , file5 , false )"	447:5:11661:11703	5396502	0	True				
ANR	5398163	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5 , false )"		5396502	0					
ANR	5398164	UnaryOperator	!		5396502	0					
ANR	5398165	CallExpression	"monitorLogFile ( lazyReader , file5 , false )"		5396502	1					
ANR	5398166	Callee	monitorLogFile		5396502	0					
ANR	5398167	Identifier	monitorLogFile		5396502	0					
ANR	5398168	ArgumentList	lazyReader		5396502	1					
ANR	5398169	Argument	lazyReader		5396502	0					
ANR	5398170	Identifier	lazyReader		5396502	0					
ANR	5398171	Argument	file5		5396502	1					
ANR	5398172	Identifier	file5		5396502	0					
ANR	5398173	Argument	false		5396502	2					
ANR	5398174	Identifier	false		5396502	0					
ANR	5398175	CompoundStatement		308:51:7874:7874	5396502	1					
ANR	5398176	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	448:2:11711:11762	5396502	0	True				
ANR	5398177	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398178	Callee	printf		5396502	0					
ANR	5398179	Identifier	printf		5396502	0					
ANR	5398180	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398181	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398182	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398183	Argument	__FILE__		5396502	1					
ANR	5398184	Identifier	__FILE__		5396502	0					
ANR	5398185	Argument	__LINE__		5396502	2					
ANR	5398186	Identifier	__LINE__		5396502	0					
ANR	5398187	ExpressionStatement	"printf ( ""error unmonitoring log file %s\\n"" , file5 )"	449:2:11766:11817	5396502	1	True				
ANR	5398188	CallExpression	"printf ( ""error unmonitoring log file %s\\n"" , file5 )"		5396502	0					
ANR	5398189	Callee	printf		5396502	0					
ANR	5398190	Identifier	printf		5396502	0					
ANR	5398191	ArgumentList	"""error unmonitoring log file %s\\n"""		5396502	1					
ANR	5398192	Argument	"""error unmonitoring log file %s\\n"""		5396502	0					
ANR	5398193	PrimaryExpression	"""error unmonitoring log file %s\\n"""		5396502	0					
ANR	5398194	Argument	file5		5396502	1					
ANR	5398195	Identifier	file5		5396502	0					
ANR	5398196	ExpressionStatement	fflush ( stdout )	450:2:11821:11837	5396502	2	True				
ANR	5398197	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398198	Callee	fflush		5396502	0					
ANR	5398199	Identifier	fflush		5396502	0					
ANR	5398200	ArgumentList	stdout		5396502	1					
ANR	5398201	Argument	stdout		5396502	0					
ANR	5398202	Identifier	stdout		5396502	0					
ANR	5398203	ExpressionStatement	isOkay = false	451:2:11841:11855	5396502	3	True				
ANR	5398204	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398205	Identifier	isOkay		5396502	0					
ANR	5398206	Identifier	false		5396502	1					
ANR	5398207	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5a , false ) )"		5396502	95					
ANR	5398208	Condition	"! monitorLogFile ( lazyReader , file5a , false )"	453:5:11865:11908	5396502	0	True				
ANR	5398209	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5a , false )"		5396502	0					
ANR	5398210	UnaryOperator	!		5396502	0					
ANR	5398211	CallExpression	"monitorLogFile ( lazyReader , file5a , false )"		5396502	1					
ANR	5398212	Callee	monitorLogFile		5396502	0					
ANR	5398213	Identifier	monitorLogFile		5396502	0					
ANR	5398214	ArgumentList	lazyReader		5396502	1					
ANR	5398215	Argument	lazyReader		5396502	0					
ANR	5398216	Identifier	lazyReader		5396502	0					
ANR	5398217	Argument	file5a		5396502	1					
ANR	5398218	Identifier	file5a		5396502	0					
ANR	5398219	Argument	false		5396502	2					
ANR	5398220	Identifier	false		5396502	0					
ANR	5398221	CompoundStatement		314:52:8079:8079	5396502	1					
ANR	5398222	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	454:2:11916:11967	5396502	0	True				
ANR	5398223	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398224	Callee	printf		5396502	0					
ANR	5398225	Identifier	printf		5396502	0					
ANR	5398226	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398227	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398228	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398229	Argument	__FILE__		5396502	1					
ANR	5398230	Identifier	__FILE__		5396502	0					
ANR	5398231	Argument	__LINE__		5396502	2					
ANR	5398232	Identifier	__LINE__		5396502	0					
ANR	5398233	ExpressionStatement	"printf ( ""error monitoring log file %s\\n"" , file5a )"	455:2:11971:12021	5396502	1	True				
ANR	5398234	CallExpression	"printf ( ""error monitoring log file %s\\n"" , file5a )"		5396502	0					
ANR	5398235	Callee	printf		5396502	0					
ANR	5398236	Identifier	printf		5396502	0					
ANR	5398237	ArgumentList	"""error monitoring log file %s\\n"""		5396502	1					
ANR	5398238	Argument	"""error monitoring log file %s\\n"""		5396502	0					
ANR	5398239	PrimaryExpression	"""error monitoring log file %s\\n"""		5396502	0					
ANR	5398240	Argument	file5a		5396502	1					
ANR	5398241	Identifier	file5a		5396502	0					
ANR	5398242	ExpressionStatement	fflush ( stdout )	456:2:12025:12041	5396502	2	True				
ANR	5398243	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398244	Callee	fflush		5396502	0					
ANR	5398245	Identifier	fflush		5396502	0					
ANR	5398246	ArgumentList	stdout		5396502	1					
ANR	5398247	Argument	stdout		5396502	0					
ANR	5398248	Identifier	stdout		5396502	0					
ANR	5398249	ExpressionStatement	isOkay = false	457:2:12045:12059	5396502	3	True				
ANR	5398250	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398251	Identifier	isOkay		5396502	0					
ANR	5398252	Identifier	false		5396502	1					
ANR	5398253	IfStatement	if ( ! log5 . writeEvent ( & subE ) )		5396502	96					
ANR	5398254	Condition	! log5 . writeEvent ( & subE )	460:6:12071:12093	5396502	0	True				
ANR	5398255	UnaryOperationExpression	! log5 . writeEvent ( & subE )		5396502	0					
ANR	5398256	UnaryOperator	!		5396502	0					
ANR	5398257	CallExpression	log5 . writeEvent ( & subE )		5396502	1					
ANR	5398258	Callee	log5 . writeEvent		5396502	0					
ANR	5398259	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398260	Identifier	log5		5396502	0					
ANR	5398261	Identifier	writeEvent		5396502	1					
ANR	5398262	ArgumentList	& subE		5396502	1					
ANR	5398263	Argument	& subE		5396502	0					
ANR	5398264	UnaryOperationExpression	& subE		5396502	0					
ANR	5398265	UnaryOperator	&		5396502	0					
ANR	5398266	Identifier	subE		5396502	1					
ANR	5398267	CompoundStatement		321:32:8264:8264	5396502	1					
ANR	5398268	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	461:2:12101:12152	5396502	0	True				
ANR	5398269	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398270	Callee	printf		5396502	0					
ANR	5398271	Identifier	printf		5396502	0					
ANR	5398272	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398273	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398274	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398275	Argument	__FILE__		5396502	1					
ANR	5398276	Identifier	__FILE__		5396502	0					
ANR	5398277	Argument	__LINE__		5396502	2					
ANR	5398278	Identifier	__LINE__		5396502	0					
ANR	5398279	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	462:2:12156:12187	5396502	1	True				
ANR	5398280	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398281	Callee	printf		5396502	0					
ANR	5398282	Identifier	printf		5396502	0					
ANR	5398283	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398284	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398285	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398286	ExpressionStatement	fflush ( stdout )	463:2:12191:12207	5396502	2	True				
ANR	5398287	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398288	Callee	fflush		5396502	0					
ANR	5398289	Identifier	fflush		5396502	0					
ANR	5398290	ArgumentList	stdout		5396502	1					
ANR	5398291	Argument	stdout		5396502	0					
ANR	5398292	Identifier	stdout		5396502	0					
ANR	5398293	ExpressionStatement	isOkay = false	464:2:12211:12225	5396502	3	True				
ANR	5398294	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398295	Identifier	isOkay		5396502	0					
ANR	5398296	Identifier	false		5396502	1					
ANR	5398297	IdentifierDeclStatement	ExecuteEvent execE ;	467:1:12232:12250	5396502	97	True				
ANR	5398298	IdentifierDecl	execE		5396502	0					
ANR	5398299	IdentifierDeclType	ExecuteEvent		5396502	0					
ANR	5398300	Identifier	execE		5396502	1					
ANR	5398301	ExpressionStatement	"strcpy ( execE . executeHost , ""<128.105.666.99:12345>"" )"	468:1:12253:12304	5396502	98	True				
ANR	5398302	CallExpression	"strcpy ( execE . executeHost , ""<128.105.666.99:12345>"" )"		5396502	0					
ANR	5398303	Callee	strcpy		5396502	0					
ANR	5398304	Identifier	strcpy		5396502	0					
ANR	5398305	ArgumentList	execE . executeHost		5396502	1					
ANR	5398306	Argument	execE . executeHost		5396502	0					
ANR	5398307	MemberAccess	execE . executeHost		5396502	0					
ANR	5398308	Identifier	execE		5396502	0					
ANR	5398309	Identifier	executeHost		5396502	1					
ANR	5398310	Argument	"""<128.105.666.99:12345>"""		5396502	1					
ANR	5398311	PrimaryExpression	"""<128.105.666.99:12345>"""		5396502	0					
ANR	5398312	IfStatement	if ( ! log5 . writeEvent ( & execE ) )		5396502	99					
ANR	5398313	Condition	! log5 . writeEvent ( & execE )	469:6:12312:12335	5396502	0	True				
ANR	5398314	UnaryOperationExpression	! log5 . writeEvent ( & execE )		5396502	0					
ANR	5398315	UnaryOperator	!		5396502	0					
ANR	5398316	CallExpression	log5 . writeEvent ( & execE )		5396502	1					
ANR	5398317	Callee	log5 . writeEvent		5396502	0					
ANR	5398318	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398319	Identifier	log5		5396502	0					
ANR	5398320	Identifier	writeEvent		5396502	1					
ANR	5398321	ArgumentList	& execE		5396502	1					
ANR	5398322	Argument	& execE		5396502	0					
ANR	5398323	UnaryOperationExpression	& execE		5396502	0					
ANR	5398324	UnaryOperator	&		5396502	0					
ANR	5398325	Identifier	execE		5396502	1					
ANR	5398326	CompoundStatement		330:33:8506:8506	5396502	1					
ANR	5398327	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	470:2:12343:12394	5396502	0	True				
ANR	5398328	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398329	Callee	printf		5396502	0					
ANR	5398330	Identifier	printf		5396502	0					
ANR	5398331	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398332	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398333	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398334	Argument	__FILE__		5396502	1					
ANR	5398335	Identifier	__FILE__		5396502	0					
ANR	5398336	Argument	__LINE__		5396502	2					
ANR	5398337	Identifier	__LINE__		5396502	0					
ANR	5398338	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	471:2:12398:12429	5396502	1	True				
ANR	5398339	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398340	Callee	printf		5396502	0					
ANR	5398341	Identifier	printf		5396502	0					
ANR	5398342	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398343	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398344	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398345	ExpressionStatement	fflush ( stdout )	472:2:12433:12449	5396502	2	True				
ANR	5398346	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398347	Callee	fflush		5396502	0					
ANR	5398348	Identifier	fflush		5396502	0					
ANR	5398349	ArgumentList	stdout		5396502	1					
ANR	5398350	Argument	stdout		5396502	0					
ANR	5398351	Identifier	stdout		5396502	0					
ANR	5398352	ExpressionStatement	isOkay = false	473:2:12453:12467	5396502	3	True				
ANR	5398353	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398354	Identifier	isOkay		5396502	0					
ANR	5398355	Identifier	false		5396502	1					
ANR	5398356	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		5396502	100					
ANR	5398357	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	476:6:12479:12514	5396502	0	True				
ANR	5398358	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		5396502	0					
ANR	5398359	UnaryOperator	!		5396502	0					
ANR	5398360	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		5396502	1					
ANR	5398361	Callee	ReadAndTestEvent		5396502	0					
ANR	5398362	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398363	ArgumentList	lazyReader		5396502	1					
ANR	5398364	Argument	lazyReader		5396502	0					
ANR	5398365	Identifier	lazyReader		5396502	0					
ANR	5398366	Argument	& subE		5396502	1					
ANR	5398367	UnaryOperationExpression	& subE		5396502	0					
ANR	5398368	UnaryOperator	&		5396502	0					
ANR	5398369	Identifier	subE		5396502	1					
ANR	5398370	CompoundStatement		337:45:8685:8685	5396502	1					
ANR	5398371	ExpressionStatement	isOkay = false	477:2:12522:12536	5396502	0	True				
ANR	5398372	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398373	Identifier	isOkay		5396502	0					
ANR	5398374	Identifier	false		5396502	1					
ANR	5398375	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & execE ) )"		5396502	101					
ANR	5398376	Condition	"! ReadAndTestEvent ( lazyReader , & execE )"	479:6:12547:12583	5396502	0	True				
ANR	5398377	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & execE )"		5396502	0					
ANR	5398378	UnaryOperator	!		5396502	0					
ANR	5398379	CallExpression	"ReadAndTestEvent ( lazyReader , & execE )"		5396502	1					
ANR	5398380	Callee	ReadAndTestEvent		5396502	0					
ANR	5398381	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398382	ArgumentList	lazyReader		5396502	1					
ANR	5398383	Argument	lazyReader		5396502	0					
ANR	5398384	Identifier	lazyReader		5396502	0					
ANR	5398385	Argument	& execE		5396502	1					
ANR	5398386	UnaryOperationExpression	& execE		5396502	0					
ANR	5398387	UnaryOperator	&		5396502	0					
ANR	5398388	Identifier	execE		5396502	1					
ANR	5398389	CompoundStatement		340:46:8754:8754	5396502	1					
ANR	5398390	ExpressionStatement	isOkay = false	480:2:12591:12605	5396502	0	True				
ANR	5398391	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398392	Identifier	isOkay		5396502	0					
ANR	5398393	Identifier	false		5396502	1					
ANR	5398394	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	102					
ANR	5398395	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	482:6:12616:12650	5396502	0	True				
ANR	5398396	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5398397	UnaryOperator	!		5396502	0					
ANR	5398398	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5398399	Callee	ReadAndTestEvent		5396502	0					
ANR	5398400	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398401	ArgumentList	lazyReader		5396502	1					
ANR	5398402	Argument	lazyReader		5396502	0					
ANR	5398403	Identifier	lazyReader		5396502	0					
ANR	5398404	Argument	NULL		5396502	1					
ANR	5398405	Identifier	NULL		5396502	0					
ANR	5398406	CompoundStatement		343:44:8821:8821	5396502	1					
ANR	5398407	ExpressionStatement	isOkay = false	483:2:12658:12672	5396502	0	True				
ANR	5398408	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398409	Identifier	isOkay		5396502	0					
ANR	5398410	Identifier	false		5396502	1					
ANR	5398411	IdentifierDeclStatement	GenericEvent genE ;	486:1:12679:12696	5396502	103	True				
ANR	5398412	IdentifierDecl	genE		5396502	0					
ANR	5398413	IdentifierDeclType	GenericEvent		5396502	0					
ANR	5398414	Identifier	genE		5396502	1					
ANR	5398415	ExpressionStatement	"strcpy ( genE . info , ""job type: transfer"" )"	487:1:12699:12738	5396502	104	True				
ANR	5398416	CallExpression	"strcpy ( genE . info , ""job type: transfer"" )"		5396502	0					
ANR	5398417	Callee	strcpy		5396502	0					
ANR	5398418	Identifier	strcpy		5396502	0					
ANR	5398419	ArgumentList	genE . info		5396502	1					
ANR	5398420	Argument	genE . info		5396502	0					
ANR	5398421	MemberAccess	genE . info		5396502	0					
ANR	5398422	Identifier	genE		5396502	0					
ANR	5398423	Identifier	info		5396502	1					
ANR	5398424	Argument	"""job type: transfer"""		5396502	1					
ANR	5398425	PrimaryExpression	"""job type: transfer"""		5396502	0					
ANR	5398426	IfStatement	if ( ! log5 . writeEvent ( & genE ) )		5396502	105					
ANR	5398427	Condition	! log5 . writeEvent ( & genE )	488:6:12746:12768	5396502	0	True				
ANR	5398428	UnaryOperationExpression	! log5 . writeEvent ( & genE )		5396502	0					
ANR	5398429	UnaryOperator	!		5396502	0					
ANR	5398430	CallExpression	log5 . writeEvent ( & genE )		5396502	1					
ANR	5398431	Callee	log5 . writeEvent		5396502	0					
ANR	5398432	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398433	Identifier	log5		5396502	0					
ANR	5398434	Identifier	writeEvent		5396502	1					
ANR	5398435	ArgumentList	& genE		5396502	1					
ANR	5398436	Argument	& genE		5396502	0					
ANR	5398437	UnaryOperationExpression	& genE		5396502	0					
ANR	5398438	UnaryOperator	&		5396502	0					
ANR	5398439	Identifier	genE		5396502	1					
ANR	5398440	CompoundStatement		349:32:8939:8939	5396502	1					
ANR	5398441	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	489:2:12776:12827	5396502	0	True				
ANR	5398442	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398443	Callee	printf		5396502	0					
ANR	5398444	Identifier	printf		5396502	0					
ANR	5398445	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398446	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398447	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398448	Argument	__FILE__		5396502	1					
ANR	5398449	Identifier	__FILE__		5396502	0					
ANR	5398450	Argument	__LINE__		5396502	2					
ANR	5398451	Identifier	__LINE__		5396502	0					
ANR	5398452	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	490:2:12831:12862	5396502	1	True				
ANR	5398453	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398454	Callee	printf		5396502	0					
ANR	5398455	Identifier	printf		5396502	0					
ANR	5398456	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398457	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398458	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398459	ExpressionStatement	fflush ( stdout )	491:2:12866:12882	5396502	2	True				
ANR	5398460	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398461	Callee	fflush		5396502	0					
ANR	5398462	Identifier	fflush		5396502	0					
ANR	5398463	ArgumentList	stdout		5396502	1					
ANR	5398464	Argument	stdout		5396502	0					
ANR	5398465	Identifier	stdout		5396502	0					
ANR	5398466	ExpressionStatement	isOkay = false	492:2:12886:12900	5396502	3	True				
ANR	5398467	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398468	Identifier	isOkay		5396502	0					
ANR	5398469	Identifier	false		5396502	1					
ANR	5398470	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & genE ) )"		5396502	106					
ANR	5398471	Condition	"! ReadAndTestEvent ( lazyReader , & genE )"	494:6:12911:12946	5396502	0	True				
ANR	5398472	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & genE )"		5396502	0					
ANR	5398473	UnaryOperator	!		5396502	0					
ANR	5398474	CallExpression	"ReadAndTestEvent ( lazyReader , & genE )"		5396502	1					
ANR	5398475	Callee	ReadAndTestEvent		5396502	0					
ANR	5398476	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398477	ArgumentList	lazyReader		5396502	1					
ANR	5398478	Argument	lazyReader		5396502	0					
ANR	5398479	Identifier	lazyReader		5396502	0					
ANR	5398480	Argument	& genE		5396502	1					
ANR	5398481	UnaryOperationExpression	& genE		5396502	0					
ANR	5398482	UnaryOperator	&		5396502	0					
ANR	5398483	Identifier	genE		5396502	1					
ANR	5398484	CompoundStatement		355:45:9117:9117	5396502	1					
ANR	5398485	ExpressionStatement	isOkay = false	495:2:12954:12968	5396502	0	True				
ANR	5398486	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398487	Identifier	isOkay		5396502	0					
ANR	5398488	Identifier	false		5396502	1					
ANR	5398489	ExpressionStatement	"strcpy ( genE . info , ""src_url: file:/dev/null"" )"	498:1:12975:13019	5396502	107	True				
ANR	5398490	CallExpression	"strcpy ( genE . info , ""src_url: file:/dev/null"" )"		5396502	0					
ANR	5398491	Callee	strcpy		5396502	0					
ANR	5398492	Identifier	strcpy		5396502	0					
ANR	5398493	ArgumentList	genE . info		5396502	1					
ANR	5398494	Argument	genE . info		5396502	0					
ANR	5398495	MemberAccess	genE . info		5396502	0					
ANR	5398496	Identifier	genE		5396502	0					
ANR	5398497	Identifier	info		5396502	1					
ANR	5398498	Argument	"""src_url: file:/dev/null"""		5396502	1					
ANR	5398499	PrimaryExpression	"""src_url: file:/dev/null"""		5396502	0					
ANR	5398500	IfStatement	if ( ! log5 . writeEvent ( & genE ) )		5396502	108					
ANR	5398501	Condition	! log5 . writeEvent ( & genE )	499:6:13027:13049	5396502	0	True				
ANR	5398502	UnaryOperationExpression	! log5 . writeEvent ( & genE )		5396502	0					
ANR	5398503	UnaryOperator	!		5396502	0					
ANR	5398504	CallExpression	log5 . writeEvent ( & genE )		5396502	1					
ANR	5398505	Callee	log5 . writeEvent		5396502	0					
ANR	5398506	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398507	Identifier	log5		5396502	0					
ANR	5398508	Identifier	writeEvent		5396502	1					
ANR	5398509	ArgumentList	& genE		5396502	1					
ANR	5398510	Argument	& genE		5396502	0					
ANR	5398511	UnaryOperationExpression	& genE		5396502	0					
ANR	5398512	UnaryOperator	&		5396502	0					
ANR	5398513	Identifier	genE		5396502	1					
ANR	5398514	CompoundStatement		360:32:9220:9220	5396502	1					
ANR	5398515	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	500:2:13057:13108	5396502	0	True				
ANR	5398516	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398517	Callee	printf		5396502	0					
ANR	5398518	Identifier	printf		5396502	0					
ANR	5398519	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398520	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398521	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398522	Argument	__FILE__		5396502	1					
ANR	5398523	Identifier	__FILE__		5396502	0					
ANR	5398524	Argument	__LINE__		5396502	2					
ANR	5398525	Identifier	__LINE__		5396502	0					
ANR	5398526	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	501:2:13112:13143	5396502	1	True				
ANR	5398527	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398528	Callee	printf		5396502	0					
ANR	5398529	Identifier	printf		5396502	0					
ANR	5398530	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398531	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398532	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398533	ExpressionStatement	fflush ( stdout )	502:2:13147:13163	5396502	2	True				
ANR	5398534	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398535	Callee	fflush		5396502	0					
ANR	5398536	Identifier	fflush		5396502	0					
ANR	5398537	ArgumentList	stdout		5396502	1					
ANR	5398538	Argument	stdout		5396502	0					
ANR	5398539	Identifier	stdout		5396502	0					
ANR	5398540	ExpressionStatement	isOkay = false	503:2:13167:13181	5396502	3	True				
ANR	5398541	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398542	Identifier	isOkay		5396502	0					
ANR	5398543	Identifier	false		5396502	1					
ANR	5398544	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & genE ) )"		5396502	109					
ANR	5398545	Condition	"! ReadAndTestEvent ( lazyReader , & genE )"	505:6:13192:13227	5396502	0	True				
ANR	5398546	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & genE )"		5396502	0					
ANR	5398547	UnaryOperator	!		5396502	0					
ANR	5398548	CallExpression	"ReadAndTestEvent ( lazyReader , & genE )"		5396502	1					
ANR	5398549	Callee	ReadAndTestEvent		5396502	0					
ANR	5398550	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398551	ArgumentList	lazyReader		5396502	1					
ANR	5398552	Argument	lazyReader		5396502	0					
ANR	5398553	Identifier	lazyReader		5396502	0					
ANR	5398554	Argument	& genE		5396502	1					
ANR	5398555	UnaryOperationExpression	& genE		5396502	0					
ANR	5398556	UnaryOperator	&		5396502	0					
ANR	5398557	Identifier	genE		5396502	1					
ANR	5398558	CompoundStatement		366:45:9398:9398	5396502	1					
ANR	5398559	ExpressionStatement	isOkay = false	506:2:13235:13249	5396502	0	True				
ANR	5398560	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398561	Identifier	isOkay		5396502	0					
ANR	5398562	Identifier	false		5396502	1					
ANR	5398563	ExpressionStatement	"strcpy ( genE . info , ""dest_url: file:/dev/null"" )"	509:1:13256:13301	5396502	110	True				
ANR	5398564	CallExpression	"strcpy ( genE . info , ""dest_url: file:/dev/null"" )"		5396502	0					
ANR	5398565	Callee	strcpy		5396502	0					
ANR	5398566	Identifier	strcpy		5396502	0					
ANR	5398567	ArgumentList	genE . info		5396502	1					
ANR	5398568	Argument	genE . info		5396502	0					
ANR	5398569	MemberAccess	genE . info		5396502	0					
ANR	5398570	Identifier	genE		5396502	0					
ANR	5398571	Identifier	info		5396502	1					
ANR	5398572	Argument	"""dest_url: file:/dev/null"""		5396502	1					
ANR	5398573	PrimaryExpression	"""dest_url: file:/dev/null"""		5396502	0					
ANR	5398574	IfStatement	if ( ! log5 . writeEvent ( & genE ) )		5396502	111					
ANR	5398575	Condition	! log5 . writeEvent ( & genE )	510:6:13309:13331	5396502	0	True				
ANR	5398576	UnaryOperationExpression	! log5 . writeEvent ( & genE )		5396502	0					
ANR	5398577	UnaryOperator	!		5396502	0					
ANR	5398578	CallExpression	log5 . writeEvent ( & genE )		5396502	1					
ANR	5398579	Callee	log5 . writeEvent		5396502	0					
ANR	5398580	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398581	Identifier	log5		5396502	0					
ANR	5398582	Identifier	writeEvent		5396502	1					
ANR	5398583	ArgumentList	& genE		5396502	1					
ANR	5398584	Argument	& genE		5396502	0					
ANR	5398585	UnaryOperationExpression	& genE		5396502	0					
ANR	5398586	UnaryOperator	&		5396502	0					
ANR	5398587	Identifier	genE		5396502	1					
ANR	5398588	CompoundStatement		371:32:9502:9502	5396502	1					
ANR	5398589	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	511:2:13339:13390	5396502	0	True				
ANR	5398590	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398591	Callee	printf		5396502	0					
ANR	5398592	Identifier	printf		5396502	0					
ANR	5398593	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398594	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398595	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398596	Argument	__FILE__		5396502	1					
ANR	5398597	Identifier	__FILE__		5396502	0					
ANR	5398598	Argument	__LINE__		5396502	2					
ANR	5398599	Identifier	__LINE__		5396502	0					
ANR	5398600	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	512:2:13394:13425	5396502	1	True				
ANR	5398601	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398602	Callee	printf		5396502	0					
ANR	5398603	Identifier	printf		5396502	0					
ANR	5398604	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398605	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398606	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398607	ExpressionStatement	fflush ( stdout )	513:2:13429:13445	5396502	2	True				
ANR	5398608	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398609	Callee	fflush		5396502	0					
ANR	5398610	Identifier	fflush		5396502	0					
ANR	5398611	ArgumentList	stdout		5396502	1					
ANR	5398612	Argument	stdout		5396502	0					
ANR	5398613	Identifier	stdout		5396502	0					
ANR	5398614	ExpressionStatement	isOkay = false	514:2:13449:13463	5396502	3	True				
ANR	5398615	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398616	Identifier	isOkay		5396502	0					
ANR	5398617	Identifier	false		5396502	1					
ANR	5398618	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & genE ) )"		5396502	112					
ANR	5398619	Condition	"! ReadAndTestEvent ( lazyReader , & genE )"	516:6:13474:13509	5396502	0	True				
ANR	5398620	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & genE )"		5396502	0					
ANR	5398621	UnaryOperator	!		5396502	0					
ANR	5398622	CallExpression	"ReadAndTestEvent ( lazyReader , & genE )"		5396502	1					
ANR	5398623	Callee	ReadAndTestEvent		5396502	0					
ANR	5398624	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398625	ArgumentList	lazyReader		5396502	1					
ANR	5398626	Argument	lazyReader		5396502	0					
ANR	5398627	Identifier	lazyReader		5396502	0					
ANR	5398628	Argument	& genE		5396502	1					
ANR	5398629	UnaryOperationExpression	& genE		5396502	0					
ANR	5398630	UnaryOperator	&		5396502	0					
ANR	5398631	Identifier	genE		5396502	1					
ANR	5398632	CompoundStatement		377:45:9680:9680	5396502	1					
ANR	5398633	ExpressionStatement	isOkay = false	517:2:13517:13531	5396502	0	True				
ANR	5398634	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398635	Identifier	isOkay		5396502	0					
ANR	5398636	Identifier	false		5396502	1					
ANR	5398637	IfStatement	if ( ! log5 . writeEvent ( & termE ) )		5396502	113					
ANR	5398638	Condition	! log5 . writeEvent ( & termE )	520:6:13543:13566	5396502	0	True				
ANR	5398639	UnaryOperationExpression	! log5 . writeEvent ( & termE )		5396502	0					
ANR	5398640	UnaryOperator	!		5396502	0					
ANR	5398641	CallExpression	log5 . writeEvent ( & termE )		5396502	1					
ANR	5398642	Callee	log5 . writeEvent		5396502	0					
ANR	5398643	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398644	Identifier	log5		5396502	0					
ANR	5398645	Identifier	writeEvent		5396502	1					
ANR	5398646	ArgumentList	& termE		5396502	1					
ANR	5398647	Argument	& termE		5396502	0					
ANR	5398648	UnaryOperationExpression	& termE		5396502	0					
ANR	5398649	UnaryOperator	&		5396502	0					
ANR	5398650	Identifier	termE		5396502	1					
ANR	5398651	CompoundStatement		381:33:9737:9737	5396502	1					
ANR	5398652	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	521:2:13574:13625	5396502	0	True				
ANR	5398653	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398654	Callee	printf		5396502	0					
ANR	5398655	Identifier	printf		5396502	0					
ANR	5398656	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398657	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398658	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398659	Argument	__FILE__		5396502	1					
ANR	5398660	Identifier	__FILE__		5396502	0					
ANR	5398661	Argument	__LINE__		5396502	2					
ANR	5398662	Identifier	__LINE__		5396502	0					
ANR	5398663	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	522:2:13629:13660	5396502	1	True				
ANR	5398664	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398665	Callee	printf		5396502	0					
ANR	5398666	Identifier	printf		5396502	0					
ANR	5398667	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398668	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398669	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398670	ExpressionStatement	fflush ( stdout )	523:2:13664:13680	5396502	2	True				
ANR	5398671	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398672	Callee	fflush		5396502	0					
ANR	5398673	Identifier	fflush		5396502	0					
ANR	5398674	ArgumentList	stdout		5396502	1					
ANR	5398675	Argument	stdout		5396502	0					
ANR	5398676	Identifier	stdout		5396502	0					
ANR	5398677	ExpressionStatement	isOkay = false	524:2:13684:13698	5396502	3	True				
ANR	5398678	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398679	Identifier	isOkay		5396502	0					
ANR	5398680	Identifier	false		5396502	1					
ANR	5398681	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		5396502	114					
ANR	5398682	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	526:6:13709:13745	5396502	0	True				
ANR	5398683	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		5396502	0					
ANR	5398684	UnaryOperator	!		5396502	0					
ANR	5398685	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		5396502	1					
ANR	5398686	Callee	ReadAndTestEvent		5396502	0					
ANR	5398687	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398688	ArgumentList	lazyReader		5396502	1					
ANR	5398689	Argument	lazyReader		5396502	0					
ANR	5398690	Identifier	lazyReader		5396502	0					
ANR	5398691	Argument	& termE		5396502	1					
ANR	5398692	UnaryOperationExpression	& termE		5396502	0					
ANR	5398693	UnaryOperator	&		5396502	0					
ANR	5398694	Identifier	termE		5396502	1					
ANR	5398695	CompoundStatement		387:46:9916:9916	5396502	1					
ANR	5398696	ExpressionStatement	isOkay = false	527:2:13753:13767	5396502	0	True				
ANR	5398697	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398698	Identifier	isOkay		5396502	0					
ANR	5398699	Identifier	false		5396502	1					
ANR	5398700	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file5 ) )"		5396502	115					
ANR	5398701	Condition	"! unmonitorLogFile ( lazyReader , file5 )"	534:5:13976:14013	5396502	0	True				
ANR	5398702	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file5 )"		5396502	0					
ANR	5398703	UnaryOperator	!		5396502	0					
ANR	5398704	CallExpression	"unmonitorLogFile ( lazyReader , file5 )"		5396502	1					
ANR	5398705	Callee	unmonitorLogFile		5396502	0					
ANR	5398706	Identifier	unmonitorLogFile		5396502	0					
ANR	5398707	ArgumentList	lazyReader		5396502	1					
ANR	5398708	Argument	lazyReader		5396502	0					
ANR	5398709	Identifier	lazyReader		5396502	0					
ANR	5398710	Argument	file5		5396502	1					
ANR	5398711	Identifier	file5		5396502	0					
ANR	5398712	CompoundStatement		395:46:10184:10184	5396502	1					
ANR	5398713	ExpressionStatement	isOkay = false	535:2:14021:14035	5396502	0	True				
ANR	5398714	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398715	Identifier	isOkay		5396502	0					
ANR	5398716	Identifier	false		5396502	1					
ANR	5398717	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file5a ) )"		5396502	116					
ANR	5398718	Condition	"! unmonitorLogFile ( lazyReader , file5a )"	538:5:14143:14181	5396502	0	True				
ANR	5398719	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file5a )"		5396502	0					
ANR	5398720	UnaryOperator	!		5396502	0					
ANR	5398721	CallExpression	"unmonitorLogFile ( lazyReader , file5a )"		5396502	1					
ANR	5398722	Callee	unmonitorLogFile		5396502	0					
ANR	5398723	Identifier	unmonitorLogFile		5396502	0					
ANR	5398724	ArgumentList	lazyReader		5396502	1					
ANR	5398725	Argument	lazyReader		5396502	0					
ANR	5398726	Identifier	lazyReader		5396502	0					
ANR	5398727	Argument	file5a		5396502	1					
ANR	5398728	Identifier	file5a		5396502	0					
ANR	5398729	CompoundStatement		399:47:10352:10352	5396502	1					
ANR	5398730	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	539:2:14189:14240	5396502	0	True				
ANR	5398731	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398732	Callee	printf		5396502	0					
ANR	5398733	Identifier	printf		5396502	0					
ANR	5398734	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398735	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398736	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398737	Argument	__FILE__		5396502	1					
ANR	5398738	Identifier	__FILE__		5396502	0					
ANR	5398739	Argument	__LINE__		5396502	2					
ANR	5398740	Identifier	__LINE__		5396502	0					
ANR	5398741	ExpressionStatement	"printf ( ""error unmonitoring file %s\\n"" , file5a )"	540:2:14244:14292	5396502	1	True				
ANR	5398742	CallExpression	"printf ( ""error unmonitoring file %s\\n"" , file5a )"		5396502	0					
ANR	5398743	Callee	printf		5396502	0					
ANR	5398744	Identifier	printf		5396502	0					
ANR	5398745	ArgumentList	"""error unmonitoring file %s\\n"""		5396502	1					
ANR	5398746	Argument	"""error unmonitoring file %s\\n"""		5396502	0					
ANR	5398747	PrimaryExpression	"""error unmonitoring file %s\\n"""		5396502	0					
ANR	5398748	Argument	file5a		5396502	1					
ANR	5398749	Identifier	file5a		5396502	0					
ANR	5398750	ExpressionStatement	fflush ( stdout )	541:2:14296:14312	5396502	2	True				
ANR	5398751	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398752	Callee	fflush		5396502	0					
ANR	5398753	Identifier	fflush		5396502	0					
ANR	5398754	ArgumentList	stdout		5396502	1					
ANR	5398755	Argument	stdout		5396502	0					
ANR	5398756	Identifier	stdout		5396502	0					
ANR	5398757	ExpressionStatement	isOkay = false	542:2:14316:14330	5396502	3	True				
ANR	5398758	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398759	Identifier	isOkay		5396502	0					
ANR	5398760	Identifier	false		5396502	1					
ANR	5398761	IfStatement	"if ( ! log5 . initialize ( 6 , 0 , 0 , NULL ) )"		5396502	117					
ANR	5398762	Condition	"! log5 . initialize ( 6 , 0 , 0 , NULL )"	545:6:14342:14374	5396502	0	True				
ANR	5398763	UnaryOperationExpression	"! log5 . initialize ( 6 , 0 , 0 , NULL )"		5396502	0					
ANR	5398764	UnaryOperator	!		5396502	0					
ANR	5398765	CallExpression	"log5 . initialize ( 6 , 0 , 0 , NULL )"		5396502	1					
ANR	5398766	Callee	log5 . initialize		5396502	0					
ANR	5398767	MemberAccess	log5 . initialize		5396502	0					
ANR	5398768	Identifier	log5		5396502	0					
ANR	5398769	Identifier	initialize		5396502	1					
ANR	5398770	ArgumentList	6		5396502	1					
ANR	5398771	Argument	6		5396502	0					
ANR	5398772	PrimaryExpression	6		5396502	0					
ANR	5398773	Argument	0		5396502	1					
ANR	5398774	PrimaryExpression	0		5396502	0					
ANR	5398775	Argument	0		5396502	2					
ANR	5398776	PrimaryExpression	0		5396502	0					
ANR	5398777	Argument	NULL		5396502	3					
ANR	5398778	Identifier	NULL		5396502	0					
ANR	5398779	CompoundStatement		406:41:10544:10544	5396502	1					
ANR	5398780	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	546:2:14381:14432	5396502	0	True				
ANR	5398781	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398782	Callee	printf		5396502	0					
ANR	5398783	Identifier	printf		5396502	0					
ANR	5398784	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398785	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398786	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398787	Argument	__FILE__		5396502	1					
ANR	5398788	Identifier	__FILE__		5396502	0					
ANR	5398789	Argument	__LINE__		5396502	2					
ANR	5398790	Identifier	__LINE__		5396502	0					
ANR	5398791	ExpressionStatement	"printf ( ""error re-initializing log5\\n"" )"	547:2:14436:14476	5396502	1	True				
ANR	5398792	CallExpression	"printf ( ""error re-initializing log5\\n"" )"		5396502	0					
ANR	5398793	Callee	printf		5396502	0					
ANR	5398794	Identifier	printf		5396502	0					
ANR	5398795	ArgumentList	"""error re-initializing log5\\n"""		5396502	1					
ANR	5398796	Argument	"""error re-initializing log5\\n"""		5396502	0					
ANR	5398797	PrimaryExpression	"""error re-initializing log5\\n"""		5396502	0					
ANR	5398798	ExpressionStatement	fflush ( stdout )	548:2:14480:14496	5396502	2	True				
ANR	5398799	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398800	Callee	fflush		5396502	0					
ANR	5398801	Identifier	fflush		5396502	0					
ANR	5398802	ArgumentList	stdout		5396502	1					
ANR	5398803	Argument	stdout		5396502	0					
ANR	5398804	Identifier	stdout		5396502	0					
ANR	5398805	ExpressionStatement	isOkay = false	549:2:14500:14514	5396502	3	True				
ANR	5398806	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398807	Identifier	isOkay		5396502	0					
ANR	5398808	Identifier	false		5396502	1					
ANR	5398809	IfStatement	if ( ! log5 . writeEvent ( & subE ) )		5396502	118					
ANR	5398810	Condition	! log5 . writeEvent ( & subE )	552:6:14526:14548	5396502	0	True				
ANR	5398811	UnaryOperationExpression	! log5 . writeEvent ( & subE )		5396502	0					
ANR	5398812	UnaryOperator	!		5396502	0					
ANR	5398813	CallExpression	log5 . writeEvent ( & subE )		5396502	1					
ANR	5398814	Callee	log5 . writeEvent		5396502	0					
ANR	5398815	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398816	Identifier	log5		5396502	0					
ANR	5398817	Identifier	writeEvent		5396502	1					
ANR	5398818	ArgumentList	& subE		5396502	1					
ANR	5398819	Argument	& subE		5396502	0					
ANR	5398820	UnaryOperationExpression	& subE		5396502	0					
ANR	5398821	UnaryOperator	&		5396502	0					
ANR	5398822	Identifier	subE		5396502	1					
ANR	5398823	CompoundStatement		413:32:10719:10719	5396502	1					
ANR	5398824	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	553:2:14556:14607	5396502	0	True				
ANR	5398825	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398826	Callee	printf		5396502	0					
ANR	5398827	Identifier	printf		5396502	0					
ANR	5398828	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398829	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398830	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398831	Argument	__FILE__		5396502	1					
ANR	5398832	Identifier	__FILE__		5396502	0					
ANR	5398833	Argument	__LINE__		5396502	2					
ANR	5398834	Identifier	__LINE__		5396502	0					
ANR	5398835	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	554:2:14611:14642	5396502	1	True				
ANR	5398836	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398837	Callee	printf		5396502	0					
ANR	5398838	Identifier	printf		5396502	0					
ANR	5398839	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398840	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398841	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398842	ExpressionStatement	fflush ( stdout )	555:2:14646:14662	5396502	2	True				
ANR	5398843	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398844	Callee	fflush		5396502	0					
ANR	5398845	Identifier	fflush		5396502	0					
ANR	5398846	ArgumentList	stdout		5396502	1					
ANR	5398847	Argument	stdout		5396502	0					
ANR	5398848	Identifier	stdout		5396502	0					
ANR	5398849	ExpressionStatement	isOkay = false	556:2:14666:14680	5396502	3	True				
ANR	5398850	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398851	Identifier	isOkay		5396502	0					
ANR	5398852	Identifier	false		5396502	1					
ANR	5398853	ExpressionStatement	"strcpy ( execE . executeHost , ""<128.105.777.99:12345>"" )"	559:1:14687:14738	5396502	119	True				
ANR	5398854	CallExpression	"strcpy ( execE . executeHost , ""<128.105.777.99:12345>"" )"		5396502	0					
ANR	5398855	Callee	strcpy		5396502	0					
ANR	5398856	Identifier	strcpy		5396502	0					
ANR	5398857	ArgumentList	execE . executeHost		5396502	1					
ANR	5398858	Argument	execE . executeHost		5396502	0					
ANR	5398859	MemberAccess	execE . executeHost		5396502	0					
ANR	5398860	Identifier	execE		5396502	0					
ANR	5398861	Identifier	executeHost		5396502	1					
ANR	5398862	Argument	"""<128.105.777.99:12345>"""		5396502	1					
ANR	5398863	PrimaryExpression	"""<128.105.777.99:12345>"""		5396502	0					
ANR	5398864	IfStatement	if ( ! log5 . writeEvent ( & execE ) )		5396502	120					
ANR	5398865	Condition	! log5 . writeEvent ( & execE )	560:6:14746:14769	5396502	0	True				
ANR	5398866	UnaryOperationExpression	! log5 . writeEvent ( & execE )		5396502	0					
ANR	5398867	UnaryOperator	!		5396502	0					
ANR	5398868	CallExpression	log5 . writeEvent ( & execE )		5396502	1					
ANR	5398869	Callee	log5 . writeEvent		5396502	0					
ANR	5398870	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398871	Identifier	log5		5396502	0					
ANR	5398872	Identifier	writeEvent		5396502	1					
ANR	5398873	ArgumentList	& execE		5396502	1					
ANR	5398874	Argument	& execE		5396502	0					
ANR	5398875	UnaryOperationExpression	& execE		5396502	0					
ANR	5398876	UnaryOperator	&		5396502	0					
ANR	5398877	Identifier	execE		5396502	1					
ANR	5398878	CompoundStatement		421:33:10940:10940	5396502	1					
ANR	5398879	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	561:2:14777:14828	5396502	0	True				
ANR	5398880	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398881	Callee	printf		5396502	0					
ANR	5398882	Identifier	printf		5396502	0					
ANR	5398883	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398884	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398885	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398886	Argument	__FILE__		5396502	1					
ANR	5398887	Identifier	__FILE__		5396502	0					
ANR	5398888	Argument	__LINE__		5396502	2					
ANR	5398889	Identifier	__LINE__		5396502	0					
ANR	5398890	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	562:2:14832:14863	5396502	1	True				
ANR	5398891	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398892	Callee	printf		5396502	0					
ANR	5398893	Identifier	printf		5396502	0					
ANR	5398894	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398895	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398896	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398897	ExpressionStatement	fflush ( stdout )	563:2:14867:14883	5396502	2	True				
ANR	5398898	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398899	Callee	fflush		5396502	0					
ANR	5398900	Identifier	fflush		5396502	0					
ANR	5398901	ArgumentList	stdout		5396502	1					
ANR	5398902	Argument	stdout		5396502	0					
ANR	5398903	Identifier	stdout		5396502	0					
ANR	5398904	ExpressionStatement	isOkay = false	564:2:14887:14901	5396502	3	True				
ANR	5398905	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398906	Identifier	isOkay		5396502	0					
ANR	5398907	Identifier	false		5396502	1					
ANR	5398908	IfStatement	if ( ! log5 . writeEvent ( & termE ) )		5396502	121					
ANR	5398909	Condition	! log5 . writeEvent ( & termE )	567:6:14913:14936	5396502	0	True				
ANR	5398910	UnaryOperationExpression	! log5 . writeEvent ( & termE )		5396502	0					
ANR	5398911	UnaryOperator	!		5396502	0					
ANR	5398912	CallExpression	log5 . writeEvent ( & termE )		5396502	1					
ANR	5398913	Callee	log5 . writeEvent		5396502	0					
ANR	5398914	MemberAccess	log5 . writeEvent		5396502	0					
ANR	5398915	Identifier	log5		5396502	0					
ANR	5398916	Identifier	writeEvent		5396502	1					
ANR	5398917	ArgumentList	& termE		5396502	1					
ANR	5398918	Argument	& termE		5396502	0					
ANR	5398919	UnaryOperationExpression	& termE		5396502	0					
ANR	5398920	UnaryOperator	&		5396502	0					
ANR	5398921	Identifier	termE		5396502	1					
ANR	5398922	CompoundStatement		428:33:11107:11107	5396502	1					
ANR	5398923	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	568:2:14944:14995	5396502	0	True				
ANR	5398924	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398925	Callee	printf		5396502	0					
ANR	5398926	Identifier	printf		5396502	0					
ANR	5398927	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398928	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398929	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398930	Argument	__FILE__		5396502	1					
ANR	5398931	Identifier	__FILE__		5396502	0					
ANR	5398932	Argument	__LINE__		5396502	2					
ANR	5398933	Identifier	__LINE__		5396502	0					
ANR	5398934	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	569:2:14999:15030	5396502	1	True				
ANR	5398935	CallExpression	"printf ( ""writeEvent() failed"" )"		5396502	0					
ANR	5398936	Callee	printf		5396502	0					
ANR	5398937	Identifier	printf		5396502	0					
ANR	5398938	ArgumentList	"""writeEvent() failed"""		5396502	1					
ANR	5398939	Argument	"""writeEvent() failed"""		5396502	0					
ANR	5398940	PrimaryExpression	"""writeEvent() failed"""		5396502	0					
ANR	5398941	ExpressionStatement	fflush ( stdout )	570:2:15034:15050	5396502	2	True				
ANR	5398942	CallExpression	fflush ( stdout )		5396502	0					
ANR	5398943	Callee	fflush		5396502	0					
ANR	5398944	Identifier	fflush		5396502	0					
ANR	5398945	ArgumentList	stdout		5396502	1					
ANR	5398946	Argument	stdout		5396502	0					
ANR	5398947	Identifier	stdout		5396502	0					
ANR	5398948	ExpressionStatement	isOkay = false	571:2:15054:15068	5396502	3	True				
ANR	5398949	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398950	Identifier	isOkay		5396502	0					
ANR	5398951	Identifier	false		5396502	1					
ANR	5398952	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	122					
ANR	5398953	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	574:6:15080:15116	5396502	0	True				
ANR	5398954	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5398955	UnaryOperator	!		5396502	0					
ANR	5398956	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5398957	Callee	ReadAndTestEvent		5396502	0					
ANR	5398958	Identifier	ReadAndTestEvent		5396502	0					
ANR	5398959	ArgumentList	lazyReader		5396502	1					
ANR	5398960	Argument	lazyReader		5396502	0					
ANR	5398961	Identifier	lazyReader		5396502	0					
ANR	5398962	Argument	NULL		5396502	1					
ANR	5398963	Identifier	NULL		5396502	0					
ANR	5398964	CompoundStatement		435:46:11287:11287	5396502	1					
ANR	5398965	ExpressionStatement	isOkay = false	575:2:15124:15138	5396502	0	True				
ANR	5398966	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5398967	Identifier	isOkay		5396502	0					
ANR	5398968	Identifier	false		5396502	1					
ANR	5398969	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5a , true ) )"		5396502	123					
ANR	5398970	Condition	"! monitorLogFile ( lazyReader , file5a , true )"	579:5:15205:15247	5396502	0	True				
ANR	5398971	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5a , true )"		5396502	0					
ANR	5398972	UnaryOperator	!		5396502	0					
ANR	5398973	CallExpression	"monitorLogFile ( lazyReader , file5a , true )"		5396502	1					
ANR	5398974	Callee	monitorLogFile		5396502	0					
ANR	5398975	Identifier	monitorLogFile		5396502	0					
ANR	5398976	ArgumentList	lazyReader		5396502	1					
ANR	5398977	Argument	lazyReader		5396502	0					
ANR	5398978	Identifier	lazyReader		5396502	0					
ANR	5398979	Argument	file5a		5396502	1					
ANR	5398980	Identifier	file5a		5396502	0					
ANR	5398981	Argument	true		5396502	2					
ANR	5398982	Identifier	true		5396502	0					
ANR	5398983	CompoundStatement		440:51:11418:11418	5396502	1					
ANR	5398984	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	580:2:15255:15306	5396502	0	True				
ANR	5398985	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5398986	Callee	printf		5396502	0					
ANR	5398987	Identifier	printf		5396502	0					
ANR	5398988	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5398989	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398990	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5398991	Argument	__FILE__		5396502	1					
ANR	5398992	Identifier	__FILE__		5396502	0					
ANR	5398993	Argument	__LINE__		5396502	2					
ANR	5398994	Identifier	__LINE__		5396502	0					
ANR	5398995	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5a )"	581:2:15310:15356	5396502	1	True				
ANR	5398996	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5a )"		5396502	0					
ANR	5398997	Callee	printf		5396502	0					
ANR	5398998	Identifier	printf		5396502	0					
ANR	5398999	ArgumentList	"""error monitoring file %s\\n"""		5396502	1					
ANR	5399000	Argument	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399001	PrimaryExpression	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399002	Argument	file5a		5396502	1					
ANR	5399003	Identifier	file5a		5396502	0					
ANR	5399004	ExpressionStatement	fflush ( stdout )	582:2:15360:15376	5396502	2	True				
ANR	5399005	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399006	Callee	fflush		5396502	0					
ANR	5399007	Identifier	fflush		5396502	0					
ANR	5399008	ArgumentList	stdout		5396502	1					
ANR	5399009	Argument	stdout		5396502	0					
ANR	5399010	Identifier	stdout		5396502	0					
ANR	5399011	ExpressionStatement	isOkay = false	583:2:15380:15394	5396502	3	True				
ANR	5399012	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399013	Identifier	isOkay		5396502	0					
ANR	5399014	Identifier	false		5396502	1					
ANR	5399015	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		5396502	124					
ANR	5399016	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	586:6:15406:15443	5396502	0	True				
ANR	5399017	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		5396502	0					
ANR	5399018	UnaryOperator	!		5396502	0					
ANR	5399019	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		5396502	1					
ANR	5399020	Callee	ReadAndTestEvent		5396502	0					
ANR	5399021	Identifier	ReadAndTestEvent		5396502	0					
ANR	5399022	ArgumentList	lazyReader		5396502	1					
ANR	5399023	Argument	lazyReader		5396502	0					
ANR	5399024	Identifier	lazyReader		5396502	0					
ANR	5399025	Argument	& subE		5396502	1					
ANR	5399026	UnaryOperationExpression	& subE		5396502	0					
ANR	5399027	UnaryOperator	&		5396502	0					
ANR	5399028	Identifier	subE		5396502	1					
ANR	5399029	CompoundStatement		447:47:11614:11614	5396502	1					
ANR	5399030	ExpressionStatement	isOkay = false	587:2:15451:15465	5396502	0	True				
ANR	5399031	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399032	Identifier	isOkay		5396502	0					
ANR	5399033	Identifier	false		5396502	1					
ANR	5399034	IfStatement	"if ( symlink ( file5 , file5b ) != 0 )"		5396502	125					
ANR	5399035	Condition	"symlink ( file5 , file5b ) != 0"	591:6:15507:15535	5396502	0	True				
ANR	5399036	EqualityExpression	"symlink ( file5 , file5b ) != 0"		5396502	0		!=			
ANR	5399037	CallExpression	"symlink ( file5 , file5b )"		5396502	0					
ANR	5399038	Callee	symlink		5396502	0					
ANR	5399039	Identifier	symlink		5396502	0					
ANR	5399040	ArgumentList	file5		5396502	1					
ANR	5399041	Argument	file5		5396502	0					
ANR	5399042	Identifier	file5		5396502	0					
ANR	5399043	Argument	file5b		5396502	1					
ANR	5399044	Identifier	file5b		5396502	0					
ANR	5399045	PrimaryExpression	0		5396502	1					
ANR	5399046	CompoundStatement		452:38:11706:11706	5396502	1					
ANR	5399047	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	592:2:15543:15594	5396502	0	True				
ANR	5399048	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399049	Callee	printf		5396502	0					
ANR	5399050	Identifier	printf		5396502	0					
ANR	5399051	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399052	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399053	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399054	Argument	__FILE__		5396502	1					
ANR	5399055	Identifier	__FILE__		5396502	0					
ANR	5399056	Argument	__LINE__		5396502	2					
ANR	5399057	Identifier	__LINE__		5396502	0					
ANR	5399058	ExpressionStatement	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5b )"	593:2:15598:15695	5396502	1	True				
ANR	5399059	CallExpression	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5b )"		5396502	0					
ANR	5399060	Callee	printf		5396502	0					
ANR	5399061	Identifier	printf		5396502	0					
ANR	5399062	ArgumentList	"""error (%d, %s) creating symlink %s %s\\n"""		5396502	1					
ANR	5399063	Argument	"""error (%d, %s) creating symlink %s %s\\n"""		5396502	0					
ANR	5399064	PrimaryExpression	"""error (%d, %s) creating symlink %s %s\\n"""		5396502	0					
ANR	5399065	Argument	errno		5396502	1					
ANR	5399066	Identifier	errno		5396502	0					
ANR	5399067	Argument	strerror ( errno )		5396502	2					
ANR	5399068	CallExpression	strerror ( errno )		5396502	0					
ANR	5399069	Callee	strerror		5396502	0					
ANR	5399070	Identifier	strerror		5396502	0					
ANR	5399071	ArgumentList	errno		5396502	1					
ANR	5399072	Argument	errno		5396502	0					
ANR	5399073	Identifier	errno		5396502	0					
ANR	5399074	Argument	file5		5396502	3					
ANR	5399075	Identifier	file5		5396502	0					
ANR	5399076	Argument	file5b		5396502	4					
ANR	5399077	Identifier	file5b		5396502	0					
ANR	5399078	ExpressionStatement	isOkay = false	595:2:15699:15713	5396502	2	True				
ANR	5399079	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399080	Identifier	isOkay		5396502	0					
ANR	5399081	Identifier	false		5396502	1					
ANR	5399082	ElseStatement	else		5396502	0					
ANR	5399083	CompoundStatement		457:8:11890:11890	5396502	0					
ANR	5399084	ExpressionStatement	"printf ( ""Created link %s to %s\\n"" , file5b , file5 )"	597:2:15727:15777	5396502	0	True				
ANR	5399085	CallExpression	"printf ( ""Created link %s to %s\\n"" , file5b , file5 )"		5396502	0					
ANR	5399086	Callee	printf		5396502	0					
ANR	5399087	Identifier	printf		5396502	0					
ANR	5399088	ArgumentList	"""Created link %s to %s\\n"""		5396502	1					
ANR	5399089	Argument	"""Created link %s to %s\\n"""		5396502	0					
ANR	5399090	PrimaryExpression	"""Created link %s to %s\\n"""		5396502	0					
ANR	5399091	Argument	file5b		5396502	1					
ANR	5399092	Identifier	file5b		5396502	0					
ANR	5399093	Argument	file5		5396502	2					
ANR	5399094	Identifier	file5		5396502	0					
ANR	5399095	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5b , true ) )"		5396502	126					
ANR	5399096	Condition	"! monitorLogFile ( lazyReader , file5b , true )"	600:5:15835:15877	5396502	0	True				
ANR	5399097	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5b , true )"		5396502	0					
ANR	5399098	UnaryOperator	!		5396502	0					
ANR	5399099	CallExpression	"monitorLogFile ( lazyReader , file5b , true )"		5396502	1					
ANR	5399100	Callee	monitorLogFile		5396502	0					
ANR	5399101	Identifier	monitorLogFile		5396502	0					
ANR	5399102	ArgumentList	lazyReader		5396502	1					
ANR	5399103	Argument	lazyReader		5396502	0					
ANR	5399104	Identifier	lazyReader		5396502	0					
ANR	5399105	Argument	file5b		5396502	1					
ANR	5399106	Identifier	file5b		5396502	0					
ANR	5399107	Argument	true		5396502	2					
ANR	5399108	Identifier	true		5396502	0					
ANR	5399109	CompoundStatement		461:51:12048:12048	5396502	1					
ANR	5399110	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	601:2:15885:15936	5396502	0	True				
ANR	5399111	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399112	Callee	printf		5396502	0					
ANR	5399113	Identifier	printf		5396502	0					
ANR	5399114	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399115	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399116	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399117	Argument	__FILE__		5396502	1					
ANR	5399118	Identifier	__FILE__		5396502	0					
ANR	5399119	Argument	__LINE__		5396502	2					
ANR	5399120	Identifier	__LINE__		5396502	0					
ANR	5399121	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5b )"	602:2:15940:15986	5396502	1	True				
ANR	5399122	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5b )"		5396502	0					
ANR	5399123	Callee	printf		5396502	0					
ANR	5399124	Identifier	printf		5396502	0					
ANR	5399125	ArgumentList	"""error monitoring file %s\\n"""		5396502	1					
ANR	5399126	Argument	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399127	PrimaryExpression	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399128	Argument	file5b		5396502	1					
ANR	5399129	Identifier	file5b		5396502	0					
ANR	5399130	ExpressionStatement	fflush ( stdout )	603:2:15990:16006	5396502	2	True				
ANR	5399131	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399132	Callee	fflush		5396502	0					
ANR	5399133	Identifier	fflush		5396502	0					
ANR	5399134	ArgumentList	stdout		5396502	1					
ANR	5399135	Argument	stdout		5396502	0					
ANR	5399136	Identifier	stdout		5396502	0					
ANR	5399137	ExpressionStatement	isOkay = false	604:2:16010:16024	5396502	3	True				
ANR	5399138	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399139	Identifier	isOkay		5396502	0					
ANR	5399140	Identifier	false		5396502	1					
ANR	5399141	IfStatement	"if ( symlink ( file5 , file5c ) != 0 )"		5396502	127					
ANR	5399142	Condition	"symlink ( file5 , file5c ) != 0"	607:6:16036:16064	5396502	0	True				
ANR	5399143	EqualityExpression	"symlink ( file5 , file5c ) != 0"		5396502	0		!=			
ANR	5399144	CallExpression	"symlink ( file5 , file5c )"		5396502	0					
ANR	5399145	Callee	symlink		5396502	0					
ANR	5399146	Identifier	symlink		5396502	0					
ANR	5399147	ArgumentList	file5		5396502	1					
ANR	5399148	Argument	file5		5396502	0					
ANR	5399149	Identifier	file5		5396502	0					
ANR	5399150	Argument	file5c		5396502	1					
ANR	5399151	Identifier	file5c		5396502	0					
ANR	5399152	PrimaryExpression	0		5396502	1					
ANR	5399153	CompoundStatement		468:38:12235:12235	5396502	1					
ANR	5399154	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	608:2:16072:16123	5396502	0	True				
ANR	5399155	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399156	Callee	printf		5396502	0					
ANR	5399157	Identifier	printf		5396502	0					
ANR	5399158	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399159	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399160	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399161	Argument	__FILE__		5396502	1					
ANR	5399162	Identifier	__FILE__		5396502	0					
ANR	5399163	Argument	__LINE__		5396502	2					
ANR	5399164	Identifier	__LINE__		5396502	0					
ANR	5399165	ExpressionStatement	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5c )"	609:2:16127:16224	5396502	1	True				
ANR	5399166	CallExpression	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5c )"		5396502	0					
ANR	5399167	Callee	printf		5396502	0					
ANR	5399168	Identifier	printf		5396502	0					
ANR	5399169	ArgumentList	"""error (%d, %s) creating symlink %s %s\\n"""		5396502	1					
ANR	5399170	Argument	"""error (%d, %s) creating symlink %s %s\\n"""		5396502	0					
ANR	5399171	PrimaryExpression	"""error (%d, %s) creating symlink %s %s\\n"""		5396502	0					
ANR	5399172	Argument	errno		5396502	1					
ANR	5399173	Identifier	errno		5396502	0					
ANR	5399174	Argument	strerror ( errno )		5396502	2					
ANR	5399175	CallExpression	strerror ( errno )		5396502	0					
ANR	5399176	Callee	strerror		5396502	0					
ANR	5399177	Identifier	strerror		5396502	0					
ANR	5399178	ArgumentList	errno		5396502	1					
ANR	5399179	Argument	errno		5396502	0					
ANR	5399180	Identifier	errno		5396502	0					
ANR	5399181	Argument	file5		5396502	3					
ANR	5399182	Identifier	file5		5396502	0					
ANR	5399183	Argument	file5c		5396502	4					
ANR	5399184	Identifier	file5c		5396502	0					
ANR	5399185	ExpressionStatement	isOkay = false	611:2:16228:16242	5396502	2	True				
ANR	5399186	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399187	Identifier	isOkay		5396502	0					
ANR	5399188	Identifier	false		5396502	1					
ANR	5399189	ElseStatement	else		5396502	0					
ANR	5399190	CompoundStatement		473:8:12419:12419	5396502	0					
ANR	5399191	ExpressionStatement	"printf ( ""Created link %s to %s\\n"" , file5c , file5 )"	613:2:16256:16306	5396502	0	True				
ANR	5399192	CallExpression	"printf ( ""Created link %s to %s\\n"" , file5c , file5 )"		5396502	0					
ANR	5399193	Callee	printf		5396502	0					
ANR	5399194	Identifier	printf		5396502	0					
ANR	5399195	ArgumentList	"""Created link %s to %s\\n"""		5396502	1					
ANR	5399196	Argument	"""Created link %s to %s\\n"""		5396502	0					
ANR	5399197	PrimaryExpression	"""Created link %s to %s\\n"""		5396502	0					
ANR	5399198	Argument	file5c		5396502	1					
ANR	5399199	Identifier	file5c		5396502	0					
ANR	5399200	Argument	file5		5396502	2					
ANR	5399201	Identifier	file5		5396502	0					
ANR	5399202	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5c , true ) )"		5396502	128					
ANR	5399203	Condition	"! monitorLogFile ( lazyReader , file5c , true )"	616:5:16364:16406	5396502	0	True				
ANR	5399204	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5c , true )"		5396502	0					
ANR	5399205	UnaryOperator	!		5396502	0					
ANR	5399206	CallExpression	"monitorLogFile ( lazyReader , file5c , true )"		5396502	1					
ANR	5399207	Callee	monitorLogFile		5396502	0					
ANR	5399208	Identifier	monitorLogFile		5396502	0					
ANR	5399209	ArgumentList	lazyReader		5396502	1					
ANR	5399210	Argument	lazyReader		5396502	0					
ANR	5399211	Identifier	lazyReader		5396502	0					
ANR	5399212	Argument	file5c		5396502	1					
ANR	5399213	Identifier	file5c		5396502	0					
ANR	5399214	Argument	true		5396502	2					
ANR	5399215	Identifier	true		5396502	0					
ANR	5399216	CompoundStatement		477:51:12577:12577	5396502	1					
ANR	5399217	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	617:2:16414:16465	5396502	0	True				
ANR	5399218	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399219	Callee	printf		5396502	0					
ANR	5399220	Identifier	printf		5396502	0					
ANR	5399221	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399222	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399223	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399224	Argument	__FILE__		5396502	1					
ANR	5399225	Identifier	__FILE__		5396502	0					
ANR	5399226	Argument	__LINE__		5396502	2					
ANR	5399227	Identifier	__LINE__		5396502	0					
ANR	5399228	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5c )"	618:2:16469:16515	5396502	1	True				
ANR	5399229	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5c )"		5396502	0					
ANR	5399230	Callee	printf		5396502	0					
ANR	5399231	Identifier	printf		5396502	0					
ANR	5399232	ArgumentList	"""error monitoring file %s\\n"""		5396502	1					
ANR	5399233	Argument	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399234	PrimaryExpression	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399235	Argument	file5c		5396502	1					
ANR	5399236	Identifier	file5c		5396502	0					
ANR	5399237	ExpressionStatement	fflush ( stdout )	619:2:16519:16535	5396502	2	True				
ANR	5399238	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399239	Callee	fflush		5396502	0					
ANR	5399240	Identifier	fflush		5396502	0					
ANR	5399241	ArgumentList	stdout		5396502	1					
ANR	5399242	Argument	stdout		5396502	0					
ANR	5399243	Identifier	stdout		5396502	0					
ANR	5399244	ExpressionStatement	isOkay = false	620:2:16539:16553	5396502	3	True				
ANR	5399245	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399246	Identifier	isOkay		5396502	0					
ANR	5399247	Identifier	false		5396502	1					
ANR	5399248	ExpressionStatement	"link ( file5 , file5d )"	625:1:16665:16686	5396502	129	True				
ANR	5399249	CallExpression	"link ( file5 , file5d )"		5396502	0					
ANR	5399250	Callee	link		5396502	0					
ANR	5399251	Identifier	link		5396502	0					
ANR	5399252	ArgumentList	file5		5396502	1					
ANR	5399253	Argument	file5		5396502	0					
ANR	5399254	Identifier	file5		5396502	0					
ANR	5399255	Argument	file5d		5396502	1					
ANR	5399256	Identifier	file5d		5396502	0					
ANR	5399257	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5d , true ) )"		5396502	130					
ANR	5399258	Condition	"! monitorLogFile ( lazyReader , file5d , true )"	627:5:16742:16784	5396502	0	True				
ANR	5399259	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5d , true )"		5396502	0					
ANR	5399260	UnaryOperator	!		5396502	0					
ANR	5399261	CallExpression	"monitorLogFile ( lazyReader , file5d , true )"		5396502	1					
ANR	5399262	Callee	monitorLogFile		5396502	0					
ANR	5399263	Identifier	monitorLogFile		5396502	0					
ANR	5399264	ArgumentList	lazyReader		5396502	1					
ANR	5399265	Argument	lazyReader		5396502	0					
ANR	5399266	Identifier	lazyReader		5396502	0					
ANR	5399267	Argument	file5d		5396502	1					
ANR	5399268	Identifier	file5d		5396502	0					
ANR	5399269	Argument	true		5396502	2					
ANR	5399270	Identifier	true		5396502	0					
ANR	5399271	CompoundStatement		488:51:12955:12955	5396502	1					
ANR	5399272	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	628:2:16792:16843	5396502	0	True				
ANR	5399273	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399274	Callee	printf		5396502	0					
ANR	5399275	Identifier	printf		5396502	0					
ANR	5399276	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399277	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399278	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399279	Argument	__FILE__		5396502	1					
ANR	5399280	Identifier	__FILE__		5396502	0					
ANR	5399281	Argument	__LINE__		5396502	2					
ANR	5399282	Identifier	__LINE__		5396502	0					
ANR	5399283	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5d )"	629:2:16847:16893	5396502	1	True				
ANR	5399284	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5d )"		5396502	0					
ANR	5399285	Callee	printf		5396502	0					
ANR	5399286	Identifier	printf		5396502	0					
ANR	5399287	ArgumentList	"""error monitoring file %s\\n"""		5396502	1					
ANR	5399288	Argument	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399289	PrimaryExpression	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399290	Argument	file5d		5396502	1					
ANR	5399291	Identifier	file5d		5396502	0					
ANR	5399292	ExpressionStatement	fflush ( stdout )	630:2:16897:16913	5396502	2	True				
ANR	5399293	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399294	Callee	fflush		5396502	0					
ANR	5399295	Identifier	fflush		5396502	0					
ANR	5399296	ArgumentList	stdout		5396502	1					
ANR	5399297	Argument	stdout		5396502	0					
ANR	5399298	Identifier	stdout		5396502	0					
ANR	5399299	ExpressionStatement	isOkay = false	631:2:16917:16931	5396502	3	True				
ANR	5399300	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399301	Identifier	isOkay		5396502	0					
ANR	5399302	Identifier	false		5396502	1					
ANR	5399303	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 4 )		5396502	131					
ANR	5399304	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 4	634:6:16943:16995	5396502	0	True				
ANR	5399305	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 4		5396502	0		!=			
ANR	5399306	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		5396502	0		=			
ANR	5399307	Identifier	totalLogCount		5396502	0					
ANR	5399308	CallExpression	lazyReader . totalLogFileCount ( )		5396502	1					
ANR	5399309	Callee	lazyReader . totalLogFileCount		5396502	0					
ANR	5399310	MemberAccess	lazyReader . totalLogFileCount		5396502	0					
ANR	5399311	Identifier	lazyReader		5396502	0					
ANR	5399312	Identifier	totalLogFileCount		5396502	1					
ANR	5399313	ArgumentList			5396502	1					
ANR	5399314	PrimaryExpression	4		5396502	1					
ANR	5399315	CompoundStatement		495:62:13166:13166	5396502	1					
ANR	5399316	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	635:2:17003:17054	5396502	0	True				
ANR	5399317	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399318	Callee	printf		5396502	0					
ANR	5399319	Identifier	printf		5396502	0					
ANR	5399320	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399321	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399322	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399323	Argument	__FILE__		5396502	1					
ANR	5399324	Identifier	__FILE__		5396502	0					
ANR	5399325	Argument	__LINE__		5396502	2					
ANR	5399326	Identifier	__LINE__		5396502	0					
ANR	5399327	Statement	printf	636:2:17058:17063	5396502	1	True				
ANR	5399328	Statement	(	636:8:17064:17064	5396502	2	True				
ANR	5399329	Statement	"""lazyReader.totalLogFileCount() was %d; should """	636:10:17066:17113	5396502	3	True				
ANR	5399330	Statement	"""have been 4\\n"""	637:5:17120:17134	5396502	4	True				
ANR	5399331	Statement	","	637:20:17135:17135	5396502	5	True				
ANR	5399332	Statement	totalLogCount	637:22:17137:17149	5396502	6	True				
ANR	5399333	Statement	)	637:36:17151:17151	5396502	7	True				
ANR	5399334	ExpressionStatement		637:37:17152:17152	5396502	8	True				
ANR	5399335	ExpressionStatement	fflush ( stdout )	638:2:17156:17172	5396502	9	True				
ANR	5399336	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399337	Callee	fflush		5396502	0					
ANR	5399338	Identifier	fflush		5396502	0					
ANR	5399339	ArgumentList	stdout		5396502	1					
ANR	5399340	Argument	stdout		5396502	0					
ANR	5399341	Identifier	stdout		5396502	0					
ANR	5399342	ExpressionStatement	isOkay = false	639:2:17176:17190	5396502	10	True				
ANR	5399343	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399344	Identifier	isOkay		5396502	0					
ANR	5399345	Identifier	false		5396502	1					
ANR	5399346	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & execE ) )"		5396502	132					
ANR	5399347	Condition	"! ReadAndTestEvent ( lazyReader , & execE )"	642:6:17202:17240	5396502	0	True				
ANR	5399348	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & execE )"		5396502	0					
ANR	5399349	UnaryOperator	!		5396502	0					
ANR	5399350	CallExpression	"ReadAndTestEvent ( lazyReader , & execE )"		5396502	1					
ANR	5399351	Callee	ReadAndTestEvent		5396502	0					
ANR	5399352	Identifier	ReadAndTestEvent		5396502	0					
ANR	5399353	ArgumentList	lazyReader		5396502	1					
ANR	5399354	Argument	lazyReader		5396502	0					
ANR	5399355	Identifier	lazyReader		5396502	0					
ANR	5399356	Argument	& execE		5396502	1					
ANR	5399357	UnaryOperationExpression	& execE		5396502	0					
ANR	5399358	UnaryOperator	&		5396502	0					
ANR	5399359	Identifier	execE		5396502	1					
ANR	5399360	CompoundStatement		503:48:13411:13411	5396502	1					
ANR	5399361	ExpressionStatement	isOkay = false	643:2:17248:17262	5396502	0	True				
ANR	5399362	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399363	Identifier	isOkay		5396502	0					
ANR	5399364	Identifier	false		5396502	1					
ANR	5399365	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		5396502	133					
ANR	5399366	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	645:6:17273:17309	5396502	0	True				
ANR	5399367	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		5396502	0					
ANR	5399368	UnaryOperator	!		5396502	0					
ANR	5399369	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		5396502	1					
ANR	5399370	Callee	ReadAndTestEvent		5396502	0					
ANR	5399371	Identifier	ReadAndTestEvent		5396502	0					
ANR	5399372	ArgumentList	lazyReader		5396502	1					
ANR	5399373	Argument	lazyReader		5396502	0					
ANR	5399374	Identifier	lazyReader		5396502	0					
ANR	5399375	Argument	& termE		5396502	1					
ANR	5399376	UnaryOperationExpression	& termE		5396502	0					
ANR	5399377	UnaryOperator	&		5396502	0					
ANR	5399378	Identifier	termE		5396502	1					
ANR	5399379	CompoundStatement		506:46:13480:13480	5396502	1					
ANR	5399380	ExpressionStatement	isOkay = false	646:2:17317:17331	5396502	0	True				
ANR	5399381	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399382	Identifier	isOkay		5396502	0					
ANR	5399383	Identifier	false		5396502	1					
ANR	5399384	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		5396502	134					
ANR	5399385	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	648:6:17342:17376	5396502	0	True				
ANR	5399386	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		5396502	0					
ANR	5399387	UnaryOperator	!		5396502	0					
ANR	5399388	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		5396502	1					
ANR	5399389	Callee	ReadAndTestEvent		5396502	0					
ANR	5399390	Identifier	ReadAndTestEvent		5396502	0					
ANR	5399391	ArgumentList	lazyReader		5396502	1					
ANR	5399392	Argument	lazyReader		5396502	0					
ANR	5399393	Identifier	lazyReader		5396502	0					
ANR	5399394	Argument	NULL		5396502	1					
ANR	5399395	Identifier	NULL		5396502	0					
ANR	5399396	CompoundStatement		509:44:13547:13547	5396502	1					
ANR	5399397	ExpressionStatement	isOkay = false	649:2:17384:17398	5396502	0	True				
ANR	5399398	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399399	Identifier	isOkay		5396502	0					
ANR	5399400	Identifier	false		5396502	1					
ANR	5399401	IdentifierDeclStatement	"const char * file6 = ""test_multi_log.log6"" ;"	656:1:17511:17552	5396502	135	True				
ANR	5399402	IdentifierDecl	"* file6 = ""test_multi_log.log6"""		5396502	0					
ANR	5399403	IdentifierDeclType	const char *		5396502	0					
ANR	5399404	Identifier	file6		5396502	1					
ANR	5399405	AssignmentExpression	"* file6 = ""test_multi_log.log6"""		5396502	2		=			
ANR	5399406	Identifier	file6		5396502	0					
ANR	5399407	PrimaryExpression	"""test_multi_log.log6"""		5396502	1					
ANR	5399408	ExpressionStatement	unlink ( file6 )	657:1:17555:17570	5396502	136	True				
ANR	5399409	CallExpression	unlink ( file6 )		5396502	0					
ANR	5399410	Callee	unlink		5396502	0					
ANR	5399411	Identifier	unlink		5396502	0					
ANR	5399412	ArgumentList	file6		5396502	1					
ANR	5399413	Argument	file6		5396502	0					
ANR	5399414	Identifier	file6		5396502	0					
ANR	5399415	IfStatement	"if ( ! monitorLogFile ( lazyReader , file6 , true ) )"		5396502	137					
ANR	5399416	Condition	"! monitorLogFile ( lazyReader , file6 , true )"	659:5:17578:17619	5396502	0	True				
ANR	5399417	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file6 , true )"		5396502	0					
ANR	5399418	UnaryOperator	!		5396502	0					
ANR	5399419	CallExpression	"monitorLogFile ( lazyReader , file6 , true )"		5396502	1					
ANR	5399420	Callee	monitorLogFile		5396502	0					
ANR	5399421	Identifier	monitorLogFile		5396502	0					
ANR	5399422	ArgumentList	lazyReader		5396502	1					
ANR	5399423	Argument	lazyReader		5396502	0					
ANR	5399424	Identifier	lazyReader		5396502	0					
ANR	5399425	Argument	file6		5396502	1					
ANR	5399426	Identifier	file6		5396502	0					
ANR	5399427	Argument	true		5396502	2					
ANR	5399428	Identifier	true		5396502	0					
ANR	5399429	CompoundStatement		520:50:13790:13790	5396502	1					
ANR	5399430	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	660:2:17627:17678	5396502	0	True				
ANR	5399431	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399432	Callee	printf		5396502	0					
ANR	5399433	Identifier	printf		5396502	0					
ANR	5399434	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399435	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399436	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399437	Argument	__FILE__		5396502	1					
ANR	5399438	Identifier	__FILE__		5396502	0					
ANR	5399439	Argument	__LINE__		5396502	2					
ANR	5399440	Identifier	__LINE__		5396502	0					
ANR	5399441	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file6 )"	661:2:17682:17727	5396502	1	True				
ANR	5399442	CallExpression	"printf ( ""error monitoring file %s\\n"" , file6 )"		5396502	0					
ANR	5399443	Callee	printf		5396502	0					
ANR	5399444	Identifier	printf		5396502	0					
ANR	5399445	ArgumentList	"""error monitoring file %s\\n"""		5396502	1					
ANR	5399446	Argument	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399447	PrimaryExpression	"""error monitoring file %s\\n"""		5396502	0					
ANR	5399448	Argument	file6		5396502	1					
ANR	5399449	Identifier	file6		5396502	0					
ANR	5399450	ExpressionStatement	fflush ( stdout )	662:2:17731:17747	5396502	2	True				
ANR	5399451	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399452	Callee	fflush		5396502	0					
ANR	5399453	Identifier	fflush		5396502	0					
ANR	5399454	ArgumentList	stdout		5396502	1					
ANR	5399455	Argument	stdout		5396502	0					
ANR	5399456	Identifier	stdout		5396502	0					
ANR	5399457	ExpressionStatement	isOkay = false	663:2:17751:17765	5396502	3	True				
ANR	5399458	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399459	Identifier	isOkay		5396502	0					
ANR	5399460	Identifier	false		5396502	1					
ANR	5399461	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file6 ) )"		5396502	138					
ANR	5399462	Condition	"! unmonitorLogFile ( lazyReader , file6 )"	665:5:17775:17812	5396502	0	True				
ANR	5399463	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file6 )"		5396502	0					
ANR	5399464	UnaryOperator	!		5396502	0					
ANR	5399465	CallExpression	"unmonitorLogFile ( lazyReader , file6 )"		5396502	1					
ANR	5399466	Callee	unmonitorLogFile		5396502	0					
ANR	5399467	Identifier	unmonitorLogFile		5396502	0					
ANR	5399468	ArgumentList	lazyReader		5396502	1					
ANR	5399469	Argument	lazyReader		5396502	0					
ANR	5399470	Identifier	lazyReader		5396502	0					
ANR	5399471	Argument	file6		5396502	1					
ANR	5399472	Identifier	file6		5396502	0					
ANR	5399473	CompoundStatement		526:46:13983:13983	5396502	1					
ANR	5399474	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	666:2:17820:17871	5396502	0	True				
ANR	5399475	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5396502	0					
ANR	5399476	Callee	printf		5396502	0					
ANR	5399477	Identifier	printf		5396502	0					
ANR	5399478	ArgumentList	"""FAILURE at %s, %d: """		5396502	1					
ANR	5399479	Argument	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399480	PrimaryExpression	"""FAILURE at %s, %d: """		5396502	0					
ANR	5399481	Argument	__FILE__		5396502	1					
ANR	5399482	Identifier	__FILE__		5396502	0					
ANR	5399483	Argument	__LINE__		5396502	2					
ANR	5399484	Identifier	__LINE__		5396502	0					
ANR	5399485	ExpressionStatement	"printf ( ""error unmonitoring file %s\\n"" , file6 )"	667:2:17875:17922	5396502	1	True				
ANR	5399486	CallExpression	"printf ( ""error unmonitoring file %s\\n"" , file6 )"		5396502	0					
ANR	5399487	Callee	printf		5396502	0					
ANR	5399488	Identifier	printf		5396502	0					
ANR	5399489	ArgumentList	"""error unmonitoring file %s\\n"""		5396502	1					
ANR	5399490	Argument	"""error unmonitoring file %s\\n"""		5396502	0					
ANR	5399491	PrimaryExpression	"""error unmonitoring file %s\\n"""		5396502	0					
ANR	5399492	Argument	file6		5396502	1					
ANR	5399493	Identifier	file6		5396502	0					
ANR	5399494	ExpressionStatement	fflush ( stdout )	668:2:17926:17942	5396502	2	True				
ANR	5399495	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399496	Callee	fflush		5396502	0					
ANR	5399497	Identifier	fflush		5396502	0					
ANR	5399498	ArgumentList	stdout		5396502	1					
ANR	5399499	Argument	stdout		5396502	0					
ANR	5399500	Identifier	stdout		5396502	0					
ANR	5399501	ExpressionStatement	isOkay = false	669:2:17946:17960	5396502	3	True				
ANR	5399502	AssignmentExpression	isOkay = false		5396502	0		=			
ANR	5399503	Identifier	isOkay		5396502	0					
ANR	5399504	Identifier	false		5396502	1					
ANR	5399505	IfStatement	if ( isOkay )		5396502	139					
ANR	5399506	Condition	isOkay	673:6:17973:17978	5396502	0	True				
ANR	5399507	Identifier	isOkay		5396502	0					
ANR	5399508	CompoundStatement		534:15:14149:14149	5396502	1					
ANR	5399509	ExpressionStatement	"printf ( ""...succeeded\\n"" )"	674:2:17986:18010	5396502	0	True				
ANR	5399510	CallExpression	"printf ( ""...succeeded\\n"" )"		5396502	0					
ANR	5399511	Callee	printf		5396502	0					
ANR	5399512	Identifier	printf		5396502	0					
ANR	5399513	ArgumentList	"""...succeeded\\n"""		5396502	1					
ANR	5399514	Argument	"""...succeeded\\n"""		5396502	0					
ANR	5399515	PrimaryExpression	"""...succeeded\\n"""		5396502	0					
ANR	5399516	ExpressionStatement	fflush ( stdout )	675:2:18014:18028	5396502	1	True				
ANR	5399517	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399518	Callee	fflush		5396502	0					
ANR	5399519	Identifier	fflush		5396502	0					
ANR	5399520	ArgumentList	stdout		5396502	1					
ANR	5399521	Argument	stdout		5396502	0					
ANR	5399522	Identifier	stdout		5396502	0					
ANR	5399523	ElseStatement	else		5396502	0					
ANR	5399524	CompoundStatement		537:8:14205:14205	5396502	0					
ANR	5399525	ExpressionStatement	"printf ( ""...failed\\n"" )"	677:2:18042:18063	5396502	0	True				
ANR	5399526	CallExpression	"printf ( ""...failed\\n"" )"		5396502	0					
ANR	5399527	Callee	printf		5396502	0					
ANR	5399528	Identifier	printf		5396502	0					
ANR	5399529	ArgumentList	"""...failed\\n"""		5396502	1					
ANR	5399530	Argument	"""...failed\\n"""		5396502	0					
ANR	5399531	PrimaryExpression	"""...failed\\n"""		5396502	0					
ANR	5399532	ExpressionStatement	fflush ( stdout )	678:2:18067:18081	5396502	1	True				
ANR	5399533	CallExpression	fflush ( stdout )		5396502	0					
ANR	5399534	Callee	fflush		5396502	0					
ANR	5399535	Identifier	fflush		5396502	0					
ANR	5399536	ArgumentList	stdout		5396502	1					
ANR	5399537	Argument	stdout		5396502	0					
ANR	5399538	Identifier	stdout		5396502	0					
ANR	5399539	Statement	printf	681:1:18088:18093	5396502	140	True				
ANR	5399540	Statement	(	681:7:18094:18094	5396502	141	True				
ANR	5399541	Statement	"""\\nNote: we should get a warning here about log files still """	681:8:18095:18155	5396502	142	True				
ANR	5399542	Statement	"""being monitored...\\n"""	682:4:18161:18182	5396502	143	True				
ANR	5399543	Statement	)	682:26:18183:18183	5396502	144	True				
ANR	5399544	ExpressionStatement		682:27:18184:18184	5396502	145	True				
ANR	5399545	ReturnStatement	return isOkay ;	684:1:18188:18201	5396502	146	True				
ANR	5399546	Identifier	isOkay		5396502	0					
ANR	5399547	ReturnType	bool		5396502	1					
ANR	5399548	Identifier	ReadEventsLazy		5396502	2					
ANR	5399549	ParameterList			5396502	3					
ANR	5399550	CFGEntryNode	ENTRY		5396502		True				
ANR	5399551	CFGExitNode	EXIT		5396502		True				
ANR	5399552	Symbol	totalLogCount		5396502						
ANR	5399553	Symbol	stdout		5396502						
ANR	5399554	Symbol	& termE		5396502						
ANR	5399555	Symbol	monitorLogFile		5396502						
ANR	5399556	Symbol	log2 . writeEvent		5396502						
ANR	5399557	Symbol	execE		5396502						
ANR	5399558	Symbol	log4 . writeEvent		5396502						
ANR	5399559	Symbol	subE . submitHost		5396502						
ANR	5399560	Symbol	errno		5396502						
ANR	5399561	Symbol	lazyReader . readEvent		5396502						
ANR	5399562	Symbol	NULL		5396502						
ANR	5399563	Symbol	termE . cluster		5396502						
ANR	5399564	Symbol	__FILE__		5396502						
ANR	5399565	Symbol	termE . returnValue		5396502						
ANR	5399566	Symbol	log1 . writeEvent		5396502						
ANR	5399567	Symbol	strerror		5396502						
ANR	5399568	Symbol	subE		5396502						
ANR	5399569	Symbol	true		5396502						
ANR	5399570	Symbol	genE . info		5396502						
ANR	5399571	Symbol	file5a		5396502						
ANR	5399572	Symbol	file5b		5396502						
ANR	5399573	Symbol	ULOG_NO_EVENT		5396502						
ANR	5399574	Symbol	file5c		5396502						
ANR	5399575	Symbol	lazyReader . totalLogFileCount		5396502						
ANR	5399576	Symbol	log4		5396502						
ANR	5399577	Symbol	execE . executeHost		5396502						
ANR	5399578	Symbol	file5d		5396502						
ANR	5399579	Symbol	log5		5396502						
ANR	5399580	Symbol	genE		5396502						
ANR	5399581	Symbol	termE . normal		5396502						
ANR	5399582	Symbol	termE		5396502						
ANR	5399583	Symbol	log3 . writeEvent		5396502						
ANR	5399584	Symbol	& execE		5396502						
ANR	5399585	Symbol	lazyReader . detectLogGrowth		5396502						
ANR	5399586	Symbol	ReadAndTestEvent		5396502						
ANR	5399587	Symbol	symlink		5396502						
ANR	5399588	Symbol	log5 . writeEvent		5396502						
ANR	5399589	Symbol	event		5396502						
ANR	5399590	Symbol	log2		5396502						
ANR	5399591	Symbol	log3		5396502						
ANR	5399592	Symbol	log1		5396502						
ANR	5399593	Symbol	lazyReader		5396502						
ANR	5399594	Symbol	unmonitorLogFile		5396502						
ANR	5399595	Symbol	& genE		5396502						
ANR	5399596	Symbol	false		5396502						
ANR	5399597	Symbol	__LINE__		5396502						
ANR	5399598	Symbol	& subE		5396502						
ANR	5399599	Symbol	subE . cluster		5396502						
ANR	5399600	Symbol	file6		5396502						
ANR	5399601	Symbol	file4		5396502						
ANR	5399602	Symbol	file5		5396502						
ANR	5399603	Symbol	isOkay		5396502						
ANR	5399604	Symbol	file2		5396502						
ANR	5399605	Symbol	file3		5396502						
ANR	5399606	Symbol	file1		5396502						
ANR	5399607	Symbol	log5 . initialize		5396502						
ANR	5399608	Function	monitorLogFile	688:0:18238:18554							
ANR	5399609	FunctionDef	"monitorLogFile (ReadMultipleUserLogs & reader , const char * logfile , bool truncateIfFirst)"		5399608	0					
ANR	5399610	CompoundStatement		691:0:18336:18554	5399608	0					
ANR	5399611	IdentifierDeclStatement	CondorError errstack ;	692:1:18339:18359	5399608	0	True				
ANR	5399612	IdentifierDecl	errstack		5399608	0					
ANR	5399613	IdentifierDeclType	CondorError		5399608	0					
ANR	5399614	Identifier	errstack		5399608	1					
ANR	5399615	IfStatement	"if ( ! reader . monitorLogFile ( logfile , truncateIfFirst , errstack ) )"		5399608	1					
ANR	5399616	Condition	"! reader . monitorLogFile ( logfile , truncateIfFirst , errstack )"	693:6:18367:18426	5399608	0	True				
ANR	5399617	UnaryOperationExpression	"! reader . monitorLogFile ( logfile , truncateIfFirst , errstack )"		5399608	0					
ANR	5399618	UnaryOperator	!		5399608	0					
ANR	5399619	CallExpression	"reader . monitorLogFile ( logfile , truncateIfFirst , errstack )"		5399608	1					
ANR	5399620	Callee	reader . monitorLogFile		5399608	0					
ANR	5399621	MemberAccess	reader . monitorLogFile		5399608	0					
ANR	5399622	Identifier	reader		5399608	0					
ANR	5399623	Identifier	monitorLogFile		5399608	1					
ANR	5399624	ArgumentList	logfile		5399608	1					
ANR	5399625	Argument	logfile		5399608	0					
ANR	5399626	Identifier	logfile		5399608	0					
ANR	5399627	Argument	truncateIfFirst		5399608	1					
ANR	5399628	Identifier	truncateIfFirst		5399608	0					
ANR	5399629	Argument	errstack		5399608	2					
ANR	5399630	Identifier	errstack		5399608	0					
ANR	5399631	CompoundStatement		3:69:93:93	5399608	1					
ANR	5399632	ExpressionStatement	"printf ( ""Error monitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"	694:2:18434:18518	5399608	0	True				
ANR	5399633	CallExpression	"printf ( ""Error monitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"		5399608	0					
ANR	5399634	Callee	printf		5399608	0					
ANR	5399635	Identifier	printf		5399608	0					
ANR	5399636	ArgumentList	"""Error monitoring log file %s: %s\\n"""		5399608	1					
ANR	5399637	Argument	"""Error monitoring log file %s: %s\\n"""		5399608	0					
ANR	5399638	PrimaryExpression	"""Error monitoring log file %s: %s\\n"""		5399608	0					
ANR	5399639	Argument	logfile		5399608	1					
ANR	5399640	Identifier	logfile		5399608	0					
ANR	5399641	Argument	errstack . getFullText ( )		5399608	2					
ANR	5399642	CallExpression	errstack . getFullText ( )		5399608	0					
ANR	5399643	Callee	errstack . getFullText		5399608	0					
ANR	5399644	MemberAccess	errstack . getFullText		5399608	0					
ANR	5399645	Identifier	errstack		5399608	0					
ANR	5399646	Identifier	getFullText		5399608	1					
ANR	5399647	ArgumentList			5399608	1					
ANR	5399648	ReturnStatement	return false ;	696:2:18522:18534	5399608	1	True				
ANR	5399649	Identifier	false		5399608	0					
ANR	5399650	ReturnStatement	return true ;	699:1:18541:18552	5399608	2	True				
ANR	5399651	Identifier	true		5399608	0					
ANR	5399652	ReturnType	bool		5399608	1					
ANR	5399653	Identifier	monitorLogFile		5399608	2					
ANR	5399654	ParameterList	"ReadMultipleUserLogs & reader , const char * logfile , bool truncateIfFirst"		5399608	3					
ANR	5399655	Parameter	ReadMultipleUserLogs & reader	689:16:18259:18286	5399608	0	True				
ANR	5399656	ParameterType	ReadMultipleUserLogs &		5399608	0					
ANR	5399657	Identifier	reader		5399608	1					
ANR	5399658	Parameter	const char * logfile	689:46:18289:18307	5399608	1	True				
ANR	5399659	ParameterType	const char *		5399608	0					
ANR	5399660	Identifier	logfile		5399608	1					
ANR	5399661	Parameter	bool truncateIfFirst	690:3:18313:18332	5399608	2	True				
ANR	5399662	ParameterType	bool		5399608	0					
ANR	5399663	Identifier	truncateIfFirst		5399608	1					
ANR	5399664	CFGEntryNode	ENTRY		5399608		True				
ANR	5399665	CFGExitNode	EXIT		5399608		True				
ANR	5399666	Symbol	errstack		5399608						
ANR	5399667	Symbol	reader		5399608						
ANR	5399668	Symbol	logfile		5399608						
ANR	5399669	Symbol	false		5399608						
ANR	5399670	Symbol	true		5399608						
ANR	5399671	Symbol	errstack . getFullText		5399608						
ANR	5399672	Symbol	truncateIfFirst		5399608						
ANR	5399673	Symbol	reader . monitorLogFile		5399608						
ANR	5399674	Function	unmonitorLogFile	703:0:18589:18869							
ANR	5399675	FunctionDef	"unmonitorLogFile (ReadMultipleUserLogs & reader , const char * logfile)"		5399674	0					
ANR	5399676	CompoundStatement		705:0:18664:18869	5399674	0					
ANR	5399677	IdentifierDeclStatement	CondorError errstack ;	706:1:18667:18687	5399674	0	True				
ANR	5399678	IdentifierDecl	errstack		5399674	0					
ANR	5399679	IdentifierDeclType	CondorError		5399674	0					
ANR	5399680	Identifier	errstack		5399674	1					
ANR	5399681	IfStatement	"if ( ! reader . unmonitorLogFile ( logfile , errstack ) )"		5399674	1					
ANR	5399682	Condition	"! reader . unmonitorLogFile ( logfile , errstack )"	707:6:18695:18739	5399674	0	True				
ANR	5399683	UnaryOperationExpression	"! reader . unmonitorLogFile ( logfile , errstack )"		5399674	0					
ANR	5399684	UnaryOperator	!		5399674	0					
ANR	5399685	CallExpression	"reader . unmonitorLogFile ( logfile , errstack )"		5399674	1					
ANR	5399686	Callee	reader . unmonitorLogFile		5399674	0					
ANR	5399687	MemberAccess	reader . unmonitorLogFile		5399674	0					
ANR	5399688	Identifier	reader		5399674	0					
ANR	5399689	Identifier	unmonitorLogFile		5399674	1					
ANR	5399690	ArgumentList	logfile		5399674	1					
ANR	5399691	Argument	logfile		5399674	0					
ANR	5399692	Identifier	logfile		5399674	0					
ANR	5399693	Argument	errstack		5399674	1					
ANR	5399694	Identifier	errstack		5399674	0					
ANR	5399695	CompoundStatement		3:54:78:78	5399674	1					
ANR	5399696	ExpressionStatement	"printf ( ""Error unmonitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"	708:2:18747:18833	5399674	0	True				
ANR	5399697	CallExpression	"printf ( ""Error unmonitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"		5399674	0					
ANR	5399698	Callee	printf		5399674	0					
ANR	5399699	Identifier	printf		5399674	0					
ANR	5399700	ArgumentList	"""Error unmonitoring log file %s: %s\\n"""		5399674	1					
ANR	5399701	Argument	"""Error unmonitoring log file %s: %s\\n"""		5399674	0					
ANR	5399702	PrimaryExpression	"""Error unmonitoring log file %s: %s\\n"""		5399674	0					
ANR	5399703	Argument	logfile		5399674	1					
ANR	5399704	Identifier	logfile		5399674	0					
ANR	5399705	Argument	errstack . getFullText ( )		5399674	2					
ANR	5399706	CallExpression	errstack . getFullText ( )		5399674	0					
ANR	5399707	Callee	errstack . getFullText		5399674	0					
ANR	5399708	MemberAccess	errstack . getFullText		5399674	0					
ANR	5399709	Identifier	errstack		5399674	0					
ANR	5399710	Identifier	getFullText		5399674	1					
ANR	5399711	ArgumentList			5399674	1					
ANR	5399712	ReturnStatement	return false ;	710:2:18837:18849	5399674	1	True				
ANR	5399713	Identifier	false		5399674	0					
ANR	5399714	ReturnStatement	return true ;	713:1:18856:18867	5399674	2	True				
ANR	5399715	Identifier	true		5399674	0					
ANR	5399716	ReturnType	bool		5399674	1					
ANR	5399717	Identifier	unmonitorLogFile		5399674	2					
ANR	5399718	ParameterList	"ReadMultipleUserLogs & reader , const char * logfile"		5399674	3					
ANR	5399719	Parameter	ReadMultipleUserLogs & reader	704:18:18612:18639	5399674	0	True				
ANR	5399720	ParameterType	ReadMultipleUserLogs &		5399674	0					
ANR	5399721	Identifier	reader		5399674	1					
ANR	5399722	Parameter	const char * logfile	704:48:18642:18660	5399674	1	True				
ANR	5399723	ParameterType	const char *		5399674	0					
ANR	5399724	Identifier	logfile		5399674	1					
ANR	5399725	CFGEntryNode	ENTRY		5399674		True				
ANR	5399726	CFGExitNode	EXIT		5399674		True				
ANR	5399727	Symbol	errstack		5399674						
ANR	5399728	Symbol	reader . unmonitorLogFile		5399674						
ANR	5399729	Symbol	reader		5399674						
ANR	5399730	Symbol	logfile		5399674						
ANR	5399731	Symbol	false		5399674						
ANR	5399732	Symbol	true		5399674						
ANR	5399733	Symbol	errstack . getFullText		5399674						
ANR	5399734	Function	ReadAndTestEvent	717:0:18904:20296							
ANR	5399735	FunctionDef	"ReadAndTestEvent (ReadMultipleUserLogs & reader , ULogEvent * expectedEvent)"		5399734	0					
ANR	5399736	CompoundStatement		719:0:18982:20296	5399734	0					
ANR	5399737	IdentifierDeclStatement	bool isOkay = true ;	720:1:18985:19003	5399734	0	True				
ANR	5399738	IdentifierDecl	isOkay = true		5399734	0					
ANR	5399739	IdentifierDeclType	bool		5399734	0					
ANR	5399740	Identifier	isOkay		5399734	1					
ANR	5399741	AssignmentExpression	isOkay = true		5399734	2		=			
ANR	5399742	Identifier	true		5399734	0					
ANR	5399743	Identifier	true		5399734	1					
ANR	5399744	IdentifierDeclStatement	ULogEvent * event = NULL ;	722:1:19007:19030	5399734	1	True				
ANR	5399745	IdentifierDecl	* event = NULL		5399734	0					
ANR	5399746	IdentifierDeclType	ULogEvent *		5399734	0					
ANR	5399747	Identifier	event		5399734	1					
ANR	5399748	AssignmentExpression	* event = NULL		5399734	2		=			
ANR	5399749	Identifier	NULL		5399734	0					
ANR	5399750	Identifier	NULL		5399734	1					
ANR	5399751	IfStatement	if ( reader . readEvent ( event ) != ULOG_OK )		5399734	2					
ANR	5399752	Condition	reader . readEvent ( event ) != ULOG_OK	723:6:19038:19071	5399734	0	True				
ANR	5399753	EqualityExpression	reader . readEvent ( event ) != ULOG_OK		5399734	0		!=			
ANR	5399754	CallExpression	reader . readEvent ( event )		5399734	0					
ANR	5399755	Callee	reader . readEvent		5399734	0					
ANR	5399756	MemberAccess	reader . readEvent		5399734	0					
ANR	5399757	Identifier	reader		5399734	0					
ANR	5399758	Identifier	readEvent		5399734	1					
ANR	5399759	ArgumentList	event		5399734	1					
ANR	5399760	Argument	event		5399734	0					
ANR	5399761	Identifier	event		5399734	0					
ANR	5399762	Identifier	ULOG_OK		5399734	1					
ANR	5399763	CompoundStatement		5:43:92:92	5399734	1					
ANR	5399764	IfStatement	if ( expectedEvent )		5399734	0					
ANR	5399765	Condition	expectedEvent	724:7:19084:19096	5399734	0	True				
ANR	5399766	Identifier	expectedEvent		5399734	0					
ANR	5399767	CompoundStatement		6:23:117:117	5399734	1					
ANR	5399768	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	725:2:19104:19155	5399734	0	True				
ANR	5399769	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5399734	0					
ANR	5399770	Callee	printf		5399734	0					
ANR	5399771	Identifier	printf		5399734	0					
ANR	5399772	ArgumentList	"""FAILURE at %s, %d: """		5399734	1					
ANR	5399773	Argument	"""FAILURE at %s, %d: """		5399734	0					
ANR	5399774	PrimaryExpression	"""FAILURE at %s, %d: """		5399734	0					
ANR	5399775	Argument	__FILE__		5399734	1					
ANR	5399776	Identifier	__FILE__		5399734	0					
ANR	5399777	Argument	__LINE__		5399734	2					
ANR	5399778	Identifier	__LINE__		5399734	0					
ANR	5399779	ExpressionStatement	"printf ( ""FAIL: error reading event"" )"	726:3:19160:19195	5399734	1	True				
ANR	5399780	CallExpression	"printf ( ""FAIL: error reading event"" )"		5399734	0					
ANR	5399781	Callee	printf		5399734	0					
ANR	5399782	Identifier	printf		5399734	0					
ANR	5399783	ArgumentList	"""FAIL: error reading event"""		5399734	1					
ANR	5399784	Argument	"""FAIL: error reading event"""		5399734	0					
ANR	5399785	PrimaryExpression	"""FAIL: error reading event"""		5399734	0					
ANR	5399786	ExpressionStatement	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"	727:3:19200:19244	5399734	2	True				
ANR	5399787	CallExpression	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"		5399734	0					
ANR	5399788	Callee	printf		5399734	0					
ANR	5399789	Identifier	printf		5399734	0					
ANR	5399790	ArgumentList	""" (at %s: %d)\\n"""		5399734	1					
ANR	5399791	Argument	""" (at %s: %d)\\n"""		5399734	0					
ANR	5399792	PrimaryExpression	""" (at %s: %d)\\n"""		5399734	0					
ANR	5399793	Argument	__FILE__		5399734	1					
ANR	5399794	Identifier	__FILE__		5399734	0					
ANR	5399795	Argument	__LINE__		5399734	2					
ANR	5399796	Identifier	__LINE__		5399734	0					
ANR	5399797	ExpressionStatement	fflush ( stdout )	728:3:19249:19263	5399734	3	True				
ANR	5399798	CallExpression	fflush ( stdout )		5399734	0					
ANR	5399799	Callee	fflush		5399734	0					
ANR	5399800	Identifier	fflush		5399734	0					
ANR	5399801	ArgumentList	stdout		5399734	1					
ANR	5399802	Argument	stdout		5399734	0					
ANR	5399803	Identifier	stdout		5399734	0					
ANR	5399804	ExpressionStatement	isOkay = false	729:3:19268:19282	5399734	4	True				
ANR	5399805	AssignmentExpression	isOkay = false		5399734	0		=			
ANR	5399806	Identifier	isOkay		5399734	0					
ANR	5399807	Identifier	false		5399734	1					
ANR	5399808	ElseStatement	else		5399734	0					
ANR	5399809	CompoundStatement		13:8:313:313	5399734	0					
ANR	5399810	IfStatement	if ( verbosity >= 1 )		5399734	0					
ANR	5399811	Condition	verbosity >= 1	732:7:19305:19318	5399734	0	True				
ANR	5399812	RelationalExpression	verbosity >= 1		5399734	0		>=			
ANR	5399813	Identifier	verbosity		5399734	0					
ANR	5399814	PrimaryExpression	1		5399734	1					
ANR	5399815	ExpressionStatement	PrintEvent ( event )	732:24:19322:19339	5399734	1	True				
ANR	5399816	CallExpression	PrintEvent ( event )		5399734	0					
ANR	5399817	Callee	PrintEvent		5399734	0					
ANR	5399818	Identifier	PrintEvent		5399734	0					
ANR	5399819	ArgumentList	event		5399734	1					
ANR	5399820	Argument	event		5399734	0					
ANR	5399821	Identifier	event		5399734	0					
ANR	5399822	IfStatement	if ( expectedEvent )		5399734	1					
ANR	5399823	Condition	expectedEvent	734:7:19349:19361	5399734	0	True				
ANR	5399824	Identifier	expectedEvent		5399734	0					
ANR	5399825	CompoundStatement		16:23:382:382	5399734	1					
ANR	5399826	IfStatement	if ( expectedEvent -> eventNumber != event -> eventNumber || expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc )		5399734	0					
ANR	5399827	Condition	expectedEvent -> eventNumber != event -> eventNumber || expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc	735:8:19375:19563	5399734	0	True				
ANR	5399828	OrExpression	expectedEvent -> eventNumber != event -> eventNumber || expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc		5399734	0		||			
ANR	5399829	EqualityExpression	expectedEvent -> eventNumber != event -> eventNumber		5399734	0		!=			
ANR	5399830	PtrMemberAccess	expectedEvent -> eventNumber		5399734	0					
ANR	5399831	Identifier	expectedEvent		5399734	0					
ANR	5399832	Identifier	eventNumber		5399734	1					
ANR	5399833	PtrMemberAccess	event -> eventNumber		5399734	1					
ANR	5399834	Identifier	event		5399734	0					
ANR	5399835	Identifier	eventNumber		5399734	1					
ANR	5399836	OrExpression	expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc		5399734	1		||			
ANR	5399837	EqualityExpression	expectedEvent -> cluster != event -> cluster		5399734	0		!=			
ANR	5399838	PtrMemberAccess	expectedEvent -> cluster		5399734	0					
ANR	5399839	Identifier	expectedEvent		5399734	0					
ANR	5399840	Identifier	cluster		5399734	1					
ANR	5399841	PtrMemberAccess	event -> cluster		5399734	1					
ANR	5399842	Identifier	event		5399734	0					
ANR	5399843	Identifier	cluster		5399734	1					
ANR	5399844	OrExpression	expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc		5399734	1		||			
ANR	5399845	EqualityExpression	expectedEvent -> proc != event -> proc		5399734	0		!=			
ANR	5399846	PtrMemberAccess	expectedEvent -> proc		5399734	0					
ANR	5399847	Identifier	expectedEvent		5399734	0					
ANR	5399848	Identifier	proc		5399734	1					
ANR	5399849	PtrMemberAccess	event -> proc		5399734	1					
ANR	5399850	Identifier	event		5399734	0					
ANR	5399851	Identifier	proc		5399734	1					
ANR	5399852	EqualityExpression	expectedEvent -> subproc != event -> subproc		5399734	1		!=			
ANR	5399853	PtrMemberAccess	expectedEvent -> subproc		5399734	0					
ANR	5399854	Identifier	expectedEvent		5399734	0					
ANR	5399855	Identifier	subproc		5399734	1					
ANR	5399856	PtrMemberAccess	event -> subproc		5399734	1					
ANR	5399857	Identifier	event		5399734	0					
ANR	5399858	Identifier	subproc		5399734	1					
ANR	5399859	CompoundStatement		20:48:584:584	5399734	1					
ANR	5399860	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	739:2:19571:19622	5399734	0	True				
ANR	5399861	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5399734	0					
ANR	5399862	Callee	printf		5399734	0					
ANR	5399863	Identifier	printf		5399734	0					
ANR	5399864	ArgumentList	"""FAILURE at %s, %d: """		5399734	1					
ANR	5399865	Argument	"""FAILURE at %s, %d: """		5399734	0					
ANR	5399866	PrimaryExpression	"""FAILURE at %s, %d: """		5399734	0					
ANR	5399867	Argument	__FILE__		5399734	1					
ANR	5399868	Identifier	__FILE__		5399734	0					
ANR	5399869	Argument	__LINE__		5399734	2					
ANR	5399870	Identifier	__LINE__		5399734	0					
ANR	5399871	ExpressionStatement	"printf ( ""FAIL: event read does not match expected event"" )"	740:4:19628:19684	5399734	1	True				
ANR	5399872	CallExpression	"printf ( ""FAIL: event read does not match expected event"" )"		5399734	0					
ANR	5399873	Callee	printf		5399734	0					
ANR	5399874	Identifier	printf		5399734	0					
ANR	5399875	ArgumentList	"""FAIL: event read does not match expected event"""		5399734	1					
ANR	5399876	Argument	"""FAIL: event read does not match expected event"""		5399734	0					
ANR	5399877	PrimaryExpression	"""FAIL: event read does not match expected event"""		5399734	0					
ANR	5399878	ExpressionStatement	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"	741:4:19690:19734	5399734	2	True				
ANR	5399879	CallExpression	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"		5399734	0					
ANR	5399880	Callee	printf		5399734	0					
ANR	5399881	Identifier	printf		5399734	0					
ANR	5399882	ArgumentList	""" (at %s: %d)\\n"""		5399734	1					
ANR	5399883	Argument	""" (at %s: %d)\\n"""		5399734	0					
ANR	5399884	PrimaryExpression	""" (at %s: %d)\\n"""		5399734	0					
ANR	5399885	Argument	__FILE__		5399734	1					
ANR	5399886	Identifier	__FILE__		5399734	0					
ANR	5399887	Argument	__LINE__		5399734	2					
ANR	5399888	Identifier	__LINE__		5399734	0					
ANR	5399889	ExpressionStatement	"printf ( ""  Expected event: "" )"	742:4:19740:19768	5399734	3	True				
ANR	5399890	CallExpression	"printf ( ""  Expected event: "" )"		5399734	0					
ANR	5399891	Callee	printf		5399734	0					
ANR	5399892	Identifier	printf		5399734	0					
ANR	5399893	ArgumentList	"""  Expected event: """		5399734	1					
ANR	5399894	Argument	"""  Expected event: """		5399734	0					
ANR	5399895	PrimaryExpression	"""  Expected event: """		5399734	0					
ANR	5399896	ExpressionStatement	PrintEvent ( expectedEvent )	743:4:19774:19799	5399734	4	True				
ANR	5399897	CallExpression	PrintEvent ( expectedEvent )		5399734	0					
ANR	5399898	Callee	PrintEvent		5399734	0					
ANR	5399899	Identifier	PrintEvent		5399734	0					
ANR	5399900	ArgumentList	expectedEvent		5399734	1					
ANR	5399901	Argument	expectedEvent		5399734	0					
ANR	5399902	Identifier	expectedEvent		5399734	0					
ANR	5399903	ExpressionStatement	"printf ( ""  Event read: "" )"	744:4:19805:19829	5399734	5	True				
ANR	5399904	CallExpression	"printf ( ""  Event read: "" )"		5399734	0					
ANR	5399905	Callee	printf		5399734	0					
ANR	5399906	Identifier	printf		5399734	0					
ANR	5399907	ArgumentList	"""  Event read: """		5399734	1					
ANR	5399908	Argument	"""  Event read: """		5399734	0					
ANR	5399909	PrimaryExpression	"""  Event read: """		5399734	0					
ANR	5399910	ExpressionStatement	PrintEvent ( event )	745:4:19835:19852	5399734	6	True				
ANR	5399911	CallExpression	PrintEvent ( event )		5399734	0					
ANR	5399912	Callee	PrintEvent		5399734	0					
ANR	5399913	Identifier	PrintEvent		5399734	0					
ANR	5399914	ArgumentList	event		5399734	1					
ANR	5399915	Argument	event		5399734	0					
ANR	5399916	Identifier	event		5399734	0					
ANR	5399917	ExpressionStatement	fflush ( stdout )	746:4:19858:19872	5399734	7	True				
ANR	5399918	CallExpression	fflush ( stdout )		5399734	0					
ANR	5399919	Callee	fflush		5399734	0					
ANR	5399920	Identifier	fflush		5399734	0					
ANR	5399921	ArgumentList	stdout		5399734	1					
ANR	5399922	Argument	stdout		5399734	0					
ANR	5399923	Identifier	stdout		5399734	0					
ANR	5399924	ExpressionStatement	isOkay = false	747:4:19878:19892	5399734	8	True				
ANR	5399925	AssignmentExpression	isOkay = false		5399734	0		=			
ANR	5399926	Identifier	isOkay		5399734	0					
ANR	5399927	Identifier	false		5399734	1					
ANR	5399928	ElseStatement	else		5399734	0					
ANR	5399929	CompoundStatement		31:9:925:925	5399734	0					
ANR	5399930	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	750:2:19912:19963	5399734	0	True				
ANR	5399931	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		5399734	0					
ANR	5399932	Callee	printf		5399734	0					
ANR	5399933	Identifier	printf		5399734	0					
ANR	5399934	ArgumentList	"""FAILURE at %s, %d: """		5399734	1					
ANR	5399935	Argument	"""FAILURE at %s, %d: """		5399734	0					
ANR	5399936	PrimaryExpression	"""FAILURE at %s, %d: """		5399734	0					
ANR	5399937	Argument	__FILE__		5399734	1					
ANR	5399938	Identifier	__FILE__		5399734	0					
ANR	5399939	Argument	__LINE__		5399734	2					
ANR	5399940	Identifier	__LINE__		5399734	0					
ANR	5399941	ExpressionStatement	"printf ( ""FAIL: should NOT have gotten an event"" )"	751:3:19968:20015	5399734	1	True				
ANR	5399942	CallExpression	"printf ( ""FAIL: should NOT have gotten an event"" )"		5399734	0					
ANR	5399943	Callee	printf		5399734	0					
ANR	5399944	Identifier	printf		5399734	0					
ANR	5399945	ArgumentList	"""FAIL: should NOT have gotten an event"""		5399734	1					
ANR	5399946	Argument	"""FAIL: should NOT have gotten an event"""		5399734	0					
ANR	5399947	PrimaryExpression	"""FAIL: should NOT have gotten an event"""		5399734	0					
ANR	5399948	ExpressionStatement	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"	752:3:20020:20064	5399734	2	True				
ANR	5399949	CallExpression	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"		5399734	0					
ANR	5399950	Callee	printf		5399734	0					
ANR	5399951	Identifier	printf		5399734	0					
ANR	5399952	ArgumentList	""" (at %s: %d)\\n"""		5399734	1					
ANR	5399953	Argument	""" (at %s: %d)\\n"""		5399734	0					
ANR	5399954	PrimaryExpression	""" (at %s: %d)\\n"""		5399734	0					
ANR	5399955	Argument	__FILE__		5399734	1					
ANR	5399956	Identifier	__FILE__		5399734	0					
ANR	5399957	Argument	__LINE__		5399734	2					
ANR	5399958	Identifier	__LINE__		5399734	0					
ANR	5399959	ExpressionStatement	fflush ( stdout )	753:3:20069:20083	5399734	3	True				
ANR	5399960	CallExpression	fflush ( stdout )		5399734	0					
ANR	5399961	Callee	fflush		5399734	0					
ANR	5399962	Identifier	fflush		5399734	0					
ANR	5399963	ArgumentList	stdout		5399734	1					
ANR	5399964	Argument	stdout		5399734	0					
ANR	5399965	Identifier	stdout		5399734	0					
ANR	5399966	ExpressionStatement	isOkay = false	754:3:20088:20102	5399734	4	True				
ANR	5399967	AssignmentExpression	isOkay = false		5399734	0		=			
ANR	5399968	Identifier	isOkay		5399734	0					
ANR	5399969	Identifier	false		5399734	1					
ANR	5399970	IfStatement	if ( ! isOkay )		5399734	3					
ANR	5399971	Condition	! isOkay	758:6:20118:20124	5399734	0	True				
ANR	5399972	UnaryOperationExpression	! isOkay		5399734	0					
ANR	5399973	UnaryOperator	!		5399734	0					
ANR	5399974	Identifier	isOkay		5399734	1					
ANR	5399975	CompoundStatement		40:16:1145:1145	5399734	1					
ANR	5399976	ExpressionStatement	"printf ( ""  Expecting "" )"	759:2:20132:20154	5399734	0	True				
ANR	5399977	CallExpression	"printf ( ""  Expecting "" )"		5399734	0					
ANR	5399978	Callee	printf		5399734	0					
ANR	5399979	Identifier	printf		5399734	0					
ANR	5399980	ArgumentList	"""  Expecting """		5399734	1					
ANR	5399981	Argument	"""  Expecting """		5399734	0					
ANR	5399982	PrimaryExpression	"""  Expecting """		5399734	0					
ANR	5399983	ExpressionStatement	PrintEvent ( expectedEvent )	760:2:20158:20183	5399734	1	True				
ANR	5399984	CallExpression	PrintEvent ( expectedEvent )		5399734	0					
ANR	5399985	Callee	PrintEvent		5399734	0					
ANR	5399986	Identifier	PrintEvent		5399734	0					
ANR	5399987	ArgumentList	expectedEvent		5399734	1					
ANR	5399988	Argument	expectedEvent		5399734	0					
ANR	5399989	Identifier	expectedEvent		5399734	0					
ANR	5399990	ExpressionStatement	"printf ( ""; got "" )"	761:2:20187:20203	5399734	2	True				
ANR	5399991	CallExpression	"printf ( ""; got "" )"		5399734	0					
ANR	5399992	Callee	printf		5399734	0					
ANR	5399993	Identifier	printf		5399734	0					
ANR	5399994	ArgumentList	"""; got """		5399734	1					
ANR	5399995	Argument	"""; got """		5399734	0					
ANR	5399996	PrimaryExpression	"""; got """		5399734	0					
ANR	5399997	ExpressionStatement	PrintEvent ( event )	762:2:20207:20224	5399734	3	True				
ANR	5399998	CallExpression	PrintEvent ( event )		5399734	0					
ANR	5399999	Callee	PrintEvent		5399734	0					
ANR	5400000	Identifier	PrintEvent		5399734	0					
ANR	5400001	ArgumentList	event		5399734	1					
ANR	5400002	Argument	event		5399734	0					
ANR	5400003	Identifier	event		5399734	0					
ANR	5400004	ExpressionStatement	"printf ( ""\\n"" )"	763:2:20228:20240	5399734	4	True				
ANR	5400005	CallExpression	"printf ( ""\\n"" )"		5399734	0					
ANR	5400006	Callee	printf		5399734	0					
ANR	5400007	Identifier	printf		5399734	0					
ANR	5400008	ArgumentList	"""\\n"""		5399734	1					
ANR	5400009	Argument	"""\\n"""		5399734	0					
ANR	5400010	PrimaryExpression	"""\\n"""		5399734	0					
ANR	5400011	ExpressionStatement	fflush ( stdout )	764:2:20244:20258	5399734	5	True				
ANR	5400012	CallExpression	fflush ( stdout )		5399734	0					
ANR	5400013	Callee	fflush		5399734	0					
ANR	5400014	Identifier	fflush		5399734	0					
ANR	5400015	ArgumentList	stdout		5399734	1					
ANR	5400016	Argument	stdout		5399734	0					
ANR	5400017	Identifier	stdout		5399734	0					
ANR	5400018	Statement	delete	767:1:20265:20270	5399734	4	True				
ANR	5400019	ExpressionStatement	event	767:8:20272:20277	5399734	5	True				
ANR	5400020	Identifier	event		5399734	0					
ANR	5400021	ReturnStatement	return isOkay ;	769:1:20281:20294	5399734	6	True				
ANR	5400022	Identifier	isOkay		5399734	0					
ANR	5400023	ReturnType	bool		5399734	1					
ANR	5400024	Identifier	ReadAndTestEvent		5399734	2					
ANR	5400025	ParameterList	"ReadMultipleUserLogs & reader , ULogEvent * expectedEvent"		5399734	3					
ANR	5400026	Parameter	ReadMultipleUserLogs & reader	718:17:18926:18953	5399734	0	True				
ANR	5400027	ParameterType	ReadMultipleUserLogs &		5399734	0					
ANR	5400028	Identifier	reader		5399734	1					
ANR	5400029	Parameter	ULogEvent * expectedEvent	718:47:18956:18979	5399734	1	True				
ANR	5400030	ParameterType	ULogEvent *		5399734	0					
ANR	5400031	Identifier	expectedEvent		5399734	1					
ANR	5400032	CFGEntryNode	ENTRY		5399734		True				
ANR	5400033	CFGExitNode	EXIT		5399734		True				
ANR	5400034	Symbol	NULL		5399734						
ANR	5400035	Symbol	* event		5399734						
ANR	5400036	Symbol	stdout		5399734						
ANR	5400037	Symbol	reader		5399734						
ANR	5400038	Symbol	__FILE__		5399734						
ANR	5400039	Symbol	false		5399734						
ANR	5400040	Symbol	expectedEvent -> subproc		5399734						
ANR	5400041	Symbol	reader . readEvent		5399734						
ANR	5400042	Symbol	expectedEvent -> proc		5399734						
ANR	5400043	Symbol	__LINE__		5399734						
ANR	5400044	Symbol	event -> subproc		5399734						
ANR	5400045	Symbol	expectedEvent -> eventNumber		5399734						
ANR	5400046	Symbol	ULOG_OK		5399734						
ANR	5400047	Symbol	expectedEvent -> cluster		5399734						
ANR	5400048	Symbol	true		5399734						
ANR	5400049	Symbol	isOkay		5399734						
ANR	5400050	Symbol	* expectedEvent		5399734						
ANR	5400051	Symbol	expectedEvent		5399734						
ANR	5400052	Symbol	event		5399734						
ANR	5400053	Symbol	event -> eventNumber		5399734						
ANR	5400054	Symbol	verbosity		5399734						
ANR	5400055	Symbol	event -> proc		5399734						
ANR	5400056	Symbol	event -> cluster		5399734						
ANR	5400057	Function	PrintEvent	772:0:20299:20550							
ANR	5400058	FunctionDef	PrintEvent (ULogEvent * event)		5400057	0					
ANR	5400059	CompoundStatement		774:0:20333:20550	5400057	0					
ANR	5400060	IfStatement	if ( event )		5400057	0					
ANR	5400061	Condition	event	775:6:20341:20345	5400057	0	True				
ANR	5400062	Identifier	event		5400057	0					
ANR	5400063	CompoundStatement		2:14:15:15	5400057	1					
ANR	5400064	ExpressionStatement	"printf ( ""Event: %d.%d.%d: %s"" , event -> cluster , event -> proc , event -> subproc , ULogEventNumberNames [ event -> eventNumber ] )"	776:2:20353:20472	5400057	0	True				
ANR	5400065	CallExpression	"printf ( ""Event: %d.%d.%d: %s"" , event -> cluster , event -> proc , event -> subproc , ULogEventNumberNames [ event -> eventNumber ] )"		5400057	0					
ANR	5400066	Callee	printf		5400057	0					
ANR	5400067	Identifier	printf		5400057	0					
ANR	5400068	ArgumentList	"""Event: %d.%d.%d: %s"""		5400057	1					
ANR	5400069	Argument	"""Event: %d.%d.%d: %s"""		5400057	0					
ANR	5400070	PrimaryExpression	"""Event: %d.%d.%d: %s"""		5400057	0					
ANR	5400071	Argument	event -> cluster		5400057	1					
ANR	5400072	PtrMemberAccess	event -> cluster		5400057	0					
ANR	5400073	Identifier	event		5400057	0					
ANR	5400074	Identifier	cluster		5400057	1					
ANR	5400075	Argument	event -> proc		5400057	2					
ANR	5400076	PtrMemberAccess	event -> proc		5400057	0					
ANR	5400077	Identifier	event		5400057	0					
ANR	5400078	Identifier	proc		5400057	1					
ANR	5400079	Argument	event -> subproc		5400057	3					
ANR	5400080	PtrMemberAccess	event -> subproc		5400057	0					
ANR	5400081	Identifier	event		5400057	0					
ANR	5400082	Identifier	subproc		5400057	1					
ANR	5400083	Argument	ULogEventNumberNames [ event -> eventNumber ]		5400057	4					
ANR	5400084	ArrayIndexing	ULogEventNumberNames [ event -> eventNumber ]		5400057	0					
ANR	5400085	Identifier	ULogEventNumberNames		5400057	0					
ANR	5400086	PtrMemberAccess	event -> eventNumber		5400057	1					
ANR	5400087	Identifier	event		5400057	0					
ANR	5400088	Identifier	eventNumber		5400057	1					
ANR	5400089	ExpressionStatement	fflush ( stdout )	778:2:20476:20490	5400057	1	True				
ANR	5400090	CallExpression	fflush ( stdout )		5400057	0					
ANR	5400091	Callee	fflush		5400057	0					
ANR	5400092	Identifier	fflush		5400057	0					
ANR	5400093	ArgumentList	stdout		5400057	1					
ANR	5400094	Argument	stdout		5400057	0					
ANR	5400095	Identifier	stdout		5400057	0					
ANR	5400096	ElseStatement	else		5400057	0					
ANR	5400097	CompoundStatement		6:8:166:166	5400057	0					
ANR	5400098	ExpressionStatement	"printf ( ""Event: NULL\\n"" )"	780:2:20504:20527	5400057	0	True				
ANR	5400099	CallExpression	"printf ( ""Event: NULL\\n"" )"		5400057	0					
ANR	5400100	Callee	printf		5400057	0					
ANR	5400101	Identifier	printf		5400057	0					
ANR	5400102	ArgumentList	"""Event: NULL\\n"""		5400057	1					
ANR	5400103	Argument	"""Event: NULL\\n"""		5400057	0					
ANR	5400104	PrimaryExpression	"""Event: NULL\\n"""		5400057	0					
ANR	5400105	ExpressionStatement	fflush ( stdout )	781:2:20531:20545	5400057	1	True				
ANR	5400106	CallExpression	fflush ( stdout )		5400057	0					
ANR	5400107	Callee	fflush		5400057	0					
ANR	5400108	Identifier	fflush		5400057	0					
ANR	5400109	ArgumentList	stdout		5400057	1					
ANR	5400110	Argument	stdout		5400057	0					
ANR	5400111	Identifier	stdout		5400057	0					
ANR	5400112	ReturnType	void		5400057	1					
ANR	5400113	Identifier	PrintEvent		5400057	2					
ANR	5400114	ParameterList	ULogEvent * event		5400057	3					
ANR	5400115	Parameter	ULogEvent * event	773:11:20315:20330	5400057	0	True				
ANR	5400116	ParameterType	ULogEvent *		5400057	0					
ANR	5400117	Identifier	event		5400057	1					
ANR	5400118	CFGEntryNode	ENTRY		5400057		True				
ANR	5400119	CFGExitNode	EXIT		5400057		True				
ANR	5400120	Symbol	ULogEventNumberNames		5400057						
ANR	5400121	Symbol	* event		5400057						
ANR	5400122	Symbol	stdout		5400057						
ANR	5400123	Symbol	* event -> eventNumber		5400057						
ANR	5400124	Symbol	* * event		5400057						
ANR	5400125	Symbol	event		5400057						
ANR	5400126	Symbol	* ULogEventNumberNames		5400057						
ANR	5400127	Symbol	event -> subproc		5400057						
ANR	5400128	Symbol	event -> eventNumber		5400057						
ANR	5400129	Symbol	event -> proc		5400057						
ANR	5400130	Symbol	event -> cluster		5400057						
