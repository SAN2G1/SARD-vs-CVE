command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1896201	File	data/converged/CVE-2011-4930_htcondor/name_tab.cpp								
ANR	1896202	Function	NameTable :: NameTable	26:0:888:1006							
ANR	1896203	FunctionDef	NameTable :: NameTable (NAME_VALUE t [ ])		1896202	0					
ANR	1896204	CompoundStatement		27:0:927:1006	1896202	0					
ANR	1896205	ExpressionStatement	tab = t	28:1:930:937	1896202	0	True				
ANR	1896206	AssignmentExpression	tab = t		1896202	0		=			
ANR	1896207	Identifier	tab		1896202	0					
ANR	1896208	Identifier	t		1896202	1					
ANR	1896209	ForStatement	for ( n_entries = 0 ; tab [ n_entries ] . m_value != - 1 ; n_entries ++ )		1896202	1					
ANR	1896210	ForInit	n_entries = 0 ;	29:6:945:956	1896202	0	True				
ANR	1896211	AssignmentExpression	n_entries = 0		1896202	0		=			
ANR	1896212	Identifier	n_entries		1896202	0					
ANR	1896213	PrimaryExpression	0		1896202	1					
ANR	1896214	Condition	tab [ n_entries ] . m_value != - 1	29:19:958:985	1896202	1	True				
ANR	1896215	EqualityExpression	tab [ n_entries ] . m_value != - 1		1896202	0		!=			
ANR	1896216	MemberAccess	tab [ n_entries ] . m_value		1896202	0					
ANR	1896217	ArrayIndexing	tab [ n_entries ]		1896202	0					
ANR	1896218	Identifier	tab		1896202	0					
ANR	1896219	Identifier	n_entries		1896202	1					
ANR	1896220	Identifier	m_value		1896202	1					
ANR	1896221	UnaryOperationExpression	- 1		1896202	1					
ANR	1896222	UnaryOperator	-		1896202	0					
ANR	1896223	PrimaryExpression	1		1896202	1					
ANR	1896224	PostIncDecOperationExpression	n_entries ++	29:49:988:998	1896202	2	True				
ANR	1896225	Identifier	n_entries		1896202	0					
ANR	1896226	IncDec	++		1896202	1					
ANR	1896227	ExpressionStatement		30:2:1004:1004	1896202	3	True				
ANR	1896228	Identifier	NameTable :: NameTable		1896202	1					
ANR	1896229	ParameterList	NAME_VALUE t [ ]		1896202	2					
ANR	1896230	Parameter	NAME_VALUE t [ ]	26:22:910:923	1896202	0	True				
ANR	1896231	ParameterType	NAME_VALUE [ ]		1896202	0					
ANR	1896232	Identifier	t		1896202	1					
ANR	1896233	CFGEntryNode	ENTRY		1896202		True				
ANR	1896234	CFGExitNode	EXIT		1896202		True				
ANR	1896235	Symbol	t		1896202						
ANR	1896236	Symbol	tab		1896202						
ANR	1896237	Symbol	* n_entries		1896202						
ANR	1896238	Symbol	tab [ n_entries ] . m_value		1896202						
ANR	1896239	Symbol	n_entries		1896202						
ANR	1896240	Symbol	* tab		1896202						
ANR	1896241	Function	NameTable :: display	33:0:1009:1149							
ANR	1896242	FunctionDef	NameTable :: display ()		1896241	0					
ANR	1896243	CompoundStatement		35:0:1035:1149	1896241	0					
ANR	1896244	IdentifierDeclStatement	int i ;	36:1:1038:1044	1896241	0	True				
ANR	1896245	IdentifierDecl	i		1896241	0					
ANR	1896246	IdentifierDeclType	int		1896241	0					
ANR	1896247	Identifier	i		1896241	1					
ANR	1896248	ForStatement	for ( i = 0 ; i < n_entries ; i ++ )		1896241	1					
ANR	1896249	ForInit	i = 0 ;	38:6:1053:1056	1896241	0	True				
ANR	1896250	AssignmentExpression	i = 0		1896241	0		=			
ANR	1896251	Identifier	i		1896241	0					
ANR	1896252	PrimaryExpression	0		1896241	1					
ANR	1896253	Condition	i < n_entries	38:11:1058:1068	1896241	1	True				
ANR	1896254	RelationalExpression	i < n_entries		1896241	0		<			
ANR	1896255	Identifier	i		1896241	0					
ANR	1896256	Identifier	n_entries		1896241	1					
ANR	1896257	PostIncDecOperationExpression	i ++	38:24:1071:1073	1896241	2	True				
ANR	1896258	Identifier	i		1896241	0					
ANR	1896259	IncDec	++		1896241	1					
ANR	1896260	CompoundStatement		4:30:41:41	1896241	3					
ANR	1896261	ExpressionStatement	"dprintf ( D_ALWAYS , ""%ld  %s\\n"" , tab [ i ] . m_value , tab [ i ] . m_name )"	39:2:1081:1144	1896241	0	True				
ANR	1896262	CallExpression	"dprintf ( D_ALWAYS , ""%ld  %s\\n"" , tab [ i ] . m_value , tab [ i ] . m_name )"		1896241	0					
ANR	1896263	Callee	dprintf		1896241	0					
ANR	1896264	Identifier	dprintf		1896241	0					
ANR	1896265	ArgumentList	D_ALWAYS		1896241	1					
ANR	1896266	Argument	D_ALWAYS		1896241	0					
ANR	1896267	Identifier	D_ALWAYS		1896241	0					
ANR	1896268	Argument	"""%ld  %s\\n"""		1896241	1					
ANR	1896269	PrimaryExpression	"""%ld  %s\\n"""		1896241	0					
ANR	1896270	Argument	tab [ i ] . m_value		1896241	2					
ANR	1896271	MemberAccess	tab [ i ] . m_value		1896241	0					
ANR	1896272	ArrayIndexing	tab [ i ]		1896241	0					
ANR	1896273	Identifier	tab		1896241	0					
ANR	1896274	Identifier	i		1896241	1					
ANR	1896275	Identifier	m_value		1896241	1					
ANR	1896276	Argument	tab [ i ] . m_name		1896241	3					
ANR	1896277	MemberAccess	tab [ i ] . m_name		1896241	0					
ANR	1896278	ArrayIndexing	tab [ i ]		1896241	0					
ANR	1896279	Identifier	tab		1896241	0					
ANR	1896280	Identifier	i		1896241	1					
ANR	1896281	Identifier	m_name		1896241	1					
ANR	1896282	ReturnType	void		1896241	1					
ANR	1896283	Identifier	NameTable :: display		1896241	2					
ANR	1896284	ParameterList			1896241	3					
ANR	1896285	CFGEntryNode	ENTRY		1896241		True				
ANR	1896286	CFGExitNode	EXIT		1896241		True				
ANR	1896287	Symbol	* i		1896241						
ANR	1896288	Symbol	tab		1896241						
ANR	1896289	Symbol	n_entries		1896241						
ANR	1896290	Symbol	tab [ i ] . m_name		1896241						
ANR	1896291	Symbol	D_ALWAYS		1896241						
ANR	1896292	Symbol	i		1896241						
ANR	1896293	Symbol	* tab		1896241						
ANR	1896294	Symbol	tab [ i ] . m_value		1896241						
ANR	1896295	Function	NameTable :: get_name	44:0:1153:1333							
ANR	1896296	FunctionDef	NameTable :: get_name (long value)		1896295	0					
ANR	1896297	CompoundStatement		46:0:1200:1333	1896295	0					
ANR	1896298	IdentifierDeclStatement	int i ;	47:1:1203:1209	1896295	0	True				
ANR	1896299	IdentifierDecl	i		1896295	0					
ANR	1896300	IdentifierDeclType	int		1896295	0					
ANR	1896301	Identifier	i		1896295	1					
ANR	1896302	ForStatement	for ( i = 0 ; i < n_entries ; i ++ )		1896295	1					
ANR	1896303	ForInit	i = 0 ;	49:6:1218:1221	1896295	0	True				
ANR	1896304	AssignmentExpression	i = 0		1896295	0		=			
ANR	1896305	Identifier	i		1896295	0					
ANR	1896306	PrimaryExpression	0		1896295	1					
ANR	1896307	Condition	i < n_entries	49:11:1223:1233	1896295	1	True				
ANR	1896308	RelationalExpression	i < n_entries		1896295	0		<			
ANR	1896309	Identifier	i		1896295	0					
ANR	1896310	Identifier	n_entries		1896295	1					
ANR	1896311	PostIncDecOperationExpression	i ++	49:24:1236:1238	1896295	2	True				
ANR	1896312	Identifier	i		1896295	0					
ANR	1896313	IncDec	++		1896295	1					
ANR	1896314	CompoundStatement		4:30:41:41	1896295	3					
ANR	1896315	IfStatement	if ( tab [ i ] . m_value == value )		1896295	0					
ANR	1896316	Condition	tab [ i ] . m_value == value	50:6:1250:1272	1896295	0	True				
ANR	1896317	EqualityExpression	tab [ i ] . m_value == value		1896295	0		==			
ANR	1896318	MemberAccess	tab [ i ] . m_value		1896295	0					
ANR	1896319	ArrayIndexing	tab [ i ]		1896295	0					
ANR	1896320	Identifier	tab		1896295	0					
ANR	1896321	Identifier	i		1896295	1					
ANR	1896322	Identifier	m_value		1896295	1					
ANR	1896323	Identifier	value		1896295	1					
ANR	1896324	CompoundStatement		5:32:75:75	1896295	1					
ANR	1896325	ReturnStatement	return tab [ i ] . m_name ;	51:3:1281:1301	1896295	0	True				
ANR	1896326	MemberAccess	tab [ i ] . m_name		1896295	0					
ANR	1896327	ArrayIndexing	tab [ i ]		1896295	0					
ANR	1896328	Identifier	tab		1896295	0					
ANR	1896329	Identifier	i		1896295	1					
ANR	1896330	Identifier	m_name		1896295	1					
ANR	1896331	ReturnStatement	return tab [ i ] . m_name ;	54:1:1311:1331	1896295	2	True				
ANR	1896332	MemberAccess	tab [ i ] . m_name		1896295	0					
ANR	1896333	ArrayIndexing	tab [ i ]		1896295	0					
ANR	1896334	Identifier	tab		1896295	0					
ANR	1896335	Identifier	i		1896295	1					
ANR	1896336	Identifier	m_name		1896295	1					
ANR	1896337	ReturnType	const char *		1896295	1					
ANR	1896338	Identifier	NameTable :: get_name		1896295	2					
ANR	1896339	ParameterList	long value		1896295	3					
ANR	1896340	Parameter	long value	45:21:1187:1196	1896295	0	True				
ANR	1896341	ParameterType	long		1896295	0					
ANR	1896342	Identifier	value		1896295	1					
ANR	1896343	CFGEntryNode	ENTRY		1896295		True				
ANR	1896344	CFGExitNode	EXIT		1896295		True				
ANR	1896345	Symbol	* i		1896295						
ANR	1896346	Symbol	tab		1896295						
ANR	1896347	Symbol	n_entries		1896295						
ANR	1896348	Symbol	tab [ i ] . m_name		1896295						
ANR	1896349	Symbol	i		1896295						
ANR	1896350	Symbol	value		1896295						
ANR	1896351	Symbol	tab [ i ] . m_value		1896295						
ANR	1896352	Symbol	* tab		1896295						
ANR	1896353	Function	NameTable :: get_value	57:0:1336:1446							
ANR	1896354	FunctionDef	NameTable :: get_value (int i)		1896353	0					
ANR	1896355	CompoundStatement		59:0:1371:1446	1896353	0					
ANR	1896356	IfStatement	if ( i >= 0 && i < n_entries )		1896353	0					
ANR	1896357	Condition	i >= 0 && i < n_entries	60:5:1378:1400	1896353	0	True				
ANR	1896358	AndExpression	i >= 0 && i < n_entries		1896353	0		&&			
ANR	1896359	RelationalExpression	i >= 0		1896353	0		>=			
ANR	1896360	Identifier	i		1896353	0					
ANR	1896361	PrimaryExpression	0		1896353	1					
ANR	1896362	RelationalExpression	i < n_entries		1896353	1		<			
ANR	1896363	Identifier	i		1896353	0					
ANR	1896364	Identifier	n_entries		1896353	1					
ANR	1896365	CompoundStatement		2:31:32:32	1896353	1					
ANR	1896366	ReturnStatement	return tab [ i ] . m_value ;	61:2:1408:1429	1896353	0	True				
ANR	1896367	MemberAccess	tab [ i ] . m_value		1896353	0					
ANR	1896368	ArrayIndexing	tab [ i ]		1896353	0					
ANR	1896369	Identifier	tab		1896353	0					
ANR	1896370	Identifier	i		1896353	1					
ANR	1896371	Identifier	m_value		1896353	1					
ANR	1896372	ReturnStatement	return - 1 ;	63:1:1435:1444	1896353	1	True				
ANR	1896373	UnaryOperationExpression	- 1		1896353	0					
ANR	1896374	UnaryOperator	-		1896353	0					
ANR	1896375	PrimaryExpression	1		1896353	1					
ANR	1896376	ReturnType	long		1896353	1					
ANR	1896377	Identifier	NameTable :: get_value		1896353	2					
ANR	1896378	ParameterList	int i		1896353	3					
ANR	1896379	Parameter	int i	58:22:1363:1367	1896353	0	True				
ANR	1896380	ParameterType	int		1896353	0					
ANR	1896381	Identifier	i		1896353	1					
ANR	1896382	CFGEntryNode	ENTRY		1896353		True				
ANR	1896383	CFGExitNode	EXIT		1896353		True				
ANR	1896384	Symbol	* i		1896353						
ANR	1896385	Symbol	tab		1896353						
ANR	1896386	Symbol	n_entries		1896353						
ANR	1896387	Symbol	i		1896353						
ANR	1896388	Symbol	* tab		1896353						
ANR	1896389	Symbol	tab [ i ] . m_value		1896353						
ANR	1896390	Function	NameTableIterator :: NameTableIterator	66:0:1449:1533							
ANR	1896391	FunctionDef	NameTableIterator :: NameTableIterator (NameTable & table)		1896390	0					
ANR	1896392	CompoundStatement		67:0:1506:1533	1896390	0					
ANR	1896393	ExpressionStatement	tab = & table	68:1:1509:1521	1896390	0	True				
ANR	1896394	AssignmentExpression	tab = & table		1896390	0		=			
ANR	1896395	Identifier	tab		1896390	0					
ANR	1896396	UnaryOperationExpression	& table		1896390	1					
ANR	1896397	UnaryOperator	&		1896390	0					
ANR	1896398	Identifier	table		1896390	1					
ANR	1896399	ExpressionStatement	cur = 0	69:1:1524:1531	1896390	1	True				
ANR	1896400	AssignmentExpression	cur = 0		1896390	0		=			
ANR	1896401	Identifier	cur		1896390	0					
ANR	1896402	PrimaryExpression	0		1896390	1					
ANR	1896403	Identifier	NameTableIterator :: NameTableIterator		1896390	1					
ANR	1896404	ParameterList	NameTable & table		1896390	2					
ANR	1896405	Parameter	NameTable & table	66:38:1487:1502	1896390	0	True				
ANR	1896406	ParameterType	NameTable &		1896390	0					
ANR	1896407	Identifier	table		1896390	1					
ANR	1896408	CFGEntryNode	ENTRY		1896390		True				
ANR	1896409	CFGExitNode	EXIT		1896390		True				
ANR	1896410	Symbol	cur		1896390						
ANR	1896411	Symbol	tab		1896390						
ANR	1896412	Symbol	& table		1896390						
ANR	1896413	Symbol	table		1896390						
ANR	1896414	Function	operator ( )	73:19:1560:1608							
ANR	1896415	FunctionDef	operator ( ) ()		1896414	0					
ANR	1896416	CompoundStatement		74:0:1573:1608	1896414	0					
ANR	1896417	ReturnStatement	return tab -> get_value ( cur ++ ) ;	75:1:1576:1606	1896414	0	True				
ANR	1896418	CallExpression	tab -> get_value ( cur ++ )		1896414	0					
ANR	1896419	Callee	tab -> get_value		1896414	0					
ANR	1896420	PtrMemberAccess	tab -> get_value		1896414	0					
ANR	1896421	Identifier	tab		1896414	0					
ANR	1896422	Identifier	get_value		1896414	1					
ANR	1896423	ArgumentList	cur ++		1896414	1					
ANR	1896424	Argument	cur ++		1896414	0					
ANR	1896425	PostIncDecOperationExpression	cur ++		1896414	0					
ANR	1896426	Identifier	cur		1896414	0					
ANR	1896427	IncDec	++		1896414	1					
ANR	1896428	Identifier	operator ( )		1896414	1					
ANR	1896429	ParameterList			1896414	2					
ANR	1896430	CFGEntryNode	ENTRY		1896414		True				
ANR	1896431	CFGExitNode	EXIT		1896414		True				
ANR	1896432	Symbol	cur		1896414						
ANR	1896433	Symbol	tab		1896414						
ANR	1896434	Symbol	tab -> get_value		1896414						
ANR	1896435	Symbol	* tab		1896414						
