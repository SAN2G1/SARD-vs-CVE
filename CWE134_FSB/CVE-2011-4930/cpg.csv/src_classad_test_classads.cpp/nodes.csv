command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2603705	File	data/converged/CVE-2011-4930_htcondor/src_classad_test_classads.cpp								
ANR	2603706	ClassDef	Parameters	50:0:1702:1816							
ANR	2603707	DeclStmt									
ANR	2603708	Decl							bool	bool	debug
ANR	2603709	DeclStmt									
ANR	2603710	Decl							string	string	input_file
ANR	2603711	DeclStmt									
ANR	2603712	Decl							void	"void ( int argc , char * * argv )"	ParseCommandLine
ANR	2603713	ClassDef	ErrorCount	59:0:1820:2250							
ANR	2603714	DeclStmt									
ANR	2603715	Decl							int	int	number_of_errors
ANR	2603716	Function	ErrorCount	64:1:1881:1923							
ANR	2603717	FunctionDef	ErrorCount ()		2603716	1					
ANR	2603718	CompoundStatement		65:1:1896:1923	2603716	0					
ANR	2603719	ExpressionStatement	number_of_errors = 0	66:2:1900:1920	2603716	0	True				
ANR	2603720	AssignmentExpression	number_of_errors = 0		2603716	0		=			
ANR	2603721	Identifier	number_of_errors		2603716	0					
ANR	2603722	PrimaryExpression	0		2603716	1					
ANR	2603723	Identifier	ErrorCount		2603716	1					
ANR	2603724	ParameterList			2603716	2					
ANR	2603725	CFGEntryNode	ENTRY		2603716		True				
ANR	2603726	CFGExitNode	EXIT		2603716		True				
ANR	2603727	Symbol	number_of_errors		2603716						
ANR	2603728	Function	IncrementErrors	68:1:1926:1992							
ANR	2603729	FunctionDef	IncrementErrors ()		2603728	2					
ANR	2603730	CompoundStatement		69:1:1955:1992	2603728	0					
ANR	2603731	ExpressionStatement	number_of_errors ++	70:2:1960:1978	2603728	0	True				
ANR	2603732	PostIncDecOperationExpression	number_of_errors ++		2603728	0					
ANR	2603733	Identifier	number_of_errors		2603728	0					
ANR	2603734	IncDec	++		2603728	1					
ANR	2603735	ReturnStatement	return ;	71:2:1983:1989	2603728	1	True				
ANR	2603736	ReturnType	void		2603728	1					
ANR	2603737	Identifier	IncrementErrors		2603728	2					
ANR	2603738	ParameterList			2603728	3					
ANR	2603739	CFGEntryNode	ENTRY		2603728		True				
ANR	2603740	CFGExitNode	EXIT		2603728		True				
ANR	2603741	Symbol	number_of_errors		2603728						
ANR	2603742	Function	PrintErrors	73:1:1995:2248							
ANR	2603743	FunctionDef	PrintErrors ()		2603742	3					
ANR	2603744	CompoundStatement		74:1:2020:2248	2603742	0					
ANR	2603745	IfStatement	if ( number_of_errors == 0 )		2603742	0					
ANR	2603746	Condition	number_of_errors == 0	75:6:2028:2048	2603742	0	True				
ANR	2603747	EqualityExpression	number_of_errors == 0		2603742	0		==			
ANR	2603748	Identifier	number_of_errors		2603742	0					
ANR	2603749	PrimaryExpression	0		2603742	1					
ANR	2603750	CompoundStatement		2:29:30:30	2603742	1					
ANR	2603751	ExpressionStatement	"cout << ""No errors were found.\\n"""	76:3:2056:2089	2603742	0	True				
ANR	2603752	ShiftExpression	"cout << ""No errors were found.\\n"""		2603742	0		<<			
ANR	2603753	Identifier	cout		2603742	0					
ANR	2603754	PrimaryExpression	"""No errors were found.\\n"""		2603742	1					
ANR	2603755	ElseStatement	else		2603742	0					
ANR	2603756	IfStatement	if ( number_of_errors == 1 )		2603742	0					
ANR	2603757	Condition	number_of_errors == 1	77:13:2104:2124	2603742	0	True				
ANR	2603758	EqualityExpression	number_of_errors == 1		2603742	0		==			
ANR	2603759	Identifier	number_of_errors		2603742	0					
ANR	2603760	PrimaryExpression	1		2603742	1					
ANR	2603761	CompoundStatement		4:36:106:106	2603742	1					
ANR	2603762	ExpressionStatement	"cout << ""One error was found.\\n"""	78:3:2132:2164	2603742	0	True				
ANR	2603763	ShiftExpression	"cout << ""One error was found.\\n"""		2603742	0		<<			
ANR	2603764	Identifier	cout		2603742	0					
ANR	2603765	PrimaryExpression	"""One error was found.\\n"""		2603742	1					
ANR	2603766	ElseStatement	else		2603742	0					
ANR	2603767	CompoundStatement		6:9:154:154	2603742	0					
ANR	2603768	ExpressionStatement	"cout << number_of_errors << "" errors were found.\\n"""	80:3:2180:2231	2603742	0	True				
ANR	2603769	ShiftExpression	"cout << number_of_errors << "" errors were found.\\n"""		2603742	0		<<			
ANR	2603770	Identifier	cout		2603742	0					
ANR	2603771	ShiftExpression	"number_of_errors << "" errors were found.\\n"""		2603742	1		<<			
ANR	2603772	Identifier	number_of_errors		2603742	0					
ANR	2603773	PrimaryExpression	""" errors were found.\\n"""		2603742	1					
ANR	2603774	ReturnStatement	return ;	82:2:2239:2245	2603742	1	True				
ANR	2603775	ReturnType	void		2603742	1					
ANR	2603776	Identifier	PrintErrors		2603742	2					
ANR	2603777	ParameterList			2603742	3					
ANR	2603778	CFGEntryNode	ENTRY		2603742		True				
ANR	2603779	CFGExitNode	EXIT		2603742		True				
ANR	2603780	Symbol	number_of_errors		2603742						
ANR	2603781	DeclStmt									
ANR	2603782	Decl							"map < string , ClassAd * >"	"map < string , ClassAd * >"	ClassAdMap
ANR	2603783	DeclStmt									
ANR	2603784	Decl							"map < string , ClassAd * > :: iterator"	"map < string , ClassAd * > :: iterator"	ClassAdMapIterator
ANR	2603785	DeclStmt									
ANR	2603786	Decl							"map < string , ClassAdCollection * >"	"map < string , ClassAdCollection * >"	CollectionMap
ANR	2603787	DeclStmt									
ANR	2603788	Decl							"map < string , ClassAdCollection * > :: iterator"	"map < string , ClassAdCollection * > :: iterator"	CollectionMapIterator
ANR	2603789	DeclStmt									
ANR	2603790	Decl							void	void ( void )	cleanup
ANR	2603791	DeclStmt									
ANR	2603792	Decl							void	void ( string name )	mark_classad_in_collection
ANR	2603793	DeclStmt									
ANR	2603794	Decl							void	void ( string name )	unmark_classad_in_collection
ANR	2603795	DeclStmt									
ANR	2603796	Decl							bool	bool ( string name )	is_classad_in_collection
ANR	2603797	DeclStmt									
ANR	2603798	Decl							void	"void ( ifstream & input_file , const Parameters & parameters , ErrorCount * errors )"	process_file
ANR	2603799	DeclStmt									
ANR	2603800	Decl							void	"void ( ifstream & input_file , const string & line , int token_start , int * line_number , const Parameters & parameters , ErrorCount * errors )"	process_classad
ANR	2603801	DeclStmt									
ANR	2603802	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_print_classad
ANR	2603803	DeclStmt									
ANR	2603804	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_print_classad_xml
ANR	2603805	DeclStmt									
ANR	2603806	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_test_match
ANR	2603807	DeclStmt									
ANR	2603808	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_test_lexer_one_token
ANR	2603809	DeclStmt									
ANR	2603810	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_evaluate
ANR	2603811	DeclStmt									
ANR	2603812	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_make_collection
ANR	2603813	DeclStmt									
ANR	2603814	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_add_to_collection
ANR	2603815	DeclStmt									
ANR	2603816	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_truncate_log
ANR	2603817	DeclStmt									
ANR	2603818	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_create_subview
ANR	2603819	DeclStmt									
ANR	2603820	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_check_in_view
ANR	2603821	DeclStmt									
ANR	2603822	Decl							string	"string ( int * token_start , const string & line )"	extract_token
ANR	2603823	DeclStmt									
ANR	2603824	Decl							bool	bool ( const string & line )	empty_line
ANR	2603825	DeclStmt									
ANR	2603826	Decl							ClassAdMap	ClassAdMap	classads
ANR	2603827	DeclStmt									
ANR	2603828	Decl							CollectionMap	CollectionMap	collections
ANR	2603829	Function	main	154:0:5121:5598							
ANR	2603830	FunctionDef	"main (int argc , char * * argv)"		2603829	0					
ANR	2603831	CompoundStatement		156:0:5154:5598	2603829	0					
ANR	2603832	IdentifierDeclStatement	ErrorCount errors ;	157:1:5157:5175	2603829	0	True				
ANR	2603833	IdentifierDecl	errors		2603829	0					
ANR	2603834	IdentifierDeclType	ErrorCount		2603829	0					
ANR	2603835	Identifier	errors		2603829	1					
ANR	2603836	IdentifierDeclStatement	Parameters parameters ;	158:1:5178:5200	2603829	1	True				
ANR	2603837	IdentifierDecl	parameters		2603829	0					
ANR	2603838	IdentifierDeclType	Parameters		2603829	0					
ANR	2603839	Identifier	parameters		2603829	1					
ANR	2603840	ExpressionStatement	"parameters . ParseCommandLine ( argc , argv )"	160:1:5204:5243	2603829	2	True				
ANR	2603841	CallExpression	"parameters . ParseCommandLine ( argc , argv )"		2603829	0					
ANR	2603842	Callee	parameters . ParseCommandLine		2603829	0					
ANR	2603843	MemberAccess	parameters . ParseCommandLine		2603829	0					
ANR	2603844	Identifier	parameters		2603829	0					
ANR	2603845	Identifier	ParseCommandLine		2603829	1					
ANR	2603846	ArgumentList	argc		2603829	1					
ANR	2603847	Argument	argc		2603829	0					
ANR	2603848	Identifier	argc		2603829	0					
ANR	2603849	Argument	argv		2603829	1					
ANR	2603850	Identifier	argv		2603829	0					
ANR	2603851	IdentifierDeclStatement	ifstream input_file ( parameters . input_file . c_str ( ) ) ;	162:1:5247:5297	2603829	3	True				
ANR	2603852	IdentifierDecl	input_file ( parameters . input_file . c_str ( ) )		2603829	0					
ANR	2603853	IdentifierDeclType	ifstream		2603829	0					
ANR	2603854	Identifier	input_file		2603829	1					
ANR	2603855	CallExpression	parameters . input_file . c_str ( )		2603829	2					
ANR	2603856	Callee	parameters . input_file . c_str		2603829	0					
ANR	2603857	MemberAccess	parameters . input_file . c_str		2603829	0					
ANR	2603858	MemberAccess	parameters . input_file		2603829	0					
ANR	2603859	Identifier	parameters		2603829	0					
ANR	2603860	Identifier	input_file		2603829	1					
ANR	2603861	Identifier	c_str		2603829	1					
ANR	2603862	ArgumentList			2603829	1					
ANR	2603863	IfStatement	if ( ! input_file )		2603829	4					
ANR	2603864	Condition	! input_file	163:5:5304:5314	2603829	0	True				
ANR	2603865	UnaryOperationExpression	! input_file		2603829	0					
ANR	2603866	UnaryOperator	!		2603829	0					
ANR	2603867	Identifier	input_file		2603829	1					
ANR	2603868	CompoundStatement		8:18:162:162	2603829	1					
ANR	2603869	ExpressionStatement	"cout << ""Can't open file: \\"""" << parameters . input_file << ""\\""\\n"""	164:2:5321:5393	2603829	0	True				
ANR	2603870	ShiftExpression	"cout << ""Can't open file: \\"""" << parameters . input_file << ""\\""\\n"""		2603829	0		<<			
ANR	2603871	Identifier	cout		2603829	0					
ANR	2603872	ShiftExpression	"""Can't open file: \\"""" << parameters . input_file << ""\\""\\n"""		2603829	1		<<			
ANR	2603873	PrimaryExpression	"""Can't open file: \\"""""		2603829	0					
ANR	2603874	ShiftExpression	"parameters . input_file << ""\\""\\n"""		2603829	1		<<			
ANR	2603875	MemberAccess	parameters . input_file		2603829	0					
ANR	2603876	Identifier	parameters		2603829	0					
ANR	2603877	Identifier	input_file		2603829	1					
ANR	2603878	PrimaryExpression	"""\\""\\n"""		2603829	1					
ANR	2603879	ElseStatement	else		2603829	0					
ANR	2603880	CompoundStatement		13:6:249:249	2603829	0					
ANR	2603881	ExpressionStatement	input_file . flags ( 0 )	170:2:5425:5444	2603829	0	True				
ANR	2603882	CallExpression	input_file . flags ( 0 )		2603829	0					
ANR	2603883	Callee	input_file . flags		2603829	0					
ANR	2603884	MemberAccess	input_file . flags		2603829	0					
ANR	2603885	Identifier	input_file		2603829	0					
ANR	2603886	Identifier	flags		2603829	1					
ANR	2603887	ArgumentList	0		2603829	1					
ANR	2603888	Argument	0		2603829	0					
ANR	2603889	PrimaryExpression	0		2603829	0					
ANR	2603890	ExpressionStatement	"process_file ( input_file , parameters , & errors )"	174:2:5499:5544	2603829	1	True				
ANR	2603891	CallExpression	"process_file ( input_file , parameters , & errors )"		2603829	0					
ANR	2603892	Callee	process_file		2603829	0					
ANR	2603893	Identifier	process_file		2603829	0					
ANR	2603894	ArgumentList	input_file		2603829	1					
ANR	2603895	Argument	input_file		2603829	0					
ANR	2603896	Identifier	input_file		2603829	0					
ANR	2603897	Argument	parameters		2603829	1					
ANR	2603898	Identifier	parameters		2603829	0					
ANR	2603899	Argument	& errors		2603829	2					
ANR	2603900	UnaryOperationExpression	& errors		2603829	0					
ANR	2603901	UnaryOperator	&		2603829	0					
ANR	2603902	Identifier	errors		2603829	1					
ANR	2603903	ExpressionStatement	cleanup ( )	175:2:5548:5557	2603829	2	True				
ANR	2603904	CallExpression	cleanup ( )		2603829	0					
ANR	2603905	Callee	cleanup		2603829	0					
ANR	2603906	Identifier	cleanup		2603829	0					
ANR	2603907	ArgumentList			2603829	1					
ANR	2603908	ExpressionStatement	errors . PrintErrors ( )	176:2:5561:5581	2603829	3	True				
ANR	2603909	CallExpression	errors . PrintErrors ( )		2603829	0					
ANR	2603910	Callee	errors . PrintErrors		2603829	0					
ANR	2603911	MemberAccess	errors . PrintErrors		2603829	0					
ANR	2603912	Identifier	errors		2603829	0					
ANR	2603913	Identifier	PrintErrors		2603829	1					
ANR	2603914	ArgumentList			2603829	1					
ANR	2603915	ReturnStatement	return 0 ;	179:1:5588:5596	2603829	5	True				
ANR	2603916	PrimaryExpression	0		2603829	0					
ANR	2603917	ReturnType	int		2603829	1					
ANR	2603918	Identifier	main		2603829	2					
ANR	2603919	ParameterList	"int argc , char * * argv"		2603829	3					
ANR	2603920	Parameter	int argc	155:5:5131:5138	2603829	0	True				
ANR	2603921	ParameterType	int		2603829	0					
ANR	2603922	Identifier	argc		2603829	1					
ANR	2603923	Parameter	char * * argv	155:15:5141:5151	2603829	1	True				
ANR	2603924	ParameterType	char * *		2603829	0					
ANR	2603925	Identifier	argv		2603829	1					
ANR	2603926	CFGEntryNode	ENTRY		2603829		True				
ANR	2603927	CFGExitNode	EXIT		2603829		True				
ANR	2603928	Symbol	argc		2603829						
ANR	2603929	Symbol	input_file		2603829						
ANR	2603930	Symbol	& errors		2603829						
ANR	2603931	Symbol	argv		2603829						
ANR	2603932	Symbol	parameters		2603829						
ANR	2603933	Symbol	errors		2603829						
ANR	2603934	Symbol	parameters . input_file		2603829						
ANR	2603935	Function	cleanup	182:0:5601:6481							
ANR	2603936	FunctionDef	cleanup ()		2603935	0					
ANR	2603937	CompoundStatement		184:0:5627:6481	2603935	0					
ANR	2603938	IdentifierDeclStatement	CollectionMapIterator ci ;	187:1:5758:5782	2603935	0	True				
ANR	2603939	IdentifierDecl	ci		2603935	0					
ANR	2603940	IdentifierDeclType	CollectionMapIterator		2603935	0					
ANR	2603941	Identifier	ci		2603935	1					
ANR	2603942	ForStatement	for ( ci = collections . begin ( ) ; ci != collections . end ( ) ; ci ++ )		2603935	1					
ANR	2603943	ForInit	ci = collections . begin ( ) ;	189:6:5791:5815	2603935	0	True				
ANR	2603944	AssignmentExpression	ci = collections . begin ( )		2603935	0		=			
ANR	2603945	Identifier	ci		2603935	0					
ANR	2603946	CallExpression	collections . begin ( )		2603935	1					
ANR	2603947	Callee	collections . begin		2603935	0					
ANR	2603948	MemberAccess	collections . begin		2603935	0					
ANR	2603949	Identifier	collections		2603935	0					
ANR	2603950	Identifier	begin		2603935	1					
ANR	2603951	ArgumentList			2603935	1					
ANR	2603952	Condition	ci != collections . end ( )	189:32:5817:5839	2603935	1	True				
ANR	2603953	EqualityExpression	ci != collections . end ( )		2603935	0		!=			
ANR	2603954	Identifier	ci		2603935	0					
ANR	2603955	CallExpression	collections . end ( )		2603935	1					
ANR	2603956	Callee	collections . end		2603935	0					
ANR	2603957	MemberAccess	collections . end		2603935	0					
ANR	2603958	Identifier	collections		2603935	0					
ANR	2603959	Identifier	end		2603935	1					
ANR	2603960	ArgumentList			2603935	1					
ANR	2603961	PostIncDecOperationExpression	ci ++	189:57:5842:5845	2603935	2	True				
ANR	2603962	Identifier	ci		2603935	0					
ANR	2603963	IncDec	++		2603935	1					
ANR	2603964	CompoundStatement		16:2:387:405	2603935	3					
ANR	2603965	IdentifierDeclStatement	ClassAdCollection * collection ;	190:2:5853:5882	2603935	0	True				
ANR	2603966	IdentifierDecl	* collection		2603935	0					
ANR	2603967	IdentifierDeclType	ClassAdCollection *		2603935	0					
ANR	2603968	Identifier	collection		2603935	1					
ANR	2603969	ExpressionStatement	collection = ci -> second	192:2:5887:5910	2603935	1	True				
ANR	2603970	AssignmentExpression	collection = ci -> second		2603935	0		=			
ANR	2603971	Identifier	collection		2603935	0					
ANR	2603972	PtrMemberAccess	ci -> second		2603935	1					
ANR	2603973	Identifier	ci		2603935	0					
ANR	2603974	Identifier	second		2603935	1					
ANR	2603975	IdentifierDeclStatement	LocalCollectionQuery query ;	194:2:5915:5942	2603935	2	True				
ANR	2603976	IdentifierDecl	query		2603935	0					
ANR	2603977	IdentifierDeclType	LocalCollectionQuery		2603935	0					
ANR	2603978	Identifier	query		2603935	1					
ANR	2603979	ExpressionStatement	query . Bind ( collection )	196:2:5949:5971	2603935	3	True				
ANR	2603980	CallExpression	query . Bind ( collection )		2603935	0					
ANR	2603981	Callee	query . Bind		2603935	0					
ANR	2603982	MemberAccess	query . Bind		2603935	0					
ANR	2603983	Identifier	query		2603935	0					
ANR	2603984	Identifier	Bind		2603935	1					
ANR	2603985	ArgumentList	collection		2603935	1					
ANR	2603986	Argument	collection		2603935	0					
ANR	2603987	Identifier	collection		2603935	0					
ANR	2603988	ExpressionStatement	"assert ( query . Query ( ""root"" , NULL ) )"	197:2:5975:6008	2603935	4	True				
ANR	2603989	CallExpression	"assert ( query . Query ( ""root"" , NULL ) )"		2603935	0					
ANR	2603990	Callee	assert		2603935	0					
ANR	2603991	Identifier	assert		2603935	0					
ANR	2603992	ArgumentList	"query . Query ( ""root"" , NULL )"		2603935	1					
ANR	2603993	Argument	"query . Query ( ""root"" , NULL )"		2603935	0					
ANR	2603994	CallExpression	"query . Query ( ""root"" , NULL )"		2603935	0					
ANR	2603995	Callee	query . Query		2603935	0					
ANR	2603996	MemberAccess	query . Query		2603935	0					
ANR	2603997	Identifier	query		2603935	0					
ANR	2603998	Identifier	Query		2603935	1					
ANR	2603999	ArgumentList	"""root"""		2603935	1					
ANR	2604000	Argument	"""root"""		2603935	0					
ANR	2604001	PrimaryExpression	"""root"""		2603935	0					
ANR	2604002	Argument	NULL		2603935	1					
ANR	2604003	Identifier	NULL		2603935	0					
ANR	2604004	IdentifierDeclStatement	string classad_key ;	199:2:6015:6033	2603935	5	True				
ANR	2604005	IdentifierDecl	classad_key		2603935	0					
ANR	2604006	IdentifierDeclType	string		2603935	0					
ANR	2604007	Identifier	classad_key		2603935	1					
ANR	2604008	ForStatement	"for ( query . ToFirst ( ) , query . Current ( classad_key ) ; ! query . IsAfterLast ( ) ; query . Next ( classad_key ) )"		2603935	6					
ANR	2604009	ForInit	"query . ToFirst ( ) , query . Current ( classad_key ) ;"	201:7:6045:6088	2603935	0	True				
ANR	2604010	Expression	"query . ToFirst ( ) , query . Current ( classad_key )"		2603935	0					
ANR	2604011	CallExpression	query . ToFirst ( )		2603935	0					
ANR	2604012	Callee	query . ToFirst		2603935	0					
ANR	2604013	MemberAccess	query . ToFirst		2603935	0					
ANR	2604014	Identifier	query		2603935	0					
ANR	2604015	Identifier	ToFirst		2603935	1					
ANR	2604016	ArgumentList			2603935	1					
ANR	2604017	CallExpression	query . Current ( classad_key )		2603935	1					
ANR	2604018	Callee	query . Current		2603935	0					
ANR	2604019	MemberAccess	query . Current		2603935	0					
ANR	2604020	Identifier	query		2603935	0					
ANR	2604021	Identifier	Current		2603935	1					
ANR	2604022	ArgumentList	classad_key		2603935	1					
ANR	2604023	Argument	classad_key		2603935	0					
ANR	2604024	Identifier	classad_key		2603935	0					
ANR	2604025	Condition	! query . IsAfterLast ( )	202:4:6095:6114	2603935	1	True				
ANR	2604026	UnaryOperationExpression	! query . IsAfterLast ( )		2603935	0					
ANR	2604027	UnaryOperator	!		2603935	0					
ANR	2604028	CallExpression	query . IsAfterLast ( )		2603935	1					
ANR	2604029	Callee	query . IsAfterLast		2603935	0					
ANR	2604030	MemberAccess	query . IsAfterLast		2603935	0					
ANR	2604031	Identifier	query		2603935	0					
ANR	2604032	Identifier	IsAfterLast		2603935	1					
ANR	2604033	ArgumentList			2603935	1					
ANR	2604034	CallExpression	query . Next ( classad_key )	202:26:6117:6139	2603935	2	True				
ANR	2604035	Callee	query . Next		2603935	0					
ANR	2604036	MemberAccess	query . Next		2603935	0					
ANR	2604037	Identifier	query		2603935	0					
ANR	2604038	Identifier	Next		2603935	1					
ANR	2604039	ArgumentList	classad_key		2603935	1					
ANR	2604040	Argument	classad_key		2603935	0					
ANR	2604041	Identifier	classad_key		2603935	0					
ANR	2604042	CompoundStatement		19:51:514:514	2603935	3					
ANR	2604043	ExpressionStatement	collection -> RemoveClassAd ( classad_key )	203:3:6147:6185	2603935	0	True				
ANR	2604044	CallExpression	collection -> RemoveClassAd ( classad_key )		2603935	0					
ANR	2604045	Callee	collection -> RemoveClassAd		2603935	0					
ANR	2604046	PtrMemberAccess	collection -> RemoveClassAd		2603935	0					
ANR	2604047	Identifier	collection		2603935	0					
ANR	2604048	Identifier	RemoveClassAd		2603935	1					
ANR	2604049	ArgumentList	classad_key		2603935	1					
ANR	2604050	Argument	classad_key		2603935	0					
ANR	2604051	Identifier	classad_key		2603935	0					
ANR	2604052	BreakStatement	break ;	204:3:6190:6195	2603935	1	True				
ANR	2604053	ExpressionStatement	collections . erase ( ci )	206:2:6203:6224	2603935	7	True				
ANR	2604054	CallExpression	collections . erase ( ci )		2603935	0					
ANR	2604055	Callee	collections . erase		2603935	0					
ANR	2604056	MemberAccess	collections . erase		2603935	0					
ANR	2604057	Identifier	collections		2603935	0					
ANR	2604058	Identifier	erase		2603935	1					
ANR	2604059	ArgumentList	ci		2603935	1					
ANR	2604060	Argument	ci		2603935	0					
ANR	2604061	Identifier	ci		2603935	0					
ANR	2604062	Statement	delete	207:2:6228:6233	2603935	8	True				
ANR	2604063	ExpressionStatement	collection	207:9:6235:6245	2603935	9	True				
ANR	2604064	Identifier	collection		2603935	0					
ANR	2604065	IdentifierDeclStatement	ClassAdMapIterator i ;	210:1:6252:6272	2603935	2	True				
ANR	2604066	IdentifierDecl	i		2603935	0					
ANR	2604067	IdentifierDeclType	ClassAdMapIterator		2603935	0					
ANR	2604068	Identifier	i		2603935	1					
ANR	2604069	ForStatement	for ( i = classads . begin ( ) ; i != classads . end ( ) ; i ++ )		2603935	3					
ANR	2604070	ForInit	i = classads . begin ( ) ;	211:6:6280:6300	2603935	0	True				
ANR	2604071	AssignmentExpression	i = classads . begin ( )		2603935	0		=			
ANR	2604072	Identifier	i		2603935	0					
ANR	2604073	CallExpression	classads . begin ( )		2603935	1					
ANR	2604074	Callee	classads . begin		2603935	0					
ANR	2604075	MemberAccess	classads . begin		2603935	0					
ANR	2604076	Identifier	classads		2603935	0					
ANR	2604077	Identifier	begin		2603935	1					
ANR	2604078	ArgumentList			2603935	1					
ANR	2604079	Condition	i != classads . end ( )	211:28:6302:6320	2603935	1	True				
ANR	2604080	EqualityExpression	i != classads . end ( )		2603935	0		!=			
ANR	2604081	Identifier	i		2603935	0					
ANR	2604082	CallExpression	classads . end ( )		2603935	1					
ANR	2604083	Callee	classads . end		2603935	0					
ANR	2604084	MemberAccess	classads . end		2603935	0					
ANR	2604085	Identifier	classads		2603935	0					
ANR	2604086	Identifier	end		2603935	1					
ANR	2604087	ArgumentList			2603935	1					
ANR	2604088	PostIncDecOperationExpression	i ++	211:49:6323:6325	2603935	2	True				
ANR	2604089	Identifier	i		2603935	0					
ANR	2604090	IncDec	++		2603935	1					
ANR	2604091	CompoundStatement		29:2:704:720	2603935	3					
ANR	2604092	IdentifierDeclStatement	ClassAd * classad ;	212:2:6332:6348	2603935	0	True				
ANR	2604093	IdentifierDecl	* classad		2603935	0					
ANR	2604094	IdentifierDeclType	ClassAd *		2603935	0					
ANR	2604095	Identifier	classad		2603935	1					
ANR	2604096	ExpressionStatement	classad = i -> second	215:2:6356:6375	2603935	1	True				
ANR	2604097	AssignmentExpression	classad = i -> second		2603935	0		=			
ANR	2604098	Identifier	classad		2603935	0					
ANR	2604099	PtrMemberAccess	i -> second		2603935	1					
ANR	2604100	Identifier	i		2603935	0					
ANR	2604101	Identifier	second		2603935	1					
ANR	2604102	ExpressionStatement	classads . erase ( i )	216:2:6379:6396	2603935	2	True				
ANR	2604103	CallExpression	classads . erase ( i )		2603935	0					
ANR	2604104	Callee	classads . erase		2603935	0					
ANR	2604105	MemberAccess	classads . erase		2603935	0					
ANR	2604106	Identifier	classads		2603935	0					
ANR	2604107	Identifier	erase		2603935	1					
ANR	2604108	ArgumentList	i		2603935	1					
ANR	2604109	Argument	i		2603935	0					
ANR	2604110	Identifier	i		2603935	0					
ANR	2604111	IfStatement	if ( ! is_classad_in_collection ( i -> first ) )		2603935	3					
ANR	2604112	Condition	! is_classad_in_collection ( i -> first )	217:6:6404:6438	2603935	0	True				
ANR	2604113	UnaryOperationExpression	! is_classad_in_collection ( i -> first )		2603935	0					
ANR	2604114	UnaryOperator	!		2603935	0					
ANR	2604115	CallExpression	is_classad_in_collection ( i -> first )		2603935	1					
ANR	2604116	Callee	is_classad_in_collection		2603935	0					
ANR	2604117	Identifier	is_classad_in_collection		2603935	0					
ANR	2604118	ArgumentList	i -> first		2603935	1					
ANR	2604119	Argument	i -> first		2603935	0					
ANR	2604120	PtrMemberAccess	i -> first		2603935	0					
ANR	2604121	Identifier	i		2603935	0					
ANR	2604122	Identifier	first		2603935	1					
ANR	2604123	CompoundStatement		34:43:813:813	2603935	1					
ANR	2604124	Statement	delete	218:3:6446:6451	2603935	0	True				
ANR	2604125	ExpressionStatement	classad	218:10:6453:6460	2603935	1	True				
ANR	2604126	Identifier	classad		2603935	0					
ANR	2604127	ReturnStatement	return ;	221:1:6470:6476	2603935	4	True				
ANR	2604128	ReturnType	static void		2603935	1					
ANR	2604129	Identifier	cleanup		2603935	2					
ANR	2604130	ParameterList			2603935	3					
ANR	2604131	CFGEntryNode	ENTRY		2603935		True				
ANR	2604132	CFGExitNode	EXIT		2603935		True				
ANR	2604133	Symbol	i -> second		2603935						
ANR	2604134	Symbol	NULL		2603935						
ANR	2604135	Symbol	ci		2603935						
ANR	2604136	Symbol	query		2603935						
ANR	2604137	Symbol	query . Query		2603935						
ANR	2604138	Symbol	ci -> second		2603935						
ANR	2604139	Symbol	i		2603935						
ANR	2604140	Symbol	collection		2603935						
ANR	2604141	Symbol	* ci		2603935						
ANR	2604142	Symbol	is_classad_in_collection		2603935						
ANR	2604143	Symbol	query . IsAfterLast		2603935						
ANR	2604144	Symbol	* i		2603935						
ANR	2604145	Symbol	collections		2603935						
ANR	2604146	Symbol	i -> first		2603935						
ANR	2604147	Symbol	classads . end		2603935						
ANR	2604148	Symbol	classad_key		2603935						
ANR	2604149	Symbol	collections . end		2603935						
ANR	2604150	Symbol	classads . begin		2603935						
ANR	2604151	Symbol	classad		2603935						
ANR	2604152	Symbol	classads		2603935						
ANR	2604153	Symbol	collections . begin		2603935						
ANR	2604154	DeclStmt									
ANR	2604155	Decl							"map < string , bool >"	"map < string , bool >"	in_collection
ANR	2604156	Function	mark_classad_in_collection	228:0:6518:6610							
ANR	2604157	FunctionDef	mark_classad_in_collection (string name)		2604156	0					
ANR	2604158	CompoundStatement		229:0:6570:6610	2604156	0					
ANR	2604159	ExpressionStatement	in_collection [ name ] = true	230:1:6573:6599	2604156	0	True				
ANR	2604160	AssignmentExpression	in_collection [ name ] = true		2604156	0		=			
ANR	2604161	ArrayIndexing	in_collection [ name ]		2604156	0					
ANR	2604162	Identifier	in_collection		2604156	0					
ANR	2604163	Identifier	name		2604156	1					
ANR	2604164	Identifier	true		2604156	1					
ANR	2604165	ReturnStatement	return ;	231:1:6602:6608	2604156	1	True				
ANR	2604166	ReturnType	static void		2604156	1					
ANR	2604167	Identifier	mark_classad_in_collection		2604156	2					
ANR	2604168	ParameterList	string name		2604156	3					
ANR	2604169	Parameter	string name	228:39:6557:6567	2604156	0	True				
ANR	2604170	ParameterType	string		2604156	0					
ANR	2604171	Identifier	name		2604156	1					
ANR	2604172	CFGEntryNode	ENTRY		2604156		True				
ANR	2604173	CFGExitNode	EXIT		2604156		True				
ANR	2604174	Symbol	* name		2604156						
ANR	2604175	Symbol	name		2604156						
ANR	2604176	Symbol	true		2604156						
ANR	2604177	Symbol	* in_collection		2604156						
ANR	2604178	Symbol	in_collection		2604156						
ANR	2604179	Function	unmark_classad_in_collection	234:0:6613:6700							
ANR	2604180	FunctionDef	unmark_classad_in_collection (string name)		2604179	0					
ANR	2604181	CompoundStatement		235:0:6667:6700	2604179	0					
ANR	2604182	ExpressionStatement	in_collection [ name ] = false	236:1:6670:6697	2604179	0	True				
ANR	2604183	AssignmentExpression	in_collection [ name ] = false		2604179	0		=			
ANR	2604184	ArrayIndexing	in_collection [ name ]		2604179	0					
ANR	2604185	Identifier	in_collection		2604179	0					
ANR	2604186	Identifier	name		2604179	1					
ANR	2604187	Identifier	false		2604179	1					
ANR	2604188	ReturnType	static void		2604179	1					
ANR	2604189	Identifier	unmark_classad_in_collection		2604179	2					
ANR	2604190	ParameterList	string name		2604179	3					
ANR	2604191	Parameter	string name	234:41:6654:6664	2604179	0	True				
ANR	2604192	ParameterType	string		2604179	0					
ANR	2604193	Identifier	name		2604179	1					
ANR	2604194	CFGEntryNode	ENTRY		2604179		True				
ANR	2604195	CFGExitNode	EXIT		2604179		True				
ANR	2604196	Symbol	* name		2604179						
ANR	2604197	Symbol	name		2604179						
ANR	2604198	Symbol	false		2604179						
ANR	2604199	Symbol	* in_collection		2604179						
ANR	2604200	Symbol	in_collection		2604179						
ANR	2604201	Function	is_classad_in_collection	239:0:6703:6784							
ANR	2604202	FunctionDef	is_classad_in_collection (string name)		2604201	0					
ANR	2604203	CompoundStatement		240:0:6753:6784	2604201	0					
ANR	2604204	ReturnStatement	return in_collection [ name ] ;	241:1:6756:6782	2604201	0	True				
ANR	2604205	ArrayIndexing	in_collection [ name ]		2604201	0					
ANR	2604206	Identifier	in_collection		2604201	0					
ANR	2604207	Identifier	name		2604201	1					
ANR	2604208	ReturnType	static bool		2604201	1					
ANR	2604209	Identifier	is_classad_in_collection		2604201	2					
ANR	2604210	ParameterList	string name		2604201	3					
ANR	2604211	Parameter	string name	239:37:6740:6750	2604201	0	True				
ANR	2604212	ParameterType	string		2604201	0					
ANR	2604213	Identifier	name		2604201	1					
ANR	2604214	CFGEntryNode	ENTRY		2604201		True				
ANR	2604215	CFGExitNode	EXIT		2604201		True				
ANR	2604216	Symbol	* name		2604201						
ANR	2604217	Symbol	name		2604201						
ANR	2604218	Symbol	* in_collection		2604201						
ANR	2604219	Symbol	in_collection		2604201						
ANR	2604220	Function	process_file	252:0:7136:9362							
ANR	2604221	FunctionDef	"process_file (ifstream & input_file , const Parameters & parameters , ErrorCount * errors)"		2604220	0					
ANR	2604222	CompoundStatement		255:0:7237:9362	2604220	0					
ANR	2604223	IdentifierDeclStatement	int line_number ;	256:1:7240:7258	2604220	0	True				
ANR	2604224	IdentifierDecl	line_number		2604220	0					
ANR	2604225	IdentifierDeclType	int		2604220	0					
ANR	2604226	Identifier	line_number		2604220	1					
ANR	2604227	IdentifierDeclStatement	string line ;	257:1:7261:7272	2604220	1	True				
ANR	2604228	IdentifierDecl	line		2604220	0					
ANR	2604229	IdentifierDeclType	string		2604220	0					
ANR	2604230	Identifier	line		2604220	1					
ANR	2604231	ExpressionStatement	line_number = 0	259:1:7276:7291	2604220	2	True				
ANR	2604232	AssignmentExpression	line_number = 0		2604220	0		=			
ANR	2604233	Identifier	line_number		2604220	0					
ANR	2604234	PrimaryExpression	0		2604220	1					
ANR	2604235	WhileStatement	while ( 1 )		2604220	3					
ANR	2604236	Condition	1	260:8:7301:7301	2604220	0	True				
ANR	2604237	PrimaryExpression	1		2604220	0					
ANR	2604238	CompoundStatement		13:2:164:218	2604220	1					
ANR	2604239	IdentifierDeclStatement	int token_start ;	261:2:7308:7323	2604220	0	True				
ANR	2604240	IdentifierDecl	token_start		2604220	0					
ANR	2604241	IdentifierDeclType	int		2604220	0					
ANR	2604242	Identifier	token_start		2604220	1					
ANR	2604243	ExpressionStatement	"getline ( input_file , line , '\\n' )"	263:2:7328:7359	2604220	1	True				
ANR	2604244	CallExpression	"getline ( input_file , line , '\\n' )"		2604220	0					
ANR	2604245	Callee	getline		2604220	0					
ANR	2604246	Identifier	getline		2604220	0					
ANR	2604247	ArgumentList	input_file		2604220	1					
ANR	2604248	Argument	input_file		2604220	0					
ANR	2604249	Identifier	input_file		2604220	0					
ANR	2604250	Argument	line		2604220	1					
ANR	2604251	Identifier	line		2604220	0					
ANR	2604252	Argument	'\\n'		2604220	2					
ANR	2604253	PrimaryExpression	'\\n'		2604220	0					
ANR	2604254	ExpressionStatement	line_number ++	264:2:7363:7376	2604220	2	True				
ANR	2604255	PostIncDecOperationExpression	line_number ++		2604220	0					
ANR	2604256	Identifier	line_number		2604220	0					
ANR	2604257	IncDec	++		2604220	1					
ANR	2604258	ExpressionStatement	token_start = 0	266:2:7383:7398	2604220	3	True				
ANR	2604259	AssignmentExpression	token_start = 0		2604220	0		=			
ANR	2604260	Identifier	token_start		2604220	0					
ANR	2604261	PrimaryExpression	0		2604220	1					
ANR	2604262	IdentifierDeclStatement	"string first_token = extract_token ( & token_start , line ) ;"	267:2:7402:7456	2604220	4	True				
ANR	2604263	IdentifierDecl	"first_token = extract_token ( & token_start , line )"		2604220	0					
ANR	2604264	IdentifierDeclType	string		2604220	0					
ANR	2604265	Identifier	first_token		2604220	1					
ANR	2604266	AssignmentExpression	"first_token = extract_token ( & token_start , line )"		2604220	2		=			
ANR	2604267	Identifier	first_token		2604220	0					
ANR	2604268	CallExpression	"extract_token ( & token_start , line )"		2604220	1					
ANR	2604269	Callee	extract_token		2604220	0					
ANR	2604270	Identifier	extract_token		2604220	0					
ANR	2604271	ArgumentList	& token_start		2604220	1					
ANR	2604272	Argument	& token_start		2604220	0					
ANR	2604273	UnaryOperationExpression	& token_start		2604220	0					
ANR	2604274	UnaryOperator	&		2604220	0					
ANR	2604275	Identifier	token_start		2604220	1					
ANR	2604276	Argument	line		2604220	1					
ANR	2604277	Identifier	line		2604220	0					
ANR	2604278	IfStatement	if ( input_file . eof ( ) )		2604220	5					
ANR	2604279	Condition	input_file . eof ( )	269:6:7467:7482	2604220	0	True				
ANR	2604280	CallExpression	input_file . eof ( )		2604220	0					
ANR	2604281	Callee	input_file . eof		2604220	0					
ANR	2604282	MemberAccess	input_file . eof		2604220	0					
ANR	2604283	Identifier	input_file		2604220	0					
ANR	2604284	Identifier	eof		2604220	1					
ANR	2604285	ArgumentList			2604220	1					
ANR	2604286	CompoundStatement		15:24:247:247	2604220	1					
ANR	2604287	BreakStatement	break ;	270:3:7490:7495	2604220	0	True				
ANR	2604288	ElseStatement	else		2604220	0					
ANR	2604289	IfStatement	if ( first_token [ 0 ] == '#' )		2604220	0					
ANR	2604290	Condition	first_token [ 0 ] == '#'	271:13:7510:7530	2604220	0	True				
ANR	2604291	EqualityExpression	first_token [ 0 ] == '#'		2604220	0		==			
ANR	2604292	ArrayIndexing	first_token [ 0 ]		2604220	0					
ANR	2604293	Identifier	first_token		2604220	0					
ANR	2604294	PrimaryExpression	0		2604220	1					
ANR	2604295	PrimaryExpression	'#'		2604220	1					
ANR	2604296	CompoundStatement		17:36:295:295	2604220	1					
ANR	2604297	ContinueStatement	continue ;	273:3:7567:7575	2604220	0	True				
ANR	2604298	ElseStatement	else		2604220	0					
ANR	2604299	IfStatement	"if ( ! first_token . compare ( ""begin-classad"" ) )"		2604220	0					
ANR	2604300	Condition	"! first_token . compare ( ""begin-classad"" )"	274:13:7590:7626	2604220	0	True				
ANR	2604301	UnaryOperationExpression	"! first_token . compare ( ""begin-classad"" )"		2604220	0					
ANR	2604302	UnaryOperator	!		2604220	0					
ANR	2604303	CallExpression	"first_token . compare ( ""begin-classad"" )"		2604220	1					
ANR	2604304	Callee	first_token . compare		2604220	0					
ANR	2604305	MemberAccess	first_token . compare		2604220	0					
ANR	2604306	Identifier	first_token		2604220	0					
ANR	2604307	Identifier	compare		2604220	1					
ANR	2604308	ArgumentList	"""begin-classad"""		2604220	1					
ANR	2604309	Argument	"""begin-classad"""		2604220	0					
ANR	2604310	PrimaryExpression	"""begin-classad"""		2604220	0					
ANR	2604311	CompoundStatement		20:52:391:391	2604220	1					
ANR	2604312	ExpressionStatement	"process_classad ( input_file , line , token_start , & line_number , parameters , errors )"	275:3:7634:7722	2604220	0	True				
ANR	2604313	CallExpression	"process_classad ( input_file , line , token_start , & line_number , parameters , errors )"		2604220	0					
ANR	2604314	Callee	process_classad		2604220	0					
ANR	2604315	Identifier	process_classad		2604220	0					
ANR	2604316	ArgumentList	input_file		2604220	1					
ANR	2604317	Argument	input_file		2604220	0					
ANR	2604318	Identifier	input_file		2604220	0					
ANR	2604319	Argument	line		2604220	1					
ANR	2604320	Identifier	line		2604220	0					
ANR	2604321	Argument	token_start		2604220	2					
ANR	2604322	Identifier	token_start		2604220	0					
ANR	2604323	Argument	& line_number		2604220	3					
ANR	2604324	UnaryOperationExpression	& line_number		2604220	0					
ANR	2604325	UnaryOperator	&		2604220	0					
ANR	2604326	Identifier	line_number		2604220	1					
ANR	2604327	Argument	parameters		2604220	4					
ANR	2604328	Identifier	parameters		2604220	0					
ANR	2604329	Argument	errors		2604220	5					
ANR	2604330	Identifier	errors		2604220	0					
ANR	2604331	ElseStatement	else		2604220	0					
ANR	2604332	IfStatement	"if ( ! first_token . compare ( ""print-classad"" ) )"		2604220	0					
ANR	2604333	Condition	"! first_token . compare ( ""print-classad"" )"	277:13:7737:7773	2604220	0	True				
ANR	2604334	UnaryOperationExpression	"! first_token . compare ( ""print-classad"" )"		2604220	0					
ANR	2604335	UnaryOperator	!		2604220	0					
ANR	2604336	CallExpression	"first_token . compare ( ""print-classad"" )"		2604220	1					
ANR	2604337	Callee	first_token . compare		2604220	0					
ANR	2604338	MemberAccess	first_token . compare		2604220	0					
ANR	2604339	Identifier	first_token		2604220	0					
ANR	2604340	Identifier	compare		2604220	1					
ANR	2604341	ArgumentList	"""print-classad"""		2604220	1					
ANR	2604342	Argument	"""print-classad"""		2604220	0					
ANR	2604343	PrimaryExpression	"""print-classad"""		2604220	0					
ANR	2604344	CompoundStatement		23:52:538:538	2604220	1					
ANR	2604345	ExpressionStatement	"process_print_classad ( line , token_start , line_number , parameters , errors )"	278:3:7781:7864	2604220	0	True				
ANR	2604346	CallExpression	"process_print_classad ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604347	Callee	process_print_classad		2604220	0					
ANR	2604348	Identifier	process_print_classad		2604220	0					
ANR	2604349	ArgumentList	line		2604220	1					
ANR	2604350	Argument	line		2604220	0					
ANR	2604351	Identifier	line		2604220	0					
ANR	2604352	Argument	token_start		2604220	1					
ANR	2604353	Identifier	token_start		2604220	0					
ANR	2604354	Argument	line_number		2604220	2					
ANR	2604355	Identifier	line_number		2604220	0					
ANR	2604356	Argument	parameters		2604220	3					
ANR	2604357	Identifier	parameters		2604220	0					
ANR	2604358	Argument	errors		2604220	4					
ANR	2604359	Identifier	errors		2604220	0					
ANR	2604360	ElseStatement	else		2604220	0					
ANR	2604361	IfStatement	"if ( ! first_token . compare ( ""print-classad-xml"" ) )"		2604220	0					
ANR	2604362	Condition	"! first_token . compare ( ""print-classad-xml"" )"	280:13:7879:7919	2604220	0	True				
ANR	2604363	UnaryOperationExpression	"! first_token . compare ( ""print-classad-xml"" )"		2604220	0					
ANR	2604364	UnaryOperator	!		2604220	0					
ANR	2604365	CallExpression	"first_token . compare ( ""print-classad-xml"" )"		2604220	1					
ANR	2604366	Callee	first_token . compare		2604220	0					
ANR	2604367	MemberAccess	first_token . compare		2604220	0					
ANR	2604368	Identifier	first_token		2604220	0					
ANR	2604369	Identifier	compare		2604220	1					
ANR	2604370	ArgumentList	"""print-classad-xml"""		2604220	1					
ANR	2604371	Argument	"""print-classad-xml"""		2604220	0					
ANR	2604372	PrimaryExpression	"""print-classad-xml"""		2604220	0					
ANR	2604373	CompoundStatement		26:56:684:684	2604220	1					
ANR	2604374	ExpressionStatement	"process_print_classad_xml ( line , token_start , line_number , parameters , errors )"	281:3:7927:8042	2604220	0	True				
ANR	2604375	CallExpression	"process_print_classad_xml ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604376	Callee	process_print_classad_xml		2604220	0					
ANR	2604377	Identifier	process_print_classad_xml		2604220	0					
ANR	2604378	ArgumentList	line		2604220	1					
ANR	2604379	Argument	line		2604220	0					
ANR	2604380	Identifier	line		2604220	0					
ANR	2604381	Argument	token_start		2604220	1					
ANR	2604382	Identifier	token_start		2604220	0					
ANR	2604383	Argument	line_number		2604220	2					
ANR	2604384	Identifier	line_number		2604220	0					
ANR	2604385	Argument	parameters		2604220	3					
ANR	2604386	Identifier	parameters		2604220	0					
ANR	2604387	Argument	errors		2604220	4					
ANR	2604388	Identifier	errors		2604220	0					
ANR	2604389	ElseStatement	else		2604220	0					
ANR	2604390	IfStatement	"if ( ! first_token . compare ( ""test-match"" ) )"		2604220	0					
ANR	2604391	Condition	"! first_token . compare ( ""test-match"" )"	283:13:8057:8090	2604220	0	True				
ANR	2604392	UnaryOperationExpression	"! first_token . compare ( ""test-match"" )"		2604220	0					
ANR	2604393	UnaryOperator	!		2604220	0					
ANR	2604394	CallExpression	"first_token . compare ( ""test-match"" )"		2604220	1					
ANR	2604395	Callee	first_token . compare		2604220	0					
ANR	2604396	MemberAccess	first_token . compare		2604220	0					
ANR	2604397	Identifier	first_token		2604220	0					
ANR	2604398	Identifier	compare		2604220	1					
ANR	2604399	ArgumentList	"""test-match"""		2604220	1					
ANR	2604400	Argument	"""test-match"""		2604220	0					
ANR	2604401	PrimaryExpression	"""test-match"""		2604220	0					
ANR	2604402	CompoundStatement		29:49:855:855	2604220	1					
ANR	2604403	ExpressionStatement	"process_test_match ( line , token_start , line_number , parameters , errors )"	284:3:8098:8178	2604220	0	True				
ANR	2604404	CallExpression	"process_test_match ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604405	Callee	process_test_match		2604220	0					
ANR	2604406	Identifier	process_test_match		2604220	0					
ANR	2604407	ArgumentList	line		2604220	1					
ANR	2604408	Argument	line		2604220	0					
ANR	2604409	Identifier	line		2604220	0					
ANR	2604410	Argument	token_start		2604220	1					
ANR	2604411	Identifier	token_start		2604220	0					
ANR	2604412	Argument	line_number		2604220	2					
ANR	2604413	Identifier	line_number		2604220	0					
ANR	2604414	Argument	parameters		2604220	3					
ANR	2604415	Identifier	parameters		2604220	0					
ANR	2604416	Argument	errors		2604220	4					
ANR	2604417	Identifier	errors		2604220	0					
ANR	2604418	ElseStatement	else		2604220	0					
ANR	2604419	IfStatement	"if ( ! first_token . compare ( ""test-lexer-one-token"" ) )"		2604220	0					
ANR	2604420	Condition	"! first_token . compare ( ""test-lexer-one-token"" )"	286:13:8193:8236	2604220	0	True				
ANR	2604421	UnaryOperationExpression	"! first_token . compare ( ""test-lexer-one-token"" )"		2604220	0					
ANR	2604422	UnaryOperator	!		2604220	0					
ANR	2604423	CallExpression	"first_token . compare ( ""test-lexer-one-token"" )"		2604220	1					
ANR	2604424	Callee	first_token . compare		2604220	0					
ANR	2604425	MemberAccess	first_token . compare		2604220	0					
ANR	2604426	Identifier	first_token		2604220	0					
ANR	2604427	Identifier	compare		2604220	1					
ANR	2604428	ArgumentList	"""test-lexer-one-token"""		2604220	1					
ANR	2604429	Argument	"""test-lexer-one-token"""		2604220	0					
ANR	2604430	PrimaryExpression	"""test-lexer-one-token"""		2604220	0					
ANR	2604431	CompoundStatement		32:59:1001:1001	2604220	1					
ANR	2604432	ExpressionStatement	"process_test_lexer_one_token ( line , token_start , line_number , parameters , errors )"	287:3:8244:8335	2604220	0	True				
ANR	2604433	CallExpression	"process_test_lexer_one_token ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604434	Callee	process_test_lexer_one_token		2604220	0					
ANR	2604435	Identifier	process_test_lexer_one_token		2604220	0					
ANR	2604436	ArgumentList	line		2604220	1					
ANR	2604437	Argument	line		2604220	0					
ANR	2604438	Identifier	line		2604220	0					
ANR	2604439	Argument	token_start		2604220	1					
ANR	2604440	Identifier	token_start		2604220	0					
ANR	2604441	Argument	line_number		2604220	2					
ANR	2604442	Identifier	line_number		2604220	0					
ANR	2604443	Argument	parameters		2604220	3					
ANR	2604444	Identifier	parameters		2604220	0					
ANR	2604445	Argument	errors		2604220	4					
ANR	2604446	Identifier	errors		2604220	0					
ANR	2604447	ElseStatement	else		2604220	0					
ANR	2604448	IfStatement	"if ( ! first_token . compare ( ""evaluate"" ) )"		2604220	0					
ANR	2604449	Condition	"! first_token . compare ( ""evaluate"" )"	289:13:8350:8381	2604220	0	True				
ANR	2604450	UnaryOperationExpression	"! first_token . compare ( ""evaluate"" )"		2604220	0					
ANR	2604451	UnaryOperator	!		2604220	0					
ANR	2604452	CallExpression	"first_token . compare ( ""evaluate"" )"		2604220	1					
ANR	2604453	Callee	first_token . compare		2604220	0					
ANR	2604454	MemberAccess	first_token . compare		2604220	0					
ANR	2604455	Identifier	first_token		2604220	0					
ANR	2604456	Identifier	compare		2604220	1					
ANR	2604457	ArgumentList	"""evaluate"""		2604220	1					
ANR	2604458	Argument	"""evaluate"""		2604220	0					
ANR	2604459	PrimaryExpression	"""evaluate"""		2604220	0					
ANR	2604460	CompoundStatement		35:47:1146:1146	2604220	1					
ANR	2604461	ExpressionStatement	"process_evaluate ( line , token_start , line_number , parameters , errors )"	290:3:8389:8465	2604220	0	True				
ANR	2604462	CallExpression	"process_evaluate ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604463	Callee	process_evaluate		2604220	0					
ANR	2604464	Identifier	process_evaluate		2604220	0					
ANR	2604465	ArgumentList	line		2604220	1					
ANR	2604466	Argument	line		2604220	0					
ANR	2604467	Identifier	line		2604220	0					
ANR	2604468	Argument	token_start		2604220	1					
ANR	2604469	Identifier	token_start		2604220	0					
ANR	2604470	Argument	line_number		2604220	2					
ANR	2604471	Identifier	line_number		2604220	0					
ANR	2604472	Argument	parameters		2604220	3					
ANR	2604473	Identifier	parameters		2604220	0					
ANR	2604474	Argument	errors		2604220	4					
ANR	2604475	Identifier	errors		2604220	0					
ANR	2604476	ElseStatement	else		2604220	0					
ANR	2604477	IfStatement	"if ( ! first_token . compare ( ""make-collection"" ) )"		2604220	0					
ANR	2604478	Condition	"! first_token . compare ( ""make-collection"" )"	292:13:8480:8518	2604220	0	True				
ANR	2604479	UnaryOperationExpression	"! first_token . compare ( ""make-collection"" )"		2604220	0					
ANR	2604480	UnaryOperator	!		2604220	0					
ANR	2604481	CallExpression	"first_token . compare ( ""make-collection"" )"		2604220	1					
ANR	2604482	Callee	first_token . compare		2604220	0					
ANR	2604483	MemberAccess	first_token . compare		2604220	0					
ANR	2604484	Identifier	first_token		2604220	0					
ANR	2604485	Identifier	compare		2604220	1					
ANR	2604486	ArgumentList	"""make-collection"""		2604220	1					
ANR	2604487	Argument	"""make-collection"""		2604220	0					
ANR	2604488	PrimaryExpression	"""make-collection"""		2604220	0					
ANR	2604489	CompoundStatement		38:54:1283:1283	2604220	1					
ANR	2604490	ExpressionStatement	"process_make_collection ( line , token_start , line_number , parameters , errors )"	293:3:8526:8609	2604220	0	True				
ANR	2604491	CallExpression	"process_make_collection ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604492	Callee	process_make_collection		2604220	0					
ANR	2604493	Identifier	process_make_collection		2604220	0					
ANR	2604494	ArgumentList	line		2604220	1					
ANR	2604495	Argument	line		2604220	0					
ANR	2604496	Identifier	line		2604220	0					
ANR	2604497	Argument	token_start		2604220	1					
ANR	2604498	Identifier	token_start		2604220	0					
ANR	2604499	Argument	line_number		2604220	2					
ANR	2604500	Identifier	line_number		2604220	0					
ANR	2604501	Argument	parameters		2604220	3					
ANR	2604502	Identifier	parameters		2604220	0					
ANR	2604503	Argument	errors		2604220	4					
ANR	2604504	Identifier	errors		2604220	0					
ANR	2604505	ElseStatement	else		2604220	0					
ANR	2604506	IfStatement	"if ( ! first_token . compare ( ""add-to-collection"" ) )"		2604220	0					
ANR	2604507	Condition	"! first_token . compare ( ""add-to-collection"" )"	295:13:8624:8664	2604220	0	True				
ANR	2604508	UnaryOperationExpression	"! first_token . compare ( ""add-to-collection"" )"		2604220	0					
ANR	2604509	UnaryOperator	!		2604220	0					
ANR	2604510	CallExpression	"first_token . compare ( ""add-to-collection"" )"		2604220	1					
ANR	2604511	Callee	first_token . compare		2604220	0					
ANR	2604512	MemberAccess	first_token . compare		2604220	0					
ANR	2604513	Identifier	first_token		2604220	0					
ANR	2604514	Identifier	compare		2604220	1					
ANR	2604515	ArgumentList	"""add-to-collection"""		2604220	1					
ANR	2604516	Argument	"""add-to-collection"""		2604220	0					
ANR	2604517	PrimaryExpression	"""add-to-collection"""		2604220	0					
ANR	2604518	CompoundStatement		41:56:1429:1429	2604220	1					
ANR	2604519	ExpressionStatement	"process_add_to_collection ( line , token_start , line_number , parameters , errors )"	296:3:8672:8757	2604220	0	True				
ANR	2604520	CallExpression	"process_add_to_collection ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604521	Callee	process_add_to_collection		2604220	0					
ANR	2604522	Identifier	process_add_to_collection		2604220	0					
ANR	2604523	ArgumentList	line		2604220	1					
ANR	2604524	Argument	line		2604220	0					
ANR	2604525	Identifier	line		2604220	0					
ANR	2604526	Argument	token_start		2604220	1					
ANR	2604527	Identifier	token_start		2604220	0					
ANR	2604528	Argument	line_number		2604220	2					
ANR	2604529	Identifier	line_number		2604220	0					
ANR	2604530	Argument	parameters		2604220	3					
ANR	2604531	Identifier	parameters		2604220	0					
ANR	2604532	Argument	errors		2604220	4					
ANR	2604533	Identifier	errors		2604220	0					
ANR	2604534	ElseStatement	else		2604220	0					
ANR	2604535	IfStatement	"if ( ! first_token . compare ( ""truncate-log"" ) )"		2604220	0					
ANR	2604536	Condition	"! first_token . compare ( ""truncate-log"" )"	298:13:8772:8807	2604220	0	True				
ANR	2604537	UnaryOperationExpression	"! first_token . compare ( ""truncate-log"" )"		2604220	0					
ANR	2604538	UnaryOperator	!		2604220	0					
ANR	2604539	CallExpression	"first_token . compare ( ""truncate-log"" )"		2604220	1					
ANR	2604540	Callee	first_token . compare		2604220	0					
ANR	2604541	MemberAccess	first_token . compare		2604220	0					
ANR	2604542	Identifier	first_token		2604220	0					
ANR	2604543	Identifier	compare		2604220	1					
ANR	2604544	ArgumentList	"""truncate-log"""		2604220	1					
ANR	2604545	Argument	"""truncate-log"""		2604220	0					
ANR	2604546	PrimaryExpression	"""truncate-log"""		2604220	0					
ANR	2604547	CompoundStatement		44:51:1572:1572	2604220	1					
ANR	2604548	ExpressionStatement	"process_truncate_log ( line , token_start , line_number , parameters , errors )"	299:3:8815:8896	2604220	0	True				
ANR	2604549	CallExpression	"process_truncate_log ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604550	Callee	process_truncate_log		2604220	0					
ANR	2604551	Identifier	process_truncate_log		2604220	0					
ANR	2604552	ArgumentList	line		2604220	1					
ANR	2604553	Argument	line		2604220	0					
ANR	2604554	Identifier	line		2604220	0					
ANR	2604555	Argument	token_start		2604220	1					
ANR	2604556	Identifier	token_start		2604220	0					
ANR	2604557	Argument	line_number		2604220	2					
ANR	2604558	Identifier	line_number		2604220	0					
ANR	2604559	Argument	parameters		2604220	3					
ANR	2604560	Identifier	parameters		2604220	0					
ANR	2604561	Argument	errors		2604220	4					
ANR	2604562	Identifier	errors		2604220	0					
ANR	2604563	ElseStatement	else		2604220	0					
ANR	2604564	IfStatement	"if ( ! first_token . compare ( ""create-subview"" ) )"		2604220	0					
ANR	2604565	Condition	"! first_token . compare ( ""create-subview"" )"	301:13:8911:8948	2604220	0	True				
ANR	2604566	UnaryOperationExpression	"! first_token . compare ( ""create-subview"" )"		2604220	0					
ANR	2604567	UnaryOperator	!		2604220	0					
ANR	2604568	CallExpression	"first_token . compare ( ""create-subview"" )"		2604220	1					
ANR	2604569	Callee	first_token . compare		2604220	0					
ANR	2604570	MemberAccess	first_token . compare		2604220	0					
ANR	2604571	Identifier	first_token		2604220	0					
ANR	2604572	Identifier	compare		2604220	1					
ANR	2604573	ArgumentList	"""create-subview"""		2604220	1					
ANR	2604574	Argument	"""create-subview"""		2604220	0					
ANR	2604575	PrimaryExpression	"""create-subview"""		2604220	0					
ANR	2604576	CompoundStatement		47:53:1713:1713	2604220	1					
ANR	2604577	ExpressionStatement	"process_create_subview ( line , token_start , line_number , parameters , errors )"	302:3:8956:9038	2604220	0	True				
ANR	2604578	CallExpression	"process_create_subview ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604579	Callee	process_create_subview		2604220	0					
ANR	2604580	Identifier	process_create_subview		2604220	0					
ANR	2604581	ArgumentList	line		2604220	1					
ANR	2604582	Argument	line		2604220	0					
ANR	2604583	Identifier	line		2604220	0					
ANR	2604584	Argument	token_start		2604220	1					
ANR	2604585	Identifier	token_start		2604220	0					
ANR	2604586	Argument	line_number		2604220	2					
ANR	2604587	Identifier	line_number		2604220	0					
ANR	2604588	Argument	parameters		2604220	3					
ANR	2604589	Identifier	parameters		2604220	0					
ANR	2604590	Argument	errors		2604220	4					
ANR	2604591	Identifier	errors		2604220	0					
ANR	2604592	ElseStatement	else		2604220	0					
ANR	2604593	IfStatement	"if ( ! first_token . compare ( ""check-in-view"" ) )"		2604220	0					
ANR	2604594	Condition	"! first_token . compare ( ""check-in-view"" )"	304:13:9053:9089	2604220	0	True				
ANR	2604595	UnaryOperationExpression	"! first_token . compare ( ""check-in-view"" )"		2604220	0					
ANR	2604596	UnaryOperator	!		2604220	0					
ANR	2604597	CallExpression	"first_token . compare ( ""check-in-view"" )"		2604220	1					
ANR	2604598	Callee	first_token . compare		2604220	0					
ANR	2604599	MemberAccess	first_token . compare		2604220	0					
ANR	2604600	Identifier	first_token		2604220	0					
ANR	2604601	Identifier	compare		2604220	1					
ANR	2604602	ArgumentList	"""check-in-view"""		2604220	1					
ANR	2604603	Argument	"""check-in-view"""		2604220	0					
ANR	2604604	PrimaryExpression	"""check-in-view"""		2604220	0					
ANR	2604605	CompoundStatement		50:52:1854:1854	2604220	1					
ANR	2604606	ExpressionStatement	"process_check_in_view ( line , token_start , line_number , parameters , errors )"	305:3:9097:9178	2604220	0	True				
ANR	2604607	CallExpression	"process_check_in_view ( line , token_start , line_number , parameters , errors )"		2604220	0					
ANR	2604608	Callee	process_check_in_view		2604220	0					
ANR	2604609	Identifier	process_check_in_view		2604220	0					
ANR	2604610	ArgumentList	line		2604220	1					
ANR	2604611	Argument	line		2604220	0					
ANR	2604612	Identifier	line		2604220	0					
ANR	2604613	Argument	token_start		2604220	1					
ANR	2604614	Identifier	token_start		2604220	0					
ANR	2604615	Argument	line_number		2604220	2					
ANR	2604616	Identifier	line_number		2604220	0					
ANR	2604617	Argument	parameters		2604220	3					
ANR	2604618	Identifier	parameters		2604220	0					
ANR	2604619	Argument	errors		2604220	4					
ANR	2604620	Identifier	errors		2604220	0					
ANR	2604621	ElseStatement	else		2604220	0					
ANR	2604622	IfStatement	if ( ! empty_line ( line ) )		2604220	0					
ANR	2604623	Condition	! empty_line ( line )	307:13:9193:9209	2604220	0	True				
ANR	2604624	UnaryOperationExpression	! empty_line ( line )		2604220	0					
ANR	2604625	UnaryOperator	!		2604220	0					
ANR	2604626	CallExpression	empty_line ( line )		2604220	1					
ANR	2604627	Callee	empty_line		2604220	0					
ANR	2604628	Identifier	empty_line		2604220	0					
ANR	2604629	ArgumentList	line		2604220	1					
ANR	2604630	Argument	line		2604220	0					
ANR	2604631	Identifier	line		2604220	0					
ANR	2604632	CompoundStatement		53:31:1973:1973	2604220	1					
ANR	2604633	ExpressionStatement	"cout << ""Error: Unknown input ("" << first_token << "") on line "" << line_number << ""."" << endl"	308:3:9216:9314	2604220	0	True				
ANR	2604634	ShiftExpression	"cout << ""Error: Unknown input ("" << first_token << "") on line "" << line_number << ""."" << endl"		2604220	0		<<			
ANR	2604635	Identifier	cout		2604220	0					
ANR	2604636	ShiftExpression	"""Error: Unknown input ("" << first_token << "") on line "" << line_number << ""."" << endl"		2604220	1		<<			
ANR	2604637	PrimaryExpression	"""Error: Unknown input ("""		2604220	0					
ANR	2604638	ShiftExpression	"first_token << "") on line "" << line_number << ""."" << endl"		2604220	1		<<			
ANR	2604639	Identifier	first_token		2604220	0					
ANR	2604640	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2604220	1		<<			
ANR	2604641	PrimaryExpression	""") on line """		2604220	0					
ANR	2604642	ShiftExpression	"line_number << ""."" << endl"		2604220	1		<<			
ANR	2604643	Identifier	line_number		2604220	0					
ANR	2604644	ShiftExpression	"""."" << endl"		2604220	1		<<			
ANR	2604645	PrimaryExpression	"""."""		2604220	0					
ANR	2604646	Identifier	endl		2604220	1					
ANR	2604647	ExpressionStatement	errors -> IncrementErrors ( )	310:3:9319:9344	2604220	1	True				
ANR	2604648	CallExpression	errors -> IncrementErrors ( )		2604220	0					
ANR	2604649	Callee	errors -> IncrementErrors		2604220	0					
ANR	2604650	PtrMemberAccess	errors -> IncrementErrors		2604220	0					
ANR	2604651	Identifier	errors		2604220	0					
ANR	2604652	Identifier	IncrementErrors		2604220	1					
ANR	2604653	ArgumentList			2604220	1					
ANR	2604654	ReturnStatement	return ;	313:1:9354:9360	2604220	4	True				
ANR	2604655	ReturnType	static void		2604220	1					
ANR	2604656	Identifier	process_file		2604220	2					
ANR	2604657	ParameterList	"ifstream & input_file , const Parameters & parameters , ErrorCount * errors"		2604220	3					
ANR	2604658	Parameter	ifstream & input_file	253:13:7161:7180	2604220	0	True				
ANR	2604659	ParameterType	ifstream &		2604220	0					
ANR	2604660	Identifier	input_file		2604220	1					
ANR	2604661	Parameter	const Parameters & parameters	253:35:7183:7210	2604220	1	True				
ANR	2604662	ParameterType	const Parameters &		2604220	0					
ANR	2604663	Identifier	parameters		2604220	1					
ANR	2604664	Parameter	ErrorCount * errors	254:4:7217:7234	2604220	2	True				
ANR	2604665	ParameterType	ErrorCount *		2604220	0					
ANR	2604666	Identifier	errors		2604220	1					
ANR	2604667	CFGEntryNode	ENTRY		2604220		True				
ANR	2604668	CFGExitNode	EXIT		2604220		True				
ANR	2604669	Symbol	token_start		2604220						
ANR	2604670	Symbol	& token_start		2604220						
ANR	2604671	Symbol	input_file . eof		2604220						
ANR	2604672	Symbol	line		2604220						
ANR	2604673	Symbol	* first_token		2604220						
ANR	2604674	Symbol	first_token . compare		2604220						
ANR	2604675	Symbol	extract_token		2604220						
ANR	2604676	Symbol	first_token		2604220						
ANR	2604677	Symbol	input_file		2604220						
ANR	2604678	Symbol	& line_number		2604220						
ANR	2604679	Symbol	line_number		2604220						
ANR	2604680	Symbol	parameters		2604220						
ANR	2604681	Symbol	empty_line		2604220						
ANR	2604682	Symbol	errors		2604220						
ANR	2604683	Function	process_classad	325:0:9822:11550							
ANR	2604684	FunctionDef	"process_classad (ifstream & input_file , const string & line , int token_start , int * line_number , const Parameters & parameters , ErrorCount * errors)"		2604683	0					
ANR	2604685	CompoundStatement		329:0:9999:11550	2604683	0					
ANR	2604686	IdentifierDeclStatement	int starting_line_number ;	330:1:10002:10029	2604683	0	True				
ANR	2604687	IdentifierDecl	starting_line_number		2604683	0					
ANR	2604688	IdentifierDeclType	int		2604683	0					
ANR	2604689	Identifier	starting_line_number		2604683	1					
ANR	2604690	IdentifierDeclStatement	"string name , extra , classad_line , classad_string ;"	331:1:10032:10080	2604683	1	True				
ANR	2604691	IdentifierDecl	name		2604683	0					
ANR	2604692	IdentifierDeclType	string		2604683	0					
ANR	2604693	Identifier	name		2604683	1					
ANR	2604694	IdentifierDecl	extra		2604683	1					
ANR	2604695	IdentifierDeclType	string		2604683	0					
ANR	2604696	Identifier	extra		2604683	1					
ANR	2604697	IdentifierDecl	classad_line		2604683	2					
ANR	2604698	IdentifierDeclType	string		2604683	0					
ANR	2604699	Identifier	classad_line		2604683	1					
ANR	2604700	IdentifierDecl	classad_string		2604683	3					
ANR	2604701	IdentifierDeclType	string		2604683	0					
ANR	2604702	Identifier	classad_string		2604683	1					
ANR	2604703	ExpressionStatement	starting_line_number = * line_number	333:1:10084:10119	2604683	2	True				
ANR	2604704	AssignmentExpression	starting_line_number = * line_number		2604683	0		=			
ANR	2604705	Identifier	starting_line_number		2604683	0					
ANR	2604706	UnaryOperationExpression	* line_number		2604683	1					
ANR	2604707	UnaryOperator	*		2604683	0					
ANR	2604708	Identifier	line_number		2604683	1					
ANR	2604709	ExpressionStatement	"name = extract_token ( & token_start , line )"	335:1:10123:10163	2604683	3	True				
ANR	2604710	AssignmentExpression	"name = extract_token ( & token_start , line )"		2604683	0		=			
ANR	2604711	Identifier	name		2604683	0					
ANR	2604712	CallExpression	"extract_token ( & token_start , line )"		2604683	1					
ANR	2604713	Callee	extract_token		2604683	0					
ANR	2604714	Identifier	extract_token		2604683	0					
ANR	2604715	ArgumentList	& token_start		2604683	1					
ANR	2604716	Argument	& token_start		2604683	0					
ANR	2604717	UnaryOperationExpression	& token_start		2604683	0					
ANR	2604718	UnaryOperator	&		2604683	0					
ANR	2604719	Identifier	token_start		2604683	1					
ANR	2604720	Argument	line		2604683	1					
ANR	2604721	Identifier	line		2604683	0					
ANR	2604722	ExpressionStatement	"extra = extract_token ( & token_start , line )"	336:1:10166:10207	2604683	4	True				
ANR	2604723	AssignmentExpression	"extra = extract_token ( & token_start , line )"		2604683	0		=			
ANR	2604724	Identifier	extra		2604683	0					
ANR	2604725	CallExpression	"extract_token ( & token_start , line )"		2604683	1					
ANR	2604726	Callee	extract_token		2604683	0					
ANR	2604727	Identifier	extract_token		2604683	0					
ANR	2604728	ArgumentList	& token_start		2604683	1					
ANR	2604729	Argument	& token_start		2604683	0					
ANR	2604730	UnaryOperationExpression	& token_start		2604683	0					
ANR	2604731	UnaryOperator	&		2604683	0					
ANR	2604732	Identifier	token_start		2604683	1					
ANR	2604733	Argument	line		2604683	1					
ANR	2604734	Identifier	line		2604683	0					
ANR	2604735	IfStatement	"if ( extra . compare ( """" ) )"		2604683	5					
ANR	2604736	Condition	"extra . compare ( """" )"	337:5:10214:10230	2604683	0	True				
ANR	2604737	CallExpression	"extra . compare ( """" )"		2604683	0					
ANR	2604738	Callee	extra . compare		2604683	0					
ANR	2604739	MemberAccess	extra . compare		2604683	0					
ANR	2604740	Identifier	extra		2604683	0					
ANR	2604741	Identifier	compare		2604683	1					
ANR	2604742	ArgumentList	""""""		2604683	1					
ANR	2604743	Argument	""""""		2604683	0					
ANR	2604744	PrimaryExpression	""""""		2604683	0					
ANR	2604745	CompoundStatement		9:24:233:233	2604683	1					
ANR	2604746	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << * line_number << ""."" << endl"	338:2:10237:10328	2604683	0	True				
ANR	2604747	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << * line_number << ""."" << endl"		2604683	0		<<			
ANR	2604748	Identifier	cout		2604683	0					
ANR	2604749	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << * line_number << ""."" << endl"		2604683	1		<<			
ANR	2604750	PrimaryExpression	"""Ignored extra input ("""		2604683	0					
ANR	2604751	ShiftExpression	"extra << "") on line "" << * line_number << ""."" << endl"		2604683	1		<<			
ANR	2604752	Identifier	extra		2604683	0					
ANR	2604753	ShiftExpression	""") on line "" << * line_number << ""."" << endl"		2604683	1		<<			
ANR	2604754	PrimaryExpression	""") on line """		2604683	0					
ANR	2604755	ShiftExpression	"* line_number << ""."" << endl"		2604683	1		<<			
ANR	2604756	UnaryOperationExpression	* line_number		2604683	0					
ANR	2604757	UnaryOperator	*		2604683	0					
ANR	2604758	Identifier	line_number		2604683	1					
ANR	2604759	ShiftExpression	"""."" << endl"		2604683	1		<<			
ANR	2604760	PrimaryExpression	"""."""		2604683	0					
ANR	2604761	Identifier	endl		2604683	1					
ANR	2604762	IdentifierDeclStatement	bool classad_done = false ;	342:1:10335:10360	2604683	6	True				
ANR	2604763	IdentifierDecl	classad_done = false		2604683	0					
ANR	2604764	IdentifierDeclType	bool		2604683	0					
ANR	2604765	Identifier	classad_done		2604683	1					
ANR	2604766	AssignmentExpression	classad_done = false		2604683	2		=			
ANR	2604767	Identifier	false		2604683	0					
ANR	2604768	Identifier	false		2604683	1					
ANR	2604769	WhileStatement	while ( ! classad_done )		2604683	7					
ANR	2604770	Condition	! classad_done	344:8:10371:10383	2604683	0	True				
ANR	2604771	UnaryOperationExpression	! classad_done		2604683	0					
ANR	2604772	UnaryOperator	!		2604683	0					
ANR	2604773	Identifier	classad_done		2604683	1					
ANR	2604774	CompoundStatement		16:23:386:386	2604683	1					
ANR	2604775	ExpressionStatement	"getline ( input_file , classad_line , '\\n' )"	345:2:10390:10429	2604683	0	True				
ANR	2604776	CallExpression	"getline ( input_file , classad_line , '\\n' )"		2604683	0					
ANR	2604777	Callee	getline		2604683	0					
ANR	2604778	Identifier	getline		2604683	0					
ANR	2604779	ArgumentList	input_file		2604683	1					
ANR	2604780	Argument	input_file		2604683	0					
ANR	2604781	Identifier	input_file		2604683	0					
ANR	2604782	Argument	classad_line		2604683	1					
ANR	2604783	Identifier	classad_line		2604683	0					
ANR	2604784	Argument	'\\n'		2604683	2					
ANR	2604785	PrimaryExpression	'\\n'		2604683	0					
ANR	2604786	IfStatement	if ( input_file . eof ( ) )		2604683	1					
ANR	2604787	Condition	input_file . eof ( )	346:6:10437:10452	2604683	0	True				
ANR	2604788	CallExpression	input_file . eof ( )		2604683	0					
ANR	2604789	Callee	input_file . eof		2604683	0					
ANR	2604790	MemberAccess	input_file . eof		2604683	0					
ANR	2604791	Identifier	input_file		2604683	0					
ANR	2604792	Identifier	eof		2604683	1					
ANR	2604793	ArgumentList			2604683	1					
ANR	2604794	CompoundStatement		18:24:455:455	2604683	1					
ANR	2604795	ExpressionStatement	"cout << ""Error: Unfinished classad on line "" << * line_number << endl"	347:3:10460:10534	2604683	0	True				
ANR	2604796	ShiftExpression	"cout << ""Error: Unfinished classad on line "" << * line_number << endl"		2604683	0		<<			
ANR	2604797	Identifier	cout		2604683	0					
ANR	2604798	ShiftExpression	"""Error: Unfinished classad on line "" << * line_number << endl"		2604683	1		<<			
ANR	2604799	PrimaryExpression	"""Error: Unfinished classad on line """		2604683	0					
ANR	2604800	ShiftExpression	* line_number << endl		2604683	1		<<			
ANR	2604801	UnaryOperationExpression	* line_number		2604683	0					
ANR	2604802	UnaryOperator	*		2604683	0					
ANR	2604803	Identifier	line_number		2604683	1					
ANR	2604804	Identifier	endl		2604683	1					
ANR	2604805	ExpressionStatement	classad_done = true	349:3:10539:10558	2604683	1	True				
ANR	2604806	AssignmentExpression	classad_done = true		2604683	0		=			
ANR	2604807	Identifier	classad_done		2604683	0					
ANR	2604808	Identifier	true		2604683	1					
ANR	2604809	ExpressionStatement	errors -> IncrementErrors ( )	350:3:10563:10588	2604683	2	True				
ANR	2604810	CallExpression	errors -> IncrementErrors ( )		2604683	0					
ANR	2604811	Callee	errors -> IncrementErrors		2604683	0					
ANR	2604812	PtrMemberAccess	errors -> IncrementErrors		2604683	0					
ANR	2604813	Identifier	errors		2604683	0					
ANR	2604814	Identifier	IncrementErrors		2604683	1					
ANR	2604815	ArgumentList			2604683	1					
ANR	2604816	ElseStatement	else		2604683	0					
ANR	2604817	CompoundStatement		27:3:647:703	2604683	0					
ANR	2604818	ExpressionStatement	( * line_number ) ++	353:3:10606:10622	2604683	0	True				
ANR	2604819	PostIncDecOperationExpression	( * line_number ) ++		2604683	0					
ANR	2604820	UnaryOperationExpression	* line_number		2604683	0					
ANR	2604821	UnaryOperator	*		2604683	0					
ANR	2604822	Identifier	line_number		2604683	1					
ANR	2604823	IncDec	++		2604683	1					
ANR	2604824	ExpressionStatement	token_start = 0	354:3:10627:10642	2604683	1	True				
ANR	2604825	AssignmentExpression	token_start = 0		2604683	0		=			
ANR	2604826	Identifier	token_start		2604683	0					
ANR	2604827	PrimaryExpression	0		2604683	1					
ANR	2604828	IdentifierDeclStatement	"string token = extract_token ( & token_start , classad_line ) ;"	355:3:10647:10703	2604683	2	True				
ANR	2604829	IdentifierDecl	"token = extract_token ( & token_start , classad_line )"		2604683	0					
ANR	2604830	IdentifierDeclType	string		2604683	0					
ANR	2604831	Identifier	token		2604683	1					
ANR	2604832	AssignmentExpression	"token = extract_token ( & token_start , classad_line )"		2604683	2		=			
ANR	2604833	Identifier	token		2604683	0					
ANR	2604834	CallExpression	"extract_token ( & token_start , classad_line )"		2604683	1					
ANR	2604835	Callee	extract_token		2604683	0					
ANR	2604836	Identifier	extract_token		2604683	0					
ANR	2604837	ArgumentList	& token_start		2604683	1					
ANR	2604838	Argument	& token_start		2604683	0					
ANR	2604839	UnaryOperationExpression	& token_start		2604683	0					
ANR	2604840	UnaryOperator	&		2604683	0					
ANR	2604841	Identifier	token_start		2604683	1					
ANR	2604842	Argument	classad_line		2604683	1					
ANR	2604843	Identifier	classad_line		2604683	0					
ANR	2604844	IfStatement	"if ( token . compare ( ""end-classad"" ) )"		2604683	3					
ANR	2604845	Condition	"token . compare ( ""end-classad"" )"	356:7:10712:10739	2604683	0	True				
ANR	2604846	CallExpression	"token . compare ( ""end-classad"" )"		2604683	0					
ANR	2604847	Callee	token . compare		2604683	0					
ANR	2604848	MemberAccess	token . compare		2604683	0					
ANR	2604849	Identifier	token		2604683	0					
ANR	2604850	Identifier	compare		2604683	1					
ANR	2604851	ArgumentList	"""end-classad"""		2604683	1					
ANR	2604852	Argument	"""end-classad"""		2604683	0					
ANR	2604853	PrimaryExpression	"""end-classad"""		2604683	0					
ANR	2604854	CompoundStatement		28:37:742:742	2604683	1					
ANR	2604855	ExpressionStatement	classad_string += classad_line	357:4:10748:10778	2604683	0	True				
ANR	2604856	AssignmentExpression	classad_string += classad_line		2604683	0		+=			
ANR	2604857	Identifier	classad_string		2604683	0					
ANR	2604858	Identifier	classad_line		2604683	1					
ANR	2604859	ExpressionStatement	classad_string += '\\n'	360:16:10897:10919	2604683	1	True				
ANR	2604860	AssignmentExpression	classad_string += '\\n'		2604683	0		+=			
ANR	2604861	Identifier	classad_string		2604683	0					
ANR	2604862	PrimaryExpression	'\\n'		2604683	1					
ANR	2604863	ElseStatement	else		2604683	0					
ANR	2604864	CompoundStatement		34:8:935:935	2604683	0					
ANR	2604865	ExpressionStatement	classad_done = true	363:4:10941:10960	2604683	0	True				
ANR	2604866	AssignmentExpression	classad_done = true		2604683	0		=			
ANR	2604867	Identifier	classad_done		2604683	0					
ANR	2604868	Identifier	true		2604683	1					
ANR	2604869	IdentifierDeclStatement	ClassAdParser parser ;	370:1:11108:11128	2604683	8	True				
ANR	2604870	IdentifierDecl	parser		2604683	0					
ANR	2604871	IdentifierDeclType	ClassAdParser		2604683	0					
ANR	2604872	Identifier	parser		2604683	1					
ANR	2604873	IdentifierDeclStatement	ClassAd * classad ;	371:1:11131:11155	2604683	9	True				
ANR	2604874	IdentifierDecl	* classad		2604683	0					
ANR	2604875	IdentifierDeclType	ClassAd *		2604683	0					
ANR	2604876	Identifier	classad		2604683	1					
ANR	2604877	ExpressionStatement	"classad = parser . ParseClassAd ( classad_string , true )"	373:1:11159:11210	2604683	10	True				
ANR	2604878	AssignmentExpression	"classad = parser . ParseClassAd ( classad_string , true )"		2604683	0		=			
ANR	2604879	Identifier	classad		2604683	0					
ANR	2604880	CallExpression	"parser . ParseClassAd ( classad_string , true )"		2604683	1					
ANR	2604881	Callee	parser . ParseClassAd		2604683	0					
ANR	2604882	MemberAccess	parser . ParseClassAd		2604683	0					
ANR	2604883	Identifier	parser		2604683	0					
ANR	2604884	Identifier	ParseClassAd		2604683	1					
ANR	2604885	ArgumentList	classad_string		2604683	1					
ANR	2604886	Argument	classad_string		2604683	0					
ANR	2604887	Identifier	classad_string		2604683	0					
ANR	2604888	Argument	true		2604683	1					
ANR	2604889	Identifier	true		2604683	0					
ANR	2604890	IfStatement	if ( classad == NULL )		2604683	11					
ANR	2604891	Condition	classad == NULL	375:5:11218:11232	2604683	0	True				
ANR	2604892	EqualityExpression	classad == NULL		2604683	0		==			
ANR	2604893	Identifier	classad		2604683	0					
ANR	2604894	Identifier	NULL		2604683	1					
ANR	2604895	CompoundStatement		47:22:1235:1235	2604683	1					
ANR	2604896	ExpressionStatement	"cout << ""Error: Bad classad, lines "" << starting_line_number << "" to "" << * line_number << endl"	376:2:11239:11338	2604683	0	True				
ANR	2604897	ShiftExpression	"cout << ""Error: Bad classad, lines "" << starting_line_number << "" to "" << * line_number << endl"		2604683	0		<<			
ANR	2604898	Identifier	cout		2604683	0					
ANR	2604899	ShiftExpression	"""Error: Bad classad, lines "" << starting_line_number << "" to "" << * line_number << endl"		2604683	1		<<			
ANR	2604900	PrimaryExpression	"""Error: Bad classad, lines """		2604683	0					
ANR	2604901	ShiftExpression	"starting_line_number << "" to "" << * line_number << endl"		2604683	1		<<			
ANR	2604902	Identifier	starting_line_number		2604683	0					
ANR	2604903	ShiftExpression	""" to "" << * line_number << endl"		2604683	1		<<			
ANR	2604904	PrimaryExpression	""" to """		2604683	0					
ANR	2604905	ShiftExpression	* line_number << endl		2604683	1		<<			
ANR	2604906	UnaryOperationExpression	* line_number		2604683	0					
ANR	2604907	UnaryOperator	*		2604683	0					
ANR	2604908	Identifier	line_number		2604683	1					
ANR	2604909	Identifier	endl		2604683	1					
ANR	2604910	ExpressionStatement	errors -> IncrementErrors ( )	378:2:11342:11367	2604683	1	True				
ANR	2604911	CallExpression	errors -> IncrementErrors ( )		2604683	0					
ANR	2604912	Callee	errors -> IncrementErrors		2604683	0					
ANR	2604913	PtrMemberAccess	errors -> IncrementErrors		2604683	0					
ANR	2604914	Identifier	errors		2604683	0					
ANR	2604915	Identifier	IncrementErrors		2604683	1					
ANR	2604916	ArgumentList			2604683	1					
ANR	2604917	ElseStatement	else		2604683	0					
ANR	2604918	CompoundStatement		52:6:1378:1378	2604683	0					
ANR	2604919	ExpressionStatement	"cout << ""OK: Read Classad \\"""" << name << ""\\"", Line "" << starting_line_number << endl"	381:2:11382:11471	2604683	0	True				
ANR	2604920	ShiftExpression	"cout << ""OK: Read Classad \\"""" << name << ""\\"", Line "" << starting_line_number << endl"		2604683	0		<<			
ANR	2604921	Identifier	cout		2604683	0					
ANR	2604922	ShiftExpression	"""OK: Read Classad \\"""" << name << ""\\"", Line "" << starting_line_number << endl"		2604683	1		<<			
ANR	2604923	PrimaryExpression	"""OK: Read Classad \\"""""		2604683	0					
ANR	2604924	ShiftExpression	"name << ""\\"", Line "" << starting_line_number << endl"		2604683	1		<<			
ANR	2604925	Identifier	name		2604683	0					
ANR	2604926	ShiftExpression	"""\\"", Line "" << starting_line_number << endl"		2604683	1		<<			
ANR	2604927	PrimaryExpression	"""\\"", Line """		2604683	0					
ANR	2604928	ShiftExpression	starting_line_number << endl		2604683	1		<<			
ANR	2604929	Identifier	starting_line_number		2604683	0					
ANR	2604930	Identifier	endl		2604683	1					
ANR	2604931	ExpressionStatement	classads [ name ] = classad	384:1:11477:11501	2604683	12	True				
ANR	2604932	AssignmentExpression	classads [ name ] = classad		2604683	0		=			
ANR	2604933	ArrayIndexing	classads [ name ]		2604683	0					
ANR	2604934	Identifier	classads		2604683	0					
ANR	2604935	Identifier	name		2604683	1					
ANR	2604936	Identifier	classad		2604683	1					
ANR	2604937	ExpressionStatement	unmark_classad_in_collection ( name )	385:1:11504:11538	2604683	13	True				
ANR	2604938	CallExpression	unmark_classad_in_collection ( name )		2604683	0					
ANR	2604939	Callee	unmark_classad_in_collection		2604683	0					
ANR	2604940	Identifier	unmark_classad_in_collection		2604683	0					
ANR	2604941	ArgumentList	name		2604683	1					
ANR	2604942	Argument	name		2604683	0					
ANR	2604943	Identifier	name		2604683	0					
ANR	2604944	ReturnStatement	return ;	387:1:11542:11548	2604683	14	True				
ANR	2604945	ReturnType	static void		2604683	1					
ANR	2604946	Identifier	process_classad		2604683	2					
ANR	2604947	ParameterList	"ifstream & input_file , const string & line , int token_start , int * line_number , const Parameters & parameters , ErrorCount * errors"		2604683	3					
ANR	2604948	Parameter	ifstream & input_file	325:28:9850:9869	2604683	0	True				
ANR	2604949	ParameterType	ifstream &		2604683	0					
ANR	2604950	Identifier	input_file		2604683	1					
ANR	2604951	Parameter	const string & line	325:50:9872:9889	2604683	1	True				
ANR	2604952	ParameterType	const string &		2604683	0					
ANR	2604953	Identifier	line		2604683	1					
ANR	2604954	Parameter	int token_start	326:7:9899:9913	2604683	2	True				
ANR	2604955	ParameterType	int		2604683	0					
ANR	2604956	Identifier	token_start		2604683	1					
ANR	2604957	Parameter	int * line_number	326:24:9916:9931	2604683	3	True				
ANR	2604958	ParameterType	int *		2604683	0					
ANR	2604959	Identifier	line_number		2604683	1					
ANR	2604960	Parameter	const Parameters & parameters	327:7:9942:9969	2604683	4	True				
ANR	2604961	ParameterType	const Parameters &		2604683	0					
ANR	2604962	Identifier	parameters		2604683	1					
ANR	2604963	Parameter	ErrorCount * errors	328:7:9979:9996	2604683	5	True				
ANR	2604964	ParameterType	ErrorCount *		2604683	0					
ANR	2604965	Identifier	errors		2604683	1					
ANR	2604966	CFGEntryNode	ENTRY		2604683		True				
ANR	2604967	CFGExitNode	EXIT		2604683		True				
ANR	2604968	Symbol	& token_start		2604683						
ANR	2604969	Symbol	input_file . eof		2604683						
ANR	2604970	Symbol	line		2604683						
ANR	2604971	Symbol	starting_line_number		2604683						
ANR	2604972	Symbol	classad_string		2604683						
ANR	2604973	Symbol	* classads		2604683						
ANR	2604974	Symbol	extra . compare		2604683						
ANR	2604975	Symbol	classad_done		2604683						
ANR	2604976	Symbol	line_number		2604683						
ANR	2604977	Symbol	extra		2604683						
ANR	2604978	Symbol	* name		2604683						
ANR	2604979	Symbol	token_start		2604683						
ANR	2604980	Symbol	NULL		2604683						
ANR	2604981	Symbol	false		2604683						
ANR	2604982	Symbol	* line_number		2604683						
ANR	2604983	Symbol	classad_line		2604683						
ANR	2604984	Symbol	parser . ParseClassAd		2604683						
ANR	2604985	Symbol	extract_token		2604683						
ANR	2604986	Symbol	token		2604683						
ANR	2604987	Symbol	token . compare		2604683						
ANR	2604988	Symbol	input_file		2604683						
ANR	2604989	Symbol	parser		2604683						
ANR	2604990	Symbol	name		2604683						
ANR	2604991	Symbol	true		2604683						
ANR	2604992	Symbol	classad		2604683						
ANR	2604993	Symbol	parameters		2604683						
ANR	2604994	Symbol	classads		2604683						
ANR	2604995	Symbol	errors		2604683						
ANR	2604996	Function	process_print_classad	398:0:11851:12885							
ANR	2604997	FunctionDef	"process_print_classad (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2604996	0					
ANR	2604998	CompoundStatement		402:0:12020:12885	2604996	0					
ANR	2604999	IdentifierDeclStatement	"string classad_name , extra ;"	403:1:12023:12049	2604996	0	True				
ANR	2605000	IdentifierDecl	classad_name		2604996	0					
ANR	2605001	IdentifierDeclType	string		2604996	0					
ANR	2605002	Identifier	classad_name		2604996	1					
ANR	2605003	IdentifierDecl	extra		2604996	1					
ANR	2605004	IdentifierDeclType	string		2604996	0					
ANR	2605005	Identifier	extra		2604996	1					
ANR	2605006	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	405:1:12053:12101	2604996	1	True				
ANR	2605007	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		2604996	0		=			
ANR	2605008	Identifier	classad_name		2604996	0					
ANR	2605009	CallExpression	"extract_token ( & token_start , line )"		2604996	1					
ANR	2605010	Callee	extract_token		2604996	0					
ANR	2605011	Identifier	extract_token		2604996	0					
ANR	2605012	ArgumentList	& token_start		2604996	1					
ANR	2605013	Argument	& token_start		2604996	0					
ANR	2605014	UnaryOperationExpression	& token_start		2604996	0					
ANR	2605015	UnaryOperator	&		2604996	0					
ANR	2605016	Identifier	token_start		2604996	1					
ANR	2605017	Argument	line		2604996	1					
ANR	2605018	Identifier	line		2604996	0					
ANR	2605019	ExpressionStatement	"extra = extract_token ( & token_start , line )"	406:1:12104:12145	2604996	2	True				
ANR	2605020	AssignmentExpression	"extra = extract_token ( & token_start , line )"		2604996	0		=			
ANR	2605021	Identifier	extra		2604996	0					
ANR	2605022	CallExpression	"extract_token ( & token_start , line )"		2604996	1					
ANR	2605023	Callee	extract_token		2604996	0					
ANR	2605024	Identifier	extract_token		2604996	0					
ANR	2605025	ArgumentList	& token_start		2604996	1					
ANR	2605026	Argument	& token_start		2604996	0					
ANR	2605027	UnaryOperationExpression	& token_start		2604996	0					
ANR	2605028	UnaryOperator	&		2604996	0					
ANR	2605029	Identifier	token_start		2604996	1					
ANR	2605030	Argument	line		2604996	1					
ANR	2605031	Identifier	line		2604996	0					
ANR	2605032	IfStatement	"if ( ! classad_name . compare ( """" ) )"		2604996	3					
ANR	2605033	Condition	"! classad_name . compare ( """" )"	407:5:12152:12176	2604996	0	True				
ANR	2605034	UnaryOperationExpression	"! classad_name . compare ( """" )"		2604996	0					
ANR	2605035	UnaryOperator	!		2604996	0					
ANR	2605036	CallExpression	"classad_name . compare ( """" )"		2604996	1					
ANR	2605037	Callee	classad_name . compare		2604996	0					
ANR	2605038	MemberAccess	classad_name . compare		2604996	0					
ANR	2605039	Identifier	classad_name		2604996	0					
ANR	2605040	Identifier	compare		2604996	1					
ANR	2605041	ArgumentList	""""""		2604996	1					
ANR	2605042	Argument	""""""		2604996	0					
ANR	2605043	PrimaryExpression	""""""		2604996	0					
ANR	2605044	CompoundStatement		6:32:158:158	2604996	1					
ANR	2605045	ExpressionStatement	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"	408:2:12183:12264	2604996	0	True				
ANR	2605046	ShiftExpression	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		2604996	0		<<			
ANR	2605047	Identifier	cout		2604996	0					
ANR	2605048	ShiftExpression	"""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		2604996	1		<<			
ANR	2605049	PrimaryExpression	"""Error: Missing ClassAd name on line """		2604996	0					
ANR	2605050	ShiftExpression	"line_number << ""."" << endl"		2604996	1		<<			
ANR	2605051	Identifier	line_number		2604996	0					
ANR	2605052	ShiftExpression	"""."" << endl"		2604996	1		<<			
ANR	2605053	PrimaryExpression	"""."""		2604996	0					
ANR	2605054	Identifier	endl		2604996	1					
ANR	2605055	ExpressionStatement	"cout << ""       Format: print-classad <classad>"" << endl"	410:2:12268:12324	2604996	1	True				
ANR	2605056	ShiftExpression	"cout << ""       Format: print-classad <classad>"" << endl"		2604996	0		<<			
ANR	2605057	Identifier	cout		2604996	0					
ANR	2605058	ShiftExpression	"""       Format: print-classad <classad>"" << endl"		2604996	1		<<			
ANR	2605059	PrimaryExpression	"""       Format: print-classad <classad>"""		2604996	0					
ANR	2605060	Identifier	endl		2604996	1					
ANR	2605061	ExpressionStatement	errors -> IncrementErrors ( )	411:2:12328:12353	2604996	2	True				
ANR	2605062	CallExpression	errors -> IncrementErrors ( )		2604996	0					
ANR	2605063	Callee	errors -> IncrementErrors		2604996	0					
ANR	2605064	PtrMemberAccess	errors -> IncrementErrors		2604996	0					
ANR	2605065	Identifier	errors		2604996	0					
ANR	2605066	Identifier	IncrementErrors		2604996	1					
ANR	2605067	ArgumentList			2604996	1					
ANR	2605068	ElseStatement	else		2604996	0					
ANR	2605069	IfStatement	"if ( extra . compare ( """" ) )"		2604996	0					
ANR	2605070	Condition	"extra . compare ( """" )"	413:10:12368:12384	2604996	0	True				
ANR	2605071	CallExpression	"extra . compare ( """" )"		2604996	0					
ANR	2605072	Callee	extra . compare		2604996	0					
ANR	2605073	MemberAccess	extra . compare		2604996	0					
ANR	2605074	Identifier	extra		2604996	0					
ANR	2605075	Identifier	compare		2604996	1					
ANR	2605076	ArgumentList	""""""		2604996	1					
ANR	2605077	Argument	""""""		2604996	0					
ANR	2605078	PrimaryExpression	""""""		2604996	0					
ANR	2605079	CompoundStatement		12:29:366:366	2604996	1					
ANR	2605080	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	414:2:12391:12481	2604996	0	True				
ANR	2605081	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2604996	0		<<			
ANR	2605082	Identifier	cout		2604996	0					
ANR	2605083	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2604996	1		<<			
ANR	2605084	PrimaryExpression	"""Ignored extra input ("""		2604996	0					
ANR	2605085	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		2604996	1		<<			
ANR	2605086	Identifier	extra		2604996	0					
ANR	2605087	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2604996	1		<<			
ANR	2605088	PrimaryExpression	""") on line """		2604996	0					
ANR	2605089	ShiftExpression	"line_number << ""."" << endl"		2604996	1		<<			
ANR	2605090	Identifier	line_number		2604996	0					
ANR	2605091	ShiftExpression	"""."" << endl"		2604996	1		<<			
ANR	2605092	PrimaryExpression	"""."""		2604996	0					
ANR	2605093	Identifier	endl		2604996	1					
ANR	2605094	IdentifierDeclStatement	ClassAd * classad ;	418:1:12489:12505	2604996	4	True				
ANR	2605095	IdentifierDecl	* classad		2604996	0					
ANR	2605096	IdentifierDeclType	ClassAd *		2604996	0					
ANR	2605097	Identifier	classad		2604996	1					
ANR	2605098	ExpressionStatement	classad = classads [ classad_name ]	420:1:12509:12541	2604996	5	True				
ANR	2605099	AssignmentExpression	classad = classads [ classad_name ]		2604996	0		=			
ANR	2605100	Identifier	classad		2604996	0					
ANR	2605101	ArrayIndexing	classads [ classad_name ]		2604996	1					
ANR	2605102	Identifier	classads		2604996	0					
ANR	2605103	Identifier	classad_name		2604996	1					
ANR	2605104	IfStatement	if ( classad == NULL )		2604996	6					
ANR	2605105	Condition	classad == NULL	422:5:12549:12563	2604996	0	True				
ANR	2605106	EqualityExpression	classad == NULL		2604996	0		==			
ANR	2605107	Identifier	classad		2604996	0					
ANR	2605108	Identifier	NULL		2604996	1					
ANR	2605109	CompoundStatement		21:22:545:545	2604996	1					
ANR	2605110	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"	423:2:12570:12673	2604996	0	True				
ANR	2605111	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2604996	0		<<			
ANR	2605112	Identifier	cout		2604996	0					
ANR	2605113	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2604996	1		<<			
ANR	2605114	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		2604996	0					
ANR	2605115	ShiftExpression	"classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2604996	1		<<			
ANR	2605116	Identifier	classad_name		2604996	0					
ANR	2605117	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		2604996	1		<<			
ANR	2605118	PrimaryExpression	"""\\"" on line """		2604996	0					
ANR	2605119	ShiftExpression	"line_number << ""."" << endl"		2604996	1		<<			
ANR	2605120	Identifier	line_number		2604996	0					
ANR	2605121	ShiftExpression	"""."" << endl"		2604996	1		<<			
ANR	2605122	PrimaryExpression	"""."""		2604996	0					
ANR	2605123	Identifier	endl		2604996	1					
ANR	2605124	ExpressionStatement	errors -> IncrementErrors ( )	425:2:12677:12702	2604996	1	True				
ANR	2605125	CallExpression	errors -> IncrementErrors ( )		2604996	0					
ANR	2605126	Callee	errors -> IncrementErrors		2604996	0					
ANR	2605127	PtrMemberAccess	errors -> IncrementErrors		2604996	0					
ANR	2605128	Identifier	errors		2604996	0					
ANR	2605129	Identifier	IncrementErrors		2604996	1					
ANR	2605130	ArgumentList			2604996	1					
ANR	2605131	ElseStatement	else		2604996	0					
ANR	2605132	CompoundStatement		27:2:719:736	2604996	0					
ANR	2605133	IdentifierDeclStatement	PrettyPrint printer ;	427:2:12716:12736	2604996	0	True				
ANR	2605134	IdentifierDecl	printer		2604996	0					
ANR	2605135	IdentifierDeclType	PrettyPrint		2604996	0					
ANR	2605136	Identifier	printer		2604996	1					
ANR	2605137	IdentifierDeclStatement	string text ;	428:2:12740:12757	2604996	1	True				
ANR	2605138	IdentifierDecl	text		2604996	0					
ANR	2605139	IdentifierDeclType	string		2604996	0					
ANR	2605140	Identifier	text		2604996	1					
ANR	2605141	ExpressionStatement	"printer . Unparse ( text , classad )"	430:2:12762:12792	2604996	2	True				
ANR	2605142	CallExpression	"printer . Unparse ( text , classad )"		2604996	0					
ANR	2605143	Callee	printer . Unparse		2604996	0					
ANR	2605144	MemberAccess	printer . Unparse		2604996	0					
ANR	2605145	Identifier	printer		2604996	0					
ANR	2605146	Identifier	Unparse		2604996	1					
ANR	2605147	ArgumentList	text		2604996	1					
ANR	2605148	Argument	text		2604996	0					
ANR	2605149	Identifier	text		2604996	0					
ANR	2605150	Argument	classad		2604996	1					
ANR	2605151	Identifier	classad		2604996	0					
ANR	2605152	ExpressionStatement	"cout << ""ClassAd "" << classad_name << "":\\n"""	431:2:12796:12839	2604996	3	True				
ANR	2605153	ShiftExpression	"cout << ""ClassAd "" << classad_name << "":\\n"""		2604996	0		<<			
ANR	2605154	Identifier	cout		2604996	0					
ANR	2605155	ShiftExpression	"""ClassAd "" << classad_name << "":\\n"""		2604996	1		<<			
ANR	2605156	PrimaryExpression	"""ClassAd """		2604996	0					
ANR	2605157	ShiftExpression	"classad_name << "":\\n"""		2604996	1		<<			
ANR	2605158	Identifier	classad_name		2604996	0					
ANR	2605159	PrimaryExpression	""":\\n"""		2604996	1					
ANR	2605160	ExpressionStatement	cout << text	432:2:12843:12855	2604996	4	True				
ANR	2605161	ShiftExpression	cout << text		2604996	0		<<			
ANR	2605162	Identifier	cout		2604996	0					
ANR	2605163	Identifier	text		2604996	1					
ANR	2605164	ExpressionStatement	cout << endl	433:2:12859:12871	2604996	5	True				
ANR	2605165	ShiftExpression	cout << endl		2604996	0		<<			
ANR	2605166	Identifier	cout		2604996	0					
ANR	2605167	Identifier	endl		2604996	1					
ANR	2605168	ReturnStatement	return ;	435:1:12877:12883	2604996	7	True				
ANR	2605169	ReturnType	static void		2604996	1					
ANR	2605170	Identifier	process_print_classad		2604996	2					
ANR	2605171	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2604996	3					
ANR	2605172	Parameter	const string & line	398:34:11885:11902	2604996	0	True				
ANR	2605173	ParameterType	const string &		2604996	0					
ANR	2605174	Identifier	line		2604996	1					
ANR	2605175	Parameter	int token_start	399:10:11915:11929	2604996	1	True				
ANR	2605176	ParameterType	int		2604996	0					
ANR	2605177	Identifier	token_start		2604996	1					
ANR	2605178	Parameter	int line_number	399:27:11932:11946	2604996	2	True				
ANR	2605179	ParameterType	int		2604996	0					
ANR	2605180	Identifier	line_number		2604996	1					
ANR	2605181	Parameter	const Parameters & parameters	400:10:11960:11987	2604996	3	True				
ANR	2605182	ParameterType	const Parameters &		2604996	0					
ANR	2605183	Identifier	parameters		2604996	1					
ANR	2605184	Parameter	ErrorCount * errors	401:10:12000:12017	2604996	4	True				
ANR	2605185	ParameterType	ErrorCount *		2604996	0					
ANR	2605186	Identifier	errors		2604996	1					
ANR	2605187	CFGEntryNode	ENTRY		2604996		True				
ANR	2605188	CFGExitNode	EXIT		2604996		True				
ANR	2605189	Symbol	token_start		2604996						
ANR	2605190	Symbol	NULL		2604996						
ANR	2605191	Symbol	& token_start		2604996						
ANR	2605192	Symbol	line		2604996						
ANR	2605193	Symbol	printer		2604996						
ANR	2605194	Symbol	* classads		2604996						
ANR	2605195	Symbol	extract_token		2604996						
ANR	2605196	Symbol	extra . compare		2604996						
ANR	2605197	Symbol	line_number		2604996						
ANR	2605198	Symbol	extra		2604996						
ANR	2605199	Symbol	classad_name		2604996						
ANR	2605200	Symbol	classad		2604996						
ANR	2605201	Symbol	text		2604996						
ANR	2605202	Symbol	classad_name . compare		2604996						
ANR	2605203	Symbol	parameters		2604996						
ANR	2605204	Symbol	classads		2604996						
ANR	2605205	Symbol	errors		2604996						
ANR	2605206	Symbol	* classad_name		2604996						
ANR	2605207	Function	process_print_classad_xml	446:0:13201:14267							
ANR	2605208	FunctionDef	"process_print_classad_xml (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2605207	0					
ANR	2605209	CompoundStatement		450:0:13388:14267	2605207	0					
ANR	2605210	IdentifierDeclStatement	"string classad_name , extra ;"	451:1:13391:13417	2605207	0	True				
ANR	2605211	IdentifierDecl	classad_name		2605207	0					
ANR	2605212	IdentifierDeclType	string		2605207	0					
ANR	2605213	Identifier	classad_name		2605207	1					
ANR	2605214	IdentifierDecl	extra		2605207	1					
ANR	2605215	IdentifierDeclType	string		2605207	0					
ANR	2605216	Identifier	extra		2605207	1					
ANR	2605217	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	453:1:13421:13469	2605207	1	True				
ANR	2605218	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		2605207	0		=			
ANR	2605219	Identifier	classad_name		2605207	0					
ANR	2605220	CallExpression	"extract_token ( & token_start , line )"		2605207	1					
ANR	2605221	Callee	extract_token		2605207	0					
ANR	2605222	Identifier	extract_token		2605207	0					
ANR	2605223	ArgumentList	& token_start		2605207	1					
ANR	2605224	Argument	& token_start		2605207	0					
ANR	2605225	UnaryOperationExpression	& token_start		2605207	0					
ANR	2605226	UnaryOperator	&		2605207	0					
ANR	2605227	Identifier	token_start		2605207	1					
ANR	2605228	Argument	line		2605207	1					
ANR	2605229	Identifier	line		2605207	0					
ANR	2605230	ExpressionStatement	"extra = extract_token ( & token_start , line )"	454:1:13472:13513	2605207	2	True				
ANR	2605231	AssignmentExpression	"extra = extract_token ( & token_start , line )"		2605207	0		=			
ANR	2605232	Identifier	extra		2605207	0					
ANR	2605233	CallExpression	"extract_token ( & token_start , line )"		2605207	1					
ANR	2605234	Callee	extract_token		2605207	0					
ANR	2605235	Identifier	extract_token		2605207	0					
ANR	2605236	ArgumentList	& token_start		2605207	1					
ANR	2605237	Argument	& token_start		2605207	0					
ANR	2605238	UnaryOperationExpression	& token_start		2605207	0					
ANR	2605239	UnaryOperator	&		2605207	0					
ANR	2605240	Identifier	token_start		2605207	1					
ANR	2605241	Argument	line		2605207	1					
ANR	2605242	Identifier	line		2605207	0					
ANR	2605243	IfStatement	"if ( ! classad_name . compare ( """" ) )"		2605207	3					
ANR	2605244	Condition	"! classad_name . compare ( """" )"	455:5:13520:13544	2605207	0	True				
ANR	2605245	UnaryOperationExpression	"! classad_name . compare ( """" )"		2605207	0					
ANR	2605246	UnaryOperator	!		2605207	0					
ANR	2605247	CallExpression	"classad_name . compare ( """" )"		2605207	1					
ANR	2605248	Callee	classad_name . compare		2605207	0					
ANR	2605249	MemberAccess	classad_name . compare		2605207	0					
ANR	2605250	Identifier	classad_name		2605207	0					
ANR	2605251	Identifier	compare		2605207	1					
ANR	2605252	ArgumentList	""""""		2605207	1					
ANR	2605253	Argument	""""""		2605207	0					
ANR	2605254	PrimaryExpression	""""""		2605207	0					
ANR	2605255	CompoundStatement		6:32:158:158	2605207	1					
ANR	2605256	ExpressionStatement	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"	456:2:13551:13632	2605207	0	True				
ANR	2605257	ShiftExpression	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		2605207	0		<<			
ANR	2605258	Identifier	cout		2605207	0					
ANR	2605259	ShiftExpression	"""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		2605207	1		<<			
ANR	2605260	PrimaryExpression	"""Error: Missing ClassAd name on line """		2605207	0					
ANR	2605261	ShiftExpression	"line_number << ""."" << endl"		2605207	1		<<			
ANR	2605262	Identifier	line_number		2605207	0					
ANR	2605263	ShiftExpression	"""."" << endl"		2605207	1		<<			
ANR	2605264	PrimaryExpression	"""."""		2605207	0					
ANR	2605265	Identifier	endl		2605207	1					
ANR	2605266	ExpressionStatement	"cout << ""       Format: print-classad <classad>"" << endl"	458:2:13636:13692	2605207	1	True				
ANR	2605267	ShiftExpression	"cout << ""       Format: print-classad <classad>"" << endl"		2605207	0		<<			
ANR	2605268	Identifier	cout		2605207	0					
ANR	2605269	ShiftExpression	"""       Format: print-classad <classad>"" << endl"		2605207	1		<<			
ANR	2605270	PrimaryExpression	"""       Format: print-classad <classad>"""		2605207	0					
ANR	2605271	Identifier	endl		2605207	1					
ANR	2605272	ExpressionStatement	errors -> IncrementErrors ( )	459:2:13696:13721	2605207	2	True				
ANR	2605273	CallExpression	errors -> IncrementErrors ( )		2605207	0					
ANR	2605274	Callee	errors -> IncrementErrors		2605207	0					
ANR	2605275	PtrMemberAccess	errors -> IncrementErrors		2605207	0					
ANR	2605276	Identifier	errors		2605207	0					
ANR	2605277	Identifier	IncrementErrors		2605207	1					
ANR	2605278	ArgumentList			2605207	1					
ANR	2605279	ElseStatement	else		2605207	0					
ANR	2605280	IfStatement	"if ( extra . compare ( """" ) )"		2605207	0					
ANR	2605281	Condition	"extra . compare ( """" )"	461:10:13736:13752	2605207	0	True				
ANR	2605282	CallExpression	"extra . compare ( """" )"		2605207	0					
ANR	2605283	Callee	extra . compare		2605207	0					
ANR	2605284	MemberAccess	extra . compare		2605207	0					
ANR	2605285	Identifier	extra		2605207	0					
ANR	2605286	Identifier	compare		2605207	1					
ANR	2605287	ArgumentList	""""""		2605207	1					
ANR	2605288	Argument	""""""		2605207	0					
ANR	2605289	PrimaryExpression	""""""		2605207	0					
ANR	2605290	CompoundStatement		12:29:366:366	2605207	1					
ANR	2605291	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	462:2:13759:13849	2605207	0	True				
ANR	2605292	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2605207	0		<<			
ANR	2605293	Identifier	cout		2605207	0					
ANR	2605294	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2605207	1		<<			
ANR	2605295	PrimaryExpression	"""Ignored extra input ("""		2605207	0					
ANR	2605296	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		2605207	1		<<			
ANR	2605297	Identifier	extra		2605207	0					
ANR	2605298	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2605207	1		<<			
ANR	2605299	PrimaryExpression	""") on line """		2605207	0					
ANR	2605300	ShiftExpression	"line_number << ""."" << endl"		2605207	1		<<			
ANR	2605301	Identifier	line_number		2605207	0					
ANR	2605302	ShiftExpression	"""."" << endl"		2605207	1		<<			
ANR	2605303	PrimaryExpression	"""."""		2605207	0					
ANR	2605304	Identifier	endl		2605207	1					
ANR	2605305	IdentifierDeclStatement	ClassAd * classad ;	466:1:13857:13873	2605207	4	True				
ANR	2605306	IdentifierDecl	* classad		2605207	0					
ANR	2605307	IdentifierDeclType	ClassAd *		2605207	0					
ANR	2605308	Identifier	classad		2605207	1					
ANR	2605309	ExpressionStatement	classad = classads [ classad_name ]	468:1:13877:13909	2605207	5	True				
ANR	2605310	AssignmentExpression	classad = classads [ classad_name ]		2605207	0		=			
ANR	2605311	Identifier	classad		2605207	0					
ANR	2605312	ArrayIndexing	classads [ classad_name ]		2605207	1					
ANR	2605313	Identifier	classads		2605207	0					
ANR	2605314	Identifier	classad_name		2605207	1					
ANR	2605315	IfStatement	if ( classad == NULL )		2605207	6					
ANR	2605316	Condition	classad == NULL	470:5:13917:13931	2605207	0	True				
ANR	2605317	EqualityExpression	classad == NULL		2605207	0		==			
ANR	2605318	Identifier	classad		2605207	0					
ANR	2605319	Identifier	NULL		2605207	1					
ANR	2605320	CompoundStatement		21:22:545:545	2605207	1					
ANR	2605321	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"	471:2:13938:14041	2605207	0	True				
ANR	2605322	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605207	0		<<			
ANR	2605323	Identifier	cout		2605207	0					
ANR	2605324	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605207	1		<<			
ANR	2605325	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		2605207	0					
ANR	2605326	ShiftExpression	"classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605207	1		<<			
ANR	2605327	Identifier	classad_name		2605207	0					
ANR	2605328	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		2605207	1		<<			
ANR	2605329	PrimaryExpression	"""\\"" on line """		2605207	0					
ANR	2605330	ShiftExpression	"line_number << ""."" << endl"		2605207	1		<<			
ANR	2605331	Identifier	line_number		2605207	0					
ANR	2605332	ShiftExpression	"""."" << endl"		2605207	1		<<			
ANR	2605333	PrimaryExpression	"""."""		2605207	0					
ANR	2605334	Identifier	endl		2605207	1					
ANR	2605335	ExpressionStatement	errors -> IncrementErrors ( )	473:2:14045:14070	2605207	1	True				
ANR	2605336	CallExpression	errors -> IncrementErrors ( )		2605207	0					
ANR	2605337	Callee	errors -> IncrementErrors		2605207	0					
ANR	2605338	PtrMemberAccess	errors -> IncrementErrors		2605207	0					
ANR	2605339	Identifier	errors		2605207	0					
ANR	2605340	Identifier	IncrementErrors		2605207	1					
ANR	2605341	ArgumentList			2605207	1					
ANR	2605342	ElseStatement	else		2605207	0					
ANR	2605343	CompoundStatement		27:2:726:750	2605207	0					
ANR	2605344	IdentifierDeclStatement	ClassAdXMLUnParser printer ;	475:2:14084:14111	2605207	0	True				
ANR	2605345	IdentifierDecl	printer		2605207	0					
ANR	2605346	IdentifierDeclType	ClassAdXMLUnParser		2605207	0					
ANR	2605347	Identifier	printer		2605207	1					
ANR	2605348	IdentifierDeclStatement	string text ;	476:2:14115:14139	2605207	1	True				
ANR	2605349	IdentifierDecl	text		2605207	0					
ANR	2605350	IdentifierDeclType	string		2605207	0					
ANR	2605351	Identifier	text		2605207	1					
ANR	2605352	ExpressionStatement	"printer . Unparse ( text , classad )"	478:2:14144:14174	2605207	2	True				
ANR	2605353	CallExpression	"printer . Unparse ( text , classad )"		2605207	0					
ANR	2605354	Callee	printer . Unparse		2605207	0					
ANR	2605355	MemberAccess	printer . Unparse		2605207	0					
ANR	2605356	Identifier	printer		2605207	0					
ANR	2605357	Identifier	Unparse		2605207	1					
ANR	2605358	ArgumentList	text		2605207	1					
ANR	2605359	Argument	text		2605207	0					
ANR	2605360	Identifier	text		2605207	0					
ANR	2605361	Argument	classad		2605207	1					
ANR	2605362	Identifier	classad		2605207	0					
ANR	2605363	ExpressionStatement	"cout << ""ClassAd "" << classad_name << "":\\n"""	479:2:14178:14221	2605207	3	True				
ANR	2605364	ShiftExpression	"cout << ""ClassAd "" << classad_name << "":\\n"""		2605207	0		<<			
ANR	2605365	Identifier	cout		2605207	0					
ANR	2605366	ShiftExpression	"""ClassAd "" << classad_name << "":\\n"""		2605207	1		<<			
ANR	2605367	PrimaryExpression	"""ClassAd """		2605207	0					
ANR	2605368	ShiftExpression	"classad_name << "":\\n"""		2605207	1		<<			
ANR	2605369	Identifier	classad_name		2605207	0					
ANR	2605370	PrimaryExpression	""":\\n"""		2605207	1					
ANR	2605371	ExpressionStatement	cout << text	480:2:14225:14237	2605207	4	True				
ANR	2605372	ShiftExpression	cout << text		2605207	0		<<			
ANR	2605373	Identifier	cout		2605207	0					
ANR	2605374	Identifier	text		2605207	1					
ANR	2605375	ExpressionStatement	cout << endl	481:2:14241:14253	2605207	5	True				
ANR	2605376	ShiftExpression	cout << endl		2605207	0		<<			
ANR	2605377	Identifier	cout		2605207	0					
ANR	2605378	Identifier	endl		2605207	1					
ANR	2605379	ReturnStatement	return ;	483:1:14259:14265	2605207	7	True				
ANR	2605380	ReturnType	static void		2605207	1					
ANR	2605381	Identifier	process_print_classad_xml		2605207	2					
ANR	2605382	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2605207	3					
ANR	2605383	Parameter	const string & line	446:38:13239:13256	2605207	0	True				
ANR	2605384	ParameterType	const string &		2605207	0					
ANR	2605385	Identifier	line		2605207	1					
ANR	2605386	Parameter	int token_start	447:16:13275:13289	2605207	1	True				
ANR	2605387	ParameterType	int		2605207	0					
ANR	2605388	Identifier	token_start		2605207	1					
ANR	2605389	Parameter	int line_number	447:33:13292:13306	2605207	2	True				
ANR	2605390	ParameterType	int		2605207	0					
ANR	2605391	Identifier	line_number		2605207	1					
ANR	2605392	Parameter	const Parameters & parameters	448:14:13324:13351	2605207	3	True				
ANR	2605393	ParameterType	const Parameters &		2605207	0					
ANR	2605394	Identifier	parameters		2605207	1					
ANR	2605395	Parameter	ErrorCount * errors	449:14:13368:13385	2605207	4	True				
ANR	2605396	ParameterType	ErrorCount *		2605207	0					
ANR	2605397	Identifier	errors		2605207	1					
ANR	2605398	CFGEntryNode	ENTRY		2605207		True				
ANR	2605399	CFGExitNode	EXIT		2605207		True				
ANR	2605400	Symbol	token_start		2605207						
ANR	2605401	Symbol	NULL		2605207						
ANR	2605402	Symbol	& token_start		2605207						
ANR	2605403	Symbol	line		2605207						
ANR	2605404	Symbol	printer		2605207						
ANR	2605405	Symbol	* classads		2605207						
ANR	2605406	Symbol	extract_token		2605207						
ANR	2605407	Symbol	extra . compare		2605207						
ANR	2605408	Symbol	line_number		2605207						
ANR	2605409	Symbol	extra		2605207						
ANR	2605410	Symbol	classad_name		2605207						
ANR	2605411	Symbol	classad		2605207						
ANR	2605412	Symbol	text		2605207						
ANR	2605413	Symbol	classad_name . compare		2605207						
ANR	2605414	Symbol	parameters		2605207						
ANR	2605415	Symbol	classads		2605207						
ANR	2605416	Symbol	errors		2605207						
ANR	2605417	Symbol	* classad_name		2605207						
ANR	2605418	Function	process_test_match	498:0:14864:17662							
ANR	2605419	FunctionDef	"process_test_match (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2605418	0					
ANR	2605420	CompoundStatement		502:0:15030:17662	2605418	0					
ANR	2605421	IdentifierDeclStatement	"string match_type , left_classad_name , right_classad_name ;"	503:1:15033:15089	2605418	0	True				
ANR	2605422	IdentifierDecl	match_type		2605418	0					
ANR	2605423	IdentifierDeclType	string		2605418	0					
ANR	2605424	Identifier	match_type		2605418	1					
ANR	2605425	IdentifierDecl	left_classad_name		2605418	1					
ANR	2605426	IdentifierDeclType	string		2605418	0					
ANR	2605427	Identifier	left_classad_name		2605418	1					
ANR	2605428	IdentifierDecl	right_classad_name		2605418	2					
ANR	2605429	IdentifierDeclType	string		2605418	0					
ANR	2605430	Identifier	right_classad_name		2605418	1					
ANR	2605431	IdentifierDeclStatement	"string expect_match , extra ;"	504:1:15092:15118	2605418	1	True				
ANR	2605432	IdentifierDecl	expect_match		2605418	0					
ANR	2605433	IdentifierDeclType	string		2605418	0					
ANR	2605434	Identifier	expect_match		2605418	1					
ANR	2605435	IdentifierDecl	extra		2605418	1					
ANR	2605436	IdentifierDeclType	string		2605418	0					
ANR	2605437	Identifier	extra		2605418	1					
ANR	2605438	ExpressionStatement	"match_type = extract_token ( & token_start , line )"	506:1:15122:15168	2605418	2	True				
ANR	2605439	AssignmentExpression	"match_type = extract_token ( & token_start , line )"		2605418	0		=			
ANR	2605440	Identifier	match_type		2605418	0					
ANR	2605441	CallExpression	"extract_token ( & token_start , line )"		2605418	1					
ANR	2605442	Callee	extract_token		2605418	0					
ANR	2605443	Identifier	extract_token		2605418	0					
ANR	2605444	ArgumentList	& token_start		2605418	1					
ANR	2605445	Argument	& token_start		2605418	0					
ANR	2605446	UnaryOperationExpression	& token_start		2605418	0					
ANR	2605447	UnaryOperator	&		2605418	0					
ANR	2605448	Identifier	token_start		2605418	1					
ANR	2605449	Argument	line		2605418	1					
ANR	2605450	Identifier	line		2605418	0					
ANR	2605451	ExpressionStatement	"left_classad_name = extract_token ( & token_start , line )"	507:1:15171:15224	2605418	3	True				
ANR	2605452	AssignmentExpression	"left_classad_name = extract_token ( & token_start , line )"		2605418	0		=			
ANR	2605453	Identifier	left_classad_name		2605418	0					
ANR	2605454	CallExpression	"extract_token ( & token_start , line )"		2605418	1					
ANR	2605455	Callee	extract_token		2605418	0					
ANR	2605456	Identifier	extract_token		2605418	0					
ANR	2605457	ArgumentList	& token_start		2605418	1					
ANR	2605458	Argument	& token_start		2605418	0					
ANR	2605459	UnaryOperationExpression	& token_start		2605418	0					
ANR	2605460	UnaryOperator	&		2605418	0					
ANR	2605461	Identifier	token_start		2605418	1					
ANR	2605462	Argument	line		2605418	1					
ANR	2605463	Identifier	line		2605418	0					
ANR	2605464	ExpressionStatement	"right_classad_name = extract_token ( & token_start , line )"	508:1:15227:15281	2605418	4	True				
ANR	2605465	AssignmentExpression	"right_classad_name = extract_token ( & token_start , line )"		2605418	0		=			
ANR	2605466	Identifier	right_classad_name		2605418	0					
ANR	2605467	CallExpression	"extract_token ( & token_start , line )"		2605418	1					
ANR	2605468	Callee	extract_token		2605418	0					
ANR	2605469	Identifier	extract_token		2605418	0					
ANR	2605470	ArgumentList	& token_start		2605418	1					
ANR	2605471	Argument	& token_start		2605418	0					
ANR	2605472	UnaryOperationExpression	& token_start		2605418	0					
ANR	2605473	UnaryOperator	&		2605418	0					
ANR	2605474	Identifier	token_start		2605418	1					
ANR	2605475	Argument	line		2605418	1					
ANR	2605476	Identifier	line		2605418	0					
ANR	2605477	ExpressionStatement	"expect_match = extract_token ( & token_start , line )"	509:1:15284:15332	2605418	5	True				
ANR	2605478	AssignmentExpression	"expect_match = extract_token ( & token_start , line )"		2605418	0		=			
ANR	2605479	Identifier	expect_match		2605418	0					
ANR	2605480	CallExpression	"extract_token ( & token_start , line )"		2605418	1					
ANR	2605481	Callee	extract_token		2605418	0					
ANR	2605482	Identifier	extract_token		2605418	0					
ANR	2605483	ArgumentList	& token_start		2605418	1					
ANR	2605484	Argument	& token_start		2605418	0					
ANR	2605485	UnaryOperationExpression	& token_start		2605418	0					
ANR	2605486	UnaryOperator	&		2605418	0					
ANR	2605487	Identifier	token_start		2605418	1					
ANR	2605488	Argument	line		2605418	1					
ANR	2605489	Identifier	line		2605418	0					
ANR	2605490	ExpressionStatement	"extra = extract_token ( & token_start , line )"	510:1:15335:15376	2605418	6	True				
ANR	2605491	AssignmentExpression	"extra = extract_token ( & token_start , line )"		2605418	0		=			
ANR	2605492	Identifier	extra		2605418	0					
ANR	2605493	CallExpression	"extract_token ( & token_start , line )"		2605418	1					
ANR	2605494	Callee	extract_token		2605418	0					
ANR	2605495	Identifier	extract_token		2605418	0					
ANR	2605496	ArgumentList	& token_start		2605418	1					
ANR	2605497	Argument	& token_start		2605418	0					
ANR	2605498	UnaryOperationExpression	& token_start		2605418	0					
ANR	2605499	UnaryOperator	&		2605418	0					
ANR	2605500	Identifier	token_start		2605418	1					
ANR	2605501	Argument	line		2605418	1					
ANR	2605502	Identifier	line		2605418	0					
ANR	2605503	IfStatement	"if ( ! match_type . compare ( """" ) || ! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" ) )"		2605418	7					
ANR	2605504	Condition	"! match_type . compare ( """" ) || ! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"	511:5:15383:15505	2605418	0	True				
ANR	2605505	OrExpression	"! match_type . compare ( """" ) || ! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"		2605418	0		||			
ANR	2605506	UnaryOperationExpression	"! match_type . compare ( """" )"		2605418	0					
ANR	2605507	UnaryOperator	!		2605418	0					
ANR	2605508	CallExpression	"match_type . compare ( """" )"		2605418	1					
ANR	2605509	Callee	match_type . compare		2605418	0					
ANR	2605510	MemberAccess	match_type . compare		2605418	0					
ANR	2605511	Identifier	match_type		2605418	0					
ANR	2605512	Identifier	compare		2605418	1					
ANR	2605513	ArgumentList	""""""		2605418	1					
ANR	2605514	Argument	""""""		2605418	0					
ANR	2605515	PrimaryExpression	""""""		2605418	0					
ANR	2605516	OrExpression	"! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"		2605418	1		||			
ANR	2605517	UnaryOperationExpression	"! left_classad_name . compare ( """" )"		2605418	0					
ANR	2605518	UnaryOperator	!		2605418	0					
ANR	2605519	CallExpression	"left_classad_name . compare ( """" )"		2605418	1					
ANR	2605520	Callee	left_classad_name . compare		2605418	0					
ANR	2605521	MemberAccess	left_classad_name . compare		2605418	0					
ANR	2605522	Identifier	left_classad_name		2605418	0					
ANR	2605523	Identifier	compare		2605418	1					
ANR	2605524	ArgumentList	""""""		2605418	1					
ANR	2605525	Argument	""""""		2605418	0					
ANR	2605526	PrimaryExpression	""""""		2605418	0					
ANR	2605527	OrExpression	"! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"		2605418	1		||			
ANR	2605528	UnaryOperationExpression	"! right_classad_name . compare ( """" )"		2605418	0					
ANR	2605529	UnaryOperator	!		2605418	0					
ANR	2605530	CallExpression	"right_classad_name . compare ( """" )"		2605418	1					
ANR	2605531	Callee	right_classad_name . compare		2605418	0					
ANR	2605532	MemberAccess	right_classad_name . compare		2605418	0					
ANR	2605533	Identifier	right_classad_name		2605418	0					
ANR	2605534	Identifier	compare		2605418	1					
ANR	2605535	ArgumentList	""""""		2605418	1					
ANR	2605536	Argument	""""""		2605418	0					
ANR	2605537	PrimaryExpression	""""""		2605418	0					
ANR	2605538	UnaryOperationExpression	"! expect_match . compare ( """" )"		2605418	1					
ANR	2605539	UnaryOperator	!		2605418	0					
ANR	2605540	CallExpression	"expect_match . compare ( """" )"		2605418	1					
ANR	2605541	Callee	expect_match . compare		2605418	0					
ANR	2605542	MemberAccess	expect_match . compare		2605418	0					
ANR	2605543	Identifier	expect_match		2605418	0					
ANR	2605544	Identifier	compare		2605418	1					
ANR	2605545	ArgumentList	""""""		2605418	1					
ANR	2605546	Argument	""""""		2605418	0					
ANR	2605547	PrimaryExpression	""""""		2605418	0					
ANR	2605548	CompoundStatement		11:67:477:477	2605418	1					
ANR	2605549	ExpressionStatement	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"	513:2:15512:15598	2605418	0	True				
ANR	2605550	ShiftExpression	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605551	Identifier	cout		2605418	0					
ANR	2605552	ShiftExpression	"""Error: Missing match information on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605553	PrimaryExpression	"""Error: Missing match information on line """		2605418	0					
ANR	2605554	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605555	Identifier	line_number		2605418	0					
ANR	2605556	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605557	PrimaryExpression	"""."""		2605418	0					
ANR	2605558	Identifier	endl		2605418	1					
ANR	2605559	ExpressionStatement	"cout << ""       Format: test-match <type> <classad1> <classad2> "" << ""[ExpectMatch | ExpectDontMatch] "" << endl"	515:2:15602:15718	2605418	1	True				
ANR	2605560	ShiftExpression	"cout << ""       Format: test-match <type> <classad1> <classad2> "" << ""[ExpectMatch | ExpectDontMatch] "" << endl"		2605418	0		<<			
ANR	2605561	Identifier	cout		2605418	0					
ANR	2605562	ShiftExpression	"""       Format: test-match <type> <classad1> <classad2> "" << ""[ExpectMatch | ExpectDontMatch] "" << endl"		2605418	1		<<			
ANR	2605563	PrimaryExpression	"""       Format: test-match <type> <classad1> <classad2> """		2605418	0					
ANR	2605564	ShiftExpression	"""[ExpectMatch | ExpectDontMatch] "" << endl"		2605418	1		<<			
ANR	2605565	PrimaryExpression	"""[ExpectMatch | ExpectDontMatch] """		2605418	0					
ANR	2605566	Identifier	endl		2605418	1					
ANR	2605567	ExpressionStatement	errors -> IncrementErrors ( )	517:2:15722:15747	2605418	2	True				
ANR	2605568	CallExpression	errors -> IncrementErrors ( )		2605418	0					
ANR	2605569	Callee	errors -> IncrementErrors		2605418	0					
ANR	2605570	PtrMemberAccess	errors -> IncrementErrors		2605418	0					
ANR	2605571	Identifier	errors		2605418	0					
ANR	2605572	Identifier	IncrementErrors		2605418	1					
ANR	2605573	ArgumentList			2605418	1					
ANR	2605574	ElseStatement	else		2605418	0					
ANR	2605575	IfStatement	"if ( extra . compare ( """" ) )"		2605418	0					
ANR	2605576	Condition	"extra . compare ( """" )"	519:10:15762:15778	2605418	0	True				
ANR	2605577	CallExpression	"extra . compare ( """" )"		2605418	0					
ANR	2605578	Callee	extra . compare		2605418	0					
ANR	2605579	MemberAccess	extra . compare		2605418	0					
ANR	2605580	Identifier	extra		2605418	0					
ANR	2605581	Identifier	compare		2605418	1					
ANR	2605582	ArgumentList	""""""		2605418	1					
ANR	2605583	Argument	""""""		2605418	0					
ANR	2605584	PrimaryExpression	""""""		2605418	0					
ANR	2605585	CompoundStatement		18:29:750:750	2605418	1					
ANR	2605586	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	520:2:15785:15875	2605418	0	True				
ANR	2605587	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605588	Identifier	cout		2605418	0					
ANR	2605589	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605590	PrimaryExpression	"""Ignored extra input ("""		2605418	0					
ANR	2605591	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605592	Identifier	extra		2605418	0					
ANR	2605593	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605594	PrimaryExpression	""") on line """		2605418	0					
ANR	2605595	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605596	Identifier	line_number		2605418	0					
ANR	2605597	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605598	PrimaryExpression	"""."""		2605418	0					
ANR	2605599	Identifier	endl		2605418	1					
ANR	2605600	ElseStatement	else		2605418	0					
ANR	2605601	IfStatement	"if ( expect_match . compare ( ""ExpectMatch"" ) && expect_match . compare ( ""ExpectDontMatch"" ) )"		2605418	0					
ANR	2605602	Condition	"expect_match . compare ( ""ExpectMatch"" ) && expect_match . compare ( ""ExpectDontMatch"" )"	523:10:15890:15972	2605418	0	True				
ANR	2605603	AndExpression	"expect_match . compare ( ""ExpectMatch"" ) && expect_match . compare ( ""ExpectDontMatch"" )"		2605418	0		&&			
ANR	2605604	CallExpression	"expect_match . compare ( ""ExpectMatch"" )"		2605418	0					
ANR	2605605	Callee	expect_match . compare		2605418	0					
ANR	2605606	MemberAccess	expect_match . compare		2605418	0					
ANR	2605607	Identifier	expect_match		2605418	0					
ANR	2605608	Identifier	compare		2605418	1					
ANR	2605609	ArgumentList	"""ExpectMatch"""		2605418	1					
ANR	2605610	Argument	"""ExpectMatch"""		2605418	0					
ANR	2605611	PrimaryExpression	"""ExpectMatch"""		2605418	0					
ANR	2605612	CallExpression	"expect_match . compare ( ""ExpectDontMatch"" )"		2605418	1					
ANR	2605613	Callee	expect_match . compare		2605418	0					
ANR	2605614	MemberAccess	expect_match . compare		2605418	0					
ANR	2605615	Identifier	expect_match		2605418	0					
ANR	2605616	Identifier	compare		2605418	1					
ANR	2605617	ArgumentList	"""ExpectDontMatch"""		2605418	1					
ANR	2605618	Argument	"""ExpectDontMatch"""		2605418	0					
ANR	2605619	PrimaryExpression	"""ExpectDontMatch"""		2605418	0					
ANR	2605620	CompoundStatement		23:48:944:944	2605418	1					
ANR	2605621	ExpressionStatement	"cout << ""Error: Need to specify \\""ExpectMatch\\"" or "" << ""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""	525:2:15979:16097	2605418	0	True				
ANR	2605622	ShiftExpression	"cout << ""Error: Need to specify \\""ExpectMatch\\"" or "" << ""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""		2605418	0		<<			
ANR	2605623	Identifier	cout		2605418	0					
ANR	2605624	ShiftExpression	"""Error: Need to specify \\""ExpectMatch\\"" or "" << ""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""		2605418	1		<<			
ANR	2605625	PrimaryExpression	"""Error: Need to specify \\""ExpectMatch\\"" or """		2605418	0					
ANR	2605626	ShiftExpression	"""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""		2605418	1		<<			
ANR	2605627	PrimaryExpression	"""\\""ExpectDontMatch\\"" on line """		2605418	0					
ANR	2605628	ShiftExpression	"line_number << "".\\n"""		2605418	1		<<			
ANR	2605629	Identifier	line_number		2605418	0					
ANR	2605630	PrimaryExpression	""".\\n"""		2605418	1					
ANR	2605631	ExpressionStatement	errors -> IncrementErrors ( )	528:2:16101:16126	2605418	1	True				
ANR	2605632	CallExpression	errors -> IncrementErrors ( )		2605418	0					
ANR	2605633	Callee	errors -> IncrementErrors		2605418	0					
ANR	2605634	PtrMemberAccess	errors -> IncrementErrors		2605418	0					
ANR	2605635	Identifier	errors		2605418	0					
ANR	2605636	Identifier	IncrementErrors		2605418	1					
ANR	2605637	ArgumentList			2605418	1					
ANR	2605638	ExpressionStatement	"expect_match = ""ExpectMatch"""	529:2:16130:16158	2605418	2	True				
ANR	2605639	AssignmentExpression	"expect_match = ""ExpectMatch"""		2605418	0		=			
ANR	2605640	Identifier	expect_match		2605418	0					
ANR	2605641	PrimaryExpression	"""ExpectMatch"""		2605418	1					
ANR	2605642	IdentifierDeclStatement	"ClassAd * left_classad , * right_classad ;"	533:1:16167:16204	2605418	8	True				
ANR	2605643	IdentifierDecl	* left_classad		2605418	0					
ANR	2605644	IdentifierDeclType	ClassAd *		2605418	0					
ANR	2605645	Identifier	left_classad		2605418	1					
ANR	2605646	IdentifierDecl	* right_classad		2605418	1					
ANR	2605647	IdentifierDeclType	ClassAd *		2605418	0					
ANR	2605648	Identifier	right_classad		2605418	1					
ANR	2605649	ExpressionStatement	left_classad = classads [ left_classad_name ]	535:1:16208:16250	2605418	9	True				
ANR	2605650	AssignmentExpression	left_classad = classads [ left_classad_name ]		2605418	0		=			
ANR	2605651	Identifier	left_classad		2605418	0					
ANR	2605652	ArrayIndexing	classads [ left_classad_name ]		2605418	1					
ANR	2605653	Identifier	classads		2605418	0					
ANR	2605654	Identifier	left_classad_name		2605418	1					
ANR	2605655	ExpressionStatement	right_classad = classads [ right_classad_name ]	536:1:16253:16297	2605418	10	True				
ANR	2605656	AssignmentExpression	right_classad = classads [ right_classad_name ]		2605418	0		=			
ANR	2605657	Identifier	right_classad		2605418	0					
ANR	2605658	ArrayIndexing	classads [ right_classad_name ]		2605418	1					
ANR	2605659	Identifier	classads		2605418	0					
ANR	2605660	Identifier	right_classad_name		2605418	1					
ANR	2605661	IfStatement	if ( left_classad == NULL )		2605418	11					
ANR	2605662	Condition	left_classad == NULL	538:5:16305:16324	2605418	0	True				
ANR	2605663	EqualityExpression	left_classad == NULL		2605418	0		==			
ANR	2605664	Identifier	left_classad		2605418	0					
ANR	2605665	Identifier	NULL		2605418	1					
ANR	2605666	CompoundStatement		37:27:1296:1296	2605418	1					
ANR	2605667	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"	539:2:16331:16439	2605418	0	True				
ANR	2605668	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605669	Identifier	cout		2605418	0					
ANR	2605670	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605671	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		2605418	0					
ANR	2605672	ShiftExpression	"left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605673	Identifier	left_classad_name		2605418	0					
ANR	2605674	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605675	PrimaryExpression	"""\\"" on line """		2605418	0					
ANR	2605676	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605677	Identifier	line_number		2605418	0					
ANR	2605678	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605679	PrimaryExpression	"""."""		2605418	0					
ANR	2605680	Identifier	endl		2605418	1					
ANR	2605681	ExpressionStatement	errors -> IncrementErrors ( )	541:2:16443:16468	2605418	1	True				
ANR	2605682	CallExpression	errors -> IncrementErrors ( )		2605418	0					
ANR	2605683	Callee	errors -> IncrementErrors		2605418	0					
ANR	2605684	PtrMemberAccess	errors -> IncrementErrors		2605418	0					
ANR	2605685	Identifier	errors		2605418	0					
ANR	2605686	Identifier	IncrementErrors		2605418	1					
ANR	2605687	ArgumentList			2605418	1					
ANR	2605688	IfStatement	if ( right_classad == NULL )		2605418	12					
ANR	2605689	Condition	right_classad == NULL	543:5:16478:16498	2605418	0	True				
ANR	2605690	EqualityExpression	right_classad == NULL		2605418	0		==			
ANR	2605691	Identifier	right_classad		2605418	0					
ANR	2605692	Identifier	NULL		2605418	1					
ANR	2605693	CompoundStatement		42:28:1470:1470	2605418	1					
ANR	2605694	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"	544:2:16505:16615	2605418	0	True				
ANR	2605695	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605696	Identifier	cout		2605418	0					
ANR	2605697	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605698	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		2605418	0					
ANR	2605699	ShiftExpression	"right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605700	Identifier	right_classad_name		2605418	0					
ANR	2605701	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605702	PrimaryExpression	"""\\"" on line """		2605418	0					
ANR	2605703	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605704	Identifier	line_number		2605418	0					
ANR	2605705	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605706	PrimaryExpression	"""."""		2605418	0					
ANR	2605707	Identifier	endl		2605418	1					
ANR	2605708	ExpressionStatement	errors -> IncrementErrors ( )	546:2:16619:16644	2605418	1	True				
ANR	2605709	CallExpression	errors -> IncrementErrors ( )		2605418	0					
ANR	2605710	Callee	errors -> IncrementErrors		2605418	0					
ANR	2605711	PtrMemberAccess	errors -> IncrementErrors		2605418	0					
ANR	2605712	Identifier	errors		2605418	0					
ANR	2605713	Identifier	IncrementErrors		2605418	1					
ANR	2605714	ArgumentList			2605418	1					
ANR	2605715	IfStatement	if ( left_classad != NULL && right_classad != NULL )		2605418	13					
ANR	2605716	Condition	left_classad != NULL && right_classad != NULL	548:5:16654:16698	2605418	0	True				
ANR	2605717	AndExpression	left_classad != NULL && right_classad != NULL		2605418	0		&&			
ANR	2605718	EqualityExpression	left_classad != NULL		2605418	0		!=			
ANR	2605719	Identifier	left_classad		2605418	0					
ANR	2605720	Identifier	NULL		2605418	1					
ANR	2605721	EqualityExpression	right_classad != NULL		2605418	1		!=			
ANR	2605722	Identifier	right_classad		2605418	0					
ANR	2605723	Identifier	NULL		2605418	1					
ANR	2605724	CompoundStatement		51:2:1751:1774	2605418	1					
ANR	2605725	IdentifierDeclStatement	"MatchClassAd match_ad ( left_classad , right_classad ) ;"	549:2:16705:16758	2605418	0	True				
ANR	2605726	IdentifierDecl	"match_ad ( left_classad , right_classad )"		2605418	0					
ANR	2605727	IdentifierDeclType	MatchClassAd		2605418	0					
ANR	2605728	Identifier	match_ad		2605418	1					
ANR	2605729	Expression	"left_classad , right_classad"		2605418	2					
ANR	2605730	Identifier	left_classad		2605418	0					
ANR	2605731	Identifier	right_classad		2605418	1					
ANR	2605732	IdentifierDeclStatement	bool does_match ;	551:2:16763:16778	2605418	1	True				
ANR	2605733	IdentifierDecl	does_match		2605418	0					
ANR	2605734	IdentifierDeclType	bool		2605418	0					
ANR	2605735	Identifier	does_match		2605418	1					
ANR	2605736	IdentifierDeclStatement	bool evaluate_succeeded ;	552:2:16782:16805	2605418	2	True				
ANR	2605737	IdentifierDecl	evaluate_succeeded		2605418	0					
ANR	2605738	IdentifierDeclType	bool		2605418	0					
ANR	2605739	Identifier	evaluate_succeeded		2605418	1					
ANR	2605740	ExpressionStatement	"evaluate_succeeded = match_ad . EvaluateAttrBool ( match_type , does_match )"	553:2:16809:16879	2605418	3	True				
ANR	2605741	AssignmentExpression	"evaluate_succeeded = match_ad . EvaluateAttrBool ( match_type , does_match )"		2605418	0		=			
ANR	2605742	Identifier	evaluate_succeeded		2605418	0					
ANR	2605743	CallExpression	"match_ad . EvaluateAttrBool ( match_type , does_match )"		2605418	1					
ANR	2605744	Callee	match_ad . EvaluateAttrBool		2605418	0					
ANR	2605745	MemberAccess	match_ad . EvaluateAttrBool		2605418	0					
ANR	2605746	Identifier	match_ad		2605418	0					
ANR	2605747	Identifier	EvaluateAttrBool		2605418	1					
ANR	2605748	ArgumentList	match_type		2605418	1					
ANR	2605749	Argument	match_type		2605418	0					
ANR	2605750	Identifier	match_type		2605418	0					
ANR	2605751	Argument	does_match		2605418	1					
ANR	2605752	Identifier	does_match		2605418	0					
ANR	2605753	IfStatement	if ( ! evaluate_succeeded )		2605418	4					
ANR	2605754	Condition	! evaluate_succeeded	554:6:16887:16905	2605418	0	True				
ANR	2605755	UnaryOperationExpression	! evaluate_succeeded		2605418	0					
ANR	2605756	UnaryOperator	!		2605418	0					
ANR	2605757	Identifier	evaluate_succeeded		2605418	1					
ANR	2605758	CompoundStatement		53:28:1878:1878	2605418	1					
ANR	2605759	ExpressionStatement	"cout << ""Error: Couldn't match, bad requirements? Line "" << line_number << ""."" << endl"	555:3:16914:17005	2605418	0	True				
ANR	2605760	ShiftExpression	"cout << ""Error: Couldn't match, bad requirements? Line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605761	Identifier	cout		2605418	0					
ANR	2605762	ShiftExpression	"""Error: Couldn't match, bad requirements? Line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605763	PrimaryExpression	"""Error: Couldn't match, bad requirements? Line """		2605418	0					
ANR	2605764	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605765	Identifier	line_number		2605418	0					
ANR	2605766	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605767	PrimaryExpression	"""."""		2605418	0					
ANR	2605768	Identifier	endl		2605418	1					
ANR	2605769	ExpressionStatement	errors -> IncrementErrors ( )	557:3:17010:17035	2605418	1	True				
ANR	2605770	CallExpression	errors -> IncrementErrors ( )		2605418	0					
ANR	2605771	Callee	errors -> IncrementErrors		2605418	0					
ANR	2605772	PtrMemberAccess	errors -> IncrementErrors		2605418	0					
ANR	2605773	Identifier	errors		2605418	0					
ANR	2605774	Identifier	IncrementErrors		2605418	1					
ANR	2605775	ArgumentList			2605418	1					
ANR	2605776	ElseStatement	else		2605418	0					
ANR	2605777	IfStatement	"if ( ! expect_match . compare ( ""ExpectMatch"" ) )"		2605418	0					
ANR	2605778	Condition	"! expect_match . compare ( ""ExpectMatch"" )"	558:13:17050:17085	2605418	0	True				
ANR	2605779	UnaryOperationExpression	"! expect_match . compare ( ""ExpectMatch"" )"		2605418	0					
ANR	2605780	UnaryOperator	!		2605418	0					
ANR	2605781	CallExpression	"expect_match . compare ( ""ExpectMatch"" )"		2605418	1					
ANR	2605782	Callee	expect_match . compare		2605418	0					
ANR	2605783	MemberAccess	expect_match . compare		2605418	0					
ANR	2605784	Identifier	expect_match		2605418	0					
ANR	2605785	Identifier	compare		2605418	1					
ANR	2605786	ArgumentList	"""ExpectMatch"""		2605418	1					
ANR	2605787	Argument	"""ExpectMatch"""		2605418	0					
ANR	2605788	PrimaryExpression	"""ExpectMatch"""		2605418	0					
ANR	2605789	CompoundStatement		57:51:2057:2057	2605418	1					
ANR	2605790	IfStatement	if ( ! does_match )		2605418	0					
ANR	2605791	Condition	! does_match	559:7:17097:17107	2605418	0	True				
ANR	2605792	UnaryOperationExpression	! does_match		2605418	0					
ANR	2605793	UnaryOperator	!		2605418	0					
ANR	2605794	Identifier	does_match		2605418	1					
ANR	2605795	CompoundStatement		58:19:2078:2078	2605418	1					
ANR	2605796	ExpressionStatement	"cout << ""Error: ClassAds don't match: "" << ""on line "" << line_number << ""."" << endl"	560:4:17115:17205	2605418	0	True				
ANR	2605797	ShiftExpression	"cout << ""Error: ClassAds don't match: "" << ""on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605798	Identifier	cout		2605418	0					
ANR	2605799	ShiftExpression	"""Error: ClassAds don't match: "" << ""on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605800	PrimaryExpression	"""Error: ClassAds don't match: """		2605418	0					
ANR	2605801	ShiftExpression	"""on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605802	PrimaryExpression	"""on line """		2605418	0					
ANR	2605803	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605804	Identifier	line_number		2605418	0					
ANR	2605805	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605806	PrimaryExpression	"""."""		2605418	0					
ANR	2605807	Identifier	endl		2605418	1					
ANR	2605808	ExpressionStatement	errors -> IncrementErrors ( )	562:4:17211:17236	2605418	1	True				
ANR	2605809	CallExpression	errors -> IncrementErrors ( )		2605418	0					
ANR	2605810	Callee	errors -> IncrementErrors		2605418	0					
ANR	2605811	PtrMemberAccess	errors -> IncrementErrors		2605418	0					
ANR	2605812	Identifier	errors		2605418	0					
ANR	2605813	Identifier	IncrementErrors		2605418	1					
ANR	2605814	ArgumentList			2605418	1					
ANR	2605815	ElseStatement	else		2605418	0					
ANR	2605816	CompoundStatement		62:10:2217:2217	2605418	0					
ANR	2605817	ExpressionStatement	"cout << ""OK: ClassAds match on line "" << line_number << ""."" << endl"	564:4:17254:17327	2605418	0	True				
ANR	2605818	ShiftExpression	"cout << ""OK: ClassAds match on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605819	Identifier	cout		2605418	0					
ANR	2605820	ShiftExpression	"""OK: ClassAds match on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605821	PrimaryExpression	"""OK: ClassAds match on line """		2605418	0					
ANR	2605822	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605823	Identifier	line_number		2605418	0					
ANR	2605824	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605825	PrimaryExpression	"""."""		2605418	0					
ANR	2605826	Identifier	endl		2605418	1					
ANR	2605827	ElseStatement	else		2605418	0					
ANR	2605828	CompoundStatement		67:7:2314:2314	2605418	0					
ANR	2605829	IfStatement	if ( ! does_match )		2605418	0					
ANR	2605830	Condition	! does_match	569:7:17354:17364	2605418	0	True				
ANR	2605831	UnaryOperationExpression	! does_match		2605418	0					
ANR	2605832	UnaryOperator	!		2605418	0					
ANR	2605833	Identifier	does_match		2605418	1					
ANR	2605834	CompoundStatement		68:19:2335:2335	2605418	1					
ANR	2605835	ExpressionStatement	"cout << ""OK: ClassAds don't match on line "" << line_number << ""."" << endl"	570:4:17372:17451	2605418	0	True				
ANR	2605836	ShiftExpression	"cout << ""OK: ClassAds don't match on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605837	Identifier	cout		2605418	0					
ANR	2605838	ShiftExpression	"""OK: ClassAds don't match on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605839	PrimaryExpression	"""OK: ClassAds don't match on line """		2605418	0					
ANR	2605840	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605841	Identifier	line_number		2605418	0					
ANR	2605842	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605843	PrimaryExpression	"""."""		2605418	0					
ANR	2605844	Identifier	endl		2605418	1					
ANR	2605845	ElseStatement	else		2605418	0					
ANR	2605846	CompoundStatement		71:10:2432:2432	2605418	0					
ANR	2605847	ExpressionStatement	"cout << ""Error: ClassAds match: "" << ""on line "" << line_number << ""."" << endl"	573:4:17469:17553	2605418	0	True				
ANR	2605848	ShiftExpression	"cout << ""Error: ClassAds match: "" << ""on line "" << line_number << ""."" << endl"		2605418	0		<<			
ANR	2605849	Identifier	cout		2605418	0					
ANR	2605850	ShiftExpression	"""Error: ClassAds match: "" << ""on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605851	PrimaryExpression	"""Error: ClassAds match: """		2605418	0					
ANR	2605852	ShiftExpression	"""on line "" << line_number << ""."" << endl"		2605418	1		<<			
ANR	2605853	PrimaryExpression	"""on line """		2605418	0					
ANR	2605854	ShiftExpression	"line_number << ""."" << endl"		2605418	1		<<			
ANR	2605855	Identifier	line_number		2605418	0					
ANR	2605856	ShiftExpression	"""."" << endl"		2605418	1		<<			
ANR	2605857	PrimaryExpression	"""."""		2605418	0					
ANR	2605858	Identifier	endl		2605418	1					
ANR	2605859	ExpressionStatement	errors -> IncrementErrors ( )	575:4:17559:17584	2605418	1	True				
ANR	2605860	CallExpression	errors -> IncrementErrors ( )		2605418	0					
ANR	2605861	Callee	errors -> IncrementErrors		2605418	0					
ANR	2605862	PtrMemberAccess	errors -> IncrementErrors		2605418	0					
ANR	2605863	Identifier	errors		2605418	0					
ANR	2605864	Identifier	IncrementErrors		2605418	1					
ANR	2605865	ArgumentList			2605418	1					
ANR	2605866	ExpressionStatement	match_ad . RemoveRightAd ( )	578:2:17597:17621	2605418	5	True				
ANR	2605867	CallExpression	match_ad . RemoveRightAd ( )		2605418	0					
ANR	2605868	Callee	match_ad . RemoveRightAd		2605418	0					
ANR	2605869	MemberAccess	match_ad . RemoveRightAd		2605418	0					
ANR	2605870	Identifier	match_ad		2605418	0					
ANR	2605871	Identifier	RemoveRightAd		2605418	1					
ANR	2605872	ArgumentList			2605418	1					
ANR	2605873	ExpressionStatement	match_ad . RemoveLeftAd ( )	579:2:17625:17648	2605418	6	True				
ANR	2605874	CallExpression	match_ad . RemoveLeftAd ( )		2605418	0					
ANR	2605875	Callee	match_ad . RemoveLeftAd		2605418	0					
ANR	2605876	MemberAccess	match_ad . RemoveLeftAd		2605418	0					
ANR	2605877	Identifier	match_ad		2605418	0					
ANR	2605878	Identifier	RemoveLeftAd		2605418	1					
ANR	2605879	ArgumentList			2605418	1					
ANR	2605880	ReturnStatement	return ;	581:1:17654:17660	2605418	14	True				
ANR	2605881	ReturnType	static void		2605418	1					
ANR	2605882	Identifier	process_test_match		2605418	2					
ANR	2605883	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2605418	3					
ANR	2605884	Parameter	const string & line	498:31:14895:14912	2605418	0	True				
ANR	2605885	ParameterType	const string &		2605418	0					
ANR	2605886	Identifier	line		2605418	1					
ANR	2605887	Parameter	int token_start	499:10:14925:14939	2605418	1	True				
ANR	2605888	ParameterType	int		2605418	0					
ANR	2605889	Identifier	token_start		2605418	1					
ANR	2605890	Parameter	int line_number	499:27:14942:14956	2605418	2	True				
ANR	2605891	ParameterType	int		2605418	0					
ANR	2605892	Identifier	line_number		2605418	1					
ANR	2605893	Parameter	const Parameters & parameters	500:10:14970:14997	2605418	3	True				
ANR	2605894	ParameterType	const Parameters &		2605418	0					
ANR	2605895	Identifier	parameters		2605418	1					
ANR	2605896	Parameter	ErrorCount * errors	501:10:15010:15027	2605418	4	True				
ANR	2605897	ParameterType	ErrorCount *		2605418	0					
ANR	2605898	Identifier	errors		2605418	1					
ANR	2605899	CFGEntryNode	ENTRY		2605418		True				
ANR	2605900	CFGExitNode	EXIT		2605418		True				
ANR	2605901	Symbol	left_classad		2605418						
ANR	2605902	Symbol	expect_match		2605418						
ANR	2605903	Symbol	& token_start		2605418						
ANR	2605904	Symbol	expect_match . compare		2605418						
ANR	2605905	Symbol	right_classad_name . compare		2605418						
ANR	2605906	Symbol	line		2605418						
ANR	2605907	Symbol	* right_classad_name		2605418						
ANR	2605908	Symbol	* classads		2605418						
ANR	2605909	Symbol	left_classad_name		2605418						
ANR	2605910	Symbol	extra . compare		2605418						
ANR	2605911	Symbol	line_number		2605418						
ANR	2605912	Symbol	does_match		2605418						
ANR	2605913	Symbol	extra		2605418						
ANR	2605914	Symbol	match_type		2605418						
ANR	2605915	Symbol	* left_classad_name		2605418						
ANR	2605916	Symbol	match_type . compare		2605418						
ANR	2605917	Symbol	token_start		2605418						
ANR	2605918	Symbol	NULL		2605418						
ANR	2605919	Symbol	extract_token		2605418						
ANR	2605920	Symbol	match_ad		2605418						
ANR	2605921	Symbol	match_ad . EvaluateAttrBool		2605418						
ANR	2605922	Symbol	left_classad_name . compare		2605418						
ANR	2605923	Symbol	evaluate_succeeded		2605418						
ANR	2605924	Symbol	right_classad_name		2605418						
ANR	2605925	Symbol	right_classad		2605418						
ANR	2605926	Symbol	parameters		2605418						
ANR	2605927	Symbol	classads		2605418						
ANR	2605928	Symbol	errors		2605418						
ANR	2605929	Function	process_test_lexer_one_token	590:0:17870:19614							
ANR	2605930	FunctionDef	"process_test_lexer_one_token (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2605929	0					
ANR	2605931	CompoundStatement		594:0:18049:19614	2605929	0					
ANR	2605932	IdentifierDeclStatement	"string token_string , expected_token_type ;"	595:1:18052:18092	2605929	0	True				
ANR	2605933	IdentifierDecl	token_string		2605929	0					
ANR	2605934	IdentifierDeclType	string		2605929	0					
ANR	2605935	Identifier	token_string		2605929	1					
ANR	2605936	IdentifierDecl	expected_token_type		2605929	1					
ANR	2605937	IdentifierDeclType	string		2605929	0					
ANR	2605938	Identifier	expected_token_type		2605929	1					
ANR	2605939	IdentifierDeclStatement	string extra ;	596:1:18095:18107	2605929	1	True				
ANR	2605940	IdentifierDecl	extra		2605929	0					
ANR	2605941	IdentifierDeclType	string		2605929	0					
ANR	2605942	Identifier	extra		2605929	1					
ANR	2605943	ExpressionStatement	"token_string = extract_token ( & token_start , line )"	598:1:18111:18168	2605929	2	True				
ANR	2605944	AssignmentExpression	"token_string = extract_token ( & token_start , line )"		2605929	0		=			
ANR	2605945	Identifier	token_string		2605929	0					
ANR	2605946	CallExpression	"extract_token ( & token_start , line )"		2605929	1					
ANR	2605947	Callee	extract_token		2605929	0					
ANR	2605948	Identifier	extract_token		2605929	0					
ANR	2605949	ArgumentList	& token_start		2605929	1					
ANR	2605950	Argument	& token_start		2605929	0					
ANR	2605951	UnaryOperationExpression	& token_start		2605929	0					
ANR	2605952	UnaryOperator	&		2605929	0					
ANR	2605953	Identifier	token_start		2605929	1					
ANR	2605954	Argument	line		2605929	1					
ANR	2605955	Identifier	line		2605929	0					
ANR	2605956	ExpressionStatement	"expected_token_type = extract_token ( & token_start , line )"	599:1:18171:18228	2605929	3	True				
ANR	2605957	AssignmentExpression	"expected_token_type = extract_token ( & token_start , line )"		2605929	0		=			
ANR	2605958	Identifier	expected_token_type		2605929	0					
ANR	2605959	CallExpression	"extract_token ( & token_start , line )"		2605929	1					
ANR	2605960	Callee	extract_token		2605929	0					
ANR	2605961	Identifier	extract_token		2605929	0					
ANR	2605962	ArgumentList	& token_start		2605929	1					
ANR	2605963	Argument	& token_start		2605929	0					
ANR	2605964	UnaryOperationExpression	& token_start		2605929	0					
ANR	2605965	UnaryOperator	&		2605929	0					
ANR	2605966	Identifier	token_start		2605929	1					
ANR	2605967	Argument	line		2605929	1					
ANR	2605968	Identifier	line		2605929	0					
ANR	2605969	ExpressionStatement	"extra = extract_token ( & token_start , line )"	600:1:18231:18288	2605929	4	True				
ANR	2605970	AssignmentExpression	"extra = extract_token ( & token_start , line )"		2605929	0		=			
ANR	2605971	Identifier	extra		2605929	0					
ANR	2605972	CallExpression	"extract_token ( & token_start , line )"		2605929	1					
ANR	2605973	Callee	extract_token		2605929	0					
ANR	2605974	Identifier	extract_token		2605929	0					
ANR	2605975	ArgumentList	& token_start		2605929	1					
ANR	2605976	Argument	& token_start		2605929	0					
ANR	2605977	UnaryOperationExpression	& token_start		2605929	0					
ANR	2605978	UnaryOperator	&		2605929	0					
ANR	2605979	Identifier	token_start		2605929	1					
ANR	2605980	Argument	line		2605929	1					
ANR	2605981	Identifier	line		2605929	0					
ANR	2605982	IfStatement	"if ( ! token_string . compare ( """" ) || ! expected_token_type . compare ( """" ) )"		2605929	5					
ANR	2605983	Condition	"! token_string . compare ( """" ) || ! expected_token_type . compare ( """" )"	601:5:18295:18358	2605929	0	True				
ANR	2605984	OrExpression	"! token_string . compare ( """" ) || ! expected_token_type . compare ( """" )"		2605929	0		||			
ANR	2605985	UnaryOperationExpression	"! token_string . compare ( """" )"		2605929	0					
ANR	2605986	UnaryOperator	!		2605929	0					
ANR	2605987	CallExpression	"token_string . compare ( """" )"		2605929	1					
ANR	2605988	Callee	token_string . compare		2605929	0					
ANR	2605989	MemberAccess	token_string . compare		2605929	0					
ANR	2605990	Identifier	token_string		2605929	0					
ANR	2605991	Identifier	compare		2605929	1					
ANR	2605992	ArgumentList	""""""		2605929	1					
ANR	2605993	Argument	""""""		2605929	0					
ANR	2605994	PrimaryExpression	""""""		2605929	0					
ANR	2605995	UnaryOperationExpression	"! expected_token_type . compare ( """" )"		2605929	1					
ANR	2605996	UnaryOperator	!		2605929	0					
ANR	2605997	CallExpression	"expected_token_type . compare ( """" )"		2605929	1					
ANR	2605998	Callee	expected_token_type . compare		2605929	0					
ANR	2605999	MemberAccess	expected_token_type . compare		2605929	0					
ANR	2606000	Identifier	expected_token_type		2605929	0					
ANR	2606001	Identifier	compare		2605929	1					
ANR	2606002	ArgumentList	""""""		2605929	1					
ANR	2606003	Argument	""""""		2605929	0					
ANR	2606004	PrimaryExpression	""""""		2605929	0					
ANR	2606005	CompoundStatement		9:39:311:311	2605929	1					
ANR	2606006	ExpressionStatement	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"	603:2:18365:18451	2605929	0	True				
ANR	2606007	ShiftExpression	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"		2605929	0		<<			
ANR	2606008	Identifier	cout		2605929	0					
ANR	2606009	ShiftExpression	"""Error: Missing match information on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606010	PrimaryExpression	"""Error: Missing match information on line """		2605929	0					
ANR	2606011	ShiftExpression	"line_number << ""."" << endl"		2605929	1		<<			
ANR	2606012	Identifier	line_number		2605929	0					
ANR	2606013	ShiftExpression	"""."" << endl"		2605929	1		<<			
ANR	2606014	PrimaryExpression	"""."""		2605929	0					
ANR	2606015	Identifier	endl		2605929	1					
ANR	2606016	ExpressionStatement	"cout << ""       Format: test-lexer-one-token <token> <token-type> "" << endl"	605:2:18455:18534	2605929	1	True				
ANR	2606017	ShiftExpression	"cout << ""       Format: test-lexer-one-token <token> <token-type> "" << endl"		2605929	0		<<			
ANR	2606018	Identifier	cout		2605929	0					
ANR	2606019	ShiftExpression	"""       Format: test-lexer-one-token <token> <token-type> "" << endl"		2605929	1		<<			
ANR	2606020	PrimaryExpression	"""       Format: test-lexer-one-token <token> <token-type> """		2605929	0					
ANR	2606021	Identifier	endl		2605929	1					
ANR	2606022	ExpressionStatement	errors -> IncrementErrors ( )	607:2:18538:18563	2605929	2	True				
ANR	2606023	CallExpression	errors -> IncrementErrors ( )		2605929	0					
ANR	2606024	Callee	errors -> IncrementErrors		2605929	0					
ANR	2606025	PtrMemberAccess	errors -> IncrementErrors		2605929	0					
ANR	2606026	Identifier	errors		2605929	0					
ANR	2606027	Identifier	IncrementErrors		2605929	1					
ANR	2606028	ArgumentList			2605929	1					
ANR	2606029	ElseStatement	else		2605929	0					
ANR	2606030	IfStatement	"if ( extra . compare ( """" ) )"		2605929	0					
ANR	2606031	Condition	"extra . compare ( """" )"	609:10:18578:18594	2605929	0	True				
ANR	2606032	CallExpression	"extra . compare ( """" )"		2605929	0					
ANR	2606033	Callee	extra . compare		2605929	0					
ANR	2606034	MemberAccess	extra . compare		2605929	0					
ANR	2606035	Identifier	extra		2605929	0					
ANR	2606036	Identifier	compare		2605929	1					
ANR	2606037	ArgumentList	""""""		2605929	1					
ANR	2606038	Argument	""""""		2605929	0					
ANR	2606039	PrimaryExpression	""""""		2605929	0					
ANR	2606040	CompoundStatement		16:29:547:547	2605929	1					
ANR	2606041	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	610:2:18601:18691	2605929	0	True				
ANR	2606042	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2605929	0		<<			
ANR	2606043	Identifier	cout		2605929	0					
ANR	2606044	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606045	PrimaryExpression	"""Ignored extra input ("""		2605929	0					
ANR	2606046	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606047	Identifier	extra		2605929	0					
ANR	2606048	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606049	PrimaryExpression	""") on line """		2605929	0					
ANR	2606050	ShiftExpression	"line_number << ""."" << endl"		2605929	1		<<			
ANR	2606051	Identifier	line_number		2605929	0					
ANR	2606052	ShiftExpression	"""."" << endl"		2605929	1		<<			
ANR	2606053	PrimaryExpression	"""."""		2605929	0					
ANR	2606054	Identifier	endl		2605929	1					
ANR	2606055	IdentifierDeclStatement	Lexer lexer ;	614:1:18698:18721	2605929	6	True				
ANR	2606056	IdentifierDecl	lexer		2605929	0					
ANR	2606057	IdentifierDeclType	Lexer		2605929	0					
ANR	2606058	Identifier	lexer		2605929	1					
ANR	2606059	IdentifierDeclStatement	Lexer :: TokenType token_type ;	615:1:18724:18752	2605929	7	True				
ANR	2606060	IdentifierDecl	token_type		2605929	0					
ANR	2606061	IdentifierDeclType	Lexer :: TokenType		2605929	0					
ANR	2606062	Identifier	token_type		2605929	1					
ANR	2606063	IdentifierDeclStatement	const char * token_name ;	616:1:18755:18784	2605929	8	True				
ANR	2606064	IdentifierDecl	* token_name		2605929	0					
ANR	2606065	IdentifierDeclType	const char *		2605929	0					
ANR	2606066	Identifier	token_name		2605929	1					
ANR	2606067	IdentifierDeclStatement	StringLexerSource * lexer_source ;	617:1:18787:18820	2605929	9	True				
ANR	2606068	IdentifierDecl	* lexer_source		2605929	0					
ANR	2606069	IdentifierDeclType	StringLexerSource *		2605929	0					
ANR	2606070	Identifier	lexer_source		2605929	1					
ANR	2606071	ExpressionStatement	lexer_source = new StringLexerSource ( & token_string )	619:1:18824:18875	2605929	10	True				
ANR	2606072	AssignmentExpression	lexer_source = new StringLexerSource ( & token_string )		2605929	0		=			
ANR	2606073	Identifier	lexer_source		2605929	0					
ANR	2606074	UnaryOperationExpression	& token_string		2605929	1					
ANR	2606075	UnaryOperator	&		2605929	0					
ANR	2606076	Identifier	token_string		2605929	1					
ANR	2606077	IfStatement	if ( lexer_source == NULL )		2605929	11					
ANR	2606078	Condition	lexer_source == NULL	620:5:18882:18901	2605929	0	True				
ANR	2606079	EqualityExpression	lexer_source == NULL		2605929	0		==			
ANR	2606080	Identifier	lexer_source		2605929	0					
ANR	2606081	Identifier	NULL		2605929	1					
ANR	2606082	CompoundStatement		27:27:854:854	2605929	1					
ANR	2606083	ExpressionStatement	"cout << ""Error: Couldn't allocate LexerSource! on line """	621:2:18908:18964	2605929	0	True				
ANR	2606084	ShiftExpression	"cout << ""Error: Couldn't allocate LexerSource! on line """		2605929	0		<<			
ANR	2606085	Identifier	cout		2605929	0					
ANR	2606086	PrimaryExpression	"""Error: Couldn't allocate LexerSource! on line """		2605929	1					
ANR	2606087	ExpressionStatement	"cout << line_number << ""."" << endl"	622:2:18968:19002	2605929	1	True				
ANR	2606088	ShiftExpression	"cout << line_number << ""."" << endl"		2605929	0		<<			
ANR	2606089	Identifier	cout		2605929	0					
ANR	2606090	ShiftExpression	"line_number << ""."" << endl"		2605929	1		<<			
ANR	2606091	Identifier	line_number		2605929	0					
ANR	2606092	ShiftExpression	"""."" << endl"		2605929	1		<<			
ANR	2606093	PrimaryExpression	"""."""		2605929	0					
ANR	2606094	Identifier	endl		2605929	1					
ANR	2606095	ElseStatement	else		2605929	0					
ANR	2606096	CompoundStatement		30:8:962:962	2605929	0					
ANR	2606097	ExpressionStatement	lexer . Initialize ( lexer_source )	624:2:19016:19046	2605929	0	True				
ANR	2606098	CallExpression	lexer . Initialize ( lexer_source )		2605929	0					
ANR	2606099	Callee	lexer . Initialize		2605929	0					
ANR	2606100	MemberAccess	lexer . Initialize		2605929	0					
ANR	2606101	Identifier	lexer		2605929	0					
ANR	2606102	Identifier	Initialize		2605929	1					
ANR	2606103	ArgumentList	lexer_source		2605929	1					
ANR	2606104	Argument	lexer_source		2605929	0					
ANR	2606105	Identifier	lexer_source		2605929	0					
ANR	2606106	ExpressionStatement	token_type = lexer . PeekToken ( NULL )	625:2:19050:19084	2605929	1	True				
ANR	2606107	AssignmentExpression	token_type = lexer . PeekToken ( NULL )		2605929	0		=			
ANR	2606108	Identifier	token_type		2605929	0					
ANR	2606109	CallExpression	lexer . PeekToken ( NULL )		2605929	1					
ANR	2606110	Callee	lexer . PeekToken		2605929	0					
ANR	2606111	MemberAccess	lexer . PeekToken		2605929	0					
ANR	2606112	Identifier	lexer		2605929	0					
ANR	2606113	Identifier	PeekToken		2605929	1					
ANR	2606114	ArgumentList	NULL		2605929	1					
ANR	2606115	Argument	NULL		2605929	0					
ANR	2606116	Identifier	NULL		2605929	0					
ANR	2606117	ExpressionStatement	token_name = lexer . strLexToken ( token_type )	626:2:19088:19130	2605929	2	True				
ANR	2606118	AssignmentExpression	token_name = lexer . strLexToken ( token_type )		2605929	0		=			
ANR	2606119	Identifier	token_name		2605929	0					
ANR	2606120	CallExpression	lexer . strLexToken ( token_type )		2605929	1					
ANR	2606121	Callee	lexer . strLexToken		2605929	0					
ANR	2606122	MemberAccess	lexer . strLexToken		2605929	0					
ANR	2606123	Identifier	lexer		2605929	0					
ANR	2606124	Identifier	strLexToken		2605929	1					
ANR	2606125	ArgumentList	token_type		2605929	1					
ANR	2606126	Argument	token_type		2605929	0					
ANR	2606127	Identifier	token_type		2605929	0					
ANR	2606128	ExpressionStatement	lexer . FinishedParse ( )	627:2:19134:19155	2605929	3	True				
ANR	2606129	CallExpression	lexer . FinishedParse ( )		2605929	0					
ANR	2606130	Callee	lexer . FinishedParse		2605929	0					
ANR	2606131	MemberAccess	lexer . FinishedParse		2605929	0					
ANR	2606132	Identifier	lexer		2605929	0					
ANR	2606133	Identifier	FinishedParse		2605929	1					
ANR	2606134	ArgumentList			2605929	1					
ANR	2606135	IfStatement	"if ( ! strcmp ( expected_token_type . c_str ( ) , token_name ) )"		2605929	4					
ANR	2606136	Condition	"! strcmp ( expected_token_type . c_str ( ) , token_name )"	628:6:19163:19210	2605929	0	True				
ANR	2606137	UnaryOperationExpression	"! strcmp ( expected_token_type . c_str ( ) , token_name )"		2605929	0					
ANR	2606138	UnaryOperator	!		2605929	0					
ANR	2606139	CallExpression	"strcmp ( expected_token_type . c_str ( ) , token_name )"		2605929	1					
ANR	2606140	Callee	strcmp		2605929	0					
ANR	2606141	Identifier	strcmp		2605929	0					
ANR	2606142	ArgumentList	expected_token_type . c_str ( )		2605929	1					
ANR	2606143	Argument	expected_token_type . c_str ( )		2605929	0					
ANR	2606144	CallExpression	expected_token_type . c_str ( )		2605929	0					
ANR	2606145	Callee	expected_token_type . c_str		2605929	0					
ANR	2606146	MemberAccess	expected_token_type . c_str		2605929	0					
ANR	2606147	Identifier	expected_token_type		2605929	0					
ANR	2606148	Identifier	c_str		2605929	1					
ANR	2606149	ArgumentList			2605929	1					
ANR	2606150	Argument	token_name		2605929	1					
ANR	2606151	Identifier	token_name		2605929	0					
ANR	2606152	CompoundStatement		35:56:1163:1163	2605929	1					
ANR	2606153	ExpressionStatement	"cout << ""OK: Token type for \\"""" << token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"	629:3:19218:19346	2605929	0	True				
ANR	2606154	ShiftExpression	"cout << ""OK: Token type for \\"""" << token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		2605929	0		<<			
ANR	2606155	Identifier	cout		2605929	0					
ANR	2606156	ShiftExpression	"""OK: Token type for \\"""" << token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606157	PrimaryExpression	"""OK: Token type for \\"""""		2605929	0					
ANR	2606158	ShiftExpression	"token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606159	Identifier	token_string		2605929	0					
ANR	2606160	ShiftExpression	"""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606161	PrimaryExpression	"""\\"" is """		2605929	0					
ANR	2606162	ShiftExpression	"token_name << "" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606163	Identifier	token_name		2605929	0					
ANR	2606164	ShiftExpression	""" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606165	PrimaryExpression	""" on line """		2605929	0					
ANR	2606166	ShiftExpression	"line_number << ""."" << endl"		2605929	1		<<			
ANR	2606167	Identifier	line_number		2605929	0					
ANR	2606168	ShiftExpression	"""."" << endl"		2605929	1		<<			
ANR	2606169	PrimaryExpression	"""."""		2605929	0					
ANR	2606170	Identifier	endl		2605929	1					
ANR	2606171	ElseStatement	else		2605929	0					
ANR	2606172	CompoundStatement		40:7:1309:1309	2605929	0					
ANR	2606173	ExpressionStatement	"cout << ""Error: Token type for \\"""" << token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"	634:3:19364:19541	2605929	0	True				
ANR	2606174	ShiftExpression	"cout << ""Error: Token type for \\"""" << token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		2605929	0		<<			
ANR	2606175	Identifier	cout		2605929	0					
ANR	2606176	ShiftExpression	"""Error: Token type for \\"""" << token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606177	PrimaryExpression	"""Error: Token type for \\"""""		2605929	0					
ANR	2606178	ShiftExpression	"token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606179	Identifier	token_string		2605929	0					
ANR	2606180	ShiftExpression	"""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606181	PrimaryExpression	"""\\"" is not """		2605929	0					
ANR	2606182	ShiftExpression	"expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606183	Identifier	expected_token_type		2605929	0					
ANR	2606184	ShiftExpression	""" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606185	PrimaryExpression	""" but is \\"""""		2605929	0					
ANR	2606186	ShiftExpression	"token_name << ""\\"" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606187	Identifier	token_name		2605929	0					
ANR	2606188	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		2605929	1		<<			
ANR	2606189	PrimaryExpression	"""\\"" on line """		2605929	0					
ANR	2606190	ShiftExpression	"line_number << ""."" << endl"		2605929	1		<<			
ANR	2606191	Identifier	line_number		2605929	0					
ANR	2606192	ShiftExpression	"""."" << endl"		2605929	1		<<			
ANR	2606193	PrimaryExpression	"""."""		2605929	0					
ANR	2606194	Identifier	endl		2605929	1					
ANR	2606195	ExpressionStatement	errors -> IncrementErrors ( )	637:3:19546:19571	2605929	1	True				
ANR	2606196	CallExpression	errors -> IncrementErrors ( )		2605929	0					
ANR	2606197	Callee	errors -> IncrementErrors		2605929	0					
ANR	2606198	PtrMemberAccess	errors -> IncrementErrors		2605929	0					
ANR	2606199	Identifier	errors		2605929	0					
ANR	2606200	Identifier	IncrementErrors		2605929	1					
ANR	2606201	ArgumentList			2605929	1					
ANR	2606202	Statement	delete	639:2:19579:19584	2605929	5	True				
ANR	2606203	ExpressionStatement	lexer_source	639:9:19586:19598	2605929	6	True				
ANR	2606204	Identifier	lexer_source		2605929	0					
ANR	2606205	ReturnStatement	return ;	642:1:19606:19612	2605929	12	True				
ANR	2606206	ReturnType	static void		2605929	1					
ANR	2606207	Identifier	process_test_lexer_one_token		2605929	2					
ANR	2606208	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2605929	3					
ANR	2606209	Parameter	const string & line	590:41:17911:17928	2605929	0	True				
ANR	2606210	ParameterType	const string &		2605929	0					
ANR	2606211	Identifier	line		2605929	1					
ANR	2606212	Parameter	int token_start	591:11:17942:17956	2605929	1	True				
ANR	2606213	ParameterType	int		2605929	0					
ANR	2606214	Identifier	token_start		2605929	1					
ANR	2606215	Parameter	int line_number	591:28:17959:17973	2605929	2	True				
ANR	2606216	ParameterType	int		2605929	0					
ANR	2606217	Identifier	line_number		2605929	1					
ANR	2606218	Parameter	const Parameters & parameters	592:11:17988:18015	2605929	3	True				
ANR	2606219	ParameterType	const Parameters &		2605929	0					
ANR	2606220	Identifier	parameters		2605929	1					
ANR	2606221	Parameter	ErrorCount * errors	593:11:18029:18046	2605929	4	True				
ANR	2606222	ParameterType	ErrorCount *		2605929	0					
ANR	2606223	Identifier	errors		2605929	1					
ANR	2606224	CFGEntryNode	ENTRY		2605929		True				
ANR	2606225	CFGExitNode	EXIT		2605929		True				
ANR	2606226	Symbol	strcmp		2605929						
ANR	2606227	Symbol	token_start		2605929						
ANR	2606228	Symbol	NULL		2605929						
ANR	2606229	Symbol	& token_start		2605929						
ANR	2606230	Symbol	expected_token_type . compare		2605929						
ANR	2606231	Symbol	lexer . PeekToken		2605929						
ANR	2606232	Symbol	line		2605929						
ANR	2606233	Symbol	lexer . strLexToken		2605929						
ANR	2606234	Symbol	token_type		2605929						
ANR	2606235	Symbol	lexer		2605929						
ANR	2606236	Symbol	extract_token		2605929						
ANR	2606237	Symbol	lexer_source		2605929						
ANR	2606238	Symbol	extra . compare		2605929						
ANR	2606239	Symbol	expected_token_type . c_str		2605929						
ANR	2606240	Symbol	expected_token_type		2605929						
ANR	2606241	Symbol	line_number		2605929						
ANR	2606242	Symbol	token_string		2605929						
ANR	2606243	Symbol	extra		2605929						
ANR	2606244	Symbol	token_name		2605929						
ANR	2606245	Symbol	& token_string		2605929						
ANR	2606246	Symbol	parameters		2605929						
ANR	2606247	Symbol	errors		2605929						
ANR	2606248	Symbol	token_string . compare		2605929						
ANR	2606249	Function	process_evaluate	652:0:19919:21739							
ANR	2606250	FunctionDef	"process_evaluate (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2606249	0					
ANR	2606251	CompoundStatement		656:0:20077:21739	2606249	0					
ANR	2606252	IdentifierDeclStatement	"string classad_name , expression_string ;"	657:1:20080:20118	2606249	0	True				
ANR	2606253	IdentifierDecl	classad_name		2606249	0					
ANR	2606254	IdentifierDeclType	string		2606249	0					
ANR	2606255	Identifier	classad_name		2606249	1					
ANR	2606256	IdentifierDecl	expression_string		2606249	1					
ANR	2606257	IdentifierDeclType	string		2606249	0					
ANR	2606258	Identifier	expression_string		2606249	1					
ANR	2606259	IdentifierDeclStatement	ExprTree * expr ;	658:1:20121:20141	2606249	1	True				
ANR	2606260	IdentifierDecl	* expr		2606249	0					
ANR	2606261	IdentifierDeclType	ExprTree *		2606249	0					
ANR	2606262	Identifier	expr		2606249	1					
ANR	2606263	IdentifierDeclStatement	ClassAdParser parser ;	659:1:20144:20165	2606249	2	True				
ANR	2606264	IdentifierDecl	parser		2606249	0					
ANR	2606265	IdentifierDeclType	ClassAdParser		2606249	0					
ANR	2606266	Identifier	parser		2606249	1					
ANR	2606267	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	661:1:20169:20217	2606249	3	True				
ANR	2606268	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		2606249	0		=			
ANR	2606269	Identifier	classad_name		2606249	0					
ANR	2606270	CallExpression	"extract_token ( & token_start , line )"		2606249	1					
ANR	2606271	Callee	extract_token		2606249	0					
ANR	2606272	Identifier	extract_token		2606249	0					
ANR	2606273	ArgumentList	& token_start		2606249	1					
ANR	2606274	Argument	& token_start		2606249	0					
ANR	2606275	UnaryOperationExpression	& token_start		2606249	0					
ANR	2606276	UnaryOperator	&		2606249	0					
ANR	2606277	Identifier	token_start		2606249	1					
ANR	2606278	Argument	line		2606249	1					
ANR	2606279	Identifier	line		2606249	0					
ANR	2606280	ExpressionStatement	expr = NULL	662:1:20220:20231	2606249	4	True				
ANR	2606281	AssignmentExpression	expr = NULL		2606249	0		=			
ANR	2606282	Identifier	expr		2606249	0					
ANR	2606283	Identifier	NULL		2606249	1					
ANR	2606284	IfStatement	if ( ( unsigned ) token_start < line . size ( ) )		2606249	5					
ANR	2606285	Condition	( unsigned ) token_start < line . size ( )	663:5:20238:20273	2606249	0	True				
ANR	2606286	RelationalExpression	( unsigned ) token_start < line . size ( )		2606249	0		<			
ANR	2606287	CastExpression	( unsigned ) token_start		2606249	0					
ANR	2606288	CastTarget	unsigned		2606249	0					
ANR	2606289	Identifier	token_start		2606249	1					
ANR	2606290	CallExpression	line . size ( )		2606249	1					
ANR	2606291	Callee	line . size		2606249	0					
ANR	2606292	MemberAccess	line . size		2606249	0					
ANR	2606293	Identifier	line		2606249	0					
ANR	2606294	Identifier	size		2606249	1					
ANR	2606295	ArgumentList			2606249	1					
ANR	2606296	CompoundStatement		8:43:198:198	2606249	1					
ANR	2606297	ExpressionStatement	"expression_string = line . substr ( token_start , line . size ( ) - token_start )"	664:2:20280:20351	2606249	0	True				
ANR	2606298	AssignmentExpression	"expression_string = line . substr ( token_start , line . size ( ) - token_start )"		2606249	0		=			
ANR	2606299	Identifier	expression_string		2606249	0					
ANR	2606300	CallExpression	"line . substr ( token_start , line . size ( ) - token_start )"		2606249	1					
ANR	2606301	Callee	line . substr		2606249	0					
ANR	2606302	MemberAccess	line . substr		2606249	0					
ANR	2606303	Identifier	line		2606249	0					
ANR	2606304	Identifier	substr		2606249	1					
ANR	2606305	ArgumentList	token_start		2606249	1					
ANR	2606306	Argument	token_start		2606249	0					
ANR	2606307	Identifier	token_start		2606249	0					
ANR	2606308	Argument	line . size ( ) - token_start		2606249	1					
ANR	2606309	AdditiveExpression	line . size ( ) - token_start		2606249	0		-			
ANR	2606310	CallExpression	line . size ( )		2606249	0					
ANR	2606311	Callee	line . size		2606249	0					
ANR	2606312	MemberAccess	line . size		2606249	0					
ANR	2606313	Identifier	line		2606249	0					
ANR	2606314	Identifier	size		2606249	1					
ANR	2606315	ArgumentList			2606249	1					
ANR	2606316	Identifier	token_start		2606249	1					
ANR	2606317	ElseStatement	else		2606249	0					
ANR	2606318	CompoundStatement		10:8:283:283	2606249	0					
ANR	2606319	ExpressionStatement	"expression_string = """""	666:2:20365:20387	2606249	0	True				
ANR	2606320	AssignmentExpression	"expression_string = """""		2606249	0		=			
ANR	2606321	Identifier	expression_string		2606249	0					
ANR	2606322	PrimaryExpression	""""""		2606249	1					
ANR	2606323	IfStatement	"if ( ! classad_name . compare ( """" ) || ! expression_string . compare ( """" ) )"		2606249	6					
ANR	2606324	Condition	"! classad_name . compare ( """" ) || ! expression_string . compare ( """" )"	668:5:20397:20458	2606249	0	True				
ANR	2606325	OrExpression	"! classad_name . compare ( """" ) || ! expression_string . compare ( """" )"		2606249	0		||			
ANR	2606326	UnaryOperationExpression	"! classad_name . compare ( """" )"		2606249	0					
ANR	2606327	UnaryOperator	!		2606249	0					
ANR	2606328	CallExpression	"classad_name . compare ( """" )"		2606249	1					
ANR	2606329	Callee	classad_name . compare		2606249	0					
ANR	2606330	MemberAccess	classad_name . compare		2606249	0					
ANR	2606331	Identifier	classad_name		2606249	0					
ANR	2606332	Identifier	compare		2606249	1					
ANR	2606333	ArgumentList	""""""		2606249	1					
ANR	2606334	Argument	""""""		2606249	0					
ANR	2606335	PrimaryExpression	""""""		2606249	0					
ANR	2606336	UnaryOperationExpression	"! expression_string . compare ( """" )"		2606249	1					
ANR	2606337	UnaryOperator	!		2606249	0					
ANR	2606338	CallExpression	"expression_string . compare ( """" )"		2606249	1					
ANR	2606339	Callee	expression_string . compare		2606249	0					
ANR	2606340	MemberAccess	expression_string . compare		2606249	0					
ANR	2606341	Identifier	expression_string		2606249	0					
ANR	2606342	Identifier	compare		2606249	1					
ANR	2606343	ArgumentList	""""""		2606249	1					
ANR	2606344	Argument	""""""		2606249	0					
ANR	2606345	PrimaryExpression	""""""		2606249	0					
ANR	2606346	CompoundStatement		14:37:383:383	2606249	1					
ANR	2606347	ExpressionStatement	"cout << ""Error: Missing evaluate information on line "" << line_number << ""."" << endl"	670:2:20465:20554	2606249	0	True				
ANR	2606348	ShiftExpression	"cout << ""Error: Missing evaluate information on line "" << line_number << ""."" << endl"		2606249	0		<<			
ANR	2606349	Identifier	cout		2606249	0					
ANR	2606350	ShiftExpression	"""Error: Missing evaluate information on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606351	PrimaryExpression	"""Error: Missing evaluate information on line """		2606249	0					
ANR	2606352	ShiftExpression	"line_number << ""."" << endl"		2606249	1		<<			
ANR	2606353	Identifier	line_number		2606249	0					
ANR	2606354	ShiftExpression	"""."" << endl"		2606249	1		<<			
ANR	2606355	PrimaryExpression	"""."""		2606249	0					
ANR	2606356	Identifier	endl		2606249	1					
ANR	2606357	ExpressionStatement	"cout << ""       Format: evaluate <classad> <expression>"" << endl"	672:2:20558:20626	2606249	1	True				
ANR	2606358	ShiftExpression	"cout << ""       Format: evaluate <classad> <expression>"" << endl"		2606249	0		<<			
ANR	2606359	Identifier	cout		2606249	0					
ANR	2606360	ShiftExpression	"""       Format: evaluate <classad> <expression>"" << endl"		2606249	1		<<			
ANR	2606361	PrimaryExpression	"""       Format: evaluate <classad> <expression>"""		2606249	0					
ANR	2606362	Identifier	endl		2606249	1					
ANR	2606363	ExpressionStatement	errors -> IncrementErrors ( )	674:2:20630:20655	2606249	2	True				
ANR	2606364	CallExpression	errors -> IncrementErrors ( )		2606249	0					
ANR	2606365	Callee	errors -> IncrementErrors		2606249	0					
ANR	2606366	PtrMemberAccess	errors -> IncrementErrors		2606249	0					
ANR	2606367	Identifier	errors		2606249	0					
ANR	2606368	Identifier	IncrementErrors		2606249	1					
ANR	2606369	ArgumentList			2606249	1					
ANR	2606370	ElseStatement	else		2606249	0					
ANR	2606371	CompoundStatement		21:6:588:588	2606249	0					
ANR	2606372	IfStatement	"if ( ! parser . ParseExpression ( expression_string , expr ) )"		2606249	0					
ANR	2606373	Condition	"! parser . ParseExpression ( expression_string , expr )"	677:6:20674:20721	2606249	0	True				
ANR	2606374	UnaryOperationExpression	"! parser . ParseExpression ( expression_string , expr )"		2606249	0					
ANR	2606375	UnaryOperator	!		2606249	0					
ANR	2606376	CallExpression	"parser . ParseExpression ( expression_string , expr )"		2606249	1					
ANR	2606377	Callee	parser . ParseExpression		2606249	0					
ANR	2606378	MemberAccess	parser . ParseExpression		2606249	0					
ANR	2606379	Identifier	parser		2606249	0					
ANR	2606380	Identifier	ParseExpression		2606249	1					
ANR	2606381	ArgumentList	expression_string		2606249	1					
ANR	2606382	Argument	expression_string		2606249	0					
ANR	2606383	Identifier	expression_string		2606249	0					
ANR	2606384	Argument	expr		2606249	1					
ANR	2606385	Identifier	expr		2606249	0					
ANR	2606386	CompoundStatement		22:56:646:646	2606249	1					
ANR	2606387	ExpressionStatement	"cout << ""Error: Can't parse expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"	678:3:20729:20843	2606249	0	True				
ANR	2606388	ShiftExpression	"cout << ""Error: Can't parse expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		2606249	0		<<			
ANR	2606389	Identifier	cout		2606249	0					
ANR	2606390	ShiftExpression	"""Error: Can't parse expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606391	PrimaryExpression	"""Error: Can't parse expression ("""		2606249	0					
ANR	2606392	ShiftExpression	"expression_string << "") on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606393	Identifier	expression_string		2606249	0					
ANR	2606394	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606395	PrimaryExpression	""") on line """		2606249	0					
ANR	2606396	ShiftExpression	"line_number << ""."" << endl"		2606249	1		<<			
ANR	2606397	Identifier	line_number		2606249	0					
ANR	2606398	ShiftExpression	"""."" << endl"		2606249	1		<<			
ANR	2606399	PrimaryExpression	"""."""		2606249	0					
ANR	2606400	Identifier	endl		2606249	1					
ANR	2606401	ExpressionStatement	errors -> IncrementErrors ( )	680:3:20848:20873	2606249	1	True				
ANR	2606402	CallExpression	errors -> IncrementErrors ( )		2606249	0					
ANR	2606403	Callee	errors -> IncrementErrors		2606249	0					
ANR	2606404	PtrMemberAccess	errors -> IncrementErrors		2606249	0					
ANR	2606405	Identifier	errors		2606249	0					
ANR	2606406	Identifier	IncrementErrors		2606249	1					
ANR	2606407	ArgumentList			2606249	1					
ANR	2606408	ElseStatement	else		2606249	0					
ANR	2606409	CompoundStatement		28:3:813:854	2606249	0					
ANR	2606410	IdentifierDeclStatement	ClassAd * classad = classads [ classad_name ] ;	683:3:20891:20932	2606249	0	True				
ANR	2606411	IdentifierDecl	* classad = classads [ classad_name ]		2606249	0					
ANR	2606412	IdentifierDeclType	ClassAd *		2606249	0					
ANR	2606413	Identifier	classad		2606249	1					
ANR	2606414	AssignmentExpression	* classad = classads [ classad_name ]		2606249	2		=			
ANR	2606415	Identifier	classad		2606249	0					
ANR	2606416	ArrayIndexing	classads [ classad_name ]		2606249	1					
ANR	2606417	Identifier	classads		2606249	0					
ANR	2606418	Identifier	classad_name		2606249	1					
ANR	2606419	IfStatement	if ( classad == NULL )		2606249	1					
ANR	2606420	Condition	classad == NULL	685:7:20945:20959	2606249	0	True				
ANR	2606421	EqualityExpression	classad == NULL		2606249	0		==			
ANR	2606422	Identifier	classad		2606249	0					
ANR	2606423	Identifier	NULL		2606249	1					
ANR	2606424	CompoundStatement		30:24:884:884	2606249	1					
ANR	2606425	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"	686:4:20968:21074	2606249	0	True				
ANR	2606426	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2606249	0		<<			
ANR	2606427	Identifier	cout		2606249	0					
ANR	2606428	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606429	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		2606249	0					
ANR	2606430	ShiftExpression	"classad_name << ""\\"" on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606431	Identifier	classad_name		2606249	0					
ANR	2606432	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606433	PrimaryExpression	"""\\"" on line """		2606249	0					
ANR	2606434	ShiftExpression	"line_number << ""."" << endl"		2606249	1		<<			
ANR	2606435	Identifier	line_number		2606249	0					
ANR	2606436	ShiftExpression	"""."" << endl"		2606249	1		<<			
ANR	2606437	PrimaryExpression	"""."""		2606249	0					
ANR	2606438	Identifier	endl		2606249	1					
ANR	2606439	ExpressionStatement	errors -> IncrementErrors ( )	688:4:21080:21105	2606249	1	True				
ANR	2606440	CallExpression	errors -> IncrementErrors ( )		2606249	0					
ANR	2606441	Callee	errors -> IncrementErrors		2606249	0					
ANR	2606442	PtrMemberAccess	errors -> IncrementErrors		2606249	0					
ANR	2606443	Identifier	errors		2606249	0					
ANR	2606444	Identifier	IncrementErrors		2606249	1					
ANR	2606445	ArgumentList			2606249	1					
ANR	2606446	ElseStatement	else		2606249	0					
ANR	2606447	CompoundStatement		36:4:1048:1060	2606249	0					
ANR	2606448	IdentifierDeclStatement	Value value ;	691:4:21126:21138	2606249	0	True				
ANR	2606449	IdentifierDecl	value		2606249	0					
ANR	2606450	IdentifierDeclType	Value		2606249	0					
ANR	2606451	Identifier	value		2606249	1					
ANR	2606452	ExpressionStatement	expr -> SetParentScope ( classad )	692:4:21144:21173	2606249	1	True				
ANR	2606453	CallExpression	expr -> SetParentScope ( classad )		2606249	0					
ANR	2606454	Callee	expr -> SetParentScope		2606249	0					
ANR	2606455	PtrMemberAccess	expr -> SetParentScope		2606249	0					
ANR	2606456	Identifier	expr		2606249	0					
ANR	2606457	Identifier	SetParentScope		2606249	1					
ANR	2606458	ArgumentList	classad		2606249	1					
ANR	2606459	Argument	classad		2606249	0					
ANR	2606460	Identifier	classad		2606249	0					
ANR	2606461	IfStatement	"if ( ! classad -> EvaluateExpr ( expr , value ) )"		2606249	2					
ANR	2606462	Condition	"! classad -> EvaluateExpr ( expr , value )"	693:8:21183:21217	2606249	0	True				
ANR	2606463	UnaryOperationExpression	"! classad -> EvaluateExpr ( expr , value )"		2606249	0					
ANR	2606464	UnaryOperator	!		2606249	0					
ANR	2606465	CallExpression	"classad -> EvaluateExpr ( expr , value )"		2606249	1					
ANR	2606466	Callee	classad -> EvaluateExpr		2606249	0					
ANR	2606467	PtrMemberAccess	classad -> EvaluateExpr		2606249	0					
ANR	2606468	Identifier	classad		2606249	0					
ANR	2606469	Identifier	EvaluateExpr		2606249	1					
ANR	2606470	ArgumentList	expr		2606249	1					
ANR	2606471	Argument	expr		2606249	0					
ANR	2606472	Identifier	expr		2606249	0					
ANR	2606473	Argument	value		2606249	1					
ANR	2606474	Identifier	value		2606249	0					
ANR	2606475	CompoundStatement		38:45:1142:1142	2606249	1					
ANR	2606476	ExpressionStatement	"cout << ""Error: Can't evaluate expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"	694:5:21227:21345	2606249	0	True				
ANR	2606477	ShiftExpression	"cout << ""Error: Can't evaluate expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		2606249	0		<<			
ANR	2606478	Identifier	cout		2606249	0					
ANR	2606479	ShiftExpression	"""Error: Can't evaluate expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606480	PrimaryExpression	"""Error: Can't evaluate expression ("""		2606249	0					
ANR	2606481	ShiftExpression	"expression_string << "") on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606482	Identifier	expression_string		2606249	0					
ANR	2606483	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2606249	1		<<			
ANR	2606484	PrimaryExpression	""") on line """		2606249	0					
ANR	2606485	ShiftExpression	"line_number << ""."" << endl"		2606249	1		<<			
ANR	2606486	Identifier	line_number		2606249	0					
ANR	2606487	ShiftExpression	"""."" << endl"		2606249	1		<<			
ANR	2606488	PrimaryExpression	"""."""		2606249	0					
ANR	2606489	Identifier	endl		2606249	1					
ANR	2606490	ExpressionStatement	errors -> IncrementErrors ( )	696:5:21352:21377	2606249	1	True				
ANR	2606491	CallExpression	errors -> IncrementErrors ( )		2606249	0					
ANR	2606492	Callee	errors -> IncrementErrors		2606249	0					
ANR	2606493	PtrMemberAccess	errors -> IncrementErrors		2606249	0					
ANR	2606494	Identifier	errors		2606249	0					
ANR	2606495	Identifier	IncrementErrors		2606249	1					
ANR	2606496	ArgumentList			2606249	1					
ANR	2606497	ElseStatement	else		2606249	0					
ANR	2606498	CompoundStatement		45:5:1350:1369	2606249	0					
ANR	2606499	IdentifierDeclStatement	PrettyPrint unparser ;	699:5:21401:21421	2606249	0	True				
ANR	2606500	IdentifierDecl	unparser		2606249	0					
ANR	2606501	IdentifierDeclType	PrettyPrint		2606249	0					
ANR	2606502	Identifier	unparser		2606249	1					
ANR	2606503	IdentifierDeclStatement	string value_string ;	700:5:21428:21447	2606249	1	True				
ANR	2606504	IdentifierDecl	value_string		2606249	0					
ANR	2606505	IdentifierDeclType	string		2606249	0					
ANR	2606506	Identifier	value_string		2606249	1					
ANR	2606507	ExpressionStatement	"unparser . Unparse ( value_string , value )"	702:5:21455:21492	2606249	2	True				
ANR	2606508	CallExpression	"unparser . Unparse ( value_string , value )"		2606249	0					
ANR	2606509	Callee	unparser . Unparse		2606249	0					
ANR	2606510	MemberAccess	unparser . Unparse		2606249	0					
ANR	2606511	Identifier	unparser		2606249	0					
ANR	2606512	Identifier	Unparse		2606249	1					
ANR	2606513	ArgumentList	value_string		2606249	1					
ANR	2606514	Argument	value_string		2606249	0					
ANR	2606515	Identifier	value_string		2606249	0					
ANR	2606516	Argument	value		2606249	1					
ANR	2606517	Identifier	value		2606249	0					
ANR	2606518	ExpressionStatement	"cout << ""OK: Evaluating \\"""" << expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"	703:5:21499:21671	2606249	3	True				
ANR	2606519	ShiftExpression	"cout << ""OK: Evaluating \\"""" << expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		2606249	0		<<			
ANR	2606520	Identifier	cout		2606249	0					
ANR	2606521	ShiftExpression	"""OK: Evaluating \\"""" << expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		2606249	1		<<			
ANR	2606522	PrimaryExpression	"""OK: Evaluating \\"""""		2606249	0					
ANR	2606523	ShiftExpression	"expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		2606249	1		<<			
ANR	2606524	Identifier	expression_string		2606249	0					
ANR	2606525	ShiftExpression	"""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		2606249	1		<<			
ANR	2606526	PrimaryExpression	"""\\"" in """		2606249	0					
ANR	2606527	ShiftExpression	"classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		2606249	1		<<			
ANR	2606528	Identifier	classad_name		2606249	0					
ANR	2606529	ShiftExpression	""" evaluates to "" << value_string << "" on line "" << line_number << endl"		2606249	1		<<			
ANR	2606530	PrimaryExpression	""" evaluates to """		2606249	0					
ANR	2606531	ShiftExpression	"value_string << "" on line "" << line_number << endl"		2606249	1		<<			
ANR	2606532	Identifier	value_string		2606249	0					
ANR	2606533	ShiftExpression	""" on line "" << line_number << endl"		2606249	1		<<			
ANR	2606534	PrimaryExpression	""" on line """		2606249	0					
ANR	2606535	ShiftExpression	line_number << endl		2606249	1		<<			
ANR	2606536	Identifier	line_number		2606249	0					
ANR	2606537	Identifier	endl		2606249	1					
ANR	2606538	IfStatement	if ( expr != NULL )		2606249	7					
ANR	2606539	Condition	expr != NULL	711:5:21696:21707	2606249	0	True				
ANR	2606540	EqualityExpression	expr != NULL		2606249	0		!=			
ANR	2606541	Identifier	expr		2606249	0					
ANR	2606542	Identifier	NULL		2606249	1					
ANR	2606543	CompoundStatement		56:19:1632:1632	2606249	1					
ANR	2606544	Statement	delete	712:2:21714:21719	2606249	0	True				
ANR	2606545	ExpressionStatement	expr	712:9:21721:21725	2606249	1	True				
ANR	2606546	Identifier	expr		2606249	0					
ANR	2606547	ReturnStatement	return ;	714:1:21731:21737	2606249	8	True				
ANR	2606548	ReturnType	static void		2606249	1					
ANR	2606549	Identifier	process_evaluate		2606249	2					
ANR	2606550	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2606249	3					
ANR	2606551	Parameter	const string & line	652:29:19948:19965	2606249	0	True				
ANR	2606552	ParameterType	const string &		2606249	0					
ANR	2606553	Identifier	line		2606249	1					
ANR	2606554	Parameter	int token_start	653:8:19976:19990	2606249	1	True				
ANR	2606555	ParameterType	int		2606249	0					
ANR	2606556	Identifier	token_start		2606249	1					
ANR	2606557	Parameter	int line_number	653:25:19993:20007	2606249	2	True				
ANR	2606558	ParameterType	int		2606249	0					
ANR	2606559	Identifier	line_number		2606249	1					
ANR	2606560	Parameter	const Parameters & parameters	654:8:20019:20046	2606249	3	True				
ANR	2606561	ParameterType	const Parameters &		2606249	0					
ANR	2606562	Identifier	parameters		2606249	1					
ANR	2606563	Parameter	ErrorCount * errors	655:8:20057:20074	2606249	4	True				
ANR	2606564	ParameterType	ErrorCount *		2606249	0					
ANR	2606565	Identifier	errors		2606249	1					
ANR	2606566	CFGEntryNode	ENTRY		2606249		True				
ANR	2606567	CFGExitNode	EXIT		2606249		True				
ANR	2606568	Symbol	classad -> EvaluateExpr		2606249						
ANR	2606569	Symbol	& token_start		2606249						
ANR	2606570	Symbol	line		2606249						
ANR	2606571	Symbol	line . substr		2606249						
ANR	2606572	Symbol	line . size		2606249						
ANR	2606573	Symbol	* classads		2606249						
ANR	2606574	Symbol	line_number		2606249						
ANR	2606575	Symbol	classad_name		2606249						
ANR	2606576	Symbol	expr		2606249						
ANR	2606577	Symbol	value		2606249						
ANR	2606578	Symbol	* classad_name		2606249						
ANR	2606579	Symbol	token_start		2606249						
ANR	2606580	Symbol	NULL		2606249						
ANR	2606581	Symbol	parser . ParseExpression		2606249						
ANR	2606582	Symbol	* classad		2606249						
ANR	2606583	Symbol	expression_string		2606249						
ANR	2606584	Symbol	extract_token		2606249						
ANR	2606585	Symbol	parser		2606249						
ANR	2606586	Symbol	value_string		2606249						
ANR	2606587	Symbol	classad		2606249						
ANR	2606588	Symbol	unparser		2606249						
ANR	2606589	Symbol	classad_name . compare		2606249						
ANR	2606590	Symbol	parameters		2606249						
ANR	2606591	Symbol	expression_string . compare		2606249						
ANR	2606592	Symbol	classads		2606249						
ANR	2606593	Symbol	errors		2606249						
ANR	2606594	Function	process_make_collection	723:0:21942:23688							
ANR	2606595	FunctionDef	"process_make_collection (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2606594	0					
ANR	2606596	CompoundStatement		727:0:22107:23688	2606594	0					
ANR	2606597	IdentifierDeclStatement	string collection_name ;	728:1:22110:22132	2606594	0	True				
ANR	2606598	IdentifierDecl	collection_name		2606594	0					
ANR	2606599	IdentifierDeclType	string		2606594	0					
ANR	2606600	Identifier	collection_name		2606594	1					
ANR	2606601	IdentifierDeclStatement	string log_name ;	729:1:22135:22150	2606594	1	True				
ANR	2606602	IdentifierDecl	log_name		2606594	0					
ANR	2606603	IdentifierDeclType	string		2606594	0					
ANR	2606604	Identifier	log_name		2606594	1					
ANR	2606605	IdentifierDeclStatement	string extra_text ;	730:1:22153:22170	2606594	2	True				
ANR	2606606	IdentifierDecl	extra_text		2606594	0					
ANR	2606607	IdentifierDeclType	string		2606594	0					
ANR	2606608	Identifier	extra_text		2606594	1					
ANR	2606609	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	732:1:22174:22225	2606594	3	True				
ANR	2606610	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		2606594	0		=			
ANR	2606611	Identifier	collection_name		2606594	0					
ANR	2606612	CallExpression	"extract_token ( & token_start , line )"		2606594	1					
ANR	2606613	Callee	extract_token		2606594	0					
ANR	2606614	Identifier	extract_token		2606594	0					
ANR	2606615	ArgumentList	& token_start		2606594	1					
ANR	2606616	Argument	& token_start		2606594	0					
ANR	2606617	UnaryOperationExpression	& token_start		2606594	0					
ANR	2606618	UnaryOperator	&		2606594	0					
ANR	2606619	Identifier	token_start		2606594	1					
ANR	2606620	Argument	line		2606594	1					
ANR	2606621	Identifier	line		2606594	0					
ANR	2606622	ExpressionStatement	"log_name = extract_token ( & token_start , line )"	733:1:22228:22272	2606594	4	True				
ANR	2606623	AssignmentExpression	"log_name = extract_token ( & token_start , line )"		2606594	0		=			
ANR	2606624	Identifier	log_name		2606594	0					
ANR	2606625	CallExpression	"extract_token ( & token_start , line )"		2606594	1					
ANR	2606626	Callee	extract_token		2606594	0					
ANR	2606627	Identifier	extract_token		2606594	0					
ANR	2606628	ArgumentList	& token_start		2606594	1					
ANR	2606629	Argument	& token_start		2606594	0					
ANR	2606630	UnaryOperationExpression	& token_start		2606594	0					
ANR	2606631	UnaryOperator	&		2606594	0					
ANR	2606632	Identifier	token_start		2606594	1					
ANR	2606633	Argument	line		2606594	1					
ANR	2606634	Identifier	line		2606594	0					
ANR	2606635	ExpressionStatement	"extra_text = extract_token ( & token_start , line )"	734:1:22275:22321	2606594	5	True				
ANR	2606636	AssignmentExpression	"extra_text = extract_token ( & token_start , line )"		2606594	0		=			
ANR	2606637	Identifier	extra_text		2606594	0					
ANR	2606638	CallExpression	"extract_token ( & token_start , line )"		2606594	1					
ANR	2606639	Callee	extract_token		2606594	0					
ANR	2606640	Identifier	extract_token		2606594	0					
ANR	2606641	ArgumentList	& token_start		2606594	1					
ANR	2606642	Argument	& token_start		2606594	0					
ANR	2606643	UnaryOperationExpression	& token_start		2606594	0					
ANR	2606644	UnaryOperator	&		2606594	0					
ANR	2606645	Identifier	token_start		2606594	1					
ANR	2606646	Argument	line		2606594	1					
ANR	2606647	Identifier	line		2606594	0					
ANR	2606648	IfStatement	"if ( ! collection_name . compare ( """" ) )"		2606594	6					
ANR	2606649	Condition	"! collection_name . compare ( """" )"	735:5:22328:22355	2606594	0	True				
ANR	2606650	UnaryOperationExpression	"! collection_name . compare ( """" )"		2606594	0					
ANR	2606651	UnaryOperator	!		2606594	0					
ANR	2606652	CallExpression	"collection_name . compare ( """" )"		2606594	1					
ANR	2606653	Callee	collection_name . compare		2606594	0					
ANR	2606654	MemberAccess	collection_name . compare		2606594	0					
ANR	2606655	Identifier	collection_name		2606594	0					
ANR	2606656	Identifier	compare		2606594	1					
ANR	2606657	ArgumentList	""""""		2606594	1					
ANR	2606658	Argument	""""""		2606594	0					
ANR	2606659	PrimaryExpression	""""""		2606594	0					
ANR	2606660	CompoundStatement		9:35:250:250	2606594	1					
ANR	2606661	ExpressionStatement	"cout << ""Error: Missing make-collection information on line "" << line_number << ""."" << endl"	736:2:22362:22458	2606594	0	True				
ANR	2606662	ShiftExpression	"cout << ""Error: Missing make-collection information on line "" << line_number << ""."" << endl"		2606594	0		<<			
ANR	2606663	Identifier	cout		2606594	0					
ANR	2606664	ShiftExpression	"""Error: Missing make-collection information on line "" << line_number << ""."" << endl"		2606594	1		<<			
ANR	2606665	PrimaryExpression	"""Error: Missing make-collection information on line """		2606594	0					
ANR	2606666	ShiftExpression	"line_number << ""."" << endl"		2606594	1		<<			
ANR	2606667	Identifier	line_number		2606594	0					
ANR	2606668	ShiftExpression	"""."" << endl"		2606594	1		<<			
ANR	2606669	PrimaryExpression	"""."""		2606594	0					
ANR	2606670	Identifier	endl		2606594	1					
ANR	2606671	ExpressionStatement	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"	738:2:22462:22539	2606594	1	True				
ANR	2606672	ShiftExpression	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"		2606594	0		<<			
ANR	2606673	Identifier	cout		2606594	0					
ANR	2606674	ShiftExpression	"""       Format: make-collection <collection-name> [log-name]"" << endl"		2606594	1		<<			
ANR	2606675	PrimaryExpression	"""       Format: make-collection <collection-name> [log-name]"""		2606594	0					
ANR	2606676	Identifier	endl		2606594	1					
ANR	2606677	ExpressionStatement	errors -> IncrementErrors ( )	739:2:22543:22568	2606594	2	True				
ANR	2606678	CallExpression	errors -> IncrementErrors ( )		2606594	0					
ANR	2606679	Callee	errors -> IncrementErrors		2606594	0					
ANR	2606680	PtrMemberAccess	errors -> IncrementErrors		2606594	0					
ANR	2606681	Identifier	errors		2606594	0					
ANR	2606682	Identifier	IncrementErrors		2606594	1					
ANR	2606683	ArgumentList			2606594	1					
ANR	2606684	ElseStatement	else		2606594	0					
ANR	2606685	IfStatement	"if ( extra_text . compare ( """" ) )"		2606594	0					
ANR	2606686	Condition	"extra_text . compare ( """" )"	740:12:22582:22603	2606594	0	True				
ANR	2606687	CallExpression	"extra_text . compare ( """" )"		2606594	0					
ANR	2606688	Callee	extra_text . compare		2606594	0					
ANR	2606689	MemberAccess	extra_text . compare		2606594	0					
ANR	2606690	Identifier	extra_text		2606594	0					
ANR	2606691	Identifier	compare		2606594	1					
ANR	2606692	ArgumentList	""""""		2606594	1					
ANR	2606693	Argument	""""""		2606594	0					
ANR	2606694	PrimaryExpression	""""""		2606594	0					
ANR	2606695	CompoundStatement		14:36:498:498	2606594	1					
ANR	2606696	ExpressionStatement	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"	741:2:22610:22704	2606594	0	True				
ANR	2606697	ShiftExpression	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		2606594	0		<<			
ANR	2606698	Identifier	cout		2606594	0					
ANR	2606699	ShiftExpression	"""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		2606594	1		<<			
ANR	2606700	PrimaryExpression	"""Error: Extra make-collection information on line """		2606594	0					
ANR	2606701	ShiftExpression	"line_number << ""."" << endl"		2606594	1		<<			
ANR	2606702	Identifier	line_number		2606594	0					
ANR	2606703	ShiftExpression	"""."" << endl"		2606594	1		<<			
ANR	2606704	PrimaryExpression	"""."""		2606594	0					
ANR	2606705	Identifier	endl		2606594	1					
ANR	2606706	ExpressionStatement	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"	743:2:22708:22785	2606594	1	True				
ANR	2606707	ShiftExpression	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"		2606594	0		<<			
ANR	2606708	Identifier	cout		2606594	0					
ANR	2606709	ShiftExpression	"""       Format: make-collection <collection-name> [log-name]"" << endl"		2606594	1		<<			
ANR	2606710	PrimaryExpression	"""       Format: make-collection <collection-name> [log-name]"""		2606594	0					
ANR	2606711	Identifier	endl		2606594	1					
ANR	2606712	ExpressionStatement	errors -> IncrementErrors ( )	744:2:22789:22814	2606594	2	True				
ANR	2606713	CallExpression	errors -> IncrementErrors ( )		2606594	0					
ANR	2606714	Callee	errors -> IncrementErrors		2606594	0					
ANR	2606715	PtrMemberAccess	errors -> IncrementErrors		2606594	0					
ANR	2606716	Identifier	errors		2606594	0					
ANR	2606717	Identifier	IncrementErrors		2606594	1					
ANR	2606718	ArgumentList			2606594	1					
ANR	2606719	ElseStatement	else		2606594	0					
ANR	2606720	CompoundStatement		20:2:720:749	2606594	0					
ANR	2606721	IdentifierDeclStatement	ClassAdCollection * collection ;	746:2:22828:22857	2606594	0	True				
ANR	2606722	IdentifierDecl	* collection		2606594	0					
ANR	2606723	IdentifierDeclType	ClassAdCollection *		2606594	0					
ANR	2606724	Identifier	collection		2606594	1					
ANR	2606725	ExpressionStatement	collection = new ClassAdCollection ( )	748:2:22862:22898	2606594	1	True				
ANR	2606726	AssignmentExpression	collection = new ClassAdCollection ( )		2606594	0		=			
ANR	2606727	Identifier	collection		2606594	0					
ANR	2606728	UnaryExpression	new ClassAdCollection ( )		2606594	1					
ANR	2606729	IfStatement	if ( collection == NULL )		2606594	2					
ANR	2606730	Condition	collection == NULL	749:6:22906:22923	2606594	0	True				
ANR	2606731	EqualityExpression	collection == NULL		2606594	0		==			
ANR	2606732	Identifier	collection		2606594	0					
ANR	2606733	Identifier	NULL		2606594	1					
ANR	2606734	CompoundStatement		23:27:819:819	2606594	1					
ANR	2606735	ExpressionStatement	"cout << ""Error: Failed to construct collection on line "" << line_number << ""."" << endl"	750:3:22932:23024	2606594	0	True				
ANR	2606736	ShiftExpression	"cout << ""Error: Failed to construct collection on line "" << line_number << ""."" << endl"		2606594	0		<<			
ANR	2606737	Identifier	cout		2606594	0					
ANR	2606738	ShiftExpression	"""Error: Failed to construct collection on line "" << line_number << ""."" << endl"		2606594	1		<<			
ANR	2606739	PrimaryExpression	"""Error: Failed to construct collection on line """		2606594	0					
ANR	2606740	ShiftExpression	"line_number << ""."" << endl"		2606594	1		<<			
ANR	2606741	Identifier	line_number		2606594	0					
ANR	2606742	ShiftExpression	"""."" << endl"		2606594	1		<<			
ANR	2606743	PrimaryExpression	"""."""		2606594	0					
ANR	2606744	Identifier	endl		2606594	1					
ANR	2606745	ExpressionStatement	errors -> IncrementErrors ( )	752:3:23029:23054	2606594	1	True				
ANR	2606746	CallExpression	errors -> IncrementErrors ( )		2606594	0					
ANR	2606747	Callee	errors -> IncrementErrors		2606594	0					
ANR	2606748	PtrMemberAccess	errors -> IncrementErrors		2606594	0					
ANR	2606749	Identifier	errors		2606594	0					
ANR	2606750	Identifier	IncrementErrors		2606594	1					
ANR	2606751	ArgumentList			2606594	1					
ANR	2606752	ElseStatement	else		2606594	0					
ANR	2606753	CompoundStatement		27:9:957:957	2606594	0					
ANR	2606754	ExpressionStatement	collections [ collection_name ] = collection	754:3:23070:23111	2606594	0	True				
ANR	2606755	AssignmentExpression	collections [ collection_name ] = collection		2606594	0		=			
ANR	2606756	ArrayIndexing	collections [ collection_name ]		2606594	0					
ANR	2606757	Identifier	collections		2606594	0					
ANR	2606758	Identifier	collection_name		2606594	1					
ANR	2606759	Identifier	collection		2606594	1					
ANR	2606760	ExpressionStatement	"cout << ""OK: Made collection named "" << collection_name << "" on line "" << line_number << "".\\n"""	755:3:23116:23216	2606594	1	True				
ANR	2606761	ShiftExpression	"cout << ""OK: Made collection named "" << collection_name << "" on line "" << line_number << "".\\n"""		2606594	0		<<			
ANR	2606762	Identifier	cout		2606594	0					
ANR	2606763	ShiftExpression	"""OK: Made collection named "" << collection_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606764	PrimaryExpression	"""OK: Made collection named """		2606594	0					
ANR	2606765	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606766	Identifier	collection_name		2606594	0					
ANR	2606767	ShiftExpression	""" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606768	PrimaryExpression	""" on line """		2606594	0					
ANR	2606769	ShiftExpression	"line_number << "".\\n"""		2606594	1		<<			
ANR	2606770	Identifier	line_number		2606594	0					
ANR	2606771	PrimaryExpression	""".\\n"""		2606594	1					
ANR	2606772	IfStatement	"if ( log_name . compare ( """" ) )"		2606594	2					
ANR	2606773	Condition	"log_name . compare ( """" )"	757:7:23225:23244	2606594	0	True				
ANR	2606774	CallExpression	"log_name . compare ( """" )"		2606594	0					
ANR	2606775	Callee	log_name . compare		2606594	0					
ANR	2606776	MemberAccess	log_name . compare		2606594	0					
ANR	2606777	Identifier	log_name		2606594	0					
ANR	2606778	Identifier	compare		2606594	1					
ANR	2606779	ArgumentList	""""""		2606594	1					
ANR	2606780	Argument	""""""		2606594	0					
ANR	2606781	PrimaryExpression	""""""		2606594	0					
ANR	2606782	CompoundStatement		32:4:1145:1157	2606594	1					
ANR	2606783	IdentifierDeclStatement	bool success ;	758:4:23253:23265	2606594	0	True				
ANR	2606784	IdentifierDecl	success		2606594	0					
ANR	2606785	IdentifierDeclType	bool		2606594	0					
ANR	2606786	Identifier	success		2606594	1					
ANR	2606787	ExpressionStatement	"success = collection -> InitializeFromLog ( log_name , """" , """" )"	759:4:23271:23328	2606594	1	True				
ANR	2606788	AssignmentExpression	"success = collection -> InitializeFromLog ( log_name , """" , """" )"		2606594	0		=			
ANR	2606789	Identifier	success		2606594	0					
ANR	2606790	CallExpression	"collection -> InitializeFromLog ( log_name , """" , """" )"		2606594	1					
ANR	2606791	Callee	collection -> InitializeFromLog		2606594	0					
ANR	2606792	PtrMemberAccess	collection -> InitializeFromLog		2606594	0					
ANR	2606793	Identifier	collection		2606594	0					
ANR	2606794	Identifier	InitializeFromLog		2606594	1					
ANR	2606795	ArgumentList	log_name		2606594	1					
ANR	2606796	Argument	log_name		2606594	0					
ANR	2606797	Identifier	log_name		2606594	0					
ANR	2606798	Argument	""""""		2606594	1					
ANR	2606799	PrimaryExpression	""""""		2606594	0					
ANR	2606800	Argument	""""""		2606594	2					
ANR	2606801	PrimaryExpression	""""""		2606594	0					
ANR	2606802	IfStatement	if ( success )		2606594	2					
ANR	2606803	Condition	success	760:8:23338:23344	2606594	0	True				
ANR	2606804	Identifier	success		2606594	0					
ANR	2606805	CompoundStatement		34:17:1239:1239	2606594	1					
ANR	2606806	ExpressionStatement	"cout << ""OK: Initialized "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""	761:5:23354:23470	2606594	0	True				
ANR	2606807	ShiftExpression	"cout << ""OK: Initialized "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	0		<<			
ANR	2606808	Identifier	cout		2606594	0					
ANR	2606809	ShiftExpression	"""OK: Initialized "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606810	PrimaryExpression	"""OK: Initialized """		2606594	0					
ANR	2606811	ShiftExpression	"collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606812	Identifier	collection_name		2606594	0					
ANR	2606813	ShiftExpression	""" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606814	PrimaryExpression	""" from """		2606594	0					
ANR	2606815	ShiftExpression	"log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606816	Identifier	log_name		2606594	0					
ANR	2606817	ShiftExpression	""" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606818	PrimaryExpression	""" on line """		2606594	0					
ANR	2606819	ShiftExpression	"line_number << "".\\n"""		2606594	1		<<			
ANR	2606820	Identifier	line_number		2606594	0					
ANR	2606821	PrimaryExpression	""".\\n"""		2606594	1					
ANR	2606822	ElseStatement	else		2606594	0					
ANR	2606823	CompoundStatement		37:11:1375:1375	2606594	0					
ANR	2606824	ExpressionStatement	"cout << ""Error: Couldn't initialize "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""	764:5:23490:23626	2606594	0	True				
ANR	2606825	ShiftExpression	"cout << ""Error: Couldn't initialize "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	0		<<			
ANR	2606826	Identifier	cout		2606594	0					
ANR	2606827	ShiftExpression	"""Error: Couldn't initialize "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606828	PrimaryExpression	"""Error: Couldn't initialize """		2606594	0					
ANR	2606829	ShiftExpression	"collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606830	Identifier	collection_name		2606594	0					
ANR	2606831	ShiftExpression	""" from "" << log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606832	PrimaryExpression	""" from """		2606594	0					
ANR	2606833	ShiftExpression	"log_name << "" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606834	Identifier	log_name		2606594	0					
ANR	2606835	ShiftExpression	""" on line "" << line_number << "".\\n"""		2606594	1		<<			
ANR	2606836	PrimaryExpression	""" on line """		2606594	0					
ANR	2606837	ShiftExpression	"line_number << "".\\n"""		2606594	1		<<			
ANR	2606838	Identifier	line_number		2606594	0					
ANR	2606839	PrimaryExpression	""".\\n"""		2606594	1					
ANR	2606840	ExpressionStatement	errors -> IncrementErrors ( )	767:5:23633:23658	2606594	1	True				
ANR	2606841	CallExpression	errors -> IncrementErrors ( )		2606594	0					
ANR	2606842	Callee	errors -> IncrementErrors		2606594	0					
ANR	2606843	PtrMemberAccess	errors -> IncrementErrors		2606594	0					
ANR	2606844	Identifier	errors		2606594	0					
ANR	2606845	Identifier	IncrementErrors		2606594	1					
ANR	2606846	ArgumentList			2606594	1					
ANR	2606847	ReturnStatement	return ;	773:1:23680:23686	2606594	7	True				
ANR	2606848	ReturnType	static void		2606594	1					
ANR	2606849	Identifier	process_make_collection		2606594	2					
ANR	2606850	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2606594	3					
ANR	2606851	Parameter	const string & line	723:36:21978:21995	2606594	0	True				
ANR	2606852	ParameterType	const string &		2606594	0					
ANR	2606853	Identifier	line		2606594	1					
ANR	2606854	Parameter	int token_start	724:8:22006:22020	2606594	1	True				
ANR	2606855	ParameterType	int		2606594	0					
ANR	2606856	Identifier	token_start		2606594	1					
ANR	2606857	Parameter	int line_number	724:25:22023:22037	2606594	2	True				
ANR	2606858	ParameterType	int		2606594	0					
ANR	2606859	Identifier	line_number		2606594	1					
ANR	2606860	Parameter	const Parameters & parameters	725:8:22049:22076	2606594	3	True				
ANR	2606861	ParameterType	const Parameters &		2606594	0					
ANR	2606862	Identifier	parameters		2606594	1					
ANR	2606863	Parameter	ErrorCount * errors	726:8:22087:22104	2606594	4	True				
ANR	2606864	ParameterType	ErrorCount *		2606594	0					
ANR	2606865	Identifier	errors		2606594	1					
ANR	2606866	CFGEntryNode	ENTRY		2606594		True				
ANR	2606867	CFGExitNode	EXIT		2606594		True				
ANR	2606868	Symbol	token_start		2606594						
ANR	2606869	Symbol	NULL		2606594						
ANR	2606870	Symbol	& token_start		2606594						
ANR	2606871	Symbol	log_name		2606594						
ANR	2606872	Symbol	* collection		2606594						
ANR	2606873	Symbol	line		2606594						
ANR	2606874	Symbol	extra_text . compare		2606594						
ANR	2606875	Symbol	collection		2606594						
ANR	2606876	Symbol	* collections		2606594						
ANR	2606877	Symbol	extra_text		2606594						
ANR	2606878	Symbol	extract_token		2606594						
ANR	2606879	Symbol	collections		2606594						
ANR	2606880	Symbol	line_number		2606594						
ANR	2606881	Symbol	success		2606594						
ANR	2606882	Symbol	* collection_name		2606594						
ANR	2606883	Symbol	parameters		2606594						
ANR	2606884	Symbol	collection_name . compare		2606594						
ANR	2606885	Symbol	collection -> InitializeFromLog		2606594						
ANR	2606886	Symbol	errors		2606594						
ANR	2606887	Symbol	collection_name		2606594						
ANR	2606888	Symbol	log_name . compare		2606594						
ANR	2606889	Function	process_add_to_collection	782:0:23893:26116							
ANR	2606890	FunctionDef	"process_add_to_collection (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2606889	0					
ANR	2606891	CompoundStatement		786:0:24060:26116	2606889	0					
ANR	2606892	IdentifierDeclStatement	"string collection_name , classad_name ;"	787:1:24063:24099	2606889	0	True				
ANR	2606893	IdentifierDecl	collection_name		2606889	0					
ANR	2606894	IdentifierDeclType	string		2606889	0					
ANR	2606895	Identifier	collection_name		2606889	1					
ANR	2606896	IdentifierDecl	classad_name		2606889	1					
ANR	2606897	IdentifierDeclType	string		2606889	0					
ANR	2606898	Identifier	classad_name		2606889	1					
ANR	2606899	IdentifierDeclStatement	string extra_text ;	788:1:24102:24119	2606889	1	True				
ANR	2606900	IdentifierDecl	extra_text		2606889	0					
ANR	2606901	IdentifierDeclType	string		2606889	0					
ANR	2606902	Identifier	extra_text		2606889	1					
ANR	2606903	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	790:1:24123:24174	2606889	2	True				
ANR	2606904	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		2606889	0		=			
ANR	2606905	Identifier	collection_name		2606889	0					
ANR	2606906	CallExpression	"extract_token ( & token_start , line )"		2606889	1					
ANR	2606907	Callee	extract_token		2606889	0					
ANR	2606908	Identifier	extract_token		2606889	0					
ANR	2606909	ArgumentList	& token_start		2606889	1					
ANR	2606910	Argument	& token_start		2606889	0					
ANR	2606911	UnaryOperationExpression	& token_start		2606889	0					
ANR	2606912	UnaryOperator	&		2606889	0					
ANR	2606913	Identifier	token_start		2606889	1					
ANR	2606914	Argument	line		2606889	1					
ANR	2606915	Identifier	line		2606889	0					
ANR	2606916	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	791:1:24177:24225	2606889	3	True				
ANR	2606917	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		2606889	0		=			
ANR	2606918	Identifier	classad_name		2606889	0					
ANR	2606919	CallExpression	"extract_token ( & token_start , line )"		2606889	1					
ANR	2606920	Callee	extract_token		2606889	0					
ANR	2606921	Identifier	extract_token		2606889	0					
ANR	2606922	ArgumentList	& token_start		2606889	1					
ANR	2606923	Argument	& token_start		2606889	0					
ANR	2606924	UnaryOperationExpression	& token_start		2606889	0					
ANR	2606925	UnaryOperator	&		2606889	0					
ANR	2606926	Identifier	token_start		2606889	1					
ANR	2606927	Argument	line		2606889	1					
ANR	2606928	Identifier	line		2606889	0					
ANR	2606929	ExpressionStatement	"extra_text = extract_token ( & token_start , line )"	792:1:24228:24274	2606889	4	True				
ANR	2606930	AssignmentExpression	"extra_text = extract_token ( & token_start , line )"		2606889	0		=			
ANR	2606931	Identifier	extra_text		2606889	0					
ANR	2606932	CallExpression	"extract_token ( & token_start , line )"		2606889	1					
ANR	2606933	Callee	extract_token		2606889	0					
ANR	2606934	Identifier	extract_token		2606889	0					
ANR	2606935	ArgumentList	& token_start		2606889	1					
ANR	2606936	Argument	& token_start		2606889	0					
ANR	2606937	UnaryOperationExpression	& token_start		2606889	0					
ANR	2606938	UnaryOperator	&		2606889	0					
ANR	2606939	Identifier	token_start		2606889	1					
ANR	2606940	Argument	line		2606889	1					
ANR	2606941	Identifier	line		2606889	0					
ANR	2606942	IfStatement	"if ( ! collection_name . compare ( """" ) || ! collection_name . compare ( """" ) )"		2606889	5					
ANR	2606943	Condition	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"	793:5:24281:24340	2606889	0	True				
ANR	2606944	OrExpression	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"		2606889	0		||			
ANR	2606945	UnaryOperationExpression	"! collection_name . compare ( """" )"		2606889	0					
ANR	2606946	UnaryOperator	!		2606889	0					
ANR	2606947	CallExpression	"collection_name . compare ( """" )"		2606889	1					
ANR	2606948	Callee	collection_name . compare		2606889	0					
ANR	2606949	MemberAccess	collection_name . compare		2606889	0					
ANR	2606950	Identifier	collection_name		2606889	0					
ANR	2606951	Identifier	compare		2606889	1					
ANR	2606952	ArgumentList	""""""		2606889	1					
ANR	2606953	Argument	""""""		2606889	0					
ANR	2606954	PrimaryExpression	""""""		2606889	0					
ANR	2606955	UnaryOperationExpression	"! collection_name . compare ( """" )"		2606889	1					
ANR	2606956	UnaryOperator	!		2606889	0					
ANR	2606957	CallExpression	"collection_name . compare ( """" )"		2606889	1					
ANR	2606958	Callee	collection_name . compare		2606889	0					
ANR	2606959	MemberAccess	collection_name . compare		2606889	0					
ANR	2606960	Identifier	collection_name		2606889	0					
ANR	2606961	Identifier	compare		2606889	1					
ANR	2606962	ArgumentList	""""""		2606889	1					
ANR	2606963	Argument	""""""		2606889	0					
ANR	2606964	PrimaryExpression	""""""		2606889	0					
ANR	2606965	CompoundStatement		8:67:282:282	2606889	1					
ANR	2606966	ExpressionStatement	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"	794:2:24347:24445	2606889	0	True				
ANR	2606967	ShiftExpression	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		2606889	0		<<			
ANR	2606968	Identifier	cout		2606889	0					
ANR	2606969	ShiftExpression	"""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2606970	PrimaryExpression	"""Error: Missing add-to-collection information on line """		2606889	0					
ANR	2606971	ShiftExpression	"line_number << ""."" << endl"		2606889	1		<<			
ANR	2606972	Identifier	line_number		2606889	0					
ANR	2606973	ShiftExpression	"""."" << endl"		2606889	1		<<			
ANR	2606974	PrimaryExpression	"""."""		2606889	0					
ANR	2606975	Identifier	endl		2606889	1					
ANR	2606976	ExpressionStatement	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"	796:2:24449:24532	2606889	1	True				
ANR	2606977	ShiftExpression	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		2606889	0		<<			
ANR	2606978	Identifier	cout		2606889	0					
ANR	2606979	ShiftExpression	"""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		2606889	1		<<			
ANR	2606980	PrimaryExpression	"""       Format: add-to-collection <collection-name> <classad-name>"""		2606889	0					
ANR	2606981	Identifier	endl		2606889	1					
ANR	2606982	ExpressionStatement	errors -> IncrementErrors ( )	797:2:24536:24561	2606889	2	True				
ANR	2606983	CallExpression	errors -> IncrementErrors ( )		2606889	0					
ANR	2606984	Callee	errors -> IncrementErrors		2606889	0					
ANR	2606985	PtrMemberAccess	errors -> IncrementErrors		2606889	0					
ANR	2606986	Identifier	errors		2606889	0					
ANR	2606987	Identifier	IncrementErrors		2606889	1					
ANR	2606988	ArgumentList			2606889	1					
ANR	2606989	ElseStatement	else		2606889	0					
ANR	2606990	IfStatement	"if ( extra_text . compare ( """" ) )"		2606889	0					
ANR	2606991	Condition	"extra_text . compare ( """" )"	799:10:24576:24597	2606889	0	True				
ANR	2606992	CallExpression	"extra_text . compare ( """" )"		2606889	0					
ANR	2606993	Callee	extra_text . compare		2606889	0					
ANR	2606994	MemberAccess	extra_text . compare		2606889	0					
ANR	2606995	Identifier	extra_text		2606889	0					
ANR	2606996	Identifier	compare		2606889	1					
ANR	2606997	ArgumentList	""""""		2606889	1					
ANR	2606998	Argument	""""""		2606889	0					
ANR	2606999	PrimaryExpression	""""""		2606889	0					
ANR	2607000	CompoundStatement		14:34:539:539	2606889	1					
ANR	2607001	ExpressionStatement	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"	800:2:24604:24698	2606889	0	True				
ANR	2607002	ShiftExpression	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		2606889	0		<<			
ANR	2607003	Identifier	cout		2606889	0					
ANR	2607004	ShiftExpression	"""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2607005	PrimaryExpression	"""Error: Extra make-collection information on line """		2606889	0					
ANR	2607006	ShiftExpression	"line_number << ""."" << endl"		2606889	1		<<			
ANR	2607007	Identifier	line_number		2606889	0					
ANR	2607008	ShiftExpression	"""."" << endl"		2606889	1		<<			
ANR	2607009	PrimaryExpression	"""."""		2606889	0					
ANR	2607010	Identifier	endl		2606889	1					
ANR	2607011	ExpressionStatement	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"	802:2:24702:24785	2606889	1	True				
ANR	2607012	ShiftExpression	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		2606889	0		<<			
ANR	2607013	Identifier	cout		2606889	0					
ANR	2607014	ShiftExpression	"""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		2606889	1		<<			
ANR	2607015	PrimaryExpression	"""       Format: add-to-collection <collection-name> <classad-name>"""		2606889	0					
ANR	2607016	Identifier	endl		2606889	1					
ANR	2607017	ExpressionStatement	errors -> IncrementErrors ( )	803:2:24789:24814	2606889	2	True				
ANR	2607018	CallExpression	errors -> IncrementErrors ( )		2606889	0					
ANR	2607019	Callee	errors -> IncrementErrors		2606889	0					
ANR	2607020	PtrMemberAccess	errors -> IncrementErrors		2606889	0					
ANR	2607021	Identifier	errors		2606889	0					
ANR	2607022	Identifier	IncrementErrors		2606889	1					
ANR	2607023	ArgumentList			2606889	1					
ANR	2607024	ElseStatement	else		2606889	0					
ANR	2607025	CompoundStatement		22:2:801:827	2606889	0					
ANR	2607026	IdentifierDeclStatement	ClassAdCollection * collection ;	806:2:24829:24858	2606889	0	True				
ANR	2607027	IdentifierDecl	* collection		2606889	0					
ANR	2607028	IdentifierDeclType	ClassAdCollection *		2606889	0					
ANR	2607029	Identifier	collection		2606889	1					
ANR	2607030	IdentifierDeclStatement	ClassAd * classad ;	807:2:24862:24888	2606889	1	True				
ANR	2607031	IdentifierDecl	* classad		2606889	0					
ANR	2607032	IdentifierDeclType	ClassAd *		2606889	0					
ANR	2607033	Identifier	classad		2606889	1					
ANR	2607034	ExpressionStatement	collection = collections [ collection_name ]	809:2:24893:24934	2606889	2	True				
ANR	2607035	AssignmentExpression	collection = collections [ collection_name ]		2606889	0		=			
ANR	2607036	Identifier	collection		2606889	0					
ANR	2607037	ArrayIndexing	collections [ collection_name ]		2606889	1					
ANR	2607038	Identifier	collections		2606889	0					
ANR	2607039	Identifier	collection_name		2606889	1					
ANR	2607040	ExpressionStatement	classad = classads [ classad_name ]	810:2:24938:24970	2606889	3	True				
ANR	2607041	AssignmentExpression	classad = classads [ classad_name ]		2606889	0		=			
ANR	2607042	Identifier	classad		2606889	0					
ANR	2607043	ArrayIndexing	classads [ classad_name ]		2606889	1					
ANR	2607044	Identifier	classads		2606889	0					
ANR	2607045	Identifier	classad_name		2606889	1					
ANR	2607046	IfStatement	if ( collection == NULL )		2606889	4					
ANR	2607047	Condition	collection == NULL	811:6:24978:24995	2606889	0	True				
ANR	2607048	EqualityExpression	collection == NULL		2606889	0		==			
ANR	2607049	Identifier	collection		2606889	0					
ANR	2607050	Identifier	NULL		2606889	1					
ANR	2607051	CompoundStatement		26:27:938:938	2606889	1					
ANR	2607052	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"	812:3:25004:25113	2606889	0	True				
ANR	2607053	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		2606889	0		<<			
ANR	2607054	Identifier	cout		2606889	0					
ANR	2607055	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2607056	PrimaryExpression	"""Error: Unknown collection ("""		2606889	0					
ANR	2607057	ShiftExpression	"collection_name << "") on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2607058	Identifier	collection_name		2606889	0					
ANR	2607059	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2607060	PrimaryExpression	""") on line """		2606889	0					
ANR	2607061	ShiftExpression	"line_number << ""."" << endl"		2606889	1		<<			
ANR	2607062	Identifier	line_number		2606889	0					
ANR	2607063	ShiftExpression	"""."" << endl"		2606889	1		<<			
ANR	2607064	PrimaryExpression	"""."""		2606889	0					
ANR	2607065	Identifier	endl		2606889	1					
ANR	2607066	ExpressionStatement	errors -> IncrementErrors ( )	814:3:25118:25143	2606889	1	True				
ANR	2607067	CallExpression	errors -> IncrementErrors ( )		2606889	0					
ANR	2607068	Callee	errors -> IncrementErrors		2606889	0					
ANR	2607069	PtrMemberAccess	errors -> IncrementErrors		2606889	0					
ANR	2607070	Identifier	errors		2606889	0					
ANR	2607071	Identifier	IncrementErrors		2606889	1					
ANR	2607072	ArgumentList			2606889	1					
ANR	2607073	ElseStatement	else		2606889	0					
ANR	2607074	IfStatement	if ( classad == NULL )		2606889	0					
ANR	2607075	Condition	classad == NULL	815:13:25158:25172	2606889	0	True				
ANR	2607076	EqualityExpression	classad == NULL		2606889	0		==			
ANR	2607077	Identifier	classad		2606889	0					
ANR	2607078	Identifier	NULL		2606889	1					
ANR	2607079	CompoundStatement		30:31:1115:1115	2606889	1					
ANR	2607080	ExpressionStatement	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << ""."" << endl"	816:3:25181:25284	2606889	0	True				
ANR	2607081	ShiftExpression	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << ""."" << endl"		2606889	0		<<			
ANR	2607082	Identifier	cout		2606889	0					
ANR	2607083	ShiftExpression	"""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2607084	PrimaryExpression	"""Error: Unknown classad ("""		2606889	0					
ANR	2607085	ShiftExpression	"classad_name << "") on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2607086	Identifier	classad_name		2606889	0					
ANR	2607087	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2606889	1		<<			
ANR	2607088	PrimaryExpression	""") on line """		2606889	0					
ANR	2607089	ShiftExpression	"line_number << ""."" << endl"		2606889	1		<<			
ANR	2607090	Identifier	line_number		2606889	0					
ANR	2607091	ShiftExpression	"""."" << endl"		2606889	1		<<			
ANR	2607092	PrimaryExpression	"""."""		2606889	0					
ANR	2607093	Identifier	endl		2606889	1					
ANR	2607094	ExpressionStatement	errors -> IncrementErrors ( )	818:3:25289:25314	2606889	1	True				
ANR	2607095	CallExpression	errors -> IncrementErrors ( )		2606889	0					
ANR	2607096	Callee	errors -> IncrementErrors		2606889	0					
ANR	2607097	PtrMemberAccess	errors -> IncrementErrors		2606889	0					
ANR	2607098	Identifier	errors		2606889	0					
ANR	2607099	Identifier	IncrementErrors		2606889	1					
ANR	2607100	ArgumentList			2606889	1					
ANR	2607101	ElseStatement	else		2606889	0					
ANR	2607102	CompoundStatement		36:3:1271:1283	2606889	0					
ANR	2607103	IdentifierDeclStatement	bool success ;	821:3:25332:25344	2606889	0	True				
ANR	2607104	IdentifierDecl	success		2606889	0					
ANR	2607105	IdentifierDeclType	bool		2606889	0					
ANR	2607106	Identifier	success		2606889	1					
ANR	2607107	ExpressionStatement	"success = collection -> AddClassAd ( classad_name , classad )"	822:3:25349:25404	2606889	1	True				
ANR	2607108	AssignmentExpression	"success = collection -> AddClassAd ( classad_name , classad )"		2606889	0		=			
ANR	2607109	Identifier	success		2606889	0					
ANR	2607110	CallExpression	"collection -> AddClassAd ( classad_name , classad )"		2606889	1					
ANR	2607111	Callee	collection -> AddClassAd		2606889	0					
ANR	2607112	PtrMemberAccess	collection -> AddClassAd		2606889	0					
ANR	2607113	Identifier	collection		2606889	0					
ANR	2607114	Identifier	AddClassAd		2606889	1					
ANR	2607115	ArgumentList	classad_name		2606889	1					
ANR	2607116	Argument	classad_name		2606889	0					
ANR	2607117	Identifier	classad_name		2606889	0					
ANR	2607118	Argument	classad		2606889	1					
ANR	2607119	Identifier	classad		2606889	0					
ANR	2607120	IfStatement	if ( ! success )		2606889	2					
ANR	2607121	Condition	! success	823:7:25413:25420	2606889	0	True				
ANR	2607122	UnaryOperationExpression	! success		2606889	0					
ANR	2607123	UnaryOperator	!		2606889	0					
ANR	2607124	Identifier	success		2606889	1					
ANR	2607125	CompoundStatement		38:17:1362:1362	2606889	1					
ANR	2607126	ExpressionStatement	"cout << ""Error: couldn't add "" << classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""	824:4:25429:25549	2606889	0	True				
ANR	2607127	ShiftExpression	"cout << ""Error: couldn't add "" << classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""		2606889	0		<<			
ANR	2607128	Identifier	cout		2606889	0					
ANR	2607129	ShiftExpression	"""Error: couldn't add "" << classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607130	PrimaryExpression	"""Error: couldn't add """		2606889	0					
ANR	2607131	ShiftExpression	"classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607132	Identifier	classad_name		2606889	0					
ANR	2607133	ShiftExpression	""" to "" << collection_name << "" on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607134	PrimaryExpression	""" to """		2606889	0					
ANR	2607135	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607136	Identifier	collection_name		2606889	0					
ANR	2607137	ShiftExpression	""" on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607138	PrimaryExpression	""" on line """		2606889	0					
ANR	2607139	ShiftExpression	"line_number << "".\\n"""		2606889	1		<<			
ANR	2607140	Identifier	line_number		2606889	0					
ANR	2607141	PrimaryExpression	""".\\n"""		2606889	1					
ANR	2607142	ExpressionStatement	errors -> IncrementErrors ( )	826:4:25555:25580	2606889	1	True				
ANR	2607143	CallExpression	errors -> IncrementErrors ( )		2606889	0					
ANR	2607144	Callee	errors -> IncrementErrors		2606889	0					
ANR	2607145	PtrMemberAccess	errors -> IncrementErrors		2606889	0					
ANR	2607146	Identifier	errors		2606889	0					
ANR	2607147	Identifier	IncrementErrors		2606889	1					
ANR	2607148	ArgumentList			2606889	1					
ANR	2607149	ElseStatement	else		2606889	0					
ANR	2607150	CompoundStatement		44:4:1540:1561	2606889	0					
ANR	2607151	IdentifierDeclStatement	ClassAd * retrieved_ad ;	829:4:25601:25622	2606889	0	True				
ANR	2607152	IdentifierDecl	* retrieved_ad		2606889	0					
ANR	2607153	IdentifierDeclType	ClassAd *		2606889	0					
ANR	2607154	Identifier	retrieved_ad		2606889	1					
ANR	2607155	ExpressionStatement	retrieved_ad = collection -> GetClassAd ( classad_name )	830:4:25628:25679	2606889	1	True				
ANR	2607156	AssignmentExpression	retrieved_ad = collection -> GetClassAd ( classad_name )		2606889	0		=			
ANR	2607157	Identifier	retrieved_ad		2606889	0					
ANR	2607158	CallExpression	collection -> GetClassAd ( classad_name )		2606889	1					
ANR	2607159	Callee	collection -> GetClassAd		2606889	0					
ANR	2607160	PtrMemberAccess	collection -> GetClassAd		2606889	0					
ANR	2607161	Identifier	collection		2606889	0					
ANR	2607162	Identifier	GetClassAd		2606889	1					
ANR	2607163	ArgumentList	classad_name		2606889	1					
ANR	2607164	Argument	classad_name		2606889	0					
ANR	2607165	Identifier	classad_name		2606889	0					
ANR	2607166	IfStatement	if ( retrieved_ad != classad )		2606889	2					
ANR	2607167	Condition	retrieved_ad != classad	831:8:25689:25711	2606889	0	True				
ANR	2607168	EqualityExpression	retrieved_ad != classad		2606889	0		!=			
ANR	2607169	Identifier	retrieved_ad		2606889	0					
ANR	2607170	Identifier	classad		2606889	1					
ANR	2607171	CompoundStatement		46:33:1653:1653	2606889	1					
ANR	2607172	ExpressionStatement	"cout << ""Error: added "" << classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""	832:5:25721:25863	2606889	0	True				
ANR	2607173	ShiftExpression	"cout << ""Error: added "" << classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		2606889	0		<<			
ANR	2607174	Identifier	cout		2606889	0					
ANR	2607175	ShiftExpression	"""Error: added "" << classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607176	PrimaryExpression	"""Error: added """		2606889	0					
ANR	2607177	ShiftExpression	"classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607178	Identifier	classad_name		2606889	0					
ANR	2607179	ShiftExpression	""" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607180	PrimaryExpression	""" to """		2606889	0					
ANR	2607181	ShiftExpression	"collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607182	Identifier	collection_name		2606889	0					
ANR	2607183	ShiftExpression	""" but it's not there, on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607184	PrimaryExpression	""" but it's not there, on line """		2606889	0					
ANR	2607185	ShiftExpression	"line_number << "".\\n"""		2606889	1		<<			
ANR	2607186	Identifier	line_number		2606889	0					
ANR	2607187	PrimaryExpression	""".\\n"""		2606889	1					
ANR	2607188	ExpressionStatement	errors -> IncrementErrors ( )	835:5:25870:25895	2606889	1	True				
ANR	2607189	CallExpression	errors -> IncrementErrors ( )		2606889	0					
ANR	2607190	Callee	errors -> IncrementErrors		2606889	0					
ANR	2607191	PtrMemberAccess	errors -> IncrementErrors		2606889	0					
ANR	2607192	Identifier	errors		2606889	0					
ANR	2607193	Identifier	IncrementErrors		2606889	1					
ANR	2607194	ArgumentList			2606889	1					
ANR	2607195	ElseStatement	else		2606889	0					
ANR	2607196	CompoundStatement		52:9:1851:1851	2606889	0					
ANR	2607197	ExpressionStatement	"cout << ""OK: added "" << classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""	838:5:25919:26039	2606889	0	True				
ANR	2607198	ShiftExpression	"cout << ""OK: added "" << classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""		2606889	0		<<			
ANR	2607199	Identifier	cout		2606889	0					
ANR	2607200	ShiftExpression	"""OK: added "" << classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607201	PrimaryExpression	"""OK: added """		2606889	0					
ANR	2607202	ShiftExpression	"classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607203	Identifier	classad_name		2606889	0					
ANR	2607204	ShiftExpression	""" to "" << collection_name << "", on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607205	PrimaryExpression	""" to """		2606889	0					
ANR	2607206	ShiftExpression	"collection_name << "", on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607207	Identifier	collection_name		2606889	0					
ANR	2607208	ShiftExpression	""", on line "" << line_number << "".\\n"""		2606889	1		<<			
ANR	2607209	PrimaryExpression	""", on line """		2606889	0					
ANR	2607210	ShiftExpression	"line_number << "".\\n"""		2606889	1		<<			
ANR	2607211	Identifier	line_number		2606889	0					
ANR	2607212	PrimaryExpression	""".\\n"""		2606889	1					
ANR	2607213	ExpressionStatement	mark_classad_in_collection ( classad_name )	841:5:26046:26086	2606889	1	True				
ANR	2607214	CallExpression	mark_classad_in_collection ( classad_name )		2606889	0					
ANR	2607215	Callee	mark_classad_in_collection		2606889	0					
ANR	2607216	Identifier	mark_classad_in_collection		2606889	0					
ANR	2607217	ArgumentList	classad_name		2606889	1					
ANR	2607218	Argument	classad_name		2606889	0					
ANR	2607219	Identifier	classad_name		2606889	0					
ANR	2607220	ReturnStatement	return ;	847:1:26108:26114	2606889	6	True				
ANR	2607221	ReturnType	static void		2606889	1					
ANR	2607222	Identifier	process_add_to_collection		2606889	2					
ANR	2607223	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2606889	3					
ANR	2607224	Parameter	const string & line	782:38:23931:23948	2606889	0	True				
ANR	2607225	ParameterType	const string &		2606889	0					
ANR	2607226	Identifier	line		2606889	1					
ANR	2607227	Parameter	int token_start	783:8:23959:23973	2606889	1	True				
ANR	2607228	ParameterType	int		2606889	0					
ANR	2607229	Identifier	token_start		2606889	1					
ANR	2607230	Parameter	int line_number	783:25:23976:23990	2606889	2	True				
ANR	2607231	ParameterType	int		2606889	0					
ANR	2607232	Identifier	line_number		2606889	1					
ANR	2607233	Parameter	const Parameters & parameters	784:8:24002:24029	2606889	3	True				
ANR	2607234	ParameterType	const Parameters &		2606889	0					
ANR	2607235	Identifier	parameters		2606889	1					
ANR	2607236	Parameter	ErrorCount * errors	785:8:24040:24057	2606889	4	True				
ANR	2607237	ParameterType	ErrorCount *		2606889	0					
ANR	2607238	Identifier	errors		2606889	1					
ANR	2607239	CFGEntryNode	ENTRY		2606889		True				
ANR	2607240	CFGExitNode	EXIT		2606889		True				
ANR	2607241	Symbol	& token_start		2606889						
ANR	2607242	Symbol	collection -> GetClassAd		2606889						
ANR	2607243	Symbol	line		2606889						
ANR	2607244	Symbol	extra_text . compare		2606889						
ANR	2607245	Symbol	* classads		2606889						
ANR	2607246	Symbol	collections		2606889						
ANR	2607247	Symbol	line_number		2606889						
ANR	2607248	Symbol	classad_name		2606889						
ANR	2607249	Symbol	* collection_name		2606889						
ANR	2607250	Symbol	collection_name . compare		2606889						
ANR	2607251	Symbol	* classad_name		2606889						
ANR	2607252	Symbol	collection -> AddClassAd		2606889						
ANR	2607253	Symbol	token_start		2606889						
ANR	2607254	Symbol	NULL		2606889						
ANR	2607255	Symbol	* collection		2606889						
ANR	2607256	Symbol	collection		2606889						
ANR	2607257	Symbol	* collections		2606889						
ANR	2607258	Symbol	extra_text		2606889						
ANR	2607259	Symbol	extract_token		2606889						
ANR	2607260	Symbol	success		2606889						
ANR	2607261	Symbol	classad		2606889						
ANR	2607262	Symbol	retrieved_ad		2606889						
ANR	2607263	Symbol	parameters		2606889						
ANR	2607264	Symbol	classads		2606889						
ANR	2607265	Symbol	errors		2606889						
ANR	2607266	Symbol	collection_name		2606889						
ANR	2607267	Function	process_truncate_log	856:0:26316:27515							
ANR	2607268	FunctionDef	"process_truncate_log (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2607267	0					
ANR	2607269	CompoundStatement		861:0:26459:27515	2607267	0					
ANR	2607270	IdentifierDeclStatement	string collection_name ;	862:1:26462:26484	2607267	0	True				
ANR	2607271	IdentifierDecl	collection_name		2607267	0					
ANR	2607272	IdentifierDeclType	string		2607267	0					
ANR	2607273	Identifier	collection_name		2607267	1					
ANR	2607274	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	864:1:26488:26539	2607267	1	True				
ANR	2607275	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		2607267	0		=			
ANR	2607276	Identifier	collection_name		2607267	0					
ANR	2607277	CallExpression	"extract_token ( & token_start , line )"		2607267	1					
ANR	2607278	Callee	extract_token		2607267	0					
ANR	2607279	Identifier	extract_token		2607267	0					
ANR	2607280	ArgumentList	& token_start		2607267	1					
ANR	2607281	Argument	& token_start		2607267	0					
ANR	2607282	UnaryOperationExpression	& token_start		2607267	0					
ANR	2607283	UnaryOperator	&		2607267	0					
ANR	2607284	Identifier	token_start		2607267	1					
ANR	2607285	Argument	line		2607267	1					
ANR	2607286	Identifier	line		2607267	0					
ANR	2607287	IfStatement	"if ( ! collection_name . compare ( """" ) || ! collection_name . compare ( """" ) )"		2607267	2					
ANR	2607288	Condition	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"	865:5:26546:26605	2607267	0	True				
ANR	2607289	OrExpression	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"		2607267	0		||			
ANR	2607290	UnaryOperationExpression	"! collection_name . compare ( """" )"		2607267	0					
ANR	2607291	UnaryOperator	!		2607267	0					
ANR	2607292	CallExpression	"collection_name . compare ( """" )"		2607267	1					
ANR	2607293	Callee	collection_name . compare		2607267	0					
ANR	2607294	MemberAccess	collection_name . compare		2607267	0					
ANR	2607295	Identifier	collection_name		2607267	0					
ANR	2607296	Identifier	compare		2607267	1					
ANR	2607297	ArgumentList	""""""		2607267	1					
ANR	2607298	Argument	""""""		2607267	0					
ANR	2607299	PrimaryExpression	""""""		2607267	0					
ANR	2607300	UnaryOperationExpression	"! collection_name . compare ( """" )"		2607267	1					
ANR	2607301	UnaryOperator	!		2607267	0					
ANR	2607302	CallExpression	"collection_name . compare ( """" )"		2607267	1					
ANR	2607303	Callee	collection_name . compare		2607267	0					
ANR	2607304	MemberAccess	collection_name . compare		2607267	0					
ANR	2607305	Identifier	collection_name		2607267	0					
ANR	2607306	Identifier	compare		2607267	1					
ANR	2607307	ArgumentList	""""""		2607267	1					
ANR	2607308	Argument	""""""		2607267	0					
ANR	2607309	PrimaryExpression	""""""		2607267	0					
ANR	2607310	CompoundStatement		5:67:148:148	2607267	1					
ANR	2607311	ExpressionStatement	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"	866:2:26612:26710	2607267	0	True				
ANR	2607312	ShiftExpression	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		2607267	0		<<			
ANR	2607313	Identifier	cout		2607267	0					
ANR	2607314	ShiftExpression	"""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		2607267	1		<<			
ANR	2607315	PrimaryExpression	"""Error: Missing add-to-collection information on line """		2607267	0					
ANR	2607316	ShiftExpression	"line_number << ""."" << endl"		2607267	1		<<			
ANR	2607317	Identifier	line_number		2607267	0					
ANR	2607318	ShiftExpression	"""."" << endl"		2607267	1		<<			
ANR	2607319	PrimaryExpression	"""."""		2607267	0					
ANR	2607320	Identifier	endl		2607267	1					
ANR	2607321	ExpressionStatement	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"	868:2:26714:26797	2607267	1	True				
ANR	2607322	ShiftExpression	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		2607267	0		<<			
ANR	2607323	Identifier	cout		2607267	0					
ANR	2607324	ShiftExpression	"""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		2607267	1		<<			
ANR	2607325	PrimaryExpression	"""       Format: add-to-collection <collection-name> <classad-name>"""		2607267	0					
ANR	2607326	Identifier	endl		2607267	1					
ANR	2607327	ExpressionStatement	errors -> IncrementErrors ( )	869:2:26801:26826	2607267	2	True				
ANR	2607328	CallExpression	errors -> IncrementErrors ( )		2607267	0					
ANR	2607329	Callee	errors -> IncrementErrors		2607267	0					
ANR	2607330	PtrMemberAccess	errors -> IncrementErrors		2607267	0					
ANR	2607331	Identifier	errors		2607267	0					
ANR	2607332	Identifier	IncrementErrors		2607267	1					
ANR	2607333	ArgumentList			2607267	1					
ANR	2607334	ElseStatement	else		2607267	0					
ANR	2607335	CompoundStatement		12:2:381:410	2607267	0					
ANR	2607336	IdentifierDeclStatement	ClassAdCollection * collection ;	872:2:26841:26870	2607267	0	True				
ANR	2607337	IdentifierDecl	* collection		2607267	0					
ANR	2607338	IdentifierDeclType	ClassAdCollection *		2607267	0					
ANR	2607339	Identifier	collection		2607267	1					
ANR	2607340	ExpressionStatement	collection = collections [ collection_name ]	874:2:26875:26916	2607267	1	True				
ANR	2607341	AssignmentExpression	collection = collections [ collection_name ]		2607267	0		=			
ANR	2607342	Identifier	collection		2607267	0					
ANR	2607343	ArrayIndexing	collections [ collection_name ]		2607267	1					
ANR	2607344	Identifier	collections		2607267	0					
ANR	2607345	Identifier	collection_name		2607267	1					
ANR	2607346	IfStatement	if ( collection == NULL )		2607267	2					
ANR	2607347	Condition	collection == NULL	875:6:26924:26941	2607267	0	True				
ANR	2607348	EqualityExpression	collection == NULL		2607267	0		==			
ANR	2607349	Identifier	collection		2607267	0					
ANR	2607350	Identifier	NULL		2607267	1					
ANR	2607351	CompoundStatement		15:27:485:485	2607267	1					
ANR	2607352	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"	876:3:26950:27059	2607267	0	True				
ANR	2607353	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		2607267	0		<<			
ANR	2607354	Identifier	cout		2607267	0					
ANR	2607355	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		2607267	1		<<			
ANR	2607356	PrimaryExpression	"""Error: Unknown collection ("""		2607267	0					
ANR	2607357	ShiftExpression	"collection_name << "") on line "" << line_number << ""."" << endl"		2607267	1		<<			
ANR	2607358	Identifier	collection_name		2607267	0					
ANR	2607359	ShiftExpression	""") on line "" << line_number << ""."" << endl"		2607267	1		<<			
ANR	2607360	PrimaryExpression	""") on line """		2607267	0					
ANR	2607361	ShiftExpression	"line_number << ""."" << endl"		2607267	1		<<			
ANR	2607362	Identifier	line_number		2607267	0					
ANR	2607363	ShiftExpression	"""."" << endl"		2607267	1		<<			
ANR	2607364	PrimaryExpression	"""."""		2607267	0					
ANR	2607365	Identifier	endl		2607267	1					
ANR	2607366	ExpressionStatement	errors -> IncrementErrors ( )	878:3:27064:27089	2607267	1	True				
ANR	2607367	CallExpression	errors -> IncrementErrors ( )		2607267	0					
ANR	2607368	Callee	errors -> IncrementErrors		2607267	0					
ANR	2607369	PtrMemberAccess	errors -> IncrementErrors		2607267	0					
ANR	2607370	Identifier	errors		2607267	0					
ANR	2607371	Identifier	IncrementErrors		2607267	1					
ANR	2607372	ArgumentList			2607267	1					
ANR	2607373	ElseStatement	else		2607267	0					
ANR	2607374	CompoundStatement		21:3:647:659	2607267	0					
ANR	2607375	IdentifierDeclStatement	bool success ;	881:3:27107:27119	2607267	0	True				
ANR	2607376	IdentifierDecl	success		2607267	0					
ANR	2607377	IdentifierDeclType	bool		2607267	0					
ANR	2607378	Identifier	success		2607267	1					
ANR	2607379	ExpressionStatement	success = collection -> TruncateLog ( )	882:3:27124:27159	2607267	1	True				
ANR	2607380	AssignmentExpression	success = collection -> TruncateLog ( )		2607267	0		=			
ANR	2607381	Identifier	success		2607267	0					
ANR	2607382	CallExpression	collection -> TruncateLog ( )		2607267	1					
ANR	2607383	Callee	collection -> TruncateLog		2607267	0					
ANR	2607384	PtrMemberAccess	collection -> TruncateLog		2607267	0					
ANR	2607385	Identifier	collection		2607267	0					
ANR	2607386	Identifier	TruncateLog		2607267	1					
ANR	2607387	ArgumentList			2607267	1					
ANR	2607388	IfStatement	if ( ! success )		2607267	2					
ANR	2607389	Condition	! success	883:7:27168:27175	2607267	0	True				
ANR	2607390	UnaryOperationExpression	! success		2607267	0					
ANR	2607391	UnaryOperator	!		2607267	0					
ANR	2607392	Identifier	success		2607267	1					
ANR	2607393	CompoundStatement		23:17:718:718	2607267	1					
ANR	2607394	ExpressionStatement	"cout << ""Error: couldn't truncate log for "" << collection_name << "" on line "" << line_number << "".\\n"""	884:4:27184:27292	2607267	0	True				
ANR	2607395	ShiftExpression	"cout << ""Error: couldn't truncate log for "" << collection_name << "" on line "" << line_number << "".\\n"""		2607267	0		<<			
ANR	2607396	Identifier	cout		2607267	0					
ANR	2607397	ShiftExpression	"""Error: couldn't truncate log for "" << collection_name << "" on line "" << line_number << "".\\n"""		2607267	1		<<			
ANR	2607398	PrimaryExpression	"""Error: couldn't truncate log for """		2607267	0					
ANR	2607399	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		2607267	1		<<			
ANR	2607400	Identifier	collection_name		2607267	0					
ANR	2607401	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607267	1		<<			
ANR	2607402	PrimaryExpression	""" on line """		2607267	0					
ANR	2607403	ShiftExpression	"line_number << "".\\n"""		2607267	1		<<			
ANR	2607404	Identifier	line_number		2607267	0					
ANR	2607405	PrimaryExpression	""".\\n"""		2607267	1					
ANR	2607406	ExpressionStatement	"cout << ""  (Error is: "" << CondorErrMsg << "")\\n"""	886:4:27298:27346	2607267	1	True				
ANR	2607407	ShiftExpression	"cout << ""  (Error is: "" << CondorErrMsg << "")\\n"""		2607267	0		<<			
ANR	2607408	Identifier	cout		2607267	0					
ANR	2607409	ShiftExpression	"""  (Error is: "" << CondorErrMsg << "")\\n"""		2607267	1		<<			
ANR	2607410	PrimaryExpression	"""  (Error is: """		2607267	0					
ANR	2607411	ShiftExpression	"CondorErrMsg << "")\\n"""		2607267	1		<<			
ANR	2607412	Identifier	CondorErrMsg		2607267	0					
ANR	2607413	PrimaryExpression	""")\\n"""		2607267	1					
ANR	2607414	ExpressionStatement	errors -> IncrementErrors ( )	887:4:27352:27377	2607267	2	True				
ANR	2607415	CallExpression	errors -> IncrementErrors ( )		2607267	0					
ANR	2607416	Callee	errors -> IncrementErrors		2607267	0					
ANR	2607417	PtrMemberAccess	errors -> IncrementErrors		2607267	0					
ANR	2607418	Identifier	errors		2607267	0					
ANR	2607419	Identifier	IncrementErrors		2607267	1					
ANR	2607420	ArgumentList			2607267	1					
ANR	2607421	ElseStatement	else		2607267	0					
ANR	2607422	CompoundStatement		28:10:929:929	2607267	0					
ANR	2607423	ExpressionStatement	"cout << ""OK: Truncated log for "" << collection_name << "" on line "" << line_number << "".\\n"""	889:4:27395:27491	2607267	0	True				
ANR	2607424	ShiftExpression	"cout << ""OK: Truncated log for "" << collection_name << "" on line "" << line_number << "".\\n"""		2607267	0		<<			
ANR	2607425	Identifier	cout		2607267	0					
ANR	2607426	ShiftExpression	"""OK: Truncated log for "" << collection_name << "" on line "" << line_number << "".\\n"""		2607267	1		<<			
ANR	2607427	PrimaryExpression	"""OK: Truncated log for """		2607267	0					
ANR	2607428	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		2607267	1		<<			
ANR	2607429	Identifier	collection_name		2607267	0					
ANR	2607430	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607267	1		<<			
ANR	2607431	PrimaryExpression	""" on line """		2607267	0					
ANR	2607432	ShiftExpression	"line_number << "".\\n"""		2607267	1		<<			
ANR	2607433	Identifier	line_number		2607267	0					
ANR	2607434	PrimaryExpression	""".\\n"""		2607267	1					
ANR	2607435	ReturnStatement	return ;	895:1:27507:27513	2607267	3	True				
ANR	2607436	ReturnType	static void		2607267	1					
ANR	2607437	Identifier	process_truncate_log		2607267	2					
ANR	2607438	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2607267	3					
ANR	2607439	Parameter	const string & line	857:1:26351:26368	2607267	0	True				
ANR	2607440	ParameterType	const string &		2607267	0					
ANR	2607441	Identifier	line		2607267	1					
ANR	2607442	Parameter	int token_start	858:1:26372:26386	2607267	1	True				
ANR	2607443	ParameterType	int		2607267	0					
ANR	2607444	Identifier	token_start		2607267	1					
ANR	2607445	Parameter	int line_number	858:18:26389:26403	2607267	2	True				
ANR	2607446	ParameterType	int		2607267	0					
ANR	2607447	Identifier	line_number		2607267	1					
ANR	2607448	Parameter	const Parameters & parameters	859:1:26408:26435	2607267	3	True				
ANR	2607449	ParameterType	const Parameters &		2607267	0					
ANR	2607450	Identifier	parameters		2607267	1					
ANR	2607451	Parameter	ErrorCount * errors	860:1:26439:26456	2607267	4	True				
ANR	2607452	ParameterType	ErrorCount *		2607267	0					
ANR	2607453	Identifier	errors		2607267	1					
ANR	2607454	CFGEntryNode	ENTRY		2607267		True				
ANR	2607455	CFGExitNode	EXIT		2607267		True				
ANR	2607456	Symbol	token_start		2607267						
ANR	2607457	Symbol	NULL		2607267						
ANR	2607458	Symbol	& token_start		2607267						
ANR	2607459	Symbol	* collection		2607267						
ANR	2607460	Symbol	line		2607267						
ANR	2607461	Symbol	collection		2607267						
ANR	2607462	Symbol	* collections		2607267						
ANR	2607463	Symbol	extract_token		2607267						
ANR	2607464	Symbol	collection -> TruncateLog		2607267						
ANR	2607465	Symbol	collections		2607267						
ANR	2607466	Symbol	line_number		2607267						
ANR	2607467	Symbol	success		2607267						
ANR	2607468	Symbol	* collection_name		2607267						
ANR	2607469	Symbol	parameters		2607267						
ANR	2607470	Symbol	collection_name . compare		2607267						
ANR	2607471	Symbol	errors		2607267						
ANR	2607472	Symbol	collection_name		2607267						
ANR	2607473	Function	process_create_subview	904:0:27717:29430							
ANR	2607474	FunctionDef	"process_create_subview (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2607473	0					
ANR	2607475	CompoundStatement		908:0:27881:29430	2607473	0					
ANR	2607476	IdentifierDeclStatement	"string collection_name , parent_view_name , view_name , constraint ;"	909:1:27884:27947	2607473	0	True				
ANR	2607477	IdentifierDecl	collection_name		2607473	0					
ANR	2607478	IdentifierDeclType	string		2607473	0					
ANR	2607479	Identifier	collection_name		2607473	1					
ANR	2607480	IdentifierDecl	parent_view_name		2607473	1					
ANR	2607481	IdentifierDeclType	string		2607473	0					
ANR	2607482	Identifier	parent_view_name		2607473	1					
ANR	2607483	IdentifierDecl	view_name		2607473	2					
ANR	2607484	IdentifierDeclType	string		2607473	0					
ANR	2607485	Identifier	view_name		2607473	1					
ANR	2607486	IdentifierDecl	constraint		2607473	3					
ANR	2607487	IdentifierDeclType	string		2607473	0					
ANR	2607488	Identifier	constraint		2607473	1					
ANR	2607489	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	911:1:27951:28002	2607473	1	True				
ANR	2607490	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		2607473	0		=			
ANR	2607491	Identifier	collection_name		2607473	0					
ANR	2607492	CallExpression	"extract_token ( & token_start , line )"		2607473	1					
ANR	2607493	Callee	extract_token		2607473	0					
ANR	2607494	Identifier	extract_token		2607473	0					
ANR	2607495	ArgumentList	& token_start		2607473	1					
ANR	2607496	Argument	& token_start		2607473	0					
ANR	2607497	UnaryOperationExpression	& token_start		2607473	0					
ANR	2607498	UnaryOperator	&		2607473	0					
ANR	2607499	Identifier	token_start		2607473	1					
ANR	2607500	Argument	line		2607473	1					
ANR	2607501	Identifier	line		2607473	0					
ANR	2607502	ExpressionStatement	"parent_view_name = extract_token ( & token_start , line )"	912:1:28005:28057	2607473	2	True				
ANR	2607503	AssignmentExpression	"parent_view_name = extract_token ( & token_start , line )"		2607473	0		=			
ANR	2607504	Identifier	parent_view_name		2607473	0					
ANR	2607505	CallExpression	"extract_token ( & token_start , line )"		2607473	1					
ANR	2607506	Callee	extract_token		2607473	0					
ANR	2607507	Identifier	extract_token		2607473	0					
ANR	2607508	ArgumentList	& token_start		2607473	1					
ANR	2607509	Argument	& token_start		2607473	0					
ANR	2607510	UnaryOperationExpression	& token_start		2607473	0					
ANR	2607511	UnaryOperator	&		2607473	0					
ANR	2607512	Identifier	token_start		2607473	1					
ANR	2607513	Argument	line		2607473	1					
ANR	2607514	Identifier	line		2607473	0					
ANR	2607515	ExpressionStatement	"view_name = extract_token ( & token_start , line )"	913:1:28060:28105	2607473	3	True				
ANR	2607516	AssignmentExpression	"view_name = extract_token ( & token_start , line )"		2607473	0		=			
ANR	2607517	Identifier	view_name		2607473	0					
ANR	2607518	CallExpression	"extract_token ( & token_start , line )"		2607473	1					
ANR	2607519	Callee	extract_token		2607473	0					
ANR	2607520	Identifier	extract_token		2607473	0					
ANR	2607521	ArgumentList	& token_start		2607473	1					
ANR	2607522	Argument	& token_start		2607473	0					
ANR	2607523	UnaryOperationExpression	& token_start		2607473	0					
ANR	2607524	UnaryOperator	&		2607473	0					
ANR	2607525	Identifier	token_start		2607473	1					
ANR	2607526	Argument	line		2607473	1					
ANR	2607527	Identifier	line		2607473	0					
ANR	2607528	IfStatement	if ( ( unsigned ) token_start < line . size ( ) )		2607473	4					
ANR	2607529	Condition	( unsigned ) token_start < line . size ( )	914:5:28112:28147	2607473	0	True				
ANR	2607530	RelationalExpression	( unsigned ) token_start < line . size ( )		2607473	0		<			
ANR	2607531	CastExpression	( unsigned ) token_start		2607473	0					
ANR	2607532	CastTarget	unsigned		2607473	0					
ANR	2607533	Identifier	token_start		2607473	1					
ANR	2607534	CallExpression	line . size ( )		2607473	1					
ANR	2607535	Callee	line . size		2607473	0					
ANR	2607536	MemberAccess	line . size		2607473	0					
ANR	2607537	Identifier	line		2607473	0					
ANR	2607538	Identifier	size		2607473	1					
ANR	2607539	ArgumentList			2607473	1					
ANR	2607540	CompoundStatement		7:43:268:268	2607473	1					
ANR	2607541	ExpressionStatement	"constraint = line . substr ( token_start , line . size ( ) - token_start )"	915:2:28154:28218	2607473	0	True				
ANR	2607542	AssignmentExpression	"constraint = line . substr ( token_start , line . size ( ) - token_start )"		2607473	0		=			
ANR	2607543	Identifier	constraint		2607473	0					
ANR	2607544	CallExpression	"line . substr ( token_start , line . size ( ) - token_start )"		2607473	1					
ANR	2607545	Callee	line . substr		2607473	0					
ANR	2607546	MemberAccess	line . substr		2607473	0					
ANR	2607547	Identifier	line		2607473	0					
ANR	2607548	Identifier	substr		2607473	1					
ANR	2607549	ArgumentList	token_start		2607473	1					
ANR	2607550	Argument	token_start		2607473	0					
ANR	2607551	Identifier	token_start		2607473	0					
ANR	2607552	Argument	line . size ( ) - token_start		2607473	1					
ANR	2607553	AdditiveExpression	line . size ( ) - token_start		2607473	0		-			
ANR	2607554	CallExpression	line . size ( )		2607473	0					
ANR	2607555	Callee	line . size		2607473	0					
ANR	2607556	MemberAccess	line . size		2607473	0					
ANR	2607557	Identifier	line		2607473	0					
ANR	2607558	Identifier	size		2607473	1					
ANR	2607559	ArgumentList			2607473	1					
ANR	2607560	Identifier	token_start		2607473	1					
ANR	2607561	ElseStatement	else		2607473	0					
ANR	2607562	CompoundStatement		9:8:346:346	2607473	0					
ANR	2607563	ExpressionStatement	"constraint = """""	917:2:28232:28247	2607473	0	True				
ANR	2607564	AssignmentExpression	"constraint = """""		2607473	0		=			
ANR	2607565	Identifier	constraint		2607473	0					
ANR	2607566	PrimaryExpression	""""""		2607473	1					
ANR	2607567	IfStatement	"if ( ! collection_name . compare ( """" ) || ! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" ) )"		2607473	5					
ANR	2607568	Condition	"! collection_name . compare ( """" ) || ! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" )"	919:5:28257:28372	2607473	0	True				
ANR	2607569	OrExpression	"! collection_name . compare ( """" ) || ! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" )"		2607473	0		||			
ANR	2607570	UnaryOperationExpression	"! collection_name . compare ( """" )"		2607473	0					
ANR	2607571	UnaryOperator	!		2607473	0					
ANR	2607572	CallExpression	"collection_name . compare ( """" )"		2607473	1					
ANR	2607573	Callee	collection_name . compare		2607473	0					
ANR	2607574	MemberAccess	collection_name . compare		2607473	0					
ANR	2607575	Identifier	collection_name		2607473	0					
ANR	2607576	Identifier	compare		2607473	1					
ANR	2607577	ArgumentList	""""""		2607473	1					
ANR	2607578	Argument	""""""		2607473	0					
ANR	2607579	PrimaryExpression	""""""		2607473	0					
ANR	2607580	OrExpression	"! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" )"		2607473	1		||			
ANR	2607581	UnaryOperationExpression	"! parent_view_name . compare ( """" )"		2607473	0					
ANR	2607582	UnaryOperator	!		2607473	0					
ANR	2607583	CallExpression	"parent_view_name . compare ( """" )"		2607473	1					
ANR	2607584	Callee	parent_view_name . compare		2607473	0					
ANR	2607585	MemberAccess	parent_view_name . compare		2607473	0					
ANR	2607586	Identifier	parent_view_name		2607473	0					
ANR	2607587	Identifier	compare		2607473	1					
ANR	2607588	ArgumentList	""""""		2607473	1					
ANR	2607589	Argument	""""""		2607473	0					
ANR	2607590	PrimaryExpression	""""""		2607473	0					
ANR	2607591	OrExpression	"! view_name . compare ( """" ) || ! constraint . compare ( """" )"		2607473	1		||			
ANR	2607592	UnaryOperationExpression	"! view_name . compare ( """" )"		2607473	0					
ANR	2607593	UnaryOperator	!		2607473	0					
ANR	2607594	CallExpression	"view_name . compare ( """" )"		2607473	1					
ANR	2607595	Callee	view_name . compare		2607473	0					
ANR	2607596	MemberAccess	view_name . compare		2607473	0					
ANR	2607597	Identifier	view_name		2607473	0					
ANR	2607598	Identifier	compare		2607473	1					
ANR	2607599	ArgumentList	""""""		2607473	1					
ANR	2607600	Argument	""""""		2607473	0					
ANR	2607601	PrimaryExpression	""""""		2607473	0					
ANR	2607602	UnaryOperationExpression	"! constraint . compare ( """" )"		2607473	1					
ANR	2607603	UnaryOperator	!		2607473	0					
ANR	2607604	CallExpression	"constraint . compare ( """" )"		2607473	1					
ANR	2607605	Callee	constraint . compare		2607473	0					
ANR	2607606	MemberAccess	constraint . compare		2607473	0					
ANR	2607607	Identifier	constraint		2607473	0					
ANR	2607608	Identifier	compare		2607473	1					
ANR	2607609	ArgumentList	""""""		2607473	1					
ANR	2607610	Argument	""""""		2607473	0					
ANR	2607611	PrimaryExpression	""""""		2607473	0					
ANR	2607612	CompoundStatement		13:56:493:493	2607473	1					
ANR	2607613	ExpressionStatement	"cout << ""Error: Missing subview information on line "" << line_number << ""."" << endl"	921:2:28379:28467	2607473	0	True				
ANR	2607614	ShiftExpression	"cout << ""Error: Missing subview information on line "" << line_number << ""."" << endl"		2607473	0		<<			
ANR	2607615	Identifier	cout		2607473	0					
ANR	2607616	ShiftExpression	"""Error: Missing subview information on line "" << line_number << ""."" << endl"		2607473	1		<<			
ANR	2607617	PrimaryExpression	"""Error: Missing subview information on line """		2607473	0					
ANR	2607618	ShiftExpression	"line_number << ""."" << endl"		2607473	1		<<			
ANR	2607619	Identifier	line_number		2607473	0					
ANR	2607620	ShiftExpression	"""."" << endl"		2607473	1		<<			
ANR	2607621	PrimaryExpression	"""."""		2607473	0					
ANR	2607622	Identifier	endl		2607473	1					
ANR	2607623	ExpressionStatement	"cout << ""       Format: create-subview collection parent-view view constraint"" << endl"	923:2:28471:28561	2607473	1	True				
ANR	2607624	ShiftExpression	"cout << ""       Format: create-subview collection parent-view view constraint"" << endl"		2607473	0		<<			
ANR	2607625	Identifier	cout		2607473	0					
ANR	2607626	ShiftExpression	"""       Format: create-subview collection parent-view view constraint"" << endl"		2607473	1		<<			
ANR	2607627	PrimaryExpression	"""       Format: create-subview collection parent-view view constraint"""		2607473	0					
ANR	2607628	Identifier	endl		2607473	1					
ANR	2607629	ExpressionStatement	errors -> IncrementErrors ( )	925:2:28565:28590	2607473	2	True				
ANR	2607630	CallExpression	errors -> IncrementErrors ( )		2607473	0					
ANR	2607631	Callee	errors -> IncrementErrors		2607473	0					
ANR	2607632	PtrMemberAccess	errors -> IncrementErrors		2607473	0					
ANR	2607633	Identifier	errors		2607473	0					
ANR	2607634	Identifier	IncrementErrors		2607473	1					
ANR	2607635	ArgumentList			2607473	1					
ANR	2607636	ElseStatement	else		2607473	0					
ANR	2607637	CompoundStatement		21:2:723:753	2607473	0					
ANR	2607638	IdentifierDeclStatement	ClassAdCollection * collection ;	928:2:28605:28635	2607473	0	True				
ANR	2607639	IdentifierDecl	* collection		2607473	0					
ANR	2607640	IdentifierDeclType	ClassAdCollection *		2607473	0					
ANR	2607641	Identifier	collection		2607473	1					
ANR	2607642	ExpressionStatement	collection = collections [ collection_name ]	930:2:28640:28681	2607473	1	True				
ANR	2607643	AssignmentExpression	collection = collections [ collection_name ]		2607473	0		=			
ANR	2607644	Identifier	collection		2607473	0					
ANR	2607645	ArrayIndexing	collections [ collection_name ]		2607473	1					
ANR	2607646	Identifier	collections		2607473	0					
ANR	2607647	Identifier	collection_name		2607473	1					
ANR	2607648	IfStatement	if ( collection == NULL )		2607473	2					
ANR	2607649	Condition	collection == NULL	931:6:28689:28706	2607473	0	True				
ANR	2607650	EqualityExpression	collection == NULL		2607473	0		==			
ANR	2607651	Identifier	collection		2607473	0					
ANR	2607652	Identifier	NULL		2607473	1					
ANR	2607653	CompoundStatement		24:26:827:827	2607473	1					
ANR	2607654	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""	932:3:28714:28816	2607473	0	True				
ANR	2607655	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		2607473	0		<<			
ANR	2607656	Identifier	cout		2607473	0					
ANR	2607657	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607658	PrimaryExpression	"""Error: Unknown collection ("""		2607473	0					
ANR	2607659	ShiftExpression	"collection_name << "") on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607660	Identifier	collection_name		2607473	0					
ANR	2607661	ShiftExpression	""") on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607662	PrimaryExpression	""") on line """		2607473	0					
ANR	2607663	ShiftExpression	"line_number << "".\\n"""		2607473	1		<<			
ANR	2607664	Identifier	line_number		2607473	0					
ANR	2607665	PrimaryExpression	""".\\n"""		2607473	1					
ANR	2607666	ExpressionStatement	errors -> IncrementErrors ( )	934:3:28821:28846	2607473	1	True				
ANR	2607667	CallExpression	errors -> IncrementErrors ( )		2607473	0					
ANR	2607668	Callee	errors -> IncrementErrors		2607473	0					
ANR	2607669	PtrMemberAccess	errors -> IncrementErrors		2607473	0					
ANR	2607670	Identifier	errors		2607473	0					
ANR	2607671	Identifier	IncrementErrors		2607473	1					
ANR	2607672	ArgumentList			2607473	1					
ANR	2607673	ElseStatement	else		2607473	0					
ANR	2607674	CompoundStatement		29:3:980:992	2607473	0					
ANR	2607675	IdentifierDeclStatement	bool success ;	936:3:28862:28874	2607473	0	True				
ANR	2607676	IdentifierDecl	success		2607473	0					
ANR	2607677	IdentifierDeclType	bool		2607473	0					
ANR	2607678	Identifier	success		2607473	1					
ANR	2607679	ExpressionStatement	"success = collection -> CreateSubView ( view_name , parent_view_name , constraint , """" , """" )"	938:3:28880:28976	2607473	1	True				
ANR	2607680	AssignmentExpression	"success = collection -> CreateSubView ( view_name , parent_view_name , constraint , """" , """" )"		2607473	0		=			
ANR	2607681	Identifier	success		2607473	0					
ANR	2607682	CallExpression	"collection -> CreateSubView ( view_name , parent_view_name , constraint , """" , """" )"		2607473	1					
ANR	2607683	Callee	collection -> CreateSubView		2607473	0					
ANR	2607684	PtrMemberAccess	collection -> CreateSubView		2607473	0					
ANR	2607685	Identifier	collection		2607473	0					
ANR	2607686	Identifier	CreateSubView		2607473	1					
ANR	2607687	ArgumentList	view_name		2607473	1					
ANR	2607688	Argument	view_name		2607473	0					
ANR	2607689	Identifier	view_name		2607473	0					
ANR	2607690	Argument	parent_view_name		2607473	1					
ANR	2607691	Identifier	parent_view_name		2607473	0					
ANR	2607692	Argument	constraint		2607473	2					
ANR	2607693	Identifier	constraint		2607473	0					
ANR	2607694	Argument	""""""		2607473	3					
ANR	2607695	PrimaryExpression	""""""		2607473	0					
ANR	2607696	Argument	""""""		2607473	4					
ANR	2607697	PrimaryExpression	""""""		2607473	0					
ANR	2607698	IfStatement	if ( success )		2607473	2					
ANR	2607699	Condition	success	940:7:28985:28991	2607473	0	True				
ANR	2607700	Identifier	success		2607473	0					
ANR	2607701	CompoundStatement		33:16:1112:1112	2607473	1					
ANR	2607702	ExpressionStatement	"cout << ""OK: Made subview "" << view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""	941:4:29000:29167	2607473	0	True				
ANR	2607703	ShiftExpression	"cout << ""OK: Made subview "" << view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		2607473	0		<<			
ANR	2607704	Identifier	cout		2607473	0					
ANR	2607705	ShiftExpression	"""OK: Made subview "" << view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607706	PrimaryExpression	"""OK: Made subview """		2607473	0					
ANR	2607707	ShiftExpression	"view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607708	Identifier	view_name		2607473	0					
ANR	2607709	ShiftExpression	""" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607710	PrimaryExpression	""" in """		2607473	0					
ANR	2607711	ShiftExpression	"collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607712	Identifier	collection_name		2607473	0					
ANR	2607713	ShiftExpression	""" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607714	PrimaryExpression	""" with constraint = """		2607473	0					
ANR	2607715	ShiftExpression	"constraint << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607716	Identifier	constraint		2607473	0					
ANR	2607717	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607718	PrimaryExpression	""" on line """		2607473	0					
ANR	2607719	ShiftExpression	"line_number << "".\\n"""		2607473	1		<<			
ANR	2607720	Identifier	line_number		2607473	0					
ANR	2607721	PrimaryExpression	""".\\n"""		2607473	1					
ANR	2607722	ElseStatement	else		2607473	0					
ANR	2607723	CompoundStatement		39:8:1300:1300	2607473	0					
ANR	2607724	ExpressionStatement	"cout << ""Error: Failed to make subview "" << view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""	947:4:29188:29322	2607473	0	True				
ANR	2607725	ShiftExpression	"cout << ""Error: Failed to make subview "" << view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""		2607473	0		<<			
ANR	2607726	Identifier	cout		2607473	0					
ANR	2607727	ShiftExpression	"""Error: Failed to make subview "" << view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607728	PrimaryExpression	"""Error: Failed to make subview """		2607473	0					
ANR	2607729	ShiftExpression	"view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607730	Identifier	view_name		2607473	0					
ANR	2607731	ShiftExpression	""" in "" << collection_name << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607732	PrimaryExpression	""" in """		2607473	0					
ANR	2607733	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607734	Identifier	collection_name		2607473	0					
ANR	2607735	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607473	1		<<			
ANR	2607736	PrimaryExpression	""" on line """		2607473	0					
ANR	2607737	ShiftExpression	"line_number << "".\\n"""		2607473	1		<<			
ANR	2607738	Identifier	line_number		2607473	0					
ANR	2607739	PrimaryExpression	""".\\n"""		2607473	1					
ANR	2607740	ExpressionStatement	errors -> IncrementErrors ( )	950:4:29328:29353	2607473	1	True				
ANR	2607741	CallExpression	errors -> IncrementErrors ( )		2607473	0					
ANR	2607742	Callee	errors -> IncrementErrors		2607473	0					
ANR	2607743	PtrMemberAccess	errors -> IncrementErrors		2607473	0					
ANR	2607744	Identifier	errors		2607473	0					
ANR	2607745	Identifier	IncrementErrors		2607473	1					
ANR	2607746	ArgumentList			2607473	1					
ANR	2607747	ExpressionStatement	"cout << ""CondorErrMsg: "" << CondorErrMsg << endl"	951:4:29359:29407	2607473	2	True				
ANR	2607748	ShiftExpression	"cout << ""CondorErrMsg: "" << CondorErrMsg << endl"		2607473	0		<<			
ANR	2607749	Identifier	cout		2607473	0					
ANR	2607750	ShiftExpression	"""CondorErrMsg: "" << CondorErrMsg << endl"		2607473	1		<<			
ANR	2607751	PrimaryExpression	"""CondorErrMsg: """		2607473	0					
ANR	2607752	ShiftExpression	CondorErrMsg << endl		2607473	1		<<			
ANR	2607753	Identifier	CondorErrMsg		2607473	0					
ANR	2607754	Identifier	endl		2607473	1					
ANR	2607755	ReturnStatement	return ;	955:1:29422:29428	2607473	6	True				
ANR	2607756	ReturnType	static void		2607473	1					
ANR	2607757	Identifier	process_create_subview		2607473	2					
ANR	2607758	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2607473	3					
ANR	2607759	Parameter	const string & line	904:35:27752:27769	2607473	0	True				
ANR	2607760	ParameterType	const string &		2607473	0					
ANR	2607761	Identifier	line		2607473	1					
ANR	2607762	Parameter	int token_start	905:8:27780:27794	2607473	1	True				
ANR	2607763	ParameterType	int		2607473	0					
ANR	2607764	Identifier	token_start		2607473	1					
ANR	2607765	Parameter	int line_number	905:25:27797:27811	2607473	2	True				
ANR	2607766	ParameterType	int		2607473	0					
ANR	2607767	Identifier	line_number		2607473	1					
ANR	2607768	Parameter	const Parameters & parameters	906:8:27823:27850	2607473	3	True				
ANR	2607769	ParameterType	const Parameters &		2607473	0					
ANR	2607770	Identifier	parameters		2607473	1					
ANR	2607771	Parameter	ErrorCount * errors	907:8:27861:27878	2607473	4	True				
ANR	2607772	ParameterType	ErrorCount *		2607473	0					
ANR	2607773	Identifier	errors		2607473	1					
ANR	2607774	CFGEntryNode	ENTRY		2607473		True				
ANR	2607775	CFGExitNode	EXIT		2607473		True				
ANR	2607776	Symbol	& token_start		2607473						
ANR	2607777	Symbol	line		2607473						
ANR	2607778	Symbol	line . substr		2607473						
ANR	2607779	Symbol	line . size		2607473						
ANR	2607780	Symbol	parent_view_name		2607473						
ANR	2607781	Symbol	view_name . compare		2607473						
ANR	2607782	Symbol	parent_view_name . compare		2607473						
ANR	2607783	Symbol	collections		2607473						
ANR	2607784	Symbol	collection -> CreateSubView		2607473						
ANR	2607785	Symbol	line_number		2607473						
ANR	2607786	Symbol	* collection_name		2607473						
ANR	2607787	Symbol	collection_name . compare		2607473						
ANR	2607788	Symbol	view_name		2607473						
ANR	2607789	Symbol	token_start		2607473						
ANR	2607790	Symbol	NULL		2607473						
ANR	2607791	Symbol	* collection		2607473						
ANR	2607792	Symbol	collection		2607473						
ANR	2607793	Symbol	* collections		2607473						
ANR	2607794	Symbol	extract_token		2607473						
ANR	2607795	Symbol	constraint . compare		2607473						
ANR	2607796	Symbol	success		2607473						
ANR	2607797	Symbol	constraint		2607473						
ANR	2607798	Symbol	parameters		2607473						
ANR	2607799	Symbol	errors		2607473						
ANR	2607800	Symbol	collection_name		2607473						
ANR	2607801	Function	process_check_in_view	964:0:29631:32728							
ANR	2607802	FunctionDef	"process_check_in_view (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		2607801	0					
ANR	2607803	CompoundStatement		968:0:29794:32728	2607801	0					
ANR	2607804	IdentifierDeclStatement	"string collection_name , view_name , classad_name ;"	969:1:29797:29845	2607801	0	True				
ANR	2607805	IdentifierDecl	collection_name		2607801	0					
ANR	2607806	IdentifierDeclType	string		2607801	0					
ANR	2607807	Identifier	collection_name		2607801	1					
ANR	2607808	IdentifierDecl	view_name		2607801	1					
ANR	2607809	IdentifierDeclType	string		2607801	0					
ANR	2607810	Identifier	view_name		2607801	1					
ANR	2607811	IdentifierDecl	classad_name		2607801	2					
ANR	2607812	IdentifierDeclType	string		2607801	0					
ANR	2607813	Identifier	classad_name		2607801	1					
ANR	2607814	IdentifierDeclStatement	"string expect , extra ;"	970:1:29848:29869	2607801	1	True				
ANR	2607815	IdentifierDecl	expect		2607801	0					
ANR	2607816	IdentifierDeclType	string		2607801	0					
ANR	2607817	Identifier	expect		2607801	1					
ANR	2607818	IdentifierDecl	extra		2607801	1					
ANR	2607819	IdentifierDeclType	string		2607801	0					
ANR	2607820	Identifier	extra		2607801	1					
ANR	2607821	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	972:1:29873:29924	2607801	2	True				
ANR	2607822	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		2607801	0		=			
ANR	2607823	Identifier	collection_name		2607801	0					
ANR	2607824	CallExpression	"extract_token ( & token_start , line )"		2607801	1					
ANR	2607825	Callee	extract_token		2607801	0					
ANR	2607826	Identifier	extract_token		2607801	0					
ANR	2607827	ArgumentList	& token_start		2607801	1					
ANR	2607828	Argument	& token_start		2607801	0					
ANR	2607829	UnaryOperationExpression	& token_start		2607801	0					
ANR	2607830	UnaryOperator	&		2607801	0					
ANR	2607831	Identifier	token_start		2607801	1					
ANR	2607832	Argument	line		2607801	1					
ANR	2607833	Identifier	line		2607801	0					
ANR	2607834	ExpressionStatement	"view_name = extract_token ( & token_start , line )"	973:1:29927:29972	2607801	3	True				
ANR	2607835	AssignmentExpression	"view_name = extract_token ( & token_start , line )"		2607801	0		=			
ANR	2607836	Identifier	view_name		2607801	0					
ANR	2607837	CallExpression	"extract_token ( & token_start , line )"		2607801	1					
ANR	2607838	Callee	extract_token		2607801	0					
ANR	2607839	Identifier	extract_token		2607801	0					
ANR	2607840	ArgumentList	& token_start		2607801	1					
ANR	2607841	Argument	& token_start		2607801	0					
ANR	2607842	UnaryOperationExpression	& token_start		2607801	0					
ANR	2607843	UnaryOperator	&		2607801	0					
ANR	2607844	Identifier	token_start		2607801	1					
ANR	2607845	Argument	line		2607801	1					
ANR	2607846	Identifier	line		2607801	0					
ANR	2607847	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	974:1:29975:30023	2607801	4	True				
ANR	2607848	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		2607801	0		=			
ANR	2607849	Identifier	classad_name		2607801	0					
ANR	2607850	CallExpression	"extract_token ( & token_start , line )"		2607801	1					
ANR	2607851	Callee	extract_token		2607801	0					
ANR	2607852	Identifier	extract_token		2607801	0					
ANR	2607853	ArgumentList	& token_start		2607801	1					
ANR	2607854	Argument	& token_start		2607801	0					
ANR	2607855	UnaryOperationExpression	& token_start		2607801	0					
ANR	2607856	UnaryOperator	&		2607801	0					
ANR	2607857	Identifier	token_start		2607801	1					
ANR	2607858	Argument	line		2607801	1					
ANR	2607859	Identifier	line		2607801	0					
ANR	2607860	ExpressionStatement	"expect = extract_token ( & token_start , line )"	975:1:30026:30068	2607801	5	True				
ANR	2607861	AssignmentExpression	"expect = extract_token ( & token_start , line )"		2607801	0		=			
ANR	2607862	Identifier	expect		2607801	0					
ANR	2607863	CallExpression	"extract_token ( & token_start , line )"		2607801	1					
ANR	2607864	Callee	extract_token		2607801	0					
ANR	2607865	Identifier	extract_token		2607801	0					
ANR	2607866	ArgumentList	& token_start		2607801	1					
ANR	2607867	Argument	& token_start		2607801	0					
ANR	2607868	UnaryOperationExpression	& token_start		2607801	0					
ANR	2607869	UnaryOperator	&		2607801	0					
ANR	2607870	Identifier	token_start		2607801	1					
ANR	2607871	Argument	line		2607801	1					
ANR	2607872	Identifier	line		2607801	0					
ANR	2607873	ExpressionStatement	"extra = extract_token ( & token_start , line )"	976:1:30071:30112	2607801	6	True				
ANR	2607874	AssignmentExpression	"extra = extract_token ( & token_start , line )"		2607801	0		=			
ANR	2607875	Identifier	extra		2607801	0					
ANR	2607876	CallExpression	"extract_token ( & token_start , line )"		2607801	1					
ANR	2607877	Callee	extract_token		2607801	0					
ANR	2607878	Identifier	extract_token		2607801	0					
ANR	2607879	ArgumentList	& token_start		2607801	1					
ANR	2607880	Argument	& token_start		2607801	0					
ANR	2607881	UnaryOperationExpression	& token_start		2607801	0					
ANR	2607882	UnaryOperator	&		2607801	0					
ANR	2607883	Identifier	token_start		2607801	1					
ANR	2607884	Argument	line		2607801	1					
ANR	2607885	Identifier	line		2607801	0					
ANR	2607886	IfStatement	"if ( ! collection_name . compare ( """" ) || ! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" ) )"		2607801	7					
ANR	2607887	Condition	"! collection_name . compare ( """" ) || ! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" )"	977:5:30119:30226	2607801	0	True				
ANR	2607888	OrExpression	"! collection_name . compare ( """" ) || ! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" )"		2607801	0		||			
ANR	2607889	UnaryOperationExpression	"! collection_name . compare ( """" )"		2607801	0					
ANR	2607890	UnaryOperator	!		2607801	0					
ANR	2607891	CallExpression	"collection_name . compare ( """" )"		2607801	1					
ANR	2607892	Callee	collection_name . compare		2607801	0					
ANR	2607893	MemberAccess	collection_name . compare		2607801	0					
ANR	2607894	Identifier	collection_name		2607801	0					
ANR	2607895	Identifier	compare		2607801	1					
ANR	2607896	ArgumentList	""""""		2607801	1					
ANR	2607897	Argument	""""""		2607801	0					
ANR	2607898	PrimaryExpression	""""""		2607801	0					
ANR	2607899	OrExpression	"! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" )"		2607801	1		||			
ANR	2607900	UnaryOperationExpression	"! view_name . compare ( """" )"		2607801	0					
ANR	2607901	UnaryOperator	!		2607801	0					
ANR	2607902	CallExpression	"view_name . compare ( """" )"		2607801	1					
ANR	2607903	Callee	view_name . compare		2607801	0					
ANR	2607904	MemberAccess	view_name . compare		2607801	0					
ANR	2607905	Identifier	view_name		2607801	0					
ANR	2607906	Identifier	compare		2607801	1					
ANR	2607907	ArgumentList	""""""		2607801	1					
ANR	2607908	Argument	""""""		2607801	0					
ANR	2607909	PrimaryExpression	""""""		2607801	0					
ANR	2607910	OrExpression	"! classad_name . compare ( """" ) || ! expect . compare ( """" )"		2607801	1		||			
ANR	2607911	UnaryOperationExpression	"! classad_name . compare ( """" )"		2607801	0					
ANR	2607912	UnaryOperator	!		2607801	0					
ANR	2607913	CallExpression	"classad_name . compare ( """" )"		2607801	1					
ANR	2607914	Callee	classad_name . compare		2607801	0					
ANR	2607915	MemberAccess	classad_name . compare		2607801	0					
ANR	2607916	Identifier	classad_name		2607801	0					
ANR	2607917	Identifier	compare		2607801	1					
ANR	2607918	ArgumentList	""""""		2607801	1					
ANR	2607919	Argument	""""""		2607801	0					
ANR	2607920	PrimaryExpression	""""""		2607801	0					
ANR	2607921	UnaryOperationExpression	"! expect . compare ( """" )"		2607801	1					
ANR	2607922	UnaryOperator	!		2607801	0					
ANR	2607923	CallExpression	"expect . compare ( """" )"		2607801	1					
ANR	2607924	Callee	expect . compare		2607801	0					
ANR	2607925	MemberAccess	expect . compare		2607801	0					
ANR	2607926	Identifier	expect		2607801	0					
ANR	2607927	Identifier	compare		2607801	1					
ANR	2607928	ArgumentList	""""""		2607801	1					
ANR	2607929	Argument	""""""		2607801	0					
ANR	2607930	PrimaryExpression	""""""		2607801	0					
ANR	2607931	CompoundStatement		11:55:434:434	2607801	1					
ANR	2607932	ExpressionStatement	"cout << ""Error: Missing information on line "" << line_number << ""."" << endl"	979:2:30233:30313	2607801	0	True				
ANR	2607933	ShiftExpression	"cout << ""Error: Missing information on line "" << line_number << ""."" << endl"		2607801	0		<<			
ANR	2607934	Identifier	cout		2607801	0					
ANR	2607935	ShiftExpression	"""Error: Missing information on line "" << line_number << ""."" << endl"		2607801	1		<<			
ANR	2607936	PrimaryExpression	"""Error: Missing information on line """		2607801	0					
ANR	2607937	ShiftExpression	"line_number << ""."" << endl"		2607801	1		<<			
ANR	2607938	Identifier	line_number		2607801	0					
ANR	2607939	ShiftExpression	"""."" << endl"		2607801	1		<<			
ANR	2607940	PrimaryExpression	"""."""		2607801	0					
ANR	2607941	Identifier	endl		2607801	1					
ANR	2607942	ExpressionStatement	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""	981:2:30317:30420	2607801	1	True				
ANR	2607943	ShiftExpression	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		2607801	0		<<			
ANR	2607944	Identifier	cout		2607801	0					
ANR	2607945	ShiftExpression	"""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		2607801	1		<<			
ANR	2607946	PrimaryExpression	"""       Format: check-in-subview collection view classad """		2607801	0					
ANR	2607947	PrimaryExpression	""" [ExpectIn | ExpectNotIn]\\n"""		2607801	1					
ANR	2607948	ExpressionStatement	errors -> IncrementErrors ( )	983:2:30424:30449	2607801	2	True				
ANR	2607949	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2607950	Callee	errors -> IncrementErrors		2607801	0					
ANR	2607951	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2607952	Identifier	errors		2607801	0					
ANR	2607953	Identifier	IncrementErrors		2607801	1					
ANR	2607954	ArgumentList			2607801	1					
ANR	2607955	ElseStatement	else		2607801	0					
ANR	2607956	IfStatement	"if ( expect . compare ( ""ExpectIn"" ) && expect . compare ( ""ExpectNotIn"" ) )"		2607801	0					
ANR	2607957	Condition	"expect . compare ( ""ExpectIn"" ) && expect . compare ( ""ExpectNotIn"" )"	984:12:30463:30521	2607801	0	True				
ANR	2607958	AndExpression	"expect . compare ( ""ExpectIn"" ) && expect . compare ( ""ExpectNotIn"" )"		2607801	0		&&			
ANR	2607959	CallExpression	"expect . compare ( ""ExpectIn"" )"		2607801	0					
ANR	2607960	Callee	expect . compare		2607801	0					
ANR	2607961	MemberAccess	expect . compare		2607801	0					
ANR	2607962	Identifier	expect		2607801	0					
ANR	2607963	Identifier	compare		2607801	1					
ANR	2607964	ArgumentList	"""ExpectIn"""		2607801	1					
ANR	2607965	Argument	"""ExpectIn"""		2607801	0					
ANR	2607966	PrimaryExpression	"""ExpectIn"""		2607801	0					
ANR	2607967	CallExpression	"expect . compare ( ""ExpectNotIn"" )"		2607801	1					
ANR	2607968	Callee	expect . compare		2607801	0					
ANR	2607969	MemberAccess	expect . compare		2607801	0					
ANR	2607970	Identifier	expect		2607801	0					
ANR	2607971	Identifier	compare		2607801	1					
ANR	2607972	ArgumentList	"""ExpectNotIn"""		2607801	1					
ANR	2607973	Argument	"""ExpectNotIn"""		2607801	0					
ANR	2607974	PrimaryExpression	"""ExpectNotIn"""		2607801	0					
ANR	2607975	CompoundStatement		17:73:729:729	2607801	1					
ANR	2607976	ExpressionStatement	"cout << ""Error: Need to specify \\""ExpectIn\\"" or "" << ""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""	985:2:30528:30641	2607801	0	True				
ANR	2607977	ShiftExpression	"cout << ""Error: Need to specify \\""ExpectIn\\"" or "" << ""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2607978	Identifier	cout		2607801	0					
ANR	2607979	ShiftExpression	"""Error: Need to specify \\""ExpectIn\\"" or "" << ""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2607980	PrimaryExpression	"""Error: Need to specify \\""ExpectIn\\"" or """		2607801	0					
ANR	2607981	ShiftExpression	"""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2607982	PrimaryExpression	"""\\""ExpectInMatch\\"" on line """		2607801	0					
ANR	2607983	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2607984	Identifier	line_number		2607801	0					
ANR	2607985	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2607986	ExpressionStatement	errors -> IncrementErrors ( )	988:2:30645:30670	2607801	1	True				
ANR	2607987	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2607988	Callee	errors -> IncrementErrors		2607801	0					
ANR	2607989	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2607990	Identifier	errors		2607801	0					
ANR	2607991	Identifier	IncrementErrors		2607801	1					
ANR	2607992	ArgumentList			2607801	1					
ANR	2607993	ExpressionStatement	"expect = ""ExpectIn"""	989:2:30674:30693	2607801	2	True				
ANR	2607994	AssignmentExpression	"expect = ""ExpectIn"""		2607801	0		=			
ANR	2607995	Identifier	expect		2607801	0					
ANR	2607996	PrimaryExpression	"""ExpectIn"""		2607801	1					
ANR	2607997	ElseStatement	else		2607801	0					
ANR	2607998	IfStatement	"if ( extra . compare ( """" ) )"		2607801	0					
ANR	2607999	Condition	"extra . compare ( """" )"	990:12:30707:30723	2607801	0	True				
ANR	2608000	CallExpression	"extra . compare ( """" )"		2607801	0					
ANR	2608001	Callee	extra . compare		2607801	0					
ANR	2608002	MemberAccess	extra . compare		2607801	0					
ANR	2608003	Identifier	extra		2607801	0					
ANR	2608004	Identifier	compare		2607801	1					
ANR	2608005	ArgumentList	""""""		2607801	1					
ANR	2608006	Argument	""""""		2607801	0					
ANR	2608007	PrimaryExpression	""""""		2607801	0					
ANR	2608008	CompoundStatement		23:31:931:931	2607801	1					
ANR	2608009	ExpressionStatement	"cout << ""Error: Extra information on line "" << line_number << ""."" << endl"	991:2:30730:30808	2607801	0	True				
ANR	2608010	ShiftExpression	"cout << ""Error: Extra information on line "" << line_number << ""."" << endl"		2607801	0		<<			
ANR	2608011	Identifier	cout		2607801	0					
ANR	2608012	ShiftExpression	"""Error: Extra information on line "" << line_number << ""."" << endl"		2607801	1		<<			
ANR	2608013	PrimaryExpression	"""Error: Extra information on line """		2607801	0					
ANR	2608014	ShiftExpression	"line_number << ""."" << endl"		2607801	1		<<			
ANR	2608015	Identifier	line_number		2607801	0					
ANR	2608016	ShiftExpression	"""."" << endl"		2607801	1		<<			
ANR	2608017	PrimaryExpression	"""."""		2607801	0					
ANR	2608018	Identifier	endl		2607801	1					
ANR	2608019	ExpressionStatement	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""	993:2:30812:30915	2607801	1	True				
ANR	2608020	ShiftExpression	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		2607801	0		<<			
ANR	2608021	Identifier	cout		2607801	0					
ANR	2608022	ShiftExpression	"""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		2607801	1		<<			
ANR	2608023	PrimaryExpression	"""       Format: check-in-subview collection view classad """		2607801	0					
ANR	2608024	PrimaryExpression	""" [ExpectIn | ExpectNotIn]\\n"""		2607801	1					
ANR	2608025	ExpressionStatement	errors -> IncrementErrors ( )	995:2:30919:30944	2607801	2	True				
ANR	2608026	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2608027	Callee	errors -> IncrementErrors		2607801	0					
ANR	2608028	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2608029	Identifier	errors		2607801	0					
ANR	2608030	Identifier	IncrementErrors		2607801	1					
ANR	2608031	ArgumentList			2607801	1					
ANR	2608032	ElseStatement	else		2607801	0					
ANR	2608033	CompoundStatement		31:2:1197:1224	2607801	0					
ANR	2608034	IdentifierDeclStatement	ClassAdCollection * collection ;	997:2:30958:30988	2607801	0	True				
ANR	2608035	IdentifierDecl	* collection		2607801	0					
ANR	2608036	IdentifierDeclType	ClassAdCollection *		2607801	0					
ANR	2608037	Identifier	collection		2607801	1					
ANR	2608038	IdentifierDeclStatement	ClassAd * classad ;	998:2:30992:31019	2607801	1	True				
ANR	2608039	IdentifierDecl	* classad		2607801	0					
ANR	2608040	IdentifierDeclType	ClassAd *		2607801	0					
ANR	2608041	Identifier	classad		2607801	1					
ANR	2608042	ExpressionStatement	collection = collections [ collection_name ]	1000:2:31024:31065	2607801	2	True				
ANR	2608043	AssignmentExpression	collection = collections [ collection_name ]		2607801	0		=			
ANR	2608044	Identifier	collection		2607801	0					
ANR	2608045	ArrayIndexing	collections [ collection_name ]		2607801	1					
ANR	2608046	Identifier	collections		2607801	0					
ANR	2608047	Identifier	collection_name		2607801	1					
ANR	2608048	ExpressionStatement	classad = classads [ classad_name ]	1001:2:31069:31101	2607801	3	True				
ANR	2608049	AssignmentExpression	classad = classads [ classad_name ]		2607801	0		=			
ANR	2608050	Identifier	classad		2607801	0					
ANR	2608051	ArrayIndexing	classads [ classad_name ]		2607801	1					
ANR	2608052	Identifier	classads		2607801	0					
ANR	2608053	Identifier	classad_name		2607801	1					
ANR	2608054	IfStatement	if ( collection == NULL )		2607801	4					
ANR	2608055	Condition	collection == NULL	1002:6:31109:31126	2607801	0	True				
ANR	2608056	EqualityExpression	collection == NULL		2607801	0		==			
ANR	2608057	Identifier	collection		2607801	0					
ANR	2608058	Identifier	NULL		2607801	1					
ANR	2608059	CompoundStatement		35:26:1334:1334	2607801	1					
ANR	2608060	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""	1003:3:31134:31236	2607801	0	True				
ANR	2608061	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2608062	Identifier	cout		2607801	0					
ANR	2608063	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608064	PrimaryExpression	"""Error: Unknown collection ("""		2607801	0					
ANR	2608065	ShiftExpression	"collection_name << "") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608066	Identifier	collection_name		2607801	0					
ANR	2608067	ShiftExpression	""") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608068	PrimaryExpression	""") on line """		2607801	0					
ANR	2608069	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2608070	Identifier	line_number		2607801	0					
ANR	2608071	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2608072	ExpressionStatement	errors -> IncrementErrors ( )	1005:3:31241:31266	2607801	1	True				
ANR	2608073	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2608074	Callee	errors -> IncrementErrors		2607801	0					
ANR	2608075	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2608076	Identifier	errors		2607801	0					
ANR	2608077	Identifier	IncrementErrors		2607801	1					
ANR	2608078	ArgumentList			2607801	1					
ANR	2608079	ElseStatement	else		2607801	0					
ANR	2608080	IfStatement	if ( classad == NULL )		2607801	0					
ANR	2608081	Condition	classad == NULL	1006:13:31281:31295	2607801	0	True				
ANR	2608082	EqualityExpression	classad == NULL		2607801	0		==			
ANR	2608083	Identifier	classad		2607801	0					
ANR	2608084	Identifier	NULL		2607801	1					
ANR	2608085	CompoundStatement		39:30:1503:1503	2607801	1					
ANR	2608086	ExpressionStatement	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << "".\\n"""	1007:3:31303:31399	2607801	0	True				
ANR	2608087	ShiftExpression	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2608088	Identifier	cout		2607801	0					
ANR	2608089	ShiftExpression	"""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608090	PrimaryExpression	"""Error: Unknown classad ("""		2607801	0					
ANR	2608091	ShiftExpression	"classad_name << "") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608092	Identifier	classad_name		2607801	0					
ANR	2608093	ShiftExpression	""") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608094	PrimaryExpression	""") on line """		2607801	0					
ANR	2608095	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2608096	Identifier	line_number		2607801	0					
ANR	2608097	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2608098	ExpressionStatement	errors -> IncrementErrors ( )	1009:3:31404:31429	2607801	1	True				
ANR	2608099	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2608100	Callee	errors -> IncrementErrors		2607801	0					
ANR	2608101	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2608102	Identifier	errors		2607801	0					
ANR	2608103	Identifier	IncrementErrors		2607801	1					
ANR	2608104	ArgumentList			2607801	1					
ANR	2608105	ElseStatement	else		2607801	0					
ANR	2608106	CompoundStatement		45:3:1686:1713	2607801	0					
ANR	2608107	IdentifierDeclStatement	bool have_view ;	1011:3:31445:31476	2607801	0	True				
ANR	2608108	IdentifierDecl	have_view		2607801	0					
ANR	2608109	IdentifierDeclType	bool		2607801	0					
ANR	2608110	Identifier	have_view		2607801	1					
ANR	2608111	IdentifierDeclStatement	LocalCollectionQuery query ;	1012:3:31481:31508	2607801	1	True				
ANR	2608112	IdentifierDecl	query		2607801	0					
ANR	2608113	IdentifierDeclType	LocalCollectionQuery		2607801	0					
ANR	2608114	Identifier	query		2607801	1					
ANR	2608115	ExpressionStatement	query . Bind ( collection )	1014:3:31514:31536	2607801	2	True				
ANR	2608116	CallExpression	query . Bind ( collection )		2607801	0					
ANR	2608117	Callee	query . Bind		2607801	0					
ANR	2608118	MemberAccess	query . Bind		2607801	0					
ANR	2608119	Identifier	query		2607801	0					
ANR	2608120	Identifier	Bind		2607801	1					
ANR	2608121	ArgumentList	collection		2607801	1					
ANR	2608122	Argument	collection		2607801	0					
ANR	2608123	Identifier	collection		2607801	0					
ANR	2608124	ExpressionStatement	"have_view = query . Query ( view_name , NULL )"	1015:3:31541:31581	2607801	3	True				
ANR	2608125	AssignmentExpression	"have_view = query . Query ( view_name , NULL )"		2607801	0		=			
ANR	2608126	Identifier	have_view		2607801	0					
ANR	2608127	CallExpression	"query . Query ( view_name , NULL )"		2607801	1					
ANR	2608128	Callee	query . Query		2607801	0					
ANR	2608129	MemberAccess	query . Query		2607801	0					
ANR	2608130	Identifier	query		2607801	0					
ANR	2608131	Identifier	Query		2607801	1					
ANR	2608132	ArgumentList	view_name		2607801	1					
ANR	2608133	Argument	view_name		2607801	0					
ANR	2608134	Identifier	view_name		2607801	0					
ANR	2608135	Argument	NULL		2607801	1					
ANR	2608136	Identifier	NULL		2607801	0					
ANR	2608137	IfStatement	if ( ! have_view )		2607801	4					
ANR	2608138	Condition	! have_view	1016:7:31590:31599	2607801	0	True				
ANR	2608139	UnaryOperationExpression	! have_view		2607801	0					
ANR	2608140	UnaryOperator	!		2607801	0					
ANR	2608141	Identifier	have_view		2607801	1					
ANR	2608142	CompoundStatement		49:19:1807:1807	2607801	1					
ANR	2608143	ExpressionStatement	"cout << ""Error: Unknown view ("" << view_name << "") on line "" << line_number << "".\\n"""	1017:4:31608:31699	2607801	0	True				
ANR	2608144	ShiftExpression	"cout << ""Error: Unknown view ("" << view_name << "") on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2608145	Identifier	cout		2607801	0					
ANR	2608146	ShiftExpression	"""Error: Unknown view ("" << view_name << "") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608147	PrimaryExpression	"""Error: Unknown view ("""		2607801	0					
ANR	2608148	ShiftExpression	"view_name << "") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608149	Identifier	view_name		2607801	0					
ANR	2608150	ShiftExpression	""") on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608151	PrimaryExpression	""") on line """		2607801	0					
ANR	2608152	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2608153	Identifier	line_number		2607801	0					
ANR	2608154	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2608155	ExpressionStatement	errors -> IncrementErrors ( )	1019:4:31705:31730	2607801	1	True				
ANR	2608156	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2608157	Callee	errors -> IncrementErrors		2607801	0					
ANR	2608158	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2608159	Identifier	errors		2607801	0					
ANR	2608160	Identifier	IncrementErrors		2607801	1					
ANR	2608161	ArgumentList			2607801	1					
ANR	2608162	ElseStatement	else		2607801	0					
ANR	2608163	CompoundStatement		56:4:1979:1997	2607801	0					
ANR	2608164	IdentifierDeclStatement	bool have_classad ;	1022:4:31751:31768	2607801	0	True				
ANR	2608165	IdentifierDecl	have_classad		2607801	0					
ANR	2608166	IdentifierDeclType	bool		2607801	0					
ANR	2608167	Identifier	have_classad		2607801	1					
ANR	2608168	IdentifierDeclStatement	string classad_key ;	1023:4:31774:31792	2607801	1	True				
ANR	2608169	IdentifierDecl	classad_key		2607801	0					
ANR	2608170	IdentifierDeclType	string		2607801	0					
ANR	2608171	Identifier	classad_key		2607801	1					
ANR	2608172	ExpressionStatement	have_classad = false	1025:4:31799:31819	2607801	2	True				
ANR	2608173	AssignmentExpression	have_classad = false		2607801	0		=			
ANR	2608174	Identifier	have_classad		2607801	0					
ANR	2608175	Identifier	false		2607801	1					
ANR	2608176	ForStatement	"for ( query . ToFirst ( ) , query . Current ( classad_key ) ; ! query . IsAfterLast ( ) ; query . Next ( classad_key ) )"		2607801	3					
ANR	2608177	ForInit	"query . ToFirst ( ) , query . Current ( classad_key ) ;"	1026:9:31830:31873	2607801	0	True				
ANR	2608178	Expression	"query . ToFirst ( ) , query . Current ( classad_key )"		2607801	0					
ANR	2608179	CallExpression	query . ToFirst ( )		2607801	0					
ANR	2608180	Callee	query . ToFirst		2607801	0					
ANR	2608181	MemberAccess	query . ToFirst		2607801	0					
ANR	2608182	Identifier	query		2607801	0					
ANR	2608183	Identifier	ToFirst		2607801	1					
ANR	2608184	ArgumentList			2607801	1					
ANR	2608185	CallExpression	query . Current ( classad_key )		2607801	1					
ANR	2608186	Callee	query . Current		2607801	0					
ANR	2608187	MemberAccess	query . Current		2607801	0					
ANR	2608188	Identifier	query		2607801	0					
ANR	2608189	Identifier	Current		2607801	1					
ANR	2608190	ArgumentList	classad_key		2607801	1					
ANR	2608191	Argument	classad_key		2607801	0					
ANR	2608192	Identifier	classad_key		2607801	0					
ANR	2608193	Condition	! query . IsAfterLast ( )	1027:6:31882:31901	2607801	1	True				
ANR	2608194	UnaryOperationExpression	! query . IsAfterLast ( )		2607801	0					
ANR	2608195	UnaryOperator	!		2607801	0					
ANR	2608196	CallExpression	query . IsAfterLast ( )		2607801	1					
ANR	2608197	Callee	query . IsAfterLast		2607801	0					
ANR	2608198	MemberAccess	query . IsAfterLast		2607801	0					
ANR	2608199	Identifier	query		2607801	0					
ANR	2608200	Identifier	IsAfterLast		2607801	1					
ANR	2608201	ArgumentList			2607801	1					
ANR	2608202	CallExpression	query . Next ( classad_key )	1027:28:31904:31926	2607801	2	True				
ANR	2608203	Callee	query . Next		2607801	0					
ANR	2608204	MemberAccess	query . Next		2607801	0					
ANR	2608205	Identifier	query		2607801	0					
ANR	2608206	Identifier	Next		2607801	1					
ANR	2608207	ArgumentList	classad_key		2607801	1					
ANR	2608208	Argument	classad_key		2607801	0					
ANR	2608209	Identifier	classad_key		2607801	0					
ANR	2608210	CompoundStatement		60:53:2134:2134	2607801	3					
ANR	2608211	IfStatement	if ( ! classad_key . compare ( classad_name ) )		2607801	0					
ANR	2608212	Condition	! classad_key . compare ( classad_name )	1028:9:31940:31973	2607801	0	True				
ANR	2608213	UnaryOperationExpression	! classad_key . compare ( classad_name )		2607801	0					
ANR	2608214	UnaryOperator	!		2607801	0					
ANR	2608215	CallExpression	classad_key . compare ( classad_name )		2607801	1					
ANR	2608216	Callee	classad_key . compare		2607801	0					
ANR	2608217	MemberAccess	classad_key . compare		2607801	0					
ANR	2608218	Identifier	classad_key		2607801	0					
ANR	2608219	Identifier	compare		2607801	1					
ANR	2608220	ArgumentList	classad_name		2607801	1					
ANR	2608221	Argument	classad_name		2607801	0					
ANR	2608222	Identifier	classad_name		2607801	0					
ANR	2608223	CompoundStatement		61:45:2181:2181	2607801	1					
ANR	2608224	ExpressionStatement	have_classad = true	1029:6:31984:32003	2607801	0	True				
ANR	2608225	AssignmentExpression	have_classad = true		2607801	0		=			
ANR	2608226	Identifier	have_classad		2607801	0					
ANR	2608227	Identifier	true		2607801	1					
ANR	2608228	BreakStatement	break ;	1030:6:32011:32016	2607801	1	True				
ANR	2608229	IfStatement	"if ( ! expect . compare ( ""ExpectIn"" ) )"		2607801	4					
ANR	2608230	Condition	"! expect . compare ( ""ExpectIn"" )"	1033:8:32039:32065	2607801	0	True				
ANR	2608231	UnaryOperationExpression	"! expect . compare ( ""ExpectIn"" )"		2607801	0					
ANR	2608232	UnaryOperator	!		2607801	0					
ANR	2608233	CallExpression	"expect . compare ( ""ExpectIn"" )"		2607801	1					
ANR	2608234	Callee	expect . compare		2607801	0					
ANR	2608235	MemberAccess	expect . compare		2607801	0					
ANR	2608236	Identifier	expect		2607801	0					
ANR	2608237	Identifier	compare		2607801	1					
ANR	2608238	ArgumentList	"""ExpectIn"""		2607801	1					
ANR	2608239	Argument	"""ExpectIn"""		2607801	0					
ANR	2608240	PrimaryExpression	"""ExpectIn"""		2607801	0					
ANR	2608241	CompoundStatement		66:37:2273:2273	2607801	1					
ANR	2608242	IfStatement	if ( have_classad )		2607801	0					
ANR	2608243	Condition	have_classad	1034:9:32079:32090	2607801	0	True				
ANR	2608244	Identifier	have_classad		2607801	0					
ANR	2608245	CompoundStatement		67:23:2298:2298	2607801	1					
ANR	2608246	ExpressionStatement	"cout << ""OK: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""	1035:6:32101:32202	2607801	0	True				
ANR	2608247	ShiftExpression	"cout << ""OK: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2608248	Identifier	cout		2607801	0					
ANR	2608249	ShiftExpression	"""OK: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608250	PrimaryExpression	"""OK: """		2607801	0					
ANR	2608251	ShiftExpression	"classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608252	Identifier	classad_name		2607801	0					
ANR	2608253	ShiftExpression	""" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608254	PrimaryExpression	""" in """		2607801	0					
ANR	2608255	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608256	Identifier	view_name		2607801	0					
ANR	2608257	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608258	PrimaryExpression	""" on line """		2607801	0					
ANR	2608259	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2608260	Identifier	line_number		2607801	0					
ANR	2608261	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2608262	ElseStatement	else		2607801	0					
ANR	2608263	CompoundStatement		70:12:2421:2421	2607801	0					
ANR	2608264	ExpressionStatement	"cout << ""Error: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""	1038:6:32224:32335	2607801	0	True				
ANR	2608265	ShiftExpression	"cout << ""Error: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2608266	Identifier	cout		2607801	0					
ANR	2608267	ShiftExpression	"""Error: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608268	PrimaryExpression	"""Error: """		2607801	0					
ANR	2608269	ShiftExpression	"classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608270	Identifier	classad_name		2607801	0					
ANR	2608271	ShiftExpression	""" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608272	PrimaryExpression	""" is not in """		2607801	0					
ANR	2608273	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608274	Identifier	view_name		2607801	0					
ANR	2608275	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608276	PrimaryExpression	""" on line """		2607801	0					
ANR	2608277	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2608278	Identifier	line_number		2607801	0					
ANR	2608279	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2608280	ExpressionStatement	errors -> IncrementErrors ( )	1040:6:32343:32368	2607801	1	True				
ANR	2608281	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2608282	Callee	errors -> IncrementErrors		2607801	0					
ANR	2608283	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2608284	Identifier	errors		2607801	0					
ANR	2608285	Identifier	IncrementErrors		2607801	1					
ANR	2608286	ArgumentList			2607801	1					
ANR	2608287	ElseStatement	else		2607801	0					
ANR	2608288	CompoundStatement		76:9:2597:2597	2607801	0					
ANR	2608289	IfStatement	if ( have_classad )		2607801	0					
ANR	2608290	Condition	have_classad	1044:9:32403:32414	2607801	0	True				
ANR	2608291	Identifier	have_classad		2607801	0					
ANR	2608292	CompoundStatement		77:23:2622:2622	2607801	1					
ANR	2608293	ExpressionStatement	"cout << ""Error: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""	1045:6:32425:32529	2607801	0	True				
ANR	2608294	ShiftExpression	"cout << ""Error: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2608295	Identifier	cout		2607801	0					
ANR	2608296	ShiftExpression	"""Error: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608297	PrimaryExpression	"""Error: """		2607801	0					
ANR	2608298	ShiftExpression	"classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608299	Identifier	classad_name		2607801	0					
ANR	2608300	ShiftExpression	""" in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608301	PrimaryExpression	""" in """		2607801	0					
ANR	2608302	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608303	Identifier	view_name		2607801	0					
ANR	2608304	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608305	PrimaryExpression	""" on line """		2607801	0					
ANR	2608306	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2608307	Identifier	line_number		2607801	0					
ANR	2608308	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2608309	ExpressionStatement	errors -> IncrementErrors ( )	1047:6:32537:32562	2607801	1	True				
ANR	2608310	CallExpression	errors -> IncrementErrors ( )		2607801	0					
ANR	2608311	Callee	errors -> IncrementErrors		2607801	0					
ANR	2608312	PtrMemberAccess	errors -> IncrementErrors		2607801	0					
ANR	2608313	Identifier	errors		2607801	0					
ANR	2608314	Identifier	IncrementErrors		2607801	1					
ANR	2608315	ArgumentList			2607801	1					
ANR	2608316	ElseStatement	else		2607801	0					
ANR	2608317	CompoundStatement		81:12:2781:2781	2607801	0					
ANR	2608318	ExpressionStatement	"cout << ""OK: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""	1049:6:32584:32692	2607801	0	True				
ANR	2608319	ShiftExpression	"cout << ""OK: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	0		<<			
ANR	2608320	Identifier	cout		2607801	0					
ANR	2608321	ShiftExpression	"""OK: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608322	PrimaryExpression	"""OK: """		2607801	0					
ANR	2608323	ShiftExpression	"classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608324	Identifier	classad_name		2607801	0					
ANR	2608325	ShiftExpression	""" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608326	PrimaryExpression	""" is not in """		2607801	0					
ANR	2608327	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608328	Identifier	view_name		2607801	0					
ANR	2608329	ShiftExpression	""" on line "" << line_number << "".\\n"""		2607801	1		<<			
ANR	2608330	PrimaryExpression	""" on line """		2607801	0					
ANR	2608331	ShiftExpression	"line_number << "".\\n"""		2607801	1		<<			
ANR	2608332	Identifier	line_number		2607801	0					
ANR	2608333	PrimaryExpression	""".\\n"""		2607801	1					
ANR	2608334	ReturnStatement	return ;	1056:1:32720:32726	2607801	8	True				
ANR	2608335	ReturnType	static void		2607801	1					
ANR	2608336	Identifier	process_check_in_view		2607801	2					
ANR	2608337	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		2607801	3					
ANR	2608338	Parameter	const string & line	964:34:29665:29682	2607801	0	True				
ANR	2608339	ParameterType	const string &		2607801	0					
ANR	2608340	Identifier	line		2607801	1					
ANR	2608341	Parameter	int token_start	965:8:29693:29707	2607801	1	True				
ANR	2608342	ParameterType	int		2607801	0					
ANR	2608343	Identifier	token_start		2607801	1					
ANR	2608344	Parameter	int line_number	965:25:29710:29724	2607801	2	True				
ANR	2608345	ParameterType	int		2607801	0					
ANR	2608346	Identifier	line_number		2607801	1					
ANR	2608347	Parameter	const Parameters & parameters	966:8:29736:29763	2607801	3	True				
ANR	2608348	ParameterType	const Parameters &		2607801	0					
ANR	2608349	Identifier	parameters		2607801	1					
ANR	2608350	Parameter	ErrorCount * errors	967:8:29774:29791	2607801	4	True				
ANR	2608351	ParameterType	ErrorCount *		2607801	0					
ANR	2608352	Identifier	errors		2607801	1					
ANR	2608353	CFGEntryNode	ENTRY		2607801		True				
ANR	2608354	CFGExitNode	EXIT		2607801		True				
ANR	2608355	Symbol	& token_start		2607801						
ANR	2608356	Symbol	line		2607801						
ANR	2608357	Symbol	query . Query		2607801						
ANR	2608358	Symbol	view_name . compare		2607801						
ANR	2608359	Symbol	* classads		2607801						
ANR	2608360	Symbol	extra . compare		2607801						
ANR	2608361	Symbol	collections		2607801						
ANR	2608362	Symbol	have_view		2607801						
ANR	2608363	Symbol	line_number		2607801						
ANR	2608364	Symbol	expect . compare		2607801						
ANR	2608365	Symbol	extra		2607801						
ANR	2608366	Symbol	classad_name		2607801						
ANR	2608367	Symbol	have_classad		2607801						
ANR	2608368	Symbol	classad_key		2607801						
ANR	2608369	Symbol	* collection_name		2607801						
ANR	2608370	Symbol	classad_key . compare		2607801						
ANR	2608371	Symbol	collection_name . compare		2607801						
ANR	2608372	Symbol	view_name		2607801						
ANR	2608373	Symbol	* classad_name		2607801						
ANR	2608374	Symbol	token_start		2607801						
ANR	2608375	Symbol	NULL		2607801						
ANR	2608376	Symbol	query		2607801						
ANR	2608377	Symbol	false		2607801						
ANR	2608378	Symbol	collection		2607801						
ANR	2608379	Symbol	* collections		2607801						
ANR	2608380	Symbol	extract_token		2607801						
ANR	2608381	Symbol	expect		2607801						
ANR	2608382	Symbol	query . IsAfterLast		2607801						
ANR	2608383	Symbol	true		2607801						
ANR	2608384	Symbol	classad		2607801						
ANR	2608385	Symbol	classad_name . compare		2607801						
ANR	2608386	Symbol	parameters		2607801						
ANR	2608387	Symbol	classads		2607801						
ANR	2608388	Symbol	errors		2607801						
ANR	2608389	Symbol	collection_name		2607801						
ANR	2608390	Function	extract_token	1069:0:33242:34262							
ANR	2608391	FunctionDef	"extract_token (int * token_start , const string & line)"		2608390	0					
ANR	2608392	CompoundStatement		1070:0:33308:34262	2608390	0					
ANR	2608393	IdentifierDeclStatement	int token_end ;	1071:1:33311:33324	2608390	0	True				
ANR	2608394	IdentifierDecl	token_end		2608390	0					
ANR	2608395	IdentifierDeclType	int		2608390	0					
ANR	2608396	Identifier	token_end		2608390	1					
ANR	2608397	IdentifierDeclStatement	bool in_quote ;	1072:1:33327:33340	2608390	1	True				
ANR	2608398	IdentifierDecl	in_quote		2608390	0					
ANR	2608399	IdentifierDeclType	bool		2608390	0					
ANR	2608400	Identifier	in_quote		2608390	1					
ANR	2608401	IdentifierDeclStatement	string token ;	1073:1:33343:33355	2608390	2	True				
ANR	2608402	IdentifierDecl	token		2608390	0					
ANR	2608403	IdentifierDeclType	string		2608390	0					
ANR	2608404	Identifier	token		2608390	1					
ANR	2608405	IfStatement	if ( ( unsigned int ) * token_start >= line . size ( ) )		2608390	3					
ANR	2608406	Condition	( unsigned int ) * token_start >= line . size ( )	1075:5:33363:33404	2608390	0	True				
ANR	2608407	RelationalExpression	( unsigned int ) * token_start >= line . size ( )		2608390	0		>=			
ANR	2608408	CastExpression	( unsigned int ) * token_start		2608390	0					
ANR	2608409	CastTarget	unsigned int		2608390	0					
ANR	2608410	UnaryOperationExpression	* token_start		2608390	1					
ANR	2608411	UnaryOperator	*		2608390	0					
ANR	2608412	Identifier	token_start		2608390	1					
ANR	2608413	CallExpression	line . size ( )		2608390	1					
ANR	2608414	Callee	line . size		2608390	0					
ANR	2608415	MemberAccess	line . size		2608390	0					
ANR	2608416	Identifier	line		2608390	0					
ANR	2608417	Identifier	size		2608390	1					
ANR	2608418	ArgumentList			2608390	1					
ANR	2608419	CompoundStatement		6:49:98:98	2608390	1					
ANR	2608420	ExpressionStatement	"token = """""	1076:2:33411:33421	2608390	0	True				
ANR	2608421	AssignmentExpression	"token = """""		2608390	0		=			
ANR	2608422	Identifier	token		2608390	0					
ANR	2608423	PrimaryExpression	""""""		2608390	1					
ANR	2608424	ElseStatement	else		2608390	0					
ANR	2608425	CompoundStatement		9:6:123:123	2608390	0					
ANR	2608426	WhileStatement	while ( isspace ( line [ * token_start ] ) )		2608390	0					
ANR	2608427	Condition	isspace ( line [ * token_start ] )	1080:9:33471:33497	2608390	0	True				
ANR	2608428	CallExpression	isspace ( line [ * token_start ] )		2608390	0					
ANR	2608429	Callee	isspace		2608390	0					
ANR	2608430	Identifier	isspace		2608390	0					
ANR	2608431	ArgumentList	line [ * token_start ]		2608390	1					
ANR	2608432	Argument	line [ * token_start ]		2608390	0					
ANR	2608433	ArrayIndexing	line [ * token_start ]		2608390	0					
ANR	2608434	Identifier	line		2608390	0					
ANR	2608435	UnaryOperationExpression	* token_start		2608390	1					
ANR	2608436	UnaryOperator	*		2608390	0					
ANR	2608437	Identifier	token_start		2608390	1					
ANR	2608438	CompoundStatement		11:38:191:191	2608390	1					
ANR	2608439	ExpressionStatement	( * token_start ) ++	1081:3:33505:33521	2608390	0	True				
ANR	2608440	PostIncDecOperationExpression	( * token_start ) ++		2608390	0					
ANR	2608441	UnaryOperationExpression	* token_start		2608390	0					
ANR	2608442	UnaryOperator	*		2608390	0					
ANR	2608443	Identifier	token_start		2608390	1					
ANR	2608444	IncDec	++		2608390	1					
ANR	2608445	ExpressionStatement	token_end = * token_start	1083:2:33529:33553	2608390	1	True				
ANR	2608446	AssignmentExpression	token_end = * token_start		2608390	0		=			
ANR	2608447	Identifier	token_end		2608390	0					
ANR	2608448	UnaryOperationExpression	* token_start		2608390	1					
ANR	2608449	UnaryOperator	*		2608390	0					
ANR	2608450	Identifier	token_start		2608390	1					
ANR	2608451	ExpressionStatement	in_quote = false	1084:2:33557:33573	2608390	2	True				
ANR	2608452	AssignmentExpression	in_quote = false		2608390	0		=			
ANR	2608453	Identifier	in_quote		2608390	0					
ANR	2608454	Identifier	false		2608390	1					
ANR	2608455	WhileStatement	while ( ( ! isspace ( line [ token_end ] ) || in_quote ) && line [ token_end ] != 0 )		2608390	3					
ANR	2608456	Condition	( ! isspace ( line [ token_end ] ) || in_quote ) && line [ token_end ] != 0	1085:9:33584:33646	2608390	0	True				
ANR	2608457	AndExpression	( ! isspace ( line [ token_end ] ) || in_quote ) && line [ token_end ] != 0		2608390	0		&&			
ANR	2608458	OrExpression	! isspace ( line [ token_end ] ) || in_quote		2608390	0		||			
ANR	2608459	UnaryOperationExpression	! isspace ( line [ token_end ] )		2608390	0					
ANR	2608460	UnaryOperator	!		2608390	0					
ANR	2608461	CallExpression	isspace ( line [ token_end ] )		2608390	1					
ANR	2608462	Callee	isspace		2608390	0					
ANR	2608463	Identifier	isspace		2608390	0					
ANR	2608464	ArgumentList	line [ token_end ]		2608390	1					
ANR	2608465	Argument	line [ token_end ]		2608390	0					
ANR	2608466	ArrayIndexing	line [ token_end ]		2608390	0					
ANR	2608467	Identifier	line		2608390	0					
ANR	2608468	Identifier	token_end		2608390	1					
ANR	2608469	Identifier	in_quote		2608390	1					
ANR	2608470	EqualityExpression	line [ token_end ] != 0		2608390	1		!=			
ANR	2608471	ArrayIndexing	line [ token_end ]		2608390	0					
ANR	2608472	Identifier	line		2608390	0					
ANR	2608473	Identifier	token_end		2608390	1					
ANR	2608474	PrimaryExpression	0		2608390	1					
ANR	2608475	CompoundStatement		16:74:340:340	2608390	1					
ANR	2608476	IfStatement	"if ( line [ token_end ] == '\\""' || line [ token_end ] == '\\'' )"		2608390	0					
ANR	2608477	Condition	"line [ token_end ] == '\\""' || line [ token_end ] == '\\''"	1086:7:33658:33707	2608390	0	True				
ANR	2608478	OrExpression	"line [ token_end ] == '\\""' || line [ token_end ] == '\\''"		2608390	0		||			
ANR	2608479	EqualityExpression	"line [ token_end ] == '\\""'"		2608390	0		==			
ANR	2608480	ArrayIndexing	line [ token_end ]		2608390	0					
ANR	2608481	Identifier	line		2608390	0					
ANR	2608482	Identifier	token_end		2608390	1					
ANR	2608483	PrimaryExpression	"'\\""'"		2608390	1					
ANR	2608484	EqualityExpression	line [ token_end ] == '\\''		2608390	1		==			
ANR	2608485	ArrayIndexing	line [ token_end ]		2608390	0					
ANR	2608486	Identifier	line		2608390	0					
ANR	2608487	Identifier	token_end		2608390	1					
ANR	2608488	PrimaryExpression	'\\''		2608390	1					
ANR	2608489	CompoundStatement		17:59:401:401	2608390	1					
ANR	2608490	IfStatement	if ( token_end == * token_start )		2608390	0					
ANR	2608491	Condition	token_end == * token_start	1087:8:33720:33744	2608390	0	True				
ANR	2608492	EqualityExpression	token_end == * token_start		2608390	0		==			
ANR	2608493	Identifier	token_end		2608390	0					
ANR	2608494	UnaryOperationExpression	* token_start		2608390	1					
ANR	2608495	UnaryOperator	*		2608390	0					
ANR	2608496	Identifier	token_start		2608390	1					
ANR	2608497	CompoundStatement		18:35:438:438	2608390	1					
ANR	2608498	ExpressionStatement	in_quote = true	1088:5:33754:33769	2608390	0	True				
ANR	2608499	AssignmentExpression	in_quote = true		2608390	0		=			
ANR	2608500	Identifier	in_quote		2608390	0					
ANR	2608501	Identifier	true		2608390	1					
ANR	2608502	ElseStatement	else		2608390	0					
ANR	2608503	CompoundStatement		21:9:477:477	2608390	0					
ANR	2608504	ExpressionStatement	in_quote = ! in_quote	1091:5:33793:33813	2608390	0	True				
ANR	2608505	AssignmentExpression	in_quote = ! in_quote		2608390	0		=			
ANR	2608506	Identifier	in_quote		2608390	0					
ANR	2608507	UnaryOperationExpression	! in_quote		2608390	1					
ANR	2608508	UnaryOperator	!		2608390	0					
ANR	2608509	Identifier	in_quote		2608390	1					
ANR	2608510	ExpressionStatement	token_end ++	1092:5:33820:33831	2608390	1	True				
ANR	2608511	PostIncDecOperationExpression	token_end ++		2608390	0					
ANR	2608512	Identifier	token_end		2608390	0					
ANR	2608513	IncDec	++		2608390	1					
ANR	2608514	BreakStatement	break ;	1093:5:33838:33843	2608390	2	True				
ANR	2608515	IfStatement	"if ( line [ token_end ] == '\\\\' && ( line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\'' ) )"		2608390	1					
ANR	2608516	Condition	"line [ token_end ] == '\\\\' && ( line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\'' )"	1097:7:33943:34030	2608390	0	True				
ANR	2608517	AndExpression	"line [ token_end ] == '\\\\' && ( line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\'' )"		2608390	0		&&			
ANR	2608518	EqualityExpression	line [ token_end ] == '\\\\'		2608390	0		==			
ANR	2608519	ArrayIndexing	line [ token_end ]		2608390	0					
ANR	2608520	Identifier	line		2608390	0					
ANR	2608521	Identifier	token_end		2608390	1					
ANR	2608522	PrimaryExpression	'\\\\'		2608390	1					
ANR	2608523	OrExpression	"line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\''"		2608390	1		||			
ANR	2608524	EqualityExpression	"line [ token_end + 1 ] == '\\""'"		2608390	0		==			
ANR	2608525	ArrayIndexing	line [ token_end + 1 ]		2608390	0					
ANR	2608526	Identifier	line		2608390	0					
ANR	2608527	AdditiveExpression	token_end + 1		2608390	1		+			
ANR	2608528	Identifier	token_end		2608390	0					
ANR	2608529	PrimaryExpression	1		2608390	1					
ANR	2608530	PrimaryExpression	"'\\""'"		2608390	1					
ANR	2608531	EqualityExpression	line [ token_end + 1 ] == '\\''		2608390	1		==			
ANR	2608532	ArrayIndexing	line [ token_end + 1 ]		2608390	0					
ANR	2608533	Identifier	line		2608390	0					
ANR	2608534	AdditiveExpression	token_end + 1		2608390	1		+			
ANR	2608535	Identifier	token_end		2608390	0					
ANR	2608536	PrimaryExpression	1		2608390	1					
ANR	2608537	PrimaryExpression	'\\''		2608390	1					
ANR	2608538	CompoundStatement		29:65:724:724	2608390	1					
ANR	2608539	ExpressionStatement	token_end ++	1099:4:34039:34050	2608390	0	True				
ANR	2608540	PostIncDecOperationExpression	token_end ++		2608390	0					
ANR	2608541	Identifier	token_end		2608390	0					
ANR	2608542	IncDec	++		2608390	1					
ANR	2608543	ExpressionStatement	token_end ++	1101:3:34060:34071	2608390	2	True				
ANR	2608544	PostIncDecOperationExpression	token_end ++		2608390	0					
ANR	2608545	Identifier	token_end		2608390	0					
ANR	2608546	IncDec	++		2608390	1					
ANR	2608547	IfStatement	if ( * token_start == token_end )		2608390	4					
ANR	2608548	Condition	* token_start == token_end	1104:6:34086:34110	2608390	0	True				
ANR	2608549	EqualityExpression	* token_start == token_end		2608390	0		==			
ANR	2608550	UnaryOperationExpression	* token_start		2608390	0					
ANR	2608551	UnaryOperator	*		2608390	0					
ANR	2608552	Identifier	token_start		2608390	1					
ANR	2608553	Identifier	token_end		2608390	1					
ANR	2608554	CompoundStatement		35:33:804:804	2608390	1					
ANR	2608555	ExpressionStatement	"token = """""	1105:3:34118:34128	2608390	0	True				
ANR	2608556	AssignmentExpression	"token = """""		2608390	0		=			
ANR	2608557	Identifier	token		2608390	0					
ANR	2608558	PrimaryExpression	""""""		2608390	1					
ANR	2608559	ElseStatement	else		2608390	0					
ANR	2608560	CompoundStatement		38:7:832:832	2608390	0					
ANR	2608561	ExpressionStatement	"token = line . substr ( * token_start , token_end - ( * token_start ) )"	1108:3:34146:34205	2608390	0	True				
ANR	2608562	AssignmentExpression	"token = line . substr ( * token_start , token_end - ( * token_start ) )"		2608390	0		=			
ANR	2608563	Identifier	token		2608390	0					
ANR	2608564	CallExpression	"line . substr ( * token_start , token_end - ( * token_start ) )"		2608390	1					
ANR	2608565	Callee	line . substr		2608390	0					
ANR	2608566	MemberAccess	line . substr		2608390	0					
ANR	2608567	Identifier	line		2608390	0					
ANR	2608568	Identifier	substr		2608390	1					
ANR	2608569	ArgumentList	* token_start		2608390	1					
ANR	2608570	Argument	* token_start		2608390	0					
ANR	2608571	UnaryOperationExpression	* token_start		2608390	0					
ANR	2608572	UnaryOperator	*		2608390	0					
ANR	2608573	Identifier	token_start		2608390	1					
ANR	2608574	Argument	token_end - ( * token_start )		2608390	1					
ANR	2608575	AdditiveExpression	token_end - ( * token_start )		2608390	0		-			
ANR	2608576	Identifier	token_end		2608390	0					
ANR	2608577	UnaryOperationExpression	* token_start		2608390	1					
ANR	2608578	UnaryOperator	*		2608390	0					
ANR	2608579	Identifier	token_start		2608390	1					
ANR	2608580	ExpressionStatement	* token_start = token_end + 1	1109:3:34210:34238	2608390	1	True				
ANR	2608581	AssignmentExpression	* token_start = token_end + 1		2608390	0		=			
ANR	2608582	UnaryOperationExpression	* token_start		2608390	0					
ANR	2608583	UnaryOperator	*		2608390	0					
ANR	2608584	Identifier	token_start		2608390	1					
ANR	2608585	AdditiveExpression	token_end + 1		2608390	1		+			
ANR	2608586	Identifier	token_end		2608390	0					
ANR	2608587	PrimaryExpression	1		2608390	1					
ANR	2608588	ReturnStatement	return token ;	1112:1:34248:34260	2608390	4	True				
ANR	2608589	Identifier	token		2608390	0					
ANR	2608590	ReturnType	static string		2608390	1					
ANR	2608591	Identifier	extract_token		2608390	2					
ANR	2608592	ParameterList	"int * token_start , const string & line"		2608390	3					
ANR	2608593	Parameter	int * token_start	1069:28:33270:33285	2608390	0	True				
ANR	2608594	ParameterType	int *		2608390	0					
ANR	2608595	Identifier	token_start		2608390	1					
ANR	2608596	Parameter	const string & line	1069:46:33288:33305	2608390	1	True				
ANR	2608597	ParameterType	const string &		2608390	0					
ANR	2608598	Identifier	line		2608390	1					
ANR	2608599	CFGEntryNode	ENTRY		2608390		True				
ANR	2608600	CFGExitNode	EXIT		2608390		True				
ANR	2608601	Symbol	token_start		2608390						
ANR	2608602	Symbol	line		2608390						
ANR	2608603	Symbol	token_end		2608390						
ANR	2608604	Symbol	line . substr		2608390						
ANR	2608605	Symbol	line . size		2608390						
ANR	2608606	Symbol	isspace		2608390						
ANR	2608607	Symbol	false		2608390						
ANR	2608608	Symbol	* line		2608390						
ANR	2608609	Symbol	token		2608390						
ANR	2608610	Symbol	* token_start		2608390						
ANR	2608611	Symbol	in_quote		2608390						
ANR	2608612	Symbol	* token_end		2608390						
ANR	2608613	Symbol	true		2608390						
ANR	2608614	Symbol	* * token_start		2608390						
ANR	2608615	Function	empty_line	1122:0:34559:34778							
ANR	2608616	FunctionDef	empty_line (const string & line)		2608615	0					
ANR	2608617	CompoundStatement		1123:0:34602:34778	2608615	0					
ANR	2608618	IdentifierDeclStatement	bool is_empty = true ;	1124:1:34605:34625	2608615	0	True				
ANR	2608619	IdentifierDecl	is_empty = true		2608615	0					
ANR	2608620	IdentifierDeclType	bool		2608615	0					
ANR	2608621	Identifier	is_empty		2608615	1					
ANR	2608622	AssignmentExpression	is_empty = true		2608615	2		=			
ANR	2608623	Identifier	true		2608615	0					
ANR	2608624	Identifier	true		2608615	1					
ANR	2608625	IdentifierDeclStatement	int index ;	1125:1:34628:34638	2608615	1	True				
ANR	2608626	IdentifierDecl	index		2608615	0					
ANR	2608627	IdentifierDeclType	int		2608615	0					
ANR	2608628	Identifier	index		2608615	1					
ANR	2608629	ForStatement	for ( index = 0 ; line [ index ] != 0 ; index ++ )		2608615	2					
ANR	2608630	ForInit	index = 0 ;	1127:6:34647:34656	2608615	0	True				
ANR	2608631	AssignmentExpression	index = 0		2608615	0		=			
ANR	2608632	Identifier	index		2608615	0					
ANR	2608633	PrimaryExpression	0		2608615	1					
ANR	2608634	Condition	line [ index ] != 0	1127:17:34658:34673	2608615	1	True				
ANR	2608635	EqualityExpression	line [ index ] != 0		2608615	0		!=			
ANR	2608636	ArrayIndexing	line [ index ]		2608615	0					
ANR	2608637	Identifier	line		2608615	0					
ANR	2608638	Identifier	index		2608615	1					
ANR	2608639	PrimaryExpression	0		2608615	1					
ANR	2608640	PostIncDecOperationExpression	index ++	1127:35:34676:34682	2608615	2	True				
ANR	2608641	Identifier	index		2608615	0					
ANR	2608642	IncDec	++		2608615	1					
ANR	2608643	CompoundStatement		5:44:82:82	2608615	3					
ANR	2608644	IfStatement	if ( ! isspace ( line [ index ] ) )		2608615	0					
ANR	2608645	Condition	! isspace ( line [ index ] )	1128:6:34693:34713	2608615	0	True				
ANR	2608646	UnaryOperationExpression	! isspace ( line [ index ] )		2608615	0					
ANR	2608647	UnaryOperator	!		2608615	0					
ANR	2608648	CallExpression	isspace ( line [ index ] )		2608615	1					
ANR	2608649	Callee	isspace		2608615	0					
ANR	2608650	Identifier	isspace		2608615	0					
ANR	2608651	ArgumentList	line [ index ]		2608615	1					
ANR	2608652	Argument	line [ index ]		2608615	0					
ANR	2608653	ArrayIndexing	line [ index ]		2608615	0					
ANR	2608654	Identifier	line		2608615	0					
ANR	2608655	Identifier	index		2608615	1					
ANR	2608656	CompoundStatement		6:29:113:113	2608615	1					
ANR	2608657	ExpressionStatement	is_empty = false	1129:3:34721:34737	2608615	0	True				
ANR	2608658	AssignmentExpression	is_empty = false		2608615	0		=			
ANR	2608659	Identifier	is_empty		2608615	0					
ANR	2608660	Identifier	false		2608615	1					
ANR	2608661	BreakStatement	break ;	1130:3:34742:34747	2608615	1	True				
ANR	2608662	ReturnStatement	return is_empty ;	1134:1:34761:34776	2608615	3	True				
ANR	2608663	Identifier	is_empty		2608615	0					
ANR	2608664	ReturnType	static bool		2608615	1					
ANR	2608665	Identifier	empty_line		2608615	2					
ANR	2608666	ParameterList	const string & line		2608615	3					
ANR	2608667	Parameter	const string & line	1122:23:34582:34599	2608615	0	True				
ANR	2608668	ParameterType	const string &		2608615	0					
ANR	2608669	Identifier	line		2608615	1					
ANR	2608670	CFGEntryNode	ENTRY		2608615		True				
ANR	2608671	CFGExitNode	EXIT		2608615		True				
ANR	2608672	Symbol	line		2608615						
ANR	2608673	Symbol	* index		2608615						
ANR	2608674	Symbol	true		2608615						
ANR	2608675	Symbol	isspace		2608615						
ANR	2608676	Symbol	false		2608615						
ANR	2608677	Symbol	index		2608615						
ANR	2608678	Symbol	* line		2608615						
ANR	2608679	Symbol	is_empty		2608615						
ANR	2608680	Function	Parameters :: ParseCommandLine	1145:0:35080:35680							
ANR	2608681	FunctionDef	"Parameters :: ParseCommandLine (int argc , char * * argv)"		2608680	0					
ANR	2608682	CompoundStatement		1146:0:35137:35680	2608680	0					
ANR	2608683	ExpressionStatement	debug = false	1148:1:35174:35192	2608680	0	True				
ANR	2608684	AssignmentExpression	debug = false		2608680	0		=			
ANR	2608685	Identifier	debug		2608680	0					
ANR	2608686	Identifier	false		2608680	1					
ANR	2608687	ExpressionStatement	"input_file = """""	1149:1:35195:35210	2608680	1	True				
ANR	2608688	AssignmentExpression	"input_file = """""		2608680	0		=			
ANR	2608689	Identifier	input_file		2608680	0					
ANR	2608690	PrimaryExpression	""""""		2608680	1					
ANR	2608691	ForStatement	for ( int arg_index = 1 ; arg_index < argc ; arg_index ++ )		2608680	2					
ANR	2608692	ForInit	int arg_index = 1 ;	1152:6:35266:35283	2608680	0	True				
ANR	2608693	IdentifierDeclStatement	int arg_index = 1 ;		2608680	0					
ANR	2608694	IdentifierDecl	arg_index = 1		2608680	0					
ANR	2608695	IdentifierDeclType	int		2608680	0					
ANR	2608696	Identifier	arg_index		2608680	1					
ANR	2608697	AssignmentExpression	arg_index = 1		2608680	2		=			
ANR	2608698	Identifier	arg_index		2608680	0					
ANR	2608699	PrimaryExpression	1		2608680	1					
ANR	2608700	Condition	arg_index < argc	1152:25:35285:35300	2608680	1	True				
ANR	2608701	RelationalExpression	arg_index < argc		2608680	0		<			
ANR	2608702	Identifier	arg_index		2608680	0					
ANR	2608703	Identifier	argc		2608680	1					
ANR	2608704	PostIncDecOperationExpression	arg_index ++	1152:43:35303:35313	2608680	2	True				
ANR	2608705	Identifier	arg_index		2608680	0					
ANR	2608706	IncDec	++		2608680	1					
ANR	2608707	CompoundStatement		7:56:178:178	2608680	3					
ANR	2608708	IfStatement	"if ( ! strcmp ( argv [ arg_index ] , ""-d"" ) || ! strcmp ( argv [ arg_index ] , ""-debug"" ) )"		2608680	0					
ANR	2608709	Condition	"! strcmp ( argv [ arg_index ] , ""-d"" ) || ! strcmp ( argv [ arg_index ] , ""-debug"" )"	1153:6:35324:35394	2608680	0	True				
ANR	2608710	OrExpression	"! strcmp ( argv [ arg_index ] , ""-d"" ) || ! strcmp ( argv [ arg_index ] , ""-debug"" )"		2608680	0		||			
ANR	2608711	UnaryOperationExpression	"! strcmp ( argv [ arg_index ] , ""-d"" )"		2608680	0					
ANR	2608712	UnaryOperator	!		2608680	0					
ANR	2608713	CallExpression	"strcmp ( argv [ arg_index ] , ""-d"" )"		2608680	1					
ANR	2608714	Callee	strcmp		2608680	0					
ANR	2608715	Identifier	strcmp		2608680	0					
ANR	2608716	ArgumentList	argv [ arg_index ]		2608680	1					
ANR	2608717	Argument	argv [ arg_index ]		2608680	0					
ANR	2608718	ArrayIndexing	argv [ arg_index ]		2608680	0					
ANR	2608719	Identifier	argv		2608680	0					
ANR	2608720	Identifier	arg_index		2608680	1					
ANR	2608721	Argument	"""-d"""		2608680	1					
ANR	2608722	PrimaryExpression	"""-d"""		2608680	0					
ANR	2608723	UnaryOperationExpression	"! strcmp ( argv [ arg_index ] , ""-debug"" )"		2608680	1					
ANR	2608724	UnaryOperator	!		2608680	0					
ANR	2608725	CallExpression	"strcmp ( argv [ arg_index ] , ""-debug"" )"		2608680	1					
ANR	2608726	Callee	strcmp		2608680	0					
ANR	2608727	Identifier	strcmp		2608680	0					
ANR	2608728	ArgumentList	argv [ arg_index ]		2608680	1					
ANR	2608729	Argument	argv [ arg_index ]		2608680	0					
ANR	2608730	ArrayIndexing	argv [ arg_index ]		2608680	0					
ANR	2608731	Identifier	argv		2608680	0					
ANR	2608732	Identifier	arg_index		2608680	1					
ANR	2608733	Argument	"""-debug"""		2608680	1					
ANR	2608734	PrimaryExpression	"""-debug"""		2608680	0					
ANR	2608735	CompoundStatement		9:42:259:259	2608680	1					
ANR	2608736	ExpressionStatement	debug = true	1155:3:35402:35414	2608680	0	True				
ANR	2608737	AssignmentExpression	debug = true		2608680	0		=			
ANR	2608738	Identifier	debug		2608680	0					
ANR	2608739	Identifier	true		2608680	1					
ANR	2608740	ElseStatement	else		2608680	0					
ANR	2608741	CompoundStatement		12:7:289:289	2608680	0					
ANR	2608742	IfStatement	"if ( ! input_file . compare ( """" ) )"		2608680	0					
ANR	2608743	Condition	"! input_file . compare ( """" )"	1158:7:35436:35458	2608680	0	True				
ANR	2608744	UnaryOperationExpression	"! input_file . compare ( """" )"		2608680	0					
ANR	2608745	UnaryOperator	!		2608680	0					
ANR	2608746	CallExpression	"input_file . compare ( """" )"		2608680	1					
ANR	2608747	Callee	input_file . compare		2608680	0					
ANR	2608748	MemberAccess	input_file . compare		2608680	0					
ANR	2608749	Identifier	input_file		2608680	0					
ANR	2608750	Identifier	compare		2608680	1					
ANR	2608751	ArgumentList	""""""		2608680	1					
ANR	2608752	Argument	""""""		2608680	0					
ANR	2608753	PrimaryExpression	""""""		2608680	0					
ANR	2608754	CompoundStatement		13:32:323:323	2608680	1					
ANR	2608755	ExpressionStatement	input_file = argv [ arg_index ]	1159:4:35467:35495	2608680	0	True				
ANR	2608756	AssignmentExpression	input_file = argv [ arg_index ]		2608680	0		=			
ANR	2608757	Identifier	input_file		2608680	0					
ANR	2608758	ArrayIndexing	argv [ arg_index ]		2608680	1					
ANR	2608759	Identifier	argv		2608680	0					
ANR	2608760	Identifier	arg_index		2608680	1					
ANR	2608761	IfStatement	"if ( ! input_file . compare ( """" ) )"		2608680	3					
ANR	2608762	Condition	"! input_file . compare ( """" )"	1164:5:35515:35537	2608680	0	True				
ANR	2608763	UnaryOperationExpression	"! input_file . compare ( """" )"		2608680	0					
ANR	2608764	UnaryOperator	!		2608680	0					
ANR	2608765	CallExpression	"input_file . compare ( """" )"		2608680	1					
ANR	2608766	Callee	input_file . compare		2608680	0					
ANR	2608767	MemberAccess	input_file . compare		2608680	0					
ANR	2608768	Identifier	input_file		2608680	0					
ANR	2608769	Identifier	compare		2608680	1					
ANR	2608770	ArgumentList	""""""		2608680	1					
ANR	2608771	Argument	""""""		2608680	0					
ANR	2608772	PrimaryExpression	""""""		2608680	0					
ANR	2608773	CompoundStatement		19:30:402:402	2608680	1					
ANR	2608774	ExpressionStatement	"cout << ""Error: you didn't specify an input file.\\n"""	1165:2:35544:35596	2608680	0	True				
ANR	2608775	ShiftExpression	"cout << ""Error: you didn't specify an input file.\\n"""		2608680	0		<<			
ANR	2608776	Identifier	cout		2608680	0					
ANR	2608777	PrimaryExpression	"""Error: you didn't specify an input file.\\n"""		2608680	1					
ANR	2608778	ExpressionStatement	"cout << ""Usage: test_classads [-debug] <input-file>\\n"""	1166:2:35600:35654	2608680	1	True				
ANR	2608779	ShiftExpression	"cout << ""Usage: test_classads [-debug] <input-file>\\n"""		2608680	0		<<			
ANR	2608780	Identifier	cout		2608680	0					
ANR	2608781	PrimaryExpression	"""Usage: test_classads [-debug] <input-file>\\n"""		2608680	1					
ANR	2608782	ExpressionStatement	exit ( 1 )	1167:2:35658:35665	2608680	2	True				
ANR	2608783	CallExpression	exit ( 1 )		2608680	0					
ANR	2608784	Callee	exit		2608680	0					
ANR	2608785	Identifier	exit		2608680	0					
ANR	2608786	ArgumentList	1		2608680	1					
ANR	2608787	Argument	1		2608680	0					
ANR	2608788	PrimaryExpression	1		2608680	0					
ANR	2608789	ReturnStatement	return ;	1170:1:35672:35678	2608680	4	True				
ANR	2608790	ReturnType	void		2608680	1					
ANR	2608791	Identifier	Parameters :: ParseCommandLine		2608680	2					
ANR	2608792	ParameterList	"int argc , char * * argv"		2608680	3					
ANR	2608793	Parameter	int argc	1145:34:35114:35121	2608680	0	True				
ANR	2608794	ParameterType	int		2608680	0					
ANR	2608795	Identifier	argc		2608680	1					
ANR	2608796	Parameter	char * * argv	1145:44:35124:35134	2608680	1	True				
ANR	2608797	ParameterType	char * *		2608680	0					
ANR	2608798	Identifier	argv		2608680	1					
ANR	2608799	CFGEntryNode	ENTRY		2608680		True				
ANR	2608800	CFGExitNode	EXIT		2608680		True				
ANR	2608801	Symbol	argc		2608680						
ANR	2608802	Symbol	strcmp		2608680						
ANR	2608803	Symbol	input_file		2608680						
ANR	2608804	Symbol	debug		2608680						
ANR	2608805	Symbol	* arg_index		2608680						
ANR	2608806	Symbol	arg_index		2608680						
ANR	2608807	Symbol	input_file . compare		2608680						
ANR	2608808	Symbol	false		2608680						
ANR	2608809	Symbol	true		2608680						
ANR	2608810	Symbol	* argv		2608680						
ANR	2608811	Symbol	argv		2608680						
