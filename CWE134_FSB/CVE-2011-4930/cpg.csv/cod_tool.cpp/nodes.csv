command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	768047	File	data/converged/CVE-2011-4930_htcondor/cod_tool.cpp								
ANR	768048	DeclStmt									
ANR	768049	Decl							int	int	cmd
ANR	768050	DeclStmt									
ANR	768051	Decl							char	char *	addr
ANR	768052	DeclStmt									
ANR	768053	Decl							char	char *	name
ANR	768054	DeclStmt									
ANR	768055	Decl							DCCollector	DCCollector *	pool
ANR	768056	DeclStmt									
ANR	768057	Decl							char	char *	target
ANR	768058	DeclStmt									
ANR	768059	Decl							char	char *	my_name
ANR	768060	DeclStmt									
ANR	768061	Decl							char	char *	claim_id
ANR	768062	DeclStmt									
ANR	768063	Decl							char	char *	classad_path
ANR	768064	DeclStmt									
ANR	768065	Decl							char	char *	requirements
ANR	768066	DeclStmt									
ANR	768067	Decl							char	char *	job_keyword
ANR	768068	DeclStmt									
ANR	768069	Decl							char	char *	jobad_path
ANR	768070	DeclStmt									
ANR	768071	Decl							char	char *	proxy_file
ANR	768072	DeclStmt									
ANR	768073	Decl							FILE	FILE *	CA_PATH
ANR	768074	DeclStmt									
ANR	768075	Decl							FILE	FILE *	JOBAD_PATH
ANR	768076	DeclStmt									
ANR	768077	Decl							int	int	cluster_id
ANR	768078	DeclStmt									
ANR	768079	Decl							int	int	proc_id
ANR	768080	DeclStmt									
ANR	768081	Decl							int	int	timeout
ANR	768082	DeclStmt									
ANR	768083	Decl							int	int	lease_time
ANR	768084	DeclStmt									
ANR	768085	Decl							bool	bool	needs_id
ANR	768086	DeclStmt									
ANR	768087	Decl							VacateType	VacateType	vacate_type
ANR	768088	DeclStmt									
ANR	768089	Decl							void	void ( void )	version
ANR	768090	DeclStmt									
ANR	768091	Decl							void	void ( const char * opt )	invalid
ANR	768092	DeclStmt									
ANR	768093	Decl							void	void ( const char * opt )	ambiguous
ANR	768094	DeclStmt									
ANR	768095	Decl							void	void ( const char * opt )	another
ANR	768096	DeclStmt									
ANR	768097	Decl							void	"void ( char * opt , char * arg )"	parseCOpt
ANR	768098	DeclStmt									
ANR	768099	Decl							void	"void ( char * opt , char * arg )"	parsePOpt
ANR	768100	DeclStmt									
ANR	768101	Decl							void	"void ( int argc , char * argv [ ] )"	parseArgv
ANR	768102	DeclStmt									
ANR	768103	Decl							int	"int ( int argc , char * argv [ ] )"	getCommandFromArgv
ANR	768104	DeclStmt									
ANR	768105	Decl							void	"void ( ClassAd * reply , DCStartd * startd )"	printOutput
ANR	768106	DeclStmt									
ANR	768107	Decl							void	void ( ClassAd * )	fillRequestAd
ANR	768108	DeclStmt									
ANR	768109	Decl							void	void ( ClassAd * )	fillActivateAd
ANR	768110	DeclStmt									
ANR	768111	Decl							bool	bool ( ClassAd * )	dumpAdIntoRequest
ANR	768112	Function	main	86:0:2583:4246							
ANR	768113	FunctionDef	"main (int argc , char * argv [ ])"		768112	0					
ANR	768114	CompoundStatement		88:0:2618:4246	768112	0					
ANR	768115	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	93:1:2727:2765	768112	0	True				
ANR	768116	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		768112	0					
ANR	768117	Callee	install_sig_handler		768112	0					
ANR	768118	Identifier	install_sig_handler		768112	0					
ANR	768119	ArgumentList	SIGPIPE		768112	1					
ANR	768120	Argument	SIGPIPE		768112	0					
ANR	768121	Identifier	SIGPIPE		768112	0					
ANR	768122	Argument	SIG_IGN		768112	1					
ANR	768123	Identifier	SIG_IGN		768112	0					
ANR	768124	ExpressionStatement	"myDistro -> Init ( argc , argv )"	96:1:2776:2804	768112	1	True				
ANR	768125	CallExpression	"myDistro -> Init ( argc , argv )"		768112	0					
ANR	768126	Callee	myDistro -> Init		768112	0					
ANR	768127	PtrMemberAccess	myDistro -> Init		768112	0					
ANR	768128	Identifier	myDistro		768112	0					
ANR	768129	Identifier	Init		768112	1					
ANR	768130	ArgumentList	argc		768112	1					
ANR	768131	Argument	argc		768112	0					
ANR	768132	Identifier	argc		768112	0					
ANR	768133	Argument	argv		768112	1					
ANR	768134	Identifier	argv		768112	0					
ANR	768135	ExpressionStatement	config ( )	98:1:2808:2816	768112	2	True				
ANR	768136	CallExpression	config ( )		768112	0					
ANR	768137	Callee	config		768112	0					
ANR	768138	Identifier	config		768112	0					
ANR	768139	ArgumentList			768112	1					
ANR	768140	ExpressionStatement	"cmd = getCommandFromArgv ( argc , argv )"	100:1:2820:2858	768112	3	True				
ANR	768141	AssignmentExpression	"cmd = getCommandFromArgv ( argc , argv )"		768112	0		=			
ANR	768142	Identifier	cmd		768112	0					
ANR	768143	CallExpression	"getCommandFromArgv ( argc , argv )"		768112	1					
ANR	768144	Callee	getCommandFromArgv		768112	0					
ANR	768145	Identifier	getCommandFromArgv		768112	0					
ANR	768146	ArgumentList	argc		768112	1					
ANR	768147	Argument	argc		768112	0					
ANR	768148	Identifier	argc		768112	0					
ANR	768149	Argument	argv		768112	1					
ANR	768150	Identifier	argv		768112	0					
ANR	768151	ExpressionStatement	"parseArgv ( argc , argv )"	102:1:2863:2886	768112	4	True				
ANR	768152	CallExpression	"parseArgv ( argc , argv )"		768112	0					
ANR	768153	Callee	parseArgv		768112	0					
ANR	768154	Identifier	parseArgv		768112	0					
ANR	768155	ArgumentList	argc		768112	1					
ANR	768156	Argument	argc		768112	0					
ANR	768157	Identifier	argc		768112	0					
ANR	768158	Argument	argv		768112	1					
ANR	768159	Identifier	argv		768112	0					
ANR	768160	IdentifierDeclStatement	"DCStartd startd ( target , pool ? pool -> addr ( ) : NULL ) ;"	104:1:2890:2943	768112	5	True				
ANR	768161	IdentifierDecl	"startd ( target , pool ? pool -> addr ( ) : NULL )"		768112	0					
ANR	768162	IdentifierDeclType	DCStartd		768112	0					
ANR	768163	Identifier	startd		768112	1					
ANR	768164	Expression	"target , pool ? pool -> addr ( ) : NULL"		768112	2					
ANR	768165	Identifier	target		768112	0					
ANR	768166	ConditionalExpression	pool ? pool -> addr ( ) : NULL		768112	1					
ANR	768167	Condition	pool		768112	0					
ANR	768168	Identifier	pool		768112	0					
ANR	768169	CallExpression	pool -> addr ( )		768112	1					
ANR	768170	Callee	pool -> addr		768112	0					
ANR	768171	PtrMemberAccess	pool -> addr		768112	0					
ANR	768172	Identifier	pool		768112	0					
ANR	768173	Identifier	addr		768112	1					
ANR	768174	ArgumentList			768112	1					
ANR	768175	Identifier	NULL		768112	2					
ANR	768176	IfStatement	if ( needs_id )		768112	6					
ANR	768177	Condition	needs_id	106:5:2951:2958	768112	0	True				
ANR	768178	Identifier	needs_id		768112	0					
ANR	768179	CompoundStatement		19:16:343:343	768112	1					
ANR	768180	ExpressionStatement	assert ( claim_id )	107:2:2966:2984	768112	0	True				
ANR	768181	CallExpression	assert ( claim_id )		768112	0					
ANR	768182	Callee	assert		768112	0					
ANR	768183	Identifier	assert		768112	0					
ANR	768184	ArgumentList	claim_id		768112	1					
ANR	768185	Argument	claim_id		768112	0					
ANR	768186	Identifier	claim_id		768112	0					
ANR	768187	ExpressionStatement	startd . setClaimId ( claim_id )	108:2:2988:3017	768112	1	True				
ANR	768188	CallExpression	startd . setClaimId ( claim_id )		768112	0					
ANR	768189	Callee	startd . setClaimId		768112	0					
ANR	768190	MemberAccess	startd . setClaimId		768112	0					
ANR	768191	Identifier	startd		768112	0					
ANR	768192	Identifier	setClaimId		768112	1					
ANR	768193	ArgumentList	claim_id		768112	1					
ANR	768194	Argument	claim_id		768112	0					
ANR	768195	Identifier	claim_id		768112	0					
ANR	768196	IfStatement	if ( ! startd . locate ( ) )		768112	7					
ANR	768197	Condition	! startd . locate ( )	111:5:3028:3044	768112	0	True				
ANR	768198	UnaryOperationExpression	! startd . locate ( )		768112	0					
ANR	768199	UnaryOperator	!		768112	0					
ANR	768200	CallExpression	startd . locate ( )		768112	1					
ANR	768201	Callee	startd . locate		768112	0					
ANR	768202	MemberAccess	startd . locate		768112	0					
ANR	768203	Identifier	startd		768112	0					
ANR	768204	Identifier	locate		768112	1					
ANR	768205	ArgumentList			768112	1					
ANR	768206	CompoundStatement		24:25:429:429	768112	1					
ANR	768207	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s\\n"" , startd . error ( ) )"	112:2:3052:3100	768112	0	True				
ANR	768208	CallExpression	"fprintf ( stderr , ""ERROR: %s\\n"" , startd . error ( ) )"		768112	0					
ANR	768209	Callee	fprintf		768112	0					
ANR	768210	Identifier	fprintf		768112	0					
ANR	768211	ArgumentList	stderr		768112	1					
ANR	768212	Argument	stderr		768112	0					
ANR	768213	Identifier	stderr		768112	0					
ANR	768214	Argument	"""ERROR: %s\\n"""		768112	1					
ANR	768215	PrimaryExpression	"""ERROR: %s\\n"""		768112	0					
ANR	768216	Argument	startd . error ( )		768112	2					
ANR	768217	CallExpression	startd . error ( )		768112	0					
ANR	768218	Callee	startd . error		768112	0					
ANR	768219	MemberAccess	startd . error		768112	0					
ANR	768220	Identifier	startd		768112	0					
ANR	768221	Identifier	error		768112	1					
ANR	768222	ArgumentList			768112	1					
ANR	768223	ExpressionStatement	exit ( 1 )	113:2:3104:3113	768112	1	True				
ANR	768224	CallExpression	exit ( 1 )		768112	0					
ANR	768225	Callee	exit		768112	0					
ANR	768226	Identifier	exit		768112	0					
ANR	768227	ArgumentList	1		768112	1					
ANR	768228	Argument	1		768112	0					
ANR	768229	PrimaryExpression	1		768112	0					
ANR	768230	IdentifierDeclStatement	bool rval = FALSE ;	116:1:3120:3137	768112	8	True				
ANR	768231	IdentifierDecl	rval = FALSE		768112	0					
ANR	768232	IdentifierDeclType	bool		768112	0					
ANR	768233	Identifier	rval		768112	1					
ANR	768234	AssignmentExpression	rval = FALSE		768112	2		=			
ANR	768235	Identifier	FALSE		768112	0					
ANR	768236	Identifier	FALSE		768112	1					
ANR	768237	IdentifierDeclStatement	int irval ;	117:1:3140:3149	768112	9	True				
ANR	768238	IdentifierDecl	irval		768112	0					
ANR	768239	IdentifierDeclType	int		768112	0					
ANR	768240	Identifier	irval		768112	1					
ANR	768241	IdentifierDeclStatement	ClassAd reply ;	118:1:3152:3165	768112	10	True				
ANR	768242	IdentifierDecl	reply		768112	0					
ANR	768243	IdentifierDeclType	ClassAd		768112	0					
ANR	768244	Identifier	reply		768112	1					
ANR	768245	IdentifierDeclStatement	ClassAd ad ;	119:1:3168:3178	768112	11	True				
ANR	768246	IdentifierDecl	ad		768112	0					
ANR	768247	IdentifierDeclType	ClassAd		768112	0					
ANR	768248	Identifier	ad		768112	1					
ANR	768249	SwitchStatement	switch ( cmd )		768112	12					
ANR	768250	Condition	cmd	121:9:3190:3192	768112	0	True				
ANR	768251	Identifier	cmd		768112	0					
ANR	768252	CompoundStatement		34:15:577:577	768112	1					
ANR	768253	Label	case CA_REQUEST_CLAIM :	122:1:3199:3220	768112	0	True				
ANR	768254	Identifier	CA_REQUEST_CLAIM		768112	0					
ANR	768255	ExpressionStatement	fillRequestAd ( & ad )	123:2:3224:3244	768112	1	True				
ANR	768256	CallExpression	fillRequestAd ( & ad )		768112	0					
ANR	768257	Callee	fillRequestAd		768112	0					
ANR	768258	Identifier	fillRequestAd		768112	0					
ANR	768259	ArgumentList	& ad		768112	1					
ANR	768260	Argument	& ad		768112	0					
ANR	768261	UnaryOperationExpression	& ad		768112	0					
ANR	768262	UnaryOperator	&		768112	0					
ANR	768263	Identifier	ad		768112	1					
ANR	768264	ExpressionStatement	"rval = startd . requestClaim ( CLAIM_COD , & ad , & reply , timeout )"	124:2:3248:3309	768112	2	True				
ANR	768265	AssignmentExpression	"rval = startd . requestClaim ( CLAIM_COD , & ad , & reply , timeout )"		768112	0		=			
ANR	768266	Identifier	rval		768112	0					
ANR	768267	CallExpression	"startd . requestClaim ( CLAIM_COD , & ad , & reply , timeout )"		768112	1					
ANR	768268	Callee	startd . requestClaim		768112	0					
ANR	768269	MemberAccess	startd . requestClaim		768112	0					
ANR	768270	Identifier	startd		768112	0					
ANR	768271	Identifier	requestClaim		768112	1					
ANR	768272	ArgumentList	CLAIM_COD		768112	1					
ANR	768273	Argument	CLAIM_COD		768112	0					
ANR	768274	Identifier	CLAIM_COD		768112	0					
ANR	768275	Argument	& ad		768112	1					
ANR	768276	UnaryOperationExpression	& ad		768112	0					
ANR	768277	UnaryOperator	&		768112	0					
ANR	768278	Identifier	ad		768112	1					
ANR	768279	Argument	& reply		768112	2					
ANR	768280	UnaryOperationExpression	& reply		768112	0					
ANR	768281	UnaryOperator	&		768112	0					
ANR	768282	Identifier	reply		768112	1					
ANR	768283	Argument	timeout		768112	3					
ANR	768284	Identifier	timeout		768112	0					
ANR	768285	BreakStatement	break ;	125:2:3313:3318	768112	3	True				
ANR	768286	Label	case CA_ACTIVATE_CLAIM :	126:1:3321:3343	768112	4	True				
ANR	768287	Identifier	CA_ACTIVATE_CLAIM		768112	0					
ANR	768288	ExpressionStatement	fillActivateAd ( & ad )	127:2:3347:3368	768112	5	True				
ANR	768289	CallExpression	fillActivateAd ( & ad )		768112	0					
ANR	768290	Callee	fillActivateAd		768112	0					
ANR	768291	Identifier	fillActivateAd		768112	0					
ANR	768292	ArgumentList	& ad		768112	1					
ANR	768293	Argument	& ad		768112	0					
ANR	768294	UnaryOperationExpression	& ad		768112	0					
ANR	768295	UnaryOperator	&		768112	0					
ANR	768296	Identifier	ad		768112	1					
ANR	768297	ExpressionStatement	"irval = startd . activateClaim ( & ad , & reply , timeout )"	128:2:3372:3424	768112	6	True				
ANR	768298	AssignmentExpression	"irval = startd . activateClaim ( & ad , & reply , timeout )"		768112	0		=			
ANR	768299	Identifier	irval		768112	0					
ANR	768300	CallExpression	"startd . activateClaim ( & ad , & reply , timeout )"		768112	1					
ANR	768301	Callee	startd . activateClaim		768112	0					
ANR	768302	MemberAccess	startd . activateClaim		768112	0					
ANR	768303	Identifier	startd		768112	0					
ANR	768304	Identifier	activateClaim		768112	1					
ANR	768305	ArgumentList	& ad		768112	1					
ANR	768306	Argument	& ad		768112	0					
ANR	768307	UnaryOperationExpression	& ad		768112	0					
ANR	768308	UnaryOperator	&		768112	0					
ANR	768309	Identifier	ad		768112	1					
ANR	768310	Argument	& reply		768112	1					
ANR	768311	UnaryOperationExpression	& reply		768112	0					
ANR	768312	UnaryOperator	&		768112	0					
ANR	768313	Identifier	reply		768112	1					
ANR	768314	Argument	timeout		768112	2					
ANR	768315	Identifier	timeout		768112	0					
ANR	768316	ExpressionStatement	rval = ( irval == OK )	129:2:3428:3448	768112	7	True				
ANR	768317	AssignmentExpression	rval = ( irval == OK )		768112	0		=			
ANR	768318	Identifier	rval		768112	0					
ANR	768319	EqualityExpression	irval == OK		768112	1		==			
ANR	768320	Identifier	irval		768112	0					
ANR	768321	Identifier	OK		768112	1					
ANR	768322	BreakStatement	break ;	130:2:3452:3457	768112	8	True				
ANR	768323	Label	case CA_SUSPEND_CLAIM :	131:1:3460:3481	768112	9	True				
ANR	768324	Identifier	CA_SUSPEND_CLAIM		768112	0					
ANR	768325	ExpressionStatement	"rval = startd . suspendClaim ( & reply , timeout )"	132:2:3485:3530	768112	10	True				
ANR	768326	AssignmentExpression	"rval = startd . suspendClaim ( & reply , timeout )"		768112	0		=			
ANR	768327	Identifier	rval		768112	0					
ANR	768328	CallExpression	"startd . suspendClaim ( & reply , timeout )"		768112	1					
ANR	768329	Callee	startd . suspendClaim		768112	0					
ANR	768330	MemberAccess	startd . suspendClaim		768112	0					
ANR	768331	Identifier	startd		768112	0					
ANR	768332	Identifier	suspendClaim		768112	1					
ANR	768333	ArgumentList	& reply		768112	1					
ANR	768334	Argument	& reply		768112	0					
ANR	768335	UnaryOperationExpression	& reply		768112	0					
ANR	768336	UnaryOperator	&		768112	0					
ANR	768337	Identifier	reply		768112	1					
ANR	768338	Argument	timeout		768112	1					
ANR	768339	Identifier	timeout		768112	0					
ANR	768340	BreakStatement	break ;	133:2:3534:3539	768112	11	True				
ANR	768341	Label	case CA_RESUME_CLAIM :	134:1:3542:3562	768112	12	True				
ANR	768342	Identifier	CA_RESUME_CLAIM		768112	0					
ANR	768343	ExpressionStatement	"rval = startd . resumeClaim ( & reply , timeout )"	135:2:3566:3610	768112	13	True				
ANR	768344	AssignmentExpression	"rval = startd . resumeClaim ( & reply , timeout )"		768112	0		=			
ANR	768345	Identifier	rval		768112	0					
ANR	768346	CallExpression	"startd . resumeClaim ( & reply , timeout )"		768112	1					
ANR	768347	Callee	startd . resumeClaim		768112	0					
ANR	768348	MemberAccess	startd . resumeClaim		768112	0					
ANR	768349	Identifier	startd		768112	0					
ANR	768350	Identifier	resumeClaim		768112	1					
ANR	768351	ArgumentList	& reply		768112	1					
ANR	768352	Argument	& reply		768112	0					
ANR	768353	UnaryOperationExpression	& reply		768112	0					
ANR	768354	UnaryOperator	&		768112	0					
ANR	768355	Identifier	reply		768112	1					
ANR	768356	Argument	timeout		768112	1					
ANR	768357	Identifier	timeout		768112	0					
ANR	768358	BreakStatement	break ;	136:2:3614:3619	768112	14	True				
ANR	768359	Label	case CA_DEACTIVATE_CLAIM :	137:1:3622:3646	768112	15	True				
ANR	768360	Identifier	CA_DEACTIVATE_CLAIM		768112	0					
ANR	768361	ExpressionStatement	"rval = startd . deactivateClaim ( vacate_type , & reply , timeout )"	138:2:3650:3711	768112	16	True				
ANR	768362	AssignmentExpression	"rval = startd . deactivateClaim ( vacate_type , & reply , timeout )"		768112	0		=			
ANR	768363	Identifier	rval		768112	0					
ANR	768364	CallExpression	"startd . deactivateClaim ( vacate_type , & reply , timeout )"		768112	1					
ANR	768365	Callee	startd . deactivateClaim		768112	0					
ANR	768366	MemberAccess	startd . deactivateClaim		768112	0					
ANR	768367	Identifier	startd		768112	0					
ANR	768368	Identifier	deactivateClaim		768112	1					
ANR	768369	ArgumentList	vacate_type		768112	1					
ANR	768370	Argument	vacate_type		768112	0					
ANR	768371	Identifier	vacate_type		768112	0					
ANR	768372	Argument	& reply		768112	1					
ANR	768373	UnaryOperationExpression	& reply		768112	0					
ANR	768374	UnaryOperator	&		768112	0					
ANR	768375	Identifier	reply		768112	1					
ANR	768376	Argument	timeout		768112	2					
ANR	768377	Identifier	timeout		768112	0					
ANR	768378	BreakStatement	break ;	139:2:3715:3720	768112	17	True				
ANR	768379	Label	case CA_RELEASE_CLAIM :	140:1:3723:3744	768112	18	True				
ANR	768380	Identifier	CA_RELEASE_CLAIM		768112	0					
ANR	768381	ExpressionStatement	"rval = startd . releaseClaim ( vacate_type , & reply , timeout )"	141:2:3748:3806	768112	19	True				
ANR	768382	AssignmentExpression	"rval = startd . releaseClaim ( vacate_type , & reply , timeout )"		768112	0		=			
ANR	768383	Identifier	rval		768112	0					
ANR	768384	CallExpression	"startd . releaseClaim ( vacate_type , & reply , timeout )"		768112	1					
ANR	768385	Callee	startd . releaseClaim		768112	0					
ANR	768386	MemberAccess	startd . releaseClaim		768112	0					
ANR	768387	Identifier	startd		768112	0					
ANR	768388	Identifier	releaseClaim		768112	1					
ANR	768389	ArgumentList	vacate_type		768112	1					
ANR	768390	Argument	vacate_type		768112	0					
ANR	768391	Identifier	vacate_type		768112	0					
ANR	768392	Argument	& reply		768112	1					
ANR	768393	UnaryOperationExpression	& reply		768112	0					
ANR	768394	UnaryOperator	&		768112	0					
ANR	768395	Identifier	reply		768112	1					
ANR	768396	Argument	timeout		768112	2					
ANR	768397	Identifier	timeout		768112	0					
ANR	768398	BreakStatement	break ;	142:2:3810:3815	768112	20	True				
ANR	768399	Label	case CA_RENEW_LEASE_FOR_CLAIM :	143:1:3818:3847	768112	21	True				
ANR	768400	Identifier	CA_RENEW_LEASE_FOR_CLAIM		768112	0					
ANR	768401	ExpressionStatement	"rval = startd . renewLeaseForClaim ( & reply , timeout )"	144:2:3851:3902	768112	22	True				
ANR	768402	AssignmentExpression	"rval = startd . renewLeaseForClaim ( & reply , timeout )"		768112	0		=			
ANR	768403	Identifier	rval		768112	0					
ANR	768404	CallExpression	"startd . renewLeaseForClaim ( & reply , timeout )"		768112	1					
ANR	768405	Callee	startd . renewLeaseForClaim		768112	0					
ANR	768406	MemberAccess	startd . renewLeaseForClaim		768112	0					
ANR	768407	Identifier	startd		768112	0					
ANR	768408	Identifier	renewLeaseForClaim		768112	1					
ANR	768409	ArgumentList	& reply		768112	1					
ANR	768410	Argument	& reply		768112	0					
ANR	768411	UnaryOperationExpression	& reply		768112	0					
ANR	768412	UnaryOperator	&		768112	0					
ANR	768413	Identifier	reply		768112	1					
ANR	768414	Argument	timeout		768112	1					
ANR	768415	Identifier	timeout		768112	0					
ANR	768416	BreakStatement	break ;	145:2:3906:3911	768112	23	True				
ANR	768417	Label	case DELEGATE_GSI_CRED_STARTD :	146:1:3914:3943	768112	24	True				
ANR	768418	Identifier	DELEGATE_GSI_CRED_STARTD		768112	0					
ANR	768419	ExpressionStatement	"irval = startd . delegateX509Proxy ( proxy_file , 0 , NULL )"	147:2:3947:4002	768112	25	True				
ANR	768420	AssignmentExpression	"irval = startd . delegateX509Proxy ( proxy_file , 0 , NULL )"		768112	0		=			
ANR	768421	Identifier	irval		768112	0					
ANR	768422	CallExpression	"startd . delegateX509Proxy ( proxy_file , 0 , NULL )"		768112	1					
ANR	768423	Callee	startd . delegateX509Proxy		768112	0					
ANR	768424	MemberAccess	startd . delegateX509Proxy		768112	0					
ANR	768425	Identifier	startd		768112	0					
ANR	768426	Identifier	delegateX509Proxy		768112	1					
ANR	768427	ArgumentList	proxy_file		768112	1					
ANR	768428	Argument	proxy_file		768112	0					
ANR	768429	Identifier	proxy_file		768112	0					
ANR	768430	Argument	0		768112	1					
ANR	768431	PrimaryExpression	0		768112	0					
ANR	768432	Argument	NULL		768112	2					
ANR	768433	Identifier	NULL		768112	0					
ANR	768434	ExpressionStatement	rval = ( irval == OK )	148:2:4006:4026	768112	26	True				
ANR	768435	AssignmentExpression	rval = ( irval == OK )		768112	0		=			
ANR	768436	Identifier	rval		768112	0					
ANR	768437	EqualityExpression	irval == OK		768112	1		==			
ANR	768438	Identifier	irval		768112	0					
ANR	768439	Identifier	OK		768112	1					
ANR	768440	BreakStatement	break ;	149:2:4030:4035	768112	27	True				
ANR	768441	IfStatement	if ( ! rval )		768112	13					
ANR	768442	Condition	! rval	152:5:4046:4051	768112	0	True				
ANR	768443	UnaryOperationExpression	! rval		768112	0					
ANR	768444	UnaryOperator	!		768112	0					
ANR	768445	Identifier	rval		768112	1					
ANR	768446	CompoundStatement		65:14:1436:1436	768112	1					
ANR	768447	ExpressionStatement	"fprintf ( stderr , ""Attempt to send %s to startd %s failed\\n%s\\n"" , getCommandString ( cmd ) , startd . addr ( ) , startd . error ( ) )"	153:2:4059:4183	768112	0	True				
ANR	768448	CallExpression	"fprintf ( stderr , ""Attempt to send %s to startd %s failed\\n%s\\n"" , getCommandString ( cmd ) , startd . addr ( ) , startd . error ( ) )"		768112	0					
ANR	768449	Callee	fprintf		768112	0					
ANR	768450	Identifier	fprintf		768112	0					
ANR	768451	ArgumentList	stderr		768112	1					
ANR	768452	Argument	stderr		768112	0					
ANR	768453	Identifier	stderr		768112	0					
ANR	768454	Argument	"""Attempt to send %s to startd %s failed\\n%s\\n"""		768112	1					
ANR	768455	PrimaryExpression	"""Attempt to send %s to startd %s failed\\n%s\\n"""		768112	0					
ANR	768456	Argument	getCommandString ( cmd )		768112	2					
ANR	768457	CallExpression	getCommandString ( cmd )		768112	0					
ANR	768458	Callee	getCommandString		768112	0					
ANR	768459	Identifier	getCommandString		768112	0					
ANR	768460	ArgumentList	cmd		768112	1					
ANR	768461	Argument	cmd		768112	0					
ANR	768462	Identifier	cmd		768112	0					
ANR	768463	Argument	startd . addr ( )		768112	3					
ANR	768464	CallExpression	startd . addr ( )		768112	0					
ANR	768465	Callee	startd . addr		768112	0					
ANR	768466	MemberAccess	startd . addr		768112	0					
ANR	768467	Identifier	startd		768112	0					
ANR	768468	Identifier	addr		768112	1					
ANR	768469	ArgumentList			768112	1					
ANR	768470	Argument	startd . error ( )		768112	4					
ANR	768471	CallExpression	startd . error ( )		768112	0					
ANR	768472	Callee	startd . error		768112	0					
ANR	768473	MemberAccess	startd . error		768112	0					
ANR	768474	Identifier	startd		768112	0					
ANR	768475	Identifier	error		768112	1					
ANR	768476	ArgumentList			768112	1					
ANR	768477	ReturnStatement	return 1 ;	155:2:4188:4196	768112	1	True				
ANR	768478	PrimaryExpression	1		768112	0					
ANR	768479	ExpressionStatement	"printOutput ( & reply , & startd )"	158:1:4203:4233	768112	14	True				
ANR	768480	CallExpression	"printOutput ( & reply , & startd )"		768112	0					
ANR	768481	Callee	printOutput		768112	0					
ANR	768482	Identifier	printOutput		768112	0					
ANR	768483	ArgumentList	& reply		768112	1					
ANR	768484	Argument	& reply		768112	0					
ANR	768485	UnaryOperationExpression	& reply		768112	0					
ANR	768486	UnaryOperator	&		768112	0					
ANR	768487	Identifier	reply		768112	1					
ANR	768488	Argument	& startd		768112	1					
ANR	768489	UnaryOperationExpression	& startd		768112	0					
ANR	768490	UnaryOperator	&		768112	0					
ANR	768491	Identifier	startd		768112	1					
ANR	768492	ReturnStatement	return 0 ;	159:1:4236:4244	768112	15	True				
ANR	768493	PrimaryExpression	0		768112	0					
ANR	768494	ReturnType	int		768112	1					
ANR	768495	Identifier	main		768112	2					
ANR	768496	ParameterList	"int argc , char * argv [ ]"		768112	3					
ANR	768497	Parameter	int argc	87:6:2593:2600	768112	0	True				
ANR	768498	ParameterType	int		768112	0					
ANR	768499	Identifier	argc		768112	1					
ANR	768500	Parameter	char * argv [ ]	87:16:2603:2614	768112	1	True				
ANR	768501	ParameterType	char * [ ]		768112	0					
ANR	768502	Identifier	argv		768112	1					
ANR	768503	CFGEntryNode	ENTRY		768112		True				
ANR	768504	CFGExitNode	EXIT		768112		True				
ANR	768505	Symbol	CLAIM_COD		768112						
ANR	768506	Symbol	claim_id		768112						
ANR	768507	Symbol	startd . activateClaim		768112						
ANR	768508	Symbol	startd . suspendClaim		768112						
ANR	768509	Symbol	startd . deactivateClaim		768112						
ANR	768510	Symbol	& ad		768112						
ANR	768511	Symbol	argv		768112						
ANR	768512	Symbol	& reply		768112						
ANR	768513	Symbol	timeout		768112						
ANR	768514	Symbol	startd		768112						
ANR	768515	Symbol	myDistro		768112						
ANR	768516	Symbol	getCommandString		768112						
ANR	768517	Symbol	needs_id		768112						
ANR	768518	Symbol	rval		768112						
ANR	768519	Symbol	SIGPIPE		768112						
ANR	768520	Symbol	startd . delegateX509Proxy		768112						
ANR	768521	Symbol	reply		768112						
ANR	768522	Symbol	OK		768112						
ANR	768523	Symbol	argc		768112						
ANR	768524	Symbol	startd . locate		768112						
ANR	768525	Symbol	ad		768112						
ANR	768526	Symbol	NULL		768112						
ANR	768527	Symbol	proxy_file		768112						
ANR	768528	Symbol	startd . addr		768112						
ANR	768529	Symbol	irval		768112						
ANR	768530	Symbol	pool		768112						
ANR	768531	Symbol	SIG_IGN		768112						
ANR	768532	Symbol	startd . resumeClaim		768112						
ANR	768533	Symbol	stderr		768112						
ANR	768534	Symbol	startd . renewLeaseForClaim		768112						
ANR	768535	Symbol	startd . requestClaim		768112						
ANR	768536	Symbol	startd . error		768112						
ANR	768537	Symbol	getCommandFromArgv		768112						
ANR	768538	Symbol	FALSE		768112						
ANR	768539	Symbol	cmd		768112						
ANR	768540	Symbol	vacate_type		768112						
ANR	768541	Symbol	startd . releaseClaim		768112						
ANR	768542	Symbol	& startd		768112						
ANR	768543	Function	printOutput	169:0:4430:5917							
ANR	768544	FunctionDef	"printOutput (ClassAd * reply , DCStartd * startd)"		768543	0					
ANR	768545	CompoundStatement		171:0:4483:5917	768543	0					
ANR	768546	IdentifierDeclStatement	char * claimid = NULL ;	173:1:4487:4507	768543	0	True				
ANR	768547	IdentifierDecl	* claimid = NULL		768543	0					
ANR	768548	IdentifierDeclType	char *		768543	0					
ANR	768549	Identifier	claimid		768543	1					
ANR	768550	AssignmentExpression	* claimid = NULL		768543	2		=			
ANR	768551	Identifier	NULL		768543	0					
ANR	768552	Identifier	NULL		768543	1					
ANR	768553	IdentifierDeclStatement	char * last_state = NULL ;	174:1:4510:4533	768543	1	True				
ANR	768554	IdentifierDecl	* last_state = NULL		768543	0					
ANR	768555	IdentifierDeclType	char *		768543	0					
ANR	768556	Identifier	last_state		768543	1					
ANR	768557	AssignmentExpression	* last_state = NULL		768543	2		=			
ANR	768558	Identifier	NULL		768543	0					
ANR	768559	Identifier	NULL		768543	1					
ANR	768560	IfStatement	if ( cmd == CA_REQUEST_CLAIM )		768543	2					
ANR	768561	Condition	cmd == CA_REQUEST_CLAIM	176:5:4541:4563	768543	0	True				
ANR	768562	EqualityExpression	cmd == CA_REQUEST_CLAIM		768543	0		==			
ANR	768563	Identifier	cmd		768543	0					
ANR	768564	Identifier	CA_REQUEST_CLAIM		768543	1					
ANR	768565	CompoundStatement		6:31:83:83	768543	1					
ANR	768566	ExpressionStatement	"reply -> LookupString ( ATTR_CLAIM_ID , & claimid )"	177:2:4571:4617	768543	0	True				
ANR	768567	CallExpression	"reply -> LookupString ( ATTR_CLAIM_ID , & claimid )"		768543	0					
ANR	768568	Callee	reply -> LookupString		768543	0					
ANR	768569	PtrMemberAccess	reply -> LookupString		768543	0					
ANR	768570	Identifier	reply		768543	0					
ANR	768571	Identifier	LookupString		768543	1					
ANR	768572	ArgumentList	ATTR_CLAIM_ID		768543	1					
ANR	768573	Argument	ATTR_CLAIM_ID		768543	0					
ANR	768574	Identifier	ATTR_CLAIM_ID		768543	0					
ANR	768575	Argument	& claimid		768543	1					
ANR	768576	UnaryOperationExpression	& claimid		768543	0					
ANR	768577	UnaryOperator	&		768543	0					
ANR	768578	Identifier	claimid		768543	1					
ANR	768579	IfStatement	if ( CA_PATH )		768543	3					
ANR	768580	Condition	CA_PATH	180:5:4628:4634	768543	0	True				
ANR	768581	Identifier	CA_PATH		768543	0					
ANR	768582	CompoundStatement		10:15:154:154	768543	1					
ANR	768583	ExpressionStatement	reply -> fPrint ( CA_PATH )	181:2:4642:4666	768543	0	True				
ANR	768584	CallExpression	reply -> fPrint ( CA_PATH )		768543	0					
ANR	768585	Callee	reply -> fPrint		768543	0					
ANR	768586	PtrMemberAccess	reply -> fPrint		768543	0					
ANR	768587	Identifier	reply		768543	0					
ANR	768588	Identifier	fPrint		768543	1					
ANR	768589	ArgumentList	CA_PATH		768543	1					
ANR	768590	Argument	CA_PATH		768543	0					
ANR	768591	Identifier	CA_PATH		768543	0					
ANR	768592	ExpressionStatement	fclose ( CA_PATH )	182:2:4670:4687	768543	1	True				
ANR	768593	CallExpression	fclose ( CA_PATH )		768543	0					
ANR	768594	Callee	fclose		768543	0					
ANR	768595	Identifier	fclose		768543	0					
ANR	768596	ArgumentList	CA_PATH		768543	1					
ANR	768597	Argument	CA_PATH		768543	0					
ANR	768598	Identifier	CA_PATH		768543	0					
ANR	768599	ExpressionStatement	"printf ( ""Successfully sent %s to startd at %s\\n"" , getCommandString ( cmd ) , startd -> addr ( ) )"	183:2:4691:4784	768543	2	True				
ANR	768600	CallExpression	"printf ( ""Successfully sent %s to startd at %s\\n"" , getCommandString ( cmd ) , startd -> addr ( ) )"		768543	0					
ANR	768601	Callee	printf		768543	0					
ANR	768602	Identifier	printf		768543	0					
ANR	768603	ArgumentList	"""Successfully sent %s to startd at %s\\n"""		768543	1					
ANR	768604	Argument	"""Successfully sent %s to startd at %s\\n"""		768543	0					
ANR	768605	PrimaryExpression	"""Successfully sent %s to startd at %s\\n"""		768543	0					
ANR	768606	Argument	getCommandString ( cmd )		768543	1					
ANR	768607	CallExpression	getCommandString ( cmd )		768543	0					
ANR	768608	Callee	getCommandString		768543	0					
ANR	768609	Identifier	getCommandString		768543	0					
ANR	768610	ArgumentList	cmd		768543	1					
ANR	768611	Argument	cmd		768543	0					
ANR	768612	Identifier	cmd		768543	0					
ANR	768613	Argument	startd -> addr ( )		768543	2					
ANR	768614	CallExpression	startd -> addr ( )		768543	0					
ANR	768615	Callee	startd -> addr		768543	0					
ANR	768616	PtrMemberAccess	startd -> addr		768543	0					
ANR	768617	Identifier	startd		768543	0					
ANR	768618	Identifier	addr		768543	1					
ANR	768619	ArgumentList			768543	1					
ANR	768620	ExpressionStatement	"printf ( ""Result ClassAd written to %s\\n"" , classad_path )"	185:2:4789:4845	768543	3	True				
ANR	768621	CallExpression	"printf ( ""Result ClassAd written to %s\\n"" , classad_path )"		768543	0					
ANR	768622	Callee	printf		768543	0					
ANR	768623	Identifier	printf		768543	0					
ANR	768624	ArgumentList	"""Result ClassAd written to %s\\n"""		768543	1					
ANR	768625	Argument	"""Result ClassAd written to %s\\n"""		768543	0					
ANR	768626	PrimaryExpression	"""Result ClassAd written to %s\\n"""		768543	0					
ANR	768627	Argument	classad_path		768543	1					
ANR	768628	Identifier	classad_path		768543	0					
ANR	768629	IfStatement	if ( cmd == CA_REQUEST_CLAIM )		768543	4					
ANR	768630	Condition	cmd == CA_REQUEST_CLAIM	186:6:4853:4875	768543	0	True				
ANR	768631	EqualityExpression	cmd == CA_REQUEST_CLAIM		768543	0		==			
ANR	768632	Identifier	cmd		768543	0					
ANR	768633	Identifier	CA_REQUEST_CLAIM		768543	1					
ANR	768634	CompoundStatement		16:32:395:395	768543	1					
ANR	768635	ExpressionStatement	"printf ( ""ID of new claim is: \\""%s\\""\\n"" , claimid )"	187:3:4884:4933	768543	0	True				
ANR	768636	CallExpression	"printf ( ""ID of new claim is: \\""%s\\""\\n"" , claimid )"		768543	0					
ANR	768637	Callee	printf		768543	0					
ANR	768638	Identifier	printf		768543	0					
ANR	768639	ArgumentList	"""ID of new claim is: \\""%s\\""\\n"""		768543	1					
ANR	768640	Argument	"""ID of new claim is: \\""%s\\""\\n"""		768543	0					
ANR	768641	PrimaryExpression	"""ID of new claim is: \\""%s\\""\\n"""		768543	0					
ANR	768642	Argument	claimid		768543	1					
ANR	768643	Identifier	claimid		768543	0					
ANR	768644	ExpressionStatement	free ( claimid )	188:3:4938:4953	768543	1	True				
ANR	768645	CallExpression	free ( claimid )		768543	0					
ANR	768646	Callee	free		768543	0					
ANR	768647	Identifier	free		768543	0					
ANR	768648	ArgumentList	claimid		768543	1					
ANR	768649	Argument	claimid		768543	0					
ANR	768650	Identifier	claimid		768543	0					
ANR	768651	ReturnStatement	return ;	190:2:4961:4967	768543	5	True				
ANR	768652	IfStatement	if ( cmd == CA_REQUEST_CLAIM )		768543	4					
ANR	768653	Condition	cmd == CA_REQUEST_CLAIM	193:5:4978:5000	768543	0	True				
ANR	768654	EqualityExpression	cmd == CA_REQUEST_CLAIM		768543	0		==			
ANR	768655	Identifier	cmd		768543	0					
ANR	768656	Identifier	CA_REQUEST_CLAIM		768543	1					
ANR	768657	CompoundStatement		23:31:520:520	768543	1					
ANR	768658	ExpressionStatement	"fprintf ( stderr , ""Successfully sent %s to startd at %s\\n"" , getCommandString ( cmd ) , startd -> addr ( ) )"	194:2:5008:5112	768543	0	True				
ANR	768659	CallExpression	"fprintf ( stderr , ""Successfully sent %s to startd at %s\\n"" , getCommandString ( cmd ) , startd -> addr ( ) )"		768543	0					
ANR	768660	Callee	fprintf		768543	0					
ANR	768661	Identifier	fprintf		768543	0					
ANR	768662	ArgumentList	stderr		768543	1					
ANR	768663	Argument	stderr		768543	0					
ANR	768664	Identifier	stderr		768543	0					
ANR	768665	Argument	"""Successfully sent %s to startd at %s\\n"""		768543	1					
ANR	768666	PrimaryExpression	"""Successfully sent %s to startd at %s\\n"""		768543	0					
ANR	768667	Argument	getCommandString ( cmd )		768543	2					
ANR	768668	CallExpression	getCommandString ( cmd )		768543	0					
ANR	768669	Callee	getCommandString		768543	0					
ANR	768670	Identifier	getCommandString		768543	0					
ANR	768671	ArgumentList	cmd		768543	1					
ANR	768672	Argument	cmd		768543	0					
ANR	768673	Identifier	cmd		768543	0					
ANR	768674	Argument	startd -> addr ( )		768543	3					
ANR	768675	CallExpression	startd -> addr ( )		768543	0					
ANR	768676	Callee	startd -> addr		768543	0					
ANR	768677	PtrMemberAccess	startd -> addr		768543	0					
ANR	768678	Identifier	startd		768543	0					
ANR	768679	Identifier	addr		768543	1					
ANR	768680	ArgumentList			768543	1					
ANR	768681	Statement	fprintf	196:2:5117:5123	768543	1	True				
ANR	768682	Statement	(	196:9:5124:5124	768543	2	True				
ANR	768683	Statement	stderr	196:11:5126:5131	768543	3	True				
ANR	768684	Statement	","	196:17:5132:5132	768543	4	True				
ANR	768685	Statement	"""WARNING: You did not specify """	196:19:5134:5164	768543	5	True				
ANR	768686	Statement	"""-classad, printing to STDOUT\\n"""	197:5:5171:5202	768543	6	True				
ANR	768687	Statement	)	197:38:5204:5204	768543	7	True				
ANR	768688	ExpressionStatement		197:39:5205:5205	768543	8	True				
ANR	768689	ExpressionStatement	reply -> fPrint ( stdout )	198:2:5209:5232	768543	9	True				
ANR	768690	CallExpression	reply -> fPrint ( stdout )		768543	0					
ANR	768691	Callee	reply -> fPrint		768543	0					
ANR	768692	PtrMemberAccess	reply -> fPrint		768543	0					
ANR	768693	Identifier	reply		768543	0					
ANR	768694	Identifier	fPrint		768543	1					
ANR	768695	ArgumentList	stdout		768543	1					
ANR	768696	Argument	stdout		768543	0					
ANR	768697	Identifier	stdout		768543	0					
ANR	768698	ExpressionStatement	"fprintf ( stderr , ""ID of new claim is: \\""%s\\""\\n"" , claimid )"	199:2:5236:5294	768543	10	True				
ANR	768699	CallExpression	"fprintf ( stderr , ""ID of new claim is: \\""%s\\""\\n"" , claimid )"		768543	0					
ANR	768700	Callee	fprintf		768543	0					
ANR	768701	Identifier	fprintf		768543	0					
ANR	768702	ArgumentList	stderr		768543	1					
ANR	768703	Argument	stderr		768543	0					
ANR	768704	Identifier	stderr		768543	0					
ANR	768705	Argument	"""ID of new claim is: \\""%s\\""\\n"""		768543	1					
ANR	768706	PrimaryExpression	"""ID of new claim is: \\""%s\\""\\n"""		768543	0					
ANR	768707	Argument	claimid		768543	2					
ANR	768708	Identifier	claimid		768543	0					
ANR	768709	ExpressionStatement	free ( claimid )	200:2:5298:5313	768543	11	True				
ANR	768710	CallExpression	free ( claimid )		768543	0					
ANR	768711	Callee	free		768543	0					
ANR	768712	Identifier	free		768543	0					
ANR	768713	ArgumentList	claimid		768543	1					
ANR	768714	Argument	claimid		768543	0					
ANR	768715	Identifier	claimid		768543	0					
ANR	768716	ReturnStatement	return ;	201:2:5317:5323	768543	12	True				
ANR	768717	ExpressionStatement	"printf ( ""Successfully sent %s to startd at %s\\n"" , getCommandString ( cmd ) , startd -> addr ( ) )"	204:1:5330:5422	768543	5	True				
ANR	768718	CallExpression	"printf ( ""Successfully sent %s to startd at %s\\n"" , getCommandString ( cmd ) , startd -> addr ( ) )"		768543	0					
ANR	768719	Callee	printf		768543	0					
ANR	768720	Identifier	printf		768543	0					
ANR	768721	ArgumentList	"""Successfully sent %s to startd at %s\\n"""		768543	1					
ANR	768722	Argument	"""Successfully sent %s to startd at %s\\n"""		768543	0					
ANR	768723	PrimaryExpression	"""Successfully sent %s to startd at %s\\n"""		768543	0					
ANR	768724	Argument	getCommandString ( cmd )		768543	1					
ANR	768725	CallExpression	getCommandString ( cmd )		768543	0					
ANR	768726	Callee	getCommandString		768543	0					
ANR	768727	Identifier	getCommandString		768543	0					
ANR	768728	ArgumentList	cmd		768543	1					
ANR	768729	Argument	cmd		768543	0					
ANR	768730	Identifier	cmd		768543	0					
ANR	768731	Argument	startd -> addr ( )		768543	2					
ANR	768732	CallExpression	startd -> addr ( )		768543	0					
ANR	768733	Callee	startd -> addr		768543	0					
ANR	768734	PtrMemberAccess	startd -> addr		768543	0					
ANR	768735	Identifier	startd		768543	0					
ANR	768736	Identifier	addr		768543	1					
ANR	768737	ArgumentList			768543	1					
ANR	768738	SwitchStatement	switch ( cmd )		768543	6					
ANR	768739	Condition	cmd	207:9:5434:5436	768543	0	True				
ANR	768740	Identifier	cmd		768543	0					
ANR	768741	CompoundStatement		37:15:956:956	768543	1					
ANR	768742	Label	case CA_REQUEST_CLAIM :	208:1:5443:5464	768543	0	True				
ANR	768743	Identifier	CA_REQUEST_CLAIM		768543	0					
ANR	768744	ExpressionStatement	"EXCEPT ( ""Already handled CA_REQUEST_CLAIM!"" )"	209:2:5468:5513	768543	1	True				
ANR	768745	CallExpression	"EXCEPT ( ""Already handled CA_REQUEST_CLAIM!"" )"		768543	0					
ANR	768746	Callee	EXCEPT		768543	0					
ANR	768747	Identifier	EXCEPT		768543	0					
ANR	768748	ArgumentList	"""Already handled CA_REQUEST_CLAIM!"""		768543	1					
ANR	768749	Argument	"""Already handled CA_REQUEST_CLAIM!"""		768543	0					
ANR	768750	PrimaryExpression	"""Already handled CA_REQUEST_CLAIM!"""		768543	0					
ANR	768751	BreakStatement	break ;	210:2:5517:5522	768543	2	True				
ANR	768752	Label	case CA_RELEASE_CLAIM :	212:1:5526:5547	768543	3	True				
ANR	768753	Identifier	CA_RELEASE_CLAIM		768543	0					
ANR	768754	IfStatement	"if ( reply -> LookupString ( ATTR_LAST_CLAIM_STATE , & last_state ) )"		768543	4					
ANR	768755	Condition	"reply -> LookupString ( ATTR_LAST_CLAIM_STATE , & last_state )"	213:6:5555:5609	768543	0	True				
ANR	768756	CallExpression	"reply -> LookupString ( ATTR_LAST_CLAIM_STATE , & last_state )"		768543	0					
ANR	768757	Callee	reply -> LookupString		768543	0					
ANR	768758	PtrMemberAccess	reply -> LookupString		768543	0					
ANR	768759	Identifier	reply		768543	0					
ANR	768760	Identifier	LookupString		768543	1					
ANR	768761	ArgumentList	ATTR_LAST_CLAIM_STATE		768543	1					
ANR	768762	Argument	ATTR_LAST_CLAIM_STATE		768543	0					
ANR	768763	Identifier	ATTR_LAST_CLAIM_STATE		768543	0					
ANR	768764	Argument	& last_state		768543	1					
ANR	768765	UnaryOperationExpression	& last_state		768543	0					
ANR	768766	UnaryOperator	&		768543	0					
ANR	768767	Identifier	last_state		768543	1					
ANR	768768	CompoundStatement		43:64:1129:1129	768543	1					
ANR	768769	ExpressionStatement	"printf ( ""State of claim when it was released: \\""%s\\""\\n"" , last_state )"	214:3:5619:5693	768543	0	True				
ANR	768770	CallExpression	"printf ( ""State of claim when it was released: \\""%s\\""\\n"" , last_state )"		768543	0					
ANR	768771	Callee	printf		768543	0					
ANR	768772	Identifier	printf		768543	0					
ANR	768773	ArgumentList	"""State of claim when it was released: \\""%s\\""\\n"""		768543	1					
ANR	768774	Argument	"""State of claim when it was released: \\""%s\\""\\n"""		768543	0					
ANR	768775	PrimaryExpression	"""State of claim when it was released: \\""%s\\""\\n"""		768543	0					
ANR	768776	Argument	last_state		768543	1					
ANR	768777	Identifier	last_state		768543	0					
ANR	768778	ExpressionStatement	free ( last_state )	216:3:5698:5716	768543	1	True				
ANR	768779	CallExpression	free ( last_state )		768543	0					
ANR	768780	Callee	free		768543	0					
ANR	768781	Identifier	free		768543	0					
ANR	768782	ArgumentList	last_state		768543	1					
ANR	768783	Argument	last_state		768543	0					
ANR	768784	Identifier	last_state		768543	0					
ANR	768785	ElseStatement	else		768543	0					
ANR	768786	CompoundStatement		47:9:1243:1243	768543	0					
ANR	768787	Statement	fprintf	218:3:5732:5738	768543	0	True				
ANR	768788	Statement	(	218:10:5739:5739	768543	1	True				
ANR	768789	Statement	stderr	218:12:5741:5746	768543	2	True				
ANR	768790	Statement	","	218:18:5747:5747	768543	3	True				
ANR	768791	Statement	"""Warning: """	218:20:5749:5759	768543	4	True				
ANR	768792	Statement	"""reply ClassAd did not contain attribute \\""%s\\""\\n"""	219:6:5767:5816	768543	5	True				
ANR	768793	Statement	","	219:56:5817:5817	768543	6	True				
ANR	768794	Statement	ATTR_LAST_CLAIM_STATE	220:6:5825:5845	768543	7	True				
ANR	768795	Statement	)	220:28:5847:5847	768543	8	True				
ANR	768796	ExpressionStatement		220:29:5848:5848	768543	9	True				
ANR	768797	BreakStatement	break ;	222:2:5856:5861	768543	5	True				
ANR	768798	Label	default :	223:1:5864:5871	768543	6	True				
ANR	768799	Identifier	default		768543	0					
ANR	768800	BreakStatement	break ;	225:2:5907:5912	768543	7	True				
ANR	768801	ReturnType	void		768543	1					
ANR	768802	Identifier	printOutput		768543	2					
ANR	768803	ParameterList	"ClassAd * reply , DCStartd * startd"		768543	3					
ANR	768804	Parameter	ClassAd * reply	170:13:4448:4461	768543	0	True				
ANR	768805	ParameterType	ClassAd *		768543	0					
ANR	768806	Identifier	reply		768543	1					
ANR	768807	Parameter	DCStartd * startd	170:29:4464:4479	768543	1	True				
ANR	768808	ParameterType	DCStartd *		768543	0					
ANR	768809	Identifier	startd		768543	1					
ANR	768810	CFGEntryNode	ENTRY		768543		True				
ANR	768811	CFGExitNode	EXIT		768543		True				
ANR	768812	Symbol	last_state		768543						
ANR	768813	Symbol	* reply		768543						
ANR	768814	Symbol	NULL		768543						
ANR	768815	Symbol	stdout		768543						
ANR	768816	Symbol	startd -> addr		768543						
ANR	768817	Symbol	CA_PATH		768543						
ANR	768818	Symbol	claimid		768543						
ANR	768819	Symbol	stderr		768543						
ANR	768820	Symbol	ATTR_CLAIM_ID		768543						
ANR	768821	Symbol	startd		768543						
ANR	768822	Symbol	CA_REQUEST_CLAIM		768543						
ANR	768823	Symbol	ATTR_LAST_CLAIM_STATE		768543						
ANR	768824	Symbol	getCommandString		768543						
ANR	768825	Symbol	reply -> LookupString		768543						
ANR	768826	Symbol	& claimid		768543						
ANR	768827	Symbol	cmd		768543						
ANR	768828	Symbol	reply		768543						
ANR	768829	Symbol	& last_state		768543						
ANR	768830	Symbol	* startd		768543						
ANR	768831	Symbol	classad_path		768543						
ANR	768832	Function	fillRequirements	230:0:5921:7195							
ANR	768833	FunctionDef	fillRequirements (ClassAd * req)		768832	0					
ANR	768834	CompoundStatement		232:0:5959:7195	768832	0					
ANR	768835	IdentifierDeclStatement	"MyString jic_req = ""TARGET."" ;"	233:1:5962:5990	768832	0	True				
ANR	768836	IdentifierDecl	"jic_req = ""TARGET."""		768832	0					
ANR	768837	IdentifierDeclType	MyString		768832	0					
ANR	768838	Identifier	jic_req		768832	1					
ANR	768839	AssignmentExpression	"jic_req = ""TARGET."""		768832	2		=			
ANR	768840	Identifier	jic_req		768832	0					
ANR	768841	PrimaryExpression	"""TARGET."""		768832	1					
ANR	768842	IfStatement	if ( jobad_path )		768832	1					
ANR	768843	Condition	jobad_path	234:5:5997:6006	768832	0	True				
ANR	768844	Identifier	jobad_path		768832	0					
ANR	768845	CompoundStatement		3:17:49:49	768832	1					
ANR	768846	ExpressionStatement	jic_req += ATTR_HAS_JIC_LOCAL_STDIN	235:2:6013:6048	768832	0	True				
ANR	768847	AssignmentExpression	jic_req += ATTR_HAS_JIC_LOCAL_STDIN		768832	0		+=			
ANR	768848	Identifier	jic_req		768832	0					
ANR	768849	Identifier	ATTR_HAS_JIC_LOCAL_STDIN		768832	1					
ANR	768850	ElseStatement	else		768832	0					
ANR	768851	CompoundStatement		5:8:98:98	768832	0					
ANR	768852	ExpressionStatement	jic_req += ATTR_HAS_JIC_LOCAL_CONFIG	237:2:6062:6098	768832	0	True				
ANR	768853	AssignmentExpression	jic_req += ATTR_HAS_JIC_LOCAL_CONFIG		768832	0		+=			
ANR	768854	Identifier	jic_req		768832	0					
ANR	768855	Identifier	ATTR_HAS_JIC_LOCAL_CONFIG		768832	1					
ANR	768856	ExpressionStatement	"jic_req += ""==TRUE"""	239:1:6104:6123	768832	2	True				
ANR	768857	AssignmentExpression	"jic_req += ""==TRUE"""		768832	0		+=			
ANR	768858	Identifier	jic_req		768832	0					
ANR	768859	PrimaryExpression	"""==TRUE"""		768832	1					
ANR	768860	IdentifierDeclStatement	MyString require ;	241:1:6127:6143	768832	3	True				
ANR	768861	IdentifierDecl	require		768832	0					
ANR	768862	IdentifierDeclType	MyString		768832	0					
ANR	768863	Identifier	require		768832	1					
ANR	768864	ExpressionStatement	require = ATTR_REQUIREMENTS	242:1:6146:6173	768832	4	True				
ANR	768865	AssignmentExpression	require = ATTR_REQUIREMENTS		768832	0		=			
ANR	768866	Identifier	require		768832	0					
ANR	768867	Identifier	ATTR_REQUIREMENTS		768832	1					
ANR	768868	ExpressionStatement	"require += ""=("""	243:1:6176:6191	768832	5	True				
ANR	768869	AssignmentExpression	"require += ""=("""		768832	0		+=			
ANR	768870	Identifier	require		768832	0					
ANR	768871	PrimaryExpression	"""=("""		768832	1					
ANR	768872	IfStatement	if ( requirements )		768832	6					
ANR	768873	Condition	requirements	245:5:6199:6210	768832	0	True				
ANR	768874	Identifier	requirements		768832	0					
ANR	768875	CompoundStatement		14:19:253:253	768832	1					
ANR	768876	ExpressionStatement	require += requirements	246:2:6217:6240	768832	0	True				
ANR	768877	AssignmentExpression	require += requirements		768832	0		+=			
ANR	768878	Identifier	require		768832	0					
ANR	768879	Identifier	requirements		768832	1					
ANR	768880	ExpressionStatement	"require += "")&&("""	247:2:6244:6261	768832	1	True				
ANR	768881	AssignmentExpression	"require += "")&&("""		768832	0		+=			
ANR	768882	Identifier	require		768832	0					
ANR	768883	PrimaryExpression	""")&&("""		768832	1					
ANR	768884	IdentifierDeclStatement	int slot_id = 0 ;	249:1:6267:6282	768832	7	True				
ANR	768885	IdentifierDecl	slot_id = 0		768832	0					
ANR	768886	IdentifierDeclType	int		768832	0					
ANR	768887	Identifier	slot_id		768832	1					
ANR	768888	AssignmentExpression	slot_id = 0		768832	2		=			
ANR	768889	Identifier	slot_id		768832	0					
ANR	768890	PrimaryExpression	0		768832	1					
ANR	768891	IfStatement	if ( name )		768832	8					
ANR	768892	Condition	name	250:5:6289:6292	768832	0	True				
ANR	768893	Identifier	name		768832	0					
ANR	768894	CompoundStatement		19:11:335:335	768832	1					
ANR	768895	IfStatement	"if ( sscanf ( name , ""slot%d@"" , & slot_id ) != 1 )"		768832	0					
ANR	768896	Condition	"sscanf ( name , ""slot%d@"" , & slot_id ) != 1"	251:6:6303:6340	768832	0	True				
ANR	768897	EqualityExpression	"sscanf ( name , ""slot%d@"" , & slot_id ) != 1"		768832	0		!=			
ANR	768898	CallExpression	"sscanf ( name , ""slot%d@"" , & slot_id )"		768832	0					
ANR	768899	Callee	sscanf		768832	0					
ANR	768900	Identifier	sscanf		768832	0					
ANR	768901	ArgumentList	name		768832	1					
ANR	768902	Argument	name		768832	0					
ANR	768903	Identifier	name		768832	0					
ANR	768904	Argument	"""slot%d@"""		768832	1					
ANR	768905	PrimaryExpression	"""slot%d@"""		768832	0					
ANR	768906	Argument	& slot_id		768832	2					
ANR	768907	UnaryOperationExpression	& slot_id		768832	0					
ANR	768908	UnaryOperator	&		768832	0					
ANR	768909	Identifier	slot_id		768832	1					
ANR	768910	PrimaryExpression	1		768832	1					
ANR	768911	CompoundStatement		20:46:383:383	768832	1					
ANR	768912	ExpressionStatement	slot_id = 0	252:3:6349:6360	768832	0	True				
ANR	768913	AssignmentExpression	slot_id = 0		768832	0		=			
ANR	768914	Identifier	slot_id		768832	0					
ANR	768915	PrimaryExpression	0		768832	1					
ANR	768916	IfStatement	if ( slot_id > 0 )		768832	9					
ANR	768917	Condition	slot_id > 0	255:5:6374:6384	768832	0	True				
ANR	768918	RelationalExpression	slot_id > 0		768832	0		>			
ANR	768919	Identifier	slot_id		768832	0					
ANR	768920	PrimaryExpression	0		768832	1					
ANR	768921	CompoundStatement		24:18:427:427	768832	1					
ANR	768922	ExpressionStatement	"require += ""TARGET."""	256:2:6391:6411	768832	0	True				
ANR	768923	AssignmentExpression	"require += ""TARGET."""		768832	0		+=			
ANR	768924	Identifier	require		768832	0					
ANR	768925	PrimaryExpression	"""TARGET."""		768832	1					
ANR	768926	ExpressionStatement	require += ATTR_SLOT_ID	257:2:6415:6438	768832	1	True				
ANR	768927	AssignmentExpression	require += ATTR_SLOT_ID		768832	0		+=			
ANR	768928	Identifier	require		768832	0					
ANR	768929	Identifier	ATTR_SLOT_ID		768832	1					
ANR	768930	ExpressionStatement	"require += ""=="""	258:2:6442:6457	768832	2	True				
ANR	768931	AssignmentExpression	"require += ""=="""		768832	0		+=			
ANR	768932	Identifier	require		768832	0					
ANR	768933	PrimaryExpression	"""=="""		768832	1					
ANR	768934	ExpressionStatement	require += slot_id	259:2:6461:6479	768832	3	True				
ANR	768935	AssignmentExpression	require += slot_id		768832	0		+=			
ANR	768936	Identifier	require		768832	0					
ANR	768937	Identifier	slot_id		768832	1					
ANR	768938	ExpressionStatement	"require += "")&&("""	260:2:6483:6500	768832	4	True				
ANR	768939	AssignmentExpression	"require += "")&&("""		768832	0		+=			
ANR	768940	Identifier	require		768832	0					
ANR	768941	PrimaryExpression	""")&&("""		768832	1					
ANR	768942	ElseStatement	else		768832	0					
ANR	768943	IfStatement	"if ( param_boolean ( ""ALLOW_VM_CRUFT"" , false ) )"		768832	0					
ANR	768944	Condition	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"	262:10:6515:6552	768832	0	True				
ANR	768945	CallExpression	"param_boolean ( ""ALLOW_VM_CRUFT"" , false )"		768832	0					
ANR	768946	Callee	param_boolean		768832	0					
ANR	768947	Identifier	param_boolean		768832	0					
ANR	768948	ArgumentList	"""ALLOW_VM_CRUFT"""		768832	1					
ANR	768949	Argument	"""ALLOW_VM_CRUFT"""		768832	0					
ANR	768950	PrimaryExpression	"""ALLOW_VM_CRUFT"""		768832	0					
ANR	768951	Argument	false		768832	1					
ANR	768952	Identifier	false		768832	0					
ANR	768953	CompoundStatement		32:2:599:612	768832	1					
ANR	768954	IdentifierDeclStatement	int vm_id = 0 ;	263:2:6559:6572	768832	0	True				
ANR	768955	IdentifierDecl	vm_id = 0		768832	0					
ANR	768956	IdentifierDeclType	int		768832	0					
ANR	768957	Identifier	vm_id		768832	1					
ANR	768958	AssignmentExpression	vm_id = 0		768832	2		=			
ANR	768959	Identifier	vm_id		768832	0					
ANR	768960	PrimaryExpression	0		768832	1					
ANR	768961	IfStatement	if ( name )		768832	1					
ANR	768962	Condition	name	264:6:6580:6583	768832	0	True				
ANR	768963	Identifier	name		768832	0					
ANR	768964	CompoundStatement		33:12:626:626	768832	1					
ANR	768965	IfStatement	"if ( sscanf ( name , ""vm%d@"" , & vm_id ) != 1 )"		768832	0					
ANR	768966	Condition	"sscanf ( name , ""vm%d@"" , & vm_id ) != 1"	265:7:6595:6628	768832	0	True				
ANR	768967	EqualityExpression	"sscanf ( name , ""vm%d@"" , & vm_id ) != 1"		768832	0		!=			
ANR	768968	CallExpression	"sscanf ( name , ""vm%d@"" , & vm_id )"		768832	0					
ANR	768969	Callee	sscanf		768832	0					
ANR	768970	Identifier	sscanf		768832	0					
ANR	768971	ArgumentList	name		768832	1					
ANR	768972	Argument	name		768832	0					
ANR	768973	Identifier	name		768832	0					
ANR	768974	Argument	"""vm%d@"""		768832	1					
ANR	768975	PrimaryExpression	"""vm%d@"""		768832	0					
ANR	768976	Argument	& vm_id		768832	2					
ANR	768977	UnaryOperationExpression	& vm_id		768832	0					
ANR	768978	UnaryOperator	&		768832	0					
ANR	768979	Identifier	vm_id		768832	1					
ANR	768980	PrimaryExpression	1		768832	1					
ANR	768981	CompoundStatement		34:43:671:671	768832	1					
ANR	768982	ExpressionStatement	vm_id = 0	266:4:6638:6647	768832	0	True				
ANR	768983	AssignmentExpression	vm_id = 0		768832	0		=			
ANR	768984	Identifier	vm_id		768832	0					
ANR	768985	PrimaryExpression	0		768832	1					
ANR	768986	IfStatement	if ( vm_id > 0 )		768832	2					
ANR	768987	Condition	vm_id > 0	269:6:6664:6672	768832	0	True				
ANR	768988	RelationalExpression	vm_id > 0		768832	0		>			
ANR	768989	Identifier	vm_id		768832	0					
ANR	768990	PrimaryExpression	0		768832	1					
ANR	768991	CompoundStatement		38:17:715:715	768832	1					
ANR	768992	ExpressionStatement	"require += ""TARGET."""	270:3:6680:6700	768832	0	True				
ANR	768993	AssignmentExpression	"require += ""TARGET."""		768832	0		+=			
ANR	768994	Identifier	require		768832	0					
ANR	768995	PrimaryExpression	"""TARGET."""		768832	1					
ANR	768996	ExpressionStatement	require += ATTR_VIRTUAL_MACHINE_ID	271:3:6705:6739	768832	1	True				
ANR	768997	AssignmentExpression	require += ATTR_VIRTUAL_MACHINE_ID		768832	0		+=			
ANR	768998	Identifier	require		768832	0					
ANR	768999	Identifier	ATTR_VIRTUAL_MACHINE_ID		768832	1					
ANR	769000	ExpressionStatement	"require += ""=="""	272:3:6744:6759	768832	2	True				
ANR	769001	AssignmentExpression	"require += ""=="""		768832	0		+=			
ANR	769002	Identifier	require		768832	0					
ANR	769003	PrimaryExpression	"""=="""		768832	1					
ANR	769004	ExpressionStatement	require += vm_id	273:3:6764:6780	768832	3	True				
ANR	769005	AssignmentExpression	require += vm_id		768832	0		+=			
ANR	769006	Identifier	require		768832	0					
ANR	769007	Identifier	vm_id		768832	1					
ANR	769008	ExpressionStatement	"require += "")&&("""	274:3:6785:6802	768832	4	True				
ANR	769009	AssignmentExpression	"require += "")&&("""		768832	0		+=			
ANR	769010	Identifier	require		768832	0					
ANR	769011	PrimaryExpression	""")&&("""		768832	1					
ANR	769012	ExpressionStatement	require += jic_req	278:1:6813:6831	768832	10	True				
ANR	769013	AssignmentExpression	require += jic_req		768832	0		+=			
ANR	769014	Identifier	require		768832	0					
ANR	769015	Identifier	jic_req		768832	1					
ANR	769016	ExpressionStatement	require += ')'	279:1:6834:6848	768832	11	True				
ANR	769017	AssignmentExpression	require += ')'		768832	0		+=			
ANR	769018	Identifier	require		768832	0					
ANR	769019	PrimaryExpression	')'		768832	1					
ANR	769020	IfStatement	if ( ! req -> Insert ( require . Value ( ) ) )		768832	12					
ANR	769021	Condition	! req -> Insert ( require . Value ( ) )	281:5:6856:6885	768832	0	True				
ANR	769022	UnaryOperationExpression	! req -> Insert ( require . Value ( ) )		768832	0					
ANR	769023	UnaryOperator	!		768832	0					
ANR	769024	CallExpression	req -> Insert ( require . Value ( ) )		768832	1					
ANR	769025	Callee	req -> Insert		768832	0					
ANR	769026	PtrMemberAccess	req -> Insert		768832	0					
ANR	769027	Identifier	req		768832	0					
ANR	769028	Identifier	Insert		768832	1					
ANR	769029	ArgumentList	require . Value ( )		768832	1					
ANR	769030	Argument	require . Value ( )		768832	0					
ANR	769031	CallExpression	require . Value ( )		768832	0					
ANR	769032	Callee	require . Value		768832	0					
ANR	769033	MemberAccess	require . Value		768832	0					
ANR	769034	Identifier	require		768832	0					
ANR	769035	Identifier	Value		768832	1					
ANR	769036	ArgumentList			768832	1					
ANR	769037	CompoundStatement		50:38:929:929	768832	1					
ANR	769038	ExpressionStatement	"fprintf ( stderr , ""ERROR: can't parse requirements '%s'\\n"" , requirements )"	282:2:6893:6971	768832	0	True				
ANR	769039	CallExpression	"fprintf ( stderr , ""ERROR: can't parse requirements '%s'\\n"" , requirements )"		768832	0					
ANR	769040	Callee	fprintf		768832	0					
ANR	769041	Identifier	fprintf		768832	0					
ANR	769042	ArgumentList	stderr		768832	1					
ANR	769043	Argument	stderr		768832	0					
ANR	769044	Identifier	stderr		768832	0					
ANR	769045	Argument	"""ERROR: can't parse requirements '%s'\\n"""		768832	1					
ANR	769046	PrimaryExpression	"""ERROR: can't parse requirements '%s'\\n"""		768832	0					
ANR	769047	Argument	requirements		768832	2					
ANR	769048	Identifier	requirements		768832	0					
ANR	769049	ExpressionStatement	exit ( 1 )	284:2:6975:6984	768832	1	True				
ANR	769050	CallExpression	exit ( 1 )		768832	0					
ANR	769051	Callee	exit		768832	0					
ANR	769052	Identifier	exit		768832	0					
ANR	769053	ArgumentList	1		768832	1					
ANR	769054	Argument	1		768832	0					
ANR	769055	PrimaryExpression	1		768832	0					
ANR	769056	ExpressionStatement	req -> AddTargetRefs ( TargetMachineAttrs )	290:1:7145:7185	768832	13	True				
ANR	769057	CallExpression	req -> AddTargetRefs ( TargetMachineAttrs )		768832	0					
ANR	769058	Callee	req -> AddTargetRefs		768832	0					
ANR	769059	PtrMemberAccess	req -> AddTargetRefs		768832	0					
ANR	769060	Identifier	req		768832	0					
ANR	769061	Identifier	AddTargetRefs		768832	1					
ANR	769062	ArgumentList	TargetMachineAttrs		768832	1					
ANR	769063	Argument	TargetMachineAttrs		768832	0					
ANR	769064	Identifier	TargetMachineAttrs		768832	0					
ANR	769065	ReturnType	void		768832	1					
ANR	769066	Identifier	fillRequirements		768832	2					
ANR	769067	ParameterList	ClassAd * req		768832	3					
ANR	769068	Parameter	ClassAd * req	231:18:5944:5955	768832	0	True				
ANR	769069	ParameterType	ClassAd *		768832	0					
ANR	769070	Identifier	req		768832	1					
ANR	769071	CFGEntryNode	ENTRY		768832		True				
ANR	769072	CFGExitNode	EXIT		768832		True				
ANR	769073	Symbol	jic_req		768832						
ANR	769074	Symbol	requirements		768832						
ANR	769075	Symbol	require . Value		768832						
ANR	769076	Symbol	TargetMachineAttrs		768832						
ANR	769077	Symbol	ATTR_REQUIREMENTS		768832						
ANR	769078	Symbol	false		768832						
ANR	769079	Symbol	* req		768832						
ANR	769080	Symbol	ATTR_HAS_JIC_LOCAL_CONFIG		768832						
ANR	769081	Symbol	require		768832						
ANR	769082	Symbol	param_boolean		768832						
ANR	769083	Symbol	stderr		768832						
ANR	769084	Symbol	& vm_id		768832						
ANR	769085	Symbol	vm_id		768832						
ANR	769086	Symbol	slot_id		768832						
ANR	769087	Symbol	sscanf		768832						
ANR	769088	Symbol	name		768832						
ANR	769089	Symbol	ATTR_VIRTUAL_MACHINE_ID		768832						
ANR	769090	Symbol	& slot_id		768832						
ANR	769091	Symbol	req -> Insert		768832						
ANR	769092	Symbol	jobad_path		768832						
ANR	769093	Symbol	ATTR_SLOT_ID		768832						
ANR	769094	Symbol	req		768832						
ANR	769095	Symbol	ATTR_HAS_JIC_LOCAL_STDIN		768832						
ANR	769096	Function	fillRequestAd	296:0:7199:7346							
ANR	769097	FunctionDef	fillRequestAd (ClassAd * req)		769096	0					
ANR	769098	CompoundStatement		298:0:7234:7346	769096	0					
ANR	769099	ExpressionStatement	fillRequirements ( req )	299:1:7237:7260	769096	0	True				
ANR	769100	CallExpression	fillRequirements ( req )		769096	0					
ANR	769101	Callee	fillRequirements		769096	0					
ANR	769102	Identifier	fillRequirements		769096	0					
ANR	769103	ArgumentList	req		769096	1					
ANR	769104	Argument	req		769096	0					
ANR	769105	Identifier	req		769096	0					
ANR	769106	IfStatement	if ( lease_time != - 1 )		769096	1					
ANR	769107	Condition	lease_time != - 1	301:5:7268:7283	769096	0	True				
ANR	769108	EqualityExpression	lease_time != - 1		769096	0		!=			
ANR	769109	Identifier	lease_time		769096	0					
ANR	769110	UnaryOperationExpression	- 1		769096	1					
ANR	769111	UnaryOperator	-		769096	0					
ANR	769112	PrimaryExpression	1		769096	1					
ANR	769113	CompoundStatement		4:24:52:52	769096	1					
ANR	769114	ExpressionStatement	"req -> Assign ( ATTR_JOB_LEASE_DURATION , lease_time )"	302:2:7291:7341	769096	0	True				
ANR	769115	CallExpression	"req -> Assign ( ATTR_JOB_LEASE_DURATION , lease_time )"		769096	0					
ANR	769116	Callee	req -> Assign		769096	0					
ANR	769117	PtrMemberAccess	req -> Assign		769096	0					
ANR	769118	Identifier	req		769096	0					
ANR	769119	Identifier	Assign		769096	1					
ANR	769120	ArgumentList	ATTR_JOB_LEASE_DURATION		769096	1					
ANR	769121	Argument	ATTR_JOB_LEASE_DURATION		769096	0					
ANR	769122	Identifier	ATTR_JOB_LEASE_DURATION		769096	0					
ANR	769123	Argument	lease_time		769096	1					
ANR	769124	Identifier	lease_time		769096	0					
ANR	769125	ReturnType	void		769096	1					
ANR	769126	Identifier	fillRequestAd		769096	2					
ANR	769127	ParameterList	ClassAd * req		769096	3					
ANR	769128	Parameter	ClassAd * req	297:15:7219:7230	769096	0	True				
ANR	769129	ParameterType	ClassAd *		769096	0					
ANR	769130	Identifier	req		769096	1					
ANR	769131	CFGEntryNode	ENTRY		769096		True				
ANR	769132	CFGExitNode	EXIT		769096		True				
ANR	769133	Symbol	ATTR_JOB_LEASE_DURATION		769096						
ANR	769134	Symbol	lease_time		769096						
ANR	769135	Symbol	req		769096						
ANR	769136	Function	fillActivateAd	307:0:7350:7944							
ANR	769137	FunctionDef	fillActivateAd (ClassAd * req)		769136	0					
ANR	769138	CompoundStatement		309:0:7386:7944	769136	0					
ANR	769139	ExpressionStatement	fillRequirements ( req )	310:1:7389:7412	769136	0	True				
ANR	769140	CallExpression	fillRequirements ( req )		769136	0					
ANR	769141	Callee	fillRequirements		769136	0					
ANR	769142	Identifier	fillRequirements		769136	0					
ANR	769143	ArgumentList	req		769136	1					
ANR	769144	Argument	req		769136	0					
ANR	769145	Identifier	req		769136	0					
ANR	769146	IdentifierDeclStatement	MyString line ;	312:1:7416:7429	769136	1	True				
ANR	769147	IdentifierDecl	line		769136	0					
ANR	769148	IdentifierDeclType	MyString		769136	0					
ANR	769149	Identifier	line		769136	1					
ANR	769150	IfStatement	if ( cluster_id >= 0 )		769136	2					
ANR	769151	Condition	cluster_id >= 0	313:5:7436:7450	769136	0	True				
ANR	769152	RelationalExpression	cluster_id >= 0		769136	0		>=			
ANR	769153	Identifier	cluster_id		769136	0					
ANR	769154	PrimaryExpression	0		769136	1					
ANR	769155	CompoundStatement		5:23:67:67	769136	1					
ANR	769156	ExpressionStatement	line = ATTR_CLUSTER_ID	314:2:7458:7480	769136	0	True				
ANR	769157	AssignmentExpression	line = ATTR_CLUSTER_ID		769136	0		=			
ANR	769158	Identifier	line		769136	0					
ANR	769159	Identifier	ATTR_CLUSTER_ID		769136	1					
ANR	769160	ExpressionStatement	line += '='	315:2:7484:7495	769136	1	True				
ANR	769161	AssignmentExpression	line += '='		769136	0		+=			
ANR	769162	Identifier	line		769136	0					
ANR	769163	PrimaryExpression	'='		769136	1					
ANR	769164	ExpressionStatement	line += cluster_id	316:2:7499:7517	769136	2	True				
ANR	769165	AssignmentExpression	line += cluster_id		769136	0		+=			
ANR	769166	Identifier	line		769136	0					
ANR	769167	Identifier	cluster_id		769136	1					
ANR	769168	ExpressionStatement	req -> Insert ( line . Value ( ) )	317:2:7521:7548	769136	3	True				
ANR	769169	CallExpression	req -> Insert ( line . Value ( ) )		769136	0					
ANR	769170	Callee	req -> Insert		769136	0					
ANR	769171	PtrMemberAccess	req -> Insert		769136	0					
ANR	769172	Identifier	req		769136	0					
ANR	769173	Identifier	Insert		769136	1					
ANR	769174	ArgumentList	line . Value ( )		769136	1					
ANR	769175	Argument	line . Value ( )		769136	0					
ANR	769176	CallExpression	line . Value ( )		769136	0					
ANR	769177	Callee	line . Value		769136	0					
ANR	769178	MemberAccess	line . Value		769136	0					
ANR	769179	Identifier	line		769136	0					
ANR	769180	Identifier	Value		769136	1					
ANR	769181	ArgumentList			769136	1					
ANR	769182	IfStatement	if ( proc_id >= 0 )		769136	3					
ANR	769183	Condition	proc_id >= 0	319:5:7558:7569	769136	0	True				
ANR	769184	RelationalExpression	proc_id >= 0		769136	0		>=			
ANR	769185	Identifier	proc_id		769136	0					
ANR	769186	PrimaryExpression	0		769136	1					
ANR	769187	CompoundStatement		11:20:186:186	769136	1					
ANR	769188	ExpressionStatement	line = ATTR_PROC_ID	320:2:7577:7596	769136	0	True				
ANR	769189	AssignmentExpression	line = ATTR_PROC_ID		769136	0		=			
ANR	769190	Identifier	line		769136	0					
ANR	769191	Identifier	ATTR_PROC_ID		769136	1					
ANR	769192	ExpressionStatement	line += '='	321:2:7600:7611	769136	1	True				
ANR	769193	AssignmentExpression	line += '='		769136	0		+=			
ANR	769194	Identifier	line		769136	0					
ANR	769195	PrimaryExpression	'='		769136	1					
ANR	769196	ExpressionStatement	line += proc_id	322:2:7615:7630	769136	2	True				
ANR	769197	AssignmentExpression	line += proc_id		769136	0		+=			
ANR	769198	Identifier	line		769136	0					
ANR	769199	Identifier	proc_id		769136	1					
ANR	769200	ExpressionStatement	req -> Insert ( line . Value ( ) )	323:2:7634:7661	769136	3	True				
ANR	769201	CallExpression	req -> Insert ( line . Value ( ) )		769136	0					
ANR	769202	Callee	req -> Insert		769136	0					
ANR	769203	PtrMemberAccess	req -> Insert		769136	0					
ANR	769204	Identifier	req		769136	0					
ANR	769205	Identifier	Insert		769136	1					
ANR	769206	ArgumentList	line . Value ( )		769136	1					
ANR	769207	Argument	line . Value ( )		769136	0					
ANR	769208	CallExpression	line . Value ( )		769136	0					
ANR	769209	Callee	line . Value		769136	0					
ANR	769210	MemberAccess	line . Value		769136	0					
ANR	769211	Identifier	line		769136	0					
ANR	769212	Identifier	Value		769136	1					
ANR	769213	ArgumentList			769136	1					
ANR	769214	IfStatement	if ( job_keyword )		769136	4					
ANR	769215	Condition	job_keyword	325:5:7671:7681	769136	0	True				
ANR	769216	Identifier	job_keyword		769136	0					
ANR	769217	CompoundStatement		17:19:298:298	769136	1					
ANR	769218	ExpressionStatement	line = ATTR_JOB_KEYWORD	326:2:7689:7712	769136	0	True				
ANR	769219	AssignmentExpression	line = ATTR_JOB_KEYWORD		769136	0		=			
ANR	769220	Identifier	line		769136	0					
ANR	769221	Identifier	ATTR_JOB_KEYWORD		769136	1					
ANR	769222	ExpressionStatement	"line += ""=\\"""""	327:2:7716:7729	769136	1	True				
ANR	769223	AssignmentExpression	"line += ""=\\"""""		769136	0		+=			
ANR	769224	Identifier	line		769136	0					
ANR	769225	PrimaryExpression	"""=\\"""""		769136	1					
ANR	769226	ExpressionStatement	line += job_keyword	328:2:7733:7752	769136	2	True				
ANR	769227	AssignmentExpression	line += job_keyword		769136	0		+=			
ANR	769228	Identifier	line		769136	0					
ANR	769229	Identifier	job_keyword		769136	1					
ANR	769230	ExpressionStatement	"line += '""'"	329:2:7756:7767	769136	3	True				
ANR	769231	AssignmentExpression	"line += '""'"		769136	0		+=			
ANR	769232	Identifier	line		769136	0					
ANR	769233	PrimaryExpression	"'""'"		769136	1					
ANR	769234	ExpressionStatement	req -> Insert ( line . Value ( ) )	330:2:7771:7798	769136	4	True				
ANR	769235	CallExpression	req -> Insert ( line . Value ( ) )		769136	0					
ANR	769236	Callee	req -> Insert		769136	0					
ANR	769237	PtrMemberAccess	req -> Insert		769136	0					
ANR	769238	Identifier	req		769136	0					
ANR	769239	Identifier	Insert		769136	1					
ANR	769240	ArgumentList	line . Value ( )		769136	1					
ANR	769241	Argument	line . Value ( )		769136	0					
ANR	769242	CallExpression	line . Value ( )		769136	0					
ANR	769243	Callee	line . Value		769136	0					
ANR	769244	MemberAccess	line . Value		769136	0					
ANR	769245	Identifier	line		769136	0					
ANR	769246	Identifier	Value		769136	1					
ANR	769247	ArgumentList			769136	1					
ANR	769248	IfStatement	if ( jobad_path )		769136	5					
ANR	769249	Condition	jobad_path	332:5:7808:7817	769136	0	True				
ANR	769250	Identifier	jobad_path		769136	0					
ANR	769251	CompoundStatement		24:18:434:434	769136	1					
ANR	769252	ExpressionStatement	line = ATTR_HAS_JOB_AD	333:2:7825:7847	769136	0	True				
ANR	769253	AssignmentExpression	line = ATTR_HAS_JOB_AD		769136	0		=			
ANR	769254	Identifier	line		769136	0					
ANR	769255	Identifier	ATTR_HAS_JOB_AD		769136	1					
ANR	769256	ExpressionStatement	line += '='	334:2:7851:7862	769136	1	True				
ANR	769257	AssignmentExpression	line += '='		769136	0		+=			
ANR	769258	Identifier	line		769136	0					
ANR	769259	PrimaryExpression	'='		769136	1					
ANR	769260	ExpressionStatement	"line += ""TRUE"""	335:2:7866:7880	769136	2	True				
ANR	769261	AssignmentExpression	"line += ""TRUE"""		769136	0		+=			
ANR	769262	Identifier	line		769136	0					
ANR	769263	PrimaryExpression	"""TRUE"""		769136	1					
ANR	769264	ExpressionStatement	req -> Insert ( line . Value ( ) )	336:2:7884:7911	769136	3	True				
ANR	769265	CallExpression	req -> Insert ( line . Value ( ) )		769136	0					
ANR	769266	Callee	req -> Insert		769136	0					
ANR	769267	PtrMemberAccess	req -> Insert		769136	0					
ANR	769268	Identifier	req		769136	0					
ANR	769269	Identifier	Insert		769136	1					
ANR	769270	ArgumentList	line . Value ( )		769136	1					
ANR	769271	Argument	line . Value ( )		769136	0					
ANR	769272	CallExpression	line . Value ( )		769136	0					
ANR	769273	Callee	line . Value		769136	0					
ANR	769274	MemberAccess	line . Value		769136	0					
ANR	769275	Identifier	line		769136	0					
ANR	769276	Identifier	Value		769136	1					
ANR	769277	ArgumentList			769136	1					
ANR	769278	ExpressionStatement	dumpAdIntoRequest ( req )	337:2:7915:7939	769136	4	True				
ANR	769279	CallExpression	dumpAdIntoRequest ( req )		769136	0					
ANR	769280	Callee	dumpAdIntoRequest		769136	0					
ANR	769281	Identifier	dumpAdIntoRequest		769136	0					
ANR	769282	ArgumentList	req		769136	1					
ANR	769283	Argument	req		769136	0					
ANR	769284	Identifier	req		769136	0					
ANR	769285	ReturnType	void		769136	1					
ANR	769286	Identifier	fillActivateAd		769136	2					
ANR	769287	ParameterList	ClassAd * req		769136	3					
ANR	769288	Parameter	ClassAd * req	308:16:7371:7382	769136	0	True				
ANR	769289	ParameterType	ClassAd *		769136	0					
ANR	769290	Identifier	req		769136	1					
ANR	769291	CFGEntryNode	ENTRY		769136		True				
ANR	769292	CFGExitNode	EXIT		769136		True				
ANR	769293	Symbol	ATTR_HAS_JOB_AD		769136						
ANR	769294	Symbol	cluster_id		769136						
ANR	769295	Symbol	ATTR_CLUSTER_ID		769136						
ANR	769296	Symbol	ATTR_JOB_KEYWORD		769136						
ANR	769297	Symbol	line . Value		769136						
ANR	769298	Symbol	ATTR_PROC_ID		769136						
ANR	769299	Symbol	line		769136						
ANR	769300	Symbol	job_keyword		769136						
ANR	769301	Symbol	proc_id		769136						
ANR	769302	Symbol	jobad_path		769136						
ANR	769303	Symbol	req		769136						
ANR	769304	Function	dumpAdIntoRequest	342:0:7948:8806							
ANR	769305	FunctionDef	dumpAdIntoRequest (ClassAd * req)		769304	0					
ANR	769306	CompoundStatement		344:0:7987:8806	769304	0					
ANR	769307	IdentifierDeclStatement	bool read_something = false ;	345:1:7990:8017	769304	0	True				
ANR	769308	IdentifierDecl	read_something = false		769304	0					
ANR	769309	IdentifierDeclType	bool		769304	0					
ANR	769310	Identifier	read_something		769304	1					
ANR	769311	AssignmentExpression	read_something = false		769304	2		=			
ANR	769312	Identifier	false		769304	0					
ANR	769313	Identifier	false		769304	1					
ANR	769314	IdentifierDeclStatement	char buf [ 1024 ] ;	346:4:8023:8037	769304	1	True				
ANR	769315	IdentifierDecl	buf [ 1024 ]		769304	0					
ANR	769316	IdentifierDeclType	char [ 1024 ]		769304	0					
ANR	769317	Identifier	buf		769304	1					
ANR	769318	PrimaryExpression	1024		769304	2					
ANR	769319	IdentifierDeclStatement	char * tmp ;	347:1:8040:8049	769304	2	True				
ANR	769320	IdentifierDecl	* tmp		769304	0					
ANR	769321	IdentifierDeclType	char *		769304	0					
ANR	769322	Identifier	tmp		769304	1					
ANR	769323	WhileStatement	"while ( fgets ( buf , 1024 , JOBAD_PATH ) )"		769304	3					
ANR	769324	Condition	"fgets ( buf , 1024 , JOBAD_PATH )"	348:8:8059:8086	769304	0	True				
ANR	769325	CallExpression	"fgets ( buf , 1024 , JOBAD_PATH )"		769304	0					
ANR	769326	Callee	fgets		769304	0					
ANR	769327	Identifier	fgets		769304	0					
ANR	769328	ArgumentList	buf		769304	1					
ANR	769329	Argument	buf		769304	0					
ANR	769330	Identifier	buf		769304	0					
ANR	769331	Argument	1024		769304	1					
ANR	769332	PrimaryExpression	1024		769304	0					
ANR	769333	Argument	JOBAD_PATH		769304	2					
ANR	769334	Identifier	JOBAD_PATH		769304	0					
ANR	769335	CompoundStatement		5:39:102:102	769304	1					
ANR	769336	ExpressionStatement	read_something = true	349:8:8100:8121	769304	0	True				
ANR	769337	AssignmentExpression	read_something = true		769304	0		=			
ANR	769338	Identifier	read_something		769304	0					
ANR	769339	Identifier	true		769304	1					
ANR	769340	ExpressionStatement	chomp ( buf )	350:2:8125:8137	769304	1	True				
ANR	769341	CallExpression	chomp ( buf )		769304	0					
ANR	769342	Callee	chomp		769304	0					
ANR	769343	Identifier	chomp		769304	0					
ANR	769344	ArgumentList	buf		769304	1					
ANR	769345	Argument	buf		769304	0					
ANR	769346	Identifier	buf		769304	0					
ANR	769347	ExpressionStatement	tmp = & buf [ 0 ]	352:2:8168:8181	769304	2	True				
ANR	769348	AssignmentExpression	tmp = & buf [ 0 ]		769304	0		=			
ANR	769349	Identifier	tmp		769304	0					
ANR	769350	UnaryOperationExpression	& buf [ 0 ]		769304	1					
ANR	769351	UnaryOperator	&		769304	0					
ANR	769352	ArrayIndexing	buf [ 0 ]		769304	1					
ANR	769353	Identifier	buf		769304	0					
ANR	769354	PrimaryExpression	0		769304	1					
ANR	769355	WhileStatement	while ( * tmp && isspace ( * tmp ) )		769304	3					
ANR	769356	Condition	* tmp && isspace ( * tmp )	353:9:8192:8212	769304	0	True				
ANR	769357	AndExpression	* tmp && isspace ( * tmp )		769304	0		&&			
ANR	769358	UnaryOperationExpression	* tmp		769304	0					
ANR	769359	UnaryOperator	*		769304	0					
ANR	769360	Identifier	tmp		769304	1					
ANR	769361	CallExpression	isspace ( * tmp )		769304	1					
ANR	769362	Callee	isspace		769304	0					
ANR	769363	Identifier	isspace		769304	0					
ANR	769364	ArgumentList	* tmp		769304	1					
ANR	769365	Argument	* tmp		769304	0					
ANR	769366	UnaryOperationExpression	* tmp		769304	0					
ANR	769367	UnaryOperator	*		769304	0					
ANR	769368	Identifier	tmp		769304	1					
ANR	769369	CompoundStatement		10:32:227:227	769304	1					
ANR	769370	ExpressionStatement	tmp ++	354:3:8220:8225	769304	0	True				
ANR	769371	PostIncDecOperationExpression	tmp ++		769304	0					
ANR	769372	Identifier	tmp		769304	0					
ANR	769373	IncDec	++		769304	1					
ANR	769374	IfStatement	if ( * tmp && * tmp == '#' )		769304	4					
ANR	769375	Condition	* tmp && * tmp == '#'	356:6:8237:8255	769304	0	True				
ANR	769376	AndExpression	* tmp && * tmp == '#'		769304	0		&&			
ANR	769377	UnaryOperationExpression	* tmp		769304	0					
ANR	769378	UnaryOperator	*		769304	0					
ANR	769379	Identifier	tmp		769304	1					
ANR	769380	EqualityExpression	* tmp == '#'		769304	1		==			
ANR	769381	UnaryOperationExpression	* tmp		769304	0					
ANR	769382	UnaryOperator	*		769304	0					
ANR	769383	Identifier	tmp		769304	1					
ANR	769384	PrimaryExpression	'#'		769304	1					
ANR	769385	CompoundStatement		13:28:271:271	769304	1					
ANR	769386	ContinueStatement	continue ;	358:3:8285:8293	769304	0	True				
ANR	769387	IfStatement	if ( * tmp )		769304	5					
ANR	769388	Condition	* tmp	360:6:8305:8308	769304	0	True				
ANR	769389	UnaryOperationExpression	* tmp		769304	0					
ANR	769390	UnaryOperator	*		769304	0					
ANR	769391	Identifier	tmp		769304	1					
ANR	769392	CompoundStatement		17:13:324:324	769304	1					
ANR	769393	IfStatement	if ( ! req -> Insert ( tmp ) )		769304	0					
ANR	769394	Condition	! req -> Insert ( tmp )	363:7:8415:8432	769304	0	True				
ANR	769395	UnaryOperationExpression	! req -> Insert ( tmp )		769304	0					
ANR	769396	UnaryOperator	!		769304	0					
ANR	769397	CallExpression	req -> Insert ( tmp )		769304	1					
ANR	769398	Callee	req -> Insert		769304	0					
ANR	769399	PtrMemberAccess	req -> Insert		769304	0					
ANR	769400	Identifier	req		769304	0					
ANR	769401	Identifier	Insert		769304	1					
ANR	769402	ArgumentList	tmp		769304	1					
ANR	769403	Argument	tmp		769304	0					
ANR	769404	Identifier	tmp		769304	0					
ANR	769405	CompoundStatement		20:28:448:448	769304	1					
ANR	769406	Statement	fprintf	364:4:8442:8448	769304	0	True				
ANR	769407	Statement	(	364:11:8449:8449	769304	1	True				
ANR	769408	Statement	stderr	364:13:8451:8456	769304	2	True				
ANR	769409	Statement	","	364:19:8457:8457	769304	3	True				
ANR	769410	Statement	"""Failed to insert \\""%s\\"" into ClassAd, """	364:21:8459:8498	769304	4	True				
ANR	769411	Statement	"""ignoring this line\\n"""	365:7:8507:8528	769304	5	True				
ANR	769412	Statement	","	365:29:8529:8529	769304	6	True				
ANR	769413	Statement	tmp	365:31:8531:8533	769304	7	True				
ANR	769414	Statement	)	365:35:8535:8535	769304	8	True				
ANR	769415	ExpressionStatement		365:36:8536:8536	769304	9	True				
ANR	769416	ExpressionStatement	fclose ( JOBAD_PATH )	369:1:8554:8574	769304	4	True				
ANR	769417	CallExpression	fclose ( JOBAD_PATH )		769304	0					
ANR	769418	Callee	fclose		769304	0					
ANR	769419	Identifier	fclose		769304	0					
ANR	769420	ArgumentList	JOBAD_PATH		769304	1					
ANR	769421	Argument	JOBAD_PATH		769304	0					
ANR	769422	Identifier	JOBAD_PATH		769304	0					
ANR	769423	ExpressionStatement	req -> AddTargetRefs ( TargetMachineAttrs )	374:1:8732:8772	769304	5	True				
ANR	769424	CallExpression	req -> AddTargetRefs ( TargetMachineAttrs )		769304	0					
ANR	769425	Callee	req -> AddTargetRefs		769304	0					
ANR	769426	PtrMemberAccess	req -> AddTargetRefs		769304	0					
ANR	769427	Identifier	req		769304	0					
ANR	769428	Identifier	AddTargetRefs		769304	1					
ANR	769429	ArgumentList	TargetMachineAttrs		769304	1					
ANR	769430	Argument	TargetMachineAttrs		769304	0					
ANR	769431	Identifier	TargetMachineAttrs		769304	0					
ANR	769432	ReturnStatement	return read_something ;	377:1:8783:8804	769304	6	True				
ANR	769433	Identifier	read_something		769304	0					
ANR	769434	ReturnType	bool		769304	1					
ANR	769435	Identifier	dumpAdIntoRequest		769304	2					
ANR	769436	ParameterList	ClassAd * req		769304	3					
ANR	769437	Parameter	ClassAd * req	343:19:7972:7983	769304	0	True				
ANR	769438	ParameterType	ClassAd *		769304	0					
ANR	769439	Identifier	req		769304	1					
ANR	769440	CFGEntryNode	ENTRY		769304		True				
ANR	769441	CFGExitNode	EXIT		769304		True				
ANR	769442	Symbol	read_something		769304						
ANR	769443	Symbol	JOBAD_PATH		769304						
ANR	769444	Symbol	* tmp		769304						
ANR	769445	Symbol	TargetMachineAttrs		769304						
ANR	769446	Symbol	false		769304						
ANR	769447	Symbol	isspace		769304						
ANR	769448	Symbol	* req		769304						
ANR	769449	Symbol	fgets		769304						
ANR	769450	Symbol	buf		769304						
ANR	769451	Symbol	tmp		769304						
ANR	769452	Symbol	true		769304						
ANR	769453	Symbol	req -> Insert		769304						
ANR	769454	Symbol	req		769304						
ANR	769455	Function	getCommandFromArgv	386:0:9001:11135							
ANR	769456	FunctionDef	"getCommandFromArgv (int argc , char * argv [ ])"		769455	0					
ANR	769457	CompoundStatement		388:0:9050:11135	769455	0					
ANR	769458	IdentifierDeclStatement	char * cmd_str = NULL ;	389:1:9053:9073	769455	0	True				
ANR	769459	IdentifierDecl	* cmd_str = NULL		769455	0					
ANR	769460	IdentifierDeclType	char *		769455	0					
ANR	769461	Identifier	cmd_str		769455	1					
ANR	769462	AssignmentExpression	* cmd_str = NULL		769455	2		=			
ANR	769463	Identifier	NULL		769455	0					
ANR	769464	Identifier	NULL		769455	1					
ANR	769465	IdentifierDeclStatement	"int size , baselen ;"	390:1:9076:9093	769455	1	True				
ANR	769466	IdentifierDecl	size		769455	0					
ANR	769467	IdentifierDeclType	int		769455	0					
ANR	769468	Identifier	size		769455	1					
ANR	769469	IdentifierDecl	baselen		769455	1					
ANR	769470	IdentifierDeclType	int		769455	0					
ANR	769471	Identifier	baselen		769455	1					
ANR	769472	IdentifierDeclStatement	char * base = strdup ( condor_basename ( argv [ 0 ] ) ) ;	391:1:9096:9143	769455	2	True				
ANR	769473	IdentifierDecl	* base = strdup ( condor_basename ( argv [ 0 ] ) )		769455	0					
ANR	769474	IdentifierDeclType	char *		769455	0					
ANR	769475	Identifier	base		769455	1					
ANR	769476	AssignmentExpression	* base = strdup ( condor_basename ( argv [ 0 ] ) )		769455	2		=			
ANR	769477	Identifier	base		769455	0					
ANR	769478	CallExpression	strdup ( condor_basename ( argv [ 0 ] ) )		769455	1					
ANR	769479	Callee	strdup		769455	0					
ANR	769480	Identifier	strdup		769455	0					
ANR	769481	ArgumentList	condor_basename ( argv [ 0 ] )		769455	1					
ANR	769482	Argument	condor_basename ( argv [ 0 ] )		769455	0					
ANR	769483	CallExpression	condor_basename ( argv [ 0 ] )		769455	0					
ANR	769484	Callee	condor_basename		769455	0					
ANR	769485	Identifier	condor_basename		769455	0					
ANR	769486	ArgumentList	argv [ 0 ]		769455	1					
ANR	769487	Argument	argv [ 0 ]		769455	0					
ANR	769488	ArrayIndexing	argv [ 0 ]		769455	0					
ANR	769489	Identifier	argv		769455	0					
ANR	769490	PrimaryExpression	0		769455	1					
ANR	769491	ExpressionStatement	"cmd_str = strrchr ( base , '_' )"	394:1:9212:9241	769455	3	True				
ANR	769492	AssignmentExpression	"cmd_str = strrchr ( base , '_' )"		769455	0		=			
ANR	769493	Identifier	cmd_str		769455	0					
ANR	769494	CallExpression	"strrchr ( base , '_' )"		769455	1					
ANR	769495	Callee	strrchr		769455	0					
ANR	769496	Identifier	strrchr		769455	0					
ANR	769497	ArgumentList	base		769455	1					
ANR	769498	Argument	base		769455	0					
ANR	769499	Identifier	base		769455	0					
ANR	769500	Argument	'_'		769455	1					
ANR	769501	PrimaryExpression	'_'		769455	0					
ANR	769502	IfStatement	"if ( cmd_str && ! strncasecmp ( cmd_str , ""_cod"" , 4 ) )"		769455	4					
ANR	769503	Condition	"cmd_str && ! strncasecmp ( cmd_str , ""_cod"" , 4 )"	399:5:9390:9432	769455	0	True				
ANR	769504	AndExpression	"cmd_str && ! strncasecmp ( cmd_str , ""_cod"" , 4 )"		769455	0		&&			
ANR	769505	Identifier	cmd_str		769455	0					
ANR	769506	UnaryOperationExpression	"! strncasecmp ( cmd_str , ""_cod"" , 4 )"		769455	1					
ANR	769507	UnaryOperator	!		769455	0					
ANR	769508	CallExpression	"strncasecmp ( cmd_str , ""_cod"" , 4 )"		769455	1					
ANR	769509	Callee	strncasecmp		769455	0					
ANR	769510	Identifier	strncasecmp		769455	0					
ANR	769511	ArgumentList	cmd_str		769455	1					
ANR	769512	Argument	cmd_str		769455	0					
ANR	769513	Identifier	cmd_str		769455	0					
ANR	769514	Argument	"""_cod"""		769455	1					
ANR	769515	PrimaryExpression	"""_cod"""		769455	0					
ANR	769516	Argument	4		769455	2					
ANR	769517	PrimaryExpression	4		769455	0					
ANR	769518	CompoundStatement		12:51:385:385	769455	1					
ANR	769519	IfStatement	if ( cmd_str [ 4 ] )		769455	0					
ANR	769520	Condition	cmd_str [ 4 ]	400:6:9444:9453	769455	0	True				
ANR	769521	ArrayIndexing	cmd_str [ 4 ]		769455	0					
ANR	769522	Identifier	cmd_str		769455	0					
ANR	769523	PrimaryExpression	4		769455	1					
ANR	769524	CompoundStatement		13:19:406:406	769455	1					
ANR	769525	ExpressionStatement	cmd_str = & cmd_str [ 4 ]	401:3:9462:9483	769455	0	True				
ANR	769526	AssignmentExpression	cmd_str = & cmd_str [ 4 ]		769455	0		=			
ANR	769527	Identifier	cmd_str		769455	0					
ANR	769528	UnaryOperationExpression	& cmd_str [ 4 ]		769455	1					
ANR	769529	UnaryOperator	&		769455	0					
ANR	769530	ArrayIndexing	cmd_str [ 4 ]		769455	1					
ANR	769531	Identifier	cmd_str		769455	0					
ANR	769532	PrimaryExpression	4		769455	1					
ANR	769533	ElseStatement	else		769455	0					
ANR	769534	CompoundStatement		15:9:443:443	769455	0					
ANR	769535	ExpressionStatement	cmd_str = NULL	403:3:9499:9513	769455	0	True				
ANR	769536	AssignmentExpression	cmd_str = NULL		769455	0		=			
ANR	769537	Identifier	cmd_str		769455	0					
ANR	769538	Identifier	NULL		769455	1					
ANR	769539	IfStatement	if ( ! cmd_str )		769455	5					
ANR	769540	Condition	! cmd_str	407:5:9574:9581	769455	0	True				
ANR	769541	UnaryOperationExpression	! cmd_str		769455	0					
ANR	769542	UnaryOperator	!		769455	0					
ANR	769543	Identifier	cmd_str		769455	1					
ANR	769544	CompoundStatement		20:16:534:534	769455	1					
ANR	769545	IfStatement	if ( ! argv [ 1 ] )		769455	0					
ANR	769546	Condition	! argv [ 1 ]	410:6:9636:9644	769455	0	True				
ANR	769547	UnaryOperationExpression	! argv [ 1 ]		769455	0					
ANR	769548	UnaryOperator	!		769455	0					
ANR	769549	ArrayIndexing	argv [ 1 ]		769455	1					
ANR	769550	Identifier	argv		769455	0					
ANR	769551	PrimaryExpression	1		769455	1					
ANR	769552	CompoundStatement		23:18:597:597	769455	1					
ANR	769553	ExpressionStatement	usage ( base )	410:20:9650:9663	769455	0	True				
ANR	769554	CallExpression	usage ( base )		769455	0					
ANR	769555	Callee	usage		769455	0					
ANR	769556	Identifier	usage		769455	0					
ANR	769557	ArgumentList	base		769455	1					
ANR	769558	Argument	base		769455	0					
ANR	769559	Identifier	base		769455	0					
ANR	769560	IfStatement	if ( argv [ 1 ] [ 0 ] == '-' )		769455	1					
ANR	769561	Condition	argv [ 1 ] [ 0 ] == '-'	413:6:9735:9751	769455	0	True				
ANR	769562	EqualityExpression	argv [ 1 ] [ 0 ] == '-'		769455	0		==			
ANR	769563	ArrayIndexing	argv [ 1 ] [ 0 ]		769455	0					
ANR	769564	ArrayIndexing	argv [ 1 ]		769455	0					
ANR	769565	Identifier	argv		769455	0					
ANR	769566	PrimaryExpression	1		769455	1					
ANR	769567	PrimaryExpression	0		769455	1					
ANR	769568	PrimaryExpression	'-'		769455	1					
ANR	769569	CompoundStatement		26:26:704:704	769455	1					
ANR	769570	IfStatement	if ( argv [ 1 ] [ 1 ] == 'v' )		769455	0					
ANR	769571	Condition	argv [ 1 ] [ 1 ] == 'v'	416:7:9870:9886	769455	0	True				
ANR	769572	EqualityExpression	argv [ 1 ] [ 1 ] == 'v'		769455	0		==			
ANR	769573	ArrayIndexing	argv [ 1 ] [ 1 ]		769455	0					
ANR	769574	ArrayIndexing	argv [ 1 ]		769455	0					
ANR	769575	Identifier	argv		769455	0					
ANR	769576	PrimaryExpression	1		769455	1					
ANR	769577	PrimaryExpression	1		769455	1					
ANR	769578	PrimaryExpression	'v'		769455	1					
ANR	769579	CompoundStatement		29:27:839:839	769455	1					
ANR	769580	ExpressionStatement	version ( )	417:4:9896:9905	769455	0	True				
ANR	769581	CallExpression	version ( )		769455	0					
ANR	769582	Callee	version		769455	0					
ANR	769583	Identifier	version		769455	0					
ANR	769584	ArgumentList			769455	1					
ANR	769585	ElseStatement	else		769455	0					
ANR	769586	CompoundStatement		31:10:866:866	769455	0					
ANR	769587	ExpressionStatement	usage ( base )	419:4:9923:9936	769455	0	True				
ANR	769588	CallExpression	usage ( base )		769455	0					
ANR	769589	Callee	usage		769455	0					
ANR	769590	Identifier	usage		769455	0					
ANR	769591	ArgumentList	base		769455	1					
ANR	769592	Argument	base		769455	0					
ANR	769593	Identifier	base		769455	0					
ANR	769594	ExpressionStatement	size = strlen ( argv [ 1 ] )	422:2:9949:9971	769455	2	True				
ANR	769595	AssignmentExpression	size = strlen ( argv [ 1 ] )		769455	0		=			
ANR	769596	Identifier	size		769455	0					
ANR	769597	CallExpression	strlen ( argv [ 1 ] )		769455	1					
ANR	769598	Callee	strlen		769455	0					
ANR	769599	Identifier	strlen		769455	0					
ANR	769600	ArgumentList	argv [ 1 ]		769455	1					
ANR	769601	Argument	argv [ 1 ]		769455	0					
ANR	769602	ArrayIndexing	argv [ 1 ]		769455	0					
ANR	769603	Identifier	argv		769455	0					
ANR	769604	PrimaryExpression	1		769455	1					
ANR	769605	ExpressionStatement	baselen = strlen ( base )	423:2:9975:9997	769455	3	True				
ANR	769606	AssignmentExpression	baselen = strlen ( base )		769455	0		=			
ANR	769607	Identifier	baselen		769455	0					
ANR	769608	CallExpression	strlen ( base )		769455	1					
ANR	769609	Callee	strlen		769455	0					
ANR	769610	Identifier	strlen		769455	0					
ANR	769611	ArgumentList	base		769455	1					
ANR	769612	Argument	base		769455	0					
ANR	769613	Identifier	base		769455	0					
ANR	769614	ExpressionStatement	my_name = ( char * ) malloc ( size + baselen + 2 )	425:2:10053:10098	769455	4	True				
ANR	769615	AssignmentExpression	my_name = ( char * ) malloc ( size + baselen + 2 )		769455	0		=			
ANR	769616	Identifier	my_name		769455	0					
ANR	769617	CastExpression	( char * ) malloc ( size + baselen + 2 )		769455	1					
ANR	769618	CastTarget	char *		769455	0					
ANR	769619	CallExpression	malloc ( size + baselen + 2 )		769455	1					
ANR	769620	Callee	malloc		769455	0					
ANR	769621	Identifier	malloc		769455	0					
ANR	769622	ArgumentList	size + baselen + 2		769455	1					
ANR	769623	Argument	size + baselen + 2		769455	0					
ANR	769624	AdditiveExpression	size + baselen + 2		769455	0		+			
ANR	769625	Identifier	size		769455	0					
ANR	769626	AdditiveExpression	baselen + 2		769455	1		+			
ANR	769627	Identifier	baselen		769455	0					
ANR	769628	PrimaryExpression	2		769455	1					
ANR	769629	ExpressionStatement	"sprintf ( my_name , ""%s %s"" , base , argv [ 1 ] )"	426:2:10102:10144	769455	5	True				
ANR	769630	CallExpression	"sprintf ( my_name , ""%s %s"" , base , argv [ 1 ] )"		769455	0					
ANR	769631	Callee	sprintf		769455	0					
ANR	769632	Identifier	sprintf		769455	0					
ANR	769633	ArgumentList	my_name		769455	1					
ANR	769634	Argument	my_name		769455	0					
ANR	769635	Identifier	my_name		769455	0					
ANR	769636	Argument	"""%s %s"""		769455	1					
ANR	769637	PrimaryExpression	"""%s %s"""		769455	0					
ANR	769638	Argument	base		769455	2					
ANR	769639	Identifier	base		769455	0					
ANR	769640	Argument	argv [ 1 ]		769455	3					
ANR	769641	ArrayIndexing	argv [ 1 ]		769455	0					
ANR	769642	Identifier	argv		769455	0					
ANR	769643	PrimaryExpression	1		769455	1					
ANR	769644	ExpressionStatement	cmd_str = my_name + baselen + 1	428:2:10194:10221	769455	6	True				
ANR	769645	AssignmentExpression	cmd_str = my_name + baselen + 1		769455	0		=			
ANR	769646	Identifier	cmd_str		769455	0					
ANR	769647	AdditiveExpression	my_name + baselen + 1		769455	1		+			
ANR	769648	Identifier	my_name		769455	0					
ANR	769649	AdditiveExpression	baselen + 1		769455	1		+			
ANR	769650	Identifier	baselen		769455	0					
ANR	769651	PrimaryExpression	1		769455	1					
ANR	769652	ExpressionStatement	free ( base )	429:2:10225:10237	769455	7	True				
ANR	769653	CallExpression	free ( base )		769455	0					
ANR	769654	Callee	free		769455	0					
ANR	769655	Identifier	free		769455	0					
ANR	769656	ArgumentList	base		769455	1					
ANR	769657	Argument	base		769455	0					
ANR	769658	Identifier	base		769455	0					
ANR	769659	ExpressionStatement	argv ++	430:2:10241:10247	769455	8	True				
ANR	769660	PostIncDecOperationExpression	argv ++		769455	0					
ANR	769661	Identifier	argv		769455	0					
ANR	769662	IncDec	++		769455	1					
ANR	769663	ExpressionStatement	argc --	430:10:10249:10255	769455	9	True				
ANR	769664	PostIncDecOperationExpression	argc --		769455	0					
ANR	769665	Identifier	argc		769455	0					
ANR	769666	IncDec	--		769455	1					
ANR	769667	ElseStatement	else		769455	0					
ANR	769668	CompoundStatement		44:8:1214:1214	769455	0					
ANR	769669	ExpressionStatement	my_name = base	432:2:10269:10283	769455	0	True				
ANR	769670	AssignmentExpression	my_name = base		769455	0		=			
ANR	769671	Identifier	my_name		769455	0					
ANR	769672	Identifier	base		769455	1					
ANR	769673	ExpressionStatement	cmd_str ++	433:2:10287:10296	769455	1	True				
ANR	769674	PostIncDecOperationExpression	cmd_str ++		769455	0					
ANR	769675	Identifier	cmd_str		769455	0					
ANR	769676	IncDec	++		769455	1					
ANR	769677	IfStatement	"if ( ! strcmp ( cmd_str , ""request"" ) )"		769455	6					
ANR	769678	Condition	"! strcmp ( cmd_str , ""request"" )"	436:5:10348:10376	769455	0	True				
ANR	769679	UnaryOperationExpression	"! strcmp ( cmd_str , ""request"" )"		769455	0					
ANR	769680	UnaryOperator	!		769455	0					
ANR	769681	CallExpression	"strcmp ( cmd_str , ""request"" )"		769455	1					
ANR	769682	Callee	strcmp		769455	0					
ANR	769683	Identifier	strcmp		769455	0					
ANR	769684	ArgumentList	cmd_str		769455	1					
ANR	769685	Argument	cmd_str		769455	0					
ANR	769686	Identifier	cmd_str		769455	0					
ANR	769687	Argument	"""request"""		769455	1					
ANR	769688	PrimaryExpression	"""request"""		769455	0					
ANR	769689	CompoundStatement		49:37:1329:1329	769455	1					
ANR	769690	ExpressionStatement	needs_id = false	438:2:10444:10460	769455	0	True				
ANR	769691	AssignmentExpression	needs_id = false		769455	0		=			
ANR	769692	Identifier	needs_id		769455	0					
ANR	769693	Identifier	false		769455	1					
ANR	769694	ReturnStatement	return CA_REQUEST_CLAIM ;	439:2:10464:10487	769455	1	True				
ANR	769695	Identifier	CA_REQUEST_CLAIM		769455	0					
ANR	769696	ElseStatement	else		769455	0					
ANR	769697	IfStatement	"if ( ! strcmp ( cmd_str , ""release"" ) )"		769455	0					
ANR	769698	Condition	"! strcmp ( cmd_str , ""release"" )"	440:12:10501:10529	769455	0	True				
ANR	769699	UnaryOperationExpression	"! strcmp ( cmd_str , ""release"" )"		769455	0					
ANR	769700	UnaryOperator	!		769455	0					
ANR	769701	CallExpression	"strcmp ( cmd_str , ""release"" )"		769455	1					
ANR	769702	Callee	strcmp		769455	0					
ANR	769703	Identifier	strcmp		769455	0					
ANR	769704	ArgumentList	cmd_str		769455	1					
ANR	769705	Argument	cmd_str		769455	0					
ANR	769706	Identifier	cmd_str		769455	0					
ANR	769707	Argument	"""release"""		769455	1					
ANR	769708	PrimaryExpression	"""release"""		769455	0					
ANR	769709	CompoundStatement		53:44:1482:1482	769455	1					
ANR	769710	ReturnStatement	return CA_RELEASE_CLAIM ;	441:2:10537:10560	769455	0	True				
ANR	769711	Identifier	CA_RELEASE_CLAIM		769455	0					
ANR	769712	ElseStatement	else		769455	0					
ANR	769713	IfStatement	"if ( ! strcmp ( cmd_str , ""activate"" ) )"		769455	0					
ANR	769714	Condition	"! strcmp ( cmd_str , ""activate"" )"	442:12:10574:10603	769455	0	True				
ANR	769715	UnaryOperationExpression	"! strcmp ( cmd_str , ""activate"" )"		769455	0					
ANR	769716	UnaryOperator	!		769455	0					
ANR	769717	CallExpression	"strcmp ( cmd_str , ""activate"" )"		769455	1					
ANR	769718	Callee	strcmp		769455	0					
ANR	769719	Identifier	strcmp		769455	0					
ANR	769720	ArgumentList	cmd_str		769455	1					
ANR	769721	Argument	cmd_str		769455	0					
ANR	769722	Identifier	cmd_str		769455	0					
ANR	769723	Argument	"""activate"""		769455	1					
ANR	769724	PrimaryExpression	"""activate"""		769455	0					
ANR	769725	CompoundStatement		55:45:1556:1556	769455	1					
ANR	769726	ReturnStatement	return CA_ACTIVATE_CLAIM ;	443:2:10611:10635	769455	0	True				
ANR	769727	Identifier	CA_ACTIVATE_CLAIM		769455	0					
ANR	769728	ElseStatement	else		769455	0					
ANR	769729	IfStatement	"if ( ! strcmp ( cmd_str , ""deactivate"" ) )"		769455	0					
ANR	769730	Condition	"! strcmp ( cmd_str , ""deactivate"" )"	444:12:10649:10680	769455	0	True				
ANR	769731	UnaryOperationExpression	"! strcmp ( cmd_str , ""deactivate"" )"		769455	0					
ANR	769732	UnaryOperator	!		769455	0					
ANR	769733	CallExpression	"strcmp ( cmd_str , ""deactivate"" )"		769455	1					
ANR	769734	Callee	strcmp		769455	0					
ANR	769735	Identifier	strcmp		769455	0					
ANR	769736	ArgumentList	cmd_str		769455	1					
ANR	769737	Argument	cmd_str		769455	0					
ANR	769738	Identifier	cmd_str		769455	0					
ANR	769739	Argument	"""deactivate"""		769455	1					
ANR	769740	PrimaryExpression	"""deactivate"""		769455	0					
ANR	769741	CompoundStatement		57:47:1633:1633	769455	1					
ANR	769742	ReturnStatement	return CA_DEACTIVATE_CLAIM ;	445:2:10688:10714	769455	0	True				
ANR	769743	Identifier	CA_DEACTIVATE_CLAIM		769455	0					
ANR	769744	ElseStatement	else		769455	0					
ANR	769745	IfStatement	"if ( ! strcmp ( cmd_str , ""suspend"" ) )"		769455	0					
ANR	769746	Condition	"! strcmp ( cmd_str , ""suspend"" )"	446:12:10728:10756	769455	0	True				
ANR	769747	UnaryOperationExpression	"! strcmp ( cmd_str , ""suspend"" )"		769455	0					
ANR	769748	UnaryOperator	!		769455	0					
ANR	769749	CallExpression	"strcmp ( cmd_str , ""suspend"" )"		769455	1					
ANR	769750	Callee	strcmp		769455	0					
ANR	769751	Identifier	strcmp		769455	0					
ANR	769752	ArgumentList	cmd_str		769455	1					
ANR	769753	Argument	cmd_str		769455	0					
ANR	769754	Identifier	cmd_str		769455	0					
ANR	769755	Argument	"""suspend"""		769455	1					
ANR	769756	PrimaryExpression	"""suspend"""		769455	0					
ANR	769757	CompoundStatement		59:44:1709:1709	769455	1					
ANR	769758	ReturnStatement	return CA_SUSPEND_CLAIM ;	447:2:10764:10787	769455	0	True				
ANR	769759	Identifier	CA_SUSPEND_CLAIM		769455	0					
ANR	769760	ElseStatement	else		769455	0					
ANR	769761	IfStatement	"if ( ! strcmp ( cmd_str , ""resume"" ) )"		769455	0					
ANR	769762	Condition	"! strcmp ( cmd_str , ""resume"" )"	448:12:10801:10828	769455	0	True				
ANR	769763	UnaryOperationExpression	"! strcmp ( cmd_str , ""resume"" )"		769455	0					
ANR	769764	UnaryOperator	!		769455	0					
ANR	769765	CallExpression	"strcmp ( cmd_str , ""resume"" )"		769455	1					
ANR	769766	Callee	strcmp		769455	0					
ANR	769767	Identifier	strcmp		769455	0					
ANR	769768	ArgumentList	cmd_str		769455	1					
ANR	769769	Argument	cmd_str		769455	0					
ANR	769770	Identifier	cmd_str		769455	0					
ANR	769771	Argument	"""resume"""		769455	1					
ANR	769772	PrimaryExpression	"""resume"""		769455	0					
ANR	769773	CompoundStatement		61:43:1781:1781	769455	1					
ANR	769774	ReturnStatement	return CA_RESUME_CLAIM ;	449:2:10836:10858	769455	0	True				
ANR	769775	Identifier	CA_RESUME_CLAIM		769455	0					
ANR	769776	ElseStatement	else		769455	0					
ANR	769777	IfStatement	"if ( ! strcmp ( cmd_str , ""renew"" ) )"		769455	0					
ANR	769778	Condition	"! strcmp ( cmd_str , ""renew"" )"	450:12:10872:10898	769455	0	True				
ANR	769779	UnaryOperationExpression	"! strcmp ( cmd_str , ""renew"" )"		769455	0					
ANR	769780	UnaryOperator	!		769455	0					
ANR	769781	CallExpression	"strcmp ( cmd_str , ""renew"" )"		769455	1					
ANR	769782	Callee	strcmp		769455	0					
ANR	769783	Identifier	strcmp		769455	0					
ANR	769784	ArgumentList	cmd_str		769455	1					
ANR	769785	Argument	cmd_str		769455	0					
ANR	769786	Identifier	cmd_str		769455	0					
ANR	769787	Argument	"""renew"""		769455	1					
ANR	769788	PrimaryExpression	"""renew"""		769455	0					
ANR	769789	CompoundStatement		63:42:1851:1851	769455	1					
ANR	769790	ReturnStatement	return CA_RENEW_LEASE_FOR_CLAIM ;	451:2:10906:10937	769455	0	True				
ANR	769791	Identifier	CA_RENEW_LEASE_FOR_CLAIM		769455	0					
ANR	769792	ElseStatement	else		769455	0					
ANR	769793	IfStatement	"if ( ! strcmp ( cmd_str , ""delegate_proxy"" ) )"		769455	0					
ANR	769794	Condition	"! strcmp ( cmd_str , ""delegate_proxy"" )"	452:12:10951:10986	769455	0	True				
ANR	769795	UnaryOperationExpression	"! strcmp ( cmd_str , ""delegate_proxy"" )"		769455	0					
ANR	769796	UnaryOperator	!		769455	0					
ANR	769797	CallExpression	"strcmp ( cmd_str , ""delegate_proxy"" )"		769455	1					
ANR	769798	Callee	strcmp		769455	0					
ANR	769799	Identifier	strcmp		769455	0					
ANR	769800	ArgumentList	cmd_str		769455	1					
ANR	769801	Argument	cmd_str		769455	0					
ANR	769802	Identifier	cmd_str		769455	0					
ANR	769803	Argument	"""delegate_proxy"""		769455	1					
ANR	769804	PrimaryExpression	"""delegate_proxy"""		769455	0					
ANR	769805	CompoundStatement		65:51:1939:1939	769455	1					
ANR	769806	ReturnStatement	return DELEGATE_GSI_CRED_STARTD ;	453:2:10994:11025	769455	0	True				
ANR	769807	Identifier	DELEGATE_GSI_CRED_STARTD		769455	0					
ANR	769808	ElseStatement	else		769455	0					
ANR	769809	CompoundStatement		67:8:1984:1984	769455	0					
ANR	769810	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown command \\""%s\\""\\n"" , my_name )"	455:2:11039:11100	769455	0	True				
ANR	769811	CallExpression	"fprintf ( stderr , ""ERROR: unknown command \\""%s\\""\\n"" , my_name )"		769455	0					
ANR	769812	Callee	fprintf		769455	0					
ANR	769813	Identifier	fprintf		769455	0					
ANR	769814	ArgumentList	stderr		769455	1					
ANR	769815	Argument	stderr		769455	0					
ANR	769816	Identifier	stderr		769455	0					
ANR	769817	Argument	"""ERROR: unknown command \\""%s\\""\\n"""		769455	1					
ANR	769818	PrimaryExpression	"""ERROR: unknown command \\""%s\\""\\n"""		769455	0					
ANR	769819	Argument	my_name		769455	2					
ANR	769820	Identifier	my_name		769455	0					
ANR	769821	ExpressionStatement	"usage ( ""cod"" )"	456:2:11104:11118	769455	1	True				
ANR	769822	CallExpression	"usage ( ""cod"" )"		769455	0					
ANR	769823	Callee	usage		769455	0					
ANR	769824	Identifier	usage		769455	0					
ANR	769825	ArgumentList	"""cod"""		769455	1					
ANR	769826	Argument	"""cod"""		769455	0					
ANR	769827	PrimaryExpression	"""cod"""		769455	0					
ANR	769828	ReturnStatement	return - 1 ;	458:1:11124:11133	769455	7	True				
ANR	769829	UnaryOperationExpression	- 1		769455	0					
ANR	769830	UnaryOperator	-		769455	0					
ANR	769831	PrimaryExpression	1		769455	1					
ANR	769832	ReturnType	int		769455	1					
ANR	769833	Identifier	getCommandFromArgv		769455	2					
ANR	769834	ParameterList	"int argc , char * argv [ ]"		769455	3					
ANR	769835	Parameter	int argc	387:20:9025:9032	769455	0	True				
ANR	769836	ParameterType	int		769455	0					
ANR	769837	Identifier	argc		769455	1					
ANR	769838	Parameter	char * argv [ ]	387:30:9035:9046	769455	1	True				
ANR	769839	ParameterType	char * [ ]		769455	0					
ANR	769840	Identifier	argv		769455	1					
ANR	769841	CFGEntryNode	ENTRY		769455		True				
ANR	769842	CFGExitNode	EXIT		769455		True				
ANR	769843	Symbol	CA_DEACTIVATE_CLAIM		769455						
ANR	769844	Symbol	baselen		769455						
ANR	769845	Symbol	strncasecmp		769455						
ANR	769846	Symbol	* argv		769455						
ANR	769847	Symbol	argv		769455						
ANR	769848	Symbol	strlen		769455						
ANR	769849	Symbol	my_name		769455						
ANR	769850	Symbol	CA_REQUEST_CLAIM		769455						
ANR	769851	Symbol	DELEGATE_GSI_CRED_STARTD		769455						
ANR	769852	Symbol	* * argv		769455						
ANR	769853	Symbol	needs_id		769455						
ANR	769854	Symbol	cmd_str		769455						
ANR	769855	Symbol	argc		769455						
ANR	769856	Symbol	strcmp		769455						
ANR	769857	Symbol	* cmd_str		769455						
ANR	769858	Symbol	malloc		769455						
ANR	769859	Symbol	CA_ACTIVATE_CLAIM		769455						
ANR	769860	Symbol	NULL		769455						
ANR	769861	Symbol	CA_RESUME_CLAIM		769455						
ANR	769862	Symbol	false		769455						
ANR	769863	Symbol	CA_RENEW_LEASE_FOR_CLAIM		769455						
ANR	769864	Symbol	stderr		769455						
ANR	769865	Symbol	size		769455						
ANR	769866	Symbol	strrchr		769455						
ANR	769867	Symbol	CA_RELEASE_CLAIM		769455						
ANR	769868	Symbol	strdup		769455						
ANR	769869	Symbol	condor_basename		769455						
ANR	769870	Symbol	CA_SUSPEND_CLAIM		769455						
ANR	769871	Symbol	base		769455						
ANR	769872	Function	version	462:0:11139:11226							
ANR	769873	FunctionDef	version ()		769872	0					
ANR	769874	CompoundStatement		464:0:11154:11226	769872	0					
ANR	769875	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	465:1:11157:11212	769872	0	True				
ANR	769876	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		769872	0					
ANR	769877	Callee	printf		769872	0					
ANR	769878	Identifier	printf		769872	0					
ANR	769879	ArgumentList	"""%s\\n%s\\n"""		769872	1					
ANR	769880	Argument	"""%s\\n%s\\n"""		769872	0					
ANR	769881	PrimaryExpression	"""%s\\n%s\\n"""		769872	0					
ANR	769882	Argument	CondorVersion ( )		769872	1					
ANR	769883	CallExpression	CondorVersion ( )		769872	0					
ANR	769884	Callee	CondorVersion		769872	0					
ANR	769885	Identifier	CondorVersion		769872	0					
ANR	769886	ArgumentList			769872	1					
ANR	769887	Argument	CondorPlatform ( )		769872	2					
ANR	769888	CallExpression	CondorPlatform ( )		769872	0					
ANR	769889	Callee	CondorPlatform		769872	0					
ANR	769890	Identifier	CondorPlatform		769872	0					
ANR	769891	ArgumentList			769872	1					
ANR	769892	ExpressionStatement	exit ( 0 )	466:1:11215:11224	769872	1	True				
ANR	769893	CallExpression	exit ( 0 )		769872	0					
ANR	769894	Callee	exit		769872	0					
ANR	769895	Identifier	exit		769872	0					
ANR	769896	ArgumentList	0		769872	1					
ANR	769897	Argument	0		769872	0					
ANR	769898	PrimaryExpression	0		769872	0					
ANR	769899	ReturnType	void		769872	1					
ANR	769900	Identifier	version		769872	2					
ANR	769901	ParameterList			769872	3					
ANR	769902	CFGEntryNode	ENTRY		769872		True				
ANR	769903	CFGExitNode	EXIT		769872		True				
ANR	769904	Symbol	CondorVersion		769872						
ANR	769905	Symbol	CondorPlatform		769872						
ANR	769906	Function	invalid	469:0:11229:11341							
ANR	769907	FunctionDef	invalid (const char * opt)		769906	0					
ANR	769908	CompoundStatement		471:0:11261:11341	769906	0					
ANR	769909	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' is invalid\\n"" , my_name , opt )"	472:1:11264:11320	769906	0	True				
ANR	769910	CallExpression	"fprintf ( stderr , ""%s: '%s' is invalid\\n"" , my_name , opt )"		769906	0					
ANR	769911	Callee	fprintf		769906	0					
ANR	769912	Identifier	fprintf		769906	0					
ANR	769913	ArgumentList	stderr		769906	1					
ANR	769914	Argument	stderr		769906	0					
ANR	769915	Identifier	stderr		769906	0					
ANR	769916	Argument	"""%s: '%s' is invalid\\n"""		769906	1					
ANR	769917	PrimaryExpression	"""%s: '%s' is invalid\\n"""		769906	0					
ANR	769918	Argument	my_name		769906	2					
ANR	769919	Identifier	my_name		769906	0					
ANR	769920	Argument	opt		769906	3					
ANR	769921	Identifier	opt		769906	0					
ANR	769922	ExpressionStatement	usage ( my_name )	473:1:11323:11339	769906	1	True				
ANR	769923	CallExpression	usage ( my_name )		769906	0					
ANR	769924	Callee	usage		769906	0					
ANR	769925	Identifier	usage		769906	0					
ANR	769926	ArgumentList	my_name		769906	1					
ANR	769927	Argument	my_name		769906	0					
ANR	769928	Identifier	my_name		769906	0					
ANR	769929	ReturnType	void		769906	1					
ANR	769930	Identifier	invalid		769906	2					
ANR	769931	ParameterList	const char * opt		769906	3					
ANR	769932	Parameter	const char * opt	470:9:11243:11257	769906	0	True				
ANR	769933	ParameterType	const char *		769906	0					
ANR	769934	Identifier	opt		769906	1					
ANR	769935	CFGEntryNode	ENTRY		769906		True				
ANR	769936	CFGExitNode	EXIT		769906		True				
ANR	769937	Symbol	my_name		769906						
ANR	769938	Symbol	opt		769906						
ANR	769939	Symbol	stderr		769906						
ANR	769940	Function	ambiguous	477:0:11345:11462							
ANR	769941	FunctionDef	ambiguous (const char * opt)		769940	0					
ANR	769942	CompoundStatement		479:0:11379:11462	769940	0					
ANR	769943	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' is ambiguous\\n"" , my_name , opt )"	480:1:11382:11440	769940	0	True				
ANR	769944	CallExpression	"fprintf ( stderr , ""%s: '%s' is ambiguous\\n"" , my_name , opt )"		769940	0					
ANR	769945	Callee	fprintf		769940	0					
ANR	769946	Identifier	fprintf		769940	0					
ANR	769947	ArgumentList	stderr		769940	1					
ANR	769948	Argument	stderr		769940	0					
ANR	769949	Identifier	stderr		769940	0					
ANR	769950	Argument	"""%s: '%s' is ambiguous\\n"""		769940	1					
ANR	769951	PrimaryExpression	"""%s: '%s' is ambiguous\\n"""		769940	0					
ANR	769952	Argument	my_name		769940	2					
ANR	769953	Identifier	my_name		769940	0					
ANR	769954	Argument	opt		769940	3					
ANR	769955	Identifier	opt		769940	0					
ANR	769956	ExpressionStatement	usage ( my_name )	481:1:11444:11460	769940	1	True				
ANR	769957	CallExpression	usage ( my_name )		769940	0					
ANR	769958	Callee	usage		769940	0					
ANR	769959	Identifier	usage		769940	0					
ANR	769960	ArgumentList	my_name		769940	1					
ANR	769961	Argument	my_name		769940	0					
ANR	769962	Identifier	my_name		769940	0					
ANR	769963	ReturnType	void		769940	1					
ANR	769964	Identifier	ambiguous		769940	2					
ANR	769965	ParameterList	const char * opt		769940	3					
ANR	769966	Parameter	const char * opt	478:11:11361:11375	769940	0	True				
ANR	769967	ParameterType	const char *		769940	0					
ANR	769968	Identifier	opt		769940	1					
ANR	769969	CFGEntryNode	ENTRY		769940		True				
ANR	769970	CFGExitNode	EXIT		769940		True				
ANR	769971	Symbol	my_name		769940						
ANR	769972	Symbol	opt		769940						
ANR	769973	Symbol	stderr		769940						
ANR	769974	Function	another	485:0:11466:11598							
ANR	769975	FunctionDef	another (const char * opt)		769974	0					
ANR	769976	CompoundStatement		487:0:11498:11598	769974	0					
ANR	769977	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' requires another argument\\n"" , my_name , opt )"	488:1:11501:11576	769974	0	True				
ANR	769978	CallExpression	"fprintf ( stderr , ""%s: '%s' requires another argument\\n"" , my_name , opt )"		769974	0					
ANR	769979	Callee	fprintf		769974	0					
ANR	769980	Identifier	fprintf		769974	0					
ANR	769981	ArgumentList	stderr		769974	1					
ANR	769982	Argument	stderr		769974	0					
ANR	769983	Identifier	stderr		769974	0					
ANR	769984	Argument	"""%s: '%s' requires another argument\\n"""		769974	1					
ANR	769985	PrimaryExpression	"""%s: '%s' requires another argument\\n"""		769974	0					
ANR	769986	Argument	my_name		769974	2					
ANR	769987	Identifier	my_name		769974	0					
ANR	769988	Argument	opt		769974	3					
ANR	769989	Identifier	opt		769974	0					
ANR	769990	ExpressionStatement	usage ( my_name )	490:1:11580:11596	769974	1	True				
ANR	769991	CallExpression	usage ( my_name )		769974	0					
ANR	769992	Callee	usage		769974	0					
ANR	769993	Identifier	usage		769974	0					
ANR	769994	ArgumentList	my_name		769974	1					
ANR	769995	Argument	my_name		769974	0					
ANR	769996	Identifier	my_name		769974	0					
ANR	769997	ReturnType	void		769974	1					
ANR	769998	Identifier	another		769974	2					
ANR	769999	ParameterList	const char * opt		769974	3					
ANR	770000	Parameter	const char * opt	486:9:11480:11494	769974	0	True				
ANR	770001	ParameterType	const char *		769974	0					
ANR	770002	Identifier	opt		769974	1					
ANR	770003	CFGEntryNode	ENTRY		769974		True				
ANR	770004	CFGExitNode	EXIT		769974		True				
ANR	770005	Symbol	my_name		769974						
ANR	770006	Symbol	opt		769974						
ANR	770007	Symbol	stderr		769974						
ANR	770008	Function	parseCOpt	494:0:11602:12907							
ANR	770009	FunctionDef	"parseCOpt (char * opt , char * arg)"		770008	0					
ANR	770010	CompoundStatement		496:0:11641:12907	770008	0					
ANR	770011	IdentifierDeclStatement	"char _cpath [ ] = ""-classad"" ;"	502:1:11870:11896	770008	0	True				
ANR	770012	IdentifierDecl	"_cpath [ ] = ""-classad"""		770008	0					
ANR	770013	IdentifierDeclType	char [ ]		770008	0					
ANR	770014	Identifier	_cpath		770008	1					
ANR	770015	AssignmentExpression	"_cpath [ ] = ""-classad"""		770008	2		=			
ANR	770016	Identifier	_cpath		770008	0					
ANR	770017	PrimaryExpression	"""-classad"""		770008	1					
ANR	770018	IdentifierDeclStatement	"char _clust [ ] = ""-cluster"" ;"	503:1:11899:11925	770008	1	True				
ANR	770019	IdentifierDecl	"_clust [ ] = ""-cluster"""		770008	0					
ANR	770020	IdentifierDeclType	char [ ]		770008	0					
ANR	770021	Identifier	_clust		770008	1					
ANR	770022	AssignmentExpression	"_clust [ ] = ""-cluster"""		770008	2		=			
ANR	770023	Identifier	_clust		770008	0					
ANR	770024	PrimaryExpression	"""-cluster"""		770008	1					
ANR	770025	IdentifierDeclStatement	char * parse_target = NULL ;	504:1:11928:11953	770008	2	True				
ANR	770026	IdentifierDecl	* parse_target = NULL		770008	0					
ANR	770027	IdentifierDeclType	char *		770008	0					
ANR	770028	Identifier	parse_target		770008	1					
ANR	770029	AssignmentExpression	* parse_target = NULL		770008	2		=			
ANR	770030	Identifier	NULL		770008	0					
ANR	770031	Identifier	NULL		770008	1					
ANR	770032	ExpressionStatement	assert ( opt [ 0 ] == '-' && opt [ 1 ] == 'c' )	507:1:12014:12054	770008	3	True				
ANR	770033	CallExpression	assert ( opt [ 0 ] == '-' && opt [ 1 ] == 'c' )		770008	0					
ANR	770034	Callee	assert		770008	0					
ANR	770035	Identifier	assert		770008	0					
ANR	770036	ArgumentList	opt [ 0 ] == '-' && opt [ 1 ] == 'c'		770008	1					
ANR	770037	Argument	opt [ 0 ] == '-' && opt [ 1 ] == 'c'		770008	0					
ANR	770038	AndExpression	opt [ 0 ] == '-' && opt [ 1 ] == 'c'		770008	0		&&			
ANR	770039	EqualityExpression	opt [ 0 ] == '-'		770008	0		==			
ANR	770040	ArrayIndexing	opt [ 0 ]		770008	0					
ANR	770041	Identifier	opt		770008	0					
ANR	770042	PrimaryExpression	0		770008	1					
ANR	770043	PrimaryExpression	'-'		770008	1					
ANR	770044	EqualityExpression	opt [ 1 ] == 'c'		770008	1		==			
ANR	770045	ArrayIndexing	opt [ 1 ]		770008	0					
ANR	770046	Identifier	opt		770008	0					
ANR	770047	PrimaryExpression	1		770008	1					
ANR	770048	PrimaryExpression	'c'		770008	1					
ANR	770049	IfStatement	if ( cmd == CA_ACTIVATE_CLAIM )		770008	4					
ANR	770050	Condition	cmd == CA_ACTIVATE_CLAIM	509:5:12064:12087	770008	0	True				
ANR	770051	EqualityExpression	cmd == CA_ACTIVATE_CLAIM		770008	0		==			
ANR	770052	Identifier	cmd		770008	0					
ANR	770053	Identifier	CA_ACTIVATE_CLAIM		770008	1					
ANR	770054	CompoundStatement		14:32:449:449	770008	1					
ANR	770055	IfStatement	if ( ! ( opt [ 2 ] && opt [ 3 ] ) )		770008	0					
ANR	770056	Condition	! ( opt [ 2 ] && opt [ 3 ] )	510:6:12099:12118	770008	0	True				
ANR	770057	UnaryOperationExpression	! ( opt [ 2 ] && opt [ 3 ] )		770008	0					
ANR	770058	UnaryOperator	!		770008	0					
ANR	770059	AndExpression	opt [ 2 ] && opt [ 3 ]		770008	1		&&			
ANR	770060	ArrayIndexing	opt [ 2 ]		770008	0					
ANR	770061	Identifier	opt		770008	0					
ANR	770062	PrimaryExpression	2		770008	1					
ANR	770063	ArrayIndexing	opt [ 3 ]		770008	1					
ANR	770064	Identifier	opt		770008	0					
ANR	770065	PrimaryExpression	3		770008	1					
ANR	770066	CompoundStatement		15:29:480:480	770008	1					
ANR	770067	ExpressionStatement	ambiguous ( opt )	511:3:12127:12143	770008	0	True				
ANR	770068	CallExpression	ambiguous ( opt )		770008	0					
ANR	770069	Callee	ambiguous		770008	0					
ANR	770070	Identifier	ambiguous		770008	0					
ANR	770071	ArgumentList	opt		770008	1					
ANR	770072	Argument	opt		770008	0					
ANR	770073	Identifier	opt		770008	0					
ANR	770074	IfStatement	if ( opt [ 2 ] != 'l' )		770008	1					
ANR	770075	Condition	opt [ 2 ] != 'l'	513:6:12155:12167	770008	0	True				
ANR	770076	EqualityExpression	opt [ 2 ] != 'l'		770008	0		!=			
ANR	770077	ArrayIndexing	opt [ 2 ]		770008	0					
ANR	770078	Identifier	opt		770008	0					
ANR	770079	PrimaryExpression	2		770008	1					
ANR	770080	PrimaryExpression	'l'		770008	1					
ANR	770081	CompoundStatement		18:22:529:529	770008	1					
ANR	770082	ExpressionStatement	invalid ( opt )	514:3:12176:12190	770008	0	True				
ANR	770083	CallExpression	invalid ( opt )		770008	0					
ANR	770084	Callee	invalid		770008	0					
ANR	770085	Identifier	invalid		770008	0					
ANR	770086	ArgumentList	opt		770008	1					
ANR	770087	Argument	opt		770008	0					
ANR	770088	Identifier	opt		770008	0					
ANR	770089	SwitchStatement	switch ( opt [ 3 ] )		770008	2					
ANR	770090	Condition	opt [ 3 ]	516:10:12206:12211	770008	0	True				
ANR	770091	ArrayIndexing	opt [ 3 ]		770008	0					
ANR	770092	Identifier	opt		770008	0					
ANR	770093	PrimaryExpression	3		770008	1					
ANR	770094	CompoundStatement		21:19:573:573	770008	1					
ANR	770095	Label	case 'a' :	517:2:12219:12227	770008	0	True				
ANR	770096	IfStatement	"if ( strncmp ( _cpath , opt , strlen ( opt ) ) )"		770008	1					
ANR	770097	Condition	"strncmp ( _cpath , opt , strlen ( opt ) )"	518:7:12236:12268	770008	0	True				
ANR	770098	CallExpression	"strncmp ( _cpath , opt , strlen ( opt ) )"		770008	0					
ANR	770099	Callee	strncmp		770008	0					
ANR	770100	Identifier	strncmp		770008	0					
ANR	770101	ArgumentList	_cpath		770008	1					
ANR	770102	Argument	_cpath		770008	0					
ANR	770103	Identifier	_cpath		770008	0					
ANR	770104	Argument	opt		770008	1					
ANR	770105	Identifier	opt		770008	0					
ANR	770106	Argument	strlen ( opt )		770008	2					
ANR	770107	CallExpression	strlen ( opt )		770008	0					
ANR	770108	Callee	strlen		770008	0					
ANR	770109	Identifier	strlen		770008	0					
ANR	770110	ArgumentList	opt		770008	1					
ANR	770111	Argument	opt		770008	0					
ANR	770112	Identifier	opt		770008	0					
ANR	770113	CompoundStatement		23:43:630:630	770008	1					
ANR	770114	ExpressionStatement	invalid ( opt )	519:4:12278:12292	770008	0	True				
ANR	770115	CallExpression	invalid ( opt )		770008	0					
ANR	770116	Callee	invalid		770008	0					
ANR	770117	Identifier	invalid		770008	0					
ANR	770118	ArgumentList	opt		770008	1					
ANR	770119	Argument	opt		770008	0					
ANR	770120	Identifier	opt		770008	0					
ANR	770121	ExpressionStatement	parse_target = _cpath	521:3:12303:12324	770008	2	True				
ANR	770122	AssignmentExpression	parse_target = _cpath		770008	0		=			
ANR	770123	Identifier	parse_target		770008	0					
ANR	770124	Identifier	_cpath		770008	1					
ANR	770125	BreakStatement	break ;	522:3:12329:12334	770008	3	True				
ANR	770126	Label	case 'u' :	524:2:12339:12347	770008	4	True				
ANR	770127	IfStatement	"if ( strncmp ( _clust , opt , strlen ( opt ) ) )"		770008	5					
ANR	770128	Condition	"strncmp ( _clust , opt , strlen ( opt ) )"	525:7:12356:12388	770008	0	True				
ANR	770129	CallExpression	"strncmp ( _clust , opt , strlen ( opt ) )"		770008	0					
ANR	770130	Callee	strncmp		770008	0					
ANR	770131	Identifier	strncmp		770008	0					
ANR	770132	ArgumentList	_clust		770008	1					
ANR	770133	Argument	_clust		770008	0					
ANR	770134	Identifier	_clust		770008	0					
ANR	770135	Argument	opt		770008	1					
ANR	770136	Identifier	opt		770008	0					
ANR	770137	Argument	strlen ( opt )		770008	2					
ANR	770138	CallExpression	strlen ( opt )		770008	0					
ANR	770139	Callee	strlen		770008	0					
ANR	770140	Identifier	strlen		770008	0					
ANR	770141	ArgumentList	opt		770008	1					
ANR	770142	Argument	opt		770008	0					
ANR	770143	Identifier	opt		770008	0					
ANR	770144	CompoundStatement		30:43:750:750	770008	1					
ANR	770145	ExpressionStatement	invalid ( opt )	526:4:12398:12412	770008	0	True				
ANR	770146	CallExpression	invalid ( opt )		770008	0					
ANR	770147	Callee	invalid		770008	0					
ANR	770148	Identifier	invalid		770008	0					
ANR	770149	ArgumentList	opt		770008	1					
ANR	770150	Argument	opt		770008	0					
ANR	770151	Identifier	opt		770008	0					
ANR	770152	ExpressionStatement	parse_target = _clust	528:3:12423:12444	770008	6	True				
ANR	770153	AssignmentExpression	parse_target = _clust		770008	0		=			
ANR	770154	Identifier	parse_target		770008	0					
ANR	770155	Identifier	_clust		770008	1					
ANR	770156	BreakStatement	break ;	529:3:12449:12454	770008	7	True				
ANR	770157	Label	default :	531:2:12459:12466	770008	8	True				
ANR	770158	Identifier	default		770008	0					
ANR	770159	ExpressionStatement	invalid ( opt )	532:3:12471:12485	770008	9	True				
ANR	770160	CallExpression	invalid ( opt )		770008	0					
ANR	770161	Callee	invalid		770008	0					
ANR	770162	Identifier	invalid		770008	0					
ANR	770163	ArgumentList	opt		770008	1					
ANR	770164	Argument	opt		770008	0					
ANR	770165	Identifier	opt		770008	0					
ANR	770166	BreakStatement	break ;	533:3:12490:12495	770008	10	True				
ANR	770167	ElseStatement	else		770008	0					
ANR	770168	CompoundStatement		40:8:867:867	770008	0					
ANR	770169	IfStatement	"if ( strncmp ( _cpath , opt , strlen ( opt ) ) )"		770008	0					
ANR	770170	Condition	"strncmp ( _cpath , opt , strlen ( opt ) )"	536:6:12518:12550	770008	0	True				
ANR	770171	CallExpression	"strncmp ( _cpath , opt , strlen ( opt ) )"		770008	0					
ANR	770172	Callee	strncmp		770008	0					
ANR	770173	Identifier	strncmp		770008	0					
ANR	770174	ArgumentList	_cpath		770008	1					
ANR	770175	Argument	_cpath		770008	0					
ANR	770176	Identifier	_cpath		770008	0					
ANR	770177	Argument	opt		770008	1					
ANR	770178	Identifier	opt		770008	0					
ANR	770179	Argument	strlen ( opt )		770008	2					
ANR	770180	CallExpression	strlen ( opt )		770008	0					
ANR	770181	Callee	strlen		770008	0					
ANR	770182	Identifier	strlen		770008	0					
ANR	770183	ArgumentList	opt		770008	1					
ANR	770184	Argument	opt		770008	0					
ANR	770185	Identifier	opt		770008	0					
ANR	770186	CompoundStatement		41:42:912:912	770008	1					
ANR	770187	ExpressionStatement	invalid ( opt )	537:3:12559:12573	770008	0	True				
ANR	770188	CallExpression	invalid ( opt )		770008	0					
ANR	770189	Callee	invalid		770008	0					
ANR	770190	Identifier	invalid		770008	0					
ANR	770191	ArgumentList	opt		770008	1					
ANR	770192	Argument	opt		770008	0					
ANR	770193	Identifier	opt		770008	0					
ANR	770194	ExpressionStatement	parse_target = _cpath	539:2:12581:12602	770008	1	True				
ANR	770195	AssignmentExpression	parse_target = _cpath		770008	0		=			
ANR	770196	Identifier	parse_target		770008	0					
ANR	770197	Identifier	_cpath		770008	1					
ANR	770198	IfStatement	if ( ! arg )		770008	5					
ANR	770199	Condition	! arg	543:5:12648:12652	770008	0	True				
ANR	770200	UnaryOperationExpression	! arg		770008	0					
ANR	770201	UnaryOperator	!		770008	0					
ANR	770202	Identifier	arg		770008	1					
ANR	770203	CompoundStatement		48:13:1014:1014	770008	1					
ANR	770204	ExpressionStatement	another ( parse_target )	544:2:12660:12683	770008	0	True				
ANR	770205	CallExpression	another ( parse_target )		770008	0					
ANR	770206	Callee	another		770008	0					
ANR	770207	Identifier	another		770008	0					
ANR	770208	ArgumentList	parse_target		770008	1					
ANR	770209	Argument	parse_target		770008	0					
ANR	770210	Identifier	parse_target		770008	0					
ANR	770211	IfStatement	if ( parse_target == _clust )		770008	6					
ANR	770212	Condition	parse_target == _clust	546:5:12693:12714	770008	0	True				
ANR	770213	EqualityExpression	parse_target == _clust		770008	0		==			
ANR	770214	Identifier	parse_target		770008	0					
ANR	770215	Identifier	_clust		770008	1					
ANR	770216	CompoundStatement		51:30:1076:1076	770008	1					
ANR	770217	ExpressionStatement	cluster_id = atoi ( arg )	549:2:12836:12860	770008	0	True				
ANR	770218	AssignmentExpression	cluster_id = atoi ( arg )		770008	0		=			
ANR	770219	Identifier	cluster_id		770008	0					
ANR	770220	CallExpression	atoi ( arg )		770008	1					
ANR	770221	Callee	atoi		770008	0					
ANR	770222	Identifier	atoi		770008	0					
ANR	770223	ArgumentList	arg		770008	1					
ANR	770224	Argument	arg		770008	0					
ANR	770225	Identifier	arg		770008	0					
ANR	770226	ElseStatement	else		770008	0					
ANR	770227	CompoundStatement		55:8:1228:1228	770008	0					
ANR	770228	ExpressionStatement	classad_path = strdup ( arg )	551:2:12874:12902	770008	0	True				
ANR	770229	AssignmentExpression	classad_path = strdup ( arg )		770008	0		=			
ANR	770230	Identifier	classad_path		770008	0					
ANR	770231	CallExpression	strdup ( arg )		770008	1					
ANR	770232	Callee	strdup		770008	0					
ANR	770233	Identifier	strdup		770008	0					
ANR	770234	ArgumentList	arg		770008	1					
ANR	770235	Argument	arg		770008	0					
ANR	770236	Identifier	arg		770008	0					
ANR	770237	ReturnType	void		770008	1					
ANR	770238	Identifier	parseCOpt		770008	2					
ANR	770239	ParameterList	"char * opt , char * arg"		770008	3					
ANR	770240	Parameter	char * opt	495:11:11618:11626	770008	0	True				
ANR	770241	ParameterType	char *		770008	0					
ANR	770242	Identifier	opt		770008	1					
ANR	770243	Parameter	char * arg	495:22:11629:11637	770008	1	True				
ANR	770244	ParameterType	char *		770008	0					
ANR	770245	Identifier	arg		770008	1					
ANR	770246	CFGEntryNode	ENTRY		770008		True				
ANR	770247	CFGExitNode	EXIT		770008		True				
ANR	770248	Symbol	atoi		770008						
ANR	770249	Symbol	CA_ACTIVATE_CLAIM		770008						
ANR	770250	Symbol	NULL		770008						
ANR	770251	Symbol	_cpath		770008						
ANR	770252	Symbol	parse_target		770008						
ANR	770253	Symbol	_clust		770008						
ANR	770254	Symbol	strncmp		770008						
ANR	770255	Symbol	strlen		770008						
ANR	770256	Symbol	opt		770008						
ANR	770257	Symbol	cluster_id		770008						
ANR	770258	Symbol	arg		770008						
ANR	770259	Symbol	cmd		770008						
ANR	770260	Symbol	strdup		770008						
ANR	770261	Symbol	* opt		770008						
ANR	770262	Symbol	classad_path		770008						
ANR	770263	Function	parsePOpt	556:0:12911:14123							
ANR	770264	FunctionDef	"parsePOpt (char * opt , char * arg)"		770263	0					
ANR	770265	CompoundStatement		558:0:12950:14123	770263	0					
ANR	770266	IdentifierDeclStatement	"char _pool [ ] = ""-pool"" ;"	564:1:13173:13195	770263	0	True				
ANR	770267	IdentifierDecl	"_pool [ ] = ""-pool"""		770263	0					
ANR	770268	IdentifierDeclType	char [ ]		770263	0					
ANR	770269	Identifier	_pool		770263	1					
ANR	770270	AssignmentExpression	"_pool [ ] = ""-pool"""		770263	2		=			
ANR	770271	Identifier	_pool		770263	0					
ANR	770272	PrimaryExpression	"""-pool"""		770263	1					
ANR	770273	IdentifierDeclStatement	"char _proc [ ] = ""-proc"" ;"	565:1:13198:13220	770263	1	True				
ANR	770274	IdentifierDecl	"_proc [ ] = ""-proc"""		770263	0					
ANR	770275	IdentifierDeclType	char [ ]		770263	0					
ANR	770276	Identifier	_proc		770263	1					
ANR	770277	AssignmentExpression	"_proc [ ] = ""-proc"""		770263	2		=			
ANR	770278	Identifier	_proc		770263	0					
ANR	770279	PrimaryExpression	"""-proc"""		770263	1					
ANR	770280	IdentifierDeclStatement	char * parse_target = NULL ;	566:1:13223:13248	770263	2	True				
ANR	770281	IdentifierDecl	* parse_target = NULL		770263	0					
ANR	770282	IdentifierDeclType	char *		770263	0					
ANR	770283	Identifier	parse_target		770263	1					
ANR	770284	AssignmentExpression	* parse_target = NULL		770263	2		=			
ANR	770285	Identifier	NULL		770263	0					
ANR	770286	Identifier	NULL		770263	1					
ANR	770287	ExpressionStatement	assert ( opt [ 0 ] == '-' && opt [ 1 ] == 'p' )	569:1:13309:13349	770263	3	True				
ANR	770288	CallExpression	assert ( opt [ 0 ] == '-' && opt [ 1 ] == 'p' )		770263	0					
ANR	770289	Callee	assert		770263	0					
ANR	770290	Identifier	assert		770263	0					
ANR	770291	ArgumentList	opt [ 0 ] == '-' && opt [ 1 ] == 'p'		770263	1					
ANR	770292	Argument	opt [ 0 ] == '-' && opt [ 1 ] == 'p'		770263	0					
ANR	770293	AndExpression	opt [ 0 ] == '-' && opt [ 1 ] == 'p'		770263	0		&&			
ANR	770294	EqualityExpression	opt [ 0 ] == '-'		770263	0		==			
ANR	770295	ArrayIndexing	opt [ 0 ]		770263	0					
ANR	770296	Identifier	opt		770263	0					
ANR	770297	PrimaryExpression	0		770263	1					
ANR	770298	PrimaryExpression	'-'		770263	1					
ANR	770299	EqualityExpression	opt [ 1 ] == 'p'		770263	1		==			
ANR	770300	ArrayIndexing	opt [ 1 ]		770263	0					
ANR	770301	Identifier	opt		770263	0					
ANR	770302	PrimaryExpression	1		770263	1					
ANR	770303	PrimaryExpression	'p'		770263	1					
ANR	770304	IfStatement	if ( cmd == CA_ACTIVATE_CLAIM )		770263	4					
ANR	770305	Condition	cmd == CA_ACTIVATE_CLAIM	571:5:13359:13382	770263	0	True				
ANR	770306	EqualityExpression	cmd == CA_ACTIVATE_CLAIM		770263	0		==			
ANR	770307	Identifier	cmd		770263	0					
ANR	770308	Identifier	CA_ACTIVATE_CLAIM		770263	1					
ANR	770309	CompoundStatement		14:32:435:435	770263	1					
ANR	770310	IfStatement	if ( ! opt [ 2 ] )		770263	0					
ANR	770311	Condition	! opt [ 2 ]	572:6:13394:13401	770263	0	True				
ANR	770312	UnaryOperationExpression	! opt [ 2 ]		770263	0					
ANR	770313	UnaryOperator	!		770263	0					
ANR	770314	ArrayIndexing	opt [ 2 ]		770263	1					
ANR	770315	Identifier	opt		770263	0					
ANR	770316	PrimaryExpression	2		770263	1					
ANR	770317	CompoundStatement		15:17:454:454	770263	1					
ANR	770318	ExpressionStatement	ambiguous ( opt )	573:3:13410:13426	770263	0	True				
ANR	770319	CallExpression	ambiguous ( opt )		770263	0					
ANR	770320	Callee	ambiguous		770263	0					
ANR	770321	Identifier	ambiguous		770263	0					
ANR	770322	ArgumentList	opt		770263	1					
ANR	770323	Argument	opt		770263	0					
ANR	770324	Identifier	opt		770263	0					
ANR	770325	SwitchStatement	switch ( opt [ 2 ] )		770263	1					
ANR	770326	Condition	opt [ 2 ]	575:10:13442:13447	770263	0	True				
ANR	770327	ArrayIndexing	opt [ 2 ]		770263	0					
ANR	770328	Identifier	opt		770263	0					
ANR	770329	PrimaryExpression	2		770263	1					
ANR	770330	CompoundStatement		18:19:500:500	770263	1					
ANR	770331	Label	case 'o' :	576:2:13455:13463	770263	0	True				
ANR	770332	IfStatement	"if ( strncmp ( _pool , opt , strlen ( opt ) ) )"		770263	1					
ANR	770333	Condition	"strncmp ( _pool , opt , strlen ( opt ) )"	577:7:13472:13503	770263	0	True				
ANR	770334	CallExpression	"strncmp ( _pool , opt , strlen ( opt ) )"		770263	0					
ANR	770335	Callee	strncmp		770263	0					
ANR	770336	Identifier	strncmp		770263	0					
ANR	770337	ArgumentList	_pool		770263	1					
ANR	770338	Argument	_pool		770263	0					
ANR	770339	Identifier	_pool		770263	0					
ANR	770340	Argument	opt		770263	1					
ANR	770341	Identifier	opt		770263	0					
ANR	770342	Argument	strlen ( opt )		770263	2					
ANR	770343	CallExpression	strlen ( opt )		770263	0					
ANR	770344	Callee	strlen		770263	0					
ANR	770345	Identifier	strlen		770263	0					
ANR	770346	ArgumentList	opt		770263	1					
ANR	770347	Argument	opt		770263	0					
ANR	770348	Identifier	opt		770263	0					
ANR	770349	CompoundStatement		20:42:556:556	770263	1					
ANR	770350	ExpressionStatement	invalid ( opt )	578:4:13513:13527	770263	0	True				
ANR	770351	CallExpression	invalid ( opt )		770263	0					
ANR	770352	Callee	invalid		770263	0					
ANR	770353	Identifier	invalid		770263	0					
ANR	770354	ArgumentList	opt		770263	1					
ANR	770355	Argument	opt		770263	0					
ANR	770356	Identifier	opt		770263	0					
ANR	770357	ExpressionStatement	parse_target = _pool	580:3:13538:13558	770263	2	True				
ANR	770358	AssignmentExpression	parse_target = _pool		770263	0		=			
ANR	770359	Identifier	parse_target		770263	0					
ANR	770360	Identifier	_pool		770263	1					
ANR	770361	BreakStatement	break ;	581:3:13563:13568	770263	3	True				
ANR	770362	Label	case 'r' :	583:2:13573:13581	770263	4	True				
ANR	770363	IfStatement	"if ( strncmp ( _proc , opt , strlen ( opt ) ) )"		770263	5					
ANR	770364	Condition	"strncmp ( _proc , opt , strlen ( opt ) )"	584:7:13590:13621	770263	0	True				
ANR	770365	CallExpression	"strncmp ( _proc , opt , strlen ( opt ) )"		770263	0					
ANR	770366	Callee	strncmp		770263	0					
ANR	770367	Identifier	strncmp		770263	0					
ANR	770368	ArgumentList	_proc		770263	1					
ANR	770369	Argument	_proc		770263	0					
ANR	770370	Identifier	_proc		770263	0					
ANR	770371	Argument	opt		770263	1					
ANR	770372	Identifier	opt		770263	0					
ANR	770373	Argument	strlen ( opt )		770263	2					
ANR	770374	CallExpression	strlen ( opt )		770263	0					
ANR	770375	Callee	strlen		770263	0					
ANR	770376	Identifier	strlen		770263	0					
ANR	770377	ArgumentList	opt		770263	1					
ANR	770378	Argument	opt		770263	0					
ANR	770379	Identifier	opt		770263	0					
ANR	770380	CompoundStatement		27:42:674:674	770263	1					
ANR	770381	ExpressionStatement	invalid ( opt )	585:4:13631:13645	770263	0	True				
ANR	770382	CallExpression	invalid ( opt )		770263	0					
ANR	770383	Callee	invalid		770263	0					
ANR	770384	Identifier	invalid		770263	0					
ANR	770385	ArgumentList	opt		770263	1					
ANR	770386	Argument	opt		770263	0					
ANR	770387	Identifier	opt		770263	0					
ANR	770388	ExpressionStatement	parse_target = _proc	587:3:13656:13676	770263	6	True				
ANR	770389	AssignmentExpression	parse_target = _proc		770263	0		=			
ANR	770390	Identifier	parse_target		770263	0					
ANR	770391	Identifier	_proc		770263	1					
ANR	770392	BreakStatement	break ;	588:3:13681:13686	770263	7	True				
ANR	770393	Label	default :	590:2:13691:13698	770263	8	True				
ANR	770394	Identifier	default		770263	0					
ANR	770395	ExpressionStatement	invalid ( opt )	591:3:13703:13717	770263	9	True				
ANR	770396	CallExpression	invalid ( opt )		770263	0					
ANR	770397	Callee	invalid		770263	0					
ANR	770398	Identifier	invalid		770263	0					
ANR	770399	ArgumentList	opt		770263	1					
ANR	770400	Argument	opt		770263	0					
ANR	770401	Identifier	opt		770263	0					
ANR	770402	BreakStatement	break ;	592:3:13722:13727	770263	10	True				
ANR	770403	ElseStatement	else		770263	0					
ANR	770404	CompoundStatement		37:8:790:790	770263	0					
ANR	770405	IfStatement	"if ( strncmp ( _pool , opt , strlen ( opt ) ) )"		770263	0					
ANR	770406	Condition	"strncmp ( _pool , opt , strlen ( opt ) )"	595:6:13750:13781	770263	0	True				
ANR	770407	CallExpression	"strncmp ( _pool , opt , strlen ( opt ) )"		770263	0					
ANR	770408	Callee	strncmp		770263	0					
ANR	770409	Identifier	strncmp		770263	0					
ANR	770410	ArgumentList	_pool		770263	1					
ANR	770411	Argument	_pool		770263	0					
ANR	770412	Identifier	_pool		770263	0					
ANR	770413	Argument	opt		770263	1					
ANR	770414	Identifier	opt		770263	0					
ANR	770415	Argument	strlen ( opt )		770263	2					
ANR	770416	CallExpression	strlen ( opt )		770263	0					
ANR	770417	Callee	strlen		770263	0					
ANR	770418	Identifier	strlen		770263	0					
ANR	770419	ArgumentList	opt		770263	1					
ANR	770420	Argument	opt		770263	0					
ANR	770421	Identifier	opt		770263	0					
ANR	770422	CompoundStatement		38:41:834:834	770263	1					
ANR	770423	ExpressionStatement	invalid ( opt )	596:3:13790:13804	770263	0	True				
ANR	770424	CallExpression	invalid ( opt )		770263	0					
ANR	770425	Callee	invalid		770263	0					
ANR	770426	Identifier	invalid		770263	0					
ANR	770427	ArgumentList	opt		770263	1					
ANR	770428	Argument	opt		770263	0					
ANR	770429	Identifier	opt		770263	0					
ANR	770430	ExpressionStatement	parse_target = _pool	598:2:13813:13833	770263	1	True				
ANR	770431	AssignmentExpression	parse_target = _pool		770263	0		=			
ANR	770432	Identifier	parse_target		770263	0					
ANR	770433	Identifier	_pool		770263	1					
ANR	770434	IfStatement	if ( ! arg )		770263	5					
ANR	770435	Condition	! arg	602:5:13879:13883	770263	0	True				
ANR	770436	UnaryOperationExpression	! arg		770263	0					
ANR	770437	UnaryOperator	!		770263	0					
ANR	770438	Identifier	arg		770263	1					
ANR	770439	CompoundStatement		45:13:936:936	770263	1					
ANR	770440	ExpressionStatement	another ( parse_target )	603:2:13891:13914	770263	0	True				
ANR	770441	CallExpression	another ( parse_target )		770263	0					
ANR	770442	Callee	another		770263	0					
ANR	770443	Identifier	another		770263	0					
ANR	770444	ArgumentList	parse_target		770263	1					
ANR	770445	Argument	parse_target		770263	0					
ANR	770446	Identifier	parse_target		770263	0					
ANR	770447	IfStatement	if ( parse_target == _pool )		770263	6					
ANR	770448	Condition	parse_target == _pool	606:5:13925:13945	770263	0	True				
ANR	770449	EqualityExpression	parse_target == _pool		770263	0		==			
ANR	770450	Identifier	parse_target		770263	0					
ANR	770451	Identifier	_pool		770263	1					
ANR	770452	CompoundStatement		49:29:998:998	770263	1					
ANR	770453	ExpressionStatement	pool = new DCCollector ( arg )	607:2:13953:13982	770263	0	True				
ANR	770454	AssignmentExpression	pool = new DCCollector ( arg )		770263	0		=			
ANR	770455	Identifier	pool		770263	0					
ANR	770456	Identifier	arg		770263	1					
ANR	770457	IfStatement	if ( ! pool -> addr ( ) )		770263	1					
ANR	770458	Condition	! pool -> addr ( )	608:6:13990:14003	770263	0	True				
ANR	770459	UnaryOperationExpression	! pool -> addr ( )		770263	0					
ANR	770460	UnaryOperator	!		770263	0					
ANR	770461	CallExpression	pool -> addr ( )		770263	1					
ANR	770462	Callee	pool -> addr		770263	0					
ANR	770463	PtrMemberAccess	pool -> addr		770263	0					
ANR	770464	Identifier	pool		770263	0					
ANR	770465	Identifier	addr		770263	1					
ANR	770466	ArgumentList			770263	1					
ANR	770467	CompoundStatement		51:23:1056:1056	770263	1					
ANR	770468	ExpressionStatement	"fprintf ( stderr , ""%s: %s\\n"" , my_name , pool -> error ( ) )"	609:3:14012:14065	770263	0	True				
ANR	770469	CallExpression	"fprintf ( stderr , ""%s: %s\\n"" , my_name , pool -> error ( ) )"		770263	0					
ANR	770470	Callee	fprintf		770263	0					
ANR	770471	Identifier	fprintf		770263	0					
ANR	770472	ArgumentList	stderr		770263	1					
ANR	770473	Argument	stderr		770263	0					
ANR	770474	Identifier	stderr		770263	0					
ANR	770475	Argument	"""%s: %s\\n"""		770263	1					
ANR	770476	PrimaryExpression	"""%s: %s\\n"""		770263	0					
ANR	770477	Argument	my_name		770263	2					
ANR	770478	Identifier	my_name		770263	0					
ANR	770479	Argument	pool -> error ( )		770263	3					
ANR	770480	CallExpression	pool -> error ( )		770263	0					
ANR	770481	Callee	pool -> error		770263	0					
ANR	770482	PtrMemberAccess	pool -> error		770263	0					
ANR	770483	Identifier	pool		770263	0					
ANR	770484	Identifier	error		770263	1					
ANR	770485	ArgumentList			770263	1					
ANR	770486	ExpressionStatement	exit ( 1 )	610:3:14070:14079	770263	1	True				
ANR	770487	CallExpression	exit ( 1 )		770263	0					
ANR	770488	Callee	exit		770263	0					
ANR	770489	Identifier	exit		770263	0					
ANR	770490	ArgumentList	1		770263	1					
ANR	770491	Argument	1		770263	0					
ANR	770492	PrimaryExpression	1		770263	0					
ANR	770493	ElseStatement	else		770263	0					
ANR	770494	CompoundStatement		55:8:1142:1142	770263	0					
ANR	770495	ExpressionStatement	proc_id = atoi ( arg )	613:2:14097:14118	770263	0	True				
ANR	770496	AssignmentExpression	proc_id = atoi ( arg )		770263	0		=			
ANR	770497	Identifier	proc_id		770263	0					
ANR	770498	CallExpression	atoi ( arg )		770263	1					
ANR	770499	Callee	atoi		770263	0					
ANR	770500	Identifier	atoi		770263	0					
ANR	770501	ArgumentList	arg		770263	1					
ANR	770502	Argument	arg		770263	0					
ANR	770503	Identifier	arg		770263	0					
ANR	770504	ReturnType	void		770263	1					
ANR	770505	Identifier	parsePOpt		770263	2					
ANR	770506	ParameterList	"char * opt , char * arg"		770263	3					
ANR	770507	Parameter	char * opt	557:11:12927:12935	770263	0	True				
ANR	770508	ParameterType	char *		770263	0					
ANR	770509	Identifier	opt		770263	1					
ANR	770510	Parameter	char * arg	557:22:12938:12946	770263	1	True				
ANR	770511	ParameterType	char *		770263	0					
ANR	770512	Identifier	arg		770263	1					
ANR	770513	CFGEntryNode	ENTRY		770263		True				
ANR	770514	CFGExitNode	EXIT		770263		True				
ANR	770515	Symbol	atoi		770263						
ANR	770516	Symbol	CA_ACTIVATE_CLAIM		770263						
ANR	770517	Symbol	NULL		770263						
ANR	770518	Symbol	pool		770263						
ANR	770519	Symbol	proc_id		770263						
ANR	770520	Symbol	parse_target		770263						
ANR	770521	Symbol	stderr		770263						
ANR	770522	Symbol	pool -> addr		770263						
ANR	770523	Symbol	strncmp		770263						
ANR	770524	Symbol	strlen		770263						
ANR	770525	Symbol	* pool		770263						
ANR	770526	Symbol	my_name		770263						
ANR	770527	Symbol	opt		770263						
ANR	770528	Symbol	_pool		770263						
ANR	770529	Symbol	arg		770263						
ANR	770530	Symbol	_proc		770263						
ANR	770531	Symbol	cmd		770263						
ANR	770532	Symbol	* opt		770263						
ANR	770533	Symbol	pool -> error		770263						
ANR	770534	DeclStmt									
ANR	770535	Decl							char	char * *	tmp
ANR	770536	DeclStmt									
ANR	770537	Decl							param_functions	param_functions *	p_funcs
ANR	770538	Function	printCmd	901:0:20092:21058							
ANR	770539	FunctionDef	printCmd (int command)		770538	0					
ANR	770540	CompoundStatement		903:0:20121:21058	770538	0					
ANR	770541	SwitchStatement	switch ( command )		770538	0					
ANR	770542	Condition	command	904:9:20132:20138	770538	0	True				
ANR	770543	Identifier	command		770538	0					
ANR	770544	CompoundStatement		2:19:20:20	770538	1					
ANR	770545	Label	case CA_REQUEST_CLAIM :	905:1:20145:20166	770538	0	True				
ANR	770546	Identifier	CA_REQUEST_CLAIM		770538	0					
ANR	770547	ExpressionStatement	"fprintf ( stderr , ""   request\\t\\tCreate a new COD claim\\n"" )"	906:2:20170:20229	770538	1	True				
ANR	770548	CallExpression	"fprintf ( stderr , ""   request\\t\\tCreate a new COD claim\\n"" )"		770538	0					
ANR	770549	Callee	fprintf		770538	0					
ANR	770550	Identifier	fprintf		770538	0					
ANR	770551	ArgumentList	stderr		770538	1					
ANR	770552	Argument	stderr		770538	0					
ANR	770553	Identifier	stderr		770538	0					
ANR	770554	Argument	"""   request\\t\\tCreate a new COD claim\\n"""		770538	1					
ANR	770555	PrimaryExpression	"""   request\\t\\tCreate a new COD claim\\n"""		770538	0					
ANR	770556	BreakStatement	break ;	907:2:20233:20238	770538	2	True				
ANR	770557	Label	case CA_ACTIVATE_CLAIM :	908:1:20241:20263	770538	3	True				
ANR	770558	Identifier	CA_ACTIVATE_CLAIM		770538	0					
ANR	770559	ExpressionStatement	"fprintf ( stderr , ""   activate\\t\\tStart a job on a given claim\\n"" )"	909:2:20267:20339	770538	4	True				
ANR	770560	CallExpression	"fprintf ( stderr , ""   activate\\t\\tStart a job on a given claim\\n"" )"		770538	0					
ANR	770561	Callee	fprintf		770538	0					
ANR	770562	Identifier	fprintf		770538	0					
ANR	770563	ArgumentList	stderr		770538	1					
ANR	770564	Argument	stderr		770538	0					
ANR	770565	Identifier	stderr		770538	0					
ANR	770566	Argument	"""   activate\\t\\tStart a job on a given claim\\n"""		770538	1					
ANR	770567	PrimaryExpression	"""   activate\\t\\tStart a job on a given claim\\n"""		770538	0					
ANR	770568	BreakStatement	break ;	911:2:20343:20348	770538	5	True				
ANR	770569	Label	case CA_DEACTIVATE_CLAIM :	912:1:20351:20375	770538	6	True				
ANR	770570	Identifier	CA_DEACTIVATE_CLAIM		770538	0					
ANR	770571	Statement	fprintf	913:2:20379:20385	770538	7	True				
ANR	770572	Statement	(	913:9:20386:20386	770538	8	True				
ANR	770573	Statement	stderr	913:11:20388:20393	770538	9	True				
ANR	770574	Statement	","	913:17:20394:20394	770538	10	True				
ANR	770575	Statement	"""   deactivate\\t\\tKill the current job, but """	913:19:20396:20440	770538	11	True				
ANR	770576	Statement	"""keep the claim\\n"""	914:5:20447:20464	770538	12	True				
ANR	770577	Statement	)	914:24:20466:20466	770538	13	True				
ANR	770578	ExpressionStatement		914:25:20467:20467	770538	14	True				
ANR	770579	BreakStatement	break ;	915:2:20471:20476	770538	15	True				
ANR	770580	Label	case CA_RELEASE_CLAIM :	916:1:20479:20500	770538	16	True				
ANR	770581	Identifier	CA_RELEASE_CLAIM		770538	0					
ANR	770582	Statement	fprintf	917:2:20504:20510	770538	17	True				
ANR	770583	Statement	(	917:9:20511:20511	770538	18	True				
ANR	770584	Statement	stderr	917:11:20513:20518	770538	19	True				
ANR	770585	Statement	","	917:17:20519:20519	770538	20	True				
ANR	770586	Statement	"""   release\\t\\tRelinquish a claim, and kill """	917:19:20521:20565	770538	21	True				
ANR	770587	Statement	"""any running job\\n"""	918:5:20572:20590	770538	22	True				
ANR	770588	Statement	)	918:25:20592:20592	770538	23	True				
ANR	770589	ExpressionStatement		918:26:20593:20593	770538	24	True				
ANR	770590	BreakStatement	break ;	919:2:20598:20603	770538	25	True				
ANR	770591	Label	case CA_SUSPEND_CLAIM :	920:1:20606:20627	770538	26	True				
ANR	770592	Identifier	CA_SUSPEND_CLAIM		770538	0					
ANR	770593	ExpressionStatement	"fprintf ( stderr , ""   suspend\\t\\tSuspend the job on a given claim\\n"" )"	921:2:20631:20700	770538	27	True				
ANR	770594	CallExpression	"fprintf ( stderr , ""   suspend\\t\\tSuspend the job on a given claim\\n"" )"		770538	0					
ANR	770595	Callee	fprintf		770538	0					
ANR	770596	Identifier	fprintf		770538	0					
ANR	770597	ArgumentList	stderr		770538	1					
ANR	770598	Argument	stderr		770538	0					
ANR	770599	Identifier	stderr		770538	0					
ANR	770600	Argument	"""   suspend\\t\\tSuspend the job on a given claim\\n"""		770538	1					
ANR	770601	PrimaryExpression	"""   suspend\\t\\tSuspend the job on a given claim\\n"""		770538	0					
ANR	770602	BreakStatement	break ;	922:2:20705:20710	770538	28	True				
ANR	770603	Label	case CA_RESUME_CLAIM :	923:1:20713:20733	770538	29	True				
ANR	770604	Identifier	CA_RESUME_CLAIM		770538	0					
ANR	770605	ExpressionStatement	"fprintf ( stderr , ""   resume\\t\\tResume the job on a given claim\\n"" )"	924:2:20737:20804	770538	30	True				
ANR	770606	CallExpression	"fprintf ( stderr , ""   resume\\t\\tResume the job on a given claim\\n"" )"		770538	0					
ANR	770607	Callee	fprintf		770538	0					
ANR	770608	Identifier	fprintf		770538	0					
ANR	770609	ArgumentList	stderr		770538	1					
ANR	770610	Argument	stderr		770538	0					
ANR	770611	Identifier	stderr		770538	0					
ANR	770612	Argument	"""   resume\\t\\tResume the job on a given claim\\n"""		770538	1					
ANR	770613	PrimaryExpression	"""   resume\\t\\tResume the job on a given claim\\n"""		770538	0					
ANR	770614	BreakStatement	break ;	925:2:20809:20814	770538	31	True				
ANR	770615	Label	case CA_RENEW_LEASE_FOR_CLAIM :	926:1:20817:20846	770538	32	True				
ANR	770616	Identifier	CA_RENEW_LEASE_FOR_CLAIM		770538	0					
ANR	770617	ExpressionStatement	"fprintf ( stderr , ""   renew\\t\\tRenew the lease for this claim\\n"" )"	927:2:20850:20914	770538	33	True				
ANR	770618	CallExpression	"fprintf ( stderr , ""   renew\\t\\tRenew the lease for this claim\\n"" )"		770538	0					
ANR	770619	Callee	fprintf		770538	0					
ANR	770620	Identifier	fprintf		770538	0					
ANR	770621	ArgumentList	stderr		770538	1					
ANR	770622	Argument	stderr		770538	0					
ANR	770623	Identifier	stderr		770538	0					
ANR	770624	Argument	"""   renew\\t\\tRenew the lease for this claim\\n"""		770538	1					
ANR	770625	PrimaryExpression	"""   renew\\t\\tRenew the lease for this claim\\n"""		770538	0					
ANR	770626	BreakStatement	break ;	928:2:20918:20923	770538	34	True				
ANR	770627	Label	case DELEGATE_GSI_CRED_STARTD :	929:1:20926:20955	770538	35	True				
ANR	770628	Identifier	DELEGATE_GSI_CRED_STARTD		770538	0					
ANR	770629	Statement	fprintf	930:2:20959:20965	770538	36	True				
ANR	770630	Statement	(	930:9:20966:20966	770538	37	True				
ANR	770631	Statement	stderr	930:11:20968:20973	770538	38	True				
ANR	770632	Statement	","	930:17:20974:20974	770538	39	True				
ANR	770633	Statement	"""   delegate_proxy\\tDelegate an x509 proxy to the """	930:19:20976:21026	770538	40	True				
ANR	770634	Statement	"""claim\\n"""	931:5:21033:21041	770538	41	True				
ANR	770635	Statement	)	931:15:21043:21043	770538	42	True				
ANR	770636	ExpressionStatement		931:16:21044:21044	770538	43	True				
ANR	770637	BreakStatement	break ;	932:2:21048:21053	770538	44	True				
ANR	770638	ReturnType	void		770538	1					
ANR	770639	Identifier	printCmd		770538	2					
ANR	770640	ParameterList	int command		770538	3					
ANR	770641	Parameter	int command	902:10:20107:20117	770538	0	True				
ANR	770642	ParameterType	int		770538	0					
ANR	770643	Identifier	command		770538	1					
ANR	770644	CFGEntryNode	ENTRY		770538		True				
ANR	770645	CFGExitNode	EXIT		770538		True				
ANR	770646	Symbol	stderr		770538						
ANR	770647	Symbol	command		770538						
ANR	770648	Function	printFast	937:0:21064:21156							
ANR	770649	FunctionDef	printFast ()		770648	0					
ANR	770650	CompoundStatement		939:0:21088:21156	770648	0					
ANR	770651	ExpressionStatement	"fprintf ( stderr , ""   -fast\\t\\tQuickly kill any running job\\n"" )"	940:1:21091:21154	770648	0	True				
ANR	770652	CallExpression	"fprintf ( stderr , ""   -fast\\t\\tQuickly kill any running job\\n"" )"		770648	0					
ANR	770653	Callee	fprintf		770648	0					
ANR	770654	Identifier	fprintf		770648	0					
ANR	770655	ArgumentList	stderr		770648	1					
ANR	770656	Argument	stderr		770648	0					
ANR	770657	Identifier	stderr		770648	0					
ANR	770658	Argument	"""   -fast\\t\\tQuickly kill any running job\\n"""		770648	1					
ANR	770659	PrimaryExpression	"""   -fast\\t\\tQuickly kill any running job\\n"""		770648	0					
ANR	770660	ReturnType	void		770648	1					
ANR	770661	Identifier	printFast		770648	2					
ANR	770662	ParameterList			770648	3					
ANR	770663	CFGEntryNode	ENTRY		770648		True				
ANR	770664	CFGExitNode	EXIT		770648		True				
ANR	770665	Symbol	stderr		770648						
ANR	770666	Function	usage	944:0:21160:24757							
ANR	770667	FunctionDef	"usage (const char * str , int iExitCode)"		770666	0					
ANR	770668	CompoundStatement		946:0:21205:24757	770666	0					
ANR	770669	IdentifierDeclStatement	bool has_cmd_opt = true ;	947:1:21208:21231	770666	0	True				
ANR	770670	IdentifierDecl	has_cmd_opt = true		770666	0					
ANR	770671	IdentifierDeclType	bool		770666	0					
ANR	770672	Identifier	has_cmd_opt		770666	1					
ANR	770673	AssignmentExpression	has_cmd_opt = true		770666	2		=			
ANR	770674	Identifier	true		770666	0					
ANR	770675	Identifier	true		770666	1					
ANR	770676	IdentifierDeclStatement	bool needsID = true ;	948:1:21234:21253	770666	1	True				
ANR	770677	IdentifierDecl	needsID = true		770666	0					
ANR	770678	IdentifierDeclType	bool		770666	0					
ANR	770679	Identifier	needsID		770666	1					
ANR	770680	AssignmentExpression	needsID = true		770666	2		=			
ANR	770681	Identifier	true		770666	0					
ANR	770682	Identifier	true		770666	1					
ANR	770683	IfStatement	if ( ! str )		770666	2					
ANR	770684	Condition	! str	950:5:21261:21265	770666	0	True				
ANR	770685	UnaryOperationExpression	! str		770666	0					
ANR	770686	UnaryOperator	!		770666	0					
ANR	770687	Identifier	str		770666	1					
ANR	770688	CompoundStatement		5:13:63:63	770666	1					
ANR	770689	ExpressionStatement	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"	951:2:21273:21334	770666	0	True				
ANR	770690	CallExpression	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"		770666	0					
ANR	770691	Callee	fprintf		770666	0					
ANR	770692	Identifier	fprintf		770666	0					
ANR	770693	ArgumentList	stderr		770666	1					
ANR	770694	Argument	stderr		770666	0					
ANR	770695	Identifier	stderr		770666	0					
ANR	770696	Argument	"""Use \\""-help\\"" to see usage information\\n"""		770666	1					
ANR	770697	PrimaryExpression	"""Use \\""-help\\"" to see usage information\\n"""		770666	0					
ANR	770698	ExpressionStatement	exit ( 1 )	952:2:21338:21347	770666	1	True				
ANR	770699	CallExpression	exit ( 1 )		770666	0					
ANR	770700	Callee	exit		770666	0					
ANR	770701	Identifier	exit		770666	0					
ANR	770702	ArgumentList	1		770666	1					
ANR	770703	Argument	1		770666	0					
ANR	770704	PrimaryExpression	1		770666	0					
ANR	770705	IfStatement	if ( ! cmd )		770666	3					
ANR	770706	Condition	! cmd	954:5:21357:21360	770666	0	True				
ANR	770707	UnaryOperationExpression	! cmd		770666	0					
ANR	770708	UnaryOperator	!		770666	0					
ANR	770709	Identifier	cmd		770666	1					
ANR	770710	CompoundStatement		9:12:158:158	770666	1					
ANR	770711	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [command] [options]\\n"" , str )"	955:2:21368:21425	770666	0	True				
ANR	770712	CallExpression	"fprintf ( stderr , ""Usage: %s [command] [options]\\n"" , str )"		770666	0					
ANR	770713	Callee	fprintf		770666	0					
ANR	770714	Identifier	fprintf		770666	0					
ANR	770715	ArgumentList	stderr		770666	1					
ANR	770716	Argument	stderr		770666	0					
ANR	770717	Identifier	stderr		770666	0					
ANR	770718	Argument	"""Usage: %s [command] [options]\\n"""		770666	1					
ANR	770719	PrimaryExpression	"""Usage: %s [command] [options]\\n"""		770666	0					
ANR	770720	Argument	str		770666	2					
ANR	770721	Identifier	str		770666	0					
ANR	770722	ExpressionStatement	"fprintf ( stderr , ""Where [command] is one of:\\n"" )"	956:2:21429:21478	770666	1	True				
ANR	770723	CallExpression	"fprintf ( stderr , ""Where [command] is one of:\\n"" )"		770666	0					
ANR	770724	Callee	fprintf		770666	0					
ANR	770725	Identifier	fprintf		770666	0					
ANR	770726	ArgumentList	stderr		770666	1					
ANR	770727	Argument	stderr		770666	0					
ANR	770728	Identifier	stderr		770666	0					
ANR	770729	Argument	"""Where [command] is one of:\\n"""		770666	1					
ANR	770730	PrimaryExpression	"""Where [command] is one of:\\n"""		770666	0					
ANR	770731	ExpressionStatement	printCmd ( CA_REQUEST_CLAIM )	957:2:21482:21510	770666	2	True				
ANR	770732	CallExpression	printCmd ( CA_REQUEST_CLAIM )		770666	0					
ANR	770733	Callee	printCmd		770666	0					
ANR	770734	Identifier	printCmd		770666	0					
ANR	770735	ArgumentList	CA_REQUEST_CLAIM		770666	1					
ANR	770736	Argument	CA_REQUEST_CLAIM		770666	0					
ANR	770737	Identifier	CA_REQUEST_CLAIM		770666	0					
ANR	770738	ExpressionStatement	printCmd ( CA_RELEASE_CLAIM )	958:2:21514:21542	770666	3	True				
ANR	770739	CallExpression	printCmd ( CA_RELEASE_CLAIM )		770666	0					
ANR	770740	Callee	printCmd		770666	0					
ANR	770741	Identifier	printCmd		770666	0					
ANR	770742	ArgumentList	CA_RELEASE_CLAIM		770666	1					
ANR	770743	Argument	CA_RELEASE_CLAIM		770666	0					
ANR	770744	Identifier	CA_RELEASE_CLAIM		770666	0					
ANR	770745	ExpressionStatement	printCmd ( CA_ACTIVATE_CLAIM )	959:2:21546:21575	770666	4	True				
ANR	770746	CallExpression	printCmd ( CA_ACTIVATE_CLAIM )		770666	0					
ANR	770747	Callee	printCmd		770666	0					
ANR	770748	Identifier	printCmd		770666	0					
ANR	770749	ArgumentList	CA_ACTIVATE_CLAIM		770666	1					
ANR	770750	Argument	CA_ACTIVATE_CLAIM		770666	0					
ANR	770751	Identifier	CA_ACTIVATE_CLAIM		770666	0					
ANR	770752	ExpressionStatement	printCmd ( CA_DEACTIVATE_CLAIM )	960:2:21579:21610	770666	5	True				
ANR	770753	CallExpression	printCmd ( CA_DEACTIVATE_CLAIM )		770666	0					
ANR	770754	Callee	printCmd		770666	0					
ANR	770755	Identifier	printCmd		770666	0					
ANR	770756	ArgumentList	CA_DEACTIVATE_CLAIM		770666	1					
ANR	770757	Argument	CA_DEACTIVATE_CLAIM		770666	0					
ANR	770758	Identifier	CA_DEACTIVATE_CLAIM		770666	0					
ANR	770759	ExpressionStatement	printCmd ( CA_SUSPEND_CLAIM )	961:2:21614:21642	770666	6	True				
ANR	770760	CallExpression	printCmd ( CA_SUSPEND_CLAIM )		770666	0					
ANR	770761	Callee	printCmd		770666	0					
ANR	770762	Identifier	printCmd		770666	0					
ANR	770763	ArgumentList	CA_SUSPEND_CLAIM		770666	1					
ANR	770764	Argument	CA_SUSPEND_CLAIM		770666	0					
ANR	770765	Identifier	CA_SUSPEND_CLAIM		770666	0					
ANR	770766	ExpressionStatement	printCmd ( CA_RESUME_CLAIM )	962:2:21646:21673	770666	7	True				
ANR	770767	CallExpression	printCmd ( CA_RESUME_CLAIM )		770666	0					
ANR	770768	Callee	printCmd		770666	0					
ANR	770769	Identifier	printCmd		770666	0					
ANR	770770	ArgumentList	CA_RESUME_CLAIM		770666	1					
ANR	770771	Argument	CA_RESUME_CLAIM		770666	0					
ANR	770772	Identifier	CA_RESUME_CLAIM		770666	0					
ANR	770773	ExpressionStatement	printCmd ( CA_RENEW_LEASE_FOR_CLAIM )	963:2:21677:21713	770666	8	True				
ANR	770774	CallExpression	printCmd ( CA_RENEW_LEASE_FOR_CLAIM )		770666	0					
ANR	770775	Callee	printCmd		770666	0					
ANR	770776	Identifier	printCmd		770666	0					
ANR	770777	ArgumentList	CA_RENEW_LEASE_FOR_CLAIM		770666	1					
ANR	770778	Argument	CA_RENEW_LEASE_FOR_CLAIM		770666	0					
ANR	770779	Identifier	CA_RENEW_LEASE_FOR_CLAIM		770666	0					
ANR	770780	ExpressionStatement	printCmd ( DELEGATE_GSI_CRED_STARTD )	964:2:21717:21753	770666	9	True				
ANR	770781	CallExpression	printCmd ( DELEGATE_GSI_CRED_STARTD )		770666	0					
ANR	770782	Callee	printCmd		770666	0					
ANR	770783	Identifier	printCmd		770666	0					
ANR	770784	ArgumentList	DELEGATE_GSI_CRED_STARTD		770666	1					
ANR	770785	Argument	DELEGATE_GSI_CRED_STARTD		770666	0					
ANR	770786	Identifier	DELEGATE_GSI_CRED_STARTD		770666	0					
ANR	770787	Statement	fprintf	965:2:21757:21763	770666	10	True				
ANR	770788	Statement	(	965:9:21764:21764	770666	11	True				
ANR	770789	Statement	stderr	965:11:21766:21771	770666	12	True				
ANR	770790	Statement	","	965:17:21772:21772	770666	13	True				
ANR	770791	Statement	"""use %s [command] -help for more """	965:19:21774:21807	770666	14	True				
ANR	770792	Statement	"""information on a given command\\n"""	966:5:21814:21847	770666	15	True				
ANR	770793	Statement	","	966:39:21848:21848	770666	16	True				
ANR	770794	Statement	str	966:41:21850:21852	770666	17	True				
ANR	770795	Statement	)	966:45:21854:21854	770666	18	True				
ANR	770796	ExpressionStatement		966:46:21855:21855	770666	19	True				
ANR	770797	ExpressionStatement	exit ( 1 )	967:2:21860:21869	770666	20	True				
ANR	770798	CallExpression	exit ( 1 )		770666	0					
ANR	770799	Callee	exit		770666	0					
ANR	770800	Identifier	exit		770666	0					
ANR	770801	ArgumentList	1		770666	1					
ANR	770802	Argument	1		770666	0					
ANR	770803	PrimaryExpression	1		770666	0					
ANR	770804	SwitchStatement	switch ( cmd )		770666	4					
ANR	770805	Condition	cmd	970:9:21884:21886	770666	0	True				
ANR	770806	Identifier	cmd		770666	0					
ANR	770807	CompoundStatement		25:15:684:684	770666	1					
ANR	770808	Label	case CA_REQUEST_CLAIM :	971:1:21893:21914	770666	0	True				
ANR	770809	Identifier	CA_REQUEST_CLAIM		770666	0					
ANR	770810	ExpressionStatement	needsID = false	972:2:21918:21933	770666	1	True				
ANR	770811	AssignmentExpression	needsID = false		770666	0		=			
ANR	770812	Identifier	needsID		770666	0					
ANR	770813	Identifier	false		770666	1					
ANR	770814	BreakStatement	break ;	973:2:21937:21942	770666	2	True				
ANR	770815	Label	case CA_SUSPEND_CLAIM :	974:1:21945:21966	770666	3	True				
ANR	770816	Identifier	CA_SUSPEND_CLAIM		770666	0					
ANR	770817	Label	case CA_RESUME_CLAIM :	975:1:21969:21989	770666	4	True				
ANR	770818	Identifier	CA_RESUME_CLAIM		770666	0					
ANR	770819	ExpressionStatement	has_cmd_opt = false	976:2:21993:22012	770666	5	True				
ANR	770820	AssignmentExpression	has_cmd_opt = false		770666	0		=			
ANR	770821	Identifier	has_cmd_opt		770666	0					
ANR	770822	Identifier	false		770666	1					
ANR	770823	BreakStatement	break ;	977:2:22016:22021	770666	6	True				
ANR	770824	ExpressionStatement	"fprintf ( stderr , ""Usage: %s %s[target] [general-opts]%s\\n"" , str , needsID ? "" [claimid] "" : """" , has_cmd_opt ? "" [command-opts]"" : """" )"	980:1:22028:22168	770666	5	True				
ANR	770825	CallExpression	"fprintf ( stderr , ""Usage: %s %s[target] [general-opts]%s\\n"" , str , needsID ? "" [claimid] "" : """" , has_cmd_opt ? "" [command-opts]"" : """" )"		770666	0					
ANR	770826	Callee	fprintf		770666	0					
ANR	770827	Identifier	fprintf		770666	0					
ANR	770828	ArgumentList	stderr		770666	1					
ANR	770829	Argument	stderr		770666	0					
ANR	770830	Identifier	stderr		770666	0					
ANR	770831	Argument	"""Usage: %s %s[target] [general-opts]%s\\n"""		770666	1					
ANR	770832	PrimaryExpression	"""Usage: %s %s[target] [general-opts]%s\\n"""		770666	0					
ANR	770833	Argument	str		770666	2					
ANR	770834	Identifier	str		770666	0					
ANR	770835	Argument	"needsID ? "" [claimid] "" : """""		770666	3					
ANR	770836	ConditionalExpression	"needsID ? "" [claimid] "" : """""		770666	0					
ANR	770837	Condition	needsID		770666	0					
ANR	770838	Identifier	needsID		770666	0					
ANR	770839	PrimaryExpression	""" [claimid] """		770666	1					
ANR	770840	PrimaryExpression	""""""		770666	2					
ANR	770841	Argument	"has_cmd_opt ? "" [command-opts]"" : """""		770666	4					
ANR	770842	ConditionalExpression	"has_cmd_opt ? "" [command-opts]"" : """""		770666	0					
ANR	770843	Condition	has_cmd_opt		770666	0					
ANR	770844	Identifier	has_cmd_opt		770666	0					
ANR	770845	PrimaryExpression	""" [command-opts]"""		770666	1					
ANR	770846	PrimaryExpression	""""""		770666	2					
ANR	770847	ExpressionStatement	printCmd ( cmd )	984:1:22172:22187	770666	6	True				
ANR	770848	CallExpression	printCmd ( cmd )		770666	0					
ANR	770849	Callee	printCmd		770666	0					
ANR	770850	Identifier	printCmd		770666	0					
ANR	770851	ArgumentList	cmd		770666	1					
ANR	770852	Argument	cmd		770666	0					
ANR	770853	Identifier	cmd		770666	0					
ANR	770854	IfStatement	if ( needsID )		770666	7					
ANR	770855	Condition	needsID	986:5:22196:22202	770666	0	True				
ANR	770856	Identifier	needsID		770666	0					
ANR	770857	CompoundStatement		41:15:1000:1000	770666	1					
ANR	770858	ExpressionStatement	"fprintf ( stderr , ""\\nWhere [claimid] must be specified as:\\n"" )"	987:2:22211:22272	770666	0	True				
ANR	770859	CallExpression	"fprintf ( stderr , ""\\nWhere [claimid] must be specified as:\\n"" )"		770666	0					
ANR	770860	Callee	fprintf		770666	0					
ANR	770861	Identifier	fprintf		770666	0					
ANR	770862	ArgumentList	stderr		770666	1					
ANR	770863	Argument	stderr		770666	0					
ANR	770864	Identifier	stderr		770666	0					
ANR	770865	Argument	"""\\nWhere [claimid] must be specified as:\\n"""		770666	1					
ANR	770866	PrimaryExpression	"""\\nWhere [claimid] must be specified as:\\n"""		770666	0					
ANR	770867	ExpressionStatement	"fprintf ( stderr , ""   -id ClaimId\\t\\tAct on the given COD claim\\n"" )"	988:2:22276:22343	770666	1	True				
ANR	770868	CallExpression	"fprintf ( stderr , ""   -id ClaimId\\t\\tAct on the given COD claim\\n"" )"		770666	0					
ANR	770869	Callee	fprintf		770666	0					
ANR	770870	Identifier	fprintf		770666	0					
ANR	770871	ArgumentList	stderr		770666	1					
ANR	770872	Argument	stderr		770666	0					
ANR	770873	Identifier	stderr		770666	0					
ANR	770874	Argument	"""   -id ClaimId\\t\\tAct on the given COD claim\\n"""		770666	1					
ANR	770875	PrimaryExpression	"""   -id ClaimId\\t\\tAct on the given COD claim\\n"""		770666	0					
ANR	770876	Statement	fprintf	989:2:22347:22353	770666	2	True				
ANR	770877	Statement	(	989:9:22354:22354	770666	3	True				
ANR	770878	Statement	stderr	989:11:22356:22361	770666	4	True				
ANR	770879	Statement	","	989:17:22362:22362	770666	5	True				
ANR	770880	Statement	"""   (The startd address may be inferred from this in most cases, but it is better\\n"""	989:19:22364:22447	770666	6	True				
ANR	770881	Statement	"""to specify the address explicitly.\\n"""	990:13:22462:22499	770666	7	True				
ANR	770882	Statement	)	990:51:22500:22500	770666	8	True				
ANR	770883	ExpressionStatement		990:52:22501:22501	770666	9	True				
ANR	770884	ExpressionStatement	"fprintf ( stderr , ""\\nWhere [target] can be zero or one of:\\n"" )"	993:1:22508:22570	770666	8	True				
ANR	770885	CallExpression	"fprintf ( stderr , ""\\nWhere [target] can be zero or one of:\\n"" )"		770666	0					
ANR	770886	Callee	fprintf		770666	0					
ANR	770887	Identifier	fprintf		770666	0					
ANR	770888	ArgumentList	stderr		770666	1					
ANR	770889	Argument	stderr		770666	0					
ANR	770890	Identifier	stderr		770666	0					
ANR	770891	Argument	"""\\nWhere [target] can be zero or one of:\\n"""		770666	1					
ANR	770892	PrimaryExpression	"""\\nWhere [target] can be zero or one of:\\n"""		770666	0					
ANR	770893	Statement	fprintf	994:1:22573:22579	770666	9	True				
ANR	770894	Statement	(	994:8:22580:22580	770666	10	True				
ANR	770895	Statement	stderr	994:10:22582:22587	770666	11	True				
ANR	770896	Statement	","	994:16:22588:22588	770666	12	True				
ANR	770897	Statement	"""   -name hostname\\tContact the startd on the """	994:18:22590:22636	770666	13	True				
ANR	770898	Statement	"""given host\\n"""	995:4:22642:22655	770666	14	True				
ANR	770899	Statement	)	995:19:22657:22657	770666	15	True				
ANR	770900	ExpressionStatement		995:20:22658:22658	770666	16	True				
ANR	770901	Statement	fprintf	996:1:22662:22668	770666	17	True				
ANR	770902	Statement	(	996:8:22669:22669	770666	18	True				
ANR	770903	Statement	stderr	996:10:22671:22676	770666	19	True				
ANR	770904	Statement	","	996:16:22677:22677	770666	20	True				
ANR	770905	Statement	"""   -pool hostname\\tUse the given central manager """	996:18:22679:22729	770666	21	True				
ANR	770906	Statement	"""to find the startd\\n\\t\\t\\trequested with -name\\n"""	997:4:22735:22784	770666	22	True				
ANR	770907	Statement	)	997:55:22786:22786	770666	23	True				
ANR	770908	ExpressionStatement		997:56:22787:22787	770666	24	True				
ANR	770909	Statement	fprintf	998:1:22790:22796	770666	25	True				
ANR	770910	Statement	(	998:8:22797:22797	770666	26	True				
ANR	770911	Statement	stderr	998:10:22799:22804	770666	27	True				
ANR	770912	Statement	","	998:16:22805:22805	770666	28	True				
ANR	770913	Statement	"""   -addr <ip_addr:port>\\tContact the startd at """	998:18:22807:22855	770666	29	True				
ANR	770914	Statement	"""the given \\""sinful string\\""\\n"""	999:4:22862:22892	770666	30	True				
ANR	770915	Statement	)	999:36:22894:22894	770666	31	True				
ANR	770916	ExpressionStatement		999:37:22895:22895	770666	32	True				
ANR	770917	Statement	fprintf	1000:1:22898:22904	770666	33	True				
ANR	770918	Statement	(	1000:8:22905:22905	770666	34	True				
ANR	770919	Statement	stderr	1000:10:22907:22912	770666	35	True				
ANR	770920	Statement	","	1000:16:22913:22913	770666	36	True				
ANR	770921	Statement	"""   (If no target or claimid is specified, the local """	1000:18:22915:22968	770666	37	True				
ANR	770922	Statement	"""host is used)\\n"""	1001:4:22974:22990	770666	38	True				
ANR	770923	Statement	)	1001:22:22992:22992	770666	39	True				
ANR	770924	ExpressionStatement		1001:23:22993:22993	770666	40	True				
ANR	770925	ExpressionStatement	"fprintf ( stderr , ""\\nWhere [general-opts] can either be one of:\\n"" )"	1003:1:22997:23064	770666	41	True				
ANR	770926	CallExpression	"fprintf ( stderr , ""\\nWhere [general-opts] can either be one of:\\n"" )"		770666	0					
ANR	770927	Callee	fprintf		770666	0					
ANR	770928	Identifier	fprintf		770666	0					
ANR	770929	ArgumentList	stderr		770666	1					
ANR	770930	Argument	stderr		770666	0					
ANR	770931	Identifier	stderr		770666	0					
ANR	770932	Argument	"""\\nWhere [general-opts] can either be one of:\\n"""		770666	1					
ANR	770933	PrimaryExpression	"""\\nWhere [general-opts] can either be one of:\\n"""		770666	0					
ANR	770934	ExpressionStatement	"fprintf ( stderr , ""   -help\\t\\tPrint this usage information and exit\\n"" )"	1004:1:23067:23139	770666	42	True				
ANR	770935	CallExpression	"fprintf ( stderr , ""   -help\\t\\tPrint this usage information and exit\\n"" )"		770666	0					
ANR	770936	Callee	fprintf		770666	0					
ANR	770937	Identifier	fprintf		770666	0					
ANR	770938	ArgumentList	stderr		770666	1					
ANR	770939	Argument	stderr		770666	0					
ANR	770940	Identifier	stderr		770666	0					
ANR	770941	Argument	"""   -help\\t\\tPrint this usage information and exit\\n"""		770666	1					
ANR	770942	PrimaryExpression	"""   -help\\t\\tPrint this usage information and exit\\n"""		770666	0					
ANR	770943	Statement	fprintf	1005:1:23142:23148	770666	43	True				
ANR	770944	Statement	(	1005:8:23149:23149	770666	44	True				
ANR	770945	Statement	stderr	1005:10:23151:23156	770666	45	True				
ANR	770946	Statement	","	1005:16:23157:23157	770666	46	True				
ANR	770947	Statement	"""   -version\\t\\tPrint the version of this tool and """	1005:18:23159:23210	770666	47	True				
ANR	770948	Statement	"""exit\\n"""	1006:4:23216:23223	770666	48	True				
ANR	770949	Statement	)	1006:13:23225:23225	770666	49	True				
ANR	770950	ExpressionStatement		1006:14:23226:23226	770666	50	True				
ANR	770951	ExpressionStatement	"fprintf ( stderr , "" or it may be zero or more of:\\n"" )"	1007:1:23229:23282	770666	51	True				
ANR	770952	CallExpression	"fprintf ( stderr , "" or it may be zero or more of:\\n"" )"		770666	0					
ANR	770953	Callee	fprintf		770666	0					
ANR	770954	Identifier	fprintf		770666	0					
ANR	770955	ArgumentList	stderr		770666	1					
ANR	770956	Argument	stderr		770666	0					
ANR	770957	Identifier	stderr		770666	0					
ANR	770958	Argument	""" or it may be zero or more of:\\n"""		770666	1					
ANR	770959	PrimaryExpression	""" or it may be zero or more of:\\n"""		770666	0					
ANR	770960	ExpressionStatement	"fprintf ( stderr , ""   -debug\\t\\tPrint verbose debugging information\\n"" )"	1008:1:23285:23356	770666	52	True				
ANR	770961	CallExpression	"fprintf ( stderr , ""   -debug\\t\\tPrint verbose debugging information\\n"" )"		770666	0					
ANR	770962	Callee	fprintf		770666	0					
ANR	770963	Identifier	fprintf		770666	0					
ANR	770964	ArgumentList	stderr		770666	1					
ANR	770965	Argument	stderr		770666	0					
ANR	770966	Identifier	stderr		770666	0					
ANR	770967	Argument	"""   -debug\\t\\tPrint verbose debugging information\\n"""		770666	1					
ANR	770968	PrimaryExpression	"""   -debug\\t\\tPrint verbose debugging information\\n"""		770666	0					
ANR	770969	Statement	fprintf	1009:1:23359:23365	770666	53	True				
ANR	770970	Statement	(	1009:8:23366:23366	770666	54	True				
ANR	770971	Statement	stderr	1009:10:23368:23373	770666	55	True				
ANR	770972	Statement	","	1009:16:23374:23374	770666	56	True				
ANR	770973	Statement	"""   -classad file\\tPrint the reply ClassAd to """	1009:18:23376:23422	770666	57	True				
ANR	770974	Statement	"""the given file\\n"""	1010:4:23428:23445	770666	58	True				
ANR	770975	Statement	)	1010:23:23447:23447	770666	59	True				
ANR	770976	ExpressionStatement		1010:24:23448:23448	770666	60	True				
ANR	770977	Statement	fprintf	1011:1:23451:23457	770666	61	True				
ANR	770978	Statement	(	1011:8:23458:23458	770666	62	True				
ANR	770979	Statement	stderr	1011:10:23460:23465	770666	63	True				
ANR	770980	Statement	","	1011:16:23466:23466	770666	64	True				
ANR	770981	Statement	"""   -timeout N\\t\\tTimeout all network """	1011:18:23468:23506	770666	65	True				
ANR	770982	Statement	"""operations after N seconds\\n"""	1012:4:23512:23541	770666	66	True				
ANR	770983	Statement	)	1012:35:23543:23543	770666	67	True				
ANR	770984	ExpressionStatement		1012:36:23544:23544	770666	68	True				
ANR	770985	IfStatement	if ( has_cmd_opt )		770666	69					
ANR	770986	Condition	has_cmd_opt	1014:5:23552:23562	770666	0	True				
ANR	770987	Identifier	has_cmd_opt		770666	0					
ANR	770988	CompoundStatement		69:19:2360:2360	770666	1					
ANR	770989	ExpressionStatement	"fprintf ( stderr , ""\\nWhere [command-opts] can be zero or more of:\\n"" )"	1015:2:23570:23645	770666	0	True				
ANR	770990	CallExpression	"fprintf ( stderr , ""\\nWhere [command-opts] can be zero or more of:\\n"" )"		770666	0					
ANR	770991	Callee	fprintf		770666	0					
ANR	770992	Identifier	fprintf		770666	0					
ANR	770993	ArgumentList	stderr		770666	1					
ANR	770994	Argument	stderr		770666	0					
ANR	770995	Identifier	stderr		770666	0					
ANR	770996	Argument	"""\\nWhere [command-opts] can be zero or more of:\\n"""		770666	1					
ANR	770997	PrimaryExpression	"""\\nWhere [command-opts] can be zero or more of:\\n"""		770666	0					
ANR	770998	SwitchStatement	switch ( cmd )		770666	70					
ANR	770999	Condition	cmd	1019:9:23660:23662	770666	0	True				
ANR	771000	Identifier	cmd		770666	0					
ANR	771001	CompoundStatement		74:15:2460:2460	770666	1					
ANR	771002	Label	case CA_REQUEST_CLAIM :	1021:1:23670:23691	770666	0	True				
ANR	771003	Identifier	CA_REQUEST_CLAIM		770666	0					
ANR	771004	Statement	fprintf	1022:2:23695:23701	770666	1	True				
ANR	771005	Statement	(	1022:9:23702:23702	770666	2	True				
ANR	771006	Statement	stderr	1022:11:23704:23709	770666	3	True				
ANR	771007	Statement	","	1022:17:23710:23710	770666	4	True				
ANR	771008	Statement	"""   -requirements expr\\tFind a resource """	1022:19:23712:23752	770666	5	True				
ANR	771009	Statement	"""that matches the boolean expression\\n"""	1023:5:23759:23797	770666	6	True				
ANR	771010	Statement	)	1023:45:23799:23799	770666	7	True				
ANR	771011	ExpressionStatement		1023:46:23800:23800	770666	8	True				
ANR	771012	ExpressionStatement	"fprintf ( stderr , ""   -lease N\\t\\tNumber of seconds to wait for lease renewal\\n"" )"	1024:2:23804:23884	770666	9	True				
ANR	771013	CallExpression	"fprintf ( stderr , ""   -lease N\\t\\tNumber of seconds to wait for lease renewal\\n"" )"		770666	0					
ANR	771014	Callee	fprintf		770666	0					
ANR	771015	Identifier	fprintf		770666	0					
ANR	771016	ArgumentList	stderr		770666	1					
ANR	771017	Argument	stderr		770666	0					
ANR	771018	Identifier	stderr		770666	0					
ANR	771019	Argument	"""   -lease N\\t\\tNumber of seconds to wait for lease renewal\\n"""		770666	1					
ANR	771020	PrimaryExpression	"""   -lease N\\t\\tNumber of seconds to wait for lease renewal\\n"""		770666	0					
ANR	771021	BreakStatement	break ;	1025:2:23888:23893	770666	10	True				
ANR	771022	Label	case CA_ACTIVATE_CLAIM :	1027:1:23897:23919	770666	11	True				
ANR	771023	Identifier	CA_ACTIVATE_CLAIM		770666	0					
ANR	771024	Statement	fprintf	1028:2:23923:23929	770666	12	True				
ANR	771025	Statement	(	1028:9:23930:23930	770666	13	True				
ANR	771026	Statement	stderr	1028:11:23932:23937	770666	14	True				
ANR	771027	Statement	","	1028:17:23938:23938	770666	15	True				
ANR	771028	Statement	"""   -keyword string\\tUse the keyword to """	1028:19:23940:23980	770666	16	True				
ANR	771029	Statement	"""find the job in the config file\\n"""	1029:5:23987:24021	770666	17	True				
ANR	771030	Statement	)	1029:41:24023:24023	770666	18	True				
ANR	771031	ExpressionStatement		1029:42:24024:24024	770666	19	True				
ANR	771032	Statement	fprintf	1030:2:24028:24034	770666	20	True				
ANR	771033	Statement	(	1030:9:24035:24035	770666	21	True				
ANR	771034	Statement	stderr	1030:11:24037:24042	770666	22	True				
ANR	771035	Statement	","	1030:17:24043:24043	770666	23	True				
ANR	771036	Statement	"""   -jobad filename\\tUse the ClassAd in filename """	1030:19:24045:24094	770666	24	True				
ANR	771037	Statement	"""to define the job\\n"""	1031:5:24101:24121	770666	25	True				
ANR	771038	Statement	)	1031:27:24123:24123	770666	26	True				
ANR	771039	ExpressionStatement		1031:28:24124:24124	770666	27	True				
ANR	771040	ExpressionStatement	"fprintf ( stderr , ""\\t\\t\\t(if filename is \\""-\\"", read from STDIN)\\n"" )"	1032:2:24128:24196	770666	28	True				
ANR	771041	CallExpression	"fprintf ( stderr , ""\\t\\t\\t(if filename is \\""-\\"", read from STDIN)\\n"" )"		770666	0					
ANR	771042	Callee	fprintf		770666	0					
ANR	771043	Identifier	fprintf		770666	0					
ANR	771044	ArgumentList	stderr		770666	1					
ANR	771045	Argument	stderr		770666	0					
ANR	771046	Identifier	stderr		770666	0					
ANR	771047	Argument	"""\\t\\t\\t(if filename is \\""-\\"", read from STDIN)\\n"""		770666	1					
ANR	771048	PrimaryExpression	"""\\t\\t\\t(if filename is \\""-\\"", read from STDIN)\\n"""		770666	0					
ANR	771049	Statement	fprintf	1033:2:24200:24206	770666	29	True				
ANR	771050	Statement	(	1033:9:24207:24207	770666	30	True				
ANR	771051	Statement	stderr	1033:11:24209:24214	770666	31	True				
ANR	771052	Statement	","	1033:17:24215:24215	770666	32	True				
ANR	771053	Statement	"""   -cluster N\\t\\tStart the job with the """	1033:19:24217:24258	770666	33	True				
ANR	771054	Statement	"""given cluster ID\\n"""	1034:5:24265:24284	770666	34	True				
ANR	771055	Statement	)	1034:26:24286:24286	770666	35	True				
ANR	771056	ExpressionStatement		1034:27:24287:24287	770666	36	True				
ANR	771057	Statement	fprintf	1035:2:24291:24297	770666	37	True				
ANR	771058	Statement	(	1035:9:24298:24298	770666	38	True				
ANR	771059	Statement	stderr	1035:11:24300:24305	770666	39	True				
ANR	771060	Statement	","	1035:17:24306:24306	770666	40	True				
ANR	771061	Statement	"""   -proc N\\t\\tStart the job with the """	1035:19:24308:24346	770666	41	True				
ANR	771062	Statement	"""given proc ID\\n"""	1036:5:24353:24369	770666	42	True				
ANR	771063	Statement	)	1036:23:24371:24371	770666	43	True				
ANR	771064	ExpressionStatement		1036:24:24372:24372	770666	44	True				
ANR	771065	Statement	fprintf	1037:2:24376:24382	770666	45	True				
ANR	771066	Statement	(	1037:9:24383:24383	770666	46	True				
ANR	771067	Statement	stderr	1037:11:24385:24390	770666	47	True				
ANR	771068	Statement	","	1037:17:24391:24391	770666	48	True				
ANR	771069	Statement	"""   -requirements expr\\tFind a starter """	1037:19:24393:24432	770666	49	True				
ANR	771070	Statement	"""that matches the boolean expression\\n"""	1038:5:24439:24477	770666	50	True				
ANR	771071	Statement	)	1038:45:24479:24479	770666	51	True				
ANR	771072	ExpressionStatement		1038:46:24480:24480	770666	52	True				
ANR	771073	BreakStatement	break ;	1039:2:24484:24489	770666	53	True				
ANR	771074	Label	case CA_RELEASE_CLAIM :	1041:1:24493:24514	770666	54	True				
ANR	771075	Identifier	CA_RELEASE_CLAIM		770666	0					
ANR	771076	Label	case CA_DEACTIVATE_CLAIM :	1042:1:24517:24541	770666	55	True				
ANR	771077	Identifier	CA_DEACTIVATE_CLAIM		770666	0					
ANR	771078	ExpressionStatement	printFast ( )	1043:2:24545:24556	770666	56	True				
ANR	771079	CallExpression	printFast ( )		770666	0					
ANR	771080	Callee	printFast		770666	0					
ANR	771081	Identifier	printFast		770666	0					
ANR	771082	ArgumentList			770666	1					
ANR	771083	BreakStatement	break ;	1044:2:24560:24565	770666	57	True				
ANR	771084	Label	case DELEGATE_GSI_CRED_STARTD :	1046:1:24569:24598	770666	58	True				
ANR	771085	Identifier	DELEGATE_GSI_CRED_STARTD		770666	0					
ANR	771086	Statement	fprintf	1047:2:24602:24608	770666	59	True				
ANR	771087	Statement	(	1047:9:24609:24609	770666	60	True				
ANR	771088	Statement	stderr	1047:11:24611:24616	770666	61	True				
ANR	771089	Statement	","	1047:17:24617:24617	770666	62	True				
ANR	771090	Statement	"""   -x509proxy filename\\tDelegate the proxy in the """	1047:19:24619:24670	770666	63	True				
ANR	771091	Statement	"""specified file\\n"""	1048:5:24677:24694	770666	64	True				
ANR	771092	Statement	)	1048:24:24696:24696	770666	65	True				
ANR	771093	ExpressionStatement		1048:25:24697:24697	770666	66	True				
ANR	771094	BreakStatement	break ;	1049:2:24701:24706	770666	67	True				
ANR	771095	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1052:1:24713:24735	770666	71	True				
ANR	771096	CallExpression	"fprintf ( stderr , ""\\n"" )"		770666	0					
ANR	771097	Callee	fprintf		770666	0					
ANR	771098	Identifier	fprintf		770666	0					
ANR	771099	ArgumentList	stderr		770666	1					
ANR	771100	Argument	stderr		770666	0					
ANR	771101	Identifier	stderr		770666	0					
ANR	771102	Argument	"""\\n"""		770666	1					
ANR	771103	PrimaryExpression	"""\\n"""		770666	0					
ANR	771104	ExpressionStatement	exit ( iExitCode )	1053:1:24738:24755	770666	72	True				
ANR	771105	CallExpression	exit ( iExitCode )		770666	0					
ANR	771106	Callee	exit		770666	0					
ANR	771107	Identifier	exit		770666	0					
ANR	771108	ArgumentList	iExitCode		770666	1					
ANR	771109	Argument	iExitCode		770666	0					
ANR	771110	Identifier	iExitCode		770666	0					
ANR	771111	ReturnType	void		770666	1					
ANR	771112	Identifier	usage		770666	2					
ANR	771113	ParameterList	"const char * str , int iExitCode"		770666	3					
ANR	771114	Parameter	const char * str	945:7:21172:21186	770666	0	True				
ANR	771115	ParameterType	const char *		770666	0					
ANR	771116	Identifier	str		770666	1					
ANR	771117	Parameter	int iExitCode	945:24:21189:21201	770666	1	True				
ANR	771118	ParameterType	int		770666	0					
ANR	771119	Identifier	iExitCode		770666	1					
ANR	771120	CFGEntryNode	ENTRY		770666		True				
ANR	771121	CFGExitNode	EXIT		770666		True				
ANR	771122	Symbol	CA_ACTIVATE_CLAIM		770666						
ANR	771123	Symbol	CA_RESUME_CLAIM		770666						
ANR	771124	Symbol	CA_DEACTIVATE_CLAIM		770666						
ANR	771125	Symbol	has_cmd_opt		770666						
ANR	771126	Symbol	false		770666						
ANR	771127	Symbol	iExitCode		770666						
ANR	771128	Symbol	CA_RENEW_LEASE_FOR_CLAIM		770666						
ANR	771129	Symbol	stderr		770666						
ANR	771130	Symbol	str		770666						
ANR	771131	Symbol	CA_REQUEST_CLAIM		770666						
ANR	771132	Symbol	DELEGATE_GSI_CRED_STARTD		770666						
ANR	771133	Symbol	true		770666						
ANR	771134	Symbol	CA_RELEASE_CLAIM		770666						
ANR	771135	Symbol	cmd		770666						
ANR	771136	Symbol	needsID		770666						
ANR	771137	Symbol	CA_SUSPEND_CLAIM		770666						
