command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3380557	File	data/converged/CVE-2011-4930_htcondor/src_condor_io_SafeMsg.cpp								
ANR	3380558	DeclStmt									
ANR	3380559	Decl							const char	const char [ ]	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD
ANR	3380560	DeclStmt									
ANR	3380561	Decl							const int	const int	SAFE_MSG_CRYPTO_HEADER_SIZE
ANR	3380562	Function	_condorPacket :: _condorPacket	33:0:1205:1250							
ANR	3380563	FunctionDef	_condorPacket :: _condorPacket ()		3380562	0					
ANR	3380564	CompoundStatement		34:0:1236:1250	3380562	0					
ANR	3380565	ExpressionStatement	init ( )	35:4:1242:1248	3380562	0	True				
ANR	3380566	CallExpression	init ( )		3380562	0					
ANR	3380567	Callee	init		3380562	0					
ANR	3380568	Identifier	init		3380562	0					
ANR	3380569	ArgumentList			3380562	1					
ANR	3380570	Identifier	_condorPacket :: _condorPacket		3380562	1					
ANR	3380571	ParameterList			3380562	2					
ANR	3380572	CFGEntryNode	ENTRY		3380562		True				
ANR	3380573	CFGExitNode	EXIT		3380562		True				
ANR	3380574	Function	_condorPacket :: ~_condorPacket	38:0:1253:1717							
ANR	3380575	FunctionDef	_condorPacket :: ~_condorPacket ()		3380574	0					
ANR	3380576	CompoundStatement		39:0:1285:1717	3380574	0					
ANR	3380577	IfStatement	if ( incomingMD5KeyId_ )		3380574	0					
ANR	3380578	Condition	incomingMD5KeyId_	40:8:1295:1311	3380574	0	True				
ANR	3380579	Identifier	incomingMD5KeyId_		3380574	0					
ANR	3380580	CompoundStatement		2:27:28:28	3380574	1					
ANR	3380581	ExpressionStatement	free ( incomingMD5KeyId_ )	41:8:1324:1347	3380574	0	True				
ANR	3380582	CallExpression	free ( incomingMD5KeyId_ )		3380574	0					
ANR	3380583	Callee	free		3380574	0					
ANR	3380584	Identifier	free		3380574	0					
ANR	3380585	ArgumentList	incomingMD5KeyId_		3380574	1					
ANR	3380586	Argument	incomingMD5KeyId_		3380574	0					
ANR	3380587	Identifier	incomingMD5KeyId_		3380574	0					
ANR	3380588	ExpressionStatement	incomingMD5KeyId_ = 0	42:8:1357:1378	3380574	1	True				
ANR	3380589	AssignmentExpression	incomingMD5KeyId_ = 0		3380574	0		=			
ANR	3380590	Identifier	incomingMD5KeyId_		3380574	0					
ANR	3380591	PrimaryExpression	0		3380574	1					
ANR	3380592	IfStatement	if ( outgoingMD5KeyId_ )		3380574	1					
ANR	3380593	Condition	outgoingMD5KeyId_	45:8:1395:1411	3380574	0	True				
ANR	3380594	Identifier	outgoingMD5KeyId_		3380574	0					
ANR	3380595	CompoundStatement		7:27:128:128	3380574	1					
ANR	3380596	ExpressionStatement	free ( outgoingMD5KeyId_ )	46:8:1424:1447	3380574	0	True				
ANR	3380597	CallExpression	free ( outgoingMD5KeyId_ )		3380574	0					
ANR	3380598	Callee	free		3380574	0					
ANR	3380599	Identifier	free		3380574	0					
ANR	3380600	ArgumentList	outgoingMD5KeyId_		3380574	1					
ANR	3380601	Argument	outgoingMD5KeyId_		3380574	0					
ANR	3380602	Identifier	outgoingMD5KeyId_		3380574	0					
ANR	3380603	ExpressionStatement	outgoingMD5KeyId_ = 0	47:8:1457:1478	3380574	1	True				
ANR	3380604	AssignmentExpression	outgoingMD5KeyId_ = 0		3380574	0		=			
ANR	3380605	Identifier	outgoingMD5KeyId_		3380574	0					
ANR	3380606	PrimaryExpression	0		3380574	1					
ANR	3380607	IfStatement	if ( incomingEncKeyId_ )		3380574	2					
ANR	3380608	Condition	incomingEncKeyId_	50:8:1495:1511	3380574	0	True				
ANR	3380609	Identifier	incomingEncKeyId_		3380574	0					
ANR	3380610	CompoundStatement		12:27:228:228	3380574	1					
ANR	3380611	ExpressionStatement	free ( incomingEncKeyId_ )	51:8:1524:1547	3380574	0	True				
ANR	3380612	CallExpression	free ( incomingEncKeyId_ )		3380574	0					
ANR	3380613	Callee	free		3380574	0					
ANR	3380614	Identifier	free		3380574	0					
ANR	3380615	ArgumentList	incomingEncKeyId_		3380574	1					
ANR	3380616	Argument	incomingEncKeyId_		3380574	0					
ANR	3380617	Identifier	incomingEncKeyId_		3380574	0					
ANR	3380618	ExpressionStatement	incomingEncKeyId_ = 0	52:8:1557:1578	3380574	1	True				
ANR	3380619	AssignmentExpression	incomingEncKeyId_ = 0		3380574	0		=			
ANR	3380620	Identifier	incomingEncKeyId_		3380574	0					
ANR	3380621	PrimaryExpression	0		3380574	1					
ANR	3380622	IfStatement	if ( outgoingEncKeyId_ )		3380574	3					
ANR	3380623	Condition	outgoingEncKeyId_	55:8:1595:1611	3380574	0	True				
ANR	3380624	Identifier	outgoingEncKeyId_		3380574	0					
ANR	3380625	CompoundStatement		17:27:328:328	3380574	1					
ANR	3380626	ExpressionStatement	free ( outgoingEncKeyId_ )	56:8:1624:1647	3380574	0	True				
ANR	3380627	CallExpression	free ( outgoingEncKeyId_ )		3380574	0					
ANR	3380628	Callee	free		3380574	0					
ANR	3380629	Identifier	free		3380574	0					
ANR	3380630	ArgumentList	outgoingEncKeyId_		3380574	1					
ANR	3380631	Argument	outgoingEncKeyId_		3380574	0					
ANR	3380632	Identifier	outgoingEncKeyId_		3380574	0					
ANR	3380633	ExpressionStatement	outgoingEncKeyId_ = 0	57:8:1657:1678	3380574	1	True				
ANR	3380634	AssignmentExpression	outgoingEncKeyId_ = 0		3380574	0		=			
ANR	3380635	Identifier	outgoingEncKeyId_		3380574	0					
ANR	3380636	PrimaryExpression	0		3380574	1					
ANR	3380637	IfStatement	if ( md_ )		3380574	4					
ANR	3380638	Condition	md_	59:5:1691:1693	3380574	0	True				
ANR	3380639	Identifier	md_		3380574	0					
ANR	3380640	CompoundStatement		21:11:411:411	3380574	1					
ANR	3380641	ExpressionStatement	free ( md_ )	60:2:1701:1712	3380574	0	True				
ANR	3380642	CallExpression	free ( md_ )		3380574	0					
ANR	3380643	Callee	free		3380574	0					
ANR	3380644	Identifier	free		3380574	0					
ANR	3380645	ArgumentList	md_		3380574	1					
ANR	3380646	Argument	md_		3380574	0					
ANR	3380647	Identifier	md_		3380574	0					
ANR	3380648	Identifier	_condorPacket :: ~_condorPacket		3380574	1					
ANR	3380649	ParameterList			3380574	2					
ANR	3380650	CFGEntryNode	ENTRY		3380574		True				
ANR	3380651	CFGExitNode	EXIT		3380574		True				
ANR	3380652	Symbol	incomingMD5KeyId_		3380574						
ANR	3380653	Symbol	outgoingEncKeyId_		3380574						
ANR	3380654	Symbol	md_		3380574						
ANR	3380655	Symbol	outgoingMD5KeyId_		3380574						
ANR	3380656	Symbol	incomingEncKeyId_		3380574						
ANR	3380657	Function	_condorPacket :: init	64:0:1720:2050							
ANR	3380658	FunctionDef	_condorPacket :: init ()		3380657	0					
ANR	3380659	CompoundStatement		65:0:1749:2050	3380657	0					
ANR	3380660	ExpressionStatement	length = 0	66:1:1752:1766	3380657	0	True				
ANR	3380661	AssignmentExpression	length = 0		3380657	0		=			
ANR	3380662	Identifier	length		3380657	0					
ANR	3380663	PrimaryExpression	0		3380657	1					
ANR	3380664	ExpressionStatement	data = & dataGram [ SAFE_MSG_HEADER_SIZE ]	67:1:1769:1813	3380657	1	True				
ANR	3380665	AssignmentExpression	data = & dataGram [ SAFE_MSG_HEADER_SIZE ]		3380657	0		=			
ANR	3380666	Identifier	data		3380657	0					
ANR	3380667	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE ]		3380657	1					
ANR	3380668	UnaryOperator	&		3380657	0					
ANR	3380669	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE ]		3380657	1					
ANR	3380670	Identifier	dataGram		3380657	0					
ANR	3380671	Identifier	SAFE_MSG_HEADER_SIZE		3380657	1					
ANR	3380672	ExpressionStatement	curIndex = 0	68:1:1816:1830	3380657	2	True				
ANR	3380673	AssignmentExpression	curIndex = 0		3380657	0		=			
ANR	3380674	Identifier	curIndex		3380657	0					
ANR	3380675	PrimaryExpression	0		3380657	1					
ANR	3380676	ExpressionStatement	next = NULL	69:1:1833:1850	3380657	3	True				
ANR	3380677	AssignmentExpression	next = NULL		3380657	0		=			
ANR	3380678	Identifier	next		3380657	0					
ANR	3380679	Identifier	NULL		3380657	1					
ANR	3380680	ExpressionStatement	verified_ = true	70:4:1856:1873	3380657	4	True				
ANR	3380681	AssignmentExpression	verified_ = true		3380657	0		=			
ANR	3380682	Identifier	verified_		3380657	0					
ANR	3380683	Identifier	true		3380657	1					
ANR	3380684	ExpressionStatement	incomingMD5KeyId_ = 0	71:4:1879:1900	3380657	5	True				
ANR	3380685	AssignmentExpression	incomingMD5KeyId_ = 0		3380657	0		=			
ANR	3380686	Identifier	incomingMD5KeyId_		3380657	0					
ANR	3380687	PrimaryExpression	0		3380657	1					
ANR	3380688	ExpressionStatement	outgoingMD5KeyId_ = 0	72:4:1906:1927	3380657	6	True				
ANR	3380689	AssignmentExpression	outgoingMD5KeyId_ = 0		3380657	0		=			
ANR	3380690	Identifier	outgoingMD5KeyId_		3380657	0					
ANR	3380691	PrimaryExpression	0		3380657	1					
ANR	3380692	ExpressionStatement	outgoingMdLen_ = 0	73:4:1933:1954	3380657	7	True				
ANR	3380693	AssignmentExpression	outgoingMdLen_ = 0		3380657	0		=			
ANR	3380694	Identifier	outgoingMdLen_		3380657	0					
ANR	3380695	PrimaryExpression	0		3380657	1					
ANR	3380696	ExpressionStatement	incomingEncKeyId_ = 0	74:4:1960:1981	3380657	8	True				
ANR	3380697	AssignmentExpression	incomingEncKeyId_ = 0		3380657	0		=			
ANR	3380698	Identifier	incomingEncKeyId_		3380657	0					
ANR	3380699	PrimaryExpression	0		3380657	1					
ANR	3380700	ExpressionStatement	outgoingEncKeyId_ = 0	75:4:1987:2008	3380657	9	True				
ANR	3380701	AssignmentExpression	outgoingEncKeyId_ = 0		3380657	0		=			
ANR	3380702	Identifier	outgoingEncKeyId_		3380657	0					
ANR	3380703	PrimaryExpression	0		3380657	1					
ANR	3380704	ExpressionStatement	outgoingEidLen_ = 0	76:4:2014:2035	3380657	10	True				
ANR	3380705	AssignmentExpression	outgoingEidLen_ = 0		3380657	0		=			
ANR	3380706	Identifier	outgoingEidLen_		3380657	0					
ANR	3380707	PrimaryExpression	0		3380657	1					
ANR	3380708	ExpressionStatement	md_ = NULL	77:1:2038:2048	3380657	11	True				
ANR	3380709	AssignmentExpression	md_ = NULL		3380657	0		=			
ANR	3380710	Identifier	md_		3380657	0					
ANR	3380711	Identifier	NULL		3380657	1					
ANR	3380712	ReturnType	void		3380657	1					
ANR	3380713	Identifier	_condorPacket :: init		3380657	2					
ANR	3380714	ParameterList			3380657	3					
ANR	3380715	CFGEntryNode	ENTRY		3380657		True				
ANR	3380716	CFGExitNode	EXIT		3380657		True				
ANR	3380717	Symbol	next		3380657						
ANR	3380718	Symbol	NULL		3380657						
ANR	3380719	Symbol	data		3380657						
ANR	3380720	Symbol	outgoingEncKeyId_		3380657						
ANR	3380721	Symbol	length		3380657						
ANR	3380722	Symbol	md_		3380657						
ANR	3380723	Symbol	outgoingMdLen_		3380657						
ANR	3380724	Symbol	incomingEncKeyId_		3380657						
ANR	3380725	Symbol	verified_		3380657						
ANR	3380726	Symbol	incomingMD5KeyId_		3380657						
ANR	3380727	Symbol	true		3380657						
ANR	3380728	Symbol	dataGram		3380657						
ANR	3380729	Symbol	curIndex		3380657						
ANR	3380730	Symbol	outgoingEidLen_		3380657						
ANR	3380731	Symbol	SAFE_MSG_HEADER_SIZE		3380657						
ANR	3380732	Symbol	outgoingMD5KeyId_		3380657						
ANR	3380733	Function	_condorPacket :: isDataMD5ed	80:0:2053:2129							
ANR	3380734	FunctionDef	_condorPacket :: isDataMD5ed ()		3380733	0					
ANR	3380735	CompoundStatement		81:0:2097:2129	3380733	0					
ANR	3380736	ReturnStatement	return incomingMD5KeyId_ ;	82:4:2103:2127	3380733	0	True				
ANR	3380737	Identifier	incomingMD5KeyId_		3380733	0					
ANR	3380738	ReturnType	const char *		3380733	1					
ANR	3380739	Identifier	_condorPacket :: isDataMD5ed		3380733	2					
ANR	3380740	ParameterList			3380733	3					
ANR	3380741	CFGEntryNode	ENTRY		3380733		True				
ANR	3380742	CFGExitNode	EXIT		3380733		True				
ANR	3380743	Symbol	incomingMD5KeyId_		3380733						
ANR	3380744	Function	_condorPacket :: isDataEncrypted	85:0:2132:2212							
ANR	3380745	FunctionDef	_condorPacket :: isDataEncrypted ()		3380744	0					
ANR	3380746	CompoundStatement		86:0:2180:2212	3380744	0					
ANR	3380747	ReturnStatement	return incomingEncKeyId_ ;	87:4:2186:2210	3380744	0	True				
ANR	3380748	Identifier	incomingEncKeyId_		3380744	0					
ANR	3380749	ReturnType	const char *		3380744	1					
ANR	3380750	Identifier	_condorPacket :: isDataEncrypted		3380744	2					
ANR	3380751	ParameterList			3380744	3					
ANR	3380752	CFGEntryNode	ENTRY		3380744		True				
ANR	3380753	CFGExitNode	EXIT		3380744		True				
ANR	3380754	Symbol	incomingEncKeyId_		3380744						
ANR	3380755	Function	_condorPacket :: md	90:0:2215:2277							
ANR	3380756	FunctionDef	_condorPacket :: md ()		3380755	0					
ANR	3380757	CompoundStatement		91:0:2259:2277	3380755	0					
ANR	3380758	ReturnStatement	return md_ ;	92:4:2265:2275	3380755	0	True				
ANR	3380759	Identifier	md_		3380755	0					
ANR	3380760	ReturnType	const unsigned char *		3380755	1					
ANR	3380761	Identifier	_condorPacket :: md		3380755	2					
ANR	3380762	ParameterList			3380755	3					
ANR	3380763	CFGEntryNode	ENTRY		3380755		True				
ANR	3380764	CFGExitNode	EXIT		3380755		True				
ANR	3380765	Symbol	md_		3380755						
ANR	3380766	Function	_condorPacket :: set_encryption_id	95:0:2280:3262							
ANR	3380767	FunctionDef	_condorPacket :: set_encryption_id (const char * keyId)		3380766	0					
ANR	3380768	CompoundStatement		96:0:2340:3262	3380766	0					
ANR	3380769	ExpressionStatement	ASSERT ( empty ( ) )	98:4:2388:2403	3380766	0	True				
ANR	3380770	CallExpression	ASSERT ( empty ( ) )		3380766	0					
ANR	3380771	Callee	ASSERT		3380766	0					
ANR	3380772	Identifier	ASSERT		3380766	0					
ANR	3380773	ArgumentList	empty ( )		3380766	1					
ANR	3380774	Argument	empty ( )		3380766	0					
ANR	3380775	CallExpression	empty ( )		3380766	0					
ANR	3380776	Callee	empty		3380766	0					
ANR	3380777	Identifier	empty		3380766	0					
ANR	3380778	ArgumentList			3380766	1					
ANR	3380779	IfStatement	if ( outgoingEncKeyId_ )		3380766	1					
ANR	3380780	Condition	outgoingEncKeyId_	99:8:2413:2429	3380766	0	True				
ANR	3380781	Identifier	outgoingEncKeyId_		3380766	0					
ANR	3380782	CompoundStatement		4:27:91:91	3380766	1					
ANR	3380783	IfStatement	if ( curIndex > 0 )		3380766	0					
ANR	3380784	Condition	curIndex > 0	100:12:2446:2457	3380766	0	True				
ANR	3380785	RelationalExpression	curIndex > 0		3380766	0		>			
ANR	3380786	Identifier	curIndex		3380766	0					
ANR	3380787	PrimaryExpression	0		3380766	1					
ANR	3380788	CompoundStatement		5:27:120:120	3380766	1					
ANR	3380789	ExpressionStatement	curIndex -= outgoingEidLen_	101:12:2475:2502	3380766	0	True				
ANR	3380790	AssignmentExpression	curIndex -= outgoingEidLen_		3380766	0		-=			
ANR	3380791	Identifier	curIndex		3380766	0					
ANR	3380792	Identifier	outgoingEidLen_		3380766	1					
ANR	3380793	IfStatement	if ( curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE )		3380766	1					
ANR	3380794	Condition	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE	102:16:2520:2558	3380766	0	True				
ANR	3380795	EqualityExpression	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE		3380766	0		==			
ANR	3380796	Identifier	curIndex		3380766	0					
ANR	3380797	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3380766	1					
ANR	3380798	CompoundStatement		7:57:220:220	3380766	1					
ANR	3380799	ExpressionStatement	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE	104:16:2615:2654	3380766	0	True				
ANR	3380800	AssignmentExpression	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE		3380766	0		-=			
ANR	3380801	Identifier	curIndex		3380766	0					
ANR	3380802	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3380766	1					
ANR	3380803	ExpressionStatement	ASSERT ( curIndex >= 0 )	106:12:2682:2705	3380766	2	True				
ANR	3380804	CallExpression	ASSERT ( curIndex >= 0 )		3380766	0					
ANR	3380805	Callee	ASSERT		3380766	0					
ANR	3380806	Identifier	ASSERT		3380766	0					
ANR	3380807	ArgumentList	curIndex >= 0		3380766	1					
ANR	3380808	Argument	curIndex >= 0		3380766	0					
ANR	3380809	RelationalExpression	curIndex >= 0		3380766	0		>=			
ANR	3380810	Identifier	curIndex		3380766	0					
ANR	3380811	PrimaryExpression	0		3380766	1					
ANR	3380812	ExpressionStatement	free ( outgoingEncKeyId_ )	109:8:2726:2749	3380766	1	True				
ANR	3380813	CallExpression	free ( outgoingEncKeyId_ )		3380766	0					
ANR	3380814	Callee	free		3380766	0					
ANR	3380815	Identifier	free		3380766	0					
ANR	3380816	ArgumentList	outgoingEncKeyId_		3380766	1					
ANR	3380817	Argument	outgoingEncKeyId_		3380766	0					
ANR	3380818	Identifier	outgoingEncKeyId_		3380766	0					
ANR	3380819	ExpressionStatement	outgoingEncKeyId_ = 0	110:8:2759:2780	3380766	2	True				
ANR	3380820	AssignmentExpression	outgoingEncKeyId_ = 0		3380766	0		=			
ANR	3380821	Identifier	outgoingEncKeyId_		3380766	0					
ANR	3380822	PrimaryExpression	0		3380766	1					
ANR	3380823	ExpressionStatement	outgoingEidLen_ = 0	111:8:2790:2811	3380766	3	True				
ANR	3380824	AssignmentExpression	outgoingEidLen_ = 0		3380766	0		=			
ANR	3380825	Identifier	outgoingEidLen_		3380766	0					
ANR	3380826	PrimaryExpression	0		3380766	1					
ANR	3380827	IfStatement	if ( keyId )		3380766	2					
ANR	3380828	Condition	keyId	114:8:2832:2836	3380766	0	True				
ANR	3380829	Identifier	keyId		3380766	0					
ANR	3380830	CompoundStatement		19:15:498:498	3380766	1					
ANR	3380831	ExpressionStatement	outgoingEncKeyId_ = strdup ( keyId )	115:8:2849:2882	3380766	0	True				
ANR	3380832	AssignmentExpression	outgoingEncKeyId_ = strdup ( keyId )		3380766	0		=			
ANR	3380833	Identifier	outgoingEncKeyId_		3380766	0					
ANR	3380834	CallExpression	strdup ( keyId )		3380766	1					
ANR	3380835	Callee	strdup		3380766	0					
ANR	3380836	Identifier	strdup		3380766	0					
ANR	3380837	ArgumentList	keyId		3380766	1					
ANR	3380838	Argument	keyId		3380766	0					
ANR	3380839	Identifier	keyId		3380766	0					
ANR	3380840	ExpressionStatement	outgoingEidLen_ = strlen ( outgoingEncKeyId_ )	116:8:2892:2937	3380766	1	True				
ANR	3380841	AssignmentExpression	outgoingEidLen_ = strlen ( outgoingEncKeyId_ )		3380766	0		=			
ANR	3380842	Identifier	outgoingEidLen_		3380766	0					
ANR	3380843	CallExpression	strlen ( outgoingEncKeyId_ )		3380766	1					
ANR	3380844	Callee	strlen		3380766	0					
ANR	3380845	Identifier	strlen		3380766	0					
ANR	3380846	ArgumentList	outgoingEncKeyId_		3380766	1					
ANR	3380847	Argument	outgoingEncKeyId_		3380766	0					
ANR	3380848	Identifier	outgoingEncKeyId_		3380766	0					
ANR	3380849	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3380766	2					
ANR	3380850	Condition	DebugFlags & D_FULLDEBUG	117:6:2945:2968	3380766	0	True				
ANR	3380851	BitAndExpression	DebugFlags & D_FULLDEBUG		3380766	0		&			
ANR	3380852	Identifier	DebugFlags		3380766	0					
ANR	3380853	Identifier	D_FULLDEBUG		3380766	1					
ANR	3380854	CompoundStatement		22:33:631:631	3380766	1					
ANR	3380855	ExpressionStatement	"dprintf ( D_SECURITY , ""set_encryption_id: setting key length %d\\n"" , outgoingEidLen_ )"	118:3:2977:3075	3380766	0	True				
ANR	3380856	CallExpression	"dprintf ( D_SECURITY , ""set_encryption_id: setting key length %d\\n"" , outgoingEidLen_ )"		3380766	0					
ANR	3380857	Callee	dprintf		3380766	0					
ANR	3380858	Identifier	dprintf		3380766	0					
ANR	3380859	ArgumentList	D_SECURITY		3380766	1					
ANR	3380860	Argument	D_SECURITY		3380766	0					
ANR	3380861	Identifier	D_SECURITY		3380766	0					
ANR	3380862	Argument	"""set_encryption_id: setting key length %d\\n"""		3380766	1					
ANR	3380863	PrimaryExpression	"""set_encryption_id: setting key length %d\\n"""		3380766	0					
ANR	3380864	Argument	outgoingEidLen_		3380766	2					
ANR	3380865	Identifier	outgoingEidLen_		3380766	0					
ANR	3380866	IfStatement	if ( curIndex == 0 )		3380766	3					
ANR	3380867	Condition	curIndex == 0	122:13:3096:3108	3380766	0	True				
ANR	3380868	EqualityExpression	curIndex == 0		3380766	0		==			
ANR	3380869	Identifier	curIndex		3380766	0					
ANR	3380870	PrimaryExpression	0		3380766	1					
ANR	3380871	CompoundStatement		27:29:771:771	3380766	1					
ANR	3380872	ExpressionStatement	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE	123:12:3126:3165	3380766	0	True				
ANR	3380873	AssignmentExpression	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE		3380766	0		+=			
ANR	3380874	Identifier	curIndex		3380766	0					
ANR	3380875	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3380766	1					
ANR	3380876	ExpressionStatement	curIndex += outgoingEidLen_	125:8:3185:3212	3380766	4	True				
ANR	3380877	AssignmentExpression	curIndex += outgoingEidLen_		3380766	0		+=			
ANR	3380878	Identifier	curIndex		3380766	0					
ANR	3380879	Identifier	outgoingEidLen_		3380766	1					
ANR	3380880	ExpressionStatement	length = curIndex	128:4:3225:3242	3380766	3	True				
ANR	3380881	AssignmentExpression	length = curIndex		3380766	0		=			
ANR	3380882	Identifier	length		3380766	0					
ANR	3380883	Identifier	curIndex		3380766	1					
ANR	3380884	ReturnStatement	return true ;	130:4:3249:3260	3380766	4	True				
ANR	3380885	Identifier	true		3380766	0					
ANR	3380886	ReturnType	bool		3380766	1					
ANR	3380887	Identifier	_condorPacket :: set_encryption_id		3380766	2					
ANR	3380888	ParameterList	const char * keyId		3380766	3					
ANR	3380889	Parameter	const char * keyId	95:40:2320:2337	3380766	0	True				
ANR	3380890	ParameterType	const char *		3380766	0					
ANR	3380891	Identifier	keyId		3380766	1					
ANR	3380892	CFGEntryNode	ENTRY		3380766		True				
ANR	3380893	CFGExitNode	EXIT		3380766		True				
ANR	3380894	Symbol	D_SECURITY		3380766						
ANR	3380895	Symbol	outgoingEncKeyId_		3380766						
ANR	3380896	Symbol	length		3380766						
ANR	3380897	Symbol	keyId		3380766						
ANR	3380898	Symbol	DebugFlags		3380766						
ANR	3380899	Symbol	D_FULLDEBUG		3380766						
ANR	3380900	Symbol	empty		3380766						
ANR	3380901	Symbol	strlen		3380766						
ANR	3380902	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		3380766						
ANR	3380903	Symbol	true		3380766						
ANR	3380904	Symbol	strdup		3380766						
ANR	3380905	Symbol	curIndex		3380766						
ANR	3380906	Symbol	outgoingEidLen_		3380766						
ANR	3380907	Function	_condorPacket :: init_MD	133:0:3265:4132							
ANR	3380908	FunctionDef	_condorPacket :: init_MD (const char * keyId)		3380907	0					
ANR	3380909	CompoundStatement		134:0:3313:4132	3380907	0					
ANR	3380910	IdentifierDeclStatement	bool inited = true ;	135:4:3319:3337	3380907	0	True				
ANR	3380911	IdentifierDecl	inited = true		3380907	0					
ANR	3380912	IdentifierDeclType	bool		3380907	0					
ANR	3380913	Identifier	inited		3380907	1					
ANR	3380914	AssignmentExpression	inited = true		3380907	2		=			
ANR	3380915	Identifier	true		3380907	0					
ANR	3380916	Identifier	true		3380907	1					
ANR	3380917	ExpressionStatement	ASSERT ( empty ( ) )	136:4:3343:3358	3380907	1	True				
ANR	3380918	CallExpression	ASSERT ( empty ( ) )		3380907	0					
ANR	3380919	Callee	ASSERT		3380907	0					
ANR	3380920	Identifier	ASSERT		3380907	0					
ANR	3380921	ArgumentList	empty ( )		3380907	1					
ANR	3380922	Argument	empty ( )		3380907	0					
ANR	3380923	CallExpression	empty ( )		3380907	0					
ANR	3380924	Callee	empty		3380907	0					
ANR	3380925	Identifier	empty		3380907	0					
ANR	3380926	ArgumentList			3380907	1					
ANR	3380927	IfStatement	if ( outgoingMD5KeyId_ )		3380907	2					
ANR	3380928	Condition	outgoingMD5KeyId_	138:8:3369:3385	3380907	0	True				
ANR	3380929	Identifier	outgoingMD5KeyId_		3380907	0					
ANR	3380930	CompoundStatement		5:27:74:74	3380907	1					
ANR	3380931	IfStatement	if ( curIndex > 0 )		3380907	0					
ANR	3380932	Condition	curIndex > 0	139:12:3402:3413	3380907	0	True				
ANR	3380933	RelationalExpression	curIndex > 0		3380907	0		>			
ANR	3380934	Identifier	curIndex		3380907	0					
ANR	3380935	PrimaryExpression	0		3380907	1					
ANR	3380936	CompoundStatement		6:27:103:103	3380907	1					
ANR	3380937	ExpressionStatement	curIndex -= MAC_SIZE	140:12:3431:3451	3380907	0	True				
ANR	3380938	AssignmentExpression	curIndex -= MAC_SIZE		3380907	0		-=			
ANR	3380939	Identifier	curIndex		3380907	0					
ANR	3380940	Identifier	MAC_SIZE		3380907	1					
ANR	3380941	ExpressionStatement	curIndex -= outgoingMdLen_	141:12:3465:3491	3380907	1	True				
ANR	3380942	AssignmentExpression	curIndex -= outgoingMdLen_		3380907	0		-=			
ANR	3380943	Identifier	curIndex		3380907	0					
ANR	3380944	Identifier	outgoingMdLen_		3380907	1					
ANR	3380945	IfStatement	if ( curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE )		3380907	2					
ANR	3380946	Condition	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE	142:16:3509:3547	3380907	0	True				
ANR	3380947	EqualityExpression	curIndex == SAFE_MSG_CRYPTO_HEADER_SIZE		3380907	0		==			
ANR	3380948	Identifier	curIndex		3380907	0					
ANR	3380949	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3380907	1					
ANR	3380950	CompoundStatement		9:57:236:236	3380907	1					
ANR	3380951	ExpressionStatement	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE	144:16:3604:3643	3380907	0	True				
ANR	3380952	AssignmentExpression	curIndex -= SAFE_MSG_CRYPTO_HEADER_SIZE		3380907	0		-=			
ANR	3380953	Identifier	curIndex		3380907	0					
ANR	3380954	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3380907	1					
ANR	3380955	ExpressionStatement	ASSERT ( curIndex >= 0 )	146:12:3671:3694	3380907	3	True				
ANR	3380956	CallExpression	ASSERT ( curIndex >= 0 )		3380907	0					
ANR	3380957	Callee	ASSERT		3380907	0					
ANR	3380958	Identifier	ASSERT		3380907	0					
ANR	3380959	ArgumentList	curIndex >= 0		3380907	1					
ANR	3380960	Argument	curIndex >= 0		3380907	0					
ANR	3380961	RelationalExpression	curIndex >= 0		3380907	0		>=			
ANR	3380962	Identifier	curIndex		3380907	0					
ANR	3380963	PrimaryExpression	0		3380907	1					
ANR	3380964	ExpressionStatement	free ( outgoingMD5KeyId_ )	149:8:3715:3738	3380907	1	True				
ANR	3380965	CallExpression	free ( outgoingMD5KeyId_ )		3380907	0					
ANR	3380966	Callee	free		3380907	0					
ANR	3380967	Identifier	free		3380907	0					
ANR	3380968	ArgumentList	outgoingMD5KeyId_		3380907	1					
ANR	3380969	Argument	outgoingMD5KeyId_		3380907	0					
ANR	3380970	Identifier	outgoingMD5KeyId_		3380907	0					
ANR	3380971	ExpressionStatement	outgoingMD5KeyId_ = 0	150:8:3748:3769	3380907	2	True				
ANR	3380972	AssignmentExpression	outgoingMD5KeyId_ = 0		3380907	0		=			
ANR	3380973	Identifier	outgoingMD5KeyId_		3380907	0					
ANR	3380974	PrimaryExpression	0		3380907	1					
ANR	3380975	ExpressionStatement	outgoingMdLen_ = 0	151:8:3779:3797	3380907	3	True				
ANR	3380976	AssignmentExpression	outgoingMdLen_ = 0		3380907	0		=			
ANR	3380977	Identifier	outgoingMdLen_		3380907	0					
ANR	3380978	PrimaryExpression	0		3380907	1					
ANR	3380979	IfStatement	if ( keyId )		3380907	3					
ANR	3380980	Condition	keyId	154:8:3814:3818	3380907	0	True				
ANR	3380981	Identifier	keyId		3380907	0					
ANR	3380982	CompoundStatement		21:15:507:507	3380907	1					
ANR	3380983	ExpressionStatement	outgoingMD5KeyId_ = strdup ( keyId )	155:8:3831:3864	3380907	0	True				
ANR	3380984	AssignmentExpression	outgoingMD5KeyId_ = strdup ( keyId )		3380907	0		=			
ANR	3380985	Identifier	outgoingMD5KeyId_		3380907	0					
ANR	3380986	CallExpression	strdup ( keyId )		3380907	1					
ANR	3380987	Callee	strdup		3380907	0					
ANR	3380988	Identifier	strdup		3380907	0					
ANR	3380989	ArgumentList	keyId		3380907	1					
ANR	3380990	Argument	keyId		3380907	0					
ANR	3380991	Identifier	keyId		3380907	0					
ANR	3380992	ExpressionStatement	outgoingMdLen_ = strlen ( outgoingMD5KeyId_ )	156:8:3874:3919	3380907	1	True				
ANR	3380993	AssignmentExpression	outgoingMdLen_ = strlen ( outgoingMD5KeyId_ )		3380907	0		=			
ANR	3380994	Identifier	outgoingMdLen_		3380907	0					
ANR	3380995	CallExpression	strlen ( outgoingMD5KeyId_ )		3380907	1					
ANR	3380996	Callee	strlen		3380907	0					
ANR	3380997	Identifier	strlen		3380907	0					
ANR	3380998	ArgumentList	outgoingMD5KeyId_		3380907	1					
ANR	3380999	Argument	outgoingMD5KeyId_		3380907	0					
ANR	3381000	Identifier	outgoingMD5KeyId_		3380907	0					
ANR	3381001	IfStatement	if ( curIndex == 0 )		3380907	2					
ANR	3381002	Condition	curIndex == 0	157:13:3934:3946	3380907	0	True				
ANR	3381003	EqualityExpression	curIndex == 0		3380907	0		==			
ANR	3381004	Identifier	curIndex		3380907	0					
ANR	3381005	PrimaryExpression	0		3380907	1					
ANR	3381006	CompoundStatement		24:29:636:636	3380907	1					
ANR	3381007	ExpressionStatement	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE	158:12:3964:4003	3380907	0	True				
ANR	3381008	AssignmentExpression	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE		3380907	0		+=			
ANR	3381009	Identifier	curIndex		3380907	0					
ANR	3381010	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3380907	1					
ANR	3381011	ExpressionStatement	curIndex += MAC_SIZE	160:8:4023:4043	3380907	3	True				
ANR	3381012	AssignmentExpression	curIndex += MAC_SIZE		3380907	0		+=			
ANR	3381013	Identifier	curIndex		3380907	0					
ANR	3381014	Identifier	MAC_SIZE		3380907	1					
ANR	3381015	ExpressionStatement	curIndex += outgoingMdLen_	161:8:4053:4079	3380907	4	True				
ANR	3381016	AssignmentExpression	curIndex += outgoingMdLen_		3380907	0		+=			
ANR	3381017	Identifier	curIndex		3380907	0					
ANR	3381018	Identifier	outgoingMdLen_		3380907	1					
ANR	3381019	ExpressionStatement	length = curIndex	164:4:4093:4110	3380907	4	True				
ANR	3381020	AssignmentExpression	length = curIndex		3380907	0		=			
ANR	3381021	Identifier	length		3380907	0					
ANR	3381022	Identifier	curIndex		3380907	1					
ANR	3381023	ReturnStatement	return inited ;	166:4:4117:4130	3380907	5	True				
ANR	3381024	Identifier	inited		3380907	0					
ANR	3381025	ReturnType	bool		3380907	1					
ANR	3381026	Identifier	_condorPacket :: init_MD		3380907	2					
ANR	3381027	ParameterList	const char * keyId		3380907	3					
ANR	3381028	Parameter	const char * keyId	133:28:3293:3310	3380907	0	True				
ANR	3381029	ParameterType	const char *		3380907	0					
ANR	3381030	Identifier	keyId		3380907	1					
ANR	3381031	CFGEntryNode	ENTRY		3380907		True				
ANR	3381032	CFGExitNode	EXIT		3380907		True				
ANR	3381033	Symbol	strlen		3380907						
ANR	3381034	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		3380907						
ANR	3381035	Symbol	inited		3380907						
ANR	3381036	Symbol	MAC_SIZE		3380907						
ANR	3381037	Symbol	true		3380907						
ANR	3381038	Symbol	length		3380907						
ANR	3381039	Symbol	keyId		3380907						
ANR	3381040	Symbol	outgoingMdLen_		3380907						
ANR	3381041	Symbol	strdup		3380907						
ANR	3381042	Symbol	curIndex		3380907						
ANR	3381043	Symbol	outgoingMD5KeyId_		3380907						
ANR	3381044	Symbol	empty		3380907						
ANR	3381045	DeclStmt									
ANR	3381046	Decl							uint16_t	uint16_t	stemp
ANR	3381047	DeclStmt									
ANR	3381048	Decl							uint32_t	uint32_t	ltemp
ANR	3381049	Function	_condorPacket :: checkHeader	235:0:5812:7879							
ANR	3381050	FunctionDef	"_condorPacket :: checkHeader (int & len , void * & dta)"		3381049	0					
ANR	3381051	CompoundStatement		236:0:5870:7879	3381049	0					
ANR	3381052	IdentifierDeclStatement	uint16_t stemp ;	237:4:5876:5890	3381049	0	True				
ANR	3381053	IdentifierDecl	stemp		3381049	0					
ANR	3381054	IdentifierDeclType	uint16_t		3381049	0					
ANR	3381055	Identifier	stemp		3381049	1					
ANR	3381056	IdentifierDeclStatement	"short flags = 0 , mdKeyIdLen = 0 , encKeyIdLen = 0 ;"	238:4:5896:5944	3381049	1	True				
ANR	3381057	IdentifierDecl	flags = 0		3381049	0					
ANR	3381058	IdentifierDeclType	short		3381049	0					
ANR	3381059	Identifier	flags		3381049	1					
ANR	3381060	AssignmentExpression	flags = 0		3381049	2		=			
ANR	3381061	Identifier	flags		3381049	0					
ANR	3381062	PrimaryExpression	0		3381049	1					
ANR	3381063	IdentifierDecl	mdKeyIdLen = 0		3381049	1					
ANR	3381064	IdentifierDeclType	short		3381049	0					
ANR	3381065	Identifier	mdKeyIdLen		3381049	1					
ANR	3381066	AssignmentExpression	mdKeyIdLen = 0		3381049	2		=			
ANR	3381067	Identifier	mdKeyIdLen		3381049	0					
ANR	3381068	PrimaryExpression	0		3381049	1					
ANR	3381069	IdentifierDecl	encKeyIdLen = 0		3381049	2					
ANR	3381070	IdentifierDeclType	short		3381049	0					
ANR	3381071	Identifier	encKeyIdLen		3381049	1					
ANR	3381072	AssignmentExpression	encKeyIdLen = 0		3381049	2		=			
ANR	3381073	Identifier	encKeyIdLen		3381049	0					
ANR	3381074	PrimaryExpression	0		3381049	1					
ANR	3381075	IfStatement	"if ( memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 ) == 0 )"		3381049	2					
ANR	3381076	Condition	"memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 ) == 0"	240:7:5954:6016	3381049	0	True				
ANR	3381077	EqualityExpression	"memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 ) == 0"		3381049	0		==			
ANR	3381078	CallExpression	"memcmp ( data , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 )"		3381049	0					
ANR	3381079	Callee	memcmp		3381049	0					
ANR	3381080	Identifier	memcmp		3381049	0					
ANR	3381081	ArgumentList	data		3381049	1					
ANR	3381082	Argument	data		3381049	0					
ANR	3381083	Identifier	data		3381049	0					
ANR	3381084	Argument	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		3381049	1					
ANR	3381085	Identifier	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		3381049	0					
ANR	3381086	Argument	4		3381049	2					
ANR	3381087	PrimaryExpression	4		3381049	0					
ANR	3381088	PrimaryExpression	0		3381049	1					
ANR	3381089	CompoundStatement		5:72:148:148	3381049	1					
ANR	3381090	ExpressionStatement	data += 4	243:8:6136:6145	3381049	0	True				
ANR	3381091	AssignmentExpression	data += 4		3381049	0		+=			
ANR	3381092	Identifier	data		3381049	0					
ANR	3381093	PrimaryExpression	4		3381049	1					
ANR	3381094	ExpressionStatement	"memcpy ( & stemp , data , 2 )"	244:8:6155:6178	3381049	1	True				
ANR	3381095	CallExpression	"memcpy ( & stemp , data , 2 )"		3381049	0					
ANR	3381096	Callee	memcpy		3381049	0					
ANR	3381097	Identifier	memcpy		3381049	0					
ANR	3381098	ArgumentList	& stemp		3381049	1					
ANR	3381099	Argument	& stemp		3381049	0					
ANR	3381100	UnaryOperationExpression	& stemp		3381049	0					
ANR	3381101	UnaryOperator	&		3381049	0					
ANR	3381102	Identifier	stemp		3381049	1					
ANR	3381103	Argument	data		3381049	1					
ANR	3381104	Identifier	data		3381049	0					
ANR	3381105	Argument	2		3381049	2					
ANR	3381106	PrimaryExpression	2		3381049	0					
ANR	3381107	ExpressionStatement	flags = ntohs ( stemp )	245:8:6188:6208	3381049	2	True				
ANR	3381108	AssignmentExpression	flags = ntohs ( stemp )		3381049	0		=			
ANR	3381109	Identifier	flags		3381049	0					
ANR	3381110	CallExpression	ntohs ( stemp )		3381049	1					
ANR	3381111	Callee	ntohs		3381049	0					
ANR	3381112	Identifier	ntohs		3381049	0					
ANR	3381113	ArgumentList	stemp		3381049	1					
ANR	3381114	Argument	stemp		3381049	0					
ANR	3381115	Identifier	stemp		3381049	0					
ANR	3381116	ExpressionStatement	data += 2	246:8:6218:6227	3381049	3	True				
ANR	3381117	AssignmentExpression	data += 2		3381049	0		+=			
ANR	3381118	Identifier	data		3381049	0					
ANR	3381119	PrimaryExpression	2		3381049	1					
ANR	3381120	ExpressionStatement	"memcpy ( & stemp , data , 2 )"	247:8:6237:6260	3381049	4	True				
ANR	3381121	CallExpression	"memcpy ( & stemp , data , 2 )"		3381049	0					
ANR	3381122	Callee	memcpy		3381049	0					
ANR	3381123	Identifier	memcpy		3381049	0					
ANR	3381124	ArgumentList	& stemp		3381049	1					
ANR	3381125	Argument	& stemp		3381049	0					
ANR	3381126	UnaryOperationExpression	& stemp		3381049	0					
ANR	3381127	UnaryOperator	&		3381049	0					
ANR	3381128	Identifier	stemp		3381049	1					
ANR	3381129	Argument	data		3381049	1					
ANR	3381130	Identifier	data		3381049	0					
ANR	3381131	Argument	2		3381049	2					
ANR	3381132	PrimaryExpression	2		3381049	0					
ANR	3381133	ExpressionStatement	mdKeyIdLen = ntohs ( stemp )	248:8:6270:6295	3381049	5	True				
ANR	3381134	AssignmentExpression	mdKeyIdLen = ntohs ( stemp )		3381049	0		=			
ANR	3381135	Identifier	mdKeyIdLen		3381049	0					
ANR	3381136	CallExpression	ntohs ( stemp )		3381049	1					
ANR	3381137	Callee	ntohs		3381049	0					
ANR	3381138	Identifier	ntohs		3381049	0					
ANR	3381139	ArgumentList	stemp		3381049	1					
ANR	3381140	Argument	stemp		3381049	0					
ANR	3381141	Identifier	stemp		3381049	0					
ANR	3381142	ExpressionStatement	data += 2	249:8:6305:6314	3381049	6	True				
ANR	3381143	AssignmentExpression	data += 2		3381049	0		+=			
ANR	3381144	Identifier	data		3381049	0					
ANR	3381145	PrimaryExpression	2		3381049	1					
ANR	3381146	ExpressionStatement	"memcpy ( & stemp , data , 2 )"	250:8:6324:6347	3381049	7	True				
ANR	3381147	CallExpression	"memcpy ( & stemp , data , 2 )"		3381049	0					
ANR	3381148	Callee	memcpy		3381049	0					
ANR	3381149	Identifier	memcpy		3381049	0					
ANR	3381150	ArgumentList	& stemp		3381049	1					
ANR	3381151	Argument	& stemp		3381049	0					
ANR	3381152	UnaryOperationExpression	& stemp		3381049	0					
ANR	3381153	UnaryOperator	&		3381049	0					
ANR	3381154	Identifier	stemp		3381049	1					
ANR	3381155	Argument	data		3381049	1					
ANR	3381156	Identifier	data		3381049	0					
ANR	3381157	Argument	2		3381049	2					
ANR	3381158	PrimaryExpression	2		3381049	0					
ANR	3381159	ExpressionStatement	encKeyIdLen = ntohs ( stemp )	251:8:6357:6383	3381049	8	True				
ANR	3381160	AssignmentExpression	encKeyIdLen = ntohs ( stemp )		3381049	0		=			
ANR	3381161	Identifier	encKeyIdLen		3381049	0					
ANR	3381162	CallExpression	ntohs ( stemp )		3381049	1					
ANR	3381163	Callee	ntohs		3381049	0					
ANR	3381164	Identifier	ntohs		3381049	0					
ANR	3381165	ArgumentList	stemp		3381049	1					
ANR	3381166	Argument	stemp		3381049	0					
ANR	3381167	Identifier	stemp		3381049	0					
ANR	3381168	ExpressionStatement	data += 2	252:8:6393:6402	3381049	9	True				
ANR	3381169	AssignmentExpression	data += 2		3381049	0		+=			
ANR	3381170	Identifier	data		3381049	0					
ANR	3381171	PrimaryExpression	2		3381049	1					
ANR	3381172	ExpressionStatement	length -= SAFE_MSG_CRYPTO_HEADER_SIZE	254:8:6413:6450	3381049	10	True				
ANR	3381173	AssignmentExpression	length -= SAFE_MSG_CRYPTO_HEADER_SIZE		3381049	0		-=			
ANR	3381174	Identifier	length		3381049	0					
ANR	3381175	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3381049	1					
ANR	3381176	ExpressionStatement	"dprintf ( D_NETWORK , ""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"" , mdKeyIdLen , encKeyIdLen )"	255:8:6460:6629	3381049	11	True				
ANR	3381177	CallExpression	"dprintf ( D_NETWORK , ""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"" , mdKeyIdLen , encKeyIdLen )"		3381049	0					
ANR	3381178	Callee	dprintf		3381049	0					
ANR	3381179	Identifier	dprintf		3381049	0					
ANR	3381180	ArgumentList	D_NETWORK		3381049	1					
ANR	3381181	Argument	D_NETWORK		3381049	0					
ANR	3381182	Identifier	D_NETWORK		3381049	0					
ANR	3381183	Argument	"""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"""		3381049	1					
ANR	3381184	PrimaryExpression	"""Sec Hdr: tag(4), flags(2), mdKeyIdLen(2), encKeyIdLen(2), mdKey(%d), MAC(16), encKey(%d)\\n"""		3381049	0					
ANR	3381185	Argument	mdKeyIdLen		3381049	2					
ANR	3381186	Identifier	mdKeyIdLen		3381049	0					
ANR	3381187	Argument	encKeyIdLen		3381049	3					
ANR	3381188	Identifier	encKeyIdLen		3381049	0					
ANR	3381189	IfStatement	if ( ( flags & MD_IS_ON ) && ( mdKeyIdLen > 0 ) )		3381049	12					
ANR	3381190	Condition	( flags & MD_IS_ON ) && ( mdKeyIdLen > 0 )	259:12:6644:6681	3381049	0	True				
ANR	3381191	AndExpression	( flags & MD_IS_ON ) && ( mdKeyIdLen > 0 )		3381049	0		&&			
ANR	3381192	BitAndExpression	flags & MD_IS_ON		3381049	0		&			
ANR	3381193	Identifier	flags		3381049	0					
ANR	3381194	Identifier	MD_IS_ON		3381049	1					
ANR	3381195	RelationalExpression	mdKeyIdLen > 0		3381049	1		>			
ANR	3381196	Identifier	mdKeyIdLen		3381049	0					
ANR	3381197	PrimaryExpression	0		3381049	1					
ANR	3381198	CompoundStatement		24:52:813:813	3381049	1					
ANR	3381199	ExpressionStatement	incomingMD5KeyId_ = ( char * ) malloc ( mdKeyIdLen + 1 )	261:12:6730:6779	3381049	0	True				
ANR	3381200	AssignmentExpression	incomingMD5KeyId_ = ( char * ) malloc ( mdKeyIdLen + 1 )		3381049	0		=			
ANR	3381201	Identifier	incomingMD5KeyId_		3381049	0					
ANR	3381202	CastExpression	( char * ) malloc ( mdKeyIdLen + 1 )		3381049	1					
ANR	3381203	CastTarget	char *		3381049	0					
ANR	3381204	CallExpression	malloc ( mdKeyIdLen + 1 )		3381049	1					
ANR	3381205	Callee	malloc		3381049	0					
ANR	3381206	Identifier	malloc		3381049	0					
ANR	3381207	ArgumentList	mdKeyIdLen + 1		3381049	1					
ANR	3381208	Argument	mdKeyIdLen + 1		3381049	0					
ANR	3381209	AdditiveExpression	mdKeyIdLen + 1		3381049	0		+			
ANR	3381210	Identifier	mdKeyIdLen		3381049	0					
ANR	3381211	PrimaryExpression	1		3381049	1					
ANR	3381212	ExpressionStatement	"memset ( incomingMD5KeyId_ , 0 , mdKeyIdLen + 1 )"	262:12:6793:6835	3381049	1	True				
ANR	3381213	CallExpression	"memset ( incomingMD5KeyId_ , 0 , mdKeyIdLen + 1 )"		3381049	0					
ANR	3381214	Callee	memset		3381049	0					
ANR	3381215	Identifier	memset		3381049	0					
ANR	3381216	ArgumentList	incomingMD5KeyId_		3381049	1					
ANR	3381217	Argument	incomingMD5KeyId_		3381049	0					
ANR	3381218	Identifier	incomingMD5KeyId_		3381049	0					
ANR	3381219	Argument	0		3381049	1					
ANR	3381220	PrimaryExpression	0		3381049	0					
ANR	3381221	Argument	mdKeyIdLen + 1		3381049	2					
ANR	3381222	AdditiveExpression	mdKeyIdLen + 1		3381049	0		+			
ANR	3381223	Identifier	mdKeyIdLen		3381049	0					
ANR	3381224	PrimaryExpression	1		3381049	1					
ANR	3381225	ExpressionStatement	"memcpy ( incomingMD5KeyId_ , data , mdKeyIdLen )"	263:12:6849:6892	3381049	2	True				
ANR	3381226	CallExpression	"memcpy ( incomingMD5KeyId_ , data , mdKeyIdLen )"		3381049	0					
ANR	3381227	Callee	memcpy		3381049	0					
ANR	3381228	Identifier	memcpy		3381049	0					
ANR	3381229	ArgumentList	incomingMD5KeyId_		3381049	1					
ANR	3381230	Argument	incomingMD5KeyId_		3381049	0					
ANR	3381231	Identifier	incomingMD5KeyId_		3381049	0					
ANR	3381232	Argument	data		3381049	1					
ANR	3381233	Identifier	data		3381049	0					
ANR	3381234	Argument	mdKeyIdLen		3381049	2					
ANR	3381235	Identifier	mdKeyIdLen		3381049	0					
ANR	3381236	ExpressionStatement	data += mdKeyIdLen	264:12:6906:6924	3381049	3	True				
ANR	3381237	AssignmentExpression	data += mdKeyIdLen		3381049	0		+=			
ANR	3381238	Identifier	data		3381049	0					
ANR	3381239	Identifier	mdKeyIdLen		3381049	1					
ANR	3381240	ExpressionStatement	length -= mdKeyIdLen	265:12:6938:6958	3381049	4	True				
ANR	3381241	AssignmentExpression	length -= mdKeyIdLen		3381049	0		-=			
ANR	3381242	Identifier	length		3381049	0					
ANR	3381243	Identifier	mdKeyIdLen		3381049	1					
ANR	3381244	ExpressionStatement	md_ = ( unsigned char * ) malloc ( MAC_SIZE )	268:12:7008:7048	3381049	5	True				
ANR	3381245	AssignmentExpression	md_ = ( unsigned char * ) malloc ( MAC_SIZE )		3381049	0		=			
ANR	3381246	Identifier	md_		3381049	0					
ANR	3381247	CastExpression	( unsigned char * ) malloc ( MAC_SIZE )		3381049	1					
ANR	3381248	CastTarget	unsigned char *		3381049	0					
ANR	3381249	CallExpression	malloc ( MAC_SIZE )		3381049	1					
ANR	3381250	Callee	malloc		3381049	0					
ANR	3381251	Identifier	malloc		3381049	0					
ANR	3381252	ArgumentList	MAC_SIZE		3381049	1					
ANR	3381253	Argument	MAC_SIZE		3381049	0					
ANR	3381254	Identifier	MAC_SIZE		3381049	0					
ANR	3381255	ExpressionStatement	"memcpy ( ( void * ) & md_ [ 0 ] , data , MAC_SIZE )"	269:12:7062:7100	3381049	6	True				
ANR	3381256	CallExpression	"memcpy ( ( void * ) & md_ [ 0 ] , data , MAC_SIZE )"		3381049	0					
ANR	3381257	Callee	memcpy		3381049	0					
ANR	3381258	Identifier	memcpy		3381049	0					
ANR	3381259	ArgumentList	( void * ) & md_ [ 0 ]		3381049	1					
ANR	3381260	Argument	( void * ) & md_ [ 0 ]		3381049	0					
ANR	3381261	CastExpression	( void * ) & md_ [ 0 ]		3381049	0					
ANR	3381262	CastTarget	void *		3381049	0					
ANR	3381263	UnaryOperationExpression	& md_ [ 0 ]		3381049	1					
ANR	3381264	UnaryOperator	&		3381049	0					
ANR	3381265	ArrayIndexing	md_ [ 0 ]		3381049	1					
ANR	3381266	Identifier	md_		3381049	0					
ANR	3381267	PrimaryExpression	0		3381049	1					
ANR	3381268	Argument	data		3381049	1					
ANR	3381269	Identifier	data		3381049	0					
ANR	3381270	Argument	MAC_SIZE		3381049	2					
ANR	3381271	Identifier	MAC_SIZE		3381049	0					
ANR	3381272	ExpressionStatement	data += MAC_SIZE	270:12:7114:7130	3381049	7	True				
ANR	3381273	AssignmentExpression	data += MAC_SIZE		3381049	0		+=			
ANR	3381274	Identifier	data		3381049	0					
ANR	3381275	Identifier	MAC_SIZE		3381049	1					
ANR	3381276	ExpressionStatement	length -= MAC_SIZE	271:12:7144:7162	3381049	8	True				
ANR	3381277	AssignmentExpression	length -= MAC_SIZE		3381049	0		-=			
ANR	3381278	Identifier	length		3381049	0					
ANR	3381279	Identifier	MAC_SIZE		3381049	1					
ANR	3381280	ExpressionStatement	verified_ = false	272:12:7176:7193	3381049	9	True				
ANR	3381281	AssignmentExpression	verified_ = false		3381049	0		=			
ANR	3381282	Identifier	verified_		3381049	0					
ANR	3381283	Identifier	false		3381049	1					
ANR	3381284	ElseStatement	else		3381049	0					
ANR	3381285	CompoundStatement		39:13:1347:1347	3381049	0					
ANR	3381286	IfStatement	if ( flags & MD_IS_ON )		3381049	0					
ANR	3381287	Condition	flags & MD_IS_ON	275:16:7236:7251	3381049	0	True				
ANR	3381288	BitAndExpression	flags & MD_IS_ON		3381049	0		&			
ANR	3381289	Identifier	flags		3381049	0					
ANR	3381290	Identifier	MD_IS_ON		3381049	1					
ANR	3381291	CompoundStatement		40:34:1383:1383	3381049	1					
ANR	3381292	ExpressionStatement	"dprintf ( D_ALWAYS , ""Incorrect MD header information\\n"" )"	276:16:7272:7325	3381049	0	True				
ANR	3381293	CallExpression	"dprintf ( D_ALWAYS , ""Incorrect MD header information\\n"" )"		3381049	0					
ANR	3381294	Callee	dprintf		3381049	0					
ANR	3381295	Identifier	dprintf		3381049	0					
ANR	3381296	ArgumentList	D_ALWAYS		3381049	1					
ANR	3381297	Argument	D_ALWAYS		3381049	0					
ANR	3381298	Identifier	D_ALWAYS		3381049	0					
ANR	3381299	Argument	"""Incorrect MD header information\\n"""		3381049	1					
ANR	3381300	PrimaryExpression	"""Incorrect MD header information\\n"""		3381049	0					
ANR	3381301	IfStatement	if ( ( flags & ENCRYPTION_IS_ON ) && ( encKeyIdLen > 0 ) )		3381049	13					
ANR	3381302	Condition	( flags & ENCRYPTION_IS_ON ) && ( encKeyIdLen > 0 )	280:12:7364:7410	3381049	0	True				
ANR	3381303	AndExpression	( flags & ENCRYPTION_IS_ON ) && ( encKeyIdLen > 0 )		3381049	0		&&			
ANR	3381304	BitAndExpression	flags & ENCRYPTION_IS_ON		3381049	0		&			
ANR	3381305	Identifier	flags		3381049	0					
ANR	3381306	Identifier	ENCRYPTION_IS_ON		3381049	1					
ANR	3381307	RelationalExpression	encKeyIdLen > 0		3381049	1		>			
ANR	3381308	Identifier	encKeyIdLen		3381049	0					
ANR	3381309	PrimaryExpression	0		3381049	1					
ANR	3381310	CompoundStatement		45:61:1542:1542	3381049	1					
ANR	3381311	ExpressionStatement	incomingEncKeyId_ = ( char * ) malloc ( encKeyIdLen + 1 )	281:12:7427:7477	3381049	0	True				
ANR	3381312	AssignmentExpression	incomingEncKeyId_ = ( char * ) malloc ( encKeyIdLen + 1 )		3381049	0		=			
ANR	3381313	Identifier	incomingEncKeyId_		3381049	0					
ANR	3381314	CastExpression	( char * ) malloc ( encKeyIdLen + 1 )		3381049	1					
ANR	3381315	CastTarget	char *		3381049	0					
ANR	3381316	CallExpression	malloc ( encKeyIdLen + 1 )		3381049	1					
ANR	3381317	Callee	malloc		3381049	0					
ANR	3381318	Identifier	malloc		3381049	0					
ANR	3381319	ArgumentList	encKeyIdLen + 1		3381049	1					
ANR	3381320	Argument	encKeyIdLen + 1		3381049	0					
ANR	3381321	AdditiveExpression	encKeyIdLen + 1		3381049	0		+			
ANR	3381322	Identifier	encKeyIdLen		3381049	0					
ANR	3381323	PrimaryExpression	1		3381049	1					
ANR	3381324	ExpressionStatement	"memset ( incomingEncKeyId_ , 0 , encKeyIdLen + 1 )"	282:12:7491:7536	3381049	1	True				
ANR	3381325	CallExpression	"memset ( incomingEncKeyId_ , 0 , encKeyIdLen + 1 )"		3381049	0					
ANR	3381326	Callee	memset		3381049	0					
ANR	3381327	Identifier	memset		3381049	0					
ANR	3381328	ArgumentList	incomingEncKeyId_		3381049	1					
ANR	3381329	Argument	incomingEncKeyId_		3381049	0					
ANR	3381330	Identifier	incomingEncKeyId_		3381049	0					
ANR	3381331	Argument	0		3381049	1					
ANR	3381332	PrimaryExpression	0		3381049	0					
ANR	3381333	Argument	encKeyIdLen + 1		3381049	2					
ANR	3381334	AdditiveExpression	encKeyIdLen + 1		3381049	0		+			
ANR	3381335	Identifier	encKeyIdLen		3381049	0					
ANR	3381336	PrimaryExpression	1		3381049	1					
ANR	3381337	ExpressionStatement	"memcpy ( incomingEncKeyId_ , data , encKeyIdLen )"	283:12:7550:7594	3381049	2	True				
ANR	3381338	CallExpression	"memcpy ( incomingEncKeyId_ , data , encKeyIdLen )"		3381049	0					
ANR	3381339	Callee	memcpy		3381049	0					
ANR	3381340	Identifier	memcpy		3381049	0					
ANR	3381341	ArgumentList	incomingEncKeyId_		3381049	1					
ANR	3381342	Argument	incomingEncKeyId_		3381049	0					
ANR	3381343	Identifier	incomingEncKeyId_		3381049	0					
ANR	3381344	Argument	data		3381049	1					
ANR	3381345	Identifier	data		3381049	0					
ANR	3381346	Argument	encKeyIdLen		3381049	2					
ANR	3381347	Identifier	encKeyIdLen		3381049	0					
ANR	3381348	ExpressionStatement	data += encKeyIdLen	284:12:7608:7627	3381049	3	True				
ANR	3381349	AssignmentExpression	data += encKeyIdLen		3381049	0		+=			
ANR	3381350	Identifier	data		3381049	0					
ANR	3381351	Identifier	encKeyIdLen		3381049	1					
ANR	3381352	ExpressionStatement	length -= encKeyIdLen	285:12:7641:7662	3381049	4	True				
ANR	3381353	AssignmentExpression	length -= encKeyIdLen		3381049	0		-=			
ANR	3381354	Identifier	length		3381049	0					
ANR	3381355	Identifier	encKeyIdLen		3381049	1					
ANR	3381356	ElseStatement	else		3381049	0					
ANR	3381357	CompoundStatement		52:13:1816:1816	3381049	0					
ANR	3381358	IfStatement	if ( flags & ENCRYPTION_IS_ON )		3381049	0					
ANR	3381359	Condition	flags & ENCRYPTION_IS_ON	288:16:7705:7728	3381049	0	True				
ANR	3381360	BitAndExpression	flags & ENCRYPTION_IS_ON		3381049	0		&			
ANR	3381361	Identifier	flags		3381049	0					
ANR	3381362	Identifier	ENCRYPTION_IS_ON		3381049	1					
ANR	3381363	CompoundStatement		53:42:1860:1860	3381049	1					
ANR	3381364	ExpressionStatement	"dprintf ( D_ALWAYS , ""Incorrect ENC Header information\\n"" )"	289:16:7749:7804	3381049	0	True				
ANR	3381365	CallExpression	"dprintf ( D_ALWAYS , ""Incorrect ENC Header information\\n"" )"		3381049	0					
ANR	3381366	Callee	dprintf		3381049	0					
ANR	3381367	Identifier	dprintf		3381049	0					
ANR	3381368	ArgumentList	D_ALWAYS		3381049	1					
ANR	3381369	Argument	D_ALWAYS		3381049	0					
ANR	3381370	Identifier	D_ALWAYS		3381049	0					
ANR	3381371	Argument	"""Incorrect ENC Header information\\n"""		3381049	1					
ANR	3381372	PrimaryExpression	"""Incorrect ENC Header information\\n"""		3381049	0					
ANR	3381373	ExpressionStatement	len = length	293:8:7839:7851	3381049	14	True				
ANR	3381374	AssignmentExpression	len = length		3381049	0		=			
ANR	3381375	Identifier	len		3381049	0					
ANR	3381376	Identifier	length		3381049	1					
ANR	3381377	ExpressionStatement	dta = data	294:8:7861:7871	3381049	15	True				
ANR	3381378	AssignmentExpression	dta = data		3381049	0		=			
ANR	3381379	Identifier	dta		3381049	0					
ANR	3381380	Identifier	data		3381049	1					
ANR	3381381	ReturnType	void		3381049	1					
ANR	3381382	Identifier	_condorPacket :: checkHeader		3381049	2					
ANR	3381383	ParameterList	"int & len , void * & dta"		3381049	3					
ANR	3381384	Parameter	int & len	235:34:5846:5854	3381049	0	True				
ANR	3381385	ParameterType	int &		3381049	0					
ANR	3381386	Identifier	len		3381049	1					
ANR	3381387	Parameter	void * & dta	235:45:5857:5867	3381049	1	True				
ANR	3381388	ParameterType	void * &		3381049	0					
ANR	3381389	Identifier	dta		3381049	1					
ANR	3381390	CFGEntryNode	ENTRY		3381049		True				
ANR	3381391	CFGExitNode	EXIT		3381049		True				
ANR	3381392	Symbol	malloc		3381049						
ANR	3381393	Symbol	data		3381049						
ANR	3381394	Symbol	MD_IS_ON		3381049						
ANR	3381395	Symbol	flags		3381049						
ANR	3381396	Symbol	length		3381049						
ANR	3381397	Symbol	false		3381049						
ANR	3381398	Symbol	D_ALWAYS		3381049						
ANR	3381399	Symbol	mdKeyIdLen		3381049						
ANR	3381400	Symbol	md_		3381049						
ANR	3381401	Symbol	ENCRYPTION_IS_ON		3381049						
ANR	3381402	Symbol	stemp		3381049						
ANR	3381403	Symbol	incomingEncKeyId_		3381049						
ANR	3381404	Symbol	encKeyIdLen		3381049						
ANR	3381405	Symbol	dta		3381049						
ANR	3381406	Symbol	ntohs		3381049						
ANR	3381407	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		3381049						
ANR	3381408	Symbol	memcmp		3381049						
ANR	3381409	Symbol	len		3381049						
ANR	3381410	Symbol	MAC_SIZE		3381049						
ANR	3381411	Symbol	verified_		3381049						
ANR	3381412	Symbol	incomingMD5KeyId_		3381049						
ANR	3381413	Symbol	D_NETWORK		3381049						
ANR	3381414	Symbol	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		3381049						
ANR	3381415	Symbol	& stemp		3381049						
ANR	3381416	Function	_condorPacket :: verifyMD	298:0:7882:8805							
ANR	3381417	FunctionDef	_condorPacket :: verifyMD (Condor_MD_MAC * mdChecker)		3381416	0					
ANR	3381418	CompoundStatement		299:0:7938:8805	3381416	0					
ANR	3381419	IfStatement	if ( mdChecker )		3381416	0					
ANR	3381420	Condition	mdChecker	300:8:7948:7956	3381416	0	True				
ANR	3381421	Identifier	mdChecker		3381416	0					
ANR	3381422	CompoundStatement		2:19:20:20	3381416	1					
ANR	3381423	IfStatement	if ( md_ == NULL )		3381416	0					
ANR	3381424	Condition	md_ == NULL	301:12:7973:7983	3381416	0	True				
ANR	3381425	EqualityExpression	md_ == NULL		3381416	0		==			
ANR	3381426	Identifier	md_		3381416	0					
ANR	3381427	Identifier	NULL		3381416	1					
ANR	3381428	CompoundStatement		3:25:47:47	3381416	1					
ANR	3381429	ExpressionStatement	verified_ = false	302:12:8000:8017	3381416	0	True				
ANR	3381430	AssignmentExpression	verified_ = false		3381416	0		=			
ANR	3381431	Identifier	verified_		3381416	0					
ANR	3381432	Identifier	false		3381416	1					
ANR	3381433	ReturnStatement	return verified_ ;	303:12:8031:8047	3381416	1	True				
ANR	3381434	Identifier	verified_		3381416	0					
ANR	3381435	ElseStatement	else		3381416	0					
ANR	3381436	CompoundStatement		7:13:133:133	3381416	0					
ANR	3381437	IfStatement	if ( ( curIndex == 0 ) && ! verified_ )		3381416	0					
ANR	3381438	Condition	( curIndex == 0 ) && ! verified_	306:17:8091:8119	3381416	0	True				
ANR	3381439	AndExpression	( curIndex == 0 ) && ! verified_		3381416	0		&&			
ANR	3381440	EqualityExpression	curIndex == 0		3381416	0		==			
ANR	3381441	Identifier	curIndex		3381416	0					
ANR	3381442	PrimaryExpression	0		3381416	1					
ANR	3381443	UnaryOperationExpression	! verified_		3381416	1					
ANR	3381444	UnaryOperator	!		3381416	0					
ANR	3381445	Identifier	verified_		3381416	1					
ANR	3381446	CompoundStatement		8:48:183:183	3381416	1					
ANR	3381447	ExpressionStatement	"mdChecker -> addMD ( ( unsigned char * ) data , length )"	307:16:8140:8187	3381416	0	True				
ANR	3381448	CallExpression	"mdChecker -> addMD ( ( unsigned char * ) data , length )"		3381416	0					
ANR	3381449	Callee	mdChecker -> addMD		3381416	0					
ANR	3381450	PtrMemberAccess	mdChecker -> addMD		3381416	0					
ANR	3381451	Identifier	mdChecker		3381416	0					
ANR	3381452	Identifier	addMD		3381416	1					
ANR	3381453	ArgumentList	( unsigned char * ) data		3381416	1					
ANR	3381454	Argument	( unsigned char * ) data		3381416	0					
ANR	3381455	CastExpression	( unsigned char * ) data		3381416	0					
ANR	3381456	CastTarget	unsigned char *		3381416	0					
ANR	3381457	Identifier	data		3381416	1					
ANR	3381458	Argument	length		3381416	1					
ANR	3381459	Identifier	length		3381416	0					
ANR	3381460	IfStatement	if ( mdChecker -> verifyMD ( ( unsigned char * ) & md_ [ 0 ] ) )		3381416	1					
ANR	3381461	Condition	mdChecker -> verifyMD ( ( unsigned char * ) & md_ [ 0 ] )	309:20:8222:8266	3381416	0	True				
ANR	3381462	CallExpression	mdChecker -> verifyMD ( ( unsigned char * ) & md_ [ 0 ] )		3381416	0					
ANR	3381463	Callee	mdChecker -> verifyMD		3381416	0					
ANR	3381464	PtrMemberAccess	mdChecker -> verifyMD		3381416	0					
ANR	3381465	Identifier	mdChecker		3381416	0					
ANR	3381466	Identifier	verifyMD		3381416	1					
ANR	3381467	ArgumentList	( unsigned char * ) & md_ [ 0 ]		3381416	1					
ANR	3381468	Argument	( unsigned char * ) & md_ [ 0 ]		3381416	0					
ANR	3381469	CastExpression	( unsigned char * ) & md_ [ 0 ]		3381416	0					
ANR	3381470	CastTarget	unsigned char *		3381416	0					
ANR	3381471	UnaryOperationExpression	& md_ [ 0 ]		3381416	1					
ANR	3381472	UnaryOperator	&		3381416	0					
ANR	3381473	ArrayIndexing	md_ [ 0 ]		3381416	1					
ANR	3381474	Identifier	md_		3381416	0					
ANR	3381475	PrimaryExpression	0		3381416	1					
ANR	3381476	CompoundStatement		11:67:330:330	3381416	1					
ANR	3381477	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"	310:20:8291:8328	3381416	0	True				
ANR	3381478	CallExpression	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"		3381416	0					
ANR	3381479	Callee	dprintf		3381416	0					
ANR	3381480	Identifier	dprintf		3381416	0					
ANR	3381481	ArgumentList	D_SECURITY		3381416	1					
ANR	3381482	Argument	D_SECURITY		3381416	0					
ANR	3381483	Identifier	D_SECURITY		3381416	0					
ANR	3381484	Argument	"""MD verified!\\n"""		3381416	1					
ANR	3381485	PrimaryExpression	"""MD verified!\\n"""		3381416	0					
ANR	3381486	ExpressionStatement	verified_ = true	311:20:8350:8366	3381416	1	True				
ANR	3381487	AssignmentExpression	verified_ = true		3381416	0		=			
ANR	3381488	Identifier	verified_		3381416	0					
ANR	3381489	Identifier	true		3381416	1					
ANR	3381490	ElseStatement	else		3381416	0					
ANR	3381491	CompoundStatement		15:21:468:468	3381416	0					
ANR	3381492	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verification failed for short message\\n"" )"	314:20:8429:8494	3381416	0	True				
ANR	3381493	CallExpression	"dprintf ( D_SECURITY , ""MD verification failed for short message\\n"" )"		3381416	0					
ANR	3381494	Callee	dprintf		3381416	0					
ANR	3381495	Identifier	dprintf		3381416	0					
ANR	3381496	ArgumentList	D_SECURITY		3381416	1					
ANR	3381497	Argument	D_SECURITY		3381416	0					
ANR	3381498	Identifier	D_SECURITY		3381416	0					
ANR	3381499	Argument	"""MD verification failed for short message\\n"""		3381416	1					
ANR	3381500	PrimaryExpression	"""MD verification failed for short message\\n"""		3381416	0					
ANR	3381501	ExpressionStatement	verified_ = false	315:20:8516:8533	3381416	1	True				
ANR	3381502	AssignmentExpression	verified_ = false		3381416	0		=			
ANR	3381503	Identifier	verified_		3381416	0					
ANR	3381504	Identifier	false		3381416	1					
ANR	3381505	ElseStatement	else		3381416	0					
ANR	3381506	IfStatement	if ( curIndex != 0 )		3381416	0					
ANR	3381507	Condition	curIndex != 0	318:21:8588:8600	3381416	0	True				
ANR	3381508	EqualityExpression	curIndex != 0		3381416	0		!=			
ANR	3381509	Identifier	curIndex		3381416	0					
ANR	3381510	PrimaryExpression	0		3381416	1					
ANR	3381511	CompoundStatement		20:36:664:664	3381416	1					
ANR	3381512	ExpressionStatement	verified_ = false	319:16:8621:8638	3381416	0	True				
ANR	3381513	AssignmentExpression	verified_ = false		3381416	0		=			
ANR	3381514	Identifier	verified_		3381416	0					
ANR	3381515	Identifier	false		3381416	1					
ANR	3381516	ElseStatement	else		3381416	0					
ANR	3381517	CompoundStatement		23:17:732:732	3381416	0					
ANR	3381518	ElseStatement	else		3381416	0					
ANR	3381519	CompoundStatement		28:9:810:810	3381416	0					
ANR	3381520	ExpressionStatement	verified_ = true	327:8:8759:8775	3381416	0	True				
ANR	3381521	AssignmentExpression	verified_ = true		3381416	0		=			
ANR	3381522	Identifier	verified_		3381416	0					
ANR	3381523	Identifier	true		3381416	1					
ANR	3381524	ReturnStatement	return verified_ ;	329:4:8787:8803	3381416	1	True				
ANR	3381525	Identifier	verified_		3381416	0					
ANR	3381526	ReturnType	bool		3381416	1					
ANR	3381527	Identifier	_condorPacket :: verifyMD		3381416	2					
ANR	3381528	ParameterList	Condor_MD_MAC * mdChecker		3381416	3					
ANR	3381529	Parameter	Condor_MD_MAC * mdChecker	298:29:7911:7935	3381416	0	True				
ANR	3381530	ParameterType	Condor_MD_MAC *		3381416	0					
ANR	3381531	Identifier	mdChecker		3381416	1					
ANR	3381532	CFGEntryNode	ENTRY		3381416		True				
ANR	3381533	CFGExitNode	EXIT		3381416		True				
ANR	3381534	Symbol	mdChecker -> verifyMD		3381416						
ANR	3381535	Symbol	NULL		3381416						
ANR	3381536	Symbol	verified_		3381416						
ANR	3381537	Symbol	data		3381416						
ANR	3381538	Symbol	D_SECURITY		3381416						
ANR	3381539	Symbol	false		3381416						
ANR	3381540	Symbol	length		3381416						
ANR	3381541	Symbol	true		3381416						
ANR	3381542	Symbol	md_		3381416						
ANR	3381543	Symbol	* mdChecker		3381416						
ANR	3381544	Symbol	curIndex		3381416						
ANR	3381545	Symbol	mdChecker		3381416						
ANR	3381546	Function	_condorPacket :: getn	343:0:9254:9519							
ANR	3381547	FunctionDef	"_condorPacket :: getn (char * dta , const int size)"		3381546	0					
ANR	3381548	CompoundStatement		344:0:9305:9519	3381546	0					
ANR	3381549	IfStatement	if ( ! dta || curIndex + size > length )		3381546	0					
ANR	3381550	Condition	! dta || curIndex + size > length	345:4:9311:9342	3381546	0	True				
ANR	3381551	OrExpression	! dta || curIndex + size > length		3381546	0		||			
ANR	3381552	UnaryOperationExpression	! dta		3381546	0					
ANR	3381553	UnaryOperator	!		3381546	0					
ANR	3381554	Identifier	dta		3381546	1					
ANR	3381555	RelationalExpression	curIndex + size > length		3381546	1		>			
ANR	3381556	AdditiveExpression	curIndex + size		3381546	0		+			
ANR	3381557	Identifier	curIndex		3381546	0					
ANR	3381558	Identifier	size		3381546	1					
ANR	3381559	Identifier	length		3381546	1					
ANR	3381560	CompoundStatement		2:38:39:39	3381546	1					
ANR	3381561	ExpressionStatement	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"	346:8:9355:9428	3381546	0	True				
ANR	3381562	CallExpression	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"		3381546	0					
ANR	3381563	Callee	dprintf		3381546	0					
ANR	3381564	Identifier	dprintf		3381546	0					
ANR	3381565	ArgumentList	D_NETWORK		3381546	1					
ANR	3381566	Argument	D_NETWORK		3381546	0					
ANR	3381567	Identifier	D_NETWORK		3381546	0					
ANR	3381568	Argument	"""dta is NULL or more data than queued is requested\\n"""		3381546	1					
ANR	3381569	PrimaryExpression	"""dta is NULL or more data than queued is requested\\n"""		3381546	0					
ANR	3381570	ReturnStatement	return - 1 ;	347:2:9432:9441	3381546	1	True				
ANR	3381571	UnaryOperationExpression	- 1		3381546	0					
ANR	3381572	UnaryOperator	-		3381546	0					
ANR	3381573	PrimaryExpression	1		3381546	1					
ANR	3381574	ExpressionStatement	"memcpy ( dta , & data [ curIndex ] , size )"	349:1:9450:9484	3381546	1	True				
ANR	3381575	CallExpression	"memcpy ( dta , & data [ curIndex ] , size )"		3381546	0					
ANR	3381576	Callee	memcpy		3381546	0					
ANR	3381577	Identifier	memcpy		3381546	0					
ANR	3381578	ArgumentList	dta		3381546	1					
ANR	3381579	Argument	dta		3381546	0					
ANR	3381580	Identifier	dta		3381546	0					
ANR	3381581	Argument	& data [ curIndex ]		3381546	1					
ANR	3381582	UnaryOperationExpression	& data [ curIndex ]		3381546	0					
ANR	3381583	UnaryOperator	&		3381546	0					
ANR	3381584	ArrayIndexing	data [ curIndex ]		3381546	1					
ANR	3381585	Identifier	data		3381546	0					
ANR	3381586	Identifier	curIndex		3381546	1					
ANR	3381587	Argument	size		3381546	2					
ANR	3381588	Identifier	size		3381546	0					
ANR	3381589	ExpressionStatement	curIndex += size	350:1:9487:9503	3381546	2	True				
ANR	3381590	AssignmentExpression	curIndex += size		3381546	0		+=			
ANR	3381591	Identifier	curIndex		3381546	0					
ANR	3381592	Identifier	size		3381546	1					
ANR	3381593	ReturnStatement	return size ;	351:1:9506:9517	3381546	3	True				
ANR	3381594	Identifier	size		3381546	0					
ANR	3381595	ReturnType	int		3381546	1					
ANR	3381596	Identifier	_condorPacket :: getn		3381546	2					
ANR	3381597	ParameterList	"char * dta , const int size"		3381546	3					
ANR	3381598	Parameter	char * dta	343:24:9278:9286	3381546	0	True				
ANR	3381599	ParameterType	char *		3381546	0					
ANR	3381600	Identifier	dta		3381546	1					
ANR	3381601	Parameter	const int size	343:35:9289:9302	3381546	1	True				
ANR	3381602	ParameterType	const int		3381546	0					
ANR	3381603	Identifier	size		3381546	1					
ANR	3381604	CFGEntryNode	ENTRY		3381546		True				
ANR	3381605	CFGExitNode	EXIT		3381546		True				
ANR	3381606	Symbol	dta		3381546						
ANR	3381607	Symbol	size		3381546						
ANR	3381608	Symbol	data		3381546						
ANR	3381609	Symbol	length		3381546						
ANR	3381610	Symbol	D_NETWORK		3381546						
ANR	3381611	Symbol	curIndex		3381546						
ANR	3381612	Function	_condorPacket :: getPtr	366:0:10001:10289							
ANR	3381613	FunctionDef	"_condorPacket :: getPtr (void * & ptr , const char delim)"		3381612	0					
ANR	3381614	CompoundStatement		367:0:10057:10289	3381612	0					
ANR	3381615	IdentifierDeclStatement	int temp ;	368:1:10060:10068	3381612	0	True				
ANR	3381616	IdentifierDecl	temp		3381612	0					
ANR	3381617	IdentifierDeclType	int		3381612	0					
ANR	3381618	Identifier	temp		3381612	1					
ANR	3381619	IdentifierDeclStatement	int size = 1 ;	369:1:10071:10084	3381612	1	True				
ANR	3381620	IdentifierDecl	size = 1		3381612	0					
ANR	3381621	IdentifierDeclType	int		3381612	0					
ANR	3381622	Identifier	size		3381612	1					
ANR	3381623	AssignmentExpression	size = 1		3381612	2		=			
ANR	3381624	Identifier	size		3381612	0					
ANR	3381625	PrimaryExpression	1		3381612	1					
ANR	3381626	ExpressionStatement	temp = curIndex	371:1:10088:10103	3381612	2	True				
ANR	3381627	AssignmentExpression	temp = curIndex		3381612	0		=			
ANR	3381628	Identifier	temp		3381612	0					
ANR	3381629	Identifier	curIndex		3381612	1					
ANR	3381630	WhileStatement	while ( temp < length && data [ temp ] != delim )		3381612	3					
ANR	3381631	Condition	temp < length && data [ temp ] != delim	372:7:10112:10147	3381612	0	True				
ANR	3381632	AndExpression	temp < length && data [ temp ] != delim		3381612	0		&&			
ANR	3381633	RelationalExpression	temp < length		3381612	0		<			
ANR	3381634	Identifier	temp		3381612	0					
ANR	3381635	Identifier	length		3381612	1					
ANR	3381636	EqualityExpression	data [ temp ] != delim		3381612	1		!=			
ANR	3381637	ArrayIndexing	data [ temp ]		3381612	0					
ANR	3381638	Identifier	data		3381612	0					
ANR	3381639	Identifier	temp		3381612	1					
ANR	3381640	Identifier	delim		3381612	1					
ANR	3381641	CompoundStatement		6:45:92:92	3381612	1					
ANR	3381642	ExpressionStatement	temp ++	373:2:10154:10160	3381612	0	True				
ANR	3381643	PostIncDecOperationExpression	temp ++		3381612	0					
ANR	3381644	Identifier	temp		3381612	0					
ANR	3381645	IncDec	++		3381612	1					
ANR	3381646	ExpressionStatement	size ++	374:2:10164:10170	3381612	1	True				
ANR	3381647	PostIncDecOperationExpression	size ++		3381612	0					
ANR	3381648	Identifier	size		3381612	0					
ANR	3381649	IncDec	++		3381612	1					
ANR	3381650	IfStatement	if ( temp == length )		3381612	4					
ANR	3381651	Condition	temp == length	377:4:10180:10193	3381612	0	True				
ANR	3381652	EqualityExpression	temp == length		3381612	0		==			
ANR	3381653	Identifier	temp		3381612	0					
ANR	3381654	Identifier	length		3381612	1					
ANR	3381655	ReturnStatement	return - 1 ;	378:2:10211:10220	3381612	1	True				
ANR	3381656	UnaryOperationExpression	- 1		3381612	0					
ANR	3381657	UnaryOperator	-		3381612	0					
ANR	3381658	PrimaryExpression	1		3381612	1					
ANR	3381659	ExpressionStatement	ptr = & data [ curIndex ]	380:1:10233:10254	3381612	5	True				
ANR	3381660	AssignmentExpression	ptr = & data [ curIndex ]		3381612	0		=			
ANR	3381661	Identifier	ptr		3381612	0					
ANR	3381662	UnaryOperationExpression	& data [ curIndex ]		3381612	1					
ANR	3381663	UnaryOperator	&		3381612	0					
ANR	3381664	ArrayIndexing	data [ curIndex ]		3381612	1					
ANR	3381665	Identifier	data		3381612	0					
ANR	3381666	Identifier	curIndex		3381612	1					
ANR	3381667	ExpressionStatement	curIndex += size	381:1:10257:10273	3381612	6	True				
ANR	3381668	AssignmentExpression	curIndex += size		3381612	0		+=			
ANR	3381669	Identifier	curIndex		3381612	0					
ANR	3381670	Identifier	size		3381612	1					
ANR	3381671	ReturnStatement	return size ;	382:1:10276:10287	3381612	7	True				
ANR	3381672	Identifier	size		3381612	0					
ANR	3381673	ReturnType	int		3381612	1					
ANR	3381674	Identifier	_condorPacket :: getPtr		3381612	2					
ANR	3381675	ParameterList	"void * & ptr , const char delim"		3381612	3					
ANR	3381676	Parameter	void * & ptr	366:26:10027:10036	3381612	0	True				
ANR	3381677	ParameterType	void * &		3381612	0					
ANR	3381678	Identifier	ptr		3381612	1					
ANR	3381679	Parameter	const char delim	366:38:10039:10054	3381612	1	True				
ANR	3381680	ParameterType	const char		3381612	0					
ANR	3381681	Identifier	delim		3381612	1					
ANR	3381682	CFGEntryNode	ENTRY		3381612		True				
ANR	3381683	CFGExitNode	EXIT		3381612		True				
ANR	3381684	Symbol	temp		3381612						
ANR	3381685	Symbol	size		3381612						
ANR	3381686	Symbol	data		3381612						
ANR	3381687	Symbol	length		3381612						
ANR	3381688	Symbol	curIndex		3381612						
ANR	3381689	Symbol	* data		3381612						
ANR	3381690	Symbol	* temp		3381612						
ANR	3381691	Symbol	ptr		3381612						
ANR	3381692	Symbol	delim		3381612						
ANR	3381693	Function	_condorPacket :: peek	393:0:10481:10591							
ANR	3381694	FunctionDef	_condorPacket :: peek (char & c)		3381693	0					
ANR	3381695	CompoundStatement		394:0:10514:10591	3381693	0					
ANR	3381696	IfStatement	if ( curIndex == length )		3381693	0					
ANR	3381697	Condition	curIndex == length	395:4:10520:10537	3381693	0	True				
ANR	3381698	EqualityExpression	curIndex == length		3381693	0		==			
ANR	3381699	Identifier	curIndex		3381693	0					
ANR	3381700	Identifier	length		3381693	1					
ANR	3381701	ReturnStatement	return FALSE ;	396:2:10542:10554	3381693	1	True				
ANR	3381702	Identifier	FALSE		3381693	0					
ANR	3381703	ExpressionStatement	c = data [ curIndex ]	397:1:10557:10575	3381693	1	True				
ANR	3381704	AssignmentExpression	c = data [ curIndex ]		3381693	0		=			
ANR	3381705	Identifier	c		3381693	0					
ANR	3381706	ArrayIndexing	data [ curIndex ]		3381693	1					
ANR	3381707	Identifier	data		3381693	0					
ANR	3381708	Identifier	curIndex		3381693	1					
ANR	3381709	ReturnStatement	return TRUE ;	398:1:10578:10589	3381693	2	True				
ANR	3381710	Identifier	TRUE		3381693	0					
ANR	3381711	ReturnType	int		3381693	1					
ANR	3381712	Identifier	_condorPacket :: peek		3381693	2					
ANR	3381713	ParameterList	char & c		3381693	3					
ANR	3381714	Parameter	char & c	393:24:10505:10511	3381693	0	True				
ANR	3381715	ParameterType	char &		3381693	0					
ANR	3381716	Identifier	c		3381693	1					
ANR	3381717	CFGEntryNode	ENTRY		3381693		True				
ANR	3381718	CFGExitNode	EXIT		3381693		True				
ANR	3381719	Symbol	* curIndex		3381693						
ANR	3381720	Symbol	c		3381693						
ANR	3381721	Symbol	data		3381693						
ANR	3381722	Symbol	length		3381693						
ANR	3381723	Symbol	TRUE		3381693						
ANR	3381724	Symbol	FALSE		3381693						
ANR	3381725	Symbol	curIndex		3381693						
ANR	3381726	Symbol	* data		3381693						
ANR	3381727	Function	_condorPacket :: reset	402:0:10626:11287							
ANR	3381728	FunctionDef	_condorPacket :: reset ()		3381727	0					
ANR	3381729	CompoundStatement		403:0:10654:11287	3381727	0					
ANR	3381730	ExpressionStatement	curIndex = 0	404:4:10660:10672	3381727	0	True				
ANR	3381731	AssignmentExpression	curIndex = 0		3381727	0		=			
ANR	3381732	Identifier	curIndex		3381727	0					
ANR	3381733	PrimaryExpression	0		3381727	1					
ANR	3381734	ExpressionStatement	length = 0	405:4:10678:10690	3381727	1	True				
ANR	3381735	AssignmentExpression	length = 0		3381727	0		=			
ANR	3381736	Identifier	length		3381727	0					
ANR	3381737	PrimaryExpression	0		3381727	1					
ANR	3381738	IfStatement	if ( outgoingMD5KeyId_ )		3381727	2					
ANR	3381739	Condition	outgoingMD5KeyId_	407:8:10701:10717	3381727	0	True				
ANR	3381740	Identifier	outgoingMD5KeyId_		3381727	0					
ANR	3381741	CompoundStatement		5:27:65:65	3381727	1					
ANR	3381742	ExpressionStatement	curIndex = MAC_SIZE + outgoingMdLen_	410:8:10798:10834	3381727	0	True				
ANR	3381743	AssignmentExpression	curIndex = MAC_SIZE + outgoingMdLen_		3381727	0		=			
ANR	3381744	Identifier	curIndex		3381727	0					
ANR	3381745	AdditiveExpression	MAC_SIZE + outgoingMdLen_		3381727	1		+			
ANR	3381746	Identifier	MAC_SIZE		3381727	0					
ANR	3381747	Identifier	outgoingMdLen_		3381727	1					
ANR	3381748	IfStatement	if ( outgoingEncKeyId_ )		3381727	3					
ANR	3381749	Condition	outgoingEncKeyId_	413:8:10851:10867	3381727	0	True				
ANR	3381750	Identifier	outgoingEncKeyId_		3381727	0					
ANR	3381751	CompoundStatement		11:27:215:215	3381727	1					
ANR	3381752	ExpressionStatement	curIndex += outgoingEidLen_	416:8:10948:10975	3381727	0	True				
ANR	3381753	AssignmentExpression	curIndex += outgoingEidLen_		3381727	0		+=			
ANR	3381754	Identifier	curIndex		3381727	0					
ANR	3381755	Identifier	outgoingEidLen_		3381727	1					
ANR	3381756	IfStatement	if ( curIndex > 0 )		3381727	4					
ANR	3381757	Condition	curIndex > 0	419:8:10992:11003	3381727	0	True				
ANR	3381758	RelationalExpression	curIndex > 0		3381727	0		>			
ANR	3381759	Identifier	curIndex		3381727	0					
ANR	3381760	PrimaryExpression	0		3381727	1					
ANR	3381761	CompoundStatement		17:22:351:351	3381727	1					
ANR	3381762	ExpressionStatement	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE	420:8:11016:11055	3381727	0	True				
ANR	3381763	AssignmentExpression	curIndex += SAFE_MSG_CRYPTO_HEADER_SIZE		3381727	0		+=			
ANR	3381764	Identifier	curIndex		3381727	0					
ANR	3381765	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3381727	1					
ANR	3381766	ExpressionStatement	length = curIndex	423:4:11068:11085	3381727	5	True				
ANR	3381767	AssignmentExpression	length = curIndex		3381727	0		=			
ANR	3381768	Identifier	length		3381727	0					
ANR	3381769	Identifier	curIndex		3381727	1					
ANR	3381770	IfStatement	if ( incomingMD5KeyId_ )		3381727	6					
ANR	3381771	Condition	incomingMD5KeyId_	425:8:11096:11112	3381727	0	True				
ANR	3381772	Identifier	incomingMD5KeyId_		3381727	0					
ANR	3381773	CompoundStatement		23:27:460:460	3381727	1					
ANR	3381774	ExpressionStatement	free ( incomingMD5KeyId_ )	426:8:11125:11148	3381727	0	True				
ANR	3381775	CallExpression	free ( incomingMD5KeyId_ )		3381727	0					
ANR	3381776	Callee	free		3381727	0					
ANR	3381777	Identifier	free		3381727	0					
ANR	3381778	ArgumentList	incomingMD5KeyId_		3381727	1					
ANR	3381779	Argument	incomingMD5KeyId_		3381727	0					
ANR	3381780	Identifier	incomingMD5KeyId_		3381727	0					
ANR	3381781	ExpressionStatement	incomingMD5KeyId_ = 0	427:8:11158:11179	3381727	1	True				
ANR	3381782	AssignmentExpression	incomingMD5KeyId_ = 0		3381727	0		=			
ANR	3381783	Identifier	incomingMD5KeyId_		3381727	0					
ANR	3381784	PrimaryExpression	0		3381727	1					
ANR	3381785	IfStatement	if ( incomingEncKeyId_ )		3381727	7					
ANR	3381786	Condition	incomingEncKeyId_	430:8:11196:11212	3381727	0	True				
ANR	3381787	Identifier	incomingEncKeyId_		3381727	0					
ANR	3381788	CompoundStatement		28:27:560:560	3381727	1					
ANR	3381789	ExpressionStatement	free ( incomingEncKeyId_ )	431:8:11225:11248	3381727	0	True				
ANR	3381790	CallExpression	free ( incomingEncKeyId_ )		3381727	0					
ANR	3381791	Callee	free		3381727	0					
ANR	3381792	Identifier	free		3381727	0					
ANR	3381793	ArgumentList	incomingEncKeyId_		3381727	1					
ANR	3381794	Argument	incomingEncKeyId_		3381727	0					
ANR	3381795	Identifier	incomingEncKeyId_		3381727	0					
ANR	3381796	ExpressionStatement	incomingEncKeyId_ = 0	432:8:11258:11279	3381727	1	True				
ANR	3381797	AssignmentExpression	incomingEncKeyId_ = 0		3381727	0		=			
ANR	3381798	Identifier	incomingEncKeyId_		3381727	0					
ANR	3381799	PrimaryExpression	0		3381727	1					
ANR	3381800	ReturnType	void		3381727	1					
ANR	3381801	Identifier	_condorPacket :: reset		3381727	2					
ANR	3381802	ParameterList			3381727	3					
ANR	3381803	CFGEntryNode	ENTRY		3381727		True				
ANR	3381804	CFGExitNode	EXIT		3381727		True				
ANR	3381805	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		3381727						
ANR	3381806	Symbol	MAC_SIZE		3381727						
ANR	3381807	Symbol	outgoingEncKeyId_		3381727						
ANR	3381808	Symbol	incomingMD5KeyId_		3381727						
ANR	3381809	Symbol	length		3381727						
ANR	3381810	Symbol	outgoingMdLen_		3381727						
ANR	3381811	Symbol	curIndex		3381727						
ANR	3381812	Symbol	outgoingEidLen_		3381727						
ANR	3381813	Symbol	outgoingMD5KeyId_		3381727						
ANR	3381814	Symbol	incomingEncKeyId_		3381727						
ANR	3381815	Function	_condorPacket :: consumed	437:0:11344:11406							
ANR	3381816	FunctionDef	_condorPacket :: consumed ()		3381815	0					
ANR	3381817	CompoundStatement		438:0:11375:11406	3381815	0					
ANR	3381818	ReturnStatement	return ( curIndex == length ) ;	439:1:11378:11404	3381815	0	True				
ANR	3381819	EqualityExpression	curIndex == length		3381815	0		==			
ANR	3381820	Identifier	curIndex		3381815	0					
ANR	3381821	Identifier	length		3381815	1					
ANR	3381822	ReturnType	bool		3381815	1					
ANR	3381823	Identifier	_condorPacket :: consumed		3381815	2					
ANR	3381824	ParameterList			3381815	3					
ANR	3381825	CFGEntryNode	ENTRY		3381815		True				
ANR	3381826	CFGExitNode	EXIT		3381815		True				
ANR	3381827	Symbol	length		3381815						
ANR	3381828	Symbol	curIndex		3381815						
ANR	3381829	Function	_condorPacket :: putMax	450:0:11742:11988							
ANR	3381830	FunctionDef	"_condorPacket :: putMax (const void * dta , const int size)"		3381829	0					
ANR	3381831	CompoundStatement		451:0:11801:11988	3381829	0					
ANR	3381832	IdentifierDeclStatement	"int len , left = USABLE_PACKET_SIZE - curIndex ;"	452:4:11807:11852	3381829	0	True				
ANR	3381833	IdentifierDecl	len		3381829	0					
ANR	3381834	IdentifierDeclType	int		3381829	0					
ANR	3381835	Identifier	len		3381829	1					
ANR	3381836	IdentifierDecl	left = USABLE_PACKET_SIZE - curIndex		3381829	1					
ANR	3381837	IdentifierDeclType	int		3381829	0					
ANR	3381838	Identifier	left		3381829	1					
ANR	3381839	AssignmentExpression	left = USABLE_PACKET_SIZE - curIndex		3381829	2		=			
ANR	3381840	Identifier	left		3381829	0					
ANR	3381841	AdditiveExpression	USABLE_PACKET_SIZE - curIndex		3381829	1		-			
ANR	3381842	Identifier	USABLE_PACKET_SIZE		3381829	0					
ANR	3381843	Identifier	curIndex		3381829	1					
ANR	3381844	ExpressionStatement	len = size > left ? left : size	454:4:11863:11893	3381829	1	True				
ANR	3381845	AssignmentExpression	len = size > left ? left : size		3381829	0		=			
ANR	3381846	Identifier	len		3381829	0					
ANR	3381847	ConditionalExpression	size > left ? left : size		3381829	1					
ANR	3381848	Condition	size > left		3381829	0					
ANR	3381849	RelationalExpression	size > left		3381829	0		>			
ANR	3381850	Identifier	size		3381829	0					
ANR	3381851	Identifier	left		3381829	1					
ANR	3381852	Identifier	left		3381829	1					
ANR	3381853	Identifier	size		3381829	2					
ANR	3381854	ExpressionStatement	"memcpy ( & data [ curIndex ] , dta , len )"	456:1:11901:11934	3381829	2	True				
ANR	3381855	CallExpression	"memcpy ( & data [ curIndex ] , dta , len )"		3381829	0					
ANR	3381856	Callee	memcpy		3381829	0					
ANR	3381857	Identifier	memcpy		3381829	0					
ANR	3381858	ArgumentList	& data [ curIndex ]		3381829	1					
ANR	3381859	Argument	& data [ curIndex ]		3381829	0					
ANR	3381860	UnaryOperationExpression	& data [ curIndex ]		3381829	0					
ANR	3381861	UnaryOperator	&		3381829	0					
ANR	3381862	ArrayIndexing	data [ curIndex ]		3381829	1					
ANR	3381863	Identifier	data		3381829	0					
ANR	3381864	Identifier	curIndex		3381829	1					
ANR	3381865	Argument	dta		3381829	1					
ANR	3381866	Identifier	dta		3381829	0					
ANR	3381867	Argument	len		3381829	2					
ANR	3381868	Identifier	len		3381829	0					
ANR	3381869	ExpressionStatement	curIndex += len	457:1:11937:11952	3381829	3	True				
ANR	3381870	AssignmentExpression	curIndex += len		3381829	0		+=			
ANR	3381871	Identifier	curIndex		3381829	0					
ANR	3381872	Identifier	len		3381829	1					
ANR	3381873	ExpressionStatement	length = curIndex	458:1:11955:11972	3381829	4	True				
ANR	3381874	AssignmentExpression	length = curIndex		3381829	0		=			
ANR	3381875	Identifier	length		3381829	0					
ANR	3381876	Identifier	curIndex		3381829	1					
ANR	3381877	ReturnStatement	return len ;	460:1:11976:11986	3381829	5	True				
ANR	3381878	Identifier	len		3381829	0					
ANR	3381879	ReturnType	int		3381829	1					
ANR	3381880	Identifier	_condorPacket :: putMax		3381829	2					
ANR	3381881	ParameterList	"const void * dta , const int size"		3381829	3					
ANR	3381882	Parameter	const void * dta	450:26:11768:11782	3381829	0	True				
ANR	3381883	ParameterType	const void *		3381829	0					
ANR	3381884	Identifier	dta		3381829	1					
ANR	3381885	Parameter	const int size	450:43:11785:11798	3381829	1	True				
ANR	3381886	ParameterType	const int		3381829	0					
ANR	3381887	Identifier	size		3381829	1					
ANR	3381888	CFGEntryNode	ENTRY		3381829		True				
ANR	3381889	CFGExitNode	EXIT		3381829		True				
ANR	3381890	Symbol	dta		3381829						
ANR	3381891	Symbol	size		3381829						
ANR	3381892	Symbol	len		3381829						
ANR	3381893	Symbol	data		3381829						
ANR	3381894	Symbol	left		3381829						
ANR	3381895	Symbol	length		3381829						
ANR	3381896	Symbol	USABLE_PACKET_SIZE		3381829						
ANR	3381897	Symbol	curIndex		3381829						
ANR	3381898	Function	_condorPacket :: addExtendedHeader	463:0:11991:12680							
ANR	3381899	FunctionDef	_condorPacket :: addExtendedHeader (unsigned char * mac)		3381898	0					
ANR	3381900	CompoundStatement		464:0:12051:12680	3381898	0					
ANR	3381901	IdentifierDeclStatement	int where = SAFE_MSG_CRYPTO_HEADER_SIZE ;	465:4:12057:12096	3381898	0	True				
ANR	3381902	IdentifierDecl	where = SAFE_MSG_CRYPTO_HEADER_SIZE		3381898	0					
ANR	3381903	IdentifierDeclType	int		3381898	0					
ANR	3381904	Identifier	where		3381898	1					
ANR	3381905	AssignmentExpression	where = SAFE_MSG_CRYPTO_HEADER_SIZE		3381898	2		=			
ANR	3381906	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3381898	0					
ANR	3381907	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3381898	1					
ANR	3381908	IfStatement	if ( mac )		3381898	1					
ANR	3381909	Condition	mac	466:8:12106:12108	3381898	0	True				
ANR	3381910	Identifier	mac		3381898	0					
ANR	3381911	CompoundStatement		3:13:59:59	3381898	1					
ANR	3381912	IfStatement	if ( mac && outgoingMD5KeyId_ )		3381898	0					
ANR	3381913	Condition	mac && outgoingMD5KeyId_	467:12:12125:12148	3381898	0	True				
ANR	3381914	AndExpression	mac && outgoingMD5KeyId_		3381898	0		&&			
ANR	3381915	Identifier	mac		3381898	0					
ANR	3381916	Identifier	outgoingMD5KeyId_		3381898	1					
ANR	3381917	CompoundStatement		4:38:99:99	3381898	1					
ANR	3381918	ExpressionStatement	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingMD5KeyId_ , outgoingMdLen_ )"	469:12:12214:12314	3381898	0	True				
ANR	3381919	CallExpression	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingMD5KeyId_ , outgoingMdLen_ )"		3381898	0					
ANR	3381920	Callee	memcpy		3381898	0					
ANR	3381921	Identifier	memcpy		3381898	0					
ANR	3381922	ArgumentList	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	1					
ANR	3381923	Argument	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	0					
ANR	3381924	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	0					
ANR	3381925	UnaryOperator	&		3381898	0					
ANR	3381926	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	1					
ANR	3381927	Identifier	dataGram		3381898	0					
ANR	3381928	AdditiveExpression	SAFE_MSG_HEADER_SIZE + where		3381898	1		+			
ANR	3381929	Identifier	SAFE_MSG_HEADER_SIZE		3381898	0					
ANR	3381930	Identifier	where		3381898	1					
ANR	3381931	Argument	outgoingMD5KeyId_		3381898	1					
ANR	3381932	Identifier	outgoingMD5KeyId_		3381898	0					
ANR	3381933	Argument	outgoingMdLen_		3381898	2					
ANR	3381934	Identifier	outgoingMdLen_		3381898	0					
ANR	3381935	ExpressionStatement	where += outgoingMdLen_	472:12:12356:12379	3381898	1	True				
ANR	3381936	AssignmentExpression	where += outgoingMdLen_		3381898	0		+=			
ANR	3381937	Identifier	where		3381898	0					
ANR	3381938	Identifier	outgoingMdLen_		3381898	1					
ANR	3381939	ExpressionStatement	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , mac , MAC_SIZE )"	473:12:12393:12453	3381898	2	True				
ANR	3381940	CallExpression	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , mac , MAC_SIZE )"		3381898	0					
ANR	3381941	Callee	memcpy		3381898	0					
ANR	3381942	Identifier	memcpy		3381898	0					
ANR	3381943	ArgumentList	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	1					
ANR	3381944	Argument	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	0					
ANR	3381945	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	0					
ANR	3381946	UnaryOperator	&		3381898	0					
ANR	3381947	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	1					
ANR	3381948	Identifier	dataGram		3381898	0					
ANR	3381949	AdditiveExpression	SAFE_MSG_HEADER_SIZE + where		3381898	1		+			
ANR	3381950	Identifier	SAFE_MSG_HEADER_SIZE		3381898	0					
ANR	3381951	Identifier	where		3381898	1					
ANR	3381952	Argument	mac		3381898	1					
ANR	3381953	Identifier	mac		3381898	0					
ANR	3381954	Argument	MAC_SIZE		3381898	2					
ANR	3381955	Identifier	MAC_SIZE		3381898	0					
ANR	3381956	ExpressionStatement	where += MAC_SIZE	474:12:12467:12484	3381898	3	True				
ANR	3381957	AssignmentExpression	where += MAC_SIZE		3381898	0		+=			
ANR	3381958	Identifier	where		3381898	0					
ANR	3381959	Identifier	MAC_SIZE		3381898	1					
ANR	3381960	IfStatement	if ( outgoingEncKeyId_ )		3381898	2					
ANR	3381961	Condition	outgoingEncKeyId_	478:8:12511:12527	3381898	0	True				
ANR	3381962	Identifier	outgoingEncKeyId_		3381898	0					
ANR	3381963	CompoundStatement		15:27:478:478	3381898	1					
ANR	3381964	ExpressionStatement	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingEncKeyId_ , outgoingEidLen_ )"	480:8:12575:12672	3381898	0	True				
ANR	3381965	CallExpression	"memcpy ( & dataGram [ SAFE_MSG_HEADER_SIZE + where ] , outgoingEncKeyId_ , outgoingEidLen_ )"		3381898	0					
ANR	3381966	Callee	memcpy		3381898	0					
ANR	3381967	Identifier	memcpy		3381898	0					
ANR	3381968	ArgumentList	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	1					
ANR	3381969	Argument	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	0					
ANR	3381970	UnaryOperationExpression	& dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	0					
ANR	3381971	UnaryOperator	&		3381898	0					
ANR	3381972	ArrayIndexing	dataGram [ SAFE_MSG_HEADER_SIZE + where ]		3381898	1					
ANR	3381973	Identifier	dataGram		3381898	0					
ANR	3381974	AdditiveExpression	SAFE_MSG_HEADER_SIZE + where		3381898	1		+			
ANR	3381975	Identifier	SAFE_MSG_HEADER_SIZE		3381898	0					
ANR	3381976	Identifier	where		3381898	1					
ANR	3381977	Argument	outgoingEncKeyId_		3381898	1					
ANR	3381978	Identifier	outgoingEncKeyId_		3381898	0					
ANR	3381979	Argument	outgoingEidLen_		3381898	2					
ANR	3381980	Identifier	outgoingEidLen_		3381898	0					
ANR	3381981	ReturnType	void		3381898	1					
ANR	3381982	Identifier	_condorPacket :: addExtendedHeader		3381898	2					
ANR	3381983	ParameterList	unsigned char * mac		3381898	3					
ANR	3381984	Parameter	unsigned char * mac	463:38:12029:12047	3381898	0	True				
ANR	3381985	ParameterType	unsigned char *		3381898	0					
ANR	3381986	Identifier	mac		3381898	1					
ANR	3381987	CFGEntryNode	ENTRY		3381898		True				
ANR	3381988	CFGExitNode	EXIT		3381898		True				
ANR	3381989	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		3381898						
ANR	3381990	Symbol	MAC_SIZE		3381898						
ANR	3381991	Symbol	outgoingEncKeyId_		3381898						
ANR	3381992	Symbol	where		3381898						
ANR	3381993	Symbol	outgoingMdLen_		3381898						
ANR	3381994	Symbol	dataGram		3381898						
ANR	3381995	Symbol	outgoingEidLen_		3381898						
ANR	3381996	Symbol	outgoingMD5KeyId_		3381898						
ANR	3381997	Symbol	SAFE_MSG_HEADER_SIZE		3381898						
ANR	3381998	Symbol	mac		3381898						
ANR	3381999	Function	_condorPacket :: full	485:0:12683:12757							
ANR	3382000	FunctionDef	_condorPacket :: full ()		3381999	0					
ANR	3382001	CompoundStatement		486:0:12710:12757	3381999	0					
ANR	3382002	ReturnStatement	return ( curIndex == USABLE_PACKET_SIZE ) ;	487:4:12716:12755	3381999	0	True				
ANR	3382003	EqualityExpression	curIndex == USABLE_PACKET_SIZE		3381999	0		==			
ANR	3382004	Identifier	curIndex		3381999	0					
ANR	3382005	Identifier	USABLE_PACKET_SIZE		3381999	1					
ANR	3382006	ReturnType	bool		3381999	1					
ANR	3382007	Identifier	_condorPacket :: full		3381999	2					
ANR	3382008	ParameterList			3381999	3					
ANR	3382009	CFGEntryNode	ENTRY		3381999		True				
ANR	3382010	CFGExitNode	EXIT		3381999		True				
ANR	3382011	Symbol	USABLE_PACKET_SIZE		3381999						
ANR	3382012	Symbol	curIndex		3381999						
ANR	3382013	Function	_condorPacket :: empty	490:0:12760:13246							
ANR	3382014	FunctionDef	_condorPacket :: empty ()		3382013	0					
ANR	3382015	CompoundStatement		491:0:12788:13246	3382013	0					
ANR	3382016	IdentifierDeclStatement	int forward = 0 ;	492:4:12794:12809	3382013	0	True				
ANR	3382017	IdentifierDecl	forward = 0		3382013	0					
ANR	3382018	IdentifierDeclType	int		3382013	0					
ANR	3382019	Identifier	forward		3382013	1					
ANR	3382020	AssignmentExpression	forward = 0		3382013	2		=			
ANR	3382021	Identifier	forward		3382013	0					
ANR	3382022	PrimaryExpression	0		3382013	1					
ANR	3382023	IfStatement	if ( outgoingMD5KeyId_ )		3382013	1					
ANR	3382024	Condition	outgoingMD5KeyId_	493:8:12819:12835	3382013	0	True				
ANR	3382025	Identifier	outgoingMD5KeyId_		3382013	0					
ANR	3382026	CompoundStatement		3:27:49:49	3382013	1					
ANR	3382027	ExpressionStatement	forward = MAC_SIZE + outgoingMdLen_	494:8:12848:12883	3382013	0	True				
ANR	3382028	AssignmentExpression	forward = MAC_SIZE + outgoingMdLen_		3382013	0		=			
ANR	3382029	Identifier	forward		3382013	0					
ANR	3382030	AdditiveExpression	MAC_SIZE + outgoingMdLen_		3382013	1		+			
ANR	3382031	Identifier	MAC_SIZE		3382013	0					
ANR	3382032	Identifier	outgoingMdLen_		3382013	1					
ANR	3382033	IfStatement	if ( outgoingEncKeyId_ )		3382013	2					
ANR	3382034	Condition	outgoingEncKeyId_	496:8:12899:12915	3382013	0	True				
ANR	3382035	Identifier	outgoingEncKeyId_		3382013	0					
ANR	3382036	CompoundStatement		6:27:129:129	3382013	1					
ANR	3382037	ExpressionStatement	forward += outgoingEidLen_	497:8:12928:12954	3382013	0	True				
ANR	3382038	AssignmentExpression	forward += outgoingEidLen_		3382013	0		+=			
ANR	3382039	Identifier	forward		3382013	0					
ANR	3382040	Identifier	outgoingEidLen_		3382013	1					
ANR	3382041	IfStatement	if ( forward > 0 )		3382013	3					
ANR	3382042	Condition	forward > 0	499:8:12970:12980	3382013	0	True				
ANR	3382043	RelationalExpression	forward > 0		3382013	0		>			
ANR	3382044	Identifier	forward		3382013	0					
ANR	3382045	PrimaryExpression	0		3382013	1					
ANR	3382046	CompoundStatement		9:21:194:194	3382013	1					
ANR	3382047	ExpressionStatement	forward += SAFE_MSG_CRYPTO_HEADER_SIZE	500:8:12993:13031	3382013	0	True				
ANR	3382048	AssignmentExpression	forward += SAFE_MSG_CRYPTO_HEADER_SIZE		3382013	0		+=			
ANR	3382049	Identifier	forward		3382013	0					
ANR	3382050	Identifier	SAFE_MSG_CRYPTO_HEADER_SIZE		3382013	1					
ANR	3382051	ReturnStatement	return ( length == forward ) ;	506:4:13219:13244	3382013	4	True				
ANR	3382052	EqualityExpression	length == forward		3382013	0		==			
ANR	3382053	Identifier	length		3382013	0					
ANR	3382054	Identifier	forward		3382013	1					
ANR	3382055	ReturnType	bool		3382013	1					
ANR	3382056	Identifier	_condorPacket :: empty		3382013	2					
ANR	3382057	ParameterList			3382013	3					
ANR	3382058	CFGEntryNode	ENTRY		3382013		True				
ANR	3382059	CFGExitNode	EXIT		3382013		True				
ANR	3382060	Symbol	SAFE_MSG_CRYPTO_HEADER_SIZE		3382013						
ANR	3382061	Symbol	MAC_SIZE		3382013						
ANR	3382062	Symbol	outgoingEncKeyId_		3382013						
ANR	3382063	Symbol	forward		3382013						
ANR	3382064	Symbol	length		3382013						
ANR	3382065	Symbol	outgoingMdLen_		3382013						
ANR	3382066	Symbol	outgoingEidLen_		3382013						
ANR	3382067	Symbol	outgoingMD5KeyId_		3382013						
ANR	3382068	Function	_condorPacket :: makeHeader	516:0:13546:15129							
ANR	3382069	FunctionDef	"_condorPacket :: makeHeader (bool last , int seqNo , _condorMsgID msgID , unsigned char * mac)"		3382068	0					
ANR	3382070	CompoundStatement		519:0:13704:15129	3382068	0					
ANR	3382071	IdentifierDeclStatement	uint16_t stemp ;	520:4:13710:13724	3382068	0	True				
ANR	3382072	IdentifierDecl	stemp		3382068	0					
ANR	3382073	IdentifierDeclType	uint16_t		3382068	0					
ANR	3382074	Identifier	stemp		3382068	1					
ANR	3382075	IdentifierDeclStatement	uint32_t ltemp ;	521:4:13730:13744	3382068	1	True				
ANR	3382076	IdentifierDecl	ltemp		3382068	0					
ANR	3382077	IdentifierDeclType	uint32_t		3382068	0					
ANR	3382078	Identifier	ltemp		3382068	1					
ANR	3382079	ExpressionStatement	"memcpy ( dataGram , SAFE_MSG_MAGIC , 8 )"	523:1:13748:13783	3382068	2	True				
ANR	3382080	CallExpression	"memcpy ( dataGram , SAFE_MSG_MAGIC , 8 )"		3382068	0					
ANR	3382081	Callee	memcpy		3382068	0					
ANR	3382082	Identifier	memcpy		3382068	0					
ANR	3382083	ArgumentList	dataGram		3382068	1					
ANR	3382084	Argument	dataGram		3382068	0					
ANR	3382085	Identifier	dataGram		3382068	0					
ANR	3382086	Argument	SAFE_MSG_MAGIC		3382068	1					
ANR	3382087	Identifier	SAFE_MSG_MAGIC		3382068	0					
ANR	3382088	Argument	8		3382068	2					
ANR	3382089	PrimaryExpression	8		3382068	0					
ANR	3382090	ExpressionStatement	dataGram [ 8 ] = ( char ) last	525:1:13787:13812	3382068	3	True				
ANR	3382091	AssignmentExpression	dataGram [ 8 ] = ( char ) last		3382068	0		=			
ANR	3382092	ArrayIndexing	dataGram [ 8 ]		3382068	0					
ANR	3382093	Identifier	dataGram		3382068	0					
ANR	3382094	PrimaryExpression	8		3382068	1					
ANR	3382095	CastExpression	( char ) last		3382068	1					
ANR	3382096	CastTarget	char		3382068	0					
ANR	3382097	Identifier	last		3382068	1					
ANR	3382098	ExpressionStatement	stemp = htons ( ( u_short ) seqNo )	526:1:13815:13844	3382068	4	True				
ANR	3382099	AssignmentExpression	stemp = htons ( ( u_short ) seqNo )		3382068	0		=			
ANR	3382100	Identifier	stemp		3382068	0					
ANR	3382101	CallExpression	htons ( ( u_short ) seqNo )		3382068	1					
ANR	3382102	Callee	htons		3382068	0					
ANR	3382103	Identifier	htons		3382068	0					
ANR	3382104	ArgumentList	( u_short ) seqNo		3382068	1					
ANR	3382105	Argument	( u_short ) seqNo		3382068	0					
ANR	3382106	CastExpression	( u_short ) seqNo		3382068	0					
ANR	3382107	CastTarget	u_short		3382068	0					
ANR	3382108	Identifier	seqNo		3382068	1					
ANR	3382109	ExpressionStatement	"memcpy ( & dataGram [ 9 ] , & stemp , 2 )"	527:1:13847:13878	3382068	5	True				
ANR	3382110	CallExpression	"memcpy ( & dataGram [ 9 ] , & stemp , 2 )"		3382068	0					
ANR	3382111	Callee	memcpy		3382068	0					
ANR	3382112	Identifier	memcpy		3382068	0					
ANR	3382113	ArgumentList	& dataGram [ 9 ]		3382068	1					
ANR	3382114	Argument	& dataGram [ 9 ]		3382068	0					
ANR	3382115	UnaryOperationExpression	& dataGram [ 9 ]		3382068	0					
ANR	3382116	UnaryOperator	&		3382068	0					
ANR	3382117	ArrayIndexing	dataGram [ 9 ]		3382068	1					
ANR	3382118	Identifier	dataGram		3382068	0					
ANR	3382119	PrimaryExpression	9		3382068	1					
ANR	3382120	Argument	& stemp		3382068	1					
ANR	3382121	UnaryOperationExpression	& stemp		3382068	0					
ANR	3382122	UnaryOperator	&		3382068	0					
ANR	3382123	Identifier	stemp		3382068	1					
ANR	3382124	Argument	2		3382068	2					
ANR	3382125	PrimaryExpression	2		3382068	0					
ANR	3382126	ExpressionStatement	stemp = htons ( ( u_short ) length )	529:1:13882:13912	3382068	6	True				
ANR	3382127	AssignmentExpression	stemp = htons ( ( u_short ) length )		3382068	0		=			
ANR	3382128	Identifier	stemp		3382068	0					
ANR	3382129	CallExpression	htons ( ( u_short ) length )		3382068	1					
ANR	3382130	Callee	htons		3382068	0					
ANR	3382131	Identifier	htons		3382068	0					
ANR	3382132	ArgumentList	( u_short ) length		3382068	1					
ANR	3382133	Argument	( u_short ) length		3382068	0					
ANR	3382134	CastExpression	( u_short ) length		3382068	0					
ANR	3382135	CastTarget	u_short		3382068	0					
ANR	3382136	Identifier	length		3382068	1					
ANR	3382137	ExpressionStatement	"memcpy ( & dataGram [ 11 ] , & stemp , 2 )"	530:1:13915:13947	3382068	7	True				
ANR	3382138	CallExpression	"memcpy ( & dataGram [ 11 ] , & stemp , 2 )"		3382068	0					
ANR	3382139	Callee	memcpy		3382068	0					
ANR	3382140	Identifier	memcpy		3382068	0					
ANR	3382141	ArgumentList	& dataGram [ 11 ]		3382068	1					
ANR	3382142	Argument	& dataGram [ 11 ]		3382068	0					
ANR	3382143	UnaryOperationExpression	& dataGram [ 11 ]		3382068	0					
ANR	3382144	UnaryOperator	&		3382068	0					
ANR	3382145	ArrayIndexing	dataGram [ 11 ]		3382068	1					
ANR	3382146	Identifier	dataGram		3382068	0					
ANR	3382147	PrimaryExpression	11		3382068	1					
ANR	3382148	Argument	& stemp		3382068	1					
ANR	3382149	UnaryOperationExpression	& stemp		3382068	0					
ANR	3382150	UnaryOperator	&		3382068	0					
ANR	3382151	Identifier	stemp		3382068	1					
ANR	3382152	Argument	2		3382068	2					
ANR	3382153	PrimaryExpression	2		3382068	0					
ANR	3382154	ExpressionStatement	ltemp = htonl ( ( u_long ) msgID . ip_addr )	532:1:13951:13987	3382068	8	True				
ANR	3382155	AssignmentExpression	ltemp = htonl ( ( u_long ) msgID . ip_addr )		3382068	0		=			
ANR	3382156	Identifier	ltemp		3382068	0					
ANR	3382157	CallExpression	htonl ( ( u_long ) msgID . ip_addr )		3382068	1					
ANR	3382158	Callee	htonl		3382068	0					
ANR	3382159	Identifier	htonl		3382068	0					
ANR	3382160	ArgumentList	( u_long ) msgID . ip_addr		3382068	1					
ANR	3382161	Argument	( u_long ) msgID . ip_addr		3382068	0					
ANR	3382162	CastExpression	( u_long ) msgID . ip_addr		3382068	0					
ANR	3382163	CastTarget	u_long		3382068	0					
ANR	3382164	MemberAccess	msgID . ip_addr		3382068	1					
ANR	3382165	Identifier	msgID		3382068	0					
ANR	3382166	Identifier	ip_addr		3382068	1					
ANR	3382167	ExpressionStatement	"memcpy ( & dataGram [ 13 ] , & ltemp , 4 )"	533:1:13990:14022	3382068	9	True				
ANR	3382168	CallExpression	"memcpy ( & dataGram [ 13 ] , & ltemp , 4 )"		3382068	0					
ANR	3382169	Callee	memcpy		3382068	0					
ANR	3382170	Identifier	memcpy		3382068	0					
ANR	3382171	ArgumentList	& dataGram [ 13 ]		3382068	1					
ANR	3382172	Argument	& dataGram [ 13 ]		3382068	0					
ANR	3382173	UnaryOperationExpression	& dataGram [ 13 ]		3382068	0					
ANR	3382174	UnaryOperator	&		3382068	0					
ANR	3382175	ArrayIndexing	dataGram [ 13 ]		3382068	1					
ANR	3382176	Identifier	dataGram		3382068	0					
ANR	3382177	PrimaryExpression	13		3382068	1					
ANR	3382178	Argument	& ltemp		3382068	1					
ANR	3382179	UnaryOperationExpression	& ltemp		3382068	0					
ANR	3382180	UnaryOperator	&		3382068	0					
ANR	3382181	Identifier	ltemp		3382068	1					
ANR	3382182	Argument	4		3382068	2					
ANR	3382183	PrimaryExpression	4		3382068	0					
ANR	3382184	ExpressionStatement	stemp = htons ( ( u_short ) msgID . pid )	535:1:14026:14059	3382068	10	True				
ANR	3382185	AssignmentExpression	stemp = htons ( ( u_short ) msgID . pid )		3382068	0		=			
ANR	3382186	Identifier	stemp		3382068	0					
ANR	3382187	CallExpression	htons ( ( u_short ) msgID . pid )		3382068	1					
ANR	3382188	Callee	htons		3382068	0					
ANR	3382189	Identifier	htons		3382068	0					
ANR	3382190	ArgumentList	( u_short ) msgID . pid		3382068	1					
ANR	3382191	Argument	( u_short ) msgID . pid		3382068	0					
ANR	3382192	CastExpression	( u_short ) msgID . pid		3382068	0					
ANR	3382193	CastTarget	u_short		3382068	0					
ANR	3382194	MemberAccess	msgID . pid		3382068	1					
ANR	3382195	Identifier	msgID		3382068	0					
ANR	3382196	Identifier	pid		3382068	1					
ANR	3382197	ExpressionStatement	"memcpy ( & dataGram [ 17 ] , & stemp , 2 )"	536:1:14062:14094	3382068	11	True				
ANR	3382198	CallExpression	"memcpy ( & dataGram [ 17 ] , & stemp , 2 )"		3382068	0					
ANR	3382199	Callee	memcpy		3382068	0					
ANR	3382200	Identifier	memcpy		3382068	0					
ANR	3382201	ArgumentList	& dataGram [ 17 ]		3382068	1					
ANR	3382202	Argument	& dataGram [ 17 ]		3382068	0					
ANR	3382203	UnaryOperationExpression	& dataGram [ 17 ]		3382068	0					
ANR	3382204	UnaryOperator	&		3382068	0					
ANR	3382205	ArrayIndexing	dataGram [ 17 ]		3382068	1					
ANR	3382206	Identifier	dataGram		3382068	0					
ANR	3382207	PrimaryExpression	17		3382068	1					
ANR	3382208	Argument	& stemp		3382068	1					
ANR	3382209	UnaryOperationExpression	& stemp		3382068	0					
ANR	3382210	UnaryOperator	&		3382068	0					
ANR	3382211	Identifier	stemp		3382068	1					
ANR	3382212	Argument	2		3382068	2					
ANR	3382213	PrimaryExpression	2		3382068	0					
ANR	3382214	ExpressionStatement	ltemp = htonl ( ( u_long ) msgID . time )	538:1:14098:14131	3382068	12	True				
ANR	3382215	AssignmentExpression	ltemp = htonl ( ( u_long ) msgID . time )		3382068	0		=			
ANR	3382216	Identifier	ltemp		3382068	0					
ANR	3382217	CallExpression	htonl ( ( u_long ) msgID . time )		3382068	1					
ANR	3382218	Callee	htonl		3382068	0					
ANR	3382219	Identifier	htonl		3382068	0					
ANR	3382220	ArgumentList	( u_long ) msgID . time		3382068	1					
ANR	3382221	Argument	( u_long ) msgID . time		3382068	0					
ANR	3382222	CastExpression	( u_long ) msgID . time		3382068	0					
ANR	3382223	CastTarget	u_long		3382068	0					
ANR	3382224	MemberAccess	msgID . time		3382068	1					
ANR	3382225	Identifier	msgID		3382068	0					
ANR	3382226	Identifier	time		3382068	1					
ANR	3382227	ExpressionStatement	"memcpy ( & dataGram [ 19 ] , & ltemp , 4 )"	539:1:14134:14166	3382068	13	True				
ANR	3382228	CallExpression	"memcpy ( & dataGram [ 19 ] , & ltemp , 4 )"		3382068	0					
ANR	3382229	Callee	memcpy		3382068	0					
ANR	3382230	Identifier	memcpy		3382068	0					
ANR	3382231	ArgumentList	& dataGram [ 19 ]		3382068	1					
ANR	3382232	Argument	& dataGram [ 19 ]		3382068	0					
ANR	3382233	UnaryOperationExpression	& dataGram [ 19 ]		3382068	0					
ANR	3382234	UnaryOperator	&		3382068	0					
ANR	3382235	ArrayIndexing	dataGram [ 19 ]		3382068	1					
ANR	3382236	Identifier	dataGram		3382068	0					
ANR	3382237	PrimaryExpression	19		3382068	1					
ANR	3382238	Argument	& ltemp		3382068	1					
ANR	3382239	UnaryOperationExpression	& ltemp		3382068	0					
ANR	3382240	UnaryOperator	&		3382068	0					
ANR	3382241	Identifier	ltemp		3382068	1					
ANR	3382242	Argument	4		3382068	2					
ANR	3382243	PrimaryExpression	4		3382068	0					
ANR	3382244	ExpressionStatement	stemp = htons ( ( u_short ) msgID . msgNo )	541:1:14170:14205	3382068	14	True				
ANR	3382245	AssignmentExpression	stemp = htons ( ( u_short ) msgID . msgNo )		3382068	0		=			
ANR	3382246	Identifier	stemp		3382068	0					
ANR	3382247	CallExpression	htons ( ( u_short ) msgID . msgNo )		3382068	1					
ANR	3382248	Callee	htons		3382068	0					
ANR	3382249	Identifier	htons		3382068	0					
ANR	3382250	ArgumentList	( u_short ) msgID . msgNo		3382068	1					
ANR	3382251	Argument	( u_short ) msgID . msgNo		3382068	0					
ANR	3382252	CastExpression	( u_short ) msgID . msgNo		3382068	0					
ANR	3382253	CastTarget	u_short		3382068	0					
ANR	3382254	MemberAccess	msgID . msgNo		3382068	1					
ANR	3382255	Identifier	msgID		3382068	0					
ANR	3382256	Identifier	msgNo		3382068	1					
ANR	3382257	ExpressionStatement	"memcpy ( & dataGram [ 23 ] , & stemp , 2 )"	542:1:14208:14240	3382068	15	True				
ANR	3382258	CallExpression	"memcpy ( & dataGram [ 23 ] , & stemp , 2 )"		3382068	0					
ANR	3382259	Callee	memcpy		3382068	0					
ANR	3382260	Identifier	memcpy		3382068	0					
ANR	3382261	ArgumentList	& dataGram [ 23 ]		3382068	1					
ANR	3382262	Argument	& dataGram [ 23 ]		3382068	0					
ANR	3382263	UnaryOperationExpression	& dataGram [ 23 ]		3382068	0					
ANR	3382264	UnaryOperator	&		3382068	0					
ANR	3382265	ArrayIndexing	dataGram [ 23 ]		3382068	1					
ANR	3382266	Identifier	dataGram		3382068	0					
ANR	3382267	PrimaryExpression	23		3382068	1					
ANR	3382268	Argument	& stemp		3382068	1					
ANR	3382269	UnaryOperationExpression	& stemp		3382068	0					
ANR	3382270	UnaryOperator	&		3382068	0					
ANR	3382271	Identifier	stemp		3382068	1					
ANR	3382272	Argument	2		3382068	2					
ANR	3382273	PrimaryExpression	2		3382068	0					
ANR	3382274	IdentifierDeclStatement	short flags = 0 ;	547:4:14399:14414	3382068	16	True				
ANR	3382275	IdentifierDecl	flags = 0		3382068	0					
ANR	3382276	IdentifierDeclType	short		3382068	0					
ANR	3382277	Identifier	flags		3382068	1					
ANR	3382278	AssignmentExpression	flags = 0		3382068	2		=			
ANR	3382279	Identifier	flags		3382068	0					
ANR	3382280	PrimaryExpression	0		3382068	1					
ANR	3382281	IfStatement	if ( outgoingMD5KeyId_ )		3382068	17					
ANR	3382282	Condition	outgoingMD5KeyId_	548:8:14424:14440	3382068	0	True				
ANR	3382283	Identifier	outgoingMD5KeyId_		3382068	0					
ANR	3382284	CompoundStatement		30:27:738:738	3382068	1					
ANR	3382285	ExpressionStatement	flags |= MD_IS_ON	549:8:14453:14470	3382068	0	True				
ANR	3382286	AssignmentExpression	flags |= MD_IS_ON		3382068	0		|=			
ANR	3382287	Identifier	flags		3382068	0					
ANR	3382288	Identifier	MD_IS_ON		3382068	1					
ANR	3382289	IfStatement	if ( outgoingEncKeyId_ )		3382068	18					
ANR	3382290	Condition	outgoingEncKeyId_	551:8:14486:14502	3382068	0	True				
ANR	3382291	Identifier	outgoingEncKeyId_		3382068	0					
ANR	3382292	CompoundStatement		33:27:800:800	3382068	1					
ANR	3382293	ExpressionStatement	flags |= ENCRYPTION_IS_ON	552:8:14515:14540	3382068	0	True				
ANR	3382294	AssignmentExpression	flags |= ENCRYPTION_IS_ON		3382068	0		|=			
ANR	3382295	Identifier	flags		3382068	0					
ANR	3382296	Identifier	ENCRYPTION_IS_ON		3382068	1					
ANR	3382297	IfStatement	if ( flags != 0 )		3382068	19					
ANR	3382298	Condition	flags != 0	555:8:14561:14570	3382068	0	True				
ANR	3382299	EqualityExpression	flags != 0		3382068	0		!=			
ANR	3382300	Identifier	flags		3382068	0					
ANR	3382301	PrimaryExpression	0		3382068	1					
ANR	3382302	CompoundStatement		37:20:868:868	3382068	1					
ANR	3382303	ExpressionStatement	"memcpy ( & dataGram [ 25 ] , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 )"	557:8:14632:14699	3382068	0	True				
ANR	3382304	CallExpression	"memcpy ( & dataGram [ 25 ] , THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD , 4 )"		3382068	0					
ANR	3382305	Callee	memcpy		3382068	0					
ANR	3382306	Identifier	memcpy		3382068	0					
ANR	3382307	ArgumentList	& dataGram [ 25 ]		3382068	1					
ANR	3382308	Argument	& dataGram [ 25 ]		3382068	0					
ANR	3382309	UnaryOperationExpression	& dataGram [ 25 ]		3382068	0					
ANR	3382310	UnaryOperator	&		3382068	0					
ANR	3382311	ArrayIndexing	dataGram [ 25 ]		3382068	1					
ANR	3382312	Identifier	dataGram		3382068	0					
ANR	3382313	PrimaryExpression	25		3382068	1					
ANR	3382314	Argument	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		3382068	1					
ANR	3382315	Identifier	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		3382068	0					
ANR	3382316	Argument	4		3382068	2					
ANR	3382317	PrimaryExpression	4		3382068	0					
ANR	3382318	ExpressionStatement	stemp = htons ( ( u_short ) flags )	559:8:14710:14739	3382068	1	True				
ANR	3382319	AssignmentExpression	stemp = htons ( ( u_short ) flags )		3382068	0		=			
ANR	3382320	Identifier	stemp		3382068	0					
ANR	3382321	CallExpression	htons ( ( u_short ) flags )		3382068	1					
ANR	3382322	Callee	htons		3382068	0					
ANR	3382323	Identifier	htons		3382068	0					
ANR	3382324	ArgumentList	( u_short ) flags		3382068	1					
ANR	3382325	Argument	( u_short ) flags		3382068	0					
ANR	3382326	CastExpression	( u_short ) flags		3382068	0					
ANR	3382327	CastTarget	u_short		3382068	0					
ANR	3382328	Identifier	flags		3382068	1					
ANR	3382329	ExpressionStatement	"memcpy ( & dataGram [ 29 ] , & stemp , 2 )"	560:8:14749:14781	3382068	2	True				
ANR	3382330	CallExpression	"memcpy ( & dataGram [ 29 ] , & stemp , 2 )"		3382068	0					
ANR	3382331	Callee	memcpy		3382068	0					
ANR	3382332	Identifier	memcpy		3382068	0					
ANR	3382333	ArgumentList	& dataGram [ 29 ]		3382068	1					
ANR	3382334	Argument	& dataGram [ 29 ]		3382068	0					
ANR	3382335	UnaryOperationExpression	& dataGram [ 29 ]		3382068	0					
ANR	3382336	UnaryOperator	&		3382068	0					
ANR	3382337	ArrayIndexing	dataGram [ 29 ]		3382068	1					
ANR	3382338	Identifier	dataGram		3382068	0					
ANR	3382339	PrimaryExpression	29		3382068	1					
ANR	3382340	Argument	& stemp		3382068	1					
ANR	3382341	UnaryOperationExpression	& stemp		3382068	0					
ANR	3382342	UnaryOperator	&		3382068	0					
ANR	3382343	Identifier	stemp		3382068	1					
ANR	3382344	Argument	2		3382068	2					
ANR	3382345	PrimaryExpression	2		3382068	0					
ANR	3382346	ExpressionStatement	stemp = htons ( ( u_short ) outgoingMdLen_ )	562:8:14835:14874	3382068	3	True				
ANR	3382347	AssignmentExpression	stemp = htons ( ( u_short ) outgoingMdLen_ )		3382068	0		=			
ANR	3382348	Identifier	stemp		3382068	0					
ANR	3382349	CallExpression	htons ( ( u_short ) outgoingMdLen_ )		3382068	1					
ANR	3382350	Callee	htons		3382068	0					
ANR	3382351	Identifier	htons		3382068	0					
ANR	3382352	ArgumentList	( u_short ) outgoingMdLen_		3382068	1					
ANR	3382353	Argument	( u_short ) outgoingMdLen_		3382068	0					
ANR	3382354	CastExpression	( u_short ) outgoingMdLen_		3382068	0					
ANR	3382355	CastTarget	u_short		3382068	0					
ANR	3382356	Identifier	outgoingMdLen_		3382068	1					
ANR	3382357	ExpressionStatement	"memcpy ( & dataGram [ 31 ] , & stemp , 2 )"	563:8:14884:14916	3382068	4	True				
ANR	3382358	CallExpression	"memcpy ( & dataGram [ 31 ] , & stemp , 2 )"		3382068	0					
ANR	3382359	Callee	memcpy		3382068	0					
ANR	3382360	Identifier	memcpy		3382068	0					
ANR	3382361	ArgumentList	& dataGram [ 31 ]		3382068	1					
ANR	3382362	Argument	& dataGram [ 31 ]		3382068	0					
ANR	3382363	UnaryOperationExpression	& dataGram [ 31 ]		3382068	0					
ANR	3382364	UnaryOperator	&		3382068	0					
ANR	3382365	ArrayIndexing	dataGram [ 31 ]		3382068	1					
ANR	3382366	Identifier	dataGram		3382068	0					
ANR	3382367	PrimaryExpression	31		3382068	1					
ANR	3382368	Argument	& stemp		3382068	1					
ANR	3382369	UnaryOperationExpression	& stemp		3382068	0					
ANR	3382370	UnaryOperator	&		3382068	0					
ANR	3382371	Identifier	stemp		3382068	1					
ANR	3382372	Argument	2		3382068	2					
ANR	3382373	PrimaryExpression	2		3382068	0					
ANR	3382374	ExpressionStatement	stemp = htons ( ( u_short ) outgoingEidLen_ )	565:8:14970:15010	3382068	5	True				
ANR	3382375	AssignmentExpression	stemp = htons ( ( u_short ) outgoingEidLen_ )		3382068	0		=			
ANR	3382376	Identifier	stemp		3382068	0					
ANR	3382377	CallExpression	htons ( ( u_short ) outgoingEidLen_ )		3382068	1					
ANR	3382378	Callee	htons		3382068	0					
ANR	3382379	Identifier	htons		3382068	0					
ANR	3382380	ArgumentList	( u_short ) outgoingEidLen_		3382068	1					
ANR	3382381	Argument	( u_short ) outgoingEidLen_		3382068	0					
ANR	3382382	CastExpression	( u_short ) outgoingEidLen_		3382068	0					
ANR	3382383	CastTarget	u_short		3382068	0					
ANR	3382384	Identifier	outgoingEidLen_		3382068	1					
ANR	3382385	ExpressionStatement	"memcpy ( & dataGram [ 33 ] , & stemp , 2 )"	566:8:15020:15052	3382068	6	True				
ANR	3382386	CallExpression	"memcpy ( & dataGram [ 33 ] , & stemp , 2 )"		3382068	0					
ANR	3382387	Callee	memcpy		3382068	0					
ANR	3382388	Identifier	memcpy		3382068	0					
ANR	3382389	ArgumentList	& dataGram [ 33 ]		3382068	1					
ANR	3382390	Argument	& dataGram [ 33 ]		3382068	0					
ANR	3382391	UnaryOperationExpression	& dataGram [ 33 ]		3382068	0					
ANR	3382392	UnaryOperator	&		3382068	0					
ANR	3382393	ArrayIndexing	dataGram [ 33 ]		3382068	1					
ANR	3382394	Identifier	dataGram		3382068	0					
ANR	3382395	PrimaryExpression	33		3382068	1					
ANR	3382396	Argument	& stemp		3382068	1					
ANR	3382397	UnaryOperationExpression	& stemp		3382068	0					
ANR	3382398	UnaryOperator	&		3382068	0					
ANR	3382399	Identifier	stemp		3382068	1					
ANR	3382400	Argument	2		3382068	2					
ANR	3382401	PrimaryExpression	2		3382068	0					
ANR	3382402	ExpressionStatement	addExtendedHeader ( mac )	568:8:15063:15085	3382068	7	True				
ANR	3382403	CallExpression	addExtendedHeader ( mac )		3382068	0					
ANR	3382404	Callee	addExtendedHeader		3382068	0					
ANR	3382405	Identifier	addExtendedHeader		3382068	0					
ANR	3382406	ArgumentList	mac		3382068	1					
ANR	3382407	Argument	mac		3382068	0					
ANR	3382408	Identifier	mac		3382068	0					
ANR	3382409	ReturnType	void		3382068	1					
ANR	3382410	Identifier	_condorPacket :: makeHeader		3382068	2					
ANR	3382411	ParameterList	"bool last , int seqNo , _condorMsgID msgID , unsigned char * mac"		3382068	3					
ANR	3382412	Parameter	bool last	516:31:13577:13585	3382068	0	True				
ANR	3382413	ParameterType	bool		3382068	0					
ANR	3382414	Identifier	last		3382068	1					
ANR	3382415	Parameter	int seqNo	516:42:13588:13596	3382068	1	True				
ANR	3382416	ParameterType	int		3382068	0					
ANR	3382417	Identifier	seqNo		3382068	1					
ANR	3382418	Parameter	_condorMsgID msgID	517:31:13631:13648	3382068	2	True				
ANR	3382419	ParameterType	_condorMsgID		3382068	0					
ANR	3382420	Identifier	msgID		3382068	1					
ANR	3382421	Parameter	unsigned char * mac	518:31:13683:13701	3382068	3	True				
ANR	3382422	ParameterType	unsigned char *		3382068	0					
ANR	3382423	Identifier	mac		3382068	1					
ANR	3382424	CFGEntryNode	ENTRY		3382068		True				
ANR	3382425	CFGExitNode	EXIT		3382068		True				
ANR	3382426	Symbol	seqNo		3382068						
ANR	3382427	Symbol	outgoingEncKeyId_		3382068						
ANR	3382428	Symbol	MD_IS_ON		3382068						
ANR	3382429	Symbol	htons		3382068						
ANR	3382430	Symbol	flags		3382068						
ANR	3382431	Symbol	outgoingMdLen_		3382068						
ANR	3382432	Symbol	stemp		3382068						
ANR	3382433	Symbol	mac		3382068						
ANR	3382434	Symbol	htonl		3382068						
ANR	3382435	Symbol	msgID . ip_addr		3382068						
ANR	3382436	Symbol	THIS_IS_TOO_UGLY_FOR_THE_SAKE_OF_BACKWARD		3382068						
ANR	3382437	Symbol	& stemp		3382068						
ANR	3382438	Symbol	* dataGram		3382068						
ANR	3382439	Symbol	msgID . pid		3382068						
ANR	3382440	Symbol	msgID . msgNo		3382068						
ANR	3382441	Symbol	last		3382068						
ANR	3382442	Symbol	ltemp		3382068						
ANR	3382443	Symbol	length		3382068						
ANR	3382444	Symbol	msgID		3382068						
ANR	3382445	Symbol	ENCRYPTION_IS_ON		3382068						
ANR	3382446	Symbol	SAFE_MSG_MAGIC		3382068						
ANR	3382447	Symbol	& ltemp		3382068						
ANR	3382448	Symbol	dataGram		3382068						
ANR	3382449	Symbol	msgID . time		3382068						
ANR	3382450	Symbol	outgoingEidLen_		3382068						
ANR	3382451	Symbol	outgoingMD5KeyId_		3382068						
ANR	3382452	Function	_condorPacket :: dumpPacket	573:0:15145:15931							
ANR	3382453	FunctionDef	_condorPacket :: dumpPacket ()		3382452	0					
ANR	3382454	CompoundStatement		574:0:15178:15931	3382452	0					
ANR	3382455	IdentifierDeclStatement	bool last ;	575:1:15181:15190	3382452	0	True				
ANR	3382456	IdentifierDecl	last		3382452	0					
ANR	3382457	IdentifierDeclType	bool		3382452	0					
ANR	3382458	Identifier	last		3382452	1					
ANR	3382459	IdentifierDeclStatement	int seq ;	576:1:15193:15200	3382452	1	True				
ANR	3382460	IdentifierDecl	seq		3382452	0					
ANR	3382461	IdentifierDeclType	int		3382452	0					
ANR	3382462	Identifier	seq		3382452	1					
ANR	3382463	IdentifierDeclStatement	int len = - 1 ;	577:1:15203:15215	3382452	2	True				
ANR	3382464	IdentifierDecl	len = - 1		3382452	0					
ANR	3382465	IdentifierDeclType	int		3382452	0					
ANR	3382466	Identifier	len		3382452	1					
ANR	3382467	AssignmentExpression	len = - 1		3382452	2		=			
ANR	3382468	Identifier	len		3382452	0					
ANR	3382469	UnaryOperationExpression	- 1		3382452	1					
ANR	3382470	UnaryOperator	-		3382452	0					
ANR	3382471	PrimaryExpression	1		3382452	1					
ANR	3382472	IdentifierDeclStatement	_condorMsgID mID ;	578:1:15218:15234	3382452	3	True				
ANR	3382473	IdentifierDecl	mID		3382452	0					
ANR	3382474	IdentifierDeclType	_condorMsgID		3382452	0					
ANR	3382475	Identifier	mID		3382452	1					
ANR	3382476	IdentifierDeclStatement	void * dta ;	579:1:15237:15246	3382452	4	True				
ANR	3382477	IdentifierDecl	* dta		3382452	0					
ANR	3382478	IdentifierDeclType	void *		3382452	0					
ANR	3382479	Identifier	dta		3382452	1					
ANR	3382480	IfStatement	"if ( getHeader ( 6000 , last , seq , len , mID , dta ) )"		3382452	5					
ANR	3382481	Condition	"getHeader ( 6000 , last , seq , len , mID , dta )"	582:4:15311:15351	3382452	0	True				
ANR	3382482	CallExpression	"getHeader ( 6000 , last , seq , len , mID , dta )"		3382452	0					
ANR	3382483	Callee	getHeader		3382452	0					
ANR	3382484	Identifier	getHeader		3382452	0					
ANR	3382485	ArgumentList	6000		3382452	1					
ANR	3382486	Argument	6000		3382452	0					
ANR	3382487	PrimaryExpression	6000		3382452	0					
ANR	3382488	Argument	last		3382452	1					
ANR	3382489	Identifier	last		3382452	0					
ANR	3382490	Argument	seq		3382452	2					
ANR	3382491	Identifier	seq		3382452	0					
ANR	3382492	Argument	len		3382452	3					
ANR	3382493	Identifier	len		3382452	0					
ANR	3382494	Argument	mID		3382452	4					
ANR	3382495	Identifier	mID		3382452	0					
ANR	3382496	Argument	dta		3382452	5					
ANR	3382497	Identifier	dta		3382452	0					
ANR	3382498	CompoundStatement		9:47:175:175	3382452	1					
ANR	3382499	ExpressionStatement	"dprintf ( D_NETWORK , ""(short) "" )"	583:2:15358:15388	3382452	0	True				
ANR	3382500	CallExpression	"dprintf ( D_NETWORK , ""(short) "" )"		3382452	0					
ANR	3382501	Callee	dprintf		3382452	0					
ANR	3382502	Identifier	dprintf		3382452	0					
ANR	3382503	ArgumentList	D_NETWORK		3382452	1					
ANR	3382504	Argument	D_NETWORK		3382452	0					
ANR	3382505	Identifier	D_NETWORK		3382452	0					
ANR	3382506	Argument	"""(short) """		3382452	1					
ANR	3382507	PrimaryExpression	"""(short) """		3382452	0					
ANR	3382508	ForStatement	for ( int i = 0 ; i < length ; i ++ )		3382452	1					
ANR	3382509	ForInit	int i = 0 ;	584:6:15396:15403	3382452	0	True				
ANR	3382510	IdentifierDeclStatement	int i = 0 ;		3382452	0					
ANR	3382511	IdentifierDecl	i = 0		3382452	0					
ANR	3382512	IdentifierDeclType	int		3382452	0					
ANR	3382513	Identifier	i		3382452	1					
ANR	3382514	AssignmentExpression	i = 0		3382452	2		=			
ANR	3382515	Identifier	i		3382452	0					
ANR	3382516	PrimaryExpression	0		3382452	1					
ANR	3382517	Condition	i < length	584:15:15405:15412	3382452	1	True				
ANR	3382518	RelationalExpression	i < length		3382452	0		<			
ANR	3382519	Identifier	i		3382452	0					
ANR	3382520	Identifier	length		3382452	1					
ANR	3382521	PostIncDecOperationExpression	i ++	584:25:15415:15417	3382452	2	True				
ANR	3382522	Identifier	i		3382452	0					
ANR	3382523	IncDec	++		3382452	1					
ANR	3382524	CompoundStatement		11:30:241:241	3382452	3					
ANR	3382525	IfStatement	if ( i < 200 )		3382452	0					
ANR	3382526	Condition	i < 200	585:6:15428:15434	3382452	0	True				
ANR	3382527	RelationalExpression	i < 200		3382452	0		<			
ANR	3382528	Identifier	i		3382452	0					
ANR	3382529	PrimaryExpression	200		3382452	1					
ANR	3382530	ExpressionStatement	"dprintf ( D_NETWORK , ""%c"" , data [ i ] )"	586:4:15441:15474	3382452	1	True				
ANR	3382531	CallExpression	"dprintf ( D_NETWORK , ""%c"" , data [ i ] )"		3382452	0					
ANR	3382532	Callee	dprintf		3382452	0					
ANR	3382533	Identifier	dprintf		3382452	0					
ANR	3382534	ArgumentList	D_NETWORK		3382452	1					
ANR	3382535	Argument	D_NETWORK		3382452	0					
ANR	3382536	Identifier	D_NETWORK		3382452	0					
ANR	3382537	Argument	"""%c"""		3382452	1					
ANR	3382538	PrimaryExpression	"""%c"""		3382452	0					
ANR	3382539	Argument	data [ i ]		3382452	2					
ANR	3382540	ArrayIndexing	data [ i ]		3382452	0					
ANR	3382541	Identifier	data		3382452	0					
ANR	3382542	Identifier	i		3382452	1					
ANR	3382543	ElseStatement	else		3382452	0					
ANR	3382544	CompoundStatement		14:8:305:305	3382452	0					
ANR	3382545	ExpressionStatement	"dprintf ( D_NETWORK , ""..."" )"	588:4:15490:15515	3382452	0	True				
ANR	3382546	CallExpression	"dprintf ( D_NETWORK , ""..."" )"		3382452	0					
ANR	3382547	Callee	dprintf		3382452	0					
ANR	3382548	Identifier	dprintf		3382452	0					
ANR	3382549	ArgumentList	D_NETWORK		3382452	1					
ANR	3382550	Argument	D_NETWORK		3382452	0					
ANR	3382551	Identifier	D_NETWORK		3382452	0					
ANR	3382552	Argument	"""..."""		3382452	1					
ANR	3382553	PrimaryExpression	"""..."""		3382452	0					
ANR	3382554	BreakStatement	break ;	589:4:15521:15526	3382452	1	True				
ANR	3382555	ExpressionStatement	"dprintf ( D_NETWORK , ""\\n"" )"	592:2:15539:15563	3382452	2	True				
ANR	3382556	CallExpression	"dprintf ( D_NETWORK , ""\\n"" )"		3382452	0					
ANR	3382557	Callee	dprintf		3382452	0					
ANR	3382558	Identifier	dprintf		3382452	0					
ANR	3382559	ArgumentList	D_NETWORK		3382452	1					
ANR	3382560	Argument	D_NETWORK		3382452	0					
ANR	3382561	Identifier	D_NETWORK		3382452	0					
ANR	3382562	Argument	"""\\n"""		3382452	1					
ANR	3382563	PrimaryExpression	"""\\n"""		3382452	0					
ANR	3382564	ElseStatement	else		3382452	0					
ANR	3382565	CompoundStatement		22:6:425:425	3382452	0					
ANR	3382566	ExpressionStatement	"dprintf ( D_NETWORK , ""[%d] ("" , seq )"	596:2:15608:15641	3382452	0	True				
ANR	3382567	CallExpression	"dprintf ( D_NETWORK , ""[%d] ("" , seq )"		3382452	0					
ANR	3382568	Callee	dprintf		3382452	0					
ANR	3382569	Identifier	dprintf		3382452	0					
ANR	3382570	ArgumentList	D_NETWORK		3382452	1					
ANR	3382571	Argument	D_NETWORK		3382452	0					
ANR	3382572	Identifier	D_NETWORK		3382452	0					
ANR	3382573	Argument	"""[%d] ("""		3382452	1					
ANR	3382574	PrimaryExpression	"""[%d] ("""		3382452	0					
ANR	3382575	Argument	seq		3382452	2					
ANR	3382576	Identifier	seq		3382452	0					
ANR	3382577	IfStatement	if ( last )		3382452	1					
ANR	3382578	Condition	last	597:5:15648:15651	3382452	0	True				
ANR	3382579	Identifier	last		3382452	0					
ANR	3382580	ExpressionStatement	"dprintf ( D_NETWORK , ""Y, "" )"	598:3:15657:15682	3382452	1	True				
ANR	3382581	CallExpression	"dprintf ( D_NETWORK , ""Y, "" )"		3382452	0					
ANR	3382582	Callee	dprintf		3382452	0					
ANR	3382583	Identifier	dprintf		3382452	0					
ANR	3382584	ArgumentList	D_NETWORK		3382452	1					
ANR	3382585	Argument	D_NETWORK		3382452	0					
ANR	3382586	Identifier	D_NETWORK		3382452	0					
ANR	3382587	Argument	"""Y, """		3382452	1					
ANR	3382588	PrimaryExpression	"""Y, """		3382452	0					
ANR	3382589	ElseStatement	else		3382452	0					
ANR	3382590	ExpressionStatement	"dprintf ( D_NETWORK , ""N, "" )"	600:3:15694:15719	3382452	0	True				
ANR	3382591	CallExpression	"dprintf ( D_NETWORK , ""N, "" )"		3382452	0					
ANR	3382592	Callee	dprintf		3382452	0					
ANR	3382593	Identifier	dprintf		3382452	0					
ANR	3382594	ArgumentList	D_NETWORK		3382452	1					
ANR	3382595	Argument	D_NETWORK		3382452	0					
ANR	3382596	Identifier	D_NETWORK		3382452	0					
ANR	3382597	Argument	"""N, """		3382452	1					
ANR	3382598	PrimaryExpression	"""N, """		3382452	0					
ANR	3382599	ExpressionStatement	"dprintf ( D_NETWORK , ""%d)\\t"" , len )"	601:2:15723:15755	3382452	2	True				
ANR	3382600	CallExpression	"dprintf ( D_NETWORK , ""%d)\\t"" , len )"		3382452	0					
ANR	3382601	Callee	dprintf		3382452	0					
ANR	3382602	Identifier	dprintf		3382452	0					
ANR	3382603	ArgumentList	D_NETWORK		3382452	1					
ANR	3382604	Argument	D_NETWORK		3382452	0					
ANR	3382605	Identifier	D_NETWORK		3382452	0					
ANR	3382606	Argument	"""%d)\\t"""		3382452	1					
ANR	3382607	PrimaryExpression	"""%d)\\t"""		3382452	0					
ANR	3382608	Argument	len		3382452	2					
ANR	3382609	Identifier	len		3382452	0					
ANR	3382610	ForStatement	for ( int i = 0 ; i < len ; i ++ )		3382452	3					
ANR	3382611	ForInit	int i = 0 ;	602:6:15763:15770	3382452	0	True				
ANR	3382612	IdentifierDeclStatement	int i = 0 ;		3382452	0					
ANR	3382613	IdentifierDecl	i = 0		3382452	0					
ANR	3382614	IdentifierDeclType	int		3382452	0					
ANR	3382615	Identifier	i		3382452	1					
ANR	3382616	AssignmentExpression	i = 0		3382452	2		=			
ANR	3382617	Identifier	i		3382452	0					
ANR	3382618	PrimaryExpression	0		3382452	1					
ANR	3382619	Condition	i < len	602:15:15772:15776	3382452	1	True				
ANR	3382620	RelationalExpression	i < len		3382452	0		<			
ANR	3382621	Identifier	i		3382452	0					
ANR	3382622	Identifier	len		3382452	1					
ANR	3382623	PostIncDecOperationExpression	i ++	602:22:15779:15781	3382452	2	True				
ANR	3382624	Identifier	i		3382452	0					
ANR	3382625	IncDec	++		3382452	1					
ANR	3382626	CompoundStatement		29:27:605:605	3382452	3					
ANR	3382627	IfStatement	if ( i < 200 )		3382452	0					
ANR	3382628	Condition	i < 200	603:6:15792:15798	3382452	0	True				
ANR	3382629	RelationalExpression	i < 200		3382452	0		<			
ANR	3382630	Identifier	i		3382452	0					
ANR	3382631	PrimaryExpression	200		3382452	1					
ANR	3382632	ExpressionStatement	"dprintf ( D_NETWORK , ""%c"" , dta [ i ] )"	604:4:15805:15837	3382452	1	True				
ANR	3382633	CallExpression	"dprintf ( D_NETWORK , ""%c"" , dta [ i ] )"		3382452	0					
ANR	3382634	Callee	dprintf		3382452	0					
ANR	3382635	Identifier	dprintf		3382452	0					
ANR	3382636	ArgumentList	D_NETWORK		3382452	1					
ANR	3382637	Argument	D_NETWORK		3382452	0					
ANR	3382638	Identifier	D_NETWORK		3382452	0					
ANR	3382639	Argument	"""%c"""		3382452	1					
ANR	3382640	PrimaryExpression	"""%c"""		3382452	0					
ANR	3382641	Argument	dta [ i ]		3382452	2					
ANR	3382642	ArrayIndexing	dta [ i ]		3382452	0					
ANR	3382643	Identifier	dta		3382452	0					
ANR	3382644	Identifier	i		3382452	1					
ANR	3382645	ElseStatement	else		3382452	0					
ANR	3382646	CompoundStatement		32:8:668:668	3382452	0					
ANR	3382647	ExpressionStatement	"dprintf ( D_NETWORK , ""..."" )"	606:4:15853:15878	3382452	0	True				
ANR	3382648	CallExpression	"dprintf ( D_NETWORK , ""..."" )"		3382452	0					
ANR	3382649	Callee	dprintf		3382452	0					
ANR	3382650	Identifier	dprintf		3382452	0					
ANR	3382651	ArgumentList	D_NETWORK		3382452	1					
ANR	3382652	Argument	D_NETWORK		3382452	0					
ANR	3382653	Identifier	D_NETWORK		3382452	0					
ANR	3382654	Argument	"""..."""		3382452	1					
ANR	3382655	PrimaryExpression	"""..."""		3382452	0					
ANR	3382656	BreakStatement	break ;	607:4:15884:15889	3382452	1	True				
ANR	3382657	ExpressionStatement	"dprintf ( D_NETWORK , ""\\n"" )"	610:2:15902:15926	3382452	4	True				
ANR	3382658	CallExpression	"dprintf ( D_NETWORK , ""\\n"" )"		3382452	0					
ANR	3382659	Callee	dprintf		3382452	0					
ANR	3382660	Identifier	dprintf		3382452	0					
ANR	3382661	ArgumentList	D_NETWORK		3382452	1					
ANR	3382662	Argument	D_NETWORK		3382452	0					
ANR	3382663	Identifier	D_NETWORK		3382452	0					
ANR	3382664	Argument	"""\\n"""		3382452	1					
ANR	3382665	PrimaryExpression	"""\\n"""		3382452	0					
ANR	3382666	ReturnType	void		3382452	1					
ANR	3382667	Identifier	_condorPacket :: dumpPacket		3382452	2					
ANR	3382668	ParameterList			3382452	3					
ANR	3382669	CFGEntryNode	ENTRY		3382452		True				
ANR	3382670	CFGExitNode	EXIT		3382452		True				
ANR	3382671	Symbol	last		3382452						
ANR	3382672	Symbol	data		3382452						
ANR	3382673	Symbol	* dta		3382452						
ANR	3382674	Symbol	length		3382452						
ANR	3382675	Symbol	mID		3382452						
ANR	3382676	Symbol	i		3382452						
ANR	3382677	Symbol	getHeader		3382452						
ANR	3382678	Symbol	dta		3382452						
ANR	3382679	Symbol	* i		3382452						
ANR	3382680	Symbol	len		3382452						
ANR	3382681	Symbol	D_NETWORK		3382452						
ANR	3382682	Symbol	* data		3382452						
ANR	3382683	Symbol	seq		3382452						
ANR	3382684	Function	_condorOutMsg :: _condorOutMsg	615:0:15941:16182							
ANR	3382685	FunctionDef	_condorOutMsg :: _condorOutMsg ()		3382684	0					
ANR	3382686	CompoundStatement		616:0:15972:16182	3382684	0					
ANR	3382687	ExpressionStatement	headPacket = lastPacket = new _condorPacket ( )	617:1:15975:16020	3382684	0	True				
ANR	3382688	AssignmentExpression	headPacket = lastPacket = new _condorPacket ( )		3382684	0		=			
ANR	3382689	Identifier	headPacket		3382684	0					
ANR	3382690	AssignmentExpression	lastPacket = new _condorPacket ( )		3382684	1		=			
ANR	3382691	Identifier	lastPacket		3382684	0					
ANR	3382692	UnaryExpression	new _condorPacket ( )		3382684	1					
ANR	3382693	IfStatement	if ( ! headPacket )		3382684	1					
ANR	3382694	Condition	! headPacket	618:4:16026:16036	3382684	0	True				
ANR	3382695	UnaryOperationExpression	! headPacket		3382684	0					
ANR	3382696	UnaryOperator	!		3382684	0					
ANR	3382697	Identifier	headPacket		3382684	1					
ANR	3382698	CompoundStatement		3:17:66:66	3382684	1					
ANR	3382699	ExpressionStatement	"dprintf ( D_ALWAYS , ""new Packet failed. out of memory\\n"" )"	619:2:16043:16098	3382684	0	True				
ANR	3382700	CallExpression	"dprintf ( D_ALWAYS , ""new Packet failed. out of memory\\n"" )"		3382684	0					
ANR	3382701	Callee	dprintf		3382684	0					
ANR	3382702	Identifier	dprintf		3382684	0					
ANR	3382703	ArgumentList	D_ALWAYS		3382684	1					
ANR	3382704	Argument	D_ALWAYS		3382684	0					
ANR	3382705	Identifier	D_ALWAYS		3382684	0					
ANR	3382706	Argument	"""new Packet failed. out of memory\\n"""		3382684	1					
ANR	3382707	PrimaryExpression	"""new Packet failed. out of memory\\n"""		3382684	0					
ANR	3382708	ExpressionStatement	"EXCEPT ( ""new Packet failed. out of memory"" )"	620:2:16102:16144	3382684	1	True				
ANR	3382709	CallExpression	"EXCEPT ( ""new Packet failed. out of memory"" )"		3382684	0					
ANR	3382710	Callee	EXCEPT		3382684	0					
ANR	3382711	Identifier	EXCEPT		3382684	0					
ANR	3382712	ArgumentList	"""new Packet failed. out of memory"""		3382684	1					
ANR	3382713	Argument	"""new Packet failed. out of memory"""		3382684	0					
ANR	3382714	PrimaryExpression	"""new Packet failed. out of memory"""		3382684	0					
ANR	3382715	ExpressionStatement	noMsgSent = 0	622:1:16150:16163	3382684	2	True				
ANR	3382716	AssignmentExpression	noMsgSent = 0		3382684	0		=			
ANR	3382717	Identifier	noMsgSent		3382684	0					
ANR	3382718	PrimaryExpression	0		3382684	1					
ANR	3382719	ExpressionStatement	avgMsgSize = 0	623:1:16166:16180	3382684	3	True				
ANR	3382720	AssignmentExpression	avgMsgSize = 0		3382684	0		=			
ANR	3382721	Identifier	avgMsgSize		3382684	0					
ANR	3382722	PrimaryExpression	0		3382684	1					
ANR	3382723	Identifier	_condorOutMsg :: _condorOutMsg		3382684	1					
ANR	3382724	ParameterList			3382684	2					
ANR	3382725	CFGEntryNode	ENTRY		3382684		True				
ANR	3382726	CFGExitNode	EXIT		3382684		True				
ANR	3382727	Symbol	noMsgSent		3382684						
ANR	3382728	Symbol	lastPacket		3382684						
ANR	3382729	Symbol	avgMsgSize		3382684						
ANR	3382730	Symbol	headPacket		3382684						
ANR	3382731	Symbol	D_ALWAYS		3382684						
ANR	3382732	Function	_condorOutMsg :: ~_condorOutMsg	626:0:16185:16356							
ANR	3382733	FunctionDef	_condorOutMsg :: ~_condorOutMsg ()		3382732	0					
ANR	3382734	CompoundStatement		626:32:16217:16356	3382732	0					
ANR	3382735	IdentifierDeclStatement	_condorPacket * tempPacket ;	627:1:16220:16245	3382732	0	True				
ANR	3382736	IdentifierDecl	* tempPacket		3382732	0					
ANR	3382737	IdentifierDeclType	_condorPacket *		3382732	0					
ANR	3382738	Identifier	tempPacket		3382732	1					
ANR	3382739	WhileStatement	while ( headPacket )		3382732	1					
ANR	3382740	Condition	headPacket	629:7:16258:16267	3382732	0	True				
ANR	3382741	Identifier	headPacket		3382732	0					
ANR	3382742	CompoundStatement		4:19:52:52	3382732	1					
ANR	3382743	ExpressionStatement	tempPacket = headPacket	630:2:16274:16297	3382732	0	True				
ANR	3382744	AssignmentExpression	tempPacket = headPacket		3382732	0		=			
ANR	3382745	Identifier	tempPacket		3382732	0					
ANR	3382746	Identifier	headPacket		3382732	1					
ANR	3382747	ExpressionStatement	headPacket = headPacket -> next	631:2:16301:16330	3382732	1	True				
ANR	3382748	AssignmentExpression	headPacket = headPacket -> next		3382732	0		=			
ANR	3382749	Identifier	headPacket		3382732	0					
ANR	3382750	PtrMemberAccess	headPacket -> next		3382732	1					
ANR	3382751	Identifier	headPacket		3382732	0					
ANR	3382752	Identifier	next		3382732	1					
ANR	3382753	Statement	delete	632:2:16334:16339	3382732	2	True				
ANR	3382754	ExpressionStatement	tempPacket	632:9:16341:16351	3382732	3	True				
ANR	3382755	Identifier	tempPacket		3382732	0					
ANR	3382756	Identifier	_condorOutMsg :: ~_condorOutMsg		3382732	1					
ANR	3382757	ParameterList			3382732	2					
ANR	3382758	CFGEntryNode	ENTRY		3382732		True				
ANR	3382759	CFGExitNode	EXIT		3382732		True				
ANR	3382760	Symbol	headPacket -> next		3382732						
ANR	3382761	Symbol	* headPacket		3382732						
ANR	3382762	Symbol	tempPacket		3382732						
ANR	3382763	Symbol	headPacket		3382732						
ANR	3382764	Function	_condorOutMsg :: set_encryption_id	636:0:16359:16608							
ANR	3382765	FunctionDef	_condorOutMsg :: set_encryption_id (const char * keyId)		3382764	0					
ANR	3382766	CompoundStatement		637:0:16419:16608	3382764	0					
ANR	3382767	IfStatement	if ( ( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) ) )		3382764	0					
ANR	3382768	Condition	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )	639:8:16474:16525	3382764	0	True				
ANR	3382769	OrExpression	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )		3382764	0		||			
ANR	3382770	EqualityExpression	headPacket != lastPacket		3382764	0		!=			
ANR	3382771	Identifier	headPacket		3382764	0					
ANR	3382772	Identifier	lastPacket		3382764	1					
ANR	3382773	UnaryOperationExpression	! headPacket -> empty ( )		3382764	1					
ANR	3382774	UnaryOperator	!		3382764	0					
ANR	3382775	CallExpression	headPacket -> empty ( )		3382764	1					
ANR	3382776	Callee	headPacket -> empty		3382764	0					
ANR	3382777	PtrMemberAccess	headPacket -> empty		3382764	0					
ANR	3382778	Identifier	headPacket		3382764	0					
ANR	3382779	Identifier	empty		3382764	1					
ANR	3382780	ArgumentList			3382764	1					
ANR	3382781	CompoundStatement		3:62:108:108	3382764	1					
ANR	3382782	ReturnStatement	return false ;	640:8:16538:16550	3382764	0	True				
ANR	3382783	Identifier	false		3382764	0					
ANR	3382784	ReturnStatement	return headPacket -> set_encryption_id ( keyId ) ;	643:4:16563:16606	3382764	1	True				
ANR	3382785	CallExpression	headPacket -> set_encryption_id ( keyId )		3382764	0					
ANR	3382786	Callee	headPacket -> set_encryption_id		3382764	0					
ANR	3382787	PtrMemberAccess	headPacket -> set_encryption_id		3382764	0					
ANR	3382788	Identifier	headPacket		3382764	0					
ANR	3382789	Identifier	set_encryption_id		3382764	1					
ANR	3382790	ArgumentList	keyId		3382764	1					
ANR	3382791	Argument	keyId		3382764	0					
ANR	3382792	Identifier	keyId		3382764	0					
ANR	3382793	ReturnType	bool		3382764	1					
ANR	3382794	Identifier	_condorOutMsg :: set_encryption_id		3382764	2					
ANR	3382795	ParameterList	const char * keyId		3382764	3					
ANR	3382796	Parameter	const char * keyId	636:40:16399:16416	3382764	0	True				
ANR	3382797	ParameterType	const char *		3382764	0					
ANR	3382798	Identifier	keyId		3382764	1					
ANR	3382799	CFGEntryNode	ENTRY		3382764		True				
ANR	3382800	CFGExitNode	EXIT		3382764		True				
ANR	3382801	Symbol	lastPacket		3382764						
ANR	3382802	Symbol	headPacket -> set_encryption_id		3382764						
ANR	3382803	Symbol	* headPacket		3382764						
ANR	3382804	Symbol	headPacket		3382764						
ANR	3382805	Symbol	false		3382764						
ANR	3382806	Symbol	keyId		3382764						
ANR	3382807	Symbol	headPacket -> empty		3382764						
ANR	3382808	Function	_condorOutMsg :: init_MD	646:0:16611:16793							
ANR	3382809	FunctionDef	_condorOutMsg :: init_MD (const char * keyId)		3382808	0					
ANR	3382810	CompoundStatement		647:0:16659:16793	3382808	0					
ANR	3382811	IfStatement	if ( ( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) ) )		3382808	0					
ANR	3382812	Condition	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )	648:8:16669:16720	3382808	0	True				
ANR	3382813	OrExpression	( headPacket != lastPacket ) || ( ! headPacket -> empty ( ) )		3382808	0		||			
ANR	3382814	EqualityExpression	headPacket != lastPacket		3382808	0		!=			
ANR	3382815	Identifier	headPacket		3382808	0					
ANR	3382816	Identifier	lastPacket		3382808	1					
ANR	3382817	UnaryOperationExpression	! headPacket -> empty ( )		3382808	1					
ANR	3382818	UnaryOperator	!		3382808	0					
ANR	3382819	CallExpression	headPacket -> empty ( )		3382808	1					
ANR	3382820	Callee	headPacket -> empty		3382808	0					
ANR	3382821	PtrMemberAccess	headPacket -> empty		3382808	0					
ANR	3382822	Identifier	headPacket		3382808	0					
ANR	3382823	Identifier	empty		3382808	1					
ANR	3382824	ArgumentList			3382808	1					
ANR	3382825	CompoundStatement		2:62:63:63	3382808	1					
ANR	3382826	ReturnStatement	return false ;	649:8:16733:16745	3382808	0	True				
ANR	3382827	Identifier	false		3382808	0					
ANR	3382828	ReturnStatement	return headPacket -> init_MD ( keyId ) ;	652:4:16758:16791	3382808	1	True				
ANR	3382829	CallExpression	headPacket -> init_MD ( keyId )		3382808	0					
ANR	3382830	Callee	headPacket -> init_MD		3382808	0					
ANR	3382831	PtrMemberAccess	headPacket -> init_MD		3382808	0					
ANR	3382832	Identifier	headPacket		3382808	0					
ANR	3382833	Identifier	init_MD		3382808	1					
ANR	3382834	ArgumentList	keyId		3382808	1					
ANR	3382835	Argument	keyId		3382808	0					
ANR	3382836	Identifier	keyId		3382808	0					
ANR	3382837	ReturnType	bool		3382808	1					
ANR	3382838	Identifier	_condorOutMsg :: init_MD		3382808	2					
ANR	3382839	ParameterList	const char * keyId		3382808	3					
ANR	3382840	Parameter	const char * keyId	646:28:16639:16656	3382808	0	True				
ANR	3382841	ParameterType	const char *		3382808	0					
ANR	3382842	Identifier	keyId		3382808	1					
ANR	3382843	CFGEntryNode	ENTRY		3382808		True				
ANR	3382844	CFGExitNode	EXIT		3382808		True				
ANR	3382845	Symbol	lastPacket		3382808						
ANR	3382846	Symbol	* headPacket		3382808						
ANR	3382847	Symbol	headPacket -> init_MD		3382808						
ANR	3382848	Symbol	headPacket		3382808						
ANR	3382849	Symbol	false		3382808						
ANR	3382850	Symbol	keyId		3382808						
ANR	3382851	Symbol	headPacket -> empty		3382808						
ANR	3382852	Function	_condorOutMsg :: putn	659:0:16966:17382							
ANR	3382853	FunctionDef	"_condorOutMsg :: putn (const char * dta , const int size)"		3382852	0					
ANR	3382854	CompoundStatement		659:57:17023:17382	3382852	0					
ANR	3382855	IdentifierDeclStatement	"int total = 0 , len = 0 ;"	660:1:17026:17048	3382852	0	True				
ANR	3382856	IdentifierDecl	total = 0		3382852	0					
ANR	3382857	IdentifierDeclType	int		3382852	0					
ANR	3382858	Identifier	total		3382852	1					
ANR	3382859	AssignmentExpression	total = 0		3382852	2		=			
ANR	3382860	Identifier	total		3382852	0					
ANR	3382861	PrimaryExpression	0		3382852	1					
ANR	3382862	IdentifierDecl	len = 0		3382852	1					
ANR	3382863	IdentifierDeclType	int		3382852	0					
ANR	3382864	Identifier	len		3382852	1					
ANR	3382865	AssignmentExpression	len = 0		3382852	2		=			
ANR	3382866	Identifier	len		3382852	0					
ANR	3382867	PrimaryExpression	0		3382852	1					
ANR	3382868	WhileStatement	while ( total != size )		3382852	1					
ANR	3382869	Condition	total != size	662:7:17058:17070	3382852	0	True				
ANR	3382870	EqualityExpression	total != size		3382852	0		!=			
ANR	3382871	Identifier	total		3382852	0					
ANR	3382872	Identifier	size		3382852	1					
ANR	3382873	CompoundStatement		4:22:49:49	3382852	1					
ANR	3382874	IfStatement	if ( lastPacket -> full ( ) )		3382852	0					
ANR	3382875	Condition	lastPacket -> full ( )	663:5:17080:17097	3382852	0	True				
ANR	3382876	CallExpression	lastPacket -> full ( )		3382852	0					
ANR	3382877	Callee	lastPacket -> full		3382852	0					
ANR	3382878	PtrMemberAccess	lastPacket -> full		3382852	0					
ANR	3382879	Identifier	lastPacket		3382852	0					
ANR	3382880	Identifier	full		3382852	1					
ANR	3382881	ArgumentList			3382852	1					
ANR	3382882	CompoundStatement		5:25:76:76	3382852	1					
ANR	3382883	ExpressionStatement	lastPacket -> next = new _condorPacket ( )	664:3:17105:17143	3382852	0	True				
ANR	3382884	AssignmentExpression	lastPacket -> next = new _condorPacket ( )		3382852	0		=			
ANR	3382885	PtrMemberAccess	lastPacket -> next		3382852	0					
ANR	3382886	Identifier	lastPacket		3382852	0					
ANR	3382887	Identifier	next		3382852	1					
ANR	3382888	UnaryExpression	new _condorPacket ( )		3382852	1					
ANR	3382889	IfStatement	if ( ! lastPacket -> next )		3382852	1					
ANR	3382890	Condition	! lastPacket -> next	665:6:17151:17167	3382852	0	True				
ANR	3382891	UnaryOperationExpression	! lastPacket -> next		3382852	0					
ANR	3382892	UnaryOperator	!		3382852	0					
ANR	3382893	PtrMemberAccess	lastPacket -> next		3382852	1					
ANR	3382894	Identifier	lastPacket		3382852	0					
ANR	3382895	Identifier	next		3382852	1					
ANR	3382896	CompoundStatement		7:25:146:146	3382852	1					
ANR	3382897	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: OutMsg::putn: out of memory\\n"" )"	666:4:17176:17233	3382852	0	True				
ANR	3382898	CallExpression	"dprintf ( D_ALWAYS , ""Error: OutMsg::putn: out of memory\\n"" )"		3382852	0					
ANR	3382899	Callee	dprintf		3382852	0					
ANR	3382900	Identifier	dprintf		3382852	0					
ANR	3382901	ArgumentList	D_ALWAYS		3382852	1					
ANR	3382902	Argument	D_ALWAYS		3382852	0					
ANR	3382903	Identifier	D_ALWAYS		3382852	0					
ANR	3382904	Argument	"""Error: OutMsg::putn: out of memory\\n"""		3382852	1					
ANR	3382905	PrimaryExpression	"""Error: OutMsg::putn: out of memory\\n"""		3382852	0					
ANR	3382906	ReturnStatement	return - 1 ;	667:4:17239:17248	3382852	1	True				
ANR	3382907	UnaryOperationExpression	- 1		3382852	0					
ANR	3382908	UnaryOperator	-		3382852	0					
ANR	3382909	PrimaryExpression	1		3382852	1					
ANR	3382910	ExpressionStatement	lastPacket = lastPacket -> next	669:3:17258:17287	3382852	2	True				
ANR	3382911	AssignmentExpression	lastPacket = lastPacket -> next		3382852	0		=			
ANR	3382912	Identifier	lastPacket		3382852	0					
ANR	3382913	PtrMemberAccess	lastPacket -> next		3382852	1					
ANR	3382914	Identifier	lastPacket		3382852	0					
ANR	3382915	Identifier	next		3382852	1					
ANR	3382916	ExpressionStatement	"len = lastPacket -> putMax ( & dta [ total ] , size - total )"	671:2:17295:17346	3382852	1	True				
ANR	3382917	AssignmentExpression	"len = lastPacket -> putMax ( & dta [ total ] , size - total )"		3382852	0		=			
ANR	3382918	Identifier	len		3382852	0					
ANR	3382919	CallExpression	"lastPacket -> putMax ( & dta [ total ] , size - total )"		3382852	1					
ANR	3382920	Callee	lastPacket -> putMax		3382852	0					
ANR	3382921	PtrMemberAccess	lastPacket -> putMax		3382852	0					
ANR	3382922	Identifier	lastPacket		3382852	0					
ANR	3382923	Identifier	putMax		3382852	1					
ANR	3382924	ArgumentList	& dta [ total ]		3382852	1					
ANR	3382925	Argument	& dta [ total ]		3382852	0					
ANR	3382926	UnaryOperationExpression	& dta [ total ]		3382852	0					
ANR	3382927	UnaryOperator	&		3382852	0					
ANR	3382928	ArrayIndexing	dta [ total ]		3382852	1					
ANR	3382929	Identifier	dta		3382852	0					
ANR	3382930	Identifier	total		3382852	1					
ANR	3382931	Argument	size - total		3382852	1					
ANR	3382932	AdditiveExpression	size - total		3382852	0		-			
ANR	3382933	Identifier	size		3382852	0					
ANR	3382934	Identifier	total		3382852	1					
ANR	3382935	ExpressionStatement	total += len	672:2:17350:17362	3382852	2	True				
ANR	3382936	AssignmentExpression	total += len		3382852	0		+=			
ANR	3382937	Identifier	total		3382852	0					
ANR	3382938	Identifier	len		3382852	1					
ANR	3382939	ReturnStatement	return total ;	674:1:17368:17380	3382852	2	True				
ANR	3382940	Identifier	total		3382852	0					
ANR	3382941	ReturnType	int		3382852	1					
ANR	3382942	Identifier	_condorOutMsg :: putn		3382852	2					
ANR	3382943	ParameterList	"const char * dta , const int size"		3382852	3					
ANR	3382944	Parameter	const char * dta	659:24:16990:17004	3382852	0	True				
ANR	3382945	ParameterType	const char *		3382852	0					
ANR	3382946	Identifier	dta		3382852	1					
ANR	3382947	Parameter	const int size	659:41:17007:17020	3382852	1	True				
ANR	3382948	ParameterType	const int		3382852	0					
ANR	3382949	Identifier	size		3382852	1					
ANR	3382950	CFGEntryNode	ENTRY		3382852		True				
ANR	3382951	CFGExitNode	EXIT		3382852		True				
ANR	3382952	Symbol	dta		3382852						
ANR	3382953	Symbol	total		3382852						
ANR	3382954	Symbol	lastPacket		3382852						
ANR	3382955	Symbol	size		3382852						
ANR	3382956	Symbol	len		3382852						
ANR	3382957	Symbol	lastPacket -> next		3382852						
ANR	3382958	Symbol	D_ALWAYS		3382852						
ANR	3382959	Symbol	lastPacket -> putMax		3382852						
ANR	3382960	Symbol	* lastPacket		3382852						
ANR	3382961	Symbol	lastPacket -> full		3382852						
ANR	3382962	Function	_condorOutMsg :: sendMsg	682:0:17470:21040							
ANR	3382963	FunctionDef	"_condorOutMsg :: sendMsg (const int sock , const condor_sockaddr & who , _condorMsgID msgID , unsigned char * mac)"		3382962	0					
ANR	3382964	CompoundStatement		686:0:17663:21040	3382962	0					
ANR	3382965	IdentifierDeclStatement	_condorPacket * tempPkt ;	687:1:17666:17688	3382962	0	True				
ANR	3382966	IdentifierDecl	* tempPkt		3382962	0					
ANR	3382967	IdentifierDeclType	_condorPacket *		3382962	0					
ANR	3382968	Identifier	tempPkt		3382962	1					
ANR	3382969	IdentifierDeclStatement	"int seqNo = 0 , msgLen = 0 , sent ;"	688:1:17691:17722	3382962	1	True				
ANR	3382970	IdentifierDecl	seqNo = 0		3382962	0					
ANR	3382971	IdentifierDeclType	int		3382962	0					
ANR	3382972	Identifier	seqNo		3382962	1					
ANR	3382973	AssignmentExpression	seqNo = 0		3382962	2		=			
ANR	3382974	Identifier	seqNo		3382962	0					
ANR	3382975	PrimaryExpression	0		3382962	1					
ANR	3382976	IdentifierDecl	msgLen = 0		3382962	1					
ANR	3382977	IdentifierDeclType	int		3382962	0					
ANR	3382978	Identifier	msgLen		3382962	1					
ANR	3382979	AssignmentExpression	msgLen = 0		3382962	2		=			
ANR	3382980	Identifier	msgLen		3382962	0					
ANR	3382981	PrimaryExpression	0		3382962	1					
ANR	3382982	IdentifierDecl	sent		3382962	2					
ANR	3382983	IdentifierDeclType	int		3382962	0					
ANR	3382984	Identifier	sent		3382962	1					
ANR	3382985	IdentifierDeclStatement	int total = 0 ;	689:1:17725:17738	3382962	2	True				
ANR	3382986	IdentifierDecl	total = 0		3382962	0					
ANR	3382987	IdentifierDeclType	int		3382962	0					
ANR	3382988	Identifier	total		3382962	1					
ANR	3382989	AssignmentExpression	total = 0		3382962	2		=			
ANR	3382990	Identifier	total		3382962	0					
ANR	3382991	PrimaryExpression	0		3382962	1					
ANR	3382992	IdentifierDeclStatement	unsigned char * md = mac ;	690:4:17744:17768	3382962	3	True				
ANR	3382993	IdentifierDecl	* md = mac		3382962	0					
ANR	3382994	IdentifierDeclType	unsigned char *		3382962	0					
ANR	3382995	Identifier	md		3382962	1					
ANR	3382996	AssignmentExpression	* md = mac		3382962	2		=			
ANR	3382997	Identifier	mac		3382962	0					
ANR	3382998	Identifier	mac		3382962	1					
ANR	3382999	IfStatement	if ( headPacket -> empty ( ) )		3382962	4					
ANR	3383000	Condition	headPacket -> empty ( )	693:4:17798:17816	3382962	0	True				
ANR	3383001	CallExpression	headPacket -> empty ( )		3382962	0					
ANR	3383002	Callee	headPacket -> empty		3382962	0					
ANR	3383003	PtrMemberAccess	headPacket -> empty		3382962	0					
ANR	3383004	Identifier	headPacket		3382962	0					
ANR	3383005	Identifier	empty		3382962	1					
ANR	3383006	ArgumentList			3382962	1					
ANR	3383007	ReturnStatement	return 0 ;	694:2:17838:17846	3382962	1	True				
ANR	3383008	PrimaryExpression	0		3382962	0					
ANR	3383009	WhileStatement	while ( headPacket != lastPacket )		3382962	5					
ANR	3383010	Condition	headPacket != lastPacket	696:7:17859:17882	3382962	0	True				
ANR	3383011	EqualityExpression	headPacket != lastPacket		3382962	0		!=			
ANR	3383012	Identifier	headPacket		3382962	0					
ANR	3383013	Identifier	lastPacket		3382962	1					
ANR	3383014	CompoundStatement		11:33:221:221	3382962	1					
ANR	3383015	ExpressionStatement	tempPkt = headPacket	697:2:17889:17912	3382962	0	True				
ANR	3383016	AssignmentExpression	tempPkt = headPacket		3382962	0		=			
ANR	3383017	Identifier	tempPkt		3382962	0					
ANR	3383018	Identifier	headPacket		3382962	1					
ANR	3383019	ExpressionStatement	headPacket = headPacket -> next	698:2:17916:17945	3382962	1	True				
ANR	3383020	AssignmentExpression	headPacket = headPacket -> next		3382962	0		=			
ANR	3383021	Identifier	headPacket		3382962	0					
ANR	3383022	PtrMemberAccess	headPacket -> next		3382962	1					
ANR	3383023	Identifier	headPacket		3382962	0					
ANR	3383024	Identifier	next		3382962	1					
ANR	3383025	ExpressionStatement	"tempPkt -> makeHeader ( false , seqNo ++ , msgID , md )"	699:2:17949:17995	3382962	2	True				
ANR	3383026	CallExpression	"tempPkt -> makeHeader ( false , seqNo ++ , msgID , md )"		3382962	0					
ANR	3383027	Callee	tempPkt -> makeHeader		3382962	0					
ANR	3383028	PtrMemberAccess	tempPkt -> makeHeader		3382962	0					
ANR	3383029	Identifier	tempPkt		3382962	0					
ANR	3383030	Identifier	makeHeader		3382962	1					
ANR	3383031	ArgumentList	false		3382962	1					
ANR	3383032	Argument	false		3382962	0					
ANR	3383033	Identifier	false		3382962	0					
ANR	3383034	Argument	seqNo ++		3382962	1					
ANR	3383035	PostIncDecOperationExpression	seqNo ++		3382962	0					
ANR	3383036	Identifier	seqNo		3382962	0					
ANR	3383037	IncDec	++		3382962	1					
ANR	3383038	Argument	msgID		3382962	2					
ANR	3383039	Identifier	msgID		3382962	0					
ANR	3383040	Argument	md		3382962	3					
ANR	3383041	Identifier	md		3382962	0					
ANR	3383042	ExpressionStatement	msgLen += tempPkt -> length	700:2:17999:18027	3382962	3	True				
ANR	3383043	AssignmentExpression	msgLen += tempPkt -> length		3382962	0		+=			
ANR	3383044	Identifier	msgLen		3382962	0					
ANR	3383045	PtrMemberAccess	tempPkt -> length		3382962	1					
ANR	3383046	Identifier	tempPkt		3382962	0					
ANR	3383047	Identifier	length		3382962	1					
ANR	3383048	ExpressionStatement	"sent = condor_sendto ( sock , tempPkt -> dataGram , tempPkt -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"	703:2:18035:18166	3382962	4	True				
ANR	3383049	AssignmentExpression	"sent = condor_sendto ( sock , tempPkt -> dataGram , tempPkt -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		3382962	0		=			
ANR	3383050	Identifier	sent		3382962	0					
ANR	3383051	CallExpression	"condor_sendto ( sock , tempPkt -> dataGram , tempPkt -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		3382962	1					
ANR	3383052	Callee	condor_sendto		3382962	0					
ANR	3383053	Identifier	condor_sendto		3382962	0					
ANR	3383054	ArgumentList	sock		3382962	1					
ANR	3383055	Argument	sock		3382962	0					
ANR	3383056	Identifier	sock		3382962	0					
ANR	3383057	Argument	tempPkt -> dataGram		3382962	1					
ANR	3383058	PtrMemberAccess	tempPkt -> dataGram		3382962	0					
ANR	3383059	Identifier	tempPkt		3382962	0					
ANR	3383060	Identifier	dataGram		3382962	1					
ANR	3383061	Argument	tempPkt -> length + SAFE_MSG_HEADER_SIZE		3382962	2					
ANR	3383062	AdditiveExpression	tempPkt -> length + SAFE_MSG_HEADER_SIZE		3382962	0		+			
ANR	3383063	PtrMemberAccess	tempPkt -> length		3382962	0					
ANR	3383064	Identifier	tempPkt		3382962	0					
ANR	3383065	Identifier	length		3382962	1					
ANR	3383066	Identifier	SAFE_MSG_HEADER_SIZE		3382962	1					
ANR	3383067	Argument	0		3382962	3					
ANR	3383068	PrimaryExpression	0		3382962	0					
ANR	3383069	Argument	who		3382962	4					
ANR	3383070	Identifier	who		3382962	0					
ANR	3383071	IfStatement	if ( sent != tempPkt -> length + SAFE_MSG_HEADER_SIZE )		3382962	5					
ANR	3383072	Condition	sent != tempPkt -> length + SAFE_MSG_HEADER_SIZE	707:5:18174:18219	3382962	0	True				
ANR	3383073	EqualityExpression	sent != tempPkt -> length + SAFE_MSG_HEADER_SIZE		3382962	0		!=			
ANR	3383074	Identifier	sent		3382962	0					
ANR	3383075	AdditiveExpression	tempPkt -> length + SAFE_MSG_HEADER_SIZE		3382962	1		+			
ANR	3383076	PtrMemberAccess	tempPkt -> length		3382962	0					
ANR	3383077	Identifier	tempPkt		3382962	0					
ANR	3383078	Identifier	length		3382962	1					
ANR	3383079	Identifier	SAFE_MSG_HEADER_SIZE		3382962	1					
ANR	3383080	CompoundStatement		22:53:558:558	3382962	1					
ANR	3383081	ExpressionStatement	"dprintf ( D_ALWAYS , ""sendMsg:sendto failed - errno: %d\\n"" , errno )"	708:3:18227:18290	3382962	0	True				
ANR	3383082	CallExpression	"dprintf ( D_ALWAYS , ""sendMsg:sendto failed - errno: %d\\n"" , errno )"		3382962	0					
ANR	3383083	Callee	dprintf		3382962	0					
ANR	3383084	Identifier	dprintf		3382962	0					
ANR	3383085	ArgumentList	D_ALWAYS		3382962	1					
ANR	3383086	Argument	D_ALWAYS		3382962	0					
ANR	3383087	Identifier	D_ALWAYS		3382962	0					
ANR	3383088	Argument	"""sendMsg:sendto failed - errno: %d\\n"""		3382962	1					
ANR	3383089	PrimaryExpression	"""sendMsg:sendto failed - errno: %d\\n"""		3382962	0					
ANR	3383090	Argument	errno		3382962	2					
ANR	3383091	Identifier	errno		3382962	0					
ANR	3383092	ExpressionStatement	headPacket = tempPkt	709:3:18295:18315	3382962	1	True				
ANR	3383093	AssignmentExpression	headPacket = tempPkt		3382962	0		=			
ANR	3383094	Identifier	headPacket		3382962	0					
ANR	3383095	Identifier	tempPkt		3382962	1					
ANR	3383096	ExpressionStatement	clearMsg ( )	710:3:18320:18330	3382962	2	True				
ANR	3383097	CallExpression	clearMsg ( )		3382962	0					
ANR	3383098	Callee	clearMsg		3382962	0					
ANR	3383099	Identifier	clearMsg		3382962	0					
ANR	3383100	ArgumentList			3382962	1					
ANR	3383101	ReturnStatement	return - 1 ;	711:3:18335:18344	3382962	3	True				
ANR	3383102	UnaryOperationExpression	- 1		3382962	0					
ANR	3383103	UnaryOperator	-		3382962	0					
ANR	3383104	PrimaryExpression	1		3382962	1					
ANR	3383105	ExpressionStatement	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"	720:2:18618:18683	3382962	6	True				
ANR	3383106	CallExpression	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"		3382962	0					
ANR	3383107	Callee	dprintf		3382962	0					
ANR	3383108	Identifier	dprintf		3382962	0					
ANR	3383109	ArgumentList	D_NETWORK		3382962	1					
ANR	3383110	Argument	D_NETWORK		3382962	0					
ANR	3383111	Identifier	D_NETWORK		3382962	0					
ANR	3383112	Argument	"""SEND [%d] %s """		3382962	1					
ANR	3383113	PrimaryExpression	"""SEND [%d] %s """		3382962	0					
ANR	3383114	Argument	sent		3382962	2					
ANR	3383115	Identifier	sent		3382962	0					
ANR	3383116	Argument	sock_to_string ( sock )		3382962	3					
ANR	3383117	CallExpression	sock_to_string ( sock )		3382962	0					
ANR	3383118	Callee	sock_to_string		3382962	0					
ANR	3383119	Identifier	sock_to_string		3382962	0					
ANR	3383120	ArgumentList	sock		3382962	1					
ANR	3383121	Argument	sock		3382962	0					
ANR	3383122	Identifier	sock		3382962	0					
ANR	3383123	ExpressionStatement	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"	721:2:18687:18755	3382962	7	True				
ANR	3383124	CallExpression	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"		3382962	0					
ANR	3383125	Callee	dprintf		3382962	0					
ANR	3383126	Identifier	dprintf		3382962	0					
ANR	3383127	ArgumentList	D_NETWORK | D_NOHEADER		3382962	1					
ANR	3383128	Argument	D_NETWORK | D_NOHEADER		3382962	0					
ANR	3383129	InclusiveOrExpression	D_NETWORK | D_NOHEADER		3382962	0		|			
ANR	3383130	Identifier	D_NETWORK		3382962	0					
ANR	3383131	Identifier	D_NOHEADER		3382962	1					
ANR	3383132	Argument	"""%s\\n"""		3382962	1					
ANR	3383133	PrimaryExpression	"""%s\\n"""		3382962	0					
ANR	3383134	Argument	who . to_sinful ( ) . Value ( )		3382962	2					
ANR	3383135	CallExpression	who . to_sinful ( ) . Value ( )		3382962	0					
ANR	3383136	Callee	who . to_sinful ( ) . Value		3382962	0					
ANR	3383137	MemberAccess	who . to_sinful ( ) . Value		3382962	0					
ANR	3383138	CallExpression	who . to_sinful ( )		3382962	0					
ANR	3383139	Callee	who . to_sinful		3382962	0					
ANR	3383140	MemberAccess	who . to_sinful		3382962	0					
ANR	3383141	Identifier	who		3382962	0					
ANR	3383142	Identifier	to_sinful		3382962	1					
ANR	3383143	ArgumentList			3382962	1					
ANR	3383144	Identifier	Value		3382962	1					
ANR	3383145	ArgumentList			3382962	1					
ANR	3383146	ExpressionStatement	total += sent	723:2:18759:18772	3382962	8	True				
ANR	3383147	AssignmentExpression	total += sent		3382962	0		+=			
ANR	3383148	Identifier	total		3382962	0					
ANR	3383149	Identifier	sent		3382962	1					
ANR	3383150	Statement	delete	724:2:18776:18781	3382962	9	True				
ANR	3383151	ExpressionStatement	tempPkt	724:9:18783:18790	3382962	10	True				
ANR	3383152	Identifier	tempPkt		3382962	0					
ANR	3383153	ExpressionStatement	md = 0	725:8:18800:18806	3382962	11	True				
ANR	3383154	AssignmentExpression	md = 0		3382962	0		=			
ANR	3383155	Identifier	md		3382962	0					
ANR	3383156	PrimaryExpression	0		3382962	1					
ANR	3383157	IfStatement	if ( seqNo == 0 )		3382962	6					
ANR	3383158	Condition	seqNo == 0	729:7:18847:18856	3382962	0	True				
ANR	3383159	EqualityExpression	seqNo == 0		3382962	0		==			
ANR	3383160	Identifier	seqNo		3382962	0					
ANR	3383161	PrimaryExpression	0		3382962	1					
ANR	3383162	CompoundStatement		44:19:1195:1195	3382962	1					
ANR	3383163	ExpressionStatement	msgLen = lastPacket -> length	730:2:18882:18909	3382962	0	True				
ANR	3383164	AssignmentExpression	msgLen = lastPacket -> length		3382962	0		=			
ANR	3383165	Identifier	msgLen		3382962	0					
ANR	3383166	PtrMemberAccess	lastPacket -> length		3382962	1					
ANR	3383167	Identifier	lastPacket		3382962	0					
ANR	3383168	Identifier	length		3382962	1					
ANR	3383169	ExpressionStatement	"lastPacket -> makeHeader ( true , 0 , msgID , md )"	731:8:18919:18961	3382962	1	True				
ANR	3383170	CallExpression	"lastPacket -> makeHeader ( true , 0 , msgID , md )"		3382962	0					
ANR	3383171	Callee	lastPacket -> makeHeader		3382962	0					
ANR	3383172	PtrMemberAccess	lastPacket -> makeHeader		3382962	0					
ANR	3383173	Identifier	lastPacket		3382962	0					
ANR	3383174	Identifier	makeHeader		3382962	1					
ANR	3383175	ArgumentList	true		3382962	1					
ANR	3383176	Argument	true		3382962	0					
ANR	3383177	Identifier	true		3382962	0					
ANR	3383178	Argument	0		3382962	1					
ANR	3383179	PrimaryExpression	0		3382962	0					
ANR	3383180	Argument	msgID		3382962	2					
ANR	3383181	Identifier	msgID		3382962	0					
ANR	3383182	Argument	md		3382962	3					
ANR	3383183	Identifier	md		3382962	0					
ANR	3383184	ExpressionStatement	"sent = condor_sendto ( sock , lastPacket -> data , lastPacket -> length , 0 , who )"	738:2:19297:19377	3382962	2	True				
ANR	3383185	AssignmentExpression	"sent = condor_sendto ( sock , lastPacket -> data , lastPacket -> length , 0 , who )"		3382962	0		=			
ANR	3383186	Identifier	sent		3382962	0					
ANR	3383187	CallExpression	"condor_sendto ( sock , lastPacket -> data , lastPacket -> length , 0 , who )"		3382962	1					
ANR	3383188	Callee	condor_sendto		3382962	0					
ANR	3383189	Identifier	condor_sendto		3382962	0					
ANR	3383190	ArgumentList	sock		3382962	1					
ANR	3383191	Argument	sock		3382962	0					
ANR	3383192	Identifier	sock		3382962	0					
ANR	3383193	Argument	lastPacket -> data		3382962	1					
ANR	3383194	PtrMemberAccess	lastPacket -> data		3382962	0					
ANR	3383195	Identifier	lastPacket		3382962	0					
ANR	3383196	Identifier	data		3382962	1					
ANR	3383197	Argument	lastPacket -> length		3382962	2					
ANR	3383198	PtrMemberAccess	lastPacket -> length		3382962	0					
ANR	3383199	Identifier	lastPacket		3382962	0					
ANR	3383200	Identifier	length		3382962	1					
ANR	3383201	Argument	0		3382962	3					
ANR	3383202	PrimaryExpression	0		3382962	0					
ANR	3383203	Argument	who		3382962	4					
ANR	3383204	Identifier	who		3382962	0					
ANR	3383205	IfStatement	if ( sent != lastPacket -> length )		3382962	3					
ANR	3383206	Condition	sent != lastPacket -> length	740:5:19384:19409	3382962	0	True				
ANR	3383207	EqualityExpression	sent != lastPacket -> length		3382962	0		!=			
ANR	3383208	Identifier	sent		3382962	0					
ANR	3383209	PtrMemberAccess	lastPacket -> length		3382962	1					
ANR	3383210	Identifier	lastPacket		3382962	0					
ANR	3383211	Identifier	length		3382962	1					
ANR	3383212	CompoundStatement		55:33:1748:1748	3382962	1					
ANR	3383213	ExpressionStatement	"dprintf ( D_ALWAYS , ""SafeMsg: sending small msg failed. errno: %d\\n"" , errno )"	741:3:19417:19504	3382962	0	True				
ANR	3383214	CallExpression	"dprintf ( D_ALWAYS , ""SafeMsg: sending small msg failed. errno: %d\\n"" , errno )"		3382962	0					
ANR	3383215	Callee	dprintf		3382962	0					
ANR	3383216	Identifier	dprintf		3382962	0					
ANR	3383217	ArgumentList	D_ALWAYS		3382962	1					
ANR	3383218	Argument	D_ALWAYS		3382962	0					
ANR	3383219	Identifier	D_ALWAYS		3382962	0					
ANR	3383220	Argument	"""SafeMsg: sending small msg failed. errno: %d\\n"""		3382962	1					
ANR	3383221	PrimaryExpression	"""SafeMsg: sending small msg failed. errno: %d\\n"""		3382962	0					
ANR	3383222	Argument	errno		3382962	2					
ANR	3383223	Identifier	errno		3382962	0					
ANR	3383224	ExpressionStatement	headPacket -> reset ( )	744:3:19509:19528	3382962	1	True				
ANR	3383225	CallExpression	headPacket -> reset ( )		3382962	0					
ANR	3383226	Callee	headPacket -> reset		3382962	0					
ANR	3383227	PtrMemberAccess	headPacket -> reset		3382962	0					
ANR	3383228	Identifier	headPacket		3382962	0					
ANR	3383229	Identifier	reset		3382962	1					
ANR	3383230	ArgumentList			3382962	1					
ANR	3383231	ReturnStatement	return - 1 ;	745:3:19533:19542	3382962	2	True				
ANR	3383232	UnaryOperationExpression	- 1		3382962	0					
ANR	3383233	UnaryOperator	-		3382962	0					
ANR	3383234	PrimaryExpression	1		3382962	1					
ANR	3383235	ExpressionStatement	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"	752:2:19804:19869	3382962	4	True				
ANR	3383236	CallExpression	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"		3382962	0					
ANR	3383237	Callee	dprintf		3382962	0					
ANR	3383238	Identifier	dprintf		3382962	0					
ANR	3383239	ArgumentList	D_NETWORK		3382962	1					
ANR	3383240	Argument	D_NETWORK		3382962	0					
ANR	3383241	Identifier	D_NETWORK		3382962	0					
ANR	3383242	Argument	"""SEND [%d] %s """		3382962	1					
ANR	3383243	PrimaryExpression	"""SEND [%d] %s """		3382962	0					
ANR	3383244	Argument	sent		3382962	2					
ANR	3383245	Identifier	sent		3382962	0					
ANR	3383246	Argument	sock_to_string ( sock )		3382962	3					
ANR	3383247	CallExpression	sock_to_string ( sock )		3382962	0					
ANR	3383248	Callee	sock_to_string		3382962	0					
ANR	3383249	Identifier	sock_to_string		3382962	0					
ANR	3383250	ArgumentList	sock		3382962	1					
ANR	3383251	Argument	sock		3382962	0					
ANR	3383252	Identifier	sock		3382962	0					
ANR	3383253	ExpressionStatement	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"	753:2:19873:19936	3382962	5	True				
ANR	3383254	CallExpression	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"		3382962	0					
ANR	3383255	Callee	dprintf		3382962	0					
ANR	3383256	Identifier	dprintf		3382962	0					
ANR	3383257	ArgumentList	D_NETWORK | D_NOHEADER		3382962	1					
ANR	3383258	Argument	D_NETWORK | D_NOHEADER		3382962	0					
ANR	3383259	InclusiveOrExpression	D_NETWORK | D_NOHEADER		3382962	0		|			
ANR	3383260	Identifier	D_NETWORK		3382962	0					
ANR	3383261	Identifier	D_NOHEADER		3382962	1					
ANR	3383262	Argument	"""%s\\n"""		3382962	1					
ANR	3383263	PrimaryExpression	"""%s\\n"""		3382962	0					
ANR	3383264	Argument	who . to_sinful ( ) . Value ( )		3382962	2					
ANR	3383265	CallExpression	who . to_sinful ( ) . Value ( )		3382962	0					
ANR	3383266	Callee	who . to_sinful ( ) . Value		3382962	0					
ANR	3383267	MemberAccess	who . to_sinful ( ) . Value		3382962	0					
ANR	3383268	CallExpression	who . to_sinful ( )		3382962	0					
ANR	3383269	Callee	who . to_sinful		3382962	0					
ANR	3383270	MemberAccess	who . to_sinful		3382962	0					
ANR	3383271	Identifier	who		3382962	0					
ANR	3383272	Identifier	to_sinful		3382962	1					
ANR	3383273	ArgumentList			3382962	1					
ANR	3383274	Identifier	Value		3382962	1					
ANR	3383275	ArgumentList			3382962	1					
ANR	3383276	ExpressionStatement	total = sent	754:2:19940:19952	3382962	6	True				
ANR	3383277	AssignmentExpression	total = sent		3382962	0		=			
ANR	3383278	Identifier	total		3382962	0					
ANR	3383279	Identifier	sent		3382962	1					
ANR	3383280	ElseStatement	else		3382962	0					
ANR	3383281	CompoundStatement		71:9:2305:2305	3382962	0					
ANR	3383282	ExpressionStatement	"lastPacket -> makeHeader ( true , seqNo , msgID , md )"	757:8:19979:20025	3382962	0	True				
ANR	3383283	CallExpression	"lastPacket -> makeHeader ( true , seqNo , msgID , md )"		3382962	0					
ANR	3383284	Callee	lastPacket -> makeHeader		3382962	0					
ANR	3383285	PtrMemberAccess	lastPacket -> makeHeader		3382962	0					
ANR	3383286	Identifier	lastPacket		3382962	0					
ANR	3383287	Identifier	makeHeader		3382962	1					
ANR	3383288	ArgumentList	true		3382962	1					
ANR	3383289	Argument	true		3382962	0					
ANR	3383290	Identifier	true		3382962	0					
ANR	3383291	Argument	seqNo		3382962	1					
ANR	3383292	Identifier	seqNo		3382962	0					
ANR	3383293	Argument	msgID		3382962	2					
ANR	3383294	Identifier	msgID		3382962	0					
ANR	3383295	Argument	md		3382962	3					
ANR	3383296	Identifier	md		3382962	0					
ANR	3383297	ExpressionStatement	msgLen += lastPacket -> length	758:8:20035:20063	3382962	1	True				
ANR	3383298	AssignmentExpression	msgLen += lastPacket -> length		3382962	0		+=			
ANR	3383299	Identifier	msgLen		3382962	0					
ANR	3383300	PtrMemberAccess	lastPacket -> length		3382962	1					
ANR	3383301	Identifier	lastPacket		3382962	0					
ANR	3383302	Identifier	length		3382962	1					
ANR	3383303	ExpressionStatement	"sent = condor_sendto ( sock , lastPacket -> dataGram , lastPacket -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"	759:8:20073:20216	3382962	2	True				
ANR	3383304	AssignmentExpression	"sent = condor_sendto ( sock , lastPacket -> dataGram , lastPacket -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		3382962	0		=			
ANR	3383305	Identifier	sent		3382962	0					
ANR	3383306	CallExpression	"condor_sendto ( sock , lastPacket -> dataGram , lastPacket -> length + SAFE_MSG_HEADER_SIZE , 0 , who )"		3382962	1					
ANR	3383307	Callee	condor_sendto		3382962	0					
ANR	3383308	Identifier	condor_sendto		3382962	0					
ANR	3383309	ArgumentList	sock		3382962	1					
ANR	3383310	Argument	sock		3382962	0					
ANR	3383311	Identifier	sock		3382962	0					
ANR	3383312	Argument	lastPacket -> dataGram		3382962	1					
ANR	3383313	PtrMemberAccess	lastPacket -> dataGram		3382962	0					
ANR	3383314	Identifier	lastPacket		3382962	0					
ANR	3383315	Identifier	dataGram		3382962	1					
ANR	3383316	Argument	lastPacket -> length + SAFE_MSG_HEADER_SIZE		3382962	2					
ANR	3383317	AdditiveExpression	lastPacket -> length + SAFE_MSG_HEADER_SIZE		3382962	0		+			
ANR	3383318	PtrMemberAccess	lastPacket -> length		3382962	0					
ANR	3383319	Identifier	lastPacket		3382962	0					
ANR	3383320	Identifier	length		3382962	1					
ANR	3383321	Identifier	SAFE_MSG_HEADER_SIZE		3382962	1					
ANR	3383322	Argument	0		3382962	3					
ANR	3383323	PrimaryExpression	0		3382962	0					
ANR	3383324	Argument	who		3382962	4					
ANR	3383325	Identifier	who		3382962	0					
ANR	3383326	IfStatement	if ( sent != lastPacket -> length + SAFE_MSG_HEADER_SIZE )		3382962	3					
ANR	3383327	Condition	sent != lastPacket -> length + SAFE_MSG_HEADER_SIZE	762:11:20229:20277	3382962	0	True				
ANR	3383328	EqualityExpression	sent != lastPacket -> length + SAFE_MSG_HEADER_SIZE		3382962	0		!=			
ANR	3383329	Identifier	sent		3382962	0					
ANR	3383330	AdditiveExpression	lastPacket -> length + SAFE_MSG_HEADER_SIZE		3382962	1		+			
ANR	3383331	PtrMemberAccess	lastPacket -> length		3382962	0					
ANR	3383332	Identifier	lastPacket		3382962	0					
ANR	3383333	Identifier	length		3382962	1					
ANR	3383334	Identifier	SAFE_MSG_HEADER_SIZE		3382962	1					
ANR	3383335	CompoundStatement		77:62:2616:2616	3382962	1					
ANR	3383336	ExpressionStatement	"dprintf ( D_ALWAYS , ""SafeMsg: sending last packet failed. errno: %d\\n"" , errno )"	763:12:20294:20372	3382962	0	True				
ANR	3383337	CallExpression	"dprintf ( D_ALWAYS , ""SafeMsg: sending last packet failed. errno: %d\\n"" , errno )"		3382962	0					
ANR	3383338	Callee	dprintf		3382962	0					
ANR	3383339	Identifier	dprintf		3382962	0					
ANR	3383340	ArgumentList	D_ALWAYS		3382962	1					
ANR	3383341	Argument	D_ALWAYS		3382962	0					
ANR	3383342	Identifier	D_ALWAYS		3382962	0					
ANR	3383343	Argument	"""SafeMsg: sending last packet failed. errno: %d\\n"""		3382962	1					
ANR	3383344	PrimaryExpression	"""SafeMsg: sending last packet failed. errno: %d\\n"""		3382962	0					
ANR	3383345	Argument	errno		3382962	2					
ANR	3383346	Identifier	errno		3382962	0					
ANR	3383347	ExpressionStatement	headPacket -> reset ( )	764:12:20386:20405	3382962	1	True				
ANR	3383348	CallExpression	headPacket -> reset ( )		3382962	0					
ANR	3383349	Callee	headPacket -> reset		3382962	0					
ANR	3383350	PtrMemberAccess	headPacket -> reset		3382962	0					
ANR	3383351	Identifier	headPacket		3382962	0					
ANR	3383352	Identifier	reset		3382962	1					
ANR	3383353	ArgumentList			3382962	1					
ANR	3383354	ReturnStatement	return - 1 ;	765:12:20419:20428	3382962	2	True				
ANR	3383355	UnaryOperationExpression	- 1		3382962	0					
ANR	3383356	UnaryOperator	-		3382962	0					
ANR	3383357	PrimaryExpression	1		3382962	1					
ANR	3383358	ExpressionStatement	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"	772:8:20702:20767	3382962	4	True				
ANR	3383359	CallExpression	"dprintf ( D_NETWORK , ""SEND [%d] %s "" , sent , sock_to_string ( sock ) )"		3382962	0					
ANR	3383360	Callee	dprintf		3382962	0					
ANR	3383361	Identifier	dprintf		3382962	0					
ANR	3383362	ArgumentList	D_NETWORK		3382962	1					
ANR	3383363	Argument	D_NETWORK		3382962	0					
ANR	3383364	Identifier	D_NETWORK		3382962	0					
ANR	3383365	Argument	"""SEND [%d] %s """		3382962	1					
ANR	3383366	PrimaryExpression	"""SEND [%d] %s """		3382962	0					
ANR	3383367	Argument	sent		3382962	2					
ANR	3383368	Identifier	sent		3382962	0					
ANR	3383369	Argument	sock_to_string ( sock )		3382962	3					
ANR	3383370	CallExpression	sock_to_string ( sock )		3382962	0					
ANR	3383371	Callee	sock_to_string		3382962	0					
ANR	3383372	Identifier	sock_to_string		3382962	0					
ANR	3383373	ArgumentList	sock		3382962	1					
ANR	3383374	Argument	sock		3382962	0					
ANR	3383375	Identifier	sock		3382962	0					
ANR	3383376	ExpressionStatement	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"	773:8:20777:20840	3382962	5	True				
ANR	3383377	CallExpression	"dprintf ( D_NETWORK | D_NOHEADER , ""%s\\n"" , who . to_sinful ( ) . Value ( ) )"		3382962	0					
ANR	3383378	Callee	dprintf		3382962	0					
ANR	3383379	Identifier	dprintf		3382962	0					
ANR	3383380	ArgumentList	D_NETWORK | D_NOHEADER		3382962	1					
ANR	3383381	Argument	D_NETWORK | D_NOHEADER		3382962	0					
ANR	3383382	InclusiveOrExpression	D_NETWORK | D_NOHEADER		3382962	0		|			
ANR	3383383	Identifier	D_NETWORK		3382962	0					
ANR	3383384	Identifier	D_NOHEADER		3382962	1					
ANR	3383385	Argument	"""%s\\n"""		3382962	1					
ANR	3383386	PrimaryExpression	"""%s\\n"""		3382962	0					
ANR	3383387	Argument	who . to_sinful ( ) . Value ( )		3382962	2					
ANR	3383388	CallExpression	who . to_sinful ( ) . Value ( )		3382962	0					
ANR	3383389	Callee	who . to_sinful ( ) . Value		3382962	0					
ANR	3383390	MemberAccess	who . to_sinful ( ) . Value		3382962	0					
ANR	3383391	CallExpression	who . to_sinful ( )		3382962	0					
ANR	3383392	Callee	who . to_sinful		3382962	0					
ANR	3383393	MemberAccess	who . to_sinful		3382962	0					
ANR	3383394	Identifier	who		3382962	0					
ANR	3383395	Identifier	to_sinful		3382962	1					
ANR	3383396	ArgumentList			3382962	1					
ANR	3383397	Identifier	Value		3382962	1					
ANR	3383398	ArgumentList			3382962	1					
ANR	3383399	ExpressionStatement	total += sent	774:8:20850:20863	3382962	6	True				
ANR	3383400	AssignmentExpression	total += sent		3382962	0		+=			
ANR	3383401	Identifier	total		3382962	0					
ANR	3383402	Identifier	sent		3382962	1					
ANR	3383403	ExpressionStatement	headPacket -> reset ( )	777:1:20873:20892	3382962	7	True				
ANR	3383404	CallExpression	headPacket -> reset ( )		3382962	0					
ANR	3383405	Callee	headPacket -> reset		3382962	0					
ANR	3383406	PtrMemberAccess	headPacket -> reset		3382962	0					
ANR	3383407	Identifier	headPacket		3382962	0					
ANR	3383408	Identifier	reset		3382962	1					
ANR	3383409	ArgumentList			3382962	1					
ANR	3383410	ExpressionStatement	noMsgSent ++	778:1:20895:20906	3382962	8	True				
ANR	3383411	PostIncDecOperationExpression	noMsgSent ++		3382962	0					
ANR	3383412	Identifier	noMsgSent		3382962	0					
ANR	3383413	IncDec	++		3382962	1					
ANR	3383414	IfStatement	if ( noMsgSent == 1 )		3382962	9					
ANR	3383415	Condition	noMsgSent == 1	779:4:20912:20925	3382962	0	True				
ANR	3383416	EqualityExpression	noMsgSent == 1		3382962	0		==			
ANR	3383417	Identifier	noMsgSent		3382962	0					
ANR	3383418	PrimaryExpression	1		3382962	1					
ANR	3383419	ExpressionStatement	avgMsgSize = msgLen	780:2:20930:20949	3382962	1	True				
ANR	3383420	AssignmentExpression	avgMsgSize = msgLen		3382962	0		=			
ANR	3383421	Identifier	avgMsgSize		3382962	0					
ANR	3383422	Identifier	msgLen		3382962	1					
ANR	3383423	ElseStatement	else		3382962	0					
ANR	3383424	ExpressionStatement	avgMsgSize = ( ( noMsgSent - 1 ) * avgMsgSize + msgLen ) / noMsgSent	782:2:20959:21023	3382962	0	True				
ANR	3383425	AssignmentExpression	avgMsgSize = ( ( noMsgSent - 1 ) * avgMsgSize + msgLen ) / noMsgSent		3382962	0		=			
ANR	3383426	Identifier	avgMsgSize		3382962	0					
ANR	3383427	MultiplicativeExpression	( ( noMsgSent - 1 ) * avgMsgSize + msgLen ) / noMsgSent		3382962	1		/			
ANR	3383428	AdditiveExpression	( noMsgSent - 1 ) * avgMsgSize + msgLen		3382962	0		+			
ANR	3383429	MultiplicativeExpression	( noMsgSent - 1 ) * avgMsgSize		3382962	0		*			
ANR	3383430	AdditiveExpression	noMsgSent - 1		3382962	0		-			
ANR	3383431	Identifier	noMsgSent		3382962	0					
ANR	3383432	PrimaryExpression	1		3382962	1					
ANR	3383433	Identifier	avgMsgSize		3382962	1					
ANR	3383434	Identifier	msgLen		3382962	1					
ANR	3383435	Identifier	noMsgSent		3382962	1					
ANR	3383436	ReturnStatement	return total ;	783:1:21026:21038	3382962	10	True				
ANR	3383437	Identifier	total		3382962	0					
ANR	3383438	ReturnType	int		3382962	1					
ANR	3383439	Identifier	_condorOutMsg :: sendMsg		3382962	2					
ANR	3383440	ParameterList	"const int sock , const condor_sockaddr & who , _condorMsgID msgID , unsigned char * mac"		3382962	3					
ANR	3383441	Parameter	const int sock	682:27:17497:17510	3382962	0	True				
ANR	3383442	ParameterType	const int		3382962	0					
ANR	3383443	Identifier	sock		3382962	1					
ANR	3383444	Parameter	const condor_sockaddr & who	683:27:17540:17565	3382962	1	True				
ANR	3383445	ParameterType	const condor_sockaddr &		3382962	0					
ANR	3383446	Identifier	who		3382962	1					
ANR	3383447	Parameter	_condorMsgID msgID	684:27:17595:17612	3382962	2	True				
ANR	3383448	ParameterType	_condorMsgID		3382962	0					
ANR	3383449	Identifier	msgID		3382962	1					
ANR	3383450	Parameter	unsigned char * mac	685:27:17642:17660	3382962	3	True				
ANR	3383451	ParameterType	unsigned char *		3382962	0					
ANR	3383452	Identifier	mac		3382962	1					
ANR	3383453	CFGEntryNode	ENTRY		3382962		True				
ANR	3383454	CFGExitNode	EXIT		3382962		True				
ANR	3383455	Symbol	seqNo		3382962						
ANR	3383456	Symbol	tempPkt		3382962						
ANR	3383457	Symbol	mac		3382962						
ANR	3383458	Symbol	msgLen		3382962						
ANR	3383459	Symbol	total		3382962						
ANR	3383460	Symbol	lastPacket		3382962						
ANR	3383461	Symbol	tempPkt -> dataGram		3382962						
ANR	3383462	Symbol	md		3382962						
ANR	3383463	Symbol	tempPkt -> length		3382962						
ANR	3383464	Symbol	lastPacket -> dataGram		3382962						
ANR	3383465	Symbol	* lastPacket		3382962						
ANR	3383466	Symbol	headPacket -> empty		3382962						
ANR	3383467	Symbol	errno		3382962						
ANR	3383468	Symbol	noMsgSent		3382962						
ANR	3383469	Symbol	who . to_sinful ( ) . Value		3382962						
ANR	3383470	Symbol	* headPacket		3382962						
ANR	3383471	Symbol	who . to_sinful		3382962						
ANR	3383472	Symbol	lastPacket -> data		3382962						
ANR	3383473	Symbol	headPacket		3382962						
ANR	3383474	Symbol	false		3382962						
ANR	3383475	Symbol	D_ALWAYS		3382962						
ANR	3383476	Symbol	msgID		3382962						
ANR	3383477	Symbol	sent		3382962						
ANR	3383478	Symbol	* tempPkt		3382962						
ANR	3383479	Symbol	lastPacket -> length		3382962						
ANR	3383480	Symbol	sock		3382962						
ANR	3383481	Symbol	headPacket -> next		3382962						
ANR	3383482	Symbol	condor_sendto		3382962						
ANR	3383483	Symbol	avgMsgSize		3382962						
ANR	3383484	Symbol	true		3382962						
ANR	3383485	Symbol	D_NETWORK		3382962						
ANR	3383486	Symbol	sock_to_string		3382962						
ANR	3383487	Symbol	SAFE_MSG_HEADER_SIZE		3382962						
ANR	3383488	Symbol	D_NOHEADER		3382962						
ANR	3383489	Symbol	who		3382962						
ANR	3383490	Function	_condorOutMsg :: getAvgMsgSize	787:0:21044:21111							
ANR	3383491	FunctionDef	_condorOutMsg :: getAvgMsgSize ()		3383490	0					
ANR	3383492	CompoundStatement		788:0:21089:21111	3383490	0					
ANR	3383493	ReturnStatement	return avgMsgSize ;	789:1:21092:21109	3383490	0	True				
ANR	3383494	Identifier	avgMsgSize		3383490	0					
ANR	3383495	ReturnType	unsigned long		3383490	1					
ANR	3383496	Identifier	_condorOutMsg :: getAvgMsgSize		3383490	2					
ANR	3383497	ParameterList			3383490	3					
ANR	3383498	CFGEntryNode	ENTRY		3383490		True				
ANR	3383499	CFGExitNode	EXIT		3383490		True				
ANR	3383500	Symbol	avgMsgSize		3383490						
ANR	3383501	Function	_condorOutMsg :: clearMsg	793:0:21115:21366							
ANR	3383502	FunctionDef	_condorOutMsg :: clearMsg ()		3383501	0					
ANR	3383503	CompoundStatement		794:0:21146:21366	3383501	0					
ANR	3383504	IdentifierDeclStatement	_condorPacket * tempPkt ;	795:1:21149:21171	3383501	0	True				
ANR	3383505	IdentifierDecl	* tempPkt		3383501	0					
ANR	3383506	IdentifierDeclType	_condorPacket *		3383501	0					
ANR	3383507	Identifier	tempPkt		3383501	1					
ANR	3383508	IfStatement	if ( headPacket -> empty ( ) )		3383501	1					
ANR	3383509	Condition	headPacket -> empty ( )	797:4:21178:21196	3383501	0	True				
ANR	3383510	CallExpression	headPacket -> empty ( )		3383501	0					
ANR	3383511	Callee	headPacket -> empty		3383501	0					
ANR	3383512	PtrMemberAccess	headPacket -> empty		3383501	0					
ANR	3383513	Identifier	headPacket		3383501	0					
ANR	3383514	Identifier	empty		3383501	1					
ANR	3383515	ArgumentList			3383501	1					
ANR	3383516	ReturnStatement	return ;	798:2:21218:21224	3383501	1	True				
ANR	3383517	WhileStatement	while ( headPacket != lastPacket )		3383501	2					
ANR	3383518	Condition	headPacket != lastPacket	800:7:21237:21260	3383501	0	True				
ANR	3383519	EqualityExpression	headPacket != lastPacket		3383501	0		!=			
ANR	3383520	Identifier	headPacket		3383501	0					
ANR	3383521	Identifier	lastPacket		3383501	1					
ANR	3383522	CompoundStatement		7:33:116:116	3383501	1					
ANR	3383523	ExpressionStatement	tempPkt = headPacket	801:2:21267:21287	3383501	0	True				
ANR	3383524	AssignmentExpression	tempPkt = headPacket		3383501	0		=			
ANR	3383525	Identifier	tempPkt		3383501	0					
ANR	3383526	Identifier	headPacket		3383501	1					
ANR	3383527	ExpressionStatement	headPacket = headPacket -> next	802:2:21291:21320	3383501	1	True				
ANR	3383528	AssignmentExpression	headPacket = headPacket -> next		3383501	0		=			
ANR	3383529	Identifier	headPacket		3383501	0					
ANR	3383530	PtrMemberAccess	headPacket -> next		3383501	1					
ANR	3383531	Identifier	headPacket		3383501	0					
ANR	3383532	Identifier	next		3383501	1					
ANR	3383533	Statement	delete	803:2:21324:21329	3383501	2	True				
ANR	3383534	ExpressionStatement	tempPkt	803:9:21331:21338	3383501	3	True				
ANR	3383535	Identifier	tempPkt		3383501	0					
ANR	3383536	ExpressionStatement	headPacket -> reset ( )	806:1:21345:21364	3383501	3	True				
ANR	3383537	CallExpression	headPacket -> reset ( )		3383501	0					
ANR	3383538	Callee	headPacket -> reset		3383501	0					
ANR	3383539	PtrMemberAccess	headPacket -> reset		3383501	0					
ANR	3383540	Identifier	headPacket		3383501	0					
ANR	3383541	Identifier	reset		3383501	1					
ANR	3383542	ArgumentList			3383501	1					
ANR	3383543	ReturnType	void		3383501	1					
ANR	3383544	Identifier	_condorOutMsg :: clearMsg		3383501	2					
ANR	3383545	ParameterList			3383501	3					
ANR	3383546	CFGEntryNode	ENTRY		3383501		True				
ANR	3383547	CFGExitNode	EXIT		3383501		True				
ANR	3383548	Symbol	lastPacket		3383501						
ANR	3383549	Symbol	headPacket -> next		3383501						
ANR	3383550	Symbol	tempPkt		3383501						
ANR	3383551	Symbol	* headPacket		3383501						
ANR	3383552	Symbol	headPacket		3383501						
ANR	3383553	Symbol	headPacket -> empty		3383501						
ANR	3383554	Function	_condorOutMsg :: dumpMsg	810:0:21382:22097							
ANR	3383555	FunctionDef	_condorOutMsg :: dumpMsg (const _condorMsgID mID)		3383554	0					
ANR	3383556	CompoundStatement		811:0:21433:22097	3383554	0					
ANR	3383557	IdentifierDeclStatement	"_condorPacket * tempPkt , * nextPkt ;"	812:1:21436:21468	3383554	0	True				
ANR	3383558	IdentifierDecl	* tempPkt		3383554	0					
ANR	3383559	IdentifierDeclType	_condorPacket *		3383554	0					
ANR	3383560	Identifier	tempPkt		3383554	1					
ANR	3383561	IdentifierDecl	* nextPkt		3383554	1					
ANR	3383562	IdentifierDeclType	_condorPacket *		3383554	0					
ANR	3383563	Identifier	nextPkt		3383554	1					
ANR	3383564	IdentifierDeclStatement	int dumped ;	813:1:21471:21481	3383554	1	True				
ANR	3383565	IdentifierDecl	dumped		3383554	0					
ANR	3383566	IdentifierDeclType	int		3383554	0					
ANR	3383567	Identifier	dumped		3383554	1					
ANR	3383568	IdentifierDeclStatement	int seqNo = 0 ;	814:1:21484:21497	3383554	2	True				
ANR	3383569	IdentifierDecl	seqNo = 0		3383554	0					
ANR	3383570	IdentifierDeclType	int		3383554	0					
ANR	3383571	Identifier	seqNo		3383554	1					
ANR	3383572	AssignmentExpression	seqNo = 0		3383554	2		=			
ANR	3383573	Identifier	seqNo		3383554	0					
ANR	3383574	PrimaryExpression	0		3383554	1					
ANR	3383575	IdentifierDeclStatement	int total = 0 ;	815:1:21500:21513	3383554	3	True				
ANR	3383576	IdentifierDecl	total = 0		3383554	0					
ANR	3383577	IdentifierDeclType	int		3383554	0					
ANR	3383578	Identifier	total		3383554	1					
ANR	3383579	AssignmentExpression	total = 0		3383554	2		=			
ANR	3383580	Identifier	total		3383554	0					
ANR	3383581	PrimaryExpression	0		3383554	1					
ANR	3383582	ExpressionStatement	"dprintf ( D_NETWORK , ""================================================\\n"" )"	817:1:21517:21598	3383554	4	True				
ANR	3383583	CallExpression	"dprintf ( D_NETWORK , ""================================================\\n"" )"		3383554	0					
ANR	3383584	Callee	dprintf		3383554	0					
ANR	3383585	Identifier	dprintf		3383554	0					
ANR	3383586	ArgumentList	D_NETWORK		3383554	1					
ANR	3383587	Argument	D_NETWORK		3383554	0					
ANR	3383588	Identifier	D_NETWORK		3383554	0					
ANR	3383589	Argument	"""================================================\\n"""		3383554	1					
ANR	3383590	PrimaryExpression	"""================================================\\n"""		3383554	0					
ANR	3383591	IfStatement	if ( headPacket -> empty ( ) )		3383554	5					
ANR	3383592	Condition	headPacket -> empty ( )	820:4:21605:21623	3383554	0	True				
ANR	3383593	CallExpression	headPacket -> empty ( )		3383554	0					
ANR	3383594	Callee	headPacket -> empty		3383554	0					
ANR	3383595	PtrMemberAccess	headPacket -> empty		3383554	0					
ANR	3383596	Identifier	headPacket		3383554	0					
ANR	3383597	Identifier	empty		3383554	1					
ANR	3383598	ArgumentList			3383554	1					
ANR	3383599	CompoundStatement		10:25:192:192	3383554	1					
ANR	3383600	ExpressionStatement	"dprintf ( D_NETWORK , ""empty message\\n"" )"	821:2:21647:21684	3383554	0	True				
ANR	3383601	CallExpression	"dprintf ( D_NETWORK , ""empty message\\n"" )"		3383554	0					
ANR	3383602	Callee	dprintf		3383554	0					
ANR	3383603	Identifier	dprintf		3383554	0					
ANR	3383604	ArgumentList	D_NETWORK		3383554	1					
ANR	3383605	Argument	D_NETWORK		3383554	0					
ANR	3383606	Identifier	D_NETWORK		3383554	0					
ANR	3383607	Argument	"""empty message\\n"""		3383554	1					
ANR	3383608	PrimaryExpression	"""empty message\\n"""		3383554	0					
ANR	3383609	ReturnStatement	return 0 ;	822:2:21688:21696	3383554	1	True				
ANR	3383610	PrimaryExpression	0		3383554	0					
ANR	3383611	ExpressionStatement	tempPkt = headPacket	826:1:21735:21755	3383554	6	True				
ANR	3383612	AssignmentExpression	tempPkt = headPacket		3383554	0		=			
ANR	3383613	Identifier	tempPkt		3383554	0					
ANR	3383614	Identifier	headPacket		3383554	1					
ANR	3383615	WhileStatement	while ( tempPkt )		3383554	7					
ANR	3383616	Condition	tempPkt	827:7:21764:21770	3383554	0	True				
ANR	3383617	Identifier	tempPkt		3383554	0					
ANR	3383618	CompoundStatement		17:16:339:339	3383554	1					
ANR	3383619	ExpressionStatement	nextPkt = tempPkt -> next	828:2:21777:21800	3383554	0	True				
ANR	3383620	AssignmentExpression	nextPkt = tempPkt -> next		3383554	0		=			
ANR	3383621	Identifier	nextPkt		3383554	0					
ANR	3383622	PtrMemberAccess	tempPkt -> next		3383554	1					
ANR	3383623	Identifier	tempPkt		3383554	0					
ANR	3383624	Identifier	next		3383554	1					
ANR	3383625	ExpressionStatement	"tempPkt -> makeHeader ( ( nextPkt == NULL ) , seqNo ++ , mID )"	829:2:21804:21856	3383554	1	True				
ANR	3383626	CallExpression	"tempPkt -> makeHeader ( ( nextPkt == NULL ) , seqNo ++ , mID )"		3383554	0					
ANR	3383627	Callee	tempPkt -> makeHeader		3383554	0					
ANR	3383628	PtrMemberAccess	tempPkt -> makeHeader		3383554	0					
ANR	3383629	Identifier	tempPkt		3383554	0					
ANR	3383630	Identifier	makeHeader		3383554	1					
ANR	3383631	ArgumentList	nextPkt == NULL		3383554	1					
ANR	3383632	Argument	nextPkt == NULL		3383554	0					
ANR	3383633	EqualityExpression	nextPkt == NULL		3383554	0		==			
ANR	3383634	Identifier	nextPkt		3383554	0					
ANR	3383635	Identifier	NULL		3383554	1					
ANR	3383636	Argument	seqNo ++		3383554	1					
ANR	3383637	PostIncDecOperationExpression	seqNo ++		3383554	0					
ANR	3383638	Identifier	seqNo		3383554	0					
ANR	3383639	IncDec	++		3383554	1					
ANR	3383640	Argument	mID		3383554	2					
ANR	3383641	Identifier	mID		3383554	0					
ANR	3383642	ExpressionStatement	tempPkt -> dumpPacket ( )	830:2:21860:21881	3383554	2	True				
ANR	3383643	CallExpression	tempPkt -> dumpPacket ( )		3383554	0					
ANR	3383644	Callee	tempPkt -> dumpPacket		3383554	0					
ANR	3383645	PtrMemberAccess	tempPkt -> dumpPacket		3383554	0					
ANR	3383646	Identifier	tempPkt		3383554	0					
ANR	3383647	Identifier	dumpPacket		3383554	1					
ANR	3383648	ArgumentList			3383554	1					
ANR	3383649	ExpressionStatement	dumped = tempPkt -> length + SAFE_MSG_HEADER_SIZE	831:2:21885:21932	3383554	3	True				
ANR	3383650	AssignmentExpression	dumped = tempPkt -> length + SAFE_MSG_HEADER_SIZE		3383554	0		=			
ANR	3383651	Identifier	dumped		3383554	0					
ANR	3383652	AdditiveExpression	tempPkt -> length + SAFE_MSG_HEADER_SIZE		3383554	1		+			
ANR	3383653	PtrMemberAccess	tempPkt -> length		3383554	0					
ANR	3383654	Identifier	tempPkt		3383554	0					
ANR	3383655	Identifier	length		3383554	1					
ANR	3383656	Identifier	SAFE_MSG_HEADER_SIZE		3383554	1					
ANR	3383657	ExpressionStatement	total += dumped	832:2:21936:21951	3383554	4	True				
ANR	3383658	AssignmentExpression	total += dumped		3383554	0		+=			
ANR	3383659	Identifier	total		3383554	0					
ANR	3383660	Identifier	dumped		3383554	1					
ANR	3383661	ExpressionStatement	tempPkt = nextPkt	833:2:21955:21972	3383554	5	True				
ANR	3383662	AssignmentExpression	tempPkt = nextPkt		3383554	0		=			
ANR	3383663	Identifier	tempPkt		3383554	0					
ANR	3383664	Identifier	nextPkt		3383554	1					
ANR	3383665	ExpressionStatement	"dprintf ( D_NETWORK , ""------------------- has %d bytes -----------------------\\n"" , total )"	836:1:21979:22079	3383554	8	True				
ANR	3383666	CallExpression	"dprintf ( D_NETWORK , ""------------------- has %d bytes -----------------------\\n"" , total )"		3383554	0					
ANR	3383667	Callee	dprintf		3383554	0					
ANR	3383668	Identifier	dprintf		3383554	0					
ANR	3383669	ArgumentList	D_NETWORK		3383554	1					
ANR	3383670	Argument	D_NETWORK		3383554	0					
ANR	3383671	Identifier	D_NETWORK		3383554	0					
ANR	3383672	Argument	"""------------------- has %d bytes -----------------------\\n"""		3383554	1					
ANR	3383673	PrimaryExpression	"""------------------- has %d bytes -----------------------\\n"""		3383554	0					
ANR	3383674	Argument	total		3383554	2					
ANR	3383675	Identifier	total		3383554	0					
ANR	3383676	ReturnStatement	return total ;	840:1:22083:22095	3383554	9	True				
ANR	3383677	Identifier	total		3383554	0					
ANR	3383678	ReturnType	int		3383554	1					
ANR	3383679	Identifier	_condorOutMsg :: dumpMsg		3383554	2					
ANR	3383680	ParameterList	const _condorMsgID mID		3383554	3					
ANR	3383681	Parameter	const _condorMsgID mID	810:27:21409:21430	3383554	0	True				
ANR	3383682	ParameterType	const _condorMsgID		3383554	0					
ANR	3383683	Identifier	mID		3383554	1					
ANR	3383684	CFGEntryNode	ENTRY		3383554		True				
ANR	3383685	CFGExitNode	EXIT		3383554		True				
ANR	3383686	Symbol	NULL		3383554						
ANR	3383687	Symbol	seqNo		3383554						
ANR	3383688	Symbol	tempPkt		3383554						
ANR	3383689	Symbol	* headPacket		3383554						
ANR	3383690	Symbol	headPacket		3383554						
ANR	3383691	Symbol	mID		3383554						
ANR	3383692	Symbol	* tempPkt		3383554						
ANR	3383693	Symbol	nextPkt		3383554						
ANR	3383694	Symbol	total		3383554						
ANR	3383695	Symbol	D_NETWORK		3383554						
ANR	3383696	Symbol	tempPkt -> length		3383554						
ANR	3383697	Symbol	dumped		3383554						
ANR	3383698	Symbol	tempPkt -> next		3383554						
ANR	3383699	Symbol	SAFE_MSG_HEADER_SIZE		3383554						
ANR	3383700	Symbol	headPacket -> empty		3383554						
ANR	3383701	Function	_condorDirPage :: _condorDirPage	845:0:22108:22332							
ANR	3383702	FunctionDef	"_condorDirPage :: _condorDirPage (_condorDirPage * prev , const int num)"		3383701	0					
ANR	3383703	CompoundStatement		846:0:22176:22332	3383701	0					
ANR	3383704	ExpressionStatement	prevDir = prev	847:1:22179:22193	3383701	0	True				
ANR	3383705	AssignmentExpression	prevDir = prev		3383701	0		=			
ANR	3383706	Identifier	prevDir		3383701	0					
ANR	3383707	Identifier	prev		3383701	1					
ANR	3383708	ExpressionStatement	dirNo = num	848:1:22196:22207	3383701	1	True				
ANR	3383709	AssignmentExpression	dirNo = num		3383701	0		=			
ANR	3383710	Identifier	dirNo		3383701	0					
ANR	3383711	Identifier	num		3383701	1					
ANR	3383712	ForStatement	for ( int i = 0 ; i < SAFE_MSG_NO_OF_DIR_ENTRY ; i ++ )		3383701	2					
ANR	3383713	ForInit	int i = 0 ;	849:5:22214:22221	3383701	0	True				
ANR	3383714	IdentifierDeclStatement	int i = 0 ;		3383701	0					
ANR	3383715	IdentifierDecl	i = 0		3383701	0					
ANR	3383716	IdentifierDeclType	int		3383701	0					
ANR	3383717	Identifier	i		3383701	1					
ANR	3383718	AssignmentExpression	i = 0		3383701	2		=			
ANR	3383719	Identifier	i		3383701	0					
ANR	3383720	PrimaryExpression	0		3383701	1					
ANR	3383721	Condition	i < SAFE_MSG_NO_OF_DIR_ENTRY	849:14:22223:22249	3383701	1	True				
ANR	3383722	RelationalExpression	i < SAFE_MSG_NO_OF_DIR_ENTRY		3383701	0		<			
ANR	3383723	Identifier	i		3383701	0					
ANR	3383724	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3383701	1					
ANR	3383725	PostIncDecOperationExpression	i ++	849:43:22252:22254	3383701	2	True				
ANR	3383726	Identifier	i		3383701	0					
ANR	3383727	IncDec	++		3383701	1					
ANR	3383728	CompoundStatement		4:48:80:80	3383701	3					
ANR	3383729	ExpressionStatement	dEntry [ i ] . dLen = 0	850:2:22261:22282	3383701	0	True				
ANR	3383730	AssignmentExpression	dEntry [ i ] . dLen = 0		3383701	0		=			
ANR	3383731	MemberAccess	dEntry [ i ] . dLen		3383701	0					
ANR	3383732	ArrayIndexing	dEntry [ i ]		3383701	0					
ANR	3383733	Identifier	dEntry		3383701	0					
ANR	3383734	Identifier	i		3383701	1					
ANR	3383735	Identifier	dLen		3383701	1					
ANR	3383736	PrimaryExpression	0		3383701	1					
ANR	3383737	ExpressionStatement	dEntry [ i ] . dGram = NULL	851:2:22286:22310	3383701	1	True				
ANR	3383738	AssignmentExpression	dEntry [ i ] . dGram = NULL		3383701	0		=			
ANR	3383739	MemberAccess	dEntry [ i ] . dGram		3383701	0					
ANR	3383740	ArrayIndexing	dEntry [ i ]		3383701	0					
ANR	3383741	Identifier	dEntry		3383701	0					
ANR	3383742	Identifier	i		3383701	1					
ANR	3383743	Identifier	dGram		3383701	1					
ANR	3383744	Identifier	NULL		3383701	1					
ANR	3383745	ExpressionStatement	nextDir = NULL	853:1:22316:22330	3383701	3	True				
ANR	3383746	AssignmentExpression	nextDir = NULL		3383701	0		=			
ANR	3383747	Identifier	nextDir		3383701	0					
ANR	3383748	Identifier	NULL		3383701	1					
ANR	3383749	Identifier	_condorDirPage :: _condorDirPage		3383701	1					
ANR	3383750	ParameterList	"_condorDirPage * prev , const int num"		3383701	2					
ANR	3383751	Parameter	_condorDirPage * prev	845:31:22139:22158	3383701	0	True				
ANR	3383752	ParameterType	_condorDirPage *		3383701	0					
ANR	3383753	Identifier	prev		3383701	1					
ANR	3383754	Parameter	const int num	845:53:22161:22173	3383701	1	True				
ANR	3383755	ParameterType	const int		3383701	0					
ANR	3383756	Identifier	num		3383701	1					
ANR	3383757	CFGEntryNode	ENTRY		3383701		True				
ANR	3383758	CFGExitNode	EXIT		3383701		True				
ANR	3383759	Symbol	NULL		3383701						
ANR	3383760	Symbol	prev		3383701						
ANR	3383761	Symbol	num		3383701						
ANR	3383762	Symbol	i		3383701						
ANR	3383763	Symbol	dEntry [ i ] . dGram		3383701						
ANR	3383764	Symbol	dEntry		3383701						
ANR	3383765	Symbol	nextDir		3383701						
ANR	3383766	Symbol	prevDir		3383701						
ANR	3383767	Symbol	* i		3383701						
ANR	3383768	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		3383701						
ANR	3383769	Symbol	* dEntry		3383701						
ANR	3383770	Symbol	dEntry [ i ] . dLen		3383701						
ANR	3383771	Symbol	dirNo		3383701						
ANR	3383772	Function	_condorDirPage :: ~_condorDirPage	857:0:22336:22482							
ANR	3383773	FunctionDef	_condorDirPage :: ~_condorDirPage ()		3383772	0					
ANR	3383774	CompoundStatement		857:34:22370:22482	3383772	0					
ANR	3383775	ForStatement	for ( int i = 0 ; i < SAFE_MSG_NO_OF_DIR_ENTRY ; i ++ )		3383772	0					
ANR	3383776	ForInit	int i = 0 ;	858:5:22377:22384	3383772	0	True				
ANR	3383777	IdentifierDeclStatement	int i = 0 ;		3383772	0					
ANR	3383778	IdentifierDecl	i = 0		3383772	0					
ANR	3383779	IdentifierDeclType	int		3383772	0					
ANR	3383780	Identifier	i		3383772	1					
ANR	3383781	AssignmentExpression	i = 0		3383772	2		=			
ANR	3383782	Identifier	i		3383772	0					
ANR	3383783	PrimaryExpression	0		3383772	1					
ANR	3383784	Condition	i < SAFE_MSG_NO_OF_DIR_ENTRY	858:14:22386:22412	3383772	1	True				
ANR	3383785	RelationalExpression	i < SAFE_MSG_NO_OF_DIR_ENTRY		3383772	0		<			
ANR	3383786	Identifier	i		3383772	0					
ANR	3383787	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3383772	1					
ANR	3383788	PostIncDecOperationExpression	i ++	858:43:22415:22417	3383772	2	True				
ANR	3383789	Identifier	i		3383772	0					
ANR	3383790	IncDec	++		3383772	1					
ANR	3383791	CompoundStatement		2:48:49:49	3383772	3					
ANR	3383792	IfStatement	if ( dEntry [ i ] . dGram )		3383772	0					
ANR	3383793	Condition	dEntry [ i ] . dGram	859:5:22427:22441	3383772	0	True				
ANR	3383794	MemberAccess	dEntry [ i ] . dGram		3383772	0					
ANR	3383795	ArrayIndexing	dEntry [ i ]		3383772	0					
ANR	3383796	Identifier	dEntry		3383772	0					
ANR	3383797	Identifier	i		3383772	1					
ANR	3383798	Identifier	dGram		3383772	1					
ANR	3383799	CompoundStatement		3:22:73:73	3383772	1					
ANR	3383800	ExpressionStatement	free ( dEntry [ i ] . dGram )	860:3:22449:22470	3383772	0	True				
ANR	3383801	CallExpression	free ( dEntry [ i ] . dGram )		3383772	0					
ANR	3383802	Callee	free		3383772	0					
ANR	3383803	Identifier	free		3383772	0					
ANR	3383804	ArgumentList	dEntry [ i ] . dGram		3383772	1					
ANR	3383805	Argument	dEntry [ i ] . dGram		3383772	0					
ANR	3383806	MemberAccess	dEntry [ i ] . dGram		3383772	0					
ANR	3383807	ArrayIndexing	dEntry [ i ]		3383772	0					
ANR	3383808	Identifier	dEntry		3383772	0					
ANR	3383809	Identifier	i		3383772	1					
ANR	3383810	Identifier	dGram		3383772	1					
ANR	3383811	Identifier	_condorDirPage :: ~_condorDirPage		3383772	1					
ANR	3383812	ParameterList			3383772	2					
ANR	3383813	CFGEntryNode	ENTRY		3383772		True				
ANR	3383814	CFGExitNode	EXIT		3383772		True				
ANR	3383815	Symbol	* i		3383772						
ANR	3383816	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		3383772						
ANR	3383817	Symbol	i		3383772						
ANR	3383818	Symbol	* dEntry		3383772						
ANR	3383819	Symbol	dEntry [ i ] . dGram		3383772						
ANR	3383820	Symbol	dEntry		3383772						
ANR	3383821	Function	_condorInMsg :: _condorInMsg	873:0:22859:24593							
ANR	3383822	FunctionDef	"_condorInMsg :: _condorInMsg (const _condorMsgID mID , const bool last , const int seq , const int len , const void * data , const char * MD5Keyid , const unsigned char * md , const char * EncKeyId , _condorInMsg * prev)"		3383821	0					
ANR	3383823	CompoundStatement		883:0:23355:24593	3383821	0					
ANR	3383824	IdentifierDeclStatement	int destDirNo ;	884:1:23358:23371	3383821	0	True				
ANR	3383825	IdentifierDecl	destDirNo		3383821	0					
ANR	3383826	IdentifierDeclType	int		3383821	0					
ANR	3383827	Identifier	destDirNo		3383821	1					
ANR	3383828	IdentifierDeclStatement	int index ;	885:1:23374:23383	3383821	1	True				
ANR	3383829	IdentifierDecl	index		3383821	0					
ANR	3383830	IdentifierDeclType	int		3383821	0					
ANR	3383831	Identifier	index		3383821	1					
ANR	3383832	ExpressionStatement	msgID . ip_addr = mID . ip_addr	888:1:23413:23440	3383821	2	True				
ANR	3383833	AssignmentExpression	msgID . ip_addr = mID . ip_addr		3383821	0		=			
ANR	3383834	MemberAccess	msgID . ip_addr		3383821	0					
ANR	3383835	Identifier	msgID		3383821	0					
ANR	3383836	Identifier	ip_addr		3383821	1					
ANR	3383837	MemberAccess	mID . ip_addr		3383821	1					
ANR	3383838	Identifier	mID		3383821	0					
ANR	3383839	Identifier	ip_addr		3383821	1					
ANR	3383840	ExpressionStatement	msgID . pid = mID . pid	889:1:23443:23462	3383821	3	True				
ANR	3383841	AssignmentExpression	msgID . pid = mID . pid		3383821	0		=			
ANR	3383842	MemberAccess	msgID . pid		3383821	0					
ANR	3383843	Identifier	msgID		3383821	0					
ANR	3383844	Identifier	pid		3383821	1					
ANR	3383845	MemberAccess	mID . pid		3383821	1					
ANR	3383846	Identifier	mID		3383821	0					
ANR	3383847	Identifier	pid		3383821	1					
ANR	3383848	ExpressionStatement	msgID . time = mID . time	890:1:23465:23486	3383821	4	True				
ANR	3383849	AssignmentExpression	msgID . time = mID . time		3383821	0		=			
ANR	3383850	MemberAccess	msgID . time		3383821	0					
ANR	3383851	Identifier	msgID		3383821	0					
ANR	3383852	Identifier	time		3383821	1					
ANR	3383853	MemberAccess	mID . time		3383821	1					
ANR	3383854	Identifier	mID		3383821	0					
ANR	3383855	Identifier	time		3383821	1					
ANR	3383856	ExpressionStatement	msgID . msgNo = mID . msgNo	891:1:23489:23512	3383821	5	True				
ANR	3383857	AssignmentExpression	msgID . msgNo = mID . msgNo		3383821	0		=			
ANR	3383858	MemberAccess	msgID . msgNo		3383821	0					
ANR	3383859	Identifier	msgID		3383821	0					
ANR	3383860	Identifier	msgNo		3383821	1					
ANR	3383861	MemberAccess	mID . msgNo		3383821	1					
ANR	3383862	Identifier	mID		3383821	0					
ANR	3383863	Identifier	msgNo		3383821	1					
ANR	3383864	ExpressionStatement	msgLen = len	894:1:23556:23568	3383821	6	True				
ANR	3383865	AssignmentExpression	msgLen = len		3383821	0		=			
ANR	3383866	Identifier	msgLen		3383821	0					
ANR	3383867	Identifier	len		3383821	1					
ANR	3383868	ExpressionStatement	lastNo = ( last ) ? seq : 0	895:1:23571:23596	3383821	7	True				
ANR	3383869	AssignmentExpression	lastNo = ( last ) ? seq : 0		3383821	0		=			
ANR	3383870	Identifier	lastNo		3383821	0					
ANR	3383871	ConditionalExpression	( last ) ? seq : 0		3383821	1					
ANR	3383872	Condition	last		3383821	0					
ANR	3383873	Identifier	last		3383821	0					
ANR	3383874	Identifier	seq		3383821	1					
ANR	3383875	PrimaryExpression	0		3383821	2					
ANR	3383876	ExpressionStatement	received = 1	896:1:23599:23611	3383821	8	True				
ANR	3383877	AssignmentExpression	received = 1		3383821	0		=			
ANR	3383878	Identifier	received		3383821	0					
ANR	3383879	PrimaryExpression	1		3383821	1					
ANR	3383880	ExpressionStatement	lastTime = time ( NULL )	897:1:23614:23635	3383821	9	True				
ANR	3383881	AssignmentExpression	lastTime = time ( NULL )		3383821	0		=			
ANR	3383882	Identifier	lastTime		3383821	0					
ANR	3383883	CallExpression	time ( NULL )		3383821	1					
ANR	3383884	Callee	time		3383821	0					
ANR	3383885	Identifier	time		3383821	0					
ANR	3383886	ArgumentList	NULL		3383821	1					
ANR	3383887	Argument	NULL		3383821	0					
ANR	3383888	Identifier	NULL		3383821	0					
ANR	3383889	ExpressionStatement	passed = 0	898:1:23638:23648	3383821	10	True				
ANR	3383890	AssignmentExpression	passed = 0		3383821	0		=			
ANR	3383891	Identifier	passed		3383821	0					
ANR	3383892	PrimaryExpression	0		3383821	1					
ANR	3383893	ExpressionStatement	curData = 0	899:1:23651:23662	3383821	11	True				
ANR	3383894	AssignmentExpression	curData = 0		3383821	0		=			
ANR	3383895	Identifier	curData		3383821	0					
ANR	3383896	PrimaryExpression	0		3383821	1					
ANR	3383897	ExpressionStatement	curPacket = 0	900:1:23665:23678	3383821	12	True				
ANR	3383898	AssignmentExpression	curPacket = 0		3383821	0		=			
ANR	3383899	Identifier	curPacket		3383821	0					
ANR	3383900	PrimaryExpression	0		3383821	1					
ANR	3383901	ExpressionStatement	"headDir = curDir = new _condorDirPage ( NULL , 0 )"	903:1:23719:23765	3383821	13	True				
ANR	3383902	AssignmentExpression	"headDir = curDir = new _condorDirPage ( NULL , 0 )"		3383821	0		=			
ANR	3383903	Identifier	headDir		3383821	0					
ANR	3383904	AssignmentExpression	"curDir = new _condorDirPage ( NULL , 0 )"		3383821	1		=			
ANR	3383905	Identifier	curDir		3383821	0					
ANR	3383906	Expression	"NULL , 0"		3383821	1					
ANR	3383907	Identifier	NULL		3383821	0					
ANR	3383908	PrimaryExpression	0		3383821	1					
ANR	3383909	IfStatement	if ( ! curDir )		3383821	14					
ANR	3383910	Condition	! curDir	904:4:23771:23777	3383821	0	True				
ANR	3383911	UnaryOperationExpression	! curDir		3383821	0					
ANR	3383912	UnaryOperator	!		3383821	0					
ANR	3383913	Identifier	curDir		3383821	1					
ANR	3383914	CompoundStatement		22:13:424:424	3383821	1					
ANR	3383915	ExpressionStatement	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"	905:2:23784:23835	3383821	0	True				
ANR	3383916	CallExpression	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"		3383821	0					
ANR	3383917	Callee	EXCEPT		3383821	0					
ANR	3383918	Identifier	EXCEPT		3383821	0					
ANR	3383919	ArgumentList	"""::InMsg, new DirPage failed. out of mem"""		3383821	1					
ANR	3383920	Argument	"""::InMsg, new DirPage failed. out of mem"""		3383821	0					
ANR	3383921	PrimaryExpression	"""::InMsg, new DirPage failed. out of mem"""		3383821	0					
ANR	3383922	ExpressionStatement	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY	907:1:23841:23883	3383821	15	True				
ANR	3383923	AssignmentExpression	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY		3383821	0		=			
ANR	3383924	Identifier	destDirNo		3383821	0					
ANR	3383925	MultiplicativeExpression	seq / SAFE_MSG_NO_OF_DIR_ENTRY		3383821	1		/			
ANR	3383926	Identifier	seq		3383821	0					
ANR	3383927	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3383821	1					
ANR	3383928	WhileStatement	while ( curDir -> dirNo != destDirNo )		3383821	16					
ANR	3383929	Condition	curDir -> dirNo != destDirNo	908:7:23892:23917	3383821	0	True				
ANR	3383930	EqualityExpression	curDir -> dirNo != destDirNo		3383821	0		!=			
ANR	3383931	PtrMemberAccess	curDir -> dirNo		3383821	0					
ANR	3383932	Identifier	curDir		3383821	0					
ANR	3383933	Identifier	dirNo		3383821	1					
ANR	3383934	Identifier	destDirNo		3383821	1					
ANR	3383935	CompoundStatement		26:35:564:564	3383821	1					
ANR	3383936	ExpressionStatement	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"	909:2:23924:23987	3383821	0	True				
ANR	3383937	AssignmentExpression	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"		3383821	0		=			
ANR	3383938	PtrMemberAccess	curDir -> nextDir		3383821	0					
ANR	3383939	Identifier	curDir		3383821	0					
ANR	3383940	Identifier	nextDir		3383821	1					
ANR	3383941	Expression	"curDir , curDir -> dirNo + 1"		3383821	1					
ANR	3383942	Identifier	curDir		3383821	0					
ANR	3383943	AdditiveExpression	curDir -> dirNo + 1		3383821	1		+			
ANR	3383944	PtrMemberAccess	curDir -> dirNo		3383821	0					
ANR	3383945	Identifier	curDir		3383821	0					
ANR	3383946	Identifier	dirNo		3383821	1					
ANR	3383947	PrimaryExpression	1		3383821	1					
ANR	3383948	IfStatement	if ( ! curDir -> nextDir )		3383821	1					
ANR	3383949	Condition	! curDir -> nextDir	910:5:23994:24009	3383821	0	True				
ANR	3383950	UnaryOperationExpression	! curDir -> nextDir		3383821	0					
ANR	3383951	UnaryOperator	!		3383821	0					
ANR	3383952	PtrMemberAccess	curDir -> nextDir		3383821	1					
ANR	3383953	Identifier	curDir		3383821	0					
ANR	3383954	Identifier	nextDir		3383821	1					
ANR	3383955	CompoundStatement		28:23:656:656	3383821	1					
ANR	3383956	ExpressionStatement	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"	911:6:24020:24069	3383821	0	True				
ANR	3383957	CallExpression	"EXCEPT ( ""::InMsg, new DirPage failed. out of mem"" )"		3383821	0					
ANR	3383958	Callee	EXCEPT		3383821	0					
ANR	3383959	Identifier	EXCEPT		3383821	0					
ANR	3383960	ArgumentList	"""::InMsg, new DirPage failed. out of mem"""		3383821	1					
ANR	3383961	Argument	"""::InMsg, new DirPage failed. out of mem"""		3383821	0					
ANR	3383962	PrimaryExpression	"""::InMsg, new DirPage failed. out of mem"""		3383821	0					
ANR	3383963	ExpressionStatement	curDir = curDir -> nextDir	913:2:24077:24101	3383821	2	True				
ANR	3383964	AssignmentExpression	curDir = curDir -> nextDir		3383821	0		=			
ANR	3383965	Identifier	curDir		3383821	0					
ANR	3383966	PtrMemberAccess	curDir -> nextDir		3383821	1					
ANR	3383967	Identifier	curDir		3383821	0					
ANR	3383968	Identifier	nextDir		3383821	1					
ANR	3383969	ExpressionStatement	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY	917:1:24169:24207	3383821	17	True				
ANR	3383970	AssignmentExpression	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY		3383821	0		=			
ANR	3383971	Identifier	index		3383821	0					
ANR	3383972	MultiplicativeExpression	seq % SAFE_MSG_NO_OF_DIR_ENTRY		3383821	1		%			
ANR	3383973	Identifier	seq		3383821	0					
ANR	3383974	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3383821	1					
ANR	3383975	ExpressionStatement	curDir -> dEntry [ index ] . dLen = len	918:1:24210:24242	3383821	18	True				
ANR	3383976	AssignmentExpression	curDir -> dEntry [ index ] . dLen = len		3383821	0		=			
ANR	3383977	MemberAccess	curDir -> dEntry [ index ] . dLen		3383821	0					
ANR	3383978	ArrayIndexing	curDir -> dEntry [ index ]		3383821	0					
ANR	3383979	PtrMemberAccess	curDir -> dEntry		3383821	0					
ANR	3383980	Identifier	curDir		3383821	0					
ANR	3383981	Identifier	dEntry		3383821	1					
ANR	3383982	Identifier	index		3383821	1					
ANR	3383983	Identifier	dLen		3383821	1					
ANR	3383984	Identifier	len		3383821	1					
ANR	3383985	ExpressionStatement	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )	919:1:24245:24294	3383821	19	True				
ANR	3383986	AssignmentExpression	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )		3383821	0		=			
ANR	3383987	MemberAccess	curDir -> dEntry [ index ] . dGram		3383821	0					
ANR	3383988	ArrayIndexing	curDir -> dEntry [ index ]		3383821	0					
ANR	3383989	PtrMemberAccess	curDir -> dEntry		3383821	0					
ANR	3383990	Identifier	curDir		3383821	0					
ANR	3383991	Identifier	dEntry		3383821	1					
ANR	3383992	Identifier	index		3383821	1					
ANR	3383993	Identifier	dGram		3383821	1					
ANR	3383994	CastExpression	( char * ) malloc ( len )		3383821	1					
ANR	3383995	CastTarget	char *		3383821	0					
ANR	3383996	CallExpression	malloc ( len )		3383821	1					
ANR	3383997	Callee	malloc		3383821	0					
ANR	3383998	Identifier	malloc		3383821	0					
ANR	3383999	ArgumentList	len		3383821	1					
ANR	3384000	Argument	len		3383821	0					
ANR	3384001	Identifier	len		3383821	0					
ANR	3384002	IfStatement	if ( ! curDir -> dEntry [ index ] . dGram )		3383821	20					
ANR	3384003	Condition	! curDir -> dEntry [ index ] . dGram	920:4:24300:24327	3383821	0	True				
ANR	3384004	UnaryOperationExpression	! curDir -> dEntry [ index ] . dGram		3383821	0					
ANR	3384005	UnaryOperator	!		3383821	0					
ANR	3384006	MemberAccess	curDir -> dEntry [ index ] . dGram		3383821	1					
ANR	3384007	ArrayIndexing	curDir -> dEntry [ index ]		3383821	0					
ANR	3384008	PtrMemberAccess	curDir -> dEntry		3383821	0					
ANR	3384009	Identifier	curDir		3383821	0					
ANR	3384010	Identifier	dEntry		3383821	1					
ANR	3384011	Identifier	index		3383821	1					
ANR	3384012	Identifier	dGram		3383821	1					
ANR	3384013	CompoundStatement		38:34:974:974	3383821	1					
ANR	3384014	ExpressionStatement	"EXCEPT ( ""::InMsg, new char[%d] failed. out of mem"" , len )"	921:2:24334:24391	3383821	0	True				
ANR	3384015	CallExpression	"EXCEPT ( ""::InMsg, new char[%d] failed. out of mem"" , len )"		3383821	0					
ANR	3384016	Callee	EXCEPT		3383821	0					
ANR	3384017	Identifier	EXCEPT		3383821	0					
ANR	3384018	ArgumentList	"""::InMsg, new char[%d] failed. out of mem"""		3383821	1					
ANR	3384019	Argument	"""::InMsg, new char[%d] failed. out of mem"""		3383821	0					
ANR	3384020	PrimaryExpression	"""::InMsg, new char[%d] failed. out of mem"""		3383821	0					
ANR	3384021	Argument	len		3383821	1					
ANR	3384022	Identifier	len		3383821	0					
ANR	3384023	ExpressionStatement	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"	923:1:24397:24443	3383821	21	True				
ANR	3384024	CallExpression	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"		3383821	0					
ANR	3384025	Callee	memcpy		3383821	0					
ANR	3384026	Identifier	memcpy		3383821	0					
ANR	3384027	ArgumentList	curDir -> dEntry [ index ] . dGram		3383821	1					
ANR	3384028	Argument	curDir -> dEntry [ index ] . dGram		3383821	0					
ANR	3384029	MemberAccess	curDir -> dEntry [ index ] . dGram		3383821	0					
ANR	3384030	ArrayIndexing	curDir -> dEntry [ index ]		3383821	0					
ANR	3384031	PtrMemberAccess	curDir -> dEntry		3383821	0					
ANR	3384032	Identifier	curDir		3383821	0					
ANR	3384033	Identifier	dEntry		3383821	1					
ANR	3384034	Identifier	index		3383821	1					
ANR	3384035	Identifier	dGram		3383821	1					
ANR	3384036	Argument	data		3383821	1					
ANR	3384037	Identifier	data		3383821	0					
ANR	3384038	Argument	len		3383821	2					
ANR	3384039	Identifier	len		3383821	0					
ANR	3384040	ExpressionStatement	tempBuf = NULL	926:1:24487:24501	3383821	22	True				
ANR	3384041	AssignmentExpression	tempBuf = NULL		3383821	0		=			
ANR	3384042	Identifier	tempBuf		3383821	0					
ANR	3384043	Identifier	NULL		3383821	1					
ANR	3384044	ExpressionStatement	tempBufLen = 0	927:1:24504:24518	3383821	23	True				
ANR	3384045	AssignmentExpression	tempBufLen = 0		3383821	0		=			
ANR	3384046	Identifier	tempBufLen		3383821	0					
ANR	3384047	PrimaryExpression	0		3383821	1					
ANR	3384048	ExpressionStatement	prevMsg = prev	929:1:24522:24536	3383821	24	True				
ANR	3384049	AssignmentExpression	prevMsg = prev		3383821	0		=			
ANR	3384050	Identifier	prevMsg		3383821	0					
ANR	3384051	Identifier	prev		3383821	1					
ANR	3384052	ExpressionStatement	nextMsg = NULL	930:1:24539:24553	3383821	25	True				
ANR	3384053	AssignmentExpression	nextMsg = NULL		3383821	0		=			
ANR	3384054	Identifier	nextMsg		3383821	0					
ANR	3384055	Identifier	NULL		3383821	1					
ANR	3384056	ExpressionStatement	"set_sec ( MD5Keyid , md , EncKeyId )"	932:4:24560:24591	3383821	26	True				
ANR	3384057	CallExpression	"set_sec ( MD5Keyid , md , EncKeyId )"		3383821	0					
ANR	3384058	Callee	set_sec		3383821	0					
ANR	3384059	Identifier	set_sec		3383821	0					
ANR	3384060	ArgumentList	MD5Keyid		3383821	1					
ANR	3384061	Argument	MD5Keyid		3383821	0					
ANR	3384062	Identifier	MD5Keyid		3383821	0					
ANR	3384063	Argument	md		3383821	1					
ANR	3384064	Identifier	md		3383821	0					
ANR	3384065	Argument	EncKeyId		3383821	2					
ANR	3384066	Identifier	EncKeyId		3383821	0					
ANR	3384067	Identifier	_condorInMsg :: _condorInMsg		3383821	1					
ANR	3384068	ParameterList	"const _condorMsgID mID , const bool last , const int seq , const int len , const void * data , const char * MD5Keyid , const unsigned char * md , const char * EncKeyId , _condorInMsg * prev"		3383821	2					
ANR	3384069	Parameter	const _condorMsgID mID	873:27:22886:22907	3383821	0	True				
ANR	3384070	ParameterType	const _condorMsgID		3383821	0					
ANR	3384071	Identifier	mID		3383821	1					
ANR	3384072	Parameter	const bool last	874:4:22939:22953	3383821	1	True				
ANR	3384073	ParameterType	const bool		3383821	0					
ANR	3384074	Identifier	last		3383821	1					
ANR	3384075	Parameter	const int seq	875:4:22990:23002	3383821	2	True				
ANR	3384076	ParameterType	const int		3383821	0					
ANR	3384077	Identifier	seq		3383821	1					
ANR	3384078	Parameter	const int len	876:4:23034:23046	3383821	3	True				
ANR	3384079	ParameterType	const int		3383821	0					
ANR	3384080	Identifier	len		3383821	1					
ANR	3384081	Parameter	const void * data	877:4:23078:23093	3383821	4	True				
ANR	3384082	ParameterType	const void *		3383821	0					
ANR	3384083	Identifier	data		3383821	1					
ANR	3384084	Parameter	const char * MD5Keyid	878:16:23135:23155	3383821	5	True				
ANR	3384085	ParameterType	const char *		3383821	0					
ANR	3384086	Identifier	MD5Keyid		3383821	1					
ANR	3384087	Parameter	const unsigned char * md	879:16:23189:23212	3383821	6	True				
ANR	3384088	ParameterType	const unsigned char *		3383821	0					
ANR	3384089	Identifier	md		3383821	1					
ANR	3384090	Parameter	const char * EncKeyId	880:16:23246:23266	3383821	7	True				
ANR	3384091	ParameterType	const char *		3383821	0					
ANR	3384092	Identifier	EncKeyId		3383821	1					
ANR	3384093	Parameter	_condorInMsg * prev	881:4:23273:23290	3383821	8	True				
ANR	3384094	ParameterType	_condorInMsg *		3383821	0					
ANR	3384095	Identifier	prev		3383821	1					
ANR	3384096	CFGEntryNode	ENTRY		3383821		True				
ANR	3384097	CFGExitNode	EXIT		3383821		True				
ANR	3384098	Symbol	lastTime		3383821						
ANR	3384099	Symbol	data		3383821						
ANR	3384100	Symbol	prevMsg		3383821						
ANR	3384101	Symbol	prev		3383821						
ANR	3384102	Symbol	* index		3383821						
ANR	3384103	Symbol	mID		3383821						
ANR	3384104	Symbol	* curDir -> dEntry		3383821						
ANR	3384105	Symbol	destDirNo		3383821						
ANR	3384106	Symbol	mID . msgNo		3383821						
ANR	3384107	Symbol	mID . time		3383821						
ANR	3384108	Symbol	msgLen		3383821						
ANR	3384109	Symbol	msgID . ip_addr		3383821						
ANR	3384110	Symbol	len		3383821						
ANR	3384111	Symbol	md		3383821						
ANR	3384112	Symbol	curDir -> dEntry [ index ] . dGram		3383821						
ANR	3384113	Symbol	curPacket		3383821						
ANR	3384114	Symbol	nextMsg		3383821						
ANR	3384115	Symbol	passed		3383821						
ANR	3384116	Symbol	curData		3383821						
ANR	3384117	Symbol	curDir -> nextDir		3383821						
ANR	3384118	Symbol	seq		3383821						
ANR	3384119	Symbol	EncKeyId		3383821						
ANR	3384120	Symbol	tempBuf		3383821						
ANR	3384121	Symbol	malloc		3383821						
ANR	3384122	Symbol	msgID . pid		3383821						
ANR	3384123	Symbol	msgID . msgNo		3383821						
ANR	3384124	Symbol	NULL		3383821						
ANR	3384125	Symbol	last		3383821						
ANR	3384126	Symbol	curDir -> dirNo		3383821						
ANR	3384127	Symbol	curDir -> dEntry [ index ] . dLen		3383821						
ANR	3384128	Symbol	index		3383821						
ANR	3384129	Symbol	msgID		3383821						
ANR	3384130	Symbol	received		3383821						
ANR	3384131	Symbol	curDir -> dEntry		3383821						
ANR	3384132	Symbol	headDir		3383821						
ANR	3384133	Symbol	* curDir		3383821						
ANR	3384134	Symbol	lastNo		3383821						
ANR	3384135	Symbol	* * curDir		3383821						
ANR	3384136	Symbol	mID . pid		3383821						
ANR	3384137	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		3383821						
ANR	3384138	Symbol	tempBufLen		3383821						
ANR	3384139	Symbol	curDir		3383821						
ANR	3384140	Symbol	mID . ip_addr		3383821						
ANR	3384141	Symbol	time		3383821						
ANR	3384142	Symbol	msgID . time		3383821						
ANR	3384143	Symbol	MD5Keyid		3383821						
ANR	3384144	Function	_condorInMsg :: ~_condorInMsg	935:0:24596:24950							
ANR	3384145	FunctionDef	_condorInMsg :: ~_condorInMsg ()		3384144	0					
ANR	3384146	CompoundStatement		935:30:24626:24950	3384144	0					
ANR	3384147	IfStatement	if ( tempBuf )		3384144	0					
ANR	3384148	Condition	tempBuf	937:4:24633:24639	3384144	0	True				
ANR	3384149	Identifier	tempBuf		3384144	0					
ANR	3384150	ExpressionStatement	free ( tempBuf )	937:13:24642:24655	3384144	1	True				
ANR	3384151	CallExpression	free ( tempBuf )		3384144	0					
ANR	3384152	Callee	free		3384144	0					
ANR	3384153	Identifier	free		3384144	0					
ANR	3384154	ArgumentList	tempBuf		3384144	1					
ANR	3384155	Argument	tempBuf		3384144	0					
ANR	3384156	Identifier	tempBuf		3384144	0					
ANR	3384157	IdentifierDeclStatement	_condorDirPage * tempDir ;	939:1:24659:24682	3384144	1	True				
ANR	3384158	IdentifierDecl	* tempDir		3384144	0					
ANR	3384159	IdentifierDeclType	_condorDirPage *		3384144	0					
ANR	3384160	Identifier	tempDir		3384144	1					
ANR	3384161	WhileStatement	while ( headDir )		3384144	2					
ANR	3384162	Condition	headDir	940:7:24691:24697	3384144	0	True				
ANR	3384163	Identifier	headDir		3384144	0					
ANR	3384164	CompoundStatement		6:16:73:73	3384144	1					
ANR	3384165	ExpressionStatement	tempDir = headDir	941:2:24704:24721	3384144	0	True				
ANR	3384166	AssignmentExpression	tempDir = headDir		3384144	0		=			
ANR	3384167	Identifier	tempDir		3384144	0					
ANR	3384168	Identifier	headDir		3384144	1					
ANR	3384169	ExpressionStatement	headDir = headDir -> nextDir	942:2:24725:24751	3384144	1	True				
ANR	3384170	AssignmentExpression	headDir = headDir -> nextDir		3384144	0		=			
ANR	3384171	Identifier	headDir		3384144	0					
ANR	3384172	PtrMemberAccess	headDir -> nextDir		3384144	1					
ANR	3384173	Identifier	headDir		3384144	0					
ANR	3384174	Identifier	nextDir		3384144	1					
ANR	3384175	Statement	delete	943:2:24755:24760	3384144	2	True				
ANR	3384176	ExpressionStatement	tempDir	943:9:24762:24769	3384144	3	True				
ANR	3384177	Identifier	tempDir		3384144	0					
ANR	3384178	IfStatement	if ( incomingMD5KeyId_ )		3384144	3					
ANR	3384179	Condition	incomingMD5KeyId_	945:8:24782:24798	3384144	0	True				
ANR	3384180	Identifier	incomingMD5KeyId_		3384144	0					
ANR	3384181	CompoundStatement		11:27:174:174	3384144	1					
ANR	3384182	ExpressionStatement	free ( incomingMD5KeyId_ )	946:8:24811:24834	3384144	0	True				
ANR	3384183	CallExpression	free ( incomingMD5KeyId_ )		3384144	0					
ANR	3384184	Callee	free		3384144	0					
ANR	3384185	Identifier	free		3384144	0					
ANR	3384186	ArgumentList	incomingMD5KeyId_		3384144	1					
ANR	3384187	Argument	incomingMD5KeyId_		3384144	0					
ANR	3384188	Identifier	incomingMD5KeyId_		3384144	0					
ANR	3384189	IfStatement	if ( incomingEncKeyId_ )		3384144	4					
ANR	3384190	Condition	incomingEncKeyId_	948:8:24850:24866	3384144	0	True				
ANR	3384191	Identifier	incomingEncKeyId_		3384144	0					
ANR	3384192	CompoundStatement		14:27:242:242	3384144	1					
ANR	3384193	ExpressionStatement	free ( incomingEncKeyId_ )	949:8:24879:24902	3384144	0	True				
ANR	3384194	CallExpression	free ( incomingEncKeyId_ )		3384144	0					
ANR	3384195	Callee	free		3384144	0					
ANR	3384196	Identifier	free		3384144	0					
ANR	3384197	ArgumentList	incomingEncKeyId_		3384144	1					
ANR	3384198	Argument	incomingEncKeyId_		3384144	0					
ANR	3384199	Identifier	incomingEncKeyId_		3384144	0					
ANR	3384200	IfStatement	if ( md_ )		3384144	5					
ANR	3384201	Condition	md_	951:8:24918:24920	3384144	0	True				
ANR	3384202	Identifier	md_		3384144	0					
ANR	3384203	CompoundStatement		17:13:296:296	3384144	1					
ANR	3384204	ExpressionStatement	free ( md_ )	952:8:24933:24942	3384144	0	True				
ANR	3384205	CallExpression	free ( md_ )		3384144	0					
ANR	3384206	Callee	free		3384144	0					
ANR	3384207	Identifier	free		3384144	0					
ANR	3384208	ArgumentList	md_		3384144	1					
ANR	3384209	Argument	md_		3384144	0					
ANR	3384210	Identifier	md_		3384144	0					
ANR	3384211	Identifier	_condorInMsg :: ~_condorInMsg		3384144	1					
ANR	3384212	ParameterList			3384144	2					
ANR	3384213	CFGEntryNode	ENTRY		3384144		True				
ANR	3384214	CFGExitNode	EXIT		3384144		True				
ANR	3384215	Symbol	* headDir		3384144						
ANR	3384216	Symbol	incomingMD5KeyId_		3384144						
ANR	3384217	Symbol	tempDir		3384144						
ANR	3384218	Symbol	md_		3384144						
ANR	3384219	Symbol	headDir		3384144						
ANR	3384220	Symbol	headDir -> nextDir		3384144						
ANR	3384221	Symbol	incomingEncKeyId_		3384144						
ANR	3384222	Symbol	tempBuf		3384144						
ANR	3384223	Function	_condorInMsg :: addPacket	960:0:24977:26727							
ANR	3384224	FunctionDef	"_condorInMsg :: addPacket (const bool last , const int seq , const int len , const void * data)"		3384223	0					
ANR	3384225	CompoundStatement		964:0:25159:26727	3384223	0					
ANR	3384226	IdentifierDeclStatement	"int destDirNo , index ;"	965:1:25162:25182	3384223	0	True				
ANR	3384227	IdentifierDecl	destDirNo		3384223	0					
ANR	3384228	IdentifierDeclType	int		3384223	0					
ANR	3384229	Identifier	destDirNo		3384223	1					
ANR	3384230	IdentifierDecl	index		3384223	1					
ANR	3384231	IdentifierDeclType	int		3384223	0					
ANR	3384232	Identifier	index		3384223	1					
ANR	3384233	IfStatement	if ( lastNo != 0 && lastNo + 1 == received )		3384223	1					
ANR	3384234	Condition	lastNo != 0 && lastNo + 1 == received	968:4:25231:25265	3384223	0	True				
ANR	3384235	AndExpression	lastNo != 0 && lastNo + 1 == received		3384223	0		&&			
ANR	3384236	EqualityExpression	lastNo != 0		3384223	0		!=			
ANR	3384237	Identifier	lastNo		3384223	0					
ANR	3384238	PrimaryExpression	0		3384223	1					
ANR	3384239	EqualityExpression	lastNo + 1 == received		3384223	1		==			
ANR	3384240	AdditiveExpression	lastNo + 1		3384223	0		+			
ANR	3384241	Identifier	lastNo		3384223	0					
ANR	3384242	PrimaryExpression	1		3384223	1					
ANR	3384243	Identifier	received		3384223	1					
ANR	3384244	CompoundStatement		5:41:108:108	3384223	1					
ANR	3384245	ExpressionStatement	"dprintf ( D_NETWORK , ""Duplicated packet. The msg fully defragmented.\\n"" )"	969:8:25278:25348	3384223	0	True				
ANR	3384246	CallExpression	"dprintf ( D_NETWORK , ""Duplicated packet. The msg fully defragmented.\\n"" )"		3384223	0					
ANR	3384247	Callee	dprintf		3384223	0					
ANR	3384248	Identifier	dprintf		3384223	0					
ANR	3384249	ArgumentList	D_NETWORK		3384223	1					
ANR	3384250	Argument	D_NETWORK		3384223	0					
ANR	3384251	Identifier	D_NETWORK		3384223	0					
ANR	3384252	Argument	"""Duplicated packet. The msg fully defragmented.\\n"""		3384223	1					
ANR	3384253	PrimaryExpression	"""Duplicated packet. The msg fully defragmented.\\n"""		3384223	0					
ANR	3384254	ReturnStatement	return false ;	970:2:25352:25364	3384223	1	True				
ANR	3384255	Identifier	false		3384223	0					
ANR	3384256	ExpressionStatement	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY	973:1:25401:25443	3384223	2	True				
ANR	3384257	AssignmentExpression	destDirNo = seq / SAFE_MSG_NO_OF_DIR_ENTRY		3384223	0		=			
ANR	3384258	Identifier	destDirNo		3384223	0					
ANR	3384259	MultiplicativeExpression	seq / SAFE_MSG_NO_OF_DIR_ENTRY		3384223	1		/			
ANR	3384260	Identifier	seq		3384223	0					
ANR	3384261	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3384223	1					
ANR	3384262	WhileStatement	while ( destDirNo != curDir -> dirNo )		3384223	3					
ANR	3384263	Condition	destDirNo != curDir -> dirNo	974:7:25452:25477	3384223	0	True				
ANR	3384264	EqualityExpression	destDirNo != curDir -> dirNo		3384223	0		!=			
ANR	3384265	Identifier	destDirNo		3384223	0					
ANR	3384266	PtrMemberAccess	curDir -> dirNo		3384223	1					
ANR	3384267	Identifier	curDir		3384223	0					
ANR	3384268	Identifier	dirNo		3384223	1					
ANR	3384269	CompoundStatement		11:35:320:320	3384223	1					
ANR	3384270	IfStatement	if ( destDirNo > curDir -> dirNo )		3384223	0					
ANR	3384271	Condition	destDirNo > curDir -> dirNo	975:5:25487:25511	3384223	0	True				
ANR	3384272	RelationalExpression	destDirNo > curDir -> dirNo		3384223	0		>			
ANR	3384273	Identifier	destDirNo		3384223	0					
ANR	3384274	PtrMemberAccess	curDir -> dirNo		3384223	1					
ANR	3384275	Identifier	curDir		3384223	0					
ANR	3384276	Identifier	dirNo		3384223	1					
ANR	3384277	CompoundStatement		12:32:354:354	3384223	1					
ANR	3384278	IfStatement	if ( curDir -> nextDir == NULL )		3384223	0					
ANR	3384279	Condition	curDir -> nextDir == NULL	976:6:25570:25592	3384223	0	True				
ANR	3384280	EqualityExpression	curDir -> nextDir == NULL		3384223	0		==			
ANR	3384281	PtrMemberAccess	curDir -> nextDir		3384223	0					
ANR	3384282	Identifier	curDir		3384223	0					
ANR	3384283	Identifier	nextDir		3384223	1					
ANR	3384284	Identifier	NULL		3384223	1					
ANR	3384285	CompoundStatement		13:31:435:435	3384223	1					
ANR	3384286	ExpressionStatement	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"	977:4:25601:25664	3384223	0	True				
ANR	3384287	AssignmentExpression	"curDir -> nextDir = new _condorDirPage ( curDir , curDir -> dirNo + 1 )"		3384223	0		=			
ANR	3384288	PtrMemberAccess	curDir -> nextDir		3384223	0					
ANR	3384289	Identifier	curDir		3384223	0					
ANR	3384290	Identifier	nextDir		3384223	1					
ANR	3384291	Expression	"curDir , curDir -> dirNo + 1"		3384223	1					
ANR	3384292	Identifier	curDir		3384223	0					
ANR	3384293	AdditiveExpression	curDir -> dirNo + 1		3384223	1		+			
ANR	3384294	PtrMemberAccess	curDir -> dirNo		3384223	0					
ANR	3384295	Identifier	curDir		3384223	0					
ANR	3384296	Identifier	dirNo		3384223	1					
ANR	3384297	PrimaryExpression	1		3384223	1					
ANR	3384298	IfStatement	if ( ! curDir -> nextDir )		3384223	1					
ANR	3384299	Condition	! curDir -> nextDir	978:7:25673:25688	3384223	0	True				
ANR	3384300	UnaryOperationExpression	! curDir -> nextDir		3384223	0					
ANR	3384301	UnaryOperator	!		3384223	0					
ANR	3384302	PtrMemberAccess	curDir -> nextDir		3384223	1					
ANR	3384303	Identifier	curDir		3384223	0					
ANR	3384304	Identifier	nextDir		3384223	1					
ANR	3384305	CompoundStatement		15:25:531:531	3384223	1					
ANR	3384306	ExpressionStatement	"dprintf ( D_ALWAYS , ""addPacket, out of memory\\n"" )"	979:5:25698:25745	3384223	0	True				
ANR	3384307	CallExpression	"dprintf ( D_ALWAYS , ""addPacket, out of memory\\n"" )"		3384223	0					
ANR	3384308	Callee	dprintf		3384223	0					
ANR	3384309	Identifier	dprintf		3384223	0					
ANR	3384310	ArgumentList	D_ALWAYS		3384223	1					
ANR	3384311	Argument	D_ALWAYS		3384223	0					
ANR	3384312	Identifier	D_ALWAYS		3384223	0					
ANR	3384313	Argument	"""addPacket, out of memory\\n"""		3384223	1					
ANR	3384314	PrimaryExpression	"""addPacket, out of memory\\n"""		3384223	0					
ANR	3384315	ReturnStatement	return false ;	980:5:25752:25764	3384223	1	True				
ANR	3384316	Identifier	false		3384223	0					
ANR	3384317	ExpressionStatement	curDir = curDir -> nextDir	983:3:25780:25804	3384223	1	True				
ANR	3384318	AssignmentExpression	curDir = curDir -> nextDir		3384223	0		=			
ANR	3384319	Identifier	curDir		3384223	0					
ANR	3384320	PtrMemberAccess	curDir -> nextDir		3384223	1					
ANR	3384321	Identifier	curDir		3384223	0					
ANR	3384322	Identifier	nextDir		3384223	1					
ANR	3384323	ElseStatement	else		3384223	0					
ANR	3384324	ExpressionStatement	curDir = curDir -> prevDir	986:3:25886:25910	3384223	0	True				
ANR	3384325	AssignmentExpression	curDir = curDir -> prevDir		3384223	0		=			
ANR	3384326	Identifier	curDir		3384223	0					
ANR	3384327	PtrMemberAccess	curDir -> prevDir		3384223	1					
ANR	3384328	Identifier	curDir		3384223	0					
ANR	3384329	Identifier	prevDir		3384223	1					
ANR	3384330	ExpressionStatement	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY	989:1:25943:25981	3384223	4	True				
ANR	3384331	AssignmentExpression	index = seq % SAFE_MSG_NO_OF_DIR_ENTRY		3384223	0		=			
ANR	3384332	Identifier	index		3384223	0					
ANR	3384333	MultiplicativeExpression	seq % SAFE_MSG_NO_OF_DIR_ENTRY		3384223	1		%			
ANR	3384334	Identifier	seq		3384223	0					
ANR	3384335	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3384223	1					
ANR	3384336	IfStatement	if ( curDir -> dEntry [ index ] . dLen == 0 )		3384223	5					
ANR	3384337	Condition	curDir -> dEntry [ index ] . dLen == 0	990:4:25987:26017	3384223	0	True				
ANR	3384338	EqualityExpression	curDir -> dEntry [ index ] . dLen == 0		3384223	0		==			
ANR	3384339	MemberAccess	curDir -> dEntry [ index ] . dLen		3384223	0					
ANR	3384340	ArrayIndexing	curDir -> dEntry [ index ]		3384223	0					
ANR	3384341	PtrMemberAccess	curDir -> dEntry		3384223	0					
ANR	3384342	Identifier	curDir		3384223	0					
ANR	3384343	Identifier	dEntry		3384223	1					
ANR	3384344	Identifier	index		3384223	1					
ANR	3384345	Identifier	dLen		3384223	1					
ANR	3384346	PrimaryExpression	0		3384223	1					
ANR	3384347	CompoundStatement		27:37:860:860	3384223	1					
ANR	3384348	ExpressionStatement	curDir -> dEntry [ index ] . dLen = len	991:2:26038:26070	3384223	0	True				
ANR	3384349	AssignmentExpression	curDir -> dEntry [ index ] . dLen = len		3384223	0		=			
ANR	3384350	MemberAccess	curDir -> dEntry [ index ] . dLen		3384223	0					
ANR	3384351	ArrayIndexing	curDir -> dEntry [ index ]		3384223	0					
ANR	3384352	PtrMemberAccess	curDir -> dEntry		3384223	0					
ANR	3384353	Identifier	curDir		3384223	0					
ANR	3384354	Identifier	dEntry		3384223	1					
ANR	3384355	Identifier	index		3384223	1					
ANR	3384356	Identifier	dLen		3384223	1					
ANR	3384357	Identifier	len		3384223	1					
ANR	3384358	ExpressionStatement	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )	992:2:26074:26123	3384223	1	True				
ANR	3384359	AssignmentExpression	curDir -> dEntry [ index ] . dGram = ( char * ) malloc ( len )		3384223	0		=			
ANR	3384360	MemberAccess	curDir -> dEntry [ index ] . dGram		3384223	0					
ANR	3384361	ArrayIndexing	curDir -> dEntry [ index ]		3384223	0					
ANR	3384362	PtrMemberAccess	curDir -> dEntry		3384223	0					
ANR	3384363	Identifier	curDir		3384223	0					
ANR	3384364	Identifier	dEntry		3384223	1					
ANR	3384365	Identifier	index		3384223	1					
ANR	3384366	Identifier	dGram		3384223	1					
ANR	3384367	CastExpression	( char * ) malloc ( len )		3384223	1					
ANR	3384368	CastTarget	char *		3384223	0					
ANR	3384369	CallExpression	malloc ( len )		3384223	1					
ANR	3384370	Callee	malloc		3384223	0					
ANR	3384371	Identifier	malloc		3384223	0					
ANR	3384372	ArgumentList	len		3384223	1					
ANR	3384373	Argument	len		3384223	0					
ANR	3384374	Identifier	len		3384223	0					
ANR	3384375	IfStatement	if ( ! curDir -> dEntry [ index ] . dGram )		3384223	2					
ANR	3384376	Condition	! curDir -> dEntry [ index ] . dGram	993:5:26130:26157	3384223	0	True				
ANR	3384377	UnaryOperationExpression	! curDir -> dEntry [ index ] . dGram		3384223	0					
ANR	3384378	UnaryOperator	!		3384223	0					
ANR	3384379	MemberAccess	curDir -> dEntry [ index ] . dGram		3384223	1					
ANR	3384380	ArrayIndexing	curDir -> dEntry [ index ]		3384223	0					
ANR	3384381	PtrMemberAccess	curDir -> dEntry		3384223	0					
ANR	3384382	Identifier	curDir		3384223	0					
ANR	3384383	Identifier	dEntry		3384223	1					
ANR	3384384	Identifier	index		3384223	1					
ANR	3384385	Identifier	dGram		3384223	1					
ANR	3384386	CompoundStatement		30:35:1000:1000	3384223	1					
ANR	3384387	ExpressionStatement	"dprintf ( D_ALWAYS , ""addPacket, new char[%d] failed. out of mem\\n"" , len )"	994:3:26165:26235	3384223	0	True				
ANR	3384388	CallExpression	"dprintf ( D_ALWAYS , ""addPacket, new char[%d] failed. out of mem\\n"" , len )"		3384223	0					
ANR	3384389	Callee	dprintf		3384223	0					
ANR	3384390	Identifier	dprintf		3384223	0					
ANR	3384391	ArgumentList	D_ALWAYS		3384223	1					
ANR	3384392	Argument	D_ALWAYS		3384223	0					
ANR	3384393	Identifier	D_ALWAYS		3384223	0					
ANR	3384394	Argument	"""addPacket, new char[%d] failed. out of mem\\n"""		3384223	1					
ANR	3384395	PrimaryExpression	"""addPacket, new char[%d] failed. out of mem\\n"""		3384223	0					
ANR	3384396	Argument	len		3384223	2					
ANR	3384397	Identifier	len		3384223	0					
ANR	3384398	ReturnStatement	return false ;	995:3:26240:26252	3384223	1	True				
ANR	3384399	Identifier	false		3384223	0					
ANR	3384400	ExpressionStatement	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"	997:2:26260:26306	3384223	3	True				
ANR	3384401	CallExpression	"memcpy ( curDir -> dEntry [ index ] . dGram , data , len )"		3384223	0					
ANR	3384402	Callee	memcpy		3384223	0					
ANR	3384403	Identifier	memcpy		3384223	0					
ANR	3384404	ArgumentList	curDir -> dEntry [ index ] . dGram		3384223	1					
ANR	3384405	Argument	curDir -> dEntry [ index ] . dGram		3384223	0					
ANR	3384406	MemberAccess	curDir -> dEntry [ index ] . dGram		3384223	0					
ANR	3384407	ArrayIndexing	curDir -> dEntry [ index ]		3384223	0					
ANR	3384408	PtrMemberAccess	curDir -> dEntry		3384223	0					
ANR	3384409	Identifier	curDir		3384223	0					
ANR	3384410	Identifier	dEntry		3384223	1					
ANR	3384411	Identifier	index		3384223	1					
ANR	3384412	Identifier	dGram		3384223	1					
ANR	3384413	Argument	data		3384223	1					
ANR	3384414	Identifier	data		3384223	0					
ANR	3384415	Argument	len		3384223	2					
ANR	3384416	Identifier	len		3384223	0					
ANR	3384417	ExpressionStatement	msgLen += len	998:2:26310:26323	3384223	4	True				
ANR	3384418	AssignmentExpression	msgLen += len		3384223	0		+=			
ANR	3384419	Identifier	msgLen		3384223	0					
ANR	3384420	Identifier	len		3384223	1					
ANR	3384421	IfStatement	if ( last )		3384223	5					
ANR	3384422	Condition	last	1000:5:26331:26334	3384223	0	True				
ANR	3384423	Identifier	last		3384223	0					
ANR	3384424	ExpressionStatement	lastNo = seq	1001:3:26340:26352	3384223	1	True				
ANR	3384425	AssignmentExpression	lastNo = seq		3384223	0		=			
ANR	3384426	Identifier	lastNo		3384223	0					
ANR	3384427	Identifier	seq		3384223	1					
ANR	3384428	ExpressionStatement	received ++	1002:2:26356:26366	3384223	6	True				
ANR	3384429	PostIncDecOperationExpression	received ++		3384223	0					
ANR	3384430	Identifier	received		3384223	0					
ANR	3384431	IncDec	++		3384223	1					
ANR	3384432	IfStatement	if ( lastNo + 1 == received )		3384223	7					
ANR	3384433	Condition	lastNo + 1 == received	1003:5:26373:26394	3384223	0	True				
ANR	3384434	EqualityExpression	lastNo + 1 == received		3384223	0		==			
ANR	3384435	AdditiveExpression	lastNo + 1		3384223	0		+			
ANR	3384436	Identifier	lastNo		3384223	0					
ANR	3384437	PrimaryExpression	1		3384223	1					
ANR	3384438	Identifier	received		3384223	1					
ANR	3384439	CompoundStatement		40:29:1237:1237	3384223	1					
ANR	3384440	ExpressionStatement	curDir = headDir	1004:3:26436:26452	3384223	0	True				
ANR	3384441	AssignmentExpression	curDir = headDir		3384223	0		=			
ANR	3384442	Identifier	curDir		3384223	0					
ANR	3384443	Identifier	headDir		3384223	1					
ANR	3384444	ExpressionStatement	curPacket = 0	1005:3:26457:26470	3384223	1	True				
ANR	3384445	AssignmentExpression	curPacket = 0		3384223	0		=			
ANR	3384446	Identifier	curPacket		3384223	0					
ANR	3384447	PrimaryExpression	0		3384223	1					
ANR	3384448	ExpressionStatement	curData = 0	1006:3:26475:26486	3384223	2	True				
ANR	3384449	AssignmentExpression	curData = 0		3384223	0		=			
ANR	3384450	Identifier	curData		3384223	0					
ANR	3384451	PrimaryExpression	0		3384223	1					
ANR	3384452	ExpressionStatement	"dprintf ( D_NETWORK , ""long msg ready: %ld bytes\\n"" , msgLen )"	1007:12:26500:26557	3384223	3	True				
ANR	3384453	CallExpression	"dprintf ( D_NETWORK , ""long msg ready: %ld bytes\\n"" , msgLen )"		3384223	0					
ANR	3384454	Callee	dprintf		3384223	0					
ANR	3384455	Identifier	dprintf		3384223	0					
ANR	3384456	ArgumentList	D_NETWORK		3384223	1					
ANR	3384457	Argument	D_NETWORK		3384223	0					
ANR	3384458	Identifier	D_NETWORK		3384223	0					
ANR	3384459	Argument	"""long msg ready: %ld bytes\\n"""		3384223	1					
ANR	3384460	PrimaryExpression	"""long msg ready: %ld bytes\\n"""		3384223	0					
ANR	3384461	Argument	msgLen		3384223	2					
ANR	3384462	Identifier	msgLen		3384223	0					
ANR	3384463	ReturnStatement	return true ;	1008:3:26562:26573	3384223	4	True				
ANR	3384464	Identifier	true		3384223	0					
ANR	3384465	ElseStatement	else		3384223	0					
ANR	3384466	CompoundStatement		46:9:1424:1424	3384223	0					
ANR	3384467	ExpressionStatement	lastTime = time ( NULL )	1010:3:26589:26610	3384223	0	True				
ANR	3384468	AssignmentExpression	lastTime = time ( NULL )		3384223	0		=			
ANR	3384469	Identifier	lastTime		3384223	0					
ANR	3384470	CallExpression	time ( NULL )		3384223	1					
ANR	3384471	Callee	time		3384223	0					
ANR	3384472	Identifier	time		3384223	0					
ANR	3384473	ArgumentList	NULL		3384223	1					
ANR	3384474	Argument	NULL		3384223	0					
ANR	3384475	Identifier	NULL		3384223	0					
ANR	3384476	ReturnStatement	return false ;	1011:3:26615:26627	3384223	1	True				
ANR	3384477	Identifier	false		3384223	0					
ANR	3384478	ElseStatement	else		3384223	0					
ANR	3384479	ReturnStatement	return false ;	1014:2:26713:26725	3384223	0	True				
ANR	3384480	Identifier	false		3384223	0					
ANR	3384481	ReturnType	bool		3384223	1					
ANR	3384482	Identifier	_condorInMsg :: addPacket		3384223	2					
ANR	3384483	ParameterList	"const bool last , const int seq , const int len , const void * data"		3384223	3					
ANR	3384484	Parameter	const bool last	960:29:25006:25020	3384223	0	True				
ANR	3384485	ParameterType	const bool		3384223	0					
ANR	3384486	Identifier	last		3384223	1					
ANR	3384487	Parameter	const int seq	961:29:25052:25064	3384223	1	True				
ANR	3384488	ParameterType	const int		3384223	0					
ANR	3384489	Identifier	seq		3384223	1					
ANR	3384490	Parameter	const int len	962:29:25096:25108	3384223	2	True				
ANR	3384491	ParameterType	const int		3384223	0					
ANR	3384492	Identifier	len		3384223	1					
ANR	3384493	Parameter	const void * data	963:29:25141:25156	3384223	3	True				
ANR	3384494	ParameterType	const void *		3384223	0					
ANR	3384495	Identifier	data		3384223	1					
ANR	3384496	CFGEntryNode	ENTRY		3384223		True				
ANR	3384497	CFGExitNode	EXIT		3384223		True				
ANR	3384498	Symbol	lastTime		3384223						
ANR	3384499	Symbol	data		3384223						
ANR	3384500	Symbol	* index		3384223						
ANR	3384501	Symbol	* curDir -> dEntry		3384223						
ANR	3384502	Symbol	destDirNo		3384223						
ANR	3384503	Symbol	msgLen		3384223						
ANR	3384504	Symbol	len		3384223						
ANR	3384505	Symbol	curDir -> dEntry [ index ] . dGram		3384223						
ANR	3384506	Symbol	curPacket		3384223						
ANR	3384507	Symbol	curDir -> nextDir		3384223						
ANR	3384508	Symbol	curData		3384223						
ANR	3384509	Symbol	seq		3384223						
ANR	3384510	Symbol	malloc		3384223						
ANR	3384511	Symbol	NULL		3384223						
ANR	3384512	Symbol	last		3384223						
ANR	3384513	Symbol	curDir -> dirNo		3384223						
ANR	3384514	Symbol	curDir -> dEntry [ index ] . dLen		3384223						
ANR	3384515	Symbol	false		3384223						
ANR	3384516	Symbol	D_ALWAYS		3384223						
ANR	3384517	Symbol	index		3384223						
ANR	3384518	Symbol	received		3384223						
ANR	3384519	Symbol	curDir -> dEntry		3384223						
ANR	3384520	Symbol	headDir		3384223						
ANR	3384521	Symbol	* curDir		3384223						
ANR	3384522	Symbol	curDir -> prevDir		3384223						
ANR	3384523	Symbol	lastNo		3384223						
ANR	3384524	Symbol	* * curDir		3384223						
ANR	3384525	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		3384223						
ANR	3384526	Symbol	curDir		3384223						
ANR	3384527	Symbol	true		3384223						
ANR	3384528	Symbol	D_NETWORK		3384223						
ANR	3384529	Symbol	time		3384223						
ANR	3384530	Function	_condorInMsg :: verifyMD	1017:0:26730:28148							
ANR	3384531	FunctionDef	_condorInMsg :: verifyMD (Condor_MD_MAC * mdChecker)		3384530	0					
ANR	3384532	CompoundStatement		1018:0:26787:28148	3384530	0					
ANR	3384533	IdentifierDeclStatement	int currentPacket ;	1019:4:26793:26810	3384530	0	True				
ANR	3384534	IdentifierDecl	currentPacket		3384530	0					
ANR	3384535	IdentifierDeclType	int		3384530	0					
ANR	3384536	Identifier	currentPacket		3384530	1					
ANR	3384537	IdentifierDeclStatement	_condorDirPage * start = headDir ;	1020:4:26816:26848	3384530	1	True				
ANR	3384538	IdentifierDecl	* start = headDir		3384530	0					
ANR	3384539	IdentifierDeclType	_condorDirPage *		3384530	0					
ANR	3384540	Identifier	start		3384530	1					
ANR	3384541	AssignmentExpression	* start = headDir		3384530	2		=			
ANR	3384542	Identifier	headDir		3384530	0					
ANR	3384543	Identifier	headDir		3384530	1					
ANR	3384544	IfStatement	if ( ! verified_ )		3384530	2					
ANR	3384545	Condition	! verified_	1022:8:26859:26868	3384530	0	True				
ANR	3384546	UnaryOperationExpression	! verified_		3384530	0					
ANR	3384547	UnaryOperator	!		3384530	0					
ANR	3384548	Identifier	verified_		3384530	1					
ANR	3384549	CompoundStatement		5:20:83:83	3384530	1					
ANR	3384550	IfStatement	if ( curDir != start )		3384530	0					
ANR	3384551	Condition	curDir != start	1023:12:26885:26899	3384530	0	True				
ANR	3384552	EqualityExpression	curDir != start		3384530	0		!=			
ANR	3384553	Identifier	curDir		3384530	0					
ANR	3384554	Identifier	start		3384530	1					
ANR	3384555	CompoundStatement		6:29:114:114	3384530	1					
ANR	3384556	ReturnStatement	return false ;	1024:12:26917:26929	3384530	0	True				
ANR	3384557	Identifier	false		3384530	0					
ANR	3384558	IfStatement	if ( mdChecker && md_ )		3384530	1					
ANR	3384559	Condition	mdChecker && md_	1027:12:26954:26969	3384530	0	True				
ANR	3384560	AndExpression	mdChecker && md_		3384530	0		&&			
ANR	3384561	Identifier	mdChecker		3384530	0					
ANR	3384562	Identifier	md_		3384530	1					
ANR	3384563	CompoundStatement		10:30:184:184	3384530	1					
ANR	3384564	WhileStatement	while ( start != NULL )		3384530	0					
ANR	3384565	Condition	start != NULL	1028:19:26993:27005	3384530	0	True				
ANR	3384566	EqualityExpression	start != NULL		3384530	0		!=			
ANR	3384567	Identifier	start		3384530	0					
ANR	3384568	Identifier	NULL		3384530	1					
ANR	3384569	CompoundStatement		11:34:220:220	3384530	1					
ANR	3384570	ExpressionStatement	currentPacket = 0	1029:16:27026:27043	3384530	0	True				
ANR	3384571	AssignmentExpression	currentPacket = 0		3384530	0		=			
ANR	3384572	Identifier	currentPacket		3384530	0					
ANR	3384573	PrimaryExpression	0		3384530	1					
ANR	3384574	WhileStatement	while ( currentPacket != SAFE_MSG_NO_OF_DIR_ENTRY )		3384530	1					
ANR	3384575	Condition	currentPacket != SAFE_MSG_NO_OF_DIR_ENTRY	1030:22:27067:27107	3384530	0	True				
ANR	3384576	EqualityExpression	currentPacket != SAFE_MSG_NO_OF_DIR_ENTRY		3384530	0		!=			
ANR	3384577	Identifier	currentPacket		3384530	0					
ANR	3384578	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3384530	1					
ANR	3384579	CompoundStatement		13:65:322:322	3384530	1					
ANR	3384580	ExpressionStatement	"mdChecker -> addMD ( ( unsigned char * ) start -> dEntry [ currentPacket ] . dGram , start -> dEntry [ currentPacket ] . dLen )"	1031:20:27132:27274	3384530	0	True				
ANR	3384581	CallExpression	"mdChecker -> addMD ( ( unsigned char * ) start -> dEntry [ currentPacket ] . dGram , start -> dEntry [ currentPacket ] . dLen )"		3384530	0					
ANR	3384582	Callee	mdChecker -> addMD		3384530	0					
ANR	3384583	PtrMemberAccess	mdChecker -> addMD		3384530	0					
ANR	3384584	Identifier	mdChecker		3384530	0					
ANR	3384585	Identifier	addMD		3384530	1					
ANR	3384586	ArgumentList	( unsigned char * ) start -> dEntry [ currentPacket ] . dGram		3384530	1					
ANR	3384587	Argument	( unsigned char * ) start -> dEntry [ currentPacket ] . dGram		3384530	0					
ANR	3384588	CastExpression	( unsigned char * ) start -> dEntry [ currentPacket ] . dGram		3384530	0					
ANR	3384589	CastTarget	unsigned char *		3384530	0					
ANR	3384590	MemberAccess	start -> dEntry [ currentPacket ] . dGram		3384530	1					
ANR	3384591	ArrayIndexing	start -> dEntry [ currentPacket ]		3384530	0					
ANR	3384592	PtrMemberAccess	start -> dEntry		3384530	0					
ANR	3384593	Identifier	start		3384530	0					
ANR	3384594	Identifier	dEntry		3384530	1					
ANR	3384595	Identifier	currentPacket		3384530	1					
ANR	3384596	Identifier	dGram		3384530	1					
ANR	3384597	Argument	start -> dEntry [ currentPacket ] . dLen		3384530	1					
ANR	3384598	MemberAccess	start -> dEntry [ currentPacket ] . dLen		3384530	0					
ANR	3384599	ArrayIndexing	start -> dEntry [ currentPacket ]		3384530	0					
ANR	3384600	PtrMemberAccess	start -> dEntry		3384530	0					
ANR	3384601	Identifier	start		3384530	0					
ANR	3384602	Identifier	dEntry		3384530	1					
ANR	3384603	Identifier	currentPacket		3384530	1					
ANR	3384604	Identifier	dLen		3384530	1					
ANR	3384605	IfStatement	if ( ++ currentPacket == SAFE_MSG_NO_OF_DIR_ENTRY )		3384530	1					
ANR	3384606	Condition	++ currentPacket == SAFE_MSG_NO_OF_DIR_ENTRY	1033:23:27299:27341	3384530	0	True				
ANR	3384607	EqualityExpression	++ currentPacket == SAFE_MSG_NO_OF_DIR_ENTRY		3384530	0		==			
ANR	3384608	UnaryExpression	++ currentPacket		3384530	0					
ANR	3384609	IncDec	++		3384530	0					
ANR	3384610	Identifier	currentPacket		3384530	1					
ANR	3384611	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3384530	1					
ANR	3384612	CompoundStatement		16:68:556:556	3384530	1					
ANR	3384613	ExpressionStatement	start = start -> nextDir	1035:24:27429:27451	3384530	0	True				
ANR	3384614	AssignmentExpression	start = start -> nextDir		3384530	0		=			
ANR	3384615	Identifier	start		3384530	0					
ANR	3384616	PtrMemberAccess	start -> nextDir		3384530	1					
ANR	3384617	Identifier	start		3384530	0					
ANR	3384618	Identifier	nextDir		3384530	1					
ANR	3384619	IfStatement	if ( mdChecker -> verifyMD ( md_ ) )		3384530	1					
ANR	3384620	Condition	mdChecker -> verifyMD ( md_ )	1041:16:27575:27598	3384530	0	True				
ANR	3384621	CallExpression	mdChecker -> verifyMD ( md_ )		3384530	0					
ANR	3384622	Callee	mdChecker -> verifyMD		3384530	0					
ANR	3384623	PtrMemberAccess	mdChecker -> verifyMD		3384530	0					
ANR	3384624	Identifier	mdChecker		3384530	0					
ANR	3384625	Identifier	verifyMD		3384530	1					
ANR	3384626	ArgumentList	md_		3384530	1					
ANR	3384627	Argument	md_		3384530	0					
ANR	3384628	Identifier	md_		3384530	0					
ANR	3384629	CompoundStatement		24:42:813:813	3384530	1					
ANR	3384630	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"	1042:16:27619:27656	3384530	0	True				
ANR	3384631	CallExpression	"dprintf ( D_SECURITY , ""MD verified!\\n"" )"		3384530	0					
ANR	3384632	Callee	dprintf		3384530	0					
ANR	3384633	Identifier	dprintf		3384530	0					
ANR	3384634	ArgumentList	D_SECURITY		3384530	1					
ANR	3384635	Argument	D_SECURITY		3384530	0					
ANR	3384636	Identifier	D_SECURITY		3384530	0					
ANR	3384637	Argument	"""MD verified!\\n"""		3384530	1					
ANR	3384638	PrimaryExpression	"""MD verified!\\n"""		3384530	0					
ANR	3384639	ExpressionStatement	verified_ = true	1043:16:27674:27690	3384530	1	True				
ANR	3384640	AssignmentExpression	verified_ = true		3384530	0		=			
ANR	3384641	Identifier	verified_		3384530	0					
ANR	3384642	Identifier	true		3384530	1					
ANR	3384643	ElseStatement	else		3384530	0					
ANR	3384644	CompoundStatement		28:17:935:935	3384530	0					
ANR	3384645	ExpressionStatement	"dprintf ( D_SECURITY , ""MD verification failed for long messag\\n"" )"	1046:16:27741:27804	3384530	0	True				
ANR	3384646	CallExpression	"dprintf ( D_SECURITY , ""MD verification failed for long messag\\n"" )"		3384530	0					
ANR	3384647	Callee	dprintf		3384530	0					
ANR	3384648	Identifier	dprintf		3384530	0					
ANR	3384649	ArgumentList	D_SECURITY		3384530	1					
ANR	3384650	Argument	D_SECURITY		3384530	0					
ANR	3384651	Identifier	D_SECURITY		3384530	0					
ANR	3384652	Argument	"""MD verification failed for long messag\\n"""		3384530	1					
ANR	3384653	PrimaryExpression	"""MD verification failed for long messag\\n"""		3384530	0					
ANR	3384654	ExpressionStatement	verified_ = false	1047:16:27822:27839	3384530	1	True				
ANR	3384655	AssignmentExpression	verified_ = false		3384530	0		=			
ANR	3384656	Identifier	verified_		3384530	0					
ANR	3384657	Identifier	false		3384530	1					
ANR	3384658	ElseStatement	else		3384530	0					
ANR	3384659	CompoundStatement		33:13:1090:1090	3384530	0					
ANR	3384660	IfStatement	if ( md_ )		3384530	0					
ANR	3384661	Condition	md_	1051:16:27896:27898	3384530	0	True				
ANR	3384662	Identifier	md_		3384530	0					
ANR	3384663	CompoundStatement		34:21:1113:1113	3384530	1					
ANR	3384664	ExpressionStatement	"dprintf ( D_SECURITY , ""WARNING, incorrect MAC object is being used\\n"" )"	1052:16:27919:27987	3384530	0	True				
ANR	3384665	CallExpression	"dprintf ( D_SECURITY , ""WARNING, incorrect MAC object is being used\\n"" )"		3384530	0					
ANR	3384666	Callee	dprintf		3384530	0					
ANR	3384667	Identifier	dprintf		3384530	0					
ANR	3384668	ArgumentList	D_SECURITY		3384530	1					
ANR	3384669	Argument	D_SECURITY		3384530	0					
ANR	3384670	Identifier	D_SECURITY		3384530	0					
ANR	3384671	Argument	"""WARNING, incorrect MAC object is being used\\n"""		3384530	1					
ANR	3384672	PrimaryExpression	"""WARNING, incorrect MAC object is being used\\n"""		3384530	0					
ANR	3384673	ElseStatement	else		3384530	0					
ANR	3384674	CompoundStatement		37:17:1232:1232	3384530	0					
ANR	3384675	ExpressionStatement	"dprintf ( D_SECURITY , ""WARNING, no MAC data is found!\\n"" )"	1055:16:28038:28093	3384530	0	True				
ANR	3384676	CallExpression	"dprintf ( D_SECURITY , ""WARNING, no MAC data is found!\\n"" )"		3384530	0					
ANR	3384677	Callee	dprintf		3384530	0					
ANR	3384678	Identifier	dprintf		3384530	0					
ANR	3384679	ArgumentList	D_SECURITY		3384530	1					
ANR	3384680	Argument	D_SECURITY		3384530	0					
ANR	3384681	Identifier	D_SECURITY		3384530	0					
ANR	3384682	Argument	"""WARNING, no MAC data is found!\\n"""		3384530	1					
ANR	3384683	PrimaryExpression	"""WARNING, no MAC data is found!\\n"""		3384530	0					
ANR	3384684	ReturnStatement	return verified_ ;	1060:4:28130:28146	3384530	3	True				
ANR	3384685	Identifier	verified_		3384530	0					
ANR	3384686	ReturnType	bool		3384530	1					
ANR	3384687	Identifier	_condorInMsg :: verifyMD		3384530	2					
ANR	3384688	ParameterList	Condor_MD_MAC * mdChecker		3384530	3					
ANR	3384689	Parameter	Condor_MD_MAC * mdChecker	1017:30:26760:26784	3384530	0	True				
ANR	3384690	ParameterType	Condor_MD_MAC *		3384530	0					
ANR	3384691	Identifier	mdChecker		3384530	1					
ANR	3384692	CFGEntryNode	ENTRY		3384530		True				
ANR	3384693	CFGExitNode	EXIT		3384530		True				
ANR	3384694	Symbol	NULL		3384530						
ANR	3384695	Symbol	start -> dEntry		3384530						
ANR	3384696	Symbol	currentPacket		3384530						
ANR	3384697	Symbol	D_SECURITY		3384530						
ANR	3384698	Symbol	* start		3384530						
ANR	3384699	Symbol	start		3384530						
ANR	3384700	Symbol	false		3384530						
ANR	3384701	Symbol	md_		3384530						
ANR	3384702	Symbol	start -> nextDir		3384530						
ANR	3384703	Symbol	headDir		3384530						
ANR	3384704	Symbol	* mdChecker		3384530						
ANR	3384705	Symbol	start -> dEntry [ currentPacket ] . dGram		3384530						
ANR	3384706	Symbol	mdChecker		3384530						
ANR	3384707	Symbol	mdChecker -> verifyMD		3384530						
ANR	3384708	Symbol	verified_		3384530						
ANR	3384709	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		3384530						
ANR	3384710	Symbol	* currentPacket		3384530						
ANR	3384711	Symbol	curDir		3384530						
ANR	3384712	Symbol	true		3384530						
ANR	3384713	Symbol	start -> dEntry [ currentPacket ] . dLen		3384530						
ANR	3384714	Symbol	* * start		3384530						
ANR	3384715	Symbol	* start -> dEntry		3384530						
ANR	3384716	Function	_condorInMsg :: incrementCurData	1063:0:28151:28731							
ANR	3384717	FunctionDef	_condorInMsg :: incrementCurData (int n)		3384716	0					
ANR	3384718	CompoundStatement		1063:45:28196:28731	3384716	0					
ANR	3384719	ExpressionStatement	curData += n	1064:1:28199:28211	3384716	0	True				
ANR	3384720	AssignmentExpression	curData += n		3384716	0		+=			
ANR	3384721	Identifier	curData		3384716	0					
ANR	3384722	Identifier	n		3384716	1					
ANR	3384723	ExpressionStatement	passed += n	1065:1:28214:28225	3384716	1	True				
ANR	3384724	AssignmentExpression	passed += n		3384716	0		+=			
ANR	3384725	Identifier	passed		3384716	0					
ANR	3384726	Identifier	n		3384716	1					
ANR	3384727	IfStatement	if ( curData == curDir -> dEntry [ curPacket ] . dLen )		3384716	2					
ANR	3384728	Condition	curData == curDir -> dEntry [ curPacket ] . dLen	1067:4:28232:28272	3384716	0	True				
ANR	3384729	EqualityExpression	curData == curDir -> dEntry [ curPacket ] . dLen		3384716	0		==			
ANR	3384730	Identifier	curData		3384716	0					
ANR	3384731	MemberAccess	curDir -> dEntry [ curPacket ] . dLen		3384716	1					
ANR	3384732	ArrayIndexing	curDir -> dEntry [ curPacket ]		3384716	0					
ANR	3384733	PtrMemberAccess	curDir -> dEntry		3384716	0					
ANR	3384734	Identifier	curDir		3384716	0					
ANR	3384735	Identifier	dEntry		3384716	1					
ANR	3384736	Identifier	curPacket		3384716	1					
ANR	3384737	Identifier	dLen		3384716	1					
ANR	3384738	CompoundStatement		5:47:78:78	3384716	1					
ANR	3384739	ExpressionStatement	free ( curDir -> dEntry [ curPacket ] . dGram )	1070:2:28375:28412	3384716	0	True				
ANR	3384740	CallExpression	free ( curDir -> dEntry [ curPacket ] . dGram )		3384716	0					
ANR	3384741	Callee	free		3384716	0					
ANR	3384742	Identifier	free		3384716	0					
ANR	3384743	ArgumentList	curDir -> dEntry [ curPacket ] . dGram		3384716	1					
ANR	3384744	Argument	curDir -> dEntry [ curPacket ] . dGram		3384716	0					
ANR	3384745	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		3384716	0					
ANR	3384746	ArrayIndexing	curDir -> dEntry [ curPacket ]		3384716	0					
ANR	3384747	PtrMemberAccess	curDir -> dEntry		3384716	0					
ANR	3384748	Identifier	curDir		3384716	0					
ANR	3384749	Identifier	dEntry		3384716	1					
ANR	3384750	Identifier	curPacket		3384716	1					
ANR	3384751	Identifier	dGram		3384716	1					
ANR	3384752	ExpressionStatement	curDir -> dEntry [ curPacket ] . dGram = NULL	1071:2:28416:28454	3384716	1	True				
ANR	3384753	AssignmentExpression	curDir -> dEntry [ curPacket ] . dGram = NULL		3384716	0		=			
ANR	3384754	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		3384716	0					
ANR	3384755	ArrayIndexing	curDir -> dEntry [ curPacket ]		3384716	0					
ANR	3384756	PtrMemberAccess	curDir -> dEntry		3384716	0					
ANR	3384757	Identifier	curDir		3384716	0					
ANR	3384758	Identifier	dEntry		3384716	1					
ANR	3384759	Identifier	curPacket		3384716	1					
ANR	3384760	Identifier	dGram		3384716	1					
ANR	3384761	Identifier	NULL		3384716	1					
ANR	3384762	IfStatement	if ( ++ curPacket == SAFE_MSG_NO_OF_DIR_ENTRY )		3384716	2					
ANR	3384763	Condition	++ curPacket == SAFE_MSG_NO_OF_DIR_ENTRY	1073:5:28462:28500	3384716	0	True				
ANR	3384764	EqualityExpression	++ curPacket == SAFE_MSG_NO_OF_DIR_ENTRY		3384716	0		==			
ANR	3384765	UnaryExpression	++ curPacket		3384716	0					
ANR	3384766	IncDec	++		3384716	0					
ANR	3384767	Identifier	curPacket		3384716	1					
ANR	3384768	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3384716	1					
ANR	3384769	CompoundStatement		13:3:349:382	3384716	1					
ANR	3384770	IdentifierDeclStatement	_condorDirPage * tempDir = headDir ;	1075:3:28546:28579	3384716	0	True				
ANR	3384771	IdentifierDecl	* tempDir = headDir		3384716	0					
ANR	3384772	IdentifierDeclType	_condorDirPage *		3384716	0					
ANR	3384773	Identifier	tempDir		3384716	1					
ANR	3384774	AssignmentExpression	* tempDir = headDir		3384716	2		=			
ANR	3384775	Identifier	headDir		3384716	0					
ANR	3384776	Identifier	headDir		3384716	1					
ANR	3384777	ExpressionStatement	headDir = curDir = headDir -> nextDir	1076:3:28584:28619	3384716	1	True				
ANR	3384778	AssignmentExpression	headDir = curDir = headDir -> nextDir		3384716	0		=			
ANR	3384779	Identifier	headDir		3384716	0					
ANR	3384780	AssignmentExpression	curDir = headDir -> nextDir		3384716	1		=			
ANR	3384781	Identifier	curDir		3384716	0					
ANR	3384782	PtrMemberAccess	headDir -> nextDir		3384716	1					
ANR	3384783	Identifier	headDir		3384716	0					
ANR	3384784	Identifier	nextDir		3384716	1					
ANR	3384785	IfStatement	if ( headDir )		3384716	2					
ANR	3384786	Condition	headDir	1077:6:28627:28633	3384716	0	True				
ANR	3384787	Identifier	headDir		3384716	0					
ANR	3384788	CompoundStatement		15:15:439:439	3384716	1					
ANR	3384789	ExpressionStatement	headDir -> prevDir = NULL	1078:4:28642:28665	3384716	0	True				
ANR	3384790	AssignmentExpression	headDir -> prevDir = NULL		3384716	0		=			
ANR	3384791	PtrMemberAccess	headDir -> prevDir		3384716	0					
ANR	3384792	Identifier	headDir		3384716	0					
ANR	3384793	Identifier	prevDir		3384716	1					
ANR	3384794	Identifier	NULL		3384716	1					
ANR	3384795	Statement	delete	1080:3:28675:28680	3384716	3	True				
ANR	3384796	ExpressionStatement	tempDir	1080:10:28682:28689	3384716	4	True				
ANR	3384797	Identifier	tempDir		3384716	0					
ANR	3384798	ExpressionStatement	curPacket = 0	1081:3:28694:28707	3384716	5	True				
ANR	3384799	AssignmentExpression	curPacket = 0		3384716	0		=			
ANR	3384800	Identifier	curPacket		3384716	0					
ANR	3384801	PrimaryExpression	0		3384716	1					
ANR	3384802	ExpressionStatement	curData = 0	1083:2:28715:28726	3384716	3	True				
ANR	3384803	AssignmentExpression	curData = 0		3384716	0		=			
ANR	3384804	Identifier	curData		3384716	0					
ANR	3384805	PrimaryExpression	0		3384716	1					
ANR	3384806	ReturnType	void		3384716	1					
ANR	3384807	Identifier	_condorInMsg :: incrementCurData		3384716	2					
ANR	3384808	ParameterList	int n		3384716	3					
ANR	3384809	Parameter	int n	1063:37:28188:28192	3384716	0	True				
ANR	3384810	ParameterType	int		3384716	0					
ANR	3384811	Identifier	n		3384716	1					
ANR	3384812	CFGEntryNode	ENTRY		3384716		True				
ANR	3384813	CFGExitNode	EXIT		3384716		True				
ANR	3384814	Symbol	NULL		3384716						
ANR	3384815	Symbol	curDir -> dEntry		3384716						
ANR	3384816	Symbol	* curDir -> dEntry		3384716						
ANR	3384817	Symbol	headDir		3384716						
ANR	3384818	Symbol	headDir -> nextDir		3384716						
ANR	3384819	Symbol	curDir -> dEntry [ curPacket ] . dLen		3384716						
ANR	3384820	Symbol	* curDir		3384716						
ANR	3384821	Symbol	n		3384716						
ANR	3384822	Symbol	* * curDir		3384716						
ANR	3384823	Symbol	* curPacket		3384716						
ANR	3384824	Symbol	* headDir		3384716						
ANR	3384825	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		3384716						
ANR	3384826	Symbol	curPacket		3384716						
ANR	3384827	Symbol	curDir		3384716						
ANR	3384828	Symbol	tempDir		3384716						
ANR	3384829	Symbol	passed		3384716						
ANR	3384830	Symbol	headDir -> prevDir		3384716						
ANR	3384831	Symbol	curData		3384716						
ANR	3384832	Symbol	curDir -> dEntry [ curPacket ] . dGram		3384716						
ANR	3384833	Function	_condorInMsg :: getn	1095:0:29070:29757							
ANR	3384834	FunctionDef	"_condorInMsg :: getn (char * dta , const int size)"		3384833	0					
ANR	3384835	CompoundStatement		1096:0:29120:29757	3384833	0					
ANR	3384836	IdentifierDeclStatement	"int len , total = 0 ;"	1097:1:29123:29141	3384833	0	True				
ANR	3384837	IdentifierDecl	len		3384833	0					
ANR	3384838	IdentifierDeclType	int		3384833	0					
ANR	3384839	Identifier	len		3384833	1					
ANR	3384840	IdentifierDecl	total = 0		3384833	1					
ANR	3384841	IdentifierDeclType	int		3384833	0					
ANR	3384842	Identifier	total		3384833	1					
ANR	3384843	AssignmentExpression	total = 0		3384833	2		=			
ANR	3384844	Identifier	total		3384833	0					
ANR	3384845	PrimaryExpression	0		3384833	1					
ANR	3384846	IfStatement	if ( ! dta || passed + size > msgLen )		3384833	1					
ANR	3384847	Condition	! dta || passed + size > msgLen	1099:4:29148:29177	3384833	0	True				
ANR	3384848	OrExpression	! dta || passed + size > msgLen		3384833	0		||			
ANR	3384849	UnaryOperationExpression	! dta		3384833	0					
ANR	3384850	UnaryOperator	!		3384833	0					
ANR	3384851	Identifier	dta		3384833	1					
ANR	3384852	RelationalExpression	passed + size > msgLen		3384833	1		>			
ANR	3384853	AdditiveExpression	passed + size		3384833	0		+			
ANR	3384854	Identifier	passed		3384833	0					
ANR	3384855	Identifier	size		3384833	1					
ANR	3384856	Identifier	msgLen		3384833	1					
ANR	3384857	CompoundStatement		4:36:59:59	3384833	1					
ANR	3384858	ExpressionStatement	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"	1100:8:29190:29263	3384833	0	True				
ANR	3384859	CallExpression	"dprintf ( D_NETWORK , ""dta is NULL or more data than queued is requested\\n"" )"		3384833	0					
ANR	3384860	Callee	dprintf		3384833	0					
ANR	3384861	Identifier	dprintf		3384833	0					
ANR	3384862	ArgumentList	D_NETWORK		3384833	1					
ANR	3384863	Argument	D_NETWORK		3384833	0					
ANR	3384864	Identifier	D_NETWORK		3384833	0					
ANR	3384865	Argument	"""dta is NULL or more data than queued is requested\\n"""		3384833	1					
ANR	3384866	PrimaryExpression	"""dta is NULL or more data than queued is requested\\n"""		3384833	0					
ANR	3384867	ReturnStatement	return - 1 ;	1101:2:29267:29276	3384833	1	True				
ANR	3384868	UnaryOperationExpression	- 1		3384833	0					
ANR	3384869	UnaryOperator	-		3384833	0					
ANR	3384870	PrimaryExpression	1		3384833	1					
ANR	3384871	WhileStatement	while ( total != size )		3384833	2					
ANR	3384872	Condition	total != size	1104:7:29292:29304	3384833	0	True				
ANR	3384873	EqualityExpression	total != size		3384833	0		!=			
ANR	3384874	Identifier	total		3384833	0					
ANR	3384875	Identifier	size		3384833	1					
ANR	3384876	CompoundStatement		9:22:186:186	3384833	1					
ANR	3384877	ExpressionStatement	len = size - total	1105:2:29311:29329	3384833	0	True				
ANR	3384878	AssignmentExpression	len = size - total		3384833	0		=			
ANR	3384879	Identifier	len		3384833	0					
ANR	3384880	AdditiveExpression	size - total		3384833	1		-			
ANR	3384881	Identifier	size		3384833	0					
ANR	3384882	Identifier	total		3384833	1					
ANR	3384883	IfStatement	if ( len > curDir -> dEntry [ curPacket ] . dLen - curData )		3384833	1					
ANR	3384884	Condition	len > curDir -> dEntry [ curPacket ] . dLen - curData	1106:5:29336:29381	3384833	0	True				
ANR	3384885	RelationalExpression	len > curDir -> dEntry [ curPacket ] . dLen - curData		3384833	0		>			
ANR	3384886	Identifier	len		3384833	0					
ANR	3384887	AdditiveExpression	curDir -> dEntry [ curPacket ] . dLen - curData		3384833	1		-			
ANR	3384888	MemberAccess	curDir -> dEntry [ curPacket ] . dLen		3384833	0					
ANR	3384889	ArrayIndexing	curDir -> dEntry [ curPacket ]		3384833	0					
ANR	3384890	PtrMemberAccess	curDir -> dEntry		3384833	0					
ANR	3384891	Identifier	curDir		3384833	0					
ANR	3384892	Identifier	dEntry		3384833	1					
ANR	3384893	Identifier	curPacket		3384833	1					
ANR	3384894	Identifier	dLen		3384833	1					
ANR	3384895	Identifier	curData		3384833	1					
ANR	3384896	ExpressionStatement	len = curDir -> dEntry [ curPacket ] . dLen - curData	1107:3:29387:29433	3384833	1	True				
ANR	3384897	AssignmentExpression	len = curDir -> dEntry [ curPacket ] . dLen - curData		3384833	0		=			
ANR	3384898	Identifier	len		3384833	0					
ANR	3384899	AdditiveExpression	curDir -> dEntry [ curPacket ] . dLen - curData		3384833	1		-			
ANR	3384900	MemberAccess	curDir -> dEntry [ curPacket ] . dLen		3384833	0					
ANR	3384901	ArrayIndexing	curDir -> dEntry [ curPacket ]		3384833	0					
ANR	3384902	PtrMemberAccess	curDir -> dEntry		3384833	0					
ANR	3384903	Identifier	curDir		3384833	0					
ANR	3384904	Identifier	dEntry		3384833	1					
ANR	3384905	Identifier	curPacket		3384833	1					
ANR	3384906	Identifier	dLen		3384833	1					
ANR	3384907	Identifier	curData		3384833	1					
ANR	3384908	ExpressionStatement	"memcpy ( & dta [ total ] , & ( curDir -> dEntry [ curPacket ] . dGram [ curData ] ) , len )"	1108:2:29437:29515	3384833	2	True				
ANR	3384909	CallExpression	"memcpy ( & dta [ total ] , & ( curDir -> dEntry [ curPacket ] . dGram [ curData ] ) , len )"		3384833	0					
ANR	3384910	Callee	memcpy		3384833	0					
ANR	3384911	Identifier	memcpy		3384833	0					
ANR	3384912	ArgumentList	& dta [ total ]		3384833	1					
ANR	3384913	Argument	& dta [ total ]		3384833	0					
ANR	3384914	UnaryOperationExpression	& dta [ total ]		3384833	0					
ANR	3384915	UnaryOperator	&		3384833	0					
ANR	3384916	ArrayIndexing	dta [ total ]		3384833	1					
ANR	3384917	Identifier	dta		3384833	0					
ANR	3384918	Identifier	total		3384833	1					
ANR	3384919	Argument	& ( curDir -> dEntry [ curPacket ] . dGram [ curData ] )		3384833	1					
ANR	3384920	UnaryOperationExpression	& ( curDir -> dEntry [ curPacket ] . dGram [ curData ] )		3384833	0					
ANR	3384921	UnaryOperator	&		3384833	0					
ANR	3384922	ArrayIndexing	curDir -> dEntry [ curPacket ] . dGram [ curData ]		3384833	1					
ANR	3384923	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		3384833	0					
ANR	3384924	ArrayIndexing	curDir -> dEntry [ curPacket ]		3384833	0					
ANR	3384925	PtrMemberAccess	curDir -> dEntry		3384833	0					
ANR	3384926	Identifier	curDir		3384833	0					
ANR	3384927	Identifier	dEntry		3384833	1					
ANR	3384928	Identifier	curPacket		3384833	1					
ANR	3384929	Identifier	dGram		3384833	1					
ANR	3384930	Identifier	curData		3384833	1					
ANR	3384931	Argument	len		3384833	2					
ANR	3384932	Identifier	len		3384833	0					
ANR	3384933	ExpressionStatement	total += len	1110:2:29519:29531	3384833	3	True				
ANR	3384934	AssignmentExpression	total += len		3384833	0		+=			
ANR	3384935	Identifier	total		3384833	0					
ANR	3384936	Identifier	len		3384833	1					
ANR	3384937	ExpressionStatement	incrementCurData ( len )	1111:2:29535:29556	3384833	4	True				
ANR	3384938	CallExpression	incrementCurData ( len )		3384833	0					
ANR	3384939	Callee	incrementCurData		3384833	0					
ANR	3384940	Identifier	incrementCurData		3384833	0					
ANR	3384941	ArgumentList	len		3384833	1					
ANR	3384942	Argument	len		3384833	0					
ANR	3384943	Identifier	len		3384833	0					
ANR	3384944	IfStatement	if ( D_FULLDEBUG & DebugFlags )		3384833	3					
ANR	3384945	Condition	D_FULLDEBUG & DebugFlags	1114:8:29591:29614	3384833	0	True				
ANR	3384946	BitAndExpression	D_FULLDEBUG & DebugFlags		3384833	0		&			
ANR	3384947	Identifier	D_FULLDEBUG		3384833	0					
ANR	3384948	Identifier	DebugFlags		3384833	1					
ANR	3384949	CompoundStatement		19:35:497:497	3384833	1					
ANR	3384950	ExpressionStatement	"dprintf ( D_NETWORK , ""%d bytes read from UDP[size=%ld, passed=%d]\\n"" , total , msgLen , passed )"	1115:8:29628:29734	3384833	0	True				
ANR	3384951	CallExpression	"dprintf ( D_NETWORK , ""%d bytes read from UDP[size=%ld, passed=%d]\\n"" , total , msgLen , passed )"		3384833	0					
ANR	3384952	Callee	dprintf		3384833	0					
ANR	3384953	Identifier	dprintf		3384833	0					
ANR	3384954	ArgumentList	D_NETWORK		3384833	1					
ANR	3384955	Argument	D_NETWORK		3384833	0					
ANR	3384956	Identifier	D_NETWORK		3384833	0					
ANR	3384957	Argument	"""%d bytes read from UDP[size=%ld, passed=%d]\\n"""		3384833	1					
ANR	3384958	PrimaryExpression	"""%d bytes read from UDP[size=%ld, passed=%d]\\n"""		3384833	0					
ANR	3384959	Argument	total		3384833	2					
ANR	3384960	Identifier	total		3384833	0					
ANR	3384961	Argument	msgLen		3384833	3					
ANR	3384962	Identifier	msgLen		3384833	0					
ANR	3384963	Argument	passed		3384833	4					
ANR	3384964	Identifier	passed		3384833	0					
ANR	3384965	ReturnStatement	return total ;	1118:1:29743:29755	3384833	4	True				
ANR	3384966	Identifier	total		3384833	0					
ANR	3384967	ReturnType	int		3384833	1					
ANR	3384968	Identifier	_condorInMsg :: getn		3384833	2					
ANR	3384969	ParameterList	"char * dta , const int size"		3384833	3					
ANR	3384970	Parameter	char * dta	1095:23:29093:29101	3384833	0	True				
ANR	3384971	ParameterType	char *		3384833	0					
ANR	3384972	Identifier	dta		3384833	1					
ANR	3384973	Parameter	const int size	1095:34:29104:29117	3384833	1	True				
ANR	3384974	ParameterType	const int		3384833	0					
ANR	3384975	Identifier	size		3384833	1					
ANR	3384976	CFGEntryNode	ENTRY		3384833		True				
ANR	3384977	CFGExitNode	EXIT		3384833		True				
ANR	3384978	Symbol	curDir -> dEntry		3384833						
ANR	3384979	Symbol	DebugFlags		3384833						
ANR	3384980	Symbol	D_FULLDEBUG		3384833						
ANR	3384981	Symbol	* curDir -> dEntry		3384833						
ANR	3384982	Symbol	curDir -> dEntry [ curPacket ] . dLen		3384833						
ANR	3384983	Symbol	* curDir		3384833						
ANR	3384984	Symbol	dta		3384833						
ANR	3384985	Symbol	msgLen		3384833						
ANR	3384986	Symbol	* * curDir		3384833						
ANR	3384987	Symbol	* curPacket		3384833						
ANR	3384988	Symbol	total		3384833						
ANR	3384989	Symbol	size		3384833						
ANR	3384990	Symbol	len		3384833						
ANR	3384991	Symbol	curDir		3384833						
ANR	3384992	Symbol	curPacket		3384833						
ANR	3384993	Symbol	D_NETWORK		3384833						
ANR	3384994	Symbol	passed		3384833						
ANR	3384995	Symbol	curData		3384833						
ANR	3384996	Symbol	curDir -> dEntry [ curPacket ] . dGram		3384833						
ANR	3384997	Function	_condorInMsg :: getPtr	1132:0:30299:32205							
ANR	3384998	FunctionDef	"_condorInMsg :: getPtr (void * & buf , char delim)"		3384997	0					
ANR	3384999	CompoundStatement		1133:0:30348:32205	3384997	0					
ANR	3385000	IdentifierDeclStatement	_condorDirPage * tempDir ;	1134:1:30351:30374	3384997	0	True				
ANR	3385001	IdentifierDecl	* tempDir		3384997	0					
ANR	3385002	IdentifierDeclType	_condorDirPage *		3384997	0					
ANR	3385003	Identifier	tempDir		3384997	1					
ANR	3385004	IdentifierDeclStatement	"int tempPkt , tempData ;"	1135:1:30377:30398	3384997	1	True				
ANR	3385005	IdentifierDecl	tempPkt		3384997	0					
ANR	3385006	IdentifierDeclType	int		3384997	0					
ANR	3385007	Identifier	tempPkt		3384997	1					
ANR	3385008	IdentifierDecl	tempData		3384997	1					
ANR	3385009	IdentifierDeclType	int		3384997	0					
ANR	3385010	Identifier	tempData		3384997	1					
ANR	3385011	IdentifierDeclStatement	size_t n = 1 ;	1136:1:30401:30413	3384997	2	True				
ANR	3385012	IdentifierDecl	n = 1		3384997	0					
ANR	3385013	IdentifierDeclType	size_t		3384997	0					
ANR	3385014	Identifier	n		3384997	1					
ANR	3385015	AssignmentExpression	n = 1		3384997	2		=			
ANR	3385016	Identifier	n		3384997	0					
ANR	3385017	PrimaryExpression	1		3384997	1					
ANR	3385018	IdentifierDeclStatement	int size ;	1137:1:30416:30424	3384997	3	True				
ANR	3385019	IdentifierDecl	size		3384997	0					
ANR	3385020	IdentifierDeclType	int		3384997	0					
ANR	3385021	Identifier	size		3384997	1					
ANR	3385022	ExpressionStatement	tempDir = curDir	1139:1:30428:30444	3384997	4	True				
ANR	3385023	AssignmentExpression	tempDir = curDir		3384997	0		=			
ANR	3385024	Identifier	tempDir		3384997	0					
ANR	3385025	Identifier	curDir		3384997	1					
ANR	3385026	ExpressionStatement	tempPkt = curPacket	1140:1:30447:30466	3384997	5	True				
ANR	3385027	AssignmentExpression	tempPkt = curPacket		3384997	0		=			
ANR	3385028	Identifier	tempPkt		3384997	0					
ANR	3385029	Identifier	curPacket		3384997	1					
ANR	3385030	ExpressionStatement	tempData = curData	1141:1:30469:30487	3384997	6	True				
ANR	3385031	AssignmentExpression	tempData = curData		3384997	0		=			
ANR	3385032	Identifier	tempData		3384997	0					
ANR	3385033	Identifier	curData		3384997	1					
ANR	3385034	IdentifierDeclStatement	bool copy_needed = false ;	1143:1:30491:30515	3384997	7	True				
ANR	3385035	IdentifierDecl	copy_needed = false		3384997	0					
ANR	3385036	IdentifierDeclType	bool		3384997	0					
ANR	3385037	Identifier	copy_needed		3384997	1					
ANR	3385038	AssignmentExpression	copy_needed = false		3384997	2		=			
ANR	3385039	Identifier	false		3384997	0					
ANR	3385040	Identifier	false		3384997	1					
ANR	3385041	WhileStatement	while ( 1 )		3384997	8					
ANR	3385042	Condition	1	1144:7:30524:30524	3384997	0	True				
ANR	3385043	PrimaryExpression	1		3384997	0					
ANR	3385044	CompoundStatement		15:2:306:363	3384997	1					
ANR	3385045	IdentifierDeclStatement	char * msgbuf = & tempDir -> dEntry [ tempPkt ] . dGram [ tempData ] ;	1145:2:30531:30587	3384997	0	True				
ANR	3385046	IdentifierDecl	* msgbuf = & tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		3384997	0					
ANR	3385047	IdentifierDeclType	char *		3384997	0					
ANR	3385048	Identifier	msgbuf		3384997	1					
ANR	3385049	AssignmentExpression	* msgbuf = & tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		3384997	2		=			
ANR	3385050	Identifier	msgbuf		3384997	0					
ANR	3385051	UnaryOperationExpression	& tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		3384997	1					
ANR	3385052	UnaryOperator	&		3384997	0					
ANR	3385053	ArrayIndexing	tempDir -> dEntry [ tempPkt ] . dGram [ tempData ]		3384997	1					
ANR	3385054	MemberAccess	tempDir -> dEntry [ tempPkt ] . dGram		3384997	0					
ANR	3385055	ArrayIndexing	tempDir -> dEntry [ tempPkt ]		3384997	0					
ANR	3385056	PtrMemberAccess	tempDir -> dEntry		3384997	0					
ANR	3385057	Identifier	tempDir		3384997	0					
ANR	3385058	Identifier	dEntry		3384997	1					
ANR	3385059	Identifier	tempPkt		3384997	1					
ANR	3385060	Identifier	dGram		3384997	1					
ANR	3385061	Identifier	tempData		3384997	1					
ANR	3385062	IdentifierDeclStatement	size_t msgbufsize = tempDir -> dEntry [ tempPkt ] . dLen - tempData ;	1146:2:30591:30651	3384997	1	True				
ANR	3385063	IdentifierDecl	msgbufsize = tempDir -> dEntry [ tempPkt ] . dLen - tempData		3384997	0					
ANR	3385064	IdentifierDeclType	size_t		3384997	0					
ANR	3385065	Identifier	msgbufsize		3384997	1					
ANR	3385066	AssignmentExpression	msgbufsize = tempDir -> dEntry [ tempPkt ] . dLen - tempData		3384997	2		=			
ANR	3385067	Identifier	msgbufsize		3384997	0					
ANR	3385068	AdditiveExpression	tempDir -> dEntry [ tempPkt ] . dLen - tempData		3384997	1		-			
ANR	3385069	MemberAccess	tempDir -> dEntry [ tempPkt ] . dLen		3384997	0					
ANR	3385070	ArrayIndexing	tempDir -> dEntry [ tempPkt ]		3384997	0					
ANR	3385071	PtrMemberAccess	tempDir -> dEntry		3384997	0					
ANR	3385072	Identifier	tempDir		3384997	0					
ANR	3385073	Identifier	dEntry		3384997	1					
ANR	3385074	Identifier	tempPkt		3384997	1					
ANR	3385075	Identifier	dLen		3384997	1					
ANR	3385076	Identifier	tempData		3384997	1					
ANR	3385077	IdentifierDeclStatement	"char * delim_ptr = ( char * ) memchr ( msgbuf , delim , msgbufsize ) ;"	1147:2:30655:30712	3384997	2	True				
ANR	3385078	IdentifierDecl	"* delim_ptr = ( char * ) memchr ( msgbuf , delim , msgbufsize )"		3384997	0					
ANR	3385079	IdentifierDeclType	char *		3384997	0					
ANR	3385080	Identifier	delim_ptr		3384997	1					
ANR	3385081	AssignmentExpression	"* delim_ptr = ( char * ) memchr ( msgbuf , delim , msgbufsize )"		3384997	2		=			
ANR	3385082	Identifier	delim_ptr		3384997	0					
ANR	3385083	CastExpression	"( char * ) memchr ( msgbuf , delim , msgbufsize )"		3384997	1					
ANR	3385084	CastTarget	char *		3384997	0					
ANR	3385085	CallExpression	"memchr ( msgbuf , delim , msgbufsize )"		3384997	1					
ANR	3385086	Callee	memchr		3384997	0					
ANR	3385087	Identifier	memchr		3384997	0					
ANR	3385088	ArgumentList	msgbuf		3384997	1					
ANR	3385089	Argument	msgbuf		3384997	0					
ANR	3385090	Identifier	msgbuf		3384997	0					
ANR	3385091	Argument	delim		3384997	1					
ANR	3385092	Identifier	delim		3384997	0					
ANR	3385093	Argument	msgbufsize		3384997	2					
ANR	3385094	Identifier	msgbufsize		3384997	0					
ANR	3385095	IfStatement	if ( delim_ptr )		3384997	3					
ANR	3385096	Condition	delim_ptr	1149:6:30721:30729	3384997	0	True				
ANR	3385097	Identifier	delim_ptr		3384997	0					
ANR	3385098	CompoundStatement		17:18:384:384	3384997	1					
ANR	3385099	ExpressionStatement	n += delim_ptr - msgbuf	1150:3:30738:30761	3384997	0	True				
ANR	3385100	AssignmentExpression	n += delim_ptr - msgbuf		3384997	0		+=			
ANR	3385101	Identifier	n		3384997	0					
ANR	3385102	AdditiveExpression	delim_ptr - msgbuf		3384997	1		-			
ANR	3385103	Identifier	delim_ptr		3384997	0					
ANR	3385104	Identifier	msgbuf		3384997	1					
ANR	3385105	IfStatement	if ( n == msgbufsize )		3384997	1					
ANR	3385106	Condition	n == msgbufsize	1151:7:30770:30784	3384997	0	True				
ANR	3385107	EqualityExpression	n == msgbufsize		3384997	0		==			
ANR	3385108	Identifier	n		3384997	0					
ANR	3385109	Identifier	msgbufsize		3384997	1					
ANR	3385110	CompoundStatement		19:25:439:439	3384997	1					
ANR	3385111	ExpressionStatement	copy_needed = true	1155:4:30927:30945	3384997	0	True				
ANR	3385112	AssignmentExpression	copy_needed = true		3384997	0		=			
ANR	3385113	Identifier	copy_needed		3384997	0					
ANR	3385114	Identifier	true		3384997	1					
ANR	3385115	IfStatement	if ( ! copy_needed )		3384997	2					
ANR	3385116	Condition	! copy_needed	1157:7:30959:30970	3384997	0	True				
ANR	3385117	UnaryOperationExpression	! copy_needed		3384997	0					
ANR	3385118	UnaryOperator	!		3384997	0					
ANR	3385119	Identifier	copy_needed		3384997	1					
ANR	3385120	CompoundStatement		25:22:625:625	3384997	1					
ANR	3385121	ExpressionStatement	incrementCurData ( n )	1161:4:31155:31174	3384997	0	True				
ANR	3385122	CallExpression	incrementCurData ( n )		3384997	0					
ANR	3385123	Callee	incrementCurData		3384997	0					
ANR	3385124	Identifier	incrementCurData		3384997	0					
ANR	3385125	ArgumentList	n		3384997	1					
ANR	3385126	Argument	n		3384997	0					
ANR	3385127	Identifier	n		3384997	0					
ANR	3385128	ExpressionStatement	buf = msgbuf	1162:4:31180:31192	3384997	1	True				
ANR	3385129	AssignmentExpression	buf = msgbuf		3384997	0		=			
ANR	3385130	Identifier	buf		3384997	0					
ANR	3385131	Identifier	msgbuf		3384997	1					
ANR	3385132	ReturnStatement	return n ;	1163:4:31198:31206	3384997	2	True				
ANR	3385133	Identifier	n		3384997	0					
ANR	3385134	BreakStatement	break ;	1165:3:31216:31221	3384997	3	True				
ANR	3385135	ExpressionStatement	copy_needed = true	1167:2:31244:31262	3384997	4	True				
ANR	3385136	AssignmentExpression	copy_needed = true		3384997	0		=			
ANR	3385137	Identifier	copy_needed		3384997	0					
ANR	3385138	Identifier	true		3384997	1					
ANR	3385139	ExpressionStatement	n += msgbufsize	1169:2:31300:31315	3384997	5	True				
ANR	3385140	AssignmentExpression	n += msgbufsize		3384997	0		+=			
ANR	3385141	Identifier	n		3384997	0					
ANR	3385142	Identifier	msgbufsize		3384997	1					
ANR	3385143	ExpressionStatement	tempPkt ++	1170:2:31319:31328	3384997	6	True				
ANR	3385144	PostIncDecOperationExpression	tempPkt ++		3384997	0					
ANR	3385145	Identifier	tempPkt		3384997	0					
ANR	3385146	IncDec	++		3384997	1					
ANR	3385147	ExpressionStatement	tempData = 0	1171:2:31332:31344	3384997	7	True				
ANR	3385148	AssignmentExpression	tempData = 0		3384997	0		=			
ANR	3385149	Identifier	tempData		3384997	0					
ANR	3385150	PrimaryExpression	0		3384997	1					
ANR	3385151	IfStatement	if ( tempPkt == SAFE_MSG_NO_OF_DIR_ENTRY )		3384997	8					
ANR	3385152	Condition	tempPkt == SAFE_MSG_NO_OF_DIR_ENTRY	1172:5:31351:31385	3384997	0	True				
ANR	3385153	EqualityExpression	tempPkt == SAFE_MSG_NO_OF_DIR_ENTRY		3384997	0		==			
ANR	3385154	Identifier	tempPkt		3384997	0					
ANR	3385155	Identifier	SAFE_MSG_NO_OF_DIR_ENTRY		3384997	1					
ANR	3385156	CompoundStatement		40:42:1039:1039	3384997	1					
ANR	3385157	IfStatement	if ( ! tempDir -> nextDir )		3384997	0					
ANR	3385158	Condition	! tempDir -> nextDir	1173:6:31396:31412	3384997	0	True				
ANR	3385159	UnaryOperationExpression	! tempDir -> nextDir		3384997	0					
ANR	3385160	UnaryOperator	!		3384997	0					
ANR	3385161	PtrMemberAccess	tempDir -> nextDir		3384997	1					
ANR	3385162	Identifier	tempDir		3384997	0					
ANR	3385163	Identifier	nextDir		3384997	1					
ANR	3385164	CompoundStatement		41:25:1066:1066	3384997	1					
ANR	3385165	ReturnStatement	return - 1 ;	1174:4:31421:31430	3384997	0	True				
ANR	3385166	UnaryOperationExpression	- 1		3384997	0					
ANR	3385167	UnaryOperator	-		3384997	0					
ANR	3385168	PrimaryExpression	1		3384997	1					
ANR	3385169	ExpressionStatement	tempDir = tempDir -> nextDir	1176:3:31440:31466	3384997	1	True				
ANR	3385170	AssignmentExpression	tempDir = tempDir -> nextDir		3384997	0		=			
ANR	3385171	Identifier	tempDir		3384997	0					
ANR	3385172	PtrMemberAccess	tempDir -> nextDir		3384997	1					
ANR	3385173	Identifier	tempDir		3384997	0					
ANR	3385174	Identifier	nextDir		3384997	1					
ANR	3385175	ExpressionStatement	tempPkt = 0	1177:3:31471:31482	3384997	2	True				
ANR	3385176	AssignmentExpression	tempPkt = 0		3384997	0		=			
ANR	3385177	Identifier	tempPkt		3384997	0					
ANR	3385178	PrimaryExpression	0		3384997	1					
ANR	3385179	ElseStatement	else		3384997	0					
ANR	3385180	IfStatement	if ( ! tempDir -> dEntry [ tempPkt ] . dGram )		3384997	0					
ANR	3385181	Condition	! tempDir -> dEntry [ tempPkt ] . dGram	1178:12:31496:31526	3384997	0	True				
ANR	3385182	UnaryOperationExpression	! tempDir -> dEntry [ tempPkt ] . dGram		3384997	0					
ANR	3385183	UnaryOperator	!		3384997	0					
ANR	3385184	MemberAccess	tempDir -> dEntry [ tempPkt ] . dGram		3384997	1					
ANR	3385185	ArrayIndexing	tempDir -> dEntry [ tempPkt ]		3384997	0					
ANR	3385186	PtrMemberAccess	tempDir -> dEntry		3384997	0					
ANR	3385187	Identifier	tempDir		3384997	0					
ANR	3385188	Identifier	dEntry		3384997	1					
ANR	3385189	Identifier	tempPkt		3384997	1					
ANR	3385190	Identifier	dGram		3384997	1					
ANR	3385191	CompoundStatement		46:45:1180:1180	3384997	1					
ANR	3385192	IfStatement	if ( D_FULLDEBUG & DebugFlags )		3384997	0					
ANR	3385193	Condition	D_FULLDEBUG & DebugFlags	1179:7:31561:31584	3384997	0	True				
ANR	3385194	BitAndExpression	D_FULLDEBUG & DebugFlags		3384997	0		&			
ANR	3385195	Identifier	D_FULLDEBUG		3384997	0					
ANR	3385196	Identifier	DebugFlags		3384997	1					
ANR	3385197	ExpressionStatement	"dprintf ( D_NETWORK , ""SafeMsg::getPtr: get to end & '%c' not found\\n"" , delim )"	1180:4:31592:31679	3384997	1	True				
ANR	3385198	CallExpression	"dprintf ( D_NETWORK , ""SafeMsg::getPtr: get to end & '%c' not found\\n"" , delim )"		3384997	0					
ANR	3385199	Callee	dprintf		3384997	0					
ANR	3385200	Identifier	dprintf		3384997	0					
ANR	3385201	ArgumentList	D_NETWORK		3384997	1					
ANR	3385202	Argument	D_NETWORK		3384997	0					
ANR	3385203	Identifier	D_NETWORK		3384997	0					
ANR	3385204	Argument	"""SafeMsg::getPtr: get to end & '%c' not found\\n"""		3384997	1					
ANR	3385205	PrimaryExpression	"""SafeMsg::getPtr: get to end & '%c' not found\\n"""		3384997	0					
ANR	3385206	Argument	delim		3384997	2					
ANR	3385207	Identifier	delim		3384997	0					
ANR	3385208	ReturnStatement	return - 1 ;	1182:3:31684:31693	3384997	1	True				
ANR	3385209	UnaryOperationExpression	- 1		3384997	0					
ANR	3385210	UnaryOperator	-		3384997	0					
ANR	3385211	PrimaryExpression	1		3384997	1					
ANR	3385212	IfStatement	if ( D_FULLDEBUG & DebugFlags )		3384997	9					
ANR	3385213	Condition	D_FULLDEBUG & DebugFlags	1186:5:31708:31731	3384997	0	True				
ANR	3385214	BitAndExpression	D_FULLDEBUG & DebugFlags		3384997	0		&			
ANR	3385215	Identifier	D_FULLDEBUG		3384997	0					
ANR	3385216	Identifier	DebugFlags		3384997	1					
ANR	3385217	ExpressionStatement	"dprintf ( D_NETWORK , ""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"" , delim , ( unsigned long ) n )"	1187:2:31737:31849	3384997	1	True				
ANR	3385218	CallExpression	"dprintf ( D_NETWORK , ""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"" , delim , ( unsigned long ) n )"		3384997	0					
ANR	3385219	Callee	dprintf		3384997	0					
ANR	3385220	Identifier	dprintf		3384997	0					
ANR	3385221	ArgumentList	D_NETWORK		3384997	1					
ANR	3385222	Argument	D_NETWORK		3384997	0					
ANR	3385223	Identifier	D_NETWORK		3384997	0					
ANR	3385224	Argument	"""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"""		3384997	1					
ANR	3385225	PrimaryExpression	"""SafeMsg::_longMsg::getPtr: found delim = %c & length = %lu\\n"""		3384997	0					
ANR	3385226	Argument	delim		3384997	2					
ANR	3385227	Identifier	delim		3384997	0					
ANR	3385228	Argument	( unsigned long ) n		3384997	3					
ANR	3385229	CastExpression	( unsigned long ) n		3384997	0					
ANR	3385230	CastTarget	unsigned long		3384997	0					
ANR	3385231	Identifier	n		3384997	1					
ANR	3385232	IfStatement	if ( n > tempBufLen )		3384997	10					
ANR	3385233	Condition	n > tempBufLen	1189:5:31856:31869	3384997	0	True				
ANR	3385234	RelationalExpression	n > tempBufLen		3384997	0		>			
ANR	3385235	Identifier	n		3384997	0					
ANR	3385236	Identifier	tempBufLen		3384997	1					
ANR	3385237	CompoundStatement		57:22:1524:1524	3384997	1					
ANR	3385238	IfStatement	if ( tempBuf )		3384997	0					
ANR	3385239	Condition	tempBuf	1190:5:31880:31886	3384997	0	True				
ANR	3385240	Identifier	tempBuf		3384997	0					
ANR	3385241	CompoundStatement		58:14:1540:1540	3384997	1					
ANR	3385242	ExpressionStatement	free ( tempBuf )	1191:3:31894:31907	3384997	0	True				
ANR	3385243	CallExpression	free ( tempBuf )		3384997	0					
ANR	3385244	Callee	free		3384997	0					
ANR	3385245	Identifier	free		3384997	0					
ANR	3385246	ArgumentList	tempBuf		3384997	1					
ANR	3385247	Argument	tempBuf		3384997	0					
ANR	3385248	Identifier	tempBuf		3384997	0					
ANR	3385249	ExpressionStatement	tempBuf = ( char * ) malloc ( n )	1193:2:31915:31942	3384997	1	True				
ANR	3385250	AssignmentExpression	tempBuf = ( char * ) malloc ( n )		3384997	0		=			
ANR	3385251	Identifier	tempBuf		3384997	0					
ANR	3385252	CastExpression	( char * ) malloc ( n )		3384997	1					
ANR	3385253	CastTarget	char *		3384997	0					
ANR	3385254	CallExpression	malloc ( n )		3384997	1					
ANR	3385255	Callee	malloc		3384997	0					
ANR	3385256	Identifier	malloc		3384997	0					
ANR	3385257	ArgumentList	n		3384997	1					
ANR	3385258	Argument	n		3384997	0					
ANR	3385259	Identifier	n		3384997	0					
ANR	3385260	IfStatement	if ( ! tempBuf )		3384997	2					
ANR	3385261	Condition	! tempBuf	1194:5:31949:31956	3384997	0	True				
ANR	3385262	UnaryOperationExpression	! tempBuf		3384997	0					
ANR	3385263	UnaryOperator	!		3384997	0					
ANR	3385264	Identifier	tempBuf		3384997	1					
ANR	3385265	CompoundStatement		62:15:1610:1610	3384997	1					
ANR	3385266	ExpressionStatement	"dprintf ( D_ALWAYS , ""getPtr, fail at malloc(%lu)\\n"" , ( unsigned long ) n )"	1195:3:31964:32032	3384997	0	True				
ANR	3385267	CallExpression	"dprintf ( D_ALWAYS , ""getPtr, fail at malloc(%lu)\\n"" , ( unsigned long ) n )"		3384997	0					
ANR	3385268	Callee	dprintf		3384997	0					
ANR	3385269	Identifier	dprintf		3384997	0					
ANR	3385270	ArgumentList	D_ALWAYS		3384997	1					
ANR	3385271	Argument	D_ALWAYS		3384997	0					
ANR	3385272	Identifier	D_ALWAYS		3384997	0					
ANR	3385273	Argument	"""getPtr, fail at malloc(%lu)\\n"""		3384997	1					
ANR	3385274	PrimaryExpression	"""getPtr, fail at malloc(%lu)\\n"""		3384997	0					
ANR	3385275	Argument	( unsigned long ) n		3384997	2					
ANR	3385276	CastExpression	( unsigned long ) n		3384997	0					
ANR	3385277	CastTarget	unsigned long		3384997	0					
ANR	3385278	Identifier	n		3384997	1					
ANR	3385279	ExpressionStatement	tempBufLen = 0	1196:3:32037:32051	3384997	1	True				
ANR	3385280	AssignmentExpression	tempBufLen = 0		3384997	0		=			
ANR	3385281	Identifier	tempBufLen		3384997	0					
ANR	3385282	PrimaryExpression	0		3384997	1					
ANR	3385283	ReturnStatement	return - 1 ;	1197:3:32056:32065	3384997	2	True				
ANR	3385284	UnaryOperationExpression	- 1		3384997	0					
ANR	3385285	UnaryOperator	-		3384997	0					
ANR	3385286	PrimaryExpression	1		3384997	1					
ANR	3385287	ExpressionStatement	tempBufLen = n	1199:2:32073:32087	3384997	3	True				
ANR	3385288	AssignmentExpression	tempBufLen = n		3384997	0		=			
ANR	3385289	Identifier	tempBufLen		3384997	0					
ANR	3385290	Identifier	n		3384997	1					
ANR	3385291	ExpressionStatement	"size = getn ( tempBuf , n )"	1201:1:32093:32116	3384997	11	True				
ANR	3385292	AssignmentExpression	"size = getn ( tempBuf , n )"		3384997	0		=			
ANR	3385293	Identifier	size		3384997	0					
ANR	3385294	CallExpression	"getn ( tempBuf , n )"		3384997	1					
ANR	3385295	Callee	getn		3384997	0					
ANR	3385296	Identifier	getn		3384997	0					
ANR	3385297	ArgumentList	tempBuf		3384997	1					
ANR	3385298	Argument	tempBuf		3384997	0					
ANR	3385299	Identifier	tempBuf		3384997	0					
ANR	3385300	Argument	n		3384997	1					
ANR	3385301	Identifier	n		3384997	0					
ANR	3385302	ExpressionStatement	buf = tempBuf	1202:1:32119:32132	3384997	12	True				
ANR	3385303	AssignmentExpression	buf = tempBuf		3384997	0		=			
ANR	3385304	Identifier	buf		3384997	0					
ANR	3385305	Identifier	tempBuf		3384997	1					
ANR	3385306	ReturnStatement	return size ;	1204:1:32192:32203	3384997	13	True				
ANR	3385307	Identifier	size		3384997	0					
ANR	3385308	ReturnType	int		3384997	1					
ANR	3385309	Identifier	_condorInMsg :: getPtr		3384997	2					
ANR	3385310	ParameterList	"void * & buf , char delim"		3384997	3					
ANR	3385311	Parameter	void * & buf	1132:25:30324:30333	3384997	0	True				
ANR	3385312	ParameterType	void * &		3384997	0					
ANR	3385313	Identifier	buf		3384997	1					
ANR	3385314	Parameter	char delim	1132:37:30336:30345	3384997	1	True				
ANR	3385315	ParameterType	char		3384997	0					
ANR	3385316	Identifier	delim		3384997	1					
ANR	3385317	CFGEntryNode	ENTRY		3384997		True				
ANR	3385318	CFGExitNode	EXIT		3384997		True				
ANR	3385319	Symbol	tempPkt		3384997						
ANR	3385320	Symbol	tempDir -> dEntry [ tempPkt ] . dLen		3384997						
ANR	3385321	Symbol	tempDir -> dEntry		3384997						
ANR	3385322	Symbol	delim_ptr		3384997						
ANR	3385323	Symbol	* tempDir -> dEntry		3384997						
ANR	3385324	Symbol	msgbuf		3384997						
ANR	3385325	Symbol	curPacket		3384997						
ANR	3385326	Symbol	tempDir -> nextDir		3384997						
ANR	3385327	Symbol	curData		3384997						
ANR	3385328	Symbol	* * tempDir		3384997						
ANR	3385329	Symbol	delim		3384997						
ANR	3385330	Symbol	tempBuf		3384997						
ANR	3385331	Symbol	malloc		3384997						
ANR	3385332	Symbol	* tempDir		3384997						
ANR	3385333	Symbol	tempDir -> dEntry [ tempPkt ] . dGram		3384997						
ANR	3385334	Symbol	false		3384997						
ANR	3385335	Symbol	D_ALWAYS		3384997						
ANR	3385336	Symbol	getn		3384997						
ANR	3385337	Symbol	msgbufsize		3384997						
ANR	3385338	Symbol	DebugFlags		3384997						
ANR	3385339	Symbol	D_FULLDEBUG		3384997						
ANR	3385340	Symbol	n		3384997						
ANR	3385341	Symbol	* tempPkt		3384997						
ANR	3385342	Symbol	buf		3384997						
ANR	3385343	Symbol	size		3384997						
ANR	3385344	Symbol	copy_needed		3384997						
ANR	3385345	Symbol	SAFE_MSG_NO_OF_DIR_ENTRY		3384997						
ANR	3385346	Symbol	tempData		3384997						
ANR	3385347	Symbol	tempBufLen		3384997						
ANR	3385348	Symbol	curDir		3384997						
ANR	3385349	Symbol	true		3384997						
ANR	3385350	Symbol	tempDir		3384997						
ANR	3385351	Symbol	D_NETWORK		3384997						
ANR	3385352	Symbol	memchr		3384997						
ANR	3385353	Function	_condorInMsg :: peek	1208:0:32233:32328							
ANR	3385354	FunctionDef	_condorInMsg :: peek (char & c)		3385353	0					
ANR	3385355	CompoundStatement		1209:0:32265:32328	3385353	0					
ANR	3385356	ExpressionStatement	c = curDir -> dEntry [ curPacket ] . dGram [ curData ]	1210:1:32268:32312	3385353	0	True				
ANR	3385357	AssignmentExpression	c = curDir -> dEntry [ curPacket ] . dGram [ curData ]		3385353	0		=			
ANR	3385358	Identifier	c		3385353	0					
ANR	3385359	ArrayIndexing	curDir -> dEntry [ curPacket ] . dGram [ curData ]		3385353	1					
ANR	3385360	MemberAccess	curDir -> dEntry [ curPacket ] . dGram		3385353	0					
ANR	3385361	ArrayIndexing	curDir -> dEntry [ curPacket ]		3385353	0					
ANR	3385362	PtrMemberAccess	curDir -> dEntry		3385353	0					
ANR	3385363	Identifier	curDir		3385353	0					
ANR	3385364	Identifier	dEntry		3385353	1					
ANR	3385365	Identifier	curPacket		3385353	1					
ANR	3385366	Identifier	dGram		3385353	1					
ANR	3385367	Identifier	curData		3385353	1					
ANR	3385368	ReturnStatement	return TRUE ;	1211:1:32315:32326	3385353	1	True				
ANR	3385369	Identifier	TRUE		3385353	0					
ANR	3385370	ReturnType	int		3385353	1					
ANR	3385371	Identifier	_condorInMsg :: peek		3385353	2					
ANR	3385372	ParameterList	char & c		3385353	3					
ANR	3385373	Parameter	char & c	1208:23:32256:32262	3385353	0	True				
ANR	3385374	ParameterType	char &		3385353	0					
ANR	3385375	Identifier	c		3385353	1					
ANR	3385376	CFGEntryNode	ENTRY		3385353		True				
ANR	3385377	CFGExitNode	EXIT		3385353		True				
ANR	3385378	Symbol	* curData		3385353						
ANR	3385379	Symbol	c		3385353						
ANR	3385380	Symbol	TRUE		3385353						
ANR	3385381	Symbol	curDir -> dEntry		3385353						
ANR	3385382	Symbol	* curDir -> dEntry		3385353						
ANR	3385383	Symbol	* * * curDir		3385353						
ANR	3385384	Symbol	* * curPacket		3385353						
ANR	3385385	Symbol	* curDir		3385353						
ANR	3385386	Symbol	* * curDir		3385353						
ANR	3385387	Symbol	* curPacket		3385353						
ANR	3385388	Symbol	* * curDir -> dEntry		3385353						
ANR	3385389	Symbol	curDir		3385353						
ANR	3385390	Symbol	curPacket		3385353						
ANR	3385391	Symbol	curData		3385353						
ANR	3385392	Symbol	curDir -> dEntry [ curPacket ] . dGram		3385353						
ANR	3385393	Symbol	* curDir -> dEntry [ curPacket ] . dGram		3385353						
ANR	3385394	Function	_condorInMsg :: consumed	1215:0:32404:32478							
ANR	3385395	FunctionDef	_condorInMsg :: consumed ()		3385394	0					
ANR	3385396	CompoundStatement		1216:0:32434:32478	3385394	0					
ANR	3385397	ReturnStatement	return ( msgLen != 0 && msgLen == passed ) ;	1217:1:32437:32476	3385394	0	True				
ANR	3385398	AndExpression	msgLen != 0 && msgLen == passed		3385394	0		&&			
ANR	3385399	EqualityExpression	msgLen != 0		3385394	0		!=			
ANR	3385400	Identifier	msgLen		3385394	0					
ANR	3385401	PrimaryExpression	0		3385394	1					
ANR	3385402	EqualityExpression	msgLen == passed		3385394	1		==			
ANR	3385403	Identifier	msgLen		3385394	0					
ANR	3385404	Identifier	passed		3385394	1					
ANR	3385405	ReturnType	bool		3385394	1					
ANR	3385406	Identifier	_condorInMsg :: consumed		3385394	2					
ANR	3385407	ParameterList			3385394	3					
ANR	3385408	CFGEntryNode	ENTRY		3385394		True				
ANR	3385409	CFGExitNode	EXIT		3385394		True				
ANR	3385410	Symbol	msgLen		3385394						
ANR	3385411	Symbol	passed		3385394						
ANR	3385412	Function	_condorInMsg :: set_sec	1220:0:32481:33077							
ANR	3385413	FunctionDef	"_condorInMsg :: set_sec (const char * MD5Keyid , const unsigned char * md , const char * EncKeyId)"		3385412	0					
ANR	3385414	CompoundStatement		1224:0:32642:33077	3385412	0					
ANR	3385415	IfStatement	if ( md )		3385412	0					
ANR	3385416	Condition	md	1225:7:32651:32652	3385412	0	True				
ANR	3385417	Identifier	md		3385412	0					
ANR	3385418	CompoundStatement		2:11:12:12	3385412	1					
ANR	3385419	ExpressionStatement	md_ = ( unsigned char * ) malloc ( MAC_SIZE )	1226:8:32665:32705	3385412	0	True				
ANR	3385420	AssignmentExpression	md_ = ( unsigned char * ) malloc ( MAC_SIZE )		3385412	0		=			
ANR	3385421	Identifier	md_		3385412	0					
ANR	3385422	CastExpression	( unsigned char * ) malloc ( MAC_SIZE )		3385412	1					
ANR	3385423	CastTarget	unsigned char *		3385412	0					
ANR	3385424	CallExpression	malloc ( MAC_SIZE )		3385412	1					
ANR	3385425	Callee	malloc		3385412	0					
ANR	3385426	Identifier	malloc		3385412	0					
ANR	3385427	ArgumentList	MAC_SIZE		3385412	1					
ANR	3385428	Argument	MAC_SIZE		3385412	0					
ANR	3385429	Identifier	MAC_SIZE		3385412	0					
ANR	3385430	ExpressionStatement	"memcpy ( md_ , md , MAC_SIZE )"	1227:8:32715:32740	3385412	1	True				
ANR	3385431	CallExpression	"memcpy ( md_ , md , MAC_SIZE )"		3385412	0					
ANR	3385432	Callee	memcpy		3385412	0					
ANR	3385433	Identifier	memcpy		3385412	0					
ANR	3385434	ArgumentList	md_		3385412	1					
ANR	3385435	Argument	md_		3385412	0					
ANR	3385436	Identifier	md_		3385412	0					
ANR	3385437	Argument	md		3385412	1					
ANR	3385438	Identifier	md		3385412	0					
ANR	3385439	Argument	MAC_SIZE		3385412	2					
ANR	3385440	Identifier	MAC_SIZE		3385412	0					
ANR	3385441	ExpressionStatement	verified_ = false	1228:8:32750:32767	3385412	2	True				
ANR	3385442	AssignmentExpression	verified_ = false		3385412	0		=			
ANR	3385443	Identifier	verified_		3385412	0					
ANR	3385444	Identifier	false		3385412	1					
ANR	3385445	ElseStatement	else		3385412	0					
ANR	3385446	CompoundStatement		7:9:141:141	3385412	0					
ANR	3385447	ExpressionStatement	md_ = 0	1231:8:32794:32801	3385412	0	True				
ANR	3385448	AssignmentExpression	md_ = 0		3385412	0		=			
ANR	3385449	Identifier	md_		3385412	0					
ANR	3385450	PrimaryExpression	0		3385412	1					
ANR	3385451	ExpressionStatement	verified_ = true	1232:8:32811:32827	3385412	1	True				
ANR	3385452	AssignmentExpression	verified_ = true		3385412	0		=			
ANR	3385453	Identifier	verified_		3385412	0					
ANR	3385454	Identifier	true		3385412	1					
ANR	3385455	IfStatement	if ( MD5Keyid )		3385412	1					
ANR	3385456	Condition	MD5Keyid	1235:8:32844:32851	3385412	0	True				
ANR	3385457	Identifier	MD5Keyid		3385412	0					
ANR	3385458	CompoundStatement		12:18:211:211	3385412	1					
ANR	3385459	ExpressionStatement	incomingMD5KeyId_ = strdup ( MD5Keyid )	1236:8:32864:32900	3385412	0	True				
ANR	3385460	AssignmentExpression	incomingMD5KeyId_ = strdup ( MD5Keyid )		3385412	0		=			
ANR	3385461	Identifier	incomingMD5KeyId_		3385412	0					
ANR	3385462	CallExpression	strdup ( MD5Keyid )		3385412	1					
ANR	3385463	Callee	strdup		3385412	0					
ANR	3385464	Identifier	strdup		3385412	0					
ANR	3385465	ArgumentList	MD5Keyid		3385412	1					
ANR	3385466	Argument	MD5Keyid		3385412	0					
ANR	3385467	Identifier	MD5Keyid		3385412	0					
ANR	3385468	ElseStatement	else		3385412	0					
ANR	3385469	CompoundStatement		15:9:274:274	3385412	0					
ANR	3385470	ExpressionStatement	incomingMD5KeyId_ = 0	1239:8:32927:32948	3385412	0	True				
ANR	3385471	AssignmentExpression	incomingMD5KeyId_ = 0		3385412	0		=			
ANR	3385472	Identifier	incomingMD5KeyId_		3385412	0					
ANR	3385473	PrimaryExpression	0		3385412	1					
ANR	3385474	IfStatement	if ( EncKeyId )		3385412	2					
ANR	3385475	Condition	EncKeyId	1242:8:32965:32972	3385412	0	True				
ANR	3385476	Identifier	EncKeyId		3385412	0					
ANR	3385477	CompoundStatement		19:18:332:332	3385412	1					
ANR	3385478	ExpressionStatement	incomingEncKeyId_ = strdup ( EncKeyId )	1243:8:32985:33021	3385412	0	True				
ANR	3385479	AssignmentExpression	incomingEncKeyId_ = strdup ( EncKeyId )		3385412	0		=			
ANR	3385480	Identifier	incomingEncKeyId_		3385412	0					
ANR	3385481	CallExpression	strdup ( EncKeyId )		3385412	1					
ANR	3385482	Callee	strdup		3385412	0					
ANR	3385483	Identifier	strdup		3385412	0					
ANR	3385484	ArgumentList	EncKeyId		3385412	1					
ANR	3385485	Argument	EncKeyId		3385412	0					
ANR	3385486	Identifier	EncKeyId		3385412	0					
ANR	3385487	ElseStatement	else		3385412	0					
ANR	3385488	CompoundStatement		22:9:395:395	3385412	0					
ANR	3385489	ExpressionStatement	incomingEncKeyId_ = 0	1246:8:33048:33069	3385412	0	True				
ANR	3385490	AssignmentExpression	incomingEncKeyId_ = 0		3385412	0		=			
ANR	3385491	Identifier	incomingEncKeyId_		3385412	0					
ANR	3385492	PrimaryExpression	0		3385412	1					
ANR	3385493	ReturnType	void		3385412	1					
ANR	3385494	Identifier	_condorInMsg :: set_sec		3385412	2					
ANR	3385495	ParameterList	"const char * MD5Keyid , const unsigned char * md , const char * EncKeyId"		3385412	3					
ANR	3385496	Parameter	const char * MD5Keyid	1221:22:32508:32528	3385412	0	True				
ANR	3385497	ParameterType	const char *		3385412	0					
ANR	3385498	Identifier	MD5Keyid		3385412	1					
ANR	3385499	Parameter	const unsigned char * md	1222:16:32562:32585	3385412	1	True				
ANR	3385500	ParameterType	const unsigned char *		3385412	0					
ANR	3385501	Identifier	md		3385412	1					
ANR	3385502	Parameter	const char * EncKeyId	1223:16:32619:32639	3385412	2	True				
ANR	3385503	ParameterType	const char *		3385412	0					
ANR	3385504	Identifier	EncKeyId		3385412	1					
ANR	3385505	CFGEntryNode	ENTRY		3385412		True				
ANR	3385506	CFGExitNode	EXIT		3385412		True				
ANR	3385507	Symbol	malloc		3385412						
ANR	3385508	Symbol	MAC_SIZE		3385412						
ANR	3385509	Symbol	verified_		3385412						
ANR	3385510	Symbol	incomingMD5KeyId_		3385412						
ANR	3385511	Symbol	md		3385412						
ANR	3385512	Symbol	false		3385412						
ANR	3385513	Symbol	true		3385412						
ANR	3385514	Symbol	md_		3385412						
ANR	3385515	Symbol	strdup		3385412						
ANR	3385516	Symbol	incomingEncKeyId_		3385412						
ANR	3385517	Symbol	EncKeyId		3385412						
ANR	3385518	Symbol	MD5Keyid		3385412						
ANR	3385519	Function	_condorInMsg :: isDataMD5ed	1250:0:33080:33155							
ANR	3385520	FunctionDef	_condorInMsg :: isDataMD5ed ()		3385519	0					
ANR	3385521	CompoundStatement		1251:0:33123:33155	3385519	0					
ANR	3385522	ReturnStatement	return incomingMD5KeyId_ ;	1252:4:33129:33153	3385519	0	True				
ANR	3385523	Identifier	incomingMD5KeyId_		3385519	0					
ANR	3385524	ReturnType	const char *		3385519	1					
ANR	3385525	Identifier	_condorInMsg :: isDataMD5ed		3385519	2					
ANR	3385526	ParameterList			3385519	3					
ANR	3385527	CFGEntryNode	ENTRY		3385519		True				
ANR	3385528	CFGExitNode	EXIT		3385519		True				
ANR	3385529	Symbol	incomingMD5KeyId_		3385519						
ANR	3385530	Function	_condorInMsg :: isDataEncrypted	1255:0:33158:33237							
ANR	3385531	FunctionDef	_condorInMsg :: isDataEncrypted ()		3385530	0					
ANR	3385532	CompoundStatement		1256:0:33205:33237	3385530	0					
ANR	3385533	ReturnStatement	return incomingEncKeyId_ ;	1257:4:33211:33235	3385530	0	True				
ANR	3385534	Identifier	incomingEncKeyId_		3385530	0					
ANR	3385535	ReturnType	const char *		3385530	1					
ANR	3385536	Identifier	_condorInMsg :: isDataEncrypted		3385530	2					
ANR	3385537	ParameterList			3385530	3					
ANR	3385538	CFGEntryNode	ENTRY		3385530		True				
ANR	3385539	CFGExitNode	EXIT		3385530		True				
ANR	3385540	Symbol	incomingEncKeyId_		3385530						
ANR	3385541	Function	_condorInMsg :: resetEnc	1260:0:33240:33373							
ANR	3385542	FunctionDef	_condorInMsg :: resetEnc ()		3385541	0					
ANR	3385543	CompoundStatement		1261:0:33272:33373	3385541	0					
ANR	3385544	IfStatement	if ( incomingEncKeyId_ )		3385541	0					
ANR	3385545	Condition	incomingEncKeyId_	1262:8:33282:33298	3385541	0	True				
ANR	3385546	Identifier	incomingEncKeyId_		3385541	0					
ANR	3385547	CompoundStatement		2:27:28:28	3385541	1					
ANR	3385548	ExpressionStatement	free ( incomingEncKeyId_ )	1263:8:33311:33334	3385541	0	True				
ANR	3385549	CallExpression	free ( incomingEncKeyId_ )		3385541	0					
ANR	3385550	Callee	free		3385541	0					
ANR	3385551	Identifier	free		3385541	0					
ANR	3385552	ArgumentList	incomingEncKeyId_		3385541	1					
ANR	3385553	Argument	incomingEncKeyId_		3385541	0					
ANR	3385554	Identifier	incomingEncKeyId_		3385541	0					
ANR	3385555	ExpressionStatement	incomingEncKeyId_ = 0	1264:8:33344:33365	3385541	1	True				
ANR	3385556	AssignmentExpression	incomingEncKeyId_ = 0		3385541	0		=			
ANR	3385557	Identifier	incomingEncKeyId_		3385541	0					
ANR	3385558	PrimaryExpression	0		3385541	1					
ANR	3385559	ReturnType	void		3385541	1					
ANR	3385560	Identifier	_condorInMsg :: resetEnc		3385541	2					
ANR	3385561	ParameterList			3385541	3					
ANR	3385562	CFGEntryNode	ENTRY		3385541		True				
ANR	3385563	CFGExitNode	EXIT		3385541		True				
ANR	3385564	Symbol	incomingEncKeyId_		3385541						
ANR	3385565	Function	_condorInMsg :: resetMD	1268:0:33376:33508							
ANR	3385566	FunctionDef	_condorInMsg :: resetMD ()		3385565	0					
ANR	3385567	CompoundStatement		1269:0:33407:33508	3385565	0					
ANR	3385568	IfStatement	if ( incomingMD5KeyId_ )		3385565	0					
ANR	3385569	Condition	incomingMD5KeyId_	1270:8:33417:33433	3385565	0	True				
ANR	3385570	Identifier	incomingMD5KeyId_		3385565	0					
ANR	3385571	CompoundStatement		2:27:28:28	3385565	1					
ANR	3385572	ExpressionStatement	free ( incomingMD5KeyId_ )	1271:8:33446:33469	3385565	0	True				
ANR	3385573	CallExpression	free ( incomingMD5KeyId_ )		3385565	0					
ANR	3385574	Callee	free		3385565	0					
ANR	3385575	Identifier	free		3385565	0					
ANR	3385576	ArgumentList	incomingMD5KeyId_		3385565	1					
ANR	3385577	Argument	incomingMD5KeyId_		3385565	0					
ANR	3385578	Identifier	incomingMD5KeyId_		3385565	0					
ANR	3385579	ExpressionStatement	incomingMD5KeyId_ = 0	1272:8:33479:33500	3385565	1	True				
ANR	3385580	AssignmentExpression	incomingMD5KeyId_ = 0		3385565	0		=			
ANR	3385581	Identifier	incomingMD5KeyId_		3385565	0					
ANR	3385582	PrimaryExpression	0		3385565	1					
ANR	3385583	ReturnType	void		3385565	1					
ANR	3385584	Identifier	_condorInMsg :: resetMD		3385565	2					
ANR	3385585	ParameterList			3385565	3					
ANR	3385586	CFGEntryNode	ENTRY		3385565		True				
ANR	3385587	CFGExitNode	EXIT		3385565		True				
ANR	3385588	Symbol	incomingMD5KeyId_		3385565						
ANR	3385589	Function	_condorInMsg :: dumpMsg	1276:0:33511:34890							
ANR	3385590	FunctionDef	_condorInMsg :: dumpMsg ()		3385589	0					
ANR	3385591	CompoundStatement		1277:0:33540:34890	3385589	0					
ANR	3385592	IdentifierDeclStatement	char str [ 10000 ] ;	1278:4:33546:33561	3385589	0	True				
ANR	3385593	IdentifierDecl	str [ 10000 ]		3385589	0					
ANR	3385594	IdentifierDeclType	char [ 10000 ]		3385589	0					
ANR	3385595	Identifier	str		3385589	1					
ANR	3385596	PrimaryExpression	10000		3385589	2					
ANR	3385597	IdentifierDeclStatement	struct in_addr in ;	1279:4:33567:33584	3385589	1	True				
ANR	3385598	IdentifierDecl	in		3385589	0					
ANR	3385599	IdentifierDeclType	struct in_addr		3385589	0					
ANR	3385600	Identifier	in		3385589	1					
ANR	3385601	ExpressionStatement	in . s_addr = msgID . ip_addr	1281:4:33591:33616	3385589	2	True				
ANR	3385602	AssignmentExpression	in . s_addr = msgID . ip_addr		3385589	0		=			
ANR	3385603	MemberAccess	in . s_addr		3385589	0					
ANR	3385604	Identifier	in		3385589	0					
ANR	3385605	Identifier	s_addr		3385589	1					
ANR	3385606	MemberAccess	msgID . ip_addr		3385589	1					
ANR	3385607	Identifier	msgID		3385589	0					
ANR	3385608	Identifier	ip_addr		3385589	1					
ANR	3385609	ExpressionStatement	"sprintf ( str , ""ID: %s, %d, %lu, %d\\n"" , inet_ntoa ( in ) , msgID . pid , msgID . time , msgID . msgNo )"	1282:4:33622:33722	3385589	3	True				
ANR	3385610	CallExpression	"sprintf ( str , ""ID: %s, %d, %lu, %d\\n"" , inet_ntoa ( in ) , msgID . pid , msgID . time , msgID . msgNo )"		3385589	0					
ANR	3385611	Callee	sprintf		3385589	0					
ANR	3385612	Identifier	sprintf		3385589	0					
ANR	3385613	ArgumentList	str		3385589	1					
ANR	3385614	Argument	str		3385589	0					
ANR	3385615	Identifier	str		3385589	0					
ANR	3385616	Argument	"""ID: %s, %d, %lu, %d\\n"""		3385589	1					
ANR	3385617	PrimaryExpression	"""ID: %s, %d, %lu, %d\\n"""		3385589	0					
ANR	3385618	Argument	inet_ntoa ( in )		3385589	2					
ANR	3385619	CallExpression	inet_ntoa ( in )		3385589	0					
ANR	3385620	Callee	inet_ntoa		3385589	0					
ANR	3385621	Identifier	inet_ntoa		3385589	0					
ANR	3385622	ArgumentList	in		3385589	1					
ANR	3385623	Argument	in		3385589	0					
ANR	3385624	Identifier	in		3385589	0					
ANR	3385625	Argument	msgID . pid		3385589	3					
ANR	3385626	MemberAccess	msgID . pid		3385589	0					
ANR	3385627	Identifier	msgID		3385589	0					
ANR	3385628	Identifier	pid		3385589	1					
ANR	3385629	Argument	msgID . time		3385589	4					
ANR	3385630	MemberAccess	msgID . time		3385589	0					
ANR	3385631	Identifier	msgID		3385589	0					
ANR	3385632	Identifier	time		3385589	1					
ANR	3385633	Argument	msgID . msgNo		3385589	5					
ANR	3385634	MemberAccess	msgID . msgNo		3385589	0					
ANR	3385635	Identifier	msgID		3385589	0					
ANR	3385636	Identifier	msgNo		3385589	1					
ANR	3385637	ExpressionStatement	"sprintf ( & str [ strlen ( str ) ] , ""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"" , msgLen , lastNo , received , lastTime )"	1284:4:33728:33850	3385589	4	True				
ANR	3385638	CallExpression	"sprintf ( & str [ strlen ( str ) ] , ""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"" , msgLen , lastNo , received , lastTime )"		3385589	0					
ANR	3385639	Callee	sprintf		3385589	0					
ANR	3385640	Identifier	sprintf		3385589	0					
ANR	3385641	ArgumentList	& str [ strlen ( str ) ]		3385589	1					
ANR	3385642	Argument	& str [ strlen ( str ) ]		3385589	0					
ANR	3385643	UnaryOperationExpression	& str [ strlen ( str ) ]		3385589	0					
ANR	3385644	UnaryOperator	&		3385589	0					
ANR	3385645	ArrayIndexing	str [ strlen ( str ) ]		3385589	1					
ANR	3385646	Identifier	str		3385589	0					
ANR	3385647	CallExpression	strlen ( str )		3385589	1					
ANR	3385648	Callee	strlen		3385589	0					
ANR	3385649	Identifier	strlen		3385589	0					
ANR	3385650	ArgumentList	str		3385589	1					
ANR	3385651	Argument	str		3385589	0					
ANR	3385652	Identifier	str		3385589	0					
ANR	3385653	Argument	"""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"""		3385589	1					
ANR	3385654	PrimaryExpression	"""len:%lu, lastNo:%d, rcved:%d, lastTime:%lu\\n"""		3385589	0					
ANR	3385655	Argument	msgLen		3385589	2					
ANR	3385656	Identifier	msgLen		3385589	0					
ANR	3385657	Argument	lastNo		3385589	3					
ANR	3385658	Identifier	lastNo		3385589	0					
ANR	3385659	Argument	received		3385589	4					
ANR	3385660	Identifier	received		3385589	0					
ANR	3385661	Argument	lastTime		3385589	5					
ANR	3385662	Identifier	lastTime		3385589	0					
ANR	3385663	ExpressionStatement	"dprintf ( D_NETWORK , ""========================\\n%s\\n===================\\n"" , str )"	1286:4:33856:33934	3385589	5	True				
ANR	3385664	CallExpression	"dprintf ( D_NETWORK , ""========================\\n%s\\n===================\\n"" , str )"		3385589	0					
ANR	3385665	Callee	dprintf		3385589	0					
ANR	3385666	Identifier	dprintf		3385589	0					
ANR	3385667	ArgumentList	D_NETWORK		3385589	1					
ANR	3385668	Argument	D_NETWORK		3385589	0					
ANR	3385669	Identifier	D_NETWORK		3385589	0					
ANR	3385670	Argument	"""========================\\n%s\\n===================\\n"""		3385589	1					
ANR	3385671	PrimaryExpression	"""========================\\n%s\\n===================\\n"""		3385589	0					
ANR	3385672	Argument	str		3385589	2					
ANR	3385673	Identifier	str		3385589	0					
ANR	3385674	ReturnType	void		3385589	1					
ANR	3385675	Identifier	_condorInMsg :: dumpMsg		3385589	2					
ANR	3385676	ParameterList			3385589	3					
ANR	3385677	CFGEntryNode	ENTRY		3385589		True				
ANR	3385678	CFGExitNode	EXIT		3385589		True				
ANR	3385679	Symbol	lastTime		3385589						
ANR	3385680	Symbol	msgID . msgNo		3385589						
ANR	3385681	Symbol	msgID . pid		3385589						
ANR	3385682	Symbol	in		3385589						
ANR	3385683	Symbol	in . s_addr		3385589						
ANR	3385684	Symbol	msgID		3385589						
ANR	3385685	Symbol	received		3385589						
ANR	3385686	Symbol	inet_ntoa		3385589						
ANR	3385687	Symbol	lastNo		3385589						
ANR	3385688	Symbol	str		3385589						
ANR	3385689	Symbol	msgLen		3385589						
ANR	3385690	Symbol	msgID . ip_addr		3385589						
ANR	3385691	Symbol	strlen		3385589						
ANR	3385692	Symbol	D_NETWORK		3385589						
ANR	3385693	Symbol	msgID . time		3385589						
