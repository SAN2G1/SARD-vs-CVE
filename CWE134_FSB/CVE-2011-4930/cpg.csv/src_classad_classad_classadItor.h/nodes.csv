command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2512404	File	data/converged/CVE-2011-4930_htcondor/src_classad_classad_classadItor.h								
ANR	2512405	ClassDef	ClassAdIterator	33:0:1393:3974							
ANR	2512406	Function	ClassAdIterator	37:8:1461:1492							
ANR	2512407	FunctionDef	ClassAdIterator ()		2512406	0					
ANR	2512408	CompoundStatement		37:26:1479:1492	2512406	0					
ANR	2512409	ExpressionStatement	ad = NULL	37:1:1481:1490	2512406	0	True				
ANR	2512410	AssignmentExpression	ad = NULL		2512406	0		=			
ANR	2512411	Identifier	ad		2512406	0					
ANR	2512412	Identifier	NULL		2512406	1					
ANR	2512413	Identifier	ClassAdIterator		2512406	1					
ANR	2512414	ParameterList			2512406	2					
ANR	2512415	CFGEntryNode	ENTRY		2512406		True				
ANR	2512416	CFGExitNode	EXIT		2512406		True				
ANR	2512417	Symbol	NULL		2512406						
ANR	2512418	Symbol	ad		2512406						
ANR	2512419	Function	ClassAdIterator	43:8:1670:1727							
ANR	2512420	FunctionDef	ClassAdIterator (const ClassAd & ca)		2512419	1					
ANR	2512421	CompoundStatement		43:43:1705:1727	2512419	0					
ANR	2512422	ExpressionStatement	ad = & ca	43:1:1707:1713	2512419	0	True				
ANR	2512423	AssignmentExpression	ad = & ca		2512419	0		=			
ANR	2512424	Identifier	ad		2512419	0					
ANR	2512425	UnaryOperationExpression	& ca		2512419	1					
ANR	2512426	UnaryOperator	&		2512419	0					
ANR	2512427	Identifier	ca		2512419	1					
ANR	2512428	ExpressionStatement	ToFirst ( )	43:9:1715:1725	2512419	1	True				
ANR	2512429	CallExpression	ToFirst ( )		2512419	0					
ANR	2512430	Callee	ToFirst		2512419	0					
ANR	2512431	Identifier	ToFirst		2512419	0					
ANR	2512432	ArgumentList			2512419	1					
ANR	2512433	Identifier	ClassAdIterator		2512419	1					
ANR	2512434	ParameterList	const ClassAd & ca		2512419	2					
ANR	2512435	Parameter	const ClassAd & ca	43:24:1686:1702	2512419	0	True				
ANR	2512436	ParameterType	const ClassAd &		2512419	0					
ANR	2512437	Identifier	ca		2512419	1					
ANR	2512438	CFGEntryNode	ENTRY		2512419		True				
ANR	2512439	CFGExitNode	EXIT		2512419		True				
ANR	2512440	Symbol	ad		2512419						
ANR	2512441	Symbol	& ca		2512419						
ANR	2512442	Symbol	ca		2512419						
ANR	2512443	Function	~ClassAdIterator	46:8:1761:1781							
ANR	2512444	FunctionDef	~ClassAdIterator ()		2512443	2					
ANR	2512445	CompoundStatement		46:26:1779:1781	2512443	0					
ANR	2512446	Identifier	~ClassAdIterator		2512443	1					
ANR	2512447	ParameterList			2512443	2					
ANR	2512448	CFGEntryNode	ENTRY		2512443		True				
ANR	2512449	CFGExitNode	EXIT		2512443		True				
ANR	2512450	Function	Initialize	56:8:2294:2357							
ANR	2512451	FunctionDef	Initialize (const ClassAd & ca)		2512450	3					
ANR	2512452	CompoundStatement		56:49:2335:2357	2512450	0					
ANR	2512453	ExpressionStatement	ad = & ca	56:1:2337:2343	2512450	0	True				
ANR	2512454	AssignmentExpression	ad = & ca		2512450	0		=			
ANR	2512455	Identifier	ad		2512450	0					
ANR	2512456	UnaryOperationExpression	& ca		2512450	1					
ANR	2512457	UnaryOperator	&		2512450	0					
ANR	2512458	Identifier	ca		2512450	1					
ANR	2512459	ExpressionStatement	ToFirst ( )	56:9:2345:2355	2512450	1	True				
ANR	2512460	CallExpression	ToFirst ( )		2512450	0					
ANR	2512461	Callee	ToFirst		2512450	0					
ANR	2512462	Identifier	ToFirst		2512450	0					
ANR	2512463	ArgumentList			2512450	1					
ANR	2512464	ReturnType	inline void		2512450	1					
ANR	2512465	Identifier	Initialize		2512450	2					
ANR	2512466	ParameterList	const ClassAd & ca		2512450	3					
ANR	2512467	Parameter	const ClassAd & ca	56:31:2317:2333	2512450	0	True				
ANR	2512468	ParameterType	const ClassAd &		2512450	0					
ANR	2512469	Identifier	ca		2512450	1					
ANR	2512470	CFGEntryNode	ENTRY		2512450		True				
ANR	2512471	CFGExitNode	EXIT		2512450		True				
ANR	2512472	Symbol	ad		2512450						
ANR	2512473	Symbol	& ca		2512450						
ANR	2512474	Symbol	ca		2512450						
ANR	2512475	Function	ToFirst	59:8:2435:2496							
ANR	2512476	FunctionDef	ToFirst ()		2512475	4					
ANR	2512477	CompoundStatement		59:31:2458:2496	2512475	0					
ANR	2512478	IfStatement	if ( ad )		2512475	0					
ANR	2512479	Condition	ad	59:4:2463:2464	2512475	0	True				
ANR	2512480	Identifier	ad		2512475	0					
ANR	2512481	ExpressionStatement	itr = ad -> attrList . begin ( )	59:8:2467:2494	2512475	1	True				
ANR	2512482	AssignmentExpression	itr = ad -> attrList . begin ( )		2512475	0		=			
ANR	2512483	Identifier	itr		2512475	0					
ANR	2512484	CallExpression	ad -> attrList . begin ( )		2512475	1					
ANR	2512485	Callee	ad -> attrList . begin		2512475	0					
ANR	2512486	MemberAccess	ad -> attrList . begin		2512475	0					
ANR	2512487	PtrMemberAccess	ad -> attrList		2512475	0					
ANR	2512488	Identifier	ad		2512475	0					
ANR	2512489	Identifier	attrList		2512475	1					
ANR	2512490	Identifier	begin		2512475	1					
ANR	2512491	ArgumentList			2512475	1					
ANR	2512492	ReturnType	inline void		2512475	1					
ANR	2512493	Identifier	ToFirst		2512475	2					
ANR	2512494	ParameterList			2512475	3					
ANR	2512495	CFGEntryNode	ENTRY		2512475		True				
ANR	2512496	CFGExitNode	EXIT		2512475		True				
ANR	2512497	Symbol	ad		2512475						
ANR	2512498	Symbol	itr		2512475						
ANR	2512499	Symbol	ad -> attrList		2512475						
ANR	2512500	Symbol	ad -> attrList . begin		2512475						
ANR	2512501	Symbol	* ad		2512475						
ANR	2512502	Function	ToAfterLast	62:8:2571:2635							
ANR	2512503	FunctionDef	ToAfterLast ()		2512502	5					
ANR	2512504	CompoundStatement		62:36:2599:2635	2512502	0					
ANR	2512505	IfStatement	if ( ad )		2512502	0					
ANR	2512506	Condition	ad	62:4:2604:2605	2512502	0	True				
ANR	2512507	Identifier	ad		2512502	0					
ANR	2512508	ExpressionStatement	itr = ad -> attrList . end ( )	62:8:2608:2633	2512502	1	True				
ANR	2512509	AssignmentExpression	itr = ad -> attrList . end ( )		2512502	0		=			
ANR	2512510	Identifier	itr		2512502	0					
ANR	2512511	CallExpression	ad -> attrList . end ( )		2512502	1					
ANR	2512512	Callee	ad -> attrList . end		2512502	0					
ANR	2512513	MemberAccess	ad -> attrList . end		2512502	0					
ANR	2512514	PtrMemberAccess	ad -> attrList		2512502	0					
ANR	2512515	Identifier	ad		2512502	0					
ANR	2512516	Identifier	attrList		2512502	1					
ANR	2512517	Identifier	end		2512502	1					
ANR	2512518	ArgumentList			2512502	1					
ANR	2512519	ReturnType	inline void		2512502	1					
ANR	2512520	Identifier	ToAfterLast		2512502	2					
ANR	2512521	ParameterList			2512502	3					
ANR	2512522	CFGEntryNode	ENTRY		2512502		True				
ANR	2512523	CFGExitNode	EXIT		2512502		True				
ANR	2512524	Symbol	ad		2512502						
ANR	2512525	Symbol	itr		2512502						
ANR	2512526	Symbol	ad -> attrList		2512502						
ANR	2512527	Symbol	* ad		2512502						
ANR	2512528	Symbol	ad -> attrList . end		2512502						
ANR	2512529	DeclStmt									
ANR	2512530	Decl							bool	"bool ( std :: string & attr , const ExprTree * & expr )"	NextAttribute
ANR	2512531	Function	IsAtFirst	82:8:3575:3658							
ANR	2512532	FunctionDef	IsAtFirst ()		2512531	7					
ANR	2512533	CompoundStatement		82:38:3605:3658	2512531	0					
ANR	2512534	ReturnStatement	return ( ad ? ( itr == ad -> attrList . begin ( ) ) : false ) ;	83:3:3610:3654	2512531	0	True				
ANR	2512535	ConditionalExpression	ad ? ( itr == ad -> attrList . begin ( ) ) : false		2512531	0					
ANR	2512536	Condition	ad		2512531	0					
ANR	2512537	Identifier	ad		2512531	0					
ANR	2512538	EqualityExpression	itr == ad -> attrList . begin ( )		2512531	1		==			
ANR	2512539	Identifier	itr		2512531	0					
ANR	2512540	CallExpression	ad -> attrList . begin ( )		2512531	1					
ANR	2512541	Callee	ad -> attrList . begin		2512531	0					
ANR	2512542	MemberAccess	ad -> attrList . begin		2512531	0					
ANR	2512543	PtrMemberAccess	ad -> attrList		2512531	0					
ANR	2512544	Identifier	ad		2512531	0					
ANR	2512545	Identifier	attrList		2512531	1					
ANR	2512546	Identifier	begin		2512531	1					
ANR	2512547	ArgumentList			2512531	1					
ANR	2512548	Identifier	false		2512531	2					
ANR	2512549	ReturnType	inline bool		2512531	1					
ANR	2512550	Identifier	IsAtFirst		2512531	2					
ANR	2512551	ParameterList			2512531	3					
ANR	2512552	CFGEntryNode	ENTRY		2512531		True				
ANR	2512553	CFGExitNode	EXIT		2512531		True				
ANR	2512554	Symbol	ad		2512531						
ANR	2512555	Symbol	itr		2512531						
ANR	2512556	Symbol	false		2512531						
ANR	2512557	Symbol	ad -> attrList		2512531						
ANR	2512558	Symbol	ad -> attrList . begin		2512531						
ANR	2512559	Symbol	* ad		2512531						
ANR	2512560	Function	IsAfterLast	89:8:3810:3894							
ANR	2512561	FunctionDef	IsAfterLast ()		2512560	8					
ANR	2512562	CompoundStatement		89:40:3842:3894	2512560	0					
ANR	2512563	ReturnStatement	return ( ad ? ( itr == ad -> attrList . end ( ) ) : false ) ;	90:3:3847:3889	2512560	0	True				
ANR	2512564	ConditionalExpression	ad ? ( itr == ad -> attrList . end ( ) ) : false		2512560	0					
ANR	2512565	Condition	ad		2512560	0					
ANR	2512566	Identifier	ad		2512560	0					
ANR	2512567	EqualityExpression	itr == ad -> attrList . end ( )		2512560	1		==			
ANR	2512568	Identifier	itr		2512560	0					
ANR	2512569	CallExpression	ad -> attrList . end ( )		2512560	1					
ANR	2512570	Callee	ad -> attrList . end		2512560	0					
ANR	2512571	MemberAccess	ad -> attrList . end		2512560	0					
ANR	2512572	PtrMemberAccess	ad -> attrList		2512560	0					
ANR	2512573	Identifier	ad		2512560	0					
ANR	2512574	Identifier	attrList		2512560	1					
ANR	2512575	Identifier	end		2512560	1					
ANR	2512576	ArgumentList			2512560	1					
ANR	2512577	Identifier	false		2512560	2					
ANR	2512578	ReturnType	inline bool		2512560	1					
ANR	2512579	Identifier	IsAfterLast		2512560	2					
ANR	2512580	ParameterList			2512560	3					
ANR	2512581	CFGEntryNode	ENTRY		2512560		True				
ANR	2512582	CFGExitNode	EXIT		2512560		True				
ANR	2512583	Symbol	ad		2512560						
ANR	2512584	Symbol	itr		2512560						
ANR	2512585	Symbol	false		2512560						
ANR	2512586	Symbol	ad -> attrList		2512560						
ANR	2512587	Symbol	* ad		2512560						
ANR	2512588	Symbol	ad -> attrList . end		2512560						
ANR	2512589	DeclStmt									
ANR	2512590	Decl							AttrList :: const_iterator	AttrList :: const_iterator	itr
ANR	2512591	DeclStmt									
ANR	2512592	Decl							const ClassAd	const ClassAd *	ad
