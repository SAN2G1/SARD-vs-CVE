command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	129701	File	data/converged/CVE-2011-4930_htcondor/AviaryQuery_GetJobStatusResponse.cpp								
ANR	129702	Function	AviaryQuery :: GetJobStatusResponse :: GetJobStatusResponse	23:11:610:1058							
ANR	129703	FunctionDef	AviaryQuery :: GetJobStatusResponse :: GetJobStatusResponse ()		129702	0					
ANR	129704	CompoundStatement		24:8:676:1058	129702	0					
ANR	129705	ExpressionStatement	qname = NULL	27:12:700:712	129702	0	True				
ANR	129706	AssignmentExpression	qname = NULL		129702	0		=			
ANR	129707	Identifier	qname		129702	0					
ANR	129708	Identifier	NULL		129702	1					
ANR	129709	ExpressionStatement	property_Jobs = NULL	29:16:739:760	129702	1	True				
ANR	129710	AssignmentExpression	property_Jobs = NULL		129702	0		=			
ANR	129711	Identifier	property_Jobs		129702	0					
ANR	129712	Identifier	NULL		129702	1					
ANR	129713	ExpressionStatement	isValidJobs = false	31:12:789:809	129702	2	True				
ANR	129714	AssignmentExpression	isValidJobs = false		129702	0		=			
ANR	129715	Identifier	isValidJobs		129702	0					
ANR	129716	Identifier	false		129702	1					
ANR	129717	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatusResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	33:18:838:1031	129702	3	True				
ANR	129718	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatusResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		129702	0		=			
ANR	129719	Identifier	qname		129702	0					
ANR	129720	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatusResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		129702	1					
ANR	129721	Callee	axutil_qname_create		129702	0					
ANR	129722	Identifier	axutil_qname_create		129702	0					
ANR	129723	ArgumentList	Environment :: getEnv ( )		129702	1					
ANR	129724	Argument	Environment :: getEnv ( )		129702	0					
ANR	129725	CallExpression	Environment :: getEnv ( )		129702	0					
ANR	129726	Callee	Environment :: getEnv		129702	0					
ANR	129727	Identifier	Environment :: getEnv		129702	0					
ANR	129728	ArgumentList			129702	1					
ANR	129729	Argument	"""GetJobStatusResponse"""		129702	1					
ANR	129730	PrimaryExpression	"""GetJobStatusResponse"""		129702	0					
ANR	129731	Argument	"""http://query.aviary.grid.redhat.com"""		129702	2					
ANR	129732	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		129702	0					
ANR	129733	Argument	NULL		129702	3					
ANR	129734	Identifier	NULL		129702	0					
ANR	129735	Identifier	AviaryQuery :: GetJobStatusResponse :: GetJobStatusResponse		129702	1					
ANR	129736	ParameterList			129702	2					
ANR	129737	CFGEntryNode	ENTRY		129702		True				
ANR	129738	CFGExitNode	EXIT		129702		True				
ANR	129739	Symbol	Environment :: getEnv		129702						
ANR	129740	Symbol	NULL		129702						
ANR	129741	Symbol	isValidJobs		129702						
ANR	129742	Symbol	qname		129702						
ANR	129743	Symbol	false		129702						
ANR	129744	Symbol	axutil_qname_create		129702						
ANR	129745	Symbol	property_Jobs		129702						
ANR	129746	Function	AviaryQuery :: GetJobStatusResponse :: GetJobStatusResponse	40:7:1068:1634							
ANR	129747	FunctionDef	AviaryQuery :: GetJobStatusResponse :: GetJobStatusResponse (std :: vector < AviaryCommon :: JobStatus * > * arg_Jobs)		129746	0					
ANR	129748	CompoundStatement		41:8:1181:1634	129746	0					
ANR	129749	ExpressionStatement	qname = NULL	43:19:1216:1228	129746	0	True				
ANR	129750	AssignmentExpression	qname = NULL		129746	0		=			
ANR	129751	Identifier	qname		129746	0					
ANR	129752	Identifier	NULL		129746	1					
ANR	129753	ExpressionStatement	property_Jobs = NULL	45:15:1259:1280	129746	1	True				
ANR	129754	AssignmentExpression	property_Jobs = NULL		129746	0		=			
ANR	129755	Identifier	property_Jobs		129746	0					
ANR	129756	Identifier	NULL		129746	1					
ANR	129757	ExpressionStatement	isValidJobs = true	47:12:1308:1327	129746	2	True				
ANR	129758	AssignmentExpression	isValidJobs = true		129746	0		=			
ANR	129759	Identifier	isValidJobs		129746	0					
ANR	129760	Identifier	true		129746	1					
ANR	129761	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatusResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	49:17:1359:1549	129746	3	True				
ANR	129762	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatusResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		129746	0		=			
ANR	129763	Identifier	qname		129746	0					
ANR	129764	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatusResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		129746	1					
ANR	129765	Callee	axutil_qname_create		129746	0					
ANR	129766	Identifier	axutil_qname_create		129746	0					
ANR	129767	ArgumentList	Environment :: getEnv ( )		129746	1					
ANR	129768	Argument	Environment :: getEnv ( )		129746	0					
ANR	129769	CallExpression	Environment :: getEnv ( )		129746	0					
ANR	129770	Callee	Environment :: getEnv		129746	0					
ANR	129771	Identifier	Environment :: getEnv		129746	0					
ANR	129772	ArgumentList			129746	1					
ANR	129773	Argument	"""GetJobStatusResponse"""		129746	1					
ANR	129774	PrimaryExpression	"""GetJobStatusResponse"""		129746	0					
ANR	129775	Argument	"""http://query.aviary.grid.redhat.com"""		129746	2					
ANR	129776	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		129746	0					
ANR	129777	Argument	NULL		129746	3					
ANR	129778	Identifier	NULL		129746	0					
ANR	129779	ExpressionStatement	property_Jobs = arg_Jobs	54:20:1587:1611	129746	4	True				
ANR	129780	AssignmentExpression	property_Jobs = arg_Jobs		129746	0		=			
ANR	129781	Identifier	property_Jobs		129746	0					
ANR	129782	Identifier	arg_Jobs		129746	1					
ANR	129783	Identifier	AviaryQuery :: GetJobStatusResponse :: GetJobStatusResponse		129746	1					
ANR	129784	ParameterList	std :: vector < AviaryCommon :: JobStatus * > * arg_Jobs		129746	2					
ANR	129785	Parameter	std :: vector < AviaryCommon :: JobStatus * > * arg_Jobs	40:63:1124:1170	129746	0	True				
ANR	129786	ParameterType	std :: vector < AviaryCommon :: JobStatus * > *		129746	0					
ANR	129787	Identifier	arg_Jobs		129746	1					
ANR	129788	CFGEntryNode	ENTRY		129746		True				
ANR	129789	CFGExitNode	EXIT		129746		True				
ANR	129790	Symbol	Environment :: getEnv		129746						
ANR	129791	Symbol	NULL		129746						
ANR	129792	Symbol	isValidJobs		129746						
ANR	129793	Symbol	arg_Jobs		129746						
ANR	129794	Symbol	qname		129746						
ANR	129795	Symbol	true		129746						
ANR	129796	Symbol	axutil_qname_create		129746						
ANR	129797	Symbol	property_Jobs		129746						
ANR	129798	Function	AviaryQuery :: GetJobStatusResponse :: ~GetJobStatusResponse	57:8:1644:1970							
ANR	129799	FunctionDef	AviaryQuery :: GetJobStatusResponse :: ~GetJobStatusResponse ()		129798	0					
ANR	129800	CompoundStatement		58:8:1711:1970	129798	0					
ANR	129801	IfStatement	if ( property_Jobs )		129798	0					
ANR	129802	Condition	property_Jobs	59:16:1729:1741	129798	0	True				
ANR	129803	Identifier	property_Jobs		129798	0					
ANR	129804	CompoundStatement		2:31:32:32	129798	1					
ANR	129805	WhileStatement	while ( ! property_Jobs -> empty ( ) )		129798	0					
ANR	129806	Condition	! property_Jobs -> empty ( )	60:22:1768:1790	129798	0	True				
ANR	129807	UnaryOperationExpression	! property_Jobs -> empty ( )		129798	0					
ANR	129808	UnaryOperator	!		129798	0					
ANR	129809	CallExpression	property_Jobs -> empty ( )		129798	1					
ANR	129810	Callee	property_Jobs -> empty		129798	0					
ANR	129811	PtrMemberAccess	property_Jobs -> empty		129798	0					
ANR	129812	Identifier	property_Jobs		129798	0					
ANR	129813	Identifier	empty		129798	1					
ANR	129814	ArgumentList			129798	1					
ANR	129815	Statement	delete	60:47:1793:1798	129798	1	True				
ANR	129816	ExpressionStatement	"property_Jobs -> back ( ) , property_Jobs -> pop_back ( )"	60:54:1800:1848	129798	1	True				
ANR	129817	Expression	"property_Jobs -> back ( ) , property_Jobs -> pop_back ( )"		129798	0					
ANR	129818	CallExpression	property_Jobs -> back ( )		129798	0					
ANR	129819	Callee	property_Jobs -> back		129798	0					
ANR	129820	PtrMemberAccess	property_Jobs -> back		129798	0					
ANR	129821	Identifier	property_Jobs		129798	0					
ANR	129822	Identifier	back		129798	1					
ANR	129823	ArgumentList			129798	1					
ANR	129824	CallExpression	property_Jobs -> pop_back ( )		129798	1					
ANR	129825	Callee	property_Jobs -> pop_back		129798	0					
ANR	129826	PtrMemberAccess	property_Jobs -> pop_back		129798	0					
ANR	129827	Identifier	property_Jobs		129798	0					
ANR	129828	Identifier	pop_back		129798	1					
ANR	129829	ArgumentList			129798	1					
ANR	129830	Statement	delete	61:16:1866:1871	129798	2	True				
ANR	129831	ExpressionStatement	property_Jobs	61:23:1873:1886	129798	3	True				
ANR	129832	Identifier	property_Jobs		129798	0					
ANR	129833	ExpressionStatement	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"	63:12:1914:1960	129798	1	True				
ANR	129834	CallExpression	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"		129798	0					
ANR	129835	Callee	axutil_qname_free		129798	0					
ANR	129836	Identifier	axutil_qname_free		129798	0					
ANR	129837	ArgumentList	qname		129798	1					
ANR	129838	Argument	qname		129798	0					
ANR	129839	Identifier	qname		129798	0					
ANR	129840	Argument	Environment :: getEnv ( )		129798	1					
ANR	129841	CallExpression	Environment :: getEnv ( )		129798	0					
ANR	129842	Callee	Environment :: getEnv		129798	0					
ANR	129843	Identifier	Environment :: getEnv		129798	0					
ANR	129844	ArgumentList			129798	1					
ANR	129845	Identifier	AviaryQuery :: GetJobStatusResponse :: ~GetJobStatusResponse		129798	1					
ANR	129846	ParameterList			129798	2					
ANR	129847	CFGEntryNode	ENTRY		129798		True				
ANR	129848	CFGExitNode	EXIT		129798		True				
ANR	129849	Symbol	Environment :: getEnv		129798						
ANR	129850	Symbol	qname		129798						
ANR	129851	Symbol	property_Jobs -> empty		129798						
ANR	129852	Symbol	* property_Jobs		129798						
ANR	129853	Symbol	property_Jobs		129798						
ANR	129854	Function	AviaryQuery :: GetJobStatusResponse :: deserialize	68:8:1991:9820							
ANR	129855	FunctionDef	"AviaryQuery :: GetJobStatusResponse :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		129854	0					
ANR	129856	CompoundStatement		70:8:2149:9820	129854	0					
ANR	129857	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	71:10:2161:2194	129854	0	True				
ANR	129858	IdentifierDecl	* parent = * dp_parent		129854	0					
ANR	129859	IdentifierDeclType	axiom_node_t *		129854	0					
ANR	129860	Identifier	parent		129854	1					
ANR	129861	AssignmentExpression	* parent = * dp_parent		129854	2		=			
ANR	129862	Identifier	parent		129854	0					
ANR	129863	UnaryOperationExpression	* dp_parent		129854	1					
ANR	129864	UnaryOperator	*		129854	0					
ANR	129865	Identifier	dp_parent		129854	1					
ANR	129866	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	73:10:2217:2244	129854	1	True				
ANR	129867	IdentifierDecl	status = AXIS2_SUCCESS		129854	0					
ANR	129868	IdentifierDeclType	bool		129854	0					
ANR	129869	Identifier	status		129854	1					
ANR	129870	AssignmentExpression	status = AXIS2_SUCCESS		129854	2		=			
ANR	129871	Identifier	AXIS2_SUCCESS		129854	0					
ANR	129872	Identifier	AXIS2_SUCCESS		129854	1					
ANR	129873	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	75:9:2267:2304	129854	2	True				
ANR	129874	IdentifierDecl	* text_value = NULL		129854	0					
ANR	129875	IdentifierDeclType	const axis2_char_t *		129854	0					
ANR	129876	Identifier	text_value		129854	1					
ANR	129877	AssignmentExpression	* text_value = NULL		129854	2		=			
ANR	129878	Identifier	NULL		129854	0					
ANR	129879	Identifier	NULL		129854	1					
ANR	129880	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	76:9:2315:2344	129854	3	True				
ANR	129881	IdentifierDecl	* mqname = NULL		129854	0					
ANR	129882	IdentifierDeclType	axutil_qname_t *		129854	0					
ANR	129883	Identifier	mqname		129854	1					
ANR	129884	AssignmentExpression	* mqname = NULL		129854	2		=			
ANR	129885	Identifier	NULL		129854	0					
ANR	129886	Identifier	NULL		129854	1					
ANR	129887	IdentifierDeclStatement	int i = 0 ;	78:15:2372:2381	129854	4	True				
ANR	129888	IdentifierDecl	i = 0		129854	0					
ANR	129889	IdentifierDeclType	int		129854	0					
ANR	129890	Identifier	i		129854	1					
ANR	129891	AssignmentExpression	i = 0		129854	2		=			
ANR	129892	Identifier	i		129854	0					
ANR	129893	PrimaryExpression	0		129854	1					
ANR	129894	IdentifierDeclStatement	int sequence_broken = 0 ;	80:15:2411:2434	129854	5	True				
ANR	129895	IdentifierDecl	sequence_broken = 0		129854	0					
ANR	129896	IdentifierDeclType	int		129854	0					
ANR	129897	Identifier	sequence_broken		129854	1					
ANR	129898	AssignmentExpression	sequence_broken = 0		129854	2		=			
ANR	129899	Identifier	sequence_broken		129854	0					
ANR	129900	PrimaryExpression	0		129854	1					
ANR	129901	IdentifierDeclStatement	axiom_node_t * tmp_node = NULL ;	81:15:2451:2480	129854	6	True				
ANR	129902	IdentifierDecl	* tmp_node = NULL		129854	0					
ANR	129903	IdentifierDeclType	axiom_node_t *		129854	0					
ANR	129904	Identifier	tmp_node		129854	1					
ANR	129905	AssignmentExpression	* tmp_node = NULL		129854	2		=			
ANR	129906	Identifier	NULL		129854	0					
ANR	129907	Identifier	NULL		129854	1					
ANR	129908	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	83:12:2507:2543	129854	7	True				
ANR	129909	IdentifierDecl	* element_qname = NULL		129854	0					
ANR	129910	IdentifierDeclType	axutil_qname_t *		129854	0					
ANR	129911	Identifier	element_qname		129854	1					
ANR	129912	AssignmentExpression	* element_qname = NULL		129854	2		=			
ANR	129913	Identifier	NULL		129854	0					
ANR	129914	Identifier	NULL		129854	1					
ANR	129915	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	85:15:2574:2605	129854	8	True				
ANR	129916	IdentifierDecl	* first_node = NULL		129854	0					
ANR	129917	IdentifierDeclType	axiom_node_t *		129854	0					
ANR	129918	Identifier	first_node		129854	1					
ANR	129919	AssignmentExpression	* first_node = NULL		129854	2		=			
ANR	129920	Identifier	NULL		129854	0					
ANR	129921	Identifier	NULL		129854	1					
ANR	129922	IdentifierDeclStatement	bool is_early_node_valid = true ;	86:15:2622:2653	129854	9	True				
ANR	129923	IdentifierDecl	is_early_node_valid = true		129854	0					
ANR	129924	IdentifierDeclType	bool		129854	0					
ANR	129925	Identifier	is_early_node_valid		129854	1					
ANR	129926	AssignmentExpression	is_early_node_valid = true		129854	2		=			
ANR	129927	Identifier	true		129854	0					
ANR	129928	Identifier	true		129854	1					
ANR	129929	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	87:15:2670:2703	129854	10	True				
ANR	129930	IdentifierDecl	* current_node = NULL		129854	0					
ANR	129931	IdentifierDeclType	axiom_node_t *		129854	0					
ANR	129932	Identifier	current_node		129854	1					
ANR	129933	AssignmentExpression	* current_node = NULL		129854	2		=			
ANR	129934	Identifier	NULL		129854	0					
ANR	129935	Identifier	NULL		129854	1					
ANR	129936	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	88:15:2720:2759	129854	11	True				
ANR	129937	IdentifierDecl	* current_element = NULL		129854	0					
ANR	129938	IdentifierDeclType	axiom_element_t *		129854	0					
ANR	129939	Identifier	current_element		129854	1					
ANR	129940	AssignmentExpression	* current_element = NULL		129854	2		=			
ANR	129941	Identifier	NULL		129854	0					
ANR	129942	Identifier	NULL		129854	1					
ANR	129943	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		129854	12					
ANR	129944	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	91:20:2809:2890	129854	0	True				
ANR	129945	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		129854	0		&&			
ANR	129946	Identifier	parent		129854	0					
ANR	129947	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		129854	1		!=			
ANR	129948	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		129854	0					
ANR	129949	Callee	axiom_node_get_node_type		129854	0					
ANR	129950	Identifier	axiom_node_get_node_type		129854	0					
ANR	129951	ArgumentList	parent		129854	1					
ANR	129952	Argument	parent		129854	0					
ANR	129953	Identifier	parent		129854	0					
ANR	129954	Argument	Environment :: getEnv ( )		129854	1					
ANR	129955	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	129956	Callee	Environment :: getEnv		129854	0					
ANR	129957	Identifier	Environment :: getEnv		129854	0					
ANR	129958	ArgumentList			129854	1					
ANR	129959	Identifier	AXIOM_ELEMENT		129854	1					
ANR	129960	CompoundStatement		23:14:757:757	129854	1					
ANR	129961	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	93:18:2927:2994	129854	0	True				
ANR	129962	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		129854	0		=			
ANR	129963	Identifier	parent		129854	0					
ANR	129964	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		129854	1					
ANR	129965	Callee	axiom_node_get_next_sibling		129854	0					
ANR	129966	Identifier	axiom_node_get_next_sibling		129854	0					
ANR	129967	ArgumentList	parent		129854	1					
ANR	129968	Argument	parent		129854	0					
ANR	129969	Identifier	parent		129854	0					
ANR	129970	Argument	Environment :: getEnv ( )		129854	1					
ANR	129971	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	129972	Callee	Environment :: getEnv		129854	0					
ANR	129973	Identifier	Environment :: getEnv		129854	0					
ANR	129974	ArgumentList			129854	1					
ANR	129975	IfStatement	if ( NULL == parent )		129854	13					
ANR	129976	Condition	NULL == parent	95:18:3030:3043	129854	0	True				
ANR	129977	EqualityExpression	NULL == parent		129854	0		==			
ANR	129978	Identifier	NULL		129854	0					
ANR	129979	Identifier	parent		129854	1					
ANR	129980	CompoundStatement		27:14:910:910	129854	1					
ANR	129981	ReturnStatement	return AXIS2_FAILURE ;	97:16:3081:3101	129854	0	True				
ANR	129982	Identifier	AXIS2_FAILURE		129854	0					
ANR	129983	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	101:20:3155:3250	129854	14	True				
ANR	129984	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		129854	0		=			
ANR	129985	Identifier	current_element		129854	0					
ANR	129986	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		129854	1					
ANR	129987	CastTarget	axiom_element_t *		129854	0					
ANR	129988	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		129854	1					
ANR	129989	Callee	axiom_node_get_data_element		129854	0					
ANR	129990	Identifier	axiom_node_get_data_element		129854	0					
ANR	129991	ArgumentList	parent		129854	1					
ANR	129992	Argument	parent		129854	0					
ANR	129993	Identifier	parent		129854	0					
ANR	129994	Argument	Environment :: getEnv ( )		129854	1					
ANR	129995	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	129996	Callee	Environment :: getEnv		129854	0					
ANR	129997	Identifier	Environment :: getEnv		129854	0					
ANR	129998	ArgumentList			129854	1					
ANR	129999	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"	102:20:3272:3352	129854	15	True				
ANR	130000	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		129854	0		=			
ANR	130001	Identifier	mqname		129854	0					
ANR	130002	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		129854	1					
ANR	130003	Callee	axiom_element_get_qname		129854	0					
ANR	130004	Identifier	axiom_element_get_qname		129854	0					
ANR	130005	ArgumentList	current_element		129854	1					
ANR	130006	Argument	current_element		129854	0					
ANR	130007	Identifier	current_element		129854	0					
ANR	130008	Argument	Environment :: getEnv ( )		129854	1					
ANR	130009	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130010	Callee	Environment :: getEnv		129854	0					
ANR	130011	Identifier	Environment :: getEnv		129854	0					
ANR	130012	ArgumentList			129854	1					
ANR	130013	Argument	parent		129854	2					
ANR	130014	Identifier	parent		129854	0					
ANR	130015	IfStatement	"if ( axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname ) )"		129854	16					
ANR	130016	Condition	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"	103:24:3378:3440	129854	0	True				
ANR	130017	CallExpression	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"		129854	0					
ANR	130018	Callee	axutil_qname_equals		129854	0					
ANR	130019	Identifier	axutil_qname_equals		129854	0					
ANR	130020	ArgumentList	mqname		129854	1					
ANR	130021	Argument	mqname		129854	0					
ANR	130022	Identifier	mqname		129854	0					
ANR	130023	Argument	Environment :: getEnv ( )		129854	1					
ANR	130024	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130025	Callee	Environment :: getEnv		129854	0					
ANR	130026	Identifier	Environment :: getEnv		129854	0					
ANR	130027	ArgumentList			129854	1					
ANR	130028	Argument	this -> qname		129854	2					
ANR	130029	PtrMemberAccess	this -> qname		129854	0					
ANR	130030	Identifier	this		129854	0					
ANR	130031	Identifier	qname		129854	1					
ANR	130032	CompoundStatement		35:20:1313:1313	129854	1					
ANR	130033	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	106:26:3516:3586	129854	0	True				
ANR	130034	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		129854	0		=			
ANR	130035	Identifier	first_node		129854	0					
ANR	130036	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		129854	1					
ANR	130037	Callee	axiom_node_get_first_child		129854	0					
ANR	130038	Identifier	axiom_node_get_first_child		129854	0					
ANR	130039	ArgumentList	parent		129854	1					
ANR	130040	Argument	parent		129854	0					
ANR	130041	Identifier	parent		129854	0					
ANR	130042	Argument	Environment :: getEnv ( )		129854	1					
ANR	130043	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130044	Callee	Environment :: getEnv		129854	0					
ANR	130045	Identifier	Environment :: getEnv		129854	0					
ANR	130046	ArgumentList			129854	1					
ANR	130047	ElseStatement	else		129854	0					
ANR	130048	CompoundStatement		41:20:1532:1532	129854	0					
ANR	130049	Statement	WSF_LOG_ERROR_MSG	111:24:3708:3724	129854	0	True				
ANR	130050	Statement	(	111:41:3725:3725	129854	1	True				
ANR	130051	Statement	Environment	111:42:3726:3736	129854	2	True				
ANR	130052	Statement	::	111:53:3737:3738	129854	3	True				
ANR	130053	Statement	getEnv	111:55:3739:3744	129854	4	True				
ANR	130054	Statement	(	111:61:3745:3745	129854	5	True				
ANR	130055	Statement	)	111:62:3746:3746	129854	6	True				
ANR	130056	Statement	->	111:63:3747:3748	129854	7	True				
ANR	130057	Statement	log	111:65:3749:3751	129854	8	True				
ANR	130058	Statement	","	111:68:3752:3752	129854	9	True				
ANR	130059	Statement	WSF_LOG_SI	111:70:3754:3763	129854	10	True				
ANR	130060	Statement	","	111:80:3764:3764	129854	11	True				
ANR	130061	Statement	"""Failed in building adb object for GetJobStatusResponse : """	112:30:3796:3854	129854	12	True				
ANR	130062	Statement	"""Expected %s but returned %s"""	113:30:3886:3914	129854	13	True				
ANR	130063	Statement	","	113:59:3915:3915	129854	14	True				
ANR	130064	Statement	axutil_qname_to_string	114:30:3947:3968	129854	15	True				
ANR	130065	Statement	(	114:52:3969:3969	129854	16	True				
ANR	130066	Statement	qname	114:53:3970:3974	129854	17	True				
ANR	130067	Statement	","	114:58:3975:3975	129854	18	True				
ANR	130068	Statement	Environment	114:60:3977:3987	129854	19	True				
ANR	130069	Statement	::	114:71:3988:3989	129854	20	True				
ANR	130070	Statement	getEnv	114:73:3990:3995	129854	21	True				
ANR	130071	Statement	(	114:79:3996:3996	129854	22	True				
ANR	130072	Statement	)	114:80:3997:3997	129854	23	True				
ANR	130073	Statement	)	114:81:3998:3998	129854	24	True				
ANR	130074	Statement	","	114:82:3999:3999	129854	25	True				
ANR	130075	Statement	axutil_qname_to_string	115:30:4031:4052	129854	26	True				
ANR	130076	Statement	(	115:52:4053:4053	129854	27	True				
ANR	130077	Statement	mqname	115:53:4054:4059	129854	28	True				
ANR	130078	Statement	","	115:59:4060:4060	129854	29	True				
ANR	130079	Statement	Environment	115:61:4062:4072	129854	30	True				
ANR	130080	Statement	::	115:72:4073:4074	129854	31	True				
ANR	130081	Statement	getEnv	115:74:4075:4080	129854	32	True				
ANR	130082	Statement	(	115:80:4081:4081	129854	33	True				
ANR	130083	Statement	)	115:81:4082:4082	129854	34	True				
ANR	130084	Statement	)	115:82:4083:4083	129854	35	True				
ANR	130085	Statement	)	115:83:4084:4084	129854	36	True				
ANR	130086	ExpressionStatement		115:84:4085:4085	129854	37	True				
ANR	130087	ReturnStatement	return AXIS2_FAILURE ;	117:24:4136:4156	129854	38	True				
ANR	130088	Identifier	AXIS2_FAILURE		129854	0					
ANR	130089	CompoundStatement		55:23:2190:2282	129854	17					
ANR	130090	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobStatus * > * arr_list = new std :: vector < AviaryCommon :: JobStatus * > ( ) ;	124:23:4340:4432	129854	0	True				
ANR	130091	IdentifierDecl	* arr_list = new std :: vector < AviaryCommon :: JobStatus * > ( )		129854	0					
ANR	130092	IdentifierDeclType	std :: vector < AviaryCommon :: JobStatus * > *		129854	0					
ANR	130093	Identifier	arr_list		129854	1					
ANR	130094	AssignmentExpression	* arr_list = new std :: vector < AviaryCommon :: JobStatus * > ( )		129854	2		=			
ANR	130095	Identifier	arr_list		129854	0					
ANR	130096	UnaryExpression	new std :: vector < AviaryCommon :: JobStatus * > ( )		129854	1					
ANR	130097	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""jobs"" , NULL , NULL )"	134:36:4674:4752	129854	1	True				
ANR	130098	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""jobs"" , NULL , NULL )"		129854	0		=			
ANR	130099	Identifier	element_qname		129854	0					
ANR	130100	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""jobs"" , NULL , NULL )"		129854	1					
ANR	130101	Callee	axutil_qname_create		129854	0					
ANR	130102	Identifier	axutil_qname_create		129854	0					
ANR	130103	ArgumentList	Environment :: getEnv ( )		129854	1					
ANR	130104	Argument	Environment :: getEnv ( )		129854	0					
ANR	130105	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130106	Callee	Environment :: getEnv		129854	0					
ANR	130107	Identifier	Environment :: getEnv		129854	0					
ANR	130108	ArgumentList			129854	1					
ANR	130109	Argument	"""jobs"""		129854	1					
ANR	130110	PrimaryExpression	"""jobs"""		129854	0					
ANR	130111	Argument	NULL		129854	2					
ANR	130112	Identifier	NULL		129854	0					
ANR	130113	Argument	NULL		129854	3					
ANR	130114	Identifier	NULL		129854	0					
ANR	130115	ForStatement	"for ( i = 0 , sequence_broken = 0 , current_node = first_node ; ! sequence_broken && current_node != NULL ; )"		129854	2					
ANR	130116	ForInit	"i = 0 , sequence_broken = 0 , current_node = first_node ;"	137:36:4857:4910	129854	0	True				
ANR	130117	Expression	"i = 0 , sequence_broken = 0 , current_node = first_node"		129854	0					
ANR	130118	AssignmentExpression	i = 0		129854	0		=			
ANR	130119	Identifier	i		129854	0					
ANR	130120	PrimaryExpression	0		129854	1					
ANR	130121	Expression	"sequence_broken = 0 , current_node = first_node"		129854	1					
ANR	130122	AssignmentExpression	sequence_broken = 0		129854	0		=			
ANR	130123	Identifier	sequence_broken		129854	0					
ANR	130124	PrimaryExpression	0		129854	1					
ANR	130125	AssignmentExpression	current_node = first_node		129854	1		=			
ANR	130126	Identifier	current_node		129854	0					
ANR	130127	Identifier	first_node		129854	1					
ANR	130128	Condition	! sequence_broken && current_node != NULL	137:91:4912:4951	129854	1	True				
ANR	130129	AndExpression	! sequence_broken && current_node != NULL		129854	0		&&			
ANR	130130	UnaryOperationExpression	! sequence_broken		129854	0					
ANR	130131	UnaryOperator	!		129854	0					
ANR	130132	Identifier	sequence_broken		129854	1					
ANR	130133	EqualityExpression	current_node != NULL		129854	1		!=			
ANR	130134	Identifier	current_node		129854	0					
ANR	130135	Identifier	NULL		129854	1					
ANR	130136	CompoundStatement		70:31:2882:2882	129854	2					
ANR	130137	IfStatement	"if ( axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		129854	0					
ANR	130138	Condition	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	140:37:5071:5148	129854	0	True				
ANR	130139	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		129854	0		!=			
ANR	130140	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		129854	0					
ANR	130141	Callee	axiom_node_get_node_type		129854	0					
ANR	130142	Identifier	axiom_node_get_node_type		129854	0					
ANR	130143	ArgumentList	current_node		129854	1					
ANR	130144	Argument	current_node		129854	0					
ANR	130145	Identifier	current_node		129854	0					
ANR	130146	Argument	Environment :: getEnv ( )		129854	1					
ANR	130147	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130148	Callee	Environment :: getEnv		129854	0					
ANR	130149	Identifier	Environment :: getEnv		129854	0					
ANR	130150	ArgumentList			129854	1					
ANR	130151	Identifier	AXIOM_ELEMENT		129854	1					
ANR	130152	CompoundStatement		72:34:3035:3035	129854	1					
ANR	130153	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	142:37:5224:5302	129854	0	True				
ANR	130154	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		129854	0		=			
ANR	130155	Identifier	current_node		129854	0					
ANR	130156	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		129854	1					
ANR	130157	Callee	axiom_node_get_next_sibling		129854	0					
ANR	130158	Identifier	axiom_node_get_next_sibling		129854	0					
ANR	130159	ArgumentList	current_node		129854	1					
ANR	130160	Argument	current_node		129854	0					
ANR	130161	Identifier	current_node		129854	0					
ANR	130162	Argument	Environment :: getEnv ( )		129854	1					
ANR	130163	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130164	Callee	Environment :: getEnv		129854	0					
ANR	130165	Identifier	Environment :: getEnv		129854	0					
ANR	130166	ArgumentList			129854	1					
ANR	130167	ExpressionStatement	is_early_node_valid = false	143:37:5341:5368	129854	1	True				
ANR	130168	AssignmentExpression	is_early_node_valid = false		129854	0		=			
ANR	130169	Identifier	is_early_node_valid		129854	0					
ANR	130170	Identifier	false		129854	1					
ANR	130171	ContinueStatement	continue ;	144:37:5407:5415	129854	2	True				
ANR	130172	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	147:34:5522:5623	129854	1	True				
ANR	130173	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		129854	0		=			
ANR	130174	Identifier	current_element		129854	0					
ANR	130175	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		129854	1					
ANR	130176	CastTarget	axiom_element_t *		129854	0					
ANR	130177	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		129854	1					
ANR	130178	Callee	axiom_node_get_data_element		129854	0					
ANR	130179	Identifier	axiom_node_get_data_element		129854	0					
ANR	130180	ArgumentList	current_node		129854	1					
ANR	130181	Argument	current_node		129854	0					
ANR	130182	Identifier	current_node		129854	0					
ANR	130183	Argument	Environment :: getEnv ( )		129854	1					
ANR	130184	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130185	Callee	Environment :: getEnv		129854	0					
ANR	130186	Identifier	Environment :: getEnv		129854	0					
ANR	130187	ArgumentList			129854	1					
ANR	130188	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	148:34:5659:5745	129854	2	True				
ANR	130189	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		129854	0		=			
ANR	130190	Identifier	mqname		129854	0					
ANR	130191	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		129854	1					
ANR	130192	Callee	axiom_element_get_qname		129854	0					
ANR	130193	Identifier	axiom_element_get_qname		129854	0					
ANR	130194	ArgumentList	current_element		129854	1					
ANR	130195	Argument	current_element		129854	0					
ANR	130196	Identifier	current_element		129854	0					
ANR	130197	Argument	Environment :: getEnv ( )		129854	1					
ANR	130198	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130199	Callee	Environment :: getEnv		129854	0					
ANR	130200	Identifier	Environment :: getEnv		129854	0					
ANR	130201	ArgumentList			129854	1					
ANR	130202	Argument	current_node		129854	2					
ANR	130203	Identifier	current_node		129854	0					
ANR	130204	IfStatement	"if ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		129854	3					
ANR	130205	Condition	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"	150:38:5786:5945	129854	0	True				
ANR	130206	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		129854	0		||			
ANR	130207	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		129854	0					
ANR	130208	Callee	axutil_qname_equals		129854	0					
ANR	130209	Identifier	axutil_qname_equals		129854	0					
ANR	130210	ArgumentList	element_qname		129854	1					
ANR	130211	Argument	element_qname		129854	0					
ANR	130212	Identifier	element_qname		129854	0					
ANR	130213	Argument	Environment :: getEnv ( )		129854	1					
ANR	130214	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130215	Callee	Environment :: getEnv		129854	0					
ANR	130216	Identifier	Environment :: getEnv		129854	0					
ANR	130217	ArgumentList			129854	1					
ANR	130218	Argument	mqname		129854	2					
ANR	130219	Identifier	mqname		129854	0					
ANR	130220	UnaryOperationExpression	"! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		129854	1					
ANR	130221	UnaryOperator	!		129854	0					
ANR	130222	CallExpression	"axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		129854	1					
ANR	130223	Callee	axutil_strcmp		129854	0					
ANR	130224	Identifier	axutil_strcmp		129854	0					
ANR	130225	ArgumentList	"""jobs"""		129854	1					
ANR	130226	Argument	"""jobs"""		129854	0					
ANR	130227	PrimaryExpression	"""jobs"""		129854	0					
ANR	130228	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		129854	1					
ANR	130229	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		129854	0					
ANR	130230	Callee	axiom_element_get_localname		129854	0					
ANR	130231	Identifier	axiom_element_get_localname		129854	0					
ANR	130232	ArgumentList	current_element		129854	1					
ANR	130233	Argument	current_element		129854	0					
ANR	130234	Identifier	current_element		129854	0					
ANR	130235	Argument	Environment :: getEnv ( )		129854	1					
ANR	130236	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130237	Callee	Environment :: getEnv		129854	0					
ANR	130238	Identifier	Environment :: getEnv		129854	0					
ANR	130239	ArgumentList			129854	1					
ANR	130240	CompoundStatement		86:37:4011:4075	129854	1					
ANR	130241	ExpressionStatement	is_early_node_valid = true	153:38:6057:6083	129854	0	True				
ANR	130242	AssignmentExpression	is_early_node_valid = true		129854	0		=			
ANR	130243	Identifier	is_early_node_valid		129854	0					
ANR	130244	Identifier	true		129854	1					
ANR	130245	IdentifierDeclStatement	AviaryCommon :: JobStatus * element = new AviaryCommon :: JobStatus ( ) ;	155:37:6161:6225	129854	1	True				
ANR	130246	IdentifierDecl	* element = new AviaryCommon :: JobStatus ( )		129854	0					
ANR	130247	IdentifierDeclType	AviaryCommon :: JobStatus *		129854	0					
ANR	130248	Identifier	element		129854	1					
ANR	130249	AssignmentExpression	* element = new AviaryCommon :: JobStatus ( )		129854	2		=			
ANR	130250	Identifier	element		129854	0					
ANR	130251	UnaryExpression	new AviaryCommon :: JobStatus ( )		129854	1					
ANR	130252	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	157:42:6312:6386	129854	2	True				
ANR	130253	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		129854	0		=			
ANR	130254	Identifier	status		129854	0					
ANR	130255	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		129854	1					
ANR	130256	Callee	element -> deserialize		129854	0					
ANR	130257	PtrMemberAccess	element -> deserialize		129854	0					
ANR	130258	Identifier	element		129854	0					
ANR	130259	Identifier	deserialize		129854	1					
ANR	130260	ArgumentList	& current_node		129854	1					
ANR	130261	Argument	& current_node		129854	0					
ANR	130262	UnaryOperationExpression	& current_node		129854	0					
ANR	130263	UnaryOperator	&		129854	0					
ANR	130264	Identifier	current_node		129854	1					
ANR	130265	Argument	& is_early_node_valid		129854	1					
ANR	130266	UnaryOperationExpression	& is_early_node_valid		129854	0					
ANR	130267	UnaryOperator	&		129854	0					
ANR	130268	Identifier	is_early_node_valid		129854	1					
ANR	130269	Argument	false		129854	2					
ANR	130270	Identifier	false		129854	0					
ANR	130271	IfStatement	if ( AXIS2_FAILURE == status )		129854	3					
ANR	130272	Condition	AXIS2_FAILURE == status	159:45:6476:6499	129854	0	True				
ANR	130273	EqualityExpression	AXIS2_FAILURE == status		129854	0		==			
ANR	130274	Identifier	AXIS2_FAILURE		129854	0					
ANR	130275	Identifier	status		129854	1					
ANR	130276	CompoundStatement		91:42:4394:4394	129854	1					
ANR	130277	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element jobs "" )"	161:7:6553:6645	129854	0	True				
ANR	130278	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element jobs "" )"		129854	0					
ANR	130279	Callee	WSF_LOG_ERROR_MSG		129854	0					
ANR	130280	Identifier	WSF_LOG_ERROR_MSG		129854	0					
ANR	130281	ArgumentList	Environment :: getEnv ( ) -> log		129854	1					
ANR	130282	Argument	Environment :: getEnv ( ) -> log		129854	0					
ANR	130283	PtrMemberAccess	Environment :: getEnv ( ) -> log		129854	0					
ANR	130284	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130285	Callee	Environment :: getEnv		129854	0					
ANR	130286	Identifier	Environment :: getEnv		129854	0					
ANR	130287	ArgumentList			129854	1					
ANR	130288	Identifier	log		129854	1					
ANR	130289	Argument	WSF_LOG_SI		129854	1					
ANR	130290	Identifier	WSF_LOG_SI		129854	0					
ANR	130291	Argument	"""failed in building element jobs """		129854	2					
ANR	130292	PrimaryExpression	"""failed in building element jobs """		129854	0					
ANR	130293	ElseStatement	else		129854	0					
ANR	130294	CompoundStatement		95:42:4630:4630	129854	0					
ANR	130295	ExpressionStatement	arr_list -> push_back ( element )	165:44:6826:6854	129854	0	True				
ANR	130296	CallExpression	arr_list -> push_back ( element )		129854	0					
ANR	130297	Callee	arr_list -> push_back		129854	0					
ANR	130298	PtrMemberAccess	arr_list -> push_back		129854	0					
ANR	130299	Identifier	arr_list		129854	0					
ANR	130300	Identifier	push_back		129854	1					
ANR	130301	ArgumentList	element		129854	1					
ANR	130302	Argument	element		129854	0					
ANR	130303	Identifier	element		129854	0					
ANR	130304	IfStatement	if ( AXIS2_FAILURE == status )		129854	4					
ANR	130305	Condition	AXIS2_FAILURE == status	169:40:7026:7049	129854	0	True				
ANR	130306	EqualityExpression	AXIS2_FAILURE == status		129854	0		==			
ANR	130307	Identifier	AXIS2_FAILURE		129854	0					
ANR	130308	Identifier	status		129854	1					
ANR	130309	CompoundStatement		101:37:4939:4939	129854	1					
ANR	130310	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for jobs "" )"	171:41:7132:7230	129854	0	True				
ANR	130311	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for jobs "" )"		129854	0					
ANR	130312	Callee	WSF_LOG_ERROR_MSG		129854	0					
ANR	130313	Identifier	WSF_LOG_ERROR_MSG		129854	0					
ANR	130314	ArgumentList	Environment :: getEnv ( ) -> log		129854	1					
ANR	130315	Argument	Environment :: getEnv ( ) -> log		129854	0					
ANR	130316	PtrMemberAccess	Environment :: getEnv ( ) -> log		129854	0					
ANR	130317	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130318	Callee	Environment :: getEnv		129854	0					
ANR	130319	Identifier	Environment :: getEnv		129854	0					
ANR	130320	ArgumentList			129854	1					
ANR	130321	Identifier	log		129854	1					
ANR	130322	Argument	WSF_LOG_SI		129854	1					
ANR	130323	Identifier	WSF_LOG_SI		129854	0					
ANR	130324	Argument	"""failed in setting the value for jobs """		129854	2					
ANR	130325	PrimaryExpression	"""failed in setting the value for jobs """		129854	0					
ANR	130326	IfStatement	if ( element_qname )		129854	1					
ANR	130327	Condition	element_qname	172:44:7276:7288	129854	0	True				
ANR	130328	Identifier	element_qname		129854	0					
ANR	130329	CompoundStatement		104:41:5182:5182	129854	1					
ANR	130330	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	174:44:7378:7433	129854	0	True				
ANR	130331	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		129854	0					
ANR	130332	Callee	axutil_qname_free		129854	0					
ANR	130333	Identifier	axutil_qname_free		129854	0					
ANR	130334	ArgumentList	element_qname		129854	1					
ANR	130335	Argument	element_qname		129854	0					
ANR	130336	Identifier	element_qname		129854	0					
ANR	130337	Argument	Environment :: getEnv ( )		129854	1					
ANR	130338	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130339	Callee	Environment :: getEnv		129854	0					
ANR	130340	Identifier	Environment :: getEnv		129854	0					
ANR	130341	ArgumentList			129854	1					
ANR	130342	IfStatement	if ( arr_list )		129854	2					
ANR	130343	Condition	arr_list	176:44:7522:7529	129854	0	True				
ANR	130344	Identifier	arr_list		129854	0					
ANR	130345	CompoundStatement		108:41:5423:5423	129854	1					
ANR	130346	Statement	delete	178:44:7619:7624	129854	0	True				
ANR	130347	ExpressionStatement	arr_list	178:51:7626:7634	129854	1	True				
ANR	130348	Identifier	arr_list		129854	0					
ANR	130349	ReturnStatement	return false ;	180:41:7720:7732	129854	3	True				
ANR	130350	Identifier	false		129854	0					
ANR	130351	ExpressionStatement	i ++	183:37:7811:7814	129854	5	True				
ANR	130352	PostIncDecOperationExpression	i ++		129854	0					
ANR	130353	Identifier	i		129854	0					
ANR	130354	IncDec	++		129854	1					
ANR	130355	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	184:36:7852:7931	129854	6	True				
ANR	130356	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		129854	0		=			
ANR	130357	Identifier	current_node		129854	0					
ANR	130358	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		129854	1					
ANR	130359	Callee	axiom_node_get_next_sibling		129854	0					
ANR	130360	Identifier	axiom_node_get_next_sibling		129854	0					
ANR	130361	ArgumentList	current_node		129854	1					
ANR	130362	Argument	current_node		129854	0					
ANR	130363	Identifier	current_node		129854	0					
ANR	130364	Argument	Environment :: getEnv ( )		129854	1					
ANR	130365	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130366	Callee	Environment :: getEnv		129854	0					
ANR	130367	Identifier	Environment :: getEnv		129854	0					
ANR	130368	ArgumentList			129854	1					
ANR	130369	ElseStatement	else		129854	0					
ANR	130370	CompoundStatement		118:34:5892:5892	129854	0					
ANR	130371	ExpressionStatement	is_early_node_valid = false	188:38:8082:8109	129854	0	True				
ANR	130372	AssignmentExpression	is_early_node_valid = false		129854	0		=			
ANR	130373	Identifier	is_early_node_valid		129854	0					
ANR	130374	Identifier	false		129854	1					
ANR	130375	ExpressionStatement	sequence_broken = 1	189:38:8149:8168	129854	1	True				
ANR	130376	AssignmentExpression	sequence_broken = 1		129854	0		=			
ANR	130377	Identifier	sequence_broken		129854	0					
ANR	130378	PrimaryExpression	1		129854	1					
ANR	130379	IfStatement	if ( i < 0 )		129854	3					
ANR	130380	Condition	i < 0	195:39:8346:8350	129854	0	True				
ANR	130381	RelationalExpression	i < 0		129854	0		<			
ANR	130382	Identifier	i		129854	0					
ANR	130383	PrimaryExpression	0		129854	1					
ANR	130384	CompoundStatement		127:35:6238:6238	129854	1					
ANR	130385	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs (@minOccurs = '0') only have %d elements"" , i )"	198:37:8497:8605	129854	0	True				
ANR	130386	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs (@minOccurs = '0') only have %d elements"" , i )"		129854	0					
ANR	130387	Callee	WSF_LOG_ERROR_MSG		129854	0					
ANR	130388	Identifier	WSF_LOG_ERROR_MSG		129854	0					
ANR	130389	ArgumentList	Environment :: getEnv ( ) -> log		129854	1					
ANR	130390	Argument	Environment :: getEnv ( ) -> log		129854	0					
ANR	130391	PtrMemberAccess	Environment :: getEnv ( ) -> log		129854	0					
ANR	130392	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130393	Callee	Environment :: getEnv		129854	0					
ANR	130394	Identifier	Environment :: getEnv		129854	0					
ANR	130395	ArgumentList			129854	1					
ANR	130396	Identifier	log		129854	1					
ANR	130397	Argument	WSF_LOG_SI		129854	1					
ANR	130398	Identifier	WSF_LOG_SI		129854	0					
ANR	130399	Argument	"""jobs (@minOccurs = '0') only have %d elements"""		129854	2					
ANR	130400	PrimaryExpression	"""jobs (@minOccurs = '0') only have %d elements"""		129854	0					
ANR	130401	Argument	i		129854	3					
ANR	130402	Identifier	i		129854	0					
ANR	130403	IfStatement	if ( element_qname )		129854	1					
ANR	130404	Condition	element_qname	199:40:8647:8659	129854	0	True				
ANR	130405	Identifier	element_qname		129854	0					
ANR	130406	CompoundStatement		131:37:6549:6549	129854	1					
ANR	130407	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	201:40:8741:8796	129854	0	True				
ANR	130408	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		129854	0					
ANR	130409	Callee	axutil_qname_free		129854	0					
ANR	130410	Identifier	axutil_qname_free		129854	0					
ANR	130411	ArgumentList	element_qname		129854	1					
ANR	130412	Argument	element_qname		129854	0					
ANR	130413	Identifier	element_qname		129854	0					
ANR	130414	Argument	Environment :: getEnv ( )		129854	1					
ANR	130415	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130416	Callee	Environment :: getEnv		129854	0					
ANR	130417	Identifier	Environment :: getEnv		129854	0					
ANR	130418	ArgumentList			129854	1					
ANR	130419	IfStatement	if ( arr_list )		129854	2					
ANR	130420	Condition	arr_list	203:40:8877:8884	129854	0	True				
ANR	130421	Identifier	arr_list		129854	0					
ANR	130422	CompoundStatement		135:37:6774:6774	129854	1					
ANR	130423	Statement	delete	205:40:8966:8971	129854	0	True				
ANR	130424	ExpressionStatement	arr_list	205:47:8973:8981	129854	1	True				
ANR	130425	Identifier	arr_list		129854	0					
ANR	130426	ReturnStatement	return false ;	207:37:9059:9071	129854	3	True				
ANR	130427	Identifier	false		129854	0					
ANR	130428	IfStatement	if ( 0 == arr_list -> size ( ) )		129854	4					
ANR	130429	Condition	0 == arr_list -> size ( )	211:34:9177:9197	129854	0	True				
ANR	130430	EqualityExpression	0 == arr_list -> size ( )		129854	0		==			
ANR	130431	PrimaryExpression	0		129854	0					
ANR	130432	CallExpression	arr_list -> size ( )		129854	1					
ANR	130433	Callee	arr_list -> size		129854	0					
ANR	130434	PtrMemberAccess	arr_list -> size		129854	0					
ANR	130435	Identifier	arr_list		129854	0					
ANR	130436	Identifier	size		129854	1					
ANR	130437	ArgumentList			129854	1					
ANR	130438	CompoundStatement		143:31:7081:7081	129854	1					
ANR	130439	Statement	delete	213:36:9269:9274	129854	0	True				
ANR	130440	ExpressionStatement	arr_list	213:43:9276:9284	129854	1	True				
ANR	130441	Identifier	arr_list		129854	0					
ANR	130442	ElseStatement	else		129854	0					
ANR	130443	CompoundStatement		147:31:7236:7236	129854	0					
ANR	130444	ExpressionStatement	status = setJobs ( arr_list )	217:36:9424:9450	129854	0	True				
ANR	130445	AssignmentExpression	status = setJobs ( arr_list )		129854	0		=			
ANR	130446	Identifier	status		129854	0					
ANR	130447	CallExpression	setJobs ( arr_list )		129854	1					
ANR	130448	Callee	setJobs		129854	0					
ANR	130449	Identifier	setJobs		129854	0					
ANR	130450	ArgumentList	arr_list		129854	1					
ANR	130451	Argument	arr_list		129854	0					
ANR	130452	Identifier	arr_list		129854	0					
ANR	130453	IfStatement	if ( element_qname )		129854	18					
ANR	130454	Condition	element_qname	223:21:9594:9606	129854	0	True				
ANR	130455	Identifier	element_qname		129854	0					
ANR	130456	CompoundStatement		155:18:7477:7477	129854	1					
ANR	130457	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	225:21:9650:9705	129854	0	True				
ANR	130458	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		129854	0					
ANR	130459	Callee	axutil_qname_free		129854	0					
ANR	130460	Identifier	axutil_qname_free		129854	0					
ANR	130461	ArgumentList	element_qname		129854	1					
ANR	130462	Argument	element_qname		129854	0					
ANR	130463	Identifier	element_qname		129854	0					
ANR	130464	Argument	Environment :: getEnv ( )		129854	1					
ANR	130465	CallExpression	Environment :: getEnv ( )		129854	0					
ANR	130466	Callee	Environment :: getEnv		129854	0					
ANR	130467	Identifier	Environment :: getEnv		129854	0					
ANR	130468	ArgumentList			129854	1					
ANR	130469	ExpressionStatement	element_qname = NULL	226:21:9728:9748	129854	1	True				
ANR	130470	AssignmentExpression	element_qname = NULL		129854	0		=			
ANR	130471	Identifier	element_qname		129854	0					
ANR	130472	Identifier	NULL		129854	1					
ANR	130473	ReturnStatement	return status ;	229:10:9798:9811	129854	19	True				
ANR	130474	Identifier	status		129854	0					
ANR	130475	ReturnType	bool WSF_CALL		129854	1					
ANR	130476	Identifier	AviaryQuery :: GetJobStatusResponse :: deserialize		129854	2					
ANR	130477	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		129854	3					
ANR	130478	Parameter	axiom_node_t * * dp_parent	69:55:2060:2083	129854	0	True				
ANR	130479	ParameterType	axiom_node_t * *		129854	0					
ANR	130480	Identifier	dp_parent		129854	1					
ANR	130481	Parameter	bool * dp_is_early_node_valid	69:80:2085:2112	129854	1	True				
ANR	130482	ParameterType	bool *		129854	0					
ANR	130483	Identifier	dp_is_early_node_valid		129854	1					
ANR	130484	Parameter	bool dont_care_minoccurs	69:110:2115:2138	129854	2	True				
ANR	130485	ParameterType	bool		129854	0					
ANR	130486	Identifier	dont_care_minoccurs		129854	1					
ANR	130487	CFGEntryNode	ENTRY		129854		True				
ANR	130488	CFGExitNode	EXIT		129854		True				
ANR	130489	Symbol	sequence_broken		129854						
ANR	130490	Symbol	parent		129854						
ANR	130491	Symbol	is_early_node_valid		129854						
ANR	130492	Symbol	Environment :: getEnv		129854						
ANR	130493	Symbol	mqname		129854						
ANR	130494	Symbol	current_node		129854						
ANR	130495	Symbol	axiom_element_get_qname		129854						
ANR	130496	Symbol	* element		129854						
ANR	130497	Symbol	element_qname		129854						
ANR	130498	Symbol	axutil_qname_create		129854						
ANR	130499	Symbol	* dp_parent		129854						
ANR	130500	Symbol	AXIS2_FAILURE		129854						
ANR	130501	Symbol	axiom_node_get_data_element		129854						
ANR	130502	Symbol	this -> qname		129854						
ANR	130503	Symbol	dont_care_minoccurs		129854						
ANR	130504	Symbol	dp_is_early_node_valid		129854						
ANR	130505	Symbol	WSF_LOG_SI		129854						
ANR	130506	Symbol	setJobs		129854						
ANR	130507	Symbol	& current_node		129854						
ANR	130508	Symbol	first_node		129854						
ANR	130509	Symbol	& is_early_node_valid		129854						
ANR	130510	Symbol	* arr_list		129854						
ANR	130511	Symbol	AXIS2_SUCCESS		129854						
ANR	130512	Symbol	current_element		129854						
ANR	130513	Symbol	element		129854						
ANR	130514	Symbol	NULL		129854						
ANR	130515	Symbol	dp_parent		129854						
ANR	130516	Symbol	AXIOM_ELEMENT		129854						
ANR	130517	Symbol	this		129854						
ANR	130518	Symbol	false		129854						
ANR	130519	Symbol	i		129854						
ANR	130520	Symbol	axiom_node_get_node_type		129854						
ANR	130521	Symbol	axiom_element_get_localname		129854						
ANR	130522	Symbol	arr_list -> size		129854						
ANR	130523	Symbol	Environment :: getEnv ( ) -> log		129854						
ANR	130524	Symbol	text_value		129854						
ANR	130525	Symbol	* this		129854						
ANR	130526	Symbol	axiom_node_get_next_sibling		129854						
ANR	130527	Symbol	axiom_node_get_first_child		129854						
ANR	130528	Symbol	arr_list		129854						
ANR	130529	Symbol	tmp_node		129854						
ANR	130530	Symbol	axutil_strcmp		129854						
ANR	130531	Symbol	* Environment :: getEnv		129854						
ANR	130532	Symbol	true		129854						
ANR	130533	Symbol	axutil_qname_equals		129854						
ANR	130534	Symbol	element -> deserialize		129854						
ANR	130535	Symbol	status		129854						
ANR	130536	Function	AviaryQuery :: GetJobStatusResponse :: isParticle	232:10:9833:9986							
ANR	130537	FunctionDef	AviaryQuery :: GetJobStatusResponse :: isParticle ()		130536	0					
ANR	130538	CompoundStatement		234:10:9915:9986	130536	0					
ANR	130539	ReturnStatement	return false ;	236:17:9947:9959	130536	0	True				
ANR	130540	Identifier	false		130536	0					
ANR	130541	ReturnType	bool WSF_CALL		130536	1					
ANR	130542	Identifier	AviaryQuery :: GetJobStatusResponse :: isParticle		130536	2					
ANR	130543	ParameterList			130536	3					
ANR	130544	CFGEntryNode	ENTRY		130536		True				
ANR	130545	CFGExitNode	EXIT		130536		True				
ANR	130546	Symbol	false		130536						
ANR	130547	Function	AviaryQuery :: GetJobStatusResponse :: declareParentNamespaces	241:10:10000:10332							
ANR	130548	FunctionDef	"AviaryQuery :: GetJobStatusResponse :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		130547	0					
ANR	130549	CompoundStatement		245:10:10214:10332	130547	0					
ANR	130550	ReturnType	void WSF_CALL		130547	1					
ANR	130551	Identifier	AviaryQuery :: GetJobStatusResponse :: declareParentNamespaces		130547	2					
ANR	130552	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		130547	3					
ANR	130553	Parameter	axiom_element_t * parent_element	243:20:10104:10134	130547	0	True				
ANR	130554	ParameterType	axiom_element_t *		130547	0					
ANR	130555	Identifier	parent_element		130547	1					
ANR	130556	Parameter	axutil_hash_t * namespaces	244:20:10157:10181	130547	1	True				
ANR	130557	ParameterType	axutil_hash_t *		130547	0					
ANR	130558	Identifier	namespaces		130547	1					
ANR	130559	Parameter	int * next_ns_index	244:47:10184:10201	130547	2	True				
ANR	130560	ParameterType	int *		130547	0					
ANR	130561	Identifier	next_ns_index		130547	1					
ANR	130562	CFGEntryNode	ENTRY		130547		True				
ANR	130563	CFGExitNode	EXIT		130547		True				
ANR	130564	Symbol	parent_element		130547						
ANR	130565	Symbol	next_ns_index		130547						
ANR	130566	Symbol	namespaces		130547						
ANR	130567	Function	AviaryQuery :: GetJobStatusResponse :: serialize	253:22:10375:16684							
ANR	130568	FunctionDef	"AviaryQuery :: GetJobStatusResponse :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		130567	0					
ANR	130569	CompoundStatement		259:8:10579:16684	130567	0					
ANR	130570	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	263:9:10626:10659	130567	0	True				
ANR	130571	IdentifierDecl	* current_node = NULL		130567	0					
ANR	130572	IdentifierDeclType	axiom_node_t *		130567	0					
ANR	130573	Identifier	current_node		130567	1					
ANR	130574	AssignmentExpression	* current_node = NULL		130567	2		=			
ANR	130575	Identifier	NULL		130567	0					
ANR	130576	Identifier	NULL		130567	1					
ANR	130577	IdentifierDeclStatement	int tag_closed = 0 ;	264:9:10670:10688	130567	1	True				
ANR	130578	IdentifierDecl	tag_closed = 0		130567	0					
ANR	130579	IdentifierDeclType	int		130567	0					
ANR	130580	Identifier	tag_closed		130567	1					
ANR	130581	AssignmentExpression	tag_closed = 0		130567	2		=			
ANR	130582	Identifier	tag_closed		130567	0					
ANR	130583	PrimaryExpression	0		130567	1					
ANR	130584	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	268:16:10727:10756	130567	2	True				
ANR	130585	IdentifierDecl	* ns1 = NULL		130567	0					
ANR	130586	IdentifierDeclType	axiom_namespace_t *		130567	0					
ANR	130587	Identifier	ns1		130567	1					
ANR	130588	AssignmentExpression	* ns1 = NULL		130567	2		=			
ANR	130589	Identifier	NULL		130567	0					
ANR	130590	Identifier	NULL		130567	1					
ANR	130591	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	270:16:10775:10805	130567	3	True				
ANR	130592	IdentifierDecl	* qname_uri = NULL		130567	0					
ANR	130593	IdentifierDeclType	axis2_char_t *		130567	0					
ANR	130594	Identifier	qname_uri		130567	1					
ANR	130595	AssignmentExpression	* qname_uri = NULL		130567	2		=			
ANR	130596	Identifier	NULL		130567	0					
ANR	130597	Identifier	NULL		130567	1					
ANR	130598	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	271:16:10823:10856	130567	4	True				
ANR	130599	IdentifierDecl	* qname_prefix = NULL		130567	0					
ANR	130600	IdentifierDeclType	axis2_char_t *		130567	0					
ANR	130601	Identifier	qname_prefix		130567	1					
ANR	130602	AssignmentExpression	* qname_prefix = NULL		130567	2		=			
ANR	130603	Identifier	NULL		130567	0					
ANR	130604	Identifier	NULL		130567	1					
ANR	130605	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	272:16:10874:10903	130567	5	True				
ANR	130606	IdentifierDecl	* p_prefix = NULL		130567	0					
ANR	130607	IdentifierDeclType	axis2_char_t *		130567	0					
ANR	130608	Identifier	p_prefix		130567	1					
ANR	130609	AssignmentExpression	* p_prefix = NULL		130567	2		=			
ANR	130610	Identifier	NULL		130567	0					
ANR	130611	Identifier	NULL		130567	1					
ANR	130612	IdentifierDeclStatement	int i = 0 ;	274:15:10933:10942	130567	6	True				
ANR	130613	IdentifierDecl	i = 0		130567	0					
ANR	130614	IdentifierDeclType	int		130567	0					
ANR	130615	Identifier	i		130567	1					
ANR	130616	AssignmentExpression	i = 0		130567	2		=			
ANR	130617	Identifier	i		130567	0					
ANR	130618	PrimaryExpression	0		130567	1					
ANR	130619	IdentifierDeclStatement	int count = 0 ;	275:15:10959:10972	130567	7	True				
ANR	130620	IdentifierDecl	count = 0		130567	0					
ANR	130621	IdentifierDeclType	int		130567	0					
ANR	130622	Identifier	count		130567	1					
ANR	130623	AssignmentExpression	count = 0		130567	2		=			
ANR	130624	Identifier	count		130567	0					
ANR	130625	PrimaryExpression	0		130567	1					
ANR	130626	IdentifierDeclStatement	void * element = NULL ;	276:15:10989:11009	130567	8	True				
ANR	130627	IdentifierDecl	* element = NULL		130567	0					
ANR	130628	IdentifierDeclType	void *		130567	0					
ANR	130629	Identifier	element		130567	1					
ANR	130630	AssignmentExpression	* element = NULL		130567	2		=			
ANR	130631	Identifier	NULL		130567	0					
ANR	130632	Identifier	NULL		130567	1					
ANR	130633	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	278:20:11045:11095	130567	9	True				
ANR	130634	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		130567	0					
ANR	130635	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		130567	0					
ANR	130636	Identifier	text_value_1		130567	1					
ANR	130637	Identifier	ADB_DEFAULT_DIGIT_LIMIT		130567	2					
ANR	130638	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	280:15:11133:11169	130567	10	True				
ANR	130639	IdentifierDecl	* start_input_str = NULL		130567	0					
ANR	130640	IdentifierDeclType	axis2_char_t *		130567	0					
ANR	130641	Identifier	start_input_str		130567	1					
ANR	130642	AssignmentExpression	* start_input_str = NULL		130567	2		=			
ANR	130643	Identifier	NULL		130567	0					
ANR	130644	Identifier	NULL		130567	1					
ANR	130645	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	281:15:11186:11220	130567	11	True				
ANR	130646	IdentifierDecl	* end_input_str = NULL		130567	0					
ANR	130647	IdentifierDeclType	axis2_char_t *		130567	0					
ANR	130648	Identifier	end_input_str		130567	1					
ANR	130649	AssignmentExpression	* end_input_str = NULL		130567	2		=			
ANR	130650	Identifier	NULL		130567	0					
ANR	130651	Identifier	NULL		130567	1					
ANR	130652	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	282:15:11237:11273	130567	12	True				
ANR	130653	IdentifierDecl	start_input_str_len = 0		130567	0					
ANR	130654	IdentifierDeclType	unsigned int		130567	0					
ANR	130655	Identifier	start_input_str_len		130567	1					
ANR	130656	AssignmentExpression	start_input_str_len = 0		130567	2		=			
ANR	130657	Identifier	start_input_str_len		130567	0					
ANR	130658	PrimaryExpression	0		130567	1					
ANR	130659	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	283:15:11290:11324	130567	13	True				
ANR	130660	IdentifierDecl	end_input_str_len = 0		130567	0					
ANR	130661	IdentifierDeclType	unsigned int		130567	0					
ANR	130662	Identifier	end_input_str_len		130567	1					
ANR	130663	AssignmentExpression	end_input_str_len = 0		130567	2		=			
ANR	130664	Identifier	end_input_str_len		130567	0					
ANR	130665	PrimaryExpression	0		130567	1					
ANR	130666	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	286:15:11367:11406	130567	14	True				
ANR	130667	IdentifierDecl	* data_source = NULL		130567	0					
ANR	130668	IdentifierDeclType	axiom_data_source_t *		130567	0					
ANR	130669	Identifier	data_source		130567	1					
ANR	130670	AssignmentExpression	* data_source = NULL		130567	2		=			
ANR	130671	Identifier	NULL		130567	0					
ANR	130672	Identifier	NULL		130567	1					
ANR	130673	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	287:15:11423:11453	130567	15	True				
ANR	130674	IdentifierDecl	* stream = NULL		130567	0					
ANR	130675	IdentifierDeclType	axutil_stream_t *		130567	0					
ANR	130676	Identifier	stream		130567	1					
ANR	130677	AssignmentExpression	* stream = NULL		130567	2		=			
ANR	130678	Identifier	NULL		130567	0					
ANR	130679	Identifier	NULL		130567	1					
ANR	130680	IdentifierDeclStatement	int next_ns_index_value = 0 ;	290:16:11486:11513	130567	16	True				
ANR	130681	IdentifierDecl	next_ns_index_value = 0		130567	0					
ANR	130682	IdentifierDeclType	int		130567	0					
ANR	130683	Identifier	next_ns_index_value		130567	1					
ANR	130684	AssignmentExpression	next_ns_index_value = 0		130567	2		=			
ANR	130685	Identifier	next_ns_index_value		130567	0					
ANR	130686	PrimaryExpression	0		130567	1					
ANR	130687	ExpressionStatement	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )	292:20:11549:11601	130567	17	True				
ANR	130688	AssignmentExpression	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )		130567	0		=			
ANR	130689	Identifier	namespaces		130567	0					
ANR	130690	CallExpression	axutil_hash_make ( Environment :: getEnv ( ) )		130567	1					
ANR	130691	Callee	axutil_hash_make		130567	0					
ANR	130692	Identifier	axutil_hash_make		130567	0					
ANR	130693	ArgumentList	Environment :: getEnv ( )		130567	1					
ANR	130694	Argument	Environment :: getEnv ( )		130567	0					
ANR	130695	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130696	Callee	Environment :: getEnv		130567	0					
ANR	130697	Identifier	Environment :: getEnv		130567	0					
ANR	130698	ArgumentList			130567	1					
ANR	130699	ExpressionStatement	next_ns_index = & next_ns_index_value	293:20:11623:11659	130567	18	True				
ANR	130700	AssignmentExpression	next_ns_index = & next_ns_index_value		130567	0		=			
ANR	130701	Identifier	next_ns_index		130567	0					
ANR	130702	UnaryOperationExpression	& next_ns_index_value		130567	1					
ANR	130703	UnaryOperator	&		130567	0					
ANR	130704	Identifier	next_ns_index_value		130567	1					
ANR	130705	ExpressionStatement	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"	295:27:11710:11896	130567	19	True				
ANR	130706	AssignmentExpression	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		130567	0		=			
ANR	130707	Identifier	ns1		130567	0					
ANR	130708	CallExpression	"axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		130567	1					
ANR	130709	Callee	axiom_namespace_create		130567	0					
ANR	130710	Identifier	axiom_namespace_create		130567	0					
ANR	130711	ArgumentList	Environment :: getEnv ( )		130567	1					
ANR	130712	Argument	Environment :: getEnv ( )		130567	0					
ANR	130713	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130714	Callee	Environment :: getEnv		130567	0					
ANR	130715	Identifier	Environment :: getEnv		130567	0					
ANR	130716	ArgumentList			130567	1					
ANR	130717	Argument	"""http://query.aviary.grid.redhat.com"""		130567	1					
ANR	130718	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		130567	0					
ANR	130719	Argument	"""n"""		130567	2					
ANR	130720	PrimaryExpression	"""n"""		130567	0					
ANR	130721	ExpressionStatement	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"	298:27:11926:12058	130567	20	True				
ANR	130722	CallExpression	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"		130567	0					
ANR	130723	Callee	axutil_hash_set		130567	0					
ANR	130724	Identifier	axutil_hash_set		130567	0					
ANR	130725	ArgumentList	namespaces		130567	1					
ANR	130726	Argument	namespaces		130567	0					
ANR	130727	Identifier	namespaces		130567	0					
ANR	130728	Argument	"""http://query.aviary.grid.redhat.com"""		130567	1					
ANR	130729	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		130567	0					
ANR	130730	Argument	AXIS2_HASH_KEY_STRING		130567	2					
ANR	130731	Identifier	AXIS2_HASH_KEY_STRING		130567	0					
ANR	130732	Argument	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		130567	3					
ANR	130733	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		130567	0					
ANR	130734	Callee	axutil_strdup		130567	0					
ANR	130735	Identifier	axutil_strdup		130567	0					
ANR	130736	ArgumentList	Environment :: getEnv ( )		130567	1					
ANR	130737	Argument	Environment :: getEnv ( )		130567	0					
ANR	130738	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130739	Callee	Environment :: getEnv		130567	0					
ANR	130740	Identifier	Environment :: getEnv		130567	0					
ANR	130741	ArgumentList			130567	1					
ANR	130742	Argument	"""n"""		130567	1					
ANR	130743	PrimaryExpression	"""n"""		130567	0					
ANR	130744	ExpressionStatement	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobStatusResponse"" , ns1 , & parent )"	301:20:12126:12232	130567	21	True				
ANR	130745	AssignmentExpression	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobStatusResponse"" , ns1 , & parent )"		130567	0		=			
ANR	130746	Identifier	parent_element		130567	0					
ANR	130747	CallExpression	"axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobStatusResponse"" , ns1 , & parent )"		130567	1					
ANR	130748	Callee	axiom_element_create		130567	0					
ANR	130749	Identifier	axiom_element_create		130567	0					
ANR	130750	ArgumentList	Environment :: getEnv ( )		130567	1					
ANR	130751	Argument	Environment :: getEnv ( )		130567	0					
ANR	130752	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130753	Callee	Environment :: getEnv		130567	0					
ANR	130754	Identifier	Environment :: getEnv		130567	0					
ANR	130755	ArgumentList			130567	1					
ANR	130756	Argument	NULL		130567	1					
ANR	130757	Identifier	NULL		130567	0					
ANR	130758	Argument	"""GetJobStatusResponse"""		130567	2					
ANR	130759	PrimaryExpression	"""GetJobStatusResponse"""		130567	0					
ANR	130760	Argument	ns1		130567	3					
ANR	130761	Identifier	ns1		130567	0					
ANR	130762	Argument	& parent		130567	4					
ANR	130763	UnaryOperationExpression	& parent		130567	0					
ANR	130764	UnaryOperator	&		130567	0					
ANR	130765	Identifier	parent		130567	1					
ANR	130766	ExpressionStatement	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"	304:20:12296:12375	130567	22	True				
ANR	130767	CallExpression	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"		130567	0					
ANR	130768	Callee	axiom_element_set_namespace		130567	0					
ANR	130769	Identifier	axiom_element_set_namespace		130567	0					
ANR	130770	ArgumentList	parent_element		130567	1					
ANR	130771	Argument	parent_element		130567	0					
ANR	130772	Identifier	parent_element		130567	0					
ANR	130773	Argument	Environment :: getEnv ( )		130567	1					
ANR	130774	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130775	Callee	Environment :: getEnv		130567	0					
ANR	130776	Identifier	Environment :: getEnv		130567	0					
ANR	130777	ArgumentList			130567	1					
ANR	130778	Argument	ns1		130567	2					
ANR	130779	Identifier	ns1		130567	0					
ANR	130780	Argument	parent		130567	3					
ANR	130781	Identifier	parent		130567	0					
ANR	130782	ExpressionStatement	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"	308:20:12412:12496	130567	23	True				
ANR	130783	AssignmentExpression	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		130567	0		=			
ANR	130784	Identifier	data_source		130567	0					
ANR	130785	CallExpression	"axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		130567	1					
ANR	130786	Callee	axiom_data_source_create		130567	0					
ANR	130787	Identifier	axiom_data_source_create		130567	0					
ANR	130788	ArgumentList	Environment :: getEnv ( )		130567	1					
ANR	130789	Argument	Environment :: getEnv ( )		130567	0					
ANR	130790	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130791	Callee	Environment :: getEnv		130567	0					
ANR	130792	Identifier	Environment :: getEnv		130567	0					
ANR	130793	ArgumentList			130567	1					
ANR	130794	Argument	parent		130567	1					
ANR	130795	Identifier	parent		130567	0					
ANR	130796	Argument	& current_node		130567	2					
ANR	130797	UnaryOperationExpression	& current_node		130567	0					
ANR	130798	UnaryOperator	&		130567	0					
ANR	130799	Identifier	current_node		130567	1					
ANR	130800	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	309:20:12518:12591	130567	24	True				
ANR	130801	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		130567	0		=			
ANR	130802	Identifier	stream		130567	0					
ANR	130803	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		130567	1					
ANR	130804	Callee	axiom_data_source_get_stream		130567	0					
ANR	130805	Identifier	axiom_data_source_get_stream		130567	0					
ANR	130806	ArgumentList	data_source		130567	1					
ANR	130807	Argument	data_source		130567	0					
ANR	130808	Identifier	data_source		130567	0					
ANR	130809	Argument	Environment :: getEnv ( )		130567	1					
ANR	130810	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130811	Callee	Environment :: getEnv		130567	0					
ANR	130812	Identifier	Environment :: getEnv		130567	0					
ANR	130813	ArgumentList			130567	1					
ANR	130814	ExpressionStatement	p_prefix = NULL	311:23:12635:12650	130567	25	True				
ANR	130815	AssignmentExpression	p_prefix = NULL		130567	0		=			
ANR	130816	Identifier	p_prefix		130567	0					
ANR	130817	Identifier	NULL		130567	1					
ANR	130818	IfStatement	if ( ! isValidJobs )		130567	26					
ANR	130819	Condition	! isValidJobs	314:23:12699:12710	130567	0	True				
ANR	130820	UnaryOperationExpression	! isValidJobs		130567	0					
ANR	130821	UnaryOperator	!		130567	0					
ANR	130822	Identifier	isValidJobs		130567	1					
ANR	130823	CompoundStatement		57:19:2152:2152	130567	1					
ANR	130824	ElseStatement	else		130567	0					
ANR	130825	CompoundStatement		64:19:2374:2374	130567	0					
ANR	130826	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"	323:21:12977:13202	130567	0	True				
ANR	130827	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		130567	0		=			
ANR	130828	Identifier	start_input_str		130567	0					
ANR	130829	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		130567	1					
ANR	130830	CastTarget	axis2_char_t *		130567	0					
ANR	130831	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		130567	1					
ANR	130832	Callee	AXIS2_MALLOC		130567	0					
ANR	130833	Identifier	AXIS2_MALLOC		130567	0					
ANR	130834	ArgumentList	Environment :: getEnv ( ) -> allocator		130567	1					
ANR	130835	Argument	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	130836	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	130837	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130838	Callee	Environment :: getEnv		130567	0					
ANR	130839	Identifier	Environment :: getEnv		130567	0					
ANR	130840	ArgumentList			130567	1					
ANR	130841	Identifier	allocator		130567	1					
ANR	130842	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		130567	1					
ANR	130843	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		130567	0		*			
ANR	130844	SizeofExpression	sizeof ( axis2_char_t )		130567	0					
ANR	130845	Sizeof	sizeof		130567	0					
ANR	130846	SizeofOperand	axis2_char_t		130567	1					
ANR	130847	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		130567	1		+			
ANR	130848	PrimaryExpression	4		130567	0					
ANR	130849	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		130567	1		+			
ANR	130850	CallExpression	axutil_strlen ( p_prefix )		130567	0					
ANR	130851	Callee	axutil_strlen		130567	0					
ANR	130852	Identifier	axutil_strlen		130567	0					
ANR	130853	ArgumentList	p_prefix		130567	1					
ANR	130854	Argument	p_prefix		130567	0					
ANR	130855	Identifier	p_prefix		130567	0					
ANR	130856	CallExpression	"axutil_strlen ( ""jobs"" )"		130567	1					
ANR	130857	Callee	axutil_strlen		130567	0					
ANR	130858	Identifier	axutil_strlen		130567	0					
ANR	130859	ArgumentList	"""jobs"""		130567	1					
ANR	130860	Argument	"""jobs"""		130567	0					
ANR	130861	PrimaryExpression	"""jobs"""		130567	0					
ANR	130862	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"	328:21:13328:13516	130567	1	True				
ANR	130863	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		130567	0		=			
ANR	130864	Identifier	end_input_str		130567	0					
ANR	130865	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		130567	1					
ANR	130866	CastTarget	axis2_char_t *		130567	0					
ANR	130867	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		130567	1					
ANR	130868	Callee	AXIS2_MALLOC		130567	0					
ANR	130869	Identifier	AXIS2_MALLOC		130567	0					
ANR	130870	ArgumentList	Environment :: getEnv ( ) -> allocator		130567	1					
ANR	130871	Argument	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	130872	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	130873	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	130874	Callee	Environment :: getEnv		130567	0					
ANR	130875	Identifier	Environment :: getEnv		130567	0					
ANR	130876	ArgumentList			130567	1					
ANR	130877	Identifier	allocator		130567	1					
ANR	130878	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		130567	1					
ANR	130879	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		130567	0		*			
ANR	130880	SizeofExpression	sizeof ( axis2_char_t )		130567	0					
ANR	130881	Sizeof	sizeof		130567	0					
ANR	130882	SizeofOperand	axis2_char_t		130567	1					
ANR	130883	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		130567	1		+			
ANR	130884	PrimaryExpression	5		130567	0					
ANR	130885	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		130567	1		+			
ANR	130886	CallExpression	axutil_strlen ( p_prefix )		130567	0					
ANR	130887	Callee	axutil_strlen		130567	0					
ANR	130888	Identifier	axutil_strlen		130567	0					
ANR	130889	ArgumentList	p_prefix		130567	1					
ANR	130890	Argument	p_prefix		130567	0					
ANR	130891	Identifier	p_prefix		130567	0					
ANR	130892	CallExpression	"axutil_strlen ( ""jobs"" )"		130567	1					
ANR	130893	Callee	axutil_strlen		130567	0					
ANR	130894	Identifier	axutil_strlen		130567	0					
ANR	130895	ArgumentList	"""jobs"""		130567	1					
ANR	130896	Argument	"""jobs"""		130567	0					
ANR	130897	PrimaryExpression	"""jobs"""		130567	0					
ANR	130898	IfStatement	if ( property_Jobs != NULL )		130567	2					
ANR	130899	Condition	property_Jobs != NULL	339:25:13803:13823	130567	0	True				
ANR	130900	EqualityExpression	property_Jobs != NULL		130567	0		!=			
ANR	130901	Identifier	property_Jobs		130567	0					
ANR	130902	Identifier	NULL		130567	1					
ANR	130903	CompoundStatement		82:21:3267:3267	130567	1					
ANR	130904	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sjobs"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	343:28:13903:14078	130567	0	True				
ANR	130905	CallExpression	"sprintf ( start_input_str , ""<%s%sjobs"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		130567	0					
ANR	130906	Callee	sprintf		130567	0					
ANR	130907	Identifier	sprintf		130567	0					
ANR	130908	ArgumentList	start_input_str		130567	1					
ANR	130909	Argument	start_input_str		130567	0					
ANR	130910	Identifier	start_input_str		130567	0					
ANR	130911	Argument	"""<%s%sjobs"""		130567	1					
ANR	130912	PrimaryExpression	"""<%s%sjobs"""		130567	0					
ANR	130913	Argument	"p_prefix ? p_prefix : """""		130567	2					
ANR	130914	ConditionalExpression	"p_prefix ? p_prefix : """""		130567	0					
ANR	130915	Condition	p_prefix		130567	0					
ANR	130916	Identifier	p_prefix		130567	0					
ANR	130917	Identifier	p_prefix		130567	1					
ANR	130918	PrimaryExpression	""""""		130567	2					
ANR	130919	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		130567	3					
ANR	130920	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		130567	0					
ANR	130921	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		130567	0					
ANR	130922	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		130567	0		&&			
ANR	130923	Identifier	p_prefix		130567	0					
ANR	130924	CallExpression	"axutil_strcmp ( p_prefix , """" )"		130567	1					
ANR	130925	Callee	axutil_strcmp		130567	0					
ANR	130926	Identifier	axutil_strcmp		130567	0					
ANR	130927	ArgumentList	p_prefix		130567	1					
ANR	130928	Argument	p_prefix		130567	0					
ANR	130929	Identifier	p_prefix		130567	0					
ANR	130930	Argument	""""""		130567	1					
ANR	130931	PrimaryExpression	""""""		130567	0					
ANR	130932	PrimaryExpression	""":"""		130567	1					
ANR	130933	PrimaryExpression	""""""		130567	2					
ANR	130934	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	347:25:14134:14186	130567	1	True				
ANR	130935	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		130567	0		=			
ANR	130936	Identifier	start_input_str_len		130567	0					
ANR	130937	CallExpression	axutil_strlen ( start_input_str )		130567	1					
ANR	130938	Callee	axutil_strlen		130567	0					
ANR	130939	Identifier	axutil_strlen		130567	0					
ANR	130940	ArgumentList	start_input_str		130567	1					
ANR	130941	Argument	start_input_str		130567	0					
ANR	130942	Identifier	start_input_str		130567	0					
ANR	130943	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sjobs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	349:25:14214:14389	130567	2	True				
ANR	130944	CallExpression	"sprintf ( end_input_str , ""</%s%sjobs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		130567	0					
ANR	130945	Callee	sprintf		130567	0					
ANR	130946	Identifier	sprintf		130567	0					
ANR	130947	ArgumentList	end_input_str		130567	1					
ANR	130948	Argument	end_input_str		130567	0					
ANR	130949	Identifier	end_input_str		130567	0					
ANR	130950	Argument	"""</%s%sjobs>"""		130567	1					
ANR	130951	PrimaryExpression	"""</%s%sjobs>"""		130567	0					
ANR	130952	Argument	"p_prefix ? p_prefix : """""		130567	2					
ANR	130953	ConditionalExpression	"p_prefix ? p_prefix : """""		130567	0					
ANR	130954	Condition	p_prefix		130567	0					
ANR	130955	Identifier	p_prefix		130567	0					
ANR	130956	Identifier	p_prefix		130567	1					
ANR	130957	PrimaryExpression	""""""		130567	2					
ANR	130958	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		130567	3					
ANR	130959	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		130567	0					
ANR	130960	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		130567	0					
ANR	130961	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		130567	0		&&			
ANR	130962	Identifier	p_prefix		130567	0					
ANR	130963	CallExpression	"axutil_strcmp ( p_prefix , """" )"		130567	1					
ANR	130964	Callee	axutil_strcmp		130567	0					
ANR	130965	Identifier	axutil_strcmp		130567	0					
ANR	130966	ArgumentList	p_prefix		130567	1					
ANR	130967	Argument	p_prefix		130567	0					
ANR	130968	Identifier	p_prefix		130567	0					
ANR	130969	Argument	""""""		130567	1					
ANR	130970	PrimaryExpression	""""""		130567	0					
ANR	130971	PrimaryExpression	""":"""		130567	1					
ANR	130972	PrimaryExpression	""""""		130567	2					
ANR	130973	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	352:25:14416:14464	130567	3	True				
ANR	130974	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		130567	0		=			
ANR	130975	Identifier	end_input_str_len		130567	0					
ANR	130976	CallExpression	axutil_strlen ( end_input_str )		130567	1					
ANR	130977	Callee	axutil_strlen		130567	0					
ANR	130978	Identifier	axutil_strlen		130567	0					
ANR	130979	ArgumentList	end_input_str		130567	1					
ANR	130980	Argument	end_input_str		130567	0					
ANR	130981	Identifier	end_input_str		130567	0					
ANR	130982	ExpressionStatement	count = property_Jobs -> size ( )	354:25:14492:14521	130567	4	True				
ANR	130983	AssignmentExpression	count = property_Jobs -> size ( )		130567	0		=			
ANR	130984	Identifier	count		130567	0					
ANR	130985	CallExpression	property_Jobs -> size ( )		130567	1					
ANR	130986	Callee	property_Jobs -> size		130567	0					
ANR	130987	PtrMemberAccess	property_Jobs -> size		130567	0					
ANR	130988	Identifier	property_Jobs		130567	0					
ANR	130989	Identifier	size		130567	1					
ANR	130990	ArgumentList			130567	1					
ANR	130991	ForStatement	for ( i = 0 ; i < count ; i ++ )		130567	5					
ANR	130992	ForInit	i = 0 ;	355:29:14552:14557	130567	0	True				
ANR	130993	AssignmentExpression	i = 0		130567	0		=			
ANR	130994	Identifier	i		130567	0					
ANR	130995	PrimaryExpression	0		130567	1					
ANR	130996	Condition	i < count	355:36:14559:14567	130567	1	True				
ANR	130997	RelationalExpression	i < count		130567	0		<			
ANR	130998	Identifier	i		130567	0					
ANR	130999	Identifier	count		130567	1					
ANR	131000	PostIncDecOperationExpression	i ++	355:47:14570:14572	130567	2	True				
ANR	131001	Identifier	i		130567	0					
ANR	131002	IncDec	++		130567	1					
ANR	131003	CompoundStatement		99:28:4050:4104	130567	3					
ANR	131004	IdentifierDeclStatement	AviaryCommon :: JobStatus * element = ( * property_Jobs ) [ i ] ;	357:28:14630:14684	130567	0	True				
ANR	131005	IdentifierDecl	* element = ( * property_Jobs ) [ i ]		130567	0					
ANR	131006	IdentifierDeclType	AviaryCommon :: JobStatus *		130567	0					
ANR	131007	Identifier	element		130567	1					
ANR	131008	AssignmentExpression	* element = ( * property_Jobs ) [ i ]		130567	2		=			
ANR	131009	Identifier	element		130567	0					
ANR	131010	ArrayIndexing	( * property_Jobs ) [ i ]		130567	1					
ANR	131011	UnaryOperationExpression	* property_Jobs		130567	0					
ANR	131012	UnaryOperator	*		130567	0					
ANR	131013	Identifier	property_Jobs		130567	1					
ANR	131014	Identifier	i		130567	1					
ANR	131015	IfStatement	if ( NULL == element )		130567	1					
ANR	131016	Condition	NULL == element	359:31:14718:14732	130567	0	True				
ANR	131017	EqualityExpression	NULL == element		130567	0		==			
ANR	131018	Identifier	NULL		130567	0					
ANR	131019	Identifier	element		130567	1					
ANR	131020	CompoundStatement		102:28:4184:4184	130567	1					
ANR	131021	ContinueStatement	continue ;	361:32:14798:14806	130567	0	True				
ANR	131022	IfStatement	if ( ! element -> isParticle ( ) )		130567	2					
ANR	131023	Condition	! element -> isParticle ( )	372:31:15051:15072	130567	0	True				
ANR	131024	UnaryOperationExpression	! element -> isParticle ( )		130567	0					
ANR	131025	UnaryOperator	!		130567	0					
ANR	131026	CallExpression	element -> isParticle ( )		130567	1					
ANR	131027	Callee	element -> isParticle		130567	0					
ANR	131028	PtrMemberAccess	element -> isParticle		130567	0					
ANR	131029	Identifier	element		130567	0					
ANR	131030	Identifier	isParticle		130567	1					
ANR	131031	ArgumentList			130567	1					
ANR	131032	CompoundStatement		115:28:4523:4523	130567	1					
ANR	131033	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	374:32:15137:15225	130567	0	True				
ANR	131034	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		130567	0					
ANR	131035	Callee	axutil_stream_write		130567	0					
ANR	131036	Identifier	axutil_stream_write		130567	0					
ANR	131037	ArgumentList	stream		130567	1					
ANR	131038	Argument	stream		130567	0					
ANR	131039	Identifier	stream		130567	0					
ANR	131040	Argument	Environment :: getEnv ( )		130567	1					
ANR	131041	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131042	Callee	Environment :: getEnv		130567	0					
ANR	131043	Identifier	Environment :: getEnv		130567	0					
ANR	131044	ArgumentList			130567	1					
ANR	131045	Argument	start_input_str		130567	2					
ANR	131046	Identifier	start_input_str		130567	0					
ANR	131047	Argument	start_input_str_len		130567	3					
ANR	131048	Identifier	start_input_str_len		130567	0					
ANR	131049	ExpressionStatement	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"	376:28:15285:15473	130567	3	True				
ANR	131050	CallExpression	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"		130567	0					
ANR	131051	Callee	element -> serialize		130567	0					
ANR	131052	PtrMemberAccess	element -> serialize		130567	0					
ANR	131053	Identifier	element		130567	0					
ANR	131054	Identifier	serialize		130567	1					
ANR	131055	ArgumentList	current_node		130567	1					
ANR	131056	Argument	current_node		130567	0					
ANR	131057	Identifier	current_node		130567	0					
ANR	131058	Argument	parent_element		130567	1					
ANR	131059	Identifier	parent_element		130567	0					
ANR	131060	Argument	element -> isParticle ( ) || false		130567	2					
ANR	131061	OrExpression	element -> isParticle ( ) || false		130567	0		||			
ANR	131062	CallExpression	element -> isParticle ( )		130567	0					
ANR	131063	Callee	element -> isParticle		130567	0					
ANR	131064	PtrMemberAccess	element -> isParticle		130567	0					
ANR	131065	Identifier	element		130567	0					
ANR	131066	Identifier	isParticle		130567	1					
ANR	131067	ArgumentList			130567	1					
ANR	131068	Identifier	false		130567	1					
ANR	131069	Argument	namespaces		130567	3					
ANR	131070	Identifier	namespaces		130567	0					
ANR	131071	Argument	next_ns_index		130567	4					
ANR	131072	Identifier	next_ns_index		130567	0					
ANR	131073	IfStatement	if ( ! element -> isParticle ( ) )		130567	4					
ANR	131074	Condition	! element -> isParticle ( )	379:31:15535:15556	130567	0	True				
ANR	131075	UnaryOperationExpression	! element -> isParticle ( )		130567	0					
ANR	131076	UnaryOperator	!		130567	0					
ANR	131077	CallExpression	element -> isParticle ( )		130567	1					
ANR	131078	Callee	element -> isParticle		130567	0					
ANR	131079	PtrMemberAccess	element -> isParticle		130567	0					
ANR	131080	Identifier	element		130567	0					
ANR	131081	Identifier	isParticle		130567	1					
ANR	131082	ArgumentList			130567	1					
ANR	131083	CompoundStatement		122:28:5007:5007	130567	1					
ANR	131084	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	381:32:15621:15705	130567	0	True				
ANR	131085	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		130567	0					
ANR	131086	Callee	axutil_stream_write		130567	0					
ANR	131087	Identifier	axutil_stream_write		130567	0					
ANR	131088	ArgumentList	stream		130567	1					
ANR	131089	Argument	stream		130567	0					
ANR	131090	Identifier	stream		130567	0					
ANR	131091	Argument	Environment :: getEnv ( )		130567	1					
ANR	131092	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131093	Callee	Environment :: getEnv		130567	0					
ANR	131094	Identifier	Environment :: getEnv		130567	0					
ANR	131095	ArgumentList			130567	1					
ANR	131096	Argument	end_input_str		130567	2					
ANR	131097	Identifier	end_input_str		130567	0					
ANR	131098	Argument	end_input_str_len		130567	3					
ANR	131099	Identifier	end_input_str_len		130567	0					
ANR	131100	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	388:21:15879:15939	130567	3	True				
ANR	131101	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		130567	0					
ANR	131102	Callee	AXIS2_FREE		130567	0					
ANR	131103	Identifier	AXIS2_FREE		130567	0					
ANR	131104	ArgumentList	Environment :: getEnv ( ) -> allocator		130567	1					
ANR	131105	Argument	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	131106	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	131107	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131108	Callee	Environment :: getEnv		130567	0					
ANR	131109	Identifier	Environment :: getEnv		130567	0					
ANR	131110	ArgumentList			130567	1					
ANR	131111	Identifier	allocator		130567	1					
ANR	131112	Argument	start_input_str		130567	1					
ANR	131113	Identifier	start_input_str		130567	0					
ANR	131114	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	389:21:15962:16020	130567	4	True				
ANR	131115	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		130567	0					
ANR	131116	Callee	AXIS2_FREE		130567	0					
ANR	131117	Identifier	AXIS2_FREE		130567	0					
ANR	131118	ArgumentList	Environment :: getEnv ( ) -> allocator		130567	1					
ANR	131119	Argument	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	131120	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	131121	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131122	Callee	Environment :: getEnv		130567	0					
ANR	131123	Identifier	Environment :: getEnv		130567	0					
ANR	131124	ArgumentList			130567	1					
ANR	131125	Identifier	allocator		130567	1					
ANR	131126	Argument	end_input_str		130567	1					
ANR	131127	Identifier	end_input_str		130567	0					
ANR	131128	IfStatement	if ( namespaces )		130567	27					
ANR	131129	Condition	namespaces	393:22:16083:16092	130567	0	True				
ANR	131130	Identifier	namespaces		130567	0					
ANR	131131	CompoundStatement		138:23:5607:5616	130567	1					
ANR	131132	IdentifierDeclStatement	axutil_hash_index_t * hi ;	395:23:16139:16162	130567	0	True				
ANR	131133	IdentifierDecl	* hi		130567	0					
ANR	131134	IdentifierDeclType	axutil_hash_index_t *		130567	0					
ANR	131135	Identifier	hi		130567	1					
ANR	131136	IdentifierDeclStatement	void * val ;	396:23:16187:16196	130567	1	True				
ANR	131137	IdentifierDecl	* val		130567	0					
ANR	131138	IdentifierDeclType	void *		130567	0					
ANR	131139	Identifier	val		130567	1					
ANR	131140	ForStatement	"for ( hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		130567	2					
ANR	131141	ForInit	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ;"	397:28:16226:16283	130567	0	True				
ANR	131142	AssignmentExpression	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		130567	0		=			
ANR	131143	Identifier	hi		130567	0					
ANR	131144	CallExpression	"axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		130567	1					
ANR	131145	Callee	axutil_hash_first		130567	0					
ANR	131146	Identifier	axutil_hash_first		130567	0					
ANR	131147	ArgumentList	namespaces		130567	1					
ANR	131148	Argument	namespaces		130567	0					
ANR	131149	Identifier	namespaces		130567	0					
ANR	131150	Argument	Environment :: getEnv ( )		130567	1					
ANR	131151	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131152	Callee	Environment :: getEnv		130567	0					
ANR	131153	Identifier	Environment :: getEnv		130567	0					
ANR	131154	ArgumentList			130567	1					
ANR	131155	Condition	hi	397:87:16285:16286	130567	1	True				
ANR	131156	Identifier	hi		130567	0					
ANR	131157	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	397:91:16289:16336	130567	2	True	=			
ANR	131158	Identifier	hi		130567	0					
ANR	131159	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		130567	1					
ANR	131160	Callee	axutil_hash_next		130567	0					
ANR	131161	Identifier	axutil_hash_next		130567	0					
ANR	131162	ArgumentList	Environment :: getEnv ( )		130567	1					
ANR	131163	Argument	Environment :: getEnv ( )		130567	0					
ANR	131164	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131165	Callee	Environment :: getEnv		130567	0					
ANR	131166	Identifier	Environment :: getEnv		130567	0					
ANR	131167	ArgumentList			130567	1					
ANR	131168	Argument	hi		130567	1					
ANR	131169	Identifier	hi		130567	0					
ANR	131170	CompoundStatement		140:23:5782:5782	130567	3					
ANR	131171	ExpressionStatement	"axutil_hash_this ( hi , NULL , NULL , & val )"	399:27:16391:16429	130567	0	True				
ANR	131172	CallExpression	"axutil_hash_this ( hi , NULL , NULL , & val )"		130567	0					
ANR	131173	Callee	axutil_hash_this		130567	0					
ANR	131174	Identifier	axutil_hash_this		130567	0					
ANR	131175	ArgumentList	hi		130567	1					
ANR	131176	Argument	hi		130567	0					
ANR	131177	Identifier	hi		130567	0					
ANR	131178	Argument	NULL		130567	1					
ANR	131179	Identifier	NULL		130567	0					
ANR	131180	Argument	NULL		130567	2					
ANR	131181	Identifier	NULL		130567	0					
ANR	131182	Argument	& val		130567	3					
ANR	131183	UnaryOperationExpression	& val		130567	0					
ANR	131184	UnaryOperator	&		130567	0					
ANR	131185	Identifier	val		130567	1					
ANR	131186	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"	400:27:16458:16507	130567	1	True				
ANR	131187	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"		130567	0					
ANR	131188	Callee	AXIS2_FREE		130567	0					
ANR	131189	Identifier	AXIS2_FREE		130567	0					
ANR	131190	ArgumentList	Environment :: getEnv ( ) -> allocator		130567	1					
ANR	131191	Argument	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	131192	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		130567	0					
ANR	131193	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131194	Callee	Environment :: getEnv		130567	0					
ANR	131195	Identifier	Environment :: getEnv		130567	0					
ANR	131196	ArgumentList			130567	1					
ANR	131197	Identifier	allocator		130567	1					
ANR	131198	Argument	val		130567	1					
ANR	131199	Identifier	val		130567	0					
ANR	131200	ExpressionStatement	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"	402:23:16557:16608	130567	3	True				
ANR	131201	CallExpression	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"		130567	0					
ANR	131202	Callee	axutil_hash_free		130567	0					
ANR	131203	Identifier	axutil_hash_free		130567	0					
ANR	131204	ArgumentList	namespaces		130567	1					
ANR	131205	Argument	namespaces		130567	0					
ANR	131206	Identifier	namespaces		130567	0					
ANR	131207	Argument	Environment :: getEnv ( )		130567	1					
ANR	131208	CallExpression	Environment :: getEnv ( )		130567	0					
ANR	131209	Callee	Environment :: getEnv		130567	0					
ANR	131210	Identifier	Environment :: getEnv		130567	0					
ANR	131211	ArgumentList			130567	1					
ANR	131212	ReturnStatement	return parent ;	406:12:16661:16674	130567	28	True				
ANR	131213	Identifier	parent		130567	0					
ANR	131214	ReturnType	WSF_CALL		130567	1					
ANR	131215	Identifier	AviaryQuery :: GetJobStatusResponse :: serialize		130567	2					
ANR	131216	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		130567	3					
ANR	131217	Parameter	axiom_node_t * parent	254:46:10430:10449	130567	0	True				
ANR	131218	ParameterType	axiom_node_t *		130567	0					
ANR	131219	Identifier	parent		130567	1					
ANR	131220	Parameter	axiom_element_t * parent_element	255:3:10456:10486	130567	1	True				
ANR	131221	ParameterType	axiom_element_t *		130567	0					
ANR	131222	Identifier	parent_element		130567	1					
ANR	131223	Parameter	int parent_tag_closed	256:3:10493:10513	130567	2	True				
ANR	131224	ParameterType	int		130567	0					
ANR	131225	Identifier	parent_tag_closed		130567	1					
ANR	131226	Parameter	axutil_hash_t * namespaces	257:3:10520:10544	130567	3	True				
ANR	131227	ParameterType	axutil_hash_t *		130567	0					
ANR	131228	Identifier	namespaces		130567	1					
ANR	131229	Parameter	int * next_ns_index	258:3:10551:10568	130567	4	True				
ANR	131230	ParameterType	int *		130567	0					
ANR	131231	Identifier	next_ns_index		130567	1					
ANR	131232	CFGEntryNode	ENTRY		130567		True				
ANR	131233	CFGExitNode	EXIT		130567		True				
ANR	131234	Symbol	& val		130567						
ANR	131235	Symbol	parent		130567						
ANR	131236	Symbol	hi		130567						
ANR	131237	Symbol	current_node		130567						
ANR	131238	Symbol	axutil_strlen		130567						
ANR	131239	Symbol	property_Jobs		130567						
ANR	131240	Symbol	& next_ns_index_value		130567						
ANR	131241	Symbol	ns1		130567						
ANR	131242	Symbol	& current_node		130567						
ANR	131243	Symbol	axutil_hash_next		130567						
ANR	131244	Symbol	axutil_hash_make		130567						
ANR	131245	Symbol	element		130567						
ANR	131246	Symbol	val		130567						
ANR	131247	Symbol	axiom_data_source_get_stream		130567						
ANR	131248	Symbol	NULL		130567						
ANR	131249	Symbol	count		130567						
ANR	131250	Symbol	parent_tag_closed		130567						
ANR	131251	Symbol	next_ns_index		130567						
ANR	131252	Symbol	data_source		130567						
ANR	131253	Symbol	start_input_str_len		130567						
ANR	131254	Symbol	axiom_data_source_create		130567						
ANR	131255	Symbol	qname_prefix		130567						
ANR	131256	Symbol	next_ns_index_value		130567						
ANR	131257	Symbol	axutil_strcmp		130567						
ANR	131258	Symbol	end_input_str		130567						
ANR	131259	Symbol	& parent		130567						
ANR	131260	Symbol	namespaces		130567						
ANR	131261	Symbol	AXIS2_HASH_KEY_STRING		130567						
ANR	131262	Symbol	Environment :: getEnv		130567						
ANR	131263	Symbol	* element		130567						
ANR	131264	Symbol	axiom_namespace_create		130567						
ANR	131265	Symbol	qname_uri		130567						
ANR	131266	Symbol	p_prefix		130567						
ANR	131267	Symbol	* property_Jobs		130567						
ANR	131268	Symbol	* * property_Jobs		130567						
ANR	131269	Symbol	stream		130567						
ANR	131270	Symbol	text_value_1		130567						
ANR	131271	Symbol	AXIS2_MALLOC		130567						
ANR	131272	Symbol	Environment :: getEnv ( ) -> allocator		130567						
ANR	131273	Symbol	property_Jobs -> size		130567						
ANR	131274	Symbol	parent_element		130567						
ANR	131275	Symbol	end_input_str_len		130567						
ANR	131276	Symbol	isValidJobs		130567						
ANR	131277	Symbol	tag_closed		130567						
ANR	131278	Symbol	false		130567						
ANR	131279	Symbol	i		130567						
ANR	131280	Symbol	start_input_str		130567						
ANR	131281	Symbol	* i		130567						
ANR	131282	Symbol	axutil_hash_first		130567						
ANR	131283	Symbol	* Environment :: getEnv		130567						
ANR	131284	Symbol	axutil_strdup		130567						
ANR	131285	Symbol	element -> isParticle		130567						
ANR	131286	Symbol	axiom_element_create		130567						
ANR	131287	Function	AviaryQuery :: GetJobStatusResponse :: getProperty1	415:51:16834:16965							
ANR	131288	FunctionDef	AviaryQuery :: GetJobStatusResponse :: getProperty1 ()		131287	0					
ANR	131289	CompoundStatement		417:12:16917:16965	131287	0					
ANR	131290	ReturnStatement	return getJobs ( ) ;	418:16:16935:16951	131287	0	True				
ANR	131291	CallExpression	getJobs ( )		131287	0					
ANR	131292	Callee	getJobs		131287	0					
ANR	131293	Identifier	getJobs		131287	0					
ANR	131294	ArgumentList			131287	1					
ANR	131295	ReturnType	WSF_CALL		131287	1					
ANR	131296	Identifier	AviaryQuery :: GetJobStatusResponse :: getProperty1		131287	2					
ANR	131297	ParameterList			131287	3					
ANR	131298	CFGEntryNode	ENTRY		131287		True				
ANR	131299	CFGExitNode	EXIT		131287		True				
ANR	131300	Symbol	getJobs		131287						
ANR	131301	Function	AviaryQuery :: GetJobStatusResponse :: getJobs	424:51:17083:17215							
ANR	131302	FunctionDef	AviaryQuery :: GetJobStatusResponse :: getJobs ()		131301	0					
ANR	131303	CompoundStatement		426:13:17162:17215	131301	0					
ANR	131304	ReturnStatement	return property_Jobs ;	427:16:17180:17200	131301	0	True				
ANR	131305	Identifier	property_Jobs		131301	0					
ANR	131306	ReturnType	WSF_CALL		131301	1					
ANR	131307	Identifier	AviaryQuery :: GetJobStatusResponse :: getJobs		131301	2					
ANR	131308	ParameterList			131301	3					
ANR	131309	CFGEntryNode	ENTRY		131301		True				
ANR	131310	CFGExitNode	EXIT		131301		True				
ANR	131311	Symbol	property_Jobs		131301						
ANR	131312	Function	AviaryQuery :: GetJobStatusResponse :: setJobs	433:12:17293:18880							
ANR	131313	FunctionDef	AviaryQuery :: GetJobStatusResponse :: setJobs (std :: vector < AviaryCommon :: JobStatus * > * arg_Jobs)		131312	0					
ANR	131314	CompoundStatement		436:13:17446:18880	131312	0					
ANR	131315	IdentifierDeclStatement	int size = 0 ;	438:17:17482:17494	131312	0	True				
ANR	131316	IdentifierDecl	size = 0		131312	0					
ANR	131317	IdentifierDeclType	int		131312	0					
ANR	131318	Identifier	size		131312	1					
ANR	131319	AssignmentExpression	size = 0		131312	2		=			
ANR	131320	Identifier	size		131312	0					
ANR	131321	PrimaryExpression	0		131312	1					
ANR	131322	IdentifierDeclStatement	int i = 0 ;	439:17:17513:17522	131312	1	True				
ANR	131323	IdentifierDecl	i = 0		131312	0					
ANR	131324	IdentifierDeclType	int		131312	0					
ANR	131325	Identifier	i		131312	1					
ANR	131326	AssignmentExpression	i = 0		131312	2		=			
ANR	131327	Identifier	i		131312	0					
ANR	131328	PrimaryExpression	0		131312	1					
ANR	131329	IdentifierDeclStatement	bool non_nil_exists = false ;	440:17:17541:17568	131312	2	True				
ANR	131330	IdentifierDecl	non_nil_exists = false		131312	0					
ANR	131331	IdentifierDeclType	bool		131312	0					
ANR	131332	Identifier	non_nil_exists		131312	1					
ANR	131333	AssignmentExpression	non_nil_exists = false		131312	2		=			
ANR	131334	Identifier	false		131312	0					
ANR	131335	Identifier	false		131312	1					
ANR	131336	IfStatement	if ( isValidJobs && arg_Jobs == property_Jobs )		131312	3					
ANR	131337	Condition	isValidJobs && arg_Jobs == property_Jobs	443:19:17607:17670	131312	0	True				
ANR	131338	AndExpression	isValidJobs && arg_Jobs == property_Jobs		131312	0		&&			
ANR	131339	Identifier	isValidJobs		131312	0					
ANR	131340	EqualityExpression	arg_Jobs == property_Jobs		131312	1		==			
ANR	131341	Identifier	arg_Jobs		131312	0					
ANR	131342	Identifier	property_Jobs		131312	1					
ANR	131343	CompoundStatement		10:16:242:242	131312	1					
ANR	131344	ReturnStatement	return true ;	447:20:17732:17743	131312	0	True				
ANR	131345	Identifier	true		131312	0					
ANR	131346	ExpressionStatement	size = arg_Jobs -> size ( )	451:17:17798:17821	131312	4	True				
ANR	131347	AssignmentExpression	size = arg_Jobs -> size ( )		131312	0		=			
ANR	131348	Identifier	size		131312	0					
ANR	131349	CallExpression	arg_Jobs -> size ( )		131312	1					
ANR	131350	Callee	arg_Jobs -> size		131312	0					
ANR	131351	PtrMemberAccess	arg_Jobs -> size		131312	0					
ANR	131352	Identifier	arg_Jobs		131312	0					
ANR	131353	Identifier	size		131312	1					
ANR	131354	ArgumentList			131312	1					
ANR	131355	IfStatement	if ( size < 0 )		131312	5					
ANR	131356	Condition	size < 0	453:21:17862:17869	131312	0	True				
ANR	131357	RelationalExpression	size < 0		131312	0		<			
ANR	131358	Identifier	size		131312	0					
ANR	131359	PrimaryExpression	0		131312	1					
ANR	131360	CompoundStatement		19:17:442:442	131312	1					
ANR	131361	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs has less than minOccurs(0)"" )"	455:21:17912:18003	131312	0	True				
ANR	131362	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs has less than minOccurs(0)"" )"		131312	0					
ANR	131363	Callee	WSF_LOG_ERROR_MSG		131312	0					
ANR	131364	Identifier	WSF_LOG_ERROR_MSG		131312	0					
ANR	131365	ArgumentList	Environment :: getEnv ( ) -> log		131312	1					
ANR	131366	Argument	Environment :: getEnv ( ) -> log		131312	0					
ANR	131367	PtrMemberAccess	Environment :: getEnv ( ) -> log		131312	0					
ANR	131368	CallExpression	Environment :: getEnv ( )		131312	0					
ANR	131369	Callee	Environment :: getEnv		131312	0					
ANR	131370	Identifier	Environment :: getEnv		131312	0					
ANR	131371	ArgumentList			131312	1					
ANR	131372	Identifier	log		131312	1					
ANR	131373	Argument	WSF_LOG_SI		131312	1					
ANR	131374	Identifier	WSF_LOG_SI		131312	0					
ANR	131375	Argument	"""jobs has less than minOccurs(0)"""		131312	2					
ANR	131376	PrimaryExpression	"""jobs has less than minOccurs(0)"""		131312	0					
ANR	131377	ReturnStatement	return false ;	456:21:18026:18038	131312	1	True				
ANR	131378	Identifier	false		131312	0					
ANR	131379	ForStatement	for ( i = 0 ; i < size ; i ++ )		131312	6					
ANR	131380	ForInit	i = 0 ;	458:21:18080:18085	131312	0	True				
ANR	131381	AssignmentExpression	i = 0		131312	0		=			
ANR	131382	Identifier	i		131312	0					
ANR	131383	PrimaryExpression	0		131312	1					
ANR	131384	Condition	i < size	458:28:18087:18094	131312	1	True				
ANR	131385	RelationalExpression	i < size		131312	0		<			
ANR	131386	Identifier	i		131312	0					
ANR	131387	Identifier	size		131312	1					
ANR	131388	PostIncDecOperationExpression	i ++	458:38:18097:18100	131312	2	True				
ANR	131389	Identifier	i		131312	0					
ANR	131390	IncDec	++		131312	1					
ANR	131391	CompoundStatement		24:17:674:674	131312	3					
ANR	131392	IfStatement	if ( NULL != ( * arg_Jobs ) [ i ] )		131312	0					
ANR	131393	Condition	NULL != ( * arg_Jobs ) [ i ]	460:24:18147:18168	131312	0	True				
ANR	131394	EqualityExpression	NULL != ( * arg_Jobs ) [ i ]		131312	0		!=			
ANR	131395	Identifier	NULL		131312	0					
ANR	131396	ArrayIndexing	( * arg_Jobs ) [ i ]		131312	1					
ANR	131397	UnaryOperationExpression	* arg_Jobs		131312	0					
ANR	131398	UnaryOperator	*		131312	0					
ANR	131399	Identifier	arg_Jobs		131312	1					
ANR	131400	Identifier	i		131312	1					
ANR	131401	CompoundStatement		26:21:745:745	131312	1					
ANR	131402	ExpressionStatement	non_nil_exists = true	462:25:18219:18240	131312	0	True				
ANR	131403	AssignmentExpression	non_nil_exists = true		131312	0		=			
ANR	131404	Identifier	non_nil_exists		131312	0					
ANR	131405	Identifier	true		131312	1					
ANR	131406	BreakStatement	break ;	463:25:18267:18272	131312	1	True				
ANR	131407	ExpressionStatement	resetJobs ( )	470:16:18369:18380	131312	7	True				
ANR	131408	CallExpression	resetJobs ( )		131312	0					
ANR	131409	Callee	resetJobs		131312	0					
ANR	131410	Identifier	resetJobs		131312	0					
ANR	131411	ArgumentList			131312	1					
ANR	131412	IfStatement	if ( NULL == arg_Jobs )		131312	8					
ANR	131413	Condition	NULL == arg_Jobs	473:23:18423:18438	131312	0	True				
ANR	131414	EqualityExpression	NULL == arg_Jobs		131312	0		==			
ANR	131415	Identifier	NULL		131312	0					
ANR	131416	Identifier	arg_Jobs		131312	1					
ANR	131417	CompoundStatement		40:16:1036:1036	131312	1					
ANR	131418	ReturnStatement	return true ;	477:20:18551:18562	131312	0	True				
ANR	131419	Identifier	true		131312	0					
ANR	131420	ExpressionStatement	property_Jobs = arg_Jobs	480:24:18623:18647	131312	9	True				
ANR	131421	AssignmentExpression	property_Jobs = arg_Jobs		131312	0		=			
ANR	131422	Identifier	property_Jobs		131312	0					
ANR	131423	Identifier	arg_Jobs		131312	1					
ANR	131424	IfStatement	if ( non_nil_exists )		131312	10					
ANR	131425	Condition	non_nil_exists	481:27:18676:18689	131312	0	True				
ANR	131426	Identifier	non_nil_exists		131312	0					
ANR	131427	CompoundStatement		47:24:1269:1269	131312	1					
ANR	131428	ExpressionStatement	isValidJobs = true	483:28:18746:18764	131312	0	True				
ANR	131429	AssignmentExpression	isValidJobs = true		131312	0		=			
ANR	131430	Identifier	isValidJobs		131312	0					
ANR	131431	Identifier	true		131312	1					
ANR	131432	ReturnStatement	return true ;	487:16:18854:18865	131312	11	True				
ANR	131433	Identifier	true		131312	0					
ANR	131434	ReturnType	bool WSF_CALL		131312	1					
ANR	131435	Identifier	AviaryQuery :: GetJobStatusResponse :: setJobs		131312	2					
ANR	131436	ParameterList	std :: vector < AviaryCommon :: JobStatus * > * arg_Jobs		131312	3					
ANR	131437	Parameter	std :: vector < AviaryCommon :: JobStatus * > * arg_Jobs	435:20:17383:17430	131312	0	True				
ANR	131438	ParameterType	std :: vector < AviaryCommon :: JobStatus * > *		131312	0					
ANR	131439	Identifier	arg_Jobs		131312	1					
ANR	131440	CFGEntryNode	ENTRY		131312		True				
ANR	131441	CFGExitNode	EXIT		131312		True				
ANR	131442	Symbol	* arg_Jobs		131312						
ANR	131443	Symbol	Environment :: getEnv		131312						
ANR	131444	Symbol	NULL		131312						
ANR	131445	Symbol	isValidJobs		131312						
ANR	131446	Symbol	* * arg_Jobs		131312						
ANR	131447	Symbol	arg_Jobs		131312						
ANR	131448	Symbol	false		131312						
ANR	131449	Symbol	i		131312						
ANR	131450	Symbol	property_Jobs		131312						
ANR	131451	Symbol	Environment :: getEnv ( ) -> log		131312						
ANR	131452	Symbol	* i		131312						
ANR	131453	Symbol	size		131312						
ANR	131454	Symbol	WSF_LOG_SI		131312						
ANR	131455	Symbol	* Environment :: getEnv		131312						
ANR	131456	Symbol	non_nil_exists		131312						
ANR	131457	Symbol	true		131312						
ANR	131458	Symbol	arg_Jobs -> size		131312						
ANR	131459	Function	AviaryQuery :: GetJobStatusResponse :: getJobsAt	494:37:19005:19409							
ANR	131460	FunctionDef	AviaryQuery :: GetJobStatusResponse :: getJobsAt (int i)		131459	0					
ANR	131461	CompoundStatement		496:12:19090:19409	131459	0					
ANR	131462	IdentifierDeclStatement	AviaryCommon :: JobStatus * ret_val ;	497:16:19108:19140	131459	0	True				
ANR	131463	IdentifierDecl	* ret_val		131459	0					
ANR	131464	IdentifierDeclType	AviaryCommon :: JobStatus *		131459	0					
ANR	131465	Identifier	ret_val		131459	1					
ANR	131466	IfStatement	if ( property_Jobs == NULL )		131459	1					
ANR	131467	Condition	property_Jobs == NULL	498:19:19161:19181	131459	0	True				
ANR	131468	EqualityExpression	property_Jobs == NULL		131459	0		==			
ANR	131469	Identifier	property_Jobs		131459	0					
ANR	131470	Identifier	NULL		131459	1					
ANR	131471	CompoundStatement		4:16:109:109	131459	1					
ANR	131472	ReturnStatement	return ( AviaryCommon :: JobStatus * ) 0 ;	500:20:19222:19256	131459	0	True				
ANR	131473	CastExpression	( AviaryCommon :: JobStatus * ) 0		131459	0					
ANR	131474	CastTarget	AviaryCommon :: JobStatus *		131459	0					
ANR	131475	PrimaryExpression	0		131459	1					
ANR	131476	ExpressionStatement	ret_val = ( * property_Jobs ) [ i ]	502:16:19292:19323	131459	2	True				
ANR	131477	AssignmentExpression	ret_val = ( * property_Jobs ) [ i ]		131459	0		=			
ANR	131478	Identifier	ret_val		131459	0					
ANR	131479	ArrayIndexing	( * property_Jobs ) [ i ]		131459	1					
ANR	131480	UnaryOperationExpression	* property_Jobs		131459	0					
ANR	131481	UnaryOperator	*		131459	0					
ANR	131482	Identifier	property_Jobs		131459	1					
ANR	131483	Identifier	i		131459	1					
ANR	131484	ReturnStatement	return ret_val ;	504:20:19362:19376	131459	3	True				
ANR	131485	Identifier	ret_val		131459	0					
ANR	131486	ReturnType	WSF_CALL		131459	1					
ANR	131487	Identifier	AviaryQuery :: GetJobStatusResponse :: getJobsAt		131459	2					
ANR	131488	ParameterList	int i		131459	3					
ANR	131489	Parameter	int i	495:57:19071:19075	131459	0	True				
ANR	131490	ParameterType	int		131459	0					
ANR	131491	Identifier	i		131459	1					
ANR	131492	CFGEntryNode	ENTRY		131459		True				
ANR	131493	CFGExitNode	EXIT		131459		True				
ANR	131494	Symbol	NULL		131459						
ANR	131495	Symbol	* i		131459						
ANR	131496	Symbol	i		131459						
ANR	131497	Symbol	* property_Jobs		131459						
ANR	131498	Symbol	* * property_Jobs		131459						
ANR	131499	Symbol	property_Jobs		131459						
ANR	131500	Symbol	ret_val		131459						
ANR	131501	Function	AviaryQuery :: GetJobStatusResponse :: setJobsAt	511:11:19499:21275							
ANR	131502	FunctionDef	"AviaryQuery :: GetJobStatusResponse :: setJobsAt (int i , AviaryCommon :: JobStatus * arg_Jobs)"		131501	0					
ANR	131503	CompoundStatement		514:12:19644:21275	131501	0					
ANR	131504	IdentifierDeclStatement	AviaryCommon :: JobStatus * element ;	515:17:19663:19695	131501	0	True				
ANR	131505	IdentifierDecl	* element		131501	0					
ANR	131506	IdentifierDeclType	AviaryCommon :: JobStatus *		131501	0					
ANR	131507	Identifier	element		131501	1					
ANR	131508	IdentifierDeclStatement	int size = 0 ;	516:16:19713:19725	131501	1	True				
ANR	131509	IdentifierDecl	size = 0		131501	0					
ANR	131510	IdentifierDeclType	int		131501	0					
ANR	131511	Identifier	size		131501	1					
ANR	131512	AssignmentExpression	size = 0		131501	2		=			
ANR	131513	Identifier	size		131501	0					
ANR	131514	PrimaryExpression	0		131501	1					
ANR	131515	IdentifierDeclStatement	int non_nil_count ;	518:16:19744:19761	131501	2	True				
ANR	131516	IdentifierDecl	non_nil_count		131501	0					
ANR	131517	IdentifierDeclType	int		131501	0					
ANR	131518	Identifier	non_nil_count		131501	1					
ANR	131519	IdentifierDeclStatement	bool non_nil_exists = false ;	519:16:19779:19806	131501	3	True				
ANR	131520	IdentifierDecl	non_nil_exists = false		131501	0					
ANR	131521	IdentifierDeclType	bool		131501	0					
ANR	131522	Identifier	non_nil_exists		131501	1					
ANR	131523	AssignmentExpression	non_nil_exists = false		131501	2		=			
ANR	131524	Identifier	false		131501	0					
ANR	131525	Identifier	false		131501	1					
ANR	131526	IfStatement	if ( isValidJobs && property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ] )		131501	4					
ANR	131527	Condition	isValidJobs && property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ]	523:20:19848:19969	131501	0	True				
ANR	131528	AndExpression	isValidJobs && property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ]		131501	0		&&			
ANR	131529	Identifier	isValidJobs		131501	0					
ANR	131530	AndExpression	property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ]		131501	1		&&			
ANR	131531	Identifier	property_Jobs		131501	0					
ANR	131532	EqualityExpression	arg_Jobs == ( * property_Jobs ) [ i ]		131501	1		==			
ANR	131533	Identifier	arg_Jobs		131501	0					
ANR	131534	ArrayIndexing	( * property_Jobs ) [ i ]		131501	1					
ANR	131535	UnaryOperationExpression	* property_Jobs		131501	0					
ANR	131536	UnaryOperator	*		131501	0					
ANR	131537	Identifier	property_Jobs		131501	1					
ANR	131538	Identifier	i		131501	1					
ANR	131539	CompoundStatement		15:17:363:363	131501	1					
ANR	131540	ReturnStatement	return AXIS2_SUCCESS ;	530:20:20051:20071	131501	0	True				
ANR	131541	Identifier	AXIS2_SUCCESS		131501	0					
ANR	131542	ExpressionStatement	non_nil_exists = true	534:21:20134:20155	131501	5	True				
ANR	131543	AssignmentExpression	non_nil_exists = true		131501	0		=			
ANR	131544	Identifier	non_nil_exists		131501	0					
ANR	131545	Identifier	true		131501	1					
ANR	131546	IfStatement	if ( property_Jobs == NULL )		131501	6					
ANR	131547	Condition	property_Jobs == NULL	537:19:20196:20216	131501	0	True				
ANR	131548	EqualityExpression	property_Jobs == NULL		131501	0		==			
ANR	131549	Identifier	property_Jobs		131501	0					
ANR	131550	Identifier	NULL		131501	1					
ANR	131551	CompoundStatement		25:16:590:590	131501	1					
ANR	131552	ExpressionStatement	property_Jobs = new std :: vector < AviaryCommon :: JobStatus * > ( )	539:20:20257:20316	131501	0	True				
ANR	131553	AssignmentExpression	property_Jobs = new std :: vector < AviaryCommon :: JobStatus * > ( )		131501	0		=			
ANR	131554	Identifier	property_Jobs		131501	0					
ANR	131555	UnaryExpression	new std :: vector < AviaryCommon :: JobStatus * > ( )		131501	1					
ANR	131556	ElseStatement	else		131501	0					
ANR	131557	CompoundStatement		28:20:711:711	131501	0					
ANR	131558	ExpressionStatement	element = ( * property_Jobs ) [ i ]	543:16:20441:20470	131501	0	True				
ANR	131559	AssignmentExpression	element = ( * property_Jobs ) [ i ]		131501	0		=			
ANR	131560	Identifier	element		131501	0					
ANR	131561	ArrayIndexing	( * property_Jobs ) [ i ]		131501	1					
ANR	131562	UnaryOperationExpression	* property_Jobs		131501	0					
ANR	131563	UnaryOperator	*		131501	0					
ANR	131564	Identifier	property_Jobs		131501	1					
ANR	131565	Identifier	i		131501	1					
ANR	131566	IfStatement	if ( NULL != element )		131501	7					
ANR	131567	Condition	NULL != element	547:27:20535:20549	131501	0	True				
ANR	131568	EqualityExpression	NULL != element		131501	0		!=			
ANR	131569	Identifier	NULL		131501	0					
ANR	131570	Identifier	element		131501	1					
ANR	131571	CompoundStatement		35:24:931:931	131501	1					
ANR	131572	Statement	delete	552:32:20691:20696	131501	0	True				
ANR	131573	ExpressionStatement	element	552:39:20698:20705	131501	1	True				
ANR	131574	Identifier	element		131501	0					
ANR	131575	IfStatement	if ( ! non_nil_exists )		131501	8					
ANR	131576	Condition	! non_nil_exists	557:23:20832:20846	131501	0	True				
ANR	131577	UnaryOperationExpression	! non_nil_exists		131501	0					
ANR	131578	UnaryOperator	!		131501	0					
ANR	131579	Identifier	non_nil_exists		131501	1					
ANR	131580	CompoundStatement		45:20:1224:1224	131501	1					
ANR	131581	ExpressionStatement	isValidJobs = true	560:24:20920:20938	131501	0	True				
ANR	131582	AssignmentExpression	isValidJobs = true		131501	0		=			
ANR	131583	Identifier	isValidJobs		131501	0					
ANR	131584	Identifier	true		131501	1					
ANR	131585	ExpressionStatement	( * property_Jobs ) [ i ] = NULL	561:24:20964:20989	131501	1	True				
ANR	131586	AssignmentExpression	( * property_Jobs ) [ i ] = NULL		131501	0		=			
ANR	131587	ArrayIndexing	( * property_Jobs ) [ i ]		131501	0					
ANR	131588	UnaryOperationExpression	* property_Jobs		131501	0					
ANR	131589	UnaryOperator	*		131501	0					
ANR	131590	Identifier	property_Jobs		131501	1					
ANR	131591	Identifier	i		131501	1					
ANR	131592	Identifier	NULL		131501	1					
ANR	131593	ReturnStatement	return AXIS2_SUCCESS ;	563:24:21040:21060	131501	2	True				
ANR	131594	Identifier	AXIS2_SUCCESS		131501	0					
ANR	131595	ExpressionStatement	( * property_Jobs ) [ i ] = arg_Jobs	566:20:21121:21151	131501	9	True				
ANR	131596	AssignmentExpression	( * property_Jobs ) [ i ] = arg_Jobs		131501	0		=			
ANR	131597	ArrayIndexing	( * property_Jobs ) [ i ]		131501	0					
ANR	131598	UnaryOperationExpression	* property_Jobs		131501	0					
ANR	131599	UnaryOperator	*		131501	0					
ANR	131600	Identifier	property_Jobs		131501	1					
ANR	131601	Identifier	i		131501	1					
ANR	131602	Identifier	arg_Jobs		131501	1					
ANR	131603	ExpressionStatement	isValidJobs = true	569:15:21188:21206	131501	10	True				
ANR	131604	AssignmentExpression	isValidJobs = true		131501	0		=			
ANR	131605	Identifier	isValidJobs		131501	0					
ANR	131606	Identifier	true		131501	1					
ANR	131607	ReturnStatement	return AXIS2_SUCCESS ;	571:16:21241:21261	131501	11	True				
ANR	131608	Identifier	AXIS2_SUCCESS		131501	0					
ANR	131609	ReturnType	bool WSF_CALL		131501	1					
ANR	131610	Identifier	AviaryQuery :: GetJobStatusResponse :: setJobsAt		131501	2					
ANR	131611	ParameterList	"int i , AviaryCommon :: JobStatus * arg_Jobs"		131501	3					
ANR	131612	Parameter	int i	512:57:19570:19574	131501	0	True				
ANR	131613	ParameterType	int		131501	0					
ANR	131614	Identifier	i		131501	1					
ANR	131615	Parameter	AviaryCommon :: JobStatus * arg_Jobs	513:20:19597:19629	131501	1	True				
ANR	131616	ParameterType	AviaryCommon :: JobStatus *		131501	0					
ANR	131617	Identifier	arg_Jobs		131501	1					
ANR	131618	CFGEntryNode	ENTRY		131501		True				
ANR	131619	CFGExitNode	EXIT		131501		True				
ANR	131620	Symbol	NULL		131501						
ANR	131621	Symbol	isValidJobs		131501						
ANR	131622	Symbol	arg_Jobs		131501						
ANR	131623	Symbol	false		131501						
ANR	131624	Symbol	i		131501						
ANR	131625	Symbol	* property_Jobs		131501						
ANR	131626	Symbol	* * property_Jobs		131501						
ANR	131627	Symbol	property_Jobs		131501						
ANR	131628	Symbol	non_nil_count		131501						
ANR	131629	Symbol	* i		131501						
ANR	131630	Symbol	size		131501						
ANR	131631	Symbol	non_nil_exists		131501						
ANR	131632	Symbol	true		131501						
ANR	131633	Symbol	element		131501						
ANR	131634	Symbol	AXIS2_SUCCESS		131501						
ANR	131635	Function	AviaryQuery :: GetJobStatusResponse :: addJobs	577:12:21350:22043							
ANR	131636	FunctionDef	AviaryQuery :: GetJobStatusResponse :: addJobs (AviaryCommon :: JobStatus * arg_Jobs)		131635	0					
ANR	131637	CompoundStatement		580:13:21488:22043	131635	0					
ANR	131638	IfStatement	if ( NULL == arg_Jobs )		131635	0					
ANR	131639	Condition	NULL == arg_Jobs	583:24:21532:21547	131635	0	True				
ANR	131640	EqualityExpression	NULL == arg_Jobs		131635	0		==			
ANR	131641	Identifier	NULL		131635	0					
ANR	131642	Identifier	arg_Jobs		131635	1					
ANR	131643	CompoundStatement		6:20:103:103	131635	1					
ANR	131644	ReturnStatement	return true ;	587:27:21644:21655	131635	0	True				
ANR	131645	Identifier	true		131635	0					
ANR	131646	IfStatement	if ( property_Jobs == NULL )		131635	1					
ANR	131647	Condition	property_Jobs == NULL	592:19:21744:21764	131635	0	True				
ANR	131648	EqualityExpression	property_Jobs == NULL		131635	0		==			
ANR	131649	Identifier	property_Jobs		131635	0					
ANR	131650	Identifier	NULL		131635	1					
ANR	131651	CompoundStatement		14:16:294:294	131635	1					
ANR	131652	ExpressionStatement	property_Jobs = new std :: vector < AviaryCommon :: JobStatus * > ( )	594:20:21805:21864	131635	0	True				
ANR	131653	AssignmentExpression	property_Jobs = new std :: vector < AviaryCommon :: JobStatus * > ( )		131635	0		=			
ANR	131654	Identifier	property_Jobs		131635	0					
ANR	131655	UnaryExpression	new std :: vector < AviaryCommon :: JobStatus * > ( )		131635	1					
ANR	131656	ExpressionStatement	property_Jobs -> push_back ( arg_Jobs )	597:15:21914:21948	131635	2	True				
ANR	131657	CallExpression	property_Jobs -> push_back ( arg_Jobs )		131635	0					
ANR	131658	Callee	property_Jobs -> push_back		131635	0					
ANR	131659	PtrMemberAccess	property_Jobs -> push_back		131635	0					
ANR	131660	Identifier	property_Jobs		131635	0					
ANR	131661	Identifier	push_back		131635	1					
ANR	131662	ArgumentList	arg_Jobs		131635	1					
ANR	131663	Argument	arg_Jobs		131635	0					
ANR	131664	Identifier	arg_Jobs		131635	0					
ANR	131665	ExpressionStatement	isValidJobs = true	599:16:21981:21999	131635	3	True				
ANR	131666	AssignmentExpression	isValidJobs = true		131635	0		=			
ANR	131667	Identifier	isValidJobs		131635	0					
ANR	131668	Identifier	true		131635	1					
ANR	131669	ReturnStatement	return true ;	600:16:22017:22028	131635	4	True				
ANR	131670	Identifier	true		131635	0					
ANR	131671	ReturnType	bool WSF_CALL		131635	1					
ANR	131672	Identifier	AviaryQuery :: GetJobStatusResponse :: addJobs		131635	2					
ANR	131673	ParameterList	AviaryCommon :: JobStatus * arg_Jobs		131635	3					
ANR	131674	Parameter	AviaryCommon :: JobStatus * arg_Jobs	579:20:21440:21472	131635	0	True				
ANR	131675	ParameterType	AviaryCommon :: JobStatus *		131635	0					
ANR	131676	Identifier	arg_Jobs		131635	1					
ANR	131677	CFGEntryNode	ENTRY		131635		True				
ANR	131678	CFGExitNode	EXIT		131635		True				
ANR	131679	Symbol	NULL		131635						
ANR	131680	Symbol	isValidJobs		131635						
ANR	131681	Symbol	arg_Jobs		131635						
ANR	131682	Symbol	true		131635						
ANR	131683	Symbol	property_Jobs		131635						
ANR	131684	Function	AviaryQuery :: GetJobStatusResponse :: sizeofJobs	606:12:22137:22391							
ANR	131685	FunctionDef	AviaryQuery :: GetJobStatusResponse :: sizeofJobs ()		131684	0					
ANR	131686	CompoundStatement		608:12:22222:22391	131684	0					
ANR	131687	IfStatement	if ( property_Jobs == NULL )		131684	0					
ANR	131688	Condition	property_Jobs == NULL	610:19:22244:22264	131684	0	True				
ANR	131689	EqualityExpression	property_Jobs == NULL		131684	0		==			
ANR	131690	Identifier	property_Jobs		131684	0					
ANR	131691	Identifier	NULL		131684	1					
ANR	131692	CompoundStatement		4:16:60:60	131684	1					
ANR	131693	ReturnStatement	return 0 ;	612:20:22305:22313	131684	0	True				
ANR	131694	PrimaryExpression	0		131684	0					
ANR	131695	ReturnStatement	return property_Jobs -> size ( ) ;	614:16:22349:22377	131684	1	True				
ANR	131696	CallExpression	property_Jobs -> size ( )		131684	0					
ANR	131697	Callee	property_Jobs -> size		131684	0					
ANR	131698	PtrMemberAccess	property_Jobs -> size		131684	0					
ANR	131699	Identifier	property_Jobs		131684	0					
ANR	131700	Identifier	size		131684	1					
ANR	131701	ArgumentList			131684	1					
ANR	131702	ReturnType	int WSF_CALL		131684	1					
ANR	131703	Identifier	AviaryQuery :: GetJobStatusResponse :: sizeofJobs		131684	2					
ANR	131704	ParameterList			131684	3					
ANR	131705	CFGEntryNode	ENTRY		131684		True				
ANR	131706	CFGExitNode	EXIT		131684		True				
ANR	131707	Symbol	NULL		131684						
ANR	131708	Symbol	* property_Jobs		131684						
ANR	131709	Symbol	property_Jobs		131684						
ANR	131710	Symbol	property_Jobs -> size		131684						
ANR	131711	Function	AviaryQuery :: GetJobStatusResponse :: removeJobsAt	620:12:22497:22644							
ANR	131712	FunctionDef	AviaryQuery :: GetJobStatusResponse :: removeJobsAt (int i)		131711	0					
ANR	131713	CompoundStatement		622:12:22590:22644	131711	0					
ANR	131714	ReturnStatement	return setJobsNilAt ( i ) ;	623:16:22608:22630	131711	0	True				
ANR	131715	CallExpression	setJobsNilAt ( i )		131711	0					
ANR	131716	Callee	setJobsNilAt		131711	0					
ANR	131717	Identifier	setJobsNilAt		131711	0					
ANR	131718	ArgumentList	i		131711	1					
ANR	131719	Argument	i		131711	0					
ANR	131720	Identifier	i		131711	0					
ANR	131721	ReturnType	bool WSF_CALL		131711	1					
ANR	131722	Identifier	AviaryQuery :: GetJobStatusResponse :: removeJobsAt		131711	2					
ANR	131723	ParameterList	int i		131711	3					
ANR	131724	Parameter	int i	621:60:22571:22575	131711	0	True				
ANR	131725	ParameterType	int		131711	0					
ANR	131726	Identifier	i		131711	1					
ANR	131727	CFGEntryNode	ENTRY		131711		True				
ANR	131728	CFGExitNode	EXIT		131711		True				
ANR	131729	Symbol	i		131711						
ANR	131730	Symbol	setJobsNilAt		131711						
ANR	131731	Function	AviaryQuery :: GetJobStatusResponse :: resetJobs	631:11:22734:23699							
ANR	131732	FunctionDef	AviaryQuery :: GetJobStatusResponse :: resetJobs ()		131731	0					
ANR	131733	CompoundStatement		633:11:22817:23699	131731	0					
ANR	131734	IdentifierDeclStatement	int i = 0 ;	634:15:22834:22843	131731	0	True				
ANR	131735	IdentifierDecl	i = 0		131731	0					
ANR	131736	IdentifierDeclType	int		131731	0					
ANR	131737	Identifier	i		131731	1					
ANR	131738	AssignmentExpression	i = 0		131731	2		=			
ANR	131739	Identifier	i		131731	0					
ANR	131740	PrimaryExpression	0		131731	1					
ANR	131741	IdentifierDeclStatement	int count = 0 ;	635:15:22860:22873	131731	1	True				
ANR	131742	IdentifierDecl	count = 0		131731	0					
ANR	131743	IdentifierDeclType	int		131731	0					
ANR	131744	Identifier	count		131731	1					
ANR	131745	AssignmentExpression	count = 0		131731	2		=			
ANR	131746	Identifier	count		131731	0					
ANR	131747	PrimaryExpression	0		131731	1					
ANR	131748	IfStatement	if ( property_Jobs != NULL )		131731	2					
ANR	131749	Condition	property_Jobs != NULL	639:20:22913:22933	131731	0	True				
ANR	131750	EqualityExpression	property_Jobs != NULL		131731	0		!=			
ANR	131751	Identifier	property_Jobs		131731	0					
ANR	131752	Identifier	NULL		131731	1					
ANR	131753	CompoundStatement		9:18:154:230	131731	1					
ANR	131754	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobStatus * > :: iterator it = property_Jobs -> begin ( ) ;	641:18:22972:23048	131731	0	True				
ANR	131755	IdentifierDecl	it = property_Jobs -> begin ( )		131731	0					
ANR	131756	IdentifierDeclType	std :: vector < AviaryCommon :: JobStatus * > :: iterator		131731	0					
ANR	131757	Identifier	it		131731	1					
ANR	131758	AssignmentExpression	it = property_Jobs -> begin ( )		131731	2		=			
ANR	131759	Identifier	it		131731	0					
ANR	131760	CallExpression	property_Jobs -> begin ( )		131731	1					
ANR	131761	Callee	property_Jobs -> begin		131731	0					
ANR	131762	PtrMemberAccess	property_Jobs -> begin		131731	0					
ANR	131763	Identifier	property_Jobs		131731	0					
ANR	131764	Identifier	begin		131731	1					
ANR	131765	ArgumentList			131731	1					
ANR	131766	ForStatement	for ( ; it < property_Jobs -> end ( ) ; ++ it )		131731	1					
ANR	131767	Condition	it < property_Jobs -> end ( )	642:25:23075:23100	131731	0	True				
ANR	131768	RelationalExpression	it < property_Jobs -> end ( )		131731	0		<			
ANR	131769	Identifier	it		131731	0					
ANR	131770	CallExpression	property_Jobs -> end ( )		131731	1					
ANR	131771	Callee	property_Jobs -> end		131731	0					
ANR	131772	PtrMemberAccess	property_Jobs -> end		131731	0					
ANR	131773	Identifier	property_Jobs		131731	0					
ANR	131774	Identifier	end		131731	1					
ANR	131775	ArgumentList			131731	1					
ANR	131776	UnaryExpression	++ it	642:54:23104:23107	131731	1	True				
ANR	131777	IncDec	++		131731	0					
ANR	131778	Identifier	it		131731	1					
ANR	131779	CompoundStatement		12:21:333:371	131731	2					
ANR	131780	IdentifierDeclStatement	AviaryCommon :: JobStatus * element = * it ;	644:21:23151:23189	131731	0	True				
ANR	131781	IdentifierDecl	* element = * it		131731	0					
ANR	131782	IdentifierDeclType	AviaryCommon :: JobStatus *		131731	0					
ANR	131783	Identifier	element		131731	1					
ANR	131784	AssignmentExpression	* element = * it		131731	2		=			
ANR	131785	Identifier	element		131731	0					
ANR	131786	UnaryOperationExpression	* it		131731	1					
ANR	131787	UnaryOperator	*		131731	0					
ANR	131788	Identifier	it		131731	1					
ANR	131789	IfStatement	if ( element != NULL )		131731	1					
ANR	131790	Condition	element != NULL	649:19:23258:23272	131731	0	True				
ANR	131791	EqualityExpression	element != NULL		131731	0		!=			
ANR	131792	Identifier	element		131731	0					
ANR	131793	Identifier	NULL		131731	1					
ANR	131794	CompoundStatement		18:16:473:473	131731	1					
ANR	131795	Statement	delete	653:25:23358:23363	131731	0	True				
ANR	131796	ExpressionStatement	element	653:33:23366:23373	131731	1	True				
ANR	131797	Identifier	element		131731	0					
ANR	131798	IfStatement	if ( NULL != property_Jobs )		131731	3					
ANR	131799	Condition	NULL != property_Jobs	665:23:23544:23564	131731	0	True				
ANR	131800	EqualityExpression	NULL != property_Jobs		131731	0		!=			
ANR	131801	Identifier	NULL		131731	0					
ANR	131802	Identifier	property_Jobs		131731	1					
ANR	131803	Statement	delete	666:17:23584:23589	131731	1	True				
ANR	131804	ExpressionStatement	property_Jobs	666:24:23591:23604	131731	4	True				
ANR	131805	Identifier	property_Jobs		131731	0					
ANR	131806	ExpressionStatement	isValidJobs = false	668:15:23638:23657	131731	5	True				
ANR	131807	AssignmentExpression	isValidJobs = false		131731	0		=			
ANR	131808	Identifier	isValidJobs		131731	0					
ANR	131809	Identifier	false		131731	1					
ANR	131810	ReturnStatement	return true ;	669:15:23675:23686	131731	6	True				
ANR	131811	Identifier	true		131731	0					
ANR	131812	ReturnType	bool WSF_CALL		131731	1					
ANR	131813	Identifier	AviaryQuery :: GetJobStatusResponse :: resetJobs		131731	2					
ANR	131814	ParameterList			131731	3					
ANR	131815	CFGEntryNode	ENTRY		131731		True				
ANR	131816	CFGExitNode	EXIT		131731		True				
ANR	131817	Symbol	NULL		131731						
ANR	131818	Symbol	isValidJobs		131731						
ANR	131819	Symbol	count		131731						
ANR	131820	Symbol	false		131731						
ANR	131821	Symbol	i		131731						
ANR	131822	Symbol	* property_Jobs		131731						
ANR	131823	Symbol	property_Jobs		131731						
ANR	131824	Symbol	it		131731						
ANR	131825	Symbol	* it		131731						
ANR	131826	Symbol	property_Jobs -> begin		131731						
ANR	131827	Symbol	true		131731						
ANR	131828	Symbol	property_Jobs -> end		131731						
ANR	131829	Symbol	element		131731						
ANR	131830	Function	AviaryQuery :: GetJobStatusResponse :: isJobsNil	675:11:23784:23916							
ANR	131831	FunctionDef	AviaryQuery :: GetJobStatusResponse :: isJobsNil ()		131830	0					
ANR	131832	CompoundStatement		677:11:23867:23916	131830	0					
ANR	131833	ReturnStatement	return ! isValidJobs ;	678:15:23884:23903	131830	0	True				
ANR	131834	UnaryOperationExpression	! isValidJobs		131830	0					
ANR	131835	UnaryOperator	!		131830	0					
ANR	131836	Identifier	isValidJobs		131830	1					
ANR	131837	ReturnType	bool WSF_CALL		131830	1					
ANR	131838	Identifier	AviaryQuery :: GetJobStatusResponse :: isJobsNil		131830	2					
ANR	131839	ParameterList			131830	3					
ANR	131840	CFGEntryNode	ENTRY		131830		True				
ANR	131841	CFGExitNode	EXIT		131830		True				
ANR	131842	Symbol	isValidJobs		131830						
ANR	131843	Function	AviaryQuery :: GetJobStatusResponse :: setJobsNil	684:11:24021:24153							
ANR	131844	FunctionDef	AviaryQuery :: GetJobStatusResponse :: setJobsNil ()		131843	0					
ANR	131845	CompoundStatement		686:11:24105:24153	131843	0					
ANR	131846	ReturnStatement	return resetJobs ( ) ;	687:15:24122:24140	131843	0	True				
ANR	131847	CallExpression	resetJobs ( )		131843	0					
ANR	131848	Callee	resetJobs		131843	0					
ANR	131849	Identifier	resetJobs		131843	0					
ANR	131850	ArgumentList			131843	1					
ANR	131851	ReturnType	bool WSF_CALL		131843	1					
ANR	131852	Identifier	AviaryQuery :: GetJobStatusResponse :: setJobsNil		131843	2					
ANR	131853	ParameterList			131843	3					
ANR	131854	CFGEntryNode	ENTRY		131843		True				
ANR	131855	CFGExitNode	EXIT		131843		True				
ANR	131856	Symbol	resetJobs		131843						
ANR	131857	Function	AviaryQuery :: GetJobStatusResponse :: isJobsNilAt	694:11:24255:24505							
ANR	131858	FunctionDef	AviaryQuery :: GetJobStatusResponse :: isJobsNilAt (int i)		131857	0					
ANR	131859	CompoundStatement		696:11:24345:24505	131857	0					
ANR	131860	ReturnStatement	return ( isValidJobs == false || NULL == property_Jobs || NULL == ( * property_Jobs ) [ i ] ) ;	697:15:24362:24491	131857	0	True				
ANR	131861	OrExpression	isValidJobs == false || NULL == property_Jobs || NULL == ( * property_Jobs ) [ i ]		131857	0		||			
ANR	131862	EqualityExpression	isValidJobs == false		131857	0		==			
ANR	131863	Identifier	isValidJobs		131857	0					
ANR	131864	Identifier	false		131857	1					
ANR	131865	OrExpression	NULL == property_Jobs || NULL == ( * property_Jobs ) [ i ]		131857	1		||			
ANR	131866	EqualityExpression	NULL == property_Jobs		131857	0		==			
ANR	131867	Identifier	NULL		131857	0					
ANR	131868	Identifier	property_Jobs		131857	1					
ANR	131869	EqualityExpression	NULL == ( * property_Jobs ) [ i ]		131857	1		==			
ANR	131870	Identifier	NULL		131857	0					
ANR	131871	ArrayIndexing	( * property_Jobs ) [ i ]		131857	1					
ANR	131872	UnaryOperationExpression	* property_Jobs		131857	0					
ANR	131873	UnaryOperator	*		131857	0					
ANR	131874	Identifier	property_Jobs		131857	1					
ANR	131875	Identifier	i		131857	1					
ANR	131876	ReturnType	bool WSF_CALL		131857	1					
ANR	131877	Identifier	AviaryQuery :: GetJobStatusResponse :: isJobsNilAt		131857	2					
ANR	131878	ParameterList	int i		131857	3					
ANR	131879	Parameter	int i	695:58:24327:24331	131857	0	True				
ANR	131880	ParameterType	int		131857	0					
ANR	131881	Identifier	i		131857	1					
ANR	131882	CFGEntryNode	ENTRY		131857		True				
ANR	131883	CFGExitNode	EXIT		131857		True				
ANR	131884	Symbol	* i		131857						
ANR	131885	Symbol	NULL		131857						
ANR	131886	Symbol	isValidJobs		131857						
ANR	131887	Symbol	false		131857						
ANR	131888	Symbol	i		131857						
ANR	131889	Symbol	* * property_Jobs		131857						
ANR	131890	Symbol	* property_Jobs		131857						
ANR	131891	Symbol	property_Jobs		131857						
ANR	131892	Function	AviaryQuery :: GetJobStatusResponse :: setJobsNilAt	705:11:24584:26832							
ANR	131893	FunctionDef	AviaryQuery :: GetJobStatusResponse :: setJobsNilAt (int i)		131892	0					
ANR	131894	CompoundStatement		707:11:24675:26832	131892	0					
ANR	131895	IdentifierDeclStatement	int size = 0 ;	708:16:24693:24705	131892	0	True				
ANR	131896	IdentifierDecl	size = 0		131892	0					
ANR	131897	IdentifierDeclType	int		131892	0					
ANR	131898	Identifier	size		131892	1					
ANR	131899	AssignmentExpression	size = 0		131892	2		=			
ANR	131900	Identifier	size		131892	0					
ANR	131901	PrimaryExpression	0		131892	1					
ANR	131902	IdentifierDeclStatement	int j ;	709:16:24723:24728	131892	1	True				
ANR	131903	IdentifierDecl	j		131892	0					
ANR	131904	IdentifierDeclType	int		131892	0					
ANR	131905	Identifier	j		131892	1					
ANR	131906	IdentifierDeclStatement	bool non_nil_exists = false ;	710:16:24746:24773	131892	2	True				
ANR	131907	IdentifierDecl	non_nil_exists = false		131892	0					
ANR	131908	IdentifierDeclType	bool		131892	0					
ANR	131909	Identifier	non_nil_exists		131892	1					
ANR	131910	AssignmentExpression	non_nil_exists = false		131892	2		=			
ANR	131911	Identifier	false		131892	0					
ANR	131912	Identifier	false		131892	1					
ANR	131913	IdentifierDeclStatement	int k = 0 ;	712:16:24792:24801	131892	3	True				
ANR	131914	IdentifierDecl	k = 0		131892	0					
ANR	131915	IdentifierDeclType	int		131892	0					
ANR	131916	Identifier	k		131892	1					
ANR	131917	AssignmentExpression	k = 0		131892	2		=			
ANR	131918	Identifier	k		131892	0					
ANR	131919	PrimaryExpression	0		131892	1					
ANR	131920	IfStatement	if ( property_Jobs == NULL || isValidJobs == false )		131892	4					
ANR	131921	Condition	property_Jobs == NULL || isValidJobs == false	714:19:24823:24895	131892	0	True				
ANR	131922	OrExpression	property_Jobs == NULL || isValidJobs == false		131892	0		||			
ANR	131923	EqualityExpression	property_Jobs == NULL		131892	0		==			
ANR	131924	Identifier	property_Jobs		131892	0					
ANR	131925	Identifier	NULL		131892	1					
ANR	131926	EqualityExpression	isValidJobs == false		131892	1		==			
ANR	131927	Identifier	isValidJobs		131892	0					
ANR	131928	Identifier	false		131892	1					
ANR	131929	CompoundStatement		10:16:238:238	131892	1					
ANR	131930	ExpressionStatement	non_nil_exists = false	718:20:24957:24979	131892	0	True				
ANR	131931	AssignmentExpression	non_nil_exists = false		131892	0		=			
ANR	131932	Identifier	non_nil_exists		131892	0					
ANR	131933	Identifier	false		131892	1					
ANR	131934	ElseStatement	else		131892	0					
ANR	131935	CompoundStatement		15:16:360:360	131892	0					
ANR	131936	ExpressionStatement	size = property_Jobs -> size ( )	722:20:25058:25086	131892	0	True				
ANR	131937	AssignmentExpression	size = property_Jobs -> size ( )		131892	0		=			
ANR	131938	Identifier	size		131892	0					
ANR	131939	CallExpression	property_Jobs -> size ( )		131892	1					
ANR	131940	Callee	property_Jobs -> size		131892	0					
ANR	131941	PtrMemberAccess	property_Jobs -> size		131892	0					
ANR	131942	Identifier	property_Jobs		131892	0					
ANR	131943	Identifier	size		131892	1					
ANR	131944	ArgumentList			131892	1					
ANR	131945	ForStatement	"for ( j = 0 , k = 0 ; j < size ; j ++ )"		131892	1					
ANR	131946	ForInit	"j = 0 , k = 0 ;"	723:24:25112:25124	131892	0	True				
ANR	131947	Expression	"j = 0 , k = 0"		131892	0					
ANR	131948	AssignmentExpression	j = 0		131892	0		=			
ANR	131949	Identifier	j		131892	0					
ANR	131950	PrimaryExpression	0		131892	1					
ANR	131951	AssignmentExpression	k = 0		131892	1		=			
ANR	131952	Identifier	k		131892	0					
ANR	131953	PrimaryExpression	0		131892	1					
ANR	131954	Condition	j < size	723:38:25126:25133	131892	1	True				
ANR	131955	RelationalExpression	j < size		131892	0		<			
ANR	131956	Identifier	j		131892	0					
ANR	131957	Identifier	size		131892	1					
ANR	131958	PostIncDecOperationExpression	j ++	723:48:25136:25139	131892	2	True				
ANR	131959	Identifier	j		131892	0					
ANR	131960	IncDec	++		131892	1					
ANR	131961	CompoundStatement		18:20:487:487	131892	3					
ANR	131962	IfStatement	if ( i == j )		131892	0					
ANR	131963	Condition	i == j	725:27:25192:25197	131892	0	True				
ANR	131964	EqualityExpression	i == j		131892	0		==			
ANR	131965	Identifier	i		131892	0					
ANR	131966	Identifier	j		131892	1					
ANR	131967	ContinueStatement	continue ;	725:35:25200:25208	131892	1	True				
ANR	131968	IfStatement	if ( NULL != ( * property_Jobs ) [ i ] )		131892	1					
ANR	131969	Condition	NULL != ( * property_Jobs ) [ i ]	726:27:25238:25264	131892	0	True				
ANR	131970	EqualityExpression	NULL != ( * property_Jobs ) [ i ]		131892	0		!=			
ANR	131971	Identifier	NULL		131892	0					
ANR	131972	ArrayIndexing	( * property_Jobs ) [ i ]		131892	1					
ANR	131973	UnaryOperationExpression	* property_Jobs		131892	0					
ANR	131974	UnaryOperator	*		131892	0					
ANR	131975	Identifier	property_Jobs		131892	1					
ANR	131976	Identifier	i		131892	1					
ANR	131977	CompoundStatement		21:24:615:615	131892	1					
ANR	131978	ExpressionStatement	k ++	728:28:25321:25324	131892	0	True				
ANR	131979	PostIncDecOperationExpression	k ++		131892	0					
ANR	131980	Identifier	k		131892	0					
ANR	131981	IncDec	++		131892	1					
ANR	131982	ExpressionStatement	non_nil_exists = true	729:28:25354:25375	131892	1	True				
ANR	131983	AssignmentExpression	non_nil_exists = true		131892	0		=			
ANR	131984	Identifier	non_nil_exists		131892	0					
ANR	131985	Identifier	true		131892	1					
ANR	131986	IfStatement	if ( k >= 0 )		131892	2					
ANR	131987	Condition	k >= 0	730:32:25409:25414	131892	0	True				
ANR	131988	RelationalExpression	k >= 0		131892	0		>=			
ANR	131989	Identifier	k		131892	0					
ANR	131990	PrimaryExpression	0		131892	1					
ANR	131991	CompoundStatement		25:28:769:769	131892	1					
ANR	131992	BreakStatement	break ;	732:32:25479:25484	131892	0	True				
ANR	131993	IfStatement	if ( k < 0 )		131892	5					
ANR	131994	Condition	k < 0	739:20:25620:25624	131892	0	True				
ANR	131995	RelationalExpression	k < 0		131892	0		<			
ANR	131996	Identifier	k		131892	0					
ANR	131997	PrimaryExpression	0		131892	1					
ANR	131998	CompoundStatement		34:16:967:967	131892	1					
ANR	131999	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"" )"	741:23:25668:25825	131892	0	True				
ANR	132000	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"" )"		131892	0					
ANR	132001	Callee	WSF_LOG_ERROR_MSG		131892	0					
ANR	132002	Identifier	WSF_LOG_ERROR_MSG		131892	0					
ANR	132003	ArgumentList	Environment :: getEnv ( ) -> log		131892	1					
ANR	132004	Argument	Environment :: getEnv ( ) -> log		131892	0					
ANR	132005	PtrMemberAccess	Environment :: getEnv ( ) -> log		131892	0					
ANR	132006	CallExpression	Environment :: getEnv ( )		131892	0					
ANR	132007	Callee	Environment :: getEnv		131892	0					
ANR	132008	Identifier	Environment :: getEnv		131892	0					
ANR	132009	ArgumentList			131892	1					
ANR	132010	Identifier	log		131892	1					
ANR	132011	Argument	WSF_LOG_SI		131892	1					
ANR	132012	Identifier	WSF_LOG_SI		131892	0					
ANR	132013	Argument	"""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"""		131892	2					
ANR	132014	PrimaryExpression	"""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"""		131892	0					
ANR	132015	ReturnStatement	return AXIS2_FAILURE ;	742:23:25850:25870	131892	1	True				
ANR	132016	Identifier	AXIS2_FAILURE		131892	0					
ANR	132017	IfStatement	if ( property_Jobs == NULL )		131892	6					
ANR	132018	Condition	property_Jobs == NULL	745:19:25911:25931	131892	0	True				
ANR	132019	EqualityExpression	property_Jobs == NULL		131892	0		==			
ANR	132020	Identifier	property_Jobs		131892	0					
ANR	132021	Identifier	NULL		131892	1					
ANR	132022	CompoundStatement		40:16:1274:1274	131892	1					
ANR	132023	ExpressionStatement	isValidJobs = false	747:20:25972:25991	131892	0	True				
ANR	132024	AssignmentExpression	isValidJobs = false		131892	0		=			
ANR	132025	Identifier	isValidJobs		131892	0					
ANR	132026	Identifier	false		131892	1					
ANR	132027	ReturnStatement	return true ;	749:20:26034:26045	131892	1	True				
ANR	132028	Identifier	true		131892	0					
ANR	132029	IdentifierDeclStatement	AviaryCommon :: JobStatus * element = ( * property_Jobs ) [ i ] ;	753:17:26168:26222	131892	7	True				
ANR	132030	IdentifierDecl	* element = ( * property_Jobs ) [ i ]		131892	0					
ANR	132031	IdentifierDeclType	AviaryCommon :: JobStatus *		131892	0					
ANR	132032	Identifier	element		131892	1					
ANR	132033	AssignmentExpression	* element = ( * property_Jobs ) [ i ]		131892	2		=			
ANR	132034	Identifier	element		131892	0					
ANR	132035	ArrayIndexing	( * property_Jobs ) [ i ]		131892	1					
ANR	132036	UnaryOperationExpression	* property_Jobs		131892	0					
ANR	132037	UnaryOperator	*		131892	0					
ANR	132038	Identifier	property_Jobs		131892	1					
ANR	132039	Identifier	i		131892	1					
ANR	132040	IfStatement	if ( NULL != element )		131892	8					
ANR	132041	Condition	NULL != element	754:19:26243:26257	131892	0	True				
ANR	132042	EqualityExpression	NULL != element		131892	0		!=			
ANR	132043	Identifier	NULL		131892	0					
ANR	132044	Identifier	element		131892	1					
ANR	132045	CompoundStatement		49:16:1600:1600	131892	1					
ANR	132046	Statement	delete	759:24:26359:26364	131892	0	True				
ANR	132047	ExpressionStatement	element	759:31:26366:26373	131892	1	True				
ANR	132048	Identifier	element		131892	0					
ANR	132049	IfStatement	if ( ! non_nil_exists )		131892	9					
ANR	132050	Condition	! non_nil_exists	763:23:26457:26471	131892	0	True				
ANR	132051	UnaryOperationExpression	! non_nil_exists		131892	0					
ANR	132052	UnaryOperator	!		131892	0					
ANR	132053	Identifier	non_nil_exists		131892	1					
ANR	132054	CompoundStatement		58:20:1818:1818	131892	1					
ANR	132055	ExpressionStatement	isValidJobs = false	766:24:26545:26564	131892	0	True				
ANR	132056	AssignmentExpression	isValidJobs = false		131892	0		=			
ANR	132057	Identifier	isValidJobs		131892	0					
ANR	132058	Identifier	false		131892	1					
ANR	132059	ExpressionStatement	( * property_Jobs ) [ i ] = NULL	767:24:26590:26616	131892	1	True				
ANR	132060	AssignmentExpression	( * property_Jobs ) [ i ] = NULL		131892	0		=			
ANR	132061	ArrayIndexing	( * property_Jobs ) [ i ]		131892	0					
ANR	132062	UnaryOperationExpression	* property_Jobs		131892	0					
ANR	132063	UnaryOperator	*		131892	0					
ANR	132064	Identifier	property_Jobs		131892	1					
ANR	132065	Identifier	i		131892	1					
ANR	132066	Identifier	NULL		131892	1					
ANR	132067	ReturnStatement	return AXIS2_SUCCESS ;	768:24:26642:26662	131892	2	True				
ANR	132068	Identifier	AXIS2_SUCCESS		131892	0					
ANR	132069	ExpressionStatement	( * property_Jobs ) [ i ] = NULL	773:16:26737:26763	131892	10	True				
ANR	132070	AssignmentExpression	( * property_Jobs ) [ i ] = NULL		131892	0		=			
ANR	132071	ArrayIndexing	( * property_Jobs ) [ i ]		131892	0					
ANR	132072	UnaryOperationExpression	* property_Jobs		131892	0					
ANR	132073	UnaryOperator	*		131892	0					
ANR	132074	Identifier	property_Jobs		131892	1					
ANR	132075	Identifier	i		131892	1					
ANR	132076	Identifier	NULL		131892	1					
ANR	132077	ReturnStatement	return AXIS2_SUCCESS ;	775:16:26798:26818	131892	11	True				
ANR	132078	Identifier	AXIS2_SUCCESS		131892	0					
ANR	132079	ReturnType	bool WSF_CALL		131892	1					
ANR	132080	Identifier	AviaryQuery :: GetJobStatusResponse :: setJobsNilAt		131892	2					
ANR	132081	ParameterList	int i		131892	3					
ANR	132082	Parameter	int i	706:59:24657:24661	131892	0	True				
ANR	132083	ParameterType	int		131892	0					
ANR	132084	Identifier	i		131892	1					
ANR	132085	CFGEntryNode	ENTRY		131892		True				
ANR	132086	CFGExitNode	EXIT		131892		True				
ANR	132087	Symbol	Environment :: getEnv		131892						
ANR	132088	Symbol	NULL		131892						
ANR	132089	Symbol	isValidJobs		131892						
ANR	132090	Symbol	false		131892						
ANR	132091	Symbol	i		131892						
ANR	132092	Symbol	* property_Jobs		131892						
ANR	132093	Symbol	* * property_Jobs		131892						
ANR	132094	Symbol	j		131892						
ANR	132095	Symbol	property_Jobs		131892						
ANR	132096	Symbol	k		131892						
ANR	132097	Symbol	Environment :: getEnv ( ) -> log		131892						
ANR	132098	Symbol	AXIS2_FAILURE		131892						
ANR	132099	Symbol	* i		131892						
ANR	132100	Symbol	size		131892						
ANR	132101	Symbol	WSF_LOG_SI		131892						
ANR	132102	Symbol	* Environment :: getEnv		131892						
ANR	132103	Symbol	non_nil_exists		131892						
ANR	132104	Symbol	true		131892						
ANR	132105	Symbol	property_Jobs -> size		131892						
ANR	132106	Symbol	element		131892						
ANR	132107	Symbol	AXIS2_SUCCESS		131892						
