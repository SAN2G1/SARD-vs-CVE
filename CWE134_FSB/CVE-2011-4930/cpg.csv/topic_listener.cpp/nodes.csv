command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5455873	File	data/converged/CVE-2011-4930_htcondor/topic_listener.cpp								
ANR	5455874	Function	getPortNumber	37:0:1186:1468							
ANR	5455875	FunctionDef	getPortNumber (char * hostname)		5455874	0					
ANR	5455876	CompoundStatement		37:33:1219:1468	5455874	0					
ANR	5455877	IdentifierDeclStatement	"FILE * f = popen ( ""daemonReader"" , ""r"" ) ;"	38:1:1222:1258	5455874	0	True				
ANR	5455878	IdentifierDecl	"* f = popen ( ""daemonReader"" , ""r"" )"		5455874	0					
ANR	5455879	IdentifierDeclType	FILE *		5455874	0					
ANR	5455880	Identifier	f		5455874	1					
ANR	5455881	AssignmentExpression	"* f = popen ( ""daemonReader"" , ""r"" )"		5455874	2		=			
ANR	5455882	Identifier	f		5455874	0					
ANR	5455883	CallExpression	"popen ( ""daemonReader"" , ""r"" )"		5455874	1					
ANR	5455884	Callee	popen		5455874	0					
ANR	5455885	Identifier	popen		5455874	0					
ANR	5455886	ArgumentList	"""daemonReader"""		5455874	1					
ANR	5455887	Argument	"""daemonReader"""		5455874	0					
ANR	5455888	PrimaryExpression	"""daemonReader"""		5455874	0					
ANR	5455889	Argument	"""r"""		5455874	1					
ANR	5455890	PrimaryExpression	"""r"""		5455874	0					
ANR	5455891	IdentifierDeclStatement	char buffer [ 256 ] ;	39:1:1261:1277	5455874	1	True				
ANR	5455892	IdentifierDecl	buffer [ 256 ]		5455874	0					
ANR	5455893	IdentifierDeclType	char [ 256 ]		5455874	0					
ANR	5455894	Identifier	buffer		5455874	1					
ANR	5455895	PrimaryExpression	256		5455874	2					
ANR	5455896	IdentifierDeclStatement	int count = 0 ;	40:1:1280:1293	5455874	2	True				
ANR	5455897	IdentifierDecl	count = 0		5455874	0					
ANR	5455898	IdentifierDeclType	int		5455874	0					
ANR	5455899	Identifier	count		5455874	1					
ANR	5455900	AssignmentExpression	count = 0		5455874	2		=			
ANR	5455901	Identifier	count		5455874	0					
ANR	5455902	PrimaryExpression	0		5455874	1					
ANR	5455903	WhileStatement	"while ( fgets ( buffer , 256 , f ) )"		5455874	3					
ANR	5455904	Condition	"fgets ( buffer , 256 , f )"	41:8:1303:1323	5455874	0	True				
ANR	5455905	CallExpression	"fgets ( buffer , 256 , f )"		5455874	0					
ANR	5455906	Callee	fgets		5455874	0					
ANR	5455907	Identifier	fgets		5455874	0					
ANR	5455908	ArgumentList	buffer		5455874	1					
ANR	5455909	Argument	buffer		5455874	0					
ANR	5455910	Identifier	buffer		5455874	0					
ANR	5455911	Argument	256		5455874	1					
ANR	5455912	PrimaryExpression	256		5455874	0					
ANR	5455913	Argument	f		5455874	2					
ANR	5455914	Identifier	f		5455874	0					
ANR	5455915	CompoundStatement		5:31:106:106	5455874	1					
ANR	5455916	ExpressionStatement	buffer [ strlen ( buffer ) - 1 ] = '\\0'	42:2:1330:1361	5455874	0	True				
ANR	5455917	AssignmentExpression	buffer [ strlen ( buffer ) - 1 ] = '\\0'		5455874	0		=			
ANR	5455918	ArrayIndexing	buffer [ strlen ( buffer ) - 1 ]		5455874	0					
ANR	5455919	Identifier	buffer		5455874	0					
ANR	5455920	AdditiveExpression	strlen ( buffer ) - 1		5455874	1		-			
ANR	5455921	CallExpression	strlen ( buffer )		5455874	0					
ANR	5455922	Callee	strlen		5455874	0					
ANR	5455923	Identifier	strlen		5455874	0					
ANR	5455924	ArgumentList	buffer		5455874	1					
ANR	5455925	Argument	buffer		5455874	0					
ANR	5455926	Identifier	buffer		5455874	0					
ANR	5455927	PrimaryExpression	1		5455874	1					
ANR	5455928	PrimaryExpression	'\\0'		5455874	1					
ANR	5455929	IfStatement	if ( count > 0 )		5455874	1					
ANR	5455930	Condition	count > 0	43:6:1369:1377	5455874	0	True				
ANR	5455931	RelationalExpression	count > 0		5455874	0		>			
ANR	5455932	Identifier	count		5455874	0					
ANR	5455933	PrimaryExpression	0		5455874	1					
ANR	5455934	ReturnStatement	return atoi ( buffer ) ;	44:3:1383:1402	5455874	1	True				
ANR	5455935	CallExpression	atoi ( buffer )		5455874	0					
ANR	5455936	Callee	atoi		5455874	0					
ANR	5455937	Identifier	atoi		5455874	0					
ANR	5455938	ArgumentList	buffer		5455874	1					
ANR	5455939	Argument	buffer		5455874	0					
ANR	5455940	Identifier	buffer		5455874	0					
ANR	5455941	ExpressionStatement	"sprintf ( hostname , ""%s"" , buffer )"	45:2:1406:1437	5455874	2	True				
ANR	5455942	CallExpression	"sprintf ( hostname , ""%s"" , buffer )"		5455874	0					
ANR	5455943	Callee	sprintf		5455874	0					
ANR	5455944	Identifier	sprintf		5455874	0					
ANR	5455945	ArgumentList	hostname		5455874	1					
ANR	5455946	Argument	hostname		5455874	0					
ANR	5455947	Identifier	hostname		5455874	0					
ANR	5455948	Argument	"""%s"""		5455874	1					
ANR	5455949	PrimaryExpression	"""%s"""		5455874	0					
ANR	5455950	Argument	buffer		5455874	2					
ANR	5455951	Identifier	buffer		5455874	0					
ANR	5455952	ExpressionStatement	++ count	46:2:1441:1448	5455874	3	True				
ANR	5455953	UnaryExpression	++ count		5455874	0					
ANR	5455954	IncDec	++		5455874	0					
ANR	5455955	Identifier	count		5455874	1					
ANR	5455956	ReturnStatement	return - 1 ;	49:1:1457:1466	5455874	4	True				
ANR	5455957	UnaryOperationExpression	- 1		5455874	0					
ANR	5455958	UnaryOperator	-		5455874	0					
ANR	5455959	PrimaryExpression	1		5455874	1					
ANR	5455960	ReturnType	int		5455874	1					
ANR	5455961	Identifier	getPortNumber		5455874	2					
ANR	5455962	ParameterList	char * hostname		5455874	3					
ANR	5455963	Parameter	char * hostname	37:18:1204:1217	5455874	0	True				
ANR	5455964	ParameterType	char *		5455874	0					
ANR	5455965	Identifier	hostname		5455874	1					
ANR	5455966	CFGEntryNode	ENTRY		5455874		True				
ANR	5455967	CFGExitNode	EXIT		5455874		True				
ANR	5455968	Symbol	atoi		5455874						
ANR	5455969	Symbol	strlen		5455874						
ANR	5455970	Symbol	hostname		5455874						
ANR	5455971	Symbol	* buffer		5455874						
ANR	5455972	Symbol	popen		5455874						
ANR	5455973	Symbol	* strlen		5455874						
ANR	5455974	Symbol	f		5455874						
ANR	5455975	Symbol	count		5455874						
ANR	5455976	Symbol	buffer		5455874						
ANR	5455977	Symbol	fgets		5455874						
ANR	5455978	ClassDef	Listener	52:0:1471:1817							
ANR	5455979	DeclStmt									
ANR	5455980	Decl							Session	Session &	session
ANR	5455981	DeclStmt									
ANR	5455982	Decl							SubscriptionManager	SubscriptionManager	subscriptions
ANR	5455983	DeclStmt									
ANR	5455984	Decl							void	"void ( std :: string queue , std :: string exchange , std :: string routing_key )"	prepareQueue
ANR	5455985	DeclStmt									
ANR	5455986	Decl							void	void ( Message & message )	received
ANR	5455987	DeclStmt									
ANR	5455988	Decl							void	void ( )	listen
ANR	5455989	Function	~Listener	61:4:1800:1814							
ANR	5455990	FunctionDef	~Listener ()		5455989	5					
ANR	5455991	CompoundStatement		61:16:1812:1814	5455989	0					
ANR	5455992	Identifier	~Listener		5455989	1					
ANR	5455993	ParameterList			5455989	2					
ANR	5455994	CFGEntryNode	ENTRY		5455989		True				
ANR	5455995	CFGExitNode	EXIT		5455989		True				
ANR	5455996	Function	Listener :: Listener	74:0:2093:2192							
ANR	5455997	FunctionDef	Listener :: Listener (Session & session)		5455996	0					
ANR	5455998	CompoundStatement		77:0:2190:2192	5455996	0					
ANR	5455999	Identifier	Listener :: Listener		5455996	1					
ANR	5456000	ParameterList	Session & session		5455996	2					
ANR	5456001	Parameter	Session & session	74:19:2112:2127	5455996	0	True				
ANR	5456002	ParameterType	Session &		5455996	0					
ANR	5456003	Identifier	session		5455996	1					
ANR	5456004	CFGEntryNode	ENTRY		5455996		True				
ANR	5456005	CFGExitNode	EXIT		5455996		True				
ANR	5456006	Symbol	session		5455996						
ANR	5456007	Function	Listener :: prepareQueue	81:0:2196:2642							
ANR	5456008	FunctionDef	"Listener :: prepareQueue (std :: string queue , std :: string exchange , std :: string routing_key)"		5456007	0					
ANR	5456009	CompoundStatement		81:94:2290:2642	5456007	0					
ANR	5456010	ExpressionStatement	"session . exchangeBind ( arg :: exchange = exchange , arg :: queue = queue , arg :: bindingKey = routing_key )"	84:4:2363:2454	5456007	0	True				
ANR	5456011	CallExpression	"session . exchangeBind ( arg :: exchange = exchange , arg :: queue = queue , arg :: bindingKey = routing_key )"		5456007	0					
ANR	5456012	Callee	session . exchangeBind		5456007	0					
ANR	5456013	MemberAccess	session . exchangeBind		5456007	0					
ANR	5456014	Identifier	session		5456007	0					
ANR	5456015	Identifier	exchangeBind		5456007	1					
ANR	5456016	ArgumentList	arg :: exchange = exchange		5456007	1					
ANR	5456017	Argument	arg :: exchange = exchange		5456007	0					
ANR	5456018	AssignmentExpression	arg :: exchange = exchange		5456007	0		=			
ANR	5456019	Identifier	arg :: exchange		5456007	0					
ANR	5456020	Identifier	exchange		5456007	1					
ANR	5456021	Argument	arg :: queue = queue		5456007	1					
ANR	5456022	AssignmentExpression	arg :: queue = queue		5456007	0		=			
ANR	5456023	Identifier	arg :: queue		5456007	0					
ANR	5456024	Identifier	queue		5456007	1					
ANR	5456025	Argument	arg :: bindingKey = routing_key		5456007	2					
ANR	5456026	AssignmentExpression	arg :: bindingKey = routing_key		5456007	0		=			
ANR	5456027	Identifier	arg :: bindingKey		5456007	0					
ANR	5456028	Identifier	routing_key		5456007	1					
ANR	5456029	ExpressionStatement	"std :: cout << ""Subscribing to queue "" << queue << std :: endl"	90:4:2539:2597	5456007	1	True				
ANR	5456030	ShiftExpression	"std :: cout << ""Subscribing to queue "" << queue << std :: endl"		5456007	0		<<			
ANR	5456031	Identifier	std :: cout		5456007	0					
ANR	5456032	ShiftExpression	"""Subscribing to queue "" << queue << std :: endl"		5456007	1		<<			
ANR	5456033	PrimaryExpression	"""Subscribing to queue """		5456007	0					
ANR	5456034	ShiftExpression	queue << std :: endl		5456007	1		<<			
ANR	5456035	Identifier	queue		5456007	0					
ANR	5456036	Identifier	std :: endl		5456007	1					
ANR	5456037	ExpressionStatement	"subscriptions . subscribe ( * this , queue )"	91:4:2603:2640	5456007	2	True				
ANR	5456038	CallExpression	"subscriptions . subscribe ( * this , queue )"		5456007	0					
ANR	5456039	Callee	subscriptions . subscribe		5456007	0					
ANR	5456040	MemberAccess	subscriptions . subscribe		5456007	0					
ANR	5456041	Identifier	subscriptions		5456007	0					
ANR	5456042	Identifier	subscribe		5456007	1					
ANR	5456043	ArgumentList	* this		5456007	1					
ANR	5456044	Argument	* this		5456007	0					
ANR	5456045	UnaryOperationExpression	* this		5456007	0					
ANR	5456046	UnaryOperator	*		5456007	0					
ANR	5456047	Identifier	this		5456007	1					
ANR	5456048	Argument	queue		5456007	1					
ANR	5456049	Identifier	queue		5456007	0					
ANR	5456050	ReturnType	void		5456007	1					
ANR	5456051	Identifier	Listener :: prepareQueue		5456007	2					
ANR	5456052	ParameterList	"std :: string queue , std :: string exchange , std :: string routing_key"		5456007	3					
ANR	5456053	Parameter	std :: string queue	81:28:2224:2240	5456007	0	True				
ANR	5456054	ParameterType	std :: string		5456007	0					
ANR	5456055	Identifier	queue		5456007	1					
ANR	5456056	Parameter	std :: string exchange	81:47:2243:2262	5456007	1	True				
ANR	5456057	ParameterType	std :: string		5456007	0					
ANR	5456058	Identifier	exchange		5456007	1					
ANR	5456059	Parameter	std :: string routing_key	81:69:2265:2287	5456007	2	True				
ANR	5456060	ParameterType	std :: string		5456007	0					
ANR	5456061	Identifier	routing_key		5456007	1					
ANR	5456062	CFGEntryNode	ENTRY		5456007		True				
ANR	5456063	CFGExitNode	EXIT		5456007		True				
ANR	5456064	Symbol	* this		5456007						
ANR	5456065	Symbol	arg :: bindingKey		5456007						
ANR	5456066	Symbol	arg :: queue		5456007						
ANR	5456067	Symbol	subscriptions		5456007						
ANR	5456068	Symbol	session		5456007						
ANR	5456069	Symbol	arg :: exchange		5456007						
ANR	5456070	Symbol	this		5456007						
ANR	5456071	Symbol	exchange		5456007						
ANR	5456072	Symbol	routing_key		5456007						
ANR	5456073	Symbol	queue		5456007						
ANR	5456074	Function	Listener :: received	94:0:2645:2984							
ANR	5456075	FunctionDef	Listener :: received (Message & message)		5456074	0					
ANR	5456076	CompoundStatement		94:42:2687:2984	5456074	0					
ANR	5456077	ExpressionStatement	"std :: cout << ""Message: "" << message . getData ( ) << "" from "" << message . getDestination ( ) << std :: endl"	95:4:2693:2791	5456074	0	True				
ANR	5456078	ShiftExpression	"std :: cout << ""Message: "" << message . getData ( ) << "" from "" << message . getDestination ( ) << std :: endl"		5456074	0		<<			
ANR	5456079	Identifier	std :: cout		5456074	0					
ANR	5456080	ShiftExpression	"""Message: "" << message . getData ( ) << "" from "" << message . getDestination ( ) << std :: endl"		5456074	1		<<			
ANR	5456081	PrimaryExpression	"""Message: """		5456074	0					
ANR	5456082	ShiftExpression	"message . getData ( ) << "" from "" << message . getDestination ( ) << std :: endl"		5456074	1		<<			
ANR	5456083	CallExpression	message . getData ( )		5456074	0					
ANR	5456084	Callee	message . getData		5456074	0					
ANR	5456085	MemberAccess	message . getData		5456074	0					
ANR	5456086	Identifier	message		5456074	0					
ANR	5456087	Identifier	getData		5456074	1					
ANR	5456088	ArgumentList			5456074	1					
ANR	5456089	ShiftExpression	""" from "" << message . getDestination ( ) << std :: endl"		5456074	1		<<			
ANR	5456090	PrimaryExpression	""" from """		5456074	0					
ANR	5456091	ShiftExpression	message . getDestination ( ) << std :: endl		5456074	1		<<			
ANR	5456092	CallExpression	message . getDestination ( )		5456074	0					
ANR	5456093	Callee	message . getDestination		5456074	0					
ANR	5456094	MemberAccess	message . getDestination		5456074	0					
ANR	5456095	Identifier	message		5456074	0					
ANR	5456096	Identifier	getDestination		5456074	1					
ANR	5456097	ArgumentList			5456074	1					
ANR	5456098	Identifier	std :: endl		5456074	1					
ANR	5456099	IfStatement	"if ( message . getData ( ) == """" )"		5456074	1					
ANR	5456100	Condition	"message . getData ( ) == """""	97:8:2802:2824	5456074	0	True				
ANR	5456101	EqualityExpression	"message . getData ( ) == """""		5456074	0		==			
ANR	5456102	CallExpression	message . getData ( )		5456074	0					
ANR	5456103	Callee	message . getData		5456074	0					
ANR	5456104	MemberAccess	message . getData		5456074	0					
ANR	5456105	Identifier	message		5456074	0					
ANR	5456106	Identifier	getData		5456074	1					
ANR	5456107	ArgumentList			5456074	1					
ANR	5456108	PrimaryExpression	""""""		5456074	1					
ANR	5456109	CompoundStatement		4:33:139:139	5456074	1					
ANR	5456110	ExpressionStatement	"std :: cout << ""Shutting down listener for "" << message . getDestination ( ) << std :: endl"	98:8:2837:2920	5456074	0	True				
ANR	5456111	ShiftExpression	"std :: cout << ""Shutting down listener for "" << message . getDestination ( ) << std :: endl"		5456074	0		<<			
ANR	5456112	Identifier	std :: cout		5456074	0					
ANR	5456113	ShiftExpression	"""Shutting down listener for "" << message . getDestination ( ) << std :: endl"		5456074	1		<<			
ANR	5456114	PrimaryExpression	"""Shutting down listener for """		5456074	0					
ANR	5456115	ShiftExpression	message . getDestination ( ) << std :: endl		5456074	1		<<			
ANR	5456116	CallExpression	message . getDestination ( )		5456074	0					
ANR	5456117	Callee	message . getDestination		5456074	0					
ANR	5456118	MemberAccess	message . getDestination		5456074	0					
ANR	5456119	Identifier	message		5456074	0					
ANR	5456120	Identifier	getDestination		5456074	1					
ANR	5456121	ArgumentList			5456074	1					
ANR	5456122	Identifier	std :: endl		5456074	1					
ANR	5456123	ExpressionStatement	subscriptions . cancel ( message . getDestination ( ) )	99:8:2930:2976	5456074	1	True				
ANR	5456124	CallExpression	subscriptions . cancel ( message . getDestination ( ) )		5456074	0					
ANR	5456125	Callee	subscriptions . cancel		5456074	0					
ANR	5456126	MemberAccess	subscriptions . cancel		5456074	0					
ANR	5456127	Identifier	subscriptions		5456074	0					
ANR	5456128	Identifier	cancel		5456074	1					
ANR	5456129	ArgumentList	message . getDestination ( )		5456074	1					
ANR	5456130	Argument	message . getDestination ( )		5456074	0					
ANR	5456131	CallExpression	message . getDestination ( )		5456074	0					
ANR	5456132	Callee	message . getDestination		5456074	0					
ANR	5456133	MemberAccess	message . getDestination		5456074	0					
ANR	5456134	Identifier	message		5456074	0					
ANR	5456135	Identifier	getDestination		5456074	1					
ANR	5456136	ArgumentList			5456074	1					
ANR	5456137	ReturnType	void		5456074	1					
ANR	5456138	Identifier	Listener :: received		5456074	2					
ANR	5456139	ParameterList	Message & message		5456074	3					
ANR	5456140	Parameter	Message & message	94:24:2669:2684	5456074	0	True				
ANR	5456141	ParameterType	Message &		5456074	0					
ANR	5456142	Identifier	message		5456074	1					
ANR	5456143	CFGEntryNode	ENTRY		5456074		True				
ANR	5456144	CFGExitNode	EXIT		5456074		True				
ANR	5456145	Symbol	subscriptions		5456074						
ANR	5456146	Symbol	message		5456074						
ANR	5456147	Symbol	message . getData		5456074						
ANR	5456148	Symbol	message . getDestination		5456074						
ANR	5456149	Function	Listener :: listen	103:0:2987:3062							
ANR	5456150	FunctionDef	Listener :: listen ()		5456149	0					
ANR	5456151	CompoundStatement		103:24:3011:3062	5456149	0					
ANR	5456152	ExpressionStatement	subscriptions . run ( )	105:4:3041:3060	5456149	0	True				
ANR	5456153	CallExpression	subscriptions . run ( )		5456149	0					
ANR	5456154	Callee	subscriptions . run		5456149	0					
ANR	5456155	MemberAccess	subscriptions . run		5456149	0					
ANR	5456156	Identifier	subscriptions		5456149	0					
ANR	5456157	Identifier	run		5456149	1					
ANR	5456158	ArgumentList			5456149	1					
ANR	5456159	ReturnType	void		5456149	1					
ANR	5456160	Identifier	Listener :: listen		5456149	2					
ANR	5456161	ParameterList			5456149	3					
ANR	5456162	CFGEntryNode	ENTRY		5456149		True				
ANR	5456163	CFGExitNode	EXIT		5456149		True				
ANR	5456164	Symbol	subscriptions		5456149						
ANR	5456165	Function	main	108:0:3065:4135							
ANR	5456166	FunctionDef	"main (int argc , char * * argv)"		5456165	0					
ANR	5456167	CompoundStatement		108:32:3097:4135	5456165	0					
ANR	5456168	IdentifierDeclStatement	char * host = ( char * ) malloc ( 256 ) ;	109:4:3103:3134	5456165	0	True				
ANR	5456169	IdentifierDecl	* host = ( char * ) malloc ( 256 )		5456165	0					
ANR	5456170	IdentifierDeclType	char *		5456165	0					
ANR	5456171	Identifier	host		5456165	1					
ANR	5456172	AssignmentExpression	* host = ( char * ) malloc ( 256 )		5456165	2		=			
ANR	5456173	Identifier	host		5456165	0					
ANR	5456174	CastExpression	( char * ) malloc ( 256 )		5456165	1					
ANR	5456175	CastTarget	char *		5456165	0					
ANR	5456176	CallExpression	malloc ( 256 )		5456165	1					
ANR	5456177	Callee	malloc		5456165	0					
ANR	5456178	Identifier	malloc		5456165	0					
ANR	5456179	ArgumentList	256		5456165	1					
ANR	5456180	Argument	256		5456165	0					
ANR	5456181	PrimaryExpression	256		5456165	0					
ANR	5456182	IdentifierDeclStatement	int port = getPortNumber ( host ) ;	110:4:3140:3171	5456165	1	True				
ANR	5456183	IdentifierDecl	port = getPortNumber ( host )		5456165	0					
ANR	5456184	IdentifierDeclType	int		5456165	0					
ANR	5456185	Identifier	port		5456165	1					
ANR	5456186	AssignmentExpression	port = getPortNumber ( host )		5456165	2		=			
ANR	5456187	Identifier	port		5456165	0					
ANR	5456188	CallExpression	getPortNumber ( host )		5456165	1					
ANR	5456189	Callee	getPortNumber		5456165	0					
ANR	5456190	Identifier	getPortNumber		5456165	0					
ANR	5456191	ArgumentList	host		5456165	1					
ANR	5456192	Argument	host		5456165	0					
ANR	5456193	Identifier	host		5456165	0					
ANR	5456194	IfStatement	if ( port < 0 )		5456165	2					
ANR	5456195	Condition	port < 0	111:8:3181:3188	5456165	0	True				
ANR	5456196	RelationalExpression	port < 0		5456165	0		<			
ANR	5456197	Identifier	port		5456165	0					
ANR	5456198	PrimaryExpression	0		5456165	1					
ANR	5456199	CompoundStatement		4:18:93:93	5456165	1					
ANR	5456200	ExpressionStatement	"printf ( ""Apparently no qpid daemon is running. Exiting.\\n"" )"	112:5:3198:3256	5456165	0	True				
ANR	5456201	CallExpression	"printf ( ""Apparently no qpid daemon is running. Exiting.\\n"" )"		5456165	0					
ANR	5456202	Callee	printf		5456165	0					
ANR	5456203	Identifier	printf		5456165	0					
ANR	5456204	ArgumentList	"""Apparently no qpid daemon is running. Exiting.\\n"""		5456165	1					
ANR	5456205	Argument	"""Apparently no qpid daemon is running. Exiting.\\n"""		5456165	0					
ANR	5456206	PrimaryExpression	"""Apparently no qpid daemon is running. Exiting.\\n"""		5456165	0					
ANR	5456207	IdentifierDeclStatement	"std :: string exchange = ""amq.topic"" ;"	115:4:3274:3308	5456165	3	True				
ANR	5456208	IdentifierDecl	"exchange = ""amq.topic"""		5456165	0					
ANR	5456209	IdentifierDeclType	std :: string		5456165	0					
ANR	5456210	Identifier	exchange		5456165	1					
ANR	5456211	AssignmentExpression	"exchange = ""amq.topic"""		5456165	2		=			
ANR	5456212	Identifier	exchange		5456165	0					
ANR	5456213	PrimaryExpression	"""amq.topic"""		5456165	1					
ANR	5456214	IdentifierDeclStatement	Connection connection ;	116:4:3314:3335	5456165	4	True				
ANR	5456215	IdentifierDecl	connection		5456165	0					
ANR	5456216	IdentifierDeclType	Connection		5456165	0					
ANR	5456217	Identifier	connection		5456165	1					
ANR	5456218	TryStatement	try		5456165	5					
ANR	5456219	CompoundStatement		18:8:473:499	5456165	0					
ANR	5456220	ExpressionStatement	"connection . open ( host , port )"		5456165	0					
ANR	5456221	CallExpression	"connection . open ( host , port )"		5456165	0					
ANR	5456222	Callee	connection . open		5456165	0					
ANR	5456223	MemberAccess	connection . open		5456165	0					
ANR	5456224	Identifier	connection		5456165	0					
ANR	5456225	Identifier	open		5456165	1					
ANR	5456226	ArgumentList	host		5456165	1					
ANR	5456227	Argument	host		5456165	0					
ANR	5456228	Identifier	host		5456165	0					
ANR	5456229	Argument	port		5456165	1					
ANR	5456230	Identifier	port		5456165	0					
ANR	5456231	IdentifierDeclStatement	Session session = connection . newSession ( ) ;		5456165	1					
ANR	5456232	IdentifierDecl	session = connection . newSession ( )		5456165	0					
ANR	5456233	IdentifierDeclType	Session		5456165	0					
ANR	5456234	Identifier	session		5456165	1					
ANR	5456235	AssignmentExpression	session = connection . newSession ( )		5456165	2		=			
ANR	5456236	Identifier	session		5456165	0					
ANR	5456237	CallExpression	connection . newSession ( )		5456165	1					
ANR	5456238	Callee	connection . newSession		5456165	0					
ANR	5456239	MemberAccess	connection . newSession		5456165	0					
ANR	5456240	Identifier	connection		5456165	0					
ANR	5456241	Identifier	newSession		5456165	1					
ANR	5456242	ArgumentList			5456165	1					
ANR	5456243	IdentifierDeclStatement	Listener listener ( session ) ;		5456165	2					
ANR	5456244	IdentifierDecl	listener ( session )		5456165	0					
ANR	5456245	IdentifierDeclType	Listener		5456165	0					
ANR	5456246	Identifier	listener		5456165	1					
ANR	5456247	Identifier	session		5456165	2					
ANR	5456248	ExpressionStatement	"listener . prepareQueue ( ""log_msg_queue"" , exchange , ""routing_key1"" )"		5456165	3					
ANR	5456249	CallExpression	"listener . prepareQueue ( ""log_msg_queue"" , exchange , ""routing_key1"" )"		5456165	0					
ANR	5456250	Callee	listener . prepareQueue		5456165	0					
ANR	5456251	MemberAccess	listener . prepareQueue		5456165	0					
ANR	5456252	Identifier	listener		5456165	0					
ANR	5456253	Identifier	prepareQueue		5456165	1					
ANR	5456254	ArgumentList	"""log_msg_queue"""		5456165	1					
ANR	5456255	Argument	"""log_msg_queue"""		5456165	0					
ANR	5456256	PrimaryExpression	"""log_msg_queue"""		5456165	0					
ANR	5456257	Argument	exchange		5456165	1					
ANR	5456258	Identifier	exchange		5456165	0					
ANR	5456259	Argument	"""routing_key1"""		5456165	2					
ANR	5456260	PrimaryExpression	"""routing_key1"""		5456165	0					
ANR	5456261	ExpressionStatement	"std :: cout << ""Listening for messages ..."" << std :: endl"		5456165	4					
ANR	5456262	ShiftExpression	"std :: cout << ""Listening for messages ..."" << std :: endl"		5456165	0		<<			
ANR	5456263	Identifier	std :: cout		5456165	0					
ANR	5456264	ShiftExpression	"""Listening for messages ..."" << std :: endl"		5456165	1		<<			
ANR	5456265	PrimaryExpression	"""Listening for messages ..."""		5456165	0					
ANR	5456266	Identifier	std :: endl		5456165	1					
ANR	5456267	ExpressionStatement	listener . listen ( )		5456165	5					
ANR	5456268	CallExpression	listener . listen ( )		5456165	0					
ANR	5456269	Callee	listener . listen		5456165	0					
ANR	5456270	MemberAccess	listener . listen		5456165	0					
ANR	5456271	Identifier	listener		5456165	0					
ANR	5456272	Identifier	listen		5456165	1					
ANR	5456273	ArgumentList			5456165	1					
ANR	5456274	ExpressionStatement	connection . close ( )		5456165	6					
ANR	5456275	CallExpression	connection . close ( )		5456165	0					
ANR	5456276	Callee	connection . close		5456165	0					
ANR	5456277	MemberAccess	connection . close		5456165	0					
ANR	5456278	Identifier	connection		5456165	0					
ANR	5456279	Identifier	close		5456165	1					
ANR	5456280	ArgumentList			5456165	1					
ANR	5456281	ReturnStatement	return 0 ;		5456165	7					
ANR	5456282	PrimaryExpression	0		5456165	0					
ANR	5456283	CatchList			5456165	1					
ANR	5456284	CatchStatement	catch ( const std :: exception & error )		5456165	0					
ANR	5456285	Identifier	error		5456165	0					
ANR	5456286	CompoundStatement		34:41:964:964	5456165	1					
ANR	5456287	ExpressionStatement	std :: cout << error . what ( ) << std :: endl	142:8:4072:4110	5456165	0	True				
ANR	5456288	ShiftExpression	std :: cout << error . what ( ) << std :: endl		5456165	0		<<			
ANR	5456289	Identifier	std :: cout		5456165	0					
ANR	5456290	ShiftExpression	error . what ( ) << std :: endl		5456165	1		<<			
ANR	5456291	CallExpression	error . what ( )		5456165	0					
ANR	5456292	Callee	error . what		5456165	0					
ANR	5456293	MemberAccess	error . what		5456165	0					
ANR	5456294	Identifier	error		5456165	0					
ANR	5456295	Identifier	what		5456165	1					
ANR	5456296	ArgumentList			5456165	1					
ANR	5456297	Identifier	std :: endl		5456165	1					
ANR	5456298	ReturnStatement	return 1 ;	144:4:4122:4130	5456165	6	True				
ANR	5456299	PrimaryExpression	1		5456165	0					
ANR	5456300	ReturnType	int		5456165	1					
ANR	5456301	Identifier	main		5456165	2					
ANR	5456302	ParameterList	"int argc , char * * argv"		5456165	3					
ANR	5456303	Parameter	int argc	108:9:3074:3081	5456165	0	True				
ANR	5456304	ParameterType	int		5456165	0					
ANR	5456305	Identifier	argc		5456165	1					
ANR	5456306	Parameter	char * * argv	108:19:3084:3094	5456165	1	True				
ANR	5456307	ParameterType	char * *		5456165	0					
ANR	5456308	Identifier	argv		5456165	1					
ANR	5456309	CFGEntryNode	ENTRY		5456165		True				
ANR	5456310	CFGExitNode	EXIT		5456165		True				
ANR	5456311	CFGErrorNode	ERROR		5456165		True				
ANR	5456312	Symbol	argc		5456165						
ANR	5456313	Symbol	malloc		5456165						
ANR	5456314	Symbol	getPortNumber		5456165						
ANR	5456315	Symbol	port		5456165						
ANR	5456316	Symbol	host		5456165						
ANR	5456317	Symbol	exchange		5456165						
ANR	5456318	Symbol	connection		5456165						
ANR	5456319	Symbol	argv		5456165						
