command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2901949	File	data/converged/CVE-2011-4930_htcondor/src_condor_contrib_condor_pigeon_src_condor_pigeon_client_topic_publisher.cpp								
ANR	2901950	Function	getPortNumber	57:0:1573:1855							
ANR	2901951	FunctionDef	getPortNumber (char * hostname)		2901950	0					
ANR	2901952	CompoundStatement		57:33:1606:1855	2901950	0					
ANR	2901953	IdentifierDeclStatement	"FILE * f = popen ( ""daemonReader"" , ""r"" ) ;"	58:1:1609:1645	2901950	0	True				
ANR	2901954	IdentifierDecl	"* f = popen ( ""daemonReader"" , ""r"" )"		2901950	0					
ANR	2901955	IdentifierDeclType	FILE *		2901950	0					
ANR	2901956	Identifier	f		2901950	1					
ANR	2901957	AssignmentExpression	"* f = popen ( ""daemonReader"" , ""r"" )"		2901950	2		=			
ANR	2901958	Identifier	f		2901950	0					
ANR	2901959	CallExpression	"popen ( ""daemonReader"" , ""r"" )"		2901950	1					
ANR	2901960	Callee	popen		2901950	0					
ANR	2901961	Identifier	popen		2901950	0					
ANR	2901962	ArgumentList	"""daemonReader"""		2901950	1					
ANR	2901963	Argument	"""daemonReader"""		2901950	0					
ANR	2901964	PrimaryExpression	"""daemonReader"""		2901950	0					
ANR	2901965	Argument	"""r"""		2901950	1					
ANR	2901966	PrimaryExpression	"""r"""		2901950	0					
ANR	2901967	IdentifierDeclStatement	char buffer [ 256 ] ;	59:1:1648:1664	2901950	1	True				
ANR	2901968	IdentifierDecl	buffer [ 256 ]		2901950	0					
ANR	2901969	IdentifierDeclType	char [ 256 ]		2901950	0					
ANR	2901970	Identifier	buffer		2901950	1					
ANR	2901971	PrimaryExpression	256		2901950	2					
ANR	2901972	IdentifierDeclStatement	int count = 0 ;	60:1:1667:1680	2901950	2	True				
ANR	2901973	IdentifierDecl	count = 0		2901950	0					
ANR	2901974	IdentifierDeclType	int		2901950	0					
ANR	2901975	Identifier	count		2901950	1					
ANR	2901976	AssignmentExpression	count = 0		2901950	2		=			
ANR	2901977	Identifier	count		2901950	0					
ANR	2901978	PrimaryExpression	0		2901950	1					
ANR	2901979	WhileStatement	"while ( fgets ( buffer , 256 , f ) )"		2901950	3					
ANR	2901980	Condition	"fgets ( buffer , 256 , f )"	61:8:1690:1710	2901950	0	True				
ANR	2901981	CallExpression	"fgets ( buffer , 256 , f )"		2901950	0					
ANR	2901982	Callee	fgets		2901950	0					
ANR	2901983	Identifier	fgets		2901950	0					
ANR	2901984	ArgumentList	buffer		2901950	1					
ANR	2901985	Argument	buffer		2901950	0					
ANR	2901986	Identifier	buffer		2901950	0					
ANR	2901987	Argument	256		2901950	1					
ANR	2901988	PrimaryExpression	256		2901950	0					
ANR	2901989	Argument	f		2901950	2					
ANR	2901990	Identifier	f		2901950	0					
ANR	2901991	CompoundStatement		5:31:106:106	2901950	1					
ANR	2901992	ExpressionStatement	buffer [ strlen ( buffer ) - 1 ] = '\\0'	62:2:1717:1748	2901950	0	True				
ANR	2901993	AssignmentExpression	buffer [ strlen ( buffer ) - 1 ] = '\\0'		2901950	0		=			
ANR	2901994	ArrayIndexing	buffer [ strlen ( buffer ) - 1 ]		2901950	0					
ANR	2901995	Identifier	buffer		2901950	0					
ANR	2901996	AdditiveExpression	strlen ( buffer ) - 1		2901950	1		-			
ANR	2901997	CallExpression	strlen ( buffer )		2901950	0					
ANR	2901998	Callee	strlen		2901950	0					
ANR	2901999	Identifier	strlen		2901950	0					
ANR	2902000	ArgumentList	buffer		2901950	1					
ANR	2902001	Argument	buffer		2901950	0					
ANR	2902002	Identifier	buffer		2901950	0					
ANR	2902003	PrimaryExpression	1		2901950	1					
ANR	2902004	PrimaryExpression	'\\0'		2901950	1					
ANR	2902005	IfStatement	if ( count > 0 )		2901950	1					
ANR	2902006	Condition	count > 0	63:6:1756:1764	2901950	0	True				
ANR	2902007	RelationalExpression	count > 0		2901950	0		>			
ANR	2902008	Identifier	count		2901950	0					
ANR	2902009	PrimaryExpression	0		2901950	1					
ANR	2902010	ReturnStatement	return atoi ( buffer ) ;	64:3:1770:1789	2901950	1	True				
ANR	2902011	CallExpression	atoi ( buffer )		2901950	0					
ANR	2902012	Callee	atoi		2901950	0					
ANR	2902013	Identifier	atoi		2901950	0					
ANR	2902014	ArgumentList	buffer		2901950	1					
ANR	2902015	Argument	buffer		2901950	0					
ANR	2902016	Identifier	buffer		2901950	0					
ANR	2902017	ExpressionStatement	"sprintf ( hostname , ""%s"" , buffer )"	65:2:1793:1824	2901950	2	True				
ANR	2902018	CallExpression	"sprintf ( hostname , ""%s"" , buffer )"		2901950	0					
ANR	2902019	Callee	sprintf		2901950	0					
ANR	2902020	Identifier	sprintf		2901950	0					
ANR	2902021	ArgumentList	hostname		2901950	1					
ANR	2902022	Argument	hostname		2901950	0					
ANR	2902023	Identifier	hostname		2901950	0					
ANR	2902024	Argument	"""%s"""		2901950	1					
ANR	2902025	PrimaryExpression	"""%s"""		2901950	0					
ANR	2902026	Argument	buffer		2901950	2					
ANR	2902027	Identifier	buffer		2901950	0					
ANR	2902028	ExpressionStatement	++ count	66:2:1828:1835	2901950	3	True				
ANR	2902029	UnaryExpression	++ count		2901950	0					
ANR	2902030	IncDec	++		2901950	0					
ANR	2902031	Identifier	count		2901950	1					
ANR	2902032	ReturnStatement	return - 1 ;	69:1:1844:1853	2901950	4	True				
ANR	2902033	UnaryOperationExpression	- 1		2901950	0					
ANR	2902034	UnaryOperator	-		2901950	0					
ANR	2902035	PrimaryExpression	1		2901950	1					
ANR	2902036	ReturnType	int		2901950	1					
ANR	2902037	Identifier	getPortNumber		2901950	2					
ANR	2902038	ParameterList	char * hostname		2901950	3					
ANR	2902039	Parameter	char * hostname	57:18:1591:1604	2901950	0	True				
ANR	2902040	ParameterType	char *		2901950	0					
ANR	2902041	Identifier	hostname		2901950	1					
ANR	2902042	CFGEntryNode	ENTRY		2901950		True				
ANR	2902043	CFGExitNode	EXIT		2901950		True				
ANR	2902044	Symbol	atoi		2901950						
ANR	2902045	Symbol	strlen		2901950						
ANR	2902046	Symbol	hostname		2901950						
ANR	2902047	Symbol	* buffer		2901950						
ANR	2902048	Symbol	popen		2901950						
ANR	2902049	Symbol	* strlen		2901950						
ANR	2902050	Symbol	f		2901950						
ANR	2902051	Symbol	count		2901950						
ANR	2902052	Symbol	buffer		2901950						
ANR	2902053	Symbol	fgets		2901950						
ANR	2902054	ClassDef	Listener	76:0:1944:2485							
ANR	2902055	DeclStmt									
ANR	2902056	Decl							Session	Session &	session
ANR	2902057	DeclStmt									
ANR	2902058	Decl							SubscriptionManager	SubscriptionManager	subscriptions
ANR	2902059	DeclStmt									
ANR	2902060	Decl							string	string	newMessage
ANR	2902061	DeclStmt									
ANR	2902062	Decl							LocalQueue	LocalQueue	local_queue
ANR	2902063	DeclStmt									
ANR	2902064	Decl							LocalQueue	LocalQueue	temp_local_queue
ANR	2902065	DeclStmt									
ANR	2902066	Decl							void	"void ( std :: string queue , std :: string exchange , std :: string routing_key )"	prepareQueue
ANR	2902067	DeclStmt									
ANR	2902068	Decl							void	void ( Message & message )	received
ANR	2902069	DeclStmt									
ANR	2902070	Decl							void	void ( )	listen
ANR	2902071	DeclStmt									
ANR	2902072	Decl							void	void ( )	dequeue
ANR	2902073	DeclStmt									
ANR	2902074	Decl							void	void ( )	browse
ANR	2902075	DeclStmt									
ANR	2902076	Decl							void	void ( )	consume
ANR	2902077	DeclStmt									
ANR	2902078	Decl							bool	bool ( )	initListen
ANR	2902079	DeclStmt									
ANR	2902080	Decl							string	string ( )	getNewMessage
ANR	2902081	Function	~Listener	93:4:2468:2482							
ANR	2902082	FunctionDef	~Listener ()		2902081	13					
ANR	2902083	CompoundStatement		93:16:2480:2482	2902081	0					
ANR	2902084	Identifier	~Listener		2902081	1					
ANR	2902085	ParameterList			2902081	2					
ANR	2902086	CFGEntryNode	ENTRY		2902081		True				
ANR	2902087	CFGExitNode	EXIT		2902081		True				
ANR	2902088	Function	Listener :: Listener	106:0:2761:2848							
ANR	2902089	FunctionDef	Listener :: Listener (Session & session)		2902088	0					
ANR	2902090	CompoundStatement		109:0:2846:2848	2902088	0					
ANR	2902091	Identifier	Listener :: Listener		2902088	1					
ANR	2902092	ParameterList	Session & session		2902088	2					
ANR	2902093	Parameter	Session & session	106:19:2780:2795	2902088	0	True				
ANR	2902094	ParameterType	Session &		2902088	0					
ANR	2902095	Identifier	session		2902088	1					
ANR	2902096	CFGEntryNode	ENTRY		2902088		True				
ANR	2902097	CFGExitNode	EXIT		2902088		True				
ANR	2902098	Symbol	session		2902088						
ANR	2902099	Function	Listener :: getNewMessage	116:0:2960:3015							
ANR	2902100	FunctionDef	Listener :: getNewMessage ()		2902099	0					
ANR	2902101	CompoundStatement		116:32:2992:3015	2902099	0					
ANR	2902102	ReturnStatement	return newMessage ;	117:2:2996:3013	2902099	0	True				
ANR	2902103	Identifier	newMessage		2902099	0					
ANR	2902104	ReturnType	string		2902099	1					
ANR	2902105	Identifier	Listener :: getNewMessage		2902099	2					
ANR	2902106	ParameterList			2902099	3					
ANR	2902107	CFGEntryNode	ENTRY		2902099		True				
ANR	2902108	CFGExitNode	EXIT		2902099		True				
ANR	2902109	Symbol	newMessage		2902099						
ANR	2902110	Function	Listener :: prepareQueue	124:0:3064:3458							
ANR	2902111	FunctionDef	"Listener :: prepareQueue (std :: string queue , std :: string exchange , std :: string routing_key)"		2902110	0					
ANR	2902112	CompoundStatement		124:94:3158:3458	2902110	0					
ANR	2902113	ExpressionStatement	"std :: cout << ""Subscribing to queue "" << queue << std :: endl"	126:2:3163:3221	2902110	0	True				
ANR	2902114	ShiftExpression	"std :: cout << ""Subscribing to queue "" << queue << std :: endl"		2902110	0		<<			
ANR	2902115	Identifier	std :: cout		2902110	0					
ANR	2902116	ShiftExpression	"""Subscribing to queue "" << queue << std :: endl"		2902110	1		<<			
ANR	2902117	PrimaryExpression	"""Subscribing to queue """		2902110	0					
ANR	2902118	ShiftExpression	queue << std :: endl		2902110	1		<<			
ANR	2902119	Identifier	queue		2902110	0					
ANR	2902120	Identifier	std :: endl		2902110	1					
ANR	2902121	ExpressionStatement	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"	130:2:3396:3456	2902110	1	True				
ANR	2902122	CallExpression	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"		2902110	0					
ANR	2902123	Callee	subscriptions . subscribe		2902110	0					
ANR	2902124	MemberAccess	subscriptions . subscribe		2902110	0					
ANR	2902125	Identifier	subscriptions		2902110	0					
ANR	2902126	Identifier	subscribe		2902110	1					
ANR	2902127	ArgumentList	local_queue		2902110	1					
ANR	2902128	Argument	local_queue		2902110	0					
ANR	2902129	Identifier	local_queue		2902110	0					
ANR	2902130	Argument	"string ( ""condor_queue"" )"		2902110	1					
ANR	2902131	CallExpression	"string ( ""condor_queue"" )"		2902110	0					
ANR	2902132	Callee	string		2902110	0					
ANR	2902133	Identifier	string		2902110	0					
ANR	2902134	ArgumentList	"""condor_queue"""		2902110	1					
ANR	2902135	Argument	"""condor_queue"""		2902110	0					
ANR	2902136	PrimaryExpression	"""condor_queue"""		2902110	0					
ANR	2902137	ReturnType	void		2902110	1					
ANR	2902138	Identifier	Listener :: prepareQueue		2902110	2					
ANR	2902139	ParameterList	"std :: string queue , std :: string exchange , std :: string routing_key"		2902110	3					
ANR	2902140	Parameter	std :: string queue	124:28:3092:3108	2902110	0	True				
ANR	2902141	ParameterType	std :: string		2902110	0					
ANR	2902142	Identifier	queue		2902110	1					
ANR	2902143	Parameter	std :: string exchange	124:47:3111:3130	2902110	1	True				
ANR	2902144	ParameterType	std :: string		2902110	0					
ANR	2902145	Identifier	exchange		2902110	1					
ANR	2902146	Parameter	std :: string routing_key	124:69:3133:3155	2902110	2	True				
ANR	2902147	ParameterType	std :: string		2902110	0					
ANR	2902148	Identifier	routing_key		2902110	1					
ANR	2902149	CFGEntryNode	ENTRY		2902110		True				
ANR	2902150	CFGExitNode	EXIT		2902110		True				
ANR	2902151	Symbol	subscriptions		2902110						
ANR	2902152	Symbol	string		2902110						
ANR	2902153	Symbol	local_queue		2902110						
ANR	2902154	Symbol	exchange		2902110						
ANR	2902155	Symbol	routing_key		2902110						
ANR	2902156	Symbol	queue		2902110						
ANR	2902157	Function	Listener :: received	137:0:3571:4223							
ANR	2902158	FunctionDef	Listener :: received (Message & message)		2902157	0					
ANR	2902159	CompoundStatement		137:42:3613:4223	2902157	0					
ANR	2902160	IdentifierDeclStatement	"char * prevStateFileName = ""tempLRM.dat"" ;"	139:2:3618:3657	2902157	0	True				
ANR	2902161	IdentifierDecl	"* prevStateFileName = ""tempLRM.dat"""		2902157	0					
ANR	2902162	IdentifierDeclType	char *		2902157	0					
ANR	2902163	Identifier	prevStateFileName		2902157	1					
ANR	2902164	AssignmentExpression	"* prevStateFileName = ""tempLRM.dat"""		2902157	2		=			
ANR	2902165	Identifier	prevStateFileName		2902157	0					
ANR	2902166	PrimaryExpression	"""tempLRM.dat"""		2902157	1					
ANR	2902167	IdentifierDeclStatement	ofstream prevStateFile ;	140:2:3661:3684	2902157	1	True				
ANR	2902168	IdentifierDecl	prevStateFile		2902157	0					
ANR	2902169	IdentifierDeclType	ofstream		2902157	0					
ANR	2902170	Identifier	prevStateFile		2902157	1					
ANR	2902171	ExpressionStatement	"prevStateFile . open ( prevStateFileName , ios :: out )"	141:2:3688:3734	2902157	2	True				
ANR	2902172	CallExpression	"prevStateFile . open ( prevStateFileName , ios :: out )"		2902157	0					
ANR	2902173	Callee	prevStateFile . open		2902157	0					
ANR	2902174	MemberAccess	prevStateFile . open		2902157	0					
ANR	2902175	Identifier	prevStateFile		2902157	0					
ANR	2902176	Identifier	open		2902157	1					
ANR	2902177	ArgumentList	prevStateFileName		2902157	1					
ANR	2902178	Argument	prevStateFileName		2902157	0					
ANR	2902179	Identifier	prevStateFileName		2902157	0					
ANR	2902180	Argument	ios :: out		2902157	1					
ANR	2902181	Identifier	ios :: out		2902157	0					
ANR	2902182	ExpressionStatement	"cout << ""\\n STOP : about to write to a file().. "" << endl"	142:2:3738:3794	2902157	3	True				
ANR	2902183	ShiftExpression	"cout << ""\\n STOP : about to write to a file().. "" << endl"		2902157	0		<<			
ANR	2902184	Identifier	cout		2902157	0					
ANR	2902185	ShiftExpression	"""\\n STOP : about to write to a file().. "" << endl"		2902157	1		<<			
ANR	2902186	PrimaryExpression	"""\\n STOP : about to write to a file().. """		2902157	0					
ANR	2902187	Identifier	endl		2902157	1					
ANR	2902188	ExpressionStatement	prevStateFile << message . getData ( )	143:2:3798:3832	2902157	4	True				
ANR	2902189	ShiftExpression	prevStateFile << message . getData ( )		2902157	0		<<			
ANR	2902190	Identifier	prevStateFile		2902157	0					
ANR	2902191	CallExpression	message . getData ( )		2902157	1					
ANR	2902192	Callee	message . getData		2902157	0					
ANR	2902193	MemberAccess	message . getData		2902157	0					
ANR	2902194	Identifier	message		2902157	0					
ANR	2902195	Identifier	getData		2902157	1					
ANR	2902196	ArgumentList			2902157	1					
ANR	2902197	ExpressionStatement	prevStateFile . close ( )	144:2:3836:3857	2902157	5	True				
ANR	2902198	CallExpression	prevStateFile . close ( )		2902157	0					
ANR	2902199	Callee	prevStateFile . close		2902157	0					
ANR	2902200	MemberAccess	prevStateFile . close		2902157	0					
ANR	2902201	Identifier	prevStateFile		2902157	0					
ANR	2902202	Identifier	close		2902157	1					
ANR	2902203	ArgumentList			2902157	1					
ANR	2902204	ExpressionStatement	"rename ( prevStateFileName , ""LRM.dat"" )"	145:2:3861:3896	2902157	6	True				
ANR	2902205	CallExpression	"rename ( prevStateFileName , ""LRM.dat"" )"		2902157	0					
ANR	2902206	Callee	rename		2902157	0					
ANR	2902207	Identifier	rename		2902157	0					
ANR	2902208	ArgumentList	prevStateFileName		2902157	1					
ANR	2902209	Argument	prevStateFileName		2902157	0					
ANR	2902210	Identifier	prevStateFileName		2902157	0					
ANR	2902211	Argument	"""LRM.dat"""		2902157	1					
ANR	2902212	PrimaryExpression	"""LRM.dat"""		2902157	0					
ANR	2902213	IdentifierDeclStatement	string msgTxt = message . getData ( ) ;	146:2:3900:3933	2902157	7	True				
ANR	2902214	IdentifierDecl	msgTxt = message . getData ( )		2902157	0					
ANR	2902215	IdentifierDeclType	string		2902157	0					
ANR	2902216	Identifier	msgTxt		2902157	1					
ANR	2902217	AssignmentExpression	msgTxt = message . getData ( )		2902157	2		=			
ANR	2902218	Identifier	msgTxt		2902157	0					
ANR	2902219	CallExpression	message . getData ( )		2902157	1					
ANR	2902220	Callee	message . getData		2902157	0					
ANR	2902221	MemberAccess	message . getData		2902157	0					
ANR	2902222	Identifier	message		2902157	0					
ANR	2902223	Identifier	getData		2902157	1					
ANR	2902224	ArgumentList			2902157	1					
ANR	2902225	ExpressionStatement	newMessage = message . getData ( )	147:2:3937:3967	2902157	8	True				
ANR	2902226	AssignmentExpression	newMessage = message . getData ( )		2902157	0		=			
ANR	2902227	Identifier	newMessage		2902157	0					
ANR	2902228	CallExpression	message . getData ( )		2902157	1					
ANR	2902229	Callee	message . getData		2902157	0					
ANR	2902230	MemberAccess	message . getData		2902157	0					
ANR	2902231	Identifier	message		2902157	0					
ANR	2902232	Identifier	getData		2902157	1					
ANR	2902233	ArgumentList			2902157	1					
ANR	2902234	IfStatement	"if ( message . getData ( ) == """" )"		2902157	9					
ANR	2902235	Condition	"message . getData ( ) == """""	149:6:3976:3998	2902157	0	True				
ANR	2902236	EqualityExpression	"message . getData ( ) == """""		2902157	0		==			
ANR	2902237	CallExpression	message . getData ( )		2902157	0					
ANR	2902238	Callee	message . getData		2902157	0					
ANR	2902239	MemberAccess	message . getData		2902157	0					
ANR	2902240	Identifier	message		2902157	0					
ANR	2902241	Identifier	getData		2902157	1					
ANR	2902242	ArgumentList			2902157	1					
ANR	2902243	PrimaryExpression	""""""		2902157	1					
ANR	2902244	CompoundStatement		13:31:387:387	2902157	1					
ANR	2902245	ExpressionStatement	"std :: cout << ""Shutting down listener for "" << message . getDestination ( ) << std :: endl"	150:4:4007:4090	2902157	0	True				
ANR	2902246	ShiftExpression	"std :: cout << ""Shutting down listener for "" << message . getDestination ( ) << std :: endl"		2902157	0		<<			
ANR	2902247	Identifier	std :: cout		2902157	0					
ANR	2902248	ShiftExpression	"""Shutting down listener for "" << message . getDestination ( ) << std :: endl"		2902157	1		<<			
ANR	2902249	PrimaryExpression	"""Shutting down listener for """		2902157	0					
ANR	2902250	ShiftExpression	message . getDestination ( ) << std :: endl		2902157	1		<<			
ANR	2902251	CallExpression	message . getDestination ( )		2902157	0					
ANR	2902252	Callee	message . getDestination		2902157	0					
ANR	2902253	MemberAccess	message . getDestination		2902157	0					
ANR	2902254	Identifier	message		2902157	0					
ANR	2902255	Identifier	getDestination		2902157	1					
ANR	2902256	ArgumentList			2902157	1					
ANR	2902257	Identifier	std :: endl		2902157	1					
ANR	2902258	ExpressionStatement	subscriptions . cancel ( message . getDestination ( ) )	151:4:4096:4142	2902157	1	True				
ANR	2902259	CallExpression	subscriptions . cancel ( message . getDestination ( ) )		2902157	0					
ANR	2902260	Callee	subscriptions . cancel		2902157	0					
ANR	2902261	MemberAccess	subscriptions . cancel		2902157	0					
ANR	2902262	Identifier	subscriptions		2902157	0					
ANR	2902263	Identifier	cancel		2902157	1					
ANR	2902264	ArgumentList	message . getDestination ( )		2902157	1					
ANR	2902265	Argument	message . getDestination ( )		2902157	0					
ANR	2902266	CallExpression	message . getDestination ( )		2902157	0					
ANR	2902267	Callee	message . getDestination		2902157	0					
ANR	2902268	MemberAccess	message . getDestination		2902157	0					
ANR	2902269	Identifier	message		2902157	0					
ANR	2902270	Identifier	getDestination		2902157	1					
ANR	2902271	ArgumentList			2902157	1					
ANR	2902272	ExpressionStatement	subscriptions . stop ( )	153:2:4150:4170	2902157	10	True				
ANR	2902273	CallExpression	subscriptions . stop ( )		2902157	0					
ANR	2902274	Callee	subscriptions . stop		2902157	0					
ANR	2902275	MemberAccess	subscriptions . stop		2902157	0					
ANR	2902276	Identifier	subscriptions		2902157	0					
ANR	2902277	Identifier	stop		2902157	1					
ANR	2902278	ArgumentList			2902157	1					
ANR	2902279	ExpressionStatement	subscriptions . cancel ( message . getDestination ( ) )	154:2:4174:4220	2902157	11	True				
ANR	2902280	CallExpression	subscriptions . cancel ( message . getDestination ( ) )		2902157	0					
ANR	2902281	Callee	subscriptions . cancel		2902157	0					
ANR	2902282	MemberAccess	subscriptions . cancel		2902157	0					
ANR	2902283	Identifier	subscriptions		2902157	0					
ANR	2902284	Identifier	cancel		2902157	1					
ANR	2902285	ArgumentList	message . getDestination ( )		2902157	1					
ANR	2902286	Argument	message . getDestination ( )		2902157	0					
ANR	2902287	CallExpression	message . getDestination ( )		2902157	0					
ANR	2902288	Callee	message . getDestination		2902157	0					
ANR	2902289	MemberAccess	message . getDestination		2902157	0					
ANR	2902290	Identifier	message		2902157	0					
ANR	2902291	Identifier	getDestination		2902157	1					
ANR	2902292	ArgumentList			2902157	1					
ANR	2902293	ReturnType	void		2902157	1					
ANR	2902294	Identifier	Listener :: received		2902157	2					
ANR	2902295	ParameterList	Message & message		2902157	3					
ANR	2902296	Parameter	Message & message	137:24:3595:3610	2902157	0	True				
ANR	2902297	ParameterType	Message &		2902157	0					
ANR	2902298	Identifier	message		2902157	1					
ANR	2902299	CFGEntryNode	ENTRY		2902157		True				
ANR	2902300	CFGExitNode	EXIT		2902157		True				
ANR	2902301	Symbol	prevStateFile		2902157						
ANR	2902302	Symbol	subscriptions		2902157						
ANR	2902303	Symbol	ios :: out		2902157						
ANR	2902304	Symbol	newMessage		2902157						
ANR	2902305	Symbol	msgTxt		2902157						
ANR	2902306	Symbol	message		2902157						
ANR	2902307	Symbol	message . getData		2902157						
ANR	2902308	Symbol	message . getDestination		2902157						
ANR	2902309	Symbol	prevStateFileName		2902157						
ANR	2902310	Function	Listener :: listen	162:0:4361:4410							
ANR	2902311	FunctionDef	Listener :: listen ()		2902310	0					
ANR	2902312	CompoundStatement		162:24:4385:4410	2902310	0					
ANR	2902313	ExpressionStatement	subscriptions . run ( )	163:2:4389:4408	2902310	0	True				
ANR	2902314	CallExpression	subscriptions . run ( )		2902310	0					
ANR	2902315	Callee	subscriptions . run		2902310	0					
ANR	2902316	MemberAccess	subscriptions . run		2902310	0					
ANR	2902317	Identifier	subscriptions		2902310	0					
ANR	2902318	Identifier	run		2902310	1					
ANR	2902319	ArgumentList			2902310	1					
ANR	2902320	ReturnType	void		2902310	1					
ANR	2902321	Identifier	Listener :: listen		2902310	2					
ANR	2902322	ParameterList			2902310	3					
ANR	2902323	CFGEntryNode	ENTRY		2902310		True				
ANR	2902324	CFGExitNode	EXIT		2902310		True				
ANR	2902325	Symbol	subscriptions		2902310						
ANR	2902326	Function	Listener :: browse	171:0:4556:4756							
ANR	2902327	FunctionDef	Listener :: browse ()		2902326	0					
ANR	2902328	CompoundStatement		172:0:4581:4756	2902326	0					
ANR	2902329	ExpressionStatement	"subscriptions . subscribe ( * this , ""condor_queue"" , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"	173:2:4586:4725	2902326	0	True				
ANR	2902330	CallExpression	"subscriptions . subscribe ( * this , ""condor_queue"" , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"		2902326	0					
ANR	2902331	Callee	subscriptions . subscribe		2902326	0					
ANR	2902332	MemberAccess	subscriptions . subscribe		2902326	0					
ANR	2902333	Identifier	subscriptions		2902326	0					
ANR	2902334	Identifier	subscribe		2902326	1					
ANR	2902335	ArgumentList	* this		2902326	1					
ANR	2902336	Argument	* this		2902326	0					
ANR	2902337	UnaryOperationExpression	* this		2902326	0					
ANR	2902338	UnaryOperator	*		2902326	0					
ANR	2902339	Identifier	this		2902326	1					
ANR	2902340	Argument	"""condor_queue"""		2902326	1					
ANR	2902341	PrimaryExpression	"""condor_queue"""		2902326	0					
ANR	2902342	Argument	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		2902326	2					
ANR	2902343	CallExpression	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		2902326	0					
ANR	2902344	Callee	SubscriptionSettings		2902326	0					
ANR	2902345	Identifier	SubscriptionSettings		2902326	0					
ANR	2902346	ArgumentList	FlowControl :: unlimited ( )		2902326	1					
ANR	2902347	Argument	FlowControl :: unlimited ( )		2902326	0					
ANR	2902348	CallExpression	FlowControl :: unlimited ( )		2902326	0					
ANR	2902349	Callee	FlowControl :: unlimited		2902326	0					
ANR	2902350	Identifier	FlowControl :: unlimited		2902326	0					
ANR	2902351	ArgumentList			2902326	1					
ANR	2902352	Argument	ACCEPT_MODE_NONE		2902326	1					
ANR	2902353	Identifier	ACCEPT_MODE_NONE		2902326	0					
ANR	2902354	Argument	ACQUIRE_MODE_NOT_ACQUIRED		2902326	2					
ANR	2902355	Identifier	ACQUIRE_MODE_NOT_ACQUIRED		2902326	0					
ANR	2902356	ExpressionStatement	subscriptions . run ( )	174:2:4734:4753	2902326	1	True				
ANR	2902357	CallExpression	subscriptions . run ( )		2902326	0					
ANR	2902358	Callee	subscriptions . run		2902326	0					
ANR	2902359	MemberAccess	subscriptions . run		2902326	0					
ANR	2902360	Identifier	subscriptions		2902326	0					
ANR	2902361	Identifier	run		2902326	1					
ANR	2902362	ArgumentList			2902326	1					
ANR	2902363	ReturnType	void		2902326	1					
ANR	2902364	Identifier	Listener :: browse		2902326	2					
ANR	2902365	ParameterList			2902326	3					
ANR	2902366	CFGEntryNode	ENTRY		2902326		True				
ANR	2902367	CFGExitNode	EXIT		2902326		True				
ANR	2902368	Symbol	FlowControl :: unlimited		2902326						
ANR	2902369	Symbol	* this		2902326						
ANR	2902370	Symbol	SubscriptionSettings		2902326						
ANR	2902371	Symbol	subscriptions		2902326						
ANR	2902372	Symbol	ACCEPT_MODE_NONE		2902326						
ANR	2902373	Symbol	ACQUIRE_MODE_NOT_ACQUIRED		2902326						
ANR	2902374	Symbol	this		2902326						
ANR	2902375	Function	Listener :: consume	182:0:4911:5090							
ANR	2902376	FunctionDef	Listener :: consume ()		2902375	0					
ANR	2902377	CompoundStatement		183:0:4937:5090	2902375	0					
ANR	2902378	IdentifierDeclStatement	Message lMsg ;	184:2:4942:4954	2902375	0	True				
ANR	2902379	IdentifierDecl	lMsg		2902375	0					
ANR	2902380	IdentifierDeclType	Message		2902375	0					
ANR	2902381	Identifier	lMsg		2902375	1					
ANR	2902382	ExpressionStatement	"lMsg = subscriptions . get ( string ( ""condor_queue"" ) )"	185:2:4958:5006	2902375	1	True				
ANR	2902383	AssignmentExpression	"lMsg = subscriptions . get ( string ( ""condor_queue"" ) )"		2902375	0		=			
ANR	2902384	Identifier	lMsg		2902375	0					
ANR	2902385	CallExpression	"subscriptions . get ( string ( ""condor_queue"" ) )"		2902375	1					
ANR	2902386	Callee	subscriptions . get		2902375	0					
ANR	2902387	MemberAccess	subscriptions . get		2902375	0					
ANR	2902388	Identifier	subscriptions		2902375	0					
ANR	2902389	Identifier	get		2902375	1					
ANR	2902390	ArgumentList	"string ( ""condor_queue"" )"		2902375	1					
ANR	2902391	Argument	"string ( ""condor_queue"" )"		2902375	0					
ANR	2902392	CallExpression	"string ( ""condor_queue"" )"		2902375	0					
ANR	2902393	Callee	string		2902375	0					
ANR	2902394	Identifier	string		2902375	0					
ANR	2902395	ArgumentList	"""condor_queue"""		2902375	1					
ANR	2902396	Argument	"""condor_queue"""		2902375	0					
ANR	2902397	PrimaryExpression	"""condor_queue"""		2902375	0					
ANR	2902398	ExpressionStatement	newMessage = lMsg . getData ( )	186:2:5010:5037	2902375	2	True				
ANR	2902399	AssignmentExpression	newMessage = lMsg . getData ( )		2902375	0		=			
ANR	2902400	Identifier	newMessage		2902375	0					
ANR	2902401	CallExpression	lMsg . getData ( )		2902375	1					
ANR	2902402	Callee	lMsg . getData		2902375	0					
ANR	2902403	MemberAccess	lMsg . getData		2902375	0					
ANR	2902404	Identifier	lMsg		2902375	0					
ANR	2902405	Identifier	getData		2902375	1					
ANR	2902406	ArgumentList			2902375	1					
ANR	2902407	ExpressionStatement	"cout << ""\\n consume() => "" << newMessage << endl"	187:2:5041:5087	2902375	3	True				
ANR	2902408	ShiftExpression	"cout << ""\\n consume() => "" << newMessage << endl"		2902375	0		<<			
ANR	2902409	Identifier	cout		2902375	0					
ANR	2902410	ShiftExpression	"""\\n consume() => "" << newMessage << endl"		2902375	1		<<			
ANR	2902411	PrimaryExpression	"""\\n consume() => """		2902375	0					
ANR	2902412	ShiftExpression	newMessage << endl		2902375	1		<<			
ANR	2902413	Identifier	newMessage		2902375	0					
ANR	2902414	Identifier	endl		2902375	1					
ANR	2902415	ReturnType	void		2902375	1					
ANR	2902416	Identifier	Listener :: consume		2902375	2					
ANR	2902417	ParameterList			2902375	3					
ANR	2902418	CFGEntryNode	ENTRY		2902375		True				
ANR	2902419	CFGExitNode	EXIT		2902375		True				
ANR	2902420	Symbol	subscriptions		2902375						
ANR	2902421	Symbol	string		2902375						
ANR	2902422	Symbol	lMsg		2902375						
ANR	2902423	Symbol	newMessage		2902375						
ANR	2902424	Symbol	lMsg . getData		2902375						
ANR	2902425	Symbol	subscriptions . get		2902375						
ANR	2902426	Function	Listener :: dequeue	195:0:5216:5529							
ANR	2902427	FunctionDef	Listener :: dequeue ()		2902426	0					
ANR	2902428	CompoundStatement		195:25:5241:5529	2902426	0					
ANR	2902429	ExpressionStatement	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"	196:2:5245:5305	2902426	0	True				
ANR	2902430	CallExpression	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"		2902426	0					
ANR	2902431	Callee	subscriptions . subscribe		2902426	0					
ANR	2902432	MemberAccess	subscriptions . subscribe		2902426	0					
ANR	2902433	Identifier	subscriptions		2902426	0					
ANR	2902434	Identifier	subscribe		2902426	1					
ANR	2902435	ArgumentList	local_queue		2902426	1					
ANR	2902436	Argument	local_queue		2902426	0					
ANR	2902437	Identifier	local_queue		2902426	0					
ANR	2902438	Argument	"string ( ""condor_queue"" )"		2902426	1					
ANR	2902439	CallExpression	"string ( ""condor_queue"" )"		2902426	0					
ANR	2902440	Callee	string		2902426	0					
ANR	2902441	Identifier	string		2902426	0					
ANR	2902442	ArgumentList	"""condor_queue"""		2902426	1					
ANR	2902443	Argument	"""condor_queue"""		2902426	0					
ANR	2902444	PrimaryExpression	"""condor_queue"""		2902426	0					
ANR	2902445	IdentifierDeclStatement	Message lMsg ;	197:2:5312:5324	2902426	1	True				
ANR	2902446	IdentifierDecl	lMsg		2902426	0					
ANR	2902447	IdentifierDeclType	Message		2902426	0					
ANR	2902448	Identifier	lMsg		2902426	1					
ANR	2902449	IdentifierDeclStatement	int size = 10 ;	198:2:5328:5341	2902426	2	True				
ANR	2902450	IdentifierDecl	size = 10		2902426	0					
ANR	2902451	IdentifierDeclType	int		2902426	0					
ANR	2902452	Identifier	size		2902426	1					
ANR	2902453	AssignmentExpression	size = 10		2902426	2		=			
ANR	2902454	Identifier	size		2902426	0					
ANR	2902455	PrimaryExpression	10		2902426	1					
ANR	2902456	ExpressionStatement	size = local_queue . size ( )	199:2:5345:5370	2902426	3	True				
ANR	2902457	AssignmentExpression	size = local_queue . size ( )		2902426	0		=			
ANR	2902458	Identifier	size		2902426	0					
ANR	2902459	CallExpression	local_queue . size ( )		2902426	1					
ANR	2902460	Callee	local_queue . size		2902426	0					
ANR	2902461	MemberAccess	local_queue . size		2902426	0					
ANR	2902462	Identifier	local_queue		2902426	0					
ANR	2902463	Identifier	size		2902426	1					
ANR	2902464	ArgumentList			2902426	1					
ANR	2902465	ExpressionStatement	"cout << ""\\n STOP : about to dequeue  "" << endl"	200:2:5374:5419	2902426	4	True				
ANR	2902466	ShiftExpression	"cout << ""\\n STOP : about to dequeue  "" << endl"		2902426	0		<<			
ANR	2902467	Identifier	cout		2902426	0					
ANR	2902468	ShiftExpression	"""\\n STOP : about to dequeue  "" << endl"		2902426	1		<<			
ANR	2902469	PrimaryExpression	"""\\n STOP : about to dequeue  """		2902426	0					
ANR	2902470	Identifier	endl		2902426	1					
ANR	2902471	ExpressionStatement	"local_queue . get ( lMsg , 10000 )"	202:2:5424:5451	2902426	5	True				
ANR	2902472	CallExpression	"local_queue . get ( lMsg , 10000 )"		2902426	0					
ANR	2902473	Callee	local_queue . get		2902426	0					
ANR	2902474	MemberAccess	local_queue . get		2902426	0					
ANR	2902475	Identifier	local_queue		2902426	0					
ANR	2902476	Identifier	get		2902426	1					
ANR	2902477	ArgumentList	lMsg		2902426	1					
ANR	2902478	Argument	lMsg		2902426	0					
ANR	2902479	Identifier	lMsg		2902426	0					
ANR	2902480	Argument	10000		2902426	1					
ANR	2902481	PrimaryExpression	10000		2902426	0					
ANR	2902482	ExpressionStatement	newMessage = lMsg . getData ( )	203:2:5455:5482	2902426	6	True				
ANR	2902483	AssignmentExpression	newMessage = lMsg . getData ( )		2902426	0		=			
ANR	2902484	Identifier	newMessage		2902426	0					
ANR	2902485	CallExpression	lMsg . getData ( )		2902426	1					
ANR	2902486	Callee	lMsg . getData		2902426	0					
ANR	2902487	MemberAccess	lMsg . getData		2902426	0					
ANR	2902488	Identifier	lMsg		2902426	0					
ANR	2902489	Identifier	getData		2902426	1					
ANR	2902490	ArgumentList			2902426	1					
ANR	2902491	ExpressionStatement	"cout << ""\\n STOP : after dequeue "" << endl"	204:2:5486:5527	2902426	7	True				
ANR	2902492	ShiftExpression	"cout << ""\\n STOP : after dequeue "" << endl"		2902426	0		<<			
ANR	2902493	Identifier	cout		2902426	0					
ANR	2902494	ShiftExpression	"""\\n STOP : after dequeue "" << endl"		2902426	1		<<			
ANR	2902495	PrimaryExpression	"""\\n STOP : after dequeue """		2902426	0					
ANR	2902496	Identifier	endl		2902426	1					
ANR	2902497	ReturnType	void		2902426	1					
ANR	2902498	Identifier	Listener :: dequeue		2902426	2					
ANR	2902499	ParameterList			2902426	3					
ANR	2902500	CFGEntryNode	ENTRY		2902426		True				
ANR	2902501	CFGExitNode	EXIT		2902426		True				
ANR	2902502	Symbol	subscriptions		2902426						
ANR	2902503	Symbol	local_queue . size		2902426						
ANR	2902504	Symbol	string		2902426						
ANR	2902505	Symbol	size		2902426						
ANR	2902506	Symbol	local_queue		2902426						
ANR	2902507	Symbol	lMsg		2902426						
ANR	2902508	Symbol	lMsg . getData		2902426						
ANR	2902509	Symbol	newMessage		2902426						
ANR	2902510	Function	Listener :: initListen	215:0:5747:6578							
ANR	2902511	FunctionDef	Listener :: initListen ()		2902510	0					
ANR	2902512	CompoundStatement		215:28:5775:6578	2902510	0					
ANR	2902513	ExpressionStatement	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"	218:2:5864:6016	2902510	0	True				
ANR	2902514	CallExpression	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"		2902510	0					
ANR	2902515	Callee	subscriptions . subscribe		2902510	0					
ANR	2902516	MemberAccess	subscriptions . subscribe		2902510	0					
ANR	2902517	Identifier	subscriptions		2902510	0					
ANR	2902518	Identifier	subscribe		2902510	1					
ANR	2902519	ArgumentList	local_queue		2902510	1					
ANR	2902520	Argument	local_queue		2902510	0					
ANR	2902521	Identifier	local_queue		2902510	0					
ANR	2902522	Argument	"string ( ""condor_queue"" )"		2902510	1					
ANR	2902523	CallExpression	"string ( ""condor_queue"" )"		2902510	0					
ANR	2902524	Callee	string		2902510	0					
ANR	2902525	Identifier	string		2902510	0					
ANR	2902526	ArgumentList	"""condor_queue"""		2902510	1					
ANR	2902527	Argument	"""condor_queue"""		2902510	0					
ANR	2902528	PrimaryExpression	"""condor_queue"""		2902510	0					
ANR	2902529	Argument	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		2902510	2					
ANR	2902530	CallExpression	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		2902510	0					
ANR	2902531	Callee	SubscriptionSettings		2902510	0					
ANR	2902532	Identifier	SubscriptionSettings		2902510	0					
ANR	2902533	ArgumentList	FlowControl :: unlimited ( )		2902510	1					
ANR	2902534	Argument	FlowControl :: unlimited ( )		2902510	0					
ANR	2902535	CallExpression	FlowControl :: unlimited ( )		2902510	0					
ANR	2902536	Callee	FlowControl :: unlimited		2902510	0					
ANR	2902537	Identifier	FlowControl :: unlimited		2902510	0					
ANR	2902538	ArgumentList			2902510	1					
ANR	2902539	Argument	ACCEPT_MODE_NONE		2902510	1					
ANR	2902540	Identifier	ACCEPT_MODE_NONE		2902510	0					
ANR	2902541	Argument	ACQUIRE_MODE_NOT_ACQUIRED		2902510	2					
ANR	2902542	Identifier	ACQUIRE_MODE_NOT_ACQUIRED		2902510	0					
ANR	2902543	IdentifierDeclStatement	Message lMsg ;	219:2:6023:6035	2902510	1	True				
ANR	2902544	IdentifierDecl	lMsg		2902510	0					
ANR	2902545	IdentifierDeclType	Message		2902510	0					
ANR	2902546	Identifier	lMsg		2902510	1					
ANR	2902547	ExpressionStatement	sleep ( 2 )	222:2:6126:6134	2902510	2	True				
ANR	2902548	CallExpression	sleep ( 2 )		2902510	0					
ANR	2902549	Callee	sleep		2902510	0					
ANR	2902550	Identifier	sleep		2902510	0					
ANR	2902551	ArgumentList	2		2902510	1					
ANR	2902552	Argument	2		2902510	0					
ANR	2902553	PrimaryExpression	2		2902510	0					
ANR	2902554	IdentifierDeclStatement	int size = 10 ;	223:2:6138:6151	2902510	3	True				
ANR	2902555	IdentifierDecl	size = 10		2902510	0					
ANR	2902556	IdentifierDeclType	int		2902510	0					
ANR	2902557	Identifier	size		2902510	1					
ANR	2902558	AssignmentExpression	size = 10		2902510	2		=			
ANR	2902559	Identifier	size		2902510	0					
ANR	2902560	PrimaryExpression	10		2902510	1					
ANR	2902561	ExpressionStatement	size = local_queue . size ( )	224:2:6155:6180	2902510	4	True				
ANR	2902562	AssignmentExpression	size = local_queue . size ( )		2902510	0		=			
ANR	2902563	Identifier	size		2902510	0					
ANR	2902564	CallExpression	local_queue . size ( )		2902510	1					
ANR	2902565	Callee	local_queue . size		2902510	0					
ANR	2902566	MemberAccess	local_queue . size		2902510	0					
ANR	2902567	Identifier	local_queue		2902510	0					
ANR	2902568	Identifier	size		2902510	1					
ANR	2902569	ArgumentList			2902510	1					
ANR	2902570	ExpressionStatement	"local_queue . get ( lMsg , 10000 )"	225:2:6184:6211	2902510	5	True				
ANR	2902571	CallExpression	"local_queue . get ( lMsg , 10000 )"		2902510	0					
ANR	2902572	Callee	local_queue . get		2902510	0					
ANR	2902573	MemberAccess	local_queue . get		2902510	0					
ANR	2902574	Identifier	local_queue		2902510	0					
ANR	2902575	Identifier	get		2902510	1					
ANR	2902576	ArgumentList	lMsg		2902510	1					
ANR	2902577	Argument	lMsg		2902510	0					
ANR	2902578	Identifier	lMsg		2902510	0					
ANR	2902579	Argument	10000		2902510	1					
ANR	2902580	PrimaryExpression	10000		2902510	0					
ANR	2902581	ExpressionStatement	newMessage = lMsg . getData ( )	226:2:6215:6242	2902510	6	True				
ANR	2902582	AssignmentExpression	newMessage = lMsg . getData ( )		2902510	0		=			
ANR	2902583	Identifier	newMessage		2902510	0					
ANR	2902584	CallExpression	lMsg . getData ( )		2902510	1					
ANR	2902585	Callee	lMsg . getData		2902510	0					
ANR	2902586	MemberAccess	lMsg . getData		2902510	0					
ANR	2902587	Identifier	lMsg		2902510	0					
ANR	2902588	Identifier	getData		2902510	1					
ANR	2902589	ArgumentList			2902510	1					
ANR	2902590	ExpressionStatement	subscriptions . stop ( )	227:2:6246:6266	2902510	7	True				
ANR	2902591	CallExpression	subscriptions . stop ( )		2902510	0					
ANR	2902592	Callee	subscriptions . stop		2902510	0					
ANR	2902593	MemberAccess	subscriptions . stop		2902510	0					
ANR	2902594	Identifier	subscriptions		2902510	0					
ANR	2902595	Identifier	stop		2902510	1					
ANR	2902596	ArgumentList			2902510	1					
ANR	2902597	ExpressionStatement	subscriptions . cancel ( lMsg . getDestination ( ) )	228:2:6270:6313	2902510	8	True				
ANR	2902598	CallExpression	subscriptions . cancel ( lMsg . getDestination ( ) )		2902510	0					
ANR	2902599	Callee	subscriptions . cancel		2902510	0					
ANR	2902600	MemberAccess	subscriptions . cancel		2902510	0					
ANR	2902601	Identifier	subscriptions		2902510	0					
ANR	2902602	Identifier	cancel		2902510	1					
ANR	2902603	ArgumentList	lMsg . getDestination ( )		2902510	1					
ANR	2902604	Argument	lMsg . getDestination ( )		2902510	0					
ANR	2902605	CallExpression	lMsg . getDestination ( )		2902510	0					
ANR	2902606	Callee	lMsg . getDestination		2902510	0					
ANR	2902607	MemberAccess	lMsg . getDestination		2902510	0					
ANR	2902608	Identifier	lMsg		2902510	0					
ANR	2902609	Identifier	getDestination		2902510	1					
ANR	2902610	ArgumentList			2902510	1					
ANR	2902611	ExpressionStatement	"cout << ""\\n initListen(): size of the queue is : "" << size << endl"	229:2:6317:6382	2902510	9	True				
ANR	2902612	ShiftExpression	"cout << ""\\n initListen(): size of the queue is : "" << size << endl"		2902510	0		<<			
ANR	2902613	Identifier	cout		2902510	0					
ANR	2902614	ShiftExpression	"""\\n initListen(): size of the queue is : "" << size << endl"		2902510	1		<<			
ANR	2902615	PrimaryExpression	"""\\n initListen(): size of the queue is : """		2902510	0					
ANR	2902616	ShiftExpression	size << endl		2902510	1		<<			
ANR	2902617	Identifier	size		2902510	0					
ANR	2902618	Identifier	endl		2902510	1					
ANR	2902619	IfStatement	if ( size > 0 )		2902510	10					
ANR	2902620	Condition	size > 0	230:5:6389:6396	2902510	0	True				
ANR	2902621	RelationalExpression	size > 0		2902510	0		>			
ANR	2902622	Identifier	size		2902510	0					
ANR	2902623	PrimaryExpression	0		2902510	1					
ANR	2902624	CompoundStatement		16:14:622:622	2902510	1					
ANR	2902625	ReturnStatement	return false ;	232:4:6448:6460	2902510	0	True				
ANR	2902626	Identifier	false		2902510	0					
ANR	2902627	ElseStatement	else		2902510	0					
ANR	2902628	CompoundStatement		20:6:696:696	2902510	0					
ANR	2902629	ReturnStatement	return true ;	236:4:6561:6572	2902510	0	True				
ANR	2902630	Identifier	true		2902510	0					
ANR	2902631	ReturnType	bool		2902510	1					
ANR	2902632	Identifier	Listener :: initListen		2902510	2					
ANR	2902633	ParameterList			2902510	3					
ANR	2902634	CFGEntryNode	ENTRY		2902510		True				
ANR	2902635	CFGExitNode	EXIT		2902510		True				
ANR	2902636	Symbol	subscriptions		2902510						
ANR	2902637	Symbol	local_queue . size		2902510						
ANR	2902638	Symbol	ACCEPT_MODE_NONE		2902510						
ANR	2902639	Symbol	string		2902510						
ANR	2902640	Symbol	lMsg		2902510						
ANR	2902641	Symbol	false		2902510						
ANR	2902642	Symbol	lMsg . getData		2902510						
ANR	2902643	Symbol	FlowControl :: unlimited		2902510						
ANR	2902644	Symbol	SubscriptionSettings		2902510						
ANR	2902645	Symbol	size		2902510						
ANR	2902646	Symbol	local_queue		2902510						
ANR	2902647	Symbol	ACQUIRE_MODE_NOT_ACQUIRED		2902510						
ANR	2902648	Symbol	true		2902510						
ANR	2902649	Symbol	lMsg . getDestination		2902510						
ANR	2902650	Symbol	newMessage		2902510						
ANR	2902651	ClassDef	ClientPub	246:0:6676:7423							
ANR	2902652	DeclStmt									
ANR	2902653	Decl							bool	"bool ( int p , int c )"	compareMsgId
ANR	2902654	DeclStmt									
ANR	2902655	Decl							bool	"bool ( int p , int c , int pe , int ce )"	compareFId
ANR	2902656	DeclStmt									
ANR	2902657	Decl							int	int ( string msgTxt )	getMsgId
ANR	2902658	DeclStmt									
ANR	2902659	Decl							int	"int ( string msgTxt , string id )"	getMsgId
ANR	2902660	DeclStmt									
ANR	2902661	Decl							bool	"bool ( string msg1 , string msg2 )"	validLogMsg
ANR	2902662	DeclStmt									
ANR	2902663	Decl							bool	bool	mustFree
ANR	2902664	DeclStmt									
ANR	2902665	Decl							void	"void ( string logMsg , char * persistFile )"	publish_messages
ANR	2902666	DeclStmt									
ANR	2902667	Decl							void	void ( char * loadFile )	initLoadMsg
ANR	2902668	DeclStmt									
ANR	2902669	Decl							void	"void ( char * persistFile , int eventTrack , int erotate , bool excludeFlag )"	readLog
ANR	2902670	DeclStmt									
ANR	2902671	Decl							bool	bool	initFlag
ANR	2902672	DeclStmt									
ANR	2902673	Decl							bool	bool	skipFlag
ANR	2902674	DeclStmt									
ANR	2902675	Decl							int	int	curMsgId
ANR	2902676	DeclStmt									
ANR	2902677	Decl							int	int	prevMsgId
ANR	2902678	DeclStmt									
ANR	2902679	Decl							int	int	curFId
ANR	2902680	DeclStmt									
ANR	2902681	Decl							int	int	prevFId
ANR	2902682	DeclStmt									
ANR	2902683	Decl							string	string	tempMsg
ANR	2902684	DeclStmt									
ANR	2902685	Decl							int	int	port
ANR	2902686	DeclStmt									
ANR	2902687	Decl							char	char *	host
ANR	2902688	Function	ClientPub :: ClientPub	274:0:7427:8028							
ANR	2902689	FunctionDef	"ClientPub :: ClientPub (char * persistFile , char * iFile , int erotate , char * hostArg , int portArg)"		2902688	0					
ANR	2902690	CompoundStatement		274:125:7552:8028	2902688	0					
ANR	2902691	ExpressionStatement	"cout << ""Init ...  "" << endl"	275:2:7556:7584	2902688	0	True				
ANR	2902692	ShiftExpression	"cout << ""Init ...  "" << endl"		2902688	0		<<			
ANR	2902693	Identifier	cout		2902688	0					
ANR	2902694	ShiftExpression	"""Init ...  "" << endl"		2902688	1		<<			
ANR	2902695	PrimaryExpression	"""Init ...  """		2902688	0					
ANR	2902696	Identifier	endl		2902688	1					
ANR	2902697	ExpressionStatement	initFlag = true	276:2:7588:7603	2902688	1	True				
ANR	2902698	AssignmentExpression	initFlag = true		2902688	0		=			
ANR	2902699	Identifier	initFlag		2902688	0					
ANR	2902700	Identifier	true		2902688	1					
ANR	2902701	ExpressionStatement	skipFlag = false	277:2:7607:7623	2902688	2	True				
ANR	2902702	AssignmentExpression	skipFlag = false		2902688	0		=			
ANR	2902703	Identifier	skipFlag		2902688	0					
ANR	2902704	Identifier	false		2902688	1					
ANR	2902705	ExpressionStatement	curMsgId = 0	278:2:7627:7639	2902688	3	True				
ANR	2902706	AssignmentExpression	curMsgId = 0		2902688	0		=			
ANR	2902707	Identifier	curMsgId		2902688	0					
ANR	2902708	PrimaryExpression	0		2902688	1					
ANR	2902709	ExpressionStatement	prevMsgId = 0	279:2:7643:7656	2902688	4	True				
ANR	2902710	AssignmentExpression	prevMsgId = 0		2902688	0		=			
ANR	2902711	Identifier	prevMsgId		2902688	0					
ANR	2902712	PrimaryExpression	0		2902688	1					
ANR	2902713	ExpressionStatement	curFId = 0	280:2:7660:7670	2902688	5	True				
ANR	2902714	AssignmentExpression	curFId = 0		2902688	0		=			
ANR	2902715	Identifier	curFId		2902688	0					
ANR	2902716	PrimaryExpression	0		2902688	1					
ANR	2902717	ExpressionStatement	prevFId = 0	281:2:7674:7685	2902688	6	True				
ANR	2902718	AssignmentExpression	prevFId = 0		2902688	0		=			
ANR	2902719	Identifier	prevFId		2902688	0					
ANR	2902720	PrimaryExpression	0		2902688	1					
ANR	2902721	ExpressionStatement	mustFree = true	282:2:7689:7704	2902688	7	True				
ANR	2902722	AssignmentExpression	mustFree = true		2902688	0		=			
ANR	2902723	Identifier	mustFree		2902688	0					
ANR	2902724	Identifier	true		2902688	1					
ANR	2902725	ExpressionStatement	this -> host = ( char * ) malloc ( 256 )	283:2:7708:7739	2902688	8	True				
ANR	2902726	AssignmentExpression	this -> host = ( char * ) malloc ( 256 )		2902688	0		=			
ANR	2902727	PtrMemberAccess	this -> host		2902688	0					
ANR	2902728	Identifier	this		2902688	0					
ANR	2902729	Identifier	host		2902688	1					
ANR	2902730	CastExpression	( char * ) malloc ( 256 )		2902688	1					
ANR	2902731	CastTarget	char *		2902688	0					
ANR	2902732	CallExpression	malloc ( 256 )		2902688	1					
ANR	2902733	Callee	malloc		2902688	0					
ANR	2902734	Identifier	malloc		2902688	0					
ANR	2902735	ArgumentList	256		2902688	1					
ANR	2902736	Argument	256		2902688	0					
ANR	2902737	PrimaryExpression	256		2902688	0					
ANR	2902738	IfStatement	if ( portArg < 0 )		2902688	9					
ANR	2902739	Condition	portArg < 0	284:6:7747:7757	2902688	0	True				
ANR	2902740	RelationalExpression	portArg < 0		2902688	0		<			
ANR	2902741	Identifier	portArg		2902688	0					
ANR	2902742	PrimaryExpression	0		2902688	1					
ANR	2902743	ExpressionStatement	this -> port = getPortNumber ( this -> host )	285:3:7763:7801	2902688	1	True				
ANR	2902744	AssignmentExpression	this -> port = getPortNumber ( this -> host )		2902688	0		=			
ANR	2902745	PtrMemberAccess	this -> port		2902688	0					
ANR	2902746	Identifier	this		2902688	0					
ANR	2902747	Identifier	port		2902688	1					
ANR	2902748	CallExpression	getPortNumber ( this -> host )		2902688	1					
ANR	2902749	Callee	getPortNumber		2902688	0					
ANR	2902750	Identifier	getPortNumber		2902688	0					
ANR	2902751	ArgumentList	this -> host		2902688	1					
ANR	2902752	Argument	this -> host		2902688	0					
ANR	2902753	PtrMemberAccess	this -> host		2902688	0					
ANR	2902754	Identifier	this		2902688	0					
ANR	2902755	Identifier	host		2902688	1					
ANR	2902756	ElseStatement	else		2902688	0					
ANR	2902757	ExpressionStatement	this -> port = portArg	287:3:7814:7834	2902688	0	True				
ANR	2902758	AssignmentExpression	this -> port = portArg		2902688	0		=			
ANR	2902759	PtrMemberAccess	this -> port		2902688	0					
ANR	2902760	Identifier	this		2902688	0					
ANR	2902761	Identifier	port		2902688	1					
ANR	2902762	Identifier	portArg		2902688	1					
ANR	2902763	IfStatement	if ( hostArg != NULL )		2902688	10					
ANR	2902764	Condition	hostArg != NULL	289:6:7846:7860	2902688	0	True				
ANR	2902765	EqualityExpression	hostArg != NULL		2902688	0		!=			
ANR	2902766	Identifier	hostArg		2902688	0					
ANR	2902767	Identifier	NULL		2902688	1					
ANR	2902768	CompoundStatement		16:23:310:310	2902688	1					
ANR	2902769	IfStatement	if ( this -> host != NULL )		2902688	0					
ANR	2902770	Condition	this -> host != NULL	290:7:7872:7889	2902688	0	True				
ANR	2902771	EqualityExpression	this -> host != NULL		2902688	0		!=			
ANR	2902772	PtrMemberAccess	this -> host		2902688	0					
ANR	2902773	Identifier	this		2902688	0					
ANR	2902774	Identifier	host		2902688	1					
ANR	2902775	Identifier	NULL		2902688	1					
ANR	2902776	ExpressionStatement	free ( this -> host )	291:4:7896:7912	2902688	1	True				
ANR	2902777	CallExpression	free ( this -> host )		2902688	0					
ANR	2902778	Callee	free		2902688	0					
ANR	2902779	Identifier	free		2902688	0					
ANR	2902780	ArgumentList	this -> host		2902688	1					
ANR	2902781	Argument	this -> host		2902688	0					
ANR	2902782	PtrMemberAccess	this -> host		2902688	0					
ANR	2902783	Identifier	this		2902688	0					
ANR	2902784	Identifier	host		2902688	1					
ANR	2902785	ExpressionStatement	this -> host = hostArg	292:3:7918:7938	2902688	1	True				
ANR	2902786	AssignmentExpression	this -> host = hostArg		2902688	0		=			
ANR	2902787	PtrMemberAccess	this -> host		2902688	0					
ANR	2902788	Identifier	this		2902688	0					
ANR	2902789	Identifier	host		2902688	1					
ANR	2902790	Identifier	hostArg		2902688	1					
ANR	2902791	ExpressionStatement	mustFree = false	293:3:7943:7959	2902688	2	True				
ANR	2902792	AssignmentExpression	mustFree = false		2902688	0		=			
ANR	2902793	Identifier	mustFree		2902688	0					
ANR	2902794	Identifier	false		2902688	1					
ANR	2902795	ExpressionStatement	"tempMsg = """""	296:2:7971:7983	2902688	11	True				
ANR	2902796	AssignmentExpression	"tempMsg = """""		2902688	0		=			
ANR	2902797	Identifier	tempMsg		2902688	0					
ANR	2902798	PrimaryExpression	""""""		2902688	1					
ANR	2902799	Identifier	ClientPub :: ClientPub		2902688	1					
ANR	2902800	ParameterList	"char * persistFile , char * iFile , int erotate , char * hostArg , int portArg"		2902688	2					
ANR	2902801	Parameter	char * persistFile	274:21:7448:7464	2902688	0	True				
ANR	2902802	ParameterType	char *		2902688	0					
ANR	2902803	Identifier	persistFile		2902688	1					
ANR	2902804	Parameter	char * iFile	274:39:7466:7476	2902688	1	True				
ANR	2902805	ParameterType	char *		2902688	0					
ANR	2902806	Identifier	iFile		2902688	1					
ANR	2902807	Parameter	int erotate	274:51:7478:7488	2902688	2	True				
ANR	2902808	ParameterType	int		2902688	0					
ANR	2902809	Identifier	erotate		2902688	1					
ANR	2902810	Parameter	char * hostArg	274:64:7491:7503	2902688	3	True				
ANR	2902811	ParameterType	char *		2902688	0					
ANR	2902812	Identifier	hostArg		2902688	1					
ANR	2902813	Parameter	int portArg	274:79:7506:7516	2902688	4	True				
ANR	2902814	ParameterType	int		2902688	0					
ANR	2902815	Identifier	portArg		2902688	1					
ANR	2902816	CFGEntryNode	ENTRY		2902688		True				
ANR	2902817	CFGExitNode	EXIT		2902688		True				
ANR	2902818	Symbol	malloc		2902688						
ANR	2902819	Symbol	NULL		2902688						
ANR	2902820	Symbol	getPortNumber		2902688						
ANR	2902821	Symbol	initFlag		2902688						
ANR	2902822	Symbol	prevFId		2902688						
ANR	2902823	Symbol	persistFile		2902688						
ANR	2902824	Symbol	false		2902688						
ANR	2902825	Symbol	this		2902688						
ANR	2902826	Symbol	this -> port		2902688						
ANR	2902827	Symbol	iFile		2902688						
ANR	2902828	Symbol	tempMsg		2902688						
ANR	2902829	Symbol	mustFree		2902688						
ANR	2902830	Symbol	erotate		2902688						
ANR	2902831	Symbol	* this		2902688						
ANR	2902832	Symbol	skipFlag		2902688						
ANR	2902833	Symbol	hostArg		2902688						
ANR	2902834	Symbol	prevMsgId		2902688						
ANR	2902835	Symbol	curMsgId		2902688						
ANR	2902836	Symbol	curFId		2902688						
ANR	2902837	Symbol	portArg		2902688						
ANR	2902838	Symbol	this -> host		2902688						
ANR	2902839	Symbol	true		2902688						
ANR	2902840	Function	ClientPub :: ~ClientPub	300:0:8031:8113							
ANR	2902841	FunctionDef	ClientPub :: ~ClientPub ()		2902840	0					
ANR	2902842	CompoundStatement		300:23:8054:8113	2902840	0					
ANR	2902843	IfStatement	if ( this -> host != NULL && mustFree )		2902840	0					
ANR	2902844	Condition	this -> host != NULL && mustFree	301:5:8061:8090	2902840	0	True				
ANR	2902845	AndExpression	this -> host != NULL && mustFree		2902840	0		&&			
ANR	2902846	EqualityExpression	this -> host != NULL		2902840	0		!=			
ANR	2902847	PtrMemberAccess	this -> host		2902840	0					
ANR	2902848	Identifier	this		2902840	0					
ANR	2902849	Identifier	host		2902840	1					
ANR	2902850	Identifier	NULL		2902840	1					
ANR	2902851	Identifier	mustFree		2902840	1					
ANR	2902852	ExpressionStatement	free ( this -> host )	302:2:8095:8111	2902840	1	True				
ANR	2902853	CallExpression	free ( this -> host )		2902840	0					
ANR	2902854	Callee	free		2902840	0					
ANR	2902855	Identifier	free		2902840	0					
ANR	2902856	ArgumentList	this -> host		2902840	1					
ANR	2902857	Argument	this -> host		2902840	0					
ANR	2902858	PtrMemberAccess	this -> host		2902840	0					
ANR	2902859	Identifier	this		2902840	0					
ANR	2902860	Identifier	host		2902840	1					
ANR	2902861	Identifier	ClientPub :: ~ClientPub		2902840	1					
ANR	2902862	ParameterList			2902840	2					
ANR	2902863	CFGEntryNode	ENTRY		2902840		True				
ANR	2902864	CFGExitNode	EXIT		2902840		True				
ANR	2902865	Symbol	* this		2902840						
ANR	2902866	Symbol	NULL		2902840						
ANR	2902867	Symbol	this -> host		2902840						
ANR	2902868	Symbol	this		2902840						
ANR	2902869	Symbol	mustFree		2902840						
ANR	2902870	Function	ClientPub :: compareMsgId	313:0:8334:8551							
ANR	2902871	FunctionDef	"ClientPub :: compareMsgId (int p , int c)"		2902870	0					
ANR	2902872	CompoundStatement		313:42:8376:8551	2902870	0					
ANR	2902873	IdentifierDeclStatement	bool flag = true ;	314:2:8380:8397	2902870	0	True				
ANR	2902874	IdentifierDecl	flag = true		2902870	0					
ANR	2902875	IdentifierDeclType	bool		2902870	0					
ANR	2902876	Identifier	flag		2902870	1					
ANR	2902877	AssignmentExpression	flag = true		2902870	2		=			
ANR	2902878	Identifier	true		2902870	0					
ANR	2902879	Identifier	true		2902870	1					
ANR	2902880	IfStatement	if ( p != c )		2902870	1					
ANR	2902881	Condition	p != c	315:5:8404:8407	2902870	0	True				
ANR	2902882	EqualityExpression	p != c		2902870	0		!=			
ANR	2902883	Identifier	p		2902870	0					
ANR	2902884	Identifier	c		2902870	1					
ANR	2902885	ExpressionStatement	flag = true	316:4:8414:8425	2902870	1	True				
ANR	2902886	AssignmentExpression	flag = true		2902870	0		=			
ANR	2902887	Identifier	flag		2902870	0					
ANR	2902888	Identifier	true		2902870	1					
ANR	2902889	ElseStatement	else		2902870	0					
ANR	2902890	ExpressionStatement	flag = false	318:4:8438:8450	2902870	0	True				
ANR	2902891	AssignmentExpression	flag = false		2902870	0		=			
ANR	2902892	Identifier	flag		2902870	0					
ANR	2902893	Identifier	false		2902870	1					
ANR	2902894	ReturnStatement	return flag ;	320:2:8538:8549	2902870	2	True				
ANR	2902895	Identifier	flag		2902870	0					
ANR	2902896	ReturnType	bool		2902870	1					
ANR	2902897	Identifier	ClientPub :: compareMsgId		2902870	2					
ANR	2902898	ParameterList	"int p , int c"		2902870	3					
ANR	2902899	Parameter	int p	313:29:8363:8367	2902870	0	True				
ANR	2902900	ParameterType	int		2902870	0					
ANR	2902901	Identifier	p		2902870	1					
ANR	2902902	Parameter	int c	313:36:8370:8374	2902870	1	True				
ANR	2902903	ParameterType	int		2902870	0					
ANR	2902904	Identifier	c		2902870	1					
ANR	2902905	CFGEntryNode	ENTRY		2902870		True				
ANR	2902906	CFGExitNode	EXIT		2902870		True				
ANR	2902907	Symbol	p		2902870						
ANR	2902908	Symbol	c		2902870						
ANR	2902909	Symbol	flag		2902870						
ANR	2902910	Symbol	true		2902870						
ANR	2902911	Symbol	false		2902870						
ANR	2902912	Function	ClientPub :: compareFId	328:0:8743:9018							
ANR	2902913	FunctionDef	"ClientPub :: compareFId (int p , int c , int pe , int ce)"		2902912	0					
ANR	2902914	CompoundStatement		328:54:8797:9018	2902912	0					
ANR	2902915	IdentifierDeclStatement	bool flag = true ;	329:2:8801:8818	2902912	0	True				
ANR	2902916	IdentifierDecl	flag = true		2902912	0					
ANR	2902917	IdentifierDeclType	bool		2902912	0					
ANR	2902918	Identifier	flag		2902912	1					
ANR	2902919	AssignmentExpression	flag = true		2902912	2		=			
ANR	2902920	Identifier	true		2902912	0					
ANR	2902921	Identifier	true		2902912	1					
ANR	2902922	IfStatement	if ( p < c )		2902912	1					
ANR	2902923	Condition	p < c	330:5:8825:8827	2902912	0	True				
ANR	2902924	RelationalExpression	p < c		2902912	0		<			
ANR	2902925	Identifier	p		2902912	0					
ANR	2902926	Identifier	c		2902912	1					
ANR	2902927	ExpressionStatement	flag = true	331:4:8834:8845	2902912	1	True				
ANR	2902928	AssignmentExpression	flag = true		2902912	0		=			
ANR	2902929	Identifier	flag		2902912	0					
ANR	2902930	Identifier	true		2902912	1					
ANR	2902931	ElseStatement	else		2902912	0					
ANR	2902932	IfStatement	if ( ( p == c ) && ( pe < ce ) )		2902912	0					
ANR	2902933	Condition	( p == c ) && ( pe < ce )	332:10:8857:8871	2902912	0	True				
ANR	2902934	AndExpression	( p == c ) && ( pe < ce )		2902912	0		&&			
ANR	2902935	EqualityExpression	p == c		2902912	0		==			
ANR	2902936	Identifier	p		2902912	0					
ANR	2902937	Identifier	c		2902912	1					
ANR	2902938	RelationalExpression	pe < ce		2902912	1		<			
ANR	2902939	Identifier	pe		2902912	0					
ANR	2902940	Identifier	ce		2902912	1					
ANR	2902941	ExpressionStatement	flag = true	333:6:8880:8890	2902912	1	True				
ANR	2902942	AssignmentExpression	flag = true		2902912	0		=			
ANR	2902943	Identifier	flag		2902912	0					
ANR	2902944	Identifier	true		2902912	1					
ANR	2902945	ElseStatement	else		2902912	0					
ANR	2902946	ExpressionStatement	flag = false	335:4:8907:8919	2902912	0	True				
ANR	2902947	AssignmentExpression	flag = false		2902912	0		=			
ANR	2902948	Identifier	flag		2902912	0					
ANR	2902949	Identifier	false		2902912	1					
ANR	2902950	ReturnStatement	return flag ;	337:2:9005:9016	2902912	2	True				
ANR	2902951	Identifier	flag		2902912	0					
ANR	2902952	ReturnType	bool		2902912	1					
ANR	2902953	Identifier	ClientPub :: compareFId		2902912	2					
ANR	2902954	ParameterList	"int p , int c , int pe , int ce"		2902912	3					
ANR	2902955	Parameter	int p	328:27:8770:8774	2902912	0	True				
ANR	2902956	ParameterType	int		2902912	0					
ANR	2902957	Identifier	p		2902912	1					
ANR	2902958	Parameter	int c	328:34:8777:8781	2902912	1	True				
ANR	2902959	ParameterType	int		2902912	0					
ANR	2902960	Identifier	c		2902912	1					
ANR	2902961	Parameter	int pe	328:40:8783:8788	2902912	2	True				
ANR	2902962	ParameterType	int		2902912	0					
ANR	2902963	Identifier	pe		2902912	1					
ANR	2902964	Parameter	int ce	328:47:8790:8795	2902912	3	True				
ANR	2902965	ParameterType	int		2902912	0					
ANR	2902966	Identifier	ce		2902912	1					
ANR	2902967	CFGEntryNode	ENTRY		2902912		True				
ANR	2902968	CFGExitNode	EXIT		2902912		True				
ANR	2902969	Symbol	p		2902912						
ANR	2902970	Symbol	ce		2902912						
ANR	2902971	Symbol	c		2902912						
ANR	2902972	Symbol	flag		2902912						
ANR	2902973	Symbol	pe		2902912						
ANR	2902974	Symbol	true		2902912						
ANR	2902975	Symbol	false		2902912						
ANR	2902976	Function	ClientPub :: getMsgId	345:0:9135:9500							
ANR	2902977	FunctionDef	ClientPub :: getMsgId (string msgTxt)		2902976	0					
ANR	2902978	CompoundStatement		345:39:9174:9500	2902976	0					
ANR	2902979	IdentifierDeclStatement	"string estr = ""MsgId="" ;"	346:2:9178:9200	2902976	0	True				
ANR	2902980	IdentifierDecl	"estr = ""MsgId="""		2902976	0					
ANR	2902981	IdentifierDeclType	string		2902976	0					
ANR	2902982	Identifier	estr		2902976	1					
ANR	2902983	AssignmentExpression	"estr = ""MsgId="""		2902976	2		=			
ANR	2902984	Identifier	estr		2902976	0					
ANR	2902985	PrimaryExpression	"""MsgId="""		2902976	1					
ANR	2902986	IdentifierDeclStatement	"int startpos = msgTxt . find ( estr , 0 ) ;"	347:2:9204:9238	2902976	1	True				
ANR	2902987	IdentifierDecl	"startpos = msgTxt . find ( estr , 0 )"		2902976	0					
ANR	2902988	IdentifierDeclType	int		2902976	0					
ANR	2902989	Identifier	startpos		2902976	1					
ANR	2902990	AssignmentExpression	"startpos = msgTxt . find ( estr , 0 )"		2902976	2		=			
ANR	2902991	Identifier	startpos		2902976	0					
ANR	2902992	CallExpression	"msgTxt . find ( estr , 0 )"		2902976	1					
ANR	2902993	Callee	msgTxt . find		2902976	0					
ANR	2902994	MemberAccess	msgTxt . find		2902976	0					
ANR	2902995	Identifier	msgTxt		2902976	0					
ANR	2902996	Identifier	find		2902976	1					
ANR	2902997	ArgumentList	estr		2902976	1					
ANR	2902998	Argument	estr		2902976	0					
ANR	2902999	Identifier	estr		2902976	0					
ANR	2903000	Argument	0		2902976	1					
ANR	2903001	PrimaryExpression	0		2902976	0					
ANR	2903002	IfStatement	if ( startpos >= 0 )		2902976	2					
ANR	2903003	Condition	startpos >= 0	348:5:9245:9257	2902976	0	True				
ANR	2903004	RelationalExpression	startpos >= 0		2902976	0		>=			
ANR	2903005	Identifier	startpos		2902976	0					
ANR	2903006	PrimaryExpression	0		2902976	1					
ANR	2903007	CompoundStatement		8:4:239:272	2902976	1					
ANR	2903008	IdentifierDeclStatement	"int stoppos = msgTxt . find ( "" "" , startpos ) ;"	350:4:9312:9351	2902976	0	True				
ANR	2903009	IdentifierDecl	"stoppos = msgTxt . find ( "" "" , startpos )"		2902976	0					
ANR	2903010	IdentifierDeclType	int		2902976	0					
ANR	2903011	Identifier	stoppos		2902976	1					
ANR	2903012	AssignmentExpression	"stoppos = msgTxt . find ( "" "" , startpos )"		2902976	2		=			
ANR	2903013	Identifier	stoppos		2902976	0					
ANR	2903014	CallExpression	"msgTxt . find ( "" "" , startpos )"		2902976	1					
ANR	2903015	Callee	msgTxt . find		2902976	0					
ANR	2903016	MemberAccess	msgTxt . find		2902976	0					
ANR	2903017	Identifier	msgTxt		2902976	0					
ANR	2903018	Identifier	find		2902976	1					
ANR	2903019	ArgumentList	""" """		2902976	1					
ANR	2903020	Argument	""" """		2902976	0					
ANR	2903021	PrimaryExpression	""" """		2902976	0					
ANR	2903022	Argument	startpos		2902976	1					
ANR	2903023	Identifier	startpos		2902976	0					
ANR	2903024	IdentifierDeclStatement	"string idValStr = msgTxt . substr ( startpos + 6 , stoppos ) ;"	351:4:9357:9408	2902976	1	True				
ANR	2903025	IdentifierDecl	"idValStr = msgTxt . substr ( startpos + 6 , stoppos )"		2902976	0					
ANR	2903026	IdentifierDeclType	string		2902976	0					
ANR	2903027	Identifier	idValStr		2902976	1					
ANR	2903028	AssignmentExpression	"idValStr = msgTxt . substr ( startpos + 6 , stoppos )"		2902976	2		=			
ANR	2903029	Identifier	idValStr		2902976	0					
ANR	2903030	CallExpression	"msgTxt . substr ( startpos + 6 , stoppos )"		2902976	1					
ANR	2903031	Callee	msgTxt . substr		2902976	0					
ANR	2903032	MemberAccess	msgTxt . substr		2902976	0					
ANR	2903033	Identifier	msgTxt		2902976	0					
ANR	2903034	Identifier	substr		2902976	1					
ANR	2903035	ArgumentList	startpos + 6		2902976	1					
ANR	2903036	Argument	startpos + 6		2902976	0					
ANR	2903037	AdditiveExpression	startpos + 6		2902976	0		+			
ANR	2903038	Identifier	startpos		2902976	0					
ANR	2903039	PrimaryExpression	6		2902976	1					
ANR	2903040	Argument	stoppos		2902976	1					
ANR	2903041	Identifier	stoppos		2902976	0					
ANR	2903042	IdentifierDeclStatement	int msgId = atoi ( idValStr . c_str ( ) ) ;	352:4:9414:9447	2902976	2	True				
ANR	2903043	IdentifierDecl	msgId = atoi ( idValStr . c_str ( ) )		2902976	0					
ANR	2903044	IdentifierDeclType	int		2902976	0					
ANR	2903045	Identifier	msgId		2902976	1					
ANR	2903046	AssignmentExpression	msgId = atoi ( idValStr . c_str ( ) )		2902976	2		=			
ANR	2903047	Identifier	msgId		2902976	0					
ANR	2903048	CallExpression	atoi ( idValStr . c_str ( ) )		2902976	1					
ANR	2903049	Callee	atoi		2902976	0					
ANR	2903050	Identifier	atoi		2902976	0					
ANR	2903051	ArgumentList	idValStr . c_str ( )		2902976	1					
ANR	2903052	Argument	idValStr . c_str ( )		2902976	0					
ANR	2903053	CallExpression	idValStr . c_str ( )		2902976	0					
ANR	2903054	Callee	idValStr . c_str		2902976	0					
ANR	2903055	MemberAccess	idValStr . c_str		2902976	0					
ANR	2903056	Identifier	idValStr		2902976	0					
ANR	2903057	Identifier	c_str		2902976	1					
ANR	2903058	ArgumentList			2902976	1					
ANR	2903059	ReturnStatement	return ( msgId ) ;	353:4:9453:9466	2902976	3	True				
ANR	2903060	Identifier	msgId		2902976	0					
ANR	2903061	ElseStatement	else		2902976	0					
ANR	2903062	CompoundStatement		11:6:303:303	2902976	0					
ANR	2903063	ReturnStatement	return ( - 1 ) ;	356:4:9484:9494	2902976	0	True				
ANR	2903064	UnaryOperationExpression	- 1		2902976	0					
ANR	2903065	UnaryOperator	-		2902976	0					
ANR	2903066	PrimaryExpression	1		2902976	1					
ANR	2903067	ReturnType	int		2902976	1					
ANR	2903068	Identifier	ClientPub :: getMsgId		2902976	2					
ANR	2903069	ParameterList	string msgTxt		2902976	3					
ANR	2903070	Parameter	string msgTxt	345:25:9160:9172	2902976	0	True				
ANR	2903071	ParameterType	string		2902976	0					
ANR	2903072	Identifier	msgTxt		2902976	1					
ANR	2903073	CFGEntryNode	ENTRY		2902976		True				
ANR	2903074	CFGExitNode	EXIT		2902976		True				
ANR	2903075	Symbol	atoi		2902976						
ANR	2903076	Symbol	estr		2902976						
ANR	2903077	Symbol	msgTxt . find		2902976						
ANR	2903078	Symbol	msgTxt . substr		2902976						
ANR	2903079	Symbol	idValStr . c_str		2902976						
ANR	2903080	Symbol	msgId		2902976						
ANR	2903081	Symbol	msgTxt		2902976						
ANR	2903082	Symbol	stoppos		2902976						
ANR	2903083	Symbol	startpos		2902976						
ANR	2903084	Symbol	idValStr		2902976						
ANR	2903085	Function	ClientPub :: getMsgId	365:0:9616:9989							
ANR	2903086	FunctionDef	"ClientPub :: getMsgId (string msgTxt , string id)"		2903085	0					
ANR	2903087	CompoundStatement		365:49:9665:9989	2903085	0					
ANR	2903088	IdentifierDeclStatement	"string estr = id + ""="" ;"	366:2:9669:9689	2903085	0	True				
ANR	2903089	IdentifierDecl	"estr = id + ""="""		2903085	0					
ANR	2903090	IdentifierDeclType	string		2903085	0					
ANR	2903091	Identifier	estr		2903085	1					
ANR	2903092	AssignmentExpression	"estr = id + ""="""		2903085	2		=			
ANR	2903093	Identifier	estr		2903085	0					
ANR	2903094	AdditiveExpression	"id + ""="""		2903085	1		+			
ANR	2903095	Identifier	id		2903085	0					
ANR	2903096	PrimaryExpression	"""="""		2903085	1					
ANR	2903097	IdentifierDeclStatement	"int startpos = msgTxt . find ( estr , 0 ) ;"	367:2:9693:9727	2903085	1	True				
ANR	2903098	IdentifierDecl	"startpos = msgTxt . find ( estr , 0 )"		2903085	0					
ANR	2903099	IdentifierDeclType	int		2903085	0					
ANR	2903100	Identifier	startpos		2903085	1					
ANR	2903101	AssignmentExpression	"startpos = msgTxt . find ( estr , 0 )"		2903085	2		=			
ANR	2903102	Identifier	startpos		2903085	0					
ANR	2903103	CallExpression	"msgTxt . find ( estr , 0 )"		2903085	1					
ANR	2903104	Callee	msgTxt . find		2903085	0					
ANR	2903105	MemberAccess	msgTxt . find		2903085	0					
ANR	2903106	Identifier	msgTxt		2903085	0					
ANR	2903107	Identifier	find		2903085	1					
ANR	2903108	ArgumentList	estr		2903085	1					
ANR	2903109	Argument	estr		2903085	0					
ANR	2903110	Identifier	estr		2903085	0					
ANR	2903111	Argument	0		2903085	1					
ANR	2903112	PrimaryExpression	0		2903085	0					
ANR	2903113	IfStatement	if ( startpos >= 0 )		2903085	2					
ANR	2903114	Condition	startpos >= 0	368:5:9734:9746	2903085	0	True				
ANR	2903115	RelationalExpression	startpos >= 0		2903085	0		>=			
ANR	2903116	Identifier	startpos		2903085	0					
ANR	2903117	PrimaryExpression	0		2903085	1					
ANR	2903118	CompoundStatement		8:4:237:270	2903085	1					
ANR	2903119	IdentifierDeclStatement	"int stoppos = msgTxt . find ( "" "" , startpos ) ;"	370:4:9801:9840	2903085	0	True				
ANR	2903120	IdentifierDecl	"stoppos = msgTxt . find ( "" "" , startpos )"		2903085	0					
ANR	2903121	IdentifierDeclType	int		2903085	0					
ANR	2903122	Identifier	stoppos		2903085	1					
ANR	2903123	AssignmentExpression	"stoppos = msgTxt . find ( "" "" , startpos )"		2903085	2		=			
ANR	2903124	Identifier	stoppos		2903085	0					
ANR	2903125	CallExpression	"msgTxt . find ( "" "" , startpos )"		2903085	1					
ANR	2903126	Callee	msgTxt . find		2903085	0					
ANR	2903127	MemberAccess	msgTxt . find		2903085	0					
ANR	2903128	Identifier	msgTxt		2903085	0					
ANR	2903129	Identifier	find		2903085	1					
ANR	2903130	ArgumentList	""" """		2903085	1					
ANR	2903131	Argument	""" """		2903085	0					
ANR	2903132	PrimaryExpression	""" """		2903085	0					
ANR	2903133	Argument	startpos		2903085	1					
ANR	2903134	Identifier	startpos		2903085	0					
ANR	2903135	IdentifierDeclStatement	"string idValStr = msgTxt . substr ( startpos + 4 , stoppos ) ;"	371:4:9846:9897	2903085	1	True				
ANR	2903136	IdentifierDecl	"idValStr = msgTxt . substr ( startpos + 4 , stoppos )"		2903085	0					
ANR	2903137	IdentifierDeclType	string		2903085	0					
ANR	2903138	Identifier	idValStr		2903085	1					
ANR	2903139	AssignmentExpression	"idValStr = msgTxt . substr ( startpos + 4 , stoppos )"		2903085	2		=			
ANR	2903140	Identifier	idValStr		2903085	0					
ANR	2903141	CallExpression	"msgTxt . substr ( startpos + 4 , stoppos )"		2903085	1					
ANR	2903142	Callee	msgTxt . substr		2903085	0					
ANR	2903143	MemberAccess	msgTxt . substr		2903085	0					
ANR	2903144	Identifier	msgTxt		2903085	0					
ANR	2903145	Identifier	substr		2903085	1					
ANR	2903146	ArgumentList	startpos + 4		2903085	1					
ANR	2903147	Argument	startpos + 4		2903085	0					
ANR	2903148	AdditiveExpression	startpos + 4		2903085	0		+			
ANR	2903149	Identifier	startpos		2903085	0					
ANR	2903150	PrimaryExpression	4		2903085	1					
ANR	2903151	Argument	stoppos		2903085	1					
ANR	2903152	Identifier	stoppos		2903085	0					
ANR	2903153	IdentifierDeclStatement	int msgId = atoi ( idValStr . c_str ( ) ) ;	372:4:9903:9936	2903085	2	True				
ANR	2903154	IdentifierDecl	msgId = atoi ( idValStr . c_str ( ) )		2903085	0					
ANR	2903155	IdentifierDeclType	int		2903085	0					
ANR	2903156	Identifier	msgId		2903085	1					
ANR	2903157	AssignmentExpression	msgId = atoi ( idValStr . c_str ( ) )		2903085	2		=			
ANR	2903158	Identifier	msgId		2903085	0					
ANR	2903159	CallExpression	atoi ( idValStr . c_str ( ) )		2903085	1					
ANR	2903160	Callee	atoi		2903085	0					
ANR	2903161	Identifier	atoi		2903085	0					
ANR	2903162	ArgumentList	idValStr . c_str ( )		2903085	1					
ANR	2903163	Argument	idValStr . c_str ( )		2903085	0					
ANR	2903164	CallExpression	idValStr . c_str ( )		2903085	0					
ANR	2903165	Callee	idValStr . c_str		2903085	0					
ANR	2903166	MemberAccess	idValStr . c_str		2903085	0					
ANR	2903167	Identifier	idValStr		2903085	0					
ANR	2903168	Identifier	c_str		2903085	1					
ANR	2903169	ArgumentList			2903085	1					
ANR	2903170	ReturnStatement	return ( msgId ) ;	373:4:9942:9955	2903085	3	True				
ANR	2903171	Identifier	msgId		2903085	0					
ANR	2903172	ElseStatement	else		2903085	0					
ANR	2903173	CompoundStatement		11:6:301:301	2903085	0					
ANR	2903174	ReturnStatement	return ( - 1 ) ;	376:4:9973:9983	2903085	0	True				
ANR	2903175	UnaryOperationExpression	- 1		2903085	0					
ANR	2903176	UnaryOperator	-		2903085	0					
ANR	2903177	PrimaryExpression	1		2903085	1					
ANR	2903178	ReturnType	int		2903085	1					
ANR	2903179	Identifier	ClientPub :: getMsgId		2903085	2					
ANR	2903180	ParameterList	"string msgTxt , string id"		2903085	3					
ANR	2903181	Parameter	string msgTxt	365:25:9641:9653	2903085	0	True				
ANR	2903182	ParameterType	string		2903085	0					
ANR	2903183	Identifier	msgTxt		2903085	1					
ANR	2903184	Parameter	string id	365:39:9655:9663	2903085	1	True				
ANR	2903185	ParameterType	string		2903085	0					
ANR	2903186	Identifier	id		2903085	1					
ANR	2903187	CFGEntryNode	ENTRY		2903085		True				
ANR	2903188	CFGExitNode	EXIT		2903085		True				
ANR	2903189	Symbol	atoi		2903085						
ANR	2903190	Symbol	estr		2903085						
ANR	2903191	Symbol	msgTxt . find		2903085						
ANR	2903192	Symbol	msgTxt . substr		2903085						
ANR	2903193	Symbol	idValStr . c_str		2903085						
ANR	2903194	Symbol	msgId		2903085						
ANR	2903195	Symbol	msgTxt		2903085						
ANR	2903196	Symbol	id		2903085						
ANR	2903197	Symbol	stoppos		2903085						
ANR	2903198	Symbol	startpos		2903085						
ANR	2903199	Symbol	idValStr		2903085						
ANR	2903200	Function	ClientPub :: validLogMsg	385:0:10169:11141							
ANR	2903201	FunctionDef	"ClientPub :: validLogMsg (string msg1 , string msg2)"		2903200	0					
ANR	2903202	CompoundStatement		385:53:10222:11141	2903200	0					
ANR	2903203	ExpressionStatement	"cout << ""\\n validLogMsg()....."" << endl"	388:2:10379:10418	2903200	0	True				
ANR	2903204	ShiftExpression	"cout << ""\\n validLogMsg()....."" << endl"		2903200	0		<<			
ANR	2903205	Identifier	cout		2903200	0					
ANR	2903206	ShiftExpression	"""\\n validLogMsg()....."" << endl"		2903200	1		<<			
ANR	2903207	PrimaryExpression	"""\\n validLogMsg()....."""		2903200	0					
ANR	2903208	Identifier	endl		2903200	1					
ANR	2903209	ExpressionStatement	"cout << ""\\t Message1 =>"" << msg1 << endl"	389:2:10422:10461	2903200	1	True				
ANR	2903210	ShiftExpression	"cout << ""\\t Message1 =>"" << msg1 << endl"		2903200	0		<<			
ANR	2903211	Identifier	cout		2903200	0					
ANR	2903212	ShiftExpression	"""\\t Message1 =>"" << msg1 << endl"		2903200	1		<<			
ANR	2903213	PrimaryExpression	"""\\t Message1 =>"""		2903200	0					
ANR	2903214	ShiftExpression	msg1 << endl		2903200	1		<<			
ANR	2903215	Identifier	msg1		2903200	0					
ANR	2903216	Identifier	endl		2903200	1					
ANR	2903217	ExpressionStatement	"cout << ""\\t Message2 =>"" << msg2 << endl"	390:2:10465:10504	2903200	2	True				
ANR	2903218	ShiftExpression	"cout << ""\\t Message2 =>"" << msg2 << endl"		2903200	0		<<			
ANR	2903219	Identifier	cout		2903200	0					
ANR	2903220	ShiftExpression	"""\\t Message2 =>"" << msg2 << endl"		2903200	1		<<			
ANR	2903221	PrimaryExpression	"""\\t Message2 =>"""		2903200	0					
ANR	2903222	ShiftExpression	msg2 << endl		2903200	1		<<			
ANR	2903223	Identifier	msg2		2903200	0					
ANR	2903224	Identifier	endl		2903200	1					
ANR	2903225	IdentifierDeclStatement	bool validFlag = false ;	391:2:10508:10530	2903200	3	True				
ANR	2903226	IdentifierDecl	validFlag = false		2903200	0					
ANR	2903227	IdentifierDeclType	bool		2903200	0					
ANR	2903228	Identifier	validFlag		2903200	1					
ANR	2903229	AssignmentExpression	validFlag = false		2903200	2		=			
ANR	2903230	Identifier	false		2903200	0					
ANR	2903231	Identifier	false		2903200	1					
ANR	2903232	IdentifierDeclStatement	"int msg1Id = getMsgId ( msg1 , ""eId"" ) ;"	392:2:10534:10567	2903200	4	True				
ANR	2903233	IdentifierDecl	"msg1Id = getMsgId ( msg1 , ""eId"" )"		2903200	0					
ANR	2903234	IdentifierDeclType	int		2903200	0					
ANR	2903235	Identifier	msg1Id		2903200	1					
ANR	2903236	AssignmentExpression	"msg1Id = getMsgId ( msg1 , ""eId"" )"		2903200	2		=			
ANR	2903237	Identifier	msg1Id		2903200	0					
ANR	2903238	CallExpression	"getMsgId ( msg1 , ""eId"" )"		2903200	1					
ANR	2903239	Callee	getMsgId		2903200	0					
ANR	2903240	Identifier	getMsgId		2903200	0					
ANR	2903241	ArgumentList	msg1		2903200	1					
ANR	2903242	Argument	msg1		2903200	0					
ANR	2903243	Identifier	msg1		2903200	0					
ANR	2903244	Argument	"""eId"""		2903200	1					
ANR	2903245	PrimaryExpression	"""eId"""		2903200	0					
ANR	2903246	ExpressionStatement	curMsgId = msg1Id	393:2:10571:10588	2903200	5	True				
ANR	2903247	AssignmentExpression	curMsgId = msg1Id		2903200	0		=			
ANR	2903248	Identifier	curMsgId		2903200	0					
ANR	2903249	Identifier	msg1Id		2903200	1					
ANR	2903250	IdentifierDeclStatement	"int m1Id = getMsgId ( msg1 , ""fId"" ) ;"	394:2:10592:10623	2903200	6	True				
ANR	2903251	IdentifierDecl	"m1Id = getMsgId ( msg1 , ""fId"" )"		2903200	0					
ANR	2903252	IdentifierDeclType	int		2903200	0					
ANR	2903253	Identifier	m1Id		2903200	1					
ANR	2903254	AssignmentExpression	"m1Id = getMsgId ( msg1 , ""fId"" )"		2903200	2		=			
ANR	2903255	Identifier	m1Id		2903200	0					
ANR	2903256	CallExpression	"getMsgId ( msg1 , ""fId"" )"		2903200	1					
ANR	2903257	Callee	getMsgId		2903200	0					
ANR	2903258	Identifier	getMsgId		2903200	0					
ANR	2903259	ArgumentList	msg1		2903200	1					
ANR	2903260	Argument	msg1		2903200	0					
ANR	2903261	Identifier	msg1		2903200	0					
ANR	2903262	Argument	"""fId"""		2903200	1					
ANR	2903263	PrimaryExpression	"""fId"""		2903200	0					
ANR	2903264	ExpressionStatement	curFId = m1Id	395:2:10627:10640	2903200	7	True				
ANR	2903265	AssignmentExpression	curFId = m1Id		2903200	0		=			
ANR	2903266	Identifier	curFId		2903200	0					
ANR	2903267	Identifier	m1Id		2903200	1					
ANR	2903268	IdentifierDeclStatement	"int msg2Id = getMsgId ( msg2 , ""eId"" ) ;"	398:2:10646:10679	2903200	8	True				
ANR	2903269	IdentifierDecl	"msg2Id = getMsgId ( msg2 , ""eId"" )"		2903200	0					
ANR	2903270	IdentifierDeclType	int		2903200	0					
ANR	2903271	Identifier	msg2Id		2903200	1					
ANR	2903272	AssignmentExpression	"msg2Id = getMsgId ( msg2 , ""eId"" )"		2903200	2		=			
ANR	2903273	Identifier	msg2Id		2903200	0					
ANR	2903274	CallExpression	"getMsgId ( msg2 , ""eId"" )"		2903200	1					
ANR	2903275	Callee	getMsgId		2903200	0					
ANR	2903276	Identifier	getMsgId		2903200	0					
ANR	2903277	ArgumentList	msg2		2903200	1					
ANR	2903278	Argument	msg2		2903200	0					
ANR	2903279	Identifier	msg2		2903200	0					
ANR	2903280	Argument	"""eId"""		2903200	1					
ANR	2903281	PrimaryExpression	"""eId"""		2903200	0					
ANR	2903282	IfStatement	if ( msg2Id > - 1 )		2903200	9					
ANR	2903283	Condition	msg2Id > - 1	399:5:10686:10696	2903200	0	True				
ANR	2903284	RelationalExpression	msg2Id > - 1		2903200	0		>			
ANR	2903285	Identifier	msg2Id		2903200	0					
ANR	2903286	UnaryOperationExpression	- 1		2903200	1					
ANR	2903287	UnaryOperator	-		2903200	0					
ANR	2903288	PrimaryExpression	1		2903200	1					
ANR	2903289	CompoundStatement		16:4:481:512	2903200	1					
ANR	2903290	IdentifierDeclStatement	"int m2Id = getMsgId ( msg2 , ""fId"" ) ;"	400:4:10704:10735	2903200	0	True				
ANR	2903291	IdentifierDecl	"m2Id = getMsgId ( msg2 , ""fId"" )"		2903200	0					
ANR	2903292	IdentifierDeclType	int		2903200	0					
ANR	2903293	Identifier	m2Id		2903200	1					
ANR	2903294	AssignmentExpression	"m2Id = getMsgId ( msg2 , ""fId"" )"		2903200	2		=			
ANR	2903295	Identifier	m2Id		2903200	0					
ANR	2903296	CallExpression	"getMsgId ( msg2 , ""fId"" )"		2903200	1					
ANR	2903297	Callee	getMsgId		2903200	0					
ANR	2903298	Identifier	getMsgId		2903200	0					
ANR	2903299	ArgumentList	msg2		2903200	1					
ANR	2903300	Argument	msg2		2903200	0					
ANR	2903301	Identifier	msg2		2903200	0					
ANR	2903302	Argument	"""fId"""		2903200	1					
ANR	2903303	PrimaryExpression	"""fId"""		2903200	0					
ANR	2903304	IfStatement	if ( ( m2Id > prevFId ) || ( msg2Id > prevMsgId && m2Id >= prevFId ) )		2903200	1					
ANR	2903305	Condition	( m2Id > prevFId ) || ( msg2Id > prevMsgId && m2Id >= prevFId )	401:7:10744:10801	2903200	0	True				
ANR	2903306	OrExpression	( m2Id > prevFId ) || ( msg2Id > prevMsgId && m2Id >= prevFId )		2903200	0		||			
ANR	2903307	RelationalExpression	m2Id > prevFId		2903200	0		>			
ANR	2903308	Identifier	m2Id		2903200	0					
ANR	2903309	Identifier	prevFId		2903200	1					
ANR	2903310	AndExpression	msg2Id > prevMsgId && m2Id >= prevFId		2903200	1		&&			
ANR	2903311	RelationalExpression	msg2Id > prevMsgId		2903200	0		>			
ANR	2903312	Identifier	msg2Id		2903200	0					
ANR	2903313	Identifier	prevMsgId		2903200	1					
ANR	2903314	RelationalExpression	m2Id >= prevFId		2903200	1		>=			
ANR	2903315	Identifier	m2Id		2903200	0					
ANR	2903316	Identifier	prevFId		2903200	1					
ANR	2903317	CompoundStatement		17:66:580:580	2903200	1					
ANR	2903318	ExpressionStatement	prevMsgId = msg2Id	402:6:10811:10829	2903200	0	True				
ANR	2903319	AssignmentExpression	prevMsgId = msg2Id		2903200	0		=			
ANR	2903320	Identifier	prevMsgId		2903200	0					
ANR	2903321	Identifier	msg2Id		2903200	1					
ANR	2903322	ExpressionStatement	prevFId = m2Id	403:6:10837:10851	2903200	1	True				
ANR	2903323	AssignmentExpression	prevFId = m2Id		2903200	0		=			
ANR	2903324	Identifier	prevFId		2903200	0					
ANR	2903325	Identifier	m2Id		2903200	1					
ANR	2903326	ExpressionStatement	"validFlag = compareFId ( prevFId , curFId , prevMsgId , curMsgId )"	405:4:10863:10920	2903200	2	True				
ANR	2903327	AssignmentExpression	"validFlag = compareFId ( prevFId , curFId , prevMsgId , curMsgId )"		2903200	0		=			
ANR	2903328	Identifier	validFlag		2903200	0					
ANR	2903329	CallExpression	"compareFId ( prevFId , curFId , prevMsgId , curMsgId )"		2903200	1					
ANR	2903330	Callee	compareFId		2903200	0					
ANR	2903331	Identifier	compareFId		2903200	0					
ANR	2903332	ArgumentList	prevFId		2903200	1					
ANR	2903333	Argument	prevFId		2903200	0					
ANR	2903334	Identifier	prevFId		2903200	0					
ANR	2903335	Argument	curFId		2903200	1					
ANR	2903336	Identifier	curFId		2903200	0					
ANR	2903337	Argument	prevMsgId		2903200	2					
ANR	2903338	Identifier	prevMsgId		2903200	0					
ANR	2903339	Argument	curMsgId		2903200	3					
ANR	2903340	Identifier	curMsgId		2903200	0					
ANR	2903341	ElseStatement	else		2903200	0					
ANR	2903342	CompoundStatement		23:6:709:709	2903200	0					
ANR	2903343	ExpressionStatement	validFlag = false	408:4:10938:10955	2903200	0	True				
ANR	2903344	AssignmentExpression	validFlag = false		2903200	0		=			
ANR	2903345	Identifier	validFlag		2903200	0					
ANR	2903346	Identifier	false		2903200	1					
ANR	2903347	IfStatement	if ( initFlag )		2903200	1					
ANR	2903348	Condition	initFlag	411:7:11052:11059	2903200	0	True				
ANR	2903349	Identifier	initFlag		2903200	0					
ANR	2903350	CompoundStatement		27:16:838:838	2903200	1					
ANR	2903351	ExpressionStatement	validFlag = true	412:6:11069:11085	2903200	0	True				
ANR	2903352	AssignmentExpression	validFlag = true		2903200	0		=			
ANR	2903353	Identifier	validFlag		2903200	0					
ANR	2903354	Identifier	true		2903200	1					
ANR	2903355	ExpressionStatement	initFlag = false	413:6:11093:11109	2903200	1	True				
ANR	2903356	AssignmentExpression	initFlag = false		2903200	0		=			
ANR	2903357	Identifier	initFlag		2903200	0					
ANR	2903358	Identifier	false		2903200	1					
ANR	2903359	ReturnStatement	return validFlag ;	416:2:11123:11139	2903200	10	True				
ANR	2903360	Identifier	validFlag		2903200	0					
ANR	2903361	ReturnType	bool		2903200	1					
ANR	2903362	Identifier	ClientPub :: validLogMsg		2903200	2					
ANR	2903363	ParameterList	"string msg1 , string msg2"		2903200	3					
ANR	2903364	Parameter	string msg1	385:28:10197:10207	2903200	0	True				
ANR	2903365	ParameterType	string		2903200	0					
ANR	2903366	Identifier	msg1		2903200	1					
ANR	2903367	Parameter	string msg2	385:41:10210:10220	2903200	1	True				
ANR	2903368	ParameterType	string		2903200	0					
ANR	2903369	Identifier	msg2		2903200	1					
ANR	2903370	CFGEntryNode	ENTRY		2903200		True				
ANR	2903371	CFGExitNode	EXIT		2903200		True				
ANR	2903372	Symbol	msg2		2903200						
ANR	2903373	Symbol	msg1		2903200						
ANR	2903374	Symbol	validFlag		2903200						
ANR	2903375	Symbol	initFlag		2903200						
ANR	2903376	Symbol	prevFId		2903200						
ANR	2903377	Symbol	false		2903200						
ANR	2903378	Symbol	msg2Id		2903200						
ANR	2903379	Symbol	m1Id		2903200						
ANR	2903380	Symbol	msg1Id		2903200						
ANR	2903381	Symbol	m2Id		2903200						
ANR	2903382	Symbol	prevMsgId		2903200						
ANR	2903383	Symbol	curMsgId		2903200						
ANR	2903384	Symbol	curFId		2903200						
ANR	2903385	Symbol	compareFId		2903200						
ANR	2903386	Symbol	getMsgId		2903200						
ANR	2903387	Symbol	true		2903200						
ANR	2903388	Function	ClientPub :: initLoadMsg	424:0:11275:12811							
ANR	2903389	FunctionDef	ClientPub :: initLoadMsg (char * loadFile)		2903388	0					
ANR	2903390	CompoundStatement		425:0:11319:12811	2903388	0					
ANR	2903391	ExpressionStatement	"printf ( ""host: %s , port: %i \\n"" , host , port )"	426:2:11323:11367	2903388	0	True				
ANR	2903392	CallExpression	"printf ( ""host: %s , port: %i \\n"" , host , port )"		2903388	0					
ANR	2903393	Callee	printf		2903388	0					
ANR	2903394	Identifier	printf		2903388	0					
ANR	2903395	ArgumentList	"""host: %s , port: %i \\n"""		2903388	1					
ANR	2903396	Argument	"""host: %s , port: %i \\n"""		2903388	0					
ANR	2903397	PrimaryExpression	"""host: %s , port: %i \\n"""		2903388	0					
ANR	2903398	Argument	host		2903388	1					
ANR	2903399	Identifier	host		2903388	0					
ANR	2903400	Argument	port		2903388	2					
ANR	2903401	Identifier	port		2903388	0					
ANR	2903402	IfStatement	if ( port < 0 )		2903388	1					
ANR	2903403	Condition	port < 0	427:6:11376:11383	2903388	0	True				
ANR	2903404	RelationalExpression	port < 0		2903388	0		<			
ANR	2903405	Identifier	port		2903388	0					
ANR	2903406	PrimaryExpression	0		2903388	1					
ANR	2903407	CompoundStatement		3:16:66:66	2903388	1					
ANR	2903408	ExpressionStatement	"printf ( ""QPID does not seem to be running - exiting"" )"	428:3:11391:11443	2903388	0	True				
ANR	2903409	CallExpression	"printf ( ""QPID does not seem to be running - exiting"" )"		2903388	0					
ANR	2903410	Callee	printf		2903388	0					
ANR	2903411	Identifier	printf		2903388	0					
ANR	2903412	ArgumentList	"""QPID does not seem to be running - exiting"""		2903388	1					
ANR	2903413	Argument	"""QPID does not seem to be running - exiting"""		2903388	0					
ANR	2903414	PrimaryExpression	"""QPID does not seem to be running - exiting"""		2903388	0					
ANR	2903415	ReturnStatement	return ;	429:3:11448:11454	2903388	1	True				
ANR	2903416	IdentifierDeclStatement	bool sendFlag = false ;	431:2:11462:11483	2903388	2	True				
ANR	2903417	IdentifierDecl	sendFlag = false		2903388	0					
ANR	2903418	IdentifierDeclType	bool		2903388	0					
ANR	2903419	Identifier	sendFlag		2903388	1					
ANR	2903420	AssignmentExpression	sendFlag = false		2903388	2		=			
ANR	2903421	Identifier	false		2903388	0					
ANR	2903422	Identifier	false		2903388	1					
ANR	2903423	IdentifierDeclStatement	"string logMsg = """" ;"	432:2:11487:11503	2903388	3	True				
ANR	2903424	IdentifierDecl	"logMsg = """""		2903388	0					
ANR	2903425	IdentifierDeclType	string		2903388	0					
ANR	2903426	Identifier	logMsg		2903388	1					
ANR	2903427	AssignmentExpression	"logMsg = """""		2903388	2		=			
ANR	2903428	Identifier	logMsg		2903388	0					
ANR	2903429	PrimaryExpression	""""""		2903388	1					
ANR	2903430	IdentifierDeclStatement	fstream ifile ;	433:2:11507:11520	2903388	4	True				
ANR	2903431	IdentifierDecl	ifile		2903388	0					
ANR	2903432	IdentifierDeclType	fstream		2903388	0					
ANR	2903433	Identifier	ifile		2903388	1					
ANR	2903434	IdentifierDeclStatement	int getSize = 0 ;	434:2:11524:11537	2903388	5	True				
ANR	2903435	IdentifierDecl	getSize = 0		2903388	0					
ANR	2903436	IdentifierDeclType	int		2903388	0					
ANR	2903437	Identifier	getSize		2903388	1					
ANR	2903438	AssignmentExpression	getSize = 0		2903388	2		=			
ANR	2903439	Identifier	getSize		2903388	0					
ANR	2903440	PrimaryExpression	0		2903388	1					
ANR	2903441	IdentifierDeclStatement	Connection connection ;	435:2:11541:11562	2903388	6	True				
ANR	2903442	IdentifierDecl	connection		2903388	0					
ANR	2903443	IdentifierDeclType	Connection		2903388	0					
ANR	2903444	Identifier	connection		2903388	1					
ANR	2903445	TryStatement	try		2903388	7					
ANR	2903446	CompoundStatement		31:4:769:778	2903388	0					
ANR	2903447	ExpressionStatement	"connection . open ( host , port )"		2903388	0					
ANR	2903448	CallExpression	"connection . open ( host , port )"		2903388	0					
ANR	2903449	Callee	connection . open		2903388	0					
ANR	2903450	MemberAccess	connection . open		2903388	0					
ANR	2903451	Identifier	connection		2903388	0					
ANR	2903452	Identifier	open		2903388	1					
ANR	2903453	ArgumentList	host		2903388	1					
ANR	2903454	Argument	host		2903388	0					
ANR	2903455	Identifier	host		2903388	0					
ANR	2903456	Argument	port		2903388	1					
ANR	2903457	Identifier	port		2903388	0					
ANR	2903458	IdentifierDeclStatement	Session session = connection . newSession ( ) ;		2903388	1					
ANR	2903459	IdentifierDecl	session = connection . newSession ( )		2903388	0					
ANR	2903460	IdentifierDeclType	Session		2903388	0					
ANR	2903461	Identifier	session		2903388	1					
ANR	2903462	AssignmentExpression	session = connection . newSession ( )		2903388	2		=			
ANR	2903463	Identifier	session		2903388	0					
ANR	2903464	CallExpression	connection . newSession ( )		2903388	1					
ANR	2903465	Callee	connection . newSession		2903388	0					
ANR	2903466	MemberAccess	connection . newSession		2903388	0					
ANR	2903467	Identifier	connection		2903388	0					
ANR	2903468	Identifier	newSession		2903388	1					
ANR	2903469	ArgumentList			2903388	1					
ANR	2903470	IdentifierDeclStatement	Listener listener ( session ) ;		2903388	2					
ANR	2903471	IdentifierDecl	listener ( session )		2903388	0					
ANR	2903472	IdentifierDeclType	Listener		2903388	0					
ANR	2903473	Identifier	listener		2903388	1					
ANR	2903474	Identifier	session		2903388	2					
ANR	2903475	IdentifierDeclStatement	bool loadFlag = listener . initListen ( ) ;		2903388	3					
ANR	2903476	IdentifierDecl	loadFlag = listener . initListen ( )		2903388	0					
ANR	2903477	IdentifierDeclType	bool		2903388	0					
ANR	2903478	Identifier	loadFlag		2903388	1					
ANR	2903479	AssignmentExpression	loadFlag = listener . initListen ( )		2903388	2		=			
ANR	2903480	Identifier	loadFlag		2903388	0					
ANR	2903481	CallExpression	listener . initListen ( )		2903388	1					
ANR	2903482	Callee	listener . initListen		2903388	0					
ANR	2903483	MemberAccess	listener . initListen		2903388	0					
ANR	2903484	Identifier	listener		2903388	0					
ANR	2903485	Identifier	initListen		2903388	1					
ANR	2903486	ArgumentList			2903388	1					
ANR	2903487	IfStatement	if ( ! loadFlag )		2903388	4					
ANR	2903488	Condition	! loadFlag		2903388	0					
ANR	2903489	UnaryOperationExpression	! loadFlag		2903388	0					
ANR	2903490	UnaryOperator	!		2903388	0					
ANR	2903491	Identifier	loadFlag		2903388	1					
ANR	2903492	CompoundStatement		20:17:485:485	2903388	1					
ANR	2903493	ExpressionStatement	"cout << ""\\n initLoadMsg() => STATUS: condor_queue has contents "" << endl"		2903388	0					
ANR	2903494	ShiftExpression	"cout << ""\\n initLoadMsg() => STATUS: condor_queue has contents "" << endl"		2903388	0		<<			
ANR	2903495	Identifier	cout		2903388	0					
ANR	2903496	ShiftExpression	"""\\n initLoadMsg() => STATUS: condor_queue has contents "" << endl"		2903388	1		<<			
ANR	2903497	PrimaryExpression	"""\\n initLoadMsg() => STATUS: condor_queue has contents """		2903388	0					
ANR	2903498	Identifier	endl		2903388	1					
ANR	2903499	ExpressionStatement	session . close ( )		2903388	1					
ANR	2903500	CallExpression	session . close ( )		2903388	0					
ANR	2903501	Callee	session . close		2903388	0					
ANR	2903502	MemberAccess	session . close		2903388	0					
ANR	2903503	Identifier	session		2903388	0					
ANR	2903504	Identifier	close		2903388	1					
ANR	2903505	ArgumentList			2903388	1					
ANR	2903506	ExpressionStatement	connection . close ( )		2903388	2					
ANR	2903507	CallExpression	connection . close ( )		2903388	0					
ANR	2903508	Callee	connection . close		2903388	0					
ANR	2903509	MemberAccess	connection . close		2903388	0					
ANR	2903510	Identifier	connection		2903388	0					
ANR	2903511	Identifier	close		2903388	1					
ANR	2903512	ArgumentList			2903388	1					
ANR	2903513	ReturnStatement	return ;		2903388	3					
ANR	2903514	ExpressionStatement	"ifile . open ( loadFile , ios :: out | ios :: in )"		2903388	5					
ANR	2903515	CallExpression	"ifile . open ( loadFile , ios :: out | ios :: in )"		2903388	0					
ANR	2903516	Callee	ifile . open		2903388	0					
ANR	2903517	MemberAccess	ifile . open		2903388	0					
ANR	2903518	Identifier	ifile		2903388	0					
ANR	2903519	Identifier	open		2903388	1					
ANR	2903520	ArgumentList	loadFile		2903388	1					
ANR	2903521	Argument	loadFile		2903388	0					
ANR	2903522	Identifier	loadFile		2903388	0					
ANR	2903523	Argument	ios :: out | ios :: in		2903388	1					
ANR	2903524	InclusiveOrExpression	ios :: out | ios :: in		2903388	0		|			
ANR	2903525	Identifier	ios :: out		2903388	0					
ANR	2903526	Identifier	ios :: in		2903388	1					
ANR	2903527	ExpressionStatement	"ifile . seekg ( 0 , ios :: end )"		2903388	6					
ANR	2903528	CallExpression	"ifile . seekg ( 0 , ios :: end )"		2903388	0					
ANR	2903529	Callee	ifile . seekg		2903388	0					
ANR	2903530	MemberAccess	ifile . seekg		2903388	0					
ANR	2903531	Identifier	ifile		2903388	0					
ANR	2903532	Identifier	seekg		2903388	1					
ANR	2903533	ArgumentList	0		2903388	1					
ANR	2903534	Argument	0		2903388	0					
ANR	2903535	PrimaryExpression	0		2903388	0					
ANR	2903536	Argument	ios :: end		2903388	1					
ANR	2903537	Identifier	ios :: end		2903388	0					
ANR	2903538	ExpressionStatement	getSize = ifile . tellg ( )		2903388	7					
ANR	2903539	AssignmentExpression	getSize = ifile . tellg ( )		2903388	0		=			
ANR	2903540	Identifier	getSize		2903388	0					
ANR	2903541	CallExpression	ifile . tellg ( )		2903388	1					
ANR	2903542	Callee	ifile . tellg		2903388	0					
ANR	2903543	MemberAccess	ifile . tellg		2903388	0					
ANR	2903544	Identifier	ifile		2903388	0					
ANR	2903545	Identifier	tellg		2903388	1					
ANR	2903546	ArgumentList			2903388	1					
ANR	2903547	ExpressionStatement	ifile . seekg ( 0 )		2903388	8					
ANR	2903548	CallExpression	ifile . seekg ( 0 )		2903388	0					
ANR	2903549	Callee	ifile . seekg		2903388	0					
ANR	2903550	MemberAccess	ifile . seekg		2903388	0					
ANR	2903551	Identifier	ifile		2903388	0					
ANR	2903552	Identifier	seekg		2903388	1					
ANR	2903553	ArgumentList	0		2903388	1					
ANR	2903554	Argument	0		2903388	0					
ANR	2903555	PrimaryExpression	0		2903388	0					
ANR	2903556	IdentifierDeclStatement	char * log ;		2903388	9					
ANR	2903557	IdentifierDecl	* log		2903388	0					
ANR	2903558	IdentifierDeclType	char *		2903388	0					
ANR	2903559	Identifier	log		2903388	1					
ANR	2903560	ExpressionStatement	log = ( char * ) malloc ( getSize )		2903388	10					
ANR	2903561	AssignmentExpression	log = ( char * ) malloc ( getSize )		2903388	0		=			
ANR	2903562	Identifier	log		2903388	0					
ANR	2903563	CastExpression	( char * ) malloc ( getSize )		2903388	1					
ANR	2903564	CastTarget	char *		2903388	0					
ANR	2903565	CallExpression	malloc ( getSize )		2903388	1					
ANR	2903566	Callee	malloc		2903388	0					
ANR	2903567	Identifier	malloc		2903388	0					
ANR	2903568	ArgumentList	getSize		2903388	1					
ANR	2903569	Argument	getSize		2903388	0					
ANR	2903570	Identifier	getSize		2903388	0					
ANR	2903571	IfStatement	"if ( ifile . read ( log , getSize ) )"		2903388	11					
ANR	2903572	Condition	"ifile . read ( log , getSize )"		2903388	0					
ANR	2903573	CallExpression	"ifile . read ( log , getSize )"		2903388	0					
ANR	2903574	Callee	ifile . read		2903388	0					
ANR	2903575	MemberAccess	ifile . read		2903388	0					
ANR	2903576	Identifier	ifile		2903388	0					
ANR	2903577	Identifier	read		2903388	1					
ANR	2903578	ArgumentList	log		2903388	1					
ANR	2903579	Argument	log		2903388	0					
ANR	2903580	Identifier	log		2903388	0					
ANR	2903581	Argument	getSize		2903388	1					
ANR	2903582	Identifier	getSize		2903388	0					
ANR	2903583	CompoundStatement		40:6:1137:1162	2903388	1					
ANR	2903584	ExpressionStatement	logMsg = log		2903388	0					
ANR	2903585	AssignmentExpression	logMsg = log		2903388	0		=			
ANR	2903586	Identifier	logMsg		2903388	0					
ANR	2903587	Identifier	log		2903388	1					
ANR	2903588	ExpressionStatement	"cout << ""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : "" << logMsg << endl"		2903388	1					
ANR	2903589	ShiftExpression	"cout << ""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : "" << logMsg << endl"		2903388	0		<<			
ANR	2903590	Identifier	cout		2903388	0					
ANR	2903591	ShiftExpression	"""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : "" << logMsg << endl"		2903388	1		<<			
ANR	2903592	PrimaryExpression	"""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : """		2903388	0					
ANR	2903593	ShiftExpression	logMsg << endl		2903388	1		<<			
ANR	2903594	Identifier	logMsg		2903388	0					
ANR	2903595	Identifier	endl		2903388	1					
ANR	2903596	IdentifierDeclStatement	Message message ;		2903388	2					
ANR	2903597	IdentifierDecl	message		2903388	0					
ANR	2903598	IdentifierDeclType	Message		2903388	0					
ANR	2903599	Identifier	message		2903388	1					
ANR	2903600	ExpressionStatement	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		2903388	3					
ANR	2903601	CallExpression	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		2903388	0					
ANR	2903602	Callee	message . getDeliveryProperties ( ) . setRoutingKey		2903388	0					
ANR	2903603	MemberAccess	message . getDeliveryProperties ( ) . setRoutingKey		2903388	0					
ANR	2903604	CallExpression	message . getDeliveryProperties ( )		2903388	0					
ANR	2903605	Callee	message . getDeliveryProperties		2903388	0					
ANR	2903606	MemberAccess	message . getDeliveryProperties		2903388	0					
ANR	2903607	Identifier	message		2903388	0					
ANR	2903608	Identifier	getDeliveryProperties		2903388	1					
ANR	2903609	ArgumentList			2903388	1					
ANR	2903610	Identifier	setRoutingKey		2903388	1					
ANR	2903611	ArgumentList	"""routing_key1"""		2903388	1					
ANR	2903612	Argument	"""routing_key1"""		2903388	0					
ANR	2903613	PrimaryExpression	"""routing_key1"""		2903388	0					
ANR	2903614	ExpressionStatement	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		2903388	4					
ANR	2903615	CallExpression	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		2903388	0					
ANR	2903616	Callee	message . getDeliveryProperties ( ) . setDeliveryMode		2903388	0					
ANR	2903617	MemberAccess	message . getDeliveryProperties ( ) . setDeliveryMode		2903388	0					
ANR	2903618	CallExpression	message . getDeliveryProperties ( )		2903388	0					
ANR	2903619	Callee	message . getDeliveryProperties		2903388	0					
ANR	2903620	MemberAccess	message . getDeliveryProperties		2903388	0					
ANR	2903621	Identifier	message		2903388	0					
ANR	2903622	Identifier	getDeliveryProperties		2903388	1					
ANR	2903623	ArgumentList			2903388	1					
ANR	2903624	Identifier	setDeliveryMode		2903388	1					
ANR	2903625	ArgumentList	PERSISTENT		2903388	1					
ANR	2903626	Argument	PERSISTENT		2903388	0					
ANR	2903627	Identifier	PERSISTENT		2903388	0					
ANR	2903628	IdentifierDeclStatement	stringstream message_data ;		2903388	5					
ANR	2903629	IdentifierDecl	message_data		2903388	0					
ANR	2903630	IdentifierDeclType	stringstream		2903388	0					
ANR	2903631	Identifier	message_data		2903388	1					
ANR	2903632	ExpressionStatement	message_data << logMsg		2903388	6					
ANR	2903633	ShiftExpression	message_data << logMsg		2903388	0		<<			
ANR	2903634	Identifier	message_data		2903388	0					
ANR	2903635	Identifier	logMsg		2903388	1					
ANR	2903636	ExpressionStatement	message . setData ( message_data . str ( ) )		2903388	7					
ANR	2903637	CallExpression	message . setData ( message_data . str ( ) )		2903388	0					
ANR	2903638	Callee	message . setData		2903388	0					
ANR	2903639	MemberAccess	message . setData		2903388	0					
ANR	2903640	Identifier	message		2903388	0					
ANR	2903641	Identifier	setData		2903388	1					
ANR	2903642	ArgumentList	message_data . str ( )		2903388	1					
ANR	2903643	Argument	message_data . str ( )		2903388	0					
ANR	2903644	CallExpression	message_data . str ( )		2903388	0					
ANR	2903645	Callee	message_data . str		2903388	0					
ANR	2903646	MemberAccess	message_data . str		2903388	0					
ANR	2903647	Identifier	message_data		2903388	0					
ANR	2903648	Identifier	str		2903388	1					
ANR	2903649	ArgumentList			2903388	1					
ANR	2903650	ExpressionStatement	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		2903388	8					
ANR	2903651	CallExpression	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		2903388	0					
ANR	2903652	Callee	async ( session ) . messageTransfer		2903388	0					
ANR	2903653	MemberAccess	async ( session ) . messageTransfer		2903388	0					
ANR	2903654	CallExpression	async ( session )		2903388	0					
ANR	2903655	Callee	async		2903388	0					
ANR	2903656	Identifier	async		2903388	0					
ANR	2903657	ArgumentList	session		2903388	1					
ANR	2903658	Argument	session		2903388	0					
ANR	2903659	Identifier	session		2903388	0					
ANR	2903660	Identifier	messageTransfer		2903388	1					
ANR	2903661	ArgumentList	arg :: content = message		2903388	1					
ANR	2903662	Argument	arg :: content = message		2903388	0					
ANR	2903663	AssignmentExpression	arg :: content = message		2903388	0		=			
ANR	2903664	Identifier	arg :: content		2903388	0					
ANR	2903665	Identifier	message		2903388	1					
ANR	2903666	Argument	"arg :: destination = ""amq.topic"""		2903388	1					
ANR	2903667	AssignmentExpression	"arg :: destination = ""amq.topic"""		2903388	0		=			
ANR	2903668	Identifier	arg :: destination		2903388	0					
ANR	2903669	PrimaryExpression	"""amq.topic"""		2903388	1					
ANR	2903670	ExpressionStatement	ifile . close ( )		2903388	9					
ANR	2903671	CallExpression	ifile . close ( )		2903388	0					
ANR	2903672	Callee	ifile . close		2903388	0					
ANR	2903673	MemberAccess	ifile . close		2903388	0					
ANR	2903674	Identifier	ifile		2903388	0					
ANR	2903675	Identifier	close		2903388	1					
ANR	2903676	ArgumentList			2903388	1					
ANR	2903677	ExpressionStatement	session . close ( )		2903388	12					
ANR	2903678	CallExpression	session . close ( )		2903388	0					
ANR	2903679	Callee	session . close		2903388	0					
ANR	2903680	MemberAccess	session . close		2903388	0					
ANR	2903681	Identifier	session		2903388	0					
ANR	2903682	Identifier	close		2903388	1					
ANR	2903683	ArgumentList			2903388	1					
ANR	2903684	ExpressionStatement	connection . close ( )		2903388	13					
ANR	2903685	CallExpression	connection . close ( )		2903388	0					
ANR	2903686	Callee	connection . close		2903388	0					
ANR	2903687	MemberAccess	connection . close		2903388	0					
ANR	2903688	Identifier	connection		2903388	0					
ANR	2903689	Identifier	close		2903388	1					
ANR	2903690	ArgumentList			2903388	1					
ANR	2903691	CatchList			2903388	1					
ANR	2903692	CatchStatement	catch ( const std :: exception & error )		2903388	0					
ANR	2903693	Identifier	error		2903388	0					
ANR	2903694	CompoundStatement		50:39:1441:1441	2903388	1					
ANR	2903695	ExpressionStatement	std :: cout << error . what ( ) << std :: endl	475:4:12767:12805	2903388	0	True				
ANR	2903696	ShiftExpression	std :: cout << error . what ( ) << std :: endl		2903388	0		<<			
ANR	2903697	Identifier	std :: cout		2903388	0					
ANR	2903698	ShiftExpression	error . what ( ) << std :: endl		2903388	1		<<			
ANR	2903699	CallExpression	error . what ( )		2903388	0					
ANR	2903700	Callee	error . what		2903388	0					
ANR	2903701	MemberAccess	error . what		2903388	0					
ANR	2903702	Identifier	error		2903388	0					
ANR	2903703	Identifier	what		2903388	1					
ANR	2903704	ArgumentList			2903388	1					
ANR	2903705	Identifier	std :: endl		2903388	1					
ANR	2903706	ReturnType	void		2903388	1					
ANR	2903707	Identifier	ClientPub :: initLoadMsg		2903388	2					
ANR	2903708	ParameterList	char * loadFile		2903388	3					
ANR	2903709	Parameter	char * loadFile	424:28:11303:11316	2903388	0	True				
ANR	2903710	ParameterType	char *		2903388	0					
ANR	2903711	Identifier	loadFile		2903388	1					
ANR	2903712	CFGEntryNode	ENTRY		2903388		True				
ANR	2903713	CFGExitNode	EXIT		2903388		True				
ANR	2903714	CFGErrorNode	ERROR		2903388		True				
ANR	2903715	Symbol	sendFlag		2903388						
ANR	2903716	Symbol	ifile		2903388						
ANR	2903717	Symbol	getSize		2903388						
ANR	2903718	Symbol	port		2903388						
ANR	2903719	Symbol	host		2903388						
ANR	2903720	Symbol	false		2903388						
ANR	2903721	Symbol	loadFile		2903388						
ANR	2903722	Symbol	logMsg		2903388						
ANR	2903723	Symbol	connection		2903388						
ANR	2903724	Function	ClientPub :: publish_messages	484:0:12906:16099							
ANR	2903725	FunctionDef	"ClientPub :: publish_messages (string logMsg , char * persistFile)"		2903724	0					
ANR	2903726	CompoundStatement		485:0:12972:16099	2903724	0					
ANR	2903727	IdentifierDeclStatement	bool sendFlag = false ;	489:2:13049:13070	2903724	0	True				
ANR	2903728	IdentifierDecl	sendFlag = false		2903724	0					
ANR	2903729	IdentifierDeclType	bool		2903724	0					
ANR	2903730	Identifier	sendFlag		2903724	1					
ANR	2903731	AssignmentExpression	sendFlag = false		2903724	2		=			
ANR	2903732	Identifier	false		2903724	0					
ANR	2903733	Identifier	false		2903724	1					
ANR	2903734	IdentifierDeclStatement	Connection connection ;	491:2:13075:13096	2903724	1	True				
ANR	2903735	IdentifierDecl	connection		2903724	0					
ANR	2903736	IdentifierDeclType	Connection		2903724	0					
ANR	2903737	Identifier	connection		2903724	1					
ANR	2903738	TryStatement	try		2903724	2					
ANR	2903739	CompoundStatement		41:4:1345:1383	2903724	0					
ANR	2903740	ExpressionStatement	"connection . open ( host , port )"		2903724	0					
ANR	2903741	CallExpression	"connection . open ( host , port )"		2903724	0					
ANR	2903742	Callee	connection . open		2903724	0					
ANR	2903743	MemberAccess	connection . open		2903724	0					
ANR	2903744	Identifier	connection		2903724	0					
ANR	2903745	Identifier	open		2903724	1					
ANR	2903746	ArgumentList	host		2903724	1					
ANR	2903747	Argument	host		2903724	0					
ANR	2903748	Identifier	host		2903724	0					
ANR	2903749	Argument	port		2903724	1					
ANR	2903750	Identifier	port		2903724	0					
ANR	2903751	IdentifierDeclStatement	Session session = connection . newSession ( ) ;		2903724	1					
ANR	2903752	IdentifierDecl	session = connection . newSession ( )		2903724	0					
ANR	2903753	IdentifierDeclType	Session		2903724	0					
ANR	2903754	Identifier	session		2903724	1					
ANR	2903755	AssignmentExpression	session = connection . newSession ( )		2903724	2		=			
ANR	2903756	Identifier	session		2903724	0					
ANR	2903757	CallExpression	connection . newSession ( )		2903724	1					
ANR	2903758	Callee	connection . newSession		2903724	0					
ANR	2903759	MemberAccess	connection . newSession		2903724	0					
ANR	2903760	Identifier	connection		2903724	0					
ANR	2903761	Identifier	newSession		2903724	1					
ANR	2903762	ArgumentList			2903724	1					
ANR	2903763	IdentifierDeclStatement	Message message ;		2903724	2					
ANR	2903764	IdentifierDecl	message		2903724	0					
ANR	2903765	IdentifierDeclType	Message		2903724	0					
ANR	2903766	Identifier	message		2903724	1					
ANR	2903767	IdentifierDeclStatement	Message lMsg ;		2903724	3					
ANR	2903768	IdentifierDecl	lMsg		2903724	0					
ANR	2903769	IdentifierDeclType	Message		2903724	0					
ANR	2903770	Identifier	lMsg		2903724	1					
ANR	2903771	ExpressionStatement	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		2903724	4					
ANR	2903772	CallExpression	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		2903724	0					
ANR	2903773	Callee	message . getDeliveryProperties ( ) . setRoutingKey		2903724	0					
ANR	2903774	MemberAccess	message . getDeliveryProperties ( ) . setRoutingKey		2903724	0					
ANR	2903775	CallExpression	message . getDeliveryProperties ( )		2903724	0					
ANR	2903776	Callee	message . getDeliveryProperties		2903724	0					
ANR	2903777	MemberAccess	message . getDeliveryProperties		2903724	0					
ANR	2903778	Identifier	message		2903724	0					
ANR	2903779	Identifier	getDeliveryProperties		2903724	1					
ANR	2903780	ArgumentList			2903724	1					
ANR	2903781	Identifier	setRoutingKey		2903724	1					
ANR	2903782	ArgumentList	"""routing_key1"""		2903724	1					
ANR	2903783	Argument	"""routing_key1"""		2903724	0					
ANR	2903784	PrimaryExpression	"""routing_key1"""		2903724	0					
ANR	2903785	ExpressionStatement	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		2903724	5					
ANR	2903786	CallExpression	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		2903724	0					
ANR	2903787	Callee	message . getDeliveryProperties ( ) . setDeliveryMode		2903724	0					
ANR	2903788	MemberAccess	message . getDeliveryProperties ( ) . setDeliveryMode		2903724	0					
ANR	2903789	CallExpression	message . getDeliveryProperties ( )		2903724	0					
ANR	2903790	Callee	message . getDeliveryProperties		2903724	0					
ANR	2903791	MemberAccess	message . getDeliveryProperties		2903724	0					
ANR	2903792	Identifier	message		2903724	0					
ANR	2903793	Identifier	getDeliveryProperties		2903724	1					
ANR	2903794	ArgumentList			2903724	1					
ANR	2903795	Identifier	setDeliveryMode		2903724	1					
ANR	2903796	ArgumentList	PERSISTENT		2903724	1					
ANR	2903797	Argument	PERSISTENT		2903724	0					
ANR	2903798	Identifier	PERSISTENT		2903724	0					
ANR	2903799	IdentifierDeclStatement	stringstream message_data ;		2903724	6					
ANR	2903800	IdentifierDecl	message_data		2903724	0					
ANR	2903801	IdentifierDeclType	stringstream		2903724	0					
ANR	2903802	Identifier	message_data		2903724	1					
ANR	2903803	ExpressionStatement	message_data << logMsg		2903724	7					
ANR	2903804	ShiftExpression	message_data << logMsg		2903724	0		<<			
ANR	2903805	Identifier	message_data		2903724	0					
ANR	2903806	Identifier	logMsg		2903724	1					
ANR	2903807	IfStatement	if ( ! skipFlag )		2903724	8					
ANR	2903808	Condition	! skipFlag		2903724	0					
ANR	2903809	UnaryOperationExpression	! skipFlag		2903724	0					
ANR	2903810	UnaryOperator	!		2903724	0					
ANR	2903811	Identifier	skipFlag		2903724	1					
ANR	2903812	CompoundStatement		26:6:662:688	2903724	1					
ANR	2903813	IdentifierDeclStatement	Listener listener ( session ) ;		2903724	0					
ANR	2903814	IdentifierDecl	listener ( session )		2903724	0					
ANR	2903815	IdentifierDeclType	Listener		2903724	0					
ANR	2903816	Identifier	listener		2903724	1					
ANR	2903817	Identifier	session		2903724	2					
ANR	2903818	ExpressionStatement	"cout << ""\\n \\n ******************************************************************************** \\n \\n"""		2903724	1					
ANR	2903819	ShiftExpression	"cout << ""\\n \\n ******************************************************************************** \\n \\n"""		2903724	0		<<			
ANR	2903820	Identifier	cout		2903724	0					
ANR	2903821	PrimaryExpression	"""\\n \\n ******************************************************************************** \\n \\n"""		2903724	1					
ANR	2903822	ExpressionStatement	listener . browse ( )		2903724	2					
ANR	2903823	CallExpression	listener . browse ( )		2903724	0					
ANR	2903824	Callee	listener . browse		2903724	0					
ANR	2903825	MemberAccess	listener . browse		2903724	0					
ANR	2903826	Identifier	listener		2903724	0					
ANR	2903827	Identifier	browse		2903724	1					
ANR	2903828	ArgumentList			2903724	1					
ANR	2903829	ExpressionStatement	tempMsg = listener . getNewMessage ( )		2903724	3					
ANR	2903830	AssignmentExpression	tempMsg = listener . getNewMessage ( )		2903724	0		=			
ANR	2903831	Identifier	tempMsg		2903724	0					
ANR	2903832	CallExpression	listener . getNewMessage ( )		2903724	1					
ANR	2903833	Callee	listener . getNewMessage		2903724	0					
ANR	2903834	MemberAccess	listener . getNewMessage		2903724	0					
ANR	2903835	Identifier	listener		2903724	0					
ANR	2903836	Identifier	getNewMessage		2903724	1					
ANR	2903837	ArgumentList			2903724	1					
ANR	2903838	ExpressionStatement	listener . dequeue ( )		2903724	4					
ANR	2903839	CallExpression	listener . dequeue ( )		2903724	0					
ANR	2903840	Callee	listener . dequeue		2903724	0					
ANR	2903841	MemberAccess	listener . dequeue		2903724	0					
ANR	2903842	Identifier	listener		2903724	0					
ANR	2903843	Identifier	dequeue		2903724	1					
ANR	2903844	ArgumentList			2903724	1					
ANR	2903845	IdentifierDeclStatement	"string estr = ""fId="" ;"		2903724	9					
ANR	2903846	IdentifierDecl	"estr = ""fId="""		2903724	0					
ANR	2903847	IdentifierDeclType	string		2903724	0					
ANR	2903848	Identifier	estr		2903724	1					
ANR	2903849	AssignmentExpression	"estr = ""fId="""		2903724	2		=			
ANR	2903850	Identifier	estr		2903724	0					
ANR	2903851	PrimaryExpression	"""fId="""		2903724	1					
ANR	2903852	IdentifierDeclStatement	"int origstartpos = logMsg . find ( estr , 0 ) ;"		2903724	10					
ANR	2903853	IdentifierDecl	"origstartpos = logMsg . find ( estr , 0 )"		2903724	0					
ANR	2903854	IdentifierDeclType	int		2903724	0					
ANR	2903855	Identifier	origstartpos		2903724	1					
ANR	2903856	AssignmentExpression	"origstartpos = logMsg . find ( estr , 0 )"		2903724	2		=			
ANR	2903857	Identifier	origstartpos		2903724	0					
ANR	2903858	CallExpression	"logMsg . find ( estr , 0 )"		2903724	1					
ANR	2903859	Callee	logMsg . find		2903724	0					
ANR	2903860	MemberAccess	logMsg . find		2903724	0					
ANR	2903861	Identifier	logMsg		2903724	0					
ANR	2903862	Identifier	find		2903724	1					
ANR	2903863	ArgumentList	estr		2903724	1					
ANR	2903864	Argument	estr		2903724	0					
ANR	2903865	Identifier	estr		2903724	0					
ANR	2903866	Argument	0		2903724	1					
ANR	2903867	PrimaryExpression	0		2903724	0					
ANR	2903868	IfStatement	if ( origstartpos >= 0 )		2903724	11					
ANR	2903869	Condition	origstartpos >= 0		2903724	0					
ANR	2903870	RelationalExpression	origstartpos >= 0		2903724	0		>=			
ANR	2903871	Identifier	origstartpos		2903724	0					
ANR	2903872	PrimaryExpression	0		2903724	1					
ANR	2903873	CompoundStatement		42:25:1410:1410	2903724	1					
ANR	2903874	ExpressionStatement	"sendFlag = validLogMsg ( logMsg , tempMsg )"		2903724	0					
ANR	2903875	AssignmentExpression	"sendFlag = validLogMsg ( logMsg , tempMsg )"		2903724	0		=			
ANR	2903876	Identifier	sendFlag		2903724	0					
ANR	2903877	CallExpression	"validLogMsg ( logMsg , tempMsg )"		2903724	1					
ANR	2903878	Callee	validLogMsg		2903724	0					
ANR	2903879	Identifier	validLogMsg		2903724	0					
ANR	2903880	ArgumentList	logMsg		2903724	1					
ANR	2903881	Argument	logMsg		2903724	0					
ANR	2903882	Identifier	logMsg		2903724	0					
ANR	2903883	Argument	tempMsg		2903724	1					
ANR	2903884	Identifier	tempMsg		2903724	0					
ANR	2903885	ElseStatement	else		2903724	0					
ANR	2903886	CompoundStatement		46:8:1473:1473	2903724	0					
ANR	2903887	ExpressionStatement	sendFlag = false		2903724	0					
ANR	2903888	AssignmentExpression	sendFlag = false		2903724	0		=			
ANR	2903889	Identifier	sendFlag		2903724	0					
ANR	2903890	Identifier	false		2903724	1					
ANR	2903891	ExpressionStatement	"cout << ""Error: Current message is not a valid condor Log Message!"" << endl"		2903724	1					
ANR	2903892	ShiftExpression	"cout << ""Error: Current message is not a valid condor Log Message!"" << endl"		2903724	0		<<			
ANR	2903893	Identifier	cout		2903724	0					
ANR	2903894	ShiftExpression	"""Error: Current message is not a valid condor Log Message!"" << endl"		2903724	1		<<			
ANR	2903895	PrimaryExpression	"""Error: Current message is not a valid condor Log Message!"""		2903724	0					
ANR	2903896	Identifier	endl		2903724	1					
ANR	2903897	IfStatement	if ( sendFlag )		2903724	12					
ANR	2903898	Condition	sendFlag		2903724	0					
ANR	2903899	Identifier	sendFlag		2903724	0					
ANR	2903900	CompoundStatement		64:6:2291:2353	2903724	1					
ANR	2903901	ExpressionStatement	skipFlag = false		2903724	0					
ANR	2903902	AssignmentExpression	skipFlag = false		2903724	0		=			
ANR	2903903	Identifier	skipFlag		2903724	0					
ANR	2903904	Identifier	false		2903724	1					
ANR	2903905	ExpressionStatement	"cout << ""\\npublish_messages(): RESULT => send msg TRUE.... "" << endl"		2903724	1					
ANR	2903906	ShiftExpression	"cout << ""\\npublish_messages(): RESULT => send msg TRUE.... "" << endl"		2903724	0		<<			
ANR	2903907	Identifier	cout		2903724	0					
ANR	2903908	ShiftExpression	"""\\npublish_messages(): RESULT => send msg TRUE.... "" << endl"		2903724	1		<<			
ANR	2903909	PrimaryExpression	"""\\npublish_messages(): RESULT => send msg TRUE.... """		2903724	0					
ANR	2903910	Identifier	endl		2903724	1					
ANR	2903911	ExpressionStatement	message . setData ( message_data . str ( ) )		2903724	2					
ANR	2903912	CallExpression	message . setData ( message_data . str ( ) )		2903724	0					
ANR	2903913	Callee	message . setData		2903724	0					
ANR	2903914	MemberAccess	message . setData		2903724	0					
ANR	2903915	Identifier	message		2903724	0					
ANR	2903916	Identifier	setData		2903724	1					
ANR	2903917	ArgumentList	message_data . str ( )		2903724	1					
ANR	2903918	Argument	message_data . str ( )		2903724	0					
ANR	2903919	CallExpression	message_data . str ( )		2903724	0					
ANR	2903920	Callee	message_data . str		2903724	0					
ANR	2903921	MemberAccess	message_data . str		2903724	0					
ANR	2903922	Identifier	message_data		2903724	0					
ANR	2903923	Identifier	str		2903724	1					
ANR	2903924	ArgumentList			2903724	1					
ANR	2903925	ExpressionStatement	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		2903724	3					
ANR	2903926	CallExpression	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		2903724	0					
ANR	2903927	Callee	async ( session ) . messageTransfer		2903724	0					
ANR	2903928	MemberAccess	async ( session ) . messageTransfer		2903724	0					
ANR	2903929	CallExpression	async ( session )		2903724	0					
ANR	2903930	Callee	async		2903724	0					
ANR	2903931	Identifier	async		2903724	0					
ANR	2903932	ArgumentList	session		2903724	1					
ANR	2903933	Argument	session		2903724	0					
ANR	2903934	Identifier	session		2903724	0					
ANR	2903935	Identifier	messageTransfer		2903724	1					
ANR	2903936	ArgumentList	arg :: content = message		2903724	1					
ANR	2903937	Argument	arg :: content = message		2903724	0					
ANR	2903938	AssignmentExpression	arg :: content = message		2903724	0		=			
ANR	2903939	Identifier	arg :: content		2903724	0					
ANR	2903940	Identifier	message		2903724	1					
ANR	2903941	Argument	"arg :: destination = ""amq.topic"""		2903724	1					
ANR	2903942	AssignmentExpression	"arg :: destination = ""amq.topic"""		2903724	0		=			
ANR	2903943	Identifier	arg :: destination		2903724	0					
ANR	2903944	PrimaryExpression	"""amq.topic"""		2903724	1					
ANR	2903945	IdentifierDeclStatement	"bool stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 ) ;"		2903724	4					
ANR	2903946	IdentifierDecl	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		2903724	0					
ANR	2903947	IdentifierDeclType	bool		2903724	0					
ANR	2903948	Identifier	stateUpFlag		2903724	1					
ANR	2903949	AssignmentExpression	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		2903724	2		=			
ANR	2903950	Identifier	stateUpFlag		2903724	0					
ANR	2903951	CallExpression	"updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		2903724	1					
ANR	2903952	Callee	updateState		2903724	0					
ANR	2903953	Identifier	updateState		2903724	0					
ANR	2903954	ArgumentList	stateBuf		2903724	1					
ANR	2903955	Argument	stateBuf		2903724	0					
ANR	2903956	Identifier	stateBuf		2903724	0					
ANR	2903957	Argument	log		2903724	1					
ANR	2903958	Identifier	log		2903724	0					
ANR	2903959	Argument	persistFile		2903724	2					
ANR	2903960	Identifier	persistFile		2903724	0					
ANR	2903961	Argument	0		2903724	3					
ANR	2903962	PrimaryExpression	0		2903724	0					
ANR	2903963	Argument	1		2903724	4					
ANR	2903964	PrimaryExpression	1		2903724	0					
ANR	2903965	Argument	0		2903724	5					
ANR	2903966	PrimaryExpression	0		2903724	0					
ANR	2903967	IfStatement	if ( stateUpFlag )		2903724	5					
ANR	2903968	Condition	stateUpFlag		2903724	0					
ANR	2903969	Identifier	stateUpFlag		2903724	0					
ANR	2903970	CompoundStatement		65:21:2376:2376	2903724	1					
ANR	2903971	ExpressionStatement	pos = 0		2903724	0					
ANR	2903972	AssignmentExpression	pos = 0		2903724	0		=			
ANR	2903973	Identifier	pos		2903724	0					
ANR	2903974	PrimaryExpression	0		2903724	1					
ANR	2903975	ElseStatement	else		2903724	0					
ANR	2903976	CompoundStatement		75:6:2795:2857	2903724	0					
ANR	2903977	ExpressionStatement	skipFlag = true		2903724	0					
ANR	2903978	AssignmentExpression	skipFlag = true		2903724	0		=			
ANR	2903979	Identifier	skipFlag		2903724	0					
ANR	2903980	Identifier	true		2903724	1					
ANR	2903981	ExpressionStatement	"cout << ""\\npublish_messages(): RESULT => send msg FALSE.... "" << endl"		2903724	1					
ANR	2903982	ShiftExpression	"cout << ""\\npublish_messages(): RESULT => send msg FALSE.... "" << endl"		2903724	0		<<			
ANR	2903983	Identifier	cout		2903724	0					
ANR	2903984	ShiftExpression	"""\\npublish_messages(): RESULT => send msg FALSE.... "" << endl"		2903724	1		<<			
ANR	2903985	PrimaryExpression	"""\\npublish_messages(): RESULT => send msg FALSE.... """		2903724	0					
ANR	2903986	Identifier	endl		2903724	1					
ANR	2903987	IdentifierDeclStatement	"bool stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 ) ;"		2903724	2					
ANR	2903988	IdentifierDecl	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		2903724	0					
ANR	2903989	IdentifierDeclType	bool		2903724	0					
ANR	2903990	Identifier	stateUpFlag		2903724	1					
ANR	2903991	AssignmentExpression	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		2903724	2		=			
ANR	2903992	Identifier	stateUpFlag		2903724	0					
ANR	2903993	CallExpression	"updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		2903724	1					
ANR	2903994	Callee	updateState		2903724	0					
ANR	2903995	Identifier	updateState		2903724	0					
ANR	2903996	ArgumentList	stateBuf		2903724	1					
ANR	2903997	Argument	stateBuf		2903724	0					
ANR	2903998	Identifier	stateBuf		2903724	0					
ANR	2903999	Argument	log		2903724	1					
ANR	2904000	Identifier	log		2903724	0					
ANR	2904001	Argument	persistFile		2903724	2					
ANR	2904002	Identifier	persistFile		2903724	0					
ANR	2904003	Argument	0		2903724	3					
ANR	2904004	PrimaryExpression	0		2903724	0					
ANR	2904005	Argument	1		2903724	4					
ANR	2904006	PrimaryExpression	1		2903724	0					
ANR	2904007	Argument	0		2903724	5					
ANR	2904008	PrimaryExpression	0		2903724	0					
ANR	2904009	IfStatement	if ( stateUpFlag )		2903724	3					
ANR	2904010	Condition	stateUpFlag		2903724	0					
ANR	2904011	Identifier	stateUpFlag		2903724	0					
ANR	2904012	CompoundStatement		76:21:2880:2880	2903724	1					
ANR	2904013	ExpressionStatement	pos = 0		2903724	0					
ANR	2904014	AssignmentExpression	pos = 0		2903724	0		=			
ANR	2904015	Identifier	pos		2903724	0					
ANR	2904016	PrimaryExpression	0		2903724	1					
ANR	2904017	ExpressionStatement	session . close ( )		2903724	13					
ANR	2904018	CallExpression	session . close ( )		2903724	0					
ANR	2904019	Callee	session . close		2903724	0					
ANR	2904020	MemberAccess	session . close		2903724	0					
ANR	2904021	Identifier	session		2903724	0					
ANR	2904022	Identifier	close		2903724	1					
ANR	2904023	ArgumentList			2903724	1					
ANR	2904024	ExpressionStatement	connection . close ( )		2903724	14					
ANR	2904025	CallExpression	connection . close ( )		2903724	0					
ANR	2904026	Callee	connection . close		2903724	0					
ANR	2904027	MemberAccess	connection . close		2903724	0					
ANR	2904028	Identifier	connection		2903724	0					
ANR	2904029	Identifier	close		2903724	1					
ANR	2904030	ArgumentList			2903724	1					
ANR	2904031	CatchList			2903724	1					
ANR	2904032	CatchStatement	catch ( const std :: exception & error )		2903724	0					
ANR	2904033	Identifier	error		2903724	0					
ANR	2904034	CompoundStatement		83:39:3076:3076	2903724	1					
ANR	2904035	ExpressionStatement	std :: cout << error . what ( ) << std :: endl	568:4:16055:16093	2903724	0	True				
ANR	2904036	ShiftExpression	std :: cout << error . what ( ) << std :: endl		2903724	0		<<			
ANR	2904037	Identifier	std :: cout		2903724	0					
ANR	2904038	ShiftExpression	error . what ( ) << std :: endl		2903724	1		<<			
ANR	2904039	CallExpression	error . what ( )		2903724	0					
ANR	2904040	Callee	error . what		2903724	0					
ANR	2904041	MemberAccess	error . what		2903724	0					
ANR	2904042	Identifier	error		2903724	0					
ANR	2904043	Identifier	what		2903724	1					
ANR	2904044	ArgumentList			2903724	1					
ANR	2904045	Identifier	std :: endl		2903724	1					
ANR	2904046	ReturnType	void		2903724	1					
ANR	2904047	Identifier	ClientPub :: publish_messages		2903724	2					
ANR	2904048	ParameterList	"string logMsg , char * persistFile"		2903724	3					
ANR	2904049	Parameter	string logMsg	484:33:12939:12951	2903724	0	True				
ANR	2904050	ParameterType	string		2903724	0					
ANR	2904051	Identifier	logMsg		2903724	1					
ANR	2904052	Parameter	char * persistFile	484:47:12953:12969	2903724	1	True				
ANR	2904053	ParameterType	char *		2903724	0					
ANR	2904054	Identifier	persistFile		2903724	1					
ANR	2904055	CFGEntryNode	ENTRY		2903724		True				
ANR	2904056	CFGExitNode	EXIT		2903724		True				
ANR	2904057	CFGErrorNode	ERROR		2903724		True				
ANR	2904058	Symbol	sendFlag		2903724						
ANR	2904059	Symbol	persistFile		2903724						
ANR	2904060	Symbol	false		2903724						
ANR	2904061	Symbol	logMsg		2903724						
ANR	2904062	Symbol	connection		2903724						
ANR	2904063	DeclStmt									
ANR	2904064	Decl							ifstream	ifstream	dbRFile
ANR	2904065	DeclStmt									
ANR	2904066	Decl							ofstream	ofstream	dbWFileTemp
ANR	2904067	DeclStmt									
ANR	2904068	Decl							fstream	fstream	dbWFile
ANR	2904069	DeclStmt									
ANR	2904070	Decl							ifstream	ifstream	dbSRFile
ANR	2904071	DeclStmt									
ANR	2904072	Decl							ifstream	ifstream	pRFile
ANR	2904073	DeclStmt									
ANR	2904074	Decl							ifstream	ifstream	pTempFile
ANR	2904075	DeclStmt									
ANR	2904076	Decl							ifstream	ifstream	metaRFile
ANR	2904077	DeclStmt									
ANR	2904078	Decl							ofstream	ofstream	dbSWFile
ANR	2904079	DeclStmt									
ANR	2904080	Decl							ofstream	ofstream	metaWFile
ANR	2904081	DeclStmt									
ANR	2904082	Decl							ofstream	ofstream	stateBufFile
ANR	2904083	DeclStmt									
ANR	2904084	Decl							ofstream	ofstream	eFile
ANR	2904085	DeclStmt									
ANR	2904086	Decl							ofstream	ofstream	adFile
ANR	2904087	DeclStmt									
ANR	2904088	Decl							string	string	error
ANR	2904089	DeclStmt									
ANR	2904090	Decl							ReadUserLog :: FileState	ReadUserLog :: FileState	otherStateBuf
ANR	2904091	DeclStmt									
ANR	2904092	Decl							ReadUserLog :: FileState	ReadUserLog :: FileState	tempStateBuf
ANR	2904093	DeclStmt									
ANR	2904094	Decl							long	long	missedEventCnt
ANR	2904095	DeclStmt									
ANR	2904096	Decl							bool	bool	evnDiffFlag
ANR	2904097	DeclStmt									
ANR	2904098	Decl							char	char *	errorFile
ANR	2904099	DeclStmt									
ANR	2904100	Decl							int	int	eventNum
ANR	2904101	DeclStmt									
ANR	2904102	Decl							ULogEvent	ULogEvent *	event
ANR	2904103	DeclStmt									
ANR	2904104	Decl							int	int	msgId
ANR	2904105	DeclStmt									
ANR	2904106	Decl							ULogEventOutcome	ULogEventOutcome	outCome
ANR	2904107	DeclStmt									
ANR	2904108	Decl							std :: ostringstream	std :: ostringstream	missedEStr
ANR	2904109	DeclStmt									
ANR	2904110	Decl							std :: ostringstream	std :: ostringstream	mid
ANR	2904111	DeclStmt									
ANR	2904112	Decl							std :: ostringstream	std :: ostringstream	fid
ANR	2904113	DeclStmt									
ANR	2904114	Decl							string	string	logStr
ANR	2904115	DeclStmt									
ANR	2904116	Decl							const ReadUserLogStateAccess	const ReadUserLogStateAccess	lsa
ANR	2904117	DeclStmt									
ANR	2904118	Decl							unsigned long	unsigned long	testId
ANR	2904119	DeclStmt									
ANR	2904120	Decl							unsigned long	unsigned long	testId1
ANR	2904121	DeclStmt									
ANR	2904122	Decl							int	int	tlen
ANR	2904123	DeclStmt									
ANR	2904124	Decl							char	char [ 128 ]	tbuf
ANR	2904125	DeclStmt									
ANR	2904126	Decl							bool	bool	tf
ANR	2904127	DeclStmt									
ANR	2904128	Decl							const ReadUserLogStateAccess	const ReadUserLogStateAccess	otherLSA
ANR	2904129	DeclStmt									
ANR	2904130	Decl							const ReadUserLogStateAccess	const ReadUserLogStateAccess	thisLSA
ANR	2904131	DeclStmt									
ANR	2904132	Decl							string	string	mcnt
ANR	2904133	DeclStmt									
ANR	2904134	Decl							int	int	cint
ANR	2904135	DeclStmt									
ANR	2904136	Decl							string	string	eStr
ANR	2904137	DeclStmt									
ANR	2904138	Decl							string	string	eStr
ANR	2904139	Function	main	712:0:20264:21047							
ANR	2904140	FunctionDef	"main (int argc , char * argv [ ])"		2904139	0					
ANR	2904141	CompoundStatement		712:32:20296:21047	2904139	0					
ANR	2904142	IfStatement	if ( argc < 3 )		2904139	0					
ANR	2904143	Condition	argc < 3	713:5:20303:20310	2904139	0	True				
ANR	2904144	RelationalExpression	argc < 3		2904139	0		<			
ANR	2904145	Identifier	argc		2904139	0					
ANR	2904146	PrimaryExpression	3		2904139	1					
ANR	2904147	CompoundStatement		2:15:16:16	2904139	1					
ANR	2904148	ExpressionStatement	"cout << ""\\n Insufficient input"" << endl"	714:4:20319:20356	2904139	0	True				
ANR	2904149	ShiftExpression	"cout << ""\\n Insufficient input"" << endl"		2904139	0		<<			
ANR	2904150	Identifier	cout		2904139	0					
ANR	2904151	ShiftExpression	"""\\n Insufficient input"" << endl"		2904139	1		<<			
ANR	2904152	PrimaryExpression	"""\\n Insufficient input"""		2904139	0					
ANR	2904153	Identifier	endl		2904139	1					
ANR	2904154	ExpressionStatement	exit ( 1 )	715:4:20362:20369	2904139	1	True				
ANR	2904155	CallExpression	exit ( 1 )		2904139	0					
ANR	2904156	Callee	exit		2904139	0					
ANR	2904157	Identifier	exit		2904139	0					
ANR	2904158	ArgumentList	1		2904139	1					
ANR	2904159	Argument	1		2904139	0					
ANR	2904160	PrimaryExpression	1		2904139	0					
ANR	2904161	IdentifierDeclStatement	char * inputFName = argv [ 1 ] ;	717:2:20377:20403	2904139	1	True				
ANR	2904162	IdentifierDecl	* inputFName = argv [ 1 ]		2904139	0					
ANR	2904163	IdentifierDeclType	char *		2904139	0					
ANR	2904164	Identifier	inputFName		2904139	1					
ANR	2904165	AssignmentExpression	* inputFName = argv [ 1 ]		2904139	2		=			
ANR	2904166	Identifier	inputFName		2904139	0					
ANR	2904167	ArrayIndexing	argv [ 1 ]		2904139	1					
ANR	2904168	Identifier	argv		2904139	0					
ANR	2904169	PrimaryExpression	1		2904139	1					
ANR	2904170	IdentifierDeclStatement	char * persistFName = argv [ 2 ] ;	718:2:20407:20435	2904139	2	True				
ANR	2904171	IdentifierDecl	* persistFName = argv [ 2 ]		2904139	0					
ANR	2904172	IdentifierDeclType	char *		2904139	0					
ANR	2904173	Identifier	persistFName		2904139	1					
ANR	2904174	AssignmentExpression	* persistFName = argv [ 2 ]		2904139	2		=			
ANR	2904175	Identifier	persistFName		2904139	0					
ANR	2904176	ArrayIndexing	argv [ 2 ]		2904139	1					
ANR	2904177	Identifier	argv		2904139	0					
ANR	2904178	PrimaryExpression	2		2904139	1					
ANR	2904179	IdentifierDeclStatement	int eventTrack = 1 ;	719:2:20439:20457	2904139	3	True				
ANR	2904180	IdentifierDecl	eventTrack = 1		2904139	0					
ANR	2904181	IdentifierDeclType	int		2904139	0					
ANR	2904182	Identifier	eventTrack		2904139	1					
ANR	2904183	AssignmentExpression	eventTrack = 1		2904139	2		=			
ANR	2904184	Identifier	eventTrack		2904139	0					
ANR	2904185	PrimaryExpression	1		2904139	1					
ANR	2904186	IdentifierDeclStatement	int erotate = 10 ;	720:2:20461:20477	2904139	4	True				
ANR	2904187	IdentifierDecl	erotate = 10		2904139	0					
ANR	2904188	IdentifierDeclType	int		2904139	0					
ANR	2904189	Identifier	erotate		2904139	1					
ANR	2904190	AssignmentExpression	erotate = 10		2904139	2		=			
ANR	2904191	Identifier	erotate		2904139	0					
ANR	2904192	PrimaryExpression	10		2904139	1					
ANR	2904193	IfStatement	if ( argc > 3 )		2904139	5					
ANR	2904194	Condition	argc > 3	721:6:20485:20492	2904139	0	True				
ANR	2904195	RelationalExpression	argc > 3		2904139	0		>			
ANR	2904196	Identifier	argc		2904139	0					
ANR	2904197	PrimaryExpression	3		2904139	1					
ANR	2904198	ExpressionStatement	erotate = atoi ( argv [ 4 ] )	722:3:20498:20521	2904139	1	True				
ANR	2904199	AssignmentExpression	erotate = atoi ( argv [ 4 ] )		2904139	0		=			
ANR	2904200	Identifier	erotate		2904139	0					
ANR	2904201	CallExpression	atoi ( argv [ 4 ] )		2904139	1					
ANR	2904202	Callee	atoi		2904139	0					
ANR	2904203	Identifier	atoi		2904139	0					
ANR	2904204	ArgumentList	argv [ 4 ]		2904139	1					
ANR	2904205	Argument	argv [ 4 ]		2904139	0					
ANR	2904206	ArrayIndexing	argv [ 4 ]		2904139	0					
ANR	2904207	Identifier	argv		2904139	0					
ANR	2904208	PrimaryExpression	4		2904139	1					
ANR	2904209	IdentifierDeclStatement	int excludeOn = 0 ;	723:2:20525:20542	2904139	6	True				
ANR	2904210	IdentifierDecl	excludeOn = 0		2904139	0					
ANR	2904211	IdentifierDeclType	int		2904139	0					
ANR	2904212	Identifier	excludeOn		2904139	1					
ANR	2904213	AssignmentExpression	excludeOn = 0		2904139	2		=			
ANR	2904214	Identifier	excludeOn		2904139	0					
ANR	2904215	PrimaryExpression	0		2904139	1					
ANR	2904216	IfStatement	if ( argc > 4 )		2904139	7					
ANR	2904217	Condition	argc > 4	724:6:20550:20557	2904139	0	True				
ANR	2904218	RelationalExpression	argc > 4		2904139	0		>			
ANR	2904219	Identifier	argc		2904139	0					
ANR	2904220	PrimaryExpression	4		2904139	1					
ANR	2904221	ExpressionStatement	excludeOn = atoi ( argv [ 5 ] )	725:3:20563:20588	2904139	1	True				
ANR	2904222	AssignmentExpression	excludeOn = atoi ( argv [ 5 ] )		2904139	0		=			
ANR	2904223	Identifier	excludeOn		2904139	0					
ANR	2904224	CallExpression	atoi ( argv [ 5 ] )		2904139	1					
ANR	2904225	Callee	atoi		2904139	0					
ANR	2904226	Identifier	atoi		2904139	0					
ANR	2904227	ArgumentList	argv [ 5 ]		2904139	1					
ANR	2904228	Argument	argv [ 5 ]		2904139	0					
ANR	2904229	ArrayIndexing	argv [ 5 ]		2904139	0					
ANR	2904230	Identifier	argv		2904139	0					
ANR	2904231	PrimaryExpression	5		2904139	1					
ANR	2904232	IdentifierDeclStatement	char * host = NULL ;	726:2:20592:20609	2904139	8	True				
ANR	2904233	IdentifierDecl	* host = NULL		2904139	0					
ANR	2904234	IdentifierDeclType	char *		2904139	0					
ANR	2904235	Identifier	host		2904139	1					
ANR	2904236	AssignmentExpression	* host = NULL		2904139	2		=			
ANR	2904237	Identifier	NULL		2904139	0					
ANR	2904238	Identifier	NULL		2904139	1					
ANR	2904239	IfStatement	if ( argc > 5 )		2904139	9					
ANR	2904240	Condition	argc > 5	727:6:20617:20624	2904139	0	True				
ANR	2904241	RelationalExpression	argc > 5		2904139	0		>			
ANR	2904242	Identifier	argc		2904139	0					
ANR	2904243	PrimaryExpression	5		2904139	1					
ANR	2904244	ExpressionStatement	host = argv [ 6 ]	728:3:20630:20644	2904139	1	True				
ANR	2904245	AssignmentExpression	host = argv [ 6 ]		2904139	0		=			
ANR	2904246	Identifier	host		2904139	0					
ANR	2904247	ArrayIndexing	argv [ 6 ]		2904139	1					
ANR	2904248	Identifier	argv		2904139	0					
ANR	2904249	PrimaryExpression	6		2904139	1					
ANR	2904250	IdentifierDeclStatement	bool excludeFlag = false ;	729:2:20648:20672	2904139	10	True				
ANR	2904251	IdentifierDecl	excludeFlag = false		2904139	0					
ANR	2904252	IdentifierDeclType	bool		2904139	0					
ANR	2904253	Identifier	excludeFlag		2904139	1					
ANR	2904254	AssignmentExpression	excludeFlag = false		2904139	2		=			
ANR	2904255	Identifier	false		2904139	0					
ANR	2904256	Identifier	false		2904139	1					
ANR	2904257	IfStatement	if ( excludeOn == 1 )		2904139	11					
ANR	2904258	Condition	excludeOn == 1	730:6:20680:20691	2904139	0	True				
ANR	2904259	EqualityExpression	excludeOn == 1		2904139	0		==			
ANR	2904260	Identifier	excludeOn		2904139	0					
ANR	2904261	PrimaryExpression	1		2904139	1					
ANR	2904262	ExpressionStatement	excludeFlag = true	731:4:20698:20716	2904139	1	True				
ANR	2904263	AssignmentExpression	excludeFlag = true		2904139	0		=			
ANR	2904264	Identifier	excludeFlag		2904139	0					
ANR	2904265	Identifier	true		2904139	1					
ANR	2904266	IdentifierDeclStatement	"ClientPub * cpObj = new ClientPub ( persistFName , inputFName , erotate , host ) ;"	732:2:20720:20791	2904139	12	True				
ANR	2904267	IdentifierDecl	"* cpObj = new ClientPub ( persistFName , inputFName , erotate , host )"		2904139	0					
ANR	2904268	IdentifierDeclType	ClientPub *		2904139	0					
ANR	2904269	Identifier	cpObj		2904139	1					
ANR	2904270	AssignmentExpression	"* cpObj = new ClientPub ( persistFName , inputFName , erotate , host )"		2904139	2		=			
ANR	2904271	Identifier	cpObj		2904139	0					
ANR	2904272	Expression	"persistFName , inputFName , erotate , host"		2904139	1					
ANR	2904273	Identifier	persistFName		2904139	0					
ANR	2904274	Expression	"inputFName , erotate , host"		2904139	1					
ANR	2904275	Identifier	inputFName		2904139	0					
ANR	2904276	Expression	"erotate , host"		2904139	1					
ANR	2904277	Identifier	erotate		2904139	0					
ANR	2904278	Identifier	host		2904139	1					
ANR	2904279	IfStatement	if ( cpObj -> port < 0 )		2904139	13					
ANR	2904280	Condition	cpObj -> port < 0	733:6:20799:20813	2904139	0	True				
ANR	2904281	RelationalExpression	cpObj -> port < 0		2904139	0		<			
ANR	2904282	PtrMemberAccess	cpObj -> port		2904139	0					
ANR	2904283	Identifier	cpObj		2904139	0					
ANR	2904284	Identifier	port		2904139	1					
ANR	2904285	PrimaryExpression	0		2904139	1					
ANR	2904286	CompoundStatement		22:23:519:519	2904139	1					
ANR	2904287	ExpressionStatement	"printf ( ""It seems as if no qpid daemon is running ... Exiting.\\n"" )"	734:3:20821:20886	2904139	0	True				
ANR	2904288	CallExpression	"printf ( ""It seems as if no qpid daemon is running ... Exiting.\\n"" )"		2904139	0					
ANR	2904289	Callee	printf		2904139	0					
ANR	2904290	Identifier	printf		2904139	0					
ANR	2904291	ArgumentList	"""It seems as if no qpid daemon is running ... Exiting.\\n"""		2904139	1					
ANR	2904292	Argument	"""It seems as if no qpid daemon is running ... Exiting.\\n"""		2904139	0					
ANR	2904293	PrimaryExpression	"""It seems as if no qpid daemon is running ... Exiting.\\n"""		2904139	0					
ANR	2904294	Statement	delete	735:3:20891:20896	2904139	1	True				
ANR	2904295	ExpressionStatement	cpObj	735:10:20898:20903	2904139	2	True				
ANR	2904296	Identifier	cpObj		2904139	0					
ANR	2904297	ReturnStatement	return 0 ;	736:3:20908:20916	2904139	3	True				
ANR	2904298	PrimaryExpression	0		2904139	0					
ANR	2904299	ExpressionStatement	"cpObj -> initLoadMsg ( ""LRM.dat"" )"	738:2:20924:20954	2904139	14	True				
ANR	2904300	CallExpression	"cpObj -> initLoadMsg ( ""LRM.dat"" )"		2904139	0					
ANR	2904301	Callee	cpObj -> initLoadMsg		2904139	0					
ANR	2904302	PtrMemberAccess	cpObj -> initLoadMsg		2904139	0					
ANR	2904303	Identifier	cpObj		2904139	0					
ANR	2904304	Identifier	initLoadMsg		2904139	1					
ANR	2904305	ArgumentList	"""LRM.dat"""		2904139	1					
ANR	2904306	Argument	"""LRM.dat"""		2904139	0					
ANR	2904307	PrimaryExpression	"""LRM.dat"""		2904139	0					
ANR	2904308	ExpressionStatement	"cpObj -> readLog ( persistFName , eventTrack , erotate , excludeFlag )"	739:2:20958:21017	2904139	15	True				
ANR	2904309	CallExpression	"cpObj -> readLog ( persistFName , eventTrack , erotate , excludeFlag )"		2904139	0					
ANR	2904310	Callee	cpObj -> readLog		2904139	0					
ANR	2904311	PtrMemberAccess	cpObj -> readLog		2904139	0					
ANR	2904312	Identifier	cpObj		2904139	0					
ANR	2904313	Identifier	readLog		2904139	1					
ANR	2904314	ArgumentList	persistFName		2904139	1					
ANR	2904315	Argument	persistFName		2904139	0					
ANR	2904316	Identifier	persistFName		2904139	0					
ANR	2904317	Argument	eventTrack		2904139	1					
ANR	2904318	Identifier	eventTrack		2904139	0					
ANR	2904319	Argument	erotate		2904139	2					
ANR	2904320	Identifier	erotate		2904139	0					
ANR	2904321	Argument	excludeFlag		2904139	3					
ANR	2904322	Identifier	excludeFlag		2904139	0					
ANR	2904323	Statement	delete	740:2:21021:21026	2904139	16	True				
ANR	2904324	ExpressionStatement	cpObj	740:9:21028:21033	2904139	17	True				
ANR	2904325	Identifier	cpObj		2904139	0					
ANR	2904326	ReturnStatement	return 0 ;	741:2:21037:21045	2904139	18	True				
ANR	2904327	PrimaryExpression	0		2904139	0					
ANR	2904328	ReturnType	int		2904139	1					
ANR	2904329	Identifier	main		2904139	2					
ANR	2904330	ParameterList	"int argc , char * argv [ ]"		2904139	3					
ANR	2904331	Parameter	int argc	712:9:20273:20280	2904139	0	True				
ANR	2904332	ParameterType	int		2904139	0					
ANR	2904333	Identifier	argc		2904139	1					
ANR	2904334	Parameter	char * argv [ ]	712:19:20283:20293	2904139	1	True				
ANR	2904335	ParameterType	char * [ ]		2904139	0					
ANR	2904336	Identifier	argv		2904139	1					
ANR	2904337	CFGEntryNode	ENTRY		2904139		True				
ANR	2904338	CFGExitNode	EXIT		2904139		True				
ANR	2904339	Symbol	argc		2904139						
ANR	2904340	Symbol	atoi		2904139						
ANR	2904341	Symbol	eventTrack		2904139						
ANR	2904342	Symbol	persistFName		2904139						
ANR	2904343	Symbol	NULL		2904139						
ANR	2904344	Symbol	false		2904139						
ANR	2904345	Symbol	* argv		2904139						
ANR	2904346	Symbol	argv		2904139						
ANR	2904347	Symbol	excludeFlag		2904139						
ANR	2904348	Symbol	cpObj		2904139						
ANR	2904349	Symbol	erotate		2904139						
ANR	2904350	Symbol	inputFName		2904139						
ANR	2904351	Symbol	cpObj -> port		2904139						
ANR	2904352	Symbol	host		2904139						
ANR	2904353	Symbol	true		2904139						
ANR	2904354	Symbol	excludeOn		2904139						
ANR	2904355	Symbol	* cpObj		2904139						
