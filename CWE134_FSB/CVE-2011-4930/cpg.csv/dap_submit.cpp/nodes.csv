command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1162381	File	data/converged/CVE-2011-4930_htcondor/dap_submit.cpp								
ANR	1162382	DeclStmt									
ANR	1162383	Decl							struct stork_global_opts	struct stork_global_opts	global_opts
ANR	1162384	Function	check_dap_format	46:0:1542:2735							
ANR	1162385	FunctionDef	check_dap_format (classad :: ClassAd * currentAd)		1162384	0					
ANR	1162386	CompoundStatement		47:0:1592:2735	1162384	0					
ANR	1162387	IdentifierDeclStatement	char dap_type [ MAXSTR ] ;	48:2:1596:1617	1162384	0	True				
ANR	1162388	IdentifierDecl	dap_type [ MAXSTR ]		1162384	0					
ANR	1162389	IdentifierDeclType	char [ MAXSTR ]		1162384	0					
ANR	1162390	Identifier	dap_type		1162384	1					
ANR	1162391	Identifier	MAXSTR		1162384	2					
ANR	1162392	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	49:2:1621:1646	1162384	1	True				
ANR	1162393	IdentifierDecl	"adbuffer = """""		1162384	0					
ANR	1162394	IdentifierDeclType	std :: string		1162384	0					
ANR	1162395	Identifier	adbuffer		1162384	1					
ANR	1162396	AssignmentExpression	"adbuffer = """""		1162384	2		=			
ANR	1162397	Identifier	adbuffer		1162384	0					
ANR	1162398	PrimaryExpression	""""""		1162384	1					
ANR	1162399	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	50:2:1650:1684	1162384	2	True				
ANR	1162400	IdentifierDecl	* attrexpr = NULL		1162384	0					
ANR	1162401	IdentifierDeclType	classad :: ExprTree *		1162384	0					
ANR	1162402	Identifier	attrexpr		1162384	1					
ANR	1162403	AssignmentExpression	* attrexpr = NULL		1162384	2		=			
ANR	1162404	Identifier	NULL		1162384	0					
ANR	1162405	Identifier	NULL		1162384	1					
ANR	1162406	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	51:2:1688:1721	1162384	3	True				
ANR	1162407	IdentifierDecl	unparser		1162384	0					
ANR	1162408	IdentifierDeclType	classad :: ClassAdUnParser		1162384	0					
ANR	1162409	Identifier	unparser		1162384	1					
ANR	1162410	IfStatement	"if ( ! ( attrexpr = currentAd -> Lookup ( ""dap_type"" ) ) )"		1162384	4					
ANR	1162411	Condition	"! ( attrexpr = currentAd -> Lookup ( ""dap_type"" ) )"	57:7:1837:1879	1162384	0	True				
ANR	1162412	UnaryOperationExpression	"! ( attrexpr = currentAd -> Lookup ( ""dap_type"" ) )"		1162384	0					
ANR	1162413	UnaryOperator	!		1162384	0					
ANR	1162414	AssignmentExpression	"attrexpr = currentAd -> Lookup ( ""dap_type"" )"		1162384	1		=			
ANR	1162415	Identifier	attrexpr		1162384	0					
ANR	1162416	CallExpression	"currentAd -> Lookup ( ""dap_type"" )"		1162384	1					
ANR	1162417	Callee	currentAd -> Lookup		1162384	0					
ANR	1162418	PtrMemberAccess	currentAd -> Lookup		1162384	0					
ANR	1162419	Identifier	currentAd		1162384	0					
ANR	1162420	Identifier	Lookup		1162384	1					
ANR	1162421	ArgumentList	"""dap_type"""		1162384	1					
ANR	1162422	Argument	"""dap_type"""		1162384	0					
ANR	1162423	PrimaryExpression	"""dap_type"""		1162384	0					
ANR	1162424	ReturnStatement	return 0 ;	57:53:1883:1891	1162384	1	True				
ANR	1162425	PrimaryExpression	0		1162384	0					
ANR	1162426	ElseStatement	else		1162384	0					
ANR	1162427	CompoundStatement		15:4:354:379	1162384	0					
ANR	1162428	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	59:4:1905:1940	1162384	0	True				
ANR	1162429	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1162384	0					
ANR	1162430	Callee	unparser . Unparse		1162384	0					
ANR	1162431	MemberAccess	unparser . Unparse		1162384	0					
ANR	1162432	Identifier	unparser		1162384	0					
ANR	1162433	Identifier	Unparse		1162384	1					
ANR	1162434	ArgumentList	adbuffer		1162384	1					
ANR	1162435	Argument	adbuffer		1162384	0					
ANR	1162436	Identifier	adbuffer		1162384	0					
ANR	1162437	Argument	attrexpr		1162384	1					
ANR	1162438	Identifier	attrexpr		1162384	0					
ANR	1162439	IdentifierDeclStatement	char tmp_adbuffer [ MAXSTR ] ;	61:4:1947:1972	1162384	1	True				
ANR	1162440	IdentifierDecl	tmp_adbuffer [ MAXSTR ]		1162384	0					
ANR	1162441	IdentifierDeclType	char [ MAXSTR ]		1162384	0					
ANR	1162442	Identifier	tmp_adbuffer		1162384	1					
ANR	1162443	Identifier	MAXSTR		1162384	2					
ANR	1162444	ExpressionStatement	"strncpy ( tmp_adbuffer , adbuffer . c_str ( ) , MAXSTR )"	62:4:1978:2025	1162384	2	True				
ANR	1162445	CallExpression	"strncpy ( tmp_adbuffer , adbuffer . c_str ( ) , MAXSTR )"		1162384	0					
ANR	1162446	Callee	strncpy		1162384	0					
ANR	1162447	Identifier	strncpy		1162384	0					
ANR	1162448	ArgumentList	tmp_adbuffer		1162384	1					
ANR	1162449	Argument	tmp_adbuffer		1162384	0					
ANR	1162450	Identifier	tmp_adbuffer		1162384	0					
ANR	1162451	Argument	adbuffer . c_str ( )		1162384	1					
ANR	1162452	CallExpression	adbuffer . c_str ( )		1162384	0					
ANR	1162453	Callee	adbuffer . c_str		1162384	0					
ANR	1162454	MemberAccess	adbuffer . c_str		1162384	0					
ANR	1162455	Identifier	adbuffer		1162384	0					
ANR	1162456	Identifier	c_str		1162384	1					
ANR	1162457	ArgumentList			1162384	1					
ANR	1162458	Argument	MAXSTR		1162384	2					
ANR	1162459	Identifier	MAXSTR		1162384	0					
ANR	1162460	ExpressionStatement	"strcpy ( dap_type , strip_str ( tmp_adbuffer ) )"	63:4:2031:2071	1162384	3	True				
ANR	1162461	CallExpression	"strcpy ( dap_type , strip_str ( tmp_adbuffer ) )"		1162384	0					
ANR	1162462	Callee	strcpy		1162384	0					
ANR	1162463	Identifier	strcpy		1162384	0					
ANR	1162464	ArgumentList	dap_type		1162384	1					
ANR	1162465	Argument	dap_type		1162384	0					
ANR	1162466	Identifier	dap_type		1162384	0					
ANR	1162467	Argument	strip_str ( tmp_adbuffer )		1162384	1					
ANR	1162468	CallExpression	strip_str ( tmp_adbuffer )		1162384	0					
ANR	1162469	Callee	strip_str		1162384	0					
ANR	1162470	Identifier	strip_str		1162384	0					
ANR	1162471	ArgumentList	tmp_adbuffer		1162384	1					
ANR	1162472	Argument	tmp_adbuffer		1162384	0					
ANR	1162473	Identifier	tmp_adbuffer		1162384	0					
ANR	1162474	IfStatement	"if ( ! strcmp ( dap_type , ""transfer"" ) )"		1162384	4					
ANR	1162475	Condition	"! strcmp ( dap_type , ""transfer"" )"	65:9:2083:2111	1162384	0	True				
ANR	1162476	UnaryOperationExpression	"! strcmp ( dap_type , ""transfer"" )"		1162384	0					
ANR	1162477	UnaryOperator	!		1162384	0					
ANR	1162478	CallExpression	"strcmp ( dap_type , ""transfer"" )"		1162384	1					
ANR	1162479	Callee	strcmp		1162384	0					
ANR	1162480	Identifier	strcmp		1162384	0					
ANR	1162481	ArgumentList	dap_type		1162384	1					
ANR	1162482	Argument	dap_type		1162384	0					
ANR	1162483	Identifier	dap_type		1162384	0					
ANR	1162484	Argument	"""transfer"""		1162384	1					
ANR	1162485	PrimaryExpression	"""transfer"""		1162384	0					
ANR	1162486	CompoundStatement		19:40:521:521	1162384	1					
ANR	1162487	IfStatement	"if ( ! currentAd -> Lookup ( ""src_url"" ) )"		1162384	0					
ANR	1162488	Condition	"! currentAd -> Lookup ( ""src_url"" )"	66:11:2127:2155	1162384	0	True				
ANR	1162489	UnaryOperationExpression	"! currentAd -> Lookup ( ""src_url"" )"		1162384	0					
ANR	1162490	UnaryOperator	!		1162384	0					
ANR	1162491	CallExpression	"currentAd -> Lookup ( ""src_url"" )"		1162384	1					
ANR	1162492	Callee	currentAd -> Lookup		1162384	0					
ANR	1162493	PtrMemberAccess	currentAd -> Lookup		1162384	0					
ANR	1162494	Identifier	currentAd		1162384	0					
ANR	1162495	Identifier	Lookup		1162384	1					
ANR	1162496	ArgumentList	"""src_url"""		1162384	1					
ANR	1162497	Argument	"""src_url"""		1162384	0					
ANR	1162498	PrimaryExpression	"""src_url"""		1162384	0					
ANR	1162499	ReturnStatement	return 0 ;	66:44:2160:2168	1162384	1	True				
ANR	1162500	PrimaryExpression	0		1162384	0					
ANR	1162501	IfStatement	"if ( ! currentAd -> Lookup ( ""dest_url"" ) )"		1162384	1					
ANR	1162502	Condition	"! currentAd -> Lookup ( ""dest_url"" )"	67:11:2181:2210	1162384	0	True				
ANR	1162503	UnaryOperationExpression	"! currentAd -> Lookup ( ""dest_url"" )"		1162384	0					
ANR	1162504	UnaryOperator	!		1162384	0					
ANR	1162505	CallExpression	"currentAd -> Lookup ( ""dest_url"" )"		1162384	1					
ANR	1162506	Callee	currentAd -> Lookup		1162384	0					
ANR	1162507	PtrMemberAccess	currentAd -> Lookup		1162384	0					
ANR	1162508	Identifier	currentAd		1162384	0					
ANR	1162509	Identifier	Lookup		1162384	1					
ANR	1162510	ArgumentList	"""dest_url"""		1162384	1					
ANR	1162511	Argument	"""dest_url"""		1162384	0					
ANR	1162512	PrimaryExpression	"""dest_url"""		1162384	0					
ANR	1162513	ReturnStatement	return 0 ;	67:44:2214:2222	1162384	1	True				
ANR	1162514	PrimaryExpression	0		1162384	0					
ANR	1162515	ElseStatement	else		1162384	0					
ANR	1162516	IfStatement	"if ( ! strcmp ( dap_type , ""reserve"" ) )"		1162384	0					
ANR	1162517	Condition	"! strcmp ( dap_type , ""reserve"" )"	70:14:2249:2276	1162384	0	True				
ANR	1162518	UnaryOperationExpression	"! strcmp ( dap_type , ""reserve"" )"		1162384	0					
ANR	1162519	UnaryOperator	!		1162384	0					
ANR	1162520	CallExpression	"strcmp ( dap_type , ""reserve"" )"		1162384	1					
ANR	1162521	Callee	strcmp		1162384	0					
ANR	1162522	Identifier	strcmp		1162384	0					
ANR	1162523	ArgumentList	dap_type		1162384	1					
ANR	1162524	Argument	dap_type		1162384	0					
ANR	1162525	Identifier	dap_type		1162384	0					
ANR	1162526	Argument	"""reserve"""		1162384	1					
ANR	1162527	PrimaryExpression	"""reserve"""		1162384	0					
ANR	1162528	CompoundStatement		24:44:686:686	1162384	1					
ANR	1162529	IfStatement	"if ( ! currentAd -> Lookup ( ""dest_host"" ) )"		1162384	0					
ANR	1162530	Condition	"! currentAd -> Lookup ( ""dest_host"" )"	71:11:2292:2322	1162384	0	True				
ANR	1162531	UnaryOperationExpression	"! currentAd -> Lookup ( ""dest_host"" )"		1162384	0					
ANR	1162532	UnaryOperator	!		1162384	0					
ANR	1162533	CallExpression	"currentAd -> Lookup ( ""dest_host"" )"		1162384	1					
ANR	1162534	Callee	currentAd -> Lookup		1162384	0					
ANR	1162535	PtrMemberAccess	currentAd -> Lookup		1162384	0					
ANR	1162536	Identifier	currentAd		1162384	0					
ANR	1162537	Identifier	Lookup		1162384	1					
ANR	1162538	ArgumentList	"""dest_host"""		1162384	1					
ANR	1162539	Argument	"""dest_host"""		1162384	0					
ANR	1162540	PrimaryExpression	"""dest_host"""		1162384	0					
ANR	1162541	ReturnStatement	return 0 ;	71:48:2329:2337	1162384	1	True				
ANR	1162542	PrimaryExpression	0		1162384	0					
ANR	1162543	ElseStatement	else		1162384	0					
ANR	1162544	IfStatement	"if ( ! strcmp ( dap_type , ""release"" ) )"		1162384	0					
ANR	1162545	Condition	"! strcmp ( dap_type , ""release"" )"	77:14:2540:2567	1162384	0	True				
ANR	1162546	UnaryOperationExpression	"! strcmp ( dap_type , ""release"" )"		1162384	0					
ANR	1162547	UnaryOperator	!		1162384	0					
ANR	1162548	CallExpression	"strcmp ( dap_type , ""release"" )"		1162384	1					
ANR	1162549	Callee	strcmp		1162384	0					
ANR	1162550	Identifier	strcmp		1162384	0					
ANR	1162551	ArgumentList	dap_type		1162384	1					
ANR	1162552	Argument	dap_type		1162384	0					
ANR	1162553	Identifier	dap_type		1162384	0					
ANR	1162554	Argument	"""release"""		1162384	1					
ANR	1162555	PrimaryExpression	"""release"""		1162384	0					
ANR	1162556	CompoundStatement		31:44:977:977	1162384	1					
ANR	1162557	IfStatement	"if ( ! currentAd -> Lookup ( ""dest_host"" ) )"		1162384	0					
ANR	1162558	Condition	"! currentAd -> Lookup ( ""dest_host"" )"	78:11:2583:2613	1162384	0	True				
ANR	1162559	UnaryOperationExpression	"! currentAd -> Lookup ( ""dest_host"" )"		1162384	0					
ANR	1162560	UnaryOperator	!		1162384	0					
ANR	1162561	CallExpression	"currentAd -> Lookup ( ""dest_host"" )"		1162384	1					
ANR	1162562	Callee	currentAd -> Lookup		1162384	0					
ANR	1162563	PtrMemberAccess	currentAd -> Lookup		1162384	0					
ANR	1162564	Identifier	currentAd		1162384	0					
ANR	1162565	Identifier	Lookup		1162384	1					
ANR	1162566	ArgumentList	"""dest_host"""		1162384	1					
ANR	1162567	Argument	"""dest_host"""		1162384	0					
ANR	1162568	PrimaryExpression	"""dest_host"""		1162384	0					
ANR	1162569	ReturnStatement	return 0 ;	78:45:2617:2625	1162384	1	True				
ANR	1162570	PrimaryExpression	0		1162384	0					
ANR	1162571	IfStatement	"if ( ! currentAd -> Lookup ( ""reserve_id"" ) )"		1162384	1					
ANR	1162572	Condition	"! currentAd -> Lookup ( ""reserve_id"" )"	79:11:2638:2669	1162384	0	True				
ANR	1162573	UnaryOperationExpression	"! currentAd -> Lookup ( ""reserve_id"" )"		1162384	0					
ANR	1162574	UnaryOperator	!		1162384	0					
ANR	1162575	CallExpression	"currentAd -> Lookup ( ""reserve_id"" )"		1162384	1					
ANR	1162576	Callee	currentAd -> Lookup		1162384	0					
ANR	1162577	PtrMemberAccess	currentAd -> Lookup		1162384	0					
ANR	1162578	Identifier	currentAd		1162384	0					
ANR	1162579	Identifier	Lookup		1162384	1					
ANR	1162580	ArgumentList	"""reserve_id"""		1162384	1					
ANR	1162581	Argument	"""reserve_id"""		1162384	0					
ANR	1162582	PrimaryExpression	"""reserve_id"""		1162384	0					
ANR	1162583	ReturnStatement	return 0 ;	79:46:2673:2681	1162384	1	True				
ANR	1162584	PrimaryExpression	0		1162384	0					
ANR	1162585	ElseStatement	else		1162384	0					
ANR	1162586	ReturnStatement	return 0 ;	82:9:2703:2711	1162384	0	True				
ANR	1162587	PrimaryExpression	0		1162384	0					
ANR	1162588	ReturnStatement	return 1 ;	86:2:2725:2733	1162384	5	True				
ANR	1162589	PrimaryExpression	1		1162384	0					
ANR	1162590	ReturnType	int		1162384	1					
ANR	1162591	Identifier	check_dap_format		1162384	2					
ANR	1162592	ParameterList	classad :: ClassAd * currentAd		1162384	3					
ANR	1162593	Parameter	classad :: ClassAd * currentAd	46:21:1563:1589	1162384	0	True				
ANR	1162594	ParameterType	classad :: ClassAd *		1162384	0					
ANR	1162595	Identifier	currentAd		1162384	1					
ANR	1162596	CFGEntryNode	ENTRY		1162384		True				
ANR	1162597	CFGExitNode	EXIT		1162384		True				
ANR	1162598	Symbol	strcmp		1162384						
ANR	1162599	Symbol	NULL		1162384						
ANR	1162600	Symbol	* currentAd		1162384						
ANR	1162601	Symbol	dap_type		1162384						
ANR	1162602	Symbol	tmp_adbuffer		1162384						
ANR	1162603	Symbol	attrexpr		1162384						
ANR	1162604	Symbol	currentAd		1162384						
ANR	1162605	Symbol	MAXSTR		1162384						
ANR	1162606	Symbol	currentAd -> Lookup		1162384						
ANR	1162607	Symbol	unparser		1162384						
ANR	1162608	Symbol	strip_str		1162384						
ANR	1162609	Symbol	adbuffer . c_str		1162384						
ANR	1162610	Symbol	adbuffer		1162384						
ANR	1162611	Function	MissingArgument	89:0:2816:2970							
ANR	1162612	FunctionDef	"MissingArgument (char * argv0 , char * arg)"		1162611	0					
ANR	1162613	CompoundStatement		90:0:2860:2970	1162611	0					
ANR	1162614	ExpressionStatement	"fprintf ( stderr , ""Missing argument: %s\\n"" , arg )"	91:2:2864:2908	1162611	0	True				
ANR	1162615	CallExpression	"fprintf ( stderr , ""Missing argument: %s\\n"" , arg )"		1162611	0					
ANR	1162616	Callee	fprintf		1162611	0					
ANR	1162617	Identifier	fprintf		1162611	0					
ANR	1162618	ArgumentList	stderr		1162611	1					
ANR	1162619	Argument	stderr		1162611	0					
ANR	1162620	Identifier	stderr		1162611	0					
ANR	1162621	Argument	"""Missing argument: %s\\n"""		1162611	1					
ANR	1162622	PrimaryExpression	"""Missing argument: %s\\n"""		1162611	0					
ANR	1162623	Argument	arg		1162611	2					
ANR	1162624	Identifier	arg		1162611	0					
ANR	1162625	ExpressionStatement	"stork_print_usage ( stderr , argv0 , USAGE , true )"	92:2:2912:2957	1162611	1	True				
ANR	1162626	CallExpression	"stork_print_usage ( stderr , argv0 , USAGE , true )"		1162611	0					
ANR	1162627	Callee	stork_print_usage		1162611	0					
ANR	1162628	Identifier	stork_print_usage		1162611	0					
ANR	1162629	ArgumentList	stderr		1162611	1					
ANR	1162630	Argument	stderr		1162611	0					
ANR	1162631	Identifier	stderr		1162611	0					
ANR	1162632	Argument	argv0		1162611	1					
ANR	1162633	Identifier	argv0		1162611	0					
ANR	1162634	Argument	USAGE		1162611	2					
ANR	1162635	Identifier	USAGE		1162611	0					
ANR	1162636	Argument	true		1162611	3					
ANR	1162637	Identifier	true		1162611	0					
ANR	1162638	ExpressionStatement	exit ( 1 )	93:2:2961:2968	1162611	2	True				
ANR	1162639	CallExpression	exit ( 1 )		1162611	0					
ANR	1162640	Callee	exit		1162611	0					
ANR	1162641	Identifier	exit		1162611	0					
ANR	1162642	ArgumentList	1		1162611	1					
ANR	1162643	Argument	1		1162611	0					
ANR	1162644	PrimaryExpression	1		1162611	0					
ANR	1162645	ReturnType	void		1162611	1					
ANR	1162646	Identifier	MissingArgument		1162611	2					
ANR	1162647	ParameterList	"char * argv0 , char * arg"		1162611	3					
ANR	1162648	Parameter	char * argv0	89:21:2837:2847	1162611	0	True				
ANR	1162649	ParameterType	char *		1162611	0					
ANR	1162650	Identifier	argv0		1162611	1					
ANR	1162651	Parameter	char * arg	89:33:2849:2857	1162611	1	True				
ANR	1162652	ParameterType	char *		1162611	0					
ANR	1162653	Identifier	arg		1162611	1					
ANR	1162654	CFGEntryNode	ENTRY		1162611		True				
ANR	1162655	CFGExitNode	EXIT		1162611		True				
ANR	1162656	Symbol	USAGE		1162611						
ANR	1162657	Symbol	arg		1162611						
ANR	1162658	Symbol	true		1162611						
ANR	1162659	Symbol	argv0		1162611						
ANR	1162660	Symbol	stderr		1162611						
ANR	1162661	Function	IllegalOption	96:0:2973:3123							
ANR	1162662	FunctionDef	"IllegalOption (char * argv0 , char * arg)"		1162661	0					
ANR	1162663	CompoundStatement		97:0:3015:3123	1162661	0					
ANR	1162664	ExpressionStatement	"fprintf ( stderr , ""Illegal option: %s\\n"" , arg )"	98:2:3019:3061	1162661	0	True				
ANR	1162665	CallExpression	"fprintf ( stderr , ""Illegal option: %s\\n"" , arg )"		1162661	0					
ANR	1162666	Callee	fprintf		1162661	0					
ANR	1162667	Identifier	fprintf		1162661	0					
ANR	1162668	ArgumentList	stderr		1162661	1					
ANR	1162669	Argument	stderr		1162661	0					
ANR	1162670	Identifier	stderr		1162661	0					
ANR	1162671	Argument	"""Illegal option: %s\\n"""		1162661	1					
ANR	1162672	PrimaryExpression	"""Illegal option: %s\\n"""		1162661	0					
ANR	1162673	Argument	arg		1162661	2					
ANR	1162674	Identifier	arg		1162661	0					
ANR	1162675	ExpressionStatement	"stork_print_usage ( stderr , argv0 , USAGE , true )"	99:2:3065:3110	1162661	1	True				
ANR	1162676	CallExpression	"stork_print_usage ( stderr , argv0 , USAGE , true )"		1162661	0					
ANR	1162677	Callee	stork_print_usage		1162661	0					
ANR	1162678	Identifier	stork_print_usage		1162661	0					
ANR	1162679	ArgumentList	stderr		1162661	1					
ANR	1162680	Argument	stderr		1162661	0					
ANR	1162681	Identifier	stderr		1162661	0					
ANR	1162682	Argument	argv0		1162661	1					
ANR	1162683	Identifier	argv0		1162661	0					
ANR	1162684	Argument	USAGE		1162661	2					
ANR	1162685	Identifier	USAGE		1162661	0					
ANR	1162686	Argument	true		1162661	3					
ANR	1162687	Identifier	true		1162661	0					
ANR	1162688	ExpressionStatement	exit ( 1 )	100:2:3114:3121	1162661	2	True				
ANR	1162689	CallExpression	exit ( 1 )		1162661	0					
ANR	1162690	Callee	exit		1162661	0					
ANR	1162691	Identifier	exit		1162661	0					
ANR	1162692	ArgumentList	1		1162661	1					
ANR	1162693	Argument	1		1162661	0					
ANR	1162694	PrimaryExpression	1		1162661	0					
ANR	1162695	ReturnType	void		1162661	1					
ANR	1162696	Identifier	IllegalOption		1162661	2					
ANR	1162697	ParameterList	"char * argv0 , char * arg"		1162661	3					
ANR	1162698	Parameter	char * argv0	96:19:2992:3002	1162661	0	True				
ANR	1162699	ParameterType	char *		1162661	0					
ANR	1162700	Identifier	argv0		1162661	1					
ANR	1162701	Parameter	char * arg	96:31:3004:3012	1162661	1	True				
ANR	1162702	ParameterType	char *		1162661	0					
ANR	1162703	Identifier	arg		1162661	1					
ANR	1162704	CFGEntryNode	ENTRY		1162661		True				
ANR	1162705	CFGExitNode	EXIT		1162661		True				
ANR	1162706	Symbol	USAGE		1162661						
ANR	1162707	Symbol	arg		1162661						
ANR	1162708	Symbol	true		1162661						
ANR	1162709	Symbol	argv0		1162661						
ANR	1162710	Symbol	stderr		1162661						
ANR	1162711	Function	readFile	104:0:3185:3544							
ANR	1162712	FunctionDef	"readFile (int fd , char const * filename , std :: string * buf)"		1162711	0					
ANR	1162713	CompoundStatement		106:0:3252:3544	1162711	0					
ANR	1162714	IdentifierDeclStatement	char chunk [ 4 * 1024 ] ;	107:4:3258:3276	1162711	0	True				
ANR	1162715	IdentifierDecl	chunk [ 4 * 1024 ]		1162711	0					
ANR	1162716	IdentifierDeclType	char [ 4 * 1024 ]		1162711	0					
ANR	1162717	Identifier	chunk		1162711	1					
ANR	1162718	MultiplicativeExpression	4 * 1024		1162711	2		*			
ANR	1162719	PrimaryExpression	4		1162711	0					
ANR	1162720	PrimaryExpression	1024		1162711	1					
ANR	1162721	WhileStatement	while ( 1 )		1162711	1					
ANR	1162722	Condition	1	109:7:3286:3286	1162711	0	True				
ANR	1162723	PrimaryExpression	1		1162711	0					
ANR	1162724	CompoundStatement		5:2:40:82	1162711	1					
ANR	1162725	IdentifierDeclStatement	"ssize_t n = read ( fd , chunk , sizeof ( chunk ) - 1 ) ;"	110:2:3293:3335	1162711	0	True				
ANR	1162726	IdentifierDecl	"n = read ( fd , chunk , sizeof ( chunk ) - 1 )"		1162711	0					
ANR	1162727	IdentifierDeclType	ssize_t		1162711	0					
ANR	1162728	Identifier	n		1162711	1					
ANR	1162729	AssignmentExpression	"n = read ( fd , chunk , sizeof ( chunk ) - 1 )"		1162711	2		=			
ANR	1162730	Identifier	n		1162711	0					
ANR	1162731	CallExpression	"read ( fd , chunk , sizeof ( chunk ) - 1 )"		1162711	1					
ANR	1162732	Callee	read		1162711	0					
ANR	1162733	Identifier	read		1162711	0					
ANR	1162734	ArgumentList	fd		1162711	1					
ANR	1162735	Argument	fd		1162711	0					
ANR	1162736	Identifier	fd		1162711	0					
ANR	1162737	Argument	chunk		1162711	1					
ANR	1162738	Identifier	chunk		1162711	0					
ANR	1162739	Argument	sizeof ( chunk ) - 1		1162711	2					
ANR	1162740	AdditiveExpression	sizeof ( chunk ) - 1		1162711	0		-			
ANR	1162741	SizeofExpression	sizeof ( chunk )		1162711	0					
ANR	1162742	Sizeof	sizeof		1162711	0					
ANR	1162743	SizeofOperand	chunk		1162711	1					
ANR	1162744	PrimaryExpression	1		1162711	1					
ANR	1162745	IfStatement	if ( n > 0 )		1162711	1					
ANR	1162746	Condition	n > 0	111:5:3342:3344	1162711	0	True				
ANR	1162747	RelationalExpression	n > 0		1162711	0		>			
ANR	1162748	Identifier	n		1162711	0					
ANR	1162749	PrimaryExpression	0		1162711	1					
ANR	1162750	CompoundStatement		6:10:94:94	1162711	1					
ANR	1162751	ExpressionStatement	chunk [ n ] = '\\0'	112:3:3352:3367	1162711	0	True				
ANR	1162752	AssignmentExpression	chunk [ n ] = '\\0'		1162711	0		=			
ANR	1162753	ArrayIndexing	chunk [ n ]		1162711	0					
ANR	1162754	Identifier	chunk		1162711	0					
ANR	1162755	Identifier	n		1162711	1					
ANR	1162756	PrimaryExpression	'\\0'		1162711	1					
ANR	1162757	ExpressionStatement	( * buf ) += chunk	113:3:3372:3387	1162711	1	True				
ANR	1162758	AssignmentExpression	( * buf ) += chunk		1162711	0		+=			
ANR	1162759	UnaryOperationExpression	* buf		1162711	0					
ANR	1162760	UnaryOperator	*		1162711	0					
ANR	1162761	Identifier	buf		1162711	1					
ANR	1162762	Identifier	chunk		1162711	1					
ANR	1162763	ElseStatement	else		1162711	0					
ANR	1162764	IfStatement	if ( n == 0 )		1162711	0					
ANR	1162765	Condition	n == 0	115:10:3403:3406	1162711	0	True				
ANR	1162766	EqualityExpression	n == 0		1162711	0		==			
ANR	1162767	Identifier	n		1162711	0					
ANR	1162768	PrimaryExpression	0		1162711	1					
ANR	1162769	CompoundStatement		10:16:156:156	1162711	1					
ANR	1162770	BreakStatement	break ;	116:3:3414:3419	1162711	0	True				
ANR	1162771	ElseStatement	else		1162711	0					
ANR	1162772	CompoundStatement		13:7:179:179	1162711	0					
ANR	1162773	ExpressionStatement	"fprintf ( stderr , ""failed to read %s: %s\\n"" , filename , strerror ( errno ) )"	119:3:3437:3503	1162711	0	True				
ANR	1162774	CallExpression	"fprintf ( stderr , ""failed to read %s: %s\\n"" , filename , strerror ( errno ) )"		1162711	0					
ANR	1162775	Callee	fprintf		1162711	0					
ANR	1162776	Identifier	fprintf		1162711	0					
ANR	1162777	ArgumentList	stderr		1162711	1					
ANR	1162778	Argument	stderr		1162711	0					
ANR	1162779	Identifier	stderr		1162711	0					
ANR	1162780	Argument	"""failed to read %s: %s\\n"""		1162711	1					
ANR	1162781	PrimaryExpression	"""failed to read %s: %s\\n"""		1162711	0					
ANR	1162782	Argument	filename		1162711	2					
ANR	1162783	Identifier	filename		1162711	0					
ANR	1162784	Argument	strerror ( errno )		1162711	3					
ANR	1162785	CallExpression	strerror ( errno )		1162711	0					
ANR	1162786	Callee	strerror		1162711	0					
ANR	1162787	Identifier	strerror		1162711	0					
ANR	1162788	ArgumentList	errno		1162711	1					
ANR	1162789	Argument	errno		1162711	0					
ANR	1162790	Identifier	errno		1162711	0					
ANR	1162791	ReturnStatement	return false ;	120:3:3508:3520	1162711	1	True				
ANR	1162792	Identifier	false		1162711	0					
ANR	1162793	ReturnStatement	return true ;	124:1:3531:3542	1162711	2	True				
ANR	1162794	Identifier	true		1162711	0					
ANR	1162795	ReturnType	static bool		1162711	1					
ANR	1162796	Identifier	readFile		1162711	2					
ANR	1162797	ParameterList	"int fd , char const * filename , std :: string * buf"		1162711	3					
ANR	1162798	Parameter	int fd	105:9:3206:3211	1162711	0	True				
ANR	1162799	ParameterType	int		1162711	0					
ANR	1162800	Identifier	fd		1162711	1					
ANR	1162801	Parameter	char const * filename	105:16:3213:3232	1162711	1	True				
ANR	1162802	ParameterType	char const *		1162711	0					
ANR	1162803	Identifier	filename		1162711	1					
ANR	1162804	Parameter	std :: string * buf	105:37:3234:3249	1162711	2	True				
ANR	1162805	ParameterType	std :: string *		1162711	0					
ANR	1162806	Identifier	buf		1162711	1					
ANR	1162807	CFGEntryNode	ENTRY		1162711		True				
ANR	1162808	CFGExitNode	EXIT		1162711		True				
ANR	1162809	Symbol	* buf		1162711						
ANR	1162810	Symbol	errno		1162711						
ANR	1162811	Symbol	read		1162711						
ANR	1162812	Symbol	false		1162711						
ANR	1162813	Symbol	chunk		1162711						
ANR	1162814	Symbol	stderr		1162711						
ANR	1162815	Symbol	n		1162711						
ANR	1162816	Symbol	strerror		1162711						
ANR	1162817	Symbol	buf		1162711						
ANR	1162818	Symbol	filename		1162711						
ANR	1162819	Symbol	* chunk		1162711						
ANR	1162820	Symbol	* n		1162711						
ANR	1162821	Symbol	true		1162711						
ANR	1162822	Symbol	fd		1162711						
ANR	1162823	Function	skip_whitespace	129:0:3640:3789							
ANR	1162824	FunctionDef	"skip_whitespace (std :: string const & s , int & offset)"		1162823	0					
ANR	1162825	CompoundStatement		130:50:3701:3789	1162823	0					
ANR	1162826	WhileStatement	while ( ( int ) s . size ( ) > offset && isspace ( s [ offset ] ) )		1162823	0					
ANR	1162827	Condition	( int ) s . size ( ) > offset && isspace ( s [ offset ] )	131:7:3710:3753	1162823	0	True				
ANR	1162828	AndExpression	( int ) s . size ( ) > offset && isspace ( s [ offset ] )		1162823	0		&&			
ANR	1162829	RelationalExpression	( int ) s . size ( ) > offset		1162823	0		>			
ANR	1162830	CastExpression	( int ) s . size ( )		1162823	0					
ANR	1162831	CastTarget	int		1162823	0					
ANR	1162832	CallExpression	s . size ( )		1162823	1					
ANR	1162833	Callee	s . size		1162823	0					
ANR	1162834	MemberAccess	s . size		1162823	0					
ANR	1162835	Identifier	s		1162823	0					
ANR	1162836	Identifier	size		1162823	1					
ANR	1162837	ArgumentList			1162823	1					
ANR	1162838	Identifier	offset		1162823	1					
ANR	1162839	CallExpression	isspace ( s [ offset ] )		1162823	1					
ANR	1162840	Callee	isspace		1162823	0					
ANR	1162841	Identifier	isspace		1162823	0					
ANR	1162842	ArgumentList	s [ offset ]		1162823	1					
ANR	1162843	Argument	s [ offset ]		1162823	0					
ANR	1162844	ArrayIndexing	s [ offset ]		1162823	0					
ANR	1162845	Identifier	s		1162823	0					
ANR	1162846	Identifier	offset		1162823	1					
ANR	1162847	CompoundStatement		2:53:54:54	1162823	1					
ANR	1162848	ExpressionStatement	offset ++	132:2:3760:3768	1162823	0	True				
ANR	1162849	PostIncDecOperationExpression	offset ++		1162823	0					
ANR	1162850	Identifier	offset		1162823	0					
ANR	1162851	IncDec	++		1162823	1					
ANR	1162852	ReturnStatement	return offset ;	134:1:3774:3787	1162823	1	True				
ANR	1162853	Identifier	offset		1162823	0					
ANR	1162854	ReturnType	static int		1162823	1					
ANR	1162855	Identifier	skip_whitespace		1162823	2					
ANR	1162856	ParameterList	"std :: string const & s , int & offset"		1162823	3					
ANR	1162857	Parameter	std :: string const & s	130:16:3667:3686	1162823	0	True				
ANR	1162858	ParameterType	std :: string const &		1162823	0					
ANR	1162859	Identifier	s		1162823	1					
ANR	1162860	Parameter	int & offset	130:37:3688:3698	1162823	1	True				
ANR	1162861	ParameterType	int &		1162823	0					
ANR	1162862	Identifier	offset		1162823	1					
ANR	1162863	CFGEntryNode	ENTRY		1162823		True				
ANR	1162864	CFGExitNode	EXIT		1162823		True				
ANR	1162865	Symbol	s		1162823						
ANR	1162866	Symbol	offset		1162823						
ANR	1162867	Symbol	s . size		1162823						
ANR	1162868	Symbol	isspace		1162823						
ANR	1162869	Symbol	* offset		1162823						
ANR	1162870	Symbol	* s		1162823						
ANR	1162871	Function	submit_ad	138:0:3833:7818							
ANR	1162872	FunctionDef	"submit_ad (Sock * sock , classad :: ClassAd * currentAd , char * lognotes , bool spool_proxy)"		1162871	0					
ANR	1162873	CompoundStatement		144:0:3929:7818	1162871	0					
ANR	1162874	IfStatement	if ( currentAd == NULL )		1162871	0					
ANR	1162875	Condition	currentAd == NULL	147:8:3980:3996	1162871	0	True				
ANR	1162876	EqualityExpression	currentAd == NULL		1162871	0		==			
ANR	1162877	Identifier	currentAd		1162871	0					
ANR	1162878	Identifier	NULL		1162871	1					
ANR	1162879	CompoundStatement		4:27:69:69	1162871	1					
ANR	1162880	ExpressionStatement	"fprintf ( stderr , ""Invalid input format! Not a valid classad!\\n"" )"	148:6:4007:4070	1162871	0	True				
ANR	1162881	CallExpression	"fprintf ( stderr , ""Invalid input format! Not a valid classad!\\n"" )"		1162871	0					
ANR	1162882	Callee	fprintf		1162871	0					
ANR	1162883	Identifier	fprintf		1162871	0					
ANR	1162884	ArgumentList	stderr		1162871	1					
ANR	1162885	Argument	stderr		1162871	0					
ANR	1162886	Identifier	stderr		1162871	0					
ANR	1162887	Argument	"""Invalid input format! Not a valid classad!\\n"""		1162871	1					
ANR	1162888	PrimaryExpression	"""Invalid input format! Not a valid classad!\\n"""		1162871	0					
ANR	1162889	ReturnStatement	return 1 ;	149:6:4078:4086	1162871	1	True				
ANR	1162890	PrimaryExpression	1		1162871	0					
ANR	1162891	IfStatement	if ( lognotes )		1162871	1					
ANR	1162892	Condition	lognotes	155:8:4240:4247	1162871	0	True				
ANR	1162893	Identifier	lognotes		1162871	0					
ANR	1162894	CompoundStatement		12:17:319:319	1162871	1					
ANR	1162895	IfStatement	"if ( ! currentAd -> InsertAttr ( ""LogNotes"" , lognotes ) )"		1162871	0					
ANR	1162896	Condition	"! currentAd -> InsertAttr ( ""LogNotes"" , lognotes )"	156:12:4263:4307	1162871	0	True				
ANR	1162897	UnaryOperationExpression	"! currentAd -> InsertAttr ( ""LogNotes"" , lognotes )"		1162871	0					
ANR	1162898	UnaryOperator	!		1162871	0					
ANR	1162899	CallExpression	"currentAd -> InsertAttr ( ""LogNotes"" , lognotes )"		1162871	1					
ANR	1162900	Callee	currentAd -> InsertAttr		1162871	0					
ANR	1162901	PtrMemberAccess	currentAd -> InsertAttr		1162871	0					
ANR	1162902	Identifier	currentAd		1162871	0					
ANR	1162903	Identifier	InsertAttr		1162871	1					
ANR	1162904	ArgumentList	"""LogNotes"""		1162871	1					
ANR	1162905	Argument	"""LogNotes"""		1162871	0					
ANR	1162906	PrimaryExpression	"""LogNotes"""		1162871	0					
ANR	1162907	Argument	lognotes		1162871	1					
ANR	1162908	Identifier	lognotes		1162871	0					
ANR	1162909	CompoundStatement		13:60:381:381	1162871	1					
ANR	1162910	ExpressionStatement	"fprintf ( stderr , ""error inserting lognotes '%s' into job ad\\n"" , lognotes )"	157:12:4325:4417	1162871	0	True				
ANR	1162911	CallExpression	"fprintf ( stderr , ""error inserting lognotes '%s' into job ad\\n"" , lognotes )"		1162871	0					
ANR	1162912	Callee	fprintf		1162871	0					
ANR	1162913	Identifier	fprintf		1162871	0					
ANR	1162914	ArgumentList	stderr		1162871	1					
ANR	1162915	Argument	stderr		1162871	0					
ANR	1162916	Identifier	stderr		1162871	0					
ANR	1162917	Argument	"""error inserting lognotes '%s' into job ad\\n"""		1162871	1					
ANR	1162918	PrimaryExpression	"""error inserting lognotes '%s' into job ad\\n"""		1162871	0					
ANR	1162919	Argument	lognotes		1162871	2					
ANR	1162920	Identifier	lognotes		1162871	0					
ANR	1162921	IfStatement	if ( ! check_dap_format ( currentAd ) )		1162871	2					
ANR	1162922	Condition	! check_dap_format ( currentAd )	163:9:4490:4517	1162871	0	True				
ANR	1162923	UnaryOperationExpression	! check_dap_format ( currentAd )		1162871	0					
ANR	1162924	UnaryOperator	!		1162871	0					
ANR	1162925	CallExpression	check_dap_format ( currentAd )		1162871	1					
ANR	1162926	Callee	check_dap_format		1162871	0					
ANR	1162927	Identifier	check_dap_format		1162871	0					
ANR	1162928	ArgumentList	currentAd		1162871	1					
ANR	1162929	Argument	currentAd		1162871	0					
ANR	1162930	Identifier	currentAd		1162871	0					
ANR	1162931	CompoundStatement		20:38:589:589	1162871	1					
ANR	1162932	ExpressionStatement	"fprintf ( stderr , ""========================\\n"" )"	164:6:4527:4572	1162871	0	True				
ANR	1162933	CallExpression	"fprintf ( stderr , ""========================\\n"" )"		1162871	0					
ANR	1162934	Callee	fprintf		1162871	0					
ANR	1162935	Identifier	fprintf		1162871	0					
ANR	1162936	ArgumentList	stderr		1162871	1					
ANR	1162937	Argument	stderr		1162871	0					
ANR	1162938	Identifier	stderr		1162871	0					
ANR	1162939	Argument	"""========================\\n"""		1162871	1					
ANR	1162940	PrimaryExpression	"""========================\\n"""		1162871	0					
ANR	1162941	ExpressionStatement	"fprintf ( stderr , ""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"" )"	165:6:4580:4677	1162871	1	True				
ANR	1162942	CallExpression	"fprintf ( stderr , ""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"" )"		1162871	0					
ANR	1162943	Callee	fprintf		1162871	0					
ANR	1162944	Identifier	fprintf		1162871	0					
ANR	1162945	ArgumentList	stderr		1162871	1					
ANR	1162946	Argument	stderr		1162871	0					
ANR	1162947	Identifier	stderr		1162871	0					
ANR	1162948	Argument	"""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"""		1162871	1					
ANR	1162949	PrimaryExpression	"""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"""		1162871	0					
ANR	1162950	ExpressionStatement	"fprintf ( stderr , ""========================\\n"" )"	166:6:4685:4730	1162871	2	True				
ANR	1162951	CallExpression	"fprintf ( stderr , ""========================\\n"" )"		1162871	0					
ANR	1162952	Callee	fprintf		1162871	0					
ANR	1162953	Identifier	fprintf		1162871	0					
ANR	1162954	ArgumentList	stderr		1162871	1					
ANR	1162955	Argument	stderr		1162871	0					
ANR	1162956	Identifier	stderr		1162871	0					
ANR	1162957	Argument	"""========================\\n"""		1162871	1					
ANR	1162958	PrimaryExpression	"""========================\\n"""		1162871	0					
ANR	1162959	ReturnStatement	return 1 ;	167:6:4738:4746	1162871	3	True				
ANR	1162960	PrimaryExpression	1		1162871	0					
ANR	1162961	IdentifierDeclStatement	bool this_job_spool_proxy = spool_proxy ;	170:1:4756:4795	1162871	3	True				
ANR	1162962	IdentifierDecl	this_job_spool_proxy = spool_proxy		1162871	0					
ANR	1162963	IdentifierDeclType	bool		1162871	0					
ANR	1162964	Identifier	this_job_spool_proxy		1162871	1					
ANR	1162965	AssignmentExpression	this_job_spool_proxy = spool_proxy		1162871	2		=			
ANR	1162966	Identifier	spool_proxy		1162871	0					
ANR	1162967	Identifier	spool_proxy		1162871	1					
ANR	1162968	IfStatement	"if ( ! currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy ) )"		1162871	4					
ANR	1162969	Condition	"! currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy )"	171:5:4802:4865	1162871	0	True				
ANR	1162970	UnaryOperationExpression	"! currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy )"		1162871	0					
ANR	1162971	UnaryOperator	!		1162871	0					
ANR	1162972	CallExpression	"currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy )"		1162871	1					
ANR	1162973	Callee	currentAd -> EvaluateAttrBool		1162871	0					
ANR	1162974	PtrMemberAccess	currentAd -> EvaluateAttrBool		1162871	0					
ANR	1162975	Identifier	currentAd		1162871	0					
ANR	1162976	Identifier	EvaluateAttrBool		1162871	1					
ANR	1162977	ArgumentList	"""spool_proxy"""		1162871	1					
ANR	1162978	Argument	"""spool_proxy"""		1162871	0					
ANR	1162979	PrimaryExpression	"""spool_proxy"""		1162871	0					
ANR	1162980	Argument	this_job_spool_proxy		1162871	1					
ANR	1162981	Identifier	this_job_spool_proxy		1162871	0					
ANR	1162982	CompoundStatement		28:72:939:939	1162871	1					
ANR	1162983	ExpressionStatement	this_job_spool_proxy = spool_proxy	172:2:4873:4907	1162871	0	True				
ANR	1162984	AssignmentExpression	this_job_spool_proxy = spool_proxy		1162871	0		=			
ANR	1162985	Identifier	this_job_spool_proxy		1162871	0					
ANR	1162986	Identifier	spool_proxy		1162871	1					
ANR	1162987	IdentifierDeclStatement	std :: string proxy_file_name ;	175:4:4917:4944	1162871	5	True				
ANR	1162988	IdentifierDecl	proxy_file_name		1162871	0					
ANR	1162989	IdentifierDeclType	std :: string		1162871	0					
ANR	1162990	Identifier	proxy_file_name		1162871	1					
ANR	1162991	IdentifierDeclStatement	char * proxy = NULL ;	176:4:4950:4969	1162871	6	True				
ANR	1162992	IdentifierDecl	* proxy = NULL		1162871	0					
ANR	1162993	IdentifierDeclType	char *		1162871	0					
ANR	1162994	Identifier	proxy		1162871	1					
ANR	1162995	AssignmentExpression	* proxy = NULL		1162871	2		=			
ANR	1162996	Identifier	NULL		1162871	0					
ANR	1162997	Identifier	NULL		1162871	1					
ANR	1162998	IdentifierDeclStatement	int proxy_size = 0 ;	177:4:4975:4993	1162871	7	True				
ANR	1162999	IdentifierDecl	proxy_size = 0		1162871	0					
ANR	1163000	IdentifierDeclType	int		1162871	0					
ANR	1163001	Identifier	proxy_size		1162871	1					
ANR	1163002	AssignmentExpression	proxy_size = 0		1162871	2		=			
ANR	1163003	Identifier	proxy_size		1162871	0					
ANR	1163004	PrimaryExpression	0		1162871	1					
ANR	1163005	IfStatement	"if ( currentAd -> EvaluateAttrString ( ""x509proxy"" , proxy_file_name ) )"		1162871	8					
ANR	1163006	Condition	"currentAd -> EvaluateAttrString ( ""x509proxy"" , proxy_file_name )"	178:8:5003:5062	1162871	0	True				
ANR	1163007	CallExpression	"currentAd -> EvaluateAttrString ( ""x509proxy"" , proxy_file_name )"		1162871	0					
ANR	1163008	Callee	currentAd -> EvaluateAttrString		1162871	0					
ANR	1163009	PtrMemberAccess	currentAd -> EvaluateAttrString		1162871	0					
ANR	1163010	Identifier	currentAd		1162871	0					
ANR	1163011	Identifier	EvaluateAttrString		1162871	1					
ANR	1163012	ArgumentList	"""x509proxy"""		1162871	1					
ANR	1163013	Argument	"""x509proxy"""		1162871	0					
ANR	1163014	PrimaryExpression	"""x509proxy"""		1162871	0					
ANR	1163015	Argument	proxy_file_name		1162871	1					
ANR	1163016	Identifier	proxy_file_name		1162871	0					
ANR	1163017	CompoundStatement		35:70:1135:1135	1162871	1					
ANR	1163018	IfStatement	"if ( proxy_file_name == ""default"" )"		1162871	0					
ANR	1163019	Condition	"proxy_file_name == ""default"""	180:13:5081:5108	1162871	0	True				
ANR	1163020	EqualityExpression	"proxy_file_name == ""default"""		1162871	0		==			
ANR	1163021	Identifier	proxy_file_name		1162871	0					
ANR	1163022	PrimaryExpression	"""default"""		1162871	1					
ANR	1163023	CompoundStatement		38:12:1196:1238	1162871	1					
ANR	1163024	IdentifierDeclStatement	char * defproxy = get_x509_proxy_filename ( ) ;	181:12:5126:5168	1162871	0	True				
ANR	1163025	IdentifierDecl	* defproxy = get_x509_proxy_filename ( )		1162871	0					
ANR	1163026	IdentifierDeclType	char *		1162871	0					
ANR	1163027	Identifier	defproxy		1162871	1					
ANR	1163028	AssignmentExpression	* defproxy = get_x509_proxy_filename ( )		1162871	2		=			
ANR	1163029	Identifier	defproxy		1162871	0					
ANR	1163030	CallExpression	get_x509_proxy_filename ( )		1162871	1					
ANR	1163031	Callee	get_x509_proxy_filename		1162871	0					
ANR	1163032	Identifier	get_x509_proxy_filename		1162871	0					
ANR	1163033	ArgumentList			1162871	1					
ANR	1163034	IfStatement	if ( defproxy )		1162871	1					
ANR	1163035	Condition	defproxy	182:16:5186:5193	1162871	0	True				
ANR	1163036	Identifier	defproxy		1162871	0					
ANR	1163037	CompoundStatement		39:26:1266:1266	1162871	1					
ANR	1163038	ExpressionStatement	"printf ( ""using default proxy: %s\\n"" , defproxy )"	183:16:5214:5259	1162871	0	True				
ANR	1163039	CallExpression	"printf ( ""using default proxy: %s\\n"" , defproxy )"		1162871	0					
ANR	1163040	Callee	printf		1162871	0					
ANR	1163041	Identifier	printf		1162871	0					
ANR	1163042	ArgumentList	"""using default proxy: %s\\n"""		1162871	1					
ANR	1163043	Argument	"""using default proxy: %s\\n"""		1162871	0					
ANR	1163044	PrimaryExpression	"""using default proxy: %s\\n"""		1162871	0					
ANR	1163045	Argument	defproxy		1162871	1					
ANR	1163046	Identifier	defproxy		1162871	0					
ANR	1163047	ExpressionStatement	proxy_file_name = defproxy	184:16:5277:5303	1162871	1	True				
ANR	1163048	AssignmentExpression	proxy_file_name = defproxy		1162871	0		=			
ANR	1163049	Identifier	proxy_file_name		1162871	0					
ANR	1163050	Identifier	defproxy		1162871	1					
ANR	1163051	ExpressionStatement	"currentAd -> InsertAttr ( ""x509proxy"" , proxy_file_name )"	185:4:5309:5360	1162871	2	True				
ANR	1163052	CallExpression	"currentAd -> InsertAttr ( ""x509proxy"" , proxy_file_name )"		1162871	0					
ANR	1163053	Callee	currentAd -> InsertAttr		1162871	0					
ANR	1163054	PtrMemberAccess	currentAd -> InsertAttr		1162871	0					
ANR	1163055	Identifier	currentAd		1162871	0					
ANR	1163056	Identifier	InsertAttr		1162871	1					
ANR	1163057	ArgumentList	"""x509proxy"""		1162871	1					
ANR	1163058	Argument	"""x509proxy"""		1162871	0					
ANR	1163059	PrimaryExpression	"""x509proxy"""		1162871	0					
ANR	1163060	Argument	proxy_file_name		1162871	1					
ANR	1163061	Identifier	proxy_file_name		1162871	0					
ANR	1163062	ExpressionStatement	free ( defproxy )	186:16:5378:5392	1162871	3	True				
ANR	1163063	CallExpression	free ( defproxy )		1162871	0					
ANR	1163064	Callee	free		1162871	0					
ANR	1163065	Identifier	free		1162871	0					
ANR	1163066	ArgumentList	defproxy		1162871	1					
ANR	1163067	Argument	defproxy		1162871	0					
ANR	1163068	Identifier	defproxy		1162871	0					
ANR	1163069	ElseStatement	else		1162871	0					
ANR	1163070	CompoundStatement		44:19:1483:1483	1162871	0					
ANR	1163071	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s\\n"" , x509_error_string ( ) )"	188:16:5431:5483	1162871	0	True				
ANR	1163072	CallExpression	"fprintf ( stderr , ""ERROR: %s\\n"" , x509_error_string ( ) )"		1162871	0					
ANR	1163073	Callee	fprintf		1162871	0					
ANR	1163074	Identifier	fprintf		1162871	0					
ANR	1163075	ArgumentList	stderr		1162871	1					
ANR	1163076	Argument	stderr		1162871	0					
ANR	1163077	Identifier	stderr		1162871	0					
ANR	1163078	Argument	"""ERROR: %s\\n"""		1162871	1					
ANR	1163079	PrimaryExpression	"""ERROR: %s\\n"""		1162871	0					
ANR	1163080	Argument	x509_error_string ( )		1162871	2					
ANR	1163081	CallExpression	x509_error_string ( )		1162871	0					
ANR	1163082	Callee	x509_error_string		1162871	0					
ANR	1163083	Identifier	x509_error_string		1162871	0					
ANR	1163084	ArgumentList			1162871	1					
ANR	1163085	ReturnStatement	return 1 ;	189:16:5501:5509	1162871	1	True				
ANR	1163086	PrimaryExpression	1		1162871	0					
ANR	1163087	IfStatement	if ( this_job_spool_proxy )		1162871	1					
ANR	1163088	Condition	this_job_spool_proxy	193:6:5542:5561	1162871	0	True				
ANR	1163089	Identifier	this_job_spool_proxy		1162871	0					
ANR	1163090	CompoundStatement		83:3:2581:2629	1162871	1					
ANR	1163091	IdentifierDeclStatement	struct stat stat_buff ;	195:3:5571:5592	1162871	0	True				
ANR	1163092	IdentifierDecl	stat_buff		1162871	0					
ANR	1163093	IdentifierDeclType	struct stat		1162871	0					
ANR	1163094	Identifier	stat_buff		1162871	1					
ANR	1163095	IfStatement	"if ( stat ( proxy_file_name . c_str ( ) , & stat_buff ) == 0 )"		1162871	1					
ANR	1163096	Condition	"stat ( proxy_file_name . c_str ( ) , & stat_buff ) == 0"	196:7:5601:5647	1162871	0	True				
ANR	1163097	EqualityExpression	"stat ( proxy_file_name . c_str ( ) , & stat_buff ) == 0"		1162871	0		==			
ANR	1163098	CallExpression	"stat ( proxy_file_name . c_str ( ) , & stat_buff )"		1162871	0					
ANR	1163099	Callee	stat		1162871	0					
ANR	1163100	Identifier	stat		1162871	0					
ANR	1163101	ArgumentList	proxy_file_name . c_str ( )		1162871	1					
ANR	1163102	Argument	proxy_file_name . c_str ( )		1162871	0					
ANR	1163103	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163104	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163105	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163106	Identifier	proxy_file_name		1162871	0					
ANR	1163107	Identifier	c_str		1162871	1					
ANR	1163108	ArgumentList			1162871	1					
ANR	1163109	Argument	& stat_buff		1162871	1					
ANR	1163110	UnaryOperationExpression	& stat_buff		1162871	0					
ANR	1163111	UnaryOperator	&		1162871	0					
ANR	1163112	Identifier	stat_buff		1162871	1					
ANR	1163113	PrimaryExpression	0		1162871	1					
ANR	1163114	CompoundStatement		53:56:1720:1720	1162871	1					
ANR	1163115	ExpressionStatement	proxy_size = stat_buff . st_size	197:4:5656:5686	1162871	0	True				
ANR	1163116	AssignmentExpression	proxy_size = stat_buff . st_size		1162871	0		=			
ANR	1163117	Identifier	proxy_size		1162871	0					
ANR	1163118	MemberAccess	stat_buff . st_size		1162871	1					
ANR	1163119	Identifier	stat_buff		1162871	0					
ANR	1163120	Identifier	st_size		1162871	1					
ANR	1163121	ElseStatement	else		1162871	0					
ANR	1163122	CompoundStatement		55:10:1768:1768	1162871	0					
ANR	1163123	ExpressionStatement	"fprintf ( stderr , ""ERROR: proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"	199:16:5716:5847	1162871	0	True				
ANR	1163124	CallExpression	"fprintf ( stderr , ""ERROR: proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"		1162871	0					
ANR	1163125	Callee	fprintf		1162871	0					
ANR	1163126	Identifier	fprintf		1162871	0					
ANR	1163127	ArgumentList	stderr		1162871	1					
ANR	1163128	Argument	stderr		1162871	0					
ANR	1163129	Identifier	stderr		1162871	0					
ANR	1163130	Argument	"""ERROR: proxy %s: %s\\n"""		1162871	1					
ANR	1163131	PrimaryExpression	"""ERROR: proxy %s: %s\\n"""		1162871	0					
ANR	1163132	Argument	proxy_file_name . c_str ( )		1162871	2					
ANR	1163133	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163134	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163135	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163136	Identifier	proxy_file_name		1162871	0					
ANR	1163137	Identifier	c_str		1162871	1					
ANR	1163138	ArgumentList			1162871	1					
ANR	1163139	Argument	strerror ( errno )		1162871	3					
ANR	1163140	CallExpression	strerror ( errno )		1162871	0					
ANR	1163141	Callee	strerror		1162871	0					
ANR	1163142	Identifier	strerror		1162871	0					
ANR	1163143	ArgumentList	errno		1162871	1					
ANR	1163144	Argument	errno		1162871	0					
ANR	1163145	Identifier	errno		1162871	0					
ANR	1163146	ReturnStatement	return 1 ;	202:16:5865:5873	1162871	1	True				
ANR	1163147	PrimaryExpression	1		1162871	0					
ANR	1163148	IfStatement	if ( x509_proxy_try_import ( proxy_file_name . c_str ( ) ) != 0 )		1162871	2					
ANR	1163149	Condition	x509_proxy_try_import ( proxy_file_name . c_str ( ) ) != 0	206:8:5926:5978	1162871	0	True				
ANR	1163150	EqualityExpression	x509_proxy_try_import ( proxy_file_name . c_str ( ) ) != 0		1162871	0		!=			
ANR	1163151	CallExpression	x509_proxy_try_import ( proxy_file_name . c_str ( ) )		1162871	0					
ANR	1163152	Callee	x509_proxy_try_import		1162871	0					
ANR	1163153	Identifier	x509_proxy_try_import		1162871	0					
ANR	1163154	ArgumentList	proxy_file_name . c_str ( )		1162871	1					
ANR	1163155	Argument	proxy_file_name . c_str ( )		1162871	0					
ANR	1163156	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163157	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163158	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163159	Identifier	proxy_file_name		1162871	0					
ANR	1163160	Identifier	c_str		1162871	1					
ANR	1163161	ArgumentList			1162871	1					
ANR	1163162	PrimaryExpression	0		1162871	1					
ANR	1163163	CompoundStatement		63:64:2052:2052	1162871	1					
ANR	1163164	ExpressionStatement	"fprintf ( stderr , ""ERROR: check credential %s: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"	207:4:5988:6098	1162871	0	True				
ANR	1163165	CallExpression	"fprintf ( stderr , ""ERROR: check credential %s: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"		1162871	0					
ANR	1163166	Callee	fprintf		1162871	0					
ANR	1163167	Identifier	fprintf		1162871	0					
ANR	1163168	ArgumentList	stderr		1162871	1					
ANR	1163169	Argument	stderr		1162871	0					
ANR	1163170	Identifier	stderr		1162871	0					
ANR	1163171	Argument	"""ERROR: check credential %s: %s\\n"""		1162871	1					
ANR	1163172	PrimaryExpression	"""ERROR: check credential %s: %s\\n"""		1162871	0					
ANR	1163173	Argument	proxy_file_name . c_str ( )		1162871	2					
ANR	1163174	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163175	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163176	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163177	Identifier	proxy_file_name		1162871	0					
ANR	1163178	Identifier	c_str		1162871	1					
ANR	1163179	ArgumentList			1162871	1					
ANR	1163180	Argument	x509_error_string ( )		1162871	3					
ANR	1163181	CallExpression	x509_error_string ( )		1162871	0					
ANR	1163182	Callee	x509_error_string		1162871	0					
ANR	1163183	Identifier	x509_error_string		1162871	0					
ANR	1163184	ArgumentList			1162871	1					
ANR	1163185	ReturnStatement	return 1 ;	210:4:6104:6112	1162871	1	True				
ANR	1163186	PrimaryExpression	1		1162871	0					
ANR	1163187	IdentifierDeclStatement	int remaining = x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) ) ;	212:3:6122:6200	1162871	3	True				
ANR	1163188	IdentifierDecl	remaining = x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) )		1162871	0					
ANR	1163189	IdentifierDeclType	int		1162871	0					
ANR	1163190	Identifier	remaining		1162871	1					
ANR	1163191	AssignmentExpression	remaining = x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) )		1162871	2		=			
ANR	1163192	Identifier	remaining		1162871	0					
ANR	1163193	CallExpression	x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) )		1162871	1					
ANR	1163194	Callee	x509_proxy_seconds_until_expire		1162871	0					
ANR	1163195	Identifier	x509_proxy_seconds_until_expire		1162871	0					
ANR	1163196	ArgumentList	proxy_file_name . c_str ( )		1162871	1					
ANR	1163197	Argument	proxy_file_name . c_str ( )		1162871	0					
ANR	1163198	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163199	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163200	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163201	Identifier	proxy_file_name		1162871	0					
ANR	1163202	Identifier	c_str		1162871	1					
ANR	1163203	ArgumentList			1162871	1					
ANR	1163204	IfStatement	if ( remaining < 0 )		1162871	4					
ANR	1163205	Condition	remaining < 0	214:7:6209:6221	1162871	0	True				
ANR	1163206	RelationalExpression	remaining < 0		1162871	0		<			
ANR	1163207	Identifier	remaining		1162871	0					
ANR	1163208	PrimaryExpression	0		1162871	1					
ANR	1163209	CompoundStatement		71:22:2294:2294	1162871	1					
ANR	1163210	ExpressionStatement	"fprintf ( stderr , ""ERROR: check credential %s expiration: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"	215:4:6230:6351	1162871	0	True				
ANR	1163211	CallExpression	"fprintf ( stderr , ""ERROR: check credential %s expiration: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"		1162871	0					
ANR	1163212	Callee	fprintf		1162871	0					
ANR	1163213	Identifier	fprintf		1162871	0					
ANR	1163214	ArgumentList	stderr		1162871	1					
ANR	1163215	Argument	stderr		1162871	0					
ANR	1163216	Identifier	stderr		1162871	0					
ANR	1163217	Argument	"""ERROR: check credential %s expiration: %s\\n"""		1162871	1					
ANR	1163218	PrimaryExpression	"""ERROR: check credential %s expiration: %s\\n"""		1162871	0					
ANR	1163219	Argument	proxy_file_name . c_str ( )		1162871	2					
ANR	1163220	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163221	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163222	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163223	Identifier	proxy_file_name		1162871	0					
ANR	1163224	Identifier	c_str		1162871	1					
ANR	1163225	ArgumentList			1162871	1					
ANR	1163226	Argument	x509_error_string ( )		1162871	3					
ANR	1163227	CallExpression	x509_error_string ( )		1162871	0					
ANR	1163228	Callee	x509_error_string		1162871	0					
ANR	1163229	Identifier	x509_error_string		1162871	0					
ANR	1163230	ArgumentList			1162871	1					
ANR	1163231	ReturnStatement	return 1 ;	218:4:6357:6365	1162871	1	True				
ANR	1163232	PrimaryExpression	1		1162871	0					
ANR	1163233	IfStatement	if ( remaining == 0 )		1162871	5					
ANR	1163234	Condition	remaining == 0	220:7:6379:6392	1162871	0	True				
ANR	1163235	EqualityExpression	remaining == 0		1162871	0		==			
ANR	1163236	Identifier	remaining		1162871	0					
ANR	1163237	PrimaryExpression	0		1162871	1					
ANR	1163238	CompoundStatement		77:23:2465:2465	1162871	1					
ANR	1163239	ExpressionStatement	"fprintf ( stderr , ""ERROR: credential %s has expired\\n"" , proxy_file_name . c_str ( ) )"	221:4:6401:6486	1162871	0	True				
ANR	1163240	CallExpression	"fprintf ( stderr , ""ERROR: credential %s has expired\\n"" , proxy_file_name . c_str ( ) )"		1162871	0					
ANR	1163241	Callee	fprintf		1162871	0					
ANR	1163242	Identifier	fprintf		1162871	0					
ANR	1163243	ArgumentList	stderr		1162871	1					
ANR	1163244	Argument	stderr		1162871	0					
ANR	1163245	Identifier	stderr		1162871	0					
ANR	1163246	Argument	"""ERROR: credential %s has expired\\n"""		1162871	1					
ANR	1163247	PrimaryExpression	"""ERROR: credential %s has expired\\n"""		1162871	0					
ANR	1163248	Argument	proxy_file_name . c_str ( )		1162871	2					
ANR	1163249	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163250	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163251	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163252	Identifier	proxy_file_name		1162871	0					
ANR	1163253	Identifier	c_str		1162871	1					
ANR	1163254	ArgumentList			1162871	1					
ANR	1163255	ReturnStatement	return 1 ;	223:4:6492:6500	1162871	1	True				
ANR	1163256	PrimaryExpression	1		1162871	0					
ANR	1163257	IdentifierDeclStatement	"FILE * fp = fopen ( proxy_file_name . c_str ( ) , ""r"" ) ;"	226:3:6511:6559	1162871	6	True				
ANR	1163258	IdentifierDecl	"* fp = fopen ( proxy_file_name . c_str ( ) , ""r"" )"		1162871	0					
ANR	1163259	IdentifierDeclType	FILE *		1162871	0					
ANR	1163260	Identifier	fp		1162871	1					
ANR	1163261	AssignmentExpression	"* fp = fopen ( proxy_file_name . c_str ( ) , ""r"" )"		1162871	2		=			
ANR	1163262	Identifier	fp		1162871	0					
ANR	1163263	CallExpression	"fopen ( proxy_file_name . c_str ( ) , ""r"" )"		1162871	1					
ANR	1163264	Callee	fopen		1162871	0					
ANR	1163265	Identifier	fopen		1162871	0					
ANR	1163266	ArgumentList	proxy_file_name . c_str ( )		1162871	1					
ANR	1163267	Argument	proxy_file_name . c_str ( )		1162871	0					
ANR	1163268	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163269	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163270	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163271	Identifier	proxy_file_name		1162871	0					
ANR	1163272	Identifier	c_str		1162871	1					
ANR	1163273	ArgumentList			1162871	1					
ANR	1163274	Argument	"""r"""		1162871	1					
ANR	1163275	PrimaryExpression	"""r"""		1162871	0					
ANR	1163276	IfStatement	if ( fp )		1162871	7					
ANR	1163277	Condition	fp	227:7:6568:6569	1162871	0	True				
ANR	1163278	Identifier	fp		1162871	0					
ANR	1163279	CompoundStatement		84:11:2642:2642	1162871	1					
ANR	1163280	ExpressionStatement	proxy = ( char * ) malloc ( ( proxy_size + 1 ) * sizeof ( char ) )	228:4:6578:6629	1162871	0	True				
ANR	1163281	AssignmentExpression	proxy = ( char * ) malloc ( ( proxy_size + 1 ) * sizeof ( char ) )		1162871	0		=			
ANR	1163282	Identifier	proxy		1162871	0					
ANR	1163283	CastExpression	( char * ) malloc ( ( proxy_size + 1 ) * sizeof ( char ) )		1162871	1					
ANR	1163284	CastTarget	char *		1162871	0					
ANR	1163285	CallExpression	malloc ( ( proxy_size + 1 ) * sizeof ( char ) )		1162871	1					
ANR	1163286	Callee	malloc		1162871	0					
ANR	1163287	Identifier	malloc		1162871	0					
ANR	1163288	ArgumentList	( proxy_size + 1 ) * sizeof ( char )		1162871	1					
ANR	1163289	Argument	( proxy_size + 1 ) * sizeof ( char )		1162871	0					
ANR	1163290	MultiplicativeExpression	( proxy_size + 1 ) * sizeof ( char )		1162871	0		*			
ANR	1163291	AdditiveExpression	proxy_size + 1		1162871	0		+			
ANR	1163292	Identifier	proxy_size		1162871	0					
ANR	1163293	PrimaryExpression	1		1162871	1					
ANR	1163294	SizeofExpression	sizeof ( char )		1162871	1					
ANR	1163295	Sizeof	sizeof		1162871	0					
ANR	1163296	SizeofOperand	char		1162871	1					
ANR	1163297	ExpressionStatement	ASSERT ( proxy )	229:4:6635:6648	1162871	1	True				
ANR	1163298	CallExpression	ASSERT ( proxy )		1162871	0					
ANR	1163299	Callee	ASSERT		1162871	0					
ANR	1163300	Identifier	ASSERT		1162871	0					
ANR	1163301	ArgumentList	proxy		1162871	1					
ANR	1163302	Argument	proxy		1162871	0					
ANR	1163303	Identifier	proxy		1162871	0					
ANR	1163304	IfStatement	"if ( fread ( proxy , proxy_size , 1 , fp ) != 1 )"		1162871	2					
ANR	1163305	Condition	"fread ( proxy , proxy_size , 1 , fp ) != 1"	230:8:6658:6694	1162871	0	True				
ANR	1163306	EqualityExpression	"fread ( proxy , proxy_size , 1 , fp ) != 1"		1162871	0		!=			
ANR	1163307	CallExpression	"fread ( proxy , proxy_size , 1 , fp )"		1162871	0					
ANR	1163308	Callee	fread		1162871	0					
ANR	1163309	Identifier	fread		1162871	0					
ANR	1163310	ArgumentList	proxy		1162871	1					
ANR	1163311	Argument	proxy		1162871	0					
ANR	1163312	Identifier	proxy		1162871	0					
ANR	1163313	Argument	proxy_size		1162871	1					
ANR	1163314	Identifier	proxy_size		1162871	0					
ANR	1163315	Argument	1		1162871	2					
ANR	1163316	PrimaryExpression	1		1162871	0					
ANR	1163317	Argument	fp		1162871	3					
ANR	1163318	Identifier	fp		1162871	0					
ANR	1163319	PrimaryExpression	1		1162871	1					
ANR	1163320	CompoundStatement		87:47:2767:2767	1162871	1					
ANR	1163321	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unable to read proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"	231:5:6704:6816	1162871	0	True				
ANR	1163322	CallExpression	"fprintf ( stderr , ""ERROR: Unable to read proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"		1162871	0					
ANR	1163323	Callee	fprintf		1162871	0					
ANR	1163324	Identifier	fprintf		1162871	0					
ANR	1163325	ArgumentList	stderr		1162871	1					
ANR	1163326	Argument	stderr		1162871	0					
ANR	1163327	Identifier	stderr		1162871	0					
ANR	1163328	Argument	"""ERROR: Unable to read proxy %s: %s\\n"""		1162871	1					
ANR	1163329	PrimaryExpression	"""ERROR: Unable to read proxy %s: %s\\n"""		1162871	0					
ANR	1163330	Argument	proxy_file_name . c_str ( )		1162871	2					
ANR	1163331	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163332	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163333	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163334	Identifier	proxy_file_name		1162871	0					
ANR	1163335	Identifier	c_str		1162871	1					
ANR	1163336	ArgumentList			1162871	1					
ANR	1163337	Argument	strerror ( errno )		1162871	3					
ANR	1163338	CallExpression	strerror ( errno )		1162871	0					
ANR	1163339	Callee	strerror		1162871	0					
ANR	1163340	Identifier	strerror		1162871	0					
ANR	1163341	ArgumentList	errno		1162871	1					
ANR	1163342	Argument	errno		1162871	0					
ANR	1163343	Identifier	errno		1162871	0					
ANR	1163344	IfStatement	if ( proxy )		1162871	1					
ANR	1163345	Condition	proxy	234:9:6827:6831	1162871	0	True				
ANR	1163346	Identifier	proxy		1162871	0					
ANR	1163347	ExpressionStatement	free ( proxy )	234:16:6834:6845	1162871	1	True				
ANR	1163348	CallExpression	free ( proxy )		1162871	0					
ANR	1163349	Callee	free		1162871	0					
ANR	1163350	Identifier	free		1162871	0					
ANR	1163351	ArgumentList	proxy		1162871	1					
ANR	1163352	Argument	proxy		1162871	0					
ANR	1163353	Identifier	proxy		1162871	0					
ANR	1163354	ReturnStatement	return 1 ;	235:5:6852:6860	1162871	2	True				
ANR	1163355	PrimaryExpression	1		1162871	0					
ANR	1163356	ExpressionStatement	fclose ( fp )	237:4:6872:6883	1162871	3	True				
ANR	1163357	CallExpression	fclose ( fp )		1162871	0					
ANR	1163358	Callee	fclose		1162871	0					
ANR	1163359	Identifier	fclose		1162871	0					
ANR	1163360	ArgumentList	fp		1162871	1					
ANR	1163361	Argument	fp		1162871	0					
ANR	1163362	Identifier	fp		1162871	0					
ANR	1163363	ElseStatement	else		1162871	0					
ANR	1163364	CompoundStatement		95:10:2965:2965	1162871	0					
ANR	1163365	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unable to open proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"	239:4:6901:7011	1162871	0	True				
ANR	1163366	CallExpression	"fprintf ( stderr , ""ERROR: Unable to open proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"		1162871	0					
ANR	1163367	Callee	fprintf		1162871	0					
ANR	1163368	Identifier	fprintf		1162871	0					
ANR	1163369	ArgumentList	stderr		1162871	1					
ANR	1163370	Argument	stderr		1162871	0					
ANR	1163371	Identifier	stderr		1162871	0					
ANR	1163372	Argument	"""ERROR: Unable to open proxy %s: %s\\n"""		1162871	1					
ANR	1163373	PrimaryExpression	"""ERROR: Unable to open proxy %s: %s\\n"""		1162871	0					
ANR	1163374	Argument	proxy_file_name . c_str ( )		1162871	2					
ANR	1163375	CallExpression	proxy_file_name . c_str ( )		1162871	0					
ANR	1163376	Callee	proxy_file_name . c_str		1162871	0					
ANR	1163377	MemberAccess	proxy_file_name . c_str		1162871	0					
ANR	1163378	Identifier	proxy_file_name		1162871	0					
ANR	1163379	Identifier	c_str		1162871	1					
ANR	1163380	ArgumentList			1162871	1					
ANR	1163381	Argument	strerror ( errno )		1162871	3					
ANR	1163382	CallExpression	strerror ( errno )		1162871	0					
ANR	1163383	Callee	strerror		1162871	0					
ANR	1163384	Identifier	strerror		1162871	0					
ANR	1163385	ArgumentList	errno		1162871	1					
ANR	1163386	Argument	errno		1162871	0					
ANR	1163387	Identifier	errno		1162871	0					
ANR	1163388	IfStatement	if ( proxy )		1162871	1					
ANR	1163389	Condition	proxy	242:8:7021:7025	1162871	0	True				
ANR	1163390	Identifier	proxy		1162871	0					
ANR	1163391	ExpressionStatement	free ( proxy )	242:15:7028:7039	1162871	1	True				
ANR	1163392	CallExpression	free ( proxy )		1162871	0					
ANR	1163393	Callee	free		1162871	0					
ANR	1163394	Identifier	free		1162871	0					
ANR	1163395	ArgumentList	proxy		1162871	1					
ANR	1163396	Argument	proxy		1162871	0					
ANR	1163397	Identifier	proxy		1162871	0					
ANR	1163398	ReturnStatement	return 1 ;	243:4:7045:7053	1162871	2	True				
ANR	1163399	PrimaryExpression	1		1162871	0					
ANR	1163400	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	249:4:7123:7152	1162871	9	True				
ANR	1163401	IdentifierDecl	unparser		1162871	0					
ANR	1163402	IdentifierDeclType	classad :: PrettyPrint		1162871	0					
ANR	1163403	Identifier	unparser		1162871	1					
ANR	1163404	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	250:1:7155:7180	1162871	10	True				
ANR	1163405	IdentifierDecl	"adbuffer = """""		1162871	0					
ANR	1163406	IdentifierDeclType	std :: string		1162871	0					
ANR	1163407	Identifier	adbuffer		1162871	1					
ANR	1163408	AssignmentExpression	"adbuffer = """""		1162871	2		=			
ANR	1163409	Identifier	adbuffer		1162871	0					
ANR	1163410	PrimaryExpression	""""""		1162871	1					
ANR	1163411	ExpressionStatement	"unparser . Unparse ( adbuffer , currentAd )"	251:4:7186:7223	1162871	11	True				
ANR	1163412	CallExpression	"unparser . Unparse ( adbuffer , currentAd )"		1162871	0					
ANR	1163413	Callee	unparser . Unparse		1162871	0					
ANR	1163414	MemberAccess	unparser . Unparse		1162871	0					
ANR	1163415	Identifier	unparser		1162871	0					
ANR	1163416	Identifier	Unparse		1162871	1					
ANR	1163417	ArgumentList	adbuffer		1162871	1					
ANR	1163418	Argument	adbuffer		1162871	0					
ANR	1163419	Identifier	adbuffer		1162871	0					
ANR	1163420	Argument	currentAd		1162871	1					
ANR	1163421	Identifier	currentAd		1162871	0					
ANR	1163422	ExpressionStatement	"fprintf ( stdout , ""================\\n"" )"	252:4:7229:7266	1162871	12	True				
ANR	1163423	CallExpression	"fprintf ( stdout , ""================\\n"" )"		1162871	0					
ANR	1163424	Callee	fprintf		1162871	0					
ANR	1163425	Identifier	fprintf		1162871	0					
ANR	1163426	ArgumentList	stdout		1162871	1					
ANR	1163427	Argument	stdout		1162871	0					
ANR	1163428	Identifier	stdout		1162871	0					
ANR	1163429	Argument	"""================\\n"""		1162871	1					
ANR	1163430	PrimaryExpression	"""================\\n"""		1162871	0					
ANR	1163431	ExpressionStatement	"fprintf ( stdout , ""Sending request:"" )"	253:4:7272:7307	1162871	13	True				
ANR	1163432	CallExpression	"fprintf ( stdout , ""Sending request:"" )"		1162871	0					
ANR	1163433	Callee	fprintf		1162871	0					
ANR	1163434	Identifier	fprintf		1162871	0					
ANR	1163435	ArgumentList	stdout		1162871	1					
ANR	1163436	Argument	stdout		1162871	0					
ANR	1163437	Identifier	stdout		1162871	0					
ANR	1163438	Argument	"""Sending request:"""		1162871	1					
ANR	1163439	PrimaryExpression	"""Sending request:"""		1162871	0					
ANR	1163440	ExpressionStatement	"fprintf ( stdout , ""%s\\n"" , adbuffer . c_str ( ) )"	254:4:7313:7354	1162871	14	True				
ANR	1163441	CallExpression	"fprintf ( stdout , ""%s\\n"" , adbuffer . c_str ( ) )"		1162871	0					
ANR	1163442	Callee	fprintf		1162871	0					
ANR	1163443	Identifier	fprintf		1162871	0					
ANR	1163444	ArgumentList	stdout		1162871	1					
ANR	1163445	Argument	stdout		1162871	0					
ANR	1163446	Identifier	stdout		1162871	0					
ANR	1163447	Argument	"""%s\\n"""		1162871	1					
ANR	1163448	PrimaryExpression	"""%s\\n"""		1162871	0					
ANR	1163449	Argument	adbuffer . c_str ( )		1162871	2					
ANR	1163450	CallExpression	adbuffer . c_str ( )		1162871	0					
ANR	1163451	Callee	adbuffer . c_str		1162871	0					
ANR	1163452	MemberAccess	adbuffer . c_str		1162871	0					
ANR	1163453	Identifier	adbuffer		1162871	0					
ANR	1163454	Identifier	c_str		1162871	1					
ANR	1163455	ArgumentList			1162871	1					
ANR	1163456	IdentifierDeclStatement	char * submit_error_reason = NULL ;	257:1:7359:7391	1162871	15	True				
ANR	1163457	IdentifierDecl	* submit_error_reason = NULL		1162871	0					
ANR	1163458	IdentifierDeclType	char *		1162871	0					
ANR	1163459	Identifier	submit_error_reason		1162871	1					
ANR	1163460	AssignmentExpression	* submit_error_reason = NULL		1162871	2		=			
ANR	1163461	Identifier	NULL		1162871	0					
ANR	1163462	Identifier	NULL		1162871	1					
ANR	1163463	IdentifierDeclStatement	char * job_id = NULL ;	258:1:7394:7414	1162871	16	True				
ANR	1163464	IdentifierDecl	* job_id = NULL		1162871	0					
ANR	1163465	IdentifierDeclType	char *		1162871	0					
ANR	1163466	Identifier	job_id		1162871	1					
ANR	1163467	AssignmentExpression	* job_id = NULL		1162871	2		=			
ANR	1163468	Identifier	NULL		1162871	0					
ANR	1163469	Identifier	NULL		1162871	1					
ANR	1163470	IdentifierDeclStatement	"int rc = stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason ) ;"	259:1:7417:7567	1162871	17	True				
ANR	1163471	IdentifierDecl	"rc = stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason )"		1162871	0					
ANR	1163472	IdentifierDeclType	int		1162871	0					
ANR	1163473	Identifier	rc		1162871	1					
ANR	1163474	AssignmentExpression	"rc = stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason )"		1162871	2		=			
ANR	1163475	Identifier	rc		1162871	0					
ANR	1163476	CallExpression	"stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason )"		1162871	1					
ANR	1163477	Callee	stork_submit		1162871	0					
ANR	1163478	Identifier	stork_submit		1162871	0					
ANR	1163479	ArgumentList	sock		1162871	1					
ANR	1163480	Argument	sock		1162871	0					
ANR	1163481	Identifier	sock		1162871	0					
ANR	1163482	Argument	currentAd		1162871	1					
ANR	1163483	Identifier	currentAd		1162871	0					
ANR	1163484	Argument	global_opts . server		1162871	2					
ANR	1163485	MemberAccess	global_opts . server		1162871	0					
ANR	1163486	Identifier	global_opts		1162871	0					
ANR	1163487	Identifier	server		1162871	1					
ANR	1163488	Argument	proxy		1162871	3					
ANR	1163489	Identifier	proxy		1162871	0					
ANR	1163490	Argument	proxy_size		1162871	4					
ANR	1163491	Identifier	proxy_size		1162871	0					
ANR	1163492	Argument	job_id		1162871	5					
ANR	1163493	Identifier	job_id		1162871	0					
ANR	1163494	Argument	submit_error_reason		1162871	6					
ANR	1163495	Identifier	submit_error_reason		1162871	0					
ANR	1163496	ExpressionStatement	"fprintf ( stdout , ""================\\n"" )"	266:4:7573:7610	1162871	18	True				
ANR	1163497	CallExpression	"fprintf ( stdout , ""================\\n"" )"		1162871	0					
ANR	1163498	Callee	fprintf		1162871	0					
ANR	1163499	Identifier	fprintf		1162871	0					
ANR	1163500	ArgumentList	stdout		1162871	1					
ANR	1163501	Argument	stdout		1162871	0					
ANR	1163502	Identifier	stdout		1162871	0					
ANR	1163503	Argument	"""================\\n"""		1162871	1					
ANR	1163504	PrimaryExpression	"""================\\n"""		1162871	0					
ANR	1163505	IfStatement	if ( rc )		1162871	19					
ANR	1163506	Condition	rc	268:5:7618:7619	1162871	0	True				
ANR	1163507	Identifier	rc		1162871	0					
ANR	1163508	CompoundStatement		125:9:3692:3692	1162871	1					
ANR	1163509	ExpressionStatement	"fprintf ( stdout , ""\\nRequest assigned id: %s\\n"" , job_id )"	269:3:7627:7682	1162871	0	True				
ANR	1163510	CallExpression	"fprintf ( stdout , ""\\nRequest assigned id: %s\\n"" , job_id )"		1162871	0					
ANR	1163511	Callee	fprintf		1162871	0					
ANR	1163512	Identifier	fprintf		1162871	0					
ANR	1163513	ArgumentList	stdout		1162871	1					
ANR	1163514	Argument	stdout		1162871	0					
ANR	1163515	Identifier	stdout		1162871	0					
ANR	1163516	Argument	"""\\nRequest assigned id: %s\\n"""		1162871	1					
ANR	1163517	PrimaryExpression	"""\\nRequest assigned id: %s\\n"""		1162871	0					
ANR	1163518	Argument	job_id		1162871	2					
ANR	1163519	Identifier	job_id		1162871	0					
ANR	1163520	ElseStatement	else		1162871	0					
ANR	1163521	CompoundStatement		127:8:3763:3763	1162871	0					
ANR	1163522	ExpressionStatement	"fprintf ( stderr , ""\\nERROR submitting request (%s)!\\n"" , submit_error_reason )"	271:2:7697:7776	1162871	0	True				
ANR	1163523	CallExpression	"fprintf ( stderr , ""\\nERROR submitting request (%s)!\\n"" , submit_error_reason )"		1162871	0					
ANR	1163524	Callee	fprintf		1162871	0					
ANR	1163525	Identifier	fprintf		1162871	0					
ANR	1163526	ArgumentList	stderr		1162871	1					
ANR	1163527	Argument	stderr		1162871	0					
ANR	1163528	Identifier	stderr		1162871	0					
ANR	1163529	Argument	"""\\nERROR submitting request (%s)!\\n"""		1162871	1					
ANR	1163530	PrimaryExpression	"""\\nERROR submitting request (%s)!\\n"""		1162871	0					
ANR	1163531	Argument	submit_error_reason		1162871	2					
ANR	1163532	Identifier	submit_error_reason		1162871	0					
ANR	1163533	IfStatement	if ( proxy )		1162871	20					
ANR	1163534	Condition	proxy	274:5:7786:7790	1162871	0	True				
ANR	1163535	Identifier	proxy		1162871	0					
ANR	1163536	ExpressionStatement	free ( proxy )	274:12:7793:7804	1162871	1	True				
ANR	1163537	CallExpression	free ( proxy )		1162871	0					
ANR	1163538	Callee	free		1162871	0					
ANR	1163539	Identifier	free		1162871	0					
ANR	1163540	ArgumentList	proxy		1162871	1					
ANR	1163541	Argument	proxy		1162871	0					
ANR	1163542	Identifier	proxy		1162871	0					
ANR	1163543	ReturnStatement	return 0 ;	276:1:7808:7816	1162871	21	True				
ANR	1163544	PrimaryExpression	0		1162871	0					
ANR	1163545	ReturnType	int		1162871	1					
ANR	1163546	Identifier	submit_ad		1162871	2					
ANR	1163547	ParameterList	"Sock * sock , classad :: ClassAd * currentAd , char * lognotes , bool spool_proxy"		1162871	3					
ANR	1163548	Parameter	Sock * sock	140:1:3849:3859	1162871	0	True				
ANR	1163549	ParameterType	Sock *		1162871	0					
ANR	1163550	Identifier	sock		1162871	1					
ANR	1163551	Parameter	classad :: ClassAd * currentAd	141:1:3863:3889	1162871	1	True				
ANR	1163552	ParameterType	classad :: ClassAd *		1162871	0					
ANR	1163553	Identifier	currentAd		1162871	1					
ANR	1163554	Parameter	char * lognotes	142:1:3893:3906	1162871	2	True				
ANR	1163555	ParameterType	char *		1162871	0					
ANR	1163556	Identifier	lognotes		1162871	1					
ANR	1163557	Parameter	bool spool_proxy	143:1:3910:3925	1162871	3	True				
ANR	1163558	ParameterType	bool		1162871	0					
ANR	1163559	Identifier	spool_proxy		1162871	1					
ANR	1163560	CFGEntryNode	ENTRY		1162871		True				
ANR	1163561	CFGExitNode	EXIT		1162871		True				
ANR	1163562	Symbol	stat_buff		1162871						
ANR	1163563	Symbol	stdout		1162871						
ANR	1163564	Symbol	global_opts . server		1162871						
ANR	1163565	Symbol	fp		1162871						
ANR	1163566	Symbol	currentAd -> InsertAttr		1162871						
ANR	1163567	Symbol	currentAd		1162871						
ANR	1163568	Symbol	stat_buff . st_size		1162871						
ANR	1163569	Symbol	currentAd -> EvaluateAttrBool		1162871						
ANR	1163570	Symbol	x509_error_string		1162871						
ANR	1163571	Symbol	x509_proxy_seconds_until_expire		1162871						
ANR	1163572	Symbol	stork_submit		1162871						
ANR	1163573	Symbol	& stat_buff		1162871						
ANR	1163574	Symbol	submit_error_reason		1162871						
ANR	1163575	Symbol	fopen		1162871						
ANR	1163576	Symbol	malloc		1162871						
ANR	1163577	Symbol	stat		1162871						
ANR	1163578	Symbol	errno		1162871						
ANR	1163579	Symbol	NULL		1162871						
ANR	1163580	Symbol	* currentAd		1162871						
ANR	1163581	Symbol	proxy_file_name		1162871						
ANR	1163582	Symbol	lognotes		1162871						
ANR	1163583	Symbol	proxy_size		1162871						
ANR	1163584	Symbol	global_opts		1162871						
ANR	1163585	Symbol	stderr		1162871						
ANR	1163586	Symbol	this_job_spool_proxy		1162871						
ANR	1163587	Symbol	proxy_file_name . c_str		1162871						
ANR	1163588	Symbol	x509_proxy_try_import		1162871						
ANR	1163589	Symbol	remaining		1162871						
ANR	1163590	Symbol	fread		1162871						
ANR	1163591	Symbol	defproxy		1162871						
ANR	1163592	Symbol	strerror		1162871						
ANR	1163593	Symbol	sock		1162871						
ANR	1163594	Symbol	proxy		1162871						
ANR	1163595	Symbol	rc		1162871						
ANR	1163596	Symbol	check_dap_format		1162871						
ANR	1163597	Symbol	job_id		1162871						
ANR	1163598	Symbol	spool_proxy		1162871						
ANR	1163599	Symbol	get_x509_proxy_filename		1162871						
ANR	1163600	Symbol	unparser		1162871						
ANR	1163601	Symbol	adbuffer . c_str		1162871						
ANR	1163602	Symbol	currentAd -> EvaluateAttrString		1162871						
ANR	1163603	Symbol	adbuffer		1162871						
ANR	1163604	Function	main	282:0:8008:11737							
ANR	1163605	FunctionDef	"main (int argc , char * * argv)"		1163604	0					
ANR	1163606	CompoundStatement		283:0:8040:11737	1163604	0					
ANR	1163607	IdentifierDeclStatement	int i ;	284:1:8043:8048	1163604	0	True				
ANR	1163608	IdentifierDecl	i		1163604	0					
ANR	1163609	IdentifierDeclType	int		1163604	0					
ANR	1163610	Identifier	i		1163604	1					
ANR	1163611	IdentifierDeclStatement	"std :: string adstr = """" ;"	285:1:8051:8071	1163604	1	True				
ANR	1163612	IdentifierDecl	"adstr = """""		1163604	0					
ANR	1163613	IdentifierDeclType	std :: string		1163604	0					
ANR	1163614	Identifier	adstr		1163604	1					
ANR	1163615	AssignmentExpression	"adstr = """""		1163604	2		=			
ANR	1163616	Identifier	adstr		1163604	0					
ANR	1163617	PrimaryExpression	""""""		1163604	1					
ANR	1163618	IdentifierDeclStatement	classad :: ClassAdParser parser ;	286:1:8074:8103	1163604	2	True				
ANR	1163619	IdentifierDecl	parser		1163604	0					
ANR	1163620	IdentifierDeclType	classad :: ClassAdParser		1163604	0					
ANR	1163621	Identifier	parser		1163604	1					
ANR	1163622	Statement	if	287:2:8107:8108	1163604	3	True				
ANR	1163623	Statement	0	287:5:8110:8110	1163604	4	True				
ANR	1163624	IdentifierDeclStatement	classad :: ClassAd * currentAd = NULL ;	288:1:8113:8147	1163604	5	True				
ANR	1163625	IdentifierDecl	* currentAd = NULL		1163604	0					
ANR	1163626	IdentifierDeclType	classad :: ClassAd *		1163604	0					
ANR	1163627	Identifier	currentAd		1163604	1					
ANR	1163628	AssignmentExpression	* currentAd = NULL		1163604	2		=			
ANR	1163629	Identifier	NULL		1163604	0					
ANR	1163630	Identifier	NULL		1163604	1					
ANR	1163631	IdentifierDeclStatement	int leftparan = 0 ;	289:1:8150:8167	1163604	6	True				
ANR	1163632	IdentifierDecl	leftparan = 0		1163604	0					
ANR	1163633	IdentifierDeclType	int		1163604	0					
ANR	1163634	Identifier	leftparan		1163604	1					
ANR	1163635	AssignmentExpression	leftparan = 0		1163604	2		=			
ANR	1163636	Identifier	leftparan		1163604	0					
ANR	1163637	PrimaryExpression	0		1163604	1					
ANR	1163638	IdentifierDeclStatement	endif std :: string fname ;	290:2:8171:8195	1163604	7	True				
ANR	1163639	IdentifierDecl	fname		1163604	0					
ANR	1163640	IdentifierDeclType	endif std :: string		1163604	0					
ANR	1163641	Identifier	fname		1163604	1					
ANR	1163642	IdentifierDeclStatement	char * lognotes = NULL ;	292:1:8198:8219	1163604	8	True				
ANR	1163643	IdentifierDecl	* lognotes = NULL		1163604	0					
ANR	1163644	IdentifierDeclType	char *		1163604	0					
ANR	1163645	Identifier	lognotes		1163604	1					
ANR	1163646	AssignmentExpression	* lognotes = NULL		1163604	2		=			
ANR	1163647	Identifier	NULL		1163604	0					
ANR	1163648	Identifier	NULL		1163604	1					
ANR	1163649	IdentifierDeclStatement	int read_from_stdin = 0 ;	293:1:8222:8245	1163604	9	True				
ANR	1163650	IdentifierDecl	read_from_stdin = 0		1163604	0					
ANR	1163651	IdentifierDeclType	int		1163604	0					
ANR	1163652	Identifier	read_from_stdin		1163604	1					
ANR	1163653	AssignmentExpression	read_from_stdin = 0		1163604	2		=			
ANR	1163654	Identifier	read_from_stdin		1163604	0					
ANR	1163655	PrimaryExpression	0		1163604	1					
ANR	1163656	ExpressionStatement	config ( )	295:1:8249:8257	1163604	10	True				
ANR	1163657	CallExpression	config ( )		1163604	0					
ANR	1163658	Callee	config		1163604	0					
ANR	1163659	Identifier	config		1163604	0					
ANR	1163660	ArgumentList			1163604	1					
ANR	1163661	IdentifierDeclStatement	"bool spool_proxy = param_boolean ( ""STORK_SPOOL_PROXY"" , true ) ;"	297:1:8281:8339	1163604	11	True				
ANR	1163662	IdentifierDecl	"spool_proxy = param_boolean ( ""STORK_SPOOL_PROXY"" , true )"		1163604	0					
ANR	1163663	IdentifierDeclType	bool		1163604	0					
ANR	1163664	Identifier	spool_proxy		1163604	1					
ANR	1163665	AssignmentExpression	"spool_proxy = param_boolean ( ""STORK_SPOOL_PROXY"" , true )"		1163604	2		=			
ANR	1163666	Identifier	spool_proxy		1163604	0					
ANR	1163667	CallExpression	"param_boolean ( ""STORK_SPOOL_PROXY"" , true )"		1163604	1					
ANR	1163668	Callee	param_boolean		1163604	0					
ANR	1163669	Identifier	param_boolean		1163604	0					
ANR	1163670	ArgumentList	"""STORK_SPOOL_PROXY"""		1163604	1					
ANR	1163671	Argument	"""STORK_SPOOL_PROXY"""		1163604	0					
ANR	1163672	PrimaryExpression	"""STORK_SPOOL_PROXY"""		1163604	0					
ANR	1163673	Argument	true		1163604	1					
ANR	1163674	Identifier	true		1163604	0					
ANR	1163675	ExpressionStatement	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"	300:1:8379:8441	1163604	12	True				
ANR	1163676	CallExpression	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"		1163604	0					
ANR	1163677	Callee	stork_parse_global_opts		1163604	0					
ANR	1163678	Identifier	stork_parse_global_opts		1163604	0					
ANR	1163679	ArgumentList	argc		1163604	1					
ANR	1163680	Argument	argc		1163604	0					
ANR	1163681	Identifier	argc		1163604	0					
ANR	1163682	Argument	argv		1163604	1					
ANR	1163683	Identifier	argv		1163604	0					
ANR	1163684	Argument	USAGE		1163604	2					
ANR	1163685	Identifier	USAGE		1163604	0					
ANR	1163686	Argument	& global_opts		1163604	3					
ANR	1163687	UnaryOperationExpression	& global_opts		1163604	0					
ANR	1163688	UnaryOperator	&		1163604	0					
ANR	1163689	Identifier	global_opts		1163604	1					
ANR	1163690	Argument	true		1163604	4					
ANR	1163691	Identifier	true		1163604	0					
ANR	1163692	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1163604	13					
ANR	1163693	ForInit	i = 1 ;	302:5:8449:8452	1163604	0	True				
ANR	1163694	AssignmentExpression	i = 1		1163604	0		=			
ANR	1163695	Identifier	i		1163604	0					
ANR	1163696	PrimaryExpression	1		1163604	1					
ANR	1163697	Condition	i < argc	302:9:8453:8458	1163604	1	True				
ANR	1163698	RelationalExpression	i < argc		1163604	0		<			
ANR	1163699	Identifier	i		1163604	0					
ANR	1163700	Identifier	argc		1163604	1					
ANR	1163701	PostIncDecOperationExpression	i ++	302:16:8460:8462	1163604	2	True				
ANR	1163702	Identifier	i		1163604	0					
ANR	1163703	IncDec	++		1163604	1					
ANR	1163704	CompoundStatement		21:2:428:447	1163604	3					
ANR	1163705	IdentifierDeclStatement	char * arg = argv [ i ] ;	303:2:8469:8488	1163604	0	True				
ANR	1163706	IdentifierDecl	* arg = argv [ i ]		1163604	0					
ANR	1163707	IdentifierDeclType	char *		1163604	0					
ANR	1163708	Identifier	arg		1163604	1					
ANR	1163709	AssignmentExpression	* arg = argv [ i ]		1163604	2		=			
ANR	1163710	Identifier	arg		1163604	0					
ANR	1163711	ArrayIndexing	argv [ i ]		1163604	1					
ANR	1163712	Identifier	argv		1163604	0					
ANR	1163713	Identifier	i		1163604	1					
ANR	1163714	IfStatement	if ( arg [ 0 ] != '-' )		1163604	1					
ANR	1163715	Condition	arg [ 0 ] != '-'	304:5:8495:8507	1163604	0	True				
ANR	1163716	EqualityExpression	arg [ 0 ] != '-'		1163604	0		!=			
ANR	1163717	ArrayIndexing	arg [ 0 ]		1163604	0					
ANR	1163718	Identifier	arg		1163604	0					
ANR	1163719	PrimaryExpression	0		1163604	1					
ANR	1163720	PrimaryExpression	'-'		1163604	1					
ANR	1163721	CompoundStatement		22:20:469:469	1163604	1					
ANR	1163722	BreakStatement	break ;	305:3:8515:8520	1163604	0	True				
ANR	1163723	ElseStatement	else		1163604	0					
ANR	1163724	IfStatement	"if ( ! strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) ) )"		1163604	0					
ANR	1163725	Condition	"! strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) )"	308:10:8612:8659	1163604	0	True				
ANR	1163726	UnaryOperationExpression	"! strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) )"		1163604	0					
ANR	1163727	UnaryOperator	!		1163604	0					
ANR	1163728	CallExpression	"strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) )"		1163604	1					
ANR	1163729	Callee	strncmp		1163604	0					
ANR	1163730	Identifier	strncmp		1163604	0					
ANR	1163731	ArgumentList	arg		1163604	1					
ANR	1163732	Argument	arg		1163604	0					
ANR	1163733	Identifier	arg		1163604	0					
ANR	1163734	Argument	OPT_LOGNOTES		1163604	1					
ANR	1163735	Identifier	OPT_LOGNOTES		1163604	0					
ANR	1163736	Argument	strlen ( OPT_LOGNOTES )		1163604	2					
ANR	1163737	CallExpression	strlen ( OPT_LOGNOTES )		1163604	0					
ANR	1163738	Callee	strlen		1163604	0					
ANR	1163739	Identifier	strlen		1163604	0					
ANR	1163740	ArgumentList	OPT_LOGNOTES		1163604	1					
ANR	1163741	Argument	OPT_LOGNOTES		1163604	0					
ANR	1163742	Identifier	OPT_LOGNOTES		1163604	0					
ANR	1163743	CompoundStatement		26:61:622:622	1163604	1					
ANR	1163744	IfStatement	if ( i + 1 >= argc )		1163604	0					
ANR	1163745	Condition	i + 1 >= argc	309:6:8671:8681	1163604	0	True				
ANR	1163746	RelationalExpression	i + 1 >= argc		1163604	0		>=			
ANR	1163747	AdditiveExpression	i + 1		1163604	0		+			
ANR	1163748	Identifier	i		1163604	0					
ANR	1163749	PrimaryExpression	1		1163604	1					
ANR	1163750	Identifier	argc		1163604	1					
ANR	1163751	ExpressionStatement	"MissingArgument ( argv [ 0 ] , arg )"	309:19:8684:8712	1163604	1	True				
ANR	1163752	CallExpression	"MissingArgument ( argv [ 0 ] , arg )"		1163604	0					
ANR	1163753	Callee	MissingArgument		1163604	0					
ANR	1163754	Identifier	MissingArgument		1163604	0					
ANR	1163755	ArgumentList	argv [ 0 ]		1163604	1					
ANR	1163756	Argument	argv [ 0 ]		1163604	0					
ANR	1163757	ArrayIndexing	argv [ 0 ]		1163604	0					
ANR	1163758	Identifier	argv		1163604	0					
ANR	1163759	PrimaryExpression	0		1163604	1					
ANR	1163760	Argument	arg		1163604	1					
ANR	1163761	Identifier	arg		1163604	0					
ANR	1163762	ExpressionStatement	lognotes = argv [ ++ i ]	310:3:8717:8737	1163604	1	True				
ANR	1163763	AssignmentExpression	lognotes = argv [ ++ i ]		1163604	0		=			
ANR	1163764	Identifier	lognotes		1163604	0					
ANR	1163765	ArrayIndexing	argv [ ++ i ]		1163604	1					
ANR	1163766	Identifier	argv		1163604	0					
ANR	1163767	UnaryExpression	++ i		1163604	1					
ANR	1163768	IncDec	++		1163604	0					
ANR	1163769	Identifier	i		1163604	1					
ANR	1163770	ElseStatement	else		1163604	0					
ANR	1163771	IfStatement	"if ( ! strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) ) )"		1163604	0					
ANR	1163772	Condition	"! strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) )"	313:10:8786:8827	1163604	0	True				
ANR	1163773	UnaryOperationExpression	"! strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) )"		1163604	0					
ANR	1163774	UnaryOperator	!		1163604	0					
ANR	1163775	CallExpression	"strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) )"		1163604	1					
ANR	1163776	Callee	strncmp		1163604	0					
ANR	1163777	Identifier	strncmp		1163604	0					
ANR	1163778	ArgumentList	arg		1163604	1					
ANR	1163779	Argument	arg		1163604	0					
ANR	1163780	Identifier	arg		1163604	0					
ANR	1163781	Argument	OPT_STDIN		1163604	1					
ANR	1163782	Identifier	OPT_STDIN		1163604	0					
ANR	1163783	Argument	strlen ( OPT_STDIN )		1163604	2					
ANR	1163784	CallExpression	strlen ( OPT_STDIN )		1163604	0					
ANR	1163785	Callee	strlen		1163604	0					
ANR	1163786	Identifier	strlen		1163604	0					
ANR	1163787	ArgumentList	OPT_STDIN		1163604	1					
ANR	1163788	Argument	OPT_STDIN		1163604	0					
ANR	1163789	Identifier	OPT_STDIN		1163604	0					
ANR	1163790	CompoundStatement		31:55:790:790	1163604	1					
ANR	1163791	ExpressionStatement	read_from_stdin = 1	314:3:8836:8855	1163604	0	True				
ANR	1163792	AssignmentExpression	read_from_stdin = 1		1163604	0		=			
ANR	1163793	Identifier	read_from_stdin		1163604	0					
ANR	1163794	PrimaryExpression	1		1163604	1					
ANR	1163795	ElseStatement	else		1163604	0					
ANR	1163796	IfStatement	"if ( ! strcmp ( arg , ""--"" ) )"		1163604	0					
ANR	1163797	Condition	"! strcmp ( arg , ""--"" )"	316:10:8871:8887	1163604	0	True				
ANR	1163798	UnaryOperationExpression	"! strcmp ( arg , ""--"" )"		1163604	0					
ANR	1163799	UnaryOperator	!		1163604	0					
ANR	1163800	CallExpression	"strcmp ( arg , ""--"" )"		1163604	1					
ANR	1163801	Callee	strcmp		1163604	0					
ANR	1163802	Identifier	strcmp		1163604	0					
ANR	1163803	ArgumentList	arg		1163604	1					
ANR	1163804	Argument	arg		1163604	0					
ANR	1163805	Identifier	arg		1163604	0					
ANR	1163806	Argument	"""--"""		1163604	1					
ANR	1163807	PrimaryExpression	"""--"""		1163604	0					
ANR	1163808	CompoundStatement		34:29:849:849	1163604	1					
ANR	1163809	ExpressionStatement	i ++	321:3:9142:9145	1163604	0	True				
ANR	1163810	PostIncDecOperationExpression	i ++		1163604	0					
ANR	1163811	Identifier	i		1163604	0					
ANR	1163812	IncDec	++		1163604	1					
ANR	1163813	BreakStatement	break ;	322:3:9150:9155	1163604	1	True				
ANR	1163814	ElseStatement	else		1163604	0					
ANR	1163815	CompoundStatement		42:7:1127:1127	1163604	0					
ANR	1163816	ExpressionStatement	"IllegalOption ( argv [ 0 ] , arg )"	325:3:9173:9199	1163604	0	True				
ANR	1163817	CallExpression	"IllegalOption ( argv [ 0 ] , arg )"		1163604	0					
ANR	1163818	Callee	IllegalOption		1163604	0					
ANR	1163819	Identifier	IllegalOption		1163604	0					
ANR	1163820	ArgumentList	argv [ 0 ]		1163604	1					
ANR	1163821	Argument	argv [ 0 ]		1163604	0					
ANR	1163822	ArrayIndexing	argv [ 0 ]		1163604	0					
ANR	1163823	Identifier	argv		1163604	0					
ANR	1163824	PrimaryExpression	0		1163604	1					
ANR	1163825	Argument	arg		1163604	1					
ANR	1163826	Identifier	arg		1163604	0					
ANR	1163827	Statement	define	307:1:8564:8569	1163604	2	True				
ANR	1163828	Statement	OPT_LOGNOTES	307:8:8571:8582	1163604	3	True				
ANR	1163829	Statement	"""-l"""	307:21:8584:8587	1163604	4	True				
ANR	1163830	Statement	define	312:1:8744:8749	1163604	5	True				
ANR	1163831	Statement	OPT_STDIN	312:8:8751:8759	1163604	6	True				
ANR	1163832	Statement	"""-s"""	312:18:8761:8764	1163604	7	True				
ANR	1163833	IdentifierDeclStatement	int num_positional_args = argc - i ;	330:1:9211:9245	1163604	14	True				
ANR	1163834	IdentifierDecl	num_positional_args = argc - i		1163604	0					
ANR	1163835	IdentifierDeclType	int		1163604	0					
ANR	1163836	Identifier	num_positional_args		1163604	1					
ANR	1163837	AssignmentExpression	num_positional_args = argc - i		1163604	2		=			
ANR	1163838	Identifier	num_positional_args		1163604	0					
ANR	1163839	AdditiveExpression	argc - i		1163604	1		-			
ANR	1163840	Identifier	argc		1163604	0					
ANR	1163841	Identifier	i		1163604	1					
ANR	1163842	SwitchStatement	switch ( num_positional_args )		1163604	15					
ANR	1163843	Condition	num_positional_args	331:9:9256:9274	1163604	0	True				
ANR	1163844	Identifier	num_positional_args		1163604	0					
ANR	1163845	CompoundStatement		49:30:1236:1236	1163604	1					
ANR	1163846	Label	case 0 :	332:2:9281:9287	1163604	0	True				
ANR	1163847	IfStatement	if ( ! read_from_stdin )		1163604	1					
ANR	1163848	Condition	! read_from_stdin	333:6:9295:9311	1163604	0	True				
ANR	1163849	UnaryOperationExpression	! read_from_stdin		1163604	0					
ANR	1163850	UnaryOperator	!		1163604	0					
ANR	1163851	Identifier	read_from_stdin		1163604	1					
ANR	1163852	CompoundStatement		51:25:1273:1273	1163604	1					
ANR	1163853	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	334:5:9321:9368	1163604	0	True				
ANR	1163854	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		1163604	0					
ANR	1163855	Callee	stork_print_usage		1163604	0					
ANR	1163856	Identifier	stork_print_usage		1163604	0					
ANR	1163857	ArgumentList	stderr		1163604	1					
ANR	1163858	Argument	stderr		1163604	0					
ANR	1163859	Identifier	stderr		1163604	0					
ANR	1163860	Argument	argv [ 0 ]		1163604	1					
ANR	1163861	ArrayIndexing	argv [ 0 ]		1163604	0					
ANR	1163862	Identifier	argv		1163604	0					
ANR	1163863	PrimaryExpression	0		1163604	1					
ANR	1163864	Argument	USAGE		1163604	2					
ANR	1163865	Identifier	USAGE		1163604	0					
ANR	1163866	Argument	true		1163604	3					
ANR	1163867	Identifier	true		1163604	0					
ANR	1163868	ExpressionStatement	exit ( 1 )	335:5:9375:9382	1163604	1	True				
ANR	1163869	CallExpression	exit ( 1 )		1163604	0					
ANR	1163870	Callee	exit		1163604	0					
ANR	1163871	Identifier	exit		1163604	0					
ANR	1163872	ArgumentList	1		1163604	1					
ANR	1163873	Argument	1		1163604	0					
ANR	1163874	PrimaryExpression	1		1163604	0					
ANR	1163875	BreakStatement	break ;	337:3:9392:9397	1163604	2	True				
ANR	1163876	Label	case 1 :	338:2:9401:9407	1163604	3	True				
ANR	1163877	IfStatement	if ( read_from_stdin )		1163604	4					
ANR	1163878	Condition	read_from_stdin	339:6:9415:9429	1163604	0	True				
ANR	1163879	Identifier	read_from_stdin		1163604	0					
ANR	1163880	CompoundStatement		57:23:1391:1391	1163604	1					
ANR	1163881	ExpressionStatement	global_opts . server = argv [ i ]	340:4:9438:9466	1163604	0	True				
ANR	1163882	AssignmentExpression	global_opts . server = argv [ i ]		1163604	0		=			
ANR	1163883	MemberAccess	global_opts . server		1163604	0					
ANR	1163884	Identifier	global_opts		1163604	0					
ANR	1163885	Identifier	server		1163604	1					
ANR	1163886	ArrayIndexing	argv [ i ]		1163604	1					
ANR	1163887	Identifier	argv		1163604	0					
ANR	1163888	Identifier	i		1163604	1					
ANR	1163889	ElseStatement	else		1163604	0					
ANR	1163890	CompoundStatement		59:10:1437:1437	1163604	0					
ANR	1163891	ExpressionStatement	fname = argv [ i ]	342:4:9484:9499	1163604	0	True				
ANR	1163892	AssignmentExpression	fname = argv [ i ]		1163604	0		=			
ANR	1163893	Identifier	fname		1163604	0					
ANR	1163894	ArrayIndexing	argv [ i ]		1163604	1					
ANR	1163895	Identifier	argv		1163604	0					
ANR	1163896	Identifier	i		1163604	1					
ANR	1163897	BreakStatement	break ;	344:4:9510:9515	1163604	5	True				
ANR	1163898	Label	case 2 :	345:3:9520:9526	1163604	6	True				
ANR	1163899	ExpressionStatement	global_opts . server = argv [ i ++ ]	346:3:9531:9561	1163604	7	True				
ANR	1163900	AssignmentExpression	global_opts . server = argv [ i ++ ]		1163604	0		=			
ANR	1163901	MemberAccess	global_opts . server		1163604	0					
ANR	1163902	Identifier	global_opts		1163604	0					
ANR	1163903	Identifier	server		1163604	1					
ANR	1163904	ArrayIndexing	argv [ i ++ ]		1163604	1					
ANR	1163905	Identifier	argv		1163604	0					
ANR	1163906	PostIncDecOperationExpression	i ++		1163604	1					
ANR	1163907	Identifier	i		1163604	0					
ANR	1163908	IncDec	++		1163604	1					
ANR	1163909	ExpressionStatement	fname = argv [ i ]	347:3:9566:9581	1163604	8	True				
ANR	1163910	AssignmentExpression	fname = argv [ i ]		1163604	0		=			
ANR	1163911	Identifier	fname		1163604	0					
ANR	1163912	ArrayIndexing	argv [ i ]		1163604	1					
ANR	1163913	Identifier	argv		1163604	0					
ANR	1163914	Identifier	i		1163604	1					
ANR	1163915	BreakStatement	break ;	348:4:9587:9592	1163604	9	True				
ANR	1163916	Label	default :	349:3:9597:9604	1163604	10	True				
ANR	1163917	Identifier	default		1163604	0					
ANR	1163918	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	350:4:9610:9657	1163604	11	True				
ANR	1163919	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		1163604	0					
ANR	1163920	Callee	stork_print_usage		1163604	0					
ANR	1163921	Identifier	stork_print_usage		1163604	0					
ANR	1163922	ArgumentList	stderr		1163604	1					
ANR	1163923	Argument	stderr		1163604	0					
ANR	1163924	Identifier	stderr		1163604	0					
ANR	1163925	Argument	argv [ 0 ]		1163604	1					
ANR	1163926	ArrayIndexing	argv [ 0 ]		1163604	0					
ANR	1163927	Identifier	argv		1163604	0					
ANR	1163928	PrimaryExpression	0		1163604	1					
ANR	1163929	Argument	USAGE		1163604	2					
ANR	1163930	Identifier	USAGE		1163604	0					
ANR	1163931	Argument	true		1163604	3					
ANR	1163932	Identifier	true		1163604	0					
ANR	1163933	ExpressionStatement	exit ( 1 )	351:4:9663:9670	1163604	12	True				
ANR	1163934	CallExpression	exit ( 1 )		1163604	0					
ANR	1163935	Callee	exit		1163604	0					
ANR	1163936	Identifier	exit		1163604	0					
ANR	1163937	ArgumentList	1		1163604	1					
ANR	1163938	Argument	1		1163604	0					
ANR	1163939	PrimaryExpression	1		1163604	0					
ANR	1163940	IdentifierDeclStatement	int submit_file_fd = - 1 ;	355:1:9701:9724	1163604	16	True				
ANR	1163941	IdentifierDecl	submit_file_fd = - 1		1163604	0					
ANR	1163942	IdentifierDeclType	int		1163604	0					
ANR	1163943	Identifier	submit_file_fd		1163604	1					
ANR	1163944	AssignmentExpression	submit_file_fd = - 1		1163604	2		=			
ANR	1163945	Identifier	submit_file_fd		1163604	0					
ANR	1163946	UnaryOperationExpression	- 1		1163604	1					
ANR	1163947	UnaryOperator	-		1163604	0					
ANR	1163948	PrimaryExpression	1		1163604	1					
ANR	1163949	IfStatement	if ( read_from_stdin )		1163604	17					
ANR	1163950	Condition	read_from_stdin	356:4:9730:9744	1163604	0	True				
ANR	1163951	Identifier	read_from_stdin		1163604	0					
ANR	1163952	CompoundStatement		74:21:1706:1706	1163604	1					
ANR	1163953	ExpressionStatement	submit_file_fd = 0	357:2:9751:9769	1163604	0	True				
ANR	1163954	AssignmentExpression	submit_file_fd = 0		1163604	0		=			
ANR	1163955	Identifier	submit_file_fd		1163604	0					
ANR	1163956	PrimaryExpression	0		1163604	1					
ANR	1163957	ExpressionStatement	"fname = ""stdin"""	358:2:9773:9788	1163604	1	True				
ANR	1163958	AssignmentExpression	"fname = ""stdin"""		1163604	0		=			
ANR	1163959	Identifier	fname		1163604	0					
ANR	1163960	PrimaryExpression	"""stdin"""		1163604	1					
ANR	1163961	ElseStatement	else		1163604	0					
ANR	1163962	CompoundStatement		78:6:1758:1758	1163604	0					
ANR	1163963	ExpressionStatement	"submit_file_fd = safe_open_wrapper ( fname . c_str ( ) , O_RDONLY , 0 )"	361:2:9803:9867	1163604	0	True				
ANR	1163964	AssignmentExpression	"submit_file_fd = safe_open_wrapper ( fname . c_str ( ) , O_RDONLY , 0 )"		1163604	0		=			
ANR	1163965	Identifier	submit_file_fd		1163604	0					
ANR	1163966	CallExpression	"safe_open_wrapper ( fname . c_str ( ) , O_RDONLY , 0 )"		1163604	1					
ANR	1163967	Callee	safe_open_wrapper		1163604	0					
ANR	1163968	Identifier	safe_open_wrapper		1163604	0					
ANR	1163969	ArgumentList	fname . c_str ( )		1163604	1					
ANR	1163970	Argument	fname . c_str ( )		1163604	0					
ANR	1163971	CallExpression	fname . c_str ( )		1163604	0					
ANR	1163972	Callee	fname . c_str		1163604	0					
ANR	1163973	MemberAccess	fname . c_str		1163604	0					
ANR	1163974	Identifier	fname		1163604	0					
ANR	1163975	Identifier	c_str		1163604	1					
ANR	1163976	ArgumentList			1163604	1					
ANR	1163977	Argument	O_RDONLY		1163604	1					
ANR	1163978	Identifier	O_RDONLY		1163604	0					
ANR	1163979	Argument	0		1163604	2					
ANR	1163980	PrimaryExpression	0		1163604	0					
ANR	1163981	IfStatement	if ( submit_file_fd < 0 )		1163604	1					
ANR	1163982	Condition	submit_file_fd < 0	362:6:9875:9892	1163604	0	True				
ANR	1163983	RelationalExpression	submit_file_fd < 0		1163604	0		<			
ANR	1163984	Identifier	submit_file_fd		1163604	0					
ANR	1163985	PrimaryExpression	0		1163604	1					
ANR	1163986	CompoundStatement		80:27:1855:1855	1163604	1					
ANR	1163987	ExpressionStatement	"fprintf ( stderr , ""Cannot open submit file %s: %s\\n"" , fname . c_str ( ) , strerror ( errno ) )"	363:3:9901:9990	1163604	0	True				
ANR	1163988	CallExpression	"fprintf ( stderr , ""Cannot open submit file %s: %s\\n"" , fname . c_str ( ) , strerror ( errno ) )"		1163604	0					
ANR	1163989	Callee	fprintf		1163604	0					
ANR	1163990	Identifier	fprintf		1163604	0					
ANR	1163991	ArgumentList	stderr		1163604	1					
ANR	1163992	Argument	stderr		1163604	0					
ANR	1163993	Identifier	stderr		1163604	0					
ANR	1163994	Argument	"""Cannot open submit file %s: %s\\n"""		1163604	1					
ANR	1163995	PrimaryExpression	"""Cannot open submit file %s: %s\\n"""		1163604	0					
ANR	1163996	Argument	fname . c_str ( )		1163604	2					
ANR	1163997	CallExpression	fname . c_str ( )		1163604	0					
ANR	1163998	Callee	fname . c_str		1163604	0					
ANR	1163999	MemberAccess	fname . c_str		1163604	0					
ANR	1164000	Identifier	fname		1163604	0					
ANR	1164001	Identifier	c_str		1163604	1					
ANR	1164002	ArgumentList			1163604	1					
ANR	1164003	Argument	strerror ( errno )		1163604	3					
ANR	1164004	CallExpression	strerror ( errno )		1163604	0					
ANR	1164005	Callee	strerror		1163604	0					
ANR	1164006	Identifier	strerror		1163604	0					
ANR	1164007	ArgumentList	errno		1163604	1					
ANR	1164008	Argument	errno		1163604	0					
ANR	1164009	Identifier	errno		1163604	0					
ANR	1164010	ExpressionStatement	exit ( 1 )	365:3:9995:10002	1163604	1	True				
ANR	1164011	CallExpression	exit ( 1 )		1163604	0					
ANR	1164012	Callee	exit		1163604	0					
ANR	1164013	Identifier	exit		1163604	0					
ANR	1164014	ArgumentList	1		1163604	1					
ANR	1164015	Argument	1		1163604	0					
ANR	1164016	PrimaryExpression	1		1163604	0					
ANR	1164017	IdentifierDeclStatement	std :: string adBuf ;	369:1:10013:10030	1163604	18	True				
ANR	1164018	IdentifierDecl	adBuf		1163604	0					
ANR	1164019	IdentifierDeclType	std :: string		1163604	0					
ANR	1164020	Identifier	adBuf		1163604	1					
ANR	1164021	IfStatement	"if ( ! readFile ( submit_file_fd , fname . c_str ( ) , & adBuf ) )"		1163604	19					
ANR	1164022	Condition	"! readFile ( submit_file_fd , fname . c_str ( ) , & adBuf )"	370:4:10036:10083	1163604	0	True				
ANR	1164023	UnaryOperationExpression	"! readFile ( submit_file_fd , fname . c_str ( ) , & adBuf )"		1163604	0					
ANR	1164024	UnaryOperator	!		1163604	0					
ANR	1164025	CallExpression	"readFile ( submit_file_fd , fname . c_str ( ) , & adBuf )"		1163604	1					
ANR	1164026	Callee	readFile		1163604	0					
ANR	1164027	Identifier	readFile		1163604	0					
ANR	1164028	ArgumentList	submit_file_fd		1163604	1					
ANR	1164029	Argument	submit_file_fd		1163604	0					
ANR	1164030	Identifier	submit_file_fd		1163604	0					
ANR	1164031	Argument	fname . c_str ( )		1163604	1					
ANR	1164032	CallExpression	fname . c_str ( )		1163604	0					
ANR	1164033	Callee	fname . c_str		1163604	0					
ANR	1164034	MemberAccess	fname . c_str		1163604	0					
ANR	1164035	Identifier	fname		1163604	0					
ANR	1164036	Identifier	c_str		1163604	1					
ANR	1164037	ArgumentList			1163604	1					
ANR	1164038	Argument	& adBuf		1163604	2					
ANR	1164039	UnaryOperationExpression	& adBuf		1163604	0					
ANR	1164040	UnaryOperator	&		1163604	0					
ANR	1164041	Identifier	adBuf		1163604	1					
ANR	1164042	CompoundStatement		88:54:2045:2045	1163604	1					
ANR	1164043	ReturnStatement	return 1 ;	371:2:10090:10098	1163604	0	True				
ANR	1164044	PrimaryExpression	1		1163604	0					
ANR	1164045	IfStatement	if ( ! read_from_stdin )		1163604	20					
ANR	1164046	Condition	! read_from_stdin	374:4:10108:10123	1163604	0	True				
ANR	1164047	UnaryOperationExpression	! read_from_stdin		1163604	0					
ANR	1164048	UnaryOperator	!		1163604	0					
ANR	1164049	Identifier	read_from_stdin		1163604	1					
ANR	1164050	CompoundStatement		92:22:2085:2085	1163604	1					
ANR	1164051	ExpressionStatement	close ( submit_file_fd )	375:2:10130:10153	1163604	0	True				
ANR	1164052	CallExpression	close ( submit_file_fd )		1163604	0					
ANR	1164053	Callee	close		1163604	0					
ANR	1164054	Identifier	close		1163604	0					
ANR	1164055	ArgumentList	submit_file_fd		1163604	1					
ANR	1164056	Argument	submit_file_fd		1163604	0					
ANR	1164057	Identifier	submit_file_fd		1163604	0					
ANR	1164058	IdentifierDeclStatement	MyString sock_error_reason ;	379:1:10176:10202	1163604	21	True				
ANR	1164059	IdentifierDecl	sock_error_reason		1163604	0					
ANR	1164060	IdentifierDeclType	MyString		1163604	0					
ANR	1164061	Identifier	sock_error_reason		1163604	1					
ANR	1164062	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason ) ;"	381:1:10206:10317	1163604	22	True				
ANR	1164063	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason )"		1163604	0					
ANR	1164064	IdentifierDeclType	Sock *		1163604	0					
ANR	1164065	Identifier	sock		1163604	1					
ANR	1164066	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason )"		1163604	2		=			
ANR	1164067	Identifier	sock		1163604	0					
ANR	1164068	CallExpression	"start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason )"		1163604	1					
ANR	1164069	Callee	start_stork_command_and_authenticate		1163604	0					
ANR	1164070	Identifier	start_stork_command_and_authenticate		1163604	0					
ANR	1164071	ArgumentList	global_opts . server		1163604	1					
ANR	1164072	Argument	global_opts . server		1163604	0					
ANR	1164073	MemberAccess	global_opts . server		1163604	0					
ANR	1164074	Identifier	global_opts		1163604	0					
ANR	1164075	Identifier	server		1163604	1					
ANR	1164076	Argument	STORK_SUBMIT		1163604	1					
ANR	1164077	Identifier	STORK_SUBMIT		1163604	0					
ANR	1164078	Argument	sock_error_reason		1163604	2					
ANR	1164079	Identifier	sock_error_reason		1163604	0					
ANR	1164080	IdentifierDeclStatement	"const char * host = global_opts . server ? global_opts . server : ""unknown"" ;"	386:1:10321:10391	1163604	23	True				
ANR	1164081	IdentifierDecl	"* host = global_opts . server ? global_opts . server : ""unknown"""		1163604	0					
ANR	1164082	IdentifierDeclType	const char *		1163604	0					
ANR	1164083	Identifier	host		1163604	1					
ANR	1164084	AssignmentExpression	"* host = global_opts . server ? global_opts . server : ""unknown"""		1163604	2		=			
ANR	1164085	Identifier	host		1163604	0					
ANR	1164086	ConditionalExpression	"global_opts . server ? global_opts . server : ""unknown"""		1163604	1					
ANR	1164087	Condition	global_opts . server		1163604	0					
ANR	1164088	MemberAccess	global_opts . server		1163604	0					
ANR	1164089	Identifier	global_opts		1163604	0					
ANR	1164090	Identifier	server		1163604	1					
ANR	1164091	MemberAccess	global_opts . server		1163604	1					
ANR	1164092	Identifier	global_opts		1163604	0					
ANR	1164093	Identifier	server		1163604	1					
ANR	1164094	PrimaryExpression	"""unknown"""		1163604	2					
ANR	1164095	IfStatement	if ( ! sock )		1163604	24					
ANR	1164096	Condition	! sock	387:5:10398:10402	1163604	0	True				
ANR	1164097	UnaryOperationExpression	! sock		1163604	0					
ANR	1164098	UnaryOperator	!		1163604	0					
ANR	1164099	Identifier	sock		1163604	1					
ANR	1164100	CompoundStatement		105:12:2364:2364	1163604	1					
ANR	1164101	ExpressionStatement	"fprintf ( stderr , ""ERROR: connect to server %s: %s\\n"" , host , sock_error_reason . Value ( ) )"	388:2:10409:10499	1163604	0	True				
ANR	1164102	CallExpression	"fprintf ( stderr , ""ERROR: connect to server %s: %s\\n"" , host , sock_error_reason . Value ( ) )"		1163604	0					
ANR	1164103	Callee	fprintf		1163604	0					
ANR	1164104	Identifier	fprintf		1163604	0					
ANR	1164105	ArgumentList	stderr		1163604	1					
ANR	1164106	Argument	stderr		1163604	0					
ANR	1164107	Identifier	stderr		1163604	0					
ANR	1164108	Argument	"""ERROR: connect to server %s: %s\\n"""		1163604	1					
ANR	1164109	PrimaryExpression	"""ERROR: connect to server %s: %s\\n"""		1163604	0					
ANR	1164110	Argument	host		1163604	2					
ANR	1164111	Identifier	host		1163604	0					
ANR	1164112	Argument	sock_error_reason . Value ( )		1163604	3					
ANR	1164113	CallExpression	sock_error_reason . Value ( )		1163604	0					
ANR	1164114	Callee	sock_error_reason . Value		1163604	0					
ANR	1164115	MemberAccess	sock_error_reason . Value		1163604	0					
ANR	1164116	Identifier	sock_error_reason		1163604	0					
ANR	1164117	Identifier	Value		1163604	1					
ANR	1164118	ArgumentList			1163604	1					
ANR	1164119	ReturnStatement	return 1 ;	390:2:10503:10511	1163604	1	True				
ANR	1164120	PrimaryExpression	1		1163604	0					
ANR	1164121	IdentifierDeclStatement	int offset = 0 ;	394:1:10562:10576	1163604	25	True				
ANR	1164122	IdentifierDecl	offset = 0		1163604	0					
ANR	1164123	IdentifierDeclType	int		1163604	0					
ANR	1164124	Identifier	offset		1163604	1					
ANR	1164125	AssignmentExpression	offset = 0		1163604	2		=			
ANR	1164126	Identifier	offset		1163604	0					
ANR	1164127	PrimaryExpression	0		1163604	1					
ANR	1164128	IdentifierDeclStatement	int last_offset = 0 ;	395:1:10579:10598	1163604	26	True				
ANR	1164129	IdentifierDecl	last_offset = 0		1163604	0					
ANR	1164130	IdentifierDeclType	int		1163604	0					
ANR	1164131	Identifier	last_offset		1163604	1					
ANR	1164132	AssignmentExpression	last_offset = 0		1163604	2		=			
ANR	1164133	Identifier	last_offset		1163604	0					
ANR	1164134	PrimaryExpression	0		1163604	1					
ANR	1164135	IdentifierDeclStatement	classad :: ClassAd ad ;	396:1:10653:10672	1163604	27	True				
ANR	1164136	IdentifierDecl	ad		1163604	0					
ANR	1164137	IdentifierDeclType	classad :: ClassAd		1163604	0					
ANR	1164138	Identifier	ad		1163604	1					
ANR	1164139	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	398:1:10676:10705	1163604	28	True				
ANR	1164140	CallExpression	"skip_whitespace ( adBuf , offset )"		1163604	0					
ANR	1164141	Callee	skip_whitespace		1163604	0					
ANR	1164142	Identifier	skip_whitespace		1163604	0					
ANR	1164143	ArgumentList	adBuf		1163604	1					
ANR	1164144	Argument	adBuf		1163604	0					
ANR	1164145	Identifier	adBuf		1163604	0					
ANR	1164146	Argument	offset		1163604	1					
ANR	1164147	Identifier	offset		1163604	0					
ANR	1164148	IdentifierDeclStatement	bool submit_failed = false ;	399:1:10708:10734	1163604	29	True				
ANR	1164149	IdentifierDecl	submit_failed = false		1163604	0					
ANR	1164150	IdentifierDeclType	bool		1163604	0					
ANR	1164151	Identifier	submit_failed		1163604	1					
ANR	1164152	AssignmentExpression	submit_failed = false		1163604	2		=			
ANR	1164153	Identifier	false		1163604	0					
ANR	1164154	Identifier	false		1163604	1					
ANR	1164155	WhileStatement	"while ( parser . ParseClassAd ( adBuf , ad , offset ) )"		1163604	30					
ANR	1164156	Condition	"parser . ParseClassAd ( adBuf , ad , offset )"	400:8:10744:10781	1163604	0	True				
ANR	1164157	CallExpression	"parser . ParseClassAd ( adBuf , ad , offset )"		1163604	0					
ANR	1164158	Callee	parser . ParseClassAd		1163604	0					
ANR	1164159	MemberAccess	parser . ParseClassAd		1163604	0					
ANR	1164160	Identifier	parser		1163604	0					
ANR	1164161	Identifier	ParseClassAd		1163604	1					
ANR	1164162	ArgumentList	adBuf		1163604	1					
ANR	1164163	Argument	adBuf		1163604	0					
ANR	1164164	Identifier	adBuf		1163604	0					
ANR	1164165	Argument	ad		1163604	1					
ANR	1164166	Identifier	ad		1163604	0					
ANR	1164167	Argument	offset		1163604	2					
ANR	1164168	Identifier	offset		1163604	0					
ANR	1164169	CompoundStatement		118:49:2744:2744	1163604	1					
ANR	1164170	ExpressionStatement	last_offset = offset	401:2:10789:10809	1163604	0	True				
ANR	1164171	AssignmentExpression	last_offset = offset		1163604	0		=			
ANR	1164172	Identifier	last_offset		1163604	0					
ANR	1164173	Identifier	offset		1163604	1					
ANR	1164174	IfStatement	"if ( submit_ad ( sock , & ad , lognotes , spool_proxy ) != 0 )"		1163604	1					
ANR	1164175	Condition	"submit_ad ( sock , & ad , lognotes , spool_proxy ) != 0"	408:12:11042:11089	1163604	0	True				
ANR	1164176	EqualityExpression	"submit_ad ( sock , & ad , lognotes , spool_proxy ) != 0"		1163604	0		!=			
ANR	1164177	CallExpression	"submit_ad ( sock , & ad , lognotes , spool_proxy )"		1163604	0					
ANR	1164178	Callee	submit_ad		1163604	0					
ANR	1164179	Identifier	submit_ad		1163604	0					
ANR	1164180	ArgumentList	sock		1163604	1					
ANR	1164181	Argument	sock		1163604	0					
ANR	1164182	Identifier	sock		1163604	0					
ANR	1164183	Argument	& ad		1163604	1					
ANR	1164184	UnaryOperationExpression	& ad		1163604	0					
ANR	1164185	UnaryOperator	&		1163604	0					
ANR	1164186	Identifier	ad		1163604	1					
ANR	1164187	Argument	lognotes		1163604	2					
ANR	1164188	Identifier	lognotes		1163604	0					
ANR	1164189	Argument	spool_proxy		1163604	3					
ANR	1164190	Identifier	spool_proxy		1163604	0					
ANR	1164191	PrimaryExpression	0		1163604	1					
ANR	1164192	CompoundStatement		126:62:3051:3051	1163604	1					
ANR	1164193	ExpressionStatement	submit_failed = true	409:3:11097:11117	1163604	0	True				
ANR	1164194	AssignmentExpression	submit_failed = true		1163604	0		=			
ANR	1164195	Identifier	submit_failed		1163604	0					
ANR	1164196	Identifier	true		1163604	1					
ANR	1164197	BreakStatement	break ;	410:3:11122:11127	1163604	1	True				
ANR	1164198	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	412:2:11135:11164	1163604	2	True				
ANR	1164199	CallExpression	"skip_whitespace ( adBuf , offset )"		1163604	0					
ANR	1164200	Callee	skip_whitespace		1163604	0					
ANR	1164201	Identifier	skip_whitespace		1163604	0					
ANR	1164202	ArgumentList	adBuf		1163604	1					
ANR	1164203	Argument	adBuf		1163604	0					
ANR	1164204	Identifier	adBuf		1163604	0					
ANR	1164205	Argument	offset		1163604	1					
ANR	1164206	Identifier	offset		1163604	0					
ANR	1164207	ExpressionStatement	last_offset = offset	413:2:11168:11188	1163604	3	True				
ANR	1164208	AssignmentExpression	last_offset = offset		1163604	0		=			
ANR	1164209	Identifier	last_offset		1163604	0					
ANR	1164210	Identifier	offset		1163604	1					
ANR	1164211	ExpressionStatement	offset = last_offset	416:1:11198:11218	1163604	31	True				
ANR	1164212	AssignmentExpression	offset = last_offset		1163604	0		=			
ANR	1164213	Identifier	offset		1163604	0					
ANR	1164214	Identifier	last_offset		1163604	1					
ANR	1164215	IfStatement	if ( ! submit_failed )		1163604	32					
ANR	1164216	Condition	! submit_failed	418:4:11225:11238	1163604	0	True				
ANR	1164217	UnaryOperationExpression	! submit_failed		1163604	0					
ANR	1164218	UnaryOperator	!		1163604	0					
ANR	1164219	Identifier	submit_failed		1163604	1					
ANR	1164220	CompoundStatement		136:20:3200:3200	1163604	1					
ANR	1164221	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	419:2:11245:11274	1163604	0	True				
ANR	1164222	CallExpression	"skip_whitespace ( adBuf , offset )"		1163604	0					
ANR	1164223	Callee	skip_whitespace		1163604	0					
ANR	1164224	Identifier	skip_whitespace		1163604	0					
ANR	1164225	ArgumentList	adBuf		1163604	1					
ANR	1164226	Argument	adBuf		1163604	0					
ANR	1164227	Identifier	adBuf		1163604	0					
ANR	1164228	Argument	offset		1163604	1					
ANR	1164229	Identifier	offset		1163604	0					
ANR	1164230	IfStatement	if ( ( int ) adBuf . size ( ) > offset )		1163604	1					
ANR	1164231	Condition	( int ) adBuf . size ( ) > offset	420:6:11282:11307	1163604	0	True				
ANR	1164232	RelationalExpression	( int ) adBuf . size ( ) > offset		1163604	0		>			
ANR	1164233	CastExpression	( int ) adBuf . size ( )		1163604	0					
ANR	1164234	CastTarget	int		1163604	0					
ANR	1164235	CallExpression	adBuf . size ( )		1163604	1					
ANR	1164236	Callee	adBuf . size		1163604	0					
ANR	1164237	MemberAccess	adBuf . size		1163604	0					
ANR	1164238	Identifier	adBuf		1163604	0					
ANR	1164239	Identifier	size		1163604	1					
ANR	1164240	ArgumentList			1163604	1					
ANR	1164241	Identifier	offset		1163604	1					
ANR	1164242	CompoundStatement		138:35:3270:3270	1163604	1					
ANR	1164243	Statement	fprintf	421:3:11316:11322	1163604	0	True				
ANR	1164244	Statement	(	421:10:11323:11323	1163604	1	True				
ANR	1164245	Statement	stderr	421:11:11324:11329	1163604	2	True				
ANR	1164246	Statement	","	421:17:11330:11330	1163604	3	True				
ANR	1164247	Statement	"""stork_submit: failed to read a ClassAd in the"""	421:19:11332:11378	1163604	4	True				
ANR	1164248	Statement	""" submit file (%s) beginning with the following text:"""	422:5:11385:11438	1163604	5	True				
ANR	1164249	Statement	""" %.200s\\n"""	423:5:11445:11455	1163604	6	True				
ANR	1164250	Statement	","	423:16:11456:11456	1163604	7	True				
ANR	1164251	Statement	fname	423:17:11457:11461	1163604	8	True				
ANR	1164252	Statement	.	423:22:11462:11462	1163604	9	True				
ANR	1164253	Statement	c_str	423:23:11463:11467	1163604	10	True				
ANR	1164254	Statement	(	423:28:11468:11468	1163604	11	True				
ANR	1164255	Statement	)	423:29:11469:11469	1163604	12	True				
ANR	1164256	Statement	","	423:30:11470:11470	1163604	13	True				
ANR	1164257	Statement	adBuf	423:31:11471:11475	1163604	14	True				
ANR	1164258	Statement	.	423:36:11476:11476	1163604	15	True				
ANR	1164259	Statement	c_str	423:37:11477:11481	1163604	16	True				
ANR	1164260	Statement	(	423:42:11482:11482	1163604	17	True				
ANR	1164261	Statement	)	423:43:11483:11483	1163604	18	True				
ANR	1164262	Statement	+	423:44:11484:11484	1163604	19	True				
ANR	1164263	Statement	offset	423:45:11485:11490	1163604	20	True				
ANR	1164264	Statement	)	423:51:11491:11491	1163604	21	True				
ANR	1164265	ExpressionStatement		423:52:11492:11492	1163604	22	True				
ANR	1164266	ExpressionStatement	submit_failed = true	424:3:11497:11517	1163604	23	True				
ANR	1164267	AssignmentExpression	submit_failed = true		1163604	0		=			
ANR	1164268	Identifier	submit_failed		1163604	0					
ANR	1164269	Identifier	true		1163604	1					
ANR	1164270	IfStatement	if ( submit_failed )		1163604	33					
ANR	1164271	Condition	submit_failed	428:4:11531:11543	1163604	0	True				
ANR	1164272	Identifier	submit_failed		1163604	0					
ANR	1164273	CompoundStatement		146:19:3505:3505	1163604	1					
ANR	1164274	ReturnStatement	return 1 ;	429:2:11550:11558	1163604	0	True				
ANR	1164275	PrimaryExpression	1		1163604	0					
ANR	1164276	ExpressionStatement	sock -> encode ( )	433:1:11610:11624	1163604	34	True				
ANR	1164277	CallExpression	sock -> encode ( )		1163604	0					
ANR	1164278	Callee	sock -> encode		1163604	0					
ANR	1164279	PtrMemberAccess	sock -> encode		1163604	0					
ANR	1164280	Identifier	sock		1163604	0					
ANR	1164281	Identifier	encode		1163604	1					
ANR	1164282	ArgumentList			1163604	1					
ANR	1164283	IdentifierDeclStatement	"char * goodbye = """" ;"	434:1:11627:11645	1163604	35	True				
ANR	1164284	IdentifierDecl	"* goodbye = """""		1163604	0					
ANR	1164285	IdentifierDeclType	char *		1163604	0					
ANR	1164286	Identifier	goodbye		1163604	1					
ANR	1164287	AssignmentExpression	"* goodbye = """""		1163604	2		=			
ANR	1164288	Identifier	goodbye		1163604	0					
ANR	1164289	PrimaryExpression	""""""		1163604	1					
ANR	1164290	ExpressionStatement	sock -> code ( goodbye )	435:1:11648:11667	1163604	36	True				
ANR	1164291	CallExpression	sock -> code ( goodbye )		1163604	0					
ANR	1164292	Callee	sock -> code		1163604	0					
ANR	1164293	PtrMemberAccess	sock -> code		1163604	0					
ANR	1164294	Identifier	sock		1163604	0					
ANR	1164295	Identifier	code		1163604	1					
ANR	1164296	ArgumentList	goodbye		1163604	1					
ANR	1164297	Argument	goodbye		1163604	0					
ANR	1164298	Identifier	goodbye		1163604	0					
ANR	1164299	ExpressionStatement	sock -> end_of_message ( )	436:1:11670:11692	1163604	37	True				
ANR	1164300	CallExpression	sock -> end_of_message ( )		1163604	0					
ANR	1164301	Callee	sock -> end_of_message		1163604	0					
ANR	1164302	PtrMemberAccess	sock -> end_of_message		1163604	0					
ANR	1164303	Identifier	sock		1163604	0					
ANR	1164304	Identifier	end_of_message		1163604	1					
ANR	1164305	ArgumentList			1163604	1					
ANR	1164306	ExpressionStatement	sock -> close ( )	438:1:11696:11709	1163604	38	True				
ANR	1164307	CallExpression	sock -> close ( )		1163604	0					
ANR	1164308	Callee	sock -> close		1163604	0					
ANR	1164309	PtrMemberAccess	sock -> close		1163604	0					
ANR	1164310	Identifier	sock		1163604	0					
ANR	1164311	Identifier	close		1163604	1					
ANR	1164312	ArgumentList			1163604	1					
ANR	1164313	Statement	delete	439:1:11712:11717	1163604	39	True				
ANR	1164314	ExpressionStatement	sock	439:8:11719:11723	1163604	40	True				
ANR	1164315	Identifier	sock		1163604	0					
ANR	1164316	ReturnStatement	return 0 ;	441:1:11727:11735	1163604	41	True				
ANR	1164317	PrimaryExpression	0		1163604	0					
ANR	1164318	ReturnType	int		1163604	1					
ANR	1164319	Identifier	main		1163604	2					
ANR	1164320	ParameterList	"int argc , char * * argv"		1163604	3					
ANR	1164321	Parameter	int argc	282:9:8017:8024	1163604	0	True				
ANR	1164322	ParameterType	int		1163604	0					
ANR	1164323	Identifier	argc		1163604	1					
ANR	1164324	Parameter	char * * argv	282:19:8027:8037	1163604	1	True				
ANR	1164325	ParameterType	char * *		1163604	0					
ANR	1164326	Identifier	argv		1163604	1					
ANR	1164327	CFGEntryNode	ENTRY		1163604		True				
ANR	1164328	CFGExitNode	EXIT		1163604		True				
ANR	1164329	Symbol	STORK_SUBMIT		1163604						
ANR	1164330	Symbol	fname . c_str		1163604						
ANR	1164331	Symbol	global_opts . server		1163604						
ANR	1164332	Symbol	* argv		1163604						
ANR	1164333	Symbol	sock_error_reason . Value		1163604						
ANR	1164334	Symbol	strncmp		1163604						
ANR	1164335	Symbol	strlen		1163604						
ANR	1164336	Symbol	host		1163604						
ANR	1164337	Symbol	submit_file_fd		1163604						
ANR	1164338	Symbol	& adBuf		1163604						
ANR	1164339	Symbol	strcmp		1163604						
ANR	1164340	Symbol	fname		1163604						
ANR	1164341	Symbol	errno		1163604						
ANR	1164342	Symbol	NULL		1163604						
ANR	1164343	Symbol	ad		1163604						
ANR	1164344	Symbol	offset		1163604						
ANR	1164345	Symbol	lognotes		1163604						
ANR	1164346	Symbol	adstr		1163604						
ANR	1164347	Symbol	param_boolean		1163604						
ANR	1164348	Symbol	stderr		1163604						
ANR	1164349	Symbol	parser . ParseClassAd		1163604						
ANR	1164350	Symbol	safe_open_wrapper		1163604						
ANR	1164351	Symbol	strerror		1163604						
ANR	1164352	Symbol	parser		1163604						
ANR	1164353	Symbol	true		1163604						
ANR	1164354	Symbol	num_positional_args		1163604						
ANR	1164355	Symbol	submit_failed		1163604						
ANR	1164356	Symbol	& global_opts		1163604						
ANR	1164357	Symbol	* arg		1163604						
ANR	1164358	Symbol	goodbye		1163604						
ANR	1164359	Symbol	& ad		1163604						
ANR	1164360	Symbol	argv		1163604						
ANR	1164361	Symbol	currentAd		1163604						
ANR	1164362	Symbol	adBuf . size		1163604						
ANR	1164363	Symbol	USAGE		1163604						
ANR	1164364	Symbol	adBuf		1163604						
ANR	1164365	Symbol	read_from_stdin		1163604						
ANR	1164366	Symbol	arg		1163604						
ANR	1164367	Symbol	leftparan		1163604						
ANR	1164368	Symbol	start_stork_command_and_authenticate		1163604						
ANR	1164369	Symbol	argc		1163604						
ANR	1164370	Symbol	OPT_STDIN		1163604						
ANR	1164371	Symbol	last_offset		1163604						
ANR	1164372	Symbol	submit_ad		1163604						
ANR	1164373	Symbol	false		1163604						
ANR	1164374	Symbol	i		1163604						
ANR	1164375	Symbol	global_opts		1163604						
ANR	1164376	Symbol	OPT_LOGNOTES		1163604						
ANR	1164377	Symbol	sock		1163604						
ANR	1164378	Symbol	sock_error_reason		1163604						
ANR	1164379	Symbol	* i		1163604						
ANR	1164380	Symbol	O_RDONLY		1163604						
ANR	1164381	Symbol	readFile		1163604						
ANR	1164382	Symbol	spool_proxy		1163604						
