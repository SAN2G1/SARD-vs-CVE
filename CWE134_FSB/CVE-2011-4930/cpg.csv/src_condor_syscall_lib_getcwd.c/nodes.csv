command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4146804	File	data/converged/CVE-2011-4930_htcondor/src_condor_syscall_lib_getcwd.c								
ANR	4146805	DeclStmt									
ANR	4146806	Decl							char	"char * ( char * , size_t )"	getcwd
ANR	4146807	DeclStmt									
ANR	4146808	Decl							char	"char * ( char * , size_t )"	_getcwd
ANR	4146809	DeclStmt									
ANR	4146810	Decl							char	"char * ( char * , size_t )"	__getcwd
ANR	4146811	DeclStmt									
ANR	4146812	Decl							char	"char * ( char * , size_t )"	GETCWD
ANR	4146813	DeclStmt									
ANR	4146814	Decl							char	"char * ( char * , size_t )"	_GETCWD
ANR	4146815	DeclStmt									
ANR	4146816	Decl							char	"char * ( char * , size_t )"	__GETCWD
ANR	4146817	DeclStmt									
ANR	4146818	Decl							char	char * ( char * )	getwd
ANR	4146819	DeclStmt									
ANR	4146820	Decl							char	char * ( char * )	_getwd
ANR	4146821	DeclStmt									
ANR	4146822	Decl							char	char * ( char * )	__getwd
ANR	4146823	DeclStmt									
ANR	4146824	Decl							extern int	extern int ( char * * path_name )	REMOTE_CONDOR_getwd_special
ANR	4146825	Function	getwd	43:0:1415:1960							
ANR	4146826	FunctionDef	getwd (char * path)		4146825	0					
ANR	4146827	CompoundStatement		45:0:1442:1960	4146825	0					
ANR	4146828	IfStatement	if ( LocalSysCalls ( ) )		4146825	0					
ANR	4146829	Condition	LocalSysCalls ( )	46:5:1449:1463	4146825	0	True				
ANR	4146830	CallExpression	LocalSysCalls ( )		4146825	0					
ANR	4146831	Callee	LocalSysCalls		4146825	0					
ANR	4146832	Identifier	LocalSysCalls		4146825	0					
ANR	4146833	ArgumentList			4146825	1					
ANR	4146834	CompoundStatement		2:23:24:24	4146825	1					
ANR	4146835	ReturnStatement	"return GETCWD ( path , _POSIX_PATH_MAX ) ;"	47:2:1471:1509	4146825	0	True				
ANR	4146836	CallExpression	"GETCWD ( path , _POSIX_PATH_MAX )"		4146825	0					
ANR	4146837	Callee	GETCWD		4146825	0					
ANR	4146838	Identifier	GETCWD		4146825	0					
ANR	4146839	ArgumentList	path		4146825	1					
ANR	4146840	Argument	path		4146825	0					
ANR	4146841	Identifier	path		4146825	0					
ANR	4146842	Argument	_POSIX_PATH_MAX		4146825	1					
ANR	4146843	Identifier	_POSIX_PATH_MAX		4146825	0					
ANR	4146844	ElseStatement	else		4146825	0					
ANR	4146845	CompoundStatement		5:2:80:94	4146825	0					
ANR	4146846	IdentifierDeclStatement	char * p = NULL ;	49:2:1523:1537	4146825	0	True				
ANR	4146847	IdentifierDecl	* p = NULL		4146825	0					
ANR	4146848	IdentifierDeclType	char *		4146825	0					
ANR	4146849	Identifier	p		4146825	1					
ANR	4146850	AssignmentExpression	* p = NULL		4146825	2		=			
ANR	4146851	Identifier	NULL		4146825	0					
ANR	4146852	Identifier	NULL		4146825	1					
ANR	4146853	ExpressionStatement	REMOTE_CONDOR_getwd_special ( & p )	50:2:1541:1574	4146825	1	True				
ANR	4146854	CallExpression	REMOTE_CONDOR_getwd_special ( & p )		4146825	0					
ANR	4146855	Callee	REMOTE_CONDOR_getwd_special		4146825	0					
ANR	4146856	Identifier	REMOTE_CONDOR_getwd_special		4146825	0					
ANR	4146857	ArgumentList	& p		4146825	1					
ANR	4146858	Argument	& p		4146825	0					
ANR	4146859	UnaryOperationExpression	& p		4146825	0					
ANR	4146860	UnaryOperator	&		4146825	0					
ANR	4146861	Identifier	p		4146825	1					
ANR	4146862	ExpressionStatement	"strcpy ( path , p )"	58:2:1910:1927	4146825	2	True				
ANR	4146863	CallExpression	"strcpy ( path , p )"		4146825	0					
ANR	4146864	Callee	strcpy		4146825	0					
ANR	4146865	Identifier	strcpy		4146825	0					
ANR	4146866	ArgumentList	path		4146825	1					
ANR	4146867	Argument	path		4146825	0					
ANR	4146868	Identifier	path		4146825	0					
ANR	4146869	Argument	p		4146825	1					
ANR	4146870	Identifier	p		4146825	0					
ANR	4146871	ExpressionStatement	free ( p )	59:2:1931:1940	4146825	3	True				
ANR	4146872	CallExpression	free ( p )		4146825	0					
ANR	4146873	Callee	free		4146825	0					
ANR	4146874	Identifier	free		4146825	0					
ANR	4146875	ArgumentList	p		4146825	1					
ANR	4146876	Argument	p		4146825	0					
ANR	4146877	Identifier	p		4146825	0					
ANR	4146878	ReturnStatement	return path ;	60:2:1944:1955	4146825	4	True				
ANR	4146879	Identifier	path		4146825	0					
ANR	4146880	ReturnType	char *		4146825	1					
ANR	4146881	Identifier	getwd		4146825	2					
ANR	4146882	ParameterList	char * path		4146825	3					
ANR	4146883	Parameter	char * path	44:7:1429:1438	4146825	0	True				
ANR	4146884	ParameterType	char *		4146825	0					
ANR	4146885	Identifier	path		4146825	1					
ANR	4146886	CFGEntryNode	ENTRY		4146825		True				
ANR	4146887	CFGExitNode	EXIT		4146825		True				
ANR	4146888	Symbol	p		4146825						
ANR	4146889	Symbol	path		4146825						
ANR	4146890	Symbol	GETCWD		4146825						
ANR	4146891	Symbol	NULL		4146825						
ANR	4146892	Symbol	& p		4146825						
ANR	4146893	Symbol	LocalSysCalls		4146825						
ANR	4146894	Symbol	_POSIX_PATH_MAX		4146825						
ANR	4146895	Function	getcwd	64:0:1963:2694							
ANR	4146896	FunctionDef	"getcwd (char * path , size_t size)"		4146895	0					
ANR	4146897	CompoundStatement		66:0:2004:2694	4146895	0					
ANR	4146898	IdentifierDeclStatement	char * tmpbuf = NULL ;	67:1:2007:2026	4146895	0	True				
ANR	4146899	IdentifierDecl	* tmpbuf = NULL		4146895	0					
ANR	4146900	IdentifierDeclType	char *		4146895	0					
ANR	4146901	Identifier	tmpbuf		4146895	1					
ANR	4146902	AssignmentExpression	* tmpbuf = NULL		4146895	2		=			
ANR	4146903	Identifier	NULL		4146895	0					
ANR	4146904	Identifier	NULL		4146895	1					
ANR	4146905	IfStatement	if ( LocalSysCalls ( ) )		4146895	1					
ANR	4146906	Condition	LocalSysCalls ( )	69:5:2034:2048	4146895	0	True				
ANR	4146907	CallExpression	LocalSysCalls ( )		4146895	0					
ANR	4146908	Callee	LocalSysCalls		4146895	0					
ANR	4146909	Identifier	LocalSysCalls		4146895	0					
ANR	4146910	ArgumentList			4146895	1					
ANR	4146911	CompoundStatement		4:23:47:47	4146895	1					
ANR	4146912	ReturnStatement	"return GETCWD ( path , size ) ;"	70:2:2056:2083	4146895	0	True				
ANR	4146913	CallExpression	"GETCWD ( path , size )"		4146895	0					
ANR	4146914	Callee	GETCWD		4146895	0					
ANR	4146915	Identifier	GETCWD		4146895	0					
ANR	4146916	ArgumentList	path		4146895	1					
ANR	4146917	Argument	path		4146895	0					
ANR	4146918	Identifier	path		4146895	0					
ANR	4146919	Argument	size		4146895	1					
ANR	4146920	Identifier	size		4146895	0					
ANR	4146921	ElseStatement	else		4146895	0					
ANR	4146922	CompoundStatement		6:8:88:88	4146895	0					
ANR	4146923	IfStatement	if ( size == 0 )		4146895	0					
ANR	4146924	Condition	size == 0	72:7:2102:2110	4146895	0	True				
ANR	4146925	EqualityExpression	size == 0		4146895	0		==			
ANR	4146926	Identifier	size		4146895	0					
ANR	4146927	PrimaryExpression	0		4146895	1					
ANR	4146928	CompoundStatement		7:19:109:109	4146895	1					
ANR	4146929	ExpressionStatement	errno = EINVAL	74:3:2133:2147	4146895	0	True				
ANR	4146930	AssignmentExpression	errno = EINVAL		4146895	0		=			
ANR	4146931	Identifier	errno		4146895	0					
ANR	4146932	Identifier	EINVAL		4146895	1					
ANR	4146933	ReturnStatement	return NULL ;	76:3:2159:2170	4146895	1	True				
ANR	4146934	Identifier	NULL		4146895	0					
ANR	4146935	ExpressionStatement	REMOTE_CONDOR_getwd_special ( & tmpbuf )	79:2:2179:2217	4146895	1	True				
ANR	4146936	CallExpression	REMOTE_CONDOR_getwd_special ( & tmpbuf )		4146895	0					
ANR	4146937	Callee	REMOTE_CONDOR_getwd_special		4146895	0					
ANR	4146938	Identifier	REMOTE_CONDOR_getwd_special		4146895	0					
ANR	4146939	ArgumentList	& tmpbuf		4146895	1					
ANR	4146940	Argument	& tmpbuf		4146895	0					
ANR	4146941	UnaryOperationExpression	& tmpbuf		4146895	0					
ANR	4146942	UnaryOperator	&		4146895	0					
ANR	4146943	Identifier	tmpbuf		4146895	1					
ANR	4146944	IfStatement	if ( tmpbuf == NULL || tmpbuf [ 0 ] == '\\0' )		4146895	2					
ANR	4146945	Condition	tmpbuf == NULL || tmpbuf [ 0 ] == '\\0'	80:7:2226:2260	4146895	0	True				
ANR	4146946	OrExpression	tmpbuf == NULL || tmpbuf [ 0 ] == '\\0'		4146895	0		||			
ANR	4146947	EqualityExpression	tmpbuf == NULL		4146895	0		==			
ANR	4146948	Identifier	tmpbuf		4146895	0					
ANR	4146949	Identifier	NULL		4146895	1					
ANR	4146950	EqualityExpression	tmpbuf [ 0 ] == '\\0'		4146895	1		==			
ANR	4146951	ArrayIndexing	tmpbuf [ 0 ]		4146895	0					
ANR	4146952	Identifier	tmpbuf		4146895	0					
ANR	4146953	PrimaryExpression	0		4146895	1					
ANR	4146954	PrimaryExpression	'\\0'		4146895	1					
ANR	4146955	CompoundStatement		15:45:259:259	4146895	1					
ANR	4146956	ExpressionStatement	free ( tmpbuf )	82:3:2309:2323	4146895	0	True				
ANR	4146957	CallExpression	free ( tmpbuf )		4146895	0					
ANR	4146958	Callee	free		4146895	0					
ANR	4146959	Identifier	free		4146895	0					
ANR	4146960	ArgumentList	tmpbuf		4146895	1					
ANR	4146961	Argument	tmpbuf		4146895	0					
ANR	4146962	Identifier	tmpbuf		4146895	0					
ANR	4146963	ReturnStatement	return NULL ;	83:3:2328:2339	4146895	1	True				
ANR	4146964	Identifier	NULL		4146895	0					
ANR	4146965	IfStatement	if ( ( strlen ( tmpbuf ) + 1 ) > size )		4146895	3					
ANR	4146966	Condition	( strlen ( tmpbuf ) + 1 ) > size	85:7:2352:2378	4146895	0	True				
ANR	4146967	RelationalExpression	( strlen ( tmpbuf ) + 1 ) > size		4146895	0		>			
ANR	4146968	AdditiveExpression	strlen ( tmpbuf ) + 1		4146895	0		+			
ANR	4146969	CallExpression	strlen ( tmpbuf )		4146895	0					
ANR	4146970	Callee	strlen		4146895	0					
ANR	4146971	Identifier	strlen		4146895	0					
ANR	4146972	ArgumentList	tmpbuf		4146895	1					
ANR	4146973	Argument	tmpbuf		4146895	0					
ANR	4146974	Identifier	tmpbuf		4146895	0					
ANR	4146975	PrimaryExpression	1		4146895	1					
ANR	4146976	Identifier	size		4146895	1					
ANR	4146977	CompoundStatement		20:37:377:377	4146895	1					
ANR	4146978	ExpressionStatement	errno = ERANGE	88:3:2452:2466	4146895	0	True				
ANR	4146979	AssignmentExpression	errno = ERANGE		4146895	0		=			
ANR	4146980	Identifier	errno		4146895	0					
ANR	4146981	Identifier	ERANGE		4146895	1					
ANR	4146982	ExpressionStatement	free ( tmpbuf )	90:3:2478:2492	4146895	1	True				
ANR	4146983	CallExpression	free ( tmpbuf )		4146895	0					
ANR	4146984	Callee	free		4146895	0					
ANR	4146985	Identifier	free		4146895	0					
ANR	4146986	ArgumentList	tmpbuf		4146895	1					
ANR	4146987	Argument	tmpbuf		4146895	0					
ANR	4146988	Identifier	tmpbuf		4146895	0					
ANR	4146989	ReturnStatement	return NULL ;	91:3:2497:2508	4146895	2	True				
ANR	4146990	Identifier	NULL		4146895	0					
ANR	4146991	IfStatement	if ( path == NULL )		4146895	4					
ANR	4146992	Condition	path == NULL	94:10:2525:2536	4146895	0	True				
ANR	4146993	EqualityExpression	path == NULL		4146895	0		==			
ANR	4146994	Identifier	path		4146895	0					
ANR	4146995	Identifier	NULL		4146895	1					
ANR	4146996	CompoundStatement		29:25:535:535	4146895	1					
ANR	4146997	ExpressionStatement	path = tmpbuf	95:3:2545:2558	4146895	0	True				
ANR	4146998	AssignmentExpression	path = tmpbuf		4146895	0		=			
ANR	4146999	Identifier	path		4146895	0					
ANR	4147000	Identifier	tmpbuf		4146895	1					
ANR	4147001	ReturnStatement	return path ;	96:3:2563:2574	4146895	1	True				
ANR	4147002	Identifier	path		4146895	0					
ANR	4147003	ExpressionStatement	"strcpy ( path , tmpbuf )"	100:2:2636:2655	4146895	5	True				
ANR	4147004	CallExpression	"strcpy ( path , tmpbuf )"		4146895	0					
ANR	4147005	Callee	strcpy		4146895	0					
ANR	4147006	Identifier	strcpy		4146895	0					
ANR	4147007	ArgumentList	path		4146895	1					
ANR	4147008	Argument	path		4146895	0					
ANR	4147009	Identifier	path		4146895	0					
ANR	4147010	Argument	tmpbuf		4146895	1					
ANR	4147011	Identifier	tmpbuf		4146895	0					
ANR	4147012	ExpressionStatement	free ( tmpbuf )	101:2:2659:2673	4146895	6	True				
ANR	4147013	CallExpression	free ( tmpbuf )		4146895	0					
ANR	4147014	Callee	free		4146895	0					
ANR	4147015	Identifier	free		4146895	0					
ANR	4147016	ArgumentList	tmpbuf		4146895	1					
ANR	4147017	Argument	tmpbuf		4146895	0					
ANR	4147018	Identifier	tmpbuf		4146895	0					
ANR	4147019	ReturnStatement	return path ;	103:2:2678:2689	4146895	7	True				
ANR	4147020	Identifier	path		4146895	0					
ANR	4147021	ReturnType	char *		4146895	1					
ANR	4147022	Identifier	getcwd		4146895	2					
ANR	4147023	ParameterList	"char * path , size_t size"		4146895	3					
ANR	4147024	Parameter	char * path	65:8:1978:1987	4146895	0	True				
ANR	4147025	ParameterType	char *		4146895	0					
ANR	4147026	Identifier	path		4146895	1					
ANR	4147027	Parameter	size_t size	65:20:1990:2000	4146895	1	True				
ANR	4147028	ParameterType	size_t		4146895	0					
ANR	4147029	Identifier	size		4146895	1					
ANR	4147030	CFGEntryNode	ENTRY		4146895		True				
ANR	4147031	CFGExitNode	EXIT		4146895		True				
ANR	4147032	Symbol	EINVAL		4146895						
ANR	4147033	Symbol	path		4146895						
ANR	4147034	Symbol	GETCWD		4146895						
ANR	4147035	Symbol	strlen		4146895						
ANR	4147036	Symbol	errno		4146895						
ANR	4147037	Symbol	NULL		4146895						
ANR	4147038	Symbol	size		4146895						
ANR	4147039	Symbol	ERANGE		4146895						
ANR	4147040	Symbol	tmpbuf		4146895						
ANR	4147041	Symbol	LocalSysCalls		4146895						
ANR	4147042	Symbol	& tmpbuf		4146895						
ANR	4147043	Symbol	* tmpbuf		4146895						
ANR	4147044	Function	GETCWD	121:0:3207:3511							
ANR	4147045	FunctionDef	"GETCWD (char * path , size_t size)"		4147044	0					
ANR	4147046	CompoundStatement		123:0:3248:3511	4147044	0					
ANR	4147047	IdentifierDeclStatement	void * handle ;	124:1:3251:3263	4147044	0	True				
ANR	4147048	IdentifierDecl	* handle		4147044	0					
ANR	4147049	IdentifierDeclType	void *		4147044	0					
ANR	4147050	Identifier	handle		4147044	1					
ANR	4147051	IdentifierDeclStatement	"char * ( * fptr ) ( char * , size_t ) ;"	125:1:3266:3296	4147044	1	True				
ANR	4147052	IdentifierDecl	"* ( * fptr ) ( char * , size_t )"		4147044	0					
ANR	4147053	IdentifierDeclType	"char * ( * ) ( char * , size_t )"		4147044	0					
ANR	4147054	Identifier	fptr		4147044	1					
ANR	4147055	IfStatement	"if ( ( handle = dlopen ( ""libc.so"" , RTLD_LAZY ) ) == NULL )"		4147044	2					
ANR	4147056	Condition	"( handle = dlopen ( ""libc.so"" , RTLD_LAZY ) ) == NULL"	126:5:3303:3349	4147044	0	True				
ANR	4147057	EqualityExpression	"( handle = dlopen ( ""libc.so"" , RTLD_LAZY ) ) == NULL"		4147044	0		==			
ANR	4147058	AssignmentExpression	"handle = dlopen ( ""libc.so"" , RTLD_LAZY )"		4147044	0		=			
ANR	4147059	Identifier	handle		4147044	0					
ANR	4147060	CallExpression	"dlopen ( ""libc.so"" , RTLD_LAZY )"		4147044	1					
ANR	4147061	Callee	dlopen		4147044	0					
ANR	4147062	Identifier	dlopen		4147044	0					
ANR	4147063	ArgumentList	"""libc.so"""		4147044	1					
ANR	4147064	Argument	"""libc.so"""		4147044	0					
ANR	4147065	PrimaryExpression	"""libc.so"""		4147044	0					
ANR	4147066	Argument	RTLD_LAZY		4147044	1					
ANR	4147067	Identifier	RTLD_LAZY		4147044	0					
ANR	4147068	Identifier	NULL		4147044	1					
ANR	4147069	CompoundStatement		4:54:103:103	4147044	1					
ANR	4147070	ReturnStatement	return ( char * ) - 1 ;	127:2:3356:3373	4147044	0	True				
ANR	4147071	CastExpression	( char * ) - 1		4147044	0					
ANR	4147072	CastTarget	char *		4147044	0					
ANR	4147073	UnaryOperationExpression	- 1		4147044	1					
ANR	4147074	UnaryOperator	-		4147044	0					
ANR	4147075	PrimaryExpression	1		4147044	1					
ANR	4147076	Statement	if	130:1:3381:3382	4147044	3	True				
ANR	4147077	Statement	(	130:4:3384:3384	4147044	4	True				
ANR	4147078	Statement	(	130:5:3385:3385	4147044	5	True				
ANR	4147079	Statement	fptr	130:6:3386:3389	4147044	6	True				
ANR	4147080	Statement	=	130:11:3391:3391	4147044	7	True				
ANR	4147081	Statement	(	130:13:3393:3393	4147044	8	True				
ANR	4147082	Statement	char	130:14:3394:3397	4147044	9	True				
ANR	4147083	Statement	*	130:19:3399:3399	4147044	10	True				
ANR	4147084	Statement	(	130:21:3401:3401	4147044	11	True				
ANR	4147085	Statement	*	130:22:3402:3402	4147044	12	True				
ANR	4147086	Statement	)	130:23:3403:3403	4147044	13	True				
ANR	4147087	Statement	(	130:24:3404:3404	4147044	14	True				
ANR	4147088	Statement	char	130:25:3405:3408	4147044	15	True				
ANR	4147089	Statement	*	130:30:3410:3410	4147044	16	True				
ANR	4147090	Statement	","	130:31:3411:3411	4147044	17	True				
ANR	4147091	Statement	size_t	130:33:3413:3418	4147044	18	True				
ANR	4147092	Statement	)	130:39:3419:3419	4147044	19	True				
ANR	4147093	Statement	)	130:40:3420:3420	4147044	20	True				
ANR	4147094	Statement	dlsym	130:41:3421:3425	4147044	21	True				
ANR	4147095	Statement	(	130:46:3426:3426	4147044	22	True				
ANR	4147096	Statement	handle	130:47:3427:3432	4147044	23	True				
ANR	4147097	Statement	","	130:53:3433:3433	4147044	24	True				
ANR	4147098	Statement	"""getcwd"""	130:55:3435:3442	4147044	25	True				
ANR	4147099	Statement	)	130:63:3443:3443	4147044	26	True				
ANR	4147100	Statement	)	130:64:3444:3444	4147044	27	True				
ANR	4147101	Statement	==	130:66:3446:3447	4147044	28	True				
ANR	4147102	Statement	NULL	130:69:3449:3452	4147044	29	True				
ANR	4147103	Statement	)	130:73:3453:3453	4147044	30	True				
ANR	4147104	CompoundStatement		8:75:206:206	4147044	31					
ANR	4147105	ReturnStatement	return ( char * ) - 1 ;	131:2:3459:3476	4147044	0	True				
ANR	4147106	CastExpression	( char * ) - 1		4147044	0					
ANR	4147107	CastTarget	char *		4147044	0					
ANR	4147108	UnaryOperationExpression	- 1		4147044	1					
ANR	4147109	UnaryOperator	-		4147044	0					
ANR	4147110	PrimaryExpression	1		4147044	1					
ANR	4147111	ReturnStatement	"return ( * fptr ) ( path , size ) ;"	134:1:3483:3509	4147044	32	True				
ANR	4147112	CallExpression	"( * fptr ) ( path , size )"		4147044	0					
ANR	4147113	Callee	* fptr		4147044	0					
ANR	4147114	UnaryOperationExpression	* fptr		4147044	0					
ANR	4147115	UnaryOperator	*		4147044	0					
ANR	4147116	Identifier	fptr		4147044	1					
ANR	4147117	ArgumentList	path		4147044	1					
ANR	4147118	Argument	path		4147044	0					
ANR	4147119	Identifier	path		4147044	0					
ANR	4147120	Argument	size		4147044	1					
ANR	4147121	Identifier	size		4147044	0					
ANR	4147122	ReturnType	char *		4147044	1					
ANR	4147123	Identifier	GETCWD		4147044	2					
ANR	4147124	ParameterList	"char * path , size_t size"		4147044	3					
ANR	4147125	Parameter	char * path	122:8:3222:3231	4147044	0	True				
ANR	4147126	ParameterType	char *		4147044	0					
ANR	4147127	Identifier	path		4147044	1					
ANR	4147128	Parameter	size_t size	122:20:3234:3244	4147044	1	True				
ANR	4147129	ParameterType	size_t		4147044	0					
ANR	4147130	Identifier	size		4147044	1					
ANR	4147131	CFGEntryNode	ENTRY		4147044		True				
ANR	4147132	CFGExitNode	EXIT		4147044		True				
ANR	4147133	Symbol	* fptr		4147044						
ANR	4147134	Symbol	path		4147044						
ANR	4147135	Symbol	NULL		4147044						
ANR	4147136	Symbol	size		4147044						
ANR	4147137	Symbol	RTLD_LAZY		4147044						
ANR	4147138	Symbol	fptr		4147044						
ANR	4147139	Symbol	dlopen		4147044						
ANR	4147140	Symbol	handle		4147044						
ANR	4147141	Function	_GETCWD	137:0:3515:3821							
ANR	4147142	FunctionDef	"_GETCWD (char * path , size_t size)"		4147141	0					
ANR	4147143	CompoundStatement		139:0:3557:3821	4147141	0					
ANR	4147144	IdentifierDeclStatement	void * handle ;	140:1:3560:3572	4147141	0	True				
ANR	4147145	IdentifierDecl	* handle		4147141	0					
ANR	4147146	IdentifierDeclType	void *		4147141	0					
ANR	4147147	Identifier	handle		4147141	1					
ANR	4147148	IdentifierDeclStatement	"char * ( * fptr ) ( char * , size_t ) ;"	141:1:3575:3605	4147141	1	True				
ANR	4147149	IdentifierDecl	"* ( * fptr ) ( char * , size_t )"		4147141	0					
ANR	4147150	IdentifierDeclType	"char * ( * ) ( char * , size_t )"		4147141	0					
ANR	4147151	Identifier	fptr		4147141	1					
ANR	4147152	IfStatement	"if ( ( handle = dlopen ( ""libc.so"" , RTLD_LAZY ) ) == NULL )"		4147141	2					
ANR	4147153	Condition	"( handle = dlopen ( ""libc.so"" , RTLD_LAZY ) ) == NULL"	142:5:3612:3658	4147141	0	True				
ANR	4147154	EqualityExpression	"( handle = dlopen ( ""libc.so"" , RTLD_LAZY ) ) == NULL"		4147141	0		==			
ANR	4147155	AssignmentExpression	"handle = dlopen ( ""libc.so"" , RTLD_LAZY )"		4147141	0		=			
ANR	4147156	Identifier	handle		4147141	0					
ANR	4147157	CallExpression	"dlopen ( ""libc.so"" , RTLD_LAZY )"		4147141	1					
ANR	4147158	Callee	dlopen		4147141	0					
ANR	4147159	Identifier	dlopen		4147141	0					
ANR	4147160	ArgumentList	"""libc.so"""		4147141	1					
ANR	4147161	Argument	"""libc.so"""		4147141	0					
ANR	4147162	PrimaryExpression	"""libc.so"""		4147141	0					
ANR	4147163	Argument	RTLD_LAZY		4147141	1					
ANR	4147164	Identifier	RTLD_LAZY		4147141	0					
ANR	4147165	Identifier	NULL		4147141	1					
ANR	4147166	CompoundStatement		4:54:103:103	4147141	1					
ANR	4147167	ReturnStatement	return ( char * ) - 1 ;	143:2:3665:3682	4147141	0	True				
ANR	4147168	CastExpression	( char * ) - 1		4147141	0					
ANR	4147169	CastTarget	char *		4147141	0					
ANR	4147170	UnaryOperationExpression	- 1		4147141	1					
ANR	4147171	UnaryOperator	-		4147141	0					
ANR	4147172	PrimaryExpression	1		4147141	1					
ANR	4147173	Statement	if	146:1:3690:3691	4147141	3	True				
ANR	4147174	Statement	(	146:4:3693:3693	4147141	4	True				
ANR	4147175	Statement	(	146:5:3694:3694	4147141	5	True				
ANR	4147176	Statement	fptr	146:6:3695:3698	4147141	6	True				
ANR	4147177	Statement	=	146:11:3700:3700	4147141	7	True				
ANR	4147178	Statement	(	146:13:3702:3702	4147141	8	True				
ANR	4147179	Statement	char	146:14:3703:3706	4147141	9	True				
ANR	4147180	Statement	*	146:19:3708:3708	4147141	10	True				
ANR	4147181	Statement	(	146:21:3710:3710	4147141	11	True				
ANR	4147182	Statement	*	146:22:3711:3711	4147141	12	True				
ANR	4147183	Statement	)	146:23:3712:3712	4147141	13	True				
ANR	4147184	Statement	(	146:24:3713:3713	4147141	14	True				
ANR	4147185	Statement	char	146:25:3714:3717	4147141	15	True				
ANR	4147186	Statement	*	146:30:3719:3719	4147141	16	True				
ANR	4147187	Statement	","	146:31:3720:3720	4147141	17	True				
ANR	4147188	Statement	size_t	146:33:3722:3727	4147141	18	True				
ANR	4147189	Statement	)	146:39:3728:3728	4147141	19	True				
ANR	4147190	Statement	)	146:40:3729:3729	4147141	20	True				
ANR	4147191	Statement	dlsym	146:41:3730:3734	4147141	21	True				
ANR	4147192	Statement	(	146:46:3735:3735	4147141	22	True				
ANR	4147193	Statement	handle	146:47:3736:3741	4147141	23	True				
ANR	4147194	Statement	","	146:53:3742:3742	4147141	24	True				
ANR	4147195	Statement	"""_getcwd"""	146:55:3744:3752	4147141	25	True				
ANR	4147196	Statement	)	146:64:3753:3753	4147141	26	True				
ANR	4147197	Statement	)	146:65:3754:3754	4147141	27	True				
ANR	4147198	Statement	==	146:67:3756:3757	4147141	28	True				
ANR	4147199	Statement	NULL	146:70:3759:3762	4147141	29	True				
ANR	4147200	Statement	)	146:74:3763:3763	4147141	30	True				
ANR	4147201	CompoundStatement		8:76:207:207	4147141	31					
ANR	4147202	ReturnStatement	return ( char * ) - 1 ;	147:2:3769:3786	4147141	0	True				
ANR	4147203	CastExpression	( char * ) - 1		4147141	0					
ANR	4147204	CastTarget	char *		4147141	0					
ANR	4147205	UnaryOperationExpression	- 1		4147141	1					
ANR	4147206	UnaryOperator	-		4147141	0					
ANR	4147207	PrimaryExpression	1		4147141	1					
ANR	4147208	ReturnStatement	"return ( * fptr ) ( path , size ) ;"	150:1:3793:3819	4147141	32	True				
ANR	4147209	CallExpression	"( * fptr ) ( path , size )"		4147141	0					
ANR	4147210	Callee	* fptr		4147141	0					
ANR	4147211	UnaryOperationExpression	* fptr		4147141	0					
ANR	4147212	UnaryOperator	*		4147141	0					
ANR	4147213	Identifier	fptr		4147141	1					
ANR	4147214	ArgumentList	path		4147141	1					
ANR	4147215	Argument	path		4147141	0					
ANR	4147216	Identifier	path		4147141	0					
ANR	4147217	Argument	size		4147141	1					
ANR	4147218	Identifier	size		4147141	0					
ANR	4147219	ReturnType	char *		4147141	1					
ANR	4147220	Identifier	_GETCWD		4147141	2					
ANR	4147221	ParameterList	"char * path , size_t size"		4147141	3					
ANR	4147222	Parameter	char * path	138:9:3531:3540	4147141	0	True				
ANR	4147223	ParameterType	char *		4147141	0					
ANR	4147224	Identifier	path		4147141	1					
ANR	4147225	Parameter	size_t size	138:21:3543:3553	4147141	1	True				
ANR	4147226	ParameterType	size_t		4147141	0					
ANR	4147227	Identifier	size		4147141	1					
ANR	4147228	CFGEntryNode	ENTRY		4147141		True				
ANR	4147229	CFGExitNode	EXIT		4147141		True				
ANR	4147230	Symbol	* fptr		4147141						
ANR	4147231	Symbol	path		4147141						
ANR	4147232	Symbol	NULL		4147141						
ANR	4147233	Symbol	size		4147141						
ANR	4147234	Symbol	RTLD_LAZY		4147141						
ANR	4147235	Symbol	fptr		4147141						
ANR	4147236	Symbol	dlopen		4147141						
ANR	4147237	Symbol	handle		4147141						
