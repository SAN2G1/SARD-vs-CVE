command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2669739	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_image.cpp								
ANR	2669740	ClassDef	alternate_memory_heap	39:0:1306:1417							
ANR	2669741	DeclStmt									
ANR	2669742	Decl							void	void *	begin
ANR	2669743	DeclStmt									
ANR	2669744	Decl							void	void *	corestart
ANR	2669745	DeclStmt									
ANR	2669746	Decl							void	void * *	coreend
ANR	2669747	DeclStmt									
ANR	2669748	Decl							void	void * *	segend
ANR	2669749	DeclStmt									
ANR	2669750	Decl							int	int	pagesize
ANR	2669751	DeclStmt									
ANR	2669752	Decl							extern int	extern int	_condor_in_file_stream
ANR	2669753	DeclStmt									
ANR	2669754	Decl							const int	const int	KILO
ANR	2669755	DeclStmt									
ANR	2669756	Decl							void	void ( int )	report_image_size
ANR	2669757	DeclStmt									
ANR	2669758	Decl							void	void ( )	_condor_save_sigstates
ANR	2669759	DeclStmt									
ANR	2669760	Decl							void	void ( )	_condor_restore_sigstates
ANR	2669761	DeclStmt									
ANR	2669762	Decl							void	void ( int dlevel )	display_alternate_memory_heap
ANR	2669763	DeclStmt									
ANR	2669764	Decl							int	int ( void )	condor_malloc_getpagesize
ANR	2669765	DeclStmt									
ANR	2669766	Decl							int	int ( )	condor_malloc_init_size
ANR	2669767	DeclStmt									
ANR	2669768	Decl							void	void ( void * start )	condor_malloc_init
ANR	2669769	DeclStmt									
ANR	2669770	Decl							char	char * ( size_t )	condor_malloc
ANR	2669771	DeclStmt									
ANR	2669772	Decl							void	void ( void * )	condor_free
ANR	2669773	DeclStmt									
ANR	2669774	Decl							void	void * ( int )	condor_morecore
ANR	2669775	DeclStmt									
ANR	2669776	Decl							z_stream	z_stream *	zstr
ANR	2669777	DeclStmt									
ANR	2669778	Decl							unsigned char	unsigned char *	zbuf
ANR	2669779	DeclStmt									
ANR	2669780	Decl							const int	const int	zbufsize
ANR	2669781	DeclStmt									
ANR	2669782	Decl							unsigned long	unsigned long ( unsigned long )	htonl
ANR	2669783	DeclStmt									
ANR	2669784	Decl							unsigned long	unsigned long ( unsigned long )	ntohl
ANR	2669785	DeclStmt									
ANR	2669786	Decl							void	void ( int sig )	terminate_with_sig
ANR	2669787	DeclStmt									
ANR	2669788	Decl							void	"void ( RAW_ADDR & start , RAW_ADDR & end )"	find_stack_location
ANR	2669789	DeclStmt									
ANR	2669790	Decl							int	int ( )	SP_in_data_area
ANR	2669791	DeclStmt									
ANR	2669792	Decl							void	void ( )	calc_stack_to_save
ANR	2669793	DeclStmt									
ANR	2669794	Decl							void	"void ( int sig , SIG_HANDLER handler )"	_install_signal_handler
ANR	2669795	DeclStmt									
ANR	2669796	Decl							int	"int ( const char * name , int flags , size_t n_bytes )"	open_ckpt_file
ANR	2669797	DeclStmt									
ANR	2669798	Decl							int	int ( int sig )	get_ckpt_mode
ANR	2669799	DeclStmt									
ANR	2669800	Decl							int	int ( )	get_ckpt_speed
ANR	2669801	DeclStmt									
ANR	2669802	Decl							void	void ( int seconds )	sleep_syscall
ANR	2669803	DeclStmt									
ANR	2669804	Decl							Image	Image	MyImage
ANR	2669805	DeclStmt									
ANR	2669806	Decl							jmp_buf	jmp_buf	Env
ANR	2669807	DeclStmt									
ANR	2669808	Decl							RAW_ADDR	RAW_ADDR	SavedStackLoc
ANR	2669809	DeclStmt									
ANR	2669810	Decl							volatile int	volatile int	InRestart
ANR	2669811	DeclStmt									
ANR	2669812	Decl							volatile int	volatile int	check_sig
ANR	2669813	DeclStmt									
ANR	2669814	Decl							size_t	size_t	StackSaveSize
ANR	2669815	DeclStmt									
ANR	2669816	Decl							unsigned int	unsigned int	_condor_numrestarts
ANR	2669817	DeclStmt									
ANR	2669818	Decl							int	int	condor_compress_ckpt
ANR	2669819	DeclStmt									
ANR	2669820	Decl							int	int	condor_slow_ckpt
ANR	2669821	DeclStmt									
ANR	2669822	Decl							struct alternate_memory_heap	struct alternate_memory_heap	amh
ANR	2669823	DeclStmt									
ANR	2669824	Decl							int	int ( struct rusage * use_p )	REMOTE_CONDOR_send_rusage
ANR	2669825	Function	net_read	127:0:3888:4212							
ANR	2669826	FunctionDef	"net_read (int fd , void * buf , int size)"		2669825	0					
ANR	2669827	CompoundStatement		129:0:3937:4212	2669825	0					
ANR	2669828	IdentifierDeclStatement	int bytes_read ;	130:1:3940:3955	2669825	0	True				
ANR	2669829	IdentifierDecl	bytes_read		2669825	0					
ANR	2669830	IdentifierDeclType	int		2669825	0					
ANR	2669831	Identifier	bytes_read		2669825	1					
ANR	2669832	IdentifierDeclStatement	int this_read ;	131:1:3958:3972	2669825	1	True				
ANR	2669833	IdentifierDecl	this_read		2669825	0					
ANR	2669834	IdentifierDeclType	int		2669825	0					
ANR	2669835	Identifier	this_read		2669825	1					
ANR	2669836	ExpressionStatement	bytes_read = 0	133:1:3976:3990	2669825	2	True				
ANR	2669837	AssignmentExpression	bytes_read = 0		2669825	0		=			
ANR	2669838	Identifier	bytes_read		2669825	0					
ANR	2669839	PrimaryExpression	0		2669825	1					
ANR	2669840	DoStatement	do		2669825	3					
ANR	2669841	CompoundStatement		6:4:58:58	2669825	0					
ANR	2669842	ExpressionStatement	"this_read = read ( fd , buf , size - bytes_read )"	135:2:4000:4044	2669825	0	True				
ANR	2669843	AssignmentExpression	"this_read = read ( fd , buf , size - bytes_read )"		2669825	0		=			
ANR	2669844	Identifier	this_read		2669825	0					
ANR	2669845	CallExpression	"read ( fd , buf , size - bytes_read )"		2669825	1					
ANR	2669846	Callee	read		2669825	0					
ANR	2669847	Identifier	read		2669825	0					
ANR	2669848	ArgumentList	fd		2669825	1					
ANR	2669849	Argument	fd		2669825	0					
ANR	2669850	Identifier	fd		2669825	0					
ANR	2669851	Argument	buf		2669825	1					
ANR	2669852	Identifier	buf		2669825	0					
ANR	2669853	Argument	size - bytes_read		2669825	2					
ANR	2669854	AdditiveExpression	size - bytes_read		2669825	0		-			
ANR	2669855	Identifier	size		2669825	0					
ANR	2669856	Identifier	bytes_read		2669825	1					
ANR	2669857	IfStatement	if ( this_read <= 0 )		2669825	1					
ANR	2669858	Condition	this_read <= 0	136:6:4052:4065	2669825	0	True				
ANR	2669859	RelationalExpression	this_read <= 0		2669825	0		<=			
ANR	2669860	Identifier	this_read		2669825	0					
ANR	2669861	PrimaryExpression	0		2669825	1					
ANR	2669862	CompoundStatement		8:22:130:130	2669825	1					
ANR	2669863	ReturnStatement	return - 1 ;	137:3:4073:4082	2669825	0	True				
ANR	2669864	UnaryOperationExpression	- 1		2669825	0					
ANR	2669865	UnaryOperator	-		2669825	0					
ANR	2669866	PrimaryExpression	1		2669825	1					
ANR	2669867	ExpressionStatement	bytes_read += this_read	139:2:4090:4113	2669825	2	True				
ANR	2669868	AssignmentExpression	bytes_read += this_read		2669825	0		+=			
ANR	2669869	Identifier	bytes_read		2669825	0					
ANR	2669870	Identifier	this_read		2669825	1					
ANR	2669871	ExpressionStatement	buf = ( void * ) ( ( char * ) buf + this_read )	140:2:4117:4160	2669825	3	True				
ANR	2669872	AssignmentExpression	buf = ( void * ) ( ( char * ) buf + this_read )		2669825	0		=			
ANR	2669873	Identifier	buf		2669825	0					
ANR	2669874	CastExpression	( void * ) ( ( char * ) buf + this_read )		2669825	1					
ANR	2669875	CastTarget	void *		2669825	0					
ANR	2669876	AdditiveExpression	( char * ) buf + this_read		2669825	1		+			
ANR	2669877	CastExpression	( char * ) buf		2669825	0					
ANR	2669878	CastTarget	char *		2669825	0					
ANR	2669879	Identifier	buf		2669825	1					
ANR	2669880	Identifier	this_read		2669825	1					
ANR	2669881	Condition	bytes_read < size	141:10:4172:4188	2669825	1	True				
ANR	2669882	RelationalExpression	bytes_read < size		2669825	0		<			
ANR	2669883	Identifier	bytes_read		2669825	0					
ANR	2669884	Identifier	size		2669825	1					
ANR	2669885	ReturnStatement	return bytes_read ;	142:1:4193:4210	2669825	4	True				
ANR	2669886	Identifier	bytes_read		2669825	0					
ANR	2669887	ReturnType	static int		2669825	1					
ANR	2669888	Identifier	net_read		2669825	2					
ANR	2669889	ParameterList	"int fd , void * buf , int size"		2669825	3					
ANR	2669890	Parameter	int fd	128:9:3908:3913	2669825	0	True				
ANR	2669891	ParameterType	int		2669825	0					
ANR	2669892	Identifier	fd		2669825	1					
ANR	2669893	Parameter	void * buf	128:17:3916:3924	2669825	1	True				
ANR	2669894	ParameterType	void *		2669825	0					
ANR	2669895	Identifier	buf		2669825	1					
ANR	2669896	Parameter	int size	128:28:3927:3934	2669825	2	True				
ANR	2669897	ParameterType	int		2669825	0					
ANR	2669898	Identifier	size		2669825	1					
ANR	2669899	CFGEntryNode	ENTRY		2669825		True				
ANR	2669900	CFGExitNode	EXIT		2669825		True				
ANR	2669901	Symbol	buf		2669825						
ANR	2669902	Symbol	read		2669825						
ANR	2669903	Symbol	size		2669825						
ANR	2669904	Symbol	bytes_read		2669825						
ANR	2669905	Symbol	fd		2669825						
ANR	2669906	Symbol	this_read		2669825						
ANR	2669907	Function	condor_map_seg	146:0:4242:4807							
ANR	2669908	FunctionDef	"condor_map_seg (void * base , size_t size)"		2669907	0					
ANR	2669909	CompoundStatement		147:0:4288:4807	2669907	0					
ANR	2669910	IdentifierDeclStatement	int zfd ;	148:1:4291:4298	2669907	0	True				
ANR	2669911	IdentifierDecl	zfd		2669907	0					
ANR	2669912	IdentifierDeclType	int		2669907	0					
ANR	2669913	Identifier	zfd		2669907	1					
ANR	2669914	IfStatement	"if ( ( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1 )"		2669907	1					
ANR	2669915	Condition	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"	149:5:4305:4356	2669907	0	True				
ANR	2669916	EqualityExpression	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"		2669907	0		==			
ANR	2669917	AssignmentExpression	"zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		2669907	0		=			
ANR	2669918	Identifier	zfd		2669907	0					
ANR	2669919	CallExpression	"SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		2669907	1					
ANR	2669920	Callee	SYSCALL		2669907	0					
ANR	2669921	Identifier	SYSCALL		2669907	0					
ANR	2669922	ArgumentList	SYS_open		2669907	1					
ANR	2669923	Argument	SYS_open		2669907	0					
ANR	2669924	Identifier	SYS_open		2669907	0					
ANR	2669925	Argument	"""/dev/zero"""		2669907	1					
ANR	2669926	PrimaryExpression	"""/dev/zero"""		2669907	0					
ANR	2669927	Argument	O_RDWR		2669907	2					
ANR	2669928	Identifier	O_RDWR		2669907	0					
ANR	2669929	UnaryOperationExpression	- 1		2669907	1					
ANR	2669930	UnaryOperator	-		2669907	0					
ANR	2669931	PrimaryExpression	1		2669907	1					
ANR	2669932	CompoundStatement		3:59:70:70	2669907	1					
ANR	2669933	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"	150:2:4363:4436	2669907	0	True				
ANR	2669934	CallExpression	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"		2669907	0					
ANR	2669935	Callee	dprintf		2669907	0					
ANR	2669936	Identifier	dprintf		2669907	0					
ANR	2669937	ArgumentList	D_ALWAYS		2669907	1					
ANR	2669938	Argument	D_ALWAYS		2669907	0					
ANR	2669939	Identifier	D_ALWAYS		2669907	0					
ANR	2669940	Argument	"""Unable to open /dev/zero in read/write mode.\\n"""		2669907	1					
ANR	2669941	PrimaryExpression	"""Unable to open /dev/zero in read/write mode.\\n"""		2669907	0					
ANR	2669942	ExpressionStatement	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"	152:2:4440:4489	2669907	1	True				
ANR	2669943	CallExpression	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"		2669907	0					
ANR	2669944	Callee	dprintf		2669907	0					
ANR	2669945	Identifier	dprintf		2669907	0					
ANR	2669946	ArgumentList	D_ALWAYS		2669907	1					
ANR	2669947	Argument	D_ALWAYS		2669907	0					
ANR	2669948	Identifier	D_ALWAYS		2669907	0					
ANR	2669949	Argument	"""open: %s\\n"""		2669907	1					
ANR	2669950	PrimaryExpression	"""open: %s\\n"""		2669907	0					
ANR	2669951	Argument	strerror ( errno )		2669907	2					
ANR	2669952	CallExpression	strerror ( errno )		2669907	0					
ANR	2669953	Callee	strerror		2669907	0					
ANR	2669954	Identifier	strerror		2669907	0					
ANR	2669955	ArgumentList	errno		2669907	1					
ANR	2669956	Argument	errno		2669907	0					
ANR	2669957	Identifier	errno		2669907	0					
ANR	2669958	ExpressionStatement	Suicide ( )	153:2:4493:4502	2669907	2	True				
ANR	2669959	CallExpression	Suicide ( )		2669907	0					
ANR	2669960	Callee	Suicide		2669907	0					
ANR	2669961	Identifier	Suicide		2669907	0					
ANR	2669962	ArgumentList			2669907	1					
ANR	2669963	IdentifierDeclStatement	int flags ;	156:1:4509:4518	2669907	2	True				
ANR	2669964	IdentifierDecl	flags		2669907	0					
ANR	2669965	IdentifierDeclType	int		2669907	0					
ANR	2669966	Identifier	flags		2669907	1					
ANR	2669967	IfStatement	if ( base == NULL )		2669907	3					
ANR	2669968	Condition	base == NULL	157:5:4525:4536	2669907	0	True				
ANR	2669969	EqualityExpression	base == NULL		2669907	0		==			
ANR	2669970	Identifier	base		2669907	0					
ANR	2669971	Identifier	NULL		2669907	1					
ANR	2669972	CompoundStatement		11:19:250:250	2669907	1					
ANR	2669973	ExpressionStatement	flags = MAP_PRIVATE	158:2:4543:4562	2669907	0	True				
ANR	2669974	AssignmentExpression	flags = MAP_PRIVATE		2669907	0		=			
ANR	2669975	Identifier	flags		2669907	0					
ANR	2669976	Identifier	MAP_PRIVATE		2669907	1					
ANR	2669977	ElseStatement	else		2669907	0					
ANR	2669978	CompoundStatement		13:8:283:283	2669907	0					
ANR	2669979	ExpressionStatement	flags = MAP_PRIVATE | MAP_FIXED	160:2:4576:4605	2669907	0	True				
ANR	2669980	AssignmentExpression	flags = MAP_PRIVATE | MAP_FIXED		2669907	0		=			
ANR	2669981	Identifier	flags		2669907	0					
ANR	2669982	InclusiveOrExpression	MAP_PRIVATE | MAP_FIXED		2669907	1		|			
ANR	2669983	Identifier	MAP_PRIVATE		2669907	0					
ANR	2669984	Identifier	MAP_FIXED		2669907	1					
ANR	2669985	ExpressionStatement	"base = MMAP ( ( MMAP_T ) base , ( size_t ) size , PROT_READ | PROT_WRITE , flags , zfd , ( off_t ) 0 )"	162:1:4611:4698	2669907	4	True				
ANR	2669986	AssignmentExpression	"base = MMAP ( ( MMAP_T ) base , ( size_t ) size , PROT_READ | PROT_WRITE , flags , zfd , ( off_t ) 0 )"		2669907	0		=			
ANR	2669987	Identifier	base		2669907	0					
ANR	2669988	CallExpression	"MMAP ( ( MMAP_T ) base , ( size_t ) size , PROT_READ | PROT_WRITE , flags , zfd , ( off_t ) 0 )"		2669907	1					
ANR	2669989	Callee	MMAP		2669907	0					
ANR	2669990	Identifier	MMAP		2669907	0					
ANR	2669991	ArgumentList	( MMAP_T ) base		2669907	1					
ANR	2669992	Argument	( MMAP_T ) base		2669907	0					
ANR	2669993	CastExpression	( MMAP_T ) base		2669907	0					
ANR	2669994	CastTarget	MMAP_T		2669907	0					
ANR	2669995	Identifier	base		2669907	1					
ANR	2669996	Argument	( size_t ) size		2669907	1					
ANR	2669997	CastExpression	( size_t ) size		2669907	0					
ANR	2669998	CastTarget	size_t		2669907	0					
ANR	2669999	Identifier	size		2669907	1					
ANR	2670000	Argument	PROT_READ | PROT_WRITE		2669907	2					
ANR	2670001	InclusiveOrExpression	PROT_READ | PROT_WRITE		2669907	0		|			
ANR	2670002	Identifier	PROT_READ		2669907	0					
ANR	2670003	Identifier	PROT_WRITE		2669907	1					
ANR	2670004	Argument	flags		2669907	3					
ANR	2670005	Identifier	flags		2669907	0					
ANR	2670006	Argument	zfd		2669907	4					
ANR	2670007	Identifier	zfd		2669907	0					
ANR	2670008	Argument	( off_t ) 0		2669907	5					
ANR	2670009	CastExpression	( off_t ) 0		2669907	0					
ANR	2670010	CastTarget	off_t		2669907	0					
ANR	2670011	PrimaryExpression	0		2669907	1					
ANR	2670012	IfStatement	if ( base == MAP_FAILED )		2669907	5					
ANR	2670013	Condition	base == MAP_FAILED	164:5:4705:4722	2669907	0	True				
ANR	2670014	EqualityExpression	base == MAP_FAILED		2669907	0		==			
ANR	2670015	Identifier	base		2669907	0					
ANR	2670016	Identifier	MAP_FAILED		2669907	1					
ANR	2670017	CompoundStatement		18:25:436:436	2669907	1					
ANR	2670018	ExpressionStatement	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"	165:2:4729:4775	2669907	0	True				
ANR	2670019	CallExpression	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"		2669907	0					
ANR	2670020	Callee	dprintf		2669907	0					
ANR	2670021	Identifier	dprintf		2669907	0					
ANR	2670022	ArgumentList	D_ALWAYS		2669907	1					
ANR	2670023	Argument	D_ALWAYS		2669907	0					
ANR	2670024	Identifier	D_ALWAYS		2669907	0					
ANR	2670025	Argument	"""mmap: %s"""		2669907	1					
ANR	2670026	PrimaryExpression	"""mmap: %s"""		2669907	0					
ANR	2670027	Argument	strerror ( errno )		2669907	2					
ANR	2670028	CallExpression	strerror ( errno )		2669907	0					
ANR	2670029	Callee	strerror		2669907	0					
ANR	2670030	Identifier	strerror		2669907	0					
ANR	2670031	ArgumentList	errno		2669907	1					
ANR	2670032	Argument	errno		2669907	0					
ANR	2670033	Identifier	errno		2669907	0					
ANR	2670034	ExpressionStatement	Suicide ( )	166:2:4779:4788	2669907	1	True				
ANR	2670035	CallExpression	Suicide ( )		2669907	0					
ANR	2670036	Callee	Suicide		2669907	0					
ANR	2670037	Identifier	Suicide		2669907	0					
ANR	2670038	ArgumentList			2669907	1					
ANR	2670039	ReturnStatement	return base ;	168:1:4794:4805	2669907	6	True				
ANR	2670040	Identifier	base		2669907	0					
ANR	2670041	ReturnType	void *		2669907	1					
ANR	2670042	Identifier	condor_map_seg		2669907	2					
ANR	2670043	ParameterList	"void * base , size_t size"		2669907	3					
ANR	2670044	Parameter	void * base	146:21:4263:4272	2669907	0	True				
ANR	2670045	ParameterType	void *		2669907	0					
ANR	2670046	Identifier	base		2669907	1					
ANR	2670047	Parameter	size_t size	146:33:4275:4285	2669907	1	True				
ANR	2670048	ParameterType	size_t		2669907	0					
ANR	2670049	Identifier	size		2669907	1					
ANR	2670050	CFGEntryNode	ENTRY		2669907		True				
ANR	2670051	CFGExitNode	EXIT		2669907		True				
ANR	2670052	Symbol	SYS_open		2669907						
ANR	2670053	Symbol	errno		2669907						
ANR	2670054	Symbol	NULL		2669907						
ANR	2670055	Symbol	D_ALWAYS		2669907						
ANR	2670056	Symbol	flags		2669907						
ANR	2670057	Symbol	PROT_READ		2669907						
ANR	2670058	Symbol	MMAP		2669907						
ANR	2670059	Symbol	MAP_PRIVATE		2669907						
ANR	2670060	Symbol	MAP_FAILED		2669907						
ANR	2670061	Symbol	strerror		2669907						
ANR	2670062	Symbol	O_RDWR		2669907						
ANR	2670063	Symbol	size		2669907						
ANR	2670064	Symbol	PROT_WRITE		2669907						
ANR	2670065	Symbol	zfd		2669907						
ANR	2670066	Symbol	MAP_FIXED		2669907						
ANR	2670067	Symbol	SYSCALL		2669907						
ANR	2670068	Symbol	base		2669907						
ANR	2670069	Function	display_alternate_memory_heap	171:0:4810:5139							
ANR	2670070	FunctionDef	display_alternate_memory_heap (int dlevel)		2670069	0					
ANR	2670071	CompoundStatement		172:0:4857:5139	2670069	0					
ANR	2670072	ExpressionStatement	"dprintf ( dlevel , ""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"" , amh . begin , amh . corestart , amh . coreend , amh . segend , amh . coreend != NULL ? * amh . coreend : NULL , amh . segend != NULL ? * amh . segend : NULL , amh . pagesize )"	173:1:4860:5137	2670069	0	True				
ANR	2670073	CallExpression	"dprintf ( dlevel , ""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"" , amh . begin , amh . corestart , amh . coreend , amh . segend , amh . coreend != NULL ? * amh . coreend : NULL , amh . segend != NULL ? * amh . segend : NULL , amh . pagesize )"		2670069	0					
ANR	2670074	Callee	dprintf		2670069	0					
ANR	2670075	Identifier	dprintf		2670069	0					
ANR	2670076	ArgumentList	dlevel		2670069	1					
ANR	2670077	Argument	dlevel		2670069	0					
ANR	2670078	Identifier	dlevel		2670069	0					
ANR	2670079	Argument	"""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"""		2670069	1					
ANR	2670080	PrimaryExpression	"""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"""		2670069	0					
ANR	2670081	Argument	amh . begin		2670069	2					
ANR	2670082	MemberAccess	amh . begin		2670069	0					
ANR	2670083	Identifier	amh		2670069	0					
ANR	2670084	Identifier	begin		2670069	1					
ANR	2670085	Argument	amh . corestart		2670069	3					
ANR	2670086	MemberAccess	amh . corestart		2670069	0					
ANR	2670087	Identifier	amh		2670069	0					
ANR	2670088	Identifier	corestart		2670069	1					
ANR	2670089	Argument	amh . coreend		2670069	4					
ANR	2670090	MemberAccess	amh . coreend		2670069	0					
ANR	2670091	Identifier	amh		2670069	0					
ANR	2670092	Identifier	coreend		2670069	1					
ANR	2670093	Argument	amh . segend		2670069	5					
ANR	2670094	MemberAccess	amh . segend		2670069	0					
ANR	2670095	Identifier	amh		2670069	0					
ANR	2670096	Identifier	segend		2670069	1					
ANR	2670097	Argument	amh . coreend != NULL ? * amh . coreend : NULL		2670069	6					
ANR	2670098	ConditionalExpression	amh . coreend != NULL ? * amh . coreend : NULL		2670069	0					
ANR	2670099	Condition	amh . coreend != NULL		2670069	0					
ANR	2670100	EqualityExpression	amh . coreend != NULL		2670069	0		!=			
ANR	2670101	MemberAccess	amh . coreend		2670069	0					
ANR	2670102	Identifier	amh		2670069	0					
ANR	2670103	Identifier	coreend		2670069	1					
ANR	2670104	Identifier	NULL		2670069	1					
ANR	2670105	UnaryOperationExpression	* amh . coreend		2670069	1					
ANR	2670106	UnaryOperator	*		2670069	0					
ANR	2670107	MemberAccess	amh . coreend		2670069	1					
ANR	2670108	Identifier	amh		2670069	0					
ANR	2670109	Identifier	coreend		2670069	1					
ANR	2670110	Identifier	NULL		2670069	2					
ANR	2670111	Argument	amh . segend != NULL ? * amh . segend : NULL		2670069	7					
ANR	2670112	ConditionalExpression	amh . segend != NULL ? * amh . segend : NULL		2670069	0					
ANR	2670113	Condition	amh . segend != NULL		2670069	0					
ANR	2670114	EqualityExpression	amh . segend != NULL		2670069	0		!=			
ANR	2670115	MemberAccess	amh . segend		2670069	0					
ANR	2670116	Identifier	amh		2670069	0					
ANR	2670117	Identifier	segend		2670069	1					
ANR	2670118	Identifier	NULL		2670069	1					
ANR	2670119	UnaryOperationExpression	* amh . segend		2670069	1					
ANR	2670120	UnaryOperator	*		2670069	0					
ANR	2670121	MemberAccess	amh . segend		2670069	1					
ANR	2670122	Identifier	amh		2670069	0					
ANR	2670123	Identifier	segend		2670069	1					
ANR	2670124	Identifier	NULL		2670069	2					
ANR	2670125	Argument	amh . pagesize		2670069	8					
ANR	2670126	MemberAccess	amh . pagesize		2670069	0					
ANR	2670127	Identifier	amh		2670069	0					
ANR	2670128	Identifier	pagesize		2670069	1					
ANR	2670129	ReturnType	void		2670069	1					
ANR	2670130	Identifier	display_alternate_memory_heap		2670069	2					
ANR	2670131	ParameterList	int dlevel		2670069	3					
ANR	2670132	Parameter	int dlevel	171:35:4845:4854	2670069	0	True				
ANR	2670133	ParameterType	int		2670069	0					
ANR	2670134	Identifier	dlevel		2670069	1					
ANR	2670135	CFGEntryNode	ENTRY		2670069		True				
ANR	2670136	CFGExitNode	EXIT		2670069		True				
ANR	2670137	Symbol	amh . segend		2670069						
ANR	2670138	Symbol	* amh . coreend		2670069						
ANR	2670139	Symbol	NULL		2670069						
ANR	2670140	Symbol	* amh . segend		2670069						
ANR	2670141	Symbol	dlevel		2670069						
ANR	2670142	Symbol	amh . corestart		2670069						
ANR	2670143	Symbol	* amh		2670069						
ANR	2670144	Symbol	amh . pagesize		2670069						
ANR	2670145	Symbol	amh		2670069						
ANR	2670146	Symbol	amh . begin		2670069						
ANR	2670147	Symbol	amh . coreend		2670069						
ANR	2670148	Function	condor_morecore	182:0:5188:7339							
ANR	2670149	FunctionDef	condor_morecore (int incr)		2670148	0					
ANR	2670150	CompoundStatement		183:0:5220:7339	2670148	0					
ANR	2670151	IfStatement	if ( amh . pagesize == - 1 )		2670148	0					
ANR	2670152	Condition	amh . pagesize == - 1	191:5:5624:5641	2670148	0	True				
ANR	2670153	EqualityExpression	amh . pagesize == - 1		2670148	0		==			
ANR	2670154	MemberAccess	amh . pagesize		2670148	0					
ANR	2670155	Identifier	amh		2670148	0					
ANR	2670156	Identifier	pagesize		2670148	1					
ANR	2670157	UnaryOperationExpression	- 1		2670148	1					
ANR	2670158	UnaryOperator	-		2670148	0					
ANR	2670159	PrimaryExpression	1		2670148	1					
ANR	2670160	CompoundStatement		9:25:423:423	2670148	1					
ANR	2670161	ExpressionStatement	amh . pagesize = condor_malloc_getpagesize ( )	196:2:5866:5908	2670148	0	True				
ANR	2670162	AssignmentExpression	amh . pagesize = condor_malloc_getpagesize ( )		2670148	0		=			
ANR	2670163	MemberAccess	amh . pagesize		2670148	0					
ANR	2670164	Identifier	amh		2670148	0					
ANR	2670165	Identifier	pagesize		2670148	1					
ANR	2670166	CallExpression	condor_malloc_getpagesize ( )		2670148	1					
ANR	2670167	Callee	condor_malloc_getpagesize		2670148	0					
ANR	2670168	Identifier	condor_malloc_getpagesize		2670148	0					
ANR	2670169	ArgumentList			2670148	1					
ANR	2670170	IfStatement	if ( amh . begin == NULL )		2670148	1					
ANR	2670171	Condition	amh . begin == NULL	199:5:5919:5935	2670148	0	True				
ANR	2670172	EqualityExpression	amh . begin == NULL		2670148	0		==			
ANR	2670173	MemberAccess	amh . begin		2670148	0					
ANR	2670174	Identifier	amh		2670148	0					
ANR	2670175	Identifier	begin		2670148	1					
ANR	2670176	Identifier	NULL		2670148	1					
ANR	2670177	CompoundStatement		20:2:812:912	2670148	1					
ANR	2670178	ExpressionStatement	amh . begin = MyImage . FindAltHeap ( )	200:2:5942:5975	2670148	0	True				
ANR	2670179	AssignmentExpression	amh . begin = MyImage . FindAltHeap ( )		2670148	0		=			
ANR	2670180	MemberAccess	amh . begin		2670148	0					
ANR	2670181	Identifier	amh		2670148	0					
ANR	2670182	Identifier	begin		2670148	1					
ANR	2670183	CallExpression	MyImage . FindAltHeap ( )		2670148	1					
ANR	2670184	Callee	MyImage . FindAltHeap		2670148	0					
ANR	2670185	MemberAccess	MyImage . FindAltHeap		2670148	0					
ANR	2670186	Identifier	MyImage		2670148	0					
ANR	2670187	Identifier	FindAltHeap		2670148	1					
ANR	2670188	ArgumentList			2670148	1					
ANR	2670189	IdentifierDeclStatement	int malloc_static_data = condor_malloc_init_size ( ) ;	201:2:5979:6029	2670148	1	True				
ANR	2670190	IdentifierDecl	malloc_static_data = condor_malloc_init_size ( )		2670148	0					
ANR	2670191	IdentifierDeclType	int		2670148	0					
ANR	2670192	Identifier	malloc_static_data		2670148	1					
ANR	2670193	AssignmentExpression	malloc_static_data = condor_malloc_init_size ( )		2670148	2		=			
ANR	2670194	Identifier	malloc_static_data		2670148	0					
ANR	2670195	CallExpression	condor_malloc_init_size ( )		2670148	1					
ANR	2670196	Callee	condor_malloc_init_size		2670148	0					
ANR	2670197	Identifier	condor_malloc_init_size		2670148	0					
ANR	2670198	ArgumentList			2670148	1					
ANR	2670199	IdentifierDeclStatement	int segincr = ( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize ;	202:2:6033:6133	2670148	2	True				
ANR	2670200	IdentifierDecl	segincr = ( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize		2670148	0					
ANR	2670201	IdentifierDeclType	int		2670148	0					
ANR	2670202	Identifier	segincr		2670148	1					
ANR	2670203	AssignmentExpression	segincr = ( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize		2670148	2		=			
ANR	2670204	Identifier	segincr		2670148	0					
ANR	2670205	MultiplicativeExpression	( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize		2670148	1		*			
ANR	2670206	AdditiveExpression	( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1		2670148	0		+			
ANR	2670207	MultiplicativeExpression	( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize		2670148	0		/			
ANR	2670208	AdditiveExpression	incr + malloc_static_data + ( 2 * sizeof ( void * ) )		2670148	0		+			
ANR	2670209	Identifier	incr		2670148	0					
ANR	2670210	AdditiveExpression	malloc_static_data + ( 2 * sizeof ( void * ) )		2670148	1		+			
ANR	2670211	Identifier	malloc_static_data		2670148	0					
ANR	2670212	MultiplicativeExpression	2 * sizeof ( void * )		2670148	1		*			
ANR	2670213	PrimaryExpression	2		2670148	0					
ANR	2670214	SizeofExpression	sizeof ( void * )		2670148	1					
ANR	2670215	Sizeof	sizeof		2670148	0					
ANR	2670216	SizeofOperand	void *		2670148	1					
ANR	2670217	MemberAccess	amh . pagesize		2670148	1					
ANR	2670218	Identifier	amh		2670148	0					
ANR	2670219	Identifier	pagesize		2670148	1					
ANR	2670220	PrimaryExpression	1		2670148	1					
ANR	2670221	MemberAccess	amh . pagesize		2670148	1					
ANR	2670222	Identifier	amh		2670148	0					
ANR	2670223	Identifier	pagesize		2670148	1					
ANR	2670224	ExpressionStatement	"amh . begin = condor_map_seg ( amh . begin , segincr )"	205:2:6137:6183	2670148	3	True				
ANR	2670225	AssignmentExpression	"amh . begin = condor_map_seg ( amh . begin , segincr )"		2670148	0		=			
ANR	2670226	MemberAccess	amh . begin		2670148	0					
ANR	2670227	Identifier	amh		2670148	0					
ANR	2670228	Identifier	begin		2670148	1					
ANR	2670229	CallExpression	"condor_map_seg ( amh . begin , segincr )"		2670148	1					
ANR	2670230	Callee	condor_map_seg		2670148	0					
ANR	2670231	Identifier	condor_map_seg		2670148	0					
ANR	2670232	ArgumentList	amh . begin		2670148	1					
ANR	2670233	Argument	amh . begin		2670148	0					
ANR	2670234	MemberAccess	amh . begin		2670148	0					
ANR	2670235	Identifier	amh		2670148	0					
ANR	2670236	Identifier	begin		2670148	1					
ANR	2670237	Argument	segincr		2670148	1					
ANR	2670238	Identifier	segincr		2670148	0					
ANR	2670239	ExpressionStatement	amh . corestart = ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data )	206:2:6187:6281	2670148	4	True				
ANR	2670240	AssignmentExpression	amh . corestart = ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data )		2670148	0		=			
ANR	2670241	MemberAccess	amh . corestart		2670148	0					
ANR	2670242	Identifier	amh		2670148	0					
ANR	2670243	Identifier	corestart		2670148	1					
ANR	2670244	CastExpression	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data )		2670148	1					
ANR	2670245	CastTarget	void *		2670148	0					
ANR	2670246	AdditiveExpression	( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data		2670148	1		+			
ANR	2670247	CastExpression	( int ) amh . begin		2670148	0					
ANR	2670248	CastTarget	int		2670148	0					
ANR	2670249	MemberAccess	amh . begin		2670148	1					
ANR	2670250	Identifier	amh		2670148	0					
ANR	2670251	Identifier	begin		2670148	1					
ANR	2670252	AdditiveExpression	( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data		2670148	1		+			
ANR	2670253	CastExpression	( int ) ( 2 * sizeof ( void * ) )		2670148	0					
ANR	2670254	CastTarget	int		2670148	0					
ANR	2670255	MultiplicativeExpression	2 * sizeof ( void * )		2670148	1		*			
ANR	2670256	PrimaryExpression	2		2670148	0					
ANR	2670257	SizeofExpression	sizeof ( void * )		2670148	1					
ANR	2670258	Sizeof	sizeof		2670148	0					
ANR	2670259	SizeofOperand	void *		2670148	1					
ANR	2670260	CastExpression	( int ) malloc_static_data		2670148	1					
ANR	2670261	CastTarget	int		2670148	0					
ANR	2670262	Identifier	malloc_static_data		2670148	1					
ANR	2670263	ExpressionStatement	condor_malloc_init ( ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) ) )	208:2:6286:6354	2670148	5	True				
ANR	2670264	CallExpression	condor_malloc_init ( ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) ) )		2670148	0					
ANR	2670265	Callee	condor_malloc_init		2670148	0					
ANR	2670266	Identifier	condor_malloc_init		2670148	0					
ANR	2670267	ArgumentList	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) )		2670148	1					
ANR	2670268	Argument	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) )		2670148	0					
ANR	2670269	CastExpression	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) )		2670148	0					
ANR	2670270	CastTarget	void *		2670148	0					
ANR	2670271	AdditiveExpression	( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) )		2670148	1		+			
ANR	2670272	CastExpression	( int ) amh . begin		2670148	0					
ANR	2670273	CastTarget	int		2670148	0					
ANR	2670274	MemberAccess	amh . begin		2670148	1					
ANR	2670275	Identifier	amh		2670148	0					
ANR	2670276	Identifier	begin		2670148	1					
ANR	2670277	CastExpression	( int ) ( 2 * sizeof ( void * ) )		2670148	1					
ANR	2670278	CastTarget	int		2670148	0					
ANR	2670279	MultiplicativeExpression	2 * sizeof ( void * )		2670148	1		*			
ANR	2670280	PrimaryExpression	2		2670148	0					
ANR	2670281	SizeofExpression	sizeof ( void * )		2670148	1					
ANR	2670282	Sizeof	sizeof		2670148	0					
ANR	2670283	SizeofOperand	void *		2670148	1					
ANR	2670284	ExpressionStatement	amh . coreend = ( void * * ) amh . begin	209:2:6358:6390	2670148	6	True				
ANR	2670285	AssignmentExpression	amh . coreend = ( void * * ) amh . begin		2670148	0		=			
ANR	2670286	MemberAccess	amh . coreend		2670148	0					
ANR	2670287	Identifier	amh		2670148	0					
ANR	2670288	Identifier	coreend		2670148	1					
ANR	2670289	CastExpression	( void * * ) amh . begin		2670148	1					
ANR	2670290	CastTarget	void * *		2670148	0					
ANR	2670291	MemberAccess	amh . begin		2670148	1					
ANR	2670292	Identifier	amh		2670148	0					
ANR	2670293	Identifier	begin		2670148	1					
ANR	2670294	ExpressionStatement	amh . segend = ( void * * ) ( ( int ) amh . begin + ( int ) sizeof ( void * ) )	210:2:6394:6452	2670148	7	True				
ANR	2670295	AssignmentExpression	amh . segend = ( void * * ) ( ( int ) amh . begin + ( int ) sizeof ( void * ) )		2670148	0		=			
ANR	2670296	MemberAccess	amh . segend		2670148	0					
ANR	2670297	Identifier	amh		2670148	0					
ANR	2670298	Identifier	segend		2670148	1					
ANR	2670299	CastExpression	( void * * ) ( ( int ) amh . begin + ( int ) sizeof ( void * ) )		2670148	1					
ANR	2670300	CastTarget	void * *		2670148	0					
ANR	2670301	AdditiveExpression	( int ) amh . begin + ( int ) sizeof ( void * )		2670148	1		+			
ANR	2670302	CastExpression	( int ) amh . begin		2670148	0					
ANR	2670303	CastTarget	int		2670148	0					
ANR	2670304	MemberAccess	amh . begin		2670148	1					
ANR	2670305	Identifier	amh		2670148	0					
ANR	2670306	Identifier	begin		2670148	1					
ANR	2670307	CastExpression	( int ) sizeof ( void * )		2670148	1					
ANR	2670308	CastTarget	int		2670148	0					
ANR	2670309	SizeofExpression	sizeof ( void * )		2670148	1					
ANR	2670310	Sizeof	sizeof		2670148	0					
ANR	2670311	SizeofOperand	void *		2670148	1					
ANR	2670312	ExpressionStatement	* amh . segend = ( void * ) ( ( int ) amh . begin + ( int ) segincr )	211:2:6456:6507	2670148	8	True				
ANR	2670313	AssignmentExpression	* amh . segend = ( void * ) ( ( int ) amh . begin + ( int ) segincr )		2670148	0		=			
ANR	2670314	UnaryOperationExpression	* amh . segend		2670148	0					
ANR	2670315	UnaryOperator	*		2670148	0					
ANR	2670316	MemberAccess	amh . segend		2670148	1					
ANR	2670317	Identifier	amh		2670148	0					
ANR	2670318	Identifier	segend		2670148	1					
ANR	2670319	CastExpression	( void * ) ( ( int ) amh . begin + ( int ) segincr )		2670148	1					
ANR	2670320	CastTarget	void *		2670148	0					
ANR	2670321	AdditiveExpression	( int ) amh . begin + ( int ) segincr		2670148	1		+			
ANR	2670322	CastExpression	( int ) amh . begin		2670148	0					
ANR	2670323	CastTarget	int		2670148	0					
ANR	2670324	MemberAccess	amh . begin		2670148	1					
ANR	2670325	Identifier	amh		2670148	0					
ANR	2670326	Identifier	begin		2670148	1					
ANR	2670327	CastExpression	( int ) segincr		2670148	1					
ANR	2670328	CastTarget	int		2670148	0					
ANR	2670329	Identifier	segincr		2670148	1					
ANR	2670330	ExpressionStatement	* amh . coreend = ( void * ) ( ( int ) amh . corestart + ( int ) incr )	212:2:6511:6564	2670148	9	True				
ANR	2670331	AssignmentExpression	* amh . coreend = ( void * ) ( ( int ) amh . corestart + ( int ) incr )		2670148	0		=			
ANR	2670332	UnaryOperationExpression	* amh . coreend		2670148	0					
ANR	2670333	UnaryOperator	*		2670148	0					
ANR	2670334	MemberAccess	amh . coreend		2670148	1					
ANR	2670335	Identifier	amh		2670148	0					
ANR	2670336	Identifier	coreend		2670148	1					
ANR	2670337	CastExpression	( void * ) ( ( int ) amh . corestart + ( int ) incr )		2670148	1					
ANR	2670338	CastTarget	void *		2670148	0					
ANR	2670339	AdditiveExpression	( int ) amh . corestart + ( int ) incr		2670148	1		+			
ANR	2670340	CastExpression	( int ) amh . corestart		2670148	0					
ANR	2670341	CastTarget	int		2670148	0					
ANR	2670342	MemberAccess	amh . corestart		2670148	1					
ANR	2670343	Identifier	amh		2670148	0					
ANR	2670344	Identifier	corestart		2670148	1					
ANR	2670345	CastExpression	( int ) incr		2670148	1					
ANR	2670346	CastTarget	int		2670148	0					
ANR	2670347	Identifier	incr		2670148	1					
ANR	2670348	ReturnStatement	return amh . corestart ;	213:2:6568:6588	2670148	10	True				
ANR	2670349	MemberAccess	amh . corestart		2670148	0					
ANR	2670350	Identifier	amh		2670148	0					
ANR	2670351	Identifier	corestart		2670148	1					
ANR	2670352	ElseStatement	else		2670148	0					
ANR	2670353	IfStatement	if ( incr == 0 )		2670148	0					
ANR	2670354	Condition	incr == 0	214:12:6602:6610	2670148	0	True				
ANR	2670355	EqualityExpression	incr == 0		2670148	0		==			
ANR	2670356	Identifier	incr		2670148	0					
ANR	2670357	PrimaryExpression	0		2670148	1					
ANR	2670358	CompoundStatement		32:23:1392:1392	2670148	1					
ANR	2670359	ReturnStatement	return * amh . coreend ;	215:2:6617:6636	2670148	0	True				
ANR	2670360	UnaryOperationExpression	* amh . coreend		2670148	0					
ANR	2670361	UnaryOperator	*		2670148	0					
ANR	2670362	MemberAccess	amh . coreend		2670148	1					
ANR	2670363	Identifier	amh		2670148	0					
ANR	2670364	Identifier	coreend		2670148	1					
ANR	2670365	ElseStatement	else		2670148	0					
ANR	2670366	CompoundStatement		35:2:1429:1459	2670148	0					
ANR	2670367	IdentifierDeclStatement	void * old_break = * amh . coreend ;	217:2:6650:6680	2670148	0	True				
ANR	2670368	IdentifierDecl	* old_break = * amh . coreend		2670148	0					
ANR	2670369	IdentifierDeclType	void *		2670148	0					
ANR	2670370	Identifier	old_break		2670148	1					
ANR	2670371	AssignmentExpression	* old_break = * amh . coreend		2670148	2		=			
ANR	2670372	Identifier	old_break		2670148	0					
ANR	2670373	UnaryOperationExpression	* amh . coreend		2670148	1					
ANR	2670374	UnaryOperator	*		2670148	0					
ANR	2670375	MemberAccess	amh . coreend		2670148	1					
ANR	2670376	Identifier	amh		2670148	0					
ANR	2670377	Identifier	coreend		2670148	1					
ANR	2670378	ExpressionStatement	* amh . coreend = ( void * ) ( ( int ) * amh . coreend + ( int ) incr )	218:2:6684:6738	2670148	1	True				
ANR	2670379	AssignmentExpression	* amh . coreend = ( void * ) ( ( int ) * amh . coreend + ( int ) incr )		2670148	0		=			
ANR	2670380	UnaryOperationExpression	* amh . coreend		2670148	0					
ANR	2670381	UnaryOperator	*		2670148	0					
ANR	2670382	MemberAccess	amh . coreend		2670148	1					
ANR	2670383	Identifier	amh		2670148	0					
ANR	2670384	Identifier	coreend		2670148	1					
ANR	2670385	CastExpression	( void * ) ( ( int ) * amh . coreend + ( int ) incr )		2670148	1					
ANR	2670386	CastTarget	void *		2670148	0					
ANR	2670387	AdditiveExpression	( int ) * amh . coreend + ( int ) incr		2670148	1		+			
ANR	2670388	CastExpression	( int ) * amh . coreend		2670148	0					
ANR	2670389	CastTarget	int		2670148	0					
ANR	2670390	UnaryOperationExpression	* amh . coreend		2670148	1					
ANR	2670391	UnaryOperator	*		2670148	0					
ANR	2670392	MemberAccess	amh . coreend		2670148	1					
ANR	2670393	Identifier	amh		2670148	0					
ANR	2670394	Identifier	coreend		2670148	1					
ANR	2670395	CastExpression	( int ) incr		2670148	1					
ANR	2670396	CastTarget	int		2670148	0					
ANR	2670397	Identifier	incr		2670148	1					
ANR	2670398	IfStatement	if ( * amh . coreend > * amh . segend )		2670148	2					
ANR	2670399	Condition	* amh . coreend > * amh . segend	219:6:6746:6771	2670148	0	True				
ANR	2670400	RelationalExpression	* amh . coreend > * amh . segend		2670148	0		>			
ANR	2670401	UnaryOperationExpression	* amh . coreend		2670148	0					
ANR	2670402	UnaryOperator	*		2670148	0					
ANR	2670403	MemberAccess	amh . coreend		2670148	1					
ANR	2670404	Identifier	amh		2670148	0					
ANR	2670405	Identifier	coreend		2670148	1					
ANR	2670406	UnaryOperationExpression	* amh . segend		2670148	1					
ANR	2670407	UnaryOperator	*		2670148	0					
ANR	2670408	MemberAccess	amh . segend		2670148	1					
ANR	2670409	Identifier	amh		2670148	0					
ANR	2670410	Identifier	segend		2670148	1					
ANR	2670411	CompoundStatement		38:3:1558:1655	2670148	1					
ANR	2670412	IdentifierDeclStatement	int segincr = ( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize ;	220:3:6779:6876	2670148	0	True				
ANR	2670413	IdentifierDecl	segincr = ( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize		2670148	0					
ANR	2670414	IdentifierDeclType	int		2670148	0					
ANR	2670415	Identifier	segincr		2670148	1					
ANR	2670416	AssignmentExpression	segincr = ( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize		2670148	2		=			
ANR	2670417	Identifier	segincr		2670148	0					
ANR	2670418	MultiplicativeExpression	( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize		2670148	1		*			
ANR	2670419	CastExpression	( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 )		2670148	0					
ANR	2670420	CastTarget	int		2670148	0					
ANR	2670421	AdditiveExpression	( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1		2670148	1		+			
ANR	2670422	MultiplicativeExpression	( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize		2670148	0		/			
ANR	2670423	AdditiveExpression	( int ) * amh . coreend - ( int ) * amh . segend		2670148	0		-			
ANR	2670424	CastExpression	( int ) * amh . coreend		2670148	0					
ANR	2670425	CastTarget	int		2670148	0					
ANR	2670426	UnaryOperationExpression	* amh . coreend		2670148	1					
ANR	2670427	UnaryOperator	*		2670148	0					
ANR	2670428	MemberAccess	amh . coreend		2670148	1					
ANR	2670429	Identifier	amh		2670148	0					
ANR	2670430	Identifier	coreend		2670148	1					
ANR	2670431	CastExpression	( int ) * amh . segend		2670148	1					
ANR	2670432	CastTarget	int		2670148	0					
ANR	2670433	UnaryOperationExpression	* amh . segend		2670148	1					
ANR	2670434	UnaryOperator	*		2670148	0					
ANR	2670435	MemberAccess	amh . segend		2670148	1					
ANR	2670436	Identifier	amh		2670148	0					
ANR	2670437	Identifier	segend		2670148	1					
ANR	2670438	CastExpression	( int ) amh . pagesize		2670148	1					
ANR	2670439	CastTarget	int		2670148	0					
ANR	2670440	MemberAccess	amh . pagesize		2670148	1					
ANR	2670441	Identifier	amh		2670148	0					
ANR	2670442	Identifier	pagesize		2670148	1					
ANR	2670443	PrimaryExpression	1		2670148	1					
ANR	2670444	CastExpression	( int ) amh . pagesize		2670148	1					
ANR	2670445	CastTarget	int		2670148	0					
ANR	2670446	MemberAccess	amh . pagesize		2670148	1					
ANR	2670447	Identifier	amh		2670148	0					
ANR	2670448	Identifier	pagesize		2670148	1					
ANR	2670449	IfStatement	if ( ( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin > ALT_HEAP_SIZE )		2670148	1					
ANR	2670450	Condition	( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin > ALT_HEAP_SIZE	221:7:6885:6945	2670148	0	True				
ANR	2670451	RelationalExpression	( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin > ALT_HEAP_SIZE		2670148	0		>			
ANR	2670452	AdditiveExpression	( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin		2670148	0		+			
ANR	2670453	CastExpression	( int ) * amh . coreend		2670148	0					
ANR	2670454	CastTarget	int		2670148	0					
ANR	2670455	UnaryOperationExpression	* amh . coreend		2670148	1					
ANR	2670456	UnaryOperator	*		2670148	0					
ANR	2670457	MemberAccess	amh . coreend		2670148	1					
ANR	2670458	Identifier	amh		2670148	0					
ANR	2670459	Identifier	coreend		2670148	1					
ANR	2670460	AdditiveExpression	( int ) segincr - ( int ) amh . begin		2670148	1		-			
ANR	2670461	CastExpression	( int ) segincr		2670148	0					
ANR	2670462	CastTarget	int		2670148	0					
ANR	2670463	Identifier	segincr		2670148	1					
ANR	2670464	CastExpression	( int ) amh . begin		2670148	1					
ANR	2670465	CastTarget	int		2670148	0					
ANR	2670466	MemberAccess	amh . begin		2670148	1					
ANR	2670467	Identifier	amh		2670148	0					
ANR	2670468	Identifier	begin		2670148	1					
ANR	2670469	Identifier	ALT_HEAP_SIZE		2670148	1					
ANR	2670470	CompoundStatement		39:70:1727:1727	2670148	1					
ANR	2670471	ExpressionStatement	"dprintf ( D_ALWAYS , ""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"" , ALT_HEAP_SIZE )"	222:4:6954:7052	2670148	0	True				
ANR	2670472	CallExpression	"dprintf ( D_ALWAYS , ""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"" , ALT_HEAP_SIZE )"		2670148	0					
ANR	2670473	Callee	dprintf		2670148	0					
ANR	2670474	Identifier	dprintf		2670148	0					
ANR	2670475	ArgumentList	D_ALWAYS		2670148	1					
ANR	2670476	Argument	D_ALWAYS		2670148	0					
ANR	2670477	Identifier	D_ALWAYS		2670148	0					
ANR	2670478	Argument	"""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"""		2670148	1					
ANR	2670479	PrimaryExpression	"""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"""		2670148	0					
ANR	2670480	Argument	ALT_HEAP_SIZE		2670148	2					
ANR	2670481	Identifier	ALT_HEAP_SIZE		2670148	0					
ANR	2670482	ExpressionStatement	Suicide ( )	225:4:7058:7067	2670148	1	True				
ANR	2670483	CallExpression	Suicide ( )		2670148	0					
ANR	2670484	Callee	Suicide		2670148	0					
ANR	2670485	Identifier	Suicide		2670148	0					
ANR	2670486	ArgumentList			2670148	1					
ANR	2670487	IfStatement	"if ( condor_map_seg ( * amh . segend , segincr ) != * amh . segend )"		2670148	2					
ANR	2670488	Condition	"condor_map_seg ( * amh . segend , segincr ) != * amh . segend"	227:7:7081:7131	2670148	0	True				
ANR	2670489	EqualityExpression	"condor_map_seg ( * amh . segend , segincr ) != * amh . segend"		2670148	0		!=			
ANR	2670490	CallExpression	"condor_map_seg ( * amh . segend , segincr )"		2670148	0					
ANR	2670491	Callee	condor_map_seg		2670148	0					
ANR	2670492	Identifier	condor_map_seg		2670148	0					
ANR	2670493	ArgumentList	* amh . segend		2670148	1					
ANR	2670494	Argument	* amh . segend		2670148	0					
ANR	2670495	UnaryOperationExpression	* amh . segend		2670148	0					
ANR	2670496	UnaryOperator	*		2670148	0					
ANR	2670497	MemberAccess	amh . segend		2670148	1					
ANR	2670498	Identifier	amh		2670148	0					
ANR	2670499	Identifier	segend		2670148	1					
ANR	2670500	Argument	segincr		2670148	1					
ANR	2670501	Identifier	segincr		2670148	0					
ANR	2670502	UnaryOperationExpression	* amh . segend		2670148	1					
ANR	2670503	UnaryOperator	*		2670148	0					
ANR	2670504	MemberAccess	amh . segend		2670148	1					
ANR	2670505	Identifier	amh		2670148	0					
ANR	2670506	Identifier	segend		2670148	1					
ANR	2670507	CompoundStatement		45:60:1913:1913	2670148	1					
ANR	2670508	Statement	dprintf	228:4:7140:7146	2670148	0	True				
ANR	2670509	Statement	(	228:11:7147:7147	2670148	1	True				
ANR	2670510	Statement	D_ALWAYS	228:12:7148:7155	2670148	2	True				
ANR	2670511	Statement	","	228:20:7156:7156	2670148	3	True				
ANR	2670512	Statement	"""failed to allocate contiguous segments in """	228:22:7158:7201	2670148	4	True				
ANR	2670513	Statement	"""condor_morecore!\\n"""	229:6:7209:7228	2670148	5	True				
ANR	2670514	Statement	)	229:26:7229:7229	2670148	6	True				
ANR	2670515	ExpressionStatement		229:27:7230:7230	2670148	7	True				
ANR	2670516	ExpressionStatement	Suicide ( )	230:4:7236:7245	2670148	8	True				
ANR	2670517	CallExpression	Suicide ( )		2670148	0					
ANR	2670518	Callee	Suicide		2670148	0					
ANR	2670519	Identifier	Suicide		2670148	0					
ANR	2670520	ArgumentList			2670148	1					
ANR	2670521	ExpressionStatement	* amh . segend = ( void * ) ( ( int ) * amh . segend + ( int ) segincr )	232:3:7255:7310	2670148	3	True				
ANR	2670522	AssignmentExpression	* amh . segend = ( void * ) ( ( int ) * amh . segend + ( int ) segincr )		2670148	0		=			
ANR	2670523	UnaryOperationExpression	* amh . segend		2670148	0					
ANR	2670524	UnaryOperator	*		2670148	0					
ANR	2670525	MemberAccess	amh . segend		2670148	1					
ANR	2670526	Identifier	amh		2670148	0					
ANR	2670527	Identifier	segend		2670148	1					
ANR	2670528	CastExpression	( void * ) ( ( int ) * amh . segend + ( int ) segincr )		2670148	1					
ANR	2670529	CastTarget	void *		2670148	0					
ANR	2670530	AdditiveExpression	( int ) * amh . segend + ( int ) segincr		2670148	1		+			
ANR	2670531	CastExpression	( int ) * amh . segend		2670148	0					
ANR	2670532	CastTarget	int		2670148	0					
ANR	2670533	UnaryOperationExpression	* amh . segend		2670148	1					
ANR	2670534	UnaryOperator	*		2670148	0					
ANR	2670535	MemberAccess	amh . segend		2670148	1					
ANR	2670536	Identifier	amh		2670148	0					
ANR	2670537	Identifier	segend		2670148	1					
ANR	2670538	CastExpression	( int ) segincr		2670148	1					
ANR	2670539	CastTarget	int		2670148	0					
ANR	2670540	Identifier	segincr		2670148	1					
ANR	2670541	ReturnStatement	return old_break ;	234:2:7318:7334	2670148	3	True				
ANR	2670542	Identifier	old_break		2670148	0					
ANR	2670543	ReturnType	void *		2670148	1					
ANR	2670544	Identifier	condor_morecore		2670148	2					
ANR	2670545	ParameterList	int incr		2670148	3					
ANR	2670546	Parameter	int incr	182:22:5210:5217	2670148	0	True				
ANR	2670547	ParameterType	int		2670148	0					
ANR	2670548	Identifier	incr		2670148	1					
ANR	2670549	CFGEntryNode	ENTRY		2670148		True				
ANR	2670550	CFGExitNode	EXIT		2670148		True				
ANR	2670551	Symbol	* amh . coreend		2670148						
ANR	2670552	Symbol	NULL		2670148						
ANR	2670553	Symbol	* amh . segend		2670148						
ANR	2670554	Symbol	incr		2670148						
ANR	2670555	Symbol	amh . corestart		2670148						
ANR	2670556	Symbol	D_ALWAYS		2670148						
ANR	2670557	Symbol	ALT_HEAP_SIZE		2670148						
ANR	2670558	Symbol	segincr		2670148						
ANR	2670559	Symbol	condor_malloc_getpagesize		2670148						
ANR	2670560	Symbol	MyImage . FindAltHeap		2670148						
ANR	2670561	Symbol	amh . segend		2670148						
ANR	2670562	Symbol	old_break		2670148						
ANR	2670563	Symbol	* amh		2670148						
ANR	2670564	Symbol	amh . pagesize		2670148						
ANR	2670565	Symbol	malloc_static_data		2670148						
ANR	2670566	Symbol	condor_malloc_init_size		2670148						
ANR	2670567	Symbol	amh		2670148						
ANR	2670568	Symbol	condor_map_seg		2670148						
ANR	2670569	Symbol	amh . begin		2670148						
ANR	2670570	Symbol	MyImage		2670148						
ANR	2670571	Symbol	amh . coreend		2670148						
ANR	2670572	DeclStmt									
ANR	2670573	Decl							uInt	uInt	total_size
ANR	2670574	DeclStmt									
ANR	2670575	Decl							void	void *	chunk
ANR	2670576	DeclStmt									
ANR	2670577	Decl							void	void *	chunk_start
ANR	2670578	DeclStmt									
ANR	2670579	Decl							void	void *	chunk_end
ANR	2670580	DeclStmt									
ANR	2670581	Decl							items	items *	size
ANR	2670582	Function	Header :: Init	394:0:12891:13017							
ANR	2670583	FunctionDef	Header :: Init ()		2670582	0					
ANR	2670584	CompoundStatement		396:0:12911:13017	2670582	0					
ANR	2670585	IfStatement	if ( condor_compress_ckpt )		2670582	0					
ANR	2670586	Condition	condor_compress_ckpt	397:5:12918:12937	2670582	0	True				
ANR	2670587	Identifier	condor_compress_ckpt		2670582	0					
ANR	2670588	ExpressionStatement	magic = COMPRESS_MAGIC	398:2:12942:12964	2670582	1	True				
ANR	2670589	AssignmentExpression	magic = COMPRESS_MAGIC		2670582	0		=			
ANR	2670590	Identifier	magic		2670582	0					
ANR	2670591	Identifier	COMPRESS_MAGIC		2670582	1					
ANR	2670592	ElseStatement	else		2670582	0					
ANR	2670593	ExpressionStatement	magic = MAGIC	400:2:12974:12987	2670582	0	True				
ANR	2670594	AssignmentExpression	magic = MAGIC		2670582	0		=			
ANR	2670595	Identifier	magic		2670582	0					
ANR	2670596	Identifier	MAGIC		2670582	1					
ANR	2670597	ExpressionStatement	n_segs = 0	401:1:12990:13000	2670582	1	True				
ANR	2670598	AssignmentExpression	n_segs = 0		2670582	0		=			
ANR	2670599	Identifier	n_segs		2670582	0					
ANR	2670600	PrimaryExpression	0		2670582	1					
ANR	2670601	ExpressionStatement	alt_heap = 0	402:1:13003:13015	2670582	2	True				
ANR	2670602	AssignmentExpression	alt_heap = 0		2670582	0		=			
ANR	2670603	Identifier	alt_heap		2670582	0					
ANR	2670604	PrimaryExpression	0		2670582	1					
ANR	2670605	ReturnType	void		2670582	1					
ANR	2670606	Identifier	Header :: Init		2670582	2					
ANR	2670607	ParameterList			2670582	3					
ANR	2670608	CFGEntryNode	ENTRY		2670582		True				
ANR	2670609	CFGExitNode	EXIT		2670582		True				
ANR	2670610	Symbol	magic		2670582						
ANR	2670611	Symbol	alt_heap		2670582						
ANR	2670612	Symbol	condor_compress_ckpt		2670582						
ANR	2670613	Symbol	MAGIC		2670582						
ANR	2670614	Symbol	COMPRESS_MAGIC		2670582						
ANR	2670615	Symbol	n_segs		2670582						
ANR	2670616	Function	Header :: ResetMagic	405:0:13020:13124							
ANR	2670617	FunctionDef	Header :: ResetMagic ()		2670616	0					
ANR	2670618	CompoundStatement		407:0:13046:13124	2670616	0					
ANR	2670619	IfStatement	if ( condor_compress_ckpt )		2670616	0					
ANR	2670620	Condition	condor_compress_ckpt	408:5:13053:13072	2670616	0	True				
ANR	2670621	Identifier	condor_compress_ckpt		2670616	0					
ANR	2670622	ExpressionStatement	magic = COMPRESS_MAGIC	409:2:13077:13099	2670616	1	True				
ANR	2670623	AssignmentExpression	magic = COMPRESS_MAGIC		2670616	0		=			
ANR	2670624	Identifier	magic		2670616	0					
ANR	2670625	Identifier	COMPRESS_MAGIC		2670616	1					
ANR	2670626	ElseStatement	else		2670616	0					
ANR	2670627	ExpressionStatement	magic = MAGIC	411:2:13109:13122	2670616	0	True				
ANR	2670628	AssignmentExpression	magic = MAGIC		2670616	0		=			
ANR	2670629	Identifier	magic		2670616	0					
ANR	2670630	Identifier	MAGIC		2670616	1					
ANR	2670631	ReturnType	void		2670616	1					
ANR	2670632	Identifier	Header :: ResetMagic		2670616	2					
ANR	2670633	ParameterList			2670616	3					
ANR	2670634	CFGEntryNode	ENTRY		2670616		True				
ANR	2670635	CFGExitNode	EXIT		2670616		True				
ANR	2670636	Symbol	magic		2670616						
ANR	2670637	Symbol	condor_compress_ckpt		2670616						
ANR	2670638	Symbol	MAGIC		2670616						
ANR	2670639	Symbol	COMPRESS_MAGIC		2670616						
ANR	2670640	Function	Header :: Display	414:0:13127:13205							
ANR	2670641	FunctionDef	Header :: Display ()		2670640	0					
ANR	2670642	CompoundStatement		416:0:13150:13205	2670640	0					
ANR	2670643	Statement	DUMP	417:1:13153:13156	2670640	0	True				
ANR	2670644	Statement	(	417:5:13157:13157	2670640	1	True				
ANR	2670645	Statement	""" """	417:7:13159:13161	2670640	2	True				
ANR	2670646	Statement	","	417:10:13162:13162	2670640	3	True				
ANR	2670647	Statement	magic	417:12:13164:13168	2670640	4	True				
ANR	2670648	Statement	","	417:17:13169:13169	2670640	5	True				
ANR	2670649	Statement	0	417:19:13171:13171	2670640	6	True				
ANR	2670650	Statement	x	417:20:13172:13172	2670640	7	True				
ANR	2670651	Statement	%	417:21:13173:13173	2670640	8	True				
ANR	2670652	Statement	X	417:22:13174:13174	2670640	9	True				
ANR	2670653	Statement	)	417:24:13176:13176	2670640	10	True				
ANR	2670654	ExpressionStatement		417:25:13177:13177	2670640	11	True				
ANR	2670655	Statement	DUMP	418:1:13180:13183	2670640	12	True				
ANR	2670656	Statement	(	418:5:13184:13184	2670640	13	True				
ANR	2670657	Statement	""" """	418:7:13186:13188	2670640	14	True				
ANR	2670658	Statement	","	418:10:13189:13189	2670640	15	True				
ANR	2670659	Statement	n_segs	418:12:13191:13196	2670640	16	True				
ANR	2670660	Statement	","	418:18:13197:13197	2670640	17	True				
ANR	2670661	Statement	%	418:20:13199:13199	2670640	18	True				
ANR	2670662	Statement	d	418:21:13200:13200	2670640	19	True				
ANR	2670663	Statement	)	418:23:13202:13202	2670640	20	True				
ANR	2670664	ExpressionStatement		418:24:13203:13203	2670640	21	True				
ANR	2670665	ReturnType	void		2670640	1					
ANR	2670666	Identifier	Header :: Display		2670640	2					
ANR	2670667	ParameterList			2670640	3					
ANR	2670668	CFGEntryNode	ENTRY		2670640		True				
ANR	2670669	CFGExitNode	EXIT		2670640		True				
ANR	2670670	Function	SegMap :: Init	421:0:13208:13344							
ANR	2670671	FunctionDef	"SegMap :: Init (const char * n , RAW_ADDR c , long l , int p)"		2670670	0					
ANR	2670672	CompoundStatement		423:0:13270:13344	2670670	0					
ANR	2670673	ExpressionStatement	"strcpy ( name , n )"	424:1:13273:13290	2670670	0	True				
ANR	2670674	CallExpression	"strcpy ( name , n )"		2670670	0					
ANR	2670675	Callee	strcpy		2670670	0					
ANR	2670676	Identifier	strcpy		2670670	0					
ANR	2670677	ArgumentList	name		2670670	1					
ANR	2670678	Argument	name		2670670	0					
ANR	2670679	Identifier	name		2670670	0					
ANR	2670680	Argument	n		2670670	1					
ANR	2670681	Identifier	n		2670670	0					
ANR	2670682	ExpressionStatement	file_loc = - 1	425:1:13293:13306	2670670	1	True				
ANR	2670683	AssignmentExpression	file_loc = - 1		2670670	0		=			
ANR	2670684	Identifier	file_loc		2670670	0					
ANR	2670685	UnaryOperationExpression	- 1		2670670	1					
ANR	2670686	UnaryOperator	-		2670670	0					
ANR	2670687	PrimaryExpression	1		2670670	1					
ANR	2670688	ExpressionStatement	core_loc = c	426:1:13309:13321	2670670	2	True				
ANR	2670689	AssignmentExpression	core_loc = c		2670670	0		=			
ANR	2670690	Identifier	core_loc		2670670	0					
ANR	2670691	Identifier	c		2670670	1					
ANR	2670692	ExpressionStatement	len = l	427:1:13324:13331	2670670	3	True				
ANR	2670693	AssignmentExpression	len = l		2670670	0		=			
ANR	2670694	Identifier	len		2670670	0					
ANR	2670695	Identifier	l		2670670	1					
ANR	2670696	ExpressionStatement	prot = p	428:1:13334:13342	2670670	4	True				
ANR	2670697	AssignmentExpression	prot = p		2670670	0		=			
ANR	2670698	Identifier	prot		2670670	0					
ANR	2670699	Identifier	p		2670670	1					
ANR	2670700	ReturnType	void		2670670	1					
ANR	2670701	Identifier	SegMap :: Init		2670670	2					
ANR	2670702	ParameterList	"const char * n , RAW_ADDR c , long l , int p"		2670670	3					
ANR	2670703	Parameter	const char * n	422:14:13227:13239	2670670	0	True				
ANR	2670704	ParameterType	const char *		2670670	0					
ANR	2670705	Identifier	n		2670670	1					
ANR	2670706	Parameter	RAW_ADDR c	422:29:13242:13251	2670670	1	True				
ANR	2670707	ParameterType	RAW_ADDR		2670670	0					
ANR	2670708	Identifier	c		2670670	1					
ANR	2670709	Parameter	long l	422:41:13254:13259	2670670	2	True				
ANR	2670710	ParameterType	long		2670670	0					
ANR	2670711	Identifier	l		2670670	1					
ANR	2670712	Parameter	int p	422:49:13262:13266	2670670	3	True				
ANR	2670713	ParameterType	int		2670670	0					
ANR	2670714	Identifier	p		2670670	1					
ANR	2670715	CFGEntryNode	ENTRY		2670670		True				
ANR	2670716	CFGExitNode	EXIT		2670670		True				
ANR	2670717	Symbol	p		2670670						
ANR	2670718	Symbol	file_loc		2670670						
ANR	2670719	Symbol	c		2670670						
ANR	2670720	Symbol	prot		2670670						
ANR	2670721	Symbol	len		2670670						
ANR	2670722	Symbol	name		2670670						
ANR	2670723	Symbol	l		2670670						
ANR	2670724	Symbol	core_loc		2670670						
ANR	2670725	Symbol	n		2670670						
ANR	2670726	Function	SegMap :: MSync	431:0:13347:14369							
ANR	2670727	FunctionDef	SegMap :: MSync ()		2670726	0					
ANR	2670728	CompoundStatement		433:0:13368:14369	2670726	0					
ANR	2670729	IdentifierDeclStatement	int pagesize = getpagesize ( ) ;	448:1:14114:14142	2670726	0	True				
ANR	2670730	IdentifierDecl	pagesize = getpagesize ( )		2670726	0					
ANR	2670731	IdentifierDeclType	int		2670726	0					
ANR	2670732	Identifier	pagesize		2670726	1					
ANR	2670733	AssignmentExpression	pagesize = getpagesize ( )		2670726	2		=			
ANR	2670734	Identifier	pagesize		2670726	0					
ANR	2670735	CallExpression	getpagesize ( )		2670726	1					
ANR	2670736	Callee	getpagesize		2670726	0					
ANR	2670737	Identifier	getpagesize		2670726	0					
ANR	2670738	ArgumentList			2670726	1					
ANR	2670739	ForStatement	for ( int i = 0 ; i < len ; i += pagesize )		2670726	1					
ANR	2670740	ForInit	int i = 0 ;	449:6:14150:14159	2670726	0	True				
ANR	2670741	IdentifierDeclStatement	int i = 0 ;		2670726	0					
ANR	2670742	IdentifierDecl	i = 0		2670726	0					
ANR	2670743	IdentifierDeclType	int		2670726	0					
ANR	2670744	Identifier	i		2670726	1					
ANR	2670745	AssignmentExpression	i = 0		2670726	2		=			
ANR	2670746	Identifier	i		2670726	0					
ANR	2670747	PrimaryExpression	0		2670726	1					
ANR	2670748	Condition	i < len	449:17:14161:14167	2670726	1	True				
ANR	2670749	RelationalExpression	i < len		2670726	0		<			
ANR	2670750	Identifier	i		2670726	0					
ANR	2670751	Identifier	len		2670726	1					
ANR	2670752	AssignmentExpression	i += pagesize	449:26:14170:14182	2670726	2	True	+=			
ANR	2670753	Identifier	i		2670726	0					
ANR	2670754	Identifier	pagesize		2670726	1					
ANR	2670755	CompoundStatement		17:41:816:816	2670726	3					
ANR	2670756	IfStatement	"if ( msync ( ( char * ) core_loc + i , pagesize , MS_SYNC ) < 0 )"		2670726	0					
ANR	2670757	Condition	"msync ( ( char * ) core_loc + i , pagesize , MS_SYNC ) < 0"	450:6:14193:14240	2670726	0	True				
ANR	2670758	RelationalExpression	"msync ( ( char * ) core_loc + i , pagesize , MS_SYNC ) < 0"		2670726	0		<			
ANR	2670759	CallExpression	"msync ( ( char * ) core_loc + i , pagesize , MS_SYNC )"		2670726	0					
ANR	2670760	Callee	msync		2670726	0					
ANR	2670761	Identifier	msync		2670726	0					
ANR	2670762	ArgumentList	( char * ) core_loc + i		2670726	1					
ANR	2670763	Argument	( char * ) core_loc + i		2670726	0					
ANR	2670764	AdditiveExpression	( char * ) core_loc + i		2670726	0		+			
ANR	2670765	CastExpression	( char * ) core_loc		2670726	0					
ANR	2670766	CastTarget	char *		2670726	0					
ANR	2670767	Identifier	core_loc		2670726	1					
ANR	2670768	Identifier	i		2670726	1					
ANR	2670769	Argument	pagesize		2670726	1					
ANR	2670770	Identifier	pagesize		2670726	0					
ANR	2670771	Argument	MS_SYNC		2670726	2					
ANR	2670772	Identifier	MS_SYNC		2670726	0					
ANR	2670773	PrimaryExpression	0		2670726	1					
ANR	2670774	CompoundStatement		18:56:874:874	2670726	1					
ANR	2670775	ExpressionStatement	"dprintf ( D_ALWAYS , ""msync(%lx, %d) failed with errno = %d\\n"" , ( unsigned long ) core_loc + i , pagesize , errno )"	451:3:14248:14360	2670726	0	True				
ANR	2670776	CallExpression	"dprintf ( D_ALWAYS , ""msync(%lx, %d) failed with errno = %d\\n"" , ( unsigned long ) core_loc + i , pagesize , errno )"		2670726	0					
ANR	2670777	Callee	dprintf		2670726	0					
ANR	2670778	Identifier	dprintf		2670726	0					
ANR	2670779	ArgumentList	D_ALWAYS		2670726	1					
ANR	2670780	Argument	D_ALWAYS		2670726	0					
ANR	2670781	Identifier	D_ALWAYS		2670726	0					
ANR	2670782	Argument	"""msync(%lx, %d) failed with errno = %d\\n"""		2670726	1					
ANR	2670783	PrimaryExpression	"""msync(%lx, %d) failed with errno = %d\\n"""		2670726	0					
ANR	2670784	Argument	( unsigned long ) core_loc + i		2670726	2					
ANR	2670785	AdditiveExpression	( unsigned long ) core_loc + i		2670726	0		+			
ANR	2670786	CastExpression	( unsigned long ) core_loc		2670726	0					
ANR	2670787	CastTarget	unsigned long		2670726	0					
ANR	2670788	Identifier	core_loc		2670726	1					
ANR	2670789	Identifier	i		2670726	1					
ANR	2670790	Argument	pagesize		2670726	3					
ANR	2670791	Identifier	pagesize		2670726	0					
ANR	2670792	Argument	errno		2670726	4					
ANR	2670793	Identifier	errno		2670726	0					
ANR	2670794	ReturnType	void		2670726	1					
ANR	2670795	Identifier	SegMap :: MSync		2670726	2					
ANR	2670796	ParameterList			2670726	3					
ANR	2670797	CFGEntryNode	ENTRY		2670726		True				
ANR	2670798	CFGExitNode	EXIT		2670726		True				
ANR	2670799	Symbol	errno		2670726						
ANR	2670800	Symbol	len		2670726						
ANR	2670801	Symbol	MS_SYNC		2670726						
ANR	2670802	Symbol	pagesize		2670726						
ANR	2670803	Symbol	D_ALWAYS		2670726						
ANR	2670804	Symbol	i		2670726						
ANR	2670805	Symbol	core_loc		2670726						
ANR	2670806	Symbol	getpagesize		2670726						
ANR	2670807	Symbol	msync		2670726						
ANR	2670808	Function	SegMap :: Display	457:0:14372:14654							
ANR	2670809	FunctionDef	SegMap :: Display ()		2670808	0					
ANR	2670810	CompoundStatement		459:0:14395:14654	2670808	0					
ANR	2670811	Statement	DUMP	460:1:14398:14401	2670808	0	True				
ANR	2670812	Statement	(	460:5:14402:14402	2670808	1	True				
ANR	2670813	Statement	""" """	460:7:14404:14406	2670808	2	True				
ANR	2670814	Statement	","	460:10:14407:14407	2670808	3	True				
ANR	2670815	Statement	name	460:12:14409:14412	2670808	4	True				
ANR	2670816	Statement	","	460:16:14413:14413	2670808	5	True				
ANR	2670817	Statement	%	460:18:14415:14415	2670808	6	True				
ANR	2670818	Statement	s	460:19:14416:14416	2670808	7	True				
ANR	2670819	Statement	)	460:21:14418:14418	2670808	8	True				
ANR	2670820	ExpressionStatement		460:22:14419:14419	2670808	9	True				
ANR	2670821	ExpressionStatement	"printf ( "" file_loc = %lld (0x%llX)\\n"" , ( long long ) file_loc , ( long long ) file_loc )"	462:1:14423:14510	2670808	10	True				
ANR	2670822	CallExpression	"printf ( "" file_loc = %lld (0x%llX)\\n"" , ( long long ) file_loc , ( long long ) file_loc )"		2670808	0					
ANR	2670823	Callee	printf		2670808	0					
ANR	2670824	Identifier	printf		2670808	0					
ANR	2670825	ArgumentList	""" file_loc = %lld (0x%llX)\\n"""		2670808	1					
ANR	2670826	Argument	""" file_loc = %lld (0x%llX)\\n"""		2670808	0					
ANR	2670827	PrimaryExpression	""" file_loc = %lld (0x%llX)\\n"""		2670808	0					
ANR	2670828	Argument	( long long ) file_loc		2670808	1					
ANR	2670829	CastExpression	( long long ) file_loc		2670808	0					
ANR	2670830	CastTarget	long long		2670808	0					
ANR	2670831	Identifier	file_loc		2670808	1					
ANR	2670832	Argument	( long long ) file_loc		2670808	2					
ANR	2670833	CastExpression	( long long ) file_loc		2670808	0					
ANR	2670834	CastTarget	long long		2670808	0					
ANR	2670835	Identifier	file_loc		2670808	1					
ANR	2670836	ExpressionStatement	"printf ( "" core_loc = %lu (0x%lX)\\n"" , ( unsigned long ) core_loc , ( unsigned long ) core_loc )"	465:1:14513:14606	2670808	11	True				
ANR	2670837	CallExpression	"printf ( "" core_loc = %lu (0x%lX)\\n"" , ( unsigned long ) core_loc , ( unsigned long ) core_loc )"		2670808	0					
ANR	2670838	Callee	printf		2670808	0					
ANR	2670839	Identifier	printf		2670808	0					
ANR	2670840	ArgumentList	""" core_loc = %lu (0x%lX)\\n"""		2670808	1					
ANR	2670841	Argument	""" core_loc = %lu (0x%lX)\\n"""		2670808	0					
ANR	2670842	PrimaryExpression	""" core_loc = %lu (0x%lX)\\n"""		2670808	0					
ANR	2670843	Argument	( unsigned long ) core_loc		2670808	1					
ANR	2670844	CastExpression	( unsigned long ) core_loc		2670808	0					
ANR	2670845	CastTarget	unsigned long		2670808	0					
ANR	2670846	Identifier	core_loc		2670808	1					
ANR	2670847	Argument	( unsigned long ) core_loc		2670808	2					
ANR	2670848	CastExpression	( unsigned long ) core_loc		2670808	0					
ANR	2670849	CastTarget	unsigned long		2670808	0					
ANR	2670850	Identifier	core_loc		2670808	1					
ANR	2670851	ExpressionStatement	"printf ( "" len = %ld (0x%lX)\\n"" , len , len )"	469:1:14610:14652	2670808	12	True				
ANR	2670852	CallExpression	"printf ( "" len = %ld (0x%lX)\\n"" , len , len )"		2670808	0					
ANR	2670853	Callee	printf		2670808	0					
ANR	2670854	Identifier	printf		2670808	0					
ANR	2670855	ArgumentList	""" len = %ld (0x%lX)\\n"""		2670808	1					
ANR	2670856	Argument	""" len = %ld (0x%lX)\\n"""		2670808	0					
ANR	2670857	PrimaryExpression	""" len = %ld (0x%lX)\\n"""		2670808	0					
ANR	2670858	Argument	len		2670808	1					
ANR	2670859	Identifier	len		2670808	0					
ANR	2670860	Argument	len		2670808	2					
ANR	2670861	Identifier	len		2670808	0					
ANR	2670862	ReturnType	void		2670808	1					
ANR	2670863	Identifier	SegMap :: Display		2670808	2					
ANR	2670864	ParameterList			2670808	3					
ANR	2670865	CFGEntryNode	ENTRY		2670808		True				
ANR	2670866	CFGExitNode	EXIT		2670808		True				
ANR	2670867	Symbol	file_loc		2670808						
ANR	2670868	Symbol	len		2670808						
ANR	2670869	Symbol	core_loc		2670808						
ANR	2670870	Function	Image :: SetFd	473:0:14658:14706							
ANR	2670871	FunctionDef	Image :: SetFd (int f)		2670870	0					
ANR	2670872	CompoundStatement		475:0:14685:14706	2670870	0					
ANR	2670873	ExpressionStatement	fd = f	476:1:14688:14694	2670870	0	True				
ANR	2670874	AssignmentExpression	fd = f		2670870	0		=			
ANR	2670875	Identifier	fd		2670870	0					
ANR	2670876	Identifier	f		2670870	1					
ANR	2670877	ExpressionStatement	pos = 0	477:1:14697:14704	2670870	1	True				
ANR	2670878	AssignmentExpression	pos = 0		2670870	0		=			
ANR	2670879	Identifier	pos		2670870	0					
ANR	2670880	PrimaryExpression	0		2670870	1					
ANR	2670881	ReturnType	void		2670870	1					
ANR	2670882	Identifier	Image :: SetFd		2670870	2					
ANR	2670883	ParameterList	int f		2670870	3					
ANR	2670884	Parameter	int f	474:14:14677:14681	2670870	0	True				
ANR	2670885	ParameterType	int		2670870	0					
ANR	2670886	Identifier	f		2670870	1					
ANR	2670887	CFGEntryNode	ENTRY		2670870		True				
ANR	2670888	CFGExitNode	EXIT		2670870		True				
ANR	2670889	Symbol	pos		2670870						
ANR	2670890	Symbol	f		2670870						
ANR	2670891	Symbol	fd		2670870						
ANR	2670892	Function	Image :: SetFileName	480:0:14709:15131							
ANR	2670893	FunctionDef	Image :: SetFileName (const char * ckpt_name)		2670892	0					
ANR	2670894	CompoundStatement		482:0:14758:15131	2670892	0					
ANR	2670895	Statement	static	483:1:14761:14766	2670892	0	True				
ANR	2670896	IdentifierDeclStatement	bool done_once = false ;	483:8:14768:14790	2670892	1	True				
ANR	2670897	IdentifierDecl	done_once = false		2670892	0					
ANR	2670898	IdentifierDeclType	bool		2670892	0					
ANR	2670899	Identifier	done_once		2670892	1					
ANR	2670900	AssignmentExpression	done_once = false		2670892	2		=			
ANR	2670901	Identifier	false		2670892	0					
ANR	2670902	Identifier	false		2670892	1					
ANR	2670903	IfStatement	if ( done_once && file_name )		2670892	2					
ANR	2670904	Condition	done_once && file_name	484:4:14796:14817	2670892	0	True				
ANR	2670905	AndExpression	done_once && file_name		2670892	0		&&			
ANR	2670906	Identifier	done_once		2670892	0					
ANR	2670907	Identifier	file_name		2670892	1					
ANR	2670908	Statement	delete	485:2:14823:14828	2670892	1	True				
ANR	2670909	Statement	[	485:8:14829:14829	2670892	3	True				
ANR	2670910	Statement	]	485:9:14830:14830	2670892	4	True				
ANR	2670911	ExpressionStatement	file_name	485:11:14832:14841	2670892	5	True				
ANR	2670912	Identifier	file_name		2670892	0					
ANR	2670913	ExpressionStatement	file_name = new char [ strlen ( ckpt_name ) + 1 ]	488:1:14879:14925	2670892	6	True				
ANR	2670914	AssignmentExpression	file_name = new char [ strlen ( ckpt_name ) + 1 ]		2670892	0		=			
ANR	2670915	Identifier	file_name		2670892	0					
ANR	2670916	AdditiveExpression	strlen ( ckpt_name ) + 1		2670892	1		+			
ANR	2670917	CallExpression	strlen ( ckpt_name )		2670892	0					
ANR	2670918	Callee	strlen		2670892	0					
ANR	2670919	Identifier	strlen		2670892	0					
ANR	2670920	ArgumentList	ckpt_name		2670892	1					
ANR	2670921	Argument	ckpt_name		2670892	0					
ANR	2670922	Identifier	ckpt_name		2670892	0					
ANR	2670923	PrimaryExpression	1		2670892	1					
ANR	2670924	IfStatement	if ( file_name == NULL )		2670892	7					
ANR	2670925	Condition	file_name == NULL	489:4:14931:14947	2670892	0	True				
ANR	2670926	EqualityExpression	file_name == NULL		2670892	0		==			
ANR	2670927	Identifier	file_name		2670892	0					
ANR	2670928	Identifier	NULL		2670892	1					
ANR	2670929	CompoundStatement		8:23:191:191	2670892	1					
ANR	2670930	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal error: Could not allocate memory for ckpt_filename\\n"" )"	490:2:14954:15040	2670892	0	True				
ANR	2670931	CallExpression	"dprintf ( D_ALWAYS , ""Internal error: Could not allocate memory for ckpt_filename\\n"" )"		2670892	0					
ANR	2670932	Callee	dprintf		2670892	0					
ANR	2670933	Identifier	dprintf		2670892	0					
ANR	2670934	ArgumentList	D_ALWAYS		2670892	1					
ANR	2670935	Argument	D_ALWAYS		2670892	0					
ANR	2670936	Identifier	D_ALWAYS		2670892	0					
ANR	2670937	Argument	"""Internal error: Could not allocate memory for ckpt_filename\\n"""		2670892	1					
ANR	2670938	PrimaryExpression	"""Internal error: Could not allocate memory for ckpt_filename\\n"""		2670892	0					
ANR	2670939	ExpressionStatement	Suicide ( )	492:2:15044:15053	2670892	1	True				
ANR	2670940	CallExpression	Suicide ( )		2670892	0					
ANR	2670941	Callee	Suicide		2670892	0					
ANR	2670942	Identifier	Suicide		2670892	0					
ANR	2670943	ArgumentList			2670892	1					
ANR	2670944	ExpressionStatement	"strcpy ( file_name , ckpt_name )"	494:1:15059:15089	2670892	8	True				
ANR	2670945	CallExpression	"strcpy ( file_name , ckpt_name )"		2670892	0					
ANR	2670946	Callee	strcpy		2670892	0					
ANR	2670947	Identifier	strcpy		2670892	0					
ANR	2670948	ArgumentList	file_name		2670892	1					
ANR	2670949	Argument	file_name		2670892	0					
ANR	2670950	Identifier	file_name		2670892	0					
ANR	2670951	Argument	ckpt_name		2670892	1					
ANR	2670952	Identifier	ckpt_name		2670892	0					
ANR	2670953	ExpressionStatement	fd = - 1	496:1:15093:15100	2670892	9	True				
ANR	2670954	AssignmentExpression	fd = - 1		2670892	0		=			
ANR	2670955	Identifier	fd		2670892	0					
ANR	2670956	UnaryOperationExpression	- 1		2670892	1					
ANR	2670957	UnaryOperator	-		2670892	0					
ANR	2670958	PrimaryExpression	1		2670892	1					
ANR	2670959	ExpressionStatement	pos = 0	497:1:15103:15110	2670892	10	True				
ANR	2670960	AssignmentExpression	pos = 0		2670892	0		=			
ANR	2670961	Identifier	pos		2670892	0					
ANR	2670962	PrimaryExpression	0		2670892	1					
ANR	2670963	ExpressionStatement	done_once = true	498:1:15113:15129	2670892	11	True				
ANR	2670964	AssignmentExpression	done_once = true		2670892	0		=			
ANR	2670965	Identifier	done_once		2670892	0					
ANR	2670966	Identifier	true		2670892	1					
ANR	2670967	ReturnType	void		2670892	1					
ANR	2670968	Identifier	Image :: SetFileName		2670892	2					
ANR	2670969	ParameterList	const char * ckpt_name		2670892	3					
ANR	2670970	Parameter	const char * ckpt_name	481:20:14734:14754	2670892	0	True				
ANR	2670971	ParameterType	const char *		2670892	0					
ANR	2670972	Identifier	ckpt_name		2670892	1					
ANR	2670973	CFGEntryNode	ENTRY		2670892		True				
ANR	2670974	CFGExitNode	EXIT		2670892		True				
ANR	2670975	Symbol	ckpt_name		2670892						
ANR	2670976	Symbol	strlen		2670892						
ANR	2670977	Symbol	NULL		2670892						
ANR	2670978	Symbol	pos		2670892						
ANR	2670979	Symbol	file_name		2670892						
ANR	2670980	Symbol	false		2670892						
ANR	2670981	Symbol	D_ALWAYS		2670892						
ANR	2670982	Symbol	true		2670892						
ANR	2670983	Symbol	done_once		2670892						
ANR	2670984	Symbol	fd		2670892						
ANR	2670985	Function	Image :: SetMode	501:0:15134:15261							
ANR	2670986	FunctionDef	Image :: SetMode (int syscall_mode)		2670985	0					
ANR	2670987	CompoundStatement		503:0:15174:15261	2670985	0					
ANR	2670988	IfStatement	if ( syscall_mode & SYS_LOCAL )		2670985	0					
ANR	2670989	Condition	syscall_mode & SYS_LOCAL	504:5:15181:15204	2670985	0	True				
ANR	2670990	BitAndExpression	syscall_mode & SYS_LOCAL		2670985	0		&			
ANR	2670991	Identifier	syscall_mode		2670985	0					
ANR	2670992	Identifier	SYS_LOCAL		2670985	1					
ANR	2670993	CompoundStatement		2:32:33:33	2670985	1					
ANR	2670994	ExpressionStatement	mode = STANDALONE	505:2:15212:15229	2670985	0	True				
ANR	2670995	AssignmentExpression	mode = STANDALONE		2670985	0		=			
ANR	2670996	Identifier	mode		2670985	0					
ANR	2670997	Identifier	STANDALONE		2670985	1					
ANR	2670998	ElseStatement	else		2670985	0					
ANR	2670999	CompoundStatement		4:8:64:64	2670985	0					
ANR	2671000	ExpressionStatement	mode = REMOTE	507:2:15243:15256	2670985	0	True				
ANR	2671001	AssignmentExpression	mode = REMOTE		2670985	0		=			
ANR	2671002	Identifier	mode		2670985	0					
ANR	2671003	Identifier	REMOTE		2670985	1					
ANR	2671004	ReturnType	void		2670985	1					
ANR	2671005	Identifier	Image :: SetMode		2670985	2					
ANR	2671006	ParameterList	int syscall_mode		2670985	3					
ANR	2671007	Parameter	int syscall_mode	502:16:15155:15170	2670985	0	True				
ANR	2671008	ParameterType	int		2670985	0					
ANR	2671009	Identifier	syscall_mode		2670985	1					
ANR	2671010	CFGEntryNode	ENTRY		2670985		True				
ANR	2671011	CFGExitNode	EXIT		2670985		True				
ANR	2671012	Symbol	mode		2670985						
ANR	2671013	Symbol	syscall_mode		2670985						
ANR	2671014	Symbol	STANDALONE		2670985						
ANR	2671015	Symbol	SYS_LOCAL		2670985						
ANR	2671016	Symbol	REMOTE		2670985						
ANR	2671017	Function	Image :: FindAltHeap	521:0:15750:16851							
ANR	2671018	FunctionDef	Image :: FindAltHeap ()		2671017	0					
ANR	2671019	CompoundStatement		523:0:15778:16851	2671017	0					
ANR	2671020	IfStatement	if ( head . AltHeap ( ) > 0 )		2671017	0					
ANR	2671021	Condition	head . AltHeap ( ) > 0	524:5:15785:15802	2671017	0	True				
ANR	2671022	RelationalExpression	head . AltHeap ( ) > 0		2671017	0		>			
ANR	2671023	CallExpression	head . AltHeap ( )		2671017	0					
ANR	2671024	Callee	head . AltHeap		2671017	0					
ANR	2671025	MemberAccess	head . AltHeap		2671017	0					
ANR	2671026	Identifier	head		2671017	0					
ANR	2671027	Identifier	AltHeap		2671017	1					
ANR	2671028	ArgumentList			2671017	1					
ANR	2671029	PrimaryExpression	0		2671017	1					
ANR	2671030	ReturnStatement	return ( void * ) head . AltHeap ( ) ;	524:25:15805:15834	2671017	1	True				
ANR	2671031	CastExpression	( void * ) head . AltHeap ( )		2671017	0					
ANR	2671032	CastTarget	void *		2671017	0					
ANR	2671033	CallExpression	head . AltHeap ( )		2671017	1					
ANR	2671034	Callee	head . AltHeap		2671017	0					
ANR	2671035	MemberAccess	head . AltHeap		2671017	0					
ANR	2671036	Identifier	head		2671017	0					
ANR	2671037	Identifier	AltHeap		2671017	1					
ANR	2671038	ArgumentList			2671017	1					
ANR	2671039	IdentifierDeclStatement	"void * datatop = 0 , * freetop = ( void * ) - 1 ;"	526:1:15838:15878	2671017	1	True				
ANR	2671040	IdentifierDecl	* datatop = 0		2671017	0					
ANR	2671041	IdentifierDeclType	void *		2671017	0					
ANR	2671042	Identifier	datatop		2671017	1					
ANR	2671043	AssignmentExpression	* datatop = 0		2671017	2		=			
ANR	2671044	Identifier	datatop		2671017	0					
ANR	2671045	PrimaryExpression	0		2671017	1					
ANR	2671046	IdentifierDecl	* freetop = ( void * ) - 1		2671017	1					
ANR	2671047	IdentifierDeclType	void *		2671017	0					
ANR	2671048	Identifier	freetop		2671017	1					
ANR	2671049	AssignmentExpression	* freetop = ( void * ) - 1		2671017	2		=			
ANR	2671050	Identifier	freetop		2671017	0					
ANR	2671051	CastExpression	( void * ) - 1		2671017	1					
ANR	2671052	CastTarget	void *		2671017	0					
ANR	2671053	UnaryOperationExpression	- 1		2671017	1					
ANR	2671054	UnaryOperator	-		2671017	0					
ANR	2671055	PrimaryExpression	1		2671017	1					
ANR	2671056	ForStatement	for ( int i = 0 ; i < head . N_Segs ( ) ; i ++ )		2671017	2					
ANR	2671057	ForInit	int i = 0 ;	528:6:15887:15894	2671017	0	True				
ANR	2671058	IdentifierDeclStatement	int i = 0 ;		2671017	0					
ANR	2671059	IdentifierDecl	i = 0		2671017	0					
ANR	2671060	IdentifierDeclType	int		2671017	0					
ANR	2671061	Identifier	i		2671017	1					
ANR	2671062	AssignmentExpression	i = 0		2671017	2		=			
ANR	2671063	Identifier	i		2671017	0					
ANR	2671064	PrimaryExpression	0		2671017	1					
ANR	2671065	Condition	i < head . N_Segs ( )	528:15:15896:15912	2671017	1	True				
ANR	2671066	RelationalExpression	i < head . N_Segs ( )		2671017	0		<			
ANR	2671067	Identifier	i		2671017	0					
ANR	2671068	CallExpression	head . N_Segs ( )		2671017	1					
ANR	2671069	Callee	head . N_Segs		2671017	0					
ANR	2671070	MemberAccess	head . N_Segs		2671017	0					
ANR	2671071	Identifier	head		2671017	0					
ANR	2671072	Identifier	N_Segs		2671017	1					
ANR	2671073	ArgumentList			2671017	1					
ANR	2671074	PostIncDecOperationExpression	i ++	528:34:15915:15917	2671017	2	True				
ANR	2671075	Identifier	i		2671017	0					
ANR	2671076	IncDec	++		2671017	1					
ANR	2671077	CompoundStatement		6:39:141:141	2671017	3					
ANR	2671078	IfStatement	"if ( strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) == MATCH )"		2671017	0					
ANR	2671079	Condition	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) == MATCH"	529:6:15928:15968	2671017	0	True				
ANR	2671080	EqualityExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) == MATCH"		2671017	0		==			
ANR	2671081	CallExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" )"		2671017	0					
ANR	2671082	Callee	strcmp		2671017	0					
ANR	2671083	Identifier	strcmp		2671017	0					
ANR	2671084	ArgumentList	map [ i ] . GetName ( )		2671017	1					
ANR	2671085	Argument	map [ i ] . GetName ( )		2671017	0					
ANR	2671086	CallExpression	map [ i ] . GetName ( )		2671017	0					
ANR	2671087	Callee	map [ i ] . GetName		2671017	0					
ANR	2671088	MemberAccess	map [ i ] . GetName		2671017	0					
ANR	2671089	ArrayIndexing	map [ i ]		2671017	0					
ANR	2671090	Identifier	map		2671017	0					
ANR	2671091	Identifier	i		2671017	1					
ANR	2671092	Identifier	GetName		2671017	1					
ANR	2671093	ArgumentList			2671017	1					
ANR	2671094	Argument	"""DATA"""		2671017	1					
ANR	2671095	PrimaryExpression	"""DATA"""		2671017	0					
ANR	2671096	Identifier	MATCH		2671017	1					
ANR	2671097	CompoundStatement		8:3:197:262	2671017	1					
ANR	2671098	IdentifierDeclStatement	void * ptr = ( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) ) ;	530:3:15976:16041	2671017	0	True				
ANR	2671099	IdentifierDecl	* ptr = ( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) )		2671017	0					
ANR	2671100	IdentifierDeclType	void *		2671017	0					
ANR	2671101	Identifier	ptr		2671017	1					
ANR	2671102	AssignmentExpression	* ptr = ( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) )		2671017	2		=			
ANR	2671103	Identifier	ptr		2671017	0					
ANR	2671104	CastExpression	( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) )		2671017	1					
ANR	2671105	CastTarget	void *		2671017	0					
ANR	2671106	AdditiveExpression	( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( )		2671017	1		+			
ANR	2671107	CastExpression	( int ) map [ i ] . GetLoc ( )		2671017	0					
ANR	2671108	CastTarget	int		2671017	0					
ANR	2671109	CallExpression	map [ i ] . GetLoc ( )		2671017	1					
ANR	2671110	Callee	map [ i ] . GetLoc		2671017	0					
ANR	2671111	MemberAccess	map [ i ] . GetLoc		2671017	0					
ANR	2671112	ArrayIndexing	map [ i ]		2671017	0					
ANR	2671113	Identifier	map		2671017	0					
ANR	2671114	Identifier	i		2671017	1					
ANR	2671115	Identifier	GetLoc		2671017	1					
ANR	2671116	ArgumentList			2671017	1					
ANR	2671117	CastExpression	( int ) map [ i ] . GetLen ( )		2671017	1					
ANR	2671118	CastTarget	int		2671017	0					
ANR	2671119	CallExpression	map [ i ] . GetLen ( )		2671017	1					
ANR	2671120	Callee	map [ i ] . GetLen		2671017	0					
ANR	2671121	MemberAccess	map [ i ] . GetLen		2671017	0					
ANR	2671122	ArrayIndexing	map [ i ]		2671017	0					
ANR	2671123	Identifier	map		2671017	0					
ANR	2671124	Identifier	i		2671017	1					
ANR	2671125	Identifier	GetLen		2671017	1					
ANR	2671126	ArgumentList			2671017	1					
ANR	2671127	IfStatement	if ( ptr > datatop )		2671017	1					
ANR	2671128	Condition	ptr > datatop	531:7:16050:16062	2671017	0	True				
ANR	2671129	RelationalExpression	ptr > datatop		2671017	0		>			
ANR	2671130	Identifier	ptr		2671017	0					
ANR	2671131	Identifier	datatop		2671017	1					
ANR	2671132	CompoundStatement		9:22:286:286	2671017	1					
ANR	2671133	ExpressionStatement	datatop = ptr	532:4:16071:16084	2671017	0	True				
ANR	2671134	AssignmentExpression	datatop = ptr		2671017	0		=			
ANR	2671135	Identifier	datatop		2671017	0					
ANR	2671136	Identifier	ptr		2671017	1					
ANR	2671137	ForStatement	for ( int i = 0 ; i < head . N_Segs ( ) ; i ++ )		2671017	3					
ANR	2671138	ForInit	int i = 0 ;	537:6:16105:16112	2671017	0	True				
ANR	2671139	IdentifierDeclStatement	int i = 0 ;		2671017	0					
ANR	2671140	IdentifierDecl	i = 0		2671017	0					
ANR	2671141	IdentifierDeclType	int		2671017	0					
ANR	2671142	Identifier	i		2671017	1					
ANR	2671143	AssignmentExpression	i = 0		2671017	2		=			
ANR	2671144	Identifier	i		2671017	0					
ANR	2671145	PrimaryExpression	0		2671017	1					
ANR	2671146	Condition	i < head . N_Segs ( )	537:15:16114:16130	2671017	1	True				
ANR	2671147	RelationalExpression	i < head . N_Segs ( )		2671017	0		<			
ANR	2671148	Identifier	i		2671017	0					
ANR	2671149	CallExpression	head . N_Segs ( )		2671017	1					
ANR	2671150	Callee	head . N_Segs		2671017	0					
ANR	2671151	MemberAccess	head . N_Segs		2671017	0					
ANR	2671152	Identifier	head		2671017	0					
ANR	2671153	Identifier	N_Segs		2671017	1					
ANR	2671154	ArgumentList			2671017	1					
ANR	2671155	PostIncDecOperationExpression	i ++	537:34:16133:16135	2671017	2	True				
ANR	2671156	Identifier	i		2671017	0					
ANR	2671157	IncDec	++		2671017	1					
ANR	2671158	CompoundStatement		15:39:359:359	2671017	3					
ANR	2671159	IfStatement	"if ( strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) != MATCH )"		2671017	0					
ANR	2671160	Condition	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) != MATCH"	538:6:16146:16186	2671017	0	True				
ANR	2671161	EqualityExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) != MATCH"		2671017	0		!=			
ANR	2671162	CallExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" )"		2671017	0					
ANR	2671163	Callee	strcmp		2671017	0					
ANR	2671164	Identifier	strcmp		2671017	0					
ANR	2671165	ArgumentList	map [ i ] . GetName ( )		2671017	1					
ANR	2671166	Argument	map [ i ] . GetName ( )		2671017	0					
ANR	2671167	CallExpression	map [ i ] . GetName ( )		2671017	0					
ANR	2671168	Callee	map [ i ] . GetName		2671017	0					
ANR	2671169	MemberAccess	map [ i ] . GetName		2671017	0					
ANR	2671170	ArrayIndexing	map [ i ]		2671017	0					
ANR	2671171	Identifier	map		2671017	0					
ANR	2671172	Identifier	i		2671017	1					
ANR	2671173	Identifier	GetName		2671017	1					
ANR	2671174	ArgumentList			2671017	1					
ANR	2671175	Argument	"""DATA"""		2671017	1					
ANR	2671176	PrimaryExpression	"""DATA"""		2671017	0					
ANR	2671177	Identifier	MATCH		2671017	1					
ANR	2671178	CompoundStatement		17:3:415:451	2671017	1					
ANR	2671179	IdentifierDeclStatement	void * ptr = ( void * ) map [ i ] . GetLoc ( ) ;	539:3:16194:16230	2671017	0	True				
ANR	2671180	IdentifierDecl	* ptr = ( void * ) map [ i ] . GetLoc ( )		2671017	0					
ANR	2671181	IdentifierDeclType	void *		2671017	0					
ANR	2671182	Identifier	ptr		2671017	1					
ANR	2671183	AssignmentExpression	* ptr = ( void * ) map [ i ] . GetLoc ( )		2671017	2		=			
ANR	2671184	Identifier	ptr		2671017	0					
ANR	2671185	CastExpression	( void * ) map [ i ] . GetLoc ( )		2671017	1					
ANR	2671186	CastTarget	void *		2671017	0					
ANR	2671187	CallExpression	map [ i ] . GetLoc ( )		2671017	1					
ANR	2671188	Callee	map [ i ] . GetLoc		2671017	0					
ANR	2671189	MemberAccess	map [ i ] . GetLoc		2671017	0					
ANR	2671190	ArrayIndexing	map [ i ]		2671017	0					
ANR	2671191	Identifier	map		2671017	0					
ANR	2671192	Identifier	i		2671017	1					
ANR	2671193	Identifier	GetLoc		2671017	1					
ANR	2671194	ArgumentList			2671017	1					
ANR	2671195	IfStatement	if ( ptr > datatop && ptr < freetop )		2671017	1					
ANR	2671196	Condition	ptr > datatop && ptr < freetop	540:7:16239:16268	2671017	0	True				
ANR	2671197	AndExpression	ptr > datatop && ptr < freetop		2671017	0		&&			
ANR	2671198	RelationalExpression	ptr > datatop		2671017	0		>			
ANR	2671199	Identifier	ptr		2671017	0					
ANR	2671200	Identifier	datatop		2671017	1					
ANR	2671201	RelationalExpression	ptr < freetop		2671017	1		<			
ANR	2671202	Identifier	ptr		2671017	0					
ANR	2671203	Identifier	freetop		2671017	1					
ANR	2671204	CompoundStatement		18:39:492:492	2671017	1					
ANR	2671205	ExpressionStatement	freetop = ptr	541:4:16277:16290	2671017	0	True				
ANR	2671206	AssignmentExpression	freetop = ptr		2671017	0		=			
ANR	2671207	Identifier	freetop		2671017	0					
ANR	2671208	Identifier	ptr		2671017	1					
ANR	2671209	IfStatement	if ( freetop == ( void * ) - 1 )		2671017	4					
ANR	2671210	Condition	freetop == ( void * ) - 1	550:5:16545:16565	2671017	0	True				
ANR	2671211	EqualityExpression	freetop == ( void * ) - 1		2671017	0		==			
ANR	2671212	Identifier	freetop		2671017	0					
ANR	2671213	CastExpression	( void * ) - 1		2671017	1					
ANR	2671214	CastTarget	void *		2671017	0					
ANR	2671215	UnaryOperationExpression	- 1		2671017	1					
ANR	2671216	UnaryOperator	-		2671017	0					
ANR	2671217	PrimaryExpression	1		2671017	1					
ANR	2671218	CompoundStatement		28:28:789:789	2671017	1					
ANR	2671219	ExpressionStatement	freetop = ( void * ) ( ( int ) datatop + ( int ) RESERVED_HEAP )	551:2:16572:16625	2671017	0	True				
ANR	2671220	AssignmentExpression	freetop = ( void * ) ( ( int ) datatop + ( int ) RESERVED_HEAP )		2671017	0		=			
ANR	2671221	Identifier	freetop		2671017	0					
ANR	2671222	CastExpression	( void * ) ( ( int ) datatop + ( int ) RESERVED_HEAP )		2671017	1					
ANR	2671223	CastTarget	void *		2671017	0					
ANR	2671224	AdditiveExpression	( int ) datatop + ( int ) RESERVED_HEAP		2671017	1		+			
ANR	2671225	CastExpression	( int ) datatop		2671017	0					
ANR	2671226	CastTarget	int		2671017	0					
ANR	2671227	Identifier	datatop		2671017	1					
ANR	2671228	CastExpression	( int ) RESERVED_HEAP		2671017	1					
ANR	2671229	CastTarget	int		2671017	0					
ANR	2671230	Identifier	RESERVED_HEAP		2671017	1					
ANR	2671231	IdentifierDeclStatement	int pagesize = getpagesize ( ) ;	555:1:16679:16707	2671017	5	True				
ANR	2671232	IdentifierDecl	pagesize = getpagesize ( )		2671017	0					
ANR	2671233	IdentifierDeclType	int		2671017	0					
ANR	2671234	Identifier	pagesize		2671017	1					
ANR	2671235	AssignmentExpression	pagesize = getpagesize ( )		2671017	2		=			
ANR	2671236	Identifier	pagesize		2671017	0					
ANR	2671237	CallExpression	getpagesize ( )		2671017	1					
ANR	2671238	Callee	getpagesize		2671017	0					
ANR	2671239	Identifier	getpagesize		2671017	0					
ANR	2671240	ArgumentList			2671017	1					
ANR	2671241	ExpressionStatement	freetop = ( void * ) ( ( ( RAW_ADDR ) freetop / pagesize ) * pagesize )	556:1:16710:16767	2671017	6	True				
ANR	2671242	AssignmentExpression	freetop = ( void * ) ( ( ( RAW_ADDR ) freetop / pagesize ) * pagesize )		2671017	0		=			
ANR	2671243	Identifier	freetop		2671017	0					
ANR	2671244	CastExpression	( void * ) ( ( ( RAW_ADDR ) freetop / pagesize ) * pagesize )		2671017	1					
ANR	2671245	CastTarget	void *		2671017	0					
ANR	2671246	MultiplicativeExpression	( ( RAW_ADDR ) freetop / pagesize ) * pagesize		2671017	1		*			
ANR	2671247	MultiplicativeExpression	( RAW_ADDR ) freetop / pagesize		2671017	0		/			
ANR	2671248	CastExpression	( RAW_ADDR ) freetop		2671017	0					
ANR	2671249	CastTarget	RAW_ADDR		2671017	0					
ANR	2671250	Identifier	freetop		2671017	1					
ANR	2671251	Identifier	pagesize		2671017	1					
ANR	2671252	Identifier	pagesize		2671017	1					
ANR	2671253	ExpressionStatement	head . AltHeap ( ( RAW_ADDR ) freetop - ALT_HEAP_SIZE )	557:1:16770:16817	2671017	7	True				
ANR	2671254	CallExpression	head . AltHeap ( ( RAW_ADDR ) freetop - ALT_HEAP_SIZE )		2671017	0					
ANR	2671255	Callee	head . AltHeap		2671017	0					
ANR	2671256	MemberAccess	head . AltHeap		2671017	0					
ANR	2671257	Identifier	head		2671017	0					
ANR	2671258	Identifier	AltHeap		2671017	1					
ANR	2671259	ArgumentList	( RAW_ADDR ) freetop - ALT_HEAP_SIZE		2671017	1					
ANR	2671260	Argument	( RAW_ADDR ) freetop - ALT_HEAP_SIZE		2671017	0					
ANR	2671261	AdditiveExpression	( RAW_ADDR ) freetop - ALT_HEAP_SIZE		2671017	0		-			
ANR	2671262	CastExpression	( RAW_ADDR ) freetop		2671017	0					
ANR	2671263	CastTarget	RAW_ADDR		2671017	0					
ANR	2671264	Identifier	freetop		2671017	1					
ANR	2671265	Identifier	ALT_HEAP_SIZE		2671017	1					
ANR	2671266	ReturnStatement	return ( void * ) head . AltHeap ( ) ;	558:1:16820:16849	2671017	8	True				
ANR	2671267	CastExpression	( void * ) head . AltHeap ( )		2671017	0					
ANR	2671268	CastTarget	void *		2671017	0					
ANR	2671269	CallExpression	head . AltHeap ( )		2671017	1					
ANR	2671270	Callee	head . AltHeap		2671017	0					
ANR	2671271	MemberAccess	head . AltHeap		2671017	0					
ANR	2671272	Identifier	head		2671017	0					
ANR	2671273	Identifier	AltHeap		2671017	1					
ANR	2671274	ArgumentList			2671017	1					
ANR	2671275	ReturnType	void *		2671017	1					
ANR	2671276	Identifier	Image :: FindAltHeap		2671017	2					
ANR	2671277	ParameterList			2671017	3					
ANR	2671278	CFGEntryNode	ENTRY		2671017		True				
ANR	2671279	CFGExitNode	EXIT		2671017		True				
ANR	2671280	Symbol	strcmp		2671017						
ANR	2671281	Symbol	* map		2671017						
ANR	2671282	Symbol	i		2671017						
ANR	2671283	Symbol	ALT_HEAP_SIZE		2671017						
ANR	2671284	Symbol	freetop		2671017						
ANR	2671285	Symbol	RESERVED_HEAP		2671017						
ANR	2671286	Symbol	datatop		2671017						
ANR	2671287	Symbol	getpagesize		2671017						
ANR	2671288	Symbol	ptr		2671017						
ANR	2671289	Symbol	head		2671017						
ANR	2671290	Symbol	head . N_Segs		2671017						
ANR	2671291	Symbol	* i		2671017						
ANR	2671292	Symbol	map [ i ] . GetName		2671017						
ANR	2671293	Symbol	map [ i ] . GetLoc		2671017						
ANR	2671294	Symbol	head . AltHeap		2671017						
ANR	2671295	Symbol	pagesize		2671017						
ANR	2671296	Symbol	map		2671017						
ANR	2671297	Symbol	MATCH		2671017						
ANR	2671298	Symbol	map [ i ] . GetLen		2671017						
ANR	2671299	Function	_condor_prestart	569:0:17038:18202							
ANR	2671300	FunctionDef	_condor_prestart (int syscall_mode)		2671299	0					
ANR	2671301	CompoundStatement		571:0:17080:18202	2671299	0					
ANR	2671302	ExpressionStatement	MyImage . SetMode ( syscall_mode )	572:1:17083:17114	2671299	0	True				
ANR	2671303	CallExpression	MyImage . SetMode ( syscall_mode )		2671299	0					
ANR	2671304	Callee	MyImage . SetMode		2671299	0					
ANR	2671305	MemberAccess	MyImage . SetMode		2671299	0					
ANR	2671306	Identifier	MyImage		2671299	0					
ANR	2671307	Identifier	SetMode		2671299	1					
ANR	2671308	ArgumentList	syscall_mode		2671299	1					
ANR	2671309	Argument	syscall_mode		2671299	0					
ANR	2671310	Identifier	syscall_mode		2671299	0					
ANR	2671311	ExpressionStatement	_condor_file_table_init ( )	574:1:17118:17143	2671299	1	True				
ANR	2671312	CallExpression	_condor_file_table_init ( )		2671299	0					
ANR	2671313	Callee	_condor_file_table_init		2671299	0					
ANR	2671314	Identifier	_condor_file_table_init		2671299	0					
ANR	2671315	ArgumentList			2671299	1					
ANR	2671316	ExpressionStatement	"_install_signal_handler ( SIGTSTP , ( SIG_HANDLER ) Checkpoint )"	577:1:17184:17243	2671299	2	True				
ANR	2671317	CallExpression	"_install_signal_handler ( SIGTSTP , ( SIG_HANDLER ) Checkpoint )"		2671299	0					
ANR	2671318	Callee	_install_signal_handler		2671299	0					
ANR	2671319	Identifier	_install_signal_handler		2671299	0					
ANR	2671320	ArgumentList	SIGTSTP		2671299	1					
ANR	2671321	Argument	SIGTSTP		2671299	0					
ANR	2671322	Identifier	SIGTSTP		2671299	0					
ANR	2671323	Argument	( SIG_HANDLER ) Checkpoint		2671299	1					
ANR	2671324	CastExpression	( SIG_HANDLER ) Checkpoint		2671299	0					
ANR	2671325	CastTarget	SIG_HANDLER		2671299	0					
ANR	2671326	Identifier	Checkpoint		2671299	1					
ANR	2671327	ExpressionStatement	"_install_signal_handler ( SIGUSR2 , ( SIG_HANDLER ) Checkpoint )"	578:1:17246:17305	2671299	3	True				
ANR	2671328	CallExpression	"_install_signal_handler ( SIGUSR2 , ( SIG_HANDLER ) Checkpoint )"		2671299	0					
ANR	2671329	Callee	_install_signal_handler		2671299	0					
ANR	2671330	Identifier	_install_signal_handler		2671299	0					
ANR	2671331	ArgumentList	SIGUSR2		2671299	1					
ANR	2671332	Argument	SIGUSR2		2671299	0					
ANR	2671333	Identifier	SIGUSR2		2671299	0					
ANR	2671334	Argument	( SIG_HANDLER ) Checkpoint		2671299	1					
ANR	2671335	CastExpression	( SIG_HANDLER ) Checkpoint		2671299	0					
ANR	2671336	CastTarget	SIG_HANDLER		2671299	0					
ANR	2671337	Identifier	Checkpoint		2671299	1					
ANR	2671338	ExpressionStatement	calc_stack_to_save ( )	580:1:17309:17329	2671299	4	True				
ANR	2671339	CallExpression	calc_stack_to_save ( )		2671299	0					
ANR	2671340	Callee	calc_stack_to_save		2671299	0					
ANR	2671341	Identifier	calc_stack_to_save		2671299	0					
ANR	2671342	ArgumentList			2671299	1					
ANR	2671343	ExpressionStatement	setnetconfig ( )	593:1:18031:18045	2671299	5	True				
ANR	2671344	CallExpression	setnetconfig ( )		2671299	0					
ANR	2671345	Callee	setnetconfig		2671299	0					
ANR	2671346	Identifier	setnetconfig		2671299	0					
ANR	2671347	ArgumentList			2671299	1					
ANR	2671348	IdentifierDeclStatement	"float x = 23 , y = 14 , z = 256 ;"	594:1:18048:18071	2671299	6	True				
ANR	2671349	IdentifierDecl	x = 23		2671299	0					
ANR	2671350	IdentifierDeclType	float		2671299	0					
ANR	2671351	Identifier	x		2671299	1					
ANR	2671352	AssignmentExpression	x = 23		2671299	2		=			
ANR	2671353	Identifier	x		2671299	0					
ANR	2671354	PrimaryExpression	23		2671299	1					
ANR	2671355	IdentifierDecl	y = 14		2671299	1					
ANR	2671356	IdentifierDeclType	float		2671299	0					
ANR	2671357	Identifier	y		2671299	1					
ANR	2671358	AssignmentExpression	y = 14		2671299	2		=			
ANR	2671359	Identifier	y		2671299	0					
ANR	2671360	PrimaryExpression	14		2671299	1					
ANR	2671361	IdentifierDecl	z = 256		2671299	2					
ANR	2671362	IdentifierDeclType	float		2671299	0					
ANR	2671363	Identifier	z		2671299	1					
ANR	2671364	AssignmentExpression	z = 256		2671299	2		=			
ANR	2671365	Identifier	z		2671299	0					
ANR	2671366	PrimaryExpression	256		2671299	1					
ANR	2671367	IfStatement	if ( ( x + y ) > z )		2671299	7					
ANR	2671368	Condition	( x + y ) > z	595:5:18078:18084	2671299	0	True				
ANR	2671369	RelationalExpression	( x + y ) > z		2671299	0		>			
ANR	2671370	AdditiveExpression	x + y		2671299	0		+			
ANR	2671371	Identifier	x		2671299	0					
ANR	2671372	Identifier	y		2671299	1					
ANR	2671373	Identifier	z		2671299	1					
ANR	2671374	CompoundStatement		25:14:1006:1006	2671299	1					
ANR	2671375	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal error: Solaris floating point test failed\\n"" )"	596:2:18091:18168	2671299	0	True				
ANR	2671376	CallExpression	"dprintf ( D_ALWAYS , ""Internal error: Solaris floating point test failed\\n"" )"		2671299	0					
ANR	2671377	Callee	dprintf		2671299	0					
ANR	2671378	Identifier	dprintf		2671299	0					
ANR	2671379	ArgumentList	D_ALWAYS		2671299	1					
ANR	2671380	Argument	D_ALWAYS		2671299	0					
ANR	2671381	Identifier	D_ALWAYS		2671299	0					
ANR	2671382	Argument	"""Internal error: Solaris floating point test failed\\n"""		2671299	1					
ANR	2671383	PrimaryExpression	"""Internal error: Solaris floating point test failed\\n"""		2671299	0					
ANR	2671384	ExpressionStatement	Suicide ( )	598:2:18172:18181	2671299	1	True				
ANR	2671385	CallExpression	Suicide ( )		2671299	0					
ANR	2671386	Callee	Suicide		2671299	0					
ANR	2671387	Identifier	Suicide		2671299	0					
ANR	2671388	ArgumentList			2671299	1					
ANR	2671389	ExpressionStatement	z = x * y	600:1:18187:18192	2671299	8	True				
ANR	2671390	AssignmentExpression	z = x * y		2671299	0		=			
ANR	2671391	Identifier	z		2671299	0					
ANR	2671392	MultiplicativeExpression	x * y		2671299	1		*			
ANR	2671393	Identifier	x		2671299	0					
ANR	2671394	Identifier	y		2671299	1					
ANR	2671395	ReturnType	void		2671299	1					
ANR	2671396	Identifier	_condor_prestart		2671299	2					
ANR	2671397	ParameterList	int syscall_mode		2671299	3					
ANR	2671398	Parameter	int syscall_mode	570:18:17061:17076	2671299	0	True				
ANR	2671399	ParameterType	int		2671299	0					
ANR	2671400	Identifier	syscall_mode		2671299	1					
ANR	2671401	CFGEntryNode	ENTRY		2671299		True				
ANR	2671402	CFGExitNode	EXIT		2671299		True				
ANR	2671403	Symbol	syscall_mode		2671299						
ANR	2671404	Symbol	Checkpoint		2671299						
ANR	2671405	Symbol	SIGUSR2		2671299						
ANR	2671406	Symbol	x		2671299						
ANR	2671407	Symbol	D_ALWAYS		2671299						
ANR	2671408	Symbol	y		2671299						
ANR	2671409	Symbol	SIGTSTP		2671299						
ANR	2671410	Symbol	z		2671299						
ANR	2671411	Symbol	MyImage		2671299						
ANR	2671412	Function	_install_signal_handler	605:11:18216:18894							
ANR	2671413	FunctionDef	"_install_signal_handler (int sig , SIG_HANDLER handler)"		2671412	0					
ANR	2671414	CompoundStatement		607:0:18277:18894	2671412	0					
ANR	2671415	IdentifierDeclStatement	int scm ;	608:1:18280:18288	2671412	0	True				
ANR	2671416	IdentifierDecl	scm		2671412	0					
ANR	2671417	IdentifierDeclType	int		2671412	0					
ANR	2671418	Identifier	scm		2671412	1					
ANR	2671419	IdentifierDeclStatement	struct sigaction action ;	609:1:18291:18314	2671412	1	True				
ANR	2671420	IdentifierDecl	action		2671412	0					
ANR	2671421	IdentifierDeclType	struct sigaction		2671412	0					
ANR	2671422	Identifier	action		2671412	1					
ANR	2671423	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	611:1:18318:18363	2671412	2	True				
ANR	2671424	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2671412	0		=			
ANR	2671425	Identifier	scm		2671412	0					
ANR	2671426	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2671412	1					
ANR	2671427	Callee	SetSyscalls		2671412	0					
ANR	2671428	Identifier	SetSyscalls		2671412	0					
ANR	2671429	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2671412	1					
ANR	2671430	Argument	SYS_LOCAL | SYS_UNMAPPED		2671412	0					
ANR	2671431	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2671412	0		|			
ANR	2671432	Identifier	SYS_LOCAL		2671412	0					
ANR	2671433	Identifier	SYS_UNMAPPED		2671412	1					
ANR	2671434	ExpressionStatement	action . sa_handler = handler	613:1:18367:18394	2671412	3	True				
ANR	2671435	AssignmentExpression	action . sa_handler = handler		2671412	0		=			
ANR	2671436	MemberAccess	action . sa_handler		2671412	0					
ANR	2671437	Identifier	action		2671412	0					
ANR	2671438	Identifier	sa_handler		2671412	1					
ANR	2671439	Identifier	handler		2671412	1					
ANR	2671440	ExpressionStatement	sigemptyset ( & action . sa_mask )	614:1:18397:18427	2671412	4	True				
ANR	2671441	CallExpression	sigemptyset ( & action . sa_mask )		2671412	0					
ANR	2671442	Callee	sigemptyset		2671412	0					
ANR	2671443	Identifier	sigemptyset		2671412	0					
ANR	2671444	ArgumentList	& action . sa_mask		2671412	1					
ANR	2671445	Argument	& action . sa_mask		2671412	0					
ANR	2671446	UnaryOperationExpression	& action . sa_mask		2671412	0					
ANR	2671447	UnaryOperator	&		2671412	0					
ANR	2671448	MemberAccess	action . sa_mask		2671412	1					
ANR	2671449	Identifier	action		2671412	0					
ANR	2671450	Identifier	sa_mask		2671412	1					
ANR	2671451	IfStatement	if ( sig == SIGTSTP )		2671412	5					
ANR	2671452	Condition	sig == SIGTSTP	617:6:18582:18595	2671412	0	True				
ANR	2671453	EqualityExpression	sig == SIGTSTP		2671412	0		==			
ANR	2671454	Identifier	sig		2671412	0					
ANR	2671455	Identifier	SIGTSTP		2671412	1					
ANR	2671456	ExpressionStatement	"sigaddset ( & action . sa_mask , SIGUSR2 )"	618:2:18601:18635	2671412	1	True				
ANR	2671457	CallExpression	"sigaddset ( & action . sa_mask , SIGUSR2 )"		2671412	0					
ANR	2671458	Callee	sigaddset		2671412	0					
ANR	2671459	Identifier	sigaddset		2671412	0					
ANR	2671460	ArgumentList	& action . sa_mask		2671412	1					
ANR	2671461	Argument	& action . sa_mask		2671412	0					
ANR	2671462	UnaryOperationExpression	& action . sa_mask		2671412	0					
ANR	2671463	UnaryOperator	&		2671412	0					
ANR	2671464	MemberAccess	action . sa_mask		2671412	1					
ANR	2671465	Identifier	action		2671412	0					
ANR	2671466	Identifier	sa_mask		2671412	1					
ANR	2671467	Argument	SIGUSR2		2671412	1					
ANR	2671468	Identifier	SIGUSR2		2671412	0					
ANR	2671469	IfStatement	if ( sig == SIGUSR2 )		2671412	6					
ANR	2671470	Condition	sig == SIGUSR2	619:6:18643:18656	2671412	0	True				
ANR	2671471	EqualityExpression	sig == SIGUSR2		2671412	0		==			
ANR	2671472	Identifier	sig		2671412	0					
ANR	2671473	Identifier	SIGUSR2		2671412	1					
ANR	2671474	ExpressionStatement	"sigaddset ( & action . sa_mask , SIGTSTP )"	620:2:18662:18696	2671412	1	True				
ANR	2671475	CallExpression	"sigaddset ( & action . sa_mask , SIGTSTP )"		2671412	0					
ANR	2671476	Callee	sigaddset		2671412	0					
ANR	2671477	Identifier	sigaddset		2671412	0					
ANR	2671478	ArgumentList	& action . sa_mask		2671412	1					
ANR	2671479	Argument	& action . sa_mask		2671412	0					
ANR	2671480	UnaryOperationExpression	& action . sa_mask		2671412	0					
ANR	2671481	UnaryOperator	&		2671412	0					
ANR	2671482	MemberAccess	action . sa_mask		2671412	1					
ANR	2671483	Identifier	action		2671412	0					
ANR	2671484	Identifier	sa_mask		2671412	1					
ANR	2671485	Argument	SIGTSTP		2671412	1					
ANR	2671486	Identifier	SIGTSTP		2671412	0					
ANR	2671487	ExpressionStatement	action . sa_flags = 0	622:1:18701:18720	2671412	7	True				
ANR	2671488	AssignmentExpression	action . sa_flags = 0		2671412	0		=			
ANR	2671489	MemberAccess	action . sa_flags		2671412	0					
ANR	2671490	Identifier	action		2671412	0					
ANR	2671491	Identifier	sa_flags		2671412	1					
ANR	2671492	PrimaryExpression	0		2671412	1					
ANR	2671493	IfStatement	"if ( sigaction ( sig , & action , NULL ) < 0 )"		2671412	8					
ANR	2671494	Condition	"sigaction ( sig , & action , NULL ) < 0"	624:5:18728:18758	2671412	0	True				
ANR	2671495	RelationalExpression	"sigaction ( sig , & action , NULL ) < 0"		2671412	0		<			
ANR	2671496	CallExpression	"sigaction ( sig , & action , NULL )"		2671412	0					
ANR	2671497	Callee	sigaction		2671412	0					
ANR	2671498	Identifier	sigaction		2671412	0					
ANR	2671499	ArgumentList	sig		2671412	1					
ANR	2671500	Argument	sig		2671412	0					
ANR	2671501	Identifier	sig		2671412	0					
ANR	2671502	Argument	& action		2671412	1					
ANR	2671503	UnaryOperationExpression	& action		2671412	0					
ANR	2671504	UnaryOperator	&		2671412	0					
ANR	2671505	Identifier	action		2671412	1					
ANR	2671506	Argument	NULL		2671412	2					
ANR	2671507	Identifier	NULL		2671412	0					
ANR	2671508	PrimaryExpression	0		2671412	1					
ANR	2671509	CompoundStatement		18:39:484:484	2671412	1					
ANR	2671510	ExpressionStatement	"dprintf ( D_ALWAYS , ""can't install sighandler for sig %d: %s\\n"" , sig , strerror ( errno ) )"	625:2:18766:18854	2671412	0	True				
ANR	2671511	CallExpression	"dprintf ( D_ALWAYS , ""can't install sighandler for sig %d: %s\\n"" , sig , strerror ( errno ) )"		2671412	0					
ANR	2671512	Callee	dprintf		2671412	0					
ANR	2671513	Identifier	dprintf		2671412	0					
ANR	2671514	ArgumentList	D_ALWAYS		2671412	1					
ANR	2671515	Argument	D_ALWAYS		2671412	0					
ANR	2671516	Identifier	D_ALWAYS		2671412	0					
ANR	2671517	Argument	"""can't install sighandler for sig %d: %s\\n"""		2671412	1					
ANR	2671518	PrimaryExpression	"""can't install sighandler for sig %d: %s\\n"""		2671412	0					
ANR	2671519	Argument	sig		2671412	2					
ANR	2671520	Identifier	sig		2671412	0					
ANR	2671521	Argument	strerror ( errno )		2671412	3					
ANR	2671522	CallExpression	strerror ( errno )		2671412	0					
ANR	2671523	Callee	strerror		2671412	0					
ANR	2671524	Identifier	strerror		2671412	0					
ANR	2671525	ArgumentList	errno		2671412	1					
ANR	2671526	Argument	errno		2671412	0					
ANR	2671527	Identifier	errno		2671412	0					
ANR	2671528	ExpressionStatement	Suicide ( )	627:2:18858:18867	2671412	1	True				
ANR	2671529	CallExpression	Suicide ( )		2671412	0					
ANR	2671530	Callee	Suicide		2671412	0					
ANR	2671531	Identifier	Suicide		2671412	0					
ANR	2671532	ArgumentList			2671412	1					
ANR	2671533	ExpressionStatement	SetSyscalls ( scm )	630:1:18874:18892	2671412	9	True				
ANR	2671534	CallExpression	SetSyscalls ( scm )		2671412	0					
ANR	2671535	Callee	SetSyscalls		2671412	0					
ANR	2671536	Identifier	SetSyscalls		2671412	0					
ANR	2671537	ArgumentList	scm		2671412	1					
ANR	2671538	Argument	scm		2671412	0					
ANR	2671539	Identifier	scm		2671412	0					
ANR	2671540	ReturnType	void		2671412	1					
ANR	2671541	Identifier	_install_signal_handler		2671412	2					
ANR	2671542	ParameterList	"int sig , SIG_HANDLER handler"		2671412	3					
ANR	2671543	Parameter	int sig	606:25:18246:18252	2671412	0	True				
ANR	2671544	ParameterType	int		2671412	0					
ANR	2671545	Identifier	sig		2671412	1					
ANR	2671546	Parameter	SIG_HANDLER handler	606:34:18255:18273	2671412	1	True				
ANR	2671547	ParameterType	SIG_HANDLER		2671412	0					
ANR	2671548	Identifier	handler		2671412	1					
ANR	2671549	CFGEntryNode	ENTRY		2671412		True				
ANR	2671550	CFGExitNode	EXIT		2671412		True				
ANR	2671551	Symbol	handler		2671412						
ANR	2671552	Symbol	errno		2671412						
ANR	2671553	Symbol	NULL		2671412						
ANR	2671554	Symbol	SYS_UNMAPPED		2671412						
ANR	2671555	Symbol	action . sa_flags		2671412						
ANR	2671556	Symbol	SIGUSR2		2671412						
ANR	2671557	Symbol	D_ALWAYS		2671412						
ANR	2671558	Symbol	action . sa_handler		2671412						
ANR	2671559	Symbol	SIGTSTP		2671412						
ANR	2671560	Symbol	sigaction		2671412						
ANR	2671561	Symbol	sig		2671412						
ANR	2671562	Symbol	& action . sa_mask		2671412						
ANR	2671563	Symbol	strerror		2671412						
ANR	2671564	Symbol	& action		2671412						
ANR	2671565	Symbol	SYS_LOCAL		2671412						
ANR	2671566	Symbol	action		2671412						
ANR	2671567	Symbol	SetSyscalls		2671412						
ANR	2671568	Symbol	scm		2671412						
ANR	2671569	Function	Image :: Save	640:0:19163:23284							
ANR	2671570	FunctionDef	Image :: Save ()		2671569	0					
ANR	2671571	CompoundStatement		642:0:19182:23284	2671569	0					
ANR	2671572	IdentifierDeclStatement	"RAW_ADDR stack_start , stack_end ;"	644:1:19221:19252	2671569	0	True				
ANR	2671573	IdentifierDecl	stack_start		2671569	0					
ANR	2671574	IdentifierDeclType	RAW_ADDR		2671569	0					
ANR	2671575	Identifier	stack_start		2671569	1					
ANR	2671576	IdentifierDecl	stack_end		2671569	1					
ANR	2671577	IdentifierDeclType	RAW_ADDR		2671569	0					
ANR	2671578	Identifier	stack_end		2671569	1					
ANR	2671579	IdentifierDeclStatement	"RAW_ADDR data_start , data_end ;"	649:1:19350:19379	2671569	1	True				
ANR	2671580	IdentifierDecl	data_start		2671569	0					
ANR	2671581	IdentifierDeclType	RAW_ADDR		2671569	0					
ANR	2671582	Identifier	data_start		2671569	1					
ANR	2671583	IdentifierDecl	data_end		2671569	1					
ANR	2671584	IdentifierDeclType	RAW_ADDR		2671569	0					
ANR	2671585	Identifier	data_end		2671569	1					
ANR	2671586	IdentifierDeclStatement	ssize_t position ;	650:1:19382:19399	2671569	2	True				
ANR	2671587	IdentifierDecl	position		2671569	0					
ANR	2671588	IdentifierDeclType	ssize_t		2671569	0					
ANR	2671589	Identifier	position		2671569	1					
ANR	2671590	IdentifierDeclStatement	int i ;	651:1:19402:19409	2671569	3	True				
ANR	2671591	IdentifierDecl	i		2671569	0					
ANR	2671592	IdentifierDeclType	int		2671569	0					
ANR	2671593	Identifier	i		2671569	1					
ANR	2671594	IdentifierDeclStatement	RAW_ADDR alt_heap = head . AltHeap ( ) ;	654:1:19440:19474	2671569	4	True				
ANR	2671595	IdentifierDecl	alt_heap = head . AltHeap ( )		2671569	0					
ANR	2671596	IdentifierDeclType	RAW_ADDR		2671569	0					
ANR	2671597	Identifier	alt_heap		2671569	1					
ANR	2671598	AssignmentExpression	alt_heap = head . AltHeap ( )		2671569	2		=			
ANR	2671599	Identifier	alt_heap		2671569	0					
ANR	2671600	CallExpression	head . AltHeap ( )		2671569	1					
ANR	2671601	Callee	head . AltHeap		2671569	0					
ANR	2671602	MemberAccess	head . AltHeap		2671569	0					
ANR	2671603	Identifier	head		2671569	0					
ANR	2671604	Identifier	AltHeap		2671569	1					
ANR	2671605	ArgumentList			2671569	1					
ANR	2671606	ExpressionStatement	head . Init ( )	657:1:19485:19496	2671569	5	True				
ANR	2671607	CallExpression	head . Init ( )		2671569	0					
ANR	2671608	Callee	head . Init		2671569	0					
ANR	2671609	MemberAccess	head . Init		2671569	0					
ANR	2671610	Identifier	head		2671569	0					
ANR	2671611	Identifier	Init		2671569	1					
ANR	2671612	ArgumentList			2671569	1					
ANR	2671613	ExpressionStatement	head . AltHeap ( alt_heap )	660:1:19527:19549	2671569	6	True				
ANR	2671614	CallExpression	head . AltHeap ( alt_heap )		2671569	0					
ANR	2671615	Callee	head . AltHeap		2671569	0					
ANR	2671616	MemberAccess	head . AltHeap		2671569	0					
ANR	2671617	Identifier	head		2671569	0					
ANR	2671618	Identifier	AltHeap		2671569	1					
ANR	2671619	ArgumentList	alt_heap		2671569	1					
ANR	2671620	Argument	alt_heap		2671569	0					
ANR	2671621	Identifier	alt_heap		2671569	0					
ANR	2671622	ExpressionStatement	data_start = data_start_addr ( )	666:1:19622:19652	2671569	7	True				
ANR	2671623	AssignmentExpression	data_start = data_start_addr ( )		2671569	0		=			
ANR	2671624	Identifier	data_start		2671569	0					
ANR	2671625	CallExpression	data_start_addr ( )		2671569	1					
ANR	2671626	Callee	data_start_addr		2671569	0					
ANR	2671627	Identifier	data_start_addr		2671569	0					
ANR	2671628	ArgumentList			2671569	1					
ANR	2671629	ExpressionStatement	data_end = data_end_addr ( )	667:1:19655:19681	2671569	8	True				
ANR	2671630	AssignmentExpression	data_end = data_end_addr ( )		2671569	0		=			
ANR	2671631	Identifier	data_end		2671569	0					
ANR	2671632	CallExpression	data_end_addr ( )		2671569	1					
ANR	2671633	Callee	data_end_addr		2671569	0					
ANR	2671634	Identifier	data_end_addr		2671569	0					
ANR	2671635	ArgumentList			2671569	1					
ANR	2671636	ExpressionStatement	"dprintf ( D_CKPT , ""Adding a DATA segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) data_start , ( unsigned long ) data_end )"	668:1:19684:19805	2671569	9	True				
ANR	2671637	CallExpression	"dprintf ( D_CKPT , ""Adding a DATA segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) data_start , ( unsigned long ) data_end )"		2671569	0					
ANR	2671638	Callee	dprintf		2671569	0					
ANR	2671639	Identifier	dprintf		2671569	0					
ANR	2671640	ArgumentList	D_CKPT		2671569	1					
ANR	2671641	Argument	D_CKPT		2671569	0					
ANR	2671642	Identifier	D_CKPT		2671569	0					
ANR	2671643	Argument	"""Adding a DATA segment: start[0x%x], end [0x%x]\\n"""		2671569	1					
ANR	2671644	PrimaryExpression	"""Adding a DATA segment: start[0x%x], end [0x%x]\\n"""		2671569	0					
ANR	2671645	Argument	( unsigned long ) data_start		2671569	2					
ANR	2671646	CastExpression	( unsigned long ) data_start		2671569	0					
ANR	2671647	CastTarget	unsigned long		2671569	0					
ANR	2671648	Identifier	data_start		2671569	1					
ANR	2671649	Argument	( unsigned long ) data_end		2671569	3					
ANR	2671650	CastExpression	( unsigned long ) data_end		2671569	0					
ANR	2671651	CastTarget	unsigned long		2671569	0					
ANR	2671652	Identifier	data_end		2671569	1					
ANR	2671653	ExpressionStatement	"AddSegment ( ""DATA"" , data_start , data_end , 0 )"	670:1:19808:19853	2671569	10	True				
ANR	2671654	CallExpression	"AddSegment ( ""DATA"" , data_start , data_end , 0 )"		2671569	0					
ANR	2671655	Callee	AddSegment		2671569	0					
ANR	2671656	Identifier	AddSegment		2671569	0					
ANR	2671657	ArgumentList	"""DATA"""		2671569	1					
ANR	2671658	Argument	"""DATA"""		2671569	0					
ANR	2671659	PrimaryExpression	"""DATA"""		2671569	0					
ANR	2671660	Argument	data_start		2671569	1					
ANR	2671661	Identifier	data_start		2671569	0					
ANR	2671662	Argument	data_end		2671569	2					
ANR	2671663	Identifier	data_end		2671569	0					
ANR	2671664	Argument	0		2671569	3					
ANR	2671665	PrimaryExpression	0		2671569	0					
ANR	2671666	ExpressionStatement	"find_stack_location ( stack_start , stack_end )"	673:1:19883:19928	2671569	11	True				
ANR	2671667	CallExpression	"find_stack_location ( stack_start , stack_end )"		2671569	0					
ANR	2671668	Callee	find_stack_location		2671569	0					
ANR	2671669	Identifier	find_stack_location		2671569	0					
ANR	2671670	ArgumentList	stack_start		2671569	1					
ANR	2671671	Argument	stack_start		2671569	0					
ANR	2671672	Identifier	stack_start		2671569	0					
ANR	2671673	Argument	stack_end		2671569	1					
ANR	2671674	Identifier	stack_end		2671569	0					
ANR	2671675	ExpressionStatement	"dprintf ( D_CKPT , ""Adding a STACK segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) stack_start , ( unsigned long ) stack_end )"	674:1:19931:20055	2671569	12	True				
ANR	2671676	CallExpression	"dprintf ( D_CKPT , ""Adding a STACK segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) stack_start , ( unsigned long ) stack_end )"		2671569	0					
ANR	2671677	Callee	dprintf		2671569	0					
ANR	2671678	Identifier	dprintf		2671569	0					
ANR	2671679	ArgumentList	D_CKPT		2671569	1					
ANR	2671680	Argument	D_CKPT		2671569	0					
ANR	2671681	Identifier	D_CKPT		2671569	0					
ANR	2671682	Argument	"""Adding a STACK segment: start[0x%x], end [0x%x]\\n"""		2671569	1					
ANR	2671683	PrimaryExpression	"""Adding a STACK segment: start[0x%x], end [0x%x]\\n"""		2671569	0					
ANR	2671684	Argument	( unsigned long ) stack_start		2671569	2					
ANR	2671685	CastExpression	( unsigned long ) stack_start		2671569	0					
ANR	2671686	CastTarget	unsigned long		2671569	0					
ANR	2671687	Identifier	stack_start		2671569	1					
ANR	2671688	Argument	( unsigned long ) stack_end		2671569	3					
ANR	2671689	CastExpression	( unsigned long ) stack_end		2671569	0					
ANR	2671690	CastTarget	unsigned long		2671569	0					
ANR	2671691	Identifier	stack_end		2671569	1					
ANR	2671692	ExpressionStatement	"AddSegment ( ""STACK"" , stack_start , stack_end , 0 )"	676:1:20058:20106	2671569	13	True				
ANR	2671693	CallExpression	"AddSegment ( ""STACK"" , stack_start , stack_end , 0 )"		2671569	0					
ANR	2671694	Callee	AddSegment		2671569	0					
ANR	2671695	Identifier	AddSegment		2671569	0					
ANR	2671696	ArgumentList	"""STACK"""		2671569	1					
ANR	2671697	Argument	"""STACK"""		2671569	0					
ANR	2671698	PrimaryExpression	"""STACK"""		2671569	0					
ANR	2671699	Argument	stack_start		2671569	1					
ANR	2671700	Identifier	stack_start		2671569	0					
ANR	2671701	Argument	stack_end		2671569	2					
ANR	2671702	Identifier	stack_end		2671569	0					
ANR	2671703	Argument	0		2671569	3					
ANR	2671704	PrimaryExpression	0		2671569	0					
ANR	2671705	ExpressionStatement	position = sizeof ( Header ) + head . N_Segs ( ) * sizeof ( SegMap )	770:1:22870:22928	2671569	14	True				
ANR	2671706	AssignmentExpression	position = sizeof ( Header ) + head . N_Segs ( ) * sizeof ( SegMap )		2671569	0		=			
ANR	2671707	Identifier	position		2671569	0					
ANR	2671708	AdditiveExpression	sizeof ( Header ) + head . N_Segs ( ) * sizeof ( SegMap )		2671569	1		+			
ANR	2671709	SizeofExpression	sizeof ( Header )		2671569	0					
ANR	2671710	Sizeof	sizeof		2671569	0					
ANR	2671711	SizeofOperand	Header		2671569	1					
ANR	2671712	MultiplicativeExpression	head . N_Segs ( ) * sizeof ( SegMap )		2671569	1		*			
ANR	2671713	CallExpression	head . N_Segs ( )		2671569	0					
ANR	2671714	Callee	head . N_Segs		2671569	0					
ANR	2671715	MemberAccess	head . N_Segs		2671569	0					
ANR	2671716	Identifier	head		2671569	0					
ANR	2671717	Identifier	N_Segs		2671569	1					
ANR	2671718	ArgumentList			2671569	1					
ANR	2671719	SizeofExpression	sizeof ( SegMap )		2671569	1					
ANR	2671720	Sizeof	sizeof		2671569	0					
ANR	2671721	SizeofOperand	SegMap		2671569	1					
ANR	2671722	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		2671569	15					
ANR	2671723	ForInit	i = 0 ;	771:6:22936:22939	2671569	0	True				
ANR	2671724	AssignmentExpression	i = 0		2671569	0		=			
ANR	2671725	Identifier	i		2671569	0					
ANR	2671726	PrimaryExpression	0		2671569	1					
ANR	2671727	Condition	i < head . N_Segs ( )	771:11:22941:22955	2671569	1	True				
ANR	2671728	RelationalExpression	i < head . N_Segs ( )		2671569	0		<			
ANR	2671729	Identifier	i		2671569	0					
ANR	2671730	CallExpression	head . N_Segs ( )		2671569	1					
ANR	2671731	Callee	head . N_Segs		2671569	0					
ANR	2671732	MemberAccess	head . N_Segs		2671569	0					
ANR	2671733	Identifier	head		2671569	0					
ANR	2671734	Identifier	N_Segs		2671569	1					
ANR	2671735	ArgumentList			2671569	1					
ANR	2671736	PostIncDecOperationExpression	i ++	771:28:22958:22960	2671569	2	True				
ANR	2671737	Identifier	i		2671569	0					
ANR	2671738	IncDec	++		2671569	1					
ANR	2671739	CompoundStatement		130:34:3781:3781	2671569	3					
ANR	2671740	ExpressionStatement	position = map [ i ] . SetPos ( position )	772:2:22968:23004	2671569	0	True				
ANR	2671741	AssignmentExpression	position = map [ i ] . SetPos ( position )		2671569	0		=			
ANR	2671742	Identifier	position		2671569	0					
ANR	2671743	CallExpression	map [ i ] . SetPos ( position )		2671569	1					
ANR	2671744	Callee	map [ i ] . SetPos		2671569	0					
ANR	2671745	MemberAccess	map [ i ] . SetPos		2671569	0					
ANR	2671746	ArrayIndexing	map [ i ]		2671569	0					
ANR	2671747	Identifier	map		2671569	0					
ANR	2671748	Identifier	i		2671569	1					
ANR	2671749	Identifier	SetPos		2671569	1					
ANR	2671750	ArgumentList	position		2671569	1					
ANR	2671751	Argument	position		2671569	0					
ANR	2671752	Identifier	position		2671569	0					
ANR	2671753	ExpressionStatement	"dprintf ( D_CKPT , ""Pos: %d\\n"" , position )"	773:2:23008:23045	2671569	1	True				
ANR	2671754	CallExpression	"dprintf ( D_CKPT , ""Pos: %d\\n"" , position )"		2671569	0					
ANR	2671755	Callee	dprintf		2671569	0					
ANR	2671756	Identifier	dprintf		2671569	0					
ANR	2671757	ArgumentList	D_CKPT		2671569	1					
ANR	2671758	Argument	D_CKPT		2671569	0					
ANR	2671759	Identifier	D_CKPT		2671569	0					
ANR	2671760	Argument	"""Pos: %d\\n"""		2671569	1					
ANR	2671761	PrimaryExpression	"""Pos: %d\\n"""		2671569	0					
ANR	2671762	Argument	position		2671569	2					
ANR	2671763	Identifier	position		2671569	0					
ANR	2671764	IfStatement	if ( position < 0 )		2671569	16					
ANR	2671765	Condition	position < 0	776:5:23056:23067	2671569	0	True				
ANR	2671766	RelationalExpression	position < 0		2671569	0		<			
ANR	2671767	Identifier	position		2671569	0					
ANR	2671768	PrimaryExpression	0		2671569	1					
ANR	2671769	CompoundStatement		135:20:3888:3888	2671569	1					
ANR	2671770	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal error, ckpt size calculated is %d\\n"" , position )"	777:2:23075:23165	2671569	0	True				
ANR	2671771	CallExpression	"dprintf ( D_ALWAYS , ""Internal error, ckpt size calculated is %d\\n"" , position )"		2671569	0					
ANR	2671772	Callee	dprintf		2671569	0					
ANR	2671773	Identifier	dprintf		2671569	0					
ANR	2671774	ArgumentList	D_ALWAYS		2671569	1					
ANR	2671775	Argument	D_ALWAYS		2671569	0					
ANR	2671776	Identifier	D_ALWAYS		2671569	0					
ANR	2671777	Argument	"""Internal error, ckpt size calculated is %d\\n"""		2671569	1					
ANR	2671778	PrimaryExpression	"""Internal error, ckpt size calculated is %d\\n"""		2671569	0					
ANR	2671779	Argument	position		2671569	2					
ANR	2671780	Identifier	position		2671569	0					
ANR	2671781	ExpressionStatement	Suicide ( )	779:2:23169:23178	2671569	1	True				
ANR	2671782	CallExpression	Suicide ( )		2671569	0					
ANR	2671783	Callee	Suicide		2671569	0					
ANR	2671784	Identifier	Suicide		2671569	0					
ANR	2671785	ArgumentList			2671569	1					
ANR	2671786	ExpressionStatement	"dprintf ( D_ALWAYS , ""Size of ckpt image = %d bytes\\n"" , position )"	782:1:23185:23249	2671569	17	True				
ANR	2671787	CallExpression	"dprintf ( D_ALWAYS , ""Size of ckpt image = %d bytes\\n"" , position )"		2671569	0					
ANR	2671788	Callee	dprintf		2671569	0					
ANR	2671789	Identifier	dprintf		2671569	0					
ANR	2671790	ArgumentList	D_ALWAYS		2671569	1					
ANR	2671791	Argument	D_ALWAYS		2671569	0					
ANR	2671792	Identifier	D_ALWAYS		2671569	0					
ANR	2671793	Argument	"""Size of ckpt image = %d bytes\\n"""		2671569	1					
ANR	2671794	PrimaryExpression	"""Size of ckpt image = %d bytes\\n"""		2671569	0					
ANR	2671795	Argument	position		2671569	2					
ANR	2671796	Identifier	position		2671569	0					
ANR	2671797	ExpressionStatement	len = position	783:1:23252:23266	2671569	18	True				
ANR	2671798	AssignmentExpression	len = position		2671569	0		=			
ANR	2671799	Identifier	len		2671569	0					
ANR	2671800	Identifier	position		2671569	1					
ANR	2671801	ExpressionStatement	valid = TRUE	785:1:23270:23282	2671569	19	True				
ANR	2671802	AssignmentExpression	valid = TRUE		2671569	0		=			
ANR	2671803	Identifier	valid		2671569	0					
ANR	2671804	Identifier	TRUE		2671569	1					
ANR	2671805	ReturnType	void		2671569	1					
ANR	2671806	Identifier	Image :: Save		2671569	2					
ANR	2671807	ParameterList			2671569	3					
ANR	2671808	CFGEntryNode	ENTRY		2671569		True				
ANR	2671809	CFGExitNode	EXIT		2671569		True				
ANR	2671810	Symbol	data_end		2671569						
ANR	2671811	Symbol	data_end_addr		2671569						
ANR	2671812	Symbol	map [ i ] . SetPos		2671569						
ANR	2671813	Symbol	D_CKPT		2671569						
ANR	2671814	Symbol	stack_end		2671569						
ANR	2671815	Symbol	* map		2671569						
ANR	2671816	Symbol	data_start		2671569						
ANR	2671817	Symbol	D_ALWAYS		2671569						
ANR	2671818	Symbol	i		2671569						
ANR	2671819	Symbol	TRUE		2671569						
ANR	2671820	Symbol	stack_start		2671569						
ANR	2671821	Symbol	head		2671569						
ANR	2671822	Symbol	valid		2671569						
ANR	2671823	Symbol	head . N_Segs		2671569						
ANR	2671824	Symbol	alt_heap		2671569						
ANR	2671825	Symbol	* i		2671569						
ANR	2671826	Symbol	len		2671569						
ANR	2671827	Symbol	head . AltHeap		2671569						
ANR	2671828	Symbol	position		2671569						
ANR	2671829	Symbol	data_start_addr		2671569						
ANR	2671830	Symbol	map		2671569						
ANR	2671831	Function	SegMap :: SetPos	788:0:23287:23374							
ANR	2671832	FunctionDef	SegMap :: SetPos (ssize_t my_pos)		2671831	0					
ANR	2671833	CompoundStatement		790:0:23328:23374	2671831	0					
ANR	2671834	ExpressionStatement	file_loc = my_pos	791:1:23331:23348	2671831	0	True				
ANR	2671835	AssignmentExpression	file_loc = my_pos		2671831	0		=			
ANR	2671836	Identifier	file_loc		2671831	0					
ANR	2671837	Identifier	my_pos		2671831	1					
ANR	2671838	ReturnStatement	return file_loc + len ;	792:1:23351:23372	2671831	1	True				
ANR	2671839	AdditiveExpression	file_loc + len		2671831	0		+			
ANR	2671840	Identifier	file_loc		2671831	0					
ANR	2671841	Identifier	len		2671831	1					
ANR	2671842	ReturnType	ssize_t		2671831	1					
ANR	2671843	Identifier	SegMap :: SetPos		2671831	2					
ANR	2671844	ParameterList	ssize_t my_pos		2671831	3					
ANR	2671845	Parameter	ssize_t my_pos	789:16:23311:23324	2671831	0	True				
ANR	2671846	ParameterType	ssize_t		2671831	0					
ANR	2671847	Identifier	my_pos		2671831	1					
ANR	2671848	CFGEntryNode	ENTRY		2671831		True				
ANR	2671849	CFGExitNode	EXIT		2671831		True				
ANR	2671850	Symbol	file_loc		2671831						
ANR	2671851	Symbol	len		2671831						
ANR	2671852	Symbol	my_pos		2671831						
ANR	2671853	Function	Image :: Display	795:0:23377:23609							
ANR	2671854	FunctionDef	Image :: Display ()		2671853	0					
ANR	2671855	CompoundStatement		797:0:23399:23609	2671853	0					
ANR	2671856	IdentifierDeclStatement	int i ;	798:1:23402:23408	2671853	0	True				
ANR	2671857	IdentifierDecl	i		2671853	0					
ANR	2671858	IdentifierDeclType	int		2671853	0					
ANR	2671859	Identifier	i		2671853	1					
ANR	2671860	ExpressionStatement	"printf ( ""===========\\n"" )"	800:1:23412:23437	2671853	1	True				
ANR	2671861	CallExpression	"printf ( ""===========\\n"" )"		2671853	0					
ANR	2671862	Callee	printf		2671853	0					
ANR	2671863	Identifier	printf		2671853	0					
ANR	2671864	ArgumentList	"""===========\\n"""		2671853	1					
ANR	2671865	Argument	"""===========\\n"""		2671853	0					
ANR	2671866	PrimaryExpression	"""===========\\n"""		2671853	0					
ANR	2671867	ExpressionStatement	"printf ( ""Ckpt File Header:\\n"" )"	801:1:23440:23471	2671853	2	True				
ANR	2671868	CallExpression	"printf ( ""Ckpt File Header:\\n"" )"		2671853	0					
ANR	2671869	Callee	printf		2671853	0					
ANR	2671870	Identifier	printf		2671853	0					
ANR	2671871	ArgumentList	"""Ckpt File Header:\\n"""		2671853	1					
ANR	2671872	Argument	"""Ckpt File Header:\\n"""		2671853	0					
ANR	2671873	PrimaryExpression	"""Ckpt File Header:\\n"""		2671853	0					
ANR	2671874	ExpressionStatement	head . Display ( )	802:1:23474:23488	2671853	3	True				
ANR	2671875	CallExpression	head . Display ( )		2671853	0					
ANR	2671876	Callee	head . Display		2671853	0					
ANR	2671877	MemberAccess	head . Display		2671853	0					
ANR	2671878	Identifier	head		2671853	0					
ANR	2671879	Identifier	Display		2671853	1					
ANR	2671880	ArgumentList			2671853	1					
ANR	2671881	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		2671853	4					
ANR	2671882	ForInit	i = 0 ;	803:6:23496:23499	2671853	0	True				
ANR	2671883	AssignmentExpression	i = 0		2671853	0		=			
ANR	2671884	Identifier	i		2671853	0					
ANR	2671885	PrimaryExpression	0		2671853	1					
ANR	2671886	Condition	i < head . N_Segs ( )	803:11:23501:23515	2671853	1	True				
ANR	2671887	RelationalExpression	i < head . N_Segs ( )		2671853	0		<			
ANR	2671888	Identifier	i		2671853	0					
ANR	2671889	CallExpression	head . N_Segs ( )		2671853	1					
ANR	2671890	Callee	head . N_Segs		2671853	0					
ANR	2671891	MemberAccess	head . N_Segs		2671853	0					
ANR	2671892	Identifier	head		2671853	0					
ANR	2671893	Identifier	N_Segs		2671853	1					
ANR	2671894	ArgumentList			2671853	1					
ANR	2671895	PostIncDecOperationExpression	i ++	803:28:23518:23520	2671853	2	True				
ANR	2671896	Identifier	i		2671853	0					
ANR	2671897	IncDec	++		2671853	1					
ANR	2671898	CompoundStatement		7:34:124:124	2671853	3					
ANR	2671899	ExpressionStatement	"printf ( ""Segment %d:\\n"" , i )"	804:2:23528:23556	2671853	0	True				
ANR	2671900	CallExpression	"printf ( ""Segment %d:\\n"" , i )"		2671853	0					
ANR	2671901	Callee	printf		2671853	0					
ANR	2671902	Identifier	printf		2671853	0					
ANR	2671903	ArgumentList	"""Segment %d:\\n"""		2671853	1					
ANR	2671904	Argument	"""Segment %d:\\n"""		2671853	0					
ANR	2671905	PrimaryExpression	"""Segment %d:\\n"""		2671853	0					
ANR	2671906	Argument	i		2671853	1					
ANR	2671907	Identifier	i		2671853	0					
ANR	2671908	ExpressionStatement	map [ i ] . Display ( )	805:2:23560:23576	2671853	1	True				
ANR	2671909	CallExpression	map [ i ] . Display ( )		2671853	0					
ANR	2671910	Callee	map [ i ] . Display		2671853	0					
ANR	2671911	MemberAccess	map [ i ] . Display		2671853	0					
ANR	2671912	ArrayIndexing	map [ i ]		2671853	0					
ANR	2671913	Identifier	map		2671853	0					
ANR	2671914	Identifier	i		2671853	1					
ANR	2671915	Identifier	Display		2671853	1					
ANR	2671916	ArgumentList			2671853	1					
ANR	2671917	ExpressionStatement	"printf ( ""===========\\n"" )"	807:1:23582:23607	2671853	5	True				
ANR	2671918	CallExpression	"printf ( ""===========\\n"" )"		2671853	0					
ANR	2671919	Callee	printf		2671853	0					
ANR	2671920	Identifier	printf		2671853	0					
ANR	2671921	ArgumentList	"""===========\\n"""		2671853	1					
ANR	2671922	Argument	"""===========\\n"""		2671853	0					
ANR	2671923	PrimaryExpression	"""===========\\n"""		2671853	0					
ANR	2671924	ReturnType	void		2671853	1					
ANR	2671925	Identifier	Image :: Display		2671853	2					
ANR	2671926	ParameterList			2671853	3					
ANR	2671927	CFGEntryNode	ENTRY		2671853		True				
ANR	2671928	CFGExitNode	EXIT		2671853		True				
ANR	2671929	Symbol	head		2671853						
ANR	2671930	Symbol	head . N_Segs		2671853						
ANR	2671931	Symbol	* i		2671853						
ANR	2671932	Symbol	* map		2671853						
ANR	2671933	Symbol	i		2671853						
ANR	2671934	Symbol	map		2671853						
ANR	2671935	Function	Image :: AddSegment	810:0:23612:24104							
ANR	2671936	FunctionDef	"Image :: AddSegment (const char * name , RAW_ADDR start , RAW_ADDR end , int prot)"		2671935	0					
ANR	2671937	CompoundStatement		812:0:23695:24104	2671935	0					
ANR	2671938	IdentifierDeclStatement	RAW_ADDR length = end - start ;	813:1:23698:23727	2671935	0	True				
ANR	2671939	IdentifierDecl	length = end - start		2671935	0					
ANR	2671940	IdentifierDeclType	RAW_ADDR		2671935	0					
ANR	2671941	Identifier	length		2671935	1					
ANR	2671942	AssignmentExpression	length = end - start		2671935	2		=			
ANR	2671943	Identifier	length		2671935	0					
ANR	2671944	AdditiveExpression	end - start		2671935	1		-			
ANR	2671945	Identifier	end		2671935	0					
ANR	2671946	Identifier	start		2671935	1					
ANR	2671947	IdentifierDeclStatement	int idx = head . N_Segs ( ) ;	814:1:23730:23753	2671935	1	True				
ANR	2671948	IdentifierDecl	idx = head . N_Segs ( )		2671935	0					
ANR	2671949	IdentifierDeclType	int		2671935	0					
ANR	2671950	Identifier	idx		2671935	1					
ANR	2671951	AssignmentExpression	idx = head . N_Segs ( )		2671935	2		=			
ANR	2671952	Identifier	idx		2671935	0					
ANR	2671953	CallExpression	head . N_Segs ( )		2671935	1					
ANR	2671954	Callee	head . N_Segs		2671935	0					
ANR	2671955	MemberAccess	head . N_Segs		2671935	0					
ANR	2671956	Identifier	head		2671935	0					
ANR	2671957	Identifier	N_Segs		2671935	1					
ANR	2671958	ArgumentList			2671935	1					
ANR	2671959	IfStatement	if ( idx >= MAX_SEGS )		2671935	2					
ANR	2671960	Condition	idx >= MAX_SEGS	816:5:23761:23775	2671935	0	True				
ANR	2671961	RelationalExpression	idx >= MAX_SEGS		2671935	0		>=			
ANR	2671962	Identifier	idx		2671935	0					
ANR	2671963	Identifier	MAX_SEGS		2671935	1					
ANR	2671964	CompoundStatement		5:23:83:83	2671935	1					
ANR	2671965	ExpressionStatement	"dprintf ( D_ALWAYS , ""Don't know how to grow segment map yet!\\n"" )"	817:2:23783:23847	2671935	0	True				
ANR	2671966	CallExpression	"dprintf ( D_ALWAYS , ""Don't know how to grow segment map yet!\\n"" )"		2671935	0					
ANR	2671967	Callee	dprintf		2671935	0					
ANR	2671968	Identifier	dprintf		2671935	0					
ANR	2671969	ArgumentList	D_ALWAYS		2671935	1					
ANR	2671970	Argument	D_ALWAYS		2671935	0					
ANR	2671971	Identifier	D_ALWAYS		2671935	0					
ANR	2671972	Argument	"""Don't know how to grow segment map yet!\\n"""		2671935	1					
ANR	2671973	PrimaryExpression	"""Don't know how to grow segment map yet!\\n"""		2671935	0					
ANR	2671974	ExpressionStatement	Suicide ( )	818:2:23851:23860	2671935	1	True				
ANR	2671975	CallExpression	Suicide ( )		2671935	0					
ANR	2671976	Callee	Suicide		2671935	0					
ANR	2671977	Identifier	Suicide		2671935	0					
ANR	2671978	ArgumentList			2671935	1					
ANR	2671979	Statement	dprintf	821:1:23867:23873	2671935	3	True				
ANR	2671980	Statement	(	821:8:23874:23874	2671935	4	True				
ANR	2671981	Statement	D_CKPT	821:9:23875:23880	2671935	5	True				
ANR	2671982	Statement	","	821:15:23881:23881	2671935	6	True				
ANR	2671983	Statement	"""Image::AddSegment: name=[%s], start=[%p], end=[%p], length=[0x%x], """	822:2:23886:23954	2671935	7	True				
ANR	2671984	Statement	"""prot=[0x%x]\\n"""	823:2:23958:23972	2671935	8	True				
ANR	2671985	Statement	","	823:17:23973:23973	2671935	9	True				
ANR	2671986	Statement	name	824:2:23978:23981	2671935	10	True				
ANR	2671987	Statement	","	824:6:23982:23982	2671935	11	True				
ANR	2671988	Statement	(	824:8:23984:23984	2671935	12	True				
ANR	2671989	Statement	void	824:9:23985:23988	2671935	13	True				
ANR	2671990	Statement	*	824:13:23989:23989	2671935	14	True				
ANR	2671991	Statement	)	824:14:23990:23990	2671935	15	True				
ANR	2671992	Statement	start	824:15:23991:23995	2671935	16	True				
ANR	2671993	Statement	","	824:20:23996:23996	2671935	17	True				
ANR	2671994	Statement	(	824:22:23998:23998	2671935	18	True				
ANR	2671995	Statement	void	824:23:23999:24002	2671935	19	True				
ANR	2671996	Statement	*	824:27:24003:24003	2671935	20	True				
ANR	2671997	Statement	)	824:28:24004:24004	2671935	21	True				
ANR	2671998	Statement	end	824:29:24005:24007	2671935	22	True				
ANR	2671999	Statement	","	824:32:24008:24008	2671935	23	True				
ANR	2672000	Statement	(	824:34:24010:24010	2671935	24	True				
ANR	2672001	Statement	unsigned	824:35:24011:24018	2671935	25	True				
ANR	2672002	Statement	long	824:44:24020:24023	2671935	26	True				
ANR	2672003	Statement	)	824:48:24024:24024	2671935	27	True				
ANR	2672004	Statement	length	824:49:24025:24030	2671935	28	True				
ANR	2672005	Statement	","	824:55:24031:24031	2671935	29	True				
ANR	2672006	Statement	prot	824:57:24033:24036	2671935	30	True				
ANR	2672007	Statement	)	824:61:24037:24037	2671935	31	True				
ANR	2672008	ExpressionStatement		824:62:24038:24038	2671935	32	True				
ANR	2672009	ExpressionStatement	head . IncrSegs ( )	826:1:24042:24057	2671935	33	True				
ANR	2672010	CallExpression	head . IncrSegs ( )		2671935	0					
ANR	2672011	Callee	head . IncrSegs		2671935	0					
ANR	2672012	MemberAccess	head . IncrSegs		2671935	0					
ANR	2672013	Identifier	head		2671935	0					
ANR	2672014	Identifier	IncrSegs		2671935	1					
ANR	2672015	ArgumentList			2671935	1					
ANR	2672016	ExpressionStatement	"map [ idx ] . Init ( name , start , length , prot )"	827:1:24060:24102	2671935	34	True				
ANR	2672017	CallExpression	"map [ idx ] . Init ( name , start , length , prot )"		2671935	0					
ANR	2672018	Callee	map [ idx ] . Init		2671935	0					
ANR	2672019	MemberAccess	map [ idx ] . Init		2671935	0					
ANR	2672020	ArrayIndexing	map [ idx ]		2671935	0					
ANR	2672021	Identifier	map		2671935	0					
ANR	2672022	Identifier	idx		2671935	1					
ANR	2672023	Identifier	Init		2671935	1					
ANR	2672024	ArgumentList	name		2671935	1					
ANR	2672025	Argument	name		2671935	0					
ANR	2672026	Identifier	name		2671935	0					
ANR	2672027	Argument	start		2671935	1					
ANR	2672028	Identifier	start		2671935	0					
ANR	2672029	Argument	length		2671935	2					
ANR	2672030	Identifier	length		2671935	0					
ANR	2672031	Argument	prot		2671935	3					
ANR	2672032	Identifier	prot		2671935	0					
ANR	2672033	ReturnType	void		2671935	1					
ANR	2672034	Identifier	Image :: AddSegment		2671935	2					
ANR	2672035	ParameterList	"const char * name , RAW_ADDR start , RAW_ADDR end , int prot"		2671935	3					
ANR	2672036	Parameter	const char * name	811:19:23636:23651	2671935	0	True				
ANR	2672037	ParameterType	const char *		2671935	0					
ANR	2672038	Identifier	name		2671935	1					
ANR	2672039	Parameter	RAW_ADDR start	811:37:23654:23667	2671935	1	True				
ANR	2672040	ParameterType	RAW_ADDR		2671935	0					
ANR	2672041	Identifier	start		2671935	1					
ANR	2672042	Parameter	RAW_ADDR end	811:53:23670:23681	2671935	2	True				
ANR	2672043	ParameterType	RAW_ADDR		2671935	0					
ANR	2672044	Identifier	end		2671935	1					
ANR	2672045	Parameter	int prot	811:67:23684:23691	2671935	3	True				
ANR	2672046	ParameterType	int		2671935	0					
ANR	2672047	Identifier	prot		2671935	1					
ANR	2672048	CFGEntryNode	ENTRY		2671935		True				
ANR	2672049	CFGExitNode	EXIT		2671935		True				
ANR	2672050	Symbol	MAX_SEGS		2671935						
ANR	2672051	Symbol	* map		2671935						
ANR	2672052	Symbol	start		2671935						
ANR	2672053	Symbol	length		2671935						
ANR	2672054	Symbol	D_ALWAYS		2671935						
ANR	2672055	Symbol	head		2671935						
ANR	2672056	Symbol	head . N_Segs		2671935						
ANR	2672057	Symbol	prot		2671935						
ANR	2672058	Symbol	name		2671935						
ANR	2672059	Symbol	* idx		2671935						
ANR	2672060	Symbol	end		2671935						
ANR	2672061	Symbol	idx		2671935						
ANR	2672062	Symbol	map		2671935						
ANR	2672063	Function	Image :: FindSeg	830:0:24107:24305							
ANR	2672064	FunctionDef	Image :: FindSeg (void * addr)		2672063	0					
ANR	2672065	CompoundStatement		832:0:24143:24305	2672063	0					
ANR	2672066	IdentifierDeclStatement	int i ;	833:1:24146:24152	2672063	0	True				
ANR	2672067	IdentifierDecl	i		2672063	0					
ANR	2672068	IdentifierDeclType	int		2672063	0					
ANR	2672069	Identifier	i		2672063	1					
ANR	2672070	IfStatement	if ( ! valid )		2672063	1					
ANR	2672071	Condition	! valid	834:5:24159:24164	2672063	0	True				
ANR	2672072	UnaryOperationExpression	! valid		2672063	0					
ANR	2672073	UnaryOperator	!		2672063	0					
ANR	2672074	Identifier	valid		2672063	1					
ANR	2672075	CompoundStatement		3:14:24:24	2672063	1					
ANR	2672076	ReturnStatement	return NULL ;	835:2:24172:24183	2672063	0	True				
ANR	2672077	Identifier	NULL		2672063	0					
ANR	2672078	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		2672063	2					
ANR	2672079	ForInit	i = 0 ;	837:6:24194:24197	2672063	0	True				
ANR	2672080	AssignmentExpression	i = 0		2672063	0		=			
ANR	2672081	Identifier	i		2672063	0					
ANR	2672082	PrimaryExpression	0		2672063	1					
ANR	2672083	Condition	i < head . N_Segs ( )	837:11:24199:24213	2672063	1	True				
ANR	2672084	RelationalExpression	i < head . N_Segs ( )		2672063	0		<			
ANR	2672085	Identifier	i		2672063	0					
ANR	2672086	CallExpression	head . N_Segs ( )		2672063	1					
ANR	2672087	Callee	head . N_Segs		2672063	0					
ANR	2672088	MemberAccess	head . N_Segs		2672063	0					
ANR	2672089	Identifier	head		2672063	0					
ANR	2672090	Identifier	N_Segs		2672063	1					
ANR	2672091	ArgumentList			2672063	1					
ANR	2672092	PostIncDecOperationExpression	i ++	837:28:24216:24218	2672063	2	True				
ANR	2672093	Identifier	i		2672063	0					
ANR	2672094	IncDec	++		2672063	1					
ANR	2672095	CompoundStatement		6:34:78:78	2672063	3					
ANR	2672096	IfStatement	if ( map [ i ] . Contains ( addr ) )		2672063	0					
ANR	2672097	Condition	map [ i ] . Contains ( addr )	838:6:24230:24250	2672063	0	True				
ANR	2672098	CallExpression	map [ i ] . Contains ( addr )		2672063	0					
ANR	2672099	Callee	map [ i ] . Contains		2672063	0					
ANR	2672100	MemberAccess	map [ i ] . Contains		2672063	0					
ANR	2672101	ArrayIndexing	map [ i ]		2672063	0					
ANR	2672102	Identifier	map		2672063	0					
ANR	2672103	Identifier	i		2672063	1					
ANR	2672104	Identifier	Contains		2672063	1					
ANR	2672105	ArgumentList	addr		2672063	1					
ANR	2672106	Argument	addr		2672063	0					
ANR	2672107	Identifier	addr		2672063	0					
ANR	2672108	CompoundStatement		7:30:110:110	2672063	1					
ANR	2672109	ReturnStatement	return map [ i ] . GetName ( ) ;	839:3:24259:24282	2672063	0	True				
ANR	2672110	CallExpression	map [ i ] . GetName ( )		2672063	0					
ANR	2672111	Callee	map [ i ] . GetName		2672063	0					
ANR	2672112	MemberAccess	map [ i ] . GetName		2672063	0					
ANR	2672113	ArrayIndexing	map [ i ]		2672063	0					
ANR	2672114	Identifier	map		2672063	0					
ANR	2672115	Identifier	i		2672063	1					
ANR	2672116	Identifier	GetName		2672063	1					
ANR	2672117	ArgumentList			2672063	1					
ANR	2672118	ReturnStatement	return NULL ;	842:1:24292:24303	2672063	3	True				
ANR	2672119	Identifier	NULL		2672063	0					
ANR	2672120	ReturnType	char *		2672063	1					
ANR	2672121	Identifier	Image :: FindSeg		2672063	2					
ANR	2672122	ParameterList	void * addr		2672063	3					
ANR	2672123	Parameter	void * addr	831:16:24130:24139	2672063	0	True				
ANR	2672124	ParameterType	void *		2672063	0					
ANR	2672125	Identifier	addr		2672063	1					
ANR	2672126	CFGEntryNode	ENTRY		2672063		True				
ANR	2672127	CFGExitNode	EXIT		2672063		True				
ANR	2672128	Symbol	valid		2672063						
ANR	2672129	Symbol	head		2672063						
ANR	2672130	Symbol	head . N_Segs		2672063						
ANR	2672131	Symbol	NULL		2672063						
ANR	2672132	Symbol	* i		2672063						
ANR	2672133	Symbol	map [ i ] . GetName		2672063						
ANR	2672134	Symbol	* map		2672063						
ANR	2672135	Symbol	i		2672063						
ANR	2672136	Symbol	map [ i ] . Contains		2672063						
ANR	2672137	Symbol	addr		2672063						
ANR	2672138	Symbol	map		2672063						
ANR	2672139	Function	SegMap :: Contains	845:0:24308:24421							
ANR	2672140	FunctionDef	SegMap :: Contains (void * addr)		2672139	0					
ANR	2672141	CompoundStatement		847:0:24344:24421	2672139	0					
ANR	2672142	ReturnStatement	return ( ( RAW_ADDR ) addr >= core_loc ) && ( ( RAW_ADDR ) addr < core_loc + len ) ;	848:1:24347:24419	2672139	0	True				
ANR	2672143	AndExpression	( ( RAW_ADDR ) addr >= core_loc ) && ( ( RAW_ADDR ) addr < core_loc + len )		2672139	0		&&			
ANR	2672144	RelationalExpression	( RAW_ADDR ) addr >= core_loc		2672139	0		>=			
ANR	2672145	CastExpression	( RAW_ADDR ) addr		2672139	0					
ANR	2672146	CastTarget	RAW_ADDR		2672139	0					
ANR	2672147	Identifier	addr		2672139	1					
ANR	2672148	Identifier	core_loc		2672139	1					
ANR	2672149	RelationalExpression	( RAW_ADDR ) addr < core_loc + len		2672139	1		<			
ANR	2672150	CastExpression	( RAW_ADDR ) addr		2672139	0					
ANR	2672151	CastTarget	RAW_ADDR		2672139	0					
ANR	2672152	Identifier	addr		2672139	1					
ANR	2672153	AdditiveExpression	core_loc + len		2672139	1		+			
ANR	2672154	Identifier	core_loc		2672139	0					
ANR	2672155	Identifier	len		2672139	1					
ANR	2672156	ReturnType	BOOL		2672139	1					
ANR	2672157	Identifier	SegMap :: Contains		2672139	2					
ANR	2672158	ParameterList	void * addr		2672139	3					
ANR	2672159	Parameter	void * addr	846:18:24331:24340	2672139	0	True				
ANR	2672160	ParameterType	void *		2672139	0					
ANR	2672161	Identifier	addr		2672139	1					
ANR	2672162	CFGEntryNode	ENTRY		2672139		True				
ANR	2672163	CFGExitNode	EXIT		2672139		True				
ANR	2672164	Symbol	len		2672139						
ANR	2672165	Symbol	addr		2672139						
ANR	2672166	Symbol	core_loc		2672139						
ANR	2672167	Function	Image :: Restore	856:0:24563:26948							
ANR	2672168	FunctionDef	Image :: Restore ()		2672167	0					
ANR	2672169	CompoundStatement		858:0:24585:26948	2672167	0					
ANR	2672170	IdentifierDeclStatement	int save_fd = fd ;	859:1:24588:24605	2672167	0	True				
ANR	2672171	IdentifierDecl	save_fd = fd		2672167	0					
ANR	2672172	IdentifierDeclType	int		2672167	0					
ANR	2672173	Identifier	save_fd		2672167	1					
ANR	2672174	AssignmentExpression	save_fd = fd		2672167	2		=			
ANR	2672175	Identifier	fd		2672167	0					
ANR	2672176	Identifier	fd		2672167	1					
ANR	2672177	IfStatement	if ( head . AltHeap ( ) > 0 )		2672167	1					
ANR	2672178	Condition	head . AltHeap ( ) > 0	866:5:24829:24846	2672167	0	True				
ANR	2672179	RelationalExpression	head . AltHeap ( ) > 0		2672167	0		>			
ANR	2672180	CallExpression	head . AltHeap ( )		2672167	0					
ANR	2672181	Callee	head . AltHeap		2672167	0					
ANR	2672182	MemberAccess	head . AltHeap		2672167	0					
ANR	2672183	Identifier	head		2672167	0					
ANR	2672184	Identifier	AltHeap		2672167	1					
ANR	2672185	ArgumentList			2672167	1					
ANR	2672186	PrimaryExpression	0		2672167	1					
ANR	2672187	CompoundStatement		9:25:263:263	2672167	1					
ANR	2672188	ExpressionStatement	condor_morecore ( 0 )	867:2:24853:24871	2672167	0	True				
ANR	2672189	CallExpression	condor_morecore ( 0 )		2672167	0					
ANR	2672190	Callee	condor_morecore		2672167	0					
ANR	2672191	Identifier	condor_morecore		2672167	0					
ANR	2672192	ArgumentList	0		2672167	1					
ANR	2672193	Argument	0		2672167	0					
ANR	2672194	PrimaryExpression	0		2672167	0					
ANR	2672195	IfStatement	if ( head . Magic ( ) == COMPRESS_MAGIC )		2672167	2					
ANR	2672196	Condition	head . Magic ( ) == COMPRESS_MAGIC	869:5:24881:24910	2672167	0	True				
ANR	2672197	EqualityExpression	head . Magic ( ) == COMPRESS_MAGIC		2672167	0		==			
ANR	2672198	CallExpression	head . Magic ( )		2672167	0					
ANR	2672199	Callee	head . Magic		2672167	0					
ANR	2672200	MemberAccess	head . Magic		2672167	0					
ANR	2672201	Identifier	head		2672167	0					
ANR	2672202	Identifier	Magic		2672167	1					
ANR	2672203	ArgumentList			2672167	1					
ANR	2672204	Identifier	COMPRESS_MAGIC		2672167	1					
ANR	2672205	CompoundStatement		12:37:327:327	2672167	1					
ANR	2672206	IfStatement	if ( head . AltHeap ( ) == 0 )		2672167	0					
ANR	2672207	Condition	head . AltHeap ( ) == 0	870:6:24921:24939	2672167	0	True				
ANR	2672208	EqualityExpression	head . AltHeap ( ) == 0		2672167	0		==			
ANR	2672209	CallExpression	head . AltHeap ( )		2672167	0					
ANR	2672210	Callee	head . AltHeap		2672167	0					
ANR	2672211	MemberAccess	head . AltHeap		2672167	0					
ANR	2672212	Identifier	head		2672167	0					
ANR	2672213	Identifier	AltHeap		2672167	1					
ANR	2672214	ArgumentList			2672167	1					
ANR	2672215	PrimaryExpression	0		2672167	1					
ANR	2672216	CompoundStatement		13:27:356:356	2672167	1					
ANR	2672217	Statement	dprintf	871:3:24947:24953	2672167	0	True				
ANR	2672218	Statement	(	871:10:24954:24954	2672167	1	True				
ANR	2672219	Statement	D_ALWAYS	871:12:24956:24963	2672167	2	True				
ANR	2672220	Statement	","	871:20:24964:24964	2672167	3	True				
ANR	2672221	Statement	"""Checkpoint is compressed but no alt heap is """	871:22:24966:25011	2672167	4	True				
ANR	2672222	Statement	"""specified!  Aborting restart.\\n"""	872:6:25019:25051	2672167	5	True				
ANR	2672223	Statement	)	872:40:25053:25053	2672167	6	True				
ANR	2672224	ExpressionStatement		872:41:25054:25054	2672167	7	True				
ANR	2672225	Statement	fprintf	873:3:25059:25065	2672167	8	True				
ANR	2672226	Statement	(	873:10:25066:25066	2672167	9	True				
ANR	2672227	Statement	stderr	873:12:25068:25073	2672167	10	True				
ANR	2672228	Statement	","	873:18:25074:25074	2672167	11	True				
ANR	2672229	Statement	"""CONDOR ERROR: Checkpoint header is malformed. """	873:20:25076:25123	2672167	12	True				
ANR	2672230	Statement	"""Compression is specified without a corresponding alt """	874:6:25131:25185	2672167	13	True				
ANR	2672231	Statement	"""heap.\\n"""	875:6:25193:25201	2672167	14	True				
ANR	2672232	Statement	)	875:16:25203:25203	2672167	15	True				
ANR	2672233	ExpressionStatement		875:17:25204:25204	2672167	16	True				
ANR	2672234	ExpressionStatement	exit ( 1 )	876:3:25209:25218	2672167	17	True				
ANR	2672235	CallExpression	exit ( 1 )		2672167	0					
ANR	2672236	Callee	exit		2672167	0					
ANR	2672237	Identifier	exit		2672167	0					
ANR	2672238	ArgumentList	1		2672167	1					
ANR	2672239	Argument	1		2672167	0					
ANR	2672240	PrimaryExpression	1		2672167	0					
ANR	2672241	ExpressionStatement	"dprintf ( D_ALWAYS , ""Reading compressed segments...\\n"" )"	878:2:25226:25281	2672167	1	True				
ANR	2672242	CallExpression	"dprintf ( D_ALWAYS , ""Reading compressed segments...\\n"" )"		2672167	0					
ANR	2672243	Callee	dprintf		2672167	0					
ANR	2672244	Identifier	dprintf		2672167	0					
ANR	2672245	ArgumentList	D_ALWAYS		2672167	1					
ANR	2672246	Argument	D_ALWAYS		2672167	0					
ANR	2672247	Identifier	D_ALWAYS		2672167	0					
ANR	2672248	Argument	"""Reading compressed segments...\\n"""		2672167	1					
ANR	2672249	PrimaryExpression	"""Reading compressed segments...\\n"""		2672167	0					
ANR	2672250	ExpressionStatement	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )	879:2:25285:25336	2672167	2	True				
ANR	2672251	AssignmentExpression	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		2672167	0		=			
ANR	2672252	Identifier	zstr		2672167	0					
ANR	2672253	CastExpression	( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		2672167	1					
ANR	2672254	CastTarget	z_stream *		2672167	0					
ANR	2672255	CallExpression	condor_malloc ( sizeof ( z_stream ) )		2672167	1					
ANR	2672256	Callee	condor_malloc		2672167	0					
ANR	2672257	Identifier	condor_malloc		2672167	0					
ANR	2672258	ArgumentList	sizeof ( z_stream )		2672167	1					
ANR	2672259	Argument	sizeof ( z_stream )		2672167	0					
ANR	2672260	SizeofExpression	sizeof ( z_stream )		2672167	0					
ANR	2672261	Sizeof	sizeof		2672167	0					
ANR	2672262	SizeofOperand	z_stream		2672167	1					
ANR	2672263	IfStatement	if ( ! zstr )		2672167	3					
ANR	2672264	Condition	! zstr	880:6:25344:25348	2672167	0	True				
ANR	2672265	UnaryOperationExpression	! zstr		2672167	0					
ANR	2672266	UnaryOperator	!		2672167	0					
ANR	2672267	Identifier	zstr		2672167	1					
ANR	2672268	CompoundStatement		23:13:765:765	2672167	1					
ANR	2672269	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	881:3:25356:25411	2672167	0	True				
ANR	2672270	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		2672167	0					
ANR	2672271	Callee	dprintf		2672167	0					
ANR	2672272	Identifier	dprintf		2672167	0					
ANR	2672273	ArgumentList	D_ALWAYS		2672167	1					
ANR	2672274	Argument	D_ALWAYS		2672167	0					
ANR	2672275	Identifier	D_ALWAYS		2672167	0					
ANR	2672276	Argument	"""out of memory in condor_malloc!\\n"""		2672167	1					
ANR	2672277	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		2672167	0					
ANR	2672278	ExpressionStatement	Suicide ( )	882:3:25416:25425	2672167	1	True				
ANR	2672279	CallExpression	Suicide ( )		2672167	0					
ANR	2672280	Callee	Suicide		2672167	0					
ANR	2672281	Identifier	Suicide		2672167	0					
ANR	2672282	ArgumentList			2672167	1					
ANR	2672283	ExpressionStatement	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )	884:2:25433:25480	2672167	4	True				
ANR	2672284	AssignmentExpression	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )		2672167	0		=			
ANR	2672285	Identifier	zbuf		2672167	0					
ANR	2672286	CastExpression	( unsigned char * ) condor_malloc ( zbufsize )		2672167	1					
ANR	2672287	CastTarget	unsigned char *		2672167	0					
ANR	2672288	CallExpression	condor_malloc ( zbufsize )		2672167	1					
ANR	2672289	Callee	condor_malloc		2672167	0					
ANR	2672290	Identifier	condor_malloc		2672167	0					
ANR	2672291	ArgumentList	zbufsize		2672167	1					
ANR	2672292	Argument	zbufsize		2672167	0					
ANR	2672293	Identifier	zbufsize		2672167	0					
ANR	2672294	IfStatement	if ( ! zbuf )		2672167	5					
ANR	2672295	Condition	! zbuf	885:6:25488:25492	2672167	0	True				
ANR	2672296	UnaryOperationExpression	! zbuf		2672167	0					
ANR	2672297	UnaryOperator	!		2672167	0					
ANR	2672298	Identifier	zbuf		2672167	1					
ANR	2672299	CompoundStatement		28:13:909:909	2672167	1					
ANR	2672300	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	886:3:25500:25555	2672167	0	True				
ANR	2672301	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		2672167	0					
ANR	2672302	Callee	dprintf		2672167	0					
ANR	2672303	Identifier	dprintf		2672167	0					
ANR	2672304	ArgumentList	D_ALWAYS		2672167	1					
ANR	2672305	Argument	D_ALWAYS		2672167	0					
ANR	2672306	Identifier	D_ALWAYS		2672167	0					
ANR	2672307	Argument	"""out of memory in condor_malloc!\\n"""		2672167	1					
ANR	2672308	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		2672167	0					
ANR	2672309	ExpressionStatement	Suicide ( )	887:3:25560:25569	2672167	1	True				
ANR	2672310	CallExpression	Suicide ( )		2672167	0					
ANR	2672311	Callee	Suicide		2672167	0					
ANR	2672312	Identifier	Suicide		2672167	0					
ANR	2672313	ArgumentList			2672167	1					
ANR	2672314	ExpressionStatement	zstr -> zalloc = zalloc	889:2:25577:25598	2672167	6	True				
ANR	2672315	AssignmentExpression	zstr -> zalloc = zalloc		2672167	0		=			
ANR	2672316	PtrMemberAccess	zstr -> zalloc		2672167	0					
ANR	2672317	Identifier	zstr		2672167	0					
ANR	2672318	Identifier	zalloc		2672167	1					
ANR	2672319	Identifier	zalloc		2672167	1					
ANR	2672320	ExpressionStatement	zstr -> zfree = zfree	890:2:25602:25621	2672167	7	True				
ANR	2672321	AssignmentExpression	zstr -> zfree = zfree		2672167	0		=			
ANR	2672322	PtrMemberAccess	zstr -> zfree		2672167	0					
ANR	2672323	Identifier	zstr		2672167	0					
ANR	2672324	Identifier	zfree		2672167	1					
ANR	2672325	Identifier	zfree		2672167	1					
ANR	2672326	ExpressionStatement	zstr -> opaque = Z_NULL	891:2:25625:25646	2672167	8	True				
ANR	2672327	AssignmentExpression	zstr -> opaque = Z_NULL		2672167	0		=			
ANR	2672328	PtrMemberAccess	zstr -> opaque		2672167	0					
ANR	2672329	Identifier	zstr		2672167	0					
ANR	2672330	Identifier	opaque		2672167	1					
ANR	2672331	Identifier	Z_NULL		2672167	1					
ANR	2672332	IfStatement	if ( inflateInit ( zstr ) != Z_OK )		2672167	9					
ANR	2672333	Condition	inflateInit ( zstr ) != Z_OK	892:6:25654:25678	2672167	0	True				
ANR	2672334	EqualityExpression	inflateInit ( zstr ) != Z_OK		2672167	0		!=			
ANR	2672335	CallExpression	inflateInit ( zstr )		2672167	0					
ANR	2672336	Callee	inflateInit		2672167	0					
ANR	2672337	Identifier	inflateInit		2672167	0					
ANR	2672338	ArgumentList	zstr		2672167	1					
ANR	2672339	Argument	zstr		2672167	0					
ANR	2672340	Identifier	zstr		2672167	0					
ANR	2672341	Identifier	Z_OK		2672167	1					
ANR	2672342	CompoundStatement		35:33:1095:1095	2672167	1					
ANR	2672343	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (inflateInit): %s\\n"" , zstr -> msg )"	893:3:25686:25744	2672167	0	True				
ANR	2672344	CallExpression	"dprintf ( D_ALWAYS , ""zlib (inflateInit): %s\\n"" , zstr -> msg )"		2672167	0					
ANR	2672345	Callee	dprintf		2672167	0					
ANR	2672346	Identifier	dprintf		2672167	0					
ANR	2672347	ArgumentList	D_ALWAYS		2672167	1					
ANR	2672348	Argument	D_ALWAYS		2672167	0					
ANR	2672349	Identifier	D_ALWAYS		2672167	0					
ANR	2672350	Argument	"""zlib (inflateInit): %s\\n"""		2672167	1					
ANR	2672351	PrimaryExpression	"""zlib (inflateInit): %s\\n"""		2672167	0					
ANR	2672352	Argument	zstr -> msg		2672167	2					
ANR	2672353	PtrMemberAccess	zstr -> msg		2672167	0					
ANR	2672354	Identifier	zstr		2672167	0					
ANR	2672355	Identifier	msg		2672167	1					
ANR	2672356	ExpressionStatement	Suicide ( )	894:3:25749:25758	2672167	1	True				
ANR	2672357	CallExpression	Suicide ( )		2672167	0					
ANR	2672358	Callee	Suicide		2672167	0					
ANR	2672359	Identifier	Suicide		2672167	0					
ANR	2672360	ArgumentList			2672167	1					
ANR	2672361	ExpressionStatement	RestoreAllSegsExceptStack ( )	902:1:25894:25921	2672167	3	True				
ANR	2672362	CallExpression	RestoreAllSegsExceptStack ( )		2672167	0					
ANR	2672363	Callee	RestoreAllSegsExceptStack		2672167	0					
ANR	2672364	Identifier	RestoreAllSegsExceptStack		2672167	0					
ANR	2672365	ArgumentList			2672167	1					
ANR	2672366	ExpressionStatement	fd = save_fd	907:1:26120:26132	2672167	4	True				
ANR	2672367	AssignmentExpression	fd = save_fd		2672167	0		=			
ANR	2672368	Identifier	fd		2672167	0					
ANR	2672369	Identifier	save_fd		2672167	1					
ANR	2672370	ExpressionStatement	_condor_gtodc_init ( _condor_global_gtodc )	915:1:26515:26555	2672167	5	True				
ANR	2672371	CallExpression	_condor_gtodc_init ( _condor_global_gtodc )		2672167	0					
ANR	2672372	Callee	_condor_gtodc_init		2672167	0					
ANR	2672373	Identifier	_condor_gtodc_init		2672167	0					
ANR	2672374	ArgumentList	_condor_global_gtodc		2672167	1					
ANR	2672375	Argument	_condor_global_gtodc		2672167	0					
ANR	2672376	Identifier	_condor_global_gtodc		2672167	0					
ANR	2672377	ExpressionStatement	"dprintf ( D_CKPT , ""About to execute on TmpStk\\n"" )"	920:1:26724:26771	2672167	6	True				
ANR	2672378	CallExpression	"dprintf ( D_CKPT , ""About to execute on TmpStk\\n"" )"		2672167	0					
ANR	2672379	Callee	dprintf		2672167	0					
ANR	2672380	Identifier	dprintf		2672167	0					
ANR	2672381	ArgumentList	D_CKPT		2672167	1					
ANR	2672382	Argument	D_CKPT		2672167	0					
ANR	2672383	Identifier	D_CKPT		2672167	0					
ANR	2672384	Argument	"""About to execute on TmpStk\\n"""		2672167	1					
ANR	2672385	PrimaryExpression	"""About to execute on TmpStk\\n"""		2672167	0					
ANR	2672386	ExpressionStatement	ExecuteOnTmpStk ( RestoreStack )	921:1:26774:26805	2672167	7	True				
ANR	2672387	CallExpression	ExecuteOnTmpStk ( RestoreStack )		2672167	0					
ANR	2672388	Callee	ExecuteOnTmpStk		2672167	0					
ANR	2672389	Identifier	ExecuteOnTmpStk		2672167	0					
ANR	2672390	ArgumentList	RestoreStack		2672167	1					
ANR	2672391	Argument	RestoreStack		2672167	0					
ANR	2672392	Identifier	RestoreStack		2672167	0					
ANR	2672393	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: reached code past the restore point!\\n"" )"	924:1:26866:26934	2672167	8	True				
ANR	2672394	CallExpression	"dprintf ( D_ALWAYS , ""Error: reached code past the restore point!\\n"" )"		2672167	0					
ANR	2672395	Callee	dprintf		2672167	0					
ANR	2672396	Identifier	dprintf		2672167	0					
ANR	2672397	ArgumentList	D_ALWAYS		2672167	1					
ANR	2672398	Argument	D_ALWAYS		2672167	0					
ANR	2672399	Identifier	D_ALWAYS		2672167	0					
ANR	2672400	Argument	"""Error: reached code past the restore point!\\n"""		2672167	1					
ANR	2672401	PrimaryExpression	"""Error: reached code past the restore point!\\n"""		2672167	0					
ANR	2672402	ExpressionStatement	Suicide ( )	925:1:26937:26946	2672167	9	True				
ANR	2672403	CallExpression	Suicide ( )		2672167	0					
ANR	2672404	Callee	Suicide		2672167	0					
ANR	2672405	Identifier	Suicide		2672167	0					
ANR	2672406	ArgumentList			2672167	1					
ANR	2672407	ReturnType	void		2672167	1					
ANR	2672408	Identifier	Image :: Restore		2672167	2					
ANR	2672409	ParameterList			2672167	3					
ANR	2672410	CFGEntryNode	ENTRY		2672167		True				
ANR	2672411	CFGExitNode	EXIT		2672167		True				
ANR	2672412	Symbol	save_fd		2672167						
ANR	2672413	Symbol	zbuf		2672167						
ANR	2672414	Symbol	zfree		2672167						
ANR	2672415	Symbol	zstr -> zalloc		2672167						
ANR	2672416	Symbol	_condor_global_gtodc		2672167						
ANR	2672417	Symbol	zalloc		2672167						
ANR	2672418	Symbol	D_CKPT		2672167						
ANR	2672419	Symbol	head . Magic		2672167						
ANR	2672420	Symbol	COMPRESS_MAGIC		2672167						
ANR	2672421	Symbol	D_ALWAYS		2672167						
ANR	2672422	Symbol	inflateInit		2672167						
ANR	2672423	Symbol	* zstr		2672167						
ANR	2672424	Symbol	zstr -> opaque		2672167						
ANR	2672425	Symbol	Z_OK		2672167						
ANR	2672426	Symbol	zstr		2672167						
ANR	2672427	Symbol	head		2672167						
ANR	2672428	Symbol	condor_malloc		2672167						
ANR	2672429	Symbol	RestoreStack		2672167						
ANR	2672430	Symbol	zstr -> msg		2672167						
ANR	2672431	Symbol	head . AltHeap		2672167						
ANR	2672432	Symbol	zbufsize		2672167						
ANR	2672433	Symbol	zstr -> zfree		2672167						
ANR	2672434	Symbol	fd		2672167						
ANR	2672435	Symbol	Z_NULL		2672167						
ANR	2672436	Function	memcpy	932:0:27147:27346							
ANR	2672437	FunctionDef	"memcpy (void * s1 , const void * s2 , size_t n)"		2672436	0					
ANR	2672438	CompoundStatement		933:0:27196:27346	2672436	0					
ANR	2672439	IdentifierDeclStatement	char * cs1 = NULL ;	934:1:27199:27215	2672436	0	True				
ANR	2672440	IdentifierDecl	* cs1 = NULL		2672436	0					
ANR	2672441	IdentifierDeclType	char *		2672436	0					
ANR	2672442	Identifier	cs1		2672436	1					
ANR	2672443	AssignmentExpression	* cs1 = NULL		2672436	2		=			
ANR	2672444	Identifier	NULL		2672436	0					
ANR	2672445	Identifier	NULL		2672436	1					
ANR	2672446	IdentifierDeclStatement	char * cs2 = NULL ;	935:1:27218:27234	2672436	1	True				
ANR	2672447	IdentifierDecl	* cs2 = NULL		2672436	0					
ANR	2672448	IdentifierDeclType	char *		2672436	0					
ANR	2672449	Identifier	cs2		2672436	1					
ANR	2672450	AssignmentExpression	* cs2 = NULL		2672436	2		=			
ANR	2672451	Identifier	NULL		2672436	0					
ANR	2672452	Identifier	NULL		2672436	1					
ANR	2672453	IdentifierDeclStatement	void * r = s1 ;	936:1:27237:27249	2672436	2	True				
ANR	2672454	IdentifierDecl	* r = s1		2672436	0					
ANR	2672455	IdentifierDeclType	void *		2672436	0					
ANR	2672456	Identifier	r		2672436	1					
ANR	2672457	AssignmentExpression	* r = s1		2672436	2		=			
ANR	2672458	Identifier	s1		2672436	0					
ANR	2672459	Identifier	s1		2672436	1					
ANR	2672460	ExpressionStatement	cs1 = ( char * ) s1	938:1:27253:27268	2672436	3	True				
ANR	2672461	AssignmentExpression	cs1 = ( char * ) s1		2672436	0		=			
ANR	2672462	Identifier	cs1		2672436	0					
ANR	2672463	CastExpression	( char * ) s1		2672436	1					
ANR	2672464	CastTarget	char *		2672436	0					
ANR	2672465	Identifier	s1		2672436	1					
ANR	2672466	ExpressionStatement	cs2 = ( char * ) s2	939:1:27271:27286	2672436	4	True				
ANR	2672467	AssignmentExpression	cs2 = ( char * ) s2		2672436	0		=			
ANR	2672468	Identifier	cs2		2672436	0					
ANR	2672469	CastExpression	( char * ) s2		2672436	1					
ANR	2672470	CastTarget	char *		2672436	0					
ANR	2672471	Identifier	s2		2672436	1					
ANR	2672472	WhileStatement	while ( n > 0 )		2672436	5					
ANR	2672473	Condition	n > 0	941:8:27297:27301	2672436	0	True				
ANR	2672474	RelationalExpression	n > 0		2672436	0		>			
ANR	2672475	Identifier	n		2672436	0					
ANR	2672476	PrimaryExpression	0		2672436	1					
ANR	2672477	CompoundStatement		9:15:107:107	2672436	1					
ANR	2672478	ExpressionStatement	* cs1 ++ = * cs2 ++	942:2:27308:27323	2672436	0	True				
ANR	2672479	AssignmentExpression	* cs1 ++ = * cs2 ++		2672436	0		=			
ANR	2672480	UnaryOperationExpression	* cs1 ++		2672436	0					
ANR	2672481	UnaryOperator	*		2672436	0					
ANR	2672482	PostIncDecOperationExpression	cs1 ++		2672436	1					
ANR	2672483	Identifier	cs1		2672436	0					
ANR	2672484	IncDec	++		2672436	1					
ANR	2672485	UnaryOperationExpression	* cs2 ++		2672436	1					
ANR	2672486	UnaryOperator	*		2672436	0					
ANR	2672487	PostIncDecOperationExpression	cs2 ++		2672436	1					
ANR	2672488	Identifier	cs2		2672436	0					
ANR	2672489	IncDec	++		2672436	1					
ANR	2672490	ExpressionStatement	n --	943:2:27327:27330	2672436	1	True				
ANR	2672491	PostIncDecOperationExpression	n --		2672436	0					
ANR	2672492	Identifier	n		2672436	0					
ANR	2672493	IncDec	--		2672436	1					
ANR	2672494	ReturnStatement	return r ;	945:1:27336:27344	2672436	6	True				
ANR	2672495	Identifier	r		2672436	0					
ANR	2672496	ReturnType	void *		2672436	1					
ANR	2672497	Identifier	memcpy		2672436	2					
ANR	2672498	ParameterList	"void * s1 , const void * s2 , size_t n"		2672436	3					
ANR	2672499	Parameter	void * s1	932:13:27160:27167	2672436	0	True				
ANR	2672500	ParameterType	void *		2672436	0					
ANR	2672501	Identifier	s1		2672436	1					
ANR	2672502	Parameter	const void * s2	932:23:27170:27183	2672436	1	True				
ANR	2672503	ParameterType	const void *		2672436	0					
ANR	2672504	Identifier	s2		2672436	1					
ANR	2672505	Parameter	size_t n	932:39:27186:27193	2672436	2	True				
ANR	2672506	ParameterType	size_t		2672436	0					
ANR	2672507	Identifier	n		2672436	1					
ANR	2672508	CFGEntryNode	ENTRY		2672436		True				
ANR	2672509	CFGExitNode	EXIT		2672436		True				
ANR	2672510	Symbol	cs1		2672436						
ANR	2672511	Symbol	* cs2 ++		2672436						
ANR	2672512	Symbol	r		2672436						
ANR	2672513	Symbol	NULL		2672436						
ANR	2672514	Symbol	cs2		2672436						
ANR	2672515	Symbol	* cs1 ++		2672436						
ANR	2672516	Symbol	s1		2672436						
ANR	2672517	Symbol	n		2672436						
ANR	2672518	Symbol	s2		2672436						
ANR	2672519	Function	_memcpy	947:0:27348:27427							
ANR	2672520	FunctionDef	"_memcpy (void * s1 , const void * s2 , size_t n)"		2672519	0					
ANR	2672521	CompoundStatement		948:0:27398:27427	2672519	0					
ANR	2672522	ReturnStatement	"return memcpy ( s1 , s2 , n ) ;"	949:1:27401:27425	2672519	0	True				
ANR	2672523	CallExpression	"memcpy ( s1 , s2 , n )"		2672519	0					
ANR	2672524	Callee	memcpy		2672519	0					
ANR	2672525	Identifier	memcpy		2672519	0					
ANR	2672526	ArgumentList	s1		2672519	1					
ANR	2672527	Argument	s1		2672519	0					
ANR	2672528	Identifier	s1		2672519	0					
ANR	2672529	Argument	s2		2672519	1					
ANR	2672530	Identifier	s2		2672519	0					
ANR	2672531	Argument	n		2672519	2					
ANR	2672532	Identifier	n		2672519	0					
ANR	2672533	ReturnType	void *		2672519	1					
ANR	2672534	Identifier	_memcpy		2672519	2					
ANR	2672535	ParameterList	"void * s1 , const void * s2 , size_t n"		2672519	3					
ANR	2672536	Parameter	void * s1	947:14:27362:27369	2672519	0	True				
ANR	2672537	ParameterType	void *		2672519	0					
ANR	2672538	Identifier	s1		2672519	1					
ANR	2672539	Parameter	const void * s2	947:24:27372:27385	2672519	1	True				
ANR	2672540	ParameterType	const void *		2672519	0					
ANR	2672541	Identifier	s2		2672519	1					
ANR	2672542	Parameter	size_t n	947:40:27388:27395	2672519	2	True				
ANR	2672543	ParameterType	size_t		2672519	0					
ANR	2672544	Identifier	n		2672519	1					
ANR	2672545	CFGEntryNode	ENTRY		2672519		True				
ANR	2672546	CFGExitNode	EXIT		2672519		True				
ANR	2672547	Symbol	memcpy		2672519						
ANR	2672548	Symbol	s1		2672519						
ANR	2672549	Symbol	n		2672519						
ANR	2672550	Symbol	s2		2672519						
ANR	2672551	Function	mystrcmp	955:0:27512:27682							
ANR	2672552	FunctionDef	"mystrcmp (const char * str1 , const char * str2)"		2672551	0					
ANR	2672553	CompoundStatement		956:0:27568:27682	2672551	0					
ANR	2672554	WhileStatement	while ( * str1 != '\\0' && * str2 != '\\0' && * str1 == * str2 )		2672551	0					
ANR	2672555	Condition	* str1 != '\\0' && * str2 != '\\0' && * str1 == * str2	957:8:27578:27625	2672551	0	True				
ANR	2672556	AndExpression	* str1 != '\\0' && * str2 != '\\0' && * str1 == * str2		2672551	0		&&			
ANR	2672557	EqualityExpression	* str1 != '\\0'		2672551	0		!=			
ANR	2672558	UnaryOperationExpression	* str1		2672551	0					
ANR	2672559	UnaryOperator	*		2672551	0					
ANR	2672560	Identifier	str1		2672551	1					
ANR	2672561	PrimaryExpression	'\\0'		2672551	1					
ANR	2672562	AndExpression	* str2 != '\\0' && * str1 == * str2		2672551	1		&&			
ANR	2672563	EqualityExpression	* str2 != '\\0'		2672551	0		!=			
ANR	2672564	UnaryOperationExpression	* str2		2672551	0					
ANR	2672565	UnaryOperator	*		2672551	0					
ANR	2672566	Identifier	str2		2672551	1					
ANR	2672567	PrimaryExpression	'\\0'		2672551	1					
ANR	2672568	EqualityExpression	* str1 == * str2		2672551	1		==			
ANR	2672569	UnaryOperationExpression	* str1		2672551	0					
ANR	2672570	UnaryOperator	*		2672551	0					
ANR	2672571	Identifier	str1		2672551	1					
ANR	2672572	UnaryOperationExpression	* str2		2672551	1					
ANR	2672573	UnaryOperator	*		2672551	0					
ANR	2672574	Identifier	str2		2672551	1					
ANR	2672575	CompoundStatement		2:58:59:59	2672551	1					
ANR	2672576	ExpressionStatement	str1 ++	958:2:27632:27638	2672551	0	True				
ANR	2672577	PostIncDecOperationExpression	str1 ++		2672551	0					
ANR	2672578	Identifier	str1		2672551	0					
ANR	2672579	IncDec	++		2672551	1					
ANR	2672580	ExpressionStatement	str2 ++	959:2:27642:27648	2672551	1	True				
ANR	2672581	PostIncDecOperationExpression	str2 ++		2672551	0					
ANR	2672582	Identifier	str2		2672551	0					
ANR	2672583	IncDec	++		2672551	1					
ANR	2672584	ReturnStatement	return ( int ) * str1 - * str2 ;	961:1:27654:27680	2672551	1	True				
ANR	2672585	AdditiveExpression	( int ) * str1 - * str2		2672551	0		-			
ANR	2672586	CastExpression	( int ) * str1		2672551	0					
ANR	2672587	CastTarget	int		2672551	0					
ANR	2672588	UnaryOperationExpression	* str1		2672551	1					
ANR	2672589	UnaryOperator	*		2672551	0					
ANR	2672590	Identifier	str1		2672551	1					
ANR	2672591	UnaryOperationExpression	* str2		2672551	1					
ANR	2672592	UnaryOperator	*		2672551	0					
ANR	2672593	Identifier	str2		2672551	1					
ANR	2672594	ReturnType	static int		2672551	1					
ANR	2672595	Identifier	mystrcmp		2672551	2					
ANR	2672596	ParameterList	"const char * str1 , const char * str2"		2672551	3					
ANR	2672597	Parameter	const char * str1	955:20:27532:27547	2672551	0	True				
ANR	2672598	ParameterType	const char *		2672551	0					
ANR	2672599	Identifier	str1		2672551	1					
ANR	2672600	Parameter	const char * str2	955:38:27550:27565	2672551	1	True				
ANR	2672601	ParameterType	const char *		2672551	0					
ANR	2672602	Identifier	str2		2672551	1					
ANR	2672603	CFGEntryNode	ENTRY		2672551		True				
ANR	2672604	CFGExitNode	EXIT		2672551		True				
ANR	2672605	Symbol	* str1		2672551						
ANR	2672606	Symbol	* str2		2672551						
ANR	2672607	Symbol	str1		2672551						
ANR	2672608	Symbol	str2		2672551						
ANR	2672609	DeclStmt									
ANR	2672610	Decl							int	int ( void )	GETPAGESIZE
ANR	2672611	Function	GETPAGESIZE	967:0:27756:28014							
ANR	2672612	FunctionDef	GETPAGESIZE ()		2672611	0					
ANR	2672613	CompoundStatement		968:0:27785:28014	2672611	0					
ANR	2672614	ReturnStatement	return SYSCALL ( SYS_getpagesize ) ;	970:1:27817:27848	2672611	0	True				
ANR	2672615	CallExpression	SYSCALL ( SYS_getpagesize )		2672611	0					
ANR	2672616	Callee	SYSCALL		2672611	0					
ANR	2672617	Identifier	SYSCALL		2672611	0					
ANR	2672618	ArgumentList	SYS_getpagesize		2672611	1					
ANR	2672619	Argument	SYS_getpagesize		2672611	0					
ANR	2672620	Identifier	SYS_getpagesize		2672611	0					
ANR	2672621	ReturnType	static int		2672611	1					
ANR	2672622	Identifier	GETPAGESIZE		2672611	2					
ANR	2672623	ParameterList			2672611	3					
ANR	2672624	CFGEntryNode	ENTRY		2672611		True				
ANR	2672625	CFGExitNode	EXIT		2672611		True				
ANR	2672626	Symbol	SYS_getpagesize		2672611						
ANR	2672627	Symbol	SYSCALL		2672611						
ANR	2672628	Function	Image :: RestoreSeg	979:0:28024:28480							
ANR	2672629	FunctionDef	Image :: RestoreSeg (const char * seg_name)		2672628	0					
ANR	2672630	CompoundStatement		981:0:28071:28480	2672628	0					
ANR	2672631	IdentifierDeclStatement	int i ;	982:1:28074:28080	2672628	0	True				
ANR	2672632	IdentifierDecl	i		2672628	0					
ANR	2672633	IdentifierDeclType	int		2672628	0					
ANR	2672634	Identifier	i		2672628	1					
ANR	2672635	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		2672628	1					
ANR	2672636	ForInit	i = 0 ;	984:6:28089:28092	2672628	0	True				
ANR	2672637	AssignmentExpression	i = 0		2672628	0		=			
ANR	2672638	Identifier	i		2672628	0					
ANR	2672639	PrimaryExpression	0		2672628	1					
ANR	2672640	Condition	i < head . N_Segs ( )	984:11:28094:28108	2672628	1	True				
ANR	2672641	RelationalExpression	i < head . N_Segs ( )		2672628	0		<			
ANR	2672642	Identifier	i		2672628	0					
ANR	2672643	CallExpression	head . N_Segs ( )		2672628	1					
ANR	2672644	Callee	head . N_Segs		2672628	0					
ANR	2672645	MemberAccess	head . N_Segs		2672628	0					
ANR	2672646	Identifier	head		2672628	0					
ANR	2672647	Identifier	N_Segs		2672628	1					
ANR	2672648	ArgumentList			2672628	1					
ANR	2672649	PostIncDecOperationExpression	i ++	984:28:28111:28113	2672628	2	True				
ANR	2672650	Identifier	i		2672628	0					
ANR	2672651	IncDec	++		2672628	1					
ANR	2672652	CompoundStatement		4:34:45:45	2672628	3					
ANR	2672653	IfStatement	"if ( mystrcmp ( seg_name , map [ i ] . GetName ( ) ) == 0 )"		2672628	0					
ANR	2672654	Condition	"mystrcmp ( seg_name , map [ i ] . GetName ( ) ) == 0"	985:6:28125:28164	2672628	0	True				
ANR	2672655	EqualityExpression	"mystrcmp ( seg_name , map [ i ] . GetName ( ) ) == 0"		2672628	0		==			
ANR	2672656	CallExpression	"mystrcmp ( seg_name , map [ i ] . GetName ( ) )"		2672628	0					
ANR	2672657	Callee	mystrcmp		2672628	0					
ANR	2672658	Identifier	mystrcmp		2672628	0					
ANR	2672659	ArgumentList	seg_name		2672628	1					
ANR	2672660	Argument	seg_name		2672628	0					
ANR	2672661	Identifier	seg_name		2672628	0					
ANR	2672662	Argument	map [ i ] . GetName ( )		2672628	1					
ANR	2672663	CallExpression	map [ i ] . GetName ( )		2672628	0					
ANR	2672664	Callee	map [ i ] . GetName		2672628	0					
ANR	2672665	MemberAccess	map [ i ] . GetName		2672628	0					
ANR	2672666	ArrayIndexing	map [ i ]		2672628	0					
ANR	2672667	Identifier	map		2672628	0					
ANR	2672668	Identifier	i		2672628	1					
ANR	2672669	Identifier	GetName		2672628	1					
ANR	2672670	ArgumentList			2672628	1					
ANR	2672671	PrimaryExpression	0		2672628	1					
ANR	2672672	CompoundStatement		5:49:96:96	2672628	1					
ANR	2672673	IfStatement	"if ( ( pos = map [ i ] . Read ( fd , pos ) ) < 0 )"		2672628	0					
ANR	2672674	Condition	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"	986:7:28177:28207	2672628	0	True				
ANR	2672675	RelationalExpression	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"		2672628	0		<			
ANR	2672676	AssignmentExpression	"pos = map [ i ] . Read ( fd , pos )"		2672628	0		=			
ANR	2672677	Identifier	pos		2672628	0					
ANR	2672678	CallExpression	"map [ i ] . Read ( fd , pos )"		2672628	1					
ANR	2672679	Callee	map [ i ] . Read		2672628	0					
ANR	2672680	MemberAccess	map [ i ] . Read		2672628	0					
ANR	2672681	ArrayIndexing	map [ i ]		2672628	0					
ANR	2672682	Identifier	map		2672628	0					
ANR	2672683	Identifier	i		2672628	1					
ANR	2672684	Identifier	Read		2672628	1					
ANR	2672685	ArgumentList	fd		2672628	1					
ANR	2672686	Argument	fd		2672628	0					
ANR	2672687	Identifier	fd		2672628	0					
ANR	2672688	Argument	pos		2672628	1					
ANR	2672689	Identifier	pos		2672628	0					
ANR	2672690	PrimaryExpression	0		2672628	1					
ANR	2672691	CompoundStatement		6:41:139:139	2672628	1					
ANR	2672692	ExpressionStatement	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"	987:4:28217:28262	2672628	0	True				
ANR	2672693	CallExpression	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"		2672628	0					
ANR	2672694	Callee	dprintf		2672628	0					
ANR	2672695	Identifier	dprintf		2672628	0					
ANR	2672696	ArgumentList	D_ALWAYS		2672628	1					
ANR	2672697	Argument	D_ALWAYS		2672628	0					
ANR	2672698	Identifier	D_ALWAYS		2672628	0					
ANR	2672699	Argument	"""SegMap::Read() failed!\\n"""		2672628	1					
ANR	2672700	PrimaryExpression	"""SegMap::Read() failed!\\n"""		2672628	0					
ANR	2672701	ExpressionStatement	Suicide ( )	988:4:28268:28277	2672628	1	True				
ANR	2672702	CallExpression	Suicide ( )		2672628	0					
ANR	2672703	Callee	Suicide		2672628	0					
ANR	2672704	Identifier	Suicide		2672628	0					
ANR	2672705	ArgumentList			2672628	1					
ANR	2672706	ElseStatement	else		2672628	0					
ANR	2672707	CompoundStatement		9:10:217:217	2672628	0					
ANR	2672708	ReturnStatement	return ;	990:4:28295:28301	2672628	0	True				
ANR	2672709	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find segment \\""%s\\""\\n"" , seg_name )"	994:1:28316:28376	2672628	2	True				
ANR	2672710	CallExpression	"dprintf ( D_ALWAYS , ""Can't find segment \\""%s\\""\\n"" , seg_name )"		2672628	0					
ANR	2672711	Callee	dprintf		2672628	0					
ANR	2672712	Identifier	dprintf		2672628	0					
ANR	2672713	ArgumentList	D_ALWAYS		2672628	1					
ANR	2672714	Argument	D_ALWAYS		2672628	0					
ANR	2672715	Identifier	D_ALWAYS		2672628	0					
ANR	2672716	Argument	"""Can't find segment \\""%s\\""\\n"""		2672628	1					
ANR	2672717	PrimaryExpression	"""Can't find segment \\""%s\\""\\n"""		2672628	0					
ANR	2672718	Argument	seg_name		2672628	2					
ANR	2672719	Identifier	seg_name		2672628	0					
ANR	2672720	ExpressionStatement	"fprintf ( stderr , ""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"" , seg_name )"	995:1:28379:28466	2672628	3	True				
ANR	2672721	CallExpression	"fprintf ( stderr , ""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"" , seg_name )"		2672628	0					
ANR	2672722	Callee	fprintf		2672628	0					
ANR	2672723	Identifier	fprintf		2672628	0					
ANR	2672724	ArgumentList	stderr		2672628	1					
ANR	2672725	Argument	stderr		2672628	0					
ANR	2672726	Identifier	stderr		2672628	0					
ANR	2672727	Argument	"""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"""		2672628	1					
ANR	2672728	PrimaryExpression	"""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"""		2672628	0					
ANR	2672729	Argument	seg_name		2672628	2					
ANR	2672730	Identifier	seg_name		2672628	0					
ANR	2672731	ExpressionStatement	exit ( 1 )	997:1:28469:28478	2672628	4	True				
ANR	2672732	CallExpression	exit ( 1 )		2672628	0					
ANR	2672733	Callee	exit		2672628	0					
ANR	2672734	Identifier	exit		2672628	0					
ANR	2672735	ArgumentList	1		2672628	1					
ANR	2672736	Argument	1		2672628	0					
ANR	2672737	PrimaryExpression	1		2672628	0					
ANR	2672738	ReturnType	void		2672628	1					
ANR	2672739	Identifier	Image :: RestoreSeg		2672628	2					
ANR	2672740	ParameterList	const char * seg_name		2672628	3					
ANR	2672741	Parameter	const char * seg_name	980:19:28048:28067	2672628	0	True				
ANR	2672742	ParameterType	const char *		2672628	0					
ANR	2672743	Identifier	seg_name		2672628	1					
ANR	2672744	CFGEntryNode	ENTRY		2672628		True				
ANR	2672745	CFGExitNode	EXIT		2672628		True				
ANR	2672746	Symbol	map [ i ] . Read		2672628						
ANR	2672747	Symbol	* map		2672628						
ANR	2672748	Symbol	mystrcmp		2672628						
ANR	2672749	Symbol	D_ALWAYS		2672628						
ANR	2672750	Symbol	i		2672628						
ANR	2672751	Symbol	stderr		2672628						
ANR	2672752	Symbol	head		2672628						
ANR	2672753	Symbol	head . N_Segs		2672628						
ANR	2672754	Symbol	* i		2672628						
ANR	2672755	Symbol	map [ i ] . GetName		2672628						
ANR	2672756	Symbol	pos		2672628						
ANR	2672757	Symbol	seg_name		2672628						
ANR	2672758	Symbol	map		2672628						
ANR	2672759	Symbol	fd		2672628						
ANR	2672760	Function	Image :: RestoreAllSegsExceptStack	1000:0:28483:29127							
ANR	2672761	FunctionDef	Image :: RestoreAllSegsExceptStack ()		2672760	0					
ANR	2672762	CompoundStatement		1001:0:28523:29127	2672760	0					
ANR	2672763	IdentifierDeclStatement	int i ;	1002:1:28526:28532	2672760	0	True				
ANR	2672764	IdentifierDecl	i		2672760	0					
ANR	2672765	IdentifierDeclType	int		2672760	0					
ANR	2672766	Identifier	i		2672760	1					
ANR	2672767	IdentifierDeclStatement	int save_fd = fd ;	1003:1:28535:28552	2672760	1	True				
ANR	2672768	IdentifierDecl	save_fd = fd		2672760	0					
ANR	2672769	IdentifierDeclType	int		2672760	0					
ANR	2672770	Identifier	save_fd		2672760	1					
ANR	2672771	AssignmentExpression	save_fd = fd		2672760	2		=			
ANR	2672772	Identifier	fd		2672760	0					
ANR	2672773	Identifier	fd		2672760	1					
ANR	2672774	ExpressionStatement	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"	1006:1:28577:28628	2672760	2	True				
ANR	2672775	CallExpression	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"		2672760	0					
ANR	2672776	Callee	dprintf		2672760	0					
ANR	2672777	Identifier	dprintf		2672760	0					
ANR	2672778	ArgumentList	D_ALWAYS		2672760	1					
ANR	2672779	Argument	D_ALWAYS		2672760	0					
ANR	2672780	Identifier	D_ALWAYS		2672760	0					
ANR	2672781	Argument	"""Current segmap dump follows\\n"""		2672760	1					
ANR	2672782	PrimaryExpression	"""Current segmap dump follows\\n"""		2672760	0					
ANR	2672783	ExpressionStatement	display_prmap ( )	1007:1:28631:28646	2672760	3	True				
ANR	2672784	CallExpression	display_prmap ( )		2672760	0					
ANR	2672785	Callee	display_prmap		2672760	0					
ANR	2672786	Identifier	display_prmap		2672760	0					
ANR	2672787	ArgumentList			2672760	1					
ANR	2672788	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		2672760	4					
ANR	2672789	ForInit	i = 0 ;	1009:6:28661:28664	2672760	0	True				
ANR	2672790	AssignmentExpression	i = 0		2672760	0		=			
ANR	2672791	Identifier	i		2672760	0					
ANR	2672792	PrimaryExpression	0		2672760	1					
ANR	2672793	Condition	i < head . N_Segs ( )	1009:11:28666:28680	2672760	1	True				
ANR	2672794	RelationalExpression	i < head . N_Segs ( )		2672760	0		<			
ANR	2672795	Identifier	i		2672760	0					
ANR	2672796	CallExpression	head . N_Segs ( )		2672760	1					
ANR	2672797	Callee	head . N_Segs		2672760	0					
ANR	2672798	MemberAccess	head . N_Segs		2672760	0					
ANR	2672799	Identifier	head		2672760	0					
ANR	2672800	Identifier	N_Segs		2672760	1					
ANR	2672801	ArgumentList			2672760	1					
ANR	2672802	PostIncDecOperationExpression	i ++	1009:28:28683:28685	2672760	2	True				
ANR	2672803	Identifier	i		2672760	0					
ANR	2672804	IncDec	++		2672760	1					
ANR	2672805	CompoundStatement		9:34:165:165	2672760	3					
ANR	2672806	IfStatement	"if ( mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) ) != 0 )"		2672760	0					
ANR	2672807	Condition	"mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) ) != 0"	1010:6:28697:28735	2672760	0	True				
ANR	2672808	EqualityExpression	"mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) ) != 0"		2672760	0		!=			
ANR	2672809	CallExpression	"mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) )"		2672760	0					
ANR	2672810	Callee	mystrcmp		2672760	0					
ANR	2672811	Identifier	mystrcmp		2672760	0					
ANR	2672812	ArgumentList	"""STACK"""		2672760	1					
ANR	2672813	Argument	"""STACK"""		2672760	0					
ANR	2672814	PrimaryExpression	"""STACK"""		2672760	0					
ANR	2672815	Argument	map [ i ] . GetName ( )		2672760	1					
ANR	2672816	CallExpression	map [ i ] . GetName ( )		2672760	0					
ANR	2672817	Callee	map [ i ] . GetName		2672760	0					
ANR	2672818	MemberAccess	map [ i ] . GetName		2672760	0					
ANR	2672819	ArrayIndexing	map [ i ]		2672760	0					
ANR	2672820	Identifier	map		2672760	0					
ANR	2672821	Identifier	i		2672760	1					
ANR	2672822	Identifier	GetName		2672760	1					
ANR	2672823	ArgumentList			2672760	1					
ANR	2672824	PrimaryExpression	0		2672760	1					
ANR	2672825	CompoundStatement		10:48:215:215	2672760	1					
ANR	2672826	IfStatement	"if ( ( pos = map [ i ] . Read ( fd , pos ) ) < 0 )"		2672760	0					
ANR	2672827	Condition	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"	1011:7:28748:28778	2672760	0	True				
ANR	2672828	RelationalExpression	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"		2672760	0		<			
ANR	2672829	AssignmentExpression	"pos = map [ i ] . Read ( fd , pos )"		2672760	0		=			
ANR	2672830	Identifier	pos		2672760	0					
ANR	2672831	CallExpression	"map [ i ] . Read ( fd , pos )"		2672760	1					
ANR	2672832	Callee	map [ i ] . Read		2672760	0					
ANR	2672833	MemberAccess	map [ i ] . Read		2672760	0					
ANR	2672834	ArrayIndexing	map [ i ]		2672760	0					
ANR	2672835	Identifier	map		2672760	0					
ANR	2672836	Identifier	i		2672760	1					
ANR	2672837	Identifier	Read		2672760	1					
ANR	2672838	ArgumentList	fd		2672760	1					
ANR	2672839	Argument	fd		2672760	0					
ANR	2672840	Identifier	fd		2672760	0					
ANR	2672841	Argument	pos		2672760	1					
ANR	2672842	Identifier	pos		2672760	0					
ANR	2672843	PrimaryExpression	0		2672760	1					
ANR	2672844	CompoundStatement		11:41:258:258	2672760	1					
ANR	2672845	ExpressionStatement	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"	1012:4:28788:28834	2672760	0	True				
ANR	2672846	CallExpression	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"		2672760	0					
ANR	2672847	Callee	dprintf		2672760	0					
ANR	2672848	Identifier	dprintf		2672760	0					
ANR	2672849	ArgumentList	D_ALWAYS		2672760	1					
ANR	2672850	Argument	D_ALWAYS		2672760	0					
ANR	2672851	Identifier	D_ALWAYS		2672760	0					
ANR	2672852	Argument	"""SegMap::Read() failed!\\n"""		2672760	1					
ANR	2672853	PrimaryExpression	"""SegMap::Read() failed!\\n"""		2672760	0					
ANR	2672854	ExpressionStatement	Suicide ( )	1013:4:28840:28849	2672760	1	True				
ANR	2672855	CallExpression	Suicide ( )		2672760	0					
ANR	2672856	Callee	Suicide		2672760	0					
ANR	2672857	Identifier	Suicide		2672760	0					
ANR	2672858	ArgumentList			2672760	1					
ANR	2672859	ElseStatement	else		2672760	0					
ANR	2672860	IfStatement	if ( i < head . N_Segs ( ) - 1 )		2672760	0					
ANR	2672861	Condition	i < head . N_Segs ( ) - 1	1016:11:28871:28887	2672760	0	True				
ANR	2672862	RelationalExpression	i < head . N_Segs ( ) - 1		2672760	0		<			
ANR	2672863	Identifier	i		2672760	0					
ANR	2672864	AdditiveExpression	head . N_Segs ( ) - 1		2672760	1		-			
ANR	2672865	CallExpression	head . N_Segs ( )		2672760	0					
ANR	2672866	Callee	head . N_Segs		2672760	0					
ANR	2672867	MemberAccess	head . N_Segs		2672760	0					
ANR	2672868	Identifier	head		2672760	0					
ANR	2672869	Identifier	N_Segs		2672760	1					
ANR	2672870	ArgumentList			2672760	1					
ANR	2672871	PrimaryExpression	1		2672760	1					
ANR	2672872	CompoundStatement		16:30:366:366	2672760	1					
ANR	2672873	Statement	dprintf	1017:3:28895:28901	2672760	0	True				
ANR	2672874	Statement	(	1017:10:28902:28902	2672760	1	True				
ANR	2672875	Statement	D_ALWAYS	1017:12:28904:28911	2672760	2	True				
ANR	2672876	Statement	","	1017:20:28912:28912	2672760	3	True				
ANR	2672877	Statement	"""Checkpoint file error: STACK is not the """	1017:22:28914:28955	2672760	4	True				
ANR	2672878	Statement	"""last segment in ckpt file.\\n"""	1018:5:28962:28991	2672760	5	True				
ANR	2672879	Statement	)	1018:35:28992:28992	2672760	6	True				
ANR	2672880	ExpressionStatement		1018:36:28993:28993	2672760	7	True				
ANR	2672881	Statement	fprintf	1019:3:28998:29004	2672760	8	True				
ANR	2672882	Statement	(	1019:10:29005:29005	2672760	9	True				
ANR	2672883	Statement	stderr	1019:12:29007:29012	2672760	10	True				
ANR	2672884	Statement	","	1019:18:29013:29013	2672760	11	True				
ANR	2672885	Statement	"""CONDOR ERROR: STACK is not the last segment """	1019:20:29015:29060	2672760	12	True				
ANR	2672886	Statement	""" in ckpt file.\\n"""	1020:6:29068:29085	2672760	13	True				
ANR	2672887	Statement	)	1020:25:29087:29087	2672760	14	True				
ANR	2672888	ExpressionStatement		1020:26:29088:29088	2672760	15	True				
ANR	2672889	ExpressionStatement	exit ( 1 )	1021:3:29093:29102	2672760	16	True				
ANR	2672890	CallExpression	exit ( 1 )		2672760	0					
ANR	2672891	Callee	exit		2672760	0					
ANR	2672892	Identifier	exit		2672760	0					
ANR	2672893	ArgumentList	1		2672760	1					
ANR	2672894	Argument	1		2672760	0					
ANR	2672895	PrimaryExpression	1		2672760	0					
ANR	2672896	ExpressionStatement	fd = save_fd	1023:2:29110:29122	2672760	1	True				
ANR	2672897	AssignmentExpression	fd = save_fd		2672760	0		=			
ANR	2672898	Identifier	fd		2672760	0					
ANR	2672899	Identifier	save_fd		2672760	1					
ANR	2672900	ReturnType	void		2672760	1					
ANR	2672901	Identifier	Image :: RestoreAllSegsExceptStack		2672760	2					
ANR	2672902	ParameterList			2672760	3					
ANR	2672903	CFGEntryNode	ENTRY		2672760		True				
ANR	2672904	CFGExitNode	EXIT		2672760		True				
ANR	2672905	Symbol	save_fd		2672760						
ANR	2672906	Symbol	map [ i ] . Read		2672760						
ANR	2672907	Symbol	* map		2672760						
ANR	2672908	Symbol	mystrcmp		2672760						
ANR	2672909	Symbol	D_ALWAYS		2672760						
ANR	2672910	Symbol	i		2672760						
ANR	2672911	Symbol	head		2672760						
ANR	2672912	Symbol	head . N_Segs		2672760						
ANR	2672913	Symbol	* i		2672760						
ANR	2672914	Symbol	map [ i ] . GetName		2672760						
ANR	2672915	Symbol	pos		2672760						
ANR	2672916	Symbol	map		2672760						
ANR	2672917	Symbol	fd		2672760						
ANR	2672918	Function	RestoreStack	1029:0:29132:30076							
ANR	2672919	FunctionDef	RestoreStack ()		2672918	0					
ANR	2672920	CompoundStatement		1031:0:29152:30076	2672918	0					
ANR	2672921	IdentifierDeclStatement	unsigned int nbytes ;	1034:1:29176:29195	2672918	0	True				
ANR	2672922	IdentifierDecl	nbytes		2672918	0					
ANR	2672923	IdentifierDeclType	unsigned int		2672918	0					
ANR	2672924	Identifier	nbytes		2672918	1					
ANR	2672925	IdentifierDeclStatement	int status ;	1038:1:29274:29285	2672918	1	True				
ANR	2672926	IdentifierDecl	status		2672918	0					
ANR	2672927	IdentifierDeclType	int		2672918	0					
ANR	2672928	Identifier	status		2672918	1					
ANR	2672929	ExpressionStatement	"dprintf ( D_CKPT , ""RestoreStack() Entrance!\\n"" )"	1040:1:29289:29334	2672918	2	True				
ANR	2672930	CallExpression	"dprintf ( D_CKPT , ""RestoreStack() Entrance!\\n"" )"		2672918	0					
ANR	2672931	Callee	dprintf		2672918	0					
ANR	2672932	Identifier	dprintf		2672918	0					
ANR	2672933	ArgumentList	D_CKPT		2672918	1					
ANR	2672934	Argument	D_CKPT		2672918	0					
ANR	2672935	Identifier	D_CKPT		2672918	0					
ANR	2672936	Argument	"""RestoreStack() Entrance!\\n"""		2672918	1					
ANR	2672937	PrimaryExpression	"""RestoreStack() Entrance!\\n"""		2672918	0					
ANR	2672938	ExpressionStatement	"MyImage . RestoreSeg ( ""STACK"" )"	1041:1:29337:29366	2672918	3	True				
ANR	2672939	CallExpression	"MyImage . RestoreSeg ( ""STACK"" )"		2672918	0					
ANR	2672940	Callee	MyImage . RestoreSeg		2672918	0					
ANR	2672941	MemberAccess	MyImage . RestoreSeg		2672918	0					
ANR	2672942	Identifier	MyImage		2672918	0					
ANR	2672943	Identifier	RestoreSeg		2672918	1					
ANR	2672944	ArgumentList	"""STACK"""		2672918	1					
ANR	2672945	Argument	"""STACK"""		2672918	0					
ANR	2672946	PrimaryExpression	"""STACK"""		2672918	0					
ANR	2672947	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		2672918	4					
ANR	2672948	Condition	MyImage . GetMode ( ) == REMOTE	1044:5:29440:29466	2672918	0	True				
ANR	2672949	EqualityExpression	MyImage . GetMode ( ) == REMOTE		2672918	0		==			
ANR	2672950	CallExpression	MyImage . GetMode ( )		2672918	0					
ANR	2672951	Callee	MyImage . GetMode		2672918	0					
ANR	2672952	MemberAccess	MyImage . GetMode		2672918	0					
ANR	2672953	Identifier	MyImage		2672918	0					
ANR	2672954	Identifier	GetMode		2672918	1					
ANR	2672955	ArgumentList			2672918	1					
ANR	2672956	Identifier	REMOTE		2672918	1					
ANR	2672957	CompoundStatement		14:35:317:317	2672918	1					
ANR	2672958	ExpressionStatement	nbytes = MyImage . GetLen ( )	1045:2:29474:29499	2672918	0	True				
ANR	2672959	AssignmentExpression	nbytes = MyImage . GetLen ( )		2672918	0		=			
ANR	2672960	Identifier	nbytes		2672918	0					
ANR	2672961	CallExpression	MyImage . GetLen ( )		2672918	1					
ANR	2672962	Callee	MyImage . GetLen		2672918	0					
ANR	2672963	MemberAccess	MyImage . GetLen		2672918	0					
ANR	2672964	Identifier	MyImage		2672918	0					
ANR	2672965	Identifier	GetLen		2672918	1					
ANR	2672966	ArgumentList			2672918	1					
ANR	2672967	ExpressionStatement	nbytes = htonl ( nbytes )	1046:2:29503:29527	2672918	1	True				
ANR	2672968	AssignmentExpression	nbytes = htonl ( nbytes )		2672918	0		=			
ANR	2672969	Identifier	nbytes		2672918	0					
ANR	2672970	CallExpression	htonl ( nbytes )		2672918	1					
ANR	2672971	Callee	htonl		2672918	0					
ANR	2672972	Identifier	htonl		2672918	0					
ANR	2672973	ArgumentList	nbytes		2672918	1					
ANR	2672974	Argument	nbytes		2672918	0					
ANR	2672975	Identifier	nbytes		2672918	0					
ANR	2672976	ExpressionStatement	"status = write ( MyImage . GetFd ( ) , & nbytes , sizeof ( nbytes ) )"	1047:2:29531:29589	2672918	2	True				
ANR	2672977	AssignmentExpression	"status = write ( MyImage . GetFd ( ) , & nbytes , sizeof ( nbytes ) )"		2672918	0		=			
ANR	2672978	Identifier	status		2672918	0					
ANR	2672979	CallExpression	"write ( MyImage . GetFd ( ) , & nbytes , sizeof ( nbytes ) )"		2672918	1					
ANR	2672980	Callee	write		2672918	0					
ANR	2672981	Identifier	write		2672918	0					
ANR	2672982	ArgumentList	MyImage . GetFd ( )		2672918	1					
ANR	2672983	Argument	MyImage . GetFd ( )		2672918	0					
ANR	2672984	CallExpression	MyImage . GetFd ( )		2672918	0					
ANR	2672985	Callee	MyImage . GetFd		2672918	0					
ANR	2672986	MemberAccess	MyImage . GetFd		2672918	0					
ANR	2672987	Identifier	MyImage		2672918	0					
ANR	2672988	Identifier	GetFd		2672918	1					
ANR	2672989	ArgumentList			2672918	1					
ANR	2672990	Argument	& nbytes		2672918	1					
ANR	2672991	UnaryOperationExpression	& nbytes		2672918	0					
ANR	2672992	UnaryOperator	&		2672918	0					
ANR	2672993	Identifier	nbytes		2672918	1					
ANR	2672994	Argument	sizeof ( nbytes )		2672918	2					
ANR	2672995	SizeofExpression	sizeof ( nbytes )		2672918	0					
ANR	2672996	Sizeof	sizeof		2672918	0					
ANR	2672997	SizeofOperand	nbytes		2672918	1					
ANR	2672998	ExpressionStatement	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"" )"	1048:2:29593:29657	2672918	3	True				
ANR	2672999	CallExpression	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"" )"		2672918	0					
ANR	2673000	Callee	dprintf		2672918	0					
ANR	2673001	Identifier	dprintf		2672918	0					
ANR	2673002	ArgumentList	D_ALWAYS		2672918	1					
ANR	2673003	Argument	D_ALWAYS		2672918	0					
ANR	2673004	Identifier	D_ALWAYS		2672918	0					
ANR	2673005	Argument	"""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"""		2672918	1					
ANR	2673006	PrimaryExpression	"""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"""		2672918	0					
ANR	2673007	ExpressionStatement	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )	1050:2:29662:29700	2672918	4	True				
ANR	2673008	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		2672918	0					
ANR	2673009	Callee	SetSyscalls		2672918	0					
ANR	2673010	Identifier	SetSyscalls		2672918	0					
ANR	2673011	ArgumentList	SYS_REMOTE | SYS_MAPPED		2672918	1					
ANR	2673012	Argument	SYS_REMOTE | SYS_MAPPED		2672918	0					
ANR	2673013	InclusiveOrExpression	SYS_REMOTE | SYS_MAPPED		2672918	0		|			
ANR	2673014	Identifier	SYS_REMOTE		2672918	0					
ANR	2673015	Identifier	SYS_MAPPED		2672918	1					
ANR	2673016	ElseStatement	else		2672918	0					
ANR	2673017	CompoundStatement		21:8:557:557	2672918	0					
ANR	2673018	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )	1052:2:29714:29751	2672918	0	True				
ANR	2673019	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )		2672918	0					
ANR	2673020	Callee	SetSyscalls		2672918	0					
ANR	2673021	Identifier	SetSyscalls		2672918	0					
ANR	2673022	ArgumentList	SYS_LOCAL | SYS_MAPPED		2672918	1					
ANR	2673023	Argument	SYS_LOCAL | SYS_MAPPED		2672918	0					
ANR	2673024	InclusiveOrExpression	SYS_LOCAL | SYS_MAPPED		2672918	0		|			
ANR	2673025	Identifier	SYS_LOCAL		2672918	0					
ANR	2673026	Identifier	SYS_MAPPED		2672918	1					
ANR	2673027	IfStatement	if ( zstr )		2672918	5					
ANR	2673028	Condition	zstr	1056:5:29789:29792	2672918	0	True				
ANR	2673029	Identifier	zstr		2672918	0					
ANR	2673030	CompoundStatement		27:2:646:673	2672918	1					
ANR	2673031	IdentifierDeclStatement	int rval = inflateEnd ( zstr ) ;	1057:2:29799:29826	2672918	0	True				
ANR	2673032	IdentifierDecl	rval = inflateEnd ( zstr )		2672918	0					
ANR	2673033	IdentifierDeclType	int		2672918	0					
ANR	2673034	Identifier	rval		2672918	1					
ANR	2673035	AssignmentExpression	rval = inflateEnd ( zstr )		2672918	2		=			
ANR	2673036	Identifier	rval		2672918	0					
ANR	2673037	CallExpression	inflateEnd ( zstr )		2672918	1					
ANR	2673038	Callee	inflateEnd		2672918	0					
ANR	2673039	Identifier	inflateEnd		2672918	0					
ANR	2673040	ArgumentList	zstr		2672918	1					
ANR	2673041	Argument	zstr		2672918	0					
ANR	2673042	Identifier	zstr		2672918	0					
ANR	2673043	IfStatement	if ( rval != Z_OK )		2672918	1					
ANR	2673044	Condition	rval != Z_OK	1058:6:29834:29845	2672918	0	True				
ANR	2673045	EqualityExpression	rval != Z_OK		2672918	0		!=			
ANR	2673046	Identifier	rval		2672918	0					
ANR	2673047	Identifier	Z_OK		2672918	1					
ANR	2673048	CompoundStatement		28:20:695:695	2672918	1					
ANR	2673049	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (inflateEnd): %d\\n"" , rval )"	1059:3:29853:29905	2672918	0	True				
ANR	2673050	CallExpression	"dprintf ( D_ALWAYS , ""zlib (inflateEnd): %d\\n"" , rval )"		2672918	0					
ANR	2673051	Callee	dprintf		2672918	0					
ANR	2673052	Identifier	dprintf		2672918	0					
ANR	2673053	ArgumentList	D_ALWAYS		2672918	1					
ANR	2673054	Argument	D_ALWAYS		2672918	0					
ANR	2673055	Identifier	D_ALWAYS		2672918	0					
ANR	2673056	Argument	"""zlib (inflateEnd): %d\\n"""		2672918	1					
ANR	2673057	PrimaryExpression	"""zlib (inflateEnd): %d\\n"""		2672918	0					
ANR	2673058	Argument	rval		2672918	2					
ANR	2673059	Identifier	rval		2672918	0					
ANR	2673060	ExpressionStatement	Suicide ( )	1060:3:29910:29919	2672918	1	True				
ANR	2673061	CallExpression	Suicide ( )		2672918	0					
ANR	2673062	Callee	Suicide		2672918	0					
ANR	2673063	Identifier	Suicide		2672918	0					
ANR	2673064	ArgumentList			2672918	1					
ANR	2673065	ExpressionStatement	condor_free ( zstr )	1062:2:29927:29944	2672918	2	True				
ANR	2673066	CallExpression	condor_free ( zstr )		2672918	0					
ANR	2673067	Callee	condor_free		2672918	0					
ANR	2673068	Identifier	condor_free		2672918	0					
ANR	2673069	ArgumentList	zstr		2672918	1					
ANR	2673070	Argument	zstr		2672918	0					
ANR	2673071	Identifier	zstr		2672918	0					
ANR	2673072	ExpressionStatement	zstr = NULL	1063:2:29948:29959	2672918	3	True				
ANR	2673073	AssignmentExpression	zstr = NULL		2672918	0		=			
ANR	2673074	Identifier	zstr		2672918	0					
ANR	2673075	Identifier	NULL		2672918	1					
ANR	2673076	ExpressionStatement	condor_free ( zbuf )	1064:2:29963:29980	2672918	4	True				
ANR	2673077	CallExpression	condor_free ( zbuf )		2672918	0					
ANR	2673078	Callee	condor_free		2672918	0					
ANR	2673079	Identifier	condor_free		2672918	0					
ANR	2673080	ArgumentList	zbuf		2672918	1					
ANR	2673081	Argument	zbuf		2672918	0					
ANR	2673082	Identifier	zbuf		2672918	0					
ANR	2673083	ExpressionStatement	zbuf = Z_NULL	1065:2:29984:29997	2672918	5	True				
ANR	2673084	AssignmentExpression	zbuf = Z_NULL		2672918	0		=			
ANR	2673085	Identifier	zbuf		2672918	0					
ANR	2673086	Identifier	Z_NULL		2672918	1					
ANR	2673087	ExpressionStatement	"dprintf ( D_CKPT , ""RestoreStack() Exit!\\n"" )"	1069:1:30011:30052	2672918	6	True				
ANR	2673088	CallExpression	"dprintf ( D_CKPT , ""RestoreStack() Exit!\\n"" )"		2672918	0					
ANR	2673089	Callee	dprintf		2672918	0					
ANR	2673090	Identifier	dprintf		2672918	0					
ANR	2673091	ArgumentList	D_CKPT		2672918	1					
ANR	2673092	Argument	D_CKPT		2672918	0					
ANR	2673093	Identifier	D_CKPT		2672918	0					
ANR	2673094	Argument	"""RestoreStack() Exit!\\n"""		2672918	1					
ANR	2673095	PrimaryExpression	"""RestoreStack() Exit!\\n"""		2672918	0					
ANR	2673096	ExpressionStatement	"LONGJMP ( Env , 1 )"	1071:1:30057:30074	2672918	7	True				
ANR	2673097	CallExpression	"LONGJMP ( Env , 1 )"		2672918	0					
ANR	2673098	Callee	LONGJMP		2672918	0					
ANR	2673099	Identifier	LONGJMP		2672918	0					
ANR	2673100	ArgumentList	Env		2672918	1					
ANR	2673101	Argument	Env		2672918	0					
ANR	2673102	Identifier	Env		2672918	0					
ANR	2673103	Argument	1		2672918	1					
ANR	2673104	PrimaryExpression	1		2672918	0					
ANR	2673105	ReturnType	void		2672918	1					
ANR	2673106	Identifier	RestoreStack		2672918	2					
ANR	2673107	ParameterList			2672918	3					
ANR	2673108	CFGEntryNode	ENTRY		2672918		True				
ANR	2673109	CFGExitNode	EXIT		2672918		True				
ANR	2673110	Symbol	MyImage . GetLen		2672918						
ANR	2673111	Symbol	zbuf		2672918						
ANR	2673112	Symbol	inflateEnd		2672918						
ANR	2673113	Symbol	NULL		2672918						
ANR	2673114	Symbol	D_CKPT		2672918						
ANR	2673115	Symbol	MyImage . GetMode		2672918						
ANR	2673116	Symbol	D_ALWAYS		2672918						
ANR	2673117	Symbol	Z_OK		2672918						
ANR	2673118	Symbol	Env		2672918						
ANR	2673119	Symbol	htonl		2672918						
ANR	2673120	Symbol	MyImage . GetFd		2672918						
ANR	2673121	Symbol	zstr		2672918						
ANR	2673122	Symbol	nbytes		2672918						
ANR	2673123	Symbol	SYS_MAPPED		2672918						
ANR	2673124	Symbol	& nbytes		2672918						
ANR	2673125	Symbol	SYS_REMOTE		2672918						
ANR	2673126	Symbol	SYS_LOCAL		2672918						
ANR	2673127	Symbol	rval		2672918						
ANR	2673128	Symbol	REMOTE		2672918						
ANR	2673129	Symbol	write		2672918						
ANR	2673130	Symbol	MyImage		2672918						
ANR	2673131	Symbol	status		2672918						
ANR	2673132	Symbol	Z_NULL		2672918						
ANR	2673133	Function	Image :: Write	1074:0:30079:30280							
ANR	2673134	FunctionDef	Image :: Write ()		2673133	0					
ANR	2673135	CompoundStatement		1076:0:30098:30280	2673133	0					
ANR	2673136	ExpressionStatement	"dprintf ( D_ALWAYS , ""Image::Write(): fd %d file_name %s\\n"" , fd , file_name ? file_name : ""(NULL)"" )"	1077:1:30101:30197	2673133	0	True				
ANR	2673137	CallExpression	"dprintf ( D_ALWAYS , ""Image::Write(): fd %d file_name %s\\n"" , fd , file_name ? file_name : ""(NULL)"" )"		2673133	0					
ANR	2673138	Callee	dprintf		2673133	0					
ANR	2673139	Identifier	dprintf		2673133	0					
ANR	2673140	ArgumentList	D_ALWAYS		2673133	1					
ANR	2673141	Argument	D_ALWAYS		2673133	0					
ANR	2673142	Identifier	D_ALWAYS		2673133	0					
ANR	2673143	Argument	"""Image::Write(): fd %d file_name %s\\n"""		2673133	1					
ANR	2673144	PrimaryExpression	"""Image::Write(): fd %d file_name %s\\n"""		2673133	0					
ANR	2673145	Argument	fd		2673133	2					
ANR	2673146	Identifier	fd		2673133	0					
ANR	2673147	Argument	"file_name ? file_name : ""(NULL)"""		2673133	3					
ANR	2673148	ConditionalExpression	"file_name ? file_name : ""(NULL)"""		2673133	0					
ANR	2673149	Condition	file_name		2673133	0					
ANR	2673150	Identifier	file_name		2673133	0					
ANR	2673151	Identifier	file_name		2673133	1					
ANR	2673152	PrimaryExpression	"""(NULL)"""		2673133	2					
ANR	2673153	IfStatement	if ( fd == - 1 )		2673133	1					
ANR	2673154	Condition	fd == - 1	1079:5:30204:30211	2673133	0	True				
ANR	2673155	EqualityExpression	fd == - 1		2673133	0		==			
ANR	2673156	Identifier	fd		2673133	0					
ANR	2673157	UnaryOperationExpression	- 1		2673133	1					
ANR	2673158	UnaryOperator	-		2673133	0					
ANR	2673159	PrimaryExpression	1		2673133	1					
ANR	2673160	CompoundStatement		4:15:115:115	2673133	1					
ANR	2673161	ReturnStatement	return Write ( file_name ) ;	1080:2:30218:30243	2673133	0	True				
ANR	2673162	CallExpression	Write ( file_name )		2673133	0					
ANR	2673163	Callee	Write		2673133	0					
ANR	2673164	Identifier	Write		2673133	0					
ANR	2673165	ArgumentList	file_name		2673133	1					
ANR	2673166	Argument	file_name		2673133	0					
ANR	2673167	Identifier	file_name		2673133	0					
ANR	2673168	ElseStatement	else		2673133	0					
ANR	2673169	CompoundStatement		6:8:154:154	2673133	0					
ANR	2673170	ReturnStatement	return Write ( fd ) ;	1082:2:30257:30275	2673133	0	True				
ANR	2673171	CallExpression	Write ( fd )		2673133	0					
ANR	2673172	Callee	Write		2673133	0					
ANR	2673173	Identifier	Write		2673133	0					
ANR	2673174	ArgumentList	fd		2673133	1					
ANR	2673175	Argument	fd		2673133	0					
ANR	2673176	Identifier	fd		2673133	0					
ANR	2673177	ReturnType	int		2673133	1					
ANR	2673178	Identifier	Image :: Write		2673133	2					
ANR	2673179	ParameterList			2673133	3					
ANR	2673180	CFGEntryNode	ENTRY		2673133		True				
ANR	2673181	CFGExitNode	EXIT		2673133		True				
ANR	2673182	Symbol	Write		2673133						
ANR	2673183	Symbol	file_name		2673133						
ANR	2673184	Symbol	D_ALWAYS		2673133						
ANR	2673185	Symbol	fd		2673133						
ANR	2673186	Function	Image :: MSync	1086:0:30283:30367							
ANR	2673187	FunctionDef	Image :: MSync ()		2673186	0					
ANR	2673188	CompoundStatement		1088:0:30303:30367	2673186	0					
ANR	2673189	ForStatement	for ( int i = 0 ; i < head . N_Segs ( ) ; i ++ )		2673186	0					
ANR	2673190	ForInit	int i = 0 ;	1089:6:30311:30318	2673186	0	True				
ANR	2673191	IdentifierDeclStatement	int i = 0 ;		2673186	0					
ANR	2673192	IdentifierDecl	i = 0		2673186	0					
ANR	2673193	IdentifierDeclType	int		2673186	0					
ANR	2673194	Identifier	i		2673186	1					
ANR	2673195	AssignmentExpression	i = 0		2673186	2		=			
ANR	2673196	Identifier	i		2673186	0					
ANR	2673197	PrimaryExpression	0		2673186	1					
ANR	2673198	Condition	i < head . N_Segs ( )	1089:15:30320:30336	2673186	1	True				
ANR	2673199	RelationalExpression	i < head . N_Segs ( )		2673186	0		<			
ANR	2673200	Identifier	i		2673186	0					
ANR	2673201	CallExpression	head . N_Segs ( )		2673186	1					
ANR	2673202	Callee	head . N_Segs		2673186	0					
ANR	2673203	MemberAccess	head . N_Segs		2673186	0					
ANR	2673204	Identifier	head		2673186	0					
ANR	2673205	Identifier	N_Segs		2673186	1					
ANR	2673206	ArgumentList			2673186	1					
ANR	2673207	PostIncDecOperationExpression	i ++	1089:34:30339:30341	2673186	2	True				
ANR	2673208	Identifier	i		2673186	0					
ANR	2673209	IncDec	++		2673186	1					
ANR	2673210	CompoundStatement		2:39:40:40	2673186	3					
ANR	2673211	ExpressionStatement	map [ i ] . MSync ( )	1090:2:30348:30362	2673186	0	True				
ANR	2673212	CallExpression	map [ i ] . MSync ( )		2673186	0					
ANR	2673213	Callee	map [ i ] . MSync		2673186	0					
ANR	2673214	MemberAccess	map [ i ] . MSync		2673186	0					
ANR	2673215	ArrayIndexing	map [ i ]		2673186	0					
ANR	2673216	Identifier	map		2673186	0					
ANR	2673217	Identifier	i		2673186	1					
ANR	2673218	Identifier	MSync		2673186	1					
ANR	2673219	ArgumentList			2673186	1					
ANR	2673220	ReturnType	void		2673186	1					
ANR	2673221	Identifier	Image :: MSync		2673186	2					
ANR	2673222	ParameterList			2673186	3					
ANR	2673223	CFGEntryNode	ENTRY		2673186		True				
ANR	2673224	CFGExitNode	EXIT		2673186		True				
ANR	2673225	Symbol	head		2673186						
ANR	2673226	Symbol	head . N_Segs		2673186						
ANR	2673227	Symbol	* i		2673186						
ANR	2673228	Symbol	* map		2673186						
ANR	2673229	Symbol	i		2673186						
ANR	2673230	Symbol	map		2673186						
ANR	2673231	Function	Image :: Write	1104:0:30829:33359							
ANR	2673232	FunctionDef	Image :: Write (const char * ckpt_file)		2673231	0					
ANR	2673233	CompoundStatement		1106:0:30871:33359	2673231	0					
ANR	2673234	IdentifierDeclStatement	int file_d ;	1107:1:30874:30884	2673231	0	True				
ANR	2673235	IdentifierDecl	file_d		2673231	0					
ANR	2673236	IdentifierDeclType	int		2673231	0					
ANR	2673237	Identifier	file_d		2673231	1					
ANR	2673238	IdentifierDeclStatement	int scm ;	1108:1:30887:30894	2673231	1	True				
ANR	2673239	IdentifierDecl	scm		2673231	0					
ANR	2673240	IdentifierDeclType	int		2673231	0					
ANR	2673241	Identifier	scm		2673231	1					
ANR	2673242	IdentifierDeclStatement	char tmp_name [ PATH_MAX ] ;	1109:1:30897:30922	2673231	2	True				
ANR	2673243	IdentifierDecl	tmp_name [ PATH_MAX ]		2673231	0					
ANR	2673244	IdentifierDeclType	char [ PATH_MAX ]		2673231	0					
ANR	2673245	Identifier	tmp_name		2673231	1					
ANR	2673246	Identifier	PATH_MAX		2673231	2					
ANR	2673247	IfStatement	if ( ckpt_file == 0 )		2673231	3					
ANR	2673248	Condition	ckpt_file == 0	1111:5:30930:30943	2673231	0	True				
ANR	2673249	EqualityExpression	ckpt_file == 0		2673231	0		==			
ANR	2673250	Identifier	ckpt_file		2673231	0					
ANR	2673251	PrimaryExpression	0		2673231	1					
ANR	2673252	CompoundStatement		6:22:75:75	2673231	1					
ANR	2673253	ExpressionStatement	ckpt_file = file_name	1112:2:30951:30972	2673231	0	True				
ANR	2673254	AssignmentExpression	ckpt_file = file_name		2673231	0		=			
ANR	2673255	Identifier	ckpt_file		2673231	0					
ANR	2673256	Identifier	file_name		2673231	1					
ANR	2673257	ExpressionStatement	head . ResetMagic ( )	1115:1:30979:30996	2673231	4	True				
ANR	2673258	CallExpression	head . ResetMagic ( )		2673231	0					
ANR	2673259	Callee	head . ResetMagic		2673231	0					
ANR	2673260	MemberAccess	head . ResetMagic		2673231	0					
ANR	2673261	Identifier	head		2673231	0					
ANR	2673262	Identifier	ResetMagic		2673231	1					
ANR	2673263	ArgumentList			2673231	1					
ANR	2673264	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint name is \\""%s\\""\\n"" , ckpt_file )"	1118:1:31072:31133	2673231	5	True				
ANR	2673265	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint name is \\""%s\\""\\n"" , ckpt_file )"		2673231	0					
ANR	2673266	Callee	dprintf		2673231	0					
ANR	2673267	Identifier	dprintf		2673231	0					
ANR	2673268	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673269	Argument	D_ALWAYS		2673231	0					
ANR	2673270	Identifier	D_ALWAYS		2673231	0					
ANR	2673271	Argument	"""Checkpoint name is \\""%s\\""\\n"""		2673231	1					
ANR	2673272	PrimaryExpression	"""Checkpoint name is \\""%s\\""\\n"""		2673231	0					
ANR	2673273	Argument	ckpt_file		2673231	2					
ANR	2673274	Identifier	ckpt_file		2673231	0					
ANR	2673275	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1121:1:31160:31205	2673231	6	True				
ANR	2673276	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2673231	0		=			
ANR	2673277	Identifier	scm		2673231	0					
ANR	2673278	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2673231	1					
ANR	2673279	Callee	SetSyscalls		2673231	0					
ANR	2673280	Identifier	SetSyscalls		2673231	0					
ANR	2673281	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2673231	1					
ANR	2673282	Argument	SYS_LOCAL | SYS_UNMAPPED		2673231	0					
ANR	2673283	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2673231	0		|			
ANR	2673284	Identifier	SYS_LOCAL		2673231	0					
ANR	2673285	Identifier	SYS_UNMAPPED		2673231	1					
ANR	2673286	ExpressionStatement	tmp_name [ 0 ] = '\\0'	1122:1:31208:31226	2673231	7	True				
ANR	2673287	AssignmentExpression	tmp_name [ 0 ] = '\\0'		2673231	0		=			
ANR	2673288	ArrayIndexing	tmp_name [ 0 ]		2673231	0					
ANR	2673289	Identifier	tmp_name		2673231	0					
ANR	2673290	PrimaryExpression	0		2673231	1					
ANR	2673291	PrimaryExpression	'\\0'		2673231	1					
ANR	2673292	ExpressionStatement	"sprintf ( tmp_name , ""%s.tmp"" , ckpt_file )"	1135:2:31842:31882	2673231	8	True				
ANR	2673293	CallExpression	"sprintf ( tmp_name , ""%s.tmp"" , ckpt_file )"		2673231	0					
ANR	2673294	Callee	sprintf		2673231	0					
ANR	2673295	Identifier	sprintf		2673231	0					
ANR	2673296	ArgumentList	tmp_name		2673231	1					
ANR	2673297	Argument	tmp_name		2673231	0					
ANR	2673298	Identifier	tmp_name		2673231	0					
ANR	2673299	Argument	"""%s.tmp"""		2673231	1					
ANR	2673300	PrimaryExpression	"""%s.tmp"""		2673231	0					
ANR	2673301	Argument	ckpt_file		2673231	2					
ANR	2673302	Identifier	ckpt_file		2673231	0					
ANR	2673303	ExpressionStatement	"dprintf ( D_ALWAYS , ""Tmp name is \\""%s\\""\\n"" , tmp_name )"	1136:2:31886:31939	2673231	9	True				
ANR	2673304	CallExpression	"dprintf ( D_ALWAYS , ""Tmp name is \\""%s\\""\\n"" , tmp_name )"		2673231	0					
ANR	2673305	Callee	dprintf		2673231	0					
ANR	2673306	Identifier	dprintf		2673231	0					
ANR	2673307	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673308	Argument	D_ALWAYS		2673231	0					
ANR	2673309	Identifier	D_ALWAYS		2673231	0					
ANR	2673310	Argument	"""Tmp name is \\""%s\\""\\n"""		2673231	1					
ANR	2673311	PrimaryExpression	"""Tmp name is \\""%s\\""\\n"""		2673231	0					
ANR	2673312	Argument	tmp_name		2673231	2					
ANR	2673313	Identifier	tmp_name		2673231	0					
ANR	2673314	IfStatement	"if ( ( file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len ) ) < 0 )"		2673231	10					
ANR	2673315	Condition	"( file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len ) ) < 0"	1141:6:32176:32282	2673231	0	True				
ANR	2673316	RelationalExpression	"( file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len ) ) < 0"		2673231	0		<			
ANR	2673317	AssignmentExpression	"file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len )"		2673231	0		=			
ANR	2673318	Identifier	file_d		2673231	0					
ANR	2673319	CallExpression	"open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len )"		2673231	1					
ANR	2673320	Callee	open_ckpt_file		2673231	0					
ANR	2673321	Identifier	open_ckpt_file		2673231	0					
ANR	2673322	ArgumentList	tmp_name		2673231	1					
ANR	2673323	Argument	tmp_name		2673231	0					
ANR	2673324	Identifier	tmp_name		2673231	0					
ANR	2673325	Argument	O_WRONLY | O_TRUNC | O_CREAT		2673231	1					
ANR	2673326	InclusiveOrExpression	O_WRONLY | O_TRUNC | O_CREAT		2673231	0		|			
ANR	2673327	Identifier	O_WRONLY		2673231	0					
ANR	2673328	InclusiveOrExpression	O_TRUNC | O_CREAT		2673231	1		|			
ANR	2673329	Identifier	O_TRUNC		2673231	0					
ANR	2673330	Identifier	O_CREAT		2673231	1					
ANR	2673331	Argument	condor_compress_ckpt ? - 1 : len		2673231	2					
ANR	2673332	ConditionalExpression	condor_compress_ckpt ? - 1 : len		2673231	0					
ANR	2673333	Condition	condor_compress_ckpt		2673231	0					
ANR	2673334	Identifier	condor_compress_ckpt		2673231	0					
ANR	2673335	UnaryOperationExpression	- 1		2673231	1					
ANR	2673336	UnaryOperator	-		2673231	0					
ANR	2673337	PrimaryExpression	1		2673231	1					
ANR	2673338	Identifier	len		2673231	2					
ANR	2673339	PrimaryExpression	0		2673231	1					
ANR	2673340	CompoundStatement		37:49:1414:1414	2673231	1					
ANR	2673341	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR:open_ckpt_file failed, aborting ckpt\\n"" )"	1147:3:32394:32460	2673231	0	True				
ANR	2673342	CallExpression	"dprintf ( D_ALWAYS , ""ERROR:open_ckpt_file failed, aborting ckpt\\n"" )"		2673231	0					
ANR	2673343	Callee	dprintf		2673231	0					
ANR	2673344	Identifier	dprintf		2673231	0					
ANR	2673345	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673346	Argument	D_ALWAYS		2673231	0					
ANR	2673347	Identifier	D_ALWAYS		2673231	0					
ANR	2673348	Argument	"""ERROR:open_ckpt_file failed, aborting ckpt\\n"""		2673231	1					
ANR	2673349	PrimaryExpression	"""ERROR:open_ckpt_file failed, aborting ckpt\\n"""		2673231	0					
ANR	2673350	ExpressionStatement	SetSyscalls ( scm )	1148:3:32465:32481	2673231	1	True				
ANR	2673351	CallExpression	SetSyscalls ( scm )		2673231	0					
ANR	2673352	Callee	SetSyscalls		2673231	0					
ANR	2673353	Identifier	SetSyscalls		2673231	0					
ANR	2673354	ArgumentList	scm		2673231	1					
ANR	2673355	Argument	scm		2673231	0					
ANR	2673356	Identifier	scm		2673231	0					
ANR	2673357	ReturnStatement	return - 1 ;	1149:3:32486:32495	2673231	2	True				
ANR	2673358	UnaryOperationExpression	- 1		2673231	0					
ANR	2673359	UnaryOperator	-		2673231	0					
ANR	2673360	PrimaryExpression	1		2673231	1					
ANR	2673361	IfStatement	if ( Write ( file_d ) < 0 )		2673231	11					
ANR	2673362	Condition	Write ( file_d ) < 0	1154:5:32609:32625	2673231	0	True				
ANR	2673363	RelationalExpression	Write ( file_d ) < 0		2673231	0		<			
ANR	2673364	CallExpression	Write ( file_d )		2673231	0					
ANR	2673365	Callee	Write		2673231	0					
ANR	2673366	Identifier	Write		2673231	0					
ANR	2673367	ArgumentList	file_d		2673231	1					
ANR	2673368	Argument	file_d		2673231	0					
ANR	2673369	Identifier	file_d		2673231	0					
ANR	2673370	PrimaryExpression	0		2673231	1					
ANR	2673371	CompoundStatement		49:25:1757:1757	2673231	1					
ANR	2673372	ExpressionStatement	SetSyscalls ( scm )	1155:2:32633:32649	2673231	0	True				
ANR	2673373	CallExpression	SetSyscalls ( scm )		2673231	0					
ANR	2673374	Callee	SetSyscalls		2673231	0					
ANR	2673375	Identifier	SetSyscalls		2673231	0					
ANR	2673376	ArgumentList	scm		2673231	1					
ANR	2673377	Argument	scm		2673231	0					
ANR	2673378	Identifier	scm		2673231	0					
ANR	2673379	ReturnStatement	return - 1 ;	1156:2:32653:32662	2673231	1	True				
ANR	2673380	UnaryOperationExpression	- 1		2673231	0					
ANR	2673381	UnaryOperator	-		2673231	0					
ANR	2673382	PrimaryExpression	1		2673231	1					
ANR	2673383	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to close ckpt fd (%d)\\n"" , file_d )"	1160:1:32703:32763	2673231	12	True				
ANR	2673384	CallExpression	"dprintf ( D_ALWAYS , ""About to close ckpt fd (%d)\\n"" , file_d )"		2673231	0					
ANR	2673385	Callee	dprintf		2673231	0					
ANR	2673386	Identifier	dprintf		2673231	0					
ANR	2673387	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673388	Argument	D_ALWAYS		2673231	0					
ANR	2673389	Identifier	D_ALWAYS		2673231	0					
ANR	2673390	Argument	"""About to close ckpt fd (%d)\\n"""		2673231	1					
ANR	2673391	PrimaryExpression	"""About to close ckpt fd (%d)\\n"""		2673231	0					
ANR	2673392	Argument	file_d		2673231	2					
ANR	2673393	Identifier	file_d		2673231	0					
ANR	2673394	IfStatement	if ( close ( file_d ) < 0 )		2673231	13					
ANR	2673395	Condition	close ( file_d ) < 0	1161:5:32770:32786	2673231	0	True				
ANR	2673396	RelationalExpression	close ( file_d ) < 0		2673231	0		<			
ANR	2673397	CallExpression	close ( file_d )		2673231	0					
ANR	2673398	Callee	close		2673231	0					
ANR	2673399	Identifier	close		2673231	0					
ANR	2673400	ArgumentList	file_d		2673231	1					
ANR	2673401	Argument	file_d		2673231	0					
ANR	2673402	Identifier	file_d		2673231	0					
ANR	2673403	PrimaryExpression	0		2673231	1					
ANR	2673404	CompoundStatement		56:25:1918:1918	2673231	1					
ANR	2673405	ExpressionStatement	"dprintf ( D_ALWAYS , ""Close failed!\\n"" )"	1162:2:32794:32832	2673231	0	True				
ANR	2673406	CallExpression	"dprintf ( D_ALWAYS , ""Close failed!\\n"" )"		2673231	0					
ANR	2673407	Callee	dprintf		2673231	0					
ANR	2673408	Identifier	dprintf		2673231	0					
ANR	2673409	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673410	Argument	D_ALWAYS		2673231	0					
ANR	2673411	Identifier	D_ALWAYS		2673231	0					
ANR	2673412	Argument	"""Close failed!\\n"""		2673231	1					
ANR	2673413	PrimaryExpression	"""Close failed!\\n"""		2673231	0					
ANR	2673414	ExpressionStatement	SetSyscalls ( scm )	1163:2:32836:32852	2673231	1	True				
ANR	2673415	CallExpression	SetSyscalls ( scm )		2673231	0					
ANR	2673416	Callee	SetSyscalls		2673231	0					
ANR	2673417	Identifier	SetSyscalls		2673231	0					
ANR	2673418	ArgumentList	scm		2673231	1					
ANR	2673419	Argument	scm		2673231	0					
ANR	2673420	Identifier	scm		2673231	0					
ANR	2673421	ReturnStatement	return - 1 ;	1164:2:32856:32865	2673231	2	True				
ANR	2673422	UnaryOperationExpression	- 1		2673231	0					
ANR	2673423	UnaryOperator	-		2673231	0					
ANR	2673424	PrimaryExpression	1		2673231	1					
ANR	2673425	ExpressionStatement	"dprintf ( D_ALWAYS , ""Closed OK\\n"" )"	1166:1:32871:32905	2673231	14	True				
ANR	2673426	CallExpression	"dprintf ( D_ALWAYS , ""Closed OK\\n"" )"		2673231	0					
ANR	2673427	Callee	dprintf		2673231	0					
ANR	2673428	Identifier	dprintf		2673231	0					
ANR	2673429	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673430	Argument	D_ALWAYS		2673231	0					
ANR	2673431	Identifier	D_ALWAYS		2673231	0					
ANR	2673432	Argument	"""Closed OK\\n"""		2673231	1					
ANR	2673433	PrimaryExpression	"""Closed OK\\n"""		2673231	0					
ANR	2673434	ExpressionStatement	SetSyscalls ( scm )	1168:1:32909:32927	2673231	15	True				
ANR	2673435	CallExpression	SetSyscalls ( scm )		2673231	0					
ANR	2673436	Callee	SetSyscalls		2673231	0					
ANR	2673437	Identifier	SetSyscalls		2673231	0					
ANR	2673438	ArgumentList	scm		2673231	1					
ANR	2673439	Argument	scm		2673231	0					
ANR	2673440	Identifier	scm		2673231	0					
ANR	2673441	IfStatement	if ( tmp_name [ 0 ] != '\\0' )		2673231	16					
ANR	2673442	Condition	tmp_name [ 0 ] != '\\0'	1171:5:33005:33023	2673231	0	True				
ANR	2673443	EqualityExpression	tmp_name [ 0 ] != '\\0'		2673231	0		!=			
ANR	2673444	ArrayIndexing	tmp_name [ 0 ]		2673231	0					
ANR	2673445	Identifier	tmp_name		2673231	0					
ANR	2673446	PrimaryExpression	0		2673231	1					
ANR	2673447	PrimaryExpression	'\\0'		2673231	1					
ANR	2673448	CompoundStatement		66:26:2154:2154	2673231	1					
ANR	2673449	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to rename \\""%s\\"" to \\""%s\\""\\n"" , tmp_name , ckpt_file )"	1172:2:33030:33110	2673231	0	True				
ANR	2673450	CallExpression	"dprintf ( D_ALWAYS , ""About to rename \\""%s\\"" to \\""%s\\""\\n"" , tmp_name , ckpt_file )"		2673231	0					
ANR	2673451	Callee	dprintf		2673231	0					
ANR	2673452	Identifier	dprintf		2673231	0					
ANR	2673453	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673454	Argument	D_ALWAYS		2673231	0					
ANR	2673455	Identifier	D_ALWAYS		2673231	0					
ANR	2673456	Argument	"""About to rename \\""%s\\"" to \\""%s\\""\\n"""		2673231	1					
ANR	2673457	PrimaryExpression	"""About to rename \\""%s\\"" to \\""%s\\""\\n"""		2673231	0					
ANR	2673458	Argument	tmp_name		2673231	2					
ANR	2673459	Identifier	tmp_name		2673231	0					
ANR	2673460	Argument	ckpt_file		2673231	3					
ANR	2673461	Identifier	ckpt_file		2673231	0					
ANR	2673462	IfStatement	"if ( rename ( tmp_name , ckpt_file ) < 0 )"		2673231	1					
ANR	2673463	Condition	"rename ( tmp_name , ckpt_file ) < 0"	1174:6:33118:33147	2673231	0	True				
ANR	2673464	RelationalExpression	"rename ( tmp_name , ckpt_file ) < 0"		2673231	0		<			
ANR	2673465	CallExpression	"rename ( tmp_name , ckpt_file )"		2673231	0					
ANR	2673466	Callee	rename		2673231	0					
ANR	2673467	Identifier	rename		2673231	0					
ANR	2673468	ArgumentList	tmp_name		2673231	1					
ANR	2673469	Argument	tmp_name		2673231	0					
ANR	2673470	Identifier	tmp_name		2673231	0					
ANR	2673471	Argument	ckpt_file		2673231	1					
ANR	2673472	Identifier	ckpt_file		2673231	0					
ANR	2673473	PrimaryExpression	0		2673231	1					
ANR	2673474	CompoundStatement		69:39:2279:2279	2673231	1					
ANR	2673475	ExpressionStatement	"dprintf ( D_ALWAYS , ""rename failed, aborting ckpt\\n"" )"	1175:3:33156:33209	2673231	0	True				
ANR	2673476	CallExpression	"dprintf ( D_ALWAYS , ""rename failed, aborting ckpt\\n"" )"		2673231	0					
ANR	2673477	Callee	dprintf		2673231	0					
ANR	2673478	Identifier	dprintf		2673231	0					
ANR	2673479	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673480	Argument	D_ALWAYS		2673231	0					
ANR	2673481	Identifier	D_ALWAYS		2673231	0					
ANR	2673482	Argument	"""rename failed, aborting ckpt\\n"""		2673231	1					
ANR	2673483	PrimaryExpression	"""rename failed, aborting ckpt\\n"""		2673231	0					
ANR	2673484	ReturnStatement	return - 1 ;	1176:3:33214:33223	2673231	1	True				
ANR	2673485	UnaryOperationExpression	- 1		2673231	0					
ANR	2673486	UnaryOperator	-		2673231	0					
ANR	2673487	PrimaryExpression	1		2673231	1					
ANR	2673488	ExpressionStatement	"dprintf ( D_ALWAYS , ""Renamed OK\\n"" )"	1178:2:33231:33266	2673231	2	True				
ANR	2673489	CallExpression	"dprintf ( D_ALWAYS , ""Renamed OK\\n"" )"		2673231	0					
ANR	2673490	Callee	dprintf		2673231	0					
ANR	2673491	Identifier	dprintf		2673231	0					
ANR	2673492	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673493	Argument	D_ALWAYS		2673231	0					
ANR	2673494	Identifier	D_ALWAYS		2673231	0					
ANR	2673495	Argument	"""Renamed OK\\n"""		2673231	1					
ANR	2673496	PrimaryExpression	"""Renamed OK\\n"""		2673231	0					
ANR	2673497	ExpressionStatement	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE SENT OK\\n"" )"	1182:1:33285:33345	2673231	17	True				
ANR	2673498	CallExpression	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE SENT OK\\n"" )"		2673231	0					
ANR	2673499	Callee	dprintf		2673231	0					
ANR	2673500	Identifier	dprintf		2673231	0					
ANR	2673501	ArgumentList	D_ALWAYS		2673231	1					
ANR	2673502	Argument	D_ALWAYS		2673231	0					
ANR	2673503	Identifier	D_ALWAYS		2673231	0					
ANR	2673504	Argument	"""USER PROC: CHECKPOINT IMAGE SENT OK\\n"""		2673231	1					
ANR	2673505	PrimaryExpression	"""USER PROC: CHECKPOINT IMAGE SENT OK\\n"""		2673231	0					
ANR	2673506	ReturnStatement	return 0 ;	1184:1:33349:33357	2673231	18	True				
ANR	2673507	PrimaryExpression	0		2673231	0					
ANR	2673508	ReturnType	int		2673231	1					
ANR	2673509	Identifier	Image :: Write		2673231	2					
ANR	2673510	ParameterList	const char * ckpt_file		2673231	3					
ANR	2673511	Parameter	const char * ckpt_file	1105:14:30847:30867	2673231	0	True				
ANR	2673512	ParameterType	const char *		2673231	0					
ANR	2673513	Identifier	ckpt_file		2673231	1					
ANR	2673514	CFGEntryNode	ENTRY		2673231		True				
ANR	2673515	CFGExitNode	EXIT		2673231		True				
ANR	2673516	Symbol	Write		2673231						
ANR	2673517	Symbol	ckpt_file		2673231						
ANR	2673518	Symbol	file_name		2673231						
ANR	2673519	Symbol	SYS_UNMAPPED		2673231						
ANR	2673520	Symbol	O_CREAT		2673231						
ANR	2673521	Symbol	D_ALWAYS		2673231						
ANR	2673522	Symbol	file_d		2673231						
ANR	2673523	Symbol	tmp_name		2673231						
ANR	2673524	Symbol	head		2673231						
ANR	2673525	Symbol	O_TRUNC		2673231						
ANR	2673526	Symbol	len		2673231						
ANR	2673527	Symbol	rename		2673231						
ANR	2673528	Symbol	condor_compress_ckpt		2673231						
ANR	2673529	Symbol	SYS_LOCAL		2673231						
ANR	2673530	Symbol	SetSyscalls		2673231						
ANR	2673531	Symbol	scm		2673231						
ANR	2673532	Symbol	O_WRONLY		2673231						
ANR	2673533	Symbol	close		2673231						
ANR	2673534	Symbol	open_ckpt_file		2673231						
ANR	2673535	Symbol	* tmp_name		2673231						
ANR	2673536	Function	Image :: Write	1192:0:33579:37111							
ANR	2673537	FunctionDef	Image :: Write (int file_d)		2673536	0					
ANR	2673538	CompoundStatement		1194:0:33610:37111	2673536	0					
ANR	2673539	IdentifierDeclStatement	int i ;	1195:1:33613:33619	2673536	0	True				
ANR	2673540	IdentifierDecl	i		2673536	0					
ANR	2673541	IdentifierDeclType	int		2673536	0					
ANR	2673542	Identifier	i		2673536	1					
ANR	2673543	IdentifierDeclStatement	int position = 0 ;	1196:1:33622:33639	2673536	1	True				
ANR	2673544	IdentifierDecl	position = 0		2673536	0					
ANR	2673545	IdentifierDeclType	int		2673536	0					
ANR	2673546	Identifier	position		2673536	1					
ANR	2673547	AssignmentExpression	position = 0		2673536	2		=			
ANR	2673548	Identifier	position		2673536	0					
ANR	2673549	PrimaryExpression	0		2673536	1					
ANR	2673550	IdentifierDeclStatement	int nbytes ;	1197:1:33642:33653	2673536	2	True				
ANR	2673551	IdentifierDecl	nbytes		2673536	0					
ANR	2673552	IdentifierDeclType	int		2673536	0					
ANR	2673553	Identifier	nbytes		2673536	1					
ANR	2673554	IdentifierDeclStatement	int ack ;	1198:1:33656:33664	2673536	3	True				
ANR	2673555	IdentifierDecl	ack		2673536	0					
ANR	2673556	IdentifierDeclType	int		2673536	0					
ANR	2673557	Identifier	ack		2673536	1					
ANR	2673558	IdentifierDeclStatement	int status ;	1199:1:33667:33678	2673536	4	True				
ANR	2673559	IdentifierDecl	status		2673536	0					
ANR	2673560	IdentifierDeclType	int		2673536	0					
ANR	2673561	Identifier	status		2673536	1					
ANR	2673562	IfStatement	if ( condor_compress_ckpt )		2673536	5					
ANR	2673563	Condition	condor_compress_ckpt	1202:5:33713:33732	2673536	0	True				
ANR	2673564	Identifier	condor_compress_ckpt		2673536	0					
ANR	2673565	CompoundStatement		9:27:124:124	2673536	1					
ANR	2673566	ExpressionStatement	condor_morecore ( 0 )	1203:2:33739:33757	2673536	0	True				
ANR	2673567	CallExpression	condor_morecore ( 0 )		2673536	0					
ANR	2673568	Callee	condor_morecore		2673536	0					
ANR	2673569	Identifier	condor_morecore		2673536	0					
ANR	2673570	ArgumentList	0		2673536	1					
ANR	2673571	Argument	0		2673536	0					
ANR	2673572	PrimaryExpression	0		2673536	0					
ANR	2673573	IfStatement	"if ( ( nbytes = write ( file_d , & head , sizeof ( head ) ) ) < 0 )"		2673536	6					
ANR	2673574	Condition	"( nbytes = write ( file_d , & head , sizeof ( head ) ) ) < 0"	1208:5:33847:33891	2673536	0	True				
ANR	2673575	RelationalExpression	"( nbytes = write ( file_d , & head , sizeof ( head ) ) ) < 0"		2673536	0		<			
ANR	2673576	AssignmentExpression	"nbytes = write ( file_d , & head , sizeof ( head ) )"		2673536	0		=			
ANR	2673577	Identifier	nbytes		2673536	0					
ANR	2673578	CallExpression	"write ( file_d , & head , sizeof ( head ) )"		2673536	1					
ANR	2673579	Callee	write		2673536	0					
ANR	2673580	Identifier	write		2673536	0					
ANR	2673581	ArgumentList	file_d		2673536	1					
ANR	2673582	Argument	file_d		2673536	0					
ANR	2673583	Identifier	file_d		2673536	0					
ANR	2673584	Argument	& head		2673536	1					
ANR	2673585	UnaryOperationExpression	& head		2673536	0					
ANR	2673586	UnaryOperator	&		2673536	0					
ANR	2673587	Identifier	head		2673536	1					
ANR	2673588	Argument	sizeof ( head )		2673536	2					
ANR	2673589	SizeofExpression	sizeof ( head )		2673536	0					
ANR	2673590	Sizeof	sizeof		2673536	0					
ANR	2673591	SizeofOperand	head		2673536	1					
ANR	2673592	PrimaryExpression	0		2673536	1					
ANR	2673593	CompoundStatement		15:53:284:284	2673536	1					
ANR	2673594	ReturnStatement	return - 1 ;	1209:2:33899:33908	2673536	0	True				
ANR	2673595	UnaryOperationExpression	- 1		2673536	0					
ANR	2673596	UnaryOperator	-		2673536	0					
ANR	2673597	PrimaryExpression	1		2673536	1					
ANR	2673598	ExpressionStatement	position += nbytes	1211:1:33914:33932	2673536	7	True				
ANR	2673599	AssignmentExpression	position += nbytes		2673536	0		+=			
ANR	2673600	Identifier	position		2673536	0					
ANR	2673601	Identifier	nbytes		2673536	1					
ANR	2673602	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote headers OK\\n"" )"	1212:1:33935:33976	2673536	8	True				
ANR	2673603	CallExpression	"dprintf ( D_ALWAYS , ""Wrote headers OK\\n"" )"		2673536	0					
ANR	2673604	Callee	dprintf		2673536	0					
ANR	2673605	Identifier	dprintf		2673536	0					
ANR	2673606	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673607	Argument	D_ALWAYS		2673536	0					
ANR	2673608	Identifier	D_ALWAYS		2673536	0					
ANR	2673609	Argument	"""Wrote headers OK\\n"""		2673536	1					
ANR	2673610	PrimaryExpression	"""Wrote headers OK\\n"""		2673536	0					
ANR	2673611	IfStatement	"if ( ( nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) ) ) != sizeof ( SegMap ) * head . N_Segs ( ) )"		2673536	9					
ANR	2673612	Condition	"( nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) ) ) != sizeof ( SegMap ) * head . N_Segs ( )"	1215:5:34011:34099	2673536	0	True				
ANR	2673613	EqualityExpression	"( nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) ) ) != sizeof ( SegMap ) * head . N_Segs ( )"		2673536	0		!=			
ANR	2673614	AssignmentExpression	"nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) )"		2673536	0		=			
ANR	2673615	Identifier	nbytes		2673536	0					
ANR	2673616	CallExpression	"write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) )"		2673536	1					
ANR	2673617	Callee	write		2673536	0					
ANR	2673618	Identifier	write		2673536	0					
ANR	2673619	ArgumentList	file_d		2673536	1					
ANR	2673620	Argument	file_d		2673536	0					
ANR	2673621	Identifier	file_d		2673536	0					
ANR	2673622	Argument	map		2673536	1					
ANR	2673623	Identifier	map		2673536	0					
ANR	2673624	Argument	sizeof ( SegMap ) * head . N_Segs ( )		2673536	2					
ANR	2673625	MultiplicativeExpression	sizeof ( SegMap ) * head . N_Segs ( )		2673536	0		*			
ANR	2673626	SizeofExpression	sizeof ( SegMap )		2673536	0					
ANR	2673627	Sizeof	sizeof		2673536	0					
ANR	2673628	SizeofOperand	SegMap		2673536	1					
ANR	2673629	CallExpression	head . N_Segs ( )		2673536	1					
ANR	2673630	Callee	head . N_Segs		2673536	0					
ANR	2673631	MemberAccess	head . N_Segs		2673536	0					
ANR	2673632	Identifier	head		2673536	0					
ANR	2673633	Identifier	N_Segs		2673536	1					
ANR	2673634	ArgumentList			2673536	1					
ANR	2673635	MultiplicativeExpression	sizeof ( SegMap ) * head . N_Segs ( )		2673536	1		*			
ANR	2673636	SizeofExpression	sizeof ( SegMap )		2673536	0					
ANR	2673637	Sizeof	sizeof		2673536	0					
ANR	2673638	SizeofOperand	SegMap		2673536	1					
ANR	2673639	CallExpression	head . N_Segs ( )		2673536	1					
ANR	2673640	Callee	head . N_Segs		2673536	0					
ANR	2673641	MemberAccess	head . N_Segs		2673536	0					
ANR	2673642	Identifier	head		2673536	0					
ANR	2673643	Identifier	N_Segs		2673536	1					
ANR	2673644	ArgumentList			2673536	1					
ANR	2673645	CompoundStatement		23:36:492:492	2673536	1					
ANR	2673646	ReturnStatement	return - 1 ;	1217:2:34107:34116	2673536	0	True				
ANR	2673647	UnaryOperationExpression	- 1		2673536	0					
ANR	2673648	UnaryOperator	-		2673536	0					
ANR	2673649	PrimaryExpression	1		2673536	1					
ANR	2673650	ExpressionStatement	position += nbytes	1219:1:34122:34140	2673536	10	True				
ANR	2673651	AssignmentExpression	position += nbytes		2673536	0		+=			
ANR	2673652	Identifier	position		2673536	0					
ANR	2673653	Identifier	nbytes		2673536	1					
ANR	2673654	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote all SegMaps OK\\n"" )"	1220:1:34143:34188	2673536	11	True				
ANR	2673655	CallExpression	"dprintf ( D_ALWAYS , ""Wrote all SegMaps OK\\n"" )"		2673536	0					
ANR	2673656	Callee	dprintf		2673536	0					
ANR	2673657	Identifier	dprintf		2673536	0					
ANR	2673658	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673659	Argument	D_ALWAYS		2673536	0					
ANR	2673660	Identifier	D_ALWAYS		2673536	0					
ANR	2673661	Argument	"""Wrote all SegMaps OK\\n"""		2673536	1					
ANR	2673662	PrimaryExpression	"""Wrote all SegMaps OK\\n"""		2673536	0					
ANR	2673663	IfStatement	if ( condor_compress_ckpt )		2673536	12					
ANR	2673664	Condition	condor_compress_ckpt	1223:5:34223:34242	2673536	0	True				
ANR	2673665	Identifier	condor_compress_ckpt		2673536	0					
ANR	2673666	CompoundStatement		30:27:634:634	2673536	1					
ANR	2673667	ExpressionStatement	"dprintf ( D_ALWAYS , ""Writing compressed segments...\\n"" )"	1224:2:34249:34304	2673536	0	True				
ANR	2673668	CallExpression	"dprintf ( D_ALWAYS , ""Writing compressed segments...\\n"" )"		2673536	0					
ANR	2673669	Callee	dprintf		2673536	0					
ANR	2673670	Identifier	dprintf		2673536	0					
ANR	2673671	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673672	Argument	D_ALWAYS		2673536	0					
ANR	2673673	Identifier	D_ALWAYS		2673536	0					
ANR	2673674	Argument	"""Writing compressed segments...\\n"""		2673536	1					
ANR	2673675	PrimaryExpression	"""Writing compressed segments...\\n"""		2673536	0					
ANR	2673676	ExpressionStatement	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )	1225:2:34308:34359	2673536	1	True				
ANR	2673677	AssignmentExpression	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		2673536	0		=			
ANR	2673678	Identifier	zstr		2673536	0					
ANR	2673679	CastExpression	( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		2673536	1					
ANR	2673680	CastTarget	z_stream *		2673536	0					
ANR	2673681	CallExpression	condor_malloc ( sizeof ( z_stream ) )		2673536	1					
ANR	2673682	Callee	condor_malloc		2673536	0					
ANR	2673683	Identifier	condor_malloc		2673536	0					
ANR	2673684	ArgumentList	sizeof ( z_stream )		2673536	1					
ANR	2673685	Argument	sizeof ( z_stream )		2673536	0					
ANR	2673686	SizeofExpression	sizeof ( z_stream )		2673536	0					
ANR	2673687	Sizeof	sizeof		2673536	0					
ANR	2673688	SizeofOperand	z_stream		2673536	1					
ANR	2673689	IfStatement	if ( ! zstr )		2673536	2					
ANR	2673690	Condition	! zstr	1226:6:34367:34371	2673536	0	True				
ANR	2673691	UnaryOperationExpression	! zstr		2673536	0					
ANR	2673692	UnaryOperator	!		2673536	0					
ANR	2673693	Identifier	zstr		2673536	1					
ANR	2673694	CompoundStatement		33:13:763:763	2673536	1					
ANR	2673695	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	1227:3:34379:34434	2673536	0	True				
ANR	2673696	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		2673536	0					
ANR	2673697	Callee	dprintf		2673536	0					
ANR	2673698	Identifier	dprintf		2673536	0					
ANR	2673699	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673700	Argument	D_ALWAYS		2673536	0					
ANR	2673701	Identifier	D_ALWAYS		2673536	0					
ANR	2673702	Argument	"""out of memory in condor_malloc!\\n"""		2673536	1					
ANR	2673703	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		2673536	0					
ANR	2673704	ExpressionStatement	Suicide ( )	1228:3:34439:34448	2673536	1	True				
ANR	2673705	CallExpression	Suicide ( )		2673536	0					
ANR	2673706	Callee	Suicide		2673536	0					
ANR	2673707	Identifier	Suicide		2673536	0					
ANR	2673708	ArgumentList			2673536	1					
ANR	2673709	ExpressionStatement	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )	1230:2:34456:34504	2673536	3	True				
ANR	2673710	AssignmentExpression	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )		2673536	0		=			
ANR	2673711	Identifier	zbuf		2673536	0					
ANR	2673712	CastExpression	( unsigned char * ) condor_malloc ( zbufsize )		2673536	1					
ANR	2673713	CastTarget	unsigned char *		2673536	0					
ANR	2673714	CallExpression	condor_malloc ( zbufsize )		2673536	1					
ANR	2673715	Callee	condor_malloc		2673536	0					
ANR	2673716	Identifier	condor_malloc		2673536	0					
ANR	2673717	ArgumentList	zbufsize		2673536	1					
ANR	2673718	Argument	zbufsize		2673536	0					
ANR	2673719	Identifier	zbufsize		2673536	0					
ANR	2673720	IfStatement	if ( ! zbuf )		2673536	4					
ANR	2673721	Condition	! zbuf	1231:6:34512:34516	2673536	0	True				
ANR	2673722	UnaryOperationExpression	! zbuf		2673536	0					
ANR	2673723	UnaryOperator	!		2673536	0					
ANR	2673724	Identifier	zbuf		2673536	1					
ANR	2673725	CompoundStatement		38:13:908:908	2673536	1					
ANR	2673726	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	1232:3:34524:34579	2673536	0	True				
ANR	2673727	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		2673536	0					
ANR	2673728	Callee	dprintf		2673536	0					
ANR	2673729	Identifier	dprintf		2673536	0					
ANR	2673730	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673731	Argument	D_ALWAYS		2673536	0					
ANR	2673732	Identifier	D_ALWAYS		2673536	0					
ANR	2673733	Argument	"""out of memory in condor_malloc!\\n"""		2673536	1					
ANR	2673734	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		2673536	0					
ANR	2673735	ExpressionStatement	Suicide ( )	1233:3:34584:34593	2673536	1	True				
ANR	2673736	CallExpression	Suicide ( )		2673536	0					
ANR	2673737	Callee	Suicide		2673536	0					
ANR	2673738	Identifier	Suicide		2673536	0					
ANR	2673739	ArgumentList			2673536	1					
ANR	2673740	ExpressionStatement	zstr -> zalloc = zalloc	1235:2:34601:34622	2673536	5	True				
ANR	2673741	AssignmentExpression	zstr -> zalloc = zalloc		2673536	0		=			
ANR	2673742	PtrMemberAccess	zstr -> zalloc		2673536	0					
ANR	2673743	Identifier	zstr		2673536	0					
ANR	2673744	Identifier	zalloc		2673536	1					
ANR	2673745	Identifier	zalloc		2673536	1					
ANR	2673746	ExpressionStatement	zstr -> zfree = zfree	1236:2:34626:34645	2673536	6	True				
ANR	2673747	AssignmentExpression	zstr -> zfree = zfree		2673536	0		=			
ANR	2673748	PtrMemberAccess	zstr -> zfree		2673536	0					
ANR	2673749	Identifier	zstr		2673536	0					
ANR	2673750	Identifier	zfree		2673536	1					
ANR	2673751	Identifier	zfree		2673536	1					
ANR	2673752	ExpressionStatement	zstr -> opaque = Z_NULL	1237:2:34649:34670	2673536	7	True				
ANR	2673753	AssignmentExpression	zstr -> opaque = Z_NULL		2673536	0		=			
ANR	2673754	PtrMemberAccess	zstr -> opaque		2673536	0					
ANR	2673755	Identifier	zstr		2673536	0					
ANR	2673756	Identifier	opaque		2673536	1					
ANR	2673757	Identifier	Z_NULL		2673536	1					
ANR	2673758	IfStatement	"if ( deflateInit ( zstr , Z_DEFAULT_COMPRESSION ) != Z_OK )"		2673536	8					
ANR	2673759	Condition	"deflateInit ( zstr , Z_DEFAULT_COMPRESSION ) != Z_OK"	1238:6:34678:34725	2673536	0	True				
ANR	2673760	EqualityExpression	"deflateInit ( zstr , Z_DEFAULT_COMPRESSION ) != Z_OK"		2673536	0		!=			
ANR	2673761	CallExpression	"deflateInit ( zstr , Z_DEFAULT_COMPRESSION )"		2673536	0					
ANR	2673762	Callee	deflateInit		2673536	0					
ANR	2673763	Identifier	deflateInit		2673536	0					
ANR	2673764	ArgumentList	zstr		2673536	1					
ANR	2673765	Argument	zstr		2673536	0					
ANR	2673766	Identifier	zstr		2673536	0					
ANR	2673767	Argument	Z_DEFAULT_COMPRESSION		2673536	1					
ANR	2673768	Identifier	Z_DEFAULT_COMPRESSION		2673536	0					
ANR	2673769	Identifier	Z_OK		2673536	1					
ANR	2673770	CompoundStatement		45:56:1117:1117	2673536	1					
ANR	2673771	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflateInit): %s\\n"" , zstr -> msg )"	1239:3:34733:34791	2673536	0	True				
ANR	2673772	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflateInit): %s\\n"" , zstr -> msg )"		2673536	0					
ANR	2673773	Callee	dprintf		2673536	0					
ANR	2673774	Identifier	dprintf		2673536	0					
ANR	2673775	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673776	Argument	D_ALWAYS		2673536	0					
ANR	2673777	Identifier	D_ALWAYS		2673536	0					
ANR	2673778	Argument	"""zlib (deflateInit): %s\\n"""		2673536	1					
ANR	2673779	PrimaryExpression	"""zlib (deflateInit): %s\\n"""		2673536	0					
ANR	2673780	Argument	zstr -> msg		2673536	2					
ANR	2673781	PtrMemberAccess	zstr -> msg		2673536	0					
ANR	2673782	Identifier	zstr		2673536	0					
ANR	2673783	Identifier	msg		2673536	1					
ANR	2673784	ExpressionStatement	Suicide ( )	1240:3:34796:34805	2673536	1	True				
ANR	2673785	CallExpression	Suicide ( )		2673536	0					
ANR	2673786	Callee	Suicide		2673536	0					
ANR	2673787	Identifier	Suicide		2673536	0					
ANR	2673788	ArgumentList			2673536	1					
ANR	2673789	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		2673536	13					
ANR	2673790	ForInit	i = 0 ;	1246:6:34856:34859	2673536	0	True				
ANR	2673791	AssignmentExpression	i = 0		2673536	0		=			
ANR	2673792	Identifier	i		2673536	0					
ANR	2673793	PrimaryExpression	0		2673536	1					
ANR	2673794	Condition	i < head . N_Segs ( )	1246:11:34861:34875	2673536	1	True				
ANR	2673795	RelationalExpression	i < head . N_Segs ( )		2673536	0		<			
ANR	2673796	Identifier	i		2673536	0					
ANR	2673797	CallExpression	head . N_Segs ( )		2673536	1					
ANR	2673798	Callee	head . N_Segs		2673536	0					
ANR	2673799	MemberAccess	head . N_Segs		2673536	0					
ANR	2673800	Identifier	head		2673536	0					
ANR	2673801	Identifier	N_Segs		2673536	1					
ANR	2673802	ArgumentList			2673536	1					
ANR	2673803	PostIncDecOperationExpression	i ++	1246:28:34878:34880	2673536	2	True				
ANR	2673804	Identifier	i		2673536	0					
ANR	2673805	IncDec	++		2673536	1					
ANR	2673806	CompoundStatement		53:34:1273:1273	2673536	3					
ANR	2673807	IfStatement	"if ( ( nbytes = map [ i ] . Write ( file_d , position ) ) < 0 )"		2673536	0					
ANR	2673808	Condition	"( nbytes = map [ i ] . Write ( file_d , position ) ) < 0"	1248:6:34916:34957	2673536	0	True				
ANR	2673809	RelationalExpression	"( nbytes = map [ i ] . Write ( file_d , position ) ) < 0"		2673536	0		<			
ANR	2673810	AssignmentExpression	"nbytes = map [ i ] . Write ( file_d , position )"		2673536	0		=			
ANR	2673811	Identifier	nbytes		2673536	0					
ANR	2673812	CallExpression	"map [ i ] . Write ( file_d , position )"		2673536	1					
ANR	2673813	Callee	map [ i ] . Write		2673536	0					
ANR	2673814	MemberAccess	map [ i ] . Write		2673536	0					
ANR	2673815	ArrayIndexing	map [ i ]		2673536	0					
ANR	2673816	Identifier	map		2673536	0					
ANR	2673817	Identifier	i		2673536	1					
ANR	2673818	Identifier	Write		2673536	1					
ANR	2673819	ArgumentList	file_d		2673536	1					
ANR	2673820	Argument	file_d		2673536	0					
ANR	2673821	Identifier	file_d		2673536	0					
ANR	2673822	Argument	position		2673536	1					
ANR	2673823	Identifier	position		2673536	0					
ANR	2673824	PrimaryExpression	0		2673536	1					
ANR	2673825	CompoundStatement		55:51:1350:1350	2673536	1					
ANR	2673826	ExpressionStatement	"dprintf ( D_ALWAYS , ""Write() Segment[%d] of type %s -> FAILED\\n"" , i , map [ i ] . GetName ( ) )"	1249:3:34966:35056	2673536	0	True				
ANR	2673827	CallExpression	"dprintf ( D_ALWAYS , ""Write() Segment[%d] of type %s -> FAILED\\n"" , i , map [ i ] . GetName ( ) )"		2673536	0					
ANR	2673828	Callee	dprintf		2673536	0					
ANR	2673829	Identifier	dprintf		2673536	0					
ANR	2673830	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673831	Argument	D_ALWAYS		2673536	0					
ANR	2673832	Identifier	D_ALWAYS		2673536	0					
ANR	2673833	Argument	"""Write() Segment[%d] of type %s -> FAILED\\n"""		2673536	1					
ANR	2673834	PrimaryExpression	"""Write() Segment[%d] of type %s -> FAILED\\n"""		2673536	0					
ANR	2673835	Argument	i		2673536	2					
ANR	2673836	Identifier	i		2673536	0					
ANR	2673837	Argument	map [ i ] . GetName ( )		2673536	3					
ANR	2673838	CallExpression	map [ i ] . GetName ( )		2673536	0					
ANR	2673839	Callee	map [ i ] . GetName		2673536	0					
ANR	2673840	MemberAccess	map [ i ] . GetName		2673536	0					
ANR	2673841	ArrayIndexing	map [ i ]		2673536	0					
ANR	2673842	Identifier	map		2673536	0					
ANR	2673843	Identifier	i		2673536	1					
ANR	2673844	Identifier	GetName		2673536	1					
ANR	2673845	ArgumentList			2673536	1					
ANR	2673846	ExpressionStatement	"dprintf ( D_ALWAYS , ""errno = %d, nbytes = %d\\n"" , errno , nbytes )"	1251:3:35061:35124	2673536	1	True				
ANR	2673847	CallExpression	"dprintf ( D_ALWAYS , ""errno = %d, nbytes = %d\\n"" , errno , nbytes )"		2673536	0					
ANR	2673848	Callee	dprintf		2673536	0					
ANR	2673849	Identifier	dprintf		2673536	0					
ANR	2673850	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673851	Argument	D_ALWAYS		2673536	0					
ANR	2673852	Identifier	D_ALWAYS		2673536	0					
ANR	2673853	Argument	"""errno = %d, nbytes = %d\\n"""		2673536	1					
ANR	2673854	PrimaryExpression	"""errno = %d, nbytes = %d\\n"""		2673536	0					
ANR	2673855	Argument	errno		2673536	2					
ANR	2673856	Identifier	errno		2673536	0					
ANR	2673857	Argument	nbytes		2673536	3					
ANR	2673858	Identifier	nbytes		2673536	0					
ANR	2673859	ReturnStatement	return - 1 ;	1252:3:35129:35138	2673536	2	True				
ANR	2673860	UnaryOperationExpression	- 1		2673536	0					
ANR	2673861	UnaryOperator	-		2673536	0					
ANR	2673862	PrimaryExpression	1		2673536	1					
ANR	2673863	ExpressionStatement	position += nbytes	1254:2:35146:35164	2673536	1	True				
ANR	2673864	AssignmentExpression	position += nbytes		2673536	0		+=			
ANR	2673865	Identifier	position		2673536	0					
ANR	2673866	Identifier	nbytes		2673536	1					
ANR	2673867	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote Segment[%d] of type %s -> OK\\n"" , i , map [ i ] . GetName ( ) )"	1255:2:35168:35248	2673536	2	True				
ANR	2673868	CallExpression	"dprintf ( D_ALWAYS , ""Wrote Segment[%d] of type %s -> OK\\n"" , i , map [ i ] . GetName ( ) )"		2673536	0					
ANR	2673869	Callee	dprintf		2673536	0					
ANR	2673870	Identifier	dprintf		2673536	0					
ANR	2673871	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673872	Argument	D_ALWAYS		2673536	0					
ANR	2673873	Identifier	D_ALWAYS		2673536	0					
ANR	2673874	Argument	"""Wrote Segment[%d] of type %s -> OK\\n"""		2673536	1					
ANR	2673875	PrimaryExpression	"""Wrote Segment[%d] of type %s -> OK\\n"""		2673536	0					
ANR	2673876	Argument	i		2673536	2					
ANR	2673877	Identifier	i		2673536	0					
ANR	2673878	Argument	map [ i ] . GetName ( )		2673536	3					
ANR	2673879	CallExpression	map [ i ] . GetName ( )		2673536	0					
ANR	2673880	Callee	map [ i ] . GetName		2673536	0					
ANR	2673881	MemberAccess	map [ i ] . GetName		2673536	0					
ANR	2673882	ArrayIndexing	map [ i ]		2673536	0					
ANR	2673883	Identifier	map		2673536	0					
ANR	2673884	Identifier	i		2673536	1					
ANR	2673885	Identifier	GetName		2673536	1					
ANR	2673886	ArgumentList			2673536	1					
ANR	2673887	IfStatement	if ( condor_compress_ckpt )		2673536	14					
ANR	2673888	Condition	condor_compress_ckpt	1259:5:35286:35305	2673536	0	True				
ANR	2673889	Identifier	condor_compress_ckpt		2673536	0					
ANR	2673890	CompoundStatement		68:2:1726:1744	2673536	1					
ANR	2673891	IdentifierDeclStatement	"int bytes_to_go , rval ;"	1260:2:35312:35333	2673536	0	True				
ANR	2673892	IdentifierDecl	bytes_to_go		2673536	0					
ANR	2673893	IdentifierDeclType	int		2673536	0					
ANR	2673894	Identifier	bytes_to_go		2673536	1					
ANR	2673895	IdentifierDecl	rval		2673536	1					
ANR	2673896	IdentifierDeclType	int		2673536	0					
ANR	2673897	Identifier	rval		2673536	1					
ANR	2673898	IdentifierDeclStatement	unsigned char * ptr ;	1261:2:35337:35355	2673536	1	True				
ANR	2673899	IdentifierDecl	* ptr		2673536	0					
ANR	2673900	IdentifierDeclType	unsigned char *		2673536	0					
ANR	2673901	Identifier	ptr		2673536	1					
ANR	2673902	ExpressionStatement	zstr -> next_out = zbuf	1263:2:35360:35381	2673536	2	True				
ANR	2673903	AssignmentExpression	zstr -> next_out = zbuf		2673536	0		=			
ANR	2673904	PtrMemberAccess	zstr -> next_out		2673536	0					
ANR	2673905	Identifier	zstr		2673536	0					
ANR	2673906	Identifier	next_out		2673536	1					
ANR	2673907	Identifier	zbuf		2673536	1					
ANR	2673908	ExpressionStatement	zstr -> avail_out = zbufsize	1264:2:35385:35411	2673536	3	True				
ANR	2673909	AssignmentExpression	zstr -> avail_out = zbufsize		2673536	0		=			
ANR	2673910	PtrMemberAccess	zstr -> avail_out		2673536	0					
ANR	2673911	Identifier	zstr		2673536	0					
ANR	2673912	Identifier	avail_out		2673536	1					
ANR	2673913	Identifier	zbufsize		2673536	1					
ANR	2673914	IfStatement	"if ( deflate ( zstr , Z_FINISH ) != Z_STREAM_END )"		2673536	4					
ANR	2673915	Condition	"deflate ( zstr , Z_FINISH ) != Z_STREAM_END"	1265:6:35419:35457	2673536	0	True				
ANR	2673916	EqualityExpression	"deflate ( zstr , Z_FINISH ) != Z_STREAM_END"		2673536	0		!=			
ANR	2673917	CallExpression	"deflate ( zstr , Z_FINISH )"		2673536	0					
ANR	2673918	Callee	deflate		2673536	0					
ANR	2673919	Identifier	deflate		2673536	0					
ANR	2673920	ArgumentList	zstr		2673536	1					
ANR	2673921	Argument	zstr		2673536	0					
ANR	2673922	Identifier	zstr		2673536	0					
ANR	2673923	Argument	Z_FINISH		2673536	1					
ANR	2673924	Identifier	Z_FINISH		2673536	0					
ANR	2673925	Identifier	Z_STREAM_END		2673536	1					
ANR	2673926	CompoundStatement		72:47:1849:1849	2673536	1					
ANR	2673927	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"	1266:3:35465:35519	2673536	0	True				
ANR	2673928	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"		2673536	0					
ANR	2673929	Callee	dprintf		2673536	0					
ANR	2673930	Identifier	dprintf		2673536	0					
ANR	2673931	ArgumentList	D_ALWAYS		2673536	1					
ANR	2673932	Argument	D_ALWAYS		2673536	0					
ANR	2673933	Identifier	D_ALWAYS		2673536	0					
ANR	2673934	Argument	"""zlib (deflate): %s\\n"""		2673536	1					
ANR	2673935	PrimaryExpression	"""zlib (deflate): %s\\n"""		2673536	0					
ANR	2673936	Argument	zstr -> msg		2673536	2					
ANR	2673937	PtrMemberAccess	zstr -> msg		2673536	0					
ANR	2673938	Identifier	zstr		2673536	0					
ANR	2673939	Identifier	msg		2673536	1					
ANR	2673940	ExpressionStatement	Suicide ( )	1267:3:35524:35533	2673536	1	True				
ANR	2673941	CallExpression	Suicide ( )		2673536	0					
ANR	2673942	Callee	Suicide		2673536	0					
ANR	2673943	Identifier	Suicide		2673536	0					
ANR	2673944	ArgumentList			2673536	1					
ANR	2673945	ForStatement	"for ( bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ; bytes_to_go > 0 ; bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval )"		2673536	5					
ANR	2673946	ForInit	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ;"	1269:7:35546:35598	2673536	0	True				
ANR	2673947	Expression	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf"		2673536	0					
ANR	2673948	AssignmentExpression	bytes_to_go = ( zbufsize - zstr -> avail_out )		2673536	0		=			
ANR	2673949	Identifier	bytes_to_go		2673536	0					
ANR	2673950	AdditiveExpression	zbufsize - zstr -> avail_out		2673536	1		-			
ANR	2673951	Identifier	zbufsize		2673536	0					
ANR	2673952	PtrMemberAccess	zstr -> avail_out		2673536	1					
ANR	2673953	Identifier	zstr		2673536	0					
ANR	2673954	Identifier	avail_out		2673536	1					
ANR	2673955	AssignmentExpression	ptr = zbuf		2673536	1		=			
ANR	2673956	Identifier	ptr		2673536	0					
ANR	2673957	Identifier	zbuf		2673536	1					
ANR	2673958	Condition	bytes_to_go > 0	1270:4:35604:35618	2673536	1	True				
ANR	2673959	RelationalExpression	bytes_to_go > 0		2673536	0		>			
ANR	2673960	Identifier	bytes_to_go		2673536	0					
ANR	2673961	PrimaryExpression	0		2673536	1					
ANR	2673962	Expression	"bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval"	1271:4:35625:35681	2673536	2	True				
ANR	2673963	AssignmentExpression	bytes_to_go -= rval		2673536	0		-=			
ANR	2673964	Identifier	bytes_to_go		2673536	0					
ANR	2673965	Identifier	rval		2673536	1					
ANR	2673966	Expression	"ptr += rval , zstr -> avail_out += rval"		2673536	1					
ANR	2673967	AssignmentExpression	ptr += rval		2673536	0		+=			
ANR	2673968	Identifier	ptr		2673536	0					
ANR	2673969	Identifier	rval		2673536	1					
ANR	2673970	AssignmentExpression	zstr -> avail_out += rval		2673536	1		+=			
ANR	2673971	PtrMemberAccess	zstr -> avail_out		2673536	0					
ANR	2673972	Identifier	zstr		2673536	0					
ANR	2673973	Identifier	avail_out		2673536	1					
ANR	2673974	Identifier	rval		2673536	1					
ANR	2673975	CompoundStatement		78:63:2073:2073	2673536	3					
ANR	2673976	ExpressionStatement	"rval = write ( file_d , ptr , bytes_to_go )"	1272:3:35689:35725	2673536	0	True				
ANR	2673977	AssignmentExpression	"rval = write ( file_d , ptr , bytes_to_go )"		2673536	0		=			
ANR	2673978	Identifier	rval		2673536	0					
ANR	2673979	CallExpression	"write ( file_d , ptr , bytes_to_go )"		2673536	1					
ANR	2673980	Callee	write		2673536	0					
ANR	2673981	Identifier	write		2673536	0					
ANR	2673982	ArgumentList	file_d		2673536	1					
ANR	2673983	Argument	file_d		2673536	0					
ANR	2673984	Identifier	file_d		2673536	0					
ANR	2673985	Argument	ptr		2673536	1					
ANR	2673986	Identifier	ptr		2673536	0					
ANR	2673987	Argument	bytes_to_go		2673536	2					
ANR	2673988	Identifier	bytes_to_go		2673536	0					
ANR	2673989	IfStatement	if ( rval < 0 )		2673536	1					
ANR	2673990	Condition	rval < 0	1273:7:35734:35741	2673536	0	True				
ANR	2673991	RelationalExpression	rval < 0		2673536	0		<			
ANR	2673992	Identifier	rval		2673536	0					
ANR	2673993	PrimaryExpression	0		2673536	1					
ANR	2673994	CompoundStatement		80:17:2133:2133	2673536	1					
ANR	2673995	Statement	dprintf	1274:4:35750:35756	2673536	0	True				
ANR	2673996	Statement	(	1274:11:35757:35757	2673536	1	True				
ANR	2673997	Statement	D_ALWAYS	1274:12:35758:35765	2673536	2	True				
ANR	2673998	Statement	","	1274:20:35766:35766	2673536	3	True				
ANR	2673999	Statement	"""write failed with errno %d in """	1274:22:35768:35799	2673536	4	True				
ANR	2674000	Statement	"""SegMap::Write\\n"""	1275:6:35807:35823	2673536	5	True				
ANR	2674001	Statement	","	1275:23:35824:35824	2673536	6	True				
ANR	2674002	Statement	errno	1275:25:35826:35830	2673536	7	True				
ANR	2674003	Statement	)	1275:30:35831:35831	2673536	8	True				
ANR	2674004	ExpressionStatement		1275:31:35832:35832	2673536	9	True				
ANR	2674005	ExpressionStatement	Suicide ( )	1276:4:35838:35847	2673536	10	True				
ANR	2674006	CallExpression	Suicide ( )		2673536	0					
ANR	2674007	Callee	Suicide		2673536	0					
ANR	2674008	Identifier	Suicide		2673536	0					
ANR	2674009	ArgumentList			2673536	1					
ANR	2674010	IfStatement	if ( zstr -> avail_out != zbufsize )		2673536	6					
ANR	2674011	Condition	zstr -> avail_out != zbufsize	1279:6:35864:35890	2673536	0	True				
ANR	2674012	EqualityExpression	zstr -> avail_out != zbufsize		2673536	0		!=			
ANR	2674013	PtrMemberAccess	zstr -> avail_out		2673536	0					
ANR	2674014	Identifier	zstr		2673536	0					
ANR	2674015	Identifier	avail_out		2673536	1					
ANR	2674016	Identifier	zbufsize		2673536	1					
ANR	2674017	CompoundStatement		86:35:2282:2282	2673536	1					
ANR	2674018	Statement	dprintf	1280:3:35898:35904	2673536	0	True				
ANR	2674019	Statement	(	1280:10:35905:35905	2673536	1	True				
ANR	2674020	Statement	D_ALWAYS	1280:11:35906:35913	2673536	2	True				
ANR	2674021	Statement	","	1280:19:35914:35914	2673536	3	True				
ANR	2674022	Statement	"""deflate logic error, avail_out (%d) != """	1280:21:35916:35956	2673536	4	True				
ANR	2674023	Statement	"""zbufsize (%d)\\n"""	1281:5:35963:35979	2673536	5	True				
ANR	2674024	Statement	","	1281:22:35980:35980	2673536	6	True				
ANR	2674025	Statement	zstr	1281:24:35982:35985	2673536	7	True				
ANR	2674026	Statement	->	1281:28:35986:35987	2673536	8	True				
ANR	2674027	Statement	avail_out	1281:30:35988:35996	2673536	9	True				
ANR	2674028	Statement	","	1281:39:35997:35997	2673536	10	True				
ANR	2674029	Statement	zbufsize	1281:41:35999:36006	2673536	11	True				
ANR	2674030	Statement	)	1281:49:36007:36007	2673536	12	True				
ANR	2674031	ExpressionStatement		1281:50:36008:36008	2673536	13	True				
ANR	2674032	ExpressionStatement	Suicide ( )	1282:3:36013:36022	2673536	14	True				
ANR	2674033	CallExpression	Suicide ( )		2673536	0					
ANR	2674034	Callee	Suicide		2673536	0					
ANR	2674035	Identifier	Suicide		2673536	0					
ANR	2674036	ArgumentList			2673536	1					
ANR	2674037	ExpressionStatement	zstr -> avail_out = 0	1285:2:36031:36050	2673536	7	True				
ANR	2674038	AssignmentExpression	zstr -> avail_out = 0		2673536	0		=			
ANR	2674039	PtrMemberAccess	zstr -> avail_out		2673536	0					
ANR	2674040	Identifier	zstr		2673536	0					
ANR	2674041	Identifier	avail_out		2673536	1					
ANR	2674042	PrimaryExpression	0		2673536	1					
ANR	2674043	ExpressionStatement	zstr -> next_out = Z_NULL	1286:2:36054:36077	2673536	8	True				
ANR	2674044	AssignmentExpression	zstr -> next_out = Z_NULL		2673536	0		=			
ANR	2674045	PtrMemberAccess	zstr -> next_out		2673536	0					
ANR	2674046	Identifier	zstr		2673536	0					
ANR	2674047	Identifier	next_out		2673536	1					
ANR	2674048	Identifier	Z_NULL		2673536	1					
ANR	2674049	ExpressionStatement	condor_free ( zbuf )	1287:2:36081:36098	2673536	9	True				
ANR	2674050	CallExpression	condor_free ( zbuf )		2673536	0					
ANR	2674051	Callee	condor_free		2673536	0					
ANR	2674052	Identifier	condor_free		2673536	0					
ANR	2674053	ArgumentList	zbuf		2673536	1					
ANR	2674054	Argument	zbuf		2673536	0					
ANR	2674055	Identifier	zbuf		2673536	0					
ANR	2674056	ExpressionStatement	zbuf = Z_NULL	1288:2:36102:36115	2673536	10	True				
ANR	2674057	AssignmentExpression	zbuf = Z_NULL		2673536	0		=			
ANR	2674058	Identifier	zbuf		2673536	0					
ANR	2674059	Identifier	Z_NULL		2673536	1					
ANR	2674060	ExpressionStatement	rval = deflateEnd ( zstr )	1290:2:36121:36144	2673536	11	True				
ANR	2674061	AssignmentExpression	rval = deflateEnd ( zstr )		2673536	0		=			
ANR	2674062	Identifier	rval		2673536	0					
ANR	2674063	CallExpression	deflateEnd ( zstr )		2673536	1					
ANR	2674064	Callee	deflateEnd		2673536	0					
ANR	2674065	Identifier	deflateEnd		2673536	0					
ANR	2674066	ArgumentList	zstr		2673536	1					
ANR	2674067	Argument	zstr		2673536	0					
ANR	2674068	Identifier	zstr		2673536	0					
ANR	2674069	IfStatement	if ( rval != Z_OK )		2673536	12					
ANR	2674070	Condition	rval != Z_OK	1291:6:36152:36163	2673536	0	True				
ANR	2674071	EqualityExpression	rval != Z_OK		2673536	0		!=			
ANR	2674072	Identifier	rval		2673536	0					
ANR	2674073	Identifier	Z_OK		2673536	1					
ANR	2674074	CompoundStatement		98:20:2555:2555	2673536	1					
ANR	2674075	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflateEnd): %d\\n"" , rval )"	1292:3:36171:36223	2673536	0	True				
ANR	2674076	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflateEnd): %d\\n"" , rval )"		2673536	0					
ANR	2674077	Callee	dprintf		2673536	0					
ANR	2674078	Identifier	dprintf		2673536	0					
ANR	2674079	ArgumentList	D_ALWAYS		2673536	1					
ANR	2674080	Argument	D_ALWAYS		2673536	0					
ANR	2674081	Identifier	D_ALWAYS		2673536	0					
ANR	2674082	Argument	"""zlib (deflateEnd): %d\\n"""		2673536	1					
ANR	2674083	PrimaryExpression	"""zlib (deflateEnd): %d\\n"""		2673536	0					
ANR	2674084	Argument	rval		2673536	2					
ANR	2674085	Identifier	rval		2673536	0					
ANR	2674086	ExpressionStatement	Suicide ( )	1293:3:36228:36237	2673536	1	True				
ANR	2674087	CallExpression	Suicide ( )		2673536	0					
ANR	2674088	Callee	Suicide		2673536	0					
ANR	2674089	Identifier	Suicide		2673536	0					
ANR	2674090	ArgumentList			2673536	1					
ANR	2674091	ExpressionStatement	condor_free ( zstr )	1295:2:36245:36262	2673536	13	True				
ANR	2674092	CallExpression	condor_free ( zstr )		2673536	0					
ANR	2674093	Callee	condor_free		2673536	0					
ANR	2674094	Identifier	condor_free		2673536	0					
ANR	2674095	ArgumentList	zstr		2673536	1					
ANR	2674096	Argument	zstr		2673536	0					
ANR	2674097	Identifier	zstr		2673536	0					
ANR	2674098	ExpressionStatement	zstr = NULL	1296:2:36266:36277	2673536	14	True				
ANR	2674099	AssignmentExpression	zstr = NULL		2673536	0		=			
ANR	2674100	Identifier	zstr		2673536	0					
ANR	2674101	Identifier	NULL		2673536	1					
ANR	2674102	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote all Segments OK\\n"" )"	1300:1:36291:36337	2673536	15	True				
ANR	2674103	CallExpression	"dprintf ( D_ALWAYS , ""Wrote all Segments OK\\n"" )"		2673536	0					
ANR	2674104	Callee	dprintf		2673536	0					
ANR	2674105	Identifier	dprintf		2673536	0					
ANR	2674106	ArgumentList	D_ALWAYS		2673536	1					
ANR	2674107	Argument	D_ALWAYS		2673536	0					
ANR	2674108	Identifier	D_ALWAYS		2673536	0					
ANR	2674109	Argument	"""Wrote all Segments OK\\n"""		2673536	1					
ANR	2674110	PrimaryExpression	"""Wrote all Segments OK\\n"""		2673536	0					
ANR	2674111	IfStatement	if ( _condor_in_file_stream && ! condor_compress_ckpt )		2673536	16					
ANR	2674112	Condition	_condor_in_file_stream && ! condor_compress_ckpt	1308:5:36671:36717	2673536	0	True				
ANR	2674113	AndExpression	_condor_in_file_stream && ! condor_compress_ckpt		2673536	0		&&			
ANR	2674114	Identifier	_condor_in_file_stream		2673536	0					
ANR	2674115	UnaryOperationExpression	! condor_compress_ckpt		2673536	1					
ANR	2674116	UnaryOperator	!		2673536	0					
ANR	2674117	Identifier	condor_compress_ckpt		2673536	1					
ANR	2674118	CompoundStatement		115:55:3110:3110	2673536	1					
ANR	2674119	ExpressionStatement	"status = net_read ( file_d , & ack , sizeof ( ack ) )"	1312:2:36770:36816	2673536	0	True				
ANR	2674120	AssignmentExpression	"status = net_read ( file_d , & ack , sizeof ( ack ) )"		2673536	0		=			
ANR	2674121	Identifier	status		2673536	0					
ANR	2674122	CallExpression	"net_read ( file_d , & ack , sizeof ( ack ) )"		2673536	1					
ANR	2674123	Callee	net_read		2673536	0					
ANR	2674124	Identifier	net_read		2673536	0					
ANR	2674125	ArgumentList	file_d		2673536	1					
ANR	2674126	Argument	file_d		2673536	0					
ANR	2674127	Identifier	file_d		2673536	0					
ANR	2674128	Argument	& ack		2673536	1					
ANR	2674129	UnaryOperationExpression	& ack		2673536	0					
ANR	2674130	UnaryOperator	&		2673536	0					
ANR	2674131	Identifier	ack		2673536	1					
ANR	2674132	Argument	sizeof ( ack )		2673536	2					
ANR	2674133	SizeofExpression	sizeof ( ack )		2673536	0					
ANR	2674134	Sizeof	sizeof		2673536	0					
ANR	2674135	SizeofOperand	ack		2673536	1					
ANR	2674136	IfStatement	if ( status < 0 )		2673536	1					
ANR	2674137	Condition	status < 0	1313:6:36824:36833	2673536	0	True				
ANR	2674138	RelationalExpression	status < 0		2673536	0		<			
ANR	2674139	Identifier	status		2673536	0					
ANR	2674140	PrimaryExpression	0		2673536	1					
ANR	2674141	CompoundStatement		120:19:3226:3226	2673536	1					
ANR	2674142	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read final ack from the shadow\\n"" )"	1314:3:36842:36903	2673536	0	True				
ANR	2674143	CallExpression	"dprintf ( D_ALWAYS , ""Can't read final ack from the shadow\\n"" )"		2673536	0					
ANR	2674144	Callee	dprintf		2673536	0					
ANR	2674145	Identifier	dprintf		2673536	0					
ANR	2674146	ArgumentList	D_ALWAYS		2673536	1					
ANR	2674147	Argument	D_ALWAYS		2673536	0					
ANR	2674148	Identifier	D_ALWAYS		2673536	0					
ANR	2674149	Argument	"""Can't read final ack from the shadow\\n"""		2673536	1					
ANR	2674150	PrimaryExpression	"""Can't read final ack from the shadow\\n"""		2673536	0					
ANR	2674151	ReturnStatement	return - 1 ;	1315:3:36908:36917	2673536	1	True				
ANR	2674152	UnaryOperationExpression	- 1		2673536	0					
ANR	2674153	UnaryOperator	-		2673536	0					
ANR	2674154	PrimaryExpression	1		2673536	1					
ANR	2674155	ExpressionStatement	ack = ntohl ( ack )	1318:2:36926:36944	2673536	2	True				
ANR	2674156	AssignmentExpression	ack = ntohl ( ack )		2673536	0		=			
ANR	2674157	Identifier	ack		2673536	0					
ANR	2674158	CallExpression	ntohl ( ack )		2673536	1					
ANR	2674159	Callee	ntohl		2673536	0					
ANR	2674160	Identifier	ntohl		2673536	0					
ANR	2674161	ArgumentList	ack		2673536	1					
ANR	2674162	Argument	ack		2673536	0					
ANR	2674163	Identifier	ack		2673536	0					
ANR	2674164	IfStatement	if ( ack != len )		2673536	3					
ANR	2674165	Condition	ack != len	1319:6:36994:37003	2673536	0	True				
ANR	2674166	EqualityExpression	ack != len		2673536	0		!=			
ANR	2674167	Identifier	ack		2673536	0					
ANR	2674168	Identifier	len		2673536	1					
ANR	2674169	CompoundStatement		126:19:3396:3396	2673536	1					
ANR	2674170	ExpressionStatement	"dprintf ( D_ALWAYS , ""Ack - expected %d, but got %d\\n"" , len , ack )"	1320:3:37012:37076	2673536	0	True				
ANR	2674171	CallExpression	"dprintf ( D_ALWAYS , ""Ack - expected %d, but got %d\\n"" , len , ack )"		2673536	0					
ANR	2674172	Callee	dprintf		2673536	0					
ANR	2674173	Identifier	dprintf		2673536	0					
ANR	2674174	ArgumentList	D_ALWAYS		2673536	1					
ANR	2674175	Argument	D_ALWAYS		2673536	0					
ANR	2674176	Identifier	D_ALWAYS		2673536	0					
ANR	2674177	Argument	"""Ack - expected %d, but got %d\\n"""		2673536	1					
ANR	2674178	PrimaryExpression	"""Ack - expected %d, but got %d\\n"""		2673536	0					
ANR	2674179	Argument	len		2673536	2					
ANR	2674180	Identifier	len		2673536	0					
ANR	2674181	Argument	ack		2673536	3					
ANR	2674182	Identifier	ack		2673536	0					
ANR	2674183	ReturnStatement	return - 1 ;	1321:3:37081:37090	2673536	1	True				
ANR	2674184	UnaryOperationExpression	- 1		2673536	0					
ANR	2674185	UnaryOperator	-		2673536	0					
ANR	2674186	PrimaryExpression	1		2673536	1					
ANR	2674187	ReturnStatement	return 0 ;	1325:1:37101:37109	2673536	17	True				
ANR	2674188	PrimaryExpression	0		2673536	0					
ANR	2674189	ReturnType	int		2673536	1					
ANR	2674190	Identifier	Image :: Write		2673536	2					
ANR	2674191	ParameterList	int file_d		2673536	3					
ANR	2674192	Parameter	int file_d	1193:14:33597:33606	2673536	0	True				
ANR	2674193	ParameterType	int		2673536	0					
ANR	2674194	Identifier	file_d		2673536	1					
ANR	2674195	CFGEntryNode	ENTRY		2673536		True				
ANR	2674196	CFGExitNode	EXIT		2673536		True				
ANR	2674197	Symbol	net_read		2673536						
ANR	2674198	Symbol	zbuf		2673536						
ANR	2674199	Symbol	zfree		2673536						
ANR	2674200	Symbol	zstr -> zalloc		2673536						
ANR	2674201	Symbol	zalloc		2673536						
ANR	2674202	Symbol	map [ i ] . Write		2673536						
ANR	2674203	Symbol	* map		2673536						
ANR	2674204	Symbol	ack		2673536						
ANR	2674205	Symbol	* zstr		2673536						
ANR	2674206	Symbol	Z_OK		2673536						
ANR	2674207	Symbol	zstr		2673536						
ANR	2674208	Symbol	zstr -> avail_out		2673536						
ANR	2674209	Symbol	head		2673536						
ANR	2674210	Symbol	deflateEnd		2673536						
ANR	2674211	Symbol	& head		2673536						
ANR	2674212	Symbol	head . N_Segs		2673536						
ANR	2674213	Symbol	len		2673536						
ANR	2674214	Symbol	zstr -> msg		2673536						
ANR	2674215	Symbol	map [ i ] . GetName		2673536						
ANR	2674216	Symbol	zbufsize		2673536						
ANR	2674217	Symbol	Z_STREAM_END		2673536						
ANR	2674218	Symbol	rval		2673536						
ANR	2674219	Symbol	_condor_in_file_stream		2673536						
ANR	2674220	Symbol	write		2673536						
ANR	2674221	Symbol	map		2673536						
ANR	2674222	Symbol	errno		2673536						
ANR	2674223	Symbol	bytes_to_go		2673536						
ANR	2674224	Symbol	NULL		2673536						
ANR	2674225	Symbol	D_ALWAYS		2673536						
ANR	2674226	Symbol	deflateInit		2673536						
ANR	2674227	Symbol	& ack		2673536						
ANR	2674228	Symbol	file_d		2673536						
ANR	2674229	Symbol	i		2673536						
ANR	2674230	Symbol	ntohl		2673536						
ANR	2674231	Symbol	zstr -> opaque		2673536						
ANR	2674232	Symbol	Z_DEFAULT_COMPRESSION		2673536						
ANR	2674233	Symbol	Z_FINISH		2673536						
ANR	2674234	Symbol	nbytes		2673536						
ANR	2674235	Symbol	ptr		2673536						
ANR	2674236	Symbol	condor_malloc		2673536						
ANR	2674237	Symbol	* i		2673536						
ANR	2674238	Symbol	deflate		2673536						
ANR	2674239	Symbol	condor_compress_ckpt		2673536						
ANR	2674240	Symbol	position		2673536						
ANR	2674241	Symbol	zstr -> zfree		2673536						
ANR	2674242	Symbol	status		2673536						
ANR	2674243	Symbol	Z_NULL		2673536						
ANR	2674244	Symbol	zstr -> next_out		2673536						
ANR	2674245	Function	Image :: Read	1336:0:37446:38317							
ANR	2674246	FunctionDef	Image :: Read ()		2674245	0					
ANR	2674247	CompoundStatement		1338:0:37464:38317	2674245	0					
ANR	2674248	IdentifierDeclStatement	int i ;	1339:1:37467:37473	2674245	0	True				
ANR	2674249	IdentifierDecl	i		2674245	0					
ANR	2674250	IdentifierDeclType	int		2674245	0					
ANR	2674251	Identifier	i		2674245	1					
ANR	2674252	IdentifierDeclStatement	int nbytes ;	1340:1:37476:37487	2674245	1	True				
ANR	2674253	IdentifierDecl	nbytes		2674245	0					
ANR	2674254	IdentifierDeclType	int		2674245	0					
ANR	2674255	Identifier	nbytes		2674245	1					
ANR	2674256	IfStatement	if ( fd < 0 && file_name && file_name [ 0 ] )		2674245	2					
ANR	2674257	Condition	fd < 0 && file_name && file_name [ 0 ]	1343:5:37555:37589	2674245	0	True				
ANR	2674258	AndExpression	fd < 0 && file_name && file_name [ 0 ]		2674245	0		&&			
ANR	2674259	RelationalExpression	fd < 0		2674245	0		<			
ANR	2674260	Identifier	fd		2674245	0					
ANR	2674261	PrimaryExpression	0		2674245	1					
ANR	2674262	AndExpression	file_name && file_name [ 0 ]		2674245	1		&&			
ANR	2674263	Identifier	file_name		2674245	0					
ANR	2674264	ArrayIndexing	file_name [ 0 ]		2674245	1					
ANR	2674265	Identifier	file_name		2674245	0					
ANR	2674266	PrimaryExpression	0		2674245	1					
ANR	2674267	CompoundStatement		6:43:128:128	2674245	1					
ANR	2674268	IfStatement	"if ( ( fd = open_ckpt_file ( file_name , O_RDONLY , 0 ) ) < 0 )"		2674245	0					
ANR	2674269	Condition	"( fd = open_ckpt_file ( file_name , O_RDONLY , 0 ) ) < 0"	1345:7:37652:37696	2674245	0	True				
ANR	2674270	RelationalExpression	"( fd = open_ckpt_file ( file_name , O_RDONLY , 0 ) ) < 0"		2674245	0		<			
ANR	2674271	AssignmentExpression	"fd = open_ckpt_file ( file_name , O_RDONLY , 0 )"		2674245	0		=			
ANR	2674272	Identifier	fd		2674245	0					
ANR	2674273	CallExpression	"open_ckpt_file ( file_name , O_RDONLY , 0 )"		2674245	1					
ANR	2674274	Callee	open_ckpt_file		2674245	0					
ANR	2674275	Identifier	open_ckpt_file		2674245	0					
ANR	2674276	ArgumentList	file_name		2674245	1					
ANR	2674277	Argument	file_name		2674245	0					
ANR	2674278	Identifier	file_name		2674245	0					
ANR	2674279	Argument	O_RDONLY		2674245	1					
ANR	2674280	Identifier	O_RDONLY		2674245	0					
ANR	2674281	Argument	0		2674245	2					
ANR	2674282	PrimaryExpression	0		2674245	0					
ANR	2674283	PrimaryExpression	0		2674245	1					
ANR	2674284	CompoundStatement		8:55:235:235	2674245	1					
ANR	2674285	ExpressionStatement	"dprintf ( D_ALWAYS , ""open_ckpt_file failed: %s"" , strerror ( errno ) )"	1346:4:37706:37777	2674245	0	True				
ANR	2674286	CallExpression	"dprintf ( D_ALWAYS , ""open_ckpt_file failed: %s"" , strerror ( errno ) )"		2674245	0					
ANR	2674287	Callee	dprintf		2674245	0					
ANR	2674288	Identifier	dprintf		2674245	0					
ANR	2674289	ArgumentList	D_ALWAYS		2674245	1					
ANR	2674290	Argument	D_ALWAYS		2674245	0					
ANR	2674291	Identifier	D_ALWAYS		2674245	0					
ANR	2674292	Argument	"""open_ckpt_file failed: %s"""		2674245	1					
ANR	2674293	PrimaryExpression	"""open_ckpt_file failed: %s"""		2674245	0					
ANR	2674294	Argument	strerror ( errno )		2674245	2					
ANR	2674295	CallExpression	strerror ( errno )		2674245	0					
ANR	2674296	Callee	strerror		2674245	0					
ANR	2674297	Identifier	strerror		2674245	0					
ANR	2674298	ArgumentList	errno		2674245	1					
ANR	2674299	Argument	errno		2674245	0					
ANR	2674300	Identifier	errno		2674245	0					
ANR	2674301	ReturnStatement	return - 1 ;	1348:4:37783:37792	2674245	1	True				
ANR	2674302	UnaryOperationExpression	- 1		2674245	0					
ANR	2674303	UnaryOperator	-		2674245	0					
ANR	2674304	PrimaryExpression	1		2674245	1					
ANR	2674305	IfStatement	"if ( ( nbytes = net_read ( fd , & head , sizeof ( head ) ) ) < 0 )"		2674245	3					
ANR	2674306	Condition	"( nbytes = net_read ( fd , & head , sizeof ( head ) ) ) < 0"	1354:5:37874:37917	2674245	0	True				
ANR	2674307	RelationalExpression	"( nbytes = net_read ( fd , & head , sizeof ( head ) ) ) < 0"		2674245	0		<			
ANR	2674308	AssignmentExpression	"nbytes = net_read ( fd , & head , sizeof ( head ) )"		2674245	0		=			
ANR	2674309	Identifier	nbytes		2674245	0					
ANR	2674310	CallExpression	"net_read ( fd , & head , sizeof ( head ) )"		2674245	1					
ANR	2674311	Callee	net_read		2674245	0					
ANR	2674312	Identifier	net_read		2674245	0					
ANR	2674313	ArgumentList	fd		2674245	1					
ANR	2674314	Argument	fd		2674245	0					
ANR	2674315	Identifier	fd		2674245	0					
ANR	2674316	Argument	& head		2674245	1					
ANR	2674317	UnaryOperationExpression	& head		2674245	0					
ANR	2674318	UnaryOperator	&		2674245	0					
ANR	2674319	Identifier	head		2674245	1					
ANR	2674320	Argument	sizeof ( head )		2674245	2					
ANR	2674321	SizeofExpression	sizeof ( head )		2674245	0					
ANR	2674322	Sizeof	sizeof		2674245	0					
ANR	2674323	SizeofOperand	head		2674245	1					
ANR	2674324	PrimaryExpression	0		2674245	1					
ANR	2674325	CompoundStatement		17:52:456:456	2674245	1					
ANR	2674326	ReturnStatement	return - 1 ;	1355:2:37925:37934	2674245	0	True				
ANR	2674327	UnaryOperationExpression	- 1		2674245	0					
ANR	2674328	UnaryOperator	-		2674245	0					
ANR	2674329	PrimaryExpression	1		2674245	1					
ANR	2674330	ExpressionStatement	pos += nbytes	1357:1:37940:37953	2674245	4	True				
ANR	2674331	AssignmentExpression	pos += nbytes		2674245	0		+=			
ANR	2674332	Identifier	pos		2674245	0					
ANR	2674333	Identifier	nbytes		2674245	1					
ANR	2674334	ExpressionStatement	"dprintf ( D_ALWAYS , ""Read headers OK\\n"" )"	1358:1:37956:37996	2674245	5	True				
ANR	2674335	CallExpression	"dprintf ( D_ALWAYS , ""Read headers OK\\n"" )"		2674245	0					
ANR	2674336	Callee	dprintf		2674245	0					
ANR	2674337	Identifier	dprintf		2674245	0					
ANR	2674338	ArgumentList	D_ALWAYS		2674245	1					
ANR	2674339	Argument	D_ALWAYS		2674245	0					
ANR	2674340	Identifier	D_ALWAYS		2674245	0					
ANR	2674341	Argument	"""Read headers OK\\n"""		2674245	1					
ANR	2674342	PrimaryExpression	"""Read headers OK\\n"""		2674245	0					
ANR	2674343	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		2674245	6					
ANR	2674344	ForInit	i = 0 ;	1361:6:38035:38038	2674245	0	True				
ANR	2674345	AssignmentExpression	i = 0		2674245	0		=			
ANR	2674346	Identifier	i		2674245	0					
ANR	2674347	PrimaryExpression	0		2674245	1					
ANR	2674348	Condition	i < head . N_Segs ( )	1361:11:38040:38054	2674245	1	True				
ANR	2674349	RelationalExpression	i < head . N_Segs ( )		2674245	0		<			
ANR	2674350	Identifier	i		2674245	0					
ANR	2674351	CallExpression	head . N_Segs ( )		2674245	1					
ANR	2674352	Callee	head . N_Segs		2674245	0					
ANR	2674353	MemberAccess	head . N_Segs		2674245	0					
ANR	2674354	Identifier	head		2674245	0					
ANR	2674355	Identifier	N_Segs		2674245	1					
ANR	2674356	ArgumentList			2674245	1					
ANR	2674357	PostIncDecOperationExpression	i ++	1361:28:38057:38059	2674245	2	True				
ANR	2674358	Identifier	i		2674245	0					
ANR	2674359	IncDec	++		2674245	1					
ANR	2674360	CompoundStatement		24:34:598:598	2674245	3					
ANR	2674361	IfStatement	"if ( ( nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) ) ) < 0 )"		2674245	0					
ANR	2674362	Condition	"( nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) ) ) < 0"	1362:6:38071:38118	2674245	0	True				
ANR	2674363	RelationalExpression	"( nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) ) ) < 0"		2674245	0		<			
ANR	2674364	AssignmentExpression	"nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) )"		2674245	0		=			
ANR	2674365	Identifier	nbytes		2674245	0					
ANR	2674366	CallExpression	"net_read ( fd , & map [ i ] , sizeof ( SegMap ) )"		2674245	1					
ANR	2674367	Callee	net_read		2674245	0					
ANR	2674368	Identifier	net_read		2674245	0					
ANR	2674369	ArgumentList	fd		2674245	1					
ANR	2674370	Argument	fd		2674245	0					
ANR	2674371	Identifier	fd		2674245	0					
ANR	2674372	Argument	& map [ i ]		2674245	1					
ANR	2674373	UnaryOperationExpression	& map [ i ]		2674245	0					
ANR	2674374	UnaryOperator	&		2674245	0					
ANR	2674375	ArrayIndexing	map [ i ]		2674245	1					
ANR	2674376	Identifier	map		2674245	0					
ANR	2674377	Identifier	i		2674245	1					
ANR	2674378	Argument	sizeof ( SegMap )		2674245	2					
ANR	2674379	SizeofExpression	sizeof ( SegMap )		2674245	0					
ANR	2674380	Sizeof	sizeof		2674245	0					
ANR	2674381	SizeofOperand	SegMap		2674245	1					
ANR	2674382	PrimaryExpression	0		2674245	1					
ANR	2674383	CompoundStatement		25:57:657:657	2674245	1					
ANR	2674384	ReturnStatement	return - 1 ;	1363:3:38127:38136	2674245	0	True				
ANR	2674385	UnaryOperationExpression	- 1		2674245	0					
ANR	2674386	UnaryOperator	-		2674245	0					
ANR	2674387	PrimaryExpression	1		2674245	1					
ANR	2674388	ExpressionStatement	pos += nbytes	1366:2:38168:38181	2674245	1	True				
ANR	2674389	AssignmentExpression	pos += nbytes		2674245	0		+=			
ANR	2674390	Identifier	pos		2674245	0					
ANR	2674391	Identifier	nbytes		2674245	1					
ANR	2674392	ExpressionStatement	"dprintf ( D_ALWAYS , ""Read SegMap[%d](%s) OK\\n"" , i , map [ i ] . GetName ( ) )"	1367:2:38185:38253	2674245	2	True				
ANR	2674393	CallExpression	"dprintf ( D_ALWAYS , ""Read SegMap[%d](%s) OK\\n"" , i , map [ i ] . GetName ( ) )"		2674245	0					
ANR	2674394	Callee	dprintf		2674245	0					
ANR	2674395	Identifier	dprintf		2674245	0					
ANR	2674396	ArgumentList	D_ALWAYS		2674245	1					
ANR	2674397	Argument	D_ALWAYS		2674245	0					
ANR	2674398	Identifier	D_ALWAYS		2674245	0					
ANR	2674399	Argument	"""Read SegMap[%d](%s) OK\\n"""		2674245	1					
ANR	2674400	PrimaryExpression	"""Read SegMap[%d](%s) OK\\n"""		2674245	0					
ANR	2674401	Argument	i		2674245	2					
ANR	2674402	Identifier	i		2674245	0					
ANR	2674403	Argument	map [ i ] . GetName ( )		2674245	3					
ANR	2674404	CallExpression	map [ i ] . GetName ( )		2674245	0					
ANR	2674405	Callee	map [ i ] . GetName		2674245	0					
ANR	2674406	MemberAccess	map [ i ] . GetName		2674245	0					
ANR	2674407	ArrayIndexing	map [ i ]		2674245	0					
ANR	2674408	Identifier	map		2674245	0					
ANR	2674409	Identifier	i		2674245	1					
ANR	2674410	Identifier	GetName		2674245	1					
ANR	2674411	ArgumentList			2674245	1					
ANR	2674412	ExpressionStatement	"dprintf ( D_ALWAYS , ""Read all SegMaps OK\\n"" )"	1369:1:38259:38303	2674245	7	True				
ANR	2674413	CallExpression	"dprintf ( D_ALWAYS , ""Read all SegMaps OK\\n"" )"		2674245	0					
ANR	2674414	Callee	dprintf		2674245	0					
ANR	2674415	Identifier	dprintf		2674245	0					
ANR	2674416	ArgumentList	D_ALWAYS		2674245	1					
ANR	2674417	Argument	D_ALWAYS		2674245	0					
ANR	2674418	Identifier	D_ALWAYS		2674245	0					
ANR	2674419	Argument	"""Read all SegMaps OK\\n"""		2674245	1					
ANR	2674420	PrimaryExpression	"""Read all SegMaps OK\\n"""		2674245	0					
ANR	2674421	ReturnStatement	return 0 ;	1371:1:38307:38315	2674245	8	True				
ANR	2674422	PrimaryExpression	0		2674245	0					
ANR	2674423	ReturnType	int		2674245	1					
ANR	2674424	Identifier	Image :: Read		2674245	2					
ANR	2674425	ParameterList			2674245	3					
ANR	2674426	CFGEntryNode	ENTRY		2674245		True				
ANR	2674427	CFGExitNode	EXIT		2674245		True				
ANR	2674428	Symbol	net_read		2674245						
ANR	2674429	Symbol	errno		2674245						
ANR	2674430	Symbol	* file_name		2674245						
ANR	2674431	Symbol	file_name		2674245						
ANR	2674432	Symbol	* map		2674245						
ANR	2674433	Symbol	D_ALWAYS		2674245						
ANR	2674434	Symbol	i		2674245						
ANR	2674435	Symbol	nbytes		2674245						
ANR	2674436	Symbol	strerror		2674245						
ANR	2674437	Symbol	head		2674245						
ANR	2674438	Symbol	& head		2674245						
ANR	2674439	Symbol	head . N_Segs		2674245						
ANR	2674440	Symbol	O_RDONLY		2674245						
ANR	2674441	Symbol	* i		2674245						
ANR	2674442	Symbol	pos		2674245						
ANR	2674443	Symbol	map [ i ] . GetName		2674245						
ANR	2674444	Symbol	map		2674245						
ANR	2674445	Symbol	fd		2674245						
ANR	2674446	Symbol	open_ckpt_file		2674245						
ANR	2674447	Function	Image :: Close	1374:0:38320:38518							
ANR	2674448	FunctionDef	Image :: Close ()		2674447	0					
ANR	2674449	CompoundStatement		1376:0:38340:38518	2674447	0					
ANR	2674450	IfStatement	if ( fd < 0 )		2674447	0					
ANR	2674451	Condition	fd < 0	1377:5:38347:38352	2674447	0	True				
ANR	2674452	RelationalExpression	fd < 0		2674447	0		<			
ANR	2674453	Identifier	fd		2674447	0					
ANR	2674454	PrimaryExpression	0		2674447	1					
ANR	2674455	CompoundStatement		2:14:15:15	2674447	1					
ANR	2674456	ExpressionStatement	"dprintf ( D_ALWAYS , ""Image::Close - file not open!\\n"" )"	1378:2:38360:38414	2674447	0	True				
ANR	2674457	CallExpression	"dprintf ( D_ALWAYS , ""Image::Close - file not open!\\n"" )"		2674447	0					
ANR	2674458	Callee	dprintf		2674447	0					
ANR	2674459	Identifier	dprintf		2674447	0					
ANR	2674460	ArgumentList	D_ALWAYS		2674447	1					
ANR	2674461	Argument	D_ALWAYS		2674447	0					
ANR	2674462	Identifier	D_ALWAYS		2674447	0					
ANR	2674463	Argument	"""Image::Close - file not open!\\n"""		2674447	1					
ANR	2674464	PrimaryExpression	"""Image::Close - file not open!\\n"""		2674447	0					
ANR	2674465	ExpressionStatement	close ( fd )	1380:1:38420:38431	2674447	1	True				
ANR	2674466	CallExpression	close ( fd )		2674447	0					
ANR	2674467	Callee	close		2674447	0					
ANR	2674468	Identifier	close		2674447	0					
ANR	2674469	ArgumentList	fd		2674447	1					
ANR	2674470	Argument	fd		2674447	0					
ANR	2674471	Identifier	fd		2674447	0					
ANR	2674472	ExpressionStatement	fd = - 1	1382:1:38509:38516	2674447	2	True				
ANR	2674473	AssignmentExpression	fd = - 1		2674447	0		=			
ANR	2674474	Identifier	fd		2674447	0					
ANR	2674475	UnaryOperationExpression	- 1		2674447	1					
ANR	2674476	UnaryOperator	-		2674447	0					
ANR	2674477	PrimaryExpression	1		2674447	1					
ANR	2674478	ReturnType	void		2674447	1					
ANR	2674479	Identifier	Image :: Close		2674447	2					
ANR	2674480	ParameterList			2674447	3					
ANR	2674481	CFGEntryNode	ENTRY		2674447		True				
ANR	2674482	CFGExitNode	EXIT		2674447		True				
ANR	2674483	Symbol	D_ALWAYS		2674447						
ANR	2674484	Symbol	fd		2674447						
ANR	2674485	Function	SegMap :: Read	1385:0:38521:45064							
ANR	2674486	FunctionDef	"SegMap :: Read (int fd , ssize_t pos)"		2674485	0					
ANR	2674487	CompoundStatement		1387:0:38565:45064	2674485	0					
ANR	2674488	IdentifierDeclStatement	int nbytes ;	1388:1:38568:38579	2674485	0	True				
ANR	2674489	IdentifierDecl	nbytes		2674485	0					
ANR	2674490	IdentifierDeclType	int		2674485	0					
ANR	2674491	Identifier	nbytes		2674485	1					
ANR	2674492	IdentifierDeclStatement	char * orig_brk ;	1389:1:38582:38596	2674485	1	True				
ANR	2674493	IdentifierDecl	* orig_brk		2674485	0					
ANR	2674494	IdentifierDeclType	char *		2674485	0					
ANR	2674495	Identifier	orig_brk		2674485	1					
ANR	2674496	IdentifierDeclStatement	char * cur_brk ;	1390:1:38599:38612	2674485	2	True				
ANR	2674497	IdentifierDecl	* cur_brk		2674485	0					
ANR	2674498	IdentifierDeclType	char *		2674485	0					
ANR	2674499	Identifier	cur_brk		2674485	1					
ANR	2674500	IdentifierDeclStatement	char * ptr ;	1391:1:38615:38624	2674485	3	True				
ANR	2674501	IdentifierDecl	* ptr		2674485	0					
ANR	2674502	IdentifierDeclType	char *		2674485	0					
ANR	2674503	Identifier	ptr		2674485	1					
ANR	2674504	IdentifierDeclStatement	int bytes_to_go ;	1392:1:38627:38643	2674485	4	True				
ANR	2674505	IdentifierDecl	bytes_to_go		2674485	0					
ANR	2674506	IdentifierDeclType	int		2674485	0					
ANR	2674507	Identifier	bytes_to_go		2674485	1					
ANR	2674508	IdentifierDeclStatement	int read_size ;	1393:1:38646:38660	2674485	5	True				
ANR	2674509	IdentifierDecl	read_size		2674485	0					
ANR	2674510	IdentifierDeclType	int		2674485	0					
ANR	2674511	Identifier	read_size		2674485	1					
ANR	2674512	IdentifierDeclStatement	long saved_len = len ;	1394:1:38663:38683	2674485	6	True				
ANR	2674513	IdentifierDecl	saved_len = len		2674485	0					
ANR	2674514	IdentifierDeclType	long		2674485	0					
ANR	2674515	Identifier	saved_len		2674485	1					
ANR	2674516	AssignmentExpression	saved_len = len		2674485	2		=			
ANR	2674517	Identifier	len		2674485	0					
ANR	2674518	Identifier	len		2674485	1					
ANR	2674519	IdentifierDeclStatement	RAW_ADDR saved_core_loc = core_loc ;	1395:1:38686:38720	2674485	7	True				
ANR	2674520	IdentifierDecl	saved_core_loc = core_loc		2674485	0					
ANR	2674521	IdentifierDeclType	RAW_ADDR		2674485	0					
ANR	2674522	Identifier	saved_core_loc		2674485	1					
ANR	2674523	AssignmentExpression	saved_core_loc = core_loc		2674485	2		=			
ANR	2674524	Identifier	core_loc		2674485	0					
ANR	2674525	Identifier	core_loc		2674485	1					
ANR	2674526	IfStatement	if ( pos != file_loc )		2674485	8					
ANR	2674527	Condition	pos != file_loc	1397:5:38729:38743	2674485	0	True				
ANR	2674528	EqualityExpression	pos != file_loc		2674485	0		!=			
ANR	2674529	Identifier	pos		2674485	0					
ANR	2674530	Identifier	file_loc		2674485	1					
ANR	2674531	CompoundStatement		11:23:181:181	2674485	1					
ANR	2674532	IfStatement	if ( pos > UINT_MAX )		2674485	0					
ANR	2674533	Condition	pos > UINT_MAX	1400:6:38881:38894	2674485	0	True				
ANR	2674534	RelationalExpression	pos > UINT_MAX		2674485	0		>			
ANR	2674535	Identifier	pos		2674485	0					
ANR	2674536	Identifier	UINT_MAX		2674485	1					
ANR	2674537	CompoundStatement		14:22:331:331	2674485	1					
ANR	2674538	Statement	dprintf	1401:3:38902:38908	2674485	0	True				
ANR	2674539	Statement	(	1401:10:38909:38909	2674485	1	True				
ANR	2674540	Statement	D_ALWAYS	1401:12:38911:38918	2674485	2	True				
ANR	2674541	Statement	","	1401:20:38919:38919	2674485	3	True				
ANR	2674542	Statement	"""Checkpoint sequence error at a position """	1401:22:38921:38962	2674485	4	True				
ANR	2674543	Statement	"""greater than UINT_MAX. Sorry.\\n"""	1402:4:38968:39000	2674485	5	True				
ANR	2674544	Statement	)	1402:37:39001:39001	2674485	6	True				
ANR	2674545	ExpressionStatement		1402:38:39002:39002	2674485	7	True				
ANR	2674546	ElseStatement	else		2674485	0					
ANR	2674547	CompoundStatement		17:9:447:447	2674485	0					
ANR	2674548	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"	1404:3:39018:39113	2674485	0	True				
ANR	2674549	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"		2674485	0					
ANR	2674550	Callee	dprintf		2674485	0					
ANR	2674551	Identifier	dprintf		2674485	0					
ANR	2674552	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674553	Argument	D_ALWAYS		2674485	0					
ANR	2674554	Identifier	D_ALWAYS		2674485	0					
ANR	2674555	Argument	"""Checkpoint sequence error (%d != %u)\\n"""		2674485	1					
ANR	2674556	PrimaryExpression	"""Checkpoint sequence error (%d != %u)\\n"""		2674485	0					
ANR	2674557	Argument	pos		2674485	2					
ANR	2674558	Identifier	pos		2674485	0					
ANR	2674559	Argument	( unsigned int ) file_loc		2674485	3					
ANR	2674560	CastExpression	( unsigned int ) file_loc		2674485	0					
ANR	2674561	CastTarget	unsigned int		2674485	0					
ANR	2674562	Identifier	file_loc		2674485	1					
ANR	2674563	ExpressionStatement	Suicide ( )	1407:2:39121:39130	2674485	1	True				
ANR	2674564	CallExpression	Suicide ( )		2674485	0					
ANR	2674565	Callee	Suicide		2674485	0					
ANR	2674566	Identifier	Suicide		2674485	0					
ANR	2674567	ArgumentList			2674485	1					
ANR	2674568	ExpressionStatement	"dprintf ( D_CKPT , ""Restoring a %s segment\\n"" , name )"	1410:1:39137:39186	2674485	9	True				
ANR	2674569	CallExpression	"dprintf ( D_CKPT , ""Restoring a %s segment\\n"" , name )"		2674485	0					
ANR	2674570	Callee	dprintf		2674485	0					
ANR	2674571	Identifier	dprintf		2674485	0					
ANR	2674572	ArgumentList	D_CKPT		2674485	1					
ANR	2674573	Argument	D_CKPT		2674485	0					
ANR	2674574	Identifier	D_CKPT		2674485	0					
ANR	2674575	Argument	"""Restoring a %s segment\\n"""		2674485	1					
ANR	2674576	PrimaryExpression	"""Restoring a %s segment\\n"""		2674485	0					
ANR	2674577	Argument	name		2674485	2					
ANR	2674578	Identifier	name		2674485	0					
ANR	2674579	IfStatement	"if ( mystrcmp ( name , ""DATA"" ) == 0 )"		2674485	10					
ANR	2674580	Condition	"mystrcmp ( name , ""DATA"" ) == 0"	1412:5:39194:39219	2674485	0	True				
ANR	2674581	EqualityExpression	"mystrcmp ( name , ""DATA"" ) == 0"		2674485	0		==			
ANR	2674582	CallExpression	"mystrcmp ( name , ""DATA"" )"		2674485	0					
ANR	2674583	Callee	mystrcmp		2674485	0					
ANR	2674584	Identifier	mystrcmp		2674485	0					
ANR	2674585	ArgumentList	name		2674485	1					
ANR	2674586	Argument	name		2674485	0					
ANR	2674587	Identifier	name		2674485	0					
ANR	2674588	Argument	"""DATA"""		2674485	1					
ANR	2674589	PrimaryExpression	"""DATA"""		2674485	0					
ANR	2674590	PrimaryExpression	0		2674485	1					
ANR	2674591	CompoundStatement		26:34:657:657	2674485	1					
ANR	2674592	ExpressionStatement	orig_brk = ( char * ) sbrk ( 0 )	1413:2:39227:39253	2674485	0	True				
ANR	2674593	AssignmentExpression	orig_brk = ( char * ) sbrk ( 0 )		2674485	0		=			
ANR	2674594	Identifier	orig_brk		2674485	0					
ANR	2674595	CastExpression	( char * ) sbrk ( 0 )		2674485	1					
ANR	2674596	CastTarget	char *		2674485	0					
ANR	2674597	CallExpression	sbrk ( 0 )		2674485	1					
ANR	2674598	Callee	sbrk		2674485	0					
ANR	2674599	Identifier	sbrk		2674485	0					
ANR	2674600	ArgumentList	0		2674485	1					
ANR	2674601	Argument	0		2674485	0					
ANR	2674602	PrimaryExpression	0		2674485	0					
ANR	2674603	IfStatement	if ( orig_brk < ( char * ) ( core_loc + len ) )		2674485	1					
ANR	2674604	Condition	orig_brk < ( char * ) ( core_loc + len )	1414:6:39261:39295	2674485	0	True				
ANR	2674605	RelationalExpression	orig_brk < ( char * ) ( core_loc + len )		2674485	0		<			
ANR	2674606	Identifier	orig_brk		2674485	0					
ANR	2674607	CastExpression	( char * ) ( core_loc + len )		2674485	1					
ANR	2674608	CastTarget	char *		2674485	0					
ANR	2674609	AdditiveExpression	core_loc + len		2674485	1		+			
ANR	2674610	Identifier	core_loc		2674485	0					
ANR	2674611	Identifier	len		2674485	1					
ANR	2674612	CompoundStatement		28:44:733:733	2674485	1					
ANR	2674613	ExpressionStatement	brk ( ( char * ) ( core_loc + len ) )	1415:3:39304:39335	2674485	0	True				
ANR	2674614	CallExpression	brk ( ( char * ) ( core_loc + len ) )		2674485	0					
ANR	2674615	Callee	brk		2674485	0					
ANR	2674616	Identifier	brk		2674485	0					
ANR	2674617	ArgumentList	( char * ) ( core_loc + len )		2674485	1					
ANR	2674618	Argument	( char * ) ( core_loc + len )		2674485	0					
ANR	2674619	CastExpression	( char * ) ( core_loc + len )		2674485	0					
ANR	2674620	CastTarget	char *		2674485	0					
ANR	2674621	AdditiveExpression	core_loc + len		2674485	1		+			
ANR	2674622	Identifier	core_loc		2674485	0					
ANR	2674623	Identifier	len		2674485	1					
ANR	2674624	ExpressionStatement	cur_brk = ( char * ) sbrk ( 0 )	1417:2:39343:39368	2674485	2	True				
ANR	2674625	AssignmentExpression	cur_brk = ( char * ) sbrk ( 0 )		2674485	0		=			
ANR	2674626	Identifier	cur_brk		2674485	0					
ANR	2674627	CastExpression	( char * ) sbrk ( 0 )		2674485	1					
ANR	2674628	CastTarget	char *		2674485	0					
ANR	2674629	CallExpression	sbrk ( 0 )		2674485	1					
ANR	2674630	Callee	sbrk		2674485	0					
ANR	2674631	Identifier	sbrk		2674485	0					
ANR	2674632	ArgumentList	0		2674485	1					
ANR	2674633	Argument	0		2674485	0					
ANR	2674634	PrimaryExpression	0		2674485	0					
ANR	2674635	ExpressionStatement	"dprintf ( D_ALWAYS , ""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"" , orig_brk , cur_brk )"	1418:2:39372:39475	2674485	3	True				
ANR	2674636	CallExpression	"dprintf ( D_ALWAYS , ""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"" , orig_brk , cur_brk )"		2674485	0					
ANR	2674637	Callee	dprintf		2674485	0					
ANR	2674638	Identifier	dprintf		2674485	0					
ANR	2674639	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674640	Argument	D_ALWAYS		2674485	0					
ANR	2674641	Identifier	D_ALWAYS		2674485	0					
ANR	2674642	Argument	"""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"""		2674485	1					
ANR	2674643	PrimaryExpression	"""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"""		2674485	0					
ANR	2674644	Argument	orig_brk		2674485	2					
ANR	2674645	Identifier	orig_brk		2674485	0					
ANR	2674646	Argument	cur_brk		2674485	3					
ANR	2674647	Identifier	cur_brk		2674485	0					
ANR	2674648	ElseStatement	else		2674485	0					
ANR	2674649	IfStatement	"if ( mystrcmp ( name , ""SHARED LIB"" ) == 0 )"		2674485	0					
ANR	2674650	Condition	"mystrcmp ( name , ""SHARED LIB"" ) == 0"	1424:11:39527:39558	2674485	0	True				
ANR	2674651	EqualityExpression	"mystrcmp ( name , ""SHARED LIB"" ) == 0"		2674485	0		==			
ANR	2674652	CallExpression	"mystrcmp ( name , ""SHARED LIB"" )"		2674485	0					
ANR	2674653	Callee	mystrcmp		2674485	0					
ANR	2674654	Identifier	mystrcmp		2674485	0					
ANR	2674655	ArgumentList	name		2674485	1					
ANR	2674656	Argument	name		2674485	0					
ANR	2674657	Identifier	name		2674485	0					
ANR	2674658	Argument	"""SHARED LIB"""		2674485	1					
ANR	2674659	PrimaryExpression	"""SHARED LIB"""		2674485	0					
ANR	2674660	PrimaryExpression	0		2674485	1					
ANR	2674661	CompoundStatement		66:2:2015:2058	2674485	1					
ANR	2674662	IdentifierDeclStatement	int segSize = len ;	1426:2:39633:39650	2674485	0	True				
ANR	2674663	IdentifierDecl	segSize = len		2674485	0					
ANR	2674664	IdentifierDeclType	int		2674485	0					
ANR	2674665	Identifier	segSize		2674485	1					
ANR	2674666	AssignmentExpression	segSize = len		2674485	2		=			
ANR	2674667	Identifier	len		2674485	0					
ANR	2674668	Identifier	len		2674485	1					
ANR	2674669	IdentifierDeclStatement	int zfd ;	1427:2:39654:39661	2674485	1	True				
ANR	2674670	IdentifierDecl	zfd		2674485	0					
ANR	2674671	IdentifierDeclType	int		2674485	0					
ANR	2674672	Identifier	zfd		2674485	1					
ANR	2674673	IdentifierDeclStatement	char * segLoc ;	1428:2:39665:39677	2674485	2	True				
ANR	2674674	IdentifierDecl	* segLoc		2674485	0					
ANR	2674675	IdentifierDeclType	char *		2674485	0					
ANR	2674676	Identifier	segLoc		2674485	1					
ANR	2674677	ExpressionStatement	segLoc = ( char * ) core_loc	1430:2:39684:39709	2674485	3	True				
ANR	2674678	AssignmentExpression	segLoc = ( char * ) core_loc		2674485	0		=			
ANR	2674679	Identifier	segLoc		2674485	0					
ANR	2674680	CastExpression	( char * ) core_loc		2674485	1					
ANR	2674681	CastTarget	char *		2674485	0					
ANR	2674682	Identifier	core_loc		2674485	1					
ANR	2674683	IfStatement	"if ( ( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1 )"		2674485	4					
ANR	2674684	Condition	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"	1431:6:39717:39768	2674485	0	True				
ANR	2674685	EqualityExpression	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"		2674485	0		==			
ANR	2674686	AssignmentExpression	"zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		2674485	0		=			
ANR	2674687	Identifier	zfd		2674485	0					
ANR	2674688	CallExpression	"SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		2674485	1					
ANR	2674689	Callee	SYSCALL		2674485	0					
ANR	2674690	Identifier	SYSCALL		2674485	0					
ANR	2674691	ArgumentList	SYS_open		2674485	1					
ANR	2674692	Argument	SYS_open		2674485	0					
ANR	2674693	Identifier	SYS_open		2674485	0					
ANR	2674694	Argument	"""/dev/zero"""		2674485	1					
ANR	2674695	PrimaryExpression	"""/dev/zero"""		2674485	0					
ANR	2674696	Argument	O_RDWR		2674485	2					
ANR	2674697	Identifier	O_RDWR		2674485	0					
ANR	2674698	UnaryOperationExpression	- 1		2674485	1					
ANR	2674699	UnaryOperator	-		2674485	0					
ANR	2674700	PrimaryExpression	1		2674485	1					
ANR	2674701	CompoundStatement		45:60:1205:1205	2674485	1					
ANR	2674702	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"	1432:3:39776:39850	2674485	0	True				
ANR	2674703	CallExpression	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"		2674485	0					
ANR	2674704	Callee	dprintf		2674485	0					
ANR	2674705	Identifier	dprintf		2674485	0					
ANR	2674706	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674707	Argument	D_ALWAYS		2674485	0					
ANR	2674708	Identifier	D_ALWAYS		2674485	0					
ANR	2674709	Argument	"""Unable to open /dev/zero in read/write mode.\\n"""		2674485	1					
ANR	2674710	PrimaryExpression	"""Unable to open /dev/zero in read/write mode.\\n"""		2674485	0					
ANR	2674711	ExpressionStatement	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"	1434:3:39855:39904	2674485	1	True				
ANR	2674712	CallExpression	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"		2674485	0					
ANR	2674713	Callee	dprintf		2674485	0					
ANR	2674714	Identifier	dprintf		2674485	0					
ANR	2674715	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674716	Argument	D_ALWAYS		2674485	0					
ANR	2674717	Identifier	D_ALWAYS		2674485	0					
ANR	2674718	Argument	"""open: %s\\n"""		2674485	1					
ANR	2674719	PrimaryExpression	"""open: %s\\n"""		2674485	0					
ANR	2674720	Argument	strerror ( errno )		2674485	2					
ANR	2674721	CallExpression	strerror ( errno )		2674485	0					
ANR	2674722	Callee	strerror		2674485	0					
ANR	2674723	Identifier	strerror		2674485	0					
ANR	2674724	ArgumentList	errno		2674485	1					
ANR	2674725	Argument	errno		2674485	0					
ANR	2674726	Identifier	errno		2674485	0					
ANR	2674727	ExpressionStatement	Suicide ( )	1435:3:39909:39918	2674485	2	True				
ANR	2674728	CallExpression	Suicide ( )		2674485	0					
ANR	2674729	Callee	Suicide		2674485	0					
ANR	2674730	Identifier	Suicide		2674485	0					
ANR	2674731	ArgumentList			2674485	1					
ANR	2674732	IdentifierDeclStatement	int page_mask = GETPAGESIZE ( ) - 1 ;	1451:2:40546:40577	2674485	5	True				
ANR	2674733	IdentifierDecl	page_mask = GETPAGESIZE ( ) - 1		2674485	0					
ANR	2674734	IdentifierDeclType	int		2674485	0					
ANR	2674735	Identifier	page_mask		2674485	1					
ANR	2674736	AssignmentExpression	page_mask = GETPAGESIZE ( ) - 1		2674485	2		=			
ANR	2674737	Identifier	page_mask		2674485	0					
ANR	2674738	AdditiveExpression	GETPAGESIZE ( ) - 1		2674485	1		-			
ANR	2674739	CallExpression	GETPAGESIZE ( )		2674485	0					
ANR	2674740	Callee	GETPAGESIZE		2674485	0					
ANR	2674741	Identifier	GETPAGESIZE		2674485	0					
ANR	2674742	ArgumentList			2674485	1					
ANR	2674743	PrimaryExpression	1		2674485	1					
ANR	2674744	IdentifierDeclStatement	int align_offset = ( long ) segLoc & page_mask ;	1452:2:40581:40624	2674485	6	True				
ANR	2674745	IdentifierDecl	align_offset = ( long ) segLoc & page_mask		2674485	0					
ANR	2674746	IdentifierDeclType	int		2674485	0					
ANR	2674747	Identifier	align_offset		2674485	1					
ANR	2674748	AssignmentExpression	align_offset = ( long ) segLoc & page_mask		2674485	2		=			
ANR	2674749	Identifier	align_offset		2674485	0					
ANR	2674750	BitAndExpression	( long ) segLoc & page_mask		2674485	1		&			
ANR	2674751	CastExpression	( long ) segLoc		2674485	0					
ANR	2674752	CastTarget	long		2674485	0					
ANR	2674753	Identifier	segLoc		2674485	1					
ANR	2674754	Identifier	page_mask		2674485	1					
ANR	2674755	IfStatement	if ( align_offset )		2674485	7					
ANR	2674756	Condition	align_offset	1453:6:40632:40643	2674485	0	True				
ANR	2674757	Identifier	align_offset		2674485	0					
ANR	2674758	CompoundStatement		94:3:3294:3348	2674485	1					
ANR	2674759	Statement	dprintf	1457:3:40816:40822	2674485	0	True				
ANR	2674760	Statement	(	1457:10:40823:40823	2674485	1	True				
ANR	2674761	Statement	D_ALWAYS	1457:11:40824:40831	2674485	2	True				
ANR	2674762	Statement	","	1457:19:40832:40832	2674485	3	True				
ANR	2674763	Statement	"""Unaligned ckpt segment at 0x%x!  """	1457:21:40834:40868	2674485	4	True				
ANR	2674764	Statement	"""Performing alignment...\\n"""	1458:5:40875:40901	2674485	5	True				
ANR	2674765	Statement	","	1458:32:40902:40902	2674485	6	True				
ANR	2674766	Statement	segLoc	1458:34:40904:40909	2674485	7	True				
ANR	2674767	Statement	)	1458:40:40910:40910	2674485	8	True				
ANR	2674768	ExpressionStatement		1458:41:40911:40911	2674485	9	True				
ANR	2674769	ExpressionStatement	segSize += align_offset	1459:3:40916:40939	2674485	10	True				
ANR	2674770	AssignmentExpression	segSize += align_offset		2674485	0		+=			
ANR	2674771	Identifier	segSize		2674485	0					
ANR	2674772	Identifier	align_offset		2674485	1					
ANR	2674773	ExpressionStatement	segLoc -= align_offset	1460:3:40944:40966	2674485	11	True				
ANR	2674774	AssignmentExpression	segLoc -= align_offset		2674485	0		-=			
ANR	2674775	Identifier	segLoc		2674485	0					
ANR	2674776	Identifier	align_offset		2674485	1					
ANR	2674777	IfStatement	"if ( SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0 )"		2674485	12					
ANR	2674778	Condition	"SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"	1474:7:41647:41733	2674485	0	True				
ANR	2674779	EqualityExpression	"SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"		2674485	0		==			
ANR	2674780	CallExpression	"SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC )"		2674485	0					
ANR	2674781	Callee	SYSCALL		2674485	0					
ANR	2674782	Identifier	SYSCALL		2674485	0					
ANR	2674783	ArgumentList	SYS_mprotect		2674485	1					
ANR	2674784	Argument	SYS_mprotect		2674485	0					
ANR	2674785	Identifier	SYS_mprotect		2674485	0					
ANR	2674786	Argument	segLoc		2674485	1					
ANR	2674787	Identifier	segLoc		2674485	0					
ANR	2674788	Argument	GETPAGESIZE ( )		2674485	2					
ANR	2674789	CallExpression	GETPAGESIZE ( )		2674485	0					
ANR	2674790	Callee	GETPAGESIZE		2674485	0					
ANR	2674791	Identifier	GETPAGESIZE		2674485	0					
ANR	2674792	ArgumentList			2674485	1					
ANR	2674793	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		2674485	3					
ANR	2674794	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		2674485	0		|			
ANR	2674795	Identifier	PROT_READ		2674485	0					
ANR	2674796	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		2674485	1		|			
ANR	2674797	Identifier	PROT_WRITE		2674485	0					
ANR	2674798	Identifier	PROT_EXEC		2674485	1					
ANR	2674799	PrimaryExpression	0		2674485	1					
ANR	2674800	CompoundStatement		89:44:3170:3170	2674485	1					
ANR	2674801	ExpressionStatement	"dprintf ( D_ALWAYS , ""First page already mapped.\\n"" )"	1476:4:41742:41791	2674485	0	True				
ANR	2674802	CallExpression	"dprintf ( D_ALWAYS , ""First page already mapped.\\n"" )"		2674485	0					
ANR	2674803	Callee	dprintf		2674485	0					
ANR	2674804	Identifier	dprintf		2674485	0					
ANR	2674805	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674806	Argument	D_ALWAYS		2674485	0					
ANR	2674807	Identifier	D_ALWAYS		2674485	0					
ANR	2674808	Argument	"""First page already mapped.\\n"""		2674485	1					
ANR	2674809	PrimaryExpression	"""First page already mapped.\\n"""		2674485	0					
ANR	2674810	ExpressionStatement	segLoc += GETPAGESIZE ( )	1477:4:41797:41820	2674485	1	True				
ANR	2674811	AssignmentExpression	segLoc += GETPAGESIZE ( )		2674485	0		+=			
ANR	2674812	Identifier	segLoc		2674485	0					
ANR	2674813	CallExpression	GETPAGESIZE ( )		2674485	1					
ANR	2674814	Callee	GETPAGESIZE		2674485	0					
ANR	2674815	Identifier	GETPAGESIZE		2674485	0					
ANR	2674816	ArgumentList			2674485	1					
ANR	2674817	ExpressionStatement	segSize -= GETPAGESIZE ( )	1478:4:41826:41850	2674485	2	True				
ANR	2674818	AssignmentExpression	segSize -= GETPAGESIZE ( )		2674485	0		-=			
ANR	2674819	Identifier	segSize		2674485	0					
ANR	2674820	CallExpression	GETPAGESIZE ( )		2674485	1					
ANR	2674821	Callee	GETPAGESIZE		2674485	0					
ANR	2674822	Identifier	GETPAGESIZE		2674485	0					
ANR	2674823	ArgumentList			2674485	1					
ANR	2674824	IdentifierDeclStatement	char * lastPage = segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) ) ;	1480:3:41860:41914	2674485	13	True				
ANR	2674825	IdentifierDecl	* lastPage = segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) )		2674485	0					
ANR	2674826	IdentifierDeclType	char *		2674485	0					
ANR	2674827	Identifier	lastPage		2674485	1					
ANR	2674828	AssignmentExpression	* lastPage = segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) )		2674485	2		=			
ANR	2674829	Identifier	lastPage		2674485	0					
ANR	2674830	AdditiveExpression	segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) )		2674485	1		+			
ANR	2674831	Identifier	segLoc		2674485	0					
ANR	2674832	BitAndExpression	( segSize - 1 ) & ~ ( page_mask )		2674485	1		&			
ANR	2674833	AdditiveExpression	segSize - 1		2674485	0		-			
ANR	2674834	Identifier	segSize		2674485	0					
ANR	2674835	PrimaryExpression	1		2674485	1					
ANR	2674836	UnaryOperationExpression	~ ( page_mask )		2674485	1					
ANR	2674837	UnaryOperator	~		2674485	0					
ANR	2674838	Identifier	page_mask		2674485	1					
ANR	2674839	IfStatement	"if ( segSize > 0 && SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0 )"		2674485	14					
ANR	2674840	Condition	"segSize > 0 && SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"	1481:7:41923:42030	2674485	0	True				
ANR	2674841	AndExpression	"segSize > 0 && SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"		2674485	0		&&			
ANR	2674842	RelationalExpression	segSize > 0		2674485	0		>			
ANR	2674843	Identifier	segSize		2674485	0					
ANR	2674844	PrimaryExpression	0		2674485	1					
ANR	2674845	EqualityExpression	"SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"		2674485	1		==			
ANR	2674846	CallExpression	"SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC )"		2674485	0					
ANR	2674847	Callee	SYSCALL		2674485	0					
ANR	2674848	Identifier	SYSCALL		2674485	0					
ANR	2674849	ArgumentList	SYS_mprotect		2674485	1					
ANR	2674850	Argument	SYS_mprotect		2674485	0					
ANR	2674851	Identifier	SYS_mprotect		2674485	0					
ANR	2674852	Argument	lastPage		2674485	1					
ANR	2674853	Identifier	lastPage		2674485	0					
ANR	2674854	Argument	GETPAGESIZE ( )		2674485	2					
ANR	2674855	CallExpression	GETPAGESIZE ( )		2674485	0					
ANR	2674856	Callee	GETPAGESIZE		2674485	0					
ANR	2674857	Identifier	GETPAGESIZE		2674485	0					
ANR	2674858	ArgumentList			2674485	1					
ANR	2674859	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		2674485	3					
ANR	2674860	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		2674485	0		|			
ANR	2674861	Identifier	PROT_READ		2674485	0					
ANR	2674862	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		2674485	1		|			
ANR	2674863	Identifier	PROT_WRITE		2674485	0					
ANR	2674864	Identifier	PROT_EXEC		2674485	1					
ANR	2674865	PrimaryExpression	0		2674485	1					
ANR	2674866	CompoundStatement		97:44:3467:3467	2674485	1					
ANR	2674867	ExpressionStatement	"dprintf ( D_ALWAYS , ""Last page already mapped.\\n"" )"	1484:4:42039:42087	2674485	0	True				
ANR	2674868	CallExpression	"dprintf ( D_ALWAYS , ""Last page already mapped.\\n"" )"		2674485	0					
ANR	2674869	Callee	dprintf		2674485	0					
ANR	2674870	Identifier	dprintf		2674485	0					
ANR	2674871	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674872	Argument	D_ALWAYS		2674485	0					
ANR	2674873	Identifier	D_ALWAYS		2674485	0					
ANR	2674874	Argument	"""Last page already mapped.\\n"""		2674485	1					
ANR	2674875	PrimaryExpression	"""Last page already mapped.\\n"""		2674485	0					
ANR	2674876	ExpressionStatement	segSize -= GETPAGESIZE ( )	1485:4:42093:42117	2674485	1	True				
ANR	2674877	AssignmentExpression	segSize -= GETPAGESIZE ( )		2674485	0		-=			
ANR	2674878	Identifier	segSize		2674485	0					
ANR	2674879	CallExpression	GETPAGESIZE ( )		2674485	1					
ANR	2674880	Callee	GETPAGESIZE		2674485	0					
ANR	2674881	Identifier	GETPAGESIZE		2674485	0					
ANR	2674882	ArgumentList			2674485	1					
ANR	2674883	IfStatement	if ( segSize > 0 )		2674485	8					
ANR	2674884	Condition	segSize > 0	1489:6:42135:42145	2674485	0	True				
ANR	2674885	RelationalExpression	segSize > 0		2674485	0		>			
ANR	2674886	Identifier	segSize		2674485	0					
ANR	2674887	PrimaryExpression	0		2674485	1					
ANR	2674888	CompoundStatement		103:19:3582:3582	2674485	1					
ANR	2674889	IfStatement	"if ( ( MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 ) ) == MAP_FAILED )"		2674485	0					
ANR	2674890	Condition	"( MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 ) ) == MAP_FAILED"	1490:7:42196:42324	2674485	0	True				
ANR	2674891	EqualityExpression	"( MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 ) ) == MAP_FAILED"		2674485	0		==			
ANR	2674892	CallExpression	"MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 )"		2674485	0					
ANR	2674893	Callee	MMAP		2674485	0					
ANR	2674894	Identifier	MMAP		2674485	0					
ANR	2674895	ArgumentList	( MMAP_T ) segLoc		2674485	1					
ANR	2674896	Argument	( MMAP_T ) segLoc		2674485	0					
ANR	2674897	CastExpression	( MMAP_T ) segLoc		2674485	0					
ANR	2674898	CastTarget	MMAP_T		2674485	0					
ANR	2674899	Identifier	segLoc		2674485	1					
ANR	2674900	Argument	( size_t ) segSize		2674485	1					
ANR	2674901	CastExpression	( size_t ) segSize		2674485	0					
ANR	2674902	CastTarget	size_t		2674485	0					
ANR	2674903	Identifier	segSize		2674485	1					
ANR	2674904	Argument	prot | PROT_WRITE		2674485	2					
ANR	2674905	InclusiveOrExpression	prot | PROT_WRITE		2674485	0		|			
ANR	2674906	Identifier	prot		2674485	0					
ANR	2674907	Identifier	PROT_WRITE		2674485	1					
ANR	2674908	Argument	MAP_PRIVATE | MAP_FIXED		2674485	3					
ANR	2674909	InclusiveOrExpression	MAP_PRIVATE | MAP_FIXED		2674485	0		|			
ANR	2674910	Identifier	MAP_PRIVATE		2674485	0					
ANR	2674911	Identifier	MAP_FIXED		2674485	1					
ANR	2674912	Argument	zfd		2674485	4					
ANR	2674913	Identifier	zfd		2674485	0					
ANR	2674914	Argument	( off_t ) 0		2674485	5					
ANR	2674915	CastExpression	( off_t ) 0		2674485	0					
ANR	2674916	CastTarget	off_t		2674485	0					
ANR	2674917	PrimaryExpression	0		2674485	1					
ANR	2674918	Identifier	MAP_FAILED		2674485	1					
ANR	2674919	CompoundStatement		107:33:3761:3761	2674485	1					
ANR	2674920	ExpressionStatement	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"	1494:4:42333:42379	2674485	0	True				
ANR	2674921	CallExpression	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"		2674485	0					
ANR	2674922	Callee	dprintf		2674485	0					
ANR	2674923	Identifier	dprintf		2674485	0					
ANR	2674924	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674925	Argument	D_ALWAYS		2674485	0					
ANR	2674926	Identifier	D_ALWAYS		2674485	0					
ANR	2674927	Argument	"""mmap: %s"""		2674485	1					
ANR	2674928	PrimaryExpression	"""mmap: %s"""		2674485	0					
ANR	2674929	Argument	strerror ( errno )		2674485	2					
ANR	2674930	CallExpression	strerror ( errno )		2674485	0					
ANR	2674931	Callee	strerror		2674485	0					
ANR	2674932	Identifier	strerror		2674485	0					
ANR	2674933	ArgumentList	errno		2674485	1					
ANR	2674934	Argument	errno		2674485	0					
ANR	2674935	Identifier	errno		2674485	0					
ANR	2674936	Statement	dprintf	1495:4:42385:42391	2674485	1	True				
ANR	2674937	Statement	(	1495:11:42392:42392	2674485	2	True				
ANR	2674938	Statement	D_ALWAYS	1495:12:42393:42400	2674485	3	True				
ANR	2674939	Statement	","	1495:20:42401:42401	2674485	4	True				
ANR	2674940	Statement	"""Attempted to mmap /dev/zero at """	1495:22:42403:42435	2674485	5	True				
ANR	2674941	Statement	"""address 0x%x, size 0x%x\\n"""	1496:6:42443:42469	2674485	6	True				
ANR	2674942	Statement	","	1496:33:42470:42470	2674485	7	True				
ANR	2674943	Statement	segLoc	1496:35:42472:42477	2674485	8	True				
ANR	2674944	Statement	","	1496:41:42478:42478	2674485	9	True				
ANR	2674945	Statement	segSize	1497:6:42486:42492	2674485	10	True				
ANR	2674946	Statement	)	1497:13:42493:42493	2674485	11	True				
ANR	2674947	ExpressionStatement		1497:14:42494:42494	2674485	12	True				
ANR	2674948	ExpressionStatement	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"	1498:4:42500:42550	2674485	13	True				
ANR	2674949	CallExpression	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"		2674485	0					
ANR	2674950	Callee	dprintf		2674485	0					
ANR	2674951	Identifier	dprintf		2674485	0					
ANR	2674952	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674953	Argument	D_ALWAYS		2674485	0					
ANR	2674954	Identifier	D_ALWAYS		2674485	0					
ANR	2674955	Argument	"""Current segmap dump follows\\n"""		2674485	1					
ANR	2674956	PrimaryExpression	"""Current segmap dump follows\\n"""		2674485	0					
ANR	2674957	ExpressionStatement	display_prmap ( )	1499:4:42556:42571	2674485	14	True				
ANR	2674958	CallExpression	display_prmap ( )		2674485	0					
ANR	2674959	Callee	display_prmap		2674485	0					
ANR	2674960	Identifier	display_prmap		2674485	0					
ANR	2674961	ArgumentList			2674485	1					
ANR	2674962	ExpressionStatement	Suicide ( )	1500:4:42577:42586	2674485	15	True				
ANR	2674963	CallExpression	Suicide ( )		2674485	0					
ANR	2674964	Callee	Suicide		2674485	0					
ANR	2674965	Identifier	Suicide		2674485	0					
ANR	2674966	ArgumentList			2674485	1					
ANR	2674967	IfStatement	"if ( SYSCALL ( SYS_close , zfd ) < 0 )"		2674485	9					
ANR	2674968	Condition	"SYSCALL ( SYS_close , zfd ) < 0"	1509:6:42878:42904	2674485	0	True				
ANR	2674969	RelationalExpression	"SYSCALL ( SYS_close , zfd ) < 0"		2674485	0		<			
ANR	2674970	CallExpression	"SYSCALL ( SYS_close , zfd )"		2674485	0					
ANR	2674971	Callee	SYSCALL		2674485	0					
ANR	2674972	Identifier	SYSCALL		2674485	0					
ANR	2674973	ArgumentList	SYS_close		2674485	1					
ANR	2674974	Argument	SYS_close		2674485	0					
ANR	2674975	Identifier	SYS_close		2674485	0					
ANR	2674976	Argument	zfd		2674485	1					
ANR	2674977	Identifier	zfd		2674485	0					
ANR	2674978	PrimaryExpression	0		2674485	1					
ANR	2674979	CompoundStatement		123:35:4341:4341	2674485	1					
ANR	2674980	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to close /dev/zero file descriptor.\\n"" )"	1510:3:42912:42985	2674485	0	True				
ANR	2674981	CallExpression	"dprintf ( D_ALWAYS , ""Unable to close /dev/zero file descriptor.\\n"" )"		2674485	0					
ANR	2674982	Callee	dprintf		2674485	0					
ANR	2674983	Identifier	dprintf		2674485	0					
ANR	2674984	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674985	Argument	D_ALWAYS		2674485	0					
ANR	2674986	Identifier	D_ALWAYS		2674485	0					
ANR	2674987	Argument	"""Unable to close /dev/zero file descriptor.\\n"""		2674485	1					
ANR	2674988	PrimaryExpression	"""Unable to close /dev/zero file descriptor.\\n"""		2674485	0					
ANR	2674989	ExpressionStatement	"dprintf ( D_ALWAYS , ""close: %s\\n"" , strerror ( errno ) )"	1512:3:42990:43040	2674485	1	True				
ANR	2674990	CallExpression	"dprintf ( D_ALWAYS , ""close: %s\\n"" , strerror ( errno ) )"		2674485	0					
ANR	2674991	Callee	dprintf		2674485	0					
ANR	2674992	Identifier	dprintf		2674485	0					
ANR	2674993	ArgumentList	D_ALWAYS		2674485	1					
ANR	2674994	Argument	D_ALWAYS		2674485	0					
ANR	2674995	Identifier	D_ALWAYS		2674485	0					
ANR	2674996	Argument	"""close: %s\\n"""		2674485	1					
ANR	2674997	PrimaryExpression	"""close: %s\\n"""		2674485	0					
ANR	2674998	Argument	strerror ( errno )		2674485	2					
ANR	2674999	CallExpression	strerror ( errno )		2674485	0					
ANR	2675000	Callee	strerror		2674485	0					
ANR	2675001	Identifier	strerror		2674485	0					
ANR	2675002	ArgumentList	errno		2674485	1					
ANR	2675003	Argument	errno		2674485	0					
ANR	2675004	Identifier	errno		2674485	0					
ANR	2675005	ExpressionStatement	Suicide ( )	1513:3:43045:43054	2674485	2	True				
ANR	2675006	CallExpression	Suicide ( )		2674485	0					
ANR	2675007	Callee	Suicide		2674485	0					
ANR	2675008	Identifier	Suicide		2674485	0					
ANR	2675009	ArgumentList			2674485	1					
ANR	2675010	ExpressionStatement	bytes_to_go = saved_len	1524:1:43405:43428	2674485	11	True				
ANR	2675011	AssignmentExpression	bytes_to_go = saved_len		2674485	0		=			
ANR	2675012	Identifier	bytes_to_go		2674485	0					
ANR	2675013	Identifier	saved_len		2674485	1					
ANR	2675014	ExpressionStatement	ptr = ( char * ) saved_core_loc	1525:1:43431:43459	2674485	12	True				
ANR	2675015	AssignmentExpression	ptr = ( char * ) saved_core_loc		2674485	0		=			
ANR	2675016	Identifier	ptr		2674485	0					
ANR	2675017	CastExpression	( char * ) saved_core_loc		2674485	1					
ANR	2675018	CastTarget	char *		2674485	0					
ANR	2675019	Identifier	saved_core_loc		2674485	1					
ANR	2675020	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to overwrite %d bytes starting at 0x%p(%s)\\n"" , bytes_to_go , ptr , name )"	1527:1:43463:43565	2674485	13	True				
ANR	2675021	CallExpression	"dprintf ( D_ALWAYS , ""About to overwrite %d bytes starting at 0x%p(%s)\\n"" , bytes_to_go , ptr , name )"		2674485	0					
ANR	2675022	Callee	dprintf		2674485	0					
ANR	2675023	Identifier	dprintf		2674485	0					
ANR	2675024	ArgumentList	D_ALWAYS		2674485	1					
ANR	2675025	Argument	D_ALWAYS		2674485	0					
ANR	2675026	Identifier	D_ALWAYS		2674485	0					
ANR	2675027	Argument	"""About to overwrite %d bytes starting at 0x%p(%s)\\n"""		2674485	1					
ANR	2675028	PrimaryExpression	"""About to overwrite %d bytes starting at 0x%p(%s)\\n"""		2674485	0					
ANR	2675029	Argument	bytes_to_go		2674485	2					
ANR	2675030	Identifier	bytes_to_go		2674485	0					
ANR	2675031	Argument	ptr		2674485	3					
ANR	2675032	Identifier	ptr		2674485	0					
ANR	2675033	Argument	name		2674485	4					
ANR	2675034	Identifier	name		2674485	0					
ANR	2675035	IfStatement	if ( zstr )		2674485	14					
ANR	2675036	Condition	zstr	1532:5:43600:43603	2674485	0	True				
ANR	2675037	Identifier	zstr		2674485	0					
ANR	2675038	CompoundStatement		148:2:5086:5118	2674485	1					
ANR	2675039	IdentifierDeclStatement	z_stream * saved_zstr = zstr ;	1533:13:43621:43648	2674485	0	True				
ANR	2675040	IdentifierDecl	* saved_zstr = zstr		2674485	0					
ANR	2675041	IdentifierDeclType	z_stream *		2674485	0					
ANR	2675042	Identifier	saved_zstr		2674485	1					
ANR	2675043	AssignmentExpression	* saved_zstr = zstr		2674485	2		=			
ANR	2675044	Identifier	zstr		2674485	0					
ANR	2675045	Identifier	zstr		2674485	1					
ANR	2675046	IdentifierDeclStatement	unsigned char * saved_zbuf = zbuf ;	1534:2:43652:43684	2674485	1	True				
ANR	2675047	IdentifierDecl	* saved_zbuf = zbuf		2674485	0					
ANR	2675048	IdentifierDeclType	unsigned char *		2674485	0					
ANR	2675049	Identifier	saved_zbuf		2674485	1					
ANR	2675050	AssignmentExpression	* saved_zbuf = zbuf		2674485	2		=			
ANR	2675051	Identifier	zbuf		2674485	0					
ANR	2675052	Identifier	zbuf		2674485	1					
ANR	2675053	ExpressionStatement	saved_zstr -> next_out = ( unsigned char * ) saved_core_loc	1535:2:43688:43742	2674485	2	True				
ANR	2675054	AssignmentExpression	saved_zstr -> next_out = ( unsigned char * ) saved_core_loc		2674485	0		=			
ANR	2675055	PtrMemberAccess	saved_zstr -> next_out		2674485	0					
ANR	2675056	Identifier	saved_zstr		2674485	0					
ANR	2675057	Identifier	next_out		2674485	1					
ANR	2675058	CastExpression	( unsigned char * ) saved_core_loc		2674485	1					
ANR	2675059	CastTarget	unsigned char *		2674485	0					
ANR	2675060	Identifier	saved_core_loc		2674485	1					
ANR	2675061	ExpressionStatement	saved_zstr -> avail_out = saved_len	1536:2:43746:43779	2674485	3	True				
ANR	2675062	AssignmentExpression	saved_zstr -> avail_out = saved_len		2674485	0		=			
ANR	2675063	PtrMemberAccess	saved_zstr -> avail_out		2674485	0					
ANR	2675064	Identifier	saved_zstr		2674485	0					
ANR	2675065	Identifier	avail_out		2674485	1					
ANR	2675066	Identifier	saved_len		2674485	1					
ANR	2675067	WhileStatement	while ( saved_zstr -> avail_out > 0 )		2674485	4					
ANR	2675068	Condition	saved_zstr -> avail_out > 0	1537:9:43790:43814	2674485	0	True				
ANR	2675069	RelationalExpression	saved_zstr -> avail_out > 0		2674485	0		>			
ANR	2675070	PtrMemberAccess	saved_zstr -> avail_out		2674485	0					
ANR	2675071	Identifier	saved_zstr		2674485	0					
ANR	2675072	Identifier	avail_out		2674485	1					
ANR	2675073	PrimaryExpression	0		2674485	1					
ANR	2675074	CompoundStatement		151:36:5251:5251	2674485	1					
ANR	2675075	IfStatement	if ( saved_zstr -> avail_in < 32 )		2674485	0					
ANR	2675076	Condition	saved_zstr -> avail_in < 32	1539:7:43865:43889	2674485	0	True				
ANR	2675077	RelationalExpression	saved_zstr -> avail_in < 32		2674485	0		<			
ANR	2675078	PtrMemberAccess	saved_zstr -> avail_in		2674485	0					
ANR	2675079	Identifier	saved_zstr		2674485	0					
ANR	2675080	Identifier	avail_in		2674485	1					
ANR	2675081	PrimaryExpression	32		2674485	1					
ANR	2675082	CompoundStatement		153:34:5326:5326	2674485	1					
ANR	2675083	IfStatement	if ( saved_zstr -> avail_in > 0 )		2674485	0					
ANR	2675084	Condition	saved_zstr -> avail_in > 0	1540:8:43902:43925	2674485	0	True				
ANR	2675085	RelationalExpression	saved_zstr -> avail_in > 0		2674485	0		>			
ANR	2675086	PtrMemberAccess	saved_zstr -> avail_in		2674485	0					
ANR	2675087	Identifier	saved_zstr		2674485	0					
ANR	2675088	Identifier	avail_in		2674485	1					
ANR	2675089	PrimaryExpression	0		2674485	1					
ANR	2675090	CompoundStatement		154:34:5362:5362	2674485	1					
ANR	2675091	ExpressionStatement	"memcpy ( saved_zbuf , saved_zstr -> next_in , saved_zstr -> avail_in )"	1541:5:43935:44005	2674485	0	True				
ANR	2675092	CallExpression	"memcpy ( saved_zbuf , saved_zstr -> next_in , saved_zstr -> avail_in )"		2674485	0					
ANR	2675093	Callee	memcpy		2674485	0					
ANR	2675094	Identifier	memcpy		2674485	0					
ANR	2675095	ArgumentList	saved_zbuf		2674485	1					
ANR	2675096	Argument	saved_zbuf		2674485	0					
ANR	2675097	Identifier	saved_zbuf		2674485	0					
ANR	2675098	Argument	saved_zstr -> next_in		2674485	1					
ANR	2675099	PtrMemberAccess	saved_zstr -> next_in		2674485	0					
ANR	2675100	Identifier	saved_zstr		2674485	0					
ANR	2675101	Identifier	next_in		2674485	1					
ANR	2675102	Argument	saved_zstr -> avail_in		2674485	2					
ANR	2675103	PtrMemberAccess	saved_zstr -> avail_in		2674485	0					
ANR	2675104	Identifier	saved_zstr		2674485	0					
ANR	2675105	Identifier	avail_in		2674485	1					
ANR	2675106	ExpressionStatement	"nbytes = SYSCALL ( SYS_read , fd , saved_zbuf + saved_zstr -> avail_in , zbufsize - saved_zstr -> avail_in )"	1544:4:44017:44129	2674485	1	True				
ANR	2675107	AssignmentExpression	"nbytes = SYSCALL ( SYS_read , fd , saved_zbuf + saved_zstr -> avail_in , zbufsize - saved_zstr -> avail_in )"		2674485	0		=			
ANR	2675108	Identifier	nbytes		2674485	0					
ANR	2675109	CallExpression	"SYSCALL ( SYS_read , fd , saved_zbuf + saved_zstr -> avail_in , zbufsize - saved_zstr -> avail_in )"		2674485	1					
ANR	2675110	Callee	SYSCALL		2674485	0					
ANR	2675111	Identifier	SYSCALL		2674485	0					
ANR	2675112	ArgumentList	SYS_read		2674485	1					
ANR	2675113	Argument	SYS_read		2674485	0					
ANR	2675114	Identifier	SYS_read		2674485	0					
ANR	2675115	Argument	fd		2674485	1					
ANR	2675116	Identifier	fd		2674485	0					
ANR	2675117	Argument	saved_zbuf + saved_zstr -> avail_in		2674485	2					
ANR	2675118	AdditiveExpression	saved_zbuf + saved_zstr -> avail_in		2674485	0		+			
ANR	2675119	Identifier	saved_zbuf		2674485	0					
ANR	2675120	PtrMemberAccess	saved_zstr -> avail_in		2674485	1					
ANR	2675121	Identifier	saved_zstr		2674485	0					
ANR	2675122	Identifier	avail_in		2674485	1					
ANR	2675123	Argument	zbufsize - saved_zstr -> avail_in		2674485	3					
ANR	2675124	AdditiveExpression	zbufsize - saved_zstr -> avail_in		2674485	0		-			
ANR	2675125	Identifier	zbufsize		2674485	0					
ANR	2675126	PtrMemberAccess	saved_zstr -> avail_in		2674485	1					
ANR	2675127	Identifier	saved_zstr		2674485	0					
ANR	2675128	Identifier	avail_in		2674485	1					
ANR	2675129	IfStatement	if ( nbytes > 0 )		2674485	2					
ANR	2675130	Condition	nbytes > 0	1547:8:44139:44148	2674485	0	True				
ANR	2675131	RelationalExpression	nbytes > 0		2674485	0		>			
ANR	2675132	Identifier	nbytes		2674485	0					
ANR	2675133	PrimaryExpression	0		2674485	1					
ANR	2675134	CompoundStatement		161:20:5585:5585	2674485	1					
ANR	2675135	ExpressionStatement	saved_zstr -> avail_in += nbytes	1548:5:44158:44188	2674485	0	True				
ANR	2675136	AssignmentExpression	saved_zstr -> avail_in += nbytes		2674485	0		+=			
ANR	2675137	PtrMemberAccess	saved_zstr -> avail_in		2674485	0					
ANR	2675138	Identifier	saved_zstr		2674485	0					
ANR	2675139	Identifier	avail_in		2674485	1					
ANR	2675140	Identifier	nbytes		2674485	1					
ANR	2675141	ExpressionStatement	saved_zstr -> next_in = saved_zbuf	1550:4:44200:44232	2674485	3	True				
ANR	2675142	AssignmentExpression	saved_zstr -> next_in = saved_zbuf		2674485	0		=			
ANR	2675143	PtrMemberAccess	saved_zstr -> next_in		2674485	0					
ANR	2675144	Identifier	saved_zstr		2674485	0					
ANR	2675145	Identifier	next_in		2674485	1					
ANR	2675146	Identifier	saved_zbuf		2674485	1					
ANR	2675147	IfStatement	"if ( inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK && saved_zstr -> avail_out > 0 )"		2674485	1					
ANR	2675148	Condition	"inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK && saved_zstr -> avail_out > 0"	1552:7:44246:44322	2674485	0	True				
ANR	2675149	AndExpression	"inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK && saved_zstr -> avail_out > 0"		2674485	0		&&			
ANR	2675150	EqualityExpression	"inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK"		2674485	0		!=			
ANR	2675151	CallExpression	"inflate ( saved_zstr , Z_PARTIAL_FLUSH )"		2674485	0					
ANR	2675152	Callee	inflate		2674485	0					
ANR	2675153	Identifier	inflate		2674485	0					
ANR	2675154	ArgumentList	saved_zstr		2674485	1					
ANR	2675155	Argument	saved_zstr		2674485	0					
ANR	2675156	Identifier	saved_zstr		2674485	0					
ANR	2675157	Argument	Z_PARTIAL_FLUSH		2674485	1					
ANR	2675158	Identifier	Z_PARTIAL_FLUSH		2674485	0					
ANR	2675159	Identifier	Z_OK		2674485	1					
ANR	2675160	RelationalExpression	saved_zstr -> avail_out > 0		2674485	1		>			
ANR	2675161	PtrMemberAccess	saved_zstr -> avail_out		2674485	0					
ANR	2675162	Identifier	saved_zstr		2674485	0					
ANR	2675163	Identifier	avail_out		2674485	1					
ANR	2675164	PrimaryExpression	0		2674485	1					
ANR	2675165	CompoundStatement		167:31:5759:5759	2674485	1					
ANR	2675166	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (inflate): %s\\n"" , saved_zstr -> msg )"	1554:4:44331:44391	2674485	0	True				
ANR	2675167	CallExpression	"dprintf ( D_ALWAYS , ""zlib (inflate): %s\\n"" , saved_zstr -> msg )"		2674485	0					
ANR	2675168	Callee	dprintf		2674485	0					
ANR	2675169	Identifier	dprintf		2674485	0					
ANR	2675170	ArgumentList	D_ALWAYS		2674485	1					
ANR	2675171	Argument	D_ALWAYS		2674485	0					
ANR	2675172	Identifier	D_ALWAYS		2674485	0					
ANR	2675173	Argument	"""zlib (inflate): %s\\n"""		2674485	1					
ANR	2675174	PrimaryExpression	"""zlib (inflate): %s\\n"""		2674485	0					
ANR	2675175	Argument	saved_zstr -> msg		2674485	2					
ANR	2675176	PtrMemberAccess	saved_zstr -> msg		2674485	0					
ANR	2675177	Identifier	saved_zstr		2674485	0					
ANR	2675178	Identifier	msg		2674485	1					
ANR	2675179	ExpressionStatement	Suicide ( )	1555:4:44397:44406	2674485	1	True				
ANR	2675180	CallExpression	Suicide ( )		2674485	0					
ANR	2675181	Callee	Suicide		2674485	0					
ANR	2675182	Identifier	Suicide		2674485	0					
ANR	2675183	ArgumentList			2674485	1					
ANR	2675184	ExpressionStatement	zstr = saved_zstr	1558:2:44419:44436	2674485	5	True				
ANR	2675185	AssignmentExpression	zstr = saved_zstr		2674485	0		=			
ANR	2675186	Identifier	zstr		2674485	0					
ANR	2675187	Identifier	saved_zstr		2674485	1					
ANR	2675188	ExpressionStatement	zbuf = saved_zbuf	1559:2:44440:44457	2674485	6	True				
ANR	2675189	AssignmentExpression	zbuf = saved_zbuf		2674485	0		=			
ANR	2675190	Identifier	zbuf		2674485	0					
ANR	2675191	Identifier	saved_zbuf		2674485	1					
ANR	2675192	ReturnStatement	return pos + saved_len ;	1560:2:44461:44483	2674485	7	True				
ANR	2675193	AdditiveExpression	pos + saved_len		2674485	0		+			
ANR	2675194	Identifier	pos		2674485	0					
ANR	2675195	Identifier	saved_len		2674485	1					
ANR	2675196	WhileStatement	while ( bytes_to_go )		2674485	15					
ANR	2675197	Condition	bytes_to_go	1564:8:44504:44514	2674485	0	True				
ANR	2675198	Identifier	bytes_to_go		2674485	0					
ANR	2675199	CompoundStatement		178:22:5952:5952	2674485	1					
ANR	2675200	ExpressionStatement	read_size = bytes_to_go > 65536 ? 65536 : bytes_to_go	1565:2:44522:44575	2674485	0	True				
ANR	2675201	AssignmentExpression	read_size = bytes_to_go > 65536 ? 65536 : bytes_to_go		2674485	0		=			
ANR	2675202	Identifier	read_size		2674485	0					
ANR	2675203	ConditionalExpression	bytes_to_go > 65536 ? 65536 : bytes_to_go		2674485	1					
ANR	2675204	Condition	bytes_to_go > 65536		2674485	0					
ANR	2675205	RelationalExpression	bytes_to_go > 65536		2674485	0		>			
ANR	2675206	Identifier	bytes_to_go		2674485	0					
ANR	2675207	PrimaryExpression	65536		2674485	1					
ANR	2675208	PrimaryExpression	65536		2674485	1					
ANR	2675209	Identifier	bytes_to_go		2674485	2					
ANR	2675210	ExpressionStatement	"nbytes = SYSCALL ( SYS_read , fd , ( void * ) ptr , read_size )"	1567:2:44614:44670	2674485	1	True				
ANR	2675211	AssignmentExpression	"nbytes = SYSCALL ( SYS_read , fd , ( void * ) ptr , read_size )"		2674485	0		=			
ANR	2675212	Identifier	nbytes		2674485	0					
ANR	2675213	CallExpression	"SYSCALL ( SYS_read , fd , ( void * ) ptr , read_size )"		2674485	1					
ANR	2675214	Callee	SYSCALL		2674485	0					
ANR	2675215	Identifier	SYSCALL		2674485	0					
ANR	2675216	ArgumentList	SYS_read		2674485	1					
ANR	2675217	Argument	SYS_read		2674485	0					
ANR	2675218	Identifier	SYS_read		2674485	0					
ANR	2675219	Argument	fd		2674485	1					
ANR	2675220	Identifier	fd		2674485	0					
ANR	2675221	Argument	( void * ) ptr		2674485	2					
ANR	2675222	CastExpression	( void * ) ptr		2674485	0					
ANR	2675223	CastTarget	void *		2674485	0					
ANR	2675224	Identifier	ptr		2674485	1					
ANR	2675225	Argument	read_size		2674485	3					
ANR	2675226	Identifier	read_size		2674485	0					
ANR	2675227	IfStatement	if ( nbytes <= 0 )		2674485	2					
ANR	2675228	Condition	nbytes <= 0	1571:6:44752:44762	2674485	0	True				
ANR	2675229	RelationalExpression	nbytes <= 0		2674485	0		<=			
ANR	2675230	Identifier	nbytes		2674485	0					
ANR	2675231	PrimaryExpression	0		2674485	1					
ANR	2675232	CompoundStatement		185:20:6200:6200	2674485	1					
ANR	2675233	ExpressionStatement	"dprintf ( D_ALWAYS , ""in Segmap::Read(): fd = %d, read_size=%d\\n"" , fd , read_size )"	1572:3:44771:44853	2674485	0	True				
ANR	2675234	CallExpression	"dprintf ( D_ALWAYS , ""in Segmap::Read(): fd = %d, read_size=%d\\n"" , fd , read_size )"		2674485	0					
ANR	2675235	Callee	dprintf		2674485	0					
ANR	2675236	Identifier	dprintf		2674485	0					
ANR	2675237	ArgumentList	D_ALWAYS		2674485	1					
ANR	2675238	Argument	D_ALWAYS		2674485	0					
ANR	2675239	Identifier	D_ALWAYS		2674485	0					
ANR	2675240	Argument	"""in Segmap::Read(): fd = %d, read_size=%d\\n"""		2674485	1					
ANR	2675241	PrimaryExpression	"""in Segmap::Read(): fd = %d, read_size=%d\\n"""		2674485	0					
ANR	2675242	Argument	fd		2674485	2					
ANR	2675243	Identifier	fd		2674485	0					
ANR	2675244	Argument	read_size		2674485	3					
ANR	2675245	Identifier	read_size		2674485	0					
ANR	2675246	ExpressionStatement	"dprintf ( D_ALWAYS , ""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"" , ( unsigned long ) core_loc , nbytes , errno , strerror ( errno ) )"	1574:3:44858:44979	2674485	1	True				
ANR	2675247	CallExpression	"dprintf ( D_ALWAYS , ""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"" , ( unsigned long ) core_loc , nbytes , errno , strerror ( errno ) )"		2674485	0					
ANR	2675248	Callee	dprintf		2674485	0					
ANR	2675249	Identifier	dprintf		2674485	0					
ANR	2675250	ArgumentList	D_ALWAYS		2674485	1					
ANR	2675251	Argument	D_ALWAYS		2674485	0					
ANR	2675252	Identifier	D_ALWAYS		2674485	0					
ANR	2675253	Argument	"""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"""		2674485	1					
ANR	2675254	PrimaryExpression	"""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"""		2674485	0					
ANR	2675255	Argument	( unsigned long ) core_loc		2674485	2					
ANR	2675256	CastExpression	( unsigned long ) core_loc		2674485	0					
ANR	2675257	CastTarget	unsigned long		2674485	0					
ANR	2675258	Identifier	core_loc		2674485	1					
ANR	2675259	Argument	nbytes		2674485	3					
ANR	2675260	Identifier	nbytes		2674485	0					
ANR	2675261	Argument	errno		2674485	4					
ANR	2675262	Identifier	errno		2674485	0					
ANR	2675263	Argument	strerror ( errno )		2674485	5					
ANR	2675264	CallExpression	strerror ( errno )		2674485	0					
ANR	2675265	Callee	strerror		2674485	0					
ANR	2675266	Identifier	strerror		2674485	0					
ANR	2675267	ArgumentList	errno		2674485	1					
ANR	2675268	Argument	errno		2674485	0					
ANR	2675269	Identifier	errno		2674485	0					
ANR	2675270	ReturnStatement	return - 1 ;	1576:3:44984:44993	2674485	2	True				
ANR	2675271	UnaryOperationExpression	- 1		2674485	0					
ANR	2675272	UnaryOperator	-		2674485	0					
ANR	2675273	PrimaryExpression	1		2674485	1					
ANR	2675274	ExpressionStatement	bytes_to_go -= nbytes	1578:2:45001:45022	2674485	3	True				
ANR	2675275	AssignmentExpression	bytes_to_go -= nbytes		2674485	0		-=			
ANR	2675276	Identifier	bytes_to_go		2674485	0					
ANR	2675277	Identifier	nbytes		2674485	1					
ANR	2675278	ExpressionStatement	ptr += nbytes	1579:2:45026:45039	2674485	4	True				
ANR	2675279	AssignmentExpression	ptr += nbytes		2674485	0		+=			
ANR	2675280	Identifier	ptr		2674485	0					
ANR	2675281	Identifier	nbytes		2674485	1					
ANR	2675282	ReturnStatement	return pos + len ;	1582:1:45046:45062	2674485	16	True				
ANR	2675283	AdditiveExpression	pos + len		2674485	0		+			
ANR	2675284	Identifier	pos		2674485	0					
ANR	2675285	Identifier	len		2674485	1					
ANR	2675286	ReturnType	ssize_t		2674485	1					
ANR	2675287	Identifier	SegMap :: Read		2674485	2					
ANR	2675288	ParameterList	"int fd , ssize_t pos"		2674485	3					
ANR	2675289	Parameter	int fd	1386:14:38543:38548	2674485	0	True				
ANR	2675290	ParameterType	int		2674485	0					
ANR	2675291	Identifier	fd		2674485	1					
ANR	2675292	Parameter	ssize_t pos	1386:22:38551:38561	2674485	1	True				
ANR	2675293	ParameterType	ssize_t		2674485	0					
ANR	2675294	Identifier	pos		2674485	1					
ANR	2675295	CFGEntryNode	ENTRY		2674485		True				
ANR	2675296	CFGExitNode	EXIT		2674485		True				
ANR	2675297	Symbol	SYS_open		2674485						
ANR	2675298	Symbol	zbuf		2674485						
ANR	2675299	Symbol	saved_zstr -> msg		2674485						
ANR	2675300	Symbol	SYS_close		2674485						
ANR	2675301	Symbol	saved_zstr		2674485						
ANR	2675302	Symbol	saved_zstr -> next_in		2674485						
ANR	2675303	Symbol	core_loc		2674485						
ANR	2675304	Symbol	MAP_PRIVATE		2674485						
ANR	2675305	Symbol	UINT_MAX		2674485						
ANR	2675306	Symbol	len		2674485						
ANR	2675307	Symbol	PROT_WRITE		2674485						
ANR	2675308	Symbol	Z_PARTIAL_FLUSH		2674485						
ANR	2675309	Symbol	errno		2674485						
ANR	2675310	Symbol	mystrcmp		2674485						
ANR	2675311	Symbol	PROT_EXEC		2674485						
ANR	2675312	Symbol	PROT_READ		2674485						
ANR	2675313	Symbol	read_size		2674485						
ANR	2675314	Symbol	orig_brk		2674485						
ANR	2675315	Symbol	strerror		2674485						
ANR	2675316	Symbol	saved_zstr -> avail_out		2674485						
ANR	2675317	Symbol	page_mask		2674485						
ANR	2675318	Symbol	name		2674485						
ANR	2675319	Symbol	zfd		2674485						
ANR	2675320	Symbol	* saved_zstr		2674485						
ANR	2675321	Symbol	fd		2674485						
ANR	2675322	Symbol	SYSCALL		2674485						
ANR	2675323	Symbol	cur_brk		2674485						
ANR	2675324	Symbol	lastPage		2674485						
ANR	2675325	Symbol	Z_OK		2674485						
ANR	2675326	Symbol	MAP_FAILED		2674485						
ANR	2675327	Symbol	zstr		2674485						
ANR	2675328	Symbol	file_loc		2674485						
ANR	2675329	Symbol	SYS_mprotect		2674485						
ANR	2675330	Symbol	O_RDWR		2674485						
ANR	2675331	Symbol	prot		2674485						
ANR	2675332	Symbol	pos		2674485						
ANR	2675333	Symbol	saved_zbuf		2674485						
ANR	2675334	Symbol	align_offset		2674485						
ANR	2675335	Symbol	saved_zstr -> next_out		2674485						
ANR	2675336	Symbol	zbufsize		2674485						
ANR	2675337	Symbol	segLoc		2674485						
ANR	2675338	Symbol	MAP_FIXED		2674485						
ANR	2675339	Symbol	GETPAGESIZE		2674485						
ANR	2675340	Symbol	bytes_to_go		2674485						
ANR	2675341	Symbol	D_CKPT		2674485						
ANR	2675342	Symbol	D_ALWAYS		2674485						
ANR	2675343	Symbol	saved_len		2674485						
ANR	2675344	Symbol	MMAP		2674485						
ANR	2675345	Symbol	segSize		2674485						
ANR	2675346	Symbol	nbytes		2674485						
ANR	2675347	Symbol	ptr		2674485						
ANR	2675348	Symbol	saved_zstr -> avail_in		2674485						
ANR	2675349	Symbol	inflate		2674485						
ANR	2675350	Symbol	SYS_read		2674485						
ANR	2675351	Symbol	saved_core_loc		2674485						
ANR	2675352	Symbol	sbrk		2674485						
ANR	2675353	Function	SegMap :: Write	1585:0:45067:47474							
ANR	2675354	FunctionDef	"SegMap :: Write (int fd , ssize_t pos)"		2675353	0					
ANR	2675355	CompoundStatement		1587:0:45112:47474	2675353	0					
ANR	2675356	IfStatement	if ( pos != file_loc )		2675353	0					
ANR	2675357	Condition	pos != file_loc	1588:5:45119:45133	2675353	0	True				
ANR	2675358	EqualityExpression	pos != file_loc		2675353	0		!=			
ANR	2675359	Identifier	pos		2675353	0					
ANR	2675360	Identifier	file_loc		2675353	1					
ANR	2675361	CompoundStatement		2:23:24:24	2675353	1					
ANR	2675362	IfStatement	if ( pos > UINT_MAX )		2675353	0					
ANR	2675363	Condition	pos > UINT_MAX	1591:6:45270:45283	2675353	0	True				
ANR	2675364	RelationalExpression	pos > UINT_MAX		2675353	0		>			
ANR	2675365	Identifier	pos		2675353	0					
ANR	2675366	Identifier	UINT_MAX		2675353	1					
ANR	2675367	CompoundStatement		5:22:173:173	2675353	1					
ANR	2675368	Statement	dprintf	1592:3:45291:45297	2675353	0	True				
ANR	2675369	Statement	(	1592:10:45298:45298	2675353	1	True				
ANR	2675370	Statement	D_ALWAYS	1592:12:45300:45307	2675353	2	True				
ANR	2675371	Statement	","	1592:20:45308:45308	2675353	3	True				
ANR	2675372	Statement	"""Checkpoint sequence error at a position """	1592:22:45310:45351	2675353	4	True				
ANR	2675373	Statement	"""greater than UINT_MAX. Sorry.\\n"""	1593:4:45357:45389	2675353	5	True				
ANR	2675374	Statement	)	1593:37:45390:45390	2675353	6	True				
ANR	2675375	ExpressionStatement		1593:38:45391:45391	2675353	7	True				
ANR	2675376	ElseStatement	else		2675353	0					
ANR	2675377	CompoundStatement		8:9:289:289	2675353	0					
ANR	2675378	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"	1595:3:45407:45502	2675353	0	True				
ANR	2675379	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"		2675353	0					
ANR	2675380	Callee	dprintf		2675353	0					
ANR	2675381	Identifier	dprintf		2675353	0					
ANR	2675382	ArgumentList	D_ALWAYS		2675353	1					
ANR	2675383	Argument	D_ALWAYS		2675353	0					
ANR	2675384	Identifier	D_ALWAYS		2675353	0					
ANR	2675385	Argument	"""Checkpoint sequence error (%d != %u)\\n"""		2675353	1					
ANR	2675386	PrimaryExpression	"""Checkpoint sequence error (%d != %u)\\n"""		2675353	0					
ANR	2675387	Argument	pos		2675353	2					
ANR	2675388	Identifier	pos		2675353	0					
ANR	2675389	Argument	( unsigned int ) file_loc		2675353	3					
ANR	2675390	CastExpression	( unsigned int ) file_loc		2675353	0					
ANR	2675391	CastTarget	unsigned int		2675353	0					
ANR	2675392	Identifier	file_loc		2675353	1					
ANR	2675393	ExpressionStatement	Suicide ( )	1598:2:45510:45519	2675353	1	True				
ANR	2675394	CallExpression	Suicide ( )		2675353	0					
ANR	2675395	Callee	Suicide		2675353	0					
ANR	2675396	Identifier	Suicide		2675353	0					
ANR	2675397	ArgumentList			2675353	1					
ANR	2675398	IfStatement	if ( condor_compress_ckpt )		2675353	1					
ANR	2675399	Condition	condor_compress_ckpt	1601:5:45556:45575	2675353	0	True				
ANR	2675400	Identifier	condor_compress_ckpt		2675353	0					
ANR	2675401	CompoundStatement		17:2:508:526	2675353	1					
ANR	2675402	IdentifierDeclStatement	"int bytes_to_go , rval , old_avail_in ;"	1602:2:45582:45617	2675353	0	True				
ANR	2675403	IdentifierDecl	bytes_to_go		2675353	0					
ANR	2675404	IdentifierDeclType	int		2675353	0					
ANR	2675405	Identifier	bytes_to_go		2675353	1					
ANR	2675406	IdentifierDecl	rval		2675353	1					
ANR	2675407	IdentifierDeclType	int		2675353	0					
ANR	2675408	Identifier	rval		2675353	1					
ANR	2675409	IdentifierDecl	old_avail_in		2675353	2					
ANR	2675410	IdentifierDeclType	int		2675353	0					
ANR	2675411	Identifier	old_avail_in		2675353	1					
ANR	2675412	IdentifierDeclStatement	unsigned char * ptr ;	1603:2:45621:45639	2675353	1	True				
ANR	2675413	IdentifierDecl	* ptr		2675353	0					
ANR	2675414	IdentifierDeclType	unsigned char *		2675353	0					
ANR	2675415	Identifier	ptr		2675353	1					
ANR	2675416	ExpressionStatement	zstr -> next_in = ( unsigned char * ) core_loc	1605:2:45644:45685	2675353	2	True				
ANR	2675417	AssignmentExpression	zstr -> next_in = ( unsigned char * ) core_loc		2675353	0		=			
ANR	2675418	PtrMemberAccess	zstr -> next_in		2675353	0					
ANR	2675419	Identifier	zstr		2675353	0					
ANR	2675420	Identifier	next_in		2675353	1					
ANR	2675421	CastExpression	( unsigned char * ) core_loc		2675353	1					
ANR	2675422	CastTarget	unsigned char *		2675353	0					
ANR	2675423	Identifier	core_loc		2675353	1					
ANR	2675424	ExpressionStatement	zstr -> avail_in = len	1606:2:45689:45709	2675353	3	True				
ANR	2675425	AssignmentExpression	zstr -> avail_in = len		2675353	0		=			
ANR	2675426	PtrMemberAccess	zstr -> avail_in		2675353	0					
ANR	2675427	Identifier	zstr		2675353	0					
ANR	2675428	Identifier	avail_in		2675353	1					
ANR	2675429	Identifier	len		2675353	1					
ANR	2675430	WhileStatement	while ( zstr -> avail_in > 0 )		2675353	4					
ANR	2675431	Condition	zstr -> avail_in > 0	1607:9:45720:45737	2675353	0	True				
ANR	2675432	RelationalExpression	zstr -> avail_in > 0		2675353	0		>			
ANR	2675433	PtrMemberAccess	zstr -> avail_in		2675353	0					
ANR	2675434	Identifier	zstr		2675353	0					
ANR	2675435	Identifier	avail_in		2675353	1					
ANR	2675436	PrimaryExpression	0		2675353	1					
ANR	2675437	CompoundStatement		21:29:627:627	2675353	1					
ANR	2675438	ExpressionStatement	zstr -> next_out = zbuf	1608:3:45745:45766	2675353	0	True				
ANR	2675439	AssignmentExpression	zstr -> next_out = zbuf		2675353	0		=			
ANR	2675440	PtrMemberAccess	zstr -> next_out		2675353	0					
ANR	2675441	Identifier	zstr		2675353	0					
ANR	2675442	Identifier	next_out		2675353	1					
ANR	2675443	Identifier	zbuf		2675353	1					
ANR	2675444	ExpressionStatement	zstr -> avail_out = zbufsize	1609:3:45771:45797	2675353	1	True				
ANR	2675445	AssignmentExpression	zstr -> avail_out = zbufsize		2675353	0		=			
ANR	2675446	PtrMemberAccess	zstr -> avail_out		2675353	0					
ANR	2675447	Identifier	zstr		2675353	0					
ANR	2675448	Identifier	avail_out		2675353	1					
ANR	2675449	Identifier	zbufsize		2675353	1					
ANR	2675450	ExpressionStatement	old_avail_in = zstr -> avail_in	1610:3:45802:45831	2675353	2	True				
ANR	2675451	AssignmentExpression	old_avail_in = zstr -> avail_in		2675353	0		=			
ANR	2675452	Identifier	old_avail_in		2675353	0					
ANR	2675453	PtrMemberAccess	zstr -> avail_in		2675353	1					
ANR	2675454	Identifier	zstr		2675353	0					
ANR	2675455	Identifier	avail_in		2675353	1					
ANR	2675456	IfStatement	"if ( deflate ( zstr , Z_PARTIAL_FLUSH ) != Z_OK )"		2675353	3					
ANR	2675457	Condition	"deflate ( zstr , Z_PARTIAL_FLUSH ) != Z_OK"	1611:7:45840:45877	2675353	0	True				
ANR	2675458	EqualityExpression	"deflate ( zstr , Z_PARTIAL_FLUSH ) != Z_OK"		2675353	0		!=			
ANR	2675459	CallExpression	"deflate ( zstr , Z_PARTIAL_FLUSH )"		2675353	0					
ANR	2675460	Callee	deflate		2675353	0					
ANR	2675461	Identifier	deflate		2675353	0					
ANR	2675462	ArgumentList	zstr		2675353	1					
ANR	2675463	Argument	zstr		2675353	0					
ANR	2675464	Identifier	zstr		2675353	0					
ANR	2675465	Argument	Z_PARTIAL_FLUSH		2675353	1					
ANR	2675466	Identifier	Z_PARTIAL_FLUSH		2675353	0					
ANR	2675467	Identifier	Z_OK		2675353	1					
ANR	2675468	CompoundStatement		25:47:767:767	2675353	1					
ANR	2675469	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"	1612:4:45886:45940	2675353	0	True				
ANR	2675470	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"		2675353	0					
ANR	2675471	Callee	dprintf		2675353	0					
ANR	2675472	Identifier	dprintf		2675353	0					
ANR	2675473	ArgumentList	D_ALWAYS		2675353	1					
ANR	2675474	Argument	D_ALWAYS		2675353	0					
ANR	2675475	Identifier	D_ALWAYS		2675353	0					
ANR	2675476	Argument	"""zlib (deflate): %s\\n"""		2675353	1					
ANR	2675477	PrimaryExpression	"""zlib (deflate): %s\\n"""		2675353	0					
ANR	2675478	Argument	zstr -> msg		2675353	2					
ANR	2675479	PtrMemberAccess	zstr -> msg		2675353	0					
ANR	2675480	Identifier	zstr		2675353	0					
ANR	2675481	Identifier	msg		2675353	1					
ANR	2675482	ExpressionStatement	Suicide ( )	1613:4:45946:45955	2675353	1	True				
ANR	2675483	CallExpression	Suicide ( )		2675353	0					
ANR	2675484	Callee	Suicide		2675353	0					
ANR	2675485	Identifier	Suicide		2675353	0					
ANR	2675486	ArgumentList			2675353	1					
ANR	2675487	ForStatement	"for ( bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ; bytes_to_go > 0 ; bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval )"		2675353	4					
ANR	2675488	ForInit	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ;"	1615:8:45970:46022	2675353	0	True				
ANR	2675489	Expression	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf"		2675353	0					
ANR	2675490	AssignmentExpression	bytes_to_go = ( zbufsize - zstr -> avail_out )		2675353	0		=			
ANR	2675491	Identifier	bytes_to_go		2675353	0					
ANR	2675492	AdditiveExpression	zbufsize - zstr -> avail_out		2675353	1		-			
ANR	2675493	Identifier	zbufsize		2675353	0					
ANR	2675494	PtrMemberAccess	zstr -> avail_out		2675353	1					
ANR	2675495	Identifier	zstr		2675353	0					
ANR	2675496	Identifier	avail_out		2675353	1					
ANR	2675497	AssignmentExpression	ptr = zbuf		2675353	1		=			
ANR	2675498	Identifier	ptr		2675353	0					
ANR	2675499	Identifier	zbuf		2675353	1					
ANR	2675500	Condition	bytes_to_go > 0	1616:5:46029:46043	2675353	1	True				
ANR	2675501	RelationalExpression	bytes_to_go > 0		2675353	0		>			
ANR	2675502	Identifier	bytes_to_go		2675353	0					
ANR	2675503	PrimaryExpression	0		2675353	1					
ANR	2675504	Expression	"bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval"	1617:5:46051:46107	2675353	2	True				
ANR	2675505	AssignmentExpression	bytes_to_go -= rval		2675353	0		-=			
ANR	2675506	Identifier	bytes_to_go		2675353	0					
ANR	2675507	Identifier	rval		2675353	1					
ANR	2675508	Expression	"ptr += rval , zstr -> avail_out += rval"		2675353	1					
ANR	2675509	AssignmentExpression	ptr += rval		2675353	0		+=			
ANR	2675510	Identifier	ptr		2675353	0					
ANR	2675511	Identifier	rval		2675353	1					
ANR	2675512	AssignmentExpression	zstr -> avail_out += rval		2675353	1		+=			
ANR	2675513	PtrMemberAccess	zstr -> avail_out		2675353	0					
ANR	2675514	Identifier	zstr		2675353	0					
ANR	2675515	Identifier	avail_out		2675353	1					
ANR	2675516	Identifier	rval		2675353	1					
ANR	2675517	CompoundStatement		31:64:997:997	2675353	3					
ANR	2675518	ExpressionStatement	"rval = write ( fd , ptr , bytes_to_go )"	1619:4:46160:46192	2675353	0	True				
ANR	2675519	AssignmentExpression	"rval = write ( fd , ptr , bytes_to_go )"		2675353	0		=			
ANR	2675520	Identifier	rval		2675353	0					
ANR	2675521	CallExpression	"write ( fd , ptr , bytes_to_go )"		2675353	1					
ANR	2675522	Callee	write		2675353	0					
ANR	2675523	Identifier	write		2675353	0					
ANR	2675524	ArgumentList	fd		2675353	1					
ANR	2675525	Argument	fd		2675353	0					
ANR	2675526	Identifier	fd		2675353	0					
ANR	2675527	Argument	ptr		2675353	1					
ANR	2675528	Identifier	ptr		2675353	0					
ANR	2675529	Argument	bytes_to_go		2675353	2					
ANR	2675530	Identifier	bytes_to_go		2675353	0					
ANR	2675531	IfStatement	if ( rval < 0 )		2675353	1					
ANR	2675532	Condition	rval < 0	1620:8:46202:46209	2675353	0	True				
ANR	2675533	RelationalExpression	rval < 0		2675353	0		<			
ANR	2675534	Identifier	rval		2675353	0					
ANR	2675535	PrimaryExpression	0		2675353	1					
ANR	2675536	CompoundStatement		34:18:1099:1099	2675353	1					
ANR	2675537	Statement	dprintf	1621:5:46219:46225	2675353	0	True				
ANR	2675538	Statement	(	1621:12:46226:46226	2675353	1	True				
ANR	2675539	Statement	D_ALWAYS	1621:13:46227:46234	2675353	2	True				
ANR	2675540	Statement	","	1621:21:46235:46235	2675353	3	True				
ANR	2675541	Statement	"""write failed with errno %d in """	1621:23:46237:46268	2675353	4	True				
ANR	2675542	Statement	"""SegMap::Write\\n"""	1622:7:46277:46293	2675353	5	True				
ANR	2675543	Statement	","	1622:24:46294:46294	2675353	6	True				
ANR	2675544	Statement	errno	1622:26:46296:46300	2675353	7	True				
ANR	2675545	Statement	)	1622:31:46301:46301	2675353	8	True				
ANR	2675546	ExpressionStatement		1622:32:46302:46302	2675353	9	True				
ANR	2675547	ExpressionStatement	Suicide ( )	1623:5:46309:46318	2675353	10	True				
ANR	2675548	CallExpression	Suicide ( )		2675353	0					
ANR	2675549	Callee	Suicide		2675353	0					
ANR	2675550	Identifier	Suicide		2675353	0					
ANR	2675551	ArgumentList			2675353	1					
ANR	2675552	IfStatement	if ( condor_slow_ckpt )		2675353	5					
ANR	2675553	Condition	condor_slow_ckpt	1626:7:46338:46353	2675353	0	True				
ANR	2675554	Identifier	condor_slow_ckpt		2675353	0					
ANR	2675555	CompoundStatement		40:25:1243:1243	2675353	1					
ANR	2675556	ExpressionStatement	sleep ( ( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1 )	1628:4:46406:46479	2675353	0	True				
ANR	2675557	CallExpression	sleep ( ( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1 )		2675353	0					
ANR	2675558	Callee	sleep		2675353	0					
ANR	2675559	Identifier	sleep		2675353	0					
ANR	2675560	ArgumentList	( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1		2675353	1					
ANR	2675561	Argument	( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1		2675353	0					
ANR	2675562	AdditiveExpression	( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1		2675353	0		+			
ANR	2675563	MultiplicativeExpression	( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO )		2675353	0		/			
ANR	2675564	AdditiveExpression	old_avail_in - zstr -> avail_in		2675353	0		-			
ANR	2675565	Identifier	old_avail_in		2675353	0					
ANR	2675566	PtrMemberAccess	zstr -> avail_in		2675353	1					
ANR	2675567	Identifier	zstr		2675353	0					
ANR	2675568	Identifier	avail_in		2675353	1					
ANR	2675569	MultiplicativeExpression	condor_slow_ckpt * KILO		2675353	1		*			
ANR	2675570	Identifier	condor_slow_ckpt		2675353	0					
ANR	2675571	Identifier	KILO		2675353	1					
ANR	2675572	PrimaryExpression	1		2675353	1					
ANR	2675573	IfStatement	if ( zstr -> avail_out != zbufsize )		2675353	6					
ANR	2675574	Condition	zstr -> avail_out != zbufsize	1631:7:46493:46519	2675353	0	True				
ANR	2675575	EqualityExpression	zstr -> avail_out != zbufsize		2675353	0		!=			
ANR	2675576	PtrMemberAccess	zstr -> avail_out		2675353	0					
ANR	2675577	Identifier	zstr		2675353	0					
ANR	2675578	Identifier	avail_out		2675353	1					
ANR	2675579	Identifier	zbufsize		2675353	1					
ANR	2675580	CompoundStatement		45:36:1409:1409	2675353	1					
ANR	2675581	Statement	dprintf	1632:4:46528:46534	2675353	0	True				
ANR	2675582	Statement	(	1632:11:46535:46535	2675353	1	True				
ANR	2675583	Statement	D_ALWAYS	1632:12:46536:46543	2675353	2	True				
ANR	2675584	Statement	","	1632:20:46544:46544	2675353	3	True				
ANR	2675585	Statement	"""deflate logic error, avail_out (%d) != """	1632:22:46546:46586	2675353	4	True				
ANR	2675586	Statement	"""zbufsize (%d)\\n"""	1633:6:46594:46610	2675353	5	True				
ANR	2675587	Statement	","	1633:23:46611:46611	2675353	6	True				
ANR	2675588	Statement	zstr	1633:25:46613:46616	2675353	7	True				
ANR	2675589	Statement	->	1633:29:46617:46618	2675353	8	True				
ANR	2675590	Statement	avail_out	1633:31:46619:46627	2675353	9	True				
ANR	2675591	Statement	","	1633:40:46628:46628	2675353	10	True				
ANR	2675592	Statement	zbufsize	1633:42:46630:46637	2675353	11	True				
ANR	2675593	Statement	)	1633:50:46638:46638	2675353	12	True				
ANR	2675594	ExpressionStatement		1633:51:46639:46639	2675353	13	True				
ANR	2675595	ExpressionStatement	Suicide ( )	1634:4:46645:46654	2675353	14	True				
ANR	2675596	CallExpression	Suicide ( )		2675353	0					
ANR	2675597	Callee	Suicide		2675353	0					
ANR	2675598	Identifier	Suicide		2675353	0					
ANR	2675599	ArgumentList			2675353	1					
ANR	2675600	ReturnStatement	return len ;	1637:2:46667:46677	2675353	5	True				
ANR	2675601	Identifier	len		2675353	0					
ANR	2675602	ExpressionStatement	"dprintf ( D_ALWAYS , ""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"" , fd , core_loc , len )"	1640:1:46690:46772	2675353	2	True				
ANR	2675603	CallExpression	"dprintf ( D_ALWAYS , ""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"" , fd , core_loc , len )"		2675353	0					
ANR	2675604	Callee	dprintf		2675353	0					
ANR	2675605	Identifier	dprintf		2675353	0					
ANR	2675606	ArgumentList	D_ALWAYS		2675353	1					
ANR	2675607	Argument	D_ALWAYS		2675353	0					
ANR	2675608	Identifier	D_ALWAYS		2675353	0					
ANR	2675609	Argument	"""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"""		2675353	1					
ANR	2675610	PrimaryExpression	"""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"""		2675353	0					
ANR	2675611	Argument	fd		2675353	2					
ANR	2675612	Identifier	fd		2675353	0					
ANR	2675613	Argument	core_loc		2675353	3					
ANR	2675614	Identifier	core_loc		2675353	0					
ANR	2675615	Argument	len		2675353	4					
ANR	2675616	Identifier	len		2675353	0					
ANR	2675617	IdentifierDeclStatement	"int bytes_to_go = len , nbytes ;"	1643:1:46776:46805	2675353	3	True				
ANR	2675618	IdentifierDecl	bytes_to_go = len		2675353	0					
ANR	2675619	IdentifierDeclType	int		2675353	0					
ANR	2675620	Identifier	bytes_to_go		2675353	1					
ANR	2675621	AssignmentExpression	bytes_to_go = len		2675353	2		=			
ANR	2675622	Identifier	len		2675353	0					
ANR	2675623	Identifier	len		2675353	1					
ANR	2675624	IdentifierDecl	nbytes		2675353	1					
ANR	2675625	IdentifierDeclType	int		2675353	0					
ANR	2675626	Identifier	nbytes		2675353	1					
ANR	2675627	IdentifierDeclStatement	char * ptr = ( char * ) core_loc ;	1645:1:46809:46837	2675353	4	True				
ANR	2675628	IdentifierDecl	* ptr = ( char * ) core_loc		2675353	0					
ANR	2675629	IdentifierDeclType	char *		2675353	0					
ANR	2675630	Identifier	ptr		2675353	1					
ANR	2675631	AssignmentExpression	* ptr = ( char * ) core_loc		2675353	2		=			
ANR	2675632	Identifier	ptr		2675353	0					
ANR	2675633	CastExpression	( char * ) core_loc		2675353	1					
ANR	2675634	CastTarget	char *		2675353	0					
ANR	2675635	Identifier	core_loc		2675353	1					
ANR	2675636	WhileStatement	while ( bytes_to_go )		2675353	5					
ANR	2675637	Condition	bytes_to_go	1646:8:46847:46857	2675353	0	True				
ANR	2675638	Identifier	bytes_to_go		2675353	0					
ANR	2675639	CompoundStatement		61:2:1751:1768	2675353	1					
ANR	2675640	IdentifierDeclStatement	size_t write_size ;	1647:2:46864:46881	2675353	0	True				
ANR	2675641	IdentifierDecl	write_size		2675353	0					
ANR	2675642	IdentifierDeclType	size_t		2675353	0					
ANR	2675643	Identifier	write_size		2675353	1					
ANR	2675644	IfStatement	if ( condor_slow_ckpt && bytes_to_go > ( condor_slow_ckpt * KILO ) )		2675353	1					
ANR	2675645	Condition	condor_slow_ckpt && bytes_to_go > ( condor_slow_ckpt * KILO )	1648:6:46889:46945	2675353	0	True				
ANR	2675646	AndExpression	condor_slow_ckpt && bytes_to_go > ( condor_slow_ckpt * KILO )		2675353	0		&&			
ANR	2675647	Identifier	condor_slow_ckpt		2675353	0					
ANR	2675648	RelationalExpression	bytes_to_go > ( condor_slow_ckpt * KILO )		2675353	1		>			
ANR	2675649	Identifier	bytes_to_go		2675353	0					
ANR	2675650	MultiplicativeExpression	condor_slow_ckpt * KILO		2675353	1		*			
ANR	2675651	Identifier	condor_slow_ckpt		2675353	0					
ANR	2675652	Identifier	KILO		2675353	1					
ANR	2675653	CompoundStatement		62:65:1835:1835	2675353	1					
ANR	2675654	ExpressionStatement	write_size = condor_slow_ckpt * KILO	1650:3:46996:47030	2675353	0	True				
ANR	2675655	AssignmentExpression	write_size = condor_slow_ckpt * KILO		2675353	0		=			
ANR	2675656	Identifier	write_size		2675353	0					
ANR	2675657	MultiplicativeExpression	condor_slow_ckpt * KILO		2675353	1		*			
ANR	2675658	Identifier	condor_slow_ckpt		2675353	0					
ANR	2675659	Identifier	KILO		2675353	1					
ANR	2675660	ElseStatement	else		2675353	0					
ANR	2675661	CompoundStatement		65:9:1928:1928	2675353	0					
ANR	2675662	ExpressionStatement	write_size = bytes_to_go	1652:3:47046:47070	2675353	0	True				
ANR	2675663	AssignmentExpression	write_size = bytes_to_go		2675353	0		=			
ANR	2675664	Identifier	write_size		2675353	0					
ANR	2675665	Identifier	bytes_to_go		2675353	1					
ANR	2675666	ExpressionStatement	"nbytes = write ( fd , ( void * ) ptr , write_size )"	1654:2:47078:47119	2675353	2	True				
ANR	2675667	AssignmentExpression	"nbytes = write ( fd , ( void * ) ptr , write_size )"		2675353	0		=			
ANR	2675668	Identifier	nbytes		2675353	0					
ANR	2675669	CallExpression	"write ( fd , ( void * ) ptr , write_size )"		2675353	1					
ANR	2675670	Callee	write		2675353	0					
ANR	2675671	Identifier	write		2675353	0					
ANR	2675672	ArgumentList	fd		2675353	1					
ANR	2675673	Argument	fd		2675353	0					
ANR	2675674	Identifier	fd		2675353	0					
ANR	2675675	Argument	( void * ) ptr		2675353	1					
ANR	2675676	CastExpression	( void * ) ptr		2675353	0					
ANR	2675677	CastTarget	void *		2675353	0					
ANR	2675678	Identifier	ptr		2675353	1					
ANR	2675679	Argument	write_size		2675353	2					
ANR	2675680	Identifier	write_size		2675353	0					
ANR	2675681	ExpressionStatement	"dprintf ( D_CKPT , ""I wrote %d bytes with write...\\n"" , nbytes )"	1655:2:47123:47182	2675353	3	True				
ANR	2675682	CallExpression	"dprintf ( D_CKPT , ""I wrote %d bytes with write...\\n"" , nbytes )"		2675353	0					
ANR	2675683	Callee	dprintf		2675353	0					
ANR	2675684	Identifier	dprintf		2675353	0					
ANR	2675685	ArgumentList	D_CKPT		2675353	1					
ANR	2675686	Argument	D_CKPT		2675353	0					
ANR	2675687	Identifier	D_CKPT		2675353	0					
ANR	2675688	Argument	"""I wrote %d bytes with write...\\n"""		2675353	1					
ANR	2675689	PrimaryExpression	"""I wrote %d bytes with write...\\n"""		2675353	0					
ANR	2675690	Argument	nbytes		2675353	2					
ANR	2675691	Identifier	nbytes		2675353	0					
ANR	2675692	IfStatement	if ( nbytes < 0 )		2675353	4					
ANR	2675693	Condition	nbytes < 0	1656:7:47191:47200	2675353	0	True				
ANR	2675694	RelationalExpression	nbytes < 0		2675353	0		<			
ANR	2675695	Identifier	nbytes		2675353	0					
ANR	2675696	PrimaryExpression	0		2675353	1					
ANR	2675697	CompoundStatement		70:20:2091:2091	2675353	1					
ANR	2675698	ExpressionStatement	"dprintf ( D_ALWAYS , ""in SegMap::Write(): fd = %d, write_size=%d\\n"" , fd , bytes_to_go )"	1657:3:47209:47299	2675353	0	True				
ANR	2675699	CallExpression	"dprintf ( D_ALWAYS , ""in SegMap::Write(): fd = %d, write_size=%d\\n"" , fd , bytes_to_go )"		2675353	0					
ANR	2675700	Callee	dprintf		2675353	0					
ANR	2675701	Identifier	dprintf		2675353	0					
ANR	2675702	ArgumentList	D_ALWAYS		2675353	1					
ANR	2675703	Argument	D_ALWAYS		2675353	0					
ANR	2675704	Identifier	D_ALWAYS		2675353	0					
ANR	2675705	Argument	"""in SegMap::Write(): fd = %d, write_size=%d\\n"""		2675353	1					
ANR	2675706	PrimaryExpression	"""in SegMap::Write(): fd = %d, write_size=%d\\n"""		2675353	0					
ANR	2675707	Argument	fd		2675353	2					
ANR	2675708	Identifier	fd		2675353	0					
ANR	2675709	Argument	bytes_to_go		2675353	3					
ANR	2675710	Identifier	bytes_to_go		2675353	0					
ANR	2675711	ExpressionStatement	"dprintf ( D_ALWAYS , ""errno=%d, core_loc=%p\\n"" , errno , ptr )"	1659:3:47304:47362	2675353	1	True				
ANR	2675712	CallExpression	"dprintf ( D_ALWAYS , ""errno=%d, core_loc=%p\\n"" , errno , ptr )"		2675353	0					
ANR	2675713	Callee	dprintf		2675353	0					
ANR	2675714	Identifier	dprintf		2675353	0					
ANR	2675715	ArgumentList	D_ALWAYS		2675353	1					
ANR	2675716	Argument	D_ALWAYS		2675353	0					
ANR	2675717	Identifier	D_ALWAYS		2675353	0					
ANR	2675718	Argument	"""errno=%d, core_loc=%p\\n"""		2675353	1					
ANR	2675719	PrimaryExpression	"""errno=%d, core_loc=%p\\n"""		2675353	0					
ANR	2675720	Argument	errno		2675353	2					
ANR	2675721	Identifier	errno		2675353	0					
ANR	2675722	Argument	ptr		2675353	3					
ANR	2675723	Identifier	ptr		2675353	0					
ANR	2675724	ReturnStatement	return - 1 ;	1660:3:47367:47376	2675353	2	True				
ANR	2675725	UnaryOperationExpression	- 1		2675353	0					
ANR	2675726	UnaryOperator	-		2675353	0					
ANR	2675727	PrimaryExpression	1		2675353	1					
ANR	2675728	IfStatement	if ( condor_slow_ckpt )		2675353	5					
ANR	2675729	Condition	condor_slow_ckpt	1662:6:47388:47403	2675353	0	True				
ANR	2675730	Identifier	condor_slow_ckpt		2675353	0					
ANR	2675731	ExpressionStatement	sleep ( 1 )	1662:24:47406:47414	2675353	1	True				
ANR	2675732	CallExpression	sleep ( 1 )		2675353	0					
ANR	2675733	Callee	sleep		2675353	0					
ANR	2675734	Identifier	sleep		2675353	0					
ANR	2675735	ArgumentList	1		2675353	1					
ANR	2675736	Argument	1		2675353	0					
ANR	2675737	PrimaryExpression	1		2675353	0					
ANR	2675738	ExpressionStatement	bytes_to_go -= nbytes	1663:2:47418:47439	2675353	6	True				
ANR	2675739	AssignmentExpression	bytes_to_go -= nbytes		2675353	0		-=			
ANR	2675740	Identifier	bytes_to_go		2675353	0					
ANR	2675741	Identifier	nbytes		2675353	1					
ANR	2675742	ExpressionStatement	ptr += nbytes	1664:2:47443:47456	2675353	7	True				
ANR	2675743	AssignmentExpression	ptr += nbytes		2675353	0		+=			
ANR	2675744	Identifier	ptr		2675353	0					
ANR	2675745	Identifier	nbytes		2675353	1					
ANR	2675746	ReturnStatement	return len ;	1666:1:47462:47472	2675353	6	True				
ANR	2675747	Identifier	len		2675353	0					
ANR	2675748	ReturnType	ssize_t		2675353	1					
ANR	2675749	Identifier	SegMap :: Write		2675353	2					
ANR	2675750	ParameterList	"int fd , ssize_t pos"		2675353	3					
ANR	2675751	Parameter	int fd	1586:15:45090:45095	2675353	0	True				
ANR	2675752	ParameterType	int		2675353	0					
ANR	2675753	Identifier	fd		2675353	1					
ANR	2675754	Parameter	ssize_t pos	1586:23:45098:45108	2675353	1	True				
ANR	2675755	ParameterType	ssize_t		2675353	0					
ANR	2675756	Identifier	pos		2675353	1					
ANR	2675757	CFGEntryNode	ENTRY		2675353		True				
ANR	2675758	CFGExitNode	EXIT		2675353		True				
ANR	2675759	Symbol	condor_slow_ckpt		2675353						
ANR	2675760	Symbol	zbuf		2675353						
ANR	2675761	Symbol	KILO		2675353						
ANR	2675762	Symbol	old_avail_in		2675353						
ANR	2675763	Symbol	zstr -> avail_in		2675353						
ANR	2675764	Symbol	* zstr		2675353						
ANR	2675765	Symbol	Z_OK		2675353						
ANR	2675766	Symbol	core_loc		2675353						
ANR	2675767	Symbol	zstr		2675353						
ANR	2675768	Symbol	UINT_MAX		2675353						
ANR	2675769	Symbol	zstr -> avail_out		2675353						
ANR	2675770	Symbol	file_loc		2675353						
ANR	2675771	Symbol	len		2675353						
ANR	2675772	Symbol	pos		2675353						
ANR	2675773	Symbol	zstr -> msg		2675353						
ANR	2675774	Symbol	zbufsize		2675353						
ANR	2675775	Symbol	rval		2675353						
ANR	2675776	Symbol	Z_PARTIAL_FLUSH		2675353						
ANR	2675777	Symbol	write		2675353						
ANR	2675778	Symbol	errno		2675353						
ANR	2675779	Symbol	bytes_to_go		2675353						
ANR	2675780	Symbol	D_CKPT		2675353						
ANR	2675781	Symbol	D_ALWAYS		2675353						
ANR	2675782	Symbol	ptr		2675353						
ANR	2675783	Symbol	nbytes		2675353						
ANR	2675784	Symbol	deflate		2675353						
ANR	2675785	Symbol	write_size		2675353						
ANR	2675786	Symbol	condor_compress_ckpt		2675353						
ANR	2675787	Symbol	zstr -> next_in		2675353						
ANR	2675788	Symbol	fd		2675353						
ANR	2675789	Symbol	zstr -> next_out		2675353						
ANR	2675790	Function	Checkpoint	1682:0:48090:56910							
ANR	2675791	FunctionDef	"Checkpoint (int sig , int code , void * scp)"		2675790	0					
ANR	2675792	CompoundStatement		1684:0:48138:56910	2675790	0					
ANR	2675793	IdentifierDeclStatement	"int scm , p_scm ;"	1685:1:48141:48156	2675790	0	True				
ANR	2675794	IdentifierDecl	scm		2675790	0					
ANR	2675795	IdentifierDeclType	int		2675790	0					
ANR	2675796	Identifier	scm		2675790	1					
ANR	2675797	IdentifierDecl	p_scm		2675790	1					
ANR	2675798	IdentifierDeclType	int		2675790	0					
ANR	2675799	Identifier	p_scm		2675790	1					
ANR	2675800	IdentifierDeclStatement	int do_full_restart = 1 ;	1686:1:48159:48183	2675790	1	True				
ANR	2675801	IdentifierDecl	do_full_restart = 1		2675790	0					
ANR	2675802	IdentifierDeclType	int		2675790	0					
ANR	2675803	Identifier	do_full_restart		2675790	1					
ANR	2675804	AssignmentExpression	do_full_restart = 1		2675790	2		=			
ANR	2675805	Identifier	do_full_restart		2675790	0					
ANR	2675806	PrimaryExpression	1		2675790	1					
ANR	2675807	IdentifierDeclStatement	int write_result ;	1687:1:48222:48239	2675790	2	True				
ANR	2675808	IdentifierDecl	write_result		2675790	0					
ANR	2675809	IdentifierDeclType	int		2675790	0					
ANR	2675810	Identifier	write_result		2675790	1					
ANR	2675811	IdentifierDeclStatement	sigset_t mask ;	1688:1:48242:48255	2675790	3	True				
ANR	2675812	IdentifierDecl	mask		2675790	0					
ANR	2675813	IdentifierDeclType	sigset_t		2675790	0					
ANR	2675814	Identifier	mask		2675790	1					
ANR	2675815	ExpressionStatement	mask = _condor_signals_disable ( )	1691:1:48304:48336	2675790	4	True				
ANR	2675816	AssignmentExpression	mask = _condor_signals_disable ( )		2675790	0		=			
ANR	2675817	Identifier	mask		2675790	0					
ANR	2675818	CallExpression	_condor_signals_disable ( )		2675790	1					
ANR	2675819	Callee	_condor_signals_disable		2675790	0					
ANR	2675820	Identifier	_condor_signals_disable		2675790	0					
ANR	2675821	ArgumentList			2675790	1					
ANR	2675822	IfStatement	if ( _condor_ckpt_is_disabled ( ) )		2675790	5					
ANR	2675823	Condition	_condor_ckpt_is_disabled ( )	1694:5:48416:48441	2675790	0	True				
ANR	2675824	CallExpression	_condor_ckpt_is_disabled ( )		2675790	0					
ANR	2675825	Callee	_condor_ckpt_is_disabled		2675790	0					
ANR	2675826	Identifier	_condor_ckpt_is_disabled		2675790	0					
ANR	2675827	ArgumentList			2675790	1					
ANR	2675828	CompoundStatement		11:35:307:307	2675790	1					
ANR	2675829	ExpressionStatement	_condor_ckpt_defer ( sig )	1695:2:48450:48473	2675790	0	True				
ANR	2675830	CallExpression	_condor_ckpt_defer ( sig )		2675790	0					
ANR	2675831	Callee	_condor_ckpt_defer		2675790	0					
ANR	2675832	Identifier	_condor_ckpt_defer		2675790	0					
ANR	2675833	ArgumentList	sig		2675790	1					
ANR	2675834	Argument	sig		2675790	0					
ANR	2675835	Identifier	sig		2675790	0					
ANR	2675836	ExpressionStatement	_condor_signals_enable ( mask )	1696:2:48477:48505	2675790	1	True				
ANR	2675837	CallExpression	_condor_signals_enable ( mask )		2675790	0					
ANR	2675838	Callee	_condor_signals_enable		2675790	0					
ANR	2675839	Identifier	_condor_signals_enable		2675790	0					
ANR	2675840	ArgumentList	mask		2675790	1					
ANR	2675841	Argument	mask		2675790	0					
ANR	2675842	Identifier	mask		2675790	0					
ANR	2675843	ReturnStatement	return ;	1697:2:48509:48515	2675790	2	True				
ANR	2675844	IfStatement	if ( InRestart )		2675790	6					
ANR	2675845	Condition	InRestart	1700:5:48526:48534	2675790	0	True				
ANR	2675846	Identifier	InRestart		2675790	0					
ANR	2675847	CompoundStatement		17:17:399:399	2675790	1					
ANR	2675848	IfStatement	if ( sig == SIGTSTP )		2675790	0					
ANR	2675849	Condition	sig == SIGTSTP	1701:7:48547:48560	2675790	0	True				
ANR	2675850	EqualityExpression	sig == SIGTSTP		2675790	0		==			
ANR	2675851	Identifier	sig		2675790	0					
ANR	2675852	Identifier	SIGTSTP		2675790	1					
ANR	2675853	CompoundStatement		18:24:425:425	2675790	1					
ANR	2675854	ExpressionStatement	Suicide ( )	1702:3:48569:48578	2675790	0	True				
ANR	2675855	CallExpression	Suicide ( )		2675790	0					
ANR	2675856	Callee	Suicide		2675790	0					
ANR	2675857	Identifier	Suicide		2675790	0					
ANR	2675858	ArgumentList			2675790	1					
ANR	2675859	ElseStatement	else		2675790	0					
ANR	2675860	CompoundStatement		20:9:498:498	2675790	0					
ANR	2675861	ExpressionStatement	_condor_signals_enable ( mask )	1704:3:48642:48670	2675790	0	True				
ANR	2675862	CallExpression	_condor_signals_enable ( mask )		2675790	0					
ANR	2675863	Callee	_condor_signals_enable		2675790	0					
ANR	2675864	Identifier	_condor_signals_enable		2675790	0					
ANR	2675865	ArgumentList	mask		2675790	1					
ANR	2675866	Argument	mask		2675790	0					
ANR	2675867	Identifier	mask		2675790	0					
ANR	2675868	ReturnStatement	return ;	1705:3:48675:48681	2675790	1	True				
ANR	2675869	ElseStatement	else		2675790	0					
ANR	2675870	CompoundStatement		24:8:605:605	2675790	0					
ANR	2675871	ExpressionStatement	InRestart = TRUE	1708:2:48748:48764	2675790	0	True				
ANR	2675872	AssignmentExpression	InRestart = TRUE		2675790	0		=			
ANR	2675873	Identifier	InRestart		2675790	0					
ANR	2675874	Identifier	TRUE		2675790	1					
ANR	2675875	ExpressionStatement	check_sig = sig	1711:1:48771:48786	2675790	7	True				
ANR	2675876	AssignmentExpression	check_sig = sig		2675790	0		=			
ANR	2675877	Identifier	check_sig		2675790	0					
ANR	2675878	Identifier	sig		2675790	1					
ANR	2675879	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		2675790	8					
ANR	2675880	Condition	MyImage . GetMode ( ) == REMOTE	1713:5:48794:48820	2675790	0	True				
ANR	2675881	EqualityExpression	MyImage . GetMode ( ) == REMOTE		2675790	0		==			
ANR	2675882	CallExpression	MyImage . GetMode ( )		2675790	0					
ANR	2675883	Callee	MyImage . GetMode		2675790	0					
ANR	2675884	MemberAccess	MyImage . GetMode		2675790	0					
ANR	2675885	Identifier	MyImage		2675790	0					
ANR	2675886	Identifier	GetMode		2675790	1					
ANR	2675887	ArgumentList			2675790	1					
ANR	2675888	Identifier	REMOTE		2675790	1					
ANR	2675889	CompoundStatement		42:2:1258:1273	2675790	1					
ANR	2675890	ExpressionStatement	scm = SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )	1714:2:48828:48874	2675790	0	True				
ANR	2675891	AssignmentExpression	scm = SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )		2675790	0		=			
ANR	2675892	Identifier	scm		2675790	0					
ANR	2675893	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )		2675790	1					
ANR	2675894	Callee	SetSyscalls		2675790	0					
ANR	2675895	Identifier	SetSyscalls		2675790	0					
ANR	2675896	ArgumentList	SYS_REMOTE | SYS_UNMAPPED		2675790	1					
ANR	2675897	Argument	SYS_REMOTE | SYS_UNMAPPED		2675790	0					
ANR	2675898	InclusiveOrExpression	SYS_REMOTE | SYS_UNMAPPED		2675790	0		|			
ANR	2675899	Identifier	SYS_REMOTE		2675790	0					
ANR	2675900	Identifier	SYS_UNMAPPED		2675790	1					
ANR	2675901	IdentifierDeclStatement	struct tms posix_usage ;	1723:2:49344:49366	2675790	1	True				
ANR	2675902	IdentifierDecl	posix_usage		2675790	0					
ANR	2675903	IdentifierDeclType	struct tms		2675790	0					
ANR	2675904	Identifier	posix_usage		2675790	1					
ANR	2675905	IdentifierDeclStatement	struct rusage bsd_usage ;	1724:2:49370:49393	2675790	2	True				
ANR	2675906	IdentifierDecl	bsd_usage		2675790	0					
ANR	2675907	IdentifierDeclType	struct rusage		2675790	0					
ANR	2675908	Identifier	bsd_usage		2675790	1					
ANR	2675909	IdentifierDeclStatement	long clock_tick ;	1725:2:49397:49412	2675790	3	True				
ANR	2675910	IdentifierDecl	clock_tick		2675790	0					
ANR	2675911	IdentifierDeclType	long		2675790	0					
ANR	2675912	Identifier	clock_tick		2675790	1					
ANR	2675913	ExpressionStatement	p_scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1727:2:49417:49464	2675790	4	True				
ANR	2675914	AssignmentExpression	p_scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	0		=			
ANR	2675915	Identifier	p_scm		2675790	0					
ANR	2675916	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	1					
ANR	2675917	Callee	SetSyscalls		2675790	0					
ANR	2675918	Identifier	SetSyscalls		2675790	0					
ANR	2675919	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2675790	1					
ANR	2675920	Argument	SYS_LOCAL | SYS_UNMAPPED		2675790	0					
ANR	2675921	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2675790	0		|			
ANR	2675922	Identifier	SYS_LOCAL		2675790	0					
ANR	2675923	Identifier	SYS_UNMAPPED		2675790	1					
ANR	2675924	ExpressionStatement	"memset ( & bsd_usage , 0 , sizeof ( struct rusage ) )"	1728:2:49468:49510	2675790	5	True				
ANR	2675925	CallExpression	"memset ( & bsd_usage , 0 , sizeof ( struct rusage ) )"		2675790	0					
ANR	2675926	Callee	memset		2675790	0					
ANR	2675927	Identifier	memset		2675790	0					
ANR	2675928	ArgumentList	& bsd_usage		2675790	1					
ANR	2675929	Argument	& bsd_usage		2675790	0					
ANR	2675930	UnaryOperationExpression	& bsd_usage		2675790	0					
ANR	2675931	UnaryOperator	&		2675790	0					
ANR	2675932	Identifier	bsd_usage		2675790	1					
ANR	2675933	Argument	0		2675790	1					
ANR	2675934	PrimaryExpression	0		2675790	0					
ANR	2675935	Argument	sizeof ( struct rusage )		2675790	2					
ANR	2675936	SizeofExpression	sizeof ( struct rusage )		2675790	0					
ANR	2675937	Sizeof	sizeof		2675790	0					
ANR	2675938	SizeofOperand	struct rusage		2675790	1					
ANR	2675939	ExpressionStatement	times ( & posix_usage )	1729:2:49514:49535	2675790	6	True				
ANR	2675940	CallExpression	times ( & posix_usage )		2675790	0					
ANR	2675941	Callee	times		2675790	0					
ANR	2675942	Identifier	times		2675790	0					
ANR	2675943	ArgumentList	& posix_usage		2675790	1					
ANR	2675944	Argument	& posix_usage		2675790	0					
ANR	2675945	UnaryOperationExpression	& posix_usage		2675790	0					
ANR	2675946	UnaryOperator	&		2675790	0					
ANR	2675947	Identifier	posix_usage		2675790	1					
ANR	2675948	ExpressionStatement	clock_tick = sysconf ( _SC_CLK_TCK )	1730:2:49539:49574	2675790	7	True				
ANR	2675949	AssignmentExpression	clock_tick = sysconf ( _SC_CLK_TCK )		2675790	0		=			
ANR	2675950	Identifier	clock_tick		2675790	0					
ANR	2675951	CallExpression	sysconf ( _SC_CLK_TCK )		2675790	1					
ANR	2675952	Callee	sysconf		2675790	0					
ANR	2675953	Identifier	sysconf		2675790	0					
ANR	2675954	ArgumentList	_SC_CLK_TCK		2675790	1					
ANR	2675955	Argument	_SC_CLK_TCK		2675790	0					
ANR	2675956	Identifier	_SC_CLK_TCK		2675790	0					
ANR	2675957	ExpressionStatement	bsd_usage . ru_utime . tv_sec = posix_usage . tms_utime / clock_tick	1731:2:49578:49640	2675790	8	True				
ANR	2675958	AssignmentExpression	bsd_usage . ru_utime . tv_sec = posix_usage . tms_utime / clock_tick		2675790	0		=			
ANR	2675959	MemberAccess	bsd_usage . ru_utime . tv_sec		2675790	0					
ANR	2675960	MemberAccess	bsd_usage . ru_utime		2675790	0					
ANR	2675961	Identifier	bsd_usage		2675790	0					
ANR	2675962	Identifier	ru_utime		2675790	1					
ANR	2675963	Identifier	tv_sec		2675790	1					
ANR	2675964	MultiplicativeExpression	posix_usage . tms_utime / clock_tick		2675790	1		/			
ANR	2675965	MemberAccess	posix_usage . tms_utime		2675790	0					
ANR	2675966	Identifier	posix_usage		2675790	0					
ANR	2675967	Identifier	tms_utime		2675790	1					
ANR	2675968	Identifier	clock_tick		2675790	1					
ANR	2675969	ExpressionStatement	bsd_usage . ru_utime . tv_usec = posix_usage . tms_utime % clock_tick	1732:2:49644:49707	2675790	9	True				
ANR	2675970	AssignmentExpression	bsd_usage . ru_utime . tv_usec = posix_usage . tms_utime % clock_tick		2675790	0		=			
ANR	2675971	MemberAccess	bsd_usage . ru_utime . tv_usec		2675790	0					
ANR	2675972	MemberAccess	bsd_usage . ru_utime		2675790	0					
ANR	2675973	Identifier	bsd_usage		2675790	0					
ANR	2675974	Identifier	ru_utime		2675790	1					
ANR	2675975	Identifier	tv_usec		2675790	1					
ANR	2675976	MultiplicativeExpression	posix_usage . tms_utime % clock_tick		2675790	1		%			
ANR	2675977	MemberAccess	posix_usage . tms_utime		2675790	0					
ANR	2675978	Identifier	posix_usage		2675790	0					
ANR	2675979	Identifier	tms_utime		2675790	1					
ANR	2675980	Identifier	clock_tick		2675790	1					
ANR	2675981	ExpressionStatement	( bsd_usage . ru_utime . tv_usec ) *= 1000000 / clock_tick	1733:2:49711:49763	2675790	10	True				
ANR	2675982	AssignmentExpression	( bsd_usage . ru_utime . tv_usec ) *= 1000000 / clock_tick		2675790	0		*=			
ANR	2675983	MemberAccess	bsd_usage . ru_utime . tv_usec		2675790	0					
ANR	2675984	MemberAccess	bsd_usage . ru_utime		2675790	0					
ANR	2675985	Identifier	bsd_usage		2675790	0					
ANR	2675986	Identifier	ru_utime		2675790	1					
ANR	2675987	Identifier	tv_usec		2675790	1					
ANR	2675988	MultiplicativeExpression	1000000 / clock_tick		2675790	1		/			
ANR	2675989	PrimaryExpression	1000000		2675790	0					
ANR	2675990	Identifier	clock_tick		2675790	1					
ANR	2675991	ExpressionStatement	bsd_usage . ru_stime . tv_sec = posix_usage . tms_stime / clock_tick	1734:2:49767:49829	2675790	11	True				
ANR	2675992	AssignmentExpression	bsd_usage . ru_stime . tv_sec = posix_usage . tms_stime / clock_tick		2675790	0		=			
ANR	2675993	MemberAccess	bsd_usage . ru_stime . tv_sec		2675790	0					
ANR	2675994	MemberAccess	bsd_usage . ru_stime		2675790	0					
ANR	2675995	Identifier	bsd_usage		2675790	0					
ANR	2675996	Identifier	ru_stime		2675790	1					
ANR	2675997	Identifier	tv_sec		2675790	1					
ANR	2675998	MultiplicativeExpression	posix_usage . tms_stime / clock_tick		2675790	1		/			
ANR	2675999	MemberAccess	posix_usage . tms_stime		2675790	0					
ANR	2676000	Identifier	posix_usage		2675790	0					
ANR	2676001	Identifier	tms_stime		2675790	1					
ANR	2676002	Identifier	clock_tick		2675790	1					
ANR	2676003	ExpressionStatement	bsd_usage . ru_stime . tv_usec = posix_usage . tms_stime % clock_tick	1735:2:49833:49896	2675790	12	True				
ANR	2676004	AssignmentExpression	bsd_usage . ru_stime . tv_usec = posix_usage . tms_stime % clock_tick		2675790	0		=			
ANR	2676005	MemberAccess	bsd_usage . ru_stime . tv_usec		2675790	0					
ANR	2676006	MemberAccess	bsd_usage . ru_stime		2675790	0					
ANR	2676007	Identifier	bsd_usage		2675790	0					
ANR	2676008	Identifier	ru_stime		2675790	1					
ANR	2676009	Identifier	tv_usec		2675790	1					
ANR	2676010	MultiplicativeExpression	posix_usage . tms_stime % clock_tick		2675790	1		%			
ANR	2676011	MemberAccess	posix_usage . tms_stime		2675790	0					
ANR	2676012	Identifier	posix_usage		2675790	0					
ANR	2676013	Identifier	tms_stime		2675790	1					
ANR	2676014	Identifier	clock_tick		2675790	1					
ANR	2676015	ExpressionStatement	( bsd_usage . ru_stime . tv_usec ) *= 1000000 / clock_tick	1736:2:49900:49952	2675790	13	True				
ANR	2676016	AssignmentExpression	( bsd_usage . ru_stime . tv_usec ) *= 1000000 / clock_tick		2675790	0		*=			
ANR	2676017	MemberAccess	bsd_usage . ru_stime . tv_usec		2675790	0					
ANR	2676018	MemberAccess	bsd_usage . ru_stime		2675790	0					
ANR	2676019	Identifier	bsd_usage		2675790	0					
ANR	2676020	Identifier	ru_stime		2675790	1					
ANR	2676021	Identifier	tv_usec		2675790	1					
ANR	2676022	MultiplicativeExpression	1000000 / clock_tick		2675790	1		/			
ANR	2676023	PrimaryExpression	1000000		2675790	0					
ANR	2676024	Identifier	clock_tick		2675790	1					
ANR	2676025	ExpressionStatement	SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )	1737:2:49956:49996	2675790	14	True				
ANR	2676026	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )		2675790	0					
ANR	2676027	Callee	SetSyscalls		2675790	0					
ANR	2676028	Identifier	SetSyscalls		2675790	0					
ANR	2676029	ArgumentList	SYS_REMOTE | SYS_UNMAPPED		2675790	1					
ANR	2676030	Argument	SYS_REMOTE | SYS_UNMAPPED		2675790	0					
ANR	2676031	InclusiveOrExpression	SYS_REMOTE | SYS_UNMAPPED		2675790	0		|			
ANR	2676032	Identifier	SYS_REMOTE		2675790	0					
ANR	2676033	Identifier	SYS_UNMAPPED		2675790	1					
ANR	2676034	ExpressionStatement	( void ) REMOTE_CONDOR_send_rusage ( & bsd_usage )	1738:2:50000:50045	2675790	15	True				
ANR	2676035	CastExpression	( void ) REMOTE_CONDOR_send_rusage ( & bsd_usage )		2675790	0					
ANR	2676036	CastTarget	void		2675790	0					
ANR	2676037	CallExpression	REMOTE_CONDOR_send_rusage ( & bsd_usage )		2675790	1					
ANR	2676038	Callee	REMOTE_CONDOR_send_rusage		2675790	0					
ANR	2676039	Identifier	REMOTE_CONDOR_send_rusage		2675790	0					
ANR	2676040	ArgumentList	& bsd_usage		2675790	1					
ANR	2676041	Argument	& bsd_usage		2675790	0					
ANR	2676042	UnaryOperationExpression	& bsd_usage		2675790	0					
ANR	2676043	UnaryOperator	&		2675790	0					
ANR	2676044	Identifier	bsd_usage		2675790	1					
ANR	2676045	ExpressionStatement	SetSyscalls ( p_scm )	1739:2:50049:50069	2675790	16	True				
ANR	2676046	CallExpression	SetSyscalls ( p_scm )		2675790	0					
ANR	2676047	Callee	SetSyscalls		2675790	0					
ANR	2676048	Identifier	SetSyscalls		2675790	0					
ANR	2676049	ArgumentList	p_scm		2675790	1					
ANR	2676050	Argument	p_scm		2675790	0					
ANR	2676051	Identifier	p_scm		2675790	0					
ANR	2676052	ElseStatement	else		2675790	0					
ANR	2676053	CompoundStatement		58:8:1941:1941	2675790	0					
ANR	2676054	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1742:2:50084:50129	2675790	0	True				
ANR	2676055	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	0		=			
ANR	2676056	Identifier	scm		2675790	0					
ANR	2676057	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	1					
ANR	2676058	Callee	SetSyscalls		2675790	0					
ANR	2676059	Identifier	SetSyscalls		2675790	0					
ANR	2676060	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2675790	1					
ANR	2676061	Argument	SYS_LOCAL | SYS_UNMAPPED		2675790	0					
ANR	2676062	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2675790	0		|			
ANR	2676063	Identifier	SYS_LOCAL		2675790	0					
ANR	2676064	Identifier	SYS_UNMAPPED		2675790	1					
ANR	2676065	IfStatement	if ( sig == SIGTSTP )		2675790	9					
ANR	2676066	Condition	sig == SIGTSTP	1745:6:50141:50154	2675790	0	True				
ANR	2676067	EqualityExpression	sig == SIGTSTP		2675790	0		==			
ANR	2676068	Identifier	sig		2675790	0					
ANR	2676069	Identifier	SIGTSTP		2675790	1					
ANR	2676070	CompoundStatement		62:23:2019:2019	2675790	1					
ANR	2676071	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got SIGTSTP\\n"" )"	1746:2:50162:50198	2675790	0	True				
ANR	2676072	CallExpression	"dprintf ( D_ALWAYS , ""Got SIGTSTP\\n"" )"		2675790	0					
ANR	2676073	Callee	dprintf		2675790	0					
ANR	2676074	Identifier	dprintf		2675790	0					
ANR	2676075	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676076	Argument	D_ALWAYS		2675790	0					
ANR	2676077	Identifier	D_ALWAYS		2675790	0					
ANR	2676078	Argument	"""Got SIGTSTP\\n"""		2675790	1					
ANR	2676079	PrimaryExpression	"""Got SIGTSTP\\n"""		2675790	0					
ANR	2676080	ElseStatement	else		2675790	0					
ANR	2676081	CompoundStatement		64:8:2069:2069	2675790	0					
ANR	2676082	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got SIGUSR2\\n"" )"	1748:2:50212:50248	2675790	0	True				
ANR	2676083	CallExpression	"dprintf ( D_ALWAYS , ""Got SIGUSR2\\n"" )"		2675790	0					
ANR	2676084	Callee	dprintf		2675790	0					
ANR	2676085	Identifier	dprintf		2675790	0					
ANR	2676086	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676087	Argument	D_ALWAYS		2675790	0					
ANR	2676088	Identifier	D_ALWAYS		2675790	0					
ANR	2676089	Argument	"""Got SIGUSR2\\n"""		2675790	1					
ANR	2676090	PrimaryExpression	"""Got SIGUSR2\\n"""		2675790	0					
ANR	2676091	Statement	undef	1751:1:50255:50259	2675790	10	True				
ANR	2676092	Statement	WAIT_FOR_DEBUGGER	1751:7:50261:50277	2675790	11	True				
ANR	2676093	IdentifierDeclStatement	int wait_up = 1 ;	1753:1:50311:50327	2675790	12	True				
ANR	2676094	IdentifierDecl	wait_up = 1		2675790	0					
ANR	2676095	IdentifierDeclType	int		2675790	0					
ANR	2676096	Identifier	wait_up		2675790	1					
ANR	2676097	AssignmentExpression	wait_up = 1		2675790	2		=			
ANR	2676098	Identifier	wait_up		2675790	0					
ANR	2676099	PrimaryExpression	1		2675790	1					
ANR	2676100	WhileStatement	while ( wait_up )		2675790	13					
ANR	2676101	Condition	wait_up	1754:8:50337:50343	2675790	0	True				
ANR	2676102	Identifier	wait_up		2675790	0					
ANR	2676103	ExpressionStatement		1755:2:50349:50349	2675790	1	True				
ANR	2676104	ExpressionStatement	_condor_save_sigstates ( )	1759:2:50432:50456	2675790	14	True				
ANR	2676105	CallExpression	_condor_save_sigstates ( )		2675790	0					
ANR	2676106	Callee	_condor_save_sigstates		2675790	0					
ANR	2676107	Identifier	_condor_save_sigstates		2675790	0					
ANR	2676108	ArgumentList			2675790	1					
ANR	2676109	ExpressionStatement	"dprintf ( D_ALWAYS , ""Saved signal state.\\n"" )"	1760:2:50460:50503	2675790	15	True				
ANR	2676110	CallExpression	"dprintf ( D_ALWAYS , ""Saved signal state.\\n"" )"		2675790	0					
ANR	2676111	Callee	dprintf		2675790	0					
ANR	2676112	Identifier	dprintf		2675790	0					
ANR	2676113	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676114	Argument	D_ALWAYS		2675790	0					
ANR	2676115	Identifier	D_ALWAYS		2675790	0					
ANR	2676116	Argument	"""Saved signal state.\\n"""		2675790	1					
ANR	2676117	PrimaryExpression	"""Saved signal state.\\n"""		2675790	0					
ANR	2676118	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to save file state\\n"" )"	1762:2:50508:50556	2675790	16	True				
ANR	2676119	CallExpression	"dprintf ( D_ALWAYS , ""About to save file state\\n"" )"		2675790	0					
ANR	2676120	Callee	dprintf		2675790	0					
ANR	2676121	Identifier	dprintf		2675790	0					
ANR	2676122	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676123	Argument	D_ALWAYS		2675790	0					
ANR	2676124	Identifier	D_ALWAYS		2675790	0					
ANR	2676125	Argument	"""About to save file state\\n"""		2675790	1					
ANR	2676126	PrimaryExpression	"""About to save file state\\n"""		2675790	0					
ANR	2676127	ExpressionStatement	_condor_file_table_checkpoint ( )	1763:2:50560:50591	2675790	17	True				
ANR	2676128	CallExpression	_condor_file_table_checkpoint ( )		2675790	0					
ANR	2676129	Callee	_condor_file_table_checkpoint		2675790	0					
ANR	2676130	Identifier	_condor_file_table_checkpoint		2675790	0					
ANR	2676131	ArgumentList			2675790	1					
ANR	2676132	ExpressionStatement	"dprintf ( D_ALWAYS , ""Done saving file state\\n"" )"	1764:2:50595:50641	2675790	18	True				
ANR	2676133	CallExpression	"dprintf ( D_ALWAYS , ""Done saving file state\\n"" )"		2675790	0					
ANR	2676134	Callee	dprintf		2675790	0					
ANR	2676135	Identifier	dprintf		2675790	0					
ANR	2676136	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676137	Argument	D_ALWAYS		2675790	0					
ANR	2676138	Identifier	D_ALWAYS		2675790	0					
ANR	2676139	Argument	"""Done saving file state\\n"""		2675790	1					
ANR	2676140	PrimaryExpression	"""Done saving file state\\n"""		2675790	0					
ANR	2676141	IfStatement	if ( SETJMP ( Env ) == 0 )		2675790	19					
ANR	2676142	Condition	SETJMP ( Env ) == 0	1766:5:50649:50664	2675790	0	True				
ANR	2676143	EqualityExpression	SETJMP ( Env ) == 0		2675790	0		==			
ANR	2676144	CallExpression	SETJMP ( Env )		2675790	0					
ANR	2676145	Callee	SETJMP		2675790	0					
ANR	2676146	Identifier	SETJMP		2675790	0					
ANR	2676147	ArgumentList	Env		2675790	1					
ANR	2676148	Argument	Env		2675790	0					
ANR	2676149	Identifier	Env		2675790	0					
ANR	2676150	PrimaryExpression	0		2675790	1					
ANR	2676151	CompoundStatement		83:24:2529:2529	2675790	1					
ANR	2676152	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to update MyImage\\n"" )"	1778:2:51300:51348	2675790	0	True				
ANR	2676153	CallExpression	"dprintf ( D_ALWAYS , ""About to update MyImage\\n"" )"		2675790	0					
ANR	2676154	Callee	dprintf		2675790	0					
ANR	2676155	Identifier	dprintf		2675790	0					
ANR	2676156	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676157	Argument	D_ALWAYS		2675790	0					
ANR	2676158	Identifier	D_ALWAYS		2675790	0					
ANR	2676159	Argument	"""About to update MyImage\\n"""		2675790	1					
ANR	2676160	PrimaryExpression	"""About to update MyImage\\n"""		2675790	0					
ANR	2676161	ExpressionStatement	MyImage . Save ( )	1779:2:51352:51366	2675790	1	True				
ANR	2676162	CallExpression	MyImage . Save ( )		2675790	0					
ANR	2676163	Callee	MyImage . Save		2675790	0					
ANR	2676164	MemberAccess	MyImage . Save		2675790	0					
ANR	2676165	Identifier	MyImage		2675790	0					
ANR	2676166	Identifier	Save		2675790	1					
ANR	2676167	ArgumentList			2675790	1					
ANR	2676168	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		2675790	2					
ANR	2676169	Condition	MyImage . GetMode ( ) == REMOTE	1786:6:51656:51682	2675790	0	True				
ANR	2676170	EqualityExpression	MyImage . GetMode ( ) == REMOTE		2675790	0		==			
ANR	2676171	CallExpression	MyImage . GetMode ( )		2675790	0					
ANR	2676172	Callee	MyImage . GetMode		2675790	0					
ANR	2676173	MemberAccess	MyImage . GetMode		2675790	0					
ANR	2676174	Identifier	MyImage		2675790	0					
ANR	2676175	Identifier	GetMode		2675790	1					
ANR	2676176	ArgumentList			2675790	1					
ANR	2676177	Identifier	REMOTE		2675790	1					
ANR	2676178	CompoundStatement		113:3:3902:3937	2675790	1					
ANR	2676179	ExpressionStatement	report_image_size ( ( MyImage . GetLen ( ) + KILO - 1 ) / KILO )	1788:3:51737:51794	2675790	0	True				
ANR	2676180	CallExpression	report_image_size ( ( MyImage . GetLen ( ) + KILO - 1 ) / KILO )		2675790	0					
ANR	2676181	Callee	report_image_size		2675790	0					
ANR	2676182	Identifier	report_image_size		2675790	0					
ANR	2676183	ArgumentList	( MyImage . GetLen ( ) + KILO - 1 ) / KILO		2675790	1					
ANR	2676184	Argument	( MyImage . GetLen ( ) + KILO - 1 ) / KILO		2675790	0					
ANR	2676185	MultiplicativeExpression	( MyImage . GetLen ( ) + KILO - 1 ) / KILO		2675790	0		/			
ANR	2676186	AdditiveExpression	MyImage . GetLen ( ) + KILO - 1		2675790	0		+			
ANR	2676187	CallExpression	MyImage . GetLen ( )		2675790	0					
ANR	2676188	Callee	MyImage . GetLen		2675790	0					
ANR	2676189	MemberAccess	MyImage . GetLen		2675790	0					
ANR	2676190	Identifier	MyImage		2675790	0					
ANR	2676191	Identifier	GetLen		2675790	1					
ANR	2676192	ArgumentList			2675790	1					
ANR	2676193	AdditiveExpression	KILO - 1		2675790	1		-			
ANR	2676194	Identifier	KILO		2675790	0					
ANR	2676195	PrimaryExpression	1		2675790	1					
ANR	2676196	Identifier	KILO		2675790	1					
ANR	2676197	IdentifierDeclStatement	int mode = get_ckpt_mode ( check_sig ) ;	1796:3:52041:52076	2675790	1	True				
ANR	2676198	IdentifierDecl	mode = get_ckpt_mode ( check_sig )		2675790	0					
ANR	2676199	IdentifierDeclType	int		2675790	0					
ANR	2676200	Identifier	mode		2675790	1					
ANR	2676201	AssignmentExpression	mode = get_ckpt_mode ( check_sig )		2675790	2		=			
ANR	2676202	Identifier	mode		2675790	0					
ANR	2676203	CallExpression	get_ckpt_mode ( check_sig )		2675790	1					
ANR	2676204	Callee	get_ckpt_mode		2675790	0					
ANR	2676205	Identifier	get_ckpt_mode		2675790	0					
ANR	2676206	ArgumentList	check_sig		2675790	1					
ANR	2676207	Argument	check_sig		2675790	0					
ANR	2676208	Identifier	check_sig		2675790	0					
ANR	2676209	IfStatement	if ( mode > 0 )		2675790	2					
ANR	2676210	Condition	mode > 0	1797:7:52085:52092	2675790	0	True				
ANR	2676211	RelationalExpression	mode > 0		2675790	0		>			
ANR	2676212	Identifier	mode		2675790	0					
ANR	2676213	PrimaryExpression	0		2675790	1					
ANR	2676214	CompoundStatement		114:17:3956:3956	2675790	1					
ANR	2676215	ExpressionStatement	condor_compress_ckpt = ( mode & CKPT_MODE_USE_COMPRESSION ) ? 1 : 0	1798:4:52101:52160	2675790	0	True				
ANR	2676216	AssignmentExpression	condor_compress_ckpt = ( mode & CKPT_MODE_USE_COMPRESSION ) ? 1 : 0		2675790	0		=			
ANR	2676217	Identifier	condor_compress_ckpt		2675790	0					
ANR	2676218	ConditionalExpression	( mode & CKPT_MODE_USE_COMPRESSION ) ? 1 : 0		2675790	1					
ANR	2676219	Condition	mode & CKPT_MODE_USE_COMPRESSION		2675790	0					
ANR	2676220	BitAndExpression	mode & CKPT_MODE_USE_COMPRESSION		2675790	0		&			
ANR	2676221	Identifier	mode		2675790	0					
ANR	2676222	Identifier	CKPT_MODE_USE_COMPRESSION		2675790	1					
ANR	2676223	PrimaryExpression	1		2675790	1					
ANR	2676224	PrimaryExpression	0		2675790	2					
ANR	2676225	IfStatement	if ( mode & CKPT_MODE_SLOW )		2675790	1					
ANR	2676226	Condition	mode & CKPT_MODE_SLOW	1799:8:52170:52188	2675790	0	True				
ANR	2676227	BitAndExpression	mode & CKPT_MODE_SLOW		2675790	0		&			
ANR	2676228	Identifier	mode		2675790	0					
ANR	2676229	Identifier	CKPT_MODE_SLOW		2675790	1					
ANR	2676230	CompoundStatement		116:29:4052:4052	2675790	1					
ANR	2676231	ExpressionStatement	condor_slow_ckpt = get_ckpt_speed ( )	1800:5:52198:52233	2675790	0	True				
ANR	2676232	AssignmentExpression	condor_slow_ckpt = get_ckpt_speed ( )		2675790	0		=			
ANR	2676233	Identifier	condor_slow_ckpt		2675790	0					
ANR	2676234	CallExpression	get_ckpt_speed ( )		2675790	1					
ANR	2676235	Callee	get_ckpt_speed		2675790	0					
ANR	2676236	Identifier	get_ckpt_speed		2675790	0					
ANR	2676237	ArgumentList			2675790	1					
ANR	2676238	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpointing at %d KB/s.\\n"" , condor_slow_ckpt )"	1801:5:52240:52313	2675790	1	True				
ANR	2676239	CallExpression	"dprintf ( D_ALWAYS , ""Checkpointing at %d KB/s.\\n"" , condor_slow_ckpt )"		2675790	0					
ANR	2676240	Callee	dprintf		2675790	0					
ANR	2676241	Identifier	dprintf		2675790	0					
ANR	2676242	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676243	Argument	D_ALWAYS		2675790	0					
ANR	2676244	Identifier	D_ALWAYS		2675790	0					
ANR	2676245	Argument	"""Checkpointing at %d KB/s.\\n"""		2675790	1					
ANR	2676246	PrimaryExpression	"""Checkpointing at %d KB/s.\\n"""		2675790	0					
ANR	2676247	Argument	condor_slow_ckpt		2675790	2					
ANR	2676248	Identifier	condor_slow_ckpt		2675790	0					
ANR	2676249	ElseStatement	else		2675790	0					
ANR	2676250	CompoundStatement		120:11:4187:4187	2675790	0					
ANR	2676251	ExpressionStatement	condor_slow_ckpt = 0	1804:5:52333:52353	2675790	0	True				
ANR	2676252	AssignmentExpression	condor_slow_ckpt = 0		2675790	0		=			
ANR	2676253	Identifier	condor_slow_ckpt		2675790	0					
ANR	2676254	PrimaryExpression	0		2675790	1					
ANR	2676255	IfStatement	if ( mode & CKPT_MODE_MSYNC )		2675790	2					
ANR	2676256	Condition	mode & CKPT_MODE_MSYNC	1806:8:52369:52388	2675790	0	True				
ANR	2676257	BitAndExpression	mode & CKPT_MODE_MSYNC		2675790	0		&			
ANR	2676258	Identifier	mode		2675790	0					
ANR	2676259	Identifier	CKPT_MODE_MSYNC		2675790	1					
ANR	2676260	CompoundStatement		123:30:4252:4252	2675790	1					
ANR	2676261	ExpressionStatement	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"	1807:5:52398:52471	2675790	0	True				
ANR	2676262	CallExpression	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"		2675790	0					
ANR	2676263	Callee	dprintf		2675790	0					
ANR	2676264	Identifier	dprintf		2675790	0					
ANR	2676265	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676266	Argument	D_ALWAYS		2675790	0					
ANR	2676267	Identifier	D_ALWAYS		2675790	0					
ANR	2676268	Argument	"""Performing an msync() on all dirty pages...\\n"""		2675790	1					
ANR	2676269	PrimaryExpression	"""Performing an msync() on all dirty pages...\\n"""		2675790	0					
ANR	2676270	ExpressionStatement	MyImage . MSync ( )	1809:5:52478:52493	2675790	1	True				
ANR	2676271	CallExpression	MyImage . MSync ( )		2675790	0					
ANR	2676272	Callee	MyImage . MSync		2675790	0					
ANR	2676273	MemberAccess	MyImage . MSync		2675790	0					
ANR	2676274	Identifier	MyImage		2675790	0					
ANR	2676275	Identifier	MSync		2675790	1					
ANR	2676276	ArgumentList			2675790	1					
ANR	2676277	IfStatement	if ( mode & CKPT_MODE_ABORT )		2675790	3					
ANR	2676278	Condition	mode & CKPT_MODE_ABORT	1811:8:52509:52528	2675790	0	True				
ANR	2676279	BitAndExpression	mode & CKPT_MODE_ABORT		2675790	0		&			
ANR	2676280	Identifier	mode		2675790	0					
ANR	2676281	Identifier	CKPT_MODE_ABORT		2675790	1					
ANR	2676282	CompoundStatement		128:30:4392:4392	2675790	1					
ANR	2676283	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint aborted by shadow request.\\n"" )"	1812:5:52538:52605	2675790	0	True				
ANR	2676284	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint aborted by shadow request.\\n"" )"		2675790	0					
ANR	2676285	Callee	dprintf		2675790	0					
ANR	2676286	Identifier	dprintf		2675790	0					
ANR	2676287	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676288	Argument	D_ALWAYS		2675790	0					
ANR	2676289	Identifier	D_ALWAYS		2675790	0					
ANR	2676290	Argument	"""Checkpoint aborted by shadow request.\\n"""		2675790	1					
ANR	2676291	PrimaryExpression	"""Checkpoint aborted by shadow request.\\n"""		2675790	0					
ANR	2676292	IfStatement	if ( check_sig == SIGTSTP )		2675790	1					
ANR	2676293	Condition	check_sig == SIGTSTP	1819:9:52841:52860	2675790	0	True				
ANR	2676294	EqualityExpression	check_sig == SIGTSTP		2675790	0		==			
ANR	2676295	Identifier	check_sig		2675790	0					
ANR	2676296	Identifier	SIGTSTP		2675790	1					
ANR	2676297	CompoundStatement		136:31:4724:4724	2675790	1					
ANR	2676298	Statement	dprintf	1820:6:52871:52877	2675790	0	True				
ANR	2676299	Statement	(	1820:13:52878:52878	2675790	1	True				
ANR	2676300	Statement	D_ALWAYS	1820:15:52880:52887	2675790	2	True				
ANR	2676301	Statement	","	1820:23:52888:52888	2675790	3	True				
ANR	2676302	Statement	"""Checkpoint during a vacate while """	1820:25:52890:52924	2675790	4	True				
ANR	2676303	Statement	"""WantCheckpoint = False, aborting """	1821:11:52937:52971	2675790	5	True				
ANR	2676304	Statement	"""the checkpoint and commiting """	1822:11:52984:53014	2675790	6	True				
ANR	2676305	Statement	"""Suicide().\\n"""	1823:11:53027:53040	2675790	7	True				
ANR	2676306	Statement	)	1823:25:53041:53041	2675790	8	True				
ANR	2676307	ExpressionStatement		1823:26:53042:53042	2675790	9	True				
ANR	2676308	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1824:6:53050:53089	2675790	10	True				
ANR	2676309	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	0					
ANR	2676310	Callee	SetSyscalls		2675790	0					
ANR	2676311	Identifier	SetSyscalls		2675790	0					
ANR	2676312	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2675790	1					
ANR	2676313	Argument	SYS_LOCAL | SYS_UNMAPPED		2675790	0					
ANR	2676314	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2675790	0		|			
ANR	2676315	Identifier	SYS_LOCAL		2675790	0					
ANR	2676316	Identifier	SYS_UNMAPPED		2675790	1					
ANR	2676317	ExpressionStatement	Suicide ( )	1825:6:53097:53106	2675790	11	True				
ANR	2676318	CallExpression	Suicide ( )		2675790	0					
ANR	2676319	Callee	Suicide		2675790	0					
ANR	2676320	Identifier	Suicide		2675790	0					
ANR	2676321	ArgumentList			2675790	1					
ANR	2676322	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"	1831:5:53218:53269	2675790	2	True				
ANR	2676323	CallExpression	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"		2675790	0					
ANR	2676324	Callee	dprintf		2675790	0					
ANR	2676325	Identifier	dprintf		2675790	0					
ANR	2676326	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676327	Argument	D_ALWAYS		2675790	0					
ANR	2676328	Identifier	D_ALWAYS		2675790	0					
ANR	2676329	Argument	"""About to restore file state\\n"""		2675790	1					
ANR	2676330	PrimaryExpression	"""About to restore file state\\n"""		2675790	0					
ANR	2676331	ExpressionStatement	_condor_file_table_resume ( )	1832:5:53276:53303	2675790	3	True				
ANR	2676332	CallExpression	_condor_file_table_resume ( )		2675790	0					
ANR	2676333	Callee	_condor_file_table_resume		2675790	0					
ANR	2676334	Identifier	_condor_file_table_resume		2675790	0					
ANR	2676335	ArgumentList			2675790	1					
ANR	2676336	ExpressionStatement	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"	1833:5:53310:53360	2675790	4	True				
ANR	2676337	CallExpression	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"		2675790	0					
ANR	2676338	Callee	dprintf		2675790	0					
ANR	2676339	Identifier	dprintf		2675790	0					
ANR	2676340	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676341	Argument	D_ALWAYS		2675790	0					
ANR	2676342	Identifier	D_ALWAYS		2675790	0					
ANR	2676343	Argument	"""Done restoring file state\\n"""		2675790	1					
ANR	2676344	PrimaryExpression	"""Done restoring file state\\n"""		2675790	0					
ANR	2676345	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"	1835:5:53368:53422	2675790	5	True				
ANR	2676346	CallExpression	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"		2675790	0					
ANR	2676347	Callee	dprintf		2675790	0					
ANR	2676348	Identifier	dprintf		2675790	0					
ANR	2676349	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676350	Argument	D_ALWAYS		2675790	0					
ANR	2676351	Identifier	D_ALWAYS		2675790	0					
ANR	2676352	Argument	"""About to restore signal state\\n"""		2675790	1					
ANR	2676353	PrimaryExpression	"""About to restore signal state\\n"""		2675790	0					
ANR	2676354	ExpressionStatement	_condor_restore_sigstates ( )	1836:5:53429:53456	2675790	6	True				
ANR	2676355	CallExpression	_condor_restore_sigstates ( )		2675790	0					
ANR	2676356	Callee	_condor_restore_sigstates		2675790	0					
ANR	2676357	Identifier	_condor_restore_sigstates		2675790	0					
ANR	2676358	ArgumentList			2675790	1					
ANR	2676359	ExpressionStatement	SetSyscalls ( scm )	1838:5:53464:53482	2675790	7	True				
ANR	2676360	CallExpression	SetSyscalls ( scm )		2675790	0					
ANR	2676361	Callee	SetSyscalls		2675790	0					
ANR	2676362	Identifier	SetSyscalls		2675790	0					
ANR	2676363	ArgumentList	scm		2675790	1					
ANR	2676364	Argument	scm		2675790	0					
ANR	2676365	Identifier	scm		2675790	0					
ANR	2676366	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"	1839:5:53489:53542	2675790	8	True				
ANR	2676367	CallExpression	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"		2675790	0					
ANR	2676368	Callee	dprintf		2675790	0					
ANR	2676369	Identifier	dprintf		2675790	0					
ANR	2676370	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676371	Argument	D_ALWAYS		2675790	0					
ANR	2676372	Identifier	D_ALWAYS		2675790	0					
ANR	2676373	Argument	"""About to return to user code\\n"""		2675790	1					
ANR	2676374	PrimaryExpression	"""About to return to user code\\n"""		2675790	0					
ANR	2676375	ExpressionStatement	InRestart = FALSE	1840:5:53549:53566	2675790	9	True				
ANR	2676376	AssignmentExpression	InRestart = FALSE		2675790	0		=			
ANR	2676377	Identifier	InRestart		2675790	0					
ANR	2676378	Identifier	FALSE		2675790	1					
ANR	2676379	ExpressionStatement	_condor_signals_enable ( mask )	1841:5:53573:53601	2675790	10	True				
ANR	2676380	CallExpression	_condor_signals_enable ( mask )		2675790	0					
ANR	2676381	Callee	_condor_signals_enable		2675790	0					
ANR	2676382	Identifier	_condor_signals_enable		2675790	0					
ANR	2676383	ArgumentList	mask		2675790	1					
ANR	2676384	Argument	mask		2675790	0					
ANR	2676385	Identifier	mask		2675790	0					
ANR	2676386	ReturnStatement	return ;	1842:5:53608:53614	2675790	11	True				
ANR	2676387	ElseStatement	else		2675790	0					
ANR	2676388	CompoundStatement		161:10:5493:5493	2675790	0					
ANR	2676389	ExpressionStatement	condor_compress_ckpt = condor_slow_ckpt = 0	1845:4:53638:53681	2675790	0	True				
ANR	2676390	AssignmentExpression	condor_compress_ckpt = condor_slow_ckpt = 0		2675790	0		=			
ANR	2676391	Identifier	condor_compress_ckpt		2675790	0					
ANR	2676392	AssignmentExpression	condor_slow_ckpt = 0		2675790	1		=			
ANR	2676393	Identifier	condor_slow_ckpt		2675790	0					
ANR	2676394	PrimaryExpression	0		2675790	1					
ANR	2676395	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to write checkpoint\\n"" )"	1849:2:53695:53744	2675790	3	True				
ANR	2676396	CallExpression	"dprintf ( D_ALWAYS , ""About to write checkpoint\\n"" )"		2675790	0					
ANR	2676397	Callee	dprintf		2675790	0					
ANR	2676398	Identifier	dprintf		2675790	0					
ANR	2676399	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676400	Argument	D_ALWAYS		2675790	0					
ANR	2676401	Identifier	D_ALWAYS		2675790	0					
ANR	2676402	Argument	"""About to write checkpoint\\n"""		2675790	1					
ANR	2676403	PrimaryExpression	"""About to write checkpoint\\n"""		2675790	0					
ANR	2676404	ExpressionStatement	write_result = MyImage . Write ( )	1850:2:53748:53778	2675790	4	True				
ANR	2676405	AssignmentExpression	write_result = MyImage . Write ( )		2675790	0		=			
ANR	2676406	Identifier	write_result		2675790	0					
ANR	2676407	CallExpression	MyImage . Write ( )		2675790	1					
ANR	2676408	Callee	MyImage . Write		2675790	0					
ANR	2676409	MemberAccess	MyImage . Write		2675790	0					
ANR	2676410	Identifier	MyImage		2675790	0					
ANR	2676411	Identifier	Write		2675790	1					
ANR	2676412	ArgumentList			2675790	1					
ANR	2676413	IfStatement	if ( sig == SIGTSTP )		2675790	5					
ANR	2676414	Condition	sig == SIGTSTP	1851:7:53787:53800	2675790	0	True				
ANR	2676415	EqualityExpression	sig == SIGTSTP		2675790	0		==			
ANR	2676416	Identifier	sig		2675790	0					
ANR	2676417	Identifier	SIGTSTP		2675790	1					
ANR	2676418	CompoundStatement		168:24:5665:5665	2675790	1					
ANR	2676419	ExpressionStatement	"dprintf ( D_ALWAYS , ""Ckpt exit\\n"" )"	1853:3:53864:53899	2675790	0	True				
ANR	2676420	CallExpression	"dprintf ( D_ALWAYS , ""Ckpt exit\\n"" )"		2675790	0					
ANR	2676421	Callee	dprintf		2675790	0					
ANR	2676422	Identifier	dprintf		2675790	0					
ANR	2676423	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676424	Argument	D_ALWAYS		2675790	0					
ANR	2676425	Identifier	D_ALWAYS		2675790	0					
ANR	2676426	Argument	"""Ckpt exit\\n"""		2675790	1					
ANR	2676427	PrimaryExpression	"""Ckpt exit\\n"""		2675790	0					
ANR	2676428	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1854:3:53904:53943	2675790	1	True				
ANR	2676429	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	0					
ANR	2676430	Callee	SetSyscalls		2675790	0					
ANR	2676431	Identifier	SetSyscalls		2675790	0					
ANR	2676432	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2675790	1					
ANR	2676433	Argument	SYS_LOCAL | SYS_UNMAPPED		2675790	0					
ANR	2676434	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2675790	0		|			
ANR	2676435	Identifier	SYS_LOCAL		2675790	0					
ANR	2676436	Identifier	SYS_UNMAPPED		2675790	1					
ANR	2676437	IfStatement	if ( write_result == 0 )		2675790	2					
ANR	2676438	Condition	write_result == 0	1855:8:53953:53969	2675790	0	True				
ANR	2676439	EqualityExpression	write_result == 0		2675790	0		==			
ANR	2676440	Identifier	write_result		2675790	0					
ANR	2676441	PrimaryExpression	0		2675790	1					
ANR	2676442	CompoundStatement		172:28:5834:5834	2675790	1					
ANR	2676443	ExpressionStatement	terminate_with_sig ( SIGUSR2 )	1856:4:53979:54008	2675790	0	True				
ANR	2676444	CallExpression	terminate_with_sig ( SIGUSR2 )		2675790	0					
ANR	2676445	Callee	terminate_with_sig		2675790	0					
ANR	2676446	Identifier	terminate_with_sig		2675790	0					
ANR	2676447	ArgumentList	SIGUSR2		2675790	1					
ANR	2676448	Argument	SIGUSR2		2675790	0					
ANR	2676449	Identifier	SIGUSR2		2675790	0					
ANR	2676450	ElseStatement	else		2675790	0					
ANR	2676451	CompoundStatement		175:10:5920:5920	2675790	0					
ANR	2676452	ExpressionStatement	"dprintf ( D_ALWAYS , ""Write failed with [%d]\\n"" , write_result )"	1859:4:54065:54124	2675790	0	True				
ANR	2676453	CallExpression	"dprintf ( D_ALWAYS , ""Write failed with [%d]\\n"" , write_result )"		2675790	0					
ANR	2676454	Callee	dprintf		2675790	0					
ANR	2676455	Identifier	dprintf		2675790	0					
ANR	2676456	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676457	Argument	D_ALWAYS		2675790	0					
ANR	2676458	Identifier	D_ALWAYS		2675790	0					
ANR	2676459	Argument	"""Write failed with [%d]\\n"""		2675790	1					
ANR	2676460	PrimaryExpression	"""Write failed with [%d]\\n"""		2675790	0					
ANR	2676461	Argument	write_result		2675790	2					
ANR	2676462	Identifier	write_result		2675790	0					
ANR	2676463	ExpressionStatement	Suicide ( )	1860:4:54130:54139	2675790	1	True				
ANR	2676464	CallExpression	Suicide ( )		2675790	0					
ANR	2676465	Callee	Suicide		2675790	0					
ANR	2676466	Identifier	Suicide		2675790	0					
ANR	2676467	ArgumentList			2675790	1					
ANR	2676468	ExpressionStatement	"dprintf ( D_ALWAYS , ""You should never see this line in the log!\\n"" )"	1863:3:54180:54245	2675790	3	True				
ANR	2676469	CallExpression	"dprintf ( D_ALWAYS , ""You should never see this line in the log!\\n"" )"		2675790	0					
ANR	2676470	Callee	dprintf		2675790	0					
ANR	2676471	Identifier	dprintf		2675790	0					
ANR	2676472	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676473	Argument	D_ALWAYS		2675790	0					
ANR	2676474	Identifier	D_ALWAYS		2675790	0					
ANR	2676475	Argument	"""You should never see this line in the log!\\n"""		2675790	1					
ANR	2676476	PrimaryExpression	"""You should never see this line in the log!\\n"""		2675790	0					
ANR	2676477	ElseStatement	else		2675790	0					
ANR	2676478	CompoundStatement		181:9:6117:6117	2675790	0					
ANR	2676479	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		2675790	0					
ANR	2676480	Condition	MyImage . GetMode ( ) == REMOTE	1865:8:54266:54292	2675790	0	True				
ANR	2676481	EqualityExpression	MyImage . GetMode ( ) == REMOTE		2675790	0		==			
ANR	2676482	CallExpression	MyImage . GetMode ( )		2675790	0					
ANR	2676483	Callee	MyImage . GetMode		2675790	0					
ANR	2676484	MemberAccess	MyImage . GetMode		2675790	0					
ANR	2676485	Identifier	MyImage		2675790	0					
ANR	2676486	Identifier	GetMode		2675790	1					
ANR	2676487	ArgumentList			2675790	1					
ANR	2676488	Identifier	REMOTE		2675790	1					
ANR	2676489	CompoundStatement		182:38:6157:6157	2675790	1					
ANR	2676490	ExpressionStatement	MyImage . SetFd ( - 1 )	1871:4:54501:54520	2675790	0	True				
ANR	2676491	CallExpression	MyImage . SetFd ( - 1 )		2675790	0					
ANR	2676492	Callee	MyImage . SetFd		2675790	0					
ANR	2676493	MemberAccess	MyImage . SetFd		2675790	0					
ANR	2676494	Identifier	MyImage		2675790	0					
ANR	2676495	Identifier	SetFd		2675790	1					
ANR	2676496	ArgumentList	- 1		2675790	1					
ANR	2676497	Argument	- 1		2675790	0					
ANR	2676498	UnaryOperationExpression	- 1		2675790	0					
ANR	2676499	UnaryOperator	-		2675790	0					
ANR	2676500	PrimaryExpression	1		2675790	1					
ANR	2676501	ExpressionStatement	do_full_restart = 0	1874:3:54531:54550	2675790	1	True				
ANR	2676502	AssignmentExpression	do_full_restart = 0		2675790	0		=			
ANR	2676503	Identifier	do_full_restart		2675790	0					
ANR	2676504	PrimaryExpression	0		2675790	1					
ANR	2676505	ExpressionStatement	"dprintf ( D_ALWAYS , ""Periodic Ckpt complete, doing a virtual restart...\\n"" )"	1875:3:54555:54628	2675790	2	True				
ANR	2676506	CallExpression	"dprintf ( D_ALWAYS , ""Periodic Ckpt complete, doing a virtual restart...\\n"" )"		2675790	0					
ANR	2676507	Callee	dprintf		2675790	0					
ANR	2676508	Identifier	dprintf		2675790	0					
ANR	2676509	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676510	Argument	D_ALWAYS		2675790	0					
ANR	2676511	Identifier	D_ALWAYS		2675790	0					
ANR	2676512	Argument	"""Periodic Ckpt complete, doing a virtual restart...\\n"""		2675790	1					
ANR	2676513	PrimaryExpression	"""Periodic Ckpt complete, doing a virtual restart...\\n"""		2675790	0					
ANR	2676514	ExpressionStatement	"LONGJMP ( Env , 1 )"	1876:3:54633:54649	2675790	3	True				
ANR	2676515	CallExpression	"LONGJMP ( Env , 1 )"		2675790	0					
ANR	2676516	Callee	LONGJMP		2675790	0					
ANR	2676517	Identifier	LONGJMP		2675790	0					
ANR	2676518	ArgumentList	Env		2675790	1					
ANR	2676519	Argument	Env		2675790	0					
ANR	2676520	Identifier	Env		2675790	0					
ANR	2676521	Argument	1		2675790	1					
ANR	2676522	PrimaryExpression	1		2675790	0					
ANR	2676523	ElseStatement	else		2675790	0					
ANR	2676524	CompoundStatement		230:2:7446:7470	2675790	0					
ANR	2676525	IfStatement	if ( do_full_restart )		2675790	0					
ANR	2676526	Condition	do_full_restart	1879:7:54687:54701	2675790	0	True				
ANR	2676527	Identifier	do_full_restart		2675790	0					
ANR	2676528	CompoundStatement		207:3:6813:6840	2675790	1					
ANR	2676529	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1880:3:54710:54755	2675790	0	True				
ANR	2676530	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	0		=			
ANR	2676531	Identifier	scm		2675790	0					
ANR	2676532	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2675790	1					
ANR	2676533	Callee	SetSyscalls		2675790	0					
ANR	2676534	Identifier	SetSyscalls		2675790	0					
ANR	2676535	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2675790	1					
ANR	2676536	Argument	SYS_LOCAL | SYS_UNMAPPED		2675790	0					
ANR	2676537	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2675790	0		|			
ANR	2676538	Identifier	SYS_LOCAL		2675790	0					
ANR	2676539	Identifier	SYS_UNMAPPED		2675790	1					
ANR	2676540	ExpressionStatement	patch_registers ( scp )	1881:3:54760:54782	2675790	1	True				
ANR	2676541	CallExpression	patch_registers ( scp )		2675790	0					
ANR	2676542	Callee	patch_registers		2675790	0					
ANR	2676543	Identifier	patch_registers		2675790	0					
ANR	2676544	ArgumentList	scp		2675790	1					
ANR	2676545	Argument	scp		2675790	0					
ANR	2676546	Identifier	scp		2675790	0					
ANR	2676547	ExpressionStatement	MyImage . Close ( )	1882:3:54787:54802	2675790	2	True				
ANR	2676548	CallExpression	MyImage . Close ( )		2675790	0					
ANR	2676549	Callee	MyImage . Close		2675790	0					
ANR	2676550	MemberAccess	MyImage . Close		2675790	0					
ANR	2676551	Identifier	MyImage		2675790	0					
ANR	2676552	Identifier	Close		2675790	1					
ANR	2676553	ArgumentList			2675790	1					
ANR	2676554	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		2675790	3					
ANR	2676555	Condition	MyImage . GetMode ( ) == REMOTE	1884:7:54812:54838	2675790	0	True				
ANR	2676556	EqualityExpression	MyImage . GetMode ( ) == REMOTE		2675790	0		==			
ANR	2676557	CallExpression	MyImage . GetMode ( )		2675790	0					
ANR	2676558	Callee	MyImage . GetMode		2675790	0					
ANR	2676559	MemberAccess	MyImage . GetMode		2675790	0					
ANR	2676560	Identifier	MyImage		2675790	0					
ANR	2676561	Identifier	GetMode		2675790	1					
ANR	2676562	ArgumentList			2675790	1					
ANR	2676563	Identifier	REMOTE		2675790	1					
ANR	2676564	CompoundStatement		201:37:6703:6703	2675790	1					
ANR	2676565	ExpressionStatement	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )	1885:4:54848:54886	2675790	0	True				
ANR	2676566	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		2675790	0					
ANR	2676567	Callee	SetSyscalls		2675790	0					
ANR	2676568	Identifier	SetSyscalls		2675790	0					
ANR	2676569	ArgumentList	SYS_REMOTE | SYS_MAPPED		2675790	1					
ANR	2676570	Argument	SYS_REMOTE | SYS_MAPPED		2675790	0					
ANR	2676571	InclusiveOrExpression	SYS_REMOTE | SYS_MAPPED		2675790	0		|			
ANR	2676572	Identifier	SYS_REMOTE		2675790	0					
ANR	2676573	Identifier	SYS_MAPPED		2675790	1					
ANR	2676574	ElseStatement	else		2675790	0					
ANR	2676575	CompoundStatement		203:10:6759:6759	2675790	0					
ANR	2676576	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )	1887:4:54904:54941	2675790	0	True				
ANR	2676577	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )		2675790	0					
ANR	2676578	Callee	SetSyscalls		2675790	0					
ANR	2676579	Identifier	SetSyscalls		2675790	0					
ANR	2676580	ArgumentList	SYS_LOCAL | SYS_MAPPED		2675790	1					
ANR	2676581	Argument	SYS_LOCAL | SYS_MAPPED		2675790	0					
ANR	2676582	InclusiveOrExpression	SYS_LOCAL | SYS_MAPPED		2675790	0		|			
ANR	2676583	Identifier	SYS_LOCAL		2675790	0					
ANR	2676584	Identifier	SYS_MAPPED		2675790	1					
ANR	2676585	IdentifierDeclStatement	int mode = get_ckpt_mode ( 0 ) ;	1890:3:54952:54979	2675790	4	True				
ANR	2676586	IdentifierDecl	mode = get_ckpt_mode ( 0 )		2675790	0					
ANR	2676587	IdentifierDeclType	int		2675790	0					
ANR	2676588	Identifier	mode		2675790	1					
ANR	2676589	AssignmentExpression	mode = get_ckpt_mode ( 0 )		2675790	2		=			
ANR	2676590	Identifier	mode		2675790	0					
ANR	2676591	CallExpression	get_ckpt_mode ( 0 )		2675790	1					
ANR	2676592	Callee	get_ckpt_mode		2675790	0					
ANR	2676593	Identifier	get_ckpt_mode		2675790	0					
ANR	2676594	ArgumentList	0		2675790	1					
ANR	2676595	Argument	0		2675790	0					
ANR	2676596	PrimaryExpression	0		2675790	0					
ANR	2676597	IfStatement	if ( mode > 0 )		2675790	5					
ANR	2676598	Condition	mode > 0	1891:7:54988:54995	2675790	0	True				
ANR	2676599	RelationalExpression	mode > 0		2675790	0		>			
ANR	2676600	Identifier	mode		2675790	0					
ANR	2676601	PrimaryExpression	0		2675790	1					
ANR	2676602	CompoundStatement		208:17:6859:6859	2675790	1					
ANR	2676603	IfStatement	if ( mode & CKPT_MODE_MSYNC )		2675790	0					
ANR	2676604	Condition	mode & CKPT_MODE_MSYNC	1892:8:55008:55027	2675790	0	True				
ANR	2676605	BitAndExpression	mode & CKPT_MODE_MSYNC		2675790	0		&			
ANR	2676606	Identifier	mode		2675790	0					
ANR	2676607	Identifier	CKPT_MODE_MSYNC		2675790	1					
ANR	2676608	CompoundStatement		209:30:6891:6891	2675790	1					
ANR	2676609	ExpressionStatement	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"	1893:5:55037:55110	2675790	0	True				
ANR	2676610	CallExpression	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"		2675790	0					
ANR	2676611	Callee	dprintf		2675790	0					
ANR	2676612	Identifier	dprintf		2675790	0					
ANR	2676613	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676614	Argument	D_ALWAYS		2675790	0					
ANR	2676615	Identifier	D_ALWAYS		2675790	0					
ANR	2676616	Argument	"""Performing an msync() on all dirty pages...\\n"""		2675790	1					
ANR	2676617	PrimaryExpression	"""Performing an msync() on all dirty pages...\\n"""		2675790	0					
ANR	2676618	ExpressionStatement	MyImage . MSync ( )	1895:5:55117:55132	2675790	1	True				
ANR	2676619	CallExpression	MyImage . MSync ( )		2675790	0					
ANR	2676620	Callee	MyImage . MSync		2675790	0					
ANR	2676621	MemberAccess	MyImage . MSync		2675790	0					
ANR	2676622	Identifier	MyImage		2675790	0					
ANR	2676623	Identifier	MSync		2675790	1					
ANR	2676624	ArgumentList			2675790	1					
ANR	2676625	IfStatement	if ( mode & CKPT_MODE_ABORT )		2675790	1					
ANR	2676626	Condition	mode & CKPT_MODE_ABORT	1897:8:55148:55167	2675790	0	True				
ANR	2676627	BitAndExpression	mode & CKPT_MODE_ABORT		2675790	0		&			
ANR	2676628	Identifier	mode		2675790	0					
ANR	2676629	Identifier	CKPT_MODE_ABORT		2675790	1					
ANR	2676630	CompoundStatement		214:30:7031:7031	2675790	1					
ANR	2676631	ExpressionStatement	"dprintf ( D_ALWAYS , ""Restart aborted by shadow request.\\n"" )"	1898:5:55177:55234	2675790	0	True				
ANR	2676632	CallExpression	"dprintf ( D_ALWAYS , ""Restart aborted by shadow request.\\n"" )"		2675790	0					
ANR	2676633	Callee	dprintf		2675790	0					
ANR	2676634	Identifier	dprintf		2675790	0					
ANR	2676635	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676636	Argument	D_ALWAYS		2675790	0					
ANR	2676637	Identifier	D_ALWAYS		2675790	0					
ANR	2676638	Argument	"""Restart aborted by shadow request.\\n"""		2675790	1					
ANR	2676639	PrimaryExpression	"""Restart aborted by shadow request.\\n"""		2675790	0					
ANR	2676640	ExpressionStatement	Suicide ( )	1899:5:55241:55250	2675790	1	True				
ANR	2676641	CallExpression	Suicide ( )		2675790	0					
ANR	2676642	Callee	Suicide		2675790	0					
ANR	2676643	Identifier	Suicide		2675790	0					
ANR	2676644	ArgumentList			2675790	1					
ANR	2676645	ElseStatement	else		2675790	0					
ANR	2676646	CompoundStatement		219:9:7133:7133	2675790	0					
ANR	2676647	ExpressionStatement	patch_registers ( scp )	1903:3:55277:55299	2675790	0	True				
ANR	2676648	CallExpression	patch_registers ( scp )		2675790	0					
ANR	2676649	Callee	patch_registers		2675790	0					
ANR	2676650	Identifier	patch_registers		2675790	0					
ANR	2676651	ArgumentList	scp		2675790	1					
ANR	2676652	Argument	scp		2675790	0					
ANR	2676653	Identifier	scp		2675790	0					
ANR	2676654	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"	1906:2:55308:55359	2675790	1	True				
ANR	2676655	CallExpression	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"		2675790	0					
ANR	2676656	Callee	dprintf		2675790	0					
ANR	2676657	Identifier	dprintf		2675790	0					
ANR	2676658	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676659	Argument	D_ALWAYS		2675790	0					
ANR	2676660	Identifier	D_ALWAYS		2675790	0					
ANR	2676661	Argument	"""About to restore file state\\n"""		2675790	1					
ANR	2676662	PrimaryExpression	"""About to restore file state\\n"""		2675790	0					
ANR	2676663	ExpressionStatement	_condor_file_table_resume ( )	1907:2:55363:55390	2675790	2	True				
ANR	2676664	CallExpression	_condor_file_table_resume ( )		2675790	0					
ANR	2676665	Callee	_condor_file_table_resume		2675790	0					
ANR	2676666	Identifier	_condor_file_table_resume		2675790	0					
ANR	2676667	ArgumentList			2675790	1					
ANR	2676668	ExpressionStatement	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"	1908:2:55394:55444	2675790	3	True				
ANR	2676669	CallExpression	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"		2675790	0					
ANR	2676670	Callee	dprintf		2675790	0					
ANR	2676671	Identifier	dprintf		2675790	0					
ANR	2676672	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676673	Argument	D_ALWAYS		2675790	0					
ANR	2676674	Identifier	D_ALWAYS		2675790	0					
ANR	2676675	Argument	"""Done restoring file state\\n"""		2675790	1					
ANR	2676676	PrimaryExpression	"""Done restoring file state\\n"""		2675790	0					
ANR	2676677	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )	1912:2:55542:55581	2675790	4	True				
ANR	2676678	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		2675790	0					
ANR	2676679	Callee	SetSyscalls		2675790	0					
ANR	2676680	Identifier	SetSyscalls		2675790	0					
ANR	2676681	ArgumentList	SYS_LOCAL | SYS_UNRECORDED		2675790	1					
ANR	2676682	Argument	SYS_LOCAL | SYS_UNRECORDED		2675790	0					
ANR	2676683	InclusiveOrExpression	SYS_LOCAL | SYS_UNRECORDED		2675790	0		|			
ANR	2676684	Identifier	SYS_LOCAL		2675790	0					
ANR	2676685	Identifier	SYS_UNRECORDED		2675790	1					
ANR	2676686	IdentifierDeclStatement	sigset_t pending_sig_set ;	1913:2:55585:55609	2675790	5	True				
ANR	2676687	IdentifierDecl	pending_sig_set		2675790	0					
ANR	2676688	IdentifierDeclType	sigset_t		2675790	0					
ANR	2676689	Identifier	pending_sig_set		2675790	1					
ANR	2676690	ExpressionStatement	sigpending ( & pending_sig_set )	1914:2:55613:55643	2675790	6	True				
ANR	2676691	CallExpression	sigpending ( & pending_sig_set )		2675790	0					
ANR	2676692	Callee	sigpending		2675790	0					
ANR	2676693	Identifier	sigpending		2675790	0					
ANR	2676694	ArgumentList	& pending_sig_set		2675790	1					
ANR	2676695	Argument	& pending_sig_set		2675790	0					
ANR	2676696	UnaryOperationExpression	& pending_sig_set		2675790	0					
ANR	2676697	UnaryOperator	&		2675790	0					
ANR	2676698	Identifier	pending_sig_set		2675790	1					
ANR	2676699	IfStatement	"if ( sigismember ( & pending_sig_set , SIGTSTP ) )"		2675790	7					
ANR	2676700	Condition	"sigismember ( & pending_sig_set , SIGTSTP )"	1915:7:55652:55688	2675790	0	True				
ANR	2676701	CallExpression	"sigismember ( & pending_sig_set , SIGTSTP )"		2675790	0					
ANR	2676702	Callee	sigismember		2675790	0					
ANR	2676703	Identifier	sigismember		2675790	0					
ANR	2676704	ArgumentList	& pending_sig_set		2675790	1					
ANR	2676705	Argument	& pending_sig_set		2675790	0					
ANR	2676706	UnaryOperationExpression	& pending_sig_set		2675790	0					
ANR	2676707	UnaryOperator	&		2675790	0					
ANR	2676708	Identifier	pending_sig_set		2675790	1					
ANR	2676709	Argument	SIGTSTP		2675790	1					
ANR	2676710	Identifier	SIGTSTP		2675790	0					
ANR	2676711	CompoundStatement		232:47:7553:7553	2675790	1					
ANR	2676712	ExpressionStatement	"dprintf ( D_ALWAYS , ""Received a SIGTSTP while checkpointing or restarting.\\n"" )"	1916:3:55697:55777	2675790	0	True				
ANR	2676713	CallExpression	"dprintf ( D_ALWAYS , ""Received a SIGTSTP while checkpointing or restarting.\\n"" )"		2675790	0					
ANR	2676714	Callee	dprintf		2675790	0					
ANR	2676715	Identifier	dprintf		2675790	0					
ANR	2676716	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676717	Argument	D_ALWAYS		2675790	0					
ANR	2676718	Identifier	D_ALWAYS		2675790	0					
ANR	2676719	Argument	"""Received a SIGTSTP while checkpointing or restarting.\\n"""		2675790	1					
ANR	2676720	PrimaryExpression	"""Received a SIGTSTP while checkpointing or restarting.\\n"""		2675790	0					
ANR	2676721	IfStatement	if ( do_full_restart )		2675790	1					
ANR	2676722	Condition	do_full_restart	1918:8:55787:55801	2675790	0	True				
ANR	2676723	Identifier	do_full_restart		2675790	0					
ANR	2676724	CompoundStatement		235:26:7666:7666	2675790	1					
ANR	2676725	ExpressionStatement	Suicide ( )	1923:4:55980:55989	2675790	0	True				
ANR	2676726	CallExpression	Suicide ( )		2675790	0					
ANR	2676727	Callee	Suicide		2675790	0					
ANR	2676728	Identifier	Suicide		2675790	0					
ANR	2676729	ArgumentList			2675790	1					
ANR	2676730	ElseStatement	else		2675790	0					
ANR	2676731	CompoundStatement		241:10:7862:7862	2675790	0					
ANR	2676732	ExpressionStatement	terminate_with_sig ( SIGUSR2 )	1931:4:56315:56342	2675790	0	True				
ANR	2676733	CallExpression	terminate_with_sig ( SIGUSR2 )		2675790	0					
ANR	2676734	Callee	terminate_with_sig		2675790	0					
ANR	2676735	Identifier	terminate_with_sig		2675790	0					
ANR	2676736	ArgumentList	SIGUSR2		2675790	1					
ANR	2676737	Argument	SIGUSR2		2675790	0					
ANR	2676738	Identifier	SIGUSR2		2675790	0					
ANR	2676739	ExpressionStatement	_condor_numrestarts ++	1934:2:56355:56376	2675790	8	True				
ANR	2676740	PostIncDecOperationExpression	_condor_numrestarts ++		2675790	0					
ANR	2676741	Identifier	_condor_numrestarts		2675790	0					
ANR	2676742	IncDec	++		2675790	1					
ANR	2676743	ExpressionStatement	SetSyscalls ( scm )	1935:2:56380:56398	2675790	9	True				
ANR	2676744	CallExpression	SetSyscalls ( scm )		2675790	0					
ANR	2676745	Callee	SetSyscalls		2675790	0					
ANR	2676746	Identifier	SetSyscalls		2675790	0					
ANR	2676747	ArgumentList	scm		2675790	1					
ANR	2676748	Argument	scm		2675790	0					
ANR	2676749	Identifier	scm		2675790	0					
ANR	2676750	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"	1945:2:56699:56753	2675790	10	True				
ANR	2676751	CallExpression	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"		2675790	0					
ANR	2676752	Callee	dprintf		2675790	0					
ANR	2676753	Identifier	dprintf		2675790	0					
ANR	2676754	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676755	Argument	D_ALWAYS		2675790	0					
ANR	2676756	Identifier	D_ALWAYS		2675790	0					
ANR	2676757	Argument	"""About to restore signal state\\n"""		2675790	1					
ANR	2676758	PrimaryExpression	"""About to restore signal state\\n"""		2675790	0					
ANR	2676759	ExpressionStatement	_condor_restore_sigstates ( )	1946:2:56757:56784	2675790	11	True				
ANR	2676760	CallExpression	_condor_restore_sigstates ( )		2675790	0					
ANR	2676761	Callee	_condor_restore_sigstates		2675790	0					
ANR	2676762	Identifier	_condor_restore_sigstates		2675790	0					
ANR	2676763	ArgumentList			2675790	1					
ANR	2676764	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"	1948:2:56789:56842	2675790	12	True				
ANR	2676765	CallExpression	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"		2675790	0					
ANR	2676766	Callee	dprintf		2675790	0					
ANR	2676767	Identifier	dprintf		2675790	0					
ANR	2676768	ArgumentList	D_ALWAYS		2675790	1					
ANR	2676769	Argument	D_ALWAYS		2675790	0					
ANR	2676770	Identifier	D_ALWAYS		2675790	0					
ANR	2676771	Argument	"""About to return to user code\\n"""		2675790	1					
ANR	2676772	PrimaryExpression	"""About to return to user code\\n"""		2675790	0					
ANR	2676773	ExpressionStatement	InRestart = FALSE	1949:2:56846:56863	2675790	13	True				
ANR	2676774	AssignmentExpression	InRestart = FALSE		2675790	0		=			
ANR	2676775	Identifier	InRestart		2675790	0					
ANR	2676776	Identifier	FALSE		2675790	1					
ANR	2676777	ExpressionStatement	_condor_signals_enable ( mask )	1950:2:56867:56895	2675790	14	True				
ANR	2676778	CallExpression	_condor_signals_enable ( mask )		2675790	0					
ANR	2676779	Callee	_condor_signals_enable		2675790	0					
ANR	2676780	Identifier	_condor_signals_enable		2675790	0					
ANR	2676781	ArgumentList	mask		2675790	1					
ANR	2676782	Argument	mask		2675790	0					
ANR	2676783	Identifier	mask		2675790	0					
ANR	2676784	ReturnStatement	return ;	1951:2:56899:56905	2675790	15	True				
ANR	2676785	ReturnType	void		2675790	1					
ANR	2676786	Identifier	Checkpoint		2675790	2					
ANR	2676787	ParameterList	"int sig , int code , void * scp"		2675790	3					
ANR	2676788	Parameter	int sig	1683:12:48107:48113	2675790	0	True				
ANR	2676789	ParameterType	int		2675790	0					
ANR	2676790	Identifier	sig		2675790	1					
ANR	2676791	Parameter	int code	1683:21:48116:48123	2675790	1	True				
ANR	2676792	ParameterType	int		2675790	0					
ANR	2676793	Identifier	code		2675790	1					
ANR	2676794	Parameter	void * scp	1683:31:48126:48134	2675790	2	True				
ANR	2676795	ParameterType	void *		2675790	0					
ANR	2676796	Identifier	scp		2675790	1					
ANR	2676797	CFGEntryNode	ENTRY		2675790		True				
ANR	2676798	CFGExitNode	EXIT		2675790		True				
ANR	2676799	Symbol	condor_slow_ckpt		2675790						
ANR	2676800	Symbol	_condor_ckpt_is_disabled		2675790						
ANR	2676801	Symbol	bsd_usage . ru_utime . tv_usec		2675790						
ANR	2676802	Symbol	SYS_UNMAPPED		2675790						
ANR	2676803	Symbol	mode		2675790						
ANR	2676804	Symbol	CKPT_MODE_USE_COMPRESSION		2675790						
ANR	2676805	Symbol	p_scm		2675790						
ANR	2676806	Symbol	REMOTE		2675790						
ANR	2676807	Symbol	sysconf		2675790						
ANR	2676808	Symbol	scm		2675790						
ANR	2676809	Symbol	CKPT_MODE_SLOW		2675790						
ANR	2676810	Symbol	MyImage		2675790						
ANR	2676811	Symbol	bsd_usage		2675790						
ANR	2676812	Symbol	scp		2675790						
ANR	2676813	Symbol	MyImage . GetMode		2675790						
ANR	2676814	Symbol	SIGUSR2		2675790						
ANR	2676815	Symbol	TRUE		2675790						
ANR	2676816	Symbol	SIGTSTP		2675790						
ANR	2676817	Symbol	wait_up		2675790						
ANR	2676818	Symbol	SYS_MAPPED		2675790						
ANR	2676819	Symbol	_condor_numrestarts		2675790						
ANR	2676820	Symbol	SYS_UNRECORDED		2675790						
ANR	2676821	Symbol	do_full_restart		2675790						
ANR	2676822	Symbol	get_ckpt_mode		2675790						
ANR	2676823	Symbol	condor_compress_ckpt		2675790						
ANR	2676824	Symbol	SYS_LOCAL		2675790						
ANR	2676825	Symbol	& bsd_usage		2675790						
ANR	2676826	Symbol	MyImage . Write		2675790						
ANR	2676827	Symbol	& posix_usage		2675790						
ANR	2676828	Symbol	posix_usage . tms_utime		2675790						
ANR	2676829	Symbol	KILO		2675790						
ANR	2676830	Symbol	code		2675790						
ANR	2676831	Symbol	CKPT_MODE_ABORT		2675790						
ANR	2676832	Symbol	_SC_CLK_TCK		2675790						
ANR	2676833	Symbol	posix_usage		2675790						
ANR	2676834	Symbol	bsd_usage . ru_utime		2675790						
ANR	2676835	Symbol	Env		2675790						
ANR	2676836	Symbol	sig		2675790						
ANR	2676837	Symbol	bsd_usage . ru_stime . tv_sec		2675790						
ANR	2676838	Symbol	bsd_usage . ru_utime . tv_sec		2675790						
ANR	2676839	Symbol	clock_tick		2675790						
ANR	2676840	Symbol	SetSyscalls		2675790						
ANR	2676841	Symbol	pending_sig_set		2675790						
ANR	2676842	Symbol	bsd_usage . ru_stime . tv_usec		2675790						
ANR	2676843	Symbol	& pending_sig_set		2675790						
ANR	2676844	Symbol	write_result		2675790						
ANR	2676845	Symbol	posix_usage . tms_stime		2675790						
ANR	2676846	Symbol	check_sig		2675790						
ANR	2676847	Symbol	mask		2675790						
ANR	2676848	Symbol	MyImage . GetLen		2675790						
ANR	2676849	Symbol	InRestart		2675790						
ANR	2676850	Symbol	D_ALWAYS		2675790						
ANR	2676851	Symbol	CKPT_MODE_MSYNC		2675790						
ANR	2676852	Symbol	_condor_signals_disable		2675790						
ANR	2676853	Symbol	SYS_REMOTE		2675790						
ANR	2676854	Symbol	bsd_usage . ru_stime		2675790						
ANR	2676855	Symbol	get_ckpt_speed		2675790						
ANR	2676856	Symbol	FALSE		2675790						
ANR	2676857	Symbol	sigismember		2675790						
ANR	2676858	Symbol	SETJMP		2675790						
ANR	2676859	Function	init_image_with_file_name	1955:0:56913:57055							
ANR	2676860	FunctionDef	init_image_with_file_name (const char * ckpt_name)		2676859	0					
ANR	2676861	CompoundStatement		1957:0:56969:57055	2676859	0					
ANR	2676862	ExpressionStatement	_condor_ckpt_disable ( )	1958:1:56972:56994	2676859	0	True				
ANR	2676863	CallExpression	_condor_ckpt_disable ( )		2676859	0					
ANR	2676864	Callee	_condor_ckpt_disable		2676859	0					
ANR	2676865	Identifier	_condor_ckpt_disable		2676859	0					
ANR	2676866	ArgumentList			2676859	1					
ANR	2676867	ExpressionStatement	MyImage . SetFileName ( ckpt_name )	1959:1:56997:57029	2676859	1	True				
ANR	2676868	CallExpression	MyImage . SetFileName ( ckpt_name )		2676859	0					
ANR	2676869	Callee	MyImage . SetFileName		2676859	0					
ANR	2676870	MemberAccess	MyImage . SetFileName		2676859	0					
ANR	2676871	Identifier	MyImage		2676859	0					
ANR	2676872	Identifier	SetFileName		2676859	1					
ANR	2676873	ArgumentList	ckpt_name		2676859	1					
ANR	2676874	Argument	ckpt_name		2676859	0					
ANR	2676875	Identifier	ckpt_name		2676859	0					
ANR	2676876	ExpressionStatement	_condor_ckpt_enable ( )	1960:1:57032:57053	2676859	2	True				
ANR	2676877	CallExpression	_condor_ckpt_enable ( )		2676859	0					
ANR	2676878	Callee	_condor_ckpt_enable		2676859	0					
ANR	2676879	Identifier	_condor_ckpt_enable		2676859	0					
ANR	2676880	ArgumentList			2676859	1					
ANR	2676881	ReturnType	void		2676859	1					
ANR	2676882	Identifier	init_image_with_file_name		2676859	2					
ANR	2676883	ParameterList	const char * ckpt_name		2676859	3					
ANR	2676884	Parameter	const char * ckpt_name	1956:27:56945:56965	2676859	0	True				
ANR	2676885	ParameterType	const char *		2676859	0					
ANR	2676886	Identifier	ckpt_name		2676859	1					
ANR	2676887	CFGEntryNode	ENTRY		2676859		True				
ANR	2676888	CFGExitNode	EXIT		2676859		True				
ANR	2676889	Symbol	ckpt_name		2676859						
ANR	2676890	Symbol	MyImage		2676859						
ANR	2676891	Function	init_image_with_file_descriptor	1963:0:57058:57129							
ANR	2676892	FunctionDef	init_image_with_file_descriptor (int fd)		2676891	0					
ANR	2676893	CompoundStatement		1965:0:57105:57129	2676891	0					
ANR	2676894	ExpressionStatement	MyImage . SetFd ( fd )	1966:1:57108:57127	2676891	0	True				
ANR	2676895	CallExpression	MyImage . SetFd ( fd )		2676891	0					
ANR	2676896	Callee	MyImage . SetFd		2676891	0					
ANR	2676897	MemberAccess	MyImage . SetFd		2676891	0					
ANR	2676898	Identifier	MyImage		2676891	0					
ANR	2676899	Identifier	SetFd		2676891	1					
ANR	2676900	ArgumentList	fd		2676891	1					
ANR	2676901	Argument	fd		2676891	0					
ANR	2676902	Identifier	fd		2676891	0					
ANR	2676903	ReturnType	void		2676891	1					
ANR	2676904	Identifier	init_image_with_file_descriptor		2676891	2					
ANR	2676905	ParameterList	int fd		2676891	3					
ANR	2676906	Parameter	int fd	1964:33:57096:57101	2676891	0	True				
ANR	2676907	ParameterType	int		2676891	0					
ANR	2676908	Identifier	fd		2676891	1					
ANR	2676909	CFGEntryNode	ENTRY		2676891		True				
ANR	2676910	CFGExitNode	EXIT		2676891		True				
ANR	2676911	Symbol	fd		2676891						
ANR	2676912	Symbol	MyImage		2676891						
ANR	2676913	Function	restart	1974:0:57325:57497							
ANR	2676914	FunctionDef	restart ()		2676913	0					
ANR	2676915	CompoundStatement		1976:0:57341:57497	2676913	0					
ANR	2676916	IdentifierDeclStatement	sigset_t mask ;	1977:1:57344:57357	2676913	0	True				
ANR	2676917	IdentifierDecl	mask		2676913	0					
ANR	2676918	IdentifierDeclType	sigset_t		2676913	0					
ANR	2676919	Identifier	mask		2676913	1					
ANR	2676920	ExpressionStatement	sigfillset ( & mask )	1979:1:57361:57380	2676913	1	True				
ANR	2676921	CallExpression	sigfillset ( & mask )		2676913	0					
ANR	2676922	Callee	sigfillset		2676913	0					
ANR	2676923	Identifier	sigfillset		2676913	0					
ANR	2676924	ArgumentList	& mask		2676913	1					
ANR	2676925	Argument	& mask		2676913	0					
ANR	2676926	UnaryOperationExpression	& mask		2676913	0					
ANR	2676927	UnaryOperator	&		2676913	0					
ANR	2676928	Identifier	mask		2676913	1					
ANR	2676929	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & mask , 0 )"	1980:1:57383:57419	2676913	2	True				
ANR	2676930	CallExpression	"sigprocmask ( SIG_SETMASK , & mask , 0 )"		2676913	0					
ANR	2676931	Callee	sigprocmask		2676913	0					
ANR	2676932	Identifier	sigprocmask		2676913	0					
ANR	2676933	ArgumentList	SIG_SETMASK		2676913	1					
ANR	2676934	Argument	SIG_SETMASK		2676913	0					
ANR	2676935	Identifier	SIG_SETMASK		2676913	0					
ANR	2676936	Argument	& mask		2676913	1					
ANR	2676937	UnaryOperationExpression	& mask		2676913	0					
ANR	2676938	UnaryOperator	&		2676913	0					
ANR	2676939	Identifier	mask		2676913	1					
ANR	2676940	Argument	0		2676913	2					
ANR	2676941	PrimaryExpression	0		2676913	0					
ANR	2676942	ExpressionStatement	InRestart = TRUE	1982:1:57423:57439	2676913	3	True				
ANR	2676943	AssignmentExpression	InRestart = TRUE		2676913	0		=			
ANR	2676944	Identifier	InRestart		2676913	0					
ANR	2676945	Identifier	TRUE		2676913	1					
ANR	2676946	IfStatement	if ( MyImage . Read ( ) < 0 )		2676913	4					
ANR	2676947	Condition	MyImage . Read ( ) < 0	1983:5:57446:57463	2676913	0	True				
ANR	2676948	RelationalExpression	MyImage . Read ( ) < 0		2676913	0		<			
ANR	2676949	CallExpression	MyImage . Read ( )		2676913	0					
ANR	2676950	Callee	MyImage . Read		2676913	0					
ANR	2676951	MemberAccess	MyImage . Read		2676913	0					
ANR	2676952	Identifier	MyImage		2676913	0					
ANR	2676953	Identifier	Read		2676913	1					
ANR	2676954	ArgumentList			2676913	1					
ANR	2676955	PrimaryExpression	0		2676913	1					
ANR	2676956	ExpressionStatement	Suicide ( )	1983:25:57466:57475	2676913	1	True				
ANR	2676957	CallExpression	Suicide ( )		2676913	0					
ANR	2676958	Callee	Suicide		2676913	0					
ANR	2676959	Identifier	Suicide		2676913	0					
ANR	2676960	ArgumentList			2676913	1					
ANR	2676961	ExpressionStatement	MyImage . Restore ( )	1984:1:57478:57495	2676913	5	True				
ANR	2676962	CallExpression	MyImage . Restore ( )		2676913	0					
ANR	2676963	Callee	MyImage . Restore		2676913	0					
ANR	2676964	MemberAccess	MyImage . Restore		2676913	0					
ANR	2676965	Identifier	MyImage		2676913	0					
ANR	2676966	Identifier	Restore		2676913	1					
ANR	2676967	ArgumentList			2676913	1					
ANR	2676968	ReturnType	void		2676913	1					
ANR	2676969	Identifier	restart		2676913	2					
ANR	2676970	ParameterList			2676913	3					
ANR	2676971	CFGEntryNode	ENTRY		2676913		True				
ANR	2676972	CFGExitNode	EXIT		2676913		True				
ANR	2676973	Symbol	InRestart		2676913						
ANR	2676974	Symbol	MyImage . Read		2676913						
ANR	2676975	Symbol	& mask		2676913						
ANR	2676976	Symbol	SIG_SETMASK		2676913						
ANR	2676977	Symbol	TRUE		2676913						
ANR	2676978	Symbol	MyImage		2676913						
ANR	2676979	Symbol	mask		2676913						
ANR	2676980	Function	ckpt	1998:0:57734:57924							
ANR	2676981	FunctionDef	ckpt ()		2676980	0					
ANR	2676982	CompoundStatement		2000:0:57746:57924	2676980	0					
ANR	2676983	IdentifierDeclStatement	int scm ;	2001:1:57749:57757	2676980	0	True				
ANR	2676984	IdentifierDecl	scm		2676980	0					
ANR	2676985	IdentifierDeclType	int		2676980	0					
ANR	2676986	Identifier	scm		2676980	1					
ANR	2676987	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT signal to SELF\\n"" )"	2003:1:57761:57825	2676980	1	True				
ANR	2676988	CallExpression	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT signal to SELF\\n"" )"		2676980	0					
ANR	2676989	Callee	dprintf		2676980	0					
ANR	2676990	Identifier	dprintf		2676980	0					
ANR	2676991	ArgumentList	D_ALWAYS		2676980	1					
ANR	2676992	Argument	D_ALWAYS		2676980	0					
ANR	2676993	Identifier	D_ALWAYS		2676980	0					
ANR	2676994	Argument	"""About to send CHECKPOINT signal to SELF\\n"""		2676980	1					
ANR	2676995	PrimaryExpression	"""About to send CHECKPOINT signal to SELF\\n"""		2676980	0					
ANR	2676996	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	2004:1:57828:57873	2676980	2	True				
ANR	2676997	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2676980	0		=			
ANR	2676998	Identifier	scm		2676980	0					
ANR	2676999	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2676980	1					
ANR	2677000	Callee	SetSyscalls		2676980	0					
ANR	2677001	Identifier	SetSyscalls		2676980	0					
ANR	2677002	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2676980	1					
ANR	2677003	Argument	SYS_LOCAL | SYS_UNMAPPED		2676980	0					
ANR	2677004	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2676980	0		|			
ANR	2677005	Identifier	SYS_LOCAL		2676980	0					
ANR	2677006	Identifier	SYS_UNMAPPED		2676980	1					
ANR	2677007	ExpressionStatement	"kill ( getpid ( ) , SIGUSR2 )"	2005:1:57876:57901	2676980	3	True				
ANR	2677008	CallExpression	"kill ( getpid ( ) , SIGUSR2 )"		2676980	0					
ANR	2677009	Callee	kill		2676980	0					
ANR	2677010	Identifier	kill		2676980	0					
ANR	2677011	ArgumentList	getpid ( )		2676980	1					
ANR	2677012	Argument	getpid ( )		2676980	0					
ANR	2677013	CallExpression	getpid ( )		2676980	0					
ANR	2677014	Callee	getpid		2676980	0					
ANR	2677015	Identifier	getpid		2676980	0					
ANR	2677016	ArgumentList			2676980	1					
ANR	2677017	Argument	SIGUSR2		2676980	1					
ANR	2677018	Identifier	SIGUSR2		2676980	0					
ANR	2677019	ExpressionStatement	SetSyscalls ( scm )	2006:1:57904:57922	2676980	4	True				
ANR	2677020	CallExpression	SetSyscalls ( scm )		2676980	0					
ANR	2677021	Callee	SetSyscalls		2676980	0					
ANR	2677022	Identifier	SetSyscalls		2676980	0					
ANR	2677023	ArgumentList	scm		2676980	1					
ANR	2677024	Argument	scm		2676980	0					
ANR	2677025	Identifier	scm		2676980	0					
ANR	2677026	ReturnType	void		2676980	1					
ANR	2677027	Identifier	ckpt		2676980	2					
ANR	2677028	ParameterList			2676980	3					
ANR	2677029	CFGEntryNode	ENTRY		2676980		True				
ANR	2677030	CFGExitNode	EXIT		2676980		True				
ANR	2677031	Symbol	SYS_UNMAPPED		2676980						
ANR	2677032	Symbol	SYS_LOCAL		2676980						
ANR	2677033	Symbol	D_ALWAYS		2676980						
ANR	2677034	Symbol	SIGUSR2		2676980						
ANR	2677035	Symbol	SetSyscalls		2676980						
ANR	2677036	Symbol	scm		2676980						
ANR	2677037	Symbol	getpid		2676980						
ANR	2677038	Function	ckpt_and_exit	2008:0:57926:58134							
ANR	2677039	FunctionDef	ckpt_and_exit ()		2677038	0					
ANR	2677040	CompoundStatement		2010:0:57947:58134	2677038	0					
ANR	2677041	IdentifierDeclStatement	int scm ;	2011:1:57950:57958	2677038	0	True				
ANR	2677042	IdentifierDecl	scm		2677038	0					
ANR	2677043	IdentifierDeclType	int		2677038	0					
ANR	2677044	Identifier	scm		2677038	1					
ANR	2677045	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT and EXIT signal to SELF\\n"" )"	2013:1:57962:58035	2677038	1	True				
ANR	2677046	CallExpression	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT and EXIT signal to SELF\\n"" )"		2677038	0					
ANR	2677047	Callee	dprintf		2677038	0					
ANR	2677048	Identifier	dprintf		2677038	0					
ANR	2677049	ArgumentList	D_ALWAYS		2677038	1					
ANR	2677050	Argument	D_ALWAYS		2677038	0					
ANR	2677051	Identifier	D_ALWAYS		2677038	0					
ANR	2677052	Argument	"""About to send CHECKPOINT and EXIT signal to SELF\\n"""		2677038	1					
ANR	2677053	PrimaryExpression	"""About to send CHECKPOINT and EXIT signal to SELF\\n"""		2677038	0					
ANR	2677054	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	2014:1:58038:58083	2677038	2	True				
ANR	2677055	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2677038	0		=			
ANR	2677056	Identifier	scm		2677038	0					
ANR	2677057	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2677038	1					
ANR	2677058	Callee	SetSyscalls		2677038	0					
ANR	2677059	Identifier	SetSyscalls		2677038	0					
ANR	2677060	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2677038	1					
ANR	2677061	Argument	SYS_LOCAL | SYS_UNMAPPED		2677038	0					
ANR	2677062	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2677038	0		|			
ANR	2677063	Identifier	SYS_LOCAL		2677038	0					
ANR	2677064	Identifier	SYS_UNMAPPED		2677038	1					
ANR	2677065	ExpressionStatement	"kill ( getpid ( ) , SIGTSTP )"	2015:1:58086:58111	2677038	3	True				
ANR	2677066	CallExpression	"kill ( getpid ( ) , SIGTSTP )"		2677038	0					
ANR	2677067	Callee	kill		2677038	0					
ANR	2677068	Identifier	kill		2677038	0					
ANR	2677069	ArgumentList	getpid ( )		2677038	1					
ANR	2677070	Argument	getpid ( )		2677038	0					
ANR	2677071	CallExpression	getpid ( )		2677038	0					
ANR	2677072	Callee	getpid		2677038	0					
ANR	2677073	Identifier	getpid		2677038	0					
ANR	2677074	ArgumentList			2677038	1					
ANR	2677075	Argument	SIGTSTP		2677038	1					
ANR	2677076	Identifier	SIGTSTP		2677038	0					
ANR	2677077	ExpressionStatement	SetSyscalls ( scm )	2016:1:58114:58132	2677038	4	True				
ANR	2677078	CallExpression	SetSyscalls ( scm )		2677038	0					
ANR	2677079	Callee	SetSyscalls		2677038	0					
ANR	2677080	Identifier	SetSyscalls		2677038	0					
ANR	2677081	ArgumentList	scm		2677038	1					
ANR	2677082	Argument	scm		2677038	0					
ANR	2677083	Identifier	scm		2677038	0					
ANR	2677084	ReturnType	void		2677038	1					
ANR	2677085	Identifier	ckpt_and_exit		2677038	2					
ANR	2677086	ParameterList			2677038	3					
ANR	2677087	CFGEntryNode	ENTRY		2677038		True				
ANR	2677088	CFGExitNode	EXIT		2677038		True				
ANR	2677089	Symbol	SYS_UNMAPPED		2677038						
ANR	2677090	Symbol	SYS_LOCAL		2677038						
ANR	2677091	Symbol	D_ALWAYS		2677038						
ANR	2677092	Symbol	SetSyscalls		2677038						
ANR	2677093	Symbol	SIGTSTP		2677038						
ANR	2677094	Symbol	scm		2677038						
ANR	2677095	Symbol	getpid		2677038						
ANR	2677096	Function	ckpt_	2022:0:58203:58227							
ANR	2677097	FunctionDef	ckpt_ ()		2677096	0					
ANR	2677098	CompoundStatement		2023:8:58216:58227	2677096	0					
ANR	2677099	ExpressionStatement	ckpt ( )	2024:1:58219:58225	2677096	0	True				
ANR	2677100	CallExpression	ckpt ( )		2677096	0					
ANR	2677101	Callee	ckpt		2677096	0					
ANR	2677102	Identifier	ckpt		2677096	0					
ANR	2677103	ArgumentList			2677096	1					
ANR	2677104	ReturnType	void		2677096	1					
ANR	2677105	Identifier	ckpt_		2677096	2					
ANR	2677106	ParameterList			2677096	3					
ANR	2677107	CFGEntryNode	ENTRY		2677096		True				
ANR	2677108	CFGExitNode	EXIT		2677096		True				
ANR	2677109	Function	ckpt_and_exit_	2026:0:58229:58271							
ANR	2677110	FunctionDef	ckpt_and_exit_ ()		2677109	0					
ANR	2677111	CompoundStatement		2027:17:58251:58271	2677109	0					
ANR	2677112	ExpressionStatement	ckpt_and_exit ( )	2028:1:58254:58269	2677109	0	True				
ANR	2677113	CallExpression	ckpt_and_exit ( )		2677109	0					
ANR	2677114	Callee	ckpt_and_exit		2677109	0					
ANR	2677115	Identifier	ckpt_and_exit		2677109	0					
ANR	2677116	ArgumentList			2677109	1					
ANR	2677117	ReturnType	void		2677109	1					
ANR	2677118	Identifier	ckpt_and_exit_		2677109	2					
ANR	2677119	ParameterList			2677109	3					
ANR	2677120	CFGEntryNode	ENTRY		2677109		True				
ANR	2677121	CFGExitNode	EXIT		2677109		True				
ANR	2677122	Function	ckpt__	2035:0:58335:58360							
ANR	2677123	FunctionDef	ckpt__ ()		2677122	0					
ANR	2677124	CompoundStatement		2036:0:58349:58360	2677122	0					
ANR	2677125	ExpressionStatement	ckpt ( )	2037:1:58352:58358	2677122	0	True				
ANR	2677126	CallExpression	ckpt ( )		2677122	0					
ANR	2677127	Callee	ckpt		2677122	0					
ANR	2677128	Identifier	ckpt		2677122	0					
ANR	2677129	ArgumentList			2677122	1					
ANR	2677130	ReturnType	void		2677122	1					
ANR	2677131	Identifier	ckpt__		2677122	2					
ANR	2677132	ParameterList			2677122	3					
ANR	2677133	CFGEntryNode	ENTRY		2677122		True				
ANR	2677134	CFGExitNode	EXIT		2677122		True				
ANR	2677135	Function	ckpt_and_exit__	2040:0:58363:58406							
ANR	2677136	FunctionDef	ckpt_and_exit__ ()		2677135	0					
ANR	2677137	CompoundStatement		2041:0:58386:58406	2677135	0					
ANR	2677138	ExpressionStatement	ckpt_and_exit ( )	2042:1:58389:58404	2677135	0	True				
ANR	2677139	CallExpression	ckpt_and_exit ( )		2677135	0					
ANR	2677140	Callee	ckpt_and_exit		2677135	0					
ANR	2677141	Identifier	ckpt_and_exit		2677135	0					
ANR	2677142	ArgumentList			2677135	1					
ANR	2677143	ReturnType	void		2677135	1					
ANR	2677144	Identifier	ckpt_and_exit__		2677135	2					
ANR	2677145	ParameterList			2677135	3					
ANR	2677146	CFGEntryNode	ENTRY		2677135		True				
ANR	2677147	CFGExitNode	EXIT		2677135		True				
ANR	2677148	Function	sleep_syscall	2049:0:58477:59020							
ANR	2677149	FunctionDef	sleep_syscall (int seconds)		2677148	0					
ANR	2677150	CompoundStatement		2050:0:58509:59020	2677148	0					
ANR	2677151	ExpressionStatement	"SYSCALL ( SYS_sleep , seconds )"	2053:1:58536:58563	2677148	0	True				
ANR	2677152	CallExpression	"SYSCALL ( SYS_sleep , seconds )"		2677148	0					
ANR	2677153	Callee	SYSCALL		2677148	0					
ANR	2677154	Identifier	SYSCALL		2677148	0					
ANR	2677155	ArgumentList	SYS_sleep		2677148	1					
ANR	2677156	Argument	SYS_sleep		2677148	0					
ANR	2677157	Identifier	SYS_sleep		2677148	0					
ANR	2677158	Argument	seconds		2677148	1					
ANR	2677159	Identifier	seconds		2677148	0					
ANR	2677160	ReturnType	void		2677148	1					
ANR	2677161	Identifier	sleep_syscall		2677148	2					
ANR	2677162	ParameterList	int seconds		2677148	3					
ANR	2677163	Parameter	int seconds	2049:19:58496:58506	2677148	0	True				
ANR	2677164	ParameterType	int		2677148	0					
ANR	2677165	Identifier	seconds		2677148	1					
ANR	2677166	CFGEntryNode	ENTRY		2677148		True				
ANR	2677167	CFGExitNode	EXIT		2677148		True				
ANR	2677168	Symbol	seconds		2677148						
ANR	2677169	Symbol	SYS_sleep		2677148						
ANR	2677170	Function	terminate_with_sig	2080:0:59241:61472							
ANR	2677171	FunctionDef	terminate_with_sig (int sig)		2677170	0					
ANR	2677172	CompoundStatement		2082:0:59276:61472	2677170	0					
ANR	2677173	IdentifierDeclStatement	sigset_t mask ;	2083:1:59279:59292	2677170	0	True				
ANR	2677174	IdentifierDecl	mask		2677170	0					
ANR	2677175	IdentifierDeclType	sigset_t		2677170	0					
ANR	2677176	Identifier	mask		2677170	1					
ANR	2677177	IdentifierDeclStatement	pid_t my_pid ;	2084:1:59295:59308	2677170	1	True				
ANR	2677178	IdentifierDecl	my_pid		2677170	0					
ANR	2677179	IdentifierDeclType	pid_t		2677170	0					
ANR	2677180	Identifier	my_pid		2677170	1					
ANR	2677181	IdentifierDeclStatement	struct sigaction act ;	2085:1:59311:59331	2677170	2	True				
ANR	2677182	IdentifierDecl	act		2677170	0					
ANR	2677183	IdentifierDeclType	struct sigaction		2677170	0					
ANR	2677184	Identifier	act		2677170	1					
ANR	2677185	IfStatement	if ( ! InRestart )		2677170	3					
ANR	2677186	Condition	! InRestart	2094:5:59722:59731	2677170	0	True				
ANR	2677187	UnaryOperationExpression	! InRestart		2677170	0					
ANR	2677188	UnaryOperator	!		2677170	0					
ANR	2677189	Identifier	InRestart		2677170	1					
ANR	2677190	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	2094:17:59734:59773	2677170	1	True				
ANR	2677191	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2677170	0					
ANR	2677192	Callee	SetSyscalls		2677170	0					
ANR	2677193	Identifier	SetSyscalls		2677170	0					
ANR	2677194	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2677170	1					
ANR	2677195	Argument	SYS_LOCAL | SYS_UNMAPPED		2677170	0					
ANR	2677196	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2677170	0		|			
ANR	2677197	Identifier	SYS_LOCAL		2677170	0					
ANR	2677198	Identifier	SYS_UNMAPPED		2677170	1					
ANR	2677199	IfStatement	if ( sig != SIGKILL && sig != SIGSTOP )		2677170	4					
ANR	2677200	Condition	sig != SIGKILL && sig != SIGSTOP	2097:5:59844:59875	2677170	0	True				
ANR	2677201	AndExpression	sig != SIGKILL && sig != SIGSTOP		2677170	0		&&			
ANR	2677202	EqualityExpression	sig != SIGKILL		2677170	0		!=			
ANR	2677203	Identifier	sig		2677170	0					
ANR	2677204	Identifier	SIGKILL		2677170	1					
ANR	2677205	EqualityExpression	sig != SIGSTOP		2677170	1		!=			
ANR	2677206	Identifier	sig		2677170	0					
ANR	2677207	Identifier	SIGSTOP		2677170	1					
ANR	2677208	CompoundStatement		16:40:602:602	2677170	1					
ANR	2677209	ExpressionStatement	act . sa_handler = ( SIG_HANDLER ) SIG_DFL	2098:2:59883:59920	2677170	0	True				
ANR	2677210	AssignmentExpression	act . sa_handler = ( SIG_HANDLER ) SIG_DFL		2677170	0		=			
ANR	2677211	MemberAccess	act . sa_handler		2677170	0					
ANR	2677212	Identifier	act		2677170	0					
ANR	2677213	Identifier	sa_handler		2677170	1					
ANR	2677214	CastExpression	( SIG_HANDLER ) SIG_DFL		2677170	1					
ANR	2677215	CastTarget	SIG_HANDLER		2677170	0					
ANR	2677216	Identifier	SIG_DFL		2677170	1					
ANR	2677217	ExpressionStatement	sigfillset ( & act . sa_mask )	2100:2:59979:60005	2677170	1	True				
ANR	2677218	CallExpression	sigfillset ( & act . sa_mask )		2677170	0					
ANR	2677219	Callee	sigfillset		2677170	0					
ANR	2677220	Identifier	sigfillset		2677170	0					
ANR	2677221	ArgumentList	& act . sa_mask		2677170	1					
ANR	2677222	Argument	& act . sa_mask		2677170	0					
ANR	2677223	UnaryOperationExpression	& act . sa_mask		2677170	0					
ANR	2677224	UnaryOperator	&		2677170	0					
ANR	2677225	MemberAccess	act . sa_mask		2677170	1					
ANR	2677226	Identifier	act		2677170	0					
ANR	2677227	Identifier	sa_mask		2677170	1					
ANR	2677228	ExpressionStatement	act . sa_flags = 0	2101:2:60009:60025	2677170	2	True				
ANR	2677229	AssignmentExpression	act . sa_flags = 0		2677170	0		=			
ANR	2677230	MemberAccess	act . sa_flags		2677170	0					
ANR	2677231	Identifier	act		2677170	0					
ANR	2677232	Identifier	sa_flags		2677170	1					
ANR	2677233	PrimaryExpression	0		2677170	1					
ANR	2677234	ExpressionStatement	errno = 0	2102:2:60029:60038	2677170	3	True				
ANR	2677235	AssignmentExpression	errno = 0		2677170	0		=			
ANR	2677236	Identifier	errno		2677170	0					
ANR	2677237	PrimaryExpression	0		2677170	1					
ANR	2677238	IfStatement	"if ( sigaction ( sig , & act , 0 ) < 0 )"		2677170	4					
ANR	2677239	Condition	"sigaction ( sig , & act , 0 ) < 0"	2103:6:60046:60070	2677170	0	True				
ANR	2677240	RelationalExpression	"sigaction ( sig , & act , 0 ) < 0"		2677170	0		<			
ANR	2677241	CallExpression	"sigaction ( sig , & act , 0 )"		2677170	0					
ANR	2677242	Callee	sigaction		2677170	0					
ANR	2677243	Identifier	sigaction		2677170	0					
ANR	2677244	ArgumentList	sig		2677170	1					
ANR	2677245	Argument	sig		2677170	0					
ANR	2677246	Identifier	sig		2677170	0					
ANR	2677247	Argument	& act		2677170	1					
ANR	2677248	UnaryOperationExpression	& act		2677170	0					
ANR	2677249	UnaryOperator	&		2677170	0					
ANR	2677250	Identifier	act		2677170	1					
ANR	2677251	Argument	0		2677170	2					
ANR	2677252	PrimaryExpression	0		2677170	0					
ANR	2677253	PrimaryExpression	0		2677170	1					
ANR	2677254	CompoundStatement		22:34:797:797	2677170	1					
ANR	2677255	IfStatement	if ( ! InRestart )		2677170	0					
ANR	2677256	Condition	! InRestart	2104:7:60083:60092	2677170	0	True				
ANR	2677257	UnaryOperationExpression	! InRestart		2677170	0					
ANR	2677258	UnaryOperator	!		2677170	0					
ANR	2677259	Identifier	InRestart		2677170	1					
ANR	2677260	ExpressionStatement	"dprintf ( D_ALWAYS , ""sigaction: %s\\n"" , strerror ( errno ) )"	2104:19:60095:60157	2677170	1	True				
ANR	2677261	CallExpression	"dprintf ( D_ALWAYS , ""sigaction: %s\\n"" , strerror ( errno ) )"		2677170	0					
ANR	2677262	Callee	dprintf		2677170	0					
ANR	2677263	Identifier	dprintf		2677170	0					
ANR	2677264	ArgumentList	D_ALWAYS		2677170	1					
ANR	2677265	Argument	D_ALWAYS		2677170	0					
ANR	2677266	Identifier	D_ALWAYS		2677170	0					
ANR	2677267	Argument	"""sigaction: %s\\n"""		2677170	1					
ANR	2677268	PrimaryExpression	"""sigaction: %s\\n"""		2677170	0					
ANR	2677269	Argument	strerror ( errno )		2677170	2					
ANR	2677270	CallExpression	strerror ( errno )		2677170	0					
ANR	2677271	Callee	strerror		2677170	0					
ANR	2677272	Identifier	strerror		2677170	0					
ANR	2677273	ArgumentList	errno		2677170	1					
ANR	2677274	Argument	errno		2677170	0					
ANR	2677275	Identifier	errno		2677170	0					
ANR	2677276	ExpressionStatement	Suicide ( )	2106:3:60162:60171	2677170	1	True				
ANR	2677277	CallExpression	Suicide ( )		2677170	0					
ANR	2677278	Callee	Suicide		2677170	0					
ANR	2677279	Identifier	Suicide		2677170	0					
ANR	2677280	ArgumentList			2677170	1					
ANR	2677281	ExpressionStatement	my_pid = SYSCALL ( SYS_getpid )	2111:1:60211:60239	2677170	5	True				
ANR	2677282	AssignmentExpression	my_pid = SYSCALL ( SYS_getpid )		2677170	0		=			
ANR	2677283	Identifier	my_pid		2677170	0					
ANR	2677284	CallExpression	SYSCALL ( SYS_getpid )		2677170	1					
ANR	2677285	Callee	SYSCALL		2677170	0					
ANR	2677286	Identifier	SYSCALL		2677170	0					
ANR	2677287	ArgumentList	SYS_getpid		2677170	1					
ANR	2677288	Argument	SYS_getpid		2677170	0					
ANR	2677289	Identifier	SYS_getpid		2677170	0					
ANR	2677290	IfStatement	if ( ! InRestart )		2677170	6					
ANR	2677291	Condition	! InRestart	2112:5:60246:60255	2677170	0	True				
ANR	2677292	UnaryOperationExpression	! InRestart		2677170	0					
ANR	2677293	UnaryOperator	!		2677170	0					
ANR	2677294	Identifier	InRestart		2677170	1					
ANR	2677295	CompoundStatement		31:17:981:981	2677170	1					
ANR	2677296	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to send signal %d to process %d\\n"" , sig , my_pid )"	2113:2:60262:60341	2677170	0	True				
ANR	2677297	CallExpression	"dprintf ( D_ALWAYS , ""About to send signal %d to process %d\\n"" , sig , my_pid )"		2677170	0					
ANR	2677298	Callee	dprintf		2677170	0					
ANR	2677299	Identifier	dprintf		2677170	0					
ANR	2677300	ArgumentList	D_ALWAYS		2677170	1					
ANR	2677301	Argument	D_ALWAYS		2677170	0					
ANR	2677302	Identifier	D_ALWAYS		2677170	0					
ANR	2677303	Argument	"""About to send signal %d to process %d\\n"""		2677170	1					
ANR	2677304	PrimaryExpression	"""About to send signal %d to process %d\\n"""		2677170	0					
ANR	2677305	Argument	sig		2677170	2					
ANR	2677306	Identifier	sig		2677170	0					
ANR	2677307	Argument	my_pid		2677170	3					
ANR	2677308	Identifier	my_pid		2677170	0					
ANR	2677309	ExpressionStatement	sleep_syscall ( 1 )	2122:1:60694:60710	2677170	7	True				
ANR	2677310	CallExpression	sleep_syscall ( 1 )		2677170	0					
ANR	2677311	Callee	sleep_syscall		2677170	0					
ANR	2677312	Identifier	sleep_syscall		2677170	0					
ANR	2677313	ArgumentList	1		2677170	1					
ANR	2677314	Argument	1		2677170	0					
ANR	2677315	PrimaryExpression	1		2677170	0					
ANR	2677316	IfStatement	"if ( SYSCALL ( SYS_kill , my_pid , sig ) < 0 )"		2677170	8					
ANR	2677317	Condition	"SYSCALL ( SYS_kill , my_pid , sig ) < 0"	2124:5:60718:60751	2677170	0	True				
ANR	2677318	RelationalExpression	"SYSCALL ( SYS_kill , my_pid , sig ) < 0"		2677170	0		<			
ANR	2677319	CallExpression	"SYSCALL ( SYS_kill , my_pid , sig )"		2677170	0					
ANR	2677320	Callee	SYSCALL		2677170	0					
ANR	2677321	Identifier	SYSCALL		2677170	0					
ANR	2677322	ArgumentList	SYS_kill		2677170	1					
ANR	2677323	Argument	SYS_kill		2677170	0					
ANR	2677324	Identifier	SYS_kill		2677170	0					
ANR	2677325	Argument	my_pid		2677170	1					
ANR	2677326	Identifier	my_pid		2677170	0					
ANR	2677327	Argument	sig		2677170	2					
ANR	2677328	Identifier	sig		2677170	0					
ANR	2677329	PrimaryExpression	0		2677170	1					
ANR	2677330	CompoundStatement		43:42:1478:1478	2677170	1					
ANR	2677331	ExpressionStatement	"EXCEPT ( ""kill"" )"	2125:2:60759:60775	2677170	0	True				
ANR	2677332	CallExpression	"EXCEPT ( ""kill"" )"		2677170	0					
ANR	2677333	Callee	EXCEPT		2677170	0					
ANR	2677334	Identifier	EXCEPT		2677170	0					
ANR	2677335	ArgumentList	"""kill"""		2677170	1					
ANR	2677336	Argument	"""kill"""		2677170	0					
ANR	2677337	PrimaryExpression	"""kill"""		2677170	0					
ANR	2677338	IfStatement	if ( sig != SIGKILL && sig != SIGSTOP )		2677170	9					
ANR	2677339	Condition	sig != SIGKILL && sig != SIGSTOP	2135:5:61272:61303	2677170	0	True				
ANR	2677340	AndExpression	sig != SIGKILL && sig != SIGSTOP		2677170	0		&&			
ANR	2677341	EqualityExpression	sig != SIGKILL		2677170	0		!=			
ANR	2677342	Identifier	sig		2677170	0					
ANR	2677343	Identifier	SIGKILL		2677170	1					
ANR	2677344	EqualityExpression	sig != SIGSTOP		2677170	1		!=			
ANR	2677345	Identifier	sig		2677170	0					
ANR	2677346	Identifier	SIGSTOP		2677170	1					
ANR	2677347	CompoundStatement		54:40:2030:2030	2677170	1					
ANR	2677348	ExpressionStatement	sigfillset ( & mask )	2136:2:61311:61330	2677170	0	True				
ANR	2677349	CallExpression	sigfillset ( & mask )		2677170	0					
ANR	2677350	Callee	sigfillset		2677170	0					
ANR	2677351	Identifier	sigfillset		2677170	0					
ANR	2677352	ArgumentList	& mask		2677170	1					
ANR	2677353	Argument	& mask		2677170	0					
ANR	2677354	UnaryOperationExpression	& mask		2677170	0					
ANR	2677355	UnaryOperator	&		2677170	0					
ANR	2677356	Identifier	mask		2677170	1					
ANR	2677357	ExpressionStatement	"sigdelset ( & mask , sig )"	2137:2:61334:61357	2677170	1	True				
ANR	2677358	CallExpression	"sigdelset ( & mask , sig )"		2677170	0					
ANR	2677359	Callee	sigdelset		2677170	0					
ANR	2677360	Identifier	sigdelset		2677170	0					
ANR	2677361	ArgumentList	& mask		2677170	1					
ANR	2677362	Argument	& mask		2677170	0					
ANR	2677363	UnaryOperationExpression	& mask		2677170	0					
ANR	2677364	UnaryOperator	&		2677170	0					
ANR	2677365	Identifier	mask		2677170	1					
ANR	2677366	Argument	sig		2677170	1					
ANR	2677367	Identifier	sig		2677170	0					
ANR	2677368	ExpressionStatement	sigsuspend ( & mask )	2138:2:61361:61380	2677170	2	True				
ANR	2677369	CallExpression	sigsuspend ( & mask )		2677170	0					
ANR	2677370	Callee	sigsuspend		2677170	0					
ANR	2677371	Identifier	sigsuspend		2677170	0					
ANR	2677372	ArgumentList	& mask		2677170	1					
ANR	2677373	Argument	& mask		2677170	0					
ANR	2677374	UnaryOperationExpression	& mask		2677170	0					
ANR	2677375	UnaryOperator	&		2677170	0					
ANR	2677376	Identifier	mask		2677170	1					
ANR	2677377	ElseStatement	else		2677170	0					
ANR	2677378	CompoundStatement		58:8:2113:2113	2677170	0					
ANR	2677379	WhileStatement	while ( 1 )		2677170	0					
ANR	2677380	Condition	1	2140:8:61400:61400	2677170	0	True				
ANR	2677381	PrimaryExpression	1		2677170	0					
ANR	2677382	ExpressionStatement		2140:10:61402:61402	2677170	1	True				
ANR	2677383	ExpressionStatement	"EXCEPT ( ""Should never get here"" )"	2144:1:61436:61469	2677170	10	True				
ANR	2677384	CallExpression	"EXCEPT ( ""Should never get here"" )"		2677170	0					
ANR	2677385	Callee	EXCEPT		2677170	0					
ANR	2677386	Identifier	EXCEPT		2677170	0					
ANR	2677387	ArgumentList	"""Should never get here"""		2677170	1					
ANR	2677388	Argument	"""Should never get here"""		2677170	0					
ANR	2677389	PrimaryExpression	"""Should never get here"""		2677170	0					
ANR	2677390	ReturnType	void		2677170	1					
ANR	2677391	Identifier	terminate_with_sig		2677170	2					
ANR	2677392	ParameterList	int sig		2677170	3					
ANR	2677393	Parameter	int sig	2081:20:59266:59272	2677170	0	True				
ANR	2677394	ParameterType	int		2677170	0					
ANR	2677395	Identifier	sig		2677170	1					
ANR	2677396	CFGEntryNode	ENTRY		2677170		True				
ANR	2677397	CFGExitNode	EXIT		2677170		True				
ANR	2677398	Symbol	InRestart		2677170						
ANR	2677399	Symbol	errno		2677170						
ANR	2677400	Symbol	SYS_UNMAPPED		2677170						
ANR	2677401	Symbol	& act . sa_mask		2677170						
ANR	2677402	Symbol	D_ALWAYS		2677170						
ANR	2677403	Symbol	& mask		2677170						
ANR	2677404	Symbol	SYS_kill		2677170						
ANR	2677405	Symbol	act . sa_flags		2677170						
ANR	2677406	Symbol	SIGKILL		2677170						
ANR	2677407	Symbol	sigaction		2677170						
ANR	2677408	Symbol	my_pid		2677170						
ANR	2677409	Symbol	sig		2677170						
ANR	2677410	Symbol	strerror		2677170						
ANR	2677411	Symbol	act . sa_handler		2677170						
ANR	2677412	Symbol	act		2677170						
ANR	2677413	Symbol	SYS_getpid		2677170						
ANR	2677414	Symbol	SIGSTOP		2677170						
ANR	2677415	Symbol	SYS_LOCAL		2677170						
ANR	2677416	Symbol	SIG_DFL		2677170						
ANR	2677417	Symbol	SYSCALL		2677170						
ANR	2677418	Symbol	mask		2677170						
ANR	2677419	Symbol	& act		2677170						
ANR	2677420	Function	Suicide	2152:0:61575:61624							
ANR	2677421	FunctionDef	Suicide ()		2677420	0					
ANR	2677422	CompoundStatement		2154:0:61590:61624	2677420	0					
ANR	2677423	ExpressionStatement	terminate_with_sig ( SIGKILL )	2155:1:61593:61622	2677420	0	True				
ANR	2677424	CallExpression	terminate_with_sig ( SIGKILL )		2677420	0					
ANR	2677425	Callee	terminate_with_sig		2677420	0					
ANR	2677426	Identifier	terminate_with_sig		2677420	0					
ANR	2677427	ArgumentList	SIGKILL		2677420	1					
ANR	2677428	Argument	SIGKILL		2677420	0					
ANR	2677429	Identifier	SIGKILL		2677420	0					
ANR	2677430	ReturnType	void		2677420	1					
ANR	2677431	Identifier	Suicide		2677420	2					
ANR	2677432	ParameterList			2677420	3					
ANR	2677433	CFGEntryNode	ENTRY		2677420		True				
ANR	2677434	CFGExitNode	EXIT		2677420		True				
ANR	2677435	Symbol	SIGKILL		2677420						
ANR	2677436	Function	find_stack_location	2158:0:61627:62010							
ANR	2677437	FunctionDef	"find_stack_location (RAW_ADDR & start , RAW_ADDR & end)"		2677436	0					
ANR	2677438	CompoundStatement		2160:0:61693:62010	2677436	0					
ANR	2677439	IfStatement	if ( SP_in_data_area ( ) )		2677436	0					
ANR	2677440	Condition	SP_in_data_area ( )	2161:5:61700:61716	2677436	0	True				
ANR	2677441	CallExpression	SP_in_data_area ( )		2677436	0					
ANR	2677442	Callee	SP_in_data_area		2677436	0					
ANR	2677443	Identifier	SP_in_data_area		2677436	0					
ANR	2677444	ArgumentList			2677436	1					
ANR	2677445	CompoundStatement		2:25:26:26	2677436	1					
ANR	2677446	ExpressionStatement	"dprintf ( D_ALWAYS , ""Stack pointer in data area\\n"" )"	2162:2:61724:61775	2677436	0	True				
ANR	2677447	CallExpression	"dprintf ( D_ALWAYS , ""Stack pointer in data area\\n"" )"		2677436	0					
ANR	2677448	Callee	dprintf		2677436	0					
ANR	2677449	Identifier	dprintf		2677436	0					
ANR	2677450	ArgumentList	D_ALWAYS		2677436	1					
ANR	2677451	Argument	D_ALWAYS		2677436	0					
ANR	2677452	Identifier	D_ALWAYS		2677436	0					
ANR	2677453	Argument	"""Stack pointer in data area\\n"""		2677436	1					
ANR	2677454	PrimaryExpression	"""Stack pointer in data area\\n"""		2677436	0					
ANR	2677455	IfStatement	if ( StackGrowsDown ( ) )		2677436	1					
ANR	2677456	Condition	StackGrowsDown ( )	2163:6:61783:61798	2677436	0	True				
ANR	2677457	CallExpression	StackGrowsDown ( )		2677436	0					
ANR	2677458	Callee	StackGrowsDown		2677436	0					
ANR	2677459	Identifier	StackGrowsDown		2677436	0					
ANR	2677460	ArgumentList			2677436	1					
ANR	2677461	CompoundStatement		4:25:108:108	2677436	1					
ANR	2677462	ExpressionStatement	end = stack_end_addr ( )	2164:3:61807:61829	2677436	0	True				
ANR	2677463	AssignmentExpression	end = stack_end_addr ( )		2677436	0		=			
ANR	2677464	Identifier	end		2677436	0					
ANR	2677465	CallExpression	stack_end_addr ( )		2677436	1					
ANR	2677466	Callee	stack_end_addr		2677436	0					
ANR	2677467	Identifier	stack_end_addr		2677436	0					
ANR	2677468	ArgumentList			2677436	1					
ANR	2677469	ExpressionStatement	start = end - StackSaveSize	2165:3:61834:61861	2677436	1	True				
ANR	2677470	AssignmentExpression	start = end - StackSaveSize		2677436	0		=			
ANR	2677471	Identifier	start		2677436	0					
ANR	2677472	AdditiveExpression	end - StackSaveSize		2677436	1		-			
ANR	2677473	Identifier	end		2677436	0					
ANR	2677474	Identifier	StackSaveSize		2677436	1					
ANR	2677475	ElseStatement	else		2677436	0					
ANR	2677476	CompoundStatement		7:9:178:178	2677436	0					
ANR	2677477	ExpressionStatement	start = stack_start_addr ( )	2167:3:61877:61903	2677436	0	True				
ANR	2677478	AssignmentExpression	start = stack_start_addr ( )		2677436	0		=			
ANR	2677479	Identifier	start		2677436	0					
ANR	2677480	CallExpression	stack_start_addr ( )		2677436	1					
ANR	2677481	Callee	stack_start_addr		2677436	0					
ANR	2677482	Identifier	stack_start_addr		2677436	0					
ANR	2677483	ArgumentList			2677436	1					
ANR	2677484	ExpressionStatement	end = start + StackSaveSize	2168:3:61908:61935	2677436	1	True				
ANR	2677485	AssignmentExpression	end = start + StackSaveSize		2677436	0		=			
ANR	2677486	Identifier	end		2677436	0					
ANR	2677487	AdditiveExpression	start + StackSaveSize		2677436	1		+			
ANR	2677488	Identifier	start		2677436	0					
ANR	2677489	Identifier	StackSaveSize		2677436	1					
ANR	2677490	ElseStatement	else		2677436	0					
ANR	2677491	CompoundStatement		11:8:255:255	2677436	0					
ANR	2677492	ExpressionStatement	start = stack_start_addr ( )	2171:2:61953:61979	2677436	0	True				
ANR	2677493	AssignmentExpression	start = stack_start_addr ( )		2677436	0		=			
ANR	2677494	Identifier	start		2677436	0					
ANR	2677495	CallExpression	stack_start_addr ( )		2677436	1					
ANR	2677496	Callee	stack_start_addr		2677436	0					
ANR	2677497	Identifier	stack_start_addr		2677436	0					
ANR	2677498	ArgumentList			2677436	1					
ANR	2677499	ExpressionStatement	end = stack_end_addr ( )	2172:2:61983:62005	2677436	1	True				
ANR	2677500	AssignmentExpression	end = stack_end_addr ( )		2677436	0		=			
ANR	2677501	Identifier	end		2677436	0					
ANR	2677502	CallExpression	stack_end_addr ( )		2677436	1					
ANR	2677503	Callee	stack_end_addr		2677436	0					
ANR	2677504	Identifier	stack_end_addr		2677436	0					
ANR	2677505	ArgumentList			2677436	1					
ANR	2677506	ReturnType	static void		2677436	1					
ANR	2677507	Identifier	find_stack_location		2677436	2					
ANR	2677508	ParameterList	"RAW_ADDR & start , RAW_ADDR & end"		2677436	3					
ANR	2677509	Parameter	RAW_ADDR & start	2159:21:61660:61674	2677436	0	True				
ANR	2677510	ParameterType	RAW_ADDR &		2677436	0					
ANR	2677511	Identifier	start		2677436	1					
ANR	2677512	Parameter	RAW_ADDR & end	2159:38:61677:61689	2677436	1	True				
ANR	2677513	ParameterType	RAW_ADDR &		2677436	0					
ANR	2677514	Identifier	end		2677436	1					
ANR	2677515	CFGEntryNode	ENTRY		2677436		True				
ANR	2677516	CFGExitNode	EXIT		2677436		True				
ANR	2677517	Symbol	stack_end_addr		2677436						
ANR	2677518	Symbol	StackSaveSize		2677436						
ANR	2677519	Symbol	start		2677436						
ANR	2677520	Symbol	D_ALWAYS		2677436						
ANR	2677521	Symbol	SP_in_data_area		2677436						
ANR	2677522	Symbol	end		2677436						
ANR	2677523	Symbol	stack_start_addr		2677436						
ANR	2677524	Symbol	StackGrowsDown		2677436						
ANR	2677525	DeclStmt									
ANR	2677526	Decl							double	double ( const char * )	atof
ANR	2677527	DeclStmt									
ANR	2677528	Decl							const size_t	const size_t	MEG
ANR	2677529	Function	calc_stack_to_save	2180:0:62089:62543							
ANR	2677530	FunctionDef	calc_stack_to_save ()		2677529	0					
ANR	2677531	CompoundStatement		2182:0:62115:62543	2677529	0					
ANR	2677532	IdentifierDeclStatement	char * ptr ;	2183:1:62118:62127	2677529	0	True				
ANR	2677533	IdentifierDecl	* ptr		2677529	0					
ANR	2677534	IdentifierDeclType	char *		2677529	0					
ANR	2677535	Identifier	ptr		2677529	1					
ANR	2677536	ExpressionStatement	"ptr = getenv ( ""CONDOR_STACK_SIZE"" )"	2189:1:62384:62419	2677529	1	True				
ANR	2677537	AssignmentExpression	"ptr = getenv ( ""CONDOR_STACK_SIZE"" )"		2677529	0		=			
ANR	2677538	Identifier	ptr		2677529	0					
ANR	2677539	CallExpression	"getenv ( ""CONDOR_STACK_SIZE"" )"		2677529	1					
ANR	2677540	Callee	getenv		2677529	0					
ANR	2677541	Identifier	getenv		2677529	0					
ANR	2677542	ArgumentList	"""CONDOR_STACK_SIZE"""		2677529	1					
ANR	2677543	Argument	"""CONDOR_STACK_SIZE"""		2677529	0					
ANR	2677544	PrimaryExpression	"""CONDOR_STACK_SIZE"""		2677529	0					
ANR	2677545	IfStatement	if ( ptr )		2677529	2					
ANR	2677546	Condition	ptr	2190:5:62426:62428	2677529	0	True				
ANR	2677547	Identifier	ptr		2677529	0					
ANR	2677548	CompoundStatement		9:11:316:316	2677529	1					
ANR	2677549	ExpressionStatement	StackSaveSize = ( size_t ) ( atof ( ptr ) * MEG )	2191:2:62436:62478	2677529	0	True				
ANR	2677550	AssignmentExpression	StackSaveSize = ( size_t ) ( atof ( ptr ) * MEG )		2677529	0		=			
ANR	2677551	Identifier	StackSaveSize		2677529	0					
ANR	2677552	CastExpression	( size_t ) ( atof ( ptr ) * MEG )		2677529	1					
ANR	2677553	CastTarget	size_t		2677529	0					
ANR	2677554	MultiplicativeExpression	atof ( ptr ) * MEG		2677529	1		*			
ANR	2677555	CallExpression	atof ( ptr )		2677529	0					
ANR	2677556	Callee	atof		2677529	0					
ANR	2677557	Identifier	atof		2677529	0					
ANR	2677558	ArgumentList	ptr		2677529	1					
ANR	2677559	Argument	ptr		2677529	0					
ANR	2677560	Identifier	ptr		2677529	0					
ANR	2677561	Identifier	MEG		2677529	1					
ANR	2677562	ElseStatement	else		2677529	0					
ANR	2677563	CompoundStatement		11:8:372:372	2677529	0					
ANR	2677564	ExpressionStatement	StackSaveSize = MEG * 2	2193:2:62492:62515	2677529	0	True				
ANR	2677565	AssignmentExpression	StackSaveSize = MEG * 2		2677529	0		=			
ANR	2677566	Identifier	StackSaveSize		2677529	0					
ANR	2677567	MultiplicativeExpression	MEG * 2		2677529	1		*			
ANR	2677568	Identifier	MEG		2677529	0					
ANR	2677569	PrimaryExpression	2		2677529	1					
ANR	2677570	ReturnType	void		2677529	1					
ANR	2677571	Identifier	calc_stack_to_save		2677529	2					
ANR	2677572	ParameterList			2677529	3					
ANR	2677573	CFGEntryNode	ENTRY		2677529		True				
ANR	2677574	CFGExitNode	EXIT		2677529		True				
ANR	2677575	Symbol	StackSaveSize		2677529						
ANR	2677576	Symbol	atof		2677529						
ANR	2677577	Symbol	MEG		2677529						
ANR	2677578	Symbol	ptr		2677529						
ANR	2677579	Symbol	getenv		2677529						
ANR	2677580	Function	SP_in_data_area	2202:0:62708:62985							
ANR	2677581	FunctionDef	SP_in_data_area ()		2677580	0					
ANR	2677582	CompoundStatement		2204:0:62737:62985	2677580	0					
ANR	2677583	IdentifierDeclStatement	"RAW_ADDR data_start , data_end ;"	2205:1:62740:62769	2677580	0	True				
ANR	2677584	IdentifierDecl	data_start		2677580	0					
ANR	2677585	IdentifierDeclType	RAW_ADDR		2677580	0					
ANR	2677586	Identifier	data_start		2677580	1					
ANR	2677587	IdentifierDecl	data_end		2677580	1					
ANR	2677588	IdentifierDeclType	RAW_ADDR		2677580	0					
ANR	2677589	Identifier	data_end		2677580	1					
ANR	2677590	IdentifierDeclStatement	RAW_ADDR SP ;	2206:1:62772:62783	2677580	1	True				
ANR	2677591	IdentifierDecl	SP		2677580	0					
ANR	2677592	IdentifierDeclType	RAW_ADDR		2677580	0					
ANR	2677593	Identifier	SP		2677580	1					
ANR	2677594	ExpressionStatement	data_start = data_start_addr ( )	2208:1:62787:62817	2677580	2	True				
ANR	2677595	AssignmentExpression	data_start = data_start_addr ( )		2677580	0		=			
ANR	2677596	Identifier	data_start		2677580	0					
ANR	2677597	CallExpression	data_start_addr ( )		2677580	1					
ANR	2677598	Callee	data_start_addr		2677580	0					
ANR	2677599	Identifier	data_start_addr		2677580	0					
ANR	2677600	ArgumentList			2677580	1					
ANR	2677601	ExpressionStatement	data_end = data_end_addr ( )	2209:1:62820:62846	2677580	3	True				
ANR	2677602	AssignmentExpression	data_end = data_end_addr ( )		2677580	0		=			
ANR	2677603	Identifier	data_end		2677580	0					
ANR	2677604	CallExpression	data_end_addr ( )		2677580	1					
ANR	2677605	Callee	data_end_addr		2677580	0					
ANR	2677606	Identifier	data_end_addr		2677580	0					
ANR	2677607	ArgumentList			2677580	1					
ANR	2677608	IfStatement	if ( StackGrowsDown ( ) )		2677580	4					
ANR	2677609	Condition	StackGrowsDown ( )	2211:5:62854:62869	2677580	0	True				
ANR	2677610	CallExpression	StackGrowsDown ( )		2677580	0					
ANR	2677611	Callee	StackGrowsDown		2677580	0					
ANR	2677612	Identifier	StackGrowsDown		2677580	0					
ANR	2677613	ArgumentList			2677580	1					
ANR	2677614	CompoundStatement		8:24:135:135	2677580	1					
ANR	2677615	ExpressionStatement	SP = stack_start_addr ( )	2212:2:62877:62900	2677580	0	True				
ANR	2677616	AssignmentExpression	SP = stack_start_addr ( )		2677580	0		=			
ANR	2677617	Identifier	SP		2677580	0					
ANR	2677618	CallExpression	stack_start_addr ( )		2677580	1					
ANR	2677619	Callee	stack_start_addr		2677580	0					
ANR	2677620	Identifier	stack_start_addr		2677580	0					
ANR	2677621	ArgumentList			2677580	1					
ANR	2677622	ElseStatement	else		2677580	0					
ANR	2677623	CompoundStatement		10:8:172:172	2677580	0					
ANR	2677624	ExpressionStatement	SP = stack_end_addr ( )	2214:2:62914:62935	2677580	0	True				
ANR	2677625	AssignmentExpression	SP = stack_end_addr ( )		2677580	0		=			
ANR	2677626	Identifier	SP		2677580	0					
ANR	2677627	CallExpression	stack_end_addr ( )		2677580	1					
ANR	2677628	Callee	stack_end_addr		2677580	0					
ANR	2677629	Identifier	stack_end_addr		2677580	0					
ANR	2677630	ArgumentList			2677580	1					
ANR	2677631	ReturnStatement	return data_start <= SP && SP <= data_end ;	2217:1:62942:62983	2677580	5	True				
ANR	2677632	AndExpression	data_start <= SP && SP <= data_end		2677580	0		&&			
ANR	2677633	RelationalExpression	data_start <= SP		2677580	0		<=			
ANR	2677634	Identifier	data_start		2677580	0					
ANR	2677635	Identifier	SP		2677580	1					
ANR	2677636	RelationalExpression	SP <= data_end		2677580	1		<=			
ANR	2677637	Identifier	SP		2677580	0					
ANR	2677638	Identifier	data_end		2677580	1					
ANR	2677639	ReturnType	static int		2677580	1					
ANR	2677640	Identifier	SP_in_data_area		2677580	2					
ANR	2677641	ParameterList			2677580	3					
ANR	2677642	CFGEntryNode	ENTRY		2677580		True				
ANR	2677643	CFGExitNode	EXIT		2677580		True				
ANR	2677644	Symbol	data_end		2677580						
ANR	2677645	Symbol	data_end_addr		2677580						
ANR	2677646	Symbol	stack_end_addr		2677580						
ANR	2677647	Symbol	data_start		2677580						
ANR	2677648	Symbol	stack_start_addr		2677580						
ANR	2677649	Symbol	SP		2677580						
ANR	2677650	Symbol	data_start_addr		2677580						
ANR	2677651	Symbol	StackGrowsDown		2677580						
ANR	2677652	Function	_condor_save_stack_location	2221:0:63001:63075							
ANR	2677653	FunctionDef	_condor_save_stack_location ()		2677652	0					
ANR	2677654	CompoundStatement		2223:0:63036:63075	2677652	0					
ANR	2677655	ExpressionStatement	SavedStackLoc = stack_start_addr ( )	2224:1:63039:63073	2677652	0	True				
ANR	2677656	AssignmentExpression	SavedStackLoc = stack_start_addr ( )		2677652	0		=			
ANR	2677657	Identifier	SavedStackLoc		2677652	0					
ANR	2677658	CallExpression	stack_start_addr ( )		2677652	1					
ANR	2677659	Callee	stack_start_addr		2677652	0					
ANR	2677660	Identifier	stack_start_addr		2677652	0					
ANR	2677661	ArgumentList			2677652	1					
ANR	2677662	ReturnType	void		2677652	1					
ANR	2677663	Identifier	_condor_save_stack_location		2677652	2					
ANR	2677664	ParameterList			2677652	3					
ANR	2677665	CFGEntryNode	ENTRY		2677652		True				
ANR	2677666	CFGExitNode	EXIT		2677652		True				
ANR	2677667	Symbol	SavedStackLoc		2677652						
ANR	2677668	Symbol	stack_start_addr		2677652						
ANR	2677669	Function	mydprintf	2227:0:63078:63240							
ANR	2677670	FunctionDef	"mydprintf (int foo , const char * fmt)"		2677669	0					
ANR	2677671	CompoundStatement		2228:0:63124:63240	2677669	0					
ANR	2677672	IdentifierDeclStatement	va_list args ;	2229:2:63128:63140	2677669	0	True				
ANR	2677673	IdentifierDecl	args		2677669	0					
ANR	2677674	IdentifierDeclType	va_list		2677669	0					
ANR	2677675	Identifier	args		2677669	1					
ANR	2677676	ExpressionStatement	"va_start ( args , fmt )"	2231:2:63145:63164	2677669	1	True				
ANR	2677677	CallExpression	"va_start ( args , fmt )"		2677669	0					
ANR	2677678	Callee	va_start		2677669	0					
ANR	2677679	Identifier	va_start		2677669	0					
ANR	2677680	ArgumentList	args		2677669	1					
ANR	2677681	Argument	args		2677669	0					
ANR	2677682	Identifier	args		2677669	0					
ANR	2677683	Argument	fmt		2677669	1					
ANR	2677684	Identifier	fmt		2677669	0					
ANR	2677685	ExpressionStatement	"vfprintf ( stdout , fmt , args )"	2232:2:63168:63195	2677669	2	True				
ANR	2677686	CallExpression	"vfprintf ( stdout , fmt , args )"		2677669	0					
ANR	2677687	Callee	vfprintf		2677669	0					
ANR	2677688	Identifier	vfprintf		2677669	0					
ANR	2677689	ArgumentList	stdout		2677669	1					
ANR	2677690	Argument	stdout		2677669	0					
ANR	2677691	Identifier	stdout		2677669	0					
ANR	2677692	Argument	fmt		2677669	1					
ANR	2677693	Identifier	fmt		2677669	0					
ANR	2677694	Argument	args		2677669	2					
ANR	2677695	Identifier	args		2677669	0					
ANR	2677696	ExpressionStatement	va_end ( args )	2233:2:63199:63211	2677669	3	True				
ANR	2677697	CallExpression	va_end ( args )		2677669	0					
ANR	2677698	Callee	va_end		2677669	0					
ANR	2677699	Identifier	va_end		2677669	0					
ANR	2677700	ArgumentList	args		2677669	1					
ANR	2677701	Argument	args		2677669	0					
ANR	2677702	Identifier	args		2677669	0					
ANR	2677703	ExpressionStatement	fflush ( 0 )	2234:2:63215:63224	2677669	4	True				
ANR	2677704	CallExpression	fflush ( 0 )		2677669	0					
ANR	2677705	Callee	fflush		2677669	0					
ANR	2677706	Identifier	fflush		2677669	0					
ANR	2677707	ArgumentList	0		2677669	1					
ANR	2677708	Argument	0		2677669	0					
ANR	2677709	PrimaryExpression	0		2677669	0					
ANR	2677710	ExpressionStatement	foo = foo	2236:2:63229:63238	2677669	5	True				
ANR	2677711	AssignmentExpression	foo = foo		2677669	0		=			
ANR	2677712	Identifier	foo		2677669	0					
ANR	2677713	Identifier	foo		2677669	1					
ANR	2677714	ReturnType	void		2677669	1					
ANR	2677715	Identifier	mydprintf		2677669	2					
ANR	2677716	ParameterList	"int foo , const char * fmt"		2677669	3					
ANR	2677717	Parameter	int foo	2227:15:63093:63099	2677669	0	True				
ANR	2677718	ParameterType	int		2677669	0					
ANR	2677719	Identifier	foo		2677669	1					
ANR	2677720	Parameter	const char * fmt	2227:24:63102:63116	2677669	1	True				
ANR	2677721	ParameterType	const char *		2677669	0					
ANR	2677722	Identifier	fmt		2677669	1					
ANR	2677723	CFGEntryNode	ENTRY		2677669		True				
ANR	2677724	CFGExitNode	EXIT		2677669		True				
ANR	2677725	Symbol	args		2677669						
ANR	2677726	Symbol	stdout		2677669						
ANR	2677727	Symbol	foo		2677669						
ANR	2677728	Symbol	fmt		2677669						
