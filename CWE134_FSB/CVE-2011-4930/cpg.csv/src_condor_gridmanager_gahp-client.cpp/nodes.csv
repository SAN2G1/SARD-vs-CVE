command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3243058	File	data/converged/CVE-2011-4930_htcondor/src_condor_gridmanager_gahp-client.cpp								
ANR	3243059	DeclStmt									
ANR	3243060	Decl							bool	bool	logGahpIo
ANR	3243061	DeclStmt									
ANR	3243062	Decl							unsigned long	unsigned long	logGahpIoSize
ANR	3243063	DeclStmt									
ANR	3243064	Decl							bool	bool	useXMLClassads
ANR	3243065	DeclStmt									
ANR	3243066	Decl							"HashTable < HashKey , GahpServer * >"	"HashTable < HashKey , GahpServer * > ( HASH_TABLE_SIZE , hashFunction )"	GahpServer :: GahpServersById
ANR	3243067	DeclStmt									
ANR	3243068	Decl							const int	const int	GahpServer :: m_buffer_size
ANR	3243069	DeclStmt									
ANR	3243070	Decl							int	int	GahpServer :: m_reaperid
ANR	3243071	DeclStmt									
ANR	3243072	Decl							const char	const char * ( const char * input )	escapeGahpString
ANR	3243073	Function	GahpReconfig	59:0:1652:2262							
ANR	3243074	FunctionDef	GahpReconfig ()		3243073	0					
ANR	3243075	CompoundStatement		60:0:1672:2262	3243073	0					
ANR	3243076	IdentifierDeclStatement	int tmp_int ;	61:1:1675:1686	3243073	0	True				
ANR	3243077	IdentifierDecl	tmp_int		3243073	0					
ANR	3243078	IdentifierDeclType	int		3243073	0					
ANR	3243079	Identifier	tmp_int		3243073	1					
ANR	3243080	ExpressionStatement	"logGahpIo = param_boolean ( ""GRIDMANAGER_GAHPCLIENT_DEBUG"" , true )"	63:1:1690:1755	3243073	1	True				
ANR	3243081	AssignmentExpression	"logGahpIo = param_boolean ( ""GRIDMANAGER_GAHPCLIENT_DEBUG"" , true )"		3243073	0		=			
ANR	3243082	Identifier	logGahpIo		3243073	0					
ANR	3243083	CallExpression	"param_boolean ( ""GRIDMANAGER_GAHPCLIENT_DEBUG"" , true )"		3243073	1					
ANR	3243084	Callee	param_boolean		3243073	0					
ANR	3243085	Identifier	param_boolean		3243073	0					
ANR	3243086	ArgumentList	"""GRIDMANAGER_GAHPCLIENT_DEBUG"""		3243073	1					
ANR	3243087	Argument	"""GRIDMANAGER_GAHPCLIENT_DEBUG"""		3243073	0					
ANR	3243088	PrimaryExpression	"""GRIDMANAGER_GAHPCLIENT_DEBUG"""		3243073	0					
ANR	3243089	Argument	true		3243073	1					
ANR	3243090	Identifier	true		3243073	0					
ANR	3243091	ExpressionStatement	"logGahpIoSize = param_integer ( ""GRIDMANAGER_GAHPCLIENT_DEBUG_SIZE"" , 0 )"	64:1:1758:1829	3243073	2	True				
ANR	3243092	AssignmentExpression	"logGahpIoSize = param_integer ( ""GRIDMANAGER_GAHPCLIENT_DEBUG_SIZE"" , 0 )"		3243073	0		=			
ANR	3243093	Identifier	logGahpIoSize		3243073	0					
ANR	3243094	CallExpression	"param_integer ( ""GRIDMANAGER_GAHPCLIENT_DEBUG_SIZE"" , 0 )"		3243073	1					
ANR	3243095	Callee	param_integer		3243073	0					
ANR	3243096	Identifier	param_integer		3243073	0					
ANR	3243097	ArgumentList	"""GRIDMANAGER_GAHPCLIENT_DEBUG_SIZE"""		3243073	1					
ANR	3243098	Argument	"""GRIDMANAGER_GAHPCLIENT_DEBUG_SIZE"""		3243073	0					
ANR	3243099	PrimaryExpression	"""GRIDMANAGER_GAHPCLIENT_DEBUG_SIZE"""		3243073	0					
ANR	3243100	Argument	0		3243073	1					
ANR	3243101	PrimaryExpression	0		3243073	0					
ANR	3243102	ExpressionStatement	"useXMLClassads = param_boolean ( ""GAHP_USE_XML_CLASSADS"" , false )"	66:1:1833:1897	3243073	3	True				
ANR	3243103	AssignmentExpression	"useXMLClassads = param_boolean ( ""GAHP_USE_XML_CLASSADS"" , false )"		3243073	0		=			
ANR	3243104	Identifier	useXMLClassads		3243073	0					
ANR	3243105	CallExpression	"param_boolean ( ""GAHP_USE_XML_CLASSADS"" , false )"		3243073	1					
ANR	3243106	Callee	param_boolean		3243073	0					
ANR	3243107	Identifier	param_boolean		3243073	0					
ANR	3243108	ArgumentList	"""GAHP_USE_XML_CLASSADS"""		3243073	1					
ANR	3243109	Argument	"""GAHP_USE_XML_CLASSADS"""		3243073	0					
ANR	3243110	PrimaryExpression	"""GAHP_USE_XML_CLASSADS"""		3243073	0					
ANR	3243111	Argument	false		3243073	1					
ANR	3243112	Identifier	false		3243073	0					
ANR	3243113	ExpressionStatement	"tmp_int = param_integer ( ""GRIDMANAGER_MAX_PENDING_REQUESTS"" , 50 )"	68:1:1901:1966	3243073	4	True				
ANR	3243114	AssignmentExpression	"tmp_int = param_integer ( ""GRIDMANAGER_MAX_PENDING_REQUESTS"" , 50 )"		3243073	0		=			
ANR	3243115	Identifier	tmp_int		3243073	0					
ANR	3243116	CallExpression	"param_integer ( ""GRIDMANAGER_MAX_PENDING_REQUESTS"" , 50 )"		3243073	1					
ANR	3243117	Callee	param_integer		3243073	0					
ANR	3243118	Identifier	param_integer		3243073	0					
ANR	3243119	ArgumentList	"""GRIDMANAGER_MAX_PENDING_REQUESTS"""		3243073	1					
ANR	3243120	Argument	"""GRIDMANAGER_MAX_PENDING_REQUESTS"""		3243073	0					
ANR	3243121	PrimaryExpression	"""GRIDMANAGER_MAX_PENDING_REQUESTS"""		3243073	0					
ANR	3243122	Argument	50		3243073	1					
ANR	3243123	PrimaryExpression	50		3243073	0					
ANR	3243124	IdentifierDeclStatement	GahpServer * next_server = NULL ;	70:1:1970:2000	3243073	5	True				
ANR	3243125	IdentifierDecl	* next_server = NULL		3243073	0					
ANR	3243126	IdentifierDeclType	GahpServer *		3243073	0					
ANR	3243127	Identifier	next_server		3243073	1					
ANR	3243128	AssignmentExpression	* next_server = NULL		3243073	2		=			
ANR	3243129	Identifier	NULL		3243073	0					
ANR	3243130	Identifier	NULL		3243073	1					
ANR	3243131	ExpressionStatement	GahpServer :: GahpServersById . startIterations ( )	71:1:2003:2048	3243073	6	True				
ANR	3243132	CallExpression	GahpServer :: GahpServersById . startIterations ( )		3243073	0					
ANR	3243133	Callee	GahpServer :: GahpServersById . startIterations		3243073	0					
ANR	3243134	MemberAccess	GahpServer :: GahpServersById . startIterations		3243073	0					
ANR	3243135	Identifier	GahpServer :: GahpServersById		3243073	0					
ANR	3243136	Identifier	startIterations		3243073	1					
ANR	3243137	ArgumentList			3243073	1					
ANR	3243138	WhileStatement	while ( GahpServer :: GahpServersById . iterate ( next_server ) != 0 )		3243073	7					
ANR	3243139	Condition	GahpServer :: GahpServersById . iterate ( next_server ) != 0	73:9:2060:2114	3243073	0	True				
ANR	3243140	EqualityExpression	GahpServer :: GahpServersById . iterate ( next_server ) != 0		3243073	0		!=			
ANR	3243141	CallExpression	GahpServer :: GahpServersById . iterate ( next_server )		3243073	0					
ANR	3243142	Callee	GahpServer :: GahpServersById . iterate		3243073	0					
ANR	3243143	MemberAccess	GahpServer :: GahpServersById . iterate		3243073	0					
ANR	3243144	Identifier	GahpServer :: GahpServersById		3243073	0					
ANR	3243145	Identifier	iterate		3243073	1					
ANR	3243146	ArgumentList	next_server		3243073	1					
ANR	3243147	Argument	next_server		3243073	0					
ANR	3243148	Identifier	next_server		3243073	0					
ANR	3243149	PrimaryExpression	0		3243073	1					
ANR	3243150	CompoundStatement		14:67:445:445	3243073	1					
ANR	3243151	ExpressionStatement	next_server -> max_pending_requests = tmp_int	74:2:2122:2165	3243073	0	True				
ANR	3243152	AssignmentExpression	next_server -> max_pending_requests = tmp_int		3243073	0		=			
ANR	3243153	PtrMemberAccess	next_server -> max_pending_requests		3243073	0					
ANR	3243154	Identifier	next_server		3243073	0					
ANR	3243155	Identifier	max_pending_requests		3243073	1					
ANR	3243156	Identifier	tmp_int		3243073	1					
ANR	3243157	ReturnType	void		3243073	1					
ANR	3243158	Identifier	GahpReconfig		3243073	2					
ANR	3243159	ParameterList			3243073	3					
ANR	3243160	CFGEntryNode	ENTRY		3243073		True				
ANR	3243161	CFGExitNode	EXIT		3243073		True				
ANR	3243162	Symbol	next_server		3243073						
ANR	3243163	Symbol	NULL		3243073						
ANR	3243164	Symbol	next_server -> max_pending_requests		3243073						
ANR	3243165	Symbol	false		3243073						
ANR	3243166	Symbol	param_boolean		3243073						
ANR	3243167	Symbol	logGahpIoSize		3243073						
ANR	3243168	Symbol	tmp_int		3243073						
ANR	3243169	Symbol	GahpServer :: GahpServersById		3243073						
ANR	3243170	Symbol	true		3243073						
ANR	3243171	Symbol	* next_server		3243073						
ANR	3243172	Symbol	param_integer		3243073						
ANR	3243173	Symbol	useXMLClassads		3243073						
ANR	3243174	Symbol	GahpServer :: GahpServersById . iterate		3243073						
ANR	3243175	Symbol	logGahpIo		3243073						
ANR	3243176	Function	GahpServer :: FindOrCreateGahpServer	80:0:2265:2738							
ANR	3243177	FunctionDef	"GahpServer :: FindOrCreateGahpServer (const char * id , const char * path , const ArgList * args)"		3243176	0					
ANR	3243178	CompoundStatement		83:0:2395:2738	3243176	0					
ANR	3243179	IdentifierDeclStatement	int rc ;	84:1:2398:2404	3243176	0	True				
ANR	3243180	IdentifierDecl	rc		3243176	0					
ANR	3243181	IdentifierDeclType	int		3243176	0					
ANR	3243182	Identifier	rc		3243176	1					
ANR	3243183	IdentifierDeclStatement	GahpServer * server = NULL ;	85:1:2407:2432	3243176	1	True				
ANR	3243184	IdentifierDecl	* server = NULL		3243176	0					
ANR	3243185	IdentifierDeclType	GahpServer *		3243176	0					
ANR	3243186	Identifier	server		3243176	1					
ANR	3243187	AssignmentExpression	* server = NULL		3243176	2		=			
ANR	3243188	Identifier	NULL		3243176	0					
ANR	3243189	Identifier	NULL		3243176	1					
ANR	3243190	IfStatement	if ( path == NULL )		3243176	2					
ANR	3243191	Condition	path == NULL	87:6:2441:2452	3243176	0	True				
ANR	3243192	EqualityExpression	path == NULL		3243176	0		==			
ANR	3243193	Identifier	path		3243176	0					
ANR	3243194	Identifier	NULL		3243176	1					
ANR	3243195	CompoundStatement		5:21:60:60	3243176	1					
ANR	3243196	ExpressionStatement	path = GAHPCLIENT_DEFAULT_SERVER_PATH	88:2:2460:2497	3243176	0	True				
ANR	3243197	AssignmentExpression	path = GAHPCLIENT_DEFAULT_SERVER_PATH		3243176	0		=			
ANR	3243198	Identifier	path		3243176	0					
ANR	3243199	Identifier	GAHPCLIENT_DEFAULT_SERVER_PATH		3243176	1					
ANR	3243200	ExpressionStatement	"rc = GahpServersById . lookup ( HashKey ( id ) , server )"	91:1:2504:2556	3243176	3	True				
ANR	3243201	AssignmentExpression	"rc = GahpServersById . lookup ( HashKey ( id ) , server )"		3243176	0		=			
ANR	3243202	Identifier	rc		3243176	0					
ANR	3243203	CallExpression	"GahpServersById . lookup ( HashKey ( id ) , server )"		3243176	1					
ANR	3243204	Callee	GahpServersById . lookup		3243176	0					
ANR	3243205	MemberAccess	GahpServersById . lookup		3243176	0					
ANR	3243206	Identifier	GahpServersById		3243176	0					
ANR	3243207	Identifier	lookup		3243176	1					
ANR	3243208	ArgumentList	HashKey ( id )		3243176	1					
ANR	3243209	Argument	HashKey ( id )		3243176	0					
ANR	3243210	CallExpression	HashKey ( id )		3243176	0					
ANR	3243211	Callee	HashKey		3243176	0					
ANR	3243212	Identifier	HashKey		3243176	0					
ANR	3243213	ArgumentList	id		3243176	1					
ANR	3243214	Argument	id		3243176	0					
ANR	3243215	Identifier	id		3243176	0					
ANR	3243216	Argument	server		3243176	1					
ANR	3243217	Identifier	server		3243176	0					
ANR	3243218	IfStatement	if ( rc != 0 )		3243176	4					
ANR	3243219	Condition	rc != 0	92:6:2564:2570	3243176	0	True				
ANR	3243220	EqualityExpression	rc != 0		3243176	0		!=			
ANR	3243221	Identifier	rc		3243176	0					
ANR	3243222	PrimaryExpression	0		3243176	1					
ANR	3243223	CompoundStatement		10:16:178:178	3243176	1					
ANR	3243224	ExpressionStatement	"server = new GahpServer ( id , path , args )"	93:2:2578:2619	3243176	0	True				
ANR	3243225	AssignmentExpression	"server = new GahpServer ( id , path , args )"		3243176	0		=			
ANR	3243226	Identifier	server		3243176	0					
ANR	3243227	Expression	"id , path , args"		3243176	1					
ANR	3243228	Identifier	id		3243176	0					
ANR	3243229	Expression	"path , args"		3243176	1					
ANR	3243230	Identifier	path		3243176	0					
ANR	3243231	Identifier	args		3243176	1					
ANR	3243232	ExpressionStatement	ASSERT ( server )	94:2:2623:2637	3243176	1	True				
ANR	3243233	CallExpression	ASSERT ( server )		3243176	0					
ANR	3243234	Callee	ASSERT		3243176	0					
ANR	3243235	Identifier	ASSERT		3243176	0					
ANR	3243236	ArgumentList	server		3243176	1					
ANR	3243237	Argument	server		3243176	0					
ANR	3243238	Identifier	server		3243176	0					
ANR	3243239	ExpressionStatement	"GahpServersById . insert ( HashKey ( id ) , server )"	95:2:2641:2688	3243176	2	True				
ANR	3243240	CallExpression	"GahpServersById . insert ( HashKey ( id ) , server )"		3243176	0					
ANR	3243241	Callee	GahpServersById . insert		3243176	0					
ANR	3243242	MemberAccess	GahpServersById . insert		3243176	0					
ANR	3243243	Identifier	GahpServersById		3243176	0					
ANR	3243244	Identifier	insert		3243176	1					
ANR	3243245	ArgumentList	HashKey ( id )		3243176	1					
ANR	3243246	Argument	HashKey ( id )		3243176	0					
ANR	3243247	CallExpression	HashKey ( id )		3243176	0					
ANR	3243248	Callee	HashKey		3243176	0					
ANR	3243249	Identifier	HashKey		3243176	0					
ANR	3243250	ArgumentList	id		3243176	1					
ANR	3243251	Argument	id		3243176	0					
ANR	3243252	Identifier	id		3243176	0					
ANR	3243253	Argument	server		3243176	1					
ANR	3243254	Identifier	server		3243176	0					
ANR	3243255	ElseStatement	else		3243176	0					
ANR	3243256	CompoundStatement		14:8:302:302	3243176	0					
ANR	3243257	ExpressionStatement	ASSERT ( server )	97:2:2702:2716	3243176	0	True				
ANR	3243258	CallExpression	ASSERT ( server )		3243176	0					
ANR	3243259	Callee	ASSERT		3243176	0					
ANR	3243260	Identifier	ASSERT		3243176	0					
ANR	3243261	ArgumentList	server		3243176	1					
ANR	3243262	Argument	server		3243176	0					
ANR	3243263	Identifier	server		3243176	0					
ANR	3243264	ReturnStatement	return server ;	100:1:2723:2736	3243176	5	True				
ANR	3243265	Identifier	server		3243176	0					
ANR	3243266	ReturnType	GahpServer *		3243176	1					
ANR	3243267	Identifier	GahpServer :: FindOrCreateGahpServer		3243176	2					
ANR	3243268	ParameterList	"const char * id , const char * path , const ArgList * args"		3243176	3					
ANR	3243269	Parameter	const char * id	80:47:2312:2325	3243176	0	True				
ANR	3243270	ParameterType	const char *		3243176	0					
ANR	3243271	Identifier	id		3243176	1					
ANR	3243272	Parameter	const char * path	81:14:2342:2357	3243176	1	True				
ANR	3243273	ParameterType	const char *		3243176	0					
ANR	3243274	Identifier	path		3243176	1					
ANR	3243275	Parameter	const ArgList * args	82:14:2374:2392	3243176	2	True				
ANR	3243276	ParameterType	const ArgList *		3243176	0					
ANR	3243277	Identifier	args		3243176	1					
ANR	3243278	CFGEntryNode	ENTRY		3243176		True				
ANR	3243279	CFGExitNode	EXIT		3243176		True				
ANR	3243280	Symbol	args		3243176						
ANR	3243281	Symbol	path		3243176						
ANR	3243282	Symbol	rc		3243176						
ANR	3243283	Symbol	server		3243176						
ANR	3243284	Symbol	GahpServersById . lookup		3243176						
ANR	3243285	Symbol	NULL		3243176						
ANR	3243286	Symbol	GAHPCLIENT_DEFAULT_SERVER_PATH		3243176						
ANR	3243287	Symbol	HashKey		3243176						
ANR	3243288	Symbol	id		3243176						
ANR	3243289	Symbol	GahpServersById		3243176						
ANR	3243290	Function	GahpServer :: GahpServer	103:0:2741:4257							
ANR	3243291	FunctionDef	"GahpServer :: GahpServer (const char * id , const char * path , const ArgList * args)"		3243290	0					
ANR	3243292	CompoundStatement		104:0:2819:4257	3243290	0					
ANR	3243293	ExpressionStatement	m_gahp_pid = - 1	105:1:2822:2837	3243290	0	True				
ANR	3243294	AssignmentExpression	m_gahp_pid = - 1		3243290	0		=			
ANR	3243295	Identifier	m_gahp_pid		3243290	0					
ANR	3243296	UnaryOperationExpression	- 1		3243290	1					
ANR	3243297	UnaryOperator	-		3243290	0					
ANR	3243298	PrimaryExpression	1		3243290	1					
ANR	3243299	ExpressionStatement	m_gahp_startup_failed = false	106:1:2840:2869	3243290	1	True				
ANR	3243300	AssignmentExpression	m_gahp_startup_failed = false		3243290	0		=			
ANR	3243301	Identifier	m_gahp_startup_failed		3243290	0					
ANR	3243302	Identifier	false		3243290	1					
ANR	3243303	ExpressionStatement	m_gahp_readfd = - 1	107:1:2872:2890	3243290	2	True				
ANR	3243304	AssignmentExpression	m_gahp_readfd = - 1		3243290	0		=			
ANR	3243305	Identifier	m_gahp_readfd		3243290	0					
ANR	3243306	UnaryOperationExpression	- 1		3243290	1					
ANR	3243307	UnaryOperator	-		3243290	0					
ANR	3243308	PrimaryExpression	1		3243290	1					
ANR	3243309	ExpressionStatement	m_gahp_writefd = - 1	108:1:2893:2912	3243290	3	True				
ANR	3243310	AssignmentExpression	m_gahp_writefd = - 1		3243290	0		=			
ANR	3243311	Identifier	m_gahp_writefd		3243290	0					
ANR	3243312	UnaryOperationExpression	- 1		3243290	1					
ANR	3243313	UnaryOperator	-		3243290	0					
ANR	3243314	PrimaryExpression	1		3243290	1					
ANR	3243315	ExpressionStatement	m_gahp_errorfd = - 1	109:1:2915:2934	3243290	4	True				
ANR	3243316	AssignmentExpression	m_gahp_errorfd = - 1		3243290	0		=			
ANR	3243317	Identifier	m_gahp_errorfd		3243290	0					
ANR	3243318	UnaryOperationExpression	- 1		3243290	1					
ANR	3243319	UnaryOperator	-		3243290	0					
ANR	3243320	PrimaryExpression	1		3243290	1					
ANR	3243321	ExpressionStatement	"m_gahp_error_buffer = """""	110:1:2937:2961	3243290	5	True				
ANR	3243322	AssignmentExpression	"m_gahp_error_buffer = """""		3243290	0		=			
ANR	3243323	Identifier	m_gahp_error_buffer		3243290	0					
ANR	3243324	PrimaryExpression	""""""		3243290	1					
ANR	3243325	ExpressionStatement	m_reference_count = 0	111:1:2964:2985	3243290	6	True				
ANR	3243326	AssignmentExpression	m_reference_count = 0		3243290	0		=			
ANR	3243327	Identifier	m_reference_count		3243290	0					
ANR	3243328	PrimaryExpression	0		3243290	1					
ANR	3243329	ExpressionStatement	m_commands_supported = NULL	112:1:2988:3015	3243290	7	True				
ANR	3243330	AssignmentExpression	m_commands_supported = NULL		3243290	0		=			
ANR	3243331	Identifier	m_commands_supported		3243290	0					
ANR	3243332	Identifier	NULL		3243290	1					
ANR	3243333	ExpressionStatement	m_pollInterval = 5	113:1:3018:3036	3243290	8	True				
ANR	3243334	AssignmentExpression	m_pollInterval = 5		3243290	0		=			
ANR	3243335	Identifier	m_pollInterval		3243290	0					
ANR	3243336	PrimaryExpression	5		3243290	1					
ANR	3243337	ExpressionStatement	poll_tid = - 1	114:1:3039:3052	3243290	9	True				
ANR	3243338	AssignmentExpression	poll_tid = - 1		3243290	0		=			
ANR	3243339	Identifier	poll_tid		3243290	0					
ANR	3243340	UnaryOperationExpression	- 1		3243290	1					
ANR	3243341	UnaryOperator	-		3243290	0					
ANR	3243342	PrimaryExpression	1		3243290	1					
ANR	3243343	ExpressionStatement	"max_pending_requests = param_integer ( ""GRIDMANAGER_MAX_PENDING_REQUESTS"" , 50 )"	115:1:3055:3133	3243290	10	True				
ANR	3243344	AssignmentExpression	"max_pending_requests = param_integer ( ""GRIDMANAGER_MAX_PENDING_REQUESTS"" , 50 )"		3243290	0		=			
ANR	3243345	Identifier	max_pending_requests		3243290	0					
ANR	3243346	CallExpression	"param_integer ( ""GRIDMANAGER_MAX_PENDING_REQUESTS"" , 50 )"		3243290	1					
ANR	3243347	Callee	param_integer		3243290	0					
ANR	3243348	Identifier	param_integer		3243290	0					
ANR	3243349	ArgumentList	"""GRIDMANAGER_MAX_PENDING_REQUESTS"""		3243290	1					
ANR	3243350	Argument	"""GRIDMANAGER_MAX_PENDING_REQUESTS"""		3243290	0					
ANR	3243351	PrimaryExpression	"""GRIDMANAGER_MAX_PENDING_REQUESTS"""		3243290	0					
ANR	3243352	Argument	50		3243290	1					
ANR	3243353	PrimaryExpression	50		3243290	0					
ANR	3243354	ExpressionStatement	num_pending_requests = 0	116:1:3136:3160	3243290	11	True				
ANR	3243355	AssignmentExpression	num_pending_requests = 0		3243290	0		=			
ANR	3243356	Identifier	num_pending_requests		3243290	0					
ANR	3243357	PrimaryExpression	0		3243290	1					
ANR	3243358	ExpressionStatement	poll_pending = false	117:1:3163:3183	3243290	12	True				
ANR	3243359	AssignmentExpression	poll_pending = false		3243290	0		=			
ANR	3243360	Identifier	poll_pending		3243290	0					
ANR	3243361	Identifier	false		3243290	1					
ANR	3243362	ExpressionStatement	use_prefix = false	118:1:3186:3204	3243290	13	True				
ANR	3243363	AssignmentExpression	use_prefix = false		3243290	0		=			
ANR	3243364	Identifier	use_prefix		3243290	0					
ANR	3243365	Identifier	false		3243290	1					
ANR	3243366	ExpressionStatement	requestTable = NULL	119:1:3207:3226	3243290	14	True				
ANR	3243367	AssignmentExpression	requestTable = NULL		3243290	0		=			
ANR	3243368	Identifier	requestTable		3243290	0					
ANR	3243369	Identifier	NULL		3243290	1					
ANR	3243370	ExpressionStatement	current_proxy = NULL	120:1:3229:3249	3243290	15	True				
ANR	3243371	AssignmentExpression	current_proxy = NULL		3243290	0		=			
ANR	3243372	Identifier	current_proxy		3243290	0					
ANR	3243373	Identifier	NULL		3243290	1					
ANR	3243374	ExpressionStatement	skip_next_r = false	121:1:3252:3271	3243290	16	True				
ANR	3243375	AssignmentExpression	skip_next_r = false		3243290	0		=			
ANR	3243376	Identifier	skip_next_r		3243290	0					
ANR	3243377	Identifier	false		3243290	1					
ANR	3243378	ExpressionStatement	m_deleteMeTid = TIMER_UNSET	122:1:3274:3301	3243290	17	True				
ANR	3243379	AssignmentExpression	m_deleteMeTid = TIMER_UNSET		3243290	0		=			
ANR	3243380	Identifier	m_deleteMeTid		3243290	0					
ANR	3243381	Identifier	TIMER_UNSET		3243290	1					
ANR	3243382	ExpressionStatement	next_reqid = 1	124:1:3305:3319	3243290	18	True				
ANR	3243383	AssignmentExpression	next_reqid = 1		3243290	0		=			
ANR	3243384	Identifier	next_reqid		3243290	0					
ANR	3243385	PrimaryExpression	1		3243290	1					
ANR	3243386	ExpressionStatement	rotated_reqids = false	125:1:3322:3344	3243290	19	True				
ANR	3243387	AssignmentExpression	rotated_reqids = false		3243290	0		=			
ANR	3243388	Identifier	rotated_reqids		3243290	0					
ANR	3243389	Identifier	false		3243290	1					
ANR	3243390	ExpressionStatement	"requestTable = new HashTable < int , GahpClient * > ( 300 , & hashFuncInt )"	127:1:3348:3414	3243290	20	True				
ANR	3243391	AssignmentExpression	"requestTable = new HashTable < int , GahpClient * > ( 300 , & hashFuncInt )"		3243290	0		=			
ANR	3243392	Identifier	requestTable		3243290	0					
ANR	3243393	Expression	"300 , & hashFuncInt"		3243290	1					
ANR	3243394	PrimaryExpression	300		3243290	0					
ANR	3243395	UnaryOperationExpression	& hashFuncInt		3243290	1					
ANR	3243396	UnaryOperator	&		3243290	0					
ANR	3243397	Identifier	hashFuncInt		3243290	1					
ANR	3243398	ExpressionStatement	ASSERT ( requestTable )	128:1:3417:3437	3243290	21	True				
ANR	3243399	CallExpression	ASSERT ( requestTable )		3243290	0					
ANR	3243400	Callee	ASSERT		3243290	0					
ANR	3243401	Identifier	ASSERT		3243290	0					
ANR	3243402	ArgumentList	requestTable		3243290	1					
ANR	3243403	Argument	requestTable		3243290	0					
ANR	3243404	Identifier	requestTable		3243290	0					
ANR	3243405	ExpressionStatement	globus_gass_server_url = NULL	130:1:3441:3470	3243290	22	True				
ANR	3243406	AssignmentExpression	globus_gass_server_url = NULL		3243290	0		=			
ANR	3243407	Identifier	globus_gass_server_url		3243290	0					
ANR	3243408	Identifier	NULL		3243290	1					
ANR	3243409	ExpressionStatement	globus_gt2_gram_user_callback_arg = NULL	131:1:3473:3513	3243290	23	True				
ANR	3243410	AssignmentExpression	globus_gt2_gram_user_callback_arg = NULL		3243290	0		=			
ANR	3243411	Identifier	globus_gt2_gram_user_callback_arg		3243290	0					
ANR	3243412	Identifier	NULL		3243290	1					
ANR	3243413	ExpressionStatement	globus_gt2_gram_callback_func = NULL	132:1:3516:3552	3243290	24	True				
ANR	3243414	AssignmentExpression	globus_gt2_gram_callback_func = NULL		3243290	0		=			
ANR	3243415	Identifier	globus_gt2_gram_callback_func		3243290	0					
ANR	3243416	Identifier	NULL		3243290	1					
ANR	3243417	ExpressionStatement	globus_gt2_gram_callback_reqid = 0	133:1:3555:3589	3243290	25	True				
ANR	3243418	AssignmentExpression	globus_gt2_gram_callback_reqid = 0		3243290	0		=			
ANR	3243419	Identifier	globus_gt2_gram_callback_reqid		3243290	0					
ANR	3243420	PrimaryExpression	0		3243290	1					
ANR	3243421	ExpressionStatement	globus_gt2_gram_callback_contact = NULL	134:1:3592:3631	3243290	26	True				
ANR	3243422	AssignmentExpression	globus_gt2_gram_callback_contact = NULL		3243290	0		=			
ANR	3243423	Identifier	globus_gt2_gram_callback_contact		3243290	0					
ANR	3243424	Identifier	NULL		3243290	1					
ANR	3243425	ExpressionStatement	globus_gt4_gram_user_callback_arg = NULL	136:1:3635:3675	3243290	27	True				
ANR	3243426	AssignmentExpression	globus_gt4_gram_user_callback_arg = NULL		3243290	0		=			
ANR	3243427	Identifier	globus_gt4_gram_user_callback_arg		3243290	0					
ANR	3243428	Identifier	NULL		3243290	1					
ANR	3243429	ExpressionStatement	globus_gt4_gram_callback_func = NULL	137:1:3678:3714	3243290	28	True				
ANR	3243430	AssignmentExpression	globus_gt4_gram_callback_func = NULL		3243290	0		=			
ANR	3243431	Identifier	globus_gt4_gram_callback_func		3243290	0					
ANR	3243432	Identifier	NULL		3243290	1					
ANR	3243433	ExpressionStatement	globus_gt4_gram_callback_reqid = 0	138:1:3717:3751	3243290	29	True				
ANR	3243434	AssignmentExpression	globus_gt4_gram_callback_reqid = 0		3243290	0		=			
ANR	3243435	Identifier	globus_gt4_gram_callback_reqid		3243290	0					
ANR	3243436	PrimaryExpression	0		3243290	1					
ANR	3243437	ExpressionStatement	globus_gt4_gram_callback_contact = NULL	139:1:3754:3793	3243290	30	True				
ANR	3243438	AssignmentExpression	globus_gt4_gram_callback_contact = NULL		3243290	0		=			
ANR	3243439	Identifier	globus_gt4_gram_callback_contact		3243290	0					
ANR	3243440	Identifier	NULL		3243290	1					
ANR	3243441	ExpressionStatement	unicore_gahp_callback_func = NULL	141:1:3797:3830	3243290	31	True				
ANR	3243442	AssignmentExpression	unicore_gahp_callback_func = NULL		3243290	0		=			
ANR	3243443	Identifier	unicore_gahp_callback_func		3243290	0					
ANR	3243444	Identifier	NULL		3243290	1					
ANR	3243445	ExpressionStatement	unicore_gahp_callback_reqid = 0	142:1:3833:3864	3243290	32	True				
ANR	3243446	AssignmentExpression	unicore_gahp_callback_reqid = 0		3243290	0		=			
ANR	3243447	Identifier	unicore_gahp_callback_reqid		3243290	0					
ANR	3243448	PrimaryExpression	0		3243290	1					
ANR	3243449	ExpressionStatement	my_id = strdup ( id )	144:1:3868:3886	3243290	33	True				
ANR	3243450	AssignmentExpression	my_id = strdup ( id )		3243290	0		=			
ANR	3243451	Identifier	my_id		3243290	0					
ANR	3243452	CallExpression	strdup ( id )		3243290	1					
ANR	3243453	Callee	strdup		3243290	0					
ANR	3243454	Identifier	strdup		3243290	0					
ANR	3243455	ArgumentList	id		3243290	1					
ANR	3243456	Argument	id		3243290	0					
ANR	3243457	Identifier	id		3243290	0					
ANR	3243458	ExpressionStatement	binary_path = strdup ( path )	145:1:3889:3915	3243290	34	True				
ANR	3243459	AssignmentExpression	binary_path = strdup ( path )		3243290	0		=			
ANR	3243460	Identifier	binary_path		3243290	0					
ANR	3243461	CallExpression	strdup ( path )		3243290	1					
ANR	3243462	Callee	strdup		3243290	0					
ANR	3243463	Identifier	strdup		3243290	0					
ANR	3243464	ArgumentList	path		3243290	1					
ANR	3243465	Argument	path		3243290	0					
ANR	3243466	Identifier	path		3243290	0					
ANR	3243467	IfStatement	if ( args != NULL )		3243290	35					
ANR	3243468	Condition	args != NULL	146:6:3923:3934	3243290	0	True				
ANR	3243469	EqualityExpression	args != NULL		3243290	0		!=			
ANR	3243470	Identifier	args		3243290	0					
ANR	3243471	Identifier	NULL		3243290	1					
ANR	3243472	CompoundStatement		43:21:1118:1118	3243290	1					
ANR	3243473	ExpressionStatement	binary_args . AppendArgsFromArgList ( * args )	147:2:3942:3984	3243290	0	True				
ANR	3243474	CallExpression	binary_args . AppendArgsFromArgList ( * args )		3243290	0					
ANR	3243475	Callee	binary_args . AppendArgsFromArgList		3243290	0					
ANR	3243476	MemberAccess	binary_args . AppendArgsFromArgList		3243290	0					
ANR	3243477	Identifier	binary_args		3243290	0					
ANR	3243478	Identifier	AppendArgsFromArgList		3243290	1					
ANR	3243479	ArgumentList	* args		3243290	1					
ANR	3243480	Argument	* args		3243290	0					
ANR	3243481	UnaryOperationExpression	* args		3243290	0					
ANR	3243482	UnaryOperator	*		3243290	0					
ANR	3243483	Identifier	args		3243290	1					
ANR	3243484	ExpressionStatement	proxy_check_tid = TIMER_UNSET	149:1:3990:4019	3243290	36	True				
ANR	3243485	AssignmentExpression	proxy_check_tid = TIMER_UNSET		3243290	0		=			
ANR	3243486	Identifier	proxy_check_tid		3243290	0					
ANR	3243487	Identifier	TIMER_UNSET		3243290	1					
ANR	3243488	ExpressionStatement	master_proxy = NULL	150:1:4022:4041	3243290	37	True				
ANR	3243489	AssignmentExpression	master_proxy = NULL		3243290	0		=			
ANR	3243490	Identifier	master_proxy		3243290	0					
ANR	3243491	Identifier	NULL		3243290	1					
ANR	3243492	ExpressionStatement	is_initialized = false	151:1:4044:4066	3243290	38	True				
ANR	3243493	AssignmentExpression	is_initialized = false		3243290	0		=			
ANR	3243494	Identifier	is_initialized		3243290	0					
ANR	3243495	Identifier	false		3243290	1					
ANR	3243496	ExpressionStatement	can_cache_proxies = false	152:1:4069:4094	3243290	39	True				
ANR	3243497	AssignmentExpression	can_cache_proxies = false		3243290	0		=			
ANR	3243498	Identifier	can_cache_proxies		3243290	0					
ANR	3243499	Identifier	false		3243290	1					
ANR	3243500	ExpressionStatement	ProxiesByFilename = NULL	153:1:4097:4121	3243290	40	True				
ANR	3243501	AssignmentExpression	ProxiesByFilename = NULL		3243290	0		=			
ANR	3243502	Identifier	ProxiesByFilename		3243290	0					
ANR	3243503	Identifier	NULL		3243290	1					
ANR	3243504	ExpressionStatement	m_gahp_version [ 0 ] = '\\0'	155:1:4125:4149	3243290	41	True				
ANR	3243505	AssignmentExpression	m_gahp_version [ 0 ] = '\\0'		3243290	0		=			
ANR	3243506	ArrayIndexing	m_gahp_version [ 0 ]		3243290	0					
ANR	3243507	Identifier	m_gahp_version		3243290	0					
ANR	3243508	PrimaryExpression	0		3243290	1					
ANR	3243509	PrimaryExpression	'\\0'		3243290	1					
ANR	3243510	ExpressionStatement	m_buffer_pos = 0	156:1:4152:4168	3243290	42	True				
ANR	3243511	AssignmentExpression	m_buffer_pos = 0		3243290	0		=			
ANR	3243512	Identifier	m_buffer_pos		3243290	0					
ANR	3243513	PrimaryExpression	0		3243290	1					
ANR	3243514	ExpressionStatement	m_buffer_end = 0	157:1:4171:4187	3243290	43	True				
ANR	3243515	AssignmentExpression	m_buffer_end = 0		3243290	0		=			
ANR	3243516	Identifier	m_buffer_end		3243290	0					
ANR	3243517	PrimaryExpression	0		3243290	1					
ANR	3243518	ExpressionStatement	m_buffer = ( char * ) malloc ( m_buffer_size )	158:1:4190:4232	3243290	44	True				
ANR	3243519	AssignmentExpression	m_buffer = ( char * ) malloc ( m_buffer_size )		3243290	0		=			
ANR	3243520	Identifier	m_buffer		3243290	0					
ANR	3243521	CastExpression	( char * ) malloc ( m_buffer_size )		3243290	1					
ANR	3243522	CastTarget	char *		3243290	0					
ANR	3243523	CallExpression	malloc ( m_buffer_size )		3243290	1					
ANR	3243524	Callee	malloc		3243290	0					
ANR	3243525	Identifier	malloc		3243290	0					
ANR	3243526	ArgumentList	m_buffer_size		3243290	1					
ANR	3243527	Argument	m_buffer_size		3243290	0					
ANR	3243528	Identifier	m_buffer_size		3243290	0					
ANR	3243529	ExpressionStatement	m_in_results = false	159:1:4235:4255	3243290	45	True				
ANR	3243530	AssignmentExpression	m_in_results = false		3243290	0		=			
ANR	3243531	Identifier	m_in_results		3243290	0					
ANR	3243532	Identifier	false		3243290	1					
ANR	3243533	Identifier	GahpServer :: GahpServer		3243290	1					
ANR	3243534	ParameterList	"const char * id , const char * path , const ArgList * args"		3243290	2					
ANR	3243535	Parameter	const char * id	103:23:2764:2777	3243290	0	True				
ANR	3243536	ParameterType	const char *		3243290	0					
ANR	3243537	Identifier	id		3243290	1					
ANR	3243538	Parameter	const char * path	103:39:2780:2795	3243290	1	True				
ANR	3243539	ParameterType	const char *		3243290	0					
ANR	3243540	Identifier	path		3243290	1					
ANR	3243541	Parameter	const ArgList * args	103:57:2798:2816	3243290	2	True				
ANR	3243542	ParameterType	const ArgList *		3243290	0					
ANR	3243543	Identifier	args		3243290	1					
ANR	3243544	CFGEntryNode	ENTRY		3243290		True				
ANR	3243545	CFGExitNode	EXIT		3243290		True				
ANR	3243546	Symbol	ProxiesByFilename		3243290						
ANR	3243547	Symbol	m_gahp_writefd		3243290						
ANR	3243548	Symbol	max_pending_requests		3243290						
ANR	3243549	Symbol	num_pending_requests		3243290						
ANR	3243550	Symbol	poll_pending		3243290						
ANR	3243551	Symbol	m_commands_supported		3243290						
ANR	3243552	Symbol	globus_gt2_gram_callback_contact		3243290						
ANR	3243553	Symbol	m_gahp_pid		3243290						
ANR	3243554	Symbol	* args		3243290						
ANR	3243555	Symbol	path		3243290						
ANR	3243556	Symbol	m_reference_count		3243290						
ANR	3243557	Symbol	m_pollInterval		3243290						
ANR	3243558	Symbol	binary_args		3243290						
ANR	3243559	Symbol	* m_gahp_version		3243290						
ANR	3243560	Symbol	skip_next_r		3243290						
ANR	3243561	Symbol	id		3243290						
ANR	3243562	Symbol	TIMER_UNSET		3243290						
ANR	3243563	Symbol	unicore_gahp_callback_func		3243290						
ANR	3243564	Symbol	NULL		3243290						
ANR	3243565	Symbol	m_gahp_errorfd		3243290						
ANR	3243566	Symbol	unicore_gahp_callback_reqid		3243290						
ANR	3243567	Symbol	globus_gt2_gram_user_callback_arg		3243290						
ANR	3243568	Symbol	globus_gass_server_url		3243290						
ANR	3243569	Symbol	m_gahp_error_buffer		3243290						
ANR	3243570	Symbol	my_id		3243290						
ANR	3243571	Symbol	param_integer		3243290						
ANR	3243572	Symbol	globus_gt2_gram_callback_reqid		3243290						
ANR	3243573	Symbol	proxy_check_tid		3243290						
ANR	3243574	Symbol	m_buffer_pos		3243290						
ANR	3243575	Symbol	rotated_reqids		3243290						
ANR	3243576	Symbol	m_deleteMeTid		3243290						
ANR	3243577	Symbol	m_buffer_end		3243290						
ANR	3243578	Symbol	poll_tid		3243290						
ANR	3243579	Symbol	current_proxy		3243290						
ANR	3243580	Symbol	& hashFuncInt		3243290						
ANR	3243581	Symbol	can_cache_proxies		3243290						
ANR	3243582	Symbol	m_buffer_size		3243290						
ANR	3243583	Symbol	globus_gt2_gram_callback_func		3243290						
ANR	3243584	Symbol	globus_gt4_gram_callback_func		3243290						
ANR	3243585	Symbol	globus_gt4_gram_user_callback_arg		3243290						
ANR	3243586	Symbol	malloc		3243290						
ANR	3243587	Symbol	use_prefix		3243290						
ANR	3243588	Symbol	globus_gt4_gram_callback_contact		3243290						
ANR	3243589	Symbol	false		3243290						
ANR	3243590	Symbol	m_gahp_startup_failed		3243290						
ANR	3243591	Symbol	globus_gt4_gram_callback_reqid		3243290						
ANR	3243592	Symbol	m_gahp_readfd		3243290						
ANR	3243593	Symbol	next_reqid		3243290						
ANR	3243594	Symbol	m_in_results		3243290						
ANR	3243595	Symbol	args		3243290						
ANR	3243596	Symbol	is_initialized		3243290						
ANR	3243597	Symbol	requestTable		3243290						
ANR	3243598	Symbol	master_proxy		3243290						
ANR	3243599	Symbol	binary_path		3243290						
ANR	3243600	Symbol	m_gahp_version		3243290						
ANR	3243601	Symbol	m_buffer		3243290						
ANR	3243602	Symbol	strdup		3243290						
ANR	3243603	Function	GahpServer :: ~GahpServer	162:0:4260:5790							
ANR	3243604	FunctionDef	GahpServer :: ~GahpServer ()		3243603	0					
ANR	3243605	CompoundStatement		163:0:4286:5790	3243603	0					
ANR	3243606	IfStatement	if ( my_id != NULL )		3243603	0					
ANR	3243607	Condition	my_id != NULL	164:6:4294:4306	3243603	0	True				
ANR	3243608	EqualityExpression	my_id != NULL		3243603	0		!=			
ANR	3243609	Identifier	my_id		3243603	0					
ANR	3243610	Identifier	NULL		3243603	1					
ANR	3243611	CompoundStatement		2:22:23:23	3243603	1					
ANR	3243612	ExpressionStatement	GahpServersById . remove ( HashKey ( my_id ) )	165:2:4314:4356	3243603	0	True				
ANR	3243613	CallExpression	GahpServersById . remove ( HashKey ( my_id ) )		3243603	0					
ANR	3243614	Callee	GahpServersById . remove		3243603	0					
ANR	3243615	MemberAccess	GahpServersById . remove		3243603	0					
ANR	3243616	Identifier	GahpServersById		3243603	0					
ANR	3243617	Identifier	remove		3243603	1					
ANR	3243618	ArgumentList	HashKey ( my_id )		3243603	1					
ANR	3243619	Argument	HashKey ( my_id )		3243603	0					
ANR	3243620	CallExpression	HashKey ( my_id )		3243603	0					
ANR	3243621	Callee	HashKey		3243603	0					
ANR	3243622	Identifier	HashKey		3243603	0					
ANR	3243623	ArgumentList	my_id		3243603	1					
ANR	3243624	Argument	my_id		3243603	0					
ANR	3243625	Identifier	my_id		3243603	0					
ANR	3243626	IfStatement	if ( m_deleteMeTid != TIMER_UNSET )		3243603	1					
ANR	3243627	Condition	m_deleteMeTid != TIMER_UNSET	167:6:4367:4394	3243603	0	True				
ANR	3243628	EqualityExpression	m_deleteMeTid != TIMER_UNSET		3243603	0		!=			
ANR	3243629	Identifier	m_deleteMeTid		3243603	0					
ANR	3243630	Identifier	TIMER_UNSET		3243603	1					
ANR	3243631	CompoundStatement		5:37:111:111	3243603	1					
ANR	3243632	ExpressionStatement	daemonCore -> Cancel_Timer ( m_deleteMeTid )	168:2:4402:4443	3243603	0	True				
ANR	3243633	CallExpression	daemonCore -> Cancel_Timer ( m_deleteMeTid )		3243603	0					
ANR	3243634	Callee	daemonCore -> Cancel_Timer		3243603	0					
ANR	3243635	PtrMemberAccess	daemonCore -> Cancel_Timer		3243603	0					
ANR	3243636	Identifier	daemonCore		3243603	0					
ANR	3243637	Identifier	Cancel_Timer		3243603	1					
ANR	3243638	ArgumentList	m_deleteMeTid		3243603	1					
ANR	3243639	Argument	m_deleteMeTid		3243603	0					
ANR	3243640	Identifier	m_deleteMeTid		3243603	0					
ANR	3243641	ExpressionStatement	free ( m_buffer )	170:1:4449:4465	3243603	2	True				
ANR	3243642	CallExpression	free ( m_buffer )		3243603	0					
ANR	3243643	Callee	free		3243603	0					
ANR	3243644	Identifier	free		3243603	0					
ANR	3243645	ArgumentList	m_buffer		3243603	1					
ANR	3243646	Argument	m_buffer		3243603	0					
ANR	3243647	Identifier	m_buffer		3243603	0					
ANR	3243648	Statement	delete	171:1:4468:4473	3243603	3	True				
ANR	3243649	ExpressionStatement	m_commands_supported	171:8:4475:4495	3243603	4	True				
ANR	3243650	Identifier	m_commands_supported		3243603	0					
ANR	3243651	IfStatement	if ( globus_gass_server_url != NULL )		3243603	5					
ANR	3243652	Condition	globus_gass_server_url != NULL	172:6:4503:4532	3243603	0	True				
ANR	3243653	EqualityExpression	globus_gass_server_url != NULL		3243603	0		!=			
ANR	3243654	Identifier	globus_gass_server_url		3243603	0					
ANR	3243655	Identifier	NULL		3243603	1					
ANR	3243656	CompoundStatement		10:39:249:249	3243603	1					
ANR	3243657	ExpressionStatement	free ( globus_gass_server_url )	173:2:4540:4570	3243603	0	True				
ANR	3243658	CallExpression	free ( globus_gass_server_url )		3243603	0					
ANR	3243659	Callee	free		3243603	0					
ANR	3243660	Identifier	free		3243603	0					
ANR	3243661	ArgumentList	globus_gass_server_url		3243603	1					
ANR	3243662	Argument	globus_gass_server_url		3243603	0					
ANR	3243663	Identifier	globus_gass_server_url		3243603	0					
ANR	3243664	IfStatement	if ( globus_gt2_gram_callback_contact != NULL )		3243603	6					
ANR	3243665	Condition	globus_gt2_gram_callback_contact != NULL	175:6:4581:4620	3243603	0	True				
ANR	3243666	EqualityExpression	globus_gt2_gram_callback_contact != NULL		3243603	0		!=			
ANR	3243667	Identifier	globus_gt2_gram_callback_contact		3243603	0					
ANR	3243668	Identifier	NULL		3243603	1					
ANR	3243669	CompoundStatement		13:49:337:337	3243603	1					
ANR	3243670	ExpressionStatement	free ( globus_gt2_gram_callback_contact )	176:2:4628:4668	3243603	0	True				
ANR	3243671	CallExpression	free ( globus_gt2_gram_callback_contact )		3243603	0					
ANR	3243672	Callee	free		3243603	0					
ANR	3243673	Identifier	free		3243603	0					
ANR	3243674	ArgumentList	globus_gt2_gram_callback_contact		3243603	1					
ANR	3243675	Argument	globus_gt2_gram_callback_contact		3243603	0					
ANR	3243676	Identifier	globus_gt2_gram_callback_contact		3243603	0					
ANR	3243677	IfStatement	if ( globus_gt4_gram_callback_contact != NULL )		3243603	7					
ANR	3243678	Condition	globus_gt4_gram_callback_contact != NULL	178:6:4679:4718	3243603	0	True				
ANR	3243679	EqualityExpression	globus_gt4_gram_callback_contact != NULL		3243603	0		!=			
ANR	3243680	Identifier	globus_gt4_gram_callback_contact		3243603	0					
ANR	3243681	Identifier	NULL		3243603	1					
ANR	3243682	CompoundStatement		16:49:435:435	3243603	1					
ANR	3243683	ExpressionStatement	free ( globus_gt4_gram_callback_contact )	179:2:4726:4766	3243603	0	True				
ANR	3243684	CallExpression	free ( globus_gt4_gram_callback_contact )		3243603	0					
ANR	3243685	Callee	free		3243603	0					
ANR	3243686	Identifier	free		3243603	0					
ANR	3243687	ArgumentList	globus_gt4_gram_callback_contact		3243603	1					
ANR	3243688	Argument	globus_gt4_gram_callback_contact		3243603	0					
ANR	3243689	Identifier	globus_gt4_gram_callback_contact		3243603	0					
ANR	3243690	IfStatement	if ( my_id != NULL )		3243603	8					
ANR	3243691	Condition	my_id != NULL	181:6:4777:4789	3243603	0	True				
ANR	3243692	EqualityExpression	my_id != NULL		3243603	0		!=			
ANR	3243693	Identifier	my_id		3243603	0					
ANR	3243694	Identifier	NULL		3243603	1					
ANR	3243695	CompoundStatement		19:22:506:506	3243603	1					
ANR	3243696	ExpressionStatement	free ( my_id )	182:2:4797:4808	3243603	0	True				
ANR	3243697	CallExpression	free ( my_id )		3243603	0					
ANR	3243698	Callee	free		3243603	0					
ANR	3243699	Identifier	free		3243603	0					
ANR	3243700	ArgumentList	my_id		3243603	1					
ANR	3243701	Argument	my_id		3243603	0					
ANR	3243702	Identifier	my_id		3243603	0					
ANR	3243703	IfStatement	if ( binary_path != NULL )		3243603	9					
ANR	3243704	Condition	binary_path != NULL	184:6:4819:4837	3243603	0	True				
ANR	3243705	EqualityExpression	binary_path != NULL		3243603	0		!=			
ANR	3243706	Identifier	binary_path		3243603	0					
ANR	3243707	Identifier	NULL		3243603	1					
ANR	3243708	CompoundStatement		22:28:554:554	3243603	1					
ANR	3243709	ExpressionStatement	free ( binary_path )	185:2:4845:4862	3243603	0	True				
ANR	3243710	CallExpression	free ( binary_path )		3243603	0					
ANR	3243711	Callee	free		3243603	0					
ANR	3243712	Identifier	free		3243603	0					
ANR	3243713	ArgumentList	binary_path		3243603	1					
ANR	3243714	Argument	binary_path		3243603	0					
ANR	3243715	Identifier	binary_path		3243603	0					
ANR	3243716	IfStatement	if ( m_gahp_readfd != - 1 )		3243603	10					
ANR	3243717	Condition	m_gahp_readfd != - 1	187:6:4873:4891	3243603	0	True				
ANR	3243718	EqualityExpression	m_gahp_readfd != - 1		3243603	0		!=			
ANR	3243719	Identifier	m_gahp_readfd		3243603	0					
ANR	3243720	UnaryOperationExpression	- 1		3243603	1					
ANR	3243721	UnaryOperator	-		3243603	0					
ANR	3243722	PrimaryExpression	1		3243603	1					
ANR	3243723	CompoundStatement		25:28:608:608	3243603	1					
ANR	3243724	ExpressionStatement	daemonCore -> Close_Pipe ( m_gahp_readfd )	188:2:4899:4938	3243603	0	True				
ANR	3243725	CallExpression	daemonCore -> Close_Pipe ( m_gahp_readfd )		3243603	0					
ANR	3243726	Callee	daemonCore -> Close_Pipe		3243603	0					
ANR	3243727	PtrMemberAccess	daemonCore -> Close_Pipe		3243603	0					
ANR	3243728	Identifier	daemonCore		3243603	0					
ANR	3243729	Identifier	Close_Pipe		3243603	1					
ANR	3243730	ArgumentList	m_gahp_readfd		3243603	1					
ANR	3243731	Argument	m_gahp_readfd		3243603	0					
ANR	3243732	Identifier	m_gahp_readfd		3243603	0					
ANR	3243733	IfStatement	if ( m_gahp_writefd != - 1 )		3243603	11					
ANR	3243734	Condition	m_gahp_writefd != - 1	190:6:4949:4968	3243603	0	True				
ANR	3243735	EqualityExpression	m_gahp_writefd != - 1		3243603	0		!=			
ANR	3243736	Identifier	m_gahp_writefd		3243603	0					
ANR	3243737	UnaryOperationExpression	- 1		3243603	1					
ANR	3243738	UnaryOperator	-		3243603	0					
ANR	3243739	PrimaryExpression	1		3243603	1					
ANR	3243740	CompoundStatement		28:29:685:685	3243603	1					
ANR	3243741	ExpressionStatement	daemonCore -> Close_Pipe ( m_gahp_writefd )	191:2:4976:5016	3243603	0	True				
ANR	3243742	CallExpression	daemonCore -> Close_Pipe ( m_gahp_writefd )		3243603	0					
ANR	3243743	Callee	daemonCore -> Close_Pipe		3243603	0					
ANR	3243744	PtrMemberAccess	daemonCore -> Close_Pipe		3243603	0					
ANR	3243745	Identifier	daemonCore		3243603	0					
ANR	3243746	Identifier	Close_Pipe		3243603	1					
ANR	3243747	ArgumentList	m_gahp_writefd		3243603	1					
ANR	3243748	Argument	m_gahp_writefd		3243603	0					
ANR	3243749	Identifier	m_gahp_writefd		3243603	0					
ANR	3243750	IfStatement	if ( m_gahp_errorfd != - 1 )		3243603	12					
ANR	3243751	Condition	m_gahp_errorfd != - 1	193:6:5027:5046	3243603	0	True				
ANR	3243752	EqualityExpression	m_gahp_errorfd != - 1		3243603	0		!=			
ANR	3243753	Identifier	m_gahp_errorfd		3243603	0					
ANR	3243754	UnaryOperationExpression	- 1		3243603	1					
ANR	3243755	UnaryOperator	-		3243603	0					
ANR	3243756	PrimaryExpression	1		3243603	1					
ANR	3243757	CompoundStatement		31:29:763:763	3243603	1					
ANR	3243758	ExpressionStatement	daemonCore -> Close_Pipe ( m_gahp_errorfd )	194:2:5054:5094	3243603	0	True				
ANR	3243759	CallExpression	daemonCore -> Close_Pipe ( m_gahp_errorfd )		3243603	0					
ANR	3243760	Callee	daemonCore -> Close_Pipe		3243603	0					
ANR	3243761	PtrMemberAccess	daemonCore -> Close_Pipe		3243603	0					
ANR	3243762	Identifier	daemonCore		3243603	0					
ANR	3243763	Identifier	Close_Pipe		3243603	1					
ANR	3243764	ArgumentList	m_gahp_errorfd		3243603	1					
ANR	3243765	Argument	m_gahp_errorfd		3243603	0					
ANR	3243766	Identifier	m_gahp_errorfd		3243603	0					
ANR	3243767	IfStatement	if ( poll_tid != - 1 )		3243603	13					
ANR	3243768	Condition	poll_tid != - 1	196:6:5105:5118	3243603	0	True				
ANR	3243769	EqualityExpression	poll_tid != - 1		3243603	0		!=			
ANR	3243770	Identifier	poll_tid		3243603	0					
ANR	3243771	UnaryOperationExpression	- 1		3243603	1					
ANR	3243772	UnaryOperator	-		3243603	0					
ANR	3243773	PrimaryExpression	1		3243603	1					
ANR	3243774	CompoundStatement		34:23:835:835	3243603	1					
ANR	3243775	ExpressionStatement	daemonCore -> Cancel_Timer ( poll_tid )	197:2:5126:5162	3243603	0	True				
ANR	3243776	CallExpression	daemonCore -> Cancel_Timer ( poll_tid )		3243603	0					
ANR	3243777	Callee	daemonCore -> Cancel_Timer		3243603	0					
ANR	3243778	PtrMemberAccess	daemonCore -> Cancel_Timer		3243603	0					
ANR	3243779	Identifier	daemonCore		3243603	0					
ANR	3243780	Identifier	Cancel_Timer		3243603	1					
ANR	3243781	ArgumentList	poll_tid		3243603	1					
ANR	3243782	Argument	poll_tid		3243603	0					
ANR	3243783	Identifier	poll_tid		3243603	0					
ANR	3243784	IfStatement	if ( master_proxy != NULL )		3243603	14					
ANR	3243785	Condition	master_proxy != NULL	199:6:5173:5192	3243603	0	True				
ANR	3243786	EqualityExpression	master_proxy != NULL		3243603	0		!=			
ANR	3243787	Identifier	master_proxy		3243603	0					
ANR	3243788	Identifier	NULL		3243603	1					
ANR	3243789	CompoundStatement		37:29:909:909	3243603	1					
ANR	3243790	ExpressionStatement	"ReleaseProxy ( master_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"	200:2:5200:5293	3243603	0	True				
ANR	3243791	CallExpression	"ReleaseProxy ( master_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"		3243603	0					
ANR	3243792	Callee	ReleaseProxy		3243603	0					
ANR	3243793	Identifier	ReleaseProxy		3243603	0					
ANR	3243794	ArgumentList	master_proxy -> proxy		3243603	1					
ANR	3243795	Argument	master_proxy -> proxy		3243603	0					
ANR	3243796	PtrMemberAccess	master_proxy -> proxy		3243603	0					
ANR	3243797	Identifier	master_proxy		3243603	0					
ANR	3243798	Identifier	proxy		3243603	1					
ANR	3243799	Argument	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3243603	1					
ANR	3243800	CastExpression	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3243603	0					
ANR	3243801	CastTarget	TimerHandlercpp		3243603	0					
ANR	3243802	UnaryOperationExpression	& GahpServer :: ProxyCallback		3243603	1					
ANR	3243803	UnaryOperator	&		3243603	0					
ANR	3243804	Identifier	GahpServer :: ProxyCallback		3243603	1					
ANR	3243805	Argument	this		3243603	2					
ANR	3243806	Identifier	this		3243603	0					
ANR	3243807	Statement	delete	202:2:5297:5302	3243603	1	True				
ANR	3243808	ExpressionStatement	master_proxy	202:9:5304:5316	3243603	2	True				
ANR	3243809	Identifier	master_proxy		3243603	0					
ANR	3243810	IfStatement	if ( proxy_check_tid != TIMER_UNSET )		3243603	15					
ANR	3243811	Condition	proxy_check_tid != TIMER_UNSET	204:6:5327:5356	3243603	0	True				
ANR	3243812	EqualityExpression	proxy_check_tid != TIMER_UNSET		3243603	0		!=			
ANR	3243813	Identifier	proxy_check_tid		3243603	0					
ANR	3243814	Identifier	TIMER_UNSET		3243603	1					
ANR	3243815	CompoundStatement		42:39:1073:1073	3243603	1					
ANR	3243816	ExpressionStatement	daemonCore -> Cancel_Timer ( proxy_check_tid )	205:2:5364:5407	3243603	0	True				
ANR	3243817	CallExpression	daemonCore -> Cancel_Timer ( proxy_check_tid )		3243603	0					
ANR	3243818	Callee	daemonCore -> Cancel_Timer		3243603	0					
ANR	3243819	PtrMemberAccess	daemonCore -> Cancel_Timer		3243603	0					
ANR	3243820	Identifier	daemonCore		3243603	0					
ANR	3243821	Identifier	Cancel_Timer		3243603	1					
ANR	3243822	ArgumentList	proxy_check_tid		3243603	1					
ANR	3243823	Argument	proxy_check_tid		3243603	0					
ANR	3243824	Identifier	proxy_check_tid		3243603	0					
ANR	3243825	IfStatement	if ( ProxiesByFilename != NULL )		3243603	16					
ANR	3243826	Condition	ProxiesByFilename != NULL	207:6:5418:5442	3243603	0	True				
ANR	3243827	EqualityExpression	ProxiesByFilename != NULL		3243603	0		!=			
ANR	3243828	Identifier	ProxiesByFilename		3243603	0					
ANR	3243829	Identifier	NULL		3243603	1					
ANR	3243830	CompoundStatement		46:2:1163:1188	3243603	1					
ANR	3243831	IdentifierDeclStatement	GahpProxyInfo * gahp_proxy ;	208:2:5450:5475	3243603	0	True				
ANR	3243832	IdentifierDecl	* gahp_proxy		3243603	0					
ANR	3243833	IdentifierDeclType	GahpProxyInfo *		3243603	0					
ANR	3243834	Identifier	gahp_proxy		3243603	1					
ANR	3243835	ExpressionStatement	ProxiesByFilename -> startIterations ( )	210:2:5480:5516	3243603	1	True				
ANR	3243836	CallExpression	ProxiesByFilename -> startIterations ( )		3243603	0					
ANR	3243837	Callee	ProxiesByFilename -> startIterations		3243603	0					
ANR	3243838	PtrMemberAccess	ProxiesByFilename -> startIterations		3243603	0					
ANR	3243839	Identifier	ProxiesByFilename		3243603	0					
ANR	3243840	Identifier	startIterations		3243603	1					
ANR	3243841	ArgumentList			3243603	1					
ANR	3243842	WhileStatement	while ( ProxiesByFilename -> iterate ( gahp_proxy ) != 0 )		3243603	2					
ANR	3243843	Condition	ProxiesByFilename -> iterate ( gahp_proxy ) != 0	211:10:5528:5572	3243603	0	True				
ANR	3243844	EqualityExpression	ProxiesByFilename -> iterate ( gahp_proxy ) != 0		3243603	0		!=			
ANR	3243845	CallExpression	ProxiesByFilename -> iterate ( gahp_proxy )		3243603	0					
ANR	3243846	Callee	ProxiesByFilename -> iterate		3243603	0					
ANR	3243847	PtrMemberAccess	ProxiesByFilename -> iterate		3243603	0					
ANR	3243848	Identifier	ProxiesByFilename		3243603	0					
ANR	3243849	Identifier	iterate		3243603	1					
ANR	3243850	ArgumentList	gahp_proxy		3243603	1					
ANR	3243851	Argument	gahp_proxy		3243603	0					
ANR	3243852	Identifier	gahp_proxy		3243603	0					
ANR	3243853	PrimaryExpression	0		3243603	1					
ANR	3243854	CompoundStatement		49:58:1289:1289	3243603	1					
ANR	3243855	ExpressionStatement	"ReleaseProxy ( gahp_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"	212:3:5581:5673	3243603	0	True				
ANR	3243856	CallExpression	"ReleaseProxy ( gahp_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"		3243603	0					
ANR	3243857	Callee	ReleaseProxy		3243603	0					
ANR	3243858	Identifier	ReleaseProxy		3243603	0					
ANR	3243859	ArgumentList	gahp_proxy -> proxy		3243603	1					
ANR	3243860	Argument	gahp_proxy -> proxy		3243603	0					
ANR	3243861	PtrMemberAccess	gahp_proxy -> proxy		3243603	0					
ANR	3243862	Identifier	gahp_proxy		3243603	0					
ANR	3243863	Identifier	proxy		3243603	1					
ANR	3243864	Argument	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3243603	1					
ANR	3243865	CastExpression	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3243603	0					
ANR	3243866	CastTarget	TimerHandlercpp		3243603	0					
ANR	3243867	UnaryOperationExpression	& GahpServer :: ProxyCallback		3243603	1					
ANR	3243868	UnaryOperator	&		3243603	0					
ANR	3243869	Identifier	GahpServer :: ProxyCallback		3243603	1					
ANR	3243870	Argument	this		3243603	2					
ANR	3243871	Identifier	this		3243603	0					
ANR	3243872	Statement	delete	214:3:5678:5683	3243603	1	True				
ANR	3243873	ExpressionStatement	gahp_proxy	214:10:5685:5695	3243603	2	True				
ANR	3243874	Identifier	gahp_proxy		3243603	0					
ANR	3243875	Statement	delete	217:2:5704:5709	3243603	3	True				
ANR	3243876	ExpressionStatement	ProxiesByFilename	217:9:5711:5728	3243603	4	True				
ANR	3243877	Identifier	ProxiesByFilename		3243603	0					
ANR	3243878	IfStatement	if ( requestTable != NULL )		3243603	17					
ANR	3243879	Condition	requestTable != NULL	219:6:5739:5758	3243603	0	True				
ANR	3243880	EqualityExpression	requestTable != NULL		3243603	0		!=			
ANR	3243881	Identifier	requestTable		3243603	0					
ANR	3243882	Identifier	NULL		3243603	1					
ANR	3243883	CompoundStatement		57:29:1475:1475	3243603	1					
ANR	3243884	Statement	delete	220:2:5766:5771	3243603	0	True				
ANR	3243885	ExpressionStatement	requestTable	220:9:5773:5785	3243603	1	True				
ANR	3243886	Identifier	requestTable		3243603	0					
ANR	3243887	Identifier	GahpServer :: ~GahpServer		3243603	1					
ANR	3243888	ParameterList			3243603	2					
ANR	3243889	CFGEntryNode	ENTRY		3243603		True				
ANR	3243890	CFGExitNode	EXIT		3243603		True				
ANR	3243891	Symbol	ProxiesByFilename		3243603						
ANR	3243892	Symbol	master_proxy -> proxy		3243603						
ANR	3243893	Symbol	m_gahp_writefd		3243603						
ANR	3243894	Symbol	m_deleteMeTid		3243603						
ANR	3243895	Symbol	globus_gt2_gram_callback_contact		3243603						
ANR	3243896	Symbol	poll_tid		3243603						
ANR	3243897	Symbol	& GahpServer :: ProxyCallback		3243603						
ANR	3243898	Symbol	ProxiesByFilename -> iterate		3243603						
ANR	3243899	Symbol	daemonCore		3243603						
ANR	3243900	Symbol	HashKey		3243603						
ANR	3243901	Symbol	TIMER_UNSET		3243603						
ANR	3243902	Symbol	* gahp_proxy		3243603						
ANR	3243903	Symbol	NULL		3243603						
ANR	3243904	Symbol	globus_gt4_gram_callback_contact		3243603						
ANR	3243905	Symbol	m_gahp_errorfd		3243603						
ANR	3243906	Symbol	this		3243603						
ANR	3243907	Symbol	gahp_proxy -> proxy		3243603						
ANR	3243908	Symbol	GahpServersById		3243603						
ANR	3243909	Symbol	m_gahp_readfd		3243603						
ANR	3243910	Symbol	* ProxiesByFilename		3243603						
ANR	3243911	Symbol	* master_proxy		3243603						
ANR	3243912	Symbol	globus_gass_server_url		3243603						
ANR	3243913	Symbol	master_proxy		3243603						
ANR	3243914	Symbol	requestTable		3243603						
ANR	3243915	Symbol	my_id		3243603						
ANR	3243916	Symbol	binary_path		3243603						
ANR	3243917	Symbol	m_buffer		3243603						
ANR	3243918	Symbol	gahp_proxy		3243603						
ANR	3243919	Symbol	proxy_check_tid		3243603						
ANR	3243920	Function	GahpServer :: DeleteMe	224:0:5793:5967							
ANR	3243921	FunctionDef	GahpServer :: DeleteMe ()		3243920	0					
ANR	3243922	CompoundStatement		226:0:5821:5967	3243920	0					
ANR	3243923	ExpressionStatement	m_deleteMeTid = TIMER_UNSET	227:1:5824:5851	3243920	0	True				
ANR	3243924	AssignmentExpression	m_deleteMeTid = TIMER_UNSET		3243920	0		=			
ANR	3243925	Identifier	m_deleteMeTid		3243920	0					
ANR	3243926	Identifier	TIMER_UNSET		3243920	1					
ANR	3243927	IfStatement	if ( m_reference_count <= 0 )		3243920	1					
ANR	3243928	Condition	m_reference_count <= 0	229:6:5860:5881	3243920	0	True				
ANR	3243929	RelationalExpression	m_reference_count <= 0		3243920	0		<=			
ANR	3243930	Identifier	m_reference_count		3243920	0					
ANR	3243931	PrimaryExpression	0		3243920	1					
ANR	3243932	CompoundStatement		4:31:63:63	3243920	1					
ANR	3243933	Statement	delete	231:2:5890:5895	3243920	0	True				
ANR	3243934	ExpressionStatement	this	231:9:5897:5901	3243920	1	True				
ANR	3243935	Identifier	this		3243920	0					
ANR	3243936	ReturnType	void		3243920	1					
ANR	3243937	Identifier	GahpServer :: DeleteMe		3243920	2					
ANR	3243938	ParameterList			3243920	3					
ANR	3243939	CFGEntryNode	ENTRY		3243920		True				
ANR	3243940	CFGExitNode	EXIT		3243920		True				
ANR	3243941	Symbol	m_reference_count		3243920						
ANR	3243942	Symbol	m_deleteMeTid		3243920						
ANR	3243943	Symbol	TIMER_UNSET		3243920						
ANR	3243944	Function	GahpServer :: write_line	236:0:5970:6512							
ANR	3243945	FunctionDef	GahpServer :: write_line (const char * command)		3243944	0					
ANR	3243946	CompoundStatement		238:0:6019:6512	3243944	0					
ANR	3243947	IfStatement	if ( ! command || m_gahp_writefd == - 1 )		3243944	0					
ANR	3243948	Condition	! command || m_gahp_writefd == - 1	239:6:6027:6058	3243944	0	True				
ANR	3243949	OrExpression	! command || m_gahp_writefd == - 1		3243944	0		||			
ANR	3243950	UnaryOperationExpression	! command		3243944	0					
ANR	3243951	UnaryOperator	!		3243944	0					
ANR	3243952	Identifier	command		3243944	1					
ANR	3243953	EqualityExpression	m_gahp_writefd == - 1		3243944	1		==			
ANR	3243954	Identifier	m_gahp_writefd		3243944	0					
ANR	3243955	UnaryOperationExpression	- 1		3243944	1					
ANR	3243956	UnaryOperator	-		3243944	0					
ANR	3243957	PrimaryExpression	1		3243944	1					
ANR	3243958	CompoundStatement		2:41:42:42	3243944	1					
ANR	3243959	ReturnStatement	return ;	240:2:6066:6072	3243944	0	True				
ANR	3243960	ExpressionStatement	"daemonCore -> Write_Pipe ( m_gahp_writefd , command , strlen ( command ) )"	243:1:6080:6142	3243944	1	True				
ANR	3243961	CallExpression	"daemonCore -> Write_Pipe ( m_gahp_writefd , command , strlen ( command ) )"		3243944	0					
ANR	3243962	Callee	daemonCore -> Write_Pipe		3243944	0					
ANR	3243963	PtrMemberAccess	daemonCore -> Write_Pipe		3243944	0					
ANR	3243964	Identifier	daemonCore		3243944	0					
ANR	3243965	Identifier	Write_Pipe		3243944	1					
ANR	3243966	ArgumentList	m_gahp_writefd		3243944	1					
ANR	3243967	Argument	m_gahp_writefd		3243944	0					
ANR	3243968	Identifier	m_gahp_writefd		3243944	0					
ANR	3243969	Argument	command		3243944	1					
ANR	3243970	Identifier	command		3243944	0					
ANR	3243971	Argument	strlen ( command )		3243944	2					
ANR	3243972	CallExpression	strlen ( command )		3243944	0					
ANR	3243973	Callee	strlen		3243944	0					
ANR	3243974	Identifier	strlen		3243944	0					
ANR	3243975	ArgumentList	command		3243944	1					
ANR	3243976	Argument	command		3243944	0					
ANR	3243977	Identifier	command		3243944	0					
ANR	3243978	ExpressionStatement	"daemonCore -> Write_Pipe ( m_gahp_writefd , ""\\r\\n"" , 2 )"	244:1:6145:6192	3243944	2	True				
ANR	3243979	CallExpression	"daemonCore -> Write_Pipe ( m_gahp_writefd , ""\\r\\n"" , 2 )"		3243944	0					
ANR	3243980	Callee	daemonCore -> Write_Pipe		3243944	0					
ANR	3243981	PtrMemberAccess	daemonCore -> Write_Pipe		3243944	0					
ANR	3243982	Identifier	daemonCore		3243944	0					
ANR	3243983	Identifier	Write_Pipe		3243944	1					
ANR	3243984	ArgumentList	m_gahp_writefd		3243944	1					
ANR	3243985	Argument	m_gahp_writefd		3243944	0					
ANR	3243986	Identifier	m_gahp_writefd		3243944	0					
ANR	3243987	Argument	"""\\r\\n"""		3243944	1					
ANR	3243988	PrimaryExpression	"""\\r\\n"""		3243944	0					
ANR	3243989	Argument	2		3243944	2					
ANR	3243990	PrimaryExpression	2		3243944	0					
ANR	3243991	IfStatement	if ( logGahpIo )		3243944	3					
ANR	3243992	Condition	logGahpIo	246:6:6201:6209	3243944	0	True				
ANR	3243993	Identifier	logGahpIo		3243944	0					
ANR	3243994	CompoundStatement		10:2:197:224	3243944	1					
ANR	3243995	IdentifierDeclStatement	std :: string debug = command ;	247:2:6217:6244	3243944	0	True				
ANR	3243996	IdentifierDecl	debug = command		3243944	0					
ANR	3243997	IdentifierDeclType	std :: string		3243944	0					
ANR	3243998	Identifier	debug		3243944	1					
ANR	3243999	AssignmentExpression	debug = command		3243944	2		=			
ANR	3244000	Identifier	command		3243944	0					
ANR	3244001	Identifier	command		3243944	1					
ANR	3244002	ExpressionStatement	"sprintf ( debug , ""'%s'"" , command )"	248:2:6248:6281	3243944	1	True				
ANR	3244003	CallExpression	"sprintf ( debug , ""'%s'"" , command )"		3243944	0					
ANR	3244004	Callee	sprintf		3243944	0					
ANR	3244005	Identifier	sprintf		3243944	0					
ANR	3244006	ArgumentList	debug		3243944	1					
ANR	3244007	Argument	debug		3243944	0					
ANR	3244008	Identifier	debug		3243944	0					
ANR	3244009	Argument	"""'%s'"""		3243944	1					
ANR	3244010	PrimaryExpression	"""'%s'"""		3243944	0					
ANR	3244011	Argument	command		3243944	2					
ANR	3244012	Identifier	command		3243944	0					
ANR	3244013	IfStatement	if ( logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize )		3243944	2					
ANR	3244014	Condition	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize	249:7:6290:6340	3243944	0	True				
ANR	3244015	AndExpression	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize		3243944	0		&&			
ANR	3244016	RelationalExpression	logGahpIoSize > 0		3243944	0		>			
ANR	3244017	Identifier	logGahpIoSize		3243944	0					
ANR	3244018	PrimaryExpression	0		3243944	1					
ANR	3244019	RelationalExpression	debug . length ( ) > logGahpIoSize		3243944	1		>			
ANR	3244020	CallExpression	debug . length ( )		3243944	0					
ANR	3244021	Callee	debug . length		3243944	0					
ANR	3244022	MemberAccess	debug . length		3243944	0					
ANR	3244023	Identifier	debug		3243944	0					
ANR	3244024	Identifier	length		3243944	1					
ANR	3244025	ArgumentList			3243944	1					
ANR	3244026	Identifier	logGahpIoSize		3243944	1					
ANR	3244027	CompoundStatement		12:61:324:324	3243944	1					
ANR	3244028	ExpressionStatement	"debug . erase ( logGahpIoSize , std :: string :: npos )"	250:3:6349:6396	3243944	0	True				
ANR	3244029	CallExpression	"debug . erase ( logGahpIoSize , std :: string :: npos )"		3243944	0					
ANR	3244030	Callee	debug . erase		3243944	0					
ANR	3244031	MemberAccess	debug . erase		3243944	0					
ANR	3244032	Identifier	debug		3243944	0					
ANR	3244033	Identifier	erase		3243944	1					
ANR	3244034	ArgumentList	logGahpIoSize		3243944	1					
ANR	3244035	Argument	logGahpIoSize		3243944	0					
ANR	3244036	Identifier	logGahpIoSize		3243944	0					
ANR	3244037	Argument	std :: string :: npos		3243944	1					
ANR	3244038	Identifier	std :: string :: npos		3243944	0					
ANR	3244039	ExpressionStatement	"debug += ""..."""	251:3:6401:6415	3243944	1	True				
ANR	3244040	AssignmentExpression	"debug += ""..."""		3243944	0		+=			
ANR	3244041	Identifier	debug		3243944	0					
ANR	3244042	PrimaryExpression	"""..."""		3243944	1					
ANR	3244043	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP[%d] <- %s\\n"" , m_gahp_pid , debug . c_str ( ) )"	253:2:6423:6497	3243944	3	True				
ANR	3244044	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP[%d] <- %s\\n"" , m_gahp_pid , debug . c_str ( ) )"		3243944	0					
ANR	3244045	Callee	dprintf		3243944	0					
ANR	3244046	Identifier	dprintf		3243944	0					
ANR	3244047	ArgumentList	D_FULLDEBUG		3243944	1					
ANR	3244048	Argument	D_FULLDEBUG		3243944	0					
ANR	3244049	Identifier	D_FULLDEBUG		3243944	0					
ANR	3244050	Argument	"""GAHP[%d] <- %s\\n"""		3243944	1					
ANR	3244051	PrimaryExpression	"""GAHP[%d] <- %s\\n"""		3243944	0					
ANR	3244052	Argument	m_gahp_pid		3243944	2					
ANR	3244053	Identifier	m_gahp_pid		3243944	0					
ANR	3244054	Argument	debug . c_str ( )		3243944	3					
ANR	3244055	CallExpression	debug . c_str ( )		3243944	0					
ANR	3244056	Callee	debug . c_str		3243944	0					
ANR	3244057	MemberAccess	debug . c_str		3243944	0					
ANR	3244058	Identifier	debug		3243944	0					
ANR	3244059	Identifier	c_str		3243944	1					
ANR	3244060	ArgumentList			3243944	1					
ANR	3244061	ReturnStatement	return ;	257:1:6504:6510	3243944	4	True				
ANR	3244062	ReturnType	void		3243944	1					
ANR	3244063	Identifier	GahpServer :: write_line		3243944	2					
ANR	3244064	ParameterList	const char * command		3243944	3					
ANR	3244065	Parameter	const char * command	237:23:5998:6016	3243944	0	True				
ANR	3244066	ParameterType	const char *		3243944	0					
ANR	3244067	Identifier	command		3243944	1					
ANR	3244068	CFGEntryNode	ENTRY		3243944		True				
ANR	3244069	CFGExitNode	EXIT		3243944		True				
ANR	3244070	Symbol	strlen		3243944						
ANR	3244071	Symbol	std :: string :: npos		3243944						
ANR	3244072	Symbol	m_gahp_writefd		3243944						
ANR	3244073	Symbol	debug		3243944						
ANR	3244074	Symbol	debug . length		3243944						
ANR	3244075	Symbol	daemonCore		3243944						
ANR	3244076	Symbol	logGahpIoSize		3243944						
ANR	3244077	Symbol	D_FULLDEBUG		3243944						
ANR	3244078	Symbol	command		3243944						
ANR	3244079	Symbol	logGahpIo		3243944						
ANR	3244080	Symbol	m_gahp_pid		3243944						
ANR	3244081	Symbol	debug . c_str		3243944						
ANR	3244082	Function	GahpServer :: write_line	260:0:6515:7364							
ANR	3244083	FunctionDef	"GahpServer :: write_line (const char * command , int req , const char * args)"		3244082	0					
ANR	3244084	CompoundStatement		262:0:6591:7364	3244082	0					
ANR	3244085	IfStatement	if ( ! command || m_gahp_writefd == - 1 )		3244082	0					
ANR	3244086	Condition	! command || m_gahp_writefd == - 1	263:6:6599:6630	3244082	0	True				
ANR	3244087	OrExpression	! command || m_gahp_writefd == - 1		3244082	0		||			
ANR	3244088	UnaryOperationExpression	! command		3244082	0					
ANR	3244089	UnaryOperator	!		3244082	0					
ANR	3244090	Identifier	command		3244082	1					
ANR	3244091	EqualityExpression	m_gahp_writefd == - 1		3244082	1		==			
ANR	3244092	Identifier	m_gahp_writefd		3244082	0					
ANR	3244093	UnaryOperationExpression	- 1		3244082	1					
ANR	3244094	UnaryOperator	-		3244082	0					
ANR	3244095	PrimaryExpression	1		3244082	1					
ANR	3244096	CompoundStatement		2:41:42:42	3244082	1					
ANR	3244097	ReturnStatement	return ;	264:2:6638:6644	3244082	0	True				
ANR	3244098	IdentifierDeclStatement	char buf [ 20 ] ;	267:1:6651:6663	3244082	1	True				
ANR	3244099	IdentifierDecl	buf [ 20 ]		3244082	0					
ANR	3244100	IdentifierDeclType	char [ 20 ]		3244082	0					
ANR	3244101	Identifier	buf		3244082	1					
ANR	3244102	PrimaryExpression	20		3244082	2					
ANR	3244103	ExpressionStatement	"sprintf ( buf , "" %d%s"" , req , args ? "" "" : """" )"	268:1:6666:6702	3244082	2	True				
ANR	3244104	CallExpression	"sprintf ( buf , "" %d%s"" , req , args ? "" "" : """" )"		3244082	0					
ANR	3244105	Callee	sprintf		3244082	0					
ANR	3244106	Identifier	sprintf		3244082	0					
ANR	3244107	ArgumentList	buf		3244082	1					
ANR	3244108	Argument	buf		3244082	0					
ANR	3244109	Identifier	buf		3244082	0					
ANR	3244110	Argument	""" %d%s"""		3244082	1					
ANR	3244111	PrimaryExpression	""" %d%s"""		3244082	0					
ANR	3244112	Argument	req		3244082	2					
ANR	3244113	Identifier	req		3244082	0					
ANR	3244114	Argument	"args ? "" "" : """""		3244082	3					
ANR	3244115	ConditionalExpression	"args ? "" "" : """""		3244082	0					
ANR	3244116	Condition	args		3244082	0					
ANR	3244117	Identifier	args		3244082	0					
ANR	3244118	PrimaryExpression	""" """		3244082	1					
ANR	3244119	PrimaryExpression	""""""		3244082	2					
ANR	3244120	ExpressionStatement	"daemonCore -> Write_Pipe ( m_gahp_writefd , command , strlen ( command ) )"	269:1:6705:6767	3244082	3	True				
ANR	3244121	CallExpression	"daemonCore -> Write_Pipe ( m_gahp_writefd , command , strlen ( command ) )"		3244082	0					
ANR	3244122	Callee	daemonCore -> Write_Pipe		3244082	0					
ANR	3244123	PtrMemberAccess	daemonCore -> Write_Pipe		3244082	0					
ANR	3244124	Identifier	daemonCore		3244082	0					
ANR	3244125	Identifier	Write_Pipe		3244082	1					
ANR	3244126	ArgumentList	m_gahp_writefd		3244082	1					
ANR	3244127	Argument	m_gahp_writefd		3244082	0					
ANR	3244128	Identifier	m_gahp_writefd		3244082	0					
ANR	3244129	Argument	command		3244082	1					
ANR	3244130	Identifier	command		3244082	0					
ANR	3244131	Argument	strlen ( command )		3244082	2					
ANR	3244132	CallExpression	strlen ( command )		3244082	0					
ANR	3244133	Callee	strlen		3244082	0					
ANR	3244134	Identifier	strlen		3244082	0					
ANR	3244135	ArgumentList	command		3244082	1					
ANR	3244136	Argument	command		3244082	0					
ANR	3244137	Identifier	command		3244082	0					
ANR	3244138	ExpressionStatement	"daemonCore -> Write_Pipe ( m_gahp_writefd , buf , strlen ( buf ) )"	270:1:6770:6824	3244082	4	True				
ANR	3244139	CallExpression	"daemonCore -> Write_Pipe ( m_gahp_writefd , buf , strlen ( buf ) )"		3244082	0					
ANR	3244140	Callee	daemonCore -> Write_Pipe		3244082	0					
ANR	3244141	PtrMemberAccess	daemonCore -> Write_Pipe		3244082	0					
ANR	3244142	Identifier	daemonCore		3244082	0					
ANR	3244143	Identifier	Write_Pipe		3244082	1					
ANR	3244144	ArgumentList	m_gahp_writefd		3244082	1					
ANR	3244145	Argument	m_gahp_writefd		3244082	0					
ANR	3244146	Identifier	m_gahp_writefd		3244082	0					
ANR	3244147	Argument	buf		3244082	1					
ANR	3244148	Identifier	buf		3244082	0					
ANR	3244149	Argument	strlen ( buf )		3244082	2					
ANR	3244150	CallExpression	strlen ( buf )		3244082	0					
ANR	3244151	Callee	strlen		3244082	0					
ANR	3244152	Identifier	strlen		3244082	0					
ANR	3244153	ArgumentList	buf		3244082	1					
ANR	3244154	Argument	buf		3244082	0					
ANR	3244155	Identifier	buf		3244082	0					
ANR	3244156	IfStatement	if ( args )		3244082	5					
ANR	3244157	Condition	args	271:6:6832:6835	3244082	0	True				
ANR	3244158	Identifier	args		3244082	0					
ANR	3244159	CompoundStatement		10:13:247:247	3244082	1					
ANR	3244160	ExpressionStatement	"daemonCore -> Write_Pipe ( m_gahp_writefd , args , strlen ( args ) )"	272:2:6843:6899	3244082	0	True				
ANR	3244161	CallExpression	"daemonCore -> Write_Pipe ( m_gahp_writefd , args , strlen ( args ) )"		3244082	0					
ANR	3244162	Callee	daemonCore -> Write_Pipe		3244082	0					
ANR	3244163	PtrMemberAccess	daemonCore -> Write_Pipe		3244082	0					
ANR	3244164	Identifier	daemonCore		3244082	0					
ANR	3244165	Identifier	Write_Pipe		3244082	1					
ANR	3244166	ArgumentList	m_gahp_writefd		3244082	1					
ANR	3244167	Argument	m_gahp_writefd		3244082	0					
ANR	3244168	Identifier	m_gahp_writefd		3244082	0					
ANR	3244169	Argument	args		3244082	1					
ANR	3244170	Identifier	args		3244082	0					
ANR	3244171	Argument	strlen ( args )		3244082	2					
ANR	3244172	CallExpression	strlen ( args )		3244082	0					
ANR	3244173	Callee	strlen		3244082	0					
ANR	3244174	Identifier	strlen		3244082	0					
ANR	3244175	ArgumentList	args		3244082	1					
ANR	3244176	Argument	args		3244082	0					
ANR	3244177	Identifier	args		3244082	0					
ANR	3244178	ExpressionStatement	"daemonCore -> Write_Pipe ( m_gahp_writefd , ""\\r\\n"" , 2 )"	274:1:6905:6952	3244082	6	True				
ANR	3244179	CallExpression	"daemonCore -> Write_Pipe ( m_gahp_writefd , ""\\r\\n"" , 2 )"		3244082	0					
ANR	3244180	Callee	daemonCore -> Write_Pipe		3244082	0					
ANR	3244181	PtrMemberAccess	daemonCore -> Write_Pipe		3244082	0					
ANR	3244182	Identifier	daemonCore		3244082	0					
ANR	3244183	Identifier	Write_Pipe		3244082	1					
ANR	3244184	ArgumentList	m_gahp_writefd		3244082	1					
ANR	3244185	Argument	m_gahp_writefd		3244082	0					
ANR	3244186	Identifier	m_gahp_writefd		3244082	0					
ANR	3244187	Argument	"""\\r\\n"""		3244082	1					
ANR	3244188	PrimaryExpression	"""\\r\\n"""		3244082	0					
ANR	3244189	Argument	2		3244082	2					
ANR	3244190	PrimaryExpression	2		3244082	0					
ANR	3244191	IfStatement	if ( logGahpIo )		3244082	7					
ANR	3244192	Condition	logGahpIo	276:6:6961:6969	3244082	0	True				
ANR	3244193	Identifier	logGahpIo		3244082	0					
ANR	3244194	CompoundStatement		16:2:385:412	3244082	1					
ANR	3244195	IdentifierDeclStatement	std :: string debug = command ;	277:2:6977:7004	3244082	0	True				
ANR	3244196	IdentifierDecl	debug = command		3244082	0					
ANR	3244197	IdentifierDeclType	std :: string		3244082	0					
ANR	3244198	Identifier	debug		3244082	1					
ANR	3244199	AssignmentExpression	debug = command		3244082	2		=			
ANR	3244200	Identifier	command		3244082	0					
ANR	3244201	Identifier	command		3244082	1					
ANR	3244202	IfStatement	if ( args )		3244082	1					
ANR	3244203	Condition	args	278:7:7013:7016	3244082	0	True				
ANR	3244204	Identifier	args		3244082	0					
ANR	3244205	CompoundStatement		17:14:428:428	3244082	1					
ANR	3244206	ExpressionStatement	"sprintf ( debug , ""'%s%s%s'"" , command , buf , args )"	279:3:7025:7073	3244082	0	True				
ANR	3244207	CallExpression	"sprintf ( debug , ""'%s%s%s'"" , command , buf , args )"		3244082	0					
ANR	3244208	Callee	sprintf		3244082	0					
ANR	3244209	Identifier	sprintf		3244082	0					
ANR	3244210	ArgumentList	debug		3244082	1					
ANR	3244211	Argument	debug		3244082	0					
ANR	3244212	Identifier	debug		3244082	0					
ANR	3244213	Argument	"""'%s%s%s'"""		3244082	1					
ANR	3244214	PrimaryExpression	"""'%s%s%s'"""		3244082	0					
ANR	3244215	Argument	command		3244082	2					
ANR	3244216	Identifier	command		3244082	0					
ANR	3244217	Argument	buf		3244082	3					
ANR	3244218	Identifier	buf		3244082	0					
ANR	3244219	Argument	args		3244082	4					
ANR	3244220	Identifier	args		3244082	0					
ANR	3244221	ElseStatement	else		3244082	0					
ANR	3244222	CompoundStatement		19:9:492:492	3244082	0					
ANR	3244223	ExpressionStatement	"sprintf ( debug , ""'%s%s'"" , command , buf )"	281:3:7089:7129	3244082	0	True				
ANR	3244224	CallExpression	"sprintf ( debug , ""'%s%s'"" , command , buf )"		3244082	0					
ANR	3244225	Callee	sprintf		3244082	0					
ANR	3244226	Identifier	sprintf		3244082	0					
ANR	3244227	ArgumentList	debug		3244082	1					
ANR	3244228	Argument	debug		3244082	0					
ANR	3244229	Identifier	debug		3244082	0					
ANR	3244230	Argument	"""'%s%s'"""		3244082	1					
ANR	3244231	PrimaryExpression	"""'%s%s'"""		3244082	0					
ANR	3244232	Argument	command		3244082	2					
ANR	3244233	Identifier	command		3244082	0					
ANR	3244234	Argument	buf		3244082	3					
ANR	3244235	Identifier	buf		3244082	0					
ANR	3244236	IfStatement	if ( logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize )		3244082	2					
ANR	3244237	Condition	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize	283:7:7142:7192	3244082	0	True				
ANR	3244238	AndExpression	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize		3244082	0		&&			
ANR	3244239	RelationalExpression	logGahpIoSize > 0		3244082	0		>			
ANR	3244240	Identifier	logGahpIoSize		3244082	0					
ANR	3244241	PrimaryExpression	0		3244082	1					
ANR	3244242	RelationalExpression	debug . length ( ) > logGahpIoSize		3244082	1		>			
ANR	3244243	CallExpression	debug . length ( )		3244082	0					
ANR	3244244	Callee	debug . length		3244082	0					
ANR	3244245	MemberAccess	debug . length		3244082	0					
ANR	3244246	Identifier	debug		3244082	0					
ANR	3244247	Identifier	length		3244082	1					
ANR	3244248	ArgumentList			3244082	1					
ANR	3244249	Identifier	logGahpIoSize		3244082	1					
ANR	3244250	CompoundStatement		22:61:604:604	3244082	1					
ANR	3244251	ExpressionStatement	"debug . erase ( logGahpIoSize , std :: string :: npos )"	284:3:7201:7248	3244082	0	True				
ANR	3244252	CallExpression	"debug . erase ( logGahpIoSize , std :: string :: npos )"		3244082	0					
ANR	3244253	Callee	debug . erase		3244082	0					
ANR	3244254	MemberAccess	debug . erase		3244082	0					
ANR	3244255	Identifier	debug		3244082	0					
ANR	3244256	Identifier	erase		3244082	1					
ANR	3244257	ArgumentList	logGahpIoSize		3244082	1					
ANR	3244258	Argument	logGahpIoSize		3244082	0					
ANR	3244259	Identifier	logGahpIoSize		3244082	0					
ANR	3244260	Argument	std :: string :: npos		3244082	1					
ANR	3244261	Identifier	std :: string :: npos		3244082	0					
ANR	3244262	ExpressionStatement	"debug += ""..."""	285:3:7253:7267	3244082	1	True				
ANR	3244263	AssignmentExpression	"debug += ""..."""		3244082	0		+=			
ANR	3244264	Identifier	debug		3244082	0					
ANR	3244265	PrimaryExpression	"""..."""		3244082	1					
ANR	3244266	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP[%d] <- %s\\n"" , m_gahp_pid , debug . c_str ( ) )"	287:2:7275:7349	3244082	3	True				
ANR	3244267	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP[%d] <- %s\\n"" , m_gahp_pid , debug . c_str ( ) )"		3244082	0					
ANR	3244268	Callee	dprintf		3244082	0					
ANR	3244269	Identifier	dprintf		3244082	0					
ANR	3244270	ArgumentList	D_FULLDEBUG		3244082	1					
ANR	3244271	Argument	D_FULLDEBUG		3244082	0					
ANR	3244272	Identifier	D_FULLDEBUG		3244082	0					
ANR	3244273	Argument	"""GAHP[%d] <- %s\\n"""		3244082	1					
ANR	3244274	PrimaryExpression	"""GAHP[%d] <- %s\\n"""		3244082	0					
ANR	3244275	Argument	m_gahp_pid		3244082	2					
ANR	3244276	Identifier	m_gahp_pid		3244082	0					
ANR	3244277	Argument	debug . c_str ( )		3244082	3					
ANR	3244278	CallExpression	debug . c_str ( )		3244082	0					
ANR	3244279	Callee	debug . c_str		3244082	0					
ANR	3244280	MemberAccess	debug . c_str		3244082	0					
ANR	3244281	Identifier	debug		3244082	0					
ANR	3244282	Identifier	c_str		3244082	1					
ANR	3244283	ArgumentList			3244082	1					
ANR	3244284	ReturnStatement	return ;	291:1:7356:7362	3244082	8	True				
ANR	3244285	ReturnType	void		3244082	1					
ANR	3244286	Identifier	GahpServer :: write_line		3244082	2					
ANR	3244287	ParameterList	"const char * command , int req , const char * args"		3244082	3					
ANR	3244288	Parameter	const char * command	261:23:6543:6561	3244082	0	True				
ANR	3244289	ParameterType	const char *		3244082	0					
ANR	3244290	Identifier	command		3244082	1					
ANR	3244291	Parameter	int req	261:44:6564:6570	3244082	1	True				
ANR	3244292	ParameterType	int		3244082	0					
ANR	3244293	Identifier	req		3244082	1					
ANR	3244294	Parameter	const char * args	261:53:6573:6588	3244082	2	True				
ANR	3244295	ParameterType	const char *		3244082	0					
ANR	3244296	Identifier	args		3244082	1					
ANR	3244297	CFGEntryNode	ENTRY		3244082		True				
ANR	3244298	CFGExitNode	EXIT		3244082		True				
ANR	3244299	Symbol	m_gahp_writefd		3244082						
ANR	3244300	Symbol	debug		3244082						
ANR	3244301	Symbol	debug . length		3244082						
ANR	3244302	Symbol	logGahpIoSize		3244082						
ANR	3244303	Symbol	D_FULLDEBUG		3244082						
ANR	3244304	Symbol	command		3244082						
ANR	3244305	Symbol	m_gahp_pid		3244082						
ANR	3244306	Symbol	args		3244082						
ANR	3244307	Symbol	strlen		3244082						
ANR	3244308	Symbol	std :: string :: npos		3244082						
ANR	3244309	Symbol	buf		3244082						
ANR	3244310	Symbol	daemonCore		3244082						
ANR	3244311	Symbol	req		3244082						
ANR	3244312	Symbol	logGahpIo		3244082						
ANR	3244313	Symbol	debug . c_str		3244082						
ANR	3244314	DeclStmt									
ANR	3244315	Decl							GahpServer	GahpServer *	dead_server
ANR	3244316	DeclStmt									
ANR	3244317	Decl							GahpServer	GahpServer *	next_server
ANR	3244318	DeclStmt									
ANR	3244319	Decl							std :: string	std :: string	buf
ANR	3244320	Function	GahpClient :: GahpClient	332:0:8210:8693							
ANR	3244321	FunctionDef	"GahpClient :: GahpClient (const char * id , const char * path , const ArgList * args)"		3244320	0					
ANR	3244322	CompoundStatement		333:0:8288:8693	3244320	0					
ANR	3244323	ExpressionStatement	"server = GahpServer :: FindOrCreateGahpServer ( id , path , args )"	334:1:8291:8348	3244320	0	True				
ANR	3244324	AssignmentExpression	"server = GahpServer :: FindOrCreateGahpServer ( id , path , args )"		3244320	0		=			
ANR	3244325	Identifier	server		3244320	0					
ANR	3244326	CallExpression	"GahpServer :: FindOrCreateGahpServer ( id , path , args )"		3244320	1					
ANR	3244327	Callee	GahpServer :: FindOrCreateGahpServer		3244320	0					
ANR	3244328	Identifier	GahpServer :: FindOrCreateGahpServer		3244320	0					
ANR	3244329	ArgumentList	id		3244320	1					
ANR	3244330	Argument	id		3244320	0					
ANR	3244331	Identifier	id		3244320	0					
ANR	3244332	Argument	path		3244320	1					
ANR	3244333	Identifier	path		3244320	0					
ANR	3244334	Argument	args		3244320	2					
ANR	3244335	Identifier	args		3244320	0					
ANR	3244336	ExpressionStatement	m_timeout = 0	335:1:8351:8364	3244320	1	True				
ANR	3244337	AssignmentExpression	m_timeout = 0		3244320	0		=			
ANR	3244338	Identifier	m_timeout		3244320	0					
ANR	3244339	PrimaryExpression	0		3244320	1					
ANR	3244340	ExpressionStatement	m_mode = normal	336:1:8367:8382	3244320	2	True				
ANR	3244341	AssignmentExpression	m_mode = normal		3244320	0		=			
ANR	3244342	Identifier	m_mode		3244320	0					
ANR	3244343	Identifier	normal		3244320	1					
ANR	3244344	ExpressionStatement	pending_command = NULL	337:1:8385:8407	3244320	3	True				
ANR	3244345	AssignmentExpression	pending_command = NULL		3244320	0		=			
ANR	3244346	Identifier	pending_command		3244320	0					
ANR	3244347	Identifier	NULL		3244320	1					
ANR	3244348	ExpressionStatement	pending_args = NULL	338:1:8410:8429	3244320	4	True				
ANR	3244349	AssignmentExpression	pending_args = NULL		3244320	0		=			
ANR	3244350	Identifier	pending_args		3244320	0					
ANR	3244351	Identifier	NULL		3244320	1					
ANR	3244352	ExpressionStatement	pending_reqid = 0	339:1:8432:8449	3244320	5	True				
ANR	3244353	AssignmentExpression	pending_reqid = 0		3244320	0		=			
ANR	3244354	Identifier	pending_reqid		3244320	0					
ANR	3244355	PrimaryExpression	0		3244320	1					
ANR	3244356	ExpressionStatement	pending_result = NULL	340:1:8452:8473	3244320	6	True				
ANR	3244357	AssignmentExpression	pending_result = NULL		3244320	0		=			
ANR	3244358	Identifier	pending_result		3244320	0					
ANR	3244359	Identifier	NULL		3244320	1					
ANR	3244360	ExpressionStatement	pending_timeout = 0	341:1:8476:8495	3244320	7	True				
ANR	3244361	AssignmentExpression	pending_timeout = 0		3244320	0		=			
ANR	3244362	Identifier	pending_timeout		3244320	0					
ANR	3244363	PrimaryExpression	0		3244320	1					
ANR	3244364	ExpressionStatement	pending_timeout_tid = - 1	342:1:8498:8522	3244320	8	True				
ANR	3244365	AssignmentExpression	pending_timeout_tid = - 1		3244320	0		=			
ANR	3244366	Identifier	pending_timeout_tid		3244320	0					
ANR	3244367	UnaryOperationExpression	- 1		3244320	1					
ANR	3244368	UnaryOperator	-		3244320	0					
ANR	3244369	PrimaryExpression	1		3244320	1					
ANR	3244370	ExpressionStatement	pending_submitted_to_gahp = false	343:1:8525:8558	3244320	9	True				
ANR	3244371	AssignmentExpression	pending_submitted_to_gahp = false		3244320	0		=			
ANR	3244372	Identifier	pending_submitted_to_gahp		3244320	0					
ANR	3244373	Identifier	false		3244320	1					
ANR	3244374	ExpressionStatement	pending_proxy = NULL	344:1:8561:8581	3244320	10	True				
ANR	3244375	AssignmentExpression	pending_proxy = NULL		3244320	0		=			
ANR	3244376	Identifier	pending_proxy		3244320	0					
ANR	3244377	Identifier	NULL		3244320	1					
ANR	3244378	ExpressionStatement	user_timerid = - 1	345:1:8584:8601	3244320	11	True				
ANR	3244379	AssignmentExpression	user_timerid = - 1		3244320	0		=			
ANR	3244380	Identifier	user_timerid		3244320	0					
ANR	3244381	UnaryOperationExpression	- 1		3244320	1					
ANR	3244382	UnaryOperator	-		3244320	0					
ANR	3244383	PrimaryExpression	1		3244320	1					
ANR	3244384	ExpressionStatement	normal_proxy = NULL	346:1:8604:8623	3244320	12	True				
ANR	3244385	AssignmentExpression	normal_proxy = NULL		3244320	0		=			
ANR	3244386	Identifier	normal_proxy		3244320	0					
ANR	3244387	Identifier	NULL		3244320	1					
ANR	3244388	ExpressionStatement	deleg_proxy = NULL	347:1:8626:8644	3244320	13	True				
ANR	3244389	AssignmentExpression	deleg_proxy = NULL		3244320	0		=			
ANR	3244390	Identifier	deleg_proxy		3244320	0					
ANR	3244391	Identifier	NULL		3244320	1					
ANR	3244392	ExpressionStatement	"error_string = """""	348:1:8647:8664	3244320	14	True				
ANR	3244393	AssignmentExpression	"error_string = """""		3244320	0		=			
ANR	3244394	Identifier	error_string		3244320	0					
ANR	3244395	PrimaryExpression	""""""		3244320	1					
ANR	3244396	ExpressionStatement	server -> AddGahpClient ( )	350:1:8668:8691	3244320	15	True				
ANR	3244397	CallExpression	server -> AddGahpClient ( )		3244320	0					
ANR	3244398	Callee	server -> AddGahpClient		3244320	0					
ANR	3244399	PtrMemberAccess	server -> AddGahpClient		3244320	0					
ANR	3244400	Identifier	server		3244320	0					
ANR	3244401	Identifier	AddGahpClient		3244320	1					
ANR	3244402	ArgumentList			3244320	1					
ANR	3244403	Identifier	GahpClient :: GahpClient		3244320	1					
ANR	3244404	ParameterList	"const char * id , const char * path , const ArgList * args"		3244320	2					
ANR	3244405	Parameter	const char * id	332:23:8233:8246	3244320	0	True				
ANR	3244406	ParameterType	const char *		3244320	0					
ANR	3244407	Identifier	id		3244320	1					
ANR	3244408	Parameter	const char * path	332:39:8249:8264	3244320	1	True				
ANR	3244409	ParameterType	const char *		3244320	0					
ANR	3244410	Identifier	path		3244320	1					
ANR	3244411	Parameter	const ArgList * args	332:57:8267:8285	3244320	2	True				
ANR	3244412	ParameterType	const ArgList *		3244320	0					
ANR	3244413	Identifier	args		3244320	1					
ANR	3244414	CFGEntryNode	ENTRY		3244320		True				
ANR	3244415	CFGExitNode	EXIT		3244320		True				
ANR	3244416	Symbol	server		3244320						
ANR	3244417	Symbol	normal		3244320						
ANR	3244418	Symbol	NULL		3244320						
ANR	3244419	Symbol	pending_result		3244320						
ANR	3244420	Symbol	false		3244320						
ANR	3244421	Symbol	pending_proxy		3244320						
ANR	3244422	Symbol	pending_command		3244320						
ANR	3244423	Symbol	pending_submitted_to_gahp		3244320						
ANR	3244424	Symbol	pending_timeout		3244320						
ANR	3244425	Symbol	m_timeout		3244320						
ANR	3244426	Symbol	pending_timeout_tid		3244320						
ANR	3244427	Symbol	args		3244320						
ANR	3244428	Symbol	path		3244320						
ANR	3244429	Symbol	error_string		3244320						
ANR	3244430	Symbol	user_timerid		3244320						
ANR	3244431	Symbol	normal_proxy		3244320						
ANR	3244432	Symbol	pending_args		3244320						
ANR	3244433	Symbol	pending_reqid		3244320						
ANR	3244434	Symbol	GahpServer :: FindOrCreateGahpServer		3244320						
ANR	3244435	Symbol	id		3244320						
ANR	3244436	Symbol	m_mode		3244320						
ANR	3244437	Symbol	deleg_proxy		3244320						
ANR	3244438	Function	GahpClient :: ~GahpClient	353:0:8696:9166							
ANR	3244439	FunctionDef	GahpClient :: ~GahpClient ()		3244438	0					
ANR	3244440	CompoundStatement		354:0:8722:9166	3244438	0					
ANR	3244441	ExpressionStatement	clear_pending ( )	357:1:8852:8867	3244438	0	True				
ANR	3244442	CallExpression	clear_pending ( )		3244438	0					
ANR	3244443	Callee	clear_pending		3244438	0					
ANR	3244444	Identifier	clear_pending		3244438	0					
ANR	3244445	ArgumentList			3244438	1					
ANR	3244446	IfStatement	if ( normal_proxy != NULL )		3244438	1					
ANR	3244447	Condition	normal_proxy != NULL	358:6:8875:8894	3244438	0	True				
ANR	3244448	EqualityExpression	normal_proxy != NULL		3244438	0		!=			
ANR	3244449	Identifier	normal_proxy		3244438	0					
ANR	3244450	Identifier	NULL		3244438	1					
ANR	3244451	CompoundStatement		5:29:175:175	3244438	1					
ANR	3244452	ExpressionStatement	server -> UnregisterProxy ( normal_proxy -> proxy )	359:2:8902:8948	3244438	0	True				
ANR	3244453	CallExpression	server -> UnregisterProxy ( normal_proxy -> proxy )		3244438	0					
ANR	3244454	Callee	server -> UnregisterProxy		3244438	0					
ANR	3244455	PtrMemberAccess	server -> UnregisterProxy		3244438	0					
ANR	3244456	Identifier	server		3244438	0					
ANR	3244457	Identifier	UnregisterProxy		3244438	1					
ANR	3244458	ArgumentList	normal_proxy -> proxy		3244438	1					
ANR	3244459	Argument	normal_proxy -> proxy		3244438	0					
ANR	3244460	PtrMemberAccess	normal_proxy -> proxy		3244438	0					
ANR	3244461	Identifier	normal_proxy		3244438	0					
ANR	3244462	Identifier	proxy		3244438	1					
ANR	3244463	IfStatement	if ( deleg_proxy != NULL )		3244438	2					
ANR	3244464	Condition	deleg_proxy != NULL	361:6:8959:8977	3244438	0	True				
ANR	3244465	EqualityExpression	deleg_proxy != NULL		3244438	0		!=			
ANR	3244466	Identifier	deleg_proxy		3244438	0					
ANR	3244467	Identifier	NULL		3244438	1					
ANR	3244468	CompoundStatement		8:28:258:258	3244438	1					
ANR	3244469	ExpressionStatement	server -> UnregisterProxy ( deleg_proxy -> proxy )	362:2:8985:9030	3244438	0	True				
ANR	3244470	CallExpression	server -> UnregisterProxy ( deleg_proxy -> proxy )		3244438	0					
ANR	3244471	Callee	server -> UnregisterProxy		3244438	0					
ANR	3244472	PtrMemberAccess	server -> UnregisterProxy		3244438	0					
ANR	3244473	Identifier	server		3244438	0					
ANR	3244474	Identifier	UnregisterProxy		3244438	1					
ANR	3244475	ArgumentList	deleg_proxy -> proxy		3244438	1					
ANR	3244476	Argument	deleg_proxy -> proxy		3244438	0					
ANR	3244477	PtrMemberAccess	deleg_proxy -> proxy		3244438	0					
ANR	3244478	Identifier	deleg_proxy		3244438	0					
ANR	3244479	Identifier	proxy		3244438	1					
ANR	3244480	ExpressionStatement	server -> RemoveGahpClient ( )	364:1:9036:9062	3244438	3	True				
ANR	3244481	CallExpression	server -> RemoveGahpClient ( )		3244438	0					
ANR	3244482	Callee	server -> RemoveGahpClient		3244438	0					
ANR	3244483	PtrMemberAccess	server -> RemoveGahpClient		3244438	0					
ANR	3244484	Identifier	server		3244438	0					
ANR	3244485	Identifier	RemoveGahpClient		3244438	1					
ANR	3244486	ArgumentList			3244438	1					
ANR	3244487	Identifier	GahpClient :: ~GahpClient		3244438	1					
ANR	3244488	ParameterList			3244438	2					
ANR	3244489	CFGEntryNode	ENTRY		3244438		True				
ANR	3244490	CFGExitNode	EXIT		3244438		True				
ANR	3244491	Symbol	* deleg_proxy		3244438						
ANR	3244492	Symbol	server		3244438						
ANR	3244493	Symbol	NULL		3244438						
ANR	3244494	Symbol	normal_proxy		3244438						
ANR	3244495	Symbol	* normal_proxy		3244438						
ANR	3244496	Symbol	deleg_proxy -> proxy		3244438						
ANR	3244497	Symbol	normal_proxy -> proxy		3244438						
ANR	3244498	Symbol	deleg_proxy		3244438						
ANR	3244499	Function	GahpServer :: buffered_read	375:0:9469:10085							
ANR	3244500	FunctionDef	"GahpServer :: buffered_read (int fd , void * buf , int count)"		3244499	0					
ANR	3244501	CompoundStatement		377:0:9531:10085	3244499	0					
ANR	3244502	ExpressionStatement	ASSERT ( fd == m_gahp_readfd )	378:1:9534:9561	3244499	0	True				
ANR	3244503	CallExpression	ASSERT ( fd == m_gahp_readfd )		3244499	0					
ANR	3244504	Callee	ASSERT		3244499	0					
ANR	3244505	Identifier	ASSERT		3244499	0					
ANR	3244506	ArgumentList	fd == m_gahp_readfd		3244499	1					
ANR	3244507	Argument	fd == m_gahp_readfd		3244499	0					
ANR	3244508	EqualityExpression	fd == m_gahp_readfd		3244499	0		==			
ANR	3244509	Identifier	fd		3244499	0					
ANR	3244510	Identifier	m_gahp_readfd		3244499	1					
ANR	3244511	ExpressionStatement	ASSERT ( count == 1 )	379:1:9564:9582	3244499	1	True				
ANR	3244512	CallExpression	ASSERT ( count == 1 )		3244499	0					
ANR	3244513	Callee	ASSERT		3244499	0					
ANR	3244514	Identifier	ASSERT		3244499	0					
ANR	3244515	ArgumentList	count == 1		3244499	1					
ANR	3244516	Argument	count == 1		3244499	0					
ANR	3244517	EqualityExpression	count == 1		3244499	0		==			
ANR	3244518	Identifier	count		3244499	0					
ANR	3244519	PrimaryExpression	1		3244499	1					
ANR	3244520	IfStatement	if ( m_buffer_pos >= m_buffer_end )		3244499	2					
ANR	3244521	Condition	m_buffer_pos >= m_buffer_end	381:6:9591:9618	3244499	0	True				
ANR	3244522	RelationalExpression	m_buffer_pos >= m_buffer_end		3244499	0		>=			
ANR	3244523	Identifier	m_buffer_pos		3244499	0					
ANR	3244524	Identifier	m_buffer_end		3244499	1					
ANR	3244525	CompoundStatement		11:2:294:354	3244499	1					
ANR	3244526	IdentifierDeclStatement	int dummy_pipe = - 1 ;	385:2:9773:9792	3244499	0	True				
ANR	3244527	IdentifierDecl	dummy_pipe = - 1		3244499	0					
ANR	3244528	IdentifierDeclType	int		3244499	0					
ANR	3244529	Identifier	dummy_pipe		3244499	1					
ANR	3244530	AssignmentExpression	dummy_pipe = - 1		3244499	2		=			
ANR	3244531	Identifier	dummy_pipe		3244499	0					
ANR	3244532	UnaryOperationExpression	- 1		3244499	1					
ANR	3244533	UnaryOperator	-		3244499	0					
ANR	3244534	PrimaryExpression	1		3244499	1					
ANR	3244535	ExpressionStatement	err_pipe_ready ( dummy_pipe )	386:2:9796:9822	3244499	1	True				
ANR	3244536	CallExpression	err_pipe_ready ( dummy_pipe )		3244499	0					
ANR	3244537	Callee	err_pipe_ready		3244499	0					
ANR	3244538	Identifier	err_pipe_ready		3244499	0					
ANR	3244539	ArgumentList	dummy_pipe		3244499	1					
ANR	3244540	Argument	dummy_pipe		3244499	0					
ANR	3244541	Identifier	dummy_pipe		3244499	0					
ANR	3244542	IdentifierDeclStatement	"int rc = daemonCore -> Read_Pipe ( fd , m_buffer , m_buffer_size ) ;"	387:2:9826:9886	3244499	2	True				
ANR	3244543	IdentifierDecl	"rc = daemonCore -> Read_Pipe ( fd , m_buffer , m_buffer_size )"		3244499	0					
ANR	3244544	IdentifierDeclType	int		3244499	0					
ANR	3244545	Identifier	rc		3244499	1					
ANR	3244546	AssignmentExpression	"rc = daemonCore -> Read_Pipe ( fd , m_buffer , m_buffer_size )"		3244499	2		=			
ANR	3244547	Identifier	rc		3244499	0					
ANR	3244548	CallExpression	"daemonCore -> Read_Pipe ( fd , m_buffer , m_buffer_size )"		3244499	1					
ANR	3244549	Callee	daemonCore -> Read_Pipe		3244499	0					
ANR	3244550	PtrMemberAccess	daemonCore -> Read_Pipe		3244499	0					
ANR	3244551	Identifier	daemonCore		3244499	0					
ANR	3244552	Identifier	Read_Pipe		3244499	1					
ANR	3244553	ArgumentList	fd		3244499	1					
ANR	3244554	Argument	fd		3244499	0					
ANR	3244555	Identifier	fd		3244499	0					
ANR	3244556	Argument	m_buffer		3244499	1					
ANR	3244557	Identifier	m_buffer		3244499	0					
ANR	3244558	Argument	m_buffer_size		3244499	2					
ANR	3244559	Identifier	m_buffer_size		3244499	0					
ANR	3244560	ExpressionStatement	m_buffer_pos = 0	388:2:9890:9906	3244499	3	True				
ANR	3244561	AssignmentExpression	m_buffer_pos = 0		3244499	0		=			
ANR	3244562	Identifier	m_buffer_pos		3244499	0					
ANR	3244563	PrimaryExpression	0		3244499	1					
ANR	3244564	IfStatement	if ( rc <= 0 )		3244499	4					
ANR	3244565	Condition	rc <= 0	389:7:9915:9921	3244499	0	True				
ANR	3244566	RelationalExpression	rc <= 0		3244499	0		<=			
ANR	3244567	Identifier	rc		3244499	0					
ANR	3244568	PrimaryExpression	0		3244499	1					
ANR	3244569	CompoundStatement		13:17:393:393	3244499	1					
ANR	3244570	ExpressionStatement	m_buffer_end = 0	390:3:9930:9946	3244499	0	True				
ANR	3244571	AssignmentExpression	m_buffer_end = 0		3244499	0		=			
ANR	3244572	Identifier	m_buffer_end		3244499	0					
ANR	3244573	PrimaryExpression	0		3244499	1					
ANR	3244574	ReturnStatement	return rc ;	391:3:9951:9960	3244499	1	True				
ANR	3244575	Identifier	rc		3244499	0					
ANR	3244576	ElseStatement	else		3244499	0					
ANR	3244577	CompoundStatement		16:9:439:439	3244499	0					
ANR	3244578	ExpressionStatement	m_buffer_end = rc	393:3:9976:9993	3244499	0	True				
ANR	3244579	AssignmentExpression	m_buffer_end = rc		3244499	0		=			
ANR	3244580	Identifier	m_buffer_end		3244499	0					
ANR	3244581	Identifier	rc		3244499	1					
ANR	3244582	ExpressionStatement	( ( char * ) buf ) [ 0 ] = ( ( char * ) m_buffer ) [ m_buffer_pos ]	397:1:10004:10055	3244499	3	True				
ANR	3244583	AssignmentExpression	( ( char * ) buf ) [ 0 ] = ( ( char * ) m_buffer ) [ m_buffer_pos ]		3244499	0		=			
ANR	3244584	ArrayIndexing	( ( char * ) buf ) [ 0 ]		3244499	0					
ANR	3244585	CastExpression	( char * ) buf		3244499	0					
ANR	3244586	CastTarget	char *		3244499	0					
ANR	3244587	Identifier	buf		3244499	1					
ANR	3244588	PrimaryExpression	0		3244499	1					
ANR	3244589	ArrayIndexing	( ( char * ) m_buffer ) [ m_buffer_pos ]		3244499	1					
ANR	3244590	CastExpression	( char * ) m_buffer		3244499	0					
ANR	3244591	CastTarget	char *		3244499	0					
ANR	3244592	Identifier	m_buffer		3244499	1					
ANR	3244593	Identifier	m_buffer_pos		3244499	1					
ANR	3244594	ExpressionStatement	m_buffer_pos ++	398:1:10058:10072	3244499	4	True				
ANR	3244595	PostIncDecOperationExpression	m_buffer_pos ++		3244499	0					
ANR	3244596	Identifier	m_buffer_pos		3244499	0					
ANR	3244597	IncDec	++		3244499	1					
ANR	3244598	ReturnStatement	return 1 ;	399:1:10075:10083	3244499	5	True				
ANR	3244599	PrimaryExpression	1		3244499	0					
ANR	3244600	ReturnType	int		3244499	1					
ANR	3244601	Identifier	GahpServer :: buffered_read		3244499	2					
ANR	3244602	ParameterList	"int fd , void * buf , int count"		3244499	3					
ANR	3244603	Parameter	int fd	376:27:9500:9505	3244499	0	True				
ANR	3244604	ParameterType	int		3244499	0					
ANR	3244605	Identifier	fd		3244499	1					
ANR	3244606	Parameter	void * buf	376:35:9508:9516	3244499	1	True				
ANR	3244607	ParameterType	void *		3244499	0					
ANR	3244608	Identifier	buf		3244499	1					
ANR	3244609	Parameter	int count	376:46:9519:9527	3244499	2	True				
ANR	3244610	ParameterType	int		3244499	0					
ANR	3244611	Identifier	count		3244499	1					
ANR	3244612	CFGEntryNode	ENTRY		3244499		True				
ANR	3244613	CFGExitNode	EXIT		3244499		True				
ANR	3244614	Symbol	m_buffer_pos		3244499						
ANR	3244615	Symbol	dummy_pipe		3244499						
ANR	3244616	Symbol	* buf		3244499						
ANR	3244617	Symbol	count		3244499						
ANR	3244618	Symbol	m_buffer_end		3244499						
ANR	3244619	Symbol	m_gahp_readfd		3244499						
ANR	3244620	Symbol	* m_buffer		3244499						
ANR	3244621	Symbol	rc		3244499						
ANR	3244622	Symbol	buf		3244499						
ANR	3244623	Symbol	m_buffer_size		3244499						
ANR	3244624	Symbol	daemonCore -> Read_Pipe		3244499						
ANR	3244625	Symbol	* m_buffer_pos		3244499						
ANR	3244626	Symbol	* daemonCore		3244499						
ANR	3244627	Symbol	daemonCore		3244499						
ANR	3244628	Symbol	m_buffer		3244499						
ANR	3244629	Symbol	fd		3244499						
ANR	3244630	Function	GahpServer :: buffered_peek	403:0:10157:10228							
ANR	3244631	FunctionDef	GahpServer :: buffered_peek ()		3244630	0					
ANR	3244632	CompoundStatement		405:0:10189:10228	3244630	0					
ANR	3244633	ReturnStatement	return m_buffer_end - m_buffer_pos ;	406:1:10192:10226	3244630	0	True				
ANR	3244634	AdditiveExpression	m_buffer_end - m_buffer_pos		3244630	0		-			
ANR	3244635	Identifier	m_buffer_end		3244630	0					
ANR	3244636	Identifier	m_buffer_pos		3244630	1					
ANR	3244637	ReturnType	int		3244630	1					
ANR	3244638	Identifier	GahpServer :: buffered_peek		3244630	2					
ANR	3244639	ParameterList			3244630	3					
ANR	3244640	CFGEntryNode	ENTRY		3244630		True				
ANR	3244641	CFGExitNode	EXIT		3244630		True				
ANR	3244642	Symbol	m_buffer_pos		3244630						
ANR	3244643	Symbol	m_buffer_end		3244630						
ANR	3244644	Function	GahpServer :: read_argv	409:0:10231:14645							
ANR	3244645	FunctionDef	GahpServer :: read_argv (Gahp_Args & g_args)		3244644	0					
ANR	3244646	CompoundStatement		411:0:10277:14645	3244644	0					
ANR	3244647	Statement	static	412:1:10280:10285	3244644	0	True				
ANR	3244648	IdentifierDeclStatement	char * buf = NULL ;	412:8:10287:10303	3244644	1	True				
ANR	3244649	IdentifierDecl	* buf = NULL		3244644	0					
ANR	3244650	IdentifierDeclType	char *		3244644	0					
ANR	3244651	Identifier	buf		3244644	1					
ANR	3244652	AssignmentExpression	* buf = NULL		3244644	2		=			
ANR	3244653	Identifier	NULL		3244644	0					
ANR	3244654	Identifier	NULL		3244644	1					
ANR	3244655	IdentifierDeclStatement	int ibuf = 0 ;	413:1:10306:10318	3244644	2	True				
ANR	3244656	IdentifierDecl	ibuf = 0		3244644	0					
ANR	3244657	IdentifierDeclType	int		3244644	0					
ANR	3244658	Identifier	ibuf		3244644	1					
ANR	3244659	AssignmentExpression	ibuf = 0		3244644	2		=			
ANR	3244660	Identifier	ibuf		3244644	0					
ANR	3244661	PrimaryExpression	0		3244644	1					
ANR	3244662	IdentifierDeclStatement	int result = 0 ;	414:1:10321:10335	3244644	3	True				
ANR	3244663	IdentifierDecl	result = 0		3244644	0					
ANR	3244664	IdentifierDeclType	int		3244644	0					
ANR	3244665	Identifier	result		3244644	1					
ANR	3244666	AssignmentExpression	result = 0		3244644	2		=			
ANR	3244667	Identifier	result		3244644	0					
ANR	3244668	PrimaryExpression	0		3244644	1					
ANR	3244669	IdentifierDeclStatement	bool trash_this_line = false ;	415:1:10338:10366	3244644	4	True				
ANR	3244670	IdentifierDecl	trash_this_line = false		3244644	0					
ANR	3244671	IdentifierDeclType	bool		3244644	0					
ANR	3244672	Identifier	trash_this_line		3244644	1					
ANR	3244673	AssignmentExpression	trash_this_line = false		3244644	2		=			
ANR	3244674	Identifier	false		3244644	0					
ANR	3244675	Identifier	false		3244644	1					
ANR	3244676	IdentifierDeclStatement	bool escape_seen = false ;	416:1:10369:10393	3244644	5	True				
ANR	3244677	IdentifierDecl	escape_seen = false		3244644	0					
ANR	3244678	IdentifierDeclType	bool		3244644	0					
ANR	3244679	Identifier	escape_seen		3244644	1					
ANR	3244680	AssignmentExpression	escape_seen = false		3244644	2		=			
ANR	3244681	Identifier	false		3244644	0					
ANR	3244682	Identifier	false		3244644	1					
ANR	3244683	Statement	static	417:1:10396:10401	3244644	6	True				
ANR	3244684	IdentifierDeclStatement	const int buf_size = 1024 * 500 ;	417:8:10403:10434	3244644	7	True				
ANR	3244685	IdentifierDecl	buf_size = 1024 * 500		3244644	0					
ANR	3244686	IdentifierDeclType	const int		3244644	0					
ANR	3244687	Identifier	buf_size		3244644	1					
ANR	3244688	AssignmentExpression	buf_size = 1024 * 500		3244644	2		=			
ANR	3244689	Identifier	buf_size		3244644	0					
ANR	3244690	MultiplicativeExpression	1024 * 500		3244644	1		*			
ANR	3244691	PrimaryExpression	1024		3244644	0					
ANR	3244692	PrimaryExpression	500		3244644	1					
ANR	3244693	ExpressionStatement	g_args . reset ( )	419:1:10438:10452	3244644	8	True				
ANR	3244694	CallExpression	g_args . reset ( )		3244644	0					
ANR	3244695	Callee	g_args . reset		3244644	0					
ANR	3244696	MemberAccess	g_args . reset		3244644	0					
ANR	3244697	Identifier	g_args		3244644	0					
ANR	3244698	Identifier	reset		3244644	1					
ANR	3244699	ArgumentList			3244644	1					
ANR	3244700	IfStatement	if ( m_gahp_readfd == - 1 )		3244644	9					
ANR	3244701	Condition	m_gahp_readfd == - 1	421:6:10461:10479	3244644	0	True				
ANR	3244702	EqualityExpression	m_gahp_readfd == - 1		3244644	0		==			
ANR	3244703	Identifier	m_gahp_readfd		3244644	0					
ANR	3244704	UnaryOperationExpression	- 1		3244644	1					
ANR	3244705	UnaryOperator	-		3244644	0					
ANR	3244706	PrimaryExpression	1		3244644	1					
ANR	3244707	CompoundStatement		11:28:205:205	3244644	1					
ANR	3244708	IfStatement	if ( logGahpIo )		3244644	0					
ANR	3244709	Condition	logGahpIo	422:7:10492:10500	3244644	0	True				
ANR	3244710	Identifier	logGahpIo		3244644	0					
ANR	3244711	CompoundStatement		12:19:226:226	3244644	1					
ANR	3244712	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP[%d] -> (no pipe)\\n"" , m_gahp_pid )"	423:3:10509:10570	3244644	0	True				
ANR	3244713	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP[%d] -> (no pipe)\\n"" , m_gahp_pid )"		3244644	0					
ANR	3244714	Callee	dprintf		3244644	0					
ANR	3244715	Identifier	dprintf		3244644	0					
ANR	3244716	ArgumentList	D_FULLDEBUG		3244644	1					
ANR	3244717	Argument	D_FULLDEBUG		3244644	0					
ANR	3244718	Identifier	D_FULLDEBUG		3244644	0					
ANR	3244719	Argument	"""GAHP[%d] -> (no pipe)\\n"""		3244644	1					
ANR	3244720	PrimaryExpression	"""GAHP[%d] -> (no pipe)\\n"""		3244644	0					
ANR	3244721	Argument	m_gahp_pid		3244644	2					
ANR	3244722	Identifier	m_gahp_pid		3244644	0					
ANR	3244723	ReturnStatement	return ;	425:2:10578:10584	3244644	1	True				
ANR	3244724	IfStatement	if ( buf == NULL )		3244644	10					
ANR	3244725	Condition	buf == NULL	428:6:10596:10606	3244644	0	True				
ANR	3244726	EqualityExpression	buf == NULL		3244644	0		==			
ANR	3244727	Identifier	buf		3244644	0					
ANR	3244728	Identifier	NULL		3244644	1					
ANR	3244729	CompoundStatement		18:20:332:332	3244644	1					
ANR	3244730	ExpressionStatement	buf = ( char * ) malloc ( buf_size )	429:2:10614:10643	3244644	0	True				
ANR	3244731	AssignmentExpression	buf = ( char * ) malloc ( buf_size )		3244644	0		=			
ANR	3244732	Identifier	buf		3244644	0					
ANR	3244733	CastExpression	( char * ) malloc ( buf_size )		3244644	1					
ANR	3244734	CastTarget	char *		3244644	0					
ANR	3244735	CallExpression	malloc ( buf_size )		3244644	1					
ANR	3244736	Callee	malloc		3244644	0					
ANR	3244737	Identifier	malloc		3244644	0					
ANR	3244738	ArgumentList	buf_size		3244644	1					
ANR	3244739	Argument	buf_size		3244644	0					
ANR	3244740	Identifier	buf_size		3244644	0					
ANR	3244741	ExpressionStatement	ibuf = 0	432:1:10650:10658	3244644	11	True				
ANR	3244742	AssignmentExpression	ibuf = 0		3244644	0		=			
ANR	3244743	Identifier	ibuf		3244644	0					
ANR	3244744	PrimaryExpression	0		3244644	1					
ANR	3244745	ForStatement	for ( ; ; )		3244644	12					
ANR	3244746	CompoundStatement		24:10:393:393	3244644	0					
ANR	3244747	ExpressionStatement	ASSERT ( ibuf < buf_size )	436:2:10676:10699	3244644	0	True				
ANR	3244748	CallExpression	ASSERT ( ibuf < buf_size )		3244644	0					
ANR	3244749	Callee	ASSERT		3244644	0					
ANR	3244750	Identifier	ASSERT		3244644	0					
ANR	3244751	ArgumentList	ibuf < buf_size		3244644	1					
ANR	3244752	Argument	ibuf < buf_size		3244644	0					
ANR	3244753	RelationalExpression	ibuf < buf_size		3244644	0		<			
ANR	3244754	Identifier	ibuf		3244644	0					
ANR	3244755	Identifier	buf_size		3244644	1					
ANR	3244756	ExpressionStatement	"result = buffered_read ( m_gahp_readfd , & ( buf [ ibuf ] ) , 1 )"	438:2:10772:10827	3244644	1	True				
ANR	3244757	AssignmentExpression	"result = buffered_read ( m_gahp_readfd , & ( buf [ ibuf ] ) , 1 )"		3244644	0		=			
ANR	3244758	Identifier	result		3244644	0					
ANR	3244759	CallExpression	"buffered_read ( m_gahp_readfd , & ( buf [ ibuf ] ) , 1 )"		3244644	1					
ANR	3244760	Callee	buffered_read		3244644	0					
ANR	3244761	Identifier	buffered_read		3244644	0					
ANR	3244762	ArgumentList	m_gahp_readfd		3244644	1					
ANR	3244763	Argument	m_gahp_readfd		3244644	0					
ANR	3244764	Identifier	m_gahp_readfd		3244644	0					
ANR	3244765	Argument	& ( buf [ ibuf ] )		3244644	1					
ANR	3244766	UnaryOperationExpression	& ( buf [ ibuf ] )		3244644	0					
ANR	3244767	UnaryOperator	&		3244644	0					
ANR	3244768	ArrayIndexing	buf [ ibuf ]		3244644	1					
ANR	3244769	Identifier	buf		3244644	0					
ANR	3244770	Identifier	ibuf		3244644	1					
ANR	3244771	Argument	1		3244644	2					
ANR	3244772	PrimaryExpression	1		3244644	0					
ANR	3244773	IfStatement	if ( result < 0 )		3244644	2					
ANR	3244774	Condition	result < 0	441:7:10876:10885	3244644	0	True				
ANR	3244775	RelationalExpression	result < 0		3244644	0		<			
ANR	3244776	Identifier	result		3244644	0					
ANR	3244777	PrimaryExpression	0		3244644	1					
ANR	3244778	CompoundStatement		31:20:611:611	3244644	1					
ANR	3244779	ContinueStatement	continue ;	442:3:10927:10935	3244644	0	True				
ANR	3244780	IfStatement	if ( result == 0 )		3244644	3					
ANR	3244781	Condition	result == 0	444:7:10948:10958	3244644	0	True				
ANR	3244782	EqualityExpression	result == 0		3244644	0		==			
ANR	3244783	Identifier	result		3244644	0					
ANR	3244784	PrimaryExpression	0		3244644	1					
ANR	3244785	CompoundStatement		34:21:684:684	3244644	1					
ANR	3244786	ExpressionStatement	g_args . reset ( )	446:3:11014:11028	3244644	0	True				
ANR	3244787	CallExpression	g_args . reset ( )		3244644	0					
ANR	3244788	Callee	g_args . reset		3244644	0					
ANR	3244789	MemberAccess	g_args . reset		3244644	0					
ANR	3244790	Identifier	g_args		3244644	0					
ANR	3244791	Identifier	reset		3244644	1					
ANR	3244792	ArgumentList			3244644	1					
ANR	3244793	IfStatement	if ( logGahpIo )		3244644	1					
ANR	3244794	Condition	logGahpIo	447:8:11038:11046	3244644	0	True				
ANR	3244795	Identifier	logGahpIo		3244644	0					
ANR	3244796	CompoundStatement		37:20:772:772	3244644	1					
ANR	3244797	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP[%d] -> EOF\\n"" , m_gahp_pid )"	448:4:11056:11111	3244644	0	True				
ANR	3244798	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP[%d] -> EOF\\n"" , m_gahp_pid )"		3244644	0					
ANR	3244799	Callee	dprintf		3244644	0					
ANR	3244800	Identifier	dprintf		3244644	0					
ANR	3244801	ArgumentList	D_FULLDEBUG		3244644	1					
ANR	3244802	Argument	D_FULLDEBUG		3244644	0					
ANR	3244803	Identifier	D_FULLDEBUG		3244644	0					
ANR	3244804	Argument	"""GAHP[%d] -> EOF\\n"""		3244644	1					
ANR	3244805	PrimaryExpression	"""GAHP[%d] -> EOF\\n"""		3244644	0					
ANR	3244806	Argument	m_gahp_pid		3244644	2					
ANR	3244807	Identifier	m_gahp_pid		3244644	0					
ANR	3244808	ReturnStatement	return ;	450:3:11121:11127	3244644	2	True				
ANR	3244809	IfStatement	if ( escape_seen )		3244644	4					
ANR	3244810	Condition	escape_seen	456:7:11262:11272	3244644	0	True				
ANR	3244811	Identifier	escape_seen		3244644	0					
ANR	3244812	CompoundStatement		46:21:998:998	3244644	1					
ANR	3244813	ExpressionStatement	ibuf ++	457:3:11281:11287	3244644	0	True				
ANR	3244814	PostIncDecOperationExpression	ibuf ++		3244644	0					
ANR	3244815	Identifier	ibuf		3244644	0					
ANR	3244816	IncDec	++		3244644	1					
ANR	3244817	ExpressionStatement	escape_seen = false	458:3:11292:11311	3244644	1	True				
ANR	3244818	AssignmentExpression	escape_seen = false		3244644	0		=			
ANR	3244819	Identifier	escape_seen		3244644	0					
ANR	3244820	Identifier	false		3244644	1					
ANR	3244821	ContinueStatement	continue ;	459:3:11316:11324	3244644	2	True				
ANR	3244822	IfStatement	if ( buf [ ibuf ] == '\\\\' )		3244644	5					
ANR	3244823	Condition	buf [ ibuf ] == '\\\\'	465:7:11447:11463	3244644	0	True				
ANR	3244824	EqualityExpression	buf [ ibuf ] == '\\\\'		3244644	0		==			
ANR	3244825	ArrayIndexing	buf [ ibuf ]		3244644	0					
ANR	3244826	Identifier	buf		3244644	0					
ANR	3244827	Identifier	ibuf		3244644	1					
ANR	3244828	PrimaryExpression	'\\\\'		3244644	1					
ANR	3244829	CompoundStatement		55:27:1189:1189	3244644	1					
ANR	3244830	ExpressionStatement	escape_seen = true	466:3:11472:11490	3244644	0	True				
ANR	3244831	AssignmentExpression	escape_seen = true		3244644	0		=			
ANR	3244832	Identifier	escape_seen		3244644	0					
ANR	3244833	Identifier	true		3244644	1					
ANR	3244834	ContinueStatement	continue ;	467:3:11495:11503	3244644	1	True				
ANR	3244835	IfStatement	if ( buf [ ibuf ] == '\\r' )		3244644	6					
ANR	3244836	Condition	buf [ ibuf ] == '\\r'	471:7:11574:11590	3244644	0	True				
ANR	3244837	EqualityExpression	buf [ ibuf ] == '\\r'		3244644	0		==			
ANR	3244838	ArrayIndexing	buf [ ibuf ]		3244644	0					
ANR	3244839	Identifier	buf		3244644	0					
ANR	3244840	Identifier	ibuf		3244644	1					
ANR	3244841	PrimaryExpression	'\\r'		3244644	1					
ANR	3244842	CompoundStatement		61:27:1316:1316	3244644	1					
ANR	3244843	ContinueStatement	continue ;	472:3:11599:11607	3244644	0	True				
ANR	3244844	IfStatement	if ( buf [ ibuf ] == ' ' )		3244644	7					
ANR	3244845	Condition	buf [ ibuf ] == ' '	476:7:11687:11702	3244644	0	True				
ANR	3244846	EqualityExpression	buf [ ibuf ] == ' '		3244644	0		==			
ANR	3244847	ArrayIndexing	buf [ ibuf ]		3244644	0					
ANR	3244848	Identifier	buf		3244644	0					
ANR	3244849	Identifier	ibuf		3244644	1					
ANR	3244850	PrimaryExpression	' '		3244644	1					
ANR	3244851	CompoundStatement		66:26:1428:1428	3244644	1					
ANR	3244852	ExpressionStatement	buf [ ibuf ] = '\\0'	477:3:11711:11727	3244644	0	True				
ANR	3244853	AssignmentExpression	buf [ ibuf ] = '\\0'		3244644	0		=			
ANR	3244854	ArrayIndexing	buf [ ibuf ]		3244644	0					
ANR	3244855	Identifier	buf		3244644	0					
ANR	3244856	Identifier	ibuf		3244644	1					
ANR	3244857	PrimaryExpression	'\\0'		3244644	1					
ANR	3244858	ExpressionStatement	g_args . add_arg ( strdup ( buf ) )	478:3:11732:11763	3244644	1	True				
ANR	3244859	CallExpression	g_args . add_arg ( strdup ( buf ) )		3244644	0					
ANR	3244860	Callee	g_args . add_arg		3244644	0					
ANR	3244861	MemberAccess	g_args . add_arg		3244644	0					
ANR	3244862	Identifier	g_args		3244644	0					
ANR	3244863	Identifier	add_arg		3244644	1					
ANR	3244864	ArgumentList	strdup ( buf )		3244644	1					
ANR	3244865	Argument	strdup ( buf )		3244644	0					
ANR	3244866	CallExpression	strdup ( buf )		3244644	0					
ANR	3244867	Callee	strdup		3244644	0					
ANR	3244868	Identifier	strdup		3244644	0					
ANR	3244869	ArgumentList	buf		3244644	1					
ANR	3244870	Argument	buf		3244644	0					
ANR	3244871	Identifier	buf		3244644	0					
ANR	3244872	ExpressionStatement	ibuf = 0	479:3:11768:11776	3244644	2	True				
ANR	3244873	AssignmentExpression	ibuf = 0		3244644	0		=			
ANR	3244874	Identifier	ibuf		3244644	0					
ANR	3244875	PrimaryExpression	0		3244644	1					
ANR	3244876	ContinueStatement	continue ;	480:3:11781:11789	3244644	3	True				
ANR	3244877	IfStatement	if ( buf [ ibuf ] == '\\n' )		3244644	8					
ANR	3244878	Condition	buf [ ibuf ] == '\\n'	484:7:11865:11879	3244644	0	True				
ANR	3244879	EqualityExpression	buf [ ibuf ] == '\\n'		3244644	0		==			
ANR	3244880	ArrayIndexing	buf [ ibuf ]		3244644	0					
ANR	3244881	Identifier	buf		3244644	0					
ANR	3244882	Identifier	ibuf		3244644	1					
ANR	3244883	PrimaryExpression	'\\n'		3244644	1					
ANR	3244884	CompoundStatement		74:25:1605:1605	3244644	1					
ANR	3244885	ExpressionStatement	buf [ ibuf ] = 0	485:3:11889:11902	3244644	0	True				
ANR	3244886	AssignmentExpression	buf [ ibuf ] = 0		3244644	0		=			
ANR	3244887	ArrayIndexing	buf [ ibuf ]		3244644	0					
ANR	3244888	Identifier	buf		3244644	0					
ANR	3244889	Identifier	ibuf		3244644	1					
ANR	3244890	PrimaryExpression	0		3244644	1					
ANR	3244891	ExpressionStatement	g_args . add_arg ( strdup ( buf ) )	486:3:11907:11938	3244644	1	True				
ANR	3244892	CallExpression	g_args . add_arg ( strdup ( buf ) )		3244644	0					
ANR	3244893	Callee	g_args . add_arg		3244644	0					
ANR	3244894	MemberAccess	g_args . add_arg		3244644	0					
ANR	3244895	Identifier	g_args		3244644	0					
ANR	3244896	Identifier	add_arg		3244644	1					
ANR	3244897	ArgumentList	strdup ( buf )		3244644	1					
ANR	3244898	Argument	strdup ( buf )		3244644	0					
ANR	3244899	CallExpression	strdup ( buf )		3244644	0					
ANR	3244900	Callee	strdup		3244644	0					
ANR	3244901	Identifier	strdup		3244644	0					
ANR	3244902	ArgumentList	buf		3244644	1					
ANR	3244903	Argument	buf		3244644	0					
ANR	3244904	Identifier	buf		3244644	0					
ANR	3244905	ExpressionStatement	trash_this_line = false	490:3:12040:12063	3244644	2	True				
ANR	3244906	AssignmentExpression	trash_this_line = false		3244644	0		=			
ANR	3244907	Identifier	trash_this_line		3244644	0					
ANR	3244908	Identifier	false		3244644	1					
ANR	3244909	IfStatement	if ( use_prefix )		3244644	3					
ANR	3244910	Condition	use_prefix	491:8:12073:12082	3244644	0	True				
ANR	3244911	Identifier	use_prefix		3244644	0					
ANR	3244912	CompoundStatement		81:21:1808:1808	3244644	1					
ANR	3244913	IfStatement	"if ( g_args . argc > 0 && strncmp ( GAHP_PREFIX , g_args . argv [ 0 ] , GAHP_PREFIX_LEN ) == 0 )"		3244644	0					
ANR	3244914	Condition	"g_args . argc > 0 && strncmp ( GAHP_PREFIX , g_args . argv [ 0 ] , GAHP_PREFIX_LEN ) == 0"	492:9:12097:12176	3244644	0	True				
ANR	3244915	AndExpression	"g_args . argc > 0 && strncmp ( GAHP_PREFIX , g_args . argv [ 0 ] , GAHP_PREFIX_LEN ) == 0"		3244644	0		&&			
ANR	3244916	RelationalExpression	g_args . argc > 0		3244644	0		>			
ANR	3244917	MemberAccess	g_args . argc		3244644	0					
ANR	3244918	Identifier	g_args		3244644	0					
ANR	3244919	Identifier	argc		3244644	1					
ANR	3244920	PrimaryExpression	0		3244644	1					
ANR	3244921	EqualityExpression	"strncmp ( GAHP_PREFIX , g_args . argv [ 0 ] , GAHP_PREFIX_LEN ) == 0"		3244644	1		==			
ANR	3244922	CallExpression	"strncmp ( GAHP_PREFIX , g_args . argv [ 0 ] , GAHP_PREFIX_LEN )"		3244644	0					
ANR	3244923	Callee	strncmp		3244644	0					
ANR	3244924	Identifier	strncmp		3244644	0					
ANR	3244925	ArgumentList	GAHP_PREFIX		3244644	1					
ANR	3244926	Argument	GAHP_PREFIX		3244644	0					
ANR	3244927	Identifier	GAHP_PREFIX		3244644	0					
ANR	3244928	Argument	g_args . argv [ 0 ]		3244644	1					
ANR	3244929	ArrayIndexing	g_args . argv [ 0 ]		3244644	0					
ANR	3244930	MemberAccess	g_args . argv		3244644	0					
ANR	3244931	Identifier	g_args		3244644	0					
ANR	3244932	Identifier	argv		3244644	1					
ANR	3244933	PrimaryExpression	0		3244644	1					
ANR	3244934	Argument	GAHP_PREFIX_LEN		3244644	2					
ANR	3244935	Identifier	GAHP_PREFIX_LEN		3244644	0					
ANR	3244936	PrimaryExpression	0		3244644	1					
ANR	3244937	CompoundStatement		84:4:1905:1905	3244644	1					
ANR	3244938	ExpressionStatement	"memmove ( g_args . argv [ 0 ] , & ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] ) , 1 + strlen ( & ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] ) ) )"	497:5:12262:12375	3244644	0	True				
ANR	3244939	CallExpression	"memmove ( g_args . argv [ 0 ] , & ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] ) , 1 + strlen ( & ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] ) ) )"		3244644	0					
ANR	3244940	Callee	memmove		3244644	0					
ANR	3244941	Identifier	memmove		3244644	0					
ANR	3244942	ArgumentList	g_args . argv [ 0 ]		3244644	1					
ANR	3244943	Argument	g_args . argv [ 0 ]		3244644	0					
ANR	3244944	ArrayIndexing	g_args . argv [ 0 ]		3244644	0					
ANR	3244945	MemberAccess	g_args . argv		3244644	0					
ANR	3244946	Identifier	g_args		3244644	0					
ANR	3244947	Identifier	argv		3244644	1					
ANR	3244948	PrimaryExpression	0		3244644	1					
ANR	3244949	Argument	& ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] )		3244644	1					
ANR	3244950	UnaryOperationExpression	& ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] )		3244644	0					
ANR	3244951	UnaryOperator	&		3244644	0					
ANR	3244952	ArrayIndexing	g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ]		3244644	1					
ANR	3244953	ArrayIndexing	g_args . argv [ 0 ]		3244644	0					
ANR	3244954	MemberAccess	g_args . argv		3244644	0					
ANR	3244955	Identifier	g_args		3244644	0					
ANR	3244956	Identifier	argv		3244644	1					
ANR	3244957	PrimaryExpression	0		3244644	1					
ANR	3244958	Identifier	GAHP_PREFIX_LEN		3244644	1					
ANR	3244959	Argument	1 + strlen ( & ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] ) )		3244644	2					
ANR	3244960	AdditiveExpression	1 + strlen ( & ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] ) )		3244644	0		+			
ANR	3244961	PrimaryExpression	1		3244644	0					
ANR	3244962	CallExpression	strlen ( & ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] ) )		3244644	1					
ANR	3244963	Callee	strlen		3244644	0					
ANR	3244964	Identifier	strlen		3244644	0					
ANR	3244965	ArgumentList	& ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] )		3244644	1					
ANR	3244966	Argument	& ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] )		3244644	0					
ANR	3244967	UnaryOperationExpression	& ( g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ] )		3244644	0					
ANR	3244968	UnaryOperator	&		3244644	0					
ANR	3244969	ArrayIndexing	g_args . argv [ 0 ] [ GAHP_PREFIX_LEN ]		3244644	1					
ANR	3244970	ArrayIndexing	g_args . argv [ 0 ]		3244644	0					
ANR	3244971	MemberAccess	g_args . argv		3244644	0					
ANR	3244972	Identifier	g_args		3244644	0					
ANR	3244973	Identifier	argv		3244644	1					
ANR	3244974	PrimaryExpression	0		3244644	1					
ANR	3244975	Identifier	GAHP_PREFIX_LEN		3244644	1					
ANR	3244976	ElseStatement	else		3244644	0					
ANR	3244977	CompoundStatement		89:11:2110:2110	3244644	0					
ANR	3244978	ExpressionStatement	trash_this_line = true	501:5:12418:12440	3244644	0	True				
ANR	3244979	AssignmentExpression	trash_this_line = true		3244644	0		=			
ANR	3244980	Identifier	trash_this_line		3244644	0					
ANR	3244981	Identifier	true		3244644	1					
ANR	3244982	IfStatement	if ( logGahpIo )		3244644	4					
ANR	3244983	Condition	logGahpIo	505:8:12462:12470	3244644	0	True				
ANR	3244984	Identifier	logGahpIo		3244644	0					
ANR	3244985	CompoundStatement		102:11:2559:2576	3244644	1					
ANR	3244986	Statement	static	512:4:12830:12835	3244644	0	True				
ANR	3244987	IdentifierDeclStatement	std :: string debug ;	512:11:12837:12854	3244644	1	True				
ANR	3244988	IdentifierDecl	debug		3244644	0					
ANR	3244989	IdentifierDeclType	std :: string		3244644	0					
ANR	3244990	Identifier	debug		3244644	1					
ANR	3244991	ExpressionStatement	"debug = """""	513:4:12860:12870	3244644	2	True				
ANR	3244992	AssignmentExpression	"debug = """""		3244644	0		=			
ANR	3244993	Identifier	debug		3244644	0					
ANR	3244994	PrimaryExpression	""""""		3244644	1					
ANR	3244995	IfStatement	if ( g_args . argc > 0 )		3244644	3					
ANR	3244996	Condition	g_args . argc > 0	514:8:12880:12894	3244644	0	True				
ANR	3244997	RelationalExpression	g_args . argc > 0		3244644	0		>			
ANR	3244998	MemberAccess	g_args . argc		3244644	0					
ANR	3244999	Identifier	g_args		3244644	0					
ANR	3245000	Identifier	argc		3244644	1					
ANR	3245001	PrimaryExpression	0		3244644	1					
ANR	3245002	CompoundStatement		104:26:2620:2620	3244644	1					
ANR	3245003	ExpressionStatement	"debug += ""'"""	515:5:12905:12917	3244644	0	True				
ANR	3245004	AssignmentExpression	"debug += ""'"""		3244644	0		+=			
ANR	3245005	Identifier	debug		3244644	0					
ANR	3245006	PrimaryExpression	"""'"""		3244644	1					
ANR	3245007	ForStatement	for ( int i = 0 ; i < g_args . argc ; i ++ )		3244644	1					
ANR	3245008	ForInit	int i = 0 ;	516:11:12930:12939	3244644	0	True				
ANR	3245009	IdentifierDeclStatement	int i = 0 ;		3244644	0					
ANR	3245010	IdentifierDecl	i = 0		3244644	0					
ANR	3245011	IdentifierDeclType	int		3244644	0					
ANR	3245012	Identifier	i		3244644	1					
ANR	3245013	AssignmentExpression	i = 0		3244644	2		=			
ANR	3245014	Identifier	i		3244644	0					
ANR	3245015	PrimaryExpression	0		3244644	1					
ANR	3245016	Condition	i < g_args . argc	516:22:12941:12955	3244644	1	True				
ANR	3245017	RelationalExpression	i < g_args . argc		3244644	0		<			
ANR	3245018	Identifier	i		3244644	0					
ANR	3245019	MemberAccess	g_args . argc		3244644	1					
ANR	3245020	Identifier	g_args		3244644	0					
ANR	3245021	Identifier	argc		3244644	1					
ANR	3245022	PostIncDecOperationExpression	i ++	516:39:12958:12960	3244644	2	True				
ANR	3245023	Identifier	i		3244644	0					
ANR	3245024	IncDec	++		3244644	1					
ANR	3245025	CompoundStatement		106:45:2686:2686	3244644	3					
ANR	3245026	IfStatement	if ( i != 0 )		3244644	0					
ANR	3245027	Condition	i != 0	517:11:12977:12982	3244644	0	True				
ANR	3245028	EqualityExpression	i != 0		3244644	0		!=			
ANR	3245029	Identifier	i		3244644	0					
ANR	3245030	PrimaryExpression	0		3244644	1					
ANR	3245031	CompoundStatement		107:20:2708:2708	3244644	1					
ANR	3245032	ExpressionStatement	"debug += ""' '"""	518:7:12995:13009	3244644	0	True				
ANR	3245033	AssignmentExpression	"debug += ""' '"""		3244644	0		+=			
ANR	3245034	Identifier	debug		3244644	0					
ANR	3245035	PrimaryExpression	"""' '"""		3244644	1					
ANR	3245036	IfStatement	if ( g_args . argv [ i ] )		3244644	1					
ANR	3245037	Condition	g_args . argv [ i ]	520:11:13030:13043	3244644	0	True				
ANR	3245038	ArrayIndexing	g_args . argv [ i ]		3244644	0					
ANR	3245039	MemberAccess	g_args . argv		3244644	0					
ANR	3245040	Identifier	g_args		3244644	0					
ANR	3245041	Identifier	argv		3244644	1					
ANR	3245042	Identifier	i		3244644	1					
ANR	3245043	CompoundStatement		110:28:2769:2769	3244644	1					
ANR	3245044	ExpressionStatement	debug += g_args . argv [ i ]	521:7:13056:13079	3244644	0	True				
ANR	3245045	AssignmentExpression	debug += g_args . argv [ i ]		3244644	0		+=			
ANR	3245046	Identifier	debug		3244644	0					
ANR	3245047	ArrayIndexing	g_args . argv [ i ]		3244644	1					
ANR	3245048	MemberAccess	g_args . argv		3244644	0					
ANR	3245049	Identifier	g_args		3244644	0					
ANR	3245050	Identifier	argv		3244644	1					
ANR	3245051	Identifier	i		3244644	1					
ANR	3245052	IfStatement	if ( logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize )		3244644	2					
ANR	3245053	Condition	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize	523:11:13100:13158	3244644	0	True				
ANR	3245054	AndExpression	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize		3244644	0		&&			
ANR	3245055	RelationalExpression	logGahpIoSize > 0		3244644	0		>			
ANR	3245056	Identifier	logGahpIoSize		3244644	0					
ANR	3245057	PrimaryExpression	0		3244644	1					
ANR	3245058	RelationalExpression	debug . length ( ) > logGahpIoSize		3244644	1		>			
ANR	3245059	CallExpression	debug . length ( )		3244644	0					
ANR	3245060	Callee	debug . length		3244644	0					
ANR	3245061	MemberAccess	debug . length		3244644	0					
ANR	3245062	Identifier	debug		3244644	0					
ANR	3245063	Identifier	length		3244644	1					
ANR	3245064	ArgumentList			3244644	1					
ANR	3245065	Identifier	logGahpIoSize		3244644	1					
ANR	3245066	CompoundStatement		114:41:2884:2884	3244644	1					
ANR	3245067	BreakStatement	break ;	525:7:13171:13176	3244644	0	True				
ANR	3245068	ExpressionStatement	"debug += ""'"""	528:5:13198:13210	3244644	2	True				
ANR	3245069	AssignmentExpression	"debug += ""'"""		3244644	0		+=			
ANR	3245070	Identifier	debug		3244644	0					
ANR	3245071	PrimaryExpression	"""'"""		3244644	1					
ANR	3245072	IfStatement	if ( logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize )		3244644	4					
ANR	3245073	Condition	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize	530:9:13227:13277	3244644	0	True				
ANR	3245074	AndExpression	logGahpIoSize > 0 && debug . length ( ) > logGahpIoSize		3244644	0		&&			
ANR	3245075	RelationalExpression	logGahpIoSize > 0		3244644	0		>			
ANR	3245076	Identifier	logGahpIoSize		3244644	0					
ANR	3245077	PrimaryExpression	0		3244644	1					
ANR	3245078	RelationalExpression	debug . length ( ) > logGahpIoSize		3244644	1		>			
ANR	3245079	CallExpression	debug . length ( )		3244644	0					
ANR	3245080	Callee	debug . length		3244644	0					
ANR	3245081	MemberAccess	debug . length		3244644	0					
ANR	3245082	Identifier	debug		3244644	0					
ANR	3245083	Identifier	length		3244644	1					
ANR	3245084	ArgumentList			3244644	1					
ANR	3245085	Identifier	logGahpIoSize		3244644	1					
ANR	3245086	CompoundStatement		120:63:3003:3003	3244644	1					
ANR	3245087	ExpressionStatement	"debug . erase ( logGahpIoSize , std :: string :: npos )"	531:5:13288:13335	3244644	0	True				
ANR	3245088	CallExpression	"debug . erase ( logGahpIoSize , std :: string :: npos )"		3244644	0					
ANR	3245089	Callee	debug . erase		3244644	0					
ANR	3245090	MemberAccess	debug . erase		3244644	0					
ANR	3245091	Identifier	debug		3244644	0					
ANR	3245092	Identifier	erase		3244644	1					
ANR	3245093	ArgumentList	logGahpIoSize		3244644	1					
ANR	3245094	Argument	logGahpIoSize		3244644	0					
ANR	3245095	Identifier	logGahpIoSize		3244644	0					
ANR	3245096	Argument	std :: string :: npos		3244644	1					
ANR	3245097	Identifier	std :: string :: npos		3244644	0					
ANR	3245098	ExpressionStatement	"debug += ""..."""	532:5:13342:13356	3244644	1	True				
ANR	3245099	AssignmentExpression	"debug += ""..."""		3244644	0		+=			
ANR	3245100	Identifier	debug		3244644	0					
ANR	3245101	PrimaryExpression	"""..."""		3244644	1					
ANR	3245102	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP[%d] %s-> %s\\n"" , m_gahp_pid , trash_this_line ? ""(unprefixed) "" : """" , debug . c_str ( ) )"	534:4:13368:13493	3244644	5	True				
ANR	3245103	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP[%d] %s-> %s\\n"" , m_gahp_pid , trash_this_line ? ""(unprefixed) "" : """" , debug . c_str ( ) )"		3244644	0					
ANR	3245104	Callee	dprintf		3244644	0					
ANR	3245105	Identifier	dprintf		3244644	0					
ANR	3245106	ArgumentList	D_FULLDEBUG		3244644	1					
ANR	3245107	Argument	D_FULLDEBUG		3244644	0					
ANR	3245108	Identifier	D_FULLDEBUG		3244644	0					
ANR	3245109	Argument	"""GAHP[%d] %s-> %s\\n"""		3244644	1					
ANR	3245110	PrimaryExpression	"""GAHP[%d] %s-> %s\\n"""		3244644	0					
ANR	3245111	Argument	m_gahp_pid		3244644	2					
ANR	3245112	Identifier	m_gahp_pid		3244644	0					
ANR	3245113	Argument	"trash_this_line ? ""(unprefixed) "" : """""		3244644	3					
ANR	3245114	ConditionalExpression	"trash_this_line ? ""(unprefixed) "" : """""		3244644	0					
ANR	3245115	Condition	trash_this_line		3244644	0					
ANR	3245116	Identifier	trash_this_line		3244644	0					
ANR	3245117	PrimaryExpression	"""(unprefixed) """		3244644	1					
ANR	3245118	PrimaryExpression	""""""		3244644	2					
ANR	3245119	Argument	debug . c_str ( )		3244644	4					
ANR	3245120	CallExpression	debug . c_str ( )		3244644	0					
ANR	3245121	Callee	debug . c_str		3244644	0					
ANR	3245122	MemberAccess	debug . c_str		3244644	0					
ANR	3245123	Identifier	debug		3244644	0					
ANR	3245124	Identifier	c_str		3244644	1					
ANR	3245125	ArgumentList			3244644	1					
ANR	3245126	IfStatement	if ( trash_this_line == false && g_args . argc == 1 && g_args . argv [ 0 ] [ 0 ] == 'R' )		3244644	5					
ANR	3245127	Condition	trash_this_line == false && g_args . argc == 1 && g_args . argv [ 0 ] [ 0 ] == 'R'	541:8:13607:13681	3244644	0	True				
ANR	3245128	AndExpression	trash_this_line == false && g_args . argc == 1 && g_args . argv [ 0 ] [ 0 ] == 'R'		3244644	0		&&			
ANR	3245129	EqualityExpression	trash_this_line == false		3244644	0		==			
ANR	3245130	Identifier	trash_this_line		3244644	0					
ANR	3245131	Identifier	false		3244644	1					
ANR	3245132	AndExpression	g_args . argc == 1 && g_args . argv [ 0 ] [ 0 ] == 'R'		3244644	1		&&			
ANR	3245133	EqualityExpression	g_args . argc == 1		3244644	0		==			
ANR	3245134	MemberAccess	g_args . argc		3244644	0					
ANR	3245135	Identifier	g_args		3244644	0					
ANR	3245136	Identifier	argc		3244644	1					
ANR	3245137	PrimaryExpression	1		3244644	1					
ANR	3245138	EqualityExpression	g_args . argv [ 0 ] [ 0 ] == 'R'		3244644	1		==			
ANR	3245139	ArrayIndexing	g_args . argv [ 0 ] [ 0 ]		3244644	0					
ANR	3245140	ArrayIndexing	g_args . argv [ 0 ]		3244644	0					
ANR	3245141	MemberAccess	g_args . argv		3244644	0					
ANR	3245142	Identifier	g_args		3244644	0					
ANR	3245143	Identifier	argv		3244644	1					
ANR	3245144	PrimaryExpression	0		3244644	1					
ANR	3245145	PrimaryExpression	0		3244644	1					
ANR	3245146	PrimaryExpression	'R'		3244644	1					
ANR	3245147	CompoundStatement		132:32:3407:3407	3244644	1					
ANR	3245148	IfStatement	if ( skip_next_r )		3244644	0					
ANR	3245149	Condition	skip_next_r	543:9:13696:13706	3244644	0	True				
ANR	3245150	Identifier	skip_next_r		3244644	0					
ANR	3245151	CompoundStatement		133:23:3432:3432	3244644	1					
ANR	3245152	ExpressionStatement	skip_next_r = false	546:5:13826:13845	3244644	0	True				
ANR	3245153	AssignmentExpression	skip_next_r = false		3244644	0		=			
ANR	3245154	Identifier	skip_next_r		3244644	0					
ANR	3245155	Identifier	false		3244644	1					
ANR	3245156	ElseStatement	else		3244644	0					
ANR	3245157	CompoundStatement		137:11:3580:3580	3244644	0					
ANR	3245158	ExpressionStatement	poll_real_soon ( )	548:5:13865:13881	3244644	0	True				
ANR	3245159	CallExpression	poll_real_soon ( )		3244644	0					
ANR	3245160	Callee	poll_real_soon		3244644	0					
ANR	3245161	Identifier	poll_real_soon		3244644	0					
ANR	3245162	ArgumentList			3244644	1					
ANR	3245163	ExpressionStatement	trash_this_line = true	551:4:13948:13970	3244644	1	True				
ANR	3245164	AssignmentExpression	trash_this_line = true		3244644	0		=			
ANR	3245165	Identifier	trash_this_line		3244644	0					
ANR	3245166	Identifier	true		3244644	1					
ANR	3245167	IfStatement	if ( trash_this_line )		3244644	6					
ANR	3245168	Condition	trash_this_line	554:8:13986:14000	3244644	0	True				
ANR	3245169	Identifier	trash_this_line		3244644	0					
ANR	3245170	CompoundStatement		144:26:3726:3726	3244644	1					
ANR	3245171	ExpressionStatement	g_args . reset ( )	556:4:14062:14076	3244644	0	True				
ANR	3245172	CallExpression	g_args . reset ( )		3244644	0					
ANR	3245173	Callee	g_args . reset		3244644	0					
ANR	3245174	MemberAccess	g_args . reset		3244644	0					
ANR	3245175	Identifier	g_args		3244644	0					
ANR	3245176	Identifier	reset		3244644	1					
ANR	3245177	ArgumentList			3244644	1					
ANR	3245178	ExpressionStatement	ibuf = 0	557:4:14082:14090	3244644	1	True				
ANR	3245179	AssignmentExpression	ibuf = 0		3244644	0		=			
ANR	3245180	Identifier	ibuf		3244644	0					
ANR	3245181	PrimaryExpression	0		3244644	1					
ANR	3245182	ContinueStatement	continue ;	558:4:14096:14104	3244644	2	True				
ANR	3245183	IfStatement	if ( ! m_in_results && buffered_peek ( ) > 0 )		3244644	7					
ANR	3245184	Condition	! m_in_results && buffered_peek ( ) > 0	565:8:14378:14413	3244644	0	True				
ANR	3245185	AndExpression	! m_in_results && buffered_peek ( ) > 0		3244644	0		&&			
ANR	3245186	UnaryOperationExpression	! m_in_results		3244644	0					
ANR	3245187	UnaryOperator	!		3244644	0					
ANR	3245188	Identifier	m_in_results		3244644	1					
ANR	3245189	RelationalExpression	buffered_peek ( ) > 0		3244644	1		>			
ANR	3245190	CallExpression	buffered_peek ( )		3244644	0					
ANR	3245191	Callee	buffered_peek		3244644	0					
ANR	3245192	Identifier	buffered_peek		3244644	0					
ANR	3245193	ArgumentList			3244644	1					
ANR	3245194	PrimaryExpression	0		3244644	1					
ANR	3245195	CompoundStatement		155:47:4139:4139	3244644	1					
ANR	3245196	ExpressionStatement	skip_next_r = true	566:4:14423:14441	3244644	0	True				
ANR	3245197	AssignmentExpression	skip_next_r = true		3244644	0		=			
ANR	3245198	Identifier	skip_next_r		3244644	0					
ANR	3245199	Identifier	true		3244644	1					
ANR	3245200	ExpressionStatement	poll_real_soon ( )	567:4:14447:14463	3244644	1	True				
ANR	3245201	CallExpression	poll_real_soon ( )		3244644	0					
ANR	3245202	Callee	poll_real_soon		3244644	0					
ANR	3245203	Identifier	poll_real_soon		3244644	0					
ANR	3245204	ArgumentList			3244644	1					
ANR	3245205	ReturnStatement	return ;	570:3:14474:14480	3244644	8	True				
ANR	3245206	ExpressionStatement	ibuf ++	575:2:14602:14608	3244644	9	True				
ANR	3245207	PostIncDecOperationExpression	ibuf ++		3244644	0					
ANR	3245208	Identifier	ibuf		3244644	0					
ANR	3245209	IncDec	++		3244644	1					
ANR	3245210	ReturnType	void		3244644	1					
ANR	3245211	Identifier	GahpServer :: read_argv		3244644	2					
ANR	3245212	ParameterList	Gahp_Args & g_args		3244644	3					
ANR	3245213	Parameter	Gahp_Args & g_args	410:22:10258:10274	3244644	0	True				
ANR	3245214	ParameterType	Gahp_Args &		3244644	0					
ANR	3245215	Identifier	g_args		3244644	1					
ANR	3245216	CFGEntryNode	ENTRY		3244644		True				
ANR	3245217	CFGExitNode	EXIT		3244644		True				
ANR	3245218	InfiniteForNode	true		3244644		True				
ANR	3245219	Symbol	debug . length		3244644						
ANR	3245220	Symbol	GAHP_PREFIX_LEN		3244644						
ANR	3245221	Symbol	GAHP_PREFIX		3244644						
ANR	3245222	Symbol	* * g_args . argv		3244644						
ANR	3245223	Symbol	logGahpIoSize		3244644						
ANR	3245224	Symbol	trash_this_line		3244644						
ANR	3245225	Symbol	m_gahp_pid		3244644						
ANR	3245226	Symbol	* g_args		3244644						
ANR	3245227	Symbol	result		3244644						
ANR	3245228	Symbol	strncmp		3244644						
ANR	3245229	Symbol	strlen		3244644						
ANR	3245230	Symbol	std :: string :: npos		3244644						
ANR	3245231	Symbol	buffered_peek		3244644						
ANR	3245232	Symbol	skip_next_r		3244644						
ANR	3245233	Symbol	ibuf		3244644						
ANR	3245234	Symbol	buffered_read		3244644						
ANR	3245235	Symbol	g_args		3244644						
ANR	3245236	Symbol	logGahpIo		3244644						
ANR	3245237	Symbol	* * g_args		3244644						
ANR	3245238	Symbol	malloc		3244644						
ANR	3245239	Symbol	* buf		3244644						
ANR	3245240	Symbol	NULL		3244644						
ANR	3245241	Symbol	use_prefix		3244644						
ANR	3245242	Symbol	debug		3244644						
ANR	3245243	Symbol	buf_size		3244644						
ANR	3245244	Symbol	false		3244644						
ANR	3245245	Symbol	i		3244644						
ANR	3245246	Symbol	D_FULLDEBUG		3244644						
ANR	3245247	Symbol	m_gahp_readfd		3244644						
ANR	3245248	Symbol	g_args . argc		3244644						
ANR	3245249	Symbol	m_in_results		3244644						
ANR	3245250	Symbol	buf		3244644						
ANR	3245251	Symbol	* i		3244644						
ANR	3245252	Symbol	true		3244644						
ANR	3245253	Symbol	* g_args . argv		3244644						
ANR	3245254	Symbol	strdup		3244644						
ANR	3245255	Symbol	g_args . argv		3244644						
ANR	3245256	Symbol	escape_seen		3244644						
ANR	3245257	Symbol	* ibuf		3244644						
ANR	3245258	Symbol	debug . c_str		3244644						
ANR	3245259	Function	GahpServer :: new_reqid	580:0:14648:15356							
ANR	3245260	FunctionDef	GahpServer :: new_reqid ()		3245259	0					
ANR	3245261	CompoundStatement		582:0:14676:15356	3245259	0					
ANR	3245262	IdentifierDeclStatement	int starting_reqid ;	583:1:14679:14697	3245259	0	True				
ANR	3245263	IdentifierDecl	starting_reqid		3245259	0					
ANR	3245264	IdentifierDeclType	int		3245259	0					
ANR	3245265	Identifier	starting_reqid		3245259	1					
ANR	3245266	IdentifierDeclStatement	GahpClient * unused ;	584:1:14700:14718	3245259	1	True				
ANR	3245267	IdentifierDecl	* unused		3245259	0					
ANR	3245268	IdentifierDeclType	GahpClient *		3245259	0					
ANR	3245269	Identifier	unused		3245259	1					
ANR	3245270	ExpressionStatement	starting_reqid = next_reqid	586:1:14722:14750	3245259	2	True				
ANR	3245271	AssignmentExpression	starting_reqid = next_reqid		3245259	0		=			
ANR	3245272	Identifier	starting_reqid		3245259	0					
ANR	3245273	Identifier	next_reqid		3245259	1					
ANR	3245274	ExpressionStatement	next_reqid ++	588:1:14755:14767	3245259	3	True				
ANR	3245275	PostIncDecOperationExpression	next_reqid ++		3245259	0					
ANR	3245276	Identifier	next_reqid		3245259	0					
ANR	3245277	IncDec	++		3245259	1					
ANR	3245278	WhileStatement	while ( starting_reqid != next_reqid )		3245259	4					
ANR	3245279	Condition	starting_reqid != next_reqid	589:8:14777:14804	3245259	0	True				
ANR	3245280	EqualityExpression	starting_reqid != next_reqid		3245259	0		!=			
ANR	3245281	Identifier	starting_reqid		3245259	0					
ANR	3245282	Identifier	next_reqid		3245259	1					
ANR	3245283	CompoundStatement		8:38:130:130	3245259	1					
ANR	3245284	IfStatement	if ( next_reqid > 990000000 )		3245259	0					
ANR	3245285	Condition	next_reqid > 990000000	590:7:14816:14837	3245259	0	True				
ANR	3245286	RelationalExpression	next_reqid > 990000000		3245259	0		>			
ANR	3245287	Identifier	next_reqid		3245259	0					
ANR	3245288	PrimaryExpression	990000000		3245259	1					
ANR	3245289	CompoundStatement		9:32:164:164	3245259	1					
ANR	3245290	ExpressionStatement	next_reqid = 1	591:3:14846:14860	3245259	0	True				
ANR	3245291	AssignmentExpression	next_reqid = 1		3245259	0		=			
ANR	3245292	Identifier	next_reqid		3245259	0					
ANR	3245293	PrimaryExpression	1		3245259	1					
ANR	3245294	ExpressionStatement	rotated_reqids = true	592:3:14865:14886	3245259	1	True				
ANR	3245295	AssignmentExpression	rotated_reqids = true		3245259	0		=			
ANR	3245296	Identifier	rotated_reqids		3245259	0					
ANR	3245297	Identifier	true		3245259	1					
ANR	3245298	IfStatement	"if ( ( ! rotated_reqids ) || ( requestTable -> lookup ( next_reqid , unused ) == - 1 ) )"		3245259	1					
ANR	3245299	Condition	"( ! rotated_reqids ) || ( requestTable -> lookup ( next_reqid , unused ) == - 1 )"	597:7:15039:15111	3245259	0	True				
ANR	3245300	OrExpression	"( ! rotated_reqids ) || ( requestTable -> lookup ( next_reqid , unused ) == - 1 )"		3245259	0		||			
ANR	3245301	UnaryOperationExpression	! rotated_reqids		3245259	0					
ANR	3245302	UnaryOperator	!		3245259	0					
ANR	3245303	Identifier	rotated_reqids		3245259	1					
ANR	3245304	EqualityExpression	"requestTable -> lookup ( next_reqid , unused ) == - 1"		3245259	1		==			
ANR	3245305	CallExpression	"requestTable -> lookup ( next_reqid , unused )"		3245259	0					
ANR	3245306	Callee	requestTable -> lookup		3245259	0					
ANR	3245307	PtrMemberAccess	requestTable -> lookup		3245259	0					
ANR	3245308	Identifier	requestTable		3245259	0					
ANR	3245309	Identifier	lookup		3245259	1					
ANR	3245310	ArgumentList	next_reqid		3245259	1					
ANR	3245311	Argument	next_reqid		3245259	0					
ANR	3245312	Identifier	next_reqid		3245259	0					
ANR	3245313	Argument	unused		3245259	1					
ANR	3245314	Identifier	unused		3245259	0					
ANR	3245315	UnaryOperationExpression	- 1		3245259	1					
ANR	3245316	UnaryOperator	-		3245259	0					
ANR	3245317	PrimaryExpression	1		3245259	1					
ANR	3245318	CompoundStatement		17:54:438:438	3245259	1					
ANR	3245319	ReturnStatement	return next_reqid ;	600:3:15151:15168	3245259	0	True				
ANR	3245320	Identifier	next_reqid		3245259	0					
ANR	3245321	ExpressionStatement	next_reqid ++	602:2:15176:15188	3245259	2	True				
ANR	3245322	PostIncDecOperationExpression	next_reqid ++		3245259	0					
ANR	3245323	Identifier	next_reqid		3245259	0					
ANR	3245324	IncDec	++		3245259	1					
ANR	3245325	ExpressionStatement	"EXCEPT ( ""GAHP client - out of request ids !!!?!?!?"" )"	606:1:15246:15297	3245259	5	True				
ANR	3245326	CallExpression	"EXCEPT ( ""GAHP client - out of request ids !!!?!?!?"" )"		3245259	0					
ANR	3245327	Callee	EXCEPT		3245259	0					
ANR	3245328	Identifier	EXCEPT		3245259	0					
ANR	3245329	ArgumentList	"""GAHP client - out of request ids !!!?!?!?"""		3245259	1					
ANR	3245330	Argument	"""GAHP client - out of request ids !!!?!?!?"""		3245259	0					
ANR	3245331	PrimaryExpression	"""GAHP client - out of request ids !!!?!?!?"""		3245259	0					
ANR	3245332	ReturnStatement	return - 1 ;	608:1:15302:15311	3245259	6	True				
ANR	3245333	UnaryOperationExpression	- 1		3245259	0					
ANR	3245334	UnaryOperator	-		3245259	0					
ANR	3245335	PrimaryExpression	1		3245259	1					
ANR	3245336	ReturnType	int		3245259	1					
ANR	3245337	Identifier	GahpServer :: new_reqid		3245259	2					
ANR	3245338	ParameterList			3245259	3					
ANR	3245339	CFGEntryNode	ENTRY		3245259		True				
ANR	3245340	CFGExitNode	EXIT		3245259		True				
ANR	3245341	Symbol	requestTable -> lookup		3245259						
ANR	3245342	Symbol	rotated_reqids		3245259						
ANR	3245343	Symbol	requestTable		3245259						
ANR	3245344	Symbol	true		3245259						
ANR	3245345	Symbol	unused		3245259						
ANR	3245346	Symbol	* requestTable		3245259						
ANR	3245347	Symbol	starting_reqid		3245259						
ANR	3245348	Symbol	next_reqid		3245259						
ANR	3245349	Function	GahpServer :: AddGahpClient	611:0:15359:15535							
ANR	3245350	FunctionDef	GahpServer :: AddGahpClient ()		3245349	0					
ANR	3245351	CompoundStatement		613:0:15392:15535	3245349	0					
ANR	3245352	ExpressionStatement	m_reference_count ++	614:1:15395:15414	3245349	0	True				
ANR	3245353	PostIncDecOperationExpression	m_reference_count ++		3245349	0					
ANR	3245354	Identifier	m_reference_count		3245349	0					
ANR	3245355	IncDec	++		3245349	1					
ANR	3245356	IfStatement	if ( m_deleteMeTid != TIMER_UNSET )		3245349	1					
ANR	3245357	Condition	m_deleteMeTid != TIMER_UNSET	616:6:15423:15450	3245349	0	True				
ANR	3245358	EqualityExpression	m_deleteMeTid != TIMER_UNSET		3245349	0		!=			
ANR	3245359	Identifier	m_deleteMeTid		3245349	0					
ANR	3245360	Identifier	TIMER_UNSET		3245349	1					
ANR	3245361	CompoundStatement		4:37:61:61	3245349	1					
ANR	3245362	ExpressionStatement	daemonCore -> Cancel_Timer ( m_deleteMeTid )	617:2:15458:15499	3245349	0	True				
ANR	3245363	CallExpression	daemonCore -> Cancel_Timer ( m_deleteMeTid )		3245349	0					
ANR	3245364	Callee	daemonCore -> Cancel_Timer		3245349	0					
ANR	3245365	PtrMemberAccess	daemonCore -> Cancel_Timer		3245349	0					
ANR	3245366	Identifier	daemonCore		3245349	0					
ANR	3245367	Identifier	Cancel_Timer		3245349	1					
ANR	3245368	ArgumentList	m_deleteMeTid		3245349	1					
ANR	3245369	Argument	m_deleteMeTid		3245349	0					
ANR	3245370	Identifier	m_deleteMeTid		3245349	0					
ANR	3245371	ExpressionStatement	m_deleteMeTid = TIMER_UNSET	618:2:15503:15530	3245349	1	True				
ANR	3245372	AssignmentExpression	m_deleteMeTid = TIMER_UNSET		3245349	0		=			
ANR	3245373	Identifier	m_deleteMeTid		3245349	0					
ANR	3245374	Identifier	TIMER_UNSET		3245349	1					
ANR	3245375	ReturnType	void		3245349	1					
ANR	3245376	Identifier	GahpServer :: AddGahpClient		3245349	2					
ANR	3245377	ParameterList			3245349	3					
ANR	3245378	CFGEntryNode	ENTRY		3245349		True				
ANR	3245379	CFGExitNode	EXIT		3245349		True				
ANR	3245380	Symbol	m_reference_count		3245349						
ANR	3245381	Symbol	daemonCore		3245349						
ANR	3245382	Symbol	m_deleteMeTid		3245349						
ANR	3245383	Symbol	TIMER_UNSET		3245349						
ANR	3245384	Function	GahpServer :: RemoveGahpClient	622:0:15538:15783							
ANR	3245385	FunctionDef	GahpServer :: RemoveGahpClient ()		3245384	0					
ANR	3245386	CompoundStatement		624:0:15574:15783	3245384	0					
ANR	3245387	ExpressionStatement	m_reference_count --	625:1:15577:15596	3245384	0	True				
ANR	3245388	PostIncDecOperationExpression	m_reference_count --		3245384	0					
ANR	3245389	Identifier	m_reference_count		3245384	0					
ANR	3245390	IncDec	--		3245384	1					
ANR	3245391	IfStatement	if ( m_reference_count <= 0 )		3245384	1					
ANR	3245392	Condition	m_reference_count <= 0	627:6:15605:15626	3245384	0	True				
ANR	3245393	RelationalExpression	m_reference_count <= 0		3245384	0		<=			
ANR	3245394	Identifier	m_reference_count		3245384	0					
ANR	3245395	PrimaryExpression	0		3245384	1					
ANR	3245396	CompoundStatement		4:31:55:55	3245384	1					
ANR	3245397	ExpressionStatement	"m_deleteMeTid = daemonCore -> Register_Timer ( 30 , ( TimerHandlercpp ) & GahpServer :: DeleteMe , ""GahpServer::DeleteMe"" , ( Service * ) this )"	628:2:15634:15778	3245384	0	True				
ANR	3245398	AssignmentExpression	"m_deleteMeTid = daemonCore -> Register_Timer ( 30 , ( TimerHandlercpp ) & GahpServer :: DeleteMe , ""GahpServer::DeleteMe"" , ( Service * ) this )"		3245384	0		=			
ANR	3245399	Identifier	m_deleteMeTid		3245384	0					
ANR	3245400	CallExpression	"daemonCore -> Register_Timer ( 30 , ( TimerHandlercpp ) & GahpServer :: DeleteMe , ""GahpServer::DeleteMe"" , ( Service * ) this )"		3245384	1					
ANR	3245401	Callee	daemonCore -> Register_Timer		3245384	0					
ANR	3245402	PtrMemberAccess	daemonCore -> Register_Timer		3245384	0					
ANR	3245403	Identifier	daemonCore		3245384	0					
ANR	3245404	Identifier	Register_Timer		3245384	1					
ANR	3245405	ArgumentList	30		3245384	1					
ANR	3245406	Argument	30		3245384	0					
ANR	3245407	PrimaryExpression	30		3245384	0					
ANR	3245408	Argument	( TimerHandlercpp ) & GahpServer :: DeleteMe		3245384	1					
ANR	3245409	CastExpression	( TimerHandlercpp ) & GahpServer :: DeleteMe		3245384	0					
ANR	3245410	CastTarget	TimerHandlercpp		3245384	0					
ANR	3245411	UnaryOperationExpression	& GahpServer :: DeleteMe		3245384	1					
ANR	3245412	UnaryOperator	&		3245384	0					
ANR	3245413	Identifier	GahpServer :: DeleteMe		3245384	1					
ANR	3245414	Argument	"""GahpServer::DeleteMe"""		3245384	2					
ANR	3245415	PrimaryExpression	"""GahpServer::DeleteMe"""		3245384	0					
ANR	3245416	Argument	( Service * ) this		3245384	3					
ANR	3245417	CastExpression	( Service * ) this		3245384	0					
ANR	3245418	CastTarget	Service *		3245384	0					
ANR	3245419	Identifier	this		3245384	1					
ANR	3245420	ReturnType	void		3245384	1					
ANR	3245421	Identifier	GahpServer :: RemoveGahpClient		3245384	2					
ANR	3245422	ParameterList			3245384	3					
ANR	3245423	CFGEntryNode	ENTRY		3245384		True				
ANR	3245424	CFGExitNode	EXIT		3245384		True				
ANR	3245425	Symbol	& GahpServer :: DeleteMe		3245384						
ANR	3245426	Symbol	m_reference_count		3245384						
ANR	3245427	Symbol	* daemonCore		3245384						
ANR	3245428	Symbol	daemonCore		3245384						
ANR	3245429	Symbol	daemonCore -> Register_Timer		3245384						
ANR	3245430	Symbol	this		3245384						
ANR	3245431	Symbol	m_deleteMeTid		3245384						
ANR	3245432	Function	GahpClient :: Startup	634:0:15786:15842							
ANR	3245433	FunctionDef	GahpClient :: Startup ()		3245432	0					
ANR	3245434	CompoundStatement		636:0:15813:15842	3245432	0					
ANR	3245435	ReturnStatement	return server -> Startup ( ) ;	637:1:15816:15840	3245432	0	True				
ANR	3245436	CallExpression	server -> Startup ( )		3245432	0					
ANR	3245437	Callee	server -> Startup		3245432	0					
ANR	3245438	PtrMemberAccess	server -> Startup		3245432	0					
ANR	3245439	Identifier	server		3245432	0					
ANR	3245440	Identifier	Startup		3245432	1					
ANR	3245441	ArgumentList			3245432	1					
ANR	3245442	ReturnType	bool		3245432	1					
ANR	3245443	Identifier	GahpClient :: Startup		3245432	2					
ANR	3245444	ParameterList			3245432	3					
ANR	3245445	CFGEntryNode	ENTRY		3245432		True				
ANR	3245446	CFGExitNode	EXIT		3245432		True				
ANR	3245447	Symbol	server		3245432						
ANR	3245448	Symbol	* server		3245432						
ANR	3245449	Symbol	server -> Startup		3245432						
ANR	3245450	Function	GahpServer :: Startup	640:0:15845:22787							
ANR	3245451	FunctionDef	GahpServer :: Startup ()		3245450	0					
ANR	3245452	CompoundStatement		642:0:15872:22787	3245450	0					
ANR	3245453	IdentifierDeclStatement	char * gahp_path = NULL ;	643:1:15875:15897	3245450	0	True				
ANR	3245454	IdentifierDecl	* gahp_path = NULL		3245450	0					
ANR	3245455	IdentifierDeclType	char *		3245450	0					
ANR	3245456	Identifier	gahp_path		3245450	1					
ANR	3245457	AssignmentExpression	* gahp_path = NULL		3245450	2		=			
ANR	3245458	Identifier	NULL		3245450	0					
ANR	3245459	Identifier	NULL		3245450	1					
ANR	3245460	IdentifierDeclStatement	ArgList gahp_args ;	644:1:15900:15917	3245450	1	True				
ANR	3245461	IdentifierDecl	gahp_args		3245450	0					
ANR	3245462	IdentifierDeclType	ArgList		3245450	0					
ANR	3245463	Identifier	gahp_args		3245450	1					
ANR	3245464	IdentifierDeclStatement	int stdin_pipefds [ 2 ] ;	645:1:15920:15940	3245450	2	True				
ANR	3245465	IdentifierDecl	stdin_pipefds [ 2 ]		3245450	0					
ANR	3245466	IdentifierDeclType	int [ 2 ]		3245450	0					
ANR	3245467	Identifier	stdin_pipefds		3245450	1					
ANR	3245468	PrimaryExpression	2		3245450	2					
ANR	3245469	IdentifierDeclStatement	int stdout_pipefds [ 2 ] ;	646:1:15943:15964	3245450	3	True				
ANR	3245470	IdentifierDecl	stdout_pipefds [ 2 ]		3245450	0					
ANR	3245471	IdentifierDeclType	int [ 2 ]		3245450	0					
ANR	3245472	Identifier	stdout_pipefds		3245450	1					
ANR	3245473	PrimaryExpression	2		3245450	2					
ANR	3245474	IdentifierDeclStatement	int stderr_pipefds [ 2 ] ;	647:1:15967:15988	3245450	4	True				
ANR	3245475	IdentifierDecl	stderr_pipefds [ 2 ]		3245450	0					
ANR	3245476	IdentifierDeclType	int [ 2 ]		3245450	0					
ANR	3245477	Identifier	stderr_pipefds		3245450	1					
ANR	3245478	PrimaryExpression	2		3245450	2					
ANR	3245479	IdentifierDeclStatement	int low_port ;	648:1:15991:16003	3245450	5	True				
ANR	3245480	IdentifierDecl	low_port		3245450	0					
ANR	3245481	IdentifierDeclType	int		3245450	0					
ANR	3245482	Identifier	low_port		3245450	1					
ANR	3245483	IdentifierDeclStatement	int high_port ;	649:1:16006:16019	3245450	6	True				
ANR	3245484	IdentifierDecl	high_port		3245450	0					
ANR	3245485	IdentifierDeclType	int		3245450	0					
ANR	3245486	Identifier	high_port		3245450	1					
ANR	3245487	IdentifierDeclStatement	Env newenv ;	650:1:16022:16032	3245450	7	True				
ANR	3245488	IdentifierDecl	newenv		3245450	0					
ANR	3245489	IdentifierDeclType	Env		3245450	0					
ANR	3245490	Identifier	newenv		3245450	1					
ANR	3245491	IdentifierDeclStatement	char * tmp_char ;	651:1:16035:16049	3245450	8	True				
ANR	3245492	IdentifierDecl	* tmp_char		3245450	0					
ANR	3245493	IdentifierDeclType	char *		3245450	0					
ANR	3245494	Identifier	tmp_char		3245450	1					
ANR	3245495	IfStatement	if ( m_gahp_startup_failed )		3245450	9					
ANR	3245496	Condition	m_gahp_startup_failed	654:6:16113:16133	3245450	0	True				
ANR	3245497	Identifier	m_gahp_startup_failed		3245450	0					
ANR	3245498	CompoundStatement		13:30:264:264	3245450	1					
ANR	3245499	ReturnStatement	return false ;	656:2:16201:16213	3245450	0	True				
ANR	3245500	Identifier	false		3245450	0					
ANR	3245501	ElseStatement	else		3245450	0					
ANR	3245502	IfStatement	if ( m_gahp_pid != - 1 )		3245450	0					
ANR	3245503	Condition	m_gahp_pid != - 1	657:13:16228:16243	3245450	0	True				
ANR	3245504	EqualityExpression	m_gahp_pid != - 1		3245450	0		!=			
ANR	3245505	Identifier	m_gahp_pid		3245450	0					
ANR	3245506	UnaryOperationExpression	- 1		3245450	1					
ANR	3245507	UnaryOperator	-		3245450	0					
ANR	3245508	PrimaryExpression	1		3245450	1					
ANR	3245509	CompoundStatement		16:32:374:374	3245450	1					
ANR	3245510	ReturnStatement	return true ;	659:2:16281:16292	3245450	0	True				
ANR	3245511	Identifier	true		3245450	0					
ANR	3245512	IfStatement	"if ( binary_path && strcmp ( binary_path , GAHPCLIENT_DEFAULT_SERVER_PATH ) != 0 )"		3245450	10					
ANR	3245513	Condition	"binary_path && strcmp ( binary_path , GAHPCLIENT_DEFAULT_SERVER_PATH ) != 0"	664:6:16409:16481	3245450	0	True				
ANR	3245514	AndExpression	"binary_path && strcmp ( binary_path , GAHPCLIENT_DEFAULT_SERVER_PATH ) != 0"		3245450	0		&&			
ANR	3245515	Identifier	binary_path		3245450	0					
ANR	3245516	EqualityExpression	"strcmp ( binary_path , GAHPCLIENT_DEFAULT_SERVER_PATH ) != 0"		3245450	1		!=			
ANR	3245517	CallExpression	"strcmp ( binary_path , GAHPCLIENT_DEFAULT_SERVER_PATH )"		3245450	0					
ANR	3245518	Callee	strcmp		3245450	0					
ANR	3245519	Identifier	strcmp		3245450	0					
ANR	3245520	ArgumentList	binary_path		3245450	1					
ANR	3245521	Argument	binary_path		3245450	0					
ANR	3245522	Identifier	binary_path		3245450	0					
ANR	3245523	Argument	GAHPCLIENT_DEFAULT_SERVER_PATH		3245450	1					
ANR	3245524	Identifier	GAHPCLIENT_DEFAULT_SERVER_PATH		3245450	0					
ANR	3245525	PrimaryExpression	0		3245450	1					
ANR	3245526	CompoundStatement		23:82:612:612	3245450	1					
ANR	3245527	ExpressionStatement	gahp_path = strdup ( binary_path )	665:2:16489:16520	3245450	0	True				
ANR	3245528	AssignmentExpression	gahp_path = strdup ( binary_path )		3245450	0		=			
ANR	3245529	Identifier	gahp_path		3245450	0					
ANR	3245530	CallExpression	strdup ( binary_path )		3245450	1					
ANR	3245531	Callee	strdup		3245450	0					
ANR	3245532	Identifier	strdup		3245450	0					
ANR	3245533	ArgumentList	binary_path		3245450	1					
ANR	3245534	Argument	binary_path		3245450	0					
ANR	3245535	Identifier	binary_path		3245450	0					
ANR	3245536	ExpressionStatement	gahp_args . AppendArgsFromArgList ( binary_args )	666:2:16524:16568	3245450	1	True				
ANR	3245537	CallExpression	gahp_args . AppendArgsFromArgList ( binary_args )		3245450	0					
ANR	3245538	Callee	gahp_args . AppendArgsFromArgList		3245450	0					
ANR	3245539	MemberAccess	gahp_args . AppendArgsFromArgList		3245450	0					
ANR	3245540	Identifier	gahp_args		3245450	0					
ANR	3245541	Identifier	AppendArgsFromArgList		3245450	1					
ANR	3245542	ArgumentList	binary_args		3245450	1					
ANR	3245543	Argument	binary_args		3245450	0					
ANR	3245544	Identifier	binary_args		3245450	0					
ANR	3245545	ElseStatement	else		3245450	0					
ANR	3245546	CompoundStatement		30:2:774:793	3245450	0					
ANR	3245547	ExpressionStatement	"gahp_path = param ( ""GAHP"" )"	668:2:16582:16607	3245450	0	True				
ANR	3245548	AssignmentExpression	"gahp_path = param ( ""GAHP"" )"		3245450	0		=			
ANR	3245549	Identifier	gahp_path		3245450	0					
ANR	3245550	CallExpression	"param ( ""GAHP"" )"		3245450	1					
ANR	3245551	Callee	param		3245450	0					
ANR	3245552	Identifier	param		3245450	0					
ANR	3245553	ArgumentList	"""GAHP"""		3245450	1					
ANR	3245554	Argument	"""GAHP"""		3245450	0					
ANR	3245555	PrimaryExpression	"""GAHP"""		3245450	0					
ANR	3245556	IdentifierDeclStatement	"char * args = param ( ""GAHP_ARGS"" ) ;"	670:2:16612:16643	3245450	1	True				
ANR	3245557	IdentifierDecl	"* args = param ( ""GAHP_ARGS"" )"		3245450	0					
ANR	3245558	IdentifierDeclType	char *		3245450	0					
ANR	3245559	Identifier	args		3245450	1					
ANR	3245560	AssignmentExpression	"* args = param ( ""GAHP_ARGS"" )"		3245450	2		=			
ANR	3245561	Identifier	args		3245450	0					
ANR	3245562	CallExpression	"param ( ""GAHP_ARGS"" )"		3245450	1					
ANR	3245563	Callee	param		3245450	0					
ANR	3245564	Identifier	param		3245450	0					
ANR	3245565	ArgumentList	"""GAHP_ARGS"""		3245450	1					
ANR	3245566	Argument	"""GAHP_ARGS"""		3245450	0					
ANR	3245567	PrimaryExpression	"""GAHP_ARGS"""		3245450	0					
ANR	3245568	IdentifierDeclStatement	MyString args_error ;	671:2:16647:16666	3245450	2	True				
ANR	3245569	IdentifierDecl	args_error		3245450	0					
ANR	3245570	IdentifierDeclType	MyString		3245450	0					
ANR	3245571	Identifier	args_error		3245450	1					
ANR	3245572	IfStatement	"if ( ! gahp_args . AppendArgsV1RawOrV2Quoted ( args , & args_error ) )"		3245450	3					
ANR	3245573	Condition	"! gahp_args . AppendArgsV1RawOrV2Quoted ( args , & args_error )"	672:5:16673:16726	3245450	0	True				
ANR	3245574	UnaryOperationExpression	"! gahp_args . AppendArgsV1RawOrV2Quoted ( args , & args_error )"		3245450	0					
ANR	3245575	UnaryOperator	!		3245450	0					
ANR	3245576	CallExpression	"gahp_args . AppendArgsV1RawOrV2Quoted ( args , & args_error )"		3245450	1					
ANR	3245577	Callee	gahp_args . AppendArgsV1RawOrV2Quoted		3245450	0					
ANR	3245578	MemberAccess	gahp_args . AppendArgsV1RawOrV2Quoted		3245450	0					
ANR	3245579	Identifier	gahp_args		3245450	0					
ANR	3245580	Identifier	AppendArgsV1RawOrV2Quoted		3245450	1					
ANR	3245581	ArgumentList	args		3245450	1					
ANR	3245582	Argument	args		3245450	0					
ANR	3245583	Identifier	args		3245450	0					
ANR	3245584	Argument	& args_error		3245450	1					
ANR	3245585	UnaryOperationExpression	& args_error		3245450	0					
ANR	3245586	UnaryOperator	&		3245450	0					
ANR	3245587	Identifier	args_error		3245450	1					
ANR	3245588	CompoundStatement		31:61:856:856	3245450	1					
ANR	3245589	ExpressionStatement	"EXCEPT ( ""Failed to parse arguments: %s"" , args_error . Value ( ) )"	673:3:16734:16792	3245450	0	True				
ANR	3245590	CallExpression	"EXCEPT ( ""Failed to parse arguments: %s"" , args_error . Value ( ) )"		3245450	0					
ANR	3245591	Callee	EXCEPT		3245450	0					
ANR	3245592	Identifier	EXCEPT		3245450	0					
ANR	3245593	ArgumentList	"""Failed to parse arguments: %s"""		3245450	1					
ANR	3245594	Argument	"""Failed to parse arguments: %s"""		3245450	0					
ANR	3245595	PrimaryExpression	"""Failed to parse arguments: %s"""		3245450	0					
ANR	3245596	Argument	args_error . Value ( )		3245450	1					
ANR	3245597	CallExpression	args_error . Value ( )		3245450	0					
ANR	3245598	Callee	args_error . Value		3245450	0					
ANR	3245599	MemberAccess	args_error . Value		3245450	0					
ANR	3245600	Identifier	args_error		3245450	0					
ANR	3245601	Identifier	Value		3245450	1					
ANR	3245602	ArgumentList			3245450	1					
ANR	3245603	ExpressionStatement	free ( args )	675:2:16800:16810	3245450	4	True				
ANR	3245604	CallExpression	free ( args )		3245450	0					
ANR	3245605	Callee	free		3245450	0					
ANR	3245606	Identifier	free		3245450	0					
ANR	3245607	ArgumentList	args		3245450	1					
ANR	3245608	Argument	args		3245450	0					
ANR	3245609	Identifier	args		3245450	0					
ANR	3245610	IfStatement	if ( ! gahp_path )		3245450	11					
ANR	3245611	Condition	! gahp_path	678:5:16821:16830	3245450	0	True				
ANR	3245612	UnaryOperationExpression	! gahp_path		3245450	0					
ANR	3245613	UnaryOperator	!		3245450	0					
ANR	3245614	Identifier	gahp_path		3245450	1					
ANR	3245615	ReturnStatement	return false ;	678:17:16833:16845	3245450	1	True				
ANR	3245616	Identifier	false		3245450	0					
ANR	3245617	ExpressionStatement	"gahp_args . InsertArg ( gahp_path , 0 )"	681:1:16905:16939	3245450	12	True				
ANR	3245618	CallExpression	"gahp_args . InsertArg ( gahp_path , 0 )"		3245450	0					
ANR	3245619	Callee	gahp_args . InsertArg		3245450	0					
ANR	3245620	MemberAccess	gahp_args . InsertArg		3245450	0					
ANR	3245621	Identifier	gahp_args		3245450	0					
ANR	3245622	Identifier	InsertArg		3245450	1					
ANR	3245623	ArgumentList	gahp_path		3245450	1					
ANR	3245624	Argument	gahp_path		3245450	0					
ANR	3245625	Identifier	gahp_path		3245450	0					
ANR	3245626	Argument	0		3245450	1					
ANR	3245627	PrimaryExpression	0		3245450	0					
ANR	3245628	ExpressionStatement	"newenv . SetEnv ( ""GAHP_TEMP"" , GridmanagerScratchDir )"	683:1:16943:16994	3245450	13	True				
ANR	3245629	CallExpression	"newenv . SetEnv ( ""GAHP_TEMP"" , GridmanagerScratchDir )"		3245450	0					
ANR	3245630	Callee	newenv . SetEnv		3245450	0					
ANR	3245631	MemberAccess	newenv . SetEnv		3245450	0					
ANR	3245632	Identifier	newenv		3245450	0					
ANR	3245633	Identifier	SetEnv		3245450	1					
ANR	3245634	ArgumentList	"""GAHP_TEMP"""		3245450	1					
ANR	3245635	Argument	"""GAHP_TEMP"""		3245450	0					
ANR	3245636	PrimaryExpression	"""GAHP_TEMP"""		3245450	0					
ANR	3245637	Argument	GridmanagerScratchDir		3245450	1					
ANR	3245638	Identifier	GridmanagerScratchDir		3245450	0					
ANR	3245639	IfStatement	"if ( get_port_range ( FALSE , & low_port , & high_port ) == TRUE )"		3245450	14					
ANR	3245640	Condition	"get_port_range ( FALSE , & low_port , & high_port ) == TRUE"	694:6:17330:17383	3245450	0	True				
ANR	3245641	EqualityExpression	"get_port_range ( FALSE , & low_port , & high_port ) == TRUE"		3245450	0		==			
ANR	3245642	CallExpression	"get_port_range ( FALSE , & low_port , & high_port )"		3245450	0					
ANR	3245643	Callee	get_port_range		3245450	0					
ANR	3245644	Identifier	get_port_range		3245450	0					
ANR	3245645	ArgumentList	FALSE		3245450	1					
ANR	3245646	Argument	FALSE		3245450	0					
ANR	3245647	Identifier	FALSE		3245450	0					
ANR	3245648	Argument	& low_port		3245450	1					
ANR	3245649	UnaryOperationExpression	& low_port		3245450	0					
ANR	3245650	UnaryOperator	&		3245450	0					
ANR	3245651	Identifier	low_port		3245450	1					
ANR	3245652	Argument	& high_port		3245450	2					
ANR	3245653	UnaryOperationExpression	& high_port		3245450	0					
ANR	3245654	UnaryOperator	&		3245450	0					
ANR	3245655	Identifier	high_port		3245450	1					
ANR	3245656	Identifier	TRUE		3245450	1					
ANR	3245657	CompoundStatement		54:2:1518:1534	3245450	1					
ANR	3245658	IdentifierDeclStatement	std :: string buff ;	695:2:17391:17407	3245450	0	True				
ANR	3245659	IdentifierDecl	buff		3245450	0					
ANR	3245660	IdentifierDeclType	std :: string		3245450	0					
ANR	3245661	Identifier	buff		3245450	1					
ANR	3245662	ExpressionStatement	"sprintf ( buff , ""%d,%d"" , low_port , high_port )"	696:2:17411:17456	3245450	1	True				
ANR	3245663	CallExpression	"sprintf ( buff , ""%d,%d"" , low_port , high_port )"		3245450	0					
ANR	3245664	Callee	sprintf		3245450	0					
ANR	3245665	Identifier	sprintf		3245450	0					
ANR	3245666	ArgumentList	buff		3245450	1					
ANR	3245667	Argument	buff		3245450	0					
ANR	3245668	Identifier	buff		3245450	0					
ANR	3245669	Argument	"""%d,%d"""		3245450	1					
ANR	3245670	PrimaryExpression	"""%d,%d"""		3245450	0					
ANR	3245671	Argument	low_port		3245450	2					
ANR	3245672	Identifier	low_port		3245450	0					
ANR	3245673	Argument	high_port		3245450	3					
ANR	3245674	Identifier	high_port		3245450	0					
ANR	3245675	ExpressionStatement	"newenv . SetEnv ( ""GLOBUS_TCP_PORT_RANGE"" , buff . c_str ( ) )"	697:2:17460:17514	3245450	2	True				
ANR	3245676	CallExpression	"newenv . SetEnv ( ""GLOBUS_TCP_PORT_RANGE"" , buff . c_str ( ) )"		3245450	0					
ANR	3245677	Callee	newenv . SetEnv		3245450	0					
ANR	3245678	MemberAccess	newenv . SetEnv		3245450	0					
ANR	3245679	Identifier	newenv		3245450	0					
ANR	3245680	Identifier	SetEnv		3245450	1					
ANR	3245681	ArgumentList	"""GLOBUS_TCP_PORT_RANGE"""		3245450	1					
ANR	3245682	Argument	"""GLOBUS_TCP_PORT_RANGE"""		3245450	0					
ANR	3245683	PrimaryExpression	"""GLOBUS_TCP_PORT_RANGE"""		3245450	0					
ANR	3245684	Argument	buff . c_str ( )		3245450	1					
ANR	3245685	CallExpression	buff . c_str ( )		3245450	0					
ANR	3245686	Callee	buff . c_str		3245450	0					
ANR	3245687	MemberAccess	buff . c_str		3245450	0					
ANR	3245688	Identifier	buff		3245450	0					
ANR	3245689	Identifier	c_str		3245450	1					
ANR	3245690	ArgumentList			3245450	1					
ANR	3245691	IfStatement	"if ( get_port_range ( TRUE , & low_port , & high_port ) == TRUE )"		3245450	15					
ANR	3245692	Condition	"get_port_range ( TRUE , & low_port , & high_port ) == TRUE"	699:6:17525:17577	3245450	0	True				
ANR	3245693	EqualityExpression	"get_port_range ( TRUE , & low_port , & high_port ) == TRUE"		3245450	0		==			
ANR	3245694	CallExpression	"get_port_range ( TRUE , & low_port , & high_port )"		3245450	0					
ANR	3245695	Callee	get_port_range		3245450	0					
ANR	3245696	Identifier	get_port_range		3245450	0					
ANR	3245697	ArgumentList	TRUE		3245450	1					
ANR	3245698	Argument	TRUE		3245450	0					
ANR	3245699	Identifier	TRUE		3245450	0					
ANR	3245700	Argument	& low_port		3245450	1					
ANR	3245701	UnaryOperationExpression	& low_port		3245450	0					
ANR	3245702	UnaryOperator	&		3245450	0					
ANR	3245703	Identifier	low_port		3245450	1					
ANR	3245704	Argument	& high_port		3245450	2					
ANR	3245705	UnaryOperationExpression	& high_port		3245450	0					
ANR	3245706	UnaryOperator	&		3245450	0					
ANR	3245707	Identifier	high_port		3245450	1					
ANR	3245708	Identifier	TRUE		3245450	1					
ANR	3245709	CompoundStatement		59:2:1712:1728	3245450	1					
ANR	3245710	IdentifierDeclStatement	std :: string buff ;	700:2:17585:17601	3245450	0	True				
ANR	3245711	IdentifierDecl	buff		3245450	0					
ANR	3245712	IdentifierDeclType	std :: string		3245450	0					
ANR	3245713	Identifier	buff		3245450	1					
ANR	3245714	ExpressionStatement	"sprintf ( buff , ""%d,%d"" , low_port , high_port )"	701:2:17605:17650	3245450	1	True				
ANR	3245715	CallExpression	"sprintf ( buff , ""%d,%d"" , low_port , high_port )"		3245450	0					
ANR	3245716	Callee	sprintf		3245450	0					
ANR	3245717	Identifier	sprintf		3245450	0					
ANR	3245718	ArgumentList	buff		3245450	1					
ANR	3245719	Argument	buff		3245450	0					
ANR	3245720	Identifier	buff		3245450	0					
ANR	3245721	Argument	"""%d,%d"""		3245450	1					
ANR	3245722	PrimaryExpression	"""%d,%d"""		3245450	0					
ANR	3245723	Argument	low_port		3245450	2					
ANR	3245724	Identifier	low_port		3245450	0					
ANR	3245725	Argument	high_port		3245450	3					
ANR	3245726	Identifier	high_port		3245450	0					
ANR	3245727	ExpressionStatement	"newenv . SetEnv ( ""GLOBUS_TCP_SOURCE_RANGE"" , buff . c_str ( ) )"	702:2:17654:17710	3245450	2	True				
ANR	3245728	CallExpression	"newenv . SetEnv ( ""GLOBUS_TCP_SOURCE_RANGE"" , buff . c_str ( ) )"		3245450	0					
ANR	3245729	Callee	newenv . SetEnv		3245450	0					
ANR	3245730	MemberAccess	newenv . SetEnv		3245450	0					
ANR	3245731	Identifier	newenv		3245450	0					
ANR	3245732	Identifier	SetEnv		3245450	1					
ANR	3245733	ArgumentList	"""GLOBUS_TCP_SOURCE_RANGE"""		3245450	1					
ANR	3245734	Argument	"""GLOBUS_TCP_SOURCE_RANGE"""		3245450	0					
ANR	3245735	PrimaryExpression	"""GLOBUS_TCP_SOURCE_RANGE"""		3245450	0					
ANR	3245736	Argument	buff . c_str ( )		3245450	1					
ANR	3245737	CallExpression	buff . c_str ( )		3245450	0					
ANR	3245738	Callee	buff . c_str		3245450	0					
ANR	3245739	MemberAccess	buff . c_str		3245450	0					
ANR	3245740	Identifier	buff		3245450	0					
ANR	3245741	Identifier	c_str		3245450	1					
ANR	3245742	ArgumentList			3245450	1					
ANR	3245743	ExpressionStatement	"tmp_char = param ( ""GLITE_LOCATION"" )"	706:1:17767:17801	3245450	16	True				
ANR	3245744	AssignmentExpression	"tmp_char = param ( ""GLITE_LOCATION"" )"		3245450	0		=			
ANR	3245745	Identifier	tmp_char		3245450	0					
ANR	3245746	CallExpression	"param ( ""GLITE_LOCATION"" )"		3245450	1					
ANR	3245747	Callee	param		3245450	0					
ANR	3245748	Identifier	param		3245450	0					
ANR	3245749	ArgumentList	"""GLITE_LOCATION"""		3245450	1					
ANR	3245750	Argument	"""GLITE_LOCATION"""		3245450	0					
ANR	3245751	PrimaryExpression	"""GLITE_LOCATION"""		3245450	0					
ANR	3245752	IfStatement	if ( tmp_char )		3245450	17					
ANR	3245753	Condition	tmp_char	707:6:17809:17816	3245450	0	True				
ANR	3245754	Identifier	tmp_char		3245450	0					
ANR	3245755	CompoundStatement		66:17:1947:1947	3245450	1					
ANR	3245756	ExpressionStatement	"newenv . SetEnv ( ""GLITE_LOCATION"" , tmp_char )"	708:2:17824:17867	3245450	0	True				
ANR	3245757	CallExpression	"newenv . SetEnv ( ""GLITE_LOCATION"" , tmp_char )"		3245450	0					
ANR	3245758	Callee	newenv . SetEnv		3245450	0					
ANR	3245759	MemberAccess	newenv . SetEnv		3245450	0					
ANR	3245760	Identifier	newenv		3245450	0					
ANR	3245761	Identifier	SetEnv		3245450	1					
ANR	3245762	ArgumentList	"""GLITE_LOCATION"""		3245450	1					
ANR	3245763	Argument	"""GLITE_LOCATION"""		3245450	0					
ANR	3245764	PrimaryExpression	"""GLITE_LOCATION"""		3245450	0					
ANR	3245765	Argument	tmp_char		3245450	1					
ANR	3245766	Identifier	tmp_char		3245450	0					
ANR	3245767	ExpressionStatement	free ( tmp_char )	709:2:17871:17887	3245450	1	True				
ANR	3245768	CallExpression	free ( tmp_char )		3245450	0					
ANR	3245769	Callee	free		3245450	0					
ANR	3245770	Identifier	free		3245450	0					
ANR	3245771	ArgumentList	tmp_char		3245450	1					
ANR	3245772	Argument	tmp_char		3245450	0					
ANR	3245773	Identifier	tmp_char		3245450	0					
ANR	3245774	ExpressionStatement	"tmp_char = param ( ""SOAP_SSL_CA_FILE"" )"	713:1:17931:17967	3245450	18	True				
ANR	3245775	AssignmentExpression	"tmp_char = param ( ""SOAP_SSL_CA_FILE"" )"		3245450	0		=			
ANR	3245776	Identifier	tmp_char		3245450	0					
ANR	3245777	CallExpression	"param ( ""SOAP_SSL_CA_FILE"" )"		3245450	1					
ANR	3245778	Callee	param		3245450	0					
ANR	3245779	Identifier	param		3245450	0					
ANR	3245780	ArgumentList	"""SOAP_SSL_CA_FILE"""		3245450	1					
ANR	3245781	Argument	"""SOAP_SSL_CA_FILE"""		3245450	0					
ANR	3245782	PrimaryExpression	"""SOAP_SSL_CA_FILE"""		3245450	0					
ANR	3245783	IfStatement	if ( tmp_char )		3245450	19					
ANR	3245784	Condition	tmp_char	714:5:17974:17981	3245450	0	True				
ANR	3245785	Identifier	tmp_char		3245450	0					
ANR	3245786	CompoundStatement		73:16:2112:2112	3245450	1					
ANR	3245787	ExpressionStatement	"newenv . SetEnv ( ""SOAP_SSL_CA_FILE"" , tmp_char )"	715:2:17989:18034	3245450	0	True				
ANR	3245788	CallExpression	"newenv . SetEnv ( ""SOAP_SSL_CA_FILE"" , tmp_char )"		3245450	0					
ANR	3245789	Callee	newenv . SetEnv		3245450	0					
ANR	3245790	MemberAccess	newenv . SetEnv		3245450	0					
ANR	3245791	Identifier	newenv		3245450	0					
ANR	3245792	Identifier	SetEnv		3245450	1					
ANR	3245793	ArgumentList	"""SOAP_SSL_CA_FILE"""		3245450	1					
ANR	3245794	Argument	"""SOAP_SSL_CA_FILE"""		3245450	0					
ANR	3245795	PrimaryExpression	"""SOAP_SSL_CA_FILE"""		3245450	0					
ANR	3245796	Argument	tmp_char		3245450	1					
ANR	3245797	Identifier	tmp_char		3245450	0					
ANR	3245798	ExpressionStatement	free ( tmp_char )	716:2:18038:18054	3245450	1	True				
ANR	3245799	CallExpression	free ( tmp_char )		3245450	0					
ANR	3245800	Callee	free		3245450	0					
ANR	3245801	Identifier	free		3245450	0					
ANR	3245802	ArgumentList	tmp_char		3245450	1					
ANR	3245803	Argument	tmp_char		3245450	0					
ANR	3245804	Identifier	tmp_char		3245450	0					
ANR	3245805	ExpressionStatement	"tmp_char = param ( ""SOAP_SSL_CA_DIR"" )"	720:1:18098:18133	3245450	20	True				
ANR	3245806	AssignmentExpression	"tmp_char = param ( ""SOAP_SSL_CA_DIR"" )"		3245450	0		=			
ANR	3245807	Identifier	tmp_char		3245450	0					
ANR	3245808	CallExpression	"param ( ""SOAP_SSL_CA_DIR"" )"		3245450	1					
ANR	3245809	Callee	param		3245450	0					
ANR	3245810	Identifier	param		3245450	0					
ANR	3245811	ArgumentList	"""SOAP_SSL_CA_DIR"""		3245450	1					
ANR	3245812	Argument	"""SOAP_SSL_CA_DIR"""		3245450	0					
ANR	3245813	PrimaryExpression	"""SOAP_SSL_CA_DIR"""		3245450	0					
ANR	3245814	IfStatement	if ( tmp_char )		3245450	21					
ANR	3245815	Condition	tmp_char	721:5:18140:18147	3245450	0	True				
ANR	3245816	Identifier	tmp_char		3245450	0					
ANR	3245817	CompoundStatement		80:16:2278:2278	3245450	1					
ANR	3245818	ExpressionStatement	"newenv . SetEnv ( ""SOAP_SSL_CA_DIR"" , tmp_char )"	722:2:18155:18199	3245450	0	True				
ANR	3245819	CallExpression	"newenv . SetEnv ( ""SOAP_SSL_CA_DIR"" , tmp_char )"		3245450	0					
ANR	3245820	Callee	newenv . SetEnv		3245450	0					
ANR	3245821	MemberAccess	newenv . SetEnv		3245450	0					
ANR	3245822	Identifier	newenv		3245450	0					
ANR	3245823	Identifier	SetEnv		3245450	1					
ANR	3245824	ArgumentList	"""SOAP_SSL_CA_DIR"""		3245450	1					
ANR	3245825	Argument	"""SOAP_SSL_CA_DIR"""		3245450	0					
ANR	3245826	PrimaryExpression	"""SOAP_SSL_CA_DIR"""		3245450	0					
ANR	3245827	Argument	tmp_char		3245450	1					
ANR	3245828	Identifier	tmp_char		3245450	0					
ANR	3245829	ExpressionStatement	free ( tmp_char )	723:2:18203:18219	3245450	1	True				
ANR	3245830	CallExpression	free ( tmp_char )		3245450	0					
ANR	3245831	Callee	free		3245450	0					
ANR	3245832	Identifier	free		3245450	0					
ANR	3245833	ArgumentList	tmp_char		3245450	1					
ANR	3245834	Argument	tmp_char		3245450	0					
ANR	3245835	Identifier	tmp_char		3245450	0					
ANR	3245836	IfStatement	"if ( param_boolean ( ""SOAP_SSL_SKIP_HOST_CHECK"" , false ) )"		3245450	22					
ANR	3245837	Condition	"param_boolean ( ""SOAP_SSL_SKIP_HOST_CHECK"" , false )"	727:6:18268:18317	3245450	0	True				
ANR	3245838	CallExpression	"param_boolean ( ""SOAP_SSL_SKIP_HOST_CHECK"" , false )"		3245450	0					
ANR	3245839	Callee	param_boolean		3245450	0					
ANR	3245840	Identifier	param_boolean		3245450	0					
ANR	3245841	ArgumentList	"""SOAP_SSL_SKIP_HOST_CHECK"""		3245450	1					
ANR	3245842	Argument	"""SOAP_SSL_SKIP_HOST_CHECK"""		3245450	0					
ANR	3245843	PrimaryExpression	"""SOAP_SSL_SKIP_HOST_CHECK"""		3245450	0					
ANR	3245844	Argument	false		3245450	1					
ANR	3245845	Identifier	false		3245450	0					
ANR	3245846	CompoundStatement		86:59:2448:2448	3245450	1					
ANR	3245847	ExpressionStatement	"newenv . SetEnv ( ""SOAP_SSL_SKIP_HOST_CHECK"" , ""True"" )"	728:2:18325:18376	3245450	0	True				
ANR	3245848	CallExpression	"newenv . SetEnv ( ""SOAP_SSL_SKIP_HOST_CHECK"" , ""True"" )"		3245450	0					
ANR	3245849	Callee	newenv . SetEnv		3245450	0					
ANR	3245850	MemberAccess	newenv . SetEnv		3245450	0					
ANR	3245851	Identifier	newenv		3245450	0					
ANR	3245852	Identifier	SetEnv		3245450	1					
ANR	3245853	ArgumentList	"""SOAP_SSL_SKIP_HOST_CHECK"""		3245450	1					
ANR	3245854	Argument	"""SOAP_SSL_SKIP_HOST_CHECK"""		3245450	0					
ANR	3245855	PrimaryExpression	"""SOAP_SSL_SKIP_HOST_CHECK"""		3245450	0					
ANR	3245856	Argument	"""True"""		3245450	1					
ANR	3245857	PrimaryExpression	"""True"""		3245450	0					
ANR	3245858	IfStatement	if ( m_reaperid == - 1 )		3245450	23					
ANR	3245859	Condition	m_reaperid == - 1	735:6:18585:18600	3245450	0	True				
ANR	3245860	EqualityExpression	m_reaperid == - 1		3245450	0		==			
ANR	3245861	Identifier	m_reaperid		3245450	0					
ANR	3245862	UnaryOperationExpression	- 1		3245450	1					
ANR	3245863	UnaryOperator	-		3245450	0					
ANR	3245864	PrimaryExpression	1		3245450	1					
ANR	3245865	CompoundStatement		94:25:2731:2731	3245450	1					
ANR	3245866	ExpressionStatement	"m_reaperid = daemonCore -> Register_Reaper ( ""GAHP Server"" , ( ReaperHandler ) & GahpServer :: Reaper , ""GahpServer::Reaper"" , NULL )"	736:2:18608:18765	3245450	0	True				
ANR	3245867	AssignmentExpression	"m_reaperid = daemonCore -> Register_Reaper ( ""GAHP Server"" , ( ReaperHandler ) & GahpServer :: Reaper , ""GahpServer::Reaper"" , NULL )"		3245450	0		=			
ANR	3245868	Identifier	m_reaperid		3245450	0					
ANR	3245869	CallExpression	"daemonCore -> Register_Reaper ( ""GAHP Server"" , ( ReaperHandler ) & GahpServer :: Reaper , ""GahpServer::Reaper"" , NULL )"		3245450	1					
ANR	3245870	Callee	daemonCore -> Register_Reaper		3245450	0					
ANR	3245871	PtrMemberAccess	daemonCore -> Register_Reaper		3245450	0					
ANR	3245872	Identifier	daemonCore		3245450	0					
ANR	3245873	Identifier	Register_Reaper		3245450	1					
ANR	3245874	ArgumentList	"""GAHP Server"""		3245450	1					
ANR	3245875	Argument	"""GAHP Server"""		3245450	0					
ANR	3245876	PrimaryExpression	"""GAHP Server"""		3245450	0					
ANR	3245877	Argument	( ReaperHandler ) & GahpServer :: Reaper		3245450	1					
ANR	3245878	CastExpression	( ReaperHandler ) & GahpServer :: Reaper		3245450	0					
ANR	3245879	CastTarget	ReaperHandler		3245450	0					
ANR	3245880	UnaryOperationExpression	& GahpServer :: Reaper		3245450	1					
ANR	3245881	UnaryOperator	&		3245450	0					
ANR	3245882	Identifier	GahpServer :: Reaper		3245450	1					
ANR	3245883	Argument	"""GahpServer::Reaper"""		3245450	2					
ANR	3245884	PrimaryExpression	"""GahpServer::Reaper"""		3245450	0					
ANR	3245885	Argument	NULL		3245450	3					
ANR	3245886	Identifier	NULL		3245450	0					
ANR	3245887	IdentifierDeclStatement	bool is_c_gahp = false ;	750:1:19049:19071	3245450	24	True				
ANR	3245888	IdentifierDecl	is_c_gahp = false		3245450	0					
ANR	3245889	IdentifierDeclType	bool		3245450	0					
ANR	3245890	Identifier	is_c_gahp		3245450	1					
ANR	3245891	AssignmentExpression	is_c_gahp = false		3245450	2		=			
ANR	3245892	Identifier	false		3245450	0					
ANR	3245893	Identifier	false		3245450	1					
ANR	3245894	IfStatement	"if ( strncmp ( my_id , ""CONDOR/"" , 7 ) == 0 )"		3245450	25					
ANR	3245895	Condition	"strncmp ( my_id , ""CONDOR/"" , 7 ) == 0"	751:5:19078:19110	3245450	0	True				
ANR	3245896	EqualityExpression	"strncmp ( my_id , ""CONDOR/"" , 7 ) == 0"		3245450	0		==			
ANR	3245897	CallExpression	"strncmp ( my_id , ""CONDOR/"" , 7 )"		3245450	0					
ANR	3245898	Callee	strncmp		3245450	0					
ANR	3245899	Identifier	strncmp		3245450	0					
ANR	3245900	ArgumentList	my_id		3245450	1					
ANR	3245901	Argument	my_id		3245450	0					
ANR	3245902	Identifier	my_id		3245450	0					
ANR	3245903	Argument	"""CONDOR/"""		3245450	1					
ANR	3245904	PrimaryExpression	"""CONDOR/"""		3245450	0					
ANR	3245905	Argument	7		3245450	2					
ANR	3245906	PrimaryExpression	7		3245450	0					
ANR	3245907	PrimaryExpression	0		3245450	1					
ANR	3245908	CompoundStatement		110:40:3240:3240	3245450	1					
ANR	3245909	ExpressionStatement	is_c_gahp = true	752:2:19117:19133	3245450	0	True				
ANR	3245910	AssignmentExpression	is_c_gahp = true		3245450	0		=			
ANR	3245911	Identifier	is_c_gahp		3245450	0					
ANR	3245912	Identifier	true		3245450	1					
ANR	3245913	IfStatement	"if ( ( daemonCore -> Create_Pipe ( stdin_pipefds , is_c_gahp ) == FALSE ) || ( daemonCore -> Create_Pipe ( stdout_pipefds , true , false , true ) == FALSE ) || ( daemonCore -> Create_Pipe ( stderr_pipefds , true , false , true ) == FALSE ) )"		3245450	26					
ANR	3245914	Condition	"( daemonCore -> Create_Pipe ( stdin_pipefds , is_c_gahp ) == FALSE ) || ( daemonCore -> Create_Pipe ( stdout_pipefds , true , false , true ) == FALSE ) || ( daemonCore -> Create_Pipe ( stderr_pipefds , true , false , true ) == FALSE )"	755:6:19145:19362	3245450	0	True				
ANR	3245915	OrExpression	"( daemonCore -> Create_Pipe ( stdin_pipefds , is_c_gahp ) == FALSE ) || ( daemonCore -> Create_Pipe ( stdout_pipefds , true , false , true ) == FALSE ) || ( daemonCore -> Create_Pipe ( stderr_pipefds , true , false , true ) == FALSE )"		3245450	0		||			
ANR	3245916	EqualityExpression	"daemonCore -> Create_Pipe ( stdin_pipefds , is_c_gahp ) == FALSE"		3245450	0		==			
ANR	3245917	CallExpression	"daemonCore -> Create_Pipe ( stdin_pipefds , is_c_gahp )"		3245450	0					
ANR	3245918	Callee	daemonCore -> Create_Pipe		3245450	0					
ANR	3245919	PtrMemberAccess	daemonCore -> Create_Pipe		3245450	0					
ANR	3245920	Identifier	daemonCore		3245450	0					
ANR	3245921	Identifier	Create_Pipe		3245450	1					
ANR	3245922	ArgumentList	stdin_pipefds		3245450	1					
ANR	3245923	Argument	stdin_pipefds		3245450	0					
ANR	3245924	Identifier	stdin_pipefds		3245450	0					
ANR	3245925	Argument	is_c_gahp		3245450	1					
ANR	3245926	Identifier	is_c_gahp		3245450	0					
ANR	3245927	Identifier	FALSE		3245450	1					
ANR	3245928	OrExpression	"( daemonCore -> Create_Pipe ( stdout_pipefds , true , false , true ) == FALSE ) || ( daemonCore -> Create_Pipe ( stderr_pipefds , true , false , true ) == FALSE )"		3245450	1		||			
ANR	3245929	EqualityExpression	"daemonCore -> Create_Pipe ( stdout_pipefds , true , false , true ) == FALSE"		3245450	0		==			
ANR	3245930	CallExpression	"daemonCore -> Create_Pipe ( stdout_pipefds , true , false , true )"		3245450	0					
ANR	3245931	Callee	daemonCore -> Create_Pipe		3245450	0					
ANR	3245932	PtrMemberAccess	daemonCore -> Create_Pipe		3245450	0					
ANR	3245933	Identifier	daemonCore		3245450	0					
ANR	3245934	Identifier	Create_Pipe		3245450	1					
ANR	3245935	ArgumentList	stdout_pipefds		3245450	1					
ANR	3245936	Argument	stdout_pipefds		3245450	0					
ANR	3245937	Identifier	stdout_pipefds		3245450	0					
ANR	3245938	Argument	true		3245450	1					
ANR	3245939	Identifier	true		3245450	0					
ANR	3245940	Argument	false		3245450	2					
ANR	3245941	Identifier	false		3245450	0					
ANR	3245942	Argument	true		3245450	3					
ANR	3245943	Identifier	true		3245450	0					
ANR	3245944	Identifier	FALSE		3245450	1					
ANR	3245945	EqualityExpression	"daemonCore -> Create_Pipe ( stderr_pipefds , true , false , true ) == FALSE"		3245450	1		==			
ANR	3245946	CallExpression	"daemonCore -> Create_Pipe ( stderr_pipefds , true , false , true )"		3245450	0					
ANR	3245947	Callee	daemonCore -> Create_Pipe		3245450	0					
ANR	3245948	PtrMemberAccess	daemonCore -> Create_Pipe		3245450	0					
ANR	3245949	Identifier	daemonCore		3245450	0					
ANR	3245950	Identifier	Create_Pipe		3245450	1					
ANR	3245951	ArgumentList	stderr_pipefds		3245450	1					
ANR	3245952	Argument	stderr_pipefds		3245450	0					
ANR	3245953	Identifier	stderr_pipefds		3245450	0					
ANR	3245954	Argument	true		3245450	1					
ANR	3245955	Identifier	true		3245450	0					
ANR	3245956	Argument	false		3245450	2					
ANR	3245957	Identifier	false		3245450	0					
ANR	3245958	Argument	true		3245450	3					
ANR	3245959	Identifier	true		3245450	0					
ANR	3245960	Identifier	FALSE		3245450	1					
ANR	3245961	CompoundStatement		117:1:3494:3494	3245450	1					
ANR	3245962	ExpressionStatement	"dprintf ( D_ALWAYS , ""GahpServer::Startup - pipe() failed, errno=%d\\n"" , errno )"	759:2:19371:19448	3245450	0	True				
ANR	3245963	CallExpression	"dprintf ( D_ALWAYS , ""GahpServer::Startup - pipe() failed, errno=%d\\n"" , errno )"		3245450	0					
ANR	3245964	Callee	dprintf		3245450	0					
ANR	3245965	Identifier	dprintf		3245450	0					
ANR	3245966	ArgumentList	D_ALWAYS		3245450	1					
ANR	3245967	Argument	D_ALWAYS		3245450	0					
ANR	3245968	Identifier	D_ALWAYS		3245450	0					
ANR	3245969	Argument	"""GahpServer::Startup - pipe() failed, errno=%d\\n"""		3245450	1					
ANR	3245970	PrimaryExpression	"""GahpServer::Startup - pipe() failed, errno=%d\\n"""		3245450	0					
ANR	3245971	Argument	errno		3245450	2					
ANR	3245972	Identifier	errno		3245450	0					
ANR	3245973	ExpressionStatement	free ( gahp_path )	761:2:19452:19469	3245450	1	True				
ANR	3245974	CallExpression	free ( gahp_path )		3245450	0					
ANR	3245975	Callee	free		3245450	0					
ANR	3245976	Identifier	free		3245450	0					
ANR	3245977	ArgumentList	gahp_path		3245450	1					
ANR	3245978	Argument	gahp_path		3245450	0					
ANR	3245979	Identifier	gahp_path		3245450	0					
ANR	3245980	ReturnStatement	return false ;	762:2:19473:19485	3245450	2	True				
ANR	3245981	Identifier	false		3245450	0					
ANR	3245982	IdentifierDeclStatement	int io_redirect [ 3 ] ;	765:1:19492:19510	3245450	27	True				
ANR	3245983	IdentifierDecl	io_redirect [ 3 ]		3245450	0					
ANR	3245984	IdentifierDeclType	int [ 3 ]		3245450	0					
ANR	3245985	Identifier	io_redirect		3245450	1					
ANR	3245986	PrimaryExpression	3		3245450	2					
ANR	3245987	ExpressionStatement	io_redirect [ 0 ] = stdin_pipefds [ 0 ]	766:1:19513:19546	3245450	28	True				
ANR	3245988	AssignmentExpression	io_redirect [ 0 ] = stdin_pipefds [ 0 ]		3245450	0		=			
ANR	3245989	ArrayIndexing	io_redirect [ 0 ]		3245450	0					
ANR	3245990	Identifier	io_redirect		3245450	0					
ANR	3245991	PrimaryExpression	0		3245450	1					
ANR	3245992	ArrayIndexing	stdin_pipefds [ 0 ]		3245450	1					
ANR	3245993	Identifier	stdin_pipefds		3245450	0					
ANR	3245994	PrimaryExpression	0		3245450	1					
ANR	3245995	ExpressionStatement	io_redirect [ 1 ] = stdout_pipefds [ 1 ]	767:1:19584:19618	3245450	29	True				
ANR	3245996	AssignmentExpression	io_redirect [ 1 ] = stdout_pipefds [ 1 ]		3245450	0		=			
ANR	3245997	ArrayIndexing	io_redirect [ 1 ]		3245450	0					
ANR	3245998	Identifier	io_redirect		3245450	0					
ANR	3245999	PrimaryExpression	1		3245450	1					
ANR	3246000	ArrayIndexing	stdout_pipefds [ 1 ]		3245450	1					
ANR	3246001	Identifier	stdout_pipefds		3245450	0					
ANR	3246002	PrimaryExpression	1		3245450	1					
ANR	3246003	ExpressionStatement	io_redirect [ 2 ] = stderr_pipefds [ 1 ]	768:1:19658:19692	3245450	30	True				
ANR	3246004	AssignmentExpression	io_redirect [ 2 ] = stderr_pipefds [ 1 ]		3245450	0		=			
ANR	3246005	ArrayIndexing	io_redirect [ 2 ]		3245450	0					
ANR	3246006	Identifier	io_redirect		3245450	0					
ANR	3246007	PrimaryExpression	2		3245450	1					
ANR	3246008	ArrayIndexing	stderr_pipefds [ 1 ]		3245450	1					
ANR	3246009	Identifier	stderr_pipefds		3245450	0					
ANR	3246010	PrimaryExpression	1		3245450	1					
ANR	3246011	ExpressionStatement	"m_gahp_pid = daemonCore -> Create_Process ( gahp_path , gahp_args , PRIV_USER_FINAL , m_reaperid , FALSE , & newenv , NULL , NULL , NULL , io_redirect )"	770:1:19733:20147	3245450	31	True				
ANR	3246012	AssignmentExpression	"m_gahp_pid = daemonCore -> Create_Process ( gahp_path , gahp_args , PRIV_USER_FINAL , m_reaperid , FALSE , & newenv , NULL , NULL , NULL , io_redirect )"		3245450	0		=			
ANR	3246013	Identifier	m_gahp_pid		3245450	0					
ANR	3246014	CallExpression	"daemonCore -> Create_Process ( gahp_path , gahp_args , PRIV_USER_FINAL , m_reaperid , FALSE , & newenv , NULL , NULL , NULL , io_redirect )"		3245450	1					
ANR	3246015	Callee	daemonCore -> Create_Process		3245450	0					
ANR	3246016	PtrMemberAccess	daemonCore -> Create_Process		3245450	0					
ANR	3246017	Identifier	daemonCore		3245450	0					
ANR	3246018	Identifier	Create_Process		3245450	1					
ANR	3246019	ArgumentList	gahp_path		3245450	1					
ANR	3246020	Argument	gahp_path		3245450	0					
ANR	3246021	Identifier	gahp_path		3245450	0					
ANR	3246022	Argument	gahp_args		3245450	1					
ANR	3246023	Identifier	gahp_args		3245450	0					
ANR	3246024	Argument	PRIV_USER_FINAL		3245450	2					
ANR	3246025	Identifier	PRIV_USER_FINAL		3245450	0					
ANR	3246026	Argument	m_reaperid		3245450	3					
ANR	3246027	Identifier	m_reaperid		3245450	0					
ANR	3246028	Argument	FALSE		3245450	4					
ANR	3246029	Identifier	FALSE		3245450	0					
ANR	3246030	Argument	& newenv		3245450	5					
ANR	3246031	UnaryOperationExpression	& newenv		3245450	0					
ANR	3246032	UnaryOperator	&		3245450	0					
ANR	3246033	Identifier	newenv		3245450	1					
ANR	3246034	Argument	NULL		3245450	6					
ANR	3246035	Identifier	NULL		3245450	0					
ANR	3246036	Argument	NULL		3245450	7					
ANR	3246037	Identifier	NULL		3245450	0					
ANR	3246038	Argument	NULL		3245450	8					
ANR	3246039	Identifier	NULL		3245450	0					
ANR	3246040	Argument	io_redirect		3245450	9					
ANR	3246041	Identifier	io_redirect		3245450	0					
ANR	3246042	IfStatement	if ( m_gahp_pid == FALSE )		3245450	32					
ANR	3246043	Condition	m_gahp_pid == FALSE	783:6:20156:20174	3245450	0	True				
ANR	3246044	EqualityExpression	m_gahp_pid == FALSE		3245450	0		==			
ANR	3246045	Identifier	m_gahp_pid		3245450	0					
ANR	3246046	Identifier	FALSE		3245450	1					
ANR	3246047	CompoundStatement		142:28:4305:4305	3245450	1					
ANR	3246048	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to start GAHP server (%s)\\n"" , gahp_path )"	784:2:20182:20251	3245450	0	True				
ANR	3246049	CallExpression	"dprintf ( D_ALWAYS , ""Failed to start GAHP server (%s)\\n"" , gahp_path )"		3245450	0					
ANR	3246050	Callee	dprintf		3245450	0					
ANR	3246051	Identifier	dprintf		3245450	0					
ANR	3246052	ArgumentList	D_ALWAYS		3245450	1					
ANR	3246053	Argument	D_ALWAYS		3245450	0					
ANR	3246054	Identifier	D_ALWAYS		3245450	0					
ANR	3246055	Argument	"""Failed to start GAHP server (%s)\\n"""		3245450	1					
ANR	3246056	PrimaryExpression	"""Failed to start GAHP server (%s)\\n"""		3245450	0					
ANR	3246057	Argument	gahp_path		3245450	2					
ANR	3246058	Identifier	gahp_path		3245450	0					
ANR	3246059	ExpressionStatement	free ( gahp_path )	786:2:20255:20272	3245450	1	True				
ANR	3246060	CallExpression	free ( gahp_path )		3245450	0					
ANR	3246061	Callee	free		3245450	0					
ANR	3246062	Identifier	free		3245450	0					
ANR	3246063	ArgumentList	gahp_path		3245450	1					
ANR	3246064	Argument	gahp_path		3245450	0					
ANR	3246065	Identifier	gahp_path		3245450	0					
ANR	3246066	ExpressionStatement	m_gahp_pid = - 1	787:2:20276:20291	3245450	2	True				
ANR	3246067	AssignmentExpression	m_gahp_pid = - 1		3245450	0		=			
ANR	3246068	Identifier	m_gahp_pid		3245450	0					
ANR	3246069	UnaryOperationExpression	- 1		3245450	1					
ANR	3246070	UnaryOperator	-		3245450	0					
ANR	3246071	PrimaryExpression	1		3245450	1					
ANR	3246072	ReturnStatement	return false ;	788:2:20295:20307	3245450	3	True				
ANR	3246073	Identifier	false		3245450	0					
ANR	3246074	ElseStatement	else		3245450	0					
ANR	3246075	CompoundStatement		148:8:4444:4444	3245450	0					
ANR	3246076	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP server pid = %d\\n"" , m_gahp_pid )"	790:2:20321:20374	3245450	0	True				
ANR	3246077	CallExpression	"dprintf ( D_ALWAYS , ""GAHP server pid = %d\\n"" , m_gahp_pid )"		3245450	0					
ANR	3246078	Callee	dprintf		3245450	0					
ANR	3246079	Identifier	dprintf		3245450	0					
ANR	3246080	ArgumentList	D_ALWAYS		3245450	1					
ANR	3246081	Argument	D_ALWAYS		3245450	0					
ANR	3246082	Identifier	D_ALWAYS		3245450	0					
ANR	3246083	Argument	"""GAHP server pid = %d\\n"""		3245450	1					
ANR	3246084	PrimaryExpression	"""GAHP server pid = %d\\n"""		3245450	0					
ANR	3246085	Argument	m_gahp_pid		3245450	2					
ANR	3246086	Identifier	m_gahp_pid		3245450	0					
ANR	3246087	ExpressionStatement	free ( gahp_path )	793:1:20381:20398	3245450	33	True				
ANR	3246088	CallExpression	free ( gahp_path )		3245450	0					
ANR	3246089	Callee	free		3245450	0					
ANR	3246090	Identifier	free		3245450	0					
ANR	3246091	ArgumentList	gahp_path		3245450	1					
ANR	3246092	Argument	gahp_path		3245450	0					
ANR	3246093	Identifier	gahp_path		3245450	0					
ANR	3246094	ExpressionStatement	daemonCore -> Close_Pipe ( io_redirect [ 0 ] )	798:1:20572:20612	3245450	34	True				
ANR	3246095	CallExpression	daemonCore -> Close_Pipe ( io_redirect [ 0 ] )		3245450	0					
ANR	3246096	Callee	daemonCore -> Close_Pipe		3245450	0					
ANR	3246097	PtrMemberAccess	daemonCore -> Close_Pipe		3245450	0					
ANR	3246098	Identifier	daemonCore		3245450	0					
ANR	3246099	Identifier	Close_Pipe		3245450	1					
ANR	3246100	ArgumentList	io_redirect [ 0 ]		3245450	1					
ANR	3246101	Argument	io_redirect [ 0 ]		3245450	0					
ANR	3246102	ArrayIndexing	io_redirect [ 0 ]		3245450	0					
ANR	3246103	Identifier	io_redirect		3245450	0					
ANR	3246104	PrimaryExpression	0		3245450	1					
ANR	3246105	ExpressionStatement	daemonCore -> Close_Pipe ( io_redirect [ 1 ] )	799:1:20615:20655	3245450	35	True				
ANR	3246106	CallExpression	daemonCore -> Close_Pipe ( io_redirect [ 1 ] )		3245450	0					
ANR	3246107	Callee	daemonCore -> Close_Pipe		3245450	0					
ANR	3246108	PtrMemberAccess	daemonCore -> Close_Pipe		3245450	0					
ANR	3246109	Identifier	daemonCore		3245450	0					
ANR	3246110	Identifier	Close_Pipe		3245450	1					
ANR	3246111	ArgumentList	io_redirect [ 1 ]		3245450	1					
ANR	3246112	Argument	io_redirect [ 1 ]		3245450	0					
ANR	3246113	ArrayIndexing	io_redirect [ 1 ]		3245450	0					
ANR	3246114	Identifier	io_redirect		3245450	0					
ANR	3246115	PrimaryExpression	1		3245450	1					
ANR	3246116	ExpressionStatement	daemonCore -> Close_Pipe ( io_redirect [ 2 ] )	800:1:20658:20698	3245450	36	True				
ANR	3246117	CallExpression	daemonCore -> Close_Pipe ( io_redirect [ 2 ] )		3245450	0					
ANR	3246118	Callee	daemonCore -> Close_Pipe		3245450	0					
ANR	3246119	PtrMemberAccess	daemonCore -> Close_Pipe		3245450	0					
ANR	3246120	Identifier	daemonCore		3245450	0					
ANR	3246121	Identifier	Close_Pipe		3245450	1					
ANR	3246122	ArgumentList	io_redirect [ 2 ]		3245450	1					
ANR	3246123	Argument	io_redirect [ 2 ]		3245450	0					
ANR	3246124	ArrayIndexing	io_redirect [ 2 ]		3245450	0					
ANR	3246125	Identifier	io_redirect		3245450	0					
ANR	3246126	PrimaryExpression	2		3245450	1					
ANR	3246127	ExpressionStatement	m_gahp_errorfd = stderr_pipefds [ 0 ]	802:1:20702:20736	3245450	37	True				
ANR	3246128	AssignmentExpression	m_gahp_errorfd = stderr_pipefds [ 0 ]		3245450	0		=			
ANR	3246129	Identifier	m_gahp_errorfd		3245450	0					
ANR	3246130	ArrayIndexing	stderr_pipefds [ 0 ]		3245450	1					
ANR	3246131	Identifier	stderr_pipefds		3245450	0					
ANR	3246132	PrimaryExpression	0		3245450	1					
ANR	3246133	ExpressionStatement	m_gahp_readfd = stdout_pipefds [ 0 ]	803:1:20739:20772	3245450	38	True				
ANR	3246134	AssignmentExpression	m_gahp_readfd = stdout_pipefds [ 0 ]		3245450	0		=			
ANR	3246135	Identifier	m_gahp_readfd		3245450	0					
ANR	3246136	ArrayIndexing	stdout_pipefds [ 0 ]		3245450	1					
ANR	3246137	Identifier	stdout_pipefds		3245450	0					
ANR	3246138	PrimaryExpression	0		3245450	1					
ANR	3246139	ExpressionStatement	m_gahp_writefd = stdin_pipefds [ 1 ]	804:1:20775:20808	3245450	39	True				
ANR	3246140	AssignmentExpression	m_gahp_writefd = stdin_pipefds [ 1 ]		3245450	0		=			
ANR	3246141	Identifier	m_gahp_writefd		3245450	0					
ANR	3246142	ArrayIndexing	stdin_pipefds [ 1 ]		3245450	1					
ANR	3246143	Identifier	stdin_pipefds		3245450	0					
ANR	3246144	PrimaryExpression	1		3245450	1					
ANR	3246145	IfStatement	if ( command_version ( ) == false )		3245450	40					
ANR	3246146	Condition	command_version ( ) == false	807:6:20888:20913	3245450	0	True				
ANR	3246147	EqualityExpression	command_version ( ) == false		3245450	0		==			
ANR	3246148	CallExpression	command_version ( )		3245450	0					
ANR	3246149	Callee	command_version		3245450	0					
ANR	3246150	Identifier	command_version		3245450	0					
ANR	3246151	ArgumentList			3245450	1					
ANR	3246152	Identifier	false		3245450	1					
ANR	3246153	CompoundStatement		166:35:5044:5044	3245450	1					
ANR	3246154	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read GAHP server version\\n"" )"	808:2:20921:20977	3245450	0	True				
ANR	3246155	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read GAHP server version\\n"" )"		3245450	0					
ANR	3246156	Callee	dprintf		3245450	0					
ANR	3246157	Identifier	dprintf		3245450	0					
ANR	3246158	ArgumentList	D_ALWAYS		3245450	1					
ANR	3246159	Argument	D_ALWAYS		3245450	0					
ANR	3246160	Identifier	D_ALWAYS		3245450	0					
ANR	3246161	Argument	"""Failed to read GAHP server version\\n"""		3245450	1					
ANR	3246162	PrimaryExpression	"""Failed to read GAHP server version\\n"""		3245450	0					
ANR	3246163	ExpressionStatement	m_gahp_startup_failed = true	810:2:21019:21047	3245450	1	True				
ANR	3246164	AssignmentExpression	m_gahp_startup_failed = true		3245450	0		=			
ANR	3246165	Identifier	m_gahp_startup_failed		3245450	0					
ANR	3246166	Identifier	true		3245450	1					
ANR	3246167	ReturnStatement	return false ;	811:2:21051:21063	3245450	2	True				
ANR	3246168	Identifier	false		3245450	0					
ANR	3246169	ElseStatement	else		3245450	0					
ANR	3246170	CompoundStatement		171:8:5200:5200	3245450	0					
ANR	3246171	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP server version: %s\\n"" , m_gahp_version )"	813:2:21077:21140	3245450	0	True				
ANR	3246172	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP server version: %s\\n"" , m_gahp_version )"		3245450	0					
ANR	3246173	Callee	dprintf		3245450	0					
ANR	3246174	Identifier	dprintf		3245450	0					
ANR	3246175	ArgumentList	D_FULLDEBUG		3245450	1					
ANR	3246176	Argument	D_FULLDEBUG		3245450	0					
ANR	3246177	Identifier	D_FULLDEBUG		3245450	0					
ANR	3246178	Argument	"""GAHP server version: %s\\n"""		3245450	1					
ANR	3246179	PrimaryExpression	"""GAHP server version: %s\\n"""		3245450	0					
ANR	3246180	Argument	m_gahp_version		3245450	2					
ANR	3246181	Identifier	m_gahp_version		3245450	0					
ANR	3246182	IfStatement	if ( command_commands ( ) == false )		3245450	41					
ANR	3246183	Condition	command_commands ( ) == false	817:6:21201:21227	3245450	0	True				
ANR	3246184	EqualityExpression	command_commands ( ) == false		3245450	0		==			
ANR	3246185	CallExpression	command_commands ( )		3245450	0					
ANR	3246186	Callee	command_commands		3245450	0					
ANR	3246187	Identifier	command_commands		3245450	0					
ANR	3246188	ArgumentList			3245450	1					
ANR	3246189	Identifier	false		3245450	1					
ANR	3246190	CompoundStatement		176:36:5358:5358	3245450	1					
ANR	3246191	ExpressionStatement	m_gahp_startup_failed = true	818:2:21235:21263	3245450	0	True				
ANR	3246192	AssignmentExpression	m_gahp_startup_failed = true		3245450	0		=			
ANR	3246193	Identifier	m_gahp_startup_failed		3245450	0					
ANR	3246194	Identifier	true		3245450	1					
ANR	3246195	ReturnStatement	return false ;	819:2:21267:21279	3245450	1	True				
ANR	3246196	Identifier	false		3245450	0					
ANR	3246197	ExpressionStatement	use_prefix = command_response_prefix ( GAHP_PREFIX )	825:1:21458:21509	3245450	42	True				
ANR	3246198	AssignmentExpression	use_prefix = command_response_prefix ( GAHP_PREFIX )		3245450	0		=			
ANR	3246199	Identifier	use_prefix		3245450	0					
ANR	3246200	CallExpression	command_response_prefix ( GAHP_PREFIX )		3245450	1					
ANR	3246201	Callee	command_response_prefix		3245450	0					
ANR	3246202	Identifier	command_response_prefix		3245450	0					
ANR	3246203	ArgumentList	GAHP_PREFIX		3245450	1					
ANR	3246204	Argument	GAHP_PREFIX		3245450	0					
ANR	3246205	Identifier	GAHP_PREFIX		3245450	0					
ANR	3246206	IfStatement	if ( ! command_async_mode_on ( ) )		3245450	43					
ANR	3246207	Condition	! command_async_mode_on ( )	828:7:21568:21591	3245450	0	True				
ANR	3246208	UnaryOperationExpression	! command_async_mode_on ( )		3245450	0					
ANR	3246209	UnaryOperator	!		3245450	0					
ANR	3246210	CallExpression	command_async_mode_on ( )		3245450	1					
ANR	3246211	Callee	command_async_mode_on		3245450	0					
ANR	3246212	Identifier	command_async_mode_on		3245450	0					
ANR	3246213	ArgumentList			3245450	1					
ANR	3246214	CompoundStatement		187:34:5722:5722	3245450	1					
ANR	3246215	ExpressionStatement	setPollInterval ( m_pollInterval )	830:2:21639:21670	3245450	0	True				
ANR	3246216	CallExpression	setPollInterval ( m_pollInterval )		3245450	0					
ANR	3246217	Callee	setPollInterval		3245450	0					
ANR	3246218	Identifier	setPollInterval		3245450	0					
ANR	3246219	ArgumentList	m_pollInterval		3245450	1					
ANR	3246220	Argument	m_pollInterval		3245450	0					
ANR	3246221	Identifier	m_pollInterval		3245450	0					
ANR	3246222	ElseStatement	else		3245450	0					
ANR	3246223	CompoundStatement		192:2:5869:6030	3245450	0					
ANR	3246224	IdentifierDeclStatement	"int result = daemonCore -> Register_Pipe ( m_gahp_readfd , ""m_gahp_readfd"" , static_cast < PipeHandlercpp > ( & GahpServer :: pipe_ready ) , ""&GahpServer::pipe_ready"" , this ) ;"	833:2:21742:21903	3245450	0	True				
ANR	3246225	IdentifierDecl	"result = daemonCore -> Register_Pipe ( m_gahp_readfd , ""m_gahp_readfd"" , static_cast < PipeHandlercpp > ( & GahpServer :: pipe_ready ) , ""&GahpServer::pipe_ready"" , this )"		3245450	0					
ANR	3246226	IdentifierDeclType	int		3245450	0					
ANR	3246227	Identifier	result		3245450	1					
ANR	3246228	AssignmentExpression	"result = daemonCore -> Register_Pipe ( m_gahp_readfd , ""m_gahp_readfd"" , static_cast < PipeHandlercpp > ( & GahpServer :: pipe_ready ) , ""&GahpServer::pipe_ready"" , this )"		3245450	2		=			
ANR	3246229	Identifier	result		3245450	0					
ANR	3246230	CallExpression	"daemonCore -> Register_Pipe ( m_gahp_readfd , ""m_gahp_readfd"" , static_cast < PipeHandlercpp > ( & GahpServer :: pipe_ready ) , ""&GahpServer::pipe_ready"" , this )"		3245450	1					
ANR	3246231	Callee	daemonCore -> Register_Pipe		3245450	0					
ANR	3246232	PtrMemberAccess	daemonCore -> Register_Pipe		3245450	0					
ANR	3246233	Identifier	daemonCore		3245450	0					
ANR	3246234	Identifier	Register_Pipe		3245450	1					
ANR	3246235	ArgumentList	m_gahp_readfd		3245450	1					
ANR	3246236	Argument	m_gahp_readfd		3245450	0					
ANR	3246237	Identifier	m_gahp_readfd		3245450	0					
ANR	3246238	Argument	"""m_gahp_readfd"""		3245450	1					
ANR	3246239	PrimaryExpression	"""m_gahp_readfd"""		3245450	0					
ANR	3246240	Argument	static_cast < PipeHandlercpp > ( & GahpServer :: pipe_ready )		3245450	2					
ANR	3246241	RelationalExpression	static_cast < PipeHandlercpp > ( & GahpServer :: pipe_ready )		3245450	0		<			
ANR	3246242	Identifier	static_cast		3245450	0					
ANR	3246243	RelationalExpression	PipeHandlercpp > ( & GahpServer :: pipe_ready )		3245450	1		>			
ANR	3246244	Identifier	PipeHandlercpp		3245450	0					
ANR	3246245	UnaryOperationExpression	& GahpServer :: pipe_ready		3245450	1					
ANR	3246246	UnaryOperator	&		3245450	0					
ANR	3246247	Identifier	GahpServer :: pipe_ready		3245450	1					
ANR	3246248	Argument	"""&GahpServer::pipe_ready"""		3245450	3					
ANR	3246249	PrimaryExpression	"""&GahpServer::pipe_ready"""		3245450	0					
ANR	3246250	Argument	this		3245450	4					
ANR	3246251	Identifier	this		3245450	0					
ANR	3246252	IfStatement	if ( result == - 1 )		3245450	1					
ANR	3246253	Condition	result == - 1	836:7:21912:21923	3245450	0	True				
ANR	3246254	EqualityExpression	result == - 1		3245450	0		==			
ANR	3246255	Identifier	result		3245450	0					
ANR	3246256	UnaryOperationExpression	- 1		3245450	1					
ANR	3246257	UnaryOperator	-		3245450	0					
ANR	3246258	PrimaryExpression	1		3245450	1					
ANR	3246259	CompoundStatement		195:22:6054:6054	3245450	1					
ANR	3246260	ExpressionStatement	setPollInterval ( m_pollInterval )	839:3:22019:22050	3245450	0	True				
ANR	3246261	CallExpression	setPollInterval ( m_pollInterval )		3245450	0					
ANR	3246262	Callee	setPollInterval		3245450	0					
ANR	3246263	Identifier	setPollInterval		3245450	0					
ANR	3246264	ArgumentList	m_pollInterval		3245450	1					
ANR	3246265	Argument	m_pollInterval		3245450	0					
ANR	3246266	Identifier	m_pollInterval		3245450	0					
ANR	3246267	ElseStatement	else		3245450	0					
ANR	3246268	CompoundStatement		199:9:6188:6188	3245450	0					
ANR	3246269	ExpressionStatement	setPollInterval ( m_pollInterval * 12 )	844:10:22205:22241	3245450	0	True				
ANR	3246270	CallExpression	setPollInterval ( m_pollInterval * 12 )		3245450	0					
ANR	3246271	Callee	setPollInterval		3245450	0					
ANR	3246272	Identifier	setPollInterval		3245450	0					
ANR	3246273	ArgumentList	m_pollInterval * 12		3245450	1					
ANR	3246274	Argument	m_pollInterval * 12		3245450	0					
ANR	3246275	MultiplicativeExpression	m_pollInterval * 12		3245450	0		*			
ANR	3246276	Identifier	m_pollInterval		3245450	0					
ANR	3246277	PrimaryExpression	12		3245450	1					
ANR	3246278	ExpressionStatement	"result = daemonCore -> Register_Pipe ( m_gahp_errorfd , ""m_gahp_errorfd"" , static_cast < PipeHandlercpp > ( & GahpServer :: err_pipe_ready ) , ""&GahpServer::err_pipe_ready"" , this )"	847:2:22250:22422	3245450	2	True				
ANR	3246279	AssignmentExpression	"result = daemonCore -> Register_Pipe ( m_gahp_errorfd , ""m_gahp_errorfd"" , static_cast < PipeHandlercpp > ( & GahpServer :: err_pipe_ready ) , ""&GahpServer::err_pipe_ready"" , this )"		3245450	0		=			
ANR	3246280	Identifier	result		3245450	0					
ANR	3246281	CallExpression	"daemonCore -> Register_Pipe ( m_gahp_errorfd , ""m_gahp_errorfd"" , static_cast < PipeHandlercpp > ( & GahpServer :: err_pipe_ready ) , ""&GahpServer::err_pipe_ready"" , this )"		3245450	1					
ANR	3246282	Callee	daemonCore -> Register_Pipe		3245450	0					
ANR	3246283	PtrMemberAccess	daemonCore -> Register_Pipe		3245450	0					
ANR	3246284	Identifier	daemonCore		3245450	0					
ANR	3246285	Identifier	Register_Pipe		3245450	1					
ANR	3246286	ArgumentList	m_gahp_errorfd		3245450	1					
ANR	3246287	Argument	m_gahp_errorfd		3245450	0					
ANR	3246288	Identifier	m_gahp_errorfd		3245450	0					
ANR	3246289	Argument	"""m_gahp_errorfd"""		3245450	1					
ANR	3246290	PrimaryExpression	"""m_gahp_errorfd"""		3245450	0					
ANR	3246291	Argument	static_cast < PipeHandlercpp > ( & GahpServer :: err_pipe_ready )		3245450	2					
ANR	3246292	RelationalExpression	static_cast < PipeHandlercpp > ( & GahpServer :: err_pipe_ready )		3245450	0		<			
ANR	3246293	Identifier	static_cast		3245450	0					
ANR	3246294	RelationalExpression	PipeHandlercpp > ( & GahpServer :: err_pipe_ready )		3245450	1		>			
ANR	3246295	Identifier	PipeHandlercpp		3245450	0					
ANR	3246296	UnaryOperationExpression	& GahpServer :: err_pipe_ready		3245450	1					
ANR	3246297	UnaryOperator	&		3245450	0					
ANR	3246298	Identifier	GahpServer :: err_pipe_ready		3245450	1					
ANR	3246299	Argument	"""&GahpServer::err_pipe_ready"""		3245450	3					
ANR	3246300	PrimaryExpression	"""&GahpServer::err_pipe_ready"""		3245450	0					
ANR	3246301	Argument	this		3245450	4					
ANR	3246302	Identifier	this		3245450	0					
ANR	3246303	IfStatement	"if ( m_commands_supported -> contains_anycase ( ""CACHE_PROXY_FROM_FILE"" ) == TRUE && m_commands_supported -> contains_anycase ( ""UNCACHE_PROXY"" ) == TRUE && m_commands_supported -> contains_anycase ( ""USE_CACHED_PROXY"" ) == TRUE )"		3245450	44					
ANR	3246304	Condition	"m_commands_supported -> contains_anycase ( ""CACHE_PROXY_FROM_FILE"" ) == TRUE && m_commands_supported -> contains_anycase ( ""UNCACHE_PROXY"" ) == TRUE && m_commands_supported -> contains_anycase ( ""USE_CACHED_PROXY"" ) == TRUE"	854:6:22528:22735	3245450	0	True				
ANR	3246305	AndExpression	"m_commands_supported -> contains_anycase ( ""CACHE_PROXY_FROM_FILE"" ) == TRUE && m_commands_supported -> contains_anycase ( ""UNCACHE_PROXY"" ) == TRUE && m_commands_supported -> contains_anycase ( ""USE_CACHED_PROXY"" ) == TRUE"		3245450	0		&&			
ANR	3246306	EqualityExpression	"m_commands_supported -> contains_anycase ( ""CACHE_PROXY_FROM_FILE"" ) == TRUE"		3245450	0		==			
ANR	3246307	CallExpression	"m_commands_supported -> contains_anycase ( ""CACHE_PROXY_FROM_FILE"" )"		3245450	0					
ANR	3246308	Callee	m_commands_supported -> contains_anycase		3245450	0					
ANR	3246309	PtrMemberAccess	m_commands_supported -> contains_anycase		3245450	0					
ANR	3246310	Identifier	m_commands_supported		3245450	0					
ANR	3246311	Identifier	contains_anycase		3245450	1					
ANR	3246312	ArgumentList	"""CACHE_PROXY_FROM_FILE"""		3245450	1					
ANR	3246313	Argument	"""CACHE_PROXY_FROM_FILE"""		3245450	0					
ANR	3246314	PrimaryExpression	"""CACHE_PROXY_FROM_FILE"""		3245450	0					
ANR	3246315	Identifier	TRUE		3245450	1					
ANR	3246316	AndExpression	"m_commands_supported -> contains_anycase ( ""UNCACHE_PROXY"" ) == TRUE && m_commands_supported -> contains_anycase ( ""USE_CACHED_PROXY"" ) == TRUE"		3245450	1		&&			
ANR	3246317	EqualityExpression	"m_commands_supported -> contains_anycase ( ""UNCACHE_PROXY"" ) == TRUE"		3245450	0		==			
ANR	3246318	CallExpression	"m_commands_supported -> contains_anycase ( ""UNCACHE_PROXY"" )"		3245450	0					
ANR	3246319	Callee	m_commands_supported -> contains_anycase		3245450	0					
ANR	3246320	PtrMemberAccess	m_commands_supported -> contains_anycase		3245450	0					
ANR	3246321	Identifier	m_commands_supported		3245450	0					
ANR	3246322	Identifier	contains_anycase		3245450	1					
ANR	3246323	ArgumentList	"""UNCACHE_PROXY"""		3245450	1					
ANR	3246324	Argument	"""UNCACHE_PROXY"""		3245450	0					
ANR	3246325	PrimaryExpression	"""UNCACHE_PROXY"""		3245450	0					
ANR	3246326	Identifier	TRUE		3245450	1					
ANR	3246327	EqualityExpression	"m_commands_supported -> contains_anycase ( ""USE_CACHED_PROXY"" ) == TRUE"		3245450	1		==			
ANR	3246328	CallExpression	"m_commands_supported -> contains_anycase ( ""USE_CACHED_PROXY"" )"		3245450	0					
ANR	3246329	Callee	m_commands_supported -> contains_anycase		3245450	0					
ANR	3246330	PtrMemberAccess	m_commands_supported -> contains_anycase		3245450	0					
ANR	3246331	Identifier	m_commands_supported		3245450	0					
ANR	3246332	Identifier	contains_anycase		3245450	1					
ANR	3246333	ArgumentList	"""USE_CACHED_PROXY"""		3245450	1					
ANR	3246334	Argument	"""USE_CACHED_PROXY"""		3245450	0					
ANR	3246335	PrimaryExpression	"""USE_CACHED_PROXY"""		3245450	0					
ANR	3246336	Identifier	TRUE		3245450	1					
ANR	3246337	CompoundStatement		215:70:6866:6866	3245450	1					
ANR	3246338	ExpressionStatement	can_cache_proxies = true	857:2:22743:22767	3245450	0	True				
ANR	3246339	AssignmentExpression	can_cache_proxies = true		3245450	0		=			
ANR	3246340	Identifier	can_cache_proxies		3245450	0					
ANR	3246341	Identifier	true		3245450	1					
ANR	3246342	ReturnStatement	return true ;	860:1:22774:22785	3245450	45	True				
ANR	3246343	Identifier	true		3245450	0					
ANR	3246344	ReturnType	bool		3245450	1					
ANR	3246345	Identifier	GahpServer :: Startup		3245450	2					
ANR	3246346	ParameterList			3245450	3					
ANR	3246347	CFGEntryNode	ENTRY		3245450		True				
ANR	3246348	CFGExitNode	EXIT		3245450		True				
ANR	3246349	Symbol	daemonCore -> Create_Process		3245450						
ANR	3246350	Symbol	& low_port		3245450						
ANR	3246351	Symbol	m_gahp_writefd		3245450						
ANR	3246352	Symbol	* stdout_pipefds		3245450						
ANR	3246353	Symbol	command_version		3245450						
ANR	3246354	Symbol	m_commands_supported		3245450						
ANR	3246355	Symbol	m_gahp_pid		3245450						
ANR	3246356	Symbol	command_async_mode_on		3245450						
ANR	3246357	Symbol	strncmp		3245450						
ANR	3246358	Symbol	gahp_path		3245450						
ANR	3246359	Symbol	args_error		3245450						
ANR	3246360	Symbol	io_redirect		3245450						
ANR	3246361	Symbol	m_pollInterval		3245450						
ANR	3246362	Symbol	gahp_args . AppendArgsV1RawOrV2Quoted		3245450						
ANR	3246363	Symbol	binary_args		3245450						
ANR	3246364	Symbol	& GahpServer :: Reaper		3245450						
ANR	3246365	Symbol	m_reaperid		3245450						
ANR	3246366	Symbol	* stderr_pipefds		3245450						
ANR	3246367	Symbol	* stdin_pipefds		3245450						
ANR	3246368	Symbol	args_error . Value		3245450						
ANR	3246369	Symbol	daemonCore -> Register_Pipe		3245450						
ANR	3246370	Symbol	strcmp		3245450						
ANR	3246371	Symbol	errno		3245450						
ANR	3246372	Symbol	NULL		3245450						
ANR	3246373	Symbol	* io_redirect		3245450						
ANR	3246374	Symbol	m_commands_supported -> contains_anycase		3245450						
ANR	3246375	Symbol	m_gahp_errorfd		3245450						
ANR	3246376	Symbol	& GahpServer :: pipe_ready		3245450						
ANR	3246377	Symbol	this		3245450						
ANR	3246378	Symbol	TRUE		3245450						
ANR	3246379	Symbol	GAHPCLIENT_DEFAULT_SERVER_PATH		3245450						
ANR	3246380	Symbol	param_boolean		3245450						
ANR	3246381	Symbol	D_FULLDEBUG		3245450						
ANR	3246382	Symbol	* m_commands_supported		3245450						
ANR	3246383	Symbol	static_cast		3245450						
ANR	3246384	Symbol	newenv		3245450						
ANR	3246385	Symbol	* daemonCore		3245450						
ANR	3246386	Symbol	my_id		3245450						
ANR	3246387	Symbol	stderr_pipefds		3245450						
ANR	3246388	Symbol	& newenv		3245450						
ANR	3246389	Symbol	true		3245450						
ANR	3246390	Symbol	daemonCore -> Create_Pipe		3245450						
ANR	3246391	Symbol	& GahpServer :: err_pipe_ready		3245450						
ANR	3246392	Symbol	GAHP_PREFIX		3245450						
ANR	3246393	Symbol	& args_error		3245450						
ANR	3246394	Symbol	get_port_range		3245450						
ANR	3246395	Symbol	high_port		3245450						
ANR	3246396	Symbol	result		3245450						
ANR	3246397	Symbol	PRIV_USER_FINAL		3245450						
ANR	3246398	Symbol	PipeHandlercpp		3245450						
ANR	3246399	Symbol	GridmanagerScratchDir		3245450						
ANR	3246400	Symbol	can_cache_proxies		3245450						
ANR	3246401	Symbol	command_response_prefix		3245450						
ANR	3246402	Symbol	param		3245450						
ANR	3246403	Symbol	& high_port		3245450						
ANR	3246404	Symbol	stdin_pipefds		3245450						
ANR	3246405	Symbol	daemonCore		3245450						
ANR	3246406	Symbol	buff . c_str		3245450						
ANR	3246407	Symbol	low_port		3245450						
ANR	3246408	Symbol	stdout_pipefds		3245450						
ANR	3246409	Symbol	use_prefix		3245450						
ANR	3246410	Symbol	m_gahp_startup_failed		3245450						
ANR	3246411	Symbol	false		3245450						
ANR	3246412	Symbol	D_ALWAYS		3245450						
ANR	3246413	Symbol	tmp_char		3245450						
ANR	3246414	Symbol	m_gahp_readfd		3245450						
ANR	3246415	Symbol	gahp_args		3245450						
ANR	3246416	Symbol	args		3245450						
ANR	3246417	Symbol	daemonCore -> Register_Reaper		3245450						
ANR	3246418	Symbol	is_c_gahp		3245450						
ANR	3246419	Symbol	binary_path		3245450						
ANR	3246420	Symbol	m_gahp_version		3245450						
ANR	3246421	Symbol	command_commands		3245450						
ANR	3246422	Symbol	FALSE		3245450						
ANR	3246423	Symbol	strdup		3245450						
ANR	3246424	Symbol	buff		3245450						
ANR	3246425	Function	GahpClient :: Initialize	863:0:22790:22869							
ANR	3246426	FunctionDef	GahpClient :: Initialize (Proxy * proxy)		3246425	0					
ANR	3246427	CompoundStatement		865:0:22832:22869	3246425	0					
ANR	3246428	ReturnStatement	return server -> Initialize ( proxy ) ;	866:1:22835:22867	3246425	0	True				
ANR	3246429	CallExpression	server -> Initialize ( proxy )		3246425	0					
ANR	3246430	Callee	server -> Initialize		3246425	0					
ANR	3246431	PtrMemberAccess	server -> Initialize		3246425	0					
ANR	3246432	Identifier	server		3246425	0					
ANR	3246433	Identifier	Initialize		3246425	1					
ANR	3246434	ArgumentList	proxy		3246425	1					
ANR	3246435	Argument	proxy		3246425	0					
ANR	3246436	Identifier	proxy		3246425	0					
ANR	3246437	ReturnType	bool		3246425	1					
ANR	3246438	Identifier	GahpClient :: Initialize		3246425	2					
ANR	3246439	ParameterList	Proxy * proxy		3246425	3					
ANR	3246440	Parameter	Proxy * proxy	864:23:22818:22829	3246425	0	True				
ANR	3246441	ParameterType	Proxy *		3246425	0					
ANR	3246442	Identifier	proxy		3246425	1					
ANR	3246443	CFGEntryNode	ENTRY		3246425		True				
ANR	3246444	CFGExitNode	EXIT		3246425		True				
ANR	3246445	Symbol	proxy		3246425						
ANR	3246446	Symbol	server		3246425						
ANR	3246447	Symbol	* server		3246425						
ANR	3246448	Symbol	server -> Initialize		3246425						
ANR	3246449	Function	GahpServer :: Initialize	869:0:22872:24275							
ANR	3246450	FunctionDef	GahpServer :: Initialize (Proxy * proxy)		3246449	0					
ANR	3246451	CompoundStatement		871:0:22916:24275	3246449	0					
ANR	3246452	IfStatement	if ( is_initialized == true )		3246449	0					
ANR	3246453	Condition	is_initialized == true	873:6:22988:23009	3246449	0	True				
ANR	3246454	EqualityExpression	is_initialized == true		3246449	0		==			
ANR	3246455	Identifier	is_initialized		3246449	0					
ANR	3246456	Identifier	true		3246449	1					
ANR	3246457	CompoundStatement		3:31:96:96	3246449	1					
ANR	3246458	ReturnStatement	return true ;	874:2:23017:23028	3246449	0	True				
ANR	3246459	Identifier	true		3246449	0					
ANR	3246460	IfStatement	if ( m_gahp_pid == - 1 )		3246449	1					
ANR	3246461	Condition	m_gahp_pid == - 1	878:6:23095:23110	3246449	0	True				
ANR	3246462	EqualityExpression	m_gahp_pid == - 1		3246449	0		==			
ANR	3246463	Identifier	m_gahp_pid		3246449	0					
ANR	3246464	UnaryOperationExpression	- 1		3246449	1					
ANR	3246465	UnaryOperator	-		3246449	0					
ANR	3246466	PrimaryExpression	1		3246449	1					
ANR	3246467	CompoundStatement		8:25:197:197	3246449	1					
ANR	3246468	IfStatement	if ( Startup ( ) == false )		3246449	0					
ANR	3246469	Condition	Startup ( ) == false	880:7:23159:23176	3246449	0	True				
ANR	3246470	EqualityExpression	Startup ( ) == false		3246449	0		==			
ANR	3246471	CallExpression	Startup ( )		3246449	0					
ANR	3246472	Callee	Startup		3246449	0					
ANR	3246473	Identifier	Startup		3246449	0					
ANR	3246474	ArgumentList			3246449	1					
ANR	3246475	Identifier	false		3246449	1					
ANR	3246476	CompoundStatement		10:28:263:263	3246449	1					
ANR	3246477	ReturnStatement	return false ;	881:3:23185:23197	3246449	0	True				
ANR	3246478	Identifier	false		3246449	0					
ANR	3246479	Statement	master_proxy	885:1:23208:23219	3246449	2	True				
ANR	3246480	Statement	=	885:14:23221:23221	3246449	3	True				
ANR	3246481	Statement	new	885:16:23223:23225	3246449	4	True				
ANR	3246482	ExpressionStatement	GahpProxyInfo	885:20:23227:23240	3246449	5	True				
ANR	3246483	Identifier	GahpProxyInfo		3246449	0					
ANR	3246484	ExpressionStatement	master_proxy -> proxy = proxy -> subject -> master_proxy	886:1:23243:23293	3246449	6	True				
ANR	3246485	AssignmentExpression	master_proxy -> proxy = proxy -> subject -> master_proxy		3246449	0		=			
ANR	3246486	PtrMemberAccess	master_proxy -> proxy		3246449	0					
ANR	3246487	Identifier	master_proxy		3246449	0					
ANR	3246488	Identifier	proxy		3246449	1					
ANR	3246489	PtrMemberAccess	proxy -> subject -> master_proxy		3246449	1					
ANR	3246490	PtrMemberAccess	proxy -> subject		3246449	0					
ANR	3246491	Identifier	proxy		3246449	0					
ANR	3246492	Identifier	subject		3246449	1					
ANR	3246493	Identifier	master_proxy		3246449	1					
ANR	3246494	ExpressionStatement	"AcquireProxy ( master_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"	887:1:23296:23388	3246449	7	True				
ANR	3246495	CallExpression	"AcquireProxy ( master_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"		3246449	0					
ANR	3246496	Callee	AcquireProxy		3246449	0					
ANR	3246497	Identifier	AcquireProxy		3246449	0					
ANR	3246498	ArgumentList	master_proxy -> proxy		3246449	1					
ANR	3246499	Argument	master_proxy -> proxy		3246449	0					
ANR	3246500	PtrMemberAccess	master_proxy -> proxy		3246449	0					
ANR	3246501	Identifier	master_proxy		3246449	0					
ANR	3246502	Identifier	proxy		3246449	1					
ANR	3246503	Argument	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3246449	1					
ANR	3246504	CastExpression	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3246449	0					
ANR	3246505	CastTarget	TimerHandlercpp		3246449	0					
ANR	3246506	UnaryOperationExpression	& GahpServer :: ProxyCallback		3246449	1					
ANR	3246507	UnaryOperator	&		3246449	0					
ANR	3246508	Identifier	GahpServer :: ProxyCallback		3246449	1					
ANR	3246509	Argument	this		3246449	2					
ANR	3246510	Identifier	this		3246449	0					
ANR	3246511	ExpressionStatement	master_proxy -> cached_expiration = 0	889:1:23391:23426	3246449	8	True				
ANR	3246512	AssignmentExpression	master_proxy -> cached_expiration = 0		3246449	0		=			
ANR	3246513	PtrMemberAccess	master_proxy -> cached_expiration		3246449	0					
ANR	3246514	Identifier	master_proxy		3246449	0					
ANR	3246515	Identifier	cached_expiration		3246449	1					
ANR	3246516	PrimaryExpression	0		3246449	1					
ANR	3246517	IfStatement	"if ( m_commands_supported -> contains_anycase ( ""INITIALIZE_FROM_FILE"" ) )"		3246449	9					
ANR	3246518	Condition	"m_commands_supported -> contains_anycase ( ""INITIALIZE_FROM_FILE"" )"	895:6:23575:23638	3246449	0	True				
ANR	3246519	CallExpression	"m_commands_supported -> contains_anycase ( ""INITIALIZE_FROM_FILE"" )"		3246449	0					
ANR	3246520	Callee	m_commands_supported -> contains_anycase		3246449	0					
ANR	3246521	PtrMemberAccess	m_commands_supported -> contains_anycase		3246449	0					
ANR	3246522	Identifier	m_commands_supported		3246449	0					
ANR	3246523	Identifier	contains_anycase		3246449	1					
ANR	3246524	ArgumentList	"""INITIALIZE_FROM_FILE"""		3246449	1					
ANR	3246525	Argument	"""INITIALIZE_FROM_FILE"""		3246449	0					
ANR	3246526	PrimaryExpression	"""INITIALIZE_FROM_FILE"""		3246449	0					
ANR	3246527	CompoundStatement		25:73:725:725	3246449	1					
ANR	3246528	IfStatement	if ( command_initialize_from_file ( master_proxy -> proxy -> proxy_filename ) == false )		3246449	0					
ANR	3246529	Condition	command_initialize_from_file ( master_proxy -> proxy -> proxy_filename ) == false	896:7:23651:23726	3246449	0	True				
ANR	3246530	EqualityExpression	command_initialize_from_file ( master_proxy -> proxy -> proxy_filename ) == false		3246449	0		==			
ANR	3246531	CallExpression	command_initialize_from_file ( master_proxy -> proxy -> proxy_filename )		3246449	0					
ANR	3246532	Callee	command_initialize_from_file		3246449	0					
ANR	3246533	Identifier	command_initialize_from_file		3246449	0					
ANR	3246534	ArgumentList	master_proxy -> proxy -> proxy_filename		3246449	1					
ANR	3246535	Argument	master_proxy -> proxy -> proxy_filename		3246449	0					
ANR	3246536	PtrMemberAccess	master_proxy -> proxy -> proxy_filename		3246449	0					
ANR	3246537	PtrMemberAccess	master_proxy -> proxy		3246449	0					
ANR	3246538	Identifier	master_proxy		3246449	0					
ANR	3246539	Identifier	proxy		3246449	1					
ANR	3246540	Identifier	proxy_filename		3246449	1					
ANR	3246541	Identifier	false		3246449	1					
ANR	3246542	CompoundStatement		26:86:813:813	3246449	1					
ANR	3246543	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP: Failed to initialize from file\\n"" )"	897:3:23735:23796	3246449	0	True				
ANR	3246544	CallExpression	"dprintf ( D_ALWAYS , ""GAHP: Failed to initialize from file\\n"" )"		3246449	0					
ANR	3246545	Callee	dprintf		3246449	0					
ANR	3246546	Identifier	dprintf		3246449	0					
ANR	3246547	ArgumentList	D_ALWAYS		3246449	1					
ANR	3246548	Argument	D_ALWAYS		3246449	0					
ANR	3246549	Identifier	D_ALWAYS		3246449	0					
ANR	3246550	Argument	"""GAHP: Failed to initialize from file\\n"""		3246449	1					
ANR	3246551	PrimaryExpression	"""GAHP: Failed to initialize from file\\n"""		3246449	0					
ANR	3246552	ReturnStatement	return false ;	898:3:23801:23813	3246449	1	True				
ANR	3246553	Identifier	false		3246449	0					
ANR	3246554	ExpressionStatement	current_proxy = master_proxy	902:1:23824:23852	3246449	10	True				
ANR	3246555	AssignmentExpression	current_proxy = master_proxy		3246449	0		=			
ANR	3246556	Identifier	current_proxy		3246449	0					
ANR	3246557	Identifier	master_proxy		3246449	1					
ANR	3246558	IfStatement	if ( can_cache_proxies )		3246449	11					
ANR	3246559	Condition	can_cache_proxies	904:6:23861:23877	3246449	0	True				
ANR	3246560	Identifier	can_cache_proxies		3246449	0					
ANR	3246561	CompoundStatement		34:26:964:964	3246449	1					
ANR	3246562	IfStatement	if ( cacheProxyFromFile ( master_proxy ) == false )		3246449	0					
ANR	3246563	Condition	cacheProxyFromFile ( master_proxy ) == false	905:7:23890:23932	3246449	0	True				
ANR	3246564	EqualityExpression	cacheProxyFromFile ( master_proxy ) == false		3246449	0		==			
ANR	3246565	CallExpression	cacheProxyFromFile ( master_proxy )		3246449	0					
ANR	3246566	Callee	cacheProxyFromFile		3246449	0					
ANR	3246567	Identifier	cacheProxyFromFile		3246449	0					
ANR	3246568	ArgumentList	master_proxy		3246449	1					
ANR	3246569	Argument	master_proxy		3246449	0					
ANR	3246570	Identifier	master_proxy		3246449	0					
ANR	3246571	Identifier	false		3246449	1					
ANR	3246572	CompoundStatement		35:53:1019:1019	3246449	1					
ANR	3246573	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP: Failed to cache proxy from file!\\n"" )"	906:3:23941:24004	3246449	0	True				
ANR	3246574	CallExpression	"dprintf ( D_ALWAYS , ""GAHP: Failed to cache proxy from file!\\n"" )"		3246449	0					
ANR	3246575	Callee	dprintf		3246449	0					
ANR	3246576	Identifier	dprintf		3246449	0					
ANR	3246577	ArgumentList	D_ALWAYS		3246449	1					
ANR	3246578	Argument	D_ALWAYS		3246449	0					
ANR	3246579	Identifier	D_ALWAYS		3246449	0					
ANR	3246580	Argument	"""GAHP: Failed to cache proxy from file!\\n"""		3246449	1					
ANR	3246581	PrimaryExpression	"""GAHP: Failed to cache proxy from file!\\n"""		3246449	0					
ANR	3246582	ReturnStatement	return false ;	907:3:24009:24021	3246449	1	True				
ANR	3246583	Identifier	false		3246449	0					
ANR	3246584	ExpressionStatement	"ProxiesByFilename = new HashTable < HashKey , GahpProxyInfo * > ( 500 , & hashFunction )"	910:2:24030:24127	3246449	1	True				
ANR	3246585	AssignmentExpression	"ProxiesByFilename = new HashTable < HashKey , GahpProxyInfo * > ( 500 , & hashFunction )"		3246449	0		=			
ANR	3246586	Identifier	ProxiesByFilename		3246449	0					
ANR	3246587	Expression	"500 , & hashFunction"		3246449	1					
ANR	3246588	PrimaryExpression	500		3246449	0					
ANR	3246589	UnaryOperationExpression	& hashFunction		3246449	1					
ANR	3246590	UnaryOperator	&		3246449	0					
ANR	3246591	Identifier	hashFunction		3246449	1					
ANR	3246592	ExpressionStatement	ASSERT ( ProxiesByFilename )	912:2:24131:24156	3246449	2	True				
ANR	3246593	CallExpression	ASSERT ( ProxiesByFilename )		3246449	0					
ANR	3246594	Callee	ASSERT		3246449	0					
ANR	3246595	Identifier	ASSERT		3246449	0					
ANR	3246596	ArgumentList	ProxiesByFilename		3246449	1					
ANR	3246597	Argument	ProxiesByFilename		3246449	0					
ANR	3246598	Identifier	ProxiesByFilename		3246449	0					
ANR	3246599	ExpressionStatement	master_proxy -> cached_expiration = master_proxy -> proxy -> expiration_time	915:1:24163:24233	3246449	12	True				
ANR	3246600	AssignmentExpression	master_proxy -> cached_expiration = master_proxy -> proxy -> expiration_time		3246449	0		=			
ANR	3246601	PtrMemberAccess	master_proxy -> cached_expiration		3246449	0					
ANR	3246602	Identifier	master_proxy		3246449	0					
ANR	3246603	Identifier	cached_expiration		3246449	1					
ANR	3246604	PtrMemberAccess	master_proxy -> proxy -> expiration_time		3246449	1					
ANR	3246605	PtrMemberAccess	master_proxy -> proxy		3246449	0					
ANR	3246606	Identifier	master_proxy		3246449	0					
ANR	3246607	Identifier	proxy		3246449	1					
ANR	3246608	Identifier	expiration_time		3246449	1					
ANR	3246609	ExpressionStatement	is_initialized = true	917:1:24237:24258	3246449	13	True				
ANR	3246610	AssignmentExpression	is_initialized = true		3246449	0		=			
ANR	3246611	Identifier	is_initialized		3246449	0					
ANR	3246612	Identifier	true		3246449	1					
ANR	3246613	ReturnStatement	return true ;	919:1:24262:24273	3246449	14	True				
ANR	3246614	Identifier	true		3246449	0					
ANR	3246615	ReturnType	bool		3246449	1					
ANR	3246616	Identifier	GahpServer :: Initialize		3246449	2					
ANR	3246617	ParameterList	Proxy * proxy		3246449	3					
ANR	3246618	Parameter	Proxy * proxy	870:24:22901:22912	3246449	0	True				
ANR	3246619	ParameterType	Proxy *		3246449	0					
ANR	3246620	Identifier	proxy		3246449	1					
ANR	3246621	CFGEntryNode	ENTRY		3246449		True				
ANR	3246622	CFGExitNode	EXIT		3246449		True				
ANR	3246623	Symbol	ProxiesByFilename		3246449						
ANR	3246624	Symbol	master_proxy -> proxy		3246449						
ANR	3246625	Symbol	master_proxy -> proxy -> proxy_filename		3246449						
ANR	3246626	Symbol	cacheProxyFromFile		3246449						
ANR	3246627	Symbol	master_proxy -> cached_expiration		3246449						
ANR	3246628	Symbol	m_commands_supported		3246449						
ANR	3246629	Symbol	m_gahp_pid		3246449						
ANR	3246630	Symbol	current_proxy		3246449						
ANR	3246631	Symbol	& GahpServer :: ProxyCallback		3246449						
ANR	3246632	Symbol	can_cache_proxies		3246449						
ANR	3246633	Symbol	& hashFunction		3246449						
ANR	3246634	Symbol	proxy -> subject -> master_proxy		3246449						
ANR	3246635	Symbol	proxy -> subject		3246449						
ANR	3246636	Symbol	* * proxy		3246449						
ANR	3246637	Symbol	command_initialize_from_file		3246449						
ANR	3246638	Symbol	m_commands_supported -> contains_anycase		3246449						
ANR	3246639	Symbol	false		3246449						
ANR	3246640	Symbol	this		3246449						
ANR	3246641	Symbol	D_ALWAYS		3246449						
ANR	3246642	Symbol	* m_commands_supported		3246449						
ANR	3246643	Symbol	* master_proxy		3246449						
ANR	3246644	Symbol	master_proxy -> proxy -> expiration_time		3246449						
ANR	3246645	Symbol	proxy		3246449						
ANR	3246646	Symbol	* master_proxy -> proxy		3246449						
ANR	3246647	Symbol	is_initialized		3246449						
ANR	3246648	Symbol	master_proxy		3246449						
ANR	3246649	Symbol	true		3246449						
ANR	3246650	Symbol	* proxy		3246449						
ANR	3246651	Symbol	* * master_proxy		3246449						
ANR	3246652	Symbol	* proxy -> subject		3246449						
ANR	3246653	Symbol	Startup		3246449						
ANR	3246654	Function	GahpServer :: cacheProxyFromFile	922:0:24278:24522							
ANR	3246655	FunctionDef	GahpServer :: cacheProxyFromFile (GahpProxyInfo * new_proxy)		3246654	0					
ANR	3246656	CompoundStatement		924:0:24342:24522	3246654	0					
ANR	3246657	IfStatement	if ( command_cache_proxy_from_file ( new_proxy ) == false )		3246654	0					
ANR	3246658	Condition	command_cache_proxy_from_file ( new_proxy ) == false	925:6:24350:24400	3246654	0	True				
ANR	3246659	EqualityExpression	command_cache_proxy_from_file ( new_proxy ) == false		3246654	0		==			
ANR	3246660	CallExpression	command_cache_proxy_from_file ( new_proxy )		3246654	0					
ANR	3246661	Callee	command_cache_proxy_from_file		3246654	0					
ANR	3246662	Identifier	command_cache_proxy_from_file		3246654	0					
ANR	3246663	ArgumentList	new_proxy		3246654	1					
ANR	3246664	Argument	new_proxy		3246654	0					
ANR	3246665	Identifier	new_proxy		3246654	0					
ANR	3246666	Identifier	false		3246654	1					
ANR	3246667	CompoundStatement		2:60:61:61	3246654	1					
ANR	3246668	ReturnStatement	return false ;	926:2:24408:24420	3246654	0	True				
ANR	3246669	Identifier	false		3246654	0					
ANR	3246670	IfStatement	if ( new_proxy == current_proxy )		3246654	1					
ANR	3246671	Condition	new_proxy == current_proxy	929:6:24432:24457	3246654	0	True				
ANR	3246672	EqualityExpression	new_proxy == current_proxy		3246654	0		==			
ANR	3246673	Identifier	new_proxy		3246654	0					
ANR	3246674	Identifier	current_proxy		3246654	1					
ANR	3246675	CompoundStatement		6:35:118:118	3246654	1					
ANR	3246676	ExpressionStatement	command_use_cached_proxy ( new_proxy )	930:2:24465:24502	3246654	0	True				
ANR	3246677	CallExpression	command_use_cached_proxy ( new_proxy )		3246654	0					
ANR	3246678	Callee	command_use_cached_proxy		3246654	0					
ANR	3246679	Identifier	command_use_cached_proxy		3246654	0					
ANR	3246680	ArgumentList	new_proxy		3246654	1					
ANR	3246681	Argument	new_proxy		3246654	0					
ANR	3246682	Identifier	new_proxy		3246654	0					
ANR	3246683	ReturnStatement	return true ;	933:1:24509:24520	3246654	2	True				
ANR	3246684	Identifier	true		3246654	0					
ANR	3246685	ReturnType	bool		3246654	1					
ANR	3246686	Identifier	GahpServer :: cacheProxyFromFile		3246654	2					
ANR	3246687	ParameterList	GahpProxyInfo * new_proxy		3246654	3					
ANR	3246688	Parameter	GahpProxyInfo * new_proxy	923:32:24315:24338	3246654	0	True				
ANR	3246689	ParameterType	GahpProxyInfo *		3246654	0					
ANR	3246690	Identifier	new_proxy		3246654	1					
ANR	3246691	CFGEntryNode	ENTRY		3246654		True				
ANR	3246692	CFGExitNode	EXIT		3246654		True				
ANR	3246693	Symbol	current_proxy		3246654						
ANR	3246694	Symbol	command_cache_proxy_from_file		3246654						
ANR	3246695	Symbol	false		3246654						
ANR	3246696	Symbol	true		3246654						
ANR	3246697	Symbol	new_proxy		3246654						
ANR	3246698	Function	GahpServer :: command_cache_proxy_from_file	936:0:24525:25324							
ANR	3246699	FunctionDef	GahpServer :: command_cache_proxy_from_file (GahpProxyInfo * new_proxy)		3246698	0					
ANR	3246700	CompoundStatement		938:0:24600:25324	3246698	0					
ANR	3246701	Statement	static	939:1:24603:24608	3246698	0	True				
ANR	3246702	IdentifierDeclStatement	"const char * command = ""CACHE_PROXY_FROM_FILE"" ;"	939:8:24610:24655	3246698	1	True				
ANR	3246703	IdentifierDecl	"* command = ""CACHE_PROXY_FROM_FILE"""		3246698	0					
ANR	3246704	IdentifierDeclType	const char *		3246698	0					
ANR	3246705	Identifier	command		3246698	1					
ANR	3246706	AssignmentExpression	"* command = ""CACHE_PROXY_FROM_FILE"""		3246698	2		=			
ANR	3246707	Identifier	command		3246698	0					
ANR	3246708	PrimaryExpression	"""CACHE_PROXY_FROM_FILE"""		3246698	1					
ANR	3246709	ExpressionStatement	ASSERT ( new_proxy )	941:1:24659:24676	3246698	2	True				
ANR	3246710	CallExpression	ASSERT ( new_proxy )		3246698	0					
ANR	3246711	Callee	ASSERT		3246698	0					
ANR	3246712	Identifier	ASSERT		3246698	0					
ANR	3246713	ArgumentList	new_proxy		3246698	1					
ANR	3246714	Argument	new_proxy		3246698	0					
ANR	3246715	Identifier	new_proxy		3246698	0					
ANR	3246716	IfStatement	if ( m_commands_supported -> contains_anycase ( command ) == FALSE )		3246698	3					
ANR	3246717	Condition	m_commands_supported -> contains_anycase ( command ) == FALSE	944:6:24746:24799	3246698	0	True				
ANR	3246718	EqualityExpression	m_commands_supported -> contains_anycase ( command ) == FALSE		3246698	0		==			
ANR	3246719	CallExpression	m_commands_supported -> contains_anycase ( command )		3246698	0					
ANR	3246720	Callee	m_commands_supported -> contains_anycase		3246698	0					
ANR	3246721	PtrMemberAccess	m_commands_supported -> contains_anycase		3246698	0					
ANR	3246722	Identifier	m_commands_supported		3246698	0					
ANR	3246723	Identifier	contains_anycase		3246698	1					
ANR	3246724	ArgumentList	command		3246698	1					
ANR	3246725	Argument	command		3246698	0					
ANR	3246726	Identifier	command		3246698	0					
ANR	3246727	Identifier	FALSE		3246698	1					
ANR	3246728	CompoundStatement		7:62:201:201	3246698	1					
ANR	3246729	ReturnStatement	return false ;	945:2:24806:24818	3246698	0	True				
ANR	3246730	Identifier	false		3246698	0					
ANR	3246731	IdentifierDeclStatement	std :: string buf ;	948:1:24825:24840	3246698	4	True				
ANR	3246732	IdentifierDecl	buf		3246698	0					
ANR	3246733	IdentifierDeclType	std :: string		3246698	0					
ANR	3246734	Identifier	buf		3246698	1					
ANR	3246735	IdentifierDeclStatement	"int x = sprintf ( buf , ""%s %d %s"" , command , new_proxy -> proxy -> id , escapeGahpString ( new_proxy -> proxy -> proxy_filename ) ) ;"	949:1:24843:24961	3246698	5	True				
ANR	3246736	IdentifierDecl	"x = sprintf ( buf , ""%s %d %s"" , command , new_proxy -> proxy -> id , escapeGahpString ( new_proxy -> proxy -> proxy_filename ) )"		3246698	0					
ANR	3246737	IdentifierDeclType	int		3246698	0					
ANR	3246738	Identifier	x		3246698	1					
ANR	3246739	AssignmentExpression	"x = sprintf ( buf , ""%s %d %s"" , command , new_proxy -> proxy -> id , escapeGahpString ( new_proxy -> proxy -> proxy_filename ) )"		3246698	2		=			
ANR	3246740	Identifier	x		3246698	0					
ANR	3246741	CallExpression	"sprintf ( buf , ""%s %d %s"" , command , new_proxy -> proxy -> id , escapeGahpString ( new_proxy -> proxy -> proxy_filename ) )"		3246698	1					
ANR	3246742	Callee	sprintf		3246698	0					
ANR	3246743	Identifier	sprintf		3246698	0					
ANR	3246744	ArgumentList	buf		3246698	1					
ANR	3246745	Argument	buf		3246698	0					
ANR	3246746	Identifier	buf		3246698	0					
ANR	3246747	Argument	"""%s %d %s"""		3246698	1					
ANR	3246748	PrimaryExpression	"""%s %d %s"""		3246698	0					
ANR	3246749	Argument	command		3246698	2					
ANR	3246750	Identifier	command		3246698	0					
ANR	3246751	Argument	new_proxy -> proxy -> id		3246698	3					
ANR	3246752	PtrMemberAccess	new_proxy -> proxy -> id		3246698	0					
ANR	3246753	PtrMemberAccess	new_proxy -> proxy		3246698	0					
ANR	3246754	Identifier	new_proxy		3246698	0					
ANR	3246755	Identifier	proxy		3246698	1					
ANR	3246756	Identifier	id		3246698	1					
ANR	3246757	Argument	escapeGahpString ( new_proxy -> proxy -> proxy_filename )		3246698	4					
ANR	3246758	CallExpression	escapeGahpString ( new_proxy -> proxy -> proxy_filename )		3246698	0					
ANR	3246759	Callee	escapeGahpString		3246698	0					
ANR	3246760	Identifier	escapeGahpString		3246698	0					
ANR	3246761	ArgumentList	new_proxy -> proxy -> proxy_filename		3246698	1					
ANR	3246762	Argument	new_proxy -> proxy -> proxy_filename		3246698	0					
ANR	3246763	PtrMemberAccess	new_proxy -> proxy -> proxy_filename		3246698	0					
ANR	3246764	PtrMemberAccess	new_proxy -> proxy		3246698	0					
ANR	3246765	Identifier	new_proxy		3246698	0					
ANR	3246766	Identifier	proxy		3246698	1					
ANR	3246767	Identifier	proxy_filename		3246698	1					
ANR	3246768	ExpressionStatement	ASSERT ( x > 0 )	951:1:24964:24979	3246698	6	True				
ANR	3246769	CallExpression	ASSERT ( x > 0 )		3246698	0					
ANR	3246770	Callee	ASSERT		3246698	0					
ANR	3246771	Identifier	ASSERT		3246698	0					
ANR	3246772	ArgumentList	x > 0		3246698	1					
ANR	3246773	Argument	x > 0		3246698	0					
ANR	3246774	RelationalExpression	x > 0		3246698	0		>			
ANR	3246775	Identifier	x		3246698	0					
ANR	3246776	PrimaryExpression	0		3246698	1					
ANR	3246777	ExpressionStatement	write_line ( buf . c_str ( ) )	952:1:24982:25005	3246698	7	True				
ANR	3246778	CallExpression	write_line ( buf . c_str ( ) )		3246698	0					
ANR	3246779	Callee	write_line		3246698	0					
ANR	3246780	Identifier	write_line		3246698	0					
ANR	3246781	ArgumentList	buf . c_str ( )		3246698	1					
ANR	3246782	Argument	buf . c_str ( )		3246698	0					
ANR	3246783	CallExpression	buf . c_str ( )		3246698	0					
ANR	3246784	Callee	buf . c_str		3246698	0					
ANR	3246785	MemberAccess	buf . c_str		3246698	0					
ANR	3246786	Identifier	buf		3246698	0					
ANR	3246787	Identifier	c_str		3246698	1					
ANR	3246788	ArgumentList			3246698	1					
ANR	3246789	IdentifierDeclStatement	Gahp_Args result ;	954:1:25009:25025	3246698	8	True				
ANR	3246790	IdentifierDecl	result		3246698	0					
ANR	3246791	IdentifierDeclType	Gahp_Args		3246698	0					
ANR	3246792	Identifier	result		3246698	1					
ANR	3246793	ExpressionStatement	read_argv ( result )	955:1:25028:25045	3246698	9	True				
ANR	3246794	CallExpression	read_argv ( result )		3246698	0					
ANR	3246795	Callee	read_argv		3246698	0					
ANR	3246796	Identifier	read_argv		3246698	0					
ANR	3246797	ArgumentList	result		3246698	1					
ANR	3246798	Argument	result		3246698	0					
ANR	3246799	Identifier	result		3246698	0					
ANR	3246800	IfStatement	if ( result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S' )		3246698	10					
ANR	3246801	Condition	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'	956:6:25053:25096	3246698	0	True				
ANR	3246802	OrExpression	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'		3246698	0		||			
ANR	3246803	EqualityExpression	result . argc == 0		3246698	0		==			
ANR	3246804	MemberAccess	result . argc		3246698	0					
ANR	3246805	Identifier	result		3246698	0					
ANR	3246806	Identifier	argc		3246698	1					
ANR	3246807	PrimaryExpression	0		3246698	1					
ANR	3246808	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3246698	1		!=			
ANR	3246809	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3246698	0					
ANR	3246810	ArrayIndexing	result . argv [ 0 ]		3246698	0					
ANR	3246811	MemberAccess	result . argv		3246698	0					
ANR	3246812	Identifier	result		3246698	0					
ANR	3246813	Identifier	argv		3246698	1					
ANR	3246814	PrimaryExpression	0		3246698	1					
ANR	3246815	PrimaryExpression	0		3246698	1					
ANR	3246816	PrimaryExpression	'S'		3246698	1					
ANR	3246817	CompoundStatement		20:2:503:515	3246698	1					
ANR	3246818	IdentifierDeclStatement	char * reason ;	957:2:25104:25116	3246698	0	True				
ANR	3246819	IdentifierDecl	* reason		3246698	0					
ANR	3246820	IdentifierDeclType	char *		3246698	0					
ANR	3246821	Identifier	reason		3246698	1					
ANR	3246822	IfStatement	if ( result . argc > 1 )		3246698	1					
ANR	3246823	Condition	result . argc > 1	958:7:25125:25139	3246698	0	True				
ANR	3246824	RelationalExpression	result . argc > 1		3246698	0		>			
ANR	3246825	MemberAccess	result . argc		3246698	0					
ANR	3246826	Identifier	result		3246698	0					
ANR	3246827	Identifier	argc		3246698	1					
ANR	3246828	PrimaryExpression	1		3246698	1					
ANR	3246829	CompoundStatement		21:25:542:542	3246698	1					
ANR	3246830	ExpressionStatement	reason = result . argv [ 1 ]	959:3:25148:25171	3246698	0	True				
ANR	3246831	AssignmentExpression	reason = result . argv [ 1 ]		3246698	0		=			
ANR	3246832	Identifier	reason		3246698	0					
ANR	3246833	ArrayIndexing	result . argv [ 1 ]		3246698	1					
ANR	3246834	MemberAccess	result . argv		3246698	0					
ANR	3246835	Identifier	result		3246698	0					
ANR	3246836	Identifier	argv		3246698	1					
ANR	3246837	PrimaryExpression	1		3246698	1					
ANR	3246838	ElseStatement	else		3246698	0					
ANR	3246839	CompoundStatement		23:9:581:581	3246698	0					
ANR	3246840	ExpressionStatement	"reason = ""Unspecified error"""	961:3:25187:25215	3246698	0	True				
ANR	3246841	AssignmentExpression	"reason = ""Unspecified error"""		3246698	0		=			
ANR	3246842	Identifier	reason		3246698	0					
ANR	3246843	PrimaryExpression	"""Unspecified error"""		3246698	1					
ANR	3246844	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"	963:2:25223:25288	3246698	2	True				
ANR	3246845	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"		3246698	0					
ANR	3246846	Callee	dprintf		3246698	0					
ANR	3246847	Identifier	dprintf		3246698	0					
ANR	3246848	ArgumentList	D_ALWAYS		3246698	1					
ANR	3246849	Argument	D_ALWAYS		3246698	0					
ANR	3246850	Identifier	D_ALWAYS		3246698	0					
ANR	3246851	Argument	"""GAHP command '%s' failed: %s\\n"""		3246698	1					
ANR	3246852	PrimaryExpression	"""GAHP command '%s' failed: %s\\n"""		3246698	0					
ANR	3246853	Argument	command		3246698	2					
ANR	3246854	Identifier	command		3246698	0					
ANR	3246855	Argument	reason		3246698	3					
ANR	3246856	Identifier	reason		3246698	0					
ANR	3246857	ReturnStatement	return false ;	964:2:25292:25304	3246698	3	True				
ANR	3246858	Identifier	false		3246698	0					
ANR	3246859	ReturnStatement	return true ;	967:1:25311:25322	3246698	11	True				
ANR	3246860	Identifier	true		3246698	0					
ANR	3246861	ReturnType	bool		3246698	1					
ANR	3246862	Identifier	GahpServer :: command_cache_proxy_from_file		3246698	2					
ANR	3246863	ParameterList	GahpProxyInfo * new_proxy		3246698	3					
ANR	3246864	Parameter	GahpProxyInfo * new_proxy	937:43:24573:24596	3246698	0	True				
ANR	3246865	ParameterType	GahpProxyInfo *		3246698	0					
ANR	3246866	Identifier	new_proxy		3246698	1					
ANR	3246867	CFGEntryNode	ENTRY		3246698		True				
ANR	3246868	CFGExitNode	EXIT		3246698		True				
ANR	3246869	Symbol	escapeGahpString		3246698						
ANR	3246870	Symbol	reason		3246698						
ANR	3246871	Symbol	* * new_proxy		3246698						
ANR	3246872	Symbol	m_commands_supported		3246698						
ANR	3246873	Symbol	new_proxy -> proxy -> proxy_filename		3246698						
ANR	3246874	Symbol	new_proxy		3246698						
ANR	3246875	Symbol	sprintf		3246698						
ANR	3246876	Symbol	new_proxy -> proxy		3246698						
ANR	3246877	Symbol	result		3246698						
ANR	3246878	Symbol	* result		3246698						
ANR	3246879	Symbol	buf . c_str		3246698						
ANR	3246880	Symbol	* new_proxy -> proxy		3246698						
ANR	3246881	Symbol	m_commands_supported -> contains_anycase		3246698						
ANR	3246882	Symbol	* * result . argv		3246698						
ANR	3246883	Symbol	false		3246698						
ANR	3246884	Symbol	D_ALWAYS		3246698						
ANR	3246885	Symbol	* * result		3246698						
ANR	3246886	Symbol	* m_commands_supported		3246698						
ANR	3246887	Symbol	* new_proxy		3246698						
ANR	3246888	Symbol	* result . argv		3246698						
ANR	3246889	Symbol	command		3246698						
ANR	3246890	Symbol	result . argv		3246698						
ANR	3246891	Symbol	buf		3246698						
ANR	3246892	Symbol	x		3246698						
ANR	3246893	Symbol	result . argc		3246698						
ANR	3246894	Symbol	true		3246698						
ANR	3246895	Symbol	new_proxy -> proxy -> id		3246698						
ANR	3246896	Symbol	FALSE		3246698						
ANR	3246897	Function	GahpServer :: uncacheProxy	970:0:25327:26151							
ANR	3246898	FunctionDef	GahpServer :: uncacheProxy (GahpProxyInfo * gahp_proxy)		3246897	0					
ANR	3246899	CompoundStatement		972:0:25386:26151	3246897	0					
ANR	3246900	Statement	static	973:1:25389:25394	3246897	0	True				
ANR	3246901	IdentifierDeclStatement	"const char * command = ""UNCACHE_PROXY"" ;"	973:8:25396:25433	3246897	1	True				
ANR	3246902	IdentifierDecl	"* command = ""UNCACHE_PROXY"""		3246897	0					
ANR	3246903	IdentifierDeclType	const char *		3246897	0					
ANR	3246904	Identifier	command		3246897	1					
ANR	3246905	AssignmentExpression	"* command = ""UNCACHE_PROXY"""		3246897	2		=			
ANR	3246906	Identifier	command		3246897	0					
ANR	3246907	PrimaryExpression	"""UNCACHE_PROXY"""		3246897	1					
ANR	3246908	IfStatement	if ( m_commands_supported -> contains_anycase ( command ) == FALSE )		3246897	2					
ANR	3246909	Condition	m_commands_supported -> contains_anycase ( command ) == FALSE	976:6:25482:25535	3246897	0	True				
ANR	3246910	EqualityExpression	m_commands_supported -> contains_anycase ( command ) == FALSE		3246897	0		==			
ANR	3246911	CallExpression	m_commands_supported -> contains_anycase ( command )		3246897	0					
ANR	3246912	Callee	m_commands_supported -> contains_anycase		3246897	0					
ANR	3246913	PtrMemberAccess	m_commands_supported -> contains_anycase		3246897	0					
ANR	3246914	Identifier	m_commands_supported		3246897	0					
ANR	3246915	Identifier	contains_anycase		3246897	1					
ANR	3246916	ArgumentList	command		3246897	1					
ANR	3246917	Argument	command		3246897	0					
ANR	3246918	Identifier	command		3246897	0					
ANR	3246919	Identifier	FALSE		3246897	1					
ANR	3246920	CompoundStatement		5:62:151:151	3246897	1					
ANR	3246921	ReturnStatement	return false ;	977:2:25542:25554	3246897	0	True				
ANR	3246922	Identifier	false		3246897	0					
ANR	3246923	IdentifierDeclStatement	std :: string buf ;	980:1:25561:25576	3246897	3	True				
ANR	3246924	IdentifierDecl	buf		3246897	0					
ANR	3246925	IdentifierDeclType	std :: string		3246897	0					
ANR	3246926	Identifier	buf		3246897	1					
ANR	3246927	IdentifierDeclStatement	"int x = sprintf ( buf , ""%s %d"" , command , gahp_proxy -> proxy -> id ) ;"	981:1:25579:25637	3246897	4	True				
ANR	3246928	IdentifierDecl	"x = sprintf ( buf , ""%s %d"" , command , gahp_proxy -> proxy -> id )"		3246897	0					
ANR	3246929	IdentifierDeclType	int		3246897	0					
ANR	3246930	Identifier	x		3246897	1					
ANR	3246931	AssignmentExpression	"x = sprintf ( buf , ""%s %d"" , command , gahp_proxy -> proxy -> id )"		3246897	2		=			
ANR	3246932	Identifier	x		3246897	0					
ANR	3246933	CallExpression	"sprintf ( buf , ""%s %d"" , command , gahp_proxy -> proxy -> id )"		3246897	1					
ANR	3246934	Callee	sprintf		3246897	0					
ANR	3246935	Identifier	sprintf		3246897	0					
ANR	3246936	ArgumentList	buf		3246897	1					
ANR	3246937	Argument	buf		3246897	0					
ANR	3246938	Identifier	buf		3246897	0					
ANR	3246939	Argument	"""%s %d"""		3246897	1					
ANR	3246940	PrimaryExpression	"""%s %d"""		3246897	0					
ANR	3246941	Argument	command		3246897	2					
ANR	3246942	Identifier	command		3246897	0					
ANR	3246943	Argument	gahp_proxy -> proxy -> id		3246897	3					
ANR	3246944	PtrMemberAccess	gahp_proxy -> proxy -> id		3246897	0					
ANR	3246945	PtrMemberAccess	gahp_proxy -> proxy		3246897	0					
ANR	3246946	Identifier	gahp_proxy		3246897	0					
ANR	3246947	Identifier	proxy		3246897	1					
ANR	3246948	Identifier	id		3246897	1					
ANR	3246949	ExpressionStatement	ASSERT ( x > 0 )	982:1:25640:25655	3246897	5	True				
ANR	3246950	CallExpression	ASSERT ( x > 0 )		3246897	0					
ANR	3246951	Callee	ASSERT		3246897	0					
ANR	3246952	Identifier	ASSERT		3246897	0					
ANR	3246953	ArgumentList	x > 0		3246897	1					
ANR	3246954	Argument	x > 0		3246897	0					
ANR	3246955	RelationalExpression	x > 0		3246897	0		>			
ANR	3246956	Identifier	x		3246897	0					
ANR	3246957	PrimaryExpression	0		3246897	1					
ANR	3246958	ExpressionStatement	write_line ( buf . c_str ( ) )	983:1:25658:25681	3246897	6	True				
ANR	3246959	CallExpression	write_line ( buf . c_str ( ) )		3246897	0					
ANR	3246960	Callee	write_line		3246897	0					
ANR	3246961	Identifier	write_line		3246897	0					
ANR	3246962	ArgumentList	buf . c_str ( )		3246897	1					
ANR	3246963	Argument	buf . c_str ( )		3246897	0					
ANR	3246964	CallExpression	buf . c_str ( )		3246897	0					
ANR	3246965	Callee	buf . c_str		3246897	0					
ANR	3246966	MemberAccess	buf . c_str		3246897	0					
ANR	3246967	Identifier	buf		3246897	0					
ANR	3246968	Identifier	c_str		3246897	1					
ANR	3246969	ArgumentList			3246897	1					
ANR	3246970	IdentifierDeclStatement	Gahp_Args result ;	985:1:25685:25701	3246897	7	True				
ANR	3246971	IdentifierDecl	result		3246897	0					
ANR	3246972	IdentifierDeclType	Gahp_Args		3246897	0					
ANR	3246973	Identifier	result		3246897	1					
ANR	3246974	ExpressionStatement	read_argv ( result )	986:1:25704:25721	3246897	8	True				
ANR	3246975	CallExpression	read_argv ( result )		3246897	0					
ANR	3246976	Callee	read_argv		3246897	0					
ANR	3246977	Identifier	read_argv		3246897	0					
ANR	3246978	ArgumentList	result		3246897	1					
ANR	3246979	Argument	result		3246897	0					
ANR	3246980	Identifier	result		3246897	0					
ANR	3246981	IfStatement	if ( result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S' )		3246897	9					
ANR	3246982	Condition	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'	987:6:25729:25772	3246897	0	True				
ANR	3246983	OrExpression	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'		3246897	0		||			
ANR	3246984	EqualityExpression	result . argc == 0		3246897	0		==			
ANR	3246985	MemberAccess	result . argc		3246897	0					
ANR	3246986	Identifier	result		3246897	0					
ANR	3246987	Identifier	argc		3246897	1					
ANR	3246988	PrimaryExpression	0		3246897	1					
ANR	3246989	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3246897	1		!=			
ANR	3246990	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3246897	0					
ANR	3246991	ArrayIndexing	result . argv [ 0 ]		3246897	0					
ANR	3246992	MemberAccess	result . argv		3246897	0					
ANR	3246993	Identifier	result		3246897	0					
ANR	3246994	Identifier	argv		3246897	1					
ANR	3246995	PrimaryExpression	0		3246897	1					
ANR	3246996	PrimaryExpression	0		3246897	1					
ANR	3246997	PrimaryExpression	'S'		3246897	1					
ANR	3246998	CompoundStatement		17:2:393:405	3246897	1					
ANR	3246999	IdentifierDeclStatement	char * reason ;	988:2:25780:25792	3246897	0	True				
ANR	3247000	IdentifierDecl	* reason		3246897	0					
ANR	3247001	IdentifierDeclType	char *		3246897	0					
ANR	3247002	Identifier	reason		3246897	1					
ANR	3247003	IfStatement	if ( result . argc > 1 )		3246897	1					
ANR	3247004	Condition	result . argc > 1	989:7:25801:25815	3246897	0	True				
ANR	3247005	RelationalExpression	result . argc > 1		3246897	0		>			
ANR	3247006	MemberAccess	result . argc		3246897	0					
ANR	3247007	Identifier	result		3246897	0					
ANR	3247008	Identifier	argc		3246897	1					
ANR	3247009	PrimaryExpression	1		3246897	1					
ANR	3247010	CompoundStatement		18:25:432:432	3246897	1					
ANR	3247011	ExpressionStatement	reason = result . argv [ 1 ]	990:3:25824:25847	3246897	0	True				
ANR	3247012	AssignmentExpression	reason = result . argv [ 1 ]		3246897	0		=			
ANR	3247013	Identifier	reason		3246897	0					
ANR	3247014	ArrayIndexing	result . argv [ 1 ]		3246897	1					
ANR	3247015	MemberAccess	result . argv		3246897	0					
ANR	3247016	Identifier	result		3246897	0					
ANR	3247017	Identifier	argv		3246897	1					
ANR	3247018	PrimaryExpression	1		3246897	1					
ANR	3247019	ElseStatement	else		3246897	0					
ANR	3247020	CompoundStatement		20:9:471:471	3246897	0					
ANR	3247021	ExpressionStatement	"reason = ""Unspecified error"""	992:3:25863:25891	3246897	0	True				
ANR	3247022	AssignmentExpression	"reason = ""Unspecified error"""		3246897	0		=			
ANR	3247023	Identifier	reason		3246897	0					
ANR	3247024	PrimaryExpression	"""Unspecified error"""		3246897	1					
ANR	3247025	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"	994:2:25899:25964	3246897	2	True				
ANR	3247026	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"		3246897	0					
ANR	3247027	Callee	dprintf		3246897	0					
ANR	3247028	Identifier	dprintf		3246897	0					
ANR	3247029	ArgumentList	D_ALWAYS		3246897	1					
ANR	3247030	Argument	D_ALWAYS		3246897	0					
ANR	3247031	Identifier	D_ALWAYS		3246897	0					
ANR	3247032	Argument	"""GAHP command '%s' failed: %s\\n"""		3246897	1					
ANR	3247033	PrimaryExpression	"""GAHP command '%s' failed: %s\\n"""		3246897	0					
ANR	3247034	Argument	command		3246897	2					
ANR	3247035	Identifier	command		3246897	0					
ANR	3247036	Argument	reason		3246897	3					
ANR	3247037	Identifier	reason		3246897	0					
ANR	3247038	ReturnStatement	return false ;	995:2:25968:25980	3246897	3	True				
ANR	3247039	Identifier	false		3246897	0					
ANR	3247040	IfStatement	if ( current_proxy == gahp_proxy )		3246897	10					
ANR	3247041	Condition	current_proxy == gahp_proxy	998:6:25992:26018	3246897	0	True				
ANR	3247042	EqualityExpression	current_proxy == gahp_proxy		3246897	0		==			
ANR	3247043	Identifier	current_proxy		3246897	0					
ANR	3247044	Identifier	gahp_proxy		3246897	1					
ANR	3247045	CompoundStatement		27:36:635:635	3246897	1					
ANR	3247046	IfStatement	if ( useCachedProxy ( master_proxy ) == false )		3246897	0					
ANR	3247047	Condition	useCachedProxy ( master_proxy ) == false	999:7:26031:26069	3246897	0	True				
ANR	3247048	EqualityExpression	useCachedProxy ( master_proxy ) == false		3246897	0		==			
ANR	3247049	CallExpression	useCachedProxy ( master_proxy )		3246897	0					
ANR	3247050	Callee	useCachedProxy		3246897	0					
ANR	3247051	Identifier	useCachedProxy		3246897	0					
ANR	3247052	ArgumentList	master_proxy		3246897	1					
ANR	3247053	Argument	master_proxy		3246897	0					
ANR	3247054	Identifier	master_proxy		3246897	0					
ANR	3247055	Identifier	false		3246897	1					
ANR	3247056	CompoundStatement		28:49:686:686	3246897	1					
ANR	3247057	ExpressionStatement	"EXCEPT ( ""useCachedProxy failed in uncacheProxy"" )"	1000:3:26078:26127	3246897	0	True				
ANR	3247058	CallExpression	"EXCEPT ( ""useCachedProxy failed in uncacheProxy"" )"		3246897	0					
ANR	3247059	Callee	EXCEPT		3246897	0					
ANR	3247060	Identifier	EXCEPT		3246897	0					
ANR	3247061	ArgumentList	"""useCachedProxy failed in uncacheProxy"""		3246897	1					
ANR	3247062	Argument	"""useCachedProxy failed in uncacheProxy"""		3246897	0					
ANR	3247063	PrimaryExpression	"""useCachedProxy failed in uncacheProxy"""		3246897	0					
ANR	3247064	ReturnStatement	return true ;	1004:1:26138:26149	3246897	11	True				
ANR	3247065	Identifier	true		3246897	0					
ANR	3247066	ReturnType	bool		3246897	1					
ANR	3247067	Identifier	GahpServer :: uncacheProxy		3246897	2					
ANR	3247068	ParameterList	GahpProxyInfo * gahp_proxy		3246897	3					
ANR	3247069	Parameter	GahpProxyInfo * gahp_proxy	971:26:25358:25382	3246897	0	True				
ANR	3247070	ParameterType	GahpProxyInfo *		3246897	0					
ANR	3247071	Identifier	gahp_proxy		3246897	1					
ANR	3247072	CFGEntryNode	ENTRY		3246897		True				
ANR	3247073	CFGExitNode	EXIT		3246897		True				
ANR	3247074	Symbol	reason		3246897						
ANR	3247075	Symbol	m_commands_supported		3246897						
ANR	3247076	Symbol	sprintf		3246897						
ANR	3247077	Symbol	result		3246897						
ANR	3247078	Symbol	current_proxy		3246897						
ANR	3247079	Symbol	* result		3246897						
ANR	3247080	Symbol	buf . c_str		3246897						
ANR	3247081	Symbol	* * gahp_proxy		3246897						
ANR	3247082	Symbol	* gahp_proxy -> proxy		3246897						
ANR	3247083	Symbol	useCachedProxy		3246897						
ANR	3247084	Symbol	* gahp_proxy		3246897						
ANR	3247085	Symbol	m_commands_supported -> contains_anycase		3246897						
ANR	3247086	Symbol	* * result . argv		3246897						
ANR	3247087	Symbol	false		3246897						
ANR	3247088	Symbol	D_ALWAYS		3246897						
ANR	3247089	Symbol	* * result		3246897						
ANR	3247090	Symbol	* m_commands_supported		3246897						
ANR	3247091	Symbol	gahp_proxy -> proxy		3246897						
ANR	3247092	Symbol	* result . argv		3246897						
ANR	3247093	Symbol	command		3246897						
ANR	3247094	Symbol	result . argv		3246897						
ANR	3247095	Symbol	buf		3246897						
ANR	3247096	Symbol	gahp_proxy -> proxy -> id		3246897						
ANR	3247097	Symbol	master_proxy		3246897						
ANR	3247098	Symbol	x		3246897						
ANR	3247099	Symbol	result . argc		3246897						
ANR	3247100	Symbol	true		3246897						
ANR	3247101	Symbol	FALSE		3246897						
ANR	3247102	Symbol	gahp_proxy		3246897						
ANR	3247103	Function	GahpServer :: useCachedProxy	1007:0:26154:27065							
ANR	3247104	FunctionDef	"GahpServer :: useCachedProxy (GahpProxyInfo * new_proxy , bool force)"		3247103	0					
ANR	3247105	CompoundStatement		1009:0:26226:27065	3247103	0					
ANR	3247106	IfStatement	if ( new_proxy == NULL )		3247103	0					
ANR	3247107	Condition	new_proxy == NULL	1012:6:26355:26371	3247103	0	True				
ANR	3247108	EqualityExpression	new_proxy == NULL		3247103	0		==			
ANR	3247109	Identifier	new_proxy		3247103	0					
ANR	3247110	Identifier	NULL		3247103	1					
ANR	3247111	CompoundStatement		4:26:148:148	3247103	1					
ANR	3247112	ExpressionStatement	new_proxy = current_proxy	1013:2:26379:26404	3247103	0	True				
ANR	3247113	AssignmentExpression	new_proxy = current_proxy		3247103	0		=			
ANR	3247114	Identifier	new_proxy		3247103	0					
ANR	3247115	Identifier	current_proxy		3247103	1					
ANR	3247116	IfStatement	if ( new_proxy -> cached_expiration != new_proxy -> proxy -> expiration_time )		3247103	1					
ANR	3247117	Condition	new_proxy -> cached_expiration != new_proxy -> proxy -> expiration_time	1018:6:26513:26577	3247103	0	True				
ANR	3247118	EqualityExpression	new_proxy -> cached_expiration != new_proxy -> proxy -> expiration_time		3247103	0		!=			
ANR	3247119	PtrMemberAccess	new_proxy -> cached_expiration		3247103	0					
ANR	3247120	Identifier	new_proxy		3247103	0					
ANR	3247121	Identifier	cached_expiration		3247103	1					
ANR	3247122	PtrMemberAccess	new_proxy -> proxy -> expiration_time		3247103	1					
ANR	3247123	PtrMemberAccess	new_proxy -> proxy		3247103	0					
ANR	3247124	Identifier	new_proxy		3247103	0					
ANR	3247125	Identifier	proxy		3247103	1					
ANR	3247126	Identifier	expiration_time		3247103	1					
ANR	3247127	CompoundStatement		10:74:354:354	3247103	1					
ANR	3247128	IfStatement	if ( command_cache_proxy_from_file ( new_proxy ) == false )		3247103	0					
ANR	3247129	Condition	command_cache_proxy_from_file ( new_proxy ) == false	1019:7:26590:26640	3247103	0	True				
ANR	3247130	EqualityExpression	command_cache_proxy_from_file ( new_proxy ) == false		3247103	0		==			
ANR	3247131	CallExpression	command_cache_proxy_from_file ( new_proxy )		3247103	0					
ANR	3247132	Callee	command_cache_proxy_from_file		3247103	0					
ANR	3247133	Identifier	command_cache_proxy_from_file		3247103	0					
ANR	3247134	ArgumentList	new_proxy		3247103	1					
ANR	3247135	Argument	new_proxy		3247103	0					
ANR	3247136	Identifier	new_proxy		3247103	0					
ANR	3247137	Identifier	false		3247103	1					
ANR	3247138	CompoundStatement		11:61:417:417	3247103	1					
ANR	3247139	ExpressionStatement	"EXCEPT ( ""Failed to recache proxy!"" )"	1020:3:26649:26685	3247103	0	True				
ANR	3247140	CallExpression	"EXCEPT ( ""Failed to recache proxy!"" )"		3247103	0					
ANR	3247141	Callee	EXCEPT		3247103	0					
ANR	3247142	Identifier	EXCEPT		3247103	0					
ANR	3247143	ArgumentList	"""Failed to recache proxy!"""		3247103	1					
ANR	3247144	Argument	"""Failed to recache proxy!"""		3247103	0					
ANR	3247145	PrimaryExpression	"""Failed to recache proxy!"""		3247103	0					
ANR	3247146	ExpressionStatement	new_proxy -> cached_expiration = new_proxy -> proxy -> expiration_time	1022:2:26693:26757	3247103	1	True				
ANR	3247147	AssignmentExpression	new_proxy -> cached_expiration = new_proxy -> proxy -> expiration_time		3247103	0		=			
ANR	3247148	PtrMemberAccess	new_proxy -> cached_expiration		3247103	0					
ANR	3247149	Identifier	new_proxy		3247103	0					
ANR	3247150	Identifier	cached_expiration		3247103	1					
ANR	3247151	PtrMemberAccess	new_proxy -> proxy -> expiration_time		3247103	1					
ANR	3247152	PtrMemberAccess	new_proxy -> proxy		3247103	0					
ANR	3247153	Identifier	new_proxy		3247103	0					
ANR	3247154	Identifier	proxy		3247103	1					
ANR	3247155	Identifier	expiration_time		3247103	1					
ANR	3247156	ExpressionStatement	force = true	1025:2:26853:26865	3247103	2	True				
ANR	3247157	AssignmentExpression	force = true		3247103	0		=			
ANR	3247158	Identifier	force		3247103	0					
ANR	3247159	Identifier	true		3247103	1					
ANR	3247160	IfStatement	if ( force == false && new_proxy == current_proxy )		3247103	2					
ANR	3247161	Condition	force == false && new_proxy == current_proxy	1028:6:26877:26920	3247103	0	True				
ANR	3247162	AndExpression	force == false && new_proxy == current_proxy		3247103	0		&&			
ANR	3247163	EqualityExpression	force == false		3247103	0		==			
ANR	3247164	Identifier	force		3247103	0					
ANR	3247165	Identifier	false		3247103	1					
ANR	3247166	EqualityExpression	new_proxy == current_proxy		3247103	1		==			
ANR	3247167	Identifier	new_proxy		3247103	0					
ANR	3247168	Identifier	current_proxy		3247103	1					
ANR	3247169	CompoundStatement		20:53:697:697	3247103	1					
ANR	3247170	ReturnStatement	return true ;	1029:2:26928:26939	3247103	0	True				
ANR	3247171	Identifier	true		3247103	0					
ANR	3247172	IfStatement	if ( command_use_cached_proxy ( new_proxy ) == false )		3247103	3					
ANR	3247173	Condition	command_use_cached_proxy ( new_proxy ) == false	1032:6:26951:26996	3247103	0	True				
ANR	3247174	EqualityExpression	command_use_cached_proxy ( new_proxy ) == false		3247103	0		==			
ANR	3247175	CallExpression	command_use_cached_proxy ( new_proxy )		3247103	0					
ANR	3247176	Callee	command_use_cached_proxy		3247103	0					
ANR	3247177	Identifier	command_use_cached_proxy		3247103	0					
ANR	3247178	ArgumentList	new_proxy		3247103	1					
ANR	3247179	Argument	new_proxy		3247103	0					
ANR	3247180	Identifier	new_proxy		3247103	0					
ANR	3247181	Identifier	false		3247103	1					
ANR	3247182	CompoundStatement		24:55:773:773	3247103	1					
ANR	3247183	ReturnStatement	return false ;	1033:2:27004:27016	3247103	0	True				
ANR	3247184	Identifier	false		3247103	0					
ANR	3247185	ExpressionStatement	current_proxy = new_proxy	1036:1:27023:27048	3247103	4	True				
ANR	3247186	AssignmentExpression	current_proxy = new_proxy		3247103	0		=			
ANR	3247187	Identifier	current_proxy		3247103	0					
ANR	3247188	Identifier	new_proxy		3247103	1					
ANR	3247189	ReturnStatement	return true ;	1038:1:27052:27063	3247103	5	True				
ANR	3247190	Identifier	true		3247103	0					
ANR	3247191	ReturnType	bool		3247103	1					
ANR	3247192	Identifier	GahpServer :: useCachedProxy		3247103	2					
ANR	3247193	ParameterList	"GahpProxyInfo * new_proxy , bool force"		3247103	3					
ANR	3247194	Parameter	GahpProxyInfo * new_proxy	1008:28:26187:26210	3247103	0	True				
ANR	3247195	ParameterType	GahpProxyInfo *		3247103	0					
ANR	3247196	Identifier	new_proxy		3247103	1					
ANR	3247197	Parameter	bool force	1008:54:26213:26222	3247103	1	True				
ANR	3247198	ParameterType	bool		3247103	0					
ANR	3247199	Identifier	force		3247103	1					
ANR	3247200	CFGEntryNode	ENTRY		3247103		True				
ANR	3247201	CFGExitNode	EXIT		3247103		True				
ANR	3247202	Symbol	command_cache_proxy_from_file		3247103						
ANR	3247203	Symbol	NULL		3247103						
ANR	3247204	Symbol	* * new_proxy		3247103						
ANR	3247205	Symbol	false		3247103						
ANR	3247206	Symbol	* new_proxy		3247103						
ANR	3247207	Symbol	new_proxy		3247103						
ANR	3247208	Symbol	current_proxy		3247103						
ANR	3247209	Symbol	new_proxy -> proxy		3247103						
ANR	3247210	Symbol	true		3247103						
ANR	3247211	Symbol	force		3247103						
ANR	3247212	Symbol	new_proxy -> cached_expiration		3247103						
ANR	3247213	Symbol	command_use_cached_proxy		3247103						
ANR	3247214	Symbol	new_proxy -> proxy -> expiration_time		3247103						
ANR	3247215	Symbol	* new_proxy -> proxy		3247103						
ANR	3247216	Function	GahpServer :: command_use_cached_proxy	1041:0:27068:27802							
ANR	3247217	FunctionDef	GahpServer :: command_use_cached_proxy (GahpProxyInfo * new_proxy)		3247216	0					
ANR	3247218	CompoundStatement		1043:0:27138:27802	3247216	0					
ANR	3247219	Statement	static	1044:1:27141:27146	3247216	0	True				
ANR	3247220	IdentifierDeclStatement	"const char * command = ""USE_CACHED_PROXY"" ;"	1044:8:27148:27188	3247216	1	True				
ANR	3247221	IdentifierDecl	"* command = ""USE_CACHED_PROXY"""		3247216	0					
ANR	3247222	IdentifierDeclType	const char *		3247216	0					
ANR	3247223	Identifier	command		3247216	1					
ANR	3247224	AssignmentExpression	"* command = ""USE_CACHED_PROXY"""		3247216	2		=			
ANR	3247225	Identifier	command		3247216	0					
ANR	3247226	PrimaryExpression	"""USE_CACHED_PROXY"""		3247216	1					
ANR	3247227	IfStatement	if ( m_commands_supported -> contains_anycase ( command ) == FALSE )		3247216	2					
ANR	3247228	Condition	m_commands_supported -> contains_anycase ( command ) == FALSE	1047:6:27237:27290	3247216	0	True				
ANR	3247229	EqualityExpression	m_commands_supported -> contains_anycase ( command ) == FALSE		3247216	0		==			
ANR	3247230	CallExpression	m_commands_supported -> contains_anycase ( command )		3247216	0					
ANR	3247231	Callee	m_commands_supported -> contains_anycase		3247216	0					
ANR	3247232	PtrMemberAccess	m_commands_supported -> contains_anycase		3247216	0					
ANR	3247233	Identifier	m_commands_supported		3247216	0					
ANR	3247234	Identifier	contains_anycase		3247216	1					
ANR	3247235	ArgumentList	command		3247216	1					
ANR	3247236	Argument	command		3247216	0					
ANR	3247237	Identifier	command		3247216	0					
ANR	3247238	Identifier	FALSE		3247216	1					
ANR	3247239	CompoundStatement		5:62:154:154	3247216	1					
ANR	3247240	ReturnStatement	return false ;	1048:2:27297:27309	3247216	0	True				
ANR	3247241	Identifier	false		3247216	0					
ANR	3247242	IfStatement	if ( new_proxy == NULL )		3247216	3					
ANR	3247243	Condition	new_proxy == NULL	1051:6:27321:27337	3247216	0	True				
ANR	3247244	EqualityExpression	new_proxy == NULL		3247216	0		==			
ANR	3247245	Identifier	new_proxy		3247216	0					
ANR	3247246	Identifier	NULL		3247216	1					
ANR	3247247	CompoundStatement		9:26:202:202	3247216	1					
ANR	3247248	ReturnStatement	return false ;	1052:2:27345:27357	3247216	0	True				
ANR	3247249	Identifier	false		3247216	0					
ANR	3247250	IdentifierDeclStatement	std :: string buf ;	1055:1:27364:27379	3247216	4	True				
ANR	3247251	IdentifierDecl	buf		3247216	0					
ANR	3247252	IdentifierDeclType	std :: string		3247216	0					
ANR	3247253	Identifier	buf		3247216	1					
ANR	3247254	IdentifierDeclStatement	"int x = sprintf ( buf , ""%s %d"" , command , new_proxy -> proxy -> id ) ;"	1056:1:27382:27439	3247216	5	True				
ANR	3247255	IdentifierDecl	"x = sprintf ( buf , ""%s %d"" , command , new_proxy -> proxy -> id )"		3247216	0					
ANR	3247256	IdentifierDeclType	int		3247216	0					
ANR	3247257	Identifier	x		3247216	1					
ANR	3247258	AssignmentExpression	"x = sprintf ( buf , ""%s %d"" , command , new_proxy -> proxy -> id )"		3247216	2		=			
ANR	3247259	Identifier	x		3247216	0					
ANR	3247260	CallExpression	"sprintf ( buf , ""%s %d"" , command , new_proxy -> proxy -> id )"		3247216	1					
ANR	3247261	Callee	sprintf		3247216	0					
ANR	3247262	Identifier	sprintf		3247216	0					
ANR	3247263	ArgumentList	buf		3247216	1					
ANR	3247264	Argument	buf		3247216	0					
ANR	3247265	Identifier	buf		3247216	0					
ANR	3247266	Argument	"""%s %d"""		3247216	1					
ANR	3247267	PrimaryExpression	"""%s %d"""		3247216	0					
ANR	3247268	Argument	command		3247216	2					
ANR	3247269	Identifier	command		3247216	0					
ANR	3247270	Argument	new_proxy -> proxy -> id		3247216	3					
ANR	3247271	PtrMemberAccess	new_proxy -> proxy -> id		3247216	0					
ANR	3247272	PtrMemberAccess	new_proxy -> proxy		3247216	0					
ANR	3247273	Identifier	new_proxy		3247216	0					
ANR	3247274	Identifier	proxy		3247216	1					
ANR	3247275	Identifier	id		3247216	1					
ANR	3247276	ExpressionStatement	ASSERT ( x > 0 )	1057:1:27442:27457	3247216	6	True				
ANR	3247277	CallExpression	ASSERT ( x > 0 )		3247216	0					
ANR	3247278	Callee	ASSERT		3247216	0					
ANR	3247279	Identifier	ASSERT		3247216	0					
ANR	3247280	ArgumentList	x > 0		3247216	1					
ANR	3247281	Argument	x > 0		3247216	0					
ANR	3247282	RelationalExpression	x > 0		3247216	0		>			
ANR	3247283	Identifier	x		3247216	0					
ANR	3247284	PrimaryExpression	0		3247216	1					
ANR	3247285	ExpressionStatement	write_line ( buf . c_str ( ) )	1058:1:27460:27483	3247216	7	True				
ANR	3247286	CallExpression	write_line ( buf . c_str ( ) )		3247216	0					
ANR	3247287	Callee	write_line		3247216	0					
ANR	3247288	Identifier	write_line		3247216	0					
ANR	3247289	ArgumentList	buf . c_str ( )		3247216	1					
ANR	3247290	Argument	buf . c_str ( )		3247216	0					
ANR	3247291	CallExpression	buf . c_str ( )		3247216	0					
ANR	3247292	Callee	buf . c_str		3247216	0					
ANR	3247293	MemberAccess	buf . c_str		3247216	0					
ANR	3247294	Identifier	buf		3247216	0					
ANR	3247295	Identifier	c_str		3247216	1					
ANR	3247296	ArgumentList			3247216	1					
ANR	3247297	IdentifierDeclStatement	Gahp_Args result ;	1060:1:27487:27503	3247216	8	True				
ANR	3247298	IdentifierDecl	result		3247216	0					
ANR	3247299	IdentifierDeclType	Gahp_Args		3247216	0					
ANR	3247300	Identifier	result		3247216	1					
ANR	3247301	ExpressionStatement	read_argv ( result )	1061:1:27506:27523	3247216	9	True				
ANR	3247302	CallExpression	read_argv ( result )		3247216	0					
ANR	3247303	Callee	read_argv		3247216	0					
ANR	3247304	Identifier	read_argv		3247216	0					
ANR	3247305	ArgumentList	result		3247216	1					
ANR	3247306	Argument	result		3247216	0					
ANR	3247307	Identifier	result		3247216	0					
ANR	3247308	IfStatement	if ( result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S' )		3247216	10					
ANR	3247309	Condition	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'	1062:6:27531:27574	3247216	0	True				
ANR	3247310	OrExpression	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'		3247216	0		||			
ANR	3247311	EqualityExpression	result . argc == 0		3247216	0		==			
ANR	3247312	MemberAccess	result . argc		3247216	0					
ANR	3247313	Identifier	result		3247216	0					
ANR	3247314	Identifier	argc		3247216	1					
ANR	3247315	PrimaryExpression	0		3247216	1					
ANR	3247316	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3247216	1		!=			
ANR	3247317	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3247216	0					
ANR	3247318	ArrayIndexing	result . argv [ 0 ]		3247216	0					
ANR	3247319	MemberAccess	result . argv		3247216	0					
ANR	3247320	Identifier	result		3247216	0					
ANR	3247321	Identifier	argv		3247216	1					
ANR	3247322	PrimaryExpression	0		3247216	1					
ANR	3247323	PrimaryExpression	0		3247216	1					
ANR	3247324	PrimaryExpression	'S'		3247216	1					
ANR	3247325	CompoundStatement		21:2:443:455	3247216	1					
ANR	3247326	IdentifierDeclStatement	char * reason ;	1063:2:27582:27594	3247216	0	True				
ANR	3247327	IdentifierDecl	* reason		3247216	0					
ANR	3247328	IdentifierDeclType	char *		3247216	0					
ANR	3247329	Identifier	reason		3247216	1					
ANR	3247330	IfStatement	if ( result . argc > 1 )		3247216	1					
ANR	3247331	Condition	result . argc > 1	1064:7:27603:27617	3247216	0	True				
ANR	3247332	RelationalExpression	result . argc > 1		3247216	0		>			
ANR	3247333	MemberAccess	result . argc		3247216	0					
ANR	3247334	Identifier	result		3247216	0					
ANR	3247335	Identifier	argc		3247216	1					
ANR	3247336	PrimaryExpression	1		3247216	1					
ANR	3247337	CompoundStatement		22:25:482:482	3247216	1					
ANR	3247338	ExpressionStatement	reason = result . argv [ 1 ]	1065:3:27626:27649	3247216	0	True				
ANR	3247339	AssignmentExpression	reason = result . argv [ 1 ]		3247216	0		=			
ANR	3247340	Identifier	reason		3247216	0					
ANR	3247341	ArrayIndexing	result . argv [ 1 ]		3247216	1					
ANR	3247342	MemberAccess	result . argv		3247216	0					
ANR	3247343	Identifier	result		3247216	0					
ANR	3247344	Identifier	argv		3247216	1					
ANR	3247345	PrimaryExpression	1		3247216	1					
ANR	3247346	ElseStatement	else		3247216	0					
ANR	3247347	CompoundStatement		24:9:521:521	3247216	0					
ANR	3247348	ExpressionStatement	"reason = ""Unspecified error"""	1067:3:27665:27693	3247216	0	True				
ANR	3247349	AssignmentExpression	"reason = ""Unspecified error"""		3247216	0		=			
ANR	3247350	Identifier	reason		3247216	0					
ANR	3247351	PrimaryExpression	"""Unspecified error"""		3247216	1					
ANR	3247352	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"	1069:2:27701:27766	3247216	2	True				
ANR	3247353	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"		3247216	0					
ANR	3247354	Callee	dprintf		3247216	0					
ANR	3247355	Identifier	dprintf		3247216	0					
ANR	3247356	ArgumentList	D_ALWAYS		3247216	1					
ANR	3247357	Argument	D_ALWAYS		3247216	0					
ANR	3247358	Identifier	D_ALWAYS		3247216	0					
ANR	3247359	Argument	"""GAHP command '%s' failed: %s\\n"""		3247216	1					
ANR	3247360	PrimaryExpression	"""GAHP command '%s' failed: %s\\n"""		3247216	0					
ANR	3247361	Argument	command		3247216	2					
ANR	3247362	Identifier	command		3247216	0					
ANR	3247363	Argument	reason		3247216	3					
ANR	3247364	Identifier	reason		3247216	0					
ANR	3247365	ReturnStatement	return false ;	1070:2:27770:27782	3247216	3	True				
ANR	3247366	Identifier	false		3247216	0					
ANR	3247367	ReturnStatement	return true ;	1073:1:27789:27800	3247216	11	True				
ANR	3247368	Identifier	true		3247216	0					
ANR	3247369	ReturnType	bool		3247216	1					
ANR	3247370	Identifier	GahpServer :: command_use_cached_proxy		3247216	2					
ANR	3247371	ParameterList	GahpProxyInfo * new_proxy		3247216	3					
ANR	3247372	Parameter	GahpProxyInfo * new_proxy	1042:38:27111:27134	3247216	0	True				
ANR	3247373	ParameterType	GahpProxyInfo *		3247216	0					
ANR	3247374	Identifier	new_proxy		3247216	1					
ANR	3247375	CFGEntryNode	ENTRY		3247216		True				
ANR	3247376	CFGExitNode	EXIT		3247216		True				
ANR	3247377	Symbol	reason		3247216						
ANR	3247378	Symbol	* * new_proxy		3247216						
ANR	3247379	Symbol	m_commands_supported		3247216						
ANR	3247380	Symbol	new_proxy		3247216						
ANR	3247381	Symbol	sprintf		3247216						
ANR	3247382	Symbol	new_proxy -> proxy		3247216						
ANR	3247383	Symbol	result		3247216						
ANR	3247384	Symbol	* result		3247216						
ANR	3247385	Symbol	buf . c_str		3247216						
ANR	3247386	Symbol	* new_proxy -> proxy		3247216						
ANR	3247387	Symbol	NULL		3247216						
ANR	3247388	Symbol	m_commands_supported -> contains_anycase		3247216						
ANR	3247389	Symbol	* * result . argv		3247216						
ANR	3247390	Symbol	false		3247216						
ANR	3247391	Symbol	D_ALWAYS		3247216						
ANR	3247392	Symbol	* * result		3247216						
ANR	3247393	Symbol	* m_commands_supported		3247216						
ANR	3247394	Symbol	* new_proxy		3247216						
ANR	3247395	Symbol	* result . argv		3247216						
ANR	3247396	Symbol	command		3247216						
ANR	3247397	Symbol	result . argv		3247216						
ANR	3247398	Symbol	buf		3247216						
ANR	3247399	Symbol	x		3247216						
ANR	3247400	Symbol	result . argc		3247216						
ANR	3247401	Symbol	true		3247216						
ANR	3247402	Symbol	new_proxy -> proxy -> id		3247216						
ANR	3247403	Symbol	FALSE		3247216						
ANR	3247404	Function	GahpServer :: ProxyCallback	1076:0:27805:28035							
ANR	3247405	FunctionDef	GahpServer :: ProxyCallback ()		3247404	0					
ANR	3247406	CompoundStatement		1078:0:27837:28035	3247404	0					
ANR	3247407	IfStatement	if ( m_gahp_pid > 0 )		3247404	0					
ANR	3247408	Condition	m_gahp_pid > 0	1079:6:27845:27858	3247404	0	True				
ANR	3247409	RelationalExpression	m_gahp_pid > 0		3247404	0		>			
ANR	3247410	Identifier	m_gahp_pid		3247404	0					
ANR	3247411	PrimaryExpression	0		3247404	1					
ANR	3247412	CompoundStatement		2:23:24:24	3247404	1					
ANR	3247413	ExpressionStatement	"proxy_check_tid = daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & GahpServer :: doProxyCheck , ""GahpServer::doProxyCheck"" , ( Service * ) this )"	1080:2:27866:28019	3247404	0	True				
ANR	3247414	AssignmentExpression	"proxy_check_tid = daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & GahpServer :: doProxyCheck , ""GahpServer::doProxyCheck"" , ( Service * ) this )"		3247404	0		=			
ANR	3247415	Identifier	proxy_check_tid		3247404	0					
ANR	3247416	CallExpression	"daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & GahpServer :: doProxyCheck , ""GahpServer::doProxyCheck"" , ( Service * ) this )"		3247404	1					
ANR	3247417	Callee	daemonCore -> Register_Timer		3247404	0					
ANR	3247418	PtrMemberAccess	daemonCore -> Register_Timer		3247404	0					
ANR	3247419	Identifier	daemonCore		3247404	0					
ANR	3247420	Identifier	Register_Timer		3247404	1					
ANR	3247421	ArgumentList	0		3247404	1					
ANR	3247422	Argument	0		3247404	0					
ANR	3247423	PrimaryExpression	0		3247404	0					
ANR	3247424	Argument	( TimerHandlercpp ) & GahpServer :: doProxyCheck		3247404	1					
ANR	3247425	CastExpression	( TimerHandlercpp ) & GahpServer :: doProxyCheck		3247404	0					
ANR	3247426	CastTarget	TimerHandlercpp		3247404	0					
ANR	3247427	UnaryOperationExpression	& GahpServer :: doProxyCheck		3247404	1					
ANR	3247428	UnaryOperator	&		3247404	0					
ANR	3247429	Identifier	GahpServer :: doProxyCheck		3247404	1					
ANR	3247430	Argument	"""GahpServer::doProxyCheck"""		3247404	2					
ANR	3247431	PrimaryExpression	"""GahpServer::doProxyCheck"""		3247404	0					
ANR	3247432	Argument	( Service * ) this		3247404	3					
ANR	3247433	CastExpression	( Service * ) this		3247404	0					
ANR	3247434	CastTarget	Service *		3247404	0					
ANR	3247435	Identifier	this		3247404	1					
ANR	3247436	ReturnStatement	return 0 ;	1084:1:28025:28033	3247404	1	True				
ANR	3247437	PrimaryExpression	0		3247404	0					
ANR	3247438	ReturnType	int		3247404	1					
ANR	3247439	Identifier	GahpServer :: ProxyCallback		3247404	2					
ANR	3247440	ParameterList			3247404	3					
ANR	3247441	CFGEntryNode	ENTRY		3247404		True				
ANR	3247442	CFGExitNode	EXIT		3247404		True				
ANR	3247443	Symbol	* daemonCore		3247404						
ANR	3247444	Symbol	daemonCore -> Register_Timer		3247404						
ANR	3247445	Symbol	daemonCore		3247404						
ANR	3247446	Symbol	this		3247404						
ANR	3247447	Symbol	& GahpServer :: doProxyCheck		3247404						
ANR	3247448	Symbol	m_gahp_pid		3247404						
ANR	3247449	Symbol	proxy_check_tid		3247404						
ANR	3247450	Function	GahpServer :: doProxyCheck	1087:0:28038:29274							
ANR	3247451	FunctionDef	GahpServer :: doProxyCheck ()		3247450	0					
ANR	3247452	CompoundStatement		1089:0:28070:29274	3247450	0					
ANR	3247453	ExpressionStatement	proxy_check_tid = TIMER_UNSET	1090:1:28073:28102	3247450	0	True				
ANR	3247454	AssignmentExpression	proxy_check_tid = TIMER_UNSET		3247450	0		=			
ANR	3247455	Identifier	proxy_check_tid		3247450	0					
ANR	3247456	Identifier	TIMER_UNSET		3247450	1					
ANR	3247457	IfStatement	if ( m_gahp_pid == - 1 )		3247450	1					
ANR	3247458	Condition	m_gahp_pid == - 1	1092:6:28111:28126	3247450	0	True				
ANR	3247459	EqualityExpression	m_gahp_pid == - 1		3247450	0		==			
ANR	3247460	Identifier	m_gahp_pid		3247450	0					
ANR	3247461	UnaryOperationExpression	- 1		3247450	1					
ANR	3247462	UnaryOperator	-		3247450	0					
ANR	3247463	PrimaryExpression	1		3247450	1					
ANR	3247464	CompoundStatement		4:25:59:59	3247450	1					
ANR	3247465	ReturnStatement	return ;	1093:2:28134:28140	3247450	0	True				
ANR	3247466	IdentifierDeclStatement	GahpProxyInfo * next_proxy ;	1096:1:28147:28172	3247450	2	True				
ANR	3247467	IdentifierDecl	* next_proxy		3247450	0					
ANR	3247468	IdentifierDeclType	GahpProxyInfo *		3247450	0					
ANR	3247469	Identifier	next_proxy		3247450	1					
ANR	3247470	IfStatement	if ( ProxiesByFilename )		3247450	3					
ANR	3247471	Condition	ProxiesByFilename	1098:6:28181:28197	3247450	0	True				
ANR	3247472	Identifier	ProxiesByFilename		3247450	0					
ANR	3247473	CompoundStatement		10:26:130:130	3247450	1					
ANR	3247474	ExpressionStatement	ProxiesByFilename -> startIterations ( )	1099:2:28205:28241	3247450	0	True				
ANR	3247475	CallExpression	ProxiesByFilename -> startIterations ( )		3247450	0					
ANR	3247476	Callee	ProxiesByFilename -> startIterations		3247450	0					
ANR	3247477	PtrMemberAccess	ProxiesByFilename -> startIterations		3247450	0					
ANR	3247478	Identifier	ProxiesByFilename		3247450	0					
ANR	3247479	Identifier	startIterations		3247450	1					
ANR	3247480	ArgumentList			3247450	1					
ANR	3247481	WhileStatement	while ( ProxiesByFilename -> iterate ( next_proxy ) != 0 )		3247450	1					
ANR	3247482	Condition	ProxiesByFilename -> iterate ( next_proxy ) != 0	1100:10:28253:28297	3247450	0	True				
ANR	3247483	EqualityExpression	ProxiesByFilename -> iterate ( next_proxy ) != 0		3247450	0		!=			
ANR	3247484	CallExpression	ProxiesByFilename -> iterate ( next_proxy )		3247450	0					
ANR	3247485	Callee	ProxiesByFilename -> iterate		3247450	0					
ANR	3247486	PtrMemberAccess	ProxiesByFilename -> iterate		3247450	0					
ANR	3247487	Identifier	ProxiesByFilename		3247450	0					
ANR	3247488	Identifier	iterate		3247450	1					
ANR	3247489	ArgumentList	next_proxy		3247450	1					
ANR	3247490	Argument	next_proxy		3247450	0					
ANR	3247491	Identifier	next_proxy		3247450	0					
ANR	3247492	PrimaryExpression	0		3247450	1					
ANR	3247493	CompoundStatement		12:58:230:230	3247450	1					
ANR	3247494	IfStatement	if ( next_proxy -> proxy -> expiration_time > next_proxy -> cached_expiration )		3247450	0					
ANR	3247495	Condition	next_proxy -> proxy -> expiration_time > next_proxy -> cached_expiration	1102:8:28312:28382	3247450	0	True				
ANR	3247496	RelationalExpression	next_proxy -> proxy -> expiration_time > next_proxy -> cached_expiration		3247450	0		>			
ANR	3247497	PtrMemberAccess	next_proxy -> proxy -> expiration_time		3247450	0					
ANR	3247498	PtrMemberAccess	next_proxy -> proxy		3247450	0					
ANR	3247499	Identifier	next_proxy		3247450	0					
ANR	3247500	Identifier	proxy		3247450	1					
ANR	3247501	Identifier	expiration_time		3247450	1					
ANR	3247502	PtrMemberAccess	next_proxy -> cached_expiration		3247450	1					
ANR	3247503	Identifier	next_proxy		3247450	0					
ANR	3247504	Identifier	cached_expiration		3247450	1					
ANR	3247505	CompoundStatement		15:37:315:315	3247450	1					
ANR	3247506	IfStatement	if ( cacheProxyFromFile ( next_proxy ) == false )		3247450	0					
ANR	3247507	Condition	cacheProxyFromFile ( next_proxy ) == false	1105:9:28398:28438	3247450	0	True				
ANR	3247508	EqualityExpression	cacheProxyFromFile ( next_proxy ) == false		3247450	0		==			
ANR	3247509	CallExpression	cacheProxyFromFile ( next_proxy )		3247450	0					
ANR	3247510	Callee	cacheProxyFromFile		3247450	0					
ANR	3247511	Identifier	cacheProxyFromFile		3247450	0					
ANR	3247512	ArgumentList	next_proxy		3247450	1					
ANR	3247513	Argument	next_proxy		3247450	0					
ANR	3247514	Identifier	next_proxy		3247450	0					
ANR	3247515	Identifier	false		3247450	1					
ANR	3247516	CompoundStatement		17:53:371:371	3247450	1					
ANR	3247517	ExpressionStatement	"EXCEPT ( ""Failed to refresh proxy!"" )"	1106:5:28449:28485	3247450	0	True				
ANR	3247518	CallExpression	"EXCEPT ( ""Failed to refresh proxy!"" )"		3247450	0					
ANR	3247519	Callee	EXCEPT		3247450	0					
ANR	3247520	Identifier	EXCEPT		3247450	0					
ANR	3247521	ArgumentList	"""Failed to refresh proxy!"""		3247450	1					
ANR	3247522	Argument	"""Failed to refresh proxy!"""		3247450	0					
ANR	3247523	PrimaryExpression	"""Failed to refresh proxy!"""		3247450	0					
ANR	3247524	ExpressionStatement	next_proxy -> cached_expiration = next_proxy -> proxy -> expiration_time	1108:4:28497:28563	3247450	1	True				
ANR	3247525	AssignmentExpression	next_proxy -> cached_expiration = next_proxy -> proxy -> expiration_time		3247450	0		=			
ANR	3247526	PtrMemberAccess	next_proxy -> cached_expiration		3247450	0					
ANR	3247527	Identifier	next_proxy		3247450	0					
ANR	3247528	Identifier	cached_expiration		3247450	1					
ANR	3247529	PtrMemberAccess	next_proxy -> proxy -> expiration_time		3247450	1					
ANR	3247530	PtrMemberAccess	next_proxy -> proxy		3247450	0					
ANR	3247531	Identifier	next_proxy		3247450	0					
ANR	3247532	Identifier	proxy		3247450	1					
ANR	3247533	Identifier	expiration_time		3247450	1					
ANR	3247534	IfStatement	if ( master_proxy -> proxy -> expiration_time > master_proxy -> cached_expiration )		3247450	4					
ANR	3247535	Condition	master_proxy -> proxy -> expiration_time > master_proxy -> cached_expiration	1115:6:28586:28658	3247450	0	True				
ANR	3247536	RelationalExpression	master_proxy -> proxy -> expiration_time > master_proxy -> cached_expiration		3247450	0		>			
ANR	3247537	PtrMemberAccess	master_proxy -> proxy -> expiration_time		3247450	0					
ANR	3247538	PtrMemberAccess	master_proxy -> proxy		3247450	0					
ANR	3247539	Identifier	master_proxy		3247450	0					
ANR	3247540	Identifier	proxy		3247450	1					
ANR	3247541	Identifier	expiration_time		3247450	1					
ANR	3247542	PtrMemberAccess	master_proxy -> cached_expiration		3247450	1					
ANR	3247543	Identifier	master_proxy		3247450	0					
ANR	3247544	Identifier	cached_expiration		3247450	1					
ANR	3247545	CompoundStatement		32:9:710:757	3247450	1					
ANR	3247546	Statement	static	1120:2:28774:28779	3247450	0	True				
ANR	3247547	IdentifierDeclStatement	"const char * command = ""REFRESH_PROXY_FROM_FILE"" ;"	1120:9:28781:28828	3247450	1	True				
ANR	3247548	IdentifierDecl	"* command = ""REFRESH_PROXY_FROM_FILE"""		3247450	0					
ANR	3247549	IdentifierDeclType	const char *		3247450	0					
ANR	3247550	Identifier	command		3247450	1					
ANR	3247551	AssignmentExpression	"* command = ""REFRESH_PROXY_FROM_FILE"""		3247450	2		=			
ANR	3247552	Identifier	command		3247450	0					
ANR	3247553	PrimaryExpression	"""REFRESH_PROXY_FROM_FILE"""		3247450	1					
ANR	3247554	IfStatement	if ( m_commands_supported -> contains_anycase ( command ) )		3247450	2					
ANR	3247555	Condition	m_commands_supported -> contains_anycase ( command )	1121:7:28837:28885	3247450	0	True				
ANR	3247556	CallExpression	m_commands_supported -> contains_anycase ( command )		3247450	0					
ANR	3247557	Callee	m_commands_supported -> contains_anycase		3247450	0					
ANR	3247558	PtrMemberAccess	m_commands_supported -> contains_anycase		3247450	0					
ANR	3247559	Identifier	m_commands_supported		3247450	0					
ANR	3247560	Identifier	contains_anycase		3247450	1					
ANR	3247561	ArgumentList	command		3247450	1					
ANR	3247562	Argument	command		3247450	0					
ANR	3247563	Identifier	command		3247450	0					
ANR	3247564	CompoundStatement		33:59:818:818	3247450	1					
ANR	3247565	IfStatement	"if ( command_initialize_from_file ( master_proxy -> proxy -> proxy_filename , command ) == false )"		3247450	0					
ANR	3247566	Condition	"command_initialize_from_file ( master_proxy -> proxy -> proxy_filename , command ) == false"	1122:8:28899:29002	3247450	0	True				
ANR	3247567	EqualityExpression	"command_initialize_from_file ( master_proxy -> proxy -> proxy_filename , command ) == false"		3247450	0		==			
ANR	3247568	CallExpression	"command_initialize_from_file ( master_proxy -> proxy -> proxy_filename , command )"		3247450	0					
ANR	3247569	Callee	command_initialize_from_file		3247450	0					
ANR	3247570	Identifier	command_initialize_from_file		3247450	0					
ANR	3247571	ArgumentList	master_proxy -> proxy -> proxy_filename		3247450	1					
ANR	3247572	Argument	master_proxy -> proxy -> proxy_filename		3247450	0					
ANR	3247573	PtrMemberAccess	master_proxy -> proxy -> proxy_filename		3247450	0					
ANR	3247574	PtrMemberAccess	master_proxy -> proxy		3247450	0					
ANR	3247575	Identifier	master_proxy		3247450	0					
ANR	3247576	Identifier	proxy		3247450	1					
ANR	3247577	Identifier	proxy_filename		3247450	1					
ANR	3247578	Argument	command		3247450	1					
ANR	3247579	Identifier	command		3247450	0					
ANR	3247580	Identifier	false		3247450	1					
ANR	3247581	CompoundStatement		36:30:935:935	3247450	1					
ANR	3247582	ExpressionStatement	"EXCEPT ( ""Failed to refresh proxy!"" )"	1125:4:29012:29048	3247450	0	True				
ANR	3247583	CallExpression	"EXCEPT ( ""Failed to refresh proxy!"" )"		3247450	0					
ANR	3247584	Callee	EXCEPT		3247450	0					
ANR	3247585	Identifier	EXCEPT		3247450	0					
ANR	3247586	ArgumentList	"""Failed to refresh proxy!"""		3247450	1					
ANR	3247587	Argument	"""Failed to refresh proxy!"""		3247450	0					
ANR	3247588	PrimaryExpression	"""Failed to refresh proxy!"""		3247450	0					
ANR	3247589	IfStatement	if ( can_cache_proxies )		3247450	3					
ANR	3247590	Condition	can_cache_proxies	1129:7:29067:29083	3247450	0	True				
ANR	3247591	Identifier	can_cache_proxies		3247450	0					
ANR	3247592	CompoundStatement		41:27:1016:1016	3247450	1					
ANR	3247593	IfStatement	if ( cacheProxyFromFile ( master_proxy ) == false )		3247450	0					
ANR	3247594	Condition	cacheProxyFromFile ( master_proxy ) == false	1130:8:29097:29139	3247450	0	True				
ANR	3247595	EqualityExpression	cacheProxyFromFile ( master_proxy ) == false		3247450	0		==			
ANR	3247596	CallExpression	cacheProxyFromFile ( master_proxy )		3247450	0					
ANR	3247597	Callee	cacheProxyFromFile		3247450	0					
ANR	3247598	Identifier	cacheProxyFromFile		3247450	0					
ANR	3247599	ArgumentList	master_proxy		3247450	1					
ANR	3247600	Argument	master_proxy		3247450	0					
ANR	3247601	Identifier	master_proxy		3247450	0					
ANR	3247602	Identifier	false		3247450	1					
ANR	3247603	CompoundStatement		42:54:1072:1072	3247450	1					
ANR	3247604	ExpressionStatement	"EXCEPT ( ""Failed to refresh proxy!"" )"	1131:4:29149:29185	3247450	0	True				
ANR	3247605	CallExpression	"EXCEPT ( ""Failed to refresh proxy!"" )"		3247450	0					
ANR	3247606	Callee	EXCEPT		3247450	0					
ANR	3247607	Identifier	EXCEPT		3247450	0					
ANR	3247608	ArgumentList	"""Failed to refresh proxy!"""		3247450	1					
ANR	3247609	Argument	"""Failed to refresh proxy!"""		3247450	0					
ANR	3247610	PrimaryExpression	"""Failed to refresh proxy!"""		3247450	0					
ANR	3247611	ExpressionStatement	master_proxy -> cached_expiration = master_proxy -> proxy -> expiration_time	1135:2:29199:29269	3247450	4	True				
ANR	3247612	AssignmentExpression	master_proxy -> cached_expiration = master_proxy -> proxy -> expiration_time		3247450	0		=			
ANR	3247613	PtrMemberAccess	master_proxy -> cached_expiration		3247450	0					
ANR	3247614	Identifier	master_proxy		3247450	0					
ANR	3247615	Identifier	cached_expiration		3247450	1					
ANR	3247616	PtrMemberAccess	master_proxy -> proxy -> expiration_time		3247450	1					
ANR	3247617	PtrMemberAccess	master_proxy -> proxy		3247450	0					
ANR	3247618	Identifier	master_proxy		3247450	0					
ANR	3247619	Identifier	proxy		3247450	1					
ANR	3247620	Identifier	expiration_time		3247450	1					
ANR	3247621	ReturnType	void		3247450	1					
ANR	3247622	Identifier	GahpServer :: doProxyCheck		3247450	2					
ANR	3247623	ParameterList			3247450	3					
ANR	3247624	CFGEntryNode	ENTRY		3247450		True				
ANR	3247625	CFGExitNode	EXIT		3247450		True				
ANR	3247626	Symbol	ProxiesByFilename		3247450						
ANR	3247627	Symbol	master_proxy -> proxy		3247450						
ANR	3247628	Symbol	master_proxy -> proxy -> proxy_filename		3247450						
ANR	3247629	Symbol	cacheProxyFromFile		3247450						
ANR	3247630	Symbol	next_proxy		3247450						
ANR	3247631	Symbol	master_proxy -> cached_expiration		3247450						
ANR	3247632	Symbol	m_commands_supported		3247450						
ANR	3247633	Symbol	m_gahp_pid		3247450						
ANR	3247634	Symbol	ProxiesByFilename -> iterate		3247450						
ANR	3247635	Symbol	next_proxy -> proxy -> expiration_time		3247450						
ANR	3247636	Symbol	can_cache_proxies		3247450						
ANR	3247637	Symbol	next_proxy -> cached_expiration		3247450						
ANR	3247638	Symbol	TIMER_UNSET		3247450						
ANR	3247639	Symbol	command_initialize_from_file		3247450						
ANR	3247640	Symbol	m_commands_supported -> contains_anycase		3247450						
ANR	3247641	Symbol	next_proxy -> proxy		3247450						
ANR	3247642	Symbol	* * next_proxy		3247450						
ANR	3247643	Symbol	false		3247450						
ANR	3247644	Symbol	* next_proxy -> proxy		3247450						
ANR	3247645	Symbol	* m_commands_supported		3247450						
ANR	3247646	Symbol	* ProxiesByFilename		3247450						
ANR	3247647	Symbol	command		3247450						
ANR	3247648	Symbol	* master_proxy		3247450						
ANR	3247649	Symbol	master_proxy -> proxy -> expiration_time		3247450						
ANR	3247650	Symbol	* master_proxy -> proxy		3247450						
ANR	3247651	Symbol	master_proxy		3247450						
ANR	3247652	Symbol	* * master_proxy		3247450						
ANR	3247653	Symbol	* next_proxy		3247450						
ANR	3247654	Symbol	proxy_check_tid		3247450						
ANR	3247655	Function	GahpServer :: RegisterProxy	1139:0:29277:30289							
ANR	3247656	FunctionDef	GahpServer :: RegisterProxy (Proxy * proxy)		3247655	0					
ANR	3247657	CompoundStatement		1141:0:29335:30289	3247655	0					
ANR	3247658	IdentifierDeclStatement	int rc ;	1142:1:29338:29344	3247655	0	True				
ANR	3247659	IdentifierDecl	rc		3247655	0					
ANR	3247660	IdentifierDeclType	int		3247655	0					
ANR	3247661	Identifier	rc		3247655	1					
ANR	3247662	IdentifierDeclStatement	GahpProxyInfo * gahp_proxy = NULL ;	1143:1:29347:29379	3247655	1	True				
ANR	3247663	IdentifierDecl	* gahp_proxy = NULL		3247655	0					
ANR	3247664	IdentifierDeclType	GahpProxyInfo *		3247655	0					
ANR	3247665	Identifier	gahp_proxy		3247655	1					
ANR	3247666	AssignmentExpression	* gahp_proxy = NULL		3247655	2		=			
ANR	3247667	Identifier	NULL		3247655	0					
ANR	3247668	Identifier	NULL		3247655	1					
ANR	3247669	IfStatement	if ( ProxiesByFilename == NULL || proxy == NULL || can_cache_proxies == false )		3247655	2					
ANR	3247670	Condition	ProxiesByFilename == NULL || proxy == NULL || can_cache_proxies == false	1145:6:29388:29462	3247655	0	True				
ANR	3247671	OrExpression	ProxiesByFilename == NULL || proxy == NULL || can_cache_proxies == false		3247655	0		||			
ANR	3247672	EqualityExpression	ProxiesByFilename == NULL		3247655	0		==			
ANR	3247673	Identifier	ProxiesByFilename		3247655	0					
ANR	3247674	Identifier	NULL		3247655	1					
ANR	3247675	OrExpression	proxy == NULL || can_cache_proxies == false		3247655	1		||			
ANR	3247676	EqualityExpression	proxy == NULL		3247655	0		==			
ANR	3247677	Identifier	proxy		3247655	0					
ANR	3247678	Identifier	NULL		3247655	1					
ANR	3247679	EqualityExpression	can_cache_proxies == false		3247655	1		==			
ANR	3247680	Identifier	can_cache_proxies		3247655	0					
ANR	3247681	Identifier	false		3247655	1					
ANR	3247682	CompoundStatement		6:32:130:130	3247655	1					
ANR	3247683	ReturnStatement	return NULL ;	1148:2:29471:29482	3247655	0	True				
ANR	3247684	Identifier	NULL		3247655	0					
ANR	3247685	IfStatement	if ( master_proxy != NULL && proxy == master_proxy -> proxy )		3247655	3					
ANR	3247686	Condition	master_proxy != NULL && proxy == master_proxy -> proxy	1151:6:29494:29545	3247655	0	True				
ANR	3247687	AndExpression	master_proxy != NULL && proxy == master_proxy -> proxy		3247655	0		&&			
ANR	3247688	EqualityExpression	master_proxy != NULL		3247655	0		!=			
ANR	3247689	Identifier	master_proxy		3247655	0					
ANR	3247690	Identifier	NULL		3247655	1					
ANR	3247691	EqualityExpression	proxy == master_proxy -> proxy		3247655	1		==			
ANR	3247692	Identifier	proxy		3247655	0					
ANR	3247693	PtrMemberAccess	master_proxy -> proxy		3247655	1					
ANR	3247694	Identifier	master_proxy		3247655	0					
ANR	3247695	Identifier	proxy		3247655	1					
ANR	3247696	CompoundStatement		11:61:213:213	3247655	1					
ANR	3247697	ExpressionStatement	master_proxy -> num_references ++	1152:2:29553:29583	3247655	0	True				
ANR	3247698	PostIncDecOperationExpression	master_proxy -> num_references ++		3247655	0					
ANR	3247699	PtrMemberAccess	master_proxy -> num_references		3247655	0					
ANR	3247700	Identifier	master_proxy		3247655	0					
ANR	3247701	Identifier	num_references		3247655	1					
ANR	3247702	IncDec	++		3247655	1					
ANR	3247703	ReturnStatement	return master_proxy ;	1153:2:29587:29606	3247655	1	True				
ANR	3247704	Identifier	master_proxy		3247655	0					
ANR	3247705	ExpressionStatement	"rc = ProxiesByFilename -> lookup ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"	1156:1:29613:29700	3247655	4	True				
ANR	3247706	AssignmentExpression	"rc = ProxiesByFilename -> lookup ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"		3247655	0		=			
ANR	3247707	Identifier	rc		3247655	0					
ANR	3247708	CallExpression	"ProxiesByFilename -> lookup ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"		3247655	1					
ANR	3247709	Callee	ProxiesByFilename -> lookup		3247655	0					
ANR	3247710	PtrMemberAccess	ProxiesByFilename -> lookup		3247655	0					
ANR	3247711	Identifier	ProxiesByFilename		3247655	0					
ANR	3247712	Identifier	lookup		3247655	1					
ANR	3247713	ArgumentList	HashKey ( proxy -> proxy_filename )		3247655	1					
ANR	3247714	Argument	HashKey ( proxy -> proxy_filename )		3247655	0					
ANR	3247715	CallExpression	HashKey ( proxy -> proxy_filename )		3247655	0					
ANR	3247716	Callee	HashKey		3247655	0					
ANR	3247717	Identifier	HashKey		3247655	0					
ANR	3247718	ArgumentList	proxy -> proxy_filename		3247655	1					
ANR	3247719	Argument	proxy -> proxy_filename		3247655	0					
ANR	3247720	PtrMemberAccess	proxy -> proxy_filename		3247655	0					
ANR	3247721	Identifier	proxy		3247655	0					
ANR	3247722	Identifier	proxy_filename		3247655	1					
ANR	3247723	Argument	gahp_proxy		3247655	1					
ANR	3247724	Identifier	gahp_proxy		3247655	0					
ANR	3247725	IfStatement	if ( rc != 0 )		3247655	5					
ANR	3247726	Condition	rc != 0	1159:6:29709:29715	3247655	0	True				
ANR	3247727	EqualityExpression	rc != 0		3247655	0		!=			
ANR	3247728	Identifier	rc		3247655	0					
ANR	3247729	PrimaryExpression	0		3247655	1					
ANR	3247730	CompoundStatement		19:16:383:383	3247655	1					
ANR	3247731	Statement	gahp_proxy	1160:2:29723:29732	3247655	0	True				
ANR	3247732	Statement	=	1160:13:29734:29734	3247655	1	True				
ANR	3247733	Statement	new	1160:15:29736:29738	3247655	2	True				
ANR	3247734	ExpressionStatement	GahpProxyInfo	1160:19:29740:29753	3247655	3	True				
ANR	3247735	Identifier	GahpProxyInfo		3247655	0					
ANR	3247736	ExpressionStatement	ASSERT ( gahp_proxy )	1161:2:29757:29775	3247655	4	True				
ANR	3247737	CallExpression	ASSERT ( gahp_proxy )		3247655	0					
ANR	3247738	Callee	ASSERT		3247655	0					
ANR	3247739	Identifier	ASSERT		3247655	0					
ANR	3247740	ArgumentList	gahp_proxy		3247655	1					
ANR	3247741	Argument	gahp_proxy		3247655	0					
ANR	3247742	Identifier	gahp_proxy		3247655	0					
ANR	3247743	ExpressionStatement	"gahp_proxy -> proxy = AcquireProxy ( proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"	1162:2:29779:29895	3247655	5	True				
ANR	3247744	AssignmentExpression	"gahp_proxy -> proxy = AcquireProxy ( proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"		3247655	0		=			
ANR	3247745	PtrMemberAccess	gahp_proxy -> proxy		3247655	0					
ANR	3247746	Identifier	gahp_proxy		3247655	0					
ANR	3247747	Identifier	proxy		3247655	1					
ANR	3247748	CallExpression	"AcquireProxy ( proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"		3247655	1					
ANR	3247749	Callee	AcquireProxy		3247655	0					
ANR	3247750	Identifier	AcquireProxy		3247655	0					
ANR	3247751	ArgumentList	proxy		3247655	1					
ANR	3247752	Argument	proxy		3247655	0					
ANR	3247753	Identifier	proxy		3247655	0					
ANR	3247754	Argument	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3247655	1					
ANR	3247755	CastExpression	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3247655	0					
ANR	3247756	CastTarget	TimerHandlercpp		3247655	0					
ANR	3247757	UnaryOperationExpression	& GahpServer :: ProxyCallback		3247655	1					
ANR	3247758	UnaryOperator	&		3247655	0					
ANR	3247759	Identifier	GahpServer :: ProxyCallback		3247655	1					
ANR	3247760	Argument	this		3247655	2					
ANR	3247761	Identifier	this		3247655	0					
ANR	3247762	ExpressionStatement	gahp_proxy -> cached_expiration = 0	1165:2:29899:29932	3247655	6	True				
ANR	3247763	AssignmentExpression	gahp_proxy -> cached_expiration = 0		3247655	0		=			
ANR	3247764	PtrMemberAccess	gahp_proxy -> cached_expiration		3247655	0					
ANR	3247765	Identifier	gahp_proxy		3247655	0					
ANR	3247766	Identifier	cached_expiration		3247655	1					
ANR	3247767	PrimaryExpression	0		3247655	1					
ANR	3247768	ExpressionStatement	gahp_proxy -> num_references = 1	1166:2:29936:29966	3247655	7	True				
ANR	3247769	AssignmentExpression	gahp_proxy -> num_references = 1		3247655	0		=			
ANR	3247770	PtrMemberAccess	gahp_proxy -> num_references		3247655	0					
ANR	3247771	Identifier	gahp_proxy		3247655	0					
ANR	3247772	Identifier	num_references		3247655	1					
ANR	3247773	PrimaryExpression	1		3247655	1					
ANR	3247774	IfStatement	if ( cacheProxyFromFile ( gahp_proxy ) == false )		3247655	8					
ANR	3247775	Condition	cacheProxyFromFile ( gahp_proxy ) == false	1167:7:29975:30015	3247655	0	True				
ANR	3247776	EqualityExpression	cacheProxyFromFile ( gahp_proxy ) == false		3247655	0		==			
ANR	3247777	CallExpression	cacheProxyFromFile ( gahp_proxy )		3247655	0					
ANR	3247778	Callee	cacheProxyFromFile		3247655	0					
ANR	3247779	Identifier	cacheProxyFromFile		3247655	0					
ANR	3247780	ArgumentList	gahp_proxy		3247655	1					
ANR	3247781	Argument	gahp_proxy		3247655	0					
ANR	3247782	Identifier	gahp_proxy		3247655	0					
ANR	3247783	Identifier	false		3247655	1					
ANR	3247784	CompoundStatement		27:51:683:683	3247655	1					
ANR	3247785	ExpressionStatement	"EXCEPT ( ""Failed to cache proxy!"" )"	1168:3:30024:30058	3247655	0	True				
ANR	3247786	CallExpression	"EXCEPT ( ""Failed to cache proxy!"" )"		3247655	0					
ANR	3247787	Callee	EXCEPT		3247655	0					
ANR	3247788	Identifier	EXCEPT		3247655	0					
ANR	3247789	ArgumentList	"""Failed to cache proxy!"""		3247655	1					
ANR	3247790	Argument	"""Failed to cache proxy!"""		3247655	0					
ANR	3247791	PrimaryExpression	"""Failed to cache proxy!"""		3247655	0					
ANR	3247792	ExpressionStatement	gahp_proxy -> cached_expiration = gahp_proxy -> proxy -> expiration_time	1170:2:30066:30132	3247655	9	True				
ANR	3247793	AssignmentExpression	gahp_proxy -> cached_expiration = gahp_proxy -> proxy -> expiration_time		3247655	0		=			
ANR	3247794	PtrMemberAccess	gahp_proxy -> cached_expiration		3247655	0					
ANR	3247795	Identifier	gahp_proxy		3247655	0					
ANR	3247796	Identifier	cached_expiration		3247655	1					
ANR	3247797	PtrMemberAccess	gahp_proxy -> proxy -> expiration_time		3247655	1					
ANR	3247798	PtrMemberAccess	gahp_proxy -> proxy		3247655	0					
ANR	3247799	Identifier	gahp_proxy		3247655	0					
ANR	3247800	Identifier	proxy		3247655	1					
ANR	3247801	Identifier	expiration_time		3247655	1					
ANR	3247802	ExpressionStatement	"ProxiesByFilename -> insert ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"	1172:2:30137:30221	3247655	10	True				
ANR	3247803	CallExpression	"ProxiesByFilename -> insert ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"		3247655	0					
ANR	3247804	Callee	ProxiesByFilename -> insert		3247655	0					
ANR	3247805	PtrMemberAccess	ProxiesByFilename -> insert		3247655	0					
ANR	3247806	Identifier	ProxiesByFilename		3247655	0					
ANR	3247807	Identifier	insert		3247655	1					
ANR	3247808	ArgumentList	HashKey ( proxy -> proxy_filename )		3247655	1					
ANR	3247809	Argument	HashKey ( proxy -> proxy_filename )		3247655	0					
ANR	3247810	CallExpression	HashKey ( proxy -> proxy_filename )		3247655	0					
ANR	3247811	Callee	HashKey		3247655	0					
ANR	3247812	Identifier	HashKey		3247655	0					
ANR	3247813	ArgumentList	proxy -> proxy_filename		3247655	1					
ANR	3247814	Argument	proxy -> proxy_filename		3247655	0					
ANR	3247815	PtrMemberAccess	proxy -> proxy_filename		3247655	0					
ANR	3247816	Identifier	proxy		3247655	0					
ANR	3247817	Identifier	proxy_filename		3247655	1					
ANR	3247818	Argument	gahp_proxy		3247655	1					
ANR	3247819	Identifier	gahp_proxy		3247655	0					
ANR	3247820	ElseStatement	else		3247655	0					
ANR	3247821	CompoundStatement		34:8:895:895	3247655	0					
ANR	3247822	ExpressionStatement	gahp_proxy -> num_references ++	1175:2:30235:30263	3247655	0	True				
ANR	3247823	PostIncDecOperationExpression	gahp_proxy -> num_references ++		3247655	0					
ANR	3247824	PtrMemberAccess	gahp_proxy -> num_references		3247655	0					
ANR	3247825	Identifier	gahp_proxy		3247655	0					
ANR	3247826	Identifier	num_references		3247655	1					
ANR	3247827	IncDec	++		3247655	1					
ANR	3247828	ReturnStatement	return gahp_proxy ;	1178:1:30270:30287	3247655	6	True				
ANR	3247829	Identifier	gahp_proxy		3247655	0					
ANR	3247830	ReturnType	GahpProxyInfo *		3247655	1					
ANR	3247831	Identifier	GahpServer :: RegisterProxy		3247655	2					
ANR	3247832	ParameterList	Proxy * proxy		3247655	3					
ANR	3247833	Parameter	Proxy * proxy	1140:27:29320:29331	3247655	0	True				
ANR	3247834	ParameterType	Proxy *		3247655	0					
ANR	3247835	Identifier	proxy		3247655	1					
ANR	3247836	CFGEntryNode	ENTRY		3247655		True				
ANR	3247837	CFGExitNode	EXIT		3247655		True				
ANR	3247838	Symbol	ProxiesByFilename		3247655						
ANR	3247839	Symbol	master_proxy -> proxy		3247655						
ANR	3247840	Symbol	ProxiesByFilename -> lookup		3247655						
ANR	3247841	Symbol	cacheProxyFromFile		3247655						
ANR	3247842	Symbol	gahp_proxy -> proxy -> expiration_time		3247655						
ANR	3247843	Symbol	AcquireProxy		3247655						
ANR	3247844	Symbol	& GahpServer :: ProxyCallback		3247655						
ANR	3247845	Symbol	can_cache_proxies		3247655						
ANR	3247846	Symbol	* * gahp_proxy		3247655						
ANR	3247847	Symbol	HashKey		3247655						
ANR	3247848	Symbol	* gahp_proxy -> proxy		3247655						
ANR	3247849	Symbol	* gahp_proxy		3247655						
ANR	3247850	Symbol	NULL		3247655						
ANR	3247851	Symbol	false		3247655						
ANR	3247852	Symbol	this		3247655						
ANR	3247853	Symbol	proxy -> proxy_filename		3247655						
ANR	3247854	Symbol	gahp_proxy -> proxy		3247655						
ANR	3247855	Symbol	* ProxiesByFilename		3247655						
ANR	3247856	Symbol	* master_proxy		3247655						
ANR	3247857	Symbol	master_proxy -> num_references		3247655						
ANR	3247858	Symbol	proxy		3247655						
ANR	3247859	Symbol	rc		3247655						
ANR	3247860	Symbol	master_proxy		3247655						
ANR	3247861	Symbol	* proxy		3247655						
ANR	3247862	Symbol	gahp_proxy		3247655						
ANR	3247863	Symbol	gahp_proxy -> cached_expiration		3247655						
ANR	3247864	Symbol	gahp_proxy -> num_references		3247655						
ANR	3247865	Function	GahpServer :: UnregisterProxy	1181:0:30292:31133							
ANR	3247866	FunctionDef	GahpServer :: UnregisterProxy (Proxy * proxy)		3247865	0					
ANR	3247867	CompoundStatement		1183:0:30341:31133	3247865	0					
ANR	3247868	IdentifierDeclStatement	int rc ;	1184:1:30344:30350	3247865	0	True				
ANR	3247869	IdentifierDecl	rc		3247865	0					
ANR	3247870	IdentifierDeclType	int		3247865	0					
ANR	3247871	Identifier	rc		3247865	1					
ANR	3247872	IdentifierDeclStatement	GahpProxyInfo * gahp_proxy = NULL ;	1185:1:30353:30385	3247865	1	True				
ANR	3247873	IdentifierDecl	* gahp_proxy = NULL		3247865	0					
ANR	3247874	IdentifierDeclType	GahpProxyInfo *		3247865	0					
ANR	3247875	Identifier	gahp_proxy		3247865	1					
ANR	3247876	AssignmentExpression	* gahp_proxy = NULL		3247865	2		=			
ANR	3247877	Identifier	NULL		3247865	0					
ANR	3247878	Identifier	NULL		3247865	1					
ANR	3247879	IfStatement	if ( ProxiesByFilename == NULL || proxy == NULL || can_cache_proxies == false )		3247865	2					
ANR	3247880	Condition	ProxiesByFilename == NULL || proxy == NULL || can_cache_proxies == false	1187:6:30394:30468	3247865	0	True				
ANR	3247881	OrExpression	ProxiesByFilename == NULL || proxy == NULL || can_cache_proxies == false		3247865	0		||			
ANR	3247882	EqualityExpression	ProxiesByFilename == NULL		3247865	0		==			
ANR	3247883	Identifier	ProxiesByFilename		3247865	0					
ANR	3247884	Identifier	NULL		3247865	1					
ANR	3247885	OrExpression	proxy == NULL || can_cache_proxies == false		3247865	1		||			
ANR	3247886	EqualityExpression	proxy == NULL		3247865	0		==			
ANR	3247887	Identifier	proxy		3247865	0					
ANR	3247888	Identifier	NULL		3247865	1					
ANR	3247889	EqualityExpression	can_cache_proxies == false		3247865	1		==			
ANR	3247890	Identifier	can_cache_proxies		3247865	0					
ANR	3247891	Identifier	false		3247865	1					
ANR	3247892	CompoundStatement		6:32:130:130	3247865	1					
ANR	3247893	ReturnStatement	return ;	1190:2:30477:30483	3247865	0	True				
ANR	3247894	IfStatement	if ( master_proxy != NULL && proxy == master_proxy -> proxy )		3247865	3					
ANR	3247895	Condition	master_proxy != NULL && proxy == master_proxy -> proxy	1193:6:30495:30546	3247865	0	True				
ANR	3247896	AndExpression	master_proxy != NULL && proxy == master_proxy -> proxy		3247865	0		&&			
ANR	3247897	EqualityExpression	master_proxy != NULL		3247865	0		!=			
ANR	3247898	Identifier	master_proxy		3247865	0					
ANR	3247899	Identifier	NULL		3247865	1					
ANR	3247900	EqualityExpression	proxy == master_proxy -> proxy		3247865	1		==			
ANR	3247901	Identifier	proxy		3247865	0					
ANR	3247902	PtrMemberAccess	master_proxy -> proxy		3247865	1					
ANR	3247903	Identifier	master_proxy		3247865	0					
ANR	3247904	Identifier	proxy		3247865	1					
ANR	3247905	CompoundStatement		11:61:208:208	3247865	1					
ANR	3247906	ExpressionStatement	master_proxy -> num_references --	1194:2:30554:30584	3247865	0	True				
ANR	3247907	PostIncDecOperationExpression	master_proxy -> num_references --		3247865	0					
ANR	3247908	PtrMemberAccess	master_proxy -> num_references		3247865	0					
ANR	3247909	Identifier	master_proxy		3247865	0					
ANR	3247910	Identifier	num_references		3247865	1					
ANR	3247911	IncDec	--		3247865	1					
ANR	3247912	ReturnStatement	return ;	1195:2:30588:30594	3247865	1	True				
ANR	3247913	ExpressionStatement	"rc = ProxiesByFilename -> lookup ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"	1198:1:30601:30688	3247865	4	True				
ANR	3247914	AssignmentExpression	"rc = ProxiesByFilename -> lookup ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"		3247865	0		=			
ANR	3247915	Identifier	rc		3247865	0					
ANR	3247916	CallExpression	"ProxiesByFilename -> lookup ( HashKey ( proxy -> proxy_filename ) , gahp_proxy )"		3247865	1					
ANR	3247917	Callee	ProxiesByFilename -> lookup		3247865	0					
ANR	3247918	PtrMemberAccess	ProxiesByFilename -> lookup		3247865	0					
ANR	3247919	Identifier	ProxiesByFilename		3247865	0					
ANR	3247920	Identifier	lookup		3247865	1					
ANR	3247921	ArgumentList	HashKey ( proxy -> proxy_filename )		3247865	1					
ANR	3247922	Argument	HashKey ( proxy -> proxy_filename )		3247865	0					
ANR	3247923	CallExpression	HashKey ( proxy -> proxy_filename )		3247865	0					
ANR	3247924	Callee	HashKey		3247865	0					
ANR	3247925	Identifier	HashKey		3247865	0					
ANR	3247926	ArgumentList	proxy -> proxy_filename		3247865	1					
ANR	3247927	Argument	proxy -> proxy_filename		3247865	0					
ANR	3247928	PtrMemberAccess	proxy -> proxy_filename		3247865	0					
ANR	3247929	Identifier	proxy		3247865	0					
ANR	3247930	Identifier	proxy_filename		3247865	1					
ANR	3247931	Argument	gahp_proxy		3247865	1					
ANR	3247932	Identifier	gahp_proxy		3247865	0					
ANR	3247933	IfStatement	if ( rc != 0 )		3247865	5					
ANR	3247934	Condition	rc != 0	1201:6:30697:30703	3247865	0	True				
ANR	3247935	EqualityExpression	rc != 0		3247865	0		!=			
ANR	3247936	Identifier	rc		3247865	0					
ANR	3247937	PrimaryExpression	0		3247865	1					
ANR	3247938	CompoundStatement		19:16:365:365	3247865	1					
ANR	3247939	ExpressionStatement	"dprintf ( D_ALWAYS , ""GahpServer::UnregisterProxy() called with unknown proxy %s\\n"" , proxy -> proxy_filename )"	1202:2:30711:30817	3247865	0	True				
ANR	3247940	CallExpression	"dprintf ( D_ALWAYS , ""GahpServer::UnregisterProxy() called with unknown proxy %s\\n"" , proxy -> proxy_filename )"		3247865	0					
ANR	3247941	Callee	dprintf		3247865	0					
ANR	3247942	Identifier	dprintf		3247865	0					
ANR	3247943	ArgumentList	D_ALWAYS		3247865	1					
ANR	3247944	Argument	D_ALWAYS		3247865	0					
ANR	3247945	Identifier	D_ALWAYS		3247865	0					
ANR	3247946	Argument	"""GahpServer::UnregisterProxy() called with unknown proxy %s\\n"""		3247865	1					
ANR	3247947	PrimaryExpression	"""GahpServer::UnregisterProxy() called with unknown proxy %s\\n"""		3247865	0					
ANR	3247948	Argument	proxy -> proxy_filename		3247865	2					
ANR	3247949	PtrMemberAccess	proxy -> proxy_filename		3247865	0					
ANR	3247950	Identifier	proxy		3247865	0					
ANR	3247951	Identifier	proxy_filename		3247865	1					
ANR	3247952	ReturnStatement	return ;	1203:2:30821:30827	3247865	1	True				
ANR	3247953	ExpressionStatement	gahp_proxy -> num_references --	1206:1:30834:30862	3247865	6	True				
ANR	3247954	PostIncDecOperationExpression	gahp_proxy -> num_references --		3247865	0					
ANR	3247955	PtrMemberAccess	gahp_proxy -> num_references		3247865	0					
ANR	3247956	Identifier	gahp_proxy		3247865	0					
ANR	3247957	Identifier	num_references		3247865	1					
ANR	3247958	IncDec	--		3247865	1					
ANR	3247959	IfStatement	if ( gahp_proxy -> num_references == 0 )		3247865	7					
ANR	3247960	Condition	gahp_proxy -> num_references == 0	1208:6:30871:30901	3247865	0	True				
ANR	3247961	EqualityExpression	gahp_proxy -> num_references == 0		3247865	0		==			
ANR	3247962	PtrMemberAccess	gahp_proxy -> num_references		3247865	0					
ANR	3247963	Identifier	gahp_proxy		3247865	0					
ANR	3247964	Identifier	num_references		3247865	1					
ANR	3247965	PrimaryExpression	0		3247865	1					
ANR	3247966	CompoundStatement		26:40:563:563	3247865	1					
ANR	3247967	ExpressionStatement	ProxiesByFilename -> remove ( HashKey ( gahp_proxy -> proxy -> proxy_filename ) )	1209:2:30909:30982	3247865	0	True				
ANR	3247968	CallExpression	ProxiesByFilename -> remove ( HashKey ( gahp_proxy -> proxy -> proxy_filename ) )		3247865	0					
ANR	3247969	Callee	ProxiesByFilename -> remove		3247865	0					
ANR	3247970	PtrMemberAccess	ProxiesByFilename -> remove		3247865	0					
ANR	3247971	Identifier	ProxiesByFilename		3247865	0					
ANR	3247972	Identifier	remove		3247865	1					
ANR	3247973	ArgumentList	HashKey ( gahp_proxy -> proxy -> proxy_filename )		3247865	1					
ANR	3247974	Argument	HashKey ( gahp_proxy -> proxy -> proxy_filename )		3247865	0					
ANR	3247975	CallExpression	HashKey ( gahp_proxy -> proxy -> proxy_filename )		3247865	0					
ANR	3247976	Callee	HashKey		3247865	0					
ANR	3247977	Identifier	HashKey		3247865	0					
ANR	3247978	ArgumentList	gahp_proxy -> proxy -> proxy_filename		3247865	1					
ANR	3247979	Argument	gahp_proxy -> proxy -> proxy_filename		3247865	0					
ANR	3247980	PtrMemberAccess	gahp_proxy -> proxy -> proxy_filename		3247865	0					
ANR	3247981	PtrMemberAccess	gahp_proxy -> proxy		3247865	0					
ANR	3247982	Identifier	gahp_proxy		3247865	0					
ANR	3247983	Identifier	proxy		3247865	1					
ANR	3247984	Identifier	proxy_filename		3247865	1					
ANR	3247985	ExpressionStatement	uncacheProxy ( gahp_proxy )	1210:2:30986:31012	3247865	1	True				
ANR	3247986	CallExpression	uncacheProxy ( gahp_proxy )		3247865	0					
ANR	3247987	Callee	uncacheProxy		3247865	0					
ANR	3247988	Identifier	uncacheProxy		3247865	0					
ANR	3247989	ArgumentList	gahp_proxy		3247865	1					
ANR	3247990	Argument	gahp_proxy		3247865	0					
ANR	3247991	Identifier	gahp_proxy		3247865	0					
ANR	3247992	ExpressionStatement	"ReleaseProxy ( gahp_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"	1211:2:31016:31107	3247865	2	True				
ANR	3247993	CallExpression	"ReleaseProxy ( gahp_proxy -> proxy , ( TimerHandlercpp ) & GahpServer :: ProxyCallback , this )"		3247865	0					
ANR	3247994	Callee	ReleaseProxy		3247865	0					
ANR	3247995	Identifier	ReleaseProxy		3247865	0					
ANR	3247996	ArgumentList	gahp_proxy -> proxy		3247865	1					
ANR	3247997	Argument	gahp_proxy -> proxy		3247865	0					
ANR	3247998	PtrMemberAccess	gahp_proxy -> proxy		3247865	0					
ANR	3247999	Identifier	gahp_proxy		3247865	0					
ANR	3248000	Identifier	proxy		3247865	1					
ANR	3248001	Argument	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3247865	1					
ANR	3248002	CastExpression	( TimerHandlercpp ) & GahpServer :: ProxyCallback		3247865	0					
ANR	3248003	CastTarget	TimerHandlercpp		3247865	0					
ANR	3248004	UnaryOperationExpression	& GahpServer :: ProxyCallback		3247865	1					
ANR	3248005	UnaryOperator	&		3247865	0					
ANR	3248006	Identifier	GahpServer :: ProxyCallback		3247865	1					
ANR	3248007	Argument	this		3247865	2					
ANR	3248008	Identifier	this		3247865	0					
ANR	3248009	Statement	delete	1213:2:31111:31116	3247865	3	True				
ANR	3248010	ExpressionStatement	gahp_proxy	1213:9:31118:31128	3247865	4	True				
ANR	3248011	Identifier	gahp_proxy		3247865	0					
ANR	3248012	ReturnType	void		3247865	1					
ANR	3248013	Identifier	GahpServer :: UnregisterProxy		3247865	2					
ANR	3248014	ParameterList	Proxy * proxy		3247865	3					
ANR	3248015	Parameter	Proxy * proxy	1182:29:30326:30337	3247865	0	True				
ANR	3248016	ParameterType	Proxy *		3247865	0					
ANR	3248017	Identifier	proxy		3247865	1					
ANR	3248018	CFGEntryNode	ENTRY		3247865		True				
ANR	3248019	CFGExitNode	EXIT		3247865		True				
ANR	3248020	Symbol	ProxiesByFilename		3247865						
ANR	3248021	Symbol	master_proxy -> proxy		3247865						
ANR	3248022	Symbol	gahp_proxy -> proxy -> proxy_filename		3247865						
ANR	3248023	Symbol	ProxiesByFilename -> lookup		3247865						
ANR	3248024	Symbol	& GahpServer :: ProxyCallback		3247865						
ANR	3248025	Symbol	can_cache_proxies		3247865						
ANR	3248026	Symbol	* * gahp_proxy		3247865						
ANR	3248027	Symbol	HashKey		3247865						
ANR	3248028	Symbol	* gahp_proxy -> proxy		3247865						
ANR	3248029	Symbol	* gahp_proxy		3247865						
ANR	3248030	Symbol	NULL		3247865						
ANR	3248031	Symbol	false		3247865						
ANR	3248032	Symbol	D_ALWAYS		3247865						
ANR	3248033	Symbol	this		3247865						
ANR	3248034	Symbol	proxy -> proxy_filename		3247865						
ANR	3248035	Symbol	gahp_proxy -> proxy		3247865						
ANR	3248036	Symbol	* ProxiesByFilename		3247865						
ANR	3248037	Symbol	* master_proxy		3247865						
ANR	3248038	Symbol	master_proxy -> num_references		3247865						
ANR	3248039	Symbol	proxy		3247865						
ANR	3248040	Symbol	rc		3247865						
ANR	3248041	Symbol	master_proxy		3247865						
ANR	3248042	Symbol	* proxy		3247865						
ANR	3248043	Symbol	gahp_proxy		3247865						
ANR	3248044	Symbol	gahp_proxy -> num_references		3247865						
ANR	3248045	Function	GahpServer :: setPollInterval	1217:0:31136:31502							
ANR	3248046	FunctionDef	GahpServer :: setPollInterval (unsigned int interval)		3248045	0					
ANR	3248047	CompoundStatement		1219:0:31192:31502	3248045	0					
ANR	3248048	IfStatement	if ( poll_tid != - 1 )		3248045	0					
ANR	3248049	Condition	poll_tid != - 1	1220:5:31199:31212	3248045	0	True				
ANR	3248050	EqualityExpression	poll_tid != - 1		3248045	0		!=			
ANR	3248051	Identifier	poll_tid		3248045	0					
ANR	3248052	UnaryOperationExpression	- 1		3248045	1					
ANR	3248053	UnaryOperator	-		3248045	0					
ANR	3248054	PrimaryExpression	1		3248045	1					
ANR	3248055	CompoundStatement		2:21:22:22	3248045	1					
ANR	3248056	ExpressionStatement	daemonCore -> Cancel_Timer ( poll_tid )	1221:2:31219:31253	3248045	0	True				
ANR	3248057	CallExpression	daemonCore -> Cancel_Timer ( poll_tid )		3248045	0					
ANR	3248058	Callee	daemonCore -> Cancel_Timer		3248045	0					
ANR	3248059	PtrMemberAccess	daemonCore -> Cancel_Timer		3248045	0					
ANR	3248060	Identifier	daemonCore		3248045	0					
ANR	3248061	Identifier	Cancel_Timer		3248045	1					
ANR	3248062	ArgumentList	poll_tid		3248045	1					
ANR	3248063	Argument	poll_tid		3248045	0					
ANR	3248064	Identifier	poll_tid		3248045	0					
ANR	3248065	ExpressionStatement	poll_tid = - 1	1222:2:31257:31270	3248045	1	True				
ANR	3248066	AssignmentExpression	poll_tid = - 1		3248045	0		=			
ANR	3248067	Identifier	poll_tid		3248045	0					
ANR	3248068	UnaryOperationExpression	- 1		3248045	1					
ANR	3248069	UnaryOperator	-		3248045	0					
ANR	3248070	PrimaryExpression	1		3248045	1					
ANR	3248071	ExpressionStatement	m_pollInterval = interval	1224:1:31276:31301	3248045	1	True				
ANR	3248072	AssignmentExpression	m_pollInterval = interval		3248045	0		=			
ANR	3248073	Identifier	m_pollInterval		3248045	0					
ANR	3248074	Identifier	interval		3248045	1					
ANR	3248075	IfStatement	if ( m_pollInterval > 0 )		3248045	2					
ANR	3248076	Condition	m_pollInterval > 0	1225:6:31309:31326	3248045	0	True				
ANR	3248077	RelationalExpression	m_pollInterval > 0		3248045	0		>			
ANR	3248078	Identifier	m_pollInterval		3248045	0					
ANR	3248079	PrimaryExpression	0		3248045	1					
ANR	3248080	CompoundStatement		7:27:137:137	3248045	1					
ANR	3248081	ExpressionStatement	"poll_tid = daemonCore -> Register_Timer ( m_pollInterval , m_pollInterval , ( TimerHandlercpp ) & GahpServer :: poll , ""GahpServer::poll"" , this )"	1226:2:31334:31497	3248045	0	True				
ANR	3248082	AssignmentExpression	"poll_tid = daemonCore -> Register_Timer ( m_pollInterval , m_pollInterval , ( TimerHandlercpp ) & GahpServer :: poll , ""GahpServer::poll"" , this )"		3248045	0		=			
ANR	3248083	Identifier	poll_tid		3248045	0					
ANR	3248084	CallExpression	"daemonCore -> Register_Timer ( m_pollInterval , m_pollInterval , ( TimerHandlercpp ) & GahpServer :: poll , ""GahpServer::poll"" , this )"		3248045	1					
ANR	3248085	Callee	daemonCore -> Register_Timer		3248045	0					
ANR	3248086	PtrMemberAccess	daemonCore -> Register_Timer		3248045	0					
ANR	3248087	Identifier	daemonCore		3248045	0					
ANR	3248088	Identifier	Register_Timer		3248045	1					
ANR	3248089	ArgumentList	m_pollInterval		3248045	1					
ANR	3248090	Argument	m_pollInterval		3248045	0					
ANR	3248091	Identifier	m_pollInterval		3248045	0					
ANR	3248092	Argument	m_pollInterval		3248045	1					
ANR	3248093	Identifier	m_pollInterval		3248045	0					
ANR	3248094	Argument	( TimerHandlercpp ) & GahpServer :: poll		3248045	2					
ANR	3248095	CastExpression	( TimerHandlercpp ) & GahpServer :: poll		3248045	0					
ANR	3248096	CastTarget	TimerHandlercpp		3248045	0					
ANR	3248097	UnaryOperationExpression	& GahpServer :: poll		3248045	1					
ANR	3248098	UnaryOperator	&		3248045	0					
ANR	3248099	Identifier	GahpServer :: poll		3248045	1					
ANR	3248100	Argument	"""GahpServer::poll"""		3248045	3					
ANR	3248101	PrimaryExpression	"""GahpServer::poll"""		3248045	0					
ANR	3248102	Argument	this		3248045	4					
ANR	3248103	Identifier	this		3248045	0					
ANR	3248104	ReturnType	void		3248045	1					
ANR	3248105	Identifier	GahpServer :: setPollInterval		3248045	2					
ANR	3248106	ParameterList	unsigned int interval		3248045	3					
ANR	3248107	Parameter	unsigned int interval	1218:28:31169:31189	3248045	0	True				
ANR	3248108	ParameterType	unsigned int		3248045	0					
ANR	3248109	Identifier	interval		3248045	1					
ANR	3248110	CFGEntryNode	ENTRY		3248045		True				
ANR	3248111	CFGExitNode	EXIT		3248045		True				
ANR	3248112	Symbol	m_pollInterval		3248045						
ANR	3248113	Symbol	& GahpServer :: poll		3248045						
ANR	3248114	Symbol	* daemonCore		3248045						
ANR	3248115	Symbol	daemonCore		3248045						
ANR	3248116	Symbol	daemonCore -> Register_Timer		3248045						
ANR	3248117	Symbol	this		3248045						
ANR	3248118	Symbol	interval		3248045						
ANR	3248119	Symbol	poll_tid		3248045						
ANR	3248120	Function	GahpServer :: getPollInterval	1233:0:31505:31574							
ANR	3248121	FunctionDef	GahpServer :: getPollInterval ()		3248120	0					
ANR	3248122	CompoundStatement		1235:0:31548:31574	3248120	0					
ANR	3248123	ReturnStatement	return m_pollInterval ;	1236:1:31551:31572	3248120	0	True				
ANR	3248124	Identifier	m_pollInterval		3248120	0					
ANR	3248125	ReturnType	unsigned int		3248120	1					
ANR	3248126	Identifier	GahpServer :: getPollInterval		3248120	2					
ANR	3248127	ParameterList			3248120	3					
ANR	3248128	CFGEntryNode	ENTRY		3248120		True				
ANR	3248129	CFGExitNode	EXIT		3248120		True				
ANR	3248130	Symbol	m_pollInterval		3248120						
ANR	3248131	Function	escapeGahpString	1239:0:31577:31954							
ANR	3248132	FunctionDef	escapeGahpString (const char * input)		3248131	0					
ANR	3248133	CompoundStatement		1241:0:31628:31954	3248131	0					
ANR	3248134	Statement	static	1242:1:31631:31636	3248131	0	True				
ANR	3248135	IdentifierDeclStatement	std :: string output ;	1242:8:31638:31656	3248131	1	True				
ANR	3248136	IdentifierDecl	output		3248131	0					
ANR	3248137	IdentifierDeclType	std :: string		3248131	0					
ANR	3248138	Identifier	output		3248131	1					
ANR	3248139	IfStatement	if ( ! input )		3248131	2					
ANR	3248140	Condition	! input	1244:5:31664:31669	3248131	0	True				
ANR	3248141	UnaryOperationExpression	! input		3248131	0					
ANR	3248142	UnaryOperator	!		3248131	0					
ANR	3248143	Identifier	input		3248131	1					
ANR	3248144	ReturnStatement	return NULL ;	1244:13:31672:31683	3248131	1	True				
ANR	3248145	Identifier	NULL		3248131	0					
ANR	3248146	ExpressionStatement	"output = """""	1246:1:31687:31698	3248131	3	True				
ANR	3248147	AssignmentExpression	"output = """""		3248131	0		=			
ANR	3248148	Identifier	output		3248131	0					
ANR	3248149	PrimaryExpression	""""""		3248131	1					
ANR	3248150	IdentifierDeclStatement	unsigned int i = 0 ;	1248:1:31702:31720	3248131	4	True				
ANR	3248151	IdentifierDecl	i = 0		3248131	0					
ANR	3248152	IdentifierDeclType	unsigned int		3248131	0					
ANR	3248153	Identifier	i		3248131	1					
ANR	3248154	AssignmentExpression	i = 0		3248131	2		=			
ANR	3248155	Identifier	i		3248131	0					
ANR	3248156	PrimaryExpression	0		3248131	1					
ANR	3248157	IdentifierDeclStatement	size_t input_len = strlen ( input ) ;	1249:1:31723:31755	3248131	5	True				
ANR	3248158	IdentifierDecl	input_len = strlen ( input )		3248131	0					
ANR	3248159	IdentifierDeclType	size_t		3248131	0					
ANR	3248160	Identifier	input_len		3248131	1					
ANR	3248161	AssignmentExpression	input_len = strlen ( input )		3248131	2		=			
ANR	3248162	Identifier	input_len		3248131	0					
ANR	3248163	CallExpression	strlen ( input )		3248131	1					
ANR	3248164	Callee	strlen		3248131	0					
ANR	3248165	Identifier	strlen		3248131	0					
ANR	3248166	ArgumentList	input		3248131	1					
ANR	3248167	Argument	input		3248131	0					
ANR	3248168	Identifier	input		3248131	0					
ANR	3248169	ForStatement	for ( i = 0 ; i < input_len ; i ++ )		3248131	6					
ANR	3248170	ForInit	i = 0 ;	1250:6:31763:31766	3248131	0	True				
ANR	3248171	AssignmentExpression	i = 0		3248131	0		=			
ANR	3248172	Identifier	i		3248131	0					
ANR	3248173	PrimaryExpression	0		3248131	1					
ANR	3248174	Condition	i < input_len	1250:11:31768:31780	3248131	1	True				
ANR	3248175	RelationalExpression	i < input_len		3248131	0		<			
ANR	3248176	Identifier	i		3248131	0					
ANR	3248177	Identifier	input_len		3248131	1					
ANR	3248178	PostIncDecOperationExpression	i ++	1250:26:31783:31785	3248131	2	True				
ANR	3248179	Identifier	i		3248131	0					
ANR	3248180	IncDec	++		3248131	1					
ANR	3248181	CompoundStatement		10:31:159:159	3248131	3					
ANR	3248182	IfStatement	if ( input [ i ] == ' ' || input [ i ] == '\\\\' || input [ i ] == '\\r' || input [ i ] == '\\n' )		3248131	0					
ANR	3248183	Condition	input [ i ] == ' ' || input [ i ] == '\\\\' || input [ i ] == '\\r' || input [ i ] == '\\n'	1251:7:31797:31875	3248131	0	True				
ANR	3248184	OrExpression	input [ i ] == ' ' || input [ i ] == '\\\\' || input [ i ] == '\\r' || input [ i ] == '\\n'		3248131	0		||			
ANR	3248185	EqualityExpression	input [ i ] == ' '		3248131	0		==			
ANR	3248186	ArrayIndexing	input [ i ]		3248131	0					
ANR	3248187	Identifier	input		3248131	0					
ANR	3248188	Identifier	i		3248131	1					
ANR	3248189	PrimaryExpression	' '		3248131	1					
ANR	3248190	OrExpression	input [ i ] == '\\\\' || input [ i ] == '\\r' || input [ i ] == '\\n'		3248131	1		||			
ANR	3248191	EqualityExpression	input [ i ] == '\\\\'		3248131	0		==			
ANR	3248192	ArrayIndexing	input [ i ]		3248131	0					
ANR	3248193	Identifier	input		3248131	0					
ANR	3248194	Identifier	i		3248131	1					
ANR	3248195	PrimaryExpression	'\\\\'		3248131	1					
ANR	3248196	OrExpression	input [ i ] == '\\r' || input [ i ] == '\\n'		3248131	1		||			
ANR	3248197	EqualityExpression	input [ i ] == '\\r'		3248131	0		==			
ANR	3248198	ArrayIndexing	input [ i ]		3248131	0					
ANR	3248199	Identifier	input		3248131	0					
ANR	3248200	Identifier	i		3248131	1					
ANR	3248201	PrimaryExpression	'\\r'		3248131	1					
ANR	3248202	EqualityExpression	input [ i ] == '\\n'		3248131	1		==			
ANR	3248203	ArrayIndexing	input [ i ]		3248131	0					
ANR	3248204	Identifier	input		3248131	0					
ANR	3248205	Identifier	i		3248131	1					
ANR	3248206	PrimaryExpression	'\\n'		3248131	1					
ANR	3248207	CompoundStatement		12:23:250:250	3248131	1					
ANR	3248208	ExpressionStatement	output += '\\\\'	1253:3:31884:31898	3248131	0	True				
ANR	3248209	AssignmentExpression	output += '\\\\'		3248131	0		+=			
ANR	3248210	Identifier	output		3248131	0					
ANR	3248211	PrimaryExpression	'\\\\'		3248131	1					
ANR	3248212	ExpressionStatement	output += input [ i ]	1255:2:31906:31924	3248131	1	True				
ANR	3248213	AssignmentExpression	output += input [ i ]		3248131	0		+=			
ANR	3248214	Identifier	output		3248131	0					
ANR	3248215	ArrayIndexing	input [ i ]		3248131	1					
ANR	3248216	Identifier	input		3248131	0					
ANR	3248217	Identifier	i		3248131	1					
ANR	3248218	ReturnStatement	return output . c_str ( ) ;	1258:1:31931:31952	3248131	7	True				
ANR	3248219	CallExpression	output . c_str ( )		3248131	0					
ANR	3248220	Callee	output . c_str		3248131	0					
ANR	3248221	MemberAccess	output . c_str		3248131	0					
ANR	3248222	Identifier	output		3248131	0					
ANR	3248223	Identifier	c_str		3248131	1					
ANR	3248224	ArgumentList			3248131	1					
ANR	3248225	ReturnType	const char *		3248131	1					
ANR	3248226	Identifier	escapeGahpString		3248131	2					
ANR	3248227	ParameterList	const char * input		3248131	3					
ANR	3248228	Parameter	const char * input	1240:17:31607:31624	3248131	0	True				
ANR	3248229	ParameterType	const char *		3248131	0					
ANR	3248230	Identifier	input		3248131	1					
ANR	3248231	CFGEntryNode	ENTRY		3248131		True				
ANR	3248232	CFGExitNode	EXIT		3248131		True				
ANR	3248233	Symbol	output		3248131						
ANR	3248234	Symbol	input		3248131						
ANR	3248235	Symbol	strlen		3248131						
ANR	3248236	Symbol	NULL		3248131						
ANR	3248237	Symbol	input_len		3248131						
ANR	3248238	Symbol	* i		3248131						
ANR	3248239	Symbol	* input		3248131						
ANR	3248240	Symbol	i		3248131						
ANR	3248241	Symbol	output . c_str		3248131						
ANR	3248242	Function	GahpClient :: getErrorString	1261:0:31957:32770							
ANR	3248243	FunctionDef	GahpClient :: getErrorString ()		3248242	0					
ANR	3248244	CompoundStatement		1263:0:31999:32770	3248242	0					
ANR	3248245	Statement	static	1264:1:32002:32007	3248242	0	True				
ANR	3248246	IdentifierDeclStatement	std :: string output ;	1264:8:32009:32027	3248242	1	True				
ANR	3248247	IdentifierDecl	output		3248242	0					
ANR	3248248	IdentifierDeclType	std :: string		3248242	0					
ANR	3248249	Identifier	output		3248242	1					
ANR	3248250	ExpressionStatement	"output = """""	1266:1:32031:32042	3248242	2	True				
ANR	3248251	AssignmentExpression	"output = """""		3248242	0		=			
ANR	3248252	Identifier	output		3248242	0					
ANR	3248253	PrimaryExpression	""""""		3248242	1					
ANR	3248254	IdentifierDeclStatement	unsigned int i = 0 ;	1268:1:32046:32064	3248242	3	True				
ANR	3248255	IdentifierDecl	i = 0		3248242	0					
ANR	3248256	IdentifierDeclType	unsigned int		3248242	0					
ANR	3248257	Identifier	i		3248242	1					
ANR	3248258	AssignmentExpression	i = 0		3248242	2		=			
ANR	3248259	Identifier	i		3248242	0					
ANR	3248260	PrimaryExpression	0		3248242	1					
ANR	3248261	IdentifierDeclStatement	unsigned int input_len = error_string . length ( ) ;	1269:1:32067:32113	3248242	4	True				
ANR	3248262	IdentifierDecl	input_len = error_string . length ( )		3248242	0					
ANR	3248263	IdentifierDeclType	unsigned int		3248242	0					
ANR	3248264	Identifier	input_len		3248242	1					
ANR	3248265	AssignmentExpression	input_len = error_string . length ( )		3248242	2		=			
ANR	3248266	Identifier	input_len		3248242	0					
ANR	3248267	CallExpression	error_string . length ( )		3248242	1					
ANR	3248268	Callee	error_string . length		3248242	0					
ANR	3248269	MemberAccess	error_string . length		3248242	0					
ANR	3248270	Identifier	error_string		3248242	0					
ANR	3248271	Identifier	length		3248242	1					
ANR	3248272	ArgumentList			3248242	1					
ANR	3248273	ForStatement	for ( i = 0 ; i < input_len ; i ++ )		3248242	5					
ANR	3248274	ForInit	i = 0 ;	1270:6:32121:32124	3248242	0	True				
ANR	3248275	AssignmentExpression	i = 0		3248242	0		=			
ANR	3248276	Identifier	i		3248242	0					
ANR	3248277	PrimaryExpression	0		3248242	1					
ANR	3248278	Condition	i < input_len	1270:11:32126:32138	3248242	1	True				
ANR	3248279	RelationalExpression	i < input_len		3248242	0		<			
ANR	3248280	Identifier	i		3248242	0					
ANR	3248281	Identifier	input_len		3248242	1					
ANR	3248282	PostIncDecOperationExpression	i ++	1270:26:32141:32143	3248242	2	True				
ANR	3248283	Identifier	i		3248242	0					
ANR	3248284	IncDec	++		3248242	1					
ANR	3248285	CompoundStatement		8:31:146:146	3248242	3					
ANR	3248286	SwitchStatement	switch ( error_string [ i ] )		3248242	0					
ANR	3248287	Condition	error_string [ i ]	1279:10:32582:32596	3248242	0	True				
ANR	3248288	ArrayIndexing	error_string [ i ]		3248242	0					
ANR	3248289	Identifier	error_string		3248242	0					
ANR	3248290	Identifier	i		3248242	1					
ANR	3248291	CompoundStatement		17:27:599:599	3248242	1					
ANR	3248292	Label	case '\\n' :	1280:2:32603:32612	3248242	0	True				
ANR	3248293	ExpressionStatement	"output += ""\\\\n"""	1281:3:32617:32632	3248242	1	True				
ANR	3248294	AssignmentExpression	"output += ""\\\\n"""		3248242	0		+=			
ANR	3248295	Identifier	output		3248242	0					
ANR	3248296	PrimaryExpression	"""\\\\n"""		3248242	1					
ANR	3248297	BreakStatement	break ;	1282:3:32637:32642	3248242	2	True				
ANR	3248298	Label	case '\\r' :	1283:2:32646:32655	3248242	3	True				
ANR	3248299	ExpressionStatement	"output += ""\\\\r"""	1284:3:32660:32675	3248242	4	True				
ANR	3248300	AssignmentExpression	"output += ""\\\\r"""		3248242	0		+=			
ANR	3248301	Identifier	output		3248242	0					
ANR	3248302	PrimaryExpression	"""\\\\r"""		3248242	1					
ANR	3248303	BreakStatement	break ;	1285:3:32680:32685	3248242	5	True				
ANR	3248304	Label	default :	1286:2:32689:32696	3248242	6	True				
ANR	3248305	Identifier	default		3248242	0					
ANR	3248306	ExpressionStatement	output += error_string [ i ]	1287:3:32701:32726	3248242	7	True				
ANR	3248307	AssignmentExpression	output += error_string [ i ]		3248242	0		+=			
ANR	3248308	Identifier	output		3248242	0					
ANR	3248309	ArrayIndexing	error_string [ i ]		3248242	1					
ANR	3248310	Identifier	error_string		3248242	0					
ANR	3248311	Identifier	i		3248242	1					
ANR	3248312	BreakStatement	break ;	1288:3:32731:32736	3248242	8	True				
ANR	3248313	ReturnStatement	return output . c_str ( ) ;	1292:1:32747:32768	3248242	6	True				
ANR	3248314	CallExpression	output . c_str ( )		3248242	0					
ANR	3248315	Callee	output . c_str		3248242	0					
ANR	3248316	MemberAccess	output . c_str		3248242	0					
ANR	3248317	Identifier	output		3248242	0					
ANR	3248318	Identifier	c_str		3248242	1					
ANR	3248319	ArgumentList			3248242	1					
ANR	3248320	ReturnType	const char *		3248242	1					
ANR	3248321	Identifier	GahpClient :: getErrorString		3248242	2					
ANR	3248322	ParameterList			3248242	3					
ANR	3248323	CFGEntryNode	ENTRY		3248242		True				
ANR	3248324	CFGExitNode	EXIT		3248242		True				
ANR	3248325	Symbol	output		3248242						
ANR	3248326	Symbol	error_string		3248242						
ANR	3248327	Symbol	error_string . length		3248242						
ANR	3248328	Symbol	input_len		3248242						
ANR	3248329	Symbol	* i		3248242						
ANR	3248330	Symbol	* error_string		3248242						
ANR	3248331	Symbol	i		3248242						
ANR	3248332	Symbol	output . c_str		3248242						
ANR	3248333	Function	GahpClient :: getVersion	1295:0:32773:32845							
ANR	3248334	FunctionDef	GahpClient :: getVersion ()		3248333	0					
ANR	3248335	CompoundStatement		1297:0:32811:32845	3248333	0					
ANR	3248336	ReturnStatement	return server -> m_gahp_version ;	1298:1:32814:32843	3248333	0	True				
ANR	3248337	PtrMemberAccess	server -> m_gahp_version		3248333	0					
ANR	3248338	Identifier	server		3248333	0					
ANR	3248339	Identifier	m_gahp_version		3248333	1					
ANR	3248340	ReturnType	const char *		3248333	1					
ANR	3248341	Identifier	GahpClient :: getVersion		3248333	2					
ANR	3248342	ParameterList			3248333	3					
ANR	3248343	CFGEntryNode	ENTRY		3248333		True				
ANR	3248344	CFGExitNode	EXIT		3248333		True				
ANR	3248345	Symbol	server		3248333						
ANR	3248346	Symbol	* server		3248333						
ANR	3248347	Symbol	server -> m_gahp_version		3248333						
ANR	3248348	Function	GahpClient :: setNormalProxy	1301:0:32848:33218							
ANR	3248349	FunctionDef	GahpClient :: setNormalProxy (Proxy * proxy)		3248348	0					
ANR	3248350	CompoundStatement		1303:0:32896:33218	3248348	0					
ANR	3248351	IfStatement	if ( ! server -> can_cache_proxies )		3248348	0					
ANR	3248352	Condition	! server -> can_cache_proxies	1304:6:32904:32929	3248348	0	True				
ANR	3248353	UnaryOperationExpression	! server -> can_cache_proxies		3248348	0					
ANR	3248354	UnaryOperator	!		3248348	0					
ANR	3248355	PtrMemberAccess	server -> can_cache_proxies		3248348	1					
ANR	3248356	Identifier	server		3248348	0					
ANR	3248357	Identifier	can_cache_proxies		3248348	1					
ANR	3248358	CompoundStatement		2:35:36:36	3248348	1					
ANR	3248359	ReturnStatement	return ;	1305:2:32937:32943	3248348	0	True				
ANR	3248360	IfStatement	if ( normal_proxy != NULL && proxy == normal_proxy -> proxy )		3248348	1					
ANR	3248361	Condition	normal_proxy != NULL && proxy == normal_proxy -> proxy	1307:6:32954:33005	3248348	0	True				
ANR	3248362	AndExpression	normal_proxy != NULL && proxy == normal_proxy -> proxy		3248348	0		&&			
ANR	3248363	EqualityExpression	normal_proxy != NULL		3248348	0		!=			
ANR	3248364	Identifier	normal_proxy		3248348	0					
ANR	3248365	Identifier	NULL		3248348	1					
ANR	3248366	EqualityExpression	proxy == normal_proxy -> proxy		3248348	1		==			
ANR	3248367	Identifier	proxy		3248348	0					
ANR	3248368	PtrMemberAccess	normal_proxy -> proxy		3248348	1					
ANR	3248369	Identifier	normal_proxy		3248348	0					
ANR	3248370	Identifier	proxy		3248348	1					
ANR	3248371	CompoundStatement		5:61:112:112	3248348	1					
ANR	3248372	ReturnStatement	return ;	1308:2:33013:33019	3248348	0	True				
ANR	3248373	IfStatement	if ( normal_proxy != NULL )		3248348	2					
ANR	3248374	Condition	normal_proxy != NULL	1310:6:33030:33049	3248348	0	True				
ANR	3248375	EqualityExpression	normal_proxy != NULL		3248348	0		!=			
ANR	3248376	Identifier	normal_proxy		3248348	0					
ANR	3248377	Identifier	NULL		3248348	1					
ANR	3248378	CompoundStatement		8:29:156:156	3248348	1					
ANR	3248379	ExpressionStatement	server -> UnregisterProxy ( normal_proxy -> proxy )	1311:2:33057:33103	3248348	0	True				
ANR	3248380	CallExpression	server -> UnregisterProxy ( normal_proxy -> proxy )		3248348	0					
ANR	3248381	Callee	server -> UnregisterProxy		3248348	0					
ANR	3248382	PtrMemberAccess	server -> UnregisterProxy		3248348	0					
ANR	3248383	Identifier	server		3248348	0					
ANR	3248384	Identifier	UnregisterProxy		3248348	1					
ANR	3248385	ArgumentList	normal_proxy -> proxy		3248348	1					
ANR	3248386	Argument	normal_proxy -> proxy		3248348	0					
ANR	3248387	PtrMemberAccess	normal_proxy -> proxy		3248348	0					
ANR	3248388	Identifier	normal_proxy		3248348	0					
ANR	3248389	Identifier	proxy		3248348	1					
ANR	3248390	IdentifierDeclStatement	GahpProxyInfo * gahp_proxy = server -> RegisterProxy ( proxy ) ;	1313:1:33109:33167	3248348	3	True				
ANR	3248391	IdentifierDecl	* gahp_proxy = server -> RegisterProxy ( proxy )		3248348	0					
ANR	3248392	IdentifierDeclType	GahpProxyInfo *		3248348	0					
ANR	3248393	Identifier	gahp_proxy		3248348	1					
ANR	3248394	AssignmentExpression	* gahp_proxy = server -> RegisterProxy ( proxy )		3248348	2		=			
ANR	3248395	Identifier	gahp_proxy		3248348	0					
ANR	3248396	CallExpression	server -> RegisterProxy ( proxy )		3248348	1					
ANR	3248397	Callee	server -> RegisterProxy		3248348	0					
ANR	3248398	PtrMemberAccess	server -> RegisterProxy		3248348	0					
ANR	3248399	Identifier	server		3248348	0					
ANR	3248400	Identifier	RegisterProxy		3248348	1					
ANR	3248401	ArgumentList	proxy		3248348	1					
ANR	3248402	Argument	proxy		3248348	0					
ANR	3248403	Identifier	proxy		3248348	0					
ANR	3248404	ExpressionStatement	ASSERT ( gahp_proxy )	1314:1:33170:33188	3248348	4	True				
ANR	3248405	CallExpression	ASSERT ( gahp_proxy )		3248348	0					
ANR	3248406	Callee	ASSERT		3248348	0					
ANR	3248407	Identifier	ASSERT		3248348	0					
ANR	3248408	ArgumentList	gahp_proxy		3248348	1					
ANR	3248409	Argument	gahp_proxy		3248348	0					
ANR	3248410	Identifier	gahp_proxy		3248348	0					
ANR	3248411	ExpressionStatement	normal_proxy = gahp_proxy	1315:1:33191:33216	3248348	5	True				
ANR	3248412	AssignmentExpression	normal_proxy = gahp_proxy		3248348	0		=			
ANR	3248413	Identifier	normal_proxy		3248348	0					
ANR	3248414	Identifier	gahp_proxy		3248348	1					
ANR	3248415	ReturnType	void		3248348	1					
ANR	3248416	Identifier	GahpClient :: setNormalProxy		3248348	2					
ANR	3248417	ParameterList	Proxy * proxy		3248348	3					
ANR	3248418	Parameter	Proxy * proxy	1302:28:32881:32892	3248348	0	True				
ANR	3248419	ParameterType	Proxy *		3248348	0					
ANR	3248420	Identifier	proxy		3248348	1					
ANR	3248421	CFGEntryNode	ENTRY		3248348		True				
ANR	3248422	CFGExitNode	EXIT		3248348		True				
ANR	3248423	Symbol	proxy		3248348						
ANR	3248424	Symbol	server		3248348						
ANR	3248425	Symbol	* server		3248348						
ANR	3248426	Symbol	normal_proxy		3248348						
ANR	3248427	Symbol	NULL		3248348						
ANR	3248428	Symbol	* normal_proxy		3248348						
ANR	3248429	Symbol	server -> RegisterProxy		3248348						
ANR	3248430	Symbol	server -> can_cache_proxies		3248348						
ANR	3248431	Symbol	gahp_proxy		3248348						
ANR	3248432	Symbol	normal_proxy -> proxy		3248348						
ANR	3248433	Function	GahpClient :: setDelegProxy	1318:0:33221:33585							
ANR	3248434	FunctionDef	GahpClient :: setDelegProxy (Proxy * proxy)		3248433	0					
ANR	3248435	CompoundStatement		1320:0:33268:33585	3248433	0					
ANR	3248436	IfStatement	if ( ! server -> can_cache_proxies )		3248433	0					
ANR	3248437	Condition	! server -> can_cache_proxies	1321:6:33276:33301	3248433	0	True				
ANR	3248438	UnaryOperationExpression	! server -> can_cache_proxies		3248433	0					
ANR	3248439	UnaryOperator	!		3248433	0					
ANR	3248440	PtrMemberAccess	server -> can_cache_proxies		3248433	1					
ANR	3248441	Identifier	server		3248433	0					
ANR	3248442	Identifier	can_cache_proxies		3248433	1					
ANR	3248443	CompoundStatement		2:35:36:36	3248433	1					
ANR	3248444	ReturnStatement	return ;	1322:2:33309:33315	3248433	0	True				
ANR	3248445	IfStatement	if ( deleg_proxy != NULL && proxy == deleg_proxy -> proxy )		3248433	1					
ANR	3248446	Condition	deleg_proxy != NULL && proxy == deleg_proxy -> proxy	1324:6:33326:33375	3248433	0	True				
ANR	3248447	AndExpression	deleg_proxy != NULL && proxy == deleg_proxy -> proxy		3248433	0		&&			
ANR	3248448	EqualityExpression	deleg_proxy != NULL		3248433	0		!=			
ANR	3248449	Identifier	deleg_proxy		3248433	0					
ANR	3248450	Identifier	NULL		3248433	1					
ANR	3248451	EqualityExpression	proxy == deleg_proxy -> proxy		3248433	1		==			
ANR	3248452	Identifier	proxy		3248433	0					
ANR	3248453	PtrMemberAccess	deleg_proxy -> proxy		3248433	1					
ANR	3248454	Identifier	deleg_proxy		3248433	0					
ANR	3248455	Identifier	proxy		3248433	1					
ANR	3248456	CompoundStatement		5:59:110:110	3248433	1					
ANR	3248457	ReturnStatement	return ;	1325:2:33383:33389	3248433	0	True				
ANR	3248458	IfStatement	if ( deleg_proxy != NULL )		3248433	2					
ANR	3248459	Condition	deleg_proxy != NULL	1327:6:33400:33418	3248433	0	True				
ANR	3248460	EqualityExpression	deleg_proxy != NULL		3248433	0		!=			
ANR	3248461	Identifier	deleg_proxy		3248433	0					
ANR	3248462	Identifier	NULL		3248433	1					
ANR	3248463	CompoundStatement		8:28:153:153	3248433	1					
ANR	3248464	ExpressionStatement	server -> UnregisterProxy ( deleg_proxy -> proxy )	1328:2:33426:33471	3248433	0	True				
ANR	3248465	CallExpression	server -> UnregisterProxy ( deleg_proxy -> proxy )		3248433	0					
ANR	3248466	Callee	server -> UnregisterProxy		3248433	0					
ANR	3248467	PtrMemberAccess	server -> UnregisterProxy		3248433	0					
ANR	3248468	Identifier	server		3248433	0					
ANR	3248469	Identifier	UnregisterProxy		3248433	1					
ANR	3248470	ArgumentList	deleg_proxy -> proxy		3248433	1					
ANR	3248471	Argument	deleg_proxy -> proxy		3248433	0					
ANR	3248472	PtrMemberAccess	deleg_proxy -> proxy		3248433	0					
ANR	3248473	Identifier	deleg_proxy		3248433	0					
ANR	3248474	Identifier	proxy		3248433	1					
ANR	3248475	IdentifierDeclStatement	GahpProxyInfo * gahp_proxy = server -> RegisterProxy ( proxy ) ;	1330:1:33477:33535	3248433	3	True				
ANR	3248476	IdentifierDecl	* gahp_proxy = server -> RegisterProxy ( proxy )		3248433	0					
ANR	3248477	IdentifierDeclType	GahpProxyInfo *		3248433	0					
ANR	3248478	Identifier	gahp_proxy		3248433	1					
ANR	3248479	AssignmentExpression	* gahp_proxy = server -> RegisterProxy ( proxy )		3248433	2		=			
ANR	3248480	Identifier	gahp_proxy		3248433	0					
ANR	3248481	CallExpression	server -> RegisterProxy ( proxy )		3248433	1					
ANR	3248482	Callee	server -> RegisterProxy		3248433	0					
ANR	3248483	PtrMemberAccess	server -> RegisterProxy		3248433	0					
ANR	3248484	Identifier	server		3248433	0					
ANR	3248485	Identifier	RegisterProxy		3248433	1					
ANR	3248486	ArgumentList	proxy		3248433	1					
ANR	3248487	Argument	proxy		3248433	0					
ANR	3248488	Identifier	proxy		3248433	0					
ANR	3248489	ExpressionStatement	ASSERT ( gahp_proxy )	1331:1:33538:33556	3248433	4	True				
ANR	3248490	CallExpression	ASSERT ( gahp_proxy )		3248433	0					
ANR	3248491	Callee	ASSERT		3248433	0					
ANR	3248492	Identifier	ASSERT		3248433	0					
ANR	3248493	ArgumentList	gahp_proxy		3248433	1					
ANR	3248494	Argument	gahp_proxy		3248433	0					
ANR	3248495	Identifier	gahp_proxy		3248433	0					
ANR	3248496	ExpressionStatement	deleg_proxy = gahp_proxy	1332:1:33559:33583	3248433	5	True				
ANR	3248497	AssignmentExpression	deleg_proxy = gahp_proxy		3248433	0		=			
ANR	3248498	Identifier	deleg_proxy		3248433	0					
ANR	3248499	Identifier	gahp_proxy		3248433	1					
ANR	3248500	ReturnType	void		3248433	1					
ANR	3248501	Identifier	GahpClient :: setDelegProxy		3248433	2					
ANR	3248502	ParameterList	Proxy * proxy		3248433	3					
ANR	3248503	Parameter	Proxy * proxy	1319:27:33253:33264	3248433	0	True				
ANR	3248504	ParameterType	Proxy *		3248433	0					
ANR	3248505	Identifier	proxy		3248433	1					
ANR	3248506	CFGEntryNode	ENTRY		3248433		True				
ANR	3248507	CFGExitNode	EXIT		3248433		True				
ANR	3248508	Symbol	* deleg_proxy		3248433						
ANR	3248509	Symbol	proxy		3248433						
ANR	3248510	Symbol	server		3248433						
ANR	3248511	Symbol	* server		3248433						
ANR	3248512	Symbol	NULL		3248433						
ANR	3248513	Symbol	server -> RegisterProxy		3248433						
ANR	3248514	Symbol	server -> can_cache_proxies		3248433						
ANR	3248515	Symbol	gahp_proxy		3248433						
ANR	3248516	Symbol	deleg_proxy -> proxy		3248433						
ANR	3248517	Symbol	deleg_proxy		3248433						
ANR	3248518	Function	GahpClient :: getMasterProxy	1335:0:33588:33664							
ANR	3248519	FunctionDef	GahpClient :: getMasterProxy ()		3248518	0					
ANR	3248520	CompoundStatement		1337:0:33625:33664	3248518	0					
ANR	3248521	ReturnStatement	return server -> master_proxy -> proxy ;	1338:1:33628:33662	3248518	0	True				
ANR	3248522	PtrMemberAccess	server -> master_proxy -> proxy		3248518	0					
ANR	3248523	PtrMemberAccess	server -> master_proxy		3248518	0					
ANR	3248524	Identifier	server		3248518	0					
ANR	3248525	Identifier	master_proxy		3248518	1					
ANR	3248526	Identifier	proxy		3248518	1					
ANR	3248527	ReturnType	Proxy *		3248518	1					
ANR	3248528	Identifier	GahpClient :: getMasterProxy		3248518	2					
ANR	3248529	ParameterList			3248518	3					
ANR	3248530	CFGEntryNode	ENTRY		3248518		True				
ANR	3248531	CFGExitNode	EXIT		3248518		True				
ANR	3248532	Symbol	server		3248518						
ANR	3248533	Symbol	server -> master_proxy		3248518						
ANR	3248534	Symbol	* server		3248518						
ANR	3248535	Symbol	server -> master_proxy -> proxy		3248518						
ANR	3248536	Symbol	* * server		3248518						
ANR	3248537	Symbol	* server -> master_proxy		3248518						
ANR	3248538	Function	GahpServer :: poll_real_soon	1341:0:33667:34006							
ANR	3248539	FunctionDef	GahpServer :: poll_real_soon ()		3248538	0					
ANR	3248540	CompoundStatement		1343:0:33701:34006	3248538	0					
ANR	3248541	IfStatement	if ( ! poll_pending )		3248538	0					
ANR	3248542	Condition	! poll_pending	1346:5:33807:33819	3248538	0	True				
ANR	3248543	UnaryOperationExpression	! poll_pending		3248538	0					
ANR	3248544	UnaryOperator	!		3248538	0					
ANR	3248545	Identifier	poll_pending		3248538	1					
ANR	3248546	CompoundStatement		5:2:124:250	3248538	1					
ANR	3248547	IdentifierDeclStatement	"int tid = daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & GahpServer :: poll , ""GahpServer::poll from poll_real_soon"" , this ) ;"	1347:2:33826:33952	3248538	0	True				
ANR	3248548	IdentifierDecl	"tid = daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & GahpServer :: poll , ""GahpServer::poll from poll_real_soon"" , this )"		3248538	0					
ANR	3248549	IdentifierDeclType	int		3248538	0					
ANR	3248550	Identifier	tid		3248538	1					
ANR	3248551	AssignmentExpression	"tid = daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & GahpServer :: poll , ""GahpServer::poll from poll_real_soon"" , this )"		3248538	2		=			
ANR	3248552	Identifier	tid		3248538	0					
ANR	3248553	CallExpression	"daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & GahpServer :: poll , ""GahpServer::poll from poll_real_soon"" , this )"		3248538	1					
ANR	3248554	Callee	daemonCore -> Register_Timer		3248538	0					
ANR	3248555	PtrMemberAccess	daemonCore -> Register_Timer		3248538	0					
ANR	3248556	Identifier	daemonCore		3248538	0					
ANR	3248557	Identifier	Register_Timer		3248538	1					
ANR	3248558	ArgumentList	0		3248538	1					
ANR	3248559	Argument	0		3248538	0					
ANR	3248560	PrimaryExpression	0		3248538	0					
ANR	3248561	Argument	( TimerHandlercpp ) & GahpServer :: poll		3248538	1					
ANR	3248562	CastExpression	( TimerHandlercpp ) & GahpServer :: poll		3248538	0					
ANR	3248563	CastTarget	TimerHandlercpp		3248538	0					
ANR	3248564	UnaryOperationExpression	& GahpServer :: poll		3248538	1					
ANR	3248565	UnaryOperator	&		3248538	0					
ANR	3248566	Identifier	GahpServer :: poll		3248538	1					
ANR	3248567	Argument	"""GahpServer::poll from poll_real_soon"""		3248538	2					
ANR	3248568	PrimaryExpression	"""GahpServer::poll from poll_real_soon"""		3248538	0					
ANR	3248569	Argument	this		3248538	3					
ANR	3248570	Identifier	this		3248538	0					
ANR	3248571	IfStatement	if ( tid != - 1 )		3248538	1					
ANR	3248572	Condition	tid != - 1	1350:7:33961:33969	3248538	0	True				
ANR	3248573	EqualityExpression	tid != - 1		3248538	0		!=			
ANR	3248574	Identifier	tid		3248538	0					
ANR	3248575	UnaryOperationExpression	- 1		3248538	1					
ANR	3248576	UnaryOperator	-		3248538	0					
ANR	3248577	PrimaryExpression	1		3248538	1					
ANR	3248578	CompoundStatement		8:19:271:271	3248538	1					
ANR	3248579	ExpressionStatement	poll_pending = true	1351:3:33978:33997	3248538	0	True				
ANR	3248580	AssignmentExpression	poll_pending = true		3248538	0		=			
ANR	3248581	Identifier	poll_pending		3248538	0					
ANR	3248582	Identifier	true		3248538	1					
ANR	3248583	ReturnType	void		3248538	1					
ANR	3248584	Identifier	GahpServer :: poll_real_soon		3248538	2					
ANR	3248585	ParameterList			3248538	3					
ANR	3248586	CFGEntryNode	ENTRY		3248538		True				
ANR	3248587	CFGExitNode	EXIT		3248538		True				
ANR	3248588	Symbol	& GahpServer :: poll		3248538						
ANR	3248589	Symbol	* daemonCore		3248538						
ANR	3248590	Symbol	daemonCore -> Register_Timer		3248538						
ANR	3248591	Symbol	daemonCore		3248538						
ANR	3248592	Symbol	this		3248538						
ANR	3248593	Symbol	true		3248538						
ANR	3248594	Symbol	poll_pending		3248538						
ANR	3248595	Symbol	tid		3248538						
ANR	3248596	DeclStmt									
ANR	3248597	Decl							int	int	count
ANR	3248598	DeclStmt									
ANR	3248599	Decl							char	char [ 5001 ]	buff
ANR	3248600	DeclStmt									
ANR	3248601	Decl							char	char *	prev_line
ANR	3248602	DeclStmt									
ANR	3248603	Decl							char	char *	newline
ANR	3248604	Function	GahpServer :: command_initialize_from_file	1403:0:35016:35683							
ANR	3248605	FunctionDef	"GahpServer :: command_initialize_from_file (const char * proxy_path , const char * command)"		3248604	0					
ANR	3248606	CompoundStatement		1406:0:35118:35683	3248604	0					
ANR	3248607	ExpressionStatement	ASSERT ( proxy_path )	1408:1:35122:35140	3248604	0	True				
ANR	3248608	CallExpression	ASSERT ( proxy_path )		3248604	0					
ANR	3248609	Callee	ASSERT		3248604	0					
ANR	3248610	Identifier	ASSERT		3248604	0					
ANR	3248611	ArgumentList	proxy_path		3248604	1					
ANR	3248612	Argument	proxy_path		3248604	0					
ANR	3248613	Identifier	proxy_path		3248604	0					
ANR	3248614	IdentifierDeclStatement	std :: string buf ;	1410:1:35165:35180	3248604	1	True				
ANR	3248615	IdentifierDecl	buf		3248604	0					
ANR	3248616	IdentifierDeclType	std :: string		3248604	0					
ANR	3248617	Identifier	buf		3248604	1					
ANR	3248618	IfStatement	if ( command == NULL )		3248604	2					
ANR	3248619	Condition	command == NULL	1411:6:35188:35202	3248604	0	True				
ANR	3248620	EqualityExpression	command == NULL		3248604	0		==			
ANR	3248621	Identifier	command		3248604	0					
ANR	3248622	Identifier	NULL		3248604	1					
ANR	3248623	CompoundStatement		6:24:87:87	3248604	1					
ANR	3248624	ExpressionStatement	"command = ""INITIALIZE_FROM_FILE"""	1412:2:35210:35242	3248604	0	True				
ANR	3248625	AssignmentExpression	"command = ""INITIALIZE_FROM_FILE"""		3248604	0		=			
ANR	3248626	Identifier	command		3248604	0					
ANR	3248627	PrimaryExpression	"""INITIALIZE_FROM_FILE"""		3248604	1					
ANR	3248628	IdentifierDeclStatement	"int x = sprintf ( buf , ""%s %s"" , command , escapeGahpString ( proxy_path ) ) ;"	1414:1:35248:35320	3248604	3	True				
ANR	3248629	IdentifierDecl	"x = sprintf ( buf , ""%s %s"" , command , escapeGahpString ( proxy_path ) )"		3248604	0					
ANR	3248630	IdentifierDeclType	int		3248604	0					
ANR	3248631	Identifier	x		3248604	1					
ANR	3248632	AssignmentExpression	"x = sprintf ( buf , ""%s %s"" , command , escapeGahpString ( proxy_path ) )"		3248604	2		=			
ANR	3248633	Identifier	x		3248604	0					
ANR	3248634	CallExpression	"sprintf ( buf , ""%s %s"" , command , escapeGahpString ( proxy_path ) )"		3248604	1					
ANR	3248635	Callee	sprintf		3248604	0					
ANR	3248636	Identifier	sprintf		3248604	0					
ANR	3248637	ArgumentList	buf		3248604	1					
ANR	3248638	Argument	buf		3248604	0					
ANR	3248639	Identifier	buf		3248604	0					
ANR	3248640	Argument	"""%s %s"""		3248604	1					
ANR	3248641	PrimaryExpression	"""%s %s"""		3248604	0					
ANR	3248642	Argument	command		3248604	2					
ANR	3248643	Identifier	command		3248604	0					
ANR	3248644	Argument	escapeGahpString ( proxy_path )		3248604	3					
ANR	3248645	CallExpression	escapeGahpString ( proxy_path )		3248604	0					
ANR	3248646	Callee	escapeGahpString		3248604	0					
ANR	3248647	Identifier	escapeGahpString		3248604	0					
ANR	3248648	ArgumentList	proxy_path		3248604	1					
ANR	3248649	Argument	proxy_path		3248604	0					
ANR	3248650	Identifier	proxy_path		3248604	0					
ANR	3248651	ExpressionStatement	ASSERT ( x > 0 )	1416:1:35323:35338	3248604	4	True				
ANR	3248652	CallExpression	ASSERT ( x > 0 )		3248604	0					
ANR	3248653	Callee	ASSERT		3248604	0					
ANR	3248654	Identifier	ASSERT		3248604	0					
ANR	3248655	ArgumentList	x > 0		3248604	1					
ANR	3248656	Argument	x > 0		3248604	0					
ANR	3248657	RelationalExpression	x > 0		3248604	0		>			
ANR	3248658	Identifier	x		3248604	0					
ANR	3248659	PrimaryExpression	0		3248604	1					
ANR	3248660	ExpressionStatement	write_line ( buf . c_str ( ) )	1417:1:35341:35364	3248604	5	True				
ANR	3248661	CallExpression	write_line ( buf . c_str ( ) )		3248604	0					
ANR	3248662	Callee	write_line		3248604	0					
ANR	3248663	Identifier	write_line		3248604	0					
ANR	3248664	ArgumentList	buf . c_str ( )		3248604	1					
ANR	3248665	Argument	buf . c_str ( )		3248604	0					
ANR	3248666	CallExpression	buf . c_str ( )		3248604	0					
ANR	3248667	Callee	buf . c_str		3248604	0					
ANR	3248668	MemberAccess	buf . c_str		3248604	0					
ANR	3248669	Identifier	buf		3248604	0					
ANR	3248670	Identifier	c_str		3248604	1					
ANR	3248671	ArgumentList			3248604	1					
ANR	3248672	IdentifierDeclStatement	Gahp_Args result ;	1419:1:35368:35384	3248604	6	True				
ANR	3248673	IdentifierDecl	result		3248604	0					
ANR	3248674	IdentifierDeclType	Gahp_Args		3248604	0					
ANR	3248675	Identifier	result		3248604	1					
ANR	3248676	ExpressionStatement	read_argv ( result )	1420:1:35387:35404	3248604	7	True				
ANR	3248677	CallExpression	read_argv ( result )		3248604	0					
ANR	3248678	Callee	read_argv		3248604	0					
ANR	3248679	Identifier	read_argv		3248604	0					
ANR	3248680	ArgumentList	result		3248604	1					
ANR	3248681	Argument	result		3248604	0					
ANR	3248682	Identifier	result		3248604	0					
ANR	3248683	IfStatement	if ( result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S' )		3248604	8					
ANR	3248684	Condition	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'	1421:6:35412:35455	3248604	0	True				
ANR	3248685	OrExpression	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'		3248604	0		||			
ANR	3248686	EqualityExpression	result . argc == 0		3248604	0		==			
ANR	3248687	MemberAccess	result . argc		3248604	0					
ANR	3248688	Identifier	result		3248604	0					
ANR	3248689	Identifier	argc		3248604	1					
ANR	3248690	PrimaryExpression	0		3248604	1					
ANR	3248691	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3248604	1		!=			
ANR	3248692	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3248604	0					
ANR	3248693	ArrayIndexing	result . argv [ 0 ]		3248604	0					
ANR	3248694	MemberAccess	result . argv		3248604	0					
ANR	3248695	Identifier	result		3248604	0					
ANR	3248696	Identifier	argv		3248604	1					
ANR	3248697	PrimaryExpression	0		3248604	1					
ANR	3248698	PrimaryExpression	0		3248604	1					
ANR	3248699	PrimaryExpression	'S'		3248604	1					
ANR	3248700	CompoundStatement		17:2:344:356	3248604	1					
ANR	3248701	IdentifierDeclStatement	char * reason ;	1422:2:35463:35475	3248604	0	True				
ANR	3248702	IdentifierDecl	* reason		3248604	0					
ANR	3248703	IdentifierDeclType	char *		3248604	0					
ANR	3248704	Identifier	reason		3248604	1					
ANR	3248705	IfStatement	if ( result . argc > 1 )		3248604	1					
ANR	3248706	Condition	result . argc > 1	1423:7:35484:35498	3248604	0	True				
ANR	3248707	RelationalExpression	result . argc > 1		3248604	0		>			
ANR	3248708	MemberAccess	result . argc		3248604	0					
ANR	3248709	Identifier	result		3248604	0					
ANR	3248710	Identifier	argc		3248604	1					
ANR	3248711	PrimaryExpression	1		3248604	1					
ANR	3248712	CompoundStatement		18:25:383:383	3248604	1					
ANR	3248713	ExpressionStatement	reason = result . argv [ 1 ]	1424:3:35507:35530	3248604	0	True				
ANR	3248714	AssignmentExpression	reason = result . argv [ 1 ]		3248604	0		=			
ANR	3248715	Identifier	reason		3248604	0					
ANR	3248716	ArrayIndexing	result . argv [ 1 ]		3248604	1					
ANR	3248717	MemberAccess	result . argv		3248604	0					
ANR	3248718	Identifier	result		3248604	0					
ANR	3248719	Identifier	argv		3248604	1					
ANR	3248720	PrimaryExpression	1		3248604	1					
ANR	3248721	ElseStatement	else		3248604	0					
ANR	3248722	CompoundStatement		20:9:422:422	3248604	0					
ANR	3248723	ExpressionStatement	"reason = ""Unspecified error"""	1426:3:35546:35574	3248604	0	True				
ANR	3248724	AssignmentExpression	"reason = ""Unspecified error"""		3248604	0		=			
ANR	3248725	Identifier	reason		3248604	0					
ANR	3248726	PrimaryExpression	"""Unspecified error"""		3248604	1					
ANR	3248727	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"	1428:2:35582:35647	3248604	2	True				
ANR	3248728	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , reason )"		3248604	0					
ANR	3248729	Callee	dprintf		3248604	0					
ANR	3248730	Identifier	dprintf		3248604	0					
ANR	3248731	ArgumentList	D_ALWAYS		3248604	1					
ANR	3248732	Argument	D_ALWAYS		3248604	0					
ANR	3248733	Identifier	D_ALWAYS		3248604	0					
ANR	3248734	Argument	"""GAHP command '%s' failed: %s\\n"""		3248604	1					
ANR	3248735	PrimaryExpression	"""GAHP command '%s' failed: %s\\n"""		3248604	0					
ANR	3248736	Argument	command		3248604	2					
ANR	3248737	Identifier	command		3248604	0					
ANR	3248738	Argument	reason		3248604	3					
ANR	3248739	Identifier	reason		3248604	0					
ANR	3248740	ReturnStatement	return false ;	1429:2:35651:35663	3248604	3	True				
ANR	3248741	Identifier	false		3248604	0					
ANR	3248742	ReturnStatement	return true ;	1432:1:35670:35681	3248604	9	True				
ANR	3248743	Identifier	true		3248604	0					
ANR	3248744	ReturnType	bool		3248604	1					
ANR	3248745	Identifier	GahpServer :: command_initialize_from_file		3248604	2					
ANR	3248746	ParameterList	"const char * proxy_path , const char * command"		3248604	3					
ANR	3248747	Parameter	const char * proxy_path	1404:41:35062:35083	3248604	0	True				
ANR	3248748	ParameterType	const char *		3248604	0					
ANR	3248749	Identifier	proxy_path		3248604	1					
ANR	3248750	Parameter	const char * command	1405:11:35097:35115	3248604	1	True				
ANR	3248751	ParameterType	const char *		3248604	0					
ANR	3248752	Identifier	command		3248604	1					
ANR	3248753	CFGEntryNode	ENTRY		3248604		True				
ANR	3248754	CFGExitNode	EXIT		3248604		True				
ANR	3248755	Symbol	escapeGahpString		3248604						
ANR	3248756	Symbol	reason		3248604						
ANR	3248757	Symbol	NULL		3248604						
ANR	3248758	Symbol	proxy_path		3248604						
ANR	3248759	Symbol	* * result . argv		3248604						
ANR	3248760	Symbol	D_ALWAYS		3248604						
ANR	3248761	Symbol	false		3248604						
ANR	3248762	Symbol	* * result		3248604						
ANR	3248763	Symbol	* result . argv		3248604						
ANR	3248764	Symbol	command		3248604						
ANR	3248765	Symbol	sprintf		3248604						
ANR	3248766	Symbol	result . argv		3248604						
ANR	3248767	Symbol	result		3248604						
ANR	3248768	Symbol	buf		3248604						
ANR	3248769	Symbol	* result		3248604						
ANR	3248770	Symbol	buf . c_str		3248604						
ANR	3248771	Symbol	x		3248604						
ANR	3248772	Symbol	result . argc		3248604						
ANR	3248773	Symbol	true		3248604						
ANR	3248774	Function	GahpServer :: command_response_prefix	1436:0:35687:36197							
ANR	3248775	FunctionDef	GahpServer :: command_response_prefix (const char * prefix)		3248774	0					
ANR	3248776	CompoundStatement		1438:0:35748:36197	3248774	0					
ANR	3248777	Statement	static	1439:1:35751:35756	3248774	0	True				
ANR	3248778	IdentifierDeclStatement	"const char * command = ""RESPONSE_PREFIX"" ;"	1439:8:35758:35797	3248774	1	True				
ANR	3248779	IdentifierDecl	"* command = ""RESPONSE_PREFIX"""		3248774	0					
ANR	3248780	IdentifierDeclType	const char *		3248774	0					
ANR	3248781	Identifier	command		3248774	1					
ANR	3248782	AssignmentExpression	"* command = ""RESPONSE_PREFIX"""		3248774	2		=			
ANR	3248783	Identifier	command		3248774	0					
ANR	3248784	PrimaryExpression	"""RESPONSE_PREFIX"""		3248774	1					
ANR	3248785	IfStatement	if ( m_commands_supported -> contains_anycase ( command ) == FALSE )		3248774	2					
ANR	3248786	Condition	m_commands_supported -> contains_anycase ( command ) == FALSE	1441:6:35806:35859	3248774	0	True				
ANR	3248787	EqualityExpression	m_commands_supported -> contains_anycase ( command ) == FALSE		3248774	0		==			
ANR	3248788	CallExpression	m_commands_supported -> contains_anycase ( command )		3248774	0					
ANR	3248789	Callee	m_commands_supported -> contains_anycase		3248774	0					
ANR	3248790	PtrMemberAccess	m_commands_supported -> contains_anycase		3248774	0					
ANR	3248791	Identifier	m_commands_supported		3248774	0					
ANR	3248792	Identifier	contains_anycase		3248774	1					
ANR	3248793	ArgumentList	command		3248774	1					
ANR	3248794	Argument	command		3248774	0					
ANR	3248795	Identifier	command		3248774	0					
ANR	3248796	Identifier	FALSE		3248774	1					
ANR	3248797	CompoundStatement		4:62:113:113	3248774	1					
ANR	3248798	ReturnStatement	return false ;	1442:2:35866:35878	3248774	0	True				
ANR	3248799	Identifier	false		3248774	0					
ANR	3248800	IdentifierDeclStatement	std :: string buf ;	1445:1:35885:35900	3248774	3	True				
ANR	3248801	IdentifierDecl	buf		3248774	0					
ANR	3248802	IdentifierDeclType	std :: string		3248774	0					
ANR	3248803	Identifier	buf		3248774	1					
ANR	3248804	IdentifierDeclStatement	"int x = sprintf ( buf , ""%s %s"" , command , escapeGahpString ( prefix ) ) ;"	1446:1:35903:35964	3248774	4	True				
ANR	3248805	IdentifierDecl	"x = sprintf ( buf , ""%s %s"" , command , escapeGahpString ( prefix ) )"		3248774	0					
ANR	3248806	IdentifierDeclType	int		3248774	0					
ANR	3248807	Identifier	x		3248774	1					
ANR	3248808	AssignmentExpression	"x = sprintf ( buf , ""%s %s"" , command , escapeGahpString ( prefix ) )"		3248774	2		=			
ANR	3248809	Identifier	x		3248774	0					
ANR	3248810	CallExpression	"sprintf ( buf , ""%s %s"" , command , escapeGahpString ( prefix ) )"		3248774	1					
ANR	3248811	Callee	sprintf		3248774	0					
ANR	3248812	Identifier	sprintf		3248774	0					
ANR	3248813	ArgumentList	buf		3248774	1					
ANR	3248814	Argument	buf		3248774	0					
ANR	3248815	Identifier	buf		3248774	0					
ANR	3248816	Argument	"""%s %s"""		3248774	1					
ANR	3248817	PrimaryExpression	"""%s %s"""		3248774	0					
ANR	3248818	Argument	command		3248774	2					
ANR	3248819	Identifier	command		3248774	0					
ANR	3248820	Argument	escapeGahpString ( prefix )		3248774	3					
ANR	3248821	CallExpression	escapeGahpString ( prefix )		3248774	0					
ANR	3248822	Callee	escapeGahpString		3248774	0					
ANR	3248823	Identifier	escapeGahpString		3248774	0					
ANR	3248824	ArgumentList	prefix		3248774	1					
ANR	3248825	Argument	prefix		3248774	0					
ANR	3248826	Identifier	prefix		3248774	0					
ANR	3248827	ExpressionStatement	ASSERT ( x > 0 )	1447:1:35967:35982	3248774	5	True				
ANR	3248828	CallExpression	ASSERT ( x > 0 )		3248774	0					
ANR	3248829	Callee	ASSERT		3248774	0					
ANR	3248830	Identifier	ASSERT		3248774	0					
ANR	3248831	ArgumentList	x > 0		3248774	1					
ANR	3248832	Argument	x > 0		3248774	0					
ANR	3248833	RelationalExpression	x > 0		3248774	0		>			
ANR	3248834	Identifier	x		3248774	0					
ANR	3248835	PrimaryExpression	0		3248774	1					
ANR	3248836	ExpressionStatement	write_line ( buf . c_str ( ) )	1448:1:35985:36008	3248774	6	True				
ANR	3248837	CallExpression	write_line ( buf . c_str ( ) )		3248774	0					
ANR	3248838	Callee	write_line		3248774	0					
ANR	3248839	Identifier	write_line		3248774	0					
ANR	3248840	ArgumentList	buf . c_str ( )		3248774	1					
ANR	3248841	Argument	buf . c_str ( )		3248774	0					
ANR	3248842	CallExpression	buf . c_str ( )		3248774	0					
ANR	3248843	Callee	buf . c_str		3248774	0					
ANR	3248844	MemberAccess	buf . c_str		3248774	0					
ANR	3248845	Identifier	buf		3248774	0					
ANR	3248846	Identifier	c_str		3248774	1					
ANR	3248847	ArgumentList			3248774	1					
ANR	3248848	IdentifierDeclStatement	Gahp_Args result ;	1450:1:36012:36028	3248774	7	True				
ANR	3248849	IdentifierDecl	result		3248774	0					
ANR	3248850	IdentifierDeclType	Gahp_Args		3248774	0					
ANR	3248851	Identifier	result		3248774	1					
ANR	3248852	ExpressionStatement	read_argv ( result )	1451:1:36031:36048	3248774	8	True				
ANR	3248853	CallExpression	read_argv ( result )		3248774	0					
ANR	3248854	Callee	read_argv		3248774	0					
ANR	3248855	Identifier	read_argv		3248774	0					
ANR	3248856	ArgumentList	result		3248774	1					
ANR	3248857	Argument	result		3248774	0					
ANR	3248858	Identifier	result		3248774	0					
ANR	3248859	IfStatement	if ( result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S' )		3248774	9					
ANR	3248860	Condition	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'	1452:6:36056:36099	3248774	0	True				
ANR	3248861	OrExpression	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'		3248774	0		||			
ANR	3248862	EqualityExpression	result . argc == 0		3248774	0		==			
ANR	3248863	MemberAccess	result . argc		3248774	0					
ANR	3248864	Identifier	result		3248774	0					
ANR	3248865	Identifier	argc		3248774	1					
ANR	3248866	PrimaryExpression	0		3248774	1					
ANR	3248867	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3248774	1		!=			
ANR	3248868	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3248774	0					
ANR	3248869	ArrayIndexing	result . argv [ 0 ]		3248774	0					
ANR	3248870	MemberAccess	result . argv		3248774	0					
ANR	3248871	Identifier	result		3248774	0					
ANR	3248872	Identifier	argv		3248774	1					
ANR	3248873	PrimaryExpression	0		3248774	1					
ANR	3248874	PrimaryExpression	0		3248774	1					
ANR	3248875	PrimaryExpression	'S'		3248774	1					
ANR	3248876	CompoundStatement		15:53:354:354	3248774	1					
ANR	3248877	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed\\n"" , command )"	1453:2:36107:36161	3248774	0	True				
ANR	3248878	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed\\n"" , command )"		3248774	0					
ANR	3248879	Callee	dprintf		3248774	0					
ANR	3248880	Identifier	dprintf		3248774	0					
ANR	3248881	ArgumentList	D_ALWAYS		3248774	1					
ANR	3248882	Argument	D_ALWAYS		3248774	0					
ANR	3248883	Identifier	D_ALWAYS		3248774	0					
ANR	3248884	Argument	"""GAHP command '%s' failed\\n"""		3248774	1					
ANR	3248885	PrimaryExpression	"""GAHP command '%s' failed\\n"""		3248774	0					
ANR	3248886	Argument	command		3248774	2					
ANR	3248887	Identifier	command		3248774	0					
ANR	3248888	ReturnStatement	return false ;	1454:2:36165:36177	3248774	1	True				
ANR	3248889	Identifier	false		3248774	0					
ANR	3248890	ReturnStatement	return true ;	1457:1:36184:36195	3248774	10	True				
ANR	3248891	Identifier	true		3248774	0					
ANR	3248892	ReturnType	bool		3248774	1					
ANR	3248893	Identifier	GahpServer :: command_response_prefix		3248774	2					
ANR	3248894	ParameterList	const char * prefix		3248774	3					
ANR	3248895	Parameter	const char * prefix	1437:36:35728:35745	3248774	0	True				
ANR	3248896	ParameterType	const char *		3248774	0					
ANR	3248897	Identifier	prefix		3248774	1					
ANR	3248898	CFGEntryNode	ENTRY		3248774		True				
ANR	3248899	CFGExitNode	EXIT		3248774		True				
ANR	3248900	Symbol	escapeGahpString		3248774						
ANR	3248901	Symbol	m_commands_supported -> contains_anycase		3248774						
ANR	3248902	Symbol	* * result . argv		3248774						
ANR	3248903	Symbol	prefix		3248774						
ANR	3248904	Symbol	false		3248774						
ANR	3248905	Symbol	D_ALWAYS		3248774						
ANR	3248906	Symbol	* * result		3248774						
ANR	3248907	Symbol	* m_commands_supported		3248774						
ANR	3248908	Symbol	m_commands_supported		3248774						
ANR	3248909	Symbol	* result . argv		3248774						
ANR	3248910	Symbol	command		3248774						
ANR	3248911	Symbol	sprintf		3248774						
ANR	3248912	Symbol	result . argv		3248774						
ANR	3248913	Symbol	result		3248774						
ANR	3248914	Symbol	buf		3248774						
ANR	3248915	Symbol	* result		3248774						
ANR	3248916	Symbol	buf . c_str		3248774						
ANR	3248917	Symbol	x		3248774						
ANR	3248918	Symbol	result . argc		3248774						
ANR	3248919	Symbol	true		3248774						
ANR	3248920	Symbol	FALSE		3248774						
ANR	3248921	Function	GahpServer :: command_async_mode_on	1460:0:36200:36583							
ANR	3248922	FunctionDef	GahpServer :: command_async_mode_on ()		3248921	0					
ANR	3248923	CompoundStatement		1462:0:36241:36583	3248921	0					
ANR	3248924	Statement	static	1463:1:36244:36249	3248921	0	True				
ANR	3248925	IdentifierDeclStatement	"const char * command = ""ASYNC_MODE_ON"" ;"	1463:8:36251:36288	3248921	1	True				
ANR	3248926	IdentifierDecl	"* command = ""ASYNC_MODE_ON"""		3248921	0					
ANR	3248927	IdentifierDeclType	const char *		3248921	0					
ANR	3248928	Identifier	command		3248921	1					
ANR	3248929	AssignmentExpression	"* command = ""ASYNC_MODE_ON"""		3248921	2		=			
ANR	3248930	Identifier	command		3248921	0					
ANR	3248931	PrimaryExpression	"""ASYNC_MODE_ON"""		3248921	1					
ANR	3248932	IfStatement	if ( m_commands_supported -> contains_anycase ( command ) == FALSE )		3248921	2					
ANR	3248933	Condition	m_commands_supported -> contains_anycase ( command ) == FALSE	1465:6:36297:36350	3248921	0	True				
ANR	3248934	EqualityExpression	m_commands_supported -> contains_anycase ( command ) == FALSE		3248921	0		==			
ANR	3248935	CallExpression	m_commands_supported -> contains_anycase ( command )		3248921	0					
ANR	3248936	Callee	m_commands_supported -> contains_anycase		3248921	0					
ANR	3248937	PtrMemberAccess	m_commands_supported -> contains_anycase		3248921	0					
ANR	3248938	Identifier	m_commands_supported		3248921	0					
ANR	3248939	Identifier	contains_anycase		3248921	1					
ANR	3248940	ArgumentList	command		3248921	1					
ANR	3248941	Argument	command		3248921	0					
ANR	3248942	Identifier	command		3248921	0					
ANR	3248943	Identifier	FALSE		3248921	1					
ANR	3248944	CompoundStatement		4:62:111:111	3248921	1					
ANR	3248945	ReturnStatement	return false ;	1466:2:36357:36369	3248921	0	True				
ANR	3248946	Identifier	false		3248921	0					
ANR	3248947	ExpressionStatement	write_line ( command )	1469:1:36376:36395	3248921	3	True				
ANR	3248948	CallExpression	write_line ( command )		3248921	0					
ANR	3248949	Callee	write_line		3248921	0					
ANR	3248950	Identifier	write_line		3248921	0					
ANR	3248951	ArgumentList	command		3248921	1					
ANR	3248952	Argument	command		3248921	0					
ANR	3248953	Identifier	command		3248921	0					
ANR	3248954	IdentifierDeclStatement	Gahp_Args result ;	1470:1:36398:36414	3248921	4	True				
ANR	3248955	IdentifierDecl	result		3248921	0					
ANR	3248956	IdentifierDeclType	Gahp_Args		3248921	0					
ANR	3248957	Identifier	result		3248921	1					
ANR	3248958	ExpressionStatement	read_argv ( result )	1471:1:36417:36434	3248921	5	True				
ANR	3248959	CallExpression	read_argv ( result )		3248921	0					
ANR	3248960	Callee	read_argv		3248921	0					
ANR	3248961	Identifier	read_argv		3248921	0					
ANR	3248962	ArgumentList	result		3248921	1					
ANR	3248963	Argument	result		3248921	0					
ANR	3248964	Identifier	result		3248921	0					
ANR	3248965	IfStatement	if ( result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S' )		3248921	6					
ANR	3248966	Condition	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'	1472:6:36442:36485	3248921	0	True				
ANR	3248967	OrExpression	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'		3248921	0		||			
ANR	3248968	EqualityExpression	result . argc == 0		3248921	0		==			
ANR	3248969	MemberAccess	result . argc		3248921	0					
ANR	3248970	Identifier	result		3248921	0					
ANR	3248971	Identifier	argc		3248921	1					
ANR	3248972	PrimaryExpression	0		3248921	1					
ANR	3248973	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3248921	1		!=			
ANR	3248974	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3248921	0					
ANR	3248975	ArrayIndexing	result . argv [ 0 ]		3248921	0					
ANR	3248976	MemberAccess	result . argv		3248921	0					
ANR	3248977	Identifier	result		3248921	0					
ANR	3248978	Identifier	argv		3248921	1					
ANR	3248979	PrimaryExpression	0		3248921	1					
ANR	3248980	PrimaryExpression	0		3248921	1					
ANR	3248981	PrimaryExpression	'S'		3248921	1					
ANR	3248982	CompoundStatement		11:53:247:247	3248921	1					
ANR	3248983	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed\\n"" , command )"	1473:2:36493:36547	3248921	0	True				
ANR	3248984	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed\\n"" , command )"		3248921	0					
ANR	3248985	Callee	dprintf		3248921	0					
ANR	3248986	Identifier	dprintf		3248921	0					
ANR	3248987	ArgumentList	D_ALWAYS		3248921	1					
ANR	3248988	Argument	D_ALWAYS		3248921	0					
ANR	3248989	Identifier	D_ALWAYS		3248921	0					
ANR	3248990	Argument	"""GAHP command '%s' failed\\n"""		3248921	1					
ANR	3248991	PrimaryExpression	"""GAHP command '%s' failed\\n"""		3248921	0					
ANR	3248992	Argument	command		3248921	2					
ANR	3248993	Identifier	command		3248921	0					
ANR	3248994	ReturnStatement	return false ;	1474:2:36551:36563	3248921	1	True				
ANR	3248995	Identifier	false		3248921	0					
ANR	3248996	ReturnStatement	return true ;	1477:1:36570:36581	3248921	7	True				
ANR	3248997	Identifier	true		3248921	0					
ANR	3248998	ReturnType	bool		3248921	1					
ANR	3248999	Identifier	GahpServer :: command_async_mode_on		3248921	2					
ANR	3249000	ParameterList			3248921	3					
ANR	3249001	CFGEntryNode	ENTRY		3248921		True				
ANR	3249002	CFGExitNode	EXIT		3248921		True				
ANR	3249003	Symbol	m_commands_supported -> contains_anycase		3248921						
ANR	3249004	Symbol	* * result . argv		3248921						
ANR	3249005	Symbol	false		3248921						
ANR	3249006	Symbol	D_ALWAYS		3248921						
ANR	3249007	Symbol	* * result		3248921						
ANR	3249008	Symbol	* m_commands_supported		3248921						
ANR	3249009	Symbol	m_commands_supported		3248921						
ANR	3249010	Symbol	* result . argv		3248921						
ANR	3249011	Symbol	command		3248921						
ANR	3249012	Symbol	result . argv		3248921						
ANR	3249013	Symbol	result		3248921						
ANR	3249014	Symbol	* result		3248921						
ANR	3249015	Symbol	result . argc		3248921						
ANR	3249016	Symbol	true		3248921						
ANR	3249017	Symbol	FALSE		3248921						
ANR	3249018	Function	GahpServer :: command_commands	1481:0:36587:37098							
ANR	3249019	FunctionDef	GahpServer :: command_commands ()		3249018	0					
ANR	3249020	CompoundStatement		1483:0:36623:37098	3249018	0					
ANR	3249021	ExpressionStatement	"write_line ( ""COMMANDS"" )"	1484:1:36626:36648	3249018	0	True				
ANR	3249022	CallExpression	"write_line ( ""COMMANDS"" )"		3249018	0					
ANR	3249023	Callee	write_line		3249018	0					
ANR	3249024	Identifier	write_line		3249018	0					
ANR	3249025	ArgumentList	"""COMMANDS"""		3249018	1					
ANR	3249026	Argument	"""COMMANDS"""		3249018	0					
ANR	3249027	PrimaryExpression	"""COMMANDS"""		3249018	0					
ANR	3249028	IdentifierDeclStatement	Gahp_Args result ;	1485:1:36651:36667	3249018	1	True				
ANR	3249029	IdentifierDecl	result		3249018	0					
ANR	3249030	IdentifierDeclType	Gahp_Args		3249018	0					
ANR	3249031	Identifier	result		3249018	1					
ANR	3249032	ExpressionStatement	read_argv ( result )	1486:1:36670:36687	3249018	2	True				
ANR	3249033	CallExpression	read_argv ( result )		3249018	0					
ANR	3249034	Callee	read_argv		3249018	0					
ANR	3249035	Identifier	read_argv		3249018	0					
ANR	3249036	ArgumentList	result		3249018	1					
ANR	3249037	Argument	result		3249018	0					
ANR	3249038	Identifier	result		3249018	0					
ANR	3249039	IfStatement	if ( result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S' )		3249018	3					
ANR	3249040	Condition	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'	1487:6:36695:36738	3249018	0	True				
ANR	3249041	OrExpression	result . argc == 0 || result . argv [ 0 ] [ 0 ] != 'S'		3249018	0		||			
ANR	3249042	EqualityExpression	result . argc == 0		3249018	0		==			
ANR	3249043	MemberAccess	result . argc		3249018	0					
ANR	3249044	Identifier	result		3249018	0					
ANR	3249045	Identifier	argc		3249018	1					
ANR	3249046	PrimaryExpression	0		3249018	1					
ANR	3249047	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3249018	1		!=			
ANR	3249048	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3249018	0					
ANR	3249049	ArrayIndexing	result . argv [ 0 ]		3249018	0					
ANR	3249050	MemberAccess	result . argv		3249018	0					
ANR	3249051	Identifier	result		3249018	0					
ANR	3249052	Identifier	argv		3249018	1					
ANR	3249053	PrimaryExpression	0		3249018	1					
ANR	3249054	PrimaryExpression	0		3249018	1					
ANR	3249055	PrimaryExpression	'S'		3249018	1					
ANR	3249056	CompoundStatement		5:53:118:118	3249018	1					
ANR	3249057	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command 'COMMANDS' failed\\n"" )"	1488:2:36746:36798	3249018	0	True				
ANR	3249058	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command 'COMMANDS' failed\\n"" )"		3249018	0					
ANR	3249059	Callee	dprintf		3249018	0					
ANR	3249060	Identifier	dprintf		3249018	0					
ANR	3249061	ArgumentList	D_ALWAYS		3249018	1					
ANR	3249062	Argument	D_ALWAYS		3249018	0					
ANR	3249063	Identifier	D_ALWAYS		3249018	0					
ANR	3249064	Argument	"""GAHP command 'COMMANDS' failed\\n"""		3249018	1					
ANR	3249065	PrimaryExpression	"""GAHP command 'COMMANDS' failed\\n"""		3249018	0					
ANR	3249066	ReturnStatement	return false ;	1489:2:36802:36814	3249018	1	True				
ANR	3249067	Identifier	false		3249018	0					
ANR	3249068	IfStatement	if ( m_commands_supported )		3249018	4					
ANR	3249069	Condition	m_commands_supported	1492:6:36826:36845	3249018	0	True				
ANR	3249070	Identifier	m_commands_supported		3249018	0					
ANR	3249071	CompoundStatement		10:29:225:225	3249018	1					
ANR	3249072	Statement	delete	1493:2:36853:36858	3249018	0	True				
ANR	3249073	ExpressionStatement	m_commands_supported	1493:9:36860:36880	3249018	1	True				
ANR	3249074	Identifier	m_commands_supported		3249018	0					
ANR	3249075	ExpressionStatement	m_commands_supported = NULL	1494:2:36884:36911	3249018	2	True				
ANR	3249076	AssignmentExpression	m_commands_supported = NULL		3249018	0		=			
ANR	3249077	Identifier	m_commands_supported		3249018	0					
ANR	3249078	Identifier	NULL		3249018	1					
ANR	3249079	ExpressionStatement	m_commands_supported = new StringList ( )	1496:1:36917:36956	3249018	5	True				
ANR	3249080	AssignmentExpression	m_commands_supported = new StringList ( )		3249018	0		=			
ANR	3249081	Identifier	m_commands_supported		3249018	0					
ANR	3249082	UnaryExpression	new StringList ( )		3249018	1					
ANR	3249083	ExpressionStatement	ASSERT ( m_commands_supported )	1497:1:36959:36987	3249018	6	True				
ANR	3249084	CallExpression	ASSERT ( m_commands_supported )		3249018	0					
ANR	3249085	Callee	ASSERT		3249018	0					
ANR	3249086	Identifier	ASSERT		3249018	0					
ANR	3249087	ArgumentList	m_commands_supported		3249018	1					
ANR	3249088	Argument	m_commands_supported		3249018	0					
ANR	3249089	Identifier	m_commands_supported		3249018	0					
ANR	3249090	ForStatement	for ( int i = 1 ; i < result . argc ; i ++ )		3249018	7					
ANR	3249091	ForInit	int i = 1 ;	1498:7:36996:37005	3249018	0	True				
ANR	3249092	IdentifierDeclStatement	int i = 1 ;		3249018	0					
ANR	3249093	IdentifierDecl	i = 1		3249018	0					
ANR	3249094	IdentifierDeclType	int		3249018	0					
ANR	3249095	Identifier	i		3249018	1					
ANR	3249096	AssignmentExpression	i = 1		3249018	2		=			
ANR	3249097	Identifier	i		3249018	0					
ANR	3249098	PrimaryExpression	1		3249018	1					
ANR	3249099	Condition	i < result . argc	1498:18:37007:37021	3249018	1	True				
ANR	3249100	RelationalExpression	i < result . argc		3249018	0		<			
ANR	3249101	Identifier	i		3249018	0					
ANR	3249102	MemberAccess	result . argc		3249018	1					
ANR	3249103	Identifier	result		3249018	0					
ANR	3249104	Identifier	argc		3249018	1					
ANR	3249105	PostIncDecOperationExpression	i ++	1498:35:37024:37026	3249018	2	True				
ANR	3249106	Identifier	i		3249018	0					
ANR	3249107	IncDec	++		3249018	1					
ANR	3249108	CompoundStatement		16:41:406:406	3249018	3					
ANR	3249109	ExpressionStatement	m_commands_supported -> append ( result . argv [ i ] )	1499:2:37034:37078	3249018	0	True				
ANR	3249110	CallExpression	m_commands_supported -> append ( result . argv [ i ] )		3249018	0					
ANR	3249111	Callee	m_commands_supported -> append		3249018	0					
ANR	3249112	PtrMemberAccess	m_commands_supported -> append		3249018	0					
ANR	3249113	Identifier	m_commands_supported		3249018	0					
ANR	3249114	Identifier	append		3249018	1					
ANR	3249115	ArgumentList	result . argv [ i ]		3249018	1					
ANR	3249116	Argument	result . argv [ i ]		3249018	0					
ANR	3249117	ArrayIndexing	result . argv [ i ]		3249018	0					
ANR	3249118	MemberAccess	result . argv		3249018	0					
ANR	3249119	Identifier	result		3249018	0					
ANR	3249120	Identifier	argv		3249018	1					
ANR	3249121	Identifier	i		3249018	1					
ANR	3249122	ReturnStatement	return true ;	1502:1:37085:37096	3249018	8	True				
ANR	3249123	Identifier	true		3249018	0					
ANR	3249124	ReturnType	bool		3249018	1					
ANR	3249125	Identifier	GahpServer :: command_commands		3249018	2					
ANR	3249126	ParameterList			3249018	3					
ANR	3249127	CFGEntryNode	ENTRY		3249018		True				
ANR	3249128	CFGExitNode	EXIT		3249018		True				
ANR	3249129	Symbol	NULL		3249018						
ANR	3249130	Symbol	* * result . argv		3249018						
ANR	3249131	Symbol	D_ALWAYS		3249018						
ANR	3249132	Symbol	false		3249018						
ANR	3249133	Symbol	* * result		3249018						
ANR	3249134	Symbol	i		3249018						
ANR	3249135	Symbol	* result . argv		3249018						
ANR	3249136	Symbol	m_commands_supported		3249018						
ANR	3249137	Symbol	result . argv		3249018						
ANR	3249138	Symbol	result		3249018						
ANR	3249139	Symbol	* i		3249018						
ANR	3249140	Symbol	* result		3249018						
ANR	3249141	Symbol	result . argc		3249018						
ANR	3249142	Symbol	true		3249018						
ANR	3249143	Function	GahpServer :: command_version	1507:0:37198:37875							
ANR	3249144	FunctionDef	GahpServer :: command_version ()		3249143	0					
ANR	3249145	CompoundStatement		1509:0:37233:37875	3249143	0					
ANR	3249146	IdentifierDeclStatement	"int i , j , result ;"	1510:1:37236:37250	3249143	0	True				
ANR	3249147	IdentifierDecl	i		3249143	0					
ANR	3249148	IdentifierDeclType	int		3249143	0					
ANR	3249149	Identifier	i		3249143	1					
ANR	3249150	IdentifierDecl	j		3249143	1					
ANR	3249151	IdentifierDeclType	int		3249143	0					
ANR	3249152	Identifier	j		3249143	1					
ANR	3249153	IdentifierDecl	result		3249143	2					
ANR	3249154	IdentifierDeclType	int		3249143	0					
ANR	3249155	Identifier	result		3249143	1					
ANR	3249156	IdentifierDeclStatement	bool ret_val = false ;	1511:1:37253:37273	3249143	1	True				
ANR	3249157	IdentifierDecl	ret_val = false		3249143	0					
ANR	3249158	IdentifierDeclType	bool		3249143	0					
ANR	3249159	Identifier	ret_val		3249143	1					
ANR	3249160	AssignmentExpression	ret_val = false		3249143	2		=			
ANR	3249161	Identifier	false		3249143	0					
ANR	3249162	Identifier	false		3249143	1					
ANR	3249163	ExpressionStatement	j = sizeof ( m_gahp_version )	1513:1:37277:37303	3249143	2	True				
ANR	3249164	AssignmentExpression	j = sizeof ( m_gahp_version )		3249143	0		=			
ANR	3249165	Identifier	j		3249143	0					
ANR	3249166	SizeofExpression	sizeof ( m_gahp_version )		3249143	1					
ANR	3249167	Sizeof	sizeof		3249143	0					
ANR	3249168	SizeofOperand	m_gahp_version		3249143	1					
ANR	3249169	ExpressionStatement	i = 0	1514:1:37306:37311	3249143	3	True				
ANR	3249170	AssignmentExpression	i = 0		3249143	0		=			
ANR	3249171	Identifier	i		3249143	0					
ANR	3249172	PrimaryExpression	0		3249143	1					
ANR	3249173	WhileStatement	while ( i < j )		3249143	4					
ANR	3249174	Condition	i < j	1515:9:37322:37326	3249143	0	True				
ANR	3249175	RelationalExpression	i < j		3249143	0		<			
ANR	3249176	Identifier	i		3249143	0					
ANR	3249177	Identifier	j		3249143	1					
ANR	3249178	CompoundStatement		7:17:96:96	3249143	1					
ANR	3249179	ExpressionStatement	"result = buffered_read ( m_gahp_readfd , & ( m_gahp_version [ i ] ) , 1 )"	1516:2:37334:37397	3249143	0	True				
ANR	3249180	AssignmentExpression	"result = buffered_read ( m_gahp_readfd , & ( m_gahp_version [ i ] ) , 1 )"		3249143	0		=			
ANR	3249181	Identifier	result		3249143	0					
ANR	3249182	CallExpression	"buffered_read ( m_gahp_readfd , & ( m_gahp_version [ i ] ) , 1 )"		3249143	1					
ANR	3249183	Callee	buffered_read		3249143	0					
ANR	3249184	Identifier	buffered_read		3249143	0					
ANR	3249185	ArgumentList	m_gahp_readfd		3249143	1					
ANR	3249186	Argument	m_gahp_readfd		3249143	0					
ANR	3249187	Identifier	m_gahp_readfd		3249143	0					
ANR	3249188	Argument	& ( m_gahp_version [ i ] )		3249143	1					
ANR	3249189	UnaryOperationExpression	& ( m_gahp_version [ i ] )		3249143	0					
ANR	3249190	UnaryOperator	&		3249143	0					
ANR	3249191	ArrayIndexing	m_gahp_version [ i ]		3249143	1					
ANR	3249192	Identifier	m_gahp_version		3249143	0					
ANR	3249193	Identifier	i		3249143	1					
ANR	3249194	Argument	1		3249143	2					
ANR	3249195	PrimaryExpression	1		3249143	0					
ANR	3249196	IfStatement	if ( result < 0 )		3249143	1					
ANR	3249197	Condition	result < 0	1518:7:37445:37454	3249143	0	True				
ANR	3249198	RelationalExpression	result < 0		3249143	0		<			
ANR	3249199	Identifier	result		3249143	0					
ANR	3249200	PrimaryExpression	0		3249143	1					
ANR	3249201	CompoundStatement		10:20:224:224	3249143	1					
ANR	3249202	ContinueStatement	continue ;	1519:3:37496:37504	3249143	0	True				
ANR	3249203	IfStatement	if ( result == 0 )		3249143	2					
ANR	3249204	Condition	result == 0	1521:7:37517:37527	3249143	0	True				
ANR	3249205	EqualityExpression	result == 0		3249143	0		==			
ANR	3249206	Identifier	result		3249143	0					
ANR	3249207	PrimaryExpression	0		3249143	1					
ANR	3249208	CompoundStatement		13:21:297:297	3249143	1					
ANR	3249209	ReturnStatement	return false ;	1523:3:37615:37627	3249143	0	True				
ANR	3249210	Identifier	false		3249143	0					
ANR	3249211	IfStatement	if ( i == 0 && m_gahp_version [ 0 ] != '$' )		3249143	3					
ANR	3249212	Condition	i == 0 && m_gahp_version [ 0 ] != '$'	1525:7:37640:37671	3249143	0	True				
ANR	3249213	AndExpression	i == 0 && m_gahp_version [ 0 ] != '$'		3249143	0		&&			
ANR	3249214	EqualityExpression	i == 0		3249143	0		==			
ANR	3249215	Identifier	i		3249143	0					
ANR	3249216	PrimaryExpression	0		3249143	1					
ANR	3249217	EqualityExpression	m_gahp_version [ 0 ] != '$'		3249143	1		!=			
ANR	3249218	ArrayIndexing	m_gahp_version [ 0 ]		3249143	0					
ANR	3249219	Identifier	m_gahp_version		3249143	0					
ANR	3249220	PrimaryExpression	0		3249143	1					
ANR	3249221	PrimaryExpression	'$'		3249143	1					
ANR	3249222	CompoundStatement		17:42:441:441	3249143	1					
ANR	3249223	ContinueStatement	continue ;	1526:3:37680:37688	3249143	0	True				
ANR	3249224	IfStatement	if ( m_gahp_version [ i ] == '\\\\' )		3249143	4					
ANR	3249225	Condition	m_gahp_version [ i ] == '\\\\'	1528:7:37701:37725	3249143	0	True				
ANR	3249226	EqualityExpression	m_gahp_version [ i ] == '\\\\'		3249143	0		==			
ANR	3249227	ArrayIndexing	m_gahp_version [ i ]		3249143	0					
ANR	3249228	Identifier	m_gahp_version		3249143	0					
ANR	3249229	Identifier	i		3249143	1					
ANR	3249230	PrimaryExpression	'\\\\'		3249143	1					
ANR	3249231	CompoundStatement		20:35:495:495	3249143	1					
ANR	3249232	ContinueStatement	continue ;	1529:3:37734:37742	3249143	0	True				
ANR	3249233	IfStatement	if ( m_gahp_version [ i ] == '\\n' )		3249143	5					
ANR	3249234	Condition	m_gahp_version [ i ] == '\\n'	1531:7:37755:37779	3249143	0	True				
ANR	3249235	EqualityExpression	m_gahp_version [ i ] == '\\n'		3249143	0		==			
ANR	3249236	ArrayIndexing	m_gahp_version [ i ]		3249143	0					
ANR	3249237	Identifier	m_gahp_version		3249143	0					
ANR	3249238	Identifier	i		3249143	1					
ANR	3249239	PrimaryExpression	'\\n'		3249143	1					
ANR	3249240	CompoundStatement		23:35:549:549	3249143	1					
ANR	3249241	ExpressionStatement	ret_val = true	1532:3:37788:37802	3249143	0	True				
ANR	3249242	AssignmentExpression	ret_val = true		3249143	0		=			
ANR	3249243	Identifier	ret_val		3249143	0					
ANR	3249244	Identifier	true		3249143	1					
ANR	3249245	ExpressionStatement	m_gahp_version [ i ] = '\\0'	1533:3:37807:37831	3249143	1	True				
ANR	3249246	AssignmentExpression	m_gahp_version [ i ] = '\\0'		3249143	0		=			
ANR	3249247	ArrayIndexing	m_gahp_version [ i ]		3249143	0					
ANR	3249248	Identifier	m_gahp_version		3249143	0					
ANR	3249249	Identifier	i		3249143	1					
ANR	3249250	PrimaryExpression	'\\0'		3249143	1					
ANR	3249251	BreakStatement	break ;	1534:3:37836:37841	3249143	2	True				
ANR	3249252	ExpressionStatement	i ++	1536:2:37849:37852	3249143	6	True				
ANR	3249253	PostIncDecOperationExpression	i ++		3249143	0					
ANR	3249254	Identifier	i		3249143	0					
ANR	3249255	IncDec	++		3249143	1					
ANR	3249256	ReturnStatement	return ret_val ;	1539:1:37859:37873	3249143	5	True				
ANR	3249257	Identifier	ret_val		3249143	0					
ANR	3249258	ReturnType	bool		3249143	1					
ANR	3249259	Identifier	GahpServer :: command_version		3249143	2					
ANR	3249260	ParameterList			3249143	3					
ANR	3249261	CFGEntryNode	ENTRY		3249143		True				
ANR	3249262	CFGExitNode	EXIT		3249143		True				
ANR	3249263	Symbol	result		3249143						
ANR	3249264	Symbol	* i		3249143						
ANR	3249265	Symbol	* m_gahp_version		3249143						
ANR	3249266	Symbol	m_gahp_version		3249143						
ANR	3249267	Symbol	false		3249143						
ANR	3249268	Symbol	true		3249143						
ANR	3249269	Symbol	i		3249143						
ANR	3249270	Symbol	j		3249143						
ANR	3249271	Symbol	ret_val		3249143						
ANR	3249272	Symbol	m_gahp_readfd		3249143						
ANR	3249273	Symbol	buffered_read		3249143						
ANR	3249274	Function	GahpClient :: globus_gram_client_error_string	1542:0:37878:38688							
ANR	3249275	FunctionDef	GahpClient :: globus_gram_client_error_string (int error_code)		3249274	0					
ANR	3249276	CompoundStatement		1544:0:37951:38688	3249274	0					
ANR	3249277	Statement	static	1545:1:37954:37959	3249274	0	True				
ANR	3249278	IdentifierDeclStatement	char buf [ 200 ] ;	1545:8:37961:37974	3249274	1	True				
ANR	3249279	IdentifierDecl	buf [ 200 ]		3249274	0					
ANR	3249280	IdentifierDeclType	char [ 200 ]		3249274	0					
ANR	3249281	Identifier	buf		3249274	1					
ANR	3249282	PrimaryExpression	200		3249274	2					
ANR	3249283	Statement	static	1546:1:37977:37982	3249274	2	True				
ANR	3249284	IdentifierDeclStatement	"const char * command = ""GRAM_ERROR_STRING"" ;"	1546:8:37984:38025	3249274	3	True				
ANR	3249285	IdentifierDecl	"* command = ""GRAM_ERROR_STRING"""		3249274	0					
ANR	3249286	IdentifierDeclType	const char *		3249274	0					
ANR	3249287	Identifier	command		3249274	1					
ANR	3249288	AssignmentExpression	"* command = ""GRAM_ERROR_STRING"""		3249274	2		=			
ANR	3249289	Identifier	command		3249274	0					
ANR	3249290	PrimaryExpression	"""GRAM_ERROR_STRING"""		3249274	1					
ANR	3249291	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3249274	4					
ANR	3249292	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	1549:6:38099:38160	3249274	0	True				
ANR	3249293	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3249274	0		==			
ANR	3249294	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3249274	0					
ANR	3249295	Callee	server -> m_commands_supported -> contains_anycase		3249274	0					
ANR	3249296	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3249274	0					
ANR	3249297	PtrMemberAccess	server -> m_commands_supported		3249274	0					
ANR	3249298	Identifier	server		3249274	0					
ANR	3249299	Identifier	m_commands_supported		3249274	1					
ANR	3249300	Identifier	contains_anycase		3249274	1					
ANR	3249301	ArgumentList	command		3249274	1					
ANR	3249302	Argument	command		3249274	0					
ANR	3249303	Identifier	command		3249274	0					
ANR	3249304	Identifier	FALSE		3249274	1					
ANR	3249305	CompoundStatement		6:70:211:211	3249274	1					
ANR	3249306	ExpressionStatement	"strcpy ( buf , ""Unknown error"" )"	1550:2:38167:38194	3249274	0	True				
ANR	3249307	CallExpression	"strcpy ( buf , ""Unknown error"" )"		3249274	0					
ANR	3249308	Callee	strcpy		3249274	0					
ANR	3249309	Identifier	strcpy		3249274	0					
ANR	3249310	ArgumentList	buf		3249274	1					
ANR	3249311	Argument	buf		3249274	0					
ANR	3249312	Identifier	buf		3249274	0					
ANR	3249313	Argument	"""Unknown error"""		3249274	1					
ANR	3249314	PrimaryExpression	"""Unknown error"""		3249274	0					
ANR	3249315	ReturnStatement	return buf ;	1551:2:38198:38208	3249274	1	True				
ANR	3249316	Identifier	buf		3249274	0					
ANR	3249317	IdentifierDeclStatement	"int x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , error_code ) ;"	1554:1:38215:38275	3249274	5	True				
ANR	3249318	IdentifierDecl	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , error_code )"		3249274	0					
ANR	3249319	IdentifierDeclType	int		3249274	0					
ANR	3249320	Identifier	x		3249274	1					
ANR	3249321	AssignmentExpression	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , error_code )"		3249274	2		=			
ANR	3249322	Identifier	x		3249274	0					
ANR	3249323	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , error_code )"		3249274	1					
ANR	3249324	Callee	snprintf		3249274	0					
ANR	3249325	Identifier	snprintf		3249274	0					
ANR	3249326	ArgumentList	buf		3249274	1					
ANR	3249327	Argument	buf		3249274	0					
ANR	3249328	Identifier	buf		3249274	0					
ANR	3249329	Argument	sizeof ( buf )		3249274	1					
ANR	3249330	SizeofExpression	sizeof ( buf )		3249274	0					
ANR	3249331	Sizeof	sizeof		3249274	0					
ANR	3249332	SizeofOperand	buf		3249274	1					
ANR	3249333	Argument	"""%s %d"""		3249274	2					
ANR	3249334	PrimaryExpression	"""%s %d"""		3249274	0					
ANR	3249335	Argument	command		3249274	3					
ANR	3249336	Identifier	command		3249274	0					
ANR	3249337	Argument	error_code		3249274	4					
ANR	3249338	Identifier	error_code		3249274	0					
ANR	3249339	ExpressionStatement	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )	1555:1:38278:38317	3249274	6	True				
ANR	3249340	CallExpression	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )		3249274	0					
ANR	3249341	Callee	ASSERT		3249274	0					
ANR	3249342	Identifier	ASSERT		3249274	0					
ANR	3249343	ArgumentList	x > 0 && x < ( int ) sizeof ( buf )		3249274	1					
ANR	3249344	Argument	x > 0 && x < ( int ) sizeof ( buf )		3249274	0					
ANR	3249345	AndExpression	x > 0 && x < ( int ) sizeof ( buf )		3249274	0		&&			
ANR	3249346	RelationalExpression	x > 0		3249274	0		>			
ANR	3249347	Identifier	x		3249274	0					
ANR	3249348	PrimaryExpression	0		3249274	1					
ANR	3249349	RelationalExpression	x < ( int ) sizeof ( buf )		3249274	1		<			
ANR	3249350	Identifier	x		3249274	0					
ANR	3249351	CastExpression	( int ) sizeof ( buf )		3249274	1					
ANR	3249352	CastTarget	int		3249274	0					
ANR	3249353	SizeofExpression	sizeof ( buf )		3249274	1					
ANR	3249354	Sizeof	sizeof		3249274	0					
ANR	3249355	SizeofOperand	buf		3249274	1					
ANR	3249356	ExpressionStatement	server -> write_line ( buf )	1556:1:38320:38343	3249274	7	True				
ANR	3249357	CallExpression	server -> write_line ( buf )		3249274	0					
ANR	3249358	Callee	server -> write_line		3249274	0					
ANR	3249359	PtrMemberAccess	server -> write_line		3249274	0					
ANR	3249360	Identifier	server		3249274	0					
ANR	3249361	Identifier	write_line		3249274	1					
ANR	3249362	ArgumentList	buf		3249274	1					
ANR	3249363	Argument	buf		3249274	0					
ANR	3249364	Identifier	buf		3249274	0					
ANR	3249365	IdentifierDeclStatement	Gahp_Args result ;	1557:1:38346:38362	3249274	8	True				
ANR	3249366	IdentifierDecl	result		3249274	0					
ANR	3249367	IdentifierDeclType	Gahp_Args		3249274	0					
ANR	3249368	Identifier	result		3249274	1					
ANR	3249369	ExpressionStatement	server -> read_argv ( result )	1558:1:38365:38390	3249274	9	True				
ANR	3249370	CallExpression	server -> read_argv ( result )		3249274	0					
ANR	3249371	Callee	server -> read_argv		3249274	0					
ANR	3249372	PtrMemberAccess	server -> read_argv		3249274	0					
ANR	3249373	Identifier	server		3249274	0					
ANR	3249374	Identifier	read_argv		3249274	1					
ANR	3249375	ArgumentList	result		3249274	1					
ANR	3249376	Argument	result		3249274	0					
ANR	3249377	Identifier	result		3249274	0					
ANR	3249378	IfStatement	if ( result . argc < 2 || result . argv [ 0 ] [ 0 ] != 'S' )		3249274	10					
ANR	3249379	Condition	result . argc < 2 || result . argv [ 0 ] [ 0 ] != 'S'	1559:6:38398:38440	3249274	0	True				
ANR	3249380	OrExpression	result . argc < 2 || result . argv [ 0 ] [ 0 ] != 'S'		3249274	0		||			
ANR	3249381	RelationalExpression	result . argc < 2		3249274	0		<			
ANR	3249382	MemberAccess	result . argc		3249274	0					
ANR	3249383	Identifier	result		3249274	0					
ANR	3249384	Identifier	argc		3249274	1					
ANR	3249385	PrimaryExpression	2		3249274	1					
ANR	3249386	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3249274	1		!=			
ANR	3249387	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3249274	0					
ANR	3249388	ArrayIndexing	result . argv [ 0 ]		3249274	0					
ANR	3249389	MemberAccess	result . argv		3249274	0					
ANR	3249390	Identifier	result		3249274	0					
ANR	3249391	Identifier	argv		3249274	1					
ANR	3249392	PrimaryExpression	0		3249274	1					
ANR	3249393	PrimaryExpression	0		3249274	1					
ANR	3249394	PrimaryExpression	'S'		3249274	1					
ANR	3249395	CompoundStatement		16:52:492:492	3249274	1					
ANR	3249396	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: error_code=%d\\n"" , command , error_code )"	1560:2:38448:38535	3249274	0	True				
ANR	3249397	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: error_code=%d\\n"" , command , error_code )"		3249274	0					
ANR	3249398	Callee	dprintf		3249274	0					
ANR	3249399	Identifier	dprintf		3249274	0					
ANR	3249400	ArgumentList	D_ALWAYS		3249274	1					
ANR	3249401	Argument	D_ALWAYS		3249274	0					
ANR	3249402	Identifier	D_ALWAYS		3249274	0					
ANR	3249403	Argument	"""GAHP command '%s' failed: error_code=%d\\n"""		3249274	1					
ANR	3249404	PrimaryExpression	"""GAHP command '%s' failed: error_code=%d\\n"""		3249274	0					
ANR	3249405	Argument	command		3249274	2					
ANR	3249406	Identifier	command		3249274	0					
ANR	3249407	Argument	error_code		3249274	3					
ANR	3249408	Identifier	error_code		3249274	0					
ANR	3249409	ReturnStatement	return NULL ;	1562:2:38539:38550	3249274	1	True				
ANR	3249410	Identifier	NULL		3249274	0					
ANR	3249411	ExpressionStatement	"strncpy ( buf , result . argv [ 1 ] , sizeof ( buf ) - 1 )"	1565:1:38603:38644	3249274	11	True				
ANR	3249412	CallExpression	"strncpy ( buf , result . argv [ 1 ] , sizeof ( buf ) - 1 )"		3249274	0					
ANR	3249413	Callee	strncpy		3249274	0					
ANR	3249414	Identifier	strncpy		3249274	0					
ANR	3249415	ArgumentList	buf		3249274	1					
ANR	3249416	Argument	buf		3249274	0					
ANR	3249417	Identifier	buf		3249274	0					
ANR	3249418	Argument	result . argv [ 1 ]		3249274	1					
ANR	3249419	ArrayIndexing	result . argv [ 1 ]		3249274	0					
ANR	3249420	MemberAccess	result . argv		3249274	0					
ANR	3249421	Identifier	result		3249274	0					
ANR	3249422	Identifier	argv		3249274	1					
ANR	3249423	PrimaryExpression	1		3249274	1					
ANR	3249424	Argument	sizeof ( buf ) - 1		3249274	2					
ANR	3249425	AdditiveExpression	sizeof ( buf ) - 1		3249274	0		-			
ANR	3249426	SizeofExpression	sizeof ( buf )		3249274	0					
ANR	3249427	Sizeof	sizeof		3249274	0					
ANR	3249428	SizeofOperand	buf		3249274	1					
ANR	3249429	PrimaryExpression	1		3249274	1					
ANR	3249430	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = '\\0'	1566:1:38647:38672	3249274	12	True				
ANR	3249431	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = '\\0'		3249274	0		=			
ANR	3249432	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		3249274	0					
ANR	3249433	Identifier	buf		3249274	0					
ANR	3249434	AdditiveExpression	sizeof ( buf ) - 1		3249274	1		-			
ANR	3249435	SizeofExpression	sizeof ( buf )		3249274	0					
ANR	3249436	Sizeof	sizeof		3249274	0					
ANR	3249437	SizeofOperand	buf		3249274	1					
ANR	3249438	PrimaryExpression	1		3249274	1					
ANR	3249439	PrimaryExpression	'\\0'		3249274	1					
ANR	3249440	ReturnStatement	return buf ;	1568:1:38676:38686	3249274	13	True				
ANR	3249441	Identifier	buf		3249274	0					
ANR	3249442	ReturnType	const char *		3249274	1					
ANR	3249443	Identifier	GahpClient :: globus_gram_client_error_string		3249274	2					
ANR	3249444	ParameterList	int error_code		3249274	3					
ANR	3249445	Parameter	int error_code	1543:44:37935:37948	3249274	0	True				
ANR	3249446	ParameterType	int		3249274	0					
ANR	3249447	Identifier	error_code		3249274	1					
ANR	3249448	CFGEntryNode	ENTRY		3249274		True				
ANR	3249449	CFGExitNode	EXIT		3249274		True				
ANR	3249450	Symbol	server		3249274						
ANR	3249451	Symbol	server -> m_commands_supported		3249274						
ANR	3249452	Symbol	* buf		3249274						
ANR	3249453	Symbol	* server		3249274						
ANR	3249454	Symbol	NULL		3249274						
ANR	3249455	Symbol	* * result . argv		3249274						
ANR	3249456	Symbol	D_ALWAYS		3249274						
ANR	3249457	Symbol	* * result		3249274						
ANR	3249458	Symbol	* result . argv		3249274						
ANR	3249459	Symbol	command		3249274						
ANR	3249460	Symbol	* server -> m_commands_supported		3249274						
ANR	3249461	Symbol	result . argv		3249274						
ANR	3249462	Symbol	result		3249274						
ANR	3249463	Symbol	buf		3249274						
ANR	3249464	Symbol	* result		3249274						
ANR	3249465	Symbol	server -> m_commands_supported -> contains_anycase		3249274						
ANR	3249466	Symbol	x		3249274						
ANR	3249467	Symbol	result . argc		3249274						
ANR	3249468	Symbol	error_code		3249274						
ANR	3249469	Symbol	* * server		3249274						
ANR	3249470	Symbol	FALSE		3249274						
ANR	3249471	Symbol	snprintf		3249274						
ANR	3249472	Function	GahpClient :: globus_gass_server_superez_init	1571:0:38691:40360							
ANR	3249473	FunctionDef	"GahpClient :: globus_gass_server_superez_init (char * * gass_url , int port)"		3249472	0					
ANR	3249474	CompoundStatement		1573:0:38769:40360	3249472	0					
ANR	3249475	Statement	static	1575:1:38773:38778	3249472	0	True				
ANR	3249476	IdentifierDeclStatement	"const char * command = ""GASS_SERVER_INIT"" ;"	1575:8:38780:38820	3249472	1	True				
ANR	3249477	IdentifierDecl	"* command = ""GASS_SERVER_INIT"""		3249472	0					
ANR	3249478	IdentifierDeclType	const char *		3249472	0					
ANR	3249479	Identifier	command		3249472	1					
ANR	3249480	AssignmentExpression	"* command = ""GASS_SERVER_INIT"""		3249472	2		=			
ANR	3249481	Identifier	command		3249472	0					
ANR	3249482	PrimaryExpression	"""GASS_SERVER_INIT"""		3249472	1					
ANR	3249483	IfStatement	if ( server -> globus_gass_server_url != NULL )		3249472	2					
ANR	3249484	Condition	server -> globus_gass_server_url != NULL	1577:6:38829:38866	3249472	0	True				
ANR	3249485	EqualityExpression	server -> globus_gass_server_url != NULL		3249472	0		!=			
ANR	3249486	PtrMemberAccess	server -> globus_gass_server_url		3249472	0					
ANR	3249487	Identifier	server		3249472	0					
ANR	3249488	Identifier	globus_gass_server_url		3249472	1					
ANR	3249489	Identifier	NULL		3249472	1					
ANR	3249490	CompoundStatement		5:47:100:100	3249472	1					
ANR	3249491	ExpressionStatement	* gass_url = strdup ( server -> globus_gass_server_url )	1578:2:38874:38926	3249472	0	True				
ANR	3249492	AssignmentExpression	* gass_url = strdup ( server -> globus_gass_server_url )		3249472	0		=			
ANR	3249493	UnaryOperationExpression	* gass_url		3249472	0					
ANR	3249494	UnaryOperator	*		3249472	0					
ANR	3249495	Identifier	gass_url		3249472	1					
ANR	3249496	CallExpression	strdup ( server -> globus_gass_server_url )		3249472	1					
ANR	3249497	Callee	strdup		3249472	0					
ANR	3249498	Identifier	strdup		3249472	0					
ANR	3249499	ArgumentList	server -> globus_gass_server_url		3249472	1					
ANR	3249500	Argument	server -> globus_gass_server_url		3249472	0					
ANR	3249501	PtrMemberAccess	server -> globus_gass_server_url		3249472	0					
ANR	3249502	Identifier	server		3249472	0					
ANR	3249503	Identifier	globus_gass_server_url		3249472	1					
ANR	3249504	ReturnStatement	return 0 ;	1579:2:38930:38938	3249472	1	True				
ANR	3249505	PrimaryExpression	0		3249472	0					
ANR	3249506	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3249472	3					
ANR	3249507	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	1583:6:38990:39051	3249472	0	True				
ANR	3249508	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3249472	0		==			
ANR	3249509	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3249472	0					
ANR	3249510	Callee	server -> m_commands_supported -> contains_anycase		3249472	0					
ANR	3249511	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3249472	0					
ANR	3249512	PtrMemberAccess	server -> m_commands_supported		3249472	0					
ANR	3249513	Identifier	server		3249472	0					
ANR	3249514	Identifier	m_commands_supported		3249472	1					
ANR	3249515	Identifier	contains_anycase		3249472	1					
ANR	3249516	ArgumentList	command		3249472	1					
ANR	3249517	Argument	command		3249472	0					
ANR	3249518	Identifier	command		3249472	0					
ANR	3249519	Identifier	FALSE		3249472	1					
ANR	3249520	CompoundStatement		11:70:284:284	3249472	1					
ANR	3249521	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	1584:2:39058:39097	3249472	0	True				
ANR	3249522	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3249472	0					
ANR	3249523	IdentifierDeclStatement	std :: string reqline ;	1588:1:39131:39150	3249472	4	True				
ANR	3249524	IdentifierDecl	reqline		3249472	0					
ANR	3249525	IdentifierDeclType	std :: string		3249472	0					
ANR	3249526	Identifier	reqline		3249472	1					
ANR	3249527	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%d"" , port ) ;"	1589:1:39153:39187	3249472	5	True				
ANR	3249528	IdentifierDecl	"x = sprintf ( reqline , ""%d"" , port )"		3249472	0					
ANR	3249529	IdentifierDeclType	int		3249472	0					
ANR	3249530	Identifier	x		3249472	1					
ANR	3249531	AssignmentExpression	"x = sprintf ( reqline , ""%d"" , port )"		3249472	2		=			
ANR	3249532	Identifier	x		3249472	0					
ANR	3249533	CallExpression	"sprintf ( reqline , ""%d"" , port )"		3249472	1					
ANR	3249534	Callee	sprintf		3249472	0					
ANR	3249535	Identifier	sprintf		3249472	0					
ANR	3249536	ArgumentList	reqline		3249472	1					
ANR	3249537	Argument	reqline		3249472	0					
ANR	3249538	Identifier	reqline		3249472	0					
ANR	3249539	Argument	"""%d"""		3249472	1					
ANR	3249540	PrimaryExpression	"""%d"""		3249472	0					
ANR	3249541	Argument	port		3249472	2					
ANR	3249542	Identifier	port		3249472	0					
ANR	3249543	ExpressionStatement	ASSERT ( x > 0 )	1590:1:39190:39205	3249472	6	True				
ANR	3249544	CallExpression	ASSERT ( x > 0 )		3249472	0					
ANR	3249545	Callee	ASSERT		3249472	0					
ANR	3249546	Identifier	ASSERT		3249472	0					
ANR	3249547	ArgumentList	x > 0		3249472	1					
ANR	3249548	Argument	x > 0		3249472	0					
ANR	3249549	RelationalExpression	x > 0		3249472	0		>			
ANR	3249550	Identifier	x		3249472	0					
ANR	3249551	PrimaryExpression	0		3249472	1					
ANR	3249552	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	1591:1:39208:39241	3249472	7	True				
ANR	3249553	IdentifierDecl	* buf = reqline . c_str ( )		3249472	0					
ANR	3249554	IdentifierDeclType	const char *		3249472	0					
ANR	3249555	Identifier	buf		3249472	1					
ANR	3249556	AssignmentExpression	* buf = reqline . c_str ( )		3249472	2		=			
ANR	3249557	Identifier	buf		3249472	0					
ANR	3249558	CallExpression	reqline . c_str ( )		3249472	1					
ANR	3249559	Callee	reqline . c_str		3249472	0					
ANR	3249560	MemberAccess	reqline . c_str		3249472	0					
ANR	3249561	Identifier	reqline		3249472	0					
ANR	3249562	Identifier	c_str		3249472	1					
ANR	3249563	ArgumentList			3249472	1					
ANR	3249564	IfStatement	"if ( ! is_pending ( command , buf ) )"		3249472	8					
ANR	3249565	Condition	"! is_pending ( command , buf )"	1595:6:39342:39365	3249472	0	True				
ANR	3249566	UnaryOperationExpression	"! is_pending ( command , buf )"		3249472	0					
ANR	3249567	UnaryOperator	!		3249472	0					
ANR	3249568	CallExpression	"is_pending ( command , buf )"		3249472	1					
ANR	3249569	Callee	is_pending		3249472	0					
ANR	3249570	Identifier	is_pending		3249472	0					
ANR	3249571	ArgumentList	command		3249472	1					
ANR	3249572	Argument	command		3249472	0					
ANR	3249573	Identifier	command		3249472	0					
ANR	3249574	Argument	buf		3249472	1					
ANR	3249575	Identifier	buf		3249472	0					
ANR	3249576	CompoundStatement		23:33:599:599	3249472	1					
ANR	3249577	IfStatement	if ( m_mode == results_only )		3249472	0					
ANR	3249578	Condition	m_mode == results_only	1598:7:39474:39495	3249472	0	True				
ANR	3249579	EqualityExpression	m_mode == results_only		3249472	0		==			
ANR	3249580	Identifier	m_mode		3249472	0					
ANR	3249581	Identifier	results_only		3249472	1					
ANR	3249582	CompoundStatement		26:32:729:729	3249472	1					
ANR	3249583	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	1599:3:39504:39543	3249472	0	True				
ANR	3249584	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3249472	0					
ANR	3249585	ExpressionStatement	"now_pending ( command , buf )"	1601:2:39551:39575	3249472	1	True				
ANR	3249586	CallExpression	"now_pending ( command , buf )"		3249472	0					
ANR	3249587	Callee	now_pending		3249472	0					
ANR	3249588	Identifier	now_pending		3249472	0					
ANR	3249589	ArgumentList	command		3249472	1					
ANR	3249590	Argument	command		3249472	0					
ANR	3249591	Identifier	command		3249472	0					
ANR	3249592	Argument	buf		3249472	1					
ANR	3249593	Identifier	buf		3249472	0					
ANR	3249594	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	1607:1:39669:39720	3249472	9	True				
ANR	3249595	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3249472	0					
ANR	3249596	IdentifierDeclType	Gahp_Args *		3249472	0					
ANR	3249597	Identifier	result		3249472	1					
ANR	3249598	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3249472	2		=			
ANR	3249599	Identifier	result		3249472	0					
ANR	3249600	CallExpression	"get_pending_result ( command , buf )"		3249472	1					
ANR	3249601	Callee	get_pending_result		3249472	0					
ANR	3249602	Identifier	get_pending_result		3249472	0					
ANR	3249603	ArgumentList	command		3249472	1					
ANR	3249604	Argument	command		3249472	0					
ANR	3249605	Identifier	command		3249472	0					
ANR	3249606	Argument	buf		3249472	1					
ANR	3249607	Identifier	buf		3249472	0					
ANR	3249608	IfStatement	if ( result )		3249472	10					
ANR	3249609	Condition	result	1608:6:39728:39733	3249472	0	True				
ANR	3249610	Identifier	result		3249472	0					
ANR	3249611	CompoundStatement		41:2:1062:1092	3249472	1					
ANR	3249612	IfStatement	if ( result -> argc != 3 )		3249472	0					
ANR	3249613	Condition	result -> argc != 3	1610:6:39769:39785	3249472	0	True				
ANR	3249614	EqualityExpression	result -> argc != 3		3249472	0		!=			
ANR	3249615	PtrMemberAccess	result -> argc		3249472	0					
ANR	3249616	Identifier	result		3249472	0					
ANR	3249617	Identifier	argc		3249472	1					
ANR	3249618	PrimaryExpression	3		3249472	1					
ANR	3249619	CompoundStatement		38:25:1018:1018	3249472	1					
ANR	3249620	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	1611:3:39793:39824	3249472	0	True				
ANR	3249621	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3249472	0					
ANR	3249622	Callee	EXCEPT		3249472	0					
ANR	3249623	Identifier	EXCEPT		3249472	0					
ANR	3249624	ArgumentList	"""Bad %s Result"""		3249472	1					
ANR	3249625	Argument	"""Bad %s Result"""		3249472	0					
ANR	3249626	PrimaryExpression	"""Bad %s Result"""		3249472	0					
ANR	3249627	Argument	command		3249472	1					
ANR	3249628	Identifier	command		3249472	0					
ANR	3249629	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	1613:2:39832:39862	3249472	1	True				
ANR	3249630	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3249472	0					
ANR	3249631	IdentifierDeclType	int		3249472	0					
ANR	3249632	Identifier	rc		3249472	1					
ANR	3249633	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3249472	2		=			
ANR	3249634	Identifier	rc		3249472	0					
ANR	3249635	CallExpression	atoi ( result -> argv [ 1 ] )		3249472	1					
ANR	3249636	Callee	atoi		3249472	0					
ANR	3249637	Identifier	atoi		3249472	0					
ANR	3249638	ArgumentList	result -> argv [ 1 ]		3249472	1					
ANR	3249639	Argument	result -> argv [ 1 ]		3249472	0					
ANR	3249640	ArrayIndexing	result -> argv [ 1 ]		3249472	0					
ANR	3249641	PtrMemberAccess	result -> argv		3249472	0					
ANR	3249642	Identifier	result		3249472	0					
ANR	3249643	Identifier	argv		3249472	1					
ANR	3249644	PrimaryExpression	1		3249472	1					
ANR	3249645	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3249472	2					
ANR	3249646	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	1614:7:39871:39909	3249472	0	True				
ANR	3249647	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3249472	0					
ANR	3249648	Callee	strcasecmp		3249472	0					
ANR	3249649	Identifier	strcasecmp		3249472	0					
ANR	3249650	ArgumentList	result -> argv [ 2 ]		3249472	1					
ANR	3249651	Argument	result -> argv [ 2 ]		3249472	0					
ANR	3249652	ArrayIndexing	result -> argv [ 2 ]		3249472	0					
ANR	3249653	PtrMemberAccess	result -> argv		3249472	0					
ANR	3249654	Identifier	result		3249472	0					
ANR	3249655	Identifier	argv		3249472	1					
ANR	3249656	PrimaryExpression	2		3249472	1					
ANR	3249657	Argument	NULLSTRING		3249472	1					
ANR	3249658	Identifier	NULLSTRING		3249472	0					
ANR	3249659	CompoundStatement		42:49:1143:1143	3249472	1					
ANR	3249660	ExpressionStatement	* gass_url = strdup ( result -> argv [ 2 ] )	1615:3:39918:39953	3249472	0	True				
ANR	3249661	AssignmentExpression	* gass_url = strdup ( result -> argv [ 2 ] )		3249472	0		=			
ANR	3249662	UnaryOperationExpression	* gass_url		3249472	0					
ANR	3249663	UnaryOperator	*		3249472	0					
ANR	3249664	Identifier	gass_url		3249472	1					
ANR	3249665	CallExpression	strdup ( result -> argv [ 2 ] )		3249472	1					
ANR	3249666	Callee	strdup		3249472	0					
ANR	3249667	Identifier	strdup		3249472	0					
ANR	3249668	ArgumentList	result -> argv [ 2 ]		3249472	1					
ANR	3249669	Argument	result -> argv [ 2 ]		3249472	0					
ANR	3249670	ArrayIndexing	result -> argv [ 2 ]		3249472	0					
ANR	3249671	PtrMemberAccess	result -> argv		3249472	0					
ANR	3249672	Identifier	result		3249472	0					
ANR	3249673	Identifier	argv		3249472	1					
ANR	3249674	PrimaryExpression	2		3249472	1					
ANR	3249675	ExpressionStatement	server -> globus_gass_server_url = strdup ( result -> argv [ 2 ] )	1616:3:39958:40014	3249472	1	True				
ANR	3249676	AssignmentExpression	server -> globus_gass_server_url = strdup ( result -> argv [ 2 ] )		3249472	0		=			
ANR	3249677	PtrMemberAccess	server -> globus_gass_server_url		3249472	0					
ANR	3249678	Identifier	server		3249472	0					
ANR	3249679	Identifier	globus_gass_server_url		3249472	1					
ANR	3249680	CallExpression	strdup ( result -> argv [ 2 ] )		3249472	1					
ANR	3249681	Callee	strdup		3249472	0					
ANR	3249682	Identifier	strdup		3249472	0					
ANR	3249683	ArgumentList	result -> argv [ 2 ]		3249472	1					
ANR	3249684	Argument	result -> argv [ 2 ]		3249472	0					
ANR	3249685	ArrayIndexing	result -> argv [ 2 ]		3249472	0					
ANR	3249686	PtrMemberAccess	result -> argv		3249472	0					
ANR	3249687	Identifier	result		3249472	0					
ANR	3249688	Identifier	argv		3249472	1					
ANR	3249689	PrimaryExpression	2		3249472	1					
ANR	3249690	Statement	delete	1618:2:40022:40027	3249472	3	True				
ANR	3249691	ExpressionStatement	result	1618:9:40029:40035	3249472	4	True				
ANR	3249692	Identifier	result		3249472	0					
ANR	3249693	ReturnStatement	return rc ;	1619:2:40039:40048	3249472	5	True				
ANR	3249694	Identifier	rc		3249472	0					
ANR	3249695	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3249472	11					
ANR	3249696	Condition	"check_pending_timeout ( command , buf )"	1623:6:40105:40138	3249472	0	True				
ANR	3249697	CallExpression	"check_pending_timeout ( command , buf )"		3249472	0					
ANR	3249698	Callee	check_pending_timeout		3249472	0					
ANR	3249699	Identifier	check_pending_timeout		3249472	0					
ANR	3249700	ArgumentList	command		3249472	1					
ANR	3249701	Argument	command		3249472	0					
ANR	3249702	Identifier	command		3249472	0					
ANR	3249703	Argument	buf		3249472	1					
ANR	3249704	Identifier	buf		3249472	0					
ANR	3249705	CompoundStatement		51:43:1372:1372	3249472	1					
ANR	3249706	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	1625:2:40178:40226	3249472	0	True				
ANR	3249707	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3249472	0					
ANR	3249708	Callee	sprintf		3249472	0					
ANR	3249709	Identifier	sprintf		3249472	0					
ANR	3249710	ArgumentList	error_string		3249472	1					
ANR	3249711	Argument	error_string		3249472	0					
ANR	3249712	Identifier	error_string		3249472	0					
ANR	3249713	Argument	"""%s timed out"""		3249472	1					
ANR	3249714	PrimaryExpression	"""%s timed out"""		3249472	0					
ANR	3249715	Argument	command		3249472	2					
ANR	3249716	Identifier	command		3249472	0					
ANR	3249717	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	1626:2:40230:40265	3249472	1	True				
ANR	3249718	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3249472	0					
ANR	3249719	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	1630:1:40325:40358	3249472	12	True				
ANR	3249720	Identifier	GAHPCLIENT_COMMAND_PENDING		3249472	0					
ANR	3249721	ReturnType	int		3249472	1					
ANR	3249722	Identifier	GahpClient :: globus_gass_server_superez_init		3249472	2					
ANR	3249723	ParameterList	"char * * gass_url , int port"		3249472	3					
ANR	3249724	Parameter	char * * gass_url	1572:45:38741:38755	3249472	0	True				
ANR	3249725	ParameterType	char * *		3249472	0					
ANR	3249726	Identifier	gass_url		3249472	1					
ANR	3249727	Parameter	int port	1572:62:38758:38765	3249472	1	True				
ANR	3249728	ParameterType	int		3249472	0					
ANR	3249729	Identifier	port		3249472	1					
ANR	3249730	CFGEntryNode	ENTRY		3249472		True				
ANR	3249731	CFGExitNode	EXIT		3249472		True				
ANR	3249732	Symbol	server		3249472						
ANR	3249733	Symbol	server -> m_commands_supported		3249472						
ANR	3249734	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3249472						
ANR	3249735	Symbol	* server		3249472						
ANR	3249736	Symbol	server -> globus_gass_server_url		3249472						
ANR	3249737	Symbol	reqline . c_str		3249472						
ANR	3249738	Symbol	results_only		3249472						
ANR	3249739	Symbol	result -> argv		3249472						
ANR	3249740	Symbol	* gass_url		3249472						
ANR	3249741	Symbol	* server -> m_commands_supported		3249472						
ANR	3249742	Symbol	sprintf		3249472						
ANR	3249743	Symbol	result		3249472						
ANR	3249744	Symbol	* result		3249472						
ANR	3249745	Symbol	server -> m_commands_supported -> contains_anycase		3249472						
ANR	3249746	Symbol	GAHPCLIENT_COMMAND_PENDING		3249472						
ANR	3249747	Symbol	reqline		3249472						
ANR	3249748	Symbol	m_mode		3249472						
ANR	3249749	Symbol	strcasecmp		3249472						
ANR	3249750	Symbol	* result -> argv		3249472						
ANR	3249751	Symbol	atoi		3249472						
ANR	3249752	Symbol	NULL		3249472						
ANR	3249753	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3249472						
ANR	3249754	Symbol	* * result		3249472						
ANR	3249755	Symbol	NULLSTRING		3249472						
ANR	3249756	Symbol	command		3249472						
ANR	3249757	Symbol	get_pending_result		3249472						
ANR	3249758	Symbol	rc		3249472						
ANR	3249759	Symbol	error_string		3249472						
ANR	3249760	Symbol	buf		3249472						
ANR	3249761	Symbol	port		3249472						
ANR	3249762	Symbol	x		3249472						
ANR	3249763	Symbol	result -> argc		3249472						
ANR	3249764	Symbol	* * server		3249472						
ANR	3249765	Symbol	FALSE		3249472						
ANR	3249766	Symbol	strdup		3249472						
ANR	3249767	Symbol	check_pending_timeout		3249472						
ANR	3249768	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3249472						
ANR	3249769	Symbol	gass_url		3249472						
ANR	3249770	Symbol	is_pending		3249472						
ANR	3249771	Function	GahpClient :: globus_gram_client_job_request	1633:0:40363:42415							
ANR	3249772	FunctionDef	"GahpClient :: globus_gram_client_job_request (const char * resource_manager_contact , const char * description , const int limited_deleg , const char * callback_contact , char * * job_contact)"		3249771	0					
ANR	3249773	CompoundStatement		1640:0:40559:42415	3249771	0					
ANR	3249774	Statement	static	1642:1:40563:40568	3249771	0	True				
ANR	3249775	IdentifierDeclStatement	"const char * command = ""GRAM_JOB_REQUEST"" ;"	1642:8:40570:40610	3249771	1	True				
ANR	3249776	IdentifierDecl	"* command = ""GRAM_JOB_REQUEST"""		3249771	0					
ANR	3249777	IdentifierDeclType	const char *		3249771	0					
ANR	3249778	Identifier	command		3249771	1					
ANR	3249779	AssignmentExpression	"* command = ""GRAM_JOB_REQUEST"""		3249771	2		=			
ANR	3249780	Identifier	command		3249771	0					
ANR	3249781	PrimaryExpression	"""GRAM_JOB_REQUEST"""		3249771	1					
ANR	3249782	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3249771	2					
ANR	3249783	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	1645:6:40659:40720	3249771	0	True				
ANR	3249784	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3249771	0		==			
ANR	3249785	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3249771	0					
ANR	3249786	Callee	server -> m_commands_supported -> contains_anycase		3249771	0					
ANR	3249787	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3249771	0					
ANR	3249788	PtrMemberAccess	server -> m_commands_supported		3249771	0					
ANR	3249789	Identifier	server		3249771	0					
ANR	3249790	Identifier	m_commands_supported		3249771	1					
ANR	3249791	Identifier	contains_anycase		3249771	1					
ANR	3249792	ArgumentList	command		3249771	1					
ANR	3249793	Argument	command		3249771	0					
ANR	3249794	Identifier	command		3249771	0					
ANR	3249795	Identifier	FALSE		3249771	1					
ANR	3249796	CompoundStatement		6:70:163:163	3249771	1					
ANR	3249797	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	1646:2:40727:40766	3249771	0	True				
ANR	3249798	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3249771	0					
ANR	3249799	IfStatement	if ( ! resource_manager_contact )		3249771	3					
ANR	3249800	Condition	! resource_manager_contact	1650:5:40804:40828	3249771	0	True				
ANR	3249801	UnaryOperationExpression	! resource_manager_contact		3249771	0					
ANR	3249802	UnaryOperator	!		3249771	0					
ANR	3249803	Identifier	resource_manager_contact		3249771	1					
ANR	3249804	ExpressionStatement	resource_manager_contact = NULLSTRING	1650:32:40831:40866	3249771	1	True				
ANR	3249805	AssignmentExpression	resource_manager_contact = NULLSTRING		3249771	0		=			
ANR	3249806	Identifier	resource_manager_contact		3249771	0					
ANR	3249807	Identifier	NULLSTRING		3249771	1					
ANR	3249808	IfStatement	if ( ! description )		3249771	4					
ANR	3249809	Condition	! description	1651:5:40873:40884	3249771	0	True				
ANR	3249810	UnaryOperationExpression	! description		3249771	0					
ANR	3249811	UnaryOperator	!		3249771	0					
ANR	3249812	Identifier	description		3249771	1					
ANR	3249813	ExpressionStatement	description = NULLSTRING	1651:19:40887:40909	3249771	1	True				
ANR	3249814	AssignmentExpression	description = NULLSTRING		3249771	0		=			
ANR	3249815	Identifier	description		3249771	0					
ANR	3249816	Identifier	NULLSTRING		3249771	1					
ANR	3249817	IfStatement	if ( ! callback_contact )		3249771	5					
ANR	3249818	Condition	! callback_contact	1652:5:40916:40932	3249771	0	True				
ANR	3249819	UnaryOperationExpression	! callback_contact		3249771	0					
ANR	3249820	UnaryOperator	!		3249771	0					
ANR	3249821	Identifier	callback_contact		3249771	1					
ANR	3249822	ExpressionStatement	callback_contact = NULLSTRING	1652:24:40935:40962	3249771	1	True				
ANR	3249823	AssignmentExpression	callback_contact = NULLSTRING		3249771	0		=			
ANR	3249824	Identifier	callback_contact		3249771	0					
ANR	3249825	Identifier	NULLSTRING		3249771	1					
ANR	3249826	IdentifierDeclStatement	std :: string reqline ;	1653:1:40965:40984	3249771	6	True				
ANR	3249827	IdentifierDecl	reqline		3249771	0					
ANR	3249828	IdentifierDeclType	std :: string		3249771	0					
ANR	3249829	Identifier	reqline		3249771	1					
ANR	3249830	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( resource_manager_contact ) ) ;	1654:1:40987:41052	3249771	7	True				
ANR	3249831	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( resource_manager_contact ) )		3249771	0					
ANR	3249832	IdentifierDeclType	char *		3249771	0					
ANR	3249833	Identifier	esc1		3249771	1					
ANR	3249834	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( resource_manager_contact ) )		3249771	2		=			
ANR	3249835	Identifier	esc1		3249771	0					
ANR	3249836	CallExpression	strdup ( escapeGahpString ( resource_manager_contact ) )		3249771	1					
ANR	3249837	Callee	strdup		3249771	0					
ANR	3249838	Identifier	strdup		3249771	0					
ANR	3249839	ArgumentList	escapeGahpString ( resource_manager_contact )		3249771	1					
ANR	3249840	Argument	escapeGahpString ( resource_manager_contact )		3249771	0					
ANR	3249841	CallExpression	escapeGahpString ( resource_manager_contact )		3249771	0					
ANR	3249842	Callee	escapeGahpString		3249771	0					
ANR	3249843	Identifier	escapeGahpString		3249771	0					
ANR	3249844	ArgumentList	resource_manager_contact		3249771	1					
ANR	3249845	Argument	resource_manager_contact		3249771	0					
ANR	3249846	Identifier	resource_manager_contact		3249771	0					
ANR	3249847	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( callback_contact ) ) ;	1655:1:41055:41112	3249771	8	True				
ANR	3249848	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( callback_contact ) )		3249771	0					
ANR	3249849	IdentifierDeclType	char *		3249771	0					
ANR	3249850	Identifier	esc2		3249771	1					
ANR	3249851	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( callback_contact ) )		3249771	2		=			
ANR	3249852	Identifier	esc2		3249771	0					
ANR	3249853	CallExpression	strdup ( escapeGahpString ( callback_contact ) )		3249771	1					
ANR	3249854	Callee	strdup		3249771	0					
ANR	3249855	Identifier	strdup		3249771	0					
ANR	3249856	ArgumentList	escapeGahpString ( callback_contact )		3249771	1					
ANR	3249857	Argument	escapeGahpString ( callback_contact )		3249771	0					
ANR	3249858	CallExpression	escapeGahpString ( callback_contact )		3249771	0					
ANR	3249859	Callee	escapeGahpString		3249771	0					
ANR	3249860	Identifier	escapeGahpString		3249771	0					
ANR	3249861	ArgumentList	callback_contact		3249771	1					
ANR	3249862	Argument	callback_contact		3249771	0					
ANR	3249863	Identifier	callback_contact		3249771	0					
ANR	3249864	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( description ) ) ;	1656:1:41115:41167	3249771	9	True				
ANR	3249865	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( description ) )		3249771	0					
ANR	3249866	IdentifierDeclType	char *		3249771	0					
ANR	3249867	Identifier	esc3		3249771	1					
ANR	3249868	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( description ) )		3249771	2		=			
ANR	3249869	Identifier	esc3		3249771	0					
ANR	3249870	CallExpression	strdup ( escapeGahpString ( description ) )		3249771	1					
ANR	3249871	Callee	strdup		3249771	0					
ANR	3249872	Identifier	strdup		3249771	0					
ANR	3249873	ArgumentList	escapeGahpString ( description )		3249771	1					
ANR	3249874	Argument	escapeGahpString ( description )		3249771	0					
ANR	3249875	CallExpression	escapeGahpString ( description )		3249771	0					
ANR	3249876	Callee	escapeGahpString		3249771	0					
ANR	3249877	Identifier	escapeGahpString		3249771	0					
ANR	3249878	ArgumentList	description		3249771	1					
ANR	3249879	Argument	description		3249771	0					
ANR	3249880	Identifier	description		3249771	0					
ANR	3249881	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %d %s"" , esc1 , esc2 , limited_deleg , esc3 ) ;"	1657:1:41170:41242	3249771	10	True				
ANR	3249882	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %d %s"" , esc1 , esc2 , limited_deleg , esc3 )"		3249771	0					
ANR	3249883	IdentifierDeclType	int		3249771	0					
ANR	3249884	Identifier	x		3249771	1					
ANR	3249885	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %d %s"" , esc1 , esc2 , limited_deleg , esc3 )"		3249771	2		=			
ANR	3249886	Identifier	x		3249771	0					
ANR	3249887	CallExpression	"sprintf ( reqline , ""%s %s %d %s"" , esc1 , esc2 , limited_deleg , esc3 )"		3249771	1					
ANR	3249888	Callee	sprintf		3249771	0					
ANR	3249889	Identifier	sprintf		3249771	0					
ANR	3249890	ArgumentList	reqline		3249771	1					
ANR	3249891	Argument	reqline		3249771	0					
ANR	3249892	Identifier	reqline		3249771	0					
ANR	3249893	Argument	"""%s %s %d %s"""		3249771	1					
ANR	3249894	PrimaryExpression	"""%s %s %d %s"""		3249771	0					
ANR	3249895	Argument	esc1		3249771	2					
ANR	3249896	Identifier	esc1		3249771	0					
ANR	3249897	Argument	esc2		3249771	3					
ANR	3249898	Identifier	esc2		3249771	0					
ANR	3249899	Argument	limited_deleg		3249771	4					
ANR	3249900	Identifier	limited_deleg		3249771	0					
ANR	3249901	Argument	esc3		3249771	5					
ANR	3249902	Identifier	esc3		3249771	0					
ANR	3249903	ExpressionStatement	free ( esc1 )	1658:1:41245:41257	3249771	11	True				
ANR	3249904	CallExpression	free ( esc1 )		3249771	0					
ANR	3249905	Callee	free		3249771	0					
ANR	3249906	Identifier	free		3249771	0					
ANR	3249907	ArgumentList	esc1		3249771	1					
ANR	3249908	Argument	esc1		3249771	0					
ANR	3249909	Identifier	esc1		3249771	0					
ANR	3249910	ExpressionStatement	free ( esc2 )	1659:1:41260:41272	3249771	12	True				
ANR	3249911	CallExpression	free ( esc2 )		3249771	0					
ANR	3249912	Callee	free		3249771	0					
ANR	3249913	Identifier	free		3249771	0					
ANR	3249914	ArgumentList	esc2		3249771	1					
ANR	3249915	Argument	esc2		3249771	0					
ANR	3249916	Identifier	esc2		3249771	0					
ANR	3249917	ExpressionStatement	free ( esc3 )	1660:1:41275:41287	3249771	13	True				
ANR	3249918	CallExpression	free ( esc3 )		3249771	0					
ANR	3249919	Callee	free		3249771	0					
ANR	3249920	Identifier	free		3249771	0					
ANR	3249921	ArgumentList	esc3		3249771	1					
ANR	3249922	Argument	esc3		3249771	0					
ANR	3249923	Identifier	esc3		3249771	0					
ANR	3249924	ExpressionStatement	ASSERT ( x > 0 )	1661:1:41290:41305	3249771	14	True				
ANR	3249925	CallExpression	ASSERT ( x > 0 )		3249771	0					
ANR	3249926	Callee	ASSERT		3249771	0					
ANR	3249927	Identifier	ASSERT		3249771	0					
ANR	3249928	ArgumentList	x > 0		3249771	1					
ANR	3249929	Argument	x > 0		3249771	0					
ANR	3249930	RelationalExpression	x > 0		3249771	0		>			
ANR	3249931	Identifier	x		3249771	0					
ANR	3249932	PrimaryExpression	0		3249771	1					
ANR	3249933	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	1662:1:41308:41341	3249771	15	True				
ANR	3249934	IdentifierDecl	* buf = reqline . c_str ( )		3249771	0					
ANR	3249935	IdentifierDeclType	const char *		3249771	0					
ANR	3249936	Identifier	buf		3249771	1					
ANR	3249937	AssignmentExpression	* buf = reqline . c_str ( )		3249771	2		=			
ANR	3249938	Identifier	buf		3249771	0					
ANR	3249939	CallExpression	reqline . c_str ( )		3249771	1					
ANR	3249940	Callee	reqline . c_str		3249771	0					
ANR	3249941	MemberAccess	reqline . c_str		3249771	0					
ANR	3249942	Identifier	reqline		3249771	0					
ANR	3249943	Identifier	c_str		3249771	1					
ANR	3249944	ArgumentList			3249771	1					
ANR	3249945	IfStatement	"if ( ! is_pending ( command , buf ) )"		3249771	16					
ANR	3249946	Condition	"! is_pending ( command , buf )"	1666:6:41443:41466	3249771	0	True				
ANR	3249947	UnaryOperationExpression	"! is_pending ( command , buf )"		3249771	0					
ANR	3249948	UnaryOperator	!		3249771	0					
ANR	3249949	CallExpression	"is_pending ( command , buf )"		3249771	1					
ANR	3249950	Callee	is_pending		3249771	0					
ANR	3249951	Identifier	is_pending		3249771	0					
ANR	3249952	ArgumentList	command		3249771	1					
ANR	3249953	Argument	command		3249771	0					
ANR	3249954	Identifier	command		3249771	0					
ANR	3249955	Argument	buf		3249771	1					
ANR	3249956	Identifier	buf		3249771	0					
ANR	3249957	CompoundStatement		27:33:910:910	3249771	1					
ANR	3249958	IfStatement	if ( m_mode == results_only )		3249771	0					
ANR	3249959	Condition	m_mode == results_only	1669:7:41575:41596	3249771	0	True				
ANR	3249960	EqualityExpression	m_mode == results_only		3249771	0		==			
ANR	3249961	Identifier	m_mode		3249771	0					
ANR	3249962	Identifier	results_only		3249771	1					
ANR	3249963	CompoundStatement		30:32:1040:1040	3249771	1					
ANR	3249964	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	1670:3:41605:41644	3249771	0	True				
ANR	3249965	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3249771	0					
ANR	3249966	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	1672:2:41652:41688	3249771	1	True				
ANR	3249967	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3249771	0					
ANR	3249968	Callee	now_pending		3249771	0					
ANR	3249969	Identifier	now_pending		3249771	0					
ANR	3249970	ArgumentList	command		3249771	1					
ANR	3249971	Argument	command		3249771	0					
ANR	3249972	Identifier	command		3249771	0					
ANR	3249973	Argument	buf		3249771	1					
ANR	3249974	Identifier	buf		3249771	0					
ANR	3249975	Argument	deleg_proxy		3249771	2					
ANR	3249976	Identifier	deleg_proxy		3249771	0					
ANR	3249977	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	1678:1:41782:41833	3249771	17	True				
ANR	3249978	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3249771	0					
ANR	3249979	IdentifierDeclType	Gahp_Args *		3249771	0					
ANR	3249980	Identifier	result		3249771	1					
ANR	3249981	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3249771	2		=			
ANR	3249982	Identifier	result		3249771	0					
ANR	3249983	CallExpression	"get_pending_result ( command , buf )"		3249771	1					
ANR	3249984	Callee	get_pending_result		3249771	0					
ANR	3249985	Identifier	get_pending_result		3249771	0					
ANR	3249986	ArgumentList	command		3249771	1					
ANR	3249987	Argument	command		3249771	0					
ANR	3249988	Identifier	command		3249771	0					
ANR	3249989	Argument	buf		3249771	1					
ANR	3249990	Identifier	buf		3249771	0					
ANR	3249991	IfStatement	if ( result )		3249771	18					
ANR	3249992	Condition	result	1679:6:41841:41846	3249771	0	True				
ANR	3249993	Identifier	result		3249771	0					
ANR	3249994	CompoundStatement		45:2:1385:1415	3249771	1					
ANR	3249995	IfStatement	if ( result -> argc != 3 )		3249771	0					
ANR	3249996	Condition	result -> argc != 3	1681:6:41882:41898	3249771	0	True				
ANR	3249997	EqualityExpression	result -> argc != 3		3249771	0		!=			
ANR	3249998	PtrMemberAccess	result -> argc		3249771	0					
ANR	3249999	Identifier	result		3249771	0					
ANR	3250000	Identifier	argc		3249771	1					
ANR	3250001	PrimaryExpression	3		3249771	1					
ANR	3250002	CompoundStatement		42:25:1341:1341	3249771	1					
ANR	3250003	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	1682:3:41906:41937	3249771	0	True				
ANR	3250004	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3249771	0					
ANR	3250005	Callee	EXCEPT		3249771	0					
ANR	3250006	Identifier	EXCEPT		3249771	0					
ANR	3250007	ArgumentList	"""Bad %s Result"""		3249771	1					
ANR	3250008	Argument	"""Bad %s Result"""		3249771	0					
ANR	3250009	PrimaryExpression	"""Bad %s Result"""		3249771	0					
ANR	3250010	Argument	command		3249771	1					
ANR	3250011	Identifier	command		3249771	0					
ANR	3250012	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	1684:2:41945:41975	3249771	1	True				
ANR	3250013	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3249771	0					
ANR	3250014	IdentifierDeclType	int		3249771	0					
ANR	3250015	Identifier	rc		3249771	1					
ANR	3250016	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3249771	2		=			
ANR	3250017	Identifier	rc		3249771	0					
ANR	3250018	CallExpression	atoi ( result -> argv [ 1 ] )		3249771	1					
ANR	3250019	Callee	atoi		3249771	0					
ANR	3250020	Identifier	atoi		3249771	0					
ANR	3250021	ArgumentList	result -> argv [ 1 ]		3249771	1					
ANR	3250022	Argument	result -> argv [ 1 ]		3249771	0					
ANR	3250023	ArrayIndexing	result -> argv [ 1 ]		3249771	0					
ANR	3250024	PtrMemberAccess	result -> argv		3249771	0					
ANR	3250025	Identifier	result		3249771	0					
ANR	3250026	Identifier	argv		3249771	1					
ANR	3250027	PrimaryExpression	1		3249771	1					
ANR	3250028	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3249771	2					
ANR	3250029	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	1685:7:41984:42022	3249771	0	True				
ANR	3250030	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3249771	0					
ANR	3250031	Callee	strcasecmp		3249771	0					
ANR	3250032	Identifier	strcasecmp		3249771	0					
ANR	3250033	ArgumentList	result -> argv [ 2 ]		3249771	1					
ANR	3250034	Argument	result -> argv [ 2 ]		3249771	0					
ANR	3250035	ArrayIndexing	result -> argv [ 2 ]		3249771	0					
ANR	3250036	PtrMemberAccess	result -> argv		3249771	0					
ANR	3250037	Identifier	result		3249771	0					
ANR	3250038	Identifier	argv		3249771	1					
ANR	3250039	PrimaryExpression	2		3249771	1					
ANR	3250040	Argument	NULLSTRING		3249771	1					
ANR	3250041	Identifier	NULLSTRING		3249771	0					
ANR	3250042	CompoundStatement		46:49:1466:1466	3249771	1					
ANR	3250043	ExpressionStatement	* job_contact = strdup ( result -> argv [ 2 ] )	1686:3:42031:42069	3249771	0	True				
ANR	3250044	AssignmentExpression	* job_contact = strdup ( result -> argv [ 2 ] )		3249771	0		=			
ANR	3250045	UnaryOperationExpression	* job_contact		3249771	0					
ANR	3250046	UnaryOperator	*		3249771	0					
ANR	3250047	Identifier	job_contact		3249771	1					
ANR	3250048	CallExpression	strdup ( result -> argv [ 2 ] )		3249771	1					
ANR	3250049	Callee	strdup		3249771	0					
ANR	3250050	Identifier	strdup		3249771	0					
ANR	3250051	ArgumentList	result -> argv [ 2 ]		3249771	1					
ANR	3250052	Argument	result -> argv [ 2 ]		3249771	0					
ANR	3250053	ArrayIndexing	result -> argv [ 2 ]		3249771	0					
ANR	3250054	PtrMemberAccess	result -> argv		3249771	0					
ANR	3250055	Identifier	result		3249771	0					
ANR	3250056	Identifier	argv		3249771	1					
ANR	3250057	PrimaryExpression	2		3249771	1					
ANR	3250058	Statement	delete	1688:2:42077:42082	3249771	3	True				
ANR	3250059	ExpressionStatement	result	1688:9:42084:42090	3249771	4	True				
ANR	3250060	Identifier	result		3249771	0					
ANR	3250061	ReturnStatement	return rc ;	1689:2:42094:42103	3249771	5	True				
ANR	3250062	Identifier	rc		3249771	0					
ANR	3250063	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3249771	19					
ANR	3250064	Condition	"check_pending_timeout ( command , buf )"	1693:6:42160:42193	3249771	0	True				
ANR	3250065	CallExpression	"check_pending_timeout ( command , buf )"		3249771	0					
ANR	3250066	Callee	check_pending_timeout		3249771	0					
ANR	3250067	Identifier	check_pending_timeout		3249771	0					
ANR	3250068	ArgumentList	command		3249771	1					
ANR	3250069	Argument	command		3249771	0					
ANR	3250070	Identifier	command		3249771	0					
ANR	3250071	Argument	buf		3249771	1					
ANR	3250072	Identifier	buf		3249771	0					
ANR	3250073	CompoundStatement		54:43:1637:1637	3249771	1					
ANR	3250074	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	1695:2:42233:42281	3249771	0	True				
ANR	3250075	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3249771	0					
ANR	3250076	Callee	sprintf		3249771	0					
ANR	3250077	Identifier	sprintf		3249771	0					
ANR	3250078	ArgumentList	error_string		3249771	1					
ANR	3250079	Argument	error_string		3249771	0					
ANR	3250080	Identifier	error_string		3249771	0					
ANR	3250081	Argument	"""%s timed out"""		3249771	1					
ANR	3250082	PrimaryExpression	"""%s timed out"""		3249771	0					
ANR	3250083	Argument	command		3249771	2					
ANR	3250084	Identifier	command		3249771	0					
ANR	3250085	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	1696:2:42285:42320	3249771	1	True				
ANR	3250086	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3249771	0					
ANR	3250087	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	1700:1:42380:42413	3249771	20	True				
ANR	3250088	Identifier	GAHPCLIENT_COMMAND_PENDING		3249771	0					
ANR	3250089	ReturnType	int		3249771	1					
ANR	3250090	Identifier	GahpClient :: globus_gram_client_job_request		3249771	2					
ANR	3250091	ParameterList	"const char * resource_manager_contact , const char * description , const int limited_deleg , const char * callback_contact , char * * job_contact"		3249771	3					
ANR	3250092	Parameter	const char * resource_manager_contact	1635:1:40413:40449	3249771	0	True				
ANR	3250093	ParameterType	const char *		3249771	0					
ANR	3250094	Identifier	resource_manager_contact		3249771	1					
ANR	3250095	Parameter	const char * description	1636:1:40453:40476	3249771	1	True				
ANR	3250096	ParameterType	const char *		3249771	0					
ANR	3250097	Identifier	description		3249771	1					
ANR	3250098	Parameter	const int limited_deleg	1637:1:40480:40502	3249771	2	True				
ANR	3250099	ParameterType	const int		3249771	0					
ANR	3250100	Identifier	limited_deleg		3249771	1					
ANR	3250101	Parameter	const char * callback_contact	1638:1:40506:40534	3249771	3	True				
ANR	3250102	ParameterType	const char *		3249771	0					
ANR	3250103	Identifier	callback_contact		3249771	1					
ANR	3250104	Parameter	char * * job_contact	1639:1:40538:40556	3249771	4	True				
ANR	3250105	ParameterType	char * *		3249771	0					
ANR	3250106	Identifier	job_contact		3249771	1					
ANR	3250107	CFGEntryNode	ENTRY		3249771		True				
ANR	3250108	CFGExitNode	EXIT		3249771		True				
ANR	3250109	Symbol	server		3249771						
ANR	3250110	Symbol	server -> m_commands_supported		3249771						
ANR	3250111	Symbol	escapeGahpString		3249771						
ANR	3250112	Symbol	resource_manager_contact		3249771						
ANR	3250113	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3249771						
ANR	3250114	Symbol	* server		3249771						
ANR	3250115	Symbol	description		3249771						
ANR	3250116	Symbol	reqline . c_str		3249771						
ANR	3250117	Symbol	results_only		3249771						
ANR	3250118	Symbol	result -> argv		3249771						
ANR	3250119	Symbol	* server -> m_commands_supported		3249771						
ANR	3250120	Symbol	sprintf		3249771						
ANR	3250121	Symbol	result		3249771						
ANR	3250122	Symbol	* result		3249771						
ANR	3250123	Symbol	server -> m_commands_supported -> contains_anycase		3249771						
ANR	3250124	Symbol	GAHPCLIENT_COMMAND_PENDING		3249771						
ANR	3250125	Symbol	reqline		3249771						
ANR	3250126	Symbol	m_mode		3249771						
ANR	3250127	Symbol	strcasecmp		3249771						
ANR	3250128	Symbol	job_contact		3249771						
ANR	3250129	Symbol	* result -> argv		3249771						
ANR	3250130	Symbol	* job_contact		3249771						
ANR	3250131	Symbol	atoi		3249771						
ANR	3250132	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3249771						
ANR	3250133	Symbol	* * result		3249771						
ANR	3250134	Symbol	NULLSTRING		3249771						
ANR	3250135	Symbol	command		3249771						
ANR	3250136	Symbol	limited_deleg		3249771						
ANR	3250137	Symbol	get_pending_result		3249771						
ANR	3250138	Symbol	esc3		3249771						
ANR	3250139	Symbol	rc		3249771						
ANR	3250140	Symbol	error_string		3249771						
ANR	3250141	Symbol	callback_contact		3249771						
ANR	3250142	Symbol	esc2		3249771						
ANR	3250143	Symbol	buf		3249771						
ANR	3250144	Symbol	esc1		3249771						
ANR	3250145	Symbol	x		3249771						
ANR	3250146	Symbol	result -> argc		3249771						
ANR	3250147	Symbol	* * server		3249771						
ANR	3250148	Symbol	FALSE		3249771						
ANR	3250149	Symbol	strdup		3249771						
ANR	3250150	Symbol	check_pending_timeout		3249771						
ANR	3250151	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3249771						
ANR	3250152	Symbol	is_pending		3249771						
ANR	3250153	Symbol	deleg_proxy		3249771						
ANR	3250154	Function	GahpClient :: globus_gram_client_job_cancel	1703:0:42418:43885							
ANR	3250155	FunctionDef	GahpClient :: globus_gram_client_job_cancel (const char * job_contact)		3250154	0					
ANR	3250156	CompoundStatement		1705:0:42491:43885	3250154	0					
ANR	3250157	Statement	static	1707:1:42495:42500	3250154	0	True				
ANR	3250158	IdentifierDeclStatement	"const char * command = ""GRAM_JOB_CANCEL"" ;"	1707:8:42502:42541	3250154	1	True				
ANR	3250159	IdentifierDecl	"* command = ""GRAM_JOB_CANCEL"""		3250154	0					
ANR	3250160	IdentifierDeclType	const char *		3250154	0					
ANR	3250161	Identifier	command		3250154	1					
ANR	3250162	AssignmentExpression	"* command = ""GRAM_JOB_CANCEL"""		3250154	2		=			
ANR	3250163	Identifier	command		3250154	0					
ANR	3250164	PrimaryExpression	"""GRAM_JOB_CANCEL"""		3250154	1					
ANR	3250165	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3250154	2					
ANR	3250166	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	1710:6:42590:42651	3250154	0	True				
ANR	3250167	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3250154	0		==			
ANR	3250168	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3250154	0					
ANR	3250169	Callee	server -> m_commands_supported -> contains_anycase		3250154	0					
ANR	3250170	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3250154	0					
ANR	3250171	PtrMemberAccess	server -> m_commands_supported		3250154	0					
ANR	3250172	Identifier	server		3250154	0					
ANR	3250173	Identifier	m_commands_supported		3250154	1					
ANR	3250174	Identifier	contains_anycase		3250154	1					
ANR	3250175	ArgumentList	command		3250154	1					
ANR	3250176	Argument	command		3250154	0					
ANR	3250177	Identifier	command		3250154	0					
ANR	3250178	Identifier	FALSE		3250154	1					
ANR	3250179	CompoundStatement		6:70:162:162	3250154	1					
ANR	3250180	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	1711:2:42658:42697	3250154	0	True				
ANR	3250181	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3250154	0					
ANR	3250182	IfStatement	if ( ! job_contact )		3250154	3					
ANR	3250183	Condition	! job_contact	1715:5:42735:42746	3250154	0	True				
ANR	3250184	UnaryOperationExpression	! job_contact		3250154	0					
ANR	3250185	UnaryOperator	!		3250154	0					
ANR	3250186	Identifier	job_contact		3250154	1					
ANR	3250187	ExpressionStatement	job_contact = NULLSTRING	1715:19:42749:42771	3250154	1	True				
ANR	3250188	AssignmentExpression	job_contact = NULLSTRING		3250154	0		=			
ANR	3250189	Identifier	job_contact		3250154	0					
ANR	3250190	Identifier	NULLSTRING		3250154	1					
ANR	3250191	IdentifierDeclStatement	std :: string reqline ;	1716:1:42774:42793	3250154	4	True				
ANR	3250192	IdentifierDecl	reqline		3250154	0					
ANR	3250193	IdentifierDeclType	std :: string		3250154	0					
ANR	3250194	Identifier	reqline		3250154	1					
ANR	3250195	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	1717:1:42796:42855	3250154	5	True				
ANR	3250196	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3250154	0					
ANR	3250197	IdentifierDeclType	int		3250154	0					
ANR	3250198	Identifier	x		3250154	1					
ANR	3250199	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3250154	2		=			
ANR	3250200	Identifier	x		3250154	0					
ANR	3250201	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3250154	1					
ANR	3250202	Callee	sprintf		3250154	0					
ANR	3250203	Identifier	sprintf		3250154	0					
ANR	3250204	ArgumentList	reqline		3250154	1					
ANR	3250205	Argument	reqline		3250154	0					
ANR	3250206	Identifier	reqline		3250154	0					
ANR	3250207	Argument	"""%s"""		3250154	1					
ANR	3250208	PrimaryExpression	"""%s"""		3250154	0					
ANR	3250209	Argument	escapeGahpString ( job_contact )		3250154	2					
ANR	3250210	CallExpression	escapeGahpString ( job_contact )		3250154	0					
ANR	3250211	Callee	escapeGahpString		3250154	0					
ANR	3250212	Identifier	escapeGahpString		3250154	0					
ANR	3250213	ArgumentList	job_contact		3250154	1					
ANR	3250214	Argument	job_contact		3250154	0					
ANR	3250215	Identifier	job_contact		3250154	0					
ANR	3250216	ExpressionStatement	ASSERT ( x > 0 )	1718:1:42858:42873	3250154	6	True				
ANR	3250217	CallExpression	ASSERT ( x > 0 )		3250154	0					
ANR	3250218	Callee	ASSERT		3250154	0					
ANR	3250219	Identifier	ASSERT		3250154	0					
ANR	3250220	ArgumentList	x > 0		3250154	1					
ANR	3250221	Argument	x > 0		3250154	0					
ANR	3250222	RelationalExpression	x > 0		3250154	0		>			
ANR	3250223	Identifier	x		3250154	0					
ANR	3250224	PrimaryExpression	0		3250154	1					
ANR	3250225	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	1719:1:42876:42909	3250154	7	True				
ANR	3250226	IdentifierDecl	* buf = reqline . c_str ( )		3250154	0					
ANR	3250227	IdentifierDeclType	const char *		3250154	0					
ANR	3250228	Identifier	buf		3250154	1					
ANR	3250229	AssignmentExpression	* buf = reqline . c_str ( )		3250154	2		=			
ANR	3250230	Identifier	buf		3250154	0					
ANR	3250231	CallExpression	reqline . c_str ( )		3250154	1					
ANR	3250232	Callee	reqline . c_str		3250154	0					
ANR	3250233	MemberAccess	reqline . c_str		3250154	0					
ANR	3250234	Identifier	reqline		3250154	0					
ANR	3250235	Identifier	c_str		3250154	1					
ANR	3250236	ArgumentList			3250154	1					
ANR	3250237	IfStatement	"if ( ! is_pending ( command , buf ) )"		3250154	8					
ANR	3250238	Condition	"! is_pending ( command , buf )"	1723:6:43010:43033	3250154	0	True				
ANR	3250239	UnaryOperationExpression	"! is_pending ( command , buf )"		3250154	0					
ANR	3250240	UnaryOperator	!		3250154	0					
ANR	3250241	CallExpression	"is_pending ( command , buf )"		3250154	1					
ANR	3250242	Callee	is_pending		3250154	0					
ANR	3250243	Identifier	is_pending		3250154	0					
ANR	3250244	ArgumentList	command		3250154	1					
ANR	3250245	Argument	command		3250154	0					
ANR	3250246	Identifier	command		3250154	0					
ANR	3250247	Argument	buf		3250154	1					
ANR	3250248	Identifier	buf		3250154	0					
ANR	3250249	CompoundStatement		19:33:545:545	3250154	1					
ANR	3250250	IfStatement	if ( m_mode == results_only )		3250154	0					
ANR	3250251	Condition	m_mode == results_only	1726:7:43142:43163	3250154	0	True				
ANR	3250252	EqualityExpression	m_mode == results_only		3250154	0		==			
ANR	3250253	Identifier	m_mode		3250154	0					
ANR	3250254	Identifier	results_only		3250154	1					
ANR	3250255	CompoundStatement		22:32:675:675	3250154	1					
ANR	3250256	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	1727:3:43172:43211	3250154	0	True				
ANR	3250257	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3250154	0					
ANR	3250258	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	1729:2:43219:43256	3250154	1	True				
ANR	3250259	CallExpression	"now_pending ( command , buf , normal_proxy )"		3250154	0					
ANR	3250260	Callee	now_pending		3250154	0					
ANR	3250261	Identifier	now_pending		3250154	0					
ANR	3250262	ArgumentList	command		3250154	1					
ANR	3250263	Argument	command		3250154	0					
ANR	3250264	Identifier	command		3250154	0					
ANR	3250265	Argument	buf		3250154	1					
ANR	3250266	Identifier	buf		3250154	0					
ANR	3250267	Argument	normal_proxy		3250154	2					
ANR	3250268	Identifier	normal_proxy		3250154	0					
ANR	3250269	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	1735:1:43350:43401	3250154	9	True				
ANR	3250270	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3250154	0					
ANR	3250271	IdentifierDeclType	Gahp_Args *		3250154	0					
ANR	3250272	Identifier	result		3250154	1					
ANR	3250273	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3250154	2		=			
ANR	3250274	Identifier	result		3250154	0					
ANR	3250275	CallExpression	"get_pending_result ( command , buf )"		3250154	1					
ANR	3250276	Callee	get_pending_result		3250154	0					
ANR	3250277	Identifier	get_pending_result		3250154	0					
ANR	3250278	ArgumentList	command		3250154	1					
ANR	3250279	Argument	command		3250154	0					
ANR	3250280	Identifier	command		3250154	0					
ANR	3250281	Argument	buf		3250154	1					
ANR	3250282	Identifier	buf		3250154	0					
ANR	3250283	IfStatement	if ( result )		3250154	10					
ANR	3250284	Condition	result	1736:6:43409:43414	3250154	0	True				
ANR	3250285	Identifier	result		3250154	0					
ANR	3250286	CompoundStatement		37:2:1021:1051	3250154	1					
ANR	3250287	IfStatement	if ( result -> argc != 2 )		3250154	0					
ANR	3250288	Condition	result -> argc != 2	1738:6:43450:43466	3250154	0	True				
ANR	3250289	EqualityExpression	result -> argc != 2		3250154	0		!=			
ANR	3250290	PtrMemberAccess	result -> argc		3250154	0					
ANR	3250291	Identifier	result		3250154	0					
ANR	3250292	Identifier	argc		3250154	1					
ANR	3250293	PrimaryExpression	2		3250154	1					
ANR	3250294	CompoundStatement		34:25:977:977	3250154	1					
ANR	3250295	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	1739:3:43474:43505	3250154	0	True				
ANR	3250296	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3250154	0					
ANR	3250297	Callee	EXCEPT		3250154	0					
ANR	3250298	Identifier	EXCEPT		3250154	0					
ANR	3250299	ArgumentList	"""Bad %s Result"""		3250154	1					
ANR	3250300	Argument	"""Bad %s Result"""		3250154	0					
ANR	3250301	PrimaryExpression	"""Bad %s Result"""		3250154	0					
ANR	3250302	Argument	command		3250154	1					
ANR	3250303	Identifier	command		3250154	0					
ANR	3250304	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	1741:2:43513:43543	3250154	1	True				
ANR	3250305	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3250154	0					
ANR	3250306	IdentifierDeclType	int		3250154	0					
ANR	3250307	Identifier	rc		3250154	1					
ANR	3250308	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3250154	2		=			
ANR	3250309	Identifier	rc		3250154	0					
ANR	3250310	CallExpression	atoi ( result -> argv [ 1 ] )		3250154	1					
ANR	3250311	Callee	atoi		3250154	0					
ANR	3250312	Identifier	atoi		3250154	0					
ANR	3250313	ArgumentList	result -> argv [ 1 ]		3250154	1					
ANR	3250314	Argument	result -> argv [ 1 ]		3250154	0					
ANR	3250315	ArrayIndexing	result -> argv [ 1 ]		3250154	0					
ANR	3250316	PtrMemberAccess	result -> argv		3250154	0					
ANR	3250317	Identifier	result		3250154	0					
ANR	3250318	Identifier	argv		3250154	1					
ANR	3250319	PrimaryExpression	1		3250154	1					
ANR	3250320	Statement	delete	1742:2:43547:43552	3250154	2	True				
ANR	3250321	ExpressionStatement	result	1742:9:43554:43560	3250154	3	True				
ANR	3250322	Identifier	result		3250154	0					
ANR	3250323	ReturnStatement	return rc ;	1743:2:43564:43573	3250154	4	True				
ANR	3250324	Identifier	rc		3250154	0					
ANR	3250325	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3250154	11					
ANR	3250326	Condition	"check_pending_timeout ( command , buf )"	1747:6:43630:43663	3250154	0	True				
ANR	3250327	CallExpression	"check_pending_timeout ( command , buf )"		3250154	0					
ANR	3250328	Callee	check_pending_timeout		3250154	0					
ANR	3250329	Identifier	check_pending_timeout		3250154	0					
ANR	3250330	ArgumentList	command		3250154	1					
ANR	3250331	Argument	command		3250154	0					
ANR	3250332	Identifier	command		3250154	0					
ANR	3250333	Argument	buf		3250154	1					
ANR	3250334	Identifier	buf		3250154	0					
ANR	3250335	CompoundStatement		43:43:1175:1175	3250154	1					
ANR	3250336	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	1749:2:43703:43751	3250154	0	True				
ANR	3250337	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3250154	0					
ANR	3250338	Callee	sprintf		3250154	0					
ANR	3250339	Identifier	sprintf		3250154	0					
ANR	3250340	ArgumentList	error_string		3250154	1					
ANR	3250341	Argument	error_string		3250154	0					
ANR	3250342	Identifier	error_string		3250154	0					
ANR	3250343	Argument	"""%s timed out"""		3250154	1					
ANR	3250344	PrimaryExpression	"""%s timed out"""		3250154	0					
ANR	3250345	Argument	command		3250154	2					
ANR	3250346	Identifier	command		3250154	0					
ANR	3250347	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	1750:2:43755:43790	3250154	1	True				
ANR	3250348	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3250154	0					
ANR	3250349	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	1754:1:43850:43883	3250154	12	True				
ANR	3250350	Identifier	GAHPCLIENT_COMMAND_PENDING		3250154	0					
ANR	3250351	ReturnType	int		3250154	1					
ANR	3250352	Identifier	GahpClient :: globus_gram_client_job_cancel		3250154	2					
ANR	3250353	ParameterList	const char * job_contact		3250154	3					
ANR	3250354	Parameter	const char * job_contact	1704:42:42465:42488	3250154	0	True				
ANR	3250355	ParameterType	const char *		3250154	0					
ANR	3250356	Identifier	job_contact		3250154	1					
ANR	3250357	CFGEntryNode	ENTRY		3250154		True				
ANR	3250358	CFGExitNode	EXIT		3250154		True				
ANR	3250359	Symbol	server		3250154						
ANR	3250360	Symbol	server -> m_commands_supported		3250154						
ANR	3250361	Symbol	escapeGahpString		3250154						
ANR	3250362	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3250154						
ANR	3250363	Symbol	* server		3250154						
ANR	3250364	Symbol	reqline . c_str		3250154						
ANR	3250365	Symbol	results_only		3250154						
ANR	3250366	Symbol	result -> argv		3250154						
ANR	3250367	Symbol	* server -> m_commands_supported		3250154						
ANR	3250368	Symbol	sprintf		3250154						
ANR	3250369	Symbol	result		3250154						
ANR	3250370	Symbol	normal_proxy		3250154						
ANR	3250371	Symbol	* result		3250154						
ANR	3250372	Symbol	server -> m_commands_supported -> contains_anycase		3250154						
ANR	3250373	Symbol	GAHPCLIENT_COMMAND_PENDING		3250154						
ANR	3250374	Symbol	reqline		3250154						
ANR	3250375	Symbol	m_mode		3250154						
ANR	3250376	Symbol	job_contact		3250154						
ANR	3250377	Symbol	* result -> argv		3250154						
ANR	3250378	Symbol	atoi		3250154						
ANR	3250379	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3250154						
ANR	3250380	Symbol	* * result		3250154						
ANR	3250381	Symbol	NULLSTRING		3250154						
ANR	3250382	Symbol	command		3250154						
ANR	3250383	Symbol	get_pending_result		3250154						
ANR	3250384	Symbol	rc		3250154						
ANR	3250385	Symbol	error_string		3250154						
ANR	3250386	Symbol	buf		3250154						
ANR	3250387	Symbol	x		3250154						
ANR	3250388	Symbol	result -> argc		3250154						
ANR	3250389	Symbol	* * server		3250154						
ANR	3250390	Symbol	FALSE		3250154						
ANR	3250391	Symbol	check_pending_timeout		3250154						
ANR	3250392	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3250154						
ANR	3250393	Symbol	is_pending		3250154						
ANR	3250394	Function	GahpClient :: globus_gram_client_job_status	1757:0:43888:45498							
ANR	3250395	FunctionDef	"GahpClient :: globus_gram_client_job_status (const char * job_contact , int * job_status , int * failure_code)"		3250394	0					
ANR	3250396	CompoundStatement		1761:0:44000:45498	3250394	0					
ANR	3250397	Statement	static	1762:1:44003:44008	3250394	0	True				
ANR	3250398	IdentifierDeclStatement	"const char * command = ""GRAM_JOB_STATUS"" ;"	1762:8:44010:44049	3250394	1	True				
ANR	3250399	IdentifierDecl	"* command = ""GRAM_JOB_STATUS"""		3250394	0					
ANR	3250400	IdentifierDeclType	const char *		3250394	0					
ANR	3250401	Identifier	command		3250394	1					
ANR	3250402	AssignmentExpression	"* command = ""GRAM_JOB_STATUS"""		3250394	2		=			
ANR	3250403	Identifier	command		3250394	0					
ANR	3250404	PrimaryExpression	"""GRAM_JOB_STATUS"""		3250394	1					
ANR	3250405	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3250394	2					
ANR	3250406	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	1765:6:44098:44159	3250394	0	True				
ANR	3250407	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3250394	0		==			
ANR	3250408	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3250394	0					
ANR	3250409	Callee	server -> m_commands_supported -> contains_anycase		3250394	0					
ANR	3250410	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3250394	0					
ANR	3250411	PtrMemberAccess	server -> m_commands_supported		3250394	0					
ANR	3250412	Identifier	server		3250394	0					
ANR	3250413	Identifier	m_commands_supported		3250394	1					
ANR	3250414	Identifier	contains_anycase		3250394	1					
ANR	3250415	ArgumentList	command		3250394	1					
ANR	3250416	Argument	command		3250394	0					
ANR	3250417	Identifier	command		3250394	0					
ANR	3250418	Identifier	FALSE		3250394	1					
ANR	3250419	CompoundStatement		5:70:161:161	3250394	1					
ANR	3250420	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	1766:2:44166:44205	3250394	0	True				
ANR	3250421	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3250394	0					
ANR	3250422	IfStatement	if ( ! job_contact )		3250394	3					
ANR	3250423	Condition	! job_contact	1770:5:44243:44254	3250394	0	True				
ANR	3250424	UnaryOperationExpression	! job_contact		3250394	0					
ANR	3250425	UnaryOperator	!		3250394	0					
ANR	3250426	Identifier	job_contact		3250394	1					
ANR	3250427	ExpressionStatement	job_contact = NULLSTRING	1770:19:44257:44279	3250394	1	True				
ANR	3250428	AssignmentExpression	job_contact = NULLSTRING		3250394	0		=			
ANR	3250429	Identifier	job_contact		3250394	0					
ANR	3250430	Identifier	NULLSTRING		3250394	1					
ANR	3250431	IdentifierDeclStatement	std :: string reqline ;	1771:1:44282:44301	3250394	4	True				
ANR	3250432	IdentifierDecl	reqline		3250394	0					
ANR	3250433	IdentifierDeclType	std :: string		3250394	0					
ANR	3250434	Identifier	reqline		3250394	1					
ANR	3250435	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	1772:1:44304:44363	3250394	5	True				
ANR	3250436	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3250394	0					
ANR	3250437	IdentifierDeclType	int		3250394	0					
ANR	3250438	Identifier	x		3250394	1					
ANR	3250439	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3250394	2		=			
ANR	3250440	Identifier	x		3250394	0					
ANR	3250441	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3250394	1					
ANR	3250442	Callee	sprintf		3250394	0					
ANR	3250443	Identifier	sprintf		3250394	0					
ANR	3250444	ArgumentList	reqline		3250394	1					
ANR	3250445	Argument	reqline		3250394	0					
ANR	3250446	Identifier	reqline		3250394	0					
ANR	3250447	Argument	"""%s"""		3250394	1					
ANR	3250448	PrimaryExpression	"""%s"""		3250394	0					
ANR	3250449	Argument	escapeGahpString ( job_contact )		3250394	2					
ANR	3250450	CallExpression	escapeGahpString ( job_contact )		3250394	0					
ANR	3250451	Callee	escapeGahpString		3250394	0					
ANR	3250452	Identifier	escapeGahpString		3250394	0					
ANR	3250453	ArgumentList	job_contact		3250394	1					
ANR	3250454	Argument	job_contact		3250394	0					
ANR	3250455	Identifier	job_contact		3250394	0					
ANR	3250456	ExpressionStatement	ASSERT ( x > 0 )	1773:1:44366:44381	3250394	6	True				
ANR	3250457	CallExpression	ASSERT ( x > 0 )		3250394	0					
ANR	3250458	Callee	ASSERT		3250394	0					
ANR	3250459	Identifier	ASSERT		3250394	0					
ANR	3250460	ArgumentList	x > 0		3250394	1					
ANR	3250461	Argument	x > 0		3250394	0					
ANR	3250462	RelationalExpression	x > 0		3250394	0		>			
ANR	3250463	Identifier	x		3250394	0					
ANR	3250464	PrimaryExpression	0		3250394	1					
ANR	3250465	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	1774:1:44384:44417	3250394	7	True				
ANR	3250466	IdentifierDecl	* buf = reqline . c_str ( )		3250394	0					
ANR	3250467	IdentifierDeclType	const char *		3250394	0					
ANR	3250468	Identifier	buf		3250394	1					
ANR	3250469	AssignmentExpression	* buf = reqline . c_str ( )		3250394	2		=			
ANR	3250470	Identifier	buf		3250394	0					
ANR	3250471	CallExpression	reqline . c_str ( )		3250394	1					
ANR	3250472	Callee	reqline . c_str		3250394	0					
ANR	3250473	MemberAccess	reqline . c_str		3250394	0					
ANR	3250474	Identifier	reqline		3250394	0					
ANR	3250475	Identifier	c_str		3250394	1					
ANR	3250476	ArgumentList			3250394	1					
ANR	3250477	IfStatement	"if ( ! is_pending ( command , buf ) )"		3250394	8					
ANR	3250478	Condition	"! is_pending ( command , buf )"	1779:6:44519:44542	3250394	0	True				
ANR	3250479	UnaryOperationExpression	"! is_pending ( command , buf )"		3250394	0					
ANR	3250480	UnaryOperator	!		3250394	0					
ANR	3250481	CallExpression	"is_pending ( command , buf )"		3250394	1					
ANR	3250482	Callee	is_pending		3250394	0					
ANR	3250483	Identifier	is_pending		3250394	0					
ANR	3250484	ArgumentList	command		3250394	1					
ANR	3250485	Argument	command		3250394	0					
ANR	3250486	Identifier	command		3250394	0					
ANR	3250487	Argument	buf		3250394	1					
ANR	3250488	Identifier	buf		3250394	0					
ANR	3250489	CompoundStatement		19:33:545:545	3250394	1					
ANR	3250490	IfStatement	if ( m_mode == results_only )		3250394	0					
ANR	3250491	Condition	m_mode == results_only	1782:7:44651:44672	3250394	0	True				
ANR	3250492	EqualityExpression	m_mode == results_only		3250394	0		==			
ANR	3250493	Identifier	m_mode		3250394	0					
ANR	3250494	Identifier	results_only		3250394	1					
ANR	3250495	CompoundStatement		22:32:675:675	3250394	1					
ANR	3250496	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	1783:3:44681:44720	3250394	0	True				
ANR	3250497	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3250394	0					
ANR	3250498	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	1785:2:44728:44765	3250394	1	True				
ANR	3250499	CallExpression	"now_pending ( command , buf , normal_proxy )"		3250394	0					
ANR	3250500	Callee	now_pending		3250394	0					
ANR	3250501	Identifier	now_pending		3250394	0					
ANR	3250502	ArgumentList	command		3250394	1					
ANR	3250503	Argument	command		3250394	0					
ANR	3250504	Identifier	command		3250394	0					
ANR	3250505	Argument	buf		3250394	1					
ANR	3250506	Identifier	buf		3250394	0					
ANR	3250507	Argument	normal_proxy		3250394	2					
ANR	3250508	Identifier	normal_proxy		3250394	0					
ANR	3250509	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	1791:1:44859:44910	3250394	9	True				
ANR	3250510	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3250394	0					
ANR	3250511	IdentifierDeclType	Gahp_Args *		3250394	0					
ANR	3250512	Identifier	result		3250394	1					
ANR	3250513	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3250394	2		=			
ANR	3250514	Identifier	result		3250394	0					
ANR	3250515	CallExpression	"get_pending_result ( command , buf )"		3250394	1					
ANR	3250516	Callee	get_pending_result		3250394	0					
ANR	3250517	Identifier	get_pending_result		3250394	0					
ANR	3250518	ArgumentList	command		3250394	1					
ANR	3250519	Argument	command		3250394	0					
ANR	3250520	Identifier	command		3250394	0					
ANR	3250521	Argument	buf		3250394	1					
ANR	3250522	Identifier	buf		3250394	0					
ANR	3250523	IfStatement	if ( result )		3250394	10					
ANR	3250524	Condition	result	1792:6:44918:44923	3250394	0	True				
ANR	3250525	Identifier	result		3250394	0					
ANR	3250526	CompoundStatement		37:2:1021:1051	3250394	1					
ANR	3250527	IfStatement	if ( result -> argc != 4 )		3250394	0					
ANR	3250528	Condition	result -> argc != 4	1794:6:44959:44975	3250394	0	True				
ANR	3250529	EqualityExpression	result -> argc != 4		3250394	0		!=			
ANR	3250530	PtrMemberAccess	result -> argc		3250394	0					
ANR	3250531	Identifier	result		3250394	0					
ANR	3250532	Identifier	argc		3250394	1					
ANR	3250533	PrimaryExpression	4		3250394	1					
ANR	3250534	CompoundStatement		34:25:977:977	3250394	1					
ANR	3250535	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	1795:3:44983:45014	3250394	0	True				
ANR	3250536	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3250394	0					
ANR	3250537	Callee	EXCEPT		3250394	0					
ANR	3250538	Identifier	EXCEPT		3250394	0					
ANR	3250539	ArgumentList	"""Bad %s Result"""		3250394	1					
ANR	3250540	Argument	"""Bad %s Result"""		3250394	0					
ANR	3250541	PrimaryExpression	"""Bad %s Result"""		3250394	0					
ANR	3250542	Argument	command		3250394	1					
ANR	3250543	Identifier	command		3250394	0					
ANR	3250544	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	1797:2:45022:45052	3250394	1	True				
ANR	3250545	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3250394	0					
ANR	3250546	IdentifierDeclType	int		3250394	0					
ANR	3250547	Identifier	rc		3250394	1					
ANR	3250548	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3250394	2		=			
ANR	3250549	Identifier	rc		3250394	0					
ANR	3250550	CallExpression	atoi ( result -> argv [ 1 ] )		3250394	1					
ANR	3250551	Callee	atoi		3250394	0					
ANR	3250552	Identifier	atoi		3250394	0					
ANR	3250553	ArgumentList	result -> argv [ 1 ]		3250394	1					
ANR	3250554	Argument	result -> argv [ 1 ]		3250394	0					
ANR	3250555	ArrayIndexing	result -> argv [ 1 ]		3250394	0					
ANR	3250556	PtrMemberAccess	result -> argv		3250394	0					
ANR	3250557	Identifier	result		3250394	0					
ANR	3250558	Identifier	argv		3250394	1					
ANR	3250559	PrimaryExpression	1		3250394	1					
ANR	3250560	ExpressionStatement	* failure_code = atoi ( result -> argv [ 2 ] )	1798:2:45056:45093	3250394	2	True				
ANR	3250561	AssignmentExpression	* failure_code = atoi ( result -> argv [ 2 ] )		3250394	0		=			
ANR	3250562	UnaryOperationExpression	* failure_code		3250394	0					
ANR	3250563	UnaryOperator	*		3250394	0					
ANR	3250564	Identifier	failure_code		3250394	1					
ANR	3250565	CallExpression	atoi ( result -> argv [ 2 ] )		3250394	1					
ANR	3250566	Callee	atoi		3250394	0					
ANR	3250567	Identifier	atoi		3250394	0					
ANR	3250568	ArgumentList	result -> argv [ 2 ]		3250394	1					
ANR	3250569	Argument	result -> argv [ 2 ]		3250394	0					
ANR	3250570	ArrayIndexing	result -> argv [ 2 ]		3250394	0					
ANR	3250571	PtrMemberAccess	result -> argv		3250394	0					
ANR	3250572	Identifier	result		3250394	0					
ANR	3250573	Identifier	argv		3250394	1					
ANR	3250574	PrimaryExpression	2		3250394	1					
ANR	3250575	IfStatement	if ( rc == 0 )		3250394	3					
ANR	3250576	Condition	rc == 0	1799:7:45102:45108	3250394	0	True				
ANR	3250577	EqualityExpression	rc == 0		3250394	0		==			
ANR	3250578	Identifier	rc		3250394	0					
ANR	3250579	PrimaryExpression	0		3250394	1					
ANR	3250580	CompoundStatement		39:17:1111:1111	3250394	1					
ANR	3250581	ExpressionStatement	* job_status = atoi ( result -> argv [ 3 ] )	1800:3:45117:45152	3250394	0	True				
ANR	3250582	AssignmentExpression	* job_status = atoi ( result -> argv [ 3 ] )		3250394	0		=			
ANR	3250583	UnaryOperationExpression	* job_status		3250394	0					
ANR	3250584	UnaryOperator	*		3250394	0					
ANR	3250585	Identifier	job_status		3250394	1					
ANR	3250586	CallExpression	atoi ( result -> argv [ 3 ] )		3250394	1					
ANR	3250587	Callee	atoi		3250394	0					
ANR	3250588	Identifier	atoi		3250394	0					
ANR	3250589	ArgumentList	result -> argv [ 3 ]		3250394	1					
ANR	3250590	Argument	result -> argv [ 3 ]		3250394	0					
ANR	3250591	ArrayIndexing	result -> argv [ 3 ]		3250394	0					
ANR	3250592	PtrMemberAccess	result -> argv		3250394	0					
ANR	3250593	Identifier	result		3250394	0					
ANR	3250594	Identifier	argv		3250394	1					
ANR	3250595	PrimaryExpression	3		3250394	1					
ANR	3250596	Statement	delete	1802:2:45160:45165	3250394	4	True				
ANR	3250597	ExpressionStatement	result	1802:9:45167:45173	3250394	5	True				
ANR	3250598	Identifier	result		3250394	0					
ANR	3250599	ReturnStatement	return rc ;	1803:2:45177:45186	3250394	6	True				
ANR	3250600	Identifier	rc		3250394	0					
ANR	3250601	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3250394	11					
ANR	3250602	Condition	"check_pending_timeout ( command , buf )"	1807:6:45243:45276	3250394	0	True				
ANR	3250603	CallExpression	"check_pending_timeout ( command , buf )"		3250394	0					
ANR	3250604	Callee	check_pending_timeout		3250394	0					
ANR	3250605	Identifier	check_pending_timeout		3250394	0					
ANR	3250606	ArgumentList	command		3250394	1					
ANR	3250607	Argument	command		3250394	0					
ANR	3250608	Identifier	command		3250394	0					
ANR	3250609	Argument	buf		3250394	1					
ANR	3250610	Identifier	buf		3250394	0					
ANR	3250611	CompoundStatement		47:43:1279:1279	3250394	1					
ANR	3250612	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	1809:2:45316:45364	3250394	0	True				
ANR	3250613	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3250394	0					
ANR	3250614	Callee	sprintf		3250394	0					
ANR	3250615	Identifier	sprintf		3250394	0					
ANR	3250616	ArgumentList	error_string		3250394	1					
ANR	3250617	Argument	error_string		3250394	0					
ANR	3250618	Identifier	error_string		3250394	0					
ANR	3250619	Argument	"""%s timed out"""		3250394	1					
ANR	3250620	PrimaryExpression	"""%s timed out"""		3250394	0					
ANR	3250621	Argument	command		3250394	2					
ANR	3250622	Identifier	command		3250394	0					
ANR	3250623	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	1810:2:45368:45403	3250394	1	True				
ANR	3250624	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3250394	0					
ANR	3250625	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	1814:1:45463:45496	3250394	12	True				
ANR	3250626	Identifier	GAHPCLIENT_COMMAND_PENDING		3250394	0					
ANR	3250627	ReturnType	int		3250394	1					
ANR	3250628	Identifier	GahpClient :: globus_gram_client_job_status		3250394	2					
ANR	3250629	ParameterList	"const char * job_contact , int * job_status , int * failure_code"		3250394	3					
ANR	3250630	Parameter	const char * job_contact	1758:42:43934:43957	3250394	0	True				
ANR	3250631	ParameterType	const char *		3250394	0					
ANR	3250632	Identifier	job_contact		3250394	1					
ANR	3250633	Parameter	int * job_status	1759:1:43961:43976	3250394	1	True				
ANR	3250634	ParameterType	int *		3250394	0					
ANR	3250635	Identifier	job_status		3250394	1					
ANR	3250636	Parameter	int * failure_code	1760:1:43980:43997	3250394	2	True				
ANR	3250637	ParameterType	int *		3250394	0					
ANR	3250638	Identifier	failure_code		3250394	1					
ANR	3250639	CFGEntryNode	ENTRY		3250394		True				
ANR	3250640	CFGExitNode	EXIT		3250394		True				
ANR	3250641	Symbol	server		3250394						
ANR	3250642	Symbol	server -> m_commands_supported		3250394						
ANR	3250643	Symbol	escapeGahpString		3250394						
ANR	3250644	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3250394						
ANR	3250645	Symbol	* server		3250394						
ANR	3250646	Symbol	reqline . c_str		3250394						
ANR	3250647	Symbol	results_only		3250394						
ANR	3250648	Symbol	result -> argv		3250394						
ANR	3250649	Symbol	* server -> m_commands_supported		3250394						
ANR	3250650	Symbol	sprintf		3250394						
ANR	3250651	Symbol	result		3250394						
ANR	3250652	Symbol	normal_proxy		3250394						
ANR	3250653	Symbol	* result		3250394						
ANR	3250654	Symbol	server -> m_commands_supported -> contains_anycase		3250394						
ANR	3250655	Symbol	GAHPCLIENT_COMMAND_PENDING		3250394						
ANR	3250656	Symbol	reqline		3250394						
ANR	3250657	Symbol	m_mode		3250394						
ANR	3250658	Symbol	* failure_code		3250394						
ANR	3250659	Symbol	job_contact		3250394						
ANR	3250660	Symbol	* result -> argv		3250394						
ANR	3250661	Symbol	atoi		3250394						
ANR	3250662	Symbol	failure_code		3250394						
ANR	3250663	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3250394						
ANR	3250664	Symbol	* * result		3250394						
ANR	3250665	Symbol	* job_status		3250394						
ANR	3250666	Symbol	NULLSTRING		3250394						
ANR	3250667	Symbol	command		3250394						
ANR	3250668	Symbol	get_pending_result		3250394						
ANR	3250669	Symbol	job_status		3250394						
ANR	3250670	Symbol	rc		3250394						
ANR	3250671	Symbol	error_string		3250394						
ANR	3250672	Symbol	buf		3250394						
ANR	3250673	Symbol	x		3250394						
ANR	3250674	Symbol	result -> argc		3250394						
ANR	3250675	Symbol	* * server		3250394						
ANR	3250676	Symbol	FALSE		3250394						
ANR	3250677	Symbol	check_pending_timeout		3250394						
ANR	3250678	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3250394						
ANR	3250679	Symbol	is_pending		3250394						
ANR	3250680	Function	GahpClient :: globus_gram_client_job_signal	1818:0:45502:47353							
ANR	3250681	FunctionDef	"GahpClient :: globus_gram_client_job_signal (const char * job_contact , globus_gram_protocol_job_signal_t signal , const char * signal_arg , int * job_status , int * failure_code)"		3250680	0					
ANR	3250682	CompoundStatement		1824:0:45683:47353	3250680	0					
ANR	3250683	Statement	static	1825:1:45686:45691	3250680	0	True				
ANR	3250684	IdentifierDeclStatement	"const char * command = ""GRAM_JOB_SIGNAL"" ;"	1825:8:45693:45732	3250680	1	True				
ANR	3250685	IdentifierDecl	"* command = ""GRAM_JOB_SIGNAL"""		3250680	0					
ANR	3250686	IdentifierDeclType	const char *		3250680	0					
ANR	3250687	Identifier	command		3250680	1					
ANR	3250688	AssignmentExpression	"* command = ""GRAM_JOB_SIGNAL"""		3250680	2		=			
ANR	3250689	Identifier	command		3250680	0					
ANR	3250690	PrimaryExpression	"""GRAM_JOB_SIGNAL"""		3250680	1					
ANR	3250691	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3250680	2					
ANR	3250692	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	1828:6:45781:45842	3250680	0	True				
ANR	3250693	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3250680	0		==			
ANR	3250694	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3250680	0					
ANR	3250695	Callee	server -> m_commands_supported -> contains_anycase		3250680	0					
ANR	3250696	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3250680	0					
ANR	3250697	PtrMemberAccess	server -> m_commands_supported		3250680	0					
ANR	3250698	Identifier	server		3250680	0					
ANR	3250699	Identifier	m_commands_supported		3250680	1					
ANR	3250700	Identifier	contains_anycase		3250680	1					
ANR	3250701	ArgumentList	command		3250680	1					
ANR	3250702	Argument	command		3250680	0					
ANR	3250703	Identifier	command		3250680	0					
ANR	3250704	Identifier	FALSE		3250680	1					
ANR	3250705	CompoundStatement		5:70:161:161	3250680	1					
ANR	3250706	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	1829:2:45849:45888	3250680	0	True				
ANR	3250707	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3250680	0					
ANR	3250708	IfStatement	if ( ! job_contact )		3250680	3					
ANR	3250709	Condition	! job_contact	1833:5:45926:45937	3250680	0	True				
ANR	3250710	UnaryOperationExpression	! job_contact		3250680	0					
ANR	3250711	UnaryOperator	!		3250680	0					
ANR	3250712	Identifier	job_contact		3250680	1					
ANR	3250713	ExpressionStatement	job_contact = NULLSTRING	1833:19:45940:45962	3250680	1	True				
ANR	3250714	AssignmentExpression	job_contact = NULLSTRING		3250680	0		=			
ANR	3250715	Identifier	job_contact		3250680	0					
ANR	3250716	Identifier	NULLSTRING		3250680	1					
ANR	3250717	IfStatement	if ( ! signal_arg )		3250680	4					
ANR	3250718	Condition	! signal_arg	1834:5:45969:45979	3250680	0	True				
ANR	3250719	UnaryOperationExpression	! signal_arg		3250680	0					
ANR	3250720	UnaryOperator	!		3250680	0					
ANR	3250721	Identifier	signal_arg		3250680	1					
ANR	3250722	ExpressionStatement	signal_arg = NULLSTRING	1834:18:45982:46003	3250680	1	True				
ANR	3250723	AssignmentExpression	signal_arg = NULLSTRING		3250680	0		=			
ANR	3250724	Identifier	signal_arg		3250680	0					
ANR	3250725	Identifier	NULLSTRING		3250680	1					
ANR	3250726	IdentifierDeclStatement	std :: string reqline ;	1835:1:46006:46025	3250680	5	True				
ANR	3250727	IdentifierDecl	reqline		3250680	0					
ANR	3250728	IdentifierDeclType	std :: string		3250680	0					
ANR	3250729	Identifier	reqline		3250680	1					
ANR	3250730	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( job_contact ) ) ;	1836:1:46028:46080	3250680	6	True				
ANR	3250731	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( job_contact ) )		3250680	0					
ANR	3250732	IdentifierDeclType	char *		3250680	0					
ANR	3250733	Identifier	esc1		3250680	1					
ANR	3250734	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( job_contact ) )		3250680	2		=			
ANR	3250735	Identifier	esc1		3250680	0					
ANR	3250736	CallExpression	strdup ( escapeGahpString ( job_contact ) )		3250680	1					
ANR	3250737	Callee	strdup		3250680	0					
ANR	3250738	Identifier	strdup		3250680	0					
ANR	3250739	ArgumentList	escapeGahpString ( job_contact )		3250680	1					
ANR	3250740	Argument	escapeGahpString ( job_contact )		3250680	0					
ANR	3250741	CallExpression	escapeGahpString ( job_contact )		3250680	0					
ANR	3250742	Callee	escapeGahpString		3250680	0					
ANR	3250743	Identifier	escapeGahpString		3250680	0					
ANR	3250744	ArgumentList	job_contact		3250680	1					
ANR	3250745	Argument	job_contact		3250680	0					
ANR	3250746	Identifier	job_contact		3250680	0					
ANR	3250747	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( signal_arg ) ) ;	1837:1:46083:46134	3250680	7	True				
ANR	3250748	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( signal_arg ) )		3250680	0					
ANR	3250749	IdentifierDeclType	char *		3250680	0					
ANR	3250750	Identifier	esc2		3250680	1					
ANR	3250751	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( signal_arg ) )		3250680	2		=			
ANR	3250752	Identifier	esc2		3250680	0					
ANR	3250753	CallExpression	strdup ( escapeGahpString ( signal_arg ) )		3250680	1					
ANR	3250754	Callee	strdup		3250680	0					
ANR	3250755	Identifier	strdup		3250680	0					
ANR	3250756	ArgumentList	escapeGahpString ( signal_arg )		3250680	1					
ANR	3250757	Argument	escapeGahpString ( signal_arg )		3250680	0					
ANR	3250758	CallExpression	escapeGahpString ( signal_arg )		3250680	0					
ANR	3250759	Callee	escapeGahpString		3250680	0					
ANR	3250760	Identifier	escapeGahpString		3250680	0					
ANR	3250761	ArgumentList	signal_arg		3250680	1					
ANR	3250762	Argument	signal_arg		3250680	0					
ANR	3250763	Identifier	signal_arg		3250680	0					
ANR	3250764	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d %s"" , esc1 , signal , esc2 ) ;"	1838:1:46137:46189	3250680	8	True				
ANR	3250765	IdentifierDecl	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , signal , esc2 )"		3250680	0					
ANR	3250766	IdentifierDeclType	int		3250680	0					
ANR	3250767	Identifier	x		3250680	1					
ANR	3250768	AssignmentExpression	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , signal , esc2 )"		3250680	2		=			
ANR	3250769	Identifier	x		3250680	0					
ANR	3250770	CallExpression	"sprintf ( reqline , ""%s %d %s"" , esc1 , signal , esc2 )"		3250680	1					
ANR	3250771	Callee	sprintf		3250680	0					
ANR	3250772	Identifier	sprintf		3250680	0					
ANR	3250773	ArgumentList	reqline		3250680	1					
ANR	3250774	Argument	reqline		3250680	0					
ANR	3250775	Identifier	reqline		3250680	0					
ANR	3250776	Argument	"""%s %d %s"""		3250680	1					
ANR	3250777	PrimaryExpression	"""%s %d %s"""		3250680	0					
ANR	3250778	Argument	esc1		3250680	2					
ANR	3250779	Identifier	esc1		3250680	0					
ANR	3250780	Argument	signal		3250680	3					
ANR	3250781	Identifier	signal		3250680	0					
ANR	3250782	Argument	esc2		3250680	4					
ANR	3250783	Identifier	esc2		3250680	0					
ANR	3250784	ExpressionStatement	free ( esc1 )	1839:1:46192:46204	3250680	9	True				
ANR	3250785	CallExpression	free ( esc1 )		3250680	0					
ANR	3250786	Callee	free		3250680	0					
ANR	3250787	Identifier	free		3250680	0					
ANR	3250788	ArgumentList	esc1		3250680	1					
ANR	3250789	Argument	esc1		3250680	0					
ANR	3250790	Identifier	esc1		3250680	0					
ANR	3250791	ExpressionStatement	free ( esc2 )	1840:1:46207:46219	3250680	10	True				
ANR	3250792	CallExpression	free ( esc2 )		3250680	0					
ANR	3250793	Callee	free		3250680	0					
ANR	3250794	Identifier	free		3250680	0					
ANR	3250795	ArgumentList	esc2		3250680	1					
ANR	3250796	Argument	esc2		3250680	0					
ANR	3250797	Identifier	esc2		3250680	0					
ANR	3250798	ExpressionStatement	ASSERT ( x > 0 )	1841:1:46222:46237	3250680	11	True				
ANR	3250799	CallExpression	ASSERT ( x > 0 )		3250680	0					
ANR	3250800	Callee	ASSERT		3250680	0					
ANR	3250801	Identifier	ASSERT		3250680	0					
ANR	3250802	ArgumentList	x > 0		3250680	1					
ANR	3250803	Argument	x > 0		3250680	0					
ANR	3250804	RelationalExpression	x > 0		3250680	0		>			
ANR	3250805	Identifier	x		3250680	0					
ANR	3250806	PrimaryExpression	0		3250680	1					
ANR	3250807	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	1842:1:46240:46273	3250680	12	True				
ANR	3250808	IdentifierDecl	* buf = reqline . c_str ( )		3250680	0					
ANR	3250809	IdentifierDeclType	const char *		3250680	0					
ANR	3250810	Identifier	buf		3250680	1					
ANR	3250811	AssignmentExpression	* buf = reqline . c_str ( )		3250680	2		=			
ANR	3250812	Identifier	buf		3250680	0					
ANR	3250813	CallExpression	reqline . c_str ( )		3250680	1					
ANR	3250814	Callee	reqline . c_str		3250680	0					
ANR	3250815	MemberAccess	reqline . c_str		3250680	0					
ANR	3250816	Identifier	reqline		3250680	0					
ANR	3250817	Identifier	c_str		3250680	1					
ANR	3250818	ArgumentList			3250680	1					
ANR	3250819	IfStatement	"if ( ! is_pending ( command , buf ) )"		3250680	13					
ANR	3250820	Condition	"! is_pending ( command , buf )"	1846:6:46374:46397	3250680	0	True				
ANR	3250821	UnaryOperationExpression	"! is_pending ( command , buf )"		3250680	0					
ANR	3250822	UnaryOperator	!		3250680	0					
ANR	3250823	CallExpression	"is_pending ( command , buf )"		3250680	1					
ANR	3250824	Callee	is_pending		3250680	0					
ANR	3250825	Identifier	is_pending		3250680	0					
ANR	3250826	ArgumentList	command		3250680	1					
ANR	3250827	Argument	command		3250680	0					
ANR	3250828	Identifier	command		3250680	0					
ANR	3250829	Argument	buf		3250680	1					
ANR	3250830	Identifier	buf		3250680	0					
ANR	3250831	CompoundStatement		23:33:717:717	3250680	1					
ANR	3250832	IfStatement	if ( m_mode == results_only )		3250680	0					
ANR	3250833	Condition	m_mode == results_only	1849:7:46506:46527	3250680	0	True				
ANR	3250834	EqualityExpression	m_mode == results_only		3250680	0		==			
ANR	3250835	Identifier	m_mode		3250680	0					
ANR	3250836	Identifier	results_only		3250680	1					
ANR	3250837	CompoundStatement		26:32:847:847	3250680	1					
ANR	3250838	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	1850:3:46536:46575	3250680	0	True				
ANR	3250839	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3250680	0					
ANR	3250840	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	1852:2:46583:46620	3250680	1	True				
ANR	3250841	CallExpression	"now_pending ( command , buf , normal_proxy )"		3250680	0					
ANR	3250842	Callee	now_pending		3250680	0					
ANR	3250843	Identifier	now_pending		3250680	0					
ANR	3250844	ArgumentList	command		3250680	1					
ANR	3250845	Argument	command		3250680	0					
ANR	3250846	Identifier	command		3250680	0					
ANR	3250847	Argument	buf		3250680	1					
ANR	3250848	Identifier	buf		3250680	0					
ANR	3250849	Argument	normal_proxy		3250680	2					
ANR	3250850	Identifier	normal_proxy		3250680	0					
ANR	3250851	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	1858:1:46714:46765	3250680	14	True				
ANR	3250852	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3250680	0					
ANR	3250853	IdentifierDeclType	Gahp_Args *		3250680	0					
ANR	3250854	Identifier	result		3250680	1					
ANR	3250855	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3250680	2		=			
ANR	3250856	Identifier	result		3250680	0					
ANR	3250857	CallExpression	"get_pending_result ( command , buf )"		3250680	1					
ANR	3250858	Callee	get_pending_result		3250680	0					
ANR	3250859	Identifier	get_pending_result		3250680	0					
ANR	3250860	ArgumentList	command		3250680	1					
ANR	3250861	Argument	command		3250680	0					
ANR	3250862	Identifier	command		3250680	0					
ANR	3250863	Argument	buf		3250680	1					
ANR	3250864	Identifier	buf		3250680	0					
ANR	3250865	IfStatement	if ( result )		3250680	15					
ANR	3250866	Condition	result	1859:6:46773:46778	3250680	0	True				
ANR	3250867	Identifier	result		3250680	0					
ANR	3250868	CompoundStatement		41:2:1193:1223	3250680	1					
ANR	3250869	IfStatement	if ( result -> argc != 4 )		3250680	0					
ANR	3250870	Condition	result -> argc != 4	1861:6:46814:46830	3250680	0	True				
ANR	3250871	EqualityExpression	result -> argc != 4		3250680	0		!=			
ANR	3250872	PtrMemberAccess	result -> argc		3250680	0					
ANR	3250873	Identifier	result		3250680	0					
ANR	3250874	Identifier	argc		3250680	1					
ANR	3250875	PrimaryExpression	4		3250680	1					
ANR	3250876	CompoundStatement		38:25:1149:1149	3250680	1					
ANR	3250877	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	1862:3:46838:46869	3250680	0	True				
ANR	3250878	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3250680	0					
ANR	3250879	Callee	EXCEPT		3250680	0					
ANR	3250880	Identifier	EXCEPT		3250680	0					
ANR	3250881	ArgumentList	"""Bad %s Result"""		3250680	1					
ANR	3250882	Argument	"""Bad %s Result"""		3250680	0					
ANR	3250883	PrimaryExpression	"""Bad %s Result"""		3250680	0					
ANR	3250884	Argument	command		3250680	1					
ANR	3250885	Identifier	command		3250680	0					
ANR	3250886	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	1864:2:46877:46907	3250680	1	True				
ANR	3250887	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3250680	0					
ANR	3250888	IdentifierDeclType	int		3250680	0					
ANR	3250889	Identifier	rc		3250680	1					
ANR	3250890	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3250680	2		=			
ANR	3250891	Identifier	rc		3250680	0					
ANR	3250892	CallExpression	atoi ( result -> argv [ 1 ] )		3250680	1					
ANR	3250893	Callee	atoi		3250680	0					
ANR	3250894	Identifier	atoi		3250680	0					
ANR	3250895	ArgumentList	result -> argv [ 1 ]		3250680	1					
ANR	3250896	Argument	result -> argv [ 1 ]		3250680	0					
ANR	3250897	ArrayIndexing	result -> argv [ 1 ]		3250680	0					
ANR	3250898	PtrMemberAccess	result -> argv		3250680	0					
ANR	3250899	Identifier	result		3250680	0					
ANR	3250900	Identifier	argv		3250680	1					
ANR	3250901	PrimaryExpression	1		3250680	1					
ANR	3250902	ExpressionStatement	* failure_code = atoi ( result -> argv [ 2 ] )	1865:2:46911:46948	3250680	2	True				
ANR	3250903	AssignmentExpression	* failure_code = atoi ( result -> argv [ 2 ] )		3250680	0		=			
ANR	3250904	UnaryOperationExpression	* failure_code		3250680	0					
ANR	3250905	UnaryOperator	*		3250680	0					
ANR	3250906	Identifier	failure_code		3250680	1					
ANR	3250907	CallExpression	atoi ( result -> argv [ 2 ] )		3250680	1					
ANR	3250908	Callee	atoi		3250680	0					
ANR	3250909	Identifier	atoi		3250680	0					
ANR	3250910	ArgumentList	result -> argv [ 2 ]		3250680	1					
ANR	3250911	Argument	result -> argv [ 2 ]		3250680	0					
ANR	3250912	ArrayIndexing	result -> argv [ 2 ]		3250680	0					
ANR	3250913	PtrMemberAccess	result -> argv		3250680	0					
ANR	3250914	Identifier	result		3250680	0					
ANR	3250915	Identifier	argv		3250680	1					
ANR	3250916	PrimaryExpression	2		3250680	1					
ANR	3250917	IfStatement	if ( rc == 0 )		3250680	3					
ANR	3250918	Condition	rc == 0	1866:7:46957:46963	3250680	0	True				
ANR	3250919	EqualityExpression	rc == 0		3250680	0		==			
ANR	3250920	Identifier	rc		3250680	0					
ANR	3250921	PrimaryExpression	0		3250680	1					
ANR	3250922	CompoundStatement		43:17:1283:1283	3250680	1					
ANR	3250923	ExpressionStatement	* job_status = atoi ( result -> argv [ 3 ] )	1867:3:46972:47007	3250680	0	True				
ANR	3250924	AssignmentExpression	* job_status = atoi ( result -> argv [ 3 ] )		3250680	0		=			
ANR	3250925	UnaryOperationExpression	* job_status		3250680	0					
ANR	3250926	UnaryOperator	*		3250680	0					
ANR	3250927	Identifier	job_status		3250680	1					
ANR	3250928	CallExpression	atoi ( result -> argv [ 3 ] )		3250680	1					
ANR	3250929	Callee	atoi		3250680	0					
ANR	3250930	Identifier	atoi		3250680	0					
ANR	3250931	ArgumentList	result -> argv [ 3 ]		3250680	1					
ANR	3250932	Argument	result -> argv [ 3 ]		3250680	0					
ANR	3250933	ArrayIndexing	result -> argv [ 3 ]		3250680	0					
ANR	3250934	PtrMemberAccess	result -> argv		3250680	0					
ANR	3250935	Identifier	result		3250680	0					
ANR	3250936	Identifier	argv		3250680	1					
ANR	3250937	PrimaryExpression	3		3250680	1					
ANR	3250938	Statement	delete	1869:2:47015:47020	3250680	4	True				
ANR	3250939	ExpressionStatement	result	1869:9:47022:47028	3250680	5	True				
ANR	3250940	Identifier	result		3250680	0					
ANR	3250941	ReturnStatement	return rc ;	1870:2:47032:47041	3250680	6	True				
ANR	3250942	Identifier	rc		3250680	0					
ANR	3250943	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3250680	16					
ANR	3250944	Condition	"check_pending_timeout ( command , buf )"	1874:6:47098:47131	3250680	0	True				
ANR	3250945	CallExpression	"check_pending_timeout ( command , buf )"		3250680	0					
ANR	3250946	Callee	check_pending_timeout		3250680	0					
ANR	3250947	Identifier	check_pending_timeout		3250680	0					
ANR	3250948	ArgumentList	command		3250680	1					
ANR	3250949	Argument	command		3250680	0					
ANR	3250950	Identifier	command		3250680	0					
ANR	3250951	Argument	buf		3250680	1					
ANR	3250952	Identifier	buf		3250680	0					
ANR	3250953	CompoundStatement		51:43:1451:1451	3250680	1					
ANR	3250954	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	1876:2:47171:47219	3250680	0	True				
ANR	3250955	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3250680	0					
ANR	3250956	Callee	sprintf		3250680	0					
ANR	3250957	Identifier	sprintf		3250680	0					
ANR	3250958	ArgumentList	error_string		3250680	1					
ANR	3250959	Argument	error_string		3250680	0					
ANR	3250960	Identifier	error_string		3250680	0					
ANR	3250961	Argument	"""%s timed out"""		3250680	1					
ANR	3250962	PrimaryExpression	"""%s timed out"""		3250680	0					
ANR	3250963	Argument	command		3250680	2					
ANR	3250964	Identifier	command		3250680	0					
ANR	3250965	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	1877:2:47223:47258	3250680	1	True				
ANR	3250966	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3250680	0					
ANR	3250967	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	1881:1:47318:47351	3250680	17	True				
ANR	3250968	Identifier	GAHPCLIENT_COMMAND_PENDING		3250680	0					
ANR	3250969	ReturnType	int		3250680	1					
ANR	3250970	Identifier	GahpClient :: globus_gram_client_job_signal		3250680	2					
ANR	3250971	ParameterList	"const char * job_contact , globus_gram_protocol_job_signal_t signal , const char * signal_arg , int * job_status , int * failure_code"		3250680	3					
ANR	3250972	Parameter	const char * job_contact	1819:42:45548:45571	3250680	0	True				
ANR	3250973	ParameterType	const char *		3250680	0					
ANR	3250974	Identifier	job_contact		3250680	1					
ANR	3250975	Parameter	globus_gram_protocol_job_signal_t signal	1820:1:45575:45614	3250680	1	True				
ANR	3250976	ParameterType	globus_gram_protocol_job_signal_t		3250680	0					
ANR	3250977	Identifier	signal		3250680	1					
ANR	3250978	Parameter	const char * signal_arg	1821:1:45618:45640	3250680	2	True				
ANR	3250979	ParameterType	const char *		3250680	0					
ANR	3250980	Identifier	signal_arg		3250680	1					
ANR	3250981	Parameter	int * job_status	1822:1:45644:45659	3250680	3	True				
ANR	3250982	ParameterType	int *		3250680	0					
ANR	3250983	Identifier	job_status		3250680	1					
ANR	3250984	Parameter	int * failure_code	1823:1:45663:45680	3250680	4	True				
ANR	3250985	ParameterType	int *		3250680	0					
ANR	3250986	Identifier	failure_code		3250680	1					
ANR	3250987	CFGEntryNode	ENTRY		3250680		True				
ANR	3250988	CFGExitNode	EXIT		3250680		True				
ANR	3250989	Symbol	server -> m_commands_supported		3250680						
ANR	3250990	Symbol	server		3250680						
ANR	3250991	Symbol	escapeGahpString		3250680						
ANR	3250992	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3250680						
ANR	3250993	Symbol	* server		3250680						
ANR	3250994	Symbol	signal_arg		3250680						
ANR	3250995	Symbol	reqline . c_str		3250680						
ANR	3250996	Symbol	results_only		3250680						
ANR	3250997	Symbol	result -> argv		3250680						
ANR	3250998	Symbol	* server -> m_commands_supported		3250680						
ANR	3250999	Symbol	sprintf		3250680						
ANR	3251000	Symbol	result		3250680						
ANR	3251001	Symbol	normal_proxy		3250680						
ANR	3251002	Symbol	* result		3250680						
ANR	3251003	Symbol	server -> m_commands_supported -> contains_anycase		3250680						
ANR	3251004	Symbol	GAHPCLIENT_COMMAND_PENDING		3250680						
ANR	3251005	Symbol	reqline		3250680						
ANR	3251006	Symbol	m_mode		3250680						
ANR	3251007	Symbol	* failure_code		3250680						
ANR	3251008	Symbol	job_contact		3250680						
ANR	3251009	Symbol	signal		3250680						
ANR	3251010	Symbol	* result -> argv		3250680						
ANR	3251011	Symbol	atoi		3250680						
ANR	3251012	Symbol	failure_code		3250680						
ANR	3251013	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3250680						
ANR	3251014	Symbol	* * result		3250680						
ANR	3251015	Symbol	* job_status		3250680						
ANR	3251016	Symbol	NULLSTRING		3250680						
ANR	3251017	Symbol	command		3250680						
ANR	3251018	Symbol	get_pending_result		3250680						
ANR	3251019	Symbol	job_status		3250680						
ANR	3251020	Symbol	rc		3250680						
ANR	3251021	Symbol	error_string		3250680						
ANR	3251022	Symbol	esc2		3250680						
ANR	3251023	Symbol	buf		3250680						
ANR	3251024	Symbol	esc1		3250680						
ANR	3251025	Symbol	x		3250680						
ANR	3251026	Symbol	result -> argc		3250680						
ANR	3251027	Symbol	FALSE		3250680						
ANR	3251028	Symbol	* * server		3250680						
ANR	3251029	Symbol	strdup		3250680						
ANR	3251030	Symbol	check_pending_timeout		3250680						
ANR	3251031	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3250680						
ANR	3251032	Symbol	is_pending		3250680						
ANR	3251033	DeclStmt									
ANR	3251034	Decl							const char	const char *	command
ANR	3251035	DeclStmt									
ANR	3251036	Decl							std :: string	std :: string	reqline
ANR	3251037	DeclStmt									
ANR	3251038	Decl							char	char *	esc1
ANR	3251039	DeclStmt									
ANR	3251040	Decl							char	char *	esc2
ANR	3251041	DeclStmt									
ANR	3251042	Decl							int	int	x
ANR	3251043	DeclStmt									
ANR	3251044	Decl							const char	const char *	buf
ANR	3251045	DeclStmt									
ANR	3251046	Decl							Gahp_Args	Gahp_Args *	result
ANR	3251047	DeclStmt									
ANR	3251048	Decl							int	int	rc
ANR	3251049	Function	GahpClient :: globus_gram_client_ping	1952:0:49238:50712							
ANR	3251050	FunctionDef	GahpClient :: globus_gram_client_ping (const char * resource_contact)		3251049	0					
ANR	3251051	CompoundStatement		1954:0:49310:50712	3251049	0					
ANR	3251052	Statement	static	1955:1:49313:49318	3251049	0	True				
ANR	3251053	IdentifierDeclStatement	"const char * command = ""GRAM_PING"" ;"	1955:8:49320:49353	3251049	1	True				
ANR	3251054	IdentifierDecl	"* command = ""GRAM_PING"""		3251049	0					
ANR	3251055	IdentifierDeclType	const char *		3251049	0					
ANR	3251056	Identifier	command		3251049	1					
ANR	3251057	AssignmentExpression	"* command = ""GRAM_PING"""		3251049	2		=			
ANR	3251058	Identifier	command		3251049	0					
ANR	3251059	PrimaryExpression	"""GRAM_PING"""		3251049	1					
ANR	3251060	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3251049	2					
ANR	3251061	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	1958:6:49402:49463	3251049	0	True				
ANR	3251062	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3251049	0		==			
ANR	3251063	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3251049	0					
ANR	3251064	Callee	server -> m_commands_supported -> contains_anycase		3251049	0					
ANR	3251065	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3251049	0					
ANR	3251066	PtrMemberAccess	server -> m_commands_supported		3251049	0					
ANR	3251067	Identifier	server		3251049	0					
ANR	3251068	Identifier	m_commands_supported		3251049	1					
ANR	3251069	Identifier	contains_anycase		3251049	1					
ANR	3251070	ArgumentList	command		3251049	1					
ANR	3251071	Argument	command		3251049	0					
ANR	3251072	Identifier	command		3251049	0					
ANR	3251073	Identifier	FALSE		3251049	1					
ANR	3251074	CompoundStatement		5:70:155:155	3251049	1					
ANR	3251075	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	1959:2:49470:49509	3251049	0	True				
ANR	3251076	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3251049	0					
ANR	3251077	IfStatement	if ( ! resource_contact )		3251049	3					
ANR	3251078	Condition	! resource_contact	1963:5:49547:49563	3251049	0	True				
ANR	3251079	UnaryOperationExpression	! resource_contact		3251049	0					
ANR	3251080	UnaryOperator	!		3251049	0					
ANR	3251081	Identifier	resource_contact		3251049	1					
ANR	3251082	ExpressionStatement	resource_contact = NULLSTRING	1963:24:49566:49593	3251049	1	True				
ANR	3251083	AssignmentExpression	resource_contact = NULLSTRING		3251049	0		=			
ANR	3251084	Identifier	resource_contact		3251049	0					
ANR	3251085	Identifier	NULLSTRING		3251049	1					
ANR	3251086	IdentifierDeclStatement	std :: string reqline ;	1964:1:49596:49615	3251049	4	True				
ANR	3251087	IdentifierDecl	reqline		3251049	0					
ANR	3251088	IdentifierDeclType	std :: string		3251049	0					
ANR	3251089	Identifier	reqline		3251049	1					
ANR	3251090	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) ) ;"	1965:1:49618:49682	3251049	5	True				
ANR	3251091	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3251049	0					
ANR	3251092	IdentifierDeclType	int		3251049	0					
ANR	3251093	Identifier	x		3251049	1					
ANR	3251094	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3251049	2		=			
ANR	3251095	Identifier	x		3251049	0					
ANR	3251096	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3251049	1					
ANR	3251097	Callee	sprintf		3251049	0					
ANR	3251098	Identifier	sprintf		3251049	0					
ANR	3251099	ArgumentList	reqline		3251049	1					
ANR	3251100	Argument	reqline		3251049	0					
ANR	3251101	Identifier	reqline		3251049	0					
ANR	3251102	Argument	"""%s"""		3251049	1					
ANR	3251103	PrimaryExpression	"""%s"""		3251049	0					
ANR	3251104	Argument	escapeGahpString ( resource_contact )		3251049	2					
ANR	3251105	CallExpression	escapeGahpString ( resource_contact )		3251049	0					
ANR	3251106	Callee	escapeGahpString		3251049	0					
ANR	3251107	Identifier	escapeGahpString		3251049	0					
ANR	3251108	ArgumentList	resource_contact		3251049	1					
ANR	3251109	Argument	resource_contact		3251049	0					
ANR	3251110	Identifier	resource_contact		3251049	0					
ANR	3251111	ExpressionStatement	ASSERT ( x > 0 )	1966:1:49685:49700	3251049	6	True				
ANR	3251112	CallExpression	ASSERT ( x > 0 )		3251049	0					
ANR	3251113	Callee	ASSERT		3251049	0					
ANR	3251114	Identifier	ASSERT		3251049	0					
ANR	3251115	ArgumentList	x > 0		3251049	1					
ANR	3251116	Argument	x > 0		3251049	0					
ANR	3251117	RelationalExpression	x > 0		3251049	0		>			
ANR	3251118	Identifier	x		3251049	0					
ANR	3251119	PrimaryExpression	0		3251049	1					
ANR	3251120	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	1967:1:49703:49736	3251049	7	True				
ANR	3251121	IdentifierDecl	* buf = reqline . c_str ( )		3251049	0					
ANR	3251122	IdentifierDeclType	const char *		3251049	0					
ANR	3251123	Identifier	buf		3251049	1					
ANR	3251124	AssignmentExpression	* buf = reqline . c_str ( )		3251049	2		=			
ANR	3251125	Identifier	buf		3251049	0					
ANR	3251126	CallExpression	reqline . c_str ( )		3251049	1					
ANR	3251127	Callee	reqline . c_str		3251049	0					
ANR	3251128	MemberAccess	reqline . c_str		3251049	0					
ANR	3251129	Identifier	reqline		3251049	0					
ANR	3251130	Identifier	c_str		3251049	1					
ANR	3251131	ArgumentList			3251049	1					
ANR	3251132	IfStatement	"if ( ! is_pending ( command , buf ) )"		3251049	8					
ANR	3251133	Condition	"! is_pending ( command , buf )"	1971:6:49837:49860	3251049	0	True				
ANR	3251134	UnaryOperationExpression	"! is_pending ( command , buf )"		3251049	0					
ANR	3251135	UnaryOperator	!		3251049	0					
ANR	3251136	CallExpression	"is_pending ( command , buf )"		3251049	1					
ANR	3251137	Callee	is_pending		3251049	0					
ANR	3251138	Identifier	is_pending		3251049	0					
ANR	3251139	ArgumentList	command		3251049	1					
ANR	3251140	Argument	command		3251049	0					
ANR	3251141	Identifier	command		3251049	0					
ANR	3251142	Argument	buf		3251049	1					
ANR	3251143	Identifier	buf		3251049	0					
ANR	3251144	CompoundStatement		18:33:553:553	3251049	1					
ANR	3251145	IfStatement	if ( m_mode == results_only )		3251049	0					
ANR	3251146	Condition	m_mode == results_only	1974:7:49969:49990	3251049	0	True				
ANR	3251147	EqualityExpression	m_mode == results_only		3251049	0		==			
ANR	3251148	Identifier	m_mode		3251049	0					
ANR	3251149	Identifier	results_only		3251049	1					
ANR	3251150	CompoundStatement		21:32:683:683	3251049	1					
ANR	3251151	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	1975:3:49999:50038	3251049	0	True				
ANR	3251152	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3251049	0					
ANR	3251153	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	1977:2:50046:50083	3251049	1	True				
ANR	3251154	CallExpression	"now_pending ( command , buf , normal_proxy )"		3251049	0					
ANR	3251155	Callee	now_pending		3251049	0					
ANR	3251156	Identifier	now_pending		3251049	0					
ANR	3251157	ArgumentList	command		3251049	1					
ANR	3251158	Argument	command		3251049	0					
ANR	3251159	Identifier	command		3251049	0					
ANR	3251160	Argument	buf		3251049	1					
ANR	3251161	Identifier	buf		3251049	0					
ANR	3251162	Argument	normal_proxy		3251049	2					
ANR	3251163	Identifier	normal_proxy		3251049	0					
ANR	3251164	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	1983:1:50177:50228	3251049	9	True				
ANR	3251165	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3251049	0					
ANR	3251166	IdentifierDeclType	Gahp_Args *		3251049	0					
ANR	3251167	Identifier	result		3251049	1					
ANR	3251168	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3251049	2		=			
ANR	3251169	Identifier	result		3251049	0					
ANR	3251170	CallExpression	"get_pending_result ( command , buf )"		3251049	1					
ANR	3251171	Callee	get_pending_result		3251049	0					
ANR	3251172	Identifier	get_pending_result		3251049	0					
ANR	3251173	ArgumentList	command		3251049	1					
ANR	3251174	Argument	command		3251049	0					
ANR	3251175	Identifier	command		3251049	0					
ANR	3251176	Argument	buf		3251049	1					
ANR	3251177	Identifier	buf		3251049	0					
ANR	3251178	IfStatement	if ( result )		3251049	10					
ANR	3251179	Condition	result	1984:6:50236:50241	3251049	0	True				
ANR	3251180	Identifier	result		3251049	0					
ANR	3251181	CompoundStatement		36:2:1029:1059	3251049	1					
ANR	3251182	IfStatement	if ( result -> argc != 2 )		3251049	0					
ANR	3251183	Condition	result -> argc != 2	1986:6:50277:50293	3251049	0	True				
ANR	3251184	EqualityExpression	result -> argc != 2		3251049	0		!=			
ANR	3251185	PtrMemberAccess	result -> argc		3251049	0					
ANR	3251186	Identifier	result		3251049	0					
ANR	3251187	Identifier	argc		3251049	1					
ANR	3251188	PrimaryExpression	2		3251049	1					
ANR	3251189	CompoundStatement		33:25:985:985	3251049	1					
ANR	3251190	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	1987:3:50301:50332	3251049	0	True				
ANR	3251191	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3251049	0					
ANR	3251192	Callee	EXCEPT		3251049	0					
ANR	3251193	Identifier	EXCEPT		3251049	0					
ANR	3251194	ArgumentList	"""Bad %s Result"""		3251049	1					
ANR	3251195	Argument	"""Bad %s Result"""		3251049	0					
ANR	3251196	PrimaryExpression	"""Bad %s Result"""		3251049	0					
ANR	3251197	Argument	command		3251049	1					
ANR	3251198	Identifier	command		3251049	0					
ANR	3251199	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	1989:2:50340:50370	3251049	1	True				
ANR	3251200	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3251049	0					
ANR	3251201	IdentifierDeclType	int		3251049	0					
ANR	3251202	Identifier	rc		3251049	1					
ANR	3251203	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3251049	2		=			
ANR	3251204	Identifier	rc		3251049	0					
ANR	3251205	CallExpression	atoi ( result -> argv [ 1 ] )		3251049	1					
ANR	3251206	Callee	atoi		3251049	0					
ANR	3251207	Identifier	atoi		3251049	0					
ANR	3251208	ArgumentList	result -> argv [ 1 ]		3251049	1					
ANR	3251209	Argument	result -> argv [ 1 ]		3251049	0					
ANR	3251210	ArrayIndexing	result -> argv [ 1 ]		3251049	0					
ANR	3251211	PtrMemberAccess	result -> argv		3251049	0					
ANR	3251212	Identifier	result		3251049	0					
ANR	3251213	Identifier	argv		3251049	1					
ANR	3251214	PrimaryExpression	1		3251049	1					
ANR	3251215	Statement	delete	1990:2:50374:50379	3251049	2	True				
ANR	3251216	ExpressionStatement	result	1990:9:50381:50387	3251049	3	True				
ANR	3251217	Identifier	result		3251049	0					
ANR	3251218	ReturnStatement	return rc ;	1991:2:50391:50400	3251049	4	True				
ANR	3251219	Identifier	rc		3251049	0					
ANR	3251220	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3251049	11					
ANR	3251221	Condition	"check_pending_timeout ( command , buf )"	1995:6:50457:50490	3251049	0	True				
ANR	3251222	CallExpression	"check_pending_timeout ( command , buf )"		3251049	0					
ANR	3251223	Callee	check_pending_timeout		3251049	0					
ANR	3251224	Identifier	check_pending_timeout		3251049	0					
ANR	3251225	ArgumentList	command		3251049	1					
ANR	3251226	Argument	command		3251049	0					
ANR	3251227	Identifier	command		3251049	0					
ANR	3251228	Argument	buf		3251049	1					
ANR	3251229	Identifier	buf		3251049	0					
ANR	3251230	CompoundStatement		42:43:1183:1183	3251049	1					
ANR	3251231	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	1997:2:50530:50578	3251049	0	True				
ANR	3251232	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3251049	0					
ANR	3251233	Callee	sprintf		3251049	0					
ANR	3251234	Identifier	sprintf		3251049	0					
ANR	3251235	ArgumentList	error_string		3251049	1					
ANR	3251236	Argument	error_string		3251049	0					
ANR	3251237	Identifier	error_string		3251049	0					
ANR	3251238	Argument	"""%s timed out"""		3251049	1					
ANR	3251239	PrimaryExpression	"""%s timed out"""		3251049	0					
ANR	3251240	Argument	command		3251049	2					
ANR	3251241	Identifier	command		3251049	0					
ANR	3251242	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	1998:2:50582:50617	3251049	1	True				
ANR	3251243	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3251049	0					
ANR	3251244	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2002:1:50677:50710	3251049	12	True				
ANR	3251245	Identifier	GAHPCLIENT_COMMAND_PENDING		3251049	0					
ANR	3251246	ReturnType	int		3251049	1					
ANR	3251247	Identifier	GahpClient :: globus_gram_client_ping		3251049	2					
ANR	3251248	ParameterList	const char * resource_contact		3251049	3					
ANR	3251249	Parameter	const char * resource_contact	1953:36:49279:49307	3251049	0	True				
ANR	3251250	ParameterType	const char *		3251049	0					
ANR	3251251	Identifier	resource_contact		3251049	1					
ANR	3251252	CFGEntryNode	ENTRY		3251049		True				
ANR	3251253	CFGExitNode	EXIT		3251049		True				
ANR	3251254	Symbol	server -> m_commands_supported		3251049						
ANR	3251255	Symbol	server		3251049						
ANR	3251256	Symbol	escapeGahpString		3251049						
ANR	3251257	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3251049						
ANR	3251258	Symbol	resource_contact		3251049						
ANR	3251259	Symbol	* server		3251049						
ANR	3251260	Symbol	reqline . c_str		3251049						
ANR	3251261	Symbol	results_only		3251049						
ANR	3251262	Symbol	result -> argv		3251049						
ANR	3251263	Symbol	* server -> m_commands_supported		3251049						
ANR	3251264	Symbol	sprintf		3251049						
ANR	3251265	Symbol	result		3251049						
ANR	3251266	Symbol	normal_proxy		3251049						
ANR	3251267	Symbol	* result		3251049						
ANR	3251268	Symbol	server -> m_commands_supported -> contains_anycase		3251049						
ANR	3251269	Symbol	GAHPCLIENT_COMMAND_PENDING		3251049						
ANR	3251270	Symbol	reqline		3251049						
ANR	3251271	Symbol	m_mode		3251049						
ANR	3251272	Symbol	* result -> argv		3251049						
ANR	3251273	Symbol	atoi		3251049						
ANR	3251274	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3251049						
ANR	3251275	Symbol	* * result		3251049						
ANR	3251276	Symbol	NULLSTRING		3251049						
ANR	3251277	Symbol	command		3251049						
ANR	3251278	Symbol	get_pending_result		3251049						
ANR	3251279	Symbol	rc		3251049						
ANR	3251280	Symbol	error_string		3251049						
ANR	3251281	Symbol	buf		3251049						
ANR	3251282	Symbol	x		3251049						
ANR	3251283	Symbol	result -> argc		3251049						
ANR	3251284	Symbol	FALSE		3251049						
ANR	3251285	Symbol	* * server		3251049						
ANR	3251286	Symbol	check_pending_timeout		3251049						
ANR	3251287	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3251049						
ANR	3251288	Symbol	is_pending		3251049						
ANR	3251289	Function	GahpClient :: globus_gram_client_job_refresh_credentials	2005:0:50715:52250							
ANR	3251290	FunctionDef	"GahpClient :: globus_gram_client_job_refresh_credentials (const char * job_contact , int limited_deleg)"		3251289	0					
ANR	3251291	CompoundStatement		2008:0:50834:52250	3251289	0					
ANR	3251292	Statement	static	2009:1:50837:50842	3251289	0	True				
ANR	3251293	IdentifierDeclStatement	"const char * command = ""GRAM_JOB_REFRESH_PROXY"" ;"	2009:8:50844:50890	3251289	1	True				
ANR	3251294	IdentifierDecl	"* command = ""GRAM_JOB_REFRESH_PROXY"""		3251289	0					
ANR	3251295	IdentifierDeclType	const char *		3251289	0					
ANR	3251296	Identifier	command		3251289	1					
ANR	3251297	AssignmentExpression	"* command = ""GRAM_JOB_REFRESH_PROXY"""		3251289	2		=			
ANR	3251298	Identifier	command		3251289	0					
ANR	3251299	PrimaryExpression	"""GRAM_JOB_REFRESH_PROXY"""		3251289	1					
ANR	3251300	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3251289	2					
ANR	3251301	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2012:6:50939:51000	3251289	0	True				
ANR	3251302	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3251289	0		==			
ANR	3251303	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3251289	0					
ANR	3251304	Callee	server -> m_commands_supported -> contains_anycase		3251289	0					
ANR	3251305	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3251289	0					
ANR	3251306	PtrMemberAccess	server -> m_commands_supported		3251289	0					
ANR	3251307	Identifier	server		3251289	0					
ANR	3251308	Identifier	m_commands_supported		3251289	1					
ANR	3251309	Identifier	contains_anycase		3251289	1					
ANR	3251310	ArgumentList	command		3251289	1					
ANR	3251311	Argument	command		3251289	0					
ANR	3251312	Identifier	command		3251289	0					
ANR	3251313	Identifier	FALSE		3251289	1					
ANR	3251314	CompoundStatement		5:70:168:168	3251289	1					
ANR	3251315	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2013:2:51007:51046	3251289	0	True				
ANR	3251316	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3251289	0					
ANR	3251317	IfStatement	if ( ! job_contact )		3251289	3					
ANR	3251318	Condition	! job_contact	2017:5:51084:51095	3251289	0	True				
ANR	3251319	UnaryOperationExpression	! job_contact		3251289	0					
ANR	3251320	UnaryOperator	!		3251289	0					
ANR	3251321	Identifier	job_contact		3251289	1					
ANR	3251322	ExpressionStatement	job_contact = NULLSTRING	2017:19:51098:51120	3251289	1	True				
ANR	3251323	AssignmentExpression	job_contact = NULLSTRING		3251289	0		=			
ANR	3251324	Identifier	job_contact		3251289	0					
ANR	3251325	Identifier	NULLSTRING		3251289	1					
ANR	3251326	IdentifierDeclStatement	std :: string reqline ;	2018:1:51123:51142	3251289	4	True				
ANR	3251327	IdentifierDecl	reqline		3251289	0					
ANR	3251328	IdentifierDeclType	std :: string		3251289	0					
ANR	3251329	Identifier	reqline		3251289	1					
ANR	3251330	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d"" , escapeGahpString ( job_contact ) , limited_deleg ) ;"	2019:1:51145:51221	3251289	5	True				
ANR	3251331	IdentifierDecl	"x = sprintf ( reqline , ""%s %d"" , escapeGahpString ( job_contact ) , limited_deleg )"		3251289	0					
ANR	3251332	IdentifierDeclType	int		3251289	0					
ANR	3251333	Identifier	x		3251289	1					
ANR	3251334	AssignmentExpression	"x = sprintf ( reqline , ""%s %d"" , escapeGahpString ( job_contact ) , limited_deleg )"		3251289	2		=			
ANR	3251335	Identifier	x		3251289	0					
ANR	3251336	CallExpression	"sprintf ( reqline , ""%s %d"" , escapeGahpString ( job_contact ) , limited_deleg )"		3251289	1					
ANR	3251337	Callee	sprintf		3251289	0					
ANR	3251338	Identifier	sprintf		3251289	0					
ANR	3251339	ArgumentList	reqline		3251289	1					
ANR	3251340	Argument	reqline		3251289	0					
ANR	3251341	Identifier	reqline		3251289	0					
ANR	3251342	Argument	"""%s %d"""		3251289	1					
ANR	3251343	PrimaryExpression	"""%s %d"""		3251289	0					
ANR	3251344	Argument	escapeGahpString ( job_contact )		3251289	2					
ANR	3251345	CallExpression	escapeGahpString ( job_contact )		3251289	0					
ANR	3251346	Callee	escapeGahpString		3251289	0					
ANR	3251347	Identifier	escapeGahpString		3251289	0					
ANR	3251348	ArgumentList	job_contact		3251289	1					
ANR	3251349	Argument	job_contact		3251289	0					
ANR	3251350	Identifier	job_contact		3251289	0					
ANR	3251351	Argument	limited_deleg		3251289	3					
ANR	3251352	Identifier	limited_deleg		3251289	0					
ANR	3251353	ExpressionStatement	ASSERT ( x > 0 )	2020:1:51224:51239	3251289	6	True				
ANR	3251354	CallExpression	ASSERT ( x > 0 )		3251289	0					
ANR	3251355	Callee	ASSERT		3251289	0					
ANR	3251356	Identifier	ASSERT		3251289	0					
ANR	3251357	ArgumentList	x > 0		3251289	1					
ANR	3251358	Argument	x > 0		3251289	0					
ANR	3251359	RelationalExpression	x > 0		3251289	0		>			
ANR	3251360	Identifier	x		3251289	0					
ANR	3251361	PrimaryExpression	0		3251289	1					
ANR	3251362	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	2021:1:51242:51275	3251289	7	True				
ANR	3251363	IdentifierDecl	* buf = reqline . c_str ( )		3251289	0					
ANR	3251364	IdentifierDeclType	const char *		3251289	0					
ANR	3251365	Identifier	buf		3251289	1					
ANR	3251366	AssignmentExpression	* buf = reqline . c_str ( )		3251289	2		=			
ANR	3251367	Identifier	buf		3251289	0					
ANR	3251368	CallExpression	reqline . c_str ( )		3251289	1					
ANR	3251369	Callee	reqline . c_str		3251289	0					
ANR	3251370	MemberAccess	reqline . c_str		3251289	0					
ANR	3251371	Identifier	reqline		3251289	0					
ANR	3251372	Identifier	c_str		3251289	1					
ANR	3251373	ArgumentList			3251289	1					
ANR	3251374	IfStatement	"if ( ! is_pending ( command , buf ) )"		3251289	8					
ANR	3251375	Condition	"! is_pending ( command , buf )"	2025:6:51376:51399	3251289	0	True				
ANR	3251376	UnaryOperationExpression	"! is_pending ( command , buf )"		3251289	0					
ANR	3251377	UnaryOperator	!		3251289	0					
ANR	3251378	CallExpression	"is_pending ( command , buf )"		3251289	1					
ANR	3251379	Callee	is_pending		3251289	0					
ANR	3251380	Identifier	is_pending		3251289	0					
ANR	3251381	ArgumentList	command		3251289	1					
ANR	3251382	Argument	command		3251289	0					
ANR	3251383	Identifier	command		3251289	0					
ANR	3251384	Argument	buf		3251289	1					
ANR	3251385	Identifier	buf		3251289	0					
ANR	3251386	CompoundStatement		18:33:568:568	3251289	1					
ANR	3251387	IfStatement	if ( m_mode == results_only )		3251289	0					
ANR	3251388	Condition	m_mode == results_only	2028:7:51508:51529	3251289	0	True				
ANR	3251389	EqualityExpression	m_mode == results_only		3251289	0		==			
ANR	3251390	Identifier	m_mode		3251289	0					
ANR	3251391	Identifier	results_only		3251289	1					
ANR	3251392	CompoundStatement		21:32:698:698	3251289	1					
ANR	3251393	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2029:3:51538:51577	3251289	0	True				
ANR	3251394	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3251289	0					
ANR	3251395	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	2031:2:51585:51621	3251289	1	True				
ANR	3251396	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3251289	0					
ANR	3251397	Callee	now_pending		3251289	0					
ANR	3251398	Identifier	now_pending		3251289	0					
ANR	3251399	ArgumentList	command		3251289	1					
ANR	3251400	Argument	command		3251289	0					
ANR	3251401	Identifier	command		3251289	0					
ANR	3251402	Argument	buf		3251289	1					
ANR	3251403	Identifier	buf		3251289	0					
ANR	3251404	Argument	deleg_proxy		3251289	2					
ANR	3251405	Identifier	deleg_proxy		3251289	0					
ANR	3251406	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	2037:1:51715:51766	3251289	9	True				
ANR	3251407	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3251289	0					
ANR	3251408	IdentifierDeclType	Gahp_Args *		3251289	0					
ANR	3251409	Identifier	result		3251289	1					
ANR	3251410	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3251289	2		=			
ANR	3251411	Identifier	result		3251289	0					
ANR	3251412	CallExpression	"get_pending_result ( command , buf )"		3251289	1					
ANR	3251413	Callee	get_pending_result		3251289	0					
ANR	3251414	Identifier	get_pending_result		3251289	0					
ANR	3251415	ArgumentList	command		3251289	1					
ANR	3251416	Argument	command		3251289	0					
ANR	3251417	Identifier	command		3251289	0					
ANR	3251418	Argument	buf		3251289	1					
ANR	3251419	Identifier	buf		3251289	0					
ANR	3251420	IfStatement	if ( result )		3251289	10					
ANR	3251421	Condition	result	2038:6:51774:51779	3251289	0	True				
ANR	3251422	Identifier	result		3251289	0					
ANR	3251423	CompoundStatement		36:2:1043:1073	3251289	1					
ANR	3251424	IfStatement	if ( result -> argc != 2 )		3251289	0					
ANR	3251425	Condition	result -> argc != 2	2040:6:51815:51831	3251289	0	True				
ANR	3251426	EqualityExpression	result -> argc != 2		3251289	0		!=			
ANR	3251427	PtrMemberAccess	result -> argc		3251289	0					
ANR	3251428	Identifier	result		3251289	0					
ANR	3251429	Identifier	argc		3251289	1					
ANR	3251430	PrimaryExpression	2		3251289	1					
ANR	3251431	CompoundStatement		33:25:999:999	3251289	1					
ANR	3251432	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	2041:3:51839:51870	3251289	0	True				
ANR	3251433	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3251289	0					
ANR	3251434	Callee	EXCEPT		3251289	0					
ANR	3251435	Identifier	EXCEPT		3251289	0					
ANR	3251436	ArgumentList	"""Bad %s Result"""		3251289	1					
ANR	3251437	Argument	"""Bad %s Result"""		3251289	0					
ANR	3251438	PrimaryExpression	"""Bad %s Result"""		3251289	0					
ANR	3251439	Argument	command		3251289	1					
ANR	3251440	Identifier	command		3251289	0					
ANR	3251441	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	2043:2:51878:51908	3251289	1	True				
ANR	3251442	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3251289	0					
ANR	3251443	IdentifierDeclType	int		3251289	0					
ANR	3251444	Identifier	rc		3251289	1					
ANR	3251445	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3251289	2		=			
ANR	3251446	Identifier	rc		3251289	0					
ANR	3251447	CallExpression	atoi ( result -> argv [ 1 ] )		3251289	1					
ANR	3251448	Callee	atoi		3251289	0					
ANR	3251449	Identifier	atoi		3251289	0					
ANR	3251450	ArgumentList	result -> argv [ 1 ]		3251289	1					
ANR	3251451	Argument	result -> argv [ 1 ]		3251289	0					
ANR	3251452	ArrayIndexing	result -> argv [ 1 ]		3251289	0					
ANR	3251453	PtrMemberAccess	result -> argv		3251289	0					
ANR	3251454	Identifier	result		3251289	0					
ANR	3251455	Identifier	argv		3251289	1					
ANR	3251456	PrimaryExpression	1		3251289	1					
ANR	3251457	Statement	delete	2044:2:51912:51917	3251289	2	True				
ANR	3251458	ExpressionStatement	result	2044:9:51919:51925	3251289	3	True				
ANR	3251459	Identifier	result		3251289	0					
ANR	3251460	ReturnStatement	return rc ;	2045:2:51929:51938	3251289	4	True				
ANR	3251461	Identifier	rc		3251289	0					
ANR	3251462	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3251289	11					
ANR	3251463	Condition	"check_pending_timeout ( command , buf )"	2049:6:51995:52028	3251289	0	True				
ANR	3251464	CallExpression	"check_pending_timeout ( command , buf )"		3251289	0					
ANR	3251465	Callee	check_pending_timeout		3251289	0					
ANR	3251466	Identifier	check_pending_timeout		3251289	0					
ANR	3251467	ArgumentList	command		3251289	1					
ANR	3251468	Argument	command		3251289	0					
ANR	3251469	Identifier	command		3251289	0					
ANR	3251470	Argument	buf		3251289	1					
ANR	3251471	Identifier	buf		3251289	0					
ANR	3251472	CompoundStatement		42:43:1197:1197	3251289	1					
ANR	3251473	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	2051:2:52068:52116	3251289	0	True				
ANR	3251474	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3251289	0					
ANR	3251475	Callee	sprintf		3251289	0					
ANR	3251476	Identifier	sprintf		3251289	0					
ANR	3251477	ArgumentList	error_string		3251289	1					
ANR	3251478	Argument	error_string		3251289	0					
ANR	3251479	Identifier	error_string		3251289	0					
ANR	3251480	Argument	"""%s timed out"""		3251289	1					
ANR	3251481	PrimaryExpression	"""%s timed out"""		3251289	0					
ANR	3251482	Argument	command		3251289	2					
ANR	3251483	Identifier	command		3251289	0					
ANR	3251484	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	2052:2:52120:52155	3251289	1	True				
ANR	3251485	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3251289	0					
ANR	3251486	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2056:1:52215:52248	3251289	12	True				
ANR	3251487	Identifier	GAHPCLIENT_COMMAND_PENDING		3251289	0					
ANR	3251488	ReturnType	int		3251289	1					
ANR	3251489	Identifier	GahpClient :: globus_gram_client_job_refresh_credentials		3251289	2					
ANR	3251490	ParameterList	"const char * job_contact , int limited_deleg"		3251289	3					
ANR	3251491	Parameter	const char * job_contact	2006:55:50774:50796	3251289	0	True				
ANR	3251492	ParameterType	const char *		3251289	0					
ANR	3251493	Identifier	job_contact		3251289	1					
ANR	3251494	Parameter	int limited_deleg	2007:16:50815:50831	3251289	1	True				
ANR	3251495	ParameterType	int		3251289	0					
ANR	3251496	Identifier	limited_deleg		3251289	1					
ANR	3251497	CFGEntryNode	ENTRY		3251289		True				
ANR	3251498	CFGExitNode	EXIT		3251289		True				
ANR	3251499	Symbol	server		3251289						
ANR	3251500	Symbol	server -> m_commands_supported		3251289						
ANR	3251501	Symbol	escapeGahpString		3251289						
ANR	3251502	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3251289						
ANR	3251503	Symbol	* server		3251289						
ANR	3251504	Symbol	reqline . c_str		3251289						
ANR	3251505	Symbol	results_only		3251289						
ANR	3251506	Symbol	result -> argv		3251289						
ANR	3251507	Symbol	* server -> m_commands_supported		3251289						
ANR	3251508	Symbol	sprintf		3251289						
ANR	3251509	Symbol	result		3251289						
ANR	3251510	Symbol	* result		3251289						
ANR	3251511	Symbol	server -> m_commands_supported -> contains_anycase		3251289						
ANR	3251512	Symbol	GAHPCLIENT_COMMAND_PENDING		3251289						
ANR	3251513	Symbol	reqline		3251289						
ANR	3251514	Symbol	m_mode		3251289						
ANR	3251515	Symbol	job_contact		3251289						
ANR	3251516	Symbol	* result -> argv		3251289						
ANR	3251517	Symbol	atoi		3251289						
ANR	3251518	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3251289						
ANR	3251519	Symbol	* * result		3251289						
ANR	3251520	Symbol	NULLSTRING		3251289						
ANR	3251521	Symbol	command		3251289						
ANR	3251522	Symbol	limited_deleg		3251289						
ANR	3251523	Symbol	get_pending_result		3251289						
ANR	3251524	Symbol	rc		3251289						
ANR	3251525	Symbol	error_string		3251289						
ANR	3251526	Symbol	buf		3251289						
ANR	3251527	Symbol	x		3251289						
ANR	3251528	Symbol	result -> argc		3251289						
ANR	3251529	Symbol	FALSE		3251289						
ANR	3251530	Symbol	* * server		3251289						
ANR	3251531	Symbol	check_pending_timeout		3251289						
ANR	3251532	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3251289						
ANR	3251533	Symbol	is_pending		3251289						
ANR	3251534	Symbol	deleg_proxy		3251289						
ANR	3251535	Function	GahpClient :: globus_gram_client_get_jobmanager_version	2059:0:52253:53762							
ANR	3251536	FunctionDef	GahpClient :: globus_gram_client_get_jobmanager_version (const char * resource_contact)		3251535	0					
ANR	3251537	CompoundStatement		2061:0:52343:53762	3251535	0					
ANR	3251538	Statement	static	2062:1:52346:52351	3251535	0	True				
ANR	3251539	IdentifierDeclStatement	"const char * command = ""GRAM_GET_JOBMANAGER_VERSION"" ;"	2062:8:52353:52404	3251535	1	True				
ANR	3251540	IdentifierDecl	"* command = ""GRAM_GET_JOBMANAGER_VERSION"""		3251535	0					
ANR	3251541	IdentifierDeclType	const char *		3251535	0					
ANR	3251542	Identifier	command		3251535	1					
ANR	3251543	AssignmentExpression	"* command = ""GRAM_GET_JOBMANAGER_VERSION"""		3251535	2		=			
ANR	3251544	Identifier	command		3251535	0					
ANR	3251545	PrimaryExpression	"""GRAM_GET_JOBMANAGER_VERSION"""		3251535	1					
ANR	3251546	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3251535	2					
ANR	3251547	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2065:6:52453:52514	3251535	0	True				
ANR	3251548	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3251535	0		==			
ANR	3251549	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3251535	0					
ANR	3251550	Callee	server -> m_commands_supported -> contains_anycase		3251535	0					
ANR	3251551	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3251535	0					
ANR	3251552	PtrMemberAccess	server -> m_commands_supported		3251535	0					
ANR	3251553	Identifier	server		3251535	0					
ANR	3251554	Identifier	m_commands_supported		3251535	1					
ANR	3251555	Identifier	contains_anycase		3251535	1					
ANR	3251556	ArgumentList	command		3251535	1					
ANR	3251557	Argument	command		3251535	0					
ANR	3251558	Identifier	command		3251535	0					
ANR	3251559	Identifier	FALSE		3251535	1					
ANR	3251560	CompoundStatement		5:70:173:173	3251535	1					
ANR	3251561	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2066:2:52521:52560	3251535	0	True				
ANR	3251562	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3251535	0					
ANR	3251563	IfStatement	if ( ! resource_contact )		3251535	3					
ANR	3251564	Condition	! resource_contact	2070:5:52598:52614	3251535	0	True				
ANR	3251565	UnaryOperationExpression	! resource_contact		3251535	0					
ANR	3251566	UnaryOperator	!		3251535	0					
ANR	3251567	Identifier	resource_contact		3251535	1					
ANR	3251568	ExpressionStatement	resource_contact = NULLSTRING	2070:24:52617:52644	3251535	1	True				
ANR	3251569	AssignmentExpression	resource_contact = NULLSTRING		3251535	0		=			
ANR	3251570	Identifier	resource_contact		3251535	0					
ANR	3251571	Identifier	NULLSTRING		3251535	1					
ANR	3251572	IdentifierDeclStatement	std :: string reqline ;	2071:1:52647:52666	3251535	4	True				
ANR	3251573	IdentifierDecl	reqline		3251535	0					
ANR	3251574	IdentifierDeclType	std :: string		3251535	0					
ANR	3251575	Identifier	reqline		3251535	1					
ANR	3251576	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) ) ;"	2072:1:52669:52733	3251535	5	True				
ANR	3251577	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3251535	0					
ANR	3251578	IdentifierDeclType	int		3251535	0					
ANR	3251579	Identifier	x		3251535	1					
ANR	3251580	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3251535	2		=			
ANR	3251581	Identifier	x		3251535	0					
ANR	3251582	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3251535	1					
ANR	3251583	Callee	sprintf		3251535	0					
ANR	3251584	Identifier	sprintf		3251535	0					
ANR	3251585	ArgumentList	reqline		3251535	1					
ANR	3251586	Argument	reqline		3251535	0					
ANR	3251587	Identifier	reqline		3251535	0					
ANR	3251588	Argument	"""%s"""		3251535	1					
ANR	3251589	PrimaryExpression	"""%s"""		3251535	0					
ANR	3251590	Argument	escapeGahpString ( resource_contact )		3251535	2					
ANR	3251591	CallExpression	escapeGahpString ( resource_contact )		3251535	0					
ANR	3251592	Callee	escapeGahpString		3251535	0					
ANR	3251593	Identifier	escapeGahpString		3251535	0					
ANR	3251594	ArgumentList	resource_contact		3251535	1					
ANR	3251595	Argument	resource_contact		3251535	0					
ANR	3251596	Identifier	resource_contact		3251535	0					
ANR	3251597	ExpressionStatement	ASSERT ( x > 0 )	2073:1:52736:52751	3251535	6	True				
ANR	3251598	CallExpression	ASSERT ( x > 0 )		3251535	0					
ANR	3251599	Callee	ASSERT		3251535	0					
ANR	3251600	Identifier	ASSERT		3251535	0					
ANR	3251601	ArgumentList	x > 0		3251535	1					
ANR	3251602	Argument	x > 0		3251535	0					
ANR	3251603	RelationalExpression	x > 0		3251535	0		>			
ANR	3251604	Identifier	x		3251535	0					
ANR	3251605	PrimaryExpression	0		3251535	1					
ANR	3251606	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	2074:1:52754:52787	3251535	7	True				
ANR	3251607	IdentifierDecl	* buf = reqline . c_str ( )		3251535	0					
ANR	3251608	IdentifierDeclType	const char *		3251535	0					
ANR	3251609	Identifier	buf		3251535	1					
ANR	3251610	AssignmentExpression	* buf = reqline . c_str ( )		3251535	2		=			
ANR	3251611	Identifier	buf		3251535	0					
ANR	3251612	CallExpression	reqline . c_str ( )		3251535	1					
ANR	3251613	Callee	reqline . c_str		3251535	0					
ANR	3251614	MemberAccess	reqline . c_str		3251535	0					
ANR	3251615	Identifier	reqline		3251535	0					
ANR	3251616	Identifier	c_str		3251535	1					
ANR	3251617	ArgumentList			3251535	1					
ANR	3251618	IfStatement	"if ( ! is_pending ( command , buf ) )"		3251535	8					
ANR	3251619	Condition	"! is_pending ( command , buf )"	2078:6:52888:52911	3251535	0	True				
ANR	3251620	UnaryOperationExpression	"! is_pending ( command , buf )"		3251535	0					
ANR	3251621	UnaryOperator	!		3251535	0					
ANR	3251622	CallExpression	"is_pending ( command , buf )"		3251535	1					
ANR	3251623	Callee	is_pending		3251535	0					
ANR	3251624	Identifier	is_pending		3251535	0					
ANR	3251625	ArgumentList	command		3251535	1					
ANR	3251626	Argument	command		3251535	0					
ANR	3251627	Identifier	command		3251535	0					
ANR	3251628	Argument	buf		3251535	1					
ANR	3251629	Identifier	buf		3251535	0					
ANR	3251630	CompoundStatement		18:33:571:571	3251535	1					
ANR	3251631	IfStatement	if ( m_mode == results_only )		3251535	0					
ANR	3251632	Condition	m_mode == results_only	2081:7:53020:53041	3251535	0	True				
ANR	3251633	EqualityExpression	m_mode == results_only		3251535	0		==			
ANR	3251634	Identifier	m_mode		3251535	0					
ANR	3251635	Identifier	results_only		3251535	1					
ANR	3251636	CompoundStatement		21:32:701:701	3251535	1					
ANR	3251637	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2082:3:53050:53089	3251535	0	True				
ANR	3251638	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3251535	0					
ANR	3251639	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	2084:2:53097:53134	3251535	1	True				
ANR	3251640	CallExpression	"now_pending ( command , buf , normal_proxy )"		3251535	0					
ANR	3251641	Callee	now_pending		3251535	0					
ANR	3251642	Identifier	now_pending		3251535	0					
ANR	3251643	ArgumentList	command		3251535	1					
ANR	3251644	Argument	command		3251535	0					
ANR	3251645	Identifier	command		3251535	0					
ANR	3251646	Argument	buf		3251535	1					
ANR	3251647	Identifier	buf		3251535	0					
ANR	3251648	Argument	normal_proxy		3251535	2					
ANR	3251649	Identifier	normal_proxy		3251535	0					
ANR	3251650	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	2090:1:53228:53279	3251535	9	True				
ANR	3251651	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3251535	0					
ANR	3251652	IdentifierDeclType	Gahp_Args *		3251535	0					
ANR	3251653	Identifier	result		3251535	1					
ANR	3251654	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3251535	2		=			
ANR	3251655	Identifier	result		3251535	0					
ANR	3251656	CallExpression	"get_pending_result ( command , buf )"		3251535	1					
ANR	3251657	Callee	get_pending_result		3251535	0					
ANR	3251658	Identifier	get_pending_result		3251535	0					
ANR	3251659	ArgumentList	command		3251535	1					
ANR	3251660	Argument	command		3251535	0					
ANR	3251661	Identifier	command		3251535	0					
ANR	3251662	Argument	buf		3251535	1					
ANR	3251663	Identifier	buf		3251535	0					
ANR	3251664	IfStatement	if ( result )		3251535	10					
ANR	3251665	Condition	result	2091:6:53287:53292	3251535	0	True				
ANR	3251666	Identifier	result		3251535	0					
ANR	3251667	CompoundStatement		36:2:1046:1076	3251535	1					
ANR	3251668	IfStatement	if ( result -> argc < 2 )		3251535	0					
ANR	3251669	Condition	result -> argc < 2	2093:6:53328:53343	3251535	0	True				
ANR	3251670	RelationalExpression	result -> argc < 2		3251535	0		<			
ANR	3251671	PtrMemberAccess	result -> argc		3251535	0					
ANR	3251672	Identifier	result		3251535	0					
ANR	3251673	Identifier	argc		3251535	1					
ANR	3251674	PrimaryExpression	2		3251535	1					
ANR	3251675	CompoundStatement		33:24:1002:1002	3251535	1					
ANR	3251676	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	2094:3:53351:53382	3251535	0	True				
ANR	3251677	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3251535	0					
ANR	3251678	Callee	EXCEPT		3251535	0					
ANR	3251679	Identifier	EXCEPT		3251535	0					
ANR	3251680	ArgumentList	"""Bad %s Result"""		3251535	1					
ANR	3251681	Argument	"""Bad %s Result"""		3251535	0					
ANR	3251682	PrimaryExpression	"""Bad %s Result"""		3251535	0					
ANR	3251683	Argument	command		3251535	1					
ANR	3251684	Identifier	command		3251535	0					
ANR	3251685	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	2096:2:53390:53420	3251535	1	True				
ANR	3251686	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3251535	0					
ANR	3251687	IdentifierDeclType	int		3251535	0					
ANR	3251688	Identifier	rc		3251535	1					
ANR	3251689	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3251535	2		=			
ANR	3251690	Identifier	rc		3251535	0					
ANR	3251691	CallExpression	atoi ( result -> argv [ 1 ] )		3251535	1					
ANR	3251692	Callee	atoi		3251535	0					
ANR	3251693	Identifier	atoi		3251535	0					
ANR	3251694	ArgumentList	result -> argv [ 1 ]		3251535	1					
ANR	3251695	Argument	result -> argv [ 1 ]		3251535	0					
ANR	3251696	ArrayIndexing	result -> argv [ 1 ]		3251535	0					
ANR	3251697	PtrMemberAccess	result -> argv		3251535	0					
ANR	3251698	Identifier	result		3251535	0					
ANR	3251699	Identifier	argv		3251535	1					
ANR	3251700	PrimaryExpression	1		3251535	1					
ANR	3251701	Statement	delete	2097:2:53424:53429	3251535	2	True				
ANR	3251702	ExpressionStatement	result	2097:9:53431:53437	3251535	3	True				
ANR	3251703	Identifier	result		3251535	0					
ANR	3251704	ReturnStatement	return rc ;	2098:2:53441:53450	3251535	4	True				
ANR	3251705	Identifier	rc		3251535	0					
ANR	3251706	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3251535	11					
ANR	3251707	Condition	"check_pending_timeout ( command , buf )"	2102:6:53507:53540	3251535	0	True				
ANR	3251708	CallExpression	"check_pending_timeout ( command , buf )"		3251535	0					
ANR	3251709	Callee	check_pending_timeout		3251535	0					
ANR	3251710	Identifier	check_pending_timeout		3251535	0					
ANR	3251711	ArgumentList	command		3251535	1					
ANR	3251712	Argument	command		3251535	0					
ANR	3251713	Identifier	command		3251535	0					
ANR	3251714	Argument	buf		3251535	1					
ANR	3251715	Identifier	buf		3251535	0					
ANR	3251716	CompoundStatement		42:43:1200:1200	3251535	1					
ANR	3251717	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	2104:2:53580:53628	3251535	0	True				
ANR	3251718	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3251535	0					
ANR	3251719	Callee	sprintf		3251535	0					
ANR	3251720	Identifier	sprintf		3251535	0					
ANR	3251721	ArgumentList	error_string		3251535	1					
ANR	3251722	Argument	error_string		3251535	0					
ANR	3251723	Identifier	error_string		3251535	0					
ANR	3251724	Argument	"""%s timed out"""		3251535	1					
ANR	3251725	PrimaryExpression	"""%s timed out"""		3251535	0					
ANR	3251726	Argument	command		3251535	2					
ANR	3251727	Identifier	command		3251535	0					
ANR	3251728	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	2105:2:53632:53667	3251535	1	True				
ANR	3251729	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3251535	0					
ANR	3251730	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2109:1:53727:53760	3251535	12	True				
ANR	3251731	Identifier	GAHPCLIENT_COMMAND_PENDING		3251535	0					
ANR	3251732	ReturnType	int		3251535	1					
ANR	3251733	Identifier	GahpClient :: globus_gram_client_get_jobmanager_version		3251535	2					
ANR	3251734	ParameterList	const char * resource_contact		3251535	3					
ANR	3251735	Parameter	const char * resource_contact	2060:54:52312:52340	3251535	0	True				
ANR	3251736	ParameterType	const char *		3251535	0					
ANR	3251737	Identifier	resource_contact		3251535	1					
ANR	3251738	CFGEntryNode	ENTRY		3251535		True				
ANR	3251739	CFGExitNode	EXIT		3251535		True				
ANR	3251740	Symbol	server -> m_commands_supported		3251535						
ANR	3251741	Symbol	server		3251535						
ANR	3251742	Symbol	escapeGahpString		3251535						
ANR	3251743	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3251535						
ANR	3251744	Symbol	resource_contact		3251535						
ANR	3251745	Symbol	* server		3251535						
ANR	3251746	Symbol	reqline . c_str		3251535						
ANR	3251747	Symbol	results_only		3251535						
ANR	3251748	Symbol	result -> argv		3251535						
ANR	3251749	Symbol	* server -> m_commands_supported		3251535						
ANR	3251750	Symbol	sprintf		3251535						
ANR	3251751	Symbol	result		3251535						
ANR	3251752	Symbol	normal_proxy		3251535						
ANR	3251753	Symbol	* result		3251535						
ANR	3251754	Symbol	server -> m_commands_supported -> contains_anycase		3251535						
ANR	3251755	Symbol	GAHPCLIENT_COMMAND_PENDING		3251535						
ANR	3251756	Symbol	reqline		3251535						
ANR	3251757	Symbol	m_mode		3251535						
ANR	3251758	Symbol	* result -> argv		3251535						
ANR	3251759	Symbol	atoi		3251535						
ANR	3251760	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3251535						
ANR	3251761	Symbol	* * result		3251535						
ANR	3251762	Symbol	NULLSTRING		3251535						
ANR	3251763	Symbol	command		3251535						
ANR	3251764	Symbol	get_pending_result		3251535						
ANR	3251765	Symbol	rc		3251535						
ANR	3251766	Symbol	error_string		3251535						
ANR	3251767	Symbol	buf		3251535						
ANR	3251768	Symbol	x		3251535						
ANR	3251769	Symbol	result -> argc		3251535						
ANR	3251770	Symbol	FALSE		3251535						
ANR	3251771	Symbol	* * server		3251535						
ANR	3251772	Symbol	check_pending_timeout		3251535						
ANR	3251773	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3251535						
ANR	3251774	Symbol	is_pending		3251535						
ANR	3251775	Function	GahpClient :: clear_pending	2131:0:54387:55313							
ANR	3251776	FunctionDef	GahpClient :: clear_pending ()		3251775	0					
ANR	3251777	CompoundStatement		2133:0:54420:55313	3251775	0					
ANR	3251778	IfStatement	if ( pending_reqid )		3251775	0					
ANR	3251779	Condition	pending_reqid	2134:6:54428:54440	3251775	0	True				
ANR	3251780	Identifier	pending_reqid		3251775	0					
ANR	3251781	CompoundStatement		2:22:23:23	3251775	1					
ANR	3251782	IfStatement	if ( server -> requestTable -> remove ( pending_reqid ) == 0 )		3251775	0					
ANR	3251783	Condition	server -> requestTable -> remove ( pending_reqid ) == 0	2136:6:54480:54527	3251775	0	True				
ANR	3251784	EqualityExpression	server -> requestTable -> remove ( pending_reqid ) == 0		3251775	0		==			
ANR	3251785	CallExpression	server -> requestTable -> remove ( pending_reqid )		3251775	0					
ANR	3251786	Callee	server -> requestTable -> remove		3251775	0					
ANR	3251787	PtrMemberAccess	server -> requestTable -> remove		3251775	0					
ANR	3251788	PtrMemberAccess	server -> requestTable		3251775	0					
ANR	3251789	Identifier	server		3251775	0					
ANR	3251790	Identifier	requestTable		3251775	1					
ANR	3251791	Identifier	remove		3251775	1					
ANR	3251792	ArgumentList	pending_reqid		3251775	1					
ANR	3251793	Argument	pending_reqid		3251775	0					
ANR	3251794	Identifier	pending_reqid		3251775	0					
ANR	3251795	PrimaryExpression	0		3251775	1					
ANR	3251796	CompoundStatement		4:56:109:109	3251775	1					
ANR	3251797	ExpressionStatement	"server -> requestTable -> insert ( pending_reqid , NULL )"	2142:3:54813:54861	3251775	0	True				
ANR	3251798	CallExpression	"server -> requestTable -> insert ( pending_reqid , NULL )"		3251775	0					
ANR	3251799	Callee	server -> requestTable -> insert		3251775	0					
ANR	3251800	PtrMemberAccess	server -> requestTable -> insert		3251775	0					
ANR	3251801	PtrMemberAccess	server -> requestTable		3251775	0					
ANR	3251802	Identifier	server		3251775	0					
ANR	3251803	Identifier	requestTable		3251775	1					
ANR	3251804	Identifier	insert		3251775	1					
ANR	3251805	ArgumentList	pending_reqid		3251775	1					
ANR	3251806	Argument	pending_reqid		3251775	0					
ANR	3251807	Identifier	pending_reqid		3251775	0					
ANR	3251808	Argument	NULL		3251775	1					
ANR	3251809	Identifier	NULL		3251775	0					
ANR	3251810	ExpressionStatement	pending_reqid = 0	2145:1:54871:54888	3251775	1	True				
ANR	3251811	AssignmentExpression	pending_reqid = 0		3251775	0		=			
ANR	3251812	Identifier	pending_reqid		3251775	0					
ANR	3251813	PrimaryExpression	0		3251775	1					
ANR	3251814	IfStatement	if ( pending_result )		3251775	2					
ANR	3251815	Condition	pending_result	2146:5:54895:54908	3251775	0	True				
ANR	3251816	Identifier	pending_result		3251775	0					
ANR	3251817	Statement	delete	2146:21:54911:54916	3251775	1	True				
ANR	3251818	ExpressionStatement	pending_result	2146:28:54918:54932	3251775	3	True				
ANR	3251819	Identifier	pending_result		3251775	0					
ANR	3251820	ExpressionStatement	pending_result = NULL	2147:1:54935:54956	3251775	4	True				
ANR	3251821	AssignmentExpression	pending_result = NULL		3251775	0		=			
ANR	3251822	Identifier	pending_result		3251775	0					
ANR	3251823	Identifier	NULL		3251775	1					
ANR	3251824	ExpressionStatement	free ( pending_command )	2148:1:54959:54980	3251775	5	True				
ANR	3251825	CallExpression	free ( pending_command )		3251775	0					
ANR	3251826	Callee	free		3251775	0					
ANR	3251827	Identifier	free		3251775	0					
ANR	3251828	ArgumentList	pending_command		3251775	1					
ANR	3251829	Argument	pending_command		3251775	0					
ANR	3251830	Identifier	pending_command		3251775	0					
ANR	3251831	ExpressionStatement	pending_command = NULL	2149:1:54983:55005	3251775	6	True				
ANR	3251832	AssignmentExpression	pending_command = NULL		3251775	0		=			
ANR	3251833	Identifier	pending_command		3251775	0					
ANR	3251834	Identifier	NULL		3251775	1					
ANR	3251835	IfStatement	if ( pending_args )		3251775	7					
ANR	3251836	Condition	pending_args	2150:5:55012:55023	3251775	0	True				
ANR	3251837	Identifier	pending_args		3251775	0					
ANR	3251838	ExpressionStatement	free ( pending_args )	2150:19:55026:55044	3251775	1	True				
ANR	3251839	CallExpression	free ( pending_args )		3251775	0					
ANR	3251840	Callee	free		3251775	0					
ANR	3251841	Identifier	free		3251775	0					
ANR	3251842	ArgumentList	pending_args		3251775	1					
ANR	3251843	Argument	pending_args		3251775	0					
ANR	3251844	Identifier	pending_args		3251775	0					
ANR	3251845	ExpressionStatement	pending_args = NULL	2151:1:55047:55066	3251775	8	True				
ANR	3251846	AssignmentExpression	pending_args = NULL		3251775	0		=			
ANR	3251847	Identifier	pending_args		3251775	0					
ANR	3251848	Identifier	NULL		3251775	1					
ANR	3251849	ExpressionStatement	pending_timeout = 0	2152:1:55069:55088	3251775	9	True				
ANR	3251850	AssignmentExpression	pending_timeout = 0		3251775	0		=			
ANR	3251851	Identifier	pending_timeout		3251775	0					
ANR	3251852	PrimaryExpression	0		3251775	1					
ANR	3251853	IfStatement	if ( pending_submitted_to_gahp )		3251775	10					
ANR	3251854	Condition	pending_submitted_to_gahp	2153:5:55095:55119	3251775	0	True				
ANR	3251855	Identifier	pending_submitted_to_gahp		3251775	0					
ANR	3251856	CompoundStatement		21:32:701:701	3251775	1					
ANR	3251857	ExpressionStatement	server -> num_pending_requests --	2154:2:55126:55156	3251775	0	True				
ANR	3251858	PostIncDecOperationExpression	server -> num_pending_requests --		3251775	0					
ANR	3251859	PtrMemberAccess	server -> num_pending_requests		3251775	0					
ANR	3251860	Identifier	server		3251775	0					
ANR	3251861	Identifier	num_pending_requests		3251775	1					
ANR	3251862	IncDec	--		3251775	1					
ANR	3251863	ExpressionStatement	pending_submitted_to_gahp = false	2156:1:55162:55195	3251775	11	True				
ANR	3251864	AssignmentExpression	pending_submitted_to_gahp = false		3251775	0		=			
ANR	3251865	Identifier	pending_submitted_to_gahp		3251775	0					
ANR	3251866	Identifier	false		3251775	1					
ANR	3251867	IfStatement	if ( pending_timeout_tid != - 1 )		3251775	12					
ANR	3251868	Condition	pending_timeout_tid != - 1	2157:6:55203:55227	3251775	0	True				
ANR	3251869	EqualityExpression	pending_timeout_tid != - 1		3251775	0		!=			
ANR	3251870	Identifier	pending_timeout_tid		3251775	0					
ANR	3251871	UnaryOperationExpression	- 1		3251775	1					
ANR	3251872	UnaryOperator	-		3251775	0					
ANR	3251873	PrimaryExpression	1		3251775	1					
ANR	3251874	CompoundStatement		25:34:810:810	3251775	1					
ANR	3251875	ExpressionStatement	daemonCore -> Cancel_Timer ( pending_timeout_tid )	2158:2:55235:55280	3251775	0	True				
ANR	3251876	CallExpression	daemonCore -> Cancel_Timer ( pending_timeout_tid )		3251775	0					
ANR	3251877	Callee	daemonCore -> Cancel_Timer		3251775	0					
ANR	3251878	PtrMemberAccess	daemonCore -> Cancel_Timer		3251775	0					
ANR	3251879	Identifier	daemonCore		3251775	0					
ANR	3251880	Identifier	Cancel_Timer		3251775	1					
ANR	3251881	ArgumentList	pending_timeout_tid		3251775	1					
ANR	3251882	Argument	pending_timeout_tid		3251775	0					
ANR	3251883	Identifier	pending_timeout_tid		3251775	0					
ANR	3251884	ExpressionStatement	pending_timeout_tid = - 1	2159:2:55284:55308	3251775	1	True				
ANR	3251885	AssignmentExpression	pending_timeout_tid = - 1		3251775	0		=			
ANR	3251886	Identifier	pending_timeout_tid		3251775	0					
ANR	3251887	UnaryOperationExpression	- 1		3251775	1					
ANR	3251888	UnaryOperator	-		3251775	0					
ANR	3251889	PrimaryExpression	1		3251775	1					
ANR	3251890	ReturnType	void		3251775	1					
ANR	3251891	Identifier	GahpClient :: clear_pending		3251775	2					
ANR	3251892	ParameterList			3251775	3					
ANR	3251893	CFGEntryNode	ENTRY		3251775		True				
ANR	3251894	CFGExitNode	EXIT		3251775		True				
ANR	3251895	Symbol	server		3251775						
ANR	3251896	Symbol	* server		3251775						
ANR	3251897	Symbol	NULL		3251775						
ANR	3251898	Symbol	server -> requestTable -> remove		3251775						
ANR	3251899	Symbol	pending_result		3251775						
ANR	3251900	Symbol	false		3251775						
ANR	3251901	Symbol	pending_command		3251775						
ANR	3251902	Symbol	pending_submitted_to_gahp		3251775						
ANR	3251903	Symbol	pending_timeout		3251775						
ANR	3251904	Symbol	pending_timeout_tid		3251775						
ANR	3251905	Symbol	server -> num_pending_requests		3251775						
ANR	3251906	Symbol	pending_reqid		3251775						
ANR	3251907	Symbol	pending_args		3251775						
ANR	3251908	Symbol	daemonCore		3251775						
ANR	3251909	Symbol	server -> requestTable		3251775						
ANR	3251910	Symbol	* server -> requestTable		3251775						
ANR	3251911	Symbol	* * server		3251775						
ANR	3251912	Function	GahpClient :: reset_user_timer_alarm	2163:0:55316:55400							
ANR	3251913	FunctionDef	GahpClient :: reset_user_timer_alarm ()		3251912	0					
ANR	3251914	CompoundStatement		2165:0:55358:55400	3251912	0					
ANR	3251915	ExpressionStatement	reset_user_timer ( pending_timeout_tid )	2166:1:55361:55398	3251912	0	True				
ANR	3251916	CallExpression	reset_user_timer ( pending_timeout_tid )		3251912	0					
ANR	3251917	Callee	reset_user_timer		3251912	0					
ANR	3251918	Identifier	reset_user_timer		3251912	0					
ANR	3251919	ArgumentList	pending_timeout_tid		3251912	1					
ANR	3251920	Argument	pending_timeout_tid		3251912	0					
ANR	3251921	Identifier	pending_timeout_tid		3251912	0					
ANR	3251922	ReturnType	void		3251912	1					
ANR	3251923	Identifier	GahpClient :: reset_user_timer_alarm		3251912	2					
ANR	3251924	ParameterList			3251912	3					
ANR	3251925	CFGEntryNode	ENTRY		3251912		True				
ANR	3251926	CFGExitNode	EXIT		3251912		True				
ANR	3251927	Symbol	pending_timeout_tid		3251912						
ANR	3251928	Function	GahpClient :: reset_user_timer	2169:0:55403:55997							
ANR	3251929	FunctionDef	GahpClient :: reset_user_timer (int tid)		3251928	0					
ANR	3251930	CompoundStatement		2171:0:55445:55997	3251928	0					
ANR	3251931	IdentifierDeclStatement	int retval = TRUE ;	2172:1:55448:55465	3251928	0	True				
ANR	3251932	IdentifierDecl	retval = TRUE		3251928	0					
ANR	3251933	IdentifierDeclType	int		3251928	0					
ANR	3251934	Identifier	retval		3251928	1					
ANR	3251935	AssignmentExpression	retval = TRUE		3251928	2		=			
ANR	3251936	Identifier	TRUE		3251928	0					
ANR	3251937	Identifier	TRUE		3251928	1					
ANR	3251938	IfStatement	if ( user_timerid != - 1 )		3251928	1					
ANR	3251939	Condition	user_timerid != - 1	2174:6:55474:55491	3251928	0	True				
ANR	3251940	EqualityExpression	user_timerid != - 1		3251928	0		!=			
ANR	3251941	Identifier	user_timerid		3251928	0					
ANR	3251942	UnaryOperationExpression	- 1		3251928	1					
ANR	3251943	UnaryOperator	-		3251928	0					
ANR	3251944	PrimaryExpression	1		3251928	1					
ANR	3251945	CompoundStatement		4:27:49:49	3251928	1					
ANR	3251946	ExpressionStatement	"retval = daemonCore -> Reset_Timer ( user_timerid , 0 )"	2175:2:55499:55548	3251928	0	True				
ANR	3251947	AssignmentExpression	"retval = daemonCore -> Reset_Timer ( user_timerid , 0 )"		3251928	0		=			
ANR	3251948	Identifier	retval		3251928	0					
ANR	3251949	CallExpression	"daemonCore -> Reset_Timer ( user_timerid , 0 )"		3251928	1					
ANR	3251950	Callee	daemonCore -> Reset_Timer		3251928	0					
ANR	3251951	PtrMemberAccess	daemonCore -> Reset_Timer		3251928	0					
ANR	3251952	Identifier	daemonCore		3251928	0					
ANR	3251953	Identifier	Reset_Timer		3251928	1					
ANR	3251954	ArgumentList	user_timerid		3251928	1					
ANR	3251955	Argument	user_timerid		3251928	0					
ANR	3251956	Identifier	user_timerid		3251928	0					
ANR	3251957	Argument	0		3251928	1					
ANR	3251958	PrimaryExpression	0		3251928	0					
ANR	3251959	IfStatement	if ( pending_timeout_tid != - 1 )		3251928	2					
ANR	3251960	Condition	pending_timeout_tid != - 1	2179:6:55608:55632	3251928	0	True				
ANR	3251961	EqualityExpression	pending_timeout_tid != - 1		3251928	0		!=			
ANR	3251962	Identifier	pending_timeout_tid		3251928	0					
ANR	3251963	UnaryOperationExpression	- 1		3251928	1					
ANR	3251964	UnaryOperator	-		3251928	0					
ANR	3251965	PrimaryExpression	1		3251928	1					
ANR	3251966	CompoundStatement		9:34:190:190	3251928	1					
ANR	3251967	IfStatement	if ( tid < 0 )		3251928	0					
ANR	3251968	Condition	tid < 0	2180:7:55645:55651	3251928	0	True				
ANR	3251969	RelationalExpression	tid < 0		3251928	0		<			
ANR	3251970	Identifier	tid		3251928	0					
ANR	3251971	PrimaryExpression	0		3251928	1					
ANR	3251972	CompoundStatement		10:17:209:209	3251928	1					
ANR	3251973	ExpressionStatement	daemonCore -> Cancel_Timer ( pending_timeout_tid )	2185:3:55898:55943	3251928	0	True				
ANR	3251974	CallExpression	daemonCore -> Cancel_Timer ( pending_timeout_tid )		3251928	0					
ANR	3251975	Callee	daemonCore -> Cancel_Timer		3251928	0					
ANR	3251976	PtrMemberAccess	daemonCore -> Cancel_Timer		3251928	0					
ANR	3251977	Identifier	daemonCore		3251928	0					
ANR	3251978	Identifier	Cancel_Timer		3251928	1					
ANR	3251979	ArgumentList	pending_timeout_tid		3251928	1					
ANR	3251980	Argument	pending_timeout_tid		3251928	0					
ANR	3251981	Identifier	pending_timeout_tid		3251928	0					
ANR	3251982	ExpressionStatement	pending_timeout_tid = - 1	2187:2:55951:55975	3251928	1	True				
ANR	3251983	AssignmentExpression	pending_timeout_tid = - 1		3251928	0		=			
ANR	3251984	Identifier	pending_timeout_tid		3251928	0					
ANR	3251985	UnaryOperationExpression	- 1		3251928	1					
ANR	3251986	UnaryOperator	-		3251928	0					
ANR	3251987	PrimaryExpression	1		3251928	1					
ANR	3251988	ReturnStatement	return retval ;	2190:1:55982:55995	3251928	3	True				
ANR	3251989	Identifier	retval		3251928	0					
ANR	3251990	ReturnType	int		3251928	1					
ANR	3251991	Identifier	GahpClient :: reset_user_timer		3251928	2					
ANR	3251992	ParameterList	int tid		3251928	3					
ANR	3251993	Parameter	int tid	2170:29:55436:55442	3251928	0	True				
ANR	3251994	ParameterType	int		3251928	0					
ANR	3251995	Identifier	tid		3251928	1					
ANR	3251996	CFGEntryNode	ENTRY		3251928		True				
ANR	3251997	CFGExitNode	EXIT		3251928		True				
ANR	3251998	Symbol	user_timerid		3251928						
ANR	3251999	Symbol	daemonCore -> Reset_Timer		3251928						
ANR	3252000	Symbol	* daemonCore		3251928						
ANR	3252001	Symbol	daemonCore		3251928						
ANR	3252002	Symbol	TRUE		3251928						
ANR	3252003	Symbol	pending_timeout_tid		3251928						
ANR	3252004	Symbol	tid		3251928						
ANR	3252005	Symbol	retval		3251928						
ANR	3252006	Function	GahpClient :: now_pending	2193:0:56000:58104							
ANR	3252007	FunctionDef	"GahpClient :: now_pending (const char * command , const char * buf , GahpProxyInfo * cmd_proxy , PrioLevel prio_level)"		3252006	0					
ANR	3252008	CompoundStatement		2196:0:56121:58104	3252006	0					
ANR	3252009	IfStatement	if ( command )		3252006	0					
ANR	3252010	Condition	command	2203:6:56399:56405	3252006	0	True				
ANR	3252011	Identifier	command		3252006	0					
ANR	3252012	CompoundStatement		8:16:287:287	3252006	1					
ANR	3252013	ExpressionStatement	clear_pending ( )	2204:2:56413:56428	3252006	0	True				
ANR	3252014	CallExpression	clear_pending ( )		3252006	0					
ANR	3252015	Callee	clear_pending		3252006	0					
ANR	3252016	Identifier	clear_pending		3252006	0					
ANR	3252017	ArgumentList			3252006	1					
ANR	3252018	ExpressionStatement	pending_command = strdup ( command )	2205:2:56432:56467	3252006	1	True				
ANR	3252019	AssignmentExpression	pending_command = strdup ( command )		3252006	0		=			
ANR	3252020	Identifier	pending_command		3252006	0					
ANR	3252021	CallExpression	strdup ( command )		3252006	1					
ANR	3252022	Callee	strdup		3252006	0					
ANR	3252023	Identifier	strdup		3252006	0					
ANR	3252024	ArgumentList	command		3252006	1					
ANR	3252025	Argument	command		3252006	0					
ANR	3252026	Identifier	command		3252006	0					
ANR	3252027	ExpressionStatement	pending_reqid = server -> new_reqid ( )	2206:2:56471:56506	3252006	2	True				
ANR	3252028	AssignmentExpression	pending_reqid = server -> new_reqid ( )		3252006	0		=			
ANR	3252029	Identifier	pending_reqid		3252006	0					
ANR	3252030	CallExpression	server -> new_reqid ( )		3252006	1					
ANR	3252031	Callee	server -> new_reqid		3252006	0					
ANR	3252032	PtrMemberAccess	server -> new_reqid		3252006	0					
ANR	3252033	Identifier	server		3252006	0					
ANR	3252034	Identifier	new_reqid		3252006	1					
ANR	3252035	ArgumentList			3252006	1					
ANR	3252036	IfStatement	if ( buf )		3252006	3					
ANR	3252037	Condition	buf	2207:6:56514:56516	3252006	0	True				
ANR	3252038	Identifier	buf		3252006	0					
ANR	3252039	CompoundStatement		12:11:397:397	3252006	1					
ANR	3252040	ExpressionStatement	pending_args = strdup ( buf )	2208:3:56524:56550	3252006	0	True				
ANR	3252041	AssignmentExpression	pending_args = strdup ( buf )		3252006	0		=			
ANR	3252042	Identifier	pending_args		3252006	0					
ANR	3252043	CallExpression	strdup ( buf )		3252006	1					
ANR	3252044	Callee	strdup		3252006	0					
ANR	3252045	Identifier	strdup		3252006	0					
ANR	3252046	ArgumentList	buf		3252006	1					
ANR	3252047	Argument	buf		3252006	0					
ANR	3252048	Identifier	buf		3252006	0					
ANR	3252049	IfStatement	if ( m_timeout )		3252006	4					
ANR	3252050	Condition	m_timeout	2210:6:56562:56570	3252006	0	True				
ANR	3252051	Identifier	m_timeout		3252006	0					
ANR	3252052	CompoundStatement		15:17:451:451	3252006	1					
ANR	3252053	ExpressionStatement	pending_timeout = m_timeout	2211:3:56578:56605	3252006	0	True				
ANR	3252054	AssignmentExpression	pending_timeout = m_timeout		3252006	0		=			
ANR	3252055	Identifier	pending_timeout		3252006	0					
ANR	3252056	Identifier	m_timeout		3252006	1					
ANR	3252057	ExpressionStatement	pending_proxy = cmd_proxy	2213:2:56613:56638	3252006	5	True				
ANR	3252058	AssignmentExpression	pending_proxy = cmd_proxy		3252006	0		=			
ANR	3252059	Identifier	pending_proxy		3252006	0					
ANR	3252060	Identifier	cmd_proxy		3252006	1					
ANR	3252061	ExpressionStatement	"server -> requestTable -> insert ( pending_reqid , this )"	2215:2:56675:56723	3252006	6	True				
ANR	3252062	CallExpression	"server -> requestTable -> insert ( pending_reqid , this )"		3252006	0					
ANR	3252063	Callee	server -> requestTable -> insert		3252006	0					
ANR	3252064	PtrMemberAccess	server -> requestTable -> insert		3252006	0					
ANR	3252065	PtrMemberAccess	server -> requestTable		3252006	0					
ANR	3252066	Identifier	server		3252006	0					
ANR	3252067	Identifier	requestTable		3252006	1					
ANR	3252068	Identifier	insert		3252006	1					
ANR	3252069	ArgumentList	pending_reqid		3252006	1					
ANR	3252070	Argument	pending_reqid		3252006	0					
ANR	3252071	Identifier	pending_reqid		3252006	0					
ANR	3252072	Argument	this		3252006	1					
ANR	3252073	Identifier	this		3252006	0					
ANR	3252074	ExpressionStatement	ASSERT ( pending_command != NULL )	2217:1:56729:56762	3252006	1	True				
ANR	3252075	CallExpression	ASSERT ( pending_command != NULL )		3252006	0					
ANR	3252076	Callee	ASSERT		3252006	0					
ANR	3252077	Identifier	ASSERT		3252006	0					
ANR	3252078	ArgumentList	pending_command != NULL		3252006	1					
ANR	3252079	Argument	pending_command != NULL		3252006	0					
ANR	3252080	EqualityExpression	pending_command != NULL		3252006	0		!=			
ANR	3252081	Identifier	pending_command		3252006	0					
ANR	3252082	Identifier	NULL		3252006	1					
ANR	3252083	IfStatement	if ( server -> num_pending_requests >= server -> max_pending_requests )		3252006	2					
ANR	3252084	Condition	server -> num_pending_requests >= server -> max_pending_requests	2219:6:56771:56830	3252006	0	True				
ANR	3252085	RelationalExpression	server -> num_pending_requests >= server -> max_pending_requests		3252006	0		>=			
ANR	3252086	PtrMemberAccess	server -> num_pending_requests		3252006	0					
ANR	3252087	Identifier	server		3252006	0					
ANR	3252088	Identifier	num_pending_requests		3252006	1					
ANR	3252089	PtrMemberAccess	server -> max_pending_requests		3252006	1					
ANR	3252090	Identifier	server		3252006	0					
ANR	3252091	Identifier	max_pending_requests		3252006	1					
ANR	3252092	CompoundStatement		24:69:712:712	3252006	1					
ANR	3252093	SwitchStatement	switch ( prio_level )		3252006	0					
ANR	3252094	Condition	prio_level	2222:11:56932:56941	3252006	0	True				
ANR	3252095	Identifier	prio_level		3252006	0					
ANR	3252096	CompoundStatement		27:24:823:823	3252006	1					
ANR	3252097	Label	case high_prio :	2223:2:56949:56963	3252006	0	True				
ANR	3252098	Identifier	high_prio		3252006	0					
ANR	3252099	ExpressionStatement	server -> waitingHighPrio . push ( pending_reqid )	2224:3:56968:57013	3252006	1	True				
ANR	3252100	CallExpression	server -> waitingHighPrio . push ( pending_reqid )		3252006	0					
ANR	3252101	Callee	server -> waitingHighPrio . push		3252006	0					
ANR	3252102	MemberAccess	server -> waitingHighPrio . push		3252006	0					
ANR	3252103	PtrMemberAccess	server -> waitingHighPrio		3252006	0					
ANR	3252104	Identifier	server		3252006	0					
ANR	3252105	Identifier	waitingHighPrio		3252006	1					
ANR	3252106	Identifier	push		3252006	1					
ANR	3252107	ArgumentList	pending_reqid		3252006	1					
ANR	3252108	Argument	pending_reqid		3252006	0					
ANR	3252109	Identifier	pending_reqid		3252006	0					
ANR	3252110	BreakStatement	break ;	2225:3:57018:57023	3252006	2	True				
ANR	3252111	Label	case medium_prio :	2226:2:57027:57043	3252006	3	True				
ANR	3252112	Identifier	medium_prio		3252006	0					
ANR	3252113	ExpressionStatement	server -> waitingMediumPrio . push ( pending_reqid )	2227:3:57048:57095	3252006	4	True				
ANR	3252114	CallExpression	server -> waitingMediumPrio . push ( pending_reqid )		3252006	0					
ANR	3252115	Callee	server -> waitingMediumPrio . push		3252006	0					
ANR	3252116	MemberAccess	server -> waitingMediumPrio . push		3252006	0					
ANR	3252117	PtrMemberAccess	server -> waitingMediumPrio		3252006	0					
ANR	3252118	Identifier	server		3252006	0					
ANR	3252119	Identifier	waitingMediumPrio		3252006	1					
ANR	3252120	Identifier	push		3252006	1					
ANR	3252121	ArgumentList	pending_reqid		3252006	1					
ANR	3252122	Argument	pending_reqid		3252006	0					
ANR	3252123	Identifier	pending_reqid		3252006	0					
ANR	3252124	BreakStatement	break ;	2228:3:57100:57105	3252006	5	True				
ANR	3252125	Label	case low_prio :	2229:2:57109:57122	3252006	6	True				
ANR	3252126	Identifier	low_prio		3252006	0					
ANR	3252127	ExpressionStatement	server -> waitingLowPrio . push ( pending_reqid )	2230:3:57127:57171	3252006	7	True				
ANR	3252128	CallExpression	server -> waitingLowPrio . push ( pending_reqid )		3252006	0					
ANR	3252129	Callee	server -> waitingLowPrio . push		3252006	0					
ANR	3252130	MemberAccess	server -> waitingLowPrio . push		3252006	0					
ANR	3252131	PtrMemberAccess	server -> waitingLowPrio		3252006	0					
ANR	3252132	Identifier	server		3252006	0					
ANR	3252133	Identifier	waitingLowPrio		3252006	1					
ANR	3252134	Identifier	push		3252006	1					
ANR	3252135	ArgumentList	pending_reqid		3252006	1					
ANR	3252136	Argument	pending_reqid		3252006	0					
ANR	3252137	Identifier	pending_reqid		3252006	0					
ANR	3252138	BreakStatement	break ;	2231:3:57176:57181	3252006	8	True				
ANR	3252139	ReturnStatement	return ;	2233:2:57189:57195	3252006	1	True				
ANR	3252140	IfStatement	if ( server -> is_initialized == true && server -> can_cache_proxies == true )		3252006	3					
ANR	3252141	Condition	server -> is_initialized == true && server -> can_cache_proxies == true	2237:6:57263:57329	3252006	0	True				
ANR	3252142	AndExpression	server -> is_initialized == true && server -> can_cache_proxies == true		3252006	0		&&			
ANR	3252143	EqualityExpression	server -> is_initialized == true		3252006	0		==			
ANR	3252144	PtrMemberAccess	server -> is_initialized		3252006	0					
ANR	3252145	Identifier	server		3252006	0					
ANR	3252146	Identifier	is_initialized		3252006	1					
ANR	3252147	Identifier	true		3252006	1					
ANR	3252148	EqualityExpression	server -> can_cache_proxies == true		3252006	1		==			
ANR	3252149	PtrMemberAccess	server -> can_cache_proxies		3252006	0					
ANR	3252150	Identifier	server		3252006	0					
ANR	3252151	Identifier	can_cache_proxies		3252006	1					
ANR	3252152	Identifier	true		3252006	1					
ANR	3252153	CompoundStatement		42:76:1211:1211	3252006	1					
ANR	3252154	IfStatement	if ( server -> useCachedProxy ( pending_proxy ) != true )		3252006	0					
ANR	3252155	Condition	server -> useCachedProxy ( pending_proxy ) != true	2238:7:57342:57388	3252006	0	True				
ANR	3252156	EqualityExpression	server -> useCachedProxy ( pending_proxy ) != true		3252006	0		!=			
ANR	3252157	CallExpression	server -> useCachedProxy ( pending_proxy )		3252006	0					
ANR	3252158	Callee	server -> useCachedProxy		3252006	0					
ANR	3252159	PtrMemberAccess	server -> useCachedProxy		3252006	0					
ANR	3252160	Identifier	server		3252006	0					
ANR	3252161	Identifier	useCachedProxy		3252006	1					
ANR	3252162	ArgumentList	pending_proxy		3252006	1					
ANR	3252163	Argument	pending_proxy		3252006	0					
ANR	3252164	Identifier	pending_proxy		3252006	0					
ANR	3252165	Identifier	true		3252006	1					
ANR	3252166	CompoundStatement		43:57:1270:1270	3252006	1					
ANR	3252167	ExpressionStatement	"EXCEPT ( ""useCachedProxy() failed!"" )"	2239:3:57397:57433	3252006	0	True				
ANR	3252168	CallExpression	"EXCEPT ( ""useCachedProxy() failed!"" )"		3252006	0					
ANR	3252169	Callee	EXCEPT		3252006	0					
ANR	3252170	Identifier	EXCEPT		3252006	0					
ANR	3252171	ArgumentList	"""useCachedProxy() failed!"""		3252006	1					
ANR	3252172	Argument	"""useCachedProxy() failed!"""		3252006	0					
ANR	3252173	PrimaryExpression	"""useCachedProxy() failed!"""		3252006	0					
ANR	3252174	ExpressionStatement	"server -> write_line ( pending_command , pending_reqid , pending_args )"	2244:1:57491:57553	3252006	4	True				
ANR	3252175	CallExpression	"server -> write_line ( pending_command , pending_reqid , pending_args )"		3252006	0					
ANR	3252176	Callee	server -> write_line		3252006	0					
ANR	3252177	PtrMemberAccess	server -> write_line		3252006	0					
ANR	3252178	Identifier	server		3252006	0					
ANR	3252179	Identifier	write_line		3252006	1					
ANR	3252180	ArgumentList	pending_command		3252006	1					
ANR	3252181	Argument	pending_command		3252006	0					
ANR	3252182	Identifier	pending_command		3252006	0					
ANR	3252183	Argument	pending_reqid		3252006	1					
ANR	3252184	Identifier	pending_reqid		3252006	0					
ANR	3252185	Argument	pending_args		3252006	2					
ANR	3252186	Identifier	pending_args		3252006	0					
ANR	3252187	IdentifierDeclStatement	Gahp_Args return_line ;	2245:1:57556:57577	3252006	5	True				
ANR	3252188	IdentifierDecl	return_line		3252006	0					
ANR	3252189	IdentifierDeclType	Gahp_Args		3252006	0					
ANR	3252190	Identifier	return_line		3252006	1					
ANR	3252191	ExpressionStatement	server -> read_argv ( return_line )	2246:1:57580:57610	3252006	6	True				
ANR	3252192	CallExpression	server -> read_argv ( return_line )		3252006	0					
ANR	3252193	Callee	server -> read_argv		3252006	0					
ANR	3252194	PtrMemberAccess	server -> read_argv		3252006	0					
ANR	3252195	Identifier	server		3252006	0					
ANR	3252196	Identifier	read_argv		3252006	1					
ANR	3252197	ArgumentList	return_line		3252006	1					
ANR	3252198	Argument	return_line		3252006	0					
ANR	3252199	Identifier	return_line		3252006	0					
ANR	3252200	IfStatement	if ( return_line . argc == 0 || return_line . argv [ 0 ] [ 0 ] != 'S' )		3252006	7					
ANR	3252201	Condition	return_line . argc == 0 || return_line . argv [ 0 ] [ 0 ] != 'S'	2247:6:57618:57671	3252006	0	True				
ANR	3252202	OrExpression	return_line . argc == 0 || return_line . argv [ 0 ] [ 0 ] != 'S'		3252006	0		||			
ANR	3252203	EqualityExpression	return_line . argc == 0		3252006	0		==			
ANR	3252204	MemberAccess	return_line . argc		3252006	0					
ANR	3252205	Identifier	return_line		3252006	0					
ANR	3252206	Identifier	argc		3252006	1					
ANR	3252207	PrimaryExpression	0		3252006	1					
ANR	3252208	EqualityExpression	return_line . argv [ 0 ] [ 0 ] != 'S'		3252006	1		!=			
ANR	3252209	ArrayIndexing	return_line . argv [ 0 ] [ 0 ]		3252006	0					
ANR	3252210	ArrayIndexing	return_line . argv [ 0 ]		3252006	0					
ANR	3252211	MemberAccess	return_line . argv		3252006	0					
ANR	3252212	Identifier	return_line		3252006	0					
ANR	3252213	Identifier	argv		3252006	1					
ANR	3252214	PrimaryExpression	0		3252006	1					
ANR	3252215	PrimaryExpression	0		3252006	1					
ANR	3252216	PrimaryExpression	'S'		3252006	1					
ANR	3252217	CompoundStatement		52:63:1553:1553	3252006	1					
ANR	3252218	ExpressionStatement	"EXCEPT ( ""Bad %s Request: %s"" , pending_command , return_line . argc ? return_line . argv [ 0 ] : ""Empty response"" )"	2249:2:57694:57793	3252006	0	True				
ANR	3252219	CallExpression	"EXCEPT ( ""Bad %s Request: %s"" , pending_command , return_line . argc ? return_line . argv [ 0 ] : ""Empty response"" )"		3252006	0					
ANR	3252220	Callee	EXCEPT		3252006	0					
ANR	3252221	Identifier	EXCEPT		3252006	0					
ANR	3252222	ArgumentList	"""Bad %s Request: %s"""		3252006	1					
ANR	3252223	Argument	"""Bad %s Request: %s"""		3252006	0					
ANR	3252224	PrimaryExpression	"""Bad %s Request: %s"""		3252006	0					
ANR	3252225	Argument	pending_command		3252006	1					
ANR	3252226	Identifier	pending_command		3252006	0					
ANR	3252227	Argument	"return_line . argc ? return_line . argv [ 0 ] : ""Empty response"""		3252006	2					
ANR	3252228	ConditionalExpression	"return_line . argc ? return_line . argv [ 0 ] : ""Empty response"""		3252006	0					
ANR	3252229	Condition	return_line . argc		3252006	0					
ANR	3252230	MemberAccess	return_line . argc		3252006	0					
ANR	3252231	Identifier	return_line		3252006	0					
ANR	3252232	Identifier	argc		3252006	1					
ANR	3252233	ArrayIndexing	return_line . argv [ 0 ]		3252006	1					
ANR	3252234	MemberAccess	return_line . argv		3252006	0					
ANR	3252235	Identifier	return_line		3252006	0					
ANR	3252236	Identifier	argv		3252006	1					
ANR	3252237	PrimaryExpression	0		3252006	1					
ANR	3252238	PrimaryExpression	"""Empty response"""		3252006	2					
ANR	3252239	ExpressionStatement	pending_submitted_to_gahp = true	2252:1:57800:57832	3252006	8	True				
ANR	3252240	AssignmentExpression	pending_submitted_to_gahp = true		3252006	0		=			
ANR	3252241	Identifier	pending_submitted_to_gahp		3252006	0					
ANR	3252242	Identifier	true		3252006	1					
ANR	3252243	ExpressionStatement	server -> num_pending_requests ++	2253:1:57835:57865	3252006	9	True				
ANR	3252244	PostIncDecOperationExpression	server -> num_pending_requests ++		3252006	0					
ANR	3252245	PtrMemberAccess	server -> num_pending_requests		3252006	0					
ANR	3252246	Identifier	server		3252006	0					
ANR	3252247	Identifier	num_pending_requests		3252006	1					
ANR	3252248	IncDec	++		3252006	1					
ANR	3252249	IfStatement	if ( pending_timeout )		3252006	10					
ANR	3252250	Condition	pending_timeout	2255:5:57873:57887	3252006	0	True				
ANR	3252251	Identifier	pending_timeout		3252006	0					
ANR	3252252	CompoundStatement		60:22:1768:1768	3252006	1					
ANR	3252253	ExpressionStatement	"pending_timeout_tid = daemonCore -> Register_Timer ( pending_timeout + 1 , ( TimerHandlercpp ) & GahpClient :: reset_user_timer_alarm , ""GahpClient::reset_user_timer_alarm"" , this )"	2256:2:57894:58066	3252006	0	True				
ANR	3252254	AssignmentExpression	"pending_timeout_tid = daemonCore -> Register_Timer ( pending_timeout + 1 , ( TimerHandlercpp ) & GahpClient :: reset_user_timer_alarm , ""GahpClient::reset_user_timer_alarm"" , this )"		3252006	0		=			
ANR	3252255	Identifier	pending_timeout_tid		3252006	0					
ANR	3252256	CallExpression	"daemonCore -> Register_Timer ( pending_timeout + 1 , ( TimerHandlercpp ) & GahpClient :: reset_user_timer_alarm , ""GahpClient::reset_user_timer_alarm"" , this )"		3252006	1					
ANR	3252257	Callee	daemonCore -> Register_Timer		3252006	0					
ANR	3252258	PtrMemberAccess	daemonCore -> Register_Timer		3252006	0					
ANR	3252259	Identifier	daemonCore		3252006	0					
ANR	3252260	Identifier	Register_Timer		3252006	1					
ANR	3252261	ArgumentList	pending_timeout + 1		3252006	1					
ANR	3252262	Argument	pending_timeout + 1		3252006	0					
ANR	3252263	AdditiveExpression	pending_timeout + 1		3252006	0		+			
ANR	3252264	Identifier	pending_timeout		3252006	0					
ANR	3252265	PrimaryExpression	1		3252006	1					
ANR	3252266	Argument	( TimerHandlercpp ) & GahpClient :: reset_user_timer_alarm		3252006	1					
ANR	3252267	CastExpression	( TimerHandlercpp ) & GahpClient :: reset_user_timer_alarm		3252006	0					
ANR	3252268	CastTarget	TimerHandlercpp		3252006	0					
ANR	3252269	UnaryOperationExpression	& GahpClient :: reset_user_timer_alarm		3252006	1					
ANR	3252270	UnaryOperator	&		3252006	0					
ANR	3252271	Identifier	GahpClient :: reset_user_timer_alarm		3252006	1					
ANR	3252272	Argument	"""GahpClient::reset_user_timer_alarm"""		3252006	2					
ANR	3252273	PrimaryExpression	"""GahpClient::reset_user_timer_alarm"""		3252006	0					
ANR	3252274	Argument	this		3252006	3					
ANR	3252275	Identifier	this		3252006	0					
ANR	3252276	ExpressionStatement	pending_timeout += time ( NULL )	2259:2:58070:58099	3252006	1	True				
ANR	3252277	AssignmentExpression	pending_timeout += time ( NULL )		3252006	0		+=			
ANR	3252278	Identifier	pending_timeout		3252006	0					
ANR	3252279	CallExpression	time ( NULL )		3252006	1					
ANR	3252280	Callee	time		3252006	0					
ANR	3252281	Identifier	time		3252006	0					
ANR	3252282	ArgumentList	NULL		3252006	1					
ANR	3252283	Argument	NULL		3252006	0					
ANR	3252284	Identifier	NULL		3252006	0					
ANR	3252285	ReturnType	void		3252006	1					
ANR	3252286	Identifier	GahpClient :: now_pending		3252006	2					
ANR	3252287	ParameterList	"const char * command , const char * buf , GahpProxyInfo * cmd_proxy , PrioLevel prio_level"		3252006	3					
ANR	3252288	Parameter	const char * command	2194:24:56029:56047	3252006	0	True				
ANR	3252289	ParameterType	const char *		3252006	0					
ANR	3252290	Identifier	command		3252006	1					
ANR	3252291	Parameter	const char * buf	2194:44:56049:56063	3252006	1	True				
ANR	3252292	ParameterType	const char *		3252006	0					
ANR	3252293	Identifier	buf		3252006	1					
ANR	3252294	Parameter	GahpProxyInfo * cmd_proxy	2195:6:56072:56095	3252006	2	True				
ANR	3252295	ParameterType	GahpProxyInfo *		3252006	0					
ANR	3252296	Identifier	cmd_proxy		3252006	1					
ANR	3252297	Parameter	PrioLevel prio_level	2195:32:56098:56117	3252006	3	True				
ANR	3252298	ParameterType	PrioLevel		3252006	0					
ANR	3252299	Identifier	prio_level		3252006	1					
ANR	3252300	CFGEntryNode	ENTRY		3252006		True				
ANR	3252301	CFGExitNode	EXIT		3252006		True				
ANR	3252302	Symbol	server		3252006						
ANR	3252303	Symbol	* server		3252006						
ANR	3252304	Symbol	server -> is_initialized		3252006						
ANR	3252305	Symbol	return_line		3252006						
ANR	3252306	Symbol	return_line . argv		3252006						
ANR	3252307	Symbol	pending_proxy		3252006						
ANR	3252308	Symbol	pending_submitted_to_gahp		3252006						
ANR	3252309	Symbol	* * return_line . argv		3252006						
ANR	3252310	Symbol	& GahpClient :: reset_user_timer_alarm		3252006						
ANR	3252311	Symbol	pending_timeout_tid		3252006						
ANR	3252312	Symbol	server -> max_pending_requests		3252006						
ANR	3252313	Symbol	server -> waitingMediumPrio		3252006						
ANR	3252314	Symbol	daemonCore		3252006						
ANR	3252315	Symbol	server -> requestTable		3252006						
ANR	3252316	Symbol	NULL		3252006						
ANR	3252317	Symbol	prio_level		3252006						
ANR	3252318	Symbol	* * return_line		3252006						
ANR	3252319	Symbol	* return_line . argv		3252006						
ANR	3252320	Symbol	this		3252006						
ANR	3252321	Symbol	server -> can_cache_proxies		3252006						
ANR	3252322	Symbol	pending_command		3252006						
ANR	3252323	Symbol	pending_timeout		3252006						
ANR	3252324	Symbol	cmd_proxy		3252006						
ANR	3252325	Symbol	m_timeout		3252006						
ANR	3252326	Symbol	command		3252006						
ANR	3252327	Symbol	buf		3252006						
ANR	3252328	Symbol	server -> num_pending_requests		3252006						
ANR	3252329	Symbol	pending_reqid		3252006						
ANR	3252330	Symbol	pending_args		3252006						
ANR	3252331	Symbol	* return_line		3252006						
ANR	3252332	Symbol	return_line . argc		3252006						
ANR	3252333	Symbol	server -> waitingHighPrio		3252006						
ANR	3252334	Symbol	* daemonCore		3252006						
ANR	3252335	Symbol	daemonCore -> Register_Timer		3252006						
ANR	3252336	Symbol	server -> new_reqid		3252006						
ANR	3252337	Symbol	true		3252006						
ANR	3252338	Symbol	server -> waitingLowPrio		3252006						
ANR	3252339	Symbol	strdup		3252006						
ANR	3252340	Symbol	time		3252006						
ANR	3252341	Symbol	server -> useCachedProxy		3252006						
ANR	3252342	DeclStmt									
ANR	3252343	Decl							Gahp_Args	Gahp_Args *	r
ANR	3252344	Function	GahpServer :: poll	2296:0:58892:64431							
ANR	3252345	FunctionDef	GahpServer :: poll ()		3252344	0					
ANR	3252346	CompoundStatement		2298:0:58916:64431	3252344	0					
ANR	3252347	IdentifierDeclStatement	Gahp_Args * result = NULL ;	2299:1:58919:58943	3252344	0	True				
ANR	3252348	IdentifierDecl	* result = NULL		3252344	0					
ANR	3252349	IdentifierDeclType	Gahp_Args *		3252344	0					
ANR	3252350	Identifier	result		3252344	1					
ANR	3252351	AssignmentExpression	* result = NULL		3252344	2		=			
ANR	3252352	Identifier	NULL		3252344	0					
ANR	3252353	Identifier	NULL		3252344	1					
ANR	3252354	IdentifierDeclStatement	int num_results = 0 ;	2300:1:58946:58965	3252344	1	True				
ANR	3252355	IdentifierDecl	num_results = 0		3252344	0					
ANR	3252356	IdentifierDeclType	int		3252344	0					
ANR	3252357	Identifier	num_results		3252344	1					
ANR	3252358	AssignmentExpression	num_results = 0		3252344	2		=			
ANR	3252359	Identifier	num_results		3252344	0					
ANR	3252360	PrimaryExpression	0		3252344	1					
ANR	3252361	IdentifierDeclStatement	"int i , result_reqid ;"	2301:1:58968:58987	3252344	2	True				
ANR	3252362	IdentifierDecl	i		3252344	0					
ANR	3252363	IdentifierDeclType	int		3252344	0					
ANR	3252364	Identifier	i		3252344	1					
ANR	3252365	IdentifierDecl	result_reqid		3252344	1					
ANR	3252366	IdentifierDeclType	int		3252344	0					
ANR	3252367	Identifier	result_reqid		3252344	1					
ANR	3252368	IdentifierDeclStatement	GahpClient * entry ;	2302:1:58990:59007	3252344	3	True				
ANR	3252369	IdentifierDecl	* entry		3252344	0					
ANR	3252370	IdentifierDeclType	GahpClient *		3252344	0					
ANR	3252371	Identifier	entry		3252344	1					
ANR	3252372	IdentifierDeclStatement	ExtArray < Gahp_Args * > result_lines ;	2303:1:59010:59043	3252344	4	True				
ANR	3252373	IdentifierDecl	result_lines		3252344	0					
ANR	3252374	IdentifierDeclType	ExtArray < Gahp_Args * >		3252344	0					
ANR	3252375	Identifier	result_lines		3252344	1					
ANR	3252376	ExpressionStatement	m_in_results = true	2305:1:59047:59066	3252344	5	True				
ANR	3252377	AssignmentExpression	m_in_results = true		3252344	0		=			
ANR	3252378	Identifier	m_in_results		3252344	0					
ANR	3252379	Identifier	true		3252344	1					
ANR	3252380	ExpressionStatement	poll_pending = false	2309:1:59152:59172	3252344	6	True				
ANR	3252381	AssignmentExpression	poll_pending = false		3252344	0		=			
ANR	3252382	Identifier	poll_pending		3252344	0					
ANR	3252383	Identifier	false		3252344	1					
ANR	3252384	ExpressionStatement	"write_line ( ""RESULTS"" )"	2312:1:59231:59252	3252344	7	True				
ANR	3252385	CallExpression	"write_line ( ""RESULTS"" )"		3252344	0					
ANR	3252386	Callee	write_line		3252344	0					
ANR	3252387	Identifier	write_line		3252344	0					
ANR	3252388	ArgumentList	"""RESULTS"""		3252344	1					
ANR	3252389	Argument	"""RESULTS"""		3252344	0					
ANR	3252390	PrimaryExpression	"""RESULTS"""		3252344	0					
ANR	3252391	Statement	result	2316:1:59354:59359	3252344	8	True				
ANR	3252392	Statement	=	2316:8:59361:59361	3252344	9	True				
ANR	3252393	Statement	new	2316:10:59363:59365	3252344	10	True				
ANR	3252394	ExpressionStatement	Gahp_Args	2316:14:59367:59376	3252344	11	True				
ANR	3252395	Identifier	Gahp_Args		3252344	0					
ANR	3252396	ExpressionStatement	ASSERT ( result )	2317:1:59379:59393	3252344	12	True				
ANR	3252397	CallExpression	ASSERT ( result )		3252344	0					
ANR	3252398	Callee	ASSERT		3252344	0					
ANR	3252399	Identifier	ASSERT		3252344	0					
ANR	3252400	ArgumentList	result		3252344	1					
ANR	3252401	Argument	result		3252344	0					
ANR	3252402	Identifier	result		3252344	0					
ANR	3252403	ExpressionStatement	read_argv ( result )	2318:1:59396:59413	3252344	13	True				
ANR	3252404	CallExpression	read_argv ( result )		3252344	0					
ANR	3252405	Callee	read_argv		3252344	0					
ANR	3252406	Identifier	read_argv		3252344	0					
ANR	3252407	ArgumentList	result		3252344	1					
ANR	3252408	Argument	result		3252344	0					
ANR	3252409	Identifier	result		3252344	0					
ANR	3252410	IfStatement	if ( result -> argc < 2 || result -> argv [ 0 ] [ 0 ] != 'S' )		3252344	14					
ANR	3252411	Condition	result -> argc < 2 || result -> argv [ 0 ] [ 0 ] != 'S'	2319:6:59421:59465	3252344	0	True				
ANR	3252412	OrExpression	result -> argc < 2 || result -> argv [ 0 ] [ 0 ] != 'S'		3252344	0		||			
ANR	3252413	RelationalExpression	result -> argc < 2		3252344	0		<			
ANR	3252414	PtrMemberAccess	result -> argc		3252344	0					
ANR	3252415	Identifier	result		3252344	0					
ANR	3252416	Identifier	argc		3252344	1					
ANR	3252417	PrimaryExpression	2		3252344	1					
ANR	3252418	EqualityExpression	result -> argv [ 0 ] [ 0 ] != 'S'		3252344	1		!=			
ANR	3252419	ArrayIndexing	result -> argv [ 0 ] [ 0 ]		3252344	0					
ANR	3252420	ArrayIndexing	result -> argv [ 0 ]		3252344	0					
ANR	3252421	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252422	Identifier	result		3252344	0					
ANR	3252423	Identifier	argv		3252344	1					
ANR	3252424	PrimaryExpression	0		3252344	1					
ANR	3252425	PrimaryExpression	0		3252344	1					
ANR	3252426	PrimaryExpression	'S'		3252344	1					
ANR	3252427	CompoundStatement		22:54:552:552	3252344	1					
ANR	3252428	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command 'RESULTS' failed\\n"" )"	2321:2:59489:59540	3252344	0	True				
ANR	3252429	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command 'RESULTS' failed\\n"" )"		3252344	0					
ANR	3252430	Callee	dprintf		3252344	0					
ANR	3252431	Identifier	dprintf		3252344	0					
ANR	3252432	ArgumentList	D_ALWAYS		3252344	1					
ANR	3252433	Argument	D_ALWAYS		3252344	0					
ANR	3252434	Identifier	D_ALWAYS		3252344	0					
ANR	3252435	Argument	"""GAHP command 'RESULTS' failed\\n"""		3252344	1					
ANR	3252436	PrimaryExpression	"""GAHP command 'RESULTS' failed\\n"""		3252344	0					
ANR	3252437	Statement	delete	2322:2:59544:59549	3252344	1	True				
ANR	3252438	ExpressionStatement	result	2322:9:59551:59557	3252344	2	True				
ANR	3252439	Identifier	result		3252344	0					
ANR	3252440	ExpressionStatement	m_in_results = false	2323:2:59561:59581	3252344	3	True				
ANR	3252441	AssignmentExpression	m_in_results = false		3252344	0		=			
ANR	3252442	Identifier	m_in_results		3252344	0					
ANR	3252443	Identifier	false		3252344	1					
ANR	3252444	ReturnStatement	return ;	2324:2:59585:59591	3252344	4	True				
ANR	3252445	ExpressionStatement	num_results = atoi ( result -> argv [ 1 ] )	2326:1:59597:59632	3252344	15	True				
ANR	3252446	AssignmentExpression	num_results = atoi ( result -> argv [ 1 ] )		3252344	0		=			
ANR	3252447	Identifier	num_results		3252344	0					
ANR	3252448	CallExpression	atoi ( result -> argv [ 1 ] )		3252344	1					
ANR	3252449	Callee	atoi		3252344	0					
ANR	3252450	Identifier	atoi		3252344	0					
ANR	3252451	ArgumentList	result -> argv [ 1 ]		3252344	1					
ANR	3252452	Argument	result -> argv [ 1 ]		3252344	0					
ANR	3252453	ArrayIndexing	result -> argv [ 1 ]		3252344	0					
ANR	3252454	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252455	Identifier	result		3252344	0					
ANR	3252456	Identifier	argv		3252344	1					
ANR	3252457	PrimaryExpression	1		3252344	1					
ANR	3252458	ForStatement	for ( i = 0 ; i < num_results ; i ++ )		3252344	16					
ANR	3252459	ForInit	i = 0 ;	2329:6:59686:59689	3252344	0	True				
ANR	3252460	AssignmentExpression	i = 0		3252344	0		=			
ANR	3252461	Identifier	i		3252344	0					
ANR	3252462	PrimaryExpression	0		3252344	1					
ANR	3252463	Condition	i < num_results	2329:11:59691:59705	3252344	1	True				
ANR	3252464	RelationalExpression	i < num_results		3252344	0		<			
ANR	3252465	Identifier	i		3252344	0					
ANR	3252466	Identifier	num_results		3252344	1					
ANR	3252467	PostIncDecOperationExpression	i ++	2329:28:59708:59710	3252344	2	True				
ANR	3252468	Identifier	i		3252344	0					
ANR	3252469	IncDec	++		3252344	1					
ANR	3252470	CompoundStatement		32:33:796:796	3252344	3					
ANR	3252471	IfStatement	if ( ! result )		3252344	0					
ANR	3252472	Condition	! result	2331:7:59782:59788	3252344	0	True				
ANR	3252473	UnaryOperationExpression	! result		3252344	0					
ANR	3252474	UnaryOperator	!		3252344	0					
ANR	3252475	Identifier	result		3252344	1					
ANR	3252476	CompoundStatement		34:17:875:875	3252344	1					
ANR	3252477	Statement	result	2332:3:59797:59802	3252344	0	True				
ANR	3252478	Statement	=	2332:10:59804:59804	3252344	1	True				
ANR	3252479	Statement	new	2332:12:59806:59808	3252344	2	True				
ANR	3252480	ExpressionStatement	Gahp_Args	2332:16:59810:59819	3252344	3	True				
ANR	3252481	Identifier	Gahp_Args		3252344	0					
ANR	3252482	ExpressionStatement	ASSERT ( result )	2333:3:59824:59838	3252344	4	True				
ANR	3252483	CallExpression	ASSERT ( result )		3252344	0					
ANR	3252484	Callee	ASSERT		3252344	0					
ANR	3252485	Identifier	ASSERT		3252344	0					
ANR	3252486	ArgumentList	result		3252344	1					
ANR	3252487	Argument	result		3252344	0					
ANR	3252488	Identifier	result		3252344	0					
ANR	3252489	ExpressionStatement	read_argv ( result )	2335:2:59846:59863	3252344	1	True				
ANR	3252490	CallExpression	read_argv ( result )		3252344	0					
ANR	3252491	Callee	read_argv		3252344	0					
ANR	3252492	Identifier	read_argv		3252344	0					
ANR	3252493	ArgumentList	result		3252344	1					
ANR	3252494	Argument	result		3252344	0					
ANR	3252495	Identifier	result		3252344	0					
ANR	3252496	ExpressionStatement	result_lines [ i ] = result	2336:2:59867:59891	3252344	2	True				
ANR	3252497	AssignmentExpression	result_lines [ i ] = result		3252344	0		=			
ANR	3252498	ArrayIndexing	result_lines [ i ]		3252344	0					
ANR	3252499	Identifier	result_lines		3252344	0					
ANR	3252500	Identifier	i		3252344	1					
ANR	3252501	Identifier	result		3252344	1					
ANR	3252502	ExpressionStatement	result = NULL	2337:2:59895:59908	3252344	3	True				
ANR	3252503	AssignmentExpression	result = NULL		3252344	0		=			
ANR	3252504	Identifier	result		3252344	0					
ANR	3252505	Identifier	NULL		3252344	1					
ANR	3252506	ExpressionStatement	m_in_results = false	2343:1:60057:60077	3252344	17	True				
ANR	3252507	AssignmentExpression	m_in_results = false		3252344	0		=			
ANR	3252508	Identifier	m_in_results		3252344	0					
ANR	3252509	Identifier	false		3252344	1					
ANR	3252510	IfStatement	if ( buffered_peek ( ) > 0 )		3252344	18					
ANR	3252511	Condition	buffered_peek ( ) > 0	2344:6:60085:60103	3252344	0	True				
ANR	3252512	RelationalExpression	buffered_peek ( ) > 0		3252344	0		>			
ANR	3252513	CallExpression	buffered_peek ( )		3252344	0					
ANR	3252514	Callee	buffered_peek		3252344	0					
ANR	3252515	Identifier	buffered_peek		3252344	0					
ANR	3252516	ArgumentList			3252344	1					
ANR	3252517	PrimaryExpression	0		3252344	1					
ANR	3252518	CompoundStatement		47:28:1190:1190	3252344	1					
ANR	3252519	ExpressionStatement	skip_next_r = true	2345:2:60111:60129	3252344	0	True				
ANR	3252520	AssignmentExpression	skip_next_r = true		3252344	0		=			
ANR	3252521	Identifier	skip_next_r		3252344	0					
ANR	3252522	Identifier	true		3252344	1					
ANR	3252523	ExpressionStatement	poll_real_soon ( )	2346:2:60133:60149	3252344	1	True				
ANR	3252524	CallExpression	poll_real_soon ( )		3252344	0					
ANR	3252525	Callee	poll_real_soon		3252344	0					
ANR	3252526	Identifier	poll_real_soon		3252344	0					
ANR	3252527	ArgumentList			3252344	1					
ANR	3252528	ForStatement	for ( i = 0 ; i < num_results ; i ++ )		3252344	19					
ANR	3252529	ForInit	i = 0 ;	2358:6:60631:60634	3252344	0	True				
ANR	3252530	AssignmentExpression	i = 0		3252344	0		=			
ANR	3252531	Identifier	i		3252344	0					
ANR	3252532	PrimaryExpression	0		3252344	1					
ANR	3252533	Condition	i < num_results	2358:11:60636:60650	3252344	1	True				
ANR	3252534	RelationalExpression	i < num_results		3252344	0		<			
ANR	3252535	Identifier	i		3252344	0					
ANR	3252536	Identifier	num_results		3252344	1					
ANR	3252537	PostIncDecOperationExpression	i ++	2358:28:60653:60655	3252344	2	True				
ANR	3252538	Identifier	i		3252344	0					
ANR	3252539	IncDec	++		3252344	1					
ANR	3252540	CompoundStatement		61:33:1741:1741	3252344	3					
ANR	3252541	IfStatement	if ( result )		3252344	0					
ANR	3252542	Condition	result	2359:7:60667:60672	3252344	0	True				
ANR	3252543	Identifier	result		3252344	0					
ANR	3252544	Statement	delete	2359:16:60676:60681	3252344	1	True				
ANR	3252545	ExpressionStatement	result	2359:23:60683:60689	3252344	1	True				
ANR	3252546	Identifier	result		3252344	0					
ANR	3252547	ExpressionStatement	result = result_lines [ i ]	2360:2:60693:60717	3252344	2	True				
ANR	3252548	AssignmentExpression	result = result_lines [ i ]		3252344	0		=			
ANR	3252549	Identifier	result		3252344	0					
ANR	3252550	ArrayIndexing	result_lines [ i ]		3252344	1					
ANR	3252551	Identifier	result_lines		3252344	0					
ANR	3252552	Identifier	i		3252344	1					
ANR	3252553	ExpressionStatement	result_reqid = 0	2362:2:60722:60738	3252344	3	True				
ANR	3252554	AssignmentExpression	result_reqid = 0		3252344	0		=			
ANR	3252555	Identifier	result_reqid		3252344	0					
ANR	3252556	PrimaryExpression	0		3252344	1					
ANR	3252557	IfStatement	if ( result -> argc > 0 )		3252344	4					
ANR	3252558	Condition	result -> argc > 0	2363:7:60747:60762	3252344	0	True				
ANR	3252559	RelationalExpression	result -> argc > 0		3252344	0		>			
ANR	3252560	PtrMemberAccess	result -> argc		3252344	0					
ANR	3252561	Identifier	result		3252344	0					
ANR	3252562	Identifier	argc		3252344	1					
ANR	3252563	PrimaryExpression	0		3252344	1					
ANR	3252564	CompoundStatement		66:26:1849:1849	3252344	1					
ANR	3252565	ExpressionStatement	result_reqid = atoi ( result -> argv [ 0 ] )	2364:3:60771:60807	3252344	0	True				
ANR	3252566	AssignmentExpression	result_reqid = atoi ( result -> argv [ 0 ] )		3252344	0		=			
ANR	3252567	Identifier	result_reqid		3252344	0					
ANR	3252568	CallExpression	atoi ( result -> argv [ 0 ] )		3252344	1					
ANR	3252569	Callee	atoi		3252344	0					
ANR	3252570	Identifier	atoi		3252344	0					
ANR	3252571	ArgumentList	result -> argv [ 0 ]		3252344	1					
ANR	3252572	Argument	result -> argv [ 0 ]		3252344	0					
ANR	3252573	ArrayIndexing	result -> argv [ 0 ]		3252344	0					
ANR	3252574	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252575	Identifier	result		3252344	0					
ANR	3252576	Identifier	argv		3252344	1					
ANR	3252577	PrimaryExpression	0		3252344	1					
ANR	3252578	IfStatement	if ( result_reqid == 0 )		3252344	5					
ANR	3252579	Condition	result_reqid == 0	2366:7:60820:60836	3252344	0	True				
ANR	3252580	EqualityExpression	result_reqid == 0		3252344	0		==			
ANR	3252581	Identifier	result_reqid		3252344	0					
ANR	3252582	PrimaryExpression	0		3252344	1					
ANR	3252583	CompoundStatement		69:27:1923:1923	3252344	1					
ANR	3252584	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP - Bad RESULTS line\\n"" )"	2368:3:60898:60943	3252344	0	True				
ANR	3252585	CallExpression	"dprintf ( D_ALWAYS , ""GAHP - Bad RESULTS line\\n"" )"		3252344	0					
ANR	3252586	Callee	dprintf		3252344	0					
ANR	3252587	Identifier	dprintf		3252344	0					
ANR	3252588	ArgumentList	D_ALWAYS		3252344	1					
ANR	3252589	Argument	D_ALWAYS		3252344	0					
ANR	3252590	Identifier	D_ALWAYS		3252344	0					
ANR	3252591	Argument	"""GAHP - Bad RESULTS line\\n"""		3252344	1					
ANR	3252592	PrimaryExpression	"""GAHP - Bad RESULTS line\\n"""		3252344	0					
ANR	3252593	ContinueStatement	continue ;	2369:3:60948:60956	3252344	1	True				
ANR	3252594	IfStatement	if ( result_reqid == globus_gt2_gram_callback_reqid )		3252344	6					
ANR	3252595	Condition	result_reqid == globus_gt2_gram_callback_reqid	2374:7:61066:61111	3252344	0	True				
ANR	3252596	EqualityExpression	result_reqid == globus_gt2_gram_callback_reqid		3252344	0		==			
ANR	3252597	Identifier	result_reqid		3252344	0					
ANR	3252598	Identifier	globus_gt2_gram_callback_reqid		3252344	1					
ANR	3252599	CompoundStatement		77:56:2198:2198	3252344	1					
ANR	3252600	IfStatement	if ( result -> argc == 4 )		3252344	0					
ANR	3252601	Condition	result -> argc == 4	2375:8:61125:61141	3252344	0	True				
ANR	3252602	EqualityExpression	result -> argc == 4		3252344	0		==			
ANR	3252603	PtrMemberAccess	result -> argc		3252344	0					
ANR	3252604	Identifier	result		3252344	0					
ANR	3252605	Identifier	argc		3252344	1					
ANR	3252606	PrimaryExpression	4		3252344	1					
ANR	3252607	CompoundStatement		78:28:2228:2228	3252344	1					
ANR	3252608	ExpressionStatement	"( * globus_gt2_gram_callback_func ) ( globus_gt2_gram_user_callback_arg , result -> argv [ 1 ] , atoi ( result -> argv [ 2 ] ) , atoi ( result -> argv [ 3 ] ) )"	2376:4:61151:61292	3252344	0	True				
ANR	3252609	CallExpression	"( * globus_gt2_gram_callback_func ) ( globus_gt2_gram_user_callback_arg , result -> argv [ 1 ] , atoi ( result -> argv [ 2 ] ) , atoi ( result -> argv [ 3 ] ) )"		3252344	0					
ANR	3252610	Callee	* globus_gt2_gram_callback_func		3252344	0					
ANR	3252611	UnaryOperationExpression	* globus_gt2_gram_callback_func		3252344	0					
ANR	3252612	UnaryOperator	*		3252344	0					
ANR	3252613	Identifier	globus_gt2_gram_callback_func		3252344	1					
ANR	3252614	ArgumentList	globus_gt2_gram_user_callback_arg		3252344	1					
ANR	3252615	Argument	globus_gt2_gram_user_callback_arg		3252344	0					
ANR	3252616	Identifier	globus_gt2_gram_user_callback_arg		3252344	0					
ANR	3252617	Argument	result -> argv [ 1 ]		3252344	1					
ANR	3252618	ArrayIndexing	result -> argv [ 1 ]		3252344	0					
ANR	3252619	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252620	Identifier	result		3252344	0					
ANR	3252621	Identifier	argv		3252344	1					
ANR	3252622	PrimaryExpression	1		3252344	1					
ANR	3252623	Argument	atoi ( result -> argv [ 2 ] )		3252344	2					
ANR	3252624	CallExpression	atoi ( result -> argv [ 2 ] )		3252344	0					
ANR	3252625	Callee	atoi		3252344	0					
ANR	3252626	Identifier	atoi		3252344	0					
ANR	3252627	ArgumentList	result -> argv [ 2 ]		3252344	1					
ANR	3252628	Argument	result -> argv [ 2 ]		3252344	0					
ANR	3252629	ArrayIndexing	result -> argv [ 2 ]		3252344	0					
ANR	3252630	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252631	Identifier	result		3252344	0					
ANR	3252632	Identifier	argv		3252344	1					
ANR	3252633	PrimaryExpression	2		3252344	1					
ANR	3252634	Argument	atoi ( result -> argv [ 3 ] )		3252344	3					
ANR	3252635	CallExpression	atoi ( result -> argv [ 3 ] )		3252344	0					
ANR	3252636	Callee	atoi		3252344	0					
ANR	3252637	Identifier	atoi		3252344	0					
ANR	3252638	ArgumentList	result -> argv [ 3 ]		3252344	1					
ANR	3252639	Argument	result -> argv [ 3 ]		3252344	0					
ANR	3252640	ArrayIndexing	result -> argv [ 3 ]		3252344	0					
ANR	3252641	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252642	Identifier	result		3252344	0					
ANR	3252643	Identifier	argv		3252344	1					
ANR	3252644	PrimaryExpression	3		3252344	1					
ANR	3252645	ElseStatement	else		3252344	0					
ANR	3252646	CompoundStatement		81:10:2387:2387	3252344	0					
ANR	3252647	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP - Bad client_callback results line\\n"" )"	2379:4:61310:61380	3252344	0	True				
ANR	3252648	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP - Bad client_callback results line\\n"" )"		3252344	0					
ANR	3252649	Callee	dprintf		3252344	0					
ANR	3252650	Identifier	dprintf		3252344	0					
ANR	3252651	ArgumentList	D_FULLDEBUG		3252344	1					
ANR	3252652	Argument	D_FULLDEBUG		3252344	0					
ANR	3252653	Identifier	D_FULLDEBUG		3252344	0					
ANR	3252654	Argument	"""GAHP - Bad client_callback results line\\n"""		3252344	1					
ANR	3252655	PrimaryExpression	"""GAHP - Bad client_callback results line\\n"""		3252344	0					
ANR	3252656	ContinueStatement	continue ;	2382:3:61390:61398	3252344	1	True				
ANR	3252657	IfStatement	if ( result_reqid == globus_gt4_gram_callback_reqid )		3252344	7					
ANR	3252658	Condition	result_reqid == globus_gt4_gram_callback_reqid	2387:7:61512:61557	3252344	0	True				
ANR	3252659	EqualityExpression	result_reqid == globus_gt4_gram_callback_reqid		3252344	0		==			
ANR	3252660	Identifier	result_reqid		3252344	0					
ANR	3252661	Identifier	globus_gt4_gram_callback_reqid		3252344	1					
ANR	3252662	CompoundStatement		90:56:2644:2644	3252344	1					
ANR	3252663	IfStatement	if ( result -> argc == 5 )		3252344	0					
ANR	3252664	Condition	result -> argc == 5	2388:8:61571:61587	3252344	0	True				
ANR	3252665	EqualityExpression	result -> argc == 5		3252344	0		==			
ANR	3252666	PtrMemberAccess	result -> argc		3252344	0					
ANR	3252667	Identifier	result		3252344	0					
ANR	3252668	Identifier	argc		3252344	1					
ANR	3252669	PrimaryExpression	5		3252344	1					
ANR	3252670	CompoundStatement		91:28:2674:2674	3252344	1					
ANR	3252671	ExpressionStatement	"( * globus_gt4_gram_callback_func ) ( globus_gt4_gram_user_callback_arg , result -> argv [ 1 ] , result -> argv [ 2 ] , strcmp ( result -> argv [ 3 ] , NULLSTRING ) ? result -> argv [ 3 ] : NULL , strcmp ( result -> argv [ 4 ] , NULLSTRING ) ? atoi ( result -> argv [ 4 ] ) : GT4_NO_EXIT_CODE )"	2389:4:61597:61866	3252344	0	True				
ANR	3252672	CallExpression	"( * globus_gt4_gram_callback_func ) ( globus_gt4_gram_user_callback_arg , result -> argv [ 1 ] , result -> argv [ 2 ] , strcmp ( result -> argv [ 3 ] , NULLSTRING ) ? result -> argv [ 3 ] : NULL , strcmp ( result -> argv [ 4 ] , NULLSTRING ) ? atoi ( result -> argv [ 4 ] ) : GT4_NO_EXIT_CODE )"		3252344	0					
ANR	3252673	Callee	* globus_gt4_gram_callback_func		3252344	0					
ANR	3252674	UnaryOperationExpression	* globus_gt4_gram_callback_func		3252344	0					
ANR	3252675	UnaryOperator	*		3252344	0					
ANR	3252676	Identifier	globus_gt4_gram_callback_func		3252344	1					
ANR	3252677	ArgumentList	globus_gt4_gram_user_callback_arg		3252344	1					
ANR	3252678	Argument	globus_gt4_gram_user_callback_arg		3252344	0					
ANR	3252679	Identifier	globus_gt4_gram_user_callback_arg		3252344	0					
ANR	3252680	Argument	result -> argv [ 1 ]		3252344	1					
ANR	3252681	ArrayIndexing	result -> argv [ 1 ]		3252344	0					
ANR	3252682	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252683	Identifier	result		3252344	0					
ANR	3252684	Identifier	argv		3252344	1					
ANR	3252685	PrimaryExpression	1		3252344	1					
ANR	3252686	Argument	result -> argv [ 2 ]		3252344	2					
ANR	3252687	ArrayIndexing	result -> argv [ 2 ]		3252344	0					
ANR	3252688	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252689	Identifier	result		3252344	0					
ANR	3252690	Identifier	argv		3252344	1					
ANR	3252691	PrimaryExpression	2		3252344	1					
ANR	3252692	Argument	"strcmp ( result -> argv [ 3 ] , NULLSTRING ) ? result -> argv [ 3 ] : NULL"		3252344	3					
ANR	3252693	ConditionalExpression	"strcmp ( result -> argv [ 3 ] , NULLSTRING ) ? result -> argv [ 3 ] : NULL"		3252344	0					
ANR	3252694	Condition	"strcmp ( result -> argv [ 3 ] , NULLSTRING )"		3252344	0					
ANR	3252695	CallExpression	"strcmp ( result -> argv [ 3 ] , NULLSTRING )"		3252344	0					
ANR	3252696	Callee	strcmp		3252344	0					
ANR	3252697	Identifier	strcmp		3252344	0					
ANR	3252698	ArgumentList	result -> argv [ 3 ]		3252344	1					
ANR	3252699	Argument	result -> argv [ 3 ]		3252344	0					
ANR	3252700	ArrayIndexing	result -> argv [ 3 ]		3252344	0					
ANR	3252701	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252702	Identifier	result		3252344	0					
ANR	3252703	Identifier	argv		3252344	1					
ANR	3252704	PrimaryExpression	3		3252344	1					
ANR	3252705	Argument	NULLSTRING		3252344	1					
ANR	3252706	Identifier	NULLSTRING		3252344	0					
ANR	3252707	ArrayIndexing	result -> argv [ 3 ]		3252344	1					
ANR	3252708	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252709	Identifier	result		3252344	0					
ANR	3252710	Identifier	argv		3252344	1					
ANR	3252711	PrimaryExpression	3		3252344	1					
ANR	3252712	Identifier	NULL		3252344	2					
ANR	3252713	Argument	"strcmp ( result -> argv [ 4 ] , NULLSTRING ) ? atoi ( result -> argv [ 4 ] ) : GT4_NO_EXIT_CODE"		3252344	4					
ANR	3252714	ConditionalExpression	"strcmp ( result -> argv [ 4 ] , NULLSTRING ) ? atoi ( result -> argv [ 4 ] ) : GT4_NO_EXIT_CODE"		3252344	0					
ANR	3252715	Condition	"strcmp ( result -> argv [ 4 ] , NULLSTRING )"		3252344	0					
ANR	3252716	CallExpression	"strcmp ( result -> argv [ 4 ] , NULLSTRING )"		3252344	0					
ANR	3252717	Callee	strcmp		3252344	0					
ANR	3252718	Identifier	strcmp		3252344	0					
ANR	3252719	ArgumentList	result -> argv [ 4 ]		3252344	1					
ANR	3252720	Argument	result -> argv [ 4 ]		3252344	0					
ANR	3252721	ArrayIndexing	result -> argv [ 4 ]		3252344	0					
ANR	3252722	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252723	Identifier	result		3252344	0					
ANR	3252724	Identifier	argv		3252344	1					
ANR	3252725	PrimaryExpression	4		3252344	1					
ANR	3252726	Argument	NULLSTRING		3252344	1					
ANR	3252727	Identifier	NULLSTRING		3252344	0					
ANR	3252728	CallExpression	atoi ( result -> argv [ 4 ] )		3252344	1					
ANR	3252729	Callee	atoi		3252344	0					
ANR	3252730	Identifier	atoi		3252344	0					
ANR	3252731	ArgumentList	result -> argv [ 4 ]		3252344	1					
ANR	3252732	Argument	result -> argv [ 4 ]		3252344	0					
ANR	3252733	ArrayIndexing	result -> argv [ 4 ]		3252344	0					
ANR	3252734	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252735	Identifier	result		3252344	0					
ANR	3252736	Identifier	argv		3252344	1					
ANR	3252737	PrimaryExpression	4		3252344	1					
ANR	3252738	Identifier	GT4_NO_EXIT_CODE		3252344	2					
ANR	3252739	ElseStatement	else		3252344	0					
ANR	3252740	CompoundStatement		96:10:2961:2961	3252344	0					
ANR	3252741	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP - Bad client_callback results line\\n"" )"	2394:4:61884:61954	3252344	0	True				
ANR	3252742	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP - Bad client_callback results line\\n"" )"		3252344	0					
ANR	3252743	Callee	dprintf		3252344	0					
ANR	3252744	Identifier	dprintf		3252344	0					
ANR	3252745	ArgumentList	D_FULLDEBUG		3252344	1					
ANR	3252746	Argument	D_FULLDEBUG		3252344	0					
ANR	3252747	Identifier	D_FULLDEBUG		3252344	0					
ANR	3252748	Argument	"""GAHP - Bad client_callback results line\\n"""		3252344	1					
ANR	3252749	PrimaryExpression	"""GAHP - Bad client_callback results line\\n"""		3252344	0					
ANR	3252750	ContinueStatement	continue ;	2397:3:61964:61972	3252344	1	True				
ANR	3252751	IfStatement	if ( result_reqid == unicore_gahp_callback_reqid )		3252344	8					
ANR	3252752	Condition	result_reqid == unicore_gahp_callback_reqid	2402:7:62078:62120	3252344	0	True				
ANR	3252753	EqualityExpression	result_reqid == unicore_gahp_callback_reqid		3252344	0		==			
ANR	3252754	Identifier	result_reqid		3252344	0					
ANR	3252755	Identifier	unicore_gahp_callback_reqid		3252344	1					
ANR	3252756	CompoundStatement		105:53:3207:3207	3252344	1					
ANR	3252757	IfStatement	if ( result -> argc == 2 )		3252344	0					
ANR	3252758	Condition	result -> argc == 2	2403:8:62134:62150	3252344	0	True				
ANR	3252759	EqualityExpression	result -> argc == 2		3252344	0		==			
ANR	3252760	PtrMemberAccess	result -> argc		3252344	0					
ANR	3252761	Identifier	result		3252344	0					
ANR	3252762	Identifier	argc		3252344	1					
ANR	3252763	PrimaryExpression	2		3252344	1					
ANR	3252764	CompoundStatement		106:28:3237:3237	3252344	1					
ANR	3252765	ExpressionStatement	"( * unicore_gahp_callback_func ) ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) ? result -> argv [ 1 ] : NULL )"	2404:4:62160:62271	3252344	0	True				
ANR	3252766	CallExpression	"( * unicore_gahp_callback_func ) ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) ? result -> argv [ 1 ] : NULL )"		3252344	0					
ANR	3252767	Callee	* unicore_gahp_callback_func		3252344	0					
ANR	3252768	UnaryOperationExpression	* unicore_gahp_callback_func		3252344	0					
ANR	3252769	UnaryOperator	*		3252344	0					
ANR	3252770	Identifier	unicore_gahp_callback_func		3252344	1					
ANR	3252771	ArgumentList	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) ? result -> argv [ 1 ] : NULL"		3252344	1					
ANR	3252772	Argument	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) ? result -> argv [ 1 ] : NULL"		3252344	0					
ANR	3252773	ConditionalExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) ? result -> argv [ 1 ] : NULL"		3252344	0					
ANR	3252774	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3252344	0					
ANR	3252775	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3252344	0					
ANR	3252776	Callee	strcmp		3252344	0					
ANR	3252777	Identifier	strcmp		3252344	0					
ANR	3252778	ArgumentList	result -> argv [ 1 ]		3252344	1					
ANR	3252779	Argument	result -> argv [ 1 ]		3252344	0					
ANR	3252780	ArrayIndexing	result -> argv [ 1 ]		3252344	0					
ANR	3252781	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252782	Identifier	result		3252344	0					
ANR	3252783	Identifier	argv		3252344	1					
ANR	3252784	PrimaryExpression	1		3252344	1					
ANR	3252785	Argument	NULLSTRING		3252344	1					
ANR	3252786	Identifier	NULLSTRING		3252344	0					
ANR	3252787	ArrayIndexing	result -> argv [ 1 ]		3252344	1					
ANR	3252788	PtrMemberAccess	result -> argv		3252344	0					
ANR	3252789	Identifier	result		3252344	0					
ANR	3252790	Identifier	argv		3252344	1					
ANR	3252791	PrimaryExpression	1		3252344	1					
ANR	3252792	Identifier	NULL		3252344	2					
ANR	3252793	ElseStatement	else		3252344	0					
ANR	3252794	CompoundStatement		110:10:3366:3366	3252344	0					
ANR	3252795	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GAHP - Bad unicore callback results line\\n"" )"	2408:4:62289:62360	3252344	0	True				
ANR	3252796	CallExpression	"dprintf ( D_FULLDEBUG , ""GAHP - Bad unicore callback results line\\n"" )"		3252344	0					
ANR	3252797	Callee	dprintf		3252344	0					
ANR	3252798	Identifier	dprintf		3252344	0					
ANR	3252799	ArgumentList	D_FULLDEBUG		3252344	1					
ANR	3252800	Argument	D_FULLDEBUG		3252344	0					
ANR	3252801	Identifier	D_FULLDEBUG		3252344	0					
ANR	3252802	Argument	"""GAHP - Bad unicore callback results line\\n"""		3252344	1					
ANR	3252803	PrimaryExpression	"""GAHP - Bad unicore callback results line\\n"""		3252344	0					
ANR	3252804	ContinueStatement	continue ;	2411:3:62370:62378	3252344	1	True				
ANR	3252805	ExpressionStatement	entry = NULL	2415:2:62425:62437	3252344	9	True				
ANR	3252806	AssignmentExpression	entry = NULL		3252344	0		=			
ANR	3252807	Identifier	entry		3252344	0					
ANR	3252808	Identifier	NULL		3252344	1					
ANR	3252809	ExpressionStatement	"requestTable -> lookup ( result_reqid , entry )"	2416:2:62441:62481	3252344	10	True				
ANR	3252810	CallExpression	"requestTable -> lookup ( result_reqid , entry )"		3252344	0					
ANR	3252811	Callee	requestTable -> lookup		3252344	0					
ANR	3252812	PtrMemberAccess	requestTable -> lookup		3252344	0					
ANR	3252813	Identifier	requestTable		3252344	0					
ANR	3252814	Identifier	lookup		3252344	1					
ANR	3252815	ArgumentList	result_reqid		3252344	1					
ANR	3252816	Argument	result_reqid		3252344	0					
ANR	3252817	Identifier	result_reqid		3252344	0					
ANR	3252818	Argument	entry		3252344	1					
ANR	3252819	Identifier	entry		3252344	0					
ANR	3252820	IfStatement	if ( entry )		3252344	11					
ANR	3252821	Condition	entry	2417:7:62490:62494	3252344	0	True				
ANR	3252822	Identifier	entry		3252344	0					
ANR	3252823	CompoundStatement		120:15:3581:3581	3252344	1					
ANR	3252824	ExpressionStatement	entry -> pending_result = result	2419:3:62545:62575	3252344	0	True				
ANR	3252825	AssignmentExpression	entry -> pending_result = result		3252344	0		=			
ANR	3252826	PtrMemberAccess	entry -> pending_result		3252344	0					
ANR	3252827	Identifier	entry		3252344	0					
ANR	3252828	Identifier	pending_result		3252344	1					
ANR	3252829	Identifier	result		3252344	1					
ANR	3252830	ExpressionStatement	result = NULL	2421:3:62636:62649	3252344	1	True				
ANR	3252831	AssignmentExpression	result = NULL		3252344	0		=			
ANR	3252832	Identifier	result		3252344	0					
ANR	3252833	Identifier	NULL		3252344	1					
ANR	3252834	ExpressionStatement	entry -> pending_reqid = 0	2423:3:62714:62738	3252344	2	True				
ANR	3252835	AssignmentExpression	entry -> pending_reqid = 0		3252344	0		=			
ANR	3252836	PtrMemberAccess	entry -> pending_reqid		3252344	0					
ANR	3252837	Identifier	entry		3252344	0					
ANR	3252838	Identifier	pending_reqid		3252344	1					
ANR	3252839	PrimaryExpression	0		3252344	1					
ANR	3252840	ExpressionStatement	entry -> reset_user_timer ( - 1 )	2425:3:62790:62817	3252344	3	True				
ANR	3252841	CallExpression	entry -> reset_user_timer ( - 1 )		3252344	0					
ANR	3252842	Callee	entry -> reset_user_timer		3252344	0					
ANR	3252843	PtrMemberAccess	entry -> reset_user_timer		3252344	0					
ANR	3252844	Identifier	entry		3252344	0					
ANR	3252845	Identifier	reset_user_timer		3252344	1					
ANR	3252846	ArgumentList	- 1		3252344	1					
ANR	3252847	Argument	- 1		3252344	0					
ANR	3252848	UnaryOperationExpression	- 1		3252344	0					
ANR	3252849	UnaryOperator	-		3252344	0					
ANR	3252850	PrimaryExpression	1		3252344	1					
ANR	3252851	ExpressionStatement	num_pending_requests --	2427:3:62859:62881	3252344	4	True				
ANR	3252852	PostIncDecOperationExpression	num_pending_requests --		3252344	0					
ANR	3252853	Identifier	num_pending_requests		3252344	0					
ANR	3252854	IncDec	--		3252344	1					
ANR	3252855	ExpressionStatement	ASSERT ( entry -> pending_submitted_to_gahp )	2429:3:62912:62952	3252344	5	True				
ANR	3252856	CallExpression	ASSERT ( entry -> pending_submitted_to_gahp )		3252344	0					
ANR	3252857	Callee	ASSERT		3252344	0					
ANR	3252858	Identifier	ASSERT		3252344	0					
ANR	3252859	ArgumentList	entry -> pending_submitted_to_gahp		3252344	1					
ANR	3252860	Argument	entry -> pending_submitted_to_gahp		3252344	0					
ANR	3252861	PtrMemberAccess	entry -> pending_submitted_to_gahp		3252344	0					
ANR	3252862	Identifier	entry		3252344	0					
ANR	3252863	Identifier	pending_submitted_to_gahp		3252344	1					
ANR	3252864	ExpressionStatement	entry -> pending_submitted_to_gahp = false	2430:3:62957:62997	3252344	6	True				
ANR	3252865	AssignmentExpression	entry -> pending_submitted_to_gahp = false		3252344	0		=			
ANR	3252866	PtrMemberAccess	entry -> pending_submitted_to_gahp		3252344	0					
ANR	3252867	Identifier	entry		3252344	0					
ANR	3252868	Identifier	pending_submitted_to_gahp		3252344	1					
ANR	3252869	Identifier	false		3252344	1					
ANR	3252870	ExpressionStatement	requestTable -> remove ( result_reqid )	2433:2:63068:63102	3252344	12	True				
ANR	3252871	CallExpression	requestTable -> remove ( result_reqid )		3252344	0					
ANR	3252872	Callee	requestTable -> remove		3252344	0					
ANR	3252873	PtrMemberAccess	requestTable -> remove		3252344	0					
ANR	3252874	Identifier	requestTable		3252344	0					
ANR	3252875	Identifier	remove		3252344	1					
ANR	3252876	ArgumentList	result_reqid		3252344	1					
ANR	3252877	Argument	result_reqid		3252344	0					
ANR	3252878	Identifier	result_reqid		3252344	0					
ANR	3252879	IfStatement	if ( result )		3252344	20					
ANR	3252880	Condition	result	2437:6:63158:63163	3252344	0	True				
ANR	3252881	Identifier	result		3252344	0					
ANR	3252882	Statement	delete	2437:15:63167:63172	3252344	1	True				
ANR	3252883	ExpressionStatement	result	2437:22:63174:63180	3252344	21	True				
ANR	3252884	Identifier	result		3252344	0					
ANR	3252885	ExpressionStatement	ASSERT ( num_pending_requests >= 0 )	2443:1:63370:63403	3252344	22	True				
ANR	3252886	CallExpression	ASSERT ( num_pending_requests >= 0 )		3252344	0					
ANR	3252887	Callee	ASSERT		3252344	0					
ANR	3252888	Identifier	ASSERT		3252344	0					
ANR	3252889	ArgumentList	num_pending_requests >= 0		3252344	1					
ANR	3252890	Argument	num_pending_requests >= 0		3252344	0					
ANR	3252891	RelationalExpression	num_pending_requests >= 0		3252344	0		>=			
ANR	3252892	Identifier	num_pending_requests		3252344	0					
ANR	3252893	PrimaryExpression	0		3252344	1					
ANR	3252894	IdentifierDeclStatement	int waiting_reqid = - 1 ;	2444:1:63406:63428	3252344	23	True				
ANR	3252895	IdentifierDecl	waiting_reqid = - 1		3252344	0					
ANR	3252896	IdentifierDeclType	int		3252344	0					
ANR	3252897	Identifier	waiting_reqid		3252344	1					
ANR	3252898	AssignmentExpression	waiting_reqid = - 1		3252344	2		=			
ANR	3252899	Identifier	waiting_reqid		3252344	0					
ANR	3252900	UnaryOperationExpression	- 1		3252344	1					
ANR	3252901	UnaryOperator	-		3252344	0					
ANR	3252902	PrimaryExpression	1		3252344	1					
ANR	3252903	WhileStatement	while ( num_pending_requests < max_pending_requests )		3252344	24					
ANR	3252904	Condition	num_pending_requests < max_pending_requests	2445:9:63439:63481	3252344	0	True				
ANR	3252905	RelationalExpression	num_pending_requests < max_pending_requests		3252344	0		<			
ANR	3252906	Identifier	num_pending_requests		3252344	0					
ANR	3252907	Identifier	max_pending_requests		3252344	1					
ANR	3252908	CompoundStatement		149:1:4569:4569	3252344	1					
ANR	3252909	IfStatement	if ( waitingHighPrio . size ( ) > 0 )		3252344	0					
ANR	3252910	Condition	waitingHighPrio . size ( ) > 0	2447:7:63495:63520	3252344	0	True				
ANR	3252911	RelationalExpression	waitingHighPrio . size ( ) > 0		3252344	0		>			
ANR	3252912	CallExpression	waitingHighPrio . size ( )		3252344	0					
ANR	3252913	Callee	waitingHighPrio . size		3252344	0					
ANR	3252914	MemberAccess	waitingHighPrio . size		3252344	0					
ANR	3252915	Identifier	waitingHighPrio		3252344	0					
ANR	3252916	Identifier	size		3252344	1					
ANR	3252917	ArgumentList			3252344	1					
ANR	3252918	PrimaryExpression	0		3252344	1					
ANR	3252919	CompoundStatement		150:36:4607:4607	3252344	1					
ANR	3252920	ExpressionStatement	waiting_reqid = waitingHighPrio . front ( )	2448:3:63529:63568	3252344	0	True				
ANR	3252921	AssignmentExpression	waiting_reqid = waitingHighPrio . front ( )		3252344	0		=			
ANR	3252922	Identifier	waiting_reqid		3252344	0					
ANR	3252923	CallExpression	waitingHighPrio . front ( )		3252344	1					
ANR	3252924	Callee	waitingHighPrio . front		3252344	0					
ANR	3252925	MemberAccess	waitingHighPrio . front		3252344	0					
ANR	3252926	Identifier	waitingHighPrio		3252344	0					
ANR	3252927	Identifier	front		3252344	1					
ANR	3252928	ArgumentList			3252344	1					
ANR	3252929	ExpressionStatement	waitingHighPrio . pop ( )	2449:3:63573:63594	3252344	1	True				
ANR	3252930	CallExpression	waitingHighPrio . pop ( )		3252344	0					
ANR	3252931	Callee	waitingHighPrio . pop		3252344	0					
ANR	3252932	MemberAccess	waitingHighPrio . pop		3252344	0					
ANR	3252933	Identifier	waitingHighPrio		3252344	0					
ANR	3252934	Identifier	pop		3252344	1					
ANR	3252935	ArgumentList			3252344	1					
ANR	3252936	ElseStatement	else		3252344	0					
ANR	3252937	IfStatement	if ( waitingMediumPrio . size ( ) > 0 )		3252344	0					
ANR	3252938	Condition	waitingMediumPrio . size ( ) > 0	2450:14:63610:63637	3252344	0	True				
ANR	3252939	RelationalExpression	waitingMediumPrio . size ( ) > 0		3252344	0		>			
ANR	3252940	CallExpression	waitingMediumPrio . size ( )		3252344	0					
ANR	3252941	Callee	waitingMediumPrio . size		3252344	0					
ANR	3252942	MemberAccess	waitingMediumPrio . size		3252344	0					
ANR	3252943	Identifier	waitingMediumPrio		3252344	0					
ANR	3252944	Identifier	size		3252344	1					
ANR	3252945	ArgumentList			3252344	1					
ANR	3252946	PrimaryExpression	0		3252344	1					
ANR	3252947	CompoundStatement		153:45:4724:4724	3252344	1					
ANR	3252948	ExpressionStatement	waiting_reqid = waitingMediumPrio . front ( )	2451:3:63646:63687	3252344	0	True				
ANR	3252949	AssignmentExpression	waiting_reqid = waitingMediumPrio . front ( )		3252344	0		=			
ANR	3252950	Identifier	waiting_reqid		3252344	0					
ANR	3252951	CallExpression	waitingMediumPrio . front ( )		3252344	1					
ANR	3252952	Callee	waitingMediumPrio . front		3252344	0					
ANR	3252953	MemberAccess	waitingMediumPrio . front		3252344	0					
ANR	3252954	Identifier	waitingMediumPrio		3252344	0					
ANR	3252955	Identifier	front		3252344	1					
ANR	3252956	ArgumentList			3252344	1					
ANR	3252957	ExpressionStatement	waitingMediumPrio . pop ( )	2452:3:63692:63715	3252344	1	True				
ANR	3252958	CallExpression	waitingMediumPrio . pop ( )		3252344	0					
ANR	3252959	Callee	waitingMediumPrio . pop		3252344	0					
ANR	3252960	MemberAccess	waitingMediumPrio . pop		3252344	0					
ANR	3252961	Identifier	waitingMediumPrio		3252344	0					
ANR	3252962	Identifier	pop		3252344	1					
ANR	3252963	ArgumentList			3252344	1					
ANR	3252964	ElseStatement	else		3252344	0					
ANR	3252965	IfStatement	if ( waitingLowPrio . size ( ) > 0 )		3252344	0					
ANR	3252966	Condition	waitingLowPrio . size ( ) > 0	2453:14:63731:63755	3252344	0	True				
ANR	3252967	RelationalExpression	waitingLowPrio . size ( ) > 0		3252344	0		>			
ANR	3252968	CallExpression	waitingLowPrio . size ( )		3252344	0					
ANR	3252969	Callee	waitingLowPrio . size		3252344	0					
ANR	3252970	MemberAccess	waitingLowPrio . size		3252344	0					
ANR	3252971	Identifier	waitingLowPrio		3252344	0					
ANR	3252972	Identifier	size		3252344	1					
ANR	3252973	ArgumentList			3252344	1					
ANR	3252974	PrimaryExpression	0		3252344	1					
ANR	3252975	CompoundStatement		156:42:4842:4842	3252344	1					
ANR	3252976	ExpressionStatement	waiting_reqid = waitingLowPrio . front ( )	2454:3:63764:63802	3252344	0	True				
ANR	3252977	AssignmentExpression	waiting_reqid = waitingLowPrio . front ( )		3252344	0		=			
ANR	3252978	Identifier	waiting_reqid		3252344	0					
ANR	3252979	CallExpression	waitingLowPrio . front ( )		3252344	1					
ANR	3252980	Callee	waitingLowPrio . front		3252344	0					
ANR	3252981	MemberAccess	waitingLowPrio . front		3252344	0					
ANR	3252982	Identifier	waitingLowPrio		3252344	0					
ANR	3252983	Identifier	front		3252344	1					
ANR	3252984	ArgumentList			3252344	1					
ANR	3252985	ExpressionStatement	waitingLowPrio . pop ( )	2455:3:63807:63827	3252344	1	True				
ANR	3252986	CallExpression	waitingLowPrio . pop ( )		3252344	0					
ANR	3252987	Callee	waitingLowPrio . pop		3252344	0					
ANR	3252988	MemberAccess	waitingLowPrio . pop		3252344	0					
ANR	3252989	Identifier	waitingLowPrio		3252344	0					
ANR	3252990	Identifier	pop		3252344	1					
ANR	3252991	ArgumentList			3252344	1					
ANR	3252992	ElseStatement	else		3252344	0					
ANR	3252993	CompoundStatement		159:9:4921:4921	3252344	0					
ANR	3252994	BreakStatement	break ;	2457:3:63843:63848	3252344	0	True				
ANR	3252995	ExpressionStatement	entry = NULL	2459:2:63856:63868	3252344	1	True				
ANR	3252996	AssignmentExpression	entry = NULL		3252344	0		=			
ANR	3252997	Identifier	entry		3252344	0					
ANR	3252998	Identifier	NULL		3252344	1					
ANR	3252999	ExpressionStatement	"requestTable -> lookup ( waiting_reqid , entry )"	2460:2:63872:63913	3252344	2	True				
ANR	3253000	CallExpression	"requestTable -> lookup ( waiting_reqid , entry )"		3252344	0					
ANR	3253001	Callee	requestTable -> lookup		3252344	0					
ANR	3253002	PtrMemberAccess	requestTable -> lookup		3252344	0					
ANR	3253003	Identifier	requestTable		3252344	0					
ANR	3253004	Identifier	lookup		3252344	1					
ANR	3253005	ArgumentList	waiting_reqid		3252344	1					
ANR	3253006	Argument	waiting_reqid		3252344	0					
ANR	3253007	Identifier	waiting_reqid		3252344	0					
ANR	3253008	Argument	entry		3252344	1					
ANR	3253009	Identifier	entry		3252344	0					
ANR	3253010	IfStatement	if ( entry )		3252344	3					
ANR	3253011	Condition	entry	2461:7:63922:63926	3252344	0	True				
ANR	3253012	Identifier	entry		3252344	0					
ANR	3253013	CompoundStatement		164:15:5013:5013	3252344	1					
ANR	3253014	ExpressionStatement	ASSERT ( entry -> pending_reqid == waiting_reqid )	2462:3:63935:63980	3252344	0	True				
ANR	3253015	CallExpression	ASSERT ( entry -> pending_reqid == waiting_reqid )		3252344	0					
ANR	3253016	Callee	ASSERT		3252344	0					
ANR	3253017	Identifier	ASSERT		3252344	0					
ANR	3253018	ArgumentList	entry -> pending_reqid == waiting_reqid		3252344	1					
ANR	3253019	Argument	entry -> pending_reqid == waiting_reqid		3252344	0					
ANR	3253020	EqualityExpression	entry -> pending_reqid == waiting_reqid		3252344	0		==			
ANR	3253021	PtrMemberAccess	entry -> pending_reqid		3252344	0					
ANR	3253022	Identifier	entry		3252344	0					
ANR	3253023	Identifier	pending_reqid		3252344	1					
ANR	3253024	Identifier	waiting_reqid		3252344	1					
ANR	3253025	ExpressionStatement	"entry -> now_pending ( NULL , NULL )"	2464:3:64030:64059	3252344	1	True				
ANR	3253026	CallExpression	"entry -> now_pending ( NULL , NULL )"		3252344	0					
ANR	3253027	Callee	entry -> now_pending		3252344	0					
ANR	3253028	PtrMemberAccess	entry -> now_pending		3252344	0					
ANR	3253029	Identifier	entry		3252344	0					
ANR	3253030	Identifier	now_pending		3252344	1					
ANR	3253031	ArgumentList	NULL		3252344	1					
ANR	3253032	Argument	NULL		3252344	0					
ANR	3253033	Identifier	NULL		3252344	0					
ANR	3253034	Argument	NULL		3252344	1					
ANR	3253035	Identifier	NULL		3252344	0					
ANR	3253036	ElseStatement	else		3252344	0					
ANR	3253037	CompoundStatement		168:9:5153:5153	3252344	0					
ANR	3253038	ExpressionStatement	requestTable -> remove ( result_reqid )	2472:3:64388:64422	3252344	0	True				
ANR	3253039	CallExpression	requestTable -> remove ( result_reqid )		3252344	0					
ANR	3253040	Callee	requestTable -> remove		3252344	0					
ANR	3253041	PtrMemberAccess	requestTable -> remove		3252344	0					
ANR	3253042	Identifier	requestTable		3252344	0					
ANR	3253043	Identifier	remove		3252344	1					
ANR	3253044	ArgumentList	result_reqid		3252344	1					
ANR	3253045	Argument	result_reqid		3252344	0					
ANR	3253046	Identifier	result_reqid		3252344	0					
ANR	3253047	ReturnType	void		3252344	1					
ANR	3253048	Identifier	GahpServer :: poll		3252344	2					
ANR	3253049	ParameterList			3252344	3					
ANR	3253050	CFGEntryNode	ENTRY		3252344		True				
ANR	3253051	CFGExitNode	EXIT		3252344		True				
ANR	3253052	Symbol	waitingLowPrio . size		3252344						
ANR	3253053	Symbol	max_pending_requests		3252344						
ANR	3253054	Symbol	num_pending_requests		3252344						
ANR	3253055	Symbol	poll_pending		3252344						
ANR	3253056	Symbol	GT4_NO_EXIT_CODE		3252344						
ANR	3253057	Symbol	waiting_reqid		3252344						
ANR	3253058	Symbol	skip_next_r		3252344						
ANR	3253059	Symbol	entry -> pending_reqid		3252344						
ANR	3253060	Symbol	strcmp		3252344						
ANR	3253061	Symbol	unicore_gahp_callback_func		3252344						
ANR	3253062	Symbol	entry -> pending_submitted_to_gahp		3252344						
ANR	3253063	Symbol	waitingLowPrio . front		3252344						
ANR	3253064	Symbol	NULL		3252344						
ANR	3253065	Symbol	waitingHighPrio . front		3252344						
ANR	3253066	Symbol	* * result		3252344						
ANR	3253067	Symbol	D_FULLDEBUG		3252344						
ANR	3253068	Symbol	unicore_gahp_callback_reqid		3252344						
ANR	3253069	Symbol	globus_gt2_gram_user_callback_arg		3252344						
ANR	3253070	Symbol	entry		3252344						
ANR	3253071	Symbol	true		3252344						
ANR	3253072	Symbol	globus_gt2_gram_callback_reqid		3252344						
ANR	3253073	Symbol	waitingMediumPrio . size		3252344						
ANR	3253074	Symbol	result -> argv		3252344						
ANR	3253075	Symbol	num_results		3252344						
ANR	3253076	Symbol	result		3252344						
ANR	3253077	Symbol	buffered_peek		3252344						
ANR	3253078	Symbol	* result		3252344						
ANR	3253079	Symbol	waitingHighPrio		3252344						
ANR	3253080	Symbol	globus_gt2_gram_callback_func		3252344						
ANR	3253081	Symbol	waitingLowPrio		3252344						
ANR	3253082	Symbol	* result -> argv		3252344						
ANR	3253083	Symbol	globus_gt4_gram_callback_func		3252344						
ANR	3253084	Symbol	* entry		3252344						
ANR	3253085	Symbol	atoi		3252344						
ANR	3253086	Symbol	globus_gt4_gram_user_callback_arg		3252344						
ANR	3253087	Symbol	* * * result		3252344						
ANR	3253088	Symbol	* result_lines		3252344						
ANR	3253089	Symbol	false		3252344						
ANR	3253090	Symbol	D_ALWAYS		3252344						
ANR	3253091	Symbol	i		3252344						
ANR	3253092	Symbol	result_reqid		3252344						
ANR	3253093	Symbol	globus_gt4_gram_callback_reqid		3252344						
ANR	3253094	Symbol	entry -> pending_result		3252344						
ANR	3253095	Symbol	NULLSTRING		3252344						
ANR	3253096	Symbol	m_in_results		3252344						
ANR	3253097	Symbol	waitingMediumPrio . front		3252344						
ANR	3253098	Symbol	* * result -> argv		3252344						
ANR	3253099	Symbol	result_lines		3252344						
ANR	3253100	Symbol	* i		3252344						
ANR	3253101	Symbol	requestTable		3252344						
ANR	3253102	Symbol	result -> argc		3252344						
ANR	3253103	Symbol	waitingHighPrio . size		3252344						
ANR	3253104	Symbol	waitingMediumPrio		3252344						
ANR	3253105	Function	GahpClient :: globus_gram_client_callback_allow	2502:0:64967:67143							
ANR	3253106	FunctionDef	"GahpClient :: globus_gram_client_callback_allow (globus_gram_client_callback_func_t callback_func , void * user_callback_arg , char * * callback_contact)"		3253105	0					
ANR	3253107	CompoundStatement		2507:0:65124:67143	3253105	0					
ANR	3253108	IdentifierDeclStatement	char buf [ 150 ] ;	2508:1:65127:65140	3253105	0	True				
ANR	3253109	IdentifierDecl	buf [ 150 ]		3253105	0					
ANR	3253110	IdentifierDeclType	char [ 150 ]		3253105	0					
ANR	3253111	Identifier	buf		3253105	1					
ANR	3253112	PrimaryExpression	150		3253105	2					
ANR	3253113	Statement	static	2509:1:65143:65148	3253105	1	True				
ANR	3253114	IdentifierDeclStatement	"const char * command = ""GRAM_CALLBACK_ALLOW"" ;"	2509:8:65150:65193	3253105	2	True				
ANR	3253115	IdentifierDecl	"* command = ""GRAM_CALLBACK_ALLOW"""		3253105	0					
ANR	3253116	IdentifierDeclType	const char *		3253105	0					
ANR	3253117	Identifier	command		3253105	1					
ANR	3253118	AssignmentExpression	"* command = ""GRAM_CALLBACK_ALLOW"""		3253105	2		=			
ANR	3253119	Identifier	command		3253105	0					
ANR	3253120	PrimaryExpression	"""GRAM_CALLBACK_ALLOW"""		3253105	1					
ANR	3253121	IfStatement	if ( callback_contact )		3253105	3					
ANR	3253122	Condition	callback_contact	2512:5:65258:65273	3253105	0	True				
ANR	3253123	Identifier	callback_contact		3253105	0					
ANR	3253124	CompoundStatement		6:23:151:151	3253105	1					
ANR	3253125	ExpressionStatement	* callback_contact = NULL	2513:2:65280:65304	3253105	0	True				
ANR	3253126	AssignmentExpression	* callback_contact = NULL		3253105	0		=			
ANR	3253127	UnaryOperationExpression	* callback_contact		3253105	0					
ANR	3253128	UnaryOperator	*		3253105	0					
ANR	3253129	Identifier	callback_contact		3253105	1					
ANR	3253130	Identifier	NULL		3253105	1					
ANR	3253131	IfStatement	if ( server -> globus_gt2_gram_callback_contact )		3253105	4					
ANR	3253132	Condition	server -> globus_gt2_gram_callback_contact	2517:6:65410:65449	3253105	0	True				
ANR	3253133	PtrMemberAccess	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253134	Identifier	server		3253105	0					
ANR	3253135	Identifier	globus_gt2_gram_callback_contact		3253105	1					
ANR	3253136	CompoundStatement		11:49:328:328	3253105	1					
ANR	3253137	IfStatement	if ( callback_func != server -> globus_gt2_gram_callback_func || user_callback_arg != server -> globus_gt2_gram_user_callback_arg )		3253105	0					
ANR	3253138	Condition	callback_func != server -> globus_gt2_gram_callback_func || user_callback_arg != server -> globus_gt2_gram_user_callback_arg	2519:7:65518:65644	3253105	0	True				
ANR	3253139	OrExpression	callback_func != server -> globus_gt2_gram_callback_func || user_callback_arg != server -> globus_gt2_gram_user_callback_arg		3253105	0		||			
ANR	3253140	EqualityExpression	callback_func != server -> globus_gt2_gram_callback_func		3253105	0		!=			
ANR	3253141	Identifier	callback_func		3253105	0					
ANR	3253142	PtrMemberAccess	server -> globus_gt2_gram_callback_func		3253105	1					
ANR	3253143	Identifier	server		3253105	0					
ANR	3253144	Identifier	globus_gt2_gram_callback_func		3253105	1					
ANR	3253145	EqualityExpression	user_callback_arg != server -> globus_gt2_gram_user_callback_arg		3253105	1		!=			
ANR	3253146	Identifier	user_callback_arg		3253105	0					
ANR	3253147	PtrMemberAccess	server -> globus_gt2_gram_user_callback_arg		3253105	1					
ANR	3253148	Identifier	server		3253105	0					
ANR	3253149	Identifier	globus_gt2_gram_user_callback_arg		3253105	1					
ANR	3253150	CompoundStatement		15:2:525:525	3253105	1					
ANR	3253151	ExpressionStatement	"EXCEPT ( ""globus_gram_client_callback_allow called twice"" )"	2522:3:65655:65711	3253105	0	True				
ANR	3253152	CallExpression	"EXCEPT ( ""globus_gram_client_callback_allow called twice"" )"		3253105	0					
ANR	3253153	Callee	EXCEPT		3253105	0					
ANR	3253154	Identifier	EXCEPT		3253105	0					
ANR	3253155	ArgumentList	"""globus_gram_client_callback_allow called twice"""		3253105	1					
ANR	3253156	Argument	"""globus_gram_client_callback_allow called twice"""		3253105	0					
ANR	3253157	PrimaryExpression	"""globus_gram_client_callback_allow called twice"""		3253105	0					
ANR	3253158	IfStatement	if ( callback_contact )		3253105	1					
ANR	3253159	Condition	callback_contact	2524:6:65723:65738	3253105	0	True				
ANR	3253160	Identifier	callback_contact		3253105	0					
ANR	3253161	CompoundStatement		18:24:616:616	3253105	1					
ANR	3253162	ExpressionStatement	* callback_contact = strdup ( server -> globus_gt2_gram_callback_contact )	2525:3:65746:65814	3253105	0	True				
ANR	3253163	AssignmentExpression	* callback_contact = strdup ( server -> globus_gt2_gram_callback_contact )		3253105	0		=			
ANR	3253164	UnaryOperationExpression	* callback_contact		3253105	0					
ANR	3253165	UnaryOperator	*		3253105	0					
ANR	3253166	Identifier	callback_contact		3253105	1					
ANR	3253167	CallExpression	strdup ( server -> globus_gt2_gram_callback_contact )		3253105	1					
ANR	3253168	Callee	strdup		3253105	0					
ANR	3253169	Identifier	strdup		3253105	0					
ANR	3253170	ArgumentList	server -> globus_gt2_gram_callback_contact		3253105	1					
ANR	3253171	Argument	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253172	PtrMemberAccess	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253173	Identifier	server		3253105	0					
ANR	3253174	Identifier	globus_gt2_gram_callback_contact		3253105	1					
ANR	3253175	ExpressionStatement	ASSERT ( * callback_contact )	2526:3:65819:65844	3253105	1	True				
ANR	3253176	CallExpression	ASSERT ( * callback_contact )		3253105	0					
ANR	3253177	Callee	ASSERT		3253105	0					
ANR	3253178	Identifier	ASSERT		3253105	0					
ANR	3253179	ArgumentList	* callback_contact		3253105	1					
ANR	3253180	Argument	* callback_contact		3253105	0					
ANR	3253181	UnaryOperationExpression	* callback_contact		3253105	0					
ANR	3253182	UnaryOperator	*		3253105	0					
ANR	3253183	Identifier	callback_contact		3253105	1					
ANR	3253184	ReturnStatement	return 0 ;	2528:2:65852:65860	3253105	2	True				
ANR	3253185	PrimaryExpression	0		3253105	0					
ANR	3253186	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3253105	5					
ANR	3253187	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2532:6:65912:65973	3253105	0	True				
ANR	3253188	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3253105	0		==			
ANR	3253189	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3253105	0					
ANR	3253190	Callee	server -> m_commands_supported -> contains_anycase		3253105	0					
ANR	3253191	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3253105	0					
ANR	3253192	PtrMemberAccess	server -> m_commands_supported		3253105	0					
ANR	3253193	Identifier	server		3253105	0					
ANR	3253194	Identifier	m_commands_supported		3253105	1					
ANR	3253195	Identifier	contains_anycase		3253105	1					
ANR	3253196	ArgumentList	command		3253105	1					
ANR	3253197	Argument	command		3253105	0					
ANR	3253198	Identifier	command		3253105	0					
ANR	3253199	Identifier	FALSE		3253105	1					
ANR	3253200	CompoundStatement		26:70:851:851	3253105	1					
ANR	3253201	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2533:2:65980:66019	3253105	0	True				
ANR	3253202	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253105	0					
ANR	3253203	IfStatement	if ( m_mode == results_only )		3253105	6					
ANR	3253204	Condition	m_mode == results_only	2538:6:66118:66139	3253105	0	True				
ANR	3253205	EqualityExpression	m_mode == results_only		3253105	0		==			
ANR	3253206	Identifier	m_mode		3253105	0					
ANR	3253207	Identifier	results_only		3253105	1					
ANR	3253208	CompoundStatement		32:31:1018:1018	3253105	1					
ANR	3253209	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2539:2:66147:66186	3253105	0	True				
ANR	3253210	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3253105	0					
ANR	3253211	IdentifierDeclStatement	int reqid = server -> new_reqid ( ) ;	2542:1:66193:66224	3253105	7	True				
ANR	3253212	IdentifierDecl	reqid = server -> new_reqid ( )		3253105	0					
ANR	3253213	IdentifierDeclType	int		3253105	0					
ANR	3253214	Identifier	reqid		3253105	1					
ANR	3253215	AssignmentExpression	reqid = server -> new_reqid ( )		3253105	2		=			
ANR	3253216	Identifier	reqid		3253105	0					
ANR	3253217	CallExpression	server -> new_reqid ( )		3253105	1					
ANR	3253218	Callee	server -> new_reqid		3253105	0					
ANR	3253219	PtrMemberAccess	server -> new_reqid		3253105	0					
ANR	3253220	Identifier	server		3253105	0					
ANR	3253221	Identifier	new_reqid		3253105	1					
ANR	3253222	ArgumentList			3253105	1					
ANR	3253223	IdentifierDeclStatement	"int x = snprintf ( buf , sizeof ( buf ) , ""%s %d 0"" , command , reqid ) ;"	2543:1:66227:66284	3253105	8	True				
ANR	3253224	IdentifierDecl	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d 0"" , command , reqid )"		3253105	0					
ANR	3253225	IdentifierDeclType	int		3253105	0					
ANR	3253226	Identifier	x		3253105	1					
ANR	3253227	AssignmentExpression	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d 0"" , command , reqid )"		3253105	2		=			
ANR	3253228	Identifier	x		3253105	0					
ANR	3253229	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s %d 0"" , command , reqid )"		3253105	1					
ANR	3253230	Callee	snprintf		3253105	0					
ANR	3253231	Identifier	snprintf		3253105	0					
ANR	3253232	ArgumentList	buf		3253105	1					
ANR	3253233	Argument	buf		3253105	0					
ANR	3253234	Identifier	buf		3253105	0					
ANR	3253235	Argument	sizeof ( buf )		3253105	1					
ANR	3253236	SizeofExpression	sizeof ( buf )		3253105	0					
ANR	3253237	Sizeof	sizeof		3253105	0					
ANR	3253238	SizeofOperand	buf		3253105	1					
ANR	3253239	Argument	"""%s %d 0"""		3253105	2					
ANR	3253240	PrimaryExpression	"""%s %d 0"""		3253105	0					
ANR	3253241	Argument	command		3253105	3					
ANR	3253242	Identifier	command		3253105	0					
ANR	3253243	Argument	reqid		3253105	4					
ANR	3253244	Identifier	reqid		3253105	0					
ANR	3253245	ExpressionStatement	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )	2544:1:66287:66326	3253105	9	True				
ANR	3253246	CallExpression	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )		3253105	0					
ANR	3253247	Callee	ASSERT		3253105	0					
ANR	3253248	Identifier	ASSERT		3253105	0					
ANR	3253249	ArgumentList	x > 0 && x < ( int ) sizeof ( buf )		3253105	1					
ANR	3253250	Argument	x > 0 && x < ( int ) sizeof ( buf )		3253105	0					
ANR	3253251	AndExpression	x > 0 && x < ( int ) sizeof ( buf )		3253105	0		&&			
ANR	3253252	RelationalExpression	x > 0		3253105	0		>			
ANR	3253253	Identifier	x		3253105	0					
ANR	3253254	PrimaryExpression	0		3253105	1					
ANR	3253255	RelationalExpression	x < ( int ) sizeof ( buf )		3253105	1		<			
ANR	3253256	Identifier	x		3253105	0					
ANR	3253257	CastExpression	( int ) sizeof ( buf )		3253105	1					
ANR	3253258	CastTarget	int		3253105	0					
ANR	3253259	SizeofExpression	sizeof ( buf )		3253105	1					
ANR	3253260	Sizeof	sizeof		3253105	0					
ANR	3253261	SizeofOperand	buf		3253105	1					
ANR	3253262	ExpressionStatement	server -> write_line ( buf )	2545:1:66329:66352	3253105	10	True				
ANR	3253263	CallExpression	server -> write_line ( buf )		3253105	0					
ANR	3253264	Callee	server -> write_line		3253105	0					
ANR	3253265	PtrMemberAccess	server -> write_line		3253105	0					
ANR	3253266	Identifier	server		3253105	0					
ANR	3253267	Identifier	write_line		3253105	1					
ANR	3253268	ArgumentList	buf		3253105	1					
ANR	3253269	Argument	buf		3253105	0					
ANR	3253270	Identifier	buf		3253105	0					
ANR	3253271	IdentifierDeclStatement	Gahp_Args result ;	2546:1:66355:66371	3253105	11	True				
ANR	3253272	IdentifierDecl	result		3253105	0					
ANR	3253273	IdentifierDeclType	Gahp_Args		3253105	0					
ANR	3253274	Identifier	result		3253105	1					
ANR	3253275	ExpressionStatement	server -> read_argv ( result )	2547:1:66374:66399	3253105	12	True				
ANR	3253276	CallExpression	server -> read_argv ( result )		3253105	0					
ANR	3253277	Callee	server -> read_argv		3253105	0					
ANR	3253278	PtrMemberAccess	server -> read_argv		3253105	0					
ANR	3253279	Identifier	server		3253105	0					
ANR	3253280	Identifier	read_argv		3253105	1					
ANR	3253281	ArgumentList	result		3253105	1					
ANR	3253282	Argument	result		3253105	0					
ANR	3253283	Identifier	result		3253105	0					
ANR	3253284	IfStatement	if ( result . argc != 2 || result . argv [ 0 ] [ 0 ] != 'S' )		3253105	13					
ANR	3253285	Condition	result . argc != 2 || result . argv [ 0 ] [ 0 ] != 'S'	2548:6:66407:66450	3253105	0	True				
ANR	3253286	OrExpression	result . argc != 2 || result . argv [ 0 ] [ 0 ] != 'S'		3253105	0		||			
ANR	3253287	EqualityExpression	result . argc != 2		3253105	0		!=			
ANR	3253288	MemberAccess	result . argc		3253105	0					
ANR	3253289	Identifier	result		3253105	0					
ANR	3253290	Identifier	argc		3253105	1					
ANR	3253291	PrimaryExpression	2		3253105	1					
ANR	3253292	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3253105	1		!=			
ANR	3253293	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3253105	0					
ANR	3253294	ArrayIndexing	result . argv [ 0 ]		3253105	0					
ANR	3253295	MemberAccess	result . argv		3253105	0					
ANR	3253296	Identifier	result		3253105	0					
ANR	3253297	Identifier	argv		3253105	1					
ANR	3253298	PrimaryExpression	0		3253105	1					
ANR	3253299	PrimaryExpression	0		3253105	1					
ANR	3253300	PrimaryExpression	'S'		3253105	1					
ANR	3253301	CompoundStatement		45:2:1436:1494	3253105	1					
ANR	3253302	IdentifierDeclStatement	int ec = result . argc >= 2 ? atoi ( result . argv [ 1 ] ) : GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2550:2:66474:66557	3253105	0	True				
ANR	3253303	IdentifierDecl	ec = result . argc >= 2 ? atoi ( result . argv [ 1 ] ) : GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253105	0					
ANR	3253304	IdentifierDeclType	int		3253105	0					
ANR	3253305	Identifier	ec		3253105	1					
ANR	3253306	AssignmentExpression	ec = result . argc >= 2 ? atoi ( result . argv [ 1 ] ) : GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253105	2		=			
ANR	3253307	Identifier	ec		3253105	0					
ANR	3253308	ConditionalExpression	result . argc >= 2 ? atoi ( result . argv [ 1 ] ) : GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253105	1					
ANR	3253309	Condition	result . argc >= 2		3253105	0					
ANR	3253310	RelationalExpression	result . argc >= 2		3253105	0		>=			
ANR	3253311	MemberAccess	result . argc		3253105	0					
ANR	3253312	Identifier	result		3253105	0					
ANR	3253313	Identifier	argc		3253105	1					
ANR	3253314	PrimaryExpression	2		3253105	1					
ANR	3253315	CallExpression	atoi ( result . argv [ 1 ] )		3253105	1					
ANR	3253316	Callee	atoi		3253105	0					
ANR	3253317	Identifier	atoi		3253105	0					
ANR	3253318	ArgumentList	result . argv [ 1 ]		3253105	1					
ANR	3253319	Argument	result . argv [ 1 ]		3253105	0					
ANR	3253320	ArrayIndexing	result . argv [ 1 ]		3253105	0					
ANR	3253321	MemberAccess	result . argv		3253105	0					
ANR	3253322	Identifier	result		3253105	0					
ANR	3253323	Identifier	argv		3253105	1					
ANR	3253324	PrimaryExpression	1		3253105	1					
ANR	3253325	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253105	2					
ANR	3253326	IdentifierDeclStatement	"const char * es = result . argc >= 3 ? result . argv [ 2 ] : ""???"" ;"	2551:2:66561:66619	3253105	1	True				
ANR	3253327	IdentifierDecl	"* es = result . argc >= 3 ? result . argv [ 2 ] : ""???"""		3253105	0					
ANR	3253328	IdentifierDeclType	const char *		3253105	0					
ANR	3253329	Identifier	es		3253105	1					
ANR	3253330	AssignmentExpression	"* es = result . argc >= 3 ? result . argv [ 2 ] : ""???"""		3253105	2		=			
ANR	3253331	Identifier	es		3253105	0					
ANR	3253332	ConditionalExpression	"result . argc >= 3 ? result . argv [ 2 ] : ""???"""		3253105	1					
ANR	3253333	Condition	result . argc >= 3		3253105	0					
ANR	3253334	RelationalExpression	result . argc >= 3		3253105	0		>=			
ANR	3253335	MemberAccess	result . argc		3253105	0					
ANR	3253336	Identifier	result		3253105	0					
ANR	3253337	Identifier	argc		3253105	1					
ANR	3253338	PrimaryExpression	3		3253105	1					
ANR	3253339	ArrayIndexing	result . argv [ 2 ]		3253105	1					
ANR	3253340	MemberAccess	result . argv		3253105	0					
ANR	3253341	Identifier	result		3253105	0					
ANR	3253342	Identifier	argv		3253105	1					
ANR	3253343	PrimaryExpression	2		3253105	1					
ANR	3253344	PrimaryExpression	"""???"""		3253105	2					
ANR	3253345	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s error_code=%d\\n"" , command , es , ec )"	2552:2:66623:66707	3253105	2	True				
ANR	3253346	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s error_code=%d\\n"" , command , es , ec )"		3253105	0					
ANR	3253347	Callee	dprintf		3253105	0					
ANR	3253348	Identifier	dprintf		3253105	0					
ANR	3253349	ArgumentList	D_ALWAYS		3253105	1					
ANR	3253350	Argument	D_ALWAYS		3253105	0					
ANR	3253351	Identifier	D_ALWAYS		3253105	0					
ANR	3253352	Argument	"""GAHP command '%s' failed: %s error_code=%d\\n"""		3253105	1					
ANR	3253353	PrimaryExpression	"""GAHP command '%s' failed: %s error_code=%d\\n"""		3253105	0					
ANR	3253354	Argument	command		3253105	2					
ANR	3253355	Identifier	command		3253105	0					
ANR	3253356	Argument	es		3253105	3					
ANR	3253357	Identifier	es		3253105	0					
ANR	3253358	Argument	ec		3253105	4					
ANR	3253359	Identifier	ec		3253105	0					
ANR	3253360	ReturnStatement	return ec ;	2554:2:66711:66720	3253105	3	True				
ANR	3253361	Identifier	ec		3253105	0					
ANR	3253362	ExpressionStatement	server -> globus_gt2_gram_callback_reqid = reqid	2558:1:66744:66790	3253105	14	True				
ANR	3253363	AssignmentExpression	server -> globus_gt2_gram_callback_reqid = reqid		3253105	0		=			
ANR	3253364	PtrMemberAccess	server -> globus_gt2_gram_callback_reqid		3253105	0					
ANR	3253365	Identifier	server		3253105	0					
ANR	3253366	Identifier	globus_gt2_gram_callback_reqid		3253105	1					
ANR	3253367	Identifier	reqid		3253105	1					
ANR	3253368	ExpressionStatement	server -> globus_gt2_gram_callback_func = callback_func	2559:2:66794:66847	3253105	15	True				
ANR	3253369	AssignmentExpression	server -> globus_gt2_gram_callback_func = callback_func		3253105	0		=			
ANR	3253370	PtrMemberAccess	server -> globus_gt2_gram_callback_func		3253105	0					
ANR	3253371	Identifier	server		3253105	0					
ANR	3253372	Identifier	globus_gt2_gram_callback_func		3253105	1					
ANR	3253373	Identifier	callback_func		3253105	1					
ANR	3253374	ExpressionStatement	server -> globus_gt2_gram_user_callback_arg = user_callback_arg	2560:1:66850:66911	3253105	16	True				
ANR	3253375	AssignmentExpression	server -> globus_gt2_gram_user_callback_arg = user_callback_arg		3253105	0		=			
ANR	3253376	PtrMemberAccess	server -> globus_gt2_gram_user_callback_arg		3253105	0					
ANR	3253377	Identifier	server		3253105	0					
ANR	3253378	Identifier	globus_gt2_gram_user_callback_arg		3253105	1					
ANR	3253379	Identifier	user_callback_arg		3253105	1					
ANR	3253380	ExpressionStatement	server -> globus_gt2_gram_callback_contact = strdup ( result . argv [ 1 ] )	2561:1:66914:66979	3253105	17	True				
ANR	3253381	AssignmentExpression	server -> globus_gt2_gram_callback_contact = strdup ( result . argv [ 1 ] )		3253105	0		=			
ANR	3253382	PtrMemberAccess	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253383	Identifier	server		3253105	0					
ANR	3253384	Identifier	globus_gt2_gram_callback_contact		3253105	1					
ANR	3253385	CallExpression	strdup ( result . argv [ 1 ] )		3253105	1					
ANR	3253386	Callee	strdup		3253105	0					
ANR	3253387	Identifier	strdup		3253105	0					
ANR	3253388	ArgumentList	result . argv [ 1 ]		3253105	1					
ANR	3253389	Argument	result . argv [ 1 ]		3253105	0					
ANR	3253390	ArrayIndexing	result . argv [ 1 ]		3253105	0					
ANR	3253391	MemberAccess	result . argv		3253105	0					
ANR	3253392	Identifier	result		3253105	0					
ANR	3253393	Identifier	argv		3253105	1					
ANR	3253394	PrimaryExpression	1		3253105	1					
ANR	3253395	ExpressionStatement	ASSERT ( server -> globus_gt2_gram_callback_contact )	2562:1:66982:67030	3253105	18	True				
ANR	3253396	CallExpression	ASSERT ( server -> globus_gt2_gram_callback_contact )		3253105	0					
ANR	3253397	Callee	ASSERT		3253105	0					
ANR	3253398	Identifier	ASSERT		3253105	0					
ANR	3253399	ArgumentList	server -> globus_gt2_gram_callback_contact		3253105	1					
ANR	3253400	Argument	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253401	PtrMemberAccess	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253402	Identifier	server		3253105	0					
ANR	3253403	Identifier	globus_gt2_gram_callback_contact		3253105	1					
ANR	3253404	ExpressionStatement	* callback_contact = strdup ( server -> globus_gt2_gram_callback_contact )	2563:1:67033:67101	3253105	19	True				
ANR	3253405	AssignmentExpression	* callback_contact = strdup ( server -> globus_gt2_gram_callback_contact )		3253105	0		=			
ANR	3253406	UnaryOperationExpression	* callback_contact		3253105	0					
ANR	3253407	UnaryOperator	*		3253105	0					
ANR	3253408	Identifier	callback_contact		3253105	1					
ANR	3253409	CallExpression	strdup ( server -> globus_gt2_gram_callback_contact )		3253105	1					
ANR	3253410	Callee	strdup		3253105	0					
ANR	3253411	Identifier	strdup		3253105	0					
ANR	3253412	ArgumentList	server -> globus_gt2_gram_callback_contact		3253105	1					
ANR	3253413	Argument	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253414	PtrMemberAccess	server -> globus_gt2_gram_callback_contact		3253105	0					
ANR	3253415	Identifier	server		3253105	0					
ANR	3253416	Identifier	globus_gt2_gram_callback_contact		3253105	1					
ANR	3253417	ExpressionStatement	ASSERT ( * callback_contact )	2564:1:67104:67129	3253105	20	True				
ANR	3253418	CallExpression	ASSERT ( * callback_contact )		3253105	0					
ANR	3253419	Callee	ASSERT		3253105	0					
ANR	3253420	Identifier	ASSERT		3253105	0					
ANR	3253421	ArgumentList	* callback_contact		3253105	1					
ANR	3253422	Argument	* callback_contact		3253105	0					
ANR	3253423	UnaryOperationExpression	* callback_contact		3253105	0					
ANR	3253424	UnaryOperator	*		3253105	0					
ANR	3253425	Identifier	callback_contact		3253105	1					
ANR	3253426	ReturnStatement	return 0 ;	2566:1:67133:67141	3253105	21	True				
ANR	3253427	PrimaryExpression	0		3253105	0					
ANR	3253428	ReturnType	int		3253105	1					
ANR	3253429	Identifier	GahpClient :: globus_gram_client_callback_allow		3253105	2					
ANR	3253430	ParameterList	"globus_gram_client_callback_func_t callback_func , void * user_callback_arg , char * * callback_contact"		3253105	3					
ANR	3253431	Parameter	globus_gram_client_callback_func_t callback_func	2504:1:65020:65067	3253105	0	True				
ANR	3253432	ParameterType	globus_gram_client_callback_func_t		3253105	0					
ANR	3253433	Identifier	callback_func		3253105	1					
ANR	3253434	Parameter	void * user_callback_arg	2505:1:65071:65094	3253105	1	True				
ANR	3253435	ParameterType	void *		3253105	0					
ANR	3253436	Identifier	user_callback_arg		3253105	1					
ANR	3253437	Parameter	char * * callback_contact	2506:1:65098:65121	3253105	2	True				
ANR	3253438	ParameterType	char * *		3253105	0					
ANR	3253439	Identifier	callback_contact		3253105	1					
ANR	3253440	CFGEntryNode	ENTRY		3253105		True				
ANR	3253441	CFGExitNode	EXIT		3253105		True				
ANR	3253442	Symbol	server		3253105						
ANR	3253443	Symbol	server -> m_commands_supported		3253105						
ANR	3253444	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253105						
ANR	3253445	Symbol	* server		3253105						
ANR	3253446	Symbol	server -> globus_gt2_gram_user_callback_arg		3253105						
ANR	3253447	Symbol	results_only		3253105						
ANR	3253448	Symbol	server -> globus_gt2_gram_callback_contact		3253105						
ANR	3253449	Symbol	* server -> m_commands_supported		3253105						
ANR	3253450	Symbol	reqid		3253105						
ANR	3253451	Symbol	result		3253105						
ANR	3253452	Symbol	user_callback_arg		3253105						
ANR	3253453	Symbol	* result		3253105						
ANR	3253454	Symbol	server -> m_commands_supported -> contains_anycase		3253105						
ANR	3253455	Symbol	server -> globus_gt2_gram_callback_func		3253105						
ANR	3253456	Symbol	m_mode		3253105						
ANR	3253457	Symbol	ec		3253105						
ANR	3253458	Symbol	snprintf		3253105						
ANR	3253459	Symbol	atoi		3253105						
ANR	3253460	Symbol	NULL		3253105						
ANR	3253461	Symbol	* callback_contact		3253105						
ANR	3253462	Symbol	* * result . argv		3253105						
ANR	3253463	Symbol	D_ALWAYS		3253105						
ANR	3253464	Symbol	* * result		3253105						
ANR	3253465	Symbol	* result . argv		3253105						
ANR	3253466	Symbol	command		3253105						
ANR	3253467	Symbol	es		3253105						
ANR	3253468	Symbol	server -> globus_gt2_gram_callback_reqid		3253105						
ANR	3253469	Symbol	result . argv		3253105						
ANR	3253470	Symbol	callback_contact		3253105						
ANR	3253471	Symbol	buf		3253105						
ANR	3253472	Symbol	server -> new_reqid		3253105						
ANR	3253473	Symbol	x		3253105						
ANR	3253474	Symbol	result . argc		3253105						
ANR	3253475	Symbol	* * server		3253105						
ANR	3253476	Symbol	FALSE		3253105						
ANR	3253477	Symbol	strdup		3253105						
ANR	3253478	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3253105						
ANR	3253479	Symbol	callback_func		3253105						
ANR	3253480	Function	GahpClient :: gt4_generate_submit_id	2572:0:67163:68628							
ANR	3253481	FunctionDef	GahpClient :: gt4_generate_submit_id (char * * submit_id)		3253480	0					
ANR	3253482	CompoundStatement		2574:0:67222:68628	3253480	0					
ANR	3253483	Statement	static	2575:1:67225:67230	3253480	0	True				
ANR	3253484	IdentifierDeclStatement	"const char * command = ""GT4_GENERATE_SUBMIT_ID"" ;"	2575:8:67232:67279	3253480	1	True				
ANR	3253485	IdentifierDecl	"* command = ""GT4_GENERATE_SUBMIT_ID"""		3253480	0					
ANR	3253486	IdentifierDeclType	const char *		3253480	0					
ANR	3253487	Identifier	command		3253480	1					
ANR	3253488	AssignmentExpression	"* command = ""GT4_GENERATE_SUBMIT_ID"""		3253480	2		=			
ANR	3253489	Identifier	command		3253480	0					
ANR	3253490	PrimaryExpression	"""GT4_GENERATE_SUBMIT_ID"""		3253480	1					
ANR	3253491	IfStatement	if ( submit_id )		3253480	2					
ANR	3253492	Condition	submit_id	2578:6:67342:67350	3253480	0	True				
ANR	3253493	Identifier	submit_id		3253480	0					
ANR	3253494	CompoundStatement		5:18:131:131	3253480	1					
ANR	3253495	ExpressionStatement	* submit_id = NULL	2579:2:67358:67375	3253480	0	True				
ANR	3253496	AssignmentExpression	* submit_id = NULL		3253480	0		=			
ANR	3253497	UnaryOperationExpression	* submit_id		3253480	0					
ANR	3253498	UnaryOperator	*		3253480	0					
ANR	3253499	Identifier	submit_id		3253480	1					
ANR	3253500	Identifier	NULL		3253480	1					
ANR	3253501	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3253480	3					
ANR	3253502	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2583:6:67427:67488	3253480	0	True				
ANR	3253503	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3253480	0		==			
ANR	3253504	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3253480	0					
ANR	3253505	Callee	server -> m_commands_supported -> contains_anycase		3253480	0					
ANR	3253506	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3253480	0					
ANR	3253507	PtrMemberAccess	server -> m_commands_supported		3253480	0					
ANR	3253508	Identifier	server		3253480	0					
ANR	3253509	Identifier	m_commands_supported		3253480	1					
ANR	3253510	Identifier	contains_anycase		3253480	1					
ANR	3253511	ArgumentList	command		3253480	1					
ANR	3253512	Argument	command		3253480	0					
ANR	3253513	Identifier	command		3253480	0					
ANR	3253514	Identifier	FALSE		3253480	1					
ANR	3253515	CompoundStatement		10:70:268:268	3253480	1					
ANR	3253516	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2584:2:67495:67534	3253480	0	True				
ANR	3253517	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253480	0					
ANR	3253518	IfStatement	"if ( ! is_pending ( command , NULL ) )"		3253480	4					
ANR	3253519	Condition	"! is_pending ( command , NULL )"	2589:6:67638:67665	3253480	0	True				
ANR	3253520	UnaryOperationExpression	"! is_pending ( command , NULL )"		3253480	0					
ANR	3253521	UnaryOperator	!		3253480	0					
ANR	3253522	CallExpression	"is_pending ( command , NULL )"		3253480	1					
ANR	3253523	Callee	is_pending		3253480	0					
ANR	3253524	Identifier	is_pending		3253480	0					
ANR	3253525	ArgumentList	command		3253480	1					
ANR	3253526	Argument	command		3253480	0					
ANR	3253527	Identifier	command		3253480	0					
ANR	3253528	Argument	NULL		3253480	1					
ANR	3253529	Identifier	NULL		3253480	0					
ANR	3253530	CompoundStatement		16:37:446:446	3253480	1					
ANR	3253531	IfStatement	if ( m_mode == results_only )		3253480	0					
ANR	3253532	Condition	m_mode == results_only	2592:7:67776:67797	3253480	0	True				
ANR	3253533	EqualityExpression	m_mode == results_only		3253480	0		==			
ANR	3253534	Identifier	m_mode		3253480	0					
ANR	3253535	Identifier	results_only		3253480	1					
ANR	3253536	CompoundStatement		19:32:578:578	3253480	1					
ANR	3253537	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2593:3:67806:67845	3253480	0	True				
ANR	3253538	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3253480	0					
ANR	3253539	ExpressionStatement	"now_pending ( command , NULL , normal_proxy )"	2595:2:67853:67895	3253480	1	True				
ANR	3253540	CallExpression	"now_pending ( command , NULL , normal_proxy )"		3253480	0					
ANR	3253541	Callee	now_pending		3253480	0					
ANR	3253542	Identifier	now_pending		3253480	0					
ANR	3253543	ArgumentList	command		3253480	1					
ANR	3253544	Argument	command		3253480	0					
ANR	3253545	Identifier	command		3253480	0					
ANR	3253546	Argument	NULL		3253480	1					
ANR	3253547	Identifier	NULL		3253480	0					
ANR	3253548	Argument	normal_proxy		3253480	2					
ANR	3253549	Identifier	normal_proxy		3253480	0					
ANR	3253550	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , NULL ) ;"	2601:1:67986:68041	3253480	5	True				
ANR	3253551	IdentifierDecl	"* result = get_pending_result ( command , NULL )"		3253480	0					
ANR	3253552	IdentifierDeclType	Gahp_Args *		3253480	0					
ANR	3253553	Identifier	result		3253480	1					
ANR	3253554	AssignmentExpression	"* result = get_pending_result ( command , NULL )"		3253480	2		=			
ANR	3253555	Identifier	result		3253480	0					
ANR	3253556	CallExpression	"get_pending_result ( command , NULL )"		3253480	1					
ANR	3253557	Callee	get_pending_result		3253480	0					
ANR	3253558	Identifier	get_pending_result		3253480	0					
ANR	3253559	ArgumentList	command		3253480	1					
ANR	3253560	Argument	command		3253480	0					
ANR	3253561	Identifier	command		3253480	0					
ANR	3253562	Argument	NULL		3253480	1					
ANR	3253563	Identifier	NULL		3253480	0					
ANR	3253564	IfStatement	if ( result )		3253480	6					
ANR	3253565	Condition	result	2602:6:68049:68054	3253480	0	True				
ANR	3253566	Identifier	result		3253480	0					
ANR	3253567	CompoundStatement		29:15:835:835	3253480	1					
ANR	3253568	IfStatement	if ( result -> argc != 2 )		3253480	0					
ANR	3253569	Condition	result -> argc != 2	2604:6:68090:68106	3253480	0	True				
ANR	3253570	EqualityExpression	result -> argc != 2		3253480	0		!=			
ANR	3253571	PtrMemberAccess	result -> argc		3253480	0					
ANR	3253572	Identifier	result		3253480	0					
ANR	3253573	Identifier	argc		3253480	1					
ANR	3253574	PrimaryExpression	2		3253480	1					
ANR	3253575	CompoundStatement		31:25:886:886	3253480	1					
ANR	3253576	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	2605:3:68114:68148	3253480	0	True				
ANR	3253577	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3253480	0					
ANR	3253578	Callee	EXCEPT		3253480	0					
ANR	3253579	Identifier	EXCEPT		3253480	0					
ANR	3253580	ArgumentList	"""Bad %s Result"""		3253480	1					
ANR	3253581	Argument	"""Bad %s Result"""		3253480	0					
ANR	3253582	PrimaryExpression	"""Bad %s Result"""		3253480	0					
ANR	3253583	Argument	command		3253480	1					
ANR	3253584	Identifier	command		3253480	0					
ANR	3253585	IfStatement	"if ( strcasecmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3253480	1					
ANR	3253586	Condition	"strcasecmp ( result -> argv [ 1 ] , NULLSTRING )"	2607:7:68161:68199	3253480	0	True				
ANR	3253587	CallExpression	"strcasecmp ( result -> argv [ 1 ] , NULLSTRING )"		3253480	0					
ANR	3253588	Callee	strcasecmp		3253480	0					
ANR	3253589	Identifier	strcasecmp		3253480	0					
ANR	3253590	ArgumentList	result -> argv [ 1 ]		3253480	1					
ANR	3253591	Argument	result -> argv [ 1 ]		3253480	0					
ANR	3253592	ArrayIndexing	result -> argv [ 1 ]		3253480	0					
ANR	3253593	PtrMemberAccess	result -> argv		3253480	0					
ANR	3253594	Identifier	result		3253480	0					
ANR	3253595	Identifier	argv		3253480	1					
ANR	3253596	PrimaryExpression	1		3253480	1					
ANR	3253597	Argument	NULLSTRING		3253480	1					
ANR	3253598	Identifier	NULLSTRING		3253480	0					
ANR	3253599	CompoundStatement		34:49:980:980	3253480	1					
ANR	3253600	ExpressionStatement	* submit_id = strdup ( result -> argv [ 1 ] )	2608:3:68208:68246	3253480	0	True				
ANR	3253601	AssignmentExpression	* submit_id = strdup ( result -> argv [ 1 ] )		3253480	0		=			
ANR	3253602	UnaryOperationExpression	* submit_id		3253480	0					
ANR	3253603	UnaryOperator	*		3253480	0					
ANR	3253604	Identifier	submit_id		3253480	1					
ANR	3253605	CallExpression	strdup ( result -> argv [ 1 ] )		3253480	1					
ANR	3253606	Callee	strdup		3253480	0					
ANR	3253607	Identifier	strdup		3253480	0					
ANR	3253608	ArgumentList	result -> argv [ 1 ]		3253480	1					
ANR	3253609	Argument	result -> argv [ 1 ]		3253480	0					
ANR	3253610	ArrayIndexing	result -> argv [ 1 ]		3253480	0					
ANR	3253611	PtrMemberAccess	result -> argv		3253480	0					
ANR	3253612	Identifier	result		3253480	0					
ANR	3253613	Identifier	argv		3253480	1					
ANR	3253614	PrimaryExpression	1		3253480	1					
ANR	3253615	ElseStatement	else		3253480	0					
ANR	3253616	CompoundStatement		36:9:1034:1034	3253480	0					
ANR	3253617	ExpressionStatement	* submit_id = NULL	2610:3:68262:68279	3253480	0	True				
ANR	3253618	AssignmentExpression	* submit_id = NULL		3253480	0		=			
ANR	3253619	UnaryOperationExpression	* submit_id		3253480	0					
ANR	3253620	UnaryOperator	*		3253480	0					
ANR	3253621	Identifier	submit_id		3253480	1					
ANR	3253622	Identifier	NULL		3253480	1					
ANR	3253623	Statement	delete	2612:2:68287:68292	3253480	2	True				
ANR	3253624	ExpressionStatement	result	2612:9:68294:68300	3253480	3	True				
ANR	3253625	Identifier	result		3253480	0					
ANR	3253626	ReturnStatement	return 0 ;	2613:2:68304:68312	3253480	4	True				
ANR	3253627	PrimaryExpression	0		3253480	0					
ANR	3253628	IfStatement	"if ( check_pending_timeout ( command , NULL ) )"		3253480	7					
ANR	3253629	Condition	"check_pending_timeout ( command , NULL )"	2617:6:68369:68406	3253480	0	True				
ANR	3253630	CallExpression	"check_pending_timeout ( command , NULL )"		3253480	0					
ANR	3253631	Callee	check_pending_timeout		3253480	0					
ANR	3253632	Identifier	check_pending_timeout		3253480	0					
ANR	3253633	ArgumentList	command		3253480	1					
ANR	3253634	Argument	command		3253480	0					
ANR	3253635	Identifier	command		3253480	0					
ANR	3253636	Argument	NULL		3253480	1					
ANR	3253637	Identifier	NULL		3253480	0					
ANR	3253638	CompoundStatement		44:47:1187:1187	3253480	1					
ANR	3253639	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	2619:2:68446:68494	3253480	0	True				
ANR	3253640	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3253480	0					
ANR	3253641	Callee	sprintf		3253480	0					
ANR	3253642	Identifier	sprintf		3253480	0					
ANR	3253643	ArgumentList	error_string		3253480	1					
ANR	3253644	Argument	error_string		3253480	0					
ANR	3253645	Identifier	error_string		3253480	0					
ANR	3253646	Argument	"""%s timed out"""		3253480	1					
ANR	3253647	PrimaryExpression	"""%s timed out"""		3253480	0					
ANR	3253648	Argument	command		3253480	2					
ANR	3253649	Identifier	command		3253480	0					
ANR	3253650	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	2620:2:68498:68533	3253480	1	True				
ANR	3253651	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3253480	0					
ANR	3253652	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2624:1:68593:68626	3253480	8	True				
ANR	3253653	Identifier	GAHPCLIENT_COMMAND_PENDING		3253480	0					
ANR	3253654	ReturnType	int		3253480	1					
ANR	3253655	Identifier	GahpClient :: gt4_generate_submit_id		3253480	2					
ANR	3253656	ParameterList	char * * submit_id		3253480	3					
ANR	3253657	Parameter	char * * submit_id	2573:36:67203:67219	3253480	0	True				
ANR	3253658	ParameterType	char * *		3253480	0					
ANR	3253659	Identifier	submit_id		3253480	1					
ANR	3253660	CFGEntryNode	ENTRY		3253480		True				
ANR	3253661	CFGExitNode	EXIT		3253480		True				
ANR	3253662	Symbol	server -> m_commands_supported		3253480						
ANR	3253663	Symbol	server		3253480						
ANR	3253664	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253480						
ANR	3253665	Symbol	* server		3253480						
ANR	3253666	Symbol	results_only		3253480						
ANR	3253667	Symbol	result -> argv		3253480						
ANR	3253668	Symbol	* server -> m_commands_supported		3253480						
ANR	3253669	Symbol	result		3253480						
ANR	3253670	Symbol	normal_proxy		3253480						
ANR	3253671	Symbol	* result		3253480						
ANR	3253672	Symbol	* submit_id		3253480						
ANR	3253673	Symbol	server -> m_commands_supported -> contains_anycase		3253480						
ANR	3253674	Symbol	GAHPCLIENT_COMMAND_PENDING		3253480						
ANR	3253675	Symbol	m_mode		3253480						
ANR	3253676	Symbol	strcasecmp		3253480						
ANR	3253677	Symbol	* result -> argv		3253480						
ANR	3253678	Symbol	NULL		3253480						
ANR	3253679	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3253480						
ANR	3253680	Symbol	* * result		3253480						
ANR	3253681	Symbol	submit_id		3253480						
ANR	3253682	Symbol	NULLSTRING		3253480						
ANR	3253683	Symbol	command		3253480						
ANR	3253684	Symbol	get_pending_result		3253480						
ANR	3253685	Symbol	error_string		3253480						
ANR	3253686	Symbol	result -> argc		3253480						
ANR	3253687	Symbol	* * server		3253480						
ANR	3253688	Symbol	FALSE		3253480						
ANR	3253689	Symbol	strdup		3253480						
ANR	3253690	Symbol	check_pending_timeout		3253480						
ANR	3253691	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3253480						
ANR	3253692	Symbol	is_pending		3253480						
ANR	3253693	Function	GahpClient :: gt4_gram_client_callback_allow	2628:0:68632:70835							
ANR	3253694	FunctionDef	"GahpClient :: gt4_gram_client_callback_allow (globus_gt4_gram_callback_func_t callback_func , void * user_callback_arg , char * * callback_contact)"		3253693	0					
ANR	3253695	CompoundStatement		2633:0:68783:70835	3253693	0					
ANR	3253696	IdentifierDeclStatement	char buf [ 150 ] ;	2634:1:68786:68799	3253693	0	True				
ANR	3253697	IdentifierDecl	buf [ 150 ]		3253693	0					
ANR	3253698	IdentifierDeclType	char [ 150 ]		3253693	0					
ANR	3253699	Identifier	buf		3253693	1					
ANR	3253700	PrimaryExpression	150		3253693	2					
ANR	3253701	Statement	static	2635:1:68802:68807	3253693	1	True				
ANR	3253702	IdentifierDeclStatement	"const char * command = ""GT4_GRAM_CALLBACK_ALLOW"" ;"	2635:8:68809:68856	3253693	2	True				
ANR	3253703	IdentifierDecl	"* command = ""GT4_GRAM_CALLBACK_ALLOW"""		3253693	0					
ANR	3253704	IdentifierDeclType	const char *		3253693	0					
ANR	3253705	Identifier	command		3253693	1					
ANR	3253706	AssignmentExpression	"* command = ""GT4_GRAM_CALLBACK_ALLOW"""		3253693	2		=			
ANR	3253707	Identifier	command		3253693	0					
ANR	3253708	PrimaryExpression	"""GT4_GRAM_CALLBACK_ALLOW"""		3253693	1					
ANR	3253709	IfStatement	if ( callback_contact )		3253693	3					
ANR	3253710	Condition	callback_contact	2638:5:68921:68936	3253693	0	True				
ANR	3253711	Identifier	callback_contact		3253693	0					
ANR	3253712	CompoundStatement		6:23:155:155	3253693	1					
ANR	3253713	ExpressionStatement	* callback_contact = NULL	2639:2:68943:68967	3253693	0	True				
ANR	3253714	AssignmentExpression	* callback_contact = NULL		3253693	0		=			
ANR	3253715	UnaryOperationExpression	* callback_contact		3253693	0					
ANR	3253716	UnaryOperator	*		3253693	0					
ANR	3253717	Identifier	callback_contact		3253693	1					
ANR	3253718	Identifier	NULL		3253693	1					
ANR	3253719	IfStatement	if ( server -> globus_gt4_gram_callback_contact )		3253693	4					
ANR	3253720	Condition	server -> globus_gt4_gram_callback_contact	2643:6:69073:69112	3253693	0	True				
ANR	3253721	PtrMemberAccess	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3253722	Identifier	server		3253693	0					
ANR	3253723	Identifier	globus_gt4_gram_callback_contact		3253693	1					
ANR	3253724	CompoundStatement		11:49:332:332	3253693	1					
ANR	3253725	IfStatement	if ( callback_func != server -> globus_gt4_gram_callback_func || user_callback_arg != server -> globus_gt4_gram_user_callback_arg )		3253693	0					
ANR	3253726	Condition	callback_func != server -> globus_gt4_gram_callback_func || user_callback_arg != server -> globus_gt4_gram_user_callback_arg	2645:7:69181:69305	3253693	0	True				
ANR	3253727	OrExpression	callback_func != server -> globus_gt4_gram_callback_func || user_callback_arg != server -> globus_gt4_gram_user_callback_arg		3253693	0		||			
ANR	3253728	EqualityExpression	callback_func != server -> globus_gt4_gram_callback_func		3253693	0		!=			
ANR	3253729	Identifier	callback_func		3253693	0					
ANR	3253730	PtrMemberAccess	server -> globus_gt4_gram_callback_func		3253693	1					
ANR	3253731	Identifier	server		3253693	0					
ANR	3253732	Identifier	globus_gt4_gram_callback_func		3253693	1					
ANR	3253733	EqualityExpression	user_callback_arg != server -> globus_gt4_gram_user_callback_arg		3253693	1		!=			
ANR	3253734	Identifier	user_callback_arg		3253693	0					
ANR	3253735	PtrMemberAccess	server -> globus_gt4_gram_user_callback_arg		3253693	1					
ANR	3253736	Identifier	server		3253693	0					
ANR	3253737	Identifier	globus_gt4_gram_user_callback_arg		3253693	1					
ANR	3253738	CompoundStatement		15:2:527:527	3253693	1					
ANR	3253739	ExpressionStatement	"EXCEPT ( ""gt4_gram_client_callback_allow called twice"" )"	2648:3:69316:69369	3253693	0	True				
ANR	3253740	CallExpression	"EXCEPT ( ""gt4_gram_client_callback_allow called twice"" )"		3253693	0					
ANR	3253741	Callee	EXCEPT		3253693	0					
ANR	3253742	Identifier	EXCEPT		3253693	0					
ANR	3253743	ArgumentList	"""gt4_gram_client_callback_allow called twice"""		3253693	1					
ANR	3253744	Argument	"""gt4_gram_client_callback_allow called twice"""		3253693	0					
ANR	3253745	PrimaryExpression	"""gt4_gram_client_callback_allow called twice"""		3253693	0					
ANR	3253746	IfStatement	if ( callback_contact )		3253693	1					
ANR	3253747	Condition	callback_contact	2650:6:69381:69396	3253693	0	True				
ANR	3253748	Identifier	callback_contact		3253693	0					
ANR	3253749	CompoundStatement		18:24:615:615	3253693	1					
ANR	3253750	ExpressionStatement	* callback_contact = strdup ( server -> globus_gt4_gram_callback_contact )	2651:3:69404:69472	3253693	0	True				
ANR	3253751	AssignmentExpression	* callback_contact = strdup ( server -> globus_gt4_gram_callback_contact )		3253693	0		=			
ANR	3253752	UnaryOperationExpression	* callback_contact		3253693	0					
ANR	3253753	UnaryOperator	*		3253693	0					
ANR	3253754	Identifier	callback_contact		3253693	1					
ANR	3253755	CallExpression	strdup ( server -> globus_gt4_gram_callback_contact )		3253693	1					
ANR	3253756	Callee	strdup		3253693	0					
ANR	3253757	Identifier	strdup		3253693	0					
ANR	3253758	ArgumentList	server -> globus_gt4_gram_callback_contact		3253693	1					
ANR	3253759	Argument	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3253760	PtrMemberAccess	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3253761	Identifier	server		3253693	0					
ANR	3253762	Identifier	globus_gt4_gram_callback_contact		3253693	1					
ANR	3253763	ExpressionStatement	ASSERT ( * callback_contact )	2652:3:69477:69502	3253693	1	True				
ANR	3253764	CallExpression	ASSERT ( * callback_contact )		3253693	0					
ANR	3253765	Callee	ASSERT		3253693	0					
ANR	3253766	Identifier	ASSERT		3253693	0					
ANR	3253767	ArgumentList	* callback_contact		3253693	1					
ANR	3253768	Argument	* callback_contact		3253693	0					
ANR	3253769	UnaryOperationExpression	* callback_contact		3253693	0					
ANR	3253770	UnaryOperator	*		3253693	0					
ANR	3253771	Identifier	callback_contact		3253693	1					
ANR	3253772	ReturnStatement	return 0 ;	2654:2:69510:69518	3253693	2	True				
ANR	3253773	PrimaryExpression	0		3253693	0					
ANR	3253774	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3253693	5					
ANR	3253775	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2658:6:69570:69631	3253693	0	True				
ANR	3253776	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3253693	0		==			
ANR	3253777	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3253693	0					
ANR	3253778	Callee	server -> m_commands_supported -> contains_anycase		3253693	0					
ANR	3253779	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3253693	0					
ANR	3253780	PtrMemberAccess	server -> m_commands_supported		3253693	0					
ANR	3253781	Identifier	server		3253693	0					
ANR	3253782	Identifier	m_commands_supported		3253693	1					
ANR	3253783	Identifier	contains_anycase		3253693	1					
ANR	3253784	ArgumentList	command		3253693	1					
ANR	3253785	Argument	command		3253693	0					
ANR	3253786	Identifier	command		3253693	0					
ANR	3253787	Identifier	FALSE		3253693	1					
ANR	3253788	CompoundStatement		26:70:850:850	3253693	1					
ANR	3253789	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2659:2:69638:69677	3253693	0	True				
ANR	3253790	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253693	0					
ANR	3253791	IfStatement	if ( m_mode == results_only )		3253693	6					
ANR	3253792	Condition	m_mode == results_only	2664:6:69776:69797	3253693	0	True				
ANR	3253793	EqualityExpression	m_mode == results_only		3253693	0		==			
ANR	3253794	Identifier	m_mode		3253693	0					
ANR	3253795	Identifier	results_only		3253693	1					
ANR	3253796	CompoundStatement		32:31:1017:1017	3253693	1					
ANR	3253797	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2665:2:69805:69844	3253693	0	True				
ANR	3253798	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3253693	0					
ANR	3253799	IdentifierDeclStatement	int reqid = server -> new_reqid ( ) ;	2668:1:69851:69882	3253693	7	True				
ANR	3253800	IdentifierDecl	reqid = server -> new_reqid ( )		3253693	0					
ANR	3253801	IdentifierDeclType	int		3253693	0					
ANR	3253802	Identifier	reqid		3253693	1					
ANR	3253803	AssignmentExpression	reqid = server -> new_reqid ( )		3253693	2		=			
ANR	3253804	Identifier	reqid		3253693	0					
ANR	3253805	CallExpression	server -> new_reqid ( )		3253693	1					
ANR	3253806	Callee	server -> new_reqid		3253693	0					
ANR	3253807	PtrMemberAccess	server -> new_reqid		3253693	0					
ANR	3253808	Identifier	server		3253693	0					
ANR	3253809	Identifier	new_reqid		3253693	1					
ANR	3253810	ArgumentList			3253693	1					
ANR	3253811	IdentifierDeclStatement	"int x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid ) ;"	2669:1:69885:69940	3253693	8	True				
ANR	3253812	IdentifierDecl	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid )"		3253693	0					
ANR	3253813	IdentifierDeclType	int		3253693	0					
ANR	3253814	Identifier	x		3253693	1					
ANR	3253815	AssignmentExpression	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid )"		3253693	2		=			
ANR	3253816	Identifier	x		3253693	0					
ANR	3253817	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid )"		3253693	1					
ANR	3253818	Callee	snprintf		3253693	0					
ANR	3253819	Identifier	snprintf		3253693	0					
ANR	3253820	ArgumentList	buf		3253693	1					
ANR	3253821	Argument	buf		3253693	0					
ANR	3253822	Identifier	buf		3253693	0					
ANR	3253823	Argument	sizeof ( buf )		3253693	1					
ANR	3253824	SizeofExpression	sizeof ( buf )		3253693	0					
ANR	3253825	Sizeof	sizeof		3253693	0					
ANR	3253826	SizeofOperand	buf		3253693	1					
ANR	3253827	Argument	"""%s %d"""		3253693	2					
ANR	3253828	PrimaryExpression	"""%s %d"""		3253693	0					
ANR	3253829	Argument	command		3253693	3					
ANR	3253830	Identifier	command		3253693	0					
ANR	3253831	Argument	reqid		3253693	4					
ANR	3253832	Identifier	reqid		3253693	0					
ANR	3253833	ExpressionStatement	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )	2670:1:69943:69982	3253693	9	True				
ANR	3253834	CallExpression	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )		3253693	0					
ANR	3253835	Callee	ASSERT		3253693	0					
ANR	3253836	Identifier	ASSERT		3253693	0					
ANR	3253837	ArgumentList	x > 0 && x < ( int ) sizeof ( buf )		3253693	1					
ANR	3253838	Argument	x > 0 && x < ( int ) sizeof ( buf )		3253693	0					
ANR	3253839	AndExpression	x > 0 && x < ( int ) sizeof ( buf )		3253693	0		&&			
ANR	3253840	RelationalExpression	x > 0		3253693	0		>			
ANR	3253841	Identifier	x		3253693	0					
ANR	3253842	PrimaryExpression	0		3253693	1					
ANR	3253843	RelationalExpression	x < ( int ) sizeof ( buf )		3253693	1		<			
ANR	3253844	Identifier	x		3253693	0					
ANR	3253845	CastExpression	( int ) sizeof ( buf )		3253693	1					
ANR	3253846	CastTarget	int		3253693	0					
ANR	3253847	SizeofExpression	sizeof ( buf )		3253693	1					
ANR	3253848	Sizeof	sizeof		3253693	0					
ANR	3253849	SizeofOperand	buf		3253693	1					
ANR	3253850	ExpressionStatement	server -> write_line ( buf )	2671:1:69985:70008	3253693	10	True				
ANR	3253851	CallExpression	server -> write_line ( buf )		3253693	0					
ANR	3253852	Callee	server -> write_line		3253693	0					
ANR	3253853	PtrMemberAccess	server -> write_line		3253693	0					
ANR	3253854	Identifier	server		3253693	0					
ANR	3253855	Identifier	write_line		3253693	1					
ANR	3253856	ArgumentList	buf		3253693	1					
ANR	3253857	Argument	buf		3253693	0					
ANR	3253858	Identifier	buf		3253693	0					
ANR	3253859	IdentifierDeclStatement	Gahp_Args result ;	2672:1:70011:70027	3253693	11	True				
ANR	3253860	IdentifierDecl	result		3253693	0					
ANR	3253861	IdentifierDeclType	Gahp_Args		3253693	0					
ANR	3253862	Identifier	result		3253693	1					
ANR	3253863	ExpressionStatement	server -> read_argv ( result )	2673:1:70030:70055	3253693	12	True				
ANR	3253864	CallExpression	server -> read_argv ( result )		3253693	0					
ANR	3253865	Callee	server -> read_argv		3253693	0					
ANR	3253866	PtrMemberAccess	server -> read_argv		3253693	0					
ANR	3253867	Identifier	server		3253693	0					
ANR	3253868	Identifier	read_argv		3253693	1					
ANR	3253869	ArgumentList	result		3253693	1					
ANR	3253870	Argument	result		3253693	0					
ANR	3253871	Identifier	result		3253693	0					
ANR	3253872	IfStatement	if ( result . argc != 2 || result . argv [ 0 ] [ 0 ] != 'S' )		3253693	13					
ANR	3253873	Condition	result . argc != 2 || result . argv [ 0 ] [ 0 ] != 'S'	2674:6:70063:70106	3253693	0	True				
ANR	3253874	OrExpression	result . argc != 2 || result . argv [ 0 ] [ 0 ] != 'S'		3253693	0		||			
ANR	3253875	EqualityExpression	result . argc != 2		3253693	0		!=			
ANR	3253876	MemberAccess	result . argc		3253693	0					
ANR	3253877	Identifier	result		3253693	0					
ANR	3253878	Identifier	argc		3253693	1					
ANR	3253879	PrimaryExpression	2		3253693	1					
ANR	3253880	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3253693	1		!=			
ANR	3253881	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3253693	0					
ANR	3253882	ArrayIndexing	result . argv [ 0 ]		3253693	0					
ANR	3253883	MemberAccess	result . argv		3253693	0					
ANR	3253884	Identifier	result		3253693	0					
ANR	3253885	Identifier	argv		3253693	1					
ANR	3253886	PrimaryExpression	0		3253693	1					
ANR	3253887	PrimaryExpression	0		3253693	1					
ANR	3253888	PrimaryExpression	'S'		3253693	1					
ANR	3253889	CompoundStatement		44:2:1346:1404	3253693	1					
ANR	3253890	IdentifierDeclStatement	"const char * es = result . argc >= 3 ? result . argv [ 2 ] : ""???"" ;"	2676:2:70130:70188	3253693	0	True				
ANR	3253891	IdentifierDecl	"* es = result . argc >= 3 ? result . argv [ 2 ] : ""???"""		3253693	0					
ANR	3253892	IdentifierDeclType	const char *		3253693	0					
ANR	3253893	Identifier	es		3253693	1					
ANR	3253894	AssignmentExpression	"* es = result . argc >= 3 ? result . argv [ 2 ] : ""???"""		3253693	2		=			
ANR	3253895	Identifier	es		3253693	0					
ANR	3253896	ConditionalExpression	"result . argc >= 3 ? result . argv [ 2 ] : ""???"""		3253693	1					
ANR	3253897	Condition	result . argc >= 3		3253693	0					
ANR	3253898	RelationalExpression	result . argc >= 3		3253693	0		>=			
ANR	3253899	MemberAccess	result . argc		3253693	0					
ANR	3253900	Identifier	result		3253693	0					
ANR	3253901	Identifier	argc		3253693	1					
ANR	3253902	PrimaryExpression	3		3253693	1					
ANR	3253903	ArrayIndexing	result . argv [ 2 ]		3253693	1					
ANR	3253904	MemberAccess	result . argv		3253693	0					
ANR	3253905	Identifier	result		3253693	0					
ANR	3253906	Identifier	argv		3253693	1					
ANR	3253907	PrimaryExpression	2		3253693	1					
ANR	3253908	PrimaryExpression	"""???"""		3253693	2					
ANR	3253909	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , es )"	2677:2:70192:70259	3253693	1	True				
ANR	3253910	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed: %s\\n"" , command , es )"		3253693	0					
ANR	3253911	Callee	dprintf		3253693	0					
ANR	3253912	Identifier	dprintf		3253693	0					
ANR	3253913	ArgumentList	D_ALWAYS		3253693	1					
ANR	3253914	Argument	D_ALWAYS		3253693	0					
ANR	3253915	Identifier	D_ALWAYS		3253693	0					
ANR	3253916	Argument	"""GAHP command '%s' failed: %s\\n"""		3253693	1					
ANR	3253917	PrimaryExpression	"""GAHP command '%s' failed: %s\\n"""		3253693	0					
ANR	3253918	Argument	command		3253693	2					
ANR	3253919	Identifier	command		3253693	0					
ANR	3253920	Argument	es		3253693	3					
ANR	3253921	Identifier	es		3253693	0					
ANR	3253922	IfStatement	"if ( result . argc >= 3 && strcasecmp ( result . argv [ 2 ] , NULLSTRING ) )"		3253693	2					
ANR	3253923	Condition	"result . argc >= 3 && strcasecmp ( result . argv [ 2 ] , NULLSTRING )"	2679:7:70268:70325	3253693	0	True				
ANR	3253924	AndExpression	"result . argc >= 3 && strcasecmp ( result . argv [ 2 ] , NULLSTRING )"		3253693	0		&&			
ANR	3253925	RelationalExpression	result . argc >= 3		3253693	0		>=			
ANR	3253926	MemberAccess	result . argc		3253693	0					
ANR	3253927	Identifier	result		3253693	0					
ANR	3253928	Identifier	argc		3253693	1					
ANR	3253929	PrimaryExpression	3		3253693	1					
ANR	3253930	CallExpression	"strcasecmp ( result . argv [ 2 ] , NULLSTRING )"		3253693	1					
ANR	3253931	Callee	strcasecmp		3253693	0					
ANR	3253932	Identifier	strcasecmp		3253693	0					
ANR	3253933	ArgumentList	result . argv [ 2 ]		3253693	1					
ANR	3253934	Argument	result . argv [ 2 ]		3253693	0					
ANR	3253935	ArrayIndexing	result . argv [ 2 ]		3253693	0					
ANR	3253936	MemberAccess	result . argv		3253693	0					
ANR	3253937	Identifier	result		3253693	0					
ANR	3253938	Identifier	argv		3253693	1					
ANR	3253939	PrimaryExpression	2		3253693	1					
ANR	3253940	Argument	NULLSTRING		3253693	1					
ANR	3253941	Identifier	NULLSTRING		3253693	0					
ANR	3253942	CompoundStatement		47:68:1545:1545	3253693	1					
ANR	3253943	ExpressionStatement	error_string = result . argv [ 2 ]	2680:3:70334:70363	3253693	0	True				
ANR	3253944	AssignmentExpression	error_string = result . argv [ 2 ]		3253693	0		=			
ANR	3253945	Identifier	error_string		3253693	0					
ANR	3253946	ArrayIndexing	result . argv [ 2 ]		3253693	1					
ANR	3253947	MemberAccess	result . argv		3253693	0					
ANR	3253948	Identifier	result		3253693	0					
ANR	3253949	Identifier	argv		3253693	1					
ANR	3253950	PrimaryExpression	2		3253693	1					
ANR	3253951	ElseStatement	else		3253693	0					
ANR	3253952	CompoundStatement		49:9:1590:1590	3253693	0					
ANR	3253953	ExpressionStatement	"error_string = """""	2682:3:70379:70396	3253693	0	True				
ANR	3253954	AssignmentExpression	"error_string = """""		3253693	0		=			
ANR	3253955	Identifier	error_string		3253693	0					
ANR	3253956	PrimaryExpression	""""""		3253693	1					
ANR	3253957	ReturnStatement	return 1 ;	2684:2:70404:70412	3253693	3	True				
ANR	3253958	PrimaryExpression	1		3253693	0					
ANR	3253959	ExpressionStatement	server -> globus_gt4_gram_callback_reqid = reqid	2688:1:70436:70482	3253693	14	True				
ANR	3253960	AssignmentExpression	server -> globus_gt4_gram_callback_reqid = reqid		3253693	0		=			
ANR	3253961	PtrMemberAccess	server -> globus_gt4_gram_callback_reqid		3253693	0					
ANR	3253962	Identifier	server		3253693	0					
ANR	3253963	Identifier	globus_gt4_gram_callback_reqid		3253693	1					
ANR	3253964	Identifier	reqid		3253693	1					
ANR	3253965	ExpressionStatement	server -> globus_gt4_gram_callback_func = callback_func	2689:2:70486:70539	3253693	15	True				
ANR	3253966	AssignmentExpression	server -> globus_gt4_gram_callback_func = callback_func		3253693	0		=			
ANR	3253967	PtrMemberAccess	server -> globus_gt4_gram_callback_func		3253693	0					
ANR	3253968	Identifier	server		3253693	0					
ANR	3253969	Identifier	globus_gt4_gram_callback_func		3253693	1					
ANR	3253970	Identifier	callback_func		3253693	1					
ANR	3253971	ExpressionStatement	server -> globus_gt4_gram_user_callback_arg = user_callback_arg	2690:1:70542:70603	3253693	16	True				
ANR	3253972	AssignmentExpression	server -> globus_gt4_gram_user_callback_arg = user_callback_arg		3253693	0		=			
ANR	3253973	PtrMemberAccess	server -> globus_gt4_gram_user_callback_arg		3253693	0					
ANR	3253974	Identifier	server		3253693	0					
ANR	3253975	Identifier	globus_gt4_gram_user_callback_arg		3253693	1					
ANR	3253976	Identifier	user_callback_arg		3253693	1					
ANR	3253977	ExpressionStatement	server -> globus_gt4_gram_callback_contact = strdup ( result . argv [ 1 ] )	2691:1:70606:70671	3253693	17	True				
ANR	3253978	AssignmentExpression	server -> globus_gt4_gram_callback_contact = strdup ( result . argv [ 1 ] )		3253693	0		=			
ANR	3253979	PtrMemberAccess	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3253980	Identifier	server		3253693	0					
ANR	3253981	Identifier	globus_gt4_gram_callback_contact		3253693	1					
ANR	3253982	CallExpression	strdup ( result . argv [ 1 ] )		3253693	1					
ANR	3253983	Callee	strdup		3253693	0					
ANR	3253984	Identifier	strdup		3253693	0					
ANR	3253985	ArgumentList	result . argv [ 1 ]		3253693	1					
ANR	3253986	Argument	result . argv [ 1 ]		3253693	0					
ANR	3253987	ArrayIndexing	result . argv [ 1 ]		3253693	0					
ANR	3253988	MemberAccess	result . argv		3253693	0					
ANR	3253989	Identifier	result		3253693	0					
ANR	3253990	Identifier	argv		3253693	1					
ANR	3253991	PrimaryExpression	1		3253693	1					
ANR	3253992	ExpressionStatement	ASSERT ( server -> globus_gt4_gram_callback_contact )	2692:1:70674:70722	3253693	18	True				
ANR	3253993	CallExpression	ASSERT ( server -> globus_gt4_gram_callback_contact )		3253693	0					
ANR	3253994	Callee	ASSERT		3253693	0					
ANR	3253995	Identifier	ASSERT		3253693	0					
ANR	3253996	ArgumentList	server -> globus_gt4_gram_callback_contact		3253693	1					
ANR	3253997	Argument	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3253998	PtrMemberAccess	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3253999	Identifier	server		3253693	0					
ANR	3254000	Identifier	globus_gt4_gram_callback_contact		3253693	1					
ANR	3254001	ExpressionStatement	* callback_contact = strdup ( server -> globus_gt4_gram_callback_contact )	2693:1:70725:70793	3253693	19	True				
ANR	3254002	AssignmentExpression	* callback_contact = strdup ( server -> globus_gt4_gram_callback_contact )		3253693	0		=			
ANR	3254003	UnaryOperationExpression	* callback_contact		3253693	0					
ANR	3254004	UnaryOperator	*		3253693	0					
ANR	3254005	Identifier	callback_contact		3253693	1					
ANR	3254006	CallExpression	strdup ( server -> globus_gt4_gram_callback_contact )		3253693	1					
ANR	3254007	Callee	strdup		3253693	0					
ANR	3254008	Identifier	strdup		3253693	0					
ANR	3254009	ArgumentList	server -> globus_gt4_gram_callback_contact		3253693	1					
ANR	3254010	Argument	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3254011	PtrMemberAccess	server -> globus_gt4_gram_callback_contact		3253693	0					
ANR	3254012	Identifier	server		3253693	0					
ANR	3254013	Identifier	globus_gt4_gram_callback_contact		3253693	1					
ANR	3254014	ExpressionStatement	ASSERT ( * callback_contact )	2694:1:70796:70821	3253693	20	True				
ANR	3254015	CallExpression	ASSERT ( * callback_contact )		3253693	0					
ANR	3254016	Callee	ASSERT		3253693	0					
ANR	3254017	Identifier	ASSERT		3253693	0					
ANR	3254018	ArgumentList	* callback_contact		3253693	1					
ANR	3254019	Argument	* callback_contact		3253693	0					
ANR	3254020	UnaryOperationExpression	* callback_contact		3253693	0					
ANR	3254021	UnaryOperator	*		3253693	0					
ANR	3254022	Identifier	callback_contact		3253693	1					
ANR	3254023	ReturnStatement	return 0 ;	2696:1:70825:70833	3253693	21	True				
ANR	3254024	PrimaryExpression	0		3253693	0					
ANR	3254025	ReturnType	int		3253693	1					
ANR	3254026	Identifier	GahpClient :: gt4_gram_client_callback_allow		3253693	2					
ANR	3254027	ParameterList	"globus_gt4_gram_callback_func_t callback_func , void * user_callback_arg , char * * callback_contact"		3253693	3					
ANR	3254028	Parameter	globus_gt4_gram_callback_func_t callback_func	2630:1:68682:68726	3253693	0	True				
ANR	3254029	ParameterType	globus_gt4_gram_callback_func_t		3253693	0					
ANR	3254030	Identifier	callback_func		3253693	1					
ANR	3254031	Parameter	void * user_callback_arg	2631:1:68730:68753	3253693	1	True				
ANR	3254032	ParameterType	void *		3253693	0					
ANR	3254033	Identifier	user_callback_arg		3253693	1					
ANR	3254034	Parameter	char * * callback_contact	2632:1:68757:68780	3253693	2	True				
ANR	3254035	ParameterType	char * *		3253693	0					
ANR	3254036	Identifier	callback_contact		3253693	1					
ANR	3254037	CFGEntryNode	ENTRY		3253693		True				
ANR	3254038	CFGExitNode	EXIT		3253693		True				
ANR	3254039	Symbol	server		3253693						
ANR	3254040	Symbol	server -> globus_gt4_gram_user_callback_arg		3253693						
ANR	3254041	Symbol	server -> m_commands_supported		3253693						
ANR	3254042	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3253693						
ANR	3254043	Symbol	* server		3253693						
ANR	3254044	Symbol	results_only		3253693						
ANR	3254045	Symbol	* server -> m_commands_supported		3253693						
ANR	3254046	Symbol	reqid		3253693						
ANR	3254047	Symbol	result		3253693						
ANR	3254048	Symbol	user_callback_arg		3253693						
ANR	3254049	Symbol	* result		3253693						
ANR	3254050	Symbol	server -> m_commands_supported -> contains_anycase		3253693						
ANR	3254051	Symbol	m_mode		3253693						
ANR	3254052	Symbol	strcasecmp		3253693						
ANR	3254053	Symbol	snprintf		3253693						
ANR	3254054	Symbol	* callback_contact		3253693						
ANR	3254055	Symbol	NULL		3253693						
ANR	3254056	Symbol	server -> globus_gt4_gram_callback_func		3253693						
ANR	3254057	Symbol	* * result . argv		3253693						
ANR	3254058	Symbol	D_ALWAYS		3253693						
ANR	3254059	Symbol	* * result		3253693						
ANR	3254060	Symbol	server -> globus_gt4_gram_callback_contact		3253693						
ANR	3254061	Symbol	* result . argv		3253693						
ANR	3254062	Symbol	NULLSTRING		3253693						
ANR	3254063	Symbol	command		3253693						
ANR	3254064	Symbol	es		3253693						
ANR	3254065	Symbol	result . argv		3253693						
ANR	3254066	Symbol	error_string		3253693						
ANR	3254067	Symbol	callback_contact		3253693						
ANR	3254068	Symbol	buf		3253693						
ANR	3254069	Symbol	server -> globus_gt4_gram_callback_reqid		3253693						
ANR	3254070	Symbol	server -> new_reqid		3253693						
ANR	3254071	Symbol	x		3253693						
ANR	3254072	Symbol	result . argc		3253693						
ANR	3254073	Symbol	* * server		3253693						
ANR	3254074	Symbol	FALSE		3253693						
ANR	3254075	Symbol	strdup		3253693						
ANR	3254076	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3253693						
ANR	3254077	Symbol	callback_func		3253693						
ANR	3254078	Function	GahpClient :: gt4_gram_client_job_create	2699:0:70838:73423							
ANR	3254079	FunctionDef	"GahpClient :: gt4_gram_client_job_create (const char * submit_id , const char * resource_manager_contact , const char * jobmanager_type , const char * callback_contact , const char * rsl , time_t termination_time , char * * job_contact)"		3254078	0					
ANR	3254080	CompoundStatement		2708:0:71089:73423	3254078	0					
ANR	3254081	Statement	static	2710:1:71093:71098	3254078	0	True				
ANR	3254082	IdentifierDeclStatement	"const char * command = ""GT4_GRAM_JOB_SUBMIT"" ;"	2710:8:71100:71143	3254078	1	True				
ANR	3254083	IdentifierDecl	"* command = ""GT4_GRAM_JOB_SUBMIT"""		3254078	0					
ANR	3254084	IdentifierDeclType	const char *		3254078	0					
ANR	3254085	Identifier	command		3254078	1					
ANR	3254086	AssignmentExpression	"* command = ""GT4_GRAM_JOB_SUBMIT"""		3254078	2		=			
ANR	3254087	Identifier	command		3254078	0					
ANR	3254088	PrimaryExpression	"""GT4_GRAM_JOB_SUBMIT"""		3254078	1					
ANR	3254089	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3254078	2					
ANR	3254090	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2713:6:71192:71253	3254078	0	True				
ANR	3254091	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3254078	0		==			
ANR	3254092	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3254078	0					
ANR	3254093	Callee	server -> m_commands_supported -> contains_anycase		3254078	0					
ANR	3254094	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3254078	0					
ANR	3254095	PtrMemberAccess	server -> m_commands_supported		3254078	0					
ANR	3254096	Identifier	server		3254078	0					
ANR	3254097	Identifier	m_commands_supported		3254078	1					
ANR	3254098	Identifier	contains_anycase		3254078	1					
ANR	3254099	ArgumentList	command		3254078	1					
ANR	3254100	Argument	command		3254078	0					
ANR	3254101	Identifier	command		3254078	0					
ANR	3254102	Identifier	FALSE		3254078	1					
ANR	3254103	CompoundStatement		6:70:166:166	3254078	1					
ANR	3254104	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2714:2:71260:71299	3254078	0	True				
ANR	3254105	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3254078	0					
ANR	3254106	IfStatement	if ( ! resource_manager_contact )		3254078	3					
ANR	3254107	Condition	! resource_manager_contact	2718:5:71337:71361	3254078	0	True				
ANR	3254108	UnaryOperationExpression	! resource_manager_contact		3254078	0					
ANR	3254109	UnaryOperator	!		3254078	0					
ANR	3254110	Identifier	resource_manager_contact		3254078	1					
ANR	3254111	ExpressionStatement	resource_manager_contact = NULLSTRING	2718:32:71364:71399	3254078	1	True				
ANR	3254112	AssignmentExpression	resource_manager_contact = NULLSTRING		3254078	0		=			
ANR	3254113	Identifier	resource_manager_contact		3254078	0					
ANR	3254114	Identifier	NULLSTRING		3254078	1					
ANR	3254115	IfStatement	if ( ! rsl )		3254078	4					
ANR	3254116	Condition	! rsl	2719:5:71406:71409	3254078	0	True				
ANR	3254117	UnaryOperationExpression	! rsl		3254078	0					
ANR	3254118	UnaryOperator	!		3254078	0					
ANR	3254119	Identifier	rsl		3254078	1					
ANR	3254120	ExpressionStatement	rsl = NULLSTRING	2719:11:71412:71426	3254078	1	True				
ANR	3254121	AssignmentExpression	rsl = NULLSTRING		3254078	0		=			
ANR	3254122	Identifier	rsl		3254078	0					
ANR	3254123	Identifier	NULLSTRING		3254078	1					
ANR	3254124	IfStatement	if ( ! callback_contact )		3254078	5					
ANR	3254125	Condition	! callback_contact	2720:5:71433:71449	3254078	0	True				
ANR	3254126	UnaryOperationExpression	! callback_contact		3254078	0					
ANR	3254127	UnaryOperator	!		3254078	0					
ANR	3254128	Identifier	callback_contact		3254078	1					
ANR	3254129	ExpressionStatement	callback_contact = NULLSTRING	2720:24:71452:71479	3254078	1	True				
ANR	3254130	AssignmentExpression	callback_contact = NULLSTRING		3254078	0		=			
ANR	3254131	Identifier	callback_contact		3254078	0					
ANR	3254132	Identifier	NULLSTRING		3254078	1					
ANR	3254133	IdentifierDeclStatement	char * _submit_id = strdup ( escapeGahpString ( submit_id ) ) ;	2722:1:71484:71540	3254078	6	True				
ANR	3254134	IdentifierDecl	* _submit_id = strdup ( escapeGahpString ( submit_id ) )		3254078	0					
ANR	3254135	IdentifierDeclType	char *		3254078	0					
ANR	3254136	Identifier	_submit_id		3254078	1					
ANR	3254137	AssignmentExpression	* _submit_id = strdup ( escapeGahpString ( submit_id ) )		3254078	2		=			
ANR	3254138	Identifier	_submit_id		3254078	0					
ANR	3254139	CallExpression	strdup ( escapeGahpString ( submit_id ) )		3254078	1					
ANR	3254140	Callee	strdup		3254078	0					
ANR	3254141	Identifier	strdup		3254078	0					
ANR	3254142	ArgumentList	escapeGahpString ( submit_id )		3254078	1					
ANR	3254143	Argument	escapeGahpString ( submit_id )		3254078	0					
ANR	3254144	CallExpression	escapeGahpString ( submit_id )		3254078	0					
ANR	3254145	Callee	escapeGahpString		3254078	0					
ANR	3254146	Identifier	escapeGahpString		3254078	0					
ANR	3254147	ArgumentList	submit_id		3254078	1					
ANR	3254148	Argument	submit_id		3254078	0					
ANR	3254149	Identifier	submit_id		3254078	0					
ANR	3254150	IdentifierDeclStatement	char * _resource_manager_contact = strdup ( escapeGahpString ( resource_manager_contact ) ) ;	2723:1:71543:71632	3254078	7	True				
ANR	3254151	IdentifierDecl	* _resource_manager_contact = strdup ( escapeGahpString ( resource_manager_contact ) )		3254078	0					
ANR	3254152	IdentifierDeclType	char *		3254078	0					
ANR	3254153	Identifier	_resource_manager_contact		3254078	1					
ANR	3254154	AssignmentExpression	* _resource_manager_contact = strdup ( escapeGahpString ( resource_manager_contact ) )		3254078	2		=			
ANR	3254155	Identifier	_resource_manager_contact		3254078	0					
ANR	3254156	CallExpression	strdup ( escapeGahpString ( resource_manager_contact ) )		3254078	1					
ANR	3254157	Callee	strdup		3254078	0					
ANR	3254158	Identifier	strdup		3254078	0					
ANR	3254159	ArgumentList	escapeGahpString ( resource_manager_contact )		3254078	1					
ANR	3254160	Argument	escapeGahpString ( resource_manager_contact )		3254078	0					
ANR	3254161	CallExpression	escapeGahpString ( resource_manager_contact )		3254078	0					
ANR	3254162	Callee	escapeGahpString		3254078	0					
ANR	3254163	Identifier	escapeGahpString		3254078	0					
ANR	3254164	ArgumentList	resource_manager_contact		3254078	1					
ANR	3254165	Argument	resource_manager_contact		3254078	0					
ANR	3254166	Identifier	resource_manager_contact		3254078	0					
ANR	3254167	IdentifierDeclStatement	char * _jobmanager_type = strdup ( escapeGahpString ( jobmanager_type ) ) ;	2725:1:71635:71703	3254078	8	True				
ANR	3254168	IdentifierDecl	* _jobmanager_type = strdup ( escapeGahpString ( jobmanager_type ) )		3254078	0					
ANR	3254169	IdentifierDeclType	char *		3254078	0					
ANR	3254170	Identifier	_jobmanager_type		3254078	1					
ANR	3254171	AssignmentExpression	* _jobmanager_type = strdup ( escapeGahpString ( jobmanager_type ) )		3254078	2		=			
ANR	3254172	Identifier	_jobmanager_type		3254078	0					
ANR	3254173	CallExpression	strdup ( escapeGahpString ( jobmanager_type ) )		3254078	1					
ANR	3254174	Callee	strdup		3254078	0					
ANR	3254175	Identifier	strdup		3254078	0					
ANR	3254176	ArgumentList	escapeGahpString ( jobmanager_type )		3254078	1					
ANR	3254177	Argument	escapeGahpString ( jobmanager_type )		3254078	0					
ANR	3254178	CallExpression	escapeGahpString ( jobmanager_type )		3254078	0					
ANR	3254179	Callee	escapeGahpString		3254078	0					
ANR	3254180	Identifier	escapeGahpString		3254078	0					
ANR	3254181	ArgumentList	jobmanager_type		3254078	1					
ANR	3254182	Argument	jobmanager_type		3254078	0					
ANR	3254183	Identifier	jobmanager_type		3254078	0					
ANR	3254184	IdentifierDeclStatement	char * _callback_contact = strdup ( escapeGahpString ( callback_contact ) ) ;	2726:1:71706:71776	3254078	9	True				
ANR	3254185	IdentifierDecl	* _callback_contact = strdup ( escapeGahpString ( callback_contact ) )		3254078	0					
ANR	3254186	IdentifierDeclType	char *		3254078	0					
ANR	3254187	Identifier	_callback_contact		3254078	1					
ANR	3254188	AssignmentExpression	* _callback_contact = strdup ( escapeGahpString ( callback_contact ) )		3254078	2		=			
ANR	3254189	Identifier	_callback_contact		3254078	0					
ANR	3254190	CallExpression	strdup ( escapeGahpString ( callback_contact ) )		3254078	1					
ANR	3254191	Callee	strdup		3254078	0					
ANR	3254192	Identifier	strdup		3254078	0					
ANR	3254193	ArgumentList	escapeGahpString ( callback_contact )		3254078	1					
ANR	3254194	Argument	escapeGahpString ( callback_contact )		3254078	0					
ANR	3254195	CallExpression	escapeGahpString ( callback_contact )		3254078	0					
ANR	3254196	Callee	escapeGahpString		3254078	0					
ANR	3254197	Identifier	escapeGahpString		3254078	0					
ANR	3254198	ArgumentList	callback_contact		3254078	1					
ANR	3254199	Argument	callback_contact		3254078	0					
ANR	3254200	Identifier	callback_contact		3254078	0					
ANR	3254201	IdentifierDeclStatement	char * _rsl = strdup ( escapeGahpString ( rsl ) ) ;	2727:1:71779:71823	3254078	10	True				
ANR	3254202	IdentifierDecl	* _rsl = strdup ( escapeGahpString ( rsl ) )		3254078	0					
ANR	3254203	IdentifierDeclType	char *		3254078	0					
ANR	3254204	Identifier	_rsl		3254078	1					
ANR	3254205	AssignmentExpression	* _rsl = strdup ( escapeGahpString ( rsl ) )		3254078	2		=			
ANR	3254206	Identifier	_rsl		3254078	0					
ANR	3254207	CallExpression	strdup ( escapeGahpString ( rsl ) )		3254078	1					
ANR	3254208	Callee	strdup		3254078	0					
ANR	3254209	Identifier	strdup		3254078	0					
ANR	3254210	ArgumentList	escapeGahpString ( rsl )		3254078	1					
ANR	3254211	Argument	escapeGahpString ( rsl )		3254078	0					
ANR	3254212	CallExpression	escapeGahpString ( rsl )		3254078	0					
ANR	3254213	Callee	escapeGahpString		3254078	0					
ANR	3254214	Identifier	escapeGahpString		3254078	0					
ANR	3254215	ArgumentList	rsl		3254078	1					
ANR	3254216	Argument	rsl		3254078	0					
ANR	3254217	Identifier	rsl		3254078	0					
ANR	3254218	IdentifierDeclStatement	std :: string reqline ;	2729:1:71827:71846	3254078	11	True				
ANR	3254219	IdentifierDecl	reqline		3254078	0					
ANR	3254220	IdentifierDeclType	std :: string		3254078	0					
ANR	3254221	Identifier	reqline		3254078	1					
ANR	3254222	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s %s %d"" , _submit_id , _resource_manager_contact , _jobmanager_type , _callback_contact , _rsl , ( int ) termination_time ) ;"	2730:1:71849:72048	3254078	12	True				
ANR	3254223	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s %s %d"" , _submit_id , _resource_manager_contact , _jobmanager_type , _callback_contact , _rsl , ( int ) termination_time )"		3254078	0					
ANR	3254224	IdentifierDeclType	int		3254078	0					
ANR	3254225	Identifier	x		3254078	1					
ANR	3254226	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s %s %d"" , _submit_id , _resource_manager_contact , _jobmanager_type , _callback_contact , _rsl , ( int ) termination_time )"		3254078	2		=			
ANR	3254227	Identifier	x		3254078	0					
ANR	3254228	CallExpression	"sprintf ( reqline , ""%s %s %s %s %s %d"" , _submit_id , _resource_manager_contact , _jobmanager_type , _callback_contact , _rsl , ( int ) termination_time )"		3254078	1					
ANR	3254229	Callee	sprintf		3254078	0					
ANR	3254230	Identifier	sprintf		3254078	0					
ANR	3254231	ArgumentList	reqline		3254078	1					
ANR	3254232	Argument	reqline		3254078	0					
ANR	3254233	Identifier	reqline		3254078	0					
ANR	3254234	Argument	"""%s %s %s %s %s %d"""		3254078	1					
ANR	3254235	PrimaryExpression	"""%s %s %s %s %s %d"""		3254078	0					
ANR	3254236	Argument	_submit_id		3254078	2					
ANR	3254237	Identifier	_submit_id		3254078	0					
ANR	3254238	Argument	_resource_manager_contact		3254078	3					
ANR	3254239	Identifier	_resource_manager_contact		3254078	0					
ANR	3254240	Argument	_jobmanager_type		3254078	4					
ANR	3254241	Identifier	_jobmanager_type		3254078	0					
ANR	3254242	Argument	_callback_contact		3254078	5					
ANR	3254243	Identifier	_callback_contact		3254078	0					
ANR	3254244	Argument	_rsl		3254078	6					
ANR	3254245	Identifier	_rsl		3254078	0					
ANR	3254246	Argument	( int ) termination_time		3254078	7					
ANR	3254247	CastExpression	( int ) termination_time		3254078	0					
ANR	3254248	CastTarget	int		3254078	0					
ANR	3254249	Identifier	termination_time		3254078	1					
ANR	3254250	ExpressionStatement	free ( _submit_id )	2739:1:72053:72070	3254078	13	True				
ANR	3254251	CallExpression	free ( _submit_id )		3254078	0					
ANR	3254252	Callee	free		3254078	0					
ANR	3254253	Identifier	free		3254078	0					
ANR	3254254	ArgumentList	_submit_id		3254078	1					
ANR	3254255	Argument	_submit_id		3254078	0					
ANR	3254256	Identifier	_submit_id		3254078	0					
ANR	3254257	ExpressionStatement	free ( _resource_manager_contact )	2740:1:72073:72105	3254078	14	True				
ANR	3254258	CallExpression	free ( _resource_manager_contact )		3254078	0					
ANR	3254259	Callee	free		3254078	0					
ANR	3254260	Identifier	free		3254078	0					
ANR	3254261	ArgumentList	_resource_manager_contact		3254078	1					
ANR	3254262	Argument	_resource_manager_contact		3254078	0					
ANR	3254263	Identifier	_resource_manager_contact		3254078	0					
ANR	3254264	ExpressionStatement	free ( _jobmanager_type )	2741:1:72108:72131	3254078	15	True				
ANR	3254265	CallExpression	free ( _jobmanager_type )		3254078	0					
ANR	3254266	Callee	free		3254078	0					
ANR	3254267	Identifier	free		3254078	0					
ANR	3254268	ArgumentList	_jobmanager_type		3254078	1					
ANR	3254269	Argument	_jobmanager_type		3254078	0					
ANR	3254270	Identifier	_jobmanager_type		3254078	0					
ANR	3254271	ExpressionStatement	free ( _callback_contact )	2742:1:72134:72158	3254078	16	True				
ANR	3254272	CallExpression	free ( _callback_contact )		3254078	0					
ANR	3254273	Callee	free		3254078	0					
ANR	3254274	Identifier	free		3254078	0					
ANR	3254275	ArgumentList	_callback_contact		3254078	1					
ANR	3254276	Argument	_callback_contact		3254078	0					
ANR	3254277	Identifier	_callback_contact		3254078	0					
ANR	3254278	ExpressionStatement	free ( _rsl )	2743:1:72161:72172	3254078	17	True				
ANR	3254279	CallExpression	free ( _rsl )		3254078	0					
ANR	3254280	Callee	free		3254078	0					
ANR	3254281	Identifier	free		3254078	0					
ANR	3254282	ArgumentList	_rsl		3254078	1					
ANR	3254283	Argument	_rsl		3254078	0					
ANR	3254284	Identifier	_rsl		3254078	0					
ANR	3254285	ExpressionStatement	ASSERT ( x > 0 )	2745:1:72176:72191	3254078	18	True				
ANR	3254286	CallExpression	ASSERT ( x > 0 )		3254078	0					
ANR	3254287	Callee	ASSERT		3254078	0					
ANR	3254288	Identifier	ASSERT		3254078	0					
ANR	3254289	ArgumentList	x > 0		3254078	1					
ANR	3254290	Argument	x > 0		3254078	0					
ANR	3254291	RelationalExpression	x > 0		3254078	0		>			
ANR	3254292	Identifier	x		3254078	0					
ANR	3254293	PrimaryExpression	0		3254078	1					
ANR	3254294	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	2746:1:72194:72227	3254078	19	True				
ANR	3254295	IdentifierDecl	* buf = reqline . c_str ( )		3254078	0					
ANR	3254296	IdentifierDeclType	const char *		3254078	0					
ANR	3254297	Identifier	buf		3254078	1					
ANR	3254298	AssignmentExpression	* buf = reqline . c_str ( )		3254078	2		=			
ANR	3254299	Identifier	buf		3254078	0					
ANR	3254300	CallExpression	reqline . c_str ( )		3254078	1					
ANR	3254301	Callee	reqline . c_str		3254078	0					
ANR	3254302	MemberAccess	reqline . c_str		3254078	0					
ANR	3254303	Identifier	reqline		3254078	0					
ANR	3254304	Identifier	c_str		3254078	1					
ANR	3254305	ArgumentList			3254078	1					
ANR	3254306	IfStatement	"if ( ! is_pending ( command , buf ) )"		3254078	20					
ANR	3254307	Condition	"! is_pending ( command , buf )"	2750:6:72328:72351	3254078	0	True				
ANR	3254308	UnaryOperationExpression	"! is_pending ( command , buf )"		3254078	0					
ANR	3254309	UnaryOperator	!		3254078	0					
ANR	3254310	CallExpression	"is_pending ( command , buf )"		3254078	1					
ANR	3254311	Callee	is_pending		3254078	0					
ANR	3254312	Identifier	is_pending		3254078	0					
ANR	3254313	ArgumentList	command		3254078	1					
ANR	3254314	Argument	command		3254078	0					
ANR	3254315	Identifier	command		3254078	0					
ANR	3254316	Argument	buf		3254078	1					
ANR	3254317	Identifier	buf		3254078	0					
ANR	3254318	CompoundStatement		43:33:1265:1265	3254078	1					
ANR	3254319	IfStatement	if ( m_mode == results_only )		3254078	0					
ANR	3254320	Condition	m_mode == results_only	2753:7:72460:72481	3254078	0	True				
ANR	3254321	EqualityExpression	m_mode == results_only		3254078	0		==			
ANR	3254322	Identifier	m_mode		3254078	0					
ANR	3254323	Identifier	results_only		3254078	1					
ANR	3254324	CompoundStatement		46:32:1395:1395	3254078	1					
ANR	3254325	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2754:3:72490:72529	3254078	0	True				
ANR	3254326	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3254078	0					
ANR	3254327	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	2756:2:72537:72573	3254078	1	True				
ANR	3254328	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3254078	0					
ANR	3254329	Callee	now_pending		3254078	0					
ANR	3254330	Identifier	now_pending		3254078	0					
ANR	3254331	ArgumentList	command		3254078	1					
ANR	3254332	Argument	command		3254078	0					
ANR	3254333	Identifier	command		3254078	0					
ANR	3254334	Argument	buf		3254078	1					
ANR	3254335	Identifier	buf		3254078	0					
ANR	3254336	Argument	deleg_proxy		3254078	2					
ANR	3254337	Identifier	deleg_proxy		3254078	0					
ANR	3254338	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	2762:1:72667:72718	3254078	21	True				
ANR	3254339	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3254078	0					
ANR	3254340	IdentifierDeclType	Gahp_Args *		3254078	0					
ANR	3254341	Identifier	result		3254078	1					
ANR	3254342	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3254078	2		=			
ANR	3254343	Identifier	result		3254078	0					
ANR	3254344	CallExpression	"get_pending_result ( command , buf )"		3254078	1					
ANR	3254345	Callee	get_pending_result		3254078	0					
ANR	3254346	Identifier	get_pending_result		3254078	0					
ANR	3254347	ArgumentList	command		3254078	1					
ANR	3254348	Argument	command		3254078	0					
ANR	3254349	Identifier	command		3254078	0					
ANR	3254350	Argument	buf		3254078	1					
ANR	3254351	Identifier	buf		3254078	0					
ANR	3254352	IfStatement	if ( result )		3254078	22					
ANR	3254353	Condition	result	2763:6:72726:72731	3254078	0	True				
ANR	3254354	Identifier	result		3254078	0					
ANR	3254355	CompoundStatement		61:2:1740:1770	3254078	1					
ANR	3254356	IfStatement	if ( result -> argc != 4 )		3254078	0					
ANR	3254357	Condition	result -> argc != 4	2765:6:72767:72783	3254078	0	True				
ANR	3254358	EqualityExpression	result -> argc != 4		3254078	0		!=			
ANR	3254359	PtrMemberAccess	result -> argc		3254078	0					
ANR	3254360	Identifier	result		3254078	0					
ANR	3254361	Identifier	argc		3254078	1					
ANR	3254362	PrimaryExpression	4		3254078	1					
ANR	3254363	CompoundStatement		58:25:1696:1696	3254078	1					
ANR	3254364	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	2766:3:72791:72822	3254078	0	True				
ANR	3254365	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3254078	0					
ANR	3254366	Callee	EXCEPT		3254078	0					
ANR	3254367	Identifier	EXCEPT		3254078	0					
ANR	3254368	ArgumentList	"""Bad %s Result"""		3254078	1					
ANR	3254369	Argument	"""Bad %s Result"""		3254078	0					
ANR	3254370	PrimaryExpression	"""Bad %s Result"""		3254078	0					
ANR	3254371	Argument	command		3254078	1					
ANR	3254372	Identifier	command		3254078	0					
ANR	3254373	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	2768:2:72830:72860	3254078	1	True				
ANR	3254374	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3254078	0					
ANR	3254375	IdentifierDeclType	int		3254078	0					
ANR	3254376	Identifier	rc		3254078	1					
ANR	3254377	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3254078	2		=			
ANR	3254378	Identifier	rc		3254078	0					
ANR	3254379	CallExpression	atoi ( result -> argv [ 1 ] )		3254078	1					
ANR	3254380	Callee	atoi		3254078	0					
ANR	3254381	Identifier	atoi		3254078	0					
ANR	3254382	ArgumentList	result -> argv [ 1 ]		3254078	1					
ANR	3254383	Argument	result -> argv [ 1 ]		3254078	0					
ANR	3254384	ArrayIndexing	result -> argv [ 1 ]		3254078	0					
ANR	3254385	PtrMemberAccess	result -> argv		3254078	0					
ANR	3254386	Identifier	result		3254078	0					
ANR	3254387	Identifier	argv		3254078	1					
ANR	3254388	PrimaryExpression	1		3254078	1					
ANR	3254389	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3254078	2					
ANR	3254390	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	2769:7:72869:72907	3254078	0	True				
ANR	3254391	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3254078	0					
ANR	3254392	Callee	strcasecmp		3254078	0					
ANR	3254393	Identifier	strcasecmp		3254078	0					
ANR	3254394	ArgumentList	result -> argv [ 2 ]		3254078	1					
ANR	3254395	Argument	result -> argv [ 2 ]		3254078	0					
ANR	3254396	ArrayIndexing	result -> argv [ 2 ]		3254078	0					
ANR	3254397	PtrMemberAccess	result -> argv		3254078	0					
ANR	3254398	Identifier	result		3254078	0					
ANR	3254399	Identifier	argv		3254078	1					
ANR	3254400	PrimaryExpression	2		3254078	1					
ANR	3254401	Argument	NULLSTRING		3254078	1					
ANR	3254402	Identifier	NULLSTRING		3254078	0					
ANR	3254403	CompoundStatement		62:49:1821:1821	3254078	1					
ANR	3254404	ExpressionStatement	* job_contact = strdup ( result -> argv [ 2 ] )	2770:3:72916:72954	3254078	0	True				
ANR	3254405	AssignmentExpression	* job_contact = strdup ( result -> argv [ 2 ] )		3254078	0		=			
ANR	3254406	UnaryOperationExpression	* job_contact		3254078	0					
ANR	3254407	UnaryOperator	*		3254078	0					
ANR	3254408	Identifier	job_contact		3254078	1					
ANR	3254409	CallExpression	strdup ( result -> argv [ 2 ] )		3254078	1					
ANR	3254410	Callee	strdup		3254078	0					
ANR	3254411	Identifier	strdup		3254078	0					
ANR	3254412	ArgumentList	result -> argv [ 2 ]		3254078	1					
ANR	3254413	Argument	result -> argv [ 2 ]		3254078	0					
ANR	3254414	ArrayIndexing	result -> argv [ 2 ]		3254078	0					
ANR	3254415	PtrMemberAccess	result -> argv		3254078	0					
ANR	3254416	Identifier	result		3254078	0					
ANR	3254417	Identifier	argv		3254078	1					
ANR	3254418	PrimaryExpression	2		3254078	1					
ANR	3254419	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3254078	3					
ANR	3254420	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	2772:7:72967:73005	3254078	0	True				
ANR	3254421	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3254078	0					
ANR	3254422	Callee	strcasecmp		3254078	0					
ANR	3254423	Identifier	strcasecmp		3254078	0					
ANR	3254424	ArgumentList	result -> argv [ 3 ]		3254078	1					
ANR	3254425	Argument	result -> argv [ 3 ]		3254078	0					
ANR	3254426	ArrayIndexing	result -> argv [ 3 ]		3254078	0					
ANR	3254427	PtrMemberAccess	result -> argv		3254078	0					
ANR	3254428	Identifier	result		3254078	0					
ANR	3254429	Identifier	argv		3254078	1					
ANR	3254430	PrimaryExpression	3		3254078	1					
ANR	3254431	Argument	NULLSTRING		3254078	1					
ANR	3254432	Identifier	NULLSTRING		3254078	0					
ANR	3254433	CompoundStatement		65:49:1919:1919	3254078	1					
ANR	3254434	ExpressionStatement	error_string = result -> argv [ 3 ]	2773:3:73014:73044	3254078	0	True				
ANR	3254435	AssignmentExpression	error_string = result -> argv [ 3 ]		3254078	0		=			
ANR	3254436	Identifier	error_string		3254078	0					
ANR	3254437	ArrayIndexing	result -> argv [ 3 ]		3254078	1					
ANR	3254438	PtrMemberAccess	result -> argv		3254078	0					
ANR	3254439	Identifier	result		3254078	0					
ANR	3254440	Identifier	argv		3254078	1					
ANR	3254441	PrimaryExpression	3		3254078	1					
ANR	3254442	ElseStatement	else		3254078	0					
ANR	3254443	CompoundStatement		67:9:1965:1965	3254078	0					
ANR	3254444	ExpressionStatement	"error_string = """""	2775:3:73060:73077	3254078	0	True				
ANR	3254445	AssignmentExpression	"error_string = """""		3254078	0		=			
ANR	3254446	Identifier	error_string		3254078	0					
ANR	3254447	PrimaryExpression	""""""		3254078	1					
ANR	3254448	Statement	delete	2777:2:73085:73090	3254078	4	True				
ANR	3254449	ExpressionStatement	result	2777:9:73092:73098	3254078	5	True				
ANR	3254450	Identifier	result		3254078	0					
ANR	3254451	ReturnStatement	return rc ;	2778:2:73102:73111	3254078	6	True				
ANR	3254452	Identifier	rc		3254078	0					
ANR	3254453	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3254078	23					
ANR	3254454	Condition	"check_pending_timeout ( command , buf )"	2782:6:73168:73201	3254078	0	True				
ANR	3254455	CallExpression	"check_pending_timeout ( command , buf )"		3254078	0					
ANR	3254456	Callee	check_pending_timeout		3254078	0					
ANR	3254457	Identifier	check_pending_timeout		3254078	0					
ANR	3254458	ArgumentList	command		3254078	1					
ANR	3254459	Argument	command		3254078	0					
ANR	3254460	Identifier	command		3254078	0					
ANR	3254461	Argument	buf		3254078	1					
ANR	3254462	Identifier	buf		3254078	0					
ANR	3254463	CompoundStatement		75:43:2115:2115	3254078	1					
ANR	3254464	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	2784:2:73241:73289	3254078	0	True				
ANR	3254465	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3254078	0					
ANR	3254466	Callee	sprintf		3254078	0					
ANR	3254467	Identifier	sprintf		3254078	0					
ANR	3254468	ArgumentList	error_string		3254078	1					
ANR	3254469	Argument	error_string		3254078	0					
ANR	3254470	Identifier	error_string		3254078	0					
ANR	3254471	Argument	"""%s timed out"""		3254078	1					
ANR	3254472	PrimaryExpression	"""%s timed out"""		3254078	0					
ANR	3254473	Argument	command		3254078	2					
ANR	3254474	Identifier	command		3254078	0					
ANR	3254475	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	2785:2:73293:73328	3254078	1	True				
ANR	3254476	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3254078	0					
ANR	3254477	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2789:1:73388:73421	3254078	24	True				
ANR	3254478	Identifier	GAHPCLIENT_COMMAND_PENDING		3254078	0					
ANR	3254479	ReturnType	int		3254078	1					
ANR	3254480	Identifier	GahpClient :: gt4_gram_client_job_create		3254078	2					
ANR	3254481	ParameterList	"const char * submit_id , const char * resource_manager_contact , const char * jobmanager_type , const char * callback_contact , const char * rsl , time_t termination_time , char * * job_contact"		3254078	3					
ANR	3254482	Parameter	const char * submit_id	2701:1:70884:70905	3254078	0	True				
ANR	3254483	ParameterType	const char *		3254078	0					
ANR	3254484	Identifier	submit_id		3254078	1					
ANR	3254485	Parameter	const char * resource_manager_contact	2702:1:70920:70956	3254078	1	True				
ANR	3254486	ParameterType	const char *		3254078	0					
ANR	3254487	Identifier	resource_manager_contact		3254078	1					
ANR	3254488	Parameter	const char * jobmanager_type	2703:1:70960:70987	3254078	2	True				
ANR	3254489	ParameterType	const char *		3254078	0					
ANR	3254490	Identifier	jobmanager_type		3254078	1					
ANR	3254491	Parameter	const char * callback_contact	2704:1:70991:71019	3254078	3	True				
ANR	3254492	ParameterType	const char *		3254078	0					
ANR	3254493	Identifier	callback_contact		3254078	1					
ANR	3254494	Parameter	const char * rsl	2705:1:71023:71038	3254078	4	True				
ANR	3254495	ParameterType	const char *		3254078	0					
ANR	3254496	Identifier	rsl		3254078	1					
ANR	3254497	Parameter	time_t termination_time	2706:1:71042:71064	3254078	5	True				
ANR	3254498	ParameterType	time_t		3254078	0					
ANR	3254499	Identifier	termination_time		3254078	1					
ANR	3254500	Parameter	char * * job_contact	2707:1:71068:71086	3254078	6	True				
ANR	3254501	ParameterType	char * *		3254078	0					
ANR	3254502	Identifier	job_contact		3254078	1					
ANR	3254503	CFGEntryNode	ENTRY		3254078		True				
ANR	3254504	CFGExitNode	EXIT		3254078		True				
ANR	3254505	Symbol	server -> m_commands_supported		3254078						
ANR	3254506	Symbol	resource_manager_contact		3254078						
ANR	3254507	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3254078						
ANR	3254508	Symbol	sprintf		3254078						
ANR	3254509	Symbol	jobmanager_type		3254078						
ANR	3254510	Symbol	server -> m_commands_supported -> contains_anycase		3254078						
ANR	3254511	Symbol	GAHPCLIENT_COMMAND_PENDING		3254078						
ANR	3254512	Symbol	strcasecmp		3254078						
ANR	3254513	Symbol	job_contact		3254078						
ANR	3254514	Symbol	* job_contact		3254078						
ANR	3254515	Symbol	_rsl		3254078						
ANR	3254516	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3254078						
ANR	3254517	Symbol	* * result		3254078						
ANR	3254518	Symbol	_submit_id		3254078						
ANR	3254519	Symbol	termination_time		3254078						
ANR	3254520	Symbol	get_pending_result		3254078						
ANR	3254521	Symbol	rc		3254078						
ANR	3254522	Symbol	is_pending		3254078						
ANR	3254523	Symbol	deleg_proxy		3254078						
ANR	3254524	Symbol	server		3254078						
ANR	3254525	Symbol	escapeGahpString		3254078						
ANR	3254526	Symbol	* server		3254078						
ANR	3254527	Symbol	rsl		3254078						
ANR	3254528	Symbol	reqline . c_str		3254078						
ANR	3254529	Symbol	results_only		3254078						
ANR	3254530	Symbol	result -> argv		3254078						
ANR	3254531	Symbol	* server -> m_commands_supported		3254078						
ANR	3254532	Symbol	result		3254078						
ANR	3254533	Symbol	* result		3254078						
ANR	3254534	Symbol	reqline		3254078						
ANR	3254535	Symbol	_callback_contact		3254078						
ANR	3254536	Symbol	m_mode		3254078						
ANR	3254537	Symbol	* result -> argv		3254078						
ANR	3254538	Symbol	atoi		3254078						
ANR	3254539	Symbol	submit_id		3254078						
ANR	3254540	Symbol	NULLSTRING		3254078						
ANR	3254541	Symbol	command		3254078						
ANR	3254542	Symbol	error_string		3254078						
ANR	3254543	Symbol	callback_contact		3254078						
ANR	3254544	Symbol	buf		3254078						
ANR	3254545	Symbol	_jobmanager_type		3254078						
ANR	3254546	Symbol	_resource_manager_contact		3254078						
ANR	3254547	Symbol	x		3254078						
ANR	3254548	Symbol	result -> argc		3254078						
ANR	3254549	Symbol	* * server		3254078						
ANR	3254550	Symbol	FALSE		3254078						
ANR	3254551	Symbol	strdup		3254078						
ANR	3254552	Symbol	check_pending_timeout		3254078						
ANR	3254553	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3254078						
ANR	3254554	Function	GahpClient :: gt4_gram_client_job_start	2792:0:73426:75014							
ANR	3254555	FunctionDef	GahpClient :: gt4_gram_client_job_start (const char * job_contact)		3254554	0					
ANR	3254556	CompoundStatement		2794:0:73495:75014	3254554	0					
ANR	3254557	Statement	static	2795:1:73498:73503	3254554	0	True				
ANR	3254558	IdentifierDeclStatement	"const char * command = ""GT4_GRAM_JOB_START"" ;"	2795:8:73505:73547	3254554	1	True				
ANR	3254559	IdentifierDecl	"* command = ""GT4_GRAM_JOB_START"""		3254554	0					
ANR	3254560	IdentifierDeclType	const char *		3254554	0					
ANR	3254561	Identifier	command		3254554	1					
ANR	3254562	AssignmentExpression	"* command = ""GT4_GRAM_JOB_START"""		3254554	2		=			
ANR	3254563	Identifier	command		3254554	0					
ANR	3254564	PrimaryExpression	"""GT4_GRAM_JOB_START"""		3254554	1					
ANR	3254565	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3254554	2					
ANR	3254566	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2798:6:73596:73657	3254554	0	True				
ANR	3254567	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3254554	0		==			
ANR	3254568	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3254554	0					
ANR	3254569	Callee	server -> m_commands_supported -> contains_anycase		3254554	0					
ANR	3254570	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3254554	0					
ANR	3254571	PtrMemberAccess	server -> m_commands_supported		3254554	0					
ANR	3254572	Identifier	server		3254554	0					
ANR	3254573	Identifier	m_commands_supported		3254554	1					
ANR	3254574	Identifier	contains_anycase		3254554	1					
ANR	3254575	ArgumentList	command		3254554	1					
ANR	3254576	Argument	command		3254554	0					
ANR	3254577	Identifier	command		3254554	0					
ANR	3254578	Identifier	FALSE		3254554	1					
ANR	3254579	CompoundStatement		5:70:164:164	3254554	1					
ANR	3254580	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2799:2:73664:73703	3254554	0	True				
ANR	3254581	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3254554	0					
ANR	3254582	IfStatement	if ( ! job_contact )		3254554	3					
ANR	3254583	Condition	! job_contact	2803:5:73741:73752	3254554	0	True				
ANR	3254584	UnaryOperationExpression	! job_contact		3254554	0					
ANR	3254585	UnaryOperator	!		3254554	0					
ANR	3254586	Identifier	job_contact		3254554	1					
ANR	3254587	ExpressionStatement	job_contact = NULLSTRING	2803:19:73755:73777	3254554	1	True				
ANR	3254588	AssignmentExpression	job_contact = NULLSTRING		3254554	0		=			
ANR	3254589	Identifier	job_contact		3254554	0					
ANR	3254590	Identifier	NULLSTRING		3254554	1					
ANR	3254591	IdentifierDeclStatement	std :: string reqline ;	2804:1:73780:73799	3254554	4	True				
ANR	3254592	IdentifierDecl	reqline		3254554	0					
ANR	3254593	IdentifierDeclType	std :: string		3254554	0					
ANR	3254594	Identifier	reqline		3254554	1					
ANR	3254595	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	2805:1:73802:73861	3254554	5	True				
ANR	3254596	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3254554	0					
ANR	3254597	IdentifierDeclType	int		3254554	0					
ANR	3254598	Identifier	x		3254554	1					
ANR	3254599	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3254554	2		=			
ANR	3254600	Identifier	x		3254554	0					
ANR	3254601	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3254554	1					
ANR	3254602	Callee	sprintf		3254554	0					
ANR	3254603	Identifier	sprintf		3254554	0					
ANR	3254604	ArgumentList	reqline		3254554	1					
ANR	3254605	Argument	reqline		3254554	0					
ANR	3254606	Identifier	reqline		3254554	0					
ANR	3254607	Argument	"""%s"""		3254554	1					
ANR	3254608	PrimaryExpression	"""%s"""		3254554	0					
ANR	3254609	Argument	escapeGahpString ( job_contact )		3254554	2					
ANR	3254610	CallExpression	escapeGahpString ( job_contact )		3254554	0					
ANR	3254611	Callee	escapeGahpString		3254554	0					
ANR	3254612	Identifier	escapeGahpString		3254554	0					
ANR	3254613	ArgumentList	job_contact		3254554	1					
ANR	3254614	Argument	job_contact		3254554	0					
ANR	3254615	Identifier	job_contact		3254554	0					
ANR	3254616	ExpressionStatement	ASSERT ( x > 0 )	2806:1:73864:73879	3254554	6	True				
ANR	3254617	CallExpression	ASSERT ( x > 0 )		3254554	0					
ANR	3254618	Callee	ASSERT		3254554	0					
ANR	3254619	Identifier	ASSERT		3254554	0					
ANR	3254620	ArgumentList	x > 0		3254554	1					
ANR	3254621	Argument	x > 0		3254554	0					
ANR	3254622	RelationalExpression	x > 0		3254554	0		>			
ANR	3254623	Identifier	x		3254554	0					
ANR	3254624	PrimaryExpression	0		3254554	1					
ANR	3254625	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	2807:1:73882:73915	3254554	7	True				
ANR	3254626	IdentifierDecl	* buf = reqline . c_str ( )		3254554	0					
ANR	3254627	IdentifierDeclType	const char *		3254554	0					
ANR	3254628	Identifier	buf		3254554	1					
ANR	3254629	AssignmentExpression	* buf = reqline . c_str ( )		3254554	2		=			
ANR	3254630	Identifier	buf		3254554	0					
ANR	3254631	CallExpression	reqline . c_str ( )		3254554	1					
ANR	3254632	Callee	reqline . c_str		3254554	0					
ANR	3254633	MemberAccess	reqline . c_str		3254554	0					
ANR	3254634	Identifier	reqline		3254554	0					
ANR	3254635	Identifier	c_str		3254554	1					
ANR	3254636	ArgumentList			3254554	1					
ANR	3254637	IfStatement	"if ( ! is_pending ( command , buf ) )"		3254554	8					
ANR	3254638	Condition	"! is_pending ( command , buf )"	2811:6:74016:74039	3254554	0	True				
ANR	3254639	UnaryOperationExpression	"! is_pending ( command , buf )"		3254554	0					
ANR	3254640	UnaryOperator	!		3254554	0					
ANR	3254641	CallExpression	"is_pending ( command , buf )"		3254554	1					
ANR	3254642	Callee	is_pending		3254554	0					
ANR	3254643	Identifier	is_pending		3254554	0					
ANR	3254644	ArgumentList	command		3254554	1					
ANR	3254645	Argument	command		3254554	0					
ANR	3254646	Identifier	command		3254554	0					
ANR	3254647	Argument	buf		3254554	1					
ANR	3254648	Identifier	buf		3254554	0					
ANR	3254649	CompoundStatement		18:33:547:547	3254554	1					
ANR	3254650	IfStatement	if ( m_mode == results_only )		3254554	0					
ANR	3254651	Condition	m_mode == results_only	2814:7:74148:74169	3254554	0	True				
ANR	3254652	EqualityExpression	m_mode == results_only		3254554	0		==			
ANR	3254653	Identifier	m_mode		3254554	0					
ANR	3254654	Identifier	results_only		3254554	1					
ANR	3254655	CompoundStatement		21:32:677:677	3254554	1					
ANR	3254656	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2815:3:74178:74217	3254554	0	True				
ANR	3254657	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3254554	0					
ANR	3254658	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	2817:2:74225:74262	3254554	1	True				
ANR	3254659	CallExpression	"now_pending ( command , buf , normal_proxy )"		3254554	0					
ANR	3254660	Callee	now_pending		3254554	0					
ANR	3254661	Identifier	now_pending		3254554	0					
ANR	3254662	ArgumentList	command		3254554	1					
ANR	3254663	Argument	command		3254554	0					
ANR	3254664	Identifier	command		3254554	0					
ANR	3254665	Argument	buf		3254554	1					
ANR	3254666	Identifier	buf		3254554	0					
ANR	3254667	Argument	normal_proxy		3254554	2					
ANR	3254668	Identifier	normal_proxy		3254554	0					
ANR	3254669	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	2823:1:74356:74407	3254554	9	True				
ANR	3254670	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3254554	0					
ANR	3254671	IdentifierDeclType	Gahp_Args *		3254554	0					
ANR	3254672	Identifier	result		3254554	1					
ANR	3254673	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3254554	2		=			
ANR	3254674	Identifier	result		3254554	0					
ANR	3254675	CallExpression	"get_pending_result ( command , buf )"		3254554	1					
ANR	3254676	Callee	get_pending_result		3254554	0					
ANR	3254677	Identifier	get_pending_result		3254554	0					
ANR	3254678	ArgumentList	command		3254554	1					
ANR	3254679	Argument	command		3254554	0					
ANR	3254680	Identifier	command		3254554	0					
ANR	3254681	Argument	buf		3254554	1					
ANR	3254682	Identifier	buf		3254554	0					
ANR	3254683	IfStatement	if ( result )		3254554	10					
ANR	3254684	Condition	result	2824:6:74415:74420	3254554	0	True				
ANR	3254685	Identifier	result		3254554	0					
ANR	3254686	CompoundStatement		36:2:1023:1053	3254554	1					
ANR	3254687	IfStatement	if ( result -> argc != 3 )		3254554	0					
ANR	3254688	Condition	result -> argc != 3	2826:6:74456:74472	3254554	0	True				
ANR	3254689	EqualityExpression	result -> argc != 3		3254554	0		!=			
ANR	3254690	PtrMemberAccess	result -> argc		3254554	0					
ANR	3254691	Identifier	result		3254554	0					
ANR	3254692	Identifier	argc		3254554	1					
ANR	3254693	PrimaryExpression	3		3254554	1					
ANR	3254694	CompoundStatement		33:25:979:979	3254554	1					
ANR	3254695	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	2827:3:74480:74511	3254554	0	True				
ANR	3254696	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3254554	0					
ANR	3254697	Callee	EXCEPT		3254554	0					
ANR	3254698	Identifier	EXCEPT		3254554	0					
ANR	3254699	ArgumentList	"""Bad %s Result"""		3254554	1					
ANR	3254700	Argument	"""Bad %s Result"""		3254554	0					
ANR	3254701	PrimaryExpression	"""Bad %s Result"""		3254554	0					
ANR	3254702	Argument	command		3254554	1					
ANR	3254703	Identifier	command		3254554	0					
ANR	3254704	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	2829:2:74519:74549	3254554	1	True				
ANR	3254705	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3254554	0					
ANR	3254706	IdentifierDeclType	int		3254554	0					
ANR	3254707	Identifier	rc		3254554	1					
ANR	3254708	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3254554	2		=			
ANR	3254709	Identifier	rc		3254554	0					
ANR	3254710	CallExpression	atoi ( result -> argv [ 1 ] )		3254554	1					
ANR	3254711	Callee	atoi		3254554	0					
ANR	3254712	Identifier	atoi		3254554	0					
ANR	3254713	ArgumentList	result -> argv [ 1 ]		3254554	1					
ANR	3254714	Argument	result -> argv [ 1 ]		3254554	0					
ANR	3254715	ArrayIndexing	result -> argv [ 1 ]		3254554	0					
ANR	3254716	PtrMemberAccess	result -> argv		3254554	0					
ANR	3254717	Identifier	result		3254554	0					
ANR	3254718	Identifier	argv		3254554	1					
ANR	3254719	PrimaryExpression	1		3254554	1					
ANR	3254720	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3254554	2					
ANR	3254721	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	2830:7:74558:74596	3254554	0	True				
ANR	3254722	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3254554	0					
ANR	3254723	Callee	strcasecmp		3254554	0					
ANR	3254724	Identifier	strcasecmp		3254554	0					
ANR	3254725	ArgumentList	result -> argv [ 2 ]		3254554	1					
ANR	3254726	Argument	result -> argv [ 2 ]		3254554	0					
ANR	3254727	ArrayIndexing	result -> argv [ 2 ]		3254554	0					
ANR	3254728	PtrMemberAccess	result -> argv		3254554	0					
ANR	3254729	Identifier	result		3254554	0					
ANR	3254730	Identifier	argv		3254554	1					
ANR	3254731	PrimaryExpression	2		3254554	1					
ANR	3254732	Argument	NULLSTRING		3254554	1					
ANR	3254733	Identifier	NULLSTRING		3254554	0					
ANR	3254734	CompoundStatement		37:49:1104:1104	3254554	1					
ANR	3254735	ExpressionStatement	error_string = result -> argv [ 2 ]	2831:3:74605:74635	3254554	0	True				
ANR	3254736	AssignmentExpression	error_string = result -> argv [ 2 ]		3254554	0		=			
ANR	3254737	Identifier	error_string		3254554	0					
ANR	3254738	ArrayIndexing	result -> argv [ 2 ]		3254554	1					
ANR	3254739	PtrMemberAccess	result -> argv		3254554	0					
ANR	3254740	Identifier	result		3254554	0					
ANR	3254741	Identifier	argv		3254554	1					
ANR	3254742	PrimaryExpression	2		3254554	1					
ANR	3254743	ElseStatement	else		3254554	0					
ANR	3254744	CompoundStatement		39:9:1150:1150	3254554	0					
ANR	3254745	ExpressionStatement	"error_string = """""	2833:3:74651:74668	3254554	0	True				
ANR	3254746	AssignmentExpression	"error_string = """""		3254554	0		=			
ANR	3254747	Identifier	error_string		3254554	0					
ANR	3254748	PrimaryExpression	""""""		3254554	1					
ANR	3254749	Statement	delete	2835:2:74676:74681	3254554	3	True				
ANR	3254750	ExpressionStatement	result	2835:9:74683:74689	3254554	4	True				
ANR	3254751	Identifier	result		3254554	0					
ANR	3254752	ReturnStatement	return rc ;	2836:2:74693:74702	3254554	5	True				
ANR	3254753	Identifier	rc		3254554	0					
ANR	3254754	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3254554	11					
ANR	3254755	Condition	"check_pending_timeout ( command , buf )"	2840:6:74759:74792	3254554	0	True				
ANR	3254756	CallExpression	"check_pending_timeout ( command , buf )"		3254554	0					
ANR	3254757	Callee	check_pending_timeout		3254554	0					
ANR	3254758	Identifier	check_pending_timeout		3254554	0					
ANR	3254759	ArgumentList	command		3254554	1					
ANR	3254760	Argument	command		3254554	0					
ANR	3254761	Identifier	command		3254554	0					
ANR	3254762	Argument	buf		3254554	1					
ANR	3254763	Identifier	buf		3254554	0					
ANR	3254764	CompoundStatement		47:43:1300:1300	3254554	1					
ANR	3254765	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	2842:2:74832:74880	3254554	0	True				
ANR	3254766	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3254554	0					
ANR	3254767	Callee	sprintf		3254554	0					
ANR	3254768	Identifier	sprintf		3254554	0					
ANR	3254769	ArgumentList	error_string		3254554	1					
ANR	3254770	Argument	error_string		3254554	0					
ANR	3254771	Identifier	error_string		3254554	0					
ANR	3254772	Argument	"""%s timed out"""		3254554	1					
ANR	3254773	PrimaryExpression	"""%s timed out"""		3254554	0					
ANR	3254774	Argument	command		3254554	2					
ANR	3254775	Identifier	command		3254554	0					
ANR	3254776	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	2843:2:74884:74919	3254554	1	True				
ANR	3254777	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3254554	0					
ANR	3254778	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2847:1:74979:75012	3254554	12	True				
ANR	3254779	Identifier	GAHPCLIENT_COMMAND_PENDING		3254554	0					
ANR	3254780	ReturnType	int		3254554	1					
ANR	3254781	Identifier	GahpClient :: gt4_gram_client_job_start		3254554	2					
ANR	3254782	ParameterList	const char * job_contact		3254554	3					
ANR	3254783	Parameter	const char * job_contact	2793:38:73469:73492	3254554	0	True				
ANR	3254784	ParameterType	const char *		3254554	0					
ANR	3254785	Identifier	job_contact		3254554	1					
ANR	3254786	CFGEntryNode	ENTRY		3254554		True				
ANR	3254787	CFGExitNode	EXIT		3254554		True				
ANR	3254788	Symbol	server		3254554						
ANR	3254789	Symbol	server -> m_commands_supported		3254554						
ANR	3254790	Symbol	escapeGahpString		3254554						
ANR	3254791	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3254554						
ANR	3254792	Symbol	* server		3254554						
ANR	3254793	Symbol	reqline . c_str		3254554						
ANR	3254794	Symbol	results_only		3254554						
ANR	3254795	Symbol	result -> argv		3254554						
ANR	3254796	Symbol	* server -> m_commands_supported		3254554						
ANR	3254797	Symbol	sprintf		3254554						
ANR	3254798	Symbol	result		3254554						
ANR	3254799	Symbol	normal_proxy		3254554						
ANR	3254800	Symbol	* result		3254554						
ANR	3254801	Symbol	server -> m_commands_supported -> contains_anycase		3254554						
ANR	3254802	Symbol	GAHPCLIENT_COMMAND_PENDING		3254554						
ANR	3254803	Symbol	reqline		3254554						
ANR	3254804	Symbol	m_mode		3254554						
ANR	3254805	Symbol	strcasecmp		3254554						
ANR	3254806	Symbol	job_contact		3254554						
ANR	3254807	Symbol	* result -> argv		3254554						
ANR	3254808	Symbol	atoi		3254554						
ANR	3254809	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3254554						
ANR	3254810	Symbol	* * result		3254554						
ANR	3254811	Symbol	NULLSTRING		3254554						
ANR	3254812	Symbol	command		3254554						
ANR	3254813	Symbol	get_pending_result		3254554						
ANR	3254814	Symbol	rc		3254554						
ANR	3254815	Symbol	error_string		3254554						
ANR	3254816	Symbol	buf		3254554						
ANR	3254817	Symbol	x		3254554						
ANR	3254818	Symbol	result -> argc		3254554						
ANR	3254819	Symbol	FALSE		3254554						
ANR	3254820	Symbol	* * server		3254554						
ANR	3254821	Symbol	check_pending_timeout		3254554						
ANR	3254822	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3254554						
ANR	3254823	Symbol	is_pending		3254554						
ANR	3254824	Function	GahpClient :: gt4_gram_client_job_destroy	2850:0:75017:76608							
ANR	3254825	FunctionDef	GahpClient :: gt4_gram_client_job_destroy (const char * job_contact)		3254824	0					
ANR	3254826	CompoundStatement		2852:0:75087:76608	3254824	0					
ANR	3254827	Statement	static	2853:1:75090:75095	3254824	0	True				
ANR	3254828	IdentifierDeclStatement	"const char * command = ""GT4_GRAM_JOB_DESTROY"" ;"	2853:8:75097:75141	3254824	1	True				
ANR	3254829	IdentifierDecl	"* command = ""GT4_GRAM_JOB_DESTROY"""		3254824	0					
ANR	3254830	IdentifierDeclType	const char *		3254824	0					
ANR	3254831	Identifier	command		3254824	1					
ANR	3254832	AssignmentExpression	"* command = ""GT4_GRAM_JOB_DESTROY"""		3254824	2		=			
ANR	3254833	Identifier	command		3254824	0					
ANR	3254834	PrimaryExpression	"""GT4_GRAM_JOB_DESTROY"""		3254824	1					
ANR	3254835	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3254824	2					
ANR	3254836	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2856:6:75190:75251	3254824	0	True				
ANR	3254837	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3254824	0		==			
ANR	3254838	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3254824	0					
ANR	3254839	Callee	server -> m_commands_supported -> contains_anycase		3254824	0					
ANR	3254840	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3254824	0					
ANR	3254841	PtrMemberAccess	server -> m_commands_supported		3254824	0					
ANR	3254842	Identifier	server		3254824	0					
ANR	3254843	Identifier	m_commands_supported		3254824	1					
ANR	3254844	Identifier	contains_anycase		3254824	1					
ANR	3254845	ArgumentList	command		3254824	1					
ANR	3254846	Argument	command		3254824	0					
ANR	3254847	Identifier	command		3254824	0					
ANR	3254848	Identifier	FALSE		3254824	1					
ANR	3254849	CompoundStatement		5:70:166:166	3254824	1					
ANR	3254850	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2857:2:75258:75297	3254824	0	True				
ANR	3254851	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3254824	0					
ANR	3254852	IfStatement	if ( ! job_contact )		3254824	3					
ANR	3254853	Condition	! job_contact	2861:5:75335:75346	3254824	0	True				
ANR	3254854	UnaryOperationExpression	! job_contact		3254824	0					
ANR	3254855	UnaryOperator	!		3254824	0					
ANR	3254856	Identifier	job_contact		3254824	1					
ANR	3254857	ExpressionStatement	job_contact = NULLSTRING	2861:19:75349:75371	3254824	1	True				
ANR	3254858	AssignmentExpression	job_contact = NULLSTRING		3254824	0		=			
ANR	3254859	Identifier	job_contact		3254824	0					
ANR	3254860	Identifier	NULLSTRING		3254824	1					
ANR	3254861	IdentifierDeclStatement	std :: string reqline ;	2862:1:75374:75393	3254824	4	True				
ANR	3254862	IdentifierDecl	reqline		3254824	0					
ANR	3254863	IdentifierDeclType	std :: string		3254824	0					
ANR	3254864	Identifier	reqline		3254824	1					
ANR	3254865	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	2863:1:75396:75455	3254824	5	True				
ANR	3254866	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3254824	0					
ANR	3254867	IdentifierDeclType	int		3254824	0					
ANR	3254868	Identifier	x		3254824	1					
ANR	3254869	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3254824	2		=			
ANR	3254870	Identifier	x		3254824	0					
ANR	3254871	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3254824	1					
ANR	3254872	Callee	sprintf		3254824	0					
ANR	3254873	Identifier	sprintf		3254824	0					
ANR	3254874	ArgumentList	reqline		3254824	1					
ANR	3254875	Argument	reqline		3254824	0					
ANR	3254876	Identifier	reqline		3254824	0					
ANR	3254877	Argument	"""%s"""		3254824	1					
ANR	3254878	PrimaryExpression	"""%s"""		3254824	0					
ANR	3254879	Argument	escapeGahpString ( job_contact )		3254824	2					
ANR	3254880	CallExpression	escapeGahpString ( job_contact )		3254824	0					
ANR	3254881	Callee	escapeGahpString		3254824	0					
ANR	3254882	Identifier	escapeGahpString		3254824	0					
ANR	3254883	ArgumentList	job_contact		3254824	1					
ANR	3254884	Argument	job_contact		3254824	0					
ANR	3254885	Identifier	job_contact		3254824	0					
ANR	3254886	ExpressionStatement	ASSERT ( x > 0 )	2864:1:75458:75473	3254824	6	True				
ANR	3254887	CallExpression	ASSERT ( x > 0 )		3254824	0					
ANR	3254888	Callee	ASSERT		3254824	0					
ANR	3254889	Identifier	ASSERT		3254824	0					
ANR	3254890	ArgumentList	x > 0		3254824	1					
ANR	3254891	Argument	x > 0		3254824	0					
ANR	3254892	RelationalExpression	x > 0		3254824	0		>			
ANR	3254893	Identifier	x		3254824	0					
ANR	3254894	PrimaryExpression	0		3254824	1					
ANR	3254895	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	2865:1:75476:75509	3254824	7	True				
ANR	3254896	IdentifierDecl	* buf = reqline . c_str ( )		3254824	0					
ANR	3254897	IdentifierDeclType	const char *		3254824	0					
ANR	3254898	Identifier	buf		3254824	1					
ANR	3254899	AssignmentExpression	* buf = reqline . c_str ( )		3254824	2		=			
ANR	3254900	Identifier	buf		3254824	0					
ANR	3254901	CallExpression	reqline . c_str ( )		3254824	1					
ANR	3254902	Callee	reqline . c_str		3254824	0					
ANR	3254903	MemberAccess	reqline . c_str		3254824	0					
ANR	3254904	Identifier	reqline		3254824	0					
ANR	3254905	Identifier	c_str		3254824	1					
ANR	3254906	ArgumentList			3254824	1					
ANR	3254907	IfStatement	"if ( ! is_pending ( command , buf ) )"		3254824	8					
ANR	3254908	Condition	"! is_pending ( command , buf )"	2869:6:75610:75633	3254824	0	True				
ANR	3254909	UnaryOperationExpression	"! is_pending ( command , buf )"		3254824	0					
ANR	3254910	UnaryOperator	!		3254824	0					
ANR	3254911	CallExpression	"is_pending ( command , buf )"		3254824	1					
ANR	3254912	Callee	is_pending		3254824	0					
ANR	3254913	Identifier	is_pending		3254824	0					
ANR	3254914	ArgumentList	command		3254824	1					
ANR	3254915	Argument	command		3254824	0					
ANR	3254916	Identifier	command		3254824	0					
ANR	3254917	Argument	buf		3254824	1					
ANR	3254918	Identifier	buf		3254824	0					
ANR	3254919	CompoundStatement		18:33:549:549	3254824	1					
ANR	3254920	IfStatement	if ( m_mode == results_only )		3254824	0					
ANR	3254921	Condition	m_mode == results_only	2872:7:75742:75763	3254824	0	True				
ANR	3254922	EqualityExpression	m_mode == results_only		3254824	0		==			
ANR	3254923	Identifier	m_mode		3254824	0					
ANR	3254924	Identifier	results_only		3254824	1					
ANR	3254925	CompoundStatement		21:32:679:679	3254824	1					
ANR	3254926	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2873:3:75772:75811	3254824	0	True				
ANR	3254927	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3254824	0					
ANR	3254928	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	2875:2:75819:75856	3254824	1	True				
ANR	3254929	CallExpression	"now_pending ( command , buf , normal_proxy )"		3254824	0					
ANR	3254930	Callee	now_pending		3254824	0					
ANR	3254931	Identifier	now_pending		3254824	0					
ANR	3254932	ArgumentList	command		3254824	1					
ANR	3254933	Argument	command		3254824	0					
ANR	3254934	Identifier	command		3254824	0					
ANR	3254935	Argument	buf		3254824	1					
ANR	3254936	Identifier	buf		3254824	0					
ANR	3254937	Argument	normal_proxy		3254824	2					
ANR	3254938	Identifier	normal_proxy		3254824	0					
ANR	3254939	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	2881:1:75950:76001	3254824	9	True				
ANR	3254940	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3254824	0					
ANR	3254941	IdentifierDeclType	Gahp_Args *		3254824	0					
ANR	3254942	Identifier	result		3254824	1					
ANR	3254943	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3254824	2		=			
ANR	3254944	Identifier	result		3254824	0					
ANR	3254945	CallExpression	"get_pending_result ( command , buf )"		3254824	1					
ANR	3254946	Callee	get_pending_result		3254824	0					
ANR	3254947	Identifier	get_pending_result		3254824	0					
ANR	3254948	ArgumentList	command		3254824	1					
ANR	3254949	Argument	command		3254824	0					
ANR	3254950	Identifier	command		3254824	0					
ANR	3254951	Argument	buf		3254824	1					
ANR	3254952	Identifier	buf		3254824	0					
ANR	3254953	IfStatement	if ( result )		3254824	10					
ANR	3254954	Condition	result	2882:6:76009:76014	3254824	0	True				
ANR	3254955	Identifier	result		3254824	0					
ANR	3254956	CompoundStatement		36:2:1025:1055	3254824	1					
ANR	3254957	IfStatement	if ( result -> argc != 3 )		3254824	0					
ANR	3254958	Condition	result -> argc != 3	2884:6:76050:76066	3254824	0	True				
ANR	3254959	EqualityExpression	result -> argc != 3		3254824	0		!=			
ANR	3254960	PtrMemberAccess	result -> argc		3254824	0					
ANR	3254961	Identifier	result		3254824	0					
ANR	3254962	Identifier	argc		3254824	1					
ANR	3254963	PrimaryExpression	3		3254824	1					
ANR	3254964	CompoundStatement		33:25:981:981	3254824	1					
ANR	3254965	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	2885:3:76074:76105	3254824	0	True				
ANR	3254966	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3254824	0					
ANR	3254967	Callee	EXCEPT		3254824	0					
ANR	3254968	Identifier	EXCEPT		3254824	0					
ANR	3254969	ArgumentList	"""Bad %s Result"""		3254824	1					
ANR	3254970	Argument	"""Bad %s Result"""		3254824	0					
ANR	3254971	PrimaryExpression	"""Bad %s Result"""		3254824	0					
ANR	3254972	Argument	command		3254824	1					
ANR	3254973	Identifier	command		3254824	0					
ANR	3254974	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	2887:2:76113:76143	3254824	1	True				
ANR	3254975	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3254824	0					
ANR	3254976	IdentifierDeclType	int		3254824	0					
ANR	3254977	Identifier	rc		3254824	1					
ANR	3254978	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3254824	2		=			
ANR	3254979	Identifier	rc		3254824	0					
ANR	3254980	CallExpression	atoi ( result -> argv [ 1 ] )		3254824	1					
ANR	3254981	Callee	atoi		3254824	0					
ANR	3254982	Identifier	atoi		3254824	0					
ANR	3254983	ArgumentList	result -> argv [ 1 ]		3254824	1					
ANR	3254984	Argument	result -> argv [ 1 ]		3254824	0					
ANR	3254985	ArrayIndexing	result -> argv [ 1 ]		3254824	0					
ANR	3254986	PtrMemberAccess	result -> argv		3254824	0					
ANR	3254987	Identifier	result		3254824	0					
ANR	3254988	Identifier	argv		3254824	1					
ANR	3254989	PrimaryExpression	1		3254824	1					
ANR	3254990	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3254824	2					
ANR	3254991	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	2888:7:76152:76190	3254824	0	True				
ANR	3254992	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3254824	0					
ANR	3254993	Callee	strcasecmp		3254824	0					
ANR	3254994	Identifier	strcasecmp		3254824	0					
ANR	3254995	ArgumentList	result -> argv [ 2 ]		3254824	1					
ANR	3254996	Argument	result -> argv [ 2 ]		3254824	0					
ANR	3254997	ArrayIndexing	result -> argv [ 2 ]		3254824	0					
ANR	3254998	PtrMemberAccess	result -> argv		3254824	0					
ANR	3254999	Identifier	result		3254824	0					
ANR	3255000	Identifier	argv		3254824	1					
ANR	3255001	PrimaryExpression	2		3254824	1					
ANR	3255002	Argument	NULLSTRING		3254824	1					
ANR	3255003	Identifier	NULLSTRING		3254824	0					
ANR	3255004	CompoundStatement		37:49:1106:1106	3254824	1					
ANR	3255005	ExpressionStatement	error_string = result -> argv [ 2 ]	2889:3:76199:76229	3254824	0	True				
ANR	3255006	AssignmentExpression	error_string = result -> argv [ 2 ]		3254824	0		=			
ANR	3255007	Identifier	error_string		3254824	0					
ANR	3255008	ArrayIndexing	result -> argv [ 2 ]		3254824	1					
ANR	3255009	PtrMemberAccess	result -> argv		3254824	0					
ANR	3255010	Identifier	result		3254824	0					
ANR	3255011	Identifier	argv		3254824	1					
ANR	3255012	PrimaryExpression	2		3254824	1					
ANR	3255013	ElseStatement	else		3254824	0					
ANR	3255014	CompoundStatement		39:9:1152:1152	3254824	0					
ANR	3255015	ExpressionStatement	"error_string = """""	2891:3:76245:76262	3254824	0	True				
ANR	3255016	AssignmentExpression	"error_string = """""		3254824	0		=			
ANR	3255017	Identifier	error_string		3254824	0					
ANR	3255018	PrimaryExpression	""""""		3254824	1					
ANR	3255019	Statement	delete	2893:2:76270:76275	3254824	3	True				
ANR	3255020	ExpressionStatement	result	2893:9:76277:76283	3254824	4	True				
ANR	3255021	Identifier	result		3254824	0					
ANR	3255022	ReturnStatement	return rc ;	2894:2:76287:76296	3254824	5	True				
ANR	3255023	Identifier	rc		3254824	0					
ANR	3255024	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3254824	11					
ANR	3255025	Condition	"check_pending_timeout ( command , buf )"	2898:6:76353:76386	3254824	0	True				
ANR	3255026	CallExpression	"check_pending_timeout ( command , buf )"		3254824	0					
ANR	3255027	Callee	check_pending_timeout		3254824	0					
ANR	3255028	Identifier	check_pending_timeout		3254824	0					
ANR	3255029	ArgumentList	command		3254824	1					
ANR	3255030	Argument	command		3254824	0					
ANR	3255031	Identifier	command		3254824	0					
ANR	3255032	Argument	buf		3254824	1					
ANR	3255033	Identifier	buf		3254824	0					
ANR	3255034	CompoundStatement		47:43:1302:1302	3254824	1					
ANR	3255035	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	2900:2:76426:76474	3254824	0	True				
ANR	3255036	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3254824	0					
ANR	3255037	Callee	sprintf		3254824	0					
ANR	3255038	Identifier	sprintf		3254824	0					
ANR	3255039	ArgumentList	error_string		3254824	1					
ANR	3255040	Argument	error_string		3254824	0					
ANR	3255041	Identifier	error_string		3254824	0					
ANR	3255042	Argument	"""%s timed out"""		3254824	1					
ANR	3255043	PrimaryExpression	"""%s timed out"""		3254824	0					
ANR	3255044	Argument	command		3254824	2					
ANR	3255045	Identifier	command		3254824	0					
ANR	3255046	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	2901:2:76478:76513	3254824	1	True				
ANR	3255047	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3254824	0					
ANR	3255048	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2905:1:76573:76606	3254824	12	True				
ANR	3255049	Identifier	GAHPCLIENT_COMMAND_PENDING		3254824	0					
ANR	3255050	ReturnType	int		3254824	1					
ANR	3255051	Identifier	GahpClient :: gt4_gram_client_job_destroy		3254824	2					
ANR	3255052	ParameterList	const char * job_contact		3254824	3					
ANR	3255053	Parameter	const char * job_contact	2851:40:75061:75084	3254824	0	True				
ANR	3255054	ParameterType	const char *		3254824	0					
ANR	3255055	Identifier	job_contact		3254824	1					
ANR	3255056	CFGEntryNode	ENTRY		3254824		True				
ANR	3255057	CFGExitNode	EXIT		3254824		True				
ANR	3255058	Symbol	server -> m_commands_supported		3254824						
ANR	3255059	Symbol	server		3254824						
ANR	3255060	Symbol	escapeGahpString		3254824						
ANR	3255061	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3254824						
ANR	3255062	Symbol	* server		3254824						
ANR	3255063	Symbol	reqline . c_str		3254824						
ANR	3255064	Symbol	results_only		3254824						
ANR	3255065	Symbol	result -> argv		3254824						
ANR	3255066	Symbol	* server -> m_commands_supported		3254824						
ANR	3255067	Symbol	sprintf		3254824						
ANR	3255068	Symbol	result		3254824						
ANR	3255069	Symbol	normal_proxy		3254824						
ANR	3255070	Symbol	* result		3254824						
ANR	3255071	Symbol	server -> m_commands_supported -> contains_anycase		3254824						
ANR	3255072	Symbol	GAHPCLIENT_COMMAND_PENDING		3254824						
ANR	3255073	Symbol	reqline		3254824						
ANR	3255074	Symbol	m_mode		3254824						
ANR	3255075	Symbol	strcasecmp		3254824						
ANR	3255076	Symbol	job_contact		3254824						
ANR	3255077	Symbol	* result -> argv		3254824						
ANR	3255078	Symbol	atoi		3254824						
ANR	3255079	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3254824						
ANR	3255080	Symbol	* * result		3254824						
ANR	3255081	Symbol	NULLSTRING		3254824						
ANR	3255082	Symbol	command		3254824						
ANR	3255083	Symbol	get_pending_result		3254824						
ANR	3255084	Symbol	rc		3254824						
ANR	3255085	Symbol	error_string		3254824						
ANR	3255086	Symbol	buf		3254824						
ANR	3255087	Symbol	x		3254824						
ANR	3255088	Symbol	result -> argc		3254824						
ANR	3255089	Symbol	* * server		3254824						
ANR	3255090	Symbol	FALSE		3254824						
ANR	3255091	Symbol	check_pending_timeout		3254824						
ANR	3255092	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3254824						
ANR	3255093	Symbol	is_pending		3254824						
ANR	3255094	Function	GahpClient :: gt4_gram_client_job_status	2909:0:76612:78667							
ANR	3255095	FunctionDef	"GahpClient :: gt4_gram_client_job_status (const char * job_contact , char * * job_status , char * * job_fault , int * exit_code)"		3255094	0					
ANR	3255096	CompoundStatement		2912:0:76738:78667	3255094	0					
ANR	3255097	Statement	static	2913:1:76741:76746	3255094	0	True				
ANR	3255098	IdentifierDeclStatement	"const char * command = ""GT4_GRAM_JOB_STATUS"" ;"	2913:8:76748:76791	3255094	1	True				
ANR	3255099	IdentifierDecl	"* command = ""GT4_GRAM_JOB_STATUS"""		3255094	0					
ANR	3255100	IdentifierDeclType	const char *		3255094	0					
ANR	3255101	Identifier	command		3255094	1					
ANR	3255102	AssignmentExpression	"* command = ""GT4_GRAM_JOB_STATUS"""		3255094	2		=			
ANR	3255103	Identifier	command		3255094	0					
ANR	3255104	PrimaryExpression	"""GT4_GRAM_JOB_STATUS"""		3255094	1					
ANR	3255105	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3255094	2					
ANR	3255106	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2916:6:76840:76901	3255094	0	True				
ANR	3255107	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3255094	0		==			
ANR	3255108	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3255094	0					
ANR	3255109	Callee	server -> m_commands_supported -> contains_anycase		3255094	0					
ANR	3255110	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3255094	0					
ANR	3255111	PtrMemberAccess	server -> m_commands_supported		3255094	0					
ANR	3255112	Identifier	server		3255094	0					
ANR	3255113	Identifier	m_commands_supported		3255094	1					
ANR	3255114	Identifier	contains_anycase		3255094	1					
ANR	3255115	ArgumentList	command		3255094	1					
ANR	3255116	Argument	command		3255094	0					
ANR	3255117	Identifier	command		3255094	0					
ANR	3255118	Identifier	FALSE		3255094	1					
ANR	3255119	CompoundStatement		5:70:165:165	3255094	1					
ANR	3255120	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2917:2:76908:76947	3255094	0	True				
ANR	3255121	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3255094	0					
ANR	3255122	IfStatement	if ( ! job_contact )		3255094	3					
ANR	3255123	Condition	! job_contact	2921:5:76985:76996	3255094	0	True				
ANR	3255124	UnaryOperationExpression	! job_contact		3255094	0					
ANR	3255125	UnaryOperator	!		3255094	0					
ANR	3255126	Identifier	job_contact		3255094	1					
ANR	3255127	ExpressionStatement	job_contact = NULLSTRING	2921:19:76999:77021	3255094	1	True				
ANR	3255128	AssignmentExpression	job_contact = NULLSTRING		3255094	0		=			
ANR	3255129	Identifier	job_contact		3255094	0					
ANR	3255130	Identifier	NULLSTRING		3255094	1					
ANR	3255131	IdentifierDeclStatement	std :: string reqline ;	2922:1:77024:77043	3255094	4	True				
ANR	3255132	IdentifierDecl	reqline		3255094	0					
ANR	3255133	IdentifierDeclType	std :: string		3255094	0					
ANR	3255134	Identifier	reqline		3255094	1					
ANR	3255135	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	2923:1:77046:77105	3255094	5	True				
ANR	3255136	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3255094	0					
ANR	3255137	IdentifierDeclType	int		3255094	0					
ANR	3255138	Identifier	x		3255094	1					
ANR	3255139	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3255094	2		=			
ANR	3255140	Identifier	x		3255094	0					
ANR	3255141	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3255094	1					
ANR	3255142	Callee	sprintf		3255094	0					
ANR	3255143	Identifier	sprintf		3255094	0					
ANR	3255144	ArgumentList	reqline		3255094	1					
ANR	3255145	Argument	reqline		3255094	0					
ANR	3255146	Identifier	reqline		3255094	0					
ANR	3255147	Argument	"""%s"""		3255094	1					
ANR	3255148	PrimaryExpression	"""%s"""		3255094	0					
ANR	3255149	Argument	escapeGahpString ( job_contact )		3255094	2					
ANR	3255150	CallExpression	escapeGahpString ( job_contact )		3255094	0					
ANR	3255151	Callee	escapeGahpString		3255094	0					
ANR	3255152	Identifier	escapeGahpString		3255094	0					
ANR	3255153	ArgumentList	job_contact		3255094	1					
ANR	3255154	Argument	job_contact		3255094	0					
ANR	3255155	Identifier	job_contact		3255094	0					
ANR	3255156	ExpressionStatement	ASSERT ( x > 0 )	2924:1:77108:77123	3255094	6	True				
ANR	3255157	CallExpression	ASSERT ( x > 0 )		3255094	0					
ANR	3255158	Callee	ASSERT		3255094	0					
ANR	3255159	Identifier	ASSERT		3255094	0					
ANR	3255160	ArgumentList	x > 0		3255094	1					
ANR	3255161	Argument	x > 0		3255094	0					
ANR	3255162	RelationalExpression	x > 0		3255094	0		>			
ANR	3255163	Identifier	x		3255094	0					
ANR	3255164	PrimaryExpression	0		3255094	1					
ANR	3255165	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	2925:1:77126:77159	3255094	7	True				
ANR	3255166	IdentifierDecl	* buf = reqline . c_str ( )		3255094	0					
ANR	3255167	IdentifierDeclType	const char *		3255094	0					
ANR	3255168	Identifier	buf		3255094	1					
ANR	3255169	AssignmentExpression	* buf = reqline . c_str ( )		3255094	2		=			
ANR	3255170	Identifier	buf		3255094	0					
ANR	3255171	CallExpression	reqline . c_str ( )		3255094	1					
ANR	3255172	Callee	reqline . c_str		3255094	0					
ANR	3255173	MemberAccess	reqline . c_str		3255094	0					
ANR	3255174	Identifier	reqline		3255094	0					
ANR	3255175	Identifier	c_str		3255094	1					
ANR	3255176	ArgumentList			3255094	1					
ANR	3255177	IfStatement	"if ( ! is_pending ( command , buf ) )"		3255094	8					
ANR	3255178	Condition	"! is_pending ( command , buf )"	2929:6:77260:77283	3255094	0	True				
ANR	3255179	UnaryOperationExpression	"! is_pending ( command , buf )"		3255094	0					
ANR	3255180	UnaryOperator	!		3255094	0					
ANR	3255181	CallExpression	"is_pending ( command , buf )"		3255094	1					
ANR	3255182	Callee	is_pending		3255094	0					
ANR	3255183	Identifier	is_pending		3255094	0					
ANR	3255184	ArgumentList	command		3255094	1					
ANR	3255185	Argument	command		3255094	0					
ANR	3255186	Identifier	command		3255094	0					
ANR	3255187	Argument	buf		3255094	1					
ANR	3255188	Identifier	buf		3255094	0					
ANR	3255189	CompoundStatement		18:33:548:548	3255094	1					
ANR	3255190	IfStatement	if ( m_mode == results_only )		3255094	0					
ANR	3255191	Condition	m_mode == results_only	2932:7:77392:77413	3255094	0	True				
ANR	3255192	EqualityExpression	m_mode == results_only		3255094	0		==			
ANR	3255193	Identifier	m_mode		3255094	0					
ANR	3255194	Identifier	results_only		3255094	1					
ANR	3255195	CompoundStatement		21:32:678:678	3255094	1					
ANR	3255196	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	2933:3:77422:77461	3255094	0	True				
ANR	3255197	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3255094	0					
ANR	3255198	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	2935:2:77469:77506	3255094	1	True				
ANR	3255199	CallExpression	"now_pending ( command , buf , normal_proxy )"		3255094	0					
ANR	3255200	Callee	now_pending		3255094	0					
ANR	3255201	Identifier	now_pending		3255094	0					
ANR	3255202	ArgumentList	command		3255094	1					
ANR	3255203	Argument	command		3255094	0					
ANR	3255204	Identifier	command		3255094	0					
ANR	3255205	Argument	buf		3255094	1					
ANR	3255206	Identifier	buf		3255094	0					
ANR	3255207	Argument	normal_proxy		3255094	2					
ANR	3255208	Identifier	normal_proxy		3255094	0					
ANR	3255209	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	2941:1:77600:77651	3255094	9	True				
ANR	3255210	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3255094	0					
ANR	3255211	IdentifierDeclType	Gahp_Args *		3255094	0					
ANR	3255212	Identifier	result		3255094	1					
ANR	3255213	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3255094	2		=			
ANR	3255214	Identifier	result		3255094	0					
ANR	3255215	CallExpression	"get_pending_result ( command , buf )"		3255094	1					
ANR	3255216	Callee	get_pending_result		3255094	0					
ANR	3255217	Identifier	get_pending_result		3255094	0					
ANR	3255218	ArgumentList	command		3255094	1					
ANR	3255219	Argument	command		3255094	0					
ANR	3255220	Identifier	command		3255094	0					
ANR	3255221	Argument	buf		3255094	1					
ANR	3255222	Identifier	buf		3255094	0					
ANR	3255223	IfStatement	if ( result )		3255094	10					
ANR	3255224	Condition	result	2942:6:77659:77664	3255094	0	True				
ANR	3255225	Identifier	result		3255094	0					
ANR	3255226	CompoundStatement		36:2:1024:1054	3255094	1					
ANR	3255227	IfStatement	if ( result -> argc != 6 )		3255094	0					
ANR	3255228	Condition	result -> argc != 6	2944:6:77700:77716	3255094	0	True				
ANR	3255229	EqualityExpression	result -> argc != 6		3255094	0		!=			
ANR	3255230	PtrMemberAccess	result -> argc		3255094	0					
ANR	3255231	Identifier	result		3255094	0					
ANR	3255232	Identifier	argc		3255094	1					
ANR	3255233	PrimaryExpression	6		3255094	1					
ANR	3255234	CompoundStatement		33:25:980:980	3255094	1					
ANR	3255235	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	2945:3:77724:77755	3255094	0	True				
ANR	3255236	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3255094	0					
ANR	3255237	Callee	EXCEPT		3255094	0					
ANR	3255238	Identifier	EXCEPT		3255094	0					
ANR	3255239	ArgumentList	"""Bad %s Result"""		3255094	1					
ANR	3255240	Argument	"""Bad %s Result"""		3255094	0					
ANR	3255241	PrimaryExpression	"""Bad %s Result"""		3255094	0					
ANR	3255242	Argument	command		3255094	1					
ANR	3255243	Identifier	command		3255094	0					
ANR	3255244	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	2947:2:77763:77793	3255094	1	True				
ANR	3255245	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3255094	0					
ANR	3255246	IdentifierDeclType	int		3255094	0					
ANR	3255247	Identifier	rc		3255094	1					
ANR	3255248	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3255094	2		=			
ANR	3255249	Identifier	rc		3255094	0					
ANR	3255250	CallExpression	atoi ( result -> argv [ 1 ] )		3255094	1					
ANR	3255251	Callee	atoi		3255094	0					
ANR	3255252	Identifier	atoi		3255094	0					
ANR	3255253	ArgumentList	result -> argv [ 1 ]		3255094	1					
ANR	3255254	Argument	result -> argv [ 1 ]		3255094	0					
ANR	3255255	ArrayIndexing	result -> argv [ 1 ]		3255094	0					
ANR	3255256	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255257	Identifier	result		3255094	0					
ANR	3255258	Identifier	argv		3255094	1					
ANR	3255259	PrimaryExpression	1		3255094	1					
ANR	3255260	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3255094	2					
ANR	3255261	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	2948:7:77802:77842	3255094	0	True				
ANR	3255262	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3255094	0					
ANR	3255263	Callee	strcasecmp		3255094	0					
ANR	3255264	Identifier	strcasecmp		3255094	0					
ANR	3255265	ArgumentList	result -> argv [ 2 ]		3255094	1					
ANR	3255266	Argument	result -> argv [ 2 ]		3255094	0					
ANR	3255267	ArrayIndexing	result -> argv [ 2 ]		3255094	0					
ANR	3255268	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255269	Identifier	result		3255094	0					
ANR	3255270	Identifier	argv		3255094	1					
ANR	3255271	PrimaryExpression	2		3255094	1					
ANR	3255272	Argument	NULLSTRING		3255094	1					
ANR	3255273	Identifier	NULLSTRING		3255094	0					
ANR	3255274	CompoundStatement		37:51:1107:1107	3255094	1					
ANR	3255275	ExpressionStatement	* job_status = strdup ( result -> argv [ 2 ] )	2949:3:77851:77890	3255094	0	True				
ANR	3255276	AssignmentExpression	* job_status = strdup ( result -> argv [ 2 ] )		3255094	0		=			
ANR	3255277	UnaryOperationExpression	* job_status		3255094	0					
ANR	3255278	UnaryOperator	*		3255094	0					
ANR	3255279	Identifier	job_status		3255094	1					
ANR	3255280	CallExpression	strdup ( result -> argv [ 2 ] )		3255094	1					
ANR	3255281	Callee	strdup		3255094	0					
ANR	3255282	Identifier	strdup		3255094	0					
ANR	3255283	ArgumentList	result -> argv [ 2 ]		3255094	1					
ANR	3255284	Argument	result -> argv [ 2 ]		3255094	0					
ANR	3255285	ArrayIndexing	result -> argv [ 2 ]		3255094	0					
ANR	3255286	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255287	Identifier	result		3255094	0					
ANR	3255288	Identifier	argv		3255094	1					
ANR	3255289	PrimaryExpression	2		3255094	1					
ANR	3255290	ElseStatement	else		3255094	0					
ANR	3255291	CompoundStatement		39:9:1162:1162	3255094	0					
ANR	3255292	ExpressionStatement	* job_status = NULL	2951:3:77906:77924	3255094	0	True				
ANR	3255293	AssignmentExpression	* job_status = NULL		3255094	0		=			
ANR	3255294	UnaryOperationExpression	* job_status		3255094	0					
ANR	3255295	UnaryOperator	*		3255094	0					
ANR	3255296	Identifier	job_status		3255094	1					
ANR	3255297	Identifier	NULL		3255094	1					
ANR	3255298	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3255094	3					
ANR	3255299	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	2953:7:77937:77977	3255094	0	True				
ANR	3255300	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3255094	0					
ANR	3255301	Callee	strcasecmp		3255094	0					
ANR	3255302	Identifier	strcasecmp		3255094	0					
ANR	3255303	ArgumentList	result -> argv [ 3 ]		3255094	1					
ANR	3255304	Argument	result -> argv [ 3 ]		3255094	0					
ANR	3255305	ArrayIndexing	result -> argv [ 3 ]		3255094	0					
ANR	3255306	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255307	Identifier	result		3255094	0					
ANR	3255308	Identifier	argv		3255094	1					
ANR	3255309	PrimaryExpression	3		3255094	1					
ANR	3255310	Argument	NULLSTRING		3255094	1					
ANR	3255311	Identifier	NULLSTRING		3255094	0					
ANR	3255312	CompoundStatement		42:51:1242:1242	3255094	1					
ANR	3255313	ExpressionStatement	* job_fault = strdup ( result -> argv [ 3 ] )	2954:3:77986:78024	3255094	0	True				
ANR	3255314	AssignmentExpression	* job_fault = strdup ( result -> argv [ 3 ] )		3255094	0		=			
ANR	3255315	UnaryOperationExpression	* job_fault		3255094	0					
ANR	3255316	UnaryOperator	*		3255094	0					
ANR	3255317	Identifier	job_fault		3255094	1					
ANR	3255318	CallExpression	strdup ( result -> argv [ 3 ] )		3255094	1					
ANR	3255319	Callee	strdup		3255094	0					
ANR	3255320	Identifier	strdup		3255094	0					
ANR	3255321	ArgumentList	result -> argv [ 3 ]		3255094	1					
ANR	3255322	Argument	result -> argv [ 3 ]		3255094	0					
ANR	3255323	ArrayIndexing	result -> argv [ 3 ]		3255094	0					
ANR	3255324	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255325	Identifier	result		3255094	0					
ANR	3255326	Identifier	argv		3255094	1					
ANR	3255327	PrimaryExpression	3		3255094	1					
ANR	3255328	ElseStatement	else		3255094	0					
ANR	3255329	CompoundStatement		44:9:1296:1296	3255094	0					
ANR	3255330	ExpressionStatement	* job_fault = NULL	2956:3:78040:78057	3255094	0	True				
ANR	3255331	AssignmentExpression	* job_fault = NULL		3255094	0		=			
ANR	3255332	UnaryOperationExpression	* job_fault		3255094	0					
ANR	3255333	UnaryOperator	*		3255094	0					
ANR	3255334	Identifier	job_fault		3255094	1					
ANR	3255335	Identifier	NULL		3255094	1					
ANR	3255336	IfStatement	"if ( strcasecmp ( result -> argv [ 4 ] , NULLSTRING ) )"		3255094	4					
ANR	3255337	Condition	"strcasecmp ( result -> argv [ 4 ] , NULLSTRING )"	2958:7:78070:78108	3255094	0	True				
ANR	3255338	CallExpression	"strcasecmp ( result -> argv [ 4 ] , NULLSTRING )"		3255094	0					
ANR	3255339	Callee	strcasecmp		3255094	0					
ANR	3255340	Identifier	strcasecmp		3255094	0					
ANR	3255341	ArgumentList	result -> argv [ 4 ]		3255094	1					
ANR	3255342	Argument	result -> argv [ 4 ]		3255094	0					
ANR	3255343	ArrayIndexing	result -> argv [ 4 ]		3255094	0					
ANR	3255344	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255345	Identifier	result		3255094	0					
ANR	3255346	Identifier	argv		3255094	1					
ANR	3255347	PrimaryExpression	4		3255094	1					
ANR	3255348	Argument	NULLSTRING		3255094	1					
ANR	3255349	Identifier	NULLSTRING		3255094	0					
ANR	3255350	CompoundStatement		47:49:1373:1373	3255094	1					
ANR	3255351	ExpressionStatement	* exit_code = atoi ( result -> argv [ 4 ] )	2959:3:78117:78153	3255094	0	True				
ANR	3255352	AssignmentExpression	* exit_code = atoi ( result -> argv [ 4 ] )		3255094	0		=			
ANR	3255353	UnaryOperationExpression	* exit_code		3255094	0					
ANR	3255354	UnaryOperator	*		3255094	0					
ANR	3255355	Identifier	exit_code		3255094	1					
ANR	3255356	CallExpression	atoi ( result -> argv [ 4 ] )		3255094	1					
ANR	3255357	Callee	atoi		3255094	0					
ANR	3255358	Identifier	atoi		3255094	0					
ANR	3255359	ArgumentList	result -> argv [ 4 ]		3255094	1					
ANR	3255360	Argument	result -> argv [ 4 ]		3255094	0					
ANR	3255361	ArrayIndexing	result -> argv [ 4 ]		3255094	0					
ANR	3255362	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255363	Identifier	result		3255094	0					
ANR	3255364	Identifier	argv		3255094	1					
ANR	3255365	PrimaryExpression	4		3255094	1					
ANR	3255366	ElseStatement	else		3255094	0					
ANR	3255367	CompoundStatement		49:9:1425:1425	3255094	0					
ANR	3255368	ExpressionStatement	* exit_code = GT4_NO_EXIT_CODE	2961:3:78169:78198	3255094	0	True				
ANR	3255369	AssignmentExpression	* exit_code = GT4_NO_EXIT_CODE		3255094	0		=			
ANR	3255370	UnaryOperationExpression	* exit_code		3255094	0					
ANR	3255371	UnaryOperator	*		3255094	0					
ANR	3255372	Identifier	exit_code		3255094	1					
ANR	3255373	Identifier	GT4_NO_EXIT_CODE		3255094	1					
ANR	3255374	IfStatement	"if ( strcasecmp ( result -> argv [ 5 ] , NULLSTRING ) )"		3255094	5					
ANR	3255375	Condition	"strcasecmp ( result -> argv [ 5 ] , NULLSTRING )"	2963:7:78211:78249	3255094	0	True				
ANR	3255376	CallExpression	"strcasecmp ( result -> argv [ 5 ] , NULLSTRING )"		3255094	0					
ANR	3255377	Callee	strcasecmp		3255094	0					
ANR	3255378	Identifier	strcasecmp		3255094	0					
ANR	3255379	ArgumentList	result -> argv [ 5 ]		3255094	1					
ANR	3255380	Argument	result -> argv [ 5 ]		3255094	0					
ANR	3255381	ArrayIndexing	result -> argv [ 5 ]		3255094	0					
ANR	3255382	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255383	Identifier	result		3255094	0					
ANR	3255384	Identifier	argv		3255094	1					
ANR	3255385	PrimaryExpression	5		3255094	1					
ANR	3255386	Argument	NULLSTRING		3255094	1					
ANR	3255387	Identifier	NULLSTRING		3255094	0					
ANR	3255388	CompoundStatement		52:49:1514:1514	3255094	1					
ANR	3255389	ExpressionStatement	error_string = result -> argv [ 5 ]	2964:3:78258:78288	3255094	0	True				
ANR	3255390	AssignmentExpression	error_string = result -> argv [ 5 ]		3255094	0		=			
ANR	3255391	Identifier	error_string		3255094	0					
ANR	3255392	ArrayIndexing	result -> argv [ 5 ]		3255094	1					
ANR	3255393	PtrMemberAccess	result -> argv		3255094	0					
ANR	3255394	Identifier	result		3255094	0					
ANR	3255395	Identifier	argv		3255094	1					
ANR	3255396	PrimaryExpression	5		3255094	1					
ANR	3255397	ElseStatement	else		3255094	0					
ANR	3255398	CompoundStatement		54:9:1560:1560	3255094	0					
ANR	3255399	ExpressionStatement	"error_string = """""	2966:3:78304:78321	3255094	0	True				
ANR	3255400	AssignmentExpression	"error_string = """""		3255094	0		=			
ANR	3255401	Identifier	error_string		3255094	0					
ANR	3255402	PrimaryExpression	""""""		3255094	1					
ANR	3255403	Statement	delete	2968:2:78329:78334	3255094	6	True				
ANR	3255404	ExpressionStatement	result	2968:9:78336:78342	3255094	7	True				
ANR	3255405	Identifier	result		3255094	0					
ANR	3255406	ReturnStatement	return rc ;	2969:2:78346:78355	3255094	8	True				
ANR	3255407	Identifier	rc		3255094	0					
ANR	3255408	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3255094	11					
ANR	3255409	Condition	"check_pending_timeout ( command , buf )"	2973:6:78412:78445	3255094	0	True				
ANR	3255410	CallExpression	"check_pending_timeout ( command , buf )"		3255094	0					
ANR	3255411	Callee	check_pending_timeout		3255094	0					
ANR	3255412	Identifier	check_pending_timeout		3255094	0					
ANR	3255413	ArgumentList	command		3255094	1					
ANR	3255414	Argument	command		3255094	0					
ANR	3255415	Identifier	command		3255094	0					
ANR	3255416	Argument	buf		3255094	1					
ANR	3255417	Identifier	buf		3255094	0					
ANR	3255418	CompoundStatement		62:43:1710:1710	3255094	1					
ANR	3255419	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	2975:2:78485:78533	3255094	0	True				
ANR	3255420	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3255094	0					
ANR	3255421	Callee	sprintf		3255094	0					
ANR	3255422	Identifier	sprintf		3255094	0					
ANR	3255423	ArgumentList	error_string		3255094	1					
ANR	3255424	Argument	error_string		3255094	0					
ANR	3255425	Identifier	error_string		3255094	0					
ANR	3255426	Argument	"""%s timed out"""		3255094	1					
ANR	3255427	PrimaryExpression	"""%s timed out"""		3255094	0					
ANR	3255428	Argument	command		3255094	2					
ANR	3255429	Identifier	command		3255094	0					
ANR	3255430	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	2976:2:78537:78572	3255094	1	True				
ANR	3255431	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3255094	0					
ANR	3255432	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	2980:1:78632:78665	3255094	12	True				
ANR	3255433	Identifier	GAHPCLIENT_COMMAND_PENDING		3255094	0					
ANR	3255434	ReturnType	int		3255094	1					
ANR	3255435	Identifier	GahpClient :: gt4_gram_client_job_status		3255094	2					
ANR	3255436	ParameterList	"const char * job_contact , char * * job_status , char * * job_fault , int * exit_code"		3255094	3					
ANR	3255437	Parameter	const char * job_contact	2910:39:76655:76678	3255094	0	True				
ANR	3255438	ParameterType	const char *		3255094	0					
ANR	3255439	Identifier	job_contact		3255094	1					
ANR	3255440	Parameter	char * * job_status	2911:1:76682:76699	3255094	1	True				
ANR	3255441	ParameterType	char * *		3255094	0					
ANR	3255442	Identifier	job_status		3255094	1					
ANR	3255443	Parameter	char * * job_fault	2911:21:76702:76718	3255094	2	True				
ANR	3255444	ParameterType	char * *		3255094	0					
ANR	3255445	Identifier	job_fault		3255094	1					
ANR	3255446	Parameter	int * exit_code	2911:40:76721:76735	3255094	3	True				
ANR	3255447	ParameterType	int *		3255094	0					
ANR	3255448	Identifier	exit_code		3255094	1					
ANR	3255449	CFGEntryNode	ENTRY		3255094		True				
ANR	3255450	CFGExitNode	EXIT		3255094		True				
ANR	3255451	Symbol	server -> m_commands_supported		3255094						
ANR	3255452	Symbol	server		3255094						
ANR	3255453	Symbol	escapeGahpString		3255094						
ANR	3255454	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3255094						
ANR	3255455	Symbol	* server		3255094						
ANR	3255456	Symbol	reqline . c_str		3255094						
ANR	3255457	Symbol	results_only		3255094						
ANR	3255458	Symbol	result -> argv		3255094						
ANR	3255459	Symbol	GT4_NO_EXIT_CODE		3255094						
ANR	3255460	Symbol	* server -> m_commands_supported		3255094						
ANR	3255461	Symbol	sprintf		3255094						
ANR	3255462	Symbol	result		3255094						
ANR	3255463	Symbol	normal_proxy		3255094						
ANR	3255464	Symbol	* result		3255094						
ANR	3255465	Symbol	server -> m_commands_supported -> contains_anycase		3255094						
ANR	3255466	Symbol	GAHPCLIENT_COMMAND_PENDING		3255094						
ANR	3255467	Symbol	reqline		3255094						
ANR	3255468	Symbol	m_mode		3255094						
ANR	3255469	Symbol	strcasecmp		3255094						
ANR	3255470	Symbol	* job_fault		3255094						
ANR	3255471	Symbol	job_contact		3255094						
ANR	3255472	Symbol	* result -> argv		3255094						
ANR	3255473	Symbol	atoi		3255094						
ANR	3255474	Symbol	job_fault		3255094						
ANR	3255475	Symbol	NULL		3255094						
ANR	3255476	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3255094						
ANR	3255477	Symbol	* * result		3255094						
ANR	3255478	Symbol	* job_status		3255094						
ANR	3255479	Symbol	NULLSTRING		3255094						
ANR	3255480	Symbol	command		3255094						
ANR	3255481	Symbol	get_pending_result		3255094						
ANR	3255482	Symbol	job_status		3255094						
ANR	3255483	Symbol	rc		3255094						
ANR	3255484	Symbol	error_string		3255094						
ANR	3255485	Symbol	buf		3255094						
ANR	3255486	Symbol	* exit_code		3255094						
ANR	3255487	Symbol	exit_code		3255094						
ANR	3255488	Symbol	x		3255094						
ANR	3255489	Symbol	result -> argc		3255094						
ANR	3255490	Symbol	* * server		3255094						
ANR	3255491	Symbol	FALSE		3255094						
ANR	3255492	Symbol	strdup		3255094						
ANR	3255493	Symbol	check_pending_timeout		3255094						
ANR	3255494	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3255094						
ANR	3255495	Symbol	is_pending		3255094						
ANR	3255496	Function	GahpClient :: gt4_gram_client_job_callback_register	2984:0:78671:80495							
ANR	3255497	FunctionDef	"GahpClient :: gt4_gram_client_job_callback_register (const char * job_contact , const char * callback_contact)"		3255496	0					
ANR	3255498	CompoundStatement		2987:0:78783:80495	3255496	0					
ANR	3255499	Statement	static	2988:1:78786:78791	3255496	0	True				
ANR	3255500	IdentifierDeclStatement	"const char * command = ""GT4_GRAM_JOB_CALLBACK_REGISTER"" ;"	2988:8:78793:78847	3255496	1	True				
ANR	3255501	IdentifierDecl	"* command = ""GT4_GRAM_JOB_CALLBACK_REGISTER"""		3255496	0					
ANR	3255502	IdentifierDeclType	const char *		3255496	0					
ANR	3255503	Identifier	command		3255496	1					
ANR	3255504	AssignmentExpression	"* command = ""GT4_GRAM_JOB_CALLBACK_REGISTER"""		3255496	2		=			
ANR	3255505	Identifier	command		3255496	0					
ANR	3255506	PrimaryExpression	"""GT4_GRAM_JOB_CALLBACK_REGISTER"""		3255496	1					
ANR	3255507	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3255496	2					
ANR	3255508	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	2991:6:78896:78957	3255496	0	True				
ANR	3255509	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3255496	0		==			
ANR	3255510	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3255496	0					
ANR	3255511	Callee	server -> m_commands_supported -> contains_anycase		3255496	0					
ANR	3255512	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3255496	0					
ANR	3255513	PtrMemberAccess	server -> m_commands_supported		3255496	0					
ANR	3255514	Identifier	server		3255496	0					
ANR	3255515	Identifier	m_commands_supported		3255496	1					
ANR	3255516	Identifier	contains_anycase		3255496	1					
ANR	3255517	ArgumentList	command		3255496	1					
ANR	3255518	Argument	command		3255496	0					
ANR	3255519	Identifier	command		3255496	0					
ANR	3255520	Identifier	FALSE		3255496	1					
ANR	3255521	CompoundStatement		5:70:176:176	3255496	1					
ANR	3255522	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	2992:2:78964:79003	3255496	0	True				
ANR	3255523	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3255496	0					
ANR	3255524	IfStatement	if ( ! job_contact )		3255496	3					
ANR	3255525	Condition	! job_contact	2996:5:79041:79052	3255496	0	True				
ANR	3255526	UnaryOperationExpression	! job_contact		3255496	0					
ANR	3255527	UnaryOperator	!		3255496	0					
ANR	3255528	Identifier	job_contact		3255496	1					
ANR	3255529	ExpressionStatement	job_contact = NULLSTRING	2996:19:79055:79077	3255496	1	True				
ANR	3255530	AssignmentExpression	job_contact = NULLSTRING		3255496	0		=			
ANR	3255531	Identifier	job_contact		3255496	0					
ANR	3255532	Identifier	NULLSTRING		3255496	1					
ANR	3255533	IfStatement	if ( ! callback_contact )		3255496	4					
ANR	3255534	Condition	! callback_contact	2997:5:79084:79100	3255496	0	True				
ANR	3255535	UnaryOperationExpression	! callback_contact		3255496	0					
ANR	3255536	UnaryOperator	!		3255496	0					
ANR	3255537	Identifier	callback_contact		3255496	1					
ANR	3255538	ExpressionStatement	callback_contact = NULLSTRING	2997:24:79103:79130	3255496	1	True				
ANR	3255539	AssignmentExpression	callback_contact = NULLSTRING		3255496	0		=			
ANR	3255540	Identifier	callback_contact		3255496	0					
ANR	3255541	Identifier	NULLSTRING		3255496	1					
ANR	3255542	IdentifierDeclStatement	std :: string reqline ;	2998:1:79133:79152	3255496	5	True				
ANR	3255543	IdentifierDecl	reqline		3255496	0					
ANR	3255544	IdentifierDeclType	std :: string		3255496	0					
ANR	3255545	Identifier	reqline		3255496	1					
ANR	3255546	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( job_contact ) ) ;	2999:1:79155:79207	3255496	6	True				
ANR	3255547	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( job_contact ) )		3255496	0					
ANR	3255548	IdentifierDeclType	char *		3255496	0					
ANR	3255549	Identifier	esc1		3255496	1					
ANR	3255550	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( job_contact ) )		3255496	2		=			
ANR	3255551	Identifier	esc1		3255496	0					
ANR	3255552	CallExpression	strdup ( escapeGahpString ( job_contact ) )		3255496	1					
ANR	3255553	Callee	strdup		3255496	0					
ANR	3255554	Identifier	strdup		3255496	0					
ANR	3255555	ArgumentList	escapeGahpString ( job_contact )		3255496	1					
ANR	3255556	Argument	escapeGahpString ( job_contact )		3255496	0					
ANR	3255557	CallExpression	escapeGahpString ( job_contact )		3255496	0					
ANR	3255558	Callee	escapeGahpString		3255496	0					
ANR	3255559	Identifier	escapeGahpString		3255496	0					
ANR	3255560	ArgumentList	job_contact		3255496	1					
ANR	3255561	Argument	job_contact		3255496	0					
ANR	3255562	Identifier	job_contact		3255496	0					
ANR	3255563	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( callback_contact ) ) ;	3000:1:79210:79267	3255496	7	True				
ANR	3255564	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( callback_contact ) )		3255496	0					
ANR	3255565	IdentifierDeclType	char *		3255496	0					
ANR	3255566	Identifier	esc2		3255496	1					
ANR	3255567	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( callback_contact ) )		3255496	2		=			
ANR	3255568	Identifier	esc2		3255496	0					
ANR	3255569	CallExpression	strdup ( escapeGahpString ( callback_contact ) )		3255496	1					
ANR	3255570	Callee	strdup		3255496	0					
ANR	3255571	Identifier	strdup		3255496	0					
ANR	3255572	ArgumentList	escapeGahpString ( callback_contact )		3255496	1					
ANR	3255573	Argument	escapeGahpString ( callback_contact )		3255496	0					
ANR	3255574	CallExpression	escapeGahpString ( callback_contact )		3255496	0					
ANR	3255575	Callee	escapeGahpString		3255496	0					
ANR	3255576	Identifier	escapeGahpString		3255496	0					
ANR	3255577	ArgumentList	callback_contact		3255496	1					
ANR	3255578	Argument	callback_contact		3255496	0					
ANR	3255579	Identifier	callback_contact		3255496	0					
ANR	3255580	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	3001:1:79270:79312	3255496	8	True				
ANR	3255581	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3255496	0					
ANR	3255582	IdentifierDeclType	int		3255496	0					
ANR	3255583	Identifier	x		3255496	1					
ANR	3255584	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3255496	2		=			
ANR	3255585	Identifier	x		3255496	0					
ANR	3255586	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3255496	1					
ANR	3255587	Callee	sprintf		3255496	0					
ANR	3255588	Identifier	sprintf		3255496	0					
ANR	3255589	ArgumentList	reqline		3255496	1					
ANR	3255590	Argument	reqline		3255496	0					
ANR	3255591	Identifier	reqline		3255496	0					
ANR	3255592	Argument	"""%s %s"""		3255496	1					
ANR	3255593	PrimaryExpression	"""%s %s"""		3255496	0					
ANR	3255594	Argument	esc1		3255496	2					
ANR	3255595	Identifier	esc1		3255496	0					
ANR	3255596	Argument	esc2		3255496	3					
ANR	3255597	Identifier	esc2		3255496	0					
ANR	3255598	ExpressionStatement	free ( esc1 )	3002:1:79315:79327	3255496	9	True				
ANR	3255599	CallExpression	free ( esc1 )		3255496	0					
ANR	3255600	Callee	free		3255496	0					
ANR	3255601	Identifier	free		3255496	0					
ANR	3255602	ArgumentList	esc1		3255496	1					
ANR	3255603	Argument	esc1		3255496	0					
ANR	3255604	Identifier	esc1		3255496	0					
ANR	3255605	ExpressionStatement	free ( esc2 )	3003:1:79330:79342	3255496	10	True				
ANR	3255606	CallExpression	free ( esc2 )		3255496	0					
ANR	3255607	Callee	free		3255496	0					
ANR	3255608	Identifier	free		3255496	0					
ANR	3255609	ArgumentList	esc2		3255496	1					
ANR	3255610	Argument	esc2		3255496	0					
ANR	3255611	Identifier	esc2		3255496	0					
ANR	3255612	ExpressionStatement	ASSERT ( x > 0 )	3004:1:79345:79360	3255496	11	True				
ANR	3255613	CallExpression	ASSERT ( x > 0 )		3255496	0					
ANR	3255614	Callee	ASSERT		3255496	0					
ANR	3255615	Identifier	ASSERT		3255496	0					
ANR	3255616	ArgumentList	x > 0		3255496	1					
ANR	3255617	Argument	x > 0		3255496	0					
ANR	3255618	RelationalExpression	x > 0		3255496	0		>			
ANR	3255619	Identifier	x		3255496	0					
ANR	3255620	PrimaryExpression	0		3255496	1					
ANR	3255621	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3005:1:79363:79396	3255496	12	True				
ANR	3255622	IdentifierDecl	* buf = reqline . c_str ( )		3255496	0					
ANR	3255623	IdentifierDeclType	const char *		3255496	0					
ANR	3255624	Identifier	buf		3255496	1					
ANR	3255625	AssignmentExpression	* buf = reqline . c_str ( )		3255496	2		=			
ANR	3255626	Identifier	buf		3255496	0					
ANR	3255627	CallExpression	reqline . c_str ( )		3255496	1					
ANR	3255628	Callee	reqline . c_str		3255496	0					
ANR	3255629	MemberAccess	reqline . c_str		3255496	0					
ANR	3255630	Identifier	reqline		3255496	0					
ANR	3255631	Identifier	c_str		3255496	1					
ANR	3255632	ArgumentList			3255496	1					
ANR	3255633	IfStatement	"if ( ! is_pending ( command , buf ) )"		3255496	13					
ANR	3255634	Condition	"! is_pending ( command , buf )"	3009:6:79497:79520	3255496	0	True				
ANR	3255635	UnaryOperationExpression	"! is_pending ( command , buf )"		3255496	0					
ANR	3255636	UnaryOperator	!		3255496	0					
ANR	3255637	CallExpression	"is_pending ( command , buf )"		3255496	1					
ANR	3255638	Callee	is_pending		3255496	0					
ANR	3255639	Identifier	is_pending		3255496	0					
ANR	3255640	ArgumentList	command		3255496	1					
ANR	3255641	Argument	command		3255496	0					
ANR	3255642	Identifier	command		3255496	0					
ANR	3255643	Argument	buf		3255496	1					
ANR	3255644	Identifier	buf		3255496	0					
ANR	3255645	CompoundStatement		23:33:740:740	3255496	1					
ANR	3255646	IfStatement	if ( m_mode == results_only )		3255496	0					
ANR	3255647	Condition	m_mode == results_only	3012:7:79629:79650	3255496	0	True				
ANR	3255648	EqualityExpression	m_mode == results_only		3255496	0		==			
ANR	3255649	Identifier	m_mode		3255496	0					
ANR	3255650	Identifier	results_only		3255496	1					
ANR	3255651	CompoundStatement		26:32:870:870	3255496	1					
ANR	3255652	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3013:3:79659:79698	3255496	0	True				
ANR	3255653	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3255496	0					
ANR	3255654	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	3015:2:79706:79743	3255496	1	True				
ANR	3255655	CallExpression	"now_pending ( command , buf , normal_proxy )"		3255496	0					
ANR	3255656	Callee	now_pending		3255496	0					
ANR	3255657	Identifier	now_pending		3255496	0					
ANR	3255658	ArgumentList	command		3255496	1					
ANR	3255659	Argument	command		3255496	0					
ANR	3255660	Identifier	command		3255496	0					
ANR	3255661	Argument	buf		3255496	1					
ANR	3255662	Identifier	buf		3255496	0					
ANR	3255663	Argument	normal_proxy		3255496	2					
ANR	3255664	Identifier	normal_proxy		3255496	0					
ANR	3255665	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3021:1:79837:79888	3255496	14	True				
ANR	3255666	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3255496	0					
ANR	3255667	IdentifierDeclType	Gahp_Args *		3255496	0					
ANR	3255668	Identifier	result		3255496	1					
ANR	3255669	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3255496	2		=			
ANR	3255670	Identifier	result		3255496	0					
ANR	3255671	CallExpression	"get_pending_result ( command , buf )"		3255496	1					
ANR	3255672	Callee	get_pending_result		3255496	0					
ANR	3255673	Identifier	get_pending_result		3255496	0					
ANR	3255674	ArgumentList	command		3255496	1					
ANR	3255675	Argument	command		3255496	0					
ANR	3255676	Identifier	command		3255496	0					
ANR	3255677	Argument	buf		3255496	1					
ANR	3255678	Identifier	buf		3255496	0					
ANR	3255679	IfStatement	if ( result )		3255496	15					
ANR	3255680	Condition	result	3022:6:79896:79901	3255496	0	True				
ANR	3255681	Identifier	result		3255496	0					
ANR	3255682	CompoundStatement		41:2:1216:1246	3255496	1					
ANR	3255683	IfStatement	if ( result -> argc != 3 )		3255496	0					
ANR	3255684	Condition	result -> argc != 3	3024:6:79937:79953	3255496	0	True				
ANR	3255685	EqualityExpression	result -> argc != 3		3255496	0		!=			
ANR	3255686	PtrMemberAccess	result -> argc		3255496	0					
ANR	3255687	Identifier	result		3255496	0					
ANR	3255688	Identifier	argc		3255496	1					
ANR	3255689	PrimaryExpression	3		3255496	1					
ANR	3255690	CompoundStatement		38:25:1172:1172	3255496	1					
ANR	3255691	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3025:3:79961:79992	3255496	0	True				
ANR	3255692	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3255496	0					
ANR	3255693	Callee	EXCEPT		3255496	0					
ANR	3255694	Identifier	EXCEPT		3255496	0					
ANR	3255695	ArgumentList	"""Bad %s Result"""		3255496	1					
ANR	3255696	Argument	"""Bad %s Result"""		3255496	0					
ANR	3255697	PrimaryExpression	"""Bad %s Result"""		3255496	0					
ANR	3255698	Argument	command		3255496	1					
ANR	3255699	Identifier	command		3255496	0					
ANR	3255700	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	3027:2:80000:80030	3255496	1	True				
ANR	3255701	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3255496	0					
ANR	3255702	IdentifierDeclType	int		3255496	0					
ANR	3255703	Identifier	rc		3255496	1					
ANR	3255704	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3255496	2		=			
ANR	3255705	Identifier	rc		3255496	0					
ANR	3255706	CallExpression	atoi ( result -> argv [ 1 ] )		3255496	1					
ANR	3255707	Callee	atoi		3255496	0					
ANR	3255708	Identifier	atoi		3255496	0					
ANR	3255709	ArgumentList	result -> argv [ 1 ]		3255496	1					
ANR	3255710	Argument	result -> argv [ 1 ]		3255496	0					
ANR	3255711	ArrayIndexing	result -> argv [ 1 ]		3255496	0					
ANR	3255712	PtrMemberAccess	result -> argv		3255496	0					
ANR	3255713	Identifier	result		3255496	0					
ANR	3255714	Identifier	argv		3255496	1					
ANR	3255715	PrimaryExpression	1		3255496	1					
ANR	3255716	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3255496	2					
ANR	3255717	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3028:7:80039:80077	3255496	0	True				
ANR	3255718	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3255496	0					
ANR	3255719	Callee	strcasecmp		3255496	0					
ANR	3255720	Identifier	strcasecmp		3255496	0					
ANR	3255721	ArgumentList	result -> argv [ 2 ]		3255496	1					
ANR	3255722	Argument	result -> argv [ 2 ]		3255496	0					
ANR	3255723	ArrayIndexing	result -> argv [ 2 ]		3255496	0					
ANR	3255724	PtrMemberAccess	result -> argv		3255496	0					
ANR	3255725	Identifier	result		3255496	0					
ANR	3255726	Identifier	argv		3255496	1					
ANR	3255727	PrimaryExpression	2		3255496	1					
ANR	3255728	Argument	NULLSTRING		3255496	1					
ANR	3255729	Identifier	NULLSTRING		3255496	0					
ANR	3255730	CompoundStatement		42:49:1297:1297	3255496	1					
ANR	3255731	ExpressionStatement	error_string = result -> argv [ 2 ]	3029:3:80086:80116	3255496	0	True				
ANR	3255732	AssignmentExpression	error_string = result -> argv [ 2 ]		3255496	0		=			
ANR	3255733	Identifier	error_string		3255496	0					
ANR	3255734	ArrayIndexing	result -> argv [ 2 ]		3255496	1					
ANR	3255735	PtrMemberAccess	result -> argv		3255496	0					
ANR	3255736	Identifier	result		3255496	0					
ANR	3255737	Identifier	argv		3255496	1					
ANR	3255738	PrimaryExpression	2		3255496	1					
ANR	3255739	ElseStatement	else		3255496	0					
ANR	3255740	CompoundStatement		44:9:1343:1343	3255496	0					
ANR	3255741	ExpressionStatement	"error_string = """""	3031:3:80132:80149	3255496	0	True				
ANR	3255742	AssignmentExpression	"error_string = """""		3255496	0		=			
ANR	3255743	Identifier	error_string		3255496	0					
ANR	3255744	PrimaryExpression	""""""		3255496	1					
ANR	3255745	Statement	delete	3033:2:80157:80162	3255496	3	True				
ANR	3255746	ExpressionStatement	result	3033:9:80164:80170	3255496	4	True				
ANR	3255747	Identifier	result		3255496	0					
ANR	3255748	ReturnStatement	return rc ;	3034:2:80174:80183	3255496	5	True				
ANR	3255749	Identifier	rc		3255496	0					
ANR	3255750	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3255496	16					
ANR	3255751	Condition	"check_pending_timeout ( command , buf )"	3038:6:80240:80273	3255496	0	True				
ANR	3255752	CallExpression	"check_pending_timeout ( command , buf )"		3255496	0					
ANR	3255753	Callee	check_pending_timeout		3255496	0					
ANR	3255754	Identifier	check_pending_timeout		3255496	0					
ANR	3255755	ArgumentList	command		3255496	1					
ANR	3255756	Argument	command		3255496	0					
ANR	3255757	Identifier	command		3255496	0					
ANR	3255758	Argument	buf		3255496	1					
ANR	3255759	Identifier	buf		3255496	0					
ANR	3255760	CompoundStatement		52:43:1493:1493	3255496	1					
ANR	3255761	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3040:2:80313:80361	3255496	0	True				
ANR	3255762	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3255496	0					
ANR	3255763	Callee	sprintf		3255496	0					
ANR	3255764	Identifier	sprintf		3255496	0					
ANR	3255765	ArgumentList	error_string		3255496	1					
ANR	3255766	Argument	error_string		3255496	0					
ANR	3255767	Identifier	error_string		3255496	0					
ANR	3255768	Argument	"""%s timed out"""		3255496	1					
ANR	3255769	PrimaryExpression	"""%s timed out"""		3255496	0					
ANR	3255770	Argument	command		3255496	2					
ANR	3255771	Identifier	command		3255496	0					
ANR	3255772	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3041:2:80365:80400	3255496	1	True				
ANR	3255773	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3255496	0					
ANR	3255774	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3045:1:80460:80493	3255496	17	True				
ANR	3255775	Identifier	GAHPCLIENT_COMMAND_PENDING		3255496	0					
ANR	3255776	ReturnType	int		3255496	1					
ANR	3255777	Identifier	GahpClient :: gt4_gram_client_job_callback_register		3255496	2					
ANR	3255778	ParameterList	"const char * job_contact , const char * callback_contact"		3255496	3					
ANR	3255779	Parameter	const char * job_contact	2985:50:78725:78748	3255496	0	True				
ANR	3255780	ParameterType	const char *		3255496	0					
ANR	3255781	Identifier	job_contact		3255496	1					
ANR	3255782	Parameter	const char * callback_contact	2986:1:78752:78780	3255496	1	True				
ANR	3255783	ParameterType	const char *		3255496	0					
ANR	3255784	Identifier	callback_contact		3255496	1					
ANR	3255785	CFGEntryNode	ENTRY		3255496		True				
ANR	3255786	CFGExitNode	EXIT		3255496		True				
ANR	3255787	Symbol	server		3255496						
ANR	3255788	Symbol	server -> m_commands_supported		3255496						
ANR	3255789	Symbol	escapeGahpString		3255496						
ANR	3255790	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3255496						
ANR	3255791	Symbol	* server		3255496						
ANR	3255792	Symbol	reqline . c_str		3255496						
ANR	3255793	Symbol	results_only		3255496						
ANR	3255794	Symbol	result -> argv		3255496						
ANR	3255795	Symbol	* server -> m_commands_supported		3255496						
ANR	3255796	Symbol	sprintf		3255496						
ANR	3255797	Symbol	result		3255496						
ANR	3255798	Symbol	normal_proxy		3255496						
ANR	3255799	Symbol	* result		3255496						
ANR	3255800	Symbol	server -> m_commands_supported -> contains_anycase		3255496						
ANR	3255801	Symbol	GAHPCLIENT_COMMAND_PENDING		3255496						
ANR	3255802	Symbol	reqline		3255496						
ANR	3255803	Symbol	m_mode		3255496						
ANR	3255804	Symbol	strcasecmp		3255496						
ANR	3255805	Symbol	job_contact		3255496						
ANR	3255806	Symbol	* result -> argv		3255496						
ANR	3255807	Symbol	atoi		3255496						
ANR	3255808	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3255496						
ANR	3255809	Symbol	* * result		3255496						
ANR	3255810	Symbol	NULLSTRING		3255496						
ANR	3255811	Symbol	command		3255496						
ANR	3255812	Symbol	get_pending_result		3255496						
ANR	3255813	Symbol	rc		3255496						
ANR	3255814	Symbol	error_string		3255496						
ANR	3255815	Symbol	callback_contact		3255496						
ANR	3255816	Symbol	esc2		3255496						
ANR	3255817	Symbol	buf		3255496						
ANR	3255818	Symbol	esc1		3255496						
ANR	3255819	Symbol	x		3255496						
ANR	3255820	Symbol	result -> argc		3255496						
ANR	3255821	Symbol	FALSE		3255496						
ANR	3255822	Symbol	* * server		3255496						
ANR	3255823	Symbol	strdup		3255496						
ANR	3255824	Symbol	check_pending_timeout		3255496						
ANR	3255825	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3255496						
ANR	3255826	Symbol	is_pending		3255496						
ANR	3255827	Function	GahpClient :: gt4_gram_client_ping	3049:0:80499:82097							
ANR	3255828	FunctionDef	GahpClient :: gt4_gram_client_ping (const char * resource_contact)		3255827	0					
ANR	3255829	CompoundStatement		3051:0:80568:82097	3255827	0					
ANR	3255830	Statement	static	3052:1:80571:80576	3255827	0	True				
ANR	3255831	IdentifierDeclStatement	"const char * command = ""GT4_GRAM_PING"" ;"	3052:8:80578:80615	3255827	1	True				
ANR	3255832	IdentifierDecl	"* command = ""GT4_GRAM_PING"""		3255827	0					
ANR	3255833	IdentifierDeclType	const char *		3255827	0					
ANR	3255834	Identifier	command		3255827	1					
ANR	3255835	AssignmentExpression	"* command = ""GT4_GRAM_PING"""		3255827	2		=			
ANR	3255836	Identifier	command		3255827	0					
ANR	3255837	PrimaryExpression	"""GT4_GRAM_PING"""		3255827	1					
ANR	3255838	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3255827	2					
ANR	3255839	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3055:6:80664:80725	3255827	0	True				
ANR	3255840	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3255827	0		==			
ANR	3255841	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3255827	0					
ANR	3255842	Callee	server -> m_commands_supported -> contains_anycase		3255827	0					
ANR	3255843	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3255827	0					
ANR	3255844	PtrMemberAccess	server -> m_commands_supported		3255827	0					
ANR	3255845	Identifier	server		3255827	0					
ANR	3255846	Identifier	m_commands_supported		3255827	1					
ANR	3255847	Identifier	contains_anycase		3255827	1					
ANR	3255848	ArgumentList	command		3255827	1					
ANR	3255849	Argument	command		3255827	0					
ANR	3255850	Identifier	command		3255827	0					
ANR	3255851	Identifier	FALSE		3255827	1					
ANR	3255852	CompoundStatement		5:70:159:159	3255827	1					
ANR	3255853	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3056:2:80732:80771	3255827	0	True				
ANR	3255854	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3255827	0					
ANR	3255855	IfStatement	if ( ! resource_contact )		3255827	3					
ANR	3255856	Condition	! resource_contact	3060:5:80809:80825	3255827	0	True				
ANR	3255857	UnaryOperationExpression	! resource_contact		3255827	0					
ANR	3255858	UnaryOperator	!		3255827	0					
ANR	3255859	Identifier	resource_contact		3255827	1					
ANR	3255860	ExpressionStatement	resource_contact = NULLSTRING	3060:24:80828:80855	3255827	1	True				
ANR	3255861	AssignmentExpression	resource_contact = NULLSTRING		3255827	0		=			
ANR	3255862	Identifier	resource_contact		3255827	0					
ANR	3255863	Identifier	NULLSTRING		3255827	1					
ANR	3255864	IdentifierDeclStatement	std :: string reqline ;	3061:1:80858:80877	3255827	4	True				
ANR	3255865	IdentifierDecl	reqline		3255827	0					
ANR	3255866	IdentifierDeclType	std :: string		3255827	0					
ANR	3255867	Identifier	reqline		3255827	1					
ANR	3255868	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) ) ;"	3062:1:80880:80944	3255827	5	True				
ANR	3255869	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3255827	0					
ANR	3255870	IdentifierDeclType	int		3255827	0					
ANR	3255871	Identifier	x		3255827	1					
ANR	3255872	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3255827	2		=			
ANR	3255873	Identifier	x		3255827	0					
ANR	3255874	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( resource_contact ) )"		3255827	1					
ANR	3255875	Callee	sprintf		3255827	0					
ANR	3255876	Identifier	sprintf		3255827	0					
ANR	3255877	ArgumentList	reqline		3255827	1					
ANR	3255878	Argument	reqline		3255827	0					
ANR	3255879	Identifier	reqline		3255827	0					
ANR	3255880	Argument	"""%s"""		3255827	1					
ANR	3255881	PrimaryExpression	"""%s"""		3255827	0					
ANR	3255882	Argument	escapeGahpString ( resource_contact )		3255827	2					
ANR	3255883	CallExpression	escapeGahpString ( resource_contact )		3255827	0					
ANR	3255884	Callee	escapeGahpString		3255827	0					
ANR	3255885	Identifier	escapeGahpString		3255827	0					
ANR	3255886	ArgumentList	resource_contact		3255827	1					
ANR	3255887	Argument	resource_contact		3255827	0					
ANR	3255888	Identifier	resource_contact		3255827	0					
ANR	3255889	ExpressionStatement	ASSERT ( x > 0 )	3063:1:80947:80962	3255827	6	True				
ANR	3255890	CallExpression	ASSERT ( x > 0 )		3255827	0					
ANR	3255891	Callee	ASSERT		3255827	0					
ANR	3255892	Identifier	ASSERT		3255827	0					
ANR	3255893	ArgumentList	x > 0		3255827	1					
ANR	3255894	Argument	x > 0		3255827	0					
ANR	3255895	RelationalExpression	x > 0		3255827	0		>			
ANR	3255896	Identifier	x		3255827	0					
ANR	3255897	PrimaryExpression	0		3255827	1					
ANR	3255898	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3064:1:80965:80998	3255827	7	True				
ANR	3255899	IdentifierDecl	* buf = reqline . c_str ( )		3255827	0					
ANR	3255900	IdentifierDeclType	const char *		3255827	0					
ANR	3255901	Identifier	buf		3255827	1					
ANR	3255902	AssignmentExpression	* buf = reqline . c_str ( )		3255827	2		=			
ANR	3255903	Identifier	buf		3255827	0					
ANR	3255904	CallExpression	reqline . c_str ( )		3255827	1					
ANR	3255905	Callee	reqline . c_str		3255827	0					
ANR	3255906	MemberAccess	reqline . c_str		3255827	0					
ANR	3255907	Identifier	reqline		3255827	0					
ANR	3255908	Identifier	c_str		3255827	1					
ANR	3255909	ArgumentList			3255827	1					
ANR	3255910	IfStatement	"if ( ! is_pending ( command , buf ) )"		3255827	8					
ANR	3255911	Condition	"! is_pending ( command , buf )"	3068:6:81099:81122	3255827	0	True				
ANR	3255912	UnaryOperationExpression	"! is_pending ( command , buf )"		3255827	0					
ANR	3255913	UnaryOperator	!		3255827	0					
ANR	3255914	CallExpression	"is_pending ( command , buf )"		3255827	1					
ANR	3255915	Callee	is_pending		3255827	0					
ANR	3255916	Identifier	is_pending		3255827	0					
ANR	3255917	ArgumentList	command		3255827	1					
ANR	3255918	Argument	command		3255827	0					
ANR	3255919	Identifier	command		3255827	0					
ANR	3255920	Argument	buf		3255827	1					
ANR	3255921	Identifier	buf		3255827	0					
ANR	3255922	CompoundStatement		18:33:557:557	3255827	1					
ANR	3255923	IfStatement	if ( m_mode == results_only )		3255827	0					
ANR	3255924	Condition	m_mode == results_only	3071:7:81231:81252	3255827	0	True				
ANR	3255925	EqualityExpression	m_mode == results_only		3255827	0		==			
ANR	3255926	Identifier	m_mode		3255827	0					
ANR	3255927	Identifier	results_only		3255827	1					
ANR	3255928	CompoundStatement		21:32:687:687	3255827	1					
ANR	3255929	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3072:3:81261:81300	3255827	0	True				
ANR	3255930	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3255827	0					
ANR	3255931	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	3074:2:81308:81345	3255827	1	True				
ANR	3255932	CallExpression	"now_pending ( command , buf , normal_proxy )"		3255827	0					
ANR	3255933	Callee	now_pending		3255827	0					
ANR	3255934	Identifier	now_pending		3255827	0					
ANR	3255935	ArgumentList	command		3255827	1					
ANR	3255936	Argument	command		3255827	0					
ANR	3255937	Identifier	command		3255827	0					
ANR	3255938	Argument	buf		3255827	1					
ANR	3255939	Identifier	buf		3255827	0					
ANR	3255940	Argument	normal_proxy		3255827	2					
ANR	3255941	Identifier	normal_proxy		3255827	0					
ANR	3255942	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3080:1:81439:81490	3255827	9	True				
ANR	3255943	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3255827	0					
ANR	3255944	IdentifierDeclType	Gahp_Args *		3255827	0					
ANR	3255945	Identifier	result		3255827	1					
ANR	3255946	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3255827	2		=			
ANR	3255947	Identifier	result		3255827	0					
ANR	3255948	CallExpression	"get_pending_result ( command , buf )"		3255827	1					
ANR	3255949	Callee	get_pending_result		3255827	0					
ANR	3255950	Identifier	get_pending_result		3255827	0					
ANR	3255951	ArgumentList	command		3255827	1					
ANR	3255952	Argument	command		3255827	0					
ANR	3255953	Identifier	command		3255827	0					
ANR	3255954	Argument	buf		3255827	1					
ANR	3255955	Identifier	buf		3255827	0					
ANR	3255956	IfStatement	if ( result )		3255827	10					
ANR	3255957	Condition	result	3081:6:81498:81503	3255827	0	True				
ANR	3255958	Identifier	result		3255827	0					
ANR	3255959	CompoundStatement		36:2:1033:1063	3255827	1					
ANR	3255960	IfStatement	if ( result -> argc != 3 )		3255827	0					
ANR	3255961	Condition	result -> argc != 3	3083:6:81539:81555	3255827	0	True				
ANR	3255962	EqualityExpression	result -> argc != 3		3255827	0		!=			
ANR	3255963	PtrMemberAccess	result -> argc		3255827	0					
ANR	3255964	Identifier	result		3255827	0					
ANR	3255965	Identifier	argc		3255827	1					
ANR	3255966	PrimaryExpression	3		3255827	1					
ANR	3255967	CompoundStatement		33:25:989:989	3255827	1					
ANR	3255968	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3084:3:81563:81594	3255827	0	True				
ANR	3255969	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3255827	0					
ANR	3255970	Callee	EXCEPT		3255827	0					
ANR	3255971	Identifier	EXCEPT		3255827	0					
ANR	3255972	ArgumentList	"""Bad %s Result"""		3255827	1					
ANR	3255973	Argument	"""Bad %s Result"""		3255827	0					
ANR	3255974	PrimaryExpression	"""Bad %s Result"""		3255827	0					
ANR	3255975	Argument	command		3255827	1					
ANR	3255976	Identifier	command		3255827	0					
ANR	3255977	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	3086:2:81602:81632	3255827	1	True				
ANR	3255978	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3255827	0					
ANR	3255979	IdentifierDeclType	int		3255827	0					
ANR	3255980	Identifier	rc		3255827	1					
ANR	3255981	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3255827	2		=			
ANR	3255982	Identifier	rc		3255827	0					
ANR	3255983	CallExpression	atoi ( result -> argv [ 1 ] )		3255827	1					
ANR	3255984	Callee	atoi		3255827	0					
ANR	3255985	Identifier	atoi		3255827	0					
ANR	3255986	ArgumentList	result -> argv [ 1 ]		3255827	1					
ANR	3255987	Argument	result -> argv [ 1 ]		3255827	0					
ANR	3255988	ArrayIndexing	result -> argv [ 1 ]		3255827	0					
ANR	3255989	PtrMemberAccess	result -> argv		3255827	0					
ANR	3255990	Identifier	result		3255827	0					
ANR	3255991	Identifier	argv		3255827	1					
ANR	3255992	PrimaryExpression	1		3255827	1					
ANR	3255993	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3255827	2					
ANR	3255994	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3087:7:81641:81679	3255827	0	True				
ANR	3255995	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3255827	0					
ANR	3255996	Callee	strcasecmp		3255827	0					
ANR	3255997	Identifier	strcasecmp		3255827	0					
ANR	3255998	ArgumentList	result -> argv [ 2 ]		3255827	1					
ANR	3255999	Argument	result -> argv [ 2 ]		3255827	0					
ANR	3256000	ArrayIndexing	result -> argv [ 2 ]		3255827	0					
ANR	3256001	PtrMemberAccess	result -> argv		3255827	0					
ANR	3256002	Identifier	result		3255827	0					
ANR	3256003	Identifier	argv		3255827	1					
ANR	3256004	PrimaryExpression	2		3255827	1					
ANR	3256005	Argument	NULLSTRING		3255827	1					
ANR	3256006	Identifier	NULLSTRING		3255827	0					
ANR	3256007	CompoundStatement		37:49:1114:1114	3255827	1					
ANR	3256008	ExpressionStatement	error_string = result -> argv [ 2 ]	3088:3:81688:81718	3255827	0	True				
ANR	3256009	AssignmentExpression	error_string = result -> argv [ 2 ]		3255827	0		=			
ANR	3256010	Identifier	error_string		3255827	0					
ANR	3256011	ArrayIndexing	result -> argv [ 2 ]		3255827	1					
ANR	3256012	PtrMemberAccess	result -> argv		3255827	0					
ANR	3256013	Identifier	result		3255827	0					
ANR	3256014	Identifier	argv		3255827	1					
ANR	3256015	PrimaryExpression	2		3255827	1					
ANR	3256016	ElseStatement	else		3255827	0					
ANR	3256017	CompoundStatement		39:9:1160:1160	3255827	0					
ANR	3256018	ExpressionStatement	"error_string = """""	3090:3:81734:81751	3255827	0	True				
ANR	3256019	AssignmentExpression	"error_string = """""		3255827	0		=			
ANR	3256020	Identifier	error_string		3255827	0					
ANR	3256021	PrimaryExpression	""""""		3255827	1					
ANR	3256022	Statement	delete	3092:2:81759:81764	3255827	3	True				
ANR	3256023	ExpressionStatement	result	3092:9:81766:81772	3255827	4	True				
ANR	3256024	Identifier	result		3255827	0					
ANR	3256025	ReturnStatement	return rc ;	3093:2:81776:81785	3255827	5	True				
ANR	3256026	Identifier	rc		3255827	0					
ANR	3256027	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3255827	11					
ANR	3256028	Condition	"check_pending_timeout ( command , buf )"	3097:6:81842:81875	3255827	0	True				
ANR	3256029	CallExpression	"check_pending_timeout ( command , buf )"		3255827	0					
ANR	3256030	Callee	check_pending_timeout		3255827	0					
ANR	3256031	Identifier	check_pending_timeout		3255827	0					
ANR	3256032	ArgumentList	command		3255827	1					
ANR	3256033	Argument	command		3255827	0					
ANR	3256034	Identifier	command		3255827	0					
ANR	3256035	Argument	buf		3255827	1					
ANR	3256036	Identifier	buf		3255827	0					
ANR	3256037	CompoundStatement		47:43:1310:1310	3255827	1					
ANR	3256038	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3099:2:81915:81963	3255827	0	True				
ANR	3256039	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3255827	0					
ANR	3256040	Callee	sprintf		3255827	0					
ANR	3256041	Identifier	sprintf		3255827	0					
ANR	3256042	ArgumentList	error_string		3255827	1					
ANR	3256043	Argument	error_string		3255827	0					
ANR	3256044	Identifier	error_string		3255827	0					
ANR	3256045	Argument	"""%s timed out"""		3255827	1					
ANR	3256046	PrimaryExpression	"""%s timed out"""		3255827	0					
ANR	3256047	Argument	command		3255827	2					
ANR	3256048	Identifier	command		3255827	0					
ANR	3256049	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3100:2:81967:82002	3255827	1	True				
ANR	3256050	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3255827	0					
ANR	3256051	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3104:1:82062:82095	3255827	12	True				
ANR	3256052	Identifier	GAHPCLIENT_COMMAND_PENDING		3255827	0					
ANR	3256053	ReturnType	int		3255827	1					
ANR	3256054	Identifier	GahpClient :: gt4_gram_client_ping		3255827	2					
ANR	3256055	ParameterList	const char * resource_contact		3255827	3					
ANR	3256056	Parameter	const char * resource_contact	3050:33:80537:80565	3255827	0	True				
ANR	3256057	ParameterType	const char *		3255827	0					
ANR	3256058	Identifier	resource_contact		3255827	1					
ANR	3256059	CFGEntryNode	ENTRY		3255827		True				
ANR	3256060	CFGExitNode	EXIT		3255827		True				
ANR	3256061	Symbol	server -> m_commands_supported		3255827						
ANR	3256062	Symbol	server		3255827						
ANR	3256063	Symbol	escapeGahpString		3255827						
ANR	3256064	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3255827						
ANR	3256065	Symbol	resource_contact		3255827						
ANR	3256066	Symbol	* server		3255827						
ANR	3256067	Symbol	reqline . c_str		3255827						
ANR	3256068	Symbol	results_only		3255827						
ANR	3256069	Symbol	result -> argv		3255827						
ANR	3256070	Symbol	* server -> m_commands_supported		3255827						
ANR	3256071	Symbol	sprintf		3255827						
ANR	3256072	Symbol	result		3255827						
ANR	3256073	Symbol	normal_proxy		3255827						
ANR	3256074	Symbol	* result		3255827						
ANR	3256075	Symbol	server -> m_commands_supported -> contains_anycase		3255827						
ANR	3256076	Symbol	GAHPCLIENT_COMMAND_PENDING		3255827						
ANR	3256077	Symbol	reqline		3255827						
ANR	3256078	Symbol	m_mode		3255827						
ANR	3256079	Symbol	strcasecmp		3255827						
ANR	3256080	Symbol	* result -> argv		3255827						
ANR	3256081	Symbol	atoi		3255827						
ANR	3256082	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3255827						
ANR	3256083	Symbol	* * result		3255827						
ANR	3256084	Symbol	NULLSTRING		3255827						
ANR	3256085	Symbol	command		3255827						
ANR	3256086	Symbol	get_pending_result		3255827						
ANR	3256087	Symbol	rc		3255827						
ANR	3256088	Symbol	error_string		3255827						
ANR	3256089	Symbol	buf		3255827						
ANR	3256090	Symbol	x		3255827						
ANR	3256091	Symbol	result -> argc		3255827						
ANR	3256092	Symbol	FALSE		3255827						
ANR	3256093	Symbol	* * server		3255827						
ANR	3256094	Symbol	check_pending_timeout		3255827						
ANR	3256095	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3255827						
ANR	3256096	Symbol	is_pending		3255827						
ANR	3256097	Function	GahpClient :: gt4_gram_client_delegate_credentials	3107:0:82100:83873							
ANR	3256098	FunctionDef	"GahpClient :: gt4_gram_client_delegate_credentials (const char * delegation_service_url , char * * delegation_uri)"		3256097	0					
ANR	3256099	CompoundStatement		3109:0:82213:83873	3256097	0					
ANR	3256100	Statement	static	3110:1:82216:82221	3256097	0	True				
ANR	3256101	IdentifierDeclStatement	"const char * command = ""GT4_DELEGATE_CREDENTIAL"" ;"	3110:8:82223:82270	3256097	1	True				
ANR	3256102	IdentifierDecl	"* command = ""GT4_DELEGATE_CREDENTIAL"""		3256097	0					
ANR	3256103	IdentifierDeclType	const char *		3256097	0					
ANR	3256104	Identifier	command		3256097	1					
ANR	3256105	AssignmentExpression	"* command = ""GT4_DELEGATE_CREDENTIAL"""		3256097	2		=			
ANR	3256106	Identifier	command		3256097	0					
ANR	3256107	PrimaryExpression	"""GT4_DELEGATE_CREDENTIAL"""		3256097	1					
ANR	3256108	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3256097	2					
ANR	3256109	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3113:6:82319:82380	3256097	0	True				
ANR	3256110	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3256097	0		==			
ANR	3256111	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3256097	0					
ANR	3256112	Callee	server -> m_commands_supported -> contains_anycase		3256097	0					
ANR	3256113	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3256097	0					
ANR	3256114	PtrMemberAccess	server -> m_commands_supported		3256097	0					
ANR	3256115	Identifier	server		3256097	0					
ANR	3256116	Identifier	m_commands_supported		3256097	1					
ANR	3256117	Identifier	contains_anycase		3256097	1					
ANR	3256118	ArgumentList	command		3256097	1					
ANR	3256119	Argument	command		3256097	0					
ANR	3256120	Identifier	command		3256097	0					
ANR	3256121	Identifier	FALSE		3256097	1					
ANR	3256122	CompoundStatement		5:70:169:169	3256097	1					
ANR	3256123	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3114:2:82387:82426	3256097	0	True				
ANR	3256124	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256097	0					
ANR	3256125	ExpressionStatement	ASSERT ( delegation_service_url && * delegation_service_url )	3118:1:82460:82518	3256097	3	True				
ANR	3256126	CallExpression	ASSERT ( delegation_service_url && * delegation_service_url )		3256097	0					
ANR	3256127	Callee	ASSERT		3256097	0					
ANR	3256128	Identifier	ASSERT		3256097	0					
ANR	3256129	ArgumentList	delegation_service_url && * delegation_service_url		3256097	1					
ANR	3256130	Argument	delegation_service_url && * delegation_service_url		3256097	0					
ANR	3256131	AndExpression	delegation_service_url && * delegation_service_url		3256097	0		&&			
ANR	3256132	Identifier	delegation_service_url		3256097	0					
ANR	3256133	UnaryOperationExpression	* delegation_service_url		3256097	1					
ANR	3256134	UnaryOperator	*		3256097	0					
ANR	3256135	Identifier	delegation_service_url		3256097	1					
ANR	3256136	IdentifierDeclStatement	std :: string reqline ;	3119:1:82521:82540	3256097	4	True				
ANR	3256137	IdentifierDecl	reqline		3256097	0					
ANR	3256138	IdentifierDeclType	std :: string		3256097	0					
ANR	3256139	Identifier	reqline		3256097	1					
ANR	3256140	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_service_url ) ) ;"	3120:1:82543:82613	3256097	5	True				
ANR	3256141	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_service_url ) )"		3256097	0					
ANR	3256142	IdentifierDeclType	int		3256097	0					
ANR	3256143	Identifier	x		3256097	1					
ANR	3256144	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_service_url ) )"		3256097	2		=			
ANR	3256145	Identifier	x		3256097	0					
ANR	3256146	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_service_url ) )"		3256097	1					
ANR	3256147	Callee	sprintf		3256097	0					
ANR	3256148	Identifier	sprintf		3256097	0					
ANR	3256149	ArgumentList	reqline		3256097	1					
ANR	3256150	Argument	reqline		3256097	0					
ANR	3256151	Identifier	reqline		3256097	0					
ANR	3256152	Argument	"""%s"""		3256097	1					
ANR	3256153	PrimaryExpression	"""%s"""		3256097	0					
ANR	3256154	Argument	escapeGahpString ( delegation_service_url )		3256097	2					
ANR	3256155	CallExpression	escapeGahpString ( delegation_service_url )		3256097	0					
ANR	3256156	Callee	escapeGahpString		3256097	0					
ANR	3256157	Identifier	escapeGahpString		3256097	0					
ANR	3256158	ArgumentList	delegation_service_url		3256097	1					
ANR	3256159	Argument	delegation_service_url		3256097	0					
ANR	3256160	Identifier	delegation_service_url		3256097	0					
ANR	3256161	ExpressionStatement	ASSERT ( x > 0 )	3121:1:82616:82631	3256097	6	True				
ANR	3256162	CallExpression	ASSERT ( x > 0 )		3256097	0					
ANR	3256163	Callee	ASSERT		3256097	0					
ANR	3256164	Identifier	ASSERT		3256097	0					
ANR	3256165	ArgumentList	x > 0		3256097	1					
ANR	3256166	Argument	x > 0		3256097	0					
ANR	3256167	RelationalExpression	x > 0		3256097	0		>			
ANR	3256168	Identifier	x		3256097	0					
ANR	3256169	PrimaryExpression	0		3256097	1					
ANR	3256170	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3122:1:82634:82667	3256097	7	True				
ANR	3256171	IdentifierDecl	* buf = reqline . c_str ( )		3256097	0					
ANR	3256172	IdentifierDeclType	const char *		3256097	0					
ANR	3256173	Identifier	buf		3256097	1					
ANR	3256174	AssignmentExpression	* buf = reqline . c_str ( )		3256097	2		=			
ANR	3256175	Identifier	buf		3256097	0					
ANR	3256176	CallExpression	reqline . c_str ( )		3256097	1					
ANR	3256177	Callee	reqline . c_str		3256097	0					
ANR	3256178	MemberAccess	reqline . c_str		3256097	0					
ANR	3256179	Identifier	reqline		3256097	0					
ANR	3256180	Identifier	c_str		3256097	1					
ANR	3256181	ArgumentList			3256097	1					
ANR	3256182	IfStatement	"if ( ! is_pending ( command , buf ) )"		3256097	8					
ANR	3256183	Condition	"! is_pending ( command , buf )"	3126:6:82768:82791	3256097	0	True				
ANR	3256184	UnaryOperationExpression	"! is_pending ( command , buf )"		3256097	0					
ANR	3256185	UnaryOperator	!		3256097	0					
ANR	3256186	CallExpression	"is_pending ( command , buf )"		3256097	1					
ANR	3256187	Callee	is_pending		3256097	0					
ANR	3256188	Identifier	is_pending		3256097	0					
ANR	3256189	ArgumentList	command		3256097	1					
ANR	3256190	Argument	command		3256097	0					
ANR	3256191	Identifier	command		3256097	0					
ANR	3256192	Argument	buf		3256097	1					
ANR	3256193	Identifier	buf		3256097	0					
ANR	3256194	CompoundStatement		18:33:581:581	3256097	1					
ANR	3256195	IfStatement	if ( m_mode == results_only )		3256097	0					
ANR	3256196	Condition	m_mode == results_only	3129:7:82900:82921	3256097	0	True				
ANR	3256197	EqualityExpression	m_mode == results_only		3256097	0		==			
ANR	3256198	Identifier	m_mode		3256097	0					
ANR	3256199	Identifier	results_only		3256097	1					
ANR	3256200	CompoundStatement		21:32:711:711	3256097	1					
ANR	3256201	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3130:3:82930:82969	3256097	0	True				
ANR	3256202	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256097	0					
ANR	3256203	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3132:2:82977:83013	3256097	1	True				
ANR	3256204	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3256097	0					
ANR	3256205	Callee	now_pending		3256097	0					
ANR	3256206	Identifier	now_pending		3256097	0					
ANR	3256207	ArgumentList	command		3256097	1					
ANR	3256208	Argument	command		3256097	0					
ANR	3256209	Identifier	command		3256097	0					
ANR	3256210	Argument	buf		3256097	1					
ANR	3256211	Identifier	buf		3256097	0					
ANR	3256212	Argument	deleg_proxy		3256097	2					
ANR	3256213	Identifier	deleg_proxy		3256097	0					
ANR	3256214	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3138:1:83107:83158	3256097	9	True				
ANR	3256215	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3256097	0					
ANR	3256216	IdentifierDeclType	Gahp_Args *		3256097	0					
ANR	3256217	Identifier	result		3256097	1					
ANR	3256218	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3256097	2		=			
ANR	3256219	Identifier	result		3256097	0					
ANR	3256220	CallExpression	"get_pending_result ( command , buf )"		3256097	1					
ANR	3256221	Callee	get_pending_result		3256097	0					
ANR	3256222	Identifier	get_pending_result		3256097	0					
ANR	3256223	ArgumentList	command		3256097	1					
ANR	3256224	Argument	command		3256097	0					
ANR	3256225	Identifier	command		3256097	0					
ANR	3256226	Argument	buf		3256097	1					
ANR	3256227	Identifier	buf		3256097	0					
ANR	3256228	IfStatement	if ( result )		3256097	10					
ANR	3256229	Condition	result	3139:6:83166:83171	3256097	0	True				
ANR	3256230	Identifier	result		3256097	0					
ANR	3256231	CompoundStatement		37:2:1057:1087	3256097	1					
ANR	3256232	IfStatement	if ( result -> argc != 4 )		3256097	0					
ANR	3256233	Condition	result -> argc != 4	3141:6:83207:83223	3256097	0	True				
ANR	3256234	EqualityExpression	result -> argc != 4		3256097	0		!=			
ANR	3256235	PtrMemberAccess	result -> argc		3256097	0					
ANR	3256236	Identifier	result		3256097	0					
ANR	3256237	Identifier	argc		3256097	1					
ANR	3256238	PrimaryExpression	4		3256097	1					
ANR	3256239	CompoundStatement		33:25:1012:1012	3256097	1					
ANR	3256240	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3142:3:83231:83262	3256097	0	True				
ANR	3256241	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3256097	0					
ANR	3256242	Callee	EXCEPT		3256097	0					
ANR	3256243	Identifier	EXCEPT		3256097	0					
ANR	3256244	ArgumentList	"""Bad %s Result"""		3256097	1					
ANR	3256245	Argument	"""Bad %s Result"""		3256097	0					
ANR	3256246	PrimaryExpression	"""Bad %s Result"""		3256097	0					
ANR	3256247	Argument	command		3256097	1					
ANR	3256248	Identifier	command		3256097	0					
ANR	3256249	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	3145:2:83271:83301	3256097	1	True				
ANR	3256250	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3256097	0					
ANR	3256251	IdentifierDeclType	int		3256097	0					
ANR	3256252	Identifier	rc		3256097	1					
ANR	3256253	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3256097	2		=			
ANR	3256254	Identifier	rc		3256097	0					
ANR	3256255	CallExpression	atoi ( result -> argv [ 1 ] )		3256097	1					
ANR	3256256	Callee	atoi		3256097	0					
ANR	3256257	Identifier	atoi		3256097	0					
ANR	3256258	ArgumentList	result -> argv [ 1 ]		3256097	1					
ANR	3256259	Argument	result -> argv [ 1 ]		3256097	0					
ANR	3256260	ArrayIndexing	result -> argv [ 1 ]		3256097	0					
ANR	3256261	PtrMemberAccess	result -> argv		3256097	0					
ANR	3256262	Identifier	result		3256097	0					
ANR	3256263	Identifier	argv		3256097	1					
ANR	3256264	PrimaryExpression	1		3256097	1					
ANR	3256265	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3256097	2					
ANR	3256266	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3147:7:83312:83350	3256097	0	True				
ANR	3256267	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3256097	0					
ANR	3256268	Callee	strcasecmp		3256097	0					
ANR	3256269	Identifier	strcasecmp		3256097	0					
ANR	3256270	ArgumentList	result -> argv [ 2 ]		3256097	1					
ANR	3256271	Argument	result -> argv [ 2 ]		3256097	0					
ANR	3256272	ArrayIndexing	result -> argv [ 2 ]		3256097	0					
ANR	3256273	PtrMemberAccess	result -> argv		3256097	0					
ANR	3256274	Identifier	result		3256097	0					
ANR	3256275	Identifier	argv		3256097	1					
ANR	3256276	PrimaryExpression	2		3256097	1					
ANR	3256277	Argument	NULLSTRING		3256097	1					
ANR	3256278	Identifier	NULLSTRING		3256097	0					
ANR	3256279	CompoundStatement		39:49:1140:1140	3256097	1					
ANR	3256280	ExpressionStatement	* delegation_uri = strdup ( result -> argv [ 2 ] )	3148:3:83359:83400	3256097	0	True				
ANR	3256281	AssignmentExpression	* delegation_uri = strdup ( result -> argv [ 2 ] )		3256097	0		=			
ANR	3256282	UnaryOperationExpression	* delegation_uri		3256097	0					
ANR	3256283	UnaryOperator	*		3256097	0					
ANR	3256284	Identifier	delegation_uri		3256097	1					
ANR	3256285	CallExpression	strdup ( result -> argv [ 2 ] )		3256097	1					
ANR	3256286	Callee	strdup		3256097	0					
ANR	3256287	Identifier	strdup		3256097	0					
ANR	3256288	ArgumentList	result -> argv [ 2 ]		3256097	1					
ANR	3256289	Argument	result -> argv [ 2 ]		3256097	0					
ANR	3256290	ArrayIndexing	result -> argv [ 2 ]		3256097	0					
ANR	3256291	PtrMemberAccess	result -> argv		3256097	0					
ANR	3256292	Identifier	result		3256097	0					
ANR	3256293	Identifier	argv		3256097	1					
ANR	3256294	PrimaryExpression	2		3256097	1					
ANR	3256295	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3256097	3					
ANR	3256296	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	3151:7:83414:83452	3256097	0	True				
ANR	3256297	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3256097	0					
ANR	3256298	Callee	strcasecmp		3256097	0					
ANR	3256299	Identifier	strcasecmp		3256097	0					
ANR	3256300	ArgumentList	result -> argv [ 3 ]		3256097	1					
ANR	3256301	Argument	result -> argv [ 3 ]		3256097	0					
ANR	3256302	ArrayIndexing	result -> argv [ 3 ]		3256097	0					
ANR	3256303	PtrMemberAccess	result -> argv		3256097	0					
ANR	3256304	Identifier	result		3256097	0					
ANR	3256305	Identifier	argv		3256097	1					
ANR	3256306	PrimaryExpression	3		3256097	1					
ANR	3256307	Argument	NULLSTRING		3256097	1					
ANR	3256308	Identifier	NULLSTRING		3256097	0					
ANR	3256309	CompoundStatement		43:49:1242:1242	3256097	1					
ANR	3256310	ExpressionStatement	error_string = result -> argv [ 3 ]	3152:3:83461:83491	3256097	0	True				
ANR	3256311	AssignmentExpression	error_string = result -> argv [ 3 ]		3256097	0		=			
ANR	3256312	Identifier	error_string		3256097	0					
ANR	3256313	ArrayIndexing	result -> argv [ 3 ]		3256097	1					
ANR	3256314	PtrMemberAccess	result -> argv		3256097	0					
ANR	3256315	Identifier	result		3256097	0					
ANR	3256316	Identifier	argv		3256097	1					
ANR	3256317	PrimaryExpression	3		3256097	1					
ANR	3256318	ElseStatement	else		3256097	0					
ANR	3256319	CompoundStatement		45:9:1288:1288	3256097	0					
ANR	3256320	ExpressionStatement	"error_string = """""	3154:3:83507:83524	3256097	0	True				
ANR	3256321	AssignmentExpression	"error_string = """""		3256097	0		=			
ANR	3256322	Identifier	error_string		3256097	0					
ANR	3256323	PrimaryExpression	""""""		3256097	1					
ANR	3256324	Statement	delete	3157:2:83533:83538	3256097	4	True				
ANR	3256325	ExpressionStatement	result	3157:9:83540:83546	3256097	5	True				
ANR	3256326	Identifier	result		3256097	0					
ANR	3256327	ReturnStatement	return rc ;	3158:2:83550:83559	3256097	6	True				
ANR	3256328	Identifier	rc		3256097	0					
ANR	3256329	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3256097	11					
ANR	3256330	Condition	"check_pending_timeout ( command , buf )"	3162:6:83616:83649	3256097	0	True				
ANR	3256331	CallExpression	"check_pending_timeout ( command , buf )"		3256097	0					
ANR	3256332	Callee	check_pending_timeout		3256097	0					
ANR	3256333	Identifier	check_pending_timeout		3256097	0					
ANR	3256334	ArgumentList	command		3256097	1					
ANR	3256335	Argument	command		3256097	0					
ANR	3256336	Identifier	command		3256097	0					
ANR	3256337	Argument	buf		3256097	1					
ANR	3256338	Identifier	buf		3256097	0					
ANR	3256339	CompoundStatement		54:43:1439:1439	3256097	1					
ANR	3256340	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3164:2:83689:83737	3256097	0	True				
ANR	3256341	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3256097	0					
ANR	3256342	Callee	sprintf		3256097	0					
ANR	3256343	Identifier	sprintf		3256097	0					
ANR	3256344	ArgumentList	error_string		3256097	1					
ANR	3256345	Argument	error_string		3256097	0					
ANR	3256346	Identifier	error_string		3256097	0					
ANR	3256347	Argument	"""%s timed out"""		3256097	1					
ANR	3256348	PrimaryExpression	"""%s timed out"""		3256097	0					
ANR	3256349	Argument	command		3256097	2					
ANR	3256350	Identifier	command		3256097	0					
ANR	3256351	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3165:2:83741:83776	3256097	1	True				
ANR	3256352	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3256097	0					
ANR	3256353	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3169:1:83836:83869	3256097	12	True				
ANR	3256354	Identifier	GAHPCLIENT_COMMAND_PENDING		3256097	0					
ANR	3256355	ReturnType	int		3256097	1					
ANR	3256356	Identifier	GahpClient :: gt4_gram_client_delegate_credentials		3256097	2					
ANR	3256357	ParameterList	"const char * delegation_service_url , char * * delegation_uri"		3256097	3					
ANR	3256358	Parameter	const char * delegation_service_url	3108:49:82153:82186	3256097	0	True				
ANR	3256359	ParameterType	const char *		3256097	0					
ANR	3256360	Identifier	delegation_service_url		3256097	1					
ANR	3256361	Parameter	char * * delegation_uri	3108:85:82189:82210	3256097	1	True				
ANR	3256362	ParameterType	char * *		3256097	0					
ANR	3256363	Identifier	delegation_uri		3256097	1					
ANR	3256364	CFGEntryNode	ENTRY		3256097		True				
ANR	3256365	CFGExitNode	EXIT		3256097		True				
ANR	3256366	Symbol	server -> m_commands_supported		3256097						
ANR	3256367	Symbol	server		3256097						
ANR	3256368	Symbol	escapeGahpString		3256097						
ANR	3256369	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256097						
ANR	3256370	Symbol	delegation_uri		3256097						
ANR	3256371	Symbol	* server		3256097						
ANR	3256372	Symbol	reqline . c_str		3256097						
ANR	3256373	Symbol	results_only		3256097						
ANR	3256374	Symbol	result -> argv		3256097						
ANR	3256375	Symbol	* server -> m_commands_supported		3256097						
ANR	3256376	Symbol	sprintf		3256097						
ANR	3256377	Symbol	result		3256097						
ANR	3256378	Symbol	* result		3256097						
ANR	3256379	Symbol	server -> m_commands_supported -> contains_anycase		3256097						
ANR	3256380	Symbol	GAHPCLIENT_COMMAND_PENDING		3256097						
ANR	3256381	Symbol	reqline		3256097						
ANR	3256382	Symbol	m_mode		3256097						
ANR	3256383	Symbol	strcasecmp		3256097						
ANR	3256384	Symbol	* result -> argv		3256097						
ANR	3256385	Symbol	atoi		3256097						
ANR	3256386	Symbol	* delegation_service_url		3256097						
ANR	3256387	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3256097						
ANR	3256388	Symbol	* * result		3256097						
ANR	3256389	Symbol	NULLSTRING		3256097						
ANR	3256390	Symbol	command		3256097						
ANR	3256391	Symbol	get_pending_result		3256097						
ANR	3256392	Symbol	rc		3256097						
ANR	3256393	Symbol	error_string		3256097						
ANR	3256394	Symbol	buf		3256097						
ANR	3256395	Symbol	x		3256097						
ANR	3256396	Symbol	result -> argc		3256097						
ANR	3256397	Symbol	* delegation_uri		3256097						
ANR	3256398	Symbol	FALSE		3256097						
ANR	3256399	Symbol	* * server		3256097						
ANR	3256400	Symbol	strdup		3256097						
ANR	3256401	Symbol	delegation_service_url		3256097						
ANR	3256402	Symbol	check_pending_timeout		3256097						
ANR	3256403	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256097						
ANR	3256404	Symbol	is_pending		3256097						
ANR	3256405	Symbol	deleg_proxy		3256097						
ANR	3256406	Function	GahpClient :: gt4_gram_client_refresh_credentials	3174:0:83877:85484							
ANR	3256407	FunctionDef	GahpClient :: gt4_gram_client_refresh_credentials (const char * delegation_uri)		3256406	0					
ANR	3256408	CompoundStatement		3176:0:83957:85484	3256406	0					
ANR	3256409	Statement	static	3177:1:83960:83965	3256406	0	True				
ANR	3256410	IdentifierDeclStatement	"const char * command = ""GT4_REFRESH_CREDENTIAL"" ;"	3177:8:83967:84013	3256406	1	True				
ANR	3256411	IdentifierDecl	"* command = ""GT4_REFRESH_CREDENTIAL"""		3256406	0					
ANR	3256412	IdentifierDeclType	const char *		3256406	0					
ANR	3256413	Identifier	command		3256406	1					
ANR	3256414	AssignmentExpression	"* command = ""GT4_REFRESH_CREDENTIAL"""		3256406	2		=			
ANR	3256415	Identifier	command		3256406	0					
ANR	3256416	PrimaryExpression	"""GT4_REFRESH_CREDENTIAL"""		3256406	1					
ANR	3256417	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3256406	2					
ANR	3256418	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3180:6:84062:84123	3256406	0	True				
ANR	3256419	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3256406	0		==			
ANR	3256420	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3256406	0					
ANR	3256421	Callee	server -> m_commands_supported -> contains_anycase		3256406	0					
ANR	3256422	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3256406	0					
ANR	3256423	PtrMemberAccess	server -> m_commands_supported		3256406	0					
ANR	3256424	Identifier	server		3256406	0					
ANR	3256425	Identifier	m_commands_supported		3256406	1					
ANR	3256426	Identifier	contains_anycase		3256406	1					
ANR	3256427	ArgumentList	command		3256406	1					
ANR	3256428	Argument	command		3256406	0					
ANR	3256429	Identifier	command		3256406	0					
ANR	3256430	Identifier	FALSE		3256406	1					
ANR	3256431	CompoundStatement		5:70:168:168	3256406	1					
ANR	3256432	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3181:2:84130:84169	3256406	0	True				
ANR	3256433	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256406	0					
ANR	3256434	ExpressionStatement	ASSERT ( delegation_uri && * delegation_uri )	3185:1:84203:84245	3256406	3	True				
ANR	3256435	CallExpression	ASSERT ( delegation_uri && * delegation_uri )		3256406	0					
ANR	3256436	Callee	ASSERT		3256406	0					
ANR	3256437	Identifier	ASSERT		3256406	0					
ANR	3256438	ArgumentList	delegation_uri && * delegation_uri		3256406	1					
ANR	3256439	Argument	delegation_uri && * delegation_uri		3256406	0					
ANR	3256440	AndExpression	delegation_uri && * delegation_uri		3256406	0		&&			
ANR	3256441	Identifier	delegation_uri		3256406	0					
ANR	3256442	UnaryOperationExpression	* delegation_uri		3256406	1					
ANR	3256443	UnaryOperator	*		3256406	0					
ANR	3256444	Identifier	delegation_uri		3256406	1					
ANR	3256445	IdentifierDeclStatement	std :: string reqline ;	3186:1:84248:84267	3256406	4	True				
ANR	3256446	IdentifierDecl	reqline		3256406	0					
ANR	3256447	IdentifierDeclType	std :: string		3256406	0					
ANR	3256448	Identifier	reqline		3256406	1					
ANR	3256449	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_uri ) ) ;"	3187:1:84270:84332	3256406	5	True				
ANR	3256450	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_uri ) )"		3256406	0					
ANR	3256451	IdentifierDeclType	int		3256406	0					
ANR	3256452	Identifier	x		3256406	1					
ANR	3256453	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_uri ) )"		3256406	2		=			
ANR	3256454	Identifier	x		3256406	0					
ANR	3256455	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( delegation_uri ) )"		3256406	1					
ANR	3256456	Callee	sprintf		3256406	0					
ANR	3256457	Identifier	sprintf		3256406	0					
ANR	3256458	ArgumentList	reqline		3256406	1					
ANR	3256459	Argument	reqline		3256406	0					
ANR	3256460	Identifier	reqline		3256406	0					
ANR	3256461	Argument	"""%s"""		3256406	1					
ANR	3256462	PrimaryExpression	"""%s"""		3256406	0					
ANR	3256463	Argument	escapeGahpString ( delegation_uri )		3256406	2					
ANR	3256464	CallExpression	escapeGahpString ( delegation_uri )		3256406	0					
ANR	3256465	Callee	escapeGahpString		3256406	0					
ANR	3256466	Identifier	escapeGahpString		3256406	0					
ANR	3256467	ArgumentList	delegation_uri		3256406	1					
ANR	3256468	Argument	delegation_uri		3256406	0					
ANR	3256469	Identifier	delegation_uri		3256406	0					
ANR	3256470	ExpressionStatement	ASSERT ( x > 0 )	3188:1:84335:84350	3256406	6	True				
ANR	3256471	CallExpression	ASSERT ( x > 0 )		3256406	0					
ANR	3256472	Callee	ASSERT		3256406	0					
ANR	3256473	Identifier	ASSERT		3256406	0					
ANR	3256474	ArgumentList	x > 0		3256406	1					
ANR	3256475	Argument	x > 0		3256406	0					
ANR	3256476	RelationalExpression	x > 0		3256406	0		>			
ANR	3256477	Identifier	x		3256406	0					
ANR	3256478	PrimaryExpression	0		3256406	1					
ANR	3256479	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3189:1:84353:84386	3256406	7	True				
ANR	3256480	IdentifierDecl	* buf = reqline . c_str ( )		3256406	0					
ANR	3256481	IdentifierDeclType	const char *		3256406	0					
ANR	3256482	Identifier	buf		3256406	1					
ANR	3256483	AssignmentExpression	* buf = reqline . c_str ( )		3256406	2		=			
ANR	3256484	Identifier	buf		3256406	0					
ANR	3256485	CallExpression	reqline . c_str ( )		3256406	1					
ANR	3256486	Callee	reqline . c_str		3256406	0					
ANR	3256487	MemberAccess	reqline . c_str		3256406	0					
ANR	3256488	Identifier	reqline		3256406	0					
ANR	3256489	Identifier	c_str		3256406	1					
ANR	3256490	ArgumentList			3256406	1					
ANR	3256491	IfStatement	"if ( ! is_pending ( command , buf ) )"		3256406	8					
ANR	3256492	Condition	"! is_pending ( command , buf )"	3193:6:84487:84510	3256406	0	True				
ANR	3256493	UnaryOperationExpression	"! is_pending ( command , buf )"		3256406	0					
ANR	3256494	UnaryOperator	!		3256406	0					
ANR	3256495	CallExpression	"is_pending ( command , buf )"		3256406	1					
ANR	3256496	Callee	is_pending		3256406	0					
ANR	3256497	Identifier	is_pending		3256406	0					
ANR	3256498	ArgumentList	command		3256406	1					
ANR	3256499	Argument	command		3256406	0					
ANR	3256500	Identifier	command		3256406	0					
ANR	3256501	Argument	buf		3256406	1					
ANR	3256502	Identifier	buf		3256406	0					
ANR	3256503	CompoundStatement		18:33:556:556	3256406	1					
ANR	3256504	IfStatement	if ( m_mode == results_only )		3256406	0					
ANR	3256505	Condition	m_mode == results_only	3196:7:84619:84640	3256406	0	True				
ANR	3256506	EqualityExpression	m_mode == results_only		3256406	0		==			
ANR	3256507	Identifier	m_mode		3256406	0					
ANR	3256508	Identifier	results_only		3256406	1					
ANR	3256509	CompoundStatement		21:32:686:686	3256406	1					
ANR	3256510	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3197:3:84649:84688	3256406	0	True				
ANR	3256511	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256406	0					
ANR	3256512	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3199:2:84696:84732	3256406	1	True				
ANR	3256513	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3256406	0					
ANR	3256514	Callee	now_pending		3256406	0					
ANR	3256515	Identifier	now_pending		3256406	0					
ANR	3256516	ArgumentList	command		3256406	1					
ANR	3256517	Argument	command		3256406	0					
ANR	3256518	Identifier	command		3256406	0					
ANR	3256519	Argument	buf		3256406	1					
ANR	3256520	Identifier	buf		3256406	0					
ANR	3256521	Argument	deleg_proxy		3256406	2					
ANR	3256522	Identifier	deleg_proxy		3256406	0					
ANR	3256523	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3205:1:84826:84877	3256406	9	True				
ANR	3256524	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3256406	0					
ANR	3256525	IdentifierDeclType	Gahp_Args *		3256406	0					
ANR	3256526	Identifier	result		3256406	1					
ANR	3256527	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3256406	2		=			
ANR	3256528	Identifier	result		3256406	0					
ANR	3256529	CallExpression	"get_pending_result ( command , buf )"		3256406	1					
ANR	3256530	Callee	get_pending_result		3256406	0					
ANR	3256531	Identifier	get_pending_result		3256406	0					
ANR	3256532	ArgumentList	command		3256406	1					
ANR	3256533	Argument	command		3256406	0					
ANR	3256534	Identifier	command		3256406	0					
ANR	3256535	Argument	buf		3256406	1					
ANR	3256536	Identifier	buf		3256406	0					
ANR	3256537	IfStatement	if ( result )		3256406	10					
ANR	3256538	Condition	result	3206:6:84885:84890	3256406	0	True				
ANR	3256539	Identifier	result		3256406	0					
ANR	3256540	CompoundStatement		36:2:1031:1061	3256406	1					
ANR	3256541	IfStatement	if ( result -> argc != 3 )		3256406	0					
ANR	3256542	Condition	result -> argc != 3	3208:6:84926:84942	3256406	0	True				
ANR	3256543	EqualityExpression	result -> argc != 3		3256406	0		!=			
ANR	3256544	PtrMemberAccess	result -> argc		3256406	0					
ANR	3256545	Identifier	result		3256406	0					
ANR	3256546	Identifier	argc		3256406	1					
ANR	3256547	PrimaryExpression	3		3256406	1					
ANR	3256548	CompoundStatement		33:25:987:987	3256406	1					
ANR	3256549	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3209:3:84950:84981	3256406	0	True				
ANR	3256550	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3256406	0					
ANR	3256551	Callee	EXCEPT		3256406	0					
ANR	3256552	Identifier	EXCEPT		3256406	0					
ANR	3256553	ArgumentList	"""Bad %s Result"""		3256406	1					
ANR	3256554	Argument	"""Bad %s Result"""		3256406	0					
ANR	3256555	PrimaryExpression	"""Bad %s Result"""		3256406	0					
ANR	3256556	Argument	command		3256406	1					
ANR	3256557	Identifier	command		3256406	0					
ANR	3256558	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	3211:2:84989:85019	3256406	1	True				
ANR	3256559	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3256406	0					
ANR	3256560	IdentifierDeclType	int		3256406	0					
ANR	3256561	Identifier	rc		3256406	1					
ANR	3256562	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3256406	2		=			
ANR	3256563	Identifier	rc		3256406	0					
ANR	3256564	CallExpression	atoi ( result -> argv [ 1 ] )		3256406	1					
ANR	3256565	Callee	atoi		3256406	0					
ANR	3256566	Identifier	atoi		3256406	0					
ANR	3256567	ArgumentList	result -> argv [ 1 ]		3256406	1					
ANR	3256568	Argument	result -> argv [ 1 ]		3256406	0					
ANR	3256569	ArrayIndexing	result -> argv [ 1 ]		3256406	0					
ANR	3256570	PtrMemberAccess	result -> argv		3256406	0					
ANR	3256571	Identifier	result		3256406	0					
ANR	3256572	Identifier	argv		3256406	1					
ANR	3256573	PrimaryExpression	1		3256406	1					
ANR	3256574	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3256406	2					
ANR	3256575	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3212:7:85028:85066	3256406	0	True				
ANR	3256576	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3256406	0					
ANR	3256577	Callee	strcasecmp		3256406	0					
ANR	3256578	Identifier	strcasecmp		3256406	0					
ANR	3256579	ArgumentList	result -> argv [ 2 ]		3256406	1					
ANR	3256580	Argument	result -> argv [ 2 ]		3256406	0					
ANR	3256581	ArrayIndexing	result -> argv [ 2 ]		3256406	0					
ANR	3256582	PtrMemberAccess	result -> argv		3256406	0					
ANR	3256583	Identifier	result		3256406	0					
ANR	3256584	Identifier	argv		3256406	1					
ANR	3256585	PrimaryExpression	2		3256406	1					
ANR	3256586	Argument	NULLSTRING		3256406	1					
ANR	3256587	Identifier	NULLSTRING		3256406	0					
ANR	3256588	CompoundStatement		37:49:1112:1112	3256406	1					
ANR	3256589	ExpressionStatement	error_string = result -> argv [ 2 ]	3213:3:85075:85105	3256406	0	True				
ANR	3256590	AssignmentExpression	error_string = result -> argv [ 2 ]		3256406	0		=			
ANR	3256591	Identifier	error_string		3256406	0					
ANR	3256592	ArrayIndexing	result -> argv [ 2 ]		3256406	1					
ANR	3256593	PtrMemberAccess	result -> argv		3256406	0					
ANR	3256594	Identifier	result		3256406	0					
ANR	3256595	Identifier	argv		3256406	1					
ANR	3256596	PrimaryExpression	2		3256406	1					
ANR	3256597	ElseStatement	else		3256406	0					
ANR	3256598	CompoundStatement		39:9:1158:1158	3256406	0					
ANR	3256599	ExpressionStatement	"error_string = """""	3215:3:85121:85138	3256406	0	True				
ANR	3256600	AssignmentExpression	"error_string = """""		3256406	0		=			
ANR	3256601	Identifier	error_string		3256406	0					
ANR	3256602	PrimaryExpression	""""""		3256406	1					
ANR	3256603	Statement	delete	3217:2:85146:85151	3256406	3	True				
ANR	3256604	ExpressionStatement	result	3217:9:85153:85159	3256406	4	True				
ANR	3256605	Identifier	result		3256406	0					
ANR	3256606	ReturnStatement	return rc ;	3218:2:85163:85172	3256406	5	True				
ANR	3256607	Identifier	rc		3256406	0					
ANR	3256608	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3256406	11					
ANR	3256609	Condition	"check_pending_timeout ( command , buf )"	3222:6:85229:85262	3256406	0	True				
ANR	3256610	CallExpression	"check_pending_timeout ( command , buf )"		3256406	0					
ANR	3256611	Callee	check_pending_timeout		3256406	0					
ANR	3256612	Identifier	check_pending_timeout		3256406	0					
ANR	3256613	ArgumentList	command		3256406	1					
ANR	3256614	Argument	command		3256406	0					
ANR	3256615	Identifier	command		3256406	0					
ANR	3256616	Argument	buf		3256406	1					
ANR	3256617	Identifier	buf		3256406	0					
ANR	3256618	CompoundStatement		47:43:1308:1308	3256406	1					
ANR	3256619	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3224:2:85302:85350	3256406	0	True				
ANR	3256620	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3256406	0					
ANR	3256621	Callee	sprintf		3256406	0					
ANR	3256622	Identifier	sprintf		3256406	0					
ANR	3256623	ArgumentList	error_string		3256406	1					
ANR	3256624	Argument	error_string		3256406	0					
ANR	3256625	Identifier	error_string		3256406	0					
ANR	3256626	Argument	"""%s timed out"""		3256406	1					
ANR	3256627	PrimaryExpression	"""%s timed out"""		3256406	0					
ANR	3256628	Argument	command		3256406	2					
ANR	3256629	Identifier	command		3256406	0					
ANR	3256630	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3225:2:85354:85389	3256406	1	True				
ANR	3256631	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3256406	0					
ANR	3256632	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3229:1:85449:85482	3256406	12	True				
ANR	3256633	Identifier	GAHPCLIENT_COMMAND_PENDING		3256406	0					
ANR	3256634	ReturnType	int		3256406	1					
ANR	3256635	Identifier	GahpClient :: gt4_gram_client_refresh_credentials		3256406	2					
ANR	3256636	ParameterList	const char * delegation_uri		3256406	3					
ANR	3256637	Parameter	const char * delegation_uri	3175:48:83929:83954	3256406	0	True				
ANR	3256638	ParameterType	const char *		3256406	0					
ANR	3256639	Identifier	delegation_uri		3256406	1					
ANR	3256640	CFGEntryNode	ENTRY		3256406		True				
ANR	3256641	CFGExitNode	EXIT		3256406		True				
ANR	3256642	Symbol	server -> m_commands_supported		3256406						
ANR	3256643	Symbol	server		3256406						
ANR	3256644	Symbol	escapeGahpString		3256406						
ANR	3256645	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256406						
ANR	3256646	Symbol	delegation_uri		3256406						
ANR	3256647	Symbol	* server		3256406						
ANR	3256648	Symbol	reqline . c_str		3256406						
ANR	3256649	Symbol	results_only		3256406						
ANR	3256650	Symbol	result -> argv		3256406						
ANR	3256651	Symbol	* server -> m_commands_supported		3256406						
ANR	3256652	Symbol	sprintf		3256406						
ANR	3256653	Symbol	result		3256406						
ANR	3256654	Symbol	* result		3256406						
ANR	3256655	Symbol	server -> m_commands_supported -> contains_anycase		3256406						
ANR	3256656	Symbol	GAHPCLIENT_COMMAND_PENDING		3256406						
ANR	3256657	Symbol	reqline		3256406						
ANR	3256658	Symbol	m_mode		3256406						
ANR	3256659	Symbol	strcasecmp		3256406						
ANR	3256660	Symbol	* result -> argv		3256406						
ANR	3256661	Symbol	atoi		3256406						
ANR	3256662	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3256406						
ANR	3256663	Symbol	* * result		3256406						
ANR	3256664	Symbol	NULLSTRING		3256406						
ANR	3256665	Symbol	command		3256406						
ANR	3256666	Symbol	get_pending_result		3256406						
ANR	3256667	Symbol	rc		3256406						
ANR	3256668	Symbol	error_string		3256406						
ANR	3256669	Symbol	buf		3256406						
ANR	3256670	Symbol	x		3256406						
ANR	3256671	Symbol	result -> argc		3256406						
ANR	3256672	Symbol	* delegation_uri		3256406						
ANR	3256673	Symbol	* * server		3256406						
ANR	3256674	Symbol	FALSE		3256406						
ANR	3256675	Symbol	check_pending_timeout		3256406						
ANR	3256676	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256406						
ANR	3256677	Symbol	is_pending		3256406						
ANR	3256678	Symbol	deleg_proxy		3256406						
ANR	3256679	Function	GahpClient :: gt4_set_termination_time	3232:0:85487:87205							
ANR	3256680	FunctionDef	"GahpClient :: gt4_set_termination_time (const char * resource_uri , time_t & new_termination_time)"		3256679	0					
ANR	3256681	CompoundStatement		3235:0:85595:87205	3256679	0					
ANR	3256682	Statement	static	3236:1:85598:85603	3256679	0	True				
ANR	3256683	IdentifierDeclStatement	"const char * command = ""GT4_SET_TERMINATION_TIME"" ;"	3236:8:85605:85653	3256679	1	True				
ANR	3256684	IdentifierDecl	"* command = ""GT4_SET_TERMINATION_TIME"""		3256679	0					
ANR	3256685	IdentifierDeclType	const char *		3256679	0					
ANR	3256686	Identifier	command		3256679	1					
ANR	3256687	AssignmentExpression	"* command = ""GT4_SET_TERMINATION_TIME"""		3256679	2		=			
ANR	3256688	Identifier	command		3256679	0					
ANR	3256689	PrimaryExpression	"""GT4_SET_TERMINATION_TIME"""		3256679	1					
ANR	3256690	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3256679	2					
ANR	3256691	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3239:6:85702:85763	3256679	0	True				
ANR	3256692	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3256679	0		==			
ANR	3256693	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3256679	0					
ANR	3256694	Callee	server -> m_commands_supported -> contains_anycase		3256679	0					
ANR	3256695	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3256679	0					
ANR	3256696	PtrMemberAccess	server -> m_commands_supported		3256679	0					
ANR	3256697	Identifier	server		3256679	0					
ANR	3256698	Identifier	m_commands_supported		3256679	1					
ANR	3256699	Identifier	contains_anycase		3256679	1					
ANR	3256700	ArgumentList	command		3256679	1					
ANR	3256701	Argument	command		3256679	0					
ANR	3256702	Identifier	command		3256679	0					
ANR	3256703	Identifier	FALSE		3256679	1					
ANR	3256704	CompoundStatement		5:70:170:170	3256679	1					
ANR	3256705	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3240:2:85770:85809	3256679	0	True				
ANR	3256706	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256679	0					
ANR	3256707	IfStatement	if ( ! resource_uri )		3256679	3					
ANR	3256708	Condition	! resource_uri	3244:5:85847:85859	3256679	0	True				
ANR	3256709	UnaryOperationExpression	! resource_uri		3256679	0					
ANR	3256710	UnaryOperator	!		3256679	0					
ANR	3256711	Identifier	resource_uri		3256679	1					
ANR	3256712	ExpressionStatement	resource_uri = NULLSTRING	3244:20:85862:85885	3256679	1	True				
ANR	3256713	AssignmentExpression	resource_uri = NULLSTRING		3256679	0		=			
ANR	3256714	Identifier	resource_uri		3256679	0					
ANR	3256715	Identifier	NULLSTRING		3256679	1					
ANR	3256716	IdentifierDeclStatement	std :: string reqline ;	3245:1:85888:85907	3256679	4	True				
ANR	3256717	IdentifierDecl	reqline		3256679	0					
ANR	3256718	IdentifierDeclType	std :: string		3256679	0					
ANR	3256719	Identifier	reqline		3256679	1					
ANR	3256720	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %ld"" , escapeGahpString ( resource_uri ) , new_termination_time ) ;"	3246:1:85910:86004	3256679	5	True				
ANR	3256721	IdentifierDecl	"x = sprintf ( reqline , ""%s %ld"" , escapeGahpString ( resource_uri ) , new_termination_time )"		3256679	0					
ANR	3256722	IdentifierDeclType	int		3256679	0					
ANR	3256723	Identifier	x		3256679	1					
ANR	3256724	AssignmentExpression	"x = sprintf ( reqline , ""%s %ld"" , escapeGahpString ( resource_uri ) , new_termination_time )"		3256679	2		=			
ANR	3256725	Identifier	x		3256679	0					
ANR	3256726	CallExpression	"sprintf ( reqline , ""%s %ld"" , escapeGahpString ( resource_uri ) , new_termination_time )"		3256679	1					
ANR	3256727	Callee	sprintf		3256679	0					
ANR	3256728	Identifier	sprintf		3256679	0					
ANR	3256729	ArgumentList	reqline		3256679	1					
ANR	3256730	Argument	reqline		3256679	0					
ANR	3256731	Identifier	reqline		3256679	0					
ANR	3256732	Argument	"""%s %ld"""		3256679	1					
ANR	3256733	PrimaryExpression	"""%s %ld"""		3256679	0					
ANR	3256734	Argument	escapeGahpString ( resource_uri )		3256679	2					
ANR	3256735	CallExpression	escapeGahpString ( resource_uri )		3256679	0					
ANR	3256736	Callee	escapeGahpString		3256679	0					
ANR	3256737	Identifier	escapeGahpString		3256679	0					
ANR	3256738	ArgumentList	resource_uri		3256679	1					
ANR	3256739	Argument	resource_uri		3256679	0					
ANR	3256740	Identifier	resource_uri		3256679	0					
ANR	3256741	Argument	new_termination_time		3256679	3					
ANR	3256742	Identifier	new_termination_time		3256679	0					
ANR	3256743	ExpressionStatement	ASSERT ( x > 0 )	3248:1:86007:86022	3256679	6	True				
ANR	3256744	CallExpression	ASSERT ( x > 0 )		3256679	0					
ANR	3256745	Callee	ASSERT		3256679	0					
ANR	3256746	Identifier	ASSERT		3256679	0					
ANR	3256747	ArgumentList	x > 0		3256679	1					
ANR	3256748	Argument	x > 0		3256679	0					
ANR	3256749	RelationalExpression	x > 0		3256679	0		>			
ANR	3256750	Identifier	x		3256679	0					
ANR	3256751	PrimaryExpression	0		3256679	1					
ANR	3256752	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3249:1:86025:86058	3256679	7	True				
ANR	3256753	IdentifierDecl	* buf = reqline . c_str ( )		3256679	0					
ANR	3256754	IdentifierDeclType	const char *		3256679	0					
ANR	3256755	Identifier	buf		3256679	1					
ANR	3256756	AssignmentExpression	* buf = reqline . c_str ( )		3256679	2		=			
ANR	3256757	Identifier	buf		3256679	0					
ANR	3256758	CallExpression	reqline . c_str ( )		3256679	1					
ANR	3256759	Callee	reqline . c_str		3256679	0					
ANR	3256760	MemberAccess	reqline . c_str		3256679	0					
ANR	3256761	Identifier	reqline		3256679	0					
ANR	3256762	Identifier	c_str		3256679	1					
ANR	3256763	ArgumentList			3256679	1					
ANR	3256764	IfStatement	"if ( ! is_pending ( command , buf ) )"		3256679	8					
ANR	3256765	Condition	"! is_pending ( command , buf )"	3253:6:86159:86182	3256679	0	True				
ANR	3256766	UnaryOperationExpression	"! is_pending ( command , buf )"		3256679	0					
ANR	3256767	UnaryOperator	!		3256679	0					
ANR	3256768	CallExpression	"is_pending ( command , buf )"		3256679	1					
ANR	3256769	Callee	is_pending		3256679	0					
ANR	3256770	Identifier	is_pending		3256679	0					
ANR	3256771	ArgumentList	command		3256679	1					
ANR	3256772	Argument	command		3256679	0					
ANR	3256773	Identifier	command		3256679	0					
ANR	3256774	Argument	buf		3256679	1					
ANR	3256775	Identifier	buf		3256679	0					
ANR	3256776	CompoundStatement		19:33:590:590	3256679	1					
ANR	3256777	IfStatement	if ( m_mode == results_only )		3256679	0					
ANR	3256778	Condition	m_mode == results_only	3256:7:86291:86312	3256679	0	True				
ANR	3256779	EqualityExpression	m_mode == results_only		3256679	0		==			
ANR	3256780	Identifier	m_mode		3256679	0					
ANR	3256781	Identifier	results_only		3256679	1					
ANR	3256782	CompoundStatement		22:32:720:720	3256679	1					
ANR	3256783	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3257:3:86321:86360	3256679	0	True				
ANR	3256784	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256679	0					
ANR	3256785	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	3259:2:86368:86405	3256679	1	True				
ANR	3256786	CallExpression	"now_pending ( command , buf , normal_proxy )"		3256679	0					
ANR	3256787	Callee	now_pending		3256679	0					
ANR	3256788	Identifier	now_pending		3256679	0					
ANR	3256789	ArgumentList	command		3256679	1					
ANR	3256790	Argument	command		3256679	0					
ANR	3256791	Identifier	command		3256679	0					
ANR	3256792	Argument	buf		3256679	1					
ANR	3256793	Identifier	buf		3256679	0					
ANR	3256794	Argument	normal_proxy		3256679	2					
ANR	3256795	Identifier	normal_proxy		3256679	0					
ANR	3256796	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3265:1:86499:86550	3256679	9	True				
ANR	3256797	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3256679	0					
ANR	3256798	IdentifierDeclType	Gahp_Args *		3256679	0					
ANR	3256799	Identifier	result		3256679	1					
ANR	3256800	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3256679	2		=			
ANR	3256801	Identifier	result		3256679	0					
ANR	3256802	CallExpression	"get_pending_result ( command , buf )"		3256679	1					
ANR	3256803	Callee	get_pending_result		3256679	0					
ANR	3256804	Identifier	get_pending_result		3256679	0					
ANR	3256805	ArgumentList	command		3256679	1					
ANR	3256806	Argument	command		3256679	0					
ANR	3256807	Identifier	command		3256679	0					
ANR	3256808	Argument	buf		3256679	1					
ANR	3256809	Identifier	buf		3256679	0					
ANR	3256810	IfStatement	if ( result )		3256679	10					
ANR	3256811	Condition	result	3266:6:86558:86563	3256679	0	True				
ANR	3256812	Identifier	result		3256679	0					
ANR	3256813	CompoundStatement		37:2:1066:1096	3256679	1					
ANR	3256814	IfStatement	if ( result -> argc != 4 )		3256679	0					
ANR	3256815	Condition	result -> argc != 4	3268:6:86599:86615	3256679	0	True				
ANR	3256816	EqualityExpression	result -> argc != 4		3256679	0		!=			
ANR	3256817	PtrMemberAccess	result -> argc		3256679	0					
ANR	3256818	Identifier	result		3256679	0					
ANR	3256819	Identifier	argc		3256679	1					
ANR	3256820	PrimaryExpression	4		3256679	1					
ANR	3256821	CompoundStatement		34:25:1022:1022	3256679	1					
ANR	3256822	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3269:3:86623:86654	3256679	0	True				
ANR	3256823	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3256679	0					
ANR	3256824	Callee	EXCEPT		3256679	0					
ANR	3256825	Identifier	EXCEPT		3256679	0					
ANR	3256826	ArgumentList	"""Bad %s Result"""		3256679	1					
ANR	3256827	Argument	"""Bad %s Result"""		3256679	0					
ANR	3256828	PrimaryExpression	"""Bad %s Result"""		3256679	0					
ANR	3256829	Argument	command		3256679	1					
ANR	3256830	Identifier	command		3256679	0					
ANR	3256831	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	3271:2:86662:86692	3256679	1	True				
ANR	3256832	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3256679	0					
ANR	3256833	IdentifierDeclType	int		3256679	0					
ANR	3256834	Identifier	rc		3256679	1					
ANR	3256835	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3256679	2		=			
ANR	3256836	Identifier	rc		3256679	0					
ANR	3256837	CallExpression	atoi ( result -> argv [ 1 ] )		3256679	1					
ANR	3256838	Callee	atoi		3256679	0					
ANR	3256839	Identifier	atoi		3256679	0					
ANR	3256840	ArgumentList	result -> argv [ 1 ]		3256679	1					
ANR	3256841	Argument	result -> argv [ 1 ]		3256679	0					
ANR	3256842	ArrayIndexing	result -> argv [ 1 ]		3256679	0					
ANR	3256843	PtrMemberAccess	result -> argv		3256679	0					
ANR	3256844	Identifier	result		3256679	0					
ANR	3256845	Identifier	argv		3256679	1					
ANR	3256846	PrimaryExpression	1		3256679	1					
ANR	3256847	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3256679	2					
ANR	3256848	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	3272:7:86701:86739	3256679	0	True				
ANR	3256849	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3256679	0					
ANR	3256850	Callee	strcasecmp		3256679	0					
ANR	3256851	Identifier	strcasecmp		3256679	0					
ANR	3256852	ArgumentList	result -> argv [ 3 ]		3256679	1					
ANR	3256853	Argument	result -> argv [ 3 ]		3256679	0					
ANR	3256854	ArrayIndexing	result -> argv [ 3 ]		3256679	0					
ANR	3256855	PtrMemberAccess	result -> argv		3256679	0					
ANR	3256856	Identifier	result		3256679	0					
ANR	3256857	Identifier	argv		3256679	1					
ANR	3256858	PrimaryExpression	3		3256679	1					
ANR	3256859	Argument	NULLSTRING		3256679	1					
ANR	3256860	Identifier	NULLSTRING		3256679	0					
ANR	3256861	CompoundStatement		38:49:1147:1147	3256679	1					
ANR	3256862	ExpressionStatement	error_string = result -> argv [ 3 ]	3273:3:86748:86778	3256679	0	True				
ANR	3256863	AssignmentExpression	error_string = result -> argv [ 3 ]		3256679	0		=			
ANR	3256864	Identifier	error_string		3256679	0					
ANR	3256865	ArrayIndexing	result -> argv [ 3 ]		3256679	1					
ANR	3256866	PtrMemberAccess	result -> argv		3256679	0					
ANR	3256867	Identifier	result		3256679	0					
ANR	3256868	Identifier	argv		3256679	1					
ANR	3256869	PrimaryExpression	3		3256679	1					
ANR	3256870	ElseStatement	else		3256679	0					
ANR	3256871	CompoundStatement		40:9:1193:1193	3256679	0					
ANR	3256872	ExpressionStatement	"error_string = """""	3275:3:86794:86811	3256679	0	True				
ANR	3256873	AssignmentExpression	"error_string = """""		3256679	0		=			
ANR	3256874	Identifier	error_string		3256679	0					
ANR	3256875	PrimaryExpression	""""""		3256679	1					
ANR	3256876	ExpressionStatement	new_termination_time = atoi ( result -> argv [ 2 ] )	3277:2:86819:86863	3256679	3	True				
ANR	3256877	AssignmentExpression	new_termination_time = atoi ( result -> argv [ 2 ] )		3256679	0		=			
ANR	3256878	Identifier	new_termination_time		3256679	0					
ANR	3256879	CallExpression	atoi ( result -> argv [ 2 ] )		3256679	1					
ANR	3256880	Callee	atoi		3256679	0					
ANR	3256881	Identifier	atoi		3256679	0					
ANR	3256882	ArgumentList	result -> argv [ 2 ]		3256679	1					
ANR	3256883	Argument	result -> argv [ 2 ]		3256679	0					
ANR	3256884	ArrayIndexing	result -> argv [ 2 ]		3256679	0					
ANR	3256885	PtrMemberAccess	result -> argv		3256679	0					
ANR	3256886	Identifier	result		3256679	0					
ANR	3256887	Identifier	argv		3256679	1					
ANR	3256888	PrimaryExpression	2		3256679	1					
ANR	3256889	Statement	delete	3278:2:86867:86872	3256679	4	True				
ANR	3256890	ExpressionStatement	result	3278:9:86874:86880	3256679	5	True				
ANR	3256891	Identifier	result		3256679	0					
ANR	3256892	ReturnStatement	return rc ;	3279:2:86884:86893	3256679	6	True				
ANR	3256893	Identifier	rc		3256679	0					
ANR	3256894	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3256679	11					
ANR	3256895	Condition	"check_pending_timeout ( command , buf )"	3283:6:86950:86983	3256679	0	True				
ANR	3256896	CallExpression	"check_pending_timeout ( command , buf )"		3256679	0					
ANR	3256897	Callee	check_pending_timeout		3256679	0					
ANR	3256898	Identifier	check_pending_timeout		3256679	0					
ANR	3256899	ArgumentList	command		3256679	1					
ANR	3256900	Argument	command		3256679	0					
ANR	3256901	Identifier	command		3256679	0					
ANR	3256902	Argument	buf		3256679	1					
ANR	3256903	Identifier	buf		3256679	0					
ANR	3256904	CompoundStatement		49:43:1391:1391	3256679	1					
ANR	3256905	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3285:2:87023:87071	3256679	0	True				
ANR	3256906	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3256679	0					
ANR	3256907	Callee	sprintf		3256679	0					
ANR	3256908	Identifier	sprintf		3256679	0					
ANR	3256909	ArgumentList	error_string		3256679	1					
ANR	3256910	Argument	error_string		3256679	0					
ANR	3256911	Identifier	error_string		3256679	0					
ANR	3256912	Argument	"""%s timed out"""		3256679	1					
ANR	3256913	PrimaryExpression	"""%s timed out"""		3256679	0					
ANR	3256914	Argument	command		3256679	2					
ANR	3256915	Identifier	command		3256679	0					
ANR	3256916	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3286:2:87075:87110	3256679	1	True				
ANR	3256917	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3256679	0					
ANR	3256918	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3290:1:87170:87203	3256679	12	True				
ANR	3256919	Identifier	GAHPCLIENT_COMMAND_PENDING		3256679	0					
ANR	3256920	ReturnType	int		3256679	1					
ANR	3256921	Identifier	GahpClient :: gt4_set_termination_time		3256679	2					
ANR	3256922	ParameterList	"const char * resource_uri , time_t & new_termination_time"		3256679	3					
ANR	3256923	Parameter	const char * resource_uri	3233:37:85529:85552	3256679	0	True				
ANR	3256924	ParameterType	const char *		3256679	0					
ANR	3256925	Identifier	resource_uri		3256679	1					
ANR	3256926	Parameter	time_t & new_termination_time	3234:10:85565:85592	3256679	1	True				
ANR	3256927	ParameterType	time_t &		3256679	0					
ANR	3256928	Identifier	new_termination_time		3256679	1					
ANR	3256929	CFGEntryNode	ENTRY		3256679		True				
ANR	3256930	CFGExitNode	EXIT		3256679		True				
ANR	3256931	Symbol	server -> m_commands_supported		3256679						
ANR	3256932	Symbol	server		3256679						
ANR	3256933	Symbol	escapeGahpString		3256679						
ANR	3256934	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256679						
ANR	3256935	Symbol	* server		3256679						
ANR	3256936	Symbol	new_termination_time		3256679						
ANR	3256937	Symbol	reqline . c_str		3256679						
ANR	3256938	Symbol	results_only		3256679						
ANR	3256939	Symbol	result -> argv		3256679						
ANR	3256940	Symbol	* server -> m_commands_supported		3256679						
ANR	3256941	Symbol	sprintf		3256679						
ANR	3256942	Symbol	result		3256679						
ANR	3256943	Symbol	normal_proxy		3256679						
ANR	3256944	Symbol	* result		3256679						
ANR	3256945	Symbol	server -> m_commands_supported -> contains_anycase		3256679						
ANR	3256946	Symbol	GAHPCLIENT_COMMAND_PENDING		3256679						
ANR	3256947	Symbol	reqline		3256679						
ANR	3256948	Symbol	m_mode		3256679						
ANR	3256949	Symbol	strcasecmp		3256679						
ANR	3256950	Symbol	* result -> argv		3256679						
ANR	3256951	Symbol	atoi		3256679						
ANR	3256952	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3256679						
ANR	3256953	Symbol	resource_uri		3256679						
ANR	3256954	Symbol	* * result		3256679						
ANR	3256955	Symbol	NULLSTRING		3256679						
ANR	3256956	Symbol	command		3256679						
ANR	3256957	Symbol	get_pending_result		3256679						
ANR	3256958	Symbol	rc		3256679						
ANR	3256959	Symbol	error_string		3256679						
ANR	3256960	Symbol	buf		3256679						
ANR	3256961	Symbol	x		3256679						
ANR	3256962	Symbol	result -> argc		3256679						
ANR	3256963	Symbol	FALSE		3256679						
ANR	3256964	Symbol	* * server		3256679						
ANR	3256965	Symbol	check_pending_timeout		3256679						
ANR	3256966	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256679						
ANR	3256967	Symbol	is_pending		3256679						
ANR	3256968	Function	GahpClient :: condor_job_submit	3293:0:87208:89587							
ANR	3256969	FunctionDef	"GahpClient :: condor_job_submit (const char * schedd_name , ClassAd * job_ad , char * * job_id)"		3256968	0					
ANR	3256970	CompoundStatement		3296:0:87308:89587	3256968	0					
ANR	3256971	Statement	static	3297:1:87311:87316	3256968	0	True				
ANR	3256972	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_SUBMIT"" ;"	3297:8:87318:87359	3256968	1	True				
ANR	3256973	IdentifierDecl	"* command = ""CONDOR_JOB_SUBMIT"""		3256968	0					
ANR	3256974	IdentifierDeclType	const char *		3256968	0					
ANR	3256975	Identifier	command		3256968	1					
ANR	3256976	AssignmentExpression	"* command = ""CONDOR_JOB_SUBMIT"""		3256968	2		=			
ANR	3256977	Identifier	command		3256968	0					
ANR	3256978	PrimaryExpression	"""CONDOR_JOB_SUBMIT"""		3256968	1					
ANR	3256979	IdentifierDeclStatement	MyString ad_string ;	3299:1:87363:87381	3256968	2	True				
ANR	3256980	IdentifierDecl	ad_string		3256968	0					
ANR	3256981	IdentifierDeclType	MyString		3256968	0					
ANR	3256982	Identifier	ad_string		3256968	1					
ANR	3256983	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3256968	3					
ANR	3256984	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3302:6:87430:87491	3256968	0	True				
ANR	3256985	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3256968	0		==			
ANR	3256986	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3256968	0					
ANR	3256987	Callee	server -> m_commands_supported -> contains_anycase		3256968	0					
ANR	3256988	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3256968	0					
ANR	3256989	PtrMemberAccess	server -> m_commands_supported		3256968	0					
ANR	3256990	Identifier	server		3256968	0					
ANR	3256991	Identifier	m_commands_supported		3256968	1					
ANR	3256992	Identifier	contains_anycase		3256968	1					
ANR	3256993	ArgumentList	command		3256968	1					
ANR	3256994	Argument	command		3256968	0					
ANR	3256995	Identifier	command		3256968	0					
ANR	3256996	Identifier	FALSE		3256968	1					
ANR	3256997	CompoundStatement		7:70:185:185	3256968	1					
ANR	3256998	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3303:2:87498:87537	3256968	0	True				
ANR	3256999	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256968	0					
ANR	3257000	IfStatement	if ( ! schedd_name )		3256968	4					
ANR	3257001	Condition	! schedd_name	3307:5:87575:87586	3256968	0	True				
ANR	3257002	UnaryOperationExpression	! schedd_name		3256968	0					
ANR	3257003	UnaryOperator	!		3256968	0					
ANR	3257004	Identifier	schedd_name		3256968	1					
ANR	3257005	ExpressionStatement	schedd_name = NULLSTRING	3307:19:87589:87611	3256968	1	True				
ANR	3257006	AssignmentExpression	schedd_name = NULLSTRING		3256968	0		=			
ANR	3257007	Identifier	schedd_name		3256968	0					
ANR	3257008	Identifier	NULLSTRING		3256968	1					
ANR	3257009	IfStatement	if ( ! job_ad )		3256968	5					
ANR	3257010	Condition	! job_ad	3308:5:87618:87624	3256968	0	True				
ANR	3257011	UnaryOperationExpression	! job_ad		3256968	0					
ANR	3257012	UnaryOperator	!		3256968	0					
ANR	3257013	Identifier	job_ad		3256968	1					
ANR	3257014	CompoundStatement		13:14:318:318	3256968	1					
ANR	3257015	ExpressionStatement	ad_string = NULLSTRING	3309:2:87631:87651	3256968	0	True				
ANR	3257016	AssignmentExpression	ad_string = NULLSTRING		3256968	0		=			
ANR	3257017	Identifier	ad_string		3256968	0					
ANR	3257018	Identifier	NULLSTRING		3256968	1					
ANR	3257019	ElseStatement	else		3256968	0					
ANR	3257020	CompoundStatement		15:8:352:352	3256968	0					
ANR	3257021	IfStatement	if ( useXMLClassads )		3256968	0					
ANR	3257022	Condition	useXMLClassads	3311:7:87670:87683	3256968	0	True				
ANR	3257023	Identifier	useXMLClassads		3256968	0					
ANR	3257024	CompoundStatement		17:3:383:410	3256968	1					
ANR	3257025	IdentifierDeclStatement	ClassAdXMLUnparser unparser ;	3312:3:87692:87719	3256968	0	True				
ANR	3257026	IdentifierDecl	unparser		3256968	0					
ANR	3257027	IdentifierDeclType	ClassAdXMLUnparser		3256968	0					
ANR	3257028	Identifier	unparser		3256968	1					
ANR	3257029	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3313:3:87724:87761	3256968	1	True				
ANR	3257030	CallExpression	unparser . SetUseCompactSpacing ( true )		3256968	0					
ANR	3257031	Callee	unparser . SetUseCompactSpacing		3256968	0					
ANR	3257032	MemberAccess	unparser . SetUseCompactSpacing		3256968	0					
ANR	3257033	Identifier	unparser		3256968	0					
ANR	3257034	Identifier	SetUseCompactSpacing		3256968	1					
ANR	3257035	ArgumentList	true		3256968	1					
ANR	3257036	Argument	true		3256968	0					
ANR	3257037	Identifier	true		3256968	0					
ANR	3257038	ExpressionStatement	unparser . SetOutputType ( false )	3314:3:87766:87797	3256968	2	True				
ANR	3257039	CallExpression	unparser . SetOutputType ( false )		3256968	0					
ANR	3257040	Callee	unparser . SetOutputType		3256968	0					
ANR	3257041	MemberAccess	unparser . SetOutputType		3256968	0					
ANR	3257042	Identifier	unparser		3256968	0					
ANR	3257043	Identifier	SetOutputType		3256968	1					
ANR	3257044	ArgumentList	false		3256968	1					
ANR	3257045	Argument	false		3256968	0					
ANR	3257046	Identifier	false		3256968	0					
ANR	3257047	ExpressionStatement	unparser . SetOutputTargetType ( false )	3315:3:87802:87839	3256968	3	True				
ANR	3257048	CallExpression	unparser . SetOutputTargetType ( false )		3256968	0					
ANR	3257049	Callee	unparser . SetOutputTargetType		3256968	0					
ANR	3257050	MemberAccess	unparser . SetOutputTargetType		3256968	0					
ANR	3257051	Identifier	unparser		3256968	0					
ANR	3257052	Identifier	SetOutputTargetType		3256968	1					
ANR	3257053	ArgumentList	false		3256968	1					
ANR	3257054	Argument	false		3256968	0					
ANR	3257055	Identifier	false		3256968	0					
ANR	3257056	ExpressionStatement	"unparser . Unparse ( job_ad , ad_string )"	3316:3:87844:87881	3256968	4	True				
ANR	3257057	CallExpression	"unparser . Unparse ( job_ad , ad_string )"		3256968	0					
ANR	3257058	Callee	unparser . Unparse		3256968	0					
ANR	3257059	MemberAccess	unparser . Unparse		3256968	0					
ANR	3257060	Identifier	unparser		3256968	0					
ANR	3257061	Identifier	Unparse		3256968	1					
ANR	3257062	ArgumentList	job_ad		3256968	1					
ANR	3257063	Argument	job_ad		3256968	0					
ANR	3257064	Identifier	job_ad		3256968	0					
ANR	3257065	Argument	ad_string		3256968	1					
ANR	3257066	Identifier	ad_string		3256968	0					
ANR	3257067	ElseStatement	else		3256968	0					
ANR	3257068	CompoundStatement		23:3:588:615	3256968	0					
ANR	3257069	IdentifierDeclStatement	NewClassAdUnparser unparser ;	3318:3:87897:87924	3256968	0	True				
ANR	3257070	IdentifierDecl	unparser		3256968	0					
ANR	3257071	IdentifierDeclType	NewClassAdUnparser		3256968	0					
ANR	3257072	Identifier	unparser		3256968	1					
ANR	3257073	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3319:3:87929:87966	3256968	1	True				
ANR	3257074	CallExpression	unparser . SetUseCompactSpacing ( true )		3256968	0					
ANR	3257075	Callee	unparser . SetUseCompactSpacing		3256968	0					
ANR	3257076	MemberAccess	unparser . SetUseCompactSpacing		3256968	0					
ANR	3257077	Identifier	unparser		3256968	0					
ANR	3257078	Identifier	SetUseCompactSpacing		3256968	1					
ANR	3257079	ArgumentList	true		3256968	1					
ANR	3257080	Argument	true		3256968	0					
ANR	3257081	Identifier	true		3256968	0					
ANR	3257082	ExpressionStatement	unparser . SetOutputType ( false )	3320:3:87971:88002	3256968	2	True				
ANR	3257083	CallExpression	unparser . SetOutputType ( false )		3256968	0					
ANR	3257084	Callee	unparser . SetOutputType		3256968	0					
ANR	3257085	MemberAccess	unparser . SetOutputType		3256968	0					
ANR	3257086	Identifier	unparser		3256968	0					
ANR	3257087	Identifier	SetOutputType		3256968	1					
ANR	3257088	ArgumentList	false		3256968	1					
ANR	3257089	Argument	false		3256968	0					
ANR	3257090	Identifier	false		3256968	0					
ANR	3257091	ExpressionStatement	unparser . SetOutputTargetType ( false )	3321:3:88007:88044	3256968	3	True				
ANR	3257092	CallExpression	unparser . SetOutputTargetType ( false )		3256968	0					
ANR	3257093	Callee	unparser . SetOutputTargetType		3256968	0					
ANR	3257094	MemberAccess	unparser . SetOutputTargetType		3256968	0					
ANR	3257095	Identifier	unparser		3256968	0					
ANR	3257096	Identifier	SetOutputTargetType		3256968	1					
ANR	3257097	ArgumentList	false		3256968	1					
ANR	3257098	Argument	false		3256968	0					
ANR	3257099	Identifier	false		3256968	0					
ANR	3257100	ExpressionStatement	"unparser . Unparse ( job_ad , ad_string )"	3322:3:88049:88086	3256968	4	True				
ANR	3257101	CallExpression	"unparser . Unparse ( job_ad , ad_string )"		3256968	0					
ANR	3257102	Callee	unparser . Unparse		3256968	0					
ANR	3257103	MemberAccess	unparser . Unparse		3256968	0					
ANR	3257104	Identifier	unparser		3256968	0					
ANR	3257105	Identifier	Unparse		3256968	1					
ANR	3257106	ArgumentList	job_ad		3256968	1					
ANR	3257107	Argument	job_ad		3256968	0					
ANR	3257108	Identifier	job_ad		3256968	0					
ANR	3257109	Argument	ad_string		3256968	1					
ANR	3257110	Identifier	ad_string		3256968	0					
ANR	3257111	IdentifierDeclStatement	std :: string reqline ;	3325:1:88096:88115	3256968	6	True				
ANR	3257112	IdentifierDecl	reqline		3256968	0					
ANR	3257113	IdentifierDeclType	std :: string		3256968	0					
ANR	3257114	Identifier	reqline		3256968	1					
ANR	3257115	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3326:1:88118:88170	3256968	7	True				
ANR	3257116	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3256968	0					
ANR	3257117	IdentifierDeclType	char *		3256968	0					
ANR	3257118	Identifier	esc1		3256968	1					
ANR	3257119	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3256968	2		=			
ANR	3257120	Identifier	esc1		3256968	0					
ANR	3257121	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3256968	1					
ANR	3257122	Callee	strdup		3256968	0					
ANR	3257123	Identifier	strdup		3256968	0					
ANR	3257124	ArgumentList	escapeGahpString ( schedd_name )		3256968	1					
ANR	3257125	Argument	escapeGahpString ( schedd_name )		3256968	0					
ANR	3257126	CallExpression	escapeGahpString ( schedd_name )		3256968	0					
ANR	3257127	Callee	escapeGahpString		3256968	0					
ANR	3257128	Identifier	escapeGahpString		3256968	0					
ANR	3257129	ArgumentList	schedd_name		3256968	1					
ANR	3257130	Argument	schedd_name		3256968	0					
ANR	3257131	Identifier	schedd_name		3256968	0					
ANR	3257132	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) ) ;	3327:1:88173:88231	3256968	8	True				
ANR	3257133	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3256968	0					
ANR	3257134	IdentifierDeclType	char *		3256968	0					
ANR	3257135	Identifier	esc2		3256968	1					
ANR	3257136	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3256968	2		=			
ANR	3257137	Identifier	esc2		3256968	0					
ANR	3257138	CallExpression	strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3256968	1					
ANR	3257139	Callee	strdup		3256968	0					
ANR	3257140	Identifier	strdup		3256968	0					
ANR	3257141	ArgumentList	escapeGahpString ( ad_string . Value ( ) )		3256968	1					
ANR	3257142	Argument	escapeGahpString ( ad_string . Value ( ) )		3256968	0					
ANR	3257143	CallExpression	escapeGahpString ( ad_string . Value ( ) )		3256968	0					
ANR	3257144	Callee	escapeGahpString		3256968	0					
ANR	3257145	Identifier	escapeGahpString		3256968	0					
ANR	3257146	ArgumentList	ad_string . Value ( )		3256968	1					
ANR	3257147	Argument	ad_string . Value ( )		3256968	0					
ANR	3257148	CallExpression	ad_string . Value ( )		3256968	0					
ANR	3257149	Callee	ad_string . Value		3256968	0					
ANR	3257150	MemberAccess	ad_string . Value		3256968	0					
ANR	3257151	Identifier	ad_string		3256968	0					
ANR	3257152	Identifier	Value		3256968	1					
ANR	3257153	ArgumentList			3256968	1					
ANR	3257154	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	3328:1:88234:88280	3256968	9	True				
ANR	3257155	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3256968	0					
ANR	3257156	IdentifierDeclType	int		3256968	0					
ANR	3257157	Identifier	x		3256968	1					
ANR	3257158	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3256968	2		=			
ANR	3257159	Identifier	x		3256968	0					
ANR	3257160	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3256968	1					
ANR	3257161	Callee	sprintf		3256968	0					
ANR	3257162	Identifier	sprintf		3256968	0					
ANR	3257163	ArgumentList	reqline		3256968	1					
ANR	3257164	Argument	reqline		3256968	0					
ANR	3257165	Identifier	reqline		3256968	0					
ANR	3257166	Argument	"""%s %s"""		3256968	1					
ANR	3257167	PrimaryExpression	"""%s %s"""		3256968	0					
ANR	3257168	Argument	esc1		3256968	2					
ANR	3257169	Identifier	esc1		3256968	0					
ANR	3257170	Argument	esc2		3256968	3					
ANR	3257171	Identifier	esc2		3256968	0					
ANR	3257172	ExpressionStatement	free ( esc1 )	3329:1:88283:88295	3256968	10	True				
ANR	3257173	CallExpression	free ( esc1 )		3256968	0					
ANR	3257174	Callee	free		3256968	0					
ANR	3257175	Identifier	free		3256968	0					
ANR	3257176	ArgumentList	esc1		3256968	1					
ANR	3257177	Argument	esc1		3256968	0					
ANR	3257178	Identifier	esc1		3256968	0					
ANR	3257179	ExpressionStatement	free ( esc2 )	3330:1:88298:88310	3256968	11	True				
ANR	3257180	CallExpression	free ( esc2 )		3256968	0					
ANR	3257181	Callee	free		3256968	0					
ANR	3257182	Identifier	free		3256968	0					
ANR	3257183	ArgumentList	esc2		3256968	1					
ANR	3257184	Argument	esc2		3256968	0					
ANR	3257185	Identifier	esc2		3256968	0					
ANR	3257186	ExpressionStatement	ASSERT ( x > 0 )	3331:1:88313:88328	3256968	12	True				
ANR	3257187	CallExpression	ASSERT ( x > 0 )		3256968	0					
ANR	3257188	Callee	ASSERT		3256968	0					
ANR	3257189	Identifier	ASSERT		3256968	0					
ANR	3257190	ArgumentList	x > 0		3256968	1					
ANR	3257191	Argument	x > 0		3256968	0					
ANR	3257192	RelationalExpression	x > 0		3256968	0		>			
ANR	3257193	Identifier	x		3256968	0					
ANR	3257194	PrimaryExpression	0		3256968	1					
ANR	3257195	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3332:1:88331:88364	3256968	13	True				
ANR	3257196	IdentifierDecl	* buf = reqline . c_str ( )		3256968	0					
ANR	3257197	IdentifierDeclType	const char *		3256968	0					
ANR	3257198	Identifier	buf		3256968	1					
ANR	3257199	AssignmentExpression	* buf = reqline . c_str ( )		3256968	2		=			
ANR	3257200	Identifier	buf		3256968	0					
ANR	3257201	CallExpression	reqline . c_str ( )		3256968	1					
ANR	3257202	Callee	reqline . c_str		3256968	0					
ANR	3257203	MemberAccess	reqline . c_str		3256968	0					
ANR	3257204	Identifier	reqline		3256968	0					
ANR	3257205	Identifier	c_str		3256968	1					
ANR	3257206	ArgumentList			3256968	1					
ANR	3257207	IfStatement	"if ( ! is_pending ( command , buf ) )"		3256968	14					
ANR	3257208	Condition	"! is_pending ( command , buf )"	3336:6:88465:88488	3256968	0	True				
ANR	3257209	UnaryOperationExpression	"! is_pending ( command , buf )"		3256968	0					
ANR	3257210	UnaryOperator	!		3256968	0					
ANR	3257211	CallExpression	"is_pending ( command , buf )"		3256968	1					
ANR	3257212	Callee	is_pending		3256968	0					
ANR	3257213	Identifier	is_pending		3256968	0					
ANR	3257214	ArgumentList	command		3256968	1					
ANR	3257215	Argument	command		3256968	0					
ANR	3257216	Identifier	command		3256968	0					
ANR	3257217	Argument	buf		3256968	1					
ANR	3257218	Identifier	buf		3256968	0					
ANR	3257219	CompoundStatement		41:33:1183:1183	3256968	1					
ANR	3257220	IfStatement	if ( m_mode == results_only )		3256968	0					
ANR	3257221	Condition	m_mode == results_only	3339:7:88597:88618	3256968	0	True				
ANR	3257222	EqualityExpression	m_mode == results_only		3256968	0		==			
ANR	3257223	Identifier	m_mode		3256968	0					
ANR	3257224	Identifier	results_only		3256968	1					
ANR	3257225	CompoundStatement		44:32:1313:1313	3256968	1					
ANR	3257226	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3340:3:88627:88666	3256968	0	True				
ANR	3257227	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256968	0					
ANR	3257228	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3342:2:88674:88710	3256968	1	True				
ANR	3257229	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3256968	0					
ANR	3257230	Callee	now_pending		3256968	0					
ANR	3257231	Identifier	now_pending		3256968	0					
ANR	3257232	ArgumentList	command		3256968	1					
ANR	3257233	Argument	command		3256968	0					
ANR	3257234	Identifier	command		3256968	0					
ANR	3257235	Argument	buf		3256968	1					
ANR	3257236	Identifier	buf		3256968	0					
ANR	3257237	Argument	deleg_proxy		3256968	2					
ANR	3257238	Identifier	deleg_proxy		3256968	0					
ANR	3257239	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3348:1:88804:88855	3256968	15	True				
ANR	3257240	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3256968	0					
ANR	3257241	IdentifierDeclType	Gahp_Args *		3256968	0					
ANR	3257242	Identifier	result		3256968	1					
ANR	3257243	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3256968	2		=			
ANR	3257244	Identifier	result		3256968	0					
ANR	3257245	CallExpression	"get_pending_result ( command , buf )"		3256968	1					
ANR	3257246	Callee	get_pending_result		3256968	0					
ANR	3257247	Identifier	get_pending_result		3256968	0					
ANR	3257248	ArgumentList	command		3256968	1					
ANR	3257249	Argument	command		3256968	0					
ANR	3257250	Identifier	command		3256968	0					
ANR	3257251	Argument	buf		3256968	1					
ANR	3257252	Identifier	buf		3256968	0					
ANR	3257253	IfStatement	if ( result )		3256968	16					
ANR	3257254	Condition	result	3349:6:88863:88868	3256968	0	True				
ANR	3257255	Identifier	result		3256968	0					
ANR	3257256	CompoundStatement		59:2:1658:1668	3256968	1					
ANR	3257257	IfStatement	if ( result -> argc != 4 )		3256968	0					
ANR	3257258	Condition	result -> argc != 4	3351:6:88904:88920	3256968	0	True				
ANR	3257259	EqualityExpression	result -> argc != 4		3256968	0		!=			
ANR	3257260	PtrMemberAccess	result -> argc		3256968	0					
ANR	3257261	Identifier	result		3256968	0					
ANR	3257262	Identifier	argc		3256968	1					
ANR	3257263	PrimaryExpression	4		3256968	1					
ANR	3257264	CompoundStatement		56:25:1614:1614	3256968	1					
ANR	3257265	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3352:3:88928:88959	3256968	0	True				
ANR	3257266	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3256968	0					
ANR	3257267	Callee	EXCEPT		3256968	0					
ANR	3257268	Identifier	EXCEPT		3256968	0					
ANR	3257269	ArgumentList	"""Bad %s Result"""		3256968	1					
ANR	3257270	Argument	"""Bad %s Result"""		3256968	0					
ANR	3257271	PrimaryExpression	"""Bad %s Result"""		3256968	0					
ANR	3257272	Argument	command		3256968	1					
ANR	3257273	Identifier	command		3256968	0					
ANR	3257274	IdentifierDeclStatement	int rc = 1 ;	3354:2:88967:88977	3256968	1	True				
ANR	3257275	IdentifierDecl	rc = 1		3256968	0					
ANR	3257276	IdentifierDeclType	int		3256968	0					
ANR	3257277	Identifier	rc		3256968	1					
ANR	3257278	AssignmentExpression	rc = 1		3256968	2		=			
ANR	3257279	Identifier	rc		3256968	0					
ANR	3257280	PrimaryExpression	1		3256968	1					
ANR	3257281	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3256968	2					
ANR	3257282	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3355:7:88986:89010	3256968	0	True				
ANR	3257283	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3256968	0		==			
ANR	3257284	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3256968	0					
ANR	3257285	ArrayIndexing	result -> argv [ 1 ]		3256968	0					
ANR	3257286	PtrMemberAccess	result -> argv		3256968	0					
ANR	3257287	Identifier	result		3256968	0					
ANR	3257288	Identifier	argv		3256968	1					
ANR	3257289	PrimaryExpression	1		3256968	1					
ANR	3257290	PrimaryExpression	0		3256968	1					
ANR	3257291	PrimaryExpression	'S'		3256968	1					
ANR	3257292	CompoundStatement		60:35:1705:1705	3256968	1					
ANR	3257293	ExpressionStatement	rc = 0	3356:3:89019:89025	3256968	0	True				
ANR	3257294	AssignmentExpression	rc = 0		3256968	0		=			
ANR	3257295	Identifier	rc		3256968	0					
ANR	3257296	PrimaryExpression	0		3256968	1					
ANR	3257297	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3256968	3					
ANR	3257298	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3358:7:89038:89076	3256968	0	True				
ANR	3257299	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3256968	0					
ANR	3257300	Callee	strcasecmp		3256968	0					
ANR	3257301	Identifier	strcasecmp		3256968	0					
ANR	3257302	ArgumentList	result -> argv [ 2 ]		3256968	1					
ANR	3257303	Argument	result -> argv [ 2 ]		3256968	0					
ANR	3257304	ArrayIndexing	result -> argv [ 2 ]		3256968	0					
ANR	3257305	PtrMemberAccess	result -> argv		3256968	0					
ANR	3257306	Identifier	result		3256968	0					
ANR	3257307	Identifier	argv		3256968	1					
ANR	3257308	PrimaryExpression	2		3256968	1					
ANR	3257309	Argument	NULLSTRING		3256968	1					
ANR	3257310	Identifier	NULLSTRING		3256968	0					
ANR	3257311	CompoundStatement		63:49:1771:1771	3256968	1					
ANR	3257312	ExpressionStatement	* job_id = strdup ( result -> argv [ 2 ] )	3359:3:89085:89118	3256968	0	True				
ANR	3257313	AssignmentExpression	* job_id = strdup ( result -> argv [ 2 ] )		3256968	0		=			
ANR	3257314	UnaryOperationExpression	* job_id		3256968	0					
ANR	3257315	UnaryOperator	*		3256968	0					
ANR	3257316	Identifier	job_id		3256968	1					
ANR	3257317	CallExpression	strdup ( result -> argv [ 2 ] )		3256968	1					
ANR	3257318	Callee	strdup		3256968	0					
ANR	3257319	Identifier	strdup		3256968	0					
ANR	3257320	ArgumentList	result -> argv [ 2 ]		3256968	1					
ANR	3257321	Argument	result -> argv [ 2 ]		3256968	0					
ANR	3257322	ArrayIndexing	result -> argv [ 2 ]		3256968	0					
ANR	3257323	PtrMemberAccess	result -> argv		3256968	0					
ANR	3257324	Identifier	result		3256968	0					
ANR	3257325	Identifier	argv		3256968	1					
ANR	3257326	PrimaryExpression	2		3256968	1					
ANR	3257327	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3256968	4					
ANR	3257328	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	3361:7:89131:89169	3256968	0	True				
ANR	3257329	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3256968	0					
ANR	3257330	Callee	strcasecmp		3256968	0					
ANR	3257331	Identifier	strcasecmp		3256968	0					
ANR	3257332	ArgumentList	result -> argv [ 3 ]		3256968	1					
ANR	3257333	Argument	result -> argv [ 3 ]		3256968	0					
ANR	3257334	ArrayIndexing	result -> argv [ 3 ]		3256968	0					
ANR	3257335	PtrMemberAccess	result -> argv		3256968	0					
ANR	3257336	Identifier	result		3256968	0					
ANR	3257337	Identifier	argv		3256968	1					
ANR	3257338	PrimaryExpression	3		3256968	1					
ANR	3257339	Argument	NULLSTRING		3256968	1					
ANR	3257340	Identifier	NULLSTRING		3256968	0					
ANR	3257341	CompoundStatement		66:49:1864:1864	3256968	1					
ANR	3257342	ExpressionStatement	error_string = result -> argv [ 3 ]	3362:3:89178:89208	3256968	0	True				
ANR	3257343	AssignmentExpression	error_string = result -> argv [ 3 ]		3256968	0		=			
ANR	3257344	Identifier	error_string		3256968	0					
ANR	3257345	ArrayIndexing	result -> argv [ 3 ]		3256968	1					
ANR	3257346	PtrMemberAccess	result -> argv		3256968	0					
ANR	3257347	Identifier	result		3256968	0					
ANR	3257348	Identifier	argv		3256968	1					
ANR	3257349	PrimaryExpression	3		3256968	1					
ANR	3257350	ElseStatement	else		3256968	0					
ANR	3257351	CompoundStatement		68:9:1910:1910	3256968	0					
ANR	3257352	ExpressionStatement	"error_string = """""	3364:3:89224:89241	3256968	0	True				
ANR	3257353	AssignmentExpression	"error_string = """""		3256968	0		=			
ANR	3257354	Identifier	error_string		3256968	0					
ANR	3257355	PrimaryExpression	""""""		3256968	1					
ANR	3257356	Statement	delete	3366:2:89249:89254	3256968	5	True				
ANR	3257357	ExpressionStatement	result	3366:9:89256:89262	3256968	6	True				
ANR	3257358	Identifier	result		3256968	0					
ANR	3257359	ReturnStatement	return rc ;	3367:2:89266:89275	3256968	7	True				
ANR	3257360	Identifier	rc		3256968	0					
ANR	3257361	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3256968	17					
ANR	3257362	Condition	"check_pending_timeout ( command , buf )"	3371:6:89332:89365	3256968	0	True				
ANR	3257363	CallExpression	"check_pending_timeout ( command , buf )"		3256968	0					
ANR	3257364	Callee	check_pending_timeout		3256968	0					
ANR	3257365	Identifier	check_pending_timeout		3256968	0					
ANR	3257366	ArgumentList	command		3256968	1					
ANR	3257367	Argument	command		3256968	0					
ANR	3257368	Identifier	command		3256968	0					
ANR	3257369	Argument	buf		3256968	1					
ANR	3257370	Identifier	buf		3256968	0					
ANR	3257371	CompoundStatement		76:43:2060:2060	3256968	1					
ANR	3257372	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3373:2:89405:89453	3256968	0	True				
ANR	3257373	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3256968	0					
ANR	3257374	Callee	sprintf		3256968	0					
ANR	3257375	Identifier	sprintf		3256968	0					
ANR	3257376	ArgumentList	error_string		3256968	1					
ANR	3257377	Argument	error_string		3256968	0					
ANR	3257378	Identifier	error_string		3256968	0					
ANR	3257379	Argument	"""%s timed out"""		3256968	1					
ANR	3257380	PrimaryExpression	"""%s timed out"""		3256968	0					
ANR	3257381	Argument	command		3256968	2					
ANR	3257382	Identifier	command		3256968	0					
ANR	3257383	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3374:2:89457:89492	3256968	1	True				
ANR	3257384	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3256968	0					
ANR	3257385	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3378:1:89552:89585	3256968	18	True				
ANR	3257386	Identifier	GAHPCLIENT_COMMAND_PENDING		3256968	0					
ANR	3257387	ReturnType	int		3256968	1					
ANR	3257388	Identifier	GahpClient :: condor_job_submit		3256968	2					
ANR	3257389	ParameterList	"const char * schedd_name , ClassAd * job_ad , char * * job_id"		3256968	3					
ANR	3257390	Parameter	const char * schedd_name	3294:30:87242:87264	3256968	0	True				
ANR	3257391	ParameterType	const char *		3256968	0					
ANR	3257392	Identifier	schedd_name		3256968	1					
ANR	3257393	Parameter	ClassAd * job_ad	3294:55:87267:87281	3256968	1	True				
ANR	3257394	ParameterType	ClassAd *		3256968	0					
ANR	3257395	Identifier	job_ad		3256968	1					
ANR	3257396	Parameter	char * * job_id	3295:9:87293:87305	3256968	2	True				
ANR	3257397	ParameterType	char * *		3256968	0					
ANR	3257398	Identifier	job_id		3256968	1					
ANR	3257399	CFGEntryNode	ENTRY		3256968		True				
ANR	3257400	CFGExitNode	EXIT		3256968		True				
ANR	3257401	Symbol	server -> m_commands_supported		3256968						
ANR	3257402	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3256968						
ANR	3257403	Symbol	ad_string		3256968						
ANR	3257404	Symbol	sprintf		3256968						
ANR	3257405	Symbol	server -> m_commands_supported -> contains_anycase		3256968						
ANR	3257406	Symbol	GAHPCLIENT_COMMAND_PENDING		3256968						
ANR	3257407	Symbol	useXMLClassads		3256968						
ANR	3257408	Symbol	strcasecmp		3256968						
ANR	3257409	Symbol	ad_string . Value		3256968						
ANR	3257410	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3256968						
ANR	3257411	Symbol	* * result		3256968						
ANR	3257412	Symbol	get_pending_result		3256968						
ANR	3257413	Symbol	rc		3256968						
ANR	3257414	Symbol	schedd_name		3256968						
ANR	3257415	Symbol	true		3256968						
ANR	3257416	Symbol	is_pending		3256968						
ANR	3257417	Symbol	deleg_proxy		3256968						
ANR	3257418	Symbol	server		3256968						
ANR	3257419	Symbol	escapeGahpString		3256968						
ANR	3257420	Symbol	* server		3256968						
ANR	3257421	Symbol	reqline . c_str		3256968						
ANR	3257422	Symbol	results_only		3256968						
ANR	3257423	Symbol	result -> argv		3256968						
ANR	3257424	Symbol	job_ad		3256968						
ANR	3257425	Symbol	* server -> m_commands_supported		3256968						
ANR	3257426	Symbol	result		3256968						
ANR	3257427	Symbol	* result		3256968						
ANR	3257428	Symbol	reqline		3256968						
ANR	3257429	Symbol	m_mode		3256968						
ANR	3257430	Symbol	* result -> argv		3256968						
ANR	3257431	Symbol	* * * result		3256968						
ANR	3257432	Symbol	false		3256968						
ANR	3257433	Symbol	NULLSTRING		3256968						
ANR	3257434	Symbol	command		3256968						
ANR	3257435	Symbol	* * result -> argv		3256968						
ANR	3257436	Symbol	error_string		3256968						
ANR	3257437	Symbol	esc2		3256968						
ANR	3257438	Symbol	buf		3256968						
ANR	3257439	Symbol	esc1		3256968						
ANR	3257440	Symbol	job_id		3256968						
ANR	3257441	Symbol	* job_id		3256968						
ANR	3257442	Symbol	x		3256968						
ANR	3257443	Symbol	result -> argc		3256968						
ANR	3257444	Symbol	FALSE		3256968						
ANR	3257445	Symbol	* * server		3256968						
ANR	3257446	Symbol	unparser		3256968						
ANR	3257447	Symbol	strdup		3256968						
ANR	3257448	Symbol	check_pending_timeout		3256968						
ANR	3257449	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3256968						
ANR	3257450	Function	GahpClient :: condor_job_update_constrained	3381:0:89590:92056							
ANR	3257451	FunctionDef	"GahpClient :: condor_job_update_constrained (const char * schedd_name , const char * constraint , ClassAd * update_ad)"		3257450	0					
ANR	3257452	CompoundStatement		3385:0:89729:92056	3257450	0					
ANR	3257453	Statement	static	3386:1:89732:89737	3257450	0	True				
ANR	3257454	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_UPDATE_CONSTRAINED"" ;"	3386:8:89739:89792	3257450	1	True				
ANR	3257455	IdentifierDecl	"* command = ""CONDOR_JOB_UPDATE_CONSTRAINED"""		3257450	0					
ANR	3257456	IdentifierDeclType	const char *		3257450	0					
ANR	3257457	Identifier	command		3257450	1					
ANR	3257458	AssignmentExpression	"* command = ""CONDOR_JOB_UPDATE_CONSTRAINED"""		3257450	2		=			
ANR	3257459	Identifier	command		3257450	0					
ANR	3257460	PrimaryExpression	"""CONDOR_JOB_UPDATE_CONSTRAINED"""		3257450	1					
ANR	3257461	IdentifierDeclStatement	MyString ad_string ;	3388:1:89796:89814	3257450	2	True				
ANR	3257462	IdentifierDecl	ad_string		3257450	0					
ANR	3257463	IdentifierDeclType	MyString		3257450	0					
ANR	3257464	Identifier	ad_string		3257450	1					
ANR	3257465	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3257450	3					
ANR	3257466	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3391:6:89863:89924	3257450	0	True				
ANR	3257467	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3257450	0		==			
ANR	3257468	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3257450	0					
ANR	3257469	Callee	server -> m_commands_supported -> contains_anycase		3257450	0					
ANR	3257470	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3257450	0					
ANR	3257471	PtrMemberAccess	server -> m_commands_supported		3257450	0					
ANR	3257472	Identifier	server		3257450	0					
ANR	3257473	Identifier	m_commands_supported		3257450	1					
ANR	3257474	Identifier	contains_anycase		3257450	1					
ANR	3257475	ArgumentList	command		3257450	1					
ANR	3257476	Argument	command		3257450	0					
ANR	3257477	Identifier	command		3257450	0					
ANR	3257478	Identifier	FALSE		3257450	1					
ANR	3257479	CompoundStatement		7:70:197:197	3257450	1					
ANR	3257480	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3392:2:89931:89970	3257450	0	True				
ANR	3257481	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3257450	0					
ANR	3257482	IfStatement	if ( ! schedd_name )		3257450	4					
ANR	3257483	Condition	! schedd_name	3396:5:90008:90019	3257450	0	True				
ANR	3257484	UnaryOperationExpression	! schedd_name		3257450	0					
ANR	3257485	UnaryOperator	!		3257450	0					
ANR	3257486	Identifier	schedd_name		3257450	1					
ANR	3257487	ExpressionStatement	schedd_name = NULLSTRING	3396:19:90022:90044	3257450	1	True				
ANR	3257488	AssignmentExpression	schedd_name = NULLSTRING		3257450	0		=			
ANR	3257489	Identifier	schedd_name		3257450	0					
ANR	3257490	Identifier	NULLSTRING		3257450	1					
ANR	3257491	IfStatement	if ( ! constraint )		3257450	5					
ANR	3257492	Condition	! constraint	3397:5:90051:90061	3257450	0	True				
ANR	3257493	UnaryOperationExpression	! constraint		3257450	0					
ANR	3257494	UnaryOperator	!		3257450	0					
ANR	3257495	Identifier	constraint		3257450	1					
ANR	3257496	ExpressionStatement	constraint = NULLSTRING	3397:18:90064:90085	3257450	1	True				
ANR	3257497	AssignmentExpression	constraint = NULLSTRING		3257450	0		=			
ANR	3257498	Identifier	constraint		3257450	0					
ANR	3257499	Identifier	NULLSTRING		3257450	1					
ANR	3257500	IfStatement	if ( ! update_ad )		3257450	6					
ANR	3257501	Condition	! update_ad	3398:5:90092:90101	3257450	0	True				
ANR	3257502	UnaryOperationExpression	! update_ad		3257450	0					
ANR	3257503	UnaryOperator	!		3257450	0					
ANR	3257504	Identifier	update_ad		3257450	1					
ANR	3257505	CompoundStatement		14:17:374:374	3257450	1					
ANR	3257506	ExpressionStatement	ad_string = NULLSTRING	3399:2:90108:90128	3257450	0	True				
ANR	3257507	AssignmentExpression	ad_string = NULLSTRING		3257450	0		=			
ANR	3257508	Identifier	ad_string		3257450	0					
ANR	3257509	Identifier	NULLSTRING		3257450	1					
ANR	3257510	ElseStatement	else		3257450	0					
ANR	3257511	CompoundStatement		16:8:408:408	3257450	0					
ANR	3257512	IfStatement	if ( useXMLClassads )		3257450	0					
ANR	3257513	Condition	useXMLClassads	3401:7:90147:90160	3257450	0	True				
ANR	3257514	Identifier	useXMLClassads		3257450	0					
ANR	3257515	CompoundStatement		18:3:439:466	3257450	1					
ANR	3257516	IdentifierDeclStatement	ClassAdXMLUnparser unparser ;	3402:3:90169:90196	3257450	0	True				
ANR	3257517	IdentifierDecl	unparser		3257450	0					
ANR	3257518	IdentifierDeclType	ClassAdXMLUnparser		3257450	0					
ANR	3257519	Identifier	unparser		3257450	1					
ANR	3257520	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3403:3:90201:90238	3257450	1	True				
ANR	3257521	CallExpression	unparser . SetUseCompactSpacing ( true )		3257450	0					
ANR	3257522	Callee	unparser . SetUseCompactSpacing		3257450	0					
ANR	3257523	MemberAccess	unparser . SetUseCompactSpacing		3257450	0					
ANR	3257524	Identifier	unparser		3257450	0					
ANR	3257525	Identifier	SetUseCompactSpacing		3257450	1					
ANR	3257526	ArgumentList	true		3257450	1					
ANR	3257527	Argument	true		3257450	0					
ANR	3257528	Identifier	true		3257450	0					
ANR	3257529	ExpressionStatement	unparser . SetOutputType ( false )	3404:3:90243:90274	3257450	2	True				
ANR	3257530	CallExpression	unparser . SetOutputType ( false )		3257450	0					
ANR	3257531	Callee	unparser . SetOutputType		3257450	0					
ANR	3257532	MemberAccess	unparser . SetOutputType		3257450	0					
ANR	3257533	Identifier	unparser		3257450	0					
ANR	3257534	Identifier	SetOutputType		3257450	1					
ANR	3257535	ArgumentList	false		3257450	1					
ANR	3257536	Argument	false		3257450	0					
ANR	3257537	Identifier	false		3257450	0					
ANR	3257538	ExpressionStatement	unparser . SetOutputTargetType ( false )	3405:3:90279:90316	3257450	3	True				
ANR	3257539	CallExpression	unparser . SetOutputTargetType ( false )		3257450	0					
ANR	3257540	Callee	unparser . SetOutputTargetType		3257450	0					
ANR	3257541	MemberAccess	unparser . SetOutputTargetType		3257450	0					
ANR	3257542	Identifier	unparser		3257450	0					
ANR	3257543	Identifier	SetOutputTargetType		3257450	1					
ANR	3257544	ArgumentList	false		3257450	1					
ANR	3257545	Argument	false		3257450	0					
ANR	3257546	Identifier	false		3257450	0					
ANR	3257547	ExpressionStatement	"unparser . Unparse ( update_ad , ad_string )"	3406:3:90321:90361	3257450	4	True				
ANR	3257548	CallExpression	"unparser . Unparse ( update_ad , ad_string )"		3257450	0					
ANR	3257549	Callee	unparser . Unparse		3257450	0					
ANR	3257550	MemberAccess	unparser . Unparse		3257450	0					
ANR	3257551	Identifier	unparser		3257450	0					
ANR	3257552	Identifier	Unparse		3257450	1					
ANR	3257553	ArgumentList	update_ad		3257450	1					
ANR	3257554	Argument	update_ad		3257450	0					
ANR	3257555	Identifier	update_ad		3257450	0					
ANR	3257556	Argument	ad_string		3257450	1					
ANR	3257557	Identifier	ad_string		3257450	0					
ANR	3257558	ElseStatement	else		3257450	0					
ANR	3257559	CompoundStatement		24:3:647:674	3257450	0					
ANR	3257560	IdentifierDeclStatement	NewClassAdUnparser unparser ;	3408:3:90377:90404	3257450	0	True				
ANR	3257561	IdentifierDecl	unparser		3257450	0					
ANR	3257562	IdentifierDeclType	NewClassAdUnparser		3257450	0					
ANR	3257563	Identifier	unparser		3257450	1					
ANR	3257564	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3409:3:90409:90446	3257450	1	True				
ANR	3257565	CallExpression	unparser . SetUseCompactSpacing ( true )		3257450	0					
ANR	3257566	Callee	unparser . SetUseCompactSpacing		3257450	0					
ANR	3257567	MemberAccess	unparser . SetUseCompactSpacing		3257450	0					
ANR	3257568	Identifier	unparser		3257450	0					
ANR	3257569	Identifier	SetUseCompactSpacing		3257450	1					
ANR	3257570	ArgumentList	true		3257450	1					
ANR	3257571	Argument	true		3257450	0					
ANR	3257572	Identifier	true		3257450	0					
ANR	3257573	ExpressionStatement	unparser . SetOutputType ( false )	3410:3:90451:90482	3257450	2	True				
ANR	3257574	CallExpression	unparser . SetOutputType ( false )		3257450	0					
ANR	3257575	Callee	unparser . SetOutputType		3257450	0					
ANR	3257576	MemberAccess	unparser . SetOutputType		3257450	0					
ANR	3257577	Identifier	unparser		3257450	0					
ANR	3257578	Identifier	SetOutputType		3257450	1					
ANR	3257579	ArgumentList	false		3257450	1					
ANR	3257580	Argument	false		3257450	0					
ANR	3257581	Identifier	false		3257450	0					
ANR	3257582	ExpressionStatement	unparser . SetOutputTargetType ( false )	3411:3:90487:90524	3257450	3	True				
ANR	3257583	CallExpression	unparser . SetOutputTargetType ( false )		3257450	0					
ANR	3257584	Callee	unparser . SetOutputTargetType		3257450	0					
ANR	3257585	MemberAccess	unparser . SetOutputTargetType		3257450	0					
ANR	3257586	Identifier	unparser		3257450	0					
ANR	3257587	Identifier	SetOutputTargetType		3257450	1					
ANR	3257588	ArgumentList	false		3257450	1					
ANR	3257589	Argument	false		3257450	0					
ANR	3257590	Identifier	false		3257450	0					
ANR	3257591	ExpressionStatement	"unparser . Unparse ( update_ad , ad_string )"	3412:3:90529:90569	3257450	4	True				
ANR	3257592	CallExpression	"unparser . Unparse ( update_ad , ad_string )"		3257450	0					
ANR	3257593	Callee	unparser . Unparse		3257450	0					
ANR	3257594	MemberAccess	unparser . Unparse		3257450	0					
ANR	3257595	Identifier	unparser		3257450	0					
ANR	3257596	Identifier	Unparse		3257450	1					
ANR	3257597	ArgumentList	update_ad		3257450	1					
ANR	3257598	Argument	update_ad		3257450	0					
ANR	3257599	Identifier	update_ad		3257450	0					
ANR	3257600	Argument	ad_string		3257450	1					
ANR	3257601	Identifier	ad_string		3257450	0					
ANR	3257602	IdentifierDeclStatement	std :: string reqline ;	3415:1:90579:90598	3257450	7	True				
ANR	3257603	IdentifierDecl	reqline		3257450	0					
ANR	3257604	IdentifierDeclType	std :: string		3257450	0					
ANR	3257605	Identifier	reqline		3257450	1					
ANR	3257606	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3416:1:90601:90653	3257450	8	True				
ANR	3257607	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3257450	0					
ANR	3257608	IdentifierDeclType	char *		3257450	0					
ANR	3257609	Identifier	esc1		3257450	1					
ANR	3257610	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3257450	2		=			
ANR	3257611	Identifier	esc1		3257450	0					
ANR	3257612	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3257450	1					
ANR	3257613	Callee	strdup		3257450	0					
ANR	3257614	Identifier	strdup		3257450	0					
ANR	3257615	ArgumentList	escapeGahpString ( schedd_name )		3257450	1					
ANR	3257616	Argument	escapeGahpString ( schedd_name )		3257450	0					
ANR	3257617	CallExpression	escapeGahpString ( schedd_name )		3257450	0					
ANR	3257618	Callee	escapeGahpString		3257450	0					
ANR	3257619	Identifier	escapeGahpString		3257450	0					
ANR	3257620	ArgumentList	schedd_name		3257450	1					
ANR	3257621	Argument	schedd_name		3257450	0					
ANR	3257622	Identifier	schedd_name		3257450	0					
ANR	3257623	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( constraint ) ) ;	3417:1:90656:90707	3257450	9	True				
ANR	3257624	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( constraint ) )		3257450	0					
ANR	3257625	IdentifierDeclType	char *		3257450	0					
ANR	3257626	Identifier	esc2		3257450	1					
ANR	3257627	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( constraint ) )		3257450	2		=			
ANR	3257628	Identifier	esc2		3257450	0					
ANR	3257629	CallExpression	strdup ( escapeGahpString ( constraint ) )		3257450	1					
ANR	3257630	Callee	strdup		3257450	0					
ANR	3257631	Identifier	strdup		3257450	0					
ANR	3257632	ArgumentList	escapeGahpString ( constraint )		3257450	1					
ANR	3257633	Argument	escapeGahpString ( constraint )		3257450	0					
ANR	3257634	CallExpression	escapeGahpString ( constraint )		3257450	0					
ANR	3257635	Callee	escapeGahpString		3257450	0					
ANR	3257636	Identifier	escapeGahpString		3257450	0					
ANR	3257637	ArgumentList	constraint		3257450	1					
ANR	3257638	Argument	constraint		3257450	0					
ANR	3257639	Identifier	constraint		3257450	0					
ANR	3257640	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( ad_string . Value ( ) ) ) ;	3418:1:90710:90768	3257450	10	True				
ANR	3257641	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3257450	0					
ANR	3257642	IdentifierDeclType	char *		3257450	0					
ANR	3257643	Identifier	esc3		3257450	1					
ANR	3257644	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3257450	2		=			
ANR	3257645	Identifier	esc3		3257450	0					
ANR	3257646	CallExpression	strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3257450	1					
ANR	3257647	Callee	strdup		3257450	0					
ANR	3257648	Identifier	strdup		3257450	0					
ANR	3257649	ArgumentList	escapeGahpString ( ad_string . Value ( ) )		3257450	1					
ANR	3257650	Argument	escapeGahpString ( ad_string . Value ( ) )		3257450	0					
ANR	3257651	CallExpression	escapeGahpString ( ad_string . Value ( ) )		3257450	0					
ANR	3257652	Callee	escapeGahpString		3257450	0					
ANR	3257653	Identifier	escapeGahpString		3257450	0					
ANR	3257654	ArgumentList	ad_string . Value ( )		3257450	1					
ANR	3257655	Argument	ad_string . Value ( )		3257450	0					
ANR	3257656	CallExpression	ad_string . Value ( )		3257450	0					
ANR	3257657	Callee	ad_string . Value		3257450	0					
ANR	3257658	MemberAccess	ad_string . Value		3257450	0					
ANR	3257659	Identifier	ad_string		3257450	0					
ANR	3257660	Identifier	Value		3257450	1					
ANR	3257661	ArgumentList			3257450	1					
ANR	3257662	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 ) ;"	3419:1:90771:90827	3257450	11	True				
ANR	3257663	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"		3257450	0					
ANR	3257664	IdentifierDeclType	int		3257450	0					
ANR	3257665	Identifier	x		3257450	1					
ANR	3257666	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"		3257450	2		=			
ANR	3257667	Identifier	x		3257450	0					
ANR	3257668	CallExpression	"sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"		3257450	1					
ANR	3257669	Callee	sprintf		3257450	0					
ANR	3257670	Identifier	sprintf		3257450	0					
ANR	3257671	ArgumentList	reqline		3257450	1					
ANR	3257672	Argument	reqline		3257450	0					
ANR	3257673	Identifier	reqline		3257450	0					
ANR	3257674	Argument	"""%s %s %s"""		3257450	1					
ANR	3257675	PrimaryExpression	"""%s %s %s"""		3257450	0					
ANR	3257676	Argument	esc1		3257450	2					
ANR	3257677	Identifier	esc1		3257450	0					
ANR	3257678	Argument	esc2		3257450	3					
ANR	3257679	Identifier	esc2		3257450	0					
ANR	3257680	Argument	esc3		3257450	4					
ANR	3257681	Identifier	esc3		3257450	0					
ANR	3257682	ExpressionStatement	free ( esc1 )	3420:1:90830:90842	3257450	12	True				
ANR	3257683	CallExpression	free ( esc1 )		3257450	0					
ANR	3257684	Callee	free		3257450	0					
ANR	3257685	Identifier	free		3257450	0					
ANR	3257686	ArgumentList	esc1		3257450	1					
ANR	3257687	Argument	esc1		3257450	0					
ANR	3257688	Identifier	esc1		3257450	0					
ANR	3257689	ExpressionStatement	free ( esc2 )	3421:1:90845:90857	3257450	13	True				
ANR	3257690	CallExpression	free ( esc2 )		3257450	0					
ANR	3257691	Callee	free		3257450	0					
ANR	3257692	Identifier	free		3257450	0					
ANR	3257693	ArgumentList	esc2		3257450	1					
ANR	3257694	Argument	esc2		3257450	0					
ANR	3257695	Identifier	esc2		3257450	0					
ANR	3257696	ExpressionStatement	free ( esc3 )	3422:1:90860:90872	3257450	14	True				
ANR	3257697	CallExpression	free ( esc3 )		3257450	0					
ANR	3257698	Callee	free		3257450	0					
ANR	3257699	Identifier	free		3257450	0					
ANR	3257700	ArgumentList	esc3		3257450	1					
ANR	3257701	Argument	esc3		3257450	0					
ANR	3257702	Identifier	esc3		3257450	0					
ANR	3257703	ExpressionStatement	ASSERT ( x > 0 )	3423:1:90875:90890	3257450	15	True				
ANR	3257704	CallExpression	ASSERT ( x > 0 )		3257450	0					
ANR	3257705	Callee	ASSERT		3257450	0					
ANR	3257706	Identifier	ASSERT		3257450	0					
ANR	3257707	ArgumentList	x > 0		3257450	1					
ANR	3257708	Argument	x > 0		3257450	0					
ANR	3257709	RelationalExpression	x > 0		3257450	0		>			
ANR	3257710	Identifier	x		3257450	0					
ANR	3257711	PrimaryExpression	0		3257450	1					
ANR	3257712	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3424:1:90893:90926	3257450	16	True				
ANR	3257713	IdentifierDecl	* buf = reqline . c_str ( )		3257450	0					
ANR	3257714	IdentifierDeclType	const char *		3257450	0					
ANR	3257715	Identifier	buf		3257450	1					
ANR	3257716	AssignmentExpression	* buf = reqline . c_str ( )		3257450	2		=			
ANR	3257717	Identifier	buf		3257450	0					
ANR	3257718	CallExpression	reqline . c_str ( )		3257450	1					
ANR	3257719	Callee	reqline . c_str		3257450	0					
ANR	3257720	MemberAccess	reqline . c_str		3257450	0					
ANR	3257721	Identifier	reqline		3257450	0					
ANR	3257722	Identifier	c_str		3257450	1					
ANR	3257723	ArgumentList			3257450	1					
ANR	3257724	IfStatement	"if ( ! is_pending ( command , buf ) )"		3257450	17					
ANR	3257725	Condition	"! is_pending ( command , buf )"	3428:6:91027:91050	3257450	0	True				
ANR	3257726	UnaryOperationExpression	"! is_pending ( command , buf )"		3257450	0					
ANR	3257727	UnaryOperator	!		3257450	0					
ANR	3257728	CallExpression	"is_pending ( command , buf )"		3257450	1					
ANR	3257729	Callee	is_pending		3257450	0					
ANR	3257730	Identifier	is_pending		3257450	0					
ANR	3257731	ArgumentList	command		3257450	1					
ANR	3257732	Argument	command		3257450	0					
ANR	3257733	Identifier	command		3257450	0					
ANR	3257734	Argument	buf		3257450	1					
ANR	3257735	Identifier	buf		3257450	0					
ANR	3257736	CompoundStatement		44:33:1324:1324	3257450	1					
ANR	3257737	IfStatement	if ( m_mode == results_only )		3257450	0					
ANR	3257738	Condition	m_mode == results_only	3431:7:91159:91180	3257450	0	True				
ANR	3257739	EqualityExpression	m_mode == results_only		3257450	0		==			
ANR	3257740	Identifier	m_mode		3257450	0					
ANR	3257741	Identifier	results_only		3257450	1					
ANR	3257742	CompoundStatement		47:32:1454:1454	3257450	1					
ANR	3257743	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3432:3:91189:91228	3257450	0	True				
ANR	3257744	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3257450	0					
ANR	3257745	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3434:2:91236:91272	3257450	1	True				
ANR	3257746	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3257450	0					
ANR	3257747	Callee	now_pending		3257450	0					
ANR	3257748	Identifier	now_pending		3257450	0					
ANR	3257749	ArgumentList	command		3257450	1					
ANR	3257750	Argument	command		3257450	0					
ANR	3257751	Identifier	command		3257450	0					
ANR	3257752	Argument	buf		3257450	1					
ANR	3257753	Identifier	buf		3257450	0					
ANR	3257754	Argument	deleg_proxy		3257450	2					
ANR	3257755	Identifier	deleg_proxy		3257450	0					
ANR	3257756	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3440:1:91366:91417	3257450	18	True				
ANR	3257757	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3257450	0					
ANR	3257758	IdentifierDeclType	Gahp_Args *		3257450	0					
ANR	3257759	Identifier	result		3257450	1					
ANR	3257760	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3257450	2		=			
ANR	3257761	Identifier	result		3257450	0					
ANR	3257762	CallExpression	"get_pending_result ( command , buf )"		3257450	1					
ANR	3257763	Callee	get_pending_result		3257450	0					
ANR	3257764	Identifier	get_pending_result		3257450	0					
ANR	3257765	ArgumentList	command		3257450	1					
ANR	3257766	Argument	command		3257450	0					
ANR	3257767	Identifier	command		3257450	0					
ANR	3257768	Argument	buf		3257450	1					
ANR	3257769	Identifier	buf		3257450	0					
ANR	3257770	IfStatement	if ( result )		3257450	19					
ANR	3257771	Condition	result	3441:6:91425:91430	3257450	0	True				
ANR	3257772	Identifier	result		3257450	0					
ANR	3257773	CompoundStatement		62:2:1799:1809	3257450	1					
ANR	3257774	IfStatement	if ( result -> argc != 3 )		3257450	0					
ANR	3257775	Condition	result -> argc != 3	3443:6:91466:91482	3257450	0	True				
ANR	3257776	EqualityExpression	result -> argc != 3		3257450	0		!=			
ANR	3257777	PtrMemberAccess	result -> argc		3257450	0					
ANR	3257778	Identifier	result		3257450	0					
ANR	3257779	Identifier	argc		3257450	1					
ANR	3257780	PrimaryExpression	3		3257450	1					
ANR	3257781	CompoundStatement		59:25:1755:1755	3257450	1					
ANR	3257782	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3444:3:91490:91521	3257450	0	True				
ANR	3257783	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3257450	0					
ANR	3257784	Callee	EXCEPT		3257450	0					
ANR	3257785	Identifier	EXCEPT		3257450	0					
ANR	3257786	ArgumentList	"""Bad %s Result"""		3257450	1					
ANR	3257787	Argument	"""Bad %s Result"""		3257450	0					
ANR	3257788	PrimaryExpression	"""Bad %s Result"""		3257450	0					
ANR	3257789	Argument	command		3257450	1					
ANR	3257790	Identifier	command		3257450	0					
ANR	3257791	IdentifierDeclStatement	int rc = 1 ;	3446:2:91529:91539	3257450	1	True				
ANR	3257792	IdentifierDecl	rc = 1		3257450	0					
ANR	3257793	IdentifierDeclType	int		3257450	0					
ANR	3257794	Identifier	rc		3257450	1					
ANR	3257795	AssignmentExpression	rc = 1		3257450	2		=			
ANR	3257796	Identifier	rc		3257450	0					
ANR	3257797	PrimaryExpression	1		3257450	1					
ANR	3257798	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3257450	2					
ANR	3257799	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3447:7:91548:91572	3257450	0	True				
ANR	3257800	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3257450	0		==			
ANR	3257801	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3257450	0					
ANR	3257802	ArrayIndexing	result -> argv [ 1 ]		3257450	0					
ANR	3257803	PtrMemberAccess	result -> argv		3257450	0					
ANR	3257804	Identifier	result		3257450	0					
ANR	3257805	Identifier	argv		3257450	1					
ANR	3257806	PrimaryExpression	1		3257450	1					
ANR	3257807	PrimaryExpression	0		3257450	1					
ANR	3257808	PrimaryExpression	'S'		3257450	1					
ANR	3257809	CompoundStatement		63:35:1846:1846	3257450	1					
ANR	3257810	ExpressionStatement	rc = 0	3448:3:91581:91587	3257450	0	True				
ANR	3257811	AssignmentExpression	rc = 0		3257450	0		=			
ANR	3257812	Identifier	rc		3257450	0					
ANR	3257813	PrimaryExpression	0		3257450	1					
ANR	3257814	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3257450	3					
ANR	3257815	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3450:7:91600:91638	3257450	0	True				
ANR	3257816	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3257450	0					
ANR	3257817	Callee	strcasecmp		3257450	0					
ANR	3257818	Identifier	strcasecmp		3257450	0					
ANR	3257819	ArgumentList	result -> argv [ 2 ]		3257450	1					
ANR	3257820	Argument	result -> argv [ 2 ]		3257450	0					
ANR	3257821	ArrayIndexing	result -> argv [ 2 ]		3257450	0					
ANR	3257822	PtrMemberAccess	result -> argv		3257450	0					
ANR	3257823	Identifier	result		3257450	0					
ANR	3257824	Identifier	argv		3257450	1					
ANR	3257825	PrimaryExpression	2		3257450	1					
ANR	3257826	Argument	NULLSTRING		3257450	1					
ANR	3257827	Identifier	NULLSTRING		3257450	0					
ANR	3257828	CompoundStatement		66:49:1912:1912	3257450	1					
ANR	3257829	ExpressionStatement	error_string = result -> argv [ 2 ]	3451:3:91647:91677	3257450	0	True				
ANR	3257830	AssignmentExpression	error_string = result -> argv [ 2 ]		3257450	0		=			
ANR	3257831	Identifier	error_string		3257450	0					
ANR	3257832	ArrayIndexing	result -> argv [ 2 ]		3257450	1					
ANR	3257833	PtrMemberAccess	result -> argv		3257450	0					
ANR	3257834	Identifier	result		3257450	0					
ANR	3257835	Identifier	argv		3257450	1					
ANR	3257836	PrimaryExpression	2		3257450	1					
ANR	3257837	ElseStatement	else		3257450	0					
ANR	3257838	CompoundStatement		68:9:1958:1958	3257450	0					
ANR	3257839	ExpressionStatement	"error_string = """""	3453:3:91693:91710	3257450	0	True				
ANR	3257840	AssignmentExpression	"error_string = """""		3257450	0		=			
ANR	3257841	Identifier	error_string		3257450	0					
ANR	3257842	PrimaryExpression	""""""		3257450	1					
ANR	3257843	Statement	delete	3455:2:91718:91723	3257450	4	True				
ANR	3257844	ExpressionStatement	result	3455:9:91725:91731	3257450	5	True				
ANR	3257845	Identifier	result		3257450	0					
ANR	3257846	ReturnStatement	return rc ;	3456:2:91735:91744	3257450	6	True				
ANR	3257847	Identifier	rc		3257450	0					
ANR	3257848	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3257450	20					
ANR	3257849	Condition	"check_pending_timeout ( command , buf )"	3460:6:91801:91834	3257450	0	True				
ANR	3257850	CallExpression	"check_pending_timeout ( command , buf )"		3257450	0					
ANR	3257851	Callee	check_pending_timeout		3257450	0					
ANR	3257852	Identifier	check_pending_timeout		3257450	0					
ANR	3257853	ArgumentList	command		3257450	1					
ANR	3257854	Argument	command		3257450	0					
ANR	3257855	Identifier	command		3257450	0					
ANR	3257856	Argument	buf		3257450	1					
ANR	3257857	Identifier	buf		3257450	0					
ANR	3257858	CompoundStatement		76:43:2108:2108	3257450	1					
ANR	3257859	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3462:2:91874:91922	3257450	0	True				
ANR	3257860	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3257450	0					
ANR	3257861	Callee	sprintf		3257450	0					
ANR	3257862	Identifier	sprintf		3257450	0					
ANR	3257863	ArgumentList	error_string		3257450	1					
ANR	3257864	Argument	error_string		3257450	0					
ANR	3257865	Identifier	error_string		3257450	0					
ANR	3257866	Argument	"""%s timed out"""		3257450	1					
ANR	3257867	PrimaryExpression	"""%s timed out"""		3257450	0					
ANR	3257868	Argument	command		3257450	2					
ANR	3257869	Identifier	command		3257450	0					
ANR	3257870	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3463:2:91926:91961	3257450	1	True				
ANR	3257871	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3257450	0					
ANR	3257872	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3467:1:92021:92054	3257450	21	True				
ANR	3257873	Identifier	GAHPCLIENT_COMMAND_PENDING		3257450	0					
ANR	3257874	ReturnType	int		3257450	1					
ANR	3257875	Identifier	GahpClient :: condor_job_update_constrained		3257450	2					
ANR	3257876	ParameterList	"const char * schedd_name , const char * constraint , ClassAd * update_ad"		3257450	3					
ANR	3257877	Parameter	const char * schedd_name	3382:42:89636:89658	3257450	0	True				
ANR	3257878	ParameterType	const char *		3257450	0					
ANR	3257879	Identifier	schedd_name		3257450	1					
ANR	3257880	Parameter	const char * constraint	3383:12:89673:89694	3257450	1	True				
ANR	3257881	ParameterType	const char *		3257450	0					
ANR	3257882	Identifier	constraint		3257450	1					
ANR	3257883	Parameter	ClassAd * update_ad	3384:12:89709:89726	3257450	2	True				
ANR	3257884	ParameterType	ClassAd *		3257450	0					
ANR	3257885	Identifier	update_ad		3257450	1					
ANR	3257886	CFGEntryNode	ENTRY		3257450		True				
ANR	3257887	CFGExitNode	EXIT		3257450		True				
ANR	3257888	Symbol	server -> m_commands_supported		3257450						
ANR	3257889	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3257450						
ANR	3257890	Symbol	ad_string		3257450						
ANR	3257891	Symbol	update_ad		3257450						
ANR	3257892	Symbol	sprintf		3257450						
ANR	3257893	Symbol	server -> m_commands_supported -> contains_anycase		3257450						
ANR	3257894	Symbol	GAHPCLIENT_COMMAND_PENDING		3257450						
ANR	3257895	Symbol	useXMLClassads		3257450						
ANR	3257896	Symbol	strcasecmp		3257450						
ANR	3257897	Symbol	ad_string . Value		3257450						
ANR	3257898	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3257450						
ANR	3257899	Symbol	* * result		3257450						
ANR	3257900	Symbol	get_pending_result		3257450						
ANR	3257901	Symbol	rc		3257450						
ANR	3257902	Symbol	schedd_name		3257450						
ANR	3257903	Symbol	true		3257450						
ANR	3257904	Symbol	is_pending		3257450						
ANR	3257905	Symbol	deleg_proxy		3257450						
ANR	3257906	Symbol	server		3257450						
ANR	3257907	Symbol	escapeGahpString		3257450						
ANR	3257908	Symbol	* server		3257450						
ANR	3257909	Symbol	reqline . c_str		3257450						
ANR	3257910	Symbol	results_only		3257450						
ANR	3257911	Symbol	result -> argv		3257450						
ANR	3257912	Symbol	* server -> m_commands_supported		3257450						
ANR	3257913	Symbol	result		3257450						
ANR	3257914	Symbol	* result		3257450						
ANR	3257915	Symbol	reqline		3257450						
ANR	3257916	Symbol	m_mode		3257450						
ANR	3257917	Symbol	* result -> argv		3257450						
ANR	3257918	Symbol	* * * result		3257450						
ANR	3257919	Symbol	false		3257450						
ANR	3257920	Symbol	NULLSTRING		3257450						
ANR	3257921	Symbol	command		3257450						
ANR	3257922	Symbol	* * result -> argv		3257450						
ANR	3257923	Symbol	esc3		3257450						
ANR	3257924	Symbol	error_string		3257450						
ANR	3257925	Symbol	esc2		3257450						
ANR	3257926	Symbol	buf		3257450						
ANR	3257927	Symbol	esc1		3257450						
ANR	3257928	Symbol	x		3257450						
ANR	3257929	Symbol	result -> argc		3257450						
ANR	3257930	Symbol	constraint		3257450						
ANR	3257931	Symbol	* * server		3257450						
ANR	3257932	Symbol	FALSE		3257450						
ANR	3257933	Symbol	unparser		3257450						
ANR	3257934	Symbol	strdup		3257450						
ANR	3257935	Symbol	check_pending_timeout		3257450						
ANR	3257936	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3257450						
ANR	3257937	Function	GahpClient :: condor_job_status_constrained	3470:0:92059:94686							
ANR	3257938	FunctionDef	"GahpClient :: condor_job_status_constrained (const char * schedd_name , const char * constraint , int * num_ads , ClassAd * * * ads)"		3257937	0					
ANR	3257939	CompoundStatement		3474:0:92208:94686	3257937	0					
ANR	3257940	Statement	static	3475:1:92211:92216	3257937	0	True				
ANR	3257941	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_STATUS_CONSTRAINED"" ;"	3475:8:92218:92271	3257937	1	True				
ANR	3257942	IdentifierDecl	"* command = ""CONDOR_JOB_STATUS_CONSTRAINED"""		3257937	0					
ANR	3257943	IdentifierDeclType	const char *		3257937	0					
ANR	3257944	Identifier	command		3257937	1					
ANR	3257945	AssignmentExpression	"* command = ""CONDOR_JOB_STATUS_CONSTRAINED"""		3257937	2		=			
ANR	3257946	Identifier	command		3257937	0					
ANR	3257947	PrimaryExpression	"""CONDOR_JOB_STATUS_CONSTRAINED"""		3257937	1					
ANR	3257948	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3257937	2					
ANR	3257949	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3478:6:92320:92381	3257937	0	True				
ANR	3257950	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3257937	0		==			
ANR	3257951	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3257937	0					
ANR	3257952	Callee	server -> m_commands_supported -> contains_anycase		3257937	0					
ANR	3257953	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3257937	0					
ANR	3257954	PtrMemberAccess	server -> m_commands_supported		3257937	0					
ANR	3257955	Identifier	server		3257937	0					
ANR	3257956	Identifier	m_commands_supported		3257937	1					
ANR	3257957	Identifier	contains_anycase		3257937	1					
ANR	3257958	ArgumentList	command		3257937	1					
ANR	3257959	Argument	command		3257937	0					
ANR	3257960	Identifier	command		3257937	0					
ANR	3257961	Identifier	FALSE		3257937	1					
ANR	3257962	CompoundStatement		5:70:175:175	3257937	1					
ANR	3257963	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3479:2:92388:92427	3257937	0	True				
ANR	3257964	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3257937	0					
ANR	3257965	IfStatement	if ( ! schedd_name )		3257937	3					
ANR	3257966	Condition	! schedd_name	3483:5:92465:92476	3257937	0	True				
ANR	3257967	UnaryOperationExpression	! schedd_name		3257937	0					
ANR	3257968	UnaryOperator	!		3257937	0					
ANR	3257969	Identifier	schedd_name		3257937	1					
ANR	3257970	ExpressionStatement	schedd_name = NULLSTRING	3483:19:92479:92501	3257937	1	True				
ANR	3257971	AssignmentExpression	schedd_name = NULLSTRING		3257937	0		=			
ANR	3257972	Identifier	schedd_name		3257937	0					
ANR	3257973	Identifier	NULLSTRING		3257937	1					
ANR	3257974	IfStatement	if ( ! constraint )		3257937	4					
ANR	3257975	Condition	! constraint	3484:5:92508:92518	3257937	0	True				
ANR	3257976	UnaryOperationExpression	! constraint		3257937	0					
ANR	3257977	UnaryOperator	!		3257937	0					
ANR	3257978	Identifier	constraint		3257937	1					
ANR	3257979	ExpressionStatement	constraint = NULLSTRING	3484:18:92521:92542	3257937	1	True				
ANR	3257980	AssignmentExpression	constraint = NULLSTRING		3257937	0		=			
ANR	3257981	Identifier	constraint		3257937	0					
ANR	3257982	Identifier	NULLSTRING		3257937	1					
ANR	3257983	IdentifierDeclStatement	std :: string reqline ;	3485:1:92545:92564	3257937	5	True				
ANR	3257984	IdentifierDecl	reqline		3257937	0					
ANR	3257985	IdentifierDeclType	std :: string		3257937	0					
ANR	3257986	Identifier	reqline		3257937	1					
ANR	3257987	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3486:1:92567:92619	3257937	6	True				
ANR	3257988	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3257937	0					
ANR	3257989	IdentifierDeclType	char *		3257937	0					
ANR	3257990	Identifier	esc1		3257937	1					
ANR	3257991	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3257937	2		=			
ANR	3257992	Identifier	esc1		3257937	0					
ANR	3257993	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3257937	1					
ANR	3257994	Callee	strdup		3257937	0					
ANR	3257995	Identifier	strdup		3257937	0					
ANR	3257996	ArgumentList	escapeGahpString ( schedd_name )		3257937	1					
ANR	3257997	Argument	escapeGahpString ( schedd_name )		3257937	0					
ANR	3257998	CallExpression	escapeGahpString ( schedd_name )		3257937	0					
ANR	3257999	Callee	escapeGahpString		3257937	0					
ANR	3258000	Identifier	escapeGahpString		3257937	0					
ANR	3258001	ArgumentList	schedd_name		3257937	1					
ANR	3258002	Argument	schedd_name		3257937	0					
ANR	3258003	Identifier	schedd_name		3257937	0					
ANR	3258004	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( constraint ) ) ;	3487:1:92622:92673	3257937	7	True				
ANR	3258005	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( constraint ) )		3257937	0					
ANR	3258006	IdentifierDeclType	char *		3257937	0					
ANR	3258007	Identifier	esc2		3257937	1					
ANR	3258008	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( constraint ) )		3257937	2		=			
ANR	3258009	Identifier	esc2		3257937	0					
ANR	3258010	CallExpression	strdup ( escapeGahpString ( constraint ) )		3257937	1					
ANR	3258011	Callee	strdup		3257937	0					
ANR	3258012	Identifier	strdup		3257937	0					
ANR	3258013	ArgumentList	escapeGahpString ( constraint )		3257937	1					
ANR	3258014	Argument	escapeGahpString ( constraint )		3257937	0					
ANR	3258015	CallExpression	escapeGahpString ( constraint )		3257937	0					
ANR	3258016	Callee	escapeGahpString		3257937	0					
ANR	3258017	Identifier	escapeGahpString		3257937	0					
ANR	3258018	ArgumentList	constraint		3257937	1					
ANR	3258019	Argument	constraint		3257937	0					
ANR	3258020	Identifier	constraint		3257937	0					
ANR	3258021	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	3488:1:92676:92723	3257937	8	True				
ANR	3258022	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3257937	0					
ANR	3258023	IdentifierDeclType	int		3257937	0					
ANR	3258024	Identifier	x		3257937	1					
ANR	3258025	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3257937	2		=			
ANR	3258026	Identifier	x		3257937	0					
ANR	3258027	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3257937	1					
ANR	3258028	Callee	sprintf		3257937	0					
ANR	3258029	Identifier	sprintf		3257937	0					
ANR	3258030	ArgumentList	reqline		3257937	1					
ANR	3258031	Argument	reqline		3257937	0					
ANR	3258032	Identifier	reqline		3257937	0					
ANR	3258033	Argument	"""%s %s"""		3257937	1					
ANR	3258034	PrimaryExpression	"""%s %s"""		3257937	0					
ANR	3258035	Argument	esc1		3257937	2					
ANR	3258036	Identifier	esc1		3257937	0					
ANR	3258037	Argument	esc2		3257937	3					
ANR	3258038	Identifier	esc2		3257937	0					
ANR	3258039	ExpressionStatement	free ( esc1 )	3489:1:92726:92738	3257937	9	True				
ANR	3258040	CallExpression	free ( esc1 )		3257937	0					
ANR	3258041	Callee	free		3257937	0					
ANR	3258042	Identifier	free		3257937	0					
ANR	3258043	ArgumentList	esc1		3257937	1					
ANR	3258044	Argument	esc1		3257937	0					
ANR	3258045	Identifier	esc1		3257937	0					
ANR	3258046	ExpressionStatement	free ( esc2 )	3490:1:92741:92753	3257937	10	True				
ANR	3258047	CallExpression	free ( esc2 )		3257937	0					
ANR	3258048	Callee	free		3257937	0					
ANR	3258049	Identifier	free		3257937	0					
ANR	3258050	ArgumentList	esc2		3257937	1					
ANR	3258051	Argument	esc2		3257937	0					
ANR	3258052	Identifier	esc2		3257937	0					
ANR	3258053	ExpressionStatement	ASSERT ( x > 0 )	3491:1:92756:92771	3257937	11	True				
ANR	3258054	CallExpression	ASSERT ( x > 0 )		3257937	0					
ANR	3258055	Callee	ASSERT		3257937	0					
ANR	3258056	Identifier	ASSERT		3257937	0					
ANR	3258057	ArgumentList	x > 0		3257937	1					
ANR	3258058	Argument	x > 0		3257937	0					
ANR	3258059	RelationalExpression	x > 0		3257937	0		>			
ANR	3258060	Identifier	x		3257937	0					
ANR	3258061	PrimaryExpression	0		3257937	1					
ANR	3258062	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3492:1:92774:92807	3257937	12	True				
ANR	3258063	IdentifierDecl	* buf = reqline . c_str ( )		3257937	0					
ANR	3258064	IdentifierDeclType	const char *		3257937	0					
ANR	3258065	Identifier	buf		3257937	1					
ANR	3258066	AssignmentExpression	* buf = reqline . c_str ( )		3257937	2		=			
ANR	3258067	Identifier	buf		3257937	0					
ANR	3258068	CallExpression	reqline . c_str ( )		3257937	1					
ANR	3258069	Callee	reqline . c_str		3257937	0					
ANR	3258070	MemberAccess	reqline . c_str		3257937	0					
ANR	3258071	Identifier	reqline		3257937	0					
ANR	3258072	Identifier	c_str		3257937	1					
ANR	3258073	ArgumentList			3257937	1					
ANR	3258074	IfStatement	"if ( ! is_pending ( command , buf ) )"		3257937	13					
ANR	3258075	Condition	"! is_pending ( command , buf )"	3496:6:92908:92931	3257937	0	True				
ANR	3258076	UnaryOperationExpression	"! is_pending ( command , buf )"		3257937	0					
ANR	3258077	UnaryOperator	!		3257937	0					
ANR	3258078	CallExpression	"is_pending ( command , buf )"		3257937	1					
ANR	3258079	Callee	is_pending		3257937	0					
ANR	3258080	Identifier	is_pending		3257937	0					
ANR	3258081	ArgumentList	command		3257937	1					
ANR	3258082	Argument	command		3257937	0					
ANR	3258083	Identifier	command		3257937	0					
ANR	3258084	Argument	buf		3257937	1					
ANR	3258085	Identifier	buf		3257937	0					
ANR	3258086	CompoundStatement		23:33:726:726	3257937	1					
ANR	3258087	IfStatement	if ( m_mode == results_only )		3257937	0					
ANR	3258088	Condition	m_mode == results_only	3499:7:93040:93061	3257937	0	True				
ANR	3258089	EqualityExpression	m_mode == results_only		3257937	0		==			
ANR	3258090	Identifier	m_mode		3257937	0					
ANR	3258091	Identifier	results_only		3257937	1					
ANR	3258092	CompoundStatement		26:32:856:856	3257937	1					
ANR	3258093	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3500:3:93070:93109	3257937	0	True				
ANR	3258094	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3257937	0					
ANR	3258095	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3502:2:93117:93153	3257937	1	True				
ANR	3258096	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3257937	0					
ANR	3258097	Callee	now_pending		3257937	0					
ANR	3258098	Identifier	now_pending		3257937	0					
ANR	3258099	ArgumentList	command		3257937	1					
ANR	3258100	Argument	command		3257937	0					
ANR	3258101	Identifier	command		3257937	0					
ANR	3258102	Argument	buf		3257937	1					
ANR	3258103	Identifier	buf		3257937	0					
ANR	3258104	Argument	deleg_proxy		3257937	2					
ANR	3258105	Identifier	deleg_proxy		3257937	0					
ANR	3258106	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3508:1:93247:93298	3257937	14	True				
ANR	3258107	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3257937	0					
ANR	3258108	IdentifierDeclType	Gahp_Args *		3257937	0					
ANR	3258109	Identifier	result		3257937	1					
ANR	3258110	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3257937	2		=			
ANR	3258111	Identifier	result		3257937	0					
ANR	3258112	CallExpression	"get_pending_result ( command , buf )"		3257937	1					
ANR	3258113	Callee	get_pending_result		3257937	0					
ANR	3258114	Identifier	get_pending_result		3257937	0					
ANR	3258115	ArgumentList	command		3257937	1					
ANR	3258116	Argument	command		3257937	0					
ANR	3258117	Identifier	command		3257937	0					
ANR	3258118	Argument	buf		3257937	1					
ANR	3258119	Identifier	buf		3257937	0					
ANR	3258120	IfStatement	if ( result )		3257937	15					
ANR	3258121	Condition	result	3509:6:93306:93311	3257937	0	True				
ANR	3258122	Identifier	result		3257937	0					
ANR	3258123	CompoundStatement		41:2:1200:1210	3257937	1					
ANR	3258124	IfStatement	if ( result -> argc < 4 )		3257937	0					
ANR	3258125	Condition	result -> argc < 4	3511:6:93347:93362	3257937	0	True				
ANR	3258126	RelationalExpression	result -> argc < 4		3257937	0		<			
ANR	3258127	PtrMemberAccess	result -> argc		3257937	0					
ANR	3258128	Identifier	result		3257937	0					
ANR	3258129	Identifier	argc		3257937	1					
ANR	3258130	PrimaryExpression	4		3257937	1					
ANR	3258131	CompoundStatement		38:24:1156:1156	3257937	1					
ANR	3258132	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3512:3:93370:93401	3257937	0	True				
ANR	3258133	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3257937	0					
ANR	3258134	Callee	EXCEPT		3257937	0					
ANR	3258135	Identifier	EXCEPT		3257937	0					
ANR	3258136	ArgumentList	"""Bad %s Result"""		3257937	1					
ANR	3258137	Argument	"""Bad %s Result"""		3257937	0					
ANR	3258138	PrimaryExpression	"""Bad %s Result"""		3257937	0					
ANR	3258139	Argument	command		3257937	1					
ANR	3258140	Identifier	command		3257937	0					
ANR	3258141	IdentifierDeclStatement	int rc = 1 ;	3514:2:93409:93419	3257937	1	True				
ANR	3258142	IdentifierDecl	rc = 1		3257937	0					
ANR	3258143	IdentifierDeclType	int		3257937	0					
ANR	3258144	Identifier	rc		3257937	1					
ANR	3258145	AssignmentExpression	rc = 1		3257937	2		=			
ANR	3258146	Identifier	rc		3257937	0					
ANR	3258147	PrimaryExpression	1		3257937	1					
ANR	3258148	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3257937	2					
ANR	3258149	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3515:7:93428:93452	3257937	0	True				
ANR	3258150	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3257937	0		==			
ANR	3258151	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3257937	0					
ANR	3258152	ArrayIndexing	result -> argv [ 1 ]		3257937	0					
ANR	3258153	PtrMemberAccess	result -> argv		3257937	0					
ANR	3258154	Identifier	result		3257937	0					
ANR	3258155	Identifier	argv		3257937	1					
ANR	3258156	PrimaryExpression	1		3257937	1					
ANR	3258157	PrimaryExpression	0		3257937	1					
ANR	3258158	PrimaryExpression	'S'		3257937	1					
ANR	3258159	CompoundStatement		42:35:1247:1247	3257937	1					
ANR	3258160	ExpressionStatement	rc = 0	3516:3:93461:93467	3257937	0	True				
ANR	3258161	AssignmentExpression	rc = 0		3257937	0		=			
ANR	3258162	Identifier	rc		3257937	0					
ANR	3258163	PrimaryExpression	0		3257937	1					
ANR	3258164	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3257937	3					
ANR	3258165	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3518:7:93480:93518	3257937	0	True				
ANR	3258166	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3257937	0					
ANR	3258167	Callee	strcasecmp		3257937	0					
ANR	3258168	Identifier	strcasecmp		3257937	0					
ANR	3258169	ArgumentList	result -> argv [ 2 ]		3257937	1					
ANR	3258170	Argument	result -> argv [ 2 ]		3257937	0					
ANR	3258171	ArrayIndexing	result -> argv [ 2 ]		3257937	0					
ANR	3258172	PtrMemberAccess	result -> argv		3257937	0					
ANR	3258173	Identifier	result		3257937	0					
ANR	3258174	Identifier	argv		3257937	1					
ANR	3258175	PrimaryExpression	2		3257937	1					
ANR	3258176	Argument	NULLSTRING		3257937	1					
ANR	3258177	Identifier	NULLSTRING		3257937	0					
ANR	3258178	CompoundStatement		45:49:1313:1313	3257937	1					
ANR	3258179	ExpressionStatement	error_string = result -> argv [ 2 ]	3519:3:93527:93557	3257937	0	True				
ANR	3258180	AssignmentExpression	error_string = result -> argv [ 2 ]		3257937	0		=			
ANR	3258181	Identifier	error_string		3257937	0					
ANR	3258182	ArrayIndexing	result -> argv [ 2 ]		3257937	1					
ANR	3258183	PtrMemberAccess	result -> argv		3257937	0					
ANR	3258184	Identifier	result		3257937	0					
ANR	3258185	Identifier	argv		3257937	1					
ANR	3258186	PrimaryExpression	2		3257937	1					
ANR	3258187	ElseStatement	else		3257937	0					
ANR	3258188	CompoundStatement		47:9:1359:1359	3257937	0					
ANR	3258189	ExpressionStatement	"error_string = """""	3521:3:93573:93590	3257937	0	True				
ANR	3258190	AssignmentExpression	"error_string = """""		3257937	0		=			
ANR	3258191	Identifier	error_string		3257937	0					
ANR	3258192	PrimaryExpression	""""""		3257937	1					
ANR	3258193	ExpressionStatement	* num_ads = atoi ( result -> argv [ 3 ] )	3523:2:93598:93630	3257937	4	True				
ANR	3258194	AssignmentExpression	* num_ads = atoi ( result -> argv [ 3 ] )		3257937	0		=			
ANR	3258195	UnaryOperationExpression	* num_ads		3257937	0					
ANR	3258196	UnaryOperator	*		3257937	0					
ANR	3258197	Identifier	num_ads		3257937	1					
ANR	3258198	CallExpression	atoi ( result -> argv [ 3 ] )		3257937	1					
ANR	3258199	Callee	atoi		3257937	0					
ANR	3258200	Identifier	atoi		3257937	0					
ANR	3258201	ArgumentList	result -> argv [ 3 ]		3257937	1					
ANR	3258202	Argument	result -> argv [ 3 ]		3257937	0					
ANR	3258203	ArrayIndexing	result -> argv [ 3 ]		3257937	0					
ANR	3258204	PtrMemberAccess	result -> argv		3257937	0					
ANR	3258205	Identifier	result		3257937	0					
ANR	3258206	Identifier	argv		3257937	1					
ANR	3258207	PrimaryExpression	3		3257937	1					
ANR	3258208	IfStatement	if ( result -> argc != 4 + * num_ads )		3257937	5					
ANR	3258209	Condition	result -> argc != 4 + * num_ads	3524:6:93638:93665	3257937	0	True				
ANR	3258210	EqualityExpression	result -> argc != 4 + * num_ads		3257937	0		!=			
ANR	3258211	PtrMemberAccess	result -> argc		3257937	0					
ANR	3258212	Identifier	result		3257937	0					
ANR	3258213	Identifier	argc		3257937	1					
ANR	3258214	AdditiveExpression	4 + * num_ads		3257937	1		+			
ANR	3258215	PrimaryExpression	4		3257937	0					
ANR	3258216	UnaryOperationExpression	* num_ads		3257937	1					
ANR	3258217	UnaryOperator	*		3257937	0					
ANR	3258218	Identifier	num_ads		3257937	1					
ANR	3258219	CompoundStatement		51:37:1460:1460	3257937	1					
ANR	3258220	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3525:3:93674:93705	3257937	0	True				
ANR	3258221	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3257937	0					
ANR	3258222	Callee	EXCEPT		3257937	0					
ANR	3258223	Identifier	EXCEPT		3257937	0					
ANR	3258224	ArgumentList	"""Bad %s Result"""		3257937	1					
ANR	3258225	Argument	"""Bad %s Result"""		3257937	0					
ANR	3258226	PrimaryExpression	"""Bad %s Result"""		3257937	0					
ANR	3258227	Argument	command		3257937	1					
ANR	3258228	Identifier	command		3257937	0					
ANR	3258229	IfStatement	if ( * num_ads > 0 )		3257937	6					
ANR	3258230	Condition	* num_ads > 0	3527:7:93718:93729	3257937	0	True				
ANR	3258231	RelationalExpression	* num_ads > 0		3257937	0		>			
ANR	3258232	UnaryOperationExpression	* num_ads		3257937	0					
ANR	3258233	UnaryOperator	*		3257937	0					
ANR	3258234	Identifier	num_ads		3257937	1					
ANR	3258235	PrimaryExpression	0		3257937	1					
ANR	3258236	CompoundStatement		56:3:1590:1602	3257937	1					
ANR	3258237	ExpressionStatement	* ads = ( ClassAd * * ) malloc ( * num_ads * sizeof ( ClassAd * ) )	3528:3:93738:93794	3257937	0	True				
ANR	3258238	AssignmentExpression	* ads = ( ClassAd * * ) malloc ( * num_ads * sizeof ( ClassAd * ) )		3257937	0		=			
ANR	3258239	UnaryOperationExpression	* ads		3257937	0					
ANR	3258240	UnaryOperator	*		3257937	0					
ANR	3258241	Identifier	ads		3257937	1					
ANR	3258242	CastExpression	( ClassAd * * ) malloc ( * num_ads * sizeof ( ClassAd * ) )		3257937	1					
ANR	3258243	CastTarget	ClassAd * *		3257937	0					
ANR	3258244	CallExpression	malloc ( * num_ads * sizeof ( ClassAd * ) )		3257937	1					
ANR	3258245	Callee	malloc		3257937	0					
ANR	3258246	Identifier	malloc		3257937	0					
ANR	3258247	ArgumentList	* num_ads * sizeof ( ClassAd * )		3257937	1					
ANR	3258248	Argument	* num_ads * sizeof ( ClassAd * )		3257937	0					
ANR	3258249	MultiplicativeExpression	* num_ads * sizeof ( ClassAd * )		3257937	0		*			
ANR	3258250	UnaryOperationExpression	* num_ads		3257937	0					
ANR	3258251	UnaryOperator	*		3257937	0					
ANR	3258252	Identifier	num_ads		3257937	1					
ANR	3258253	SizeofExpression	sizeof ( ClassAd * )		3257937	1					
ANR	3258254	Sizeof	sizeof		3257937	0					
ANR	3258255	SizeofOperand	ClassAd *		3257937	1					
ANR	3258256	IdentifierDeclStatement	int idst = 0 ;	3529:3:93799:93811	3257937	1	True				
ANR	3258257	IdentifierDecl	idst = 0		3257937	0					
ANR	3258258	IdentifierDeclType	int		3257937	0					
ANR	3258259	Identifier	idst		3257937	1					
ANR	3258260	AssignmentExpression	idst = 0		3257937	2		=			
ANR	3258261	Identifier	idst		3257937	0					
ANR	3258262	PrimaryExpression	0		3257937	1					
ANR	3258263	ForStatement	"for ( int i = 0 ; i < * num_ads ; i ++ , idst ++ )"		3257937	2					
ANR	3258264	ForInit	int i = 0 ;	3530:9:93822:93831	3257937	0	True				
ANR	3258265	IdentifierDeclStatement	int i = 0 ;		3257937	0					
ANR	3258266	IdentifierDecl	i = 0		3257937	0					
ANR	3258267	IdentifierDeclType	int		3257937	0					
ANR	3258268	Identifier	i		3257937	1					
ANR	3258269	AssignmentExpression	i = 0		3257937	2		=			
ANR	3258270	Identifier	i		3257937	0					
ANR	3258271	PrimaryExpression	0		3257937	1					
ANR	3258272	Condition	i < * num_ads	3530:20:93833:93844	3257937	1	True				
ANR	3258273	RelationalExpression	i < * num_ads		3257937	0		<			
ANR	3258274	Identifier	i		3257937	0					
ANR	3258275	UnaryOperationExpression	* num_ads		3257937	1					
ANR	3258276	UnaryOperator	*		3257937	0					
ANR	3258277	Identifier	num_ads		3257937	1					
ANR	3258278	Expression	"i ++ , idst ++"	3530:34:93847:93856	3257937	2	True				
ANR	3258279	PostIncDecOperationExpression	i ++		3257937	0					
ANR	3258280	Identifier	i		3257937	0					
ANR	3258281	IncDec	++		3257937	1					
ANR	3258282	PostIncDecOperationExpression	idst ++		3257937	1					
ANR	3258283	Identifier	idst		3257937	0					
ANR	3258284	IncDec	++		3257937	1					
ANR	3258285	CompoundStatement		57:47:1651:1651	3257937	3					
ANR	3258286	IfStatement	if ( useXMLClassads )		3257937	0					
ANR	3258287	Condition	useXMLClassads	3531:9:93871:93884	3257937	0	True				
ANR	3258288	Identifier	useXMLClassads		3257937	0					
ANR	3258289	CompoundStatement		59:5:1686:1709	3257937	1					
ANR	3258290	IdentifierDeclStatement	ClassAdXMLParser parser ;	3532:5:93895:93918	3257937	0	True				
ANR	3258291	IdentifierDecl	parser		3257937	0					
ANR	3258292	IdentifierDeclType	ClassAdXMLParser		3257937	0					
ANR	3258293	Identifier	parser		3257937	1					
ANR	3258294	ExpressionStatement	( * ads ) [ idst ] = parser . ParseClassAd ( result -> argv [ 4 + i ] )	3533:5:93925:93982	3257937	1	True				
ANR	3258295	AssignmentExpression	( * ads ) [ idst ] = parser . ParseClassAd ( result -> argv [ 4 + i ] )		3257937	0		=			
ANR	3258296	ArrayIndexing	( * ads ) [ idst ]		3257937	0					
ANR	3258297	UnaryOperationExpression	* ads		3257937	0					
ANR	3258298	UnaryOperator	*		3257937	0					
ANR	3258299	Identifier	ads		3257937	1					
ANR	3258300	Identifier	idst		3257937	1					
ANR	3258301	CallExpression	parser . ParseClassAd ( result -> argv [ 4 + i ] )		3257937	1					
ANR	3258302	Callee	parser . ParseClassAd		3257937	0					
ANR	3258303	MemberAccess	parser . ParseClassAd		3257937	0					
ANR	3258304	Identifier	parser		3257937	0					
ANR	3258305	Identifier	ParseClassAd		3257937	1					
ANR	3258306	ArgumentList	result -> argv [ 4 + i ]		3257937	1					
ANR	3258307	Argument	result -> argv [ 4 + i ]		3257937	0					
ANR	3258308	ArrayIndexing	result -> argv [ 4 + i ]		3257937	0					
ANR	3258309	PtrMemberAccess	result -> argv		3257937	0					
ANR	3258310	Identifier	result		3257937	0					
ANR	3258311	Identifier	argv		3257937	1					
ANR	3258312	AdditiveExpression	4 + i		3257937	1		+			
ANR	3258313	PrimaryExpression	4		3257937	0					
ANR	3258314	Identifier	i		3257937	1					
ANR	3258315	ElseStatement	else		3257937	0					
ANR	3258316	CompoundStatement		62:5:1793:1816	3257937	0					
ANR	3258317	IdentifierDeclStatement	NewClassAdParser parser ;	3535:5:94002:94025	3257937	0	True				
ANR	3258318	IdentifierDecl	parser		3257937	0					
ANR	3258319	IdentifierDeclType	NewClassAdParser		3257937	0					
ANR	3258320	Identifier	parser		3257937	1					
ANR	3258321	ExpressionStatement	( * ads ) [ idst ] = parser . ParseClassAd ( result -> argv [ 4 + i ] )	3536:5:94032:94089	3257937	1	True				
ANR	3258322	AssignmentExpression	( * ads ) [ idst ] = parser . ParseClassAd ( result -> argv [ 4 + i ] )		3257937	0		=			
ANR	3258323	ArrayIndexing	( * ads ) [ idst ]		3257937	0					
ANR	3258324	UnaryOperationExpression	* ads		3257937	0					
ANR	3258325	UnaryOperator	*		3257937	0					
ANR	3258326	Identifier	ads		3257937	1					
ANR	3258327	Identifier	idst		3257937	1					
ANR	3258328	CallExpression	parser . ParseClassAd ( result -> argv [ 4 + i ] )		3257937	1					
ANR	3258329	Callee	parser . ParseClassAd		3257937	0					
ANR	3258330	MemberAccess	parser . ParseClassAd		3257937	0					
ANR	3258331	Identifier	parser		3257937	0					
ANR	3258332	Identifier	ParseClassAd		3257937	1					
ANR	3258333	ArgumentList	result -> argv [ 4 + i ]		3257937	1					
ANR	3258334	Argument	result -> argv [ 4 + i ]		3257937	0					
ANR	3258335	ArrayIndexing	result -> argv [ 4 + i ]		3257937	0					
ANR	3258336	PtrMemberAccess	result -> argv		3257937	0					
ANR	3258337	Identifier	result		3257937	0					
ANR	3258338	Identifier	argv		3257937	1					
ANR	3258339	AdditiveExpression	4 + i		3257937	1		+			
ANR	3258340	PrimaryExpression	4		3257937	0					
ANR	3258341	Identifier	i		3257937	1					
ANR	3258342	IfStatement	if ( ( * ads ) [ idst ] == NULL )		3257937	1					
ANR	3258343	Condition	( * ads ) [ idst ] == NULL	3538:8:94105:94124	3257937	0	True				
ANR	3258344	EqualityExpression	( * ads ) [ idst ] == NULL		3257937	0		==			
ANR	3258345	ArrayIndexing	( * ads ) [ idst ]		3257937	0					
ANR	3258346	UnaryOperationExpression	* ads		3257937	0					
ANR	3258347	UnaryOperator	*		3257937	0					
ANR	3258348	Identifier	ads		3257937	1					
ANR	3258349	Identifier	idst		3257937	1					
ANR	3258350	Identifier	NULL		3257937	1					
ANR	3258351	CompoundStatement		65:30:1918:1918	3257937	1					
ANR	3258352	Statement	dprintf	3539:5:94134:94140	3257937	0	True				
ANR	3258353	Statement	(	3539:12:94141:94141	3257937	1	True				
ANR	3258354	Statement	D_ALWAYS	3539:13:94142:94149	3257937	2	True				
ANR	3258355	Statement	","	3539:21:94150:94150	3257937	3	True				
ANR	3258356	Statement	"""ERROR: Condor-C GAHP returned """	3539:23:94152:94183	3257937	4	True				
ANR	3258357	Statement	"""unparsable classad: (#%d) %s\\n"""	3540:6:94191:94222	3257937	5	True				
ANR	3258358	Statement	","	3540:38:94223:94223	3257937	6	True				
ANR	3258359	Statement	i	3540:40:94225:94225	3257937	7	True				
ANR	3258360	Statement	","	3540:41:94226:94226	3257937	8	True				
ANR	3258361	Statement	result	3540:43:94228:94233	3257937	9	True				
ANR	3258362	Statement	->	3540:49:94234:94235	3257937	10	True				
ANR	3258363	Statement	argv	3540:51:94236:94239	3257937	11	True				
ANR	3258364	Statement	[	3540:55:94240:94240	3257937	12	True				
ANR	3258365	Statement	4	3540:56:94241:94241	3257937	13	True				
ANR	3258366	Statement	+	3540:57:94242:94242	3257937	14	True				
ANR	3258367	Statement	i	3540:58:94243:94243	3257937	15	True				
ANR	3258368	Statement	]	3540:59:94244:94244	3257937	16	True				
ANR	3258369	Statement	)	3540:60:94245:94245	3257937	17	True				
ANR	3258370	ExpressionStatement		3540:61:94246:94246	3257937	18	True				
ANR	3258371	ExpressionStatement	idst --	3542:5:94304:94310	3257937	19	True				
ANR	3258372	PostIncDecOperationExpression	idst --		3257937	0					
ANR	3258373	Identifier	idst		3257937	0					
ANR	3258374	IncDec	--		3257937	1					
ANR	3258375	ExpressionStatement	( * num_ads ) --	3543:5:94317:94329	3257937	20	True				
ANR	3258376	PostIncDecOperationExpression	( * num_ads ) --		3257937	0					
ANR	3258377	UnaryOperationExpression	* num_ads		3257937	0					
ANR	3258378	UnaryOperator	*		3257937	0					
ANR	3258379	Identifier	num_ads		3257937	1					
ANR	3258380	IncDec	--		3257937	1					
ANR	3258381	Statement	delete	3547:2:94348:94353	3257937	7	True				
ANR	3258382	ExpressionStatement	result	3547:9:94355:94361	3257937	8	True				
ANR	3258383	Identifier	result		3257937	0					
ANR	3258384	ReturnStatement	return rc ;	3548:2:94365:94374	3257937	9	True				
ANR	3258385	Identifier	rc		3257937	0					
ANR	3258386	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3257937	16					
ANR	3258387	Condition	"check_pending_timeout ( command , buf )"	3552:6:94431:94464	3257937	0	True				
ANR	3258388	CallExpression	"check_pending_timeout ( command , buf )"		3257937	0					
ANR	3258389	Callee	check_pending_timeout		3257937	0					
ANR	3258390	Identifier	check_pending_timeout		3257937	0					
ANR	3258391	ArgumentList	command		3257937	1					
ANR	3258392	Argument	command		3257937	0					
ANR	3258393	Identifier	command		3257937	0					
ANR	3258394	Argument	buf		3257937	1					
ANR	3258395	Identifier	buf		3257937	0					
ANR	3258396	CompoundStatement		79:43:2259:2259	3257937	1					
ANR	3258397	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3554:2:94504:94552	3257937	0	True				
ANR	3258398	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3257937	0					
ANR	3258399	Callee	sprintf		3257937	0					
ANR	3258400	Identifier	sprintf		3257937	0					
ANR	3258401	ArgumentList	error_string		3257937	1					
ANR	3258402	Argument	error_string		3257937	0					
ANR	3258403	Identifier	error_string		3257937	0					
ANR	3258404	Argument	"""%s timed out"""		3257937	1					
ANR	3258405	PrimaryExpression	"""%s timed out"""		3257937	0					
ANR	3258406	Argument	command		3257937	2					
ANR	3258407	Identifier	command		3257937	0					
ANR	3258408	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3555:2:94556:94591	3257937	1	True				
ANR	3258409	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3257937	0					
ANR	3258410	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3559:1:94651:94684	3257937	17	True				
ANR	3258411	Identifier	GAHPCLIENT_COMMAND_PENDING		3257937	0					
ANR	3258412	ReturnType	int		3257937	1					
ANR	3258413	Identifier	GahpClient :: condor_job_status_constrained		3257937	2					
ANR	3258414	ParameterList	"const char * schedd_name , const char * constraint , int * num_ads , ClassAd * * * ads"		3257937	3					
ANR	3258415	Parameter	const char * schedd_name	3471:42:92105:92127	3257937	0	True				
ANR	3258416	ParameterType	const char *		3257937	0					
ANR	3258417	Identifier	schedd_name		3257937	1					
ANR	3258418	Parameter	const char * constraint	3472:12:92142:92163	3257937	1	True				
ANR	3258419	ParameterType	const char *		3257937	0					
ANR	3258420	Identifier	constraint		3257937	1					
ANR	3258421	Parameter	int * num_ads	3473:12:92178:92189	3257937	2	True				
ANR	3258422	ParameterType	int *		3257937	0					
ANR	3258423	Identifier	num_ads		3257937	1					
ANR	3258424	Parameter	ClassAd * * * ads	3473:26:92192:92205	3257937	3	True				
ANR	3258425	ParameterType	ClassAd * * *		3257937	0					
ANR	3258426	Identifier	ads		3257937	1					
ANR	3258427	CFGEntryNode	ENTRY		3257937		True				
ANR	3258428	CFGExitNode	EXIT		3257937		True				
ANR	3258429	Symbol	server -> m_commands_supported		3257937						
ANR	3258430	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3257937						
ANR	3258431	Symbol	* * ads		3257937						
ANR	3258432	Symbol	idst		3257937						
ANR	3258433	Symbol	sprintf		3257937						
ANR	3258434	Symbol	server -> m_commands_supported -> contains_anycase		3257937						
ANR	3258435	Symbol	GAHPCLIENT_COMMAND_PENDING		3257937						
ANR	3258436	Symbol	strcasecmp		3257937						
ANR	3258437	Symbol	useXMLClassads		3257937						
ANR	3258438	Symbol	* num_ads		3257937						
ANR	3258439	Symbol	NULL		3257937						
ANR	3258440	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3257937						
ANR	3258441	Symbol	* * result		3257937						
ANR	3258442	Symbol	parser . ParseClassAd		3257937						
ANR	3258443	Symbol	get_pending_result		3257937						
ANR	3258444	Symbol	ads		3257937						
ANR	3258445	Symbol	rc		3257937						
ANR	3258446	Symbol	parser		3257937						
ANR	3258447	Symbol	schedd_name		3257937						
ANR	3258448	Symbol	num_ads		3257937						
ANR	3258449	Symbol	is_pending		3257937						
ANR	3258450	Symbol	deleg_proxy		3257937						
ANR	3258451	Symbol	server		3257937						
ANR	3258452	Symbol	escapeGahpString		3257937						
ANR	3258453	Symbol	* server		3257937						
ANR	3258454	Symbol	reqline . c_str		3257937						
ANR	3258455	Symbol	results_only		3257937						
ANR	3258456	Symbol	result -> argv		3257937						
ANR	3258457	Symbol	* server -> m_commands_supported		3257937						
ANR	3258458	Symbol	result		3257937						
ANR	3258459	Symbol	* result		3257937						
ANR	3258460	Symbol	reqline		3257937						
ANR	3258461	Symbol	m_mode		3257937						
ANR	3258462	Symbol	* result -> argv		3257937						
ANR	3258463	Symbol	atoi		3257937						
ANR	3258464	Symbol	malloc		3257937						
ANR	3258465	Symbol	* * * result		3257937						
ANR	3258466	Symbol	* ads		3257937						
ANR	3258467	Symbol	i		3257937						
ANR	3258468	Symbol	NULLSTRING		3257937						
ANR	3258469	Symbol	* idst		3257937						
ANR	3258470	Symbol	command		3257937						
ANR	3258471	Symbol	* * result -> argv		3257937						
ANR	3258472	Symbol	error_string		3257937						
ANR	3258473	Symbol	esc2		3257937						
ANR	3258474	Symbol	buf		3257937						
ANR	3258475	Symbol	esc1		3257937						
ANR	3258476	Symbol	* i		3257937						
ANR	3258477	Symbol	x		3257937						
ANR	3258478	Symbol	result -> argc		3257937						
ANR	3258479	Symbol	constraint		3257937						
ANR	3258480	Symbol	* * server		3257937						
ANR	3258481	Symbol	FALSE		3257937						
ANR	3258482	Symbol	strdup		3257937						
ANR	3258483	Symbol	check_pending_timeout		3257937						
ANR	3258484	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3257937						
ANR	3258485	Function	GahpClient :: condor_job_remove	3562:0:94689:96535							
ANR	3258486	FunctionDef	"GahpClient :: condor_job_remove (const char * schedd_name , PROC_ID job_id , const char * reason)"		3258485	0					
ANR	3258487	CompoundStatement		3565:0:94793:96535	3258485	0					
ANR	3258488	Statement	static	3566:1:94796:94801	3258485	0	True				
ANR	3258489	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_REMOVE"" ;"	3566:8:94803:94844	3258485	1	True				
ANR	3258490	IdentifierDecl	"* command = ""CONDOR_JOB_REMOVE"""		3258485	0					
ANR	3258491	IdentifierDeclType	const char *		3258485	0					
ANR	3258492	Identifier	command		3258485	1					
ANR	3258493	AssignmentExpression	"* command = ""CONDOR_JOB_REMOVE"""		3258485	2		=			
ANR	3258494	Identifier	command		3258485	0					
ANR	3258495	PrimaryExpression	"""CONDOR_JOB_REMOVE"""		3258485	1					
ANR	3258496	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3258485	2					
ANR	3258497	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3569:6:94893:94954	3258485	0	True				
ANR	3258498	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3258485	0		==			
ANR	3258499	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3258485	0					
ANR	3258500	Callee	server -> m_commands_supported -> contains_anycase		3258485	0					
ANR	3258501	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3258485	0					
ANR	3258502	PtrMemberAccess	server -> m_commands_supported		3258485	0					
ANR	3258503	Identifier	server		3258485	0					
ANR	3258504	Identifier	m_commands_supported		3258485	1					
ANR	3258505	Identifier	contains_anycase		3258485	1					
ANR	3258506	ArgumentList	command		3258485	1					
ANR	3258507	Argument	command		3258485	0					
ANR	3258508	Identifier	command		3258485	0					
ANR	3258509	Identifier	FALSE		3258485	1					
ANR	3258510	CompoundStatement		5:70:163:163	3258485	1					
ANR	3258511	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3570:2:94961:95000	3258485	0	True				
ANR	3258512	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3258485	0					
ANR	3258513	IfStatement	if ( ! schedd_name )		3258485	3					
ANR	3258514	Condition	! schedd_name	3574:5:95038:95049	3258485	0	True				
ANR	3258515	UnaryOperationExpression	! schedd_name		3258485	0					
ANR	3258516	UnaryOperator	!		3258485	0					
ANR	3258517	Identifier	schedd_name		3258485	1					
ANR	3258518	ExpressionStatement	schedd_name = NULLSTRING	3574:19:95052:95074	3258485	1	True				
ANR	3258519	AssignmentExpression	schedd_name = NULLSTRING		3258485	0		=			
ANR	3258520	Identifier	schedd_name		3258485	0					
ANR	3258521	Identifier	NULLSTRING		3258485	1					
ANR	3258522	IfStatement	if ( ! reason )		3258485	4					
ANR	3258523	Condition	! reason	3575:5:95081:95087	3258485	0	True				
ANR	3258524	UnaryOperationExpression	! reason		3258485	0					
ANR	3258525	UnaryOperator	!		3258485	0					
ANR	3258526	Identifier	reason		3258485	1					
ANR	3258527	ExpressionStatement	reason = NULLSTRING	3575:14:95090:95107	3258485	1	True				
ANR	3258528	AssignmentExpression	reason = NULLSTRING		3258485	0		=			
ANR	3258529	Identifier	reason		3258485	0					
ANR	3258530	Identifier	NULLSTRING		3258485	1					
ANR	3258531	IdentifierDeclStatement	std :: string reqline ;	3576:1:95110:95129	3258485	5	True				
ANR	3258532	IdentifierDecl	reqline		3258485	0					
ANR	3258533	IdentifierDeclType	std :: string		3258485	0					
ANR	3258534	Identifier	reqline		3258485	1					
ANR	3258535	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3577:1:95132:95184	3258485	6	True				
ANR	3258536	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3258485	0					
ANR	3258537	IdentifierDeclType	char *		3258485	0					
ANR	3258538	Identifier	esc1		3258485	1					
ANR	3258539	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3258485	2		=			
ANR	3258540	Identifier	esc1		3258485	0					
ANR	3258541	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3258485	1					
ANR	3258542	Callee	strdup		3258485	0					
ANR	3258543	Identifier	strdup		3258485	0					
ANR	3258544	ArgumentList	escapeGahpString ( schedd_name )		3258485	1					
ANR	3258545	Argument	escapeGahpString ( schedd_name )		3258485	0					
ANR	3258546	CallExpression	escapeGahpString ( schedd_name )		3258485	0					
ANR	3258547	Callee	escapeGahpString		3258485	0					
ANR	3258548	Identifier	escapeGahpString		3258485	0					
ANR	3258549	ArgumentList	schedd_name		3258485	1					
ANR	3258550	Argument	schedd_name		3258485	0					
ANR	3258551	Identifier	schedd_name		3258485	0					
ANR	3258552	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( reason ) ) ;	3578:1:95187:95234	3258485	7	True				
ANR	3258553	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( reason ) )		3258485	0					
ANR	3258554	IdentifierDeclType	char *		3258485	0					
ANR	3258555	Identifier	esc2		3258485	1					
ANR	3258556	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( reason ) )		3258485	2		=			
ANR	3258557	Identifier	esc2		3258485	0					
ANR	3258558	CallExpression	strdup ( escapeGahpString ( reason ) )		3258485	1					
ANR	3258559	Callee	strdup		3258485	0					
ANR	3258560	Identifier	strdup		3258485	0					
ANR	3258561	ArgumentList	escapeGahpString ( reason )		3258485	1					
ANR	3258562	Argument	escapeGahpString ( reason )		3258485	0					
ANR	3258563	CallExpression	escapeGahpString ( reason )		3258485	0					
ANR	3258564	Callee	escapeGahpString		3258485	0					
ANR	3258565	Identifier	escapeGahpString		3258485	0					
ANR	3258566	ArgumentList	reason		3258485	1					
ANR	3258567	Argument	reason		3258485	0					
ANR	3258568	Identifier	reason		3258485	0					
ANR	3258569	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 ) ;"	3579:1:95237:95325	3258485	8	True				
ANR	3258570	IdentifierDecl	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3258485	0					
ANR	3258571	IdentifierDeclType	int		3258485	0					
ANR	3258572	Identifier	x		3258485	1					
ANR	3258573	AssignmentExpression	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3258485	2		=			
ANR	3258574	Identifier	x		3258485	0					
ANR	3258575	CallExpression	"sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3258485	1					
ANR	3258576	Callee	sprintf		3258485	0					
ANR	3258577	Identifier	sprintf		3258485	0					
ANR	3258578	ArgumentList	reqline		3258485	1					
ANR	3258579	Argument	reqline		3258485	0					
ANR	3258580	Identifier	reqline		3258485	0					
ANR	3258581	Argument	"""%s %d.%d %s"""		3258485	1					
ANR	3258582	PrimaryExpression	"""%s %d.%d %s"""		3258485	0					
ANR	3258583	Argument	esc1		3258485	2					
ANR	3258584	Identifier	esc1		3258485	0					
ANR	3258585	Argument	job_id . cluster		3258485	3					
ANR	3258586	MemberAccess	job_id . cluster		3258485	0					
ANR	3258587	Identifier	job_id		3258485	0					
ANR	3258588	Identifier	cluster		3258485	1					
ANR	3258589	Argument	job_id . proc		3258485	4					
ANR	3258590	MemberAccess	job_id . proc		3258485	0					
ANR	3258591	Identifier	job_id		3258485	0					
ANR	3258592	Identifier	proc		3258485	1					
ANR	3258593	Argument	esc2		3258485	5					
ANR	3258594	Identifier	esc2		3258485	0					
ANR	3258595	ExpressionStatement	free ( esc1 )	3581:1:95328:95338	3258485	9	True				
ANR	3258596	CallExpression	free ( esc1 )		3258485	0					
ANR	3258597	Callee	free		3258485	0					
ANR	3258598	Identifier	free		3258485	0					
ANR	3258599	ArgumentList	esc1		3258485	1					
ANR	3258600	Argument	esc1		3258485	0					
ANR	3258601	Identifier	esc1		3258485	0					
ANR	3258602	ExpressionStatement	free ( esc2 )	3582:1:95341:95351	3258485	10	True				
ANR	3258603	CallExpression	free ( esc2 )		3258485	0					
ANR	3258604	Callee	free		3258485	0					
ANR	3258605	Identifier	free		3258485	0					
ANR	3258606	ArgumentList	esc2		3258485	1					
ANR	3258607	Argument	esc2		3258485	0					
ANR	3258608	Identifier	esc2		3258485	0					
ANR	3258609	ExpressionStatement	ASSERT ( x > 0 )	3583:1:95354:95369	3258485	11	True				
ANR	3258610	CallExpression	ASSERT ( x > 0 )		3258485	0					
ANR	3258611	Callee	ASSERT		3258485	0					
ANR	3258612	Identifier	ASSERT		3258485	0					
ANR	3258613	ArgumentList	x > 0		3258485	1					
ANR	3258614	Argument	x > 0		3258485	0					
ANR	3258615	RelationalExpression	x > 0		3258485	0		>			
ANR	3258616	Identifier	x		3258485	0					
ANR	3258617	PrimaryExpression	0		3258485	1					
ANR	3258618	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3584:1:95372:95405	3258485	12	True				
ANR	3258619	IdentifierDecl	* buf = reqline . c_str ( )		3258485	0					
ANR	3258620	IdentifierDeclType	const char *		3258485	0					
ANR	3258621	Identifier	buf		3258485	1					
ANR	3258622	AssignmentExpression	* buf = reqline . c_str ( )		3258485	2		=			
ANR	3258623	Identifier	buf		3258485	0					
ANR	3258624	CallExpression	reqline . c_str ( )		3258485	1					
ANR	3258625	Callee	reqline . c_str		3258485	0					
ANR	3258626	MemberAccess	reqline . c_str		3258485	0					
ANR	3258627	Identifier	reqline		3258485	0					
ANR	3258628	Identifier	c_str		3258485	1					
ANR	3258629	ArgumentList			3258485	1					
ANR	3258630	IfStatement	"if ( ! is_pending ( command , buf ) )"		3258485	13					
ANR	3258631	Condition	"! is_pending ( command , buf )"	3588:6:95506:95529	3258485	0	True				
ANR	3258632	UnaryOperationExpression	"! is_pending ( command , buf )"		3258485	0					
ANR	3258633	UnaryOperator	!		3258485	0					
ANR	3258634	CallExpression	"is_pending ( command , buf )"		3258485	1					
ANR	3258635	Callee	is_pending		3258485	0					
ANR	3258636	Identifier	is_pending		3258485	0					
ANR	3258637	ArgumentList	command		3258485	1					
ANR	3258638	Argument	command		3258485	0					
ANR	3258639	Identifier	command		3258485	0					
ANR	3258640	Argument	buf		3258485	1					
ANR	3258641	Identifier	buf		3258485	0					
ANR	3258642	CompoundStatement		24:33:739:739	3258485	1					
ANR	3258643	IfStatement	if ( m_mode == results_only )		3258485	0					
ANR	3258644	Condition	m_mode == results_only	3591:7:95638:95659	3258485	0	True				
ANR	3258645	EqualityExpression	m_mode == results_only		3258485	0		==			
ANR	3258646	Identifier	m_mode		3258485	0					
ANR	3258647	Identifier	results_only		3258485	1					
ANR	3258648	CompoundStatement		27:32:869:869	3258485	1					
ANR	3258649	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3592:3:95668:95707	3258485	0	True				
ANR	3258650	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3258485	0					
ANR	3258651	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3594:2:95715:95751	3258485	1	True				
ANR	3258652	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3258485	0					
ANR	3258653	Callee	now_pending		3258485	0					
ANR	3258654	Identifier	now_pending		3258485	0					
ANR	3258655	ArgumentList	command		3258485	1					
ANR	3258656	Argument	command		3258485	0					
ANR	3258657	Identifier	command		3258485	0					
ANR	3258658	Argument	buf		3258485	1					
ANR	3258659	Identifier	buf		3258485	0					
ANR	3258660	Argument	deleg_proxy		3258485	2					
ANR	3258661	Identifier	deleg_proxy		3258485	0					
ANR	3258662	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3600:1:95845:95896	3258485	14	True				
ANR	3258663	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3258485	0					
ANR	3258664	IdentifierDeclType	Gahp_Args *		3258485	0					
ANR	3258665	Identifier	result		3258485	1					
ANR	3258666	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3258485	2		=			
ANR	3258667	Identifier	result		3258485	0					
ANR	3258668	CallExpression	"get_pending_result ( command , buf )"		3258485	1					
ANR	3258669	Callee	get_pending_result		3258485	0					
ANR	3258670	Identifier	get_pending_result		3258485	0					
ANR	3258671	ArgumentList	command		3258485	1					
ANR	3258672	Argument	command		3258485	0					
ANR	3258673	Identifier	command		3258485	0					
ANR	3258674	Argument	buf		3258485	1					
ANR	3258675	Identifier	buf		3258485	0					
ANR	3258676	IfStatement	if ( result )		3258485	15					
ANR	3258677	Condition	result	3601:6:95904:95909	3258485	0	True				
ANR	3258678	Identifier	result		3258485	0					
ANR	3258679	CompoundStatement		42:2:1214:1224	3258485	1					
ANR	3258680	IfStatement	if ( result -> argc != 3 )		3258485	0					
ANR	3258681	Condition	result -> argc != 3	3603:6:95945:95961	3258485	0	True				
ANR	3258682	EqualityExpression	result -> argc != 3		3258485	0		!=			
ANR	3258683	PtrMemberAccess	result -> argc		3258485	0					
ANR	3258684	Identifier	result		3258485	0					
ANR	3258685	Identifier	argc		3258485	1					
ANR	3258686	PrimaryExpression	3		3258485	1					
ANR	3258687	CompoundStatement		39:25:1170:1170	3258485	1					
ANR	3258688	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3604:3:95969:96000	3258485	0	True				
ANR	3258689	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3258485	0					
ANR	3258690	Callee	EXCEPT		3258485	0					
ANR	3258691	Identifier	EXCEPT		3258485	0					
ANR	3258692	ArgumentList	"""Bad %s Result"""		3258485	1					
ANR	3258693	Argument	"""Bad %s Result"""		3258485	0					
ANR	3258694	PrimaryExpression	"""Bad %s Result"""		3258485	0					
ANR	3258695	Argument	command		3258485	1					
ANR	3258696	Identifier	command		3258485	0					
ANR	3258697	IdentifierDeclStatement	int rc = 1 ;	3606:2:96008:96018	3258485	1	True				
ANR	3258698	IdentifierDecl	rc = 1		3258485	0					
ANR	3258699	IdentifierDeclType	int		3258485	0					
ANR	3258700	Identifier	rc		3258485	1					
ANR	3258701	AssignmentExpression	rc = 1		3258485	2		=			
ANR	3258702	Identifier	rc		3258485	0					
ANR	3258703	PrimaryExpression	1		3258485	1					
ANR	3258704	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3258485	2					
ANR	3258705	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3607:7:96027:96051	3258485	0	True				
ANR	3258706	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3258485	0		==			
ANR	3258707	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3258485	0					
ANR	3258708	ArrayIndexing	result -> argv [ 1 ]		3258485	0					
ANR	3258709	PtrMemberAccess	result -> argv		3258485	0					
ANR	3258710	Identifier	result		3258485	0					
ANR	3258711	Identifier	argv		3258485	1					
ANR	3258712	PrimaryExpression	1		3258485	1					
ANR	3258713	PrimaryExpression	0		3258485	1					
ANR	3258714	PrimaryExpression	'S'		3258485	1					
ANR	3258715	CompoundStatement		43:35:1261:1261	3258485	1					
ANR	3258716	ExpressionStatement	rc = 0	3608:3:96060:96066	3258485	0	True				
ANR	3258717	AssignmentExpression	rc = 0		3258485	0		=			
ANR	3258718	Identifier	rc		3258485	0					
ANR	3258719	PrimaryExpression	0		3258485	1					
ANR	3258720	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3258485	3					
ANR	3258721	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3610:7:96079:96117	3258485	0	True				
ANR	3258722	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3258485	0					
ANR	3258723	Callee	strcasecmp		3258485	0					
ANR	3258724	Identifier	strcasecmp		3258485	0					
ANR	3258725	ArgumentList	result -> argv [ 2 ]		3258485	1					
ANR	3258726	Argument	result -> argv [ 2 ]		3258485	0					
ANR	3258727	ArrayIndexing	result -> argv [ 2 ]		3258485	0					
ANR	3258728	PtrMemberAccess	result -> argv		3258485	0					
ANR	3258729	Identifier	result		3258485	0					
ANR	3258730	Identifier	argv		3258485	1					
ANR	3258731	PrimaryExpression	2		3258485	1					
ANR	3258732	Argument	NULLSTRING		3258485	1					
ANR	3258733	Identifier	NULLSTRING		3258485	0					
ANR	3258734	CompoundStatement		46:49:1327:1327	3258485	1					
ANR	3258735	ExpressionStatement	error_string = result -> argv [ 2 ]	3611:3:96126:96156	3258485	0	True				
ANR	3258736	AssignmentExpression	error_string = result -> argv [ 2 ]		3258485	0		=			
ANR	3258737	Identifier	error_string		3258485	0					
ANR	3258738	ArrayIndexing	result -> argv [ 2 ]		3258485	1					
ANR	3258739	PtrMemberAccess	result -> argv		3258485	0					
ANR	3258740	Identifier	result		3258485	0					
ANR	3258741	Identifier	argv		3258485	1					
ANR	3258742	PrimaryExpression	2		3258485	1					
ANR	3258743	ElseStatement	else		3258485	0					
ANR	3258744	CompoundStatement		48:9:1373:1373	3258485	0					
ANR	3258745	ExpressionStatement	"error_string = """""	3613:3:96172:96189	3258485	0	True				
ANR	3258746	AssignmentExpression	"error_string = """""		3258485	0		=			
ANR	3258747	Identifier	error_string		3258485	0					
ANR	3258748	PrimaryExpression	""""""		3258485	1					
ANR	3258749	Statement	delete	3615:2:96197:96202	3258485	4	True				
ANR	3258750	ExpressionStatement	result	3615:9:96204:96210	3258485	5	True				
ANR	3258751	Identifier	result		3258485	0					
ANR	3258752	ReturnStatement	return rc ;	3616:2:96214:96223	3258485	6	True				
ANR	3258753	Identifier	rc		3258485	0					
ANR	3258754	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3258485	16					
ANR	3258755	Condition	"check_pending_timeout ( command , buf )"	3620:6:96280:96313	3258485	0	True				
ANR	3258756	CallExpression	"check_pending_timeout ( command , buf )"		3258485	0					
ANR	3258757	Callee	check_pending_timeout		3258485	0					
ANR	3258758	Identifier	check_pending_timeout		3258485	0					
ANR	3258759	ArgumentList	command		3258485	1					
ANR	3258760	Argument	command		3258485	0					
ANR	3258761	Identifier	command		3258485	0					
ANR	3258762	Argument	buf		3258485	1					
ANR	3258763	Identifier	buf		3258485	0					
ANR	3258764	CompoundStatement		56:43:1523:1523	3258485	1					
ANR	3258765	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3622:2:96353:96401	3258485	0	True				
ANR	3258766	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3258485	0					
ANR	3258767	Callee	sprintf		3258485	0					
ANR	3258768	Identifier	sprintf		3258485	0					
ANR	3258769	ArgumentList	error_string		3258485	1					
ANR	3258770	Argument	error_string		3258485	0					
ANR	3258771	Identifier	error_string		3258485	0					
ANR	3258772	Argument	"""%s timed out"""		3258485	1					
ANR	3258773	PrimaryExpression	"""%s timed out"""		3258485	0					
ANR	3258774	Argument	command		3258485	2					
ANR	3258775	Identifier	command		3258485	0					
ANR	3258776	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3623:2:96405:96440	3258485	1	True				
ANR	3258777	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3258485	0					
ANR	3258778	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3627:1:96500:96533	3258485	17	True				
ANR	3258779	Identifier	GAHPCLIENT_COMMAND_PENDING		3258485	0					
ANR	3258780	ReturnType	int		3258485	1					
ANR	3258781	Identifier	GahpClient :: condor_job_remove		3258485	2					
ANR	3258782	ParameterList	"const char * schedd_name , PROC_ID job_id , const char * reason"		3258485	3					
ANR	3258783	Parameter	const char * schedd_name	3563:30:94723:94745	3258485	0	True				
ANR	3258784	ParameterType	const char *		3258485	0					
ANR	3258785	Identifier	schedd_name		3258485	1					
ANR	3258786	Parameter	PROC_ID job_id	3563:55:94748:94761	3258485	1	True				
ANR	3258787	ParameterType	PROC_ID		3258485	0					
ANR	3258788	Identifier	job_id		3258485	1					
ANR	3258789	Parameter	const char * reason	3564:9:94773:94790	3258485	2	True				
ANR	3258790	ParameterType	const char *		3258485	0					
ANR	3258791	Identifier	reason		3258485	1					
ANR	3258792	CFGEntryNode	ENTRY		3258485		True				
ANR	3258793	CFGExitNode	EXIT		3258485		True				
ANR	3258794	Symbol	reason		3258485						
ANR	3258795	Symbol	server		3258485						
ANR	3258796	Symbol	server -> m_commands_supported		3258485						
ANR	3258797	Symbol	escapeGahpString		3258485						
ANR	3258798	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3258485						
ANR	3258799	Symbol	* server		3258485						
ANR	3258800	Symbol	reqline . c_str		3258485						
ANR	3258801	Symbol	results_only		3258485						
ANR	3258802	Symbol	result -> argv		3258485						
ANR	3258803	Symbol	* server -> m_commands_supported		3258485						
ANR	3258804	Symbol	sprintf		3258485						
ANR	3258805	Symbol	result		3258485						
ANR	3258806	Symbol	* result		3258485						
ANR	3258807	Symbol	server -> m_commands_supported -> contains_anycase		3258485						
ANR	3258808	Symbol	GAHPCLIENT_COMMAND_PENDING		3258485						
ANR	3258809	Symbol	reqline		3258485						
ANR	3258810	Symbol	job_id . cluster		3258485						
ANR	3258811	Symbol	m_mode		3258485						
ANR	3258812	Symbol	strcasecmp		3258485						
ANR	3258813	Symbol	* result -> argv		3258485						
ANR	3258814	Symbol	* * * result		3258485						
ANR	3258815	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3258485						
ANR	3258816	Symbol	* * result		3258485						
ANR	3258817	Symbol	NULLSTRING		3258485						
ANR	3258818	Symbol	command		3258485						
ANR	3258819	Symbol	get_pending_result		3258485						
ANR	3258820	Symbol	* * result -> argv		3258485						
ANR	3258821	Symbol	rc		3258485						
ANR	3258822	Symbol	error_string		3258485						
ANR	3258823	Symbol	esc2		3258485						
ANR	3258824	Symbol	job_id . proc		3258485						
ANR	3258825	Symbol	buf		3258485						
ANR	3258826	Symbol	esc1		3258485						
ANR	3258827	Symbol	schedd_name		3258485						
ANR	3258828	Symbol	job_id		3258485						
ANR	3258829	Symbol	x		3258485						
ANR	3258830	Symbol	result -> argc		3258485						
ANR	3258831	Symbol	FALSE		3258485						
ANR	3258832	Symbol	* * server		3258485						
ANR	3258833	Symbol	strdup		3258485						
ANR	3258834	Symbol	check_pending_timeout		3258485						
ANR	3258835	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3258485						
ANR	3258836	Symbol	is_pending		3258485						
ANR	3258837	Symbol	deleg_proxy		3258485						
ANR	3258838	Function	GahpClient :: condor_job_update	3630:0:96538:98879							
ANR	3258839	FunctionDef	"GahpClient :: condor_job_update (const char * schedd_name , PROC_ID job_id , ClassAd * update_ad)"		3258838	0					
ANR	3258840	CompoundStatement		3633:0:96642:98879	3258838	0					
ANR	3258841	Statement	static	3634:1:96645:96650	3258838	0	True				
ANR	3258842	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_UPDATE"" ;"	3634:8:96652:96693	3258838	1	True				
ANR	3258843	IdentifierDecl	"* command = ""CONDOR_JOB_UPDATE"""		3258838	0					
ANR	3258844	IdentifierDeclType	const char *		3258838	0					
ANR	3258845	Identifier	command		3258838	1					
ANR	3258846	AssignmentExpression	"* command = ""CONDOR_JOB_UPDATE"""		3258838	2		=			
ANR	3258847	Identifier	command		3258838	0					
ANR	3258848	PrimaryExpression	"""CONDOR_JOB_UPDATE"""		3258838	1					
ANR	3258849	IdentifierDeclStatement	MyString ad_string ;	3636:1:96697:96715	3258838	2	True				
ANR	3258850	IdentifierDecl	ad_string		3258838	0					
ANR	3258851	IdentifierDeclType	MyString		3258838	0					
ANR	3258852	Identifier	ad_string		3258838	1					
ANR	3258853	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3258838	3					
ANR	3258854	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3639:6:96764:96825	3258838	0	True				
ANR	3258855	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3258838	0		==			
ANR	3258856	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3258838	0					
ANR	3258857	Callee	server -> m_commands_supported -> contains_anycase		3258838	0					
ANR	3258858	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3258838	0					
ANR	3258859	PtrMemberAccess	server -> m_commands_supported		3258838	0					
ANR	3258860	Identifier	server		3258838	0					
ANR	3258861	Identifier	m_commands_supported		3258838	1					
ANR	3258862	Identifier	contains_anycase		3258838	1					
ANR	3258863	ArgumentList	command		3258838	1					
ANR	3258864	Argument	command		3258838	0					
ANR	3258865	Identifier	command		3258838	0					
ANR	3258866	Identifier	FALSE		3258838	1					
ANR	3258867	CompoundStatement		7:70:185:185	3258838	1					
ANR	3258868	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3640:2:96832:96871	3258838	0	True				
ANR	3258869	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3258838	0					
ANR	3258870	IfStatement	if ( ! schedd_name )		3258838	4					
ANR	3258871	Condition	! schedd_name	3644:5:96909:96920	3258838	0	True				
ANR	3258872	UnaryOperationExpression	! schedd_name		3258838	0					
ANR	3258873	UnaryOperator	!		3258838	0					
ANR	3258874	Identifier	schedd_name		3258838	1					
ANR	3258875	ExpressionStatement	schedd_name = NULLSTRING	3644:19:96923:96945	3258838	1	True				
ANR	3258876	AssignmentExpression	schedd_name = NULLSTRING		3258838	0		=			
ANR	3258877	Identifier	schedd_name		3258838	0					
ANR	3258878	Identifier	NULLSTRING		3258838	1					
ANR	3258879	IfStatement	if ( ! update_ad )		3258838	5					
ANR	3258880	Condition	! update_ad	3645:5:96952:96961	3258838	0	True				
ANR	3258881	UnaryOperationExpression	! update_ad		3258838	0					
ANR	3258882	UnaryOperator	!		3258838	0					
ANR	3258883	Identifier	update_ad		3258838	1					
ANR	3258884	CompoundStatement		13:17:321:321	3258838	1					
ANR	3258885	ExpressionStatement	ad_string = NULLSTRING	3646:2:96968:96988	3258838	0	True				
ANR	3258886	AssignmentExpression	ad_string = NULLSTRING		3258838	0		=			
ANR	3258887	Identifier	ad_string		3258838	0					
ANR	3258888	Identifier	NULLSTRING		3258838	1					
ANR	3258889	ElseStatement	else		3258838	0					
ANR	3258890	CompoundStatement		15:8:355:355	3258838	0					
ANR	3258891	IfStatement	if ( useXMLClassads )		3258838	0					
ANR	3258892	Condition	useXMLClassads	3648:7:97007:97020	3258838	0	True				
ANR	3258893	Identifier	useXMLClassads		3258838	0					
ANR	3258894	CompoundStatement		17:3:386:413	3258838	1					
ANR	3258895	IdentifierDeclStatement	ClassAdXMLUnparser unparser ;	3649:3:97029:97056	3258838	0	True				
ANR	3258896	IdentifierDecl	unparser		3258838	0					
ANR	3258897	IdentifierDeclType	ClassAdXMLUnparser		3258838	0					
ANR	3258898	Identifier	unparser		3258838	1					
ANR	3258899	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3650:3:97061:97098	3258838	1	True				
ANR	3258900	CallExpression	unparser . SetUseCompactSpacing ( true )		3258838	0					
ANR	3258901	Callee	unparser . SetUseCompactSpacing		3258838	0					
ANR	3258902	MemberAccess	unparser . SetUseCompactSpacing		3258838	0					
ANR	3258903	Identifier	unparser		3258838	0					
ANR	3258904	Identifier	SetUseCompactSpacing		3258838	1					
ANR	3258905	ArgumentList	true		3258838	1					
ANR	3258906	Argument	true		3258838	0					
ANR	3258907	Identifier	true		3258838	0					
ANR	3258908	ExpressionStatement	unparser . SetOutputType ( false )	3651:3:97103:97134	3258838	2	True				
ANR	3258909	CallExpression	unparser . SetOutputType ( false )		3258838	0					
ANR	3258910	Callee	unparser . SetOutputType		3258838	0					
ANR	3258911	MemberAccess	unparser . SetOutputType		3258838	0					
ANR	3258912	Identifier	unparser		3258838	0					
ANR	3258913	Identifier	SetOutputType		3258838	1					
ANR	3258914	ArgumentList	false		3258838	1					
ANR	3258915	Argument	false		3258838	0					
ANR	3258916	Identifier	false		3258838	0					
ANR	3258917	ExpressionStatement	unparser . SetOutputTargetType ( false )	3652:3:97139:97176	3258838	3	True				
ANR	3258918	CallExpression	unparser . SetOutputTargetType ( false )		3258838	0					
ANR	3258919	Callee	unparser . SetOutputTargetType		3258838	0					
ANR	3258920	MemberAccess	unparser . SetOutputTargetType		3258838	0					
ANR	3258921	Identifier	unparser		3258838	0					
ANR	3258922	Identifier	SetOutputTargetType		3258838	1					
ANR	3258923	ArgumentList	false		3258838	1					
ANR	3258924	Argument	false		3258838	0					
ANR	3258925	Identifier	false		3258838	0					
ANR	3258926	ExpressionStatement	"unparser . Unparse ( update_ad , ad_string )"	3653:3:97181:97221	3258838	4	True				
ANR	3258927	CallExpression	"unparser . Unparse ( update_ad , ad_string )"		3258838	0					
ANR	3258928	Callee	unparser . Unparse		3258838	0					
ANR	3258929	MemberAccess	unparser . Unparse		3258838	0					
ANR	3258930	Identifier	unparser		3258838	0					
ANR	3258931	Identifier	Unparse		3258838	1					
ANR	3258932	ArgumentList	update_ad		3258838	1					
ANR	3258933	Argument	update_ad		3258838	0					
ANR	3258934	Identifier	update_ad		3258838	0					
ANR	3258935	Argument	ad_string		3258838	1					
ANR	3258936	Identifier	ad_string		3258838	0					
ANR	3258937	ElseStatement	else		3258838	0					
ANR	3258938	CompoundStatement		23:3:594:621	3258838	0					
ANR	3258939	IdentifierDeclStatement	NewClassAdUnparser unparser ;	3655:3:97237:97264	3258838	0	True				
ANR	3258940	IdentifierDecl	unparser		3258838	0					
ANR	3258941	IdentifierDeclType	NewClassAdUnparser		3258838	0					
ANR	3258942	Identifier	unparser		3258838	1					
ANR	3258943	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3656:3:97269:97306	3258838	1	True				
ANR	3258944	CallExpression	unparser . SetUseCompactSpacing ( true )		3258838	0					
ANR	3258945	Callee	unparser . SetUseCompactSpacing		3258838	0					
ANR	3258946	MemberAccess	unparser . SetUseCompactSpacing		3258838	0					
ANR	3258947	Identifier	unparser		3258838	0					
ANR	3258948	Identifier	SetUseCompactSpacing		3258838	1					
ANR	3258949	ArgumentList	true		3258838	1					
ANR	3258950	Argument	true		3258838	0					
ANR	3258951	Identifier	true		3258838	0					
ANR	3258952	ExpressionStatement	unparser . SetOutputType ( false )	3657:3:97311:97342	3258838	2	True				
ANR	3258953	CallExpression	unparser . SetOutputType ( false )		3258838	0					
ANR	3258954	Callee	unparser . SetOutputType		3258838	0					
ANR	3258955	MemberAccess	unparser . SetOutputType		3258838	0					
ANR	3258956	Identifier	unparser		3258838	0					
ANR	3258957	Identifier	SetOutputType		3258838	1					
ANR	3258958	ArgumentList	false		3258838	1					
ANR	3258959	Argument	false		3258838	0					
ANR	3258960	Identifier	false		3258838	0					
ANR	3258961	ExpressionStatement	unparser . SetOutputTargetType ( false )	3658:3:97347:97384	3258838	3	True				
ANR	3258962	CallExpression	unparser . SetOutputTargetType ( false )		3258838	0					
ANR	3258963	Callee	unparser . SetOutputTargetType		3258838	0					
ANR	3258964	MemberAccess	unparser . SetOutputTargetType		3258838	0					
ANR	3258965	Identifier	unparser		3258838	0					
ANR	3258966	Identifier	SetOutputTargetType		3258838	1					
ANR	3258967	ArgumentList	false		3258838	1					
ANR	3258968	Argument	false		3258838	0					
ANR	3258969	Identifier	false		3258838	0					
ANR	3258970	ExpressionStatement	"unparser . Unparse ( update_ad , ad_string )"	3659:3:97389:97429	3258838	4	True				
ANR	3258971	CallExpression	"unparser . Unparse ( update_ad , ad_string )"		3258838	0					
ANR	3258972	Callee	unparser . Unparse		3258838	0					
ANR	3258973	MemberAccess	unparser . Unparse		3258838	0					
ANR	3258974	Identifier	unparser		3258838	0					
ANR	3258975	Identifier	Unparse		3258838	1					
ANR	3258976	ArgumentList	update_ad		3258838	1					
ANR	3258977	Argument	update_ad		3258838	0					
ANR	3258978	Identifier	update_ad		3258838	0					
ANR	3258979	Argument	ad_string		3258838	1					
ANR	3258980	Identifier	ad_string		3258838	0					
ANR	3258981	IdentifierDeclStatement	std :: string reqline ;	3662:1:97439:97458	3258838	6	True				
ANR	3258982	IdentifierDecl	reqline		3258838	0					
ANR	3258983	IdentifierDeclType	std :: string		3258838	0					
ANR	3258984	Identifier	reqline		3258838	1					
ANR	3258985	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3663:1:97461:97513	3258838	7	True				
ANR	3258986	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3258838	0					
ANR	3258987	IdentifierDeclType	char *		3258838	0					
ANR	3258988	Identifier	esc1		3258838	1					
ANR	3258989	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3258838	2		=			
ANR	3258990	Identifier	esc1		3258838	0					
ANR	3258991	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3258838	1					
ANR	3258992	Callee	strdup		3258838	0					
ANR	3258993	Identifier	strdup		3258838	0					
ANR	3258994	ArgumentList	escapeGahpString ( schedd_name )		3258838	1					
ANR	3258995	Argument	escapeGahpString ( schedd_name )		3258838	0					
ANR	3258996	CallExpression	escapeGahpString ( schedd_name )		3258838	0					
ANR	3258997	Callee	escapeGahpString		3258838	0					
ANR	3258998	Identifier	escapeGahpString		3258838	0					
ANR	3258999	ArgumentList	schedd_name		3258838	1					
ANR	3259000	Argument	schedd_name		3258838	0					
ANR	3259001	Identifier	schedd_name		3258838	0					
ANR	3259002	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) ) ;	3664:1:97516:97574	3258838	8	True				
ANR	3259003	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3258838	0					
ANR	3259004	IdentifierDeclType	char *		3258838	0					
ANR	3259005	Identifier	esc2		3258838	1					
ANR	3259006	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3258838	2		=			
ANR	3259007	Identifier	esc2		3258838	0					
ANR	3259008	CallExpression	strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3258838	1					
ANR	3259009	Callee	strdup		3258838	0					
ANR	3259010	Identifier	strdup		3258838	0					
ANR	3259011	ArgumentList	escapeGahpString ( ad_string . Value ( ) )		3258838	1					
ANR	3259012	Argument	escapeGahpString ( ad_string . Value ( ) )		3258838	0					
ANR	3259013	CallExpression	escapeGahpString ( ad_string . Value ( ) )		3258838	0					
ANR	3259014	Callee	escapeGahpString		3258838	0					
ANR	3259015	Identifier	escapeGahpString		3258838	0					
ANR	3259016	ArgumentList	ad_string . Value ( )		3258838	1					
ANR	3259017	Argument	ad_string . Value ( )		3258838	0					
ANR	3259018	CallExpression	ad_string . Value ( )		3258838	0					
ANR	3259019	Callee	ad_string . Value		3258838	0					
ANR	3259020	MemberAccess	ad_string . Value		3258838	0					
ANR	3259021	Identifier	ad_string		3258838	0					
ANR	3259022	Identifier	Value		3258838	1					
ANR	3259023	ArgumentList			3258838	1					
ANR	3259024	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 ) ;"	3665:1:97577:97665	3258838	9	True				
ANR	3259025	IdentifierDecl	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3258838	0					
ANR	3259026	IdentifierDeclType	int		3258838	0					
ANR	3259027	Identifier	x		3258838	1					
ANR	3259028	AssignmentExpression	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3258838	2		=			
ANR	3259029	Identifier	x		3258838	0					
ANR	3259030	CallExpression	"sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3258838	1					
ANR	3259031	Callee	sprintf		3258838	0					
ANR	3259032	Identifier	sprintf		3258838	0					
ANR	3259033	ArgumentList	reqline		3258838	1					
ANR	3259034	Argument	reqline		3258838	0					
ANR	3259035	Identifier	reqline		3258838	0					
ANR	3259036	Argument	"""%s %d.%d %s"""		3258838	1					
ANR	3259037	PrimaryExpression	"""%s %d.%d %s"""		3258838	0					
ANR	3259038	Argument	esc1		3258838	2					
ANR	3259039	Identifier	esc1		3258838	0					
ANR	3259040	Argument	job_id . cluster		3258838	3					
ANR	3259041	MemberAccess	job_id . cluster		3258838	0					
ANR	3259042	Identifier	job_id		3258838	0					
ANR	3259043	Identifier	cluster		3258838	1					
ANR	3259044	Argument	job_id . proc		3258838	4					
ANR	3259045	MemberAccess	job_id . proc		3258838	0					
ANR	3259046	Identifier	job_id		3258838	0					
ANR	3259047	Identifier	proc		3258838	1					
ANR	3259048	Argument	esc2		3258838	5					
ANR	3259049	Identifier	esc2		3258838	0					
ANR	3259050	ExpressionStatement	free ( esc1 )	3667:1:97668:97680	3258838	10	True				
ANR	3259051	CallExpression	free ( esc1 )		3258838	0					
ANR	3259052	Callee	free		3258838	0					
ANR	3259053	Identifier	free		3258838	0					
ANR	3259054	ArgumentList	esc1		3258838	1					
ANR	3259055	Argument	esc1		3258838	0					
ANR	3259056	Identifier	esc1		3258838	0					
ANR	3259057	ExpressionStatement	free ( esc2 )	3668:1:97683:97695	3258838	11	True				
ANR	3259058	CallExpression	free ( esc2 )		3258838	0					
ANR	3259059	Callee	free		3258838	0					
ANR	3259060	Identifier	free		3258838	0					
ANR	3259061	ArgumentList	esc2		3258838	1					
ANR	3259062	Argument	esc2		3258838	0					
ANR	3259063	Identifier	esc2		3258838	0					
ANR	3259064	ExpressionStatement	ASSERT ( x > 0 )	3669:1:97698:97713	3258838	12	True				
ANR	3259065	CallExpression	ASSERT ( x > 0 )		3258838	0					
ANR	3259066	Callee	ASSERT		3258838	0					
ANR	3259067	Identifier	ASSERT		3258838	0					
ANR	3259068	ArgumentList	x > 0		3258838	1					
ANR	3259069	Argument	x > 0		3258838	0					
ANR	3259070	RelationalExpression	x > 0		3258838	0		>			
ANR	3259071	Identifier	x		3258838	0					
ANR	3259072	PrimaryExpression	0		3258838	1					
ANR	3259073	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3670:1:97716:97749	3258838	13	True				
ANR	3259074	IdentifierDecl	* buf = reqline . c_str ( )		3258838	0					
ANR	3259075	IdentifierDeclType	const char *		3258838	0					
ANR	3259076	Identifier	buf		3258838	1					
ANR	3259077	AssignmentExpression	* buf = reqline . c_str ( )		3258838	2		=			
ANR	3259078	Identifier	buf		3258838	0					
ANR	3259079	CallExpression	reqline . c_str ( )		3258838	1					
ANR	3259080	Callee	reqline . c_str		3258838	0					
ANR	3259081	MemberAccess	reqline . c_str		3258838	0					
ANR	3259082	Identifier	reqline		3258838	0					
ANR	3259083	Identifier	c_str		3258838	1					
ANR	3259084	ArgumentList			3258838	1					
ANR	3259085	IfStatement	"if ( ! is_pending ( command , buf ) )"		3258838	14					
ANR	3259086	Condition	"! is_pending ( command , buf )"	3674:6:97850:97873	3258838	0	True				
ANR	3259087	UnaryOperationExpression	"! is_pending ( command , buf )"		3258838	0					
ANR	3259088	UnaryOperator	!		3258838	0					
ANR	3259089	CallExpression	"is_pending ( command , buf )"		3258838	1					
ANR	3259090	Callee	is_pending		3258838	0					
ANR	3259091	Identifier	is_pending		3258838	0					
ANR	3259092	ArgumentList	command		3258838	1					
ANR	3259093	Argument	command		3258838	0					
ANR	3259094	Identifier	command		3258838	0					
ANR	3259095	Argument	buf		3258838	1					
ANR	3259096	Identifier	buf		3258838	0					
ANR	3259097	CompoundStatement		42:33:1234:1234	3258838	1					
ANR	3259098	IfStatement	if ( m_mode == results_only )		3258838	0					
ANR	3259099	Condition	m_mode == results_only	3677:7:97982:98003	3258838	0	True				
ANR	3259100	EqualityExpression	m_mode == results_only		3258838	0		==			
ANR	3259101	Identifier	m_mode		3258838	0					
ANR	3259102	Identifier	results_only		3258838	1					
ANR	3259103	CompoundStatement		45:32:1364:1364	3258838	1					
ANR	3259104	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3678:3:98012:98051	3258838	0	True				
ANR	3259105	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3258838	0					
ANR	3259106	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3680:2:98059:98095	3258838	1	True				
ANR	3259107	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3258838	0					
ANR	3259108	Callee	now_pending		3258838	0					
ANR	3259109	Identifier	now_pending		3258838	0					
ANR	3259110	ArgumentList	command		3258838	1					
ANR	3259111	Argument	command		3258838	0					
ANR	3259112	Identifier	command		3258838	0					
ANR	3259113	Argument	buf		3258838	1					
ANR	3259114	Identifier	buf		3258838	0					
ANR	3259115	Argument	deleg_proxy		3258838	2					
ANR	3259116	Identifier	deleg_proxy		3258838	0					
ANR	3259117	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3686:1:98189:98240	3258838	15	True				
ANR	3259118	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3258838	0					
ANR	3259119	IdentifierDeclType	Gahp_Args *		3258838	0					
ANR	3259120	Identifier	result		3258838	1					
ANR	3259121	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3258838	2		=			
ANR	3259122	Identifier	result		3258838	0					
ANR	3259123	CallExpression	"get_pending_result ( command , buf )"		3258838	1					
ANR	3259124	Callee	get_pending_result		3258838	0					
ANR	3259125	Identifier	get_pending_result		3258838	0					
ANR	3259126	ArgumentList	command		3258838	1					
ANR	3259127	Argument	command		3258838	0					
ANR	3259128	Identifier	command		3258838	0					
ANR	3259129	Argument	buf		3258838	1					
ANR	3259130	Identifier	buf		3258838	0					
ANR	3259131	IfStatement	if ( result )		3258838	16					
ANR	3259132	Condition	result	3687:6:98248:98253	3258838	0	True				
ANR	3259133	Identifier	result		3258838	0					
ANR	3259134	CompoundStatement		60:2:1709:1719	3258838	1					
ANR	3259135	IfStatement	if ( result -> argc != 3 )		3258838	0					
ANR	3259136	Condition	result -> argc != 3	3689:6:98289:98305	3258838	0	True				
ANR	3259137	EqualityExpression	result -> argc != 3		3258838	0		!=			
ANR	3259138	PtrMemberAccess	result -> argc		3258838	0					
ANR	3259139	Identifier	result		3258838	0					
ANR	3259140	Identifier	argc		3258838	1					
ANR	3259141	PrimaryExpression	3		3258838	1					
ANR	3259142	CompoundStatement		57:25:1665:1665	3258838	1					
ANR	3259143	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3690:3:98313:98344	3258838	0	True				
ANR	3259144	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3258838	0					
ANR	3259145	Callee	EXCEPT		3258838	0					
ANR	3259146	Identifier	EXCEPT		3258838	0					
ANR	3259147	ArgumentList	"""Bad %s Result"""		3258838	1					
ANR	3259148	Argument	"""Bad %s Result"""		3258838	0					
ANR	3259149	PrimaryExpression	"""Bad %s Result"""		3258838	0					
ANR	3259150	Argument	command		3258838	1					
ANR	3259151	Identifier	command		3258838	0					
ANR	3259152	IdentifierDeclStatement	int rc = 1 ;	3692:2:98352:98362	3258838	1	True				
ANR	3259153	IdentifierDecl	rc = 1		3258838	0					
ANR	3259154	IdentifierDeclType	int		3258838	0					
ANR	3259155	Identifier	rc		3258838	1					
ANR	3259156	AssignmentExpression	rc = 1		3258838	2		=			
ANR	3259157	Identifier	rc		3258838	0					
ANR	3259158	PrimaryExpression	1		3258838	1					
ANR	3259159	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3258838	2					
ANR	3259160	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3693:7:98371:98395	3258838	0	True				
ANR	3259161	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3258838	0		==			
ANR	3259162	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3258838	0					
ANR	3259163	ArrayIndexing	result -> argv [ 1 ]		3258838	0					
ANR	3259164	PtrMemberAccess	result -> argv		3258838	0					
ANR	3259165	Identifier	result		3258838	0					
ANR	3259166	Identifier	argv		3258838	1					
ANR	3259167	PrimaryExpression	1		3258838	1					
ANR	3259168	PrimaryExpression	0		3258838	1					
ANR	3259169	PrimaryExpression	'S'		3258838	1					
ANR	3259170	CompoundStatement		61:35:1756:1756	3258838	1					
ANR	3259171	ExpressionStatement	rc = 0	3694:3:98404:98410	3258838	0	True				
ANR	3259172	AssignmentExpression	rc = 0		3258838	0		=			
ANR	3259173	Identifier	rc		3258838	0					
ANR	3259174	PrimaryExpression	0		3258838	1					
ANR	3259175	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3258838	3					
ANR	3259176	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3696:7:98423:98461	3258838	0	True				
ANR	3259177	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3258838	0					
ANR	3259178	Callee	strcasecmp		3258838	0					
ANR	3259179	Identifier	strcasecmp		3258838	0					
ANR	3259180	ArgumentList	result -> argv [ 2 ]		3258838	1					
ANR	3259181	Argument	result -> argv [ 2 ]		3258838	0					
ANR	3259182	ArrayIndexing	result -> argv [ 2 ]		3258838	0					
ANR	3259183	PtrMemberAccess	result -> argv		3258838	0					
ANR	3259184	Identifier	result		3258838	0					
ANR	3259185	Identifier	argv		3258838	1					
ANR	3259186	PrimaryExpression	2		3258838	1					
ANR	3259187	Argument	NULLSTRING		3258838	1					
ANR	3259188	Identifier	NULLSTRING		3258838	0					
ANR	3259189	CompoundStatement		64:49:1822:1822	3258838	1					
ANR	3259190	ExpressionStatement	error_string = result -> argv [ 2 ]	3697:3:98470:98500	3258838	0	True				
ANR	3259191	AssignmentExpression	error_string = result -> argv [ 2 ]		3258838	0		=			
ANR	3259192	Identifier	error_string		3258838	0					
ANR	3259193	ArrayIndexing	result -> argv [ 2 ]		3258838	1					
ANR	3259194	PtrMemberAccess	result -> argv		3258838	0					
ANR	3259195	Identifier	result		3258838	0					
ANR	3259196	Identifier	argv		3258838	1					
ANR	3259197	PrimaryExpression	2		3258838	1					
ANR	3259198	ElseStatement	else		3258838	0					
ANR	3259199	CompoundStatement		66:9:1868:1868	3258838	0					
ANR	3259200	ExpressionStatement	"error_string = """""	3699:3:98516:98533	3258838	0	True				
ANR	3259201	AssignmentExpression	"error_string = """""		3258838	0		=			
ANR	3259202	Identifier	error_string		3258838	0					
ANR	3259203	PrimaryExpression	""""""		3258838	1					
ANR	3259204	Statement	delete	3701:2:98541:98546	3258838	4	True				
ANR	3259205	ExpressionStatement	result	3701:9:98548:98554	3258838	5	True				
ANR	3259206	Identifier	result		3258838	0					
ANR	3259207	ReturnStatement	return rc ;	3702:2:98558:98567	3258838	6	True				
ANR	3259208	Identifier	rc		3258838	0					
ANR	3259209	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3258838	17					
ANR	3259210	Condition	"check_pending_timeout ( command , buf )"	3706:6:98624:98657	3258838	0	True				
ANR	3259211	CallExpression	"check_pending_timeout ( command , buf )"		3258838	0					
ANR	3259212	Callee	check_pending_timeout		3258838	0					
ANR	3259213	Identifier	check_pending_timeout		3258838	0					
ANR	3259214	ArgumentList	command		3258838	1					
ANR	3259215	Argument	command		3258838	0					
ANR	3259216	Identifier	command		3258838	0					
ANR	3259217	Argument	buf		3258838	1					
ANR	3259218	Identifier	buf		3258838	0					
ANR	3259219	CompoundStatement		74:43:2018:2018	3258838	1					
ANR	3259220	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3708:2:98697:98745	3258838	0	True				
ANR	3259221	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3258838	0					
ANR	3259222	Callee	sprintf		3258838	0					
ANR	3259223	Identifier	sprintf		3258838	0					
ANR	3259224	ArgumentList	error_string		3258838	1					
ANR	3259225	Argument	error_string		3258838	0					
ANR	3259226	Identifier	error_string		3258838	0					
ANR	3259227	Argument	"""%s timed out"""		3258838	1					
ANR	3259228	PrimaryExpression	"""%s timed out"""		3258838	0					
ANR	3259229	Argument	command		3258838	2					
ANR	3259230	Identifier	command		3258838	0					
ANR	3259231	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3709:2:98749:98784	3258838	1	True				
ANR	3259232	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3258838	0					
ANR	3259233	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3713:1:98844:98877	3258838	18	True				
ANR	3259234	Identifier	GAHPCLIENT_COMMAND_PENDING		3258838	0					
ANR	3259235	ReturnType	int		3258838	1					
ANR	3259236	Identifier	GahpClient :: condor_job_update		3258838	2					
ANR	3259237	ParameterList	"const char * schedd_name , PROC_ID job_id , ClassAd * update_ad"		3258838	3					
ANR	3259238	Parameter	const char * schedd_name	3631:30:96572:96594	3258838	0	True				
ANR	3259239	ParameterType	const char *		3258838	0					
ANR	3259240	Identifier	schedd_name		3258838	1					
ANR	3259241	Parameter	PROC_ID job_id	3631:55:96597:96610	3258838	1	True				
ANR	3259242	ParameterType	PROC_ID		3258838	0					
ANR	3259243	Identifier	job_id		3258838	1					
ANR	3259244	Parameter	ClassAd * update_ad	3632:9:96622:96639	3258838	2	True				
ANR	3259245	ParameterType	ClassAd *		3258838	0					
ANR	3259246	Identifier	update_ad		3258838	1					
ANR	3259247	CFGEntryNode	ENTRY		3258838		True				
ANR	3259248	CFGExitNode	EXIT		3258838		True				
ANR	3259249	Symbol	server -> m_commands_supported		3258838						
ANR	3259250	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3258838						
ANR	3259251	Symbol	ad_string		3258838						
ANR	3259252	Symbol	update_ad		3258838						
ANR	3259253	Symbol	sprintf		3258838						
ANR	3259254	Symbol	server -> m_commands_supported -> contains_anycase		3258838						
ANR	3259255	Symbol	GAHPCLIENT_COMMAND_PENDING		3258838						
ANR	3259256	Symbol	useXMLClassads		3258838						
ANR	3259257	Symbol	strcasecmp		3258838						
ANR	3259258	Symbol	ad_string . Value		3258838						
ANR	3259259	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3258838						
ANR	3259260	Symbol	* * result		3258838						
ANR	3259261	Symbol	get_pending_result		3258838						
ANR	3259262	Symbol	rc		3258838						
ANR	3259263	Symbol	schedd_name		3258838						
ANR	3259264	Symbol	true		3258838						
ANR	3259265	Symbol	is_pending		3258838						
ANR	3259266	Symbol	deleg_proxy		3258838						
ANR	3259267	Symbol	server		3258838						
ANR	3259268	Symbol	escapeGahpString		3258838						
ANR	3259269	Symbol	* server		3258838						
ANR	3259270	Symbol	reqline . c_str		3258838						
ANR	3259271	Symbol	results_only		3258838						
ANR	3259272	Symbol	result -> argv		3258838						
ANR	3259273	Symbol	* server -> m_commands_supported		3258838						
ANR	3259274	Symbol	result		3258838						
ANR	3259275	Symbol	* result		3258838						
ANR	3259276	Symbol	reqline		3258838						
ANR	3259277	Symbol	job_id . cluster		3258838						
ANR	3259278	Symbol	m_mode		3258838						
ANR	3259279	Symbol	* result -> argv		3258838						
ANR	3259280	Symbol	* * * result		3258838						
ANR	3259281	Symbol	false		3258838						
ANR	3259282	Symbol	NULLSTRING		3258838						
ANR	3259283	Symbol	command		3258838						
ANR	3259284	Symbol	* * result -> argv		3258838						
ANR	3259285	Symbol	error_string		3258838						
ANR	3259286	Symbol	esc2		3258838						
ANR	3259287	Symbol	job_id . proc		3258838						
ANR	3259288	Symbol	buf		3258838						
ANR	3259289	Symbol	esc1		3258838						
ANR	3259290	Symbol	job_id		3258838						
ANR	3259291	Symbol	x		3258838						
ANR	3259292	Symbol	result -> argc		3258838						
ANR	3259293	Symbol	FALSE		3258838						
ANR	3259294	Symbol	* * server		3258838						
ANR	3259295	Symbol	unparser		3258838						
ANR	3259296	Symbol	strdup		3258838						
ANR	3259297	Symbol	check_pending_timeout		3258838						
ANR	3259298	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3258838						
ANR	3259299	Function	GahpClient :: condor_job_hold	3716:0:98882:100722							
ANR	3259300	FunctionDef	"GahpClient :: condor_job_hold (const char * schedd_name , PROC_ID job_id , const char * reason)"		3259299	0					
ANR	3259301	CompoundStatement		3719:0:98982:100722	3259299	0					
ANR	3259302	Statement	static	3720:1:98985:98990	3259299	0	True				
ANR	3259303	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_HOLD"" ;"	3720:8:98992:99031	3259299	1	True				
ANR	3259304	IdentifierDecl	"* command = ""CONDOR_JOB_HOLD"""		3259299	0					
ANR	3259305	IdentifierDeclType	const char *		3259299	0					
ANR	3259306	Identifier	command		3259299	1					
ANR	3259307	AssignmentExpression	"* command = ""CONDOR_JOB_HOLD"""		3259299	2		=			
ANR	3259308	Identifier	command		3259299	0					
ANR	3259309	PrimaryExpression	"""CONDOR_JOB_HOLD"""		3259299	1					
ANR	3259310	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3259299	2					
ANR	3259311	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3723:6:99080:99141	3259299	0	True				
ANR	3259312	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3259299	0		==			
ANR	3259313	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3259299	0					
ANR	3259314	Callee	server -> m_commands_supported -> contains_anycase		3259299	0					
ANR	3259315	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3259299	0					
ANR	3259316	PtrMemberAccess	server -> m_commands_supported		3259299	0					
ANR	3259317	Identifier	server		3259299	0					
ANR	3259318	Identifier	m_commands_supported		3259299	1					
ANR	3259319	Identifier	contains_anycase		3259299	1					
ANR	3259320	ArgumentList	command		3259299	1					
ANR	3259321	Argument	command		3259299	0					
ANR	3259322	Identifier	command		3259299	0					
ANR	3259323	Identifier	FALSE		3259299	1					
ANR	3259324	CompoundStatement		5:70:161:161	3259299	1					
ANR	3259325	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3724:2:99148:99187	3259299	0	True				
ANR	3259326	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3259299	0					
ANR	3259327	IfStatement	if ( ! schedd_name )		3259299	3					
ANR	3259328	Condition	! schedd_name	3728:5:99225:99236	3259299	0	True				
ANR	3259329	UnaryOperationExpression	! schedd_name		3259299	0					
ANR	3259330	UnaryOperator	!		3259299	0					
ANR	3259331	Identifier	schedd_name		3259299	1					
ANR	3259332	ExpressionStatement	schedd_name = NULLSTRING	3728:19:99239:99261	3259299	1	True				
ANR	3259333	AssignmentExpression	schedd_name = NULLSTRING		3259299	0		=			
ANR	3259334	Identifier	schedd_name		3259299	0					
ANR	3259335	Identifier	NULLSTRING		3259299	1					
ANR	3259336	IfStatement	if ( ! reason )		3259299	4					
ANR	3259337	Condition	! reason	3729:5:99268:99274	3259299	0	True				
ANR	3259338	UnaryOperationExpression	! reason		3259299	0					
ANR	3259339	UnaryOperator	!		3259299	0					
ANR	3259340	Identifier	reason		3259299	1					
ANR	3259341	ExpressionStatement	reason = NULLSTRING	3729:14:99277:99294	3259299	1	True				
ANR	3259342	AssignmentExpression	reason = NULLSTRING		3259299	0		=			
ANR	3259343	Identifier	reason		3259299	0					
ANR	3259344	Identifier	NULLSTRING		3259299	1					
ANR	3259345	IdentifierDeclStatement	std :: string reqline ;	3730:1:99297:99316	3259299	5	True				
ANR	3259346	IdentifierDecl	reqline		3259299	0					
ANR	3259347	IdentifierDeclType	std :: string		3259299	0					
ANR	3259348	Identifier	reqline		3259299	1					
ANR	3259349	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3731:1:99319:99371	3259299	6	True				
ANR	3259350	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3259299	0					
ANR	3259351	IdentifierDeclType	char *		3259299	0					
ANR	3259352	Identifier	esc1		3259299	1					
ANR	3259353	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3259299	2		=			
ANR	3259354	Identifier	esc1		3259299	0					
ANR	3259355	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3259299	1					
ANR	3259356	Callee	strdup		3259299	0					
ANR	3259357	Identifier	strdup		3259299	0					
ANR	3259358	ArgumentList	escapeGahpString ( schedd_name )		3259299	1					
ANR	3259359	Argument	escapeGahpString ( schedd_name )		3259299	0					
ANR	3259360	CallExpression	escapeGahpString ( schedd_name )		3259299	0					
ANR	3259361	Callee	escapeGahpString		3259299	0					
ANR	3259362	Identifier	escapeGahpString		3259299	0					
ANR	3259363	ArgumentList	schedd_name		3259299	1					
ANR	3259364	Argument	schedd_name		3259299	0					
ANR	3259365	Identifier	schedd_name		3259299	0					
ANR	3259366	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( reason ) ) ;	3732:1:99374:99421	3259299	7	True				
ANR	3259367	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( reason ) )		3259299	0					
ANR	3259368	IdentifierDeclType	char *		3259299	0					
ANR	3259369	Identifier	esc2		3259299	1					
ANR	3259370	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( reason ) )		3259299	2		=			
ANR	3259371	Identifier	esc2		3259299	0					
ANR	3259372	CallExpression	strdup ( escapeGahpString ( reason ) )		3259299	1					
ANR	3259373	Callee	strdup		3259299	0					
ANR	3259374	Identifier	strdup		3259299	0					
ANR	3259375	ArgumentList	escapeGahpString ( reason )		3259299	1					
ANR	3259376	Argument	escapeGahpString ( reason )		3259299	0					
ANR	3259377	CallExpression	escapeGahpString ( reason )		3259299	0					
ANR	3259378	Callee	escapeGahpString		3259299	0					
ANR	3259379	Identifier	escapeGahpString		3259299	0					
ANR	3259380	ArgumentList	reason		3259299	1					
ANR	3259381	Argument	reason		3259299	0					
ANR	3259382	Identifier	reason		3259299	0					
ANR	3259383	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 ) ;"	3733:1:99424:99512	3259299	8	True				
ANR	3259384	IdentifierDecl	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3259299	0					
ANR	3259385	IdentifierDeclType	int		3259299	0					
ANR	3259386	Identifier	x		3259299	1					
ANR	3259387	AssignmentExpression	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3259299	2		=			
ANR	3259388	Identifier	x		3259299	0					
ANR	3259389	CallExpression	"sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3259299	1					
ANR	3259390	Callee	sprintf		3259299	0					
ANR	3259391	Identifier	sprintf		3259299	0					
ANR	3259392	ArgumentList	reqline		3259299	1					
ANR	3259393	Argument	reqline		3259299	0					
ANR	3259394	Identifier	reqline		3259299	0					
ANR	3259395	Argument	"""%s %d.%d %s"""		3259299	1					
ANR	3259396	PrimaryExpression	"""%s %d.%d %s"""		3259299	0					
ANR	3259397	Argument	esc1		3259299	2					
ANR	3259398	Identifier	esc1		3259299	0					
ANR	3259399	Argument	job_id . cluster		3259299	3					
ANR	3259400	MemberAccess	job_id . cluster		3259299	0					
ANR	3259401	Identifier	job_id		3259299	0					
ANR	3259402	Identifier	cluster		3259299	1					
ANR	3259403	Argument	job_id . proc		3259299	4					
ANR	3259404	MemberAccess	job_id . proc		3259299	0					
ANR	3259405	Identifier	job_id		3259299	0					
ANR	3259406	Identifier	proc		3259299	1					
ANR	3259407	Argument	esc2		3259299	5					
ANR	3259408	Identifier	esc2		3259299	0					
ANR	3259409	ExpressionStatement	free ( esc1 )	3735:1:99515:99525	3259299	9	True				
ANR	3259410	CallExpression	free ( esc1 )		3259299	0					
ANR	3259411	Callee	free		3259299	0					
ANR	3259412	Identifier	free		3259299	0					
ANR	3259413	ArgumentList	esc1		3259299	1					
ANR	3259414	Argument	esc1		3259299	0					
ANR	3259415	Identifier	esc1		3259299	0					
ANR	3259416	ExpressionStatement	free ( esc2 )	3736:1:99528:99538	3259299	10	True				
ANR	3259417	CallExpression	free ( esc2 )		3259299	0					
ANR	3259418	Callee	free		3259299	0					
ANR	3259419	Identifier	free		3259299	0					
ANR	3259420	ArgumentList	esc2		3259299	1					
ANR	3259421	Argument	esc2		3259299	0					
ANR	3259422	Identifier	esc2		3259299	0					
ANR	3259423	ExpressionStatement	ASSERT ( x > 0 )	3737:1:99541:99556	3259299	11	True				
ANR	3259424	CallExpression	ASSERT ( x > 0 )		3259299	0					
ANR	3259425	Callee	ASSERT		3259299	0					
ANR	3259426	Identifier	ASSERT		3259299	0					
ANR	3259427	ArgumentList	x > 0		3259299	1					
ANR	3259428	Argument	x > 0		3259299	0					
ANR	3259429	RelationalExpression	x > 0		3259299	0		>			
ANR	3259430	Identifier	x		3259299	0					
ANR	3259431	PrimaryExpression	0		3259299	1					
ANR	3259432	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3738:1:99559:99592	3259299	12	True				
ANR	3259433	IdentifierDecl	* buf = reqline . c_str ( )		3259299	0					
ANR	3259434	IdentifierDeclType	const char *		3259299	0					
ANR	3259435	Identifier	buf		3259299	1					
ANR	3259436	AssignmentExpression	* buf = reqline . c_str ( )		3259299	2		=			
ANR	3259437	Identifier	buf		3259299	0					
ANR	3259438	CallExpression	reqline . c_str ( )		3259299	1					
ANR	3259439	Callee	reqline . c_str		3259299	0					
ANR	3259440	MemberAccess	reqline . c_str		3259299	0					
ANR	3259441	Identifier	reqline		3259299	0					
ANR	3259442	Identifier	c_str		3259299	1					
ANR	3259443	ArgumentList			3259299	1					
ANR	3259444	IfStatement	"if ( ! is_pending ( command , buf ) )"		3259299	13					
ANR	3259445	Condition	"! is_pending ( command , buf )"	3742:6:99693:99716	3259299	0	True				
ANR	3259446	UnaryOperationExpression	"! is_pending ( command , buf )"		3259299	0					
ANR	3259447	UnaryOperator	!		3259299	0					
ANR	3259448	CallExpression	"is_pending ( command , buf )"		3259299	1					
ANR	3259449	Callee	is_pending		3259299	0					
ANR	3259450	Identifier	is_pending		3259299	0					
ANR	3259451	ArgumentList	command		3259299	1					
ANR	3259452	Argument	command		3259299	0					
ANR	3259453	Identifier	command		3259299	0					
ANR	3259454	Argument	buf		3259299	1					
ANR	3259455	Identifier	buf		3259299	0					
ANR	3259456	CompoundStatement		24:33:737:737	3259299	1					
ANR	3259457	IfStatement	if ( m_mode == results_only )		3259299	0					
ANR	3259458	Condition	m_mode == results_only	3745:7:99825:99846	3259299	0	True				
ANR	3259459	EqualityExpression	m_mode == results_only		3259299	0		==			
ANR	3259460	Identifier	m_mode		3259299	0					
ANR	3259461	Identifier	results_only		3259299	1					
ANR	3259462	CompoundStatement		27:32:867:867	3259299	1					
ANR	3259463	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3746:3:99855:99894	3259299	0	True				
ANR	3259464	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3259299	0					
ANR	3259465	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3748:2:99902:99938	3259299	1	True				
ANR	3259466	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3259299	0					
ANR	3259467	Callee	now_pending		3259299	0					
ANR	3259468	Identifier	now_pending		3259299	0					
ANR	3259469	ArgumentList	command		3259299	1					
ANR	3259470	Argument	command		3259299	0					
ANR	3259471	Identifier	command		3259299	0					
ANR	3259472	Argument	buf		3259299	1					
ANR	3259473	Identifier	buf		3259299	0					
ANR	3259474	Argument	deleg_proxy		3259299	2					
ANR	3259475	Identifier	deleg_proxy		3259299	0					
ANR	3259476	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3754:1:100032:100083	3259299	14	True				
ANR	3259477	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3259299	0					
ANR	3259478	IdentifierDeclType	Gahp_Args *		3259299	0					
ANR	3259479	Identifier	result		3259299	1					
ANR	3259480	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3259299	2		=			
ANR	3259481	Identifier	result		3259299	0					
ANR	3259482	CallExpression	"get_pending_result ( command , buf )"		3259299	1					
ANR	3259483	Callee	get_pending_result		3259299	0					
ANR	3259484	Identifier	get_pending_result		3259299	0					
ANR	3259485	ArgumentList	command		3259299	1					
ANR	3259486	Argument	command		3259299	0					
ANR	3259487	Identifier	command		3259299	0					
ANR	3259488	Argument	buf		3259299	1					
ANR	3259489	Identifier	buf		3259299	0					
ANR	3259490	IfStatement	if ( result )		3259299	15					
ANR	3259491	Condition	result	3755:6:100091:100096	3259299	0	True				
ANR	3259492	Identifier	result		3259299	0					
ANR	3259493	CompoundStatement		42:2:1212:1222	3259299	1					
ANR	3259494	IfStatement	if ( result -> argc != 3 )		3259299	0					
ANR	3259495	Condition	result -> argc != 3	3757:6:100132:100148	3259299	0	True				
ANR	3259496	EqualityExpression	result -> argc != 3		3259299	0		!=			
ANR	3259497	PtrMemberAccess	result -> argc		3259299	0					
ANR	3259498	Identifier	result		3259299	0					
ANR	3259499	Identifier	argc		3259299	1					
ANR	3259500	PrimaryExpression	3		3259299	1					
ANR	3259501	CompoundStatement		39:25:1168:1168	3259299	1					
ANR	3259502	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3758:3:100156:100187	3259299	0	True				
ANR	3259503	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3259299	0					
ANR	3259504	Callee	EXCEPT		3259299	0					
ANR	3259505	Identifier	EXCEPT		3259299	0					
ANR	3259506	ArgumentList	"""Bad %s Result"""		3259299	1					
ANR	3259507	Argument	"""Bad %s Result"""		3259299	0					
ANR	3259508	PrimaryExpression	"""Bad %s Result"""		3259299	0					
ANR	3259509	Argument	command		3259299	1					
ANR	3259510	Identifier	command		3259299	0					
ANR	3259511	IdentifierDeclStatement	int rc = 1 ;	3760:2:100195:100205	3259299	1	True				
ANR	3259512	IdentifierDecl	rc = 1		3259299	0					
ANR	3259513	IdentifierDeclType	int		3259299	0					
ANR	3259514	Identifier	rc		3259299	1					
ANR	3259515	AssignmentExpression	rc = 1		3259299	2		=			
ANR	3259516	Identifier	rc		3259299	0					
ANR	3259517	PrimaryExpression	1		3259299	1					
ANR	3259518	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3259299	2					
ANR	3259519	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3761:7:100214:100238	3259299	0	True				
ANR	3259520	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3259299	0		==			
ANR	3259521	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3259299	0					
ANR	3259522	ArrayIndexing	result -> argv [ 1 ]		3259299	0					
ANR	3259523	PtrMemberAccess	result -> argv		3259299	0					
ANR	3259524	Identifier	result		3259299	0					
ANR	3259525	Identifier	argv		3259299	1					
ANR	3259526	PrimaryExpression	1		3259299	1					
ANR	3259527	PrimaryExpression	0		3259299	1					
ANR	3259528	PrimaryExpression	'S'		3259299	1					
ANR	3259529	CompoundStatement		43:35:1259:1259	3259299	1					
ANR	3259530	ExpressionStatement	rc = 0	3762:3:100247:100253	3259299	0	True				
ANR	3259531	AssignmentExpression	rc = 0		3259299	0		=			
ANR	3259532	Identifier	rc		3259299	0					
ANR	3259533	PrimaryExpression	0		3259299	1					
ANR	3259534	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3259299	3					
ANR	3259535	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3764:7:100266:100304	3259299	0	True				
ANR	3259536	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3259299	0					
ANR	3259537	Callee	strcasecmp		3259299	0					
ANR	3259538	Identifier	strcasecmp		3259299	0					
ANR	3259539	ArgumentList	result -> argv [ 2 ]		3259299	1					
ANR	3259540	Argument	result -> argv [ 2 ]		3259299	0					
ANR	3259541	ArrayIndexing	result -> argv [ 2 ]		3259299	0					
ANR	3259542	PtrMemberAccess	result -> argv		3259299	0					
ANR	3259543	Identifier	result		3259299	0					
ANR	3259544	Identifier	argv		3259299	1					
ANR	3259545	PrimaryExpression	2		3259299	1					
ANR	3259546	Argument	NULLSTRING		3259299	1					
ANR	3259547	Identifier	NULLSTRING		3259299	0					
ANR	3259548	CompoundStatement		46:49:1325:1325	3259299	1					
ANR	3259549	ExpressionStatement	error_string = result -> argv [ 2 ]	3765:3:100313:100343	3259299	0	True				
ANR	3259550	AssignmentExpression	error_string = result -> argv [ 2 ]		3259299	0		=			
ANR	3259551	Identifier	error_string		3259299	0					
ANR	3259552	ArrayIndexing	result -> argv [ 2 ]		3259299	1					
ANR	3259553	PtrMemberAccess	result -> argv		3259299	0					
ANR	3259554	Identifier	result		3259299	0					
ANR	3259555	Identifier	argv		3259299	1					
ANR	3259556	PrimaryExpression	2		3259299	1					
ANR	3259557	ElseStatement	else		3259299	0					
ANR	3259558	CompoundStatement		48:9:1371:1371	3259299	0					
ANR	3259559	ExpressionStatement	"error_string = """""	3767:3:100359:100376	3259299	0	True				
ANR	3259560	AssignmentExpression	"error_string = """""		3259299	0		=			
ANR	3259561	Identifier	error_string		3259299	0					
ANR	3259562	PrimaryExpression	""""""		3259299	1					
ANR	3259563	Statement	delete	3769:2:100384:100389	3259299	4	True				
ANR	3259564	ExpressionStatement	result	3769:9:100391:100397	3259299	5	True				
ANR	3259565	Identifier	result		3259299	0					
ANR	3259566	ReturnStatement	return rc ;	3770:2:100401:100410	3259299	6	True				
ANR	3259567	Identifier	rc		3259299	0					
ANR	3259568	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3259299	16					
ANR	3259569	Condition	"check_pending_timeout ( command , buf )"	3774:6:100467:100500	3259299	0	True				
ANR	3259570	CallExpression	"check_pending_timeout ( command , buf )"		3259299	0					
ANR	3259571	Callee	check_pending_timeout		3259299	0					
ANR	3259572	Identifier	check_pending_timeout		3259299	0					
ANR	3259573	ArgumentList	command		3259299	1					
ANR	3259574	Argument	command		3259299	0					
ANR	3259575	Identifier	command		3259299	0					
ANR	3259576	Argument	buf		3259299	1					
ANR	3259577	Identifier	buf		3259299	0					
ANR	3259578	CompoundStatement		56:43:1521:1521	3259299	1					
ANR	3259579	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3776:2:100540:100588	3259299	0	True				
ANR	3259580	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3259299	0					
ANR	3259581	Callee	sprintf		3259299	0					
ANR	3259582	Identifier	sprintf		3259299	0					
ANR	3259583	ArgumentList	error_string		3259299	1					
ANR	3259584	Argument	error_string		3259299	0					
ANR	3259585	Identifier	error_string		3259299	0					
ANR	3259586	Argument	"""%s timed out"""		3259299	1					
ANR	3259587	PrimaryExpression	"""%s timed out"""		3259299	0					
ANR	3259588	Argument	command		3259299	2					
ANR	3259589	Identifier	command		3259299	0					
ANR	3259590	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3777:2:100592:100627	3259299	1	True				
ANR	3259591	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3259299	0					
ANR	3259592	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3781:1:100687:100720	3259299	17	True				
ANR	3259593	Identifier	GAHPCLIENT_COMMAND_PENDING		3259299	0					
ANR	3259594	ReturnType	int		3259299	1					
ANR	3259595	Identifier	GahpClient :: condor_job_hold		3259299	2					
ANR	3259596	ParameterList	"const char * schedd_name , PROC_ID job_id , const char * reason"		3259299	3					
ANR	3259597	Parameter	const char * schedd_name	3717:28:98914:98936	3259299	0	True				
ANR	3259598	ParameterType	const char *		3259299	0					
ANR	3259599	Identifier	schedd_name		3259299	1					
ANR	3259600	Parameter	PROC_ID job_id	3717:53:98939:98952	3259299	1	True				
ANR	3259601	ParameterType	PROC_ID		3259299	0					
ANR	3259602	Identifier	job_id		3259299	1					
ANR	3259603	Parameter	const char * reason	3718:7:98962:98979	3259299	2	True				
ANR	3259604	ParameterType	const char *		3259299	0					
ANR	3259605	Identifier	reason		3259299	1					
ANR	3259606	CFGEntryNode	ENTRY		3259299		True				
ANR	3259607	CFGExitNode	EXIT		3259299		True				
ANR	3259608	Symbol	reason		3259299						
ANR	3259609	Symbol	server		3259299						
ANR	3259610	Symbol	server -> m_commands_supported		3259299						
ANR	3259611	Symbol	escapeGahpString		3259299						
ANR	3259612	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3259299						
ANR	3259613	Symbol	* server		3259299						
ANR	3259614	Symbol	reqline . c_str		3259299						
ANR	3259615	Symbol	results_only		3259299						
ANR	3259616	Symbol	result -> argv		3259299						
ANR	3259617	Symbol	* server -> m_commands_supported		3259299						
ANR	3259618	Symbol	sprintf		3259299						
ANR	3259619	Symbol	result		3259299						
ANR	3259620	Symbol	* result		3259299						
ANR	3259621	Symbol	server -> m_commands_supported -> contains_anycase		3259299						
ANR	3259622	Symbol	GAHPCLIENT_COMMAND_PENDING		3259299						
ANR	3259623	Symbol	reqline		3259299						
ANR	3259624	Symbol	job_id . cluster		3259299						
ANR	3259625	Symbol	m_mode		3259299						
ANR	3259626	Symbol	strcasecmp		3259299						
ANR	3259627	Symbol	* result -> argv		3259299						
ANR	3259628	Symbol	* * * result		3259299						
ANR	3259629	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3259299						
ANR	3259630	Symbol	* * result		3259299						
ANR	3259631	Symbol	NULLSTRING		3259299						
ANR	3259632	Symbol	command		3259299						
ANR	3259633	Symbol	get_pending_result		3259299						
ANR	3259634	Symbol	* * result -> argv		3259299						
ANR	3259635	Symbol	rc		3259299						
ANR	3259636	Symbol	error_string		3259299						
ANR	3259637	Symbol	esc2		3259299						
ANR	3259638	Symbol	job_id . proc		3259299						
ANR	3259639	Symbol	buf		3259299						
ANR	3259640	Symbol	esc1		3259299						
ANR	3259641	Symbol	schedd_name		3259299						
ANR	3259642	Symbol	job_id		3259299						
ANR	3259643	Symbol	x		3259299						
ANR	3259644	Symbol	result -> argc		3259299						
ANR	3259645	Symbol	* * server		3259299						
ANR	3259646	Symbol	FALSE		3259299						
ANR	3259647	Symbol	strdup		3259299						
ANR	3259648	Symbol	check_pending_timeout		3259299						
ANR	3259649	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3259299						
ANR	3259650	Symbol	is_pending		3259299						
ANR	3259651	Symbol	deleg_proxy		3259299						
ANR	3259652	Function	GahpClient :: condor_job_release	3784:0:100725:102574							
ANR	3259653	FunctionDef	"GahpClient :: condor_job_release (const char * schedd_name , PROC_ID job_id , const char * reason)"		3259652	0					
ANR	3259654	CompoundStatement		3787:0:100831:102574	3259652	0					
ANR	3259655	Statement	static	3788:1:100834:100839	3259652	0	True				
ANR	3259656	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_RELEASE"" ;"	3788:8:100841:100883	3259652	1	True				
ANR	3259657	IdentifierDecl	"* command = ""CONDOR_JOB_RELEASE"""		3259652	0					
ANR	3259658	IdentifierDeclType	const char *		3259652	0					
ANR	3259659	Identifier	command		3259652	1					
ANR	3259660	AssignmentExpression	"* command = ""CONDOR_JOB_RELEASE"""		3259652	2		=			
ANR	3259661	Identifier	command		3259652	0					
ANR	3259662	PrimaryExpression	"""CONDOR_JOB_RELEASE"""		3259652	1					
ANR	3259663	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3259652	2					
ANR	3259664	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3791:6:100932:100993	3259652	0	True				
ANR	3259665	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3259652	0		==			
ANR	3259666	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3259652	0					
ANR	3259667	Callee	server -> m_commands_supported -> contains_anycase		3259652	0					
ANR	3259668	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3259652	0					
ANR	3259669	PtrMemberAccess	server -> m_commands_supported		3259652	0					
ANR	3259670	Identifier	server		3259652	0					
ANR	3259671	Identifier	m_commands_supported		3259652	1					
ANR	3259672	Identifier	contains_anycase		3259652	1					
ANR	3259673	ArgumentList	command		3259652	1					
ANR	3259674	Argument	command		3259652	0					
ANR	3259675	Identifier	command		3259652	0					
ANR	3259676	Identifier	FALSE		3259652	1					
ANR	3259677	CompoundStatement		5:70:164:164	3259652	1					
ANR	3259678	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3792:2:101000:101039	3259652	0	True				
ANR	3259679	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3259652	0					
ANR	3259680	IfStatement	if ( ! schedd_name )		3259652	3					
ANR	3259681	Condition	! schedd_name	3796:5:101077:101088	3259652	0	True				
ANR	3259682	UnaryOperationExpression	! schedd_name		3259652	0					
ANR	3259683	UnaryOperator	!		3259652	0					
ANR	3259684	Identifier	schedd_name		3259652	1					
ANR	3259685	ExpressionStatement	schedd_name = NULLSTRING	3796:19:101091:101113	3259652	1	True				
ANR	3259686	AssignmentExpression	schedd_name = NULLSTRING		3259652	0		=			
ANR	3259687	Identifier	schedd_name		3259652	0					
ANR	3259688	Identifier	NULLSTRING		3259652	1					
ANR	3259689	IfStatement	if ( ! reason )		3259652	4					
ANR	3259690	Condition	! reason	3797:5:101120:101126	3259652	0	True				
ANR	3259691	UnaryOperationExpression	! reason		3259652	0					
ANR	3259692	UnaryOperator	!		3259652	0					
ANR	3259693	Identifier	reason		3259652	1					
ANR	3259694	ExpressionStatement	reason = NULLSTRING	3797:14:101129:101146	3259652	1	True				
ANR	3259695	AssignmentExpression	reason = NULLSTRING		3259652	0		=			
ANR	3259696	Identifier	reason		3259652	0					
ANR	3259697	Identifier	NULLSTRING		3259652	1					
ANR	3259698	IdentifierDeclStatement	std :: string reqline ;	3798:1:101149:101168	3259652	5	True				
ANR	3259699	IdentifierDecl	reqline		3259652	0					
ANR	3259700	IdentifierDeclType	std :: string		3259652	0					
ANR	3259701	Identifier	reqline		3259652	1					
ANR	3259702	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3799:1:101171:101223	3259652	6	True				
ANR	3259703	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3259652	0					
ANR	3259704	IdentifierDeclType	char *		3259652	0					
ANR	3259705	Identifier	esc1		3259652	1					
ANR	3259706	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3259652	2		=			
ANR	3259707	Identifier	esc1		3259652	0					
ANR	3259708	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3259652	1					
ANR	3259709	Callee	strdup		3259652	0					
ANR	3259710	Identifier	strdup		3259652	0					
ANR	3259711	ArgumentList	escapeGahpString ( schedd_name )		3259652	1					
ANR	3259712	Argument	escapeGahpString ( schedd_name )		3259652	0					
ANR	3259713	CallExpression	escapeGahpString ( schedd_name )		3259652	0					
ANR	3259714	Callee	escapeGahpString		3259652	0					
ANR	3259715	Identifier	escapeGahpString		3259652	0					
ANR	3259716	ArgumentList	schedd_name		3259652	1					
ANR	3259717	Argument	schedd_name		3259652	0					
ANR	3259718	Identifier	schedd_name		3259652	0					
ANR	3259719	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( reason ) ) ;	3800:1:101226:101273	3259652	7	True				
ANR	3259720	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( reason ) )		3259652	0					
ANR	3259721	IdentifierDeclType	char *		3259652	0					
ANR	3259722	Identifier	esc2		3259652	1					
ANR	3259723	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( reason ) )		3259652	2		=			
ANR	3259724	Identifier	esc2		3259652	0					
ANR	3259725	CallExpression	strdup ( escapeGahpString ( reason ) )		3259652	1					
ANR	3259726	Callee	strdup		3259652	0					
ANR	3259727	Identifier	strdup		3259652	0					
ANR	3259728	ArgumentList	escapeGahpString ( reason )		3259652	1					
ANR	3259729	Argument	escapeGahpString ( reason )		3259652	0					
ANR	3259730	CallExpression	escapeGahpString ( reason )		3259652	0					
ANR	3259731	Callee	escapeGahpString		3259652	0					
ANR	3259732	Identifier	escapeGahpString		3259652	0					
ANR	3259733	ArgumentList	reason		3259652	1					
ANR	3259734	Argument	reason		3259652	0					
ANR	3259735	Identifier	reason		3259652	0					
ANR	3259736	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 ) ;"	3801:1:101276:101364	3259652	8	True				
ANR	3259737	IdentifierDecl	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3259652	0					
ANR	3259738	IdentifierDeclType	int		3259652	0					
ANR	3259739	Identifier	x		3259652	1					
ANR	3259740	AssignmentExpression	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3259652	2		=			
ANR	3259741	Identifier	x		3259652	0					
ANR	3259742	CallExpression	"sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3259652	1					
ANR	3259743	Callee	sprintf		3259652	0					
ANR	3259744	Identifier	sprintf		3259652	0					
ANR	3259745	ArgumentList	reqline		3259652	1					
ANR	3259746	Argument	reqline		3259652	0					
ANR	3259747	Identifier	reqline		3259652	0					
ANR	3259748	Argument	"""%s %d.%d %s"""		3259652	1					
ANR	3259749	PrimaryExpression	"""%s %d.%d %s"""		3259652	0					
ANR	3259750	Argument	esc1		3259652	2					
ANR	3259751	Identifier	esc1		3259652	0					
ANR	3259752	Argument	job_id . cluster		3259652	3					
ANR	3259753	MemberAccess	job_id . cluster		3259652	0					
ANR	3259754	Identifier	job_id		3259652	0					
ANR	3259755	Identifier	cluster		3259652	1					
ANR	3259756	Argument	job_id . proc		3259652	4					
ANR	3259757	MemberAccess	job_id . proc		3259652	0					
ANR	3259758	Identifier	job_id		3259652	0					
ANR	3259759	Identifier	proc		3259652	1					
ANR	3259760	Argument	esc2		3259652	5					
ANR	3259761	Identifier	esc2		3259652	0					
ANR	3259762	ExpressionStatement	free ( esc1 )	3803:1:101367:101377	3259652	9	True				
ANR	3259763	CallExpression	free ( esc1 )		3259652	0					
ANR	3259764	Callee	free		3259652	0					
ANR	3259765	Identifier	free		3259652	0					
ANR	3259766	ArgumentList	esc1		3259652	1					
ANR	3259767	Argument	esc1		3259652	0					
ANR	3259768	Identifier	esc1		3259652	0					
ANR	3259769	ExpressionStatement	free ( esc2 )	3804:1:101380:101390	3259652	10	True				
ANR	3259770	CallExpression	free ( esc2 )		3259652	0					
ANR	3259771	Callee	free		3259652	0					
ANR	3259772	Identifier	free		3259652	0					
ANR	3259773	ArgumentList	esc2		3259652	1					
ANR	3259774	Argument	esc2		3259652	0					
ANR	3259775	Identifier	esc2		3259652	0					
ANR	3259776	ExpressionStatement	ASSERT ( x > 0 )	3805:1:101393:101408	3259652	11	True				
ANR	3259777	CallExpression	ASSERT ( x > 0 )		3259652	0					
ANR	3259778	Callee	ASSERT		3259652	0					
ANR	3259779	Identifier	ASSERT		3259652	0					
ANR	3259780	ArgumentList	x > 0		3259652	1					
ANR	3259781	Argument	x > 0		3259652	0					
ANR	3259782	RelationalExpression	x > 0		3259652	0		>			
ANR	3259783	Identifier	x		3259652	0					
ANR	3259784	PrimaryExpression	0		3259652	1					
ANR	3259785	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3806:1:101411:101444	3259652	12	True				
ANR	3259786	IdentifierDecl	* buf = reqline . c_str ( )		3259652	0					
ANR	3259787	IdentifierDeclType	const char *		3259652	0					
ANR	3259788	Identifier	buf		3259652	1					
ANR	3259789	AssignmentExpression	* buf = reqline . c_str ( )		3259652	2		=			
ANR	3259790	Identifier	buf		3259652	0					
ANR	3259791	CallExpression	reqline . c_str ( )		3259652	1					
ANR	3259792	Callee	reqline . c_str		3259652	0					
ANR	3259793	MemberAccess	reqline . c_str		3259652	0					
ANR	3259794	Identifier	reqline		3259652	0					
ANR	3259795	Identifier	c_str		3259652	1					
ANR	3259796	ArgumentList			3259652	1					
ANR	3259797	IfStatement	"if ( ! is_pending ( command , buf ) )"		3259652	13					
ANR	3259798	Condition	"! is_pending ( command , buf )"	3810:6:101545:101568	3259652	0	True				
ANR	3259799	UnaryOperationExpression	"! is_pending ( command , buf )"		3259652	0					
ANR	3259800	UnaryOperator	!		3259652	0					
ANR	3259801	CallExpression	"is_pending ( command , buf )"		3259652	1					
ANR	3259802	Callee	is_pending		3259652	0					
ANR	3259803	Identifier	is_pending		3259652	0					
ANR	3259804	ArgumentList	command		3259652	1					
ANR	3259805	Argument	command		3259652	0					
ANR	3259806	Identifier	command		3259652	0					
ANR	3259807	Argument	buf		3259652	1					
ANR	3259808	Identifier	buf		3259652	0					
ANR	3259809	CompoundStatement		24:33:740:740	3259652	1					
ANR	3259810	IfStatement	if ( m_mode == results_only )		3259652	0					
ANR	3259811	Condition	m_mode == results_only	3813:7:101677:101698	3259652	0	True				
ANR	3259812	EqualityExpression	m_mode == results_only		3259652	0		==			
ANR	3259813	Identifier	m_mode		3259652	0					
ANR	3259814	Identifier	results_only		3259652	1					
ANR	3259815	CompoundStatement		27:32:870:870	3259652	1					
ANR	3259816	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3814:3:101707:101746	3259652	0	True				
ANR	3259817	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3259652	0					
ANR	3259818	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3816:2:101754:101790	3259652	1	True				
ANR	3259819	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3259652	0					
ANR	3259820	Callee	now_pending		3259652	0					
ANR	3259821	Identifier	now_pending		3259652	0					
ANR	3259822	ArgumentList	command		3259652	1					
ANR	3259823	Argument	command		3259652	0					
ANR	3259824	Identifier	command		3259652	0					
ANR	3259825	Argument	buf		3259652	1					
ANR	3259826	Identifier	buf		3259652	0					
ANR	3259827	Argument	deleg_proxy		3259652	2					
ANR	3259828	Identifier	deleg_proxy		3259652	0					
ANR	3259829	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3822:1:101884:101935	3259652	14	True				
ANR	3259830	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3259652	0					
ANR	3259831	IdentifierDeclType	Gahp_Args *		3259652	0					
ANR	3259832	Identifier	result		3259652	1					
ANR	3259833	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3259652	2		=			
ANR	3259834	Identifier	result		3259652	0					
ANR	3259835	CallExpression	"get_pending_result ( command , buf )"		3259652	1					
ANR	3259836	Callee	get_pending_result		3259652	0					
ANR	3259837	Identifier	get_pending_result		3259652	0					
ANR	3259838	ArgumentList	command		3259652	1					
ANR	3259839	Argument	command		3259652	0					
ANR	3259840	Identifier	command		3259652	0					
ANR	3259841	Argument	buf		3259652	1					
ANR	3259842	Identifier	buf		3259652	0					
ANR	3259843	IfStatement	if ( result )		3259652	15					
ANR	3259844	Condition	result	3823:6:101943:101948	3259652	0	True				
ANR	3259845	Identifier	result		3259652	0					
ANR	3259846	CompoundStatement		42:2:1215:1225	3259652	1					
ANR	3259847	IfStatement	if ( result -> argc != 3 )		3259652	0					
ANR	3259848	Condition	result -> argc != 3	3825:6:101984:102000	3259652	0	True				
ANR	3259849	EqualityExpression	result -> argc != 3		3259652	0		!=			
ANR	3259850	PtrMemberAccess	result -> argc		3259652	0					
ANR	3259851	Identifier	result		3259652	0					
ANR	3259852	Identifier	argc		3259652	1					
ANR	3259853	PrimaryExpression	3		3259652	1					
ANR	3259854	CompoundStatement		39:25:1171:1171	3259652	1					
ANR	3259855	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3826:3:102008:102039	3259652	0	True				
ANR	3259856	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3259652	0					
ANR	3259857	Callee	EXCEPT		3259652	0					
ANR	3259858	Identifier	EXCEPT		3259652	0					
ANR	3259859	ArgumentList	"""Bad %s Result"""		3259652	1					
ANR	3259860	Argument	"""Bad %s Result"""		3259652	0					
ANR	3259861	PrimaryExpression	"""Bad %s Result"""		3259652	0					
ANR	3259862	Argument	command		3259652	1					
ANR	3259863	Identifier	command		3259652	0					
ANR	3259864	IdentifierDeclStatement	int rc = 1 ;	3828:2:102047:102057	3259652	1	True				
ANR	3259865	IdentifierDecl	rc = 1		3259652	0					
ANR	3259866	IdentifierDeclType	int		3259652	0					
ANR	3259867	Identifier	rc		3259652	1					
ANR	3259868	AssignmentExpression	rc = 1		3259652	2		=			
ANR	3259869	Identifier	rc		3259652	0					
ANR	3259870	PrimaryExpression	1		3259652	1					
ANR	3259871	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3259652	2					
ANR	3259872	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3829:7:102066:102090	3259652	0	True				
ANR	3259873	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3259652	0		==			
ANR	3259874	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3259652	0					
ANR	3259875	ArrayIndexing	result -> argv [ 1 ]		3259652	0					
ANR	3259876	PtrMemberAccess	result -> argv		3259652	0					
ANR	3259877	Identifier	result		3259652	0					
ANR	3259878	Identifier	argv		3259652	1					
ANR	3259879	PrimaryExpression	1		3259652	1					
ANR	3259880	PrimaryExpression	0		3259652	1					
ANR	3259881	PrimaryExpression	'S'		3259652	1					
ANR	3259882	CompoundStatement		43:35:1262:1262	3259652	1					
ANR	3259883	ExpressionStatement	rc = 0	3830:3:102099:102105	3259652	0	True				
ANR	3259884	AssignmentExpression	rc = 0		3259652	0		=			
ANR	3259885	Identifier	rc		3259652	0					
ANR	3259886	PrimaryExpression	0		3259652	1					
ANR	3259887	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3259652	3					
ANR	3259888	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3832:7:102118:102156	3259652	0	True				
ANR	3259889	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3259652	0					
ANR	3259890	Callee	strcasecmp		3259652	0					
ANR	3259891	Identifier	strcasecmp		3259652	0					
ANR	3259892	ArgumentList	result -> argv [ 2 ]		3259652	1					
ANR	3259893	Argument	result -> argv [ 2 ]		3259652	0					
ANR	3259894	ArrayIndexing	result -> argv [ 2 ]		3259652	0					
ANR	3259895	PtrMemberAccess	result -> argv		3259652	0					
ANR	3259896	Identifier	result		3259652	0					
ANR	3259897	Identifier	argv		3259652	1					
ANR	3259898	PrimaryExpression	2		3259652	1					
ANR	3259899	Argument	NULLSTRING		3259652	1					
ANR	3259900	Identifier	NULLSTRING		3259652	0					
ANR	3259901	CompoundStatement		46:49:1328:1328	3259652	1					
ANR	3259902	ExpressionStatement	error_string = result -> argv [ 2 ]	3833:3:102165:102195	3259652	0	True				
ANR	3259903	AssignmentExpression	error_string = result -> argv [ 2 ]		3259652	0		=			
ANR	3259904	Identifier	error_string		3259652	0					
ANR	3259905	ArrayIndexing	result -> argv [ 2 ]		3259652	1					
ANR	3259906	PtrMemberAccess	result -> argv		3259652	0					
ANR	3259907	Identifier	result		3259652	0					
ANR	3259908	Identifier	argv		3259652	1					
ANR	3259909	PrimaryExpression	2		3259652	1					
ANR	3259910	ElseStatement	else		3259652	0					
ANR	3259911	CompoundStatement		48:9:1374:1374	3259652	0					
ANR	3259912	ExpressionStatement	"error_string = """""	3835:3:102211:102228	3259652	0	True				
ANR	3259913	AssignmentExpression	"error_string = """""		3259652	0		=			
ANR	3259914	Identifier	error_string		3259652	0					
ANR	3259915	PrimaryExpression	""""""		3259652	1					
ANR	3259916	Statement	delete	3837:2:102236:102241	3259652	4	True				
ANR	3259917	ExpressionStatement	result	3837:9:102243:102249	3259652	5	True				
ANR	3259918	Identifier	result		3259652	0					
ANR	3259919	ReturnStatement	return rc ;	3838:2:102253:102262	3259652	6	True				
ANR	3259920	Identifier	rc		3259652	0					
ANR	3259921	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3259652	16					
ANR	3259922	Condition	"check_pending_timeout ( command , buf )"	3842:6:102319:102352	3259652	0	True				
ANR	3259923	CallExpression	"check_pending_timeout ( command , buf )"		3259652	0					
ANR	3259924	Callee	check_pending_timeout		3259652	0					
ANR	3259925	Identifier	check_pending_timeout		3259652	0					
ANR	3259926	ArgumentList	command		3259652	1					
ANR	3259927	Argument	command		3259652	0					
ANR	3259928	Identifier	command		3259652	0					
ANR	3259929	Argument	buf		3259652	1					
ANR	3259930	Identifier	buf		3259652	0					
ANR	3259931	CompoundStatement		56:43:1524:1524	3259652	1					
ANR	3259932	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3844:2:102392:102440	3259652	0	True				
ANR	3259933	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3259652	0					
ANR	3259934	Callee	sprintf		3259652	0					
ANR	3259935	Identifier	sprintf		3259652	0					
ANR	3259936	ArgumentList	error_string		3259652	1					
ANR	3259937	Argument	error_string		3259652	0					
ANR	3259938	Identifier	error_string		3259652	0					
ANR	3259939	Argument	"""%s timed out"""		3259652	1					
ANR	3259940	PrimaryExpression	"""%s timed out"""		3259652	0					
ANR	3259941	Argument	command		3259652	2					
ANR	3259942	Identifier	command		3259652	0					
ANR	3259943	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3845:2:102444:102479	3259652	1	True				
ANR	3259944	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3259652	0					
ANR	3259945	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3849:1:102539:102572	3259652	17	True				
ANR	3259946	Identifier	GAHPCLIENT_COMMAND_PENDING		3259652	0					
ANR	3259947	ReturnType	int		3259652	1					
ANR	3259948	Identifier	GahpClient :: condor_job_release		3259652	2					
ANR	3259949	ParameterList	"const char * schedd_name , PROC_ID job_id , const char * reason"		3259652	3					
ANR	3259950	Parameter	const char * schedd_name	3785:31:100760:100782	3259652	0	True				
ANR	3259951	ParameterType	const char *		3259652	0					
ANR	3259952	Identifier	schedd_name		3259652	1					
ANR	3259953	Parameter	PROC_ID job_id	3785:56:100785:100798	3259652	1	True				
ANR	3259954	ParameterType	PROC_ID		3259652	0					
ANR	3259955	Identifier	job_id		3259652	1					
ANR	3259956	Parameter	const char * reason	3786:10:100811:100828	3259652	2	True				
ANR	3259957	ParameterType	const char *		3259652	0					
ANR	3259958	Identifier	reason		3259652	1					
ANR	3259959	CFGEntryNode	ENTRY		3259652		True				
ANR	3259960	CFGExitNode	EXIT		3259652		True				
ANR	3259961	Symbol	reason		3259652						
ANR	3259962	Symbol	server -> m_commands_supported		3259652						
ANR	3259963	Symbol	server		3259652						
ANR	3259964	Symbol	escapeGahpString		3259652						
ANR	3259965	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3259652						
ANR	3259966	Symbol	* server		3259652						
ANR	3259967	Symbol	reqline . c_str		3259652						
ANR	3259968	Symbol	results_only		3259652						
ANR	3259969	Symbol	result -> argv		3259652						
ANR	3259970	Symbol	* server -> m_commands_supported		3259652						
ANR	3259971	Symbol	sprintf		3259652						
ANR	3259972	Symbol	result		3259652						
ANR	3259973	Symbol	* result		3259652						
ANR	3259974	Symbol	server -> m_commands_supported -> contains_anycase		3259652						
ANR	3259975	Symbol	GAHPCLIENT_COMMAND_PENDING		3259652						
ANR	3259976	Symbol	reqline		3259652						
ANR	3259977	Symbol	job_id . cluster		3259652						
ANR	3259978	Symbol	m_mode		3259652						
ANR	3259979	Symbol	strcasecmp		3259652						
ANR	3259980	Symbol	* result -> argv		3259652						
ANR	3259981	Symbol	* * * result		3259652						
ANR	3259982	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3259652						
ANR	3259983	Symbol	* * result		3259652						
ANR	3259984	Symbol	NULLSTRING		3259652						
ANR	3259985	Symbol	command		3259652						
ANR	3259986	Symbol	get_pending_result		3259652						
ANR	3259987	Symbol	* * result -> argv		3259652						
ANR	3259988	Symbol	rc		3259652						
ANR	3259989	Symbol	error_string		3259652						
ANR	3259990	Symbol	esc2		3259652						
ANR	3259991	Symbol	job_id . proc		3259652						
ANR	3259992	Symbol	buf		3259652						
ANR	3259993	Symbol	esc1		3259652						
ANR	3259994	Symbol	schedd_name		3259652						
ANR	3259995	Symbol	job_id		3259652						
ANR	3259996	Symbol	x		3259652						
ANR	3259997	Symbol	result -> argc		3259652						
ANR	3259998	Symbol	* * server		3259652						
ANR	3259999	Symbol	FALSE		3259652						
ANR	3260000	Symbol	strdup		3259652						
ANR	3260001	Symbol	check_pending_timeout		3259652						
ANR	3260002	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3259652						
ANR	3260003	Symbol	is_pending		3259652						
ANR	3260004	Symbol	deleg_proxy		3259652						
ANR	3260005	Function	GahpClient :: condor_job_stage_in	3852:0:102577:104842							
ANR	3260006	FunctionDef	"GahpClient :: condor_job_stage_in (const char * schedd_name , ClassAd * job_ad)"		3260005	0					
ANR	3260007	CompoundStatement		3854:0:102655:104842	3260005	0					
ANR	3260008	Statement	static	3855:1:102658:102663	3260005	0	True				
ANR	3260009	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_STAGE_IN"" ;"	3855:8:102665:102708	3260005	1	True				
ANR	3260010	IdentifierDecl	"* command = ""CONDOR_JOB_STAGE_IN"""		3260005	0					
ANR	3260011	IdentifierDeclType	const char *		3260005	0					
ANR	3260012	Identifier	command		3260005	1					
ANR	3260013	AssignmentExpression	"* command = ""CONDOR_JOB_STAGE_IN"""		3260005	2		=			
ANR	3260014	Identifier	command		3260005	0					
ANR	3260015	PrimaryExpression	"""CONDOR_JOB_STAGE_IN"""		3260005	1					
ANR	3260016	IdentifierDeclStatement	MyString ad_string ;	3857:1:102712:102730	3260005	2	True				
ANR	3260017	IdentifierDecl	ad_string		3260005	0					
ANR	3260018	IdentifierDeclType	MyString		3260005	0					
ANR	3260019	Identifier	ad_string		3260005	1					
ANR	3260020	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3260005	3					
ANR	3260021	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3860:6:102779:102840	3260005	0	True				
ANR	3260022	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3260005	0		==			
ANR	3260023	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3260005	0					
ANR	3260024	Callee	server -> m_commands_supported -> contains_anycase		3260005	0					
ANR	3260025	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3260005	0					
ANR	3260026	PtrMemberAccess	server -> m_commands_supported		3260005	0					
ANR	3260027	Identifier	server		3260005	0					
ANR	3260028	Identifier	m_commands_supported		3260005	1					
ANR	3260029	Identifier	contains_anycase		3260005	1					
ANR	3260030	ArgumentList	command		3260005	1					
ANR	3260031	Argument	command		3260005	0					
ANR	3260032	Identifier	command		3260005	0					
ANR	3260033	Identifier	FALSE		3260005	1					
ANR	3260034	CompoundStatement		7:70:187:187	3260005	1					
ANR	3260035	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3861:2:102847:102886	3260005	0	True				
ANR	3260036	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3260005	0					
ANR	3260037	IfStatement	if ( ! schedd_name )		3260005	4					
ANR	3260038	Condition	! schedd_name	3865:5:102924:102935	3260005	0	True				
ANR	3260039	UnaryOperationExpression	! schedd_name		3260005	0					
ANR	3260040	UnaryOperator	!		3260005	0					
ANR	3260041	Identifier	schedd_name		3260005	1					
ANR	3260042	ExpressionStatement	schedd_name = NULLSTRING	3865:19:102938:102960	3260005	1	True				
ANR	3260043	AssignmentExpression	schedd_name = NULLSTRING		3260005	0		=			
ANR	3260044	Identifier	schedd_name		3260005	0					
ANR	3260045	Identifier	NULLSTRING		3260005	1					
ANR	3260046	IfStatement	if ( ! job_ad )		3260005	5					
ANR	3260047	Condition	! job_ad	3866:5:102967:102973	3260005	0	True				
ANR	3260048	UnaryOperationExpression	! job_ad		3260005	0					
ANR	3260049	UnaryOperator	!		3260005	0					
ANR	3260050	Identifier	job_ad		3260005	1					
ANR	3260051	CompoundStatement		13:14:320:320	3260005	1					
ANR	3260052	ExpressionStatement	ad_string = NULLSTRING	3867:2:102980:103000	3260005	0	True				
ANR	3260053	AssignmentExpression	ad_string = NULLSTRING		3260005	0		=			
ANR	3260054	Identifier	ad_string		3260005	0					
ANR	3260055	Identifier	NULLSTRING		3260005	1					
ANR	3260056	ElseStatement	else		3260005	0					
ANR	3260057	CompoundStatement		15:8:354:354	3260005	0					
ANR	3260058	IfStatement	if ( useXMLClassads )		3260005	0					
ANR	3260059	Condition	useXMLClassads	3869:7:103019:103032	3260005	0	True				
ANR	3260060	Identifier	useXMLClassads		3260005	0					
ANR	3260061	CompoundStatement		17:3:385:412	3260005	1					
ANR	3260062	IdentifierDeclStatement	ClassAdXMLUnparser unparser ;	3870:3:103041:103068	3260005	0	True				
ANR	3260063	IdentifierDecl	unparser		3260005	0					
ANR	3260064	IdentifierDeclType	ClassAdXMLUnparser		3260005	0					
ANR	3260065	Identifier	unparser		3260005	1					
ANR	3260066	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3871:3:103073:103110	3260005	1	True				
ANR	3260067	CallExpression	unparser . SetUseCompactSpacing ( true )		3260005	0					
ANR	3260068	Callee	unparser . SetUseCompactSpacing		3260005	0					
ANR	3260069	MemberAccess	unparser . SetUseCompactSpacing		3260005	0					
ANR	3260070	Identifier	unparser		3260005	0					
ANR	3260071	Identifier	SetUseCompactSpacing		3260005	1					
ANR	3260072	ArgumentList	true		3260005	1					
ANR	3260073	Argument	true		3260005	0					
ANR	3260074	Identifier	true		3260005	0					
ANR	3260075	ExpressionStatement	unparser . SetOutputType ( false )	3872:3:103115:103146	3260005	2	True				
ANR	3260076	CallExpression	unparser . SetOutputType ( false )		3260005	0					
ANR	3260077	Callee	unparser . SetOutputType		3260005	0					
ANR	3260078	MemberAccess	unparser . SetOutputType		3260005	0					
ANR	3260079	Identifier	unparser		3260005	0					
ANR	3260080	Identifier	SetOutputType		3260005	1					
ANR	3260081	ArgumentList	false		3260005	1					
ANR	3260082	Argument	false		3260005	0					
ANR	3260083	Identifier	false		3260005	0					
ANR	3260084	ExpressionStatement	unparser . SetOutputTargetType ( false )	3873:3:103151:103188	3260005	3	True				
ANR	3260085	CallExpression	unparser . SetOutputTargetType ( false )		3260005	0					
ANR	3260086	Callee	unparser . SetOutputTargetType		3260005	0					
ANR	3260087	MemberAccess	unparser . SetOutputTargetType		3260005	0					
ANR	3260088	Identifier	unparser		3260005	0					
ANR	3260089	Identifier	SetOutputTargetType		3260005	1					
ANR	3260090	ArgumentList	false		3260005	1					
ANR	3260091	Argument	false		3260005	0					
ANR	3260092	Identifier	false		3260005	0					
ANR	3260093	ExpressionStatement	"unparser . Unparse ( job_ad , ad_string )"	3874:3:103193:103230	3260005	4	True				
ANR	3260094	CallExpression	"unparser . Unparse ( job_ad , ad_string )"		3260005	0					
ANR	3260095	Callee	unparser . Unparse		3260005	0					
ANR	3260096	MemberAccess	unparser . Unparse		3260005	0					
ANR	3260097	Identifier	unparser		3260005	0					
ANR	3260098	Identifier	Unparse		3260005	1					
ANR	3260099	ArgumentList	job_ad		3260005	1					
ANR	3260100	Argument	job_ad		3260005	0					
ANR	3260101	Identifier	job_ad		3260005	0					
ANR	3260102	Argument	ad_string		3260005	1					
ANR	3260103	Identifier	ad_string		3260005	0					
ANR	3260104	ElseStatement	else		3260005	0					
ANR	3260105	CompoundStatement		23:3:590:617	3260005	0					
ANR	3260106	IdentifierDeclStatement	NewClassAdUnparser unparser ;	3876:3:103246:103273	3260005	0	True				
ANR	3260107	IdentifierDecl	unparser		3260005	0					
ANR	3260108	IdentifierDeclType	NewClassAdUnparser		3260005	0					
ANR	3260109	Identifier	unparser		3260005	1					
ANR	3260110	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	3877:3:103278:103315	3260005	1	True				
ANR	3260111	CallExpression	unparser . SetUseCompactSpacing ( true )		3260005	0					
ANR	3260112	Callee	unparser . SetUseCompactSpacing		3260005	0					
ANR	3260113	MemberAccess	unparser . SetUseCompactSpacing		3260005	0					
ANR	3260114	Identifier	unparser		3260005	0					
ANR	3260115	Identifier	SetUseCompactSpacing		3260005	1					
ANR	3260116	ArgumentList	true		3260005	1					
ANR	3260117	Argument	true		3260005	0					
ANR	3260118	Identifier	true		3260005	0					
ANR	3260119	ExpressionStatement	unparser . SetOutputType ( false )	3878:3:103320:103351	3260005	2	True				
ANR	3260120	CallExpression	unparser . SetOutputType ( false )		3260005	0					
ANR	3260121	Callee	unparser . SetOutputType		3260005	0					
ANR	3260122	MemberAccess	unparser . SetOutputType		3260005	0					
ANR	3260123	Identifier	unparser		3260005	0					
ANR	3260124	Identifier	SetOutputType		3260005	1					
ANR	3260125	ArgumentList	false		3260005	1					
ANR	3260126	Argument	false		3260005	0					
ANR	3260127	Identifier	false		3260005	0					
ANR	3260128	ExpressionStatement	unparser . SetOutputTargetType ( false )	3879:3:103356:103393	3260005	3	True				
ANR	3260129	CallExpression	unparser . SetOutputTargetType ( false )		3260005	0					
ANR	3260130	Callee	unparser . SetOutputTargetType		3260005	0					
ANR	3260131	MemberAccess	unparser . SetOutputTargetType		3260005	0					
ANR	3260132	Identifier	unparser		3260005	0					
ANR	3260133	Identifier	SetOutputTargetType		3260005	1					
ANR	3260134	ArgumentList	false		3260005	1					
ANR	3260135	Argument	false		3260005	0					
ANR	3260136	Identifier	false		3260005	0					
ANR	3260137	ExpressionStatement	"unparser . Unparse ( job_ad , ad_string )"	3880:3:103398:103435	3260005	4	True				
ANR	3260138	CallExpression	"unparser . Unparse ( job_ad , ad_string )"		3260005	0					
ANR	3260139	Callee	unparser . Unparse		3260005	0					
ANR	3260140	MemberAccess	unparser . Unparse		3260005	0					
ANR	3260141	Identifier	unparser		3260005	0					
ANR	3260142	Identifier	Unparse		3260005	1					
ANR	3260143	ArgumentList	job_ad		3260005	1					
ANR	3260144	Argument	job_ad		3260005	0					
ANR	3260145	Identifier	job_ad		3260005	0					
ANR	3260146	Argument	ad_string		3260005	1					
ANR	3260147	Identifier	ad_string		3260005	0					
ANR	3260148	IdentifierDeclStatement	std :: string reqline ;	3883:1:103445:103464	3260005	6	True				
ANR	3260149	IdentifierDecl	reqline		3260005	0					
ANR	3260150	IdentifierDeclType	std :: string		3260005	0					
ANR	3260151	Identifier	reqline		3260005	1					
ANR	3260152	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3884:1:103467:103519	3260005	7	True				
ANR	3260153	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3260005	0					
ANR	3260154	IdentifierDeclType	char *		3260005	0					
ANR	3260155	Identifier	esc1		3260005	1					
ANR	3260156	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3260005	2		=			
ANR	3260157	Identifier	esc1		3260005	0					
ANR	3260158	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3260005	1					
ANR	3260159	Callee	strdup		3260005	0					
ANR	3260160	Identifier	strdup		3260005	0					
ANR	3260161	ArgumentList	escapeGahpString ( schedd_name )		3260005	1					
ANR	3260162	Argument	escapeGahpString ( schedd_name )		3260005	0					
ANR	3260163	CallExpression	escapeGahpString ( schedd_name )		3260005	0					
ANR	3260164	Callee	escapeGahpString		3260005	0					
ANR	3260165	Identifier	escapeGahpString		3260005	0					
ANR	3260166	ArgumentList	schedd_name		3260005	1					
ANR	3260167	Argument	schedd_name		3260005	0					
ANR	3260168	Identifier	schedd_name		3260005	0					
ANR	3260169	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) ) ;	3885:1:103522:103580	3260005	8	True				
ANR	3260170	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3260005	0					
ANR	3260171	IdentifierDeclType	char *		3260005	0					
ANR	3260172	Identifier	esc2		3260005	1					
ANR	3260173	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3260005	2		=			
ANR	3260174	Identifier	esc2		3260005	0					
ANR	3260175	CallExpression	strdup ( escapeGahpString ( ad_string . Value ( ) ) )		3260005	1					
ANR	3260176	Callee	strdup		3260005	0					
ANR	3260177	Identifier	strdup		3260005	0					
ANR	3260178	ArgumentList	escapeGahpString ( ad_string . Value ( ) )		3260005	1					
ANR	3260179	Argument	escapeGahpString ( ad_string . Value ( ) )		3260005	0					
ANR	3260180	CallExpression	escapeGahpString ( ad_string . Value ( ) )		3260005	0					
ANR	3260181	Callee	escapeGahpString		3260005	0					
ANR	3260182	Identifier	escapeGahpString		3260005	0					
ANR	3260183	ArgumentList	ad_string . Value ( )		3260005	1					
ANR	3260184	Argument	ad_string . Value ( )		3260005	0					
ANR	3260185	CallExpression	ad_string . Value ( )		3260005	0					
ANR	3260186	Callee	ad_string . Value		3260005	0					
ANR	3260187	MemberAccess	ad_string . Value		3260005	0					
ANR	3260188	Identifier	ad_string		3260005	0					
ANR	3260189	Identifier	Value		3260005	1					
ANR	3260190	ArgumentList			3260005	1					
ANR	3260191	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	3886:1:103583:103628	3260005	9	True				
ANR	3260192	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3260005	0					
ANR	3260193	IdentifierDeclType	int		3260005	0					
ANR	3260194	Identifier	x		3260005	1					
ANR	3260195	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3260005	2		=			
ANR	3260196	Identifier	x		3260005	0					
ANR	3260197	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3260005	1					
ANR	3260198	Callee	sprintf		3260005	0					
ANR	3260199	Identifier	sprintf		3260005	0					
ANR	3260200	ArgumentList	reqline		3260005	1					
ANR	3260201	Argument	reqline		3260005	0					
ANR	3260202	Identifier	reqline		3260005	0					
ANR	3260203	Argument	"""%s %s"""		3260005	1					
ANR	3260204	PrimaryExpression	"""%s %s"""		3260005	0					
ANR	3260205	Argument	esc1		3260005	2					
ANR	3260206	Identifier	esc1		3260005	0					
ANR	3260207	Argument	esc2		3260005	3					
ANR	3260208	Identifier	esc2		3260005	0					
ANR	3260209	ExpressionStatement	free ( esc1 )	3887:1:103631:103643	3260005	10	True				
ANR	3260210	CallExpression	free ( esc1 )		3260005	0					
ANR	3260211	Callee	free		3260005	0					
ANR	3260212	Identifier	free		3260005	0					
ANR	3260213	ArgumentList	esc1		3260005	1					
ANR	3260214	Argument	esc1		3260005	0					
ANR	3260215	Identifier	esc1		3260005	0					
ANR	3260216	ExpressionStatement	free ( esc2 )	3888:1:103646:103658	3260005	11	True				
ANR	3260217	CallExpression	free ( esc2 )		3260005	0					
ANR	3260218	Callee	free		3260005	0					
ANR	3260219	Identifier	free		3260005	0					
ANR	3260220	ArgumentList	esc2		3260005	1					
ANR	3260221	Argument	esc2		3260005	0					
ANR	3260222	Identifier	esc2		3260005	0					
ANR	3260223	ExpressionStatement	ASSERT ( x > 0 )	3889:1:103661:103676	3260005	12	True				
ANR	3260224	CallExpression	ASSERT ( x > 0 )		3260005	0					
ANR	3260225	Callee	ASSERT		3260005	0					
ANR	3260226	Identifier	ASSERT		3260005	0					
ANR	3260227	ArgumentList	x > 0		3260005	1					
ANR	3260228	Argument	x > 0		3260005	0					
ANR	3260229	RelationalExpression	x > 0		3260005	0		>			
ANR	3260230	Identifier	x		3260005	0					
ANR	3260231	PrimaryExpression	0		3260005	1					
ANR	3260232	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3890:1:103679:103712	3260005	13	True				
ANR	3260233	IdentifierDecl	* buf = reqline . c_str ( )		3260005	0					
ANR	3260234	IdentifierDeclType	const char *		3260005	0					
ANR	3260235	Identifier	buf		3260005	1					
ANR	3260236	AssignmentExpression	* buf = reqline . c_str ( )		3260005	2		=			
ANR	3260237	Identifier	buf		3260005	0					
ANR	3260238	CallExpression	reqline . c_str ( )		3260005	1					
ANR	3260239	Callee	reqline . c_str		3260005	0					
ANR	3260240	MemberAccess	reqline . c_str		3260005	0					
ANR	3260241	Identifier	reqline		3260005	0					
ANR	3260242	Identifier	c_str		3260005	1					
ANR	3260243	ArgumentList			3260005	1					
ANR	3260244	IfStatement	"if ( ! is_pending ( command , buf ) )"		3260005	14					
ANR	3260245	Condition	"! is_pending ( command , buf )"	3894:6:103813:103836	3260005	0	True				
ANR	3260246	UnaryOperationExpression	"! is_pending ( command , buf )"		3260005	0					
ANR	3260247	UnaryOperator	!		3260005	0					
ANR	3260248	CallExpression	"is_pending ( command , buf )"		3260005	1					
ANR	3260249	Callee	is_pending		3260005	0					
ANR	3260250	Identifier	is_pending		3260005	0					
ANR	3260251	ArgumentList	command		3260005	1					
ANR	3260252	Argument	command		3260005	0					
ANR	3260253	Identifier	command		3260005	0					
ANR	3260254	Argument	buf		3260005	1					
ANR	3260255	Identifier	buf		3260005	0					
ANR	3260256	CompoundStatement		41:33:1184:1184	3260005	1					
ANR	3260257	IfStatement	if ( m_mode == results_only )		3260005	0					
ANR	3260258	Condition	m_mode == results_only	3897:7:103945:103966	3260005	0	True				
ANR	3260259	EqualityExpression	m_mode == results_only		3260005	0		==			
ANR	3260260	Identifier	m_mode		3260005	0					
ANR	3260261	Identifier	results_only		3260005	1					
ANR	3260262	CompoundStatement		44:32:1314:1314	3260005	1					
ANR	3260263	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3898:3:103975:104014	3260005	0	True				
ANR	3260264	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3260005	0					
ANR	3260265	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3900:2:104022:104058	3260005	1	True				
ANR	3260266	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3260005	0					
ANR	3260267	Callee	now_pending		3260005	0					
ANR	3260268	Identifier	now_pending		3260005	0					
ANR	3260269	ArgumentList	command		3260005	1					
ANR	3260270	Argument	command		3260005	0					
ANR	3260271	Identifier	command		3260005	0					
ANR	3260272	Argument	buf		3260005	1					
ANR	3260273	Identifier	buf		3260005	0					
ANR	3260274	Argument	deleg_proxy		3260005	2					
ANR	3260275	Identifier	deleg_proxy		3260005	0					
ANR	3260276	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3906:1:104152:104203	3260005	15	True				
ANR	3260277	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3260005	0					
ANR	3260278	IdentifierDeclType	Gahp_Args *		3260005	0					
ANR	3260279	Identifier	result		3260005	1					
ANR	3260280	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3260005	2		=			
ANR	3260281	Identifier	result		3260005	0					
ANR	3260282	CallExpression	"get_pending_result ( command , buf )"		3260005	1					
ANR	3260283	Callee	get_pending_result		3260005	0					
ANR	3260284	Identifier	get_pending_result		3260005	0					
ANR	3260285	ArgumentList	command		3260005	1					
ANR	3260286	Argument	command		3260005	0					
ANR	3260287	Identifier	command		3260005	0					
ANR	3260288	Argument	buf		3260005	1					
ANR	3260289	Identifier	buf		3260005	0					
ANR	3260290	IfStatement	if ( result )		3260005	16					
ANR	3260291	Condition	result	3907:6:104211:104216	3260005	0	True				
ANR	3260292	Identifier	result		3260005	0					
ANR	3260293	CompoundStatement		59:2:1659:1669	3260005	1					
ANR	3260294	IfStatement	if ( result -> argc != 3 )		3260005	0					
ANR	3260295	Condition	result -> argc != 3	3909:6:104252:104268	3260005	0	True				
ANR	3260296	EqualityExpression	result -> argc != 3		3260005	0		!=			
ANR	3260297	PtrMemberAccess	result -> argc		3260005	0					
ANR	3260298	Identifier	result		3260005	0					
ANR	3260299	Identifier	argc		3260005	1					
ANR	3260300	PrimaryExpression	3		3260005	1					
ANR	3260301	CompoundStatement		56:25:1615:1615	3260005	1					
ANR	3260302	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3910:3:104276:104307	3260005	0	True				
ANR	3260303	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3260005	0					
ANR	3260304	Callee	EXCEPT		3260005	0					
ANR	3260305	Identifier	EXCEPT		3260005	0					
ANR	3260306	ArgumentList	"""Bad %s Result"""		3260005	1					
ANR	3260307	Argument	"""Bad %s Result"""		3260005	0					
ANR	3260308	PrimaryExpression	"""Bad %s Result"""		3260005	0					
ANR	3260309	Argument	command		3260005	1					
ANR	3260310	Identifier	command		3260005	0					
ANR	3260311	IdentifierDeclStatement	int rc = 1 ;	3912:2:104315:104325	3260005	1	True				
ANR	3260312	IdentifierDecl	rc = 1		3260005	0					
ANR	3260313	IdentifierDeclType	int		3260005	0					
ANR	3260314	Identifier	rc		3260005	1					
ANR	3260315	AssignmentExpression	rc = 1		3260005	2		=			
ANR	3260316	Identifier	rc		3260005	0					
ANR	3260317	PrimaryExpression	1		3260005	1					
ANR	3260318	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3260005	2					
ANR	3260319	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3913:7:104334:104358	3260005	0	True				
ANR	3260320	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3260005	0		==			
ANR	3260321	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3260005	0					
ANR	3260322	ArrayIndexing	result -> argv [ 1 ]		3260005	0					
ANR	3260323	PtrMemberAccess	result -> argv		3260005	0					
ANR	3260324	Identifier	result		3260005	0					
ANR	3260325	Identifier	argv		3260005	1					
ANR	3260326	PrimaryExpression	1		3260005	1					
ANR	3260327	PrimaryExpression	0		3260005	1					
ANR	3260328	PrimaryExpression	'S'		3260005	1					
ANR	3260329	CompoundStatement		60:35:1706:1706	3260005	1					
ANR	3260330	ExpressionStatement	rc = 0	3914:3:104367:104373	3260005	0	True				
ANR	3260331	AssignmentExpression	rc = 0		3260005	0		=			
ANR	3260332	Identifier	rc		3260005	0					
ANR	3260333	PrimaryExpression	0		3260005	1					
ANR	3260334	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3260005	3					
ANR	3260335	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3916:7:104386:104424	3260005	0	True				
ANR	3260336	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3260005	0					
ANR	3260337	Callee	strcasecmp		3260005	0					
ANR	3260338	Identifier	strcasecmp		3260005	0					
ANR	3260339	ArgumentList	result -> argv [ 2 ]		3260005	1					
ANR	3260340	Argument	result -> argv [ 2 ]		3260005	0					
ANR	3260341	ArrayIndexing	result -> argv [ 2 ]		3260005	0					
ANR	3260342	PtrMemberAccess	result -> argv		3260005	0					
ANR	3260343	Identifier	result		3260005	0					
ANR	3260344	Identifier	argv		3260005	1					
ANR	3260345	PrimaryExpression	2		3260005	1					
ANR	3260346	Argument	NULLSTRING		3260005	1					
ANR	3260347	Identifier	NULLSTRING		3260005	0					
ANR	3260348	CompoundStatement		63:49:1772:1772	3260005	1					
ANR	3260349	ExpressionStatement	error_string = result -> argv [ 2 ]	3917:3:104433:104463	3260005	0	True				
ANR	3260350	AssignmentExpression	error_string = result -> argv [ 2 ]		3260005	0		=			
ANR	3260351	Identifier	error_string		3260005	0					
ANR	3260352	ArrayIndexing	result -> argv [ 2 ]		3260005	1					
ANR	3260353	PtrMemberAccess	result -> argv		3260005	0					
ANR	3260354	Identifier	result		3260005	0					
ANR	3260355	Identifier	argv		3260005	1					
ANR	3260356	PrimaryExpression	2		3260005	1					
ANR	3260357	ElseStatement	else		3260005	0					
ANR	3260358	CompoundStatement		65:9:1818:1818	3260005	0					
ANR	3260359	ExpressionStatement	"error_string = """""	3919:3:104479:104496	3260005	0	True				
ANR	3260360	AssignmentExpression	"error_string = """""		3260005	0		=			
ANR	3260361	Identifier	error_string		3260005	0					
ANR	3260362	PrimaryExpression	""""""		3260005	1					
ANR	3260363	Statement	delete	3921:2:104504:104509	3260005	4	True				
ANR	3260364	ExpressionStatement	result	3921:9:104511:104517	3260005	5	True				
ANR	3260365	Identifier	result		3260005	0					
ANR	3260366	ReturnStatement	return rc ;	3922:2:104521:104530	3260005	6	True				
ANR	3260367	Identifier	rc		3260005	0					
ANR	3260368	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3260005	17					
ANR	3260369	Condition	"check_pending_timeout ( command , buf )"	3926:6:104587:104620	3260005	0	True				
ANR	3260370	CallExpression	"check_pending_timeout ( command , buf )"		3260005	0					
ANR	3260371	Callee	check_pending_timeout		3260005	0					
ANR	3260372	Identifier	check_pending_timeout		3260005	0					
ANR	3260373	ArgumentList	command		3260005	1					
ANR	3260374	Argument	command		3260005	0					
ANR	3260375	Identifier	command		3260005	0					
ANR	3260376	Argument	buf		3260005	1					
ANR	3260377	Identifier	buf		3260005	0					
ANR	3260378	CompoundStatement		73:43:1968:1968	3260005	1					
ANR	3260379	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3928:2:104660:104708	3260005	0	True				
ANR	3260380	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3260005	0					
ANR	3260381	Callee	sprintf		3260005	0					
ANR	3260382	Identifier	sprintf		3260005	0					
ANR	3260383	ArgumentList	error_string		3260005	1					
ANR	3260384	Argument	error_string		3260005	0					
ANR	3260385	Identifier	error_string		3260005	0					
ANR	3260386	Argument	"""%s timed out"""		3260005	1					
ANR	3260387	PrimaryExpression	"""%s timed out"""		3260005	0					
ANR	3260388	Argument	command		3260005	2					
ANR	3260389	Identifier	command		3260005	0					
ANR	3260390	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3929:2:104712:104747	3260005	1	True				
ANR	3260391	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3260005	0					
ANR	3260392	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3933:1:104807:104840	3260005	18	True				
ANR	3260393	Identifier	GAHPCLIENT_COMMAND_PENDING		3260005	0					
ANR	3260394	ReturnType	int		3260005	1					
ANR	3260395	Identifier	GahpClient :: condor_job_stage_in		3260005	2					
ANR	3260396	ParameterList	"const char * schedd_name , ClassAd * job_ad"		3260005	3					
ANR	3260397	Parameter	const char * schedd_name	3853:32:102613:102635	3260005	0	True				
ANR	3260398	ParameterType	const char *		3260005	0					
ANR	3260399	Identifier	schedd_name		3260005	1					
ANR	3260400	Parameter	ClassAd * job_ad	3853:57:102638:102652	3260005	1	True				
ANR	3260401	ParameterType	ClassAd *		3260005	0					
ANR	3260402	Identifier	job_ad		3260005	1					
ANR	3260403	CFGEntryNode	ENTRY		3260005		True				
ANR	3260404	CFGExitNode	EXIT		3260005		True				
ANR	3260405	Symbol	server		3260005						
ANR	3260406	Symbol	server -> m_commands_supported		3260005						
ANR	3260407	Symbol	escapeGahpString		3260005						
ANR	3260408	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3260005						
ANR	3260409	Symbol	* server		3260005						
ANR	3260410	Symbol	ad_string		3260005						
ANR	3260411	Symbol	reqline . c_str		3260005						
ANR	3260412	Symbol	results_only		3260005						
ANR	3260413	Symbol	result -> argv		3260005						
ANR	3260414	Symbol	job_ad		3260005						
ANR	3260415	Symbol	* server -> m_commands_supported		3260005						
ANR	3260416	Symbol	sprintf		3260005						
ANR	3260417	Symbol	result		3260005						
ANR	3260418	Symbol	* result		3260005						
ANR	3260419	Symbol	server -> m_commands_supported -> contains_anycase		3260005						
ANR	3260420	Symbol	GAHPCLIENT_COMMAND_PENDING		3260005						
ANR	3260421	Symbol	reqline		3260005						
ANR	3260422	Symbol	m_mode		3260005						
ANR	3260423	Symbol	useXMLClassads		3260005						
ANR	3260424	Symbol	strcasecmp		3260005						
ANR	3260425	Symbol	* result -> argv		3260005						
ANR	3260426	Symbol	ad_string . Value		3260005						
ANR	3260427	Symbol	* * * result		3260005						
ANR	3260428	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3260005						
ANR	3260429	Symbol	false		3260005						
ANR	3260430	Symbol	* * result		3260005						
ANR	3260431	Symbol	NULLSTRING		3260005						
ANR	3260432	Symbol	command		3260005						
ANR	3260433	Symbol	get_pending_result		3260005						
ANR	3260434	Symbol	* * result -> argv		3260005						
ANR	3260435	Symbol	rc		3260005						
ANR	3260436	Symbol	error_string		3260005						
ANR	3260437	Symbol	esc2		3260005						
ANR	3260438	Symbol	buf		3260005						
ANR	3260439	Symbol	esc1		3260005						
ANR	3260440	Symbol	schedd_name		3260005						
ANR	3260441	Symbol	true		3260005						
ANR	3260442	Symbol	x		3260005						
ANR	3260443	Symbol	result -> argc		3260005						
ANR	3260444	Symbol	FALSE		3260005						
ANR	3260445	Symbol	* * server		3260005						
ANR	3260446	Symbol	unparser		3260005						
ANR	3260447	Symbol	strdup		3260005						
ANR	3260448	Symbol	check_pending_timeout		3260005						
ANR	3260449	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3260005						
ANR	3260450	Symbol	is_pending		3260005						
ANR	3260451	Symbol	deleg_proxy		3260005						
ANR	3260452	Function	GahpClient :: condor_job_stage_out	3936:0:104845:106557							
ANR	3260453	FunctionDef	"GahpClient :: condor_job_stage_out (const char * schedd_name , PROC_ID job_id)"		3260452	0					
ANR	3260454	CompoundStatement		3938:0:104923:106557	3260452	0					
ANR	3260455	Statement	static	3939:1:104926:104931	3260452	0	True				
ANR	3260456	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_STAGE_OUT"" ;"	3939:8:104933:104977	3260452	1	True				
ANR	3260457	IdentifierDecl	"* command = ""CONDOR_JOB_STAGE_OUT"""		3260452	0					
ANR	3260458	IdentifierDeclType	const char *		3260452	0					
ANR	3260459	Identifier	command		3260452	1					
ANR	3260460	AssignmentExpression	"* command = ""CONDOR_JOB_STAGE_OUT"""		3260452	2		=			
ANR	3260461	Identifier	command		3260452	0					
ANR	3260462	PrimaryExpression	"""CONDOR_JOB_STAGE_OUT"""		3260452	1					
ANR	3260463	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3260452	2					
ANR	3260464	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	3942:6:105026:105087	3260452	0	True				
ANR	3260465	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3260452	0		==			
ANR	3260466	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3260452	0					
ANR	3260467	Callee	server -> m_commands_supported -> contains_anycase		3260452	0					
ANR	3260468	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3260452	0					
ANR	3260469	PtrMemberAccess	server -> m_commands_supported		3260452	0					
ANR	3260470	Identifier	server		3260452	0					
ANR	3260471	Identifier	m_commands_supported		3260452	1					
ANR	3260472	Identifier	contains_anycase		3260452	1					
ANR	3260473	ArgumentList	command		3260452	1					
ANR	3260474	Argument	command		3260452	0					
ANR	3260475	Identifier	command		3260452	0					
ANR	3260476	Identifier	FALSE		3260452	1					
ANR	3260477	CompoundStatement		5:70:166:166	3260452	1					
ANR	3260478	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	3943:2:105094:105133	3260452	0	True				
ANR	3260479	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3260452	0					
ANR	3260480	IfStatement	if ( ! schedd_name )		3260452	3					
ANR	3260481	Condition	! schedd_name	3947:5:105171:105182	3260452	0	True				
ANR	3260482	UnaryOperationExpression	! schedd_name		3260452	0					
ANR	3260483	UnaryOperator	!		3260452	0					
ANR	3260484	Identifier	schedd_name		3260452	1					
ANR	3260485	ExpressionStatement	schedd_name = NULLSTRING	3947:19:105185:105207	3260452	1	True				
ANR	3260486	AssignmentExpression	schedd_name = NULLSTRING		3260452	0		=			
ANR	3260487	Identifier	schedd_name		3260452	0					
ANR	3260488	Identifier	NULLSTRING		3260452	1					
ANR	3260489	IdentifierDeclStatement	std :: string reqline ;	3948:1:105210:105229	3260452	4	True				
ANR	3260490	IdentifierDecl	reqline		3260452	0					
ANR	3260491	IdentifierDeclType	std :: string		3260452	0					
ANR	3260492	Identifier	reqline		3260452	1					
ANR	3260493	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	3949:1:105232:105284	3260452	5	True				
ANR	3260494	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3260452	0					
ANR	3260495	IdentifierDeclType	char *		3260452	0					
ANR	3260496	Identifier	esc1		3260452	1					
ANR	3260497	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3260452	2		=			
ANR	3260498	Identifier	esc1		3260452	0					
ANR	3260499	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3260452	1					
ANR	3260500	Callee	strdup		3260452	0					
ANR	3260501	Identifier	strdup		3260452	0					
ANR	3260502	ArgumentList	escapeGahpString ( schedd_name )		3260452	1					
ANR	3260503	Argument	escapeGahpString ( schedd_name )		3260452	0					
ANR	3260504	CallExpression	escapeGahpString ( schedd_name )		3260452	0					
ANR	3260505	Callee	escapeGahpString		3260452	0					
ANR	3260506	Identifier	escapeGahpString		3260452	0					
ANR	3260507	ArgumentList	schedd_name		3260452	1					
ANR	3260508	Argument	schedd_name		3260452	0					
ANR	3260509	Identifier	schedd_name		3260452	0					
ANR	3260510	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d.%d"" , esc1 , job_id . cluster , job_id . proc ) ;"	3950:1:105287:105358	3260452	6	True				
ANR	3260511	IdentifierDecl	"x = sprintf ( reqline , ""%s %d.%d"" , esc1 , job_id . cluster , job_id . proc )"		3260452	0					
ANR	3260512	IdentifierDeclType	int		3260452	0					
ANR	3260513	Identifier	x		3260452	1					
ANR	3260514	AssignmentExpression	"x = sprintf ( reqline , ""%s %d.%d"" , esc1 , job_id . cluster , job_id . proc )"		3260452	2		=			
ANR	3260515	Identifier	x		3260452	0					
ANR	3260516	CallExpression	"sprintf ( reqline , ""%s %d.%d"" , esc1 , job_id . cluster , job_id . proc )"		3260452	1					
ANR	3260517	Callee	sprintf		3260452	0					
ANR	3260518	Identifier	sprintf		3260452	0					
ANR	3260519	ArgumentList	reqline		3260452	1					
ANR	3260520	Argument	reqline		3260452	0					
ANR	3260521	Identifier	reqline		3260452	0					
ANR	3260522	Argument	"""%s %d.%d"""		3260452	1					
ANR	3260523	PrimaryExpression	"""%s %d.%d"""		3260452	0					
ANR	3260524	Argument	esc1		3260452	2					
ANR	3260525	Identifier	esc1		3260452	0					
ANR	3260526	Argument	job_id . cluster		3260452	3					
ANR	3260527	MemberAccess	job_id . cluster		3260452	0					
ANR	3260528	Identifier	job_id		3260452	0					
ANR	3260529	Identifier	cluster		3260452	1					
ANR	3260530	Argument	job_id . proc		3260452	4					
ANR	3260531	MemberAccess	job_id . proc		3260452	0					
ANR	3260532	Identifier	job_id		3260452	0					
ANR	3260533	Identifier	proc		3260452	1					
ANR	3260534	ExpressionStatement	free ( esc1 )	3951:1:105361:105373	3260452	7	True				
ANR	3260535	CallExpression	free ( esc1 )		3260452	0					
ANR	3260536	Callee	free		3260452	0					
ANR	3260537	Identifier	free		3260452	0					
ANR	3260538	ArgumentList	esc1		3260452	1					
ANR	3260539	Argument	esc1		3260452	0					
ANR	3260540	Identifier	esc1		3260452	0					
ANR	3260541	ExpressionStatement	ASSERT ( x > 0 )	3952:1:105376:105391	3260452	8	True				
ANR	3260542	CallExpression	ASSERT ( x > 0 )		3260452	0					
ANR	3260543	Callee	ASSERT		3260452	0					
ANR	3260544	Identifier	ASSERT		3260452	0					
ANR	3260545	ArgumentList	x > 0		3260452	1					
ANR	3260546	Argument	x > 0		3260452	0					
ANR	3260547	RelationalExpression	x > 0		3260452	0		>			
ANR	3260548	Identifier	x		3260452	0					
ANR	3260549	PrimaryExpression	0		3260452	1					
ANR	3260550	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	3953:1:105394:105427	3260452	9	True				
ANR	3260551	IdentifierDecl	* buf = reqline . c_str ( )		3260452	0					
ANR	3260552	IdentifierDeclType	const char *		3260452	0					
ANR	3260553	Identifier	buf		3260452	1					
ANR	3260554	AssignmentExpression	* buf = reqline . c_str ( )		3260452	2		=			
ANR	3260555	Identifier	buf		3260452	0					
ANR	3260556	CallExpression	reqline . c_str ( )		3260452	1					
ANR	3260557	Callee	reqline . c_str		3260452	0					
ANR	3260558	MemberAccess	reqline . c_str		3260452	0					
ANR	3260559	Identifier	reqline		3260452	0					
ANR	3260560	Identifier	c_str		3260452	1					
ANR	3260561	ArgumentList			3260452	1					
ANR	3260562	IfStatement	"if ( ! is_pending ( command , buf ) )"		3260452	10					
ANR	3260563	Condition	"! is_pending ( command , buf )"	3957:6:105528:105551	3260452	0	True				
ANR	3260564	UnaryOperationExpression	"! is_pending ( command , buf )"		3260452	0					
ANR	3260565	UnaryOperator	!		3260452	0					
ANR	3260566	CallExpression	"is_pending ( command , buf )"		3260452	1					
ANR	3260567	Callee	is_pending		3260452	0					
ANR	3260568	Identifier	is_pending		3260452	0					
ANR	3260569	ArgumentList	command		3260452	1					
ANR	3260570	Argument	command		3260452	0					
ANR	3260571	Identifier	command		3260452	0					
ANR	3260572	Argument	buf		3260452	1					
ANR	3260573	Identifier	buf		3260452	0					
ANR	3260574	CompoundStatement		20:33:631:631	3260452	1					
ANR	3260575	IfStatement	if ( m_mode == results_only )		3260452	0					
ANR	3260576	Condition	m_mode == results_only	3960:7:105660:105681	3260452	0	True				
ANR	3260577	EqualityExpression	m_mode == results_only		3260452	0		==			
ANR	3260578	Identifier	m_mode		3260452	0					
ANR	3260579	Identifier	results_only		3260452	1					
ANR	3260580	CompoundStatement		23:32:761:761	3260452	1					
ANR	3260581	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	3961:3:105690:105729	3260452	0	True				
ANR	3260582	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3260452	0					
ANR	3260583	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	3963:2:105737:105773	3260452	1	True				
ANR	3260584	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3260452	0					
ANR	3260585	Callee	now_pending		3260452	0					
ANR	3260586	Identifier	now_pending		3260452	0					
ANR	3260587	ArgumentList	command		3260452	1					
ANR	3260588	Argument	command		3260452	0					
ANR	3260589	Identifier	command		3260452	0					
ANR	3260590	Argument	buf		3260452	1					
ANR	3260591	Identifier	buf		3260452	0					
ANR	3260592	Argument	deleg_proxy		3260452	2					
ANR	3260593	Identifier	deleg_proxy		3260452	0					
ANR	3260594	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	3969:1:105867:105918	3260452	11	True				
ANR	3260595	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3260452	0					
ANR	3260596	IdentifierDeclType	Gahp_Args *		3260452	0					
ANR	3260597	Identifier	result		3260452	1					
ANR	3260598	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3260452	2		=			
ANR	3260599	Identifier	result		3260452	0					
ANR	3260600	CallExpression	"get_pending_result ( command , buf )"		3260452	1					
ANR	3260601	Callee	get_pending_result		3260452	0					
ANR	3260602	Identifier	get_pending_result		3260452	0					
ANR	3260603	ArgumentList	command		3260452	1					
ANR	3260604	Argument	command		3260452	0					
ANR	3260605	Identifier	command		3260452	0					
ANR	3260606	Argument	buf		3260452	1					
ANR	3260607	Identifier	buf		3260452	0					
ANR	3260608	IfStatement	if ( result )		3260452	12					
ANR	3260609	Condition	result	3970:6:105926:105931	3260452	0	True				
ANR	3260610	Identifier	result		3260452	0					
ANR	3260611	CompoundStatement		38:2:1106:1116	3260452	1					
ANR	3260612	IfStatement	if ( result -> argc != 3 )		3260452	0					
ANR	3260613	Condition	result -> argc != 3	3972:6:105967:105983	3260452	0	True				
ANR	3260614	EqualityExpression	result -> argc != 3		3260452	0		!=			
ANR	3260615	PtrMemberAccess	result -> argc		3260452	0					
ANR	3260616	Identifier	result		3260452	0					
ANR	3260617	Identifier	argc		3260452	1					
ANR	3260618	PrimaryExpression	3		3260452	1					
ANR	3260619	CompoundStatement		35:25:1062:1062	3260452	1					
ANR	3260620	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	3973:3:105991:106022	3260452	0	True				
ANR	3260621	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3260452	0					
ANR	3260622	Callee	EXCEPT		3260452	0					
ANR	3260623	Identifier	EXCEPT		3260452	0					
ANR	3260624	ArgumentList	"""Bad %s Result"""		3260452	1					
ANR	3260625	Argument	"""Bad %s Result"""		3260452	0					
ANR	3260626	PrimaryExpression	"""Bad %s Result"""		3260452	0					
ANR	3260627	Argument	command		3260452	1					
ANR	3260628	Identifier	command		3260452	0					
ANR	3260629	IdentifierDeclStatement	int rc = 1 ;	3975:2:106030:106040	3260452	1	True				
ANR	3260630	IdentifierDecl	rc = 1		3260452	0					
ANR	3260631	IdentifierDeclType	int		3260452	0					
ANR	3260632	Identifier	rc		3260452	1					
ANR	3260633	AssignmentExpression	rc = 1		3260452	2		=			
ANR	3260634	Identifier	rc		3260452	0					
ANR	3260635	PrimaryExpression	1		3260452	1					
ANR	3260636	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3260452	2					
ANR	3260637	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	3976:7:106049:106073	3260452	0	True				
ANR	3260638	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3260452	0		==			
ANR	3260639	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3260452	0					
ANR	3260640	ArrayIndexing	result -> argv [ 1 ]		3260452	0					
ANR	3260641	PtrMemberAccess	result -> argv		3260452	0					
ANR	3260642	Identifier	result		3260452	0					
ANR	3260643	Identifier	argv		3260452	1					
ANR	3260644	PrimaryExpression	1		3260452	1					
ANR	3260645	PrimaryExpression	0		3260452	1					
ANR	3260646	PrimaryExpression	'S'		3260452	1					
ANR	3260647	CompoundStatement		39:35:1153:1153	3260452	1					
ANR	3260648	ExpressionStatement	rc = 0	3977:3:106082:106088	3260452	0	True				
ANR	3260649	AssignmentExpression	rc = 0		3260452	0		=			
ANR	3260650	Identifier	rc		3260452	0					
ANR	3260651	PrimaryExpression	0		3260452	1					
ANR	3260652	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3260452	3					
ANR	3260653	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	3979:7:106101:106139	3260452	0	True				
ANR	3260654	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3260452	0					
ANR	3260655	Callee	strcasecmp		3260452	0					
ANR	3260656	Identifier	strcasecmp		3260452	0					
ANR	3260657	ArgumentList	result -> argv [ 2 ]		3260452	1					
ANR	3260658	Argument	result -> argv [ 2 ]		3260452	0					
ANR	3260659	ArrayIndexing	result -> argv [ 2 ]		3260452	0					
ANR	3260660	PtrMemberAccess	result -> argv		3260452	0					
ANR	3260661	Identifier	result		3260452	0					
ANR	3260662	Identifier	argv		3260452	1					
ANR	3260663	PrimaryExpression	2		3260452	1					
ANR	3260664	Argument	NULLSTRING		3260452	1					
ANR	3260665	Identifier	NULLSTRING		3260452	0					
ANR	3260666	CompoundStatement		42:49:1219:1219	3260452	1					
ANR	3260667	ExpressionStatement	error_string = result -> argv [ 2 ]	3980:3:106148:106178	3260452	0	True				
ANR	3260668	AssignmentExpression	error_string = result -> argv [ 2 ]		3260452	0		=			
ANR	3260669	Identifier	error_string		3260452	0					
ANR	3260670	ArrayIndexing	result -> argv [ 2 ]		3260452	1					
ANR	3260671	PtrMemberAccess	result -> argv		3260452	0					
ANR	3260672	Identifier	result		3260452	0					
ANR	3260673	Identifier	argv		3260452	1					
ANR	3260674	PrimaryExpression	2		3260452	1					
ANR	3260675	ElseStatement	else		3260452	0					
ANR	3260676	CompoundStatement		44:9:1265:1265	3260452	0					
ANR	3260677	ExpressionStatement	"error_string = """""	3982:3:106194:106211	3260452	0	True				
ANR	3260678	AssignmentExpression	"error_string = """""		3260452	0		=			
ANR	3260679	Identifier	error_string		3260452	0					
ANR	3260680	PrimaryExpression	""""""		3260452	1					
ANR	3260681	Statement	delete	3984:2:106219:106224	3260452	4	True				
ANR	3260682	ExpressionStatement	result	3984:9:106226:106232	3260452	5	True				
ANR	3260683	Identifier	result		3260452	0					
ANR	3260684	ReturnStatement	return rc ;	3985:2:106236:106245	3260452	6	True				
ANR	3260685	Identifier	rc		3260452	0					
ANR	3260686	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3260452	13					
ANR	3260687	Condition	"check_pending_timeout ( command , buf )"	3989:6:106302:106335	3260452	0	True				
ANR	3260688	CallExpression	"check_pending_timeout ( command , buf )"		3260452	0					
ANR	3260689	Callee	check_pending_timeout		3260452	0					
ANR	3260690	Identifier	check_pending_timeout		3260452	0					
ANR	3260691	ArgumentList	command		3260452	1					
ANR	3260692	Argument	command		3260452	0					
ANR	3260693	Identifier	command		3260452	0					
ANR	3260694	Argument	buf		3260452	1					
ANR	3260695	Identifier	buf		3260452	0					
ANR	3260696	CompoundStatement		52:43:1415:1415	3260452	1					
ANR	3260697	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	3991:2:106375:106423	3260452	0	True				
ANR	3260698	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3260452	0					
ANR	3260699	Callee	sprintf		3260452	0					
ANR	3260700	Identifier	sprintf		3260452	0					
ANR	3260701	ArgumentList	error_string		3260452	1					
ANR	3260702	Argument	error_string		3260452	0					
ANR	3260703	Identifier	error_string		3260452	0					
ANR	3260704	Argument	"""%s timed out"""		3260452	1					
ANR	3260705	PrimaryExpression	"""%s timed out"""		3260452	0					
ANR	3260706	Argument	command		3260452	2					
ANR	3260707	Identifier	command		3260452	0					
ANR	3260708	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	3992:2:106427:106462	3260452	1	True				
ANR	3260709	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3260452	0					
ANR	3260710	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	3996:1:106522:106555	3260452	14	True				
ANR	3260711	Identifier	GAHPCLIENT_COMMAND_PENDING		3260452	0					
ANR	3260712	ReturnType	int		3260452	1					
ANR	3260713	Identifier	GahpClient :: condor_job_stage_out		3260452	2					
ANR	3260714	ParameterList	"const char * schedd_name , PROC_ID job_id"		3260452	3					
ANR	3260715	Parameter	const char * schedd_name	3937:33:104882:104904	3260452	0	True				
ANR	3260716	ParameterType	const char *		3260452	0					
ANR	3260717	Identifier	schedd_name		3260452	1					
ANR	3260718	Parameter	PROC_ID job_id	3937:58:104907:104920	3260452	1	True				
ANR	3260719	ParameterType	PROC_ID		3260452	0					
ANR	3260720	Identifier	job_id		3260452	1					
ANR	3260721	CFGEntryNode	ENTRY		3260452		True				
ANR	3260722	CFGExitNode	EXIT		3260452		True				
ANR	3260723	Symbol	server		3260452						
ANR	3260724	Symbol	server -> m_commands_supported		3260452						
ANR	3260725	Symbol	escapeGahpString		3260452						
ANR	3260726	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3260452						
ANR	3260727	Symbol	* server		3260452						
ANR	3260728	Symbol	reqline . c_str		3260452						
ANR	3260729	Symbol	results_only		3260452						
ANR	3260730	Symbol	result -> argv		3260452						
ANR	3260731	Symbol	* server -> m_commands_supported		3260452						
ANR	3260732	Symbol	sprintf		3260452						
ANR	3260733	Symbol	result		3260452						
ANR	3260734	Symbol	* result		3260452						
ANR	3260735	Symbol	server -> m_commands_supported -> contains_anycase		3260452						
ANR	3260736	Symbol	GAHPCLIENT_COMMAND_PENDING		3260452						
ANR	3260737	Symbol	reqline		3260452						
ANR	3260738	Symbol	job_id . cluster		3260452						
ANR	3260739	Symbol	m_mode		3260452						
ANR	3260740	Symbol	strcasecmp		3260452						
ANR	3260741	Symbol	* result -> argv		3260452						
ANR	3260742	Symbol	* * * result		3260452						
ANR	3260743	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3260452						
ANR	3260744	Symbol	* * result		3260452						
ANR	3260745	Symbol	NULLSTRING		3260452						
ANR	3260746	Symbol	command		3260452						
ANR	3260747	Symbol	get_pending_result		3260452						
ANR	3260748	Symbol	* * result -> argv		3260452						
ANR	3260749	Symbol	rc		3260452						
ANR	3260750	Symbol	error_string		3260452						
ANR	3260751	Symbol	job_id . proc		3260452						
ANR	3260752	Symbol	buf		3260452						
ANR	3260753	Symbol	esc1		3260452						
ANR	3260754	Symbol	schedd_name		3260452						
ANR	3260755	Symbol	job_id		3260452						
ANR	3260756	Symbol	x		3260452						
ANR	3260757	Symbol	result -> argc		3260452						
ANR	3260758	Symbol	* * server		3260452						
ANR	3260759	Symbol	FALSE		3260452						
ANR	3260760	Symbol	strdup		3260452						
ANR	3260761	Symbol	check_pending_timeout		3260452						
ANR	3260762	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3260452						
ANR	3260763	Symbol	is_pending		3260452						
ANR	3260764	Symbol	deleg_proxy		3260452						
ANR	3260765	Function	GahpClient :: condor_job_refresh_proxy	3999:0:106560:108437							
ANR	3260766	FunctionDef	"GahpClient :: condor_job_refresh_proxy (const char * schedd_name , PROC_ID job_id , const char * proxy_file)"		3260765	0					
ANR	3260767	CompoundStatement		4002:0:106676:108437	3260765	0					
ANR	3260768	Statement	static	4003:1:106679:106684	3260765	0	True				
ANR	3260769	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_REFRESH_PROXY"" ;"	4003:8:106686:106734	3260765	1	True				
ANR	3260770	IdentifierDecl	"* command = ""CONDOR_JOB_REFRESH_PROXY"""		3260765	0					
ANR	3260771	IdentifierDeclType	const char *		3260765	0					
ANR	3260772	Identifier	command		3260765	1					
ANR	3260773	AssignmentExpression	"* command = ""CONDOR_JOB_REFRESH_PROXY"""		3260765	2		=			
ANR	3260774	Identifier	command		3260765	0					
ANR	3260775	PrimaryExpression	"""CONDOR_JOB_REFRESH_PROXY"""		3260765	1					
ANR	3260776	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3260765	2					
ANR	3260777	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4006:6:106783:106844	3260765	0	True				
ANR	3260778	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3260765	0		==			
ANR	3260779	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3260765	0					
ANR	3260780	Callee	server -> m_commands_supported -> contains_anycase		3260765	0					
ANR	3260781	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3260765	0					
ANR	3260782	PtrMemberAccess	server -> m_commands_supported		3260765	0					
ANR	3260783	Identifier	server		3260765	0					
ANR	3260784	Identifier	m_commands_supported		3260765	1					
ANR	3260785	Identifier	contains_anycase		3260765	1					
ANR	3260786	ArgumentList	command		3260765	1					
ANR	3260787	Argument	command		3260765	0					
ANR	3260788	Identifier	command		3260765	0					
ANR	3260789	Identifier	FALSE		3260765	1					
ANR	3260790	CompoundStatement		5:70:170:170	3260765	1					
ANR	3260791	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4007:2:106851:106890	3260765	0	True				
ANR	3260792	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3260765	0					
ANR	3260793	IfStatement	if ( ! schedd_name )		3260765	3					
ANR	3260794	Condition	! schedd_name	4011:5:106928:106939	3260765	0	True				
ANR	3260795	UnaryOperationExpression	! schedd_name		3260765	0					
ANR	3260796	UnaryOperator	!		3260765	0					
ANR	3260797	Identifier	schedd_name		3260765	1					
ANR	3260798	ExpressionStatement	schedd_name = NULLSTRING	4011:19:106942:106964	3260765	1	True				
ANR	3260799	AssignmentExpression	schedd_name = NULLSTRING		3260765	0		=			
ANR	3260800	Identifier	schedd_name		3260765	0					
ANR	3260801	Identifier	NULLSTRING		3260765	1					
ANR	3260802	IfStatement	if ( ! proxy_file )		3260765	4					
ANR	3260803	Condition	! proxy_file	4012:5:106971:106981	3260765	0	True				
ANR	3260804	UnaryOperationExpression	! proxy_file		3260765	0					
ANR	3260805	UnaryOperator	!		3260765	0					
ANR	3260806	Identifier	proxy_file		3260765	1					
ANR	3260807	ExpressionStatement	proxy_file = NULLSTRING	4012:18:106984:107005	3260765	1	True				
ANR	3260808	AssignmentExpression	proxy_file = NULLSTRING		3260765	0		=			
ANR	3260809	Identifier	proxy_file		3260765	0					
ANR	3260810	Identifier	NULLSTRING		3260765	1					
ANR	3260811	IdentifierDeclStatement	std :: string reqline ;	4013:1:107008:107027	3260765	5	True				
ANR	3260812	IdentifierDecl	reqline		3260765	0					
ANR	3260813	IdentifierDeclType	std :: string		3260765	0					
ANR	3260814	Identifier	reqline		3260765	1					
ANR	3260815	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	4014:1:107030:107082	3260765	6	True				
ANR	3260816	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3260765	0					
ANR	3260817	IdentifierDeclType	char *		3260765	0					
ANR	3260818	Identifier	esc1		3260765	1					
ANR	3260819	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3260765	2		=			
ANR	3260820	Identifier	esc1		3260765	0					
ANR	3260821	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3260765	1					
ANR	3260822	Callee	strdup		3260765	0					
ANR	3260823	Identifier	strdup		3260765	0					
ANR	3260824	ArgumentList	escapeGahpString ( schedd_name )		3260765	1					
ANR	3260825	Argument	escapeGahpString ( schedd_name )		3260765	0					
ANR	3260826	CallExpression	escapeGahpString ( schedd_name )		3260765	0					
ANR	3260827	Callee	escapeGahpString		3260765	0					
ANR	3260828	Identifier	escapeGahpString		3260765	0					
ANR	3260829	ArgumentList	schedd_name		3260765	1					
ANR	3260830	Argument	schedd_name		3260765	0					
ANR	3260831	Identifier	schedd_name		3260765	0					
ANR	3260832	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( proxy_file ) ) ;	4015:1:107085:107136	3260765	7	True				
ANR	3260833	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( proxy_file ) )		3260765	0					
ANR	3260834	IdentifierDeclType	char *		3260765	0					
ANR	3260835	Identifier	esc2		3260765	1					
ANR	3260836	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( proxy_file ) )		3260765	2		=			
ANR	3260837	Identifier	esc2		3260765	0					
ANR	3260838	CallExpression	strdup ( escapeGahpString ( proxy_file ) )		3260765	1					
ANR	3260839	Callee	strdup		3260765	0					
ANR	3260840	Identifier	strdup		3260765	0					
ANR	3260841	ArgumentList	escapeGahpString ( proxy_file )		3260765	1					
ANR	3260842	Argument	escapeGahpString ( proxy_file )		3260765	0					
ANR	3260843	CallExpression	escapeGahpString ( proxy_file )		3260765	0					
ANR	3260844	Callee	escapeGahpString		3260765	0					
ANR	3260845	Identifier	escapeGahpString		3260765	0					
ANR	3260846	ArgumentList	proxy_file		3260765	1					
ANR	3260847	Argument	proxy_file		3260765	0					
ANR	3260848	Identifier	proxy_file		3260765	0					
ANR	3260849	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 ) ;"	4016:1:107139:107227	3260765	8	True				
ANR	3260850	IdentifierDecl	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3260765	0					
ANR	3260851	IdentifierDeclType	int		3260765	0					
ANR	3260852	Identifier	x		3260765	1					
ANR	3260853	AssignmentExpression	"x = sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3260765	2		=			
ANR	3260854	Identifier	x		3260765	0					
ANR	3260855	CallExpression	"sprintf ( reqline , ""%s %d.%d %s"" , esc1 , job_id . cluster , job_id . proc , esc2 )"		3260765	1					
ANR	3260856	Callee	sprintf		3260765	0					
ANR	3260857	Identifier	sprintf		3260765	0					
ANR	3260858	ArgumentList	reqline		3260765	1					
ANR	3260859	Argument	reqline		3260765	0					
ANR	3260860	Identifier	reqline		3260765	0					
ANR	3260861	Argument	"""%s %d.%d %s"""		3260765	1					
ANR	3260862	PrimaryExpression	"""%s %d.%d %s"""		3260765	0					
ANR	3260863	Argument	esc1		3260765	2					
ANR	3260864	Identifier	esc1		3260765	0					
ANR	3260865	Argument	job_id . cluster		3260765	3					
ANR	3260866	MemberAccess	job_id . cluster		3260765	0					
ANR	3260867	Identifier	job_id		3260765	0					
ANR	3260868	Identifier	cluster		3260765	1					
ANR	3260869	Argument	job_id . proc		3260765	4					
ANR	3260870	MemberAccess	job_id . proc		3260765	0					
ANR	3260871	Identifier	job_id		3260765	0					
ANR	3260872	Identifier	proc		3260765	1					
ANR	3260873	Argument	esc2		3260765	5					
ANR	3260874	Identifier	esc2		3260765	0					
ANR	3260875	ExpressionStatement	free ( esc1 )	4018:1:107230:107240	3260765	9	True				
ANR	3260876	CallExpression	free ( esc1 )		3260765	0					
ANR	3260877	Callee	free		3260765	0					
ANR	3260878	Identifier	free		3260765	0					
ANR	3260879	ArgumentList	esc1		3260765	1					
ANR	3260880	Argument	esc1		3260765	0					
ANR	3260881	Identifier	esc1		3260765	0					
ANR	3260882	ExpressionStatement	free ( esc2 )	4019:1:107243:107253	3260765	10	True				
ANR	3260883	CallExpression	free ( esc2 )		3260765	0					
ANR	3260884	Callee	free		3260765	0					
ANR	3260885	Identifier	free		3260765	0					
ANR	3260886	ArgumentList	esc2		3260765	1					
ANR	3260887	Argument	esc2		3260765	0					
ANR	3260888	Identifier	esc2		3260765	0					
ANR	3260889	ExpressionStatement	ASSERT ( x > 0 )	4020:1:107256:107271	3260765	11	True				
ANR	3260890	CallExpression	ASSERT ( x > 0 )		3260765	0					
ANR	3260891	Callee	ASSERT		3260765	0					
ANR	3260892	Identifier	ASSERT		3260765	0					
ANR	3260893	ArgumentList	x > 0		3260765	1					
ANR	3260894	Argument	x > 0		3260765	0					
ANR	3260895	RelationalExpression	x > 0		3260765	0		>			
ANR	3260896	Identifier	x		3260765	0					
ANR	3260897	PrimaryExpression	0		3260765	1					
ANR	3260898	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4021:1:107274:107307	3260765	12	True				
ANR	3260899	IdentifierDecl	* buf = reqline . c_str ( )		3260765	0					
ANR	3260900	IdentifierDeclType	const char *		3260765	0					
ANR	3260901	Identifier	buf		3260765	1					
ANR	3260902	AssignmentExpression	* buf = reqline . c_str ( )		3260765	2		=			
ANR	3260903	Identifier	buf		3260765	0					
ANR	3260904	CallExpression	reqline . c_str ( )		3260765	1					
ANR	3260905	Callee	reqline . c_str		3260765	0					
ANR	3260906	MemberAccess	reqline . c_str		3260765	0					
ANR	3260907	Identifier	reqline		3260765	0					
ANR	3260908	Identifier	c_str		3260765	1					
ANR	3260909	ArgumentList			3260765	1					
ANR	3260910	IfStatement	"if ( ! is_pending ( command , buf ) )"		3260765	13					
ANR	3260911	Condition	"! is_pending ( command , buf )"	4025:6:107408:107431	3260765	0	True				
ANR	3260912	UnaryOperationExpression	"! is_pending ( command , buf )"		3260765	0					
ANR	3260913	UnaryOperator	!		3260765	0					
ANR	3260914	CallExpression	"is_pending ( command , buf )"		3260765	1					
ANR	3260915	Callee	is_pending		3260765	0					
ANR	3260916	Identifier	is_pending		3260765	0					
ANR	3260917	ArgumentList	command		3260765	1					
ANR	3260918	Argument	command		3260765	0					
ANR	3260919	Identifier	command		3260765	0					
ANR	3260920	Argument	buf		3260765	1					
ANR	3260921	Identifier	buf		3260765	0					
ANR	3260922	CompoundStatement		24:33:758:758	3260765	1					
ANR	3260923	IfStatement	if ( m_mode == results_only )		3260765	0					
ANR	3260924	Condition	m_mode == results_only	4028:7:107540:107561	3260765	0	True				
ANR	3260925	EqualityExpression	m_mode == results_only		3260765	0		==			
ANR	3260926	Identifier	m_mode		3260765	0					
ANR	3260927	Identifier	results_only		3260765	1					
ANR	3260928	CompoundStatement		27:32:888:888	3260765	1					
ANR	3260929	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4029:3:107570:107609	3260765	0	True				
ANR	3260930	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3260765	0					
ANR	3260931	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4031:2:107617:107653	3260765	1	True				
ANR	3260932	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3260765	0					
ANR	3260933	Callee	now_pending		3260765	0					
ANR	3260934	Identifier	now_pending		3260765	0					
ANR	3260935	ArgumentList	command		3260765	1					
ANR	3260936	Argument	command		3260765	0					
ANR	3260937	Identifier	command		3260765	0					
ANR	3260938	Argument	buf		3260765	1					
ANR	3260939	Identifier	buf		3260765	0					
ANR	3260940	Argument	deleg_proxy		3260765	2					
ANR	3260941	Identifier	deleg_proxy		3260765	0					
ANR	3260942	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4037:1:107747:107798	3260765	14	True				
ANR	3260943	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3260765	0					
ANR	3260944	IdentifierDeclType	Gahp_Args *		3260765	0					
ANR	3260945	Identifier	result		3260765	1					
ANR	3260946	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3260765	2		=			
ANR	3260947	Identifier	result		3260765	0					
ANR	3260948	CallExpression	"get_pending_result ( command , buf )"		3260765	1					
ANR	3260949	Callee	get_pending_result		3260765	0					
ANR	3260950	Identifier	get_pending_result		3260765	0					
ANR	3260951	ArgumentList	command		3260765	1					
ANR	3260952	Argument	command		3260765	0					
ANR	3260953	Identifier	command		3260765	0					
ANR	3260954	Argument	buf		3260765	1					
ANR	3260955	Identifier	buf		3260765	0					
ANR	3260956	IfStatement	if ( result )		3260765	15					
ANR	3260957	Condition	result	4038:6:107806:107811	3260765	0	True				
ANR	3260958	Identifier	result		3260765	0					
ANR	3260959	CompoundStatement		42:2:1233:1243	3260765	1					
ANR	3260960	IfStatement	if ( result -> argc != 3 )		3260765	0					
ANR	3260961	Condition	result -> argc != 3	4040:6:107847:107863	3260765	0	True				
ANR	3260962	EqualityExpression	result -> argc != 3		3260765	0		!=			
ANR	3260963	PtrMemberAccess	result -> argc		3260765	0					
ANR	3260964	Identifier	result		3260765	0					
ANR	3260965	Identifier	argc		3260765	1					
ANR	3260966	PrimaryExpression	3		3260765	1					
ANR	3260967	CompoundStatement		39:25:1189:1189	3260765	1					
ANR	3260968	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4041:3:107871:107902	3260765	0	True				
ANR	3260969	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3260765	0					
ANR	3260970	Callee	EXCEPT		3260765	0					
ANR	3260971	Identifier	EXCEPT		3260765	0					
ANR	3260972	ArgumentList	"""Bad %s Result"""		3260765	1					
ANR	3260973	Argument	"""Bad %s Result"""		3260765	0					
ANR	3260974	PrimaryExpression	"""Bad %s Result"""		3260765	0					
ANR	3260975	Argument	command		3260765	1					
ANR	3260976	Identifier	command		3260765	0					
ANR	3260977	IdentifierDeclStatement	int rc = 1 ;	4043:2:107910:107920	3260765	1	True				
ANR	3260978	IdentifierDecl	rc = 1		3260765	0					
ANR	3260979	IdentifierDeclType	int		3260765	0					
ANR	3260980	Identifier	rc		3260765	1					
ANR	3260981	AssignmentExpression	rc = 1		3260765	2		=			
ANR	3260982	Identifier	rc		3260765	0					
ANR	3260983	PrimaryExpression	1		3260765	1					
ANR	3260984	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3260765	2					
ANR	3260985	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	4044:7:107929:107953	3260765	0	True				
ANR	3260986	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3260765	0		==			
ANR	3260987	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3260765	0					
ANR	3260988	ArrayIndexing	result -> argv [ 1 ]		3260765	0					
ANR	3260989	PtrMemberAccess	result -> argv		3260765	0					
ANR	3260990	Identifier	result		3260765	0					
ANR	3260991	Identifier	argv		3260765	1					
ANR	3260992	PrimaryExpression	1		3260765	1					
ANR	3260993	PrimaryExpression	0		3260765	1					
ANR	3260994	PrimaryExpression	'S'		3260765	1					
ANR	3260995	CompoundStatement		43:35:1280:1280	3260765	1					
ANR	3260996	ExpressionStatement	rc = 0	4045:3:107962:107968	3260765	0	True				
ANR	3260997	AssignmentExpression	rc = 0		3260765	0		=			
ANR	3260998	Identifier	rc		3260765	0					
ANR	3260999	PrimaryExpression	0		3260765	1					
ANR	3261000	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3260765	3					
ANR	3261001	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4047:7:107981:108019	3260765	0	True				
ANR	3261002	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3260765	0					
ANR	3261003	Callee	strcasecmp		3260765	0					
ANR	3261004	Identifier	strcasecmp		3260765	0					
ANR	3261005	ArgumentList	result -> argv [ 2 ]		3260765	1					
ANR	3261006	Argument	result -> argv [ 2 ]		3260765	0					
ANR	3261007	ArrayIndexing	result -> argv [ 2 ]		3260765	0					
ANR	3261008	PtrMemberAccess	result -> argv		3260765	0					
ANR	3261009	Identifier	result		3260765	0					
ANR	3261010	Identifier	argv		3260765	1					
ANR	3261011	PrimaryExpression	2		3260765	1					
ANR	3261012	Argument	NULLSTRING		3260765	1					
ANR	3261013	Identifier	NULLSTRING		3260765	0					
ANR	3261014	CompoundStatement		46:49:1346:1346	3260765	1					
ANR	3261015	ExpressionStatement	error_string = result -> argv [ 2 ]	4048:3:108028:108058	3260765	0	True				
ANR	3261016	AssignmentExpression	error_string = result -> argv [ 2 ]		3260765	0		=			
ANR	3261017	Identifier	error_string		3260765	0					
ANR	3261018	ArrayIndexing	result -> argv [ 2 ]		3260765	1					
ANR	3261019	PtrMemberAccess	result -> argv		3260765	0					
ANR	3261020	Identifier	result		3260765	0					
ANR	3261021	Identifier	argv		3260765	1					
ANR	3261022	PrimaryExpression	2		3260765	1					
ANR	3261023	ElseStatement	else		3260765	0					
ANR	3261024	CompoundStatement		48:9:1392:1392	3260765	0					
ANR	3261025	ExpressionStatement	"error_string = """""	4050:3:108074:108091	3260765	0	True				
ANR	3261026	AssignmentExpression	"error_string = """""		3260765	0		=			
ANR	3261027	Identifier	error_string		3260765	0					
ANR	3261028	PrimaryExpression	""""""		3260765	1					
ANR	3261029	Statement	delete	4052:2:108099:108104	3260765	4	True				
ANR	3261030	ExpressionStatement	result	4052:9:108106:108112	3260765	5	True				
ANR	3261031	Identifier	result		3260765	0					
ANR	3261032	ReturnStatement	return rc ;	4053:2:108116:108125	3260765	6	True				
ANR	3261033	Identifier	rc		3260765	0					
ANR	3261034	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3260765	16					
ANR	3261035	Condition	"check_pending_timeout ( command , buf )"	4057:6:108182:108215	3260765	0	True				
ANR	3261036	CallExpression	"check_pending_timeout ( command , buf )"		3260765	0					
ANR	3261037	Callee	check_pending_timeout		3260765	0					
ANR	3261038	Identifier	check_pending_timeout		3260765	0					
ANR	3261039	ArgumentList	command		3260765	1					
ANR	3261040	Argument	command		3260765	0					
ANR	3261041	Identifier	command		3260765	0					
ANR	3261042	Argument	buf		3260765	1					
ANR	3261043	Identifier	buf		3260765	0					
ANR	3261044	CompoundStatement		56:43:1542:1542	3260765	1					
ANR	3261045	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4059:2:108255:108303	3260765	0	True				
ANR	3261046	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3260765	0					
ANR	3261047	Callee	sprintf		3260765	0					
ANR	3261048	Identifier	sprintf		3260765	0					
ANR	3261049	ArgumentList	error_string		3260765	1					
ANR	3261050	Argument	error_string		3260765	0					
ANR	3261051	Identifier	error_string		3260765	0					
ANR	3261052	Argument	"""%s timed out"""		3260765	1					
ANR	3261053	PrimaryExpression	"""%s timed out"""		3260765	0					
ANR	3261054	Argument	command		3260765	2					
ANR	3261055	Identifier	command		3260765	0					
ANR	3261056	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4060:2:108307:108342	3260765	1	True				
ANR	3261057	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3260765	0					
ANR	3261058	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4064:1:108402:108435	3260765	17	True				
ANR	3261059	Identifier	GAHPCLIENT_COMMAND_PENDING		3260765	0					
ANR	3261060	ReturnType	int		3260765	1					
ANR	3261061	Identifier	GahpClient :: condor_job_refresh_proxy		3260765	2					
ANR	3261062	ParameterList	"const char * schedd_name , PROC_ID job_id , const char * proxy_file"		3260765	3					
ANR	3261063	Parameter	const char * schedd_name	4000:37:106601:106623	3260765	0	True				
ANR	3261064	ParameterType	const char *		3260765	0					
ANR	3261065	Identifier	schedd_name		3260765	1					
ANR	3261066	Parameter	PROC_ID job_id	4000:62:106626:106639	3260765	1	True				
ANR	3261067	ParameterType	PROC_ID		3260765	0					
ANR	3261068	Identifier	job_id		3260765	1					
ANR	3261069	Parameter	const char * proxy_file	4001:10:106652:106673	3260765	2	True				
ANR	3261070	ParameterType	const char *		3260765	0					
ANR	3261071	Identifier	proxy_file		3260765	1					
ANR	3261072	CFGEntryNode	ENTRY		3260765		True				
ANR	3261073	CFGExitNode	EXIT		3260765		True				
ANR	3261074	Symbol	server -> m_commands_supported		3260765						
ANR	3261075	Symbol	server		3260765						
ANR	3261076	Symbol	escapeGahpString		3260765						
ANR	3261077	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3260765						
ANR	3261078	Symbol	* server		3260765						
ANR	3261079	Symbol	reqline . c_str		3260765						
ANR	3261080	Symbol	results_only		3260765						
ANR	3261081	Symbol	result -> argv		3260765						
ANR	3261082	Symbol	* server -> m_commands_supported		3260765						
ANR	3261083	Symbol	sprintf		3260765						
ANR	3261084	Symbol	result		3260765						
ANR	3261085	Symbol	* result		3260765						
ANR	3261086	Symbol	server -> m_commands_supported -> contains_anycase		3260765						
ANR	3261087	Symbol	GAHPCLIENT_COMMAND_PENDING		3260765						
ANR	3261088	Symbol	reqline		3260765						
ANR	3261089	Symbol	job_id . cluster		3260765						
ANR	3261090	Symbol	m_mode		3260765						
ANR	3261091	Symbol	strcasecmp		3260765						
ANR	3261092	Symbol	* result -> argv		3260765						
ANR	3261093	Symbol	proxy_file		3260765						
ANR	3261094	Symbol	* * * result		3260765						
ANR	3261095	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3260765						
ANR	3261096	Symbol	* * result		3260765						
ANR	3261097	Symbol	NULLSTRING		3260765						
ANR	3261098	Symbol	command		3260765						
ANR	3261099	Symbol	get_pending_result		3260765						
ANR	3261100	Symbol	* * result -> argv		3260765						
ANR	3261101	Symbol	rc		3260765						
ANR	3261102	Symbol	error_string		3260765						
ANR	3261103	Symbol	esc2		3260765						
ANR	3261104	Symbol	job_id . proc		3260765						
ANR	3261105	Symbol	buf		3260765						
ANR	3261106	Symbol	esc1		3260765						
ANR	3261107	Symbol	schedd_name		3260765						
ANR	3261108	Symbol	job_id		3260765						
ANR	3261109	Symbol	x		3260765						
ANR	3261110	Symbol	result -> argc		3260765						
ANR	3261111	Symbol	* * server		3260765						
ANR	3261112	Symbol	FALSE		3260765						
ANR	3261113	Symbol	strdup		3260765						
ANR	3261114	Symbol	check_pending_timeout		3260765						
ANR	3261115	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3260765						
ANR	3261116	Symbol	is_pending		3260765						
ANR	3261117	Symbol	deleg_proxy		3260765						
ANR	3261118	Function	GahpClient :: condor_job_update_lease	4067:0:108440:111091							
ANR	3261119	FunctionDef	"GahpClient :: condor_job_update_lease (const char * schedd_name , const SimpleList < PROC_ID > & jobs , const SimpleList < int > & expirations , SimpleList < PROC_ID > & updated)"		3261118	0					
ANR	3261120	CompoundStatement		4072:0:108632:111091	3261118	0					
ANR	3261121	Statement	static	4073:1:108635:108640	3261118	0	True				
ANR	3261122	IdentifierDeclStatement	"const char * command = ""CONDOR_JOB_UPDATE_LEASE"" ;"	4073:8:108642:108689	3261118	1	True				
ANR	3261123	IdentifierDecl	"* command = ""CONDOR_JOB_UPDATE_LEASE"""		3261118	0					
ANR	3261124	IdentifierDeclType	const char *		3261118	0					
ANR	3261125	Identifier	command		3261118	1					
ANR	3261126	AssignmentExpression	"* command = ""CONDOR_JOB_UPDATE_LEASE"""		3261118	2		=			
ANR	3261127	Identifier	command		3261118	0					
ANR	3261128	PrimaryExpression	"""CONDOR_JOB_UPDATE_LEASE"""		3261118	1					
ANR	3261129	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3261118	2					
ANR	3261130	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4076:6:108738:108799	3261118	0	True				
ANR	3261131	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3261118	0		==			
ANR	3261132	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3261118	0					
ANR	3261133	Callee	server -> m_commands_supported -> contains_anycase		3261118	0					
ANR	3261134	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3261118	0					
ANR	3261135	PtrMemberAccess	server -> m_commands_supported		3261118	0					
ANR	3261136	Identifier	server		3261118	0					
ANR	3261137	Identifier	m_commands_supported		3261118	1					
ANR	3261138	Identifier	contains_anycase		3261118	1					
ANR	3261139	ArgumentList	command		3261118	1					
ANR	3261140	Argument	command		3261118	0					
ANR	3261141	Identifier	command		3261118	0					
ANR	3261142	Identifier	FALSE		3261118	1					
ANR	3261143	CompoundStatement		5:70:169:169	3261118	1					
ANR	3261144	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4077:2:108806:108845	3261118	0	True				
ANR	3261145	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3261118	0					
ANR	3261146	ExpressionStatement	ASSERT ( jobs . Length ( ) == expirations . Length ( ) )	4080:1:108852:108899	3261118	3	True				
ANR	3261147	CallExpression	ASSERT ( jobs . Length ( ) == expirations . Length ( ) )		3261118	0					
ANR	3261148	Callee	ASSERT		3261118	0					
ANR	3261149	Identifier	ASSERT		3261118	0					
ANR	3261150	ArgumentList	jobs . Length ( ) == expirations . Length ( )		3261118	1					
ANR	3261151	Argument	jobs . Length ( ) == expirations . Length ( )		3261118	0					
ANR	3261152	EqualityExpression	jobs . Length ( ) == expirations . Length ( )		3261118	0		==			
ANR	3261153	CallExpression	jobs . Length ( )		3261118	0					
ANR	3261154	Callee	jobs . Length		3261118	0					
ANR	3261155	MemberAccess	jobs . Length		3261118	0					
ANR	3261156	Identifier	jobs		3261118	0					
ANR	3261157	Identifier	Length		3261118	1					
ANR	3261158	ArgumentList			3261118	1					
ANR	3261159	CallExpression	expirations . Length ( )		3261118	1					
ANR	3261160	Callee	expirations . Length		3261118	0					
ANR	3261161	MemberAccess	expirations . Length		3261118	0					
ANR	3261162	Identifier	expirations		3261118	0					
ANR	3261163	Identifier	Length		3261118	1					
ANR	3261164	ArgumentList			3261118	1					
ANR	3261165	IfStatement	if ( ! schedd_name )		3261118	4					
ANR	3261166	Condition	! schedd_name	4083:5:108934:108945	3261118	0	True				
ANR	3261167	UnaryOperationExpression	! schedd_name		3261118	0					
ANR	3261168	UnaryOperator	!		3261118	0					
ANR	3261169	Identifier	schedd_name		3261118	1					
ANR	3261170	ExpressionStatement	schedd_name = NULLSTRING	4083:19:108948:108970	3261118	1	True				
ANR	3261171	AssignmentExpression	schedd_name = NULLSTRING		3261118	0		=			
ANR	3261172	Identifier	schedd_name		3261118	0					
ANR	3261173	Identifier	NULLSTRING		3261118	1					
ANR	3261174	IdentifierDeclStatement	std :: string reqline ;	4084:1:108973:108992	3261118	5	True				
ANR	3261175	IdentifierDecl	reqline		3261118	0					
ANR	3261176	IdentifierDeclType	std :: string		3261118	0					
ANR	3261177	Identifier	reqline		3261118	1					
ANR	3261178	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( schedd_name ) ) ;	4085:1:108995:109047	3261118	6	True				
ANR	3261179	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3261118	0					
ANR	3261180	IdentifierDeclType	char *		3261118	0					
ANR	3261181	Identifier	esc1		3261118	1					
ANR	3261182	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( schedd_name ) )		3261118	2		=			
ANR	3261183	Identifier	esc1		3261118	0					
ANR	3261184	CallExpression	strdup ( escapeGahpString ( schedd_name ) )		3261118	1					
ANR	3261185	Callee	strdup		3261118	0					
ANR	3261186	Identifier	strdup		3261118	0					
ANR	3261187	ArgumentList	escapeGahpString ( schedd_name )		3261118	1					
ANR	3261188	Argument	escapeGahpString ( schedd_name )		3261118	0					
ANR	3261189	CallExpression	escapeGahpString ( schedd_name )		3261118	0					
ANR	3261190	Callee	escapeGahpString		3261118	0					
ANR	3261191	Identifier	escapeGahpString		3261118	0					
ANR	3261192	ArgumentList	schedd_name		3261118	1					
ANR	3261193	Argument	schedd_name		3261118	0					
ANR	3261194	Identifier	schedd_name		3261118	0					
ANR	3261195	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d"" , esc1 , jobs . Length ( ) ) ;"	4086:1:109050:109104	3261118	7	True				
ANR	3261196	IdentifierDecl	"x = sprintf ( reqline , ""%s %d"" , esc1 , jobs . Length ( ) )"		3261118	0					
ANR	3261197	IdentifierDeclType	int		3261118	0					
ANR	3261198	Identifier	x		3261118	1					
ANR	3261199	AssignmentExpression	"x = sprintf ( reqline , ""%s %d"" , esc1 , jobs . Length ( ) )"		3261118	2		=			
ANR	3261200	Identifier	x		3261118	0					
ANR	3261201	CallExpression	"sprintf ( reqline , ""%s %d"" , esc1 , jobs . Length ( ) )"		3261118	1					
ANR	3261202	Callee	sprintf		3261118	0					
ANR	3261203	Identifier	sprintf		3261118	0					
ANR	3261204	ArgumentList	reqline		3261118	1					
ANR	3261205	Argument	reqline		3261118	0					
ANR	3261206	Identifier	reqline		3261118	0					
ANR	3261207	Argument	"""%s %d"""		3261118	1					
ANR	3261208	PrimaryExpression	"""%s %d"""		3261118	0					
ANR	3261209	Argument	esc1		3261118	2					
ANR	3261210	Identifier	esc1		3261118	0					
ANR	3261211	Argument	jobs . Length ( )		3261118	3					
ANR	3261212	CallExpression	jobs . Length ( )		3261118	0					
ANR	3261213	Callee	jobs . Length		3261118	0					
ANR	3261214	MemberAccess	jobs . Length		3261118	0					
ANR	3261215	Identifier	jobs		3261118	0					
ANR	3261216	Identifier	Length		3261118	1					
ANR	3261217	ArgumentList			3261118	1					
ANR	3261218	ExpressionStatement	free ( esc1 )	4087:1:109107:109119	3261118	8	True				
ANR	3261219	CallExpression	free ( esc1 )		3261118	0					
ANR	3261220	Callee	free		3261118	0					
ANR	3261221	Identifier	free		3261118	0					
ANR	3261222	ArgumentList	esc1		3261118	1					
ANR	3261223	Argument	esc1		3261118	0					
ANR	3261224	Identifier	esc1		3261118	0					
ANR	3261225	ExpressionStatement	ASSERT ( x > 0 )	4088:1:109122:109137	3261118	9	True				
ANR	3261226	CallExpression	ASSERT ( x > 0 )		3261118	0					
ANR	3261227	Callee	ASSERT		3261118	0					
ANR	3261228	Identifier	ASSERT		3261118	0					
ANR	3261229	ArgumentList	x > 0		3261118	1					
ANR	3261230	Argument	x > 0		3261118	0					
ANR	3261231	RelationalExpression	x > 0		3261118	0		>			
ANR	3261232	Identifier	x		3261118	0					
ANR	3261233	PrimaryExpression	0		3261118	1					
ANR	3261234	IdentifierDeclStatement	SimpleListIterator < PROC_ID > jobs_i ( jobs ) ;	4090:1:109168:109209	3261118	10	True				
ANR	3261235	IdentifierDecl	jobs_i ( jobs )		3261118	0					
ANR	3261236	IdentifierDeclType	SimpleListIterator < PROC_ID >		3261118	0					
ANR	3261237	Identifier	jobs_i		3261118	1					
ANR	3261238	Identifier	jobs		3261118	2					
ANR	3261239	IdentifierDeclStatement	SimpleListIterator < int > exps_i ( expirations ) ;	4091:1:109212:109256	3261118	11	True				
ANR	3261240	IdentifierDecl	exps_i ( expirations )		3261118	0					
ANR	3261241	IdentifierDeclType	SimpleListIterator < int >		3261118	0					
ANR	3261242	Identifier	exps_i		3261118	1					
ANR	3261243	Identifier	expirations		3261118	2					
ANR	3261244	IdentifierDeclStatement	PROC_ID next_job ;	4092:1:109259:109275	3261118	12	True				
ANR	3261245	IdentifierDecl	next_job		3261118	0					
ANR	3261246	IdentifierDeclType	PROC_ID		3261118	0					
ANR	3261247	Identifier	next_job		3261118	1					
ANR	3261248	IdentifierDeclStatement	int next_exp ;	4093:1:109278:109290	3261118	13	True				
ANR	3261249	IdentifierDecl	next_exp		3261118	0					
ANR	3261250	IdentifierDeclType	int		3261118	0					
ANR	3261251	Identifier	next_exp		3261118	1					
ANR	3261252	WhileStatement	while ( jobs_i . Next ( next_job ) && exps_i . Next ( next_exp ) )		3261118	14					
ANR	3261253	Condition	jobs_i . Next ( next_job ) && exps_i . Next ( next_exp )	4094:9:109301:109350	3261118	0	True				
ANR	3261254	AndExpression	jobs_i . Next ( next_job ) && exps_i . Next ( next_exp )		3261118	0		&&			
ANR	3261255	CallExpression	jobs_i . Next ( next_job )		3261118	0					
ANR	3261256	Callee	jobs_i . Next		3261118	0					
ANR	3261257	MemberAccess	jobs_i . Next		3261118	0					
ANR	3261258	Identifier	jobs_i		3261118	0					
ANR	3261259	Identifier	Next		3261118	1					
ANR	3261260	ArgumentList	next_job		3261118	1					
ANR	3261261	Argument	next_job		3261118	0					
ANR	3261262	Identifier	next_job		3261118	0					
ANR	3261263	CallExpression	exps_i . Next ( next_exp )		3261118	1					
ANR	3261264	Callee	exps_i . Next		3261118	0					
ANR	3261265	MemberAccess	exps_i . Next		3261118	0					
ANR	3261266	Identifier	exps_i		3261118	0					
ANR	3261267	Identifier	Next		3261118	1					
ANR	3261268	ArgumentList	next_exp		3261118	1					
ANR	3261269	Argument	next_exp		3261118	0					
ANR	3261270	Identifier	next_exp		3261118	0					
ANR	3261271	CompoundStatement		23:62:721:721	3261118	1					
ANR	3261272	ExpressionStatement	"x = sprintf_cat ( reqline , "" %d.%d %d"" , next_job . cluster , next_job . proc , next_exp )"	4095:2:109358:109449	3261118	0	True				
ANR	3261273	AssignmentExpression	"x = sprintf_cat ( reqline , "" %d.%d %d"" , next_job . cluster , next_job . proc , next_exp )"		3261118	0		=			
ANR	3261274	Identifier	x		3261118	0					
ANR	3261275	CallExpression	"sprintf_cat ( reqline , "" %d.%d %d"" , next_job . cluster , next_job . proc , next_exp )"		3261118	1					
ANR	3261276	Callee	sprintf_cat		3261118	0					
ANR	3261277	Identifier	sprintf_cat		3261118	0					
ANR	3261278	ArgumentList	reqline		3261118	1					
ANR	3261279	Argument	reqline		3261118	0					
ANR	3261280	Identifier	reqline		3261118	0					
ANR	3261281	Argument	""" %d.%d %d"""		3261118	1					
ANR	3261282	PrimaryExpression	""" %d.%d %d"""		3261118	0					
ANR	3261283	Argument	next_job . cluster		3261118	2					
ANR	3261284	MemberAccess	next_job . cluster		3261118	0					
ANR	3261285	Identifier	next_job		3261118	0					
ANR	3261286	Identifier	cluster		3261118	1					
ANR	3261287	Argument	next_job . proc		3261118	3					
ANR	3261288	MemberAccess	next_job . proc		3261118	0					
ANR	3261289	Identifier	next_job		3261118	0					
ANR	3261290	Identifier	proc		3261118	1					
ANR	3261291	Argument	next_exp		3261118	4					
ANR	3261292	Identifier	next_exp		3261118	0					
ANR	3261293	ExpressionStatement	ASSERT ( x > 0 )	4097:2:109453:109468	3261118	1	True				
ANR	3261294	CallExpression	ASSERT ( x > 0 )		3261118	0					
ANR	3261295	Callee	ASSERT		3261118	0					
ANR	3261296	Identifier	ASSERT		3261118	0					
ANR	3261297	ArgumentList	x > 0		3261118	1					
ANR	3261298	Argument	x > 0		3261118	0					
ANR	3261299	RelationalExpression	x > 0		3261118	0		>			
ANR	3261300	Identifier	x		3261118	0					
ANR	3261301	PrimaryExpression	0		3261118	1					
ANR	3261302	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4099:1:109474:109507	3261118	15	True				
ANR	3261303	IdentifierDecl	* buf = reqline . c_str ( )		3261118	0					
ANR	3261304	IdentifierDeclType	const char *		3261118	0					
ANR	3261305	Identifier	buf		3261118	1					
ANR	3261306	AssignmentExpression	* buf = reqline . c_str ( )		3261118	2		=			
ANR	3261307	Identifier	buf		3261118	0					
ANR	3261308	CallExpression	reqline . c_str ( )		3261118	1					
ANR	3261309	Callee	reqline . c_str		3261118	0					
ANR	3261310	MemberAccess	reqline . c_str		3261118	0					
ANR	3261311	Identifier	reqline		3261118	0					
ANR	3261312	Identifier	c_str		3261118	1					
ANR	3261313	ArgumentList			3261118	1					
ANR	3261314	IfStatement	"if ( ! is_pending ( command , buf ) )"		3261118	16					
ANR	3261315	Condition	"! is_pending ( command , buf )"	4103:6:109608:109631	3261118	0	True				
ANR	3261316	UnaryOperationExpression	"! is_pending ( command , buf )"		3261118	0					
ANR	3261317	UnaryOperator	!		3261118	0					
ANR	3261318	CallExpression	"is_pending ( command , buf )"		3261118	1					
ANR	3261319	Callee	is_pending		3261118	0					
ANR	3261320	Identifier	is_pending		3261118	0					
ANR	3261321	ArgumentList	command		3261118	1					
ANR	3261322	Argument	command		3261118	0					
ANR	3261323	Identifier	command		3261118	0					
ANR	3261324	Argument	buf		3261118	1					
ANR	3261325	Identifier	buf		3261118	0					
ANR	3261326	CompoundStatement		32:33:1002:1002	3261118	1					
ANR	3261327	IfStatement	if ( m_mode == results_only )		3261118	0					
ANR	3261328	Condition	m_mode == results_only	4106:7:109740:109761	3261118	0	True				
ANR	3261329	EqualityExpression	m_mode == results_only		3261118	0		==			
ANR	3261330	Identifier	m_mode		3261118	0					
ANR	3261331	Identifier	results_only		3261118	1					
ANR	3261332	CompoundStatement		35:32:1132:1132	3261118	1					
ANR	3261333	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4107:3:109770:109809	3261118	0	True				
ANR	3261334	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3261118	0					
ANR	3261335	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4109:2:109817:109853	3261118	1	True				
ANR	3261336	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3261118	0					
ANR	3261337	Callee	now_pending		3261118	0					
ANR	3261338	Identifier	now_pending		3261118	0					
ANR	3261339	ArgumentList	command		3261118	1					
ANR	3261340	Argument	command		3261118	0					
ANR	3261341	Identifier	command		3261118	0					
ANR	3261342	Argument	buf		3261118	1					
ANR	3261343	Identifier	buf		3261118	0					
ANR	3261344	Argument	deleg_proxy		3261118	2					
ANR	3261345	Identifier	deleg_proxy		3261118	0					
ANR	3261346	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4115:1:109947:109998	3261118	17	True				
ANR	3261347	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3261118	0					
ANR	3261348	IdentifierDeclType	Gahp_Args *		3261118	0					
ANR	3261349	Identifier	result		3261118	1					
ANR	3261350	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3261118	2		=			
ANR	3261351	Identifier	result		3261118	0					
ANR	3261352	CallExpression	"get_pending_result ( command , buf )"		3261118	1					
ANR	3261353	Callee	get_pending_result		3261118	0					
ANR	3261354	Identifier	get_pending_result		3261118	0					
ANR	3261355	ArgumentList	command		3261118	1					
ANR	3261356	Argument	command		3261118	0					
ANR	3261357	Identifier	command		3261118	0					
ANR	3261358	Argument	buf		3261118	1					
ANR	3261359	Identifier	buf		3261118	0					
ANR	3261360	IfStatement	if ( result )		3261118	18					
ANR	3261361	Condition	result	4116:6:110006:110011	3261118	0	True				
ANR	3261362	Identifier	result		3261118	0					
ANR	3261363	CompoundStatement		60:2:1685:1713	3261118	1					
ANR	3261364	IfStatement	if ( result -> argc != 4 )		3261118	0					
ANR	3261365	Condition	result -> argc != 4	4118:6:110047:110063	3261118	0	True				
ANR	3261366	EqualityExpression	result -> argc != 4		3261118	0		!=			
ANR	3261367	PtrMemberAccess	result -> argc		3261118	0					
ANR	3261368	Identifier	result		3261118	0					
ANR	3261369	Identifier	argc		3261118	1					
ANR	3261370	PrimaryExpression	4		3261118	1					
ANR	3261371	CompoundStatement		47:25:1433:1433	3261118	1					
ANR	3261372	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4119:3:110071:110102	3261118	0	True				
ANR	3261373	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3261118	0					
ANR	3261374	Callee	EXCEPT		3261118	0					
ANR	3261375	Identifier	EXCEPT		3261118	0					
ANR	3261376	ArgumentList	"""Bad %s Result"""		3261118	1					
ANR	3261377	Argument	"""Bad %s Result"""		3261118	0					
ANR	3261378	PrimaryExpression	"""Bad %s Result"""		3261118	0					
ANR	3261379	Argument	command		3261118	1					
ANR	3261380	Identifier	command		3261118	0					
ANR	3261381	IdentifierDeclStatement	int rc = 1 ;	4121:2:110110:110120	3261118	1	True				
ANR	3261382	IdentifierDecl	rc = 1		3261118	0					
ANR	3261383	IdentifierDeclType	int		3261118	0					
ANR	3261384	Identifier	rc		3261118	1					
ANR	3261385	AssignmentExpression	rc = 1		3261118	2		=			
ANR	3261386	Identifier	rc		3261118	0					
ANR	3261387	PrimaryExpression	1		3261118	1					
ANR	3261388	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3261118	2					
ANR	3261389	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	4122:7:110129:110153	3261118	0	True				
ANR	3261390	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3261118	0		==			
ANR	3261391	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3261118	0					
ANR	3261392	ArrayIndexing	result -> argv [ 1 ]		3261118	0					
ANR	3261393	PtrMemberAccess	result -> argv		3261118	0					
ANR	3261394	Identifier	result		3261118	0					
ANR	3261395	Identifier	argv		3261118	1					
ANR	3261396	PrimaryExpression	1		3261118	1					
ANR	3261397	PrimaryExpression	0		3261118	1					
ANR	3261398	PrimaryExpression	'S'		3261118	1					
ANR	3261399	CompoundStatement		51:35:1524:1524	3261118	1					
ANR	3261400	ExpressionStatement	rc = 0	4123:3:110162:110168	3261118	0	True				
ANR	3261401	AssignmentExpression	rc = 0		3261118	0		=			
ANR	3261402	Identifier	rc		3261118	0					
ANR	3261403	PrimaryExpression	0		3261118	1					
ANR	3261404	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3261118	3					
ANR	3261405	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4125:7:110181:110219	3261118	0	True				
ANR	3261406	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3261118	0					
ANR	3261407	Callee	strcasecmp		3261118	0					
ANR	3261408	Identifier	strcasecmp		3261118	0					
ANR	3261409	ArgumentList	result -> argv [ 2 ]		3261118	1					
ANR	3261410	Argument	result -> argv [ 2 ]		3261118	0					
ANR	3261411	ArrayIndexing	result -> argv [ 2 ]		3261118	0					
ANR	3261412	PtrMemberAccess	result -> argv		3261118	0					
ANR	3261413	Identifier	result		3261118	0					
ANR	3261414	Identifier	argv		3261118	1					
ANR	3261415	PrimaryExpression	2		3261118	1					
ANR	3261416	Argument	NULLSTRING		3261118	1					
ANR	3261417	Identifier	NULLSTRING		3261118	0					
ANR	3261418	CompoundStatement		54:49:1590:1590	3261118	1					
ANR	3261419	ExpressionStatement	error_string = result -> argv [ 2 ]	4126:3:110228:110258	3261118	0	True				
ANR	3261420	AssignmentExpression	error_string = result -> argv [ 2 ]		3261118	0		=			
ANR	3261421	Identifier	error_string		3261118	0					
ANR	3261422	ArrayIndexing	result -> argv [ 2 ]		3261118	1					
ANR	3261423	PtrMemberAccess	result -> argv		3261118	0					
ANR	3261424	Identifier	result		3261118	0					
ANR	3261425	Identifier	argv		3261118	1					
ANR	3261426	PrimaryExpression	2		3261118	1					
ANR	3261427	ElseStatement	else		3261118	0					
ANR	3261428	CompoundStatement		56:9:1636:1636	3261118	0					
ANR	3261429	ExpressionStatement	"error_string = """""	4128:3:110274:110291	3261118	0	True				
ANR	3261430	AssignmentExpression	"error_string = """""		3261118	0		=			
ANR	3261431	Identifier	error_string		3261118	0					
ANR	3261432	PrimaryExpression	""""""		3261118	1					
ANR	3261433	ExpressionStatement	updated . Clear ( )	4130:2:110299:110314	3261118	4	True				
ANR	3261434	CallExpression	updated . Clear ( )		3261118	0					
ANR	3261435	Callee	updated . Clear		3261118	0					
ANR	3261436	MemberAccess	updated . Clear		3261118	0					
ANR	3261437	Identifier	updated		3261118	0					
ANR	3261438	Identifier	Clear		3261118	1					
ANR	3261439	ArgumentList			3261118	1					
ANR	3261440	IdentifierDeclStatement	char * ptr1 = result -> argv [ 3 ] ;	4131:2:110318:110346	3261118	5	True				
ANR	3261441	IdentifierDecl	* ptr1 = result -> argv [ 3 ]		3261118	0					
ANR	3261442	IdentifierDeclType	char *		3261118	0					
ANR	3261443	Identifier	ptr1		3261118	1					
ANR	3261444	AssignmentExpression	* ptr1 = result -> argv [ 3 ]		3261118	2		=			
ANR	3261445	Identifier	ptr1		3261118	0					
ANR	3261446	ArrayIndexing	result -> argv [ 3 ]		3261118	1					
ANR	3261447	PtrMemberAccess	result -> argv		3261118	0					
ANR	3261448	Identifier	result		3261118	0					
ANR	3261449	Identifier	argv		3261118	1					
ANR	3261450	PrimaryExpression	3		3261118	1					
ANR	3261451	WhileStatement	while ( ptr1 != NULL && * ptr1 != '\\0' )		3261118	6					
ANR	3261452	Condition	ptr1 != NULL && * ptr1 != '\\0'	4132:10:110358:110386	3261118	0	True				
ANR	3261453	AndExpression	ptr1 != NULL && * ptr1 != '\\0'		3261118	0		&&			
ANR	3261454	EqualityExpression	ptr1 != NULL		3261118	0		!=			
ANR	3261455	Identifier	ptr1		3261118	0					
ANR	3261456	Identifier	NULL		3261118	1					
ANR	3261457	EqualityExpression	* ptr1 != '\\0'		3261118	1		!=			
ANR	3261458	UnaryOperationExpression	* ptr1		3261118	0					
ANR	3261459	UnaryOperator	*		3261118	0					
ANR	3261460	Identifier	ptr1		3261118	1					
ANR	3261461	PrimaryExpression	'\\0'		3261118	1					
ANR	3261462	CompoundStatement		64:3:1791:1823	3261118	1					
ANR	3261463	IdentifierDeclStatement	int i ;	4133:3:110395:110400	3261118	0	True				
ANR	3261464	IdentifierDecl	i		3261118	0					
ANR	3261465	IdentifierDeclType	int		3261118	0					
ANR	3261466	Identifier	i		3261118	1					
ANR	3261467	IdentifierDeclStatement	PROC_ID job_id ;	4134:3:110405:110419	3261118	1	True				
ANR	3261468	IdentifierDecl	job_id		3261118	0					
ANR	3261469	IdentifierDeclType	PROC_ID		3261118	0					
ANR	3261470	Identifier	job_id		3261118	1					
ANR	3261471	IdentifierDeclStatement	"char * ptr2 = strchr ( ptr1 , ',' ) ;"	4135:3:110424:110456	3261118	2	True				
ANR	3261472	IdentifierDecl	"* ptr2 = strchr ( ptr1 , ',' )"		3261118	0					
ANR	3261473	IdentifierDeclType	char *		3261118	0					
ANR	3261474	Identifier	ptr2		3261118	1					
ANR	3261475	AssignmentExpression	"* ptr2 = strchr ( ptr1 , ',' )"		3261118	2		=			
ANR	3261476	Identifier	ptr2		3261118	0					
ANR	3261477	CallExpression	"strchr ( ptr1 , ',' )"		3261118	1					
ANR	3261478	Callee	strchr		3261118	0					
ANR	3261479	Identifier	strchr		3261118	0					
ANR	3261480	ArgumentList	ptr1		3261118	1					
ANR	3261481	Argument	ptr1		3261118	0					
ANR	3261482	Identifier	ptr1		3261118	0					
ANR	3261483	Argument	"','"		3261118	1					
ANR	3261484	PrimaryExpression	"','"		3261118	0					
ANR	3261485	IfStatement	if ( ptr2 )		3261118	3					
ANR	3261486	Condition	ptr2	4136:8:110466:110469	3261118	0	True				
ANR	3261487	Identifier	ptr2		3261118	0					
ANR	3261488	CompoundStatement		65:15:1840:1840	3261118	1					
ANR	3261489	ExpressionStatement	* ptr2 = '\\0'	4137:4:110479:110491	3261118	0	True				
ANR	3261490	AssignmentExpression	* ptr2 = '\\0'		3261118	0		=			
ANR	3261491	UnaryOperationExpression	* ptr2		3261118	0					
ANR	3261492	UnaryOperator	*		3261118	0					
ANR	3261493	Identifier	ptr2		3261118	1					
ANR	3261494	PrimaryExpression	'\\0'		3261118	1					
ANR	3261495	ExpressionStatement	ptr2 ++	4138:4:110497:110503	3261118	1	True				
ANR	3261496	PostIncDecOperationExpression	ptr2 ++		3261118	0					
ANR	3261497	Identifier	ptr2		3261118	0					
ANR	3261498	IncDec	++		3261118	1					
ANR	3261499	ExpressionStatement	"i = sscanf ( ptr1 , ""%d.%d"" , & job_id . cluster , & job_id . proc )"	4140:3:110513:110571	3261118	4	True				
ANR	3261500	AssignmentExpression	"i = sscanf ( ptr1 , ""%d.%d"" , & job_id . cluster , & job_id . proc )"		3261118	0		=			
ANR	3261501	Identifier	i		3261118	0					
ANR	3261502	CallExpression	"sscanf ( ptr1 , ""%d.%d"" , & job_id . cluster , & job_id . proc )"		3261118	1					
ANR	3261503	Callee	sscanf		3261118	0					
ANR	3261504	Identifier	sscanf		3261118	0					
ANR	3261505	ArgumentList	ptr1		3261118	1					
ANR	3261506	Argument	ptr1		3261118	0					
ANR	3261507	Identifier	ptr1		3261118	0					
ANR	3261508	Argument	"""%d.%d"""		3261118	1					
ANR	3261509	PrimaryExpression	"""%d.%d"""		3261118	0					
ANR	3261510	Argument	& job_id . cluster		3261118	2					
ANR	3261511	UnaryOperationExpression	& job_id . cluster		3261118	0					
ANR	3261512	UnaryOperator	&		3261118	0					
ANR	3261513	MemberAccess	job_id . cluster		3261118	1					
ANR	3261514	Identifier	job_id		3261118	0					
ANR	3261515	Identifier	cluster		3261118	1					
ANR	3261516	Argument	& job_id . proc		3261118	3					
ANR	3261517	UnaryOperationExpression	& job_id . proc		3261118	0					
ANR	3261518	UnaryOperator	&		3261118	0					
ANR	3261519	MemberAccess	job_id . proc		3261118	1					
ANR	3261520	Identifier	job_id		3261118	0					
ANR	3261521	Identifier	proc		3261118	1					
ANR	3261522	IfStatement	if ( i != 2 )		3261118	5					
ANR	3261523	Condition	i != 2	4141:8:110581:110586	3261118	0	True				
ANR	3261524	EqualityExpression	i != 2		3261118	0		!=			
ANR	3261525	Identifier	i		3261118	0					
ANR	3261526	PrimaryExpression	2		3261118	1					
ANR	3261527	CompoundStatement		70:17:1957:1957	3261118	1					
ANR	3261528	ExpressionStatement	"dprintf ( D_ALWAYS , ""condor_job_update_lease: skipping malformed job id '%s'\\n"" , ptr1 )"	4142:4:110596:110682	3261118	0	True				
ANR	3261529	CallExpression	"dprintf ( D_ALWAYS , ""condor_job_update_lease: skipping malformed job id '%s'\\n"" , ptr1 )"		3261118	0					
ANR	3261530	Callee	dprintf		3261118	0					
ANR	3261531	Identifier	dprintf		3261118	0					
ANR	3261532	ArgumentList	D_ALWAYS		3261118	1					
ANR	3261533	Argument	D_ALWAYS		3261118	0					
ANR	3261534	Identifier	D_ALWAYS		3261118	0					
ANR	3261535	Argument	"""condor_job_update_lease: skipping malformed job id '%s'\\n"""		3261118	1					
ANR	3261536	PrimaryExpression	"""condor_job_update_lease: skipping malformed job id '%s'\\n"""		3261118	0					
ANR	3261537	Argument	ptr1		3261118	2					
ANR	3261538	Identifier	ptr1		3261118	0					
ANR	3261539	ElseStatement	else		3261118	0					
ANR	3261540	CompoundStatement		72:10:2061:2061	3261118	0					
ANR	3261541	ExpressionStatement	updated . Append ( job_id )	4144:4:110700:110724	3261118	0	True				
ANR	3261542	CallExpression	updated . Append ( job_id )		3261118	0					
ANR	3261543	Callee	updated . Append		3261118	0					
ANR	3261544	MemberAccess	updated . Append		3261118	0					
ANR	3261545	Identifier	updated		3261118	0					
ANR	3261546	Identifier	Append		3261118	1					
ANR	3261547	ArgumentList	job_id		3261118	1					
ANR	3261548	Argument	job_id		3261118	0					
ANR	3261549	Identifier	job_id		3261118	0					
ANR	3261550	ExpressionStatement	ptr1 = ptr2	4146:3:110734:110745	3261118	6	True				
ANR	3261551	AssignmentExpression	ptr1 = ptr2		3261118	0		=			
ANR	3261552	Identifier	ptr1		3261118	0					
ANR	3261553	Identifier	ptr2		3261118	1					
ANR	3261554	Statement	delete	4148:2:110753:110758	3261118	7	True				
ANR	3261555	ExpressionStatement	result	4148:9:110760:110766	3261118	8	True				
ANR	3261556	Identifier	result		3261118	0					
ANR	3261557	ReturnStatement	return rc ;	4149:2:110770:110779	3261118	9	True				
ANR	3261558	Identifier	rc		3261118	0					
ANR	3261559	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3261118	19					
ANR	3261560	Condition	"check_pending_timeout ( command , buf )"	4153:6:110836:110869	3261118	0	True				
ANR	3261561	CallExpression	"check_pending_timeout ( command , buf )"		3261118	0					
ANR	3261562	Callee	check_pending_timeout		3261118	0					
ANR	3261563	Identifier	check_pending_timeout		3261118	0					
ANR	3261564	ArgumentList	command		3261118	1					
ANR	3261565	Argument	command		3261118	0					
ANR	3261566	Identifier	command		3261118	0					
ANR	3261567	Argument	buf		3261118	1					
ANR	3261568	Identifier	buf		3261118	0					
ANR	3261569	CompoundStatement		82:43:2240:2240	3261118	1					
ANR	3261570	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4155:2:110909:110957	3261118	0	True				
ANR	3261571	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3261118	0					
ANR	3261572	Callee	sprintf		3261118	0					
ANR	3261573	Identifier	sprintf		3261118	0					
ANR	3261574	ArgumentList	error_string		3261118	1					
ANR	3261575	Argument	error_string		3261118	0					
ANR	3261576	Identifier	error_string		3261118	0					
ANR	3261577	Argument	"""%s timed out"""		3261118	1					
ANR	3261578	PrimaryExpression	"""%s timed out"""		3261118	0					
ANR	3261579	Argument	command		3261118	2					
ANR	3261580	Identifier	command		3261118	0					
ANR	3261581	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4156:2:110961:110996	3261118	1	True				
ANR	3261582	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3261118	0					
ANR	3261583	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4160:1:111056:111089	3261118	20	True				
ANR	3261584	Identifier	GAHPCLIENT_COMMAND_PENDING		3261118	0					
ANR	3261585	ReturnType	int		3261118	1					
ANR	3261586	Identifier	GahpClient :: condor_job_update_lease		3261118	2					
ANR	3261587	ParameterList	"const char * schedd_name , const SimpleList < PROC_ID > & jobs , const SimpleList < int > & expirations , SimpleList < PROC_ID > & updated"		3261118	3					
ANR	3261588	Parameter	const char * schedd_name	4068:36:108480:108502	3261118	0	True				
ANR	3261589	ParameterType	const char *		3261118	0					
ANR	3261590	Identifier	schedd_name		3261118	1					
ANR	3261591	Parameter	const SimpleList < PROC_ID > & jobs	4069:9:108514:108544	3261118	1	True				
ANR	3261592	ParameterType	const SimpleList < PROC_ID > &		3261118	0					
ANR	3261593	Identifier	jobs		3261118	1					
ANR	3261594	Parameter	const SimpleList < int > & expirations	4070:9:108556:108589	3261118	2	True				
ANR	3261595	ParameterType	const SimpleList < int > &		3261118	0					
ANR	3261596	Identifier	expirations		3261118	1					
ANR	3261597	Parameter	SimpleList < PROC_ID > & updated	4071:9:108601:108628	3261118	3	True				
ANR	3261598	ParameterType	SimpleList < PROC_ID > &		3261118	0					
ANR	3261599	Identifier	updated		3261118	1					
ANR	3261600	CFGEntryNode	ENTRY		3261118		True				
ANR	3261601	CFGExitNode	EXIT		3261118		True				
ANR	3261602	Symbol	server -> m_commands_supported		3261118						
ANR	3261603	Symbol	next_job . proc		3261118						
ANR	3261604	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3261118						
ANR	3261605	Symbol	strchr		3261118						
ANR	3261606	Symbol	sprintf		3261118						
ANR	3261607	Symbol	& job_id . proc		3261118						
ANR	3261608	Symbol	server -> m_commands_supported -> contains_anycase		3261118						
ANR	3261609	Symbol	GAHPCLIENT_COMMAND_PENDING		3261118						
ANR	3261610	Symbol	* ptr2		3261118						
ANR	3261611	Symbol	next_job		3261118						
ANR	3261612	Symbol	* ptr1		3261118						
ANR	3261613	Symbol	strcasecmp		3261118						
ANR	3261614	Symbol	NULL		3261118						
ANR	3261615	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3261118						
ANR	3261616	Symbol	next_job . cluster		3261118						
ANR	3261617	Symbol	expirations . Length		3261118						
ANR	3261618	Symbol	* * result		3261118						
ANR	3261619	Symbol	expirations		3261118						
ANR	3261620	Symbol	get_pending_result		3261118						
ANR	3261621	Symbol	ptr2		3261118						
ANR	3261622	Symbol	rc		3261118						
ANR	3261623	Symbol	schedd_name		3261118						
ANR	3261624	Symbol	sscanf		3261118						
ANR	3261625	Symbol	ptr1		3261118						
ANR	3261626	Symbol	next_exp		3261118						
ANR	3261627	Symbol	updated		3261118						
ANR	3261628	Symbol	is_pending		3261118						
ANR	3261629	Symbol	deleg_proxy		3261118						
ANR	3261630	Symbol	server		3261118						
ANR	3261631	Symbol	escapeGahpString		3261118						
ANR	3261632	Symbol	* server		3261118						
ANR	3261633	Symbol	& job_id		3261118						
ANR	3261634	Symbol	exps_i		3261118						
ANR	3261635	Symbol	reqline . c_str		3261118						
ANR	3261636	Symbol	results_only		3261118						
ANR	3261637	Symbol	result -> argv		3261118						
ANR	3261638	Symbol	* server -> m_commands_supported		3261118						
ANR	3261639	Symbol	result		3261118						
ANR	3261640	Symbol	jobs . Length		3261118						
ANR	3261641	Symbol	* result		3261118						
ANR	3261642	Symbol	reqline		3261118						
ANR	3261643	Symbol	m_mode		3261118						
ANR	3261644	Symbol	* result -> argv		3261118						
ANR	3261645	Symbol	* * * result		3261118						
ANR	3261646	Symbol	jobs_i . Next		3261118						
ANR	3261647	Symbol	jobs		3261118						
ANR	3261648	Symbol	D_ALWAYS		3261118						
ANR	3261649	Symbol	i		3261118						
ANR	3261650	Symbol	NULLSTRING		3261118						
ANR	3261651	Symbol	jobs_i		3261118						
ANR	3261652	Symbol	command		3261118						
ANR	3261653	Symbol	* * result -> argv		3261118						
ANR	3261654	Symbol	error_string		3261118						
ANR	3261655	Symbol	buf		3261118						
ANR	3261656	Symbol	esc1		3261118						
ANR	3261657	Symbol	exps_i . Next		3261118						
ANR	3261658	Symbol	job_id		3261118						
ANR	3261659	Symbol	x		3261118						
ANR	3261660	Symbol	result -> argc		3261118						
ANR	3261661	Symbol	FALSE		3261118						
ANR	3261662	Symbol	* * server		3261118						
ANR	3261663	Symbol	strdup		3261118						
ANR	3261664	Symbol	check_pending_timeout		3261118						
ANR	3261665	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3261118						
ANR	3261666	Symbol	sprintf_cat		3261118						
ANR	3261667	Symbol	& job_id . cluster		3261118						
ANR	3261668	Function	GahpClient :: blah_job_submit	4163:0:111094:112999							
ANR	3261669	FunctionDef	"GahpClient :: blah_job_submit (ClassAd * job_ad , char * * job_id)"		3261668	0					
ANR	3261670	CompoundStatement		4165:0:111158:112999	3261668	0					
ANR	3261671	Statement	static	4166:1:111161:111166	3261668	0	True				
ANR	3261672	IdentifierDeclStatement	"const char * command = ""BLAH_JOB_SUBMIT"" ;"	4166:8:111168:111207	3261668	1	True				
ANR	3261673	IdentifierDecl	"* command = ""BLAH_JOB_SUBMIT"""		3261668	0					
ANR	3261674	IdentifierDeclType	const char *		3261668	0					
ANR	3261675	Identifier	command		3261668	1					
ANR	3261676	AssignmentExpression	"* command = ""BLAH_JOB_SUBMIT"""		3261668	2		=			
ANR	3261677	Identifier	command		3261668	0					
ANR	3261678	PrimaryExpression	"""BLAH_JOB_SUBMIT"""		3261668	1					
ANR	3261679	IdentifierDeclStatement	MyString ad_string ;	4168:1:111211:111229	3261668	2	True				
ANR	3261680	IdentifierDecl	ad_string		3261668	0					
ANR	3261681	IdentifierDeclType	MyString		3261668	0					
ANR	3261682	Identifier	ad_string		3261668	1					
ANR	3261683	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3261668	3					
ANR	3261684	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4171:6:111278:111339	3261668	0	True				
ANR	3261685	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3261668	0		==			
ANR	3261686	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3261668	0					
ANR	3261687	Callee	server -> m_commands_supported -> contains_anycase		3261668	0					
ANR	3261688	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3261668	0					
ANR	3261689	PtrMemberAccess	server -> m_commands_supported		3261668	0					
ANR	3261690	Identifier	server		3261668	0					
ANR	3261691	Identifier	m_commands_supported		3261668	1					
ANR	3261692	Identifier	contains_anycase		3261668	1					
ANR	3261693	ArgumentList	command		3261668	1					
ANR	3261694	Argument	command		3261668	0					
ANR	3261695	Identifier	command		3261668	0					
ANR	3261696	Identifier	FALSE		3261668	1					
ANR	3261697	CompoundStatement		7:70:183:183	3261668	1					
ANR	3261698	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4172:2:111346:111385	3261668	0	True				
ANR	3261699	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3261668	0					
ANR	3261700	IfStatement	if ( ! job_ad )		3261668	4					
ANR	3261701	Condition	! job_ad	4176:5:111423:111429	3261668	0	True				
ANR	3261702	UnaryOperationExpression	! job_ad		3261668	0					
ANR	3261703	UnaryOperator	!		3261668	0					
ANR	3261704	Identifier	job_ad		3261668	1					
ANR	3261705	CompoundStatement		12:14:273:273	3261668	1					
ANR	3261706	ExpressionStatement	ad_string = NULLSTRING	4177:2:111436:111456	3261668	0	True				
ANR	3261707	AssignmentExpression	ad_string = NULLSTRING		3261668	0		=			
ANR	3261708	Identifier	ad_string		3261668	0					
ANR	3261709	Identifier	NULLSTRING		3261668	1					
ANR	3261710	ElseStatement	else		3261668	0					
ANR	3261711	CompoundStatement		15:2:311:338	3261668	0					
ANR	3261712	IdentifierDeclStatement	NewClassAdUnparser unparser ;	4179:2:111470:111497	3261668	0	True				
ANR	3261713	IdentifierDecl	unparser		3261668	0					
ANR	3261714	IdentifierDeclType	NewClassAdUnparser		3261668	0					
ANR	3261715	Identifier	unparser		3261668	1					
ANR	3261716	ExpressionStatement	unparser . SetUseCompactSpacing ( true )	4180:2:111501:111538	3261668	1	True				
ANR	3261717	CallExpression	unparser . SetUseCompactSpacing ( true )		3261668	0					
ANR	3261718	Callee	unparser . SetUseCompactSpacing		3261668	0					
ANR	3261719	MemberAccess	unparser . SetUseCompactSpacing		3261668	0					
ANR	3261720	Identifier	unparser		3261668	0					
ANR	3261721	Identifier	SetUseCompactSpacing		3261668	1					
ANR	3261722	ArgumentList	true		3261668	1					
ANR	3261723	Argument	true		3261668	0					
ANR	3261724	Identifier	true		3261668	0					
ANR	3261725	ExpressionStatement	unparser . SetOutputType ( false )	4181:2:111542:111573	3261668	2	True				
ANR	3261726	CallExpression	unparser . SetOutputType ( false )		3261668	0					
ANR	3261727	Callee	unparser . SetOutputType		3261668	0					
ANR	3261728	MemberAccess	unparser . SetOutputType		3261668	0					
ANR	3261729	Identifier	unparser		3261668	0					
ANR	3261730	Identifier	SetOutputType		3261668	1					
ANR	3261731	ArgumentList	false		3261668	1					
ANR	3261732	Argument	false		3261668	0					
ANR	3261733	Identifier	false		3261668	0					
ANR	3261734	ExpressionStatement	unparser . SetOutputTargetType ( false )	4182:2:111577:111614	3261668	3	True				
ANR	3261735	CallExpression	unparser . SetOutputTargetType ( false )		3261668	0					
ANR	3261736	Callee	unparser . SetOutputTargetType		3261668	0					
ANR	3261737	MemberAccess	unparser . SetOutputTargetType		3261668	0					
ANR	3261738	Identifier	unparser		3261668	0					
ANR	3261739	Identifier	SetOutputTargetType		3261668	1					
ANR	3261740	ArgumentList	false		3261668	1					
ANR	3261741	Argument	false		3261668	0					
ANR	3261742	Identifier	false		3261668	0					
ANR	3261743	ExpressionStatement	"unparser . Unparse ( job_ad , ad_string )"	4183:2:111618:111655	3261668	4	True				
ANR	3261744	CallExpression	"unparser . Unparse ( job_ad , ad_string )"		3261668	0					
ANR	3261745	Callee	unparser . Unparse		3261668	0					
ANR	3261746	MemberAccess	unparser . Unparse		3261668	0					
ANR	3261747	Identifier	unparser		3261668	0					
ANR	3261748	Identifier	Unparse		3261668	1					
ANR	3261749	ArgumentList	job_ad		3261668	1					
ANR	3261750	Argument	job_ad		3261668	0					
ANR	3261751	Identifier	job_ad		3261668	0					
ANR	3261752	Argument	ad_string		3261668	1					
ANR	3261753	Identifier	ad_string		3261668	0					
ANR	3261754	IdentifierDeclStatement	std :: string reqline ;	4185:1:111661:111680	3261668	5	True				
ANR	3261755	IdentifierDecl	reqline		3261668	0					
ANR	3261756	IdentifierDeclType	std :: string		3261668	0					
ANR	3261757	Identifier	reqline		3261668	1					
ANR	3261758	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( ad_string . Value ( ) ) ) ;"	4186:1:111683:111752	3261668	6	True				
ANR	3261759	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( ad_string . Value ( ) ) )"		3261668	0					
ANR	3261760	IdentifierDeclType	int		3261668	0					
ANR	3261761	Identifier	x		3261668	1					
ANR	3261762	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( ad_string . Value ( ) ) )"		3261668	2		=			
ANR	3261763	Identifier	x		3261668	0					
ANR	3261764	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( ad_string . Value ( ) ) )"		3261668	1					
ANR	3261765	Callee	sprintf		3261668	0					
ANR	3261766	Identifier	sprintf		3261668	0					
ANR	3261767	ArgumentList	reqline		3261668	1					
ANR	3261768	Argument	reqline		3261668	0					
ANR	3261769	Identifier	reqline		3261668	0					
ANR	3261770	Argument	"""%s"""		3261668	1					
ANR	3261771	PrimaryExpression	"""%s"""		3261668	0					
ANR	3261772	Argument	escapeGahpString ( ad_string . Value ( ) )		3261668	2					
ANR	3261773	CallExpression	escapeGahpString ( ad_string . Value ( ) )		3261668	0					
ANR	3261774	Callee	escapeGahpString		3261668	0					
ANR	3261775	Identifier	escapeGahpString		3261668	0					
ANR	3261776	ArgumentList	ad_string . Value ( )		3261668	1					
ANR	3261777	Argument	ad_string . Value ( )		3261668	0					
ANR	3261778	CallExpression	ad_string . Value ( )		3261668	0					
ANR	3261779	Callee	ad_string . Value		3261668	0					
ANR	3261780	MemberAccess	ad_string . Value		3261668	0					
ANR	3261781	Identifier	ad_string		3261668	0					
ANR	3261782	Identifier	Value		3261668	1					
ANR	3261783	ArgumentList			3261668	1					
ANR	3261784	ExpressionStatement	ASSERT ( x > 0 )	4187:1:111755:111770	3261668	7	True				
ANR	3261785	CallExpression	ASSERT ( x > 0 )		3261668	0					
ANR	3261786	Callee	ASSERT		3261668	0					
ANR	3261787	Identifier	ASSERT		3261668	0					
ANR	3261788	ArgumentList	x > 0		3261668	1					
ANR	3261789	Argument	x > 0		3261668	0					
ANR	3261790	RelationalExpression	x > 0		3261668	0		>			
ANR	3261791	Identifier	x		3261668	0					
ANR	3261792	PrimaryExpression	0		3261668	1					
ANR	3261793	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4188:1:111773:111806	3261668	8	True				
ANR	3261794	IdentifierDecl	* buf = reqline . c_str ( )		3261668	0					
ANR	3261795	IdentifierDeclType	const char *		3261668	0					
ANR	3261796	Identifier	buf		3261668	1					
ANR	3261797	AssignmentExpression	* buf = reqline . c_str ( )		3261668	2		=			
ANR	3261798	Identifier	buf		3261668	0					
ANR	3261799	CallExpression	reqline . c_str ( )		3261668	1					
ANR	3261800	Callee	reqline . c_str		3261668	0					
ANR	3261801	MemberAccess	reqline . c_str		3261668	0					
ANR	3261802	Identifier	reqline		3261668	0					
ANR	3261803	Identifier	c_str		3261668	1					
ANR	3261804	ArgumentList			3261668	1					
ANR	3261805	IfStatement	"if ( ! is_pending ( command , buf ) )"		3261668	9					
ANR	3261806	Condition	"! is_pending ( command , buf )"	4192:6:111907:111930	3261668	0	True				
ANR	3261807	UnaryOperationExpression	"! is_pending ( command , buf )"		3261668	0					
ANR	3261808	UnaryOperator	!		3261668	0					
ANR	3261809	CallExpression	"is_pending ( command , buf )"		3261668	1					
ANR	3261810	Callee	is_pending		3261668	0					
ANR	3261811	Identifier	is_pending		3261668	0					
ANR	3261812	ArgumentList	command		3261668	1					
ANR	3261813	Argument	command		3261668	0					
ANR	3261814	Identifier	command		3261668	0					
ANR	3261815	Argument	buf		3261668	1					
ANR	3261816	Identifier	buf		3261668	0					
ANR	3261817	CompoundStatement		28:33:775:775	3261668	1					
ANR	3261818	IfStatement	if ( m_mode == results_only )		3261668	0					
ANR	3261819	Condition	m_mode == results_only	4195:7:112039:112060	3261668	0	True				
ANR	3261820	EqualityExpression	m_mode == results_only		3261668	0		==			
ANR	3261821	Identifier	m_mode		3261668	0					
ANR	3261822	Identifier	results_only		3261668	1					
ANR	3261823	CompoundStatement		31:32:905:905	3261668	1					
ANR	3261824	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4196:3:112069:112108	3261668	0	True				
ANR	3261825	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3261668	0					
ANR	3261826	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4198:2:112116:112152	3261668	1	True				
ANR	3261827	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3261668	0					
ANR	3261828	Callee	now_pending		3261668	0					
ANR	3261829	Identifier	now_pending		3261668	0					
ANR	3261830	ArgumentList	command		3261668	1					
ANR	3261831	Argument	command		3261668	0					
ANR	3261832	Identifier	command		3261668	0					
ANR	3261833	Argument	buf		3261668	1					
ANR	3261834	Identifier	buf		3261668	0					
ANR	3261835	Argument	deleg_proxy		3261668	2					
ANR	3261836	Identifier	deleg_proxy		3261668	0					
ANR	3261837	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4204:1:112246:112297	3261668	10	True				
ANR	3261838	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3261668	0					
ANR	3261839	IdentifierDeclType	Gahp_Args *		3261668	0					
ANR	3261840	Identifier	result		3261668	1					
ANR	3261841	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3261668	2		=			
ANR	3261842	Identifier	result		3261668	0					
ANR	3261843	CallExpression	"get_pending_result ( command , buf )"		3261668	1					
ANR	3261844	Callee	get_pending_result		3261668	0					
ANR	3261845	Identifier	get_pending_result		3261668	0					
ANR	3261846	ArgumentList	command		3261668	1					
ANR	3261847	Argument	command		3261668	0					
ANR	3261848	Identifier	command		3261668	0					
ANR	3261849	Argument	buf		3261668	1					
ANR	3261850	Identifier	buf		3261668	0					
ANR	3261851	IfStatement	if ( result )		3261668	11					
ANR	3261852	Condition	result	4205:6:112305:112310	3261668	0	True				
ANR	3261853	Identifier	result		3261668	0					
ANR	3261854	CompoundStatement		46:2:1250:1282	3261668	1					
ANR	3261855	IfStatement	if ( result -> argc != 4 )		3261668	0					
ANR	3261856	Condition	result -> argc != 4	4207:6:112346:112362	3261668	0	True				
ANR	3261857	EqualityExpression	result -> argc != 4		3261668	0		!=			
ANR	3261858	PtrMemberAccess	result -> argc		3261668	0					
ANR	3261859	Identifier	result		3261668	0					
ANR	3261860	Identifier	argc		3261668	1					
ANR	3261861	PrimaryExpression	4		3261668	1					
ANR	3261862	CompoundStatement		43:25:1206:1206	3261668	1					
ANR	3261863	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4208:3:112370:112401	3261668	0	True				
ANR	3261864	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3261668	0					
ANR	3261865	Callee	EXCEPT		3261668	0					
ANR	3261866	Identifier	EXCEPT		3261668	0					
ANR	3261867	ArgumentList	"""Bad %s Result"""		3261668	1					
ANR	3261868	Argument	"""Bad %s Result"""		3261668	0					
ANR	3261869	PrimaryExpression	"""Bad %s Result"""		3261668	0					
ANR	3261870	Argument	command		3261668	1					
ANR	3261871	Identifier	command		3261668	0					
ANR	3261872	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4210:2:112409:112441	3261668	1	True				
ANR	3261873	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3261668	0					
ANR	3261874	IdentifierDeclType	int		3261668	0					
ANR	3261875	Identifier	rc		3261668	1					
ANR	3261876	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3261668	2		=			
ANR	3261877	Identifier	rc		3261668	0					
ANR	3261878	CallExpression	atoi ( result -> argv [ 1 ] )		3261668	1					
ANR	3261879	Callee	atoi		3261668	0					
ANR	3261880	Identifier	atoi		3261668	0					
ANR	3261881	ArgumentList	result -> argv [ 1 ]		3261668	1					
ANR	3261882	Argument	result -> argv [ 1 ]		3261668	0					
ANR	3261883	ArrayIndexing	result -> argv [ 1 ]		3261668	0					
ANR	3261884	PtrMemberAccess	result -> argv		3261668	0					
ANR	3261885	Identifier	result		3261668	0					
ANR	3261886	Identifier	argv		3261668	1					
ANR	3261887	PrimaryExpression	1		3261668	1					
ANR	3261888	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3261668	2					
ANR	3261889	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	4211:7:112450:112488	3261668	0	True				
ANR	3261890	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3261668	0					
ANR	3261891	Callee	strcasecmp		3261668	0					
ANR	3261892	Identifier	strcasecmp		3261668	0					
ANR	3261893	ArgumentList	result -> argv [ 3 ]		3261668	1					
ANR	3261894	Argument	result -> argv [ 3 ]		3261668	0					
ANR	3261895	ArrayIndexing	result -> argv [ 3 ]		3261668	0					
ANR	3261896	PtrMemberAccess	result -> argv		3261668	0					
ANR	3261897	Identifier	result		3261668	0					
ANR	3261898	Identifier	argv		3261668	1					
ANR	3261899	PrimaryExpression	3		3261668	1					
ANR	3261900	Argument	NULLSTRING		3261668	1					
ANR	3261901	Identifier	NULLSTRING		3261668	0					
ANR	3261902	CompoundStatement		47:49:1333:1333	3261668	1					
ANR	3261903	ExpressionStatement	* job_id = strdup ( result -> argv [ 3 ] )	4212:3:112497:112530	3261668	0	True				
ANR	3261904	AssignmentExpression	* job_id = strdup ( result -> argv [ 3 ] )		3261668	0		=			
ANR	3261905	UnaryOperationExpression	* job_id		3261668	0					
ANR	3261906	UnaryOperator	*		3261668	0					
ANR	3261907	Identifier	job_id		3261668	1					
ANR	3261908	CallExpression	strdup ( result -> argv [ 3 ] )		3261668	1					
ANR	3261909	Callee	strdup		3261668	0					
ANR	3261910	Identifier	strdup		3261668	0					
ANR	3261911	ArgumentList	result -> argv [ 3 ]		3261668	1					
ANR	3261912	Argument	result -> argv [ 3 ]		3261668	0					
ANR	3261913	ArrayIndexing	result -> argv [ 3 ]		3261668	0					
ANR	3261914	PtrMemberAccess	result -> argv		3261668	0					
ANR	3261915	Identifier	result		3261668	0					
ANR	3261916	Identifier	argv		3261668	1					
ANR	3261917	PrimaryExpression	3		3261668	1					
ANR	3261918	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3261668	3					
ANR	3261919	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4214:7:112543:112581	3261668	0	True				
ANR	3261920	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3261668	0					
ANR	3261921	Callee	strcasecmp		3261668	0					
ANR	3261922	Identifier	strcasecmp		3261668	0					
ANR	3261923	ArgumentList	result -> argv [ 2 ]		3261668	1					
ANR	3261924	Argument	result -> argv [ 2 ]		3261668	0					
ANR	3261925	ArrayIndexing	result -> argv [ 2 ]		3261668	0					
ANR	3261926	PtrMemberAccess	result -> argv		3261668	0					
ANR	3261927	Identifier	result		3261668	0					
ANR	3261928	Identifier	argv		3261668	1					
ANR	3261929	PrimaryExpression	2		3261668	1					
ANR	3261930	Argument	NULLSTRING		3261668	1					
ANR	3261931	Identifier	NULLSTRING		3261668	0					
ANR	3261932	CompoundStatement		50:49:1426:1426	3261668	1					
ANR	3261933	ExpressionStatement	error_string = result -> argv [ 2 ]	4215:3:112590:112620	3261668	0	True				
ANR	3261934	AssignmentExpression	error_string = result -> argv [ 2 ]		3261668	0		=			
ANR	3261935	Identifier	error_string		3261668	0					
ANR	3261936	ArrayIndexing	result -> argv [ 2 ]		3261668	1					
ANR	3261937	PtrMemberAccess	result -> argv		3261668	0					
ANR	3261938	Identifier	result		3261668	0					
ANR	3261939	Identifier	argv		3261668	1					
ANR	3261940	PrimaryExpression	2		3261668	1					
ANR	3261941	ElseStatement	else		3261668	0					
ANR	3261942	CompoundStatement		52:9:1472:1472	3261668	0					
ANR	3261943	ExpressionStatement	"error_string = """""	4217:3:112636:112653	3261668	0	True				
ANR	3261944	AssignmentExpression	"error_string = """""		3261668	0		=			
ANR	3261945	Identifier	error_string		3261668	0					
ANR	3261946	PrimaryExpression	""""""		3261668	1					
ANR	3261947	Statement	delete	4219:2:112661:112666	3261668	4	True				
ANR	3261948	ExpressionStatement	result	4219:9:112668:112674	3261668	5	True				
ANR	3261949	Identifier	result		3261668	0					
ANR	3261950	ReturnStatement	return rc ;	4220:2:112678:112687	3261668	6	True				
ANR	3261951	Identifier	rc		3261668	0					
ANR	3261952	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3261668	12					
ANR	3261953	Condition	"check_pending_timeout ( command , buf )"	4224:6:112744:112777	3261668	0	True				
ANR	3261954	CallExpression	"check_pending_timeout ( command , buf )"		3261668	0					
ANR	3261955	Callee	check_pending_timeout		3261668	0					
ANR	3261956	Identifier	check_pending_timeout		3261668	0					
ANR	3261957	ArgumentList	command		3261668	1					
ANR	3261958	Argument	command		3261668	0					
ANR	3261959	Identifier	command		3261668	0					
ANR	3261960	Argument	buf		3261668	1					
ANR	3261961	Identifier	buf		3261668	0					
ANR	3261962	CompoundStatement		60:43:1622:1622	3261668	1					
ANR	3261963	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4226:2:112817:112865	3261668	0	True				
ANR	3261964	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3261668	0					
ANR	3261965	Callee	sprintf		3261668	0					
ANR	3261966	Identifier	sprintf		3261668	0					
ANR	3261967	ArgumentList	error_string		3261668	1					
ANR	3261968	Argument	error_string		3261668	0					
ANR	3261969	Identifier	error_string		3261668	0					
ANR	3261970	Argument	"""%s timed out"""		3261668	1					
ANR	3261971	PrimaryExpression	"""%s timed out"""		3261668	0					
ANR	3261972	Argument	command		3261668	2					
ANR	3261973	Identifier	command		3261668	0					
ANR	3261974	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4227:2:112869:112904	3261668	1	True				
ANR	3261975	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3261668	0					
ANR	3261976	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4231:1:112964:112997	3261668	13	True				
ANR	3261977	Identifier	GAHPCLIENT_COMMAND_PENDING		3261668	0					
ANR	3261978	ReturnType	int		3261668	1					
ANR	3261979	Identifier	GahpClient :: blah_job_submit		3261668	2					
ANR	3261980	ParameterList	"ClassAd * job_ad , char * * job_id"		3261668	3					
ANR	3261981	Parameter	ClassAd * job_ad	4164:28:111126:111140	3261668	0	True				
ANR	3261982	ParameterType	ClassAd *		3261668	0					
ANR	3261983	Identifier	job_ad		3261668	1					
ANR	3261984	Parameter	char * * job_id	4164:45:111143:111155	3261668	1	True				
ANR	3261985	ParameterType	char * *		3261668	0					
ANR	3261986	Identifier	job_id		3261668	1					
ANR	3261987	CFGEntryNode	ENTRY		3261668		True				
ANR	3261988	CFGExitNode	EXIT		3261668		True				
ANR	3261989	Symbol	server -> m_commands_supported		3261668						
ANR	3261990	Symbol	server		3261668						
ANR	3261991	Symbol	escapeGahpString		3261668						
ANR	3261992	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3261668						
ANR	3261993	Symbol	* server		3261668						
ANR	3261994	Symbol	ad_string		3261668						
ANR	3261995	Symbol	reqline . c_str		3261668						
ANR	3261996	Symbol	results_only		3261668						
ANR	3261997	Symbol	result -> argv		3261668						
ANR	3261998	Symbol	job_ad		3261668						
ANR	3261999	Symbol	* server -> m_commands_supported		3261668						
ANR	3262000	Symbol	sprintf		3261668						
ANR	3262001	Symbol	result		3261668						
ANR	3262002	Symbol	* result		3261668						
ANR	3262003	Symbol	server -> m_commands_supported -> contains_anycase		3261668						
ANR	3262004	Symbol	GAHPCLIENT_COMMAND_PENDING		3261668						
ANR	3262005	Symbol	reqline		3261668						
ANR	3262006	Symbol	m_mode		3261668						
ANR	3262007	Symbol	strcasecmp		3261668						
ANR	3262008	Symbol	* result -> argv		3261668						
ANR	3262009	Symbol	atoi		3261668						
ANR	3262010	Symbol	ad_string . Value		3261668						
ANR	3262011	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3261668						
ANR	3262012	Symbol	false		3261668						
ANR	3262013	Symbol	* * result		3261668						
ANR	3262014	Symbol	NULLSTRING		3261668						
ANR	3262015	Symbol	command		3261668						
ANR	3262016	Symbol	get_pending_result		3261668						
ANR	3262017	Symbol	rc		3261668						
ANR	3262018	Symbol	error_string		3261668						
ANR	3262019	Symbol	buf		3261668						
ANR	3262020	Symbol	job_id		3261668						
ANR	3262021	Symbol	* job_id		3261668						
ANR	3262022	Symbol	true		3261668						
ANR	3262023	Symbol	x		3261668						
ANR	3262024	Symbol	result -> argc		3261668						
ANR	3262025	Symbol	FALSE		3261668						
ANR	3262026	Symbol	* * server		3261668						
ANR	3262027	Symbol	unparser		3261668						
ANR	3262028	Symbol	strdup		3261668						
ANR	3262029	Symbol	check_pending_timeout		3261668						
ANR	3262030	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3261668						
ANR	3262031	Symbol	is_pending		3261668						
ANR	3262032	Symbol	deleg_proxy		3261668						
ANR	3262033	Function	GahpClient :: blah_job_status	4234:0:113002:114825							
ANR	3262034	FunctionDef	"GahpClient :: blah_job_status (const char * job_id , ClassAd * * status_ad)"		3262033	0					
ANR	3262035	CompoundStatement		4236:0:113075:114825	3262033	0					
ANR	3262036	Statement	static	4237:1:113078:113083	3262033	0	True				
ANR	3262037	IdentifierDeclStatement	"const char * command = ""BLAH_JOB_STATUS"" ;"	4237:8:113085:113124	3262033	1	True				
ANR	3262038	IdentifierDecl	"* command = ""BLAH_JOB_STATUS"""		3262033	0					
ANR	3262039	IdentifierDeclType	const char *		3262033	0					
ANR	3262040	Identifier	command		3262033	1					
ANR	3262041	AssignmentExpression	"* command = ""BLAH_JOB_STATUS"""		3262033	2		=			
ANR	3262042	Identifier	command		3262033	0					
ANR	3262043	PrimaryExpression	"""BLAH_JOB_STATUS"""		3262033	1					
ANR	3262044	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3262033	2					
ANR	3262045	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4240:6:113173:113234	3262033	0	True				
ANR	3262046	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3262033	0		==			
ANR	3262047	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3262033	0					
ANR	3262048	Callee	server -> m_commands_supported -> contains_anycase		3262033	0					
ANR	3262049	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3262033	0					
ANR	3262050	PtrMemberAccess	server -> m_commands_supported		3262033	0					
ANR	3262051	Identifier	server		3262033	0					
ANR	3262052	Identifier	m_commands_supported		3262033	1					
ANR	3262053	Identifier	contains_anycase		3262033	1					
ANR	3262054	ArgumentList	command		3262033	1					
ANR	3262055	Argument	command		3262033	0					
ANR	3262056	Identifier	command		3262033	0					
ANR	3262057	Identifier	FALSE		3262033	1					
ANR	3262058	CompoundStatement		5:70:161:161	3262033	1					
ANR	3262059	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4241:2:113241:113280	3262033	0	True				
ANR	3262060	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262033	0					
ANR	3262061	IfStatement	if ( ! job_id )		3262033	3					
ANR	3262062	Condition	! job_id	4245:5:113318:113324	3262033	0	True				
ANR	3262063	UnaryOperationExpression	! job_id		3262033	0					
ANR	3262064	UnaryOperator	!		3262033	0					
ANR	3262065	Identifier	job_id		3262033	1					
ANR	3262066	ExpressionStatement	job_id = NULLSTRING	4245:14:113327:113344	3262033	1	True				
ANR	3262067	AssignmentExpression	job_id = NULLSTRING		3262033	0		=			
ANR	3262068	Identifier	job_id		3262033	0					
ANR	3262069	Identifier	NULLSTRING		3262033	1					
ANR	3262070	IdentifierDeclStatement	std :: string reqline ;	4246:1:113347:113366	3262033	4	True				
ANR	3262071	IdentifierDecl	reqline		3262033	0					
ANR	3262072	IdentifierDeclType	std :: string		3262033	0					
ANR	3262073	Identifier	reqline		3262033	1					
ANR	3262074	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) ) ;"	4247:1:113369:113427	3262033	5	True				
ANR	3262075	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) )"		3262033	0					
ANR	3262076	IdentifierDeclType	int		3262033	0					
ANR	3262077	Identifier	x		3262033	1					
ANR	3262078	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) )"		3262033	2		=			
ANR	3262079	Identifier	x		3262033	0					
ANR	3262080	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) )"		3262033	1					
ANR	3262081	Callee	sprintf		3262033	0					
ANR	3262082	Identifier	sprintf		3262033	0					
ANR	3262083	ArgumentList	reqline		3262033	1					
ANR	3262084	Argument	reqline		3262033	0					
ANR	3262085	Identifier	reqline		3262033	0					
ANR	3262086	Argument	"""%s"""		3262033	1					
ANR	3262087	PrimaryExpression	"""%s"""		3262033	0					
ANR	3262088	Argument	escapeGahpString ( job_id )		3262033	2					
ANR	3262089	CallExpression	escapeGahpString ( job_id )		3262033	0					
ANR	3262090	Callee	escapeGahpString		3262033	0					
ANR	3262091	Identifier	escapeGahpString		3262033	0					
ANR	3262092	ArgumentList	job_id		3262033	1					
ANR	3262093	Argument	job_id		3262033	0					
ANR	3262094	Identifier	job_id		3262033	0					
ANR	3262095	ExpressionStatement	ASSERT ( x > 0 )	4248:1:113430:113445	3262033	6	True				
ANR	3262096	CallExpression	ASSERT ( x > 0 )		3262033	0					
ANR	3262097	Callee	ASSERT		3262033	0					
ANR	3262098	Identifier	ASSERT		3262033	0					
ANR	3262099	ArgumentList	x > 0		3262033	1					
ANR	3262100	Argument	x > 0		3262033	0					
ANR	3262101	RelationalExpression	x > 0		3262033	0		>			
ANR	3262102	Identifier	x		3262033	0					
ANR	3262103	PrimaryExpression	0		3262033	1					
ANR	3262104	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4249:1:113448:113481	3262033	7	True				
ANR	3262105	IdentifierDecl	* buf = reqline . c_str ( )		3262033	0					
ANR	3262106	IdentifierDeclType	const char *		3262033	0					
ANR	3262107	Identifier	buf		3262033	1					
ANR	3262108	AssignmentExpression	* buf = reqline . c_str ( )		3262033	2		=			
ANR	3262109	Identifier	buf		3262033	0					
ANR	3262110	CallExpression	reqline . c_str ( )		3262033	1					
ANR	3262111	Callee	reqline . c_str		3262033	0					
ANR	3262112	MemberAccess	reqline . c_str		3262033	0					
ANR	3262113	Identifier	reqline		3262033	0					
ANR	3262114	Identifier	c_str		3262033	1					
ANR	3262115	ArgumentList			3262033	1					
ANR	3262116	IfStatement	"if ( ! is_pending ( command , buf ) )"		3262033	8					
ANR	3262117	Condition	"! is_pending ( command , buf )"	4253:6:113582:113605	3262033	0	True				
ANR	3262118	UnaryOperationExpression	"! is_pending ( command , buf )"		3262033	0					
ANR	3262119	UnaryOperator	!		3262033	0					
ANR	3262120	CallExpression	"is_pending ( command , buf )"		3262033	1					
ANR	3262121	Callee	is_pending		3262033	0					
ANR	3262122	Identifier	is_pending		3262033	0					
ANR	3262123	ArgumentList	command		3262033	1					
ANR	3262124	Argument	command		3262033	0					
ANR	3262125	Identifier	command		3262033	0					
ANR	3262126	Argument	buf		3262033	1					
ANR	3262127	Identifier	buf		3262033	0					
ANR	3262128	CompoundStatement		18:33:533:533	3262033	1					
ANR	3262129	IfStatement	if ( m_mode == results_only )		3262033	0					
ANR	3262130	Condition	m_mode == results_only	4256:7:113714:113735	3262033	0	True				
ANR	3262131	EqualityExpression	m_mode == results_only		3262033	0		==			
ANR	3262132	Identifier	m_mode		3262033	0					
ANR	3262133	Identifier	results_only		3262033	1					
ANR	3262134	CompoundStatement		21:32:663:663	3262033	1					
ANR	3262135	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4257:3:113744:113783	3262033	0	True				
ANR	3262136	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262033	0					
ANR	3262137	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4259:2:113791:113827	3262033	1	True				
ANR	3262138	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3262033	0					
ANR	3262139	Callee	now_pending		3262033	0					
ANR	3262140	Identifier	now_pending		3262033	0					
ANR	3262141	ArgumentList	command		3262033	1					
ANR	3262142	Argument	command		3262033	0					
ANR	3262143	Identifier	command		3262033	0					
ANR	3262144	Argument	buf		3262033	1					
ANR	3262145	Identifier	buf		3262033	0					
ANR	3262146	Argument	deleg_proxy		3262033	2					
ANR	3262147	Identifier	deleg_proxy		3262033	0					
ANR	3262148	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4265:1:113921:113972	3262033	9	True				
ANR	3262149	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3262033	0					
ANR	3262150	IdentifierDeclType	Gahp_Args *		3262033	0					
ANR	3262151	Identifier	result		3262033	1					
ANR	3262152	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3262033	2		=			
ANR	3262153	Identifier	result		3262033	0					
ANR	3262154	CallExpression	"get_pending_result ( command , buf )"		3262033	1					
ANR	3262155	Callee	get_pending_result		3262033	0					
ANR	3262156	Identifier	get_pending_result		3262033	0					
ANR	3262157	ArgumentList	command		3262033	1					
ANR	3262158	Argument	command		3262033	0					
ANR	3262159	Identifier	command		3262033	0					
ANR	3262160	Argument	buf		3262033	1					
ANR	3262161	Identifier	buf		3262033	0					
ANR	3262162	IfStatement	if ( result )		3262033	10					
ANR	3262163	Condition	result	4266:6:113980:113985	3262033	0	True				
ANR	3262164	Identifier	result		3262033	0					
ANR	3262165	CompoundStatement		36:2:1008:1040	3262033	1					
ANR	3262166	IfStatement	if ( result -> argc != 5 )		3262033	0					
ANR	3262167	Condition	result -> argc != 5	4268:6:114021:114037	3262033	0	True				
ANR	3262168	EqualityExpression	result -> argc != 5		3262033	0		!=			
ANR	3262169	PtrMemberAccess	result -> argc		3262033	0					
ANR	3262170	Identifier	result		3262033	0					
ANR	3262171	Identifier	argc		3262033	1					
ANR	3262172	PrimaryExpression	5		3262033	1					
ANR	3262173	CompoundStatement		33:25:964:964	3262033	1					
ANR	3262174	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4269:3:114045:114076	3262033	0	True				
ANR	3262175	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3262033	0					
ANR	3262176	Callee	EXCEPT		3262033	0					
ANR	3262177	Identifier	EXCEPT		3262033	0					
ANR	3262178	ArgumentList	"""Bad %s Result"""		3262033	1					
ANR	3262179	Argument	"""Bad %s Result"""		3262033	0					
ANR	3262180	PrimaryExpression	"""Bad %s Result"""		3262033	0					
ANR	3262181	Argument	command		3262033	1					
ANR	3262182	Identifier	command		3262033	0					
ANR	3262183	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4271:2:114084:114116	3262033	1	True				
ANR	3262184	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3262033	0					
ANR	3262185	IdentifierDeclType	int		3262033	0					
ANR	3262186	Identifier	rc		3262033	1					
ANR	3262187	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3262033	2		=			
ANR	3262188	Identifier	rc		3262033	0					
ANR	3262189	CallExpression	atoi ( result -> argv [ 1 ] )		3262033	1					
ANR	3262190	Callee	atoi		3262033	0					
ANR	3262191	Identifier	atoi		3262033	0					
ANR	3262192	ArgumentList	result -> argv [ 1 ]		3262033	1					
ANR	3262193	Argument	result -> argv [ 1 ]		3262033	0					
ANR	3262194	ArrayIndexing	result -> argv [ 1 ]		3262033	0					
ANR	3262195	PtrMemberAccess	result -> argv		3262033	0					
ANR	3262196	Identifier	result		3262033	0					
ANR	3262197	Identifier	argv		3262033	1					
ANR	3262198	PrimaryExpression	1		3262033	1					
ANR	3262199	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3262033	2					
ANR	3262200	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4272:7:114125:114163	3262033	0	True				
ANR	3262201	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3262033	0					
ANR	3262202	Callee	strcasecmp		3262033	0					
ANR	3262203	Identifier	strcasecmp		3262033	0					
ANR	3262204	ArgumentList	result -> argv [ 2 ]		3262033	1					
ANR	3262205	Argument	result -> argv [ 2 ]		3262033	0					
ANR	3262206	ArrayIndexing	result -> argv [ 2 ]		3262033	0					
ANR	3262207	PtrMemberAccess	result -> argv		3262033	0					
ANR	3262208	Identifier	result		3262033	0					
ANR	3262209	Identifier	argv		3262033	1					
ANR	3262210	PrimaryExpression	2		3262033	1					
ANR	3262211	Argument	NULLSTRING		3262033	1					
ANR	3262212	Identifier	NULLSTRING		3262033	0					
ANR	3262213	CompoundStatement		37:49:1091:1091	3262033	1					
ANR	3262214	ExpressionStatement	error_string = result -> argv [ 2 ]	4273:3:114172:114202	3262033	0	True				
ANR	3262215	AssignmentExpression	error_string = result -> argv [ 2 ]		3262033	0		=			
ANR	3262216	Identifier	error_string		3262033	0					
ANR	3262217	ArrayIndexing	result -> argv [ 2 ]		3262033	1					
ANR	3262218	PtrMemberAccess	result -> argv		3262033	0					
ANR	3262219	Identifier	result		3262033	0					
ANR	3262220	Identifier	argv		3262033	1					
ANR	3262221	PrimaryExpression	2		3262033	1					
ANR	3262222	ElseStatement	else		3262033	0					
ANR	3262223	CompoundStatement		39:9:1137:1137	3262033	0					
ANR	3262224	ExpressionStatement	"error_string = """""	4275:3:114218:114235	3262033	0	True				
ANR	3262225	AssignmentExpression	"error_string = """""		3262033	0		=			
ANR	3262226	Identifier	error_string		3262033	0					
ANR	3262227	PrimaryExpression	""""""		3262033	1					
ANR	3262228	IfStatement	"if ( strcasecmp ( result -> argv [ 4 ] , NULLSTRING ) )"		3262033	3					
ANR	3262229	Condition	"strcasecmp ( result -> argv [ 4 ] , NULLSTRING )"	4277:7:114248:114288	3262033	0	True				
ANR	3262230	CallExpression	"strcasecmp ( result -> argv [ 4 ] , NULLSTRING )"		3262033	0					
ANR	3262231	Callee	strcasecmp		3262033	0					
ANR	3262232	Identifier	strcasecmp		3262033	0					
ANR	3262233	ArgumentList	result -> argv [ 4 ]		3262033	1					
ANR	3262234	Argument	result -> argv [ 4 ]		3262033	0					
ANR	3262235	ArrayIndexing	result -> argv [ 4 ]		3262033	0					
ANR	3262236	PtrMemberAccess	result -> argv		3262033	0					
ANR	3262237	Identifier	result		3262033	0					
ANR	3262238	Identifier	argv		3262033	1					
ANR	3262239	PrimaryExpression	4		3262033	1					
ANR	3262240	Argument	NULLSTRING		3262033	1					
ANR	3262241	Identifier	NULLSTRING		3262033	0					
ANR	3262242	CompoundStatement		43:3:1221:1244	3262033	1					
ANR	3262243	IdentifierDeclStatement	NewClassAdParser parser ;	4278:3:114297:114320	3262033	0	True				
ANR	3262244	IdentifierDecl	parser		3262033	0					
ANR	3262245	IdentifierDeclType	NewClassAdParser		3262033	0					
ANR	3262246	Identifier	parser		3262033	1					
ANR	3262247	ExpressionStatement	* status_ad = parser . ParseClassAd ( result -> argv [ 4 ] )	4279:3:114325:114376	3262033	1	True				
ANR	3262248	AssignmentExpression	* status_ad = parser . ParseClassAd ( result -> argv [ 4 ] )		3262033	0		=			
ANR	3262249	UnaryOperationExpression	* status_ad		3262033	0					
ANR	3262250	UnaryOperator	*		3262033	0					
ANR	3262251	Identifier	status_ad		3262033	1					
ANR	3262252	CallExpression	parser . ParseClassAd ( result -> argv [ 4 ] )		3262033	1					
ANR	3262253	Callee	parser . ParseClassAd		3262033	0					
ANR	3262254	MemberAccess	parser . ParseClassAd		3262033	0					
ANR	3262255	Identifier	parser		3262033	0					
ANR	3262256	Identifier	ParseClassAd		3262033	1					
ANR	3262257	ArgumentList	result -> argv [ 4 ]		3262033	1					
ANR	3262258	Argument	result -> argv [ 4 ]		3262033	0					
ANR	3262259	ArrayIndexing	result -> argv [ 4 ]		3262033	0					
ANR	3262260	PtrMemberAccess	result -> argv		3262033	0					
ANR	3262261	Identifier	result		3262033	0					
ANR	3262262	Identifier	argv		3262033	1					
ANR	3262263	PrimaryExpression	4		3262033	1					
ANR	3262264	IfStatement	if ( * status_ad != NULL )		3262033	4					
ANR	3262265	Condition	* status_ad != NULL	4281:7:114389:114406	3262033	0	True				
ANR	3262266	EqualityExpression	* status_ad != NULL		3262033	0		!=			
ANR	3262267	UnaryOperationExpression	* status_ad		3262033	0					
ANR	3262268	UnaryOperator	*		3262033	0					
ANR	3262269	Identifier	status_ad		3262033	1					
ANR	3262270	Identifier	NULL		3262033	1					
ANR	3262271	CompoundStatement		46:28:1334:1334	3262033	1					
ANR	3262272	ExpressionStatement	"( * status_ad ) -> Assign ( ATTR_JOB_STATUS , atoi ( result -> argv [ 3 ] ) )"	4282:3:114415:114479	3262033	0	True				
ANR	3262273	CallExpression	"( * status_ad ) -> Assign ( ATTR_JOB_STATUS , atoi ( result -> argv [ 3 ] ) )"		3262033	0					
ANR	3262274	Callee	( * status_ad ) -> Assign		3262033	0					
ANR	3262275	PtrMemberAccess	( * status_ad ) -> Assign		3262033	0					
ANR	3262276	UnaryOperationExpression	* status_ad		3262033	0					
ANR	3262277	UnaryOperator	*		3262033	0					
ANR	3262278	Identifier	status_ad		3262033	1					
ANR	3262279	Identifier	Assign		3262033	1					
ANR	3262280	ArgumentList	ATTR_JOB_STATUS		3262033	1					
ANR	3262281	Argument	ATTR_JOB_STATUS		3262033	0					
ANR	3262282	Identifier	ATTR_JOB_STATUS		3262033	0					
ANR	3262283	Argument	atoi ( result -> argv [ 3 ] )		3262033	1					
ANR	3262284	CallExpression	atoi ( result -> argv [ 3 ] )		3262033	0					
ANR	3262285	Callee	atoi		3262033	0					
ANR	3262286	Identifier	atoi		3262033	0					
ANR	3262287	ArgumentList	result -> argv [ 3 ]		3262033	1					
ANR	3262288	Argument	result -> argv [ 3 ]		3262033	0					
ANR	3262289	ArrayIndexing	result -> argv [ 3 ]		3262033	0					
ANR	3262290	PtrMemberAccess	result -> argv		3262033	0					
ANR	3262291	Identifier	result		3262033	0					
ANR	3262292	Identifier	argv		3262033	1					
ANR	3262293	PrimaryExpression	3		3262033	1					
ANR	3262294	Statement	delete	4284:2:114487:114492	3262033	5	True				
ANR	3262295	ExpressionStatement	result	4284:9:114494:114500	3262033	6	True				
ANR	3262296	Identifier	result		3262033	0					
ANR	3262297	ReturnStatement	return rc ;	4285:2:114504:114513	3262033	7	True				
ANR	3262298	Identifier	rc		3262033	0					
ANR	3262299	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3262033	11					
ANR	3262300	Condition	"check_pending_timeout ( command , buf )"	4289:6:114570:114603	3262033	0	True				
ANR	3262301	CallExpression	"check_pending_timeout ( command , buf )"		3262033	0					
ANR	3262302	Callee	check_pending_timeout		3262033	0					
ANR	3262303	Identifier	check_pending_timeout		3262033	0					
ANR	3262304	ArgumentList	command		3262033	1					
ANR	3262305	Argument	command		3262033	0					
ANR	3262306	Identifier	command		3262033	0					
ANR	3262307	Argument	buf		3262033	1					
ANR	3262308	Identifier	buf		3262033	0					
ANR	3262309	CompoundStatement		54:43:1531:1531	3262033	1					
ANR	3262310	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4291:2:114643:114691	3262033	0	True				
ANR	3262311	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3262033	0					
ANR	3262312	Callee	sprintf		3262033	0					
ANR	3262313	Identifier	sprintf		3262033	0					
ANR	3262314	ArgumentList	error_string		3262033	1					
ANR	3262315	Argument	error_string		3262033	0					
ANR	3262316	Identifier	error_string		3262033	0					
ANR	3262317	Argument	"""%s timed out"""		3262033	1					
ANR	3262318	PrimaryExpression	"""%s timed out"""		3262033	0					
ANR	3262319	Argument	command		3262033	2					
ANR	3262320	Identifier	command		3262033	0					
ANR	3262321	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4292:2:114695:114730	3262033	1	True				
ANR	3262322	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3262033	0					
ANR	3262323	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4296:1:114790:114823	3262033	12	True				
ANR	3262324	Identifier	GAHPCLIENT_COMMAND_PENDING		3262033	0					
ANR	3262325	ReturnType	int		3262033	1					
ANR	3262326	Identifier	GahpClient :: blah_job_status		3262033	2					
ANR	3262327	ParameterList	"const char * job_id , ClassAd * * status_ad"		3262033	3					
ANR	3262328	Parameter	const char * job_id	4235:28:113034:113051	3262033	0	True				
ANR	3262329	ParameterType	const char *		3262033	0					
ANR	3262330	Identifier	job_id		3262033	1					
ANR	3262331	Parameter	ClassAd * * status_ad	4235:48:113054:113072	3262033	1	True				
ANR	3262332	ParameterType	ClassAd * *		3262033	0					
ANR	3262333	Identifier	status_ad		3262033	1					
ANR	3262334	CFGEntryNode	ENTRY		3262033		True				
ANR	3262335	CFGExitNode	EXIT		3262033		True				
ANR	3262336	Symbol	server -> m_commands_supported		3262033						
ANR	3262337	Symbol	server		3262033						
ANR	3262338	Symbol	escapeGahpString		3262033						
ANR	3262339	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262033						
ANR	3262340	Symbol	* server		3262033						
ANR	3262341	Symbol	status_ad		3262033						
ANR	3262342	Symbol	reqline . c_str		3262033						
ANR	3262343	Symbol	results_only		3262033						
ANR	3262344	Symbol	result -> argv		3262033						
ANR	3262345	Symbol	* server -> m_commands_supported		3262033						
ANR	3262346	Symbol	sprintf		3262033						
ANR	3262347	Symbol	result		3262033						
ANR	3262348	Symbol	* status_ad		3262033						
ANR	3262349	Symbol	ATTR_JOB_STATUS		3262033						
ANR	3262350	Symbol	* result		3262033						
ANR	3262351	Symbol	server -> m_commands_supported -> contains_anycase		3262033						
ANR	3262352	Symbol	GAHPCLIENT_COMMAND_PENDING		3262033						
ANR	3262353	Symbol	reqline		3262033						
ANR	3262354	Symbol	m_mode		3262033						
ANR	3262355	Symbol	strcasecmp		3262033						
ANR	3262356	Symbol	* result -> argv		3262033						
ANR	3262357	Symbol	atoi		3262033						
ANR	3262358	Symbol	NULL		3262033						
ANR	3262359	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3262033						
ANR	3262360	Symbol	* * result		3262033						
ANR	3262361	Symbol	NULLSTRING		3262033						
ANR	3262362	Symbol	command		3262033						
ANR	3262363	Symbol	parser . ParseClassAd		3262033						
ANR	3262364	Symbol	get_pending_result		3262033						
ANR	3262365	Symbol	rc		3262033						
ANR	3262366	Symbol	error_string		3262033						
ANR	3262367	Symbol	buf		3262033						
ANR	3262368	Symbol	parser		3262033						
ANR	3262369	Symbol	job_id		3262033						
ANR	3262370	Symbol	x		3262033						
ANR	3262371	Symbol	result -> argc		3262033						
ANR	3262372	Symbol	FALSE		3262033						
ANR	3262373	Symbol	* * server		3262033						
ANR	3262374	Symbol	check_pending_timeout		3262033						
ANR	3262375	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262033						
ANR	3262376	Symbol	is_pending		3262033						
ANR	3262377	Symbol	deleg_proxy		3262033						
ANR	3262378	Function	GahpClient :: blah_job_cancel	4299:0:114828:116388							
ANR	3262379	FunctionDef	GahpClient :: blah_job_cancel (const char * job_id)		3262378	0					
ANR	3262380	CompoundStatement		4301:0:114880:116388	3262378	0					
ANR	3262381	Statement	static	4302:1:114883:114888	3262378	0	True				
ANR	3262382	IdentifierDeclStatement	"const char * command = ""BLAH_JOB_CANCEL"" ;"	4302:8:114890:114929	3262378	1	True				
ANR	3262383	IdentifierDecl	"* command = ""BLAH_JOB_CANCEL"""		3262378	0					
ANR	3262384	IdentifierDeclType	const char *		3262378	0					
ANR	3262385	Identifier	command		3262378	1					
ANR	3262386	AssignmentExpression	"* command = ""BLAH_JOB_CANCEL"""		3262378	2		=			
ANR	3262387	Identifier	command		3262378	0					
ANR	3262388	PrimaryExpression	"""BLAH_JOB_CANCEL"""		3262378	1					
ANR	3262389	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3262378	2					
ANR	3262390	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4305:6:114978:115039	3262378	0	True				
ANR	3262391	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3262378	0		==			
ANR	3262392	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3262378	0					
ANR	3262393	Callee	server -> m_commands_supported -> contains_anycase		3262378	0					
ANR	3262394	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3262378	0					
ANR	3262395	PtrMemberAccess	server -> m_commands_supported		3262378	0					
ANR	3262396	Identifier	server		3262378	0					
ANR	3262397	Identifier	m_commands_supported		3262378	1					
ANR	3262398	Identifier	contains_anycase		3262378	1					
ANR	3262399	ArgumentList	command		3262378	1					
ANR	3262400	Argument	command		3262378	0					
ANR	3262401	Identifier	command		3262378	0					
ANR	3262402	Identifier	FALSE		3262378	1					
ANR	3262403	CompoundStatement		5:70:161:161	3262378	1					
ANR	3262404	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4306:2:115046:115085	3262378	0	True				
ANR	3262405	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262378	0					
ANR	3262406	IfStatement	if ( ! job_id )		3262378	3					
ANR	3262407	Condition	! job_id	4310:5:115123:115129	3262378	0	True				
ANR	3262408	UnaryOperationExpression	! job_id		3262378	0					
ANR	3262409	UnaryOperator	!		3262378	0					
ANR	3262410	Identifier	job_id		3262378	1					
ANR	3262411	ExpressionStatement	job_id = NULLSTRING	4310:14:115132:115149	3262378	1	True				
ANR	3262412	AssignmentExpression	job_id = NULLSTRING		3262378	0		=			
ANR	3262413	Identifier	job_id		3262378	0					
ANR	3262414	Identifier	NULLSTRING		3262378	1					
ANR	3262415	IdentifierDeclStatement	std :: string reqline ;	4311:1:115152:115171	3262378	4	True				
ANR	3262416	IdentifierDecl	reqline		3262378	0					
ANR	3262417	IdentifierDeclType	std :: string		3262378	0					
ANR	3262418	Identifier	reqline		3262378	1					
ANR	3262419	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) ) ;"	4312:1:115174:115234	3262378	5	True				
ANR	3262420	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) )"		3262378	0					
ANR	3262421	IdentifierDeclType	int		3262378	0					
ANR	3262422	Identifier	x		3262378	1					
ANR	3262423	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) )"		3262378	2		=			
ANR	3262424	Identifier	x		3262378	0					
ANR	3262425	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_id ) )"		3262378	1					
ANR	3262426	Callee	sprintf		3262378	0					
ANR	3262427	Identifier	sprintf		3262378	0					
ANR	3262428	ArgumentList	reqline		3262378	1					
ANR	3262429	Argument	reqline		3262378	0					
ANR	3262430	Identifier	reqline		3262378	0					
ANR	3262431	Argument	"""%s"""		3262378	1					
ANR	3262432	PrimaryExpression	"""%s"""		3262378	0					
ANR	3262433	Argument	escapeGahpString ( job_id )		3262378	2					
ANR	3262434	CallExpression	escapeGahpString ( job_id )		3262378	0					
ANR	3262435	Callee	escapeGahpString		3262378	0					
ANR	3262436	Identifier	escapeGahpString		3262378	0					
ANR	3262437	ArgumentList	job_id		3262378	1					
ANR	3262438	Argument	job_id		3262378	0					
ANR	3262439	Identifier	job_id		3262378	0					
ANR	3262440	ExpressionStatement	ASSERT ( x > 0 )	4313:1:115237:115252	3262378	6	True				
ANR	3262441	CallExpression	ASSERT ( x > 0 )		3262378	0					
ANR	3262442	Callee	ASSERT		3262378	0					
ANR	3262443	Identifier	ASSERT		3262378	0					
ANR	3262444	ArgumentList	x > 0		3262378	1					
ANR	3262445	Argument	x > 0		3262378	0					
ANR	3262446	RelationalExpression	x > 0		3262378	0		>			
ANR	3262447	Identifier	x		3262378	0					
ANR	3262448	PrimaryExpression	0		3262378	1					
ANR	3262449	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4314:1:115255:115288	3262378	7	True				
ANR	3262450	IdentifierDecl	* buf = reqline . c_str ( )		3262378	0					
ANR	3262451	IdentifierDeclType	const char *		3262378	0					
ANR	3262452	Identifier	buf		3262378	1					
ANR	3262453	AssignmentExpression	* buf = reqline . c_str ( )		3262378	2		=			
ANR	3262454	Identifier	buf		3262378	0					
ANR	3262455	CallExpression	reqline . c_str ( )		3262378	1					
ANR	3262456	Callee	reqline . c_str		3262378	0					
ANR	3262457	MemberAccess	reqline . c_str		3262378	0					
ANR	3262458	Identifier	reqline		3262378	0					
ANR	3262459	Identifier	c_str		3262378	1					
ANR	3262460	ArgumentList			3262378	1					
ANR	3262461	IfStatement	"if ( ! is_pending ( command , buf ) )"		3262378	8					
ANR	3262462	Condition	"! is_pending ( command , buf )"	4318:6:115389:115412	3262378	0	True				
ANR	3262463	UnaryOperationExpression	"! is_pending ( command , buf )"		3262378	0					
ANR	3262464	UnaryOperator	!		3262378	0					
ANR	3262465	CallExpression	"is_pending ( command , buf )"		3262378	1					
ANR	3262466	Callee	is_pending		3262378	0					
ANR	3262467	Identifier	is_pending		3262378	0					
ANR	3262468	ArgumentList	command		3262378	1					
ANR	3262469	Argument	command		3262378	0					
ANR	3262470	Identifier	command		3262378	0					
ANR	3262471	Argument	buf		3262378	1					
ANR	3262472	Identifier	buf		3262378	0					
ANR	3262473	CompoundStatement		18:33:535:535	3262378	1					
ANR	3262474	IfStatement	if ( m_mode == results_only )		3262378	0					
ANR	3262475	Condition	m_mode == results_only	4321:7:115521:115542	3262378	0	True				
ANR	3262476	EqualityExpression	m_mode == results_only		3262378	0		==			
ANR	3262477	Identifier	m_mode		3262378	0					
ANR	3262478	Identifier	results_only		3262378	1					
ANR	3262479	CompoundStatement		21:32:665:665	3262378	1					
ANR	3262480	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4322:3:115551:115590	3262378	0	True				
ANR	3262481	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262378	0					
ANR	3262482	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4324:2:115598:115634	3262378	1	True				
ANR	3262483	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3262378	0					
ANR	3262484	Callee	now_pending		3262378	0					
ANR	3262485	Identifier	now_pending		3262378	0					
ANR	3262486	ArgumentList	command		3262378	1					
ANR	3262487	Argument	command		3262378	0					
ANR	3262488	Identifier	command		3262378	0					
ANR	3262489	Argument	buf		3262378	1					
ANR	3262490	Identifier	buf		3262378	0					
ANR	3262491	Argument	deleg_proxy		3262378	2					
ANR	3262492	Identifier	deleg_proxy		3262378	0					
ANR	3262493	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4330:1:115728:115779	3262378	9	True				
ANR	3262494	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3262378	0					
ANR	3262495	IdentifierDeclType	Gahp_Args *		3262378	0					
ANR	3262496	Identifier	result		3262378	1					
ANR	3262497	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3262378	2		=			
ANR	3262498	Identifier	result		3262378	0					
ANR	3262499	CallExpression	"get_pending_result ( command , buf )"		3262378	1					
ANR	3262500	Callee	get_pending_result		3262378	0					
ANR	3262501	Identifier	get_pending_result		3262378	0					
ANR	3262502	ArgumentList	command		3262378	1					
ANR	3262503	Argument	command		3262378	0					
ANR	3262504	Identifier	command		3262378	0					
ANR	3262505	Argument	buf		3262378	1					
ANR	3262506	Identifier	buf		3262378	0					
ANR	3262507	IfStatement	if ( result )		3262378	10					
ANR	3262508	Condition	result	4331:6:115787:115792	3262378	0	True				
ANR	3262509	Identifier	result		3262378	0					
ANR	3262510	CompoundStatement		36:2:1010:1042	3262378	1					
ANR	3262511	IfStatement	if ( result -> argc != 3 )		3262378	0					
ANR	3262512	Condition	result -> argc != 3	4333:6:115828:115844	3262378	0	True				
ANR	3262513	EqualityExpression	result -> argc != 3		3262378	0		!=			
ANR	3262514	PtrMemberAccess	result -> argc		3262378	0					
ANR	3262515	Identifier	result		3262378	0					
ANR	3262516	Identifier	argc		3262378	1					
ANR	3262517	PrimaryExpression	3		3262378	1					
ANR	3262518	CompoundStatement		33:25:966:966	3262378	1					
ANR	3262519	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4334:3:115852:115883	3262378	0	True				
ANR	3262520	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3262378	0					
ANR	3262521	Callee	EXCEPT		3262378	0					
ANR	3262522	Identifier	EXCEPT		3262378	0					
ANR	3262523	ArgumentList	"""Bad %s Result"""		3262378	1					
ANR	3262524	Argument	"""Bad %s Result"""		3262378	0					
ANR	3262525	PrimaryExpression	"""Bad %s Result"""		3262378	0					
ANR	3262526	Argument	command		3262378	1					
ANR	3262527	Identifier	command		3262378	0					
ANR	3262528	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4336:2:115891:115923	3262378	1	True				
ANR	3262529	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3262378	0					
ANR	3262530	IdentifierDeclType	int		3262378	0					
ANR	3262531	Identifier	rc		3262378	1					
ANR	3262532	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3262378	2		=			
ANR	3262533	Identifier	rc		3262378	0					
ANR	3262534	CallExpression	atoi ( result -> argv [ 1 ] )		3262378	1					
ANR	3262535	Callee	atoi		3262378	0					
ANR	3262536	Identifier	atoi		3262378	0					
ANR	3262537	ArgumentList	result -> argv [ 1 ]		3262378	1					
ANR	3262538	Argument	result -> argv [ 1 ]		3262378	0					
ANR	3262539	ArrayIndexing	result -> argv [ 1 ]		3262378	0					
ANR	3262540	PtrMemberAccess	result -> argv		3262378	0					
ANR	3262541	Identifier	result		3262378	0					
ANR	3262542	Identifier	argv		3262378	1					
ANR	3262543	PrimaryExpression	1		3262378	1					
ANR	3262544	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3262378	2					
ANR	3262545	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4337:7:115932:115970	3262378	0	True				
ANR	3262546	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3262378	0					
ANR	3262547	Callee	strcasecmp		3262378	0					
ANR	3262548	Identifier	strcasecmp		3262378	0					
ANR	3262549	ArgumentList	result -> argv [ 2 ]		3262378	1					
ANR	3262550	Argument	result -> argv [ 2 ]		3262378	0					
ANR	3262551	ArrayIndexing	result -> argv [ 2 ]		3262378	0					
ANR	3262552	PtrMemberAccess	result -> argv		3262378	0					
ANR	3262553	Identifier	result		3262378	0					
ANR	3262554	Identifier	argv		3262378	1					
ANR	3262555	PrimaryExpression	2		3262378	1					
ANR	3262556	Argument	NULLSTRING		3262378	1					
ANR	3262557	Identifier	NULLSTRING		3262378	0					
ANR	3262558	CompoundStatement		37:49:1093:1093	3262378	1					
ANR	3262559	ExpressionStatement	error_string = result -> argv [ 2 ]	4338:3:115979:116009	3262378	0	True				
ANR	3262560	AssignmentExpression	error_string = result -> argv [ 2 ]		3262378	0		=			
ANR	3262561	Identifier	error_string		3262378	0					
ANR	3262562	ArrayIndexing	result -> argv [ 2 ]		3262378	1					
ANR	3262563	PtrMemberAccess	result -> argv		3262378	0					
ANR	3262564	Identifier	result		3262378	0					
ANR	3262565	Identifier	argv		3262378	1					
ANR	3262566	PrimaryExpression	2		3262378	1					
ANR	3262567	ElseStatement	else		3262378	0					
ANR	3262568	CompoundStatement		39:9:1139:1139	3262378	0					
ANR	3262569	ExpressionStatement	"error_string = """""	4340:3:116025:116042	3262378	0	True				
ANR	3262570	AssignmentExpression	"error_string = """""		3262378	0		=			
ANR	3262571	Identifier	error_string		3262378	0					
ANR	3262572	PrimaryExpression	""""""		3262378	1					
ANR	3262573	Statement	delete	4342:2:116050:116055	3262378	3	True				
ANR	3262574	ExpressionStatement	result	4342:9:116057:116063	3262378	4	True				
ANR	3262575	Identifier	result		3262378	0					
ANR	3262576	ReturnStatement	return rc ;	4343:2:116067:116076	3262378	5	True				
ANR	3262577	Identifier	rc		3262378	0					
ANR	3262578	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3262378	11					
ANR	3262579	Condition	"check_pending_timeout ( command , buf )"	4347:6:116133:116166	3262378	0	True				
ANR	3262580	CallExpression	"check_pending_timeout ( command , buf )"		3262378	0					
ANR	3262581	Callee	check_pending_timeout		3262378	0					
ANR	3262582	Identifier	check_pending_timeout		3262378	0					
ANR	3262583	ArgumentList	command		3262378	1					
ANR	3262584	Argument	command		3262378	0					
ANR	3262585	Identifier	command		3262378	0					
ANR	3262586	Argument	buf		3262378	1					
ANR	3262587	Identifier	buf		3262378	0					
ANR	3262588	CompoundStatement		47:43:1289:1289	3262378	1					
ANR	3262589	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4349:2:116206:116254	3262378	0	True				
ANR	3262590	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3262378	0					
ANR	3262591	Callee	sprintf		3262378	0					
ANR	3262592	Identifier	sprintf		3262378	0					
ANR	3262593	ArgumentList	error_string		3262378	1					
ANR	3262594	Argument	error_string		3262378	0					
ANR	3262595	Identifier	error_string		3262378	0					
ANR	3262596	Argument	"""%s timed out"""		3262378	1					
ANR	3262597	PrimaryExpression	"""%s timed out"""		3262378	0					
ANR	3262598	Argument	command		3262378	2					
ANR	3262599	Identifier	command		3262378	0					
ANR	3262600	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4350:2:116258:116293	3262378	1	True				
ANR	3262601	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3262378	0					
ANR	3262602	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4354:1:116353:116386	3262378	12	True				
ANR	3262603	Identifier	GAHPCLIENT_COMMAND_PENDING		3262378	0					
ANR	3262604	ReturnType	int		3262378	1					
ANR	3262605	Identifier	GahpClient :: blah_job_cancel		3262378	2					
ANR	3262606	ParameterList	const char * job_id		3262378	3					
ANR	3262607	Parameter	const char * job_id	4300:28:114860:114877	3262378	0	True				
ANR	3262608	ParameterType	const char *		3262378	0					
ANR	3262609	Identifier	job_id		3262378	1					
ANR	3262610	CFGEntryNode	ENTRY		3262378		True				
ANR	3262611	CFGExitNode	EXIT		3262378		True				
ANR	3262612	Symbol	server -> m_commands_supported		3262378						
ANR	3262613	Symbol	server		3262378						
ANR	3262614	Symbol	escapeGahpString		3262378						
ANR	3262615	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262378						
ANR	3262616	Symbol	* server		3262378						
ANR	3262617	Symbol	reqline . c_str		3262378						
ANR	3262618	Symbol	results_only		3262378						
ANR	3262619	Symbol	result -> argv		3262378						
ANR	3262620	Symbol	* server -> m_commands_supported		3262378						
ANR	3262621	Symbol	sprintf		3262378						
ANR	3262622	Symbol	result		3262378						
ANR	3262623	Symbol	* result		3262378						
ANR	3262624	Symbol	server -> m_commands_supported -> contains_anycase		3262378						
ANR	3262625	Symbol	GAHPCLIENT_COMMAND_PENDING		3262378						
ANR	3262626	Symbol	reqline		3262378						
ANR	3262627	Symbol	m_mode		3262378						
ANR	3262628	Symbol	strcasecmp		3262378						
ANR	3262629	Symbol	* result -> argv		3262378						
ANR	3262630	Symbol	atoi		3262378						
ANR	3262631	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3262378						
ANR	3262632	Symbol	* * result		3262378						
ANR	3262633	Symbol	NULLSTRING		3262378						
ANR	3262634	Symbol	command		3262378						
ANR	3262635	Symbol	get_pending_result		3262378						
ANR	3262636	Symbol	rc		3262378						
ANR	3262637	Symbol	error_string		3262378						
ANR	3262638	Symbol	buf		3262378						
ANR	3262639	Symbol	job_id		3262378						
ANR	3262640	Symbol	x		3262378						
ANR	3262641	Symbol	result -> argc		3262378						
ANR	3262642	Symbol	FALSE		3262378						
ANR	3262643	Symbol	* * server		3262378						
ANR	3262644	Symbol	check_pending_timeout		3262378						
ANR	3262645	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262378						
ANR	3262646	Symbol	is_pending		3262378						
ANR	3262647	Symbol	deleg_proxy		3262378						
ANR	3262648	Function	GahpClient :: blah_job_refresh_proxy	4357:0:116391:118110							
ANR	3262649	FunctionDef	"GahpClient :: blah_job_refresh_proxy (const char * job_id , const char * proxy_file)"		3262648	0					
ANR	3262650	CompoundStatement		4359:0:116474:118110	3262648	0					
ANR	3262651	Statement	static	4360:1:116477:116482	3262648	0	True				
ANR	3262652	IdentifierDeclStatement	"const char * command = ""BLAH_JOB_REFRESH_PROXY"" ;"	4360:8:116484:116530	3262648	1	True				
ANR	3262653	IdentifierDecl	"* command = ""BLAH_JOB_REFRESH_PROXY"""		3262648	0					
ANR	3262654	IdentifierDeclType	const char *		3262648	0					
ANR	3262655	Identifier	command		3262648	1					
ANR	3262656	AssignmentExpression	"* command = ""BLAH_JOB_REFRESH_PROXY"""		3262648	2		=			
ANR	3262657	Identifier	command		3262648	0					
ANR	3262658	PrimaryExpression	"""BLAH_JOB_REFRESH_PROXY"""		3262648	1					
ANR	3262659	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3262648	2					
ANR	3262660	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4363:6:116579:116640	3262648	0	True				
ANR	3262661	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3262648	0		==			
ANR	3262662	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3262648	0					
ANR	3262663	Callee	server -> m_commands_supported -> contains_anycase		3262648	0					
ANR	3262664	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3262648	0					
ANR	3262665	PtrMemberAccess	server -> m_commands_supported		3262648	0					
ANR	3262666	Identifier	server		3262648	0					
ANR	3262667	Identifier	m_commands_supported		3262648	1					
ANR	3262668	Identifier	contains_anycase		3262648	1					
ANR	3262669	ArgumentList	command		3262648	1					
ANR	3262670	Argument	command		3262648	0					
ANR	3262671	Identifier	command		3262648	0					
ANR	3262672	Identifier	FALSE		3262648	1					
ANR	3262673	CompoundStatement		5:70:168:168	3262648	1					
ANR	3262674	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4364:2:116647:116686	3262648	0	True				
ANR	3262675	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262648	0					
ANR	3262676	IfStatement	if ( ! job_id )		3262648	3					
ANR	3262677	Condition	! job_id	4368:5:116724:116730	3262648	0	True				
ANR	3262678	UnaryOperationExpression	! job_id		3262648	0					
ANR	3262679	UnaryOperator	!		3262648	0					
ANR	3262680	Identifier	job_id		3262648	1					
ANR	3262681	ExpressionStatement	job_id = NULLSTRING	4368:14:116733:116750	3262648	1	True				
ANR	3262682	AssignmentExpression	job_id = NULLSTRING		3262648	0		=			
ANR	3262683	Identifier	job_id		3262648	0					
ANR	3262684	Identifier	NULLSTRING		3262648	1					
ANR	3262685	IdentifierDeclStatement	std :: string reqline ;	4369:1:116753:116772	3262648	4	True				
ANR	3262686	IdentifierDecl	reqline		3262648	0					
ANR	3262687	IdentifierDeclType	std :: string		3262648	0					
ANR	3262688	Identifier	reqline		3262648	1					
ANR	3262689	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( job_id ) ) ;	4370:1:116775:116822	3262648	5	True				
ANR	3262690	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( job_id ) )		3262648	0					
ANR	3262691	IdentifierDeclType	char *		3262648	0					
ANR	3262692	Identifier	esc1		3262648	1					
ANR	3262693	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( job_id ) )		3262648	2		=			
ANR	3262694	Identifier	esc1		3262648	0					
ANR	3262695	CallExpression	strdup ( escapeGahpString ( job_id ) )		3262648	1					
ANR	3262696	Callee	strdup		3262648	0					
ANR	3262697	Identifier	strdup		3262648	0					
ANR	3262698	ArgumentList	escapeGahpString ( job_id )		3262648	1					
ANR	3262699	Argument	escapeGahpString ( job_id )		3262648	0					
ANR	3262700	CallExpression	escapeGahpString ( job_id )		3262648	0					
ANR	3262701	Callee	escapeGahpString		3262648	0					
ANR	3262702	Identifier	escapeGahpString		3262648	0					
ANR	3262703	ArgumentList	job_id		3262648	1					
ANR	3262704	Argument	job_id		3262648	0					
ANR	3262705	Identifier	job_id		3262648	0					
ANR	3262706	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( proxy_file ) ) ;	4371:1:116825:116876	3262648	6	True				
ANR	3262707	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( proxy_file ) )		3262648	0					
ANR	3262708	IdentifierDeclType	char *		3262648	0					
ANR	3262709	Identifier	esc2		3262648	1					
ANR	3262710	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( proxy_file ) )		3262648	2		=			
ANR	3262711	Identifier	esc2		3262648	0					
ANR	3262712	CallExpression	strdup ( escapeGahpString ( proxy_file ) )		3262648	1					
ANR	3262713	Callee	strdup		3262648	0					
ANR	3262714	Identifier	strdup		3262648	0					
ANR	3262715	ArgumentList	escapeGahpString ( proxy_file )		3262648	1					
ANR	3262716	Argument	escapeGahpString ( proxy_file )		3262648	0					
ANR	3262717	CallExpression	escapeGahpString ( proxy_file )		3262648	0					
ANR	3262718	Callee	escapeGahpString		3262648	0					
ANR	3262719	Identifier	escapeGahpString		3262648	0					
ANR	3262720	ArgumentList	proxy_file		3262648	1					
ANR	3262721	Argument	proxy_file		3262648	0					
ANR	3262722	Identifier	proxy_file		3262648	0					
ANR	3262723	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	4372:1:116879:116926	3262648	7	True				
ANR	3262724	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3262648	0					
ANR	3262725	IdentifierDeclType	int		3262648	0					
ANR	3262726	Identifier	x		3262648	1					
ANR	3262727	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3262648	2		=			
ANR	3262728	Identifier	x		3262648	0					
ANR	3262729	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3262648	1					
ANR	3262730	Callee	sprintf		3262648	0					
ANR	3262731	Identifier	sprintf		3262648	0					
ANR	3262732	ArgumentList	reqline		3262648	1					
ANR	3262733	Argument	reqline		3262648	0					
ANR	3262734	Identifier	reqline		3262648	0					
ANR	3262735	Argument	"""%s %s"""		3262648	1					
ANR	3262736	PrimaryExpression	"""%s %s"""		3262648	0					
ANR	3262737	Argument	esc1		3262648	2					
ANR	3262738	Identifier	esc1		3262648	0					
ANR	3262739	Argument	esc2		3262648	3					
ANR	3262740	Identifier	esc2		3262648	0					
ANR	3262741	ExpressionStatement	free ( esc1 )	4373:1:116929:116941	3262648	8	True				
ANR	3262742	CallExpression	free ( esc1 )		3262648	0					
ANR	3262743	Callee	free		3262648	0					
ANR	3262744	Identifier	free		3262648	0					
ANR	3262745	ArgumentList	esc1		3262648	1					
ANR	3262746	Argument	esc1		3262648	0					
ANR	3262747	Identifier	esc1		3262648	0					
ANR	3262748	ExpressionStatement	free ( esc2 )	4374:1:116944:116956	3262648	9	True				
ANR	3262749	CallExpression	free ( esc2 )		3262648	0					
ANR	3262750	Callee	free		3262648	0					
ANR	3262751	Identifier	free		3262648	0					
ANR	3262752	ArgumentList	esc2		3262648	1					
ANR	3262753	Argument	esc2		3262648	0					
ANR	3262754	Identifier	esc2		3262648	0					
ANR	3262755	ExpressionStatement	ASSERT ( x > 0 )	4375:1:116959:116974	3262648	10	True				
ANR	3262756	CallExpression	ASSERT ( x > 0 )		3262648	0					
ANR	3262757	Callee	ASSERT		3262648	0					
ANR	3262758	Identifier	ASSERT		3262648	0					
ANR	3262759	ArgumentList	x > 0		3262648	1					
ANR	3262760	Argument	x > 0		3262648	0					
ANR	3262761	RelationalExpression	x > 0		3262648	0		>			
ANR	3262762	Identifier	x		3262648	0					
ANR	3262763	PrimaryExpression	0		3262648	1					
ANR	3262764	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4376:1:116977:117010	3262648	11	True				
ANR	3262765	IdentifierDecl	* buf = reqline . c_str ( )		3262648	0					
ANR	3262766	IdentifierDeclType	const char *		3262648	0					
ANR	3262767	Identifier	buf		3262648	1					
ANR	3262768	AssignmentExpression	* buf = reqline . c_str ( )		3262648	2		=			
ANR	3262769	Identifier	buf		3262648	0					
ANR	3262770	CallExpression	reqline . c_str ( )		3262648	1					
ANR	3262771	Callee	reqline . c_str		3262648	0					
ANR	3262772	MemberAccess	reqline . c_str		3262648	0					
ANR	3262773	Identifier	reqline		3262648	0					
ANR	3262774	Identifier	c_str		3262648	1					
ANR	3262775	ArgumentList			3262648	1					
ANR	3262776	IfStatement	"if ( ! is_pending ( command , buf ) )"		3262648	12					
ANR	3262777	Condition	"! is_pending ( command , buf )"	4380:6:117111:117134	3262648	0	True				
ANR	3262778	UnaryOperationExpression	"! is_pending ( command , buf )"		3262648	0					
ANR	3262779	UnaryOperator	!		3262648	0					
ANR	3262780	CallExpression	"is_pending ( command , buf )"		3262648	1					
ANR	3262781	Callee	is_pending		3262648	0					
ANR	3262782	Identifier	is_pending		3262648	0					
ANR	3262783	ArgumentList	command		3262648	1					
ANR	3262784	Argument	command		3262648	0					
ANR	3262785	Identifier	command		3262648	0					
ANR	3262786	Argument	buf		3262648	1					
ANR	3262787	Identifier	buf		3262648	0					
ANR	3262788	CompoundStatement		22:33:663:663	3262648	1					
ANR	3262789	IfStatement	if ( m_mode == results_only )		3262648	0					
ANR	3262790	Condition	m_mode == results_only	4383:7:117243:117264	3262648	0	True				
ANR	3262791	EqualityExpression	m_mode == results_only		3262648	0		==			
ANR	3262792	Identifier	m_mode		3262648	0					
ANR	3262793	Identifier	results_only		3262648	1					
ANR	3262794	CompoundStatement		25:32:793:793	3262648	1					
ANR	3262795	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4384:3:117273:117312	3262648	0	True				
ANR	3262796	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262648	0					
ANR	3262797	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4386:2:117320:117356	3262648	1	True				
ANR	3262798	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3262648	0					
ANR	3262799	Callee	now_pending		3262648	0					
ANR	3262800	Identifier	now_pending		3262648	0					
ANR	3262801	ArgumentList	command		3262648	1					
ANR	3262802	Argument	command		3262648	0					
ANR	3262803	Identifier	command		3262648	0					
ANR	3262804	Argument	buf		3262648	1					
ANR	3262805	Identifier	buf		3262648	0					
ANR	3262806	Argument	deleg_proxy		3262648	2					
ANR	3262807	Identifier	deleg_proxy		3262648	0					
ANR	3262808	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4392:1:117450:117501	3262648	13	True				
ANR	3262809	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3262648	0					
ANR	3262810	IdentifierDeclType	Gahp_Args *		3262648	0					
ANR	3262811	Identifier	result		3262648	1					
ANR	3262812	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3262648	2		=			
ANR	3262813	Identifier	result		3262648	0					
ANR	3262814	CallExpression	"get_pending_result ( command , buf )"		3262648	1					
ANR	3262815	Callee	get_pending_result		3262648	0					
ANR	3262816	Identifier	get_pending_result		3262648	0					
ANR	3262817	ArgumentList	command		3262648	1					
ANR	3262818	Argument	command		3262648	0					
ANR	3262819	Identifier	command		3262648	0					
ANR	3262820	Argument	buf		3262648	1					
ANR	3262821	Identifier	buf		3262648	0					
ANR	3262822	IfStatement	if ( result )		3262648	14					
ANR	3262823	Condition	result	4393:6:117509:117514	3262648	0	True				
ANR	3262824	Identifier	result		3262648	0					
ANR	3262825	CompoundStatement		40:2:1138:1170	3262648	1					
ANR	3262826	IfStatement	if ( result -> argc != 3 )		3262648	0					
ANR	3262827	Condition	result -> argc != 3	4395:6:117550:117566	3262648	0	True				
ANR	3262828	EqualityExpression	result -> argc != 3		3262648	0		!=			
ANR	3262829	PtrMemberAccess	result -> argc		3262648	0					
ANR	3262830	Identifier	result		3262648	0					
ANR	3262831	Identifier	argc		3262648	1					
ANR	3262832	PrimaryExpression	3		3262648	1					
ANR	3262833	CompoundStatement		37:25:1094:1094	3262648	1					
ANR	3262834	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4396:3:117574:117605	3262648	0	True				
ANR	3262835	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3262648	0					
ANR	3262836	Callee	EXCEPT		3262648	0					
ANR	3262837	Identifier	EXCEPT		3262648	0					
ANR	3262838	ArgumentList	"""Bad %s Result"""		3262648	1					
ANR	3262839	Argument	"""Bad %s Result"""		3262648	0					
ANR	3262840	PrimaryExpression	"""Bad %s Result"""		3262648	0					
ANR	3262841	Argument	command		3262648	1					
ANR	3262842	Identifier	command		3262648	0					
ANR	3262843	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4398:2:117613:117645	3262648	1	True				
ANR	3262844	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3262648	0					
ANR	3262845	IdentifierDeclType	int		3262648	0					
ANR	3262846	Identifier	rc		3262648	1					
ANR	3262847	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3262648	2		=			
ANR	3262848	Identifier	rc		3262648	0					
ANR	3262849	CallExpression	atoi ( result -> argv [ 1 ] )		3262648	1					
ANR	3262850	Callee	atoi		3262648	0					
ANR	3262851	Identifier	atoi		3262648	0					
ANR	3262852	ArgumentList	result -> argv [ 1 ]		3262648	1					
ANR	3262853	Argument	result -> argv [ 1 ]		3262648	0					
ANR	3262854	ArrayIndexing	result -> argv [ 1 ]		3262648	0					
ANR	3262855	PtrMemberAccess	result -> argv		3262648	0					
ANR	3262856	Identifier	result		3262648	0					
ANR	3262857	Identifier	argv		3262648	1					
ANR	3262858	PrimaryExpression	1		3262648	1					
ANR	3262859	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3262648	2					
ANR	3262860	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4399:7:117654:117692	3262648	0	True				
ANR	3262861	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3262648	0					
ANR	3262862	Callee	strcasecmp		3262648	0					
ANR	3262863	Identifier	strcasecmp		3262648	0					
ANR	3262864	ArgumentList	result -> argv [ 2 ]		3262648	1					
ANR	3262865	Argument	result -> argv [ 2 ]		3262648	0					
ANR	3262866	ArrayIndexing	result -> argv [ 2 ]		3262648	0					
ANR	3262867	PtrMemberAccess	result -> argv		3262648	0					
ANR	3262868	Identifier	result		3262648	0					
ANR	3262869	Identifier	argv		3262648	1					
ANR	3262870	PrimaryExpression	2		3262648	1					
ANR	3262871	Argument	NULLSTRING		3262648	1					
ANR	3262872	Identifier	NULLSTRING		3262648	0					
ANR	3262873	CompoundStatement		41:49:1221:1221	3262648	1					
ANR	3262874	ExpressionStatement	error_string = result -> argv [ 2 ]	4400:3:117701:117731	3262648	0	True				
ANR	3262875	AssignmentExpression	error_string = result -> argv [ 2 ]		3262648	0		=			
ANR	3262876	Identifier	error_string		3262648	0					
ANR	3262877	ArrayIndexing	result -> argv [ 2 ]		3262648	1					
ANR	3262878	PtrMemberAccess	result -> argv		3262648	0					
ANR	3262879	Identifier	result		3262648	0					
ANR	3262880	Identifier	argv		3262648	1					
ANR	3262881	PrimaryExpression	2		3262648	1					
ANR	3262882	ElseStatement	else		3262648	0					
ANR	3262883	CompoundStatement		43:9:1267:1267	3262648	0					
ANR	3262884	ExpressionStatement	"error_string = """""	4402:3:117747:117764	3262648	0	True				
ANR	3262885	AssignmentExpression	"error_string = """""		3262648	0		=			
ANR	3262886	Identifier	error_string		3262648	0					
ANR	3262887	PrimaryExpression	""""""		3262648	1					
ANR	3262888	Statement	delete	4404:2:117772:117777	3262648	3	True				
ANR	3262889	ExpressionStatement	result	4404:9:117779:117785	3262648	4	True				
ANR	3262890	Identifier	result		3262648	0					
ANR	3262891	ReturnStatement	return rc ;	4405:2:117789:117798	3262648	5	True				
ANR	3262892	Identifier	rc		3262648	0					
ANR	3262893	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3262648	15					
ANR	3262894	Condition	"check_pending_timeout ( command , buf )"	4409:6:117855:117888	3262648	0	True				
ANR	3262895	CallExpression	"check_pending_timeout ( command , buf )"		3262648	0					
ANR	3262896	Callee	check_pending_timeout		3262648	0					
ANR	3262897	Identifier	check_pending_timeout		3262648	0					
ANR	3262898	ArgumentList	command		3262648	1					
ANR	3262899	Argument	command		3262648	0					
ANR	3262900	Identifier	command		3262648	0					
ANR	3262901	Argument	buf		3262648	1					
ANR	3262902	Identifier	buf		3262648	0					
ANR	3262903	CompoundStatement		51:43:1417:1417	3262648	1					
ANR	3262904	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4411:2:117928:117976	3262648	0	True				
ANR	3262905	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3262648	0					
ANR	3262906	Callee	sprintf		3262648	0					
ANR	3262907	Identifier	sprintf		3262648	0					
ANR	3262908	ArgumentList	error_string		3262648	1					
ANR	3262909	Argument	error_string		3262648	0					
ANR	3262910	Identifier	error_string		3262648	0					
ANR	3262911	Argument	"""%s timed out"""		3262648	1					
ANR	3262912	PrimaryExpression	"""%s timed out"""		3262648	0					
ANR	3262913	Argument	command		3262648	2					
ANR	3262914	Identifier	command		3262648	0					
ANR	3262915	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4412:2:117980:118015	3262648	1	True				
ANR	3262916	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3262648	0					
ANR	3262917	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4416:1:118075:118108	3262648	16	True				
ANR	3262918	Identifier	GAHPCLIENT_COMMAND_PENDING		3262648	0					
ANR	3262919	ReturnType	int		3262648	1					
ANR	3262920	Identifier	GahpClient :: blah_job_refresh_proxy		3262648	2					
ANR	3262921	ParameterList	"const char * job_id , const char * proxy_file"		3262648	3					
ANR	3262922	Parameter	const char * job_id	4358:35:116430:116447	3262648	0	True				
ANR	3262923	ParameterType	const char *		3262648	0					
ANR	3262924	Identifier	job_id		3262648	1					
ANR	3262925	Parameter	const char * proxy_file	4358:55:116450:116471	3262648	1	True				
ANR	3262926	ParameterType	const char *		3262648	0					
ANR	3262927	Identifier	proxy_file		3262648	1					
ANR	3262928	CFGEntryNode	ENTRY		3262648		True				
ANR	3262929	CFGExitNode	EXIT		3262648		True				
ANR	3262930	Symbol	server -> m_commands_supported		3262648						
ANR	3262931	Symbol	server		3262648						
ANR	3262932	Symbol	escapeGahpString		3262648						
ANR	3262933	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262648						
ANR	3262934	Symbol	* server		3262648						
ANR	3262935	Symbol	reqline . c_str		3262648						
ANR	3262936	Symbol	results_only		3262648						
ANR	3262937	Symbol	result -> argv		3262648						
ANR	3262938	Symbol	* server -> m_commands_supported		3262648						
ANR	3262939	Symbol	sprintf		3262648						
ANR	3262940	Symbol	result		3262648						
ANR	3262941	Symbol	* result		3262648						
ANR	3262942	Symbol	server -> m_commands_supported -> contains_anycase		3262648						
ANR	3262943	Symbol	GAHPCLIENT_COMMAND_PENDING		3262648						
ANR	3262944	Symbol	reqline		3262648						
ANR	3262945	Symbol	m_mode		3262648						
ANR	3262946	Symbol	strcasecmp		3262648						
ANR	3262947	Symbol	* result -> argv		3262648						
ANR	3262948	Symbol	atoi		3262648						
ANR	3262949	Symbol	proxy_file		3262648						
ANR	3262950	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3262648						
ANR	3262951	Symbol	* * result		3262648						
ANR	3262952	Symbol	NULLSTRING		3262648						
ANR	3262953	Symbol	command		3262648						
ANR	3262954	Symbol	get_pending_result		3262648						
ANR	3262955	Symbol	rc		3262648						
ANR	3262956	Symbol	error_string		3262648						
ANR	3262957	Symbol	esc2		3262648						
ANR	3262958	Symbol	buf		3262648						
ANR	3262959	Symbol	esc1		3262648						
ANR	3262960	Symbol	job_id		3262648						
ANR	3262961	Symbol	x		3262648						
ANR	3262962	Symbol	result -> argc		3262648						
ANR	3262963	Symbol	FALSE		3262648						
ANR	3262964	Symbol	* * server		3262648						
ANR	3262965	Symbol	strdup		3262648						
ANR	3262966	Symbol	check_pending_timeout		3262648						
ANR	3262967	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262648						
ANR	3262968	Symbol	is_pending		3262648						
ANR	3262969	Symbol	deleg_proxy		3262648						
ANR	3262970	Function	GahpClient :: nordugrid_submit	4419:0:118113:119953							
ANR	3262971	FunctionDef	"GahpClient :: nordugrid_submit (const char * hostname , const char * rsl , char * & job_id)"		3262970	0					
ANR	3262972	CompoundStatement		4422:0:118208:119953	3262970	0					
ANR	3262973	Statement	static	4423:1:118211:118216	3262970	0	True				
ANR	3262974	IdentifierDeclStatement	"const char * command = ""NORDUGRID_SUBMIT"" ;"	4423:8:118218:118258	3262970	1	True				
ANR	3262975	IdentifierDecl	"* command = ""NORDUGRID_SUBMIT"""		3262970	0					
ANR	3262976	IdentifierDeclType	const char *		3262970	0					
ANR	3262977	Identifier	command		3262970	1					
ANR	3262978	AssignmentExpression	"* command = ""NORDUGRID_SUBMIT"""		3262970	2		=			
ANR	3262979	Identifier	command		3262970	0					
ANR	3262980	PrimaryExpression	"""NORDUGRID_SUBMIT"""		3262970	1					
ANR	3262981	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3262970	2					
ANR	3262982	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4426:6:118307:118368	3262970	0	True				
ANR	3262983	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3262970	0		==			
ANR	3262984	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3262970	0					
ANR	3262985	Callee	server -> m_commands_supported -> contains_anycase		3262970	0					
ANR	3262986	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3262970	0					
ANR	3262987	PtrMemberAccess	server -> m_commands_supported		3262970	0					
ANR	3262988	Identifier	server		3262970	0					
ANR	3262989	Identifier	m_commands_supported		3262970	1					
ANR	3262990	Identifier	contains_anycase		3262970	1					
ANR	3262991	ArgumentList	command		3262970	1					
ANR	3262992	Argument	command		3262970	0					
ANR	3262993	Identifier	command		3262970	0					
ANR	3262994	Identifier	FALSE		3262970	1					
ANR	3262995	CompoundStatement		5:70:162:162	3262970	1					
ANR	3262996	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4427:2:118375:118414	3262970	0	True				
ANR	3262997	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262970	0					
ANR	3262998	IfStatement	if ( ! hostname )		3262970	3					
ANR	3262999	Condition	! hostname	4431:5:118452:118460	3262970	0	True				
ANR	3263000	UnaryOperationExpression	! hostname		3262970	0					
ANR	3263001	UnaryOperator	!		3262970	0					
ANR	3263002	Identifier	hostname		3262970	1					
ANR	3263003	ExpressionStatement	hostname = NULLSTRING	4431:16:118463:118482	3262970	1	True				
ANR	3263004	AssignmentExpression	hostname = NULLSTRING		3262970	0		=			
ANR	3263005	Identifier	hostname		3262970	0					
ANR	3263006	Identifier	NULLSTRING		3262970	1					
ANR	3263007	IfStatement	if ( ! rsl )		3262970	4					
ANR	3263008	Condition	! rsl	4432:5:118489:118492	3262970	0	True				
ANR	3263009	UnaryOperationExpression	! rsl		3262970	0					
ANR	3263010	UnaryOperator	!		3262970	0					
ANR	3263011	Identifier	rsl		3262970	1					
ANR	3263012	ExpressionStatement	rsl = NULLSTRING	4432:11:118495:118509	3262970	1	True				
ANR	3263013	AssignmentExpression	rsl = NULLSTRING		3262970	0		=			
ANR	3263014	Identifier	rsl		3262970	0					
ANR	3263015	Identifier	NULLSTRING		3262970	1					
ANR	3263016	IdentifierDeclStatement	std :: string reqline ;	4433:1:118512:118531	3262970	5	True				
ANR	3263017	IdentifierDecl	reqline		3262970	0					
ANR	3263018	IdentifierDeclType	std :: string		3262970	0					
ANR	3263019	Identifier	reqline		3262970	1					
ANR	3263020	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4434:1:118534:118583	3262970	6	True				
ANR	3263021	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3262970	0					
ANR	3263022	IdentifierDeclType	char *		3262970	0					
ANR	3263023	Identifier	esc1		3262970	1					
ANR	3263024	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3262970	2		=			
ANR	3263025	Identifier	esc1		3262970	0					
ANR	3263026	CallExpression	strdup ( escapeGahpString ( hostname ) )		3262970	1					
ANR	3263027	Callee	strdup		3262970	0					
ANR	3263028	Identifier	strdup		3262970	0					
ANR	3263029	ArgumentList	escapeGahpString ( hostname )		3262970	1					
ANR	3263030	Argument	escapeGahpString ( hostname )		3262970	0					
ANR	3263031	CallExpression	escapeGahpString ( hostname )		3262970	0					
ANR	3263032	Callee	escapeGahpString		3262970	0					
ANR	3263033	Identifier	escapeGahpString		3262970	0					
ANR	3263034	ArgumentList	hostname		3262970	1					
ANR	3263035	Argument	hostname		3262970	0					
ANR	3263036	Identifier	hostname		3262970	0					
ANR	3263037	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( rsl ) ) ;	4435:1:118586:118630	3262970	7	True				
ANR	3263038	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( rsl ) )		3262970	0					
ANR	3263039	IdentifierDeclType	char *		3262970	0					
ANR	3263040	Identifier	esc2		3262970	1					
ANR	3263041	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( rsl ) )		3262970	2		=			
ANR	3263042	Identifier	esc2		3262970	0					
ANR	3263043	CallExpression	strdup ( escapeGahpString ( rsl ) )		3262970	1					
ANR	3263044	Callee	strdup		3262970	0					
ANR	3263045	Identifier	strdup		3262970	0					
ANR	3263046	ArgumentList	escapeGahpString ( rsl )		3262970	1					
ANR	3263047	Argument	escapeGahpString ( rsl )		3262970	0					
ANR	3263048	CallExpression	escapeGahpString ( rsl )		3262970	0					
ANR	3263049	Callee	escapeGahpString		3262970	0					
ANR	3263050	Identifier	escapeGahpString		3262970	0					
ANR	3263051	ArgumentList	rsl		3262970	1					
ANR	3263052	Argument	rsl		3262970	0					
ANR	3263053	Identifier	rsl		3262970	0					
ANR	3263054	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	4436:1:118633:118679	3262970	8	True				
ANR	3263055	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3262970	0					
ANR	3263056	IdentifierDeclType	int		3262970	0					
ANR	3263057	Identifier	x		3262970	1					
ANR	3263058	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3262970	2		=			
ANR	3263059	Identifier	x		3262970	0					
ANR	3263060	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3262970	1					
ANR	3263061	Callee	sprintf		3262970	0					
ANR	3263062	Identifier	sprintf		3262970	0					
ANR	3263063	ArgumentList	reqline		3262970	1					
ANR	3263064	Argument	reqline		3262970	0					
ANR	3263065	Identifier	reqline		3262970	0					
ANR	3263066	Argument	"""%s %s"""		3262970	1					
ANR	3263067	PrimaryExpression	"""%s %s"""		3262970	0					
ANR	3263068	Argument	esc1		3262970	2					
ANR	3263069	Identifier	esc1		3262970	0					
ANR	3263070	Argument	esc2		3262970	3					
ANR	3263071	Identifier	esc2		3262970	0					
ANR	3263072	ExpressionStatement	free ( esc1 )	4437:1:118682:118694	3262970	9	True				
ANR	3263073	CallExpression	free ( esc1 )		3262970	0					
ANR	3263074	Callee	free		3262970	0					
ANR	3263075	Identifier	free		3262970	0					
ANR	3263076	ArgumentList	esc1		3262970	1					
ANR	3263077	Argument	esc1		3262970	0					
ANR	3263078	Identifier	esc1		3262970	0					
ANR	3263079	ExpressionStatement	free ( esc2 )	4438:1:118697:118709	3262970	10	True				
ANR	3263080	CallExpression	free ( esc2 )		3262970	0					
ANR	3263081	Callee	free		3262970	0					
ANR	3263082	Identifier	free		3262970	0					
ANR	3263083	ArgumentList	esc2		3262970	1					
ANR	3263084	Argument	esc2		3262970	0					
ANR	3263085	Identifier	esc2		3262970	0					
ANR	3263086	ExpressionStatement	ASSERT ( x > 0 )	4439:1:118712:118727	3262970	11	True				
ANR	3263087	CallExpression	ASSERT ( x > 0 )		3262970	0					
ANR	3263088	Callee	ASSERT		3262970	0					
ANR	3263089	Identifier	ASSERT		3262970	0					
ANR	3263090	ArgumentList	x > 0		3262970	1					
ANR	3263091	Argument	x > 0		3262970	0					
ANR	3263092	RelationalExpression	x > 0		3262970	0		>			
ANR	3263093	Identifier	x		3262970	0					
ANR	3263094	PrimaryExpression	0		3262970	1					
ANR	3263095	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4440:1:118730:118763	3262970	12	True				
ANR	3263096	IdentifierDecl	* buf = reqline . c_str ( )		3262970	0					
ANR	3263097	IdentifierDeclType	const char *		3262970	0					
ANR	3263098	Identifier	buf		3262970	1					
ANR	3263099	AssignmentExpression	* buf = reqline . c_str ( )		3262970	2		=			
ANR	3263100	Identifier	buf		3262970	0					
ANR	3263101	CallExpression	reqline . c_str ( )		3262970	1					
ANR	3263102	Callee	reqline . c_str		3262970	0					
ANR	3263103	MemberAccess	reqline . c_str		3262970	0					
ANR	3263104	Identifier	reqline		3262970	0					
ANR	3263105	Identifier	c_str		3262970	1					
ANR	3263106	ArgumentList			3262970	1					
ANR	3263107	IfStatement	"if ( ! is_pending ( command , buf ) )"		3262970	13					
ANR	3263108	Condition	"! is_pending ( command , buf )"	4444:6:118864:118887	3262970	0	True				
ANR	3263109	UnaryOperationExpression	"! is_pending ( command , buf )"		3262970	0					
ANR	3263110	UnaryOperator	!		3262970	0					
ANR	3263111	CallExpression	"is_pending ( command , buf )"		3262970	1					
ANR	3263112	Callee	is_pending		3262970	0					
ANR	3263113	Identifier	is_pending		3262970	0					
ANR	3263114	ArgumentList	command		3262970	1					
ANR	3263115	Argument	command		3262970	0					
ANR	3263116	Identifier	command		3262970	0					
ANR	3263117	Argument	buf		3262970	1					
ANR	3263118	Identifier	buf		3262970	0					
ANR	3263119	CompoundStatement		23:33:682:682	3262970	1					
ANR	3263120	IfStatement	if ( m_mode == results_only )		3262970	0					
ANR	3263121	Condition	m_mode == results_only	4447:7:118996:119017	3262970	0	True				
ANR	3263122	EqualityExpression	m_mode == results_only		3262970	0		==			
ANR	3263123	Identifier	m_mode		3262970	0					
ANR	3263124	Identifier	results_only		3262970	1					
ANR	3263125	CompoundStatement		26:32:812:812	3262970	1					
ANR	3263126	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4448:3:119026:119065	3262970	0	True				
ANR	3263127	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262970	0					
ANR	3263128	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4450:2:119073:119109	3262970	1	True				
ANR	3263129	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3262970	0					
ANR	3263130	Callee	now_pending		3262970	0					
ANR	3263131	Identifier	now_pending		3262970	0					
ANR	3263132	ArgumentList	command		3262970	1					
ANR	3263133	Argument	command		3262970	0					
ANR	3263134	Identifier	command		3262970	0					
ANR	3263135	Argument	buf		3262970	1					
ANR	3263136	Identifier	buf		3262970	0					
ANR	3263137	Argument	deleg_proxy		3262970	2					
ANR	3263138	Identifier	deleg_proxy		3262970	0					
ANR	3263139	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4456:1:119203:119254	3262970	14	True				
ANR	3263140	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3262970	0					
ANR	3263141	IdentifierDeclType	Gahp_Args *		3262970	0					
ANR	3263142	Identifier	result		3262970	1					
ANR	3263143	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3262970	2		=			
ANR	3263144	Identifier	result		3262970	0					
ANR	3263145	CallExpression	"get_pending_result ( command , buf )"		3262970	1					
ANR	3263146	Callee	get_pending_result		3262970	0					
ANR	3263147	Identifier	get_pending_result		3262970	0					
ANR	3263148	ArgumentList	command		3262970	1					
ANR	3263149	Argument	command		3262970	0					
ANR	3263150	Identifier	command		3262970	0					
ANR	3263151	Argument	buf		3262970	1					
ANR	3263152	Identifier	buf		3262970	0					
ANR	3263153	IfStatement	if ( result )		3262970	15					
ANR	3263154	Condition	result	4457:6:119262:119267	3262970	0	True				
ANR	3263155	Identifier	result		3262970	0					
ANR	3263156	CompoundStatement		41:2:1157:1187	3262970	1					
ANR	3263157	IfStatement	if ( result -> argc != 4 )		3262970	0					
ANR	3263158	Condition	result -> argc != 4	4459:6:119303:119319	3262970	0	True				
ANR	3263159	EqualityExpression	result -> argc != 4		3262970	0		!=			
ANR	3263160	PtrMemberAccess	result -> argc		3262970	0					
ANR	3263161	Identifier	result		3262970	0					
ANR	3263162	Identifier	argc		3262970	1					
ANR	3263163	PrimaryExpression	4		3262970	1					
ANR	3263164	CompoundStatement		38:25:1113:1113	3262970	1					
ANR	3263165	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4460:3:119327:119358	3262970	0	True				
ANR	3263166	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3262970	0					
ANR	3263167	Callee	EXCEPT		3262970	0					
ANR	3263168	Identifier	EXCEPT		3262970	0					
ANR	3263169	ArgumentList	"""Bad %s Result"""		3262970	1					
ANR	3263170	Argument	"""Bad %s Result"""		3262970	0					
ANR	3263171	PrimaryExpression	"""Bad %s Result"""		3262970	0					
ANR	3263172	Argument	command		3262970	1					
ANR	3263173	Identifier	command		3262970	0					
ANR	3263174	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4462:2:119366:119396	3262970	1	True				
ANR	3263175	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3262970	0					
ANR	3263176	IdentifierDeclType	int		3262970	0					
ANR	3263177	Identifier	rc		3262970	1					
ANR	3263178	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3262970	2		=			
ANR	3263179	Identifier	rc		3262970	0					
ANR	3263180	CallExpression	atoi ( result -> argv [ 1 ] )		3262970	1					
ANR	3263181	Callee	atoi		3262970	0					
ANR	3263182	Identifier	atoi		3262970	0					
ANR	3263183	ArgumentList	result -> argv [ 1 ]		3262970	1					
ANR	3263184	Argument	result -> argv [ 1 ]		3262970	0					
ANR	3263185	ArrayIndexing	result -> argv [ 1 ]		3262970	0					
ANR	3263186	PtrMemberAccess	result -> argv		3262970	0					
ANR	3263187	Identifier	result		3262970	0					
ANR	3263188	Identifier	argv		3262970	1					
ANR	3263189	PrimaryExpression	1		3262970	1					
ANR	3263190	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3262970	2					
ANR	3263191	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4463:7:119405:119443	3262970	0	True				
ANR	3263192	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3262970	0					
ANR	3263193	Callee	strcasecmp		3262970	0					
ANR	3263194	Identifier	strcasecmp		3262970	0					
ANR	3263195	ArgumentList	result -> argv [ 2 ]		3262970	1					
ANR	3263196	Argument	result -> argv [ 2 ]		3262970	0					
ANR	3263197	ArrayIndexing	result -> argv [ 2 ]		3262970	0					
ANR	3263198	PtrMemberAccess	result -> argv		3262970	0					
ANR	3263199	Identifier	result		3262970	0					
ANR	3263200	Identifier	argv		3262970	1					
ANR	3263201	PrimaryExpression	2		3262970	1					
ANR	3263202	Argument	NULLSTRING		3262970	1					
ANR	3263203	Identifier	NULLSTRING		3262970	0					
ANR	3263204	CompoundStatement		42:49:1238:1238	3262970	1					
ANR	3263205	ExpressionStatement	job_id = strdup ( result -> argv [ 2 ] )	4464:3:119452:119484	3262970	0	True				
ANR	3263206	AssignmentExpression	job_id = strdup ( result -> argv [ 2 ] )		3262970	0		=			
ANR	3263207	Identifier	job_id		3262970	0					
ANR	3263208	CallExpression	strdup ( result -> argv [ 2 ] )		3262970	1					
ANR	3263209	Callee	strdup		3262970	0					
ANR	3263210	Identifier	strdup		3262970	0					
ANR	3263211	ArgumentList	result -> argv [ 2 ]		3262970	1					
ANR	3263212	Argument	result -> argv [ 2 ]		3262970	0					
ANR	3263213	ArrayIndexing	result -> argv [ 2 ]		3262970	0					
ANR	3263214	PtrMemberAccess	result -> argv		3262970	0					
ANR	3263215	Identifier	result		3262970	0					
ANR	3263216	Identifier	argv		3262970	1					
ANR	3263217	PrimaryExpression	2		3262970	1					
ANR	3263218	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3262970	3					
ANR	3263219	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	4466:7:119497:119535	3262970	0	True				
ANR	3263220	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3262970	0					
ANR	3263221	Callee	strcasecmp		3262970	0					
ANR	3263222	Identifier	strcasecmp		3262970	0					
ANR	3263223	ArgumentList	result -> argv [ 3 ]		3262970	1					
ANR	3263224	Argument	result -> argv [ 3 ]		3262970	0					
ANR	3263225	ArrayIndexing	result -> argv [ 3 ]		3262970	0					
ANR	3263226	PtrMemberAccess	result -> argv		3262970	0					
ANR	3263227	Identifier	result		3262970	0					
ANR	3263228	Identifier	argv		3262970	1					
ANR	3263229	PrimaryExpression	3		3262970	1					
ANR	3263230	Argument	NULLSTRING		3262970	1					
ANR	3263231	Identifier	NULLSTRING		3262970	0					
ANR	3263232	CompoundStatement		45:49:1330:1330	3262970	1					
ANR	3263233	ExpressionStatement	error_string = result -> argv [ 3 ]	4467:3:119544:119574	3262970	0	True				
ANR	3263234	AssignmentExpression	error_string = result -> argv [ 3 ]		3262970	0		=			
ANR	3263235	Identifier	error_string		3262970	0					
ANR	3263236	ArrayIndexing	result -> argv [ 3 ]		3262970	1					
ANR	3263237	PtrMemberAccess	result -> argv		3262970	0					
ANR	3263238	Identifier	result		3262970	0					
ANR	3263239	Identifier	argv		3262970	1					
ANR	3263240	PrimaryExpression	3		3262970	1					
ANR	3263241	ElseStatement	else		3262970	0					
ANR	3263242	CompoundStatement		47:9:1376:1376	3262970	0					
ANR	3263243	ExpressionStatement	"error_string = """""	4469:3:119590:119607	3262970	0	True				
ANR	3263244	AssignmentExpression	"error_string = """""		3262970	0		=			
ANR	3263245	Identifier	error_string		3262970	0					
ANR	3263246	PrimaryExpression	""""""		3262970	1					
ANR	3263247	Statement	delete	4471:2:119615:119620	3262970	4	True				
ANR	3263248	ExpressionStatement	result	4471:9:119622:119628	3262970	5	True				
ANR	3263249	Identifier	result		3262970	0					
ANR	3263250	ReturnStatement	return rc ;	4472:2:119632:119641	3262970	6	True				
ANR	3263251	Identifier	rc		3262970	0					
ANR	3263252	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3262970	16					
ANR	3263253	Condition	"check_pending_timeout ( command , buf )"	4476:6:119698:119731	3262970	0	True				
ANR	3263254	CallExpression	"check_pending_timeout ( command , buf )"		3262970	0					
ANR	3263255	Callee	check_pending_timeout		3262970	0					
ANR	3263256	Identifier	check_pending_timeout		3262970	0					
ANR	3263257	ArgumentList	command		3262970	1					
ANR	3263258	Argument	command		3262970	0					
ANR	3263259	Identifier	command		3262970	0					
ANR	3263260	Argument	buf		3262970	1					
ANR	3263261	Identifier	buf		3262970	0					
ANR	3263262	CompoundStatement		55:43:1526:1526	3262970	1					
ANR	3263263	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4478:2:119771:119819	3262970	0	True				
ANR	3263264	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3262970	0					
ANR	3263265	Callee	sprintf		3262970	0					
ANR	3263266	Identifier	sprintf		3262970	0					
ANR	3263267	ArgumentList	error_string		3262970	1					
ANR	3263268	Argument	error_string		3262970	0					
ANR	3263269	Identifier	error_string		3262970	0					
ANR	3263270	Argument	"""%s timed out"""		3262970	1					
ANR	3263271	PrimaryExpression	"""%s timed out"""		3262970	0					
ANR	3263272	Argument	command		3262970	2					
ANR	3263273	Identifier	command		3262970	0					
ANR	3263274	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4479:2:119823:119858	3262970	1	True				
ANR	3263275	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3262970	0					
ANR	3263276	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4483:1:119918:119951	3262970	17	True				
ANR	3263277	Identifier	GAHPCLIENT_COMMAND_PENDING		3262970	0					
ANR	3263278	ReturnType	int		3262970	1					
ANR	3263279	Identifier	GahpClient :: nordugrid_submit		3262970	2					
ANR	3263280	ParameterList	"const char * hostname , const char * rsl , char * & job_id"		3262970	3					
ANR	3263281	Parameter	const char * hostname	4420:29:118146:118165	3262970	0	True				
ANR	3263282	ParameterType	const char *		3262970	0					
ANR	3263283	Identifier	hostname		3262970	1					
ANR	3263284	Parameter	const char * rsl	4420:51:118168:118182	3262970	1	True				
ANR	3263285	ParameterType	const char *		3262970	0					
ANR	3263286	Identifier	rsl		3262970	1					
ANR	3263287	Parameter	char * & job_id	4421:8:118193:118205	3262970	2	True				
ANR	3263288	ParameterType	char * &		3262970	0					
ANR	3263289	Identifier	job_id		3262970	1					
ANR	3263290	CFGEntryNode	ENTRY		3262970		True				
ANR	3263291	CFGExitNode	EXIT		3262970		True				
ANR	3263292	Symbol	server -> m_commands_supported		3262970						
ANR	3263293	Symbol	server		3262970						
ANR	3263294	Symbol	escapeGahpString		3262970						
ANR	3263295	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3262970						
ANR	3263296	Symbol	* server		3262970						
ANR	3263297	Symbol	rsl		3262970						
ANR	3263298	Symbol	reqline . c_str		3262970						
ANR	3263299	Symbol	results_only		3262970						
ANR	3263300	Symbol	result -> argv		3262970						
ANR	3263301	Symbol	* server -> m_commands_supported		3262970						
ANR	3263302	Symbol	sprintf		3262970						
ANR	3263303	Symbol	result		3262970						
ANR	3263304	Symbol	hostname		3262970						
ANR	3263305	Symbol	* result		3262970						
ANR	3263306	Symbol	server -> m_commands_supported -> contains_anycase		3262970						
ANR	3263307	Symbol	GAHPCLIENT_COMMAND_PENDING		3262970						
ANR	3263308	Symbol	reqline		3262970						
ANR	3263309	Symbol	m_mode		3262970						
ANR	3263310	Symbol	strcasecmp		3262970						
ANR	3263311	Symbol	* result -> argv		3262970						
ANR	3263312	Symbol	atoi		3262970						
ANR	3263313	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3262970						
ANR	3263314	Symbol	* * result		3262970						
ANR	3263315	Symbol	NULLSTRING		3262970						
ANR	3263316	Symbol	command		3262970						
ANR	3263317	Symbol	get_pending_result		3262970						
ANR	3263318	Symbol	rc		3262970						
ANR	3263319	Symbol	error_string		3262970						
ANR	3263320	Symbol	esc2		3262970						
ANR	3263321	Symbol	buf		3262970						
ANR	3263322	Symbol	esc1		3262970						
ANR	3263323	Symbol	job_id		3262970						
ANR	3263324	Symbol	x		3262970						
ANR	3263325	Symbol	result -> argc		3262970						
ANR	3263326	Symbol	* * server		3262970						
ANR	3263327	Symbol	FALSE		3262970						
ANR	3263328	Symbol	strdup		3262970						
ANR	3263329	Symbol	check_pending_timeout		3262970						
ANR	3263330	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3262970						
ANR	3263331	Symbol	is_pending		3262970						
ANR	3263332	Symbol	deleg_proxy		3262970						
ANR	3263333	Function	GahpClient :: nordugrid_status	4486:0:119956:121807							
ANR	3263334	FunctionDef	"GahpClient :: nordugrid_status (const char * hostname , const char * job_id , char * & status)"		3263333	0					
ANR	3263335	CompoundStatement		4489:0:120054:121807	3263333	0					
ANR	3263336	Statement	static	4490:1:120057:120062	3263333	0	True				
ANR	3263337	IdentifierDeclStatement	"const char * command = ""NORDUGRID_STATUS"" ;"	4490:8:120064:120104	3263333	1	True				
ANR	3263338	IdentifierDecl	"* command = ""NORDUGRID_STATUS"""		3263333	0					
ANR	3263339	IdentifierDeclType	const char *		3263333	0					
ANR	3263340	Identifier	command		3263333	1					
ANR	3263341	AssignmentExpression	"* command = ""NORDUGRID_STATUS"""		3263333	2		=			
ANR	3263342	Identifier	command		3263333	0					
ANR	3263343	PrimaryExpression	"""NORDUGRID_STATUS"""		3263333	1					
ANR	3263344	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3263333	2					
ANR	3263345	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4493:6:120153:120214	3263333	0	True				
ANR	3263346	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3263333	0		==			
ANR	3263347	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3263333	0					
ANR	3263348	Callee	server -> m_commands_supported -> contains_anycase		3263333	0					
ANR	3263349	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3263333	0					
ANR	3263350	PtrMemberAccess	server -> m_commands_supported		3263333	0					
ANR	3263351	Identifier	server		3263333	0					
ANR	3263352	Identifier	m_commands_supported		3263333	1					
ANR	3263353	Identifier	contains_anycase		3263333	1					
ANR	3263354	ArgumentList	command		3263333	1					
ANR	3263355	Argument	command		3263333	0					
ANR	3263356	Identifier	command		3263333	0					
ANR	3263357	Identifier	FALSE		3263333	1					
ANR	3263358	CompoundStatement		5:70:162:162	3263333	1					
ANR	3263359	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4494:2:120221:120260	3263333	0	True				
ANR	3263360	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3263333	0					
ANR	3263361	IfStatement	if ( ! hostname )		3263333	3					
ANR	3263362	Condition	! hostname	4498:5:120298:120306	3263333	0	True				
ANR	3263363	UnaryOperationExpression	! hostname		3263333	0					
ANR	3263364	UnaryOperator	!		3263333	0					
ANR	3263365	Identifier	hostname		3263333	1					
ANR	3263366	ExpressionStatement	hostname = NULLSTRING	4498:16:120309:120328	3263333	1	True				
ANR	3263367	AssignmentExpression	hostname = NULLSTRING		3263333	0		=			
ANR	3263368	Identifier	hostname		3263333	0					
ANR	3263369	Identifier	NULLSTRING		3263333	1					
ANR	3263370	IfStatement	if ( ! job_id )		3263333	4					
ANR	3263371	Condition	! job_id	4499:5:120335:120341	3263333	0	True				
ANR	3263372	UnaryOperationExpression	! job_id		3263333	0					
ANR	3263373	UnaryOperator	!		3263333	0					
ANR	3263374	Identifier	job_id		3263333	1					
ANR	3263375	ExpressionStatement	job_id = NULLSTRING	4499:14:120344:120361	3263333	1	True				
ANR	3263376	AssignmentExpression	job_id = NULLSTRING		3263333	0		=			
ANR	3263377	Identifier	job_id		3263333	0					
ANR	3263378	Identifier	NULLSTRING		3263333	1					
ANR	3263379	IdentifierDeclStatement	std :: string reqline ;	4500:1:120364:120383	3263333	5	True				
ANR	3263380	IdentifierDecl	reqline		3263333	0					
ANR	3263381	IdentifierDeclType	std :: string		3263333	0					
ANR	3263382	Identifier	reqline		3263333	1					
ANR	3263383	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4501:1:120386:120435	3263333	6	True				
ANR	3263384	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3263333	0					
ANR	3263385	IdentifierDeclType	char *		3263333	0					
ANR	3263386	Identifier	esc1		3263333	1					
ANR	3263387	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3263333	2		=			
ANR	3263388	Identifier	esc1		3263333	0					
ANR	3263389	CallExpression	strdup ( escapeGahpString ( hostname ) )		3263333	1					
ANR	3263390	Callee	strdup		3263333	0					
ANR	3263391	Identifier	strdup		3263333	0					
ANR	3263392	ArgumentList	escapeGahpString ( hostname )		3263333	1					
ANR	3263393	Argument	escapeGahpString ( hostname )		3263333	0					
ANR	3263394	CallExpression	escapeGahpString ( hostname )		3263333	0					
ANR	3263395	Callee	escapeGahpString		3263333	0					
ANR	3263396	Identifier	escapeGahpString		3263333	0					
ANR	3263397	ArgumentList	hostname		3263333	1					
ANR	3263398	Argument	hostname		3263333	0					
ANR	3263399	Identifier	hostname		3263333	0					
ANR	3263400	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	4502:1:120438:120485	3263333	7	True				
ANR	3263401	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3263333	0					
ANR	3263402	IdentifierDeclType	char *		3263333	0					
ANR	3263403	Identifier	esc2		3263333	1					
ANR	3263404	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3263333	2		=			
ANR	3263405	Identifier	esc2		3263333	0					
ANR	3263406	CallExpression	strdup ( escapeGahpString ( job_id ) )		3263333	1					
ANR	3263407	Callee	strdup		3263333	0					
ANR	3263408	Identifier	strdup		3263333	0					
ANR	3263409	ArgumentList	escapeGahpString ( job_id )		3263333	1					
ANR	3263410	Argument	escapeGahpString ( job_id )		3263333	0					
ANR	3263411	CallExpression	escapeGahpString ( job_id )		3263333	0					
ANR	3263412	Callee	escapeGahpString		3263333	0					
ANR	3263413	Identifier	escapeGahpString		3263333	0					
ANR	3263414	ArgumentList	job_id		3263333	1					
ANR	3263415	Argument	job_id		3263333	0					
ANR	3263416	Identifier	job_id		3263333	0					
ANR	3263417	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	4503:1:120488:120533	3263333	8	True				
ANR	3263418	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3263333	0					
ANR	3263419	IdentifierDeclType	int		3263333	0					
ANR	3263420	Identifier	x		3263333	1					
ANR	3263421	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3263333	2		=			
ANR	3263422	Identifier	x		3263333	0					
ANR	3263423	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3263333	1					
ANR	3263424	Callee	sprintf		3263333	0					
ANR	3263425	Identifier	sprintf		3263333	0					
ANR	3263426	ArgumentList	reqline		3263333	1					
ANR	3263427	Argument	reqline		3263333	0					
ANR	3263428	Identifier	reqline		3263333	0					
ANR	3263429	Argument	"""%s %s"""		3263333	1					
ANR	3263430	PrimaryExpression	"""%s %s"""		3263333	0					
ANR	3263431	Argument	esc1		3263333	2					
ANR	3263432	Identifier	esc1		3263333	0					
ANR	3263433	Argument	esc2		3263333	3					
ANR	3263434	Identifier	esc2		3263333	0					
ANR	3263435	ExpressionStatement	free ( esc1 )	4504:1:120536:120548	3263333	9	True				
ANR	3263436	CallExpression	free ( esc1 )		3263333	0					
ANR	3263437	Callee	free		3263333	0					
ANR	3263438	Identifier	free		3263333	0					
ANR	3263439	ArgumentList	esc1		3263333	1					
ANR	3263440	Argument	esc1		3263333	0					
ANR	3263441	Identifier	esc1		3263333	0					
ANR	3263442	ExpressionStatement	free ( esc2 )	4505:1:120551:120563	3263333	10	True				
ANR	3263443	CallExpression	free ( esc2 )		3263333	0					
ANR	3263444	Callee	free		3263333	0					
ANR	3263445	Identifier	free		3263333	0					
ANR	3263446	ArgumentList	esc2		3263333	1					
ANR	3263447	Argument	esc2		3263333	0					
ANR	3263448	Identifier	esc2		3263333	0					
ANR	3263449	ExpressionStatement	ASSERT ( x > 0 )	4506:1:120566:120581	3263333	11	True				
ANR	3263450	CallExpression	ASSERT ( x > 0 )		3263333	0					
ANR	3263451	Callee	ASSERT		3263333	0					
ANR	3263452	Identifier	ASSERT		3263333	0					
ANR	3263453	ArgumentList	x > 0		3263333	1					
ANR	3263454	Argument	x > 0		3263333	0					
ANR	3263455	RelationalExpression	x > 0		3263333	0		>			
ANR	3263456	Identifier	x		3263333	0					
ANR	3263457	PrimaryExpression	0		3263333	1					
ANR	3263458	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4507:1:120584:120617	3263333	12	True				
ANR	3263459	IdentifierDecl	* buf = reqline . c_str ( )		3263333	0					
ANR	3263460	IdentifierDeclType	const char *		3263333	0					
ANR	3263461	Identifier	buf		3263333	1					
ANR	3263462	AssignmentExpression	* buf = reqline . c_str ( )		3263333	2		=			
ANR	3263463	Identifier	buf		3263333	0					
ANR	3263464	CallExpression	reqline . c_str ( )		3263333	1					
ANR	3263465	Callee	reqline . c_str		3263333	0					
ANR	3263466	MemberAccess	reqline . c_str		3263333	0					
ANR	3263467	Identifier	reqline		3263333	0					
ANR	3263468	Identifier	c_str		3263333	1					
ANR	3263469	ArgumentList			3263333	1					
ANR	3263470	IfStatement	"if ( ! is_pending ( command , buf ) )"		3263333	13					
ANR	3263471	Condition	"! is_pending ( command , buf )"	4511:6:120718:120741	3263333	0	True				
ANR	3263472	UnaryOperationExpression	"! is_pending ( command , buf )"		3263333	0					
ANR	3263473	UnaryOperator	!		3263333	0					
ANR	3263474	CallExpression	"is_pending ( command , buf )"		3263333	1					
ANR	3263475	Callee	is_pending		3263333	0					
ANR	3263476	Identifier	is_pending		3263333	0					
ANR	3263477	ArgumentList	command		3263333	1					
ANR	3263478	Argument	command		3263333	0					
ANR	3263479	Identifier	command		3263333	0					
ANR	3263480	Argument	buf		3263333	1					
ANR	3263481	Identifier	buf		3263333	0					
ANR	3263482	CompoundStatement		23:33:690:690	3263333	1					
ANR	3263483	IfStatement	if ( m_mode == results_only )		3263333	0					
ANR	3263484	Condition	m_mode == results_only	4514:7:120850:120871	3263333	0	True				
ANR	3263485	EqualityExpression	m_mode == results_only		3263333	0		==			
ANR	3263486	Identifier	m_mode		3263333	0					
ANR	3263487	Identifier	results_only		3263333	1					
ANR	3263488	CompoundStatement		26:32:820:820	3263333	1					
ANR	3263489	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4515:3:120880:120919	3263333	0	True				
ANR	3263490	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3263333	0					
ANR	3263491	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4517:2:120927:120963	3263333	1	True				
ANR	3263492	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3263333	0					
ANR	3263493	Callee	now_pending		3263333	0					
ANR	3263494	Identifier	now_pending		3263333	0					
ANR	3263495	ArgumentList	command		3263333	1					
ANR	3263496	Argument	command		3263333	0					
ANR	3263497	Identifier	command		3263333	0					
ANR	3263498	Argument	buf		3263333	1					
ANR	3263499	Identifier	buf		3263333	0					
ANR	3263500	Argument	deleg_proxy		3263333	2					
ANR	3263501	Identifier	deleg_proxy		3263333	0					
ANR	3263502	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4523:1:121057:121108	3263333	14	True				
ANR	3263503	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3263333	0					
ANR	3263504	IdentifierDeclType	Gahp_Args *		3263333	0					
ANR	3263505	Identifier	result		3263333	1					
ANR	3263506	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3263333	2		=			
ANR	3263507	Identifier	result		3263333	0					
ANR	3263508	CallExpression	"get_pending_result ( command , buf )"		3263333	1					
ANR	3263509	Callee	get_pending_result		3263333	0					
ANR	3263510	Identifier	get_pending_result		3263333	0					
ANR	3263511	ArgumentList	command		3263333	1					
ANR	3263512	Argument	command		3263333	0					
ANR	3263513	Identifier	command		3263333	0					
ANR	3263514	Argument	buf		3263333	1					
ANR	3263515	Identifier	buf		3263333	0					
ANR	3263516	IfStatement	if ( result )		3263333	15					
ANR	3263517	Condition	result	4524:6:121116:121121	3263333	0	True				
ANR	3263518	Identifier	result		3263333	0					
ANR	3263519	CompoundStatement		41:2:1165:1195	3263333	1					
ANR	3263520	IfStatement	if ( result -> argc != 4 )		3263333	0					
ANR	3263521	Condition	result -> argc != 4	4526:6:121157:121173	3263333	0	True				
ANR	3263522	EqualityExpression	result -> argc != 4		3263333	0		!=			
ANR	3263523	PtrMemberAccess	result -> argc		3263333	0					
ANR	3263524	Identifier	result		3263333	0					
ANR	3263525	Identifier	argc		3263333	1					
ANR	3263526	PrimaryExpression	4		3263333	1					
ANR	3263527	CompoundStatement		38:25:1121:1121	3263333	1					
ANR	3263528	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4527:3:121181:121212	3263333	0	True				
ANR	3263529	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3263333	0					
ANR	3263530	Callee	EXCEPT		3263333	0					
ANR	3263531	Identifier	EXCEPT		3263333	0					
ANR	3263532	ArgumentList	"""Bad %s Result"""		3263333	1					
ANR	3263533	Argument	"""Bad %s Result"""		3263333	0					
ANR	3263534	PrimaryExpression	"""Bad %s Result"""		3263333	0					
ANR	3263535	Argument	command		3263333	1					
ANR	3263536	Identifier	command		3263333	0					
ANR	3263537	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4529:2:121220:121250	3263333	1	True				
ANR	3263538	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3263333	0					
ANR	3263539	IdentifierDeclType	int		3263333	0					
ANR	3263540	Identifier	rc		3263333	1					
ANR	3263541	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3263333	2		=			
ANR	3263542	Identifier	rc		3263333	0					
ANR	3263543	CallExpression	atoi ( result -> argv [ 1 ] )		3263333	1					
ANR	3263544	Callee	atoi		3263333	0					
ANR	3263545	Identifier	atoi		3263333	0					
ANR	3263546	ArgumentList	result -> argv [ 1 ]		3263333	1					
ANR	3263547	Argument	result -> argv [ 1 ]		3263333	0					
ANR	3263548	ArrayIndexing	result -> argv [ 1 ]		3263333	0					
ANR	3263549	PtrMemberAccess	result -> argv		3263333	0					
ANR	3263550	Identifier	result		3263333	0					
ANR	3263551	Identifier	argv		3263333	1					
ANR	3263552	PrimaryExpression	1		3263333	1					
ANR	3263553	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3263333	2					
ANR	3263554	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4530:7:121259:121297	3263333	0	True				
ANR	3263555	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3263333	0					
ANR	3263556	Callee	strcasecmp		3263333	0					
ANR	3263557	Identifier	strcasecmp		3263333	0					
ANR	3263558	ArgumentList	result -> argv [ 2 ]		3263333	1					
ANR	3263559	Argument	result -> argv [ 2 ]		3263333	0					
ANR	3263560	ArrayIndexing	result -> argv [ 2 ]		3263333	0					
ANR	3263561	PtrMemberAccess	result -> argv		3263333	0					
ANR	3263562	Identifier	result		3263333	0					
ANR	3263563	Identifier	argv		3263333	1					
ANR	3263564	PrimaryExpression	2		3263333	1					
ANR	3263565	Argument	NULLSTRING		3263333	1					
ANR	3263566	Identifier	NULLSTRING		3263333	0					
ANR	3263567	CompoundStatement		42:49:1246:1246	3263333	1					
ANR	3263568	ExpressionStatement	status = strdup ( result -> argv [ 2 ] )	4531:3:121306:121338	3263333	0	True				
ANR	3263569	AssignmentExpression	status = strdup ( result -> argv [ 2 ] )		3263333	0		=			
ANR	3263570	Identifier	status		3263333	0					
ANR	3263571	CallExpression	strdup ( result -> argv [ 2 ] )		3263333	1					
ANR	3263572	Callee	strdup		3263333	0					
ANR	3263573	Identifier	strdup		3263333	0					
ANR	3263574	ArgumentList	result -> argv [ 2 ]		3263333	1					
ANR	3263575	Argument	result -> argv [ 2 ]		3263333	0					
ANR	3263576	ArrayIndexing	result -> argv [ 2 ]		3263333	0					
ANR	3263577	PtrMemberAccess	result -> argv		3263333	0					
ANR	3263578	Identifier	result		3263333	0					
ANR	3263579	Identifier	argv		3263333	1					
ANR	3263580	PrimaryExpression	2		3263333	1					
ANR	3263581	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3263333	3					
ANR	3263582	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	4533:7:121351:121389	3263333	0	True				
ANR	3263583	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3263333	0					
ANR	3263584	Callee	strcasecmp		3263333	0					
ANR	3263585	Identifier	strcasecmp		3263333	0					
ANR	3263586	ArgumentList	result -> argv [ 3 ]		3263333	1					
ANR	3263587	Argument	result -> argv [ 3 ]		3263333	0					
ANR	3263588	ArrayIndexing	result -> argv [ 3 ]		3263333	0					
ANR	3263589	PtrMemberAccess	result -> argv		3263333	0					
ANR	3263590	Identifier	result		3263333	0					
ANR	3263591	Identifier	argv		3263333	1					
ANR	3263592	PrimaryExpression	3		3263333	1					
ANR	3263593	Argument	NULLSTRING		3263333	1					
ANR	3263594	Identifier	NULLSTRING		3263333	0					
ANR	3263595	CompoundStatement		45:49:1338:1338	3263333	1					
ANR	3263596	ExpressionStatement	error_string = result -> argv [ 3 ]	4534:3:121398:121428	3263333	0	True				
ANR	3263597	AssignmentExpression	error_string = result -> argv [ 3 ]		3263333	0		=			
ANR	3263598	Identifier	error_string		3263333	0					
ANR	3263599	ArrayIndexing	result -> argv [ 3 ]		3263333	1					
ANR	3263600	PtrMemberAccess	result -> argv		3263333	0					
ANR	3263601	Identifier	result		3263333	0					
ANR	3263602	Identifier	argv		3263333	1					
ANR	3263603	PrimaryExpression	3		3263333	1					
ANR	3263604	ElseStatement	else		3263333	0					
ANR	3263605	CompoundStatement		47:9:1384:1384	3263333	0					
ANR	3263606	ExpressionStatement	"error_string = """""	4536:3:121444:121461	3263333	0	True				
ANR	3263607	AssignmentExpression	"error_string = """""		3263333	0		=			
ANR	3263608	Identifier	error_string		3263333	0					
ANR	3263609	PrimaryExpression	""""""		3263333	1					
ANR	3263610	Statement	delete	4538:2:121469:121474	3263333	4	True				
ANR	3263611	ExpressionStatement	result	4538:9:121476:121482	3263333	5	True				
ANR	3263612	Identifier	result		3263333	0					
ANR	3263613	ReturnStatement	return rc ;	4539:2:121486:121495	3263333	6	True				
ANR	3263614	Identifier	rc		3263333	0					
ANR	3263615	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3263333	16					
ANR	3263616	Condition	"check_pending_timeout ( command , buf )"	4543:6:121552:121585	3263333	0	True				
ANR	3263617	CallExpression	"check_pending_timeout ( command , buf )"		3263333	0					
ANR	3263618	Callee	check_pending_timeout		3263333	0					
ANR	3263619	Identifier	check_pending_timeout		3263333	0					
ANR	3263620	ArgumentList	command		3263333	1					
ANR	3263621	Argument	command		3263333	0					
ANR	3263622	Identifier	command		3263333	0					
ANR	3263623	Argument	buf		3263333	1					
ANR	3263624	Identifier	buf		3263333	0					
ANR	3263625	CompoundStatement		55:43:1534:1534	3263333	1					
ANR	3263626	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4545:2:121625:121673	3263333	0	True				
ANR	3263627	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3263333	0					
ANR	3263628	Callee	sprintf		3263333	0					
ANR	3263629	Identifier	sprintf		3263333	0					
ANR	3263630	ArgumentList	error_string		3263333	1					
ANR	3263631	Argument	error_string		3263333	0					
ANR	3263632	Identifier	error_string		3263333	0					
ANR	3263633	Argument	"""%s timed out"""		3263333	1					
ANR	3263634	PrimaryExpression	"""%s timed out"""		3263333	0					
ANR	3263635	Argument	command		3263333	2					
ANR	3263636	Identifier	command		3263333	0					
ANR	3263637	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4546:2:121677:121712	3263333	1	True				
ANR	3263638	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3263333	0					
ANR	3263639	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4550:1:121772:121805	3263333	17	True				
ANR	3263640	Identifier	GAHPCLIENT_COMMAND_PENDING		3263333	0					
ANR	3263641	ReturnType	int		3263333	1					
ANR	3263642	Identifier	GahpClient :: nordugrid_status		3263333	2					
ANR	3263643	ParameterList	"const char * hostname , const char * job_id , char * & status"		3263333	3					
ANR	3263644	Parameter	const char * hostname	4487:29:119989:120008	3263333	0	True				
ANR	3263645	ParameterType	const char *		3263333	0					
ANR	3263646	Identifier	hostname		3263333	1					
ANR	3263647	Parameter	const char * job_id	4487:51:120011:120028	3263333	1	True				
ANR	3263648	ParameterType	const char *		3263333	0					
ANR	3263649	Identifier	job_id		3263333	1					
ANR	3263650	Parameter	char * & status	4488:8:120039:120051	3263333	2	True				
ANR	3263651	ParameterType	char * &		3263333	0					
ANR	3263652	Identifier	status		3263333	1					
ANR	3263653	CFGEntryNode	ENTRY		3263333		True				
ANR	3263654	CFGExitNode	EXIT		3263333		True				
ANR	3263655	Symbol	server		3263333						
ANR	3263656	Symbol	server -> m_commands_supported		3263333						
ANR	3263657	Symbol	escapeGahpString		3263333						
ANR	3263658	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3263333						
ANR	3263659	Symbol	* server		3263333						
ANR	3263660	Symbol	reqline . c_str		3263333						
ANR	3263661	Symbol	results_only		3263333						
ANR	3263662	Symbol	result -> argv		3263333						
ANR	3263663	Symbol	* server -> m_commands_supported		3263333						
ANR	3263664	Symbol	sprintf		3263333						
ANR	3263665	Symbol	result		3263333						
ANR	3263666	Symbol	hostname		3263333						
ANR	3263667	Symbol	* result		3263333						
ANR	3263668	Symbol	server -> m_commands_supported -> contains_anycase		3263333						
ANR	3263669	Symbol	GAHPCLIENT_COMMAND_PENDING		3263333						
ANR	3263670	Symbol	reqline		3263333						
ANR	3263671	Symbol	m_mode		3263333						
ANR	3263672	Symbol	strcasecmp		3263333						
ANR	3263673	Symbol	* result -> argv		3263333						
ANR	3263674	Symbol	atoi		3263333						
ANR	3263675	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3263333						
ANR	3263676	Symbol	* * result		3263333						
ANR	3263677	Symbol	NULLSTRING		3263333						
ANR	3263678	Symbol	command		3263333						
ANR	3263679	Symbol	get_pending_result		3263333						
ANR	3263680	Symbol	rc		3263333						
ANR	3263681	Symbol	error_string		3263333						
ANR	3263682	Symbol	esc2		3263333						
ANR	3263683	Symbol	buf		3263333						
ANR	3263684	Symbol	esc1		3263333						
ANR	3263685	Symbol	job_id		3263333						
ANR	3263686	Symbol	x		3263333						
ANR	3263687	Symbol	result -> argc		3263333						
ANR	3263688	Symbol	FALSE		3263333						
ANR	3263689	Symbol	* * server		3263333						
ANR	3263690	Symbol	strdup		3263333						
ANR	3263691	Symbol	check_pending_timeout		3263333						
ANR	3263692	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3263333						
ANR	3263693	Symbol	status		3263333						
ANR	3263694	Symbol	is_pending		3263333						
ANR	3263695	Symbol	deleg_proxy		3263333						
ANR	3263696	Function	GahpClient :: nordugrid_ldap_query	4553:0:121810:123981							
ANR	3263697	FunctionDef	"GahpClient :: nordugrid_ldap_query (const char * hostname , const char * ldap_base , const char * ldap_filter , const char * ldap_attrs , StringList & results)"		3263696	0					
ANR	3263698	CompoundStatement		4557:0:121980:123981	3263696	0					
ANR	3263699	Statement	static	4558:1:121983:121988	3263696	0	True				
ANR	3263700	IdentifierDeclStatement	"const char * command = ""NORDUGRID_LDAP_QUERY"" ;"	4558:8:121990:122034	3263696	1	True				
ANR	3263701	IdentifierDecl	"* command = ""NORDUGRID_LDAP_QUERY"""		3263696	0					
ANR	3263702	IdentifierDeclType	const char *		3263696	0					
ANR	3263703	Identifier	command		3263696	1					
ANR	3263704	AssignmentExpression	"* command = ""NORDUGRID_LDAP_QUERY"""		3263696	2		=			
ANR	3263705	Identifier	command		3263696	0					
ANR	3263706	PrimaryExpression	"""NORDUGRID_LDAP_QUERY"""		3263696	1					
ANR	3263707	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3263696	2					
ANR	3263708	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4561:6:122083:122144	3263696	0	True				
ANR	3263709	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3263696	0		==			
ANR	3263710	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3263696	0					
ANR	3263711	Callee	server -> m_commands_supported -> contains_anycase		3263696	0					
ANR	3263712	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3263696	0					
ANR	3263713	PtrMemberAccess	server -> m_commands_supported		3263696	0					
ANR	3263714	Identifier	server		3263696	0					
ANR	3263715	Identifier	m_commands_supported		3263696	1					
ANR	3263716	Identifier	contains_anycase		3263696	1					
ANR	3263717	ArgumentList	command		3263696	1					
ANR	3263718	Argument	command		3263696	0					
ANR	3263719	Identifier	command		3263696	0					
ANR	3263720	Identifier	FALSE		3263696	1					
ANR	3263721	CompoundStatement		5:70:166:166	3263696	1					
ANR	3263722	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4562:2:122151:122190	3263696	0	True				
ANR	3263723	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3263696	0					
ANR	3263724	IfStatement	if ( ! hostname )		3263696	3					
ANR	3263725	Condition	! hostname	4566:5:122228:122236	3263696	0	True				
ANR	3263726	UnaryOperationExpression	! hostname		3263696	0					
ANR	3263727	UnaryOperator	!		3263696	0					
ANR	3263728	Identifier	hostname		3263696	1					
ANR	3263729	ExpressionStatement	hostname = NULLSTRING	4566:16:122239:122258	3263696	1	True				
ANR	3263730	AssignmentExpression	hostname = NULLSTRING		3263696	0		=			
ANR	3263731	Identifier	hostname		3263696	0					
ANR	3263732	Identifier	NULLSTRING		3263696	1					
ANR	3263733	IfStatement	if ( ! ldap_base )		3263696	4					
ANR	3263734	Condition	! ldap_base	4567:5:122265:122274	3263696	0	True				
ANR	3263735	UnaryOperationExpression	! ldap_base		3263696	0					
ANR	3263736	UnaryOperator	!		3263696	0					
ANR	3263737	Identifier	ldap_base		3263696	1					
ANR	3263738	ExpressionStatement	ldap_base = NULLSTRING	4567:17:122277:122297	3263696	1	True				
ANR	3263739	AssignmentExpression	ldap_base = NULLSTRING		3263696	0		=			
ANR	3263740	Identifier	ldap_base		3263696	0					
ANR	3263741	Identifier	NULLSTRING		3263696	1					
ANR	3263742	IfStatement	if ( ! ldap_filter )		3263696	5					
ANR	3263743	Condition	! ldap_filter	4568:5:122304:122315	3263696	0	True				
ANR	3263744	UnaryOperationExpression	! ldap_filter		3263696	0					
ANR	3263745	UnaryOperator	!		3263696	0					
ANR	3263746	Identifier	ldap_filter		3263696	1					
ANR	3263747	ExpressionStatement	ldap_filter = NULLSTRING	4568:19:122318:122340	3263696	1	True				
ANR	3263748	AssignmentExpression	ldap_filter = NULLSTRING		3263696	0		=			
ANR	3263749	Identifier	ldap_filter		3263696	0					
ANR	3263750	Identifier	NULLSTRING		3263696	1					
ANR	3263751	IfStatement	if ( ! ldap_attrs )		3263696	6					
ANR	3263752	Condition	! ldap_attrs	4569:5:122347:122357	3263696	0	True				
ANR	3263753	UnaryOperationExpression	! ldap_attrs		3263696	0					
ANR	3263754	UnaryOperator	!		3263696	0					
ANR	3263755	Identifier	ldap_attrs		3263696	1					
ANR	3263756	ExpressionStatement	ldap_attrs = NULLSTRING	4569:18:122360:122381	3263696	1	True				
ANR	3263757	AssignmentExpression	ldap_attrs = NULLSTRING		3263696	0		=			
ANR	3263758	Identifier	ldap_attrs		3263696	0					
ANR	3263759	Identifier	NULLSTRING		3263696	1					
ANR	3263760	IdentifierDeclStatement	std :: string reqline ;	4570:1:122384:122403	3263696	7	True				
ANR	3263761	IdentifierDecl	reqline		3263696	0					
ANR	3263762	IdentifierDeclType	std :: string		3263696	0					
ANR	3263763	Identifier	reqline		3263696	1					
ANR	3263764	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4571:1:122406:122455	3263696	8	True				
ANR	3263765	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3263696	0					
ANR	3263766	IdentifierDeclType	char *		3263696	0					
ANR	3263767	Identifier	esc1		3263696	1					
ANR	3263768	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3263696	2		=			
ANR	3263769	Identifier	esc1		3263696	0					
ANR	3263770	CallExpression	strdup ( escapeGahpString ( hostname ) )		3263696	1					
ANR	3263771	Callee	strdup		3263696	0					
ANR	3263772	Identifier	strdup		3263696	0					
ANR	3263773	ArgumentList	escapeGahpString ( hostname )		3263696	1					
ANR	3263774	Argument	escapeGahpString ( hostname )		3263696	0					
ANR	3263775	CallExpression	escapeGahpString ( hostname )		3263696	0					
ANR	3263776	Callee	escapeGahpString		3263696	0					
ANR	3263777	Identifier	escapeGahpString		3263696	0					
ANR	3263778	ArgumentList	hostname		3263696	1					
ANR	3263779	Argument	hostname		3263696	0					
ANR	3263780	Identifier	hostname		3263696	0					
ANR	3263781	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( ldap_base ) ) ;	4572:1:122458:122508	3263696	9	True				
ANR	3263782	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( ldap_base ) )		3263696	0					
ANR	3263783	IdentifierDeclType	char *		3263696	0					
ANR	3263784	Identifier	esc2		3263696	1					
ANR	3263785	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( ldap_base ) )		3263696	2		=			
ANR	3263786	Identifier	esc2		3263696	0					
ANR	3263787	CallExpression	strdup ( escapeGahpString ( ldap_base ) )		3263696	1					
ANR	3263788	Callee	strdup		3263696	0					
ANR	3263789	Identifier	strdup		3263696	0					
ANR	3263790	ArgumentList	escapeGahpString ( ldap_base )		3263696	1					
ANR	3263791	Argument	escapeGahpString ( ldap_base )		3263696	0					
ANR	3263792	CallExpression	escapeGahpString ( ldap_base )		3263696	0					
ANR	3263793	Callee	escapeGahpString		3263696	0					
ANR	3263794	Identifier	escapeGahpString		3263696	0					
ANR	3263795	ArgumentList	ldap_base		3263696	1					
ANR	3263796	Argument	ldap_base		3263696	0					
ANR	3263797	Identifier	ldap_base		3263696	0					
ANR	3263798	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( ldap_filter ) ) ;	4573:1:122511:122563	3263696	10	True				
ANR	3263799	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( ldap_filter ) )		3263696	0					
ANR	3263800	IdentifierDeclType	char *		3263696	0					
ANR	3263801	Identifier	esc3		3263696	1					
ANR	3263802	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( ldap_filter ) )		3263696	2		=			
ANR	3263803	Identifier	esc3		3263696	0					
ANR	3263804	CallExpression	strdup ( escapeGahpString ( ldap_filter ) )		3263696	1					
ANR	3263805	Callee	strdup		3263696	0					
ANR	3263806	Identifier	strdup		3263696	0					
ANR	3263807	ArgumentList	escapeGahpString ( ldap_filter )		3263696	1					
ANR	3263808	Argument	escapeGahpString ( ldap_filter )		3263696	0					
ANR	3263809	CallExpression	escapeGahpString ( ldap_filter )		3263696	0					
ANR	3263810	Callee	escapeGahpString		3263696	0					
ANR	3263811	Identifier	escapeGahpString		3263696	0					
ANR	3263812	ArgumentList	ldap_filter		3263696	1					
ANR	3263813	Argument	ldap_filter		3263696	0					
ANR	3263814	Identifier	ldap_filter		3263696	0					
ANR	3263815	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( ldap_attrs ) ) ;	4574:1:122566:122617	3263696	11	True				
ANR	3263816	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( ldap_attrs ) )		3263696	0					
ANR	3263817	IdentifierDeclType	char *		3263696	0					
ANR	3263818	Identifier	esc4		3263696	1					
ANR	3263819	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( ldap_attrs ) )		3263696	2		=			
ANR	3263820	Identifier	esc4		3263696	0					
ANR	3263821	CallExpression	strdup ( escapeGahpString ( ldap_attrs ) )		3263696	1					
ANR	3263822	Callee	strdup		3263696	0					
ANR	3263823	Identifier	strdup		3263696	0					
ANR	3263824	ArgumentList	escapeGahpString ( ldap_attrs )		3263696	1					
ANR	3263825	Argument	escapeGahpString ( ldap_attrs )		3263696	0					
ANR	3263826	CallExpression	escapeGahpString ( ldap_attrs )		3263696	0					
ANR	3263827	Callee	escapeGahpString		3263696	0					
ANR	3263828	Identifier	escapeGahpString		3263696	0					
ANR	3263829	ArgumentList	ldap_attrs		3263696	1					
ANR	3263830	Argument	ldap_attrs		3263696	0					
ANR	3263831	Identifier	ldap_attrs		3263696	0					
ANR	3263832	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 ) ;"	4575:1:122620:122683	3263696	12	True				
ANR	3263833	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3263696	0					
ANR	3263834	IdentifierDeclType	int		3263696	0					
ANR	3263835	Identifier	x		3263696	1					
ANR	3263836	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3263696	2		=			
ANR	3263837	Identifier	x		3263696	0					
ANR	3263838	CallExpression	"sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3263696	1					
ANR	3263839	Callee	sprintf		3263696	0					
ANR	3263840	Identifier	sprintf		3263696	0					
ANR	3263841	ArgumentList	reqline		3263696	1					
ANR	3263842	Argument	reqline		3263696	0					
ANR	3263843	Identifier	reqline		3263696	0					
ANR	3263844	Argument	"""%s %s %s %s"""		3263696	1					
ANR	3263845	PrimaryExpression	"""%s %s %s %s"""		3263696	0					
ANR	3263846	Argument	esc1		3263696	2					
ANR	3263847	Identifier	esc1		3263696	0					
ANR	3263848	Argument	esc2		3263696	3					
ANR	3263849	Identifier	esc2		3263696	0					
ANR	3263850	Argument	esc3		3263696	4					
ANR	3263851	Identifier	esc3		3263696	0					
ANR	3263852	Argument	esc4		3263696	5					
ANR	3263853	Identifier	esc4		3263696	0					
ANR	3263854	ExpressionStatement	free ( esc1 )	4576:1:122686:122698	3263696	13	True				
ANR	3263855	CallExpression	free ( esc1 )		3263696	0					
ANR	3263856	Callee	free		3263696	0					
ANR	3263857	Identifier	free		3263696	0					
ANR	3263858	ArgumentList	esc1		3263696	1					
ANR	3263859	Argument	esc1		3263696	0					
ANR	3263860	Identifier	esc1		3263696	0					
ANR	3263861	ExpressionStatement	free ( esc2 )	4577:1:122701:122713	3263696	14	True				
ANR	3263862	CallExpression	free ( esc2 )		3263696	0					
ANR	3263863	Callee	free		3263696	0					
ANR	3263864	Identifier	free		3263696	0					
ANR	3263865	ArgumentList	esc2		3263696	1					
ANR	3263866	Argument	esc2		3263696	0					
ANR	3263867	Identifier	esc2		3263696	0					
ANR	3263868	ExpressionStatement	free ( esc3 )	4578:1:122716:122728	3263696	15	True				
ANR	3263869	CallExpression	free ( esc3 )		3263696	0					
ANR	3263870	Callee	free		3263696	0					
ANR	3263871	Identifier	free		3263696	0					
ANR	3263872	ArgumentList	esc3		3263696	1					
ANR	3263873	Argument	esc3		3263696	0					
ANR	3263874	Identifier	esc3		3263696	0					
ANR	3263875	ExpressionStatement	free ( esc4 )	4579:1:122731:122743	3263696	16	True				
ANR	3263876	CallExpression	free ( esc4 )		3263696	0					
ANR	3263877	Callee	free		3263696	0					
ANR	3263878	Identifier	free		3263696	0					
ANR	3263879	ArgumentList	esc4		3263696	1					
ANR	3263880	Argument	esc4		3263696	0					
ANR	3263881	Identifier	esc4		3263696	0					
ANR	3263882	ExpressionStatement	ASSERT ( x > 0 )	4580:1:122746:122761	3263696	17	True				
ANR	3263883	CallExpression	ASSERT ( x > 0 )		3263696	0					
ANR	3263884	Callee	ASSERT		3263696	0					
ANR	3263885	Identifier	ASSERT		3263696	0					
ANR	3263886	ArgumentList	x > 0		3263696	1					
ANR	3263887	Argument	x > 0		3263696	0					
ANR	3263888	RelationalExpression	x > 0		3263696	0		>			
ANR	3263889	Identifier	x		3263696	0					
ANR	3263890	PrimaryExpression	0		3263696	1					
ANR	3263891	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4581:1:122764:122797	3263696	18	True				
ANR	3263892	IdentifierDecl	* buf = reqline . c_str ( )		3263696	0					
ANR	3263893	IdentifierDeclType	const char *		3263696	0					
ANR	3263894	Identifier	buf		3263696	1					
ANR	3263895	AssignmentExpression	* buf = reqline . c_str ( )		3263696	2		=			
ANR	3263896	Identifier	buf		3263696	0					
ANR	3263897	CallExpression	reqline . c_str ( )		3263696	1					
ANR	3263898	Callee	reqline . c_str		3263696	0					
ANR	3263899	MemberAccess	reqline . c_str		3263696	0					
ANR	3263900	Identifier	reqline		3263696	0					
ANR	3263901	Identifier	c_str		3263696	1					
ANR	3263902	ArgumentList			3263696	1					
ANR	3263903	IfStatement	"if ( ! is_pending ( command , buf ) )"		3263696	19					
ANR	3263904	Condition	"! is_pending ( command , buf )"	4585:6:122898:122921	3263696	0	True				
ANR	3263905	UnaryOperationExpression	"! is_pending ( command , buf )"		3263696	0					
ANR	3263906	UnaryOperator	!		3263696	0					
ANR	3263907	CallExpression	"is_pending ( command , buf )"		3263696	1					
ANR	3263908	Callee	is_pending		3263696	0					
ANR	3263909	Identifier	is_pending		3263696	0					
ANR	3263910	ArgumentList	command		3263696	1					
ANR	3263911	Argument	command		3263696	0					
ANR	3263912	Identifier	command		3263696	0					
ANR	3263913	Argument	buf		3263696	1					
ANR	3263914	Identifier	buf		3263696	0					
ANR	3263915	CompoundStatement		29:33:944:944	3263696	1					
ANR	3263916	IfStatement	if ( m_mode == results_only )		3263696	0					
ANR	3263917	Condition	m_mode == results_only	4588:7:123030:123051	3263696	0	True				
ANR	3263918	EqualityExpression	m_mode == results_only		3263696	0		==			
ANR	3263919	Identifier	m_mode		3263696	0					
ANR	3263920	Identifier	results_only		3263696	1					
ANR	3263921	CompoundStatement		32:32:1074:1074	3263696	1					
ANR	3263922	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4589:3:123060:123099	3263696	0	True				
ANR	3263923	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3263696	0					
ANR	3263924	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4591:2:123107:123143	3263696	1	True				
ANR	3263925	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3263696	0					
ANR	3263926	Callee	now_pending		3263696	0					
ANR	3263927	Identifier	now_pending		3263696	0					
ANR	3263928	ArgumentList	command		3263696	1					
ANR	3263929	Argument	command		3263696	0					
ANR	3263930	Identifier	command		3263696	0					
ANR	3263931	Argument	buf		3263696	1					
ANR	3263932	Identifier	buf		3263696	0					
ANR	3263933	Argument	deleg_proxy		3263696	2					
ANR	3263934	Identifier	deleg_proxy		3263696	0					
ANR	3263935	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4597:1:123237:123288	3263696	20	True				
ANR	3263936	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3263696	0					
ANR	3263937	IdentifierDeclType	Gahp_Args *		3263696	0					
ANR	3263938	Identifier	result		3263696	1					
ANR	3263939	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3263696	2		=			
ANR	3263940	Identifier	result		3263696	0					
ANR	3263941	CallExpression	"get_pending_result ( command , buf )"		3263696	1					
ANR	3263942	Callee	get_pending_result		3263696	0					
ANR	3263943	Identifier	get_pending_result		3263696	0					
ANR	3263944	ArgumentList	command		3263696	1					
ANR	3263945	Argument	command		3263696	0					
ANR	3263946	Identifier	command		3263696	0					
ANR	3263947	Argument	buf		3263696	1					
ANR	3263948	Identifier	buf		3263696	0					
ANR	3263949	IfStatement	if ( result )		3263696	21					
ANR	3263950	Condition	result	4598:6:123296:123301	3263696	0	True				
ANR	3263951	Identifier	result		3263696	0					
ANR	3263952	CompoundStatement		47:2:1418:1448	3263696	1					
ANR	3263953	IfStatement	if ( result -> argc < 3 )		3263696	0					
ANR	3263954	Condition	result -> argc < 3	4600:6:123337:123352	3263696	0	True				
ANR	3263955	RelationalExpression	result -> argc < 3		3263696	0		<			
ANR	3263956	PtrMemberAccess	result -> argc		3263696	0					
ANR	3263957	Identifier	result		3263696	0					
ANR	3263958	Identifier	argc		3263696	1					
ANR	3263959	PrimaryExpression	3		3263696	1					
ANR	3263960	CompoundStatement		44:24:1374:1374	3263696	1					
ANR	3263961	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4601:3:123360:123391	3263696	0	True				
ANR	3263962	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3263696	0					
ANR	3263963	Callee	EXCEPT		3263696	0					
ANR	3263964	Identifier	EXCEPT		3263696	0					
ANR	3263965	ArgumentList	"""Bad %s Result"""		3263696	1					
ANR	3263966	Argument	"""Bad %s Result"""		3263696	0					
ANR	3263967	PrimaryExpression	"""Bad %s Result"""		3263696	0					
ANR	3263968	Argument	command		3263696	1					
ANR	3263969	Identifier	command		3263696	0					
ANR	3263970	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4603:2:123399:123429	3263696	1	True				
ANR	3263971	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3263696	0					
ANR	3263972	IdentifierDeclType	int		3263696	0					
ANR	3263973	Identifier	rc		3263696	1					
ANR	3263974	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3263696	2		=			
ANR	3263975	Identifier	rc		3263696	0					
ANR	3263976	CallExpression	atoi ( result -> argv [ 1 ] )		3263696	1					
ANR	3263977	Callee	atoi		3263696	0					
ANR	3263978	Identifier	atoi		3263696	0					
ANR	3263979	ArgumentList	result -> argv [ 1 ]		3263696	1					
ANR	3263980	Argument	result -> argv [ 1 ]		3263696	0					
ANR	3263981	ArrayIndexing	result -> argv [ 1 ]		3263696	0					
ANR	3263982	PtrMemberAccess	result -> argv		3263696	0					
ANR	3263983	Identifier	result		3263696	0					
ANR	3263984	Identifier	argv		3263696	1					
ANR	3263985	PrimaryExpression	1		3263696	1					
ANR	3263986	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3263696	2					
ANR	3263987	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4604:7:123438:123476	3263696	0	True				
ANR	3263988	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3263696	0					
ANR	3263989	Callee	strcasecmp		3263696	0					
ANR	3263990	Identifier	strcasecmp		3263696	0					
ANR	3263991	ArgumentList	result -> argv [ 2 ]		3263696	1					
ANR	3263992	Argument	result -> argv [ 2 ]		3263696	0					
ANR	3263993	ArrayIndexing	result -> argv [ 2 ]		3263696	0					
ANR	3263994	PtrMemberAccess	result -> argv		3263696	0					
ANR	3263995	Identifier	result		3263696	0					
ANR	3263996	Identifier	argv		3263696	1					
ANR	3263997	PrimaryExpression	2		3263696	1					
ANR	3263998	Argument	NULLSTRING		3263696	1					
ANR	3263999	Identifier	NULLSTRING		3263696	0					
ANR	3264000	CompoundStatement		48:49:1499:1499	3263696	1					
ANR	3264001	ExpressionStatement	error_string = result -> argv [ 2 ]	4605:3:123485:123515	3263696	0	True				
ANR	3264002	AssignmentExpression	error_string = result -> argv [ 2 ]		3263696	0		=			
ANR	3264003	Identifier	error_string		3263696	0					
ANR	3264004	ArrayIndexing	result -> argv [ 2 ]		3263696	1					
ANR	3264005	PtrMemberAccess	result -> argv		3263696	0					
ANR	3264006	Identifier	result		3263696	0					
ANR	3264007	Identifier	argv		3263696	1					
ANR	3264008	PrimaryExpression	2		3263696	1					
ANR	3264009	ElseStatement	else		3263696	0					
ANR	3264010	CompoundStatement		50:9:1545:1545	3263696	0					
ANR	3264011	ExpressionStatement	"error_string = """""	4607:3:123531:123548	3263696	0	True				
ANR	3264012	AssignmentExpression	"error_string = """""		3263696	0		=			
ANR	3264013	Identifier	error_string		3263696	0					
ANR	3264014	PrimaryExpression	""""""		3263696	1					
ANR	3264015	ForStatement	for ( int i = 3 ; i < result -> argc ; i ++ )		3263696	3					
ANR	3264016	ForInit	int i = 3 ;	4609:8:123562:123571	3263696	0	True				
ANR	3264017	IdentifierDeclStatement	int i = 3 ;		3263696	0					
ANR	3264018	IdentifierDecl	i = 3		3263696	0					
ANR	3264019	IdentifierDeclType	int		3263696	0					
ANR	3264020	Identifier	i		3263696	1					
ANR	3264021	AssignmentExpression	i = 3		3263696	2		=			
ANR	3264022	Identifier	i		3263696	0					
ANR	3264023	PrimaryExpression	3		3263696	1					
ANR	3264024	Condition	i < result -> argc	4609:19:123573:123588	3263696	1	True				
ANR	3264025	RelationalExpression	i < result -> argc		3263696	0		<			
ANR	3264026	Identifier	i		3263696	0					
ANR	3264027	PtrMemberAccess	result -> argc		3263696	1					
ANR	3264028	Identifier	result		3263696	0					
ANR	3264029	Identifier	argc		3263696	1					
ANR	3264030	PostIncDecOperationExpression	i ++	4609:37:123591:123593	3263696	2	True				
ANR	3264031	Identifier	i		3263696	0					
ANR	3264032	IncDec	++		3263696	1					
ANR	3264033	CompoundStatement		53:43:1616:1616	3263696	3					
ANR	3264034	ExpressionStatement	results . append ( result -> argv [ i ] )	4610:3:123602:123635	3263696	0	True				
ANR	3264035	CallExpression	results . append ( result -> argv [ i ] )		3263696	0					
ANR	3264036	Callee	results . append		3263696	0					
ANR	3264037	MemberAccess	results . append		3263696	0					
ANR	3264038	Identifier	results		3263696	0					
ANR	3264039	Identifier	append		3263696	1					
ANR	3264040	ArgumentList	result -> argv [ i ]		3263696	1					
ANR	3264041	Argument	result -> argv [ i ]		3263696	0					
ANR	3264042	ArrayIndexing	result -> argv [ i ]		3263696	0					
ANR	3264043	PtrMemberAccess	result -> argv		3263696	0					
ANR	3264044	Identifier	result		3263696	0					
ANR	3264045	Identifier	argv		3263696	1					
ANR	3264046	Identifier	i		3263696	1					
ANR	3264047	Statement	delete	4612:2:123643:123648	3263696	4	True				
ANR	3264048	ExpressionStatement	result	4612:9:123650:123656	3263696	5	True				
ANR	3264049	Identifier	result		3263696	0					
ANR	3264050	ReturnStatement	return rc ;	4613:2:123660:123669	3263696	6	True				
ANR	3264051	Identifier	rc		3263696	0					
ANR	3264052	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3263696	22					
ANR	3264053	Condition	"check_pending_timeout ( command , buf )"	4617:6:123726:123759	3263696	0	True				
ANR	3264054	CallExpression	"check_pending_timeout ( command , buf )"		3263696	0					
ANR	3264055	Callee	check_pending_timeout		3263696	0					
ANR	3264056	Identifier	check_pending_timeout		3263696	0					
ANR	3264057	ArgumentList	command		3263696	1					
ANR	3264058	Argument	command		3263696	0					
ANR	3264059	Identifier	command		3263696	0					
ANR	3264060	Argument	buf		3263696	1					
ANR	3264061	Identifier	buf		3263696	0					
ANR	3264062	CompoundStatement		61:43:1782:1782	3263696	1					
ANR	3264063	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4619:2:123799:123847	3263696	0	True				
ANR	3264064	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3263696	0					
ANR	3264065	Callee	sprintf		3263696	0					
ANR	3264066	Identifier	sprintf		3263696	0					
ANR	3264067	ArgumentList	error_string		3263696	1					
ANR	3264068	Argument	error_string		3263696	0					
ANR	3264069	Identifier	error_string		3263696	0					
ANR	3264070	Argument	"""%s timed out"""		3263696	1					
ANR	3264071	PrimaryExpression	"""%s timed out"""		3263696	0					
ANR	3264072	Argument	command		3263696	2					
ANR	3264073	Identifier	command		3263696	0					
ANR	3264074	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4620:2:123851:123886	3263696	1	True				
ANR	3264075	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3263696	0					
ANR	3264076	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4624:1:123946:123979	3263696	23	True				
ANR	3264077	Identifier	GAHPCLIENT_COMMAND_PENDING		3263696	0					
ANR	3264078	ReturnType	int		3263696	1					
ANR	3264079	Identifier	GahpClient :: nordugrid_ldap_query		3263696	2					
ANR	3264080	ParameterList	"const char * hostname , const char * ldap_base , const char * ldap_filter , const char * ldap_attrs , StringList & results"		3263696	3					
ANR	3264081	Parameter	const char * hostname	4554:33:121847:121866	3263696	0	True				
ANR	3264082	ParameterType	const char *		3263696	0					
ANR	3264083	Identifier	hostname		3263696	1					
ANR	3264084	Parameter	const char * ldap_base	4554:55:121869:121889	3263696	1	True				
ANR	3264085	ParameterType	const char *		3263696	0					
ANR	3264086	Identifier	ldap_base		3263696	1					
ANR	3264087	Parameter	const char * ldap_filter	4555:9:121901:121923	3263696	2	True				
ANR	3264088	ParameterType	const char *		3263696	0					
ANR	3264089	Identifier	ldap_filter		3263696	1					
ANR	3264090	Parameter	const char * ldap_attrs	4556:9:121935:121956	3263696	3	True				
ANR	3264091	ParameterType	const char *		3263696	0					
ANR	3264092	Identifier	ldap_attrs		3263696	1					
ANR	3264093	Parameter	StringList & results	4556:33:121959:121977	3263696	4	True				
ANR	3264094	ParameterType	StringList &		3263696	0					
ANR	3264095	Identifier	results		3263696	1					
ANR	3264096	CFGEntryNode	ENTRY		3263696		True				
ANR	3264097	CFGExitNode	EXIT		3263696		True				
ANR	3264098	Symbol	server		3263696						
ANR	3264099	Symbol	server -> m_commands_supported		3263696						
ANR	3264100	Symbol	escapeGahpString		3263696						
ANR	3264101	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3263696						
ANR	3264102	Symbol	* server		3263696						
ANR	3264103	Symbol	ldap_filter		3263696						
ANR	3264104	Symbol	reqline . c_str		3263696						
ANR	3264105	Symbol	results_only		3263696						
ANR	3264106	Symbol	result -> argv		3263696						
ANR	3264107	Symbol	* server -> m_commands_supported		3263696						
ANR	3264108	Symbol	sprintf		3263696						
ANR	3264109	Symbol	result		3263696						
ANR	3264110	Symbol	hostname		3263696						
ANR	3264111	Symbol	* result		3263696						
ANR	3264112	Symbol	server -> m_commands_supported -> contains_anycase		3263696						
ANR	3264113	Symbol	GAHPCLIENT_COMMAND_PENDING		3263696						
ANR	3264114	Symbol	reqline		3263696						
ANR	3264115	Symbol	m_mode		3263696						
ANR	3264116	Symbol	strcasecmp		3263696						
ANR	3264117	Symbol	results		3263696						
ANR	3264118	Symbol	* result -> argv		3263696						
ANR	3264119	Symbol	atoi		3263696						
ANR	3264120	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3263696						
ANR	3264121	Symbol	ldap_attrs		3263696						
ANR	3264122	Symbol	* * result		3263696						
ANR	3264123	Symbol	i		3263696						
ANR	3264124	Symbol	NULLSTRING		3263696						
ANR	3264125	Symbol	command		3263696						
ANR	3264126	Symbol	esc4		3263696						
ANR	3264127	Symbol	get_pending_result		3263696						
ANR	3264128	Symbol	ldap_base		3263696						
ANR	3264129	Symbol	esc3		3263696						
ANR	3264130	Symbol	rc		3263696						
ANR	3264131	Symbol	error_string		3263696						
ANR	3264132	Symbol	esc2		3263696						
ANR	3264133	Symbol	buf		3263696						
ANR	3264134	Symbol	esc1		3263696						
ANR	3264135	Symbol	* i		3263696						
ANR	3264136	Symbol	x		3263696						
ANR	3264137	Symbol	result -> argc		3263696						
ANR	3264138	Symbol	* * server		3263696						
ANR	3264139	Symbol	FALSE		3263696						
ANR	3264140	Symbol	strdup		3263696						
ANR	3264141	Symbol	check_pending_timeout		3263696						
ANR	3264142	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3263696						
ANR	3264143	Symbol	is_pending		3263696						
ANR	3264144	Symbol	deleg_proxy		3263696						
ANR	3264145	Function	GahpClient :: nordugrid_cancel	4627:0:123984:125720							
ANR	3264146	FunctionDef	"GahpClient :: nordugrid_cancel (const char * hostname , const char * job_id)"		3264145	0					
ANR	3264147	CompoundStatement		4629:0:124059:125720	3264145	0					
ANR	3264148	Statement	static	4630:1:124062:124067	3264145	0	True				
ANR	3264149	IdentifierDeclStatement	"const char * command = ""NORDUGRID_CANCEL"" ;"	4630:8:124069:124109	3264145	1	True				
ANR	3264150	IdentifierDecl	"* command = ""NORDUGRID_CANCEL"""		3264145	0					
ANR	3264151	IdentifierDeclType	const char *		3264145	0					
ANR	3264152	Identifier	command		3264145	1					
ANR	3264153	AssignmentExpression	"* command = ""NORDUGRID_CANCEL"""		3264145	2		=			
ANR	3264154	Identifier	command		3264145	0					
ANR	3264155	PrimaryExpression	"""NORDUGRID_CANCEL"""		3264145	1					
ANR	3264156	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3264145	2					
ANR	3264157	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4633:6:124158:124219	3264145	0	True				
ANR	3264158	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3264145	0		==			
ANR	3264159	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3264145	0					
ANR	3264160	Callee	server -> m_commands_supported -> contains_anycase		3264145	0					
ANR	3264161	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3264145	0					
ANR	3264162	PtrMemberAccess	server -> m_commands_supported		3264145	0					
ANR	3264163	Identifier	server		3264145	0					
ANR	3264164	Identifier	m_commands_supported		3264145	1					
ANR	3264165	Identifier	contains_anycase		3264145	1					
ANR	3264166	ArgumentList	command		3264145	1					
ANR	3264167	Argument	command		3264145	0					
ANR	3264168	Identifier	command		3264145	0					
ANR	3264169	Identifier	FALSE		3264145	1					
ANR	3264170	CompoundStatement		5:70:162:162	3264145	1					
ANR	3264171	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4634:2:124226:124265	3264145	0	True				
ANR	3264172	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3264145	0					
ANR	3264173	IfStatement	if ( ! hostname )		3264145	3					
ANR	3264174	Condition	! hostname	4638:5:124303:124311	3264145	0	True				
ANR	3264175	UnaryOperationExpression	! hostname		3264145	0					
ANR	3264176	UnaryOperator	!		3264145	0					
ANR	3264177	Identifier	hostname		3264145	1					
ANR	3264178	ExpressionStatement	hostname = NULLSTRING	4638:16:124314:124333	3264145	1	True				
ANR	3264179	AssignmentExpression	hostname = NULLSTRING		3264145	0		=			
ANR	3264180	Identifier	hostname		3264145	0					
ANR	3264181	Identifier	NULLSTRING		3264145	1					
ANR	3264182	IfStatement	if ( ! job_id )		3264145	4					
ANR	3264183	Condition	! job_id	4639:5:124340:124346	3264145	0	True				
ANR	3264184	UnaryOperationExpression	! job_id		3264145	0					
ANR	3264185	UnaryOperator	!		3264145	0					
ANR	3264186	Identifier	job_id		3264145	1					
ANR	3264187	ExpressionStatement	job_id = NULLSTRING	4639:14:124349:124366	3264145	1	True				
ANR	3264188	AssignmentExpression	job_id = NULLSTRING		3264145	0		=			
ANR	3264189	Identifier	job_id		3264145	0					
ANR	3264190	Identifier	NULLSTRING		3264145	1					
ANR	3264191	IdentifierDeclStatement	std :: string reqline ;	4640:1:124369:124388	3264145	5	True				
ANR	3264192	IdentifierDecl	reqline		3264145	0					
ANR	3264193	IdentifierDeclType	std :: string		3264145	0					
ANR	3264194	Identifier	reqline		3264145	1					
ANR	3264195	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4641:1:124391:124440	3264145	6	True				
ANR	3264196	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3264145	0					
ANR	3264197	IdentifierDeclType	char *		3264145	0					
ANR	3264198	Identifier	esc1		3264145	1					
ANR	3264199	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3264145	2		=			
ANR	3264200	Identifier	esc1		3264145	0					
ANR	3264201	CallExpression	strdup ( escapeGahpString ( hostname ) )		3264145	1					
ANR	3264202	Callee	strdup		3264145	0					
ANR	3264203	Identifier	strdup		3264145	0					
ANR	3264204	ArgumentList	escapeGahpString ( hostname )		3264145	1					
ANR	3264205	Argument	escapeGahpString ( hostname )		3264145	0					
ANR	3264206	CallExpression	escapeGahpString ( hostname )		3264145	0					
ANR	3264207	Callee	escapeGahpString		3264145	0					
ANR	3264208	Identifier	escapeGahpString		3264145	0					
ANR	3264209	ArgumentList	hostname		3264145	1					
ANR	3264210	Argument	hostname		3264145	0					
ANR	3264211	Identifier	hostname		3264145	0					
ANR	3264212	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	4642:1:124443:124490	3264145	7	True				
ANR	3264213	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3264145	0					
ANR	3264214	IdentifierDeclType	char *		3264145	0					
ANR	3264215	Identifier	esc2		3264145	1					
ANR	3264216	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3264145	2		=			
ANR	3264217	Identifier	esc2		3264145	0					
ANR	3264218	CallExpression	strdup ( escapeGahpString ( job_id ) )		3264145	1					
ANR	3264219	Callee	strdup		3264145	0					
ANR	3264220	Identifier	strdup		3264145	0					
ANR	3264221	ArgumentList	escapeGahpString ( job_id )		3264145	1					
ANR	3264222	Argument	escapeGahpString ( job_id )		3264145	0					
ANR	3264223	CallExpression	escapeGahpString ( job_id )		3264145	0					
ANR	3264224	Callee	escapeGahpString		3264145	0					
ANR	3264225	Identifier	escapeGahpString		3264145	0					
ANR	3264226	ArgumentList	job_id		3264145	1					
ANR	3264227	Argument	job_id		3264145	0					
ANR	3264228	Identifier	job_id		3264145	0					
ANR	3264229	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	4643:1:124493:124538	3264145	8	True				
ANR	3264230	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3264145	0					
ANR	3264231	IdentifierDeclType	int		3264145	0					
ANR	3264232	Identifier	x		3264145	1					
ANR	3264233	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3264145	2		=			
ANR	3264234	Identifier	x		3264145	0					
ANR	3264235	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3264145	1					
ANR	3264236	Callee	sprintf		3264145	0					
ANR	3264237	Identifier	sprintf		3264145	0					
ANR	3264238	ArgumentList	reqline		3264145	1					
ANR	3264239	Argument	reqline		3264145	0					
ANR	3264240	Identifier	reqline		3264145	0					
ANR	3264241	Argument	"""%s %s"""		3264145	1					
ANR	3264242	PrimaryExpression	"""%s %s"""		3264145	0					
ANR	3264243	Argument	esc1		3264145	2					
ANR	3264244	Identifier	esc1		3264145	0					
ANR	3264245	Argument	esc2		3264145	3					
ANR	3264246	Identifier	esc2		3264145	0					
ANR	3264247	ExpressionStatement	free ( esc1 )	4644:1:124541:124553	3264145	9	True				
ANR	3264248	CallExpression	free ( esc1 )		3264145	0					
ANR	3264249	Callee	free		3264145	0					
ANR	3264250	Identifier	free		3264145	0					
ANR	3264251	ArgumentList	esc1		3264145	1					
ANR	3264252	Argument	esc1		3264145	0					
ANR	3264253	Identifier	esc1		3264145	0					
ANR	3264254	ExpressionStatement	free ( esc2 )	4645:1:124556:124568	3264145	10	True				
ANR	3264255	CallExpression	free ( esc2 )		3264145	0					
ANR	3264256	Callee	free		3264145	0					
ANR	3264257	Identifier	free		3264145	0					
ANR	3264258	ArgumentList	esc2		3264145	1					
ANR	3264259	Argument	esc2		3264145	0					
ANR	3264260	Identifier	esc2		3264145	0					
ANR	3264261	ExpressionStatement	ASSERT ( x > 0 )	4646:1:124571:124586	3264145	11	True				
ANR	3264262	CallExpression	ASSERT ( x > 0 )		3264145	0					
ANR	3264263	Callee	ASSERT		3264145	0					
ANR	3264264	Identifier	ASSERT		3264145	0					
ANR	3264265	ArgumentList	x > 0		3264145	1					
ANR	3264266	Argument	x > 0		3264145	0					
ANR	3264267	RelationalExpression	x > 0		3264145	0		>			
ANR	3264268	Identifier	x		3264145	0					
ANR	3264269	PrimaryExpression	0		3264145	1					
ANR	3264270	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4647:1:124589:124622	3264145	12	True				
ANR	3264271	IdentifierDecl	* buf = reqline . c_str ( )		3264145	0					
ANR	3264272	IdentifierDeclType	const char *		3264145	0					
ANR	3264273	Identifier	buf		3264145	1					
ANR	3264274	AssignmentExpression	* buf = reqline . c_str ( )		3264145	2		=			
ANR	3264275	Identifier	buf		3264145	0					
ANR	3264276	CallExpression	reqline . c_str ( )		3264145	1					
ANR	3264277	Callee	reqline . c_str		3264145	0					
ANR	3264278	MemberAccess	reqline . c_str		3264145	0					
ANR	3264279	Identifier	reqline		3264145	0					
ANR	3264280	Identifier	c_str		3264145	1					
ANR	3264281	ArgumentList			3264145	1					
ANR	3264282	IfStatement	"if ( ! is_pending ( command , buf ) )"		3264145	13					
ANR	3264283	Condition	"! is_pending ( command , buf )"	4651:6:124723:124746	3264145	0	True				
ANR	3264284	UnaryOperationExpression	"! is_pending ( command , buf )"		3264145	0					
ANR	3264285	UnaryOperator	!		3264145	0					
ANR	3264286	CallExpression	"is_pending ( command , buf )"		3264145	1					
ANR	3264287	Callee	is_pending		3264145	0					
ANR	3264288	Identifier	is_pending		3264145	0					
ANR	3264289	ArgumentList	command		3264145	1					
ANR	3264290	Argument	command		3264145	0					
ANR	3264291	Identifier	command		3264145	0					
ANR	3264292	Argument	buf		3264145	1					
ANR	3264293	Identifier	buf		3264145	0					
ANR	3264294	CompoundStatement		23:33:690:690	3264145	1					
ANR	3264295	IfStatement	if ( m_mode == results_only )		3264145	0					
ANR	3264296	Condition	m_mode == results_only	4654:7:124855:124876	3264145	0	True				
ANR	3264297	EqualityExpression	m_mode == results_only		3264145	0		==			
ANR	3264298	Identifier	m_mode		3264145	0					
ANR	3264299	Identifier	results_only		3264145	1					
ANR	3264300	CompoundStatement		26:32:820:820	3264145	1					
ANR	3264301	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4655:3:124885:124924	3264145	0	True				
ANR	3264302	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3264145	0					
ANR	3264303	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4657:2:124932:124968	3264145	1	True				
ANR	3264304	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3264145	0					
ANR	3264305	Callee	now_pending		3264145	0					
ANR	3264306	Identifier	now_pending		3264145	0					
ANR	3264307	ArgumentList	command		3264145	1					
ANR	3264308	Argument	command		3264145	0					
ANR	3264309	Identifier	command		3264145	0					
ANR	3264310	Argument	buf		3264145	1					
ANR	3264311	Identifier	buf		3264145	0					
ANR	3264312	Argument	deleg_proxy		3264145	2					
ANR	3264313	Identifier	deleg_proxy		3264145	0					
ANR	3264314	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4663:1:125062:125113	3264145	14	True				
ANR	3264315	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3264145	0					
ANR	3264316	IdentifierDeclType	Gahp_Args *		3264145	0					
ANR	3264317	Identifier	result		3264145	1					
ANR	3264318	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3264145	2		=			
ANR	3264319	Identifier	result		3264145	0					
ANR	3264320	CallExpression	"get_pending_result ( command , buf )"		3264145	1					
ANR	3264321	Callee	get_pending_result		3264145	0					
ANR	3264322	Identifier	get_pending_result		3264145	0					
ANR	3264323	ArgumentList	command		3264145	1					
ANR	3264324	Argument	command		3264145	0					
ANR	3264325	Identifier	command		3264145	0					
ANR	3264326	Argument	buf		3264145	1					
ANR	3264327	Identifier	buf		3264145	0					
ANR	3264328	IfStatement	if ( result )		3264145	15					
ANR	3264329	Condition	result	4664:6:125121:125126	3264145	0	True				
ANR	3264330	Identifier	result		3264145	0					
ANR	3264331	CompoundStatement		41:2:1165:1195	3264145	1					
ANR	3264332	IfStatement	if ( result -> argc != 3 )		3264145	0					
ANR	3264333	Condition	result -> argc != 3	4666:6:125162:125178	3264145	0	True				
ANR	3264334	EqualityExpression	result -> argc != 3		3264145	0		!=			
ANR	3264335	PtrMemberAccess	result -> argc		3264145	0					
ANR	3264336	Identifier	result		3264145	0					
ANR	3264337	Identifier	argc		3264145	1					
ANR	3264338	PrimaryExpression	3		3264145	1					
ANR	3264339	CompoundStatement		38:25:1121:1121	3264145	1					
ANR	3264340	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4667:3:125186:125217	3264145	0	True				
ANR	3264341	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3264145	0					
ANR	3264342	Callee	EXCEPT		3264145	0					
ANR	3264343	Identifier	EXCEPT		3264145	0					
ANR	3264344	ArgumentList	"""Bad %s Result"""		3264145	1					
ANR	3264345	Argument	"""Bad %s Result"""		3264145	0					
ANR	3264346	PrimaryExpression	"""Bad %s Result"""		3264145	0					
ANR	3264347	Argument	command		3264145	1					
ANR	3264348	Identifier	command		3264145	0					
ANR	3264349	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4669:2:125225:125255	3264145	1	True				
ANR	3264350	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3264145	0					
ANR	3264351	IdentifierDeclType	int		3264145	0					
ANR	3264352	Identifier	rc		3264145	1					
ANR	3264353	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3264145	2		=			
ANR	3264354	Identifier	rc		3264145	0					
ANR	3264355	CallExpression	atoi ( result -> argv [ 1 ] )		3264145	1					
ANR	3264356	Callee	atoi		3264145	0					
ANR	3264357	Identifier	atoi		3264145	0					
ANR	3264358	ArgumentList	result -> argv [ 1 ]		3264145	1					
ANR	3264359	Argument	result -> argv [ 1 ]		3264145	0					
ANR	3264360	ArrayIndexing	result -> argv [ 1 ]		3264145	0					
ANR	3264361	PtrMemberAccess	result -> argv		3264145	0					
ANR	3264362	Identifier	result		3264145	0					
ANR	3264363	Identifier	argv		3264145	1					
ANR	3264364	PrimaryExpression	1		3264145	1					
ANR	3264365	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3264145	2					
ANR	3264366	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4670:7:125264:125302	3264145	0	True				
ANR	3264367	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3264145	0					
ANR	3264368	Callee	strcasecmp		3264145	0					
ANR	3264369	Identifier	strcasecmp		3264145	0					
ANR	3264370	ArgumentList	result -> argv [ 2 ]		3264145	1					
ANR	3264371	Argument	result -> argv [ 2 ]		3264145	0					
ANR	3264372	ArrayIndexing	result -> argv [ 2 ]		3264145	0					
ANR	3264373	PtrMemberAccess	result -> argv		3264145	0					
ANR	3264374	Identifier	result		3264145	0					
ANR	3264375	Identifier	argv		3264145	1					
ANR	3264376	PrimaryExpression	2		3264145	1					
ANR	3264377	Argument	NULLSTRING		3264145	1					
ANR	3264378	Identifier	NULLSTRING		3264145	0					
ANR	3264379	CompoundStatement		42:49:1246:1246	3264145	1					
ANR	3264380	ExpressionStatement	error_string = result -> argv [ 2 ]	4671:3:125311:125341	3264145	0	True				
ANR	3264381	AssignmentExpression	error_string = result -> argv [ 2 ]		3264145	0		=			
ANR	3264382	Identifier	error_string		3264145	0					
ANR	3264383	ArrayIndexing	result -> argv [ 2 ]		3264145	1					
ANR	3264384	PtrMemberAccess	result -> argv		3264145	0					
ANR	3264385	Identifier	result		3264145	0					
ANR	3264386	Identifier	argv		3264145	1					
ANR	3264387	PrimaryExpression	2		3264145	1					
ANR	3264388	ElseStatement	else		3264145	0					
ANR	3264389	CompoundStatement		44:9:1292:1292	3264145	0					
ANR	3264390	ExpressionStatement	"error_string = """""	4673:3:125357:125374	3264145	0	True				
ANR	3264391	AssignmentExpression	"error_string = """""		3264145	0		=			
ANR	3264392	Identifier	error_string		3264145	0					
ANR	3264393	PrimaryExpression	""""""		3264145	1					
ANR	3264394	Statement	delete	4675:2:125382:125387	3264145	3	True				
ANR	3264395	ExpressionStatement	result	4675:9:125389:125395	3264145	4	True				
ANR	3264396	Identifier	result		3264145	0					
ANR	3264397	ReturnStatement	return rc ;	4676:2:125399:125408	3264145	5	True				
ANR	3264398	Identifier	rc		3264145	0					
ANR	3264399	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3264145	16					
ANR	3264400	Condition	"check_pending_timeout ( command , buf )"	4680:6:125465:125498	3264145	0	True				
ANR	3264401	CallExpression	"check_pending_timeout ( command , buf )"		3264145	0					
ANR	3264402	Callee	check_pending_timeout		3264145	0					
ANR	3264403	Identifier	check_pending_timeout		3264145	0					
ANR	3264404	ArgumentList	command		3264145	1					
ANR	3264405	Argument	command		3264145	0					
ANR	3264406	Identifier	command		3264145	0					
ANR	3264407	Argument	buf		3264145	1					
ANR	3264408	Identifier	buf		3264145	0					
ANR	3264409	CompoundStatement		52:43:1442:1442	3264145	1					
ANR	3264410	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4682:2:125538:125586	3264145	0	True				
ANR	3264411	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3264145	0					
ANR	3264412	Callee	sprintf		3264145	0					
ANR	3264413	Identifier	sprintf		3264145	0					
ANR	3264414	ArgumentList	error_string		3264145	1					
ANR	3264415	Argument	error_string		3264145	0					
ANR	3264416	Identifier	error_string		3264145	0					
ANR	3264417	Argument	"""%s timed out"""		3264145	1					
ANR	3264418	PrimaryExpression	"""%s timed out"""		3264145	0					
ANR	3264419	Argument	command		3264145	2					
ANR	3264420	Identifier	command		3264145	0					
ANR	3264421	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4683:2:125590:125625	3264145	1	True				
ANR	3264422	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3264145	0					
ANR	3264423	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4687:1:125685:125718	3264145	17	True				
ANR	3264424	Identifier	GAHPCLIENT_COMMAND_PENDING		3264145	0					
ANR	3264425	ReturnType	int		3264145	1					
ANR	3264426	Identifier	GahpClient :: nordugrid_cancel		3264145	2					
ANR	3264427	ParameterList	"const char * hostname , const char * job_id"		3264145	3					
ANR	3264428	Parameter	const char * hostname	4628:29:124017:124036	3264145	0	True				
ANR	3264429	ParameterType	const char *		3264145	0					
ANR	3264430	Identifier	hostname		3264145	1					
ANR	3264431	Parameter	const char * job_id	4628:51:124039:124056	3264145	1	True				
ANR	3264432	ParameterType	const char *		3264145	0					
ANR	3264433	Identifier	job_id		3264145	1					
ANR	3264434	CFGEntryNode	ENTRY		3264145		True				
ANR	3264435	CFGExitNode	EXIT		3264145		True				
ANR	3264436	Symbol	server -> m_commands_supported		3264145						
ANR	3264437	Symbol	server		3264145						
ANR	3264438	Symbol	escapeGahpString		3264145						
ANR	3264439	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3264145						
ANR	3264440	Symbol	* server		3264145						
ANR	3264441	Symbol	reqline . c_str		3264145						
ANR	3264442	Symbol	results_only		3264145						
ANR	3264443	Symbol	result -> argv		3264145						
ANR	3264444	Symbol	* server -> m_commands_supported		3264145						
ANR	3264445	Symbol	sprintf		3264145						
ANR	3264446	Symbol	result		3264145						
ANR	3264447	Symbol	hostname		3264145						
ANR	3264448	Symbol	* result		3264145						
ANR	3264449	Symbol	server -> m_commands_supported -> contains_anycase		3264145						
ANR	3264450	Symbol	GAHPCLIENT_COMMAND_PENDING		3264145						
ANR	3264451	Symbol	reqline		3264145						
ANR	3264452	Symbol	m_mode		3264145						
ANR	3264453	Symbol	strcasecmp		3264145						
ANR	3264454	Symbol	* result -> argv		3264145						
ANR	3264455	Symbol	atoi		3264145						
ANR	3264456	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3264145						
ANR	3264457	Symbol	* * result		3264145						
ANR	3264458	Symbol	NULLSTRING		3264145						
ANR	3264459	Symbol	command		3264145						
ANR	3264460	Symbol	get_pending_result		3264145						
ANR	3264461	Symbol	rc		3264145						
ANR	3264462	Symbol	error_string		3264145						
ANR	3264463	Symbol	esc2		3264145						
ANR	3264464	Symbol	buf		3264145						
ANR	3264465	Symbol	esc1		3264145						
ANR	3264466	Symbol	job_id		3264145						
ANR	3264467	Symbol	x		3264145						
ANR	3264468	Symbol	result -> argc		3264145						
ANR	3264469	Symbol	* * server		3264145						
ANR	3264470	Symbol	FALSE		3264145						
ANR	3264471	Symbol	strdup		3264145						
ANR	3264472	Symbol	check_pending_timeout		3264145						
ANR	3264473	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3264145						
ANR	3264474	Symbol	is_pending		3264145						
ANR	3264475	Symbol	deleg_proxy		3264145						
ANR	3264476	Function	GahpClient :: nordugrid_stage_in	4690:0:125723:127691							
ANR	3264477	FunctionDef	"GahpClient :: nordugrid_stage_in (const char * hostname , const char * job_id , StringList & files)"		3264476	0					
ANR	3264478	CompoundStatement		4693:0:125829:127691	3264476	0					
ANR	3264479	Statement	static	4694:1:125832:125837	3264476	0	True				
ANR	3264480	IdentifierDeclStatement	"const char * command = ""NORDUGRID_STAGE_IN"" ;"	4694:8:125839:125881	3264476	1	True				
ANR	3264481	IdentifierDecl	"* command = ""NORDUGRID_STAGE_IN"""		3264476	0					
ANR	3264482	IdentifierDeclType	const char *		3264476	0					
ANR	3264483	Identifier	command		3264476	1					
ANR	3264484	AssignmentExpression	"* command = ""NORDUGRID_STAGE_IN"""		3264476	2		=			
ANR	3264485	Identifier	command		3264476	0					
ANR	3264486	PrimaryExpression	"""NORDUGRID_STAGE_IN"""		3264476	1					
ANR	3264487	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3264476	2					
ANR	3264488	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4697:6:125930:125991	3264476	0	True				
ANR	3264489	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3264476	0		==			
ANR	3264490	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3264476	0					
ANR	3264491	Callee	server -> m_commands_supported -> contains_anycase		3264476	0					
ANR	3264492	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3264476	0					
ANR	3264493	PtrMemberAccess	server -> m_commands_supported		3264476	0					
ANR	3264494	Identifier	server		3264476	0					
ANR	3264495	Identifier	m_commands_supported		3264476	1					
ANR	3264496	Identifier	contains_anycase		3264476	1					
ANR	3264497	ArgumentList	command		3264476	1					
ANR	3264498	Argument	command		3264476	0					
ANR	3264499	Identifier	command		3264476	0					
ANR	3264500	Identifier	FALSE		3264476	1					
ANR	3264501	CompoundStatement		5:70:164:164	3264476	1					
ANR	3264502	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4698:2:125998:126037	3264476	0	True				
ANR	3264503	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3264476	0					
ANR	3264504	IfStatement	if ( ! hostname )		3264476	3					
ANR	3264505	Condition	! hostname	4702:5:126075:126083	3264476	0	True				
ANR	3264506	UnaryOperationExpression	! hostname		3264476	0					
ANR	3264507	UnaryOperator	!		3264476	0					
ANR	3264508	Identifier	hostname		3264476	1					
ANR	3264509	ExpressionStatement	hostname = NULLSTRING	4702:16:126086:126105	3264476	1	True				
ANR	3264510	AssignmentExpression	hostname = NULLSTRING		3264476	0		=			
ANR	3264511	Identifier	hostname		3264476	0					
ANR	3264512	Identifier	NULLSTRING		3264476	1					
ANR	3264513	IfStatement	if ( ! job_id )		3264476	4					
ANR	3264514	Condition	! job_id	4703:5:126112:126118	3264476	0	True				
ANR	3264515	UnaryOperationExpression	! job_id		3264476	0					
ANR	3264516	UnaryOperator	!		3264476	0					
ANR	3264517	Identifier	job_id		3264476	1					
ANR	3264518	ExpressionStatement	job_id = NULLSTRING	4703:14:126121:126138	3264476	1	True				
ANR	3264519	AssignmentExpression	job_id = NULLSTRING		3264476	0		=			
ANR	3264520	Identifier	job_id		3264476	0					
ANR	3264521	Identifier	NULLSTRING		3264476	1					
ANR	3264522	IdentifierDeclStatement	std :: string reqline ;	4704:1:126141:126160	3264476	5	True				
ANR	3264523	IdentifierDecl	reqline		3264476	0					
ANR	3264524	IdentifierDeclType	std :: string		3264476	0					
ANR	3264525	Identifier	reqline		3264476	1					
ANR	3264526	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4705:1:126163:126212	3264476	6	True				
ANR	3264527	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3264476	0					
ANR	3264528	IdentifierDeclType	char *		3264476	0					
ANR	3264529	Identifier	esc1		3264476	1					
ANR	3264530	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3264476	2		=			
ANR	3264531	Identifier	esc1		3264476	0					
ANR	3264532	CallExpression	strdup ( escapeGahpString ( hostname ) )		3264476	1					
ANR	3264533	Callee	strdup		3264476	0					
ANR	3264534	Identifier	strdup		3264476	0					
ANR	3264535	ArgumentList	escapeGahpString ( hostname )		3264476	1					
ANR	3264536	Argument	escapeGahpString ( hostname )		3264476	0					
ANR	3264537	CallExpression	escapeGahpString ( hostname )		3264476	0					
ANR	3264538	Callee	escapeGahpString		3264476	0					
ANR	3264539	Identifier	escapeGahpString		3264476	0					
ANR	3264540	ArgumentList	hostname		3264476	1					
ANR	3264541	Argument	hostname		3264476	0					
ANR	3264542	Identifier	hostname		3264476	0					
ANR	3264543	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	4706:1:126215:126262	3264476	7	True				
ANR	3264544	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3264476	0					
ANR	3264545	IdentifierDeclType	char *		3264476	0					
ANR	3264546	Identifier	esc2		3264476	1					
ANR	3264547	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3264476	2		=			
ANR	3264548	Identifier	esc2		3264476	0					
ANR	3264549	CallExpression	strdup ( escapeGahpString ( job_id ) )		3264476	1					
ANR	3264550	Callee	strdup		3264476	0					
ANR	3264551	Identifier	strdup		3264476	0					
ANR	3264552	ArgumentList	escapeGahpString ( job_id )		3264476	1					
ANR	3264553	Argument	escapeGahpString ( job_id )		3264476	0					
ANR	3264554	CallExpression	escapeGahpString ( job_id )		3264476	0					
ANR	3264555	Callee	escapeGahpString		3264476	0					
ANR	3264556	Identifier	escapeGahpString		3264476	0					
ANR	3264557	ArgumentList	job_id		3264476	1					
ANR	3264558	Argument	job_id		3264476	0					
ANR	3264559	Identifier	job_id		3264476	0					
ANR	3264560	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) ) ;"	4707:1:126265:126329	3264476	8	True				
ANR	3264561	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) )"		3264476	0					
ANR	3264562	IdentifierDeclType	int		3264476	0					
ANR	3264563	Identifier	x		3264476	1					
ANR	3264564	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) )"		3264476	2		=			
ANR	3264565	Identifier	x		3264476	0					
ANR	3264566	CallExpression	"sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) )"		3264476	1					
ANR	3264567	Callee	sprintf		3264476	0					
ANR	3264568	Identifier	sprintf		3264476	0					
ANR	3264569	ArgumentList	reqline		3264476	1					
ANR	3264570	Argument	reqline		3264476	0					
ANR	3264571	Identifier	reqline		3264476	0					
ANR	3264572	Argument	"""%s %s %d"""		3264476	1					
ANR	3264573	PrimaryExpression	"""%s %s %d"""		3264476	0					
ANR	3264574	Argument	esc1		3264476	2					
ANR	3264575	Identifier	esc1		3264476	0					
ANR	3264576	Argument	esc2		3264476	3					
ANR	3264577	Identifier	esc2		3264476	0					
ANR	3264578	Argument	files . number ( )		3264476	4					
ANR	3264579	CallExpression	files . number ( )		3264476	0					
ANR	3264580	Callee	files . number		3264476	0					
ANR	3264581	MemberAccess	files . number		3264476	0					
ANR	3264582	Identifier	files		3264476	0					
ANR	3264583	Identifier	number		3264476	1					
ANR	3264584	ArgumentList			3264476	1					
ANR	3264585	ExpressionStatement	free ( esc1 )	4708:1:126332:126344	3264476	9	True				
ANR	3264586	CallExpression	free ( esc1 )		3264476	0					
ANR	3264587	Callee	free		3264476	0					
ANR	3264588	Identifier	free		3264476	0					
ANR	3264589	ArgumentList	esc1		3264476	1					
ANR	3264590	Argument	esc1		3264476	0					
ANR	3264591	Identifier	esc1		3264476	0					
ANR	3264592	ExpressionStatement	free ( esc2 )	4709:1:126347:126359	3264476	10	True				
ANR	3264593	CallExpression	free ( esc2 )		3264476	0					
ANR	3264594	Callee	free		3264476	0					
ANR	3264595	Identifier	free		3264476	0					
ANR	3264596	ArgumentList	esc2		3264476	1					
ANR	3264597	Argument	esc2		3264476	0					
ANR	3264598	Identifier	esc2		3264476	0					
ANR	3264599	ExpressionStatement	ASSERT ( x > 0 )	4710:1:126362:126377	3264476	11	True				
ANR	3264600	CallExpression	ASSERT ( x > 0 )		3264476	0					
ANR	3264601	Callee	ASSERT		3264476	0					
ANR	3264602	Identifier	ASSERT		3264476	0					
ANR	3264603	ArgumentList	x > 0		3264476	1					
ANR	3264604	Argument	x > 0		3264476	0					
ANR	3264605	RelationalExpression	x > 0		3264476	0		>			
ANR	3264606	Identifier	x		3264476	0					
ANR	3264607	PrimaryExpression	0		3264476	1					
ANR	3264608	IdentifierDeclStatement	int cnt = 0 ;	4711:1:126380:126391	3264476	12	True				
ANR	3264609	IdentifierDecl	cnt = 0		3264476	0					
ANR	3264610	IdentifierDeclType	int		3264476	0					
ANR	3264611	Identifier	cnt		3264476	1					
ANR	3264612	AssignmentExpression	cnt = 0		3264476	2		=			
ANR	3264613	Identifier	cnt		3264476	0					
ANR	3264614	PrimaryExpression	0		3264476	1					
ANR	3264615	IdentifierDeclStatement	const char * filename ;	4712:1:126394:126414	3264476	13	True				
ANR	3264616	IdentifierDecl	* filename		3264476	0					
ANR	3264617	IdentifierDeclType	const char *		3264476	0					
ANR	3264618	Identifier	filename		3264476	1					
ANR	3264619	ExpressionStatement	files . rewind ( )	4713:1:126417:126431	3264476	14	True				
ANR	3264620	CallExpression	files . rewind ( )		3264476	0					
ANR	3264621	Callee	files . rewind		3264476	0					
ANR	3264622	MemberAccess	files . rewind		3264476	0					
ANR	3264623	Identifier	files		3264476	0					
ANR	3264624	Identifier	rewind		3264476	1					
ANR	3264625	ArgumentList			3264476	1					
ANR	3264626	WhileStatement	while ( ( filename = files . next ( ) ) )		3264476	15					
ANR	3264627	Condition	filename = files . next ( )	4714:9:126442:126466	3264476	0	True				
ANR	3264628	AssignmentExpression	filename = files . next ( )		3264476	0		=			
ANR	3264629	Identifier	filename		3264476	0					
ANR	3264630	CallExpression	files . next ( )		3264476	1					
ANR	3264631	Callee	files . next		3264476	0					
ANR	3264632	MemberAccess	files . next		3264476	0					
ANR	3264633	Identifier	files		3264476	0					
ANR	3264634	Identifier	next		3264476	1					
ANR	3264635	ArgumentList			3264476	1					
ANR	3264636	CompoundStatement		22:37:640:640	3264476	1					
ANR	3264637	ExpressionStatement	"sprintf_cat ( reqline , "" %s"" , filename )"	4715:2:126474:126511	3264476	0	True				
ANR	3264638	CallExpression	"sprintf_cat ( reqline , "" %s"" , filename )"		3264476	0					
ANR	3264639	Callee	sprintf_cat		3264476	0					
ANR	3264640	Identifier	sprintf_cat		3264476	0					
ANR	3264641	ArgumentList	reqline		3264476	1					
ANR	3264642	Argument	reqline		3264476	0					
ANR	3264643	Identifier	reqline		3264476	0					
ANR	3264644	Argument	""" %s"""		3264476	1					
ANR	3264645	PrimaryExpression	""" %s"""		3264476	0					
ANR	3264646	Argument	filename		3264476	2					
ANR	3264647	Identifier	filename		3264476	0					
ANR	3264648	ExpressionStatement	cnt ++	4716:2:126515:126520	3264476	1	True				
ANR	3264649	PostIncDecOperationExpression	cnt ++		3264476	0					
ANR	3264650	Identifier	cnt		3264476	0					
ANR	3264651	IncDec	++		3264476	1					
ANR	3264652	ExpressionStatement	ASSERT ( cnt == files . number ( ) )	4718:1:126526:126557	3264476	16	True				
ANR	3264653	CallExpression	ASSERT ( cnt == files . number ( ) )		3264476	0					
ANR	3264654	Callee	ASSERT		3264476	0					
ANR	3264655	Identifier	ASSERT		3264476	0					
ANR	3264656	ArgumentList	cnt == files . number ( )		3264476	1					
ANR	3264657	Argument	cnt == files . number ( )		3264476	0					
ANR	3264658	EqualityExpression	cnt == files . number ( )		3264476	0		==			
ANR	3264659	Identifier	cnt		3264476	0					
ANR	3264660	CallExpression	files . number ( )		3264476	1					
ANR	3264661	Callee	files . number		3264476	0					
ANR	3264662	MemberAccess	files . number		3264476	0					
ANR	3264663	Identifier	files		3264476	0					
ANR	3264664	Identifier	number		3264476	1					
ANR	3264665	ArgumentList			3264476	1					
ANR	3264666	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4719:1:126560:126593	3264476	17	True				
ANR	3264667	IdentifierDecl	* buf = reqline . c_str ( )		3264476	0					
ANR	3264668	IdentifierDeclType	const char *		3264476	0					
ANR	3264669	Identifier	buf		3264476	1					
ANR	3264670	AssignmentExpression	* buf = reqline . c_str ( )		3264476	2		=			
ANR	3264671	Identifier	buf		3264476	0					
ANR	3264672	CallExpression	reqline . c_str ( )		3264476	1					
ANR	3264673	Callee	reqline . c_str		3264476	0					
ANR	3264674	MemberAccess	reqline . c_str		3264476	0					
ANR	3264675	Identifier	reqline		3264476	0					
ANR	3264676	Identifier	c_str		3264476	1					
ANR	3264677	ArgumentList			3264476	1					
ANR	3264678	IfStatement	"if ( ! is_pending ( command , buf ) )"		3264476	18					
ANR	3264679	Condition	"! is_pending ( command , buf )"	4723:6:126694:126717	3264476	0	True				
ANR	3264680	UnaryOperationExpression	"! is_pending ( command , buf )"		3264476	0					
ANR	3264681	UnaryOperator	!		3264476	0					
ANR	3264682	CallExpression	"is_pending ( command , buf )"		3264476	1					
ANR	3264683	Callee	is_pending		3264476	0					
ANR	3264684	Identifier	is_pending		3264476	0					
ANR	3264685	ArgumentList	command		3264476	1					
ANR	3264686	Argument	command		3264476	0					
ANR	3264687	Identifier	command		3264476	0					
ANR	3264688	Argument	buf		3264476	1					
ANR	3264689	Identifier	buf		3264476	0					
ANR	3264690	CompoundStatement		31:33:891:891	3264476	1					
ANR	3264691	IfStatement	if ( m_mode == results_only )		3264476	0					
ANR	3264692	Condition	m_mode == results_only	4726:7:126826:126847	3264476	0	True				
ANR	3264693	EqualityExpression	m_mode == results_only		3264476	0		==			
ANR	3264694	Identifier	m_mode		3264476	0					
ANR	3264695	Identifier	results_only		3264476	1					
ANR	3264696	CompoundStatement		34:32:1021:1021	3264476	1					
ANR	3264697	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4727:3:126856:126895	3264476	0	True				
ANR	3264698	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3264476	0					
ANR	3264699	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4729:2:126903:126939	3264476	1	True				
ANR	3264700	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3264476	0					
ANR	3264701	Callee	now_pending		3264476	0					
ANR	3264702	Identifier	now_pending		3264476	0					
ANR	3264703	ArgumentList	command		3264476	1					
ANR	3264704	Argument	command		3264476	0					
ANR	3264705	Identifier	command		3264476	0					
ANR	3264706	Argument	buf		3264476	1					
ANR	3264707	Identifier	buf		3264476	0					
ANR	3264708	Argument	deleg_proxy		3264476	2					
ANR	3264709	Identifier	deleg_proxy		3264476	0					
ANR	3264710	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4735:1:127033:127084	3264476	19	True				
ANR	3264711	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3264476	0					
ANR	3264712	IdentifierDeclType	Gahp_Args *		3264476	0					
ANR	3264713	Identifier	result		3264476	1					
ANR	3264714	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3264476	2		=			
ANR	3264715	Identifier	result		3264476	0					
ANR	3264716	CallExpression	"get_pending_result ( command , buf )"		3264476	1					
ANR	3264717	Callee	get_pending_result		3264476	0					
ANR	3264718	Identifier	get_pending_result		3264476	0					
ANR	3264719	ArgumentList	command		3264476	1					
ANR	3264720	Argument	command		3264476	0					
ANR	3264721	Identifier	command		3264476	0					
ANR	3264722	Argument	buf		3264476	1					
ANR	3264723	Identifier	buf		3264476	0					
ANR	3264724	IfStatement	if ( result )		3264476	20					
ANR	3264725	Condition	result	4736:6:127092:127097	3264476	0	True				
ANR	3264726	Identifier	result		3264476	0					
ANR	3264727	CompoundStatement		49:2:1366:1396	3264476	1					
ANR	3264728	IfStatement	if ( result -> argc != 3 )		3264476	0					
ANR	3264729	Condition	result -> argc != 3	4738:6:127133:127149	3264476	0	True				
ANR	3264730	EqualityExpression	result -> argc != 3		3264476	0		!=			
ANR	3264731	PtrMemberAccess	result -> argc		3264476	0					
ANR	3264732	Identifier	result		3264476	0					
ANR	3264733	Identifier	argc		3264476	1					
ANR	3264734	PrimaryExpression	3		3264476	1					
ANR	3264735	CompoundStatement		46:25:1322:1322	3264476	1					
ANR	3264736	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4739:3:127157:127188	3264476	0	True				
ANR	3264737	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3264476	0					
ANR	3264738	Callee	EXCEPT		3264476	0					
ANR	3264739	Identifier	EXCEPT		3264476	0					
ANR	3264740	ArgumentList	"""Bad %s Result"""		3264476	1					
ANR	3264741	Argument	"""Bad %s Result"""		3264476	0					
ANR	3264742	PrimaryExpression	"""Bad %s Result"""		3264476	0					
ANR	3264743	Argument	command		3264476	1					
ANR	3264744	Identifier	command		3264476	0					
ANR	3264745	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4741:2:127196:127226	3264476	1	True				
ANR	3264746	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3264476	0					
ANR	3264747	IdentifierDeclType	int		3264476	0					
ANR	3264748	Identifier	rc		3264476	1					
ANR	3264749	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3264476	2		=			
ANR	3264750	Identifier	rc		3264476	0					
ANR	3264751	CallExpression	atoi ( result -> argv [ 1 ] )		3264476	1					
ANR	3264752	Callee	atoi		3264476	0					
ANR	3264753	Identifier	atoi		3264476	0					
ANR	3264754	ArgumentList	result -> argv [ 1 ]		3264476	1					
ANR	3264755	Argument	result -> argv [ 1 ]		3264476	0					
ANR	3264756	ArrayIndexing	result -> argv [ 1 ]		3264476	0					
ANR	3264757	PtrMemberAccess	result -> argv		3264476	0					
ANR	3264758	Identifier	result		3264476	0					
ANR	3264759	Identifier	argv		3264476	1					
ANR	3264760	PrimaryExpression	1		3264476	1					
ANR	3264761	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3264476	2					
ANR	3264762	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4742:7:127235:127273	3264476	0	True				
ANR	3264763	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3264476	0					
ANR	3264764	Callee	strcasecmp		3264476	0					
ANR	3264765	Identifier	strcasecmp		3264476	0					
ANR	3264766	ArgumentList	result -> argv [ 2 ]		3264476	1					
ANR	3264767	Argument	result -> argv [ 2 ]		3264476	0					
ANR	3264768	ArrayIndexing	result -> argv [ 2 ]		3264476	0					
ANR	3264769	PtrMemberAccess	result -> argv		3264476	0					
ANR	3264770	Identifier	result		3264476	0					
ANR	3264771	Identifier	argv		3264476	1					
ANR	3264772	PrimaryExpression	2		3264476	1					
ANR	3264773	Argument	NULLSTRING		3264476	1					
ANR	3264774	Identifier	NULLSTRING		3264476	0					
ANR	3264775	CompoundStatement		50:49:1447:1447	3264476	1					
ANR	3264776	ExpressionStatement	error_string = result -> argv [ 2 ]	4743:3:127282:127312	3264476	0	True				
ANR	3264777	AssignmentExpression	error_string = result -> argv [ 2 ]		3264476	0		=			
ANR	3264778	Identifier	error_string		3264476	0					
ANR	3264779	ArrayIndexing	result -> argv [ 2 ]		3264476	1					
ANR	3264780	PtrMemberAccess	result -> argv		3264476	0					
ANR	3264781	Identifier	result		3264476	0					
ANR	3264782	Identifier	argv		3264476	1					
ANR	3264783	PrimaryExpression	2		3264476	1					
ANR	3264784	ElseStatement	else		3264476	0					
ANR	3264785	CompoundStatement		52:9:1493:1493	3264476	0					
ANR	3264786	ExpressionStatement	"error_string = """""	4745:3:127328:127345	3264476	0	True				
ANR	3264787	AssignmentExpression	"error_string = """""		3264476	0		=			
ANR	3264788	Identifier	error_string		3264476	0					
ANR	3264789	PrimaryExpression	""""""		3264476	1					
ANR	3264790	Statement	delete	4747:2:127353:127358	3264476	3	True				
ANR	3264791	ExpressionStatement	result	4747:9:127360:127366	3264476	4	True				
ANR	3264792	Identifier	result		3264476	0					
ANR	3264793	ReturnStatement	return rc ;	4748:2:127370:127379	3264476	5	True				
ANR	3264794	Identifier	rc		3264476	0					
ANR	3264795	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3264476	21					
ANR	3264796	Condition	"check_pending_timeout ( command , buf )"	4752:6:127436:127469	3264476	0	True				
ANR	3264797	CallExpression	"check_pending_timeout ( command , buf )"		3264476	0					
ANR	3264798	Callee	check_pending_timeout		3264476	0					
ANR	3264799	Identifier	check_pending_timeout		3264476	0					
ANR	3264800	ArgumentList	command		3264476	1					
ANR	3264801	Argument	command		3264476	0					
ANR	3264802	Identifier	command		3264476	0					
ANR	3264803	Argument	buf		3264476	1					
ANR	3264804	Identifier	buf		3264476	0					
ANR	3264805	CompoundStatement		60:43:1643:1643	3264476	1					
ANR	3264806	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4754:2:127509:127557	3264476	0	True				
ANR	3264807	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3264476	0					
ANR	3264808	Callee	sprintf		3264476	0					
ANR	3264809	Identifier	sprintf		3264476	0					
ANR	3264810	ArgumentList	error_string		3264476	1					
ANR	3264811	Argument	error_string		3264476	0					
ANR	3264812	Identifier	error_string		3264476	0					
ANR	3264813	Argument	"""%s timed out"""		3264476	1					
ANR	3264814	PrimaryExpression	"""%s timed out"""		3264476	0					
ANR	3264815	Argument	command		3264476	2					
ANR	3264816	Identifier	command		3264476	0					
ANR	3264817	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4755:2:127561:127596	3264476	1	True				
ANR	3264818	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3264476	0					
ANR	3264819	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4759:1:127656:127689	3264476	22	True				
ANR	3264820	Identifier	GAHPCLIENT_COMMAND_PENDING		3264476	0					
ANR	3264821	ReturnType	int		3264476	1					
ANR	3264822	Identifier	GahpClient :: nordugrid_stage_in		3264476	2					
ANR	3264823	ParameterList	"const char * hostname , const char * job_id , StringList & files"		3264476	3					
ANR	3264824	Parameter	const char * hostname	4691:31:125758:125777	3264476	0	True				
ANR	3264825	ParameterType	const char *		3264476	0					
ANR	3264826	Identifier	hostname		3264476	1					
ANR	3264827	Parameter	const char * job_id	4691:53:125780:125797	3264476	1	True				
ANR	3264828	ParameterType	const char *		3264476	0					
ANR	3264829	Identifier	job_id		3264476	1					
ANR	3264830	Parameter	StringList & files	4692:10:125810:125826	3264476	2	True				
ANR	3264831	ParameterType	StringList &		3264476	0					
ANR	3264832	Identifier	files		3264476	1					
ANR	3264833	CFGEntryNode	ENTRY		3264476		True				
ANR	3264834	CFGExitNode	EXIT		3264476		True				
ANR	3264835	Symbol	server -> m_commands_supported		3264476						
ANR	3264836	Symbol	server		3264476						
ANR	3264837	Symbol	escapeGahpString		3264476						
ANR	3264838	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3264476						
ANR	3264839	Symbol	* server		3264476						
ANR	3264840	Symbol	reqline . c_str		3264476						
ANR	3264841	Symbol	results_only		3264476						
ANR	3264842	Symbol	result -> argv		3264476						
ANR	3264843	Symbol	* server -> m_commands_supported		3264476						
ANR	3264844	Symbol	sprintf		3264476						
ANR	3264845	Symbol	result		3264476						
ANR	3264846	Symbol	hostname		3264476						
ANR	3264847	Symbol	* result		3264476						
ANR	3264848	Symbol	server -> m_commands_supported -> contains_anycase		3264476						
ANR	3264849	Symbol	GAHPCLIENT_COMMAND_PENDING		3264476						
ANR	3264850	Symbol	reqline		3264476						
ANR	3264851	Symbol	files . next		3264476						
ANR	3264852	Symbol	m_mode		3264476						
ANR	3264853	Symbol	strcasecmp		3264476						
ANR	3264854	Symbol	* result -> argv		3264476						
ANR	3264855	Symbol	atoi		3264476						
ANR	3264856	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3264476						
ANR	3264857	Symbol	cnt		3264476						
ANR	3264858	Symbol	* * result		3264476						
ANR	3264859	Symbol	NULLSTRING		3264476						
ANR	3264860	Symbol	command		3264476						
ANR	3264861	Symbol	files . number		3264476						
ANR	3264862	Symbol	get_pending_result		3264476						
ANR	3264863	Symbol	rc		3264476						
ANR	3264864	Symbol	error_string		3264476						
ANR	3264865	Symbol	esc2		3264476						
ANR	3264866	Symbol	buf		3264476						
ANR	3264867	Symbol	esc1		3264476						
ANR	3264868	Symbol	filename		3264476						
ANR	3264869	Symbol	job_id		3264476						
ANR	3264870	Symbol	x		3264476						
ANR	3264871	Symbol	result -> argc		3264476						
ANR	3264872	Symbol	files		3264476						
ANR	3264873	Symbol	* * server		3264476						
ANR	3264874	Symbol	FALSE		3264476						
ANR	3264875	Symbol	strdup		3264476						
ANR	3264876	Symbol	check_pending_timeout		3264476						
ANR	3264877	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3264476						
ANR	3264878	Symbol	is_pending		3264476						
ANR	3264879	Symbol	deleg_proxy		3264476						
ANR	3264880	Function	GahpClient :: nordugrid_stage_out	4762:0:127694:129661							
ANR	3264881	FunctionDef	"GahpClient :: nordugrid_stage_out (const char * hostname , const char * job_id , StringList & files)"		3264880	0					
ANR	3264882	CompoundStatement		4765:0:127799:129661	3264880	0					
ANR	3264883	Statement	static	4766:1:127802:127807	3264880	0	True				
ANR	3264884	IdentifierDeclStatement	"const char * command = ""NORDUGRID_STAGE_OUT"" ;"	4766:8:127809:127852	3264880	1	True				
ANR	3264885	IdentifierDecl	"* command = ""NORDUGRID_STAGE_OUT"""		3264880	0					
ANR	3264886	IdentifierDeclType	const char *		3264880	0					
ANR	3264887	Identifier	command		3264880	1					
ANR	3264888	AssignmentExpression	"* command = ""NORDUGRID_STAGE_OUT"""		3264880	2		=			
ANR	3264889	Identifier	command		3264880	0					
ANR	3264890	PrimaryExpression	"""NORDUGRID_STAGE_OUT"""		3264880	1					
ANR	3264891	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3264880	2					
ANR	3264892	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4769:6:127901:127962	3264880	0	True				
ANR	3264893	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3264880	0		==			
ANR	3264894	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3264880	0					
ANR	3264895	Callee	server -> m_commands_supported -> contains_anycase		3264880	0					
ANR	3264896	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3264880	0					
ANR	3264897	PtrMemberAccess	server -> m_commands_supported		3264880	0					
ANR	3264898	Identifier	server		3264880	0					
ANR	3264899	Identifier	m_commands_supported		3264880	1					
ANR	3264900	Identifier	contains_anycase		3264880	1					
ANR	3264901	ArgumentList	command		3264880	1					
ANR	3264902	Argument	command		3264880	0					
ANR	3264903	Identifier	command		3264880	0					
ANR	3264904	Identifier	FALSE		3264880	1					
ANR	3264905	CompoundStatement		5:70:165:165	3264880	1					
ANR	3264906	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4770:2:127969:128008	3264880	0	True				
ANR	3264907	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3264880	0					
ANR	3264908	IfStatement	if ( ! hostname )		3264880	3					
ANR	3264909	Condition	! hostname	4774:5:128046:128054	3264880	0	True				
ANR	3264910	UnaryOperationExpression	! hostname		3264880	0					
ANR	3264911	UnaryOperator	!		3264880	0					
ANR	3264912	Identifier	hostname		3264880	1					
ANR	3264913	ExpressionStatement	hostname = NULLSTRING	4774:16:128057:128076	3264880	1	True				
ANR	3264914	AssignmentExpression	hostname = NULLSTRING		3264880	0		=			
ANR	3264915	Identifier	hostname		3264880	0					
ANR	3264916	Identifier	NULLSTRING		3264880	1					
ANR	3264917	IfStatement	if ( ! job_id )		3264880	4					
ANR	3264918	Condition	! job_id	4775:5:128083:128089	3264880	0	True				
ANR	3264919	UnaryOperationExpression	! job_id		3264880	0					
ANR	3264920	UnaryOperator	!		3264880	0					
ANR	3264921	Identifier	job_id		3264880	1					
ANR	3264922	ExpressionStatement	job_id = NULLSTRING	4775:14:128092:128109	3264880	1	True				
ANR	3264923	AssignmentExpression	job_id = NULLSTRING		3264880	0		=			
ANR	3264924	Identifier	job_id		3264880	0					
ANR	3264925	Identifier	NULLSTRING		3264880	1					
ANR	3264926	IdentifierDeclStatement	std :: string reqline ;	4776:1:128112:128131	3264880	5	True				
ANR	3264927	IdentifierDecl	reqline		3264880	0					
ANR	3264928	IdentifierDeclType	std :: string		3264880	0					
ANR	3264929	Identifier	reqline		3264880	1					
ANR	3264930	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4777:1:128134:128183	3264880	6	True				
ANR	3264931	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3264880	0					
ANR	3264932	IdentifierDeclType	char *		3264880	0					
ANR	3264933	Identifier	esc1		3264880	1					
ANR	3264934	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3264880	2		=			
ANR	3264935	Identifier	esc1		3264880	0					
ANR	3264936	CallExpression	strdup ( escapeGahpString ( hostname ) )		3264880	1					
ANR	3264937	Callee	strdup		3264880	0					
ANR	3264938	Identifier	strdup		3264880	0					
ANR	3264939	ArgumentList	escapeGahpString ( hostname )		3264880	1					
ANR	3264940	Argument	escapeGahpString ( hostname )		3264880	0					
ANR	3264941	CallExpression	escapeGahpString ( hostname )		3264880	0					
ANR	3264942	Callee	escapeGahpString		3264880	0					
ANR	3264943	Identifier	escapeGahpString		3264880	0					
ANR	3264944	ArgumentList	hostname		3264880	1					
ANR	3264945	Argument	hostname		3264880	0					
ANR	3264946	Identifier	hostname		3264880	0					
ANR	3264947	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	4778:1:128186:128233	3264880	7	True				
ANR	3264948	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3264880	0					
ANR	3264949	IdentifierDeclType	char *		3264880	0					
ANR	3264950	Identifier	esc2		3264880	1					
ANR	3264951	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3264880	2		=			
ANR	3264952	Identifier	esc2		3264880	0					
ANR	3264953	CallExpression	strdup ( escapeGahpString ( job_id ) )		3264880	1					
ANR	3264954	Callee	strdup		3264880	0					
ANR	3264955	Identifier	strdup		3264880	0					
ANR	3264956	ArgumentList	escapeGahpString ( job_id )		3264880	1					
ANR	3264957	Argument	escapeGahpString ( job_id )		3264880	0					
ANR	3264958	CallExpression	escapeGahpString ( job_id )		3264880	0					
ANR	3264959	Callee	escapeGahpString		3264880	0					
ANR	3264960	Identifier	escapeGahpString		3264880	0					
ANR	3264961	ArgumentList	job_id		3264880	1					
ANR	3264962	Argument	job_id		3264880	0					
ANR	3264963	Identifier	job_id		3264880	0					
ANR	3264964	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) ) ;"	4779:1:128236:128300	3264880	8	True				
ANR	3264965	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) )"		3264880	0					
ANR	3264966	IdentifierDeclType	int		3264880	0					
ANR	3264967	Identifier	x		3264880	1					
ANR	3264968	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) )"		3264880	2		=			
ANR	3264969	Identifier	x		3264880	0					
ANR	3264970	CallExpression	"sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , files . number ( ) )"		3264880	1					
ANR	3264971	Callee	sprintf		3264880	0					
ANR	3264972	Identifier	sprintf		3264880	0					
ANR	3264973	ArgumentList	reqline		3264880	1					
ANR	3264974	Argument	reqline		3264880	0					
ANR	3264975	Identifier	reqline		3264880	0					
ANR	3264976	Argument	"""%s %s %d"""		3264880	1					
ANR	3264977	PrimaryExpression	"""%s %s %d"""		3264880	0					
ANR	3264978	Argument	esc1		3264880	2					
ANR	3264979	Identifier	esc1		3264880	0					
ANR	3264980	Argument	esc2		3264880	3					
ANR	3264981	Identifier	esc2		3264880	0					
ANR	3264982	Argument	files . number ( )		3264880	4					
ANR	3264983	CallExpression	files . number ( )		3264880	0					
ANR	3264984	Callee	files . number		3264880	0					
ANR	3264985	MemberAccess	files . number		3264880	0					
ANR	3264986	Identifier	files		3264880	0					
ANR	3264987	Identifier	number		3264880	1					
ANR	3264988	ArgumentList			3264880	1					
ANR	3264989	ExpressionStatement	free ( esc1 )	4780:1:128303:128315	3264880	9	True				
ANR	3264990	CallExpression	free ( esc1 )		3264880	0					
ANR	3264991	Callee	free		3264880	0					
ANR	3264992	Identifier	free		3264880	0					
ANR	3264993	ArgumentList	esc1		3264880	1					
ANR	3264994	Argument	esc1		3264880	0					
ANR	3264995	Identifier	esc1		3264880	0					
ANR	3264996	ExpressionStatement	free ( esc2 )	4781:1:128318:128330	3264880	10	True				
ANR	3264997	CallExpression	free ( esc2 )		3264880	0					
ANR	3264998	Callee	free		3264880	0					
ANR	3264999	Identifier	free		3264880	0					
ANR	3265000	ArgumentList	esc2		3264880	1					
ANR	3265001	Argument	esc2		3264880	0					
ANR	3265002	Identifier	esc2		3264880	0					
ANR	3265003	ExpressionStatement	ASSERT ( x > 0 )	4782:1:128333:128348	3264880	11	True				
ANR	3265004	CallExpression	ASSERT ( x > 0 )		3264880	0					
ANR	3265005	Callee	ASSERT		3264880	0					
ANR	3265006	Identifier	ASSERT		3264880	0					
ANR	3265007	ArgumentList	x > 0		3264880	1					
ANR	3265008	Argument	x > 0		3264880	0					
ANR	3265009	RelationalExpression	x > 0		3264880	0		>			
ANR	3265010	Identifier	x		3264880	0					
ANR	3265011	PrimaryExpression	0		3264880	1					
ANR	3265012	IdentifierDeclStatement	int cnt = 0 ;	4783:1:128351:128362	3264880	12	True				
ANR	3265013	IdentifierDecl	cnt = 0		3264880	0					
ANR	3265014	IdentifierDeclType	int		3264880	0					
ANR	3265015	Identifier	cnt		3264880	1					
ANR	3265016	AssignmentExpression	cnt = 0		3264880	2		=			
ANR	3265017	Identifier	cnt		3264880	0					
ANR	3265018	PrimaryExpression	0		3264880	1					
ANR	3265019	IdentifierDeclStatement	const char * filename ;	4784:1:128365:128385	3264880	13	True				
ANR	3265020	IdentifierDecl	* filename		3264880	0					
ANR	3265021	IdentifierDeclType	const char *		3264880	0					
ANR	3265022	Identifier	filename		3264880	1					
ANR	3265023	ExpressionStatement	files . rewind ( )	4785:1:128388:128402	3264880	14	True				
ANR	3265024	CallExpression	files . rewind ( )		3264880	0					
ANR	3265025	Callee	files . rewind		3264880	0					
ANR	3265026	MemberAccess	files . rewind		3264880	0					
ANR	3265027	Identifier	files		3264880	0					
ANR	3265028	Identifier	rewind		3264880	1					
ANR	3265029	ArgumentList			3264880	1					
ANR	3265030	WhileStatement	while ( ( filename = files . next ( ) ) )		3264880	15					
ANR	3265031	Condition	filename = files . next ( )	4786:9:128413:128437	3264880	0	True				
ANR	3265032	AssignmentExpression	filename = files . next ( )		3264880	0		=			
ANR	3265033	Identifier	filename		3264880	0					
ANR	3265034	CallExpression	files . next ( )		3264880	1					
ANR	3265035	Callee	files . next		3264880	0					
ANR	3265036	MemberAccess	files . next		3264880	0					
ANR	3265037	Identifier	files		3264880	0					
ANR	3265038	Identifier	next		3264880	1					
ANR	3265039	ArgumentList			3264880	1					
ANR	3265040	CompoundStatement		22:37:641:641	3264880	1					
ANR	3265041	ExpressionStatement	"sprintf_cat ( reqline , "" %s"" , filename )"	4787:2:128445:128481	3264880	0	True				
ANR	3265042	CallExpression	"sprintf_cat ( reqline , "" %s"" , filename )"		3264880	0					
ANR	3265043	Callee	sprintf_cat		3264880	0					
ANR	3265044	Identifier	sprintf_cat		3264880	0					
ANR	3265045	ArgumentList	reqline		3264880	1					
ANR	3265046	Argument	reqline		3264880	0					
ANR	3265047	Identifier	reqline		3264880	0					
ANR	3265048	Argument	""" %s"""		3264880	1					
ANR	3265049	PrimaryExpression	""" %s"""		3264880	0					
ANR	3265050	Argument	filename		3264880	2					
ANR	3265051	Identifier	filename		3264880	0					
ANR	3265052	ExpressionStatement	cnt ++	4788:2:128485:128490	3264880	1	True				
ANR	3265053	PostIncDecOperationExpression	cnt ++		3264880	0					
ANR	3265054	Identifier	cnt		3264880	0					
ANR	3265055	IncDec	++		3264880	1					
ANR	3265056	ExpressionStatement	ASSERT ( cnt == files . number ( ) )	4790:1:128496:128527	3264880	16	True				
ANR	3265057	CallExpression	ASSERT ( cnt == files . number ( ) )		3264880	0					
ANR	3265058	Callee	ASSERT		3264880	0					
ANR	3265059	Identifier	ASSERT		3264880	0					
ANR	3265060	ArgumentList	cnt == files . number ( )		3264880	1					
ANR	3265061	Argument	cnt == files . number ( )		3264880	0					
ANR	3265062	EqualityExpression	cnt == files . number ( )		3264880	0		==			
ANR	3265063	Identifier	cnt		3264880	0					
ANR	3265064	CallExpression	files . number ( )		3264880	1					
ANR	3265065	Callee	files . number		3264880	0					
ANR	3265066	MemberAccess	files . number		3264880	0					
ANR	3265067	Identifier	files		3264880	0					
ANR	3265068	Identifier	number		3264880	1					
ANR	3265069	ArgumentList			3264880	1					
ANR	3265070	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4791:1:128530:128563	3264880	17	True				
ANR	3265071	IdentifierDecl	* buf = reqline . c_str ( )		3264880	0					
ANR	3265072	IdentifierDeclType	const char *		3264880	0					
ANR	3265073	Identifier	buf		3264880	1					
ANR	3265074	AssignmentExpression	* buf = reqline . c_str ( )		3264880	2		=			
ANR	3265075	Identifier	buf		3264880	0					
ANR	3265076	CallExpression	reqline . c_str ( )		3264880	1					
ANR	3265077	Callee	reqline . c_str		3264880	0					
ANR	3265078	MemberAccess	reqline . c_str		3264880	0					
ANR	3265079	Identifier	reqline		3264880	0					
ANR	3265080	Identifier	c_str		3264880	1					
ANR	3265081	ArgumentList			3264880	1					
ANR	3265082	IfStatement	"if ( ! is_pending ( command , buf ) )"		3264880	18					
ANR	3265083	Condition	"! is_pending ( command , buf )"	4795:6:128664:128687	3264880	0	True				
ANR	3265084	UnaryOperationExpression	"! is_pending ( command , buf )"		3264880	0					
ANR	3265085	UnaryOperator	!		3264880	0					
ANR	3265086	CallExpression	"is_pending ( command , buf )"		3264880	1					
ANR	3265087	Callee	is_pending		3264880	0					
ANR	3265088	Identifier	is_pending		3264880	0					
ANR	3265089	ArgumentList	command		3264880	1					
ANR	3265090	Argument	command		3264880	0					
ANR	3265091	Identifier	command		3264880	0					
ANR	3265092	Argument	buf		3264880	1					
ANR	3265093	Identifier	buf		3264880	0					
ANR	3265094	CompoundStatement		31:33:891:891	3264880	1					
ANR	3265095	IfStatement	if ( m_mode == results_only )		3264880	0					
ANR	3265096	Condition	m_mode == results_only	4798:7:128796:128817	3264880	0	True				
ANR	3265097	EqualityExpression	m_mode == results_only		3264880	0		==			
ANR	3265098	Identifier	m_mode		3264880	0					
ANR	3265099	Identifier	results_only		3264880	1					
ANR	3265100	CompoundStatement		34:32:1021:1021	3264880	1					
ANR	3265101	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4799:3:128826:128865	3264880	0	True				
ANR	3265102	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3264880	0					
ANR	3265103	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4801:2:128873:128909	3264880	1	True				
ANR	3265104	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3264880	0					
ANR	3265105	Callee	now_pending		3264880	0					
ANR	3265106	Identifier	now_pending		3264880	0					
ANR	3265107	ArgumentList	command		3264880	1					
ANR	3265108	Argument	command		3264880	0					
ANR	3265109	Identifier	command		3264880	0					
ANR	3265110	Argument	buf		3264880	1					
ANR	3265111	Identifier	buf		3264880	0					
ANR	3265112	Argument	deleg_proxy		3264880	2					
ANR	3265113	Identifier	deleg_proxy		3264880	0					
ANR	3265114	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4807:1:129003:129054	3264880	19	True				
ANR	3265115	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3264880	0					
ANR	3265116	IdentifierDeclType	Gahp_Args *		3264880	0					
ANR	3265117	Identifier	result		3264880	1					
ANR	3265118	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3264880	2		=			
ANR	3265119	Identifier	result		3264880	0					
ANR	3265120	CallExpression	"get_pending_result ( command , buf )"		3264880	1					
ANR	3265121	Callee	get_pending_result		3264880	0					
ANR	3265122	Identifier	get_pending_result		3264880	0					
ANR	3265123	ArgumentList	command		3264880	1					
ANR	3265124	Argument	command		3264880	0					
ANR	3265125	Identifier	command		3264880	0					
ANR	3265126	Argument	buf		3264880	1					
ANR	3265127	Identifier	buf		3264880	0					
ANR	3265128	IfStatement	if ( result )		3264880	20					
ANR	3265129	Condition	result	4808:6:129062:129067	3264880	0	True				
ANR	3265130	Identifier	result		3264880	0					
ANR	3265131	CompoundStatement		49:2:1366:1396	3264880	1					
ANR	3265132	IfStatement	if ( result -> argc != 3 )		3264880	0					
ANR	3265133	Condition	result -> argc != 3	4810:6:129103:129119	3264880	0	True				
ANR	3265134	EqualityExpression	result -> argc != 3		3264880	0		!=			
ANR	3265135	PtrMemberAccess	result -> argc		3264880	0					
ANR	3265136	Identifier	result		3264880	0					
ANR	3265137	Identifier	argc		3264880	1					
ANR	3265138	PrimaryExpression	3		3264880	1					
ANR	3265139	CompoundStatement		46:25:1322:1322	3264880	1					
ANR	3265140	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4811:3:129127:129158	3264880	0	True				
ANR	3265141	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3264880	0					
ANR	3265142	Callee	EXCEPT		3264880	0					
ANR	3265143	Identifier	EXCEPT		3264880	0					
ANR	3265144	ArgumentList	"""Bad %s Result"""		3264880	1					
ANR	3265145	Argument	"""Bad %s Result"""		3264880	0					
ANR	3265146	PrimaryExpression	"""Bad %s Result"""		3264880	0					
ANR	3265147	Argument	command		3264880	1					
ANR	3265148	Identifier	command		3264880	0					
ANR	3265149	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4813:2:129166:129196	3264880	1	True				
ANR	3265150	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3264880	0					
ANR	3265151	IdentifierDeclType	int		3264880	0					
ANR	3265152	Identifier	rc		3264880	1					
ANR	3265153	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3264880	2		=			
ANR	3265154	Identifier	rc		3264880	0					
ANR	3265155	CallExpression	atoi ( result -> argv [ 1 ] )		3264880	1					
ANR	3265156	Callee	atoi		3264880	0					
ANR	3265157	Identifier	atoi		3264880	0					
ANR	3265158	ArgumentList	result -> argv [ 1 ]		3264880	1					
ANR	3265159	Argument	result -> argv [ 1 ]		3264880	0					
ANR	3265160	ArrayIndexing	result -> argv [ 1 ]		3264880	0					
ANR	3265161	PtrMemberAccess	result -> argv		3264880	0					
ANR	3265162	Identifier	result		3264880	0					
ANR	3265163	Identifier	argv		3264880	1					
ANR	3265164	PrimaryExpression	1		3264880	1					
ANR	3265165	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3264880	2					
ANR	3265166	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4814:7:129205:129243	3264880	0	True				
ANR	3265167	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3264880	0					
ANR	3265168	Callee	strcasecmp		3264880	0					
ANR	3265169	Identifier	strcasecmp		3264880	0					
ANR	3265170	ArgumentList	result -> argv [ 2 ]		3264880	1					
ANR	3265171	Argument	result -> argv [ 2 ]		3264880	0					
ANR	3265172	ArrayIndexing	result -> argv [ 2 ]		3264880	0					
ANR	3265173	PtrMemberAccess	result -> argv		3264880	0					
ANR	3265174	Identifier	result		3264880	0					
ANR	3265175	Identifier	argv		3264880	1					
ANR	3265176	PrimaryExpression	2		3264880	1					
ANR	3265177	Argument	NULLSTRING		3264880	1					
ANR	3265178	Identifier	NULLSTRING		3264880	0					
ANR	3265179	CompoundStatement		50:49:1447:1447	3264880	1					
ANR	3265180	ExpressionStatement	error_string = result -> argv [ 2 ]	4815:3:129252:129282	3264880	0	True				
ANR	3265181	AssignmentExpression	error_string = result -> argv [ 2 ]		3264880	0		=			
ANR	3265182	Identifier	error_string		3264880	0					
ANR	3265183	ArrayIndexing	result -> argv [ 2 ]		3264880	1					
ANR	3265184	PtrMemberAccess	result -> argv		3264880	0					
ANR	3265185	Identifier	result		3264880	0					
ANR	3265186	Identifier	argv		3264880	1					
ANR	3265187	PrimaryExpression	2		3264880	1					
ANR	3265188	ElseStatement	else		3264880	0					
ANR	3265189	CompoundStatement		52:9:1493:1493	3264880	0					
ANR	3265190	ExpressionStatement	"error_string = """""	4817:3:129298:129315	3264880	0	True				
ANR	3265191	AssignmentExpression	"error_string = """""		3264880	0		=			
ANR	3265192	Identifier	error_string		3264880	0					
ANR	3265193	PrimaryExpression	""""""		3264880	1					
ANR	3265194	Statement	delete	4819:2:129323:129328	3264880	3	True				
ANR	3265195	ExpressionStatement	result	4819:9:129330:129336	3264880	4	True				
ANR	3265196	Identifier	result		3264880	0					
ANR	3265197	ReturnStatement	return rc ;	4820:2:129340:129349	3264880	5	True				
ANR	3265198	Identifier	rc		3264880	0					
ANR	3265199	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3264880	21					
ANR	3265200	Condition	"check_pending_timeout ( command , buf )"	4824:6:129406:129439	3264880	0	True				
ANR	3265201	CallExpression	"check_pending_timeout ( command , buf )"		3264880	0					
ANR	3265202	Callee	check_pending_timeout		3264880	0					
ANR	3265203	Identifier	check_pending_timeout		3264880	0					
ANR	3265204	ArgumentList	command		3264880	1					
ANR	3265205	Argument	command		3264880	0					
ANR	3265206	Identifier	command		3264880	0					
ANR	3265207	Argument	buf		3264880	1					
ANR	3265208	Identifier	buf		3264880	0					
ANR	3265209	CompoundStatement		60:43:1643:1643	3264880	1					
ANR	3265210	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4826:2:129479:129527	3264880	0	True				
ANR	3265211	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3264880	0					
ANR	3265212	Callee	sprintf		3264880	0					
ANR	3265213	Identifier	sprintf		3264880	0					
ANR	3265214	ArgumentList	error_string		3264880	1					
ANR	3265215	Argument	error_string		3264880	0					
ANR	3265216	Identifier	error_string		3264880	0					
ANR	3265217	Argument	"""%s timed out"""		3264880	1					
ANR	3265218	PrimaryExpression	"""%s timed out"""		3264880	0					
ANR	3265219	Argument	command		3264880	2					
ANR	3265220	Identifier	command		3264880	0					
ANR	3265221	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4827:2:129531:129566	3264880	1	True				
ANR	3265222	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3264880	0					
ANR	3265223	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4831:1:129626:129659	3264880	22	True				
ANR	3265224	Identifier	GAHPCLIENT_COMMAND_PENDING		3264880	0					
ANR	3265225	ReturnType	int		3264880	1					
ANR	3265226	Identifier	GahpClient :: nordugrid_stage_out		3264880	2					
ANR	3265227	ParameterList	"const char * hostname , const char * job_id , StringList & files"		3264880	3					
ANR	3265228	Parameter	const char * hostname	4763:32:127730:127749	3264880	0	True				
ANR	3265229	ParameterType	const char *		3264880	0					
ANR	3265230	Identifier	hostname		3264880	1					
ANR	3265231	Parameter	const char * job_id	4763:54:127752:127769	3264880	1	True				
ANR	3265232	ParameterType	const char *		3264880	0					
ANR	3265233	Identifier	job_id		3264880	1					
ANR	3265234	Parameter	StringList & files	4764:8:127780:127796	3264880	2	True				
ANR	3265235	ParameterType	StringList &		3264880	0					
ANR	3265236	Identifier	files		3264880	1					
ANR	3265237	CFGEntryNode	ENTRY		3264880		True				
ANR	3265238	CFGExitNode	EXIT		3264880		True				
ANR	3265239	Symbol	server		3264880						
ANR	3265240	Symbol	server -> m_commands_supported		3264880						
ANR	3265241	Symbol	escapeGahpString		3264880						
ANR	3265242	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3264880						
ANR	3265243	Symbol	* server		3264880						
ANR	3265244	Symbol	reqline . c_str		3264880						
ANR	3265245	Symbol	results_only		3264880						
ANR	3265246	Symbol	result -> argv		3264880						
ANR	3265247	Symbol	* server -> m_commands_supported		3264880						
ANR	3265248	Symbol	sprintf		3264880						
ANR	3265249	Symbol	result		3264880						
ANR	3265250	Symbol	hostname		3264880						
ANR	3265251	Symbol	* result		3264880						
ANR	3265252	Symbol	server -> m_commands_supported -> contains_anycase		3264880						
ANR	3265253	Symbol	GAHPCLIENT_COMMAND_PENDING		3264880						
ANR	3265254	Symbol	reqline		3264880						
ANR	3265255	Symbol	files . next		3264880						
ANR	3265256	Symbol	m_mode		3264880						
ANR	3265257	Symbol	strcasecmp		3264880						
ANR	3265258	Symbol	* result -> argv		3264880						
ANR	3265259	Symbol	atoi		3264880						
ANR	3265260	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3264880						
ANR	3265261	Symbol	cnt		3264880						
ANR	3265262	Symbol	* * result		3264880						
ANR	3265263	Symbol	NULLSTRING		3264880						
ANR	3265264	Symbol	command		3264880						
ANR	3265265	Symbol	files . number		3264880						
ANR	3265266	Symbol	get_pending_result		3264880						
ANR	3265267	Symbol	rc		3264880						
ANR	3265268	Symbol	error_string		3264880						
ANR	3265269	Symbol	esc2		3264880						
ANR	3265270	Symbol	buf		3264880						
ANR	3265271	Symbol	esc1		3264880						
ANR	3265272	Symbol	filename		3264880						
ANR	3265273	Symbol	job_id		3264880						
ANR	3265274	Symbol	x		3264880						
ANR	3265275	Symbol	result -> argc		3264880						
ANR	3265276	Symbol	files		3264880						
ANR	3265277	Symbol	* * server		3264880						
ANR	3265278	Symbol	FALSE		3264880						
ANR	3265279	Symbol	strdup		3264880						
ANR	3265280	Symbol	check_pending_timeout		3264880						
ANR	3265281	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3264880						
ANR	3265282	Symbol	is_pending		3264880						
ANR	3265283	Symbol	deleg_proxy		3264880						
ANR	3265284	Function	GahpClient :: nordugrid_stage_out2	4834:0:129664:131957							
ANR	3265285	FunctionDef	"GahpClient :: nordugrid_stage_out2 (const char * hostname , const char * job_id , StringList & src_files , StringList & dest_files)"		3265284	0					
ANR	3265286	CompoundStatement		4837:0:129799:131957	3265284	0					
ANR	3265287	Statement	static	4838:1:129802:129807	3265284	0	True				
ANR	3265288	IdentifierDeclStatement	"const char * command = ""NORDUGRID_STAGE_OUT2"" ;"	4838:8:129809:129853	3265284	1	True				
ANR	3265289	IdentifierDecl	"* command = ""NORDUGRID_STAGE_OUT2"""		3265284	0					
ANR	3265290	IdentifierDeclType	const char *		3265284	0					
ANR	3265291	Identifier	command		3265284	1					
ANR	3265292	AssignmentExpression	"* command = ""NORDUGRID_STAGE_OUT2"""		3265284	2		=			
ANR	3265293	Identifier	command		3265284	0					
ANR	3265294	PrimaryExpression	"""NORDUGRID_STAGE_OUT2"""		3265284	1					
ANR	3265295	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3265284	2					
ANR	3265296	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4841:6:129902:129963	3265284	0	True				
ANR	3265297	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3265284	0		==			
ANR	3265298	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3265284	0					
ANR	3265299	Callee	server -> m_commands_supported -> contains_anycase		3265284	0					
ANR	3265300	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3265284	0					
ANR	3265301	PtrMemberAccess	server -> m_commands_supported		3265284	0					
ANR	3265302	Identifier	server		3265284	0					
ANR	3265303	Identifier	m_commands_supported		3265284	1					
ANR	3265304	Identifier	contains_anycase		3265284	1					
ANR	3265305	ArgumentList	command		3265284	1					
ANR	3265306	Argument	command		3265284	0					
ANR	3265307	Identifier	command		3265284	0					
ANR	3265308	Identifier	FALSE		3265284	1					
ANR	3265309	CompoundStatement		5:70:166:166	3265284	1					
ANR	3265310	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4842:2:129970:130009	3265284	0	True				
ANR	3265311	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3265284	0					
ANR	3265312	IfStatement	if ( ! hostname )		3265284	3					
ANR	3265313	Condition	! hostname	4846:5:130047:130055	3265284	0	True				
ANR	3265314	UnaryOperationExpression	! hostname		3265284	0					
ANR	3265315	UnaryOperator	!		3265284	0					
ANR	3265316	Identifier	hostname		3265284	1					
ANR	3265317	ExpressionStatement	hostname = NULLSTRING	4846:16:130058:130077	3265284	1	True				
ANR	3265318	AssignmentExpression	hostname = NULLSTRING		3265284	0		=			
ANR	3265319	Identifier	hostname		3265284	0					
ANR	3265320	Identifier	NULLSTRING		3265284	1					
ANR	3265321	IfStatement	if ( ! job_id )		3265284	4					
ANR	3265322	Condition	! job_id	4847:5:130084:130090	3265284	0	True				
ANR	3265323	UnaryOperationExpression	! job_id		3265284	0					
ANR	3265324	UnaryOperator	!		3265284	0					
ANR	3265325	Identifier	job_id		3265284	1					
ANR	3265326	ExpressionStatement	job_id = NULLSTRING	4847:14:130093:130110	3265284	1	True				
ANR	3265327	AssignmentExpression	job_id = NULLSTRING		3265284	0		=			
ANR	3265328	Identifier	job_id		3265284	0					
ANR	3265329	Identifier	NULLSTRING		3265284	1					
ANR	3265330	IdentifierDeclStatement	std :: string reqline ;	4848:1:130113:130132	3265284	5	True				
ANR	3265331	IdentifierDecl	reqline		3265284	0					
ANR	3265332	IdentifierDeclType	std :: string		3265284	0					
ANR	3265333	Identifier	reqline		3265284	1					
ANR	3265334	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4849:1:130135:130184	3265284	6	True				
ANR	3265335	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3265284	0					
ANR	3265336	IdentifierDeclType	char *		3265284	0					
ANR	3265337	Identifier	esc1		3265284	1					
ANR	3265338	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3265284	2		=			
ANR	3265339	Identifier	esc1		3265284	0					
ANR	3265340	CallExpression	strdup ( escapeGahpString ( hostname ) )		3265284	1					
ANR	3265341	Callee	strdup		3265284	0					
ANR	3265342	Identifier	strdup		3265284	0					
ANR	3265343	ArgumentList	escapeGahpString ( hostname )		3265284	1					
ANR	3265344	Argument	escapeGahpString ( hostname )		3265284	0					
ANR	3265345	CallExpression	escapeGahpString ( hostname )		3265284	0					
ANR	3265346	Callee	escapeGahpString		3265284	0					
ANR	3265347	Identifier	escapeGahpString		3265284	0					
ANR	3265348	ArgumentList	hostname		3265284	1					
ANR	3265349	Argument	hostname		3265284	0					
ANR	3265350	Identifier	hostname		3265284	0					
ANR	3265351	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	4850:1:130187:130234	3265284	7	True				
ANR	3265352	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3265284	0					
ANR	3265353	IdentifierDeclType	char *		3265284	0					
ANR	3265354	Identifier	esc2		3265284	1					
ANR	3265355	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3265284	2		=			
ANR	3265356	Identifier	esc2		3265284	0					
ANR	3265357	CallExpression	strdup ( escapeGahpString ( job_id ) )		3265284	1					
ANR	3265358	Callee	strdup		3265284	0					
ANR	3265359	Identifier	strdup		3265284	0					
ANR	3265360	ArgumentList	escapeGahpString ( job_id )		3265284	1					
ANR	3265361	Argument	escapeGahpString ( job_id )		3265284	0					
ANR	3265362	CallExpression	escapeGahpString ( job_id )		3265284	0					
ANR	3265363	Callee	escapeGahpString		3265284	0					
ANR	3265364	Identifier	escapeGahpString		3265284	0					
ANR	3265365	ArgumentList	job_id		3265284	1					
ANR	3265366	Argument	job_id		3265284	0					
ANR	3265367	Identifier	job_id		3265284	0					
ANR	3265368	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , src_files . number ( ) ) ;"	4851:1:130237:130305	3265284	8	True				
ANR	3265369	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , src_files . number ( ) )"		3265284	0					
ANR	3265370	IdentifierDeclType	int		3265284	0					
ANR	3265371	Identifier	x		3265284	1					
ANR	3265372	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , src_files . number ( ) )"		3265284	2		=			
ANR	3265373	Identifier	x		3265284	0					
ANR	3265374	CallExpression	"sprintf ( reqline , ""%s %s %d"" , esc1 , esc2 , src_files . number ( ) )"		3265284	1					
ANR	3265375	Callee	sprintf		3265284	0					
ANR	3265376	Identifier	sprintf		3265284	0					
ANR	3265377	ArgumentList	reqline		3265284	1					
ANR	3265378	Argument	reqline		3265284	0					
ANR	3265379	Identifier	reqline		3265284	0					
ANR	3265380	Argument	"""%s %s %d"""		3265284	1					
ANR	3265381	PrimaryExpression	"""%s %s %d"""		3265284	0					
ANR	3265382	Argument	esc1		3265284	2					
ANR	3265383	Identifier	esc1		3265284	0					
ANR	3265384	Argument	esc2		3265284	3					
ANR	3265385	Identifier	esc2		3265284	0					
ANR	3265386	Argument	src_files . number ( )		3265284	4					
ANR	3265387	CallExpression	src_files . number ( )		3265284	0					
ANR	3265388	Callee	src_files . number		3265284	0					
ANR	3265389	MemberAccess	src_files . number		3265284	0					
ANR	3265390	Identifier	src_files		3265284	0					
ANR	3265391	Identifier	number		3265284	1					
ANR	3265392	ArgumentList			3265284	1					
ANR	3265393	ExpressionStatement	free ( esc1 )	4852:1:130308:130320	3265284	9	True				
ANR	3265394	CallExpression	free ( esc1 )		3265284	0					
ANR	3265395	Callee	free		3265284	0					
ANR	3265396	Identifier	free		3265284	0					
ANR	3265397	ArgumentList	esc1		3265284	1					
ANR	3265398	Argument	esc1		3265284	0					
ANR	3265399	Identifier	esc1		3265284	0					
ANR	3265400	ExpressionStatement	free ( esc2 )	4853:1:130323:130335	3265284	10	True				
ANR	3265401	CallExpression	free ( esc2 )		3265284	0					
ANR	3265402	Callee	free		3265284	0					
ANR	3265403	Identifier	free		3265284	0					
ANR	3265404	ArgumentList	esc2		3265284	1					
ANR	3265405	Argument	esc2		3265284	0					
ANR	3265406	Identifier	esc2		3265284	0					
ANR	3265407	ExpressionStatement	ASSERT ( x > 0 )	4854:1:130338:130353	3265284	11	True				
ANR	3265408	CallExpression	ASSERT ( x > 0 )		3265284	0					
ANR	3265409	Callee	ASSERT		3265284	0					
ANR	3265410	Identifier	ASSERT		3265284	0					
ANR	3265411	ArgumentList	x > 0		3265284	1					
ANR	3265412	Argument	x > 0		3265284	0					
ANR	3265413	RelationalExpression	x > 0		3265284	0		>			
ANR	3265414	Identifier	x		3265284	0					
ANR	3265415	PrimaryExpression	0		3265284	1					
ANR	3265416	IdentifierDeclStatement	int cnt = 0 ;	4855:1:130356:130367	3265284	12	True				
ANR	3265417	IdentifierDecl	cnt = 0		3265284	0					
ANR	3265418	IdentifierDeclType	int		3265284	0					
ANR	3265419	Identifier	cnt		3265284	1					
ANR	3265420	AssignmentExpression	cnt = 0		3265284	2		=			
ANR	3265421	Identifier	cnt		3265284	0					
ANR	3265422	PrimaryExpression	0		3265284	1					
ANR	3265423	IdentifierDeclStatement	const char * src_filename ;	4856:1:130370:130394	3265284	13	True				
ANR	3265424	IdentifierDecl	* src_filename		3265284	0					
ANR	3265425	IdentifierDeclType	const char *		3265284	0					
ANR	3265426	Identifier	src_filename		3265284	1					
ANR	3265427	IdentifierDeclStatement	const char * dest_filename ;	4857:1:130397:130422	3265284	14	True				
ANR	3265428	IdentifierDecl	* dest_filename		3265284	0					
ANR	3265429	IdentifierDeclType	const char *		3265284	0					
ANR	3265430	Identifier	dest_filename		3265284	1					
ANR	3265431	ExpressionStatement	src_files . rewind ( )	4858:1:130425:130443	3265284	15	True				
ANR	3265432	CallExpression	src_files . rewind ( )		3265284	0					
ANR	3265433	Callee	src_files . rewind		3265284	0					
ANR	3265434	MemberAccess	src_files . rewind		3265284	0					
ANR	3265435	Identifier	src_files		3265284	0					
ANR	3265436	Identifier	rewind		3265284	1					
ANR	3265437	ArgumentList			3265284	1					
ANR	3265438	ExpressionStatement	dest_files . rewind ( )	4859:1:130446:130465	3265284	16	True				
ANR	3265439	CallExpression	dest_files . rewind ( )		3265284	0					
ANR	3265440	Callee	dest_files . rewind		3265284	0					
ANR	3265441	MemberAccess	dest_files . rewind		3265284	0					
ANR	3265442	Identifier	dest_files		3265284	0					
ANR	3265443	Identifier	rewind		3265284	1					
ANR	3265444	ArgumentList			3265284	1					
ANR	3265445	WhileStatement	while ( ( src_filename = src_files . next ( ) ) && ( dest_filename = dest_files . next ( ) ) )		3265284	17					
ANR	3265446	Condition	( src_filename = src_files . next ( ) ) && ( dest_filename = dest_files . next ( ) )	4860:9:130476:130550	3265284	0	True				
ANR	3265447	AndExpression	( src_filename = src_files . next ( ) ) && ( dest_filename = dest_files . next ( ) )		3265284	0		&&			
ANR	3265448	AssignmentExpression	src_filename = src_files . next ( )		3265284	0		=			
ANR	3265449	Identifier	src_filename		3265284	0					
ANR	3265450	CallExpression	src_files . next ( )		3265284	1					
ANR	3265451	Callee	src_files . next		3265284	0					
ANR	3265452	MemberAccess	src_files . next		3265284	0					
ANR	3265453	Identifier	src_files		3265284	0					
ANR	3265454	Identifier	next		3265284	1					
ANR	3265455	ArgumentList			3265284	1					
ANR	3265456	AssignmentExpression	dest_filename = dest_files . next ( )		3265284	1		=			
ANR	3265457	Identifier	dest_filename		3265284	0					
ANR	3265458	CallExpression	dest_files . next ( )		3265284	1					
ANR	3265459	Callee	dest_files . next		3265284	0					
ANR	3265460	MemberAccess	dest_files . next		3265284	0					
ANR	3265461	Identifier	dest_files		3265284	0					
ANR	3265462	Identifier	next		3265284	1					
ANR	3265463	ArgumentList			3265284	1					
ANR	3265464	CompoundStatement		25:41:754:754	3265284	1					
ANR	3265465	ExpressionStatement	esc1 = strdup ( escapeGahpString ( src_filename ) )	4862:2:130558:130605	3265284	0	True				
ANR	3265466	AssignmentExpression	esc1 = strdup ( escapeGahpString ( src_filename ) )		3265284	0		=			
ANR	3265467	Identifier	esc1		3265284	0					
ANR	3265468	CallExpression	strdup ( escapeGahpString ( src_filename ) )		3265284	1					
ANR	3265469	Callee	strdup		3265284	0					
ANR	3265470	Identifier	strdup		3265284	0					
ANR	3265471	ArgumentList	escapeGahpString ( src_filename )		3265284	1					
ANR	3265472	Argument	escapeGahpString ( src_filename )		3265284	0					
ANR	3265473	CallExpression	escapeGahpString ( src_filename )		3265284	0					
ANR	3265474	Callee	escapeGahpString		3265284	0					
ANR	3265475	Identifier	escapeGahpString		3265284	0					
ANR	3265476	ArgumentList	src_filename		3265284	1					
ANR	3265477	Argument	src_filename		3265284	0					
ANR	3265478	Identifier	src_filename		3265284	0					
ANR	3265479	ExpressionStatement	esc2 = strdup ( escapeGahpString ( dest_filename ) )	4863:2:130609:130657	3265284	1	True				
ANR	3265480	AssignmentExpression	esc2 = strdup ( escapeGahpString ( dest_filename ) )		3265284	0		=			
ANR	3265481	Identifier	esc2		3265284	0					
ANR	3265482	CallExpression	strdup ( escapeGahpString ( dest_filename ) )		3265284	1					
ANR	3265483	Callee	strdup		3265284	0					
ANR	3265484	Identifier	strdup		3265284	0					
ANR	3265485	ArgumentList	escapeGahpString ( dest_filename )		3265284	1					
ANR	3265486	Argument	escapeGahpString ( dest_filename )		3265284	0					
ANR	3265487	CallExpression	escapeGahpString ( dest_filename )		3265284	0					
ANR	3265488	Callee	escapeGahpString		3265284	0					
ANR	3265489	Identifier	escapeGahpString		3265284	0					
ANR	3265490	ArgumentList	dest_filename		3265284	1					
ANR	3265491	Argument	dest_filename		3265284	0					
ANR	3265492	Identifier	dest_filename		3265284	0					
ANR	3265493	ExpressionStatement	"sprintf_cat ( reqline , "" %s %s"" , esc1 , esc2 )"	4864:2:130661:130702	3265284	2	True				
ANR	3265494	CallExpression	"sprintf_cat ( reqline , "" %s %s"" , esc1 , esc2 )"		3265284	0					
ANR	3265495	Callee	sprintf_cat		3265284	0					
ANR	3265496	Identifier	sprintf_cat		3265284	0					
ANR	3265497	ArgumentList	reqline		3265284	1					
ANR	3265498	Argument	reqline		3265284	0					
ANR	3265499	Identifier	reqline		3265284	0					
ANR	3265500	Argument	""" %s %s"""		3265284	1					
ANR	3265501	PrimaryExpression	""" %s %s"""		3265284	0					
ANR	3265502	Argument	esc1		3265284	2					
ANR	3265503	Identifier	esc1		3265284	0					
ANR	3265504	Argument	esc2		3265284	3					
ANR	3265505	Identifier	esc2		3265284	0					
ANR	3265506	ExpressionStatement	cnt ++	4865:2:130706:130711	3265284	3	True				
ANR	3265507	PostIncDecOperationExpression	cnt ++		3265284	0					
ANR	3265508	Identifier	cnt		3265284	0					
ANR	3265509	IncDec	++		3265284	1					
ANR	3265510	ExpressionStatement	free ( esc1 )	4866:2:130715:130727	3265284	4	True				
ANR	3265511	CallExpression	free ( esc1 )		3265284	0					
ANR	3265512	Callee	free		3265284	0					
ANR	3265513	Identifier	free		3265284	0					
ANR	3265514	ArgumentList	esc1		3265284	1					
ANR	3265515	Argument	esc1		3265284	0					
ANR	3265516	Identifier	esc1		3265284	0					
ANR	3265517	ExpressionStatement	free ( esc2 )	4867:2:130731:130743	3265284	5	True				
ANR	3265518	CallExpression	free ( esc2 )		3265284	0					
ANR	3265519	Callee	free		3265284	0					
ANR	3265520	Identifier	free		3265284	0					
ANR	3265521	ArgumentList	esc2		3265284	1					
ANR	3265522	Argument	esc2		3265284	0					
ANR	3265523	Identifier	esc2		3265284	0					
ANR	3265524	ExpressionStatement	ASSERT ( cnt == src_files . number ( ) )	4869:1:130749:130784	3265284	18	True				
ANR	3265525	CallExpression	ASSERT ( cnt == src_files . number ( ) )		3265284	0					
ANR	3265526	Callee	ASSERT		3265284	0					
ANR	3265527	Identifier	ASSERT		3265284	0					
ANR	3265528	ArgumentList	cnt == src_files . number ( )		3265284	1					
ANR	3265529	Argument	cnt == src_files . number ( )		3265284	0					
ANR	3265530	EqualityExpression	cnt == src_files . number ( )		3265284	0		==			
ANR	3265531	Identifier	cnt		3265284	0					
ANR	3265532	CallExpression	src_files . number ( )		3265284	1					
ANR	3265533	Callee	src_files . number		3265284	0					
ANR	3265534	MemberAccess	src_files . number		3265284	0					
ANR	3265535	Identifier	src_files		3265284	0					
ANR	3265536	Identifier	number		3265284	1					
ANR	3265537	ArgumentList			3265284	1					
ANR	3265538	ExpressionStatement	ASSERT ( cnt == dest_files . number ( ) )	4870:1:130787:130823	3265284	19	True				
ANR	3265539	CallExpression	ASSERT ( cnt == dest_files . number ( ) )		3265284	0					
ANR	3265540	Callee	ASSERT		3265284	0					
ANR	3265541	Identifier	ASSERT		3265284	0					
ANR	3265542	ArgumentList	cnt == dest_files . number ( )		3265284	1					
ANR	3265543	Argument	cnt == dest_files . number ( )		3265284	0					
ANR	3265544	EqualityExpression	cnt == dest_files . number ( )		3265284	0		==			
ANR	3265545	Identifier	cnt		3265284	0					
ANR	3265546	CallExpression	dest_files . number ( )		3265284	1					
ANR	3265547	Callee	dest_files . number		3265284	0					
ANR	3265548	MemberAccess	dest_files . number		3265284	0					
ANR	3265549	Identifier	dest_files		3265284	0					
ANR	3265550	Identifier	number		3265284	1					
ANR	3265551	ArgumentList			3265284	1					
ANR	3265552	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4871:1:130826:130859	3265284	20	True				
ANR	3265553	IdentifierDecl	* buf = reqline . c_str ( )		3265284	0					
ANR	3265554	IdentifierDeclType	const char *		3265284	0					
ANR	3265555	Identifier	buf		3265284	1					
ANR	3265556	AssignmentExpression	* buf = reqline . c_str ( )		3265284	2		=			
ANR	3265557	Identifier	buf		3265284	0					
ANR	3265558	CallExpression	reqline . c_str ( )		3265284	1					
ANR	3265559	Callee	reqline . c_str		3265284	0					
ANR	3265560	MemberAccess	reqline . c_str		3265284	0					
ANR	3265561	Identifier	reqline		3265284	0					
ANR	3265562	Identifier	c_str		3265284	1					
ANR	3265563	ArgumentList			3265284	1					
ANR	3265564	IfStatement	"if ( ! is_pending ( command , buf ) )"		3265284	21					
ANR	3265565	Condition	"! is_pending ( command , buf )"	4875:6:130960:130983	3265284	0	True				
ANR	3265566	UnaryOperationExpression	"! is_pending ( command , buf )"		3265284	0					
ANR	3265567	UnaryOperator	!		3265284	0					
ANR	3265568	CallExpression	"is_pending ( command , buf )"		3265284	1					
ANR	3265569	Callee	is_pending		3265284	0					
ANR	3265570	Identifier	is_pending		3265284	0					
ANR	3265571	ArgumentList	command		3265284	1					
ANR	3265572	Argument	command		3265284	0					
ANR	3265573	Identifier	command		3265284	0					
ANR	3265574	Argument	buf		3265284	1					
ANR	3265575	Identifier	buf		3265284	0					
ANR	3265576	CompoundStatement		39:33:1187:1187	3265284	1					
ANR	3265577	IfStatement	if ( m_mode == results_only )		3265284	0					
ANR	3265578	Condition	m_mode == results_only	4878:7:131092:131113	3265284	0	True				
ANR	3265579	EqualityExpression	m_mode == results_only		3265284	0		==			
ANR	3265580	Identifier	m_mode		3265284	0					
ANR	3265581	Identifier	results_only		3265284	1					
ANR	3265582	CompoundStatement		42:32:1317:1317	3265284	1					
ANR	3265583	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4879:3:131122:131161	3265284	0	True				
ANR	3265584	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3265284	0					
ANR	3265585	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4881:2:131169:131205	3265284	1	True				
ANR	3265586	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3265284	0					
ANR	3265587	Callee	now_pending		3265284	0					
ANR	3265588	Identifier	now_pending		3265284	0					
ANR	3265589	ArgumentList	command		3265284	1					
ANR	3265590	Argument	command		3265284	0					
ANR	3265591	Identifier	command		3265284	0					
ANR	3265592	Argument	buf		3265284	1					
ANR	3265593	Identifier	buf		3265284	0					
ANR	3265594	Argument	deleg_proxy		3265284	2					
ANR	3265595	Identifier	deleg_proxy		3265284	0					
ANR	3265596	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4887:1:131299:131350	3265284	22	True				
ANR	3265597	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3265284	0					
ANR	3265598	IdentifierDeclType	Gahp_Args *		3265284	0					
ANR	3265599	Identifier	result		3265284	1					
ANR	3265600	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3265284	2		=			
ANR	3265601	Identifier	result		3265284	0					
ANR	3265602	CallExpression	"get_pending_result ( command , buf )"		3265284	1					
ANR	3265603	Callee	get_pending_result		3265284	0					
ANR	3265604	Identifier	get_pending_result		3265284	0					
ANR	3265605	ArgumentList	command		3265284	1					
ANR	3265606	Argument	command		3265284	0					
ANR	3265607	Identifier	command		3265284	0					
ANR	3265608	Argument	buf		3265284	1					
ANR	3265609	Identifier	buf		3265284	0					
ANR	3265610	IfStatement	if ( result )		3265284	23					
ANR	3265611	Condition	result	4888:6:131358:131363	3265284	0	True				
ANR	3265612	Identifier	result		3265284	0					
ANR	3265613	CompoundStatement		57:2:1662:1692	3265284	1					
ANR	3265614	IfStatement	if ( result -> argc != 3 )		3265284	0					
ANR	3265615	Condition	result -> argc != 3	4890:6:131399:131415	3265284	0	True				
ANR	3265616	EqualityExpression	result -> argc != 3		3265284	0		!=			
ANR	3265617	PtrMemberAccess	result -> argc		3265284	0					
ANR	3265618	Identifier	result		3265284	0					
ANR	3265619	Identifier	argc		3265284	1					
ANR	3265620	PrimaryExpression	3		3265284	1					
ANR	3265621	CompoundStatement		54:25:1618:1618	3265284	1					
ANR	3265622	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4891:3:131423:131454	3265284	0	True				
ANR	3265623	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3265284	0					
ANR	3265624	Callee	EXCEPT		3265284	0					
ANR	3265625	Identifier	EXCEPT		3265284	0					
ANR	3265626	ArgumentList	"""Bad %s Result"""		3265284	1					
ANR	3265627	Argument	"""Bad %s Result"""		3265284	0					
ANR	3265628	PrimaryExpression	"""Bad %s Result"""		3265284	0					
ANR	3265629	Argument	command		3265284	1					
ANR	3265630	Identifier	command		3265284	0					
ANR	3265631	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4893:2:131462:131492	3265284	1	True				
ANR	3265632	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3265284	0					
ANR	3265633	IdentifierDeclType	int		3265284	0					
ANR	3265634	Identifier	rc		3265284	1					
ANR	3265635	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3265284	2		=			
ANR	3265636	Identifier	rc		3265284	0					
ANR	3265637	CallExpression	atoi ( result -> argv [ 1 ] )		3265284	1					
ANR	3265638	Callee	atoi		3265284	0					
ANR	3265639	Identifier	atoi		3265284	0					
ANR	3265640	ArgumentList	result -> argv [ 1 ]		3265284	1					
ANR	3265641	Argument	result -> argv [ 1 ]		3265284	0					
ANR	3265642	ArrayIndexing	result -> argv [ 1 ]		3265284	0					
ANR	3265643	PtrMemberAccess	result -> argv		3265284	0					
ANR	3265644	Identifier	result		3265284	0					
ANR	3265645	Identifier	argv		3265284	1					
ANR	3265646	PrimaryExpression	1		3265284	1					
ANR	3265647	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3265284	2					
ANR	3265648	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	4894:7:131501:131539	3265284	0	True				
ANR	3265649	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3265284	0					
ANR	3265650	Callee	strcasecmp		3265284	0					
ANR	3265651	Identifier	strcasecmp		3265284	0					
ANR	3265652	ArgumentList	result -> argv [ 2 ]		3265284	1					
ANR	3265653	Argument	result -> argv [ 2 ]		3265284	0					
ANR	3265654	ArrayIndexing	result -> argv [ 2 ]		3265284	0					
ANR	3265655	PtrMemberAccess	result -> argv		3265284	0					
ANR	3265656	Identifier	result		3265284	0					
ANR	3265657	Identifier	argv		3265284	1					
ANR	3265658	PrimaryExpression	2		3265284	1					
ANR	3265659	Argument	NULLSTRING		3265284	1					
ANR	3265660	Identifier	NULLSTRING		3265284	0					
ANR	3265661	CompoundStatement		58:49:1743:1743	3265284	1					
ANR	3265662	ExpressionStatement	error_string = result -> argv [ 2 ]	4895:3:131548:131578	3265284	0	True				
ANR	3265663	AssignmentExpression	error_string = result -> argv [ 2 ]		3265284	0		=			
ANR	3265664	Identifier	error_string		3265284	0					
ANR	3265665	ArrayIndexing	result -> argv [ 2 ]		3265284	1					
ANR	3265666	PtrMemberAccess	result -> argv		3265284	0					
ANR	3265667	Identifier	result		3265284	0					
ANR	3265668	Identifier	argv		3265284	1					
ANR	3265669	PrimaryExpression	2		3265284	1					
ANR	3265670	ElseStatement	else		3265284	0					
ANR	3265671	CompoundStatement		60:9:1789:1789	3265284	0					
ANR	3265672	ExpressionStatement	"error_string = """""	4897:3:131594:131611	3265284	0	True				
ANR	3265673	AssignmentExpression	"error_string = """""		3265284	0		=			
ANR	3265674	Identifier	error_string		3265284	0					
ANR	3265675	PrimaryExpression	""""""		3265284	1					
ANR	3265676	Statement	delete	4899:2:131619:131624	3265284	3	True				
ANR	3265677	ExpressionStatement	result	4899:9:131626:131632	3265284	4	True				
ANR	3265678	Identifier	result		3265284	0					
ANR	3265679	ReturnStatement	return rc ;	4900:2:131636:131645	3265284	5	True				
ANR	3265680	Identifier	rc		3265284	0					
ANR	3265681	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3265284	24					
ANR	3265682	Condition	"check_pending_timeout ( command , buf )"	4904:6:131702:131735	3265284	0	True				
ANR	3265683	CallExpression	"check_pending_timeout ( command , buf )"		3265284	0					
ANR	3265684	Callee	check_pending_timeout		3265284	0					
ANR	3265685	Identifier	check_pending_timeout		3265284	0					
ANR	3265686	ArgumentList	command		3265284	1					
ANR	3265687	Argument	command		3265284	0					
ANR	3265688	Identifier	command		3265284	0					
ANR	3265689	Argument	buf		3265284	1					
ANR	3265690	Identifier	buf		3265284	0					
ANR	3265691	CompoundStatement		68:43:1939:1939	3265284	1					
ANR	3265692	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4906:2:131775:131823	3265284	0	True				
ANR	3265693	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3265284	0					
ANR	3265694	Callee	sprintf		3265284	0					
ANR	3265695	Identifier	sprintf		3265284	0					
ANR	3265696	ArgumentList	error_string		3265284	1					
ANR	3265697	Argument	error_string		3265284	0					
ANR	3265698	Identifier	error_string		3265284	0					
ANR	3265699	Argument	"""%s timed out"""		3265284	1					
ANR	3265700	PrimaryExpression	"""%s timed out"""		3265284	0					
ANR	3265701	Argument	command		3265284	2					
ANR	3265702	Identifier	command		3265284	0					
ANR	3265703	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4907:2:131827:131862	3265284	1	True				
ANR	3265704	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3265284	0					
ANR	3265705	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4911:1:131922:131955	3265284	25	True				
ANR	3265706	Identifier	GAHPCLIENT_COMMAND_PENDING		3265284	0					
ANR	3265707	ReturnType	int		3265284	1					
ANR	3265708	Identifier	GahpClient :: nordugrid_stage_out2		3265284	2					
ANR	3265709	ParameterList	"const char * hostname , const char * job_id , StringList & src_files , StringList & dest_files"		3265284	3					
ANR	3265710	Parameter	const char * hostname	4835:33:129701:129720	3265284	0	True				
ANR	3265711	ParameterType	const char *		3265284	0					
ANR	3265712	Identifier	hostname		3265284	1					
ANR	3265713	Parameter	const char * job_id	4835:55:129723:129740	3265284	1	True				
ANR	3265714	ParameterType	const char *		3265284	0					
ANR	3265715	Identifier	job_id		3265284	1					
ANR	3265716	Parameter	StringList & src_files	4836:9:129752:129772	3265284	2	True				
ANR	3265717	ParameterType	StringList &		3265284	0					
ANR	3265718	Identifier	src_files		3265284	1					
ANR	3265719	Parameter	StringList & dest_files	4836:32:129775:129796	3265284	3	True				
ANR	3265720	ParameterType	StringList &		3265284	0					
ANR	3265721	Identifier	dest_files		3265284	1					
ANR	3265722	CFGEntryNode	ENTRY		3265284		True				
ANR	3265723	CFGExitNode	EXIT		3265284		True				
ANR	3265724	Symbol	server -> m_commands_supported		3265284						
ANR	3265725	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3265284						
ANR	3265726	Symbol	dest_files		3265284						
ANR	3265727	Symbol	sprintf		3265284						
ANR	3265728	Symbol	hostname		3265284						
ANR	3265729	Symbol	server -> m_commands_supported -> contains_anycase		3265284						
ANR	3265730	Symbol	GAHPCLIENT_COMMAND_PENDING		3265284						
ANR	3265731	Symbol	dest_files . number		3265284						
ANR	3265732	Symbol	strcasecmp		3265284						
ANR	3265733	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3265284						
ANR	3265734	Symbol	src_filename		3265284						
ANR	3265735	Symbol	* * result		3265284						
ANR	3265736	Symbol	src_files		3265284						
ANR	3265737	Symbol	get_pending_result		3265284						
ANR	3265738	Symbol	rc		3265284						
ANR	3265739	Symbol	is_pending		3265284						
ANR	3265740	Symbol	deleg_proxy		3265284						
ANR	3265741	Symbol	server		3265284						
ANR	3265742	Symbol	escapeGahpString		3265284						
ANR	3265743	Symbol	* server		3265284						
ANR	3265744	Symbol	reqline . c_str		3265284						
ANR	3265745	Symbol	results_only		3265284						
ANR	3265746	Symbol	result -> argv		3265284						
ANR	3265747	Symbol	* server -> m_commands_supported		3265284						
ANR	3265748	Symbol	result		3265284						
ANR	3265749	Symbol	src_files . number		3265284						
ANR	3265750	Symbol	* result		3265284						
ANR	3265751	Symbol	reqline		3265284						
ANR	3265752	Symbol	m_mode		3265284						
ANR	3265753	Symbol	* result -> argv		3265284						
ANR	3265754	Symbol	dest_files . next		3265284						
ANR	3265755	Symbol	atoi		3265284						
ANR	3265756	Symbol	dest_filename		3265284						
ANR	3265757	Symbol	cnt		3265284						
ANR	3265758	Symbol	NULLSTRING		3265284						
ANR	3265759	Symbol	command		3265284						
ANR	3265760	Symbol	error_string		3265284						
ANR	3265761	Symbol	esc2		3265284						
ANR	3265762	Symbol	buf		3265284						
ANR	3265763	Symbol	esc1		3265284						
ANR	3265764	Symbol	job_id		3265284						
ANR	3265765	Symbol	x		3265284						
ANR	3265766	Symbol	result -> argc		3265284						
ANR	3265767	Symbol	FALSE		3265284						
ANR	3265768	Symbol	* * server		3265284						
ANR	3265769	Symbol	strdup		3265284						
ANR	3265770	Symbol	src_files . next		3265284						
ANR	3265771	Symbol	check_pending_timeout		3265284						
ANR	3265772	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3265284						
ANR	3265773	Function	GahpClient :: nordugrid_exit_info	4914:0:131960:134064							
ANR	3265774	FunctionDef	"GahpClient :: nordugrid_exit_info (const char * hostname , const char * job_id , bool & normal_exit , int & exit_code , float & wallclock , float & sys_cpu , float & user_cpu)"		3265773	0					
ANR	3265775	CompoundStatement		4919:0:132149:134064	3265773	0					
ANR	3265776	Statement	static	4920:1:132152:132157	3265773	0	True				
ANR	3265777	IdentifierDeclStatement	"const char * command = ""NORDUGRID_EXIT_INFO"" ;"	4920:8:132159:132202	3265773	1	True				
ANR	3265778	IdentifierDecl	"* command = ""NORDUGRID_EXIT_INFO"""		3265773	0					
ANR	3265779	IdentifierDeclType	const char *		3265773	0					
ANR	3265780	Identifier	command		3265773	1					
ANR	3265781	AssignmentExpression	"* command = ""NORDUGRID_EXIT_INFO"""		3265773	2		=			
ANR	3265782	Identifier	command		3265773	0					
ANR	3265783	PrimaryExpression	"""NORDUGRID_EXIT_INFO"""		3265773	1					
ANR	3265784	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3265773	2					
ANR	3265785	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4923:6:132251:132312	3265773	0	True				
ANR	3265786	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3265773	0		==			
ANR	3265787	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3265773	0					
ANR	3265788	Callee	server -> m_commands_supported -> contains_anycase		3265773	0					
ANR	3265789	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3265773	0					
ANR	3265790	PtrMemberAccess	server -> m_commands_supported		3265773	0					
ANR	3265791	Identifier	server		3265773	0					
ANR	3265792	Identifier	m_commands_supported		3265773	1					
ANR	3265793	Identifier	contains_anycase		3265773	1					
ANR	3265794	ArgumentList	command		3265773	1					
ANR	3265795	Argument	command		3265773	0					
ANR	3265796	Identifier	command		3265773	0					
ANR	3265797	Identifier	FALSE		3265773	1					
ANR	3265798	CompoundStatement		5:70:165:165	3265773	1					
ANR	3265799	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4924:2:132319:132358	3265773	0	True				
ANR	3265800	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3265773	0					
ANR	3265801	IfStatement	if ( ! hostname )		3265773	3					
ANR	3265802	Condition	! hostname	4928:5:132396:132404	3265773	0	True				
ANR	3265803	UnaryOperationExpression	! hostname		3265773	0					
ANR	3265804	UnaryOperator	!		3265773	0					
ANR	3265805	Identifier	hostname		3265773	1					
ANR	3265806	ExpressionStatement	hostname = NULLSTRING	4928:16:132407:132426	3265773	1	True				
ANR	3265807	AssignmentExpression	hostname = NULLSTRING		3265773	0		=			
ANR	3265808	Identifier	hostname		3265773	0					
ANR	3265809	Identifier	NULLSTRING		3265773	1					
ANR	3265810	IfStatement	if ( ! job_id )		3265773	4					
ANR	3265811	Condition	! job_id	4929:5:132433:132439	3265773	0	True				
ANR	3265812	UnaryOperationExpression	! job_id		3265773	0					
ANR	3265813	UnaryOperator	!		3265773	0					
ANR	3265814	Identifier	job_id		3265773	1					
ANR	3265815	ExpressionStatement	job_id = NULLSTRING	4929:14:132442:132459	3265773	1	True				
ANR	3265816	AssignmentExpression	job_id = NULLSTRING		3265773	0		=			
ANR	3265817	Identifier	job_id		3265773	0					
ANR	3265818	Identifier	NULLSTRING		3265773	1					
ANR	3265819	IdentifierDeclStatement	std :: string reqline ;	4930:1:132462:132481	3265773	5	True				
ANR	3265820	IdentifierDecl	reqline		3265773	0					
ANR	3265821	IdentifierDeclType	std :: string		3265773	0					
ANR	3265822	Identifier	reqline		3265773	1					
ANR	3265823	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( hostname ) ) ;	4931:1:132484:132533	3265773	6	True				
ANR	3265824	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( hostname ) )		3265773	0					
ANR	3265825	IdentifierDeclType	char *		3265773	0					
ANR	3265826	Identifier	esc1		3265773	1					
ANR	3265827	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( hostname ) )		3265773	2		=			
ANR	3265828	Identifier	esc1		3265773	0					
ANR	3265829	CallExpression	strdup ( escapeGahpString ( hostname ) )		3265773	1					
ANR	3265830	Callee	strdup		3265773	0					
ANR	3265831	Identifier	strdup		3265773	0					
ANR	3265832	ArgumentList	escapeGahpString ( hostname )		3265773	1					
ANR	3265833	Argument	escapeGahpString ( hostname )		3265773	0					
ANR	3265834	CallExpression	escapeGahpString ( hostname )		3265773	0					
ANR	3265835	Callee	escapeGahpString		3265773	0					
ANR	3265836	Identifier	escapeGahpString		3265773	0					
ANR	3265837	ArgumentList	hostname		3265773	1					
ANR	3265838	Argument	hostname		3265773	0					
ANR	3265839	Identifier	hostname		3265773	0					
ANR	3265840	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	4932:1:132536:132583	3265773	7	True				
ANR	3265841	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3265773	0					
ANR	3265842	IdentifierDeclType	char *		3265773	0					
ANR	3265843	Identifier	esc2		3265773	1					
ANR	3265844	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3265773	2		=			
ANR	3265845	Identifier	esc2		3265773	0					
ANR	3265846	CallExpression	strdup ( escapeGahpString ( job_id ) )		3265773	1					
ANR	3265847	Callee	strdup		3265773	0					
ANR	3265848	Identifier	strdup		3265773	0					
ANR	3265849	ArgumentList	escapeGahpString ( job_id )		3265773	1					
ANR	3265850	Argument	escapeGahpString ( job_id )		3265773	0					
ANR	3265851	CallExpression	escapeGahpString ( job_id )		3265773	0					
ANR	3265852	Callee	escapeGahpString		3265773	0					
ANR	3265853	Identifier	escapeGahpString		3265773	0					
ANR	3265854	ArgumentList	job_id		3265773	1					
ANR	3265855	Argument	job_id		3265773	0					
ANR	3265856	Identifier	job_id		3265773	0					
ANR	3265857	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	4933:1:132586:132632	3265773	8	True				
ANR	3265858	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3265773	0					
ANR	3265859	IdentifierDeclType	int		3265773	0					
ANR	3265860	Identifier	x		3265773	1					
ANR	3265861	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3265773	2		=			
ANR	3265862	Identifier	x		3265773	0					
ANR	3265863	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3265773	1					
ANR	3265864	Callee	sprintf		3265773	0					
ANR	3265865	Identifier	sprintf		3265773	0					
ANR	3265866	ArgumentList	reqline		3265773	1					
ANR	3265867	Argument	reqline		3265773	0					
ANR	3265868	Identifier	reqline		3265773	0					
ANR	3265869	Argument	"""%s %s"""		3265773	1					
ANR	3265870	PrimaryExpression	"""%s %s"""		3265773	0					
ANR	3265871	Argument	esc1		3265773	2					
ANR	3265872	Identifier	esc1		3265773	0					
ANR	3265873	Argument	esc2		3265773	3					
ANR	3265874	Identifier	esc2		3265773	0					
ANR	3265875	ExpressionStatement	free ( esc1 )	4934:1:132635:132647	3265773	9	True				
ANR	3265876	CallExpression	free ( esc1 )		3265773	0					
ANR	3265877	Callee	free		3265773	0					
ANR	3265878	Identifier	free		3265773	0					
ANR	3265879	ArgumentList	esc1		3265773	1					
ANR	3265880	Argument	esc1		3265773	0					
ANR	3265881	Identifier	esc1		3265773	0					
ANR	3265882	ExpressionStatement	free ( esc2 )	4935:1:132650:132662	3265773	10	True				
ANR	3265883	CallExpression	free ( esc2 )		3265773	0					
ANR	3265884	Callee	free		3265773	0					
ANR	3265885	Identifier	free		3265773	0					
ANR	3265886	ArgumentList	esc2		3265773	1					
ANR	3265887	Argument	esc2		3265773	0					
ANR	3265888	Identifier	esc2		3265773	0					
ANR	3265889	ExpressionStatement	ASSERT ( x > 0 )	4936:1:132665:132680	3265773	11	True				
ANR	3265890	CallExpression	ASSERT ( x > 0 )		3265773	0					
ANR	3265891	Callee	ASSERT		3265773	0					
ANR	3265892	Identifier	ASSERT		3265773	0					
ANR	3265893	ArgumentList	x > 0		3265773	1					
ANR	3265894	Argument	x > 0		3265773	0					
ANR	3265895	RelationalExpression	x > 0		3265773	0		>			
ANR	3265896	Identifier	x		3265773	0					
ANR	3265897	PrimaryExpression	0		3265773	1					
ANR	3265898	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	4937:1:132683:132716	3265773	12	True				
ANR	3265899	IdentifierDecl	* buf = reqline . c_str ( )		3265773	0					
ANR	3265900	IdentifierDeclType	const char *		3265773	0					
ANR	3265901	Identifier	buf		3265773	1					
ANR	3265902	AssignmentExpression	* buf = reqline . c_str ( )		3265773	2		=			
ANR	3265903	Identifier	buf		3265773	0					
ANR	3265904	CallExpression	reqline . c_str ( )		3265773	1					
ANR	3265905	Callee	reqline . c_str		3265773	0					
ANR	3265906	MemberAccess	reqline . c_str		3265773	0					
ANR	3265907	Identifier	reqline		3265773	0					
ANR	3265908	Identifier	c_str		3265773	1					
ANR	3265909	ArgumentList			3265773	1					
ANR	3265910	IfStatement	"if ( ! is_pending ( command , buf ) )"		3265773	13					
ANR	3265911	Condition	"! is_pending ( command , buf )"	4941:6:132817:132840	3265773	0	True				
ANR	3265912	UnaryOperationExpression	"! is_pending ( command , buf )"		3265773	0					
ANR	3265913	UnaryOperator	!		3265773	0					
ANR	3265914	CallExpression	"is_pending ( command , buf )"		3265773	1					
ANR	3265915	Callee	is_pending		3265773	0					
ANR	3265916	Identifier	is_pending		3265773	0					
ANR	3265917	ArgumentList	command		3265773	1					
ANR	3265918	Argument	command		3265773	0					
ANR	3265919	Identifier	command		3265773	0					
ANR	3265920	Argument	buf		3265773	1					
ANR	3265921	Identifier	buf		3265773	0					
ANR	3265922	CompoundStatement		23:33:694:694	3265773	1					
ANR	3265923	IfStatement	if ( m_mode == results_only )		3265773	0					
ANR	3265924	Condition	m_mode == results_only	4944:7:132949:132970	3265773	0	True				
ANR	3265925	EqualityExpression	m_mode == results_only		3265773	0		==			
ANR	3265926	Identifier	m_mode		3265773	0					
ANR	3265927	Identifier	results_only		3265773	1					
ANR	3265928	CompoundStatement		26:32:824:824	3265773	1					
ANR	3265929	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	4945:3:132979:133018	3265773	0	True				
ANR	3265930	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3265773	0					
ANR	3265931	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	4947:2:133026:133062	3265773	1	True				
ANR	3265932	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3265773	0					
ANR	3265933	Callee	now_pending		3265773	0					
ANR	3265934	Identifier	now_pending		3265773	0					
ANR	3265935	ArgumentList	command		3265773	1					
ANR	3265936	Argument	command		3265773	0					
ANR	3265937	Identifier	command		3265773	0					
ANR	3265938	Argument	buf		3265773	1					
ANR	3265939	Identifier	buf		3265773	0					
ANR	3265940	Argument	deleg_proxy		3265773	2					
ANR	3265941	Identifier	deleg_proxy		3265773	0					
ANR	3265942	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	4953:1:133156:133207	3265773	14	True				
ANR	3265943	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3265773	0					
ANR	3265944	IdentifierDeclType	Gahp_Args *		3265773	0					
ANR	3265945	Identifier	result		3265773	1					
ANR	3265946	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3265773	2		=			
ANR	3265947	Identifier	result		3265773	0					
ANR	3265948	CallExpression	"get_pending_result ( command , buf )"		3265773	1					
ANR	3265949	Callee	get_pending_result		3265773	0					
ANR	3265950	Identifier	get_pending_result		3265773	0					
ANR	3265951	ArgumentList	command		3265773	1					
ANR	3265952	Argument	command		3265773	0					
ANR	3265953	Identifier	command		3265773	0					
ANR	3265954	Argument	buf		3265773	1					
ANR	3265955	Identifier	buf		3265773	0					
ANR	3265956	IfStatement	if ( result )		3265773	15					
ANR	3265957	Condition	result	4954:6:133215:133220	3265773	0	True				
ANR	3265958	Identifier	result		3265773	0					
ANR	3265959	CompoundStatement		41:2:1169:1199	3265773	1					
ANR	3265960	IfStatement	if ( result -> argc != 8 )		3265773	0					
ANR	3265961	Condition	result -> argc != 8	4956:6:133256:133272	3265773	0	True				
ANR	3265962	EqualityExpression	result -> argc != 8		3265773	0		!=			
ANR	3265963	PtrMemberAccess	result -> argc		3265773	0					
ANR	3265964	Identifier	result		3265773	0					
ANR	3265965	Identifier	argc		3265773	1					
ANR	3265966	PrimaryExpression	8		3265773	1					
ANR	3265967	CompoundStatement		38:25:1125:1125	3265773	1					
ANR	3265968	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	4957:3:133280:133311	3265773	0	True				
ANR	3265969	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3265773	0					
ANR	3265970	Callee	EXCEPT		3265773	0					
ANR	3265971	Identifier	EXCEPT		3265773	0					
ANR	3265972	ArgumentList	"""Bad %s Result"""		3265773	1					
ANR	3265973	Argument	"""Bad %s Result"""		3265773	0					
ANR	3265974	PrimaryExpression	"""Bad %s Result"""		3265773	0					
ANR	3265975	Argument	command		3265773	1					
ANR	3265976	Identifier	command		3265773	0					
ANR	3265977	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	4959:2:133319:133349	3265773	1	True				
ANR	3265978	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3265773	0					
ANR	3265979	IdentifierDeclType	int		3265773	0					
ANR	3265980	Identifier	rc		3265773	1					
ANR	3265981	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3265773	2		=			
ANR	3265982	Identifier	rc		3265773	0					
ANR	3265983	CallExpression	atoi ( result -> argv [ 1 ] )		3265773	1					
ANR	3265984	Callee	atoi		3265773	0					
ANR	3265985	Identifier	atoi		3265773	0					
ANR	3265986	ArgumentList	result -> argv [ 1 ]		3265773	1					
ANR	3265987	Argument	result -> argv [ 1 ]		3265773	0					
ANR	3265988	ArrayIndexing	result -> argv [ 1 ]		3265773	0					
ANR	3265989	PtrMemberAccess	result -> argv		3265773	0					
ANR	3265990	Identifier	result		3265773	0					
ANR	3265991	Identifier	argv		3265773	1					
ANR	3265992	PrimaryExpression	1		3265773	1					
ANR	3265993	IfStatement	if ( atoi ( result -> argv [ 2 ] ) )		3265773	2					
ANR	3265994	Condition	atoi ( result -> argv [ 2 ] )	4960:7:133358:133380	3265773	0	True				
ANR	3265995	CallExpression	atoi ( result -> argv [ 2 ] )		3265773	0					
ANR	3265996	Callee	atoi		3265773	0					
ANR	3265997	Identifier	atoi		3265773	0					
ANR	3265998	ArgumentList	result -> argv [ 2 ]		3265773	1					
ANR	3265999	Argument	result -> argv [ 2 ]		3265773	0					
ANR	3266000	ArrayIndexing	result -> argv [ 2 ]		3265773	0					
ANR	3266001	PtrMemberAccess	result -> argv		3265773	0					
ANR	3266002	Identifier	result		3265773	0					
ANR	3266003	Identifier	argv		3265773	1					
ANR	3266004	PrimaryExpression	2		3265773	1					
ANR	3266005	CompoundStatement		42:33:1234:1234	3265773	1					
ANR	3266006	ExpressionStatement	normal_exit = true	4961:3:133389:133407	3265773	0	True				
ANR	3266007	AssignmentExpression	normal_exit = true		3265773	0		=			
ANR	3266008	Identifier	normal_exit		3265773	0					
ANR	3266009	Identifier	true		3265773	1					
ANR	3266010	ElseStatement	else		3265773	0					
ANR	3266011	CompoundStatement		44:9:1268:1268	3265773	0					
ANR	3266012	ExpressionStatement	normal_exit = false	4963:3:133423:133442	3265773	0	True				
ANR	3266013	AssignmentExpression	normal_exit = false		3265773	0		=			
ANR	3266014	Identifier	normal_exit		3265773	0					
ANR	3266015	Identifier	false		3265773	1					
ANR	3266016	ExpressionStatement	exit_code = atoi ( result -> argv [ 3 ] )	4965:2:133450:133485	3265773	3	True				
ANR	3266017	AssignmentExpression	exit_code = atoi ( result -> argv [ 3 ] )		3265773	0		=			
ANR	3266018	Identifier	exit_code		3265773	0					
ANR	3266019	CallExpression	atoi ( result -> argv [ 3 ] )		3265773	1					
ANR	3266020	Callee	atoi		3265773	0					
ANR	3266021	Identifier	atoi		3265773	0					
ANR	3266022	ArgumentList	result -> argv [ 3 ]		3265773	1					
ANR	3266023	Argument	result -> argv [ 3 ]		3265773	0					
ANR	3266024	ArrayIndexing	result -> argv [ 3 ]		3265773	0					
ANR	3266025	PtrMemberAccess	result -> argv		3265773	0					
ANR	3266026	Identifier	result		3265773	0					
ANR	3266027	Identifier	argv		3265773	1					
ANR	3266028	PrimaryExpression	3		3265773	1					
ANR	3266029	ExpressionStatement	wallclock = atof ( result -> argv [ 4 ] )	4966:2:133489:133524	3265773	4	True				
ANR	3266030	AssignmentExpression	wallclock = atof ( result -> argv [ 4 ] )		3265773	0		=			
ANR	3266031	Identifier	wallclock		3265773	0					
ANR	3266032	CallExpression	atof ( result -> argv [ 4 ] )		3265773	1					
ANR	3266033	Callee	atof		3265773	0					
ANR	3266034	Identifier	atof		3265773	0					
ANR	3266035	ArgumentList	result -> argv [ 4 ]		3265773	1					
ANR	3266036	Argument	result -> argv [ 4 ]		3265773	0					
ANR	3266037	ArrayIndexing	result -> argv [ 4 ]		3265773	0					
ANR	3266038	PtrMemberAccess	result -> argv		3265773	0					
ANR	3266039	Identifier	result		3265773	0					
ANR	3266040	Identifier	argv		3265773	1					
ANR	3266041	PrimaryExpression	4		3265773	1					
ANR	3266042	ExpressionStatement	sys_cpu = atof ( result -> argv [ 5 ] )	4967:2:133528:133561	3265773	5	True				
ANR	3266043	AssignmentExpression	sys_cpu = atof ( result -> argv [ 5 ] )		3265773	0		=			
ANR	3266044	Identifier	sys_cpu		3265773	0					
ANR	3266045	CallExpression	atof ( result -> argv [ 5 ] )		3265773	1					
ANR	3266046	Callee	atof		3265773	0					
ANR	3266047	Identifier	atof		3265773	0					
ANR	3266048	ArgumentList	result -> argv [ 5 ]		3265773	1					
ANR	3266049	Argument	result -> argv [ 5 ]		3265773	0					
ANR	3266050	ArrayIndexing	result -> argv [ 5 ]		3265773	0					
ANR	3266051	PtrMemberAccess	result -> argv		3265773	0					
ANR	3266052	Identifier	result		3265773	0					
ANR	3266053	Identifier	argv		3265773	1					
ANR	3266054	PrimaryExpression	5		3265773	1					
ANR	3266055	ExpressionStatement	user_cpu = atof ( result -> argv [ 6 ] )	4968:2:133565:133599	3265773	6	True				
ANR	3266056	AssignmentExpression	user_cpu = atof ( result -> argv [ 6 ] )		3265773	0		=			
ANR	3266057	Identifier	user_cpu		3265773	0					
ANR	3266058	CallExpression	atof ( result -> argv [ 6 ] )		3265773	1					
ANR	3266059	Callee	atof		3265773	0					
ANR	3266060	Identifier	atof		3265773	0					
ANR	3266061	ArgumentList	result -> argv [ 6 ]		3265773	1					
ANR	3266062	Argument	result -> argv [ 6 ]		3265773	0					
ANR	3266063	ArrayIndexing	result -> argv [ 6 ]		3265773	0					
ANR	3266064	PtrMemberAccess	result -> argv		3265773	0					
ANR	3266065	Identifier	result		3265773	0					
ANR	3266066	Identifier	argv		3265773	1					
ANR	3266067	PrimaryExpression	6		3265773	1					
ANR	3266068	IfStatement	"if ( strcasecmp ( result -> argv [ 7 ] , NULLSTRING ) )"		3265773	7					
ANR	3266069	Condition	"strcasecmp ( result -> argv [ 7 ] , NULLSTRING )"	4969:7:133608:133646	3265773	0	True				
ANR	3266070	CallExpression	"strcasecmp ( result -> argv [ 7 ] , NULLSTRING )"		3265773	0					
ANR	3266071	Callee	strcasecmp		3265773	0					
ANR	3266072	Identifier	strcasecmp		3265773	0					
ANR	3266073	ArgumentList	result -> argv [ 7 ]		3265773	1					
ANR	3266074	Argument	result -> argv [ 7 ]		3265773	0					
ANR	3266075	ArrayIndexing	result -> argv [ 7 ]		3265773	0					
ANR	3266076	PtrMemberAccess	result -> argv		3265773	0					
ANR	3266077	Identifier	result		3265773	0					
ANR	3266078	Identifier	argv		3265773	1					
ANR	3266079	PrimaryExpression	7		3265773	1					
ANR	3266080	Argument	NULLSTRING		3265773	1					
ANR	3266081	Identifier	NULLSTRING		3265773	0					
ANR	3266082	CompoundStatement		51:49:1500:1500	3265773	1					
ANR	3266083	ExpressionStatement	error_string = result -> argv [ 7 ]	4970:3:133655:133685	3265773	0	True				
ANR	3266084	AssignmentExpression	error_string = result -> argv [ 7 ]		3265773	0		=			
ANR	3266085	Identifier	error_string		3265773	0					
ANR	3266086	ArrayIndexing	result -> argv [ 7 ]		3265773	1					
ANR	3266087	PtrMemberAccess	result -> argv		3265773	0					
ANR	3266088	Identifier	result		3265773	0					
ANR	3266089	Identifier	argv		3265773	1					
ANR	3266090	PrimaryExpression	7		3265773	1					
ANR	3266091	ElseStatement	else		3265773	0					
ANR	3266092	CompoundStatement		53:9:1546:1546	3265773	0					
ANR	3266093	ExpressionStatement	"error_string = """""	4972:3:133701:133718	3265773	0	True				
ANR	3266094	AssignmentExpression	"error_string = """""		3265773	0		=			
ANR	3266095	Identifier	error_string		3265773	0					
ANR	3266096	PrimaryExpression	""""""		3265773	1					
ANR	3266097	Statement	delete	4974:2:133726:133731	3265773	8	True				
ANR	3266098	ExpressionStatement	result	4974:9:133733:133739	3265773	9	True				
ANR	3266099	Identifier	result		3265773	0					
ANR	3266100	ReturnStatement	return rc ;	4975:2:133743:133752	3265773	10	True				
ANR	3266101	Identifier	rc		3265773	0					
ANR	3266102	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3265773	16					
ANR	3266103	Condition	"check_pending_timeout ( command , buf )"	4979:6:133809:133842	3265773	0	True				
ANR	3266104	CallExpression	"check_pending_timeout ( command , buf )"		3265773	0					
ANR	3266105	Callee	check_pending_timeout		3265773	0					
ANR	3266106	Identifier	check_pending_timeout		3265773	0					
ANR	3266107	ArgumentList	command		3265773	1					
ANR	3266108	Argument	command		3265773	0					
ANR	3266109	Identifier	command		3265773	0					
ANR	3266110	Argument	buf		3265773	1					
ANR	3266111	Identifier	buf		3265773	0					
ANR	3266112	CompoundStatement		61:43:1696:1696	3265773	1					
ANR	3266113	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	4981:2:133882:133930	3265773	0	True				
ANR	3266114	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3265773	0					
ANR	3266115	Callee	sprintf		3265773	0					
ANR	3266116	Identifier	sprintf		3265773	0					
ANR	3266117	ArgumentList	error_string		3265773	1					
ANR	3266118	Argument	error_string		3265773	0					
ANR	3266119	Identifier	error_string		3265773	0					
ANR	3266120	Argument	"""%s timed out"""		3265773	1					
ANR	3266121	PrimaryExpression	"""%s timed out"""		3265773	0					
ANR	3266122	Argument	command		3265773	2					
ANR	3266123	Identifier	command		3265773	0					
ANR	3266124	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	4982:2:133934:133969	3265773	1	True				
ANR	3266125	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3265773	0					
ANR	3266126	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	4986:1:134029:134062	3265773	17	True				
ANR	3266127	Identifier	GAHPCLIENT_COMMAND_PENDING		3265773	0					
ANR	3266128	ReturnType	int		3265773	1					
ANR	3266129	Identifier	GahpClient :: nordugrid_exit_info		3265773	2					
ANR	3266130	ParameterList	"const char * hostname , const char * job_id , bool & normal_exit , int & exit_code , float & wallclock , float & sys_cpu , float & user_cpu"		3265773	3					
ANR	3266131	Parameter	const char * hostname	4915:32:131996:132015	3265773	0	True				
ANR	3266132	ParameterType	const char *		3265773	0					
ANR	3266133	Identifier	hostname		3265773	1					
ANR	3266134	Parameter	const char * job_id	4915:54:132018:132035	3265773	1	True				
ANR	3266135	ParameterType	const char *		3265773	0					
ANR	3266136	Identifier	job_id		3265773	1					
ANR	3266137	Parameter	bool & normal_exit	4916:8:132046:132062	3265773	2	True				
ANR	3266138	ParameterType	bool &		3265773	0					
ANR	3266139	Identifier	normal_exit		3265773	1					
ANR	3266140	Parameter	int & exit_code	4916:27:132065:132078	3265773	3	True				
ANR	3266141	ParameterType	int &		3265773	0					
ANR	3266142	Identifier	exit_code		3265773	1					
ANR	3266143	Parameter	float & wallclock	4917:8:132089:132104	3265773	4	True				
ANR	3266144	ParameterType	float &		3265773	0					
ANR	3266145	Identifier	wallclock		3265773	1					
ANR	3266146	Parameter	float & sys_cpu	4917:26:132107:132120	3265773	5	True				
ANR	3266147	ParameterType	float &		3265773	0					
ANR	3266148	Identifier	sys_cpu		3265773	1					
ANR	3266149	Parameter	float & user_cpu	4918:8:132131:132145	3265773	6	True				
ANR	3266150	ParameterType	float &		3265773	0					
ANR	3266151	Identifier	user_cpu		3265773	1					
ANR	3266152	CFGEntryNode	ENTRY		3265773		True				
ANR	3266153	CFGExitNode	EXIT		3265773		True				
ANR	3266154	Symbol	server -> m_commands_supported		3265773						
ANR	3266155	Symbol	server		3265773						
ANR	3266156	Symbol	escapeGahpString		3265773						
ANR	3266157	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3265773						
ANR	3266158	Symbol	* server		3265773						
ANR	3266159	Symbol	reqline . c_str		3265773						
ANR	3266160	Symbol	results_only		3265773						
ANR	3266161	Symbol	result -> argv		3265773						
ANR	3266162	Symbol	* server -> m_commands_supported		3265773						
ANR	3266163	Symbol	sprintf		3265773						
ANR	3266164	Symbol	result		3265773						
ANR	3266165	Symbol	hostname		3265773						
ANR	3266166	Symbol	* result		3265773						
ANR	3266167	Symbol	user_cpu		3265773						
ANR	3266168	Symbol	server -> m_commands_supported -> contains_anycase		3265773						
ANR	3266169	Symbol	GAHPCLIENT_COMMAND_PENDING		3265773						
ANR	3266170	Symbol	reqline		3265773						
ANR	3266171	Symbol	m_mode		3265773						
ANR	3266172	Symbol	strcasecmp		3265773						
ANR	3266173	Symbol	normal_exit		3265773						
ANR	3266174	Symbol	sys_cpu		3265773						
ANR	3266175	Symbol	* result -> argv		3265773						
ANR	3266176	Symbol	atoi		3265773						
ANR	3266177	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3265773						
ANR	3266178	Symbol	atof		3265773						
ANR	3266179	Symbol	false		3265773						
ANR	3266180	Symbol	* * result		3265773						
ANR	3266181	Symbol	NULLSTRING		3265773						
ANR	3266182	Symbol	command		3265773						
ANR	3266183	Symbol	get_pending_result		3265773						
ANR	3266184	Symbol	rc		3265773						
ANR	3266185	Symbol	error_string		3265773						
ANR	3266186	Symbol	esc2		3265773						
ANR	3266187	Symbol	buf		3265773						
ANR	3266188	Symbol	esc1		3265773						
ANR	3266189	Symbol	job_id		3265773						
ANR	3266190	Symbol	wallclock		3265773						
ANR	3266191	Symbol	exit_code		3265773						
ANR	3266192	Symbol	x		3265773						
ANR	3266193	Symbol	result -> argc		3265773						
ANR	3266194	Symbol	true		3265773						
ANR	3266195	Symbol	* * server		3265773						
ANR	3266196	Symbol	FALSE		3265773						
ANR	3266197	Symbol	strdup		3265773						
ANR	3266198	Symbol	check_pending_timeout		3265773						
ANR	3266199	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3265773						
ANR	3266200	Symbol	is_pending		3265773						
ANR	3266201	Symbol	deleg_proxy		3265773						
ANR	3266202	Function	GahpClient :: nordugrid_ping	4989:0:134067:135626							
ANR	3266203	FunctionDef	GahpClient :: nordugrid_ping (const char * hostname)		3266202	0					
ANR	3266204	CompoundStatement		4991:0:134120:135626	3266202	0					
ANR	3266205	Statement	static	4992:1:134123:134128	3266202	0	True				
ANR	3266206	IdentifierDeclStatement	"const char * command = ""NORDUGRID_PING"" ;"	4992:8:134130:134168	3266202	1	True				
ANR	3266207	IdentifierDecl	"* command = ""NORDUGRID_PING"""		3266202	0					
ANR	3266208	IdentifierDeclType	const char *		3266202	0					
ANR	3266209	Identifier	command		3266202	1					
ANR	3266210	AssignmentExpression	"* command = ""NORDUGRID_PING"""		3266202	2		=			
ANR	3266211	Identifier	command		3266202	0					
ANR	3266212	PrimaryExpression	"""NORDUGRID_PING"""		3266202	1					
ANR	3266213	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3266202	2					
ANR	3266214	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	4995:6:134217:134278	3266202	0	True				
ANR	3266215	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3266202	0		==			
ANR	3266216	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3266202	0					
ANR	3266217	Callee	server -> m_commands_supported -> contains_anycase		3266202	0					
ANR	3266218	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3266202	0					
ANR	3266219	PtrMemberAccess	server -> m_commands_supported		3266202	0					
ANR	3266220	Identifier	server		3266202	0					
ANR	3266221	Identifier	m_commands_supported		3266202	1					
ANR	3266222	Identifier	contains_anycase		3266202	1					
ANR	3266223	ArgumentList	command		3266202	1					
ANR	3266224	Argument	command		3266202	0					
ANR	3266225	Identifier	command		3266202	0					
ANR	3266226	Identifier	FALSE		3266202	1					
ANR	3266227	CompoundStatement		5:70:160:160	3266202	1					
ANR	3266228	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	4996:2:134285:134324	3266202	0	True				
ANR	3266229	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3266202	0					
ANR	3266230	IfStatement	if ( ! hostname )		3266202	3					
ANR	3266231	Condition	! hostname	5000:5:134362:134370	3266202	0	True				
ANR	3266232	UnaryOperationExpression	! hostname		3266202	0					
ANR	3266233	UnaryOperator	!		3266202	0					
ANR	3266234	Identifier	hostname		3266202	1					
ANR	3266235	ExpressionStatement	hostname = NULLSTRING	5000:16:134373:134392	3266202	1	True				
ANR	3266236	AssignmentExpression	hostname = NULLSTRING		3266202	0		=			
ANR	3266237	Identifier	hostname		3266202	0					
ANR	3266238	Identifier	NULLSTRING		3266202	1					
ANR	3266239	IdentifierDeclStatement	std :: string reqline ;	5001:1:134395:134414	3266202	4	True				
ANR	3266240	IdentifierDecl	reqline		3266202	0					
ANR	3266241	IdentifierDeclType	std :: string		3266202	0					
ANR	3266242	Identifier	reqline		3266202	1					
ANR	3266243	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( hostname ) ) ;"	5002:1:134417:134473	3266202	5	True				
ANR	3266244	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( hostname ) )"		3266202	0					
ANR	3266245	IdentifierDeclType	int		3266202	0					
ANR	3266246	Identifier	x		3266202	1					
ANR	3266247	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( hostname ) )"		3266202	2		=			
ANR	3266248	Identifier	x		3266202	0					
ANR	3266249	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( hostname ) )"		3266202	1					
ANR	3266250	Callee	sprintf		3266202	0					
ANR	3266251	Identifier	sprintf		3266202	0					
ANR	3266252	ArgumentList	reqline		3266202	1					
ANR	3266253	Argument	reqline		3266202	0					
ANR	3266254	Identifier	reqline		3266202	0					
ANR	3266255	Argument	"""%s"""		3266202	1					
ANR	3266256	PrimaryExpression	"""%s"""		3266202	0					
ANR	3266257	Argument	escapeGahpString ( hostname )		3266202	2					
ANR	3266258	CallExpression	escapeGahpString ( hostname )		3266202	0					
ANR	3266259	Callee	escapeGahpString		3266202	0					
ANR	3266260	Identifier	escapeGahpString		3266202	0					
ANR	3266261	ArgumentList	hostname		3266202	1					
ANR	3266262	Argument	hostname		3266202	0					
ANR	3266263	Identifier	hostname		3266202	0					
ANR	3266264	ExpressionStatement	ASSERT ( x > 0 )	5003:1:134476:134491	3266202	6	True				
ANR	3266265	CallExpression	ASSERT ( x > 0 )		3266202	0					
ANR	3266266	Callee	ASSERT		3266202	0					
ANR	3266267	Identifier	ASSERT		3266202	0					
ANR	3266268	ArgumentList	x > 0		3266202	1					
ANR	3266269	Argument	x > 0		3266202	0					
ANR	3266270	RelationalExpression	x > 0		3266202	0		>			
ANR	3266271	Identifier	x		3266202	0					
ANR	3266272	PrimaryExpression	0		3266202	1					
ANR	3266273	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5004:1:134494:134527	3266202	7	True				
ANR	3266274	IdentifierDecl	* buf = reqline . c_str ( )		3266202	0					
ANR	3266275	IdentifierDeclType	const char *		3266202	0					
ANR	3266276	Identifier	buf		3266202	1					
ANR	3266277	AssignmentExpression	* buf = reqline . c_str ( )		3266202	2		=			
ANR	3266278	Identifier	buf		3266202	0					
ANR	3266279	CallExpression	reqline . c_str ( )		3266202	1					
ANR	3266280	Callee	reqline . c_str		3266202	0					
ANR	3266281	MemberAccess	reqline . c_str		3266202	0					
ANR	3266282	Identifier	reqline		3266202	0					
ANR	3266283	Identifier	c_str		3266202	1					
ANR	3266284	ArgumentList			3266202	1					
ANR	3266285	IfStatement	"if ( ! is_pending ( command , buf ) )"		3266202	8					
ANR	3266286	Condition	"! is_pending ( command , buf )"	5008:6:134628:134651	3266202	0	True				
ANR	3266287	UnaryOperationExpression	"! is_pending ( command , buf )"		3266202	0					
ANR	3266288	UnaryOperator	!		3266202	0					
ANR	3266289	CallExpression	"is_pending ( command , buf )"		3266202	1					
ANR	3266290	Callee	is_pending		3266202	0					
ANR	3266291	Identifier	is_pending		3266202	0					
ANR	3266292	ArgumentList	command		3266202	1					
ANR	3266293	Argument	command		3266202	0					
ANR	3266294	Identifier	command		3266202	0					
ANR	3266295	Argument	buf		3266202	1					
ANR	3266296	Identifier	buf		3266202	0					
ANR	3266297	CompoundStatement		18:33:534:534	3266202	1					
ANR	3266298	IfStatement	if ( m_mode == results_only )		3266202	0					
ANR	3266299	Condition	m_mode == results_only	5011:7:134760:134781	3266202	0	True				
ANR	3266300	EqualityExpression	m_mode == results_only		3266202	0		==			
ANR	3266301	Identifier	m_mode		3266202	0					
ANR	3266302	Identifier	results_only		3266202	1					
ANR	3266303	CompoundStatement		21:32:664:664	3266202	1					
ANR	3266304	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5012:3:134790:134829	3266202	0	True				
ANR	3266305	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3266202	0					
ANR	3266306	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	5014:2:134837:134874	3266202	1	True				
ANR	3266307	CallExpression	"now_pending ( command , buf , normal_proxy )"		3266202	0					
ANR	3266308	Callee	now_pending		3266202	0					
ANR	3266309	Identifier	now_pending		3266202	0					
ANR	3266310	ArgumentList	command		3266202	1					
ANR	3266311	Argument	command		3266202	0					
ANR	3266312	Identifier	command		3266202	0					
ANR	3266313	Argument	buf		3266202	1					
ANR	3266314	Identifier	buf		3266202	0					
ANR	3266315	Argument	normal_proxy		3266202	2					
ANR	3266316	Identifier	normal_proxy		3266202	0					
ANR	3266317	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5020:1:134968:135019	3266202	9	True				
ANR	3266318	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3266202	0					
ANR	3266319	IdentifierDeclType	Gahp_Args *		3266202	0					
ANR	3266320	Identifier	result		3266202	1					
ANR	3266321	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3266202	2		=			
ANR	3266322	Identifier	result		3266202	0					
ANR	3266323	CallExpression	"get_pending_result ( command , buf )"		3266202	1					
ANR	3266324	Callee	get_pending_result		3266202	0					
ANR	3266325	Identifier	get_pending_result		3266202	0					
ANR	3266326	ArgumentList	command		3266202	1					
ANR	3266327	Argument	command		3266202	0					
ANR	3266328	Identifier	command		3266202	0					
ANR	3266329	Argument	buf		3266202	1					
ANR	3266330	Identifier	buf		3266202	0					
ANR	3266331	IfStatement	if ( result )		3266202	10					
ANR	3266332	Condition	result	5021:6:135027:135032	3266202	0	True				
ANR	3266333	Identifier	result		3266202	0					
ANR	3266334	CompoundStatement		36:2:1010:1040	3266202	1					
ANR	3266335	IfStatement	if ( result -> argc != 3 )		3266202	0					
ANR	3266336	Condition	result -> argc != 3	5023:6:135068:135084	3266202	0	True				
ANR	3266337	EqualityExpression	result -> argc != 3		3266202	0		!=			
ANR	3266338	PtrMemberAccess	result -> argc		3266202	0					
ANR	3266339	Identifier	result		3266202	0					
ANR	3266340	Identifier	argc		3266202	1					
ANR	3266341	PrimaryExpression	3		3266202	1					
ANR	3266342	CompoundStatement		33:25:966:966	3266202	1					
ANR	3266343	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5024:3:135092:135123	3266202	0	True				
ANR	3266344	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3266202	0					
ANR	3266345	Callee	EXCEPT		3266202	0					
ANR	3266346	Identifier	EXCEPT		3266202	0					
ANR	3266347	ArgumentList	"""Bad %s Result"""		3266202	1					
ANR	3266348	Argument	"""Bad %s Result"""		3266202	0					
ANR	3266349	PrimaryExpression	"""Bad %s Result"""		3266202	0					
ANR	3266350	Argument	command		3266202	1					
ANR	3266351	Identifier	command		3266202	0					
ANR	3266352	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	5026:2:135131:135161	3266202	1	True				
ANR	3266353	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3266202	0					
ANR	3266354	IdentifierDeclType	int		3266202	0					
ANR	3266355	Identifier	rc		3266202	1					
ANR	3266356	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3266202	2		=			
ANR	3266357	Identifier	rc		3266202	0					
ANR	3266358	CallExpression	atoi ( result -> argv [ 1 ] )		3266202	1					
ANR	3266359	Callee	atoi		3266202	0					
ANR	3266360	Identifier	atoi		3266202	0					
ANR	3266361	ArgumentList	result -> argv [ 1 ]		3266202	1					
ANR	3266362	Argument	result -> argv [ 1 ]		3266202	0					
ANR	3266363	ArrayIndexing	result -> argv [ 1 ]		3266202	0					
ANR	3266364	PtrMemberAccess	result -> argv		3266202	0					
ANR	3266365	Identifier	result		3266202	0					
ANR	3266366	Identifier	argv		3266202	1					
ANR	3266367	PrimaryExpression	1		3266202	1					
ANR	3266368	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3266202	2					
ANR	3266369	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	5027:7:135170:135208	3266202	0	True				
ANR	3266370	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3266202	0					
ANR	3266371	Callee	strcasecmp		3266202	0					
ANR	3266372	Identifier	strcasecmp		3266202	0					
ANR	3266373	ArgumentList	result -> argv [ 2 ]		3266202	1					
ANR	3266374	Argument	result -> argv [ 2 ]		3266202	0					
ANR	3266375	ArrayIndexing	result -> argv [ 2 ]		3266202	0					
ANR	3266376	PtrMemberAccess	result -> argv		3266202	0					
ANR	3266377	Identifier	result		3266202	0					
ANR	3266378	Identifier	argv		3266202	1					
ANR	3266379	PrimaryExpression	2		3266202	1					
ANR	3266380	Argument	NULLSTRING		3266202	1					
ANR	3266381	Identifier	NULLSTRING		3266202	0					
ANR	3266382	CompoundStatement		37:49:1091:1091	3266202	1					
ANR	3266383	ExpressionStatement	error_string = result -> argv [ 2 ]	5028:3:135217:135247	3266202	0	True				
ANR	3266384	AssignmentExpression	error_string = result -> argv [ 2 ]		3266202	0		=			
ANR	3266385	Identifier	error_string		3266202	0					
ANR	3266386	ArrayIndexing	result -> argv [ 2 ]		3266202	1					
ANR	3266387	PtrMemberAccess	result -> argv		3266202	0					
ANR	3266388	Identifier	result		3266202	0					
ANR	3266389	Identifier	argv		3266202	1					
ANR	3266390	PrimaryExpression	2		3266202	1					
ANR	3266391	ElseStatement	else		3266202	0					
ANR	3266392	CompoundStatement		39:9:1137:1137	3266202	0					
ANR	3266393	ExpressionStatement	"error_string = """""	5030:3:135263:135280	3266202	0	True				
ANR	3266394	AssignmentExpression	"error_string = """""		3266202	0		=			
ANR	3266395	Identifier	error_string		3266202	0					
ANR	3266396	PrimaryExpression	""""""		3266202	1					
ANR	3266397	Statement	delete	5032:2:135288:135293	3266202	3	True				
ANR	3266398	ExpressionStatement	result	5032:9:135295:135301	3266202	4	True				
ANR	3266399	Identifier	result		3266202	0					
ANR	3266400	ReturnStatement	return rc ;	5033:2:135305:135314	3266202	5	True				
ANR	3266401	Identifier	rc		3266202	0					
ANR	3266402	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3266202	11					
ANR	3266403	Condition	"check_pending_timeout ( command , buf )"	5037:6:135371:135404	3266202	0	True				
ANR	3266404	CallExpression	"check_pending_timeout ( command , buf )"		3266202	0					
ANR	3266405	Callee	check_pending_timeout		3266202	0					
ANR	3266406	Identifier	check_pending_timeout		3266202	0					
ANR	3266407	ArgumentList	command		3266202	1					
ANR	3266408	Argument	command		3266202	0					
ANR	3266409	Identifier	command		3266202	0					
ANR	3266410	Argument	buf		3266202	1					
ANR	3266411	Identifier	buf		3266202	0					
ANR	3266412	CompoundStatement		47:43:1287:1287	3266202	1					
ANR	3266413	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5039:2:135444:135492	3266202	0	True				
ANR	3266414	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3266202	0					
ANR	3266415	Callee	sprintf		3266202	0					
ANR	3266416	Identifier	sprintf		3266202	0					
ANR	3266417	ArgumentList	error_string		3266202	1					
ANR	3266418	Argument	error_string		3266202	0					
ANR	3266419	Identifier	error_string		3266202	0					
ANR	3266420	Argument	"""%s timed out"""		3266202	1					
ANR	3266421	PrimaryExpression	"""%s timed out"""		3266202	0					
ANR	3266422	Argument	command		3266202	2					
ANR	3266423	Identifier	command		3266202	0					
ANR	3266424	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5040:2:135496:135531	3266202	1	True				
ANR	3266425	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3266202	0					
ANR	3266426	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5044:1:135591:135624	3266202	12	True				
ANR	3266427	Identifier	GAHPCLIENT_COMMAND_PENDING		3266202	0					
ANR	3266428	ReturnType	int		3266202	1					
ANR	3266429	Identifier	GahpClient :: nordugrid_ping		3266202	2					
ANR	3266430	ParameterList	const char * hostname		3266202	3					
ANR	3266431	Parameter	const char * hostname	4990:27:134098:134117	3266202	0	True				
ANR	3266432	ParameterType	const char *		3266202	0					
ANR	3266433	Identifier	hostname		3266202	1					
ANR	3266434	CFGEntryNode	ENTRY		3266202		True				
ANR	3266435	CFGExitNode	EXIT		3266202		True				
ANR	3266436	Symbol	server -> m_commands_supported		3266202						
ANR	3266437	Symbol	server		3266202						
ANR	3266438	Symbol	escapeGahpString		3266202						
ANR	3266439	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3266202						
ANR	3266440	Symbol	* server		3266202						
ANR	3266441	Symbol	reqline . c_str		3266202						
ANR	3266442	Symbol	results_only		3266202						
ANR	3266443	Symbol	result -> argv		3266202						
ANR	3266444	Symbol	* server -> m_commands_supported		3266202						
ANR	3266445	Symbol	sprintf		3266202						
ANR	3266446	Symbol	result		3266202						
ANR	3266447	Symbol	hostname		3266202						
ANR	3266448	Symbol	normal_proxy		3266202						
ANR	3266449	Symbol	* result		3266202						
ANR	3266450	Symbol	server -> m_commands_supported -> contains_anycase		3266202						
ANR	3266451	Symbol	GAHPCLIENT_COMMAND_PENDING		3266202						
ANR	3266452	Symbol	reqline		3266202						
ANR	3266453	Symbol	m_mode		3266202						
ANR	3266454	Symbol	strcasecmp		3266202						
ANR	3266455	Symbol	* result -> argv		3266202						
ANR	3266456	Symbol	atoi		3266202						
ANR	3266457	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3266202						
ANR	3266458	Symbol	* * result		3266202						
ANR	3266459	Symbol	NULLSTRING		3266202						
ANR	3266460	Symbol	command		3266202						
ANR	3266461	Symbol	get_pending_result		3266202						
ANR	3266462	Symbol	rc		3266202						
ANR	3266463	Symbol	error_string		3266202						
ANR	3266464	Symbol	buf		3266202						
ANR	3266465	Symbol	x		3266202						
ANR	3266466	Symbol	result -> argc		3266202						
ANR	3266467	Symbol	* * server		3266202						
ANR	3266468	Symbol	FALSE		3266202						
ANR	3266469	Symbol	check_pending_timeout		3266202						
ANR	3266470	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3266202						
ANR	3266471	Symbol	is_pending		3266202						
ANR	3266472	Function	GahpClient :: gridftp_transfer	5047:0:135629:137367							
ANR	3266473	FunctionDef	"GahpClient :: gridftp_transfer (const char * src_url , const char * dst_url)"		3266472	0					
ANR	3266474	CompoundStatement		5049:0:135704:137367	3266472	0					
ANR	3266475	Statement	static	5050:1:135707:135712	3266472	0	True				
ANR	3266476	IdentifierDeclStatement	"const char * command = ""GRIDFTP_TRANSFER"" ;"	5050:8:135714:135754	3266472	1	True				
ANR	3266477	IdentifierDecl	"* command = ""GRIDFTP_TRANSFER"""		3266472	0					
ANR	3266478	IdentifierDeclType	const char *		3266472	0					
ANR	3266479	Identifier	command		3266472	1					
ANR	3266480	AssignmentExpression	"* command = ""GRIDFTP_TRANSFER"""		3266472	2		=			
ANR	3266481	Identifier	command		3266472	0					
ANR	3266482	PrimaryExpression	"""GRIDFTP_TRANSFER"""		3266472	1					
ANR	3266483	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3266472	2					
ANR	3266484	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5053:6:135803:135864	3266472	0	True				
ANR	3266485	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3266472	0		==			
ANR	3266486	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3266472	0					
ANR	3266487	Callee	server -> m_commands_supported -> contains_anycase		3266472	0					
ANR	3266488	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3266472	0					
ANR	3266489	PtrMemberAccess	server -> m_commands_supported		3266472	0					
ANR	3266490	Identifier	server		3266472	0					
ANR	3266491	Identifier	m_commands_supported		3266472	1					
ANR	3266492	Identifier	contains_anycase		3266472	1					
ANR	3266493	ArgumentList	command		3266472	1					
ANR	3266494	Argument	command		3266472	0					
ANR	3266495	Identifier	command		3266472	0					
ANR	3266496	Identifier	FALSE		3266472	1					
ANR	3266497	CompoundStatement		5:70:162:162	3266472	1					
ANR	3266498	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5054:2:135871:135910	3266472	0	True				
ANR	3266499	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3266472	0					
ANR	3266500	IfStatement	if ( ! src_url )		3266472	3					
ANR	3266501	Condition	! src_url	5058:5:135948:135955	3266472	0	True				
ANR	3266502	UnaryOperationExpression	! src_url		3266472	0					
ANR	3266503	UnaryOperator	!		3266472	0					
ANR	3266504	Identifier	src_url		3266472	1					
ANR	3266505	ExpressionStatement	src_url = NULLSTRING	5058:15:135958:135976	3266472	1	True				
ANR	3266506	AssignmentExpression	src_url = NULLSTRING		3266472	0		=			
ANR	3266507	Identifier	src_url		3266472	0					
ANR	3266508	Identifier	NULLSTRING		3266472	1					
ANR	3266509	IfStatement	if ( ! dst_url )		3266472	4					
ANR	3266510	Condition	! dst_url	5059:5:135983:135990	3266472	0	True				
ANR	3266511	UnaryOperationExpression	! dst_url		3266472	0					
ANR	3266512	UnaryOperator	!		3266472	0					
ANR	3266513	Identifier	dst_url		3266472	1					
ANR	3266514	ExpressionStatement	dst_url = NULLSTRING	5059:15:135993:136011	3266472	1	True				
ANR	3266515	AssignmentExpression	dst_url = NULLSTRING		3266472	0		=			
ANR	3266516	Identifier	dst_url		3266472	0					
ANR	3266517	Identifier	NULLSTRING		3266472	1					
ANR	3266518	IdentifierDeclStatement	std :: string reqline ;	5060:1:136014:136033	3266472	5	True				
ANR	3266519	IdentifierDecl	reqline		3266472	0					
ANR	3266520	IdentifierDeclType	std :: string		3266472	0					
ANR	3266521	Identifier	reqline		3266472	1					
ANR	3266522	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( src_url ) ) ;	5061:1:136036:136084	3266472	6	True				
ANR	3266523	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( src_url ) )		3266472	0					
ANR	3266524	IdentifierDeclType	char *		3266472	0					
ANR	3266525	Identifier	esc1		3266472	1					
ANR	3266526	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( src_url ) )		3266472	2		=			
ANR	3266527	Identifier	esc1		3266472	0					
ANR	3266528	CallExpression	strdup ( escapeGahpString ( src_url ) )		3266472	1					
ANR	3266529	Callee	strdup		3266472	0					
ANR	3266530	Identifier	strdup		3266472	0					
ANR	3266531	ArgumentList	escapeGahpString ( src_url )		3266472	1					
ANR	3266532	Argument	escapeGahpString ( src_url )		3266472	0					
ANR	3266533	CallExpression	escapeGahpString ( src_url )		3266472	0					
ANR	3266534	Callee	escapeGahpString		3266472	0					
ANR	3266535	Identifier	escapeGahpString		3266472	0					
ANR	3266536	ArgumentList	src_url		3266472	1					
ANR	3266537	Argument	src_url		3266472	0					
ANR	3266538	Identifier	src_url		3266472	0					
ANR	3266539	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( dst_url ) ) ;	5062:1:136087:136135	3266472	7	True				
ANR	3266540	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( dst_url ) )		3266472	0					
ANR	3266541	IdentifierDeclType	char *		3266472	0					
ANR	3266542	Identifier	esc2		3266472	1					
ANR	3266543	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( dst_url ) )		3266472	2		=			
ANR	3266544	Identifier	esc2		3266472	0					
ANR	3266545	CallExpression	strdup ( escapeGahpString ( dst_url ) )		3266472	1					
ANR	3266546	Callee	strdup		3266472	0					
ANR	3266547	Identifier	strdup		3266472	0					
ANR	3266548	ArgumentList	escapeGahpString ( dst_url )		3266472	1					
ANR	3266549	Argument	escapeGahpString ( dst_url )		3266472	0					
ANR	3266550	CallExpression	escapeGahpString ( dst_url )		3266472	0					
ANR	3266551	Callee	escapeGahpString		3266472	0					
ANR	3266552	Identifier	escapeGahpString		3266472	0					
ANR	3266553	ArgumentList	dst_url		3266472	1					
ANR	3266554	Argument	dst_url		3266472	0					
ANR	3266555	Identifier	dst_url		3266472	0					
ANR	3266556	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	5063:1:136138:136185	3266472	8	True				
ANR	3266557	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3266472	0					
ANR	3266558	IdentifierDeclType	int		3266472	0					
ANR	3266559	Identifier	x		3266472	1					
ANR	3266560	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3266472	2		=			
ANR	3266561	Identifier	x		3266472	0					
ANR	3266562	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3266472	1					
ANR	3266563	Callee	sprintf		3266472	0					
ANR	3266564	Identifier	sprintf		3266472	0					
ANR	3266565	ArgumentList	reqline		3266472	1					
ANR	3266566	Argument	reqline		3266472	0					
ANR	3266567	Identifier	reqline		3266472	0					
ANR	3266568	Argument	"""%s %s"""		3266472	1					
ANR	3266569	PrimaryExpression	"""%s %s"""		3266472	0					
ANR	3266570	Argument	esc1		3266472	2					
ANR	3266571	Identifier	esc1		3266472	0					
ANR	3266572	Argument	esc2		3266472	3					
ANR	3266573	Identifier	esc2		3266472	0					
ANR	3266574	ExpressionStatement	free ( esc1 )	5064:1:136188:136200	3266472	9	True				
ANR	3266575	CallExpression	free ( esc1 )		3266472	0					
ANR	3266576	Callee	free		3266472	0					
ANR	3266577	Identifier	free		3266472	0					
ANR	3266578	ArgumentList	esc1		3266472	1					
ANR	3266579	Argument	esc1		3266472	0					
ANR	3266580	Identifier	esc1		3266472	0					
ANR	3266581	ExpressionStatement	free ( esc2 )	5065:1:136203:136215	3266472	10	True				
ANR	3266582	CallExpression	free ( esc2 )		3266472	0					
ANR	3266583	Callee	free		3266472	0					
ANR	3266584	Identifier	free		3266472	0					
ANR	3266585	ArgumentList	esc2		3266472	1					
ANR	3266586	Argument	esc2		3266472	0					
ANR	3266587	Identifier	esc2		3266472	0					
ANR	3266588	ExpressionStatement	ASSERT ( x > 0 )	5066:1:136218:136233	3266472	11	True				
ANR	3266589	CallExpression	ASSERT ( x > 0 )		3266472	0					
ANR	3266590	Callee	ASSERT		3266472	0					
ANR	3266591	Identifier	ASSERT		3266472	0					
ANR	3266592	ArgumentList	x > 0		3266472	1					
ANR	3266593	Argument	x > 0		3266472	0					
ANR	3266594	RelationalExpression	x > 0		3266472	0		>			
ANR	3266595	Identifier	x		3266472	0					
ANR	3266596	PrimaryExpression	0		3266472	1					
ANR	3266597	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5067:1:136236:136269	3266472	12	True				
ANR	3266598	IdentifierDecl	* buf = reqline . c_str ( )		3266472	0					
ANR	3266599	IdentifierDeclType	const char *		3266472	0					
ANR	3266600	Identifier	buf		3266472	1					
ANR	3266601	AssignmentExpression	* buf = reqline . c_str ( )		3266472	2		=			
ANR	3266602	Identifier	buf		3266472	0					
ANR	3266603	CallExpression	reqline . c_str ( )		3266472	1					
ANR	3266604	Callee	reqline . c_str		3266472	0					
ANR	3266605	MemberAccess	reqline . c_str		3266472	0					
ANR	3266606	Identifier	reqline		3266472	0					
ANR	3266607	Identifier	c_str		3266472	1					
ANR	3266608	ArgumentList			3266472	1					
ANR	3266609	IfStatement	"if ( ! is_pending ( command , buf ) )"		3266472	13					
ANR	3266610	Condition	"! is_pending ( command , buf )"	5071:6:136370:136393	3266472	0	True				
ANR	3266611	UnaryOperationExpression	"! is_pending ( command , buf )"		3266472	0					
ANR	3266612	UnaryOperator	!		3266472	0					
ANR	3266613	CallExpression	"is_pending ( command , buf )"		3266472	1					
ANR	3266614	Callee	is_pending		3266472	0					
ANR	3266615	Identifier	is_pending		3266472	0					
ANR	3266616	ArgumentList	command		3266472	1					
ANR	3266617	Argument	command		3266472	0					
ANR	3266618	Identifier	command		3266472	0					
ANR	3266619	Argument	buf		3266472	1					
ANR	3266620	Identifier	buf		3266472	0					
ANR	3266621	CompoundStatement		23:33:692:692	3266472	1					
ANR	3266622	IfStatement	if ( m_mode == results_only )		3266472	0					
ANR	3266623	Condition	m_mode == results_only	5074:7:136502:136523	3266472	0	True				
ANR	3266624	EqualityExpression	m_mode == results_only		3266472	0		==			
ANR	3266625	Identifier	m_mode		3266472	0					
ANR	3266626	Identifier	results_only		3266472	1					
ANR	3266627	CompoundStatement		26:32:822:822	3266472	1					
ANR	3266628	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5075:3:136532:136571	3266472	0	True				
ANR	3266629	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3266472	0					
ANR	3266630	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	5077:2:136579:136615	3266472	1	True				
ANR	3266631	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3266472	0					
ANR	3266632	Callee	now_pending		3266472	0					
ANR	3266633	Identifier	now_pending		3266472	0					
ANR	3266634	ArgumentList	command		3266472	1					
ANR	3266635	Argument	command		3266472	0					
ANR	3266636	Identifier	command		3266472	0					
ANR	3266637	Argument	buf		3266472	1					
ANR	3266638	Identifier	buf		3266472	0					
ANR	3266639	Argument	deleg_proxy		3266472	2					
ANR	3266640	Identifier	deleg_proxy		3266472	0					
ANR	3266641	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5083:1:136709:136760	3266472	14	True				
ANR	3266642	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3266472	0					
ANR	3266643	IdentifierDeclType	Gahp_Args *		3266472	0					
ANR	3266644	Identifier	result		3266472	1					
ANR	3266645	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3266472	2		=			
ANR	3266646	Identifier	result		3266472	0					
ANR	3266647	CallExpression	"get_pending_result ( command , buf )"		3266472	1					
ANR	3266648	Callee	get_pending_result		3266472	0					
ANR	3266649	Identifier	get_pending_result		3266472	0					
ANR	3266650	ArgumentList	command		3266472	1					
ANR	3266651	Argument	command		3266472	0					
ANR	3266652	Identifier	command		3266472	0					
ANR	3266653	Argument	buf		3266472	1					
ANR	3266654	Identifier	buf		3266472	0					
ANR	3266655	IfStatement	if ( result )		3266472	15					
ANR	3266656	Condition	result	5084:6:136768:136773	3266472	0	True				
ANR	3266657	Identifier	result		3266472	0					
ANR	3266658	CompoundStatement		41:2:1167:1197	3266472	1					
ANR	3266659	IfStatement	if ( result -> argc != 3 )		3266472	0					
ANR	3266660	Condition	result -> argc != 3	5086:6:136809:136825	3266472	0	True				
ANR	3266661	EqualityExpression	result -> argc != 3		3266472	0		!=			
ANR	3266662	PtrMemberAccess	result -> argc		3266472	0					
ANR	3266663	Identifier	result		3266472	0					
ANR	3266664	Identifier	argc		3266472	1					
ANR	3266665	PrimaryExpression	3		3266472	1					
ANR	3266666	CompoundStatement		38:25:1123:1123	3266472	1					
ANR	3266667	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5087:3:136833:136864	3266472	0	True				
ANR	3266668	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3266472	0					
ANR	3266669	Callee	EXCEPT		3266472	0					
ANR	3266670	Identifier	EXCEPT		3266472	0					
ANR	3266671	ArgumentList	"""Bad %s Result"""		3266472	1					
ANR	3266672	Argument	"""Bad %s Result"""		3266472	0					
ANR	3266673	PrimaryExpression	"""Bad %s Result"""		3266472	0					
ANR	3266674	Argument	command		3266472	1					
ANR	3266675	Identifier	command		3266472	0					
ANR	3266676	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	5089:2:136872:136902	3266472	1	True				
ANR	3266677	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3266472	0					
ANR	3266678	IdentifierDeclType	int		3266472	0					
ANR	3266679	Identifier	rc		3266472	1					
ANR	3266680	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3266472	2		=			
ANR	3266681	Identifier	rc		3266472	0					
ANR	3266682	CallExpression	atoi ( result -> argv [ 1 ] )		3266472	1					
ANR	3266683	Callee	atoi		3266472	0					
ANR	3266684	Identifier	atoi		3266472	0					
ANR	3266685	ArgumentList	result -> argv [ 1 ]		3266472	1					
ANR	3266686	Argument	result -> argv [ 1 ]		3266472	0					
ANR	3266687	ArrayIndexing	result -> argv [ 1 ]		3266472	0					
ANR	3266688	PtrMemberAccess	result -> argv		3266472	0					
ANR	3266689	Identifier	result		3266472	0					
ANR	3266690	Identifier	argv		3266472	1					
ANR	3266691	PrimaryExpression	1		3266472	1					
ANR	3266692	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3266472	2					
ANR	3266693	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	5090:7:136911:136949	3266472	0	True				
ANR	3266694	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3266472	0					
ANR	3266695	Callee	strcasecmp		3266472	0					
ANR	3266696	Identifier	strcasecmp		3266472	0					
ANR	3266697	ArgumentList	result -> argv [ 2 ]		3266472	1					
ANR	3266698	Argument	result -> argv [ 2 ]		3266472	0					
ANR	3266699	ArrayIndexing	result -> argv [ 2 ]		3266472	0					
ANR	3266700	PtrMemberAccess	result -> argv		3266472	0					
ANR	3266701	Identifier	result		3266472	0					
ANR	3266702	Identifier	argv		3266472	1					
ANR	3266703	PrimaryExpression	2		3266472	1					
ANR	3266704	Argument	NULLSTRING		3266472	1					
ANR	3266705	Identifier	NULLSTRING		3266472	0					
ANR	3266706	CompoundStatement		42:49:1248:1248	3266472	1					
ANR	3266707	ExpressionStatement	error_string = result -> argv [ 2 ]	5091:3:136958:136988	3266472	0	True				
ANR	3266708	AssignmentExpression	error_string = result -> argv [ 2 ]		3266472	0		=			
ANR	3266709	Identifier	error_string		3266472	0					
ANR	3266710	ArrayIndexing	result -> argv [ 2 ]		3266472	1					
ANR	3266711	PtrMemberAccess	result -> argv		3266472	0					
ANR	3266712	Identifier	result		3266472	0					
ANR	3266713	Identifier	argv		3266472	1					
ANR	3266714	PrimaryExpression	2		3266472	1					
ANR	3266715	ElseStatement	else		3266472	0					
ANR	3266716	CompoundStatement		44:9:1294:1294	3266472	0					
ANR	3266717	ExpressionStatement	"error_string = """""	5093:3:137004:137021	3266472	0	True				
ANR	3266718	AssignmentExpression	"error_string = """""		3266472	0		=			
ANR	3266719	Identifier	error_string		3266472	0					
ANR	3266720	PrimaryExpression	""""""		3266472	1					
ANR	3266721	Statement	delete	5095:2:137029:137034	3266472	3	True				
ANR	3266722	ExpressionStatement	result	5095:9:137036:137042	3266472	4	True				
ANR	3266723	Identifier	result		3266472	0					
ANR	3266724	ReturnStatement	return rc ;	5096:2:137046:137055	3266472	5	True				
ANR	3266725	Identifier	rc		3266472	0					
ANR	3266726	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3266472	16					
ANR	3266727	Condition	"check_pending_timeout ( command , buf )"	5100:6:137112:137145	3266472	0	True				
ANR	3266728	CallExpression	"check_pending_timeout ( command , buf )"		3266472	0					
ANR	3266729	Callee	check_pending_timeout		3266472	0					
ANR	3266730	Identifier	check_pending_timeout		3266472	0					
ANR	3266731	ArgumentList	command		3266472	1					
ANR	3266732	Argument	command		3266472	0					
ANR	3266733	Identifier	command		3266472	0					
ANR	3266734	Argument	buf		3266472	1					
ANR	3266735	Identifier	buf		3266472	0					
ANR	3266736	CompoundStatement		52:43:1444:1444	3266472	1					
ANR	3266737	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5102:2:137185:137233	3266472	0	True				
ANR	3266738	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3266472	0					
ANR	3266739	Callee	sprintf		3266472	0					
ANR	3266740	Identifier	sprintf		3266472	0					
ANR	3266741	ArgumentList	error_string		3266472	1					
ANR	3266742	Argument	error_string		3266472	0					
ANR	3266743	Identifier	error_string		3266472	0					
ANR	3266744	Argument	"""%s timed out"""		3266472	1					
ANR	3266745	PrimaryExpression	"""%s timed out"""		3266472	0					
ANR	3266746	Argument	command		3266472	2					
ANR	3266747	Identifier	command		3266472	0					
ANR	3266748	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5103:2:137237:137272	3266472	1	True				
ANR	3266749	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3266472	0					
ANR	3266750	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5107:1:137332:137365	3266472	17	True				
ANR	3266751	Identifier	GAHPCLIENT_COMMAND_PENDING		3266472	0					
ANR	3266752	ReturnType	int		3266472	1					
ANR	3266753	Identifier	GahpClient :: gridftp_transfer		3266472	2					
ANR	3266754	ParameterList	"const char * src_url , const char * dst_url"		3266472	3					
ANR	3266755	Parameter	const char * src_url	5048:29:135662:135680	3266472	0	True				
ANR	3266756	ParameterType	const char *		3266472	0					
ANR	3266757	Identifier	src_url		3266472	1					
ANR	3266758	Parameter	const char * dst_url	5048:50:135683:135701	3266472	1	True				
ANR	3266759	ParameterType	const char *		3266472	0					
ANR	3266760	Identifier	dst_url		3266472	1					
ANR	3266761	CFGEntryNode	ENTRY		3266472		True				
ANR	3266762	CFGExitNode	EXIT		3266472		True				
ANR	3266763	Symbol	src_url		3266472						
ANR	3266764	Symbol	server -> m_commands_supported		3266472						
ANR	3266765	Symbol	server		3266472						
ANR	3266766	Symbol	escapeGahpString		3266472						
ANR	3266767	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3266472						
ANR	3266768	Symbol	* server		3266472						
ANR	3266769	Symbol	dst_url		3266472						
ANR	3266770	Symbol	reqline . c_str		3266472						
ANR	3266771	Symbol	results_only		3266472						
ANR	3266772	Symbol	result -> argv		3266472						
ANR	3266773	Symbol	* server -> m_commands_supported		3266472						
ANR	3266774	Symbol	sprintf		3266472						
ANR	3266775	Symbol	result		3266472						
ANR	3266776	Symbol	* result		3266472						
ANR	3266777	Symbol	server -> m_commands_supported -> contains_anycase		3266472						
ANR	3266778	Symbol	GAHPCLIENT_COMMAND_PENDING		3266472						
ANR	3266779	Symbol	reqline		3266472						
ANR	3266780	Symbol	m_mode		3266472						
ANR	3266781	Symbol	strcasecmp		3266472						
ANR	3266782	Symbol	* result -> argv		3266472						
ANR	3266783	Symbol	atoi		3266472						
ANR	3266784	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3266472						
ANR	3266785	Symbol	* * result		3266472						
ANR	3266786	Symbol	NULLSTRING		3266472						
ANR	3266787	Symbol	command		3266472						
ANR	3266788	Symbol	get_pending_result		3266472						
ANR	3266789	Symbol	rc		3266472						
ANR	3266790	Symbol	error_string		3266472						
ANR	3266791	Symbol	esc2		3266472						
ANR	3266792	Symbol	buf		3266472						
ANR	3266793	Symbol	esc1		3266472						
ANR	3266794	Symbol	x		3266472						
ANR	3266795	Symbol	result -> argc		3266472						
ANR	3266796	Symbol	FALSE		3266472						
ANR	3266797	Symbol	* * server		3266472						
ANR	3266798	Symbol	strdup		3266472						
ANR	3266799	Symbol	check_pending_timeout		3266472						
ANR	3266800	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3266472						
ANR	3266801	Symbol	is_pending		3266472						
ANR	3266802	Symbol	deleg_proxy		3266472						
ANR	3266803	Function	GahpClient :: unicore_job_create	5110:0:137370:139099							
ANR	3266804	FunctionDef	"GahpClient :: unicore_job_create (const char * description , char * * job_contact)"		3266803	0					
ANR	3266805	CompoundStatement		5114:0:137456:139099	3266803	0					
ANR	3266806	Statement	static	5116:1:137460:137465	3266803	0	True				
ANR	3266807	IdentifierDeclStatement	"const char * command = ""UNICORE_JOB_CREATE"" ;"	5116:8:137467:137509	3266803	1	True				
ANR	3266808	IdentifierDecl	"* command = ""UNICORE_JOB_CREATE"""		3266803	0					
ANR	3266809	IdentifierDeclType	const char *		3266803	0					
ANR	3266810	Identifier	command		3266803	1					
ANR	3266811	AssignmentExpression	"* command = ""UNICORE_JOB_CREATE"""		3266803	2		=			
ANR	3266812	Identifier	command		3266803	0					
ANR	3266813	PrimaryExpression	"""UNICORE_JOB_CREATE"""		3266803	1					
ANR	3266814	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3266803	2					
ANR	3266815	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5119:6:137558:137619	3266803	0	True				
ANR	3266816	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3266803	0		==			
ANR	3266817	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3266803	0					
ANR	3266818	Callee	server -> m_commands_supported -> contains_anycase		3266803	0					
ANR	3266819	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3266803	0					
ANR	3266820	PtrMemberAccess	server -> m_commands_supported		3266803	0					
ANR	3266821	Identifier	server		3266803	0					
ANR	3266822	Identifier	m_commands_supported		3266803	1					
ANR	3266823	Identifier	contains_anycase		3266803	1					
ANR	3266824	ArgumentList	command		3266803	1					
ANR	3266825	Argument	command		3266803	0					
ANR	3266826	Identifier	command		3266803	0					
ANR	3266827	Identifier	FALSE		3266803	1					
ANR	3266828	CompoundStatement		6:70:165:165	3266803	1					
ANR	3266829	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5120:2:137626:137665	3266803	0	True				
ANR	3266830	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3266803	0					
ANR	3266831	IfStatement	if ( ! description )		3266803	3					
ANR	3266832	Condition	! description	5124:5:137703:137714	3266803	0	True				
ANR	3266833	UnaryOperationExpression	! description		3266803	0					
ANR	3266834	UnaryOperator	!		3266803	0					
ANR	3266835	Identifier	description		3266803	1					
ANR	3266836	ExpressionStatement	description = NULLSTRING	5124:19:137717:137739	3266803	1	True				
ANR	3266837	AssignmentExpression	description = NULLSTRING		3266803	0		=			
ANR	3266838	Identifier	description		3266803	0					
ANR	3266839	Identifier	NULLSTRING		3266803	1					
ANR	3266840	IdentifierDeclStatement	char * desc = strdup ( description ) ;	5125:0:137741:137773	3266803	4	True				
ANR	3266841	IdentifierDecl	* desc = strdup ( description )		3266803	0					
ANR	3266842	IdentifierDeclType	char *		3266803	0					
ANR	3266843	Identifier	desc		3266803	1					
ANR	3266844	AssignmentExpression	* desc = strdup ( description )		3266803	2		=			
ANR	3266845	Identifier	desc		3266803	0					
ANR	3266846	CallExpression	strdup ( description )		3266803	1					
ANR	3266847	Callee	strdup		3266803	0					
ANR	3266848	Identifier	strdup		3266803	0					
ANR	3266849	ArgumentList	description		3266803	1					
ANR	3266850	Argument	description		3266803	0					
ANR	3266851	Identifier	description		3266803	0					
ANR	3266852	IdentifierDeclStatement	int i = strlen ( desc ) ;	5126:0:137775:137797	3266803	5	True				
ANR	3266853	IdentifierDecl	i = strlen ( desc )		3266803	0					
ANR	3266854	IdentifierDeclType	int		3266803	0					
ANR	3266855	Identifier	i		3266803	1					
ANR	3266856	AssignmentExpression	i = strlen ( desc )		3266803	2		=			
ANR	3266857	Identifier	i		3266803	0					
ANR	3266858	CallExpression	strlen ( desc )		3266803	1					
ANR	3266859	Callee	strlen		3266803	0					
ANR	3266860	Identifier	strlen		3266803	0					
ANR	3266861	ArgumentList	desc		3266803	1					
ANR	3266862	Argument	desc		3266803	0					
ANR	3266863	Identifier	desc		3266803	0					
ANR	3266864	IfStatement	if ( i > 0 && desc [ i - 1 ] == '\\n' )		3266803	6					
ANR	3266865	Condition	i > 0 && desc [ i - 1 ] == '\\n'	5127:5:137804:137829	3266803	0	True				
ANR	3266866	AndExpression	i > 0 && desc [ i - 1 ] == '\\n'		3266803	0		&&			
ANR	3266867	RelationalExpression	i > 0		3266803	0		>			
ANR	3266868	Identifier	i		3266803	0					
ANR	3266869	PrimaryExpression	0		3266803	1					
ANR	3266870	EqualityExpression	desc [ i - 1 ] == '\\n'		3266803	1		==			
ANR	3266871	ArrayIndexing	desc [ i - 1 ]		3266803	0					
ANR	3266872	Identifier	desc		3266803	0					
ANR	3266873	AdditiveExpression	i - 1		3266803	1		-			
ANR	3266874	Identifier	i		3266803	0					
ANR	3266875	PrimaryExpression	1		3266803	1					
ANR	3266876	PrimaryExpression	'\\n'		3266803	1					
ANR	3266877	CompoundStatement		14:34:376:376	3266803	1					
ANR	3266878	ExpressionStatement	desc [ i - 1 ] = '\\0'	5128:0:137835:137851	3266803	0	True				
ANR	3266879	AssignmentExpression	desc [ i - 1 ] = '\\0'		3266803	0		=			
ANR	3266880	ArrayIndexing	desc [ i - 1 ]		3266803	0					
ANR	3266881	Identifier	desc		3266803	0					
ANR	3266882	AdditiveExpression	i - 1		3266803	1		-			
ANR	3266883	Identifier	i		3266803	0					
ANR	3266884	PrimaryExpression	1		3266803	1					
ANR	3266885	PrimaryExpression	'\\0'		3266803	1					
ANR	3266886	ExpressionStatement	description = desc	5130:0:137855:137873	3266803	7	True				
ANR	3266887	AssignmentExpression	description = desc		3266803	0		=			
ANR	3266888	Identifier	description		3266803	0					
ANR	3266889	Identifier	desc		3266803	1					
ANR	3266890	IdentifierDeclStatement	std :: string reqline ;	5131:1:137876:137895	3266803	8	True				
ANR	3266891	IdentifierDecl	reqline		3266803	0					
ANR	3266892	IdentifierDeclType	std :: string		3266803	0					
ANR	3266893	Identifier	reqline		3266803	1					
ANR	3266894	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( description ) ) ;"	5132:1:137898:137961	3266803	9	True				
ANR	3266895	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( description ) )"		3266803	0					
ANR	3266896	IdentifierDeclType	int		3266803	0					
ANR	3266897	Identifier	x		3266803	1					
ANR	3266898	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( description ) )"		3266803	2		=			
ANR	3266899	Identifier	x		3266803	0					
ANR	3266900	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( description ) )"		3266803	1					
ANR	3266901	Callee	sprintf		3266803	0					
ANR	3266902	Identifier	sprintf		3266803	0					
ANR	3266903	ArgumentList	reqline		3266803	1					
ANR	3266904	Argument	reqline		3266803	0					
ANR	3266905	Identifier	reqline		3266803	0					
ANR	3266906	Argument	"""%s"""		3266803	1					
ANR	3266907	PrimaryExpression	"""%s"""		3266803	0					
ANR	3266908	Argument	escapeGahpString ( description )		3266803	2					
ANR	3266909	CallExpression	escapeGahpString ( description )		3266803	0					
ANR	3266910	Callee	escapeGahpString		3266803	0					
ANR	3266911	Identifier	escapeGahpString		3266803	0					
ANR	3266912	ArgumentList	description		3266803	1					
ANR	3266913	Argument	description		3266803	0					
ANR	3266914	Identifier	description		3266803	0					
ANR	3266915	ExpressionStatement	ASSERT ( x > 0 )	5133:1:137964:137979	3266803	10	True				
ANR	3266916	CallExpression	ASSERT ( x > 0 )		3266803	0					
ANR	3266917	Callee	ASSERT		3266803	0					
ANR	3266918	Identifier	ASSERT		3266803	0					
ANR	3266919	ArgumentList	x > 0		3266803	1					
ANR	3266920	Argument	x > 0		3266803	0					
ANR	3266921	RelationalExpression	x > 0		3266803	0		>			
ANR	3266922	Identifier	x		3266803	0					
ANR	3266923	PrimaryExpression	0		3266803	1					
ANR	3266924	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5134:1:137982:138015	3266803	11	True				
ANR	3266925	IdentifierDecl	* buf = reqline . c_str ( )		3266803	0					
ANR	3266926	IdentifierDeclType	const char *		3266803	0					
ANR	3266927	Identifier	buf		3266803	1					
ANR	3266928	AssignmentExpression	* buf = reqline . c_str ( )		3266803	2		=			
ANR	3266929	Identifier	buf		3266803	0					
ANR	3266930	CallExpression	reqline . c_str ( )		3266803	1					
ANR	3266931	Callee	reqline . c_str		3266803	0					
ANR	3266932	MemberAccess	reqline . c_str		3266803	0					
ANR	3266933	Identifier	reqline		3266803	0					
ANR	3266934	Identifier	c_str		3266803	1					
ANR	3266935	ArgumentList			3266803	1					
ANR	3266936	ExpressionStatement	free ( desc )	5135:0:138017:138027	3266803	12	True				
ANR	3266937	CallExpression	free ( desc )		3266803	0					
ANR	3266938	Callee	free		3266803	0					
ANR	3266939	Identifier	free		3266803	0					
ANR	3266940	ArgumentList	desc		3266803	1					
ANR	3266941	Argument	desc		3266803	0					
ANR	3266942	Identifier	desc		3266803	0					
ANR	3266943	IfStatement	"if ( ! is_pending ( command , buf ) )"		3266803	13					
ANR	3266944	Condition	"! is_pending ( command , buf )"	5139:6:138128:138151	3266803	0	True				
ANR	3266945	UnaryOperationExpression	"! is_pending ( command , buf )"		3266803	0					
ANR	3266946	UnaryOperator	!		3266803	0					
ANR	3266947	CallExpression	"is_pending ( command , buf )"		3266803	1					
ANR	3266948	Callee	is_pending		3266803	0					
ANR	3266949	Identifier	is_pending		3266803	0					
ANR	3266950	ArgumentList	command		3266803	1					
ANR	3266951	Argument	command		3266803	0					
ANR	3266952	Identifier	command		3266803	0					
ANR	3266953	Argument	buf		3266803	1					
ANR	3266954	Identifier	buf		3266803	0					
ANR	3266955	CompoundStatement		26:33:698:698	3266803	1					
ANR	3266956	IfStatement	if ( m_mode == results_only )		3266803	0					
ANR	3266957	Condition	m_mode == results_only	5142:7:138260:138281	3266803	0	True				
ANR	3266958	EqualityExpression	m_mode == results_only		3266803	0		==			
ANR	3266959	Identifier	m_mode		3266803	0					
ANR	3266960	Identifier	results_only		3266803	1					
ANR	3266961	CompoundStatement		29:32:828:828	3266803	1					
ANR	3266962	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5143:3:138290:138329	3266803	0	True				
ANR	3266963	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3266803	0					
ANR	3266964	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	5145:2:138337:138373	3266803	1	True				
ANR	3266965	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3266803	0					
ANR	3266966	Callee	now_pending		3266803	0					
ANR	3266967	Identifier	now_pending		3266803	0					
ANR	3266968	ArgumentList	command		3266803	1					
ANR	3266969	Argument	command		3266803	0					
ANR	3266970	Identifier	command		3266803	0					
ANR	3266971	Argument	buf		3266803	1					
ANR	3266972	Identifier	buf		3266803	0					
ANR	3266973	Argument	deleg_proxy		3266803	2					
ANR	3266974	Identifier	deleg_proxy		3266803	0					
ANR	3266975	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5151:1:138467:138518	3266803	14	True				
ANR	3266976	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3266803	0					
ANR	3266977	IdentifierDeclType	Gahp_Args *		3266803	0					
ANR	3266978	Identifier	result		3266803	1					
ANR	3266979	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3266803	2		=			
ANR	3266980	Identifier	result		3266803	0					
ANR	3266981	CallExpression	"get_pending_result ( command , buf )"		3266803	1					
ANR	3266982	Callee	get_pending_result		3266803	0					
ANR	3266983	Identifier	get_pending_result		3266803	0					
ANR	3266984	ArgumentList	command		3266803	1					
ANR	3266985	Argument	command		3266803	0					
ANR	3266986	Identifier	command		3266803	0					
ANR	3266987	Argument	buf		3266803	1					
ANR	3266988	Identifier	buf		3266803	0					
ANR	3266989	IfStatement	if ( result )		3266803	15					
ANR	3266990	Condition	result	5152:6:138526:138531	3266803	0	True				
ANR	3266991	Identifier	result		3266803	0					
ANR	3266992	CompoundStatement		44:2:1173:1183	3266803	1					
ANR	3266993	IfStatement	if ( result -> argc != 4 )		3266803	0					
ANR	3266994	Condition	result -> argc != 4	5154:6:138567:138583	3266803	0	True				
ANR	3266995	EqualityExpression	result -> argc != 4		3266803	0		!=			
ANR	3266996	PtrMemberAccess	result -> argc		3266803	0					
ANR	3266997	Identifier	result		3266803	0					
ANR	3266998	Identifier	argc		3266803	1					
ANR	3266999	PrimaryExpression	4		3266803	1					
ANR	3267000	CompoundStatement		41:25:1129:1129	3266803	1					
ANR	3267001	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5155:3:138591:138622	3266803	0	True				
ANR	3267002	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3266803	0					
ANR	3267003	Callee	EXCEPT		3266803	0					
ANR	3267004	Identifier	EXCEPT		3266803	0					
ANR	3267005	ArgumentList	"""Bad %s Result"""		3266803	1					
ANR	3267006	Argument	"""Bad %s Result"""		3266803	0					
ANR	3267007	PrimaryExpression	"""Bad %s Result"""		3266803	0					
ANR	3267008	Argument	command		3266803	1					
ANR	3267009	Identifier	command		3266803	0					
ANR	3267010	IdentifierDeclStatement	int rc = 1 ;	5157:2:138630:138640	3266803	1	True				
ANR	3267011	IdentifierDecl	rc = 1		3266803	0					
ANR	3267012	IdentifierDeclType	int		3266803	0					
ANR	3267013	Identifier	rc		3266803	1					
ANR	3267014	AssignmentExpression	rc = 1		3266803	2		=			
ANR	3267015	Identifier	rc		3266803	0					
ANR	3267016	PrimaryExpression	1		3266803	1					
ANR	3267017	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3266803	2					
ANR	3267018	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	5158:7:138649:138673	3266803	0	True				
ANR	3267019	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3266803	0		==			
ANR	3267020	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3266803	0					
ANR	3267021	ArrayIndexing	result -> argv [ 1 ]		3266803	0					
ANR	3267022	PtrMemberAccess	result -> argv		3266803	0					
ANR	3267023	Identifier	result		3266803	0					
ANR	3267024	Identifier	argv		3266803	1					
ANR	3267025	PrimaryExpression	1		3266803	1					
ANR	3267026	PrimaryExpression	0		3266803	1					
ANR	3267027	PrimaryExpression	'S'		3266803	1					
ANR	3267028	CompoundStatement		45:35:1220:1220	3266803	1					
ANR	3267029	ExpressionStatement	rc = 0	5159:3:138682:138688	3266803	0	True				
ANR	3267030	AssignmentExpression	rc = 0		3266803	0		=			
ANR	3267031	Identifier	rc		3266803	0					
ANR	3267032	PrimaryExpression	0		3266803	1					
ANR	3267033	IfStatement	"if ( result -> argv [ 2 ] && strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3266803	3					
ANR	3267034	Condition	"result -> argv [ 2 ] && strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	5161:7:138701:138758	3266803	0	True				
ANR	3267035	AndExpression	"result -> argv [ 2 ] && strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3266803	0		&&			
ANR	3267036	ArrayIndexing	result -> argv [ 2 ]		3266803	0					
ANR	3267037	PtrMemberAccess	result -> argv		3266803	0					
ANR	3267038	Identifier	result		3266803	0					
ANR	3267039	Identifier	argv		3266803	1					
ANR	3267040	PrimaryExpression	2		3266803	1					
ANR	3267041	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3266803	1					
ANR	3267042	Callee	strcasecmp		3266803	0					
ANR	3267043	Identifier	strcasecmp		3266803	0					
ANR	3267044	ArgumentList	result -> argv [ 2 ]		3266803	1					
ANR	3267045	Argument	result -> argv [ 2 ]		3266803	0					
ANR	3267046	ArrayIndexing	result -> argv [ 2 ]		3266803	0					
ANR	3267047	PtrMemberAccess	result -> argv		3266803	0					
ANR	3267048	Identifier	result		3266803	0					
ANR	3267049	Identifier	argv		3266803	1					
ANR	3267050	PrimaryExpression	2		3266803	1					
ANR	3267051	Argument	NULLSTRING		3266803	1					
ANR	3267052	Identifier	NULLSTRING		3266803	0					
ANR	3267053	CompoundStatement		48:68:1305:1305	3266803	1					
ANR	3267054	ExpressionStatement	* job_contact = strdup ( result -> argv [ 2 ] )	5162:3:138767:138805	3266803	0	True				
ANR	3267055	AssignmentExpression	* job_contact = strdup ( result -> argv [ 2 ] )		3266803	0		=			
ANR	3267056	UnaryOperationExpression	* job_contact		3266803	0					
ANR	3267057	UnaryOperator	*		3266803	0					
ANR	3267058	Identifier	job_contact		3266803	1					
ANR	3267059	CallExpression	strdup ( result -> argv [ 2 ] )		3266803	1					
ANR	3267060	Callee	strdup		3266803	0					
ANR	3267061	Identifier	strdup		3266803	0					
ANR	3267062	ArgumentList	result -> argv [ 2 ]		3266803	1					
ANR	3267063	Argument	result -> argv [ 2 ]		3266803	0					
ANR	3267064	ArrayIndexing	result -> argv [ 2 ]		3266803	0					
ANR	3267065	PtrMemberAccess	result -> argv		3266803	0					
ANR	3267066	Identifier	result		3266803	0					
ANR	3267067	Identifier	argv		3266803	1					
ANR	3267068	PrimaryExpression	2		3266803	1					
ANR	3267069	Statement	delete	5164:2:138813:138818	3266803	4	True				
ANR	3267070	ExpressionStatement	result	5164:9:138820:138826	3266803	5	True				
ANR	3267071	Identifier	result		3266803	0					
ANR	3267072	ReturnStatement	return rc ;	5165:2:138830:138839	3266803	6	True				
ANR	3267073	Identifier	rc		3266803	0					
ANR	3267074	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3266803	16					
ANR	3267075	Condition	"check_pending_timeout ( command , buf )"	5169:6:138896:138929	3266803	0	True				
ANR	3267076	CallExpression	"check_pending_timeout ( command , buf )"		3266803	0					
ANR	3267077	Callee	check_pending_timeout		3266803	0					
ANR	3267078	Identifier	check_pending_timeout		3266803	0					
ANR	3267079	ArgumentList	command		3266803	1					
ANR	3267080	Argument	command		3266803	0					
ANR	3267081	Identifier	command		3266803	0					
ANR	3267082	Argument	buf		3266803	1					
ANR	3267083	Identifier	buf		3266803	0					
ANR	3267084	CompoundStatement		56:43:1476:1476	3266803	1					
ANR	3267085	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5171:2:138969:139004	3266803	0	True				
ANR	3267086	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3266803	0					
ANR	3267087	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5175:1:139064:139097	3266803	17	True				
ANR	3267088	Identifier	GAHPCLIENT_COMMAND_PENDING		3266803	0					
ANR	3267089	ReturnType	int		3266803	1					
ANR	3267090	Identifier	GahpClient :: unicore_job_create		3266803	2					
ANR	3267091	ParameterList	"const char * description , char * * job_contact"		3266803	3					
ANR	3267092	Parameter	const char * description	5112:1:137408:137431	3266803	0	True				
ANR	3267093	ParameterType	const char *		3266803	0					
ANR	3267094	Identifier	description		3266803	1					
ANR	3267095	Parameter	char * * job_contact	5113:1:137435:137453	3266803	1	True				
ANR	3267096	ParameterType	char * *		3266803	0					
ANR	3267097	Identifier	job_contact		3266803	1					
ANR	3267098	CFGEntryNode	ENTRY		3266803		True				
ANR	3267099	CFGExitNode	EXIT		3266803		True				
ANR	3267100	Symbol	server -> m_commands_supported		3266803						
ANR	3267101	Symbol	server		3266803						
ANR	3267102	Symbol	escapeGahpString		3266803						
ANR	3267103	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3266803						
ANR	3267104	Symbol	* server		3266803						
ANR	3267105	Symbol	description		3266803						
ANR	3267106	Symbol	reqline . c_str		3266803						
ANR	3267107	Symbol	results_only		3266803						
ANR	3267108	Symbol	result -> argv		3266803						
ANR	3267109	Symbol	* server -> m_commands_supported		3266803						
ANR	3267110	Symbol	sprintf		3266803						
ANR	3267111	Symbol	result		3266803						
ANR	3267112	Symbol	strlen		3266803						
ANR	3267113	Symbol	* result		3266803						
ANR	3267114	Symbol	server -> m_commands_supported -> contains_anycase		3266803						
ANR	3267115	Symbol	GAHPCLIENT_COMMAND_PENDING		3266803						
ANR	3267116	Symbol	reqline		3266803						
ANR	3267117	Symbol	* desc		3266803						
ANR	3267118	Symbol	m_mode		3266803						
ANR	3267119	Symbol	strcasecmp		3266803						
ANR	3267120	Symbol	job_contact		3266803						
ANR	3267121	Symbol	* result -> argv		3266803						
ANR	3267122	Symbol	* job_contact		3266803						
ANR	3267123	Symbol	* * * result		3266803						
ANR	3267124	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3266803						
ANR	3267125	Symbol	i		3266803						
ANR	3267126	Symbol	* * result		3266803						
ANR	3267127	Symbol	NULLSTRING		3266803						
ANR	3267128	Symbol	command		3266803						
ANR	3267129	Symbol	get_pending_result		3266803						
ANR	3267130	Symbol	* * result -> argv		3266803						
ANR	3267131	Symbol	rc		3266803						
ANR	3267132	Symbol	buf		3266803						
ANR	3267133	Symbol	* i		3266803						
ANR	3267134	Symbol	x		3266803						
ANR	3267135	Symbol	result -> argc		3266803						
ANR	3267136	Symbol	FALSE		3266803						
ANR	3267137	Symbol	* * server		3266803						
ANR	3267138	Symbol	strdup		3266803						
ANR	3267139	Symbol	check_pending_timeout		3266803						
ANR	3267140	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3266803						
ANR	3267141	Symbol	desc		3266803						
ANR	3267142	Symbol	is_pending		3266803						
ANR	3267143	Symbol	deleg_proxy		3266803						
ANR	3267144	Function	GahpClient :: unicore_job_start	5178:0:139102:140538							
ANR	3267145	FunctionDef	GahpClient :: unicore_job_start (const char * job_contact)		3267144	0					
ANR	3267146	CompoundStatement		5180:0:139163:140538	3267144	0					
ANR	3267147	Statement	static	5181:1:139166:139171	3267144	0	True				
ANR	3267148	IdentifierDeclStatement	"const char * command = ""UNICORE_JOB_START"" ;"	5181:8:139173:139214	3267144	1	True				
ANR	3267149	IdentifierDecl	"* command = ""UNICORE_JOB_START"""		3267144	0					
ANR	3267150	IdentifierDeclType	const char *		3267144	0					
ANR	3267151	Identifier	command		3267144	1					
ANR	3267152	AssignmentExpression	"* command = ""UNICORE_JOB_START"""		3267144	2		=			
ANR	3267153	Identifier	command		3267144	0					
ANR	3267154	PrimaryExpression	"""UNICORE_JOB_START"""		3267144	1					
ANR	3267155	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3267144	2					
ANR	3267156	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5184:6:139263:139324	3267144	0	True				
ANR	3267157	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3267144	0		==			
ANR	3267158	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3267144	0					
ANR	3267159	Callee	server -> m_commands_supported -> contains_anycase		3267144	0					
ANR	3267160	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3267144	0					
ANR	3267161	PtrMemberAccess	server -> m_commands_supported		3267144	0					
ANR	3267162	Identifier	server		3267144	0					
ANR	3267163	Identifier	m_commands_supported		3267144	1					
ANR	3267164	Identifier	contains_anycase		3267144	1					
ANR	3267165	ArgumentList	command		3267144	1					
ANR	3267166	Argument	command		3267144	0					
ANR	3267167	Identifier	command		3267144	0					
ANR	3267168	Identifier	FALSE		3267144	1					
ANR	3267169	CompoundStatement		5:70:163:163	3267144	1					
ANR	3267170	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5185:2:139331:139370	3267144	0	True				
ANR	3267171	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267144	0					
ANR	3267172	IfStatement	if ( ! job_contact )		3267144	3					
ANR	3267173	Condition	! job_contact	5189:5:139408:139419	3267144	0	True				
ANR	3267174	UnaryOperationExpression	! job_contact		3267144	0					
ANR	3267175	UnaryOperator	!		3267144	0					
ANR	3267176	Identifier	job_contact		3267144	1					
ANR	3267177	ExpressionStatement	job_contact = NULLSTRING	5189:19:139422:139444	3267144	1	True				
ANR	3267178	AssignmentExpression	job_contact = NULLSTRING		3267144	0		=			
ANR	3267179	Identifier	job_contact		3267144	0					
ANR	3267180	Identifier	NULLSTRING		3267144	1					
ANR	3267181	IdentifierDeclStatement	std :: string reqline ;	5190:1:139447:139466	3267144	4	True				
ANR	3267182	IdentifierDecl	reqline		3267144	0					
ANR	3267183	IdentifierDeclType	std :: string		3267144	0					
ANR	3267184	Identifier	reqline		3267144	1					
ANR	3267185	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	5191:1:139469:139528	3267144	5	True				
ANR	3267186	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267144	0					
ANR	3267187	IdentifierDeclType	int		3267144	0					
ANR	3267188	Identifier	x		3267144	1					
ANR	3267189	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267144	2		=			
ANR	3267190	Identifier	x		3267144	0					
ANR	3267191	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267144	1					
ANR	3267192	Callee	sprintf		3267144	0					
ANR	3267193	Identifier	sprintf		3267144	0					
ANR	3267194	ArgumentList	reqline		3267144	1					
ANR	3267195	Argument	reqline		3267144	0					
ANR	3267196	Identifier	reqline		3267144	0					
ANR	3267197	Argument	"""%s"""		3267144	1					
ANR	3267198	PrimaryExpression	"""%s"""		3267144	0					
ANR	3267199	Argument	escapeGahpString ( job_contact )		3267144	2					
ANR	3267200	CallExpression	escapeGahpString ( job_contact )		3267144	0					
ANR	3267201	Callee	escapeGahpString		3267144	0					
ANR	3267202	Identifier	escapeGahpString		3267144	0					
ANR	3267203	ArgumentList	job_contact		3267144	1					
ANR	3267204	Argument	job_contact		3267144	0					
ANR	3267205	Identifier	job_contact		3267144	0					
ANR	3267206	ExpressionStatement	ASSERT ( x > 0 )	5192:1:139531:139546	3267144	6	True				
ANR	3267207	CallExpression	ASSERT ( x > 0 )		3267144	0					
ANR	3267208	Callee	ASSERT		3267144	0					
ANR	3267209	Identifier	ASSERT		3267144	0					
ANR	3267210	ArgumentList	x > 0		3267144	1					
ANR	3267211	Argument	x > 0		3267144	0					
ANR	3267212	RelationalExpression	x > 0		3267144	0		>			
ANR	3267213	Identifier	x		3267144	0					
ANR	3267214	PrimaryExpression	0		3267144	1					
ANR	3267215	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5193:1:139549:139582	3267144	7	True				
ANR	3267216	IdentifierDecl	* buf = reqline . c_str ( )		3267144	0					
ANR	3267217	IdentifierDeclType	const char *		3267144	0					
ANR	3267218	Identifier	buf		3267144	1					
ANR	3267219	AssignmentExpression	* buf = reqline . c_str ( )		3267144	2		=			
ANR	3267220	Identifier	buf		3267144	0					
ANR	3267221	CallExpression	reqline . c_str ( )		3267144	1					
ANR	3267222	Callee	reqline . c_str		3267144	0					
ANR	3267223	MemberAccess	reqline . c_str		3267144	0					
ANR	3267224	Identifier	reqline		3267144	0					
ANR	3267225	Identifier	c_str		3267144	1					
ANR	3267226	ArgumentList			3267144	1					
ANR	3267227	IfStatement	"if ( ! is_pending ( command , buf ) )"		3267144	8					
ANR	3267228	Condition	"! is_pending ( command , buf )"	5197:6:139683:139706	3267144	0	True				
ANR	3267229	UnaryOperationExpression	"! is_pending ( command , buf )"		3267144	0					
ANR	3267230	UnaryOperator	!		3267144	0					
ANR	3267231	CallExpression	"is_pending ( command , buf )"		3267144	1					
ANR	3267232	Callee	is_pending		3267144	0					
ANR	3267233	Identifier	is_pending		3267144	0					
ANR	3267234	ArgumentList	command		3267144	1					
ANR	3267235	Argument	command		3267144	0					
ANR	3267236	Identifier	command		3267144	0					
ANR	3267237	Argument	buf		3267144	1					
ANR	3267238	Identifier	buf		3267144	0					
ANR	3267239	CompoundStatement		18:33:546:546	3267144	1					
ANR	3267240	IfStatement	if ( m_mode == results_only )		3267144	0					
ANR	3267241	Condition	m_mode == results_only	5200:7:139815:139836	3267144	0	True				
ANR	3267242	EqualityExpression	m_mode == results_only		3267144	0		==			
ANR	3267243	Identifier	m_mode		3267144	0					
ANR	3267244	Identifier	results_only		3267144	1					
ANR	3267245	CompoundStatement		21:32:676:676	3267144	1					
ANR	3267246	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5201:3:139845:139884	3267144	0	True				
ANR	3267247	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267144	0					
ANR	3267248	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	5203:2:139892:139929	3267144	1	True				
ANR	3267249	CallExpression	"now_pending ( command , buf , normal_proxy )"		3267144	0					
ANR	3267250	Callee	now_pending		3267144	0					
ANR	3267251	Identifier	now_pending		3267144	0					
ANR	3267252	ArgumentList	command		3267144	1					
ANR	3267253	Argument	command		3267144	0					
ANR	3267254	Identifier	command		3267144	0					
ANR	3267255	Argument	buf		3267144	1					
ANR	3267256	Identifier	buf		3267144	0					
ANR	3267257	Argument	normal_proxy		3267144	2					
ANR	3267258	Identifier	normal_proxy		3267144	0					
ANR	3267259	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5209:1:140023:140074	3267144	9	True				
ANR	3267260	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3267144	0					
ANR	3267261	IdentifierDeclType	Gahp_Args *		3267144	0					
ANR	3267262	Identifier	result		3267144	1					
ANR	3267263	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3267144	2		=			
ANR	3267264	Identifier	result		3267144	0					
ANR	3267265	CallExpression	"get_pending_result ( command , buf )"		3267144	1					
ANR	3267266	Callee	get_pending_result		3267144	0					
ANR	3267267	Identifier	get_pending_result		3267144	0					
ANR	3267268	ArgumentList	command		3267144	1					
ANR	3267269	Argument	command		3267144	0					
ANR	3267270	Identifier	command		3267144	0					
ANR	3267271	Argument	buf		3267144	1					
ANR	3267272	Identifier	buf		3267144	0					
ANR	3267273	IfStatement	if ( result )		3267144	10					
ANR	3267274	Condition	result	5210:6:140082:140087	3267144	0	True				
ANR	3267275	Identifier	result		3267144	0					
ANR	3267276	CompoundStatement		36:2:1022:1032	3267144	1					
ANR	3267277	IfStatement	if ( result -> argc != 3 )		3267144	0					
ANR	3267278	Condition	result -> argc != 3	5212:6:140123:140139	3267144	0	True				
ANR	3267279	EqualityExpression	result -> argc != 3		3267144	0		!=			
ANR	3267280	PtrMemberAccess	result -> argc		3267144	0					
ANR	3267281	Identifier	result		3267144	0					
ANR	3267282	Identifier	argc		3267144	1					
ANR	3267283	PrimaryExpression	3		3267144	1					
ANR	3267284	CompoundStatement		33:25:978:978	3267144	1					
ANR	3267285	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5213:3:140147:140178	3267144	0	True				
ANR	3267286	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3267144	0					
ANR	3267287	Callee	EXCEPT		3267144	0					
ANR	3267288	Identifier	EXCEPT		3267144	0					
ANR	3267289	ArgumentList	"""Bad %s Result"""		3267144	1					
ANR	3267290	Argument	"""Bad %s Result"""		3267144	0					
ANR	3267291	PrimaryExpression	"""Bad %s Result"""		3267144	0					
ANR	3267292	Argument	command		3267144	1					
ANR	3267293	Identifier	command		3267144	0					
ANR	3267294	IdentifierDeclStatement	int rc = 1 ;	5215:2:140186:140196	3267144	1	True				
ANR	3267295	IdentifierDecl	rc = 1		3267144	0					
ANR	3267296	IdentifierDeclType	int		3267144	0					
ANR	3267297	Identifier	rc		3267144	1					
ANR	3267298	AssignmentExpression	rc = 1		3267144	2		=			
ANR	3267299	Identifier	rc		3267144	0					
ANR	3267300	PrimaryExpression	1		3267144	1					
ANR	3267301	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3267144	2					
ANR	3267302	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	5216:7:140205:140229	3267144	0	True				
ANR	3267303	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3267144	0		==			
ANR	3267304	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3267144	0					
ANR	3267305	ArrayIndexing	result -> argv [ 1 ]		3267144	0					
ANR	3267306	PtrMemberAccess	result -> argv		3267144	0					
ANR	3267307	Identifier	result		3267144	0					
ANR	3267308	Identifier	argv		3267144	1					
ANR	3267309	PrimaryExpression	1		3267144	1					
ANR	3267310	PrimaryExpression	0		3267144	1					
ANR	3267311	PrimaryExpression	'S'		3267144	1					
ANR	3267312	CompoundStatement		37:35:1069:1069	3267144	1					
ANR	3267313	ExpressionStatement	rc = 0	5217:3:140238:140244	3267144	0	True				
ANR	3267314	AssignmentExpression	rc = 0		3267144	0		=			
ANR	3267315	Identifier	rc		3267144	0					
ANR	3267316	PrimaryExpression	0		3267144	1					
ANR	3267317	Statement	delete	5219:2:140252:140257	3267144	3	True				
ANR	3267318	ExpressionStatement	result	5219:9:140259:140265	3267144	4	True				
ANR	3267319	Identifier	result		3267144	0					
ANR	3267320	ReturnStatement	return rc ;	5220:2:140269:140278	3267144	5	True				
ANR	3267321	Identifier	rc		3267144	0					
ANR	3267322	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3267144	11					
ANR	3267323	Condition	"check_pending_timeout ( command , buf )"	5224:6:140335:140368	3267144	0	True				
ANR	3267324	CallExpression	"check_pending_timeout ( command , buf )"		3267144	0					
ANR	3267325	Callee	check_pending_timeout		3267144	0					
ANR	3267326	Identifier	check_pending_timeout		3267144	0					
ANR	3267327	ArgumentList	command		3267144	1					
ANR	3267328	Argument	command		3267144	0					
ANR	3267329	Identifier	command		3267144	0					
ANR	3267330	Argument	buf		3267144	1					
ANR	3267331	Identifier	buf		3267144	0					
ANR	3267332	CompoundStatement		45:43:1208:1208	3267144	1					
ANR	3267333	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5226:2:140408:140443	3267144	0	True				
ANR	3267334	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3267144	0					
ANR	3267335	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5230:1:140503:140536	3267144	12	True				
ANR	3267336	Identifier	GAHPCLIENT_COMMAND_PENDING		3267144	0					
ANR	3267337	ReturnType	int		3267144	1					
ANR	3267338	Identifier	GahpClient :: unicore_job_start		3267144	2					
ANR	3267339	ParameterList	const char * job_contact		3267144	3					
ANR	3267340	Parameter	const char * job_contact	5179:30:139137:139160	3267144	0	True				
ANR	3267341	ParameterType	const char *		3267144	0					
ANR	3267342	Identifier	job_contact		3267144	1					
ANR	3267343	CFGEntryNode	ENTRY		3267144		True				
ANR	3267344	CFGExitNode	EXIT		3267144		True				
ANR	3267345	Symbol	server		3267144						
ANR	3267346	Symbol	server -> m_commands_supported		3267144						
ANR	3267347	Symbol	escapeGahpString		3267144						
ANR	3267348	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267144						
ANR	3267349	Symbol	* server		3267144						
ANR	3267350	Symbol	reqline . c_str		3267144						
ANR	3267351	Symbol	results_only		3267144						
ANR	3267352	Symbol	result -> argv		3267144						
ANR	3267353	Symbol	* server -> m_commands_supported		3267144						
ANR	3267354	Symbol	sprintf		3267144						
ANR	3267355	Symbol	result		3267144						
ANR	3267356	Symbol	normal_proxy		3267144						
ANR	3267357	Symbol	* result		3267144						
ANR	3267358	Symbol	server -> m_commands_supported -> contains_anycase		3267144						
ANR	3267359	Symbol	GAHPCLIENT_COMMAND_PENDING		3267144						
ANR	3267360	Symbol	reqline		3267144						
ANR	3267361	Symbol	m_mode		3267144						
ANR	3267362	Symbol	job_contact		3267144						
ANR	3267363	Symbol	* result -> argv		3267144						
ANR	3267364	Symbol	* * * result		3267144						
ANR	3267365	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3267144						
ANR	3267366	Symbol	* * result		3267144						
ANR	3267367	Symbol	NULLSTRING		3267144						
ANR	3267368	Symbol	command		3267144						
ANR	3267369	Symbol	get_pending_result		3267144						
ANR	3267370	Symbol	* * result -> argv		3267144						
ANR	3267371	Symbol	rc		3267144						
ANR	3267372	Symbol	buf		3267144						
ANR	3267373	Symbol	x		3267144						
ANR	3267374	Symbol	result -> argc		3267144						
ANR	3267375	Symbol	FALSE		3267144						
ANR	3267376	Symbol	* * server		3267144						
ANR	3267377	Symbol	check_pending_timeout		3267144						
ANR	3267378	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267144						
ANR	3267379	Symbol	is_pending		3267144						
ANR	3267380	Function	GahpClient :: unicore_job_destroy	5233:0:140541:141980							
ANR	3267381	FunctionDef	GahpClient :: unicore_job_destroy (const char * job_contact)		3267380	0					
ANR	3267382	CompoundStatement		5235:0:140603:141980	3267380	0					
ANR	3267383	Statement	static	5236:1:140606:140611	3267380	0	True				
ANR	3267384	IdentifierDeclStatement	"const char * command = ""UNICORE_JOB_DESTROY"" ;"	5236:8:140613:140656	3267380	1	True				
ANR	3267385	IdentifierDecl	"* command = ""UNICORE_JOB_DESTROY"""		3267380	0					
ANR	3267386	IdentifierDeclType	const char *		3267380	0					
ANR	3267387	Identifier	command		3267380	1					
ANR	3267388	AssignmentExpression	"* command = ""UNICORE_JOB_DESTROY"""		3267380	2		=			
ANR	3267389	Identifier	command		3267380	0					
ANR	3267390	PrimaryExpression	"""UNICORE_JOB_DESTROY"""		3267380	1					
ANR	3267391	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3267380	2					
ANR	3267392	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5239:6:140705:140766	3267380	0	True				
ANR	3267393	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3267380	0		==			
ANR	3267394	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3267380	0					
ANR	3267395	Callee	server -> m_commands_supported -> contains_anycase		3267380	0					
ANR	3267396	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3267380	0					
ANR	3267397	PtrMemberAccess	server -> m_commands_supported		3267380	0					
ANR	3267398	Identifier	server		3267380	0					
ANR	3267399	Identifier	m_commands_supported		3267380	1					
ANR	3267400	Identifier	contains_anycase		3267380	1					
ANR	3267401	ArgumentList	command		3267380	1					
ANR	3267402	Argument	command		3267380	0					
ANR	3267403	Identifier	command		3267380	0					
ANR	3267404	Identifier	FALSE		3267380	1					
ANR	3267405	CompoundStatement		5:70:165:165	3267380	1					
ANR	3267406	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5240:2:140773:140812	3267380	0	True				
ANR	3267407	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267380	0					
ANR	3267408	IfStatement	if ( ! job_contact )		3267380	3					
ANR	3267409	Condition	! job_contact	5244:5:140850:140861	3267380	0	True				
ANR	3267410	UnaryOperationExpression	! job_contact		3267380	0					
ANR	3267411	UnaryOperator	!		3267380	0					
ANR	3267412	Identifier	job_contact		3267380	1					
ANR	3267413	ExpressionStatement	job_contact = NULLSTRING	5244:19:140864:140886	3267380	1	True				
ANR	3267414	AssignmentExpression	job_contact = NULLSTRING		3267380	0		=			
ANR	3267415	Identifier	job_contact		3267380	0					
ANR	3267416	Identifier	NULLSTRING		3267380	1					
ANR	3267417	IdentifierDeclStatement	std :: string reqline ;	5245:1:140889:140908	3267380	4	True				
ANR	3267418	IdentifierDecl	reqline		3267380	0					
ANR	3267419	IdentifierDeclType	std :: string		3267380	0					
ANR	3267420	Identifier	reqline		3267380	1					
ANR	3267421	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	5246:1:140911:140970	3267380	5	True				
ANR	3267422	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267380	0					
ANR	3267423	IdentifierDeclType	int		3267380	0					
ANR	3267424	Identifier	x		3267380	1					
ANR	3267425	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267380	2		=			
ANR	3267426	Identifier	x		3267380	0					
ANR	3267427	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267380	1					
ANR	3267428	Callee	sprintf		3267380	0					
ANR	3267429	Identifier	sprintf		3267380	0					
ANR	3267430	ArgumentList	reqline		3267380	1					
ANR	3267431	Argument	reqline		3267380	0					
ANR	3267432	Identifier	reqline		3267380	0					
ANR	3267433	Argument	"""%s"""		3267380	1					
ANR	3267434	PrimaryExpression	"""%s"""		3267380	0					
ANR	3267435	Argument	escapeGahpString ( job_contact )		3267380	2					
ANR	3267436	CallExpression	escapeGahpString ( job_contact )		3267380	0					
ANR	3267437	Callee	escapeGahpString		3267380	0					
ANR	3267438	Identifier	escapeGahpString		3267380	0					
ANR	3267439	ArgumentList	job_contact		3267380	1					
ANR	3267440	Argument	job_contact		3267380	0					
ANR	3267441	Identifier	job_contact		3267380	0					
ANR	3267442	ExpressionStatement	ASSERT ( x > 0 )	5247:1:140973:140988	3267380	6	True				
ANR	3267443	CallExpression	ASSERT ( x > 0 )		3267380	0					
ANR	3267444	Callee	ASSERT		3267380	0					
ANR	3267445	Identifier	ASSERT		3267380	0					
ANR	3267446	ArgumentList	x > 0		3267380	1					
ANR	3267447	Argument	x > 0		3267380	0					
ANR	3267448	RelationalExpression	x > 0		3267380	0		>			
ANR	3267449	Identifier	x		3267380	0					
ANR	3267450	PrimaryExpression	0		3267380	1					
ANR	3267451	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5248:1:140991:141024	3267380	7	True				
ANR	3267452	IdentifierDecl	* buf = reqline . c_str ( )		3267380	0					
ANR	3267453	IdentifierDeclType	const char *		3267380	0					
ANR	3267454	Identifier	buf		3267380	1					
ANR	3267455	AssignmentExpression	* buf = reqline . c_str ( )		3267380	2		=			
ANR	3267456	Identifier	buf		3267380	0					
ANR	3267457	CallExpression	reqline . c_str ( )		3267380	1					
ANR	3267458	Callee	reqline . c_str		3267380	0					
ANR	3267459	MemberAccess	reqline . c_str		3267380	0					
ANR	3267460	Identifier	reqline		3267380	0					
ANR	3267461	Identifier	c_str		3267380	1					
ANR	3267462	ArgumentList			3267380	1					
ANR	3267463	IfStatement	"if ( ! is_pending ( command , buf ) )"		3267380	8					
ANR	3267464	Condition	"! is_pending ( command , buf )"	5252:6:141125:141148	3267380	0	True				
ANR	3267465	UnaryOperationExpression	"! is_pending ( command , buf )"		3267380	0					
ANR	3267466	UnaryOperator	!		3267380	0					
ANR	3267467	CallExpression	"is_pending ( command , buf )"		3267380	1					
ANR	3267468	Callee	is_pending		3267380	0					
ANR	3267469	Identifier	is_pending		3267380	0					
ANR	3267470	ArgumentList	command		3267380	1					
ANR	3267471	Argument	command		3267380	0					
ANR	3267472	Identifier	command		3267380	0					
ANR	3267473	Argument	buf		3267380	1					
ANR	3267474	Identifier	buf		3267380	0					
ANR	3267475	CompoundStatement		18:33:548:548	3267380	1					
ANR	3267476	IfStatement	if ( m_mode == results_only )		3267380	0					
ANR	3267477	Condition	m_mode == results_only	5255:7:141257:141278	3267380	0	True				
ANR	3267478	EqualityExpression	m_mode == results_only		3267380	0		==			
ANR	3267479	Identifier	m_mode		3267380	0					
ANR	3267480	Identifier	results_only		3267380	1					
ANR	3267481	CompoundStatement		21:32:678:678	3267380	1					
ANR	3267482	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5256:3:141287:141326	3267380	0	True				
ANR	3267483	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267380	0					
ANR	3267484	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	5258:2:141334:141371	3267380	1	True				
ANR	3267485	CallExpression	"now_pending ( command , buf , normal_proxy )"		3267380	0					
ANR	3267486	Callee	now_pending		3267380	0					
ANR	3267487	Identifier	now_pending		3267380	0					
ANR	3267488	ArgumentList	command		3267380	1					
ANR	3267489	Argument	command		3267380	0					
ANR	3267490	Identifier	command		3267380	0					
ANR	3267491	Argument	buf		3267380	1					
ANR	3267492	Identifier	buf		3267380	0					
ANR	3267493	Argument	normal_proxy		3267380	2					
ANR	3267494	Identifier	normal_proxy		3267380	0					
ANR	3267495	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5264:1:141465:141516	3267380	9	True				
ANR	3267496	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3267380	0					
ANR	3267497	IdentifierDeclType	Gahp_Args *		3267380	0					
ANR	3267498	Identifier	result		3267380	1					
ANR	3267499	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3267380	2		=			
ANR	3267500	Identifier	result		3267380	0					
ANR	3267501	CallExpression	"get_pending_result ( command , buf )"		3267380	1					
ANR	3267502	Callee	get_pending_result		3267380	0					
ANR	3267503	Identifier	get_pending_result		3267380	0					
ANR	3267504	ArgumentList	command		3267380	1					
ANR	3267505	Argument	command		3267380	0					
ANR	3267506	Identifier	command		3267380	0					
ANR	3267507	Argument	buf		3267380	1					
ANR	3267508	Identifier	buf		3267380	0					
ANR	3267509	IfStatement	if ( result )		3267380	10					
ANR	3267510	Condition	result	5265:6:141524:141529	3267380	0	True				
ANR	3267511	Identifier	result		3267380	0					
ANR	3267512	CompoundStatement		36:2:1024:1034	3267380	1					
ANR	3267513	IfStatement	if ( result -> argc != 3 )		3267380	0					
ANR	3267514	Condition	result -> argc != 3	5267:6:141565:141581	3267380	0	True				
ANR	3267515	EqualityExpression	result -> argc != 3		3267380	0		!=			
ANR	3267516	PtrMemberAccess	result -> argc		3267380	0					
ANR	3267517	Identifier	result		3267380	0					
ANR	3267518	Identifier	argc		3267380	1					
ANR	3267519	PrimaryExpression	3		3267380	1					
ANR	3267520	CompoundStatement		33:25:980:980	3267380	1					
ANR	3267521	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5268:3:141589:141620	3267380	0	True				
ANR	3267522	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3267380	0					
ANR	3267523	Callee	EXCEPT		3267380	0					
ANR	3267524	Identifier	EXCEPT		3267380	0					
ANR	3267525	ArgumentList	"""Bad %s Result"""		3267380	1					
ANR	3267526	Argument	"""Bad %s Result"""		3267380	0					
ANR	3267527	PrimaryExpression	"""Bad %s Result"""		3267380	0					
ANR	3267528	Argument	command		3267380	1					
ANR	3267529	Identifier	command		3267380	0					
ANR	3267530	IdentifierDeclStatement	int rc = 1 ;	5270:2:141628:141638	3267380	1	True				
ANR	3267531	IdentifierDecl	rc = 1		3267380	0					
ANR	3267532	IdentifierDeclType	int		3267380	0					
ANR	3267533	Identifier	rc		3267380	1					
ANR	3267534	AssignmentExpression	rc = 1		3267380	2		=			
ANR	3267535	Identifier	rc		3267380	0					
ANR	3267536	PrimaryExpression	1		3267380	1					
ANR	3267537	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3267380	2					
ANR	3267538	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	5271:7:141647:141671	3267380	0	True				
ANR	3267539	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3267380	0		==			
ANR	3267540	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3267380	0					
ANR	3267541	ArrayIndexing	result -> argv [ 1 ]		3267380	0					
ANR	3267542	PtrMemberAccess	result -> argv		3267380	0					
ANR	3267543	Identifier	result		3267380	0					
ANR	3267544	Identifier	argv		3267380	1					
ANR	3267545	PrimaryExpression	1		3267380	1					
ANR	3267546	PrimaryExpression	0		3267380	1					
ANR	3267547	PrimaryExpression	'S'		3267380	1					
ANR	3267548	CompoundStatement		37:35:1071:1071	3267380	1					
ANR	3267549	ExpressionStatement	rc = 0	5272:3:141680:141686	3267380	0	True				
ANR	3267550	AssignmentExpression	rc = 0		3267380	0		=			
ANR	3267551	Identifier	rc		3267380	0					
ANR	3267552	PrimaryExpression	0		3267380	1					
ANR	3267553	Statement	delete	5274:2:141694:141699	3267380	3	True				
ANR	3267554	ExpressionStatement	result	5274:9:141701:141707	3267380	4	True				
ANR	3267555	Identifier	result		3267380	0					
ANR	3267556	ReturnStatement	return rc ;	5275:2:141711:141720	3267380	5	True				
ANR	3267557	Identifier	rc		3267380	0					
ANR	3267558	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3267380	11					
ANR	3267559	Condition	"check_pending_timeout ( command , buf )"	5279:6:141777:141810	3267380	0	True				
ANR	3267560	CallExpression	"check_pending_timeout ( command , buf )"		3267380	0					
ANR	3267561	Callee	check_pending_timeout		3267380	0					
ANR	3267562	Identifier	check_pending_timeout		3267380	0					
ANR	3267563	ArgumentList	command		3267380	1					
ANR	3267564	Argument	command		3267380	0					
ANR	3267565	Identifier	command		3267380	0					
ANR	3267566	Argument	buf		3267380	1					
ANR	3267567	Identifier	buf		3267380	0					
ANR	3267568	CompoundStatement		45:43:1210:1210	3267380	1					
ANR	3267569	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5281:2:141850:141885	3267380	0	True				
ANR	3267570	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3267380	0					
ANR	3267571	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5285:1:141945:141978	3267380	12	True				
ANR	3267572	Identifier	GAHPCLIENT_COMMAND_PENDING		3267380	0					
ANR	3267573	ReturnType	int		3267380	1					
ANR	3267574	Identifier	GahpClient :: unicore_job_destroy		3267380	2					
ANR	3267575	ParameterList	const char * job_contact		3267380	3					
ANR	3267576	Parameter	const char * job_contact	5234:32:140577:140600	3267380	0	True				
ANR	3267577	ParameterType	const char *		3267380	0					
ANR	3267578	Identifier	job_contact		3267380	1					
ANR	3267579	CFGEntryNode	ENTRY		3267380		True				
ANR	3267580	CFGExitNode	EXIT		3267380		True				
ANR	3267581	Symbol	server -> m_commands_supported		3267380						
ANR	3267582	Symbol	server		3267380						
ANR	3267583	Symbol	escapeGahpString		3267380						
ANR	3267584	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267380						
ANR	3267585	Symbol	* server		3267380						
ANR	3267586	Symbol	reqline . c_str		3267380						
ANR	3267587	Symbol	results_only		3267380						
ANR	3267588	Symbol	result -> argv		3267380						
ANR	3267589	Symbol	* server -> m_commands_supported		3267380						
ANR	3267590	Symbol	sprintf		3267380						
ANR	3267591	Symbol	result		3267380						
ANR	3267592	Symbol	normal_proxy		3267380						
ANR	3267593	Symbol	* result		3267380						
ANR	3267594	Symbol	server -> m_commands_supported -> contains_anycase		3267380						
ANR	3267595	Symbol	GAHPCLIENT_COMMAND_PENDING		3267380						
ANR	3267596	Symbol	reqline		3267380						
ANR	3267597	Symbol	m_mode		3267380						
ANR	3267598	Symbol	job_contact		3267380						
ANR	3267599	Symbol	* result -> argv		3267380						
ANR	3267600	Symbol	* * * result		3267380						
ANR	3267601	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3267380						
ANR	3267602	Symbol	* * result		3267380						
ANR	3267603	Symbol	NULLSTRING		3267380						
ANR	3267604	Symbol	command		3267380						
ANR	3267605	Symbol	get_pending_result		3267380						
ANR	3267606	Symbol	* * result -> argv		3267380						
ANR	3267607	Symbol	rc		3267380						
ANR	3267608	Symbol	buf		3267380						
ANR	3267609	Symbol	x		3267380						
ANR	3267610	Symbol	result -> argc		3267380						
ANR	3267611	Symbol	* * server		3267380						
ANR	3267612	Symbol	FALSE		3267380						
ANR	3267613	Symbol	check_pending_timeout		3267380						
ANR	3267614	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267380						
ANR	3267615	Symbol	is_pending		3267380						
ANR	3267616	Function	GahpClient :: unicore_job_status	5289:0:141984:143557							
ANR	3267617	FunctionDef	"GahpClient :: unicore_job_status (const char * job_contact , char * * job_status)"		3267616	0					
ANR	3267618	CompoundStatement		5292:0:142065:143557	3267616	0					
ANR	3267619	Statement	static	5293:1:142068:142073	3267616	0	True				
ANR	3267620	IdentifierDeclStatement	"const char * command = ""UNICORE_JOB_STATUS"" ;"	5293:8:142075:142117	3267616	1	True				
ANR	3267621	IdentifierDecl	"* command = ""UNICORE_JOB_STATUS"""		3267616	0					
ANR	3267622	IdentifierDeclType	const char *		3267616	0					
ANR	3267623	Identifier	command		3267616	1					
ANR	3267624	AssignmentExpression	"* command = ""UNICORE_JOB_STATUS"""		3267616	2		=			
ANR	3267625	Identifier	command		3267616	0					
ANR	3267626	PrimaryExpression	"""UNICORE_JOB_STATUS"""		3267616	1					
ANR	3267627	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3267616	2					
ANR	3267628	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5296:6:142166:142227	3267616	0	True				
ANR	3267629	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3267616	0		==			
ANR	3267630	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3267616	0					
ANR	3267631	Callee	server -> m_commands_supported -> contains_anycase		3267616	0					
ANR	3267632	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3267616	0					
ANR	3267633	PtrMemberAccess	server -> m_commands_supported		3267616	0					
ANR	3267634	Identifier	server		3267616	0					
ANR	3267635	Identifier	m_commands_supported		3267616	1					
ANR	3267636	Identifier	contains_anycase		3267616	1					
ANR	3267637	ArgumentList	command		3267616	1					
ANR	3267638	Argument	command		3267616	0					
ANR	3267639	Identifier	command		3267616	0					
ANR	3267640	Identifier	FALSE		3267616	1					
ANR	3267641	CompoundStatement		5:70:164:164	3267616	1					
ANR	3267642	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5297:2:142234:142273	3267616	0	True				
ANR	3267643	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267616	0					
ANR	3267644	IfStatement	if ( ! job_contact )		3267616	3					
ANR	3267645	Condition	! job_contact	5301:5:142311:142322	3267616	0	True				
ANR	3267646	UnaryOperationExpression	! job_contact		3267616	0					
ANR	3267647	UnaryOperator	!		3267616	0					
ANR	3267648	Identifier	job_contact		3267616	1					
ANR	3267649	ExpressionStatement	job_contact = NULLSTRING	5301:19:142325:142347	3267616	1	True				
ANR	3267650	AssignmentExpression	job_contact = NULLSTRING		3267616	0		=			
ANR	3267651	Identifier	job_contact		3267616	0					
ANR	3267652	Identifier	NULLSTRING		3267616	1					
ANR	3267653	IdentifierDeclStatement	std :: string reqline ;	5302:1:142350:142369	3267616	4	True				
ANR	3267654	IdentifierDecl	reqline		3267616	0					
ANR	3267655	IdentifierDeclType	std :: string		3267616	0					
ANR	3267656	Identifier	reqline		3267616	1					
ANR	3267657	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) ) ;"	5303:1:142372:142431	3267616	5	True				
ANR	3267658	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267616	0					
ANR	3267659	IdentifierDeclType	int		3267616	0					
ANR	3267660	Identifier	x		3267616	1					
ANR	3267661	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267616	2		=			
ANR	3267662	Identifier	x		3267616	0					
ANR	3267663	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( job_contact ) )"		3267616	1					
ANR	3267664	Callee	sprintf		3267616	0					
ANR	3267665	Identifier	sprintf		3267616	0					
ANR	3267666	ArgumentList	reqline		3267616	1					
ANR	3267667	Argument	reqline		3267616	0					
ANR	3267668	Identifier	reqline		3267616	0					
ANR	3267669	Argument	"""%s"""		3267616	1					
ANR	3267670	PrimaryExpression	"""%s"""		3267616	0					
ANR	3267671	Argument	escapeGahpString ( job_contact )		3267616	2					
ANR	3267672	CallExpression	escapeGahpString ( job_contact )		3267616	0					
ANR	3267673	Callee	escapeGahpString		3267616	0					
ANR	3267674	Identifier	escapeGahpString		3267616	0					
ANR	3267675	ArgumentList	job_contact		3267616	1					
ANR	3267676	Argument	job_contact		3267616	0					
ANR	3267677	Identifier	job_contact		3267616	0					
ANR	3267678	ExpressionStatement	ASSERT ( x > 0 )	5304:1:142434:142449	3267616	6	True				
ANR	3267679	CallExpression	ASSERT ( x > 0 )		3267616	0					
ANR	3267680	Callee	ASSERT		3267616	0					
ANR	3267681	Identifier	ASSERT		3267616	0					
ANR	3267682	ArgumentList	x > 0		3267616	1					
ANR	3267683	Argument	x > 0		3267616	0					
ANR	3267684	RelationalExpression	x > 0		3267616	0		>			
ANR	3267685	Identifier	x		3267616	0					
ANR	3267686	PrimaryExpression	0		3267616	1					
ANR	3267687	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5305:1:142452:142485	3267616	7	True				
ANR	3267688	IdentifierDecl	* buf = reqline . c_str ( )		3267616	0					
ANR	3267689	IdentifierDeclType	const char *		3267616	0					
ANR	3267690	Identifier	buf		3267616	1					
ANR	3267691	AssignmentExpression	* buf = reqline . c_str ( )		3267616	2		=			
ANR	3267692	Identifier	buf		3267616	0					
ANR	3267693	CallExpression	reqline . c_str ( )		3267616	1					
ANR	3267694	Callee	reqline . c_str		3267616	0					
ANR	3267695	MemberAccess	reqline . c_str		3267616	0					
ANR	3267696	Identifier	reqline		3267616	0					
ANR	3267697	Identifier	c_str		3267616	1					
ANR	3267698	ArgumentList			3267616	1					
ANR	3267699	IfStatement	"if ( ! is_pending ( command , buf ) )"		3267616	8					
ANR	3267700	Condition	"! is_pending ( command , buf )"	5309:6:142586:142609	3267616	0	True				
ANR	3267701	UnaryOperationExpression	"! is_pending ( command , buf )"		3267616	0					
ANR	3267702	UnaryOperator	!		3267616	0					
ANR	3267703	CallExpression	"is_pending ( command , buf )"		3267616	1					
ANR	3267704	Callee	is_pending		3267616	0					
ANR	3267705	Identifier	is_pending		3267616	0					
ANR	3267706	ArgumentList	command		3267616	1					
ANR	3267707	Argument	command		3267616	0					
ANR	3267708	Identifier	command		3267616	0					
ANR	3267709	Argument	buf		3267616	1					
ANR	3267710	Identifier	buf		3267616	0					
ANR	3267711	CompoundStatement		18:33:547:547	3267616	1					
ANR	3267712	IfStatement	if ( m_mode == results_only )		3267616	0					
ANR	3267713	Condition	m_mode == results_only	5312:7:142718:142739	3267616	0	True				
ANR	3267714	EqualityExpression	m_mode == results_only		3267616	0		==			
ANR	3267715	Identifier	m_mode		3267616	0					
ANR	3267716	Identifier	results_only		3267616	1					
ANR	3267717	CompoundStatement		21:32:677:677	3267616	1					
ANR	3267718	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5313:3:142748:142787	3267616	0	True				
ANR	3267719	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267616	0					
ANR	3267720	ExpressionStatement	"now_pending ( command , buf , normal_proxy )"	5315:2:142795:142832	3267616	1	True				
ANR	3267721	CallExpression	"now_pending ( command , buf , normal_proxy )"		3267616	0					
ANR	3267722	Callee	now_pending		3267616	0					
ANR	3267723	Identifier	now_pending		3267616	0					
ANR	3267724	ArgumentList	command		3267616	1					
ANR	3267725	Argument	command		3267616	0					
ANR	3267726	Identifier	command		3267616	0					
ANR	3267727	Argument	buf		3267616	1					
ANR	3267728	Identifier	buf		3267616	0					
ANR	3267729	Argument	normal_proxy		3267616	2					
ANR	3267730	Identifier	normal_proxy		3267616	0					
ANR	3267731	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5321:1:142926:142977	3267616	9	True				
ANR	3267732	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3267616	0					
ANR	3267733	IdentifierDeclType	Gahp_Args *		3267616	0					
ANR	3267734	Identifier	result		3267616	1					
ANR	3267735	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3267616	2		=			
ANR	3267736	Identifier	result		3267616	0					
ANR	3267737	CallExpression	"get_pending_result ( command , buf )"		3267616	1					
ANR	3267738	Callee	get_pending_result		3267616	0					
ANR	3267739	Identifier	get_pending_result		3267616	0					
ANR	3267740	ArgumentList	command		3267616	1					
ANR	3267741	Argument	command		3267616	0					
ANR	3267742	Identifier	command		3267616	0					
ANR	3267743	Argument	buf		3267616	1					
ANR	3267744	Identifier	buf		3267616	0					
ANR	3267745	IfStatement	if ( result )		3267616	10					
ANR	3267746	Condition	result	5322:6:142985:142990	3267616	0	True				
ANR	3267747	Identifier	result		3267616	0					
ANR	3267748	CompoundStatement		36:2:1023:1033	3267616	1					
ANR	3267749	IfStatement	if ( result -> argc != 4 )		3267616	0					
ANR	3267750	Condition	result -> argc != 4	5324:6:143026:143042	3267616	0	True				
ANR	3267751	EqualityExpression	result -> argc != 4		3267616	0		!=			
ANR	3267752	PtrMemberAccess	result -> argc		3267616	0					
ANR	3267753	Identifier	result		3267616	0					
ANR	3267754	Identifier	argc		3267616	1					
ANR	3267755	PrimaryExpression	4		3267616	1					
ANR	3267756	CompoundStatement		33:25:979:979	3267616	1					
ANR	3267757	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5325:3:143050:143081	3267616	0	True				
ANR	3267758	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3267616	0					
ANR	3267759	Callee	EXCEPT		3267616	0					
ANR	3267760	Identifier	EXCEPT		3267616	0					
ANR	3267761	ArgumentList	"""Bad %s Result"""		3267616	1					
ANR	3267762	Argument	"""Bad %s Result"""		3267616	0					
ANR	3267763	PrimaryExpression	"""Bad %s Result"""		3267616	0					
ANR	3267764	Argument	command		3267616	1					
ANR	3267765	Identifier	command		3267616	0					
ANR	3267766	IdentifierDeclStatement	int rc = 1 ;	5327:2:143089:143099	3267616	1	True				
ANR	3267767	IdentifierDecl	rc = 1		3267616	0					
ANR	3267768	IdentifierDeclType	int		3267616	0					
ANR	3267769	Identifier	rc		3267616	1					
ANR	3267770	AssignmentExpression	rc = 1		3267616	2		=			
ANR	3267771	Identifier	rc		3267616	0					
ANR	3267772	PrimaryExpression	1		3267616	1					
ANR	3267773	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3267616	2					
ANR	3267774	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	5328:7:143108:143132	3267616	0	True				
ANR	3267775	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3267616	0		==			
ANR	3267776	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3267616	0					
ANR	3267777	ArrayIndexing	result -> argv [ 1 ]		3267616	0					
ANR	3267778	PtrMemberAccess	result -> argv		3267616	0					
ANR	3267779	Identifier	result		3267616	0					
ANR	3267780	Identifier	argv		3267616	1					
ANR	3267781	PrimaryExpression	1		3267616	1					
ANR	3267782	PrimaryExpression	0		3267616	1					
ANR	3267783	PrimaryExpression	'S'		3267616	1					
ANR	3267784	CompoundStatement		37:35:1070:1070	3267616	1					
ANR	3267785	ExpressionStatement	rc = 0	5329:3:143141:143147	3267616	0	True				
ANR	3267786	AssignmentExpression	rc = 0		3267616	0		=			
ANR	3267787	Identifier	rc		3267616	0					
ANR	3267788	PrimaryExpression	0		3267616	1					
ANR	3267789	IfStatement	"if ( result -> argv [ 2 ] && strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3267616	3					
ANR	3267790	Condition	"result -> argv [ 2 ] && strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	5331:7:143160:143217	3267616	0	True				
ANR	3267791	AndExpression	"result -> argv [ 2 ] && strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3267616	0		&&			
ANR	3267792	ArrayIndexing	result -> argv [ 2 ]		3267616	0					
ANR	3267793	PtrMemberAccess	result -> argv		3267616	0					
ANR	3267794	Identifier	result		3267616	0					
ANR	3267795	Identifier	argv		3267616	1					
ANR	3267796	PrimaryExpression	2		3267616	1					
ANR	3267797	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3267616	1					
ANR	3267798	Callee	strcasecmp		3267616	0					
ANR	3267799	Identifier	strcasecmp		3267616	0					
ANR	3267800	ArgumentList	result -> argv [ 2 ]		3267616	1					
ANR	3267801	Argument	result -> argv [ 2 ]		3267616	0					
ANR	3267802	ArrayIndexing	result -> argv [ 2 ]		3267616	0					
ANR	3267803	PtrMemberAccess	result -> argv		3267616	0					
ANR	3267804	Identifier	result		3267616	0					
ANR	3267805	Identifier	argv		3267616	1					
ANR	3267806	PrimaryExpression	2		3267616	1					
ANR	3267807	Argument	NULLSTRING		3267616	1					
ANR	3267808	Identifier	NULLSTRING		3267616	0					
ANR	3267809	CompoundStatement		40:68:1155:1155	3267616	1					
ANR	3267810	ExpressionStatement	* job_status = strdup ( result -> argv [ 2 ] )	5332:3:143226:143263	3267616	0	True				
ANR	3267811	AssignmentExpression	* job_status = strdup ( result -> argv [ 2 ] )		3267616	0		=			
ANR	3267812	UnaryOperationExpression	* job_status		3267616	0					
ANR	3267813	UnaryOperator	*		3267616	0					
ANR	3267814	Identifier	job_status		3267616	1					
ANR	3267815	CallExpression	strdup ( result -> argv [ 2 ] )		3267616	1					
ANR	3267816	Callee	strdup		3267616	0					
ANR	3267817	Identifier	strdup		3267616	0					
ANR	3267818	ArgumentList	result -> argv [ 2 ]		3267616	1					
ANR	3267819	Argument	result -> argv [ 2 ]		3267616	0					
ANR	3267820	ArrayIndexing	result -> argv [ 2 ]		3267616	0					
ANR	3267821	PtrMemberAccess	result -> argv		3267616	0					
ANR	3267822	Identifier	result		3267616	0					
ANR	3267823	Identifier	argv		3267616	1					
ANR	3267824	PrimaryExpression	2		3267616	1					
ANR	3267825	Statement	delete	5334:2:143271:143276	3267616	4	True				
ANR	3267826	ExpressionStatement	result	5334:9:143278:143284	3267616	5	True				
ANR	3267827	Identifier	result		3267616	0					
ANR	3267828	ReturnStatement	return rc ;	5335:2:143288:143297	3267616	6	True				
ANR	3267829	Identifier	rc		3267616	0					
ANR	3267830	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3267616	11					
ANR	3267831	Condition	"check_pending_timeout ( command , buf )"	5339:6:143354:143387	3267616	0	True				
ANR	3267832	CallExpression	"check_pending_timeout ( command , buf )"		3267616	0					
ANR	3267833	Callee	check_pending_timeout		3267616	0					
ANR	3267834	Identifier	check_pending_timeout		3267616	0					
ANR	3267835	ArgumentList	command		3267616	1					
ANR	3267836	Argument	command		3267616	0					
ANR	3267837	Identifier	command		3267616	0					
ANR	3267838	Argument	buf		3267616	1					
ANR	3267839	Identifier	buf		3267616	0					
ANR	3267840	CompoundStatement		48:43:1325:1325	3267616	1					
ANR	3267841	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5341:2:143427:143462	3267616	0	True				
ANR	3267842	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3267616	0					
ANR	3267843	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5345:1:143522:143555	3267616	12	True				
ANR	3267844	Identifier	GAHPCLIENT_COMMAND_PENDING		3267616	0					
ANR	3267845	ReturnType	int		3267616	1					
ANR	3267846	Identifier	GahpClient :: unicore_job_status		3267616	2					
ANR	3267847	ParameterList	"const char * job_contact , char * * job_status"		3267616	3					
ANR	3267848	Parameter	const char * job_contact	5290:31:142019:142042	3267616	0	True				
ANR	3267849	ParameterType	const char *		3267616	0					
ANR	3267850	Identifier	job_contact		3267616	1					
ANR	3267851	Parameter	char * * job_status	5291:1:142046:142062	3267616	1	True				
ANR	3267852	ParameterType	char * *		3267616	0					
ANR	3267853	Identifier	job_status		3267616	1					
ANR	3267854	CFGEntryNode	ENTRY		3267616		True				
ANR	3267855	CFGExitNode	EXIT		3267616		True				
ANR	3267856	Symbol	server		3267616						
ANR	3267857	Symbol	server -> m_commands_supported		3267616						
ANR	3267858	Symbol	escapeGahpString		3267616						
ANR	3267859	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267616						
ANR	3267860	Symbol	* server		3267616						
ANR	3267861	Symbol	reqline . c_str		3267616						
ANR	3267862	Symbol	results_only		3267616						
ANR	3267863	Symbol	result -> argv		3267616						
ANR	3267864	Symbol	* server -> m_commands_supported		3267616						
ANR	3267865	Symbol	sprintf		3267616						
ANR	3267866	Symbol	result		3267616						
ANR	3267867	Symbol	normal_proxy		3267616						
ANR	3267868	Symbol	* result		3267616						
ANR	3267869	Symbol	server -> m_commands_supported -> contains_anycase		3267616						
ANR	3267870	Symbol	GAHPCLIENT_COMMAND_PENDING		3267616						
ANR	3267871	Symbol	reqline		3267616						
ANR	3267872	Symbol	m_mode		3267616						
ANR	3267873	Symbol	strcasecmp		3267616						
ANR	3267874	Symbol	job_contact		3267616						
ANR	3267875	Symbol	* result -> argv		3267616						
ANR	3267876	Symbol	* * * result		3267616						
ANR	3267877	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3267616						
ANR	3267878	Symbol	* * result		3267616						
ANR	3267879	Symbol	* job_status		3267616						
ANR	3267880	Symbol	NULLSTRING		3267616						
ANR	3267881	Symbol	command		3267616						
ANR	3267882	Symbol	get_pending_result		3267616						
ANR	3267883	Symbol	* * result -> argv		3267616						
ANR	3267884	Symbol	job_status		3267616						
ANR	3267885	Symbol	rc		3267616						
ANR	3267886	Symbol	buf		3267616						
ANR	3267887	Symbol	x		3267616						
ANR	3267888	Symbol	result -> argc		3267616						
ANR	3267889	Symbol	FALSE		3267616						
ANR	3267890	Symbol	* * server		3267616						
ANR	3267891	Symbol	strdup		3267616						
ANR	3267892	Symbol	check_pending_timeout		3267616						
ANR	3267893	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267616						
ANR	3267894	Symbol	is_pending		3267616						
ANR	3267895	Function	GahpClient :: unicore_job_recover	5348:0:143560:145152							
ANR	3267896	FunctionDef	GahpClient :: unicore_job_recover (const char * description)		3267895	0					
ANR	3267897	CompoundStatement		5351:0:143625:145152	3267895	0					
ANR	3267898	Statement	static	5353:1:143629:143634	3267895	0	True				
ANR	3267899	IdentifierDeclStatement	"const char * command = ""UNICORE_JOB_RECOVER"" ;"	5353:8:143636:143679	3267895	1	True				
ANR	3267900	IdentifierDecl	"* command = ""UNICORE_JOB_RECOVER"""		3267895	0					
ANR	3267901	IdentifierDeclType	const char *		3267895	0					
ANR	3267902	Identifier	command		3267895	1					
ANR	3267903	AssignmentExpression	"* command = ""UNICORE_JOB_RECOVER"""		3267895	2		=			
ANR	3267904	Identifier	command		3267895	0					
ANR	3267905	PrimaryExpression	"""UNICORE_JOB_RECOVER"""		3267895	1					
ANR	3267906	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3267895	2					
ANR	3267907	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5356:6:143728:143789	3267895	0	True				
ANR	3267908	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3267895	0		==			
ANR	3267909	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3267895	0					
ANR	3267910	Callee	server -> m_commands_supported -> contains_anycase		3267895	0					
ANR	3267911	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3267895	0					
ANR	3267912	PtrMemberAccess	server -> m_commands_supported		3267895	0					
ANR	3267913	Identifier	server		3267895	0					
ANR	3267914	Identifier	m_commands_supported		3267895	1					
ANR	3267915	Identifier	contains_anycase		3267895	1					
ANR	3267916	ArgumentList	command		3267895	1					
ANR	3267917	Argument	command		3267895	0					
ANR	3267918	Identifier	command		3267895	0					
ANR	3267919	Identifier	FALSE		3267895	1					
ANR	3267920	CompoundStatement		6:70:166:166	3267895	1					
ANR	3267921	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5357:2:143796:143835	3267895	0	True				
ANR	3267922	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267895	0					
ANR	3267923	IfStatement	if ( ! description )		3267895	3					
ANR	3267924	Condition	! description	5361:5:143873:143884	3267895	0	True				
ANR	3267925	UnaryOperationExpression	! description		3267895	0					
ANR	3267926	UnaryOperator	!		3267895	0					
ANR	3267927	Identifier	description		3267895	1					
ANR	3267928	ExpressionStatement	description = NULLSTRING	5361:19:143887:143909	3267895	1	True				
ANR	3267929	AssignmentExpression	description = NULLSTRING		3267895	0		=			
ANR	3267930	Identifier	description		3267895	0					
ANR	3267931	Identifier	NULLSTRING		3267895	1					
ANR	3267932	IdentifierDeclStatement	char * desc = strdup ( description ) ;	5362:0:143911:143943	3267895	4	True				
ANR	3267933	IdentifierDecl	* desc = strdup ( description )		3267895	0					
ANR	3267934	IdentifierDeclType	char *		3267895	0					
ANR	3267935	Identifier	desc		3267895	1					
ANR	3267936	AssignmentExpression	* desc = strdup ( description )		3267895	2		=			
ANR	3267937	Identifier	desc		3267895	0					
ANR	3267938	CallExpression	strdup ( description )		3267895	1					
ANR	3267939	Callee	strdup		3267895	0					
ANR	3267940	Identifier	strdup		3267895	0					
ANR	3267941	ArgumentList	description		3267895	1					
ANR	3267942	Argument	description		3267895	0					
ANR	3267943	Identifier	description		3267895	0					
ANR	3267944	IdentifierDeclStatement	int i = strlen ( desc ) ;	5363:0:143945:143967	3267895	5	True				
ANR	3267945	IdentifierDecl	i = strlen ( desc )		3267895	0					
ANR	3267946	IdentifierDeclType	int		3267895	0					
ANR	3267947	Identifier	i		3267895	1					
ANR	3267948	AssignmentExpression	i = strlen ( desc )		3267895	2		=			
ANR	3267949	Identifier	i		3267895	0					
ANR	3267950	CallExpression	strlen ( desc )		3267895	1					
ANR	3267951	Callee	strlen		3267895	0					
ANR	3267952	Identifier	strlen		3267895	0					
ANR	3267953	ArgumentList	desc		3267895	1					
ANR	3267954	Argument	desc		3267895	0					
ANR	3267955	Identifier	desc		3267895	0					
ANR	3267956	IfStatement	if ( i > 0 && desc [ i - 1 ] == '\\n' )		3267895	6					
ANR	3267957	Condition	i > 0 && desc [ i - 1 ] == '\\n'	5364:5:143974:143999	3267895	0	True				
ANR	3267958	AndExpression	i > 0 && desc [ i - 1 ] == '\\n'		3267895	0		&&			
ANR	3267959	RelationalExpression	i > 0		3267895	0		>			
ANR	3267960	Identifier	i		3267895	0					
ANR	3267961	PrimaryExpression	0		3267895	1					
ANR	3267962	EqualityExpression	desc [ i - 1 ] == '\\n'		3267895	1		==			
ANR	3267963	ArrayIndexing	desc [ i - 1 ]		3267895	0					
ANR	3267964	Identifier	desc		3267895	0					
ANR	3267965	AdditiveExpression	i - 1		3267895	1		-			
ANR	3267966	Identifier	i		3267895	0					
ANR	3267967	PrimaryExpression	1		3267895	1					
ANR	3267968	PrimaryExpression	'\\n'		3267895	1					
ANR	3267969	CompoundStatement		14:34:377:377	3267895	1					
ANR	3267970	ExpressionStatement	desc [ i - 1 ] = '\\0'	5365:0:144005:144021	3267895	0	True				
ANR	3267971	AssignmentExpression	desc [ i - 1 ] = '\\0'		3267895	0		=			
ANR	3267972	ArrayIndexing	desc [ i - 1 ]		3267895	0					
ANR	3267973	Identifier	desc		3267895	0					
ANR	3267974	AdditiveExpression	i - 1		3267895	1		-			
ANR	3267975	Identifier	i		3267895	0					
ANR	3267976	PrimaryExpression	1		3267895	1					
ANR	3267977	PrimaryExpression	'\\0'		3267895	1					
ANR	3267978	ExpressionStatement	description = desc	5367:0:144025:144043	3267895	7	True				
ANR	3267979	AssignmentExpression	description = desc		3267895	0		=			
ANR	3267980	Identifier	description		3267895	0					
ANR	3267981	Identifier	desc		3267895	1					
ANR	3267982	IdentifierDeclStatement	std :: string reqline ;	5368:1:144046:144065	3267895	8	True				
ANR	3267983	IdentifierDecl	reqline		3267895	0					
ANR	3267984	IdentifierDeclType	std :: string		3267895	0					
ANR	3267985	Identifier	reqline		3267895	1					
ANR	3267986	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( description ) ) ;"	5369:1:144068:144131	3267895	9	True				
ANR	3267987	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( description ) )"		3267895	0					
ANR	3267988	IdentifierDeclType	int		3267895	0					
ANR	3267989	Identifier	x		3267895	1					
ANR	3267990	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( description ) )"		3267895	2		=			
ANR	3267991	Identifier	x		3267895	0					
ANR	3267992	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( description ) )"		3267895	1					
ANR	3267993	Callee	sprintf		3267895	0					
ANR	3267994	Identifier	sprintf		3267895	0					
ANR	3267995	ArgumentList	reqline		3267895	1					
ANR	3267996	Argument	reqline		3267895	0					
ANR	3267997	Identifier	reqline		3267895	0					
ANR	3267998	Argument	"""%s"""		3267895	1					
ANR	3267999	PrimaryExpression	"""%s"""		3267895	0					
ANR	3268000	Argument	escapeGahpString ( description )		3267895	2					
ANR	3268001	CallExpression	escapeGahpString ( description )		3267895	0					
ANR	3268002	Callee	escapeGahpString		3267895	0					
ANR	3268003	Identifier	escapeGahpString		3267895	0					
ANR	3268004	ArgumentList	description		3267895	1					
ANR	3268005	Argument	description		3267895	0					
ANR	3268006	Identifier	description		3267895	0					
ANR	3268007	ExpressionStatement	ASSERT ( x > 0 )	5370:1:144134:144149	3267895	10	True				
ANR	3268008	CallExpression	ASSERT ( x > 0 )		3267895	0					
ANR	3268009	Callee	ASSERT		3267895	0					
ANR	3268010	Identifier	ASSERT		3267895	0					
ANR	3268011	ArgumentList	x > 0		3267895	1					
ANR	3268012	Argument	x > 0		3267895	0					
ANR	3268013	RelationalExpression	x > 0		3267895	0		>			
ANR	3268014	Identifier	x		3267895	0					
ANR	3268015	PrimaryExpression	0		3267895	1					
ANR	3268016	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5371:1:144152:144185	3267895	11	True				
ANR	3268017	IdentifierDecl	* buf = reqline . c_str ( )		3267895	0					
ANR	3268018	IdentifierDeclType	const char *		3267895	0					
ANR	3268019	Identifier	buf		3267895	1					
ANR	3268020	AssignmentExpression	* buf = reqline . c_str ( )		3267895	2		=			
ANR	3268021	Identifier	buf		3267895	0					
ANR	3268022	CallExpression	reqline . c_str ( )		3267895	1					
ANR	3268023	Callee	reqline . c_str		3267895	0					
ANR	3268024	MemberAccess	reqline . c_str		3267895	0					
ANR	3268025	Identifier	reqline		3267895	0					
ANR	3268026	Identifier	c_str		3267895	1					
ANR	3268027	ArgumentList			3267895	1					
ANR	3268028	ExpressionStatement	free ( desc )	5372:0:144187:144197	3267895	12	True				
ANR	3268029	CallExpression	free ( desc )		3267895	0					
ANR	3268030	Callee	free		3267895	0					
ANR	3268031	Identifier	free		3267895	0					
ANR	3268032	ArgumentList	desc		3267895	1					
ANR	3268033	Argument	desc		3267895	0					
ANR	3268034	Identifier	desc		3267895	0					
ANR	3268035	IfStatement	"if ( ! is_pending ( command , buf ) )"		3267895	13					
ANR	3268036	Condition	"! is_pending ( command , buf )"	5376:6:144298:144321	3267895	0	True				
ANR	3268037	UnaryOperationExpression	"! is_pending ( command , buf )"		3267895	0					
ANR	3268038	UnaryOperator	!		3267895	0					
ANR	3268039	CallExpression	"is_pending ( command , buf )"		3267895	1					
ANR	3268040	Callee	is_pending		3267895	0					
ANR	3268041	Identifier	is_pending		3267895	0					
ANR	3268042	ArgumentList	command		3267895	1					
ANR	3268043	Argument	command		3267895	0					
ANR	3268044	Identifier	command		3267895	0					
ANR	3268045	Argument	buf		3267895	1					
ANR	3268046	Identifier	buf		3267895	0					
ANR	3268047	CompoundStatement		26:33:699:699	3267895	1					
ANR	3268048	IfStatement	if ( m_mode == results_only )		3267895	0					
ANR	3268049	Condition	m_mode == results_only	5379:7:144430:144451	3267895	0	True				
ANR	3268050	EqualityExpression	m_mode == results_only		3267895	0		==			
ANR	3268051	Identifier	m_mode		3267895	0					
ANR	3268052	Identifier	results_only		3267895	1					
ANR	3268053	CompoundStatement		29:32:829:829	3267895	1					
ANR	3268054	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5380:3:144460:144499	3267895	0	True				
ANR	3268055	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267895	0					
ANR	3268056	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	5382:2:144507:144543	3267895	1	True				
ANR	3268057	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3267895	0					
ANR	3268058	Callee	now_pending		3267895	0					
ANR	3268059	Identifier	now_pending		3267895	0					
ANR	3268060	ArgumentList	command		3267895	1					
ANR	3268061	Argument	command		3267895	0					
ANR	3268062	Identifier	command		3267895	0					
ANR	3268063	Argument	buf		3267895	1					
ANR	3268064	Identifier	buf		3267895	0					
ANR	3268065	Argument	deleg_proxy		3267895	2					
ANR	3268066	Identifier	deleg_proxy		3267895	0					
ANR	3268067	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5388:1:144637:144688	3267895	14	True				
ANR	3268068	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3267895	0					
ANR	3268069	IdentifierDeclType	Gahp_Args *		3267895	0					
ANR	3268070	Identifier	result		3267895	1					
ANR	3268071	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3267895	2		=			
ANR	3268072	Identifier	result		3267895	0					
ANR	3268073	CallExpression	"get_pending_result ( command , buf )"		3267895	1					
ANR	3268074	Callee	get_pending_result		3267895	0					
ANR	3268075	Identifier	get_pending_result		3267895	0					
ANR	3268076	ArgumentList	command		3267895	1					
ANR	3268077	Argument	command		3267895	0					
ANR	3268078	Identifier	command		3267895	0					
ANR	3268079	Argument	buf		3267895	1					
ANR	3268080	Identifier	buf		3267895	0					
ANR	3268081	IfStatement	if ( result )		3267895	15					
ANR	3268082	Condition	result	5389:6:144696:144701	3267895	0	True				
ANR	3268083	Identifier	result		3267895	0					
ANR	3268084	CompoundStatement		44:2:1174:1184	3267895	1					
ANR	3268085	IfStatement	if ( result -> argc != 3 )		3267895	0					
ANR	3268086	Condition	result -> argc != 3	5391:6:144737:144753	3267895	0	True				
ANR	3268087	EqualityExpression	result -> argc != 3		3267895	0		!=			
ANR	3268088	PtrMemberAccess	result -> argc		3267895	0					
ANR	3268089	Identifier	result		3267895	0					
ANR	3268090	Identifier	argc		3267895	1					
ANR	3268091	PrimaryExpression	3		3267895	1					
ANR	3268092	CompoundStatement		41:25:1130:1130	3267895	1					
ANR	3268093	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5392:3:144761:144792	3267895	0	True				
ANR	3268094	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3267895	0					
ANR	3268095	Callee	EXCEPT		3267895	0					
ANR	3268096	Identifier	EXCEPT		3267895	0					
ANR	3268097	ArgumentList	"""Bad %s Result"""		3267895	1					
ANR	3268098	Argument	"""Bad %s Result"""		3267895	0					
ANR	3268099	PrimaryExpression	"""Bad %s Result"""		3267895	0					
ANR	3268100	Argument	command		3267895	1					
ANR	3268101	Identifier	command		3267895	0					
ANR	3268102	IdentifierDeclStatement	int rc = 1 ;	5394:2:144800:144810	3267895	1	True				
ANR	3268103	IdentifierDecl	rc = 1		3267895	0					
ANR	3268104	IdentifierDeclType	int		3267895	0					
ANR	3268105	Identifier	rc		3267895	1					
ANR	3268106	AssignmentExpression	rc = 1		3267895	2		=			
ANR	3268107	Identifier	rc		3267895	0					
ANR	3268108	PrimaryExpression	1		3267895	1					
ANR	3268109	IfStatement	if ( result -> argv [ 1 ] [ 0 ] == 'S' )		3267895	2					
ANR	3268110	Condition	result -> argv [ 1 ] [ 0 ] == 'S'	5395:7:144819:144843	3267895	0	True				
ANR	3268111	EqualityExpression	result -> argv [ 1 ] [ 0 ] == 'S'		3267895	0		==			
ANR	3268112	ArrayIndexing	result -> argv [ 1 ] [ 0 ]		3267895	0					
ANR	3268113	ArrayIndexing	result -> argv [ 1 ]		3267895	0					
ANR	3268114	PtrMemberAccess	result -> argv		3267895	0					
ANR	3268115	Identifier	result		3267895	0					
ANR	3268116	Identifier	argv		3267895	1					
ANR	3268117	PrimaryExpression	1		3267895	1					
ANR	3268118	PrimaryExpression	0		3267895	1					
ANR	3268119	PrimaryExpression	'S'		3267895	1					
ANR	3268120	CompoundStatement		45:35:1221:1221	3267895	1					
ANR	3268121	ExpressionStatement	rc = 0	5396:3:144852:144858	3267895	0	True				
ANR	3268122	AssignmentExpression	rc = 0		3267895	0		=			
ANR	3268123	Identifier	rc		3267895	0					
ANR	3268124	PrimaryExpression	0		3267895	1					
ANR	3268125	Statement	delete	5398:2:144866:144871	3267895	3	True				
ANR	3268126	ExpressionStatement	result	5398:9:144873:144879	3267895	4	True				
ANR	3268127	Identifier	result		3267895	0					
ANR	3268128	ReturnStatement	return rc ;	5399:2:144883:144892	3267895	5	True				
ANR	3268129	Identifier	rc		3267895	0					
ANR	3268130	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3267895	16					
ANR	3268131	Condition	"check_pending_timeout ( command , buf )"	5403:6:144949:144982	3267895	0	True				
ANR	3268132	CallExpression	"check_pending_timeout ( command , buf )"		3267895	0					
ANR	3268133	Callee	check_pending_timeout		3267895	0					
ANR	3268134	Identifier	check_pending_timeout		3267895	0					
ANR	3268135	ArgumentList	command		3267895	1					
ANR	3268136	Argument	command		3267895	0					
ANR	3268137	Identifier	command		3267895	0					
ANR	3268138	Argument	buf		3267895	1					
ANR	3268139	Identifier	buf		3267895	0					
ANR	3268140	CompoundStatement		53:43:1360:1360	3267895	1					
ANR	3268141	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5405:2:145022:145057	3267895	0	True				
ANR	3268142	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3267895	0					
ANR	3268143	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5409:1:145117:145150	3267895	17	True				
ANR	3268144	Identifier	GAHPCLIENT_COMMAND_PENDING		3267895	0					
ANR	3268145	ReturnType	int		3267895	1					
ANR	3268146	Identifier	GahpClient :: unicore_job_recover		3267895	2					
ANR	3268147	ParameterList	const char * description		3267895	3					
ANR	3268148	Parameter	const char * description	5350:1:143599:143622	3267895	0	True				
ANR	3268149	ParameterType	const char *		3267895	0					
ANR	3268150	Identifier	description		3267895	1					
ANR	3268151	CFGEntryNode	ENTRY		3267895		True				
ANR	3268152	CFGExitNode	EXIT		3267895		True				
ANR	3268153	Symbol	server		3267895						
ANR	3268154	Symbol	server -> m_commands_supported		3267895						
ANR	3268155	Symbol	escapeGahpString		3267895						
ANR	3268156	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3267895						
ANR	3268157	Symbol	* server		3267895						
ANR	3268158	Symbol	description		3267895						
ANR	3268159	Symbol	reqline . c_str		3267895						
ANR	3268160	Symbol	results_only		3267895						
ANR	3268161	Symbol	result -> argv		3267895						
ANR	3268162	Symbol	* server -> m_commands_supported		3267895						
ANR	3268163	Symbol	sprintf		3267895						
ANR	3268164	Symbol	result		3267895						
ANR	3268165	Symbol	strlen		3267895						
ANR	3268166	Symbol	* result		3267895						
ANR	3268167	Symbol	server -> m_commands_supported -> contains_anycase		3267895						
ANR	3268168	Symbol	GAHPCLIENT_COMMAND_PENDING		3267895						
ANR	3268169	Symbol	reqline		3267895						
ANR	3268170	Symbol	* desc		3267895						
ANR	3268171	Symbol	m_mode		3267895						
ANR	3268172	Symbol	* result -> argv		3267895						
ANR	3268173	Symbol	* * * result		3267895						
ANR	3268174	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3267895						
ANR	3268175	Symbol	i		3267895						
ANR	3268176	Symbol	* * result		3267895						
ANR	3268177	Symbol	NULLSTRING		3267895						
ANR	3268178	Symbol	command		3267895						
ANR	3268179	Symbol	get_pending_result		3267895						
ANR	3268180	Symbol	* * result -> argv		3267895						
ANR	3268181	Symbol	rc		3267895						
ANR	3268182	Symbol	buf		3267895						
ANR	3268183	Symbol	* i		3267895						
ANR	3268184	Symbol	x		3267895						
ANR	3268185	Symbol	result -> argc		3267895						
ANR	3268186	Symbol	FALSE		3267895						
ANR	3268187	Symbol	* * server		3267895						
ANR	3268188	Symbol	strdup		3267895						
ANR	3268189	Symbol	check_pending_timeout		3267895						
ANR	3268190	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3267895						
ANR	3268191	Symbol	desc		3267895						
ANR	3268192	Symbol	is_pending		3267895						
ANR	3268193	Symbol	deleg_proxy		3267895						
ANR	3268194	Function	GahpClient :: unicore_job_callback	5412:0:145155:146417							
ANR	3268195	FunctionDef	GahpClient :: unicore_job_callback (unicore_gahp_callback_func_t callback_func)		3268194	0					
ANR	3268196	CompoundStatement		5414:0:145237:146417	3268194	0					
ANR	3268197	IdentifierDeclStatement	char buf [ 150 ] ;	5415:1:145240:145253	3268194	0	True				
ANR	3268198	IdentifierDecl	buf [ 150 ]		3268194	0					
ANR	3268199	IdentifierDeclType	char [ 150 ]		3268194	0					
ANR	3268200	Identifier	buf		3268194	1					
ANR	3268201	PrimaryExpression	150		3268194	2					
ANR	3268202	Statement	static	5416:1:145256:145261	3268194	1	True				
ANR	3268203	IdentifierDeclStatement	"const char * command = ""UNICORE_JOB_CALLBACK"" ;"	5416:8:145263:145307	3268194	2	True				
ANR	3268204	IdentifierDecl	"* command = ""UNICORE_JOB_CALLBACK"""		3268194	0					
ANR	3268205	IdentifierDeclType	const char *		3268194	0					
ANR	3268206	Identifier	command		3268194	1					
ANR	3268207	AssignmentExpression	"* command = ""UNICORE_JOB_CALLBACK"""		3268194	2		=			
ANR	3268208	Identifier	command		3268194	0					
ANR	3268209	PrimaryExpression	"""UNICORE_JOB_CALLBACK"""		3268194	1					
ANR	3268210	IfStatement	if ( server -> unicore_gahp_callback_func != NULL )		3268194	3					
ANR	3268211	Condition	server -> unicore_gahp_callback_func != NULL	5420:6:145411:145452	3268194	0	True				
ANR	3268212	EqualityExpression	server -> unicore_gahp_callback_func != NULL		3268194	0		!=			
ANR	3268213	PtrMemberAccess	server -> unicore_gahp_callback_func		3268194	0					
ANR	3268214	Identifier	server		3268194	0					
ANR	3268215	Identifier	unicore_gahp_callback_func		3268194	1					
ANR	3268216	Identifier	NULL		3268194	1					
ANR	3268217	CompoundStatement		7:51:218:218	3268194	1					
ANR	3268218	IfStatement	if ( callback_func != server -> unicore_gahp_callback_func )		3268194	0					
ANR	3268219	Condition	callback_func != server -> unicore_gahp_callback_func	5421:7:145465:145515	3268194	0	True				
ANR	3268220	EqualityExpression	callback_func != server -> unicore_gahp_callback_func		3268194	0		!=			
ANR	3268221	Identifier	callback_func		3268194	0					
ANR	3268222	PtrMemberAccess	server -> unicore_gahp_callback_func		3268194	1					
ANR	3268223	Identifier	server		3268194	0					
ANR	3268224	Identifier	unicore_gahp_callback_func		3268194	1					
ANR	3268225	CompoundStatement		8:61:281:281	3268194	1					
ANR	3268226	ExpressionStatement	"EXCEPT ( ""unicore_job_callback called twice"" )"	5422:3:145524:145567	3268194	0	True				
ANR	3268227	CallExpression	"EXCEPT ( ""unicore_job_callback called twice"" )"		3268194	0					
ANR	3268228	Callee	EXCEPT		3268194	0					
ANR	3268229	Identifier	EXCEPT		3268194	0					
ANR	3268230	ArgumentList	"""unicore_job_callback called twice"""		3268194	1					
ANR	3268231	Argument	"""unicore_job_callback called twice"""		3268194	0					
ANR	3268232	PrimaryExpression	"""unicore_job_callback called twice"""		3268194	0					
ANR	3268233	ReturnStatement	return 0 ;	5424:2:145575:145583	3268194	1	True				
ANR	3268234	PrimaryExpression	0		3268194	0					
ANR	3268235	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3268194	4					
ANR	3268236	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5428:6:145635:145696	3268194	0	True				
ANR	3268237	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3268194	0		==			
ANR	3268238	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3268194	0					
ANR	3268239	Callee	server -> m_commands_supported -> contains_anycase		3268194	0					
ANR	3268240	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3268194	0					
ANR	3268241	PtrMemberAccess	server -> m_commands_supported		3268194	0					
ANR	3268242	Identifier	server		3268194	0					
ANR	3268243	Identifier	m_commands_supported		3268194	1					
ANR	3268244	Identifier	contains_anycase		3268194	1					
ANR	3268245	ArgumentList	command		3268194	1					
ANR	3268246	Argument	command		3268194	0					
ANR	3268247	Identifier	command		3268194	0					
ANR	3268248	Identifier	FALSE		3268194	1					
ANR	3268249	CompoundStatement		15:70:461:461	3268194	1					
ANR	3268250	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5429:2:145703:145742	3268194	0	True				
ANR	3268251	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3268194	0					
ANR	3268252	IfStatement	if ( m_mode == results_only )		3268194	5					
ANR	3268253	Condition	m_mode == results_only	5434:6:145841:145862	3268194	0	True				
ANR	3268254	EqualityExpression	m_mode == results_only		3268194	0		==			
ANR	3268255	Identifier	m_mode		3268194	0					
ANR	3268256	Identifier	results_only		3268194	1					
ANR	3268257	CompoundStatement		21:31:628:628	3268194	1					
ANR	3268258	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5435:2:145870:145909	3268194	0	True				
ANR	3268259	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3268194	0					
ANR	3268260	IdentifierDeclStatement	int reqid = server -> new_reqid ( ) ;	5438:1:145916:145947	3268194	6	True				
ANR	3268261	IdentifierDecl	reqid = server -> new_reqid ( )		3268194	0					
ANR	3268262	IdentifierDeclType	int		3268194	0					
ANR	3268263	Identifier	reqid		3268194	1					
ANR	3268264	AssignmentExpression	reqid = server -> new_reqid ( )		3268194	2		=			
ANR	3268265	Identifier	reqid		3268194	0					
ANR	3268266	CallExpression	server -> new_reqid ( )		3268194	1					
ANR	3268267	Callee	server -> new_reqid		3268194	0					
ANR	3268268	PtrMemberAccess	server -> new_reqid		3268194	0					
ANR	3268269	Identifier	server		3268194	0					
ANR	3268270	Identifier	new_reqid		3268194	1					
ANR	3268271	ArgumentList			3268194	1					
ANR	3268272	IdentifierDeclStatement	"int x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid ) ;"	5439:1:145950:146005	3268194	7	True				
ANR	3268273	IdentifierDecl	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid )"		3268194	0					
ANR	3268274	IdentifierDeclType	int		3268194	0					
ANR	3268275	Identifier	x		3268194	1					
ANR	3268276	AssignmentExpression	"x = snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid )"		3268194	2		=			
ANR	3268277	Identifier	x		3268194	0					
ANR	3268278	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s %d"" , command , reqid )"		3268194	1					
ANR	3268279	Callee	snprintf		3268194	0					
ANR	3268280	Identifier	snprintf		3268194	0					
ANR	3268281	ArgumentList	buf		3268194	1					
ANR	3268282	Argument	buf		3268194	0					
ANR	3268283	Identifier	buf		3268194	0					
ANR	3268284	Argument	sizeof ( buf )		3268194	1					
ANR	3268285	SizeofExpression	sizeof ( buf )		3268194	0					
ANR	3268286	Sizeof	sizeof		3268194	0					
ANR	3268287	SizeofOperand	buf		3268194	1					
ANR	3268288	Argument	"""%s %d"""		3268194	2					
ANR	3268289	PrimaryExpression	"""%s %d"""		3268194	0					
ANR	3268290	Argument	command		3268194	3					
ANR	3268291	Identifier	command		3268194	0					
ANR	3268292	Argument	reqid		3268194	4					
ANR	3268293	Identifier	reqid		3268194	0					
ANR	3268294	ExpressionStatement	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )	5440:1:146008:146047	3268194	8	True				
ANR	3268295	CallExpression	ASSERT ( x > 0 && x < ( int ) sizeof ( buf ) )		3268194	0					
ANR	3268296	Callee	ASSERT		3268194	0					
ANR	3268297	Identifier	ASSERT		3268194	0					
ANR	3268298	ArgumentList	x > 0 && x < ( int ) sizeof ( buf )		3268194	1					
ANR	3268299	Argument	x > 0 && x < ( int ) sizeof ( buf )		3268194	0					
ANR	3268300	AndExpression	x > 0 && x < ( int ) sizeof ( buf )		3268194	0		&&			
ANR	3268301	RelationalExpression	x > 0		3268194	0		>			
ANR	3268302	Identifier	x		3268194	0					
ANR	3268303	PrimaryExpression	0		3268194	1					
ANR	3268304	RelationalExpression	x < ( int ) sizeof ( buf )		3268194	1		<			
ANR	3268305	Identifier	x		3268194	0					
ANR	3268306	CastExpression	( int ) sizeof ( buf )		3268194	1					
ANR	3268307	CastTarget	int		3268194	0					
ANR	3268308	SizeofExpression	sizeof ( buf )		3268194	1					
ANR	3268309	Sizeof	sizeof		3268194	0					
ANR	3268310	SizeofOperand	buf		3268194	1					
ANR	3268311	ExpressionStatement	server -> write_line ( buf )	5441:1:146050:146073	3268194	9	True				
ANR	3268312	CallExpression	server -> write_line ( buf )		3268194	0					
ANR	3268313	Callee	server -> write_line		3268194	0					
ANR	3268314	PtrMemberAccess	server -> write_line		3268194	0					
ANR	3268315	Identifier	server		3268194	0					
ANR	3268316	Identifier	write_line		3268194	1					
ANR	3268317	ArgumentList	buf		3268194	1					
ANR	3268318	Argument	buf		3268194	0					
ANR	3268319	Identifier	buf		3268194	0					
ANR	3268320	IdentifierDeclStatement	Gahp_Args result ;	5442:1:146076:146092	3268194	10	True				
ANR	3268321	IdentifierDecl	result		3268194	0					
ANR	3268322	IdentifierDeclType	Gahp_Args		3268194	0					
ANR	3268323	Identifier	result		3268194	1					
ANR	3268324	ExpressionStatement	server -> read_argv ( result )	5443:1:146095:146120	3268194	11	True				
ANR	3268325	CallExpression	server -> read_argv ( result )		3268194	0					
ANR	3268326	Callee	server -> read_argv		3268194	0					
ANR	3268327	PtrMemberAccess	server -> read_argv		3268194	0					
ANR	3268328	Identifier	server		3268194	0					
ANR	3268329	Identifier	read_argv		3268194	1					
ANR	3268330	ArgumentList	result		3268194	1					
ANR	3268331	Argument	result		3268194	0					
ANR	3268332	Identifier	result		3268194	0					
ANR	3268333	IfStatement	if ( result . argc != 1 || result . argv [ 0 ] [ 0 ] != 'S' )		3268194	12					
ANR	3268334	Condition	result . argc != 1 || result . argv [ 0 ] [ 0 ] != 'S'	5444:6:146128:146171	3268194	0	True				
ANR	3268335	OrExpression	result . argc != 1 || result . argv [ 0 ] [ 0 ] != 'S'		3268194	0		||			
ANR	3268336	EqualityExpression	result . argc != 1		3268194	0		!=			
ANR	3268337	MemberAccess	result . argc		3268194	0					
ANR	3268338	Identifier	result		3268194	0					
ANR	3268339	Identifier	argc		3268194	1					
ANR	3268340	PrimaryExpression	1		3268194	1					
ANR	3268341	EqualityExpression	result . argv [ 0 ] [ 0 ] != 'S'		3268194	1		!=			
ANR	3268342	ArrayIndexing	result . argv [ 0 ] [ 0 ]		3268194	0					
ANR	3268343	ArrayIndexing	result . argv [ 0 ]		3268194	0					
ANR	3268344	MemberAccess	result . argv		3268194	0					
ANR	3268345	Identifier	result		3268194	0					
ANR	3268346	Identifier	argv		3268194	1					
ANR	3268347	PrimaryExpression	0		3268194	1					
ANR	3268348	PrimaryExpression	0		3268194	1					
ANR	3268349	PrimaryExpression	'S'		3268194	1					
ANR	3268350	CompoundStatement		31:53:937:937	3268194	1					
ANR	3268351	ExpressionStatement	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed\\n"" , command )"	5446:2:146195:146249	3268194	0	True				
ANR	3268352	CallExpression	"dprintf ( D_ALWAYS , ""GAHP command '%s' failed\\n"" , command )"		3268194	0					
ANR	3268353	Callee	dprintf		3268194	0					
ANR	3268354	Identifier	dprintf		3268194	0					
ANR	3268355	ArgumentList	D_ALWAYS		3268194	1					
ANR	3268356	Argument	D_ALWAYS		3268194	0					
ANR	3268357	Identifier	D_ALWAYS		3268194	0					
ANR	3268358	Argument	"""GAHP command '%s' failed\\n"""		3268194	1					
ANR	3268359	PrimaryExpression	"""GAHP command '%s' failed\\n"""		3268194	0					
ANR	3268360	Argument	command		3268194	2					
ANR	3268361	Identifier	command		3268194	0					
ANR	3268362	ExpressionStatement	"error_string = """""	5447:2:146253:146270	3268194	1	True				
ANR	3268363	AssignmentExpression	"error_string = """""		3268194	0		=			
ANR	3268364	Identifier	error_string		3268194	0					
ANR	3268365	PrimaryExpression	""""""		3268194	1					
ANR	3268366	ReturnStatement	return 1 ;	5448:2:146274:146282	3268194	2	True				
ANR	3268367	PrimaryExpression	1		3268194	0					
ANR	3268368	ExpressionStatement	server -> unicore_gahp_callback_reqid = reqid	5452:1:146306:146349	3268194	13	True				
ANR	3268369	AssignmentExpression	server -> unicore_gahp_callback_reqid = reqid		3268194	0		=			
ANR	3268370	PtrMemberAccess	server -> unicore_gahp_callback_reqid		3268194	0					
ANR	3268371	Identifier	server		3268194	0					
ANR	3268372	Identifier	unicore_gahp_callback_reqid		3268194	1					
ANR	3268373	Identifier	reqid		3268194	1					
ANR	3268374	ExpressionStatement	server -> unicore_gahp_callback_func = callback_func	5453:2:146353:146403	3268194	14	True				
ANR	3268375	AssignmentExpression	server -> unicore_gahp_callback_func = callback_func		3268194	0		=			
ANR	3268376	PtrMemberAccess	server -> unicore_gahp_callback_func		3268194	0					
ANR	3268377	Identifier	server		3268194	0					
ANR	3268378	Identifier	unicore_gahp_callback_func		3268194	1					
ANR	3268379	Identifier	callback_func		3268194	1					
ANR	3268380	ReturnStatement	return 0 ;	5455:1:146407:146415	3268194	15	True				
ANR	3268381	PrimaryExpression	0		3268194	0					
ANR	3268382	ReturnType	int		3268194	1					
ANR	3268383	Identifier	GahpClient :: unicore_job_callback		3268194	2					
ANR	3268384	ParameterList	unicore_gahp_callback_func_t callback_func		3268194	3					
ANR	3268385	Parameter	unicore_gahp_callback_func_t callback_func	5413:33:145193:145234	3268194	0	True				
ANR	3268386	ParameterType	unicore_gahp_callback_func_t		3268194	0					
ANR	3268387	Identifier	callback_func		3268194	1					
ANR	3268388	CFGEntryNode	ENTRY		3268194		True				
ANR	3268389	CFGExitNode	EXIT		3268194		True				
ANR	3268390	Symbol	server		3268194						
ANR	3268391	Symbol	server -> m_commands_supported		3268194						
ANR	3268392	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3268194						
ANR	3268393	Symbol	* server		3268194						
ANR	3268394	Symbol	server -> unicore_gahp_callback_func		3268194						
ANR	3268395	Symbol	results_only		3268194						
ANR	3268396	Symbol	* server -> m_commands_supported		3268194						
ANR	3268397	Symbol	reqid		3268194						
ANR	3268398	Symbol	result		3268194						
ANR	3268399	Symbol	* result		3268194						
ANR	3268400	Symbol	server -> m_commands_supported -> contains_anycase		3268194						
ANR	3268401	Symbol	m_mode		3268194						
ANR	3268402	Symbol	snprintf		3268194						
ANR	3268403	Symbol	NULL		3268194						
ANR	3268404	Symbol	* * result . argv		3268194						
ANR	3268405	Symbol	D_ALWAYS		3268194						
ANR	3268406	Symbol	* * result		3268194						
ANR	3268407	Symbol	* result . argv		3268194						
ANR	3268408	Symbol	command		3268194						
ANR	3268409	Symbol	result . argv		3268194						
ANR	3268410	Symbol	error_string		3268194						
ANR	3268411	Symbol	buf		3268194						
ANR	3268412	Symbol	server -> unicore_gahp_callback_reqid		3268194						
ANR	3268413	Symbol	server -> new_reqid		3268194						
ANR	3268414	Symbol	x		3268194						
ANR	3268415	Symbol	result . argc		3268194						
ANR	3268416	Symbol	FALSE		3268194						
ANR	3268417	Symbol	* * server		3268194						
ANR	3268418	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3268194						
ANR	3268419	Symbol	callback_func		3268194						
ANR	3268420	Function	GahpClient :: cream_delegate	5458:0:146420:148160							
ANR	3268421	FunctionDef	"GahpClient :: cream_delegate (const char * delg_service , const char * delg_id)"		3268420	0					
ANR	3268422	CompoundStatement		5460:0:146499:148160	3268420	0					
ANR	3268423	Statement	static	5461:1:146502:146507	3268420	0	True				
ANR	3268424	IdentifierDeclStatement	"const char * command = ""CREAM_DELEGATE"" ;"	5461:8:146509:146547	3268420	1	True				
ANR	3268425	IdentifierDecl	"* command = ""CREAM_DELEGATE"""		3268420	0					
ANR	3268426	IdentifierDeclType	const char *		3268420	0					
ANR	3268427	Identifier	command		3268420	1					
ANR	3268428	AssignmentExpression	"* command = ""CREAM_DELEGATE"""		3268420	2		=			
ANR	3268429	Identifier	command		3268420	0					
ANR	3268430	PrimaryExpression	"""CREAM_DELEGATE"""		3268420	1					
ANR	3268431	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3268420	2					
ANR	3268432	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5464:6:146596:146657	3268420	0	True				
ANR	3268433	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3268420	0		==			
ANR	3268434	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3268420	0					
ANR	3268435	Callee	server -> m_commands_supported -> contains_anycase		3268420	0					
ANR	3268436	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3268420	0					
ANR	3268437	PtrMemberAccess	server -> m_commands_supported		3268420	0					
ANR	3268438	Identifier	server		3268420	0					
ANR	3268439	Identifier	m_commands_supported		3268420	1					
ANR	3268440	Identifier	contains_anycase		3268420	1					
ANR	3268441	ArgumentList	command		3268420	1					
ANR	3268442	Argument	command		3268420	0					
ANR	3268443	Identifier	command		3268420	0					
ANR	3268444	Identifier	FALSE		3268420	1					
ANR	3268445	CompoundStatement		5:70:160:160	3268420	1					
ANR	3268446	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5465:2:146664:146703	3268420	0	True				
ANR	3268447	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3268420	0					
ANR	3268448	IfStatement	if ( ! delg_service )		3268420	3					
ANR	3268449	Condition	! delg_service	5469:5:146741:146753	3268420	0	True				
ANR	3268450	UnaryOperationExpression	! delg_service		3268420	0					
ANR	3268451	UnaryOperator	!		3268420	0					
ANR	3268452	Identifier	delg_service		3268420	1					
ANR	3268453	ExpressionStatement	delg_service = NULLSTRING	5469:20:146756:146779	3268420	1	True				
ANR	3268454	AssignmentExpression	delg_service = NULLSTRING		3268420	0		=			
ANR	3268455	Identifier	delg_service		3268420	0					
ANR	3268456	Identifier	NULLSTRING		3268420	1					
ANR	3268457	IfStatement	if ( ! delg_id )		3268420	4					
ANR	3268458	Condition	! delg_id	5470:5:146786:146793	3268420	0	True				
ANR	3268459	UnaryOperationExpression	! delg_id		3268420	0					
ANR	3268460	UnaryOperator	!		3268420	0					
ANR	3268461	Identifier	delg_id		3268420	1					
ANR	3268462	ExpressionStatement	delg_id = NULLSTRING	5470:15:146796:146814	3268420	1	True				
ANR	3268463	AssignmentExpression	delg_id = NULLSTRING		3268420	0		=			
ANR	3268464	Identifier	delg_id		3268420	0					
ANR	3268465	Identifier	NULLSTRING		3268420	1					
ANR	3268466	IdentifierDeclStatement	std :: string reqline ;	5471:1:146817:146836	3268420	5	True				
ANR	3268467	IdentifierDecl	reqline		3268420	0					
ANR	3268468	IdentifierDeclType	std :: string		3268420	0					
ANR	3268469	Identifier	reqline		3268420	1					
ANR	3268470	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( delg_service ) ) ;	5472:1:146839:146892	3268420	6	True				
ANR	3268471	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( delg_service ) )		3268420	0					
ANR	3268472	IdentifierDeclType	char *		3268420	0					
ANR	3268473	Identifier	esc1		3268420	1					
ANR	3268474	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( delg_service ) )		3268420	2		=			
ANR	3268475	Identifier	esc1		3268420	0					
ANR	3268476	CallExpression	strdup ( escapeGahpString ( delg_service ) )		3268420	1					
ANR	3268477	Callee	strdup		3268420	0					
ANR	3268478	Identifier	strdup		3268420	0					
ANR	3268479	ArgumentList	escapeGahpString ( delg_service )		3268420	1					
ANR	3268480	Argument	escapeGahpString ( delg_service )		3268420	0					
ANR	3268481	CallExpression	escapeGahpString ( delg_service )		3268420	0					
ANR	3268482	Callee	escapeGahpString		3268420	0					
ANR	3268483	Identifier	escapeGahpString		3268420	0					
ANR	3268484	ArgumentList	delg_service		3268420	1					
ANR	3268485	Argument	delg_service		3268420	0					
ANR	3268486	Identifier	delg_service		3268420	0					
ANR	3268487	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( delg_id ) ) ;	5473:1:146895:146943	3268420	7	True				
ANR	3268488	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( delg_id ) )		3268420	0					
ANR	3268489	IdentifierDeclType	char *		3268420	0					
ANR	3268490	Identifier	esc2		3268420	1					
ANR	3268491	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( delg_id ) )		3268420	2		=			
ANR	3268492	Identifier	esc2		3268420	0					
ANR	3268493	CallExpression	strdup ( escapeGahpString ( delg_id ) )		3268420	1					
ANR	3268494	Callee	strdup		3268420	0					
ANR	3268495	Identifier	strdup		3268420	0					
ANR	3268496	ArgumentList	escapeGahpString ( delg_id )		3268420	1					
ANR	3268497	Argument	escapeGahpString ( delg_id )		3268420	0					
ANR	3268498	CallExpression	escapeGahpString ( delg_id )		3268420	0					
ANR	3268499	Callee	escapeGahpString		3268420	0					
ANR	3268500	Identifier	escapeGahpString		3268420	0					
ANR	3268501	ArgumentList	delg_id		3268420	1					
ANR	3268502	Argument	delg_id		3268420	0					
ANR	3268503	Identifier	delg_id		3268420	0					
ANR	3268504	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc2 , esc1 ) ;"	5474:1:146946:146991	3268420	8	True				
ANR	3268505	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc2 , esc1 )"		3268420	0					
ANR	3268506	IdentifierDeclType	int		3268420	0					
ANR	3268507	Identifier	x		3268420	1					
ANR	3268508	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc2 , esc1 )"		3268420	2		=			
ANR	3268509	Identifier	x		3268420	0					
ANR	3268510	CallExpression	"sprintf ( reqline , ""%s %s"" , esc2 , esc1 )"		3268420	1					
ANR	3268511	Callee	sprintf		3268420	0					
ANR	3268512	Identifier	sprintf		3268420	0					
ANR	3268513	ArgumentList	reqline		3268420	1					
ANR	3268514	Argument	reqline		3268420	0					
ANR	3268515	Identifier	reqline		3268420	0					
ANR	3268516	Argument	"""%s %s"""		3268420	1					
ANR	3268517	PrimaryExpression	"""%s %s"""		3268420	0					
ANR	3268518	Argument	esc2		3268420	2					
ANR	3268519	Identifier	esc2		3268420	0					
ANR	3268520	Argument	esc1		3268420	3					
ANR	3268521	Identifier	esc1		3268420	0					
ANR	3268522	ExpressionStatement	free ( esc1 )	5475:1:146994:147006	3268420	9	True				
ANR	3268523	CallExpression	free ( esc1 )		3268420	0					
ANR	3268524	Callee	free		3268420	0					
ANR	3268525	Identifier	free		3268420	0					
ANR	3268526	ArgumentList	esc1		3268420	1					
ANR	3268527	Argument	esc1		3268420	0					
ANR	3268528	Identifier	esc1		3268420	0					
ANR	3268529	ExpressionStatement	free ( esc2 )	5476:1:147009:147021	3268420	10	True				
ANR	3268530	CallExpression	free ( esc2 )		3268420	0					
ANR	3268531	Callee	free		3268420	0					
ANR	3268532	Identifier	free		3268420	0					
ANR	3268533	ArgumentList	esc2		3268420	1					
ANR	3268534	Argument	esc2		3268420	0					
ANR	3268535	Identifier	esc2		3268420	0					
ANR	3268536	ExpressionStatement	ASSERT ( x > 0 )	5477:1:147024:147039	3268420	11	True				
ANR	3268537	CallExpression	ASSERT ( x > 0 )		3268420	0					
ANR	3268538	Callee	ASSERT		3268420	0					
ANR	3268539	Identifier	ASSERT		3268420	0					
ANR	3268540	ArgumentList	x > 0		3268420	1					
ANR	3268541	Argument	x > 0		3268420	0					
ANR	3268542	RelationalExpression	x > 0		3268420	0		>			
ANR	3268543	Identifier	x		3268420	0					
ANR	3268544	PrimaryExpression	0		3268420	1					
ANR	3268545	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5478:1:147042:147075	3268420	12	True				
ANR	3268546	IdentifierDecl	* buf = reqline . c_str ( )		3268420	0					
ANR	3268547	IdentifierDeclType	const char *		3268420	0					
ANR	3268548	Identifier	buf		3268420	1					
ANR	3268549	AssignmentExpression	* buf = reqline . c_str ( )		3268420	2		=			
ANR	3268550	Identifier	buf		3268420	0					
ANR	3268551	CallExpression	reqline . c_str ( )		3268420	1					
ANR	3268552	Callee	reqline . c_str		3268420	0					
ANR	3268553	MemberAccess	reqline . c_str		3268420	0					
ANR	3268554	Identifier	reqline		3268420	0					
ANR	3268555	Identifier	c_str		3268420	1					
ANR	3268556	ArgumentList			3268420	1					
ANR	3268557	IfStatement	"if ( ! is_pending ( command , buf ) )"		3268420	13					
ANR	3268558	Condition	"! is_pending ( command , buf )"	5482:6:147176:147199	3268420	0	True				
ANR	3268559	UnaryOperationExpression	"! is_pending ( command , buf )"		3268420	0					
ANR	3268560	UnaryOperator	!		3268420	0					
ANR	3268561	CallExpression	"is_pending ( command , buf )"		3268420	1					
ANR	3268562	Callee	is_pending		3268420	0					
ANR	3268563	Identifier	is_pending		3268420	0					
ANR	3268564	ArgumentList	command		3268420	1					
ANR	3268565	Argument	command		3268420	0					
ANR	3268566	Identifier	command		3268420	0					
ANR	3268567	Argument	buf		3268420	1					
ANR	3268568	Identifier	buf		3268420	0					
ANR	3268569	CompoundStatement		23:33:703:703	3268420	1					
ANR	3268570	IfStatement	if ( m_mode == results_only )		3268420	0					
ANR	3268571	Condition	m_mode == results_only	5485:7:147308:147329	3268420	0	True				
ANR	3268572	EqualityExpression	m_mode == results_only		3268420	0		==			
ANR	3268573	Identifier	m_mode		3268420	0					
ANR	3268574	Identifier	results_only		3268420	1					
ANR	3268575	CompoundStatement		26:32:833:833	3268420	1					
ANR	3268576	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5486:3:147338:147377	3268420	0	True				
ANR	3268577	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3268420	0					
ANR	3268578	ExpressionStatement	"now_pending ( command , buf , deleg_proxy , high_prio )"	5488:2:147385:147431	3268420	1	True				
ANR	3268579	CallExpression	"now_pending ( command , buf , deleg_proxy , high_prio )"		3268420	0					
ANR	3268580	Callee	now_pending		3268420	0					
ANR	3268581	Identifier	now_pending		3268420	0					
ANR	3268582	ArgumentList	command		3268420	1					
ANR	3268583	Argument	command		3268420	0					
ANR	3268584	Identifier	command		3268420	0					
ANR	3268585	Argument	buf		3268420	1					
ANR	3268586	Identifier	buf		3268420	0					
ANR	3268587	Argument	deleg_proxy		3268420	2					
ANR	3268588	Identifier	deleg_proxy		3268420	0					
ANR	3268589	Argument	high_prio		3268420	3					
ANR	3268590	Identifier	high_prio		3268420	0					
ANR	3268591	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5494:1:147525:147576	3268420	14	True				
ANR	3268592	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3268420	0					
ANR	3268593	IdentifierDeclType	Gahp_Args *		3268420	0					
ANR	3268594	Identifier	result		3268420	1					
ANR	3268595	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3268420	2		=			
ANR	3268596	Identifier	result		3268420	0					
ANR	3268597	CallExpression	"get_pending_result ( command , buf )"		3268420	1					
ANR	3268598	Callee	get_pending_result		3268420	0					
ANR	3268599	Identifier	get_pending_result		3268420	0					
ANR	3268600	ArgumentList	command		3268420	1					
ANR	3268601	Argument	command		3268420	0					
ANR	3268602	Identifier	command		3268420	0					
ANR	3268603	Argument	buf		3268420	1					
ANR	3268604	Identifier	buf		3268420	0					
ANR	3268605	IfStatement	if ( result )		3268420	15					
ANR	3268606	Condition	result	5495:6:147584:147589	3268420	0	True				
ANR	3268607	Identifier	result		3268420	0					
ANR	3268608	CompoundStatement		42:2:1189:1195	3268420	1					
ANR	3268609	IfStatement	if ( result -> argc != 2 )		3268420	0					
ANR	3268610	Condition	result -> argc != 2	5498:6:147626:147642	3268420	0	True				
ANR	3268611	EqualityExpression	result -> argc != 2		3268420	0		!=			
ANR	3268612	PtrMemberAccess	result -> argc		3268420	0					
ANR	3268613	Identifier	result		3268420	0					
ANR	3268614	Identifier	argc		3268420	1					
ANR	3268615	PrimaryExpression	2		3268420	1					
ANR	3268616	CompoundStatement		39:25:1145:1145	3268420	1					
ANR	3268617	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5499:3:147650:147681	3268420	0	True				
ANR	3268618	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3268420	0					
ANR	3268619	Callee	EXCEPT		3268420	0					
ANR	3268620	Identifier	EXCEPT		3268420	0					
ANR	3268621	ArgumentList	"""Bad %s Result"""		3268420	1					
ANR	3268622	Argument	"""Bad %s Result"""		3268420	0					
ANR	3268623	PrimaryExpression	"""Bad %s Result"""		3268420	0					
ANR	3268624	Argument	command		3268420	1					
ANR	3268625	Identifier	command		3268420	0					
ANR	3268626	IdentifierDeclStatement	int rc ;	5501:2:147689:147695	3268420	1	True				
ANR	3268627	IdentifierDecl	rc		3268420	0					
ANR	3268628	IdentifierDeclType	int		3268420	0					
ANR	3268629	Identifier	rc		3268420	1					
ANR	3268630	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3268420	2					
ANR	3268631	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	5502:6:147703:147742	3268420	0	True				
ANR	3268632	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3268420	0		==			
ANR	3268633	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3268420	0					
ANR	3268634	Callee	strcmp		3268420	0					
ANR	3268635	Identifier	strcmp		3268420	0					
ANR	3268636	ArgumentList	result -> argv [ 1 ]		3268420	1					
ANR	3268637	Argument	result -> argv [ 1 ]		3268420	0					
ANR	3268638	ArrayIndexing	result -> argv [ 1 ]		3268420	0					
ANR	3268639	PtrMemberAccess	result -> argv		3268420	0					
ANR	3268640	Identifier	result		3268420	0					
ANR	3268641	Identifier	argv		3268420	1					
ANR	3268642	PrimaryExpression	1		3268420	1					
ANR	3268643	Argument	NULLSTRING		3268420	1					
ANR	3268644	Identifier	NULLSTRING		3268420	0					
ANR	3268645	PrimaryExpression	0		3268420	1					
ANR	3268646	CompoundStatement		43:48:1245:1245	3268420	1					
ANR	3268647	ExpressionStatement	rc = 0	5503:3:147750:147756	3268420	0	True				
ANR	3268648	AssignmentExpression	rc = 0		3268420	0		=			
ANR	3268649	Identifier	rc		3268420	0					
ANR	3268650	PrimaryExpression	0		3268420	1					
ANR	3268651	ElseStatement	else		3268420	0					
ANR	3268652	CompoundStatement		45:9:1267:1267	3268420	0					
ANR	3268653	ExpressionStatement	rc = 1	5505:3:147772:147778	3268420	0	True				
ANR	3268654	AssignmentExpression	rc = 1		3268420	0		=			
ANR	3268655	Identifier	rc		3268420	0					
ANR	3268656	PrimaryExpression	1		3268420	1					
ANR	3268657	ExpressionStatement	error_string = result -> argv [ 1 ]	5506:3:147783:147813	3268420	1	True				
ANR	3268658	AssignmentExpression	error_string = result -> argv [ 1 ]		3268420	0		=			
ANR	3268659	Identifier	error_string		3268420	0					
ANR	3268660	ArrayIndexing	result -> argv [ 1 ]		3268420	1					
ANR	3268661	PtrMemberAccess	result -> argv		3268420	0					
ANR	3268662	Identifier	result		3268420	0					
ANR	3268663	Identifier	argv		3268420	1					
ANR	3268664	PrimaryExpression	1		3268420	1					
ANR	3268665	Statement	delete	5509:2:147822:147827	3268420	3	True				
ANR	3268666	ExpressionStatement	result	5509:9:147829:147835	3268420	4	True				
ANR	3268667	Identifier	result		3268420	0					
ANR	3268668	ReturnStatement	return rc ;	5510:2:147839:147848	3268420	5	True				
ANR	3268669	Identifier	rc		3268420	0					
ANR	3268670	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3268420	16					
ANR	3268671	Condition	"check_pending_timeout ( command , buf )"	5514:6:147905:147938	3268420	0	True				
ANR	3268672	CallExpression	"check_pending_timeout ( command , buf )"		3268420	0					
ANR	3268673	Callee	check_pending_timeout		3268420	0					
ANR	3268674	Identifier	check_pending_timeout		3268420	0					
ANR	3268675	ArgumentList	command		3268420	1					
ANR	3268676	Argument	command		3268420	0					
ANR	3268677	Identifier	command		3268420	0					
ANR	3268678	Argument	buf		3268420	1					
ANR	3268679	Identifier	buf		3268420	0					
ANR	3268680	CompoundStatement		55:43:1442:1442	3268420	1					
ANR	3268681	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5516:2:147978:148026	3268420	0	True				
ANR	3268682	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3268420	0					
ANR	3268683	Callee	sprintf		3268420	0					
ANR	3268684	Identifier	sprintf		3268420	0					
ANR	3268685	ArgumentList	error_string		3268420	1					
ANR	3268686	Argument	error_string		3268420	0					
ANR	3268687	Identifier	error_string		3268420	0					
ANR	3268688	Argument	"""%s timed out"""		3268420	1					
ANR	3268689	PrimaryExpression	"""%s timed out"""		3268420	0					
ANR	3268690	Argument	command		3268420	2					
ANR	3268691	Identifier	command		3268420	0					
ANR	3268692	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5517:2:148030:148065	3268420	1	True				
ANR	3268693	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3268420	0					
ANR	3268694	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5521:1:148125:148158	3268420	17	True				
ANR	3268695	Identifier	GAHPCLIENT_COMMAND_PENDING		3268420	0					
ANR	3268696	ReturnType	int		3268420	1					
ANR	3268697	Identifier	GahpClient :: cream_delegate		3268420	2					
ANR	3268698	ParameterList	"const char * delg_service , const char * delg_id"		3268420	3					
ANR	3268699	Parameter	const char * delg_service	5459:27:146452:146475	3268420	0	True				
ANR	3268700	ParameterType	const char *		3268420	0					
ANR	3268701	Identifier	delg_service		3268420	1					
ANR	3268702	Parameter	const char * delg_id	5459:53:146478:146496	3268420	1	True				
ANR	3268703	ParameterType	const char *		3268420	0					
ANR	3268704	Identifier	delg_id		3268420	1					
ANR	3268705	CFGEntryNode	ENTRY		3268420		True				
ANR	3268706	CFGExitNode	EXIT		3268420		True				
ANR	3268707	Symbol	server		3268420						
ANR	3268708	Symbol	server -> m_commands_supported		3268420						
ANR	3268709	Symbol	escapeGahpString		3268420						
ANR	3268710	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3268420						
ANR	3268711	Symbol	* server		3268420						
ANR	3268712	Symbol	delg_service		3268420						
ANR	3268713	Symbol	reqline . c_str		3268420						
ANR	3268714	Symbol	results_only		3268420						
ANR	3268715	Symbol	result -> argv		3268420						
ANR	3268716	Symbol	* server -> m_commands_supported		3268420						
ANR	3268717	Symbol	sprintf		3268420						
ANR	3268718	Symbol	result		3268420						
ANR	3268719	Symbol	delg_id		3268420						
ANR	3268720	Symbol	high_prio		3268420						
ANR	3268721	Symbol	* result		3268420						
ANR	3268722	Symbol	server -> m_commands_supported -> contains_anycase		3268420						
ANR	3268723	Symbol	GAHPCLIENT_COMMAND_PENDING		3268420						
ANR	3268724	Symbol	reqline		3268420						
ANR	3268725	Symbol	m_mode		3268420						
ANR	3268726	Symbol	* result -> argv		3268420						
ANR	3268727	Symbol	strcmp		3268420						
ANR	3268728	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3268420						
ANR	3268729	Symbol	* * result		3268420						
ANR	3268730	Symbol	NULLSTRING		3268420						
ANR	3268731	Symbol	command		3268420						
ANR	3268732	Symbol	get_pending_result		3268420						
ANR	3268733	Symbol	rc		3268420						
ANR	3268734	Symbol	error_string		3268420						
ANR	3268735	Symbol	esc2		3268420						
ANR	3268736	Symbol	buf		3268420						
ANR	3268737	Symbol	esc1		3268420						
ANR	3268738	Symbol	x		3268420						
ANR	3268739	Symbol	result -> argc		3268420						
ANR	3268740	Symbol	* * server		3268420						
ANR	3268741	Symbol	FALSE		3268420						
ANR	3268742	Symbol	strdup		3268420						
ANR	3268743	Symbol	check_pending_timeout		3268420						
ANR	3268744	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3268420						
ANR	3268745	Symbol	is_pending		3268420						
ANR	3268746	Symbol	deleg_proxy		3268420						
ANR	3268747	Function	GahpClient :: cream_job_register	5524:0:148163:150689							
ANR	3268748	FunctionDef	"GahpClient :: cream_job_register (const char * service , const char * delg_id , const char * jdl , const char * lease_id , char * * job_id , char * * upload_url , char * * download_url)"		3268747	0					
ANR	3268749	CompoundStatement		5527:0:148346:150689	3268747	0					
ANR	3268750	Statement	static	5528:1:148349:148354	3268747	0	True				
ANR	3268751	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_REGISTER"" ;"	5528:8:148356:148398	3268747	1	True				
ANR	3268752	IdentifierDecl	"* command = ""CREAM_JOB_REGISTER"""		3268747	0					
ANR	3268753	IdentifierDeclType	const char *		3268747	0					
ANR	3268754	Identifier	command		3268747	1					
ANR	3268755	AssignmentExpression	"* command = ""CREAM_JOB_REGISTER"""		3268747	2		=			
ANR	3268756	Identifier	command		3268747	0					
ANR	3268757	PrimaryExpression	"""CREAM_JOB_REGISTER"""		3268747	1					
ANR	3268758	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3268747	2					
ANR	3268759	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5531:6:148447:148508	3268747	0	True				
ANR	3268760	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3268747	0		==			
ANR	3268761	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3268747	0					
ANR	3268762	Callee	server -> m_commands_supported -> contains_anycase		3268747	0					
ANR	3268763	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3268747	0					
ANR	3268764	PtrMemberAccess	server -> m_commands_supported		3268747	0					
ANR	3268765	Identifier	server		3268747	0					
ANR	3268766	Identifier	m_commands_supported		3268747	1					
ANR	3268767	Identifier	contains_anycase		3268747	1					
ANR	3268768	ArgumentList	command		3268747	1					
ANR	3268769	Argument	command		3268747	0					
ANR	3268770	Identifier	command		3268747	0					
ANR	3268771	Identifier	FALSE		3268747	1					
ANR	3268772	CompoundStatement		5:70:164:164	3268747	1					
ANR	3268773	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5532:2:148515:148554	3268747	0	True				
ANR	3268774	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3268747	0					
ANR	3268775	IfStatement	if ( ! service )		3268747	3					
ANR	3268776	Condition	! service	5536:5:148592:148599	3268747	0	True				
ANR	3268777	UnaryOperationExpression	! service		3268747	0					
ANR	3268778	UnaryOperator	!		3268747	0					
ANR	3268779	Identifier	service		3268747	1					
ANR	3268780	ExpressionStatement	service = NULLSTRING	5536:15:148602:148620	3268747	1	True				
ANR	3268781	AssignmentExpression	service = NULLSTRING		3268747	0		=			
ANR	3268782	Identifier	service		3268747	0					
ANR	3268783	Identifier	NULLSTRING		3268747	1					
ANR	3268784	IfStatement	if ( ! delg_id )		3268747	4					
ANR	3268785	Condition	! delg_id	5537:5:148627:148634	3268747	0	True				
ANR	3268786	UnaryOperationExpression	! delg_id		3268747	0					
ANR	3268787	UnaryOperator	!		3268747	0					
ANR	3268788	Identifier	delg_id		3268747	1					
ANR	3268789	ExpressionStatement	delg_id = NULLSTRING	5537:15:148637:148655	3268747	1	True				
ANR	3268790	AssignmentExpression	delg_id = NULLSTRING		3268747	0		=			
ANR	3268791	Identifier	delg_id		3268747	0					
ANR	3268792	Identifier	NULLSTRING		3268747	1					
ANR	3268793	IfStatement	if ( ! jdl )		3268747	5					
ANR	3268794	Condition	! jdl	5538:5:148662:148665	3268747	0	True				
ANR	3268795	UnaryOperationExpression	! jdl		3268747	0					
ANR	3268796	UnaryOperator	!		3268747	0					
ANR	3268797	Identifier	jdl		3268747	1					
ANR	3268798	ExpressionStatement	jdl = NULLSTRING	5538:11:148668:148684	3268747	1	True				
ANR	3268799	AssignmentExpression	jdl = NULLSTRING		3268747	0		=			
ANR	3268800	Identifier	jdl		3268747	0					
ANR	3268801	Identifier	NULLSTRING		3268747	1					
ANR	3268802	IfStatement	if ( ! lease_id )		3268747	6					
ANR	3268803	Condition	! lease_id	5539:5:148691:148699	3268747	0	True				
ANR	3268804	UnaryOperationExpression	! lease_id		3268747	0					
ANR	3268805	UnaryOperator	!		3268747	0					
ANR	3268806	Identifier	lease_id		3268747	1					
ANR	3268807	ExpressionStatement	"lease_id = """""	5539:16:148702:148715	3268747	1	True				
ANR	3268808	AssignmentExpression	"lease_id = """""		3268747	0		=			
ANR	3268809	Identifier	lease_id		3268747	0					
ANR	3268810	PrimaryExpression	""""""		3268747	1					
ANR	3268811	IdentifierDeclStatement	std :: string reqline ;	5541:1:148719:148738	3268747	7	True				
ANR	3268812	IdentifierDecl	reqline		3268747	0					
ANR	3268813	IdentifierDeclType	std :: string		3268747	0					
ANR	3268814	Identifier	reqline		3268747	1					
ANR	3268815	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	5542:1:148741:148789	3268747	8	True				
ANR	3268816	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3268747	0					
ANR	3268817	IdentifierDeclType	char *		3268747	0					
ANR	3268818	Identifier	esc1		3268747	1					
ANR	3268819	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3268747	2		=			
ANR	3268820	Identifier	esc1		3268747	0					
ANR	3268821	CallExpression	strdup ( escapeGahpString ( service ) )		3268747	1					
ANR	3268822	Callee	strdup		3268747	0					
ANR	3268823	Identifier	strdup		3268747	0					
ANR	3268824	ArgumentList	escapeGahpString ( service )		3268747	1					
ANR	3268825	Argument	escapeGahpString ( service )		3268747	0					
ANR	3268826	CallExpression	escapeGahpString ( service )		3268747	0					
ANR	3268827	Callee	escapeGahpString		3268747	0					
ANR	3268828	Identifier	escapeGahpString		3268747	0					
ANR	3268829	ArgumentList	service		3268747	1					
ANR	3268830	Argument	service		3268747	0					
ANR	3268831	Identifier	service		3268747	0					
ANR	3268832	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( delg_id ) ) ;	5543:1:148792:148840	3268747	9	True				
ANR	3268833	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( delg_id ) )		3268747	0					
ANR	3268834	IdentifierDeclType	char *		3268747	0					
ANR	3268835	Identifier	esc2		3268747	1					
ANR	3268836	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( delg_id ) )		3268747	2		=			
ANR	3268837	Identifier	esc2		3268747	0					
ANR	3268838	CallExpression	strdup ( escapeGahpString ( delg_id ) )		3268747	1					
ANR	3268839	Callee	strdup		3268747	0					
ANR	3268840	Identifier	strdup		3268747	0					
ANR	3268841	ArgumentList	escapeGahpString ( delg_id )		3268747	1					
ANR	3268842	Argument	escapeGahpString ( delg_id )		3268747	0					
ANR	3268843	CallExpression	escapeGahpString ( delg_id )		3268747	0					
ANR	3268844	Callee	escapeGahpString		3268747	0					
ANR	3268845	Identifier	escapeGahpString		3268747	0					
ANR	3268846	ArgumentList	delg_id		3268747	1					
ANR	3268847	Argument	delg_id		3268747	0					
ANR	3268848	Identifier	delg_id		3268747	0					
ANR	3268849	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( jdl ) ) ;	5544:1:148843:148887	3268747	10	True				
ANR	3268850	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( jdl ) )		3268747	0					
ANR	3268851	IdentifierDeclType	char *		3268747	0					
ANR	3268852	Identifier	esc3		3268747	1					
ANR	3268853	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( jdl ) )		3268747	2		=			
ANR	3268854	Identifier	esc3		3268747	0					
ANR	3268855	CallExpression	strdup ( escapeGahpString ( jdl ) )		3268747	1					
ANR	3268856	Callee	strdup		3268747	0					
ANR	3268857	Identifier	strdup		3268747	0					
ANR	3268858	ArgumentList	escapeGahpString ( jdl )		3268747	1					
ANR	3268859	Argument	escapeGahpString ( jdl )		3268747	0					
ANR	3268860	CallExpression	escapeGahpString ( jdl )		3268747	0					
ANR	3268861	Callee	escapeGahpString		3268747	0					
ANR	3268862	Identifier	escapeGahpString		3268747	0					
ANR	3268863	ArgumentList	jdl		3268747	1					
ANR	3268864	Argument	jdl		3268747	0					
ANR	3268865	Identifier	jdl		3268747	0					
ANR	3268866	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( lease_id ) ) ;	5545:1:148890:148939	3268747	11	True				
ANR	3268867	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( lease_id ) )		3268747	0					
ANR	3268868	IdentifierDeclType	char *		3268747	0					
ANR	3268869	Identifier	esc4		3268747	1					
ANR	3268870	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( lease_id ) )		3268747	2		=			
ANR	3268871	Identifier	esc4		3268747	0					
ANR	3268872	CallExpression	strdup ( escapeGahpString ( lease_id ) )		3268747	1					
ANR	3268873	Callee	strdup		3268747	0					
ANR	3268874	Identifier	strdup		3268747	0					
ANR	3268875	ArgumentList	escapeGahpString ( lease_id )		3268747	1					
ANR	3268876	Argument	escapeGahpString ( lease_id )		3268747	0					
ANR	3268877	CallExpression	escapeGahpString ( lease_id )		3268747	0					
ANR	3268878	Callee	escapeGahpString		3268747	0					
ANR	3268879	Identifier	escapeGahpString		3268747	0					
ANR	3268880	ArgumentList	lease_id		3268747	1					
ANR	3268881	Argument	lease_id		3268747	0					
ANR	3268882	Identifier	lease_id		3268747	0					
ANR	3268883	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 ) ;"	5546:1:148942:149007	3268747	12	True				
ANR	3268884	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3268747	0					
ANR	3268885	IdentifierDeclType	int		3268747	0					
ANR	3268886	Identifier	x		3268747	1					
ANR	3268887	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3268747	2		=			
ANR	3268888	Identifier	x		3268747	0					
ANR	3268889	CallExpression	"sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3268747	1					
ANR	3268890	Callee	sprintf		3268747	0					
ANR	3268891	Identifier	sprintf		3268747	0					
ANR	3268892	ArgumentList	reqline		3268747	1					
ANR	3268893	Argument	reqline		3268747	0					
ANR	3268894	Identifier	reqline		3268747	0					
ANR	3268895	Argument	"""%s %s %s %s"""		3268747	1					
ANR	3268896	PrimaryExpression	"""%s %s %s %s"""		3268747	0					
ANR	3268897	Argument	esc1		3268747	2					
ANR	3268898	Identifier	esc1		3268747	0					
ANR	3268899	Argument	esc2		3268747	3					
ANR	3268900	Identifier	esc2		3268747	0					
ANR	3268901	Argument	esc3		3268747	4					
ANR	3268902	Identifier	esc3		3268747	0					
ANR	3268903	Argument	esc4		3268747	5					
ANR	3268904	Identifier	esc4		3268747	0					
ANR	3268905	ExpressionStatement	free ( esc1 )	5547:1:149010:149022	3268747	13	True				
ANR	3268906	CallExpression	free ( esc1 )		3268747	0					
ANR	3268907	Callee	free		3268747	0					
ANR	3268908	Identifier	free		3268747	0					
ANR	3268909	ArgumentList	esc1		3268747	1					
ANR	3268910	Argument	esc1		3268747	0					
ANR	3268911	Identifier	esc1		3268747	0					
ANR	3268912	ExpressionStatement	free ( esc2 )	5548:1:149025:149037	3268747	14	True				
ANR	3268913	CallExpression	free ( esc2 )		3268747	0					
ANR	3268914	Callee	free		3268747	0					
ANR	3268915	Identifier	free		3268747	0					
ANR	3268916	ArgumentList	esc2		3268747	1					
ANR	3268917	Argument	esc2		3268747	0					
ANR	3268918	Identifier	esc2		3268747	0					
ANR	3268919	ExpressionStatement	free ( esc3 )	5549:1:149040:149052	3268747	15	True				
ANR	3268920	CallExpression	free ( esc3 )		3268747	0					
ANR	3268921	Callee	free		3268747	0					
ANR	3268922	Identifier	free		3268747	0					
ANR	3268923	ArgumentList	esc3		3268747	1					
ANR	3268924	Argument	esc3		3268747	0					
ANR	3268925	Identifier	esc3		3268747	0					
ANR	3268926	ExpressionStatement	free ( esc4 )	5550:1:149055:149067	3268747	16	True				
ANR	3268927	CallExpression	free ( esc4 )		3268747	0					
ANR	3268928	Callee	free		3268747	0					
ANR	3268929	Identifier	free		3268747	0					
ANR	3268930	ArgumentList	esc4		3268747	1					
ANR	3268931	Argument	esc4		3268747	0					
ANR	3268932	Identifier	esc4		3268747	0					
ANR	3268933	ExpressionStatement	ASSERT ( x > 0 )	5551:1:149070:149085	3268747	17	True				
ANR	3268934	CallExpression	ASSERT ( x > 0 )		3268747	0					
ANR	3268935	Callee	ASSERT		3268747	0					
ANR	3268936	Identifier	ASSERT		3268747	0					
ANR	3268937	ArgumentList	x > 0		3268747	1					
ANR	3268938	Argument	x > 0		3268747	0					
ANR	3268939	RelationalExpression	x > 0		3268747	0		>			
ANR	3268940	Identifier	x		3268747	0					
ANR	3268941	PrimaryExpression	0		3268747	1					
ANR	3268942	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5552:1:149088:149121	3268747	18	True				
ANR	3268943	IdentifierDecl	* buf = reqline . c_str ( )		3268747	0					
ANR	3268944	IdentifierDeclType	const char *		3268747	0					
ANR	3268945	Identifier	buf		3268747	1					
ANR	3268946	AssignmentExpression	* buf = reqline . c_str ( )		3268747	2		=			
ANR	3268947	Identifier	buf		3268747	0					
ANR	3268948	CallExpression	reqline . c_str ( )		3268747	1					
ANR	3268949	Callee	reqline . c_str		3268747	0					
ANR	3268950	MemberAccess	reqline . c_str		3268747	0					
ANR	3268951	Identifier	reqline		3268747	0					
ANR	3268952	Identifier	c_str		3268747	1					
ANR	3268953	ArgumentList			3268747	1					
ANR	3268954	IfStatement	"if ( ! is_pending ( command , buf ) )"		3268747	19					
ANR	3268955	Condition	"! is_pending ( command , buf )"	5556:6:149223:149246	3268747	0	True				
ANR	3268956	UnaryOperationExpression	"! is_pending ( command , buf )"		3268747	0					
ANR	3268957	UnaryOperator	!		3268747	0					
ANR	3268958	CallExpression	"is_pending ( command , buf )"		3268747	1					
ANR	3268959	Callee	is_pending		3268747	0					
ANR	3268960	Identifier	is_pending		3268747	0					
ANR	3268961	ArgumentList	command		3268747	1					
ANR	3268962	Argument	command		3268747	0					
ANR	3268963	Identifier	command		3268747	0					
ANR	3268964	Argument	buf		3268747	1					
ANR	3268965	Identifier	buf		3268747	0					
ANR	3268966	CompoundStatement		30:33:903:903	3268747	1					
ANR	3268967	IfStatement	if ( m_mode == results_only )		3268747	0					
ANR	3268968	Condition	m_mode == results_only	5559:7:149355:149376	3268747	0	True				
ANR	3268969	EqualityExpression	m_mode == results_only		3268747	0		==			
ANR	3268970	Identifier	m_mode		3268747	0					
ANR	3268971	Identifier	results_only		3268747	1					
ANR	3268972	CompoundStatement		33:32:1033:1033	3268747	1					
ANR	3268973	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5560:3:149385:149424	3268747	0	True				
ANR	3268974	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3268747	0					
ANR	3268975	ExpressionStatement	"now_pending ( command , buf , deleg_proxy , low_prio )"	5562:2:149432:149477	3268747	1	True				
ANR	3268976	CallExpression	"now_pending ( command , buf , deleg_proxy , low_prio )"		3268747	0					
ANR	3268977	Callee	now_pending		3268747	0					
ANR	3268978	Identifier	now_pending		3268747	0					
ANR	3268979	ArgumentList	command		3268747	1					
ANR	3268980	Argument	command		3268747	0					
ANR	3268981	Identifier	command		3268747	0					
ANR	3268982	Argument	buf		3268747	1					
ANR	3268983	Identifier	buf		3268747	0					
ANR	3268984	Argument	deleg_proxy		3268747	2					
ANR	3268985	Identifier	deleg_proxy		3268747	0					
ANR	3268986	Argument	low_prio		3268747	3					
ANR	3268987	Identifier	low_prio		3268747	0					
ANR	3268988	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5568:1:149571:149622	3268747	20	True				
ANR	3268989	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3268747	0					
ANR	3268990	IdentifierDeclType	Gahp_Args *		3268747	0					
ANR	3268991	Identifier	result		3268747	1					
ANR	3268992	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3268747	2		=			
ANR	3268993	Identifier	result		3268747	0					
ANR	3268994	CallExpression	"get_pending_result ( command , buf )"		3268747	1					
ANR	3268995	Callee	get_pending_result		3268747	0					
ANR	3268996	Identifier	get_pending_result		3268747	0					
ANR	3268997	ArgumentList	command		3268747	1					
ANR	3268998	Argument	command		3268747	0					
ANR	3268999	Identifier	command		3268747	0					
ANR	3269000	Argument	buf		3268747	1					
ANR	3269001	Identifier	buf		3268747	0					
ANR	3269002	IfStatement	if ( result )		3268747	21					
ANR	3269003	Condition	result	5570:6:149631:149636	3268747	0	True				
ANR	3269004	Identifier	result		3268747	0					
ANR	3269005	CompoundStatement		46:2:1321:1331	3268747	1					
ANR	3269006	IdentifierDeclStatement	int rc = 0 ;	5572:2:149668:149678	3268747	0	True				
ANR	3269007	IdentifierDecl	rc = 0		3268747	0					
ANR	3269008	IdentifierDeclType	int		3268747	0					
ANR	3269009	Identifier	rc		3268747	1					
ANR	3269010	AssignmentExpression	rc = 0		3268747	2		=			
ANR	3269011	Identifier	rc		3268747	0					
ANR	3269012	PrimaryExpression	0		3268747	1					
ANR	3269013	IfStatement	if ( result -> argc == 2 )		3268747	1					
ANR	3269014	Condition	result -> argc == 2	5573:7:149687:149703	3268747	0	True				
ANR	3269015	EqualityExpression	result -> argc == 2		3268747	0		==			
ANR	3269016	PtrMemberAccess	result -> argc		3268747	0					
ANR	3269017	Identifier	result		3268747	0					
ANR	3269018	Identifier	argc		3268747	1					
ANR	3269019	PrimaryExpression	2		3268747	1					
ANR	3269020	CompoundStatement		47:27:1360:1360	3268747	1					
ANR	3269021	IfStatement	"if ( ! strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3268747	0					
ANR	3269022	Condition	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"	5574:8:149717:149754	3268747	0	True				
ANR	3269023	UnaryOperationExpression	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3268747	0					
ANR	3269024	UnaryOperator	!		3268747	0					
ANR	3269025	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3268747	1					
ANR	3269026	Callee	strcmp		3268747	0					
ANR	3269027	Identifier	strcmp		3268747	0					
ANR	3269028	ArgumentList	result -> argv [ 1 ]		3268747	1					
ANR	3269029	Argument	result -> argv [ 1 ]		3268747	0					
ANR	3269030	ArrayIndexing	result -> argv [ 1 ]		3268747	0					
ANR	3269031	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269032	Identifier	result		3268747	0					
ANR	3269033	Identifier	argv		3268747	1					
ANR	3269034	PrimaryExpression	1		3268747	1					
ANR	3269035	Argument	NULLSTRING		3268747	1					
ANR	3269036	Identifier	NULLSTRING		3268747	0					
ANR	3269037	CompoundStatement		48:49:1411:1411	3268747	1					
ANR	3269038	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	5575:4:149764:149798	3268747	0	True				
ANR	3269039	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3268747	0					
ANR	3269040	Callee	EXCEPT		3268747	0					
ANR	3269041	Identifier	EXCEPT		3268747	0					
ANR	3269042	ArgumentList	"""Bad %s result"""		3268747	1					
ANR	3269043	Argument	"""Bad %s result"""		3268747	0					
ANR	3269044	PrimaryExpression	"""Bad %s result"""		3268747	0					
ANR	3269045	Argument	command		3268747	1					
ANR	3269046	Identifier	command		3268747	0					
ANR	3269047	ExpressionStatement	error_string = result -> argv [ 1 ]	5577:3:149808:149838	3268747	1	True				
ANR	3269048	AssignmentExpression	error_string = result -> argv [ 1 ]		3268747	0		=			
ANR	3269049	Identifier	error_string		3268747	0					
ANR	3269050	ArrayIndexing	result -> argv [ 1 ]		3268747	1					
ANR	3269051	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269052	Identifier	result		3268747	0					
ANR	3269053	Identifier	argv		3268747	1					
ANR	3269054	PrimaryExpression	1		3268747	1					
ANR	3269055	ExpressionStatement	rc = 1	5578:3:149843:149849	3268747	2	True				
ANR	3269056	AssignmentExpression	rc = 1		3268747	0		=			
ANR	3269057	Identifier	rc		3268747	0					
ANR	3269058	PrimaryExpression	1		3268747	1					
ANR	3269059	ElseStatement	else		3268747	0					
ANR	3269060	IfStatement	if ( result -> argc == 5 )		3268747	0					
ANR	3269061	Condition	result -> argc == 5	5579:14:149865:149881	3268747	0	True				
ANR	3269062	EqualityExpression	result -> argc == 5		3268747	0		==			
ANR	3269063	PtrMemberAccess	result -> argc		3268747	0					
ANR	3269064	Identifier	result		3268747	0					
ANR	3269065	Identifier	argc		3268747	1					
ANR	3269066	PrimaryExpression	5		3268747	1					
ANR	3269067	CompoundStatement		53:34:1538:1538	3268747	1					
ANR	3269068	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3268747	0					
ANR	3269069	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	5580:8:149895:149931	3268747	0	True				
ANR	3269070	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3268747	0					
ANR	3269071	Callee	strcmp		3268747	0					
ANR	3269072	Identifier	strcmp		3268747	0					
ANR	3269073	ArgumentList	result -> argv [ 1 ]		3268747	1					
ANR	3269074	Argument	result -> argv [ 1 ]		3268747	0					
ANR	3269075	ArrayIndexing	result -> argv [ 1 ]		3268747	0					
ANR	3269076	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269077	Identifier	result		3268747	0					
ANR	3269078	Identifier	argv		3268747	1					
ANR	3269079	PrimaryExpression	1		3268747	1					
ANR	3269080	Argument	NULLSTRING		3268747	1					
ANR	3269081	Identifier	NULLSTRING		3268747	0					
ANR	3269082	CompoundStatement		54:48:1588:1588	3268747	1					
ANR	3269083	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	5581:4:149941:149975	3268747	0	True				
ANR	3269084	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3268747	0					
ANR	3269085	Callee	EXCEPT		3268747	0					
ANR	3269086	Identifier	EXCEPT		3268747	0					
ANR	3269087	ArgumentList	"""Bad %s result"""		3268747	1					
ANR	3269088	Argument	"""Bad %s result"""		3268747	0					
ANR	3269089	PrimaryExpression	"""Bad %s result"""		3268747	0					
ANR	3269090	Argument	command		3268747	1					
ANR	3269091	Identifier	command		3268747	0					
ANR	3269092	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3268747	1					
ANR	3269093	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	5584:8:149991:150029	3268747	0	True				
ANR	3269094	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3268747	0					
ANR	3269095	Callee	strcasecmp		3268747	0					
ANR	3269096	Identifier	strcasecmp		3268747	0					
ANR	3269097	ArgumentList	result -> argv [ 2 ]		3268747	1					
ANR	3269098	Argument	result -> argv [ 2 ]		3268747	0					
ANR	3269099	ArrayIndexing	result -> argv [ 2 ]		3268747	0					
ANR	3269100	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269101	Identifier	result		3268747	0					
ANR	3269102	Identifier	argv		3268747	1					
ANR	3269103	PrimaryExpression	2		3268747	1					
ANR	3269104	Argument	NULLSTRING		3268747	1					
ANR	3269105	Identifier	NULLSTRING		3268747	0					
ANR	3269106	CompoundStatement		58:50:1686:1686	3268747	1					
ANR	3269107	ExpressionStatement	* job_id = strdup ( result -> argv [ 2 ] )	5585:4:150039:150072	3268747	0	True				
ANR	3269108	AssignmentExpression	* job_id = strdup ( result -> argv [ 2 ] )		3268747	0		=			
ANR	3269109	UnaryOperationExpression	* job_id		3268747	0					
ANR	3269110	UnaryOperator	*		3268747	0					
ANR	3269111	Identifier	job_id		3268747	1					
ANR	3269112	CallExpression	strdup ( result -> argv [ 2 ] )		3268747	1					
ANR	3269113	Callee	strdup		3268747	0					
ANR	3269114	Identifier	strdup		3268747	0					
ANR	3269115	ArgumentList	result -> argv [ 2 ]		3268747	1					
ANR	3269116	Argument	result -> argv [ 2 ]		3268747	0					
ANR	3269117	ArrayIndexing	result -> argv [ 2 ]		3268747	0					
ANR	3269118	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269119	Identifier	result		3268747	0					
ANR	3269120	Identifier	argv		3268747	1					
ANR	3269121	PrimaryExpression	2		3268747	1					
ANR	3269122	IfStatement	"if ( strcasecmp ( result -> argv [ 3 ] , NULLSTRING ) )"		3268747	2					
ANR	3269123	Condition	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"	5587:8:150087:150125	3268747	0	True				
ANR	3269124	CallExpression	"strcasecmp ( result -> argv [ 3 ] , NULLSTRING )"		3268747	0					
ANR	3269125	Callee	strcasecmp		3268747	0					
ANR	3269126	Identifier	strcasecmp		3268747	0					
ANR	3269127	ArgumentList	result -> argv [ 3 ]		3268747	1					
ANR	3269128	Argument	result -> argv [ 3 ]		3268747	0					
ANR	3269129	ArrayIndexing	result -> argv [ 3 ]		3268747	0					
ANR	3269130	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269131	Identifier	result		3268747	0					
ANR	3269132	Identifier	argv		3268747	1					
ANR	3269133	PrimaryExpression	3		3268747	1					
ANR	3269134	Argument	NULLSTRING		3268747	1					
ANR	3269135	Identifier	NULLSTRING		3268747	0					
ANR	3269136	CompoundStatement		61:50:1782:1782	3268747	1					
ANR	3269137	ExpressionStatement	* upload_url = strdup ( result -> argv [ 3 ] )	5588:4:150135:150172	3268747	0	True				
ANR	3269138	AssignmentExpression	* upload_url = strdup ( result -> argv [ 3 ] )		3268747	0		=			
ANR	3269139	UnaryOperationExpression	* upload_url		3268747	0					
ANR	3269140	UnaryOperator	*		3268747	0					
ANR	3269141	Identifier	upload_url		3268747	1					
ANR	3269142	CallExpression	strdup ( result -> argv [ 3 ] )		3268747	1					
ANR	3269143	Callee	strdup		3268747	0					
ANR	3269144	Identifier	strdup		3268747	0					
ANR	3269145	ArgumentList	result -> argv [ 3 ]		3268747	1					
ANR	3269146	Argument	result -> argv [ 3 ]		3268747	0					
ANR	3269147	ArrayIndexing	result -> argv [ 3 ]		3268747	0					
ANR	3269148	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269149	Identifier	result		3268747	0					
ANR	3269150	Identifier	argv		3268747	1					
ANR	3269151	PrimaryExpression	3		3268747	1					
ANR	3269152	IfStatement	"if ( strcasecmp ( result -> argv [ 4 ] , NULLSTRING ) )"		3268747	3					
ANR	3269153	Condition	"strcasecmp ( result -> argv [ 4 ] , NULLSTRING )"	5590:8:150187:150225	3268747	0	True				
ANR	3269154	CallExpression	"strcasecmp ( result -> argv [ 4 ] , NULLSTRING )"		3268747	0					
ANR	3269155	Callee	strcasecmp		3268747	0					
ANR	3269156	Identifier	strcasecmp		3268747	0					
ANR	3269157	ArgumentList	result -> argv [ 4 ]		3268747	1					
ANR	3269158	Argument	result -> argv [ 4 ]		3268747	0					
ANR	3269159	ArrayIndexing	result -> argv [ 4 ]		3268747	0					
ANR	3269160	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269161	Identifier	result		3268747	0					
ANR	3269162	Identifier	argv		3268747	1					
ANR	3269163	PrimaryExpression	4		3268747	1					
ANR	3269164	Argument	NULLSTRING		3268747	1					
ANR	3269165	Identifier	NULLSTRING		3268747	0					
ANR	3269166	CompoundStatement		64:50:1882:1882	3268747	1					
ANR	3269167	ExpressionStatement	* download_url = strdup ( result -> argv [ 4 ] )	5591:4:150235:150274	3268747	0	True				
ANR	3269168	AssignmentExpression	* download_url = strdup ( result -> argv [ 4 ] )		3268747	0		=			
ANR	3269169	UnaryOperationExpression	* download_url		3268747	0					
ANR	3269170	UnaryOperator	*		3268747	0					
ANR	3269171	Identifier	download_url		3268747	1					
ANR	3269172	CallExpression	strdup ( result -> argv [ 4 ] )		3268747	1					
ANR	3269173	Callee	strdup		3268747	0					
ANR	3269174	Identifier	strdup		3268747	0					
ANR	3269175	ArgumentList	result -> argv [ 4 ]		3268747	1					
ANR	3269176	Argument	result -> argv [ 4 ]		3268747	0					
ANR	3269177	ArrayIndexing	result -> argv [ 4 ]		3268747	0					
ANR	3269178	PtrMemberAccess	result -> argv		3268747	0					
ANR	3269179	Identifier	result		3268747	0					
ANR	3269180	Identifier	argv		3268747	1					
ANR	3269181	PrimaryExpression	4		3268747	1					
ANR	3269182	ExpressionStatement	rc = 0	5593:3:150284:150290	3268747	4	True				
ANR	3269183	AssignmentExpression	rc = 0		3268747	0		=			
ANR	3269184	Identifier	rc		3268747	0					
ANR	3269185	PrimaryExpression	0		3268747	1					
ANR	3269186	ElseStatement	else		3268747	0					
ANR	3269187	CompoundStatement		68:9:1954:1954	3268747	0					
ANR	3269188	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	5595:3:150306:150340	3268747	0	True				
ANR	3269189	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3268747	0					
ANR	3269190	Callee	EXCEPT		3268747	0					
ANR	3269191	Identifier	EXCEPT		3268747	0					
ANR	3269192	ArgumentList	"""Bad %s result"""		3268747	1					
ANR	3269193	Argument	"""Bad %s result"""		3268747	0					
ANR	3269194	PrimaryExpression	"""Bad %s result"""		3268747	0					
ANR	3269195	Argument	command		3268747	1					
ANR	3269196	Identifier	command		3268747	0					
ANR	3269197	Statement	delete	5598:2:150351:150356	3268747	2	True				
ANR	3269198	ExpressionStatement	result	5598:9:150358:150364	3268747	3	True				
ANR	3269199	Identifier	result		3268747	0					
ANR	3269200	ReturnStatement	return rc ;	5599:2:150368:150377	3268747	4	True				
ANR	3269201	Identifier	rc		3268747	0					
ANR	3269202	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3268747	22					
ANR	3269203	Condition	"check_pending_timeout ( command , buf )"	5603:6:150434:150467	3268747	0	True				
ANR	3269204	CallExpression	"check_pending_timeout ( command , buf )"		3268747	0					
ANR	3269205	Callee	check_pending_timeout		3268747	0					
ANR	3269206	Identifier	check_pending_timeout		3268747	0					
ANR	3269207	ArgumentList	command		3268747	1					
ANR	3269208	Argument	command		3268747	0					
ANR	3269209	Identifier	command		3268747	0					
ANR	3269210	Argument	buf		3268747	1					
ANR	3269211	Identifier	buf		3268747	0					
ANR	3269212	CompoundStatement		77:43:2124:2124	3268747	1					
ANR	3269213	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5605:2:150507:150555	3268747	0	True				
ANR	3269214	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3268747	0					
ANR	3269215	Callee	sprintf		3268747	0					
ANR	3269216	Identifier	sprintf		3268747	0					
ANR	3269217	ArgumentList	error_string		3268747	1					
ANR	3269218	Argument	error_string		3268747	0					
ANR	3269219	Identifier	error_string		3268747	0					
ANR	3269220	Argument	"""%s timed out"""		3268747	1					
ANR	3269221	PrimaryExpression	"""%s timed out"""		3268747	0					
ANR	3269222	Argument	command		3268747	2					
ANR	3269223	Identifier	command		3268747	0					
ANR	3269224	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5606:2:150559:150594	3268747	1	True				
ANR	3269225	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3268747	0					
ANR	3269226	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5610:1:150654:150687	3268747	23	True				
ANR	3269227	Identifier	GAHPCLIENT_COMMAND_PENDING		3268747	0					
ANR	3269228	ReturnType	int		3268747	1					
ANR	3269229	Identifier	GahpClient :: cream_job_register		3268747	2					
ANR	3269230	ParameterList	"const char * service , const char * delg_id , const char * jdl , const char * lease_id , char * * job_id , char * * upload_url , char * * download_url"		3268747	3					
ANR	3269231	Parameter	const char * service	5525:31:148199:148217	3268747	0	True				
ANR	3269232	ParameterType	const char *		3268747	0					
ANR	3269233	Identifier	service		3268747	1					
ANR	3269234	Parameter	const char * delg_id	5525:52:148220:148238	3268747	1	True				
ANR	3269235	ParameterType	const char *		3268747	0					
ANR	3269236	Identifier	delg_id		3268747	1					
ANR	3269237	Parameter	const char * jdl	5526:10:148252:148266	3268747	2	True				
ANR	3269238	ParameterType	const char *		3268747	0					
ANR	3269239	Identifier	jdl		3268747	1					
ANR	3269240	Parameter	const char * lease_id	5526:27:148269:148288	3268747	3	True				
ANR	3269241	ParameterType	const char *		3268747	0					
ANR	3269242	Identifier	lease_id		3268747	1					
ANR	3269243	Parameter	char * * job_id	5526:49:148291:148303	3268747	4	True				
ANR	3269244	ParameterType	char * *		3268747	0					
ANR	3269245	Identifier	job_id		3268747	1					
ANR	3269246	Parameter	char * * upload_url	5526:64:148306:148322	3268747	5	True				
ANR	3269247	ParameterType	char * *		3268747	0					
ANR	3269248	Identifier	upload_url		3268747	1					
ANR	3269249	Parameter	char * * download_url	5526:83:148325:148343	3268747	6	True				
ANR	3269250	ParameterType	char * *		3268747	0					
ANR	3269251	Identifier	download_url		3268747	1					
ANR	3269252	CFGEntryNode	ENTRY		3268747		True				
ANR	3269253	CFGExitNode	EXIT		3268747		True				
ANR	3269254	Symbol	server -> m_commands_supported		3268747						
ANR	3269255	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3268747						
ANR	3269256	Symbol	* download_url		3268747						
ANR	3269257	Symbol	sprintf		3268747						
ANR	3269258	Symbol	delg_id		3268747						
ANR	3269259	Symbol	server -> m_commands_supported -> contains_anycase		3268747						
ANR	3269260	Symbol	GAHPCLIENT_COMMAND_PENDING		3268747						
ANR	3269261	Symbol	download_url		3268747						
ANR	3269262	Symbol	strcasecmp		3268747						
ANR	3269263	Symbol	strcmp		3268747						
ANR	3269264	Symbol	* upload_url		3268747						
ANR	3269265	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3268747						
ANR	3269266	Symbol	* * result		3268747						
ANR	3269267	Symbol	get_pending_result		3268747						
ANR	3269268	Symbol	rc		3268747						
ANR	3269269	Symbol	upload_url		3268747						
ANR	3269270	Symbol	is_pending		3268747						
ANR	3269271	Symbol	deleg_proxy		3268747						
ANR	3269272	Symbol	server		3268747						
ANR	3269273	Symbol	escapeGahpString		3268747						
ANR	3269274	Symbol	* server		3268747						
ANR	3269275	Symbol	reqline . c_str		3268747						
ANR	3269276	Symbol	results_only		3268747						
ANR	3269277	Symbol	result -> argv		3268747						
ANR	3269278	Symbol	* server -> m_commands_supported		3268747						
ANR	3269279	Symbol	result		3268747						
ANR	3269280	Symbol	* result		3268747						
ANR	3269281	Symbol	reqline		3268747						
ANR	3269282	Symbol	m_mode		3268747						
ANR	3269283	Symbol	* result -> argv		3268747						
ANR	3269284	Symbol	low_prio		3268747						
ANR	3269285	Symbol	NULLSTRING		3268747						
ANR	3269286	Symbol	command		3268747						
ANR	3269287	Symbol	esc4		3268747						
ANR	3269288	Symbol	esc3		3268747						
ANR	3269289	Symbol	error_string		3268747						
ANR	3269290	Symbol	esc2		3268747						
ANR	3269291	Symbol	buf		3268747						
ANR	3269292	Symbol	jdl		3268747						
ANR	3269293	Symbol	esc1		3268747						
ANR	3269294	Symbol	service		3268747						
ANR	3269295	Symbol	job_id		3268747						
ANR	3269296	Symbol	* job_id		3268747						
ANR	3269297	Symbol	x		3268747						
ANR	3269298	Symbol	result -> argc		3268747						
ANR	3269299	Symbol	* * server		3268747						
ANR	3269300	Symbol	FALSE		3268747						
ANR	3269301	Symbol	strdup		3268747						
ANR	3269302	Symbol	check_pending_timeout		3268747						
ANR	3269303	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3268747						
ANR	3269304	Symbol	lease_id		3268747						
ANR	3269305	Function	GahpClient :: cream_job_start	5613:0:150692:152438							
ANR	3269306	FunctionDef	"GahpClient :: cream_job_start (const char * service , const char * job_id)"		3269305	0					
ANR	3269307	CompoundStatement		5615:0:150766:152438	3269305	0					
ANR	3269308	Statement	static	5616:1:150769:150774	3269305	0	True				
ANR	3269309	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_START"" ;"	5616:8:150776:150815	3269305	1	True				
ANR	3269310	IdentifierDecl	"* command = ""CREAM_JOB_START"""		3269305	0					
ANR	3269311	IdentifierDeclType	const char *		3269305	0					
ANR	3269312	Identifier	command		3269305	1					
ANR	3269313	AssignmentExpression	"* command = ""CREAM_JOB_START"""		3269305	2		=			
ANR	3269314	Identifier	command		3269305	0					
ANR	3269315	PrimaryExpression	"""CREAM_JOB_START"""		3269305	1					
ANR	3269316	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3269305	2					
ANR	3269317	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5619:6:150864:150925	3269305	0	True				
ANR	3269318	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3269305	0		==			
ANR	3269319	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3269305	0					
ANR	3269320	Callee	server -> m_commands_supported -> contains_anycase		3269305	0					
ANR	3269321	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3269305	0					
ANR	3269322	PtrMemberAccess	server -> m_commands_supported		3269305	0					
ANR	3269323	Identifier	server		3269305	0					
ANR	3269324	Identifier	m_commands_supported		3269305	1					
ANR	3269325	Identifier	contains_anycase		3269305	1					
ANR	3269326	ArgumentList	command		3269305	1					
ANR	3269327	Argument	command		3269305	0					
ANR	3269328	Identifier	command		3269305	0					
ANR	3269329	Identifier	FALSE		3269305	1					
ANR	3269330	CompoundStatement		5:70:161:161	3269305	1					
ANR	3269331	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5620:2:150932:150971	3269305	0	True				
ANR	3269332	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3269305	0					
ANR	3269333	IfStatement	if ( ! service )		3269305	3					
ANR	3269334	Condition	! service	5624:5:151009:151016	3269305	0	True				
ANR	3269335	UnaryOperationExpression	! service		3269305	0					
ANR	3269336	UnaryOperator	!		3269305	0					
ANR	3269337	Identifier	service		3269305	1					
ANR	3269338	ExpressionStatement	service = NULLSTRING	5624:15:151019:151037	3269305	1	True				
ANR	3269339	AssignmentExpression	service = NULLSTRING		3269305	0		=			
ANR	3269340	Identifier	service		3269305	0					
ANR	3269341	Identifier	NULLSTRING		3269305	1					
ANR	3269342	IfStatement	if ( ! job_id )		3269305	4					
ANR	3269343	Condition	! job_id	5625:5:151044:151050	3269305	0	True				
ANR	3269344	UnaryOperationExpression	! job_id		3269305	0					
ANR	3269345	UnaryOperator	!		3269305	0					
ANR	3269346	Identifier	job_id		3269305	1					
ANR	3269347	ExpressionStatement	job_id = NULLSTRING	5625:14:151053:151070	3269305	1	True				
ANR	3269348	AssignmentExpression	job_id = NULLSTRING		3269305	0		=			
ANR	3269349	Identifier	job_id		3269305	0					
ANR	3269350	Identifier	NULLSTRING		3269305	1					
ANR	3269351	IdentifierDeclStatement	std :: string reqline ;	5626:1:151073:151092	3269305	5	True				
ANR	3269352	IdentifierDecl	reqline		3269305	0					
ANR	3269353	IdentifierDeclType	std :: string		3269305	0					
ANR	3269354	Identifier	reqline		3269305	1					
ANR	3269355	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	5627:1:151095:151143	3269305	6	True				
ANR	3269356	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3269305	0					
ANR	3269357	IdentifierDeclType	char *		3269305	0					
ANR	3269358	Identifier	esc1		3269305	1					
ANR	3269359	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3269305	2		=			
ANR	3269360	Identifier	esc1		3269305	0					
ANR	3269361	CallExpression	strdup ( escapeGahpString ( service ) )		3269305	1					
ANR	3269362	Callee	strdup		3269305	0					
ANR	3269363	Identifier	strdup		3269305	0					
ANR	3269364	ArgumentList	escapeGahpString ( service )		3269305	1					
ANR	3269365	Argument	escapeGahpString ( service )		3269305	0					
ANR	3269366	CallExpression	escapeGahpString ( service )		3269305	0					
ANR	3269367	Callee	escapeGahpString		3269305	0					
ANR	3269368	Identifier	escapeGahpString		3269305	0					
ANR	3269369	ArgumentList	service		3269305	1					
ANR	3269370	Argument	service		3269305	0					
ANR	3269371	Identifier	service		3269305	0					
ANR	3269372	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	5628:1:151146:151193	3269305	7	True				
ANR	3269373	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3269305	0					
ANR	3269374	IdentifierDeclType	char *		3269305	0					
ANR	3269375	Identifier	esc2		3269305	1					
ANR	3269376	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3269305	2		=			
ANR	3269377	Identifier	esc2		3269305	0					
ANR	3269378	CallExpression	strdup ( escapeGahpString ( job_id ) )		3269305	1					
ANR	3269379	Callee	strdup		3269305	0					
ANR	3269380	Identifier	strdup		3269305	0					
ANR	3269381	ArgumentList	escapeGahpString ( job_id )		3269305	1					
ANR	3269382	Argument	escapeGahpString ( job_id )		3269305	0					
ANR	3269383	CallExpression	escapeGahpString ( job_id )		3269305	0					
ANR	3269384	Callee	escapeGahpString		3269305	0					
ANR	3269385	Identifier	escapeGahpString		3269305	0					
ANR	3269386	ArgumentList	job_id		3269305	1					
ANR	3269387	Argument	job_id		3269305	0					
ANR	3269388	Identifier	job_id		3269305	0					
ANR	3269389	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s 1 %s"" , esc1 , esc2 ) ;"	5630:1:151220:151267	3269305	8	True				
ANR	3269390	IdentifierDecl	"x = sprintf ( reqline , ""%s 1 %s"" , esc1 , esc2 )"		3269305	0					
ANR	3269391	IdentifierDeclType	int		3269305	0					
ANR	3269392	Identifier	x		3269305	1					
ANR	3269393	AssignmentExpression	"x = sprintf ( reqline , ""%s 1 %s"" , esc1 , esc2 )"		3269305	2		=			
ANR	3269394	Identifier	x		3269305	0					
ANR	3269395	CallExpression	"sprintf ( reqline , ""%s 1 %s"" , esc1 , esc2 )"		3269305	1					
ANR	3269396	Callee	sprintf		3269305	0					
ANR	3269397	Identifier	sprintf		3269305	0					
ANR	3269398	ArgumentList	reqline		3269305	1					
ANR	3269399	Argument	reqline		3269305	0					
ANR	3269400	Identifier	reqline		3269305	0					
ANR	3269401	Argument	"""%s 1 %s"""		3269305	1					
ANR	3269402	PrimaryExpression	"""%s 1 %s"""		3269305	0					
ANR	3269403	Argument	esc1		3269305	2					
ANR	3269404	Identifier	esc1		3269305	0					
ANR	3269405	Argument	esc2		3269305	3					
ANR	3269406	Identifier	esc2		3269305	0					
ANR	3269407	ExpressionStatement	free ( esc1 )	5631:1:151270:151282	3269305	9	True				
ANR	3269408	CallExpression	free ( esc1 )		3269305	0					
ANR	3269409	Callee	free		3269305	0					
ANR	3269410	Identifier	free		3269305	0					
ANR	3269411	ArgumentList	esc1		3269305	1					
ANR	3269412	Argument	esc1		3269305	0					
ANR	3269413	Identifier	esc1		3269305	0					
ANR	3269414	ExpressionStatement	free ( esc2 )	5632:1:151285:151297	3269305	10	True				
ANR	3269415	CallExpression	free ( esc2 )		3269305	0					
ANR	3269416	Callee	free		3269305	0					
ANR	3269417	Identifier	free		3269305	0					
ANR	3269418	ArgumentList	esc2		3269305	1					
ANR	3269419	Argument	esc2		3269305	0					
ANR	3269420	Identifier	esc2		3269305	0					
ANR	3269421	ExpressionStatement	ASSERT ( x > 0 )	5633:1:151300:151315	3269305	11	True				
ANR	3269422	CallExpression	ASSERT ( x > 0 )		3269305	0					
ANR	3269423	Callee	ASSERT		3269305	0					
ANR	3269424	Identifier	ASSERT		3269305	0					
ANR	3269425	ArgumentList	x > 0		3269305	1					
ANR	3269426	Argument	x > 0		3269305	0					
ANR	3269427	RelationalExpression	x > 0		3269305	0		>			
ANR	3269428	Identifier	x		3269305	0					
ANR	3269429	PrimaryExpression	0		3269305	1					
ANR	3269430	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5634:1:151318:151351	3269305	12	True				
ANR	3269431	IdentifierDecl	* buf = reqline . c_str ( )		3269305	0					
ANR	3269432	IdentifierDeclType	const char *		3269305	0					
ANR	3269433	Identifier	buf		3269305	1					
ANR	3269434	AssignmentExpression	* buf = reqline . c_str ( )		3269305	2		=			
ANR	3269435	Identifier	buf		3269305	0					
ANR	3269436	CallExpression	reqline . c_str ( )		3269305	1					
ANR	3269437	Callee	reqline . c_str		3269305	0					
ANR	3269438	MemberAccess	reqline . c_str		3269305	0					
ANR	3269439	Identifier	reqline		3269305	0					
ANR	3269440	Identifier	c_str		3269305	1					
ANR	3269441	ArgumentList			3269305	1					
ANR	3269442	IfStatement	"if ( ! is_pending ( command , buf ) )"		3269305	13					
ANR	3269443	Condition	"! is_pending ( command , buf )"	5638:6:151453:151476	3269305	0	True				
ANR	3269444	UnaryOperationExpression	"! is_pending ( command , buf )"		3269305	0					
ANR	3269445	UnaryOperator	!		3269305	0					
ANR	3269446	CallExpression	"is_pending ( command , buf )"		3269305	1					
ANR	3269447	Callee	is_pending		3269305	0					
ANR	3269448	Identifier	is_pending		3269305	0					
ANR	3269449	ArgumentList	command		3269305	1					
ANR	3269450	Argument	command		3269305	0					
ANR	3269451	Identifier	command		3269305	0					
ANR	3269452	Argument	buf		3269305	1					
ANR	3269453	Identifier	buf		3269305	0					
ANR	3269454	CompoundStatement		24:33:713:713	3269305	1					
ANR	3269455	IfStatement	if ( m_mode == results_only )		3269305	0					
ANR	3269456	Condition	m_mode == results_only	5641:7:151585:151606	3269305	0	True				
ANR	3269457	EqualityExpression	m_mode == results_only		3269305	0		==			
ANR	3269458	Identifier	m_mode		3269305	0					
ANR	3269459	Identifier	results_only		3269305	1					
ANR	3269460	CompoundStatement		27:32:843:843	3269305	1					
ANR	3269461	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5642:3:151615:151654	3269305	0	True				
ANR	3269462	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3269305	0					
ANR	3269463	ExpressionStatement	"now_pending ( command , buf , deleg_proxy , medium_prio )"	5644:2:151662:151710	3269305	1	True				
ANR	3269464	CallExpression	"now_pending ( command , buf , deleg_proxy , medium_prio )"		3269305	0					
ANR	3269465	Callee	now_pending		3269305	0					
ANR	3269466	Identifier	now_pending		3269305	0					
ANR	3269467	ArgumentList	command		3269305	1					
ANR	3269468	Argument	command		3269305	0					
ANR	3269469	Identifier	command		3269305	0					
ANR	3269470	Argument	buf		3269305	1					
ANR	3269471	Identifier	buf		3269305	0					
ANR	3269472	Argument	deleg_proxy		3269305	2					
ANR	3269473	Identifier	deleg_proxy		3269305	0					
ANR	3269474	Argument	medium_prio		3269305	3					
ANR	3269475	Identifier	medium_prio		3269305	0					
ANR	3269476	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5650:1:151804:151855	3269305	14	True				
ANR	3269477	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3269305	0					
ANR	3269478	IdentifierDeclType	Gahp_Args *		3269305	0					
ANR	3269479	Identifier	result		3269305	1					
ANR	3269480	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3269305	2		=			
ANR	3269481	Identifier	result		3269305	0					
ANR	3269482	CallExpression	"get_pending_result ( command , buf )"		3269305	1					
ANR	3269483	Callee	get_pending_result		3269305	0					
ANR	3269484	Identifier	get_pending_result		3269305	0					
ANR	3269485	ArgumentList	command		3269305	1					
ANR	3269486	Argument	command		3269305	0					
ANR	3269487	Identifier	command		3269305	0					
ANR	3269488	Argument	buf		3269305	1					
ANR	3269489	Identifier	buf		3269305	0					
ANR	3269490	IfStatement	if ( result )		3269305	15					
ANR	3269491	Condition	result	5651:6:151863:151868	3269305	0	True				
ANR	3269492	Identifier	result		3269305	0					
ANR	3269493	CompoundStatement		42:2:1200:1206	3269305	1					
ANR	3269494	IfStatement	if ( result -> argc != 2 )		3269305	0					
ANR	3269495	Condition	result -> argc != 2	5653:6:151904:151920	3269305	0	True				
ANR	3269496	EqualityExpression	result -> argc != 2		3269305	0		!=			
ANR	3269497	PtrMemberAccess	result -> argc		3269305	0					
ANR	3269498	Identifier	result		3269305	0					
ANR	3269499	Identifier	argc		3269305	1					
ANR	3269500	PrimaryExpression	2		3269305	1					
ANR	3269501	CompoundStatement		39:25:1156:1156	3269305	1					
ANR	3269502	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5654:3:151928:151959	3269305	0	True				
ANR	3269503	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3269305	0					
ANR	3269504	Callee	EXCEPT		3269305	0					
ANR	3269505	Identifier	EXCEPT		3269305	0					
ANR	3269506	ArgumentList	"""Bad %s Result"""		3269305	1					
ANR	3269507	Argument	"""Bad %s Result"""		3269305	0					
ANR	3269508	PrimaryExpression	"""Bad %s Result"""		3269305	0					
ANR	3269509	Argument	command		3269305	1					
ANR	3269510	Identifier	command		3269305	0					
ANR	3269511	IdentifierDeclStatement	int rc ;	5656:2:151967:151973	3269305	1	True				
ANR	3269512	IdentifierDecl	rc		3269305	0					
ANR	3269513	IdentifierDeclType	int		3269305	0					
ANR	3269514	Identifier	rc		3269305	1					
ANR	3269515	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3269305	2					
ANR	3269516	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	5657:6:151981:152020	3269305	0	True				
ANR	3269517	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3269305	0		==			
ANR	3269518	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3269305	0					
ANR	3269519	Callee	strcmp		3269305	0					
ANR	3269520	Identifier	strcmp		3269305	0					
ANR	3269521	ArgumentList	result -> argv [ 1 ]		3269305	1					
ANR	3269522	Argument	result -> argv [ 1 ]		3269305	0					
ANR	3269523	ArrayIndexing	result -> argv [ 1 ]		3269305	0					
ANR	3269524	PtrMemberAccess	result -> argv		3269305	0					
ANR	3269525	Identifier	result		3269305	0					
ANR	3269526	Identifier	argv		3269305	1					
ANR	3269527	PrimaryExpression	1		3269305	1					
ANR	3269528	Argument	NULLSTRING		3269305	1					
ANR	3269529	Identifier	NULLSTRING		3269305	0					
ANR	3269530	PrimaryExpression	0		3269305	1					
ANR	3269531	CompoundStatement		43:48:1256:1256	3269305	1					
ANR	3269532	ExpressionStatement	rc = 0	5658:3:152028:152034	3269305	0	True				
ANR	3269533	AssignmentExpression	rc = 0		3269305	0		=			
ANR	3269534	Identifier	rc		3269305	0					
ANR	3269535	PrimaryExpression	0		3269305	1					
ANR	3269536	ElseStatement	else		3269305	0					
ANR	3269537	CompoundStatement		45:9:1278:1278	3269305	0					
ANR	3269538	ExpressionStatement	rc = 1	5660:3:152050:152056	3269305	0	True				
ANR	3269539	AssignmentExpression	rc = 1		3269305	0		=			
ANR	3269540	Identifier	rc		3269305	0					
ANR	3269541	PrimaryExpression	1		3269305	1					
ANR	3269542	ExpressionStatement	error_string = result -> argv [ 1 ]	5661:3:152061:152091	3269305	1	True				
ANR	3269543	AssignmentExpression	error_string = result -> argv [ 1 ]		3269305	0		=			
ANR	3269544	Identifier	error_string		3269305	0					
ANR	3269545	ArrayIndexing	result -> argv [ 1 ]		3269305	1					
ANR	3269546	PtrMemberAccess	result -> argv		3269305	0					
ANR	3269547	Identifier	result		3269305	0					
ANR	3269548	Identifier	argv		3269305	1					
ANR	3269549	PrimaryExpression	1		3269305	1					
ANR	3269550	Statement	delete	5664:2:152100:152105	3269305	3	True				
ANR	3269551	ExpressionStatement	result	5664:9:152107:152113	3269305	4	True				
ANR	3269552	Identifier	result		3269305	0					
ANR	3269553	ReturnStatement	return rc ;	5665:2:152117:152126	3269305	5	True				
ANR	3269554	Identifier	rc		3269305	0					
ANR	3269555	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3269305	16					
ANR	3269556	Condition	"check_pending_timeout ( command , buf )"	5669:6:152183:152216	3269305	0	True				
ANR	3269557	CallExpression	"check_pending_timeout ( command , buf )"		3269305	0					
ANR	3269558	Callee	check_pending_timeout		3269305	0					
ANR	3269559	Identifier	check_pending_timeout		3269305	0					
ANR	3269560	ArgumentList	command		3269305	1					
ANR	3269561	Argument	command		3269305	0					
ANR	3269562	Identifier	command		3269305	0					
ANR	3269563	Argument	buf		3269305	1					
ANR	3269564	Identifier	buf		3269305	0					
ANR	3269565	CompoundStatement		55:43:1453:1453	3269305	1					
ANR	3269566	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5671:2:152256:152304	3269305	0	True				
ANR	3269567	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3269305	0					
ANR	3269568	Callee	sprintf		3269305	0					
ANR	3269569	Identifier	sprintf		3269305	0					
ANR	3269570	ArgumentList	error_string		3269305	1					
ANR	3269571	Argument	error_string		3269305	0					
ANR	3269572	Identifier	error_string		3269305	0					
ANR	3269573	Argument	"""%s timed out"""		3269305	1					
ANR	3269574	PrimaryExpression	"""%s timed out"""		3269305	0					
ANR	3269575	Argument	command		3269305	2					
ANR	3269576	Identifier	command		3269305	0					
ANR	3269577	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5672:2:152308:152343	3269305	1	True				
ANR	3269578	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3269305	0					
ANR	3269579	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5676:1:152403:152436	3269305	17	True				
ANR	3269580	Identifier	GAHPCLIENT_COMMAND_PENDING		3269305	0					
ANR	3269581	ReturnType	int		3269305	1					
ANR	3269582	Identifier	GahpClient :: cream_job_start		3269305	2					
ANR	3269583	ParameterList	"const char * service , const char * job_id"		3269305	3					
ANR	3269584	Parameter	const char * service	5614:28:150725:150743	3269305	0	True				
ANR	3269585	ParameterType	const char *		3269305	0					
ANR	3269586	Identifier	service		3269305	1					
ANR	3269587	Parameter	const char * job_id	5614:49:150746:150763	3269305	1	True				
ANR	3269588	ParameterType	const char *		3269305	0					
ANR	3269589	Identifier	job_id		3269305	1					
ANR	3269590	CFGEntryNode	ENTRY		3269305		True				
ANR	3269591	CFGExitNode	EXIT		3269305		True				
ANR	3269592	Symbol	server		3269305						
ANR	3269593	Symbol	server -> m_commands_supported		3269305						
ANR	3269594	Symbol	escapeGahpString		3269305						
ANR	3269595	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3269305						
ANR	3269596	Symbol	* server		3269305						
ANR	3269597	Symbol	reqline . c_str		3269305						
ANR	3269598	Symbol	results_only		3269305						
ANR	3269599	Symbol	result -> argv		3269305						
ANR	3269600	Symbol	* server -> m_commands_supported		3269305						
ANR	3269601	Symbol	sprintf		3269305						
ANR	3269602	Symbol	result		3269305						
ANR	3269603	Symbol	* result		3269305						
ANR	3269604	Symbol	server -> m_commands_supported -> contains_anycase		3269305						
ANR	3269605	Symbol	GAHPCLIENT_COMMAND_PENDING		3269305						
ANR	3269606	Symbol	reqline		3269305						
ANR	3269607	Symbol	m_mode		3269305						
ANR	3269608	Symbol	* result -> argv		3269305						
ANR	3269609	Symbol	strcmp		3269305						
ANR	3269610	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3269305						
ANR	3269611	Symbol	* * result		3269305						
ANR	3269612	Symbol	medium_prio		3269305						
ANR	3269613	Symbol	NULLSTRING		3269305						
ANR	3269614	Symbol	command		3269305						
ANR	3269615	Symbol	get_pending_result		3269305						
ANR	3269616	Symbol	rc		3269305						
ANR	3269617	Symbol	error_string		3269305						
ANR	3269618	Symbol	esc2		3269305						
ANR	3269619	Symbol	buf		3269305						
ANR	3269620	Symbol	esc1		3269305						
ANR	3269621	Symbol	service		3269305						
ANR	3269622	Symbol	job_id		3269305						
ANR	3269623	Symbol	x		3269305						
ANR	3269624	Symbol	result -> argc		3269305						
ANR	3269625	Symbol	FALSE		3269305						
ANR	3269626	Symbol	* * server		3269305						
ANR	3269627	Symbol	strdup		3269305						
ANR	3269628	Symbol	check_pending_timeout		3269305						
ANR	3269629	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3269305						
ANR	3269630	Symbol	is_pending		3269305						
ANR	3269631	Symbol	deleg_proxy		3269305						
ANR	3269632	Function	GahpClient :: cream_job_purge	5679:0:152441:154225							
ANR	3269633	FunctionDef	"GahpClient :: cream_job_purge (const char * service , const char * job_id)"		3269632	0					
ANR	3269634	CompoundStatement		5681:0:152514:154225	3269632	0					
ANR	3269635	Statement	static	5682:1:152517:152522	3269632	0	True				
ANR	3269636	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_PURGE"" ;"	5682:8:152524:152563	3269632	1	True				
ANR	3269637	IdentifierDecl	"* command = ""CREAM_JOB_PURGE"""		3269632	0					
ANR	3269638	IdentifierDeclType	const char *		3269632	0					
ANR	3269639	Identifier	command		3269632	1					
ANR	3269640	AssignmentExpression	"* command = ""CREAM_JOB_PURGE"""		3269632	2		=			
ANR	3269641	Identifier	command		3269632	0					
ANR	3269642	PrimaryExpression	"""CREAM_JOB_PURGE"""		3269632	1					
ANR	3269643	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3269632	2					
ANR	3269644	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5685:6:152612:152673	3269632	0	True				
ANR	3269645	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3269632	0		==			
ANR	3269646	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3269632	0					
ANR	3269647	Callee	server -> m_commands_supported -> contains_anycase		3269632	0					
ANR	3269648	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3269632	0					
ANR	3269649	PtrMemberAccess	server -> m_commands_supported		3269632	0					
ANR	3269650	Identifier	server		3269632	0					
ANR	3269651	Identifier	m_commands_supported		3269632	1					
ANR	3269652	Identifier	contains_anycase		3269632	1					
ANR	3269653	ArgumentList	command		3269632	1					
ANR	3269654	Argument	command		3269632	0					
ANR	3269655	Identifier	command		3269632	0					
ANR	3269656	Identifier	FALSE		3269632	1					
ANR	3269657	CompoundStatement		5:70:161:161	3269632	1					
ANR	3269658	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5686:2:152680:152719	3269632	0	True				
ANR	3269659	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3269632	0					
ANR	3269660	IfStatement	if ( ! service )		3269632	3					
ANR	3269661	Condition	! service	5690:5:152757:152764	3269632	0	True				
ANR	3269662	UnaryOperationExpression	! service		3269632	0					
ANR	3269663	UnaryOperator	!		3269632	0					
ANR	3269664	Identifier	service		3269632	1					
ANR	3269665	ExpressionStatement	service = NULLSTRING	5690:15:152767:152785	3269632	1	True				
ANR	3269666	AssignmentExpression	service = NULLSTRING		3269632	0		=			
ANR	3269667	Identifier	service		3269632	0					
ANR	3269668	Identifier	NULLSTRING		3269632	1					
ANR	3269669	IfStatement	if ( ! job_id )		3269632	4					
ANR	3269670	Condition	! job_id	5691:5:152792:152798	3269632	0	True				
ANR	3269671	UnaryOperationExpression	! job_id		3269632	0					
ANR	3269672	UnaryOperator	!		3269632	0					
ANR	3269673	Identifier	job_id		3269632	1					
ANR	3269674	ExpressionStatement	job_id = NULLSTRING	5691:14:152801:152818	3269632	1	True				
ANR	3269675	AssignmentExpression	job_id = NULLSTRING		3269632	0		=			
ANR	3269676	Identifier	job_id		3269632	0					
ANR	3269677	Identifier	NULLSTRING		3269632	1					
ANR	3269678	IdentifierDeclStatement	std :: string reqline ;	5692:1:152821:152840	3269632	5	True				
ANR	3269679	IdentifierDecl	reqline		3269632	0					
ANR	3269680	IdentifierDeclType	std :: string		3269632	0					
ANR	3269681	Identifier	reqline		3269632	1					
ANR	3269682	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	5693:1:152843:152891	3269632	6	True				
ANR	3269683	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3269632	0					
ANR	3269684	IdentifierDeclType	char *		3269632	0					
ANR	3269685	Identifier	esc1		3269632	1					
ANR	3269686	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3269632	2		=			
ANR	3269687	Identifier	esc1		3269632	0					
ANR	3269688	CallExpression	strdup ( escapeGahpString ( service ) )		3269632	1					
ANR	3269689	Callee	strdup		3269632	0					
ANR	3269690	Identifier	strdup		3269632	0					
ANR	3269691	ArgumentList	escapeGahpString ( service )		3269632	1					
ANR	3269692	Argument	escapeGahpString ( service )		3269632	0					
ANR	3269693	CallExpression	escapeGahpString ( service )		3269632	0					
ANR	3269694	Callee	escapeGahpString		3269632	0					
ANR	3269695	Identifier	escapeGahpString		3269632	0					
ANR	3269696	ArgumentList	service		3269632	1					
ANR	3269697	Argument	service		3269632	0					
ANR	3269698	Identifier	service		3269632	0					
ANR	3269699	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	5694:1:152894:152941	3269632	7	True				
ANR	3269700	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3269632	0					
ANR	3269701	IdentifierDeclType	char *		3269632	0					
ANR	3269702	Identifier	esc2		3269632	1					
ANR	3269703	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3269632	2		=			
ANR	3269704	Identifier	esc2		3269632	0					
ANR	3269705	CallExpression	strdup ( escapeGahpString ( job_id ) )		3269632	1					
ANR	3269706	Callee	strdup		3269632	0					
ANR	3269707	Identifier	strdup		3269632	0					
ANR	3269708	ArgumentList	escapeGahpString ( job_id )		3269632	1					
ANR	3269709	Argument	escapeGahpString ( job_id )		3269632	0					
ANR	3269710	CallExpression	escapeGahpString ( job_id )		3269632	0					
ANR	3269711	Callee	escapeGahpString		3269632	0					
ANR	3269712	Identifier	escapeGahpString		3269632	0					
ANR	3269713	ArgumentList	job_id		3269632	1					
ANR	3269714	Argument	job_id		3269632	0					
ANR	3269715	Identifier	job_id		3269632	0					
ANR	3269716	IdentifierDeclStatement	int job_number = 1 ;	5695:1:152944:152962	3269632	8	True				
ANR	3269717	IdentifierDecl	job_number = 1		3269632	0					
ANR	3269718	IdentifierDeclType	int		3269632	0					
ANR	3269719	Identifier	job_number		3269632	1					
ANR	3269720	AssignmentExpression	job_number = 1		3269632	2		=			
ANR	3269721	Identifier	job_number		3269632	0					
ANR	3269722	PrimaryExpression	1		3269632	1					
ANR	3269723	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 ) ;"	5696:1:152994:153054	3269632	9	True				
ANR	3269724	IdentifierDecl	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3269632	0					
ANR	3269725	IdentifierDeclType	int		3269632	0					
ANR	3269726	Identifier	x		3269632	1					
ANR	3269727	AssignmentExpression	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3269632	2		=			
ANR	3269728	Identifier	x		3269632	0					
ANR	3269729	CallExpression	"sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3269632	1					
ANR	3269730	Callee	sprintf		3269632	0					
ANR	3269731	Identifier	sprintf		3269632	0					
ANR	3269732	ArgumentList	reqline		3269632	1					
ANR	3269733	Argument	reqline		3269632	0					
ANR	3269734	Identifier	reqline		3269632	0					
ANR	3269735	Argument	"""%s %d %s"""		3269632	1					
ANR	3269736	PrimaryExpression	"""%s %d %s"""		3269632	0					
ANR	3269737	Argument	esc1		3269632	2					
ANR	3269738	Identifier	esc1		3269632	0					
ANR	3269739	Argument	job_number		3269632	3					
ANR	3269740	Identifier	job_number		3269632	0					
ANR	3269741	Argument	esc2		3269632	4					
ANR	3269742	Identifier	esc2		3269632	0					
ANR	3269743	ExpressionStatement	free ( esc1 )	5697:1:153057:153069	3269632	10	True				
ANR	3269744	CallExpression	free ( esc1 )		3269632	0					
ANR	3269745	Callee	free		3269632	0					
ANR	3269746	Identifier	free		3269632	0					
ANR	3269747	ArgumentList	esc1		3269632	1					
ANR	3269748	Argument	esc1		3269632	0					
ANR	3269749	Identifier	esc1		3269632	0					
ANR	3269750	ExpressionStatement	free ( esc2 )	5698:1:153072:153084	3269632	11	True				
ANR	3269751	CallExpression	free ( esc2 )		3269632	0					
ANR	3269752	Callee	free		3269632	0					
ANR	3269753	Identifier	free		3269632	0					
ANR	3269754	ArgumentList	esc2		3269632	1					
ANR	3269755	Argument	esc2		3269632	0					
ANR	3269756	Identifier	esc2		3269632	0					
ANR	3269757	ExpressionStatement	ASSERT ( x > 0 )	5699:1:153087:153102	3269632	12	True				
ANR	3269758	CallExpression	ASSERT ( x > 0 )		3269632	0					
ANR	3269759	Callee	ASSERT		3269632	0					
ANR	3269760	Identifier	ASSERT		3269632	0					
ANR	3269761	ArgumentList	x > 0		3269632	1					
ANR	3269762	Argument	x > 0		3269632	0					
ANR	3269763	RelationalExpression	x > 0		3269632	0		>			
ANR	3269764	Identifier	x		3269632	0					
ANR	3269765	PrimaryExpression	0		3269632	1					
ANR	3269766	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5700:1:153105:153138	3269632	13	True				
ANR	3269767	IdentifierDecl	* buf = reqline . c_str ( )		3269632	0					
ANR	3269768	IdentifierDeclType	const char *		3269632	0					
ANR	3269769	Identifier	buf		3269632	1					
ANR	3269770	AssignmentExpression	* buf = reqline . c_str ( )		3269632	2		=			
ANR	3269771	Identifier	buf		3269632	0					
ANR	3269772	CallExpression	reqline . c_str ( )		3269632	1					
ANR	3269773	Callee	reqline . c_str		3269632	0					
ANR	3269774	MemberAccess	reqline . c_str		3269632	0					
ANR	3269775	Identifier	reqline		3269632	0					
ANR	3269776	Identifier	c_str		3269632	1					
ANR	3269777	ArgumentList			3269632	1					
ANR	3269778	IfStatement	"if ( ! is_pending ( command , buf ) )"		3269632	14					
ANR	3269779	Condition	"! is_pending ( command , buf )"	5704:6:153239:153262	3269632	0	True				
ANR	3269780	UnaryOperationExpression	"! is_pending ( command , buf )"		3269632	0					
ANR	3269781	UnaryOperator	!		3269632	0					
ANR	3269782	CallExpression	"is_pending ( command , buf )"		3269632	1					
ANR	3269783	Callee	is_pending		3269632	0					
ANR	3269784	Identifier	is_pending		3269632	0					
ANR	3269785	ArgumentList	command		3269632	1					
ANR	3269786	Argument	command		3269632	0					
ANR	3269787	Identifier	command		3269632	0					
ANR	3269788	Argument	buf		3269632	1					
ANR	3269789	Identifier	buf		3269632	0					
ANR	3269790	CompoundStatement		24:33:751:751	3269632	1					
ANR	3269791	IfStatement	if ( m_mode == results_only )		3269632	0					
ANR	3269792	Condition	m_mode == results_only	5707:7:153371:153392	3269632	0	True				
ANR	3269793	EqualityExpression	m_mode == results_only		3269632	0		==			
ANR	3269794	Identifier	m_mode		3269632	0					
ANR	3269795	Identifier	results_only		3269632	1					
ANR	3269796	CompoundStatement		27:32:881:881	3269632	1					
ANR	3269797	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5708:3:153401:153440	3269632	0	True				
ANR	3269798	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3269632	0					
ANR	3269799	ExpressionStatement	"now_pending ( command , buf , normal_proxy , medium_prio )"	5710:2:153448:153497	3269632	1	True				
ANR	3269800	CallExpression	"now_pending ( command , buf , normal_proxy , medium_prio )"		3269632	0					
ANR	3269801	Callee	now_pending		3269632	0					
ANR	3269802	Identifier	now_pending		3269632	0					
ANR	3269803	ArgumentList	command		3269632	1					
ANR	3269804	Argument	command		3269632	0					
ANR	3269805	Identifier	command		3269632	0					
ANR	3269806	Argument	buf		3269632	1					
ANR	3269807	Identifier	buf		3269632	0					
ANR	3269808	Argument	normal_proxy		3269632	2					
ANR	3269809	Identifier	normal_proxy		3269632	0					
ANR	3269810	Argument	medium_prio		3269632	3					
ANR	3269811	Identifier	medium_prio		3269632	0					
ANR	3269812	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5716:1:153591:153642	3269632	15	True				
ANR	3269813	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3269632	0					
ANR	3269814	IdentifierDeclType	Gahp_Args *		3269632	0					
ANR	3269815	Identifier	result		3269632	1					
ANR	3269816	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3269632	2		=			
ANR	3269817	Identifier	result		3269632	0					
ANR	3269818	CallExpression	"get_pending_result ( command , buf )"		3269632	1					
ANR	3269819	Callee	get_pending_result		3269632	0					
ANR	3269820	Identifier	get_pending_result		3269632	0					
ANR	3269821	ArgumentList	command		3269632	1					
ANR	3269822	Argument	command		3269632	0					
ANR	3269823	Identifier	command		3269632	0					
ANR	3269824	Argument	buf		3269632	1					
ANR	3269825	Identifier	buf		3269632	0					
ANR	3269826	IfStatement	if ( result )		3269632	16					
ANR	3269827	Condition	result	5717:6:153650:153655	3269632	0	True				
ANR	3269828	Identifier	result		3269632	0					
ANR	3269829	CompoundStatement		42:2:1239:1245	3269632	1					
ANR	3269830	IfStatement	if ( result -> argc != 2 )		3269632	0					
ANR	3269831	Condition	result -> argc != 2	5719:6:153691:153707	3269632	0	True				
ANR	3269832	EqualityExpression	result -> argc != 2		3269632	0		!=			
ANR	3269833	PtrMemberAccess	result -> argc		3269632	0					
ANR	3269834	Identifier	result		3269632	0					
ANR	3269835	Identifier	argc		3269632	1					
ANR	3269836	PrimaryExpression	2		3269632	1					
ANR	3269837	CompoundStatement		39:25:1195:1195	3269632	1					
ANR	3269838	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5720:3:153715:153746	3269632	0	True				
ANR	3269839	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3269632	0					
ANR	3269840	Callee	EXCEPT		3269632	0					
ANR	3269841	Identifier	EXCEPT		3269632	0					
ANR	3269842	ArgumentList	"""Bad %s Result"""		3269632	1					
ANR	3269843	Argument	"""Bad %s Result"""		3269632	0					
ANR	3269844	PrimaryExpression	"""Bad %s Result"""		3269632	0					
ANR	3269845	Argument	command		3269632	1					
ANR	3269846	Identifier	command		3269632	0					
ANR	3269847	IdentifierDeclStatement	int rc ;	5722:2:153754:153760	3269632	1	True				
ANR	3269848	IdentifierDecl	rc		3269632	0					
ANR	3269849	IdentifierDeclType	int		3269632	0					
ANR	3269850	Identifier	rc		3269632	1					
ANR	3269851	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3269632	2					
ANR	3269852	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	5723:6:153768:153807	3269632	0	True				
ANR	3269853	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3269632	0		==			
ANR	3269854	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3269632	0					
ANR	3269855	Callee	strcmp		3269632	0					
ANR	3269856	Identifier	strcmp		3269632	0					
ANR	3269857	ArgumentList	result -> argv [ 1 ]		3269632	1					
ANR	3269858	Argument	result -> argv [ 1 ]		3269632	0					
ANR	3269859	ArrayIndexing	result -> argv [ 1 ]		3269632	0					
ANR	3269860	PtrMemberAccess	result -> argv		3269632	0					
ANR	3269861	Identifier	result		3269632	0					
ANR	3269862	Identifier	argv		3269632	1					
ANR	3269863	PrimaryExpression	1		3269632	1					
ANR	3269864	Argument	NULLSTRING		3269632	1					
ANR	3269865	Identifier	NULLSTRING		3269632	0					
ANR	3269866	PrimaryExpression	0		3269632	1					
ANR	3269867	CompoundStatement		43:48:1295:1295	3269632	1					
ANR	3269868	ExpressionStatement	rc = 0	5724:3:153815:153821	3269632	0	True				
ANR	3269869	AssignmentExpression	rc = 0		3269632	0		=			
ANR	3269870	Identifier	rc		3269632	0					
ANR	3269871	PrimaryExpression	0		3269632	1					
ANR	3269872	ElseStatement	else		3269632	0					
ANR	3269873	CompoundStatement		45:9:1317:1317	3269632	0					
ANR	3269874	ExpressionStatement	rc = 1	5726:3:153837:153843	3269632	0	True				
ANR	3269875	AssignmentExpression	rc = 1		3269632	0		=			
ANR	3269876	Identifier	rc		3269632	0					
ANR	3269877	PrimaryExpression	1		3269632	1					
ANR	3269878	ExpressionStatement	error_string = result -> argv [ 1 ]	5727:3:153848:153878	3269632	1	True				
ANR	3269879	AssignmentExpression	error_string = result -> argv [ 1 ]		3269632	0		=			
ANR	3269880	Identifier	error_string		3269632	0					
ANR	3269881	ArrayIndexing	result -> argv [ 1 ]		3269632	1					
ANR	3269882	PtrMemberAccess	result -> argv		3269632	0					
ANR	3269883	Identifier	result		3269632	0					
ANR	3269884	Identifier	argv		3269632	1					
ANR	3269885	PrimaryExpression	1		3269632	1					
ANR	3269886	Statement	delete	5730:2:153887:153892	3269632	3	True				
ANR	3269887	ExpressionStatement	result	5730:9:153894:153900	3269632	4	True				
ANR	3269888	Identifier	result		3269632	0					
ANR	3269889	ReturnStatement	return rc ;	5731:2:153904:153913	3269632	5	True				
ANR	3269890	Identifier	rc		3269632	0					
ANR	3269891	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3269632	17					
ANR	3269892	Condition	"check_pending_timeout ( command , buf )"	5735:6:153970:154003	3269632	0	True				
ANR	3269893	CallExpression	"check_pending_timeout ( command , buf )"		3269632	0					
ANR	3269894	Callee	check_pending_timeout		3269632	0					
ANR	3269895	Identifier	check_pending_timeout		3269632	0					
ANR	3269896	ArgumentList	command		3269632	1					
ANR	3269897	Argument	command		3269632	0					
ANR	3269898	Identifier	command		3269632	0					
ANR	3269899	Argument	buf		3269632	1					
ANR	3269900	Identifier	buf		3269632	0					
ANR	3269901	CompoundStatement		55:43:1492:1492	3269632	1					
ANR	3269902	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5737:2:154043:154091	3269632	0	True				
ANR	3269903	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3269632	0					
ANR	3269904	Callee	sprintf		3269632	0					
ANR	3269905	Identifier	sprintf		3269632	0					
ANR	3269906	ArgumentList	error_string		3269632	1					
ANR	3269907	Argument	error_string		3269632	0					
ANR	3269908	Identifier	error_string		3269632	0					
ANR	3269909	Argument	"""%s timed out"""		3269632	1					
ANR	3269910	PrimaryExpression	"""%s timed out"""		3269632	0					
ANR	3269911	Argument	command		3269632	2					
ANR	3269912	Identifier	command		3269632	0					
ANR	3269913	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5738:2:154095:154130	3269632	1	True				
ANR	3269914	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3269632	0					
ANR	3269915	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5742:1:154190:154223	3269632	18	True				
ANR	3269916	Identifier	GAHPCLIENT_COMMAND_PENDING		3269632	0					
ANR	3269917	ReturnType	int		3269632	1					
ANR	3269918	Identifier	GahpClient :: cream_job_purge		3269632	2					
ANR	3269919	ParameterList	"const char * service , const char * job_id"		3269632	3					
ANR	3269920	Parameter	const char * service	5680:28:152473:152491	3269632	0	True				
ANR	3269921	ParameterType	const char *		3269632	0					
ANR	3269922	Identifier	service		3269632	1					
ANR	3269923	Parameter	const char * job_id	5680:49:152494:152511	3269632	1	True				
ANR	3269924	ParameterType	const char *		3269632	0					
ANR	3269925	Identifier	job_id		3269632	1					
ANR	3269926	CFGEntryNode	ENTRY		3269632		True				
ANR	3269927	CFGExitNode	EXIT		3269632		True				
ANR	3269928	Symbol	server -> m_commands_supported		3269632						
ANR	3269929	Symbol	server		3269632						
ANR	3269930	Symbol	escapeGahpString		3269632						
ANR	3269931	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3269632						
ANR	3269932	Symbol	* server		3269632						
ANR	3269933	Symbol	reqline . c_str		3269632						
ANR	3269934	Symbol	results_only		3269632						
ANR	3269935	Symbol	result -> argv		3269632						
ANR	3269936	Symbol	* server -> m_commands_supported		3269632						
ANR	3269937	Symbol	sprintf		3269632						
ANR	3269938	Symbol	result		3269632						
ANR	3269939	Symbol	normal_proxy		3269632						
ANR	3269940	Symbol	* result		3269632						
ANR	3269941	Symbol	server -> m_commands_supported -> contains_anycase		3269632						
ANR	3269942	Symbol	GAHPCLIENT_COMMAND_PENDING		3269632						
ANR	3269943	Symbol	reqline		3269632						
ANR	3269944	Symbol	job_number		3269632						
ANR	3269945	Symbol	m_mode		3269632						
ANR	3269946	Symbol	* result -> argv		3269632						
ANR	3269947	Symbol	strcmp		3269632						
ANR	3269948	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3269632						
ANR	3269949	Symbol	* * result		3269632						
ANR	3269950	Symbol	medium_prio		3269632						
ANR	3269951	Symbol	NULLSTRING		3269632						
ANR	3269952	Symbol	command		3269632						
ANR	3269953	Symbol	get_pending_result		3269632						
ANR	3269954	Symbol	rc		3269632						
ANR	3269955	Symbol	error_string		3269632						
ANR	3269956	Symbol	esc2		3269632						
ANR	3269957	Symbol	buf		3269632						
ANR	3269958	Symbol	esc1		3269632						
ANR	3269959	Symbol	service		3269632						
ANR	3269960	Symbol	job_id		3269632						
ANR	3269961	Symbol	x		3269632						
ANR	3269962	Symbol	result -> argc		3269632						
ANR	3269963	Symbol	FALSE		3269632						
ANR	3269964	Symbol	* * server		3269632						
ANR	3269965	Symbol	strdup		3269632						
ANR	3269966	Symbol	check_pending_timeout		3269632						
ANR	3269967	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3269632						
ANR	3269968	Symbol	is_pending		3269632						
ANR	3269969	Function	GahpClient :: cream_job_cancel	5745:0:154228:156016							
ANR	3269970	FunctionDef	"GahpClient :: cream_job_cancel (const char * service , const char * job_id)"		3269969	0					
ANR	3269971	CompoundStatement		5747:0:154302:156016	3269969	0					
ANR	3269972	Statement	static	5748:1:154305:154310	3269969	0	True				
ANR	3269973	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_CANCEL"" ;"	5748:8:154312:154352	3269969	1	True				
ANR	3269974	IdentifierDecl	"* command = ""CREAM_JOB_CANCEL"""		3269969	0					
ANR	3269975	IdentifierDeclType	const char *		3269969	0					
ANR	3269976	Identifier	command		3269969	1					
ANR	3269977	AssignmentExpression	"* command = ""CREAM_JOB_CANCEL"""		3269969	2		=			
ANR	3269978	Identifier	command		3269969	0					
ANR	3269979	PrimaryExpression	"""CREAM_JOB_CANCEL"""		3269969	1					
ANR	3269980	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3269969	2					
ANR	3269981	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5751:6:154401:154462	3269969	0	True				
ANR	3269982	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3269969	0		==			
ANR	3269983	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3269969	0					
ANR	3269984	Callee	server -> m_commands_supported -> contains_anycase		3269969	0					
ANR	3269985	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3269969	0					
ANR	3269986	PtrMemberAccess	server -> m_commands_supported		3269969	0					
ANR	3269987	Identifier	server		3269969	0					
ANR	3269988	Identifier	m_commands_supported		3269969	1					
ANR	3269989	Identifier	contains_anycase		3269969	1					
ANR	3269990	ArgumentList	command		3269969	1					
ANR	3269991	Argument	command		3269969	0					
ANR	3269992	Identifier	command		3269969	0					
ANR	3269993	Identifier	FALSE		3269969	1					
ANR	3269994	CompoundStatement		5:70:162:162	3269969	1					
ANR	3269995	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5752:2:154469:154508	3269969	0	True				
ANR	3269996	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3269969	0					
ANR	3269997	IfStatement	if ( ! service )		3269969	3					
ANR	3269998	Condition	! service	5756:5:154546:154553	3269969	0	True				
ANR	3269999	UnaryOperationExpression	! service		3269969	0					
ANR	3270000	UnaryOperator	!		3269969	0					
ANR	3270001	Identifier	service		3269969	1					
ANR	3270002	ExpressionStatement	service = NULLSTRING	5756:15:154556:154574	3269969	1	True				
ANR	3270003	AssignmentExpression	service = NULLSTRING		3269969	0		=			
ANR	3270004	Identifier	service		3269969	0					
ANR	3270005	Identifier	NULLSTRING		3269969	1					
ANR	3270006	IfStatement	if ( ! job_id )		3269969	4					
ANR	3270007	Condition	! job_id	5757:5:154581:154587	3269969	0	True				
ANR	3270008	UnaryOperationExpression	! job_id		3269969	0					
ANR	3270009	UnaryOperator	!		3269969	0					
ANR	3270010	Identifier	job_id		3269969	1					
ANR	3270011	ExpressionStatement	job_id = NULLSTRING	5757:14:154590:154607	3269969	1	True				
ANR	3270012	AssignmentExpression	job_id = NULLSTRING		3269969	0		=			
ANR	3270013	Identifier	job_id		3269969	0					
ANR	3270014	Identifier	NULLSTRING		3269969	1					
ANR	3270015	IdentifierDeclStatement	std :: string reqline ;	5758:1:154610:154629	3269969	5	True				
ANR	3270016	IdentifierDecl	reqline		3269969	0					
ANR	3270017	IdentifierDeclType	std :: string		3269969	0					
ANR	3270018	Identifier	reqline		3269969	1					
ANR	3270019	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	5759:1:154632:154680	3269969	6	True				
ANR	3270020	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3269969	0					
ANR	3270021	IdentifierDeclType	char *		3269969	0					
ANR	3270022	Identifier	esc1		3269969	1					
ANR	3270023	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3269969	2		=			
ANR	3270024	Identifier	esc1		3269969	0					
ANR	3270025	CallExpression	strdup ( escapeGahpString ( service ) )		3269969	1					
ANR	3270026	Callee	strdup		3269969	0					
ANR	3270027	Identifier	strdup		3269969	0					
ANR	3270028	ArgumentList	escapeGahpString ( service )		3269969	1					
ANR	3270029	Argument	escapeGahpString ( service )		3269969	0					
ANR	3270030	CallExpression	escapeGahpString ( service )		3269969	0					
ANR	3270031	Callee	escapeGahpString		3269969	0					
ANR	3270032	Identifier	escapeGahpString		3269969	0					
ANR	3270033	ArgumentList	service		3269969	1					
ANR	3270034	Argument	service		3269969	0					
ANR	3270035	Identifier	service		3269969	0					
ANR	3270036	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	5760:1:154683:154730	3269969	7	True				
ANR	3270037	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3269969	0					
ANR	3270038	IdentifierDeclType	char *		3269969	0					
ANR	3270039	Identifier	esc2		3269969	1					
ANR	3270040	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3269969	2		=			
ANR	3270041	Identifier	esc2		3269969	0					
ANR	3270042	CallExpression	strdup ( escapeGahpString ( job_id ) )		3269969	1					
ANR	3270043	Callee	strdup		3269969	0					
ANR	3270044	Identifier	strdup		3269969	0					
ANR	3270045	ArgumentList	escapeGahpString ( job_id )		3269969	1					
ANR	3270046	Argument	escapeGahpString ( job_id )		3269969	0					
ANR	3270047	CallExpression	escapeGahpString ( job_id )		3269969	0					
ANR	3270048	Callee	escapeGahpString		3269969	0					
ANR	3270049	Identifier	escapeGahpString		3269969	0					
ANR	3270050	ArgumentList	job_id		3269969	1					
ANR	3270051	Argument	job_id		3269969	0					
ANR	3270052	Identifier	job_id		3269969	0					
ANR	3270053	IdentifierDeclStatement	int job_number = 1 ;	5761:1:154733:154751	3269969	8	True				
ANR	3270054	IdentifierDecl	job_number = 1		3269969	0					
ANR	3270055	IdentifierDeclType	int		3269969	0					
ANR	3270056	Identifier	job_number		3269969	1					
ANR	3270057	AssignmentExpression	job_number = 1		3269969	2		=			
ANR	3270058	Identifier	job_number		3269969	0					
ANR	3270059	PrimaryExpression	1		3269969	1					
ANR	3270060	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 ) ;"	5762:1:154783:154843	3269969	9	True				
ANR	3270061	IdentifierDecl	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3269969	0					
ANR	3270062	IdentifierDeclType	int		3269969	0					
ANR	3270063	Identifier	x		3269969	1					
ANR	3270064	AssignmentExpression	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3269969	2		=			
ANR	3270065	Identifier	x		3269969	0					
ANR	3270066	CallExpression	"sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3269969	1					
ANR	3270067	Callee	sprintf		3269969	0					
ANR	3270068	Identifier	sprintf		3269969	0					
ANR	3270069	ArgumentList	reqline		3269969	1					
ANR	3270070	Argument	reqline		3269969	0					
ANR	3270071	Identifier	reqline		3269969	0					
ANR	3270072	Argument	"""%s %d %s"""		3269969	1					
ANR	3270073	PrimaryExpression	"""%s %d %s"""		3269969	0					
ANR	3270074	Argument	esc1		3269969	2					
ANR	3270075	Identifier	esc1		3269969	0					
ANR	3270076	Argument	job_number		3269969	3					
ANR	3270077	Identifier	job_number		3269969	0					
ANR	3270078	Argument	esc2		3269969	4					
ANR	3270079	Identifier	esc2		3269969	0					
ANR	3270080	ExpressionStatement	free ( esc1 )	5763:1:154846:154858	3269969	10	True				
ANR	3270081	CallExpression	free ( esc1 )		3269969	0					
ANR	3270082	Callee	free		3269969	0					
ANR	3270083	Identifier	free		3269969	0					
ANR	3270084	ArgumentList	esc1		3269969	1					
ANR	3270085	Argument	esc1		3269969	0					
ANR	3270086	Identifier	esc1		3269969	0					
ANR	3270087	ExpressionStatement	free ( esc2 )	5764:1:154861:154873	3269969	11	True				
ANR	3270088	CallExpression	free ( esc2 )		3269969	0					
ANR	3270089	Callee	free		3269969	0					
ANR	3270090	Identifier	free		3269969	0					
ANR	3270091	ArgumentList	esc2		3269969	1					
ANR	3270092	Argument	esc2		3269969	0					
ANR	3270093	Identifier	esc2		3269969	0					
ANR	3270094	ExpressionStatement	ASSERT ( x > 0 )	5765:1:154876:154891	3269969	12	True				
ANR	3270095	CallExpression	ASSERT ( x > 0 )		3269969	0					
ANR	3270096	Callee	ASSERT		3269969	0					
ANR	3270097	Identifier	ASSERT		3269969	0					
ANR	3270098	ArgumentList	x > 0		3269969	1					
ANR	3270099	Argument	x > 0		3269969	0					
ANR	3270100	RelationalExpression	x > 0		3269969	0		>			
ANR	3270101	Identifier	x		3269969	0					
ANR	3270102	PrimaryExpression	0		3269969	1					
ANR	3270103	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5766:1:154894:154927	3269969	13	True				
ANR	3270104	IdentifierDecl	* buf = reqline . c_str ( )		3269969	0					
ANR	3270105	IdentifierDeclType	const char *		3269969	0					
ANR	3270106	Identifier	buf		3269969	1					
ANR	3270107	AssignmentExpression	* buf = reqline . c_str ( )		3269969	2		=			
ANR	3270108	Identifier	buf		3269969	0					
ANR	3270109	CallExpression	reqline . c_str ( )		3269969	1					
ANR	3270110	Callee	reqline . c_str		3269969	0					
ANR	3270111	MemberAccess	reqline . c_str		3269969	0					
ANR	3270112	Identifier	reqline		3269969	0					
ANR	3270113	Identifier	c_str		3269969	1					
ANR	3270114	ArgumentList			3269969	1					
ANR	3270115	IfStatement	"if ( ! is_pending ( command , buf ) )"		3269969	14					
ANR	3270116	Condition	"! is_pending ( command , buf )"	5770:6:155028:155051	3269969	0	True				
ANR	3270117	UnaryOperationExpression	"! is_pending ( command , buf )"		3269969	0					
ANR	3270118	UnaryOperator	!		3269969	0					
ANR	3270119	CallExpression	"is_pending ( command , buf )"		3269969	1					
ANR	3270120	Callee	is_pending		3269969	0					
ANR	3270121	Identifier	is_pending		3269969	0					
ANR	3270122	ArgumentList	command		3269969	1					
ANR	3270123	Argument	command		3269969	0					
ANR	3270124	Identifier	command		3269969	0					
ANR	3270125	Argument	buf		3269969	1					
ANR	3270126	Identifier	buf		3269969	0					
ANR	3270127	CompoundStatement		24:33:752:752	3269969	1					
ANR	3270128	IfStatement	if ( m_mode == results_only )		3269969	0					
ANR	3270129	Condition	m_mode == results_only	5773:7:155160:155181	3269969	0	True				
ANR	3270130	EqualityExpression	m_mode == results_only		3269969	0		==			
ANR	3270131	Identifier	m_mode		3269969	0					
ANR	3270132	Identifier	results_only		3269969	1					
ANR	3270133	CompoundStatement		27:32:882:882	3269969	1					
ANR	3270134	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5774:3:155190:155229	3269969	0	True				
ANR	3270135	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3269969	0					
ANR	3270136	ExpressionStatement	"now_pending ( command , buf , normal_proxy , medium_prio )"	5776:2:155237:155286	3269969	1	True				
ANR	3270137	CallExpression	"now_pending ( command , buf , normal_proxy , medium_prio )"		3269969	0					
ANR	3270138	Callee	now_pending		3269969	0					
ANR	3270139	Identifier	now_pending		3269969	0					
ANR	3270140	ArgumentList	command		3269969	1					
ANR	3270141	Argument	command		3269969	0					
ANR	3270142	Identifier	command		3269969	0					
ANR	3270143	Argument	buf		3269969	1					
ANR	3270144	Identifier	buf		3269969	0					
ANR	3270145	Argument	normal_proxy		3269969	2					
ANR	3270146	Identifier	normal_proxy		3269969	0					
ANR	3270147	Argument	medium_prio		3269969	3					
ANR	3270148	Identifier	medium_prio		3269969	0					
ANR	3270149	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5782:1:155380:155431	3269969	15	True				
ANR	3270150	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3269969	0					
ANR	3270151	IdentifierDeclType	Gahp_Args *		3269969	0					
ANR	3270152	Identifier	result		3269969	1					
ANR	3270153	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3269969	2		=			
ANR	3270154	Identifier	result		3269969	0					
ANR	3270155	CallExpression	"get_pending_result ( command , buf )"		3269969	1					
ANR	3270156	Callee	get_pending_result		3269969	0					
ANR	3270157	Identifier	get_pending_result		3269969	0					
ANR	3270158	ArgumentList	command		3269969	1					
ANR	3270159	Argument	command		3269969	0					
ANR	3270160	Identifier	command		3269969	0					
ANR	3270161	Argument	buf		3269969	1					
ANR	3270162	Identifier	buf		3269969	0					
ANR	3270163	IfStatement	if ( result )		3269969	16					
ANR	3270164	Condition	result	5783:6:155439:155444	3269969	0	True				
ANR	3270165	Identifier	result		3269969	0					
ANR	3270166	CompoundStatement		42:2:1240:1246	3269969	1					
ANR	3270167	IfStatement	if ( result -> argc != 2 )		3269969	0					
ANR	3270168	Condition	result -> argc != 2	5785:6:155480:155496	3269969	0	True				
ANR	3270169	EqualityExpression	result -> argc != 2		3269969	0		!=			
ANR	3270170	PtrMemberAccess	result -> argc		3269969	0					
ANR	3270171	Identifier	result		3269969	0					
ANR	3270172	Identifier	argc		3269969	1					
ANR	3270173	PrimaryExpression	2		3269969	1					
ANR	3270174	CompoundStatement		39:25:1196:1196	3269969	1					
ANR	3270175	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5786:3:155504:155535	3269969	0	True				
ANR	3270176	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3269969	0					
ANR	3270177	Callee	EXCEPT		3269969	0					
ANR	3270178	Identifier	EXCEPT		3269969	0					
ANR	3270179	ArgumentList	"""Bad %s Result"""		3269969	1					
ANR	3270180	Argument	"""Bad %s Result"""		3269969	0					
ANR	3270181	PrimaryExpression	"""Bad %s Result"""		3269969	0					
ANR	3270182	Argument	command		3269969	1					
ANR	3270183	Identifier	command		3269969	0					
ANR	3270184	IdentifierDeclStatement	int rc ;	5788:2:155543:155549	3269969	1	True				
ANR	3270185	IdentifierDecl	rc		3269969	0					
ANR	3270186	IdentifierDeclType	int		3269969	0					
ANR	3270187	Identifier	rc		3269969	1					
ANR	3270188	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3269969	2					
ANR	3270189	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	5789:6:155557:155596	3269969	0	True				
ANR	3270190	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3269969	0		==			
ANR	3270191	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3269969	0					
ANR	3270192	Callee	strcmp		3269969	0					
ANR	3270193	Identifier	strcmp		3269969	0					
ANR	3270194	ArgumentList	result -> argv [ 1 ]		3269969	1					
ANR	3270195	Argument	result -> argv [ 1 ]		3269969	0					
ANR	3270196	ArrayIndexing	result -> argv [ 1 ]		3269969	0					
ANR	3270197	PtrMemberAccess	result -> argv		3269969	0					
ANR	3270198	Identifier	result		3269969	0					
ANR	3270199	Identifier	argv		3269969	1					
ANR	3270200	PrimaryExpression	1		3269969	1					
ANR	3270201	Argument	NULLSTRING		3269969	1					
ANR	3270202	Identifier	NULLSTRING		3269969	0					
ANR	3270203	PrimaryExpression	0		3269969	1					
ANR	3270204	CompoundStatement		43:48:1296:1296	3269969	1					
ANR	3270205	ExpressionStatement	rc = 0	5790:3:155604:155610	3269969	0	True				
ANR	3270206	AssignmentExpression	rc = 0		3269969	0		=			
ANR	3270207	Identifier	rc		3269969	0					
ANR	3270208	PrimaryExpression	0		3269969	1					
ANR	3270209	ElseStatement	else		3269969	0					
ANR	3270210	CompoundStatement		45:9:1318:1318	3269969	0					
ANR	3270211	ExpressionStatement	rc = 1	5792:3:155626:155632	3269969	0	True				
ANR	3270212	AssignmentExpression	rc = 1		3269969	0		=			
ANR	3270213	Identifier	rc		3269969	0					
ANR	3270214	PrimaryExpression	1		3269969	1					
ANR	3270215	ExpressionStatement	error_string = result -> argv [ 1 ]	5793:3:155637:155667	3269969	1	True				
ANR	3270216	AssignmentExpression	error_string = result -> argv [ 1 ]		3269969	0		=			
ANR	3270217	Identifier	error_string		3269969	0					
ANR	3270218	ArrayIndexing	result -> argv [ 1 ]		3269969	1					
ANR	3270219	PtrMemberAccess	result -> argv		3269969	0					
ANR	3270220	Identifier	result		3269969	0					
ANR	3270221	Identifier	argv		3269969	1					
ANR	3270222	PrimaryExpression	1		3269969	1					
ANR	3270223	Statement	delete	5796:2:155678:155683	3269969	3	True				
ANR	3270224	ExpressionStatement	result	5796:9:155685:155691	3269969	4	True				
ANR	3270225	Identifier	result		3269969	0					
ANR	3270226	ReturnStatement	return rc ;	5797:2:155695:155704	3269969	5	True				
ANR	3270227	Identifier	rc		3269969	0					
ANR	3270228	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3269969	17					
ANR	3270229	Condition	"check_pending_timeout ( command , buf )"	5801:6:155761:155794	3269969	0	True				
ANR	3270230	CallExpression	"check_pending_timeout ( command , buf )"		3269969	0					
ANR	3270231	Callee	check_pending_timeout		3269969	0					
ANR	3270232	Identifier	check_pending_timeout		3269969	0					
ANR	3270233	ArgumentList	command		3269969	1					
ANR	3270234	Argument	command		3269969	0					
ANR	3270235	Identifier	command		3269969	0					
ANR	3270236	Argument	buf		3269969	1					
ANR	3270237	Identifier	buf		3269969	0					
ANR	3270238	CompoundStatement		55:43:1495:1495	3269969	1					
ANR	3270239	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5803:2:155834:155882	3269969	0	True				
ANR	3270240	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3269969	0					
ANR	3270241	Callee	sprintf		3269969	0					
ANR	3270242	Identifier	sprintf		3269969	0					
ANR	3270243	ArgumentList	error_string		3269969	1					
ANR	3270244	Argument	error_string		3269969	0					
ANR	3270245	Identifier	error_string		3269969	0					
ANR	3270246	Argument	"""%s timed out"""		3269969	1					
ANR	3270247	PrimaryExpression	"""%s timed out"""		3269969	0					
ANR	3270248	Argument	command		3269969	2					
ANR	3270249	Identifier	command		3269969	0					
ANR	3270250	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5804:2:155886:155921	3269969	1	True				
ANR	3270251	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3269969	0					
ANR	3270252	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5808:1:155981:156014	3269969	18	True				
ANR	3270253	Identifier	GAHPCLIENT_COMMAND_PENDING		3269969	0					
ANR	3270254	ReturnType	int		3269969	1					
ANR	3270255	Identifier	GahpClient :: cream_job_cancel		3269969	2					
ANR	3270256	ParameterList	"const char * service , const char * job_id"		3269969	3					
ANR	3270257	Parameter	const char * service	5746:29:154261:154279	3269969	0	True				
ANR	3270258	ParameterType	const char *		3269969	0					
ANR	3270259	Identifier	service		3269969	1					
ANR	3270260	Parameter	const char * job_id	5746:50:154282:154299	3269969	1	True				
ANR	3270261	ParameterType	const char *		3269969	0					
ANR	3270262	Identifier	job_id		3269969	1					
ANR	3270263	CFGEntryNode	ENTRY		3269969		True				
ANR	3270264	CFGExitNode	EXIT		3269969		True				
ANR	3270265	Symbol	server -> m_commands_supported		3269969						
ANR	3270266	Symbol	server		3269969						
ANR	3270267	Symbol	escapeGahpString		3269969						
ANR	3270268	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3269969						
ANR	3270269	Symbol	* server		3269969						
ANR	3270270	Symbol	reqline . c_str		3269969						
ANR	3270271	Symbol	results_only		3269969						
ANR	3270272	Symbol	result -> argv		3269969						
ANR	3270273	Symbol	* server -> m_commands_supported		3269969						
ANR	3270274	Symbol	sprintf		3269969						
ANR	3270275	Symbol	result		3269969						
ANR	3270276	Symbol	normal_proxy		3269969						
ANR	3270277	Symbol	* result		3269969						
ANR	3270278	Symbol	server -> m_commands_supported -> contains_anycase		3269969						
ANR	3270279	Symbol	GAHPCLIENT_COMMAND_PENDING		3269969						
ANR	3270280	Symbol	reqline		3269969						
ANR	3270281	Symbol	job_number		3269969						
ANR	3270282	Symbol	m_mode		3269969						
ANR	3270283	Symbol	* result -> argv		3269969						
ANR	3270284	Symbol	strcmp		3269969						
ANR	3270285	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3269969						
ANR	3270286	Symbol	* * result		3269969						
ANR	3270287	Symbol	medium_prio		3269969						
ANR	3270288	Symbol	NULLSTRING		3269969						
ANR	3270289	Symbol	command		3269969						
ANR	3270290	Symbol	get_pending_result		3269969						
ANR	3270291	Symbol	rc		3269969						
ANR	3270292	Symbol	error_string		3269969						
ANR	3270293	Symbol	esc2		3269969						
ANR	3270294	Symbol	buf		3269969						
ANR	3270295	Symbol	esc1		3269969						
ANR	3270296	Symbol	service		3269969						
ANR	3270297	Symbol	job_id		3269969						
ANR	3270298	Symbol	x		3269969						
ANR	3270299	Symbol	result -> argc		3269969						
ANR	3270300	Symbol	FALSE		3269969						
ANR	3270301	Symbol	* * server		3269969						
ANR	3270302	Symbol	strdup		3269969						
ANR	3270303	Symbol	check_pending_timeout		3269969						
ANR	3270304	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3269969						
ANR	3270305	Symbol	is_pending		3269969						
ANR	3270306	Function	GahpClient :: cream_job_suspend	5811:0:156019:157807							
ANR	3270307	FunctionDef	"GahpClient :: cream_job_suspend (const char * service , const char * job_id)"		3270306	0					
ANR	3270308	CompoundStatement		5813:0:156094:157807	3270306	0					
ANR	3270309	Statement	static	5814:1:156097:156102	3270306	0	True				
ANR	3270310	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_SUSPEND"" ;"	5814:8:156104:156145	3270306	1	True				
ANR	3270311	IdentifierDecl	"* command = ""CREAM_JOB_SUSPEND"""		3270306	0					
ANR	3270312	IdentifierDeclType	const char *		3270306	0					
ANR	3270313	Identifier	command		3270306	1					
ANR	3270314	AssignmentExpression	"* command = ""CREAM_JOB_SUSPEND"""		3270306	2		=			
ANR	3270315	Identifier	command		3270306	0					
ANR	3270316	PrimaryExpression	"""CREAM_JOB_SUSPEND"""		3270306	1					
ANR	3270317	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3270306	2					
ANR	3270318	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5817:6:156194:156255	3270306	0	True				
ANR	3270319	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3270306	0		==			
ANR	3270320	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3270306	0					
ANR	3270321	Callee	server -> m_commands_supported -> contains_anycase		3270306	0					
ANR	3270322	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3270306	0					
ANR	3270323	PtrMemberAccess	server -> m_commands_supported		3270306	0					
ANR	3270324	Identifier	server		3270306	0					
ANR	3270325	Identifier	m_commands_supported		3270306	1					
ANR	3270326	Identifier	contains_anycase		3270306	1					
ANR	3270327	ArgumentList	command		3270306	1					
ANR	3270328	Argument	command		3270306	0					
ANR	3270329	Identifier	command		3270306	0					
ANR	3270330	Identifier	FALSE		3270306	1					
ANR	3270331	CompoundStatement		5:70:163:163	3270306	1					
ANR	3270332	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5818:2:156262:156301	3270306	0	True				
ANR	3270333	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3270306	0					
ANR	3270334	IfStatement	if ( ! service )		3270306	3					
ANR	3270335	Condition	! service	5822:5:156339:156346	3270306	0	True				
ANR	3270336	UnaryOperationExpression	! service		3270306	0					
ANR	3270337	UnaryOperator	!		3270306	0					
ANR	3270338	Identifier	service		3270306	1					
ANR	3270339	ExpressionStatement	service = NULLSTRING	5822:15:156349:156367	3270306	1	True				
ANR	3270340	AssignmentExpression	service = NULLSTRING		3270306	0		=			
ANR	3270341	Identifier	service		3270306	0					
ANR	3270342	Identifier	NULLSTRING		3270306	1					
ANR	3270343	IfStatement	if ( ! job_id )		3270306	4					
ANR	3270344	Condition	! job_id	5823:5:156374:156380	3270306	0	True				
ANR	3270345	UnaryOperationExpression	! job_id		3270306	0					
ANR	3270346	UnaryOperator	!		3270306	0					
ANR	3270347	Identifier	job_id		3270306	1					
ANR	3270348	ExpressionStatement	job_id = NULLSTRING	5823:14:156383:156400	3270306	1	True				
ANR	3270349	AssignmentExpression	job_id = NULLSTRING		3270306	0		=			
ANR	3270350	Identifier	job_id		3270306	0					
ANR	3270351	Identifier	NULLSTRING		3270306	1					
ANR	3270352	IdentifierDeclStatement	std :: string reqline ;	5824:1:156403:156422	3270306	5	True				
ANR	3270353	IdentifierDecl	reqline		3270306	0					
ANR	3270354	IdentifierDeclType	std :: string		3270306	0					
ANR	3270355	Identifier	reqline		3270306	1					
ANR	3270356	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	5825:1:156425:156473	3270306	6	True				
ANR	3270357	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3270306	0					
ANR	3270358	IdentifierDeclType	char *		3270306	0					
ANR	3270359	Identifier	esc1		3270306	1					
ANR	3270360	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3270306	2		=			
ANR	3270361	Identifier	esc1		3270306	0					
ANR	3270362	CallExpression	strdup ( escapeGahpString ( service ) )		3270306	1					
ANR	3270363	Callee	strdup		3270306	0					
ANR	3270364	Identifier	strdup		3270306	0					
ANR	3270365	ArgumentList	escapeGahpString ( service )		3270306	1					
ANR	3270366	Argument	escapeGahpString ( service )		3270306	0					
ANR	3270367	CallExpression	escapeGahpString ( service )		3270306	0					
ANR	3270368	Callee	escapeGahpString		3270306	0					
ANR	3270369	Identifier	escapeGahpString		3270306	0					
ANR	3270370	ArgumentList	service		3270306	1					
ANR	3270371	Argument	service		3270306	0					
ANR	3270372	Identifier	service		3270306	0					
ANR	3270373	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	5826:1:156476:156523	3270306	7	True				
ANR	3270374	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3270306	0					
ANR	3270375	IdentifierDeclType	char *		3270306	0					
ANR	3270376	Identifier	esc2		3270306	1					
ANR	3270377	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3270306	2		=			
ANR	3270378	Identifier	esc2		3270306	0					
ANR	3270379	CallExpression	strdup ( escapeGahpString ( job_id ) )		3270306	1					
ANR	3270380	Callee	strdup		3270306	0					
ANR	3270381	Identifier	strdup		3270306	0					
ANR	3270382	ArgumentList	escapeGahpString ( job_id )		3270306	1					
ANR	3270383	Argument	escapeGahpString ( job_id )		3270306	0					
ANR	3270384	CallExpression	escapeGahpString ( job_id )		3270306	0					
ANR	3270385	Callee	escapeGahpString		3270306	0					
ANR	3270386	Identifier	escapeGahpString		3270306	0					
ANR	3270387	ArgumentList	job_id		3270306	1					
ANR	3270388	Argument	job_id		3270306	0					
ANR	3270389	Identifier	job_id		3270306	0					
ANR	3270390	IdentifierDeclStatement	int job_number = 1 ;	5827:1:156526:156544	3270306	8	True				
ANR	3270391	IdentifierDecl	job_number = 1		3270306	0					
ANR	3270392	IdentifierDeclType	int		3270306	0					
ANR	3270393	Identifier	job_number		3270306	1					
ANR	3270394	AssignmentExpression	job_number = 1		3270306	2		=			
ANR	3270395	Identifier	job_number		3270306	0					
ANR	3270396	PrimaryExpression	1		3270306	1					
ANR	3270397	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 ) ;"	5828:1:156576:156636	3270306	9	True				
ANR	3270398	IdentifierDecl	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270306	0					
ANR	3270399	IdentifierDeclType	int		3270306	0					
ANR	3270400	Identifier	x		3270306	1					
ANR	3270401	AssignmentExpression	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270306	2		=			
ANR	3270402	Identifier	x		3270306	0					
ANR	3270403	CallExpression	"sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270306	1					
ANR	3270404	Callee	sprintf		3270306	0					
ANR	3270405	Identifier	sprintf		3270306	0					
ANR	3270406	ArgumentList	reqline		3270306	1					
ANR	3270407	Argument	reqline		3270306	0					
ANR	3270408	Identifier	reqline		3270306	0					
ANR	3270409	Argument	"""%s %d %s"""		3270306	1					
ANR	3270410	PrimaryExpression	"""%s %d %s"""		3270306	0					
ANR	3270411	Argument	esc1		3270306	2					
ANR	3270412	Identifier	esc1		3270306	0					
ANR	3270413	Argument	job_number		3270306	3					
ANR	3270414	Identifier	job_number		3270306	0					
ANR	3270415	Argument	esc2		3270306	4					
ANR	3270416	Identifier	esc2		3270306	0					
ANR	3270417	ExpressionStatement	free ( esc1 )	5829:1:156639:156651	3270306	10	True				
ANR	3270418	CallExpression	free ( esc1 )		3270306	0					
ANR	3270419	Callee	free		3270306	0					
ANR	3270420	Identifier	free		3270306	0					
ANR	3270421	ArgumentList	esc1		3270306	1					
ANR	3270422	Argument	esc1		3270306	0					
ANR	3270423	Identifier	esc1		3270306	0					
ANR	3270424	ExpressionStatement	free ( esc2 )	5830:1:156654:156666	3270306	11	True				
ANR	3270425	CallExpression	free ( esc2 )		3270306	0					
ANR	3270426	Callee	free		3270306	0					
ANR	3270427	Identifier	free		3270306	0					
ANR	3270428	ArgumentList	esc2		3270306	1					
ANR	3270429	Argument	esc2		3270306	0					
ANR	3270430	Identifier	esc2		3270306	0					
ANR	3270431	ExpressionStatement	ASSERT ( x > 0 )	5831:1:156669:156684	3270306	12	True				
ANR	3270432	CallExpression	ASSERT ( x > 0 )		3270306	0					
ANR	3270433	Callee	ASSERT		3270306	0					
ANR	3270434	Identifier	ASSERT		3270306	0					
ANR	3270435	ArgumentList	x > 0		3270306	1					
ANR	3270436	Argument	x > 0		3270306	0					
ANR	3270437	RelationalExpression	x > 0		3270306	0		>			
ANR	3270438	Identifier	x		3270306	0					
ANR	3270439	PrimaryExpression	0		3270306	1					
ANR	3270440	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5832:1:156687:156720	3270306	13	True				
ANR	3270441	IdentifierDecl	* buf = reqline . c_str ( )		3270306	0					
ANR	3270442	IdentifierDeclType	const char *		3270306	0					
ANR	3270443	Identifier	buf		3270306	1					
ANR	3270444	AssignmentExpression	* buf = reqline . c_str ( )		3270306	2		=			
ANR	3270445	Identifier	buf		3270306	0					
ANR	3270446	CallExpression	reqline . c_str ( )		3270306	1					
ANR	3270447	Callee	reqline . c_str		3270306	0					
ANR	3270448	MemberAccess	reqline . c_str		3270306	0					
ANR	3270449	Identifier	reqline		3270306	0					
ANR	3270450	Identifier	c_str		3270306	1					
ANR	3270451	ArgumentList			3270306	1					
ANR	3270452	IfStatement	"if ( ! is_pending ( command , buf ) )"		3270306	14					
ANR	3270453	Condition	"! is_pending ( command , buf )"	5836:6:156821:156844	3270306	0	True				
ANR	3270454	UnaryOperationExpression	"! is_pending ( command , buf )"		3270306	0					
ANR	3270455	UnaryOperator	!		3270306	0					
ANR	3270456	CallExpression	"is_pending ( command , buf )"		3270306	1					
ANR	3270457	Callee	is_pending		3270306	0					
ANR	3270458	Identifier	is_pending		3270306	0					
ANR	3270459	ArgumentList	command		3270306	1					
ANR	3270460	Argument	command		3270306	0					
ANR	3270461	Identifier	command		3270306	0					
ANR	3270462	Argument	buf		3270306	1					
ANR	3270463	Identifier	buf		3270306	0					
ANR	3270464	CompoundStatement		24:33:753:753	3270306	1					
ANR	3270465	IfStatement	if ( m_mode == results_only )		3270306	0					
ANR	3270466	Condition	m_mode == results_only	5839:7:156953:156974	3270306	0	True				
ANR	3270467	EqualityExpression	m_mode == results_only		3270306	0		==			
ANR	3270468	Identifier	m_mode		3270306	0					
ANR	3270469	Identifier	results_only		3270306	1					
ANR	3270470	CompoundStatement		27:32:883:883	3270306	1					
ANR	3270471	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5840:3:156983:157022	3270306	0	True				
ANR	3270472	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3270306	0					
ANR	3270473	ExpressionStatement	"now_pending ( command , buf , normal_proxy , medium_prio )"	5842:2:157030:157079	3270306	1	True				
ANR	3270474	CallExpression	"now_pending ( command , buf , normal_proxy , medium_prio )"		3270306	0					
ANR	3270475	Callee	now_pending		3270306	0					
ANR	3270476	Identifier	now_pending		3270306	0					
ANR	3270477	ArgumentList	command		3270306	1					
ANR	3270478	Argument	command		3270306	0					
ANR	3270479	Identifier	command		3270306	0					
ANR	3270480	Argument	buf		3270306	1					
ANR	3270481	Identifier	buf		3270306	0					
ANR	3270482	Argument	normal_proxy		3270306	2					
ANR	3270483	Identifier	normal_proxy		3270306	0					
ANR	3270484	Argument	medium_prio		3270306	3					
ANR	3270485	Identifier	medium_prio		3270306	0					
ANR	3270486	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5848:1:157173:157224	3270306	15	True				
ANR	3270487	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3270306	0					
ANR	3270488	IdentifierDeclType	Gahp_Args *		3270306	0					
ANR	3270489	Identifier	result		3270306	1					
ANR	3270490	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3270306	2		=			
ANR	3270491	Identifier	result		3270306	0					
ANR	3270492	CallExpression	"get_pending_result ( command , buf )"		3270306	1					
ANR	3270493	Callee	get_pending_result		3270306	0					
ANR	3270494	Identifier	get_pending_result		3270306	0					
ANR	3270495	ArgumentList	command		3270306	1					
ANR	3270496	Argument	command		3270306	0					
ANR	3270497	Identifier	command		3270306	0					
ANR	3270498	Argument	buf		3270306	1					
ANR	3270499	Identifier	buf		3270306	0					
ANR	3270500	IfStatement	if ( result )		3270306	16					
ANR	3270501	Condition	result	5849:6:157232:157237	3270306	0	True				
ANR	3270502	Identifier	result		3270306	0					
ANR	3270503	CompoundStatement		42:2:1241:1247	3270306	1					
ANR	3270504	IfStatement	if ( result -> argc != 2 )		3270306	0					
ANR	3270505	Condition	result -> argc != 2	5851:6:157273:157289	3270306	0	True				
ANR	3270506	EqualityExpression	result -> argc != 2		3270306	0		!=			
ANR	3270507	PtrMemberAccess	result -> argc		3270306	0					
ANR	3270508	Identifier	result		3270306	0					
ANR	3270509	Identifier	argc		3270306	1					
ANR	3270510	PrimaryExpression	2		3270306	1					
ANR	3270511	CompoundStatement		39:25:1197:1197	3270306	1					
ANR	3270512	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5852:3:157297:157328	3270306	0	True				
ANR	3270513	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3270306	0					
ANR	3270514	Callee	EXCEPT		3270306	0					
ANR	3270515	Identifier	EXCEPT		3270306	0					
ANR	3270516	ArgumentList	"""Bad %s Result"""		3270306	1					
ANR	3270517	Argument	"""Bad %s Result"""		3270306	0					
ANR	3270518	PrimaryExpression	"""Bad %s Result"""		3270306	0					
ANR	3270519	Argument	command		3270306	1					
ANR	3270520	Identifier	command		3270306	0					
ANR	3270521	IdentifierDeclStatement	int rc ;	5854:2:157336:157342	3270306	1	True				
ANR	3270522	IdentifierDecl	rc		3270306	0					
ANR	3270523	IdentifierDeclType	int		3270306	0					
ANR	3270524	Identifier	rc		3270306	1					
ANR	3270525	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3270306	2					
ANR	3270526	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	5855:6:157350:157389	3270306	0	True				
ANR	3270527	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3270306	0		==			
ANR	3270528	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3270306	0					
ANR	3270529	Callee	strcmp		3270306	0					
ANR	3270530	Identifier	strcmp		3270306	0					
ANR	3270531	ArgumentList	result -> argv [ 1 ]		3270306	1					
ANR	3270532	Argument	result -> argv [ 1 ]		3270306	0					
ANR	3270533	ArrayIndexing	result -> argv [ 1 ]		3270306	0					
ANR	3270534	PtrMemberAccess	result -> argv		3270306	0					
ANR	3270535	Identifier	result		3270306	0					
ANR	3270536	Identifier	argv		3270306	1					
ANR	3270537	PrimaryExpression	1		3270306	1					
ANR	3270538	Argument	NULLSTRING		3270306	1					
ANR	3270539	Identifier	NULLSTRING		3270306	0					
ANR	3270540	PrimaryExpression	0		3270306	1					
ANR	3270541	CompoundStatement		43:48:1297:1297	3270306	1					
ANR	3270542	ExpressionStatement	rc = 0	5856:3:157397:157403	3270306	0	True				
ANR	3270543	AssignmentExpression	rc = 0		3270306	0		=			
ANR	3270544	Identifier	rc		3270306	0					
ANR	3270545	PrimaryExpression	0		3270306	1					
ANR	3270546	ElseStatement	else		3270306	0					
ANR	3270547	CompoundStatement		45:9:1319:1319	3270306	0					
ANR	3270548	ExpressionStatement	rc = 1	5858:3:157419:157425	3270306	0	True				
ANR	3270549	AssignmentExpression	rc = 1		3270306	0		=			
ANR	3270550	Identifier	rc		3270306	0					
ANR	3270551	PrimaryExpression	1		3270306	1					
ANR	3270552	ExpressionStatement	error_string = result -> argv [ 1 ]	5859:3:157430:157460	3270306	1	True				
ANR	3270553	AssignmentExpression	error_string = result -> argv [ 1 ]		3270306	0		=			
ANR	3270554	Identifier	error_string		3270306	0					
ANR	3270555	ArrayIndexing	result -> argv [ 1 ]		3270306	1					
ANR	3270556	PtrMemberAccess	result -> argv		3270306	0					
ANR	3270557	Identifier	result		3270306	0					
ANR	3270558	Identifier	argv		3270306	1					
ANR	3270559	PrimaryExpression	1		3270306	1					
ANR	3270560	Statement	delete	5862:2:157469:157474	3270306	3	True				
ANR	3270561	ExpressionStatement	result	5862:9:157476:157482	3270306	4	True				
ANR	3270562	Identifier	result		3270306	0					
ANR	3270563	ReturnStatement	return rc ;	5863:2:157486:157495	3270306	5	True				
ANR	3270564	Identifier	rc		3270306	0					
ANR	3270565	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3270306	17					
ANR	3270566	Condition	"check_pending_timeout ( command , buf )"	5867:6:157552:157585	3270306	0	True				
ANR	3270567	CallExpression	"check_pending_timeout ( command , buf )"		3270306	0					
ANR	3270568	Callee	check_pending_timeout		3270306	0					
ANR	3270569	Identifier	check_pending_timeout		3270306	0					
ANR	3270570	ArgumentList	command		3270306	1					
ANR	3270571	Argument	command		3270306	0					
ANR	3270572	Identifier	command		3270306	0					
ANR	3270573	Argument	buf		3270306	1					
ANR	3270574	Identifier	buf		3270306	0					
ANR	3270575	CompoundStatement		55:43:1494:1494	3270306	1					
ANR	3270576	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5869:2:157625:157673	3270306	0	True				
ANR	3270577	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3270306	0					
ANR	3270578	Callee	sprintf		3270306	0					
ANR	3270579	Identifier	sprintf		3270306	0					
ANR	3270580	ArgumentList	error_string		3270306	1					
ANR	3270581	Argument	error_string		3270306	0					
ANR	3270582	Identifier	error_string		3270306	0					
ANR	3270583	Argument	"""%s timed out"""		3270306	1					
ANR	3270584	PrimaryExpression	"""%s timed out"""		3270306	0					
ANR	3270585	Argument	command		3270306	2					
ANR	3270586	Identifier	command		3270306	0					
ANR	3270587	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5870:2:157677:157712	3270306	1	True				
ANR	3270588	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3270306	0					
ANR	3270589	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5874:1:157772:157805	3270306	18	True				
ANR	3270590	Identifier	GAHPCLIENT_COMMAND_PENDING		3270306	0					
ANR	3270591	ReturnType	int		3270306	1					
ANR	3270592	Identifier	GahpClient :: cream_job_suspend		3270306	2					
ANR	3270593	ParameterList	"const char * service , const char * job_id"		3270306	3					
ANR	3270594	Parameter	const char * service	5812:30:156053:156071	3270306	0	True				
ANR	3270595	ParameterType	const char *		3270306	0					
ANR	3270596	Identifier	service		3270306	1					
ANR	3270597	Parameter	const char * job_id	5812:51:156074:156091	3270306	1	True				
ANR	3270598	ParameterType	const char *		3270306	0					
ANR	3270599	Identifier	job_id		3270306	1					
ANR	3270600	CFGEntryNode	ENTRY		3270306		True				
ANR	3270601	CFGExitNode	EXIT		3270306		True				
ANR	3270602	Symbol	server -> m_commands_supported		3270306						
ANR	3270603	Symbol	server		3270306						
ANR	3270604	Symbol	escapeGahpString		3270306						
ANR	3270605	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3270306						
ANR	3270606	Symbol	* server		3270306						
ANR	3270607	Symbol	reqline . c_str		3270306						
ANR	3270608	Symbol	results_only		3270306						
ANR	3270609	Symbol	result -> argv		3270306						
ANR	3270610	Symbol	* server -> m_commands_supported		3270306						
ANR	3270611	Symbol	sprintf		3270306						
ANR	3270612	Symbol	result		3270306						
ANR	3270613	Symbol	normal_proxy		3270306						
ANR	3270614	Symbol	* result		3270306						
ANR	3270615	Symbol	server -> m_commands_supported -> contains_anycase		3270306						
ANR	3270616	Symbol	GAHPCLIENT_COMMAND_PENDING		3270306						
ANR	3270617	Symbol	reqline		3270306						
ANR	3270618	Symbol	job_number		3270306						
ANR	3270619	Symbol	m_mode		3270306						
ANR	3270620	Symbol	* result -> argv		3270306						
ANR	3270621	Symbol	strcmp		3270306						
ANR	3270622	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3270306						
ANR	3270623	Symbol	* * result		3270306						
ANR	3270624	Symbol	medium_prio		3270306						
ANR	3270625	Symbol	NULLSTRING		3270306						
ANR	3270626	Symbol	command		3270306						
ANR	3270627	Symbol	get_pending_result		3270306						
ANR	3270628	Symbol	rc		3270306						
ANR	3270629	Symbol	error_string		3270306						
ANR	3270630	Symbol	esc2		3270306						
ANR	3270631	Symbol	buf		3270306						
ANR	3270632	Symbol	esc1		3270306						
ANR	3270633	Symbol	service		3270306						
ANR	3270634	Symbol	job_id		3270306						
ANR	3270635	Symbol	x		3270306						
ANR	3270636	Symbol	result -> argc		3270306						
ANR	3270637	Symbol	FALSE		3270306						
ANR	3270638	Symbol	* * server		3270306						
ANR	3270639	Symbol	strdup		3270306						
ANR	3270640	Symbol	check_pending_timeout		3270306						
ANR	3270641	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3270306						
ANR	3270642	Symbol	is_pending		3270306						
ANR	3270643	Function	GahpClient :: cream_job_resume	5877:0:157810:159596							
ANR	3270644	FunctionDef	"GahpClient :: cream_job_resume (const char * service , const char * job_id)"		3270643	0					
ANR	3270645	CompoundStatement		5879:0:157884:159596	3270643	0					
ANR	3270646	Statement	static	5880:1:157887:157892	3270643	0	True				
ANR	3270647	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_RESUME"" ;"	5880:8:157894:157934	3270643	1	True				
ANR	3270648	IdentifierDecl	"* command = ""CREAM_JOB_RESUME"""		3270643	0					
ANR	3270649	IdentifierDeclType	const char *		3270643	0					
ANR	3270650	Identifier	command		3270643	1					
ANR	3270651	AssignmentExpression	"* command = ""CREAM_JOB_RESUME"""		3270643	2		=			
ANR	3270652	Identifier	command		3270643	0					
ANR	3270653	PrimaryExpression	"""CREAM_JOB_RESUME"""		3270643	1					
ANR	3270654	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3270643	2					
ANR	3270655	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5883:6:157983:158044	3270643	0	True				
ANR	3270656	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3270643	0		==			
ANR	3270657	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3270643	0					
ANR	3270658	Callee	server -> m_commands_supported -> contains_anycase		3270643	0					
ANR	3270659	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3270643	0					
ANR	3270660	PtrMemberAccess	server -> m_commands_supported		3270643	0					
ANR	3270661	Identifier	server		3270643	0					
ANR	3270662	Identifier	m_commands_supported		3270643	1					
ANR	3270663	Identifier	contains_anycase		3270643	1					
ANR	3270664	ArgumentList	command		3270643	1					
ANR	3270665	Argument	command		3270643	0					
ANR	3270666	Identifier	command		3270643	0					
ANR	3270667	Identifier	FALSE		3270643	1					
ANR	3270668	CompoundStatement		5:70:162:162	3270643	1					
ANR	3270669	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5884:2:158051:158090	3270643	0	True				
ANR	3270670	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3270643	0					
ANR	3270671	IfStatement	if ( ! service )		3270643	3					
ANR	3270672	Condition	! service	5888:5:158128:158135	3270643	0	True				
ANR	3270673	UnaryOperationExpression	! service		3270643	0					
ANR	3270674	UnaryOperator	!		3270643	0					
ANR	3270675	Identifier	service		3270643	1					
ANR	3270676	ExpressionStatement	service = NULLSTRING	5888:15:158138:158156	3270643	1	True				
ANR	3270677	AssignmentExpression	service = NULLSTRING		3270643	0		=			
ANR	3270678	Identifier	service		3270643	0					
ANR	3270679	Identifier	NULLSTRING		3270643	1					
ANR	3270680	IfStatement	if ( ! job_id )		3270643	4					
ANR	3270681	Condition	! job_id	5889:5:158163:158169	3270643	0	True				
ANR	3270682	UnaryOperationExpression	! job_id		3270643	0					
ANR	3270683	UnaryOperator	!		3270643	0					
ANR	3270684	Identifier	job_id		3270643	1					
ANR	3270685	ExpressionStatement	job_id = NULLSTRING	5889:14:158172:158189	3270643	1	True				
ANR	3270686	AssignmentExpression	job_id = NULLSTRING		3270643	0		=			
ANR	3270687	Identifier	job_id		3270643	0					
ANR	3270688	Identifier	NULLSTRING		3270643	1					
ANR	3270689	IdentifierDeclStatement	std :: string reqline ;	5890:1:158192:158211	3270643	5	True				
ANR	3270690	IdentifierDecl	reqline		3270643	0					
ANR	3270691	IdentifierDeclType	std :: string		3270643	0					
ANR	3270692	Identifier	reqline		3270643	1					
ANR	3270693	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	5891:1:158214:158262	3270643	6	True				
ANR	3270694	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3270643	0					
ANR	3270695	IdentifierDeclType	char *		3270643	0					
ANR	3270696	Identifier	esc1		3270643	1					
ANR	3270697	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3270643	2		=			
ANR	3270698	Identifier	esc1		3270643	0					
ANR	3270699	CallExpression	strdup ( escapeGahpString ( service ) )		3270643	1					
ANR	3270700	Callee	strdup		3270643	0					
ANR	3270701	Identifier	strdup		3270643	0					
ANR	3270702	ArgumentList	escapeGahpString ( service )		3270643	1					
ANR	3270703	Argument	escapeGahpString ( service )		3270643	0					
ANR	3270704	CallExpression	escapeGahpString ( service )		3270643	0					
ANR	3270705	Callee	escapeGahpString		3270643	0					
ANR	3270706	Identifier	escapeGahpString		3270643	0					
ANR	3270707	ArgumentList	service		3270643	1					
ANR	3270708	Argument	service		3270643	0					
ANR	3270709	Identifier	service		3270643	0					
ANR	3270710	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	5892:1:158265:158312	3270643	7	True				
ANR	3270711	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3270643	0					
ANR	3270712	IdentifierDeclType	char *		3270643	0					
ANR	3270713	Identifier	esc2		3270643	1					
ANR	3270714	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3270643	2		=			
ANR	3270715	Identifier	esc2		3270643	0					
ANR	3270716	CallExpression	strdup ( escapeGahpString ( job_id ) )		3270643	1					
ANR	3270717	Callee	strdup		3270643	0					
ANR	3270718	Identifier	strdup		3270643	0					
ANR	3270719	ArgumentList	escapeGahpString ( job_id )		3270643	1					
ANR	3270720	Argument	escapeGahpString ( job_id )		3270643	0					
ANR	3270721	CallExpression	escapeGahpString ( job_id )		3270643	0					
ANR	3270722	Callee	escapeGahpString		3270643	0					
ANR	3270723	Identifier	escapeGahpString		3270643	0					
ANR	3270724	ArgumentList	job_id		3270643	1					
ANR	3270725	Argument	job_id		3270643	0					
ANR	3270726	Identifier	job_id		3270643	0					
ANR	3270727	IdentifierDeclStatement	int job_number = 1 ;	5893:1:158315:158333	3270643	8	True				
ANR	3270728	IdentifierDecl	job_number = 1		3270643	0					
ANR	3270729	IdentifierDeclType	int		3270643	0					
ANR	3270730	Identifier	job_number		3270643	1					
ANR	3270731	AssignmentExpression	job_number = 1		3270643	2		=			
ANR	3270732	Identifier	job_number		3270643	0					
ANR	3270733	PrimaryExpression	1		3270643	1					
ANR	3270734	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 ) ;"	5894:1:158365:158425	3270643	9	True				
ANR	3270735	IdentifierDecl	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270643	0					
ANR	3270736	IdentifierDeclType	int		3270643	0					
ANR	3270737	Identifier	x		3270643	1					
ANR	3270738	AssignmentExpression	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270643	2		=			
ANR	3270739	Identifier	x		3270643	0					
ANR	3270740	CallExpression	"sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270643	1					
ANR	3270741	Callee	sprintf		3270643	0					
ANR	3270742	Identifier	sprintf		3270643	0					
ANR	3270743	ArgumentList	reqline		3270643	1					
ANR	3270744	Argument	reqline		3270643	0					
ANR	3270745	Identifier	reqline		3270643	0					
ANR	3270746	Argument	"""%s %d %s"""		3270643	1					
ANR	3270747	PrimaryExpression	"""%s %d %s"""		3270643	0					
ANR	3270748	Argument	esc1		3270643	2					
ANR	3270749	Identifier	esc1		3270643	0					
ANR	3270750	Argument	job_number		3270643	3					
ANR	3270751	Identifier	job_number		3270643	0					
ANR	3270752	Argument	esc2		3270643	4					
ANR	3270753	Identifier	esc2		3270643	0					
ANR	3270754	ExpressionStatement	free ( esc1 )	5895:1:158428:158440	3270643	10	True				
ANR	3270755	CallExpression	free ( esc1 )		3270643	0					
ANR	3270756	Callee	free		3270643	0					
ANR	3270757	Identifier	free		3270643	0					
ANR	3270758	ArgumentList	esc1		3270643	1					
ANR	3270759	Argument	esc1		3270643	0					
ANR	3270760	Identifier	esc1		3270643	0					
ANR	3270761	ExpressionStatement	free ( esc2 )	5896:1:158443:158455	3270643	11	True				
ANR	3270762	CallExpression	free ( esc2 )		3270643	0					
ANR	3270763	Callee	free		3270643	0					
ANR	3270764	Identifier	free		3270643	0					
ANR	3270765	ArgumentList	esc2		3270643	1					
ANR	3270766	Argument	esc2		3270643	0					
ANR	3270767	Identifier	esc2		3270643	0					
ANR	3270768	ExpressionStatement	ASSERT ( x > 0 )	5897:1:158458:158473	3270643	12	True				
ANR	3270769	CallExpression	ASSERT ( x > 0 )		3270643	0					
ANR	3270770	Callee	ASSERT		3270643	0					
ANR	3270771	Identifier	ASSERT		3270643	0					
ANR	3270772	ArgumentList	x > 0		3270643	1					
ANR	3270773	Argument	x > 0		3270643	0					
ANR	3270774	RelationalExpression	x > 0		3270643	0		>			
ANR	3270775	Identifier	x		3270643	0					
ANR	3270776	PrimaryExpression	0		3270643	1					
ANR	3270777	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5898:1:158476:158509	3270643	13	True				
ANR	3270778	IdentifierDecl	* buf = reqline . c_str ( )		3270643	0					
ANR	3270779	IdentifierDeclType	const char *		3270643	0					
ANR	3270780	Identifier	buf		3270643	1					
ANR	3270781	AssignmentExpression	* buf = reqline . c_str ( )		3270643	2		=			
ANR	3270782	Identifier	buf		3270643	0					
ANR	3270783	CallExpression	reqline . c_str ( )		3270643	1					
ANR	3270784	Callee	reqline . c_str		3270643	0					
ANR	3270785	MemberAccess	reqline . c_str		3270643	0					
ANR	3270786	Identifier	reqline		3270643	0					
ANR	3270787	Identifier	c_str		3270643	1					
ANR	3270788	ArgumentList			3270643	1					
ANR	3270789	IfStatement	"if ( ! is_pending ( command , buf ) )"		3270643	14					
ANR	3270790	Condition	"! is_pending ( command , buf )"	5902:6:158610:158633	3270643	0	True				
ANR	3270791	UnaryOperationExpression	"! is_pending ( command , buf )"		3270643	0					
ANR	3270792	UnaryOperator	!		3270643	0					
ANR	3270793	CallExpression	"is_pending ( command , buf )"		3270643	1					
ANR	3270794	Callee	is_pending		3270643	0					
ANR	3270795	Identifier	is_pending		3270643	0					
ANR	3270796	ArgumentList	command		3270643	1					
ANR	3270797	Argument	command		3270643	0					
ANR	3270798	Identifier	command		3270643	0					
ANR	3270799	Argument	buf		3270643	1					
ANR	3270800	Identifier	buf		3270643	0					
ANR	3270801	CompoundStatement		24:33:752:752	3270643	1					
ANR	3270802	IfStatement	if ( m_mode == results_only )		3270643	0					
ANR	3270803	Condition	m_mode == results_only	5905:7:158742:158763	3270643	0	True				
ANR	3270804	EqualityExpression	m_mode == results_only		3270643	0		==			
ANR	3270805	Identifier	m_mode		3270643	0					
ANR	3270806	Identifier	results_only		3270643	1					
ANR	3270807	CompoundStatement		27:32:882:882	3270643	1					
ANR	3270808	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5906:3:158772:158811	3270643	0	True				
ANR	3270809	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3270643	0					
ANR	3270810	ExpressionStatement	"now_pending ( command , buf , normal_proxy , medium_prio )"	5908:2:158819:158868	3270643	1	True				
ANR	3270811	CallExpression	"now_pending ( command , buf , normal_proxy , medium_prio )"		3270643	0					
ANR	3270812	Callee	now_pending		3270643	0					
ANR	3270813	Identifier	now_pending		3270643	0					
ANR	3270814	ArgumentList	command		3270643	1					
ANR	3270815	Argument	command		3270643	0					
ANR	3270816	Identifier	command		3270643	0					
ANR	3270817	Argument	buf		3270643	1					
ANR	3270818	Identifier	buf		3270643	0					
ANR	3270819	Argument	normal_proxy		3270643	2					
ANR	3270820	Identifier	normal_proxy		3270643	0					
ANR	3270821	Argument	medium_prio		3270643	3					
ANR	3270822	Identifier	medium_prio		3270643	0					
ANR	3270823	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5914:1:158962:159013	3270643	15	True				
ANR	3270824	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3270643	0					
ANR	3270825	IdentifierDeclType	Gahp_Args *		3270643	0					
ANR	3270826	Identifier	result		3270643	1					
ANR	3270827	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3270643	2		=			
ANR	3270828	Identifier	result		3270643	0					
ANR	3270829	CallExpression	"get_pending_result ( command , buf )"		3270643	1					
ANR	3270830	Callee	get_pending_result		3270643	0					
ANR	3270831	Identifier	get_pending_result		3270643	0					
ANR	3270832	ArgumentList	command		3270643	1					
ANR	3270833	Argument	command		3270643	0					
ANR	3270834	Identifier	command		3270643	0					
ANR	3270835	Argument	buf		3270643	1					
ANR	3270836	Identifier	buf		3270643	0					
ANR	3270837	IfStatement	if ( result )		3270643	16					
ANR	3270838	Condition	result	5915:6:159021:159026	3270643	0	True				
ANR	3270839	Identifier	result		3270643	0					
ANR	3270840	CompoundStatement		42:2:1240:1246	3270643	1					
ANR	3270841	IfStatement	if ( result -> argc != 2 )		3270643	0					
ANR	3270842	Condition	result -> argc != 2	5917:6:159062:159078	3270643	0	True				
ANR	3270843	EqualityExpression	result -> argc != 2		3270643	0		!=			
ANR	3270844	PtrMemberAccess	result -> argc		3270643	0					
ANR	3270845	Identifier	result		3270643	0					
ANR	3270846	Identifier	argc		3270643	1					
ANR	3270847	PrimaryExpression	2		3270643	1					
ANR	3270848	CompoundStatement		39:25:1196:1196	3270643	1					
ANR	3270849	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5918:3:159086:159117	3270643	0	True				
ANR	3270850	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3270643	0					
ANR	3270851	Callee	EXCEPT		3270643	0					
ANR	3270852	Identifier	EXCEPT		3270643	0					
ANR	3270853	ArgumentList	"""Bad %s Result"""		3270643	1					
ANR	3270854	Argument	"""Bad %s Result"""		3270643	0					
ANR	3270855	PrimaryExpression	"""Bad %s Result"""		3270643	0					
ANR	3270856	Argument	command		3270643	1					
ANR	3270857	Identifier	command		3270643	0					
ANR	3270858	IdentifierDeclStatement	int rc ;	5920:2:159125:159131	3270643	1	True				
ANR	3270859	IdentifierDecl	rc		3270643	0					
ANR	3270860	IdentifierDeclType	int		3270643	0					
ANR	3270861	Identifier	rc		3270643	1					
ANR	3270862	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3270643	2					
ANR	3270863	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	5921:6:159139:159178	3270643	0	True				
ANR	3270864	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3270643	0		==			
ANR	3270865	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3270643	0					
ANR	3270866	Callee	strcmp		3270643	0					
ANR	3270867	Identifier	strcmp		3270643	0					
ANR	3270868	ArgumentList	result -> argv [ 1 ]		3270643	1					
ANR	3270869	Argument	result -> argv [ 1 ]		3270643	0					
ANR	3270870	ArrayIndexing	result -> argv [ 1 ]		3270643	0					
ANR	3270871	PtrMemberAccess	result -> argv		3270643	0					
ANR	3270872	Identifier	result		3270643	0					
ANR	3270873	Identifier	argv		3270643	1					
ANR	3270874	PrimaryExpression	1		3270643	1					
ANR	3270875	Argument	NULLSTRING		3270643	1					
ANR	3270876	Identifier	NULLSTRING		3270643	0					
ANR	3270877	PrimaryExpression	0		3270643	1					
ANR	3270878	CompoundStatement		43:48:1296:1296	3270643	1					
ANR	3270879	ExpressionStatement	rc = 0	5922:3:159186:159192	3270643	0	True				
ANR	3270880	AssignmentExpression	rc = 0		3270643	0		=			
ANR	3270881	Identifier	rc		3270643	0					
ANR	3270882	PrimaryExpression	0		3270643	1					
ANR	3270883	ElseStatement	else		3270643	0					
ANR	3270884	CompoundStatement		45:9:1318:1318	3270643	0					
ANR	3270885	ExpressionStatement	rc = 1	5924:3:159208:159214	3270643	0	True				
ANR	3270886	AssignmentExpression	rc = 1		3270643	0		=			
ANR	3270887	Identifier	rc		3270643	0					
ANR	3270888	PrimaryExpression	1		3270643	1					
ANR	3270889	ExpressionStatement	error_string = result -> argv [ 1 ]	5925:3:159219:159249	3270643	1	True				
ANR	3270890	AssignmentExpression	error_string = result -> argv [ 1 ]		3270643	0		=			
ANR	3270891	Identifier	error_string		3270643	0					
ANR	3270892	ArrayIndexing	result -> argv [ 1 ]		3270643	1					
ANR	3270893	PtrMemberAccess	result -> argv		3270643	0					
ANR	3270894	Identifier	result		3270643	0					
ANR	3270895	Identifier	argv		3270643	1					
ANR	3270896	PrimaryExpression	1		3270643	1					
ANR	3270897	Statement	delete	5928:2:159258:159263	3270643	3	True				
ANR	3270898	ExpressionStatement	result	5928:9:159265:159271	3270643	4	True				
ANR	3270899	Identifier	result		3270643	0					
ANR	3270900	ReturnStatement	return rc ;	5929:2:159275:159284	3270643	5	True				
ANR	3270901	Identifier	rc		3270643	0					
ANR	3270902	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3270643	17					
ANR	3270903	Condition	"check_pending_timeout ( command , buf )"	5933:6:159341:159374	3270643	0	True				
ANR	3270904	CallExpression	"check_pending_timeout ( command , buf )"		3270643	0					
ANR	3270905	Callee	check_pending_timeout		3270643	0					
ANR	3270906	Identifier	check_pending_timeout		3270643	0					
ANR	3270907	ArgumentList	command		3270643	1					
ANR	3270908	Argument	command		3270643	0					
ANR	3270909	Identifier	command		3270643	0					
ANR	3270910	Argument	buf		3270643	1					
ANR	3270911	Identifier	buf		3270643	0					
ANR	3270912	CompoundStatement		55:43:1493:1493	3270643	1					
ANR	3270913	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	5935:2:159414:159462	3270643	0	True				
ANR	3270914	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3270643	0					
ANR	3270915	Callee	sprintf		3270643	0					
ANR	3270916	Identifier	sprintf		3270643	0					
ANR	3270917	ArgumentList	error_string		3270643	1					
ANR	3270918	Argument	error_string		3270643	0					
ANR	3270919	Identifier	error_string		3270643	0					
ANR	3270920	Argument	"""%s timed out"""		3270643	1					
ANR	3270921	PrimaryExpression	"""%s timed out"""		3270643	0					
ANR	3270922	Argument	command		3270643	2					
ANR	3270923	Identifier	command		3270643	0					
ANR	3270924	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	5936:2:159466:159501	3270643	1	True				
ANR	3270925	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3270643	0					
ANR	3270926	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	5940:1:159561:159594	3270643	18	True				
ANR	3270927	Identifier	GAHPCLIENT_COMMAND_PENDING		3270643	0					
ANR	3270928	ReturnType	int		3270643	1					
ANR	3270929	Identifier	GahpClient :: cream_job_resume		3270643	2					
ANR	3270930	ParameterList	"const char * service , const char * job_id"		3270643	3					
ANR	3270931	Parameter	const char * service	5878:29:157843:157861	3270643	0	True				
ANR	3270932	ParameterType	const char *		3270643	0					
ANR	3270933	Identifier	service		3270643	1					
ANR	3270934	Parameter	const char * job_id	5878:50:157864:157881	3270643	1	True				
ANR	3270935	ParameterType	const char *		3270643	0					
ANR	3270936	Identifier	job_id		3270643	1					
ANR	3270937	CFGEntryNode	ENTRY		3270643		True				
ANR	3270938	CFGExitNode	EXIT		3270643		True				
ANR	3270939	Symbol	server		3270643						
ANR	3270940	Symbol	server -> m_commands_supported		3270643						
ANR	3270941	Symbol	escapeGahpString		3270643						
ANR	3270942	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3270643						
ANR	3270943	Symbol	* server		3270643						
ANR	3270944	Symbol	reqline . c_str		3270643						
ANR	3270945	Symbol	results_only		3270643						
ANR	3270946	Symbol	result -> argv		3270643						
ANR	3270947	Symbol	* server -> m_commands_supported		3270643						
ANR	3270948	Symbol	sprintf		3270643						
ANR	3270949	Symbol	result		3270643						
ANR	3270950	Symbol	normal_proxy		3270643						
ANR	3270951	Symbol	* result		3270643						
ANR	3270952	Symbol	server -> m_commands_supported -> contains_anycase		3270643						
ANR	3270953	Symbol	GAHPCLIENT_COMMAND_PENDING		3270643						
ANR	3270954	Symbol	reqline		3270643						
ANR	3270955	Symbol	job_number		3270643						
ANR	3270956	Symbol	m_mode		3270643						
ANR	3270957	Symbol	* result -> argv		3270643						
ANR	3270958	Symbol	strcmp		3270643						
ANR	3270959	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3270643						
ANR	3270960	Symbol	* * result		3270643						
ANR	3270961	Symbol	medium_prio		3270643						
ANR	3270962	Symbol	NULLSTRING		3270643						
ANR	3270963	Symbol	command		3270643						
ANR	3270964	Symbol	get_pending_result		3270643						
ANR	3270965	Symbol	rc		3270643						
ANR	3270966	Symbol	error_string		3270643						
ANR	3270967	Symbol	esc2		3270643						
ANR	3270968	Symbol	buf		3270643						
ANR	3270969	Symbol	esc1		3270643						
ANR	3270970	Symbol	service		3270643						
ANR	3270971	Symbol	job_id		3270643						
ANR	3270972	Symbol	x		3270643						
ANR	3270973	Symbol	result -> argc		3270643						
ANR	3270974	Symbol	FALSE		3270643						
ANR	3270975	Symbol	* * server		3270643						
ANR	3270976	Symbol	strdup		3270643						
ANR	3270977	Symbol	check_pending_timeout		3270643						
ANR	3270978	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3270643						
ANR	3270979	Symbol	is_pending		3270643						
ANR	3270980	Function	GahpClient :: cream_job_status	5943:0:159599:161836							
ANR	3270981	FunctionDef	"GahpClient :: cream_job_status (const char * service , const char * job_id , char * * job_status , int * exit_code , char * * failure_reason)"		3270980	0					
ANR	3270982	CompoundStatement		5946:0:159741:161836	3270980	0					
ANR	3270983	Statement	static	5947:1:159744:159749	3270980	0	True				
ANR	3270984	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_STATUS"" ;"	5947:8:159751:159791	3270980	1	True				
ANR	3270985	IdentifierDecl	"* command = ""CREAM_JOB_STATUS"""		3270980	0					
ANR	3270986	IdentifierDeclType	const char *		3270980	0					
ANR	3270987	Identifier	command		3270980	1					
ANR	3270988	AssignmentExpression	"* command = ""CREAM_JOB_STATUS"""		3270980	2		=			
ANR	3270989	Identifier	command		3270980	0					
ANR	3270990	PrimaryExpression	"""CREAM_JOB_STATUS"""		3270980	1					
ANR	3270991	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3270980	2					
ANR	3270992	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	5950:6:159840:159901	3270980	0	True				
ANR	3270993	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3270980	0		==			
ANR	3270994	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3270980	0					
ANR	3270995	Callee	server -> m_commands_supported -> contains_anycase		3270980	0					
ANR	3270996	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3270980	0					
ANR	3270997	PtrMemberAccess	server -> m_commands_supported		3270980	0					
ANR	3270998	Identifier	server		3270980	0					
ANR	3270999	Identifier	m_commands_supported		3270980	1					
ANR	3271000	Identifier	contains_anycase		3270980	1					
ANR	3271001	ArgumentList	command		3270980	1					
ANR	3271002	Argument	command		3270980	0					
ANR	3271003	Identifier	command		3270980	0					
ANR	3271004	Identifier	FALSE		3270980	1					
ANR	3271005	CompoundStatement		5:70:162:162	3270980	1					
ANR	3271006	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	5951:2:159908:159947	3270980	0	True				
ANR	3271007	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3270980	0					
ANR	3271008	IfStatement	if ( ! service )		3270980	3					
ANR	3271009	Condition	! service	5955:5:159985:159992	3270980	0	True				
ANR	3271010	UnaryOperationExpression	! service		3270980	0					
ANR	3271011	UnaryOperator	!		3270980	0					
ANR	3271012	Identifier	service		3270980	1					
ANR	3271013	ExpressionStatement	service = NULLSTRING	5955:15:159995:160013	3270980	1	True				
ANR	3271014	AssignmentExpression	service = NULLSTRING		3270980	0		=			
ANR	3271015	Identifier	service		3270980	0					
ANR	3271016	Identifier	NULLSTRING		3270980	1					
ANR	3271017	IfStatement	if ( ! job_id )		3270980	4					
ANR	3271018	Condition	! job_id	5956:5:160020:160026	3270980	0	True				
ANR	3271019	UnaryOperationExpression	! job_id		3270980	0					
ANR	3271020	UnaryOperator	!		3270980	0					
ANR	3271021	Identifier	job_id		3270980	1					
ANR	3271022	ExpressionStatement	job_id = NULLSTRING	5956:14:160029:160046	3270980	1	True				
ANR	3271023	AssignmentExpression	job_id = NULLSTRING		3270980	0		=			
ANR	3271024	Identifier	job_id		3270980	0					
ANR	3271025	Identifier	NULLSTRING		3270980	1					
ANR	3271026	IdentifierDeclStatement	std :: string reqline ;	5957:1:160049:160068	3270980	5	True				
ANR	3271027	IdentifierDecl	reqline		3270980	0					
ANR	3271028	IdentifierDeclType	std :: string		3270980	0					
ANR	3271029	Identifier	reqline		3270980	1					
ANR	3271030	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	5958:1:160071:160119	3270980	6	True				
ANR	3271031	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3270980	0					
ANR	3271032	IdentifierDeclType	char *		3270980	0					
ANR	3271033	Identifier	esc1		3270980	1					
ANR	3271034	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3270980	2		=			
ANR	3271035	Identifier	esc1		3270980	0					
ANR	3271036	CallExpression	strdup ( escapeGahpString ( service ) )		3270980	1					
ANR	3271037	Callee	strdup		3270980	0					
ANR	3271038	Identifier	strdup		3270980	0					
ANR	3271039	ArgumentList	escapeGahpString ( service )		3270980	1					
ANR	3271040	Argument	escapeGahpString ( service )		3270980	0					
ANR	3271041	CallExpression	escapeGahpString ( service )		3270980	0					
ANR	3271042	Callee	escapeGahpString		3270980	0					
ANR	3271043	Identifier	escapeGahpString		3270980	0					
ANR	3271044	ArgumentList	service		3270980	1					
ANR	3271045	Argument	service		3270980	0					
ANR	3271046	Identifier	service		3270980	0					
ANR	3271047	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( job_id ) ) ;	5959:1:160122:160169	3270980	7	True				
ANR	3271048	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( job_id ) )		3270980	0					
ANR	3271049	IdentifierDeclType	char *		3270980	0					
ANR	3271050	Identifier	esc2		3270980	1					
ANR	3271051	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( job_id ) )		3270980	2		=			
ANR	3271052	Identifier	esc2		3270980	0					
ANR	3271053	CallExpression	strdup ( escapeGahpString ( job_id ) )		3270980	1					
ANR	3271054	Callee	strdup		3270980	0					
ANR	3271055	Identifier	strdup		3270980	0					
ANR	3271056	ArgumentList	escapeGahpString ( job_id )		3270980	1					
ANR	3271057	Argument	escapeGahpString ( job_id )		3270980	0					
ANR	3271058	CallExpression	escapeGahpString ( job_id )		3270980	0					
ANR	3271059	Callee	escapeGahpString		3270980	0					
ANR	3271060	Identifier	escapeGahpString		3270980	0					
ANR	3271061	ArgumentList	job_id		3270980	1					
ANR	3271062	Argument	job_id		3270980	0					
ANR	3271063	Identifier	job_id		3270980	0					
ANR	3271064	IdentifierDeclStatement	int job_number = 1 ;	5960:1:160172:160190	3270980	8	True				
ANR	3271065	IdentifierDecl	job_number = 1		3270980	0					
ANR	3271066	IdentifierDeclType	int		3270980	0					
ANR	3271067	Identifier	job_number		3270980	1					
ANR	3271068	AssignmentExpression	job_number = 1		3270980	2		=			
ANR	3271069	Identifier	job_number		3270980	0					
ANR	3271070	PrimaryExpression	1		3270980	1					
ANR	3271071	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 ) ;"	5961:1:160222:160282	3270980	9	True				
ANR	3271072	IdentifierDecl	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270980	0					
ANR	3271073	IdentifierDeclType	int		3270980	0					
ANR	3271074	Identifier	x		3270980	1					
ANR	3271075	AssignmentExpression	"x = sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270980	2		=			
ANR	3271076	Identifier	x		3270980	0					
ANR	3271077	CallExpression	"sprintf ( reqline , ""%s %d %s"" , esc1 , job_number , esc2 )"		3270980	1					
ANR	3271078	Callee	sprintf		3270980	0					
ANR	3271079	Identifier	sprintf		3270980	0					
ANR	3271080	ArgumentList	reqline		3270980	1					
ANR	3271081	Argument	reqline		3270980	0					
ANR	3271082	Identifier	reqline		3270980	0					
ANR	3271083	Argument	"""%s %d %s"""		3270980	1					
ANR	3271084	PrimaryExpression	"""%s %d %s"""		3270980	0					
ANR	3271085	Argument	esc1		3270980	2					
ANR	3271086	Identifier	esc1		3270980	0					
ANR	3271087	Argument	job_number		3270980	3					
ANR	3271088	Identifier	job_number		3270980	0					
ANR	3271089	Argument	esc2		3270980	4					
ANR	3271090	Identifier	esc2		3270980	0					
ANR	3271091	ExpressionStatement	free ( esc1 )	5962:1:160285:160297	3270980	10	True				
ANR	3271092	CallExpression	free ( esc1 )		3270980	0					
ANR	3271093	Callee	free		3270980	0					
ANR	3271094	Identifier	free		3270980	0					
ANR	3271095	ArgumentList	esc1		3270980	1					
ANR	3271096	Argument	esc1		3270980	0					
ANR	3271097	Identifier	esc1		3270980	0					
ANR	3271098	ExpressionStatement	free ( esc2 )	5963:1:160300:160312	3270980	11	True				
ANR	3271099	CallExpression	free ( esc2 )		3270980	0					
ANR	3271100	Callee	free		3270980	0					
ANR	3271101	Identifier	free		3270980	0					
ANR	3271102	ArgumentList	esc2		3270980	1					
ANR	3271103	Argument	esc2		3270980	0					
ANR	3271104	Identifier	esc2		3270980	0					
ANR	3271105	ExpressionStatement	ASSERT ( x > 0 )	5964:1:160315:160330	3270980	12	True				
ANR	3271106	CallExpression	ASSERT ( x > 0 )		3270980	0					
ANR	3271107	Callee	ASSERT		3270980	0					
ANR	3271108	Identifier	ASSERT		3270980	0					
ANR	3271109	ArgumentList	x > 0		3270980	1					
ANR	3271110	Argument	x > 0		3270980	0					
ANR	3271111	RelationalExpression	x > 0		3270980	0		>			
ANR	3271112	Identifier	x		3270980	0					
ANR	3271113	PrimaryExpression	0		3270980	1					
ANR	3271114	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	5965:1:160333:160366	3270980	13	True				
ANR	3271115	IdentifierDecl	* buf = reqline . c_str ( )		3270980	0					
ANR	3271116	IdentifierDeclType	const char *		3270980	0					
ANR	3271117	Identifier	buf		3270980	1					
ANR	3271118	AssignmentExpression	* buf = reqline . c_str ( )		3270980	2		=			
ANR	3271119	Identifier	buf		3270980	0					
ANR	3271120	CallExpression	reqline . c_str ( )		3270980	1					
ANR	3271121	Callee	reqline . c_str		3270980	0					
ANR	3271122	MemberAccess	reqline . c_str		3270980	0					
ANR	3271123	Identifier	reqline		3270980	0					
ANR	3271124	Identifier	c_str		3270980	1					
ANR	3271125	ArgumentList			3270980	1					
ANR	3271126	IfStatement	"if ( ! is_pending ( command , buf ) )"		3270980	14					
ANR	3271127	Condition	"! is_pending ( command , buf )"	5969:6:160467:160490	3270980	0	True				
ANR	3271128	UnaryOperationExpression	"! is_pending ( command , buf )"		3270980	0					
ANR	3271129	UnaryOperator	!		3270980	0					
ANR	3271130	CallExpression	"is_pending ( command , buf )"		3270980	1					
ANR	3271131	Callee	is_pending		3270980	0					
ANR	3271132	Identifier	is_pending		3270980	0					
ANR	3271133	ArgumentList	command		3270980	1					
ANR	3271134	Argument	command		3270980	0					
ANR	3271135	Identifier	command		3270980	0					
ANR	3271136	Argument	buf		3270980	1					
ANR	3271137	Identifier	buf		3270980	0					
ANR	3271138	CompoundStatement		24:33:752:752	3270980	1					
ANR	3271139	IfStatement	if ( m_mode == results_only )		3270980	0					
ANR	3271140	Condition	m_mode == results_only	5972:7:160599:160620	3270980	0	True				
ANR	3271141	EqualityExpression	m_mode == results_only		3270980	0		==			
ANR	3271142	Identifier	m_mode		3270980	0					
ANR	3271143	Identifier	results_only		3270980	1					
ANR	3271144	CompoundStatement		27:32:882:882	3270980	1					
ANR	3271145	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	5973:3:160629:160668	3270980	0	True				
ANR	3271146	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3270980	0					
ANR	3271147	ExpressionStatement	"now_pending ( command , buf , normal_proxy , medium_prio )"	5975:2:160676:160725	3270980	1	True				
ANR	3271148	CallExpression	"now_pending ( command , buf , normal_proxy , medium_prio )"		3270980	0					
ANR	3271149	Callee	now_pending		3270980	0					
ANR	3271150	Identifier	now_pending		3270980	0					
ANR	3271151	ArgumentList	command		3270980	1					
ANR	3271152	Argument	command		3270980	0					
ANR	3271153	Identifier	command		3270980	0					
ANR	3271154	Argument	buf		3270980	1					
ANR	3271155	Identifier	buf		3270980	0					
ANR	3271156	Argument	normal_proxy		3270980	2					
ANR	3271157	Identifier	normal_proxy		3270980	0					
ANR	3271158	Argument	medium_prio		3270980	3					
ANR	3271159	Identifier	medium_prio		3270980	0					
ANR	3271160	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	5981:1:160817:160868	3270980	15	True				
ANR	3271161	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3270980	0					
ANR	3271162	IdentifierDeclType	Gahp_Args *		3270980	0					
ANR	3271163	Identifier	result		3270980	1					
ANR	3271164	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3270980	2		=			
ANR	3271165	Identifier	result		3270980	0					
ANR	3271166	CallExpression	"get_pending_result ( command , buf )"		3270980	1					
ANR	3271167	Callee	get_pending_result		3270980	0					
ANR	3271168	Identifier	get_pending_result		3270980	0					
ANR	3271169	ArgumentList	command		3270980	1					
ANR	3271170	Argument	command		3270980	0					
ANR	3271171	Identifier	command		3270980	0					
ANR	3271172	Argument	buf		3270980	1					
ANR	3271173	Identifier	buf		3270980	0					
ANR	3271174	IfStatement	if ( result )		3270980	16					
ANR	3271175	Condition	result	5982:6:160876:160881	3270980	0	True				
ANR	3271176	Identifier	result		3270980	0					
ANR	3271177	CompoundStatement		48:2:1373:1379	3270980	1					
ANR	3271178	IfStatement	if ( result -> argc > 2 )		3270980	0					
ANR	3271179	Condition	result -> argc > 2	5984:6:160917:160932	3270980	0	True				
ANR	3271180	RelationalExpression	result -> argc > 2		3270980	0		>			
ANR	3271181	PtrMemberAccess	result -> argc		3270980	0					
ANR	3271182	Identifier	result		3270980	0					
ANR	3271183	Identifier	argc		3270980	1					
ANR	3271184	PrimaryExpression	2		3270980	1					
ANR	3271185	CompoundStatement		39:24:1193:1193	3270980	1					
ANR	3271186	IfStatement	if ( result -> argc != 3 + atoi ( result -> argv [ 2 ] ) * 4 )		3270980	0					
ANR	3271187	Condition	result -> argc != 3 + atoi ( result -> argv [ 2 ] ) * 4	5985:7:160944:160988	3270980	0	True				
ANR	3271188	EqualityExpression	result -> argc != 3 + atoi ( result -> argv [ 2 ] ) * 4		3270980	0		!=			
ANR	3271189	PtrMemberAccess	result -> argc		3270980	0					
ANR	3271190	Identifier	result		3270980	0					
ANR	3271191	Identifier	argc		3270980	1					
ANR	3271192	AdditiveExpression	3 + atoi ( result -> argv [ 2 ] ) * 4		3270980	1		+			
ANR	3271193	PrimaryExpression	3		3270980	0					
ANR	3271194	MultiplicativeExpression	atoi ( result -> argv [ 2 ] ) * 4		3270980	1		*			
ANR	3271195	CallExpression	atoi ( result -> argv [ 2 ] )		3270980	0					
ANR	3271196	Callee	atoi		3270980	0					
ANR	3271197	Identifier	atoi		3270980	0					
ANR	3271198	ArgumentList	result -> argv [ 2 ]		3270980	1					
ANR	3271199	Argument	result -> argv [ 2 ]		3270980	0					
ANR	3271200	ArrayIndexing	result -> argv [ 2 ]		3270980	0					
ANR	3271201	PtrMemberAccess	result -> argv		3270980	0					
ANR	3271202	Identifier	result		3270980	0					
ANR	3271203	Identifier	argv		3270980	1					
ANR	3271204	PrimaryExpression	2		3270980	1					
ANR	3271205	PrimaryExpression	4		3270980	1					
ANR	3271206	CompoundStatement		40:53:1248:1248	3270980	1					
ANR	3271207	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5986:4:160996:161027	3270980	0	True				
ANR	3271208	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3270980	0					
ANR	3271209	Callee	EXCEPT		3270980	0					
ANR	3271210	Identifier	EXCEPT		3270980	0					
ANR	3271211	ArgumentList	"""Bad %s Result"""		3270980	1					
ANR	3271212	Argument	"""Bad %s Result"""		3270980	0					
ANR	3271213	PrimaryExpression	"""Bad %s Result"""		3270980	0					
ANR	3271214	Argument	command		3270980	1					
ANR	3271215	Identifier	command		3270980	0					
ANR	3271216	ElseStatement	else		3270980	0					
ANR	3271217	IfStatement	if ( result -> argc != 2 )		3270980	0					
ANR	3271218	Condition	result -> argc != 2	5989:11:161049:161065	3270980	0	True				
ANR	3271219	EqualityExpression	result -> argc != 2		3270980	0		!=			
ANR	3271220	PtrMemberAccess	result -> argc		3270980	0					
ANR	3271221	Identifier	result		3270980	0					
ANR	3271222	Identifier	argc		3270980	1					
ANR	3271223	PrimaryExpression	2		3270980	1					
ANR	3271224	CompoundStatement		44:30:1326:1326	3270980	1					
ANR	3271225	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	5990:3:161073:161104	3270980	0	True				
ANR	3271226	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3270980	0					
ANR	3271227	Callee	EXCEPT		3270980	0					
ANR	3271228	Identifier	EXCEPT		3270980	0					
ANR	3271229	ArgumentList	"""Bad %s Result"""		3270980	1					
ANR	3271230	Argument	"""Bad %s Result"""		3270980	0					
ANR	3271231	PrimaryExpression	"""Bad %s Result"""		3270980	0					
ANR	3271232	Argument	command		3270980	1					
ANR	3271233	Identifier	command		3270980	0					
ANR	3271234	IdentifierDeclStatement	int rc ;	5993:2:161115:161121	3270980	1	True				
ANR	3271235	IdentifierDecl	rc		3270980	0					
ANR	3271236	IdentifierDeclType	int		3270980	0					
ANR	3271237	Identifier	rc		3270980	1					
ANR	3271238	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3270980	2					
ANR	3271239	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	5994:6:161129:161168	3270980	0	True				
ANR	3271240	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3270980	0		==			
ANR	3271241	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3270980	0					
ANR	3271242	Callee	strcmp		3270980	0					
ANR	3271243	Identifier	strcmp		3270980	0					
ANR	3271244	ArgumentList	result -> argv [ 1 ]		3270980	1					
ANR	3271245	Argument	result -> argv [ 1 ]		3270980	0					
ANR	3271246	ArrayIndexing	result -> argv [ 1 ]		3270980	0					
ANR	3271247	PtrMemberAccess	result -> argv		3270980	0					
ANR	3271248	Identifier	result		3270980	0					
ANR	3271249	Identifier	argv		3270980	1					
ANR	3271250	PrimaryExpression	1		3270980	1					
ANR	3271251	Argument	NULLSTRING		3270980	1					
ANR	3271252	Identifier	NULLSTRING		3270980	0					
ANR	3271253	PrimaryExpression	0		3270980	1					
ANR	3271254	CompoundStatement		49:48:1429:1429	3270980	1					
ANR	3271255	ExpressionStatement	rc = 0	5995:3:161176:161182	3270980	0	True				
ANR	3271256	AssignmentExpression	rc = 0		3270980	0		=			
ANR	3271257	Identifier	rc		3270980	0					
ANR	3271258	PrimaryExpression	0		3270980	1					
ANR	3271259	ElseStatement	else		3270980	0					
ANR	3271260	CompoundStatement		51:9:1451:1451	3270980	0					
ANR	3271261	ExpressionStatement	rc = 1	5997:3:161198:161204	3270980	0	True				
ANR	3271262	AssignmentExpression	rc = 1		3270980	0		=			
ANR	3271263	Identifier	rc		3270980	0					
ANR	3271264	PrimaryExpression	1		3270980	1					
ANR	3271265	ExpressionStatement	error_string = result -> argv [ 1 ]	5998:3:161209:161239	3270980	1	True				
ANR	3271266	AssignmentExpression	error_string = result -> argv [ 1 ]		3270980	0		=			
ANR	3271267	Identifier	error_string		3270980	0					
ANR	3271268	ArrayIndexing	result -> argv [ 1 ]		3270980	1					
ANR	3271269	PtrMemberAccess	result -> argv		3270980	0					
ANR	3271270	Identifier	result		3270980	0					
ANR	3271271	Identifier	argv		3270980	1					
ANR	3271272	PrimaryExpression	1		3270980	1					
ANR	3271273	IfStatement	if ( rc == 0 )		3270980	3					
ANR	3271274	Condition	rc == 0	6001:7:161255:161261	3270980	0	True				
ANR	3271275	EqualityExpression	rc == 0		3270980	0		==			
ANR	3271276	Identifier	rc		3270980	0					
ANR	3271277	PrimaryExpression	0		3270980	1					
ANR	3271278	CompoundStatement		56:17:1523:1523	3270980	1					
ANR	3271279	ExpressionStatement	* job_status = strdup ( result -> argv [ 4 ] )	6002:3:161270:161307	3270980	0	True				
ANR	3271280	AssignmentExpression	* job_status = strdup ( result -> argv [ 4 ] )		3270980	0		=			
ANR	3271281	UnaryOperationExpression	* job_status		3270980	0					
ANR	3271282	UnaryOperator	*		3270980	0					
ANR	3271283	Identifier	job_status		3270980	1					
ANR	3271284	CallExpression	strdup ( result -> argv [ 4 ] )		3270980	1					
ANR	3271285	Callee	strdup		3270980	0					
ANR	3271286	Identifier	strdup		3270980	0					
ANR	3271287	ArgumentList	result -> argv [ 4 ]		3270980	1					
ANR	3271288	Argument	result -> argv [ 4 ]		3270980	0					
ANR	3271289	ArrayIndexing	result -> argv [ 4 ]		3270980	0					
ANR	3271290	PtrMemberAccess	result -> argv		3270980	0					
ANR	3271291	Identifier	result		3270980	0					
ANR	3271292	Identifier	argv		3270980	1					
ANR	3271293	PrimaryExpression	4		3270980	1					
ANR	3271294	ExpressionStatement	* exit_code = atoi ( result -> argv [ 5 ] )	6003:3:161312:161346	3270980	1	True				
ANR	3271295	AssignmentExpression	* exit_code = atoi ( result -> argv [ 5 ] )		3270980	0		=			
ANR	3271296	UnaryOperationExpression	* exit_code		3270980	0					
ANR	3271297	UnaryOperator	*		3270980	0					
ANR	3271298	Identifier	exit_code		3270980	1					
ANR	3271299	CallExpression	atoi ( result -> argv [ 5 ] )		3270980	1					
ANR	3271300	Callee	atoi		3270980	0					
ANR	3271301	Identifier	atoi		3270980	0					
ANR	3271302	ArgumentList	result -> argv [ 5 ]		3270980	1					
ANR	3271303	Argument	result -> argv [ 5 ]		3270980	0					
ANR	3271304	ArrayIndexing	result -> argv [ 5 ]		3270980	0					
ANR	3271305	PtrMemberAccess	result -> argv		3270980	0					
ANR	3271306	Identifier	result		3270980	0					
ANR	3271307	Identifier	argv		3270980	1					
ANR	3271308	PrimaryExpression	5		3270980	1					
ANR	3271309	IfStatement	"if ( strcasecmp ( result -> argv [ 6 ] , NULLSTRING ) )"		3270980	2					
ANR	3271310	Condition	"strcasecmp ( result -> argv [ 6 ] , NULLSTRING )"	6004:8:161356:161394	3270980	0	True				
ANR	3271311	CallExpression	"strcasecmp ( result -> argv [ 6 ] , NULLSTRING )"		3270980	0					
ANR	3271312	Callee	strcasecmp		3270980	0					
ANR	3271313	Identifier	strcasecmp		3270980	0					
ANR	3271314	ArgumentList	result -> argv [ 6 ]		3270980	1					
ANR	3271315	Argument	result -> argv [ 6 ]		3270980	0					
ANR	3271316	ArrayIndexing	result -> argv [ 6 ]		3270980	0					
ANR	3271317	PtrMemberAccess	result -> argv		3270980	0					
ANR	3271318	Identifier	result		3270980	0					
ANR	3271319	Identifier	argv		3270980	1					
ANR	3271320	PrimaryExpression	6		3270980	1					
ANR	3271321	Argument	NULLSTRING		3270980	1					
ANR	3271322	Identifier	NULLSTRING		3270980	0					
ANR	3271323	CompoundStatement		59:50:1656:1656	3270980	1					
ANR	3271324	ExpressionStatement	* failure_reason = strdup ( result -> argv [ 6 ] )	6005:4:161404:161445	3270980	0	True				
ANR	3271325	AssignmentExpression	* failure_reason = strdup ( result -> argv [ 6 ] )		3270980	0		=			
ANR	3271326	UnaryOperationExpression	* failure_reason		3270980	0					
ANR	3271327	UnaryOperator	*		3270980	0					
ANR	3271328	Identifier	failure_reason		3270980	1					
ANR	3271329	CallExpression	strdup ( result -> argv [ 6 ] )		3270980	1					
ANR	3271330	Callee	strdup		3270980	0					
ANR	3271331	Identifier	strdup		3270980	0					
ANR	3271332	ArgumentList	result -> argv [ 6 ]		3270980	1					
ANR	3271333	Argument	result -> argv [ 6 ]		3270980	0					
ANR	3271334	ArrayIndexing	result -> argv [ 6 ]		3270980	0					
ANR	3271335	PtrMemberAccess	result -> argv		3270980	0					
ANR	3271336	Identifier	result		3270980	0					
ANR	3271337	Identifier	argv		3270980	1					
ANR	3271338	PrimaryExpression	6		3270980	1					
ANR	3271339	ElseStatement	else		3270980	0					
ANR	3271340	CompoundStatement		61:10:1715:1715	3270980	0					
ANR	3271341	ExpressionStatement	* failure_reason = NULL	6007:4:161463:161485	3270980	0	True				
ANR	3271342	AssignmentExpression	* failure_reason = NULL		3270980	0		=			
ANR	3271343	UnaryOperationExpression	* failure_reason		3270980	0					
ANR	3271344	UnaryOperator	*		3270980	0					
ANR	3271345	Identifier	failure_reason		3270980	1					
ANR	3271346	Identifier	NULL		3270980	1					
ANR	3271347	Statement	delete	6010:2:161498:161503	3270980	4	True				
ANR	3271348	ExpressionStatement	result	6010:9:161505:161511	3270980	5	True				
ANR	3271349	Identifier	result		3270980	0					
ANR	3271350	ReturnStatement	return rc ;	6011:2:161515:161524	3270980	6	True				
ANR	3271351	Identifier	rc		3270980	0					
ANR	3271352	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3270980	17					
ANR	3271353	Condition	"check_pending_timeout ( command , buf )"	6015:6:161581:161614	3270980	0	True				
ANR	3271354	CallExpression	"check_pending_timeout ( command , buf )"		3270980	0					
ANR	3271355	Callee	check_pending_timeout		3270980	0					
ANR	3271356	Identifier	check_pending_timeout		3270980	0					
ANR	3271357	ArgumentList	command		3270980	1					
ANR	3271358	Argument	command		3270980	0					
ANR	3271359	Identifier	command		3270980	0					
ANR	3271360	Argument	buf		3270980	1					
ANR	3271361	Identifier	buf		3270980	0					
ANR	3271362	CompoundStatement		70:43:1876:1876	3270980	1					
ANR	3271363	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6017:2:161654:161702	3270980	0	True				
ANR	3271364	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3270980	0					
ANR	3271365	Callee	sprintf		3270980	0					
ANR	3271366	Identifier	sprintf		3270980	0					
ANR	3271367	ArgumentList	error_string		3270980	1					
ANR	3271368	Argument	error_string		3270980	0					
ANR	3271369	Identifier	error_string		3270980	0					
ANR	3271370	Argument	"""%s timed out"""		3270980	1					
ANR	3271371	PrimaryExpression	"""%s timed out"""		3270980	0					
ANR	3271372	Argument	command		3270980	2					
ANR	3271373	Identifier	command		3270980	0					
ANR	3271374	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6018:2:161706:161741	3270980	1	True				
ANR	3271375	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3270980	0					
ANR	3271376	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6022:1:161801:161834	3270980	18	True				
ANR	3271377	Identifier	GAHPCLIENT_COMMAND_PENDING		3270980	0					
ANR	3271378	ReturnType	int		3270980	1					
ANR	3271379	Identifier	GahpClient :: cream_job_status		3270980	2					
ANR	3271380	ParameterList	"const char * service , const char * job_id , char * * job_status , int * exit_code , char * * failure_reason"		3270980	3					
ANR	3271381	Parameter	const char * service	5944:29:159632:159650	3270980	0	True				
ANR	3271382	ParameterType	const char *		3270980	0					
ANR	3271383	Identifier	service		3270980	1					
ANR	3271384	Parameter	const char * job_id	5944:50:159653:159670	3270980	1	True				
ANR	3271385	ParameterType	const char *		3270980	0					
ANR	3271386	Identifier	job_id		3270980	1					
ANR	3271387	Parameter	char * * job_status	5945:9:159683:159699	3270980	2	True				
ANR	3271388	ParameterType	char * *		3270980	0					
ANR	3271389	Identifier	job_status		3270980	1					
ANR	3271390	Parameter	int * exit_code	5945:28:159702:159715	3270980	3	True				
ANR	3271391	ParameterType	int *		3270980	0					
ANR	3271392	Identifier	exit_code		3270980	1					
ANR	3271393	Parameter	char * * failure_reason	5945:44:159718:159738	3270980	4	True				
ANR	3271394	ParameterType	char * *		3270980	0					
ANR	3271395	Identifier	failure_reason		3270980	1					
ANR	3271396	CFGEntryNode	ENTRY		3270980		True				
ANR	3271397	CFGExitNode	EXIT		3270980		True				
ANR	3271398	Symbol	server -> m_commands_supported		3270980						
ANR	3271399	Symbol	* failure_reason		3270980						
ANR	3271400	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3270980						
ANR	3271401	Symbol	sprintf		3270980						
ANR	3271402	Symbol	server -> m_commands_supported -> contains_anycase		3270980						
ANR	3271403	Symbol	GAHPCLIENT_COMMAND_PENDING		3270980						
ANR	3271404	Symbol	job_number		3270980						
ANR	3271405	Symbol	strcasecmp		3270980						
ANR	3271406	Symbol	strcmp		3270980						
ANR	3271407	Symbol	NULL		3270980						
ANR	3271408	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3270980						
ANR	3271409	Symbol	* * result		3270980						
ANR	3271410	Symbol	medium_prio		3270980						
ANR	3271411	Symbol	* job_status		3270980						
ANR	3271412	Symbol	get_pending_result		3270980						
ANR	3271413	Symbol	job_status		3270980						
ANR	3271414	Symbol	rc		3270980						
ANR	3271415	Symbol	exit_code		3270980						
ANR	3271416	Symbol	is_pending		3270980						
ANR	3271417	Symbol	server		3270980						
ANR	3271418	Symbol	escapeGahpString		3270980						
ANR	3271419	Symbol	* server		3270980						
ANR	3271420	Symbol	reqline . c_str		3270980						
ANR	3271421	Symbol	results_only		3270980						
ANR	3271422	Symbol	result -> argv		3270980						
ANR	3271423	Symbol	* server -> m_commands_supported		3270980						
ANR	3271424	Symbol	result		3270980						
ANR	3271425	Symbol	normal_proxy		3270980						
ANR	3271426	Symbol	* result		3270980						
ANR	3271427	Symbol	reqline		3270980						
ANR	3271428	Symbol	m_mode		3270980						
ANR	3271429	Symbol	* result -> argv		3270980						
ANR	3271430	Symbol	atoi		3270980						
ANR	3271431	Symbol	failure_reason		3270980						
ANR	3271432	Symbol	NULLSTRING		3270980						
ANR	3271433	Symbol	command		3270980						
ANR	3271434	Symbol	error_string		3270980						
ANR	3271435	Symbol	esc2		3270980						
ANR	3271436	Symbol	buf		3270980						
ANR	3271437	Symbol	* exit_code		3270980						
ANR	3271438	Symbol	esc1		3270980						
ANR	3271439	Symbol	service		3270980						
ANR	3271440	Symbol	job_id		3270980						
ANR	3271441	Symbol	x		3270980						
ANR	3271442	Symbol	result -> argc		3270980						
ANR	3271443	Symbol	FALSE		3270980						
ANR	3271444	Symbol	* * server		3270980						
ANR	3271445	Symbol	strdup		3270980						
ANR	3271446	Symbol	check_pending_timeout		3270980						
ANR	3271447	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3270980						
ANR	3271448	Function	GahpClient :: cream_job_status_all	6025:0:161839:164309							
ANR	3271449	FunctionDef	"GahpClient :: cream_job_status_all (const char * service , GahpClient :: CreamJobStatusMap & results)"		3271448	0					
ANR	3271450	CompoundStatement		6028:0:161941:164309	3271448	0					
ANR	3271451	Statement	static	6029:1:161944:161949	3271448	0	True				
ANR	3271452	IdentifierDeclStatement	"const char * command = ""CREAM_JOB_STATUS"" ;"	6029:8:161951:161991	3271448	1	True				
ANR	3271453	IdentifierDecl	"* command = ""CREAM_JOB_STATUS"""		3271448	0					
ANR	3271454	IdentifierDeclType	const char *		3271448	0					
ANR	3271455	Identifier	command		3271448	1					
ANR	3271456	AssignmentExpression	"* command = ""CREAM_JOB_STATUS"""		3271448	2		=			
ANR	3271457	Identifier	command		3271448	0					
ANR	3271458	PrimaryExpression	"""CREAM_JOB_STATUS"""		3271448	1					
ANR	3271459	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3271448	2					
ANR	3271460	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6032:6:162040:162101	3271448	0	True				
ANR	3271461	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3271448	0		==			
ANR	3271462	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3271448	0					
ANR	3271463	Callee	server -> m_commands_supported -> contains_anycase		3271448	0					
ANR	3271464	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3271448	0					
ANR	3271465	PtrMemberAccess	server -> m_commands_supported		3271448	0					
ANR	3271466	Identifier	server		3271448	0					
ANR	3271467	Identifier	m_commands_supported		3271448	1					
ANR	3271468	Identifier	contains_anycase		3271448	1					
ANR	3271469	ArgumentList	command		3271448	1					
ANR	3271470	Argument	command		3271448	0					
ANR	3271471	Identifier	command		3271448	0					
ANR	3271472	Identifier	FALSE		3271448	1					
ANR	3271473	CompoundStatement		5:70:162:162	3271448	1					
ANR	3271474	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6033:2:162108:162147	3271448	0	True				
ANR	3271475	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3271448	0					
ANR	3271476	IdentifierDeclStatement	std :: string reqline ;	6036:1:162154:162173	3271448	3	True				
ANR	3271477	IdentifierDecl	reqline		3271448	0					
ANR	3271478	IdentifierDeclType	std :: string		3271448	0					
ANR	3271479	Identifier	reqline		3271448	1					
ANR	3271480	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	6038:1:162177:162225	3271448	4	True				
ANR	3271481	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3271448	0					
ANR	3271482	IdentifierDeclType	char *		3271448	0					
ANR	3271483	Identifier	esc1		3271448	1					
ANR	3271484	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3271448	2		=			
ANR	3271485	Identifier	esc1		3271448	0					
ANR	3271486	CallExpression	strdup ( escapeGahpString ( service ) )		3271448	1					
ANR	3271487	Callee	strdup		3271448	0					
ANR	3271488	Identifier	strdup		3271448	0					
ANR	3271489	ArgumentList	escapeGahpString ( service )		3271448	1					
ANR	3271490	Argument	escapeGahpString ( service )		3271448	0					
ANR	3271491	CallExpression	escapeGahpString ( service )		3271448	0					
ANR	3271492	Callee	escapeGahpString		3271448	0					
ANR	3271493	Identifier	escapeGahpString		3271448	0					
ANR	3271494	ArgumentList	service		3271448	1					
ANR	3271495	Argument	service		3271448	0					
ANR	3271496	Identifier	service		3271448	0					
ANR	3271497	IdentifierDeclStatement	int job_number = 0 ;	6039:1:162228:162246	3271448	5	True				
ANR	3271498	IdentifierDecl	job_number = 0		3271448	0					
ANR	3271499	IdentifierDeclType	int		3271448	0					
ANR	3271500	Identifier	job_number		3271448	1					
ANR	3271501	AssignmentExpression	job_number = 0		3271448	2		=			
ANR	3271502	Identifier	job_number		3271448	0					
ANR	3271503	PrimaryExpression	0		3271448	1					
ANR	3271504	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %d"" , esc1 , job_number ) ;"	6040:1:162258:162309	3271448	6	True				
ANR	3271505	IdentifierDecl	"x = sprintf ( reqline , ""%s %d"" , esc1 , job_number )"		3271448	0					
ANR	3271506	IdentifierDeclType	int		3271448	0					
ANR	3271507	Identifier	x		3271448	1					
ANR	3271508	AssignmentExpression	"x = sprintf ( reqline , ""%s %d"" , esc1 , job_number )"		3271448	2		=			
ANR	3271509	Identifier	x		3271448	0					
ANR	3271510	CallExpression	"sprintf ( reqline , ""%s %d"" , esc1 , job_number )"		3271448	1					
ANR	3271511	Callee	sprintf		3271448	0					
ANR	3271512	Identifier	sprintf		3271448	0					
ANR	3271513	ArgumentList	reqline		3271448	1					
ANR	3271514	Argument	reqline		3271448	0					
ANR	3271515	Identifier	reqline		3271448	0					
ANR	3271516	Argument	"""%s %d"""		3271448	1					
ANR	3271517	PrimaryExpression	"""%s %d"""		3271448	0					
ANR	3271518	Argument	esc1		3271448	2					
ANR	3271519	Identifier	esc1		3271448	0					
ANR	3271520	Argument	job_number		3271448	3					
ANR	3271521	Identifier	job_number		3271448	0					
ANR	3271522	ExpressionStatement	ASSERT ( x > 0 )	6041:1:162312:162327	3271448	7	True				
ANR	3271523	CallExpression	ASSERT ( x > 0 )		3271448	0					
ANR	3271524	Callee	ASSERT		3271448	0					
ANR	3271525	Identifier	ASSERT		3271448	0					
ANR	3271526	ArgumentList	x > 0		3271448	1					
ANR	3271527	Argument	x > 0		3271448	0					
ANR	3271528	RelationalExpression	x > 0		3271448	0		>			
ANR	3271529	Identifier	x		3271448	0					
ANR	3271530	PrimaryExpression	0		3271448	1					
ANR	3271531	ExpressionStatement	free ( esc1 )	6042:1:162330:162342	3271448	8	True				
ANR	3271532	CallExpression	free ( esc1 )		3271448	0					
ANR	3271533	Callee	free		3271448	0					
ANR	3271534	Identifier	free		3271448	0					
ANR	3271535	ArgumentList	esc1		3271448	1					
ANR	3271536	Argument	esc1		3271448	0					
ANR	3271537	Identifier	esc1		3271448	0					
ANR	3271538	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6043:1:162345:162378	3271448	9	True				
ANR	3271539	IdentifierDecl	* buf = reqline . c_str ( )		3271448	0					
ANR	3271540	IdentifierDeclType	const char *		3271448	0					
ANR	3271541	Identifier	buf		3271448	1					
ANR	3271542	AssignmentExpression	* buf = reqline . c_str ( )		3271448	2		=			
ANR	3271543	Identifier	buf		3271448	0					
ANR	3271544	CallExpression	reqline . c_str ( )		3271448	1					
ANR	3271545	Callee	reqline . c_str		3271448	0					
ANR	3271546	MemberAccess	reqline . c_str		3271448	0					
ANR	3271547	Identifier	reqline		3271448	0					
ANR	3271548	Identifier	c_str		3271448	1					
ANR	3271549	ArgumentList			3271448	1					
ANR	3271550	IfStatement	"if ( ! is_pending ( command , buf ) )"		3271448	10					
ANR	3271551	Condition	"! is_pending ( command , buf )"	6047:6:162479:162502	3271448	0	True				
ANR	3271552	UnaryOperationExpression	"! is_pending ( command , buf )"		3271448	0					
ANR	3271553	UnaryOperator	!		3271448	0					
ANR	3271554	CallExpression	"is_pending ( command , buf )"		3271448	1					
ANR	3271555	Callee	is_pending		3271448	0					
ANR	3271556	Identifier	is_pending		3271448	0					
ANR	3271557	ArgumentList	command		3271448	1					
ANR	3271558	Argument	command		3271448	0					
ANR	3271559	Identifier	command		3271448	0					
ANR	3271560	Argument	buf		3271448	1					
ANR	3271561	Identifier	buf		3271448	0					
ANR	3271562	CompoundStatement		20:33:564:564	3271448	1					
ANR	3271563	IfStatement	if ( m_mode == results_only )		3271448	0					
ANR	3271564	Condition	m_mode == results_only	6050:7:162611:162632	3271448	0	True				
ANR	3271565	EqualityExpression	m_mode == results_only		3271448	0		==			
ANR	3271566	Identifier	m_mode		3271448	0					
ANR	3271567	Identifier	results_only		3271448	1					
ANR	3271568	CompoundStatement		23:32:694:694	3271448	1					
ANR	3271569	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6051:3:162641:162680	3271448	0	True				
ANR	3271570	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3271448	0					
ANR	3271571	ExpressionStatement	"now_pending ( command , buf , normal_proxy , high_prio )"	6053:2:162688:162735	3271448	1	True				
ANR	3271572	CallExpression	"now_pending ( command , buf , normal_proxy , high_prio )"		3271448	0					
ANR	3271573	Callee	now_pending		3271448	0					
ANR	3271574	Identifier	now_pending		3271448	0					
ANR	3271575	ArgumentList	command		3271448	1					
ANR	3271576	Argument	command		3271448	0					
ANR	3271577	Identifier	command		3271448	0					
ANR	3271578	Argument	buf		3271448	1					
ANR	3271579	Identifier	buf		3271448	0					
ANR	3271580	Argument	normal_proxy		3271448	2					
ANR	3271581	Identifier	normal_proxy		3271448	0					
ANR	3271582	Argument	high_prio		3271448	3					
ANR	3271583	Identifier	high_prio		3271448	0					
ANR	3271584	IdentifierDeclStatement	const int FIRST_RESULT = 3 ;	6057:1:162787:162813	3271448	11	True				
ANR	3271585	IdentifierDecl	FIRST_RESULT = 3		3271448	0					
ANR	3271586	IdentifierDeclType	const int		3271448	0					
ANR	3271587	Identifier	FIRST_RESULT		3271448	1					
ANR	3271588	AssignmentExpression	FIRST_RESULT = 3		3271448	2		=			
ANR	3271589	Identifier	FIRST_RESULT		3271448	0					
ANR	3271590	PrimaryExpression	3		3271448	1					
ANR	3271591	IdentifierDeclStatement	const int RECORD_FIELDS = 4 ;	6059:1:162899:162926	3271448	12	True				
ANR	3271592	IdentifierDecl	RECORD_FIELDS = 4		3271448	0					
ANR	3271593	IdentifierDeclType	const int		3271448	0					
ANR	3271594	Identifier	RECORD_FIELDS		3271448	1					
ANR	3271595	AssignmentExpression	RECORD_FIELDS = 4		3271448	2		=			
ANR	3271596	Identifier	RECORD_FIELDS		3271448	0					
ANR	3271597	PrimaryExpression	4		3271448	1					
ANR	3271598	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6062:1:163001:163052	3271448	13	True				
ANR	3271599	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3271448	0					
ANR	3271600	IdentifierDeclType	Gahp_Args *		3271448	0					
ANR	3271601	Identifier	result		3271448	1					
ANR	3271602	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3271448	2		=			
ANR	3271603	Identifier	result		3271448	0					
ANR	3271604	CallExpression	"get_pending_result ( command , buf )"		3271448	1					
ANR	3271605	Callee	get_pending_result		3271448	0					
ANR	3271606	Identifier	get_pending_result		3271448	0					
ANR	3271607	ArgumentList	command		3271448	1					
ANR	3271608	Argument	command		3271448	0					
ANR	3271609	Identifier	command		3271448	0					
ANR	3271610	Argument	buf		3271448	1					
ANR	3271611	Identifier	buf		3271448	0					
ANR	3271612	IfStatement	if ( result )		3271448	14					
ANR	3271613	Condition	result	6063:6:163060:163065	3271448	0	True				
ANR	3271614	Identifier	result		3271448	0					
ANR	3271615	CompoundStatement		49:2:1434:1440	3271448	1					
ANR	3271616	IdentifierDeclStatement	int num_results = 0 ;	6065:2:163097:163116	3271448	0	True				
ANR	3271617	IdentifierDecl	num_results = 0		3271448	0					
ANR	3271618	IdentifierDeclType	int		3271448	0					
ANR	3271619	Identifier	num_results		3271448	1					
ANR	3271620	AssignmentExpression	num_results = 0		3271448	2		=			
ANR	3271621	Identifier	num_results		3271448	0					
ANR	3271622	PrimaryExpression	0		3271448	1					
ANR	3271623	IfStatement	if ( result -> argc > 2 )		3271448	1					
ANR	3271624	Condition	result -> argc > 2	6066:6:163124:163139	3271448	0	True				
ANR	3271625	RelationalExpression	result -> argc > 2		3271448	0		>			
ANR	3271626	PtrMemberAccess	result -> argc		3271448	0					
ANR	3271627	Identifier	result		3271448	0					
ANR	3271628	Identifier	argc		3271448	1					
ANR	3271629	PrimaryExpression	2		3271448	1					
ANR	3271630	CompoundStatement		39:24:1200:1200	3271448	1					
ANR	3271631	ExpressionStatement	num_results = atoi ( result -> argv [ 2 ] )	6067:3:163147:163182	3271448	0	True				
ANR	3271632	AssignmentExpression	num_results = atoi ( result -> argv [ 2 ] )		3271448	0		=			
ANR	3271633	Identifier	num_results		3271448	0					
ANR	3271634	CallExpression	atoi ( result -> argv [ 2 ] )		3271448	1					
ANR	3271635	Callee	atoi		3271448	0					
ANR	3271636	Identifier	atoi		3271448	0					
ANR	3271637	ArgumentList	result -> argv [ 2 ]		3271448	1					
ANR	3271638	Argument	result -> argv [ 2 ]		3271448	0					
ANR	3271639	ArrayIndexing	result -> argv [ 2 ]		3271448	0					
ANR	3271640	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271641	Identifier	result		3271448	0					
ANR	3271642	Identifier	argv		3271448	1					
ANR	3271643	PrimaryExpression	2		3271448	1					
ANR	3271644	IfStatement	if ( result -> argc != FIRST_RESULT + num_results * RECORD_FIELDS )		3271448	1					
ANR	3271645	Condition	result -> argc != FIRST_RESULT + num_results * RECORD_FIELDS	6068:7:163191:163248	3271448	0	True				
ANR	3271646	EqualityExpression	result -> argc != FIRST_RESULT + num_results * RECORD_FIELDS		3271448	0		!=			
ANR	3271647	PtrMemberAccess	result -> argc		3271448	0					
ANR	3271648	Identifier	result		3271448	0					
ANR	3271649	Identifier	argc		3271448	1					
ANR	3271650	AdditiveExpression	FIRST_RESULT + num_results * RECORD_FIELDS		3271448	1		+			
ANR	3271651	Identifier	FIRST_RESULT		3271448	0					
ANR	3271652	MultiplicativeExpression	num_results * RECORD_FIELDS		3271448	1		*			
ANR	3271653	Identifier	num_results		3271448	0					
ANR	3271654	Identifier	RECORD_FIELDS		3271448	1					
ANR	3271655	CompoundStatement		41:67:1309:1309	3271448	1					
ANR	3271656	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	6069:4:163257:163288	3271448	0	True				
ANR	3271657	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3271448	0					
ANR	3271658	Callee	EXCEPT		3271448	0					
ANR	3271659	Identifier	EXCEPT		3271448	0					
ANR	3271660	ArgumentList	"""Bad %s Result"""		3271448	1					
ANR	3271661	Argument	"""Bad %s Result"""		3271448	0					
ANR	3271662	PrimaryExpression	"""Bad %s Result"""		3271448	0					
ANR	3271663	Argument	command		3271448	1					
ANR	3271664	Identifier	command		3271448	0					
ANR	3271665	ElseStatement	else		3271448	0					
ANR	3271666	IfStatement	if ( result -> argc != 2 )		3271448	0					
ANR	3271667	Condition	result -> argc != 2	6072:11:163310:163326	3271448	0	True				
ANR	3271668	EqualityExpression	result -> argc != 2		3271448	0		!=			
ANR	3271669	PtrMemberAccess	result -> argc		3271448	0					
ANR	3271670	Identifier	result		3271448	0					
ANR	3271671	Identifier	argc		3271448	1					
ANR	3271672	PrimaryExpression	2		3271448	1					
ANR	3271673	CompoundStatement		45:30:1387:1387	3271448	1					
ANR	3271674	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	6073:3:163334:163365	3271448	0	True				
ANR	3271675	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3271448	0					
ANR	3271676	Callee	EXCEPT		3271448	0					
ANR	3271677	Identifier	EXCEPT		3271448	0					
ANR	3271678	ArgumentList	"""Bad %s Result"""		3271448	1					
ANR	3271679	Argument	"""Bad %s Result"""		3271448	0					
ANR	3271680	PrimaryExpression	"""Bad %s Result"""		3271448	0					
ANR	3271681	Argument	command		3271448	1					
ANR	3271682	Identifier	command		3271448	0					
ANR	3271683	IdentifierDeclStatement	int rc ;	6076:2:163376:163382	3271448	2	True				
ANR	3271684	IdentifierDecl	rc		3271448	0					
ANR	3271685	IdentifierDeclType	int		3271448	0					
ANR	3271686	Identifier	rc		3271448	1					
ANR	3271687	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3271448	3					
ANR	3271688	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	6077:6:163390:163429	3271448	0	True				
ANR	3271689	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3271448	0		==			
ANR	3271690	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3271448	0					
ANR	3271691	Callee	strcmp		3271448	0					
ANR	3271692	Identifier	strcmp		3271448	0					
ANR	3271693	ArgumentList	result -> argv [ 1 ]		3271448	1					
ANR	3271694	Argument	result -> argv [ 1 ]		3271448	0					
ANR	3271695	ArrayIndexing	result -> argv [ 1 ]		3271448	0					
ANR	3271696	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271697	Identifier	result		3271448	0					
ANR	3271698	Identifier	argv		3271448	1					
ANR	3271699	PrimaryExpression	1		3271448	1					
ANR	3271700	Argument	NULLSTRING		3271448	1					
ANR	3271701	Identifier	NULLSTRING		3271448	0					
ANR	3271702	PrimaryExpression	0		3271448	1					
ANR	3271703	CompoundStatement		50:48:1490:1490	3271448	1					
ANR	3271704	ExpressionStatement	rc = 0	6078:3:163437:163443	3271448	0	True				
ANR	3271705	AssignmentExpression	rc = 0		3271448	0		=			
ANR	3271706	Identifier	rc		3271448	0					
ANR	3271707	PrimaryExpression	0		3271448	1					
ANR	3271708	ElseStatement	else		3271448	0					
ANR	3271709	CompoundStatement		52:9:1512:1512	3271448	0					
ANR	3271710	ExpressionStatement	rc = 1	6080:3:163459:163465	3271448	0	True				
ANR	3271711	AssignmentExpression	rc = 1		3271448	0		=			
ANR	3271712	Identifier	rc		3271448	0					
ANR	3271713	PrimaryExpression	1		3271448	1					
ANR	3271714	ExpressionStatement	error_string = result -> argv [ 1 ]	6081:3:163470:163500	3271448	1	True				
ANR	3271715	AssignmentExpression	error_string = result -> argv [ 1 ]		3271448	0		=			
ANR	3271716	Identifier	error_string		3271448	0					
ANR	3271717	ArrayIndexing	result -> argv [ 1 ]		3271448	1					
ANR	3271718	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271719	Identifier	result		3271448	0					
ANR	3271720	Identifier	argv		3271448	1					
ANR	3271721	PrimaryExpression	1		3271448	1					
ANR	3271722	IfStatement	if ( rc == 0 )		3271448	4					
ANR	3271723	Condition	rc == 0	6084:7:163516:163522	3271448	0	True				
ANR	3271724	EqualityExpression	rc == 0		3271448	0		==			
ANR	3271725	Identifier	rc		3271448	0					
ANR	3271726	PrimaryExpression	0		3271448	1					
ANR	3271727	CompoundStatement		57:17:1584:1584	3271448	1					
ANR	3271728	ForStatement	for ( int i = 0 ; i < num_results ; i ++ )		3271448	0					
ANR	3271729	ForInit	int i = 0 ;	6085:7:163535:163544	3271448	0	True				
ANR	3271730	IdentifierDeclStatement	int i = 0 ;		3271448	0					
ANR	3271731	IdentifierDecl	i = 0		3271448	0					
ANR	3271732	IdentifierDeclType	int		3271448	0					
ANR	3271733	Identifier	i		3271448	1					
ANR	3271734	AssignmentExpression	i = 0		3271448	2		=			
ANR	3271735	Identifier	i		3271448	0					
ANR	3271736	PrimaryExpression	0		3271448	1					
ANR	3271737	Condition	i < num_results	6085:18:163546:163560	3271448	1	True				
ANR	3271738	RelationalExpression	i < num_results		3271448	0		<			
ANR	3271739	Identifier	i		3271448	0					
ANR	3271740	Identifier	num_results		3271448	1					
ANR	3271741	PostIncDecOperationExpression	i ++	6085:35:163563:163565	3271448	2	True				
ANR	3271742	Identifier	i		3271448	0					
ANR	3271743	IncDec	++		3271448	1					
ANR	3271744	CompoundStatement		60:4:1659:1704	3271448	3					
ANR	3271745	IdentifierDeclStatement	CreamJobStatus status ;	6086:4:163574:163595	3271448	0	True				
ANR	3271746	IdentifierDecl	status		3271448	0					
ANR	3271747	IdentifierDeclType	CreamJobStatus		3271448	0					
ANR	3271748	Identifier	status		3271448	1					
ANR	3271749	IdentifierDeclStatement	int offset = FIRST_RESULT + i * RECORD_FIELDS ;	6087:4:163601:163646	3271448	1	True				
ANR	3271750	IdentifierDecl	offset = FIRST_RESULT + i * RECORD_FIELDS		3271448	0					
ANR	3271751	IdentifierDeclType	int		3271448	0					
ANR	3271752	Identifier	offset		3271448	1					
ANR	3271753	AssignmentExpression	offset = FIRST_RESULT + i * RECORD_FIELDS		3271448	2		=			
ANR	3271754	Identifier	offset		3271448	0					
ANR	3271755	AdditiveExpression	FIRST_RESULT + i * RECORD_FIELDS		3271448	1		+			
ANR	3271756	Identifier	FIRST_RESULT		3271448	0					
ANR	3271757	MultiplicativeExpression	i * RECORD_FIELDS		3271448	1		*			
ANR	3271758	Identifier	i		3271448	0					
ANR	3271759	Identifier	RECORD_FIELDS		3271448	1					
ANR	3271760	ExpressionStatement	status . job_id = result -> argv [ offset + 0 ]	6088:4:163652:163692	3271448	2	True				
ANR	3271761	AssignmentExpression	status . job_id = result -> argv [ offset + 0 ]		3271448	0		=			
ANR	3271762	MemberAccess	status . job_id		3271448	0					
ANR	3271763	Identifier	status		3271448	0					
ANR	3271764	Identifier	job_id		3271448	1					
ANR	3271765	ArrayIndexing	result -> argv [ offset + 0 ]		3271448	1					
ANR	3271766	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271767	Identifier	result		3271448	0					
ANR	3271768	Identifier	argv		3271448	1					
ANR	3271769	AdditiveExpression	offset + 0		3271448	1		+			
ANR	3271770	Identifier	offset		3271448	0					
ANR	3271771	PrimaryExpression	0		3271448	1					
ANR	3271772	ExpressionStatement	status . job_status = result -> argv [ offset + 1 ]	6089:4:163698:163742	3271448	3	True				
ANR	3271773	AssignmentExpression	status . job_status = result -> argv [ offset + 1 ]		3271448	0		=			
ANR	3271774	MemberAccess	status . job_status		3271448	0					
ANR	3271775	Identifier	status		3271448	0					
ANR	3271776	Identifier	job_status		3271448	1					
ANR	3271777	ArrayIndexing	result -> argv [ offset + 1 ]		3271448	1					
ANR	3271778	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271779	Identifier	result		3271448	0					
ANR	3271780	Identifier	argv		3271448	1					
ANR	3271781	AdditiveExpression	offset + 1		3271448	1		+			
ANR	3271782	Identifier	offset		3271448	0					
ANR	3271783	PrimaryExpression	1		3271448	1					
ANR	3271784	ExpressionStatement	status . exit_code = atoi ( result -> argv [ offset + 2 ] )	6090:4:163748:163797	3271448	4	True				
ANR	3271785	AssignmentExpression	status . exit_code = atoi ( result -> argv [ offset + 2 ] )		3271448	0		=			
ANR	3271786	MemberAccess	status . exit_code		3271448	0					
ANR	3271787	Identifier	status		3271448	0					
ANR	3271788	Identifier	exit_code		3271448	1					
ANR	3271789	CallExpression	atoi ( result -> argv [ offset + 2 ] )		3271448	1					
ANR	3271790	Callee	atoi		3271448	0					
ANR	3271791	Identifier	atoi		3271448	0					
ANR	3271792	ArgumentList	result -> argv [ offset + 2 ]		3271448	1					
ANR	3271793	Argument	result -> argv [ offset + 2 ]		3271448	0					
ANR	3271794	ArrayIndexing	result -> argv [ offset + 2 ]		3271448	0					
ANR	3271795	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271796	Identifier	result		3271448	0					
ANR	3271797	Identifier	argv		3271448	1					
ANR	3271798	AdditiveExpression	offset + 2		3271448	1		+			
ANR	3271799	Identifier	offset		3271448	0					
ANR	3271800	PrimaryExpression	2		3271448	1					
ANR	3271801	IfStatement	"if ( strcasecmp ( result -> argv [ offset + 3 ] , NULLSTRING ) )"		3271448	5					
ANR	3271802	Condition	"strcasecmp ( result -> argv [ offset + 3 ] , NULLSTRING )"	6091:9:163808:163855	3271448	0	True				
ANR	3271803	CallExpression	"strcasecmp ( result -> argv [ offset + 3 ] , NULLSTRING )"		3271448	0					
ANR	3271804	Callee	strcasecmp		3271448	0					
ANR	3271805	Identifier	strcasecmp		3271448	0					
ANR	3271806	ArgumentList	result -> argv [ offset + 3 ]		3271448	1					
ANR	3271807	Argument	result -> argv [ offset + 3 ]		3271448	0					
ANR	3271808	ArrayIndexing	result -> argv [ offset + 3 ]		3271448	0					
ANR	3271809	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271810	Identifier	result		3271448	0					
ANR	3271811	Identifier	argv		3271448	1					
ANR	3271812	AdditiveExpression	offset + 3		3271448	1		+			
ANR	3271813	Identifier	offset		3271448	0					
ANR	3271814	PrimaryExpression	3		3271448	1					
ANR	3271815	Argument	NULLSTRING		3271448	1					
ANR	3271816	Identifier	NULLSTRING		3271448	0					
ANR	3271817	CompoundStatement		64:60:1917:1917	3271448	1					
ANR	3271818	ExpressionStatement	status . failure_reason = result -> argv [ offset + 3 ]	6092:5:163866:163914	3271448	0	True				
ANR	3271819	AssignmentExpression	status . failure_reason = result -> argv [ offset + 3 ]		3271448	0		=			
ANR	3271820	MemberAccess	status . failure_reason		3271448	0					
ANR	3271821	Identifier	status		3271448	0					
ANR	3271822	Identifier	failure_reason		3271448	1					
ANR	3271823	ArrayIndexing	result -> argv [ offset + 3 ]		3271448	1					
ANR	3271824	PtrMemberAccess	result -> argv		3271448	0					
ANR	3271825	Identifier	result		3271448	0					
ANR	3271826	Identifier	argv		3271448	1					
ANR	3271827	AdditiveExpression	offset + 3		3271448	1		+			
ANR	3271828	Identifier	offset		3271448	0					
ANR	3271829	PrimaryExpression	3		3271448	1					
ANR	3271830	ExpressionStatement	results [ status . job_id ] = status	6095:4:163927:163958	3271448	6	True				
ANR	3271831	AssignmentExpression	results [ status . job_id ] = status		3271448	0		=			
ANR	3271832	ArrayIndexing	results [ status . job_id ]		3271448	0					
ANR	3271833	Identifier	results		3271448	0					
ANR	3271834	MemberAccess	status . job_id		3271448	1					
ANR	3271835	Identifier	status		3271448	0					
ANR	3271836	Identifier	job_id		3271448	1					
ANR	3271837	Identifier	status		3271448	1					
ANR	3271838	Statement	delete	6098:2:163971:163976	3271448	5	True				
ANR	3271839	ExpressionStatement	result	6098:9:163978:163984	3271448	6	True				
ANR	3271840	Identifier	result		3271448	0					
ANR	3271841	ReturnStatement	return rc ;	6099:2:163988:163997	3271448	7	True				
ANR	3271842	Identifier	rc		3271448	0					
ANR	3271843	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3271448	15					
ANR	3271844	Condition	"check_pending_timeout ( command , buf )"	6103:6:164054:164087	3271448	0	True				
ANR	3271845	CallExpression	"check_pending_timeout ( command , buf )"		3271448	0					
ANR	3271846	Callee	check_pending_timeout		3271448	0					
ANR	3271847	Identifier	check_pending_timeout		3271448	0					
ANR	3271848	ArgumentList	command		3271448	1					
ANR	3271849	Argument	command		3271448	0					
ANR	3271850	Identifier	command		3271448	0					
ANR	3271851	Argument	buf		3271448	1					
ANR	3271852	Identifier	buf		3271448	0					
ANR	3271853	CompoundStatement		76:43:2149:2149	3271448	1					
ANR	3271854	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6105:2:164127:164175	3271448	0	True				
ANR	3271855	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3271448	0					
ANR	3271856	Callee	sprintf		3271448	0					
ANR	3271857	Identifier	sprintf		3271448	0					
ANR	3271858	ArgumentList	error_string		3271448	1					
ANR	3271859	Argument	error_string		3271448	0					
ANR	3271860	Identifier	error_string		3271448	0					
ANR	3271861	Argument	"""%s timed out"""		3271448	1					
ANR	3271862	PrimaryExpression	"""%s timed out"""		3271448	0					
ANR	3271863	Argument	command		3271448	2					
ANR	3271864	Identifier	command		3271448	0					
ANR	3271865	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6106:2:164179:164214	3271448	1	True				
ANR	3271866	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3271448	0					
ANR	3271867	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6110:1:164274:164307	3271448	16	True				
ANR	3271868	Identifier	GAHPCLIENT_COMMAND_PENDING		3271448	0					
ANR	3271869	ReturnType	int		3271448	1					
ANR	3271870	Identifier	GahpClient :: cream_job_status_all		3271448	2					
ANR	3271871	ParameterList	"const char * service , GahpClient :: CreamJobStatusMap & results"		3271448	3					
ANR	3271872	Parameter	const char * service	6026:33:161877:161895	3271448	0	True				
ANR	3271873	ParameterType	const char *		3271448	0					
ANR	3271874	Identifier	service		3271448	1					
ANR	3271875	Parameter	GahpClient :: CreamJobStatusMap & results	6027:1:161900:161938	3271448	1	True				
ANR	3271876	ParameterType	GahpClient :: CreamJobStatusMap &		3271448	0					
ANR	3271877	Identifier	results		3271448	1					
ANR	3271878	CFGEntryNode	ENTRY		3271448		True				
ANR	3271879	CFGExitNode	EXIT		3271448		True				
ANR	3271880	Symbol	server -> m_commands_supported		3271448						
ANR	3271881	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3271448						
ANR	3271882	Symbol	sprintf		3271448						
ANR	3271883	Symbol	high_prio		3271448						
ANR	3271884	Symbol	server -> m_commands_supported -> contains_anycase		3271448						
ANR	3271885	Symbol	GAHPCLIENT_COMMAND_PENDING		3271448						
ANR	3271886	Symbol	job_number		3271448						
ANR	3271887	Symbol	strcasecmp		3271448						
ANR	3271888	Symbol	results		3271448						
ANR	3271889	Symbol	FIRST_RESULT		3271448						
ANR	3271890	Symbol	strcmp		3271448						
ANR	3271891	Symbol	offset		3271448						
ANR	3271892	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3271448						
ANR	3271893	Symbol	* * result		3271448						
ANR	3271894	Symbol	* status		3271448						
ANR	3271895	Symbol	get_pending_result		3271448						
ANR	3271896	Symbol	rc		3271448						
ANR	3271897	Symbol	* offset		3271448						
ANR	3271898	Symbol	is_pending		3271448						
ANR	3271899	Symbol	status		3271448						
ANR	3271900	Symbol	status . job_status		3271448						
ANR	3271901	Symbol	server		3271448						
ANR	3271902	Symbol	escapeGahpString		3271448						
ANR	3271903	Symbol	* server		3271448						
ANR	3271904	Symbol	RECORD_FIELDS		3271448						
ANR	3271905	Symbol	* results		3271448						
ANR	3271906	Symbol	reqline . c_str		3271448						
ANR	3271907	Symbol	results_only		3271448						
ANR	3271908	Symbol	result -> argv		3271448						
ANR	3271909	Symbol	num_results		3271448						
ANR	3271910	Symbol	* status . job_id		3271448						
ANR	3271911	Symbol	* server -> m_commands_supported		3271448						
ANR	3271912	Symbol	result		3271448						
ANR	3271913	Symbol	status . job_id		3271448						
ANR	3271914	Symbol	normal_proxy		3271448						
ANR	3271915	Symbol	* result		3271448						
ANR	3271916	Symbol	reqline		3271448						
ANR	3271917	Symbol	status . failure_reason		3271448						
ANR	3271918	Symbol	m_mode		3271448						
ANR	3271919	Symbol	* result -> argv		3271448						
ANR	3271920	Symbol	atoi		3271448						
ANR	3271921	Symbol	i		3271448						
ANR	3271922	Symbol	NULLSTRING		3271448						
ANR	3271923	Symbol	command		3271448						
ANR	3271924	Symbol	error_string		3271448						
ANR	3271925	Symbol	buf		3271448						
ANR	3271926	Symbol	esc1		3271448						
ANR	3271927	Symbol	status . exit_code		3271448						
ANR	3271928	Symbol	service		3271448						
ANR	3271929	Symbol	x		3271448						
ANR	3271930	Symbol	result -> argc		3271448						
ANR	3271931	Symbol	* * server		3271448						
ANR	3271932	Symbol	FALSE		3271448						
ANR	3271933	Symbol	strdup		3271448						
ANR	3271934	Symbol	check_pending_timeout		3271448						
ANR	3271935	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3271448						
ANR	3271936	Function	GahpClient :: cream_proxy_renew	6113:0:164312:166059							
ANR	3271937	FunctionDef	"GahpClient :: cream_proxy_renew (const char * delg_service , const char * delg_id)"		3271936	0					
ANR	3271938	CompoundStatement		6115:0:164393:166059	3271936	0					
ANR	3271939	Statement	static	6116:1:164396:164401	3271936	0	True				
ANR	3271940	IdentifierDeclStatement	"const char * command = ""CREAM_PROXY_RENEW"" ;"	6116:8:164403:164444	3271936	1	True				
ANR	3271941	IdentifierDecl	"* command = ""CREAM_PROXY_RENEW"""		3271936	0					
ANR	3271942	IdentifierDeclType	const char *		3271936	0					
ANR	3271943	Identifier	command		3271936	1					
ANR	3271944	AssignmentExpression	"* command = ""CREAM_PROXY_RENEW"""		3271936	2		=			
ANR	3271945	Identifier	command		3271936	0					
ANR	3271946	PrimaryExpression	"""CREAM_PROXY_RENEW"""		3271936	1					
ANR	3271947	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3271936	2					
ANR	3271948	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6119:6:164493:164554	3271936	0	True				
ANR	3271949	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3271936	0		==			
ANR	3271950	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3271936	0					
ANR	3271951	Callee	server -> m_commands_supported -> contains_anycase		3271936	0					
ANR	3271952	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3271936	0					
ANR	3271953	PtrMemberAccess	server -> m_commands_supported		3271936	0					
ANR	3271954	Identifier	server		3271936	0					
ANR	3271955	Identifier	m_commands_supported		3271936	1					
ANR	3271956	Identifier	contains_anycase		3271936	1					
ANR	3271957	ArgumentList	command		3271936	1					
ANR	3271958	Argument	command		3271936	0					
ANR	3271959	Identifier	command		3271936	0					
ANR	3271960	Identifier	FALSE		3271936	1					
ANR	3271961	CompoundStatement		5:70:163:163	3271936	1					
ANR	3271962	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6120:2:164561:164600	3271936	0	True				
ANR	3271963	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3271936	0					
ANR	3271964	IfStatement	if ( ! delg_service )		3271936	3					
ANR	3271965	Condition	! delg_service	6124:5:164638:164650	3271936	0	True				
ANR	3271966	UnaryOperationExpression	! delg_service		3271936	0					
ANR	3271967	UnaryOperator	!		3271936	0					
ANR	3271968	Identifier	delg_service		3271936	1					
ANR	3271969	ExpressionStatement	delg_service = NULLSTRING	6124:20:164653:164676	3271936	1	True				
ANR	3271970	AssignmentExpression	delg_service = NULLSTRING		3271936	0		=			
ANR	3271971	Identifier	delg_service		3271936	0					
ANR	3271972	Identifier	NULLSTRING		3271936	1					
ANR	3271973	IfStatement	if ( ! delg_id )		3271936	4					
ANR	3271974	Condition	! delg_id	6125:5:164683:164690	3271936	0	True				
ANR	3271975	UnaryOperationExpression	! delg_id		3271936	0					
ANR	3271976	UnaryOperator	!		3271936	0					
ANR	3271977	Identifier	delg_id		3271936	1					
ANR	3271978	ExpressionStatement	delg_id = NULLSTRING	6125:15:164693:164711	3271936	1	True				
ANR	3271979	AssignmentExpression	delg_id = NULLSTRING		3271936	0		=			
ANR	3271980	Identifier	delg_id		3271936	0					
ANR	3271981	Identifier	NULLSTRING		3271936	1					
ANR	3271982	IdentifierDeclStatement	std :: string reqline ;	6126:1:164714:164733	3271936	5	True				
ANR	3271983	IdentifierDecl	reqline		3271936	0					
ANR	3271984	IdentifierDeclType	std :: string		3271936	0					
ANR	3271985	Identifier	reqline		3271936	1					
ANR	3271986	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( delg_service ) ) ;	6127:1:164736:164789	3271936	6	True				
ANR	3271987	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( delg_service ) )		3271936	0					
ANR	3271988	IdentifierDeclType	char *		3271936	0					
ANR	3271989	Identifier	esc1		3271936	1					
ANR	3271990	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( delg_service ) )		3271936	2		=			
ANR	3271991	Identifier	esc1		3271936	0					
ANR	3271992	CallExpression	strdup ( escapeGahpString ( delg_service ) )		3271936	1					
ANR	3271993	Callee	strdup		3271936	0					
ANR	3271994	Identifier	strdup		3271936	0					
ANR	3271995	ArgumentList	escapeGahpString ( delg_service )		3271936	1					
ANR	3271996	Argument	escapeGahpString ( delg_service )		3271936	0					
ANR	3271997	CallExpression	escapeGahpString ( delg_service )		3271936	0					
ANR	3271998	Callee	escapeGahpString		3271936	0					
ANR	3271999	Identifier	escapeGahpString		3271936	0					
ANR	3272000	ArgumentList	delg_service		3271936	1					
ANR	3272001	Argument	delg_service		3271936	0					
ANR	3272002	Identifier	delg_service		3271936	0					
ANR	3272003	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( delg_id ) ) ;	6128:1:164792:164840	3271936	7	True				
ANR	3272004	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( delg_id ) )		3271936	0					
ANR	3272005	IdentifierDeclType	char *		3271936	0					
ANR	3272006	Identifier	esc2		3271936	1					
ANR	3272007	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( delg_id ) )		3271936	2		=			
ANR	3272008	Identifier	esc2		3271936	0					
ANR	3272009	CallExpression	strdup ( escapeGahpString ( delg_id ) )		3271936	1					
ANR	3272010	Callee	strdup		3271936	0					
ANR	3272011	Identifier	strdup		3271936	0					
ANR	3272012	ArgumentList	escapeGahpString ( delg_id )		3271936	1					
ANR	3272013	Argument	escapeGahpString ( delg_id )		3271936	0					
ANR	3272014	CallExpression	escapeGahpString ( delg_id )		3271936	0					
ANR	3272015	Callee	escapeGahpString		3271936	0					
ANR	3272016	Identifier	escapeGahpString		3271936	0					
ANR	3272017	ArgumentList	delg_id		3271936	1					
ANR	3272018	Argument	delg_id		3271936	0					
ANR	3272019	Identifier	delg_id		3271936	0					
ANR	3272020	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 ) ;"	6129:1:164843:164888	3271936	8	True				
ANR	3272021	IdentifierDecl	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3271936	0					
ANR	3272022	IdentifierDeclType	int		3271936	0					
ANR	3272023	Identifier	x		3271936	1					
ANR	3272024	AssignmentExpression	"x = sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3271936	2		=			
ANR	3272025	Identifier	x		3271936	0					
ANR	3272026	CallExpression	"sprintf ( reqline , ""%s %s"" , esc1 , esc2 )"		3271936	1					
ANR	3272027	Callee	sprintf		3271936	0					
ANR	3272028	Identifier	sprintf		3271936	0					
ANR	3272029	ArgumentList	reqline		3271936	1					
ANR	3272030	Argument	reqline		3271936	0					
ANR	3272031	Identifier	reqline		3271936	0					
ANR	3272032	Argument	"""%s %s"""		3271936	1					
ANR	3272033	PrimaryExpression	"""%s %s"""		3271936	0					
ANR	3272034	Argument	esc1		3271936	2					
ANR	3272035	Identifier	esc1		3271936	0					
ANR	3272036	Argument	esc2		3271936	3					
ANR	3272037	Identifier	esc2		3271936	0					
ANR	3272038	ExpressionStatement	free ( esc1 )	6130:1:164891:164903	3271936	9	True				
ANR	3272039	CallExpression	free ( esc1 )		3271936	0					
ANR	3272040	Callee	free		3271936	0					
ANR	3272041	Identifier	free		3271936	0					
ANR	3272042	ArgumentList	esc1		3271936	1					
ANR	3272043	Argument	esc1		3271936	0					
ANR	3272044	Identifier	esc1		3271936	0					
ANR	3272045	ExpressionStatement	free ( esc2 )	6131:1:164906:164918	3271936	10	True				
ANR	3272046	CallExpression	free ( esc2 )		3271936	0					
ANR	3272047	Callee	free		3271936	0					
ANR	3272048	Identifier	free		3271936	0					
ANR	3272049	ArgumentList	esc2		3271936	1					
ANR	3272050	Argument	esc2		3271936	0					
ANR	3272051	Identifier	esc2		3271936	0					
ANR	3272052	ExpressionStatement	ASSERT ( x > 0 )	6132:1:164921:164936	3271936	11	True				
ANR	3272053	CallExpression	ASSERT ( x > 0 )		3271936	0					
ANR	3272054	Callee	ASSERT		3271936	0					
ANR	3272055	Identifier	ASSERT		3271936	0					
ANR	3272056	ArgumentList	x > 0		3271936	1					
ANR	3272057	Argument	x > 0		3271936	0					
ANR	3272058	RelationalExpression	x > 0		3271936	0		>			
ANR	3272059	Identifier	x		3271936	0					
ANR	3272060	PrimaryExpression	0		3271936	1					
ANR	3272061	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6133:1:164939:164972	3271936	12	True				
ANR	3272062	IdentifierDecl	* buf = reqline . c_str ( )		3271936	0					
ANR	3272063	IdentifierDeclType	const char *		3271936	0					
ANR	3272064	Identifier	buf		3271936	1					
ANR	3272065	AssignmentExpression	* buf = reqline . c_str ( )		3271936	2		=			
ANR	3272066	Identifier	buf		3271936	0					
ANR	3272067	CallExpression	reqline . c_str ( )		3271936	1					
ANR	3272068	Callee	reqline . c_str		3271936	0					
ANR	3272069	MemberAccess	reqline . c_str		3271936	0					
ANR	3272070	Identifier	reqline		3271936	0					
ANR	3272071	Identifier	c_str		3271936	1					
ANR	3272072	ArgumentList			3271936	1					
ANR	3272073	IfStatement	"if ( ! is_pending ( command , buf ) )"		3271936	13					
ANR	3272074	Condition	"! is_pending ( command , buf )"	6137:6:165073:165096	3271936	0	True				
ANR	3272075	UnaryOperationExpression	"! is_pending ( command , buf )"		3271936	0					
ANR	3272076	UnaryOperator	!		3271936	0					
ANR	3272077	CallExpression	"is_pending ( command , buf )"		3271936	1					
ANR	3272078	Callee	is_pending		3271936	0					
ANR	3272079	Identifier	is_pending		3271936	0					
ANR	3272080	ArgumentList	command		3271936	1					
ANR	3272081	Argument	command		3271936	0					
ANR	3272082	Identifier	command		3271936	0					
ANR	3272083	Argument	buf		3271936	1					
ANR	3272084	Identifier	buf		3271936	0					
ANR	3272085	CompoundStatement		23:33:706:706	3271936	1					
ANR	3272086	IfStatement	if ( m_mode == results_only )		3271936	0					
ANR	3272087	Condition	m_mode == results_only	6140:7:165205:165226	3271936	0	True				
ANR	3272088	EqualityExpression	m_mode == results_only		3271936	0		==			
ANR	3272089	Identifier	m_mode		3271936	0					
ANR	3272090	Identifier	results_only		3271936	1					
ANR	3272091	CompoundStatement		26:32:836:836	3271936	1					
ANR	3272092	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6141:3:165235:165274	3271936	0	True				
ANR	3272093	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3271936	0					
ANR	3272094	ExpressionStatement	"now_pending ( command , buf , normal_proxy , high_prio )"	6143:2:165282:165329	3271936	1	True				
ANR	3272095	CallExpression	"now_pending ( command , buf , normal_proxy , high_prio )"		3271936	0					
ANR	3272096	Callee	now_pending		3271936	0					
ANR	3272097	Identifier	now_pending		3271936	0					
ANR	3272098	ArgumentList	command		3271936	1					
ANR	3272099	Argument	command		3271936	0					
ANR	3272100	Identifier	command		3271936	0					
ANR	3272101	Argument	buf		3271936	1					
ANR	3272102	Identifier	buf		3271936	0					
ANR	3272103	Argument	normal_proxy		3271936	2					
ANR	3272104	Identifier	normal_proxy		3271936	0					
ANR	3272105	Argument	high_prio		3271936	3					
ANR	3272106	Identifier	high_prio		3271936	0					
ANR	3272107	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6149:1:165423:165474	3271936	14	True				
ANR	3272108	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3271936	0					
ANR	3272109	IdentifierDeclType	Gahp_Args *		3271936	0					
ANR	3272110	Identifier	result		3271936	1					
ANR	3272111	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3271936	2		=			
ANR	3272112	Identifier	result		3271936	0					
ANR	3272113	CallExpression	"get_pending_result ( command , buf )"		3271936	1					
ANR	3272114	Callee	get_pending_result		3271936	0					
ANR	3272115	Identifier	get_pending_result		3271936	0					
ANR	3272116	ArgumentList	command		3271936	1					
ANR	3272117	Argument	command		3271936	0					
ANR	3272118	Identifier	command		3271936	0					
ANR	3272119	Argument	buf		3271936	1					
ANR	3272120	Identifier	buf		3271936	0					
ANR	3272121	IfStatement	if ( result )		3271936	15					
ANR	3272122	Condition	result	6150:6:165482:165487	3271936	0	True				
ANR	3272123	Identifier	result		3271936	0					
ANR	3272124	CompoundStatement		41:2:1192:1198	3271936	1					
ANR	3272125	IfStatement	if ( result -> argc != 2 )		3271936	0					
ANR	3272126	Condition	result -> argc != 2	6152:6:165523:165539	3271936	0	True				
ANR	3272127	EqualityExpression	result -> argc != 2		3271936	0		!=			
ANR	3272128	PtrMemberAccess	result -> argc		3271936	0					
ANR	3272129	Identifier	result		3271936	0					
ANR	3272130	Identifier	argc		3271936	1					
ANR	3272131	PrimaryExpression	2		3271936	1					
ANR	3272132	CompoundStatement		38:25:1148:1148	3271936	1					
ANR	3272133	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	6153:3:165547:165578	3271936	0	True				
ANR	3272134	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3271936	0					
ANR	3272135	Callee	EXCEPT		3271936	0					
ANR	3272136	Identifier	EXCEPT		3271936	0					
ANR	3272137	ArgumentList	"""Bad %s Result"""		3271936	1					
ANR	3272138	Argument	"""Bad %s Result"""		3271936	0					
ANR	3272139	PrimaryExpression	"""Bad %s Result"""		3271936	0					
ANR	3272140	Argument	command		3271936	1					
ANR	3272141	Identifier	command		3271936	0					
ANR	3272142	IdentifierDeclStatement	int rc ;	6155:2:165586:165592	3271936	1	True				
ANR	3272143	IdentifierDecl	rc		3271936	0					
ANR	3272144	IdentifierDeclType	int		3271936	0					
ANR	3272145	Identifier	rc		3271936	1					
ANR	3272146	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3271936	2					
ANR	3272147	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	6156:6:165600:165639	3271936	0	True				
ANR	3272148	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3271936	0		==			
ANR	3272149	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3271936	0					
ANR	3272150	Callee	strcmp		3271936	0					
ANR	3272151	Identifier	strcmp		3271936	0					
ANR	3272152	ArgumentList	result -> argv [ 1 ]		3271936	1					
ANR	3272153	Argument	result -> argv [ 1 ]		3271936	0					
ANR	3272154	ArrayIndexing	result -> argv [ 1 ]		3271936	0					
ANR	3272155	PtrMemberAccess	result -> argv		3271936	0					
ANR	3272156	Identifier	result		3271936	0					
ANR	3272157	Identifier	argv		3271936	1					
ANR	3272158	PrimaryExpression	1		3271936	1					
ANR	3272159	Argument	NULLSTRING		3271936	1					
ANR	3272160	Identifier	NULLSTRING		3271936	0					
ANR	3272161	PrimaryExpression	0		3271936	1					
ANR	3272162	CompoundStatement		42:48:1248:1248	3271936	1					
ANR	3272163	ExpressionStatement	rc = 0	6157:3:165647:165653	3271936	0	True				
ANR	3272164	AssignmentExpression	rc = 0		3271936	0		=			
ANR	3272165	Identifier	rc		3271936	0					
ANR	3272166	PrimaryExpression	0		3271936	1					
ANR	3272167	ElseStatement	else		3271936	0					
ANR	3272168	CompoundStatement		44:9:1270:1270	3271936	0					
ANR	3272169	ExpressionStatement	rc = 1	6159:3:165669:165675	3271936	0	True				
ANR	3272170	AssignmentExpression	rc = 1		3271936	0		=			
ANR	3272171	Identifier	rc		3271936	0					
ANR	3272172	PrimaryExpression	1		3271936	1					
ANR	3272173	ExpressionStatement	error_string = result -> argv [ 1 ]	6160:3:165680:165710	3271936	1	True				
ANR	3272174	AssignmentExpression	error_string = result -> argv [ 1 ]		3271936	0		=			
ANR	3272175	Identifier	error_string		3271936	0					
ANR	3272176	ArrayIndexing	result -> argv [ 1 ]		3271936	1					
ANR	3272177	PtrMemberAccess	result -> argv		3271936	0					
ANR	3272178	Identifier	result		3271936	0					
ANR	3272179	Identifier	argv		3271936	1					
ANR	3272180	PrimaryExpression	1		3271936	1					
ANR	3272181	Statement	delete	6163:2:165721:165726	3271936	3	True				
ANR	3272182	ExpressionStatement	result	6163:9:165728:165734	3271936	4	True				
ANR	3272183	Identifier	result		3271936	0					
ANR	3272184	ReturnStatement	return rc ;	6164:2:165738:165747	3271936	5	True				
ANR	3272185	Identifier	rc		3271936	0					
ANR	3272186	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3271936	16					
ANR	3272187	Condition	"check_pending_timeout ( command , buf )"	6168:6:165804:165837	3271936	0	True				
ANR	3272188	CallExpression	"check_pending_timeout ( command , buf )"		3271936	0					
ANR	3272189	Callee	check_pending_timeout		3271936	0					
ANR	3272190	Identifier	check_pending_timeout		3271936	0					
ANR	3272191	ArgumentList	command		3271936	1					
ANR	3272192	Argument	command		3271936	0					
ANR	3272193	Identifier	command		3271936	0					
ANR	3272194	Argument	buf		3271936	1					
ANR	3272195	Identifier	buf		3271936	0					
ANR	3272196	CompoundStatement		54:43:1447:1447	3271936	1					
ANR	3272197	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6170:2:165877:165925	3271936	0	True				
ANR	3272198	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3271936	0					
ANR	3272199	Callee	sprintf		3271936	0					
ANR	3272200	Identifier	sprintf		3271936	0					
ANR	3272201	ArgumentList	error_string		3271936	1					
ANR	3272202	Argument	error_string		3271936	0					
ANR	3272203	Identifier	error_string		3271936	0					
ANR	3272204	Argument	"""%s timed out"""		3271936	1					
ANR	3272205	PrimaryExpression	"""%s timed out"""		3271936	0					
ANR	3272206	Argument	command		3271936	2					
ANR	3272207	Identifier	command		3271936	0					
ANR	3272208	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6171:2:165929:165964	3271936	1	True				
ANR	3272209	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3271936	0					
ANR	3272210	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6175:1:166024:166057	3271936	17	True				
ANR	3272211	Identifier	GAHPCLIENT_COMMAND_PENDING		3271936	0					
ANR	3272212	ReturnType	int		3271936	1					
ANR	3272213	Identifier	GahpClient :: cream_proxy_renew		3271936	2					
ANR	3272214	ParameterList	"const char * delg_service , const char * delg_id"		3271936	3					
ANR	3272215	Parameter	const char * delg_service	6114:30:164346:164369	3271936	0	True				
ANR	3272216	ParameterType	const char *		3271936	0					
ANR	3272217	Identifier	delg_service		3271936	1					
ANR	3272218	Parameter	const char * delg_id	6114:56:164372:164390	3271936	1	True				
ANR	3272219	ParameterType	const char *		3271936	0					
ANR	3272220	Identifier	delg_id		3271936	1					
ANR	3272221	CFGEntryNode	ENTRY		3271936		True				
ANR	3272222	CFGExitNode	EXIT		3271936		True				
ANR	3272223	Symbol	server		3271936						
ANR	3272224	Symbol	server -> m_commands_supported		3271936						
ANR	3272225	Symbol	escapeGahpString		3271936						
ANR	3272226	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3271936						
ANR	3272227	Symbol	* server		3271936						
ANR	3272228	Symbol	delg_service		3271936						
ANR	3272229	Symbol	reqline . c_str		3271936						
ANR	3272230	Symbol	results_only		3271936						
ANR	3272231	Symbol	result -> argv		3271936						
ANR	3272232	Symbol	* server -> m_commands_supported		3271936						
ANR	3272233	Symbol	sprintf		3271936						
ANR	3272234	Symbol	result		3271936						
ANR	3272235	Symbol	normal_proxy		3271936						
ANR	3272236	Symbol	delg_id		3271936						
ANR	3272237	Symbol	high_prio		3271936						
ANR	3272238	Symbol	* result		3271936						
ANR	3272239	Symbol	server -> m_commands_supported -> contains_anycase		3271936						
ANR	3272240	Symbol	GAHPCLIENT_COMMAND_PENDING		3271936						
ANR	3272241	Symbol	reqline		3271936						
ANR	3272242	Symbol	m_mode		3271936						
ANR	3272243	Symbol	* result -> argv		3271936						
ANR	3272244	Symbol	strcmp		3271936						
ANR	3272245	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3271936						
ANR	3272246	Symbol	* * result		3271936						
ANR	3272247	Symbol	NULLSTRING		3271936						
ANR	3272248	Symbol	command		3271936						
ANR	3272249	Symbol	get_pending_result		3271936						
ANR	3272250	Symbol	rc		3271936						
ANR	3272251	Symbol	error_string		3271936						
ANR	3272252	Symbol	esc2		3271936						
ANR	3272253	Symbol	buf		3271936						
ANR	3272254	Symbol	esc1		3271936						
ANR	3272255	Symbol	x		3271936						
ANR	3272256	Symbol	result -> argc		3271936						
ANR	3272257	Symbol	* * server		3271936						
ANR	3272258	Symbol	FALSE		3271936						
ANR	3272259	Symbol	strdup		3271936						
ANR	3272260	Symbol	check_pending_timeout		3271936						
ANR	3272261	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3271936						
ANR	3272262	Symbol	is_pending		3271936						
ANR	3272263	Function	GahpClient :: cream_ping	6178:0:166062:167827							
ANR	3272264	FunctionDef	GahpClient :: cream_ping (const char * service)		3272263	0					
ANR	3272265	CompoundStatement		6180:0:166112:167827	3272263	0					
ANR	3272266	Statement	static	6181:1:166115:166120	3272263	0	True				
ANR	3272267	IdentifierDeclStatement	"const char * command = ""CREAM_PING"" ;"	6181:8:166122:166156	3272263	1	True				
ANR	3272268	IdentifierDecl	"* command = ""CREAM_PING"""		3272263	0					
ANR	3272269	IdentifierDeclType	const char *		3272263	0					
ANR	3272270	Identifier	command		3272263	1					
ANR	3272271	AssignmentExpression	"* command = ""CREAM_PING"""		3272263	2		=			
ANR	3272272	Identifier	command		3272263	0					
ANR	3272273	PrimaryExpression	"""CREAM_PING"""		3272263	1					
ANR	3272274	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3272263	2					
ANR	3272275	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6184:6:166206:166267	3272263	0	True				
ANR	3272276	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3272263	0		==			
ANR	3272277	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3272263	0					
ANR	3272278	Callee	server -> m_commands_supported -> contains_anycase		3272263	0					
ANR	3272279	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3272263	0					
ANR	3272280	PtrMemberAccess	server -> m_commands_supported		3272263	0					
ANR	3272281	Identifier	server		3272263	0					
ANR	3272282	Identifier	m_commands_supported		3272263	1					
ANR	3272283	Identifier	contains_anycase		3272263	1					
ANR	3272284	ArgumentList	command		3272263	1					
ANR	3272285	Argument	command		3272263	0					
ANR	3272286	Identifier	command		3272263	0					
ANR	3272287	Identifier	FALSE		3272263	1					
ANR	3272288	CompoundStatement		5:70:157:157	3272263	1					
ANR	3272289	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6185:2:166274:166313	3272263	0	True				
ANR	3272290	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3272263	0					
ANR	3272291	IfStatement	if ( ! service )		3272263	3					
ANR	3272292	Condition	! service	6189:5:166351:166358	3272263	0	True				
ANR	3272293	UnaryOperationExpression	! service		3272263	0					
ANR	3272294	UnaryOperator	!		3272263	0					
ANR	3272295	Identifier	service		3272263	1					
ANR	3272296	ExpressionStatement	service = NULLSTRING	6189:15:166361:166379	3272263	1	True				
ANR	3272297	AssignmentExpression	service = NULLSTRING		3272263	0		=			
ANR	3272298	Identifier	service		3272263	0					
ANR	3272299	Identifier	NULLSTRING		3272263	1					
ANR	3272300	IdentifierDeclStatement	std :: string reqline ;	6190:1:166382:166401	3272263	4	True				
ANR	3272301	IdentifierDecl	reqline		3272263	0					
ANR	3272302	IdentifierDeclType	std :: string		3272263	0					
ANR	3272303	Identifier	reqline		3272263	1					
ANR	3272304	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s"" , escapeGahpString ( service ) ) ;"	6191:1:166404:166459	3272263	5	True				
ANR	3272305	IdentifierDecl	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( service ) )"		3272263	0					
ANR	3272306	IdentifierDeclType	int		3272263	0					
ANR	3272307	Identifier	x		3272263	1					
ANR	3272308	AssignmentExpression	"x = sprintf ( reqline , ""%s"" , escapeGahpString ( service ) )"		3272263	2		=			
ANR	3272309	Identifier	x		3272263	0					
ANR	3272310	CallExpression	"sprintf ( reqline , ""%s"" , escapeGahpString ( service ) )"		3272263	1					
ANR	3272311	Callee	sprintf		3272263	0					
ANR	3272312	Identifier	sprintf		3272263	0					
ANR	3272313	ArgumentList	reqline		3272263	1					
ANR	3272314	Argument	reqline		3272263	0					
ANR	3272315	Identifier	reqline		3272263	0					
ANR	3272316	Argument	"""%s"""		3272263	1					
ANR	3272317	PrimaryExpression	"""%s"""		3272263	0					
ANR	3272318	Argument	escapeGahpString ( service )		3272263	2					
ANR	3272319	CallExpression	escapeGahpString ( service )		3272263	0					
ANR	3272320	Callee	escapeGahpString		3272263	0					
ANR	3272321	Identifier	escapeGahpString		3272263	0					
ANR	3272322	ArgumentList	service		3272263	1					
ANR	3272323	Argument	service		3272263	0					
ANR	3272324	Identifier	service		3272263	0					
ANR	3272325	ExpressionStatement	ASSERT ( x > 0 )	6192:1:166462:166477	3272263	6	True				
ANR	3272326	CallExpression	ASSERT ( x > 0 )		3272263	0					
ANR	3272327	Callee	ASSERT		3272263	0					
ANR	3272328	Identifier	ASSERT		3272263	0					
ANR	3272329	ArgumentList	x > 0		3272263	1					
ANR	3272330	Argument	x > 0		3272263	0					
ANR	3272331	RelationalExpression	x > 0		3272263	0		>			
ANR	3272332	Identifier	x		3272263	0					
ANR	3272333	PrimaryExpression	0		3272263	1					
ANR	3272334	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6193:1:166480:166513	3272263	7	True				
ANR	3272335	IdentifierDecl	* buf = reqline . c_str ( )		3272263	0					
ANR	3272336	IdentifierDeclType	const char *		3272263	0					
ANR	3272337	Identifier	buf		3272263	1					
ANR	3272338	AssignmentExpression	* buf = reqline . c_str ( )		3272263	2		=			
ANR	3272339	Identifier	buf		3272263	0					
ANR	3272340	CallExpression	reqline . c_str ( )		3272263	1					
ANR	3272341	Callee	reqline . c_str		3272263	0					
ANR	3272342	MemberAccess	reqline . c_str		3272263	0					
ANR	3272343	Identifier	reqline		3272263	0					
ANR	3272344	Identifier	c_str		3272263	1					
ANR	3272345	ArgumentList			3272263	1					
ANR	3272346	IfStatement	"if ( ! is_pending ( command , buf ) )"		3272263	8					
ANR	3272347	Condition	"! is_pending ( command , buf )"	6197:6:166614:166637	3272263	0	True				
ANR	3272348	UnaryOperationExpression	"! is_pending ( command , buf )"		3272263	0					
ANR	3272349	UnaryOperator	!		3272263	0					
ANR	3272350	CallExpression	"is_pending ( command , buf )"		3272263	1					
ANR	3272351	Callee	is_pending		3272263	0					
ANR	3272352	Identifier	is_pending		3272263	0					
ANR	3272353	ArgumentList	command		3272263	1					
ANR	3272354	Argument	command		3272263	0					
ANR	3272355	Identifier	command		3272263	0					
ANR	3272356	Argument	buf		3272263	1					
ANR	3272357	Identifier	buf		3272263	0					
ANR	3272358	CompoundStatement		18:33:528:528	3272263	1					
ANR	3272359	IfStatement	if ( m_mode == results_only )		3272263	0					
ANR	3272360	Condition	m_mode == results_only	6200:7:166746:166767	3272263	0	True				
ANR	3272361	EqualityExpression	m_mode == results_only		3272263	0		==			
ANR	3272362	Identifier	m_mode		3272263	0					
ANR	3272363	Identifier	results_only		3272263	1					
ANR	3272364	CompoundStatement		21:32:658:658	3272263	1					
ANR	3272365	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6201:3:166776:166815	3272263	0	True				
ANR	3272366	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3272263	0					
ANR	3272367	ExpressionStatement	"now_pending ( command , buf , normal_proxy , high_prio )"	6203:2:166823:166870	3272263	1	True				
ANR	3272368	CallExpression	"now_pending ( command , buf , normal_proxy , high_prio )"		3272263	0					
ANR	3272369	Callee	now_pending		3272263	0					
ANR	3272370	Identifier	now_pending		3272263	0					
ANR	3272371	ArgumentList	command		3272263	1					
ANR	3272372	Argument	command		3272263	0					
ANR	3272373	Identifier	command		3272263	0					
ANR	3272374	Argument	buf		3272263	1					
ANR	3272375	Identifier	buf		3272263	0					
ANR	3272376	Argument	normal_proxy		3272263	2					
ANR	3272377	Identifier	normal_proxy		3272263	0					
ANR	3272378	Argument	high_prio		3272263	3					
ANR	3272379	Identifier	high_prio		3272263	0					
ANR	3272380	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6209:1:166964:167015	3272263	9	True				
ANR	3272381	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3272263	0					
ANR	3272382	IdentifierDeclType	Gahp_Args *		3272263	0					
ANR	3272383	Identifier	result		3272263	1					
ANR	3272384	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3272263	2		=			
ANR	3272385	Identifier	result		3272263	0					
ANR	3272386	CallExpression	"get_pending_result ( command , buf )"		3272263	1					
ANR	3272387	Callee	get_pending_result		3272263	0					
ANR	3272388	Identifier	get_pending_result		3272263	0					
ANR	3272389	ArgumentList	command		3272263	1					
ANR	3272390	Argument	command		3272263	0					
ANR	3272391	Identifier	command		3272263	0					
ANR	3272392	Argument	buf		3272263	1					
ANR	3272393	Identifier	buf		3272263	0					
ANR	3272394	IfStatement	if ( result )		3272263	10					
ANR	3272395	Condition	result	6210:6:167023:167028	3272263	0	True				
ANR	3272396	Identifier	result		3272263	0					
ANR	3272397	CompoundStatement		33:2:948:958	3272263	1					
ANR	3272398	IdentifierDeclStatement	int rc = 0 ;	6212:2:167061:167071	3272263	0	True				
ANR	3272399	IdentifierDecl	rc = 0		3272263	0					
ANR	3272400	IdentifierDeclType	int		3272263	0					
ANR	3272401	Identifier	rc		3272263	1					
ANR	3272402	AssignmentExpression	rc = 0		3272263	2		=			
ANR	3272403	Identifier	rc		3272263	0					
ANR	3272404	PrimaryExpression	0		3272263	1					
ANR	3272405	IfStatement	if ( result -> argc < 2 || result -> argc > 3 )		3272263	1					
ANR	3272406	Condition	result -> argc < 2 || result -> argc > 3	6213:6:167079:167114	3272263	0	True				
ANR	3272407	OrExpression	result -> argc < 2 || result -> argc > 3		3272263	0		||			
ANR	3272408	RelationalExpression	result -> argc < 2		3272263	0		<			
ANR	3272409	PtrMemberAccess	result -> argc		3272263	0					
ANR	3272410	Identifier	result		3272263	0					
ANR	3272411	Identifier	argc		3272263	1					
ANR	3272412	PrimaryExpression	2		3272263	1					
ANR	3272413	RelationalExpression	result -> argc > 3		3272263	1		>			
ANR	3272414	PtrMemberAccess	result -> argc		3272263	0					
ANR	3272415	Identifier	result		3272263	0					
ANR	3272416	Identifier	argc		3272263	1					
ANR	3272417	PrimaryExpression	3		3272263	1					
ANR	3272418	CompoundStatement		34:44:1004:1004	3272263	1					
ANR	3272419	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	6214:3:167122:167153	3272263	0	True				
ANR	3272420	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3272263	0					
ANR	3272421	Callee	EXCEPT		3272263	0					
ANR	3272422	Identifier	EXCEPT		3272263	0					
ANR	3272423	ArgumentList	"""Bad %s Result"""		3272263	1					
ANR	3272424	Argument	"""Bad %s Result"""		3272263	0					
ANR	3272425	PrimaryExpression	"""Bad %s Result"""		3272263	0					
ANR	3272426	Argument	command		3272263	1					
ANR	3272427	Identifier	command		3272263	0					
ANR	3272428	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3272263	2					
ANR	3272429	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	6218:6:167266:167305	3272263	0	True				
ANR	3272430	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3272263	0		==			
ANR	3272431	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3272263	0					
ANR	3272432	Callee	strcmp		3272263	0					
ANR	3272433	Identifier	strcmp		3272263	0					
ANR	3272434	ArgumentList	result -> argv [ 1 ]		3272263	1					
ANR	3272435	Argument	result -> argv [ 1 ]		3272263	0					
ANR	3272436	ArrayIndexing	result -> argv [ 1 ]		3272263	0					
ANR	3272437	PtrMemberAccess	result -> argv		3272263	0					
ANR	3272438	Identifier	result		3272263	0					
ANR	3272439	Identifier	argv		3272263	1					
ANR	3272440	PrimaryExpression	1		3272263	1					
ANR	3272441	Argument	NULLSTRING		3272263	1					
ANR	3272442	Identifier	NULLSTRING		3272263	0					
ANR	3272443	PrimaryExpression	0		3272263	1					
ANR	3272444	CompoundStatement		39:48:1195:1195	3272263	1					
ANR	3272445	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , ""true"" ) )"		3272263	0					
ANR	3272446	Condition	"strcasecmp ( result -> argv [ 2 ] , ""true"" )"	6219:8:167318:167354	3272263	0	True				
ANR	3272447	CallExpression	"strcasecmp ( result -> argv [ 2 ] , ""true"" )"		3272263	0					
ANR	3272448	Callee	strcasecmp		3272263	0					
ANR	3272449	Identifier	strcasecmp		3272263	0					
ANR	3272450	ArgumentList	result -> argv [ 2 ]		3272263	1					
ANR	3272451	Argument	result -> argv [ 2 ]		3272263	0					
ANR	3272452	ArrayIndexing	result -> argv [ 2 ]		3272263	0					
ANR	3272453	PtrMemberAccess	result -> argv		3272263	0					
ANR	3272454	Identifier	result		3272263	0					
ANR	3272455	Identifier	argv		3272263	1					
ANR	3272456	PrimaryExpression	2		3272263	1					
ANR	3272457	Argument	"""true"""		3272263	1					
ANR	3272458	PrimaryExpression	"""true"""		3272263	0					
ANR	3272459	CompoundStatement		40:48:1245:1245	3272263	1					
ANR	3272460	ExpressionStatement	rc = 0	6220:4:167364:167370	3272263	0	True				
ANR	3272461	AssignmentExpression	rc = 0		3272263	0		=			
ANR	3272462	Identifier	rc		3272263	0					
ANR	3272463	PrimaryExpression	0		3272263	1					
ANR	3272464	ElseStatement	else		3272263	0					
ANR	3272465	CompoundStatement		42:10:1269:1269	3272263	0					
ANR	3272466	ExpressionStatement	rc = 1	6222:4:167388:167394	3272263	0	True				
ANR	3272467	AssignmentExpression	rc = 1		3272263	0		=			
ANR	3272468	Identifier	rc		3272263	0					
ANR	3272469	PrimaryExpression	1		3272263	1					
ANR	3272470	ExpressionStatement	"error_string = """""	6223:4:167400:167417	3272263	1	True				
ANR	3272471	AssignmentExpression	"error_string = """""		3272263	0		=			
ANR	3272472	Identifier	error_string		3272263	0					
ANR	3272473	PrimaryExpression	""""""		3272263	1					
ANR	3272474	ElseStatement	else		3272263	0					
ANR	3272475	CompoundStatement		46:9:1320:1320	3272263	0					
ANR	3272476	ExpressionStatement	rc = 1	6226:3:167438:167444	3272263	0	True				
ANR	3272477	AssignmentExpression	rc = 1		3272263	0		=			
ANR	3272478	Identifier	rc		3272263	0					
ANR	3272479	PrimaryExpression	1		3272263	1					
ANR	3272480	ExpressionStatement	error_string = result -> argv [ 1 ]	6227:3:167449:167479	3272263	1	True				
ANR	3272481	AssignmentExpression	error_string = result -> argv [ 1 ]		3272263	0		=			
ANR	3272482	Identifier	error_string		3272263	0					
ANR	3272483	ArrayIndexing	result -> argv [ 1 ]		3272263	1					
ANR	3272484	PtrMemberAccess	result -> argv		3272263	0					
ANR	3272485	Identifier	result		3272263	0					
ANR	3272486	Identifier	argv		3272263	1					
ANR	3272487	PrimaryExpression	1		3272263	1					
ANR	3272488	Statement	delete	6229:2:167487:167492	3272263	3	True				
ANR	3272489	ExpressionStatement	result	6229:9:167494:167500	3272263	4	True				
ANR	3272490	Identifier	result		3272263	0					
ANR	3272491	ReturnStatement	return rc ;	6230:2:167504:167513	3272263	5	True				
ANR	3272492	Identifier	rc		3272263	0					
ANR	3272493	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3272263	11					
ANR	3272494	Condition	"check_pending_timeout ( command , buf )"	6234:6:167571:167604	3272263	0	True				
ANR	3272495	CallExpression	"check_pending_timeout ( command , buf )"		3272263	0					
ANR	3272496	Callee	check_pending_timeout		3272263	0					
ANR	3272497	Identifier	check_pending_timeout		3272263	0					
ANR	3272498	ArgumentList	command		3272263	1					
ANR	3272499	Argument	command		3272263	0					
ANR	3272500	Identifier	command		3272263	0					
ANR	3272501	Argument	buf		3272263	1					
ANR	3272502	Identifier	buf		3272263	0					
ANR	3272503	CompoundStatement		55:43:1495:1495	3272263	1					
ANR	3272504	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6236:2:167645:167693	3272263	0	True				
ANR	3272505	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3272263	0					
ANR	3272506	Callee	sprintf		3272263	0					
ANR	3272507	Identifier	sprintf		3272263	0					
ANR	3272508	ArgumentList	error_string		3272263	1					
ANR	3272509	Argument	error_string		3272263	0					
ANR	3272510	Identifier	error_string		3272263	0					
ANR	3272511	Argument	"""%s timed out"""		3272263	1					
ANR	3272512	PrimaryExpression	"""%s timed out"""		3272263	0					
ANR	3272513	Argument	command		3272263	2					
ANR	3272514	Identifier	command		3272263	0					
ANR	3272515	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6237:2:167697:167732	3272263	1	True				
ANR	3272516	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3272263	0					
ANR	3272517	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6241:1:167792:167825	3272263	12	True				
ANR	3272518	Identifier	GAHPCLIENT_COMMAND_PENDING		3272263	0					
ANR	3272519	ReturnType	int		3272263	1					
ANR	3272520	Identifier	GahpClient :: cream_ping		3272263	2					
ANR	3272521	ParameterList	const char * service		3272263	3					
ANR	3272522	Parameter	const char * service	6179:23:166090:166109	3272263	0	True				
ANR	3272523	ParameterType	const char *		3272263	0					
ANR	3272524	Identifier	service		3272263	1					
ANR	3272525	CFGEntryNode	ENTRY		3272263		True				
ANR	3272526	CFGExitNode	EXIT		3272263		True				
ANR	3272527	Symbol	server -> m_commands_supported		3272263						
ANR	3272528	Symbol	server		3272263						
ANR	3272529	Symbol	escapeGahpString		3272263						
ANR	3272530	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3272263						
ANR	3272531	Symbol	* server		3272263						
ANR	3272532	Symbol	reqline . c_str		3272263						
ANR	3272533	Symbol	results_only		3272263						
ANR	3272534	Symbol	result -> argv		3272263						
ANR	3272535	Symbol	* server -> m_commands_supported		3272263						
ANR	3272536	Symbol	sprintf		3272263						
ANR	3272537	Symbol	result		3272263						
ANR	3272538	Symbol	normal_proxy		3272263						
ANR	3272539	Symbol	high_prio		3272263						
ANR	3272540	Symbol	* result		3272263						
ANR	3272541	Symbol	server -> m_commands_supported -> contains_anycase		3272263						
ANR	3272542	Symbol	GAHPCLIENT_COMMAND_PENDING		3272263						
ANR	3272543	Symbol	reqline		3272263						
ANR	3272544	Symbol	m_mode		3272263						
ANR	3272545	Symbol	strcasecmp		3272263						
ANR	3272546	Symbol	* result -> argv		3272263						
ANR	3272547	Symbol	strcmp		3272263						
ANR	3272548	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3272263						
ANR	3272549	Symbol	* * result		3272263						
ANR	3272550	Symbol	NULLSTRING		3272263						
ANR	3272551	Symbol	command		3272263						
ANR	3272552	Symbol	get_pending_result		3272263						
ANR	3272553	Symbol	rc		3272263						
ANR	3272554	Symbol	error_string		3272263						
ANR	3272555	Symbol	buf		3272263						
ANR	3272556	Symbol	service		3272263						
ANR	3272557	Symbol	x		3272263						
ANR	3272558	Symbol	result -> argc		3272263						
ANR	3272559	Symbol	FALSE		3272263						
ANR	3272560	Symbol	* * server		3272263						
ANR	3272561	Symbol	check_pending_timeout		3272263						
ANR	3272562	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3272263						
ANR	3272563	Symbol	is_pending		3272263						
ANR	3272564	Function	GahpClient :: cream_set_lease	6244:0:167830:169887							
ANR	3272565	FunctionDef	"GahpClient :: cream_set_lease (const char * service , const char * lease_id , time_t & lease_expiry)"		3272564	0					
ANR	3272566	CompoundStatement		6246:0:167927:169887	3272564	0					
ANR	3272567	Statement	static	6247:1:167930:167935	3272564	0	True				
ANR	3272568	IdentifierDeclStatement	"const char * command = ""CREAM_SET_LEASE"" ;"	6247:8:167937:167976	3272564	1	True				
ANR	3272569	IdentifierDecl	"* command = ""CREAM_SET_LEASE"""		3272564	0					
ANR	3272570	IdentifierDeclType	const char *		3272564	0					
ANR	3272571	Identifier	command		3272564	1					
ANR	3272572	AssignmentExpression	"* command = ""CREAM_SET_LEASE"""		3272564	2		=			
ANR	3272573	Identifier	command		3272564	0					
ANR	3272574	PrimaryExpression	"""CREAM_SET_LEASE"""		3272564	1					
ANR	3272575	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3272564	2					
ANR	3272576	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6250:6:168025:168086	3272564	0	True				
ANR	3272577	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3272564	0		==			
ANR	3272578	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3272564	0					
ANR	3272579	Callee	server -> m_commands_supported -> contains_anycase		3272564	0					
ANR	3272580	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3272564	0					
ANR	3272581	PtrMemberAccess	server -> m_commands_supported		3272564	0					
ANR	3272582	Identifier	server		3272564	0					
ANR	3272583	Identifier	m_commands_supported		3272564	1					
ANR	3272584	Identifier	contains_anycase		3272564	1					
ANR	3272585	ArgumentList	command		3272564	1					
ANR	3272586	Argument	command		3272564	0					
ANR	3272587	Identifier	command		3272564	0					
ANR	3272588	Identifier	FALSE		3272564	1					
ANR	3272589	CompoundStatement		5:70:161:161	3272564	1					
ANR	3272590	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6251:2:168093:168132	3272564	0	True				
ANR	3272591	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3272564	0					
ANR	3272592	IfStatement	if ( ! service )		3272564	3					
ANR	3272593	Condition	! service	6254:5:168169:168176	3272564	0	True				
ANR	3272594	UnaryOperationExpression	! service		3272564	0					
ANR	3272595	UnaryOperator	!		3272564	0					
ANR	3272596	Identifier	service		3272564	1					
ANR	3272597	ExpressionStatement	service = NULLSTRING	6254:15:168179:168197	3272564	1	True				
ANR	3272598	AssignmentExpression	service = NULLSTRING		3272564	0		=			
ANR	3272599	Identifier	service		3272564	0					
ANR	3272600	Identifier	NULLSTRING		3272564	1					
ANR	3272601	IfStatement	if ( ! lease_id )		3272564	4					
ANR	3272602	Condition	! lease_id	6255:5:168204:168212	3272564	0	True				
ANR	3272603	UnaryOperationExpression	! lease_id		3272564	0					
ANR	3272604	UnaryOperator	!		3272564	0					
ANR	3272605	Identifier	lease_id		3272564	1					
ANR	3272606	ExpressionStatement	lease_id = NULLSTRING	6255:16:168215:168234	3272564	1	True				
ANR	3272607	AssignmentExpression	lease_id = NULLSTRING		3272564	0		=			
ANR	3272608	Identifier	lease_id		3272564	0					
ANR	3272609	Identifier	NULLSTRING		3272564	1					
ANR	3272610	IdentifierDeclStatement	std :: string reqline ;	6256:1:168237:168256	3272564	5	True				
ANR	3272611	IdentifierDecl	reqline		3272564	0					
ANR	3272612	IdentifierDeclType	std :: string		3272564	0					
ANR	3272613	Identifier	reqline		3272564	1					
ANR	3272614	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service ) ) ;	6257:1:168259:168307	3272564	6	True				
ANR	3272615	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service ) )		3272564	0					
ANR	3272616	IdentifierDeclType	char *		3272564	0					
ANR	3272617	Identifier	esc1		3272564	1					
ANR	3272618	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service ) )		3272564	2		=			
ANR	3272619	Identifier	esc1		3272564	0					
ANR	3272620	CallExpression	strdup ( escapeGahpString ( service ) )		3272564	1					
ANR	3272621	Callee	strdup		3272564	0					
ANR	3272622	Identifier	strdup		3272564	0					
ANR	3272623	ArgumentList	escapeGahpString ( service )		3272564	1					
ANR	3272624	Argument	escapeGahpString ( service )		3272564	0					
ANR	3272625	CallExpression	escapeGahpString ( service )		3272564	0					
ANR	3272626	Callee	escapeGahpString		3272564	0					
ANR	3272627	Identifier	escapeGahpString		3272564	0					
ANR	3272628	ArgumentList	service		3272564	1					
ANR	3272629	Argument	service		3272564	0					
ANR	3272630	Identifier	service		3272564	0					
ANR	3272631	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( lease_id ) ) ;	6258:1:168310:168359	3272564	7	True				
ANR	3272632	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( lease_id ) )		3272564	0					
ANR	3272633	IdentifierDeclType	char *		3272564	0					
ANR	3272634	Identifier	esc2		3272564	1					
ANR	3272635	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( lease_id ) )		3272564	2		=			
ANR	3272636	Identifier	esc2		3272564	0					
ANR	3272637	CallExpression	strdup ( escapeGahpString ( lease_id ) )		3272564	1					
ANR	3272638	Callee	strdup		3272564	0					
ANR	3272639	Identifier	strdup		3272564	0					
ANR	3272640	ArgumentList	escapeGahpString ( lease_id )		3272564	1					
ANR	3272641	Argument	escapeGahpString ( lease_id )		3272564	0					
ANR	3272642	CallExpression	escapeGahpString ( lease_id )		3272564	0					
ANR	3272643	Callee	escapeGahpString		3272564	0					
ANR	3272644	Identifier	escapeGahpString		3272564	0					
ANR	3272645	ArgumentList	lease_id		3272564	1					
ANR	3272646	Argument	lease_id		3272564	0					
ANR	3272647	Identifier	lease_id		3272564	0					
ANR	3272648	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %ld"" , esc1 , esc2 , ( long ) lease_expiry ) ;"	6259:1:168362:168431	3272564	8	True				
ANR	3272649	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %ld"" , esc1 , esc2 , ( long ) lease_expiry )"		3272564	0					
ANR	3272650	IdentifierDeclType	int		3272564	0					
ANR	3272651	Identifier	x		3272564	1					
ANR	3272652	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %ld"" , esc1 , esc2 , ( long ) lease_expiry )"		3272564	2		=			
ANR	3272653	Identifier	x		3272564	0					
ANR	3272654	CallExpression	"sprintf ( reqline , ""%s %s %ld"" , esc1 , esc2 , ( long ) lease_expiry )"		3272564	1					
ANR	3272655	Callee	sprintf		3272564	0					
ANR	3272656	Identifier	sprintf		3272564	0					
ANR	3272657	ArgumentList	reqline		3272564	1					
ANR	3272658	Argument	reqline		3272564	0					
ANR	3272659	Identifier	reqline		3272564	0					
ANR	3272660	Argument	"""%s %s %ld"""		3272564	1					
ANR	3272661	PrimaryExpression	"""%s %s %ld"""		3272564	0					
ANR	3272662	Argument	esc1		3272564	2					
ANR	3272663	Identifier	esc1		3272564	0					
ANR	3272664	Argument	esc2		3272564	3					
ANR	3272665	Identifier	esc2		3272564	0					
ANR	3272666	Argument	( long ) lease_expiry		3272564	4					
ANR	3272667	CastExpression	( long ) lease_expiry		3272564	0					
ANR	3272668	CastTarget	long		3272564	0					
ANR	3272669	Identifier	lease_expiry		3272564	1					
ANR	3272670	ExpressionStatement	free ( esc1 )	6260:1:168434:168446	3272564	9	True				
ANR	3272671	CallExpression	free ( esc1 )		3272564	0					
ANR	3272672	Callee	free		3272564	0					
ANR	3272673	Identifier	free		3272564	0					
ANR	3272674	ArgumentList	esc1		3272564	1					
ANR	3272675	Argument	esc1		3272564	0					
ANR	3272676	Identifier	esc1		3272564	0					
ANR	3272677	ExpressionStatement	free ( esc2 )	6261:1:168449:168461	3272564	10	True				
ANR	3272678	CallExpression	free ( esc2 )		3272564	0					
ANR	3272679	Callee	free		3272564	0					
ANR	3272680	Identifier	free		3272564	0					
ANR	3272681	ArgumentList	esc2		3272564	1					
ANR	3272682	Argument	esc2		3272564	0					
ANR	3272683	Identifier	esc2		3272564	0					
ANR	3272684	ExpressionStatement	ASSERT ( x > 0 )	6262:1:168464:168479	3272564	11	True				
ANR	3272685	CallExpression	ASSERT ( x > 0 )		3272564	0					
ANR	3272686	Callee	ASSERT		3272564	0					
ANR	3272687	Identifier	ASSERT		3272564	0					
ANR	3272688	ArgumentList	x > 0		3272564	1					
ANR	3272689	Argument	x > 0		3272564	0					
ANR	3272690	RelationalExpression	x > 0		3272564	0		>			
ANR	3272691	Identifier	x		3272564	0					
ANR	3272692	PrimaryExpression	0		3272564	1					
ANR	3272693	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6263:1:168482:168515	3272564	12	True				
ANR	3272694	IdentifierDecl	* buf = reqline . c_str ( )		3272564	0					
ANR	3272695	IdentifierDeclType	const char *		3272564	0					
ANR	3272696	Identifier	buf		3272564	1					
ANR	3272697	AssignmentExpression	* buf = reqline . c_str ( )		3272564	2		=			
ANR	3272698	Identifier	buf		3272564	0					
ANR	3272699	CallExpression	reqline . c_str ( )		3272564	1					
ANR	3272700	Callee	reqline . c_str		3272564	0					
ANR	3272701	MemberAccess	reqline . c_str		3272564	0					
ANR	3272702	Identifier	reqline		3272564	0					
ANR	3272703	Identifier	c_str		3272564	1					
ANR	3272704	ArgumentList			3272564	1					
ANR	3272705	IfStatement	"if ( ! is_pending ( command , buf ) )"		3272564	13					
ANR	3272706	Condition	"! is_pending ( command , buf )"	6267:6:168616:168639	3272564	0	True				
ANR	3272707	UnaryOperationExpression	"! is_pending ( command , buf )"		3272564	0					
ANR	3272708	UnaryOperator	!		3272564	0					
ANR	3272709	CallExpression	"is_pending ( command , buf )"		3272564	1					
ANR	3272710	Callee	is_pending		3272564	0					
ANR	3272711	Identifier	is_pending		3272564	0					
ANR	3272712	ArgumentList	command		3272564	1					
ANR	3272713	Argument	command		3272564	0					
ANR	3272714	Identifier	command		3272564	0					
ANR	3272715	Argument	buf		3272564	1					
ANR	3272716	Identifier	buf		3272564	0					
ANR	3272717	CompoundStatement		22:33:715:715	3272564	1					
ANR	3272718	IfStatement	if ( m_mode == results_only )		3272564	0					
ANR	3272719	Condition	m_mode == results_only	6270:7:168748:168769	3272564	0	True				
ANR	3272720	EqualityExpression	m_mode == results_only		3272564	0		==			
ANR	3272721	Identifier	m_mode		3272564	0					
ANR	3272722	Identifier	results_only		3272564	1					
ANR	3272723	CompoundStatement		25:32:845:845	3272564	1					
ANR	3272724	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6271:3:168778:168817	3272564	0	True				
ANR	3272725	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3272564	0					
ANR	3272726	ExpressionStatement	"now_pending ( command , buf , normal_proxy , high_prio )"	6273:2:168825:168872	3272564	1	True				
ANR	3272727	CallExpression	"now_pending ( command , buf , normal_proxy , high_prio )"		3272564	0					
ANR	3272728	Callee	now_pending		3272564	0					
ANR	3272729	Identifier	now_pending		3272564	0					
ANR	3272730	ArgumentList	command		3272564	1					
ANR	3272731	Argument	command		3272564	0					
ANR	3272732	Identifier	command		3272564	0					
ANR	3272733	Argument	buf		3272564	1					
ANR	3272734	Identifier	buf		3272564	0					
ANR	3272735	Argument	normal_proxy		3272564	2					
ANR	3272736	Identifier	normal_proxy		3272564	0					
ANR	3272737	Argument	high_prio		3272564	3					
ANR	3272738	Identifier	high_prio		3272564	0					
ANR	3272739	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6279:1:168966:169017	3272564	14	True				
ANR	3272740	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3272564	0					
ANR	3272741	IdentifierDeclType	Gahp_Args *		3272564	0					
ANR	3272742	Identifier	result		3272564	1					
ANR	3272743	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3272564	2		=			
ANR	3272744	Identifier	result		3272564	0					
ANR	3272745	CallExpression	"get_pending_result ( command , buf )"		3272564	1					
ANR	3272746	Callee	get_pending_result		3272564	0					
ANR	3272747	Identifier	get_pending_result		3272564	0					
ANR	3272748	ArgumentList	command		3272564	1					
ANR	3272749	Argument	command		3272564	0					
ANR	3272750	Identifier	command		3272564	0					
ANR	3272751	Argument	buf		3272564	1					
ANR	3272752	Identifier	buf		3272564	0					
ANR	3272753	IfStatement	if ( result )		3272564	15					
ANR	3272754	Condition	result	6280:6:169025:169030	3272564	0	True				
ANR	3272755	Identifier	result		3272564	0					
ANR	3272756	CompoundStatement		37:2:1134:1144	3272564	1					
ANR	3272757	IdentifierDeclStatement	int rc = 0 ;	6282:2:169062:169072	3272564	0	True				
ANR	3272758	IdentifierDecl	rc = 0		3272564	0					
ANR	3272759	IdentifierDeclType	int		3272564	0					
ANR	3272760	Identifier	rc		3272564	1					
ANR	3272761	AssignmentExpression	rc = 0		3272564	2		=			
ANR	3272762	Identifier	rc		3272564	0					
ANR	3272763	PrimaryExpression	0		3272564	1					
ANR	3272764	IfStatement	if ( result -> argc == 2 )		3272564	1					
ANR	3272765	Condition	result -> argc == 2	6283:7:169081:169097	3272564	0	True				
ANR	3272766	EqualityExpression	result -> argc == 2		3272564	0		==			
ANR	3272767	PtrMemberAccess	result -> argc		3272564	0					
ANR	3272768	Identifier	result		3272564	0					
ANR	3272769	Identifier	argc		3272564	1					
ANR	3272770	PrimaryExpression	2		3272564	1					
ANR	3272771	CompoundStatement		38:27:1173:1173	3272564	1					
ANR	3272772	IfStatement	"if ( ! strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3272564	0					
ANR	3272773	Condition	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"	6284:8:169111:169148	3272564	0	True				
ANR	3272774	UnaryOperationExpression	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3272564	0					
ANR	3272775	UnaryOperator	!		3272564	0					
ANR	3272776	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3272564	1					
ANR	3272777	Callee	strcmp		3272564	0					
ANR	3272778	Identifier	strcmp		3272564	0					
ANR	3272779	ArgumentList	result -> argv [ 1 ]		3272564	1					
ANR	3272780	Argument	result -> argv [ 1 ]		3272564	0					
ANR	3272781	ArrayIndexing	result -> argv [ 1 ]		3272564	0					
ANR	3272782	PtrMemberAccess	result -> argv		3272564	0					
ANR	3272783	Identifier	result		3272564	0					
ANR	3272784	Identifier	argv		3272564	1					
ANR	3272785	PrimaryExpression	1		3272564	1					
ANR	3272786	Argument	NULLSTRING		3272564	1					
ANR	3272787	Identifier	NULLSTRING		3272564	0					
ANR	3272788	CompoundStatement		39:49:1224:1224	3272564	1					
ANR	3272789	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6285:4:169158:169192	3272564	0	True				
ANR	3272790	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3272564	0					
ANR	3272791	Callee	EXCEPT		3272564	0					
ANR	3272792	Identifier	EXCEPT		3272564	0					
ANR	3272793	ArgumentList	"""Bad %s result"""		3272564	1					
ANR	3272794	Argument	"""Bad %s result"""		3272564	0					
ANR	3272795	PrimaryExpression	"""Bad %s result"""		3272564	0					
ANR	3272796	Argument	command		3272564	1					
ANR	3272797	Identifier	command		3272564	0					
ANR	3272798	ExpressionStatement	error_string = result -> argv [ 1 ]	6287:3:169202:169232	3272564	1	True				
ANR	3272799	AssignmentExpression	error_string = result -> argv [ 1 ]		3272564	0		=			
ANR	3272800	Identifier	error_string		3272564	0					
ANR	3272801	ArrayIndexing	result -> argv [ 1 ]		3272564	1					
ANR	3272802	PtrMemberAccess	result -> argv		3272564	0					
ANR	3272803	Identifier	result		3272564	0					
ANR	3272804	Identifier	argv		3272564	1					
ANR	3272805	PrimaryExpression	1		3272564	1					
ANR	3272806	ExpressionStatement	rc = 1	6288:3:169237:169243	3272564	2	True				
ANR	3272807	AssignmentExpression	rc = 1		3272564	0		=			
ANR	3272808	Identifier	rc		3272564	0					
ANR	3272809	PrimaryExpression	1		3272564	1					
ANR	3272810	ElseStatement	else		3272564	0					
ANR	3272811	IfStatement	if ( result -> argc == 3 )		3272564	0					
ANR	3272812	Condition	result -> argc == 3	6289:14:169259:169275	3272564	0	True				
ANR	3272813	EqualityExpression	result -> argc == 3		3272564	0		==			
ANR	3272814	PtrMemberAccess	result -> argc		3272564	0					
ANR	3272815	Identifier	result		3272564	0					
ANR	3272816	Identifier	argc		3272564	1					
ANR	3272817	PrimaryExpression	3		3272564	1					
ANR	3272818	CompoundStatement		44:34:1351:1351	3272564	1					
ANR	3272819	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3272564	0					
ANR	3272820	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	6290:8:169289:169325	3272564	0	True				
ANR	3272821	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3272564	0					
ANR	3272822	Callee	strcmp		3272564	0					
ANR	3272823	Identifier	strcmp		3272564	0					
ANR	3272824	ArgumentList	result -> argv [ 1 ]		3272564	1					
ANR	3272825	Argument	result -> argv [ 1 ]		3272564	0					
ANR	3272826	ArrayIndexing	result -> argv [ 1 ]		3272564	0					
ANR	3272827	PtrMemberAccess	result -> argv		3272564	0					
ANR	3272828	Identifier	result		3272564	0					
ANR	3272829	Identifier	argv		3272564	1					
ANR	3272830	PrimaryExpression	1		3272564	1					
ANR	3272831	Argument	NULLSTRING		3272564	1					
ANR	3272832	Identifier	NULLSTRING		3272564	0					
ANR	3272833	CompoundStatement		45:48:1401:1401	3272564	1					
ANR	3272834	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6291:4:169335:169369	3272564	0	True				
ANR	3272835	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3272564	0					
ANR	3272836	Callee	EXCEPT		3272564	0					
ANR	3272837	Identifier	EXCEPT		3272564	0					
ANR	3272838	ArgumentList	"""Bad %s result"""		3272564	1					
ANR	3272839	Argument	"""Bad %s result"""		3272564	0					
ANR	3272840	PrimaryExpression	"""Bad %s result"""		3272564	0					
ANR	3272841	Argument	command		3272564	1					
ANR	3272842	Identifier	command		3272564	0					
ANR	3272843	IfStatement	"if ( strcasecmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3272564	1					
ANR	3272844	Condition	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"	6294:8:169385:169423	3272564	0	True				
ANR	3272845	CallExpression	"strcasecmp ( result -> argv [ 2 ] , NULLSTRING )"		3272564	0					
ANR	3272846	Callee	strcasecmp		3272564	0					
ANR	3272847	Identifier	strcasecmp		3272564	0					
ANR	3272848	ArgumentList	result -> argv [ 2 ]		3272564	1					
ANR	3272849	Argument	result -> argv [ 2 ]		3272564	0					
ANR	3272850	ArrayIndexing	result -> argv [ 2 ]		3272564	0					
ANR	3272851	PtrMemberAccess	result -> argv		3272564	0					
ANR	3272852	Identifier	result		3272564	0					
ANR	3272853	Identifier	argv		3272564	1					
ANR	3272854	PrimaryExpression	2		3272564	1					
ANR	3272855	Argument	NULLSTRING		3272564	1					
ANR	3272856	Identifier	NULLSTRING		3272564	0					
ANR	3272857	CompoundStatement		49:50:1499:1499	3272564	1					
ANR	3272858	ExpressionStatement	lease_expiry = atoi ( result -> argv [ 2 ] )	6295:4:169433:169471	3272564	0	True				
ANR	3272859	AssignmentExpression	lease_expiry = atoi ( result -> argv [ 2 ] )		3272564	0		=			
ANR	3272860	Identifier	lease_expiry		3272564	0					
ANR	3272861	CallExpression	atoi ( result -> argv [ 2 ] )		3272564	1					
ANR	3272862	Callee	atoi		3272564	0					
ANR	3272863	Identifier	atoi		3272564	0					
ANR	3272864	ArgumentList	result -> argv [ 2 ]		3272564	1					
ANR	3272865	Argument	result -> argv [ 2 ]		3272564	0					
ANR	3272866	ArrayIndexing	result -> argv [ 2 ]		3272564	0					
ANR	3272867	PtrMemberAccess	result -> argv		3272564	0					
ANR	3272868	Identifier	result		3272564	0					
ANR	3272869	Identifier	argv		3272564	1					
ANR	3272870	PrimaryExpression	2		3272564	1					
ANR	3272871	ExpressionStatement	rc = 0	6297:3:169481:169487	3272564	2	True				
ANR	3272872	AssignmentExpression	rc = 0		3272564	0		=			
ANR	3272873	Identifier	rc		3272564	0					
ANR	3272874	PrimaryExpression	0		3272564	1					
ANR	3272875	ElseStatement	else		3272564	0					
ANR	3272876	CompoundStatement		53:9:1570:1570	3272564	0					
ANR	3272877	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6299:3:169503:169537	3272564	0	True				
ANR	3272878	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3272564	0					
ANR	3272879	Callee	EXCEPT		3272564	0					
ANR	3272880	Identifier	EXCEPT		3272564	0					
ANR	3272881	ArgumentList	"""Bad %s result"""		3272564	1					
ANR	3272882	Argument	"""Bad %s result"""		3272564	0					
ANR	3272883	PrimaryExpression	"""Bad %s result"""		3272564	0					
ANR	3272884	Argument	command		3272564	1					
ANR	3272885	Identifier	command		3272564	0					
ANR	3272886	Statement	delete	6302:2:169549:169554	3272564	2	True				
ANR	3272887	ExpressionStatement	result	6302:9:169556:169562	3272564	3	True				
ANR	3272888	Identifier	result		3272564	0					
ANR	3272889	ReturnStatement	return rc ;	6303:2:169566:169575	3272564	4	True				
ANR	3272890	Identifier	rc		3272564	0					
ANR	3272891	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3272564	16					
ANR	3272892	Condition	"check_pending_timeout ( command , buf )"	6307:6:169632:169665	3272564	0	True				
ANR	3272893	CallExpression	"check_pending_timeout ( command , buf )"		3272564	0					
ANR	3272894	Callee	check_pending_timeout		3272564	0					
ANR	3272895	Identifier	check_pending_timeout		3272564	0					
ANR	3272896	ArgumentList	command		3272564	1					
ANR	3272897	Argument	command		3272564	0					
ANR	3272898	Identifier	command		3272564	0					
ANR	3272899	Argument	buf		3272564	1					
ANR	3272900	Identifier	buf		3272564	0					
ANR	3272901	CompoundStatement		62:43:1741:1741	3272564	1					
ANR	3272902	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6309:2:169705:169753	3272564	0	True				
ANR	3272903	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3272564	0					
ANR	3272904	Callee	sprintf		3272564	0					
ANR	3272905	Identifier	sprintf		3272564	0					
ANR	3272906	ArgumentList	error_string		3272564	1					
ANR	3272907	Argument	error_string		3272564	0					
ANR	3272908	Identifier	error_string		3272564	0					
ANR	3272909	Argument	"""%s timed out"""		3272564	1					
ANR	3272910	PrimaryExpression	"""%s timed out"""		3272564	0					
ANR	3272911	Argument	command		3272564	2					
ANR	3272912	Identifier	command		3272564	0					
ANR	3272913	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6310:2:169757:169792	3272564	1	True				
ANR	3272914	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3272564	0					
ANR	3272915	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6314:1:169852:169885	3272564	17	True				
ANR	3272916	Identifier	GAHPCLIENT_COMMAND_PENDING		3272564	0					
ANR	3272917	ReturnType	int		3272564	1					
ANR	3272918	Identifier	GahpClient :: cream_set_lease		3272564	2					
ANR	3272919	ParameterList	"const char * service , const char * lease_id , time_t & lease_expiry"		3272564	3					
ANR	3272920	Parameter	const char * service	6245:28:167862:167880	3272564	0	True				
ANR	3272921	ParameterType	const char *		3272564	0					
ANR	3272922	Identifier	service		3272564	1					
ANR	3272923	Parameter	const char * lease_id	6245:49:167883:167902	3272564	1	True				
ANR	3272924	ParameterType	const char *		3272564	0					
ANR	3272925	Identifier	lease_id		3272564	1					
ANR	3272926	Parameter	time_t & lease_expiry	6245:71:167905:167924	3272564	2	True				
ANR	3272927	ParameterType	time_t &		3272564	0					
ANR	3272928	Identifier	lease_expiry		3272564	1					
ANR	3272929	CFGEntryNode	ENTRY		3272564		True				
ANR	3272930	CFGExitNode	EXIT		3272564		True				
ANR	3272931	Symbol	server -> m_commands_supported		3272564						
ANR	3272932	Symbol	server		3272564						
ANR	3272933	Symbol	escapeGahpString		3272564						
ANR	3272934	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3272564						
ANR	3272935	Symbol	* server		3272564						
ANR	3272936	Symbol	reqline . c_str		3272564						
ANR	3272937	Symbol	results_only		3272564						
ANR	3272938	Symbol	result -> argv		3272564						
ANR	3272939	Symbol	* server -> m_commands_supported		3272564						
ANR	3272940	Symbol	sprintf		3272564						
ANR	3272941	Symbol	result		3272564						
ANR	3272942	Symbol	normal_proxy		3272564						
ANR	3272943	Symbol	high_prio		3272564						
ANR	3272944	Symbol	lease_expiry		3272564						
ANR	3272945	Symbol	* result		3272564						
ANR	3272946	Symbol	server -> m_commands_supported -> contains_anycase		3272564						
ANR	3272947	Symbol	GAHPCLIENT_COMMAND_PENDING		3272564						
ANR	3272948	Symbol	reqline		3272564						
ANR	3272949	Symbol	m_mode		3272564						
ANR	3272950	Symbol	strcasecmp		3272564						
ANR	3272951	Symbol	* result -> argv		3272564						
ANR	3272952	Symbol	strcmp		3272564						
ANR	3272953	Symbol	atoi		3272564						
ANR	3272954	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3272564						
ANR	3272955	Symbol	* * result		3272564						
ANR	3272956	Symbol	NULLSTRING		3272564						
ANR	3272957	Symbol	command		3272564						
ANR	3272958	Symbol	get_pending_result		3272564						
ANR	3272959	Symbol	rc		3272564						
ANR	3272960	Symbol	error_string		3272564						
ANR	3272961	Symbol	esc2		3272564						
ANR	3272962	Symbol	buf		3272564						
ANR	3272963	Symbol	esc1		3272564						
ANR	3272964	Symbol	service		3272564						
ANR	3272965	Symbol	x		3272564						
ANR	3272966	Symbol	result -> argc		3272564						
ANR	3272967	Symbol	FALSE		3272564						
ANR	3272968	Symbol	* * server		3272564						
ANR	3272969	Symbol	strdup		3272564						
ANR	3272970	Symbol	check_pending_timeout		3272564						
ANR	3272971	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3272564						
ANR	3272972	Symbol	lease_id		3272564						
ANR	3272973	Symbol	is_pending		3272564						
ANR	3272974	Function	GahpClient :: ec2_vm_start	6318:0:169903:174648							
ANR	3272975	FunctionDef	"GahpClient :: ec2_vm_start (const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * ami_id , const char * keypair , const char * user_data , const char * user_data_file , const char * instance_type , const char * availability_zone , const char * vpc_subnet , const char * vpc_ip , StringList & groupnames , char * & instance_id , char * & error_code)"		3272974	0					
ANR	3272976	CompoundStatement		6332:0:170402:174648	3272974	0					
ANR	3272977	Statement	static	6335:1:170548:170553	3272974	0	True				
ANR	3272978	IdentifierDeclStatement	"const char * command = ""EC2_VM_START"" ;"	6335:8:170555:170591	3272974	1	True				
ANR	3272979	IdentifierDecl	"* command = ""EC2_VM_START"""		3272974	0					
ANR	3272980	IdentifierDeclType	const char *		3272974	0					
ANR	3272981	Identifier	command		3272974	1					
ANR	3272982	AssignmentExpression	"* command = ""EC2_VM_START"""		3272974	2		=			
ANR	3272983	Identifier	command		3272974	0					
ANR	3272984	PrimaryExpression	"""EC2_VM_START"""		3272974	1					
ANR	3272985	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3272974	2					
ANR	3272986	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6338:6:170639:170700	3272974	0	True				
ANR	3272987	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3272974	0		==			
ANR	3272988	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3272974	0					
ANR	3272989	Callee	server -> m_commands_supported -> contains_anycase		3272974	0					
ANR	3272990	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3272974	0					
ANR	3272991	PtrMemberAccess	server -> m_commands_supported		3272974	0					
ANR	3272992	Identifier	server		3272974	0					
ANR	3272993	Identifier	m_commands_supported		3272974	1					
ANR	3272994	Identifier	contains_anycase		3272974	1					
ANR	3272995	ArgumentList	command		3272974	1					
ANR	3272996	Argument	command		3272974	0					
ANR	3272997	Identifier	command		3272974	0					
ANR	3272998	Identifier	FALSE		3272974	1					
ANR	3272999	CompoundStatement		7:70:300:300	3272974	1					
ANR	3273000	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6339:2:170707:170746	3272974	0	True				
ANR	3273001	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3272974	0					
ANR	3273002	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( ami_id == NULL ) )		3272974	3					
ANR	3273003	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( ami_id == NULL )	6343:6:170788:170883	3272974	0	True				
ANR	3273004	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( ami_id == NULL )		3272974	0		||			
ANR	3273005	EqualityExpression	service_url == NULL		3272974	0		==			
ANR	3273006	Identifier	service_url		3272974	0					
ANR	3273007	Identifier	NULL		3272974	1					
ANR	3273008	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( ami_id == NULL )		3272974	1		||			
ANR	3273009	EqualityExpression	publickeyfile == NULL		3272974	0		==			
ANR	3273010	Identifier	publickeyfile		3272974	0					
ANR	3273011	Identifier	NULL		3272974	1					
ANR	3273012	OrExpression	( privatekeyfile == NULL ) || ( ami_id == NULL )		3272974	1		||			
ANR	3273013	EqualityExpression	privatekeyfile == NULL		3272974	0		==			
ANR	3273014	Identifier	privatekeyfile		3272974	0					
ANR	3273015	Identifier	NULL		3272974	1					
ANR	3273016	EqualityExpression	ami_id == NULL		3272974	1		==			
ANR	3273017	Identifier	ami_id		3272974	0					
ANR	3273018	Identifier	NULL		3272974	1					
ANR	3273019	CompoundStatement		12:105:484:484	3272974	1					
ANR	3273020	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6344:2:170891:170930	3272974	0	True				
ANR	3273021	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3272974	0					
ANR	3273022	IfStatement	if ( ! keypair )		3272974	4					
ANR	3273023	Condition	! keypair	6350:6:171069:171076	3272974	0	True				
ANR	3273024	UnaryOperationExpression	! keypair		3272974	0					
ANR	3273025	UnaryOperator	!		3272974	0					
ANR	3273026	Identifier	keypair		3272974	1					
ANR	3273027	ExpressionStatement	keypair = NULLSTRING	6350:17:171080:171100	3272974	1	True				
ANR	3273028	AssignmentExpression	keypair = NULLSTRING		3272974	0		=			
ANR	3273029	Identifier	keypair		3272974	0					
ANR	3273030	Identifier	NULLSTRING		3272974	1					
ANR	3273031	IfStatement	if ( ! user_data )		3272974	5					
ANR	3273032	Condition	! user_data	6351:6:171108:171117	3272974	0	True				
ANR	3273033	UnaryOperationExpression	! user_data		3272974	0					
ANR	3273034	UnaryOperator	!		3272974	0					
ANR	3273035	Identifier	user_data		3272974	1					
ANR	3273036	ExpressionStatement	user_data = NULLSTRING	6351:19:171121:171143	3272974	1	True				
ANR	3273037	AssignmentExpression	user_data = NULLSTRING		3272974	0		=			
ANR	3273038	Identifier	user_data		3272974	0					
ANR	3273039	Identifier	NULLSTRING		3272974	1					
ANR	3273040	IfStatement	if ( ! user_data_file )		3272974	6					
ANR	3273041	Condition	! user_data_file	6352:6:171151:171165	3272974	0	True				
ANR	3273042	UnaryOperationExpression	! user_data_file		3272974	0					
ANR	3273043	UnaryOperator	!		3272974	0					
ANR	3273044	Identifier	user_data_file		3272974	1					
ANR	3273045	ExpressionStatement	user_data_file = NULLSTRING	6352:24:171169:171196	3272974	1	True				
ANR	3273046	AssignmentExpression	user_data_file = NULLSTRING		3272974	0		=			
ANR	3273047	Identifier	user_data_file		3272974	0					
ANR	3273048	Identifier	NULLSTRING		3272974	1					
ANR	3273049	IfStatement	if ( ! instance_type )		3272974	7					
ANR	3273050	Condition	! instance_type	6353:6:171204:171217	3272974	0	True				
ANR	3273051	UnaryOperationExpression	! instance_type		3272974	0					
ANR	3273052	UnaryOperator	!		3272974	0					
ANR	3273053	Identifier	instance_type		3272974	1					
ANR	3273054	ExpressionStatement	instance_type = NULLSTRING	6353:23:171221:171247	3272974	1	True				
ANR	3273055	AssignmentExpression	instance_type = NULLSTRING		3272974	0		=			
ANR	3273056	Identifier	instance_type		3272974	0					
ANR	3273057	Identifier	NULLSTRING		3272974	1					
ANR	3273058	IfStatement	if ( ! availability_zone || 0 == strlen ( availability_zone ) )		3272974	8					
ANR	3273059	Condition	! availability_zone || 0 == strlen ( availability_zone )	6354:6:171255:171304	3272974	0	True				
ANR	3273060	OrExpression	! availability_zone || 0 == strlen ( availability_zone )		3272974	0		||			
ANR	3273061	UnaryOperationExpression	! availability_zone		3272974	0					
ANR	3273062	UnaryOperator	!		3272974	0					
ANR	3273063	Identifier	availability_zone		3272974	1					
ANR	3273064	EqualityExpression	0 == strlen ( availability_zone )		3272974	1		==			
ANR	3273065	PrimaryExpression	0		3272974	0					
ANR	3273066	CallExpression	strlen ( availability_zone )		3272974	1					
ANR	3273067	Callee	strlen		3272974	0					
ANR	3273068	Identifier	strlen		3272974	0					
ANR	3273069	ArgumentList	availability_zone		3272974	1					
ANR	3273070	Argument	availability_zone		3272974	0					
ANR	3273071	Identifier	availability_zone		3272974	0					
ANR	3273072	ExpressionStatement	availability_zone = NULLSTRING	6354:59:171308:171338	3272974	1	True				
ANR	3273073	AssignmentExpression	availability_zone = NULLSTRING		3272974	0		=			
ANR	3273074	Identifier	availability_zone		3272974	0					
ANR	3273075	Identifier	NULLSTRING		3272974	1					
ANR	3273076	IfStatement	if ( ! vpc_subnet || 0 == strlen ( vpc_subnet ) )		3272974	9					
ANR	3273077	Condition	! vpc_subnet || 0 == strlen ( vpc_subnet )	6355:6:171346:171381	3272974	0	True				
ANR	3273078	OrExpression	! vpc_subnet || 0 == strlen ( vpc_subnet )		3272974	0		||			
ANR	3273079	UnaryOperationExpression	! vpc_subnet		3272974	0					
ANR	3273080	UnaryOperator	!		3272974	0					
ANR	3273081	Identifier	vpc_subnet		3272974	1					
ANR	3273082	EqualityExpression	0 == strlen ( vpc_subnet )		3272974	1		==			
ANR	3273083	PrimaryExpression	0		3272974	0					
ANR	3273084	CallExpression	strlen ( vpc_subnet )		3272974	1					
ANR	3273085	Callee	strlen		3272974	0					
ANR	3273086	Identifier	strlen		3272974	0					
ANR	3273087	ArgumentList	vpc_subnet		3272974	1					
ANR	3273088	Argument	vpc_subnet		3272974	0					
ANR	3273089	Identifier	vpc_subnet		3272974	0					
ANR	3273090	ExpressionStatement	vpc_subnet = NULLSTRING	6355:45:171385:171408	3272974	1	True				
ANR	3273091	AssignmentExpression	vpc_subnet = NULLSTRING		3272974	0		=			
ANR	3273092	Identifier	vpc_subnet		3272974	0					
ANR	3273093	Identifier	NULLSTRING		3272974	1					
ANR	3273094	IfStatement	if ( ! vpc_ip || 0 == strlen ( vpc_ip ) )		3272974	10					
ANR	3273095	Condition	! vpc_ip || 0 == strlen ( vpc_ip )	6356:6:171416:171443	3272974	0	True				
ANR	3273096	OrExpression	! vpc_ip || 0 == strlen ( vpc_ip )		3272974	0		||			
ANR	3273097	UnaryOperationExpression	! vpc_ip		3272974	0					
ANR	3273098	UnaryOperator	!		3272974	0					
ANR	3273099	Identifier	vpc_ip		3272974	1					
ANR	3273100	EqualityExpression	0 == strlen ( vpc_ip )		3272974	1		==			
ANR	3273101	PrimaryExpression	0		3272974	0					
ANR	3273102	CallExpression	strlen ( vpc_ip )		3272974	1					
ANR	3273103	Callee	strlen		3272974	0					
ANR	3273104	Identifier	strlen		3272974	0					
ANR	3273105	ArgumentList	vpc_ip		3272974	1					
ANR	3273106	Argument	vpc_ip		3272974	0					
ANR	3273107	Identifier	vpc_ip		3272974	0					
ANR	3273108	ExpressionStatement	vpc_ip = NULLSTRING	6356:37:171447:171466	3272974	1	True				
ANR	3273109	AssignmentExpression	vpc_ip = NULLSTRING		3272974	0		=			
ANR	3273110	Identifier	vpc_ip		3272974	0					
ANR	3273111	Identifier	NULLSTRING		3272974	1					
ANR	3273112	IdentifierDeclStatement	std :: string reqline ;	6361:1:171651:171670	3272974	11	True				
ANR	3273113	IdentifierDecl	reqline		3272974	0					
ANR	3273114	IdentifierDeclType	std :: string		3272974	0					
ANR	3273115	Identifier	reqline		3272974	1					
ANR	3273116	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	6363:1:171674:171726	3272974	12	True				
ANR	3273117	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3272974	0					
ANR	3273118	IdentifierDeclType	char *		3272974	0					
ANR	3273119	Identifier	esc1		3272974	1					
ANR	3273120	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3272974	2		=			
ANR	3273121	Identifier	esc1		3272974	0					
ANR	3273122	CallExpression	strdup ( escapeGahpString ( service_url ) )		3272974	1					
ANR	3273123	Callee	strdup		3272974	0					
ANR	3273124	Identifier	strdup		3272974	0					
ANR	3273125	ArgumentList	escapeGahpString ( service_url )		3272974	1					
ANR	3273126	Argument	escapeGahpString ( service_url )		3272974	0					
ANR	3273127	CallExpression	escapeGahpString ( service_url )		3272974	0					
ANR	3273128	Callee	escapeGahpString		3272974	0					
ANR	3273129	Identifier	escapeGahpString		3272974	0					
ANR	3273130	ArgumentList	service_url		3272974	1					
ANR	3273131	Argument	service_url		3272974	0					
ANR	3273132	Identifier	service_url		3272974	0					
ANR	3273133	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	6364:1:171729:171783	3272974	13	True				
ANR	3273134	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3272974	0					
ANR	3273135	IdentifierDeclType	char *		3272974	0					
ANR	3273136	Identifier	esc2		3272974	1					
ANR	3273137	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3272974	2		=			
ANR	3273138	Identifier	esc2		3272974	0					
ANR	3273139	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3272974	1					
ANR	3273140	Callee	strdup		3272974	0					
ANR	3273141	Identifier	strdup		3272974	0					
ANR	3273142	ArgumentList	escapeGahpString ( publickeyfile )		3272974	1					
ANR	3273143	Argument	escapeGahpString ( publickeyfile )		3272974	0					
ANR	3273144	CallExpression	escapeGahpString ( publickeyfile )		3272974	0					
ANR	3273145	Callee	escapeGahpString		3272974	0					
ANR	3273146	Identifier	escapeGahpString		3272974	0					
ANR	3273147	ArgumentList	publickeyfile		3272974	1					
ANR	3273148	Argument	publickeyfile		3272974	0					
ANR	3273149	Identifier	publickeyfile		3272974	0					
ANR	3273150	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	6365:1:171786:171841	3272974	14	True				
ANR	3273151	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3272974	0					
ANR	3273152	IdentifierDeclType	char *		3272974	0					
ANR	3273153	Identifier	esc3		3272974	1					
ANR	3273154	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3272974	2		=			
ANR	3273155	Identifier	esc3		3272974	0					
ANR	3273156	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3272974	1					
ANR	3273157	Callee	strdup		3272974	0					
ANR	3273158	Identifier	strdup		3272974	0					
ANR	3273159	ArgumentList	escapeGahpString ( privatekeyfile )		3272974	1					
ANR	3273160	Argument	escapeGahpString ( privatekeyfile )		3272974	0					
ANR	3273161	CallExpression	escapeGahpString ( privatekeyfile )		3272974	0					
ANR	3273162	Callee	escapeGahpString		3272974	0					
ANR	3273163	Identifier	escapeGahpString		3272974	0					
ANR	3273164	ArgumentList	privatekeyfile		3272974	1					
ANR	3273165	Argument	privatekeyfile		3272974	0					
ANR	3273166	Identifier	privatekeyfile		3272974	0					
ANR	3273167	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( ami_id ) ) ;	6366:1:171844:171891	3272974	15	True				
ANR	3273168	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( ami_id ) )		3272974	0					
ANR	3273169	IdentifierDeclType	char *		3272974	0					
ANR	3273170	Identifier	esc4		3272974	1					
ANR	3273171	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( ami_id ) )		3272974	2		=			
ANR	3273172	Identifier	esc4		3272974	0					
ANR	3273173	CallExpression	strdup ( escapeGahpString ( ami_id ) )		3272974	1					
ANR	3273174	Callee	strdup		3272974	0					
ANR	3273175	Identifier	strdup		3272974	0					
ANR	3273176	ArgumentList	escapeGahpString ( ami_id )		3272974	1					
ANR	3273177	Argument	escapeGahpString ( ami_id )		3272974	0					
ANR	3273178	CallExpression	escapeGahpString ( ami_id )		3272974	0					
ANR	3273179	Callee	escapeGahpString		3272974	0					
ANR	3273180	Identifier	escapeGahpString		3272974	0					
ANR	3273181	ArgumentList	ami_id		3272974	1					
ANR	3273182	Argument	ami_id		3272974	0					
ANR	3273183	Identifier	ami_id		3272974	0					
ANR	3273184	IdentifierDeclStatement	char * esc5 = strdup ( escapeGahpString ( keypair ) ) ;	6367:1:171894:171942	3272974	16	True				
ANR	3273185	IdentifierDecl	* esc5 = strdup ( escapeGahpString ( keypair ) )		3272974	0					
ANR	3273186	IdentifierDeclType	char *		3272974	0					
ANR	3273187	Identifier	esc5		3272974	1					
ANR	3273188	AssignmentExpression	* esc5 = strdup ( escapeGahpString ( keypair ) )		3272974	2		=			
ANR	3273189	Identifier	esc5		3272974	0					
ANR	3273190	CallExpression	strdup ( escapeGahpString ( keypair ) )		3272974	1					
ANR	3273191	Callee	strdup		3272974	0					
ANR	3273192	Identifier	strdup		3272974	0					
ANR	3273193	ArgumentList	escapeGahpString ( keypair )		3272974	1					
ANR	3273194	Argument	escapeGahpString ( keypair )		3272974	0					
ANR	3273195	CallExpression	escapeGahpString ( keypair )		3272974	0					
ANR	3273196	Callee	escapeGahpString		3272974	0					
ANR	3273197	Identifier	escapeGahpString		3272974	0					
ANR	3273198	ArgumentList	keypair		3272974	1					
ANR	3273199	Argument	keypair		3272974	0					
ANR	3273200	Identifier	keypair		3272974	0					
ANR	3273201	IdentifierDeclStatement	char * esc6 = strdup ( escapeGahpString ( user_data ) ) ;	6368:1:171945:171995	3272974	17	True				
ANR	3273202	IdentifierDecl	* esc6 = strdup ( escapeGahpString ( user_data ) )		3272974	0					
ANR	3273203	IdentifierDeclType	char *		3272974	0					
ANR	3273204	Identifier	esc6		3272974	1					
ANR	3273205	AssignmentExpression	* esc6 = strdup ( escapeGahpString ( user_data ) )		3272974	2		=			
ANR	3273206	Identifier	esc6		3272974	0					
ANR	3273207	CallExpression	strdup ( escapeGahpString ( user_data ) )		3272974	1					
ANR	3273208	Callee	strdup		3272974	0					
ANR	3273209	Identifier	strdup		3272974	0					
ANR	3273210	ArgumentList	escapeGahpString ( user_data )		3272974	1					
ANR	3273211	Argument	escapeGahpString ( user_data )		3272974	0					
ANR	3273212	CallExpression	escapeGahpString ( user_data )		3272974	0					
ANR	3273213	Callee	escapeGahpString		3272974	0					
ANR	3273214	Identifier	escapeGahpString		3272974	0					
ANR	3273215	ArgumentList	user_data		3272974	1					
ANR	3273216	Argument	user_data		3272974	0					
ANR	3273217	Identifier	user_data		3272974	0					
ANR	3273218	IdentifierDeclStatement	char * esc7 = strdup ( escapeGahpString ( user_data_file ) ) ;	6369:1:171998:172053	3272974	18	True				
ANR	3273219	IdentifierDecl	* esc7 = strdup ( escapeGahpString ( user_data_file ) )		3272974	0					
ANR	3273220	IdentifierDeclType	char *		3272974	0					
ANR	3273221	Identifier	esc7		3272974	1					
ANR	3273222	AssignmentExpression	* esc7 = strdup ( escapeGahpString ( user_data_file ) )		3272974	2		=			
ANR	3273223	Identifier	esc7		3272974	0					
ANR	3273224	CallExpression	strdup ( escapeGahpString ( user_data_file ) )		3272974	1					
ANR	3273225	Callee	strdup		3272974	0					
ANR	3273226	Identifier	strdup		3272974	0					
ANR	3273227	ArgumentList	escapeGahpString ( user_data_file )		3272974	1					
ANR	3273228	Argument	escapeGahpString ( user_data_file )		3272974	0					
ANR	3273229	CallExpression	escapeGahpString ( user_data_file )		3272974	0					
ANR	3273230	Callee	escapeGahpString		3272974	0					
ANR	3273231	Identifier	escapeGahpString		3272974	0					
ANR	3273232	ArgumentList	user_data_file		3272974	1					
ANR	3273233	Argument	user_data_file		3272974	0					
ANR	3273234	Identifier	user_data_file		3272974	0					
ANR	3273235	IdentifierDeclStatement	char * esc8 = strdup ( escapeGahpString ( instance_type ) ) ;	6375:1:172160:172214	3272974	19	True				
ANR	3273236	IdentifierDecl	* esc8 = strdup ( escapeGahpString ( instance_type ) )		3272974	0					
ANR	3273237	IdentifierDeclType	char *		3272974	0					
ANR	3273238	Identifier	esc8		3272974	1					
ANR	3273239	AssignmentExpression	* esc8 = strdup ( escapeGahpString ( instance_type ) )		3272974	2		=			
ANR	3273240	Identifier	esc8		3272974	0					
ANR	3273241	CallExpression	strdup ( escapeGahpString ( instance_type ) )		3272974	1					
ANR	3273242	Callee	strdup		3272974	0					
ANR	3273243	Identifier	strdup		3272974	0					
ANR	3273244	ArgumentList	escapeGahpString ( instance_type )		3272974	1					
ANR	3273245	Argument	escapeGahpString ( instance_type )		3272974	0					
ANR	3273246	CallExpression	escapeGahpString ( instance_type )		3272974	0					
ANR	3273247	Callee	escapeGahpString		3272974	0					
ANR	3273248	Identifier	escapeGahpString		3272974	0					
ANR	3273249	ArgumentList	instance_type		3272974	1					
ANR	3273250	Argument	instance_type		3272974	0					
ANR	3273251	Identifier	instance_type		3272974	0					
ANR	3273252	IdentifierDeclStatement	char * esc9 = strdup ( escapeGahpString ( availability_zone ) ) ;	6376:1:172217:172275	3272974	20	True				
ANR	3273253	IdentifierDecl	* esc9 = strdup ( escapeGahpString ( availability_zone ) )		3272974	0					
ANR	3273254	IdentifierDeclType	char *		3272974	0					
ANR	3273255	Identifier	esc9		3272974	1					
ANR	3273256	AssignmentExpression	* esc9 = strdup ( escapeGahpString ( availability_zone ) )		3272974	2		=			
ANR	3273257	Identifier	esc9		3272974	0					
ANR	3273258	CallExpression	strdup ( escapeGahpString ( availability_zone ) )		3272974	1					
ANR	3273259	Callee	strdup		3272974	0					
ANR	3273260	Identifier	strdup		3272974	0					
ANR	3273261	ArgumentList	escapeGahpString ( availability_zone )		3272974	1					
ANR	3273262	Argument	escapeGahpString ( availability_zone )		3272974	0					
ANR	3273263	CallExpression	escapeGahpString ( availability_zone )		3272974	0					
ANR	3273264	Callee	escapeGahpString		3272974	0					
ANR	3273265	Identifier	escapeGahpString		3272974	0					
ANR	3273266	ArgumentList	availability_zone		3272974	1					
ANR	3273267	Argument	availability_zone		3272974	0					
ANR	3273268	Identifier	availability_zone		3272974	0					
ANR	3273269	IdentifierDeclStatement	char * esc10 = strdup ( escapeGahpString ( vpc_subnet ) ) ;	6377:1:172278:172330	3272974	21	True				
ANR	3273270	IdentifierDecl	* esc10 = strdup ( escapeGahpString ( vpc_subnet ) )		3272974	0					
ANR	3273271	IdentifierDeclType	char *		3272974	0					
ANR	3273272	Identifier	esc10		3272974	1					
ANR	3273273	AssignmentExpression	* esc10 = strdup ( escapeGahpString ( vpc_subnet ) )		3272974	2		=			
ANR	3273274	Identifier	esc10		3272974	0					
ANR	3273275	CallExpression	strdup ( escapeGahpString ( vpc_subnet ) )		3272974	1					
ANR	3273276	Callee	strdup		3272974	0					
ANR	3273277	Identifier	strdup		3272974	0					
ANR	3273278	ArgumentList	escapeGahpString ( vpc_subnet )		3272974	1					
ANR	3273279	Argument	escapeGahpString ( vpc_subnet )		3272974	0					
ANR	3273280	CallExpression	escapeGahpString ( vpc_subnet )		3272974	0					
ANR	3273281	Callee	escapeGahpString		3272974	0					
ANR	3273282	Identifier	escapeGahpString		3272974	0					
ANR	3273283	ArgumentList	vpc_subnet		3272974	1					
ANR	3273284	Argument	vpc_subnet		3272974	0					
ANR	3273285	Identifier	vpc_subnet		3272974	0					
ANR	3273286	IdentifierDeclStatement	char * esc11 = strdup ( escapeGahpString ( vpc_ip ) ) ;	6378:1:172333:172381	3272974	22	True				
ANR	3273287	IdentifierDecl	* esc11 = strdup ( escapeGahpString ( vpc_ip ) )		3272974	0					
ANR	3273288	IdentifierDeclType	char *		3272974	0					
ANR	3273289	Identifier	esc11		3272974	1					
ANR	3273290	AssignmentExpression	* esc11 = strdup ( escapeGahpString ( vpc_ip ) )		3272974	2		=			
ANR	3273291	Identifier	esc11		3272974	0					
ANR	3273292	CallExpression	strdup ( escapeGahpString ( vpc_ip ) )		3272974	1					
ANR	3273293	Callee	strdup		3272974	0					
ANR	3273294	Identifier	strdup		3272974	0					
ANR	3273295	ArgumentList	escapeGahpString ( vpc_ip )		3272974	1					
ANR	3273296	Argument	escapeGahpString ( vpc_ip )		3272974	0					
ANR	3273297	CallExpression	escapeGahpString ( vpc_ip )		3272974	0					
ANR	3273298	Callee	escapeGahpString		3272974	0					
ANR	3273299	Identifier	escapeGahpString		3272974	0					
ANR	3273300	ArgumentList	vpc_ip		3272974	1					
ANR	3273301	Argument	vpc_ip		3272974	0					
ANR	3273302	Identifier	vpc_ip		3272974	0					
ANR	3273303	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 ) ;"	6380:1:172385:172514	3272974	23	True				
ANR	3273304	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 )"		3272974	0					
ANR	3273305	IdentifierDeclType	int		3272974	0					
ANR	3273306	Identifier	x		3272974	1					
ANR	3273307	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 )"		3272974	2		=			
ANR	3273308	Identifier	x		3272974	0					
ANR	3273309	CallExpression	"sprintf ( reqline , ""%s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 )"		3272974	1					
ANR	3273310	Callee	sprintf		3272974	0					
ANR	3273311	Identifier	sprintf		3272974	0					
ANR	3273312	ArgumentList	reqline		3272974	1					
ANR	3273313	Argument	reqline		3272974	0					
ANR	3273314	Identifier	reqline		3272974	0					
ANR	3273315	Argument	"""%s %s %s %s %s %s %s %s %s %s %s"""		3272974	1					
ANR	3273316	PrimaryExpression	"""%s %s %s %s %s %s %s %s %s %s %s"""		3272974	0					
ANR	3273317	Argument	esc1		3272974	2					
ANR	3273318	Identifier	esc1		3272974	0					
ANR	3273319	Argument	esc2		3272974	3					
ANR	3273320	Identifier	esc2		3272974	0					
ANR	3273321	Argument	esc3		3272974	4					
ANR	3273322	Identifier	esc3		3272974	0					
ANR	3273323	Argument	esc4		3272974	5					
ANR	3273324	Identifier	esc4		3272974	0					
ANR	3273325	Argument	esc5		3272974	6					
ANR	3273326	Identifier	esc5		3272974	0					
ANR	3273327	Argument	esc6		3272974	7					
ANR	3273328	Identifier	esc6		3272974	0					
ANR	3273329	Argument	esc7		3272974	8					
ANR	3273330	Identifier	esc7		3272974	0					
ANR	3273331	Argument	esc8		3272974	9					
ANR	3273332	Identifier	esc8		3272974	0					
ANR	3273333	Argument	esc9		3272974	10					
ANR	3273334	Identifier	esc9		3272974	0					
ANR	3273335	Argument	esc10		3272974	11					
ANR	3273336	Identifier	esc10		3272974	0					
ANR	3273337	Argument	esc11		3272974	12					
ANR	3273338	Identifier	esc11		3272974	0					
ANR	3273339	ExpressionStatement	free ( esc1 )	6382:1:172518:172530	3272974	24	True				
ANR	3273340	CallExpression	free ( esc1 )		3272974	0					
ANR	3273341	Callee	free		3272974	0					
ANR	3273342	Identifier	free		3272974	0					
ANR	3273343	ArgumentList	esc1		3272974	1					
ANR	3273344	Argument	esc1		3272974	0					
ANR	3273345	Identifier	esc1		3272974	0					
ANR	3273346	ExpressionStatement	free ( esc2 )	6383:1:172533:172545	3272974	25	True				
ANR	3273347	CallExpression	free ( esc2 )		3272974	0					
ANR	3273348	Callee	free		3272974	0					
ANR	3273349	Identifier	free		3272974	0					
ANR	3273350	ArgumentList	esc2		3272974	1					
ANR	3273351	Argument	esc2		3272974	0					
ANR	3273352	Identifier	esc2		3272974	0					
ANR	3273353	ExpressionStatement	free ( esc3 )	6384:1:172548:172560	3272974	26	True				
ANR	3273354	CallExpression	free ( esc3 )		3272974	0					
ANR	3273355	Callee	free		3272974	0					
ANR	3273356	Identifier	free		3272974	0					
ANR	3273357	ArgumentList	esc3		3272974	1					
ANR	3273358	Argument	esc3		3272974	0					
ANR	3273359	Identifier	esc3		3272974	0					
ANR	3273360	ExpressionStatement	free ( esc4 )	6385:1:172563:172575	3272974	27	True				
ANR	3273361	CallExpression	free ( esc4 )		3272974	0					
ANR	3273362	Callee	free		3272974	0					
ANR	3273363	Identifier	free		3272974	0					
ANR	3273364	ArgumentList	esc4		3272974	1					
ANR	3273365	Argument	esc4		3272974	0					
ANR	3273366	Identifier	esc4		3272974	0					
ANR	3273367	ExpressionStatement	free ( esc5 )	6386:1:172578:172590	3272974	28	True				
ANR	3273368	CallExpression	free ( esc5 )		3272974	0					
ANR	3273369	Callee	free		3272974	0					
ANR	3273370	Identifier	free		3272974	0					
ANR	3273371	ArgumentList	esc5		3272974	1					
ANR	3273372	Argument	esc5		3272974	0					
ANR	3273373	Identifier	esc5		3272974	0					
ANR	3273374	ExpressionStatement	free ( esc6 )	6387:1:172593:172605	3272974	29	True				
ANR	3273375	CallExpression	free ( esc6 )		3272974	0					
ANR	3273376	Callee	free		3272974	0					
ANR	3273377	Identifier	free		3272974	0					
ANR	3273378	ArgumentList	esc6		3272974	1					
ANR	3273379	Argument	esc6		3272974	0					
ANR	3273380	Identifier	esc6		3272974	0					
ANR	3273381	ExpressionStatement	free ( esc7 )	6388:1:172608:172620	3272974	30	True				
ANR	3273382	CallExpression	free ( esc7 )		3272974	0					
ANR	3273383	Callee	free		3272974	0					
ANR	3273384	Identifier	free		3272974	0					
ANR	3273385	ArgumentList	esc7		3272974	1					
ANR	3273386	Argument	esc7		3272974	0					
ANR	3273387	Identifier	esc7		3272974	0					
ANR	3273388	ExpressionStatement	free ( esc8 )	6389:1:172623:172635	3272974	31	True				
ANR	3273389	CallExpression	free ( esc8 )		3272974	0					
ANR	3273390	Callee	free		3272974	0					
ANR	3273391	Identifier	free		3272974	0					
ANR	3273392	ArgumentList	esc8		3272974	1					
ANR	3273393	Argument	esc8		3272974	0					
ANR	3273394	Identifier	esc8		3272974	0					
ANR	3273395	ExpressionStatement	free ( esc9 )	6390:1:172638:172650	3272974	32	True				
ANR	3273396	CallExpression	free ( esc9 )		3272974	0					
ANR	3273397	Callee	free		3272974	0					
ANR	3273398	Identifier	free		3272974	0					
ANR	3273399	ArgumentList	esc9		3272974	1					
ANR	3273400	Argument	esc9		3272974	0					
ANR	3273401	Identifier	esc9		3272974	0					
ANR	3273402	ExpressionStatement	free ( esc10 )	6391:1:172653:172666	3272974	33	True				
ANR	3273403	CallExpression	free ( esc10 )		3272974	0					
ANR	3273404	Callee	free		3272974	0					
ANR	3273405	Identifier	free		3272974	0					
ANR	3273406	ArgumentList	esc10		3272974	1					
ANR	3273407	Argument	esc10		3272974	0					
ANR	3273408	Identifier	esc10		3272974	0					
ANR	3273409	ExpressionStatement	free ( esc11 )	6392:1:172669:172682	3272974	34	True				
ANR	3273410	CallExpression	free ( esc11 )		3272974	0					
ANR	3273411	Callee	free		3272974	0					
ANR	3273412	Identifier	free		3272974	0					
ANR	3273413	ArgumentList	esc11		3272974	1					
ANR	3273414	Argument	esc11		3272974	0					
ANR	3273415	Identifier	esc11		3272974	0					
ANR	3273416	ExpressionStatement	ASSERT ( x > 0 )	6393:1:172685:172700	3272974	35	True				
ANR	3273417	CallExpression	ASSERT ( x > 0 )		3272974	0					
ANR	3273418	Callee	ASSERT		3272974	0					
ANR	3273419	Identifier	ASSERT		3272974	0					
ANR	3273420	ArgumentList	x > 0		3272974	1					
ANR	3273421	Argument	x > 0		3272974	0					
ANR	3273422	RelationalExpression	x > 0		3272974	0		>			
ANR	3273423	Identifier	x		3272974	0					
ANR	3273424	PrimaryExpression	0		3272974	1					
ANR	3273425	IdentifierDeclStatement	const char * group_name ;	6395:1:172704:172727	3272974	36	True				
ANR	3273426	IdentifierDecl	* group_name		3272974	0					
ANR	3273427	IdentifierDeclType	const char *		3272974	0					
ANR	3273428	Identifier	group_name		3272974	1					
ANR	3273429	IdentifierDeclStatement	int cnt = 0 ;	6396:1:172730:172741	3272974	37	True				
ANR	3273430	IdentifierDecl	cnt = 0		3272974	0					
ANR	3273431	IdentifierDeclType	int		3272974	0					
ANR	3273432	Identifier	cnt		3272974	1					
ANR	3273433	AssignmentExpression	cnt = 0		3272974	2		=			
ANR	3273434	Identifier	cnt		3272974	0					
ANR	3273435	PrimaryExpression	0		3272974	1					
ANR	3273436	IdentifierDeclStatement	char * esc_groupname ;	6397:1:172744:172764	3272974	38	True				
ANR	3273437	IdentifierDecl	* esc_groupname		3272974	0					
ANR	3273438	IdentifierDeclType	char *		3272974	0					
ANR	3273439	Identifier	esc_groupname		3272974	1					
ANR	3273440	ExpressionStatement	groupnames . rewind ( )	6400:1:172814:172833	3272974	39	True				
ANR	3273441	CallExpression	groupnames . rewind ( )		3272974	0					
ANR	3273442	Callee	groupnames . rewind		3272974	0					
ANR	3273443	MemberAccess	groupnames . rewind		3272974	0					
ANR	3273444	Identifier	groupnames		3272974	0					
ANR	3273445	Identifier	rewind		3272974	1					
ANR	3273446	ArgumentList			3272974	1					
ANR	3273447	IfStatement	if ( groupnames . number ( ) > 0 )		3272974	40					
ANR	3273448	Condition	groupnames . number ( ) > 0	6401:6:172841:172863	3272974	0	True				
ANR	3273449	RelationalExpression	groupnames . number ( ) > 0		3272974	0		>			
ANR	3273450	CallExpression	groupnames . number ( )		3272974	0					
ANR	3273451	Callee	groupnames . number		3272974	0					
ANR	3273452	MemberAccess	groupnames . number		3272974	0					
ANR	3273453	Identifier	groupnames		3272974	0					
ANR	3273454	Identifier	number		3272974	1					
ANR	3273455	ArgumentList			3272974	1					
ANR	3273456	PrimaryExpression	0		3272974	1					
ANR	3273457	CompoundStatement		70:32:2464:2464	3272974	1					
ANR	3273458	WhileStatement	while ( ( group_name = groupnames . next ( ) ) )		3272974	0					
ANR	3273459	Condition	group_name = groupnames . next ( )	6402:10:172879:172910	3272974	0	True				
ANR	3273460	AssignmentExpression	group_name = groupnames . next ( )		3272974	0		=			
ANR	3273461	Identifier	group_name		3272974	0					
ANR	3273462	CallExpression	groupnames . next ( )		3272974	1					
ANR	3273463	Callee	groupnames . next		3272974	0					
ANR	3273464	MemberAccess	groupnames . next		3272974	0					
ANR	3273465	Identifier	groupnames		3272974	0					
ANR	3273466	Identifier	next		3272974	1					
ANR	3273467	ArgumentList			3272974	1					
ANR	3273468	CompoundStatement		71:45:2511:2511	3272974	1					
ANR	3273469	ExpressionStatement	esc_groupname = strdup ( escapeGahpString ( group_name ) )	6403:3:172919:172973	3272974	0	True				
ANR	3273470	AssignmentExpression	esc_groupname = strdup ( escapeGahpString ( group_name ) )		3272974	0		=			
ANR	3273471	Identifier	esc_groupname		3272974	0					
ANR	3273472	CallExpression	strdup ( escapeGahpString ( group_name ) )		3272974	1					
ANR	3273473	Callee	strdup		3272974	0					
ANR	3273474	Identifier	strdup		3272974	0					
ANR	3273475	ArgumentList	escapeGahpString ( group_name )		3272974	1					
ANR	3273476	Argument	escapeGahpString ( group_name )		3272974	0					
ANR	3273477	CallExpression	escapeGahpString ( group_name )		3272974	0					
ANR	3273478	Callee	escapeGahpString		3272974	0					
ANR	3273479	Identifier	escapeGahpString		3272974	0					
ANR	3273480	ArgumentList	group_name		3272974	1					
ANR	3273481	Argument	group_name		3272974	0					
ANR	3273482	Identifier	group_name		3272974	0					
ANR	3273483	ExpressionStatement	"sprintf_cat ( reqline , "" %s"" , esc_groupname )"	6404:3:172978:173020	3272974	1	True				
ANR	3273484	CallExpression	"sprintf_cat ( reqline , "" %s"" , esc_groupname )"		3272974	0					
ANR	3273485	Callee	sprintf_cat		3272974	0					
ANR	3273486	Identifier	sprintf_cat		3272974	0					
ANR	3273487	ArgumentList	reqline		3272974	1					
ANR	3273488	Argument	reqline		3272974	0					
ANR	3273489	Identifier	reqline		3272974	0					
ANR	3273490	Argument	""" %s"""		3272974	1					
ANR	3273491	PrimaryExpression	""" %s"""		3272974	0					
ANR	3273492	Argument	esc_groupname		3272974	2					
ANR	3273493	Identifier	esc_groupname		3272974	0					
ANR	3273494	ExpressionStatement	cnt ++	6405:3:173025:173030	3272974	2	True				
ANR	3273495	PostIncDecOperationExpression	cnt ++		3272974	0					
ANR	3273496	Identifier	cnt		3272974	0					
ANR	3273497	IncDec	++		3272974	1					
ANR	3273498	ExpressionStatement	free ( esc_groupname )	6406:3:173035:173056	3272974	3	True				
ANR	3273499	CallExpression	free ( esc_groupname )		3272974	0					
ANR	3273500	Callee	free		3272974	0					
ANR	3273501	Identifier	free		3272974	0					
ANR	3273502	ArgumentList	esc_groupname		3272974	1					
ANR	3273503	Argument	esc_groupname		3272974	0					
ANR	3273504	Identifier	esc_groupname		3272974	0					
ANR	3273505	ExpressionStatement	ASSERT ( cnt == groupnames . number ( ) )	6409:1:173066:173102	3272974	41	True				
ANR	3273506	CallExpression	ASSERT ( cnt == groupnames . number ( ) )		3272974	0					
ANR	3273507	Callee	ASSERT		3272974	0					
ANR	3273508	Identifier	ASSERT		3272974	0					
ANR	3273509	ArgumentList	cnt == groupnames . number ( )		3272974	1					
ANR	3273510	Argument	cnt == groupnames . number ( )		3272974	0					
ANR	3273511	EqualityExpression	cnt == groupnames . number ( )		3272974	0		==			
ANR	3273512	Identifier	cnt		3272974	0					
ANR	3273513	CallExpression	groupnames . number ( )		3272974	1					
ANR	3273514	Callee	groupnames . number		3272974	0					
ANR	3273515	MemberAccess	groupnames . number		3272974	0					
ANR	3273516	Identifier	groupnames		3272974	0					
ANR	3273517	Identifier	number		3272974	1					
ANR	3273518	ArgumentList			3272974	1					
ANR	3273519	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6410:1:173105:173138	3272974	42	True				
ANR	3273520	IdentifierDecl	* buf = reqline . c_str ( )		3272974	0					
ANR	3273521	IdentifierDeclType	const char *		3272974	0					
ANR	3273522	Identifier	buf		3272974	1					
ANR	3273523	AssignmentExpression	* buf = reqline . c_str ( )		3272974	2		=			
ANR	3273524	Identifier	buf		3272974	0					
ANR	3273525	CallExpression	reqline . c_str ( )		3272974	1					
ANR	3273526	Callee	reqline . c_str		3272974	0					
ANR	3273527	MemberAccess	reqline . c_str		3272974	0					
ANR	3273528	Identifier	reqline		3272974	0					
ANR	3273529	Identifier	c_str		3272974	1					
ANR	3273530	ArgumentList			3272974	1					
ANR	3273531	IfStatement	"if ( ! is_pending ( command , buf ) )"		3272974	43					
ANR	3273532	Condition	"! is_pending ( command , buf )"	6412:6:173231:173254	3272974	0	True				
ANR	3273533	UnaryOperationExpression	"! is_pending ( command , buf )"		3272974	0					
ANR	3273534	UnaryOperator	!		3272974	0					
ANR	3273535	CallExpression	"is_pending ( command , buf )"		3272974	1					
ANR	3273536	Callee	is_pending		3272974	0					
ANR	3273537	Identifier	is_pending		3272974	0					
ANR	3273538	ArgumentList	command		3272974	1					
ANR	3273539	Argument	command		3272974	0					
ANR	3273540	Identifier	command		3272974	0					
ANR	3273541	Argument	buf		3272974	1					
ANR	3273542	Identifier	buf		3272974	0					
ANR	3273543	CompoundStatement		81:33:2855:2855	3272974	1					
ANR	3273544	IfStatement	if ( m_mode == results_only )		3272974	0					
ANR	3273545	Condition	m_mode == results_only	6414:7:173358:173379	3272974	0	True				
ANR	3273546	EqualityExpression	m_mode == results_only		3272974	0		==			
ANR	3273547	Identifier	m_mode		3272974	0					
ANR	3273548	Identifier	results_only		3272974	1					
ANR	3273549	CompoundStatement		83:32:2980:2980	3272974	1					
ANR	3273550	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6415:3:173388:173427	3272974	0	True				
ANR	3273551	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3272974	0					
ANR	3273552	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	6417:2:173435:173473	3272974	1	True				
ANR	3273553	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3272974	0					
ANR	3273554	Callee	now_pending		3272974	0					
ANR	3273555	Identifier	now_pending		3272974	0					
ANR	3273556	ArgumentList	command		3272974	1					
ANR	3273557	Argument	command		3272974	0					
ANR	3273558	Identifier	command		3272974	0					
ANR	3273559	Argument	buf		3272974	1					
ANR	3273560	Identifier	buf		3272974	0					
ANR	3273561	Argument	deleg_proxy		3272974	2					
ANR	3273562	Identifier	deleg_proxy		3272974	0					
ANR	3273563	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6423:1:173563:173615	3272974	44	True				
ANR	3273564	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3272974	0					
ANR	3273565	IdentifierDeclType	Gahp_Args *		3272974	0					
ANR	3273566	Identifier	result		3272974	1					
ANR	3273567	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3272974	2		=			
ANR	3273568	Identifier	result		3272974	0					
ANR	3273569	CallExpression	"get_pending_result ( command , buf )"		3272974	1					
ANR	3273570	Callee	get_pending_result		3272974	0					
ANR	3273571	Identifier	get_pending_result		3272974	0					
ANR	3273572	ArgumentList	command		3272974	1					
ANR	3273573	Argument	command		3272974	0					
ANR	3273574	Identifier	command		3272974	0					
ANR	3273575	Argument	buf		3272974	1					
ANR	3273576	Identifier	buf		3272974	0					
ANR	3273577	IfStatement	if ( result )		3272974	45					
ANR	3273578	Condition	result	6430:6:173741:173746	3272974	0	True				
ANR	3273579	Identifier	result		3272974	0					
ANR	3273580	CompoundStatement		101:2:3377:3387	3272974	1					
ANR	3273581	IdentifierDeclStatement	int rc = 0 ;	6432:2:173780:173790	3272974	0	True				
ANR	3273582	IdentifierDecl	rc = 0		3272974	0					
ANR	3273583	IdentifierDeclType	int		3272974	0					
ANR	3273584	Identifier	rc		3272974	1					
ANR	3273585	AssignmentExpression	rc = 0		3272974	2		=			
ANR	3273586	Identifier	rc		3272974	0					
ANR	3273587	PrimaryExpression	0		3272974	1					
ANR	3273588	IfStatement	if ( result -> argc == 2 )		3272974	1					
ANR	3273589	Condition	result -> argc == 2	6433:7:173799:173815	3272974	0	True				
ANR	3273590	EqualityExpression	result -> argc == 2		3272974	0		==			
ANR	3273591	PtrMemberAccess	result -> argc		3272974	0					
ANR	3273592	Identifier	result		3272974	0					
ANR	3273593	Identifier	argc		3272974	1					
ANR	3273594	PrimaryExpression	2		3272974	1					
ANR	3273595	CompoundStatement		102:27:3416:3416	3272974	1					
ANR	3273596	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6434:3:173824:173850	3272974	0	True				
ANR	3273597	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3272974	0		=			
ANR	3273598	Identifier	rc		3272974	0					
ANR	3273599	CallExpression	atoi ( result -> argv [ 1 ] )		3272974	1					
ANR	3273600	Callee	atoi		3272974	0					
ANR	3273601	Identifier	atoi		3272974	0					
ANR	3273602	ArgumentList	result -> argv [ 1 ]		3272974	1					
ANR	3273603	Argument	result -> argv [ 1 ]		3272974	0					
ANR	3273604	ArrayIndexing	result -> argv [ 1 ]		3272974	0					
ANR	3273605	PtrMemberAccess	result -> argv		3272974	0					
ANR	3273606	Identifier	result		3272974	0					
ANR	3273607	Identifier	argv		3272974	1					
ANR	3273608	PrimaryExpression	1		3272974	1					
ANR	3273609	IfStatement	if ( rc == 0 )		3272974	1					
ANR	3273610	Condition	rc == 0	6435:8:173860:173866	3272974	0	True				
ANR	3273611	EqualityExpression	rc == 0		3272974	0		==			
ANR	3273612	Identifier	rc		3272974	0					
ANR	3273613	PrimaryExpression	0		3272974	1					
ANR	3273614	CompoundStatement		104:18:3467:3467	3272974	1					
ANR	3273615	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6436:4:173876:173910	3272974	0	True				
ANR	3273616	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3272974	0					
ANR	3273617	Callee	EXCEPT		3272974	0					
ANR	3273618	Identifier	EXCEPT		3272974	0					
ANR	3273619	ArgumentList	"""Bad %s result"""		3272974	1					
ANR	3273620	Argument	"""Bad %s result"""		3272974	0					
ANR	3273621	PrimaryExpression	"""Bad %s result"""		3272974	0					
ANR	3273622	Argument	command		3272974	1					
ANR	3273623	Identifier	command		3272974	0					
ANR	3273624	ExpressionStatement	rc = 1	6437:4:173916:173922	3272974	1	True				
ANR	3273625	AssignmentExpression	rc = 1		3272974	0		=			
ANR	3273626	Identifier	rc		3272974	0					
ANR	3273627	PrimaryExpression	1		3272974	1					
ANR	3273628	ElseStatement	else		3272974	0					
ANR	3273629	CompoundStatement		107:10:3531:3531	3272974	0					
ANR	3273630	ExpressionStatement	"error_string = """""	6439:4:173940:173957	3272974	0	True				
ANR	3273631	AssignmentExpression	"error_string = """""		3272974	0		=			
ANR	3273632	Identifier	error_string		3272974	0					
ANR	3273633	PrimaryExpression	""""""		3272974	1					
ANR	3273634	ElseStatement	else		3272974	0					
ANR	3273635	IfStatement	if ( result -> argc == 3 )		3272974	0					
ANR	3273636	Condition	result -> argc == 3	6441:14:173981:173997	3272974	0	True				
ANR	3273637	EqualityExpression	result -> argc == 3		3272974	0		==			
ANR	3273638	PtrMemberAccess	result -> argc		3272974	0					
ANR	3273639	Identifier	result		3272974	0					
ANR	3273640	Identifier	argc		3272974	1					
ANR	3273641	PrimaryExpression	3		3272974	1					
ANR	3273642	CompoundStatement		110:34:3598:3598	3272974	1					
ANR	3273643	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6442:3:174006:174032	3272974	0	True				
ANR	3273644	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3272974	0		=			
ANR	3273645	Identifier	rc		3272974	0					
ANR	3273646	CallExpression	atoi ( result -> argv [ 1 ] )		3272974	1					
ANR	3273647	Callee	atoi		3272974	0					
ANR	3273648	Identifier	atoi		3272974	0					
ANR	3273649	ArgumentList	result -> argv [ 1 ]		3272974	1					
ANR	3273650	Argument	result -> argv [ 1 ]		3272974	0					
ANR	3273651	ArrayIndexing	result -> argv [ 1 ]		3272974	0					
ANR	3273652	PtrMemberAccess	result -> argv		3272974	0					
ANR	3273653	Identifier	result		3272974	0					
ANR	3273654	Identifier	argv		3272974	1					
ANR	3273655	PrimaryExpression	1		3272974	1					
ANR	3273656	ExpressionStatement	instance_id = strdup ( result -> argv [ 2 ] )	6443:3:174037:174074	3272974	1	True				
ANR	3273657	AssignmentExpression	instance_id = strdup ( result -> argv [ 2 ] )		3272974	0		=			
ANR	3273658	Identifier	instance_id		3272974	0					
ANR	3273659	CallExpression	strdup ( result -> argv [ 2 ] )		3272974	1					
ANR	3273660	Callee	strdup		3272974	0					
ANR	3273661	Identifier	strdup		3272974	0					
ANR	3273662	ArgumentList	result -> argv [ 2 ]		3272974	1					
ANR	3273663	Argument	result -> argv [ 2 ]		3272974	0					
ANR	3273664	ArrayIndexing	result -> argv [ 2 ]		3272974	0					
ANR	3273665	PtrMemberAccess	result -> argv		3272974	0					
ANR	3273666	Identifier	result		3272974	0					
ANR	3273667	Identifier	argv		3272974	1					
ANR	3273668	PrimaryExpression	2		3272974	1					
ANR	3273669	ElseStatement	else		3272974	0					
ANR	3273670	IfStatement	if ( result -> argc == 4 )		3272974	0					
ANR	3273671	Condition	result -> argc == 4	6444:14:174090:174106	3272974	0	True				
ANR	3273672	EqualityExpression	result -> argc == 4		3272974	0		==			
ANR	3273673	PtrMemberAccess	result -> argc		3272974	0					
ANR	3273674	Identifier	result		3272974	0					
ANR	3273675	Identifier	argc		3272974	1					
ANR	3273676	PrimaryExpression	4		3272974	1					
ANR	3273677	CompoundStatement		113:34:3707:3707	3272974	1					
ANR	3273678	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6446:3:174140:174168	3272974	0	True				
ANR	3273679	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3272974	0		=			
ANR	3273680	Identifier	rc		3272974	0					
ANR	3273681	CallExpression	atoi ( result -> argv [ 1 ] )		3272974	1					
ANR	3273682	Callee	atoi		3272974	0					
ANR	3273683	Identifier	atoi		3272974	0					
ANR	3273684	ArgumentList	result -> argv [ 1 ]		3272974	1					
ANR	3273685	Argument	result -> argv [ 1 ]		3272974	0					
ANR	3273686	ArrayIndexing	result -> argv [ 1 ]		3272974	0					
ANR	3273687	PtrMemberAccess	result -> argv		3272974	0					
ANR	3273688	Identifier	result		3272974	0					
ANR	3273689	Identifier	argv		3272974	1					
ANR	3273690	PrimaryExpression	1		3272974	1					
ANR	3273691	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	6447:4:174174:174210	3272974	1	True				
ANR	3273692	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3272974	0		=			
ANR	3273693	Identifier	error_code		3272974	0					
ANR	3273694	CallExpression	strdup ( result -> argv [ 2 ] )		3272974	1					
ANR	3273695	Callee	strdup		3272974	0					
ANR	3273696	Identifier	strdup		3272974	0					
ANR	3273697	ArgumentList	result -> argv [ 2 ]		3272974	1					
ANR	3273698	Argument	result -> argv [ 2 ]		3272974	0					
ANR	3273699	ArrayIndexing	result -> argv [ 2 ]		3272974	0					
ANR	3273700	PtrMemberAccess	result -> argv		3272974	0					
ANR	3273701	Identifier	result		3272974	0					
ANR	3273702	Identifier	argv		3272974	1					
ANR	3273703	PrimaryExpression	2		3272974	1					
ANR	3273704	ExpressionStatement	error_string = result -> argv [ 3 ]	6448:4:174217:174247	3272974	2	True				
ANR	3273705	AssignmentExpression	error_string = result -> argv [ 3 ]		3272974	0		=			
ANR	3273706	Identifier	error_string		3272974	0					
ANR	3273707	ArrayIndexing	result -> argv [ 3 ]		3272974	1					
ANR	3273708	PtrMemberAccess	result -> argv		3272974	0					
ANR	3273709	Identifier	result		3272974	0					
ANR	3273710	Identifier	argv		3272974	1					
ANR	3273711	PrimaryExpression	3		3272974	1					
ANR	3273712	ElseStatement	else		3272974	0					
ANR	3273713	CompoundStatement		118:9:3857:3857	3272974	0					
ANR	3273714	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6450:3:174265:174299	3272974	0	True				
ANR	3273715	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3272974	0					
ANR	3273716	Callee	EXCEPT		3272974	0					
ANR	3273717	Identifier	EXCEPT		3272974	0					
ANR	3273718	ArgumentList	"""Bad %s result"""		3272974	1					
ANR	3273719	Argument	"""Bad %s result"""		3272974	0					
ANR	3273720	PrimaryExpression	"""Bad %s result"""		3272974	0					
ANR	3273721	Argument	command		3272974	1					
ANR	3273722	Identifier	command		3272974	0					
ANR	3273723	Statement	delete	6453:2:174308:174313	3272974	2	True				
ANR	3273724	ExpressionStatement	result	6453:9:174315:174321	3272974	3	True				
ANR	3273725	Identifier	result		3272974	0					
ANR	3273726	ReturnStatement	return rc ;	6454:2:174325:174334	3272974	4	True				
ANR	3273727	Identifier	rc		3272974	0					
ANR	3273728	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3272974	46					
ANR	3273729	Condition	"check_pending_timeout ( command , buf )"	6458:6:174390:174424	3272974	0	True				
ANR	3273730	CallExpression	"check_pending_timeout ( command , buf )"		3272974	0					
ANR	3273731	Callee	check_pending_timeout		3272974	0					
ANR	3273732	Identifier	check_pending_timeout		3272974	0					
ANR	3273733	ArgumentList	command		3272974	1					
ANR	3273734	Argument	command		3272974	0					
ANR	3273735	Identifier	command		3272974	0					
ANR	3273736	Argument	buf		3272974	1					
ANR	3273737	Identifier	buf		3272974	0					
ANR	3273738	CompoundStatement		128:1:4027:4027	3272974	1					
ANR	3273739	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6461:2:174466:174514	3272974	0	True				
ANR	3273740	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3272974	0					
ANR	3273741	Callee	sprintf		3272974	0					
ANR	3273742	Identifier	sprintf		3272974	0					
ANR	3273743	ArgumentList	error_string		3272974	1					
ANR	3273744	Argument	error_string		3272974	0					
ANR	3273745	Identifier	error_string		3272974	0					
ANR	3273746	Argument	"""%s timed out"""		3272974	1					
ANR	3273747	PrimaryExpression	"""%s timed out"""		3272974	0					
ANR	3273748	Argument	command		3272974	2					
ANR	3273749	Identifier	command		3272974	0					
ANR	3273750	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6462:2:174518:174553	3272974	1	True				
ANR	3273751	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3272974	0					
ANR	3273752	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6466:1:174612:174645	3272974	47	True				
ANR	3273753	Identifier	GAHPCLIENT_COMMAND_PENDING		3272974	0					
ANR	3273754	ReturnType	int		3272974	1					
ANR	3273755	Identifier	GahpClient :: ec2_vm_start		3272974	2					
ANR	3273756	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * ami_id , const char * keypair , const char * user_data , const char * user_data_file , const char * instance_type , const char * availability_zone , const char * vpc_subnet , const char * vpc_ip , StringList & groupnames , char * & instance_id , char * & error_code"		3272974	3					
ANR	3273757	Parameter	const char * service_url	6318:30:169933:169956	3272974	0	True				
ANR	3273758	ParameterType	const char *		3272974	0					
ANR	3273759	Identifier	service_url		3272974	1					
ANR	3273760	Parameter	const char * publickeyfile	6319:9:169968:169993	3272974	1	True				
ANR	3273761	ParameterType	const char *		3272974	0					
ANR	3273762	Identifier	publickeyfile		3272974	1					
ANR	3273763	Parameter	const char * privatekeyfile	6320:9:170005:170031	3272974	2	True				
ANR	3273764	ParameterType	const char *		3272974	0					
ANR	3273765	Identifier	privatekeyfile		3272974	1					
ANR	3273766	Parameter	const char * ami_id	6321:9:170043:170061	3272974	3	True				
ANR	3273767	ParameterType	const char *		3272974	0					
ANR	3273768	Identifier	ami_id		3272974	1					
ANR	3273769	Parameter	const char * keypair	6322:9:170074:170093	3272974	4	True				
ANR	3273770	ParameterType	const char *		3272974	0					
ANR	3273771	Identifier	keypair		3272974	1					
ANR	3273772	Parameter	const char * user_data	6323:9:170105:170126	3272974	5	True				
ANR	3273773	ParameterType	const char *		3272974	0					
ANR	3273774	Identifier	user_data		3272974	1					
ANR	3273775	Parameter	const char * user_data_file	6324:9:170138:170164	3272974	6	True				
ANR	3273776	ParameterType	const char *		3272974	0					
ANR	3273777	Identifier	user_data_file		3272974	1					
ANR	3273778	Parameter	const char * instance_type	6325:9:170176:170201	3272974	7	True				
ANR	3273779	ParameterType	const char *		3272974	0					
ANR	3273780	Identifier	instance_type		3272974	1					
ANR	3273781	Parameter	const char * availability_zone	6326:9:170213:170242	3272974	8	True				
ANR	3273782	ParameterType	const char *		3272974	0					
ANR	3273783	Identifier	availability_zone		3272974	1					
ANR	3273784	Parameter	const char * vpc_subnet	6327:9:170254:170276	3272974	9	True				
ANR	3273785	ParameterType	const char *		3272974	0					
ANR	3273786	Identifier	vpc_subnet		3272974	1					
ANR	3273787	Parameter	const char * vpc_ip	6328:9:170288:170306	3272974	10	True				
ANR	3273788	ParameterType	const char *		3272974	0					
ANR	3273789	Identifier	vpc_ip		3272974	1					
ANR	3273790	Parameter	StringList & groupnames	6329:9:170318:170340	3272974	11	True				
ANR	3273791	ParameterType	StringList &		3272974	0					
ANR	3273792	Identifier	groupnames		3272974	1					
ANR	3273793	Parameter	char * & instance_id	6330:9:170352:170370	3272974	12	True				
ANR	3273794	ParameterType	char * &		3272974	0					
ANR	3273795	Identifier	instance_id		3272974	1					
ANR	3273796	Parameter	char * & error_code	6331:9:170382:170399	3272974	13	True				
ANR	3273797	ParameterType	char * &		3272974	0					
ANR	3273798	Identifier	error_code		3272974	1					
ANR	3273799	CFGEntryNode	ENTRY		3272974		True				
ANR	3273800	CFGExitNode	EXIT		3272974		True				
ANR	3273801	Symbol	server -> m_commands_supported		3272974						
ANR	3273802	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3272974						
ANR	3273803	Symbol	vpc_ip		3272974						
ANR	3273804	Symbol	sprintf		3272974						
ANR	3273805	Symbol	esc11		3272974						
ANR	3273806	Symbol	strlen		3272974						
ANR	3273807	Symbol	esc10		3272974						
ANR	3273808	Symbol	groupnames		3272974						
ANR	3273809	Symbol	server -> m_commands_supported -> contains_anycase		3272974						
ANR	3273810	Symbol	GAHPCLIENT_COMMAND_PENDING		3272974						
ANR	3273811	Symbol	esc_groupname		3272974						
ANR	3273812	Symbol	NULL		3272974						
ANR	3273813	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3272974						
ANR	3273814	Symbol	group_name		3272974						
ANR	3273815	Symbol	* * result		3272974						
ANR	3273816	Symbol	user_data		3272974						
ANR	3273817	Symbol	get_pending_result		3272974						
ANR	3273818	Symbol	rc		3272974						
ANR	3273819	Symbol	instance_id		3272974						
ANR	3273820	Symbol	groupnames . next		3272974						
ANR	3273821	Symbol	privatekeyfile		3272974						
ANR	3273822	Symbol	error_code		3272974						
ANR	3273823	Symbol	instance_type		3272974						
ANR	3273824	Symbol	is_pending		3272974						
ANR	3273825	Symbol	deleg_proxy		3272974						
ANR	3273826	Symbol	server		3272974						
ANR	3273827	Symbol	escapeGahpString		3272974						
ANR	3273828	Symbol	* server		3272974						
ANR	3273829	Symbol	user_data_file		3272974						
ANR	3273830	Symbol	keypair		3272974						
ANR	3273831	Symbol	esc9		3272974						
ANR	3273832	Symbol	publickeyfile		3272974						
ANR	3273833	Symbol	esc8		3272974						
ANR	3273834	Symbol	esc7		3272974						
ANR	3273835	Symbol	reqline . c_str		3272974						
ANR	3273836	Symbol	results_only		3272974						
ANR	3273837	Symbol	result -> argv		3272974						
ANR	3273838	Symbol	esc6		3272974						
ANR	3273839	Symbol	* server -> m_commands_supported		3272974						
ANR	3273840	Symbol	esc5		3272974						
ANR	3273841	Symbol	result		3272974						
ANR	3273842	Symbol	groupnames . number		3272974						
ANR	3273843	Symbol	* result		3272974						
ANR	3273844	Symbol	vpc_subnet		3272974						
ANR	3273845	Symbol	reqline		3272974						
ANR	3273846	Symbol	m_mode		3272974						
ANR	3273847	Symbol	* result -> argv		3272974						
ANR	3273848	Symbol	atoi		3272974						
ANR	3273849	Symbol	availability_zone		3272974						
ANR	3273850	Symbol	cnt		3272974						
ANR	3273851	Symbol	ami_id		3272974						
ANR	3273852	Symbol	NULLSTRING		3272974						
ANR	3273853	Symbol	command		3272974						
ANR	3273854	Symbol	esc4		3272974						
ANR	3273855	Symbol	service_url		3272974						
ANR	3273856	Symbol	esc3		3272974						
ANR	3273857	Symbol	error_string		3272974						
ANR	3273858	Symbol	esc2		3272974						
ANR	3273859	Symbol	buf		3272974						
ANR	3273860	Symbol	esc1		3272974						
ANR	3273861	Symbol	x		3272974						
ANR	3273862	Symbol	result -> argc		3272974						
ANR	3273863	Symbol	* * server		3272974						
ANR	3273864	Symbol	FALSE		3272974						
ANR	3273865	Symbol	strdup		3272974						
ANR	3273866	Symbol	check_pending_timeout		3272974						
ANR	3273867	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3272974						
ANR	3273868	Function	GahpClient :: ec2_vm_stop	6471:0:174663:177103							
ANR	3273869	FunctionDef	"GahpClient :: ec2_vm_stop (const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * instance_id , char * & error_code)"		3273868	0					
ANR	3273870	CompoundStatement		6473:0:174830:177103	3273868	0					
ANR	3273871	Statement	static	6476:1:174943:174948	3273868	0	True				
ANR	3273872	IdentifierDeclStatement	"const char * command = ""EC2_VM_STOP"" ;"	6476:8:174950:174985	3273868	1	True				
ANR	3273873	IdentifierDecl	"* command = ""EC2_VM_STOP"""		3273868	0					
ANR	3273874	IdentifierDeclType	const char *		3273868	0					
ANR	3273875	Identifier	command		3273868	1					
ANR	3273876	AssignmentExpression	"* command = ""EC2_VM_STOP"""		3273868	2		=			
ANR	3273877	Identifier	command		3273868	0					
ANR	3273878	PrimaryExpression	"""EC2_VM_STOP"""		3273868	1					
ANR	3273879	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3273868	2					
ANR	3273880	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6479:6:175034:175095	3273868	0	True				
ANR	3273881	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3273868	0		==			
ANR	3273882	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3273868	0					
ANR	3273883	Callee	server -> m_commands_supported -> contains_anycase		3273868	0					
ANR	3273884	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3273868	0					
ANR	3273885	PtrMemberAccess	server -> m_commands_supported		3273868	0					
ANR	3273886	Identifier	server		3273868	0					
ANR	3273887	Identifier	m_commands_supported		3273868	1					
ANR	3273888	Identifier	contains_anycase		3273868	1					
ANR	3273889	ArgumentList	command		3273868	1					
ANR	3273890	Argument	command		3273868	0					
ANR	3273891	Identifier	command		3273868	0					
ANR	3273892	Identifier	FALSE		3273868	1					
ANR	3273893	CompoundStatement		7:70:267:267	3273868	1					
ANR	3273894	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6480:2:175102:175141	3273868	0	True				
ANR	3273895	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3273868	0					
ANR	3273896	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) )		3273868	3					
ANR	3273897	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL )	6484:6:175180:175280	3273868	0	True				
ANR	3273898	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL )		3273868	0		||			
ANR	3273899	EqualityExpression	service_url == NULL		3273868	0		==			
ANR	3273900	Identifier	service_url		3273868	0					
ANR	3273901	Identifier	NULL		3273868	1					
ANR	3273902	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL )		3273868	1		||			
ANR	3273903	EqualityExpression	publickeyfile == NULL		3273868	0		==			
ANR	3273904	Identifier	publickeyfile		3273868	0					
ANR	3273905	Identifier	NULL		3273868	1					
ANR	3273906	OrExpression	( privatekeyfile == NULL ) || ( instance_id == NULL )		3273868	1		||			
ANR	3273907	EqualityExpression	privatekeyfile == NULL		3273868	0		==			
ANR	3273908	Identifier	privatekeyfile		3273868	0					
ANR	3273909	Identifier	NULL		3273868	1					
ANR	3273910	EqualityExpression	instance_id == NULL		3273868	1		==			
ANR	3273911	Identifier	instance_id		3273868	0					
ANR	3273912	Identifier	NULL		3273868	1					
ANR	3273913	CompoundStatement		12:110:453:453	3273868	1					
ANR	3273914	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6485:2:175288:175327	3273868	0	True				
ANR	3273915	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3273868	0					
ANR	3273916	IdentifierDeclStatement	std :: string reqline ;	6489:1:175361:175380	3273868	4	True				
ANR	3273917	IdentifierDecl	reqline		3273868	0					
ANR	3273918	IdentifierDeclType	std :: string		3273868	0					
ANR	3273919	Identifier	reqline		3273868	1					
ANR	3273920	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	6491:1:175385:175437	3273868	5	True				
ANR	3273921	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3273868	0					
ANR	3273922	IdentifierDeclType	char *		3273868	0					
ANR	3273923	Identifier	esc1		3273868	1					
ANR	3273924	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3273868	2		=			
ANR	3273925	Identifier	esc1		3273868	0					
ANR	3273926	CallExpression	strdup ( escapeGahpString ( service_url ) )		3273868	1					
ANR	3273927	Callee	strdup		3273868	0					
ANR	3273928	Identifier	strdup		3273868	0					
ANR	3273929	ArgumentList	escapeGahpString ( service_url )		3273868	1					
ANR	3273930	Argument	escapeGahpString ( service_url )		3273868	0					
ANR	3273931	CallExpression	escapeGahpString ( service_url )		3273868	0					
ANR	3273932	Callee	escapeGahpString		3273868	0					
ANR	3273933	Identifier	escapeGahpString		3273868	0					
ANR	3273934	ArgumentList	service_url		3273868	1					
ANR	3273935	Argument	service_url		3273868	0					
ANR	3273936	Identifier	service_url		3273868	0					
ANR	3273937	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	6492:1:175440:175494	3273868	6	True				
ANR	3273938	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3273868	0					
ANR	3273939	IdentifierDeclType	char *		3273868	0					
ANR	3273940	Identifier	esc2		3273868	1					
ANR	3273941	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3273868	2		=			
ANR	3273942	Identifier	esc2		3273868	0					
ANR	3273943	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3273868	1					
ANR	3273944	Callee	strdup		3273868	0					
ANR	3273945	Identifier	strdup		3273868	0					
ANR	3273946	ArgumentList	escapeGahpString ( publickeyfile )		3273868	1					
ANR	3273947	Argument	escapeGahpString ( publickeyfile )		3273868	0					
ANR	3273948	CallExpression	escapeGahpString ( publickeyfile )		3273868	0					
ANR	3273949	Callee	escapeGahpString		3273868	0					
ANR	3273950	Identifier	escapeGahpString		3273868	0					
ANR	3273951	ArgumentList	publickeyfile		3273868	1					
ANR	3273952	Argument	publickeyfile		3273868	0					
ANR	3273953	Identifier	publickeyfile		3273868	0					
ANR	3273954	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	6493:1:175497:175552	3273868	7	True				
ANR	3273955	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3273868	0					
ANR	3273956	IdentifierDeclType	char *		3273868	0					
ANR	3273957	Identifier	esc3		3273868	1					
ANR	3273958	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3273868	2		=			
ANR	3273959	Identifier	esc3		3273868	0					
ANR	3273960	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3273868	1					
ANR	3273961	Callee	strdup		3273868	0					
ANR	3273962	Identifier	strdup		3273868	0					
ANR	3273963	ArgumentList	escapeGahpString ( privatekeyfile )		3273868	1					
ANR	3273964	Argument	escapeGahpString ( privatekeyfile )		3273868	0					
ANR	3273965	CallExpression	escapeGahpString ( privatekeyfile )		3273868	0					
ANR	3273966	Callee	escapeGahpString		3273868	0					
ANR	3273967	Identifier	escapeGahpString		3273868	0					
ANR	3273968	ArgumentList	privatekeyfile		3273868	1					
ANR	3273969	Argument	privatekeyfile		3273868	0					
ANR	3273970	Identifier	privatekeyfile		3273868	0					
ANR	3273971	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( instance_id ) ) ;	6494:1:175555:175607	3273868	8	True				
ANR	3273972	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3273868	0					
ANR	3273973	IdentifierDeclType	char *		3273868	0					
ANR	3273974	Identifier	esc4		3273868	1					
ANR	3273975	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3273868	2		=			
ANR	3273976	Identifier	esc4		3273868	0					
ANR	3273977	CallExpression	strdup ( escapeGahpString ( instance_id ) )		3273868	1					
ANR	3273978	Callee	strdup		3273868	0					
ANR	3273979	Identifier	strdup		3273868	0					
ANR	3273980	ArgumentList	escapeGahpString ( instance_id )		3273868	1					
ANR	3273981	Argument	escapeGahpString ( instance_id )		3273868	0					
ANR	3273982	CallExpression	escapeGahpString ( instance_id )		3273868	0					
ANR	3273983	Callee	escapeGahpString		3273868	0					
ANR	3273984	Identifier	escapeGahpString		3273868	0					
ANR	3273985	ArgumentList	instance_id		3273868	1					
ANR	3273986	Argument	instance_id		3273868	0					
ANR	3273987	Identifier	instance_id		3273868	0					
ANR	3273988	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 ) ;"	6496:1:175612:175676	3273868	9	True				
ANR	3273989	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3273868	0					
ANR	3273990	IdentifierDeclType	int		3273868	0					
ANR	3273991	Identifier	x		3273868	1					
ANR	3273992	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3273868	2		=			
ANR	3273993	Identifier	x		3273868	0					
ANR	3273994	CallExpression	"sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3273868	1					
ANR	3273995	Callee	sprintf		3273868	0					
ANR	3273996	Identifier	sprintf		3273868	0					
ANR	3273997	ArgumentList	reqline		3273868	1					
ANR	3273998	Argument	reqline		3273868	0					
ANR	3273999	Identifier	reqline		3273868	0					
ANR	3274000	Argument	"""%s %s %s %s"""		3273868	1					
ANR	3274001	PrimaryExpression	"""%s %s %s %s"""		3273868	0					
ANR	3274002	Argument	esc1		3273868	2					
ANR	3274003	Identifier	esc1		3273868	0					
ANR	3274004	Argument	esc2		3273868	3					
ANR	3274005	Identifier	esc2		3273868	0					
ANR	3274006	Argument	esc3		3273868	4					
ANR	3274007	Identifier	esc3		3273868	0					
ANR	3274008	Argument	esc4		3273868	5					
ANR	3274009	Identifier	esc4		3273868	0					
ANR	3274010	ExpressionStatement	free ( esc1 )	6498:1:175681:175693	3273868	10	True				
ANR	3274011	CallExpression	free ( esc1 )		3273868	0					
ANR	3274012	Callee	free		3273868	0					
ANR	3274013	Identifier	free		3273868	0					
ANR	3274014	ArgumentList	esc1		3273868	1					
ANR	3274015	Argument	esc1		3273868	0					
ANR	3274016	Identifier	esc1		3273868	0					
ANR	3274017	ExpressionStatement	free ( esc2 )	6499:1:175696:175708	3273868	11	True				
ANR	3274018	CallExpression	free ( esc2 )		3273868	0					
ANR	3274019	Callee	free		3273868	0					
ANR	3274020	Identifier	free		3273868	0					
ANR	3274021	ArgumentList	esc2		3273868	1					
ANR	3274022	Argument	esc2		3273868	0					
ANR	3274023	Identifier	esc2		3273868	0					
ANR	3274024	ExpressionStatement	free ( esc3 )	6500:1:175711:175723	3273868	12	True				
ANR	3274025	CallExpression	free ( esc3 )		3273868	0					
ANR	3274026	Callee	free		3273868	0					
ANR	3274027	Identifier	free		3273868	0					
ANR	3274028	ArgumentList	esc3		3273868	1					
ANR	3274029	Argument	esc3		3273868	0					
ANR	3274030	Identifier	esc3		3273868	0					
ANR	3274031	ExpressionStatement	free ( esc4 )	6501:1:175726:175738	3273868	13	True				
ANR	3274032	CallExpression	free ( esc4 )		3273868	0					
ANR	3274033	Callee	free		3273868	0					
ANR	3274034	Identifier	free		3273868	0					
ANR	3274035	ArgumentList	esc4		3273868	1					
ANR	3274036	Argument	esc4		3273868	0					
ANR	3274037	Identifier	esc4		3273868	0					
ANR	3274038	ExpressionStatement	ASSERT ( x > 0 )	6502:1:175741:175756	3273868	14	True				
ANR	3274039	CallExpression	ASSERT ( x > 0 )		3273868	0					
ANR	3274040	Callee	ASSERT		3273868	0					
ANR	3274041	Identifier	ASSERT		3273868	0					
ANR	3274042	ArgumentList	x > 0		3273868	1					
ANR	3274043	Argument	x > 0		3273868	0					
ANR	3274044	RelationalExpression	x > 0		3273868	0		>			
ANR	3274045	Identifier	x		3273868	0					
ANR	3274046	PrimaryExpression	0		3273868	1					
ANR	3274047	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6504:1:175761:175794	3273868	15	True				
ANR	3274048	IdentifierDecl	* buf = reqline . c_str ( )		3273868	0					
ANR	3274049	IdentifierDeclType	const char *		3273868	0					
ANR	3274050	Identifier	buf		3273868	1					
ANR	3274051	AssignmentExpression	* buf = reqline . c_str ( )		3273868	2		=			
ANR	3274052	Identifier	buf		3273868	0					
ANR	3274053	CallExpression	reqline . c_str ( )		3273868	1					
ANR	3274054	Callee	reqline . c_str		3273868	0					
ANR	3274055	MemberAccess	reqline . c_str		3273868	0					
ANR	3274056	Identifier	reqline		3273868	0					
ANR	3274057	Identifier	c_str		3273868	1					
ANR	3274058	ArgumentList			3273868	1					
ANR	3274059	IfStatement	"if ( ! is_pending ( command , buf ) )"		3273868	16					
ANR	3274060	Condition	"! is_pending ( command , buf )"	6507:6:175890:175913	3273868	0	True				
ANR	3274061	UnaryOperationExpression	"! is_pending ( command , buf )"		3273868	0					
ANR	3274062	UnaryOperator	!		3273868	0					
ANR	3274063	CallExpression	"is_pending ( command , buf )"		3273868	1					
ANR	3274064	Callee	is_pending		3273868	0					
ANR	3274065	Identifier	is_pending		3273868	0					
ANR	3274066	ArgumentList	command		3273868	1					
ANR	3274067	Argument	command		3273868	0					
ANR	3274068	Identifier	command		3273868	0					
ANR	3274069	Argument	buf		3273868	1					
ANR	3274070	Identifier	buf		3273868	0					
ANR	3274071	CompoundStatement		35:33:1086:1086	3273868	1					
ANR	3274072	IfStatement	if ( m_mode == results_only )		3273868	0					
ANR	3274073	Condition	m_mode == results_only	6509:7:176017:176038	3273868	0	True				
ANR	3274074	EqualityExpression	m_mode == results_only		3273868	0		==			
ANR	3274075	Identifier	m_mode		3273868	0					
ANR	3274076	Identifier	results_only		3273868	1					
ANR	3274077	CompoundStatement		37:32:1211:1211	3273868	1					
ANR	3274078	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6510:3:176047:176086	3273868	0	True				
ANR	3274079	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3273868	0					
ANR	3274080	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	6512:2:176094:176132	3273868	1	True				
ANR	3274081	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3273868	0					
ANR	3274082	Callee	now_pending		3273868	0					
ANR	3274083	Identifier	now_pending		3273868	0					
ANR	3274084	ArgumentList	command		3273868	1					
ANR	3274085	Argument	command		3273868	0					
ANR	3274086	Identifier	command		3273868	0					
ANR	3274087	Argument	buf		3273868	1					
ANR	3274088	Identifier	buf		3273868	0					
ANR	3274089	Argument	deleg_proxy		3273868	2					
ANR	3274090	Identifier	deleg_proxy		3273868	0					
ANR	3274091	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6518:1:176223:176275	3273868	17	True				
ANR	3274092	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3273868	0					
ANR	3274093	IdentifierDeclType	Gahp_Args *		3273868	0					
ANR	3274094	Identifier	result		3273868	1					
ANR	3274095	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3273868	2		=			
ANR	3274096	Identifier	result		3273868	0					
ANR	3274097	CallExpression	"get_pending_result ( command , buf )"		3273868	1					
ANR	3274098	Callee	get_pending_result		3273868	0					
ANR	3274099	Identifier	get_pending_result		3273868	0					
ANR	3274100	ArgumentList	command		3273868	1					
ANR	3274101	Argument	command		3273868	0					
ANR	3274102	Identifier	command		3273868	0					
ANR	3274103	Argument	buf		3273868	1					
ANR	3274104	Identifier	buf		3273868	0					
ANR	3274105	IfStatement	if ( result )		3273868	18					
ANR	3274106	Condition	result	6525:6:176390:176395	3273868	0	True				
ANR	3274107	Identifier	result		3273868	0					
ANR	3274108	CompoundStatement		55:2:1597:1607	3273868	1					
ANR	3274109	IdentifierDeclStatement	int rc = 0 ;	6527:2:176428:176438	3273868	0	True				
ANR	3274110	IdentifierDecl	rc = 0		3273868	0					
ANR	3274111	IdentifierDeclType	int		3273868	0					
ANR	3274112	Identifier	rc		3273868	1					
ANR	3274113	AssignmentExpression	rc = 0		3273868	2		=			
ANR	3274114	Identifier	rc		3273868	0					
ANR	3274115	PrimaryExpression	0		3273868	1					
ANR	3274116	IfStatement	if ( result -> argc == 2 )		3273868	1					
ANR	3274117	Condition	result -> argc == 2	6528:6:176446:176462	3273868	0	True				
ANR	3274118	EqualityExpression	result -> argc == 2		3273868	0		==			
ANR	3274119	PtrMemberAccess	result -> argc		3273868	0					
ANR	3274120	Identifier	result		3273868	0					
ANR	3274121	Identifier	argc		3273868	1					
ANR	3274122	PrimaryExpression	2		3273868	1					
ANR	3274123	CompoundStatement		56:25:1634:1634	3273868	1					
ANR	3274124	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6529:3:176470:176496	3273868	0	True				
ANR	3274125	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3273868	0		=			
ANR	3274126	Identifier	rc		3273868	0					
ANR	3274127	CallExpression	atoi ( result -> argv [ 1 ] )		3273868	1					
ANR	3274128	Callee	atoi		3273868	0					
ANR	3274129	Identifier	atoi		3273868	0					
ANR	3274130	ArgumentList	result -> argv [ 1 ]		3273868	1					
ANR	3274131	Argument	result -> argv [ 1 ]		3273868	0					
ANR	3274132	ArrayIndexing	result -> argv [ 1 ]		3273868	0					
ANR	3274133	PtrMemberAccess	result -> argv		3273868	0					
ANR	3274134	Identifier	result		3273868	0					
ANR	3274135	Identifier	argv		3273868	1					
ANR	3274136	PrimaryExpression	1		3273868	1					
ANR	3274137	IfStatement	if ( rc == 1 )		3273868	1					
ANR	3274138	Condition	rc == 1	6530:7:176505:176511	3273868	0	True				
ANR	3274139	EqualityExpression	rc == 1		3273868	0		==			
ANR	3274140	Identifier	rc		3273868	0					
ANR	3274141	PrimaryExpression	1		3273868	1					
ANR	3274142	ExpressionStatement	"error_string = """""	6530:16:176514:176531	3273868	1	True				
ANR	3274143	AssignmentExpression	"error_string = """""		3273868	0		=			
ANR	3274144	Identifier	error_string		3273868	0					
ANR	3274145	PrimaryExpression	""""""		3273868	1					
ANR	3274146	ElseStatement	else		3273868	0					
ANR	3274147	IfStatement	if ( result -> argc == 4 )		3273868	0					
ANR	3274148	Condition	result -> argc == 4	6531:14:176547:176563	3273868	0	True				
ANR	3274149	EqualityExpression	result -> argc == 4		3273868	0		==			
ANR	3274150	PtrMemberAccess	result -> argc		3273868	0					
ANR	3274151	Identifier	result		3273868	0					
ANR	3274152	Identifier	argc		3273868	1					
ANR	3274153	PrimaryExpression	4		3273868	1					
ANR	3274154	CompoundStatement		59:34:1736:1736	3273868	1					
ANR	3274155	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6533:3:176597:176625	3273868	0	True				
ANR	3274156	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3273868	0		=			
ANR	3274157	Identifier	rc		3273868	0					
ANR	3274158	CallExpression	atoi ( result -> argv [ 1 ] )		3273868	1					
ANR	3274159	Callee	atoi		3273868	0					
ANR	3274160	Identifier	atoi		3273868	0					
ANR	3274161	ArgumentList	result -> argv [ 1 ]		3273868	1					
ANR	3274162	Argument	result -> argv [ 1 ]		3273868	0					
ANR	3274163	ArrayIndexing	result -> argv [ 1 ]		3273868	0					
ANR	3274164	PtrMemberAccess	result -> argv		3273868	0					
ANR	3274165	Identifier	result		3273868	0					
ANR	3274166	Identifier	argv		3273868	1					
ANR	3274167	PrimaryExpression	1		3273868	1					
ANR	3274168	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	6534:3:176630:176666	3273868	1	True				
ANR	3274169	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3273868	0		=			
ANR	3274170	Identifier	error_code		3273868	0					
ANR	3274171	CallExpression	strdup ( result -> argv [ 2 ] )		3273868	1					
ANR	3274172	Callee	strdup		3273868	0					
ANR	3274173	Identifier	strdup		3273868	0					
ANR	3274174	ArgumentList	result -> argv [ 2 ]		3273868	1					
ANR	3274175	Argument	result -> argv [ 2 ]		3273868	0					
ANR	3274176	ArrayIndexing	result -> argv [ 2 ]		3273868	0					
ANR	3274177	PtrMemberAccess	result -> argv		3273868	0					
ANR	3274178	Identifier	result		3273868	0					
ANR	3274179	Identifier	argv		3273868	1					
ANR	3274180	PrimaryExpression	2		3273868	1					
ANR	3274181	ExpressionStatement	error_string = result -> argv [ 3 ]	6535:3:176671:176701	3273868	2	True				
ANR	3274182	AssignmentExpression	error_string = result -> argv [ 3 ]		3273868	0		=			
ANR	3274183	Identifier	error_string		3273868	0					
ANR	3274184	ArrayIndexing	result -> argv [ 3 ]		3273868	1					
ANR	3274185	PtrMemberAccess	result -> argv		3273868	0					
ANR	3274186	Identifier	result		3273868	0					
ANR	3274187	Identifier	argv		3273868	1					
ANR	3274188	PrimaryExpression	3		3273868	1					
ANR	3274189	ElseStatement	else		3273868	0					
ANR	3274190	CompoundStatement		64:9:1884:1884	3273868	0					
ANR	3274191	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6537:3:176720:176754	3273868	0	True				
ANR	3274192	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3273868	0					
ANR	3274193	Callee	EXCEPT		3273868	0					
ANR	3274194	Identifier	EXCEPT		3273868	0					
ANR	3274195	ArgumentList	"""Bad %s result"""		3273868	1					
ANR	3274196	Argument	"""Bad %s result"""		3273868	0					
ANR	3274197	PrimaryExpression	"""Bad %s result"""		3273868	0					
ANR	3274198	Argument	command		3273868	1					
ANR	3274199	Identifier	command		3273868	0					
ANR	3274200	Statement	delete	6540:2:176763:176768	3273868	2	True				
ANR	3274201	ExpressionStatement	result	6540:9:176770:176776	3273868	3	True				
ANR	3274202	Identifier	result		3273868	0					
ANR	3274203	ReturnStatement	return rc ;	6541:2:176780:176789	3273868	4	True				
ANR	3274204	Identifier	rc		3273868	0					
ANR	3274205	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3273868	19					
ANR	3274206	Condition	"check_pending_timeout ( command , buf )"	6545:6:176845:176879	3273868	0	True				
ANR	3274207	CallExpression	"check_pending_timeout ( command , buf )"		3273868	0					
ANR	3274208	Callee	check_pending_timeout		3273868	0					
ANR	3274209	Identifier	check_pending_timeout		3273868	0					
ANR	3274210	ArgumentList	command		3273868	1					
ANR	3274211	Argument	command		3273868	0					
ANR	3274212	Identifier	command		3273868	0					
ANR	3274213	Argument	buf		3273868	1					
ANR	3274214	Identifier	buf		3273868	0					
ANR	3274215	CompoundStatement		74:1:2054:2054	3273868	1					
ANR	3274216	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6548:2:176921:176969	3273868	0	True				
ANR	3274217	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3273868	0					
ANR	3274218	Callee	sprintf		3273868	0					
ANR	3274219	Identifier	sprintf		3273868	0					
ANR	3274220	ArgumentList	error_string		3273868	1					
ANR	3274221	Argument	error_string		3273868	0					
ANR	3274222	Identifier	error_string		3273868	0					
ANR	3274223	Argument	"""%s timed out"""		3273868	1					
ANR	3274224	PrimaryExpression	"""%s timed out"""		3273868	0					
ANR	3274225	Argument	command		3273868	2					
ANR	3274226	Identifier	command		3273868	0					
ANR	3274227	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6549:2:176973:177008	3273868	1	True				
ANR	3274228	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3273868	0					
ANR	3274229	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6553:1:177067:177100	3273868	20	True				
ANR	3274230	Identifier	GAHPCLIENT_COMMAND_PENDING		3273868	0					
ANR	3274231	ReturnType	int		3273868	1					
ANR	3274232	Identifier	GahpClient :: ec2_vm_stop		3273868	2					
ANR	3274233	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * instance_id , char * & error_code"		3273868	3					
ANR	3274234	Parameter	const char * service_url	6471:29:174692:174714	3273868	0	True				
ANR	3274235	ParameterType	const char *		3273868	0					
ANR	3274236	Identifier	service_url		3273868	1					
ANR	3274237	Parameter	const char * publickeyfile	6471:54:174717:174742	3273868	1	True				
ANR	3274238	ParameterType	const char *		3273868	0					
ANR	3274239	Identifier	publickeyfile		3273868	1					
ANR	3274240	Parameter	const char * privatekeyfile	6471:82:174745:174771	3273868	2	True				
ANR	3274241	ParameterType	const char *		3273868	0					
ANR	3274242	Identifier	privatekeyfile		3273868	1					
ANR	3274243	Parameter	const char * instance_id	6472:8:174783:174806	3273868	3	True				
ANR	3274244	ParameterType	const char *		3273868	0					
ANR	3274245	Identifier	instance_id		3273868	1					
ANR	3274246	Parameter	char * & error_code	6472:34:174809:174826	3273868	4	True				
ANR	3274247	ParameterType	char * &		3273868	0					
ANR	3274248	Identifier	error_code		3273868	1					
ANR	3274249	CFGEntryNode	ENTRY		3273868		True				
ANR	3274250	CFGExitNode	EXIT		3273868		True				
ANR	3274251	Symbol	server		3273868						
ANR	3274252	Symbol	server -> m_commands_supported		3273868						
ANR	3274253	Symbol	escapeGahpString		3273868						
ANR	3274254	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3273868						
ANR	3274255	Symbol	* server		3273868						
ANR	3274256	Symbol	publickeyfile		3273868						
ANR	3274257	Symbol	reqline . c_str		3273868						
ANR	3274258	Symbol	results_only		3273868						
ANR	3274259	Symbol	result -> argv		3273868						
ANR	3274260	Symbol	* server -> m_commands_supported		3273868						
ANR	3274261	Symbol	sprintf		3273868						
ANR	3274262	Symbol	result		3273868						
ANR	3274263	Symbol	* result		3273868						
ANR	3274264	Symbol	server -> m_commands_supported -> contains_anycase		3273868						
ANR	3274265	Symbol	GAHPCLIENT_COMMAND_PENDING		3273868						
ANR	3274266	Symbol	reqline		3273868						
ANR	3274267	Symbol	m_mode		3273868						
ANR	3274268	Symbol	* result -> argv		3273868						
ANR	3274269	Symbol	atoi		3273868						
ANR	3274270	Symbol	NULL		3273868						
ANR	3274271	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3273868						
ANR	3274272	Symbol	* * result		3273868						
ANR	3274273	Symbol	command		3273868						
ANR	3274274	Symbol	esc4		3273868						
ANR	3274275	Symbol	get_pending_result		3273868						
ANR	3274276	Symbol	service_url		3273868						
ANR	3274277	Symbol	esc3		3273868						
ANR	3274278	Symbol	rc		3273868						
ANR	3274279	Symbol	error_string		3273868						
ANR	3274280	Symbol	esc2		3273868						
ANR	3274281	Symbol	buf		3273868						
ANR	3274282	Symbol	instance_id		3273868						
ANR	3274283	Symbol	esc1		3273868						
ANR	3274284	Symbol	x		3273868						
ANR	3274285	Symbol	result -> argc		3273868						
ANR	3274286	Symbol	privatekeyfile		3273868						
ANR	3274287	Symbol	error_code		3273868						
ANR	3274288	Symbol	* * server		3273868						
ANR	3274289	Symbol	FALSE		3273868						
ANR	3274290	Symbol	strdup		3273868						
ANR	3274291	Symbol	check_pending_timeout		3273868						
ANR	3274292	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3273868						
ANR	3274293	Symbol	is_pending		3273868						
ANR	3274294	Symbol	deleg_proxy		3273868						
ANR	3274295	Function	GahpClient :: ec2_vm_status	6558:0:177133:180606							
ANR	3274296	FunctionDef	"GahpClient :: ec2_vm_status (const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * instance_id , StringList & returnStatus , char * & error_code)"		3274295	0					
ANR	3274297	CompoundStatement		6560:0:177328:180606	3274295	0					
ANR	3274298	Statement	static	6563:1:177414:177419	3274295	0	True				
ANR	3274299	IdentifierDeclStatement	"const char * command = ""EC2_VM_STATUS"" ;"	6563:8:177421:177458	3274295	1	True				
ANR	3274300	IdentifierDecl	"* command = ""EC2_VM_STATUS"""		3274295	0					
ANR	3274301	IdentifierDeclType	const char *		3274295	0					
ANR	3274302	Identifier	command		3274295	1					
ANR	3274303	AssignmentExpression	"* command = ""EC2_VM_STATUS"""		3274295	2		=			
ANR	3274304	Identifier	command		3274295	0					
ANR	3274305	PrimaryExpression	"""EC2_VM_STATUS"""		3274295	1					
ANR	3274306	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3274295	2					
ANR	3274307	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6566:6:177507:177568	3274295	0	True				
ANR	3274308	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3274295	0		==			
ANR	3274309	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3274295	0					
ANR	3274310	Callee	server -> m_commands_supported -> contains_anycase		3274295	0					
ANR	3274311	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3274295	0					
ANR	3274312	PtrMemberAccess	server -> m_commands_supported		3274295	0					
ANR	3274313	Identifier	server		3274295	0					
ANR	3274314	Identifier	m_commands_supported		3274295	1					
ANR	3274315	Identifier	contains_anycase		3274295	1					
ANR	3274316	ArgumentList	command		3274295	1					
ANR	3274317	Argument	command		3274295	0					
ANR	3274318	Identifier	command		3274295	0					
ANR	3274319	Identifier	FALSE		3274295	1					
ANR	3274320	CompoundStatement		7:70:242:242	3274295	1					
ANR	3274321	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6567:2:177575:177614	3274295	0	True				
ANR	3274322	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3274295	0					
ANR	3274323	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) )		3274295	3					
ANR	3274324	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL )	6571:6:177653:177753	3274295	0	True				
ANR	3274325	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL )		3274295	0		||			
ANR	3274326	EqualityExpression	service_url == NULL		3274295	0		==			
ANR	3274327	Identifier	service_url		3274295	0					
ANR	3274328	Identifier	NULL		3274295	1					
ANR	3274329	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL )		3274295	1		||			
ANR	3274330	EqualityExpression	publickeyfile == NULL		3274295	0		==			
ANR	3274331	Identifier	publickeyfile		3274295	0					
ANR	3274332	Identifier	NULL		3274295	1					
ANR	3274333	OrExpression	( privatekeyfile == NULL ) || ( instance_id == NULL )		3274295	1		||			
ANR	3274334	EqualityExpression	privatekeyfile == NULL		3274295	0		==			
ANR	3274335	Identifier	privatekeyfile		3274295	0					
ANR	3274336	Identifier	NULL		3274295	1					
ANR	3274337	EqualityExpression	instance_id == NULL		3274295	1		==			
ANR	3274338	Identifier	instance_id		3274295	0					
ANR	3274339	Identifier	NULL		3274295	1					
ANR	3274340	CompoundStatement		12:110:428:428	3274295	1					
ANR	3274341	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6572:2:177761:177800	3274295	0	True				
ANR	3274342	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3274295	0					
ANR	3274343	IdentifierDeclStatement	std :: string reqline ;	6576:1:177834:177853	3274295	4	True				
ANR	3274344	IdentifierDecl	reqline		3274295	0					
ANR	3274345	IdentifierDeclType	std :: string		3274295	0					
ANR	3274346	Identifier	reqline		3274295	1					
ANR	3274347	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	6578:1:177858:177910	3274295	5	True				
ANR	3274348	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3274295	0					
ANR	3274349	IdentifierDeclType	char *		3274295	0					
ANR	3274350	Identifier	esc1		3274295	1					
ANR	3274351	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3274295	2		=			
ANR	3274352	Identifier	esc1		3274295	0					
ANR	3274353	CallExpression	strdup ( escapeGahpString ( service_url ) )		3274295	1					
ANR	3274354	Callee	strdup		3274295	0					
ANR	3274355	Identifier	strdup		3274295	0					
ANR	3274356	ArgumentList	escapeGahpString ( service_url )		3274295	1					
ANR	3274357	Argument	escapeGahpString ( service_url )		3274295	0					
ANR	3274358	CallExpression	escapeGahpString ( service_url )		3274295	0					
ANR	3274359	Callee	escapeGahpString		3274295	0					
ANR	3274360	Identifier	escapeGahpString		3274295	0					
ANR	3274361	ArgumentList	service_url		3274295	1					
ANR	3274362	Argument	service_url		3274295	0					
ANR	3274363	Identifier	service_url		3274295	0					
ANR	3274364	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	6579:1:177913:177967	3274295	6	True				
ANR	3274365	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3274295	0					
ANR	3274366	IdentifierDeclType	char *		3274295	0					
ANR	3274367	Identifier	esc2		3274295	1					
ANR	3274368	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3274295	2		=			
ANR	3274369	Identifier	esc2		3274295	0					
ANR	3274370	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3274295	1					
ANR	3274371	Callee	strdup		3274295	0					
ANR	3274372	Identifier	strdup		3274295	0					
ANR	3274373	ArgumentList	escapeGahpString ( publickeyfile )		3274295	1					
ANR	3274374	Argument	escapeGahpString ( publickeyfile )		3274295	0					
ANR	3274375	CallExpression	escapeGahpString ( publickeyfile )		3274295	0					
ANR	3274376	Callee	escapeGahpString		3274295	0					
ANR	3274377	Identifier	escapeGahpString		3274295	0					
ANR	3274378	ArgumentList	publickeyfile		3274295	1					
ANR	3274379	Argument	publickeyfile		3274295	0					
ANR	3274380	Identifier	publickeyfile		3274295	0					
ANR	3274381	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	6580:1:177970:178025	3274295	7	True				
ANR	3274382	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3274295	0					
ANR	3274383	IdentifierDeclType	char *		3274295	0					
ANR	3274384	Identifier	esc3		3274295	1					
ANR	3274385	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3274295	2		=			
ANR	3274386	Identifier	esc3		3274295	0					
ANR	3274387	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3274295	1					
ANR	3274388	Callee	strdup		3274295	0					
ANR	3274389	Identifier	strdup		3274295	0					
ANR	3274390	ArgumentList	escapeGahpString ( privatekeyfile )		3274295	1					
ANR	3274391	Argument	escapeGahpString ( privatekeyfile )		3274295	0					
ANR	3274392	CallExpression	escapeGahpString ( privatekeyfile )		3274295	0					
ANR	3274393	Callee	escapeGahpString		3274295	0					
ANR	3274394	Identifier	escapeGahpString		3274295	0					
ANR	3274395	ArgumentList	privatekeyfile		3274295	1					
ANR	3274396	Argument	privatekeyfile		3274295	0					
ANR	3274397	Identifier	privatekeyfile		3274295	0					
ANR	3274398	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( instance_id ) ) ;	6581:1:178028:178080	3274295	8	True				
ANR	3274399	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3274295	0					
ANR	3274400	IdentifierDeclType	char *		3274295	0					
ANR	3274401	Identifier	esc4		3274295	1					
ANR	3274402	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3274295	2		=			
ANR	3274403	Identifier	esc4		3274295	0					
ANR	3274404	CallExpression	strdup ( escapeGahpString ( instance_id ) )		3274295	1					
ANR	3274405	Callee	strdup		3274295	0					
ANR	3274406	Identifier	strdup		3274295	0					
ANR	3274407	ArgumentList	escapeGahpString ( instance_id )		3274295	1					
ANR	3274408	Argument	escapeGahpString ( instance_id )		3274295	0					
ANR	3274409	CallExpression	escapeGahpString ( instance_id )		3274295	0					
ANR	3274410	Callee	escapeGahpString		3274295	0					
ANR	3274411	Identifier	escapeGahpString		3274295	0					
ANR	3274412	ArgumentList	instance_id		3274295	1					
ANR	3274413	Argument	instance_id		3274295	0					
ANR	3274414	Identifier	instance_id		3274295	0					
ANR	3274415	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 ) ;"	6583:1:178085:178149	3274295	9	True				
ANR	3274416	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3274295	0					
ANR	3274417	IdentifierDeclType	int		3274295	0					
ANR	3274418	Identifier	x		3274295	1					
ANR	3274419	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3274295	2		=			
ANR	3274420	Identifier	x		3274295	0					
ANR	3274421	CallExpression	"sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3274295	1					
ANR	3274422	Callee	sprintf		3274295	0					
ANR	3274423	Identifier	sprintf		3274295	0					
ANR	3274424	ArgumentList	reqline		3274295	1					
ANR	3274425	Argument	reqline		3274295	0					
ANR	3274426	Identifier	reqline		3274295	0					
ANR	3274427	Argument	"""%s %s %s %s"""		3274295	1					
ANR	3274428	PrimaryExpression	"""%s %s %s %s"""		3274295	0					
ANR	3274429	Argument	esc1		3274295	2					
ANR	3274430	Identifier	esc1		3274295	0					
ANR	3274431	Argument	esc2		3274295	3					
ANR	3274432	Identifier	esc2		3274295	0					
ANR	3274433	Argument	esc3		3274295	4					
ANR	3274434	Identifier	esc3		3274295	0					
ANR	3274435	Argument	esc4		3274295	5					
ANR	3274436	Identifier	esc4		3274295	0					
ANR	3274437	ExpressionStatement	free ( esc1 )	6585:1:178154:178166	3274295	10	True				
ANR	3274438	CallExpression	free ( esc1 )		3274295	0					
ANR	3274439	Callee	free		3274295	0					
ANR	3274440	Identifier	free		3274295	0					
ANR	3274441	ArgumentList	esc1		3274295	1					
ANR	3274442	Argument	esc1		3274295	0					
ANR	3274443	Identifier	esc1		3274295	0					
ANR	3274444	ExpressionStatement	free ( esc2 )	6586:1:178169:178181	3274295	11	True				
ANR	3274445	CallExpression	free ( esc2 )		3274295	0					
ANR	3274446	Callee	free		3274295	0					
ANR	3274447	Identifier	free		3274295	0					
ANR	3274448	ArgumentList	esc2		3274295	1					
ANR	3274449	Argument	esc2		3274295	0					
ANR	3274450	Identifier	esc2		3274295	0					
ANR	3274451	ExpressionStatement	free ( esc3 )	6587:1:178184:178196	3274295	12	True				
ANR	3274452	CallExpression	free ( esc3 )		3274295	0					
ANR	3274453	Callee	free		3274295	0					
ANR	3274454	Identifier	free		3274295	0					
ANR	3274455	ArgumentList	esc3		3274295	1					
ANR	3274456	Argument	esc3		3274295	0					
ANR	3274457	Identifier	esc3		3274295	0					
ANR	3274458	ExpressionStatement	free ( esc4 )	6588:1:178199:178211	3274295	13	True				
ANR	3274459	CallExpression	free ( esc4 )		3274295	0					
ANR	3274460	Callee	free		3274295	0					
ANR	3274461	Identifier	free		3274295	0					
ANR	3274462	ArgumentList	esc4		3274295	1					
ANR	3274463	Argument	esc4		3274295	0					
ANR	3274464	Identifier	esc4		3274295	0					
ANR	3274465	ExpressionStatement	ASSERT ( x > 0 )	6589:1:178214:178229	3274295	14	True				
ANR	3274466	CallExpression	ASSERT ( x > 0 )		3274295	0					
ANR	3274467	Callee	ASSERT		3274295	0					
ANR	3274468	Identifier	ASSERT		3274295	0					
ANR	3274469	ArgumentList	x > 0		3274295	1					
ANR	3274470	Argument	x > 0		3274295	0					
ANR	3274471	RelationalExpression	x > 0		3274295	0		>			
ANR	3274472	Identifier	x		3274295	0					
ANR	3274473	PrimaryExpression	0		3274295	1					
ANR	3274474	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6591:1:178234:178267	3274295	15	True				
ANR	3274475	IdentifierDecl	* buf = reqline . c_str ( )		3274295	0					
ANR	3274476	IdentifierDeclType	const char *		3274295	0					
ANR	3274477	Identifier	buf		3274295	1					
ANR	3274478	AssignmentExpression	* buf = reqline . c_str ( )		3274295	2		=			
ANR	3274479	Identifier	buf		3274295	0					
ANR	3274480	CallExpression	reqline . c_str ( )		3274295	1					
ANR	3274481	Callee	reqline . c_str		3274295	0					
ANR	3274482	MemberAccess	reqline . c_str		3274295	0					
ANR	3274483	Identifier	reqline		3274295	0					
ANR	3274484	Identifier	c_str		3274295	1					
ANR	3274485	ArgumentList			3274295	1					
ANR	3274486	IfStatement	"if ( ! is_pending ( command , buf ) )"		3274295	16					
ANR	3274487	Condition	"! is_pending ( command , buf )"	6594:6:178363:178386	3274295	0	True				
ANR	3274488	UnaryOperationExpression	"! is_pending ( command , buf )"		3274295	0					
ANR	3274489	UnaryOperator	!		3274295	0					
ANR	3274490	CallExpression	"is_pending ( command , buf )"		3274295	1					
ANR	3274491	Callee	is_pending		3274295	0					
ANR	3274492	Identifier	is_pending		3274295	0					
ANR	3274493	ArgumentList	command		3274295	1					
ANR	3274494	Argument	command		3274295	0					
ANR	3274495	Identifier	command		3274295	0					
ANR	3274496	Argument	buf		3274295	1					
ANR	3274497	Identifier	buf		3274295	0					
ANR	3274498	CompoundStatement		35:33:1061:1061	3274295	1					
ANR	3274499	IfStatement	if ( m_mode == results_only )		3274295	0					
ANR	3274500	Condition	m_mode == results_only	6596:7:178490:178511	3274295	0	True				
ANR	3274501	EqualityExpression	m_mode == results_only		3274295	0		==			
ANR	3274502	Identifier	m_mode		3274295	0					
ANR	3274503	Identifier	results_only		3274295	1					
ANR	3274504	CompoundStatement		37:32:1186:1186	3274295	1					
ANR	3274505	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6597:3:178520:178559	3274295	0	True				
ANR	3274506	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3274295	0					
ANR	3274507	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	6599:2:178567:178605	3274295	1	True				
ANR	3274508	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3274295	0					
ANR	3274509	Callee	now_pending		3274295	0					
ANR	3274510	Identifier	now_pending		3274295	0					
ANR	3274511	ArgumentList	command		3274295	1					
ANR	3274512	Argument	command		3274295	0					
ANR	3274513	Identifier	command		3274295	0					
ANR	3274514	Argument	buf		3274295	1					
ANR	3274515	Identifier	buf		3274295	0					
ANR	3274516	Argument	deleg_proxy		3274295	2					
ANR	3274517	Identifier	deleg_proxy		3274295	0					
ANR	3274518	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6605:1:178696:178748	3274295	17	True				
ANR	3274519	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3274295	0					
ANR	3274520	IdentifierDeclType	Gahp_Args *		3274295	0					
ANR	3274521	Identifier	result		3274295	1					
ANR	3274522	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3274295	2		=			
ANR	3274523	Identifier	result		3274295	0					
ANR	3274524	CallExpression	"get_pending_result ( command , buf )"		3274295	1					
ANR	3274525	Callee	get_pending_result		3274295	0					
ANR	3274526	Identifier	get_pending_result		3274295	0					
ANR	3274527	ArgumentList	command		3274295	1					
ANR	3274528	Argument	command		3274295	0					
ANR	3274529	Identifier	command		3274295	0					
ANR	3274530	Argument	buf		3274295	1					
ANR	3274531	Identifier	buf		3274295	0					
ANR	3274532	IfStatement	if ( result )		3274295	18					
ANR	3274533	Condition	result	6614:6:179058:179063	3274295	0	True				
ANR	3274534	Identifier	result		3274295	0					
ANR	3274535	CompoundStatement		57:2:1766:1776	3274295	1					
ANR	3274536	IdentifierDeclStatement	int rc = 0 ;	6616:2:179095:179105	3274295	0	True				
ANR	3274537	IdentifierDecl	rc = 0		3274295	0					
ANR	3274538	IdentifierDeclType	int		3274295	0					
ANR	3274539	Identifier	rc		3274295	1					
ANR	3274540	AssignmentExpression	rc = 0		3274295	2		=			
ANR	3274541	Identifier	rc		3274295	0					
ANR	3274542	PrimaryExpression	0		3274295	1					
ANR	3274543	IfStatement	if ( result -> argc == 2 )		3274295	1					
ANR	3274544	Condition	result -> argc == 2	6618:6:179116:179132	3274295	0	True				
ANR	3274545	EqualityExpression	result -> argc == 2		3274295	0		==			
ANR	3274546	PtrMemberAccess	result -> argc		3274295	0					
ANR	3274547	Identifier	result		3274295	0					
ANR	3274548	Identifier	argc		3274295	1					
ANR	3274549	PrimaryExpression	2		3274295	1					
ANR	3274550	CompoundStatement		59:25:1806:1806	3274295	1					
ANR	3274551	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6619:3:179140:179166	3274295	0	True				
ANR	3274552	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3274295	0		=			
ANR	3274553	Identifier	rc		3274295	0					
ANR	3274554	CallExpression	atoi ( result -> argv [ 1 ] )		3274295	1					
ANR	3274555	Callee	atoi		3274295	0					
ANR	3274556	Identifier	atoi		3274295	0					
ANR	3274557	ArgumentList	result -> argv [ 1 ]		3274295	1					
ANR	3274558	Argument	result -> argv [ 1 ]		3274295	0					
ANR	3274559	ArrayIndexing	result -> argv [ 1 ]		3274295	0					
ANR	3274560	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274561	Identifier	result		3274295	0					
ANR	3274562	Identifier	argv		3274295	1					
ANR	3274563	PrimaryExpression	1		3274295	1					
ANR	3274564	IfStatement	if ( rc == 1 )		3274295	1					
ANR	3274565	Condition	rc == 1	6620:7:179175:179181	3274295	0	True				
ANR	3274566	EqualityExpression	rc == 1		3274295	0		==			
ANR	3274567	Identifier	rc		3274295	0					
ANR	3274568	PrimaryExpression	1		3274295	1					
ANR	3274569	CompoundStatement		61:16:1855:1855	3274295	1					
ANR	3274570	ExpressionStatement	"error_string = """""	6621:4:179190:179207	3274295	0	True				
ANR	3274571	AssignmentExpression	"error_string = """""		3274295	0		=			
ANR	3274572	Identifier	error_string		3274295	0					
ANR	3274573	PrimaryExpression	""""""		3274295	1					
ANR	3274574	ElseStatement	else		3274295	0					
ANR	3274575	IfStatement	if ( result -> argc == 4 )		3274295	0					
ANR	3274576	Condition	result -> argc == 4	6624:11:179230:179246	3274295	0	True				
ANR	3274577	EqualityExpression	result -> argc == 4		3274295	0		==			
ANR	3274578	PtrMemberAccess	result -> argc		3274295	0					
ANR	3274579	Identifier	result		3274295	0					
ANR	3274580	Identifier	argc		3274295	1					
ANR	3274581	PrimaryExpression	4		3274295	1					
ANR	3274582	CompoundStatement		65:30:1920:1920	3274295	1					
ANR	3274583	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6625:3:179254:179282	3274295	0	True				
ANR	3274584	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3274295	0		=			
ANR	3274585	Identifier	rc		3274295	0					
ANR	3274586	CallExpression	atoi ( result -> argv [ 1 ] )		3274295	1					
ANR	3274587	Callee	atoi		3274295	0					
ANR	3274588	Identifier	atoi		3274295	0					
ANR	3274589	ArgumentList	result -> argv [ 1 ]		3274295	1					
ANR	3274590	Argument	result -> argv [ 1 ]		3274295	0					
ANR	3274591	ArrayIndexing	result -> argv [ 1 ]		3274295	0					
ANR	3274592	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274593	Identifier	result		3274295	0					
ANR	3274594	Identifier	argv		3274295	1					
ANR	3274595	PrimaryExpression	1		3274295	1					
ANR	3274596	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	6626:3:179287:179323	3274295	1	True				
ANR	3274597	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3274295	0		=			
ANR	3274598	Identifier	error_code		3274295	0					
ANR	3274599	CallExpression	strdup ( result -> argv [ 2 ] )		3274295	1					
ANR	3274600	Callee	strdup		3274295	0					
ANR	3274601	Identifier	strdup		3274295	0					
ANR	3274602	ArgumentList	result -> argv [ 2 ]		3274295	1					
ANR	3274603	Argument	result -> argv [ 2 ]		3274295	0					
ANR	3274604	ArrayIndexing	result -> argv [ 2 ]		3274295	0					
ANR	3274605	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274606	Identifier	result		3274295	0					
ANR	3274607	Identifier	argv		3274295	1					
ANR	3274608	PrimaryExpression	2		3274295	1					
ANR	3274609	ExpressionStatement	error_string = result -> argv [ 3 ]	6627:3:179328:179358	3274295	2	True				
ANR	3274610	AssignmentExpression	error_string = result -> argv [ 3 ]		3274295	0		=			
ANR	3274611	Identifier	error_string		3274295	0					
ANR	3274612	ArrayIndexing	result -> argv [ 3 ]		3274295	1					
ANR	3274613	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274614	Identifier	result		3274295	0					
ANR	3274615	Identifier	argv		3274295	1					
ANR	3274616	PrimaryExpression	3		3274295	1					
ANR	3274617	ElseStatement	else		3274295	0					
ANR	3274618	IfStatement	if ( result -> argc == 5 )		3274295	0					
ANR	3274619	Condition	result -> argc == 5	6629:11:179375:179391	3274295	0	True				
ANR	3274620	EqualityExpression	result -> argc == 5		3274295	0		==			
ANR	3274621	PtrMemberAccess	result -> argc		3274295	0					
ANR	3274622	Identifier	result		3274295	0					
ANR	3274623	Identifier	argc		3274295	1					
ANR	3274624	PrimaryExpression	5		3274295	1					
ANR	3274625	CompoundStatement		71:2:2067:2067	3274295	1					
ANR	3274626	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6631:3:179401:179427	3274295	0	True				
ANR	3274627	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3274295	0		=			
ANR	3274628	Identifier	rc		3274295	0					
ANR	3274629	CallExpression	atoi ( result -> argv [ 1 ] )		3274295	1					
ANR	3274630	Callee	atoi		3274295	0					
ANR	3274631	Identifier	atoi		3274295	0					
ANR	3274632	ArgumentList	result -> argv [ 1 ]		3274295	1					
ANR	3274633	Argument	result -> argv [ 1 ]		3274295	0					
ANR	3274634	ArrayIndexing	result -> argv [ 1 ]		3274295	0					
ANR	3274635	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274636	Identifier	result		3274295	0					
ANR	3274637	Identifier	argv		3274295	1					
ANR	3274638	PrimaryExpression	1		3274295	1					
ANR	3274639	IfStatement	if ( rc == 1 )		3274295	1					
ANR	3274640	Condition	rc == 1	6632:7:179436:179442	3274295	0	True				
ANR	3274641	EqualityExpression	rc == 1		3274295	0		==			
ANR	3274642	Identifier	rc		3274295	0					
ANR	3274643	PrimaryExpression	1		3274295	1					
ANR	3274644	CompoundStatement		73:16:2116:2116	3274295	1					
ANR	3274645	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6633:4:179451:179485	3274295	0	True				
ANR	3274646	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3274295	0					
ANR	3274647	Callee	EXCEPT		3274295	0					
ANR	3274648	Identifier	EXCEPT		3274295	0					
ANR	3274649	ArgumentList	"""Bad %s result"""		3274295	1					
ANR	3274650	Argument	"""Bad %s result"""		3274295	0					
ANR	3274651	PrimaryExpression	"""Bad %s result"""		3274295	0					
ANR	3274652	Argument	command		3274295	1					
ANR	3274653	Identifier	command		3274295	0					
ANR	3274654	ElseStatement	else		3274295	0					
ANR	3274655	CompoundStatement		76:8:2171:2171	3274295	0					
ANR	3274656	IfStatement	"if ( strcmp ( result -> argv [ 3 ] , ""running"" ) == 0 )"		3274295	0					
ANR	3274657	Condition	"strcmp ( result -> argv [ 3 ] , ""running"" ) == 0"	6636:9:179511:179549	3274295	0	True				
ANR	3274658	EqualityExpression	"strcmp ( result -> argv [ 3 ] , ""running"" ) == 0"		3274295	0		==			
ANR	3274659	CallExpression	"strcmp ( result -> argv [ 3 ] , ""running"" )"		3274295	0					
ANR	3274660	Callee	strcmp		3274295	0					
ANR	3274661	Identifier	strcmp		3274295	0					
ANR	3274662	ArgumentList	result -> argv [ 3 ]		3274295	1					
ANR	3274663	Argument	result -> argv [ 3 ]		3274295	0					
ANR	3274664	ArrayIndexing	result -> argv [ 3 ]		3274295	0					
ANR	3274665	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274666	Identifier	result		3274295	0					
ANR	3274667	Identifier	argv		3274295	1					
ANR	3274668	PrimaryExpression	3		3274295	1					
ANR	3274669	Argument	"""running"""		3274295	1					
ANR	3274670	PrimaryExpression	"""running"""		3274295	0					
ANR	3274671	PrimaryExpression	0		3274295	1					
ANR	3274672	CompoundStatement		77:50:2223:2223	3274295	1					
ANR	3274673	ExpressionStatement	rc = 1	6637:5:179559:179565	3274295	0	True				
ANR	3274674	AssignmentExpression	rc = 1		3274295	0		=			
ANR	3274675	Identifier	rc		3274295	0					
ANR	3274676	PrimaryExpression	1		3274295	1					
ANR	3274677	ElseStatement	else		3274295	0					
ANR	3274678	CompoundStatement		81:4:2257:2257	3274295	0					
ANR	3274679	ForStatement	for ( int i = 2 ; i < result -> argc ; i ++ )		3274295	0					
ANR	3274680	ForInit	int i = 2 ;	6642:10:179626:179633	3274295	0	True				
ANR	3274681	IdentifierDeclStatement	int i = 2 ;		3274295	0					
ANR	3274682	IdentifierDecl	i = 2		3274295	0					
ANR	3274683	IdentifierDeclType	int		3274295	0					
ANR	3274684	Identifier	i		3274295	1					
ANR	3274685	AssignmentExpression	i = 2		3274295	2		=			
ANR	3274686	Identifier	i		3274295	0					
ANR	3274687	PrimaryExpression	2		3274295	1					
ANR	3274688	Condition	i < result -> argc	6642:19:179635:179648	3274295	1	True				
ANR	3274689	RelationalExpression	i < result -> argc		3274295	0		<			
ANR	3274690	Identifier	i		3274295	0					
ANR	3274691	PtrMemberAccess	result -> argc		3274295	1					
ANR	3274692	Identifier	result		3274295	0					
ANR	3274693	Identifier	argc		3274295	1					
ANR	3274694	PostIncDecOperationExpression	i ++	6642:35:179651:179653	3274295	2	True				
ANR	3274695	Identifier	i		3274295	0					
ANR	3274696	IncDec	++		3274295	1					
ANR	3274697	CompoundStatement		83:40:2327:2327	3274295	3					
ANR	3274698	ExpressionStatement	returnStatus . append ( strdup ( result -> argv [ i ] ) )	6643:6:179664:179710	3274295	0	True				
ANR	3274699	CallExpression	returnStatus . append ( strdup ( result -> argv [ i ] ) )		3274295	0					
ANR	3274700	Callee	returnStatus . append		3274295	0					
ANR	3274701	MemberAccess	returnStatus . append		3274295	0					
ANR	3274702	Identifier	returnStatus		3274295	0					
ANR	3274703	Identifier	append		3274295	1					
ANR	3274704	ArgumentList	strdup ( result -> argv [ i ] )		3274295	1					
ANR	3274705	Argument	strdup ( result -> argv [ i ] )		3274295	0					
ANR	3274706	CallExpression	strdup ( result -> argv [ i ] )		3274295	0					
ANR	3274707	Callee	strdup		3274295	0					
ANR	3274708	Identifier	strdup		3274295	0					
ANR	3274709	ArgumentList	result -> argv [ i ]		3274295	1					
ANR	3274710	Argument	result -> argv [ i ]		3274295	0					
ANR	3274711	ArrayIndexing	result -> argv [ i ]		3274295	0					
ANR	3274712	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274713	Identifier	result		3274295	0					
ANR	3274714	Identifier	argv		3274295	1					
ANR	3274715	Identifier	i		3274295	1					
ANR	3274716	ExpressionStatement	returnStatus . rewind ( )	6646:4:179729:179750	3274295	1	True				
ANR	3274717	CallExpression	returnStatus . rewind ( )		3274295	0					
ANR	3274718	Callee	returnStatus . rewind		3274295	0					
ANR	3274719	MemberAccess	returnStatus . rewind		3274295	0					
ANR	3274720	Identifier	returnStatus		3274295	0					
ANR	3274721	Identifier	rewind		3274295	1					
ANR	3274722	ArgumentList			3274295	1					
ANR	3274723	ElseStatement	else		3274295	0					
ANR	3274724	IfStatement	if ( result -> argc < 9 )		3274295	0					
ANR	3274725	Condition	result -> argc < 9	6649:11:179777:179792	3274295	0	True				
ANR	3274726	RelationalExpression	result -> argc < 9		3274295	0		<			
ANR	3274727	PtrMemberAccess	result -> argc		3274295	0					
ANR	3274728	Identifier	result		3274295	0					
ANR	3274729	Identifier	argc		3274295	1					
ANR	3274730	PrimaryExpression	9		3274295	1					
ANR	3274731	CompoundStatement		90:29:2466:2466	3274295	1					
ANR	3274732	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6650:3:179800:179834	3274295	0	True				
ANR	3274733	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3274295	0					
ANR	3274734	Callee	EXCEPT		3274295	0					
ANR	3274735	Identifier	EXCEPT		3274295	0					
ANR	3274736	ArgumentList	"""Bad %s result"""		3274295	1					
ANR	3274737	Argument	"""Bad %s result"""		3274295	0					
ANR	3274738	PrimaryExpression	"""Bad %s result"""		3274295	0					
ANR	3274739	Argument	command		3274295	1					
ANR	3274740	Identifier	command		3274295	0					
ANR	3274741	ElseStatement	else		3274295	0					
ANR	3274742	CompoundStatement		92:9:2516:2516	3274295	0					
ANR	3274743	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6652:3:179850:179876	3274295	0	True				
ANR	3274744	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3274295	0		=			
ANR	3274745	Identifier	rc		3274295	0					
ANR	3274746	CallExpression	atoi ( result -> argv [ 1 ] )		3274295	1					
ANR	3274747	Callee	atoi		3274295	0					
ANR	3274748	Identifier	atoi		3274295	0					
ANR	3274749	ArgumentList	result -> argv [ 1 ]		3274295	1					
ANR	3274750	Argument	result -> argv [ 1 ]		3274295	0					
ANR	3274751	ArrayIndexing	result -> argv [ 1 ]		3274295	0					
ANR	3274752	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274753	Identifier	result		3274295	0					
ANR	3274754	Identifier	argv		3274295	1					
ANR	3274755	PrimaryExpression	1		3274295	1					
ANR	3274756	IfStatement	if ( rc == 1 )		3274295	1					
ANR	3274757	Condition	rc == 1	6653:7:179885:179891	3274295	0	True				
ANR	3274758	EqualityExpression	rc == 1		3274295	0		==			
ANR	3274759	Identifier	rc		3274295	0					
ANR	3274760	PrimaryExpression	1		3274295	1					
ANR	3274761	CompoundStatement		94:16:2565:2565	3274295	1					
ANR	3274762	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6654:4:179900:179934	3274295	0	True				
ANR	3274763	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3274295	0					
ANR	3274764	Callee	EXCEPT		3274295	0					
ANR	3274765	Identifier	EXCEPT		3274295	0					
ANR	3274766	ArgumentList	"""Bad %s result"""		3274295	1					
ANR	3274767	Argument	"""Bad %s result"""		3274295	0					
ANR	3274768	PrimaryExpression	"""Bad %s result"""		3274295	0					
ANR	3274769	Argument	command		3274295	1					
ANR	3274770	Identifier	command		3274295	0					
ANR	3274771	ElseStatement	else		3274295	0					
ANR	3274772	CompoundStatement		97:8:2620:2620	3274295	0					
ANR	3274773	IfStatement	"if ( ( strcmp ( result -> argv [ 3 ] , ""pending"" ) != 0 ) && ( strcmp ( result -> argv [ 3 ] , ""running"" ) != 0 ) )"		3274295	0					
ANR	3274774	Condition	"( strcmp ( result -> argv [ 3 ] , ""pending"" ) != 0 ) && ( strcmp ( result -> argv [ 3 ] , ""running"" ) != 0 )"	6657:9:179960:180048	3274295	0	True				
ANR	3274775	AndExpression	"( strcmp ( result -> argv [ 3 ] , ""pending"" ) != 0 ) && ( strcmp ( result -> argv [ 3 ] , ""running"" ) != 0 )"		3274295	0		&&			
ANR	3274776	EqualityExpression	"strcmp ( result -> argv [ 3 ] , ""pending"" ) != 0"		3274295	0		!=			
ANR	3274777	CallExpression	"strcmp ( result -> argv [ 3 ] , ""pending"" )"		3274295	0					
ANR	3274778	Callee	strcmp		3274295	0					
ANR	3274779	Identifier	strcmp		3274295	0					
ANR	3274780	ArgumentList	result -> argv [ 3 ]		3274295	1					
ANR	3274781	Argument	result -> argv [ 3 ]		3274295	0					
ANR	3274782	ArrayIndexing	result -> argv [ 3 ]		3274295	0					
ANR	3274783	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274784	Identifier	result		3274295	0					
ANR	3274785	Identifier	argv		3274295	1					
ANR	3274786	PrimaryExpression	3		3274295	1					
ANR	3274787	Argument	"""pending"""		3274295	1					
ANR	3274788	PrimaryExpression	"""pending"""		3274295	0					
ANR	3274789	PrimaryExpression	0		3274295	1					
ANR	3274790	EqualityExpression	"strcmp ( result -> argv [ 3 ] , ""running"" ) != 0"		3274295	1		!=			
ANR	3274791	CallExpression	"strcmp ( result -> argv [ 3 ] , ""running"" )"		3274295	0					
ANR	3274792	Callee	strcmp		3274295	0					
ANR	3274793	Identifier	strcmp		3274295	0					
ANR	3274794	ArgumentList	result -> argv [ 3 ]		3274295	1					
ANR	3274795	Argument	result -> argv [ 3 ]		3274295	0					
ANR	3274796	ArrayIndexing	result -> argv [ 3 ]		3274295	0					
ANR	3274797	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274798	Identifier	result		3274295	0					
ANR	3274799	Identifier	argv		3274295	1					
ANR	3274800	PrimaryExpression	3		3274295	1					
ANR	3274801	Argument	"""running"""		3274295	1					
ANR	3274802	PrimaryExpression	"""running"""		3274295	0					
ANR	3274803	PrimaryExpression	0		3274295	1					
ANR	3274804	CompoundStatement		99:48:2723:2723	3274295	1					
ANR	3274805	ExpressionStatement	rc = 1	6659:5:180059:180065	3274295	0	True				
ANR	3274806	AssignmentExpression	rc = 1		3274295	0		=			
ANR	3274807	Identifier	rc		3274295	0					
ANR	3274808	PrimaryExpression	1		3274295	1					
ANR	3274809	ElseStatement	else		3274295	0					
ANR	3274810	CompoundStatement		103:4:2757:2757	3274295	0					
ANR	3274811	ForStatement	for ( int i = 2 ; i < result -> argc ; i ++ )		3274295	0					
ANR	3274812	ForInit	int i = 2 ;	6664:10:180126:180133	3274295	0	True				
ANR	3274813	IdentifierDeclStatement	int i = 2 ;		3274295	0					
ANR	3274814	IdentifierDecl	i = 2		3274295	0					
ANR	3274815	IdentifierDeclType	int		3274295	0					
ANR	3274816	Identifier	i		3274295	1					
ANR	3274817	AssignmentExpression	i = 2		3274295	2		=			
ANR	3274818	Identifier	i		3274295	0					
ANR	3274819	PrimaryExpression	2		3274295	1					
ANR	3274820	Condition	i < result -> argc	6664:19:180135:180148	3274295	1	True				
ANR	3274821	RelationalExpression	i < result -> argc		3274295	0		<			
ANR	3274822	Identifier	i		3274295	0					
ANR	3274823	PtrMemberAccess	result -> argc		3274295	1					
ANR	3274824	Identifier	result		3274295	0					
ANR	3274825	Identifier	argc		3274295	1					
ANR	3274826	PostIncDecOperationExpression	i ++	6664:35:180151:180153	3274295	2	True				
ANR	3274827	Identifier	i		3274295	0					
ANR	3274828	IncDec	++		3274295	1					
ANR	3274829	CompoundStatement		105:40:2827:2827	3274295	3					
ANR	3274830	ExpressionStatement	returnStatus . append ( strdup ( result -> argv [ i ] ) )	6665:6:180164:180210	3274295	0	True				
ANR	3274831	CallExpression	returnStatus . append ( strdup ( result -> argv [ i ] ) )		3274295	0					
ANR	3274832	Callee	returnStatus . append		3274295	0					
ANR	3274833	MemberAccess	returnStatus . append		3274295	0					
ANR	3274834	Identifier	returnStatus		3274295	0					
ANR	3274835	Identifier	append		3274295	1					
ANR	3274836	ArgumentList	strdup ( result -> argv [ i ] )		3274295	1					
ANR	3274837	Argument	strdup ( result -> argv [ i ] )		3274295	0					
ANR	3274838	CallExpression	strdup ( result -> argv [ i ] )		3274295	0					
ANR	3274839	Callee	strdup		3274295	0					
ANR	3274840	Identifier	strdup		3274295	0					
ANR	3274841	ArgumentList	result -> argv [ i ]		3274295	1					
ANR	3274842	Argument	result -> argv [ i ]		3274295	0					
ANR	3274843	ArrayIndexing	result -> argv [ i ]		3274295	0					
ANR	3274844	PtrMemberAccess	result -> argv		3274295	0					
ANR	3274845	Identifier	result		3274295	0					
ANR	3274846	Identifier	argv		3274295	1					
ANR	3274847	Identifier	i		3274295	1					
ANR	3274848	ExpressionStatement	returnStatus . rewind ( )	6668:4:180229:180250	3274295	1	True				
ANR	3274849	CallExpression	returnStatus . rewind ( )		3274295	0					
ANR	3274850	Callee	returnStatus . rewind		3274295	0					
ANR	3274851	MemberAccess	returnStatus . rewind		3274295	0					
ANR	3274852	Identifier	returnStatus		3274295	0					
ANR	3274853	Identifier	rewind		3274295	1					
ANR	3274854	ArgumentList			3274295	1					
ANR	3274855	Statement	delete	6672:2:180266:180271	3274295	2	True				
ANR	3274856	ExpressionStatement	result	6672:9:180273:180279	3274295	3	True				
ANR	3274857	Identifier	result		3274295	0					
ANR	3274858	ReturnStatement	return rc ;	6673:2:180283:180292	3274295	4	True				
ANR	3274859	Identifier	rc		3274295	0					
ANR	3274860	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3274295	19					
ANR	3274861	Condition	"check_pending_timeout ( command , buf )"	6677:6:180349:180383	3274295	0	True				
ANR	3274862	CallExpression	"check_pending_timeout ( command , buf )"		3274295	0					
ANR	3274863	Callee	check_pending_timeout		3274295	0					
ANR	3274864	Identifier	check_pending_timeout		3274295	0					
ANR	3274865	ArgumentList	command		3274295	1					
ANR	3274866	Argument	command		3274295	0					
ANR	3274867	Identifier	command		3274295	0					
ANR	3274868	Argument	buf		3274295	1					
ANR	3274869	Identifier	buf		3274295	0					
ANR	3274870	CompoundStatement		119:1:3060:3060	3274295	1					
ANR	3274871	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6680:2:180425:180473	3274295	0	True				
ANR	3274872	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3274295	0					
ANR	3274873	Callee	sprintf		3274295	0					
ANR	3274874	Identifier	sprintf		3274295	0					
ANR	3274875	ArgumentList	error_string		3274295	1					
ANR	3274876	Argument	error_string		3274295	0					
ANR	3274877	Identifier	error_string		3274295	0					
ANR	3274878	Argument	"""%s timed out"""		3274295	1					
ANR	3274879	PrimaryExpression	"""%s timed out"""		3274295	0					
ANR	3274880	Argument	command		3274295	2					
ANR	3274881	Identifier	command		3274295	0					
ANR	3274882	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6681:2:180477:180512	3274295	1	True				
ANR	3274883	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3274295	0					
ANR	3274884	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6685:1:180571:180604	3274295	20	True				
ANR	3274885	Identifier	GAHPCLIENT_COMMAND_PENDING		3274295	0					
ANR	3274886	ReturnType	int		3274295	1					
ANR	3274887	Identifier	GahpClient :: ec2_vm_status		3274295	2					
ANR	3274888	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * instance_id , StringList & returnStatus , char * & error_code"		3274295	3					
ANR	3274889	Parameter	const char * service_url	6558:31:177164:177186	3274295	0	True				
ANR	3274890	ParameterType	const char *		3274295	0					
ANR	3274891	Identifier	service_url		3274295	1					
ANR	3274892	Parameter	const char * publickeyfile	6558:56:177189:177214	3274295	1	True				
ANR	3274893	ParameterType	const char *		3274295	0					
ANR	3274894	Identifier	publickeyfile		3274295	1					
ANR	3274895	Parameter	const char * privatekeyfile	6558:84:177217:177243	3274295	2	True				
ANR	3274896	ParameterType	const char *		3274295	0					
ANR	3274897	Identifier	privatekeyfile		3274295	1					
ANR	3274898	Parameter	const char * instance_id	6559:9:177255:177278	3274295	3	True				
ANR	3274899	ParameterType	const char *		3274295	0					
ANR	3274900	Identifier	instance_id		3274295	1					
ANR	3274901	Parameter	StringList & returnStatus	6559:35:177281:177304	3274295	4	True				
ANR	3274902	ParameterType	StringList &		3274295	0					
ANR	3274903	Identifier	returnStatus		3274295	1					
ANR	3274904	Parameter	char * & error_code	6559:61:177307:177324	3274295	5	True				
ANR	3274905	ParameterType	char * &		3274295	0					
ANR	3274906	Identifier	error_code		3274295	1					
ANR	3274907	CFGEntryNode	ENTRY		3274295		True				
ANR	3274908	CFGExitNode	EXIT		3274295		True				
ANR	3274909	Symbol	server		3274295						
ANR	3274910	Symbol	server -> m_commands_supported		3274295						
ANR	3274911	Symbol	escapeGahpString		3274295						
ANR	3274912	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3274295						
ANR	3274913	Symbol	* server		3274295						
ANR	3274914	Symbol	returnStatus		3274295						
ANR	3274915	Symbol	publickeyfile		3274295						
ANR	3274916	Symbol	reqline . c_str		3274295						
ANR	3274917	Symbol	results_only		3274295						
ANR	3274918	Symbol	result -> argv		3274295						
ANR	3274919	Symbol	* server -> m_commands_supported		3274295						
ANR	3274920	Symbol	sprintf		3274295						
ANR	3274921	Symbol	result		3274295						
ANR	3274922	Symbol	* result		3274295						
ANR	3274923	Symbol	server -> m_commands_supported -> contains_anycase		3274295						
ANR	3274924	Symbol	GAHPCLIENT_COMMAND_PENDING		3274295						
ANR	3274925	Symbol	reqline		3274295						
ANR	3274926	Symbol	m_mode		3274295						
ANR	3274927	Symbol	* result -> argv		3274295						
ANR	3274928	Symbol	atoi		3274295						
ANR	3274929	Symbol	strcmp		3274295						
ANR	3274930	Symbol	NULL		3274295						
ANR	3274931	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3274295						
ANR	3274932	Symbol	* * result		3274295						
ANR	3274933	Symbol	i		3274295						
ANR	3274934	Symbol	command		3274295						
ANR	3274935	Symbol	esc4		3274295						
ANR	3274936	Symbol	get_pending_result		3274295						
ANR	3274937	Symbol	service_url		3274295						
ANR	3274938	Symbol	esc3		3274295						
ANR	3274939	Symbol	rc		3274295						
ANR	3274940	Symbol	error_string		3274295						
ANR	3274941	Symbol	esc2		3274295						
ANR	3274942	Symbol	buf		3274295						
ANR	3274943	Symbol	instance_id		3274295						
ANR	3274944	Symbol	esc1		3274295						
ANR	3274945	Symbol	* i		3274295						
ANR	3274946	Symbol	x		3274295						
ANR	3274947	Symbol	result -> argc		3274295						
ANR	3274948	Symbol	privatekeyfile		3274295						
ANR	3274949	Symbol	error_code		3274295						
ANR	3274950	Symbol	* * server		3274295						
ANR	3274951	Symbol	FALSE		3274295						
ANR	3274952	Symbol	strdup		3274295						
ANR	3274953	Symbol	check_pending_timeout		3274295						
ANR	3274954	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3274295						
ANR	3274955	Symbol	is_pending		3274295						
ANR	3274956	Symbol	deleg_proxy		3274295						
ANR	3274957	Function	GahpClient :: ec2_ping	6691:0:180651:182109							
ANR	3274958	FunctionDef	"GahpClient :: ec2_ping (const char * service_url , const char * publickeyfile , const char * privatekeyfile)"		3274957	0					
ANR	3274959	CompoundStatement		6692:0:180758:182109	3274957	0					
ANR	3274960	Statement	static	6694:1:180831:180836	3274957	0	True				
ANR	3274961	IdentifierDeclStatement	"const char * command = ""EC2_VM_STATUS_ALL"" ;"	6694:8:180838:180879	3274957	1	True				
ANR	3274962	IdentifierDecl	"* command = ""EC2_VM_STATUS_ALL"""		3274957	0					
ANR	3274963	IdentifierDeclType	const char *		3274957	0					
ANR	3274964	Identifier	command		3274957	1					
ANR	3274965	AssignmentExpression	"* command = ""EC2_VM_STATUS_ALL"""		3274957	2		=			
ANR	3274966	Identifier	command		3274957	0					
ANR	3274967	PrimaryExpression	"""EC2_VM_STATUS_ALL"""		3274957	1					
ANR	3274968	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	6697:1:180910:180962	3274957	2	True				
ANR	3274969	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3274957	0					
ANR	3274970	IdentifierDeclType	char *		3274957	0					
ANR	3274971	Identifier	esc1		3274957	1					
ANR	3274972	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3274957	2		=			
ANR	3274973	Identifier	esc1		3274957	0					
ANR	3274974	CallExpression	strdup ( escapeGahpString ( service_url ) )		3274957	1					
ANR	3274975	Callee	strdup		3274957	0					
ANR	3274976	Identifier	strdup		3274957	0					
ANR	3274977	ArgumentList	escapeGahpString ( service_url )		3274957	1					
ANR	3274978	Argument	escapeGahpString ( service_url )		3274957	0					
ANR	3274979	CallExpression	escapeGahpString ( service_url )		3274957	0					
ANR	3274980	Callee	escapeGahpString		3274957	0					
ANR	3274981	Identifier	escapeGahpString		3274957	0					
ANR	3274982	ArgumentList	service_url		3274957	1					
ANR	3274983	Argument	service_url		3274957	0					
ANR	3274984	Identifier	service_url		3274957	0					
ANR	3274985	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	6698:1:180965:181019	3274957	3	True				
ANR	3274986	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3274957	0					
ANR	3274987	IdentifierDeclType	char *		3274957	0					
ANR	3274988	Identifier	esc2		3274957	1					
ANR	3274989	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3274957	2		=			
ANR	3274990	Identifier	esc2		3274957	0					
ANR	3274991	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3274957	1					
ANR	3274992	Callee	strdup		3274957	0					
ANR	3274993	Identifier	strdup		3274957	0					
ANR	3274994	ArgumentList	escapeGahpString ( publickeyfile )		3274957	1					
ANR	3274995	Argument	escapeGahpString ( publickeyfile )		3274957	0					
ANR	3274996	CallExpression	escapeGahpString ( publickeyfile )		3274957	0					
ANR	3274997	Callee	escapeGahpString		3274957	0					
ANR	3274998	Identifier	escapeGahpString		3274957	0					
ANR	3274999	ArgumentList	publickeyfile		3274957	1					
ANR	3275000	Argument	publickeyfile		3274957	0					
ANR	3275001	Identifier	publickeyfile		3274957	0					
ANR	3275002	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	6699:1:181022:181077	3274957	4	True				
ANR	3275003	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3274957	0					
ANR	3275004	IdentifierDeclType	char *		3274957	0					
ANR	3275005	Identifier	esc3		3274957	1					
ANR	3275006	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3274957	2		=			
ANR	3275007	Identifier	esc3		3274957	0					
ANR	3275008	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3274957	1					
ANR	3275009	Callee	strdup		3274957	0					
ANR	3275010	Identifier	strdup		3274957	0					
ANR	3275011	ArgumentList	escapeGahpString ( privatekeyfile )		3274957	1					
ANR	3275012	Argument	escapeGahpString ( privatekeyfile )		3274957	0					
ANR	3275013	CallExpression	escapeGahpString ( privatekeyfile )		3274957	0					
ANR	3275014	Callee	escapeGahpString		3274957	0					
ANR	3275015	Identifier	escapeGahpString		3274957	0					
ANR	3275016	ArgumentList	privatekeyfile		3274957	1					
ANR	3275017	Argument	privatekeyfile		3274957	0					
ANR	3275018	Identifier	privatekeyfile		3274957	0					
ANR	3275019	IdentifierDeclStatement	std :: string reqline ;	6701:1:181082:181101	3274957	5	True				
ANR	3275020	IdentifierDecl	reqline		3274957	0					
ANR	3275021	IdentifierDeclType	std :: string		3274957	0					
ANR	3275022	Identifier	reqline		3274957	1					
ANR	3275023	ExpressionStatement	"sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"	6702:1:181104:181151	3274957	6	True				
ANR	3275024	CallExpression	"sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"		3274957	0					
ANR	3275025	Callee	sprintf		3274957	0					
ANR	3275026	Identifier	sprintf		3274957	0					
ANR	3275027	ArgumentList	reqline		3274957	1					
ANR	3275028	Argument	reqline		3274957	0					
ANR	3275029	Identifier	reqline		3274957	0					
ANR	3275030	Argument	"""%s %s %s"""		3274957	1					
ANR	3275031	PrimaryExpression	"""%s %s %s"""		3274957	0					
ANR	3275032	Argument	esc1		3274957	2					
ANR	3275033	Identifier	esc1		3274957	0					
ANR	3275034	Argument	esc2		3274957	3					
ANR	3275035	Identifier	esc2		3274957	0					
ANR	3275036	Argument	esc3		3274957	4					
ANR	3275037	Identifier	esc3		3274957	0					
ANR	3275038	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6703:1:181154:181187	3274957	7	True				
ANR	3275039	IdentifierDecl	* buf = reqline . c_str ( )		3274957	0					
ANR	3275040	IdentifierDeclType	const char *		3274957	0					
ANR	3275041	Identifier	buf		3274957	1					
ANR	3275042	AssignmentExpression	* buf = reqline . c_str ( )		3274957	2		=			
ANR	3275043	Identifier	buf		3274957	0					
ANR	3275044	CallExpression	reqline . c_str ( )		3274957	1					
ANR	3275045	Callee	reqline . c_str		3274957	0					
ANR	3275046	MemberAccess	reqline . c_str		3274957	0					
ANR	3275047	Identifier	reqline		3274957	0					
ANR	3275048	Identifier	c_str		3274957	1					
ANR	3275049	ArgumentList			3274957	1					
ANR	3275050	ExpressionStatement	free ( esc1 )	6705:1:181192:181204	3274957	8	True				
ANR	3275051	CallExpression	free ( esc1 )		3274957	0					
ANR	3275052	Callee	free		3274957	0					
ANR	3275053	Identifier	free		3274957	0					
ANR	3275054	ArgumentList	esc1		3274957	1					
ANR	3275055	Argument	esc1		3274957	0					
ANR	3275056	Identifier	esc1		3274957	0					
ANR	3275057	ExpressionStatement	free ( esc2 )	6706:1:181207:181219	3274957	9	True				
ANR	3275058	CallExpression	free ( esc2 )		3274957	0					
ANR	3275059	Callee	free		3274957	0					
ANR	3275060	Identifier	free		3274957	0					
ANR	3275061	ArgumentList	esc2		3274957	1					
ANR	3275062	Argument	esc2		3274957	0					
ANR	3275063	Identifier	esc2		3274957	0					
ANR	3275064	ExpressionStatement	free ( esc3 )	6707:1:181222:181234	3274957	10	True				
ANR	3275065	CallExpression	free ( esc3 )		3274957	0					
ANR	3275066	Callee	free		3274957	0					
ANR	3275067	Identifier	free		3274957	0					
ANR	3275068	ArgumentList	esc3		3274957	1					
ANR	3275069	Argument	esc3		3274957	0					
ANR	3275070	Identifier	esc3		3274957	0					
ANR	3275071	IfStatement	"if ( ! is_pending ( command , buf ) )"		3274957	11					
ANR	3275072	Condition	"! is_pending ( command , buf )"	6710:6:181330:181353	3274957	0	True				
ANR	3275073	UnaryOperationExpression	"! is_pending ( command , buf )"		3274957	0					
ANR	3275074	UnaryOperator	!		3274957	0					
ANR	3275075	CallExpression	"is_pending ( command , buf )"		3274957	1					
ANR	3275076	Callee	is_pending		3274957	0					
ANR	3275077	Identifier	is_pending		3274957	0					
ANR	3275078	ArgumentList	command		3274957	1					
ANR	3275079	Argument	command		3274957	0					
ANR	3275080	Identifier	command		3274957	0					
ANR	3275081	Argument	buf		3274957	1					
ANR	3275082	Identifier	buf		3274957	0					
ANR	3275083	CompoundStatement		19:33:598:598	3274957	1					
ANR	3275084	IfStatement	if ( m_mode == results_only )		3274957	0					
ANR	3275085	Condition	m_mode == results_only	6712:7:181457:181478	3274957	0	True				
ANR	3275086	EqualityExpression	m_mode == results_only		3274957	0		==			
ANR	3275087	Identifier	m_mode		3274957	0					
ANR	3275088	Identifier	results_only		3274957	1					
ANR	3275089	CompoundStatement		21:32:723:723	3274957	1					
ANR	3275090	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6713:3:181487:181526	3274957	0	True				
ANR	3275091	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3274957	0					
ANR	3275092	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	6715:2:181534:181572	3274957	1	True				
ANR	3275093	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3274957	0					
ANR	3275094	Callee	now_pending		3274957	0					
ANR	3275095	Identifier	now_pending		3274957	0					
ANR	3275096	ArgumentList	command		3274957	1					
ANR	3275097	Argument	command		3274957	0					
ANR	3275098	Identifier	command		3274957	0					
ANR	3275099	Argument	buf		3274957	1					
ANR	3275100	Identifier	buf		3274957	0					
ANR	3275101	Argument	deleg_proxy		3274957	2					
ANR	3275102	Identifier	deleg_proxy		3274957	0					
ANR	3275103	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6721:1:181663:181715	3274957	12	True				
ANR	3275104	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3274957	0					
ANR	3275105	IdentifierDeclType	Gahp_Args *		3274957	0					
ANR	3275106	Identifier	result		3274957	1					
ANR	3275107	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3274957	2		=			
ANR	3275108	Identifier	result		3274957	0					
ANR	3275109	CallExpression	"get_pending_result ( command , buf )"		3274957	1					
ANR	3275110	Callee	get_pending_result		3274957	0					
ANR	3275111	Identifier	get_pending_result		3274957	0					
ANR	3275112	ArgumentList	command		3274957	1					
ANR	3275113	Argument	command		3274957	0					
ANR	3275114	Identifier	command		3274957	0					
ANR	3275115	Argument	buf		3274957	1					
ANR	3275116	Identifier	buf		3274957	0					
ANR	3275117	IfStatement	if ( result )		3274957	13					
ANR	3275118	Condition	result	6723:6:181725:181730	3274957	0	True				
ANR	3275119	Identifier	result		3274957	0					
ANR	3275120	CompoundStatement		33:2:979:1009	3274957	1					
ANR	3275121	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	6724:2:181738:181768	3274957	0	True				
ANR	3275122	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3274957	0					
ANR	3275123	IdentifierDeclType	int		3274957	0					
ANR	3275124	Identifier	rc		3274957	1					
ANR	3275125	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3274957	2		=			
ANR	3275126	Identifier	rc		3274957	0					
ANR	3275127	CallExpression	atoi ( result -> argv [ 1 ] )		3274957	1					
ANR	3275128	Callee	atoi		3274957	0					
ANR	3275129	Identifier	atoi		3274957	0					
ANR	3275130	ArgumentList	result -> argv [ 1 ]		3274957	1					
ANR	3275131	Argument	result -> argv [ 1 ]		3274957	0					
ANR	3275132	ArrayIndexing	result -> argv [ 1 ]		3274957	0					
ANR	3275133	PtrMemberAccess	result -> argv		3274957	0					
ANR	3275134	Identifier	result		3274957	0					
ANR	3275135	Identifier	argv		3274957	1					
ANR	3275136	PrimaryExpression	1		3274957	1					
ANR	3275137	Statement	delete	6725:2:181772:181777	3274957	1	True				
ANR	3275138	ExpressionStatement	result	6725:9:181779:181785	3274957	2	True				
ANR	3275139	Identifier	result		3274957	0					
ANR	3275140	ReturnStatement	return rc ;	6726:2:181789:181798	3274957	3	True				
ANR	3275141	Identifier	rc		3274957	0					
ANR	3275142	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3274957	14					
ANR	3275143	Condition	"check_pending_timeout ( command , buf )"	6730:6:181855:181888	3274957	0	True				
ANR	3275144	CallExpression	"check_pending_timeout ( command , buf )"		3274957	0					
ANR	3275145	Callee	check_pending_timeout		3274957	0					
ANR	3275146	Identifier	check_pending_timeout		3274957	0					
ANR	3275147	ArgumentList	command		3274957	1					
ANR	3275148	Argument	command		3274957	0					
ANR	3275149	Identifier	command		3274957	0					
ANR	3275150	Argument	buf		3274957	1					
ANR	3275151	Identifier	buf		3274957	0					
ANR	3275152	CompoundStatement		39:43:1133:1133	3274957	1					
ANR	3275153	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6732:2:181928:181976	3274957	0	True				
ANR	3275154	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3274957	0					
ANR	3275155	Callee	sprintf		3274957	0					
ANR	3275156	Identifier	sprintf		3274957	0					
ANR	3275157	ArgumentList	error_string		3274957	1					
ANR	3275158	Argument	error_string		3274957	0					
ANR	3275159	Identifier	error_string		3274957	0					
ANR	3275160	Argument	"""%s timed out"""		3274957	1					
ANR	3275161	PrimaryExpression	"""%s timed out"""		3274957	0					
ANR	3275162	Argument	command		3274957	2					
ANR	3275163	Identifier	command		3274957	0					
ANR	3275164	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6733:2:181980:182015	3274957	1	True				
ANR	3275165	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3274957	0					
ANR	3275166	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6737:1:182074:182107	3274957	15	True				
ANR	3275167	Identifier	GAHPCLIENT_COMMAND_PENDING		3274957	0					
ANR	3275168	ReturnType	int		3274957	1					
ANR	3275169	Identifier	GahpClient :: ec2_ping		3274957	2					
ANR	3275170	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile"		3274957	3					
ANR	3275171	Parameter	const char * service_url	6691:25:180676:180698	3274957	0	True				
ANR	3275172	ParameterType	const char *		3274957	0					
ANR	3275173	Identifier	service_url		3274957	1					
ANR	3275174	Parameter	const char * publickeyfile	6691:50:180701:180726	3274957	1	True				
ANR	3275175	ParameterType	const char *		3274957	0					
ANR	3275176	Identifier	publickeyfile		3274957	1					
ANR	3275177	Parameter	const char * privatekeyfile	6691:78:180729:180755	3274957	2	True				
ANR	3275178	ParameterType	const char *		3274957	0					
ANR	3275179	Identifier	privatekeyfile		3274957	1					
ANR	3275180	CFGEntryNode	ENTRY		3274957		True				
ANR	3275181	CFGExitNode	EXIT		3274957		True				
ANR	3275182	Symbol	escapeGahpString		3274957						
ANR	3275183	Symbol	publickeyfile		3274957						
ANR	3275184	Symbol	reqline . c_str		3274957						
ANR	3275185	Symbol	results_only		3274957						
ANR	3275186	Symbol	result -> argv		3274957						
ANR	3275187	Symbol	result		3274957						
ANR	3275188	Symbol	* result		3274957						
ANR	3275189	Symbol	GAHPCLIENT_COMMAND_PENDING		3274957						
ANR	3275190	Symbol	reqline		3274957						
ANR	3275191	Symbol	m_mode		3274957						
ANR	3275192	Symbol	* result -> argv		3274957						
ANR	3275193	Symbol	atoi		3274957						
ANR	3275194	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3274957						
ANR	3275195	Symbol	* * result		3274957						
ANR	3275196	Symbol	command		3274957						
ANR	3275197	Symbol	get_pending_result		3274957						
ANR	3275198	Symbol	service_url		3274957						
ANR	3275199	Symbol	esc3		3274957						
ANR	3275200	Symbol	rc		3274957						
ANR	3275201	Symbol	error_string		3274957						
ANR	3275202	Symbol	esc2		3274957						
ANR	3275203	Symbol	buf		3274957						
ANR	3275204	Symbol	esc1		3274957						
ANR	3275205	Symbol	privatekeyfile		3274957						
ANR	3275206	Symbol	strdup		3274957						
ANR	3275207	Symbol	check_pending_timeout		3274957						
ANR	3275208	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3274957						
ANR	3275209	Symbol	is_pending		3274957						
ANR	3275210	Symbol	deleg_proxy		3274957						
ANR	3275211	Function	GahpClient :: ec2_vm_create_keypair	6742:0:182148:184733							
ANR	3275212	FunctionDef	"GahpClient :: ec2_vm_create_keypair (const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * keyname , const char * outputfile , char * & error_code)"		3275211	0					
ANR	3275213	CompoundStatement		6744:0:182354:184733	3275211	0					
ANR	3275214	Statement	static	6747:1:182488:182493	3275211	0	True				
ANR	3275215	IdentifierDeclStatement	"const char * command = ""EC2_VM_CREATE_KEYPAIR"" ;"	6747:8:182495:182540	3275211	1	True				
ANR	3275216	IdentifierDecl	"* command = ""EC2_VM_CREATE_KEYPAIR"""		3275211	0					
ANR	3275217	IdentifierDeclType	const char *		3275211	0					
ANR	3275218	Identifier	command		3275211	1					
ANR	3275219	AssignmentExpression	"* command = ""EC2_VM_CREATE_KEYPAIR"""		3275211	2		=			
ANR	3275220	Identifier	command		3275211	0					
ANR	3275221	PrimaryExpression	"""EC2_VM_CREATE_KEYPAIR"""		3275211	1					
ANR	3275222	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3275211	2					
ANR	3275223	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6750:6:182589:182650	3275211	0	True				
ANR	3275224	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3275211	0		==			
ANR	3275225	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3275211	0					
ANR	3275226	Callee	server -> m_commands_supported -> contains_anycase		3275211	0					
ANR	3275227	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3275211	0					
ANR	3275228	PtrMemberAccess	server -> m_commands_supported		3275211	0					
ANR	3275229	Identifier	server		3275211	0					
ANR	3275230	Identifier	m_commands_supported		3275211	1					
ANR	3275231	Identifier	contains_anycase		3275211	1					
ANR	3275232	ArgumentList	command		3275211	1					
ANR	3275233	Argument	command		3275211	0					
ANR	3275234	Identifier	command		3275211	0					
ANR	3275235	Identifier	FALSE		3275211	1					
ANR	3275236	CompoundStatement		7:70:298:298	3275211	1					
ANR	3275237	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6751:2:182657:182696	3275211	0	True				
ANR	3275238	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3275211	0					
ANR	3275239	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL ) || ( outputfile == NULL ) )		3275211	3					
ANR	3275240	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL ) || ( outputfile == NULL )	6755:6:182735:182855	3275211	0	True				
ANR	3275241	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL ) || ( outputfile == NULL )		3275211	0		||			
ANR	3275242	EqualityExpression	service_url == NULL		3275211	0		==			
ANR	3275243	Identifier	service_url		3275211	0					
ANR	3275244	Identifier	NULL		3275211	1					
ANR	3275245	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL ) || ( outputfile == NULL )		3275211	1		||			
ANR	3275246	EqualityExpression	publickeyfile == NULL		3275211	0		==			
ANR	3275247	Identifier	publickeyfile		3275211	0					
ANR	3275248	Identifier	NULL		3275211	1					
ANR	3275249	OrExpression	( privatekeyfile == NULL ) || ( keyname == NULL ) || ( outputfile == NULL )		3275211	1		||			
ANR	3275250	EqualityExpression	privatekeyfile == NULL		3275211	0		==			
ANR	3275251	Identifier	privatekeyfile		3275211	0					
ANR	3275252	Identifier	NULL		3275211	1					
ANR	3275253	OrExpression	( keyname == NULL ) || ( outputfile == NULL )		3275211	1		||			
ANR	3275254	EqualityExpression	keyname == NULL		3275211	0		==			
ANR	3275255	Identifier	keyname		3275211	0					
ANR	3275256	Identifier	NULL		3275211	1					
ANR	3275257	EqualityExpression	outputfile == NULL		3275211	1		==			
ANR	3275258	Identifier	outputfile		3275211	0					
ANR	3275259	Identifier	NULL		3275211	1					
ANR	3275260	CompoundStatement		12:130:504:504	3275211	1					
ANR	3275261	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6756:2:182863:182902	3275211	0	True				
ANR	3275262	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3275211	0					
ANR	3275263	IdentifierDeclStatement	std :: string reqline ;	6760:1:182937:182956	3275211	4	True				
ANR	3275264	IdentifierDecl	reqline		3275211	0					
ANR	3275265	IdentifierDeclType	std :: string		3275211	0					
ANR	3275266	Identifier	reqline		3275211	1					
ANR	3275267	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	6762:1:182961:183013	3275211	5	True				
ANR	3275268	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3275211	0					
ANR	3275269	IdentifierDeclType	char *		3275211	0					
ANR	3275270	Identifier	esc1		3275211	1					
ANR	3275271	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3275211	2		=			
ANR	3275272	Identifier	esc1		3275211	0					
ANR	3275273	CallExpression	strdup ( escapeGahpString ( service_url ) )		3275211	1					
ANR	3275274	Callee	strdup		3275211	0					
ANR	3275275	Identifier	strdup		3275211	0					
ANR	3275276	ArgumentList	escapeGahpString ( service_url )		3275211	1					
ANR	3275277	Argument	escapeGahpString ( service_url )		3275211	0					
ANR	3275278	CallExpression	escapeGahpString ( service_url )		3275211	0					
ANR	3275279	Callee	escapeGahpString		3275211	0					
ANR	3275280	Identifier	escapeGahpString		3275211	0					
ANR	3275281	ArgumentList	service_url		3275211	1					
ANR	3275282	Argument	service_url		3275211	0					
ANR	3275283	Identifier	service_url		3275211	0					
ANR	3275284	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	6763:1:183016:183070	3275211	6	True				
ANR	3275285	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3275211	0					
ANR	3275286	IdentifierDeclType	char *		3275211	0					
ANR	3275287	Identifier	esc2		3275211	1					
ANR	3275288	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3275211	2		=			
ANR	3275289	Identifier	esc2		3275211	0					
ANR	3275290	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3275211	1					
ANR	3275291	Callee	strdup		3275211	0					
ANR	3275292	Identifier	strdup		3275211	0					
ANR	3275293	ArgumentList	escapeGahpString ( publickeyfile )		3275211	1					
ANR	3275294	Argument	escapeGahpString ( publickeyfile )		3275211	0					
ANR	3275295	CallExpression	escapeGahpString ( publickeyfile )		3275211	0					
ANR	3275296	Callee	escapeGahpString		3275211	0					
ANR	3275297	Identifier	escapeGahpString		3275211	0					
ANR	3275298	ArgumentList	publickeyfile		3275211	1					
ANR	3275299	Argument	publickeyfile		3275211	0					
ANR	3275300	Identifier	publickeyfile		3275211	0					
ANR	3275301	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	6764:1:183073:183128	3275211	7	True				
ANR	3275302	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3275211	0					
ANR	3275303	IdentifierDeclType	char *		3275211	0					
ANR	3275304	Identifier	esc3		3275211	1					
ANR	3275305	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3275211	2		=			
ANR	3275306	Identifier	esc3		3275211	0					
ANR	3275307	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3275211	1					
ANR	3275308	Callee	strdup		3275211	0					
ANR	3275309	Identifier	strdup		3275211	0					
ANR	3275310	ArgumentList	escapeGahpString ( privatekeyfile )		3275211	1					
ANR	3275311	Argument	escapeGahpString ( privatekeyfile )		3275211	0					
ANR	3275312	CallExpression	escapeGahpString ( privatekeyfile )		3275211	0					
ANR	3275313	Callee	escapeGahpString		3275211	0					
ANR	3275314	Identifier	escapeGahpString		3275211	0					
ANR	3275315	ArgumentList	privatekeyfile		3275211	1					
ANR	3275316	Argument	privatekeyfile		3275211	0					
ANR	3275317	Identifier	privatekeyfile		3275211	0					
ANR	3275318	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( keyname ) ) ;	6765:1:183131:183179	3275211	8	True				
ANR	3275319	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( keyname ) )		3275211	0					
ANR	3275320	IdentifierDeclType	char *		3275211	0					
ANR	3275321	Identifier	esc4		3275211	1					
ANR	3275322	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( keyname ) )		3275211	2		=			
ANR	3275323	Identifier	esc4		3275211	0					
ANR	3275324	CallExpression	strdup ( escapeGahpString ( keyname ) )		3275211	1					
ANR	3275325	Callee	strdup		3275211	0					
ANR	3275326	Identifier	strdup		3275211	0					
ANR	3275327	ArgumentList	escapeGahpString ( keyname )		3275211	1					
ANR	3275328	Argument	escapeGahpString ( keyname )		3275211	0					
ANR	3275329	CallExpression	escapeGahpString ( keyname )		3275211	0					
ANR	3275330	Callee	escapeGahpString		3275211	0					
ANR	3275331	Identifier	escapeGahpString		3275211	0					
ANR	3275332	ArgumentList	keyname		3275211	1					
ANR	3275333	Argument	keyname		3275211	0					
ANR	3275334	Identifier	keyname		3275211	0					
ANR	3275335	IdentifierDeclStatement	char * esc5 = strdup ( escapeGahpString ( outputfile ) ) ;	6766:1:183182:183233	3275211	9	True				
ANR	3275336	IdentifierDecl	* esc5 = strdup ( escapeGahpString ( outputfile ) )		3275211	0					
ANR	3275337	IdentifierDeclType	char *		3275211	0					
ANR	3275338	Identifier	esc5		3275211	1					
ANR	3275339	AssignmentExpression	* esc5 = strdup ( escapeGahpString ( outputfile ) )		3275211	2		=			
ANR	3275340	Identifier	esc5		3275211	0					
ANR	3275341	CallExpression	strdup ( escapeGahpString ( outputfile ) )		3275211	1					
ANR	3275342	Callee	strdup		3275211	0					
ANR	3275343	Identifier	strdup		3275211	0					
ANR	3275344	ArgumentList	escapeGahpString ( outputfile )		3275211	1					
ANR	3275345	Argument	escapeGahpString ( outputfile )		3275211	0					
ANR	3275346	CallExpression	escapeGahpString ( outputfile )		3275211	0					
ANR	3275347	Callee	escapeGahpString		3275211	0					
ANR	3275348	Identifier	escapeGahpString		3275211	0					
ANR	3275349	ArgumentList	outputfile		3275211	1					
ANR	3275350	Argument	outputfile		3275211	0					
ANR	3275351	Identifier	outputfile		3275211	0					
ANR	3275352	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 ) ;"	6768:1:183238:183310	3275211	10	True				
ANR	3275353	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3275211	0					
ANR	3275354	IdentifierDeclType	int		3275211	0					
ANR	3275355	Identifier	x		3275211	1					
ANR	3275356	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3275211	2		=			
ANR	3275357	Identifier	x		3275211	0					
ANR	3275358	CallExpression	"sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3275211	1					
ANR	3275359	Callee	sprintf		3275211	0					
ANR	3275360	Identifier	sprintf		3275211	0					
ANR	3275361	ArgumentList	reqline		3275211	1					
ANR	3275362	Argument	reqline		3275211	0					
ANR	3275363	Identifier	reqline		3275211	0					
ANR	3275364	Argument	"""%s %s %s %s %s"""		3275211	1					
ANR	3275365	PrimaryExpression	"""%s %s %s %s %s"""		3275211	0					
ANR	3275366	Argument	esc1		3275211	2					
ANR	3275367	Identifier	esc1		3275211	0					
ANR	3275368	Argument	esc2		3275211	3					
ANR	3275369	Identifier	esc2		3275211	0					
ANR	3275370	Argument	esc3		3275211	4					
ANR	3275371	Identifier	esc3		3275211	0					
ANR	3275372	Argument	esc4		3275211	5					
ANR	3275373	Identifier	esc4		3275211	0					
ANR	3275374	Argument	esc5		3275211	6					
ANR	3275375	Identifier	esc5		3275211	0					
ANR	3275376	ExpressionStatement	free ( esc1 )	6770:1:183315:183327	3275211	11	True				
ANR	3275377	CallExpression	free ( esc1 )		3275211	0					
ANR	3275378	Callee	free		3275211	0					
ANR	3275379	Identifier	free		3275211	0					
ANR	3275380	ArgumentList	esc1		3275211	1					
ANR	3275381	Argument	esc1		3275211	0					
ANR	3275382	Identifier	esc1		3275211	0					
ANR	3275383	ExpressionStatement	free ( esc2 )	6771:1:183330:183342	3275211	12	True				
ANR	3275384	CallExpression	free ( esc2 )		3275211	0					
ANR	3275385	Callee	free		3275211	0					
ANR	3275386	Identifier	free		3275211	0					
ANR	3275387	ArgumentList	esc2		3275211	1					
ANR	3275388	Argument	esc2		3275211	0					
ANR	3275389	Identifier	esc2		3275211	0					
ANR	3275390	ExpressionStatement	free ( esc3 )	6772:1:183345:183357	3275211	13	True				
ANR	3275391	CallExpression	free ( esc3 )		3275211	0					
ANR	3275392	Callee	free		3275211	0					
ANR	3275393	Identifier	free		3275211	0					
ANR	3275394	ArgumentList	esc3		3275211	1					
ANR	3275395	Argument	esc3		3275211	0					
ANR	3275396	Identifier	esc3		3275211	0					
ANR	3275397	ExpressionStatement	free ( esc4 )	6773:1:183360:183372	3275211	14	True				
ANR	3275398	CallExpression	free ( esc4 )		3275211	0					
ANR	3275399	Callee	free		3275211	0					
ANR	3275400	Identifier	free		3275211	0					
ANR	3275401	ArgumentList	esc4		3275211	1					
ANR	3275402	Argument	esc4		3275211	0					
ANR	3275403	Identifier	esc4		3275211	0					
ANR	3275404	ExpressionStatement	free ( esc5 )	6774:1:183375:183387	3275211	15	True				
ANR	3275405	CallExpression	free ( esc5 )		3275211	0					
ANR	3275406	Callee	free		3275211	0					
ANR	3275407	Identifier	free		3275211	0					
ANR	3275408	ArgumentList	esc5		3275211	1					
ANR	3275409	Argument	esc5		3275211	0					
ANR	3275410	Identifier	esc5		3275211	0					
ANR	3275411	ExpressionStatement	ASSERT ( x > 0 )	6776:1:183391:183406	3275211	16	True				
ANR	3275412	CallExpression	ASSERT ( x > 0 )		3275211	0					
ANR	3275413	Callee	ASSERT		3275211	0					
ANR	3275414	Identifier	ASSERT		3275211	0					
ANR	3275415	ArgumentList	x > 0		3275211	1					
ANR	3275416	Argument	x > 0		3275211	0					
ANR	3275417	RelationalExpression	x > 0		3275211	0		>			
ANR	3275418	Identifier	x		3275211	0					
ANR	3275419	PrimaryExpression	0		3275211	1					
ANR	3275420	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6778:1:183411:183444	3275211	17	True				
ANR	3275421	IdentifierDecl	* buf = reqline . c_str ( )		3275211	0					
ANR	3275422	IdentifierDeclType	const char *		3275211	0					
ANR	3275423	Identifier	buf		3275211	1					
ANR	3275424	AssignmentExpression	* buf = reqline . c_str ( )		3275211	2		=			
ANR	3275425	Identifier	buf		3275211	0					
ANR	3275426	CallExpression	reqline . c_str ( )		3275211	1					
ANR	3275427	Callee	reqline . c_str		3275211	0					
ANR	3275428	MemberAccess	reqline . c_str		3275211	0					
ANR	3275429	Identifier	reqline		3275211	0					
ANR	3275430	Identifier	c_str		3275211	1					
ANR	3275431	ArgumentList			3275211	1					
ANR	3275432	IfStatement	"if ( ! is_pending ( command , buf ) )"		3275211	18					
ANR	3275433	Condition	"! is_pending ( command , buf )"	6781:6:183540:183563	3275211	0	True				
ANR	3275434	UnaryOperationExpression	"! is_pending ( command , buf )"		3275211	0					
ANR	3275435	UnaryOperator	!		3275211	0					
ANR	3275436	CallExpression	"is_pending ( command , buf )"		3275211	1					
ANR	3275437	Callee	is_pending		3275211	0					
ANR	3275438	Identifier	is_pending		3275211	0					
ANR	3275439	ArgumentList	command		3275211	1					
ANR	3275440	Argument	command		3275211	0					
ANR	3275441	Identifier	command		3275211	0					
ANR	3275442	Argument	buf		3275211	1					
ANR	3275443	Identifier	buf		3275211	0					
ANR	3275444	CompoundStatement		38:33:1212:1212	3275211	1					
ANR	3275445	IfStatement	if ( m_mode == results_only )		3275211	0					
ANR	3275446	Condition	m_mode == results_only	6783:7:183667:183688	3275211	0	True				
ANR	3275447	EqualityExpression	m_mode == results_only		3275211	0		==			
ANR	3275448	Identifier	m_mode		3275211	0					
ANR	3275449	Identifier	results_only		3275211	1					
ANR	3275450	CompoundStatement		40:32:1337:1337	3275211	1					
ANR	3275451	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6784:3:183697:183736	3275211	0	True				
ANR	3275452	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3275211	0					
ANR	3275453	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	6786:2:183744:183782	3275211	1	True				
ANR	3275454	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3275211	0					
ANR	3275455	Callee	now_pending		3275211	0					
ANR	3275456	Identifier	now_pending		3275211	0					
ANR	3275457	ArgumentList	command		3275211	1					
ANR	3275458	Argument	command		3275211	0					
ANR	3275459	Identifier	command		3275211	0					
ANR	3275460	Argument	buf		3275211	1					
ANR	3275461	Identifier	buf		3275211	0					
ANR	3275462	Argument	deleg_proxy		3275211	2					
ANR	3275463	Identifier	deleg_proxy		3275211	0					
ANR	3275464	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6792:1:183873:183925	3275211	19	True				
ANR	3275465	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3275211	0					
ANR	3275466	IdentifierDeclType	Gahp_Args *		3275211	0					
ANR	3275467	Identifier	result		3275211	1					
ANR	3275468	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3275211	2		=			
ANR	3275469	Identifier	result		3275211	0					
ANR	3275470	CallExpression	"get_pending_result ( command , buf )"		3275211	1					
ANR	3275471	Callee	get_pending_result		3275211	0					
ANR	3275472	Identifier	get_pending_result		3275211	0					
ANR	3275473	ArgumentList	command		3275211	1					
ANR	3275474	Argument	command		3275211	0					
ANR	3275475	Identifier	command		3275211	0					
ANR	3275476	Argument	buf		3275211	1					
ANR	3275477	Identifier	buf		3275211	0					
ANR	3275478	IfStatement	if ( result )		3275211	20					
ANR	3275479	Condition	result	6799:6:184035:184040	3275211	0	True				
ANR	3275480	Identifier	result		3275211	0					
ANR	3275481	CompoundStatement		58:2:1716:1726	3275211	1					
ANR	3275482	IdentifierDeclStatement	int rc = 0 ;	6801:2:184071:184081	3275211	0	True				
ANR	3275483	IdentifierDecl	rc = 0		3275211	0					
ANR	3275484	IdentifierDeclType	int		3275211	0					
ANR	3275485	Identifier	rc		3275211	1					
ANR	3275486	AssignmentExpression	rc = 0		3275211	2		=			
ANR	3275487	Identifier	rc		3275211	0					
ANR	3275488	PrimaryExpression	0		3275211	1					
ANR	3275489	IfStatement	if ( result -> argc == 2 )		3275211	1					
ANR	3275490	Condition	result -> argc == 2	6802:6:184089:184105	3275211	0	True				
ANR	3275491	EqualityExpression	result -> argc == 2		3275211	0		==			
ANR	3275492	PtrMemberAccess	result -> argc		3275211	0					
ANR	3275493	Identifier	result		3275211	0					
ANR	3275494	Identifier	argc		3275211	1					
ANR	3275495	PrimaryExpression	2		3275211	1					
ANR	3275496	CompoundStatement		59:25:1753:1753	3275211	1					
ANR	3275497	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6803:3:184113:184139	3275211	0	True				
ANR	3275498	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3275211	0		=			
ANR	3275499	Identifier	rc		3275211	0					
ANR	3275500	CallExpression	atoi ( result -> argv [ 1 ] )		3275211	1					
ANR	3275501	Callee	atoi		3275211	0					
ANR	3275502	Identifier	atoi		3275211	0					
ANR	3275503	ArgumentList	result -> argv [ 1 ]		3275211	1					
ANR	3275504	Argument	result -> argv [ 1 ]		3275211	0					
ANR	3275505	ArrayIndexing	result -> argv [ 1 ]		3275211	0					
ANR	3275506	PtrMemberAccess	result -> argv		3275211	0					
ANR	3275507	Identifier	result		3275211	0					
ANR	3275508	Identifier	argv		3275211	1					
ANR	3275509	PrimaryExpression	1		3275211	1					
ANR	3275510	IfStatement	if ( rc == 1 )		3275211	1					
ANR	3275511	Condition	rc == 1	6804:7:184148:184154	3275211	0	True				
ANR	3275512	EqualityExpression	rc == 1		3275211	0		==			
ANR	3275513	Identifier	rc		3275211	0					
ANR	3275514	PrimaryExpression	1		3275211	1					
ANR	3275515	CompoundStatement		61:16:1802:1802	3275211	1					
ANR	3275516	ExpressionStatement	"error_string = """""	6805:4:184163:184180	3275211	0	True				
ANR	3275517	AssignmentExpression	"error_string = """""		3275211	0		=			
ANR	3275518	Identifier	error_string		3275211	0					
ANR	3275519	PrimaryExpression	""""""		3275211	1					
ANR	3275520	ElseStatement	else		3275211	0					
ANR	3275521	IfStatement	if ( result -> argc == 4 )		3275211	0					
ANR	3275522	Condition	result -> argc == 4	6808:12:184204:184220	3275211	0	True				
ANR	3275523	EqualityExpression	result -> argc == 4		3275211	0		==			
ANR	3275524	PtrMemberAccess	result -> argc		3275211	0					
ANR	3275525	Identifier	result		3275211	0					
ANR	3275526	Identifier	argc		3275211	1					
ANR	3275527	PrimaryExpression	4		3275211	1					
ANR	3275528	CompoundStatement		65:32:1869:1869	3275211	1					
ANR	3275529	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6809:3:184229:184257	3275211	0	True				
ANR	3275530	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3275211	0		=			
ANR	3275531	Identifier	rc		3275211	0					
ANR	3275532	CallExpression	atoi ( result -> argv [ 1 ] )		3275211	1					
ANR	3275533	Callee	atoi		3275211	0					
ANR	3275534	Identifier	atoi		3275211	0					
ANR	3275535	ArgumentList	result -> argv [ 1 ]		3275211	1					
ANR	3275536	Argument	result -> argv [ 1 ]		3275211	0					
ANR	3275537	ArrayIndexing	result -> argv [ 1 ]		3275211	0					
ANR	3275538	PtrMemberAccess	result -> argv		3275211	0					
ANR	3275539	Identifier	result		3275211	0					
ANR	3275540	Identifier	argv		3275211	1					
ANR	3275541	PrimaryExpression	1		3275211	1					
ANR	3275542	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	6810:3:184262:184298	3275211	1	True				
ANR	3275543	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3275211	0		=			
ANR	3275544	Identifier	error_code		3275211	0					
ANR	3275545	CallExpression	strdup ( result -> argv [ 2 ] )		3275211	1					
ANR	3275546	Callee	strdup		3275211	0					
ANR	3275547	Identifier	strdup		3275211	0					
ANR	3275548	ArgumentList	result -> argv [ 2 ]		3275211	1					
ANR	3275549	Argument	result -> argv [ 2 ]		3275211	0					
ANR	3275550	ArrayIndexing	result -> argv [ 2 ]		3275211	0					
ANR	3275551	PtrMemberAccess	result -> argv		3275211	0					
ANR	3275552	Identifier	result		3275211	0					
ANR	3275553	Identifier	argv		3275211	1					
ANR	3275554	PrimaryExpression	2		3275211	1					
ANR	3275555	ExpressionStatement	error_string = result -> argv [ 3 ]	6811:3:184303:184333	3275211	2	True				
ANR	3275556	AssignmentExpression	error_string = result -> argv [ 3 ]		3275211	0		=			
ANR	3275557	Identifier	error_string		3275211	0					
ANR	3275558	ArrayIndexing	result -> argv [ 3 ]		3275211	1					
ANR	3275559	PtrMemberAccess	result -> argv		3275211	0					
ANR	3275560	Identifier	result		3275211	0					
ANR	3275561	Identifier	argv		3275211	1					
ANR	3275562	PrimaryExpression	3		3275211	1					
ANR	3275563	ElseStatement	else		3275211	0					
ANR	3275564	CompoundStatement		69:9:1989:1989	3275211	0					
ANR	3275565	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6813:3:184349:184383	3275211	0	True				
ANR	3275566	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3275211	0					
ANR	3275567	Callee	EXCEPT		3275211	0					
ANR	3275568	Identifier	EXCEPT		3275211	0					
ANR	3275569	ArgumentList	"""Bad %s result"""		3275211	1					
ANR	3275570	Argument	"""Bad %s result"""		3275211	0					
ANR	3275571	PrimaryExpression	"""Bad %s result"""		3275211	0					
ANR	3275572	Argument	command		3275211	1					
ANR	3275573	Identifier	command		3275211	0					
ANR	3275574	Statement	delete	6816:2:184392:184397	3275211	2	True				
ANR	3275575	ExpressionStatement	result	6816:9:184399:184405	3275211	3	True				
ANR	3275576	Identifier	result		3275211	0					
ANR	3275577	ReturnStatement	return rc ;	6817:2:184409:184418	3275211	4	True				
ANR	3275578	Identifier	rc		3275211	0					
ANR	3275579	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3275211	21					
ANR	3275580	Condition	"check_pending_timeout ( command , buf )"	6821:6:184475:184509	3275211	0	True				
ANR	3275581	CallExpression	"check_pending_timeout ( command , buf )"		3275211	0					
ANR	3275582	Callee	check_pending_timeout		3275211	0					
ANR	3275583	Identifier	check_pending_timeout		3275211	0					
ANR	3275584	ArgumentList	command		3275211	1					
ANR	3275585	Argument	command		3275211	0					
ANR	3275586	Identifier	command		3275211	0					
ANR	3275587	Argument	buf		3275211	1					
ANR	3275588	Identifier	buf		3275211	0					
ANR	3275589	CompoundStatement		79:1:2160:2160	3275211	1					
ANR	3275590	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6824:2:184551:184599	3275211	0	True				
ANR	3275591	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3275211	0					
ANR	3275592	Callee	sprintf		3275211	0					
ANR	3275593	Identifier	sprintf		3275211	0					
ANR	3275594	ArgumentList	error_string		3275211	1					
ANR	3275595	Argument	error_string		3275211	0					
ANR	3275596	Identifier	error_string		3275211	0					
ANR	3275597	Argument	"""%s timed out"""		3275211	1					
ANR	3275598	PrimaryExpression	"""%s timed out"""		3275211	0					
ANR	3275599	Argument	command		3275211	2					
ANR	3275600	Identifier	command		3275211	0					
ANR	3275601	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6825:2:184603:184638	3275211	1	True				
ANR	3275602	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3275211	0					
ANR	3275603	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6829:1:184697:184730	3275211	22	True				
ANR	3275604	Identifier	GAHPCLIENT_COMMAND_PENDING		3275211	0					
ANR	3275605	ReturnType	int		3275211	1					
ANR	3275606	Identifier	GahpClient :: ec2_vm_create_keypair		3275211	2					
ANR	3275607	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * keyname , const char * outputfile , char * & error_code"		3275211	3					
ANR	3275608	Parameter	const char * service_url	6742:39:182187:182209	3275211	0	True				
ANR	3275609	ParameterType	const char *		3275211	0					
ANR	3275610	Identifier	service_url		3275211	1					
ANR	3275611	Parameter	const char * publickeyfile	6742:64:182212:182237	3275211	1	True				
ANR	3275612	ParameterType	const char *		3275211	0					
ANR	3275613	Identifier	publickeyfile		3275211	1					
ANR	3275614	Parameter	const char * privatekeyfile	6742:92:182240:182266	3275211	2	True				
ANR	3275615	ParameterType	const char *		3275211	0					
ANR	3275616	Identifier	privatekeyfile		3275211	1					
ANR	3275617	Parameter	const char * keyname	6743:18:182287:182306	3275211	3	True				
ANR	3275618	ParameterType	const char *		3275211	0					
ANR	3275619	Identifier	keyname		3275211	1					
ANR	3275620	Parameter	const char * outputfile	6743:40:182309:182331	3275211	4	True				
ANR	3275621	ParameterType	const char *		3275211	0					
ANR	3275622	Identifier	outputfile		3275211	1					
ANR	3275623	Parameter	char * & error_code	6743:65:182334:182351	3275211	5	True				
ANR	3275624	ParameterType	char * &		3275211	0					
ANR	3275625	Identifier	error_code		3275211	1					
ANR	3275626	CFGEntryNode	ENTRY		3275211		True				
ANR	3275627	CFGExitNode	EXIT		3275211		True				
ANR	3275628	Symbol	server		3275211						
ANR	3275629	Symbol	server -> m_commands_supported		3275211						
ANR	3275630	Symbol	escapeGahpString		3275211						
ANR	3275631	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3275211						
ANR	3275632	Symbol	* server		3275211						
ANR	3275633	Symbol	publickeyfile		3275211						
ANR	3275634	Symbol	reqline . c_str		3275211						
ANR	3275635	Symbol	results_only		3275211						
ANR	3275636	Symbol	result -> argv		3275211						
ANR	3275637	Symbol	* server -> m_commands_supported		3275211						
ANR	3275638	Symbol	esc5		3275211						
ANR	3275639	Symbol	sprintf		3275211						
ANR	3275640	Symbol	result		3275211						
ANR	3275641	Symbol	* result		3275211						
ANR	3275642	Symbol	server -> m_commands_supported -> contains_anycase		3275211						
ANR	3275643	Symbol	GAHPCLIENT_COMMAND_PENDING		3275211						
ANR	3275644	Symbol	reqline		3275211						
ANR	3275645	Symbol	keyname		3275211						
ANR	3275646	Symbol	m_mode		3275211						
ANR	3275647	Symbol	* result -> argv		3275211						
ANR	3275648	Symbol	atoi		3275211						
ANR	3275649	Symbol	NULL		3275211						
ANR	3275650	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3275211						
ANR	3275651	Symbol	outputfile		3275211						
ANR	3275652	Symbol	* * result		3275211						
ANR	3275653	Symbol	command		3275211						
ANR	3275654	Symbol	esc4		3275211						
ANR	3275655	Symbol	get_pending_result		3275211						
ANR	3275656	Symbol	service_url		3275211						
ANR	3275657	Symbol	esc3		3275211						
ANR	3275658	Symbol	rc		3275211						
ANR	3275659	Symbol	error_string		3275211						
ANR	3275660	Symbol	esc2		3275211						
ANR	3275661	Symbol	buf		3275211						
ANR	3275662	Symbol	esc1		3275211						
ANR	3275663	Symbol	x		3275211						
ANR	3275664	Symbol	result -> argc		3275211						
ANR	3275665	Symbol	privatekeyfile		3275211						
ANR	3275666	Symbol	error_code		3275211						
ANR	3275667	Symbol	* * server		3275211						
ANR	3275668	Symbol	FALSE		3275211						
ANR	3275669	Symbol	strdup		3275211						
ANR	3275670	Symbol	check_pending_timeout		3275211						
ANR	3275671	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3275211						
ANR	3275672	Symbol	is_pending		3275211						
ANR	3275673	Symbol	deleg_proxy		3275211						
ANR	3275674	Function	GahpClient :: ec2_vm_destroy_keypair	6837:0:185018:187464							
ANR	3275675	FunctionDef	"GahpClient :: ec2_vm_destroy_keypair (const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * keyname , char * & error_code)"		3275674	0					
ANR	3275676	CompoundStatement		6839:0:185197:187464	3275674	0					
ANR	3275677	Statement	static	6842:1:185319:185324	3275674	0	True				
ANR	3275678	IdentifierDeclStatement	"const char * command = ""EC2_VM_DESTROY_KEYPAIR"" ;"	6842:8:185326:185372	3275674	1	True				
ANR	3275679	IdentifierDecl	"* command = ""EC2_VM_DESTROY_KEYPAIR"""		3275674	0					
ANR	3275680	IdentifierDeclType	const char *		3275674	0					
ANR	3275681	Identifier	command		3275674	1					
ANR	3275682	AssignmentExpression	"* command = ""EC2_VM_DESTROY_KEYPAIR"""		3275674	2		=			
ANR	3275683	Identifier	command		3275674	0					
ANR	3275684	PrimaryExpression	"""EC2_VM_DESTROY_KEYPAIR"""		3275674	1					
ANR	3275685	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3275674	2					
ANR	3275686	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6845:6:185421:185482	3275674	0	True				
ANR	3275687	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3275674	0		==			
ANR	3275688	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3275674	0					
ANR	3275689	Callee	server -> m_commands_supported -> contains_anycase		3275674	0					
ANR	3275690	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3275674	0					
ANR	3275691	PtrMemberAccess	server -> m_commands_supported		3275674	0					
ANR	3275692	Identifier	server		3275674	0					
ANR	3275693	Identifier	m_commands_supported		3275674	1					
ANR	3275694	Identifier	contains_anycase		3275674	1					
ANR	3275695	ArgumentList	command		3275674	1					
ANR	3275696	Argument	command		3275674	0					
ANR	3275697	Identifier	command		3275674	0					
ANR	3275698	Identifier	FALSE		3275674	1					
ANR	3275699	CompoundStatement		7:70:287:287	3275674	1					
ANR	3275700	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6846:2:185489:185528	3275674	0	True				
ANR	3275701	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3275674	0					
ANR	3275702	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL ) )		3275674	3					
ANR	3275703	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL )	6850:6:185567:185663	3275674	0	True				
ANR	3275704	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL )		3275674	0		||			
ANR	3275705	EqualityExpression	service_url == NULL		3275674	0		==			
ANR	3275706	Identifier	service_url		3275674	0					
ANR	3275707	Identifier	NULL		3275674	1					
ANR	3275708	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( keyname == NULL )		3275674	1		||			
ANR	3275709	EqualityExpression	publickeyfile == NULL		3275674	0		==			
ANR	3275710	Identifier	publickeyfile		3275674	0					
ANR	3275711	Identifier	NULL		3275674	1					
ANR	3275712	OrExpression	( privatekeyfile == NULL ) || ( keyname == NULL )		3275674	1		||			
ANR	3275713	EqualityExpression	privatekeyfile == NULL		3275674	0		==			
ANR	3275714	Identifier	privatekeyfile		3275674	0					
ANR	3275715	Identifier	NULL		3275674	1					
ANR	3275716	EqualityExpression	keyname == NULL		3275674	1		==			
ANR	3275717	Identifier	keyname		3275674	0					
ANR	3275718	Identifier	NULL		3275674	1					
ANR	3275719	CompoundStatement		12:106:469:469	3275674	1					
ANR	3275720	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6851:2:185671:185710	3275674	0	True				
ANR	3275721	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3275674	0					
ANR	3275722	IdentifierDeclStatement	std :: string reqline ;	6855:1:185745:185764	3275674	4	True				
ANR	3275723	IdentifierDecl	reqline		3275674	0					
ANR	3275724	IdentifierDeclType	std :: string		3275674	0					
ANR	3275725	Identifier	reqline		3275674	1					
ANR	3275726	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	6857:1:185769:185821	3275674	5	True				
ANR	3275727	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3275674	0					
ANR	3275728	IdentifierDeclType	char *		3275674	0					
ANR	3275729	Identifier	esc1		3275674	1					
ANR	3275730	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3275674	2		=			
ANR	3275731	Identifier	esc1		3275674	0					
ANR	3275732	CallExpression	strdup ( escapeGahpString ( service_url ) )		3275674	1					
ANR	3275733	Callee	strdup		3275674	0					
ANR	3275734	Identifier	strdup		3275674	0					
ANR	3275735	ArgumentList	escapeGahpString ( service_url )		3275674	1					
ANR	3275736	Argument	escapeGahpString ( service_url )		3275674	0					
ANR	3275737	CallExpression	escapeGahpString ( service_url )		3275674	0					
ANR	3275738	Callee	escapeGahpString		3275674	0					
ANR	3275739	Identifier	escapeGahpString		3275674	0					
ANR	3275740	ArgumentList	service_url		3275674	1					
ANR	3275741	Argument	service_url		3275674	0					
ANR	3275742	Identifier	service_url		3275674	0					
ANR	3275743	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	6858:1:185824:185878	3275674	6	True				
ANR	3275744	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3275674	0					
ANR	3275745	IdentifierDeclType	char *		3275674	0					
ANR	3275746	Identifier	esc2		3275674	1					
ANR	3275747	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3275674	2		=			
ANR	3275748	Identifier	esc2		3275674	0					
ANR	3275749	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3275674	1					
ANR	3275750	Callee	strdup		3275674	0					
ANR	3275751	Identifier	strdup		3275674	0					
ANR	3275752	ArgumentList	escapeGahpString ( publickeyfile )		3275674	1					
ANR	3275753	Argument	escapeGahpString ( publickeyfile )		3275674	0					
ANR	3275754	CallExpression	escapeGahpString ( publickeyfile )		3275674	0					
ANR	3275755	Callee	escapeGahpString		3275674	0					
ANR	3275756	Identifier	escapeGahpString		3275674	0					
ANR	3275757	ArgumentList	publickeyfile		3275674	1					
ANR	3275758	Argument	publickeyfile		3275674	0					
ANR	3275759	Identifier	publickeyfile		3275674	0					
ANR	3275760	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	6859:1:185881:185936	3275674	7	True				
ANR	3275761	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3275674	0					
ANR	3275762	IdentifierDeclType	char *		3275674	0					
ANR	3275763	Identifier	esc3		3275674	1					
ANR	3275764	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3275674	2		=			
ANR	3275765	Identifier	esc3		3275674	0					
ANR	3275766	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3275674	1					
ANR	3275767	Callee	strdup		3275674	0					
ANR	3275768	Identifier	strdup		3275674	0					
ANR	3275769	ArgumentList	escapeGahpString ( privatekeyfile )		3275674	1					
ANR	3275770	Argument	escapeGahpString ( privatekeyfile )		3275674	0					
ANR	3275771	CallExpression	escapeGahpString ( privatekeyfile )		3275674	0					
ANR	3275772	Callee	escapeGahpString		3275674	0					
ANR	3275773	Identifier	escapeGahpString		3275674	0					
ANR	3275774	ArgumentList	privatekeyfile		3275674	1					
ANR	3275775	Argument	privatekeyfile		3275674	0					
ANR	3275776	Identifier	privatekeyfile		3275674	0					
ANR	3275777	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( keyname ) ) ;	6860:1:185939:185987	3275674	8	True				
ANR	3275778	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( keyname ) )		3275674	0					
ANR	3275779	IdentifierDeclType	char *		3275674	0					
ANR	3275780	Identifier	esc4		3275674	1					
ANR	3275781	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( keyname ) )		3275674	2		=			
ANR	3275782	Identifier	esc4		3275674	0					
ANR	3275783	CallExpression	strdup ( escapeGahpString ( keyname ) )		3275674	1					
ANR	3275784	Callee	strdup		3275674	0					
ANR	3275785	Identifier	strdup		3275674	0					
ANR	3275786	ArgumentList	escapeGahpString ( keyname )		3275674	1					
ANR	3275787	Argument	escapeGahpString ( keyname )		3275674	0					
ANR	3275788	CallExpression	escapeGahpString ( keyname )		3275674	0					
ANR	3275789	Callee	escapeGahpString		3275674	0					
ANR	3275790	Identifier	escapeGahpString		3275674	0					
ANR	3275791	ArgumentList	keyname		3275674	1					
ANR	3275792	Argument	keyname		3275674	0					
ANR	3275793	Identifier	keyname		3275674	0					
ANR	3275794	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 ) ;"	6862:1:185992:186055	3275674	9	True				
ANR	3275795	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3275674	0					
ANR	3275796	IdentifierDeclType	int		3275674	0					
ANR	3275797	Identifier	x		3275674	1					
ANR	3275798	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3275674	2		=			
ANR	3275799	Identifier	x		3275674	0					
ANR	3275800	CallExpression	"sprintf ( reqline , ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3275674	1					
ANR	3275801	Callee	sprintf		3275674	0					
ANR	3275802	Identifier	sprintf		3275674	0					
ANR	3275803	ArgumentList	reqline		3275674	1					
ANR	3275804	Argument	reqline		3275674	0					
ANR	3275805	Identifier	reqline		3275674	0					
ANR	3275806	Argument	"""%s %s %s %s"""		3275674	1					
ANR	3275807	PrimaryExpression	"""%s %s %s %s"""		3275674	0					
ANR	3275808	Argument	esc1		3275674	2					
ANR	3275809	Identifier	esc1		3275674	0					
ANR	3275810	Argument	esc2		3275674	3					
ANR	3275811	Identifier	esc2		3275674	0					
ANR	3275812	Argument	esc3		3275674	4					
ANR	3275813	Identifier	esc3		3275674	0					
ANR	3275814	Argument	esc4		3275674	5					
ANR	3275815	Identifier	esc4		3275674	0					
ANR	3275816	ExpressionStatement	free ( esc1 )	6864:1:186060:186072	3275674	10	True				
ANR	3275817	CallExpression	free ( esc1 )		3275674	0					
ANR	3275818	Callee	free		3275674	0					
ANR	3275819	Identifier	free		3275674	0					
ANR	3275820	ArgumentList	esc1		3275674	1					
ANR	3275821	Argument	esc1		3275674	0					
ANR	3275822	Identifier	esc1		3275674	0					
ANR	3275823	ExpressionStatement	free ( esc2 )	6865:1:186075:186087	3275674	11	True				
ANR	3275824	CallExpression	free ( esc2 )		3275674	0					
ANR	3275825	Callee	free		3275674	0					
ANR	3275826	Identifier	free		3275674	0					
ANR	3275827	ArgumentList	esc2		3275674	1					
ANR	3275828	Argument	esc2		3275674	0					
ANR	3275829	Identifier	esc2		3275674	0					
ANR	3275830	ExpressionStatement	free ( esc3 )	6866:1:186090:186102	3275674	12	True				
ANR	3275831	CallExpression	free ( esc3 )		3275674	0					
ANR	3275832	Callee	free		3275674	0					
ANR	3275833	Identifier	free		3275674	0					
ANR	3275834	ArgumentList	esc3		3275674	1					
ANR	3275835	Argument	esc3		3275674	0					
ANR	3275836	Identifier	esc3		3275674	0					
ANR	3275837	ExpressionStatement	free ( esc4 )	6867:1:186105:186117	3275674	13	True				
ANR	3275838	CallExpression	free ( esc4 )		3275674	0					
ANR	3275839	Callee	free		3275674	0					
ANR	3275840	Identifier	free		3275674	0					
ANR	3275841	ArgumentList	esc4		3275674	1					
ANR	3275842	Argument	esc4		3275674	0					
ANR	3275843	Identifier	esc4		3275674	0					
ANR	3275844	ExpressionStatement	ASSERT ( x > 0 )	6869:1:186121:186136	3275674	14	True				
ANR	3275845	CallExpression	ASSERT ( x > 0 )		3275674	0					
ANR	3275846	Callee	ASSERT		3275674	0					
ANR	3275847	Identifier	ASSERT		3275674	0					
ANR	3275848	ArgumentList	x > 0		3275674	1					
ANR	3275849	Argument	x > 0		3275674	0					
ANR	3275850	RelationalExpression	x > 0		3275674	0		>			
ANR	3275851	Identifier	x		3275674	0					
ANR	3275852	PrimaryExpression	0		3275674	1					
ANR	3275853	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6871:1:186141:186174	3275674	15	True				
ANR	3275854	IdentifierDecl	* buf = reqline . c_str ( )		3275674	0					
ANR	3275855	IdentifierDeclType	const char *		3275674	0					
ANR	3275856	Identifier	buf		3275674	1					
ANR	3275857	AssignmentExpression	* buf = reqline . c_str ( )		3275674	2		=			
ANR	3275858	Identifier	buf		3275674	0					
ANR	3275859	CallExpression	reqline . c_str ( )		3275674	1					
ANR	3275860	Callee	reqline . c_str		3275674	0					
ANR	3275861	MemberAccess	reqline . c_str		3275674	0					
ANR	3275862	Identifier	reqline		3275674	0					
ANR	3275863	Identifier	c_str		3275674	1					
ANR	3275864	ArgumentList			3275674	1					
ANR	3275865	IfStatement	"if ( ! is_pending ( command , buf ) )"		3275674	16					
ANR	3275866	Condition	"! is_pending ( command , buf )"	6874:6:186270:186293	3275674	0	True				
ANR	3275867	UnaryOperationExpression	"! is_pending ( command , buf )"		3275674	0					
ANR	3275868	UnaryOperator	!		3275674	0					
ANR	3275869	CallExpression	"is_pending ( command , buf )"		3275674	1					
ANR	3275870	Callee	is_pending		3275674	0					
ANR	3275871	Identifier	is_pending		3275674	0					
ANR	3275872	ArgumentList	command		3275674	1					
ANR	3275873	Argument	command		3275674	0					
ANR	3275874	Identifier	command		3275674	0					
ANR	3275875	Argument	buf		3275674	1					
ANR	3275876	Identifier	buf		3275674	0					
ANR	3275877	CompoundStatement		36:33:1099:1099	3275674	1					
ANR	3275878	IfStatement	if ( m_mode == results_only )		3275674	0					
ANR	3275879	Condition	m_mode == results_only	6876:7:186397:186418	3275674	0	True				
ANR	3275880	EqualityExpression	m_mode == results_only		3275674	0		==			
ANR	3275881	Identifier	m_mode		3275674	0					
ANR	3275882	Identifier	results_only		3275674	1					
ANR	3275883	CompoundStatement		38:32:1224:1224	3275674	1					
ANR	3275884	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6877:3:186427:186466	3275674	0	True				
ANR	3275885	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3275674	0					
ANR	3275886	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	6879:2:186474:186512	3275674	1	True				
ANR	3275887	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3275674	0					
ANR	3275888	Callee	now_pending		3275674	0					
ANR	3275889	Identifier	now_pending		3275674	0					
ANR	3275890	ArgumentList	command		3275674	1					
ANR	3275891	Argument	command		3275674	0					
ANR	3275892	Identifier	command		3275674	0					
ANR	3275893	Argument	buf		3275674	1					
ANR	3275894	Identifier	buf		3275674	0					
ANR	3275895	Argument	deleg_proxy		3275674	2					
ANR	3275896	Identifier	deleg_proxy		3275674	0					
ANR	3275897	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6885:1:186603:186655	3275674	17	True				
ANR	3275898	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3275674	0					
ANR	3275899	IdentifierDeclType	Gahp_Args *		3275674	0					
ANR	3275900	Identifier	result		3275674	1					
ANR	3275901	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3275674	2		=			
ANR	3275902	Identifier	result		3275674	0					
ANR	3275903	CallExpression	"get_pending_result ( command , buf )"		3275674	1					
ANR	3275904	Callee	get_pending_result		3275674	0					
ANR	3275905	Identifier	get_pending_result		3275674	0					
ANR	3275906	ArgumentList	command		3275674	1					
ANR	3275907	Argument	command		3275674	0					
ANR	3275908	Identifier	command		3275674	0					
ANR	3275909	Argument	buf		3275674	1					
ANR	3275910	Identifier	buf		3275674	0					
ANR	3275911	IfStatement	if ( result )		3275674	18					
ANR	3275912	Condition	result	6892:6:186766:186771	3275674	0	True				
ANR	3275913	Identifier	result		3275674	0					
ANR	3275914	CompoundStatement		56:2:1604:1614	3275674	1					
ANR	3275915	IdentifierDeclStatement	int rc = 0 ;	6894:2:186802:186812	3275674	0	True				
ANR	3275916	IdentifierDecl	rc = 0		3275674	0					
ANR	3275917	IdentifierDeclType	int		3275674	0					
ANR	3275918	Identifier	rc		3275674	1					
ANR	3275919	AssignmentExpression	rc = 0		3275674	2		=			
ANR	3275920	Identifier	rc		3275674	0					
ANR	3275921	PrimaryExpression	0		3275674	1					
ANR	3275922	IfStatement	if ( result -> argc == 2 )		3275674	1					
ANR	3275923	Condition	result -> argc == 2	6895:6:186820:186836	3275674	0	True				
ANR	3275924	EqualityExpression	result -> argc == 2		3275674	0		==			
ANR	3275925	PtrMemberAccess	result -> argc		3275674	0					
ANR	3275926	Identifier	result		3275674	0					
ANR	3275927	Identifier	argc		3275674	1					
ANR	3275928	PrimaryExpression	2		3275674	1					
ANR	3275929	CompoundStatement		57:25:1641:1641	3275674	1					
ANR	3275930	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6896:3:186844:186870	3275674	0	True				
ANR	3275931	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3275674	0		=			
ANR	3275932	Identifier	rc		3275674	0					
ANR	3275933	CallExpression	atoi ( result -> argv [ 1 ] )		3275674	1					
ANR	3275934	Callee	atoi		3275674	0					
ANR	3275935	Identifier	atoi		3275674	0					
ANR	3275936	ArgumentList	result -> argv [ 1 ]		3275674	1					
ANR	3275937	Argument	result -> argv [ 1 ]		3275674	0					
ANR	3275938	ArrayIndexing	result -> argv [ 1 ]		3275674	0					
ANR	3275939	PtrMemberAccess	result -> argv		3275674	0					
ANR	3275940	Identifier	result		3275674	0					
ANR	3275941	Identifier	argv		3275674	1					
ANR	3275942	PrimaryExpression	1		3275674	1					
ANR	3275943	IfStatement	if ( rc == 1 )		3275674	1					
ANR	3275944	Condition	rc == 1	6897:7:186879:186885	3275674	0	True				
ANR	3275945	EqualityExpression	rc == 1		3275674	0		==			
ANR	3275946	Identifier	rc		3275674	0					
ANR	3275947	PrimaryExpression	1		3275674	1					
ANR	3275948	CompoundStatement		59:16:1690:1690	3275674	1					
ANR	3275949	ExpressionStatement	"error_string = """""	6898:4:186894:186911	3275674	0	True				
ANR	3275950	AssignmentExpression	"error_string = """""		3275674	0		=			
ANR	3275951	Identifier	error_string		3275674	0					
ANR	3275952	PrimaryExpression	""""""		3275674	1					
ANR	3275953	ElseStatement	else		3275674	0					
ANR	3275954	IfStatement	if ( result -> argc == 4 )		3275674	0					
ANR	3275955	Condition	result -> argc == 4	6901:12:186935:186951	3275674	0	True				
ANR	3275956	EqualityExpression	result -> argc == 4		3275674	0		==			
ANR	3275957	PtrMemberAccess	result -> argc		3275674	0					
ANR	3275958	Identifier	result		3275674	0					
ANR	3275959	Identifier	argc		3275674	1					
ANR	3275960	PrimaryExpression	4		3275674	1					
ANR	3275961	CompoundStatement		63:32:1757:1757	3275674	1					
ANR	3275962	ExpressionStatement	rc = atoi ( result -> argv [ 1 ] )	6902:3:186960:186988	3275674	0	True				
ANR	3275963	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3275674	0		=			
ANR	3275964	Identifier	rc		3275674	0					
ANR	3275965	CallExpression	atoi ( result -> argv [ 1 ] )		3275674	1					
ANR	3275966	Callee	atoi		3275674	0					
ANR	3275967	Identifier	atoi		3275674	0					
ANR	3275968	ArgumentList	result -> argv [ 1 ]		3275674	1					
ANR	3275969	Argument	result -> argv [ 1 ]		3275674	0					
ANR	3275970	ArrayIndexing	result -> argv [ 1 ]		3275674	0					
ANR	3275971	PtrMemberAccess	result -> argv		3275674	0					
ANR	3275972	Identifier	result		3275674	0					
ANR	3275973	Identifier	argv		3275674	1					
ANR	3275974	PrimaryExpression	1		3275674	1					
ANR	3275975	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	6903:3:186993:187029	3275674	1	True				
ANR	3275976	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3275674	0		=			
ANR	3275977	Identifier	error_code		3275674	0					
ANR	3275978	CallExpression	strdup ( result -> argv [ 2 ] )		3275674	1					
ANR	3275979	Callee	strdup		3275674	0					
ANR	3275980	Identifier	strdup		3275674	0					
ANR	3275981	ArgumentList	result -> argv [ 2 ]		3275674	1					
ANR	3275982	Argument	result -> argv [ 2 ]		3275674	0					
ANR	3275983	ArrayIndexing	result -> argv [ 2 ]		3275674	0					
ANR	3275984	PtrMemberAccess	result -> argv		3275674	0					
ANR	3275985	Identifier	result		3275674	0					
ANR	3275986	Identifier	argv		3275674	1					
ANR	3275987	PrimaryExpression	2		3275674	1					
ANR	3275988	ExpressionStatement	error_string = result -> argv [ 3 ]	6904:3:187034:187064	3275674	2	True				
ANR	3275989	AssignmentExpression	error_string = result -> argv [ 3 ]		3275674	0		=			
ANR	3275990	Identifier	error_string		3275674	0					
ANR	3275991	ArrayIndexing	result -> argv [ 3 ]		3275674	1					
ANR	3275992	PtrMemberAccess	result -> argv		3275674	0					
ANR	3275993	Identifier	result		3275674	0					
ANR	3275994	Identifier	argv		3275674	1					
ANR	3275995	PrimaryExpression	3		3275674	1					
ANR	3275996	ElseStatement	else		3275674	0					
ANR	3275997	CompoundStatement		67:9:1877:1877	3275674	0					
ANR	3275998	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	6906:3:187080:187114	3275674	0	True				
ANR	3275999	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3275674	0					
ANR	3276000	Callee	EXCEPT		3275674	0					
ANR	3276001	Identifier	EXCEPT		3275674	0					
ANR	3276002	ArgumentList	"""Bad %s result"""		3275674	1					
ANR	3276003	Argument	"""Bad %s result"""		3275674	0					
ANR	3276004	PrimaryExpression	"""Bad %s result"""		3275674	0					
ANR	3276005	Argument	command		3275674	1					
ANR	3276006	Identifier	command		3275674	0					
ANR	3276007	Statement	delete	6909:2:187123:187128	3275674	2	True				
ANR	3276008	ExpressionStatement	result	6909:9:187130:187136	3275674	3	True				
ANR	3276009	Identifier	result		3275674	0					
ANR	3276010	ReturnStatement	return rc ;	6910:2:187140:187149	3275674	4	True				
ANR	3276011	Identifier	rc		3275674	0					
ANR	3276012	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3275674	19					
ANR	3276013	Condition	"check_pending_timeout ( command , buf )"	6914:6:187206:187240	3275674	0	True				
ANR	3276014	CallExpression	"check_pending_timeout ( command , buf )"		3275674	0					
ANR	3276015	Callee	check_pending_timeout		3275674	0					
ANR	3276016	Identifier	check_pending_timeout		3275674	0					
ANR	3276017	ArgumentList	command		3275674	1					
ANR	3276018	Argument	command		3275674	0					
ANR	3276019	Identifier	command		3275674	0					
ANR	3276020	Argument	buf		3275674	1					
ANR	3276021	Identifier	buf		3275674	0					
ANR	3276022	CompoundStatement		77:1:2048:2048	3275674	1					
ANR	3276023	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	6917:2:187282:187330	3275674	0	True				
ANR	3276024	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3275674	0					
ANR	3276025	Callee	sprintf		3275674	0					
ANR	3276026	Identifier	sprintf		3275674	0					
ANR	3276027	ArgumentList	error_string		3275674	1					
ANR	3276028	Argument	error_string		3275674	0					
ANR	3276029	Identifier	error_string		3275674	0					
ANR	3276030	Argument	"""%s timed out"""		3275674	1					
ANR	3276031	PrimaryExpression	"""%s timed out"""		3275674	0					
ANR	3276032	Argument	command		3275674	2					
ANR	3276033	Identifier	command		3275674	0					
ANR	3276034	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	6918:2:187334:187369	3275674	1	True				
ANR	3276035	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3275674	0					
ANR	3276036	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	6922:1:187428:187461	3275674	20	True				
ANR	3276037	Identifier	GAHPCLIENT_COMMAND_PENDING		3275674	0					
ANR	3276038	ReturnType	int		3275674	1					
ANR	3276039	Identifier	GahpClient :: ec2_vm_destroy_keypair		3275674	2					
ANR	3276040	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * keyname , char * & error_code"		3275674	3					
ANR	3276041	Parameter	const char * service_url	6837:40:185058:185080	3275674	0	True				
ANR	3276042	ParameterType	const char *		3275674	0					
ANR	3276043	Identifier	service_url		3275674	1					
ANR	3276044	Parameter	const char * publickeyfile	6837:65:185083:185108	3275674	1	True				
ANR	3276045	ParameterType	const char *		3275674	0					
ANR	3276046	Identifier	publickeyfile		3275674	1					
ANR	3276047	Parameter	const char * privatekeyfile	6837:93:185111:185137	3275674	2	True				
ANR	3276048	ParameterType	const char *		3275674	0					
ANR	3276049	Identifier	privatekeyfile		3275674	1					
ANR	3276050	Parameter	const char * keyname	6838:13:185154:185173	3275674	3	True				
ANR	3276051	ParameterType	const char *		3275674	0					
ANR	3276052	Identifier	keyname		3275674	1					
ANR	3276053	Parameter	char * & error_code	6838:35:185176:185193	3275674	4	True				
ANR	3276054	ParameterType	char * &		3275674	0					
ANR	3276055	Identifier	error_code		3275674	1					
ANR	3276056	CFGEntryNode	ENTRY		3275674		True				
ANR	3276057	CFGExitNode	EXIT		3275674		True				
ANR	3276058	Symbol	server -> m_commands_supported		3275674						
ANR	3276059	Symbol	server		3275674						
ANR	3276060	Symbol	escapeGahpString		3275674						
ANR	3276061	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3275674						
ANR	3276062	Symbol	* server		3275674						
ANR	3276063	Symbol	publickeyfile		3275674						
ANR	3276064	Symbol	reqline . c_str		3275674						
ANR	3276065	Symbol	results_only		3275674						
ANR	3276066	Symbol	result -> argv		3275674						
ANR	3276067	Symbol	* server -> m_commands_supported		3275674						
ANR	3276068	Symbol	sprintf		3275674						
ANR	3276069	Symbol	result		3275674						
ANR	3276070	Symbol	* result		3275674						
ANR	3276071	Symbol	server -> m_commands_supported -> contains_anycase		3275674						
ANR	3276072	Symbol	GAHPCLIENT_COMMAND_PENDING		3275674						
ANR	3276073	Symbol	reqline		3275674						
ANR	3276074	Symbol	keyname		3275674						
ANR	3276075	Symbol	m_mode		3275674						
ANR	3276076	Symbol	* result -> argv		3275674						
ANR	3276077	Symbol	atoi		3275674						
ANR	3276078	Symbol	NULL		3275674						
ANR	3276079	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3275674						
ANR	3276080	Symbol	* * result		3275674						
ANR	3276081	Symbol	command		3275674						
ANR	3276082	Symbol	esc4		3275674						
ANR	3276083	Symbol	get_pending_result		3275674						
ANR	3276084	Symbol	service_url		3275674						
ANR	3276085	Symbol	esc3		3275674						
ANR	3276086	Symbol	rc		3275674						
ANR	3276087	Symbol	error_string		3275674						
ANR	3276088	Symbol	esc2		3275674						
ANR	3276089	Symbol	buf		3275674						
ANR	3276090	Symbol	esc1		3275674						
ANR	3276091	Symbol	x		3275674						
ANR	3276092	Symbol	result -> argc		3275674						
ANR	3276093	Symbol	privatekeyfile		3275674						
ANR	3276094	Symbol	error_code		3275674						
ANR	3276095	Symbol	* * server		3275674						
ANR	3276096	Symbol	FALSE		3275674						
ANR	3276097	Symbol	strdup		3275674						
ANR	3276098	Symbol	check_pending_timeout		3275674						
ANR	3276099	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3275674						
ANR	3276100	Symbol	is_pending		3275674						
ANR	3276101	Symbol	deleg_proxy		3275674						
ANR	3276102	Function	GahpClient :: ec2_vm_vm_keypair_all	6927:0:187543:190306							
ANR	3276103	FunctionDef	"GahpClient :: ec2_vm_vm_keypair_all (const char * service_url , const char * publickeyfile , const char * privatekeyfile , StringList & returnStatus , char * & error_code)"		3276102	0					
ANR	3276104	CompoundStatement		6929:0:187722:190306	3276102	0					
ANR	3276105	Statement	static	6932:1:187827:187832	3276102	0	True				
ANR	3276106	IdentifierDeclStatement	"const char * command = ""EC2_VM_RUNNING_KEYPAIR"" ;"	6932:8:187834:187880	3276102	1	True				
ANR	3276107	IdentifierDecl	"* command = ""EC2_VM_RUNNING_KEYPAIR"""		3276102	0					
ANR	3276108	IdentifierDeclType	const char *		3276102	0					
ANR	3276109	Identifier	command		3276102	1					
ANR	3276110	AssignmentExpression	"* command = ""EC2_VM_RUNNING_KEYPAIR"""		3276102	2		=			
ANR	3276111	Identifier	command		3276102	0					
ANR	3276112	PrimaryExpression	"""EC2_VM_RUNNING_KEYPAIR"""		3276102	1					
ANR	3276113	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3276102	2					
ANR	3276114	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	6935:6:187929:187990	3276102	0	True				
ANR	3276115	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3276102	0		==			
ANR	3276116	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3276102	0					
ANR	3276117	Callee	server -> m_commands_supported -> contains_anycase		3276102	0					
ANR	3276118	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3276102	0					
ANR	3276119	PtrMemberAccess	server -> m_commands_supported		3276102	0					
ANR	3276120	Identifier	server		3276102	0					
ANR	3276121	Identifier	m_commands_supported		3276102	1					
ANR	3276122	Identifier	contains_anycase		3276102	1					
ANR	3276123	ArgumentList	command		3276102	1					
ANR	3276124	Argument	command		3276102	0					
ANR	3276125	Identifier	command		3276102	0					
ANR	3276126	Identifier	FALSE		3276102	1					
ANR	3276127	CompoundStatement		7:70:270:270	3276102	1					
ANR	3276128	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6936:2:187997:188036	3276102	0	True				
ANR	3276129	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3276102	0					
ANR	3276130	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) )		3276102	3					
ANR	3276131	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL )	6940:6:188075:188150	3276102	0	True				
ANR	3276132	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL )		3276102	0		||			
ANR	3276133	EqualityExpression	service_url == NULL		3276102	0		==			
ANR	3276134	Identifier	service_url		3276102	0					
ANR	3276135	Identifier	NULL		3276102	1					
ANR	3276136	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL )		3276102	1		||			
ANR	3276137	EqualityExpression	publickeyfile == NULL		3276102	0		==			
ANR	3276138	Identifier	publickeyfile		3276102	0					
ANR	3276139	Identifier	NULL		3276102	1					
ANR	3276140	EqualityExpression	privatekeyfile == NULL		3276102	1		==			
ANR	3276141	Identifier	privatekeyfile		3276102	0					
ANR	3276142	Identifier	NULL		3276102	1					
ANR	3276143	CompoundStatement		12:85:431:431	3276102	1					
ANR	3276144	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	6941:2:188158:188197	3276102	0	True				
ANR	3276145	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3276102	0					
ANR	3276146	IdentifierDeclStatement	std :: string reqline ;	6945:1:188231:188250	3276102	4	True				
ANR	3276147	IdentifierDecl	reqline		3276102	0					
ANR	3276148	IdentifierDeclType	std :: string		3276102	0					
ANR	3276149	Identifier	reqline		3276102	1					
ANR	3276150	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	6947:1:188255:188307	3276102	5	True				
ANR	3276151	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3276102	0					
ANR	3276152	IdentifierDeclType	char *		3276102	0					
ANR	3276153	Identifier	esc1		3276102	1					
ANR	3276154	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3276102	2		=			
ANR	3276155	Identifier	esc1		3276102	0					
ANR	3276156	CallExpression	strdup ( escapeGahpString ( service_url ) )		3276102	1					
ANR	3276157	Callee	strdup		3276102	0					
ANR	3276158	Identifier	strdup		3276102	0					
ANR	3276159	ArgumentList	escapeGahpString ( service_url )		3276102	1					
ANR	3276160	Argument	escapeGahpString ( service_url )		3276102	0					
ANR	3276161	CallExpression	escapeGahpString ( service_url )		3276102	0					
ANR	3276162	Callee	escapeGahpString		3276102	0					
ANR	3276163	Identifier	escapeGahpString		3276102	0					
ANR	3276164	ArgumentList	service_url		3276102	1					
ANR	3276165	Argument	service_url		3276102	0					
ANR	3276166	Identifier	service_url		3276102	0					
ANR	3276167	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	6948:1:188310:188364	3276102	6	True				
ANR	3276168	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3276102	0					
ANR	3276169	IdentifierDeclType	char *		3276102	0					
ANR	3276170	Identifier	esc2		3276102	1					
ANR	3276171	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3276102	2		=			
ANR	3276172	Identifier	esc2		3276102	0					
ANR	3276173	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3276102	1					
ANR	3276174	Callee	strdup		3276102	0					
ANR	3276175	Identifier	strdup		3276102	0					
ANR	3276176	ArgumentList	escapeGahpString ( publickeyfile )		3276102	1					
ANR	3276177	Argument	escapeGahpString ( publickeyfile )		3276102	0					
ANR	3276178	CallExpression	escapeGahpString ( publickeyfile )		3276102	0					
ANR	3276179	Callee	escapeGahpString		3276102	0					
ANR	3276180	Identifier	escapeGahpString		3276102	0					
ANR	3276181	ArgumentList	publickeyfile		3276102	1					
ANR	3276182	Argument	publickeyfile		3276102	0					
ANR	3276183	Identifier	publickeyfile		3276102	0					
ANR	3276184	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	6949:1:188367:188422	3276102	7	True				
ANR	3276185	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3276102	0					
ANR	3276186	IdentifierDeclType	char *		3276102	0					
ANR	3276187	Identifier	esc3		3276102	1					
ANR	3276188	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3276102	2		=			
ANR	3276189	Identifier	esc3		3276102	0					
ANR	3276190	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3276102	1					
ANR	3276191	Callee	strdup		3276102	0					
ANR	3276192	Identifier	strdup		3276102	0					
ANR	3276193	ArgumentList	escapeGahpString ( privatekeyfile )		3276102	1					
ANR	3276194	Argument	escapeGahpString ( privatekeyfile )		3276102	0					
ANR	3276195	CallExpression	escapeGahpString ( privatekeyfile )		3276102	0					
ANR	3276196	Callee	escapeGahpString		3276102	0					
ANR	3276197	Identifier	escapeGahpString		3276102	0					
ANR	3276198	ArgumentList	privatekeyfile		3276102	1					
ANR	3276199	Argument	privatekeyfile		3276102	0					
ANR	3276200	Identifier	privatekeyfile		3276102	0					
ANR	3276201	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 ) ;"	6951:1:188427:188482	3276102	8	True				
ANR	3276202	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"		3276102	0					
ANR	3276203	IdentifierDeclType	int		3276102	0					
ANR	3276204	Identifier	x		3276102	1					
ANR	3276205	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"		3276102	2		=			
ANR	3276206	Identifier	x		3276102	0					
ANR	3276207	CallExpression	"sprintf ( reqline , ""%s %s %s"" , esc1 , esc2 , esc3 )"		3276102	1					
ANR	3276208	Callee	sprintf		3276102	0					
ANR	3276209	Identifier	sprintf		3276102	0					
ANR	3276210	ArgumentList	reqline		3276102	1					
ANR	3276211	Argument	reqline		3276102	0					
ANR	3276212	Identifier	reqline		3276102	0					
ANR	3276213	Argument	"""%s %s %s"""		3276102	1					
ANR	3276214	PrimaryExpression	"""%s %s %s"""		3276102	0					
ANR	3276215	Argument	esc1		3276102	2					
ANR	3276216	Identifier	esc1		3276102	0					
ANR	3276217	Argument	esc2		3276102	3					
ANR	3276218	Identifier	esc2		3276102	0					
ANR	3276219	Argument	esc3		3276102	4					
ANR	3276220	Identifier	esc3		3276102	0					
ANR	3276221	ExpressionStatement	free ( esc1 )	6953:1:188487:188499	3276102	9	True				
ANR	3276222	CallExpression	free ( esc1 )		3276102	0					
ANR	3276223	Callee	free		3276102	0					
ANR	3276224	Identifier	free		3276102	0					
ANR	3276225	ArgumentList	esc1		3276102	1					
ANR	3276226	Argument	esc1		3276102	0					
ANR	3276227	Identifier	esc1		3276102	0					
ANR	3276228	ExpressionStatement	free ( esc2 )	6954:1:188502:188514	3276102	10	True				
ANR	3276229	CallExpression	free ( esc2 )		3276102	0					
ANR	3276230	Callee	free		3276102	0					
ANR	3276231	Identifier	free		3276102	0					
ANR	3276232	ArgumentList	esc2		3276102	1					
ANR	3276233	Argument	esc2		3276102	0					
ANR	3276234	Identifier	esc2		3276102	0					
ANR	3276235	ExpressionStatement	free ( esc3 )	6955:1:188517:188529	3276102	11	True				
ANR	3276236	CallExpression	free ( esc3 )		3276102	0					
ANR	3276237	Callee	free		3276102	0					
ANR	3276238	Identifier	free		3276102	0					
ANR	3276239	ArgumentList	esc3		3276102	1					
ANR	3276240	Argument	esc3		3276102	0					
ANR	3276241	Identifier	esc3		3276102	0					
ANR	3276242	ExpressionStatement	ASSERT ( x > 0 )	6956:1:188532:188547	3276102	12	True				
ANR	3276243	CallExpression	ASSERT ( x > 0 )		3276102	0					
ANR	3276244	Callee	ASSERT		3276102	0					
ANR	3276245	Identifier	ASSERT		3276102	0					
ANR	3276246	ArgumentList	x > 0		3276102	1					
ANR	3276247	Argument	x > 0		3276102	0					
ANR	3276248	RelationalExpression	x > 0		3276102	0		>			
ANR	3276249	Identifier	x		3276102	0					
ANR	3276250	PrimaryExpression	0		3276102	1					
ANR	3276251	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	6958:1:188552:188585	3276102	13	True				
ANR	3276252	IdentifierDecl	* buf = reqline . c_str ( )		3276102	0					
ANR	3276253	IdentifierDeclType	const char *		3276102	0					
ANR	3276254	Identifier	buf		3276102	1					
ANR	3276255	AssignmentExpression	* buf = reqline . c_str ( )		3276102	2		=			
ANR	3276256	Identifier	buf		3276102	0					
ANR	3276257	CallExpression	reqline . c_str ( )		3276102	1					
ANR	3276258	Callee	reqline . c_str		3276102	0					
ANR	3276259	MemberAccess	reqline . c_str		3276102	0					
ANR	3276260	Identifier	reqline		3276102	0					
ANR	3276261	Identifier	c_str		3276102	1					
ANR	3276262	ArgumentList			3276102	1					
ANR	3276263	IfStatement	"if ( ! is_pending ( command , buf ) )"		3276102	14					
ANR	3276264	Condition	"! is_pending ( command , buf )"	6961:6:188681:188704	3276102	0	True				
ANR	3276265	UnaryOperationExpression	"! is_pending ( command , buf )"		3276102	0					
ANR	3276266	UnaryOperator	!		3276102	0					
ANR	3276267	CallExpression	"is_pending ( command , buf )"		3276102	1					
ANR	3276268	Callee	is_pending		3276102	0					
ANR	3276269	Identifier	is_pending		3276102	0					
ANR	3276270	ArgumentList	command		3276102	1					
ANR	3276271	Argument	command		3276102	0					
ANR	3276272	Identifier	command		3276102	0					
ANR	3276273	Argument	buf		3276102	1					
ANR	3276274	Identifier	buf		3276102	0					
ANR	3276275	CompoundStatement		33:33:985:985	3276102	1					
ANR	3276276	IfStatement	if ( m_mode == results_only )		3276102	0					
ANR	3276277	Condition	m_mode == results_only	6963:7:188808:188829	3276102	0	True				
ANR	3276278	EqualityExpression	m_mode == results_only		3276102	0		==			
ANR	3276279	Identifier	m_mode		3276102	0					
ANR	3276280	Identifier	results_only		3276102	1					
ANR	3276281	CompoundStatement		35:32:1110:1110	3276102	1					
ANR	3276282	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	6964:3:188838:188877	3276102	0	True				
ANR	3276283	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3276102	0					
ANR	3276284	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	6966:2:188885:188923	3276102	1	True				
ANR	3276285	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3276102	0					
ANR	3276286	Callee	now_pending		3276102	0					
ANR	3276287	Identifier	now_pending		3276102	0					
ANR	3276288	ArgumentList	command		3276102	1					
ANR	3276289	Argument	command		3276102	0					
ANR	3276290	Identifier	command		3276102	0					
ANR	3276291	Argument	buf		3276102	1					
ANR	3276292	Identifier	buf		3276102	0					
ANR	3276293	Argument	deleg_proxy		3276102	2					
ANR	3276294	Identifier	deleg_proxy		3276102	0					
ANR	3276295	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	6972:1:189014:189066	3276102	15	True				
ANR	3276296	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3276102	0					
ANR	3276297	IdentifierDeclType	Gahp_Args *		3276102	0					
ANR	3276298	Identifier	result		3276102	1					
ANR	3276299	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3276102	2		=			
ANR	3276300	Identifier	result		3276102	0					
ANR	3276301	CallExpression	"get_pending_result ( command , buf )"		3276102	1					
ANR	3276302	Callee	get_pending_result		3276102	0					
ANR	3276303	Identifier	get_pending_result		3276102	0					
ANR	3276304	ArgumentList	command		3276102	1					
ANR	3276305	Argument	command		3276102	0					
ANR	3276306	Identifier	command		3276102	0					
ANR	3276307	Argument	buf		3276102	1					
ANR	3276308	Identifier	buf		3276102	0					
ANR	3276309	IfStatement	if ( result )		3276102	16					
ANR	3276310	Condition	result	6981:6:189332:189337	3276102	0	True				
ANR	3276311	Identifier	result		3276102	0					
ANR	3276312	CompoundStatement		55:2:1678:1708	3276102	1					
ANR	3276313	IdentifierDeclStatement	int rc = atoi ( result -> argv [ 1 ] ) ;	6983:2:189401:189431	3276102	0	True				
ANR	3276314	IdentifierDecl	rc = atoi ( result -> argv [ 1 ] )		3276102	0					
ANR	3276315	IdentifierDeclType	int		3276102	0					
ANR	3276316	Identifier	rc		3276102	1					
ANR	3276317	AssignmentExpression	rc = atoi ( result -> argv [ 1 ] )		3276102	2		=			
ANR	3276318	Identifier	rc		3276102	0					
ANR	3276319	CallExpression	atoi ( result -> argv [ 1 ] )		3276102	1					
ANR	3276320	Callee	atoi		3276102	0					
ANR	3276321	Identifier	atoi		3276102	0					
ANR	3276322	ArgumentList	result -> argv [ 1 ]		3276102	1					
ANR	3276323	Argument	result -> argv [ 1 ]		3276102	0					
ANR	3276324	ArrayIndexing	result -> argv [ 1 ]		3276102	0					
ANR	3276325	PtrMemberAccess	result -> argv		3276102	0					
ANR	3276326	Identifier	result		3276102	0					
ANR	3276327	Identifier	argv		3276102	1					
ANR	3276328	PrimaryExpression	1		3276102	1					
ANR	3276329	IfStatement	if ( rc == 1 )		3276102	1					
ANR	3276330	Condition	rc == 1	6985:6:189442:189448	3276102	0	True				
ANR	3276331	EqualityExpression	rc == 1		3276102	0		==			
ANR	3276332	Identifier	rc		3276102	0					
ANR	3276333	PrimaryExpression	1		3276102	1					
ANR	3276334	CompoundStatement		57:15:1728:1728	3276102	1					
ANR	3276335	IfStatement	if ( result -> argc == 2 )		3276102	0					
ANR	3276336	Condition	result -> argc == 2	6987:7:189464:189480	3276102	0	True				
ANR	3276337	EqualityExpression	result -> argc == 2		3276102	0		==			
ANR	3276338	PtrMemberAccess	result -> argc		3276102	0					
ANR	3276339	Identifier	result		3276102	0					
ANR	3276340	Identifier	argc		3276102	1					
ANR	3276341	PrimaryExpression	2		3276102	1					
ANR	3276342	CompoundStatement		59:26:1760:1760	3276102	1					
ANR	3276343	ExpressionStatement	"error_string = """""	6988:4:189489:189506	3276102	0	True				
ANR	3276344	AssignmentExpression	"error_string = """""		3276102	0		=			
ANR	3276345	Identifier	error_string		3276102	0					
ANR	3276346	PrimaryExpression	""""""		3276102	1					
ANR	3276347	ElseStatement	else		3276102	0					
ANR	3276348	IfStatement	if ( result -> argc == 4 )		3276102	0					
ANR	3276349	Condition	result -> argc == 4	6989:14:189522:189538	3276102	0	True				
ANR	3276350	EqualityExpression	result -> argc == 4		3276102	0		==			
ANR	3276351	PtrMemberAccess	result -> argc		3276102	0					
ANR	3276352	Identifier	result		3276102	0					
ANR	3276353	Identifier	argc		3276102	1					
ANR	3276354	PrimaryExpression	4		3276102	1					
ANR	3276355	CompoundStatement		61:33:1818:1818	3276102	1					
ANR	3276356	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	6990:4:189547:189583	3276102	0	True				
ANR	3276357	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3276102	0		=			
ANR	3276358	Identifier	error_code		3276102	0					
ANR	3276359	CallExpression	strdup ( result -> argv [ 2 ] )		3276102	1					
ANR	3276360	Callee	strdup		3276102	0					
ANR	3276361	Identifier	strdup		3276102	0					
ANR	3276362	ArgumentList	result -> argv [ 2 ]		3276102	1					
ANR	3276363	Argument	result -> argv [ 2 ]		3276102	0					
ANR	3276364	ArrayIndexing	result -> argv [ 2 ]		3276102	0					
ANR	3276365	PtrMemberAccess	result -> argv		3276102	0					
ANR	3276366	Identifier	result		3276102	0					
ANR	3276367	Identifier	argv		3276102	1					
ANR	3276368	PrimaryExpression	2		3276102	1					
ANR	3276369	ExpressionStatement	error_string = result -> argv [ 3 ]	6991:4:189589:189619	3276102	1	True				
ANR	3276370	AssignmentExpression	error_string = result -> argv [ 3 ]		3276102	0		=			
ANR	3276371	Identifier	error_string		3276102	0					
ANR	3276372	ArrayIndexing	result -> argv [ 3 ]		3276102	1					
ANR	3276373	PtrMemberAccess	result -> argv		3276102	0					
ANR	3276374	Identifier	result		3276102	0					
ANR	3276375	Identifier	argv		3276102	1					
ANR	3276376	PrimaryExpression	3		3276102	1					
ANR	3276377	ElseStatement	else		3276102	0					
ANR	3276378	CompoundStatement		64:10:1908:1908	3276102	0					
ANR	3276379	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	6993:4:189637:189668	3276102	0	True				
ANR	3276380	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3276102	0					
ANR	3276381	Callee	EXCEPT		3276102	0					
ANR	3276382	Identifier	EXCEPT		3276102	0					
ANR	3276383	ArgumentList	"""Bad %s Result"""		3276102	1					
ANR	3276384	Argument	"""Bad %s Result"""		3276102	0					
ANR	3276385	PrimaryExpression	"""Bad %s Result"""		3276102	0					
ANR	3276386	Argument	command		3276102	1					
ANR	3276387	Identifier	command		3276102	0					
ANR	3276388	ElseStatement	else		3276102	0					
ANR	3276389	CompoundStatement		68:9:1965:1965	3276102	0					
ANR	3276390	IfStatement	if ( ( ( result -> argc - 2 ) % 2 ) != 0 )		3276102	0					
ANR	3276391	Condition	( ( result -> argc - 2 ) % 2 ) != 0	6998:8:189713:189740	3276102	0	True				
ANR	3276392	EqualityExpression	( ( result -> argc - 2 ) % 2 ) != 0		3276102	0		!=			
ANR	3276393	MultiplicativeExpression	( result -> argc - 2 ) % 2		3276102	0		%			
ANR	3276394	AdditiveExpression	result -> argc - 2		3276102	0		-			
ANR	3276395	PtrMemberAccess	result -> argc		3276102	0					
ANR	3276396	Identifier	result		3276102	0					
ANR	3276397	Identifier	argc		3276102	1					
ANR	3276398	PrimaryExpression	2		3276102	1					
ANR	3276399	PrimaryExpression	2		3276102	1					
ANR	3276400	PrimaryExpression	0		3276102	1					
ANR	3276401	CompoundStatement		70:39:2021:2021	3276102	1					
ANR	3276402	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	6999:4:189750:189781	3276102	0	True				
ANR	3276403	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3276102	0					
ANR	3276404	Callee	EXCEPT		3276102	0					
ANR	3276405	Identifier	EXCEPT		3276102	0					
ANR	3276406	ArgumentList	"""Bad %s Result"""		3276102	1					
ANR	3276407	Argument	"""Bad %s Result"""		3276102	0					
ANR	3276408	PrimaryExpression	"""Bad %s Result"""		3276102	0					
ANR	3276409	Argument	command		3276102	1					
ANR	3276410	Identifier	command		3276102	0					
ANR	3276411	ElseStatement	else		3276102	0					
ANR	3276412	CompoundStatement		72:10:2070:2070	3276102	0					
ANR	3276413	ForStatement	for ( int i = 2 ; i < result -> argc ; i ++ )		3276102	0					
ANR	3276414	ForInit	int i = 2 ;	7002:9:189831:189838	3276102	0	True				
ANR	3276415	IdentifierDeclStatement	int i = 2 ;		3276102	0					
ANR	3276416	IdentifierDecl	i = 2		3276102	0					
ANR	3276417	IdentifierDeclType	int		3276102	0					
ANR	3276418	Identifier	i		3276102	1					
ANR	3276419	AssignmentExpression	i = 2		3276102	2		=			
ANR	3276420	Identifier	i		3276102	0					
ANR	3276421	PrimaryExpression	2		3276102	1					
ANR	3276422	Condition	i < result -> argc	7002:18:189840:189853	3276102	1	True				
ANR	3276423	RelationalExpression	i < result -> argc		3276102	0		<			
ANR	3276424	Identifier	i		3276102	0					
ANR	3276425	PtrMemberAccess	result -> argc		3276102	1					
ANR	3276426	Identifier	result		3276102	0					
ANR	3276427	Identifier	argc		3276102	1					
ANR	3276428	PostIncDecOperationExpression	i ++	7002:34:189856:189858	3276102	2	True				
ANR	3276429	Identifier	i		3276102	0					
ANR	3276430	IncDec	++		3276102	1					
ANR	3276431	CompoundStatement		74:39:2138:2138	3276102	3					
ANR	3276432	ExpressionStatement	returnStatus . append ( strdup ( result -> argv [ i ] ) )	7003:5:189868:189914	3276102	0	True				
ANR	3276433	CallExpression	returnStatus . append ( strdup ( result -> argv [ i ] ) )		3276102	0					
ANR	3276434	Callee	returnStatus . append		3276102	0					
ANR	3276435	MemberAccess	returnStatus . append		3276102	0					
ANR	3276436	Identifier	returnStatus		3276102	0					
ANR	3276437	Identifier	append		3276102	1					
ANR	3276438	ArgumentList	strdup ( result -> argv [ i ] )		3276102	1					
ANR	3276439	Argument	strdup ( result -> argv [ i ] )		3276102	0					
ANR	3276440	CallExpression	strdup ( result -> argv [ i ] )		3276102	0					
ANR	3276441	Callee	strdup		3276102	0					
ANR	3276442	Identifier	strdup		3276102	0					
ANR	3276443	ArgumentList	result -> argv [ i ]		3276102	1					
ANR	3276444	Argument	result -> argv [ i ]		3276102	0					
ANR	3276445	ArrayIndexing	result -> argv [ i ]		3276102	0					
ANR	3276446	PtrMemberAccess	result -> argv		3276102	0					
ANR	3276447	Identifier	result		3276102	0					
ANR	3276448	Identifier	argv		3276102	1					
ANR	3276449	Identifier	i		3276102	1					
ANR	3276450	ExpressionStatement	returnStatus . rewind ( )	7005:4:189926:189947	3276102	1	True				
ANR	3276451	CallExpression	returnStatus . rewind ( )		3276102	0					
ANR	3276452	Callee	returnStatus . rewind		3276102	0					
ANR	3276453	MemberAccess	returnStatus . rewind		3276102	0					
ANR	3276454	Identifier	returnStatus		3276102	0					
ANR	3276455	Identifier	rewind		3276102	1					
ANR	3276456	ArgumentList			3276102	1					
ANR	3276457	Statement	delete	7009:2:189965:189970	3276102	2	True				
ANR	3276458	ExpressionStatement	result	7009:9:189972:189978	3276102	3	True				
ANR	3276459	Identifier	result		3276102	0					
ANR	3276460	ReturnStatement	return rc ;	7010:2:189982:189991	3276102	4	True				
ANR	3276461	Identifier	rc		3276102	0					
ANR	3276462	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3276102	17					
ANR	3276463	Condition	"check_pending_timeout ( command , buf )"	7014:6:190047:190081	3276102	0	True				
ANR	3276464	CallExpression	"check_pending_timeout ( command , buf )"		3276102	0					
ANR	3276465	Callee	check_pending_timeout		3276102	0					
ANR	3276466	Identifier	check_pending_timeout		3276102	0					
ANR	3276467	ArgumentList	command		3276102	1					
ANR	3276468	Argument	command		3276102	0					
ANR	3276469	Identifier	command		3276102	0					
ANR	3276470	Argument	buf		3276102	1					
ANR	3276471	Identifier	buf		3276102	0					
ANR	3276472	CompoundStatement		87:1:2364:2364	3276102	1					
ANR	3276473	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7017:2:190123:190171	3276102	0	True				
ANR	3276474	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3276102	0					
ANR	3276475	Callee	sprintf		3276102	0					
ANR	3276476	Identifier	sprintf		3276102	0					
ANR	3276477	ArgumentList	error_string		3276102	1					
ANR	3276478	Argument	error_string		3276102	0					
ANR	3276479	Identifier	error_string		3276102	0					
ANR	3276480	Argument	"""%s timed out"""		3276102	1					
ANR	3276481	PrimaryExpression	"""%s timed out"""		3276102	0					
ANR	3276482	Argument	command		3276102	2					
ANR	3276483	Identifier	command		3276102	0					
ANR	3276484	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7018:2:190175:190210	3276102	1	True				
ANR	3276485	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3276102	0					
ANR	3276486	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7022:1:190269:190302	3276102	18	True				
ANR	3276487	Identifier	GAHPCLIENT_COMMAND_PENDING		3276102	0					
ANR	3276488	ReturnType	int		3276102	1					
ANR	3276489	Identifier	GahpClient :: ec2_vm_vm_keypair_all		3276102	2					
ANR	3276490	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , StringList & returnStatus , char * & error_code"		3276102	3					
ANR	3276491	Parameter	const char * service_url	6927:39:187582:187604	3276102	0	True				
ANR	3276492	ParameterType	const char *		3276102	0					
ANR	3276493	Identifier	service_url		3276102	1					
ANR	3276494	Parameter	const char * publickeyfile	6927:64:187607:187631	3276102	1	True				
ANR	3276495	ParameterType	const char *		3276102	0					
ANR	3276496	Identifier	publickeyfile		3276102	1					
ANR	3276497	Parameter	const char * privatekeyfile	6927:91:187634:187659	3276102	2	True				
ANR	3276498	ParameterType	const char *		3276102	0					
ANR	3276499	Identifier	privatekeyfile		3276102	1					
ANR	3276500	Parameter	StringList & returnStatus	6928:12:187674:187698	3276102	3	True				
ANR	3276501	ParameterType	StringList &		3276102	0					
ANR	3276502	Identifier	returnStatus		3276102	1					
ANR	3276503	Parameter	char * & error_code	6928:39:187701:187718	3276102	4	True				
ANR	3276504	ParameterType	char * &		3276102	0					
ANR	3276505	Identifier	error_code		3276102	1					
ANR	3276506	CFGEntryNode	ENTRY		3276102		True				
ANR	3276507	CFGExitNode	EXIT		3276102		True				
ANR	3276508	Symbol	server		3276102						
ANR	3276509	Symbol	server -> m_commands_supported		3276102						
ANR	3276510	Symbol	escapeGahpString		3276102						
ANR	3276511	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3276102						
ANR	3276512	Symbol	* server		3276102						
ANR	3276513	Symbol	returnStatus		3276102						
ANR	3276514	Symbol	publickeyfile		3276102						
ANR	3276515	Symbol	reqline . c_str		3276102						
ANR	3276516	Symbol	results_only		3276102						
ANR	3276517	Symbol	result -> argv		3276102						
ANR	3276518	Symbol	* server -> m_commands_supported		3276102						
ANR	3276519	Symbol	sprintf		3276102						
ANR	3276520	Symbol	result		3276102						
ANR	3276521	Symbol	* result		3276102						
ANR	3276522	Symbol	server -> m_commands_supported -> contains_anycase		3276102						
ANR	3276523	Symbol	GAHPCLIENT_COMMAND_PENDING		3276102						
ANR	3276524	Symbol	reqline		3276102						
ANR	3276525	Symbol	m_mode		3276102						
ANR	3276526	Symbol	* result -> argv		3276102						
ANR	3276527	Symbol	atoi		3276102						
ANR	3276528	Symbol	NULL		3276102						
ANR	3276529	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3276102						
ANR	3276530	Symbol	* * result		3276102						
ANR	3276531	Symbol	i		3276102						
ANR	3276532	Symbol	command		3276102						
ANR	3276533	Symbol	get_pending_result		3276102						
ANR	3276534	Symbol	service_url		3276102						
ANR	3276535	Symbol	esc3		3276102						
ANR	3276536	Symbol	rc		3276102						
ANR	3276537	Symbol	error_string		3276102						
ANR	3276538	Symbol	esc2		3276102						
ANR	3276539	Symbol	buf		3276102						
ANR	3276540	Symbol	esc1		3276102						
ANR	3276541	Symbol	* i		3276102						
ANR	3276542	Symbol	x		3276102						
ANR	3276543	Symbol	result -> argc		3276102						
ANR	3276544	Symbol	privatekeyfile		3276102						
ANR	3276545	Symbol	error_code		3276102						
ANR	3276546	Symbol	FALSE		3276102						
ANR	3276547	Symbol	* * server		3276102						
ANR	3276548	Symbol	strdup		3276102						
ANR	3276549	Symbol	check_pending_timeout		3276102						
ANR	3276550	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3276102						
ANR	3276551	Symbol	is_pending		3276102						
ANR	3276552	Symbol	deleg_proxy		3276102						
ANR	3276553	Function	GahpClient :: ec2_associate_address	7026:0:190309:193363							
ANR	3276554	FunctionDef	"GahpClient :: ec2_associate_address (const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * instance_id , const char * elastic_ip , StringList & returnStatus , char * & error_code)"		3276553	0					
ANR	3276555	CompoundStatement		7033:0:190758:193363	3276553	0					
ANR	3276556	Statement	static	7035:4:190765:190770	3276553	0	True				
ANR	3276557	IdentifierDeclStatement	"const char * command = ""EC2_VM_ASSOCIATE_ADDRESS"" ;"	7035:11:190772:190820	3276553	1	True				
ANR	3276558	IdentifierDecl	"* command = ""EC2_VM_ASSOCIATE_ADDRESS"""		3276553	0					
ANR	3276559	IdentifierDeclType	const char *		3276553	0					
ANR	3276560	Identifier	command		3276553	1					
ANR	3276561	AssignmentExpression	"* command = ""EC2_VM_ASSOCIATE_ADDRESS"""		3276553	2		=			
ANR	3276562	Identifier	command		3276553	0					
ANR	3276563	PrimaryExpression	"""EC2_VM_ASSOCIATE_ADDRESS"""		3276553	1					
ANR	3276564	IdentifierDeclStatement	int rc = 0 ;	7037:4:190827:190835	3276553	2	True				
ANR	3276565	IdentifierDecl	rc = 0		3276553	0					
ANR	3276566	IdentifierDeclType	int		3276553	0					
ANR	3276567	Identifier	rc		3276553	1					
ANR	3276568	AssignmentExpression	rc = 0		3276553	2		=			
ANR	3276569	Identifier	rc		3276553	0					
ANR	3276570	PrimaryExpression	0		3276553	1					
ANR	3276571	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3276553	3					
ANR	3276572	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7040:9:190893:190954	3276553	0	True				
ANR	3276573	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3276553	0		==			
ANR	3276574	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3276553	0					
ANR	3276575	Callee	server -> m_commands_supported -> contains_anycase		3276553	0					
ANR	3276576	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3276553	0					
ANR	3276577	PtrMemberAccess	server -> m_commands_supported		3276553	0					
ANR	3276578	Identifier	server		3276553	0					
ANR	3276579	Identifier	m_commands_supported		3276553	1					
ANR	3276580	Identifier	contains_anycase		3276553	1					
ANR	3276581	ArgumentList	command		3276553	1					
ANR	3276582	Argument	command		3276553	0					
ANR	3276583	Identifier	command		3276553	0					
ANR	3276584	Identifier	FALSE		3276553	1					
ANR	3276585	CompoundStatement		8:73:198:198	3276553	1					
ANR	3276586	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7041:8:190967:191006	3276553	0	True				
ANR	3276587	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3276553	0					
ANR	3276588	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( elastic_ip == NULL ) )		3276553	4					
ANR	3276589	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( elastic_ip == NULL )	7045:9:191053:191177	3276553	0	True				
ANR	3276590	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( elastic_ip == NULL )		3276553	0		||			
ANR	3276591	EqualityExpression	service_url == NULL		3276553	0		==			
ANR	3276592	Identifier	service_url		3276553	0					
ANR	3276593	Identifier	NULL		3276553	1					
ANR	3276594	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( elastic_ip == NULL )		3276553	1		||			
ANR	3276595	EqualityExpression	publickeyfile == NULL		3276553	0		==			
ANR	3276596	Identifier	publickeyfile		3276553	0					
ANR	3276597	Identifier	NULL		3276553	1					
ANR	3276598	OrExpression	( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( elastic_ip == NULL )		3276553	1		||			
ANR	3276599	EqualityExpression	privatekeyfile == NULL		3276553	0		==			
ANR	3276600	Identifier	privatekeyfile		3276553	0					
ANR	3276601	Identifier	NULL		3276553	1					
ANR	3276602	OrExpression	( instance_id == NULL ) || ( elastic_ip == NULL )		3276553	1		||			
ANR	3276603	EqualityExpression	instance_id == NULL		3276553	0		==			
ANR	3276604	Identifier	instance_id		3276553	0					
ANR	3276605	Identifier	NULL		3276553	1					
ANR	3276606	EqualityExpression	elastic_ip == NULL		3276553	1		==			
ANR	3276607	Identifier	elastic_ip		3276553	0					
ANR	3276608	Identifier	NULL		3276553	1					
ANR	3276609	CompoundStatement		13:137:422:422	3276553	1					
ANR	3276610	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7046:8:191191:191230	3276553	0	True				
ANR	3276611	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3276553	0					
ANR	3276612	IdentifierDeclStatement	std :: string reqline ;	7050:4:191272:191291	3276553	5	True				
ANR	3276613	IdentifierDecl	reqline		3276553	0					
ANR	3276614	IdentifierDeclType	std :: string		3276553	0					
ANR	3276615	Identifier	reqline		3276553	1					
ANR	3276616	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7052:4:191298:191350	3276553	6	True				
ANR	3276617	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3276553	0					
ANR	3276618	IdentifierDeclType	char *		3276553	0					
ANR	3276619	Identifier	esc1		3276553	1					
ANR	3276620	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3276553	2		=			
ANR	3276621	Identifier	esc1		3276553	0					
ANR	3276622	CallExpression	strdup ( escapeGahpString ( service_url ) )		3276553	1					
ANR	3276623	Callee	strdup		3276553	0					
ANR	3276624	Identifier	strdup		3276553	0					
ANR	3276625	ArgumentList	escapeGahpString ( service_url )		3276553	1					
ANR	3276626	Argument	escapeGahpString ( service_url )		3276553	0					
ANR	3276627	CallExpression	escapeGahpString ( service_url )		3276553	0					
ANR	3276628	Callee	escapeGahpString		3276553	0					
ANR	3276629	Identifier	escapeGahpString		3276553	0					
ANR	3276630	ArgumentList	service_url		3276553	1					
ANR	3276631	Argument	service_url		3276553	0					
ANR	3276632	Identifier	service_url		3276553	0					
ANR	3276633	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	7053:4:191356:191410	3276553	7	True				
ANR	3276634	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3276553	0					
ANR	3276635	IdentifierDeclType	char *		3276553	0					
ANR	3276636	Identifier	esc2		3276553	1					
ANR	3276637	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3276553	2		=			
ANR	3276638	Identifier	esc2		3276553	0					
ANR	3276639	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3276553	1					
ANR	3276640	Callee	strdup		3276553	0					
ANR	3276641	Identifier	strdup		3276553	0					
ANR	3276642	ArgumentList	escapeGahpString ( publickeyfile )		3276553	1					
ANR	3276643	Argument	escapeGahpString ( publickeyfile )		3276553	0					
ANR	3276644	CallExpression	escapeGahpString ( publickeyfile )		3276553	0					
ANR	3276645	Callee	escapeGahpString		3276553	0					
ANR	3276646	Identifier	escapeGahpString		3276553	0					
ANR	3276647	ArgumentList	publickeyfile		3276553	1					
ANR	3276648	Argument	publickeyfile		3276553	0					
ANR	3276649	Identifier	publickeyfile		3276553	0					
ANR	3276650	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	7054:4:191416:191471	3276553	8	True				
ANR	3276651	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3276553	0					
ANR	3276652	IdentifierDeclType	char *		3276553	0					
ANR	3276653	Identifier	esc3		3276553	1					
ANR	3276654	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3276553	2		=			
ANR	3276655	Identifier	esc3		3276553	0					
ANR	3276656	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3276553	1					
ANR	3276657	Callee	strdup		3276553	0					
ANR	3276658	Identifier	strdup		3276553	0					
ANR	3276659	ArgumentList	escapeGahpString ( privatekeyfile )		3276553	1					
ANR	3276660	Argument	escapeGahpString ( privatekeyfile )		3276553	0					
ANR	3276661	CallExpression	escapeGahpString ( privatekeyfile )		3276553	0					
ANR	3276662	Callee	escapeGahpString		3276553	0					
ANR	3276663	Identifier	escapeGahpString		3276553	0					
ANR	3276664	ArgumentList	privatekeyfile		3276553	1					
ANR	3276665	Argument	privatekeyfile		3276553	0					
ANR	3276666	Identifier	privatekeyfile		3276553	0					
ANR	3276667	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( instance_id ) ) ;	7055:4:191477:191529	3276553	9	True				
ANR	3276668	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3276553	0					
ANR	3276669	IdentifierDeclType	char *		3276553	0					
ANR	3276670	Identifier	esc4		3276553	1					
ANR	3276671	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3276553	2		=			
ANR	3276672	Identifier	esc4		3276553	0					
ANR	3276673	CallExpression	strdup ( escapeGahpString ( instance_id ) )		3276553	1					
ANR	3276674	Callee	strdup		3276553	0					
ANR	3276675	Identifier	strdup		3276553	0					
ANR	3276676	ArgumentList	escapeGahpString ( instance_id )		3276553	1					
ANR	3276677	Argument	escapeGahpString ( instance_id )		3276553	0					
ANR	3276678	CallExpression	escapeGahpString ( instance_id )		3276553	0					
ANR	3276679	Callee	escapeGahpString		3276553	0					
ANR	3276680	Identifier	escapeGahpString		3276553	0					
ANR	3276681	ArgumentList	instance_id		3276553	1					
ANR	3276682	Argument	instance_id		3276553	0					
ANR	3276683	Identifier	instance_id		3276553	0					
ANR	3276684	IdentifierDeclStatement	char * esc5 = strdup ( escapeGahpString ( elastic_ip ) ) ;	7056:4:191535:191586	3276553	10	True				
ANR	3276685	IdentifierDecl	* esc5 = strdup ( escapeGahpString ( elastic_ip ) )		3276553	0					
ANR	3276686	IdentifierDeclType	char *		3276553	0					
ANR	3276687	Identifier	esc5		3276553	1					
ANR	3276688	AssignmentExpression	* esc5 = strdup ( escapeGahpString ( elastic_ip ) )		3276553	2		=			
ANR	3276689	Identifier	esc5		3276553	0					
ANR	3276690	CallExpression	strdup ( escapeGahpString ( elastic_ip ) )		3276553	1					
ANR	3276691	Callee	strdup		3276553	0					
ANR	3276692	Identifier	strdup		3276553	0					
ANR	3276693	ArgumentList	escapeGahpString ( elastic_ip )		3276553	1					
ANR	3276694	Argument	escapeGahpString ( elastic_ip )		3276553	0					
ANR	3276695	CallExpression	escapeGahpString ( elastic_ip )		3276553	0					
ANR	3276696	Callee	escapeGahpString		3276553	0					
ANR	3276697	Identifier	escapeGahpString		3276553	0					
ANR	3276698	ArgumentList	elastic_ip		3276553	1					
ANR	3276699	Argument	elastic_ip		3276553	0					
ANR	3276700	Identifier	elastic_ip		3276553	0					
ANR	3276701	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 ) ;"	7058:4:191597:191670	3276553	11	True				
ANR	3276702	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3276553	0					
ANR	3276703	IdentifierDeclType	int		3276553	0					
ANR	3276704	Identifier	x		3276553	1					
ANR	3276705	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3276553	2		=			
ANR	3276706	Identifier	x		3276553	0					
ANR	3276707	CallExpression	"sprintf ( reqline , ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3276553	1					
ANR	3276708	Callee	sprintf		3276553	0					
ANR	3276709	Identifier	sprintf		3276553	0					
ANR	3276710	ArgumentList	reqline		3276553	1					
ANR	3276711	Argument	reqline		3276553	0					
ANR	3276712	Identifier	reqline		3276553	0					
ANR	3276713	Argument	"""%s %s %s %s %s"""		3276553	1					
ANR	3276714	PrimaryExpression	"""%s %s %s %s %s"""		3276553	0					
ANR	3276715	Argument	esc1		3276553	2					
ANR	3276716	Identifier	esc1		3276553	0					
ANR	3276717	Argument	esc2		3276553	3					
ANR	3276718	Identifier	esc2		3276553	0					
ANR	3276719	Argument	esc3		3276553	4					
ANR	3276720	Identifier	esc3		3276553	0					
ANR	3276721	Argument	esc4		3276553	5					
ANR	3276722	Identifier	esc4		3276553	0					
ANR	3276723	Argument	esc5		3276553	6					
ANR	3276724	Identifier	esc5		3276553	0					
ANR	3276725	ExpressionStatement	free ( esc1 )	7060:4:191681:191693	3276553	12	True				
ANR	3276726	CallExpression	free ( esc1 )		3276553	0					
ANR	3276727	Callee	free		3276553	0					
ANR	3276728	Identifier	free		3276553	0					
ANR	3276729	ArgumentList	esc1		3276553	1					
ANR	3276730	Argument	esc1		3276553	0					
ANR	3276731	Identifier	esc1		3276553	0					
ANR	3276732	ExpressionStatement	free ( esc2 )	7061:4:191699:191711	3276553	13	True				
ANR	3276733	CallExpression	free ( esc2 )		3276553	0					
ANR	3276734	Callee	free		3276553	0					
ANR	3276735	Identifier	free		3276553	0					
ANR	3276736	ArgumentList	esc2		3276553	1					
ANR	3276737	Argument	esc2		3276553	0					
ANR	3276738	Identifier	esc2		3276553	0					
ANR	3276739	ExpressionStatement	free ( esc3 )	7062:4:191717:191729	3276553	14	True				
ANR	3276740	CallExpression	free ( esc3 )		3276553	0					
ANR	3276741	Callee	free		3276553	0					
ANR	3276742	Identifier	free		3276553	0					
ANR	3276743	ArgumentList	esc3		3276553	1					
ANR	3276744	Argument	esc3		3276553	0					
ANR	3276745	Identifier	esc3		3276553	0					
ANR	3276746	ExpressionStatement	free ( esc4 )	7063:4:191735:191747	3276553	15	True				
ANR	3276747	CallExpression	free ( esc4 )		3276553	0					
ANR	3276748	Callee	free		3276553	0					
ANR	3276749	Identifier	free		3276553	0					
ANR	3276750	ArgumentList	esc4		3276553	1					
ANR	3276751	Argument	esc4		3276553	0					
ANR	3276752	Identifier	esc4		3276553	0					
ANR	3276753	ExpressionStatement	free ( esc5 )	7064:4:191753:191765	3276553	16	True				
ANR	3276754	CallExpression	free ( esc5 )		3276553	0					
ANR	3276755	Callee	free		3276553	0					
ANR	3276756	Identifier	free		3276553	0					
ANR	3276757	ArgumentList	esc5		3276553	1					
ANR	3276758	Argument	esc5		3276553	0					
ANR	3276759	Identifier	esc5		3276553	0					
ANR	3276760	ExpressionStatement	ASSERT ( x > 0 )	7065:4:191771:191786	3276553	17	True				
ANR	3276761	CallExpression	ASSERT ( x > 0 )		3276553	0					
ANR	3276762	Callee	ASSERT		3276553	0					
ANR	3276763	Identifier	ASSERT		3276553	0					
ANR	3276764	ArgumentList	x > 0		3276553	1					
ANR	3276765	Argument	x > 0		3276553	0					
ANR	3276766	RelationalExpression	x > 0		3276553	0		>			
ANR	3276767	Identifier	x		3276553	0					
ANR	3276768	PrimaryExpression	0		3276553	1					
ANR	3276769	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	7067:4:191797:191830	3276553	18	True				
ANR	3276770	IdentifierDecl	* buf = reqline . c_str ( )		3276553	0					
ANR	3276771	IdentifierDeclType	const char *		3276553	0					
ANR	3276772	Identifier	buf		3276553	1					
ANR	3276773	AssignmentExpression	* buf = reqline . c_str ( )		3276553	2		=			
ANR	3276774	Identifier	buf		3276553	0					
ANR	3276775	CallExpression	reqline . c_str ( )		3276553	1					
ANR	3276776	Callee	reqline . c_str		3276553	0					
ANR	3276777	MemberAccess	reqline . c_str		3276553	0					
ANR	3276778	Identifier	reqline		3276553	0					
ANR	3276779	Identifier	c_str		3276553	1					
ANR	3276780	ArgumentList			3276553	1					
ANR	3276781	IfStatement	"if ( ! is_pending ( command , buf ) )"		3276553	19					
ANR	3276782	Condition	"! is_pending ( command , buf )"	7070:9:191938:191961	3276553	0	True				
ANR	3276783	UnaryOperationExpression	"! is_pending ( command , buf )"		3276553	0					
ANR	3276784	UnaryOperator	!		3276553	0					
ANR	3276785	CallExpression	"is_pending ( command , buf )"		3276553	1					
ANR	3276786	Callee	is_pending		3276553	0					
ANR	3276787	Identifier	is_pending		3276553	0					
ANR	3276788	ArgumentList	command		3276553	1					
ANR	3276789	Argument	command		3276553	0					
ANR	3276790	Identifier	command		3276553	0					
ANR	3276791	Argument	buf		3276553	1					
ANR	3276792	Identifier	buf		3276553	0					
ANR	3276793	CompoundStatement		38:36:1206:1206	3276553	1					
ANR	3276794	IfStatement	if ( m_mode == results_only )		3276553	0					
ANR	3276795	Condition	m_mode == results_only	7072:13:192077:192098	3276553	0	True				
ANR	3276796	EqualityExpression	m_mode == results_only		3276553	0		==			
ANR	3276797	Identifier	m_mode		3276553	0					
ANR	3276798	Identifier	results_only		3276553	1					
ANR	3276799	CompoundStatement		40:38:1343:1343	3276553	1					
ANR	3276800	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7073:12:192116:192155	3276553	0	True				
ANR	3276801	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3276553	0					
ANR	3276802	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7075:8:192175:192213	3276553	1	True				
ANR	3276803	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3276553	0					
ANR	3276804	Callee	now_pending		3276553	0					
ANR	3276805	Identifier	now_pending		3276553	0					
ANR	3276806	ArgumentList	command		3276553	1					
ANR	3276807	Argument	command		3276553	0					
ANR	3276808	Identifier	command		3276553	0					
ANR	3276809	Argument	buf		3276553	1					
ANR	3276810	Identifier	buf		3276553	0					
ANR	3276811	Argument	deleg_proxy		3276553	2					
ANR	3276812	Identifier	deleg_proxy		3276553	0					
ANR	3276813	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7081:4:192319:192371	3276553	20	True				
ANR	3276814	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3276553	0					
ANR	3276815	IdentifierDeclType	Gahp_Args *		3276553	0					
ANR	3276816	Identifier	result		3276553	1					
ANR	3276817	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3276553	2		=			
ANR	3276818	Identifier	result		3276553	0					
ANR	3276819	CallExpression	"get_pending_result ( command , buf )"		3276553	1					
ANR	3276820	Callee	get_pending_result		3276553	0					
ANR	3276821	Identifier	get_pending_result		3276553	0					
ANR	3276822	ArgumentList	command		3276553	1					
ANR	3276823	Argument	command		3276553	0					
ANR	3276824	Identifier	command		3276553	0					
ANR	3276825	Argument	buf		3276553	1					
ANR	3276826	Identifier	buf		3276553	0					
ANR	3276827	IfStatement	if ( result )		3276553	21					
ANR	3276828	Condition	result	7083:9:192383:192388	3276553	0	True				
ANR	3276829	Identifier	result		3276553	0					
ANR	3276830	CompoundStatement		53:8:1705:1744	3276553	1					
ANR	3276831	IdentifierDeclStatement	int return_code = atoi ( result -> argv [ 1 ] ) ;	7085:8:192464:192503	3276553	0	True				
ANR	3276832	IdentifierDecl	return_code = atoi ( result -> argv [ 1 ] )		3276553	0					
ANR	3276833	IdentifierDeclType	int		3276553	0					
ANR	3276834	Identifier	return_code		3276553	1					
ANR	3276835	AssignmentExpression	return_code = atoi ( result -> argv [ 1 ] )		3276553	2		=			
ANR	3276836	Identifier	return_code		3276553	0					
ANR	3276837	CallExpression	atoi ( result -> argv [ 1 ] )		3276553	1					
ANR	3276838	Callee	atoi		3276553	0					
ANR	3276839	Identifier	atoi		3276553	0					
ANR	3276840	ArgumentList	result -> argv [ 1 ]		3276553	1					
ANR	3276841	Argument	result -> argv [ 1 ]		3276553	0					
ANR	3276842	ArrayIndexing	result -> argv [ 1 ]		3276553	0					
ANR	3276843	PtrMemberAccess	result -> argv		3276553	0					
ANR	3276844	Identifier	result		3276553	0					
ANR	3276845	Identifier	argv		3276553	1					
ANR	3276846	PrimaryExpression	1		3276553	1					
ANR	3276847	IfStatement	if ( return_code == 1 )		3276553	1					
ANR	3276848	Condition	return_code == 1	7087:12:192526:192541	3276553	0	True				
ANR	3276849	EqualityExpression	return_code == 1		3276553	0		==			
ANR	3276850	Identifier	return_code		3276553	0					
ANR	3276851	PrimaryExpression	1		3276553	1					
ANR	3276852	CompoundStatement		55:30:1785:1785	3276553	1					
ANR	3276853	IfStatement	if ( result -> argc == 2 )		3276553	0					
ANR	3276854	Condition	result -> argc == 2	7089:16:192575:192591	3276553	0	True				
ANR	3276855	EqualityExpression	result -> argc == 2		3276553	0		==			
ANR	3276856	PtrMemberAccess	result -> argc		3276553	0					
ANR	3276857	Identifier	result		3276553	0					
ANR	3276858	Identifier	argc		3276553	1					
ANR	3276859	PrimaryExpression	2		3276553	1					
ANR	3276860	CompoundStatement		57:35:1835:1835	3276553	1					
ANR	3276861	ExpressionStatement	"error_string = """""	7090:16:192612:192629	3276553	0	True				
ANR	3276862	AssignmentExpression	"error_string = """""		3276553	0		=			
ANR	3276863	Identifier	error_string		3276553	0					
ANR	3276864	PrimaryExpression	""""""		3276553	1					
ANR	3276865	ElseStatement	else		3276553	0					
ANR	3276866	IfStatement	if ( result -> argc == 4 )		3276553	0					
ANR	3276867	Condition	result -> argc == 4	7091:23:192654:192670	3276553	0	True				
ANR	3276868	EqualityExpression	result -> argc == 4		3276553	0		==			
ANR	3276869	PtrMemberAccess	result -> argc		3276553	0					
ANR	3276870	Identifier	result		3276553	0					
ANR	3276871	Identifier	argc		3276553	1					
ANR	3276872	PrimaryExpression	4		3276553	1					
ANR	3276873	CompoundStatement		59:42:1914:1914	3276553	1					
ANR	3276874	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	7092:16:192691:192727	3276553	0	True				
ANR	3276875	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3276553	0		=			
ANR	3276876	Identifier	error_code		3276553	0					
ANR	3276877	CallExpression	strdup ( result -> argv [ 2 ] )		3276553	1					
ANR	3276878	Callee	strdup		3276553	0					
ANR	3276879	Identifier	strdup		3276553	0					
ANR	3276880	ArgumentList	result -> argv [ 2 ]		3276553	1					
ANR	3276881	Argument	result -> argv [ 2 ]		3276553	0					
ANR	3276882	ArrayIndexing	result -> argv [ 2 ]		3276553	0					
ANR	3276883	PtrMemberAccess	result -> argv		3276553	0					
ANR	3276884	Identifier	result		3276553	0					
ANR	3276885	Identifier	argv		3276553	1					
ANR	3276886	PrimaryExpression	2		3276553	1					
ANR	3276887	ExpressionStatement	error_string = result -> argv [ 3 ]	7093:16:192745:192775	3276553	1	True				
ANR	3276888	AssignmentExpression	error_string = result -> argv [ 3 ]		3276553	0		=			
ANR	3276889	Identifier	error_string		3276553	0					
ANR	3276890	ArrayIndexing	result -> argv [ 3 ]		3276553	1					
ANR	3276891	PtrMemberAccess	result -> argv		3276553	0					
ANR	3276892	Identifier	result		3276553	0					
ANR	3276893	Identifier	argv		3276553	1					
ANR	3276894	PrimaryExpression	3		3276553	1					
ANR	3276895	ElseStatement	else		3276553	0					
ANR	3276896	CompoundStatement		62:19:2037:2037	3276553	0					
ANR	3276897	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	7095:16:192814:192845	3276553	0	True				
ANR	3276898	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3276553	0					
ANR	3276899	Callee	EXCEPT		3276553	0					
ANR	3276900	Identifier	EXCEPT		3276553	0					
ANR	3276901	ArgumentList	"""Bad %s Result"""		3276553	1					
ANR	3276902	Argument	"""Bad %s Result"""		3276553	0					
ANR	3276903	PrimaryExpression	"""Bad %s Result"""		3276553	0					
ANR	3276904	Argument	command		3276553	1					
ANR	3276905	Identifier	command		3276553	0					
ANR	3276906	ElseStatement	else		3276553	0					
ANR	3276907	CompoundStatement		66:15:2130:2130	3276553	0					
ANR	3276908	IfStatement	if ( ( ( result -> argc - 2 ) % 2 ) != 0 )		3276553	0					
ANR	3276909	Condition	( ( result -> argc - 2 ) % 2 ) != 0	7100:17:192944:192971	3276553	0	True				
ANR	3276910	EqualityExpression	( ( result -> argc - 2 ) % 2 ) != 0		3276553	0		!=			
ANR	3276911	MultiplicativeExpression	( result -> argc - 2 ) % 2		3276553	0		%			
ANR	3276912	AdditiveExpression	result -> argc - 2		3276553	0		-			
ANR	3276913	PtrMemberAccess	result -> argc		3276553	0					
ANR	3276914	Identifier	result		3276553	0					
ANR	3276915	Identifier	argc		3276553	1					
ANR	3276916	PrimaryExpression	2		3276553	1					
ANR	3276917	PrimaryExpression	2		3276553	1					
ANR	3276918	PrimaryExpression	0		3276553	1					
ANR	3276919	CompoundStatement		68:48:2216:2216	3276553	1					
ANR	3276920	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	7101:16:192993:193024	3276553	0	True				
ANR	3276921	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3276553	0					
ANR	3276922	Callee	EXCEPT		3276553	0					
ANR	3276923	Identifier	EXCEPT		3276553	0					
ANR	3276924	ArgumentList	"""Bad %s Result"""		3276553	1					
ANR	3276925	Argument	"""Bad %s Result"""		3276553	0					
ANR	3276926	PrimaryExpression	"""Bad %s Result"""		3276553	0					
ANR	3276927	Argument	command		3276553	1					
ANR	3276928	Identifier	command		3276553	0					
ANR	3276929	ElseStatement	else		3276553	0					
ANR	3276930	CompoundStatement		70:19:2286:2286	3276553	0					
ANR	3276931	ForStatement	for ( int i = 2 ; i < result -> argc ; i ++ )		3276553	0					
ANR	3276932	ForInit	int i = 2 ;	7104:21:193107:193114	3276553	0	True				
ANR	3276933	IdentifierDeclStatement	int i = 2 ;		3276553	0					
ANR	3276934	IdentifierDecl	i = 2		3276553	0					
ANR	3276935	IdentifierDeclType	int		3276553	0					
ANR	3276936	Identifier	i		3276553	1					
ANR	3276937	AssignmentExpression	i = 2		3276553	2		=			
ANR	3276938	Identifier	i		3276553	0					
ANR	3276939	PrimaryExpression	2		3276553	1					
ANR	3276940	Condition	i < result -> argc	7104:30:193116:193129	3276553	1	True				
ANR	3276941	RelationalExpression	i < result -> argc		3276553	0		<			
ANR	3276942	Identifier	i		3276553	0					
ANR	3276943	PtrMemberAccess	result -> argc		3276553	1					
ANR	3276944	Identifier	result		3276553	0					
ANR	3276945	Identifier	argc		3276553	1					
ANR	3276946	PostIncDecOperationExpression	i ++	7104:46:193132:193134	3276553	2	True				
ANR	3276947	Identifier	i		3276553	0					
ANR	3276948	IncDec	++		3276553	1					
ANR	3276949	CompoundStatement		72:51:2378:2378	3276553	3					
ANR	3276950	ExpressionStatement	returnStatus . append ( strdup ( result -> argv [ i ] ) )	7105:20:193159:193205	3276553	0	True				
ANR	3276951	CallExpression	returnStatus . append ( strdup ( result -> argv [ i ] ) )		3276553	0					
ANR	3276952	Callee	returnStatus . append		3276553	0					
ANR	3276953	MemberAccess	returnStatus . append		3276553	0					
ANR	3276954	Identifier	returnStatus		3276553	0					
ANR	3276955	Identifier	append		3276553	1					
ANR	3276956	ArgumentList	strdup ( result -> argv [ i ] )		3276553	1					
ANR	3276957	Argument	strdup ( result -> argv [ i ] )		3276553	0					
ANR	3276958	CallExpression	strdup ( result -> argv [ i ] )		3276553	0					
ANR	3276959	Callee	strdup		3276553	0					
ANR	3276960	Identifier	strdup		3276553	0					
ANR	3276961	ArgumentList	result -> argv [ i ]		3276553	1					
ANR	3276962	Argument	result -> argv [ i ]		3276553	0					
ANR	3276963	ArrayIndexing	result -> argv [ i ]		3276553	0					
ANR	3276964	PtrMemberAccess	result -> argv		3276553	0					
ANR	3276965	Identifier	result		3276553	0					
ANR	3276966	Identifier	argv		3276553	1					
ANR	3276967	Identifier	i		3276553	1					
ANR	3276968	ExpressionStatement	returnStatus . rewind ( )	7107:16:193241:193262	3276553	1	True				
ANR	3276969	CallExpression	returnStatus . rewind ( )		3276553	0					
ANR	3276970	Callee	returnStatus . rewind		3276553	0					
ANR	3276971	MemberAccess	returnStatus . rewind		3276553	0					
ANR	3276972	Identifier	returnStatus		3276553	0					
ANR	3276973	Identifier	rewind		3276553	1					
ANR	3276974	ArgumentList			3276553	1					
ANR	3276975	Statement	delete	7111:8:193312:193317	3276553	2	True				
ANR	3276976	ExpressionStatement	result	7111:15:193319:193325	3276553	3	True				
ANR	3276977	Identifier	result		3276553	0					
ANR	3276978	ReturnStatement	return rc ;	7115:4:193351:193360	3276553	22	True				
ANR	3276979	Identifier	rc		3276553	0					
ANR	3276980	ReturnType	int		3276553	1					
ANR	3276981	Identifier	GahpClient :: ec2_associate_address		3276553	2					
ANR	3276982	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * instance_id , const char * elastic_ip , StringList & returnStatus , char * & error_code"		3276553	3					
ANR	3276983	Parameter	const char * service_url	7026:38:190347:190370	3276553	0	True				
ANR	3276984	ParameterType	const char *		3276553	0					
ANR	3276985	Identifier	service_url		3276553	1					
ANR	3276986	Parameter	const char * publickeyfile	7027:38:190411:190436	3276553	1	True				
ANR	3276987	ParameterType	const char *		3276553	0					
ANR	3276988	Identifier	publickeyfile		3276553	1					
ANR	3276989	Parameter	const char * privatekeyfile	7028:38:190477:190503	3276553	2	True				
ANR	3276990	ParameterType	const char *		3276553	0					
ANR	3276991	Identifier	privatekeyfile		3276553	1					
ANR	3276992	Parameter	const char * instance_id	7029:38:190544:190567	3276553	3	True				
ANR	3276993	ParameterType	const char *		3276553	0					
ANR	3276994	Identifier	instance_id		3276553	1					
ANR	3276995	Parameter	const char * elastic_ip	7030:38:190609:190631	3276553	4	True				
ANR	3276996	ParameterType	const char *		3276553	0					
ANR	3276997	Identifier	elastic_ip		3276553	1					
ANR	3276998	Parameter	StringList & returnStatus	7031:38:190672:190696	3276553	5	True				
ANR	3276999	ParameterType	StringList &		3276553	0					
ANR	3277000	Identifier	returnStatus		3276553	1					
ANR	3277001	Parameter	char * & error_code	7032:38:190737:190754	3276553	6	True				
ANR	3277002	ParameterType	char * &		3276553	0					
ANR	3277003	Identifier	error_code		3276553	1					
ANR	3277004	CFGEntryNode	ENTRY		3276553		True				
ANR	3277005	CFGExitNode	EXIT		3276553		True				
ANR	3277006	Symbol	server		3276553						
ANR	3277007	Symbol	server -> m_commands_supported		3276553						
ANR	3277008	Symbol	escapeGahpString		3276553						
ANR	3277009	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3276553						
ANR	3277010	Symbol	* server		3276553						
ANR	3277011	Symbol	returnStatus		3276553						
ANR	3277012	Symbol	publickeyfile		3276553						
ANR	3277013	Symbol	reqline . c_str		3276553						
ANR	3277014	Symbol	results_only		3276553						
ANR	3277015	Symbol	result -> argv		3276553						
ANR	3277016	Symbol	* server -> m_commands_supported		3276553						
ANR	3277017	Symbol	esc5		3276553						
ANR	3277018	Symbol	sprintf		3276553						
ANR	3277019	Symbol	result		3276553						
ANR	3277020	Symbol	* result		3276553						
ANR	3277021	Symbol	server -> m_commands_supported -> contains_anycase		3276553						
ANR	3277022	Symbol	reqline		3276553						
ANR	3277023	Symbol	m_mode		3276553						
ANR	3277024	Symbol	* result -> argv		3276553						
ANR	3277025	Symbol	atoi		3276553						
ANR	3277026	Symbol	NULL		3276553						
ANR	3277027	Symbol	* * result		3276553						
ANR	3277028	Symbol	i		3276553						
ANR	3277029	Symbol	elastic_ip		3276553						
ANR	3277030	Symbol	command		3276553						
ANR	3277031	Symbol	esc4		3276553						
ANR	3277032	Symbol	get_pending_result		3276553						
ANR	3277033	Symbol	service_url		3276553						
ANR	3277034	Symbol	rc		3276553						
ANR	3277035	Symbol	esc3		3276553						
ANR	3277036	Symbol	error_string		3276553						
ANR	3277037	Symbol	esc2		3276553						
ANR	3277038	Symbol	buf		3276553						
ANR	3277039	Symbol	instance_id		3276553						
ANR	3277040	Symbol	esc1		3276553						
ANR	3277041	Symbol	* i		3276553						
ANR	3277042	Symbol	x		3276553						
ANR	3277043	Symbol	result -> argc		3276553						
ANR	3277044	Symbol	privatekeyfile		3276553						
ANR	3277045	Symbol	error_code		3276553						
ANR	3277046	Symbol	FALSE		3276553						
ANR	3277047	Symbol	* * server		3276553						
ANR	3277048	Symbol	strdup		3276553						
ANR	3277049	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3276553						
ANR	3277050	Symbol	return_code		3276553						
ANR	3277051	Symbol	is_pending		3276553						
ANR	3277052	Symbol	deleg_proxy		3276553						
ANR	3277053	Function	GahpClient :: ec2_attach_volume	7119:0:193366:196212							
ANR	3277054	FunctionDef	"GahpClient :: ec2_attach_volume (const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * volume_id , const char * instance_id , const char * device_id , StringList & returnStatus , char * & error_code)"		3277053	0					
ANR	3277055	CompoundStatement		7127:0:193795:196212	3277053	0					
ANR	3277056	Statement	static	7128:4:193801:193806	3277053	0	True				
ANR	3277057	IdentifierDeclStatement	"const char * command = ""EC_VM_ATTACH_VOLUME"" ;"	7128:11:193808:193851	3277053	1	True				
ANR	3277058	IdentifierDecl	"* command = ""EC_VM_ATTACH_VOLUME"""		3277053	0					
ANR	3277059	IdentifierDeclType	const char *		3277053	0					
ANR	3277060	Identifier	command		3277053	1					
ANR	3277061	AssignmentExpression	"* command = ""EC_VM_ATTACH_VOLUME"""		3277053	2		=			
ANR	3277062	Identifier	command		3277053	0					
ANR	3277063	PrimaryExpression	"""EC_VM_ATTACH_VOLUME"""		3277053	1					
ANR	3277064	IdentifierDeclStatement	int rc = 0 ;	7130:4:193858:193866	3277053	2	True				
ANR	3277065	IdentifierDecl	rc = 0		3277053	0					
ANR	3277066	IdentifierDeclType	int		3277053	0					
ANR	3277067	Identifier	rc		3277053	1					
ANR	3277068	AssignmentExpression	rc = 0		3277053	2		=			
ANR	3277069	Identifier	rc		3277053	0					
ANR	3277070	PrimaryExpression	0		3277053	1					
ANR	3277071	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3277053	3					
ANR	3277072	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7133:9:193924:193985	3277053	0	True				
ANR	3277073	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3277053	0		==			
ANR	3277074	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3277053	0					
ANR	3277075	Callee	server -> m_commands_supported -> contains_anycase		3277053	0					
ANR	3277076	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3277053	0					
ANR	3277077	PtrMemberAccess	server -> m_commands_supported		3277053	0					
ANR	3277078	Identifier	server		3277053	0					
ANR	3277079	Identifier	m_commands_supported		3277053	1					
ANR	3277080	Identifier	contains_anycase		3277053	1					
ANR	3277081	ArgumentList	command		3277053	1					
ANR	3277082	Argument	command		3277053	0					
ANR	3277083	Identifier	command		3277053	0					
ANR	3277084	Identifier	FALSE		3277053	1					
ANR	3277085	CompoundStatement		7:73:192:192	3277053	1					
ANR	3277086	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7134:8:193998:194037	3277053	0	True				
ANR	3277087	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3277053	0					
ANR	3277088	IfStatement	if ( ( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( volume_id == NULL ) || ( device_id == NULL ) )		3277053	4					
ANR	3277089	Condition	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( volume_id == NULL ) || ( device_id == NULL )	7138:9:194084:194230	3277053	0	True				
ANR	3277090	OrExpression	( service_url == NULL ) || ( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( volume_id == NULL ) || ( device_id == NULL )		3277053	0		||			
ANR	3277091	EqualityExpression	service_url == NULL		3277053	0		==			
ANR	3277092	Identifier	service_url		3277053	0					
ANR	3277093	Identifier	NULL		3277053	1					
ANR	3277094	OrExpression	( publickeyfile == NULL ) || ( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( volume_id == NULL ) || ( device_id == NULL )		3277053	1		||			
ANR	3277095	EqualityExpression	publickeyfile == NULL		3277053	0		==			
ANR	3277096	Identifier	publickeyfile		3277053	0					
ANR	3277097	Identifier	NULL		3277053	1					
ANR	3277098	OrExpression	( privatekeyfile == NULL ) || ( instance_id == NULL ) || ( volume_id == NULL ) || ( device_id == NULL )		3277053	1		||			
ANR	3277099	EqualityExpression	privatekeyfile == NULL		3277053	0		==			
ANR	3277100	Identifier	privatekeyfile		3277053	0					
ANR	3277101	Identifier	NULL		3277053	1					
ANR	3277102	OrExpression	( instance_id == NULL ) || ( volume_id == NULL ) || ( device_id == NULL )		3277053	1		||			
ANR	3277103	EqualityExpression	instance_id == NULL		3277053	0		==			
ANR	3277104	Identifier	instance_id		3277053	0					
ANR	3277105	Identifier	NULL		3277053	1					
ANR	3277106	OrExpression	( volume_id == NULL ) || ( device_id == NULL )		3277053	1		||			
ANR	3277107	EqualityExpression	volume_id == NULL		3277053	0		==			
ANR	3277108	Identifier	volume_id		3277053	0					
ANR	3277109	Identifier	NULL		3277053	1					
ANR	3277110	EqualityExpression	device_id == NULL		3277053	1		==			
ANR	3277111	Identifier	device_id		3277053	0					
ANR	3277112	Identifier	NULL		3277053	1					
ANR	3277113	CompoundStatement		12:158:437:437	3277053	1					
ANR	3277114	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7139:8:194243:194282	3277053	0	True				
ANR	3277115	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3277053	0					
ANR	3277116	IdentifierDeclStatement	std :: string reqline ;	7143:4:194324:194343	3277053	5	True				
ANR	3277117	IdentifierDecl	reqline		3277053	0					
ANR	3277118	IdentifierDeclType	std :: string		3277053	0					
ANR	3277119	Identifier	reqline		3277053	1					
ANR	3277120	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7145:4:194350:194402	3277053	6	True				
ANR	3277121	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3277053	0					
ANR	3277122	IdentifierDeclType	char *		3277053	0					
ANR	3277123	Identifier	esc1		3277053	1					
ANR	3277124	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3277053	2		=			
ANR	3277125	Identifier	esc1		3277053	0					
ANR	3277126	CallExpression	strdup ( escapeGahpString ( service_url ) )		3277053	1					
ANR	3277127	Callee	strdup		3277053	0					
ANR	3277128	Identifier	strdup		3277053	0					
ANR	3277129	ArgumentList	escapeGahpString ( service_url )		3277053	1					
ANR	3277130	Argument	escapeGahpString ( service_url )		3277053	0					
ANR	3277131	CallExpression	escapeGahpString ( service_url )		3277053	0					
ANR	3277132	Callee	escapeGahpString		3277053	0					
ANR	3277133	Identifier	escapeGahpString		3277053	0					
ANR	3277134	ArgumentList	service_url		3277053	1					
ANR	3277135	Argument	service_url		3277053	0					
ANR	3277136	Identifier	service_url		3277053	0					
ANR	3277137	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( publickeyfile ) ) ;	7146:4:194408:194462	3277053	7	True				
ANR	3277138	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3277053	0					
ANR	3277139	IdentifierDeclType	char *		3277053	0					
ANR	3277140	Identifier	esc2		3277053	1					
ANR	3277141	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( publickeyfile ) )		3277053	2		=			
ANR	3277142	Identifier	esc2		3277053	0					
ANR	3277143	CallExpression	strdup ( escapeGahpString ( publickeyfile ) )		3277053	1					
ANR	3277144	Callee	strdup		3277053	0					
ANR	3277145	Identifier	strdup		3277053	0					
ANR	3277146	ArgumentList	escapeGahpString ( publickeyfile )		3277053	1					
ANR	3277147	Argument	escapeGahpString ( publickeyfile )		3277053	0					
ANR	3277148	CallExpression	escapeGahpString ( publickeyfile )		3277053	0					
ANR	3277149	Callee	escapeGahpString		3277053	0					
ANR	3277150	Identifier	escapeGahpString		3277053	0					
ANR	3277151	ArgumentList	publickeyfile		3277053	1					
ANR	3277152	Argument	publickeyfile		3277053	0					
ANR	3277153	Identifier	publickeyfile		3277053	0					
ANR	3277154	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( privatekeyfile ) ) ;	7147:4:194468:194523	3277053	8	True				
ANR	3277155	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3277053	0					
ANR	3277156	IdentifierDeclType	char *		3277053	0					
ANR	3277157	Identifier	esc3		3277053	1					
ANR	3277158	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( privatekeyfile ) )		3277053	2		=			
ANR	3277159	Identifier	esc3		3277053	0					
ANR	3277160	CallExpression	strdup ( escapeGahpString ( privatekeyfile ) )		3277053	1					
ANR	3277161	Callee	strdup		3277053	0					
ANR	3277162	Identifier	strdup		3277053	0					
ANR	3277163	ArgumentList	escapeGahpString ( privatekeyfile )		3277053	1					
ANR	3277164	Argument	escapeGahpString ( privatekeyfile )		3277053	0					
ANR	3277165	CallExpression	escapeGahpString ( privatekeyfile )		3277053	0					
ANR	3277166	Callee	escapeGahpString		3277053	0					
ANR	3277167	Identifier	escapeGahpString		3277053	0					
ANR	3277168	ArgumentList	privatekeyfile		3277053	1					
ANR	3277169	Argument	privatekeyfile		3277053	0					
ANR	3277170	Identifier	privatekeyfile		3277053	0					
ANR	3277171	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( volume_id ) ) ;	7148:4:194529:194579	3277053	9	True				
ANR	3277172	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( volume_id ) )		3277053	0					
ANR	3277173	IdentifierDeclType	char *		3277053	0					
ANR	3277174	Identifier	esc4		3277053	1					
ANR	3277175	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( volume_id ) )		3277053	2		=			
ANR	3277176	Identifier	esc4		3277053	0					
ANR	3277177	CallExpression	strdup ( escapeGahpString ( volume_id ) )		3277053	1					
ANR	3277178	Callee	strdup		3277053	0					
ANR	3277179	Identifier	strdup		3277053	0					
ANR	3277180	ArgumentList	escapeGahpString ( volume_id )		3277053	1					
ANR	3277181	Argument	escapeGahpString ( volume_id )		3277053	0					
ANR	3277182	CallExpression	escapeGahpString ( volume_id )		3277053	0					
ANR	3277183	Callee	escapeGahpString		3277053	0					
ANR	3277184	Identifier	escapeGahpString		3277053	0					
ANR	3277185	ArgumentList	volume_id		3277053	1					
ANR	3277186	Argument	volume_id		3277053	0					
ANR	3277187	Identifier	volume_id		3277053	0					
ANR	3277188	IdentifierDeclStatement	char * esc5 = strdup ( escapeGahpString ( instance_id ) ) ;	7149:1:194582:194634	3277053	10	True				
ANR	3277189	IdentifierDecl	* esc5 = strdup ( escapeGahpString ( instance_id ) )		3277053	0					
ANR	3277190	IdentifierDeclType	char *		3277053	0					
ANR	3277191	Identifier	esc5		3277053	1					
ANR	3277192	AssignmentExpression	* esc5 = strdup ( escapeGahpString ( instance_id ) )		3277053	2		=			
ANR	3277193	Identifier	esc5		3277053	0					
ANR	3277194	CallExpression	strdup ( escapeGahpString ( instance_id ) )		3277053	1					
ANR	3277195	Callee	strdup		3277053	0					
ANR	3277196	Identifier	strdup		3277053	0					
ANR	3277197	ArgumentList	escapeGahpString ( instance_id )		3277053	1					
ANR	3277198	Argument	escapeGahpString ( instance_id )		3277053	0					
ANR	3277199	CallExpression	escapeGahpString ( instance_id )		3277053	0					
ANR	3277200	Callee	escapeGahpString		3277053	0					
ANR	3277201	Identifier	escapeGahpString		3277053	0					
ANR	3277202	ArgumentList	instance_id		3277053	1					
ANR	3277203	Argument	instance_id		3277053	0					
ANR	3277204	Identifier	instance_id		3277053	0					
ANR	3277205	IdentifierDeclStatement	char * esc6 = strdup ( escapeGahpString ( device_id ) ) ;	7150:4:194640:194690	3277053	11	True				
ANR	3277206	IdentifierDecl	* esc6 = strdup ( escapeGahpString ( device_id ) )		3277053	0					
ANR	3277207	IdentifierDeclType	char *		3277053	0					
ANR	3277208	Identifier	esc6		3277053	1					
ANR	3277209	AssignmentExpression	* esc6 = strdup ( escapeGahpString ( device_id ) )		3277053	2		=			
ANR	3277210	Identifier	esc6		3277053	0					
ANR	3277211	CallExpression	strdup ( escapeGahpString ( device_id ) )		3277053	1					
ANR	3277212	Callee	strdup		3277053	0					
ANR	3277213	Identifier	strdup		3277053	0					
ANR	3277214	ArgumentList	escapeGahpString ( device_id )		3277053	1					
ANR	3277215	Argument	escapeGahpString ( device_id )		3277053	0					
ANR	3277216	CallExpression	escapeGahpString ( device_id )		3277053	0					
ANR	3277217	Callee	escapeGahpString		3277053	0					
ANR	3277218	Identifier	escapeGahpString		3277053	0					
ANR	3277219	ArgumentList	device_id		3277053	1					
ANR	3277220	Argument	device_id		3277053	0					
ANR	3277221	Identifier	device_id		3277053	0					
ANR	3277222	IdentifierDeclStatement	"int x = sprintf ( reqline , ""%s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 ) ;"	7152:4:194701:194783	3277053	12	True				
ANR	3277223	IdentifierDecl	"x = sprintf ( reqline , ""%s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 )"		3277053	0					
ANR	3277224	IdentifierDeclType	int		3277053	0					
ANR	3277225	Identifier	x		3277053	1					
ANR	3277226	AssignmentExpression	"x = sprintf ( reqline , ""%s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 )"		3277053	2		=			
ANR	3277227	Identifier	x		3277053	0					
ANR	3277228	CallExpression	"sprintf ( reqline , ""%s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 )"		3277053	1					
ANR	3277229	Callee	sprintf		3277053	0					
ANR	3277230	Identifier	sprintf		3277053	0					
ANR	3277231	ArgumentList	reqline		3277053	1					
ANR	3277232	Argument	reqline		3277053	0					
ANR	3277233	Identifier	reqline		3277053	0					
ANR	3277234	Argument	"""%s %s %s %s %s %s"""		3277053	1					
ANR	3277235	PrimaryExpression	"""%s %s %s %s %s %s"""		3277053	0					
ANR	3277236	Argument	esc1		3277053	2					
ANR	3277237	Identifier	esc1		3277053	0					
ANR	3277238	Argument	esc2		3277053	3					
ANR	3277239	Identifier	esc2		3277053	0					
ANR	3277240	Argument	esc3		3277053	4					
ANR	3277241	Identifier	esc3		3277053	0					
ANR	3277242	Argument	esc4		3277053	5					
ANR	3277243	Identifier	esc4		3277053	0					
ANR	3277244	Argument	esc5		3277053	6					
ANR	3277245	Identifier	esc5		3277053	0					
ANR	3277246	Argument	esc6		3277053	7					
ANR	3277247	Identifier	esc6		3277053	0					
ANR	3277248	ExpressionStatement	free ( esc1 )	7154:4:194794:194806	3277053	13	True				
ANR	3277249	CallExpression	free ( esc1 )		3277053	0					
ANR	3277250	Callee	free		3277053	0					
ANR	3277251	Identifier	free		3277053	0					
ANR	3277252	ArgumentList	esc1		3277053	1					
ANR	3277253	Argument	esc1		3277053	0					
ANR	3277254	Identifier	esc1		3277053	0					
ANR	3277255	ExpressionStatement	free ( esc2 )	7155:4:194812:194824	3277053	14	True				
ANR	3277256	CallExpression	free ( esc2 )		3277053	0					
ANR	3277257	Callee	free		3277053	0					
ANR	3277258	Identifier	free		3277053	0					
ANR	3277259	ArgumentList	esc2		3277053	1					
ANR	3277260	Argument	esc2		3277053	0					
ANR	3277261	Identifier	esc2		3277053	0					
ANR	3277262	ExpressionStatement	free ( esc3 )	7156:4:194830:194842	3277053	15	True				
ANR	3277263	CallExpression	free ( esc3 )		3277053	0					
ANR	3277264	Callee	free		3277053	0					
ANR	3277265	Identifier	free		3277053	0					
ANR	3277266	ArgumentList	esc3		3277053	1					
ANR	3277267	Argument	esc3		3277053	0					
ANR	3277268	Identifier	esc3		3277053	0					
ANR	3277269	ExpressionStatement	free ( esc4 )	7157:4:194848:194860	3277053	16	True				
ANR	3277270	CallExpression	free ( esc4 )		3277053	0					
ANR	3277271	Callee	free		3277053	0					
ANR	3277272	Identifier	free		3277053	0					
ANR	3277273	ArgumentList	esc4		3277053	1					
ANR	3277274	Argument	esc4		3277053	0					
ANR	3277275	Identifier	esc4		3277053	0					
ANR	3277276	ExpressionStatement	free ( esc5 )	7158:4:194866:194878	3277053	17	True				
ANR	3277277	CallExpression	free ( esc5 )		3277053	0					
ANR	3277278	Callee	free		3277053	0					
ANR	3277279	Identifier	free		3277053	0					
ANR	3277280	ArgumentList	esc5		3277053	1					
ANR	3277281	Argument	esc5		3277053	0					
ANR	3277282	Identifier	esc5		3277053	0					
ANR	3277283	ExpressionStatement	free ( esc6 )	7159:1:194881:194893	3277053	18	True				
ANR	3277284	CallExpression	free ( esc6 )		3277053	0					
ANR	3277285	Callee	free		3277053	0					
ANR	3277286	Identifier	free		3277053	0					
ANR	3277287	ArgumentList	esc6		3277053	1					
ANR	3277288	Argument	esc6		3277053	0					
ANR	3277289	Identifier	esc6		3277053	0					
ANR	3277290	ExpressionStatement	ASSERT ( x > 0 )	7160:4:194899:194914	3277053	19	True				
ANR	3277291	CallExpression	ASSERT ( x > 0 )		3277053	0					
ANR	3277292	Callee	ASSERT		3277053	0					
ANR	3277293	Identifier	ASSERT		3277053	0					
ANR	3277294	ArgumentList	x > 0		3277053	1					
ANR	3277295	Argument	x > 0		3277053	0					
ANR	3277296	RelationalExpression	x > 0		3277053	0		>			
ANR	3277297	Identifier	x		3277053	0					
ANR	3277298	PrimaryExpression	0		3277053	1					
ANR	3277299	IdentifierDeclStatement	const char * buf = reqline . c_str ( ) ;	7162:4:194925:194958	3277053	20	True				
ANR	3277300	IdentifierDecl	* buf = reqline . c_str ( )		3277053	0					
ANR	3277301	IdentifierDeclType	const char *		3277053	0					
ANR	3277302	Identifier	buf		3277053	1					
ANR	3277303	AssignmentExpression	* buf = reqline . c_str ( )		3277053	2		=			
ANR	3277304	Identifier	buf		3277053	0					
ANR	3277305	CallExpression	reqline . c_str ( )		3277053	1					
ANR	3277306	Callee	reqline . c_str		3277053	0					
ANR	3277307	MemberAccess	reqline . c_str		3277053	0					
ANR	3277308	Identifier	reqline		3277053	0					
ANR	3277309	Identifier	c_str		3277053	1					
ANR	3277310	ArgumentList			3277053	1					
ANR	3277311	IfStatement	if ( m_mode == results_only )		3277053	21					
ANR	3277312	Condition	m_mode == results_only	7165:9:194983:195004	3277053	0	True				
ANR	3277313	EqualityExpression	m_mode == results_only		3277053	0		==			
ANR	3277314	Identifier	m_mode		3277053	0					
ANR	3277315	Identifier	results_only		3277053	1					
ANR	3277316	CompoundStatement		40:1:1214:1214	3277053	1					
ANR	3277317	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7167:2:195014:195053	3277053	0	True				
ANR	3277318	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3277053	0					
ANR	3277319	ElseStatement	else		3277053	0					
ANR	3277320	CompoundStatement		44:1:1269:1269	3277053	0					
ANR	3277321	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7171:8:195075:195113	3277053	0	True				
ANR	3277322	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3277053	0					
ANR	3277323	Callee	now_pending		3277053	0					
ANR	3277324	Identifier	now_pending		3277053	0					
ANR	3277325	ArgumentList	command		3277053	1					
ANR	3277326	Argument	command		3277053	0					
ANR	3277327	Identifier	command		3277053	0					
ANR	3277328	Argument	buf		3277053	1					
ANR	3277329	Identifier	buf		3277053	0					
ANR	3277330	Argument	deleg_proxy		3277053	2					
ANR	3277331	Identifier	deleg_proxy		3277053	0					
ANR	3277332	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7175:4:195168:195220	3277053	22	True				
ANR	3277333	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3277053	0					
ANR	3277334	IdentifierDeclType	Gahp_Args *		3277053	0					
ANR	3277335	Identifier	result		3277053	1					
ANR	3277336	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3277053	2		=			
ANR	3277337	Identifier	result		3277053	0					
ANR	3277338	CallExpression	"get_pending_result ( command , buf )"		3277053	1					
ANR	3277339	Callee	get_pending_result		3277053	0					
ANR	3277340	Identifier	get_pending_result		3277053	0					
ANR	3277341	ArgumentList	command		3277053	1					
ANR	3277342	Argument	command		3277053	0					
ANR	3277343	Identifier	command		3277053	0					
ANR	3277344	Argument	buf		3277053	1					
ANR	3277345	Identifier	buf		3277053	0					
ANR	3277346	IfStatement	if ( result )		3277053	23					
ANR	3277347	Condition	result	7177:9:195232:195237	3277053	0	True				
ANR	3277348	Identifier	result		3277053	0					
ANR	3277349	CompoundStatement		53:8:1517:1556	3277053	1					
ANR	3277350	IdentifierDeclStatement	int result_code = atoi ( result -> argv [ 1 ] ) ;	7179:8:195313:195352	3277053	0	True				
ANR	3277351	IdentifierDecl	result_code = atoi ( result -> argv [ 1 ] )		3277053	0					
ANR	3277352	IdentifierDeclType	int		3277053	0					
ANR	3277353	Identifier	result_code		3277053	1					
ANR	3277354	AssignmentExpression	result_code = atoi ( result -> argv [ 1 ] )		3277053	2		=			
ANR	3277355	Identifier	result_code		3277053	0					
ANR	3277356	CallExpression	atoi ( result -> argv [ 1 ] )		3277053	1					
ANR	3277357	Callee	atoi		3277053	0					
ANR	3277358	Identifier	atoi		3277053	0					
ANR	3277359	ArgumentList	result -> argv [ 1 ]		3277053	1					
ANR	3277360	Argument	result -> argv [ 1 ]		3277053	0					
ANR	3277361	ArrayIndexing	result -> argv [ 1 ]		3277053	0					
ANR	3277362	PtrMemberAccess	result -> argv		3277053	0					
ANR	3277363	Identifier	result		3277053	0					
ANR	3277364	Identifier	argv		3277053	1					
ANR	3277365	PrimaryExpression	1		3277053	1					
ANR	3277366	IfStatement	if ( result_code == 1 )		3277053	1					
ANR	3277367	Condition	result_code == 1	7181:12:195375:195390	3277053	0	True				
ANR	3277368	EqualityExpression	result_code == 1		3277053	0		==			
ANR	3277369	Identifier	result_code		3277053	0					
ANR	3277370	PrimaryExpression	1		3277053	1					
ANR	3277371	CompoundStatement		55:30:1597:1597	3277053	1					
ANR	3277372	IfStatement	if ( result -> argc == 2 )		3277053	0					
ANR	3277373	Condition	result -> argc == 2	7183:16:195424:195440	3277053	0	True				
ANR	3277374	EqualityExpression	result -> argc == 2		3277053	0		==			
ANR	3277375	PtrMemberAccess	result -> argc		3277053	0					
ANR	3277376	Identifier	result		3277053	0					
ANR	3277377	Identifier	argc		3277053	1					
ANR	3277378	PrimaryExpression	2		3277053	1					
ANR	3277379	CompoundStatement		57:35:1647:1647	3277053	1					
ANR	3277380	ExpressionStatement	"error_string = """""	7184:16:195461:195478	3277053	0	True				
ANR	3277381	AssignmentExpression	"error_string = """""		3277053	0		=			
ANR	3277382	Identifier	error_string		3277053	0					
ANR	3277383	PrimaryExpression	""""""		3277053	1					
ANR	3277384	ElseStatement	else		3277053	0					
ANR	3277385	IfStatement	if ( result -> argc == 4 )		3277053	0					
ANR	3277386	Condition	result -> argc == 4	7185:23:195503:195519	3277053	0	True				
ANR	3277387	EqualityExpression	result -> argc == 4		3277053	0		==			
ANR	3277388	PtrMemberAccess	result -> argc		3277053	0					
ANR	3277389	Identifier	result		3277053	0					
ANR	3277390	Identifier	argc		3277053	1					
ANR	3277391	PrimaryExpression	4		3277053	1					
ANR	3277392	CompoundStatement		59:42:1726:1726	3277053	1					
ANR	3277393	ExpressionStatement	error_code = strdup ( result -> argv [ 2 ] )	7186:16:195540:195576	3277053	0	True				
ANR	3277394	AssignmentExpression	error_code = strdup ( result -> argv [ 2 ] )		3277053	0		=			
ANR	3277395	Identifier	error_code		3277053	0					
ANR	3277396	CallExpression	strdup ( result -> argv [ 2 ] )		3277053	1					
ANR	3277397	Callee	strdup		3277053	0					
ANR	3277398	Identifier	strdup		3277053	0					
ANR	3277399	ArgumentList	result -> argv [ 2 ]		3277053	1					
ANR	3277400	Argument	result -> argv [ 2 ]		3277053	0					
ANR	3277401	ArrayIndexing	result -> argv [ 2 ]		3277053	0					
ANR	3277402	PtrMemberAccess	result -> argv		3277053	0					
ANR	3277403	Identifier	result		3277053	0					
ANR	3277404	Identifier	argv		3277053	1					
ANR	3277405	PrimaryExpression	2		3277053	1					
ANR	3277406	ExpressionStatement	error_string = result -> argv [ 3 ]	7187:16:195594:195624	3277053	1	True				
ANR	3277407	AssignmentExpression	error_string = result -> argv [ 3 ]		3277053	0		=			
ANR	3277408	Identifier	error_string		3277053	0					
ANR	3277409	ArrayIndexing	result -> argv [ 3 ]		3277053	1					
ANR	3277410	PtrMemberAccess	result -> argv		3277053	0					
ANR	3277411	Identifier	result		3277053	0					
ANR	3277412	Identifier	argv		3277053	1					
ANR	3277413	PrimaryExpression	3		3277053	1					
ANR	3277414	ElseStatement	else		3277053	0					
ANR	3277415	CompoundStatement		62:19:1849:1849	3277053	0					
ANR	3277416	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	7189:16:195663:195694	3277053	0	True				
ANR	3277417	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3277053	0					
ANR	3277418	Callee	EXCEPT		3277053	0					
ANR	3277419	Identifier	EXCEPT		3277053	0					
ANR	3277420	ArgumentList	"""Bad %s Result"""		3277053	1					
ANR	3277421	Argument	"""Bad %s Result"""		3277053	0					
ANR	3277422	PrimaryExpression	"""Bad %s Result"""		3277053	0					
ANR	3277423	Argument	command		3277053	1					
ANR	3277424	Identifier	command		3277053	0					
ANR	3277425	ElseStatement	else		3277053	0					
ANR	3277426	CompoundStatement		66:15:1942:1942	3277053	0					
ANR	3277427	IfStatement	if ( ( ( result -> argc - 2 ) % 2 ) != 0 )		3277053	0					
ANR	3277428	Condition	( ( result -> argc - 2 ) % 2 ) != 0	7194:17:195793:195820	3277053	0	True				
ANR	3277429	EqualityExpression	( ( result -> argc - 2 ) % 2 ) != 0		3277053	0		!=			
ANR	3277430	MultiplicativeExpression	( result -> argc - 2 ) % 2		3277053	0		%			
ANR	3277431	AdditiveExpression	result -> argc - 2		3277053	0		-			
ANR	3277432	PtrMemberAccess	result -> argc		3277053	0					
ANR	3277433	Identifier	result		3277053	0					
ANR	3277434	Identifier	argc		3277053	1					
ANR	3277435	PrimaryExpression	2		3277053	1					
ANR	3277436	PrimaryExpression	2		3277053	1					
ANR	3277437	PrimaryExpression	0		3277053	1					
ANR	3277438	CompoundStatement		68:48:2028:2028	3277053	1					
ANR	3277439	ExpressionStatement	"EXCEPT ( ""Bad %s Result"" , command )"	7195:16:195842:195873	3277053	0	True				
ANR	3277440	CallExpression	"EXCEPT ( ""Bad %s Result"" , command )"		3277053	0					
ANR	3277441	Callee	EXCEPT		3277053	0					
ANR	3277442	Identifier	EXCEPT		3277053	0					
ANR	3277443	ArgumentList	"""Bad %s Result"""		3277053	1					
ANR	3277444	Argument	"""Bad %s Result"""		3277053	0					
ANR	3277445	PrimaryExpression	"""Bad %s Result"""		3277053	0					
ANR	3277446	Argument	command		3277053	1					
ANR	3277447	Identifier	command		3277053	0					
ANR	3277448	ElseStatement	else		3277053	0					
ANR	3277449	CompoundStatement		70:19:2098:2098	3277053	0					
ANR	3277450	ForStatement	for ( int i = 2 ; i < result -> argc ; i ++ )		3277053	0					
ANR	3277451	ForInit	int i = 2 ;	7198:21:195956:195963	3277053	0	True				
ANR	3277452	IdentifierDeclStatement	int i = 2 ;		3277053	0					
ANR	3277453	IdentifierDecl	i = 2		3277053	0					
ANR	3277454	IdentifierDeclType	int		3277053	0					
ANR	3277455	Identifier	i		3277053	1					
ANR	3277456	AssignmentExpression	i = 2		3277053	2		=			
ANR	3277457	Identifier	i		3277053	0					
ANR	3277458	PrimaryExpression	2		3277053	1					
ANR	3277459	Condition	i < result -> argc	7198:30:195965:195978	3277053	1	True				
ANR	3277460	RelationalExpression	i < result -> argc		3277053	0		<			
ANR	3277461	Identifier	i		3277053	0					
ANR	3277462	PtrMemberAccess	result -> argc		3277053	1					
ANR	3277463	Identifier	result		3277053	0					
ANR	3277464	Identifier	argc		3277053	1					
ANR	3277465	PostIncDecOperationExpression	i ++	7198:46:195981:195983	3277053	2	True				
ANR	3277466	Identifier	i		3277053	0					
ANR	3277467	IncDec	++		3277053	1					
ANR	3277468	CompoundStatement		72:51:2190:2190	3277053	3					
ANR	3277469	ExpressionStatement	returnStatus . append ( strdup ( result -> argv [ i ] ) )	7199:20:196008:196054	3277053	0	True				
ANR	3277470	CallExpression	returnStatus . append ( strdup ( result -> argv [ i ] ) )		3277053	0					
ANR	3277471	Callee	returnStatus . append		3277053	0					
ANR	3277472	MemberAccess	returnStatus . append		3277053	0					
ANR	3277473	Identifier	returnStatus		3277053	0					
ANR	3277474	Identifier	append		3277053	1					
ANR	3277475	ArgumentList	strdup ( result -> argv [ i ] )		3277053	1					
ANR	3277476	Argument	strdup ( result -> argv [ i ] )		3277053	0					
ANR	3277477	CallExpression	strdup ( result -> argv [ i ] )		3277053	0					
ANR	3277478	Callee	strdup		3277053	0					
ANR	3277479	Identifier	strdup		3277053	0					
ANR	3277480	ArgumentList	result -> argv [ i ]		3277053	1					
ANR	3277481	Argument	result -> argv [ i ]		3277053	0					
ANR	3277482	ArrayIndexing	result -> argv [ i ]		3277053	0					
ANR	3277483	PtrMemberAccess	result -> argv		3277053	0					
ANR	3277484	Identifier	result		3277053	0					
ANR	3277485	Identifier	argv		3277053	1					
ANR	3277486	Identifier	i		3277053	1					
ANR	3277487	ExpressionStatement	returnStatus . rewind ( )	7201:16:196090:196111	3277053	1	True				
ANR	3277488	CallExpression	returnStatus . rewind ( )		3277053	0					
ANR	3277489	Callee	returnStatus . rewind		3277053	0					
ANR	3277490	MemberAccess	returnStatus . rewind		3277053	0					
ANR	3277491	Identifier	returnStatus		3277053	0					
ANR	3277492	Identifier	rewind		3277053	1					
ANR	3277493	ArgumentList			3277053	1					
ANR	3277494	Statement	delete	7205:8:196161:196166	3277053	2	True				
ANR	3277495	ExpressionStatement	result	7205:15:196168:196174	3277053	3	True				
ANR	3277496	Identifier	result		3277053	0					
ANR	3277497	ReturnStatement	return rc ;	7209:4:196200:196209	3277053	24	True				
ANR	3277498	Identifier	rc		3277053	0					
ANR	3277499	ReturnType	int		3277053	1					
ANR	3277500	Identifier	GahpClient :: ec2_attach_volume		3277053	2					
ANR	3277501	ParameterList	"const char * service_url , const char * publickeyfile , const char * privatekeyfile , const char * volume_id , const char * instance_id , const char * device_id , StringList & returnStatus , char * & error_code"		3277053	3					
ANR	3277502	Parameter	const char * service_url	7119:34:193400:193423	3277053	0	True				
ANR	3277503	ParameterType	const char *		3277053	0					
ANR	3277504	Identifier	service_url		3277053	1					
ANR	3277505	Parameter	const char * publickeyfile	7120:30:193456:193481	3277053	1	True				
ANR	3277506	ParameterType	const char *		3277053	0					
ANR	3277507	Identifier	publickeyfile		3277053	1					
ANR	3277508	Parameter	const char * privatekeyfile	7121:30:193514:193540	3277053	2	True				
ANR	3277509	ParameterType	const char *		3277053	0					
ANR	3277510	Identifier	privatekeyfile		3277053	1					
ANR	3277511	Parameter	const char * volume_id	7122:30:193573:193594	3277053	3	True				
ANR	3277512	ParameterType	const char *		3277053	0					
ANR	3277513	Identifier	volume_id		3277053	1					
ANR	3277514	Parameter	const char * instance_id	7123:9:193606:193629	3277053	4	True				
ANR	3277515	ParameterType	const char *		3277053	0					
ANR	3277516	Identifier	instance_id		3277053	1					
ANR	3277517	Parameter	const char * device_id	7124:30:193663:193684	3277053	5	True				
ANR	3277518	ParameterType	const char *		3277053	0					
ANR	3277519	Identifier	device_id		3277053	1					
ANR	3277520	Parameter	StringList & returnStatus	7125:30:193717:193741	3277053	6	True				
ANR	3277521	ParameterType	StringList &		3277053	0					
ANR	3277522	Identifier	returnStatus		3277053	1					
ANR	3277523	Parameter	char * & error_code	7126:30:193774:193791	3277053	7	True				
ANR	3277524	ParameterType	char * &		3277053	0					
ANR	3277525	Identifier	error_code		3277053	1					
ANR	3277526	CFGEntryNode	ENTRY		3277053		True				
ANR	3277527	CFGExitNode	EXIT		3277053		True				
ANR	3277528	Symbol	server -> m_commands_supported		3277053						
ANR	3277529	Symbol	server		3277053						
ANR	3277530	Symbol	escapeGahpString		3277053						
ANR	3277531	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3277053						
ANR	3277532	Symbol	* server		3277053						
ANR	3277533	Symbol	volume_id		3277053						
ANR	3277534	Symbol	returnStatus		3277053						
ANR	3277535	Symbol	publickeyfile		3277053						
ANR	3277536	Symbol	reqline . c_str		3277053						
ANR	3277537	Symbol	results_only		3277053						
ANR	3277538	Symbol	result -> argv		3277053						
ANR	3277539	Symbol	esc6		3277053						
ANR	3277540	Symbol	* server -> m_commands_supported		3277053						
ANR	3277541	Symbol	esc5		3277053						
ANR	3277542	Symbol	sprintf		3277053						
ANR	3277543	Symbol	result		3277053						
ANR	3277544	Symbol	* result		3277053						
ANR	3277545	Symbol	server -> m_commands_supported -> contains_anycase		3277053						
ANR	3277546	Symbol	reqline		3277053						
ANR	3277547	Symbol	m_mode		3277053						
ANR	3277548	Symbol	* result -> argv		3277053						
ANR	3277549	Symbol	atoi		3277053						
ANR	3277550	Symbol	NULL		3277053						
ANR	3277551	Symbol	device_id		3277053						
ANR	3277552	Symbol	* * result		3277053						
ANR	3277553	Symbol	i		3277053						
ANR	3277554	Symbol	command		3277053						
ANR	3277555	Symbol	esc4		3277053						
ANR	3277556	Symbol	get_pending_result		3277053						
ANR	3277557	Symbol	service_url		3277053						
ANR	3277558	Symbol	rc		3277053						
ANR	3277559	Symbol	esc3		3277053						
ANR	3277560	Symbol	error_string		3277053						
ANR	3277561	Symbol	esc2		3277053						
ANR	3277562	Symbol	buf		3277053						
ANR	3277563	Symbol	instance_id		3277053						
ANR	3277564	Symbol	esc1		3277053						
ANR	3277565	Symbol	* i		3277053						
ANR	3277566	Symbol	x		3277053						
ANR	3277567	Symbol	result -> argc		3277053						
ANR	3277568	Symbol	privatekeyfile		3277053						
ANR	3277569	Symbol	error_code		3277053						
ANR	3277570	Symbol	FALSE		3277053						
ANR	3277571	Symbol	* * server		3277053						
ANR	3277572	Symbol	result_code		3277053						
ANR	3277573	Symbol	strdup		3277053						
ANR	3277574	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3277053						
ANR	3277575	Symbol	deleg_proxy		3277053						
ANR	3277576	Function	GahpClient :: dcloud_submit	7213:0:196215:200099							
ANR	3277577	FunctionDef	"GahpClient :: dcloud_submit (const char * service_url , const char * username , const char * password , const char * image_id , const char * instance_name , const char * realm_id , const char * hwp_id , const char * hwp_memory , const char * hwp_cpu , const char * hwp_storage , const char * keyname , const char * userdata , StringList & attrs)"		3277576	0					
ANR	3277578	CompoundStatement		7226:0:196659:200099	3277576	0					
ANR	3277579	Statement	static	7229:1:196806:196811	3277576	0	True				
ANR	3277580	IdentifierDeclStatement	"const char * command = ""DELTACLOUD_VM_SUBMIT"" ;"	7229:8:196813:196857	3277576	1	True				
ANR	3277581	IdentifierDecl	"* command = ""DELTACLOUD_VM_SUBMIT"""		3277576	0					
ANR	3277582	IdentifierDeclType	const char *		3277576	0					
ANR	3277583	Identifier	command		3277576	1					
ANR	3277584	AssignmentExpression	"* command = ""DELTACLOUD_VM_SUBMIT"""		3277576	2		=			
ANR	3277585	Identifier	command		3277576	0					
ANR	3277586	PrimaryExpression	"""DELTACLOUD_VM_SUBMIT"""		3277576	1					
ANR	3277587	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3277576	2					
ANR	3277588	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7232:6:196905:196970	3277576	0	True				
ANR	3277589	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3277576	0		==			
ANR	3277590	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3277576	0					
ANR	3277591	Callee	server -> m_commands_supported -> contains_anycase		3277576	0					
ANR	3277592	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3277576	0					
ANR	3277593	PtrMemberAccess	server -> m_commands_supported		3277576	0					
ANR	3277594	Identifier	server		3277576	0					
ANR	3277595	Identifier	m_commands_supported		3277576	1					
ANR	3277596	Identifier	contains_anycase		3277576	1					
ANR	3277597	ArgumentList	command		3277576	1					
ANR	3277598	Argument	command		3277576	0					
ANR	3277599	Identifier	command		3277576	0					
ANR	3277600	Identifier	FALSE		3277576	1					
ANR	3277601	CompoundStatement		7:75:314:314	3277576	1					
ANR	3277602	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7233:2:196978:197017	3277576	0	True				
ANR	3277603	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3277576	0					
ANR	3277604	IfStatement	if ( ! service_url )		3277576	3					
ANR	3277605	Condition	! service_url	7237:6:197055:197066	3277576	0	True				
ANR	3277606	UnaryOperationExpression	! service_url		3277576	0					
ANR	3277607	UnaryOperator	!		3277576	0					
ANR	3277608	Identifier	service_url		3277576	1					
ANR	3277609	ExpressionStatement	service_url = NULLSTRING	7237:21:197070:197094	3277576	1	True				
ANR	3277610	AssignmentExpression	service_url = NULLSTRING		3277576	0		=			
ANR	3277611	Identifier	service_url		3277576	0					
ANR	3277612	Identifier	NULLSTRING		3277576	1					
ANR	3277613	IfStatement	if ( ! username )		3277576	4					
ANR	3277614	Condition	! username	7238:6:197102:197110	3277576	0	True				
ANR	3277615	UnaryOperationExpression	! username		3277576	0					
ANR	3277616	UnaryOperator	!		3277576	0					
ANR	3277617	Identifier	username		3277576	1					
ANR	3277618	ExpressionStatement	username = NULLSTRING	7238:18:197114:197135	3277576	1	True				
ANR	3277619	AssignmentExpression	username = NULLSTRING		3277576	0		=			
ANR	3277620	Identifier	username		3277576	0					
ANR	3277621	Identifier	NULLSTRING		3277576	1					
ANR	3277622	IfStatement	if ( ! password )		3277576	5					
ANR	3277623	Condition	! password	7239:6:197143:197151	3277576	0	True				
ANR	3277624	UnaryOperationExpression	! password		3277576	0					
ANR	3277625	UnaryOperator	!		3277576	0					
ANR	3277626	Identifier	password		3277576	1					
ANR	3277627	ExpressionStatement	password = NULLSTRING	7239:18:197155:197176	3277576	1	True				
ANR	3277628	AssignmentExpression	password = NULLSTRING		3277576	0		=			
ANR	3277629	Identifier	password		3277576	0					
ANR	3277630	Identifier	NULLSTRING		3277576	1					
ANR	3277631	IfStatement	if ( ! image_id )		3277576	6					
ANR	3277632	Condition	! image_id	7240:6:197184:197192	3277576	0	True				
ANR	3277633	UnaryOperationExpression	! image_id		3277576	0					
ANR	3277634	UnaryOperator	!		3277576	0					
ANR	3277635	Identifier	image_id		3277576	1					
ANR	3277636	ExpressionStatement	image_id = NULLSTRING	7240:18:197196:197217	3277576	1	True				
ANR	3277637	AssignmentExpression	image_id = NULLSTRING		3277576	0		=			
ANR	3277638	Identifier	image_id		3277576	0					
ANR	3277639	Identifier	NULLSTRING		3277576	1					
ANR	3277640	IfStatement	if ( ! instance_name )		3277576	7					
ANR	3277641	Condition	! instance_name	7241:6:197225:197238	3277576	0	True				
ANR	3277642	UnaryOperationExpression	! instance_name		3277576	0					
ANR	3277643	UnaryOperator	!		3277576	0					
ANR	3277644	Identifier	instance_name		3277576	1					
ANR	3277645	ExpressionStatement	instance_name = NULLSTRING	7241:23:197242:197268	3277576	1	True				
ANR	3277646	AssignmentExpression	instance_name = NULLSTRING		3277576	0		=			
ANR	3277647	Identifier	instance_name		3277576	0					
ANR	3277648	Identifier	NULLSTRING		3277576	1					
ANR	3277649	IfStatement	if ( ! realm_id )		3277576	8					
ANR	3277650	Condition	! realm_id	7242:6:197276:197284	3277576	0	True				
ANR	3277651	UnaryOperationExpression	! realm_id		3277576	0					
ANR	3277652	UnaryOperator	!		3277576	0					
ANR	3277653	Identifier	realm_id		3277576	1					
ANR	3277654	ExpressionStatement	realm_id = NULLSTRING	7242:18:197288:197309	3277576	1	True				
ANR	3277655	AssignmentExpression	realm_id = NULLSTRING		3277576	0		=			
ANR	3277656	Identifier	realm_id		3277576	0					
ANR	3277657	Identifier	NULLSTRING		3277576	1					
ANR	3277658	IfStatement	if ( ! hwp_id )		3277576	9					
ANR	3277659	Condition	! hwp_id	7243:6:197317:197323	3277576	0	True				
ANR	3277660	UnaryOperationExpression	! hwp_id		3277576	0					
ANR	3277661	UnaryOperator	!		3277576	0					
ANR	3277662	Identifier	hwp_id		3277576	1					
ANR	3277663	ExpressionStatement	hwp_id = NULLSTRING	7243:16:197327:197346	3277576	1	True				
ANR	3277664	AssignmentExpression	hwp_id = NULLSTRING		3277576	0		=			
ANR	3277665	Identifier	hwp_id		3277576	0					
ANR	3277666	Identifier	NULLSTRING		3277576	1					
ANR	3277667	IfStatement	if ( ! hwp_memory )		3277576	10					
ANR	3277668	Condition	! hwp_memory	7244:6:197354:197364	3277576	0	True				
ANR	3277669	UnaryOperationExpression	! hwp_memory		3277576	0					
ANR	3277670	UnaryOperator	!		3277576	0					
ANR	3277671	Identifier	hwp_memory		3277576	1					
ANR	3277672	ExpressionStatement	hwp_memory = NULLSTRING	7244:20:197368:197391	3277576	1	True				
ANR	3277673	AssignmentExpression	hwp_memory = NULLSTRING		3277576	0		=			
ANR	3277674	Identifier	hwp_memory		3277576	0					
ANR	3277675	Identifier	NULLSTRING		3277576	1					
ANR	3277676	IfStatement	if ( ! hwp_cpu )		3277576	11					
ANR	3277677	Condition	! hwp_cpu	7245:6:197399:197406	3277576	0	True				
ANR	3277678	UnaryOperationExpression	! hwp_cpu		3277576	0					
ANR	3277679	UnaryOperator	!		3277576	0					
ANR	3277680	Identifier	hwp_cpu		3277576	1					
ANR	3277681	ExpressionStatement	hwp_cpu = NULLSTRING	7245:17:197410:197430	3277576	1	True				
ANR	3277682	AssignmentExpression	hwp_cpu = NULLSTRING		3277576	0		=			
ANR	3277683	Identifier	hwp_cpu		3277576	0					
ANR	3277684	Identifier	NULLSTRING		3277576	1					
ANR	3277685	IfStatement	if ( ! hwp_storage )		3277576	12					
ANR	3277686	Condition	! hwp_storage	7246:6:197438:197449	3277576	0	True				
ANR	3277687	UnaryOperationExpression	! hwp_storage		3277576	0					
ANR	3277688	UnaryOperator	!		3277576	0					
ANR	3277689	Identifier	hwp_storage		3277576	1					
ANR	3277690	ExpressionStatement	hwp_storage = NULLSTRING	7246:21:197453:197477	3277576	1	True				
ANR	3277691	AssignmentExpression	hwp_storage = NULLSTRING		3277576	0		=			
ANR	3277692	Identifier	hwp_storage		3277576	0					
ANR	3277693	Identifier	NULLSTRING		3277576	1					
ANR	3277694	IfStatement	if ( ! keyname )		3277576	13					
ANR	3277695	Condition	! keyname	7247:6:197485:197492	3277576	0	True				
ANR	3277696	UnaryOperationExpression	! keyname		3277576	0					
ANR	3277697	UnaryOperator	!		3277576	0					
ANR	3277698	Identifier	keyname		3277576	1					
ANR	3277699	ExpressionStatement	keyname = NULLSTRING	7247:17:197496:197516	3277576	1	True				
ANR	3277700	AssignmentExpression	keyname = NULLSTRING		3277576	0		=			
ANR	3277701	Identifier	keyname		3277576	0					
ANR	3277702	Identifier	NULLSTRING		3277576	1					
ANR	3277703	IfStatement	if ( ! userdata )		3277576	14					
ANR	3277704	Condition	! userdata	7248:6:197524:197532	3277576	0	True				
ANR	3277705	UnaryOperationExpression	! userdata		3277576	0					
ANR	3277706	UnaryOperator	!		3277576	0					
ANR	3277707	Identifier	userdata		3277576	1					
ANR	3277708	ExpressionStatement	userdata = NULLSTRING	7248:18:197536:197557	3277576	1	True				
ANR	3277709	AssignmentExpression	userdata = NULLSTRING		3277576	0		=			
ANR	3277710	Identifier	userdata		3277576	0					
ANR	3277711	Identifier	NULLSTRING		3277576	1					
ANR	3277712	IdentifierDeclStatement	MyString reqline ;	7250:1:197561:197577	3277576	15	True				
ANR	3277713	IdentifierDecl	reqline		3277576	0					
ANR	3277714	IdentifierDeclType	MyString		3277576	0					
ANR	3277715	Identifier	reqline		3277576	1					
ANR	3277716	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7252:1:197581:197633	3277576	16	True				
ANR	3277717	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3277576	0					
ANR	3277718	IdentifierDeclType	char *		3277576	0					
ANR	3277719	Identifier	esc1		3277576	1					
ANR	3277720	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3277576	2		=			
ANR	3277721	Identifier	esc1		3277576	0					
ANR	3277722	CallExpression	strdup ( escapeGahpString ( service_url ) )		3277576	1					
ANR	3277723	Callee	strdup		3277576	0					
ANR	3277724	Identifier	strdup		3277576	0					
ANR	3277725	ArgumentList	escapeGahpString ( service_url )		3277576	1					
ANR	3277726	Argument	escapeGahpString ( service_url )		3277576	0					
ANR	3277727	CallExpression	escapeGahpString ( service_url )		3277576	0					
ANR	3277728	Callee	escapeGahpString		3277576	0					
ANR	3277729	Identifier	escapeGahpString		3277576	0					
ANR	3277730	ArgumentList	service_url		3277576	1					
ANR	3277731	Argument	service_url		3277576	0					
ANR	3277732	Identifier	service_url		3277576	0					
ANR	3277733	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( username ) ) ;	7253:1:197636:197685	3277576	17	True				
ANR	3277734	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( username ) )		3277576	0					
ANR	3277735	IdentifierDeclType	char *		3277576	0					
ANR	3277736	Identifier	esc2		3277576	1					
ANR	3277737	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( username ) )		3277576	2		=			
ANR	3277738	Identifier	esc2		3277576	0					
ANR	3277739	CallExpression	strdup ( escapeGahpString ( username ) )		3277576	1					
ANR	3277740	Callee	strdup		3277576	0					
ANR	3277741	Identifier	strdup		3277576	0					
ANR	3277742	ArgumentList	escapeGahpString ( username )		3277576	1					
ANR	3277743	Argument	escapeGahpString ( username )		3277576	0					
ANR	3277744	CallExpression	escapeGahpString ( username )		3277576	0					
ANR	3277745	Callee	escapeGahpString		3277576	0					
ANR	3277746	Identifier	escapeGahpString		3277576	0					
ANR	3277747	ArgumentList	username		3277576	1					
ANR	3277748	Argument	username		3277576	0					
ANR	3277749	Identifier	username		3277576	0					
ANR	3277750	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( password ) ) ;	7254:1:197688:197737	3277576	18	True				
ANR	3277751	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( password ) )		3277576	0					
ANR	3277752	IdentifierDeclType	char *		3277576	0					
ANR	3277753	Identifier	esc3		3277576	1					
ANR	3277754	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( password ) )		3277576	2		=			
ANR	3277755	Identifier	esc3		3277576	0					
ANR	3277756	CallExpression	strdup ( escapeGahpString ( password ) )		3277576	1					
ANR	3277757	Callee	strdup		3277576	0					
ANR	3277758	Identifier	strdup		3277576	0					
ANR	3277759	ArgumentList	escapeGahpString ( password )		3277576	1					
ANR	3277760	Argument	escapeGahpString ( password )		3277576	0					
ANR	3277761	CallExpression	escapeGahpString ( password )		3277576	0					
ANR	3277762	Callee	escapeGahpString		3277576	0					
ANR	3277763	Identifier	escapeGahpString		3277576	0					
ANR	3277764	ArgumentList	password		3277576	1					
ANR	3277765	Argument	password		3277576	0					
ANR	3277766	Identifier	password		3277576	0					
ANR	3277767	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( image_id ) ) ;	7255:1:197740:197789	3277576	19	True				
ANR	3277768	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( image_id ) )		3277576	0					
ANR	3277769	IdentifierDeclType	char *		3277576	0					
ANR	3277770	Identifier	esc4		3277576	1					
ANR	3277771	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( image_id ) )		3277576	2		=			
ANR	3277772	Identifier	esc4		3277576	0					
ANR	3277773	CallExpression	strdup ( escapeGahpString ( image_id ) )		3277576	1					
ANR	3277774	Callee	strdup		3277576	0					
ANR	3277775	Identifier	strdup		3277576	0					
ANR	3277776	ArgumentList	escapeGahpString ( image_id )		3277576	1					
ANR	3277777	Argument	escapeGahpString ( image_id )		3277576	0					
ANR	3277778	CallExpression	escapeGahpString ( image_id )		3277576	0					
ANR	3277779	Callee	escapeGahpString		3277576	0					
ANR	3277780	Identifier	escapeGahpString		3277576	0					
ANR	3277781	ArgumentList	image_id		3277576	1					
ANR	3277782	Argument	image_id		3277576	0					
ANR	3277783	Identifier	image_id		3277576	0					
ANR	3277784	IdentifierDeclStatement	char * esc5 = strdup ( escapeGahpString ( instance_name ) ) ;	7256:1:197792:197846	3277576	20	True				
ANR	3277785	IdentifierDecl	* esc5 = strdup ( escapeGahpString ( instance_name ) )		3277576	0					
ANR	3277786	IdentifierDeclType	char *		3277576	0					
ANR	3277787	Identifier	esc5		3277576	1					
ANR	3277788	AssignmentExpression	* esc5 = strdup ( escapeGahpString ( instance_name ) )		3277576	2		=			
ANR	3277789	Identifier	esc5		3277576	0					
ANR	3277790	CallExpression	strdup ( escapeGahpString ( instance_name ) )		3277576	1					
ANR	3277791	Callee	strdup		3277576	0					
ANR	3277792	Identifier	strdup		3277576	0					
ANR	3277793	ArgumentList	escapeGahpString ( instance_name )		3277576	1					
ANR	3277794	Argument	escapeGahpString ( instance_name )		3277576	0					
ANR	3277795	CallExpression	escapeGahpString ( instance_name )		3277576	0					
ANR	3277796	Callee	escapeGahpString		3277576	0					
ANR	3277797	Identifier	escapeGahpString		3277576	0					
ANR	3277798	ArgumentList	instance_name		3277576	1					
ANR	3277799	Argument	instance_name		3277576	0					
ANR	3277800	Identifier	instance_name		3277576	0					
ANR	3277801	IdentifierDeclStatement	char * esc6 = strdup ( escapeGahpString ( realm_id ) ) ;	7257:1:197849:197898	3277576	21	True				
ANR	3277802	IdentifierDecl	* esc6 = strdup ( escapeGahpString ( realm_id ) )		3277576	0					
ANR	3277803	IdentifierDeclType	char *		3277576	0					
ANR	3277804	Identifier	esc6		3277576	1					
ANR	3277805	AssignmentExpression	* esc6 = strdup ( escapeGahpString ( realm_id ) )		3277576	2		=			
ANR	3277806	Identifier	esc6		3277576	0					
ANR	3277807	CallExpression	strdup ( escapeGahpString ( realm_id ) )		3277576	1					
ANR	3277808	Callee	strdup		3277576	0					
ANR	3277809	Identifier	strdup		3277576	0					
ANR	3277810	ArgumentList	escapeGahpString ( realm_id )		3277576	1					
ANR	3277811	Argument	escapeGahpString ( realm_id )		3277576	0					
ANR	3277812	CallExpression	escapeGahpString ( realm_id )		3277576	0					
ANR	3277813	Callee	escapeGahpString		3277576	0					
ANR	3277814	Identifier	escapeGahpString		3277576	0					
ANR	3277815	ArgumentList	realm_id		3277576	1					
ANR	3277816	Argument	realm_id		3277576	0					
ANR	3277817	Identifier	realm_id		3277576	0					
ANR	3277818	IdentifierDeclStatement	char * esc7 = strdup ( escapeGahpString ( hwp_id ) ) ;	7258:1:197901:197948	3277576	22	True				
ANR	3277819	IdentifierDecl	* esc7 = strdup ( escapeGahpString ( hwp_id ) )		3277576	0					
ANR	3277820	IdentifierDeclType	char *		3277576	0					
ANR	3277821	Identifier	esc7		3277576	1					
ANR	3277822	AssignmentExpression	* esc7 = strdup ( escapeGahpString ( hwp_id ) )		3277576	2		=			
ANR	3277823	Identifier	esc7		3277576	0					
ANR	3277824	CallExpression	strdup ( escapeGahpString ( hwp_id ) )		3277576	1					
ANR	3277825	Callee	strdup		3277576	0					
ANR	3277826	Identifier	strdup		3277576	0					
ANR	3277827	ArgumentList	escapeGahpString ( hwp_id )		3277576	1					
ANR	3277828	Argument	escapeGahpString ( hwp_id )		3277576	0					
ANR	3277829	CallExpression	escapeGahpString ( hwp_id )		3277576	0					
ANR	3277830	Callee	escapeGahpString		3277576	0					
ANR	3277831	Identifier	escapeGahpString		3277576	0					
ANR	3277832	ArgumentList	hwp_id		3277576	1					
ANR	3277833	Argument	hwp_id		3277576	0					
ANR	3277834	Identifier	hwp_id		3277576	0					
ANR	3277835	IdentifierDeclStatement	char * esc8 = strdup ( escapeGahpString ( hwp_memory ) ) ;	7259:1:197951:198002	3277576	23	True				
ANR	3277836	IdentifierDecl	* esc8 = strdup ( escapeGahpString ( hwp_memory ) )		3277576	0					
ANR	3277837	IdentifierDeclType	char *		3277576	0					
ANR	3277838	Identifier	esc8		3277576	1					
ANR	3277839	AssignmentExpression	* esc8 = strdup ( escapeGahpString ( hwp_memory ) )		3277576	2		=			
ANR	3277840	Identifier	esc8		3277576	0					
ANR	3277841	CallExpression	strdup ( escapeGahpString ( hwp_memory ) )		3277576	1					
ANR	3277842	Callee	strdup		3277576	0					
ANR	3277843	Identifier	strdup		3277576	0					
ANR	3277844	ArgumentList	escapeGahpString ( hwp_memory )		3277576	1					
ANR	3277845	Argument	escapeGahpString ( hwp_memory )		3277576	0					
ANR	3277846	CallExpression	escapeGahpString ( hwp_memory )		3277576	0					
ANR	3277847	Callee	escapeGahpString		3277576	0					
ANR	3277848	Identifier	escapeGahpString		3277576	0					
ANR	3277849	ArgumentList	hwp_memory		3277576	1					
ANR	3277850	Argument	hwp_memory		3277576	0					
ANR	3277851	Identifier	hwp_memory		3277576	0					
ANR	3277852	IdentifierDeclStatement	char * esc9 = strdup ( escapeGahpString ( hwp_cpu ) ) ;	7260:1:198005:198053	3277576	24	True				
ANR	3277853	IdentifierDecl	* esc9 = strdup ( escapeGahpString ( hwp_cpu ) )		3277576	0					
ANR	3277854	IdentifierDeclType	char *		3277576	0					
ANR	3277855	Identifier	esc9		3277576	1					
ANR	3277856	AssignmentExpression	* esc9 = strdup ( escapeGahpString ( hwp_cpu ) )		3277576	2		=			
ANR	3277857	Identifier	esc9		3277576	0					
ANR	3277858	CallExpression	strdup ( escapeGahpString ( hwp_cpu ) )		3277576	1					
ANR	3277859	Callee	strdup		3277576	0					
ANR	3277860	Identifier	strdup		3277576	0					
ANR	3277861	ArgumentList	escapeGahpString ( hwp_cpu )		3277576	1					
ANR	3277862	Argument	escapeGahpString ( hwp_cpu )		3277576	0					
ANR	3277863	CallExpression	escapeGahpString ( hwp_cpu )		3277576	0					
ANR	3277864	Callee	escapeGahpString		3277576	0					
ANR	3277865	Identifier	escapeGahpString		3277576	0					
ANR	3277866	ArgumentList	hwp_cpu		3277576	1					
ANR	3277867	Argument	hwp_cpu		3277576	0					
ANR	3277868	Identifier	hwp_cpu		3277576	0					
ANR	3277869	IdentifierDeclStatement	char * esc10 = strdup ( escapeGahpString ( hwp_storage ) ) ;	7261:1:198056:198109	3277576	25	True				
ANR	3277870	IdentifierDecl	* esc10 = strdup ( escapeGahpString ( hwp_storage ) )		3277576	0					
ANR	3277871	IdentifierDeclType	char *		3277576	0					
ANR	3277872	Identifier	esc10		3277576	1					
ANR	3277873	AssignmentExpression	* esc10 = strdup ( escapeGahpString ( hwp_storage ) )		3277576	2		=			
ANR	3277874	Identifier	esc10		3277576	0					
ANR	3277875	CallExpression	strdup ( escapeGahpString ( hwp_storage ) )		3277576	1					
ANR	3277876	Callee	strdup		3277576	0					
ANR	3277877	Identifier	strdup		3277576	0					
ANR	3277878	ArgumentList	escapeGahpString ( hwp_storage )		3277576	1					
ANR	3277879	Argument	escapeGahpString ( hwp_storage )		3277576	0					
ANR	3277880	CallExpression	escapeGahpString ( hwp_storage )		3277576	0					
ANR	3277881	Callee	escapeGahpString		3277576	0					
ANR	3277882	Identifier	escapeGahpString		3277576	0					
ANR	3277883	ArgumentList	hwp_storage		3277576	1					
ANR	3277884	Argument	hwp_storage		3277576	0					
ANR	3277885	Identifier	hwp_storage		3277576	0					
ANR	3277886	IdentifierDeclStatement	char * esc11 = strdup ( escapeGahpString ( keyname ) ) ;	7262:1:198112:198161	3277576	26	True				
ANR	3277887	IdentifierDecl	* esc11 = strdup ( escapeGahpString ( keyname ) )		3277576	0					
ANR	3277888	IdentifierDeclType	char *		3277576	0					
ANR	3277889	Identifier	esc11		3277576	1					
ANR	3277890	AssignmentExpression	* esc11 = strdup ( escapeGahpString ( keyname ) )		3277576	2		=			
ANR	3277891	Identifier	esc11		3277576	0					
ANR	3277892	CallExpression	strdup ( escapeGahpString ( keyname ) )		3277576	1					
ANR	3277893	Callee	strdup		3277576	0					
ANR	3277894	Identifier	strdup		3277576	0					
ANR	3277895	ArgumentList	escapeGahpString ( keyname )		3277576	1					
ANR	3277896	Argument	escapeGahpString ( keyname )		3277576	0					
ANR	3277897	CallExpression	escapeGahpString ( keyname )		3277576	0					
ANR	3277898	Callee	escapeGahpString		3277576	0					
ANR	3277899	Identifier	escapeGahpString		3277576	0					
ANR	3277900	ArgumentList	keyname		3277576	1					
ANR	3277901	Argument	keyname		3277576	0					
ANR	3277902	Identifier	keyname		3277576	0					
ANR	3277903	IdentifierDeclStatement	char * esc12 = strdup ( escapeGahpString ( userdata ) ) ;	7263:1:198164:198214	3277576	27	True				
ANR	3277904	IdentifierDecl	* esc12 = strdup ( escapeGahpString ( userdata ) )		3277576	0					
ANR	3277905	IdentifierDeclType	char *		3277576	0					
ANR	3277906	Identifier	esc12		3277576	1					
ANR	3277907	AssignmentExpression	* esc12 = strdup ( escapeGahpString ( userdata ) )		3277576	2		=			
ANR	3277908	Identifier	esc12		3277576	0					
ANR	3277909	CallExpression	strdup ( escapeGahpString ( userdata ) )		3277576	1					
ANR	3277910	Callee	strdup		3277576	0					
ANR	3277911	Identifier	strdup		3277576	0					
ANR	3277912	ArgumentList	escapeGahpString ( userdata )		3277576	1					
ANR	3277913	Argument	escapeGahpString ( userdata )		3277576	0					
ANR	3277914	CallExpression	escapeGahpString ( userdata )		3277576	0					
ANR	3277915	Callee	escapeGahpString		3277576	0					
ANR	3277916	Identifier	escapeGahpString		3277576	0					
ANR	3277917	ArgumentList	userdata		3277576	1					
ANR	3277918	Argument	userdata		3277576	0					
ANR	3277919	Identifier	userdata		3277576	0					
ANR	3277920	IdentifierDeclStatement	"bool x = reqline . sprintf ( ""%s %s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 , esc12 ) ;"	7265:1:198218:198389	3277576	28	True				
ANR	3277921	IdentifierDecl	"x = reqline . sprintf ( ""%s %s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 , esc12 )"		3277576	0					
ANR	3277922	IdentifierDeclType	bool		3277576	0					
ANR	3277923	Identifier	x		3277576	1					
ANR	3277924	AssignmentExpression	"x = reqline . sprintf ( ""%s %s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 , esc12 )"		3277576	2		=			
ANR	3277925	Identifier	x		3277576	0					
ANR	3277926	CallExpression	"reqline . sprintf ( ""%s %s %s %s %s %s %s %s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 , esc6 , esc7 , esc8 , esc9 , esc10 , esc11 , esc12 )"		3277576	1					
ANR	3277927	Callee	reqline . sprintf		3277576	0					
ANR	3277928	MemberAccess	reqline . sprintf		3277576	0					
ANR	3277929	Identifier	reqline		3277576	0					
ANR	3277930	Identifier	sprintf		3277576	1					
ANR	3277931	ArgumentList	"""%s %s %s %s %s %s %s %s %s %s %s %s"""		3277576	1					
ANR	3277932	Argument	"""%s %s %s %s %s %s %s %s %s %s %s %s"""		3277576	0					
ANR	3277933	PrimaryExpression	"""%s %s %s %s %s %s %s %s %s %s %s %s"""		3277576	0					
ANR	3277934	Argument	esc1		3277576	1					
ANR	3277935	Identifier	esc1		3277576	0					
ANR	3277936	Argument	esc2		3277576	2					
ANR	3277937	Identifier	esc2		3277576	0					
ANR	3277938	Argument	esc3		3277576	3					
ANR	3277939	Identifier	esc3		3277576	0					
ANR	3277940	Argument	esc4		3277576	4					
ANR	3277941	Identifier	esc4		3277576	0					
ANR	3277942	Argument	esc5		3277576	5					
ANR	3277943	Identifier	esc5		3277576	0					
ANR	3277944	Argument	esc6		3277576	6					
ANR	3277945	Identifier	esc6		3277576	0					
ANR	3277946	Argument	esc7		3277576	7					
ANR	3277947	Identifier	esc7		3277576	0					
ANR	3277948	Argument	esc8		3277576	8					
ANR	3277949	Identifier	esc8		3277576	0					
ANR	3277950	Argument	esc9		3277576	9					
ANR	3277951	Identifier	esc9		3277576	0					
ANR	3277952	Argument	esc10		3277576	10					
ANR	3277953	Identifier	esc10		3277576	0					
ANR	3277954	Argument	esc11		3277576	11					
ANR	3277955	Identifier	esc11		3277576	0					
ANR	3277956	Argument	esc12		3277576	12					
ANR	3277957	Identifier	esc12		3277576	0					
ANR	3277958	ExpressionStatement	free ( esc1 )	7268:1:198393:198405	3277576	29	True				
ANR	3277959	CallExpression	free ( esc1 )		3277576	0					
ANR	3277960	Callee	free		3277576	0					
ANR	3277961	Identifier	free		3277576	0					
ANR	3277962	ArgumentList	esc1		3277576	1					
ANR	3277963	Argument	esc1		3277576	0					
ANR	3277964	Identifier	esc1		3277576	0					
ANR	3277965	ExpressionStatement	free ( esc2 )	7269:1:198408:198420	3277576	30	True				
ANR	3277966	CallExpression	free ( esc2 )		3277576	0					
ANR	3277967	Callee	free		3277576	0					
ANR	3277968	Identifier	free		3277576	0					
ANR	3277969	ArgumentList	esc2		3277576	1					
ANR	3277970	Argument	esc2		3277576	0					
ANR	3277971	Identifier	esc2		3277576	0					
ANR	3277972	ExpressionStatement	free ( esc3 )	7270:1:198423:198435	3277576	31	True				
ANR	3277973	CallExpression	free ( esc3 )		3277576	0					
ANR	3277974	Callee	free		3277576	0					
ANR	3277975	Identifier	free		3277576	0					
ANR	3277976	ArgumentList	esc3		3277576	1					
ANR	3277977	Argument	esc3		3277576	0					
ANR	3277978	Identifier	esc3		3277576	0					
ANR	3277979	ExpressionStatement	free ( esc4 )	7271:1:198438:198450	3277576	32	True				
ANR	3277980	CallExpression	free ( esc4 )		3277576	0					
ANR	3277981	Callee	free		3277576	0					
ANR	3277982	Identifier	free		3277576	0					
ANR	3277983	ArgumentList	esc4		3277576	1					
ANR	3277984	Argument	esc4		3277576	0					
ANR	3277985	Identifier	esc4		3277576	0					
ANR	3277986	ExpressionStatement	free ( esc5 )	7272:1:198453:198465	3277576	33	True				
ANR	3277987	CallExpression	free ( esc5 )		3277576	0					
ANR	3277988	Callee	free		3277576	0					
ANR	3277989	Identifier	free		3277576	0					
ANR	3277990	ArgumentList	esc5		3277576	1					
ANR	3277991	Argument	esc5		3277576	0					
ANR	3277992	Identifier	esc5		3277576	0					
ANR	3277993	ExpressionStatement	free ( esc6 )	7273:1:198468:198480	3277576	34	True				
ANR	3277994	CallExpression	free ( esc6 )		3277576	0					
ANR	3277995	Callee	free		3277576	0					
ANR	3277996	Identifier	free		3277576	0					
ANR	3277997	ArgumentList	esc6		3277576	1					
ANR	3277998	Argument	esc6		3277576	0					
ANR	3277999	Identifier	esc6		3277576	0					
ANR	3278000	ExpressionStatement	free ( esc7 )	7274:1:198483:198495	3277576	35	True				
ANR	3278001	CallExpression	free ( esc7 )		3277576	0					
ANR	3278002	Callee	free		3277576	0					
ANR	3278003	Identifier	free		3277576	0					
ANR	3278004	ArgumentList	esc7		3277576	1					
ANR	3278005	Argument	esc7		3277576	0					
ANR	3278006	Identifier	esc7		3277576	0					
ANR	3278007	ExpressionStatement	free ( esc8 )	7275:1:198498:198510	3277576	36	True				
ANR	3278008	CallExpression	free ( esc8 )		3277576	0					
ANR	3278009	Callee	free		3277576	0					
ANR	3278010	Identifier	free		3277576	0					
ANR	3278011	ArgumentList	esc8		3277576	1					
ANR	3278012	Argument	esc8		3277576	0					
ANR	3278013	Identifier	esc8		3277576	0					
ANR	3278014	ExpressionStatement	free ( esc9 )	7276:1:198513:198525	3277576	37	True				
ANR	3278015	CallExpression	free ( esc9 )		3277576	0					
ANR	3278016	Callee	free		3277576	0					
ANR	3278017	Identifier	free		3277576	0					
ANR	3278018	ArgumentList	esc9		3277576	1					
ANR	3278019	Argument	esc9		3277576	0					
ANR	3278020	Identifier	esc9		3277576	0					
ANR	3278021	ExpressionStatement	free ( esc10 )	7277:1:198528:198541	3277576	38	True				
ANR	3278022	CallExpression	free ( esc10 )		3277576	0					
ANR	3278023	Callee	free		3277576	0					
ANR	3278024	Identifier	free		3277576	0					
ANR	3278025	ArgumentList	esc10		3277576	1					
ANR	3278026	Argument	esc10		3277576	0					
ANR	3278027	Identifier	esc10		3277576	0					
ANR	3278028	ExpressionStatement	free ( esc11 )	7278:1:198544:198557	3277576	39	True				
ANR	3278029	CallExpression	free ( esc11 )		3277576	0					
ANR	3278030	Callee	free		3277576	0					
ANR	3278031	Identifier	free		3277576	0					
ANR	3278032	ArgumentList	esc11		3277576	1					
ANR	3278033	Argument	esc11		3277576	0					
ANR	3278034	Identifier	esc11		3277576	0					
ANR	3278035	ExpressionStatement	free ( esc12 )	7279:1:198560:198573	3277576	40	True				
ANR	3278036	CallExpression	free ( esc12 )		3277576	0					
ANR	3278037	Callee	free		3277576	0					
ANR	3278038	Identifier	free		3277576	0					
ANR	3278039	ArgumentList	esc12		3277576	1					
ANR	3278040	Argument	esc12		3277576	0					
ANR	3278041	Identifier	esc12		3277576	0					
ANR	3278042	ExpressionStatement	ASSERT ( x == true )	7280:1:198576:198595	3277576	41	True				
ANR	3278043	CallExpression	ASSERT ( x == true )		3277576	0					
ANR	3278044	Callee	ASSERT		3277576	0					
ANR	3278045	Identifier	ASSERT		3277576	0					
ANR	3278046	ArgumentList	x == true		3277576	1					
ANR	3278047	Argument	x == true		3277576	0					
ANR	3278048	EqualityExpression	x == true		3277576	0		==			
ANR	3278049	Identifier	x		3277576	0					
ANR	3278050	Identifier	true		3277576	1					
ANR	3278051	IdentifierDeclStatement	const char * buf = reqline . Value ( ) ;	7282:1:198599:198632	3277576	42	True				
ANR	3278052	IdentifierDecl	* buf = reqline . Value ( )		3277576	0					
ANR	3278053	IdentifierDeclType	const char *		3277576	0					
ANR	3278054	Identifier	buf		3277576	1					
ANR	3278055	AssignmentExpression	* buf = reqline . Value ( )		3277576	2		=			
ANR	3278056	Identifier	buf		3277576	0					
ANR	3278057	CallExpression	reqline . Value ( )		3277576	1					
ANR	3278058	Callee	reqline . Value		3277576	0					
ANR	3278059	MemberAccess	reqline . Value		3277576	0					
ANR	3278060	Identifier	reqline		3277576	0					
ANR	3278061	Identifier	Value		3277576	1					
ANR	3278062	ArgumentList			3277576	1					
ANR	3278063	IfStatement	"if ( ! is_pending ( command , buf ) )"		3277576	43					
ANR	3278064	Condition	"! is_pending ( command , buf )"	7284:6:198725:198748	3277576	0	True				
ANR	3278065	UnaryOperationExpression	"! is_pending ( command , buf )"		3277576	0					
ANR	3278066	UnaryOperator	!		3277576	0					
ANR	3278067	CallExpression	"is_pending ( command , buf )"		3277576	1					
ANR	3278068	Callee	is_pending		3277576	0					
ANR	3278069	Identifier	is_pending		3277576	0					
ANR	3278070	ArgumentList	command		3277576	1					
ANR	3278071	Argument	command		3277576	0					
ANR	3278072	Identifier	command		3277576	0					
ANR	3278073	Argument	buf		3277576	1					
ANR	3278074	Identifier	buf		3277576	0					
ANR	3278075	CompoundStatement		59:33:2092:2092	3277576	1					
ANR	3278076	IfStatement	if ( m_mode == results_only )		3277576	0					
ANR	3278077	Condition	m_mode == results_only	7286:7:198852:198873	3277576	0	True				
ANR	3278078	EqualityExpression	m_mode == results_only		3277576	0		==			
ANR	3278079	Identifier	m_mode		3277576	0					
ANR	3278080	Identifier	results_only		3277576	1					
ANR	3278081	CompoundStatement		61:32:2217:2217	3277576	1					
ANR	3278082	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7287:3:198882:198921	3277576	0	True				
ANR	3278083	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3277576	0					
ANR	3278084	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7289:2:198929:198967	3277576	1	True				
ANR	3278085	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3277576	0					
ANR	3278086	Callee	now_pending		3277576	0					
ANR	3278087	Identifier	now_pending		3277576	0					
ANR	3278088	ArgumentList	command		3277576	1					
ANR	3278089	Argument	command		3277576	0					
ANR	3278090	Identifier	command		3277576	0					
ANR	3278091	Argument	buf		3277576	1					
ANR	3278092	Identifier	buf		3277576	0					
ANR	3278093	Argument	deleg_proxy		3277576	2					
ANR	3278094	Identifier	deleg_proxy		3277576	0					
ANR	3278095	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7295:1:199057:199109	3277576	44	True				
ANR	3278096	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3277576	0					
ANR	3278097	IdentifierDeclType	Gahp_Args *		3277576	0					
ANR	3278098	Identifier	result		3277576	1					
ANR	3278099	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3277576	2		=			
ANR	3278100	Identifier	result		3277576	0					
ANR	3278101	CallExpression	"get_pending_result ( command , buf )"		3277576	1					
ANR	3278102	Callee	get_pending_result		3277576	0					
ANR	3278103	Identifier	get_pending_result		3277576	0					
ANR	3278104	ArgumentList	command		3277576	1					
ANR	3278105	Argument	command		3277576	0					
ANR	3278106	Identifier	command		3277576	0					
ANR	3278107	Argument	buf		3277576	1					
ANR	3278108	Identifier	buf		3277576	0					
ANR	3278109	IfStatement	if ( result )		3277576	45					
ANR	3278110	Condition	result	7301:6:199241:199246	3277576	0	True				
ANR	3278111	Identifier	result		3277576	0					
ANR	3278112	CompoundStatement		78:2:2620:2630	3277576	1					
ANR	3278113	IdentifierDeclStatement	int rc = 0 ;	7303:2:199280:199290	3277576	0	True				
ANR	3278114	IdentifierDecl	rc = 0		3277576	0					
ANR	3278115	IdentifierDeclType	int		3277576	0					
ANR	3278116	Identifier	rc		3277576	1					
ANR	3278117	AssignmentExpression	rc = 0		3277576	2		=			
ANR	3278118	Identifier	rc		3277576	0					
ANR	3278119	PrimaryExpression	0		3277576	1					
ANR	3278120	IfStatement	if ( result -> argc < 2 )		3277576	1					
ANR	3278121	Condition	result -> argc < 2	7304:7:199299:199314	3277576	0	True				
ANR	3278122	RelationalExpression	result -> argc < 2		3277576	0		<			
ANR	3278123	PtrMemberAccess	result -> argc		3277576	0					
ANR	3278124	Identifier	result		3277576	0					
ANR	3278125	Identifier	argc		3277576	1					
ANR	3278126	PrimaryExpression	2		3277576	1					
ANR	3278127	CompoundStatement		79:26:2658:2658	3277576	1					
ANR	3278128	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7305:3:199323:199357	3277576	0	True				
ANR	3278129	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3277576	0					
ANR	3278130	Callee	EXCEPT		3277576	0					
ANR	3278131	Identifier	EXCEPT		3277576	0					
ANR	3278132	ArgumentList	"""Bad %s result"""		3277576	1					
ANR	3278133	Argument	"""Bad %s result"""		3277576	0					
ANR	3278134	PrimaryExpression	"""Bad %s result"""		3277576	0					
ANR	3278135	Argument	command		3277576	1					
ANR	3278136	Identifier	command		3277576	0					
ANR	3278137	ElseStatement	else		3277576	0					
ANR	3278138	IfStatement	if ( result -> argc == 2 )		3277576	0					
ANR	3278139	Condition	result -> argc == 2	7306:14:199373:199389	3277576	0	True				
ANR	3278140	EqualityExpression	result -> argc == 2		3277576	0		==			
ANR	3278141	PtrMemberAccess	result -> argc		3277576	0					
ANR	3278142	Identifier	result		3277576	0					
ANR	3278143	Identifier	argc		3277576	1					
ANR	3278144	PrimaryExpression	2		3277576	1					
ANR	3278145	CompoundStatement		81:34:2733:2733	3277576	1					
ANR	3278146	IfStatement	"if ( ! strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3277576	0					
ANR	3278147	Condition	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7307:8:199403:199440	3277576	0	True				
ANR	3278148	UnaryOperationExpression	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3277576	0					
ANR	3278149	UnaryOperator	!		3277576	0					
ANR	3278150	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3277576	1					
ANR	3278151	Callee	strcmp		3277576	0					
ANR	3278152	Identifier	strcmp		3277576	0					
ANR	3278153	ArgumentList	result -> argv [ 1 ]		3277576	1					
ANR	3278154	Argument	result -> argv [ 1 ]		3277576	0					
ANR	3278155	ArrayIndexing	result -> argv [ 1 ]		3277576	0					
ANR	3278156	PtrMemberAccess	result -> argv		3277576	0					
ANR	3278157	Identifier	result		3277576	0					
ANR	3278158	Identifier	argv		3277576	1					
ANR	3278159	PrimaryExpression	1		3277576	1					
ANR	3278160	Argument	NULLSTRING		3277576	1					
ANR	3278161	Identifier	NULLSTRING		3277576	0					
ANR	3278162	CompoundStatement		82:49:2784:2784	3277576	1					
ANR	3278163	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7308:4:199450:199484	3277576	0	True				
ANR	3278164	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3277576	0					
ANR	3278165	Callee	EXCEPT		3277576	0					
ANR	3278166	Identifier	EXCEPT		3277576	0					
ANR	3278167	ArgumentList	"""Bad %s result"""		3277576	1					
ANR	3278168	Argument	"""Bad %s result"""		3277576	0					
ANR	3278169	PrimaryExpression	"""Bad %s result"""		3277576	0					
ANR	3278170	Argument	command		3277576	1					
ANR	3278171	Identifier	command		3277576	0					
ANR	3278172	ExpressionStatement	error_string = result -> argv [ 1 ]	7310:3:199494:199524	3277576	1	True				
ANR	3278173	AssignmentExpression	error_string = result -> argv [ 1 ]		3277576	0		=			
ANR	3278174	Identifier	error_string		3277576	0					
ANR	3278175	ArrayIndexing	result -> argv [ 1 ]		3277576	1					
ANR	3278176	PtrMemberAccess	result -> argv		3277576	0					
ANR	3278177	Identifier	result		3277576	0					
ANR	3278178	Identifier	argv		3277576	1					
ANR	3278179	PrimaryExpression	1		3277576	1					
ANR	3278180	ExpressionStatement	rc = 1	7311:3:199529:199535	3277576	2	True				
ANR	3278181	AssignmentExpression	rc = 1		3277576	0		=			
ANR	3278182	Identifier	rc		3277576	0					
ANR	3278183	PrimaryExpression	1		3277576	1					
ANR	3278184	ElseStatement	else		3277576	0					
ANR	3278185	CompoundStatement		87:9:2886:2886	3277576	0					
ANR	3278186	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3277576	0					
ANR	3278187	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7313:8:199556:199592	3277576	0	True				
ANR	3278188	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3277576	0					
ANR	3278189	Callee	strcmp		3277576	0					
ANR	3278190	Identifier	strcmp		3277576	0					
ANR	3278191	ArgumentList	result -> argv [ 1 ]		3277576	1					
ANR	3278192	Argument	result -> argv [ 1 ]		3277576	0					
ANR	3278193	ArrayIndexing	result -> argv [ 1 ]		3277576	0					
ANR	3278194	PtrMemberAccess	result -> argv		3277576	0					
ANR	3278195	Identifier	result		3277576	0					
ANR	3278196	Identifier	argv		3277576	1					
ANR	3278197	PrimaryExpression	1		3277576	1					
ANR	3278198	Argument	NULLSTRING		3277576	1					
ANR	3278199	Identifier	NULLSTRING		3277576	0					
ANR	3278200	CompoundStatement		88:48:2936:2936	3277576	1					
ANR	3278201	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7314:4:199602:199636	3277576	0	True				
ANR	3278202	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3277576	0					
ANR	3278203	Callee	EXCEPT		3277576	0					
ANR	3278204	Identifier	EXCEPT		3277576	0					
ANR	3278205	ArgumentList	"""Bad %s result"""		3277576	1					
ANR	3278206	Argument	"""Bad %s result"""		3277576	0					
ANR	3278207	PrimaryExpression	"""Bad %s result"""		3277576	0					
ANR	3278208	Argument	command		3277576	1					
ANR	3278209	Identifier	command		3277576	0					
ANR	3278210	ExpressionStatement	attrs . clearAll ( )	7316:3:199646:199662	3277576	1	True				
ANR	3278211	CallExpression	attrs . clearAll ( )		3277576	0					
ANR	3278212	Callee	attrs . clearAll		3277576	0					
ANR	3278213	MemberAccess	attrs . clearAll		3277576	0					
ANR	3278214	Identifier	attrs		3277576	0					
ANR	3278215	Identifier	clearAll		3277576	1					
ANR	3278216	ArgumentList			3277576	1					
ANR	3278217	ForStatement	for ( int i = 2 ; i < result -> argc ; i ++ )		3277576	2					
ANR	3278218	ForInit	int i = 2 ;	7317:9:199673:199682	3277576	0	True				
ANR	3278219	IdentifierDeclStatement	int i = 2 ;		3277576	0					
ANR	3278220	IdentifierDecl	i = 2		3277576	0					
ANR	3278221	IdentifierDeclType	int		3277576	0					
ANR	3278222	Identifier	i		3277576	1					
ANR	3278223	AssignmentExpression	i = 2		3277576	2		=			
ANR	3278224	Identifier	i		3277576	0					
ANR	3278225	PrimaryExpression	2		3277576	1					
ANR	3278226	Condition	i < result -> argc	7317:20:199684:199699	3277576	1	True				
ANR	3278227	RelationalExpression	i < result -> argc		3277576	0		<			
ANR	3278228	Identifier	i		3277576	0					
ANR	3278229	PtrMemberAccess	result -> argc		3277576	1					
ANR	3278230	Identifier	result		3277576	0					
ANR	3278231	Identifier	argc		3277576	1					
ANR	3278232	PostIncDecOperationExpression	i ++	7317:38:199702:199704	3277576	2	True				
ANR	3278233	Identifier	i		3277576	0					
ANR	3278234	IncDec	++		3277576	1					
ANR	3278235	CompoundStatement		92:44:3048:3048	3277576	3					
ANR	3278236	ExpressionStatement	attrs . append ( result -> argv [ i ] )	7318:4:199714:199745	3277576	0	True				
ANR	3278237	CallExpression	attrs . append ( result -> argv [ i ] )		3277576	0					
ANR	3278238	Callee	attrs . append		3277576	0					
ANR	3278239	MemberAccess	attrs . append		3277576	0					
ANR	3278240	Identifier	attrs		3277576	0					
ANR	3278241	Identifier	append		3277576	1					
ANR	3278242	ArgumentList	result -> argv [ i ]		3277576	1					
ANR	3278243	Argument	result -> argv [ i ]		3277576	0					
ANR	3278244	ArrayIndexing	result -> argv [ i ]		3277576	0					
ANR	3278245	PtrMemberAccess	result -> argv		3277576	0					
ANR	3278246	Identifier	result		3277576	0					
ANR	3278247	Identifier	argv		3277576	1					
ANR	3278248	Identifier	i		3277576	1					
ANR	3278249	Statement	delete	7322:2:199759:199764	3277576	2	True				
ANR	3278250	ExpressionStatement	result	7322:9:199766:199772	3277576	3	True				
ANR	3278251	Identifier	result		3277576	0					
ANR	3278252	ReturnStatement	return rc ;	7323:2:199776:199785	3277576	4	True				
ANR	3278253	Identifier	rc		3277576	0					
ANR	3278254	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3277576	46					
ANR	3278255	Condition	"check_pending_timeout ( command , buf )"	7327:6:199841:199875	3277576	0	True				
ANR	3278256	CallExpression	"check_pending_timeout ( command , buf )"		3277576	0					
ANR	3278257	Callee	check_pending_timeout		3277576	0					
ANR	3278258	Identifier	check_pending_timeout		3277576	0					
ANR	3278259	ArgumentList	command		3277576	1					
ANR	3278260	Argument	command		3277576	0					
ANR	3278261	Identifier	command		3277576	0					
ANR	3278262	Argument	buf		3277576	1					
ANR	3278263	Identifier	buf		3277576	0					
ANR	3278264	CompoundStatement		103:1:3221:3221	3277576	1					
ANR	3278265	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7330:2:199917:199965	3277576	0	True				
ANR	3278266	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3277576	0					
ANR	3278267	Callee	sprintf		3277576	0					
ANR	3278268	Identifier	sprintf		3277576	0					
ANR	3278269	ArgumentList	error_string		3277576	1					
ANR	3278270	Argument	error_string		3277576	0					
ANR	3278271	Identifier	error_string		3277576	0					
ANR	3278272	Argument	"""%s timed out"""		3277576	1					
ANR	3278273	PrimaryExpression	"""%s timed out"""		3277576	0					
ANR	3278274	Argument	command		3277576	2					
ANR	3278275	Identifier	command		3277576	0					
ANR	3278276	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7331:2:199969:200004	3277576	1	True				
ANR	3278277	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3277576	0					
ANR	3278278	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7335:1:200063:200096	3277576	47	True				
ANR	3278279	Identifier	GAHPCLIENT_COMMAND_PENDING		3277576	0					
ANR	3278280	ReturnType	int		3277576	1					
ANR	3278281	Identifier	GahpClient :: dcloud_submit		3277576	2					
ANR	3278282	ParameterList	"const char * service_url , const char * username , const char * password , const char * image_id , const char * instance_name , const char * realm_id , const char * hwp_id , const char * hwp_memory , const char * hwp_cpu , const char * hwp_storage , const char * keyname , const char * userdata , StringList & attrs"		3277576	3					
ANR	3278283	Parameter	const char * service_url	7213:31:196246:196268	3277576	0	True				
ANR	3278284	ParameterType	const char *		3277576	0					
ANR	3278285	Identifier	service_url		3277576	1					
ANR	3278286	Parameter	const char * username	7214:10:196281:196300	3277576	1	True				
ANR	3278287	ParameterType	const char *		3277576	0					
ANR	3278288	Identifier	username		3277576	1					
ANR	3278289	Parameter	const char * password	7215:10:196313:196332	3277576	2	True				
ANR	3278290	ParameterType	const char *		3277576	0					
ANR	3278291	Identifier	password		3277576	1					
ANR	3278292	Parameter	const char * image_id	7216:10:196345:196364	3277576	3	True				
ANR	3278293	ParameterType	const char *		3277576	0					
ANR	3278294	Identifier	image_id		3277576	1					
ANR	3278295	Parameter	const char * instance_name	7217:10:196377:196401	3277576	4	True				
ANR	3278296	ParameterType	const char *		3277576	0					
ANR	3278297	Identifier	instance_name		3277576	1					
ANR	3278298	Parameter	const char * realm_id	7218:10:196414:196433	3277576	5	True				
ANR	3278299	ParameterType	const char *		3277576	0					
ANR	3278300	Identifier	realm_id		3277576	1					
ANR	3278301	Parameter	const char * hwp_id	7219:10:196446:196463	3277576	6	True				
ANR	3278302	ParameterType	const char *		3277576	0					
ANR	3278303	Identifier	hwp_id		3277576	1					
ANR	3278304	Parameter	const char * hwp_memory	7220:10:196476:196497	3277576	7	True				
ANR	3278305	ParameterType	const char *		3277576	0					
ANR	3278306	Identifier	hwp_memory		3277576	1					
ANR	3278307	Parameter	const char * hwp_cpu	7221:10:196510:196528	3277576	8	True				
ANR	3278308	ParameterType	const char *		3277576	0					
ANR	3278309	Identifier	hwp_cpu		3277576	1					
ANR	3278310	Parameter	const char * hwp_storage	7222:10:196541:196563	3277576	9	True				
ANR	3278311	ParameterType	const char *		3277576	0					
ANR	3278312	Identifier	hwp_storage		3277576	1					
ANR	3278313	Parameter	const char * keyname	7223:10:196576:196594	3277576	10	True				
ANR	3278314	ParameterType	const char *		3277576	0					
ANR	3278315	Identifier	keyname		3277576	1					
ANR	3278316	Parameter	const char * userdata	7224:10:196607:196626	3277576	11	True				
ANR	3278317	ParameterType	const char *		3277576	0					
ANR	3278318	Identifier	userdata		3277576	1					
ANR	3278319	Parameter	StringList & attrs	7225:10:196639:196655	3277576	12	True				
ANR	3278320	ParameterType	StringList &		3277576	0					
ANR	3278321	Identifier	attrs		3277576	1					
ANR	3278322	CFGEntryNode	ENTRY		3277576		True				
ANR	3278323	CFGExitNode	EXIT		3277576		True				
ANR	3278324	Symbol	reqline . sprintf		3277576						
ANR	3278325	Symbol	server -> m_commands_supported		3277576						
ANR	3278326	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3277576						
ANR	3278327	Symbol	realm_id		3277576						
ANR	3278328	Symbol	esc11		3277576						
ANR	3278329	Symbol	esc10		3277576						
ANR	3278330	Symbol	password		3277576						
ANR	3278331	Symbol	esc12		3277576						
ANR	3278332	Symbol	server -> m_commands_supported -> contains_anycase		3277576						
ANR	3278333	Symbol	GAHPCLIENT_COMMAND_PENDING		3277576						
ANR	3278334	Symbol	keyname		3277576						
ANR	3278335	Symbol	strcmp		3277576						
ANR	3278336	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3277576						
ANR	3278337	Symbol	* * result		3277576						
ANR	3278338	Symbol	attrs		3277576						
ANR	3278339	Symbol	get_pending_result		3277576						
ANR	3278340	Symbol	rc		3277576						
ANR	3278341	Symbol	reqline . Value		3277576						
ANR	3278342	Symbol	true		3277576						
ANR	3278343	Symbol	image_id		3277576						
ANR	3278344	Symbol	is_pending		3277576						
ANR	3278345	Symbol	deleg_proxy		3277576						
ANR	3278346	Symbol	hwp_storage		3277576						
ANR	3278347	Symbol	server		3277576						
ANR	3278348	Symbol	escapeGahpString		3277576						
ANR	3278349	Symbol	* server		3277576						
ANR	3278350	Symbol	hwp_cpu		3277576						
ANR	3278351	Symbol	esc9		3277576						
ANR	3278352	Symbol	esc8		3277576						
ANR	3278353	Symbol	esc7		3277576						
ANR	3278354	Symbol	results_only		3277576						
ANR	3278355	Symbol	result -> argv		3277576						
ANR	3278356	Symbol	esc6		3277576						
ANR	3278357	Symbol	* server -> m_commands_supported		3277576						
ANR	3278358	Symbol	esc5		3277576						
ANR	3278359	Symbol	result		3277576						
ANR	3278360	Symbol	userdata		3277576						
ANR	3278361	Symbol	* result		3277576						
ANR	3278362	Symbol	reqline		3277576						
ANR	3278363	Symbol	m_mode		3277576						
ANR	3278364	Symbol	* result -> argv		3277576						
ANR	3278365	Symbol	hwp_id		3277576						
ANR	3278366	Symbol	instance_name		3277576						
ANR	3278367	Symbol	hwp_memory		3277576						
ANR	3278368	Symbol	i		3277576						
ANR	3278369	Symbol	NULLSTRING		3277576						
ANR	3278370	Symbol	command		3277576						
ANR	3278371	Symbol	esc4		3277576						
ANR	3278372	Symbol	service_url		3277576						
ANR	3278373	Symbol	esc3		3277576						
ANR	3278374	Symbol	error_string		3277576						
ANR	3278375	Symbol	esc2		3277576						
ANR	3278376	Symbol	buf		3277576						
ANR	3278377	Symbol	esc1		3277576						
ANR	3278378	Symbol	* i		3277576						
ANR	3278379	Symbol	x		3277576						
ANR	3278380	Symbol	result -> argc		3277576						
ANR	3278381	Symbol	FALSE		3277576						
ANR	3278382	Symbol	* * server		3277576						
ANR	3278383	Symbol	strdup		3277576						
ANR	3278384	Symbol	check_pending_timeout		3277576						
ANR	3278385	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3277576						
ANR	3278386	Symbol	username		3277576						
ANR	3278387	Function	GahpClient :: dcloud_status_all	7338:0:200102:202913							
ANR	3278388	FunctionDef	"GahpClient :: dcloud_status_all (const char * service_url , const char * username , const char * password , StringList & instance_ids , StringList & statuses)"		3278387	0					
ANR	3278389	CompoundStatement		7343:0:200299:202913	3278387	0					
ANR	3278390	Statement	static	7345:1:200375:200380	3278387	0	True				
ANR	3278391	IdentifierDeclStatement	"const char * command = ""DELTACLOUD_VM_STATUS_ALL"" ;"	7345:8:200382:200430	3278387	1	True				
ANR	3278392	IdentifierDecl	"* command = ""DELTACLOUD_VM_STATUS_ALL"""		3278387	0					
ANR	3278393	IdentifierDeclType	const char *		3278387	0					
ANR	3278394	Identifier	command		3278387	1					
ANR	3278395	AssignmentExpression	"* command = ""DELTACLOUD_VM_STATUS_ALL"""		3278387	2		=			
ANR	3278396	Identifier	command		3278387	0					
ANR	3278397	PrimaryExpression	"""DELTACLOUD_VM_STATUS_ALL"""		3278387	1					
ANR	3278398	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3278387	2					
ANR	3278399	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7348:6:200478:200543	3278387	0	True				
ANR	3278400	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3278387	0		==			
ANR	3278401	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3278387	0					
ANR	3278402	Callee	server -> m_commands_supported -> contains_anycase		3278387	0					
ANR	3278403	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3278387	0					
ANR	3278404	PtrMemberAccess	server -> m_commands_supported		3278387	0					
ANR	3278405	Identifier	server		3278387	0					
ANR	3278406	Identifier	m_commands_supported		3278387	1					
ANR	3278407	Identifier	contains_anycase		3278387	1					
ANR	3278408	ArgumentList	command		3278387	1					
ANR	3278409	Argument	command		3278387	0					
ANR	3278410	Identifier	command		3278387	0					
ANR	3278411	Identifier	FALSE		3278387	1					
ANR	3278412	CompoundStatement		6:75:247:247	3278387	1					
ANR	3278413	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7349:2:200551:200590	3278387	0	True				
ANR	3278414	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3278387	0					
ANR	3278415	IfStatement	if ( ! service_url )		3278387	3					
ANR	3278416	Condition	! service_url	7353:6:200628:200639	3278387	0	True				
ANR	3278417	UnaryOperationExpression	! service_url		3278387	0					
ANR	3278418	UnaryOperator	!		3278387	0					
ANR	3278419	Identifier	service_url		3278387	1					
ANR	3278420	ExpressionStatement	service_url = NULLSTRING	7353:21:200643:200667	3278387	1	True				
ANR	3278421	AssignmentExpression	service_url = NULLSTRING		3278387	0		=			
ANR	3278422	Identifier	service_url		3278387	0					
ANR	3278423	Identifier	NULLSTRING		3278387	1					
ANR	3278424	IfStatement	if ( ! username )		3278387	4					
ANR	3278425	Condition	! username	7354:6:200675:200683	3278387	0	True				
ANR	3278426	UnaryOperationExpression	! username		3278387	0					
ANR	3278427	UnaryOperator	!		3278387	0					
ANR	3278428	Identifier	username		3278387	1					
ANR	3278429	ExpressionStatement	username = NULLSTRING	7354:18:200687:200708	3278387	1	True				
ANR	3278430	AssignmentExpression	username = NULLSTRING		3278387	0		=			
ANR	3278431	Identifier	username		3278387	0					
ANR	3278432	Identifier	NULLSTRING		3278387	1					
ANR	3278433	IfStatement	if ( ! password )		3278387	5					
ANR	3278434	Condition	! password	7355:6:200716:200724	3278387	0	True				
ANR	3278435	UnaryOperationExpression	! password		3278387	0					
ANR	3278436	UnaryOperator	!		3278387	0					
ANR	3278437	Identifier	password		3278387	1					
ANR	3278438	ExpressionStatement	password = NULLSTRING	7355:18:200728:200749	3278387	1	True				
ANR	3278439	AssignmentExpression	password = NULLSTRING		3278387	0		=			
ANR	3278440	Identifier	password		3278387	0					
ANR	3278441	Identifier	NULLSTRING		3278387	1					
ANR	3278442	IdentifierDeclStatement	MyString reqline ;	7357:1:200753:200769	3278387	6	True				
ANR	3278443	IdentifierDecl	reqline		3278387	0					
ANR	3278444	IdentifierDeclType	MyString		3278387	0					
ANR	3278445	Identifier	reqline		3278387	1					
ANR	3278446	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7359:1:200773:200825	3278387	7	True				
ANR	3278447	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3278387	0					
ANR	3278448	IdentifierDeclType	char *		3278387	0					
ANR	3278449	Identifier	esc1		3278387	1					
ANR	3278450	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3278387	2		=			
ANR	3278451	Identifier	esc1		3278387	0					
ANR	3278452	CallExpression	strdup ( escapeGahpString ( service_url ) )		3278387	1					
ANR	3278453	Callee	strdup		3278387	0					
ANR	3278454	Identifier	strdup		3278387	0					
ANR	3278455	ArgumentList	escapeGahpString ( service_url )		3278387	1					
ANR	3278456	Argument	escapeGahpString ( service_url )		3278387	0					
ANR	3278457	CallExpression	escapeGahpString ( service_url )		3278387	0					
ANR	3278458	Callee	escapeGahpString		3278387	0					
ANR	3278459	Identifier	escapeGahpString		3278387	0					
ANR	3278460	ArgumentList	service_url		3278387	1					
ANR	3278461	Argument	service_url		3278387	0					
ANR	3278462	Identifier	service_url		3278387	0					
ANR	3278463	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( username ) ) ;	7360:1:200828:200877	3278387	8	True				
ANR	3278464	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( username ) )		3278387	0					
ANR	3278465	IdentifierDeclType	char *		3278387	0					
ANR	3278466	Identifier	esc2		3278387	1					
ANR	3278467	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( username ) )		3278387	2		=			
ANR	3278468	Identifier	esc2		3278387	0					
ANR	3278469	CallExpression	strdup ( escapeGahpString ( username ) )		3278387	1					
ANR	3278470	Callee	strdup		3278387	0					
ANR	3278471	Identifier	strdup		3278387	0					
ANR	3278472	ArgumentList	escapeGahpString ( username )		3278387	1					
ANR	3278473	Argument	escapeGahpString ( username )		3278387	0					
ANR	3278474	CallExpression	escapeGahpString ( username )		3278387	0					
ANR	3278475	Callee	escapeGahpString		3278387	0					
ANR	3278476	Identifier	escapeGahpString		3278387	0					
ANR	3278477	ArgumentList	username		3278387	1					
ANR	3278478	Argument	username		3278387	0					
ANR	3278479	Identifier	username		3278387	0					
ANR	3278480	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( password ) ) ;	7361:1:200880:200929	3278387	9	True				
ANR	3278481	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( password ) )		3278387	0					
ANR	3278482	IdentifierDeclType	char *		3278387	0					
ANR	3278483	Identifier	esc3		3278387	1					
ANR	3278484	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( password ) )		3278387	2		=			
ANR	3278485	Identifier	esc3		3278387	0					
ANR	3278486	CallExpression	strdup ( escapeGahpString ( password ) )		3278387	1					
ANR	3278487	Callee	strdup		3278387	0					
ANR	3278488	Identifier	strdup		3278387	0					
ANR	3278489	ArgumentList	escapeGahpString ( password )		3278387	1					
ANR	3278490	Argument	escapeGahpString ( password )		3278387	0					
ANR	3278491	CallExpression	escapeGahpString ( password )		3278387	0					
ANR	3278492	Callee	escapeGahpString		3278387	0					
ANR	3278493	Identifier	escapeGahpString		3278387	0					
ANR	3278494	ArgumentList	password		3278387	1					
ANR	3278495	Argument	password		3278387	0					
ANR	3278496	Identifier	password		3278387	0					
ANR	3278497	IdentifierDeclStatement	"bool x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 ) ;"	7363:1:200933:200987	3278387	10	True				
ANR	3278498	IdentifierDecl	"x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3278387	0					
ANR	3278499	IdentifierDeclType	bool		3278387	0					
ANR	3278500	Identifier	x		3278387	1					
ANR	3278501	AssignmentExpression	"x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3278387	2		=			
ANR	3278502	Identifier	x		3278387	0					
ANR	3278503	CallExpression	"reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3278387	1					
ANR	3278504	Callee	reqline . sprintf		3278387	0					
ANR	3278505	MemberAccess	reqline . sprintf		3278387	0					
ANR	3278506	Identifier	reqline		3278387	0					
ANR	3278507	Identifier	sprintf		3278387	1					
ANR	3278508	ArgumentList	"""%s %s %s"""		3278387	1					
ANR	3278509	Argument	"""%s %s %s"""		3278387	0					
ANR	3278510	PrimaryExpression	"""%s %s %s"""		3278387	0					
ANR	3278511	Argument	esc1		3278387	1					
ANR	3278512	Identifier	esc1		3278387	0					
ANR	3278513	Argument	esc2		3278387	2					
ANR	3278514	Identifier	esc2		3278387	0					
ANR	3278515	Argument	esc3		3278387	3					
ANR	3278516	Identifier	esc3		3278387	0					
ANR	3278517	ExpressionStatement	free ( esc1 )	7365:1:200991:201003	3278387	11	True				
ANR	3278518	CallExpression	free ( esc1 )		3278387	0					
ANR	3278519	Callee	free		3278387	0					
ANR	3278520	Identifier	free		3278387	0					
ANR	3278521	ArgumentList	esc1		3278387	1					
ANR	3278522	Argument	esc1		3278387	0					
ANR	3278523	Identifier	esc1		3278387	0					
ANR	3278524	ExpressionStatement	free ( esc2 )	7366:1:201006:201018	3278387	12	True				
ANR	3278525	CallExpression	free ( esc2 )		3278387	0					
ANR	3278526	Callee	free		3278387	0					
ANR	3278527	Identifier	free		3278387	0					
ANR	3278528	ArgumentList	esc2		3278387	1					
ANR	3278529	Argument	esc2		3278387	0					
ANR	3278530	Identifier	esc2		3278387	0					
ANR	3278531	ExpressionStatement	free ( esc3 )	7367:1:201021:201033	3278387	13	True				
ANR	3278532	CallExpression	free ( esc3 )		3278387	0					
ANR	3278533	Callee	free		3278387	0					
ANR	3278534	Identifier	free		3278387	0					
ANR	3278535	ArgumentList	esc3		3278387	1					
ANR	3278536	Argument	esc3		3278387	0					
ANR	3278537	Identifier	esc3		3278387	0					
ANR	3278538	ExpressionStatement	ASSERT ( x == true )	7368:1:201036:201055	3278387	14	True				
ANR	3278539	CallExpression	ASSERT ( x == true )		3278387	0					
ANR	3278540	Callee	ASSERT		3278387	0					
ANR	3278541	Identifier	ASSERT		3278387	0					
ANR	3278542	ArgumentList	x == true		3278387	1					
ANR	3278543	Argument	x == true		3278387	0					
ANR	3278544	EqualityExpression	x == true		3278387	0		==			
ANR	3278545	Identifier	x		3278387	0					
ANR	3278546	Identifier	true		3278387	1					
ANR	3278547	IdentifierDeclStatement	const char * buf = reqline . Value ( ) ;	7370:1:201059:201092	3278387	15	True				
ANR	3278548	IdentifierDecl	* buf = reqline . Value ( )		3278387	0					
ANR	3278549	IdentifierDeclType	const char *		3278387	0					
ANR	3278550	Identifier	buf		3278387	1					
ANR	3278551	AssignmentExpression	* buf = reqline . Value ( )		3278387	2		=			
ANR	3278552	Identifier	buf		3278387	0					
ANR	3278553	CallExpression	reqline . Value ( )		3278387	1					
ANR	3278554	Callee	reqline . Value		3278387	0					
ANR	3278555	MemberAccess	reqline . Value		3278387	0					
ANR	3278556	Identifier	reqline		3278387	0					
ANR	3278557	Identifier	Value		3278387	1					
ANR	3278558	ArgumentList			3278387	1					
ANR	3278559	IfStatement	"if ( ! is_pending ( command , buf ) )"		3278387	16					
ANR	3278560	Condition	"! is_pending ( command , buf )"	7372:6:201185:201208	3278387	0	True				
ANR	3278561	UnaryOperationExpression	"! is_pending ( command , buf )"		3278387	0					
ANR	3278562	UnaryOperator	!		3278387	0					
ANR	3278563	CallExpression	"is_pending ( command , buf )"		3278387	1					
ANR	3278564	Callee	is_pending		3278387	0					
ANR	3278565	Identifier	is_pending		3278387	0					
ANR	3278566	ArgumentList	command		3278387	1					
ANR	3278567	Argument	command		3278387	0					
ANR	3278568	Identifier	command		3278387	0					
ANR	3278569	Argument	buf		3278387	1					
ANR	3278570	Identifier	buf		3278387	0					
ANR	3278571	CompoundStatement		30:33:912:912	3278387	1					
ANR	3278572	IfStatement	if ( m_mode == results_only )		3278387	0					
ANR	3278573	Condition	m_mode == results_only	7374:7:201312:201333	3278387	0	True				
ANR	3278574	EqualityExpression	m_mode == results_only		3278387	0		==			
ANR	3278575	Identifier	m_mode		3278387	0					
ANR	3278576	Identifier	results_only		3278387	1					
ANR	3278577	CompoundStatement		32:32:1037:1037	3278387	1					
ANR	3278578	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7375:3:201342:201381	3278387	0	True				
ANR	3278579	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3278387	0					
ANR	3278580	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7377:2:201389:201427	3278387	1	True				
ANR	3278581	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3278387	0					
ANR	3278582	Callee	now_pending		3278387	0					
ANR	3278583	Identifier	now_pending		3278387	0					
ANR	3278584	ArgumentList	command		3278387	1					
ANR	3278585	Argument	command		3278387	0					
ANR	3278586	Identifier	command		3278387	0					
ANR	3278587	Argument	buf		3278387	1					
ANR	3278588	Identifier	buf		3278387	0					
ANR	3278589	Argument	deleg_proxy		3278387	2					
ANR	3278590	Identifier	deleg_proxy		3278387	0					
ANR	3278591	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7383:1:201517:201569	3278387	17	True				
ANR	3278592	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3278387	0					
ANR	3278593	IdentifierDeclType	Gahp_Args *		3278387	0					
ANR	3278594	Identifier	result		3278387	1					
ANR	3278595	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3278387	2		=			
ANR	3278596	Identifier	result		3278387	0					
ANR	3278597	CallExpression	"get_pending_result ( command , buf )"		3278387	1					
ANR	3278598	Callee	get_pending_result		3278387	0					
ANR	3278599	Identifier	get_pending_result		3278387	0					
ANR	3278600	ArgumentList	command		3278387	1					
ANR	3278601	Argument	command		3278387	0					
ANR	3278602	Identifier	command		3278387	0					
ANR	3278603	Argument	buf		3278387	1					
ANR	3278604	Identifier	buf		3278387	0					
ANR	3278605	IfStatement	if ( result )		3278387	18					
ANR	3278606	Condition	result	7389:6:201693:201698	3278387	0	True				
ANR	3278607	Identifier	result		3278387	0					
ANR	3278608	CompoundStatement		49:2:1432:1442	3278387	1					
ANR	3278609	IdentifierDeclStatement	int rc = 0 ;	7391:2:201732:201742	3278387	0	True				
ANR	3278610	IdentifierDecl	rc = 0		3278387	0					
ANR	3278611	IdentifierDeclType	int		3278387	0					
ANR	3278612	Identifier	rc		3278387	1					
ANR	3278613	AssignmentExpression	rc = 0		3278387	2		=			
ANR	3278614	Identifier	rc		3278387	0					
ANR	3278615	PrimaryExpression	0		3278387	1					
ANR	3278616	IfStatement	if ( result -> argc < 2 || result -> argc % 2 != 0 )		3278387	1					
ANR	3278617	Condition	result -> argc < 2 || result -> argc % 2 != 0	7392:7:201751:201791	3278387	0	True				
ANR	3278618	OrExpression	result -> argc < 2 || result -> argc % 2 != 0		3278387	0		||			
ANR	3278619	RelationalExpression	result -> argc < 2		3278387	0		<			
ANR	3278620	PtrMemberAccess	result -> argc		3278387	0					
ANR	3278621	Identifier	result		3278387	0					
ANR	3278622	Identifier	argc		3278387	1					
ANR	3278623	PrimaryExpression	2		3278387	1					
ANR	3278624	EqualityExpression	result -> argc % 2 != 0		3278387	1		!=			
ANR	3278625	MultiplicativeExpression	result -> argc % 2		3278387	0		%			
ANR	3278626	PtrMemberAccess	result -> argc		3278387	0					
ANR	3278627	Identifier	result		3278387	0					
ANR	3278628	Identifier	argc		3278387	1					
ANR	3278629	PrimaryExpression	2		3278387	1					
ANR	3278630	PrimaryExpression	0		3278387	1					
ANR	3278631	CompoundStatement		50:51:1495:1495	3278387	1					
ANR	3278632	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7393:3:201800:201834	3278387	0	True				
ANR	3278633	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3278387	0					
ANR	3278634	Callee	EXCEPT		3278387	0					
ANR	3278635	Identifier	EXCEPT		3278387	0					
ANR	3278636	ArgumentList	"""Bad %s result"""		3278387	1					
ANR	3278637	Argument	"""Bad %s result"""		3278387	0					
ANR	3278638	PrimaryExpression	"""Bad %s result"""		3278387	0					
ANR	3278639	Argument	command		3278387	1					
ANR	3278640	Identifier	command		3278387	0					
ANR	3278641	ElseStatement	else		3278387	0					
ANR	3278642	IfStatement	if ( result -> argc == 2 )		3278387	0					
ANR	3278643	Condition	result -> argc == 2	7394:14:201850:201866	3278387	0	True				
ANR	3278644	EqualityExpression	result -> argc == 2		3278387	0		==			
ANR	3278645	PtrMemberAccess	result -> argc		3278387	0					
ANR	3278646	Identifier	result		3278387	0					
ANR	3278647	Identifier	argc		3278387	1					
ANR	3278648	PrimaryExpression	2		3278387	1					
ANR	3278649	CompoundStatement		52:34:1570:1570	3278387	1					
ANR	3278650	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0 )"		3278387	0					
ANR	3278651	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"	7398:8:202011:202052	3278387	0	True				
ANR	3278652	EqualityExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING ) == 0"		3278387	0		==			
ANR	3278653	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3278387	0					
ANR	3278654	Callee	strcmp		3278387	0					
ANR	3278655	Identifier	strcmp		3278387	0					
ANR	3278656	ArgumentList	result -> argv [ 1 ]		3278387	1					
ANR	3278657	Argument	result -> argv [ 1 ]		3278387	0					
ANR	3278658	ArrayIndexing	result -> argv [ 1 ]		3278387	0					
ANR	3278659	PtrMemberAccess	result -> argv		3278387	0					
ANR	3278660	Identifier	result		3278387	0					
ANR	3278661	Identifier	argv		3278387	1					
ANR	3278662	PrimaryExpression	1		3278387	1					
ANR	3278663	Argument	NULLSTRING		3278387	1					
ANR	3278664	Identifier	NULLSTRING		3278387	0					
ANR	3278665	PrimaryExpression	0		3278387	1					
ANR	3278666	CompoundStatement		56:53:1756:1756	3278387	1					
ANR	3278667	ExpressionStatement	instance_ids . clearAll ( )	7401:4:202151:202174	3278387	0	True				
ANR	3278668	CallExpression	instance_ids . clearAll ( )		3278387	0					
ANR	3278669	Callee	instance_ids . clearAll		3278387	0					
ANR	3278670	MemberAccess	instance_ids . clearAll		3278387	0					
ANR	3278671	Identifier	instance_ids		3278387	0					
ANR	3278672	Identifier	clearAll		3278387	1					
ANR	3278673	ArgumentList			3278387	1					
ANR	3278674	ExpressionStatement	statuses . clearAll ( )	7402:4:202180:202199	3278387	1	True				
ANR	3278675	CallExpression	statuses . clearAll ( )		3278387	0					
ANR	3278676	Callee	statuses . clearAll		3278387	0					
ANR	3278677	MemberAccess	statuses . clearAll		3278387	0					
ANR	3278678	Identifier	statuses		3278387	0					
ANR	3278679	Identifier	clearAll		3278387	1					
ANR	3278680	ArgumentList			3278387	1					
ANR	3278681	ElseStatement	else		3278387	0					
ANR	3278682	CompoundStatement		61:10:1911:1911	3278387	0					
ANR	3278683	ExpressionStatement	error_string = result -> argv [ 1 ]	7404:4:202217:202247	3278387	0	True				
ANR	3278684	AssignmentExpression	error_string = result -> argv [ 1 ]		3278387	0		=			
ANR	3278685	Identifier	error_string		3278387	0					
ANR	3278686	ArrayIndexing	result -> argv [ 1 ]		3278387	1					
ANR	3278687	PtrMemberAccess	result -> argv		3278387	0					
ANR	3278688	Identifier	result		3278387	0					
ANR	3278689	Identifier	argv		3278387	1					
ANR	3278690	PrimaryExpression	1		3278387	1					
ANR	3278691	ExpressionStatement	rc = 1	7405:4:202253:202259	3278387	1	True				
ANR	3278692	AssignmentExpression	rc = 1		3278387	0		=			
ANR	3278693	Identifier	rc		3278387	0					
ANR	3278694	PrimaryExpression	1		3278387	1					
ANR	3278695	ElseStatement	else		3278387	0					
ANR	3278696	CompoundStatement		65:9:1975:1975	3278387	0					
ANR	3278697	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3278387	0					
ANR	3278698	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7408:8:202285:202321	3278387	0	True				
ANR	3278699	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3278387	0					
ANR	3278700	Callee	strcmp		3278387	0					
ANR	3278701	Identifier	strcmp		3278387	0					
ANR	3278702	ArgumentList	result -> argv [ 1 ]		3278387	1					
ANR	3278703	Argument	result -> argv [ 1 ]		3278387	0					
ANR	3278704	ArrayIndexing	result -> argv [ 1 ]		3278387	0					
ANR	3278705	PtrMemberAccess	result -> argv		3278387	0					
ANR	3278706	Identifier	result		3278387	0					
ANR	3278707	Identifier	argv		3278387	1					
ANR	3278708	PrimaryExpression	1		3278387	1					
ANR	3278709	Argument	NULLSTRING		3278387	1					
ANR	3278710	Identifier	NULLSTRING		3278387	0					
ANR	3278711	CompoundStatement		66:48:2025:2025	3278387	1					
ANR	3278712	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7409:4:202331:202365	3278387	0	True				
ANR	3278713	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3278387	0					
ANR	3278714	Callee	EXCEPT		3278387	0					
ANR	3278715	Identifier	EXCEPT		3278387	0					
ANR	3278716	ArgumentList	"""Bad %s result"""		3278387	1					
ANR	3278717	Argument	"""Bad %s result"""		3278387	0					
ANR	3278718	PrimaryExpression	"""Bad %s result"""		3278387	0					
ANR	3278719	Argument	command		3278387	1					
ANR	3278720	Identifier	command		3278387	0					
ANR	3278721	ExpressionStatement	instance_ids . clearAll ( )	7411:3:202375:202398	3278387	1	True				
ANR	3278722	CallExpression	instance_ids . clearAll ( )		3278387	0					
ANR	3278723	Callee	instance_ids . clearAll		3278387	0					
ANR	3278724	MemberAccess	instance_ids . clearAll		3278387	0					
ANR	3278725	Identifier	instance_ids		3278387	0					
ANR	3278726	Identifier	clearAll		3278387	1					
ANR	3278727	ArgumentList			3278387	1					
ANR	3278728	ExpressionStatement	statuses . clearAll ( )	7412:3:202403:202422	3278387	2	True				
ANR	3278729	CallExpression	statuses . clearAll ( )		3278387	0					
ANR	3278730	Callee	statuses . clearAll		3278387	0					
ANR	3278731	MemberAccess	statuses . clearAll		3278387	0					
ANR	3278732	Identifier	statuses		3278387	0					
ANR	3278733	Identifier	clearAll		3278387	1					
ANR	3278734	ArgumentList			3278387	1					
ANR	3278735	ForStatement	for ( int i = 2 ; i < result -> argc ; i += 2 )		3278387	3					
ANR	3278736	ForInit	int i = 2 ;	7413:9:202433:202442	3278387	0	True				
ANR	3278737	IdentifierDeclStatement	int i = 2 ;		3278387	0					
ANR	3278738	IdentifierDecl	i = 2		3278387	0					
ANR	3278739	IdentifierDeclType	int		3278387	0					
ANR	3278740	Identifier	i		3278387	1					
ANR	3278741	AssignmentExpression	i = 2		3278387	2		=			
ANR	3278742	Identifier	i		3278387	0					
ANR	3278743	PrimaryExpression	2		3278387	1					
ANR	3278744	Condition	i < result -> argc	7413:20:202444:202459	3278387	1	True				
ANR	3278745	RelationalExpression	i < result -> argc		3278387	0		<			
ANR	3278746	Identifier	i		3278387	0					
ANR	3278747	PtrMemberAccess	result -> argc		3278387	1					
ANR	3278748	Identifier	result		3278387	0					
ANR	3278749	Identifier	argc		3278387	1					
ANR	3278750	AssignmentExpression	i += 2	7413:38:202462:202467	3278387	2	True	+=			
ANR	3278751	Identifier	i		3278387	0					
ANR	3278752	PrimaryExpression	2		3278387	1					
ANR	3278753	CompoundStatement		71:47:2171:2171	3278387	3					
ANR	3278754	ExpressionStatement	instance_ids . append ( result -> argv [ i ] )	7414:4:202477:202515	3278387	0	True				
ANR	3278755	CallExpression	instance_ids . append ( result -> argv [ i ] )		3278387	0					
ANR	3278756	Callee	instance_ids . append		3278387	0					
ANR	3278757	MemberAccess	instance_ids . append		3278387	0					
ANR	3278758	Identifier	instance_ids		3278387	0					
ANR	3278759	Identifier	append		3278387	1					
ANR	3278760	ArgumentList	result -> argv [ i ]		3278387	1					
ANR	3278761	Argument	result -> argv [ i ]		3278387	0					
ANR	3278762	ArrayIndexing	result -> argv [ i ]		3278387	0					
ANR	3278763	PtrMemberAccess	result -> argv		3278387	0					
ANR	3278764	Identifier	result		3278387	0					
ANR	3278765	Identifier	argv		3278387	1					
ANR	3278766	Identifier	i		3278387	1					
ANR	3278767	ExpressionStatement	statuses . append ( result -> argv [ i + 1 ] )	7415:4:202521:202559	3278387	1	True				
ANR	3278768	CallExpression	statuses . append ( result -> argv [ i + 1 ] )		3278387	0					
ANR	3278769	Callee	statuses . append		3278387	0					
ANR	3278770	MemberAccess	statuses . append		3278387	0					
ANR	3278771	Identifier	statuses		3278387	0					
ANR	3278772	Identifier	append		3278387	1					
ANR	3278773	ArgumentList	result -> argv [ i + 1 ]		3278387	1					
ANR	3278774	Argument	result -> argv [ i + 1 ]		3278387	0					
ANR	3278775	ArrayIndexing	result -> argv [ i + 1 ]		3278387	0					
ANR	3278776	PtrMemberAccess	result -> argv		3278387	0					
ANR	3278777	Identifier	result		3278387	0					
ANR	3278778	Identifier	argv		3278387	1					
ANR	3278779	AdditiveExpression	i + 1		3278387	1		+			
ANR	3278780	Identifier	i		3278387	0					
ANR	3278781	PrimaryExpression	1		3278387	1					
ANR	3278782	Statement	delete	7419:2:202573:202578	3278387	2	True				
ANR	3278783	ExpressionStatement	result	7419:9:202580:202586	3278387	3	True				
ANR	3278784	Identifier	result		3278387	0					
ANR	3278785	ReturnStatement	return rc ;	7420:2:202590:202599	3278387	4	True				
ANR	3278786	Identifier	rc		3278387	0					
ANR	3278787	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3278387	19					
ANR	3278788	Condition	"check_pending_timeout ( command , buf )"	7424:6:202655:202689	3278387	0	True				
ANR	3278789	CallExpression	"check_pending_timeout ( command , buf )"		3278387	0					
ANR	3278790	Callee	check_pending_timeout		3278387	0					
ANR	3278791	Identifier	check_pending_timeout		3278387	0					
ANR	3278792	ArgumentList	command		3278387	1					
ANR	3278793	Argument	command		3278387	0					
ANR	3278794	Identifier	command		3278387	0					
ANR	3278795	Argument	buf		3278387	1					
ANR	3278796	Identifier	buf		3278387	0					
ANR	3278797	CompoundStatement		83:1:2395:2395	3278387	1					
ANR	3278798	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7427:2:202731:202779	3278387	0	True				
ANR	3278799	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3278387	0					
ANR	3278800	Callee	sprintf		3278387	0					
ANR	3278801	Identifier	sprintf		3278387	0					
ANR	3278802	ArgumentList	error_string		3278387	1					
ANR	3278803	Argument	error_string		3278387	0					
ANR	3278804	Identifier	error_string		3278387	0					
ANR	3278805	Argument	"""%s timed out"""		3278387	1					
ANR	3278806	PrimaryExpression	"""%s timed out"""		3278387	0					
ANR	3278807	Argument	command		3278387	2					
ANR	3278808	Identifier	command		3278387	0					
ANR	3278809	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7428:2:202783:202818	3278387	1	True				
ANR	3278810	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3278387	0					
ANR	3278811	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7432:1:202877:202910	3278387	20	True				
ANR	3278812	Identifier	GAHPCLIENT_COMMAND_PENDING		3278387	0					
ANR	3278813	ReturnType	int		3278387	1					
ANR	3278814	Identifier	GahpClient :: dcloud_status_all		3278387	2					
ANR	3278815	ParameterList	"const char * service_url , const char * username , const char * password , StringList & instance_ids , StringList & statuses"		3278387	3					
ANR	3278816	Parameter	const char * service_url	7338:35:200137:200159	3278387	0	True				
ANR	3278817	ParameterType	const char *		3278387	0					
ANR	3278818	Identifier	service_url		3278387	1					
ANR	3278819	Parameter	const char * username	7339:11:200173:200192	3278387	1	True				
ANR	3278820	ParameterType	const char *		3278387	0					
ANR	3278821	Identifier	username		3278387	1					
ANR	3278822	Parameter	const char * password	7340:11:200206:200225	3278387	2	True				
ANR	3278823	ParameterType	const char *		3278387	0					
ANR	3278824	Identifier	password		3278387	1					
ANR	3278825	Parameter	StringList & instance_ids	7341:11:200239:200262	3278387	3	True				
ANR	3278826	ParameterType	StringList &		3278387	0					
ANR	3278827	Identifier	instance_ids		3278387	1					
ANR	3278828	Parameter	StringList & statuses	7342:11:200276:200295	3278387	4	True				
ANR	3278829	ParameterType	StringList &		3278387	0					
ANR	3278830	Identifier	statuses		3278387	1					
ANR	3278831	CFGEntryNode	ENTRY		3278387		True				
ANR	3278832	CFGExitNode	EXIT		3278387		True				
ANR	3278833	Symbol	reqline . sprintf		3278387						
ANR	3278834	Symbol	server		3278387						
ANR	3278835	Symbol	server -> m_commands_supported		3278387						
ANR	3278836	Symbol	escapeGahpString		3278387						
ANR	3278837	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3278387						
ANR	3278838	Symbol	instance_ids		3278387						
ANR	3278839	Symbol	* server		3278387						
ANR	3278840	Symbol	results_only		3278387						
ANR	3278841	Symbol	result -> argv		3278387						
ANR	3278842	Symbol	* server -> m_commands_supported		3278387						
ANR	3278843	Symbol	result		3278387						
ANR	3278844	Symbol	password		3278387						
ANR	3278845	Symbol	* result		3278387						
ANR	3278846	Symbol	server -> m_commands_supported -> contains_anycase		3278387						
ANR	3278847	Symbol	GAHPCLIENT_COMMAND_PENDING		3278387						
ANR	3278848	Symbol	reqline		3278387						
ANR	3278849	Symbol	m_mode		3278387						
ANR	3278850	Symbol	* result -> argv		3278387						
ANR	3278851	Symbol	strcmp		3278387						
ANR	3278852	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3278387						
ANR	3278853	Symbol	* * result		3278387						
ANR	3278854	Symbol	i		3278387						
ANR	3278855	Symbol	NULLSTRING		3278387						
ANR	3278856	Symbol	command		3278387						
ANR	3278857	Symbol	get_pending_result		3278387						
ANR	3278858	Symbol	service_url		3278387						
ANR	3278859	Symbol	esc3		3278387						
ANR	3278860	Symbol	rc		3278387						
ANR	3278861	Symbol	error_string		3278387						
ANR	3278862	Symbol	esc2		3278387						
ANR	3278863	Symbol	buf		3278387						
ANR	3278864	Symbol	esc1		3278387						
ANR	3278865	Symbol	reqline . Value		3278387						
ANR	3278866	Symbol	* i		3278387						
ANR	3278867	Symbol	x		3278387						
ANR	3278868	Symbol	true		3278387						
ANR	3278869	Symbol	result -> argc		3278387						
ANR	3278870	Symbol	statuses		3278387						
ANR	3278871	Symbol	FALSE		3278387						
ANR	3278872	Symbol	* * server		3278387						
ANR	3278873	Symbol	strdup		3278387						
ANR	3278874	Symbol	check_pending_timeout		3278387						
ANR	3278875	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3278387						
ANR	3278876	Symbol	username		3278387						
ANR	3278877	Symbol	is_pending		3278387						
ANR	3278878	Symbol	deleg_proxy		3278387						
ANR	3278879	Function	GahpClient :: dcloud_action	7435:0:202916:205334							
ANR	3278880	FunctionDef	"GahpClient :: dcloud_action (const char * service_url , const char * username , const char * password , const char * instance_id , const char * action)"		3278879	0					
ANR	3278881	CompoundStatement		7440:0:203102:205334	3278879	0					
ANR	3278882	Statement	static	7443:1:203203:203208	3278879	0	True				
ANR	3278883	IdentifierDeclStatement	"const char * command = ""DELTACLOUD_VM_ACTION"" ;"	7443:8:203210:203254	3278879	1	True				
ANR	3278884	IdentifierDecl	"* command = ""DELTACLOUD_VM_ACTION"""		3278879	0					
ANR	3278885	IdentifierDeclType	const char *		3278879	0					
ANR	3278886	Identifier	command		3278879	1					
ANR	3278887	AssignmentExpression	"* command = ""DELTACLOUD_VM_ACTION"""		3278879	2		=			
ANR	3278888	Identifier	command		3278879	0					
ANR	3278889	PrimaryExpression	"""DELTACLOUD_VM_ACTION"""		3278879	1					
ANR	3278890	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3278879	2					
ANR	3278891	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7446:6:203302:203367	3278879	0	True				
ANR	3278892	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3278879	0		==			
ANR	3278893	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3278879	0					
ANR	3278894	Callee	server -> m_commands_supported -> contains_anycase		3278879	0					
ANR	3278895	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3278879	0					
ANR	3278896	PtrMemberAccess	server -> m_commands_supported		3278879	0					
ANR	3278897	Identifier	server		3278879	0					
ANR	3278898	Identifier	m_commands_supported		3278879	1					
ANR	3278899	Identifier	contains_anycase		3278879	1					
ANR	3278900	ArgumentList	command		3278879	1					
ANR	3278901	Argument	command		3278879	0					
ANR	3278902	Identifier	command		3278879	0					
ANR	3278903	Identifier	FALSE		3278879	1					
ANR	3278904	CompoundStatement		7:75:268:268	3278879	1					
ANR	3278905	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7447:2:203375:203414	3278879	0	True				
ANR	3278906	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3278879	0					
ANR	3278907	IfStatement	if ( ! service_url )		3278879	3					
ANR	3278908	Condition	! service_url	7451:6:203452:203463	3278879	0	True				
ANR	3278909	UnaryOperationExpression	! service_url		3278879	0					
ANR	3278910	UnaryOperator	!		3278879	0					
ANR	3278911	Identifier	service_url		3278879	1					
ANR	3278912	ExpressionStatement	service_url = NULLSTRING	7451:21:203467:203491	3278879	1	True				
ANR	3278913	AssignmentExpression	service_url = NULLSTRING		3278879	0		=			
ANR	3278914	Identifier	service_url		3278879	0					
ANR	3278915	Identifier	NULLSTRING		3278879	1					
ANR	3278916	IfStatement	if ( ! username )		3278879	4					
ANR	3278917	Condition	! username	7452:6:203499:203507	3278879	0	True				
ANR	3278918	UnaryOperationExpression	! username		3278879	0					
ANR	3278919	UnaryOperator	!		3278879	0					
ANR	3278920	Identifier	username		3278879	1					
ANR	3278921	ExpressionStatement	username = NULLSTRING	7452:18:203511:203532	3278879	1	True				
ANR	3278922	AssignmentExpression	username = NULLSTRING		3278879	0		=			
ANR	3278923	Identifier	username		3278879	0					
ANR	3278924	Identifier	NULLSTRING		3278879	1					
ANR	3278925	IfStatement	if ( ! password )		3278879	5					
ANR	3278926	Condition	! password	7453:6:203540:203548	3278879	0	True				
ANR	3278927	UnaryOperationExpression	! password		3278879	0					
ANR	3278928	UnaryOperator	!		3278879	0					
ANR	3278929	Identifier	password		3278879	1					
ANR	3278930	ExpressionStatement	password = NULLSTRING	7453:18:203552:203573	3278879	1	True				
ANR	3278931	AssignmentExpression	password = NULLSTRING		3278879	0		=			
ANR	3278932	Identifier	password		3278879	0					
ANR	3278933	Identifier	NULLSTRING		3278879	1					
ANR	3278934	IfStatement	if ( ! instance_id )		3278879	6					
ANR	3278935	Condition	! instance_id	7454:6:203581:203592	3278879	0	True				
ANR	3278936	UnaryOperationExpression	! instance_id		3278879	0					
ANR	3278937	UnaryOperator	!		3278879	0					
ANR	3278938	Identifier	instance_id		3278879	1					
ANR	3278939	ExpressionStatement	instance_id = NULLSTRING	7454:21:203596:203620	3278879	1	True				
ANR	3278940	AssignmentExpression	instance_id = NULLSTRING		3278879	0		=			
ANR	3278941	Identifier	instance_id		3278879	0					
ANR	3278942	Identifier	NULLSTRING		3278879	1					
ANR	3278943	IfStatement	if ( ! action )		3278879	7					
ANR	3278944	Condition	! action	7455:6:203628:203634	3278879	0	True				
ANR	3278945	UnaryOperationExpression	! action		3278879	0					
ANR	3278946	UnaryOperator	!		3278879	0					
ANR	3278947	Identifier	action		3278879	1					
ANR	3278948	ExpressionStatement	action = NULLSTRING	7455:16:203638:203657	3278879	1	True				
ANR	3278949	AssignmentExpression	action = NULLSTRING		3278879	0		=			
ANR	3278950	Identifier	action		3278879	0					
ANR	3278951	Identifier	NULLSTRING		3278879	1					
ANR	3278952	IdentifierDeclStatement	MyString reqline ;	7457:1:203661:203677	3278879	8	True				
ANR	3278953	IdentifierDecl	reqline		3278879	0					
ANR	3278954	IdentifierDeclType	MyString		3278879	0					
ANR	3278955	Identifier	reqline		3278879	1					
ANR	3278956	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7459:1:203681:203733	3278879	9	True				
ANR	3278957	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3278879	0					
ANR	3278958	IdentifierDeclType	char *		3278879	0					
ANR	3278959	Identifier	esc1		3278879	1					
ANR	3278960	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3278879	2		=			
ANR	3278961	Identifier	esc1		3278879	0					
ANR	3278962	CallExpression	strdup ( escapeGahpString ( service_url ) )		3278879	1					
ANR	3278963	Callee	strdup		3278879	0					
ANR	3278964	Identifier	strdup		3278879	0					
ANR	3278965	ArgumentList	escapeGahpString ( service_url )		3278879	1					
ANR	3278966	Argument	escapeGahpString ( service_url )		3278879	0					
ANR	3278967	CallExpression	escapeGahpString ( service_url )		3278879	0					
ANR	3278968	Callee	escapeGahpString		3278879	0					
ANR	3278969	Identifier	escapeGahpString		3278879	0					
ANR	3278970	ArgumentList	service_url		3278879	1					
ANR	3278971	Argument	service_url		3278879	0					
ANR	3278972	Identifier	service_url		3278879	0					
ANR	3278973	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( username ) ) ;	7460:1:203736:203785	3278879	10	True				
ANR	3278974	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( username ) )		3278879	0					
ANR	3278975	IdentifierDeclType	char *		3278879	0					
ANR	3278976	Identifier	esc2		3278879	1					
ANR	3278977	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( username ) )		3278879	2		=			
ANR	3278978	Identifier	esc2		3278879	0					
ANR	3278979	CallExpression	strdup ( escapeGahpString ( username ) )		3278879	1					
ANR	3278980	Callee	strdup		3278879	0					
ANR	3278981	Identifier	strdup		3278879	0					
ANR	3278982	ArgumentList	escapeGahpString ( username )		3278879	1					
ANR	3278983	Argument	escapeGahpString ( username )		3278879	0					
ANR	3278984	CallExpression	escapeGahpString ( username )		3278879	0					
ANR	3278985	Callee	escapeGahpString		3278879	0					
ANR	3278986	Identifier	escapeGahpString		3278879	0					
ANR	3278987	ArgumentList	username		3278879	1					
ANR	3278988	Argument	username		3278879	0					
ANR	3278989	Identifier	username		3278879	0					
ANR	3278990	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( password ) ) ;	7461:1:203788:203837	3278879	11	True				
ANR	3278991	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( password ) )		3278879	0					
ANR	3278992	IdentifierDeclType	char *		3278879	0					
ANR	3278993	Identifier	esc3		3278879	1					
ANR	3278994	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( password ) )		3278879	2		=			
ANR	3278995	Identifier	esc3		3278879	0					
ANR	3278996	CallExpression	strdup ( escapeGahpString ( password ) )		3278879	1					
ANR	3278997	Callee	strdup		3278879	0					
ANR	3278998	Identifier	strdup		3278879	0					
ANR	3278999	ArgumentList	escapeGahpString ( password )		3278879	1					
ANR	3279000	Argument	escapeGahpString ( password )		3278879	0					
ANR	3279001	CallExpression	escapeGahpString ( password )		3278879	0					
ANR	3279002	Callee	escapeGahpString		3278879	0					
ANR	3279003	Identifier	escapeGahpString		3278879	0					
ANR	3279004	ArgumentList	password		3278879	1					
ANR	3279005	Argument	password		3278879	0					
ANR	3279006	Identifier	password		3278879	0					
ANR	3279007	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( instance_id ) ) ;	7462:1:203840:203892	3278879	12	True				
ANR	3279008	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3278879	0					
ANR	3279009	IdentifierDeclType	char *		3278879	0					
ANR	3279010	Identifier	esc4		3278879	1					
ANR	3279011	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3278879	2		=			
ANR	3279012	Identifier	esc4		3278879	0					
ANR	3279013	CallExpression	strdup ( escapeGahpString ( instance_id ) )		3278879	1					
ANR	3279014	Callee	strdup		3278879	0					
ANR	3279015	Identifier	strdup		3278879	0					
ANR	3279016	ArgumentList	escapeGahpString ( instance_id )		3278879	1					
ANR	3279017	Argument	escapeGahpString ( instance_id )		3278879	0					
ANR	3279018	CallExpression	escapeGahpString ( instance_id )		3278879	0					
ANR	3279019	Callee	escapeGahpString		3278879	0					
ANR	3279020	Identifier	escapeGahpString		3278879	0					
ANR	3279021	ArgumentList	instance_id		3278879	1					
ANR	3279022	Argument	instance_id		3278879	0					
ANR	3279023	Identifier	instance_id		3278879	0					
ANR	3279024	IdentifierDeclStatement	char * esc5 = strdup ( escapeGahpString ( action ) ) ;	7463:1:203895:203942	3278879	13	True				
ANR	3279025	IdentifierDecl	* esc5 = strdup ( escapeGahpString ( action ) )		3278879	0					
ANR	3279026	IdentifierDeclType	char *		3278879	0					
ANR	3279027	Identifier	esc5		3278879	1					
ANR	3279028	AssignmentExpression	* esc5 = strdup ( escapeGahpString ( action ) )		3278879	2		=			
ANR	3279029	Identifier	esc5		3278879	0					
ANR	3279030	CallExpression	strdup ( escapeGahpString ( action ) )		3278879	1					
ANR	3279031	Callee	strdup		3278879	0					
ANR	3279032	Identifier	strdup		3278879	0					
ANR	3279033	ArgumentList	escapeGahpString ( action )		3278879	1					
ANR	3279034	Argument	escapeGahpString ( action )		3278879	0					
ANR	3279035	CallExpression	escapeGahpString ( action )		3278879	0					
ANR	3279036	Callee	escapeGahpString		3278879	0					
ANR	3279037	Identifier	escapeGahpString		3278879	0					
ANR	3279038	ArgumentList	action		3278879	1					
ANR	3279039	Argument	action		3278879	0					
ANR	3279040	Identifier	action		3278879	0					
ANR	3279041	IdentifierDeclStatement	"bool x = reqline . sprintf ( ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 ) ;"	7465:1:203946:204018	3278879	14	True				
ANR	3279042	IdentifierDecl	"x = reqline . sprintf ( ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3278879	0					
ANR	3279043	IdentifierDeclType	bool		3278879	0					
ANR	3279044	Identifier	x		3278879	1					
ANR	3279045	AssignmentExpression	"x = reqline . sprintf ( ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3278879	2		=			
ANR	3279046	Identifier	x		3278879	0					
ANR	3279047	CallExpression	"reqline . sprintf ( ""%s %s %s %s %s"" , esc1 , esc2 , esc3 , esc4 , esc5 )"		3278879	1					
ANR	3279048	Callee	reqline . sprintf		3278879	0					
ANR	3279049	MemberAccess	reqline . sprintf		3278879	0					
ANR	3279050	Identifier	reqline		3278879	0					
ANR	3279051	Identifier	sprintf		3278879	1					
ANR	3279052	ArgumentList	"""%s %s %s %s %s"""		3278879	1					
ANR	3279053	Argument	"""%s %s %s %s %s"""		3278879	0					
ANR	3279054	PrimaryExpression	"""%s %s %s %s %s"""		3278879	0					
ANR	3279055	Argument	esc1		3278879	1					
ANR	3279056	Identifier	esc1		3278879	0					
ANR	3279057	Argument	esc2		3278879	2					
ANR	3279058	Identifier	esc2		3278879	0					
ANR	3279059	Argument	esc3		3278879	3					
ANR	3279060	Identifier	esc3		3278879	0					
ANR	3279061	Argument	esc4		3278879	4					
ANR	3279062	Identifier	esc4		3278879	0					
ANR	3279063	Argument	esc5		3278879	5					
ANR	3279064	Identifier	esc5		3278879	0					
ANR	3279065	ExpressionStatement	free ( esc1 )	7467:1:204022:204034	3278879	15	True				
ANR	3279066	CallExpression	free ( esc1 )		3278879	0					
ANR	3279067	Callee	free		3278879	0					
ANR	3279068	Identifier	free		3278879	0					
ANR	3279069	ArgumentList	esc1		3278879	1					
ANR	3279070	Argument	esc1		3278879	0					
ANR	3279071	Identifier	esc1		3278879	0					
ANR	3279072	ExpressionStatement	free ( esc2 )	7468:1:204037:204049	3278879	16	True				
ANR	3279073	CallExpression	free ( esc2 )		3278879	0					
ANR	3279074	Callee	free		3278879	0					
ANR	3279075	Identifier	free		3278879	0					
ANR	3279076	ArgumentList	esc2		3278879	1					
ANR	3279077	Argument	esc2		3278879	0					
ANR	3279078	Identifier	esc2		3278879	0					
ANR	3279079	ExpressionStatement	free ( esc3 )	7469:1:204052:204064	3278879	17	True				
ANR	3279080	CallExpression	free ( esc3 )		3278879	0					
ANR	3279081	Callee	free		3278879	0					
ANR	3279082	Identifier	free		3278879	0					
ANR	3279083	ArgumentList	esc3		3278879	1					
ANR	3279084	Argument	esc3		3278879	0					
ANR	3279085	Identifier	esc3		3278879	0					
ANR	3279086	ExpressionStatement	free ( esc4 )	7470:1:204067:204079	3278879	18	True				
ANR	3279087	CallExpression	free ( esc4 )		3278879	0					
ANR	3279088	Callee	free		3278879	0					
ANR	3279089	Identifier	free		3278879	0					
ANR	3279090	ArgumentList	esc4		3278879	1					
ANR	3279091	Argument	esc4		3278879	0					
ANR	3279092	Identifier	esc4		3278879	0					
ANR	3279093	ExpressionStatement	free ( esc5 )	7471:1:204082:204094	3278879	19	True				
ANR	3279094	CallExpression	free ( esc5 )		3278879	0					
ANR	3279095	Callee	free		3278879	0					
ANR	3279096	Identifier	free		3278879	0					
ANR	3279097	ArgumentList	esc5		3278879	1					
ANR	3279098	Argument	esc5		3278879	0					
ANR	3279099	Identifier	esc5		3278879	0					
ANR	3279100	ExpressionStatement	ASSERT ( x == true )	7472:1:204097:204116	3278879	20	True				
ANR	3279101	CallExpression	ASSERT ( x == true )		3278879	0					
ANR	3279102	Callee	ASSERT		3278879	0					
ANR	3279103	Identifier	ASSERT		3278879	0					
ANR	3279104	ArgumentList	x == true		3278879	1					
ANR	3279105	Argument	x == true		3278879	0					
ANR	3279106	EqualityExpression	x == true		3278879	0		==			
ANR	3279107	Identifier	x		3278879	0					
ANR	3279108	Identifier	true		3278879	1					
ANR	3279109	IdentifierDeclStatement	const char * buf = reqline . Value ( ) ;	7474:1:204120:204153	3278879	21	True				
ANR	3279110	IdentifierDecl	* buf = reqline . Value ( )		3278879	0					
ANR	3279111	IdentifierDeclType	const char *		3278879	0					
ANR	3279112	Identifier	buf		3278879	1					
ANR	3279113	AssignmentExpression	* buf = reqline . Value ( )		3278879	2		=			
ANR	3279114	Identifier	buf		3278879	0					
ANR	3279115	CallExpression	reqline . Value ( )		3278879	1					
ANR	3279116	Callee	reqline . Value		3278879	0					
ANR	3279117	MemberAccess	reqline . Value		3278879	0					
ANR	3279118	Identifier	reqline		3278879	0					
ANR	3279119	Identifier	Value		3278879	1					
ANR	3279120	ArgumentList			3278879	1					
ANR	3279121	IfStatement	"if ( ! is_pending ( command , buf ) )"		3278879	22					
ANR	3279122	Condition	"! is_pending ( command , buf )"	7476:6:204246:204269	3278879	0	True				
ANR	3279123	UnaryOperationExpression	"! is_pending ( command , buf )"		3278879	0					
ANR	3279124	UnaryOperator	!		3278879	0					
ANR	3279125	CallExpression	"is_pending ( command , buf )"		3278879	1					
ANR	3279126	Callee	is_pending		3278879	0					
ANR	3279127	Identifier	is_pending		3278879	0					
ANR	3279128	ArgumentList	command		3278879	1					
ANR	3279129	Argument	command		3278879	0					
ANR	3279130	Identifier	command		3278879	0					
ANR	3279131	Argument	buf		3278879	1					
ANR	3279132	Identifier	buf		3278879	0					
ANR	3279133	CompoundStatement		37:33:1170:1170	3278879	1					
ANR	3279134	IfStatement	if ( m_mode == results_only )		3278879	0					
ANR	3279135	Condition	m_mode == results_only	7478:7:204373:204394	3278879	0	True				
ANR	3279136	EqualityExpression	m_mode == results_only		3278879	0		==			
ANR	3279137	Identifier	m_mode		3278879	0					
ANR	3279138	Identifier	results_only		3278879	1					
ANR	3279139	CompoundStatement		39:32:1295:1295	3278879	1					
ANR	3279140	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7479:3:204403:204442	3278879	0	True				
ANR	3279141	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3278879	0					
ANR	3279142	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7481:2:204450:204488	3278879	1	True				
ANR	3279143	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3278879	0					
ANR	3279144	Callee	now_pending		3278879	0					
ANR	3279145	Identifier	now_pending		3278879	0					
ANR	3279146	ArgumentList	command		3278879	1					
ANR	3279147	Argument	command		3278879	0					
ANR	3279148	Identifier	command		3278879	0					
ANR	3279149	Argument	buf		3278879	1					
ANR	3279150	Identifier	buf		3278879	0					
ANR	3279151	Argument	deleg_proxy		3278879	2					
ANR	3279152	Identifier	deleg_proxy		3278879	0					
ANR	3279153	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7487:1:204578:204630	3278879	23	True				
ANR	3279154	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3278879	0					
ANR	3279155	IdentifierDeclType	Gahp_Args *		3278879	0					
ANR	3279156	Identifier	result		3278879	1					
ANR	3279157	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3278879	2		=			
ANR	3279158	Identifier	result		3278879	0					
ANR	3279159	CallExpression	"get_pending_result ( command , buf )"		3278879	1					
ANR	3279160	Callee	get_pending_result		3278879	0					
ANR	3279161	Identifier	get_pending_result		3278879	0					
ANR	3279162	ArgumentList	command		3278879	1					
ANR	3279163	Argument	command		3278879	0					
ANR	3279164	Identifier	command		3278879	0					
ANR	3279165	Argument	buf		3278879	1					
ANR	3279166	Identifier	buf		3278879	0					
ANR	3279167	IfStatement	if ( result )		3278879	24					
ANR	3279168	Condition	result	7493:6:204754:204759	3278879	0	True				
ANR	3279169	Identifier	result		3278879	0					
ANR	3279170	CompoundStatement		56:2:1690:1700	3278879	1					
ANR	3279171	IdentifierDeclStatement	int rc = 0 ;	7495:2:204793:204803	3278879	0	True				
ANR	3279172	IdentifierDecl	rc = 0		3278879	0					
ANR	3279173	IdentifierDeclType	int		3278879	0					
ANR	3279174	Identifier	rc		3278879	1					
ANR	3279175	AssignmentExpression	rc = 0		3278879	2		=			
ANR	3279176	Identifier	rc		3278879	0					
ANR	3279177	PrimaryExpression	0		3278879	1					
ANR	3279178	IfStatement	if ( result -> argc != 2 )		3278879	1					
ANR	3279179	Condition	result -> argc != 2	7496:7:204812:204828	3278879	0	True				
ANR	3279180	EqualityExpression	result -> argc != 2		3278879	0		!=			
ANR	3279181	PtrMemberAccess	result -> argc		3278879	0					
ANR	3279182	Identifier	result		3278879	0					
ANR	3279183	Identifier	argc		3278879	1					
ANR	3279184	PrimaryExpression	2		3278879	1					
ANR	3279185	CompoundStatement		57:27:1729:1729	3278879	1					
ANR	3279186	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7497:3:204837:204871	3278879	0	True				
ANR	3279187	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3278879	0					
ANR	3279188	Callee	EXCEPT		3278879	0					
ANR	3279189	Identifier	EXCEPT		3278879	0					
ANR	3279190	ArgumentList	"""Bad %s result"""		3278879	1					
ANR	3279191	Argument	"""Bad %s result"""		3278879	0					
ANR	3279192	PrimaryExpression	"""Bad %s result"""		3278879	0					
ANR	3279193	Argument	command		3278879	1					
ANR	3279194	Identifier	command		3278879	0					
ANR	3279195	ElseStatement	else		3278879	0					
ANR	3279196	CompoundStatement		59:9:1779:1779	3278879	0					
ANR	3279197	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3278879	0					
ANR	3279198	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7499:8:204892:204928	3278879	0	True				
ANR	3279199	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3278879	0					
ANR	3279200	Callee	strcmp		3278879	0					
ANR	3279201	Identifier	strcmp		3278879	0					
ANR	3279202	ArgumentList	result -> argv [ 1 ]		3278879	1					
ANR	3279203	Argument	result -> argv [ 1 ]		3278879	0					
ANR	3279204	ArrayIndexing	result -> argv [ 1 ]		3278879	0					
ANR	3279205	PtrMemberAccess	result -> argv		3278879	0					
ANR	3279206	Identifier	result		3278879	0					
ANR	3279207	Identifier	argv		3278879	1					
ANR	3279208	PrimaryExpression	1		3278879	1					
ANR	3279209	Argument	NULLSTRING		3278879	1					
ANR	3279210	Identifier	NULLSTRING		3278879	0					
ANR	3279211	CompoundStatement		60:48:1829:1829	3278879	1					
ANR	3279212	ExpressionStatement	error_string = result -> argv [ 1 ]	7500:4:204938:204968	3278879	0	True				
ANR	3279213	AssignmentExpression	error_string = result -> argv [ 1 ]		3278879	0		=			
ANR	3279214	Identifier	error_string		3278879	0					
ANR	3279215	ArrayIndexing	result -> argv [ 1 ]		3278879	1					
ANR	3279216	PtrMemberAccess	result -> argv		3278879	0					
ANR	3279217	Identifier	result		3278879	0					
ANR	3279218	Identifier	argv		3278879	1					
ANR	3279219	PrimaryExpression	1		3278879	1					
ANR	3279220	ExpressionStatement	rc = 1	7501:4:204974:204980	3278879	1	True				
ANR	3279221	AssignmentExpression	rc = 1		3278879	0		=			
ANR	3279222	Identifier	rc		3278879	0					
ANR	3279223	PrimaryExpression	1		3278879	1					
ANR	3279224	Statement	delete	7505:2:204994:204999	3278879	2	True				
ANR	3279225	ExpressionStatement	result	7505:9:205001:205007	3278879	3	True				
ANR	3279226	Identifier	result		3278879	0					
ANR	3279227	ReturnStatement	return rc ;	7506:2:205011:205020	3278879	4	True				
ANR	3279228	Identifier	rc		3278879	0					
ANR	3279229	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3278879	25					
ANR	3279230	Condition	"check_pending_timeout ( command , buf )"	7510:6:205076:205110	3278879	0	True				
ANR	3279231	CallExpression	"check_pending_timeout ( command , buf )"		3278879	0					
ANR	3279232	Callee	check_pending_timeout		3278879	0					
ANR	3279233	Identifier	check_pending_timeout		3278879	0					
ANR	3279234	ArgumentList	command		3278879	1					
ANR	3279235	Argument	command		3278879	0					
ANR	3279236	Identifier	command		3278879	0					
ANR	3279237	Argument	buf		3278879	1					
ANR	3279238	Identifier	buf		3278879	0					
ANR	3279239	CompoundStatement		72:1:2013:2013	3278879	1					
ANR	3279240	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7513:2:205152:205200	3278879	0	True				
ANR	3279241	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3278879	0					
ANR	3279242	Callee	sprintf		3278879	0					
ANR	3279243	Identifier	sprintf		3278879	0					
ANR	3279244	ArgumentList	error_string		3278879	1					
ANR	3279245	Argument	error_string		3278879	0					
ANR	3279246	Identifier	error_string		3278879	0					
ANR	3279247	Argument	"""%s timed out"""		3278879	1					
ANR	3279248	PrimaryExpression	"""%s timed out"""		3278879	0					
ANR	3279249	Argument	command		3278879	2					
ANR	3279250	Identifier	command		3278879	0					
ANR	3279251	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7514:2:205204:205239	3278879	1	True				
ANR	3279252	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3278879	0					
ANR	3279253	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7518:1:205298:205331	3278879	26	True				
ANR	3279254	Identifier	GAHPCLIENT_COMMAND_PENDING		3278879	0					
ANR	3279255	ReturnType	int		3278879	1					
ANR	3279256	Identifier	GahpClient :: dcloud_action		3278879	2					
ANR	3279257	ParameterList	"const char * service_url , const char * username , const char * password , const char * instance_id , const char * action"		3278879	3					
ANR	3279258	Parameter	const char * service_url	7435:31:202947:202969	3278879	0	True				
ANR	3279259	ParameterType	const char *		3278879	0					
ANR	3279260	Identifier	service_url		3278879	1					
ANR	3279261	Parameter	const char * username	7436:10:202982:203001	3278879	1	True				
ANR	3279262	ParameterType	const char *		3278879	0					
ANR	3279263	Identifier	username		3278879	1					
ANR	3279264	Parameter	const char * password	7437:10:203014:203033	3278879	2	True				
ANR	3279265	ParameterType	const char *		3278879	0					
ANR	3279266	Identifier	password		3278879	1					
ANR	3279267	Parameter	const char * instance_id	7438:10:203046:203068	3278879	3	True				
ANR	3279268	ParameterType	const char *		3278879	0					
ANR	3279269	Identifier	instance_id		3278879	1					
ANR	3279270	Parameter	const char * action	7439:10:203081:203098	3278879	4	True				
ANR	3279271	ParameterType	const char *		3278879	0					
ANR	3279272	Identifier	action		3278879	1					
ANR	3279273	CFGEntryNode	ENTRY		3278879		True				
ANR	3279274	CFGExitNode	EXIT		3278879		True				
ANR	3279275	Symbol	reqline . sprintf		3278879						
ANR	3279276	Symbol	server		3278879						
ANR	3279277	Symbol	server -> m_commands_supported		3278879						
ANR	3279278	Symbol	escapeGahpString		3278879						
ANR	3279279	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3278879						
ANR	3279280	Symbol	* server		3278879						
ANR	3279281	Symbol	results_only		3278879						
ANR	3279282	Symbol	result -> argv		3278879						
ANR	3279283	Symbol	* server -> m_commands_supported		3278879						
ANR	3279284	Symbol	esc5		3278879						
ANR	3279285	Symbol	result		3278879						
ANR	3279286	Symbol	password		3278879						
ANR	3279287	Symbol	* result		3278879						
ANR	3279288	Symbol	server -> m_commands_supported -> contains_anycase		3278879						
ANR	3279289	Symbol	GAHPCLIENT_COMMAND_PENDING		3278879						
ANR	3279290	Symbol	reqline		3278879						
ANR	3279291	Symbol	action		3278879						
ANR	3279292	Symbol	m_mode		3278879						
ANR	3279293	Symbol	* result -> argv		3278879						
ANR	3279294	Symbol	strcmp		3278879						
ANR	3279295	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3278879						
ANR	3279296	Symbol	* * result		3278879						
ANR	3279297	Symbol	NULLSTRING		3278879						
ANR	3279298	Symbol	command		3278879						
ANR	3279299	Symbol	esc4		3278879						
ANR	3279300	Symbol	get_pending_result		3278879						
ANR	3279301	Symbol	service_url		3278879						
ANR	3279302	Symbol	esc3		3278879						
ANR	3279303	Symbol	rc		3278879						
ANR	3279304	Symbol	error_string		3278879						
ANR	3279305	Symbol	esc2		3278879						
ANR	3279306	Symbol	buf		3278879						
ANR	3279307	Symbol	instance_id		3278879						
ANR	3279308	Symbol	esc1		3278879						
ANR	3279309	Symbol	reqline . Value		3278879						
ANR	3279310	Symbol	x		3278879						
ANR	3279311	Symbol	true		3278879						
ANR	3279312	Symbol	result -> argc		3278879						
ANR	3279313	Symbol	* * server		3278879						
ANR	3279314	Symbol	FALSE		3278879						
ANR	3279315	Symbol	strdup		3278879						
ANR	3279316	Symbol	check_pending_timeout		3278879						
ANR	3279317	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3278879						
ANR	3279318	Symbol	username		3278879						
ANR	3279319	Symbol	is_pending		3278879						
ANR	3279320	Symbol	deleg_proxy		3278879						
ANR	3279321	Function	GahpClient :: dcloud_info	7521:0:205337:207907							
ANR	3279322	FunctionDef	"GahpClient :: dcloud_info (const char * service_url , const char * username , const char * password , const char * instance_id , StringList & attrs)"		3279321	0					
ANR	3279323	CompoundStatement		7526:0:205512:207907	3279321	0					
ANR	3279324	Statement	static	7529:1:205603:205608	3279321	0	True				
ANR	3279325	IdentifierDeclStatement	"const char * command = ""DELTACLOUD_VM_INFO"" ;"	7529:8:205610:205652	3279321	1	True				
ANR	3279326	IdentifierDecl	"* command = ""DELTACLOUD_VM_INFO"""		3279321	0					
ANR	3279327	IdentifierDeclType	const char *		3279321	0					
ANR	3279328	Identifier	command		3279321	1					
ANR	3279329	AssignmentExpression	"* command = ""DELTACLOUD_VM_INFO"""		3279321	2		=			
ANR	3279330	Identifier	command		3279321	0					
ANR	3279331	PrimaryExpression	"""DELTACLOUD_VM_INFO"""		3279321	1					
ANR	3279332	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3279321	2					
ANR	3279333	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7532:6:205700:205765	3279321	0	True				
ANR	3279334	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3279321	0		==			
ANR	3279335	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3279321	0					
ANR	3279336	Callee	server -> m_commands_supported -> contains_anycase		3279321	0					
ANR	3279337	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3279321	0					
ANR	3279338	PtrMemberAccess	server -> m_commands_supported		3279321	0					
ANR	3279339	Identifier	server		3279321	0					
ANR	3279340	Identifier	m_commands_supported		3279321	1					
ANR	3279341	Identifier	contains_anycase		3279321	1					
ANR	3279342	ArgumentList	command		3279321	1					
ANR	3279343	Argument	command		3279321	0					
ANR	3279344	Identifier	command		3279321	0					
ANR	3279345	Identifier	FALSE		3279321	1					
ANR	3279346	CompoundStatement		7:75:256:256	3279321	1					
ANR	3279347	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7533:2:205773:205812	3279321	0	True				
ANR	3279348	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3279321	0					
ANR	3279349	IfStatement	if ( ! service_url )		3279321	3					
ANR	3279350	Condition	! service_url	7537:6:205850:205861	3279321	0	True				
ANR	3279351	UnaryOperationExpression	! service_url		3279321	0					
ANR	3279352	UnaryOperator	!		3279321	0					
ANR	3279353	Identifier	service_url		3279321	1					
ANR	3279354	ExpressionStatement	service_url = NULLSTRING	7537:21:205865:205889	3279321	1	True				
ANR	3279355	AssignmentExpression	service_url = NULLSTRING		3279321	0		=			
ANR	3279356	Identifier	service_url		3279321	0					
ANR	3279357	Identifier	NULLSTRING		3279321	1					
ANR	3279358	IfStatement	if ( ! username )		3279321	4					
ANR	3279359	Condition	! username	7538:6:205897:205905	3279321	0	True				
ANR	3279360	UnaryOperationExpression	! username		3279321	0					
ANR	3279361	UnaryOperator	!		3279321	0					
ANR	3279362	Identifier	username		3279321	1					
ANR	3279363	ExpressionStatement	username = NULLSTRING	7538:18:205909:205930	3279321	1	True				
ANR	3279364	AssignmentExpression	username = NULLSTRING		3279321	0		=			
ANR	3279365	Identifier	username		3279321	0					
ANR	3279366	Identifier	NULLSTRING		3279321	1					
ANR	3279367	IfStatement	if ( ! password )		3279321	5					
ANR	3279368	Condition	! password	7539:6:205938:205946	3279321	0	True				
ANR	3279369	UnaryOperationExpression	! password		3279321	0					
ANR	3279370	UnaryOperator	!		3279321	0					
ANR	3279371	Identifier	password		3279321	1					
ANR	3279372	ExpressionStatement	password = NULLSTRING	7539:18:205950:205971	3279321	1	True				
ANR	3279373	AssignmentExpression	password = NULLSTRING		3279321	0		=			
ANR	3279374	Identifier	password		3279321	0					
ANR	3279375	Identifier	NULLSTRING		3279321	1					
ANR	3279376	IfStatement	if ( ! instance_id )		3279321	6					
ANR	3279377	Condition	! instance_id	7540:6:205979:205990	3279321	0	True				
ANR	3279378	UnaryOperationExpression	! instance_id		3279321	0					
ANR	3279379	UnaryOperator	!		3279321	0					
ANR	3279380	Identifier	instance_id		3279321	1					
ANR	3279381	ExpressionStatement	instance_id = NULLSTRING	7540:21:205994:206018	3279321	1	True				
ANR	3279382	AssignmentExpression	instance_id = NULLSTRING		3279321	0		=			
ANR	3279383	Identifier	instance_id		3279321	0					
ANR	3279384	Identifier	NULLSTRING		3279321	1					
ANR	3279385	IdentifierDeclStatement	MyString reqline ;	7542:1:206022:206038	3279321	7	True				
ANR	3279386	IdentifierDecl	reqline		3279321	0					
ANR	3279387	IdentifierDeclType	MyString		3279321	0					
ANR	3279388	Identifier	reqline		3279321	1					
ANR	3279389	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7544:1:206042:206094	3279321	8	True				
ANR	3279390	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3279321	0					
ANR	3279391	IdentifierDeclType	char *		3279321	0					
ANR	3279392	Identifier	esc1		3279321	1					
ANR	3279393	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3279321	2		=			
ANR	3279394	Identifier	esc1		3279321	0					
ANR	3279395	CallExpression	strdup ( escapeGahpString ( service_url ) )		3279321	1					
ANR	3279396	Callee	strdup		3279321	0					
ANR	3279397	Identifier	strdup		3279321	0					
ANR	3279398	ArgumentList	escapeGahpString ( service_url )		3279321	1					
ANR	3279399	Argument	escapeGahpString ( service_url )		3279321	0					
ANR	3279400	CallExpression	escapeGahpString ( service_url )		3279321	0					
ANR	3279401	Callee	escapeGahpString		3279321	0					
ANR	3279402	Identifier	escapeGahpString		3279321	0					
ANR	3279403	ArgumentList	service_url		3279321	1					
ANR	3279404	Argument	service_url		3279321	0					
ANR	3279405	Identifier	service_url		3279321	0					
ANR	3279406	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( username ) ) ;	7545:1:206097:206146	3279321	9	True				
ANR	3279407	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( username ) )		3279321	0					
ANR	3279408	IdentifierDeclType	char *		3279321	0					
ANR	3279409	Identifier	esc2		3279321	1					
ANR	3279410	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( username ) )		3279321	2		=			
ANR	3279411	Identifier	esc2		3279321	0					
ANR	3279412	CallExpression	strdup ( escapeGahpString ( username ) )		3279321	1					
ANR	3279413	Callee	strdup		3279321	0					
ANR	3279414	Identifier	strdup		3279321	0					
ANR	3279415	ArgumentList	escapeGahpString ( username )		3279321	1					
ANR	3279416	Argument	escapeGahpString ( username )		3279321	0					
ANR	3279417	CallExpression	escapeGahpString ( username )		3279321	0					
ANR	3279418	Callee	escapeGahpString		3279321	0					
ANR	3279419	Identifier	escapeGahpString		3279321	0					
ANR	3279420	ArgumentList	username		3279321	1					
ANR	3279421	Argument	username		3279321	0					
ANR	3279422	Identifier	username		3279321	0					
ANR	3279423	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( password ) ) ;	7546:1:206149:206198	3279321	10	True				
ANR	3279424	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( password ) )		3279321	0					
ANR	3279425	IdentifierDeclType	char *		3279321	0					
ANR	3279426	Identifier	esc3		3279321	1					
ANR	3279427	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( password ) )		3279321	2		=			
ANR	3279428	Identifier	esc3		3279321	0					
ANR	3279429	CallExpression	strdup ( escapeGahpString ( password ) )		3279321	1					
ANR	3279430	Callee	strdup		3279321	0					
ANR	3279431	Identifier	strdup		3279321	0					
ANR	3279432	ArgumentList	escapeGahpString ( password )		3279321	1					
ANR	3279433	Argument	escapeGahpString ( password )		3279321	0					
ANR	3279434	CallExpression	escapeGahpString ( password )		3279321	0					
ANR	3279435	Callee	escapeGahpString		3279321	0					
ANR	3279436	Identifier	escapeGahpString		3279321	0					
ANR	3279437	ArgumentList	password		3279321	1					
ANR	3279438	Argument	password		3279321	0					
ANR	3279439	Identifier	password		3279321	0					
ANR	3279440	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( instance_id ) ) ;	7547:1:206201:206253	3279321	11	True				
ANR	3279441	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3279321	0					
ANR	3279442	IdentifierDeclType	char *		3279321	0					
ANR	3279443	Identifier	esc4		3279321	1					
ANR	3279444	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( instance_id ) )		3279321	2		=			
ANR	3279445	Identifier	esc4		3279321	0					
ANR	3279446	CallExpression	strdup ( escapeGahpString ( instance_id ) )		3279321	1					
ANR	3279447	Callee	strdup		3279321	0					
ANR	3279448	Identifier	strdup		3279321	0					
ANR	3279449	ArgumentList	escapeGahpString ( instance_id )		3279321	1					
ANR	3279450	Argument	escapeGahpString ( instance_id )		3279321	0					
ANR	3279451	CallExpression	escapeGahpString ( instance_id )		3279321	0					
ANR	3279452	Callee	escapeGahpString		3279321	0					
ANR	3279453	Identifier	escapeGahpString		3279321	0					
ANR	3279454	ArgumentList	instance_id		3279321	1					
ANR	3279455	Argument	instance_id		3279321	0					
ANR	3279456	Identifier	instance_id		3279321	0					
ANR	3279457	IdentifierDeclStatement	"bool x = reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 ) ;"	7549:1:206257:206320	3279321	12	True				
ANR	3279458	IdentifierDecl	"x = reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3279321	0					
ANR	3279459	IdentifierDeclType	bool		3279321	0					
ANR	3279460	Identifier	x		3279321	1					
ANR	3279461	AssignmentExpression	"x = reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3279321	2		=			
ANR	3279462	Identifier	x		3279321	0					
ANR	3279463	CallExpression	"reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3279321	1					
ANR	3279464	Callee	reqline . sprintf		3279321	0					
ANR	3279465	MemberAccess	reqline . sprintf		3279321	0					
ANR	3279466	Identifier	reqline		3279321	0					
ANR	3279467	Identifier	sprintf		3279321	1					
ANR	3279468	ArgumentList	"""%s %s %s %s"""		3279321	1					
ANR	3279469	Argument	"""%s %s %s %s"""		3279321	0					
ANR	3279470	PrimaryExpression	"""%s %s %s %s"""		3279321	0					
ANR	3279471	Argument	esc1		3279321	1					
ANR	3279472	Identifier	esc1		3279321	0					
ANR	3279473	Argument	esc2		3279321	2					
ANR	3279474	Identifier	esc2		3279321	0					
ANR	3279475	Argument	esc3		3279321	3					
ANR	3279476	Identifier	esc3		3279321	0					
ANR	3279477	Argument	esc4		3279321	4					
ANR	3279478	Identifier	esc4		3279321	0					
ANR	3279479	ExpressionStatement	free ( esc1 )	7551:1:206324:206336	3279321	13	True				
ANR	3279480	CallExpression	free ( esc1 )		3279321	0					
ANR	3279481	Callee	free		3279321	0					
ANR	3279482	Identifier	free		3279321	0					
ANR	3279483	ArgumentList	esc1		3279321	1					
ANR	3279484	Argument	esc1		3279321	0					
ANR	3279485	Identifier	esc1		3279321	0					
ANR	3279486	ExpressionStatement	free ( esc2 )	7552:1:206339:206351	3279321	14	True				
ANR	3279487	CallExpression	free ( esc2 )		3279321	0					
ANR	3279488	Callee	free		3279321	0					
ANR	3279489	Identifier	free		3279321	0					
ANR	3279490	ArgumentList	esc2		3279321	1					
ANR	3279491	Argument	esc2		3279321	0					
ANR	3279492	Identifier	esc2		3279321	0					
ANR	3279493	ExpressionStatement	free ( esc3 )	7553:1:206354:206366	3279321	15	True				
ANR	3279494	CallExpression	free ( esc3 )		3279321	0					
ANR	3279495	Callee	free		3279321	0					
ANR	3279496	Identifier	free		3279321	0					
ANR	3279497	ArgumentList	esc3		3279321	1					
ANR	3279498	Argument	esc3		3279321	0					
ANR	3279499	Identifier	esc3		3279321	0					
ANR	3279500	ExpressionStatement	free ( esc4 )	7554:1:206369:206381	3279321	16	True				
ANR	3279501	CallExpression	free ( esc4 )		3279321	0					
ANR	3279502	Callee	free		3279321	0					
ANR	3279503	Identifier	free		3279321	0					
ANR	3279504	ArgumentList	esc4		3279321	1					
ANR	3279505	Argument	esc4		3279321	0					
ANR	3279506	Identifier	esc4		3279321	0					
ANR	3279507	ExpressionStatement	ASSERT ( x == true )	7555:1:206384:206403	3279321	17	True				
ANR	3279508	CallExpression	ASSERT ( x == true )		3279321	0					
ANR	3279509	Callee	ASSERT		3279321	0					
ANR	3279510	Identifier	ASSERT		3279321	0					
ANR	3279511	ArgumentList	x == true		3279321	1					
ANR	3279512	Argument	x == true		3279321	0					
ANR	3279513	EqualityExpression	x == true		3279321	0		==			
ANR	3279514	Identifier	x		3279321	0					
ANR	3279515	Identifier	true		3279321	1					
ANR	3279516	IdentifierDeclStatement	const char * buf = reqline . Value ( ) ;	7557:1:206407:206440	3279321	18	True				
ANR	3279517	IdentifierDecl	* buf = reqline . Value ( )		3279321	0					
ANR	3279518	IdentifierDeclType	const char *		3279321	0					
ANR	3279519	Identifier	buf		3279321	1					
ANR	3279520	AssignmentExpression	* buf = reqline . Value ( )		3279321	2		=			
ANR	3279521	Identifier	buf		3279321	0					
ANR	3279522	CallExpression	reqline . Value ( )		3279321	1					
ANR	3279523	Callee	reqline . Value		3279321	0					
ANR	3279524	MemberAccess	reqline . Value		3279321	0					
ANR	3279525	Identifier	reqline		3279321	0					
ANR	3279526	Identifier	Value		3279321	1					
ANR	3279527	ArgumentList			3279321	1					
ANR	3279528	IfStatement	"if ( ! is_pending ( command , buf ) )"		3279321	19					
ANR	3279529	Condition	"! is_pending ( command , buf )"	7559:6:206533:206556	3279321	0	True				
ANR	3279530	UnaryOperationExpression	"! is_pending ( command , buf )"		3279321	0					
ANR	3279531	UnaryOperator	!		3279321	0					
ANR	3279532	CallExpression	"is_pending ( command , buf )"		3279321	1					
ANR	3279533	Callee	is_pending		3279321	0					
ANR	3279534	Identifier	is_pending		3279321	0					
ANR	3279535	ArgumentList	command		3279321	1					
ANR	3279536	Argument	command		3279321	0					
ANR	3279537	Identifier	command		3279321	0					
ANR	3279538	Argument	buf		3279321	1					
ANR	3279539	Identifier	buf		3279321	0					
ANR	3279540	CompoundStatement		34:33:1047:1047	3279321	1					
ANR	3279541	IfStatement	if ( m_mode == results_only )		3279321	0					
ANR	3279542	Condition	m_mode == results_only	7561:7:206660:206681	3279321	0	True				
ANR	3279543	EqualityExpression	m_mode == results_only		3279321	0		==			
ANR	3279544	Identifier	m_mode		3279321	0					
ANR	3279545	Identifier	results_only		3279321	1					
ANR	3279546	CompoundStatement		36:32:1172:1172	3279321	1					
ANR	3279547	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7562:3:206690:206729	3279321	0	True				
ANR	3279548	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3279321	0					
ANR	3279549	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7564:2:206737:206775	3279321	1	True				
ANR	3279550	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3279321	0					
ANR	3279551	Callee	now_pending		3279321	0					
ANR	3279552	Identifier	now_pending		3279321	0					
ANR	3279553	ArgumentList	command		3279321	1					
ANR	3279554	Argument	command		3279321	0					
ANR	3279555	Identifier	command		3279321	0					
ANR	3279556	Argument	buf		3279321	1					
ANR	3279557	Identifier	buf		3279321	0					
ANR	3279558	Argument	deleg_proxy		3279321	2					
ANR	3279559	Identifier	deleg_proxy		3279321	0					
ANR	3279560	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7570:1:206865:206917	3279321	20	True				
ANR	3279561	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3279321	0					
ANR	3279562	IdentifierDeclType	Gahp_Args *		3279321	0					
ANR	3279563	Identifier	result		3279321	1					
ANR	3279564	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3279321	2		=			
ANR	3279565	Identifier	result		3279321	0					
ANR	3279566	CallExpression	"get_pending_result ( command , buf )"		3279321	1					
ANR	3279567	Callee	get_pending_result		3279321	0					
ANR	3279568	Identifier	get_pending_result		3279321	0					
ANR	3279569	ArgumentList	command		3279321	1					
ANR	3279570	Argument	command		3279321	0					
ANR	3279571	Identifier	command		3279321	0					
ANR	3279572	Argument	buf		3279321	1					
ANR	3279573	Identifier	buf		3279321	0					
ANR	3279574	IfStatement	if ( result )		3279321	21					
ANR	3279575	Condition	result	7576:6:207049:207054	3279321	0	True				
ANR	3279576	Identifier	result		3279321	0					
ANR	3279577	CompoundStatement		53:2:1575:1585	3279321	1					
ANR	3279578	IdentifierDeclStatement	int rc = 0 ;	7578:2:207088:207098	3279321	0	True				
ANR	3279579	IdentifierDecl	rc = 0		3279321	0					
ANR	3279580	IdentifierDeclType	int		3279321	0					
ANR	3279581	Identifier	rc		3279321	1					
ANR	3279582	AssignmentExpression	rc = 0		3279321	2		=			
ANR	3279583	Identifier	rc		3279321	0					
ANR	3279584	PrimaryExpression	0		3279321	1					
ANR	3279585	IfStatement	if ( result -> argc < 2 )		3279321	1					
ANR	3279586	Condition	result -> argc < 2	7579:7:207107:207122	3279321	0	True				
ANR	3279587	RelationalExpression	result -> argc < 2		3279321	0		<			
ANR	3279588	PtrMemberAccess	result -> argc		3279321	0					
ANR	3279589	Identifier	result		3279321	0					
ANR	3279590	Identifier	argc		3279321	1					
ANR	3279591	PrimaryExpression	2		3279321	1					
ANR	3279592	CompoundStatement		54:26:1613:1613	3279321	1					
ANR	3279593	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7580:3:207131:207165	3279321	0	True				
ANR	3279594	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3279321	0					
ANR	3279595	Callee	EXCEPT		3279321	0					
ANR	3279596	Identifier	EXCEPT		3279321	0					
ANR	3279597	ArgumentList	"""Bad %s result"""		3279321	1					
ANR	3279598	Argument	"""Bad %s result"""		3279321	0					
ANR	3279599	PrimaryExpression	"""Bad %s result"""		3279321	0					
ANR	3279600	Argument	command		3279321	1					
ANR	3279601	Identifier	command		3279321	0					
ANR	3279602	ElseStatement	else		3279321	0					
ANR	3279603	IfStatement	if ( result -> argc == 2 )		3279321	0					
ANR	3279604	Condition	result -> argc == 2	7581:14:207181:207197	3279321	0	True				
ANR	3279605	EqualityExpression	result -> argc == 2		3279321	0		==			
ANR	3279606	PtrMemberAccess	result -> argc		3279321	0					
ANR	3279607	Identifier	result		3279321	0					
ANR	3279608	Identifier	argc		3279321	1					
ANR	3279609	PrimaryExpression	2		3279321	1					
ANR	3279610	CompoundStatement		56:34:1688:1688	3279321	1					
ANR	3279611	IfStatement	"if ( ! strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3279321	0					
ANR	3279612	Condition	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7582:8:207211:207248	3279321	0	True				
ANR	3279613	UnaryOperationExpression	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3279321	0					
ANR	3279614	UnaryOperator	!		3279321	0					
ANR	3279615	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3279321	1					
ANR	3279616	Callee	strcmp		3279321	0					
ANR	3279617	Identifier	strcmp		3279321	0					
ANR	3279618	ArgumentList	result -> argv [ 1 ]		3279321	1					
ANR	3279619	Argument	result -> argv [ 1 ]		3279321	0					
ANR	3279620	ArrayIndexing	result -> argv [ 1 ]		3279321	0					
ANR	3279621	PtrMemberAccess	result -> argv		3279321	0					
ANR	3279622	Identifier	result		3279321	0					
ANR	3279623	Identifier	argv		3279321	1					
ANR	3279624	PrimaryExpression	1		3279321	1					
ANR	3279625	Argument	NULLSTRING		3279321	1					
ANR	3279626	Identifier	NULLSTRING		3279321	0					
ANR	3279627	CompoundStatement		57:49:1739:1739	3279321	1					
ANR	3279628	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7583:4:207258:207292	3279321	0	True				
ANR	3279629	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3279321	0					
ANR	3279630	Callee	EXCEPT		3279321	0					
ANR	3279631	Identifier	EXCEPT		3279321	0					
ANR	3279632	ArgumentList	"""Bad %s result"""		3279321	1					
ANR	3279633	Argument	"""Bad %s result"""		3279321	0					
ANR	3279634	PrimaryExpression	"""Bad %s result"""		3279321	0					
ANR	3279635	Argument	command		3279321	1					
ANR	3279636	Identifier	command		3279321	0					
ANR	3279637	ExpressionStatement	error_string = result -> argv [ 1 ]	7585:3:207302:207332	3279321	1	True				
ANR	3279638	AssignmentExpression	error_string = result -> argv [ 1 ]		3279321	0		=			
ANR	3279639	Identifier	error_string		3279321	0					
ANR	3279640	ArrayIndexing	result -> argv [ 1 ]		3279321	1					
ANR	3279641	PtrMemberAccess	result -> argv		3279321	0					
ANR	3279642	Identifier	result		3279321	0					
ANR	3279643	Identifier	argv		3279321	1					
ANR	3279644	PrimaryExpression	1		3279321	1					
ANR	3279645	ExpressionStatement	rc = 1	7586:3:207337:207343	3279321	2	True				
ANR	3279646	AssignmentExpression	rc = 1		3279321	0		=			
ANR	3279647	Identifier	rc		3279321	0					
ANR	3279648	PrimaryExpression	1		3279321	1					
ANR	3279649	ElseStatement	else		3279321	0					
ANR	3279650	CompoundStatement		62:9:1841:1841	3279321	0					
ANR	3279651	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3279321	0					
ANR	3279652	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7588:8:207364:207400	3279321	0	True				
ANR	3279653	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3279321	0					
ANR	3279654	Callee	strcmp		3279321	0					
ANR	3279655	Identifier	strcmp		3279321	0					
ANR	3279656	ArgumentList	result -> argv [ 1 ]		3279321	1					
ANR	3279657	Argument	result -> argv [ 1 ]		3279321	0					
ANR	3279658	ArrayIndexing	result -> argv [ 1 ]		3279321	0					
ANR	3279659	PtrMemberAccess	result -> argv		3279321	0					
ANR	3279660	Identifier	result		3279321	0					
ANR	3279661	Identifier	argv		3279321	1					
ANR	3279662	PrimaryExpression	1		3279321	1					
ANR	3279663	Argument	NULLSTRING		3279321	1					
ANR	3279664	Identifier	NULLSTRING		3279321	0					
ANR	3279665	CompoundStatement		63:48:1891:1891	3279321	1					
ANR	3279666	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7589:4:207410:207444	3279321	0	True				
ANR	3279667	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3279321	0					
ANR	3279668	Callee	EXCEPT		3279321	0					
ANR	3279669	Identifier	EXCEPT		3279321	0					
ANR	3279670	ArgumentList	"""Bad %s result"""		3279321	1					
ANR	3279671	Argument	"""Bad %s result"""		3279321	0					
ANR	3279672	PrimaryExpression	"""Bad %s result"""		3279321	0					
ANR	3279673	Argument	command		3279321	1					
ANR	3279674	Identifier	command		3279321	0					
ANR	3279675	ExpressionStatement	attrs . clearAll ( )	7591:3:207454:207470	3279321	1	True				
ANR	3279676	CallExpression	attrs . clearAll ( )		3279321	0					
ANR	3279677	Callee	attrs . clearAll		3279321	0					
ANR	3279678	MemberAccess	attrs . clearAll		3279321	0					
ANR	3279679	Identifier	attrs		3279321	0					
ANR	3279680	Identifier	clearAll		3279321	1					
ANR	3279681	ArgumentList			3279321	1					
ANR	3279682	ForStatement	for ( int i = 2 ; i < result -> argc ; i ++ )		3279321	2					
ANR	3279683	ForInit	int i = 2 ;	7592:9:207481:207490	3279321	0	True				
ANR	3279684	IdentifierDeclStatement	int i = 2 ;		3279321	0					
ANR	3279685	IdentifierDecl	i = 2		3279321	0					
ANR	3279686	IdentifierDeclType	int		3279321	0					
ANR	3279687	Identifier	i		3279321	1					
ANR	3279688	AssignmentExpression	i = 2		3279321	2		=			
ANR	3279689	Identifier	i		3279321	0					
ANR	3279690	PrimaryExpression	2		3279321	1					
ANR	3279691	Condition	i < result -> argc	7592:20:207492:207507	3279321	1	True				
ANR	3279692	RelationalExpression	i < result -> argc		3279321	0		<			
ANR	3279693	Identifier	i		3279321	0					
ANR	3279694	PtrMemberAccess	result -> argc		3279321	1					
ANR	3279695	Identifier	result		3279321	0					
ANR	3279696	Identifier	argc		3279321	1					
ANR	3279697	PostIncDecOperationExpression	i ++	7592:38:207510:207512	3279321	2	True				
ANR	3279698	Identifier	i		3279321	0					
ANR	3279699	IncDec	++		3279321	1					
ANR	3279700	CompoundStatement		67:44:2003:2003	3279321	3					
ANR	3279701	ExpressionStatement	attrs . append ( result -> argv [ i ] )	7593:4:207522:207553	3279321	0	True				
ANR	3279702	CallExpression	attrs . append ( result -> argv [ i ] )		3279321	0					
ANR	3279703	Callee	attrs . append		3279321	0					
ANR	3279704	MemberAccess	attrs . append		3279321	0					
ANR	3279705	Identifier	attrs		3279321	0					
ANR	3279706	Identifier	append		3279321	1					
ANR	3279707	ArgumentList	result -> argv [ i ]		3279321	1					
ANR	3279708	Argument	result -> argv [ i ]		3279321	0					
ANR	3279709	ArrayIndexing	result -> argv [ i ]		3279321	0					
ANR	3279710	PtrMemberAccess	result -> argv		3279321	0					
ANR	3279711	Identifier	result		3279321	0					
ANR	3279712	Identifier	argv		3279321	1					
ANR	3279713	Identifier	i		3279321	1					
ANR	3279714	Statement	delete	7597:2:207567:207572	3279321	2	True				
ANR	3279715	ExpressionStatement	result	7597:9:207574:207580	3279321	3	True				
ANR	3279716	Identifier	result		3279321	0					
ANR	3279717	ReturnStatement	return rc ;	7598:2:207584:207593	3279321	4	True				
ANR	3279718	Identifier	rc		3279321	0					
ANR	3279719	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3279321	22					
ANR	3279720	Condition	"check_pending_timeout ( command , buf )"	7602:6:207649:207683	3279321	0	True				
ANR	3279721	CallExpression	"check_pending_timeout ( command , buf )"		3279321	0					
ANR	3279722	Callee	check_pending_timeout		3279321	0					
ANR	3279723	Identifier	check_pending_timeout		3279321	0					
ANR	3279724	ArgumentList	command		3279321	1					
ANR	3279725	Argument	command		3279321	0					
ANR	3279726	Identifier	command		3279321	0					
ANR	3279727	Argument	buf		3279321	1					
ANR	3279728	Identifier	buf		3279321	0					
ANR	3279729	CompoundStatement		78:1:2176:2176	3279321	1					
ANR	3279730	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7605:2:207725:207773	3279321	0	True				
ANR	3279731	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3279321	0					
ANR	3279732	Callee	sprintf		3279321	0					
ANR	3279733	Identifier	sprintf		3279321	0					
ANR	3279734	ArgumentList	error_string		3279321	1					
ANR	3279735	Argument	error_string		3279321	0					
ANR	3279736	Identifier	error_string		3279321	0					
ANR	3279737	Argument	"""%s timed out"""		3279321	1					
ANR	3279738	PrimaryExpression	"""%s timed out"""		3279321	0					
ANR	3279739	Argument	command		3279321	2					
ANR	3279740	Identifier	command		3279321	0					
ANR	3279741	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7606:2:207777:207812	3279321	1	True				
ANR	3279742	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3279321	0					
ANR	3279743	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7610:1:207871:207904	3279321	23	True				
ANR	3279744	Identifier	GAHPCLIENT_COMMAND_PENDING		3279321	0					
ANR	3279745	ReturnType	int		3279321	1					
ANR	3279746	Identifier	GahpClient :: dcloud_info		3279321	2					
ANR	3279747	ParameterList	"const char * service_url , const char * username , const char * password , const char * instance_id , StringList & attrs"		3279321	3					
ANR	3279748	Parameter	const char * service_url	7521:29:205366:205388	3279321	0	True				
ANR	3279749	ParameterType	const char *		3279321	0					
ANR	3279750	Identifier	service_url		3279321	1					
ANR	3279751	Parameter	const char * username	7522:8:205399:205418	3279321	1	True				
ANR	3279752	ParameterType	const char *		3279321	0					
ANR	3279753	Identifier	username		3279321	1					
ANR	3279754	Parameter	const char * password	7523:8:205429:205448	3279321	2	True				
ANR	3279755	ParameterType	const char *		3279321	0					
ANR	3279756	Identifier	password		3279321	1					
ANR	3279757	Parameter	const char * instance_id	7524:8:205459:205481	3279321	3	True				
ANR	3279758	ParameterType	const char *		3279321	0					
ANR	3279759	Identifier	instance_id		3279321	1					
ANR	3279760	Parameter	StringList & attrs	7525:8:205492:205508	3279321	4	True				
ANR	3279761	ParameterType	StringList &		3279321	0					
ANR	3279762	Identifier	attrs		3279321	1					
ANR	3279763	CFGEntryNode	ENTRY		3279321		True				
ANR	3279764	CFGExitNode	EXIT		3279321		True				
ANR	3279765	Symbol	reqline . sprintf		3279321						
ANR	3279766	Symbol	server -> m_commands_supported		3279321						
ANR	3279767	Symbol	server		3279321						
ANR	3279768	Symbol	escapeGahpString		3279321						
ANR	3279769	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3279321						
ANR	3279770	Symbol	* server		3279321						
ANR	3279771	Symbol	results_only		3279321						
ANR	3279772	Symbol	result -> argv		3279321						
ANR	3279773	Symbol	* server -> m_commands_supported		3279321						
ANR	3279774	Symbol	result		3279321						
ANR	3279775	Symbol	password		3279321						
ANR	3279776	Symbol	* result		3279321						
ANR	3279777	Symbol	server -> m_commands_supported -> contains_anycase		3279321						
ANR	3279778	Symbol	GAHPCLIENT_COMMAND_PENDING		3279321						
ANR	3279779	Symbol	reqline		3279321						
ANR	3279780	Symbol	m_mode		3279321						
ANR	3279781	Symbol	* result -> argv		3279321						
ANR	3279782	Symbol	strcmp		3279321						
ANR	3279783	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3279321						
ANR	3279784	Symbol	* * result		3279321						
ANR	3279785	Symbol	i		3279321						
ANR	3279786	Symbol	NULLSTRING		3279321						
ANR	3279787	Symbol	command		3279321						
ANR	3279788	Symbol	attrs		3279321						
ANR	3279789	Symbol	esc4		3279321						
ANR	3279790	Symbol	get_pending_result		3279321						
ANR	3279791	Symbol	service_url		3279321						
ANR	3279792	Symbol	esc3		3279321						
ANR	3279793	Symbol	rc		3279321						
ANR	3279794	Symbol	error_string		3279321						
ANR	3279795	Symbol	esc2		3279321						
ANR	3279796	Symbol	buf		3279321						
ANR	3279797	Symbol	instance_id		3279321						
ANR	3279798	Symbol	esc1		3279321						
ANR	3279799	Symbol	reqline . Value		3279321						
ANR	3279800	Symbol	* i		3279321						
ANR	3279801	Symbol	x		3279321						
ANR	3279802	Symbol	true		3279321						
ANR	3279803	Symbol	result -> argc		3279321						
ANR	3279804	Symbol	FALSE		3279321						
ANR	3279805	Symbol	* * server		3279321						
ANR	3279806	Symbol	strdup		3279321						
ANR	3279807	Symbol	check_pending_timeout		3279321						
ANR	3279808	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3279321						
ANR	3279809	Symbol	username		3279321						
ANR	3279810	Symbol	is_pending		3279321						
ANR	3279811	Symbol	deleg_proxy		3279321						
ANR	3279812	Function	GahpClient :: dcloud_find	7613:0:207910:210522							
ANR	3279813	FunctionDef	"GahpClient :: dcloud_find (const char * service_url , const char * username , const char * password , const char * instance_name , char * * instance_id)"		3279812	0					
ANR	3279814	CompoundStatement		7618:0:208088:210522	3279812	0					
ANR	3279815	Statement	static	7621:1:208181:208186	3279812	0	True				
ANR	3279816	IdentifierDeclStatement	"const char * command = ""DELTACLOUD_VM_FIND"" ;"	7621:8:208188:208230	3279812	1	True				
ANR	3279817	IdentifierDecl	"* command = ""DELTACLOUD_VM_FIND"""		3279812	0					
ANR	3279818	IdentifierDeclType	const char *		3279812	0					
ANR	3279819	Identifier	command		3279812	1					
ANR	3279820	AssignmentExpression	"* command = ""DELTACLOUD_VM_FIND"""		3279812	2		=			
ANR	3279821	Identifier	command		3279812	0					
ANR	3279822	PrimaryExpression	"""DELTACLOUD_VM_FIND"""		3279812	1					
ANR	3279823	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3279812	2					
ANR	3279824	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7624:6:208278:208343	3279812	0	True				
ANR	3279825	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3279812	0		==			
ANR	3279826	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3279812	0					
ANR	3279827	Callee	server -> m_commands_supported -> contains_anycase		3279812	0					
ANR	3279828	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3279812	0					
ANR	3279829	PtrMemberAccess	server -> m_commands_supported		3279812	0					
ANR	3279830	Identifier	server		3279812	0					
ANR	3279831	Identifier	m_commands_supported		3279812	1					
ANR	3279832	Identifier	contains_anycase		3279812	1					
ANR	3279833	ArgumentList	command		3279812	1					
ANR	3279834	Argument	command		3279812	0					
ANR	3279835	Identifier	command		3279812	0					
ANR	3279836	Identifier	FALSE		3279812	1					
ANR	3279837	CompoundStatement		7:75:258:258	3279812	1					
ANR	3279838	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7625:2:208351:208390	3279812	0	True				
ANR	3279839	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3279812	0					
ANR	3279840	IfStatement	if ( ! service_url )		3279812	3					
ANR	3279841	Condition	! service_url	7629:6:208428:208439	3279812	0	True				
ANR	3279842	UnaryOperationExpression	! service_url		3279812	0					
ANR	3279843	UnaryOperator	!		3279812	0					
ANR	3279844	Identifier	service_url		3279812	1					
ANR	3279845	ExpressionStatement	service_url = NULLSTRING	7629:21:208443:208467	3279812	1	True				
ANR	3279846	AssignmentExpression	service_url = NULLSTRING		3279812	0		=			
ANR	3279847	Identifier	service_url		3279812	0					
ANR	3279848	Identifier	NULLSTRING		3279812	1					
ANR	3279849	IfStatement	if ( ! username )		3279812	4					
ANR	3279850	Condition	! username	7630:6:208475:208483	3279812	0	True				
ANR	3279851	UnaryOperationExpression	! username		3279812	0					
ANR	3279852	UnaryOperator	!		3279812	0					
ANR	3279853	Identifier	username		3279812	1					
ANR	3279854	ExpressionStatement	username = NULLSTRING	7630:18:208487:208508	3279812	1	True				
ANR	3279855	AssignmentExpression	username = NULLSTRING		3279812	0		=			
ANR	3279856	Identifier	username		3279812	0					
ANR	3279857	Identifier	NULLSTRING		3279812	1					
ANR	3279858	IfStatement	if ( ! password )		3279812	5					
ANR	3279859	Condition	! password	7631:6:208516:208524	3279812	0	True				
ANR	3279860	UnaryOperationExpression	! password		3279812	0					
ANR	3279861	UnaryOperator	!		3279812	0					
ANR	3279862	Identifier	password		3279812	1					
ANR	3279863	ExpressionStatement	password = NULLSTRING	7631:18:208528:208549	3279812	1	True				
ANR	3279864	AssignmentExpression	password = NULLSTRING		3279812	0		=			
ANR	3279865	Identifier	password		3279812	0					
ANR	3279866	Identifier	NULLSTRING		3279812	1					
ANR	3279867	IfStatement	if ( ! instance_name )		3279812	6					
ANR	3279868	Condition	! instance_name	7632:6:208557:208570	3279812	0	True				
ANR	3279869	UnaryOperationExpression	! instance_name		3279812	0					
ANR	3279870	UnaryOperator	!		3279812	0					
ANR	3279871	Identifier	instance_name		3279812	1					
ANR	3279872	ExpressionStatement	instance_name = NULLSTRING	7632:23:208574:208600	3279812	1	True				
ANR	3279873	AssignmentExpression	instance_name = NULLSTRING		3279812	0		=			
ANR	3279874	Identifier	instance_name		3279812	0					
ANR	3279875	Identifier	NULLSTRING		3279812	1					
ANR	3279876	IdentifierDeclStatement	MyString reqline ;	7634:1:208604:208620	3279812	7	True				
ANR	3279877	IdentifierDecl	reqline		3279812	0					
ANR	3279878	IdentifierDeclType	MyString		3279812	0					
ANR	3279879	Identifier	reqline		3279812	1					
ANR	3279880	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7636:1:208624:208676	3279812	8	True				
ANR	3279881	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3279812	0					
ANR	3279882	IdentifierDeclType	char *		3279812	0					
ANR	3279883	Identifier	esc1		3279812	1					
ANR	3279884	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3279812	2		=			
ANR	3279885	Identifier	esc1		3279812	0					
ANR	3279886	CallExpression	strdup ( escapeGahpString ( service_url ) )		3279812	1					
ANR	3279887	Callee	strdup		3279812	0					
ANR	3279888	Identifier	strdup		3279812	0					
ANR	3279889	ArgumentList	escapeGahpString ( service_url )		3279812	1					
ANR	3279890	Argument	escapeGahpString ( service_url )		3279812	0					
ANR	3279891	CallExpression	escapeGahpString ( service_url )		3279812	0					
ANR	3279892	Callee	escapeGahpString		3279812	0					
ANR	3279893	Identifier	escapeGahpString		3279812	0					
ANR	3279894	ArgumentList	service_url		3279812	1					
ANR	3279895	Argument	service_url		3279812	0					
ANR	3279896	Identifier	service_url		3279812	0					
ANR	3279897	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( username ) ) ;	7637:1:208679:208728	3279812	9	True				
ANR	3279898	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( username ) )		3279812	0					
ANR	3279899	IdentifierDeclType	char *		3279812	0					
ANR	3279900	Identifier	esc2		3279812	1					
ANR	3279901	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( username ) )		3279812	2		=			
ANR	3279902	Identifier	esc2		3279812	0					
ANR	3279903	CallExpression	strdup ( escapeGahpString ( username ) )		3279812	1					
ANR	3279904	Callee	strdup		3279812	0					
ANR	3279905	Identifier	strdup		3279812	0					
ANR	3279906	ArgumentList	escapeGahpString ( username )		3279812	1					
ANR	3279907	Argument	escapeGahpString ( username )		3279812	0					
ANR	3279908	CallExpression	escapeGahpString ( username )		3279812	0					
ANR	3279909	Callee	escapeGahpString		3279812	0					
ANR	3279910	Identifier	escapeGahpString		3279812	0					
ANR	3279911	ArgumentList	username		3279812	1					
ANR	3279912	Argument	username		3279812	0					
ANR	3279913	Identifier	username		3279812	0					
ANR	3279914	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( password ) ) ;	7638:1:208731:208780	3279812	10	True				
ANR	3279915	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( password ) )		3279812	0					
ANR	3279916	IdentifierDeclType	char *		3279812	0					
ANR	3279917	Identifier	esc3		3279812	1					
ANR	3279918	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( password ) )		3279812	2		=			
ANR	3279919	Identifier	esc3		3279812	0					
ANR	3279920	CallExpression	strdup ( escapeGahpString ( password ) )		3279812	1					
ANR	3279921	Callee	strdup		3279812	0					
ANR	3279922	Identifier	strdup		3279812	0					
ANR	3279923	ArgumentList	escapeGahpString ( password )		3279812	1					
ANR	3279924	Argument	escapeGahpString ( password )		3279812	0					
ANR	3279925	CallExpression	escapeGahpString ( password )		3279812	0					
ANR	3279926	Callee	escapeGahpString		3279812	0					
ANR	3279927	Identifier	escapeGahpString		3279812	0					
ANR	3279928	ArgumentList	password		3279812	1					
ANR	3279929	Argument	password		3279812	0					
ANR	3279930	Identifier	password		3279812	0					
ANR	3279931	IdentifierDeclStatement	char * esc4 = strdup ( escapeGahpString ( instance_name ) ) ;	7639:1:208783:208837	3279812	11	True				
ANR	3279932	IdentifierDecl	* esc4 = strdup ( escapeGahpString ( instance_name ) )		3279812	0					
ANR	3279933	IdentifierDeclType	char *		3279812	0					
ANR	3279934	Identifier	esc4		3279812	1					
ANR	3279935	AssignmentExpression	* esc4 = strdup ( escapeGahpString ( instance_name ) )		3279812	2		=			
ANR	3279936	Identifier	esc4		3279812	0					
ANR	3279937	CallExpression	strdup ( escapeGahpString ( instance_name ) )		3279812	1					
ANR	3279938	Callee	strdup		3279812	0					
ANR	3279939	Identifier	strdup		3279812	0					
ANR	3279940	ArgumentList	escapeGahpString ( instance_name )		3279812	1					
ANR	3279941	Argument	escapeGahpString ( instance_name )		3279812	0					
ANR	3279942	CallExpression	escapeGahpString ( instance_name )		3279812	0					
ANR	3279943	Callee	escapeGahpString		3279812	0					
ANR	3279944	Identifier	escapeGahpString		3279812	0					
ANR	3279945	ArgumentList	instance_name		3279812	1					
ANR	3279946	Argument	instance_name		3279812	0					
ANR	3279947	Identifier	instance_name		3279812	0					
ANR	3279948	IdentifierDeclStatement	"bool x = reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 ) ;"	7641:1:208841:208904	3279812	12	True				
ANR	3279949	IdentifierDecl	"x = reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3279812	0					
ANR	3279950	IdentifierDeclType	bool		3279812	0					
ANR	3279951	Identifier	x		3279812	1					
ANR	3279952	AssignmentExpression	"x = reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3279812	2		=			
ANR	3279953	Identifier	x		3279812	0					
ANR	3279954	CallExpression	"reqline . sprintf ( ""%s %s %s %s"" , esc1 , esc2 , esc3 , esc4 )"		3279812	1					
ANR	3279955	Callee	reqline . sprintf		3279812	0					
ANR	3279956	MemberAccess	reqline . sprintf		3279812	0					
ANR	3279957	Identifier	reqline		3279812	0					
ANR	3279958	Identifier	sprintf		3279812	1					
ANR	3279959	ArgumentList	"""%s %s %s %s"""		3279812	1					
ANR	3279960	Argument	"""%s %s %s %s"""		3279812	0					
ANR	3279961	PrimaryExpression	"""%s %s %s %s"""		3279812	0					
ANR	3279962	Argument	esc1		3279812	1					
ANR	3279963	Identifier	esc1		3279812	0					
ANR	3279964	Argument	esc2		3279812	2					
ANR	3279965	Identifier	esc2		3279812	0					
ANR	3279966	Argument	esc3		3279812	3					
ANR	3279967	Identifier	esc3		3279812	0					
ANR	3279968	Argument	esc4		3279812	4					
ANR	3279969	Identifier	esc4		3279812	0					
ANR	3279970	ExpressionStatement	free ( esc1 )	7643:1:208908:208920	3279812	13	True				
ANR	3279971	CallExpression	free ( esc1 )		3279812	0					
ANR	3279972	Callee	free		3279812	0					
ANR	3279973	Identifier	free		3279812	0					
ANR	3279974	ArgumentList	esc1		3279812	1					
ANR	3279975	Argument	esc1		3279812	0					
ANR	3279976	Identifier	esc1		3279812	0					
ANR	3279977	ExpressionStatement	free ( esc2 )	7644:1:208923:208935	3279812	14	True				
ANR	3279978	CallExpression	free ( esc2 )		3279812	0					
ANR	3279979	Callee	free		3279812	0					
ANR	3279980	Identifier	free		3279812	0					
ANR	3279981	ArgumentList	esc2		3279812	1					
ANR	3279982	Argument	esc2		3279812	0					
ANR	3279983	Identifier	esc2		3279812	0					
ANR	3279984	ExpressionStatement	free ( esc3 )	7645:1:208938:208950	3279812	15	True				
ANR	3279985	CallExpression	free ( esc3 )		3279812	0					
ANR	3279986	Callee	free		3279812	0					
ANR	3279987	Identifier	free		3279812	0					
ANR	3279988	ArgumentList	esc3		3279812	1					
ANR	3279989	Argument	esc3		3279812	0					
ANR	3279990	Identifier	esc3		3279812	0					
ANR	3279991	ExpressionStatement	free ( esc4 )	7646:1:208953:208965	3279812	16	True				
ANR	3279992	CallExpression	free ( esc4 )		3279812	0					
ANR	3279993	Callee	free		3279812	0					
ANR	3279994	Identifier	free		3279812	0					
ANR	3279995	ArgumentList	esc4		3279812	1					
ANR	3279996	Argument	esc4		3279812	0					
ANR	3279997	Identifier	esc4		3279812	0					
ANR	3279998	ExpressionStatement	ASSERT ( x == true )	7647:1:208968:208987	3279812	17	True				
ANR	3279999	CallExpression	ASSERT ( x == true )		3279812	0					
ANR	3280000	Callee	ASSERT		3279812	0					
ANR	3280001	Identifier	ASSERT		3279812	0					
ANR	3280002	ArgumentList	x == true		3279812	1					
ANR	3280003	Argument	x == true		3279812	0					
ANR	3280004	EqualityExpression	x == true		3279812	0		==			
ANR	3280005	Identifier	x		3279812	0					
ANR	3280006	Identifier	true		3279812	1					
ANR	3280007	IdentifierDeclStatement	const char * buf = reqline . Value ( ) ;	7649:1:208991:209024	3279812	18	True				
ANR	3280008	IdentifierDecl	* buf = reqline . Value ( )		3279812	0					
ANR	3280009	IdentifierDeclType	const char *		3279812	0					
ANR	3280010	Identifier	buf		3279812	1					
ANR	3280011	AssignmentExpression	* buf = reqline . Value ( )		3279812	2		=			
ANR	3280012	Identifier	buf		3279812	0					
ANR	3280013	CallExpression	reqline . Value ( )		3279812	1					
ANR	3280014	Callee	reqline . Value		3279812	0					
ANR	3280015	MemberAccess	reqline . Value		3279812	0					
ANR	3280016	Identifier	reqline		3279812	0					
ANR	3280017	Identifier	Value		3279812	1					
ANR	3280018	ArgumentList			3279812	1					
ANR	3280019	IfStatement	"if ( ! is_pending ( command , buf ) )"		3279812	19					
ANR	3280020	Condition	"! is_pending ( command , buf )"	7651:6:209117:209140	3279812	0	True				
ANR	3280021	UnaryOperationExpression	"! is_pending ( command , buf )"		3279812	0					
ANR	3280022	UnaryOperator	!		3279812	0					
ANR	3280023	CallExpression	"is_pending ( command , buf )"		3279812	1					
ANR	3280024	Callee	is_pending		3279812	0					
ANR	3280025	Identifier	is_pending		3279812	0					
ANR	3280026	ArgumentList	command		3279812	1					
ANR	3280027	Argument	command		3279812	0					
ANR	3280028	Identifier	command		3279812	0					
ANR	3280029	Argument	buf		3279812	1					
ANR	3280030	Identifier	buf		3279812	0					
ANR	3280031	CompoundStatement		34:33:1055:1055	3279812	1					
ANR	3280032	IfStatement	if ( m_mode == results_only )		3279812	0					
ANR	3280033	Condition	m_mode == results_only	7653:7:209244:209265	3279812	0	True				
ANR	3280034	EqualityExpression	m_mode == results_only		3279812	0		==			
ANR	3280035	Identifier	m_mode		3279812	0					
ANR	3280036	Identifier	results_only		3279812	1					
ANR	3280037	CompoundStatement		36:32:1180:1180	3279812	1					
ANR	3280038	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7654:3:209274:209313	3279812	0	True				
ANR	3280039	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3279812	0					
ANR	3280040	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7656:2:209321:209359	3279812	1	True				
ANR	3280041	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3279812	0					
ANR	3280042	Callee	now_pending		3279812	0					
ANR	3280043	Identifier	now_pending		3279812	0					
ANR	3280044	ArgumentList	command		3279812	1					
ANR	3280045	Argument	command		3279812	0					
ANR	3280046	Identifier	command		3279812	0					
ANR	3280047	Argument	buf		3279812	1					
ANR	3280048	Identifier	buf		3279812	0					
ANR	3280049	Argument	deleg_proxy		3279812	2					
ANR	3280050	Identifier	deleg_proxy		3279812	0					
ANR	3280051	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7662:1:209449:209501	3279812	20	True				
ANR	3280052	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3279812	0					
ANR	3280053	IdentifierDeclType	Gahp_Args *		3279812	0					
ANR	3280054	Identifier	result		3279812	1					
ANR	3280055	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3279812	2		=			
ANR	3280056	Identifier	result		3279812	0					
ANR	3280057	CallExpression	"get_pending_result ( command , buf )"		3279812	1					
ANR	3280058	Callee	get_pending_result		3279812	0					
ANR	3280059	Identifier	get_pending_result		3279812	0					
ANR	3280060	ArgumentList	command		3279812	1					
ANR	3280061	Argument	command		3279812	0					
ANR	3280062	Identifier	command		3279812	0					
ANR	3280063	Argument	buf		3279812	1					
ANR	3280064	Identifier	buf		3279812	0					
ANR	3280065	IfStatement	if ( result )		3279812	21					
ANR	3280066	Condition	result	7668:6:209615:209620	3279812	0	True				
ANR	3280067	Identifier	result		3279812	0					
ANR	3280068	CompoundStatement		53:2:1565:1575	3279812	1					
ANR	3280069	IdentifierDeclStatement	int rc = 0 ;	7670:2:209654:209664	3279812	0	True				
ANR	3280070	IdentifierDecl	rc = 0		3279812	0					
ANR	3280071	IdentifierDeclType	int		3279812	0					
ANR	3280072	Identifier	rc		3279812	1					
ANR	3280073	AssignmentExpression	rc = 0		3279812	2		=			
ANR	3280074	Identifier	rc		3279812	0					
ANR	3280075	PrimaryExpression	0		3279812	1					
ANR	3280076	IfStatement	if ( result -> argc < 2 || result -> argc > 3 )		3279812	1					
ANR	3280077	Condition	result -> argc < 2 || result -> argc > 3	7671:7:209673:209708	3279812	0	True				
ANR	3280078	OrExpression	result -> argc < 2 || result -> argc > 3		3279812	0		||			
ANR	3280079	RelationalExpression	result -> argc < 2		3279812	0		<			
ANR	3280080	PtrMemberAccess	result -> argc		3279812	0					
ANR	3280081	Identifier	result		3279812	0					
ANR	3280082	Identifier	argc		3279812	1					
ANR	3280083	PrimaryExpression	2		3279812	1					
ANR	3280084	RelationalExpression	result -> argc > 3		3279812	1		>			
ANR	3280085	PtrMemberAccess	result -> argc		3279812	0					
ANR	3280086	Identifier	result		3279812	0					
ANR	3280087	Identifier	argc		3279812	1					
ANR	3280088	PrimaryExpression	3		3279812	1					
ANR	3280089	CompoundStatement		54:46:1623:1623	3279812	1					
ANR	3280090	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7672:3:209717:209751	3279812	0	True				
ANR	3280091	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3279812	0					
ANR	3280092	Callee	EXCEPT		3279812	0					
ANR	3280093	Identifier	EXCEPT		3279812	0					
ANR	3280094	ArgumentList	"""Bad %s result"""		3279812	1					
ANR	3280095	Argument	"""Bad %s result"""		3279812	0					
ANR	3280096	PrimaryExpression	"""Bad %s result"""		3279812	0					
ANR	3280097	Argument	command		3279812	1					
ANR	3280098	Identifier	command		3279812	0					
ANR	3280099	ElseStatement	else		3279812	0					
ANR	3280100	IfStatement	if ( result -> argc == 2 )		3279812	0					
ANR	3280101	Condition	result -> argc == 2	7673:14:209767:209783	3279812	0	True				
ANR	3280102	EqualityExpression	result -> argc == 2		3279812	0		==			
ANR	3280103	PtrMemberAccess	result -> argc		3279812	0					
ANR	3280104	Identifier	result		3279812	0					
ANR	3280105	Identifier	argc		3279812	1					
ANR	3280106	PrimaryExpression	2		3279812	1					
ANR	3280107	CompoundStatement		56:34:1698:1698	3279812	1					
ANR	3280108	IfStatement	"if ( ! strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3279812	0					
ANR	3280109	Condition	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7674:8:209797:209834	3279812	0	True				
ANR	3280110	UnaryOperationExpression	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3279812	0					
ANR	3280111	UnaryOperator	!		3279812	0					
ANR	3280112	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3279812	1					
ANR	3280113	Callee	strcmp		3279812	0					
ANR	3280114	Identifier	strcmp		3279812	0					
ANR	3280115	ArgumentList	result -> argv [ 1 ]		3279812	1					
ANR	3280116	Argument	result -> argv [ 1 ]		3279812	0					
ANR	3280117	ArrayIndexing	result -> argv [ 1 ]		3279812	0					
ANR	3280118	PtrMemberAccess	result -> argv		3279812	0					
ANR	3280119	Identifier	result		3279812	0					
ANR	3280120	Identifier	argv		3279812	1					
ANR	3280121	PrimaryExpression	1		3279812	1					
ANR	3280122	Argument	NULLSTRING		3279812	1					
ANR	3280123	Identifier	NULLSTRING		3279812	0					
ANR	3280124	CompoundStatement		57:49:1749:1749	3279812	1					
ANR	3280125	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7675:4:209844:209878	3279812	0	True				
ANR	3280126	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3279812	0					
ANR	3280127	Callee	EXCEPT		3279812	0					
ANR	3280128	Identifier	EXCEPT		3279812	0					
ANR	3280129	ArgumentList	"""Bad %s result"""		3279812	1					
ANR	3280130	Argument	"""Bad %s result"""		3279812	0					
ANR	3280131	PrimaryExpression	"""Bad %s result"""		3279812	0					
ANR	3280132	Argument	command		3279812	1					
ANR	3280133	Identifier	command		3279812	0					
ANR	3280134	ExpressionStatement	error_string = result -> argv [ 1 ]	7677:3:209888:209918	3279812	1	True				
ANR	3280135	AssignmentExpression	error_string = result -> argv [ 1 ]		3279812	0		=			
ANR	3280136	Identifier	error_string		3279812	0					
ANR	3280137	ArrayIndexing	result -> argv [ 1 ]		3279812	1					
ANR	3280138	PtrMemberAccess	result -> argv		3279812	0					
ANR	3280139	Identifier	result		3279812	0					
ANR	3280140	Identifier	argv		3279812	1					
ANR	3280141	PrimaryExpression	1		3279812	1					
ANR	3280142	ExpressionStatement	rc = 1	7678:3:209923:209929	3279812	2	True				
ANR	3280143	AssignmentExpression	rc = 1		3279812	0		=			
ANR	3280144	Identifier	rc		3279812	0					
ANR	3280145	PrimaryExpression	1		3279812	1					
ANR	3280146	ElseStatement	else		3279812	0					
ANR	3280147	CompoundStatement		62:9:1851:1851	3279812	0					
ANR	3280148	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3279812	0					
ANR	3280149	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7680:8:209950:209986	3279812	0	True				
ANR	3280150	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3279812	0					
ANR	3280151	Callee	strcmp		3279812	0					
ANR	3280152	Identifier	strcmp		3279812	0					
ANR	3280153	ArgumentList	result -> argv [ 1 ]		3279812	1					
ANR	3280154	Argument	result -> argv [ 1 ]		3279812	0					
ANR	3280155	ArrayIndexing	result -> argv [ 1 ]		3279812	0					
ANR	3280156	PtrMemberAccess	result -> argv		3279812	0					
ANR	3280157	Identifier	result		3279812	0					
ANR	3280158	Identifier	argv		3279812	1					
ANR	3280159	PrimaryExpression	1		3279812	1					
ANR	3280160	Argument	NULLSTRING		3279812	1					
ANR	3280161	Identifier	NULLSTRING		3279812	0					
ANR	3280162	CompoundStatement		63:48:1901:1901	3279812	1					
ANR	3280163	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7681:4:209996:210030	3279812	0	True				
ANR	3280164	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3279812	0					
ANR	3280165	Callee	EXCEPT		3279812	0					
ANR	3280166	Identifier	EXCEPT		3279812	0					
ANR	3280167	ArgumentList	"""Bad %s result"""		3279812	1					
ANR	3280168	Argument	"""Bad %s result"""		3279812	0					
ANR	3280169	PrimaryExpression	"""Bad %s result"""		3279812	0					
ANR	3280170	Argument	command		3279812	1					
ANR	3280171	Identifier	command		3279812	0					
ANR	3280172	IfStatement	"if ( strcmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3279812	1					
ANR	3280173	Condition	"strcmp ( result -> argv [ 2 ] , NULLSTRING )"	7683:8:210045:210081	3279812	0	True				
ANR	3280174	CallExpression	"strcmp ( result -> argv [ 2 ] , NULLSTRING )"		3279812	0					
ANR	3280175	Callee	strcmp		3279812	0					
ANR	3280176	Identifier	strcmp		3279812	0					
ANR	3280177	ArgumentList	result -> argv [ 2 ]		3279812	1					
ANR	3280178	Argument	result -> argv [ 2 ]		3279812	0					
ANR	3280179	ArrayIndexing	result -> argv [ 2 ]		3279812	0					
ANR	3280180	PtrMemberAccess	result -> argv		3279812	0					
ANR	3280181	Identifier	result		3279812	0					
ANR	3280182	Identifier	argv		3279812	1					
ANR	3280183	PrimaryExpression	2		3279812	1					
ANR	3280184	Argument	NULLSTRING		3279812	1					
ANR	3280185	Identifier	NULLSTRING		3279812	0					
ANR	3280186	CompoundStatement		66:48:1996:1996	3279812	1					
ANR	3280187	ExpressionStatement	* instance_id = strdup ( result -> argv [ 2 ] )	7684:4:210091:210131	3279812	0	True				
ANR	3280188	AssignmentExpression	* instance_id = strdup ( result -> argv [ 2 ] )		3279812	0		=			
ANR	3280189	UnaryOperationExpression	* instance_id		3279812	0					
ANR	3280190	UnaryOperator	*		3279812	0					
ANR	3280191	Identifier	instance_id		3279812	1					
ANR	3280192	CallExpression	strdup ( result -> argv [ 2 ] )		3279812	1					
ANR	3280193	Callee	strdup		3279812	0					
ANR	3280194	Identifier	strdup		3279812	0					
ANR	3280195	ArgumentList	result -> argv [ 2 ]		3279812	1					
ANR	3280196	Argument	result -> argv [ 2 ]		3279812	0					
ANR	3280197	ArrayIndexing	result -> argv [ 2 ]		3279812	0					
ANR	3280198	PtrMemberAccess	result -> argv		3279812	0					
ANR	3280199	Identifier	result		3279812	0					
ANR	3280200	Identifier	argv		3279812	1					
ANR	3280201	PrimaryExpression	2		3279812	1					
ANR	3280202	ElseStatement	else		3279812	0					
ANR	3280203	CompoundStatement		68:10:2054:2054	3279812	0					
ANR	3280204	ExpressionStatement	* instance_id = NULL	7686:4:210149:210168	3279812	0	True				
ANR	3280205	AssignmentExpression	* instance_id = NULL		3279812	0		=			
ANR	3280206	UnaryOperationExpression	* instance_id		3279812	0					
ANR	3280207	UnaryOperator	*		3279812	0					
ANR	3280208	Identifier	instance_id		3279812	1					
ANR	3280209	Identifier	NULL		3279812	1					
ANR	3280210	Statement	delete	7690:2:210182:210187	3279812	2	True				
ANR	3280211	ExpressionStatement	result	7690:9:210189:210195	3279812	3	True				
ANR	3280212	Identifier	result		3279812	0					
ANR	3280213	ReturnStatement	return rc ;	7691:2:210199:210208	3279812	4	True				
ANR	3280214	Identifier	rc		3279812	0					
ANR	3280215	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3279812	22					
ANR	3280216	Condition	"check_pending_timeout ( command , buf )"	7695:6:210264:210298	3279812	0	True				
ANR	3280217	CallExpression	"check_pending_timeout ( command , buf )"		3279812	0					
ANR	3280218	Callee	check_pending_timeout		3279812	0					
ANR	3280219	Identifier	check_pending_timeout		3279812	0					
ANR	3280220	ArgumentList	command		3279812	1					
ANR	3280221	Argument	command		3279812	0					
ANR	3280222	Identifier	command		3279812	0					
ANR	3280223	Argument	buf		3279812	1					
ANR	3280224	Identifier	buf		3279812	0					
ANR	3280225	CompoundStatement		79:1:2215:2215	3279812	1					
ANR	3280226	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7698:2:210340:210388	3279812	0	True				
ANR	3280227	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3279812	0					
ANR	3280228	Callee	sprintf		3279812	0					
ANR	3280229	Identifier	sprintf		3279812	0					
ANR	3280230	ArgumentList	error_string		3279812	1					
ANR	3280231	Argument	error_string		3279812	0					
ANR	3280232	Identifier	error_string		3279812	0					
ANR	3280233	Argument	"""%s timed out"""		3279812	1					
ANR	3280234	PrimaryExpression	"""%s timed out"""		3279812	0					
ANR	3280235	Argument	command		3279812	2					
ANR	3280236	Identifier	command		3279812	0					
ANR	3280237	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7699:2:210392:210427	3279812	1	True				
ANR	3280238	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3279812	0					
ANR	3280239	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7703:1:210486:210519	3279812	23	True				
ANR	3280240	Identifier	GAHPCLIENT_COMMAND_PENDING		3279812	0					
ANR	3280241	ReturnType	int		3279812	1					
ANR	3280242	Identifier	GahpClient :: dcloud_find		3279812	2					
ANR	3280243	ParameterList	"const char * service_url , const char * username , const char * password , const char * instance_name , char * * instance_id"		3279812	3					
ANR	3280244	Parameter	const char * service_url	7613:29:207939:207961	3279812	0	True				
ANR	3280245	ParameterType	const char *		3279812	0					
ANR	3280246	Identifier	service_url		3279812	1					
ANR	3280247	Parameter	const char * username	7614:8:207972:207991	3279812	1	True				
ANR	3280248	ParameterType	const char *		3279812	0					
ANR	3280249	Identifier	username		3279812	1					
ANR	3280250	Parameter	const char * password	7615:8:208002:208021	3279812	2	True				
ANR	3280251	ParameterType	const char *		3279812	0					
ANR	3280252	Identifier	password		3279812	1					
ANR	3280253	Parameter	const char * instance_name	7616:8:208032:208056	3279812	3	True				
ANR	3280254	ParameterType	const char *		3279812	0					
ANR	3280255	Identifier	instance_name		3279812	1					
ANR	3280256	Parameter	char * * instance_id	7617:8:208067:208084	3279812	4	True				
ANR	3280257	ParameterType	char * *		3279812	0					
ANR	3280258	Identifier	instance_id		3279812	1					
ANR	3280259	CFGEntryNode	ENTRY		3279812		True				
ANR	3280260	CFGExitNode	EXIT		3279812		True				
ANR	3280261	Symbol	reqline . sprintf		3279812						
ANR	3280262	Symbol	server -> m_commands_supported		3279812						
ANR	3280263	Symbol	server		3279812						
ANR	3280264	Symbol	escapeGahpString		3279812						
ANR	3280265	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3279812						
ANR	3280266	Symbol	* server		3279812						
ANR	3280267	Symbol	results_only		3279812						
ANR	3280268	Symbol	result -> argv		3279812						
ANR	3280269	Symbol	* server -> m_commands_supported		3279812						
ANR	3280270	Symbol	result		3279812						
ANR	3280271	Symbol	password		3279812						
ANR	3280272	Symbol	* result		3279812						
ANR	3280273	Symbol	server -> m_commands_supported -> contains_anycase		3279812						
ANR	3280274	Symbol	GAHPCLIENT_COMMAND_PENDING		3279812						
ANR	3280275	Symbol	reqline		3279812						
ANR	3280276	Symbol	m_mode		3279812						
ANR	3280277	Symbol	* result -> argv		3279812						
ANR	3280278	Symbol	strcmp		3279812						
ANR	3280279	Symbol	instance_name		3279812						
ANR	3280280	Symbol	NULL		3279812						
ANR	3280281	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3279812						
ANR	3280282	Symbol	* instance_id		3279812						
ANR	3280283	Symbol	* * result		3279812						
ANR	3280284	Symbol	NULLSTRING		3279812						
ANR	3280285	Symbol	command		3279812						
ANR	3280286	Symbol	esc4		3279812						
ANR	3280287	Symbol	get_pending_result		3279812						
ANR	3280288	Symbol	service_url		3279812						
ANR	3280289	Symbol	esc3		3279812						
ANR	3280290	Symbol	rc		3279812						
ANR	3280291	Symbol	error_string		3279812						
ANR	3280292	Symbol	esc2		3279812						
ANR	3280293	Symbol	buf		3279812						
ANR	3280294	Symbol	instance_id		3279812						
ANR	3280295	Symbol	esc1		3279812						
ANR	3280296	Symbol	reqline . Value		3279812						
ANR	3280297	Symbol	x		3279812						
ANR	3280298	Symbol	true		3279812						
ANR	3280299	Symbol	result -> argc		3279812						
ANR	3280300	Symbol	* * server		3279812						
ANR	3280301	Symbol	FALSE		3279812						
ANR	3280302	Symbol	strdup		3279812						
ANR	3280303	Symbol	check_pending_timeout		3279812						
ANR	3280304	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3279812						
ANR	3280305	Symbol	username		3279812						
ANR	3280306	Symbol	is_pending		3279812						
ANR	3280307	Symbol	deleg_proxy		3279812						
ANR	3280308	Function	GahpClient :: dcloud_get_max_name_length	7706:0:210525:212963							
ANR	3280309	FunctionDef	"GahpClient :: dcloud_get_max_name_length (const char * service_url , const char * username , const char * password , int * max_length)"		3280308	0					
ANR	3280310	CompoundStatement		7710:0:210689:212963	3280308	0					
ANR	3280311	Statement	static	7712:1:210771:210776	3280308	0	True				
ANR	3280312	IdentifierDeclStatement	"const char * command = ""DELTACLOUD_GET_MAX_NAME_LENGTH"" ;"	7712:8:210778:210832	3280308	1	True				
ANR	3280313	IdentifierDecl	"* command = ""DELTACLOUD_GET_MAX_NAME_LENGTH"""		3280308	0					
ANR	3280314	IdentifierDeclType	const char *		3280308	0					
ANR	3280315	Identifier	command		3280308	1					
ANR	3280316	AssignmentExpression	"* command = ""DELTACLOUD_GET_MAX_NAME_LENGTH"""		3280308	2		=			
ANR	3280317	Identifier	command		3280308	0					
ANR	3280318	PrimaryExpression	"""DELTACLOUD_GET_MAX_NAME_LENGTH"""		3280308	1					
ANR	3280319	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3280308	2					
ANR	3280320	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7715:6:210880:210945	3280308	0	True				
ANR	3280321	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3280308	0		==			
ANR	3280322	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3280308	0					
ANR	3280323	Callee	server -> m_commands_supported -> contains_anycase		3280308	0					
ANR	3280324	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3280308	0					
ANR	3280325	PtrMemberAccess	server -> m_commands_supported		3280308	0					
ANR	3280326	Identifier	server		3280308	0					
ANR	3280327	Identifier	m_commands_supported		3280308	1					
ANR	3280328	Identifier	contains_anycase		3280308	1					
ANR	3280329	ArgumentList	command		3280308	1					
ANR	3280330	Argument	command		3280308	0					
ANR	3280331	Identifier	command		3280308	0					
ANR	3280332	Identifier	FALSE		3280308	1					
ANR	3280333	CompoundStatement		6:75:259:259	3280308	1					
ANR	3280334	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7716:2:210953:210992	3280308	0	True				
ANR	3280335	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3280308	0					
ANR	3280336	IfStatement	if ( ! service_url )		3280308	3					
ANR	3280337	Condition	! service_url	7720:6:211030:211041	3280308	0	True				
ANR	3280338	UnaryOperationExpression	! service_url		3280308	0					
ANR	3280339	UnaryOperator	!		3280308	0					
ANR	3280340	Identifier	service_url		3280308	1					
ANR	3280341	ExpressionStatement	service_url = NULLSTRING	7720:21:211045:211069	3280308	1	True				
ANR	3280342	AssignmentExpression	service_url = NULLSTRING		3280308	0		=			
ANR	3280343	Identifier	service_url		3280308	0					
ANR	3280344	Identifier	NULLSTRING		3280308	1					
ANR	3280345	IfStatement	if ( ! username )		3280308	4					
ANR	3280346	Condition	! username	7721:6:211077:211085	3280308	0	True				
ANR	3280347	UnaryOperationExpression	! username		3280308	0					
ANR	3280348	UnaryOperator	!		3280308	0					
ANR	3280349	Identifier	username		3280308	1					
ANR	3280350	ExpressionStatement	username = NULLSTRING	7721:18:211089:211110	3280308	1	True				
ANR	3280351	AssignmentExpression	username = NULLSTRING		3280308	0		=			
ANR	3280352	Identifier	username		3280308	0					
ANR	3280353	Identifier	NULLSTRING		3280308	1					
ANR	3280354	IfStatement	if ( ! password )		3280308	5					
ANR	3280355	Condition	! password	7722:6:211118:211126	3280308	0	True				
ANR	3280356	UnaryOperationExpression	! password		3280308	0					
ANR	3280357	UnaryOperator	!		3280308	0					
ANR	3280358	Identifier	password		3280308	1					
ANR	3280359	ExpressionStatement	password = NULLSTRING	7722:18:211130:211151	3280308	1	True				
ANR	3280360	AssignmentExpression	password = NULLSTRING		3280308	0		=			
ANR	3280361	Identifier	password		3280308	0					
ANR	3280362	Identifier	NULLSTRING		3280308	1					
ANR	3280363	IdentifierDeclStatement	MyString reqline ;	7724:1:211155:211171	3280308	6	True				
ANR	3280364	IdentifierDecl	reqline		3280308	0					
ANR	3280365	IdentifierDeclType	MyString		3280308	0					
ANR	3280366	Identifier	reqline		3280308	1					
ANR	3280367	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7726:1:211175:211227	3280308	7	True				
ANR	3280368	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3280308	0					
ANR	3280369	IdentifierDeclType	char *		3280308	0					
ANR	3280370	Identifier	esc1		3280308	1					
ANR	3280371	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3280308	2		=			
ANR	3280372	Identifier	esc1		3280308	0					
ANR	3280373	CallExpression	strdup ( escapeGahpString ( service_url ) )		3280308	1					
ANR	3280374	Callee	strdup		3280308	0					
ANR	3280375	Identifier	strdup		3280308	0					
ANR	3280376	ArgumentList	escapeGahpString ( service_url )		3280308	1					
ANR	3280377	Argument	escapeGahpString ( service_url )		3280308	0					
ANR	3280378	CallExpression	escapeGahpString ( service_url )		3280308	0					
ANR	3280379	Callee	escapeGahpString		3280308	0					
ANR	3280380	Identifier	escapeGahpString		3280308	0					
ANR	3280381	ArgumentList	service_url		3280308	1					
ANR	3280382	Argument	service_url		3280308	0					
ANR	3280383	Identifier	service_url		3280308	0					
ANR	3280384	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( username ) ) ;	7727:1:211230:211279	3280308	8	True				
ANR	3280385	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( username ) )		3280308	0					
ANR	3280386	IdentifierDeclType	char *		3280308	0					
ANR	3280387	Identifier	esc2		3280308	1					
ANR	3280388	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( username ) )		3280308	2		=			
ANR	3280389	Identifier	esc2		3280308	0					
ANR	3280390	CallExpression	strdup ( escapeGahpString ( username ) )		3280308	1					
ANR	3280391	Callee	strdup		3280308	0					
ANR	3280392	Identifier	strdup		3280308	0					
ANR	3280393	ArgumentList	escapeGahpString ( username )		3280308	1					
ANR	3280394	Argument	escapeGahpString ( username )		3280308	0					
ANR	3280395	CallExpression	escapeGahpString ( username )		3280308	0					
ANR	3280396	Callee	escapeGahpString		3280308	0					
ANR	3280397	Identifier	escapeGahpString		3280308	0					
ANR	3280398	ArgumentList	username		3280308	1					
ANR	3280399	Argument	username		3280308	0					
ANR	3280400	Identifier	username		3280308	0					
ANR	3280401	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( password ) ) ;	7728:1:211282:211331	3280308	9	True				
ANR	3280402	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( password ) )		3280308	0					
ANR	3280403	IdentifierDeclType	char *		3280308	0					
ANR	3280404	Identifier	esc3		3280308	1					
ANR	3280405	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( password ) )		3280308	2		=			
ANR	3280406	Identifier	esc3		3280308	0					
ANR	3280407	CallExpression	strdup ( escapeGahpString ( password ) )		3280308	1					
ANR	3280408	Callee	strdup		3280308	0					
ANR	3280409	Identifier	strdup		3280308	0					
ANR	3280410	ArgumentList	escapeGahpString ( password )		3280308	1					
ANR	3280411	Argument	escapeGahpString ( password )		3280308	0					
ANR	3280412	CallExpression	escapeGahpString ( password )		3280308	0					
ANR	3280413	Callee	escapeGahpString		3280308	0					
ANR	3280414	Identifier	escapeGahpString		3280308	0					
ANR	3280415	ArgumentList	password		3280308	1					
ANR	3280416	Argument	password		3280308	0					
ANR	3280417	Identifier	password		3280308	0					
ANR	3280418	IdentifierDeclStatement	"bool x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 ) ;"	7730:1:211335:211389	3280308	10	True				
ANR	3280419	IdentifierDecl	"x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3280308	0					
ANR	3280420	IdentifierDeclType	bool		3280308	0					
ANR	3280421	Identifier	x		3280308	1					
ANR	3280422	AssignmentExpression	"x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3280308	2		=			
ANR	3280423	Identifier	x		3280308	0					
ANR	3280424	CallExpression	"reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3280308	1					
ANR	3280425	Callee	reqline . sprintf		3280308	0					
ANR	3280426	MemberAccess	reqline . sprintf		3280308	0					
ANR	3280427	Identifier	reqline		3280308	0					
ANR	3280428	Identifier	sprintf		3280308	1					
ANR	3280429	ArgumentList	"""%s %s %s"""		3280308	1					
ANR	3280430	Argument	"""%s %s %s"""		3280308	0					
ANR	3280431	PrimaryExpression	"""%s %s %s"""		3280308	0					
ANR	3280432	Argument	esc1		3280308	1					
ANR	3280433	Identifier	esc1		3280308	0					
ANR	3280434	Argument	esc2		3280308	2					
ANR	3280435	Identifier	esc2		3280308	0					
ANR	3280436	Argument	esc3		3280308	3					
ANR	3280437	Identifier	esc3		3280308	0					
ANR	3280438	ExpressionStatement	free ( esc1 )	7732:1:211393:211405	3280308	11	True				
ANR	3280439	CallExpression	free ( esc1 )		3280308	0					
ANR	3280440	Callee	free		3280308	0					
ANR	3280441	Identifier	free		3280308	0					
ANR	3280442	ArgumentList	esc1		3280308	1					
ANR	3280443	Argument	esc1		3280308	0					
ANR	3280444	Identifier	esc1		3280308	0					
ANR	3280445	ExpressionStatement	free ( esc2 )	7733:1:211408:211420	3280308	12	True				
ANR	3280446	CallExpression	free ( esc2 )		3280308	0					
ANR	3280447	Callee	free		3280308	0					
ANR	3280448	Identifier	free		3280308	0					
ANR	3280449	ArgumentList	esc2		3280308	1					
ANR	3280450	Argument	esc2		3280308	0					
ANR	3280451	Identifier	esc2		3280308	0					
ANR	3280452	ExpressionStatement	free ( esc3 )	7734:1:211423:211435	3280308	13	True				
ANR	3280453	CallExpression	free ( esc3 )		3280308	0					
ANR	3280454	Callee	free		3280308	0					
ANR	3280455	Identifier	free		3280308	0					
ANR	3280456	ArgumentList	esc3		3280308	1					
ANR	3280457	Argument	esc3		3280308	0					
ANR	3280458	Identifier	esc3		3280308	0					
ANR	3280459	ExpressionStatement	ASSERT ( x == true )	7735:1:211438:211457	3280308	14	True				
ANR	3280460	CallExpression	ASSERT ( x == true )		3280308	0					
ANR	3280461	Callee	ASSERT		3280308	0					
ANR	3280462	Identifier	ASSERT		3280308	0					
ANR	3280463	ArgumentList	x == true		3280308	1					
ANR	3280464	Argument	x == true		3280308	0					
ANR	3280465	EqualityExpression	x == true		3280308	0		==			
ANR	3280466	Identifier	x		3280308	0					
ANR	3280467	Identifier	true		3280308	1					
ANR	3280468	IdentifierDeclStatement	const char * buf = reqline . Value ( ) ;	7737:1:211461:211494	3280308	15	True				
ANR	3280469	IdentifierDecl	* buf = reqline . Value ( )		3280308	0					
ANR	3280470	IdentifierDeclType	const char *		3280308	0					
ANR	3280471	Identifier	buf		3280308	1					
ANR	3280472	AssignmentExpression	* buf = reqline . Value ( )		3280308	2		=			
ANR	3280473	Identifier	buf		3280308	0					
ANR	3280474	CallExpression	reqline . Value ( )		3280308	1					
ANR	3280475	Callee	reqline . Value		3280308	0					
ANR	3280476	MemberAccess	reqline . Value		3280308	0					
ANR	3280477	Identifier	reqline		3280308	0					
ANR	3280478	Identifier	Value		3280308	1					
ANR	3280479	ArgumentList			3280308	1					
ANR	3280480	IfStatement	"if ( ! is_pending ( command , buf ) )"		3280308	16					
ANR	3280481	Condition	"! is_pending ( command , buf )"	7739:6:211587:211610	3280308	0	True				
ANR	3280482	UnaryOperationExpression	"! is_pending ( command , buf )"		3280308	0					
ANR	3280483	UnaryOperator	!		3280308	0					
ANR	3280484	CallExpression	"is_pending ( command , buf )"		3280308	1					
ANR	3280485	Callee	is_pending		3280308	0					
ANR	3280486	Identifier	is_pending		3280308	0					
ANR	3280487	ArgumentList	command		3280308	1					
ANR	3280488	Argument	command		3280308	0					
ANR	3280489	Identifier	command		3280308	0					
ANR	3280490	Argument	buf		3280308	1					
ANR	3280491	Identifier	buf		3280308	0					
ANR	3280492	CompoundStatement		30:33:924:924	3280308	1					
ANR	3280493	IfStatement	if ( m_mode == results_only )		3280308	0					
ANR	3280494	Condition	m_mode == results_only	7741:7:211714:211735	3280308	0	True				
ANR	3280495	EqualityExpression	m_mode == results_only		3280308	0		==			
ANR	3280496	Identifier	m_mode		3280308	0					
ANR	3280497	Identifier	results_only		3280308	1					
ANR	3280498	CompoundStatement		32:32:1049:1049	3280308	1					
ANR	3280499	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7742:3:211744:211783	3280308	0	True				
ANR	3280500	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3280308	0					
ANR	3280501	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7744:2:211791:211829	3280308	1	True				
ANR	3280502	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3280308	0					
ANR	3280503	Callee	now_pending		3280308	0					
ANR	3280504	Identifier	now_pending		3280308	0					
ANR	3280505	ArgumentList	command		3280308	1					
ANR	3280506	Argument	command		3280308	0					
ANR	3280507	Identifier	command		3280308	0					
ANR	3280508	Argument	buf		3280308	1					
ANR	3280509	Identifier	buf		3280308	0					
ANR	3280510	Argument	deleg_proxy		3280308	2					
ANR	3280511	Identifier	deleg_proxy		3280308	0					
ANR	3280512	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7750:1:211919:211971	3280308	17	True				
ANR	3280513	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3280308	0					
ANR	3280514	IdentifierDeclType	Gahp_Args *		3280308	0					
ANR	3280515	Identifier	result		3280308	1					
ANR	3280516	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3280308	2		=			
ANR	3280517	Identifier	result		3280308	0					
ANR	3280518	CallExpression	"get_pending_result ( command , buf )"		3280308	1					
ANR	3280519	Callee	get_pending_result		3280308	0					
ANR	3280520	Identifier	get_pending_result		3280308	0					
ANR	3280521	ArgumentList	command		3280308	1					
ANR	3280522	Argument	command		3280308	0					
ANR	3280523	Identifier	command		3280308	0					
ANR	3280524	Argument	buf		3280308	1					
ANR	3280525	Identifier	buf		3280308	0					
ANR	3280526	IfStatement	if ( result )		3280308	18					
ANR	3280527	Condition	result	7757:6:212107:212112	3280308	0	True				
ANR	3280528	Identifier	result		3280308	0					
ANR	3280529	CompoundStatement		50:2:1454:1464	3280308	1					
ANR	3280530	IdentifierDeclStatement	int rc = 0 ;	7759:2:212144:212154	3280308	0	True				
ANR	3280531	IdentifierDecl	rc = 0		3280308	0					
ANR	3280532	IdentifierDeclType	int		3280308	0					
ANR	3280533	Identifier	rc		3280308	1					
ANR	3280534	AssignmentExpression	rc = 0		3280308	2		=			
ANR	3280535	Identifier	rc		3280308	0					
ANR	3280536	PrimaryExpression	0		3280308	1					
ANR	3280537	IfStatement	if ( result -> argc < 2 || result -> argc > 3 )		3280308	1					
ANR	3280538	Condition	result -> argc < 2 || result -> argc > 3	7760:7:212163:212198	3280308	0	True				
ANR	3280539	OrExpression	result -> argc < 2 || result -> argc > 3		3280308	0		||			
ANR	3280540	RelationalExpression	result -> argc < 2		3280308	0		<			
ANR	3280541	PtrMemberAccess	result -> argc		3280308	0					
ANR	3280542	Identifier	result		3280308	0					
ANR	3280543	Identifier	argc		3280308	1					
ANR	3280544	PrimaryExpression	2		3280308	1					
ANR	3280545	RelationalExpression	result -> argc > 3		3280308	1		>			
ANR	3280546	PtrMemberAccess	result -> argc		3280308	0					
ANR	3280547	Identifier	result		3280308	0					
ANR	3280548	Identifier	argc		3280308	1					
ANR	3280549	PrimaryExpression	3		3280308	1					
ANR	3280550	CompoundStatement		51:46:1512:1512	3280308	1					
ANR	3280551	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7761:3:212207:212241	3280308	0	True				
ANR	3280552	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3280308	0					
ANR	3280553	Callee	EXCEPT		3280308	0					
ANR	3280554	Identifier	EXCEPT		3280308	0					
ANR	3280555	ArgumentList	"""Bad %s result"""		3280308	1					
ANR	3280556	Argument	"""Bad %s result"""		3280308	0					
ANR	3280557	PrimaryExpression	"""Bad %s result"""		3280308	0					
ANR	3280558	Argument	command		3280308	1					
ANR	3280559	Identifier	command		3280308	0					
ANR	3280560	ElseStatement	else		3280308	0					
ANR	3280561	IfStatement	if ( result -> argc == 2 )		3280308	0					
ANR	3280562	Condition	result -> argc == 2	7762:14:212257:212273	3280308	0	True				
ANR	3280563	EqualityExpression	result -> argc == 2		3280308	0		==			
ANR	3280564	PtrMemberAccess	result -> argc		3280308	0					
ANR	3280565	Identifier	result		3280308	0					
ANR	3280566	Identifier	argc		3280308	1					
ANR	3280567	PrimaryExpression	2		3280308	1					
ANR	3280568	CompoundStatement		53:34:1587:1587	3280308	1					
ANR	3280569	IfStatement	"if ( ! strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3280308	0					
ANR	3280570	Condition	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7763:8:212287:212324	3280308	0	True				
ANR	3280571	UnaryOperationExpression	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3280308	0					
ANR	3280572	UnaryOperator	!		3280308	0					
ANR	3280573	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3280308	1					
ANR	3280574	Callee	strcmp		3280308	0					
ANR	3280575	Identifier	strcmp		3280308	0					
ANR	3280576	ArgumentList	result -> argv [ 1 ]		3280308	1					
ANR	3280577	Argument	result -> argv [ 1 ]		3280308	0					
ANR	3280578	ArrayIndexing	result -> argv [ 1 ]		3280308	0					
ANR	3280579	PtrMemberAccess	result -> argv		3280308	0					
ANR	3280580	Identifier	result		3280308	0					
ANR	3280581	Identifier	argv		3280308	1					
ANR	3280582	PrimaryExpression	1		3280308	1					
ANR	3280583	Argument	NULLSTRING		3280308	1					
ANR	3280584	Identifier	NULLSTRING		3280308	0					
ANR	3280585	CompoundStatement		54:49:1638:1638	3280308	1					
ANR	3280586	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7764:4:212334:212368	3280308	0	True				
ANR	3280587	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3280308	0					
ANR	3280588	Callee	EXCEPT		3280308	0					
ANR	3280589	Identifier	EXCEPT		3280308	0					
ANR	3280590	ArgumentList	"""Bad %s result"""		3280308	1					
ANR	3280591	Argument	"""Bad %s result"""		3280308	0					
ANR	3280592	PrimaryExpression	"""Bad %s result"""		3280308	0					
ANR	3280593	Argument	command		3280308	1					
ANR	3280594	Identifier	command		3280308	0					
ANR	3280595	ExpressionStatement	error_string = result -> argv [ 1 ]	7766:3:212378:212408	3280308	1	True				
ANR	3280596	AssignmentExpression	error_string = result -> argv [ 1 ]		3280308	0		=			
ANR	3280597	Identifier	error_string		3280308	0					
ANR	3280598	ArrayIndexing	result -> argv [ 1 ]		3280308	1					
ANR	3280599	PtrMemberAccess	result -> argv		3280308	0					
ANR	3280600	Identifier	result		3280308	0					
ANR	3280601	Identifier	argv		3280308	1					
ANR	3280602	PrimaryExpression	1		3280308	1					
ANR	3280603	ExpressionStatement	rc = 1	7767:3:212413:212419	3280308	2	True				
ANR	3280604	AssignmentExpression	rc = 1		3280308	0		=			
ANR	3280605	Identifier	rc		3280308	0					
ANR	3280606	PrimaryExpression	1		3280308	1					
ANR	3280607	ElseStatement	else		3280308	0					
ANR	3280608	CompoundStatement		59:9:1740:1740	3280308	0					
ANR	3280609	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3280308	0					
ANR	3280610	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7769:8:212440:212476	3280308	0	True				
ANR	3280611	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3280308	0					
ANR	3280612	Callee	strcmp		3280308	0					
ANR	3280613	Identifier	strcmp		3280308	0					
ANR	3280614	ArgumentList	result -> argv [ 1 ]		3280308	1					
ANR	3280615	Argument	result -> argv [ 1 ]		3280308	0					
ANR	3280616	ArrayIndexing	result -> argv [ 1 ]		3280308	0					
ANR	3280617	PtrMemberAccess	result -> argv		3280308	0					
ANR	3280618	Identifier	result		3280308	0					
ANR	3280619	Identifier	argv		3280308	1					
ANR	3280620	PrimaryExpression	1		3280308	1					
ANR	3280621	Argument	NULLSTRING		3280308	1					
ANR	3280622	Identifier	NULLSTRING		3280308	0					
ANR	3280623	CompoundStatement		60:48:1790:1790	3280308	1					
ANR	3280624	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7770:4:212486:212520	3280308	0	True				
ANR	3280625	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3280308	0					
ANR	3280626	Callee	EXCEPT		3280308	0					
ANR	3280627	Identifier	EXCEPT		3280308	0					
ANR	3280628	ArgumentList	"""Bad %s result"""		3280308	1					
ANR	3280629	Argument	"""Bad %s result"""		3280308	0					
ANR	3280630	PrimaryExpression	"""Bad %s result"""		3280308	0					
ANR	3280631	Argument	command		3280308	1					
ANR	3280632	Identifier	command		3280308	0					
ANR	3280633	IfStatement	"if ( strcmp ( result -> argv [ 2 ] , NULLSTRING ) )"		3280308	1					
ANR	3280634	Condition	"strcmp ( result -> argv [ 2 ] , NULLSTRING )"	7772:8:212535:212571	3280308	0	True				
ANR	3280635	CallExpression	"strcmp ( result -> argv [ 2 ] , NULLSTRING )"		3280308	0					
ANR	3280636	Callee	strcmp		3280308	0					
ANR	3280637	Identifier	strcmp		3280308	0					
ANR	3280638	ArgumentList	result -> argv [ 2 ]		3280308	1					
ANR	3280639	Argument	result -> argv [ 2 ]		3280308	0					
ANR	3280640	ArrayIndexing	result -> argv [ 2 ]		3280308	0					
ANR	3280641	PtrMemberAccess	result -> argv		3280308	0					
ANR	3280642	Identifier	result		3280308	0					
ANR	3280643	Identifier	argv		3280308	1					
ANR	3280644	PrimaryExpression	2		3280308	1					
ANR	3280645	Argument	NULLSTRING		3280308	1					
ANR	3280646	Identifier	NULLSTRING		3280308	0					
ANR	3280647	ExpressionStatement	* max_length = atoi ( result -> argv [ 2 ] )	7773:4:212579:212616	3280308	1	True				
ANR	3280648	AssignmentExpression	* max_length = atoi ( result -> argv [ 2 ] )		3280308	0		=			
ANR	3280649	UnaryOperationExpression	* max_length		3280308	0					
ANR	3280650	UnaryOperator	*		3280308	0					
ANR	3280651	Identifier	max_length		3280308	1					
ANR	3280652	CallExpression	atoi ( result -> argv [ 2 ] )		3280308	1					
ANR	3280653	Callee	atoi		3280308	0					
ANR	3280654	Identifier	atoi		3280308	0					
ANR	3280655	ArgumentList	result -> argv [ 2 ]		3280308	1					
ANR	3280656	Argument	result -> argv [ 2 ]		3280308	0					
ANR	3280657	ArrayIndexing	result -> argv [ 2 ]		3280308	0					
ANR	3280658	PtrMemberAccess	result -> argv		3280308	0					
ANR	3280659	Identifier	result		3280308	0					
ANR	3280660	Identifier	argv		3280308	1					
ANR	3280661	PrimaryExpression	2		3280308	1					
ANR	3280662	Statement	delete	7776:2:212625:212630	3280308	2	True				
ANR	3280663	ExpressionStatement	result	7776:9:212632:212638	3280308	3	True				
ANR	3280664	Identifier	result		3280308	0					
ANR	3280665	ReturnStatement	return rc ;	7777:2:212642:212651	3280308	4	True				
ANR	3280666	Identifier	rc		3280308	0					
ANR	3280667	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3280308	19					
ANR	3280668	Condition	"check_pending_timeout ( command , buf )"	7781:6:212707:212741	3280308	0	True				
ANR	3280669	CallExpression	"check_pending_timeout ( command , buf )"		3280308	0					
ANR	3280670	Callee	check_pending_timeout		3280308	0					
ANR	3280671	Identifier	check_pending_timeout		3280308	0					
ANR	3280672	ArgumentList	command		3280308	1					
ANR	3280673	Argument	command		3280308	0					
ANR	3280674	Identifier	command		3280308	0					
ANR	3280675	Argument	buf		3280308	1					
ANR	3280676	Identifier	buf		3280308	0					
ANR	3280677	CompoundStatement		73:1:2056:2056	3280308	1					
ANR	3280678	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7784:2:212782:212830	3280308	0	True				
ANR	3280679	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3280308	0					
ANR	3280680	Callee	sprintf		3280308	0					
ANR	3280681	Identifier	sprintf		3280308	0					
ANR	3280682	ArgumentList	error_string		3280308	1					
ANR	3280683	Argument	error_string		3280308	0					
ANR	3280684	Identifier	error_string		3280308	0					
ANR	3280685	Argument	"""%s timed out"""		3280308	1					
ANR	3280686	PrimaryExpression	"""%s timed out"""		3280308	0					
ANR	3280687	Argument	command		3280308	2					
ANR	3280688	Identifier	command		3280308	0					
ANR	3280689	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7785:2:212834:212869	3280308	1	True				
ANR	3280690	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3280308	0					
ANR	3280691	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7789:1:212928:212961	3280308	20	True				
ANR	3280692	Identifier	GAHPCLIENT_COMMAND_PENDING		3280308	0					
ANR	3280693	ReturnType	int		3280308	1					
ANR	3280694	Identifier	GahpClient :: dcloud_get_max_name_length		3280308	2					
ANR	3280695	ParameterList	"const char * service_url , const char * username , const char * password , int * max_length"		3280308	3					
ANR	3280696	Parameter	const char * service_url	7706:44:210569:210591	3280308	0	True				
ANR	3280697	ParameterType	const char *		3280308	0					
ANR	3280698	Identifier	service_url		3280308	1					
ANR	3280699	Parameter	const char * username	7707:11:210605:210624	3280308	1	True				
ANR	3280700	ParameterType	const char *		3280308	0					
ANR	3280701	Identifier	username		3280308	1					
ANR	3280702	Parameter	const char * password	7708:11:210638:210657	3280308	2	True				
ANR	3280703	ParameterType	const char *		3280308	0					
ANR	3280704	Identifier	password		3280308	1					
ANR	3280705	Parameter	int * max_length	7709:11:210671:210685	3280308	3	True				
ANR	3280706	ParameterType	int *		3280308	0					
ANR	3280707	Identifier	max_length		3280308	1					
ANR	3280708	CFGEntryNode	ENTRY		3280308		True				
ANR	3280709	CFGExitNode	EXIT		3280308		True				
ANR	3280710	Symbol	reqline . sprintf		3280308						
ANR	3280711	Symbol	server		3280308						
ANR	3280712	Symbol	server -> m_commands_supported		3280308						
ANR	3280713	Symbol	escapeGahpString		3280308						
ANR	3280714	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3280308						
ANR	3280715	Symbol	* server		3280308						
ANR	3280716	Symbol	results_only		3280308						
ANR	3280717	Symbol	result -> argv		3280308						
ANR	3280718	Symbol	* server -> m_commands_supported		3280308						
ANR	3280719	Symbol	result		3280308						
ANR	3280720	Symbol	password		3280308						
ANR	3280721	Symbol	* result		3280308						
ANR	3280722	Symbol	server -> m_commands_supported -> contains_anycase		3280308						
ANR	3280723	Symbol	GAHPCLIENT_COMMAND_PENDING		3280308						
ANR	3280724	Symbol	reqline		3280308						
ANR	3280725	Symbol	m_mode		3280308						
ANR	3280726	Symbol	max_length		3280308						
ANR	3280727	Symbol	* result -> argv		3280308						
ANR	3280728	Symbol	strcmp		3280308						
ANR	3280729	Symbol	atoi		3280308						
ANR	3280730	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3280308						
ANR	3280731	Symbol	* * result		3280308						
ANR	3280732	Symbol	NULLSTRING		3280308						
ANR	3280733	Symbol	command		3280308						
ANR	3280734	Symbol	* max_length		3280308						
ANR	3280735	Symbol	get_pending_result		3280308						
ANR	3280736	Symbol	service_url		3280308						
ANR	3280737	Symbol	esc3		3280308						
ANR	3280738	Symbol	rc		3280308						
ANR	3280739	Symbol	error_string		3280308						
ANR	3280740	Symbol	esc2		3280308						
ANR	3280741	Symbol	buf		3280308						
ANR	3280742	Symbol	esc1		3280308						
ANR	3280743	Symbol	reqline . Value		3280308						
ANR	3280744	Symbol	x		3280308						
ANR	3280745	Symbol	true		3280308						
ANR	3280746	Symbol	result -> argc		3280308						
ANR	3280747	Symbol	FALSE		3280308						
ANR	3280748	Symbol	* * server		3280308						
ANR	3280749	Symbol	strdup		3280308						
ANR	3280750	Symbol	check_pending_timeout		3280308						
ANR	3280751	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3280308						
ANR	3280752	Symbol	username		3280308						
ANR	3280753	Symbol	is_pending		3280308						
ANR	3280754	Symbol	deleg_proxy		3280308						
ANR	3280755	Function	GahpClient :: dcloud_start_auto	7792:0:212966:215500							
ANR	3280756	FunctionDef	"GahpClient :: dcloud_start_auto (const char * service_url , const char * username , const char * password , bool * autostart)"		3280755	0					
ANR	3280757	CompoundStatement		7796:0:213121:215500	3280755	0					
ANR	3280758	Statement	static	7798:1:213194:213199	3280755	0	True				
ANR	3280759	IdentifierDeclStatement	"const char * command = ""DELTACLOUD_START_AUTO"" ;"	7798:8:213201:213246	3280755	1	True				
ANR	3280760	IdentifierDecl	"* command = ""DELTACLOUD_START_AUTO"""		3280755	0					
ANR	3280761	IdentifierDeclType	const char *		3280755	0					
ANR	3280762	Identifier	command		3280755	1					
ANR	3280763	AssignmentExpression	"* command = ""DELTACLOUD_START_AUTO"""		3280755	2		=			
ANR	3280764	Identifier	command		3280755	0					
ANR	3280765	PrimaryExpression	"""DELTACLOUD_START_AUTO"""		3280755	1					
ANR	3280766	IfStatement	if ( server -> m_commands_supported -> contains_anycase ( command ) == FALSE )		3280755	2					
ANR	3280767	Condition	server -> m_commands_supported -> contains_anycase ( command ) == FALSE	7801:6:213294:213359	3280755	0	True				
ANR	3280768	EqualityExpression	server -> m_commands_supported -> contains_anycase ( command ) == FALSE		3280755	0		==			
ANR	3280769	CallExpression	server -> m_commands_supported -> contains_anycase ( command )		3280755	0					
ANR	3280770	Callee	server -> m_commands_supported -> contains_anycase		3280755	0					
ANR	3280771	PtrMemberAccess	server -> m_commands_supported -> contains_anycase		3280755	0					
ANR	3280772	PtrMemberAccess	server -> m_commands_supported		3280755	0					
ANR	3280773	Identifier	server		3280755	0					
ANR	3280774	Identifier	m_commands_supported		3280755	1					
ANR	3280775	Identifier	contains_anycase		3280755	1					
ANR	3280776	ArgumentList	command		3280755	1					
ANR	3280777	Argument	command		3280755	0					
ANR	3280778	Identifier	command		3280755	0					
ANR	3280779	Identifier	FALSE		3280755	1					
ANR	3280780	CompoundStatement		6:75:241:241	3280755	1					
ANR	3280781	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUPPORTED ;	7802:2:213367:213406	3280755	0	True				
ANR	3280782	Identifier	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3280755	0					
ANR	3280783	IfStatement	if ( ! service_url )		3280755	3					
ANR	3280784	Condition	! service_url	7806:6:213444:213455	3280755	0	True				
ANR	3280785	UnaryOperationExpression	! service_url		3280755	0					
ANR	3280786	UnaryOperator	!		3280755	0					
ANR	3280787	Identifier	service_url		3280755	1					
ANR	3280788	ExpressionStatement	service_url = NULLSTRING	7806:21:213459:213483	3280755	1	True				
ANR	3280789	AssignmentExpression	service_url = NULLSTRING		3280755	0		=			
ANR	3280790	Identifier	service_url		3280755	0					
ANR	3280791	Identifier	NULLSTRING		3280755	1					
ANR	3280792	IfStatement	if ( ! username )		3280755	4					
ANR	3280793	Condition	! username	7807:6:213491:213499	3280755	0	True				
ANR	3280794	UnaryOperationExpression	! username		3280755	0					
ANR	3280795	UnaryOperator	!		3280755	0					
ANR	3280796	Identifier	username		3280755	1					
ANR	3280797	ExpressionStatement	username = NULLSTRING	7807:18:213503:213524	3280755	1	True				
ANR	3280798	AssignmentExpression	username = NULLSTRING		3280755	0		=			
ANR	3280799	Identifier	username		3280755	0					
ANR	3280800	Identifier	NULLSTRING		3280755	1					
ANR	3280801	IfStatement	if ( ! password )		3280755	5					
ANR	3280802	Condition	! password	7808:6:213532:213540	3280755	0	True				
ANR	3280803	UnaryOperationExpression	! password		3280755	0					
ANR	3280804	UnaryOperator	!		3280755	0					
ANR	3280805	Identifier	password		3280755	1					
ANR	3280806	ExpressionStatement	password = NULLSTRING	7808:18:213544:213565	3280755	1	True				
ANR	3280807	AssignmentExpression	password = NULLSTRING		3280755	0		=			
ANR	3280808	Identifier	password		3280755	0					
ANR	3280809	Identifier	NULLSTRING		3280755	1					
ANR	3280810	IdentifierDeclStatement	MyString reqline ;	7810:1:213569:213585	3280755	6	True				
ANR	3280811	IdentifierDecl	reqline		3280755	0					
ANR	3280812	IdentifierDeclType	MyString		3280755	0					
ANR	3280813	Identifier	reqline		3280755	1					
ANR	3280814	IdentifierDeclStatement	char * esc1 = strdup ( escapeGahpString ( service_url ) ) ;	7812:1:213589:213641	3280755	7	True				
ANR	3280815	IdentifierDecl	* esc1 = strdup ( escapeGahpString ( service_url ) )		3280755	0					
ANR	3280816	IdentifierDeclType	char *		3280755	0					
ANR	3280817	Identifier	esc1		3280755	1					
ANR	3280818	AssignmentExpression	* esc1 = strdup ( escapeGahpString ( service_url ) )		3280755	2		=			
ANR	3280819	Identifier	esc1		3280755	0					
ANR	3280820	CallExpression	strdup ( escapeGahpString ( service_url ) )		3280755	1					
ANR	3280821	Callee	strdup		3280755	0					
ANR	3280822	Identifier	strdup		3280755	0					
ANR	3280823	ArgumentList	escapeGahpString ( service_url )		3280755	1					
ANR	3280824	Argument	escapeGahpString ( service_url )		3280755	0					
ANR	3280825	CallExpression	escapeGahpString ( service_url )		3280755	0					
ANR	3280826	Callee	escapeGahpString		3280755	0					
ANR	3280827	Identifier	escapeGahpString		3280755	0					
ANR	3280828	ArgumentList	service_url		3280755	1					
ANR	3280829	Argument	service_url		3280755	0					
ANR	3280830	Identifier	service_url		3280755	0					
ANR	3280831	IdentifierDeclStatement	char * esc2 = strdup ( escapeGahpString ( username ) ) ;	7813:1:213644:213693	3280755	8	True				
ANR	3280832	IdentifierDecl	* esc2 = strdup ( escapeGahpString ( username ) )		3280755	0					
ANR	3280833	IdentifierDeclType	char *		3280755	0					
ANR	3280834	Identifier	esc2		3280755	1					
ANR	3280835	AssignmentExpression	* esc2 = strdup ( escapeGahpString ( username ) )		3280755	2		=			
ANR	3280836	Identifier	esc2		3280755	0					
ANR	3280837	CallExpression	strdup ( escapeGahpString ( username ) )		3280755	1					
ANR	3280838	Callee	strdup		3280755	0					
ANR	3280839	Identifier	strdup		3280755	0					
ANR	3280840	ArgumentList	escapeGahpString ( username )		3280755	1					
ANR	3280841	Argument	escapeGahpString ( username )		3280755	0					
ANR	3280842	CallExpression	escapeGahpString ( username )		3280755	0					
ANR	3280843	Callee	escapeGahpString		3280755	0					
ANR	3280844	Identifier	escapeGahpString		3280755	0					
ANR	3280845	ArgumentList	username		3280755	1					
ANR	3280846	Argument	username		3280755	0					
ANR	3280847	Identifier	username		3280755	0					
ANR	3280848	IdentifierDeclStatement	char * esc3 = strdup ( escapeGahpString ( password ) ) ;	7814:1:213696:213745	3280755	9	True				
ANR	3280849	IdentifierDecl	* esc3 = strdup ( escapeGahpString ( password ) )		3280755	0					
ANR	3280850	IdentifierDeclType	char *		3280755	0					
ANR	3280851	Identifier	esc3		3280755	1					
ANR	3280852	AssignmentExpression	* esc3 = strdup ( escapeGahpString ( password ) )		3280755	2		=			
ANR	3280853	Identifier	esc3		3280755	0					
ANR	3280854	CallExpression	strdup ( escapeGahpString ( password ) )		3280755	1					
ANR	3280855	Callee	strdup		3280755	0					
ANR	3280856	Identifier	strdup		3280755	0					
ANR	3280857	ArgumentList	escapeGahpString ( password )		3280755	1					
ANR	3280858	Argument	escapeGahpString ( password )		3280755	0					
ANR	3280859	CallExpression	escapeGahpString ( password )		3280755	0					
ANR	3280860	Callee	escapeGahpString		3280755	0					
ANR	3280861	Identifier	escapeGahpString		3280755	0					
ANR	3280862	ArgumentList	password		3280755	1					
ANR	3280863	Argument	password		3280755	0					
ANR	3280864	Identifier	password		3280755	0					
ANR	3280865	IdentifierDeclStatement	"bool x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 ) ;"	7816:1:213749:213803	3280755	10	True				
ANR	3280866	IdentifierDecl	"x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3280755	0					
ANR	3280867	IdentifierDeclType	bool		3280755	0					
ANR	3280868	Identifier	x		3280755	1					
ANR	3280869	AssignmentExpression	"x = reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3280755	2		=			
ANR	3280870	Identifier	x		3280755	0					
ANR	3280871	CallExpression	"reqline . sprintf ( ""%s %s %s"" , esc1 , esc2 , esc3 )"		3280755	1					
ANR	3280872	Callee	reqline . sprintf		3280755	0					
ANR	3280873	MemberAccess	reqline . sprintf		3280755	0					
ANR	3280874	Identifier	reqline		3280755	0					
ANR	3280875	Identifier	sprintf		3280755	1					
ANR	3280876	ArgumentList	"""%s %s %s"""		3280755	1					
ANR	3280877	Argument	"""%s %s %s"""		3280755	0					
ANR	3280878	PrimaryExpression	"""%s %s %s"""		3280755	0					
ANR	3280879	Argument	esc1		3280755	1					
ANR	3280880	Identifier	esc1		3280755	0					
ANR	3280881	Argument	esc2		3280755	2					
ANR	3280882	Identifier	esc2		3280755	0					
ANR	3280883	Argument	esc3		3280755	3					
ANR	3280884	Identifier	esc3		3280755	0					
ANR	3280885	ExpressionStatement	free ( esc1 )	7818:1:213807:213819	3280755	11	True				
ANR	3280886	CallExpression	free ( esc1 )		3280755	0					
ANR	3280887	Callee	free		3280755	0					
ANR	3280888	Identifier	free		3280755	0					
ANR	3280889	ArgumentList	esc1		3280755	1					
ANR	3280890	Argument	esc1		3280755	0					
ANR	3280891	Identifier	esc1		3280755	0					
ANR	3280892	ExpressionStatement	free ( esc2 )	7819:1:213822:213834	3280755	12	True				
ANR	3280893	CallExpression	free ( esc2 )		3280755	0					
ANR	3280894	Callee	free		3280755	0					
ANR	3280895	Identifier	free		3280755	0					
ANR	3280896	ArgumentList	esc2		3280755	1					
ANR	3280897	Argument	esc2		3280755	0					
ANR	3280898	Identifier	esc2		3280755	0					
ANR	3280899	ExpressionStatement	free ( esc3 )	7820:1:213837:213849	3280755	13	True				
ANR	3280900	CallExpression	free ( esc3 )		3280755	0					
ANR	3280901	Callee	free		3280755	0					
ANR	3280902	Identifier	free		3280755	0					
ANR	3280903	ArgumentList	esc3		3280755	1					
ANR	3280904	Argument	esc3		3280755	0					
ANR	3280905	Identifier	esc3		3280755	0					
ANR	3280906	ExpressionStatement	ASSERT ( x == true )	7821:1:213852:213871	3280755	14	True				
ANR	3280907	CallExpression	ASSERT ( x == true )		3280755	0					
ANR	3280908	Callee	ASSERT		3280755	0					
ANR	3280909	Identifier	ASSERT		3280755	0					
ANR	3280910	ArgumentList	x == true		3280755	1					
ANR	3280911	Argument	x == true		3280755	0					
ANR	3280912	EqualityExpression	x == true		3280755	0		==			
ANR	3280913	Identifier	x		3280755	0					
ANR	3280914	Identifier	true		3280755	1					
ANR	3280915	IdentifierDeclStatement	const char * buf = reqline . Value ( ) ;	7823:1:213875:213908	3280755	15	True				
ANR	3280916	IdentifierDecl	* buf = reqline . Value ( )		3280755	0					
ANR	3280917	IdentifierDeclType	const char *		3280755	0					
ANR	3280918	Identifier	buf		3280755	1					
ANR	3280919	AssignmentExpression	* buf = reqline . Value ( )		3280755	2		=			
ANR	3280920	Identifier	buf		3280755	0					
ANR	3280921	CallExpression	reqline . Value ( )		3280755	1					
ANR	3280922	Callee	reqline . Value		3280755	0					
ANR	3280923	MemberAccess	reqline . Value		3280755	0					
ANR	3280924	Identifier	reqline		3280755	0					
ANR	3280925	Identifier	Value		3280755	1					
ANR	3280926	ArgumentList			3280755	1					
ANR	3280927	IfStatement	"if ( ! is_pending ( command , buf ) )"		3280755	16					
ANR	3280928	Condition	"! is_pending ( command , buf )"	7825:6:214001:214024	3280755	0	True				
ANR	3280929	UnaryOperationExpression	"! is_pending ( command , buf )"		3280755	0					
ANR	3280930	UnaryOperator	!		3280755	0					
ANR	3280931	CallExpression	"is_pending ( command , buf )"		3280755	1					
ANR	3280932	Callee	is_pending		3280755	0					
ANR	3280933	Identifier	is_pending		3280755	0					
ANR	3280934	ArgumentList	command		3280755	1					
ANR	3280935	Argument	command		3280755	0					
ANR	3280936	Identifier	command		3280755	0					
ANR	3280937	Argument	buf		3280755	1					
ANR	3280938	Identifier	buf		3280755	0					
ANR	3280939	CompoundStatement		30:33:906:906	3280755	1					
ANR	3280940	IfStatement	if ( m_mode == results_only )		3280755	0					
ANR	3280941	Condition	m_mode == results_only	7827:7:214128:214149	3280755	0	True				
ANR	3280942	EqualityExpression	m_mode == results_only		3280755	0		==			
ANR	3280943	Identifier	m_mode		3280755	0					
ANR	3280944	Identifier	results_only		3280755	1					
ANR	3280945	CompoundStatement		32:32:1031:1031	3280755	1					
ANR	3280946	ReturnStatement	return GAHPCLIENT_COMMAND_NOT_SUBMITTED ;	7828:3:214158:214197	3280755	0	True				
ANR	3280947	Identifier	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3280755	0					
ANR	3280948	ExpressionStatement	"now_pending ( command , buf , deleg_proxy )"	7830:2:214205:214243	3280755	1	True				
ANR	3280949	CallExpression	"now_pending ( command , buf , deleg_proxy )"		3280755	0					
ANR	3280950	Callee	now_pending		3280755	0					
ANR	3280951	Identifier	now_pending		3280755	0					
ANR	3280952	ArgumentList	command		3280755	1					
ANR	3280953	Argument	command		3280755	0					
ANR	3280954	Identifier	command		3280755	0					
ANR	3280955	Argument	buf		3280755	1					
ANR	3280956	Identifier	buf		3280755	0					
ANR	3280957	Argument	deleg_proxy		3280755	2					
ANR	3280958	Identifier	deleg_proxy		3280755	0					
ANR	3280959	IdentifierDeclStatement	"Gahp_Args * result = get_pending_result ( command , buf ) ;"	7836:1:214333:214385	3280755	17	True				
ANR	3280960	IdentifierDecl	"* result = get_pending_result ( command , buf )"		3280755	0					
ANR	3280961	IdentifierDeclType	Gahp_Args *		3280755	0					
ANR	3280962	Identifier	result		3280755	1					
ANR	3280963	AssignmentExpression	"* result = get_pending_result ( command , buf )"		3280755	2		=			
ANR	3280964	Identifier	result		3280755	0					
ANR	3280965	CallExpression	"get_pending_result ( command , buf )"		3280755	1					
ANR	3280966	Callee	get_pending_result		3280755	0					
ANR	3280967	Identifier	get_pending_result		3280755	0					
ANR	3280968	ArgumentList	command		3280755	1					
ANR	3280969	Argument	command		3280755	0					
ANR	3280970	Identifier	command		3280755	0					
ANR	3280971	Argument	buf		3280755	1					
ANR	3280972	Identifier	buf		3280755	0					
ANR	3280973	IfStatement	if ( result )		3280755	18					
ANR	3280974	Condition	result	7843:6:214521:214526	3280755	0	True				
ANR	3280975	Identifier	result		3280755	0					
ANR	3280976	CompoundStatement		50:2:1436:1446	3280755	1					
ANR	3280977	IdentifierDeclStatement	int rc = 0 ;	7845:2:214558:214568	3280755	0	True				
ANR	3280978	IdentifierDecl	rc = 0		3280755	0					
ANR	3280979	IdentifierDeclType	int		3280755	0					
ANR	3280980	Identifier	rc		3280755	1					
ANR	3280981	AssignmentExpression	rc = 0		3280755	2		=			
ANR	3280982	Identifier	rc		3280755	0					
ANR	3280983	PrimaryExpression	0		3280755	1					
ANR	3280984	IfStatement	if ( result -> argc < 2 || result -> argc > 3 )		3280755	1					
ANR	3280985	Condition	result -> argc < 2 || result -> argc > 3	7846:7:214577:214612	3280755	0	True				
ANR	3280986	OrExpression	result -> argc < 2 || result -> argc > 3		3280755	0		||			
ANR	3280987	RelationalExpression	result -> argc < 2		3280755	0		<			
ANR	3280988	PtrMemberAccess	result -> argc		3280755	0					
ANR	3280989	Identifier	result		3280755	0					
ANR	3280990	Identifier	argc		3280755	1					
ANR	3280991	PrimaryExpression	2		3280755	1					
ANR	3280992	RelationalExpression	result -> argc > 3		3280755	1		>			
ANR	3280993	PtrMemberAccess	result -> argc		3280755	0					
ANR	3280994	Identifier	result		3280755	0					
ANR	3280995	Identifier	argc		3280755	1					
ANR	3280996	PrimaryExpression	3		3280755	1					
ANR	3280997	CompoundStatement		51:46:1494:1494	3280755	1					
ANR	3280998	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7847:3:214621:214655	3280755	0	True				
ANR	3280999	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3280755	0					
ANR	3281000	Callee	EXCEPT		3280755	0					
ANR	3281001	Identifier	EXCEPT		3280755	0					
ANR	3281002	ArgumentList	"""Bad %s result"""		3280755	1					
ANR	3281003	Argument	"""Bad %s result"""		3280755	0					
ANR	3281004	PrimaryExpression	"""Bad %s result"""		3280755	0					
ANR	3281005	Argument	command		3280755	1					
ANR	3281006	Identifier	command		3280755	0					
ANR	3281007	ElseStatement	else		3280755	0					
ANR	3281008	IfStatement	if ( result -> argc == 2 )		3280755	0					
ANR	3281009	Condition	result -> argc == 2	7848:14:214671:214687	3280755	0	True				
ANR	3281010	EqualityExpression	result -> argc == 2		3280755	0		==			
ANR	3281011	PtrMemberAccess	result -> argc		3280755	0					
ANR	3281012	Identifier	result		3280755	0					
ANR	3281013	Identifier	argc		3280755	1					
ANR	3281014	PrimaryExpression	2		3280755	1					
ANR	3281015	CompoundStatement		53:34:1569:1569	3280755	1					
ANR	3281016	IfStatement	"if ( ! strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3280755	0					
ANR	3281017	Condition	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7849:8:214701:214738	3280755	0	True				
ANR	3281018	UnaryOperationExpression	"! strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3280755	0					
ANR	3281019	UnaryOperator	!		3280755	0					
ANR	3281020	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3280755	1					
ANR	3281021	Callee	strcmp		3280755	0					
ANR	3281022	Identifier	strcmp		3280755	0					
ANR	3281023	ArgumentList	result -> argv [ 1 ]		3280755	1					
ANR	3281024	Argument	result -> argv [ 1 ]		3280755	0					
ANR	3281025	ArrayIndexing	result -> argv [ 1 ]		3280755	0					
ANR	3281026	PtrMemberAccess	result -> argv		3280755	0					
ANR	3281027	Identifier	result		3280755	0					
ANR	3281028	Identifier	argv		3280755	1					
ANR	3281029	PrimaryExpression	1		3280755	1					
ANR	3281030	Argument	NULLSTRING		3280755	1					
ANR	3281031	Identifier	NULLSTRING		3280755	0					
ANR	3281032	CompoundStatement		54:49:1620:1620	3280755	1					
ANR	3281033	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7850:4:214748:214782	3280755	0	True				
ANR	3281034	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3280755	0					
ANR	3281035	Callee	EXCEPT		3280755	0					
ANR	3281036	Identifier	EXCEPT		3280755	0					
ANR	3281037	ArgumentList	"""Bad %s result"""		3280755	1					
ANR	3281038	Argument	"""Bad %s result"""		3280755	0					
ANR	3281039	PrimaryExpression	"""Bad %s result"""		3280755	0					
ANR	3281040	Argument	command		3280755	1					
ANR	3281041	Identifier	command		3280755	0					
ANR	3281042	ExpressionStatement	error_string = result -> argv [ 1 ]	7852:3:214792:214822	3280755	1	True				
ANR	3281043	AssignmentExpression	error_string = result -> argv [ 1 ]		3280755	0		=			
ANR	3281044	Identifier	error_string		3280755	0					
ANR	3281045	ArrayIndexing	result -> argv [ 1 ]		3280755	1					
ANR	3281046	PtrMemberAccess	result -> argv		3280755	0					
ANR	3281047	Identifier	result		3280755	0					
ANR	3281048	Identifier	argv		3280755	1					
ANR	3281049	PrimaryExpression	1		3280755	1					
ANR	3281050	ExpressionStatement	rc = 1	7853:3:214827:214833	3280755	2	True				
ANR	3281051	AssignmentExpression	rc = 1		3280755	0		=			
ANR	3281052	Identifier	rc		3280755	0					
ANR	3281053	PrimaryExpression	1		3280755	1					
ANR	3281054	ElseStatement	else		3280755	0					
ANR	3281055	CompoundStatement		59:9:1722:1722	3280755	0					
ANR	3281056	IfStatement	"if ( strcmp ( result -> argv [ 1 ] , NULLSTRING ) )"		3280755	0					
ANR	3281057	Condition	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"	7855:8:214854:214890	3280755	0	True				
ANR	3281058	CallExpression	"strcmp ( result -> argv [ 1 ] , NULLSTRING )"		3280755	0					
ANR	3281059	Callee	strcmp		3280755	0					
ANR	3281060	Identifier	strcmp		3280755	0					
ANR	3281061	ArgumentList	result -> argv [ 1 ]		3280755	1					
ANR	3281062	Argument	result -> argv [ 1 ]		3280755	0					
ANR	3281063	ArrayIndexing	result -> argv [ 1 ]		3280755	0					
ANR	3281064	PtrMemberAccess	result -> argv		3280755	0					
ANR	3281065	Identifier	result		3280755	0					
ANR	3281066	Identifier	argv		3280755	1					
ANR	3281067	PrimaryExpression	1		3280755	1					
ANR	3281068	Argument	NULLSTRING		3280755	1					
ANR	3281069	Identifier	NULLSTRING		3280755	0					
ANR	3281070	CompoundStatement		60:48:1772:1772	3280755	1					
ANR	3281071	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7856:4:214900:214934	3280755	0	True				
ANR	3281072	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3280755	0					
ANR	3281073	Callee	EXCEPT		3280755	0					
ANR	3281074	Identifier	EXCEPT		3280755	0					
ANR	3281075	ArgumentList	"""Bad %s result"""		3280755	1					
ANR	3281076	Argument	"""Bad %s result"""		3280755	0					
ANR	3281077	PrimaryExpression	"""Bad %s result"""		3280755	0					
ANR	3281078	Argument	command		3280755	1					
ANR	3281079	Identifier	command		3280755	0					
ANR	3281080	IfStatement	"if ( strcmp ( result -> argv [ 2 ] , ""TRUE"" ) == 0 )"		3280755	1					
ANR	3281081	Condition	"strcmp ( result -> argv [ 2 ] , ""TRUE"" ) == 0"	7858:8:214949:214986	3280755	0	True				
ANR	3281082	EqualityExpression	"strcmp ( result -> argv [ 2 ] , ""TRUE"" ) == 0"		3280755	0		==			
ANR	3281083	CallExpression	"strcmp ( result -> argv [ 2 ] , ""TRUE"" )"		3280755	0					
ANR	3281084	Callee	strcmp		3280755	0					
ANR	3281085	Identifier	strcmp		3280755	0					
ANR	3281086	ArgumentList	result -> argv [ 2 ]		3280755	1					
ANR	3281087	Argument	result -> argv [ 2 ]		3280755	0					
ANR	3281088	ArrayIndexing	result -> argv [ 2 ]		3280755	0					
ANR	3281089	PtrMemberAccess	result -> argv		3280755	0					
ANR	3281090	Identifier	result		3280755	0					
ANR	3281091	Identifier	argv		3280755	1					
ANR	3281092	PrimaryExpression	2		3280755	1					
ANR	3281093	Argument	"""TRUE"""		3280755	1					
ANR	3281094	PrimaryExpression	"""TRUE"""		3280755	0					
ANR	3281095	PrimaryExpression	0		3280755	1					
ANR	3281096	CompoundStatement		63:49:1868:1868	3280755	1					
ANR	3281097	ExpressionStatement	* autostart = TRUE	7859:4:214996:215013	3280755	0	True				
ANR	3281098	AssignmentExpression	* autostart = TRUE		3280755	0		=			
ANR	3281099	UnaryOperationExpression	* autostart		3280755	0					
ANR	3281100	UnaryOperator	*		3280755	0					
ANR	3281101	Identifier	autostart		3280755	1					
ANR	3281102	Identifier	TRUE		3280755	1					
ANR	3281103	ElseStatement	else		3280755	0					
ANR	3281104	IfStatement	"if ( strcmp ( result -> argv [ 2 ] , ""FALSE"" ) == 0 )"		3280755	0					
ANR	3281105	Condition	"strcmp ( result -> argv [ 2 ] , ""FALSE"" ) == 0"	7860:15:215030:215068	3280755	0	True				
ANR	3281106	EqualityExpression	"strcmp ( result -> argv [ 2 ] , ""FALSE"" ) == 0"		3280755	0		==			
ANR	3281107	CallExpression	"strcmp ( result -> argv [ 2 ] , ""FALSE"" )"		3280755	0					
ANR	3281108	Callee	strcmp		3280755	0					
ANR	3281109	Identifier	strcmp		3280755	0					
ANR	3281110	ArgumentList	result -> argv [ 2 ]		3280755	1					
ANR	3281111	Argument	result -> argv [ 2 ]		3280755	0					
ANR	3281112	ArrayIndexing	result -> argv [ 2 ]		3280755	0					
ANR	3281113	PtrMemberAccess	result -> argv		3280755	0					
ANR	3281114	Identifier	result		3280755	0					
ANR	3281115	Identifier	argv		3280755	1					
ANR	3281116	PrimaryExpression	2		3280755	1					
ANR	3281117	Argument	"""FALSE"""		3280755	1					
ANR	3281118	PrimaryExpression	"""FALSE"""		3280755	0					
ANR	3281119	PrimaryExpression	0		3280755	1					
ANR	3281120	CompoundStatement		65:57:1950:1950	3280755	1					
ANR	3281121	ExpressionStatement	* autostart = FALSE	7861:4:215078:215096	3280755	0	True				
ANR	3281122	AssignmentExpression	* autostart = FALSE		3280755	0		=			
ANR	3281123	UnaryOperationExpression	* autostart		3280755	0					
ANR	3281124	UnaryOperator	*		3280755	0					
ANR	3281125	Identifier	autostart		3280755	1					
ANR	3281126	Identifier	FALSE		3280755	1					
ANR	3281127	ElseStatement	else		3280755	0					
ANR	3281128	CompoundStatement		67:10:1986:1986	3280755	0					
ANR	3281129	ExpressionStatement	"EXCEPT ( ""Bad %s result"" , command )"	7863:4:215114:215148	3280755	0	True				
ANR	3281130	CallExpression	"EXCEPT ( ""Bad %s result"" , command )"		3280755	0					
ANR	3281131	Callee	EXCEPT		3280755	0					
ANR	3281132	Identifier	EXCEPT		3280755	0					
ANR	3281133	ArgumentList	"""Bad %s result"""		3280755	1					
ANR	3281134	Argument	"""Bad %s result"""		3280755	0					
ANR	3281135	PrimaryExpression	"""Bad %s result"""		3280755	0					
ANR	3281136	Argument	command		3280755	1					
ANR	3281137	Identifier	command		3280755	0					
ANR	3281138	Statement	delete	7867:2:215162:215167	3280755	2	True				
ANR	3281139	ExpressionStatement	result	7867:9:215169:215175	3280755	3	True				
ANR	3281140	Identifier	result		3280755	0					
ANR	3281141	ReturnStatement	return rc ;	7868:2:215179:215188	3280755	4	True				
ANR	3281142	Identifier	rc		3280755	0					
ANR	3281143	IfStatement	"if ( check_pending_timeout ( command , buf ) )"		3280755	19					
ANR	3281144	Condition	"check_pending_timeout ( command , buf )"	7872:6:215244:215278	3280755	0	True				
ANR	3281145	CallExpression	"check_pending_timeout ( command , buf )"		3280755	0					
ANR	3281146	Callee	check_pending_timeout		3280755	0					
ANR	3281147	Identifier	check_pending_timeout		3280755	0					
ANR	3281148	ArgumentList	command		3280755	1					
ANR	3281149	Argument	command		3280755	0					
ANR	3281150	Identifier	command		3280755	0					
ANR	3281151	Argument	buf		3280755	1					
ANR	3281152	Identifier	buf		3280755	0					
ANR	3281153	CompoundStatement		78:1:2161:2161	3280755	1					
ANR	3281154	ExpressionStatement	"sprintf ( error_string , ""%s timed out"" , command )"	7875:2:215319:215367	3280755	0	True				
ANR	3281155	CallExpression	"sprintf ( error_string , ""%s timed out"" , command )"		3280755	0					
ANR	3281156	Callee	sprintf		3280755	0					
ANR	3281157	Identifier	sprintf		3280755	0					
ANR	3281158	ArgumentList	error_string		3280755	1					
ANR	3281159	Argument	error_string		3280755	0					
ANR	3281160	Identifier	error_string		3280755	0					
ANR	3281161	Argument	"""%s timed out"""		3280755	1					
ANR	3281162	PrimaryExpression	"""%s timed out"""		3280755	0					
ANR	3281163	Argument	command		3280755	2					
ANR	3281164	Identifier	command		3280755	0					
ANR	3281165	ReturnStatement	return GAHPCLIENT_COMMAND_TIMED_OUT ;	7876:2:215371:215406	3280755	1	True				
ANR	3281166	Identifier	GAHPCLIENT_COMMAND_TIMED_OUT		3280755	0					
ANR	3281167	ReturnStatement	return GAHPCLIENT_COMMAND_PENDING ;	7880:1:215465:215498	3280755	20	True				
ANR	3281168	Identifier	GAHPCLIENT_COMMAND_PENDING		3280755	0					
ANR	3281169	ReturnType	int		3280755	1					
ANR	3281170	Identifier	GahpClient :: dcloud_start_auto		3280755	2					
ANR	3281171	ParameterList	"const char * service_url , const char * username , const char * password , bool * autostart"		3280755	3					
ANR	3281172	Parameter	const char * service_url	7792:35:213001:213023	3280755	0	True				
ANR	3281173	ParameterType	const char *		3280755	0					
ANR	3281174	Identifier	service_url		3280755	1					
ANR	3281175	Parameter	const char * username	7793:11:213037:213056	3280755	1	True				
ANR	3281176	ParameterType	const char *		3280755	0					
ANR	3281177	Identifier	username		3280755	1					
ANR	3281178	Parameter	const char * password	7794:11:213070:213089	3280755	2	True				
ANR	3281179	ParameterType	const char *		3280755	0					
ANR	3281180	Identifier	password		3280755	1					
ANR	3281181	Parameter	bool * autostart	7795:11:213103:213117	3280755	3	True				
ANR	3281182	ParameterType	bool *		3280755	0					
ANR	3281183	Identifier	autostart		3280755	1					
ANR	3281184	CFGEntryNode	ENTRY		3280755		True				
ANR	3281185	CFGExitNode	EXIT		3280755		True				
ANR	3281186	Symbol	reqline . sprintf		3280755						
ANR	3281187	Symbol	server -> m_commands_supported		3280755						
ANR	3281188	Symbol	server		3280755						
ANR	3281189	Symbol	escapeGahpString		3280755						
ANR	3281190	Symbol	GAHPCLIENT_COMMAND_NOT_SUPPORTED		3280755						
ANR	3281191	Symbol	* server		3280755						
ANR	3281192	Symbol	autostart		3280755						
ANR	3281193	Symbol	results_only		3280755						
ANR	3281194	Symbol	result -> argv		3280755						
ANR	3281195	Symbol	* server -> m_commands_supported		3280755						
ANR	3281196	Symbol	* autostart		3280755						
ANR	3281197	Symbol	result		3280755						
ANR	3281198	Symbol	password		3280755						
ANR	3281199	Symbol	* result		3280755						
ANR	3281200	Symbol	server -> m_commands_supported -> contains_anycase		3280755						
ANR	3281201	Symbol	GAHPCLIENT_COMMAND_PENDING		3280755						
ANR	3281202	Symbol	reqline		3280755						
ANR	3281203	Symbol	m_mode		3280755						
ANR	3281204	Symbol	* result -> argv		3280755						
ANR	3281205	Symbol	strcmp		3280755						
ANR	3281206	Symbol	GAHPCLIENT_COMMAND_TIMED_OUT		3280755						
ANR	3281207	Symbol	* * result		3280755						
ANR	3281208	Symbol	TRUE		3280755						
ANR	3281209	Symbol	NULLSTRING		3280755						
ANR	3281210	Symbol	command		3280755						
ANR	3281211	Symbol	get_pending_result		3280755						
ANR	3281212	Symbol	service_url		3280755						
ANR	3281213	Symbol	esc3		3280755						
ANR	3281214	Symbol	rc		3280755						
ANR	3281215	Symbol	error_string		3280755						
ANR	3281216	Symbol	esc2		3280755						
ANR	3281217	Symbol	buf		3280755						
ANR	3281218	Symbol	esc1		3280755						
ANR	3281219	Symbol	reqline . Value		3280755						
ANR	3281220	Symbol	x		3280755						
ANR	3281221	Symbol	true		3280755						
ANR	3281222	Symbol	result -> argc		3280755						
ANR	3281223	Symbol	FALSE		3280755						
ANR	3281224	Symbol	* * server		3280755						
ANR	3281225	Symbol	strdup		3280755						
ANR	3281226	Symbol	check_pending_timeout		3280755						
ANR	3281227	Symbol	GAHPCLIENT_COMMAND_NOT_SUBMITTED		3280755						
ANR	3281228	Symbol	username		3280755						
ANR	3281229	Symbol	is_pending		3280755						
ANR	3281230	Symbol	deleg_proxy		3280755						
