command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	530863	File	data/converged/CVE-2011-4930_htcondor/ResState.cpp								
ANR	530864	Function	ResState :: ResState	24:0:859:1636							
ANR	530865	FunctionDef	ResState :: ResState (Resource * res_ip)		530864	0					
ANR	530866	CompoundStatement		25:0:898:1636	530864	0					
ANR	530867	ExpressionStatement	r_state = owner_state	26:1:901:922	530864	0	True				
ANR	530868	AssignmentExpression	r_state = owner_state		530864	0		=			
ANR	530869	Identifier	r_state		530864	0					
ANR	530870	Identifier	owner_state		530864	1					
ANR	530871	ExpressionStatement	r_destination = no_state	27:1:925:949	530864	1	True				
ANR	530872	AssignmentExpression	r_destination = no_state		530864	0		=			
ANR	530873	Identifier	r_destination		530864	0					
ANR	530874	Identifier	no_state		530864	1					
ANR	530875	ExpressionStatement	r_act = idle_act	28:1:952:968	530864	2	True				
ANR	530876	AssignmentExpression	r_act = idle_act		530864	0		=			
ANR	530877	Identifier	r_act		530864	0					
ANR	530878	Identifier	idle_act		530864	1					
ANR	530879	ExpressionStatement	r_act_was_benchmark = false	29:1:971:998	530864	3	True				
ANR	530880	AssignmentExpression	r_act_was_benchmark = false		530864	0		=			
ANR	530881	Identifier	r_act_was_benchmark		530864	0					
ANR	530882	Identifier	false		530864	1					
ANR	530883	ExpressionStatement	m_atime = time ( NULL )	30:1:1001:1021	530864	4	True				
ANR	530884	AssignmentExpression	m_atime = time ( NULL )		530864	0		=			
ANR	530885	Identifier	m_atime		530864	0					
ANR	530886	CallExpression	time ( NULL )		530864	1					
ANR	530887	Callee	time		530864	0					
ANR	530888	Identifier	time		530864	0					
ANR	530889	ArgumentList	NULL		530864	1					
ANR	530890	Argument	NULL		530864	0					
ANR	530891	Identifier	NULL		530864	0					
ANR	530892	ExpressionStatement	m_stime = m_atime	31:1:1024:1041	530864	5	True				
ANR	530893	AssignmentExpression	m_stime = m_atime		530864	0		=			
ANR	530894	Identifier	m_stime		530864	0					
ANR	530895	Identifier	m_atime		530864	1					
ANR	530896	ExpressionStatement	this -> rip = res_ip	32:1:1044:1062	530864	6	True				
ANR	530897	AssignmentExpression	this -> rip = res_ip		530864	0		=			
ANR	530898	PtrMemberAccess	this -> rip		530864	0					
ANR	530899	Identifier	this		530864	0					
ANR	530900	Identifier	rip		530864	1					
ANR	530901	Identifier	res_ip		530864	1					
ANR	530902	ExpressionStatement	m_time_owner_idle = 0	33:1:1065:1086	530864	7	True				
ANR	530903	AssignmentExpression	m_time_owner_idle = 0		530864	0		=			
ANR	530904	Identifier	m_time_owner_idle		530864	0					
ANR	530905	PrimaryExpression	0		530864	1					
ANR	530906	ExpressionStatement	m_time_unclaimed_idle = 0	34:1:1089:1114	530864	8	True				
ANR	530907	AssignmentExpression	m_time_unclaimed_idle = 0		530864	0		=			
ANR	530908	Identifier	m_time_unclaimed_idle		530864	0					
ANR	530909	PrimaryExpression	0		530864	1					
ANR	530910	ExpressionStatement	m_time_unclaimed_benchmarking = 0	35:1:1117:1150	530864	9	True				
ANR	530911	AssignmentExpression	m_time_unclaimed_benchmarking = 0		530864	0		=			
ANR	530912	Identifier	m_time_unclaimed_benchmarking		530864	0					
ANR	530913	PrimaryExpression	0		530864	1					
ANR	530914	ExpressionStatement	m_time_matched_idle = 0	36:1:1153:1176	530864	10	True				
ANR	530915	AssignmentExpression	m_time_matched_idle = 0		530864	0		=			
ANR	530916	Identifier	m_time_matched_idle		530864	0					
ANR	530917	PrimaryExpression	0		530864	1					
ANR	530918	ExpressionStatement	m_time_backfill_idle = 0	37:1:1179:1203	530864	11	True				
ANR	530919	AssignmentExpression	m_time_backfill_idle = 0		530864	0		=			
ANR	530920	Identifier	m_time_backfill_idle		530864	0					
ANR	530921	PrimaryExpression	0		530864	1					
ANR	530922	ExpressionStatement	m_time_backfill_busy = 0	38:1:1206:1230	530864	12	True				
ANR	530923	AssignmentExpression	m_time_backfill_busy = 0		530864	0		=			
ANR	530924	Identifier	m_time_backfill_busy		530864	0					
ANR	530925	PrimaryExpression	0		530864	1					
ANR	530926	ExpressionStatement	m_time_backfill_killing = 0	39:1:1233:1260	530864	13	True				
ANR	530927	AssignmentExpression	m_time_backfill_killing = 0		530864	0		=			
ANR	530928	Identifier	m_time_backfill_killing		530864	0					
ANR	530929	PrimaryExpression	0		530864	1					
ANR	530930	ExpressionStatement	m_time_claimed_idle = 0	40:1:1263:1286	530864	14	True				
ANR	530931	AssignmentExpression	m_time_claimed_idle = 0		530864	0		=			
ANR	530932	Identifier	m_time_claimed_idle		530864	0					
ANR	530933	PrimaryExpression	0		530864	1					
ANR	530934	ExpressionStatement	m_time_claimed_busy = 0	41:1:1289:1312	530864	15	True				
ANR	530935	AssignmentExpression	m_time_claimed_busy = 0		530864	0		=			
ANR	530936	Identifier	m_time_claimed_busy		530864	0					
ANR	530937	PrimaryExpression	0		530864	1					
ANR	530938	ExpressionStatement	m_time_claimed_suspended = 0	42:1:1315:1343	530864	16	True				
ANR	530939	AssignmentExpression	m_time_claimed_suspended = 0		530864	0		=			
ANR	530940	Identifier	m_time_claimed_suspended		530864	0					
ANR	530941	PrimaryExpression	0		530864	1					
ANR	530942	ExpressionStatement	m_time_claimed_retiring = 0	43:1:1346:1373	530864	17	True				
ANR	530943	AssignmentExpression	m_time_claimed_retiring = 0		530864	0		=			
ANR	530944	Identifier	m_time_claimed_retiring		530864	0					
ANR	530945	PrimaryExpression	0		530864	1					
ANR	530946	ExpressionStatement	m_time_preempting_vacating = 0	44:1:1376:1406	530864	18	True				
ANR	530947	AssignmentExpression	m_time_preempting_vacating = 0		530864	0		=			
ANR	530948	Identifier	m_time_preempting_vacating		530864	0					
ANR	530949	PrimaryExpression	0		530864	1					
ANR	530950	ExpressionStatement	m_time_preempting_killing = 0	45:1:1409:1438	530864	19	True				
ANR	530951	AssignmentExpression	m_time_preempting_killing = 0		530864	0		=			
ANR	530952	Identifier	m_time_preempting_killing		530864	0					
ANR	530953	PrimaryExpression	0		530864	1					
ANR	530954	ExpressionStatement	m_time_drained_retiring = 0	46:1:1441:1468	530864	20	True				
ANR	530955	AssignmentExpression	m_time_drained_retiring = 0		530864	0		=			
ANR	530956	Identifier	m_time_drained_retiring		530864	0					
ANR	530957	PrimaryExpression	0		530864	1					
ANR	530958	ExpressionStatement	m_time_drained_idle = 0	47:1:1471:1494	530864	21	True				
ANR	530959	AssignmentExpression	m_time_drained_idle = 0		530864	0		=			
ANR	530960	Identifier	m_time_drained_idle		530864	0					
ANR	530961	PrimaryExpression	0		530864	1					
ANR	530962	ExpressionStatement	m_time_draining_unclaimed = 0	48:1:1497:1526	530864	22	True				
ANR	530963	AssignmentExpression	m_time_draining_unclaimed = 0		530864	0		=			
ANR	530964	Identifier	m_time_draining_unclaimed		530864	0					
ANR	530965	PrimaryExpression	0		530864	1					
ANR	530966	ExpressionStatement	m_num_cpus_avg = 0	49:1:1529:1547	530864	23	True				
ANR	530967	AssignmentExpression	m_num_cpus_avg = 0		530864	0		=			
ANR	530968	Identifier	m_num_cpus_avg		530864	0					
ANR	530969	PrimaryExpression	0		530864	1					
ANR	530970	ExpressionStatement	m_draining_avg = 0	50:1:1550:1568	530864	24	True				
ANR	530971	AssignmentExpression	m_draining_avg = 0		530864	0		=			
ANR	530972	Identifier	m_draining_avg		530864	0					
ANR	530973	PrimaryExpression	0		530864	1					
ANR	530974	ExpressionStatement	m_activity_avg_last_timestamp = 0	51:1:1571:1604	530864	25	True				
ANR	530975	AssignmentExpression	m_activity_avg_last_timestamp = 0		530864	0		=			
ANR	530976	Identifier	m_activity_avg_last_timestamp		530864	0					
ANR	530977	PrimaryExpression	0		530864	1					
ANR	530978	ExpressionStatement	m_activity_avg_time_sum = 0	52:1:1607:1634	530864	26	True				
ANR	530979	AssignmentExpression	m_activity_avg_time_sum = 0		530864	0		=			
ANR	530980	Identifier	m_activity_avg_time_sum		530864	0					
ANR	530981	PrimaryExpression	0		530864	1					
ANR	530982	Identifier	ResState :: ResState		530864	1					
ANR	530983	ParameterList	Resource * res_ip		530864	2					
ANR	530984	Parameter	Resource * res_ip	24:20:879:894	530864	0	True				
ANR	530985	ParameterType	Resource *		530864	0					
ANR	530986	Identifier	res_ip		530864	1					
ANR	530987	CFGEntryNode	ENTRY		530864		True				
ANR	530988	CFGExitNode	EXIT		530864		True				
ANR	530989	Symbol	m_stime		530864						
ANR	530990	Symbol	m_num_cpus_avg		530864						
ANR	530991	Symbol	m_time_owner_idle		530864						
ANR	530992	Symbol	r_destination		530864						
ANR	530993	Symbol	m_time_claimed_retiring		530864						
ANR	530994	Symbol	m_time_drained_idle		530864						
ANR	530995	Symbol	this -> rip		530864						
ANR	530996	Symbol	m_time_drained_retiring		530864						
ANR	530997	Symbol	m_time_preempting_killing		530864						
ANR	530998	Symbol	m_time_unclaimed_benchmarking		530864						
ANR	530999	Symbol	m_time_matched_idle		530864						
ANR	531000	Symbol	m_time_backfill_idle		530864						
ANR	531001	Symbol	NULL		530864						
ANR	531002	Symbol	m_time_claimed_busy		530864						
ANR	531003	Symbol	m_draining_avg		530864						
ANR	531004	Symbol	m_activity_avg_last_timestamp		530864						
ANR	531005	Symbol	r_act_was_benchmark		530864						
ANR	531006	Symbol	false		530864						
ANR	531007	Symbol	this		530864						
ANR	531008	Symbol	r_state		530864						
ANR	531009	Symbol	res_ip		530864						
ANR	531010	Symbol	m_atime		530864						
ANR	531011	Symbol	no_state		530864						
ANR	531012	Symbol	m_time_backfill_killing		530864						
ANR	531013	Symbol	* this		530864						
ANR	531014	Symbol	m_time_draining_unclaimed		530864						
ANR	531015	Symbol	m_time_preempting_vacating		530864						
ANR	531016	Symbol	r_act		530864						
ANR	531017	Symbol	idle_act		530864						
ANR	531018	Symbol	m_activity_avg_time_sum		530864						
ANR	531019	Symbol	m_time_unclaimed_idle		530864						
ANR	531020	Symbol	m_time_claimed_idle		530864						
ANR	531021	Symbol	time		530864						
ANR	531022	Symbol	m_time_claimed_suspended		530864						
ANR	531023	Symbol	owner_state		530864						
ANR	531024	Symbol	m_time_backfill_busy		530864						
ANR	531025	Function	ResState :: change	87:0:2849:5325							
ANR	531026	FunctionDef	"ResState :: change (State new_state , Activity new_act)"		531025	0					
ANR	531027	CompoundStatement		89:0:2908:5325	531025	0					
ANR	531028	IdentifierDeclStatement	"bool statechange = false , actchange = false ;"	90:1:2911:2954	531025	0	True				
ANR	531029	IdentifierDecl	statechange = false		531025	0					
ANR	531030	IdentifierDeclType	bool		531025	0					
ANR	531031	Identifier	statechange		531025	1					
ANR	531032	AssignmentExpression	statechange = false		531025	2		=			
ANR	531033	Identifier	false		531025	0					
ANR	531034	Identifier	false		531025	1					
ANR	531035	IdentifierDecl	actchange = false		531025	1					
ANR	531036	IdentifierDeclType	bool		531025	0					
ANR	531037	Identifier	actchange		531025	1					
ANR	531038	AssignmentExpression	actchange = false		531025	2		=			
ANR	531039	Identifier	false		531025	0					
ANR	531040	Identifier	false		531025	1					
ANR	531041	IdentifierDeclStatement	int now ;	91:1:2957:2964	531025	1	True				
ANR	531042	IdentifierDecl	now		531025	0					
ANR	531043	IdentifierDeclType	int		531025	0					
ANR	531044	Identifier	now		531025	1					
ANR	531045	IfStatement	if ( new_state != r_state )		531025	2					
ANR	531046	Condition	new_state != r_state	93:5:2972:2991	531025	0	True				
ANR	531047	EqualityExpression	new_state != r_state		531025	0		!=			
ANR	531048	Identifier	new_state		531025	0					
ANR	531049	Identifier	r_state		531025	1					
ANR	531050	CompoundStatement		5:28:86:86	531025	1					
ANR	531051	ExpressionStatement	statechange = true	94:2:2999:3017	531025	0	True				
ANR	531052	AssignmentExpression	statechange = true		531025	0		=			
ANR	531053	Identifier	statechange		531025	0					
ANR	531054	Identifier	true		531025	1					
ANR	531055	IfStatement	if ( new_act != r_act )		531025	3					
ANR	531056	Condition	new_act != r_act	96:5:3027:3042	531025	0	True				
ANR	531057	EqualityExpression	new_act != r_act		531025	0		!=			
ANR	531058	Identifier	new_act		531025	0					
ANR	531059	Identifier	r_act		531025	1					
ANR	531060	CompoundStatement		8:24:137:137	531025	1					
ANR	531061	ExpressionStatement	actchange = true	97:2:3050:3066	531025	0	True				
ANR	531062	AssignmentExpression	actchange = true		531025	0		=			
ANR	531063	Identifier	actchange		531025	0					
ANR	531064	Identifier	true		531025	1					
ANR	531065	IfStatement	if ( ! ( actchange || statechange ) )		531025	4					
ANR	531066	Condition	! ( actchange || statechange )	99:5:3076:3103	531025	0	True				
ANR	531067	UnaryOperationExpression	! ( actchange || statechange )		531025	0					
ANR	531068	UnaryOperator	!		531025	0					
ANR	531069	OrExpression	actchange || statechange		531025	1		||			
ANR	531070	Identifier	actchange		531025	0					
ANR	531071	Identifier	statechange		531025	1					
ANR	531072	CompoundStatement		11:36:198:198	531025	1					
ANR	531073	ReturnStatement	return ;	100:2:3111:3117	531025	0	True				
ANR	531074	IfStatement	"if ( leave_action ( r_state , r_act , new_state , new_act , statechange ) )"		531025	5					
ANR	531075	Condition	"leave_action ( r_state , r_act , new_state , new_act , statechange )"	106:5:3335:3397	531025	0	True				
ANR	531076	CallExpression	"leave_action ( r_state , r_act , new_state , new_act , statechange )"		531025	0					
ANR	531077	Callee	leave_action		531025	0					
ANR	531078	Identifier	leave_action		531025	0					
ANR	531079	ArgumentList	r_state		531025	1					
ANR	531080	Argument	r_state		531025	0					
ANR	531081	Identifier	r_state		531025	0					
ANR	531082	Argument	r_act		531025	1					
ANR	531083	Identifier	r_act		531025	0					
ANR	531084	Argument	new_state		531025	2					
ANR	531085	Identifier	new_state		531025	0					
ANR	531086	Argument	new_act		531025	3					
ANR	531087	Identifier	new_act		531025	0					
ANR	531088	Argument	statechange		531025	4					
ANR	531089	Identifier	statechange		531025	0					
ANR	531090	CompoundStatement		18:71:492:492	531025	1					
ANR	531091	ReturnStatement	return ;	107:2:3405:3411	531025	0	True				
ANR	531092	IfStatement	if ( statechange && ! actchange )		531025	6					
ANR	531093	Condition	statechange && ! actchange	110:5:3422:3446	531025	0	True				
ANR	531094	AndExpression	statechange && ! actchange		531025	0		&&			
ANR	531095	Identifier	statechange		531025	0					
ANR	531096	UnaryOperationExpression	! actchange		531025	1					
ANR	531097	UnaryOperator	!		531025	0					
ANR	531098	Identifier	actchange		531025	1					
ANR	531099	CompoundStatement		22:33:541:541	531025	1					
ANR	531100	ExpressionStatement	"dprintf ( D_ALWAYS , ""Changing state: %s -> %s\\n"" , state_to_string ( r_state ) , state_to_string ( new_state ) )"	111:2:3454:3568	531025	0	True				
ANR	531101	CallExpression	"dprintf ( D_ALWAYS , ""Changing state: %s -> %s\\n"" , state_to_string ( r_state ) , state_to_string ( new_state ) )"		531025	0					
ANR	531102	Callee	dprintf		531025	0					
ANR	531103	Identifier	dprintf		531025	0					
ANR	531104	ArgumentList	D_ALWAYS		531025	1					
ANR	531105	Argument	D_ALWAYS		531025	0					
ANR	531106	Identifier	D_ALWAYS		531025	0					
ANR	531107	Argument	"""Changing state: %s -> %s\\n"""		531025	1					
ANR	531108	PrimaryExpression	"""Changing state: %s -> %s\\n"""		531025	0					
ANR	531109	Argument	state_to_string ( r_state )		531025	2					
ANR	531110	CallExpression	state_to_string ( r_state )		531025	0					
ANR	531111	Callee	state_to_string		531025	0					
ANR	531112	Identifier	state_to_string		531025	0					
ANR	531113	ArgumentList	r_state		531025	1					
ANR	531114	Argument	r_state		531025	0					
ANR	531115	Identifier	r_state		531025	0					
ANR	531116	Argument	state_to_string ( new_state )		531025	3					
ANR	531117	CallExpression	state_to_string ( new_state )		531025	0					
ANR	531118	Callee	state_to_string		531025	0					
ANR	531119	Identifier	state_to_string		531025	0					
ANR	531120	ArgumentList	new_state		531025	1					
ANR	531121	Argument	new_state		531025	0					
ANR	531122	Identifier	new_state		531025	0					
ANR	531123	ElseStatement	else		531025	0					
ANR	531124	IfStatement	if ( actchange && ! statechange )		531025	0					
ANR	531125	Condition	actchange && ! statechange	114:12:3582:3606	531025	0	True				
ANR	531126	AndExpression	actchange && ! statechange		531025	0		&&			
ANR	531127	Identifier	actchange		531025	0					
ANR	531128	UnaryOperationExpression	! statechange		531025	1					
ANR	531129	UnaryOperator	!		531025	0					
ANR	531130	Identifier	statechange		531025	1					
ANR	531131	CompoundStatement		26:40:701:701	531025	1					
ANR	531132	ExpressionStatement	"dprintf ( D_ALWAYS , ""Changing activity: %s -> %s\\n"" , activity_to_string ( r_act ) , activity_to_string ( new_act ) )"	115:2:3614:3733	531025	0	True				
ANR	531133	CallExpression	"dprintf ( D_ALWAYS , ""Changing activity: %s -> %s\\n"" , activity_to_string ( r_act ) , activity_to_string ( new_act ) )"		531025	0					
ANR	531134	Callee	dprintf		531025	0					
ANR	531135	Identifier	dprintf		531025	0					
ANR	531136	ArgumentList	D_ALWAYS		531025	1					
ANR	531137	Argument	D_ALWAYS		531025	0					
ANR	531138	Identifier	D_ALWAYS		531025	0					
ANR	531139	Argument	"""Changing activity: %s -> %s\\n"""		531025	1					
ANR	531140	PrimaryExpression	"""Changing activity: %s -> %s\\n"""		531025	0					
ANR	531141	Argument	activity_to_string ( r_act )		531025	2					
ANR	531142	CallExpression	activity_to_string ( r_act )		531025	0					
ANR	531143	Callee	activity_to_string		531025	0					
ANR	531144	Identifier	activity_to_string		531025	0					
ANR	531145	ArgumentList	r_act		531025	1					
ANR	531146	Argument	r_act		531025	0					
ANR	531147	Identifier	r_act		531025	0					
ANR	531148	Argument	activity_to_string ( new_act )		531025	3					
ANR	531149	CallExpression	activity_to_string ( new_act )		531025	0					
ANR	531150	Callee	activity_to_string		531025	0					
ANR	531151	Identifier	activity_to_string		531025	0					
ANR	531152	ArgumentList	new_act		531025	1					
ANR	531153	Argument	new_act		531025	0					
ANR	531154	Identifier	new_act		531025	0					
ANR	531155	ElseStatement	else		531025	0					
ANR	531156	CompoundStatement		30:8:834:834	531025	0					
ANR	531157	ExpressionStatement	"dprintf ( D_ALWAYS , ""Changing state and activity: %s/%s -> %s/%s\\n"" , state_to_string ( r_state ) , activity_to_string ( r_act ) , state_to_string ( new_state ) , activity_to_string ( new_act ) )"	119:2:3747:3954	531025	0	True				
ANR	531158	CallExpression	"dprintf ( D_ALWAYS , ""Changing state and activity: %s/%s -> %s/%s\\n"" , state_to_string ( r_state ) , activity_to_string ( r_act ) , state_to_string ( new_state ) , activity_to_string ( new_act ) )"		531025	0					
ANR	531159	Callee	dprintf		531025	0					
ANR	531160	Identifier	dprintf		531025	0					
ANR	531161	ArgumentList	D_ALWAYS		531025	1					
ANR	531162	Argument	D_ALWAYS		531025	0					
ANR	531163	Identifier	D_ALWAYS		531025	0					
ANR	531164	Argument	"""Changing state and activity: %s/%s -> %s/%s\\n"""		531025	1					
ANR	531165	PrimaryExpression	"""Changing state and activity: %s/%s -> %s/%s\\n"""		531025	0					
ANR	531166	Argument	state_to_string ( r_state )		531025	2					
ANR	531167	CallExpression	state_to_string ( r_state )		531025	0					
ANR	531168	Callee	state_to_string		531025	0					
ANR	531169	Identifier	state_to_string		531025	0					
ANR	531170	ArgumentList	r_state		531025	1					
ANR	531171	Argument	r_state		531025	0					
ANR	531172	Identifier	r_state		531025	0					
ANR	531173	Argument	activity_to_string ( r_act )		531025	3					
ANR	531174	CallExpression	activity_to_string ( r_act )		531025	0					
ANR	531175	Callee	activity_to_string		531025	0					
ANR	531176	Identifier	activity_to_string		531025	0					
ANR	531177	ArgumentList	r_act		531025	1					
ANR	531178	Argument	r_act		531025	0					
ANR	531179	Identifier	r_act		531025	0					
ANR	531180	Argument	state_to_string ( new_state )		531025	4					
ANR	531181	CallExpression	state_to_string ( new_state )		531025	0					
ANR	531182	Callee	state_to_string		531025	0					
ANR	531183	Identifier	state_to_string		531025	0					
ANR	531184	ArgumentList	new_state		531025	1					
ANR	531185	Argument	new_state		531025	0					
ANR	531186	Identifier	new_state		531025	0					
ANR	531187	Argument	activity_to_string ( new_act )		531025	5					
ANR	531188	CallExpression	activity_to_string ( new_act )		531025	0					
ANR	531189	Callee	activity_to_string		531025	0					
ANR	531190	Identifier	activity_to_string		531025	0					
ANR	531191	ArgumentList	new_act		531025	1					
ANR	531192	Argument	new_act		531025	0					
ANR	531193	Identifier	new_act		531025	0					
ANR	531194	ExpressionStatement	now = time ( NULL )	127:2:3962:3980	531025	7	True				
ANR	531195	AssignmentExpression	now = time ( NULL )		531025	0		=			
ANR	531196	Identifier	now		531025	0					
ANR	531197	CallExpression	time ( NULL )		531025	1					
ANR	531198	Callee	time		531025	0					
ANR	531199	Identifier	time		531025	0					
ANR	531200	ArgumentList	NULL		531025	1					
ANR	531201	Argument	NULL		531025	0					
ANR	531202	Identifier	NULL		531025	0					
ANR	531203	ExpressionStatement	updateHistoryTotals ( now )	130:1:4036:4060	531025	8	True				
ANR	531204	CallExpression	updateHistoryTotals ( now )		531025	0					
ANR	531205	Callee	updateHistoryTotals		531025	0					
ANR	531206	Identifier	updateHistoryTotals		531025	0					
ANR	531207	ArgumentList	now		531025	1					
ANR	531208	Argument	now		531025	0					
ANR	531209	Identifier	now		531025	0					
ANR	531210	IfStatement	if ( statechange )		531025	9					
ANR	531211	Condition	statechange	132:5:4068:4078	531025	0	True				
ANR	531212	Identifier	statechange		531025	0					
ANR	531213	CompoundStatement		44:19:1173:1173	531025	1					
ANR	531214	ExpressionStatement	m_stime = now	133:2:4086:4099	531025	0	True				
ANR	531215	AssignmentExpression	m_stime = now		531025	0		=			
ANR	531216	Identifier	m_stime		531025	0					
ANR	531217	Identifier	now		531025	1					
ANR	531218	ExpressionStatement	m_atime = now	135:2:4134:4147	531025	1	True				
ANR	531219	AssignmentExpression	m_atime = now		531025	0		=			
ANR	531220	Identifier	m_atime		531025	0					
ANR	531221	Identifier	now		531025	1					
ANR	531222	ExpressionStatement	r_state = new_state	136:2:4151:4170	531025	2	True				
ANR	531223	AssignmentExpression	r_state = new_state		531025	0		=			
ANR	531224	Identifier	r_state		531025	0					
ANR	531225	Identifier	new_state		531025	1					
ANR	531226	IfStatement	if ( r_state == r_destination )		531025	3					
ANR	531227	Condition	r_state == r_destination	137:6:4178:4201	531025	0	True				
ANR	531228	EqualityExpression	r_state == r_destination		531025	0		==			
ANR	531229	Identifier	r_state		531025	0					
ANR	531230	Identifier	r_destination		531025	1					
ANR	531231	CompoundStatement		49:33:1296:1296	531025	1					
ANR	531232	ExpressionStatement	r_destination = no_state	139:3:4268:4292	531025	0	True				
ANR	531233	AssignmentExpression	r_destination = no_state		531025	0		=			
ANR	531234	Identifier	r_destination		531025	0					
ANR	531235	Identifier	no_state		531025	1					
ANR	531236	IfStatement	if ( actchange )		531025	10					
ANR	531237	Condition	actchange	142:5:4306:4314	531025	0	True				
ANR	531238	Identifier	actchange		531025	0					
ANR	531239	CompoundStatement		54:17:1409:1409	531025	1					
ANR	531240	ExpressionStatement	r_act_was_benchmark = ( r_act == benchmarking_act )	143:2:4322:4373	531025	0	True				
ANR	531241	AssignmentExpression	r_act_was_benchmark = ( r_act == benchmarking_act )		531025	0		=			
ANR	531242	Identifier	r_act_was_benchmark		531025	0					
ANR	531243	EqualityExpression	r_act == benchmarking_act		531025	1		==			
ANR	531244	Identifier	r_act		531025	0					
ANR	531245	Identifier	benchmarking_act		531025	1					
ANR	531246	ExpressionStatement	r_act = new_act	144:2:4377:4392	531025	1	True				
ANR	531247	AssignmentExpression	r_act = new_act		531025	0		=			
ANR	531248	Identifier	r_act		531025	0					
ANR	531249	Identifier	new_act		531025	1					
ANR	531250	ExpressionStatement	m_atime = now	145:2:4396:4409	531025	2	True				
ANR	531251	AssignmentExpression	m_atime = now		531025	0		=			
ANR	531252	Identifier	m_atime		531025	0					
ANR	531253	Identifier	now		531025	1					
ANR	531254	IfStatement	"if ( enter_action ( r_state , r_act , statechange , actchange ) )"		531025	11					
ANR	531255	Condition	"enter_action ( r_state , r_act , statechange , actchange )"	148:5:4420:4473	531025	0	True				
ANR	531256	CallExpression	"enter_action ( r_state , r_act , statechange , actchange )"		531025	0					
ANR	531257	Callee	enter_action		531025	0					
ANR	531258	Identifier	enter_action		531025	0					
ANR	531259	ArgumentList	r_state		531025	1					
ANR	531260	Argument	r_state		531025	0					
ANR	531261	Identifier	r_state		531025	0					
ANR	531262	Argument	r_act		531025	1					
ANR	531263	Identifier	r_act		531025	0					
ANR	531264	Argument	statechange		531025	2					
ANR	531265	Identifier	statechange		531025	0					
ANR	531266	Argument	actchange		531025	3					
ANR	531267	Identifier	actchange		531025	0					
ANR	531268	CompoundStatement		60:62:1568:1568	531025	1					
ANR	531269	ReturnStatement	return ;	149:2:4481:4487	531025	0	True				
ANR	531270	ExpressionStatement	"rip -> r_avail_stats . update ( r_state , r_act )"	153:1:4556:4599	531025	12	True				
ANR	531271	CallExpression	"rip -> r_avail_stats . update ( r_state , r_act )"		531025	0					
ANR	531272	Callee	rip -> r_avail_stats . update		531025	0					
ANR	531273	MemberAccess	rip -> r_avail_stats . update		531025	0					
ANR	531274	PtrMemberAccess	rip -> r_avail_stats		531025	0					
ANR	531275	Identifier	rip		531025	0					
ANR	531276	Identifier	r_avail_stats		531025	1					
ANR	531277	Identifier	update		531025	1					
ANR	531278	ArgumentList	r_state		531025	1					
ANR	531279	Argument	r_state		531025	0					
ANR	531280	Identifier	r_state		531025	0					
ANR	531281	Argument	r_act		531025	1					
ANR	531282	Identifier	r_act		531025	0					
ANR	531283	ExpressionStatement	"this -> publish ( rip -> r_classad , A_ALL )"	156:1:4660:4698	531025	13	True				
ANR	531284	CallExpression	"this -> publish ( rip -> r_classad , A_ALL )"		531025	0					
ANR	531285	Callee	this -> publish		531025	0					
ANR	531286	PtrMemberAccess	this -> publish		531025	0					
ANR	531287	Identifier	this		531025	0					
ANR	531288	Identifier	publish		531025	1					
ANR	531289	ArgumentList	rip -> r_classad		531025	1					
ANR	531290	Argument	rip -> r_classad		531025	0					
ANR	531291	PtrMemberAccess	rip -> r_classad		531025	0					
ANR	531292	Identifier	rip		531025	0					
ANR	531293	Identifier	r_classad		531025	1					
ANR	531294	Argument	A_ALL		531025	1					
ANR	531295	Identifier	A_ALL		531025	0					
ANR	531296	ExpressionStatement	rip -> update ( )	159:1:4766:4779	531025	14	True				
ANR	531297	CallExpression	rip -> update ( )		531025	0					
ANR	531298	Callee	rip -> update		531025	0					
ANR	531299	PtrMemberAccess	rip -> update		531025	0					
ANR	531300	Identifier	rip		531025	0					
ANR	531301	Identifier	update		531025	1					
ANR	531302	ArgumentList			531025	1					
ANR	531303	IfStatement	if ( r_state == backfill_state )		531025	15					
ANR	531304	Condition	r_state == backfill_state	168:5:5065:5089	531025	0	True				
ANR	531305	EqualityExpression	r_state == backfill_state		531025	0		==			
ANR	531306	Identifier	r_state		531025	0					
ANR	531307	Identifier	backfill_state		531025	1					
ANR	531308	CompoundStatement		80:33:2184:2184	531025	1					
ANR	531309	ReturnStatement	return ;	169:2:5097:5103	531025	0	True				
ANR	531310	IfStatement	if ( r_act == retiring_act || r_act == idle_act )		531025	16					
ANR	531311	Condition	r_act == retiring_act || r_act == idle_act	173:5:5141:5182	531025	0	True				
ANR	531312	OrExpression	r_act == retiring_act || r_act == idle_act		531025	0		||			
ANR	531313	EqualityExpression	r_act == retiring_act		531025	0		==			
ANR	531314	Identifier	r_act		531025	0					
ANR	531315	Identifier	retiring_act		531025	1					
ANR	531316	EqualityExpression	r_act == idle_act		531025	1		==			
ANR	531317	Identifier	r_act		531025	0					
ANR	531318	Identifier	idle_act		531025	1					
ANR	531319	CompoundStatement		85:50:2277:2277	531025	1					
ANR	531320	ExpressionStatement	this -> eval ( )	176:2:5298:5310	531025	0	True				
ANR	531321	CallExpression	this -> eval ( )		531025	0					
ANR	531322	Callee	this -> eval		531025	0					
ANR	531323	PtrMemberAccess	this -> eval		531025	0					
ANR	531324	Identifier	this		531025	0					
ANR	531325	Identifier	eval		531025	1					
ANR	531326	ArgumentList			531025	1					
ANR	531327	ReturnStatement	return ;	179:1:5317:5323	531025	17	True				
ANR	531328	ReturnType	void		531025	1					
ANR	531329	Identifier	ResState :: change		531025	2					
ANR	531330	ParameterList	"State new_state , Activity new_act"		531025	3					
ANR	531331	Parameter	State new_state	88:18:2872:2886	531025	0	True				
ANR	531332	ParameterType	State		531025	0					
ANR	531333	Identifier	new_state		531025	1					
ANR	531334	Parameter	Activity new_act	88:35:2889:2904	531025	1	True				
ANR	531335	ParameterType	Activity		531025	0					
ANR	531336	Identifier	new_act		531025	1					
ANR	531337	CFGEntryNode	ENTRY		531025		True				
ANR	531338	CFGExitNode	EXIT		531025		True				
ANR	531339	Symbol	m_stime		531025						
ANR	531340	Symbol	* rip		531025						
ANR	531341	Symbol	A_ALL		531025						
ANR	531342	Symbol	benchmarking_act		531025						
ANR	531343	Symbol	r_destination		531025						
ANR	531344	Symbol	backfill_state		531025						
ANR	531345	Symbol	rip -> r_classad		531025						
ANR	531346	Symbol	now		531025						
ANR	531347	Symbol	rip		531025						
ANR	531348	Symbol	new_state		531025						
ANR	531349	Symbol	retiring_act		531025						
ANR	531350	Symbol	rip -> r_avail_stats		531025						
ANR	531351	Symbol	NULL		531025						
ANR	531352	Symbol	statechange		531025						
ANR	531353	Symbol	r_act_was_benchmark		531025						
ANR	531354	Symbol	false		531025						
ANR	531355	Symbol	D_ALWAYS		531025						
ANR	531356	Symbol	this		531025						
ANR	531357	Symbol	r_state		531025						
ANR	531358	Symbol	activity_to_string		531025						
ANR	531359	Symbol	m_atime		531025						
ANR	531360	Symbol	actchange		531025						
ANR	531361	Symbol	no_state		531025						
ANR	531362	Symbol	new_act		531025						
ANR	531363	Symbol	r_act		531025						
ANR	531364	Symbol	idle_act		531025						
ANR	531365	Symbol	true		531025						
ANR	531366	Symbol	enter_action		531025						
ANR	531367	Symbol	time		531025						
ANR	531368	Symbol	state_to_string		531025						
ANR	531369	Symbol	leave_action		531025						
ANR	531370	Function	ResState :: change	183:0:5329:5402							
ANR	531371	FunctionDef	ResState :: change (Activity new_act)		531370	0					
ANR	531372	CompoundStatement		185:0:5371:5402	531370	0					
ANR	531373	ExpressionStatement	"change ( r_state , new_act )"	186:1:5374:5400	531370	0	True				
ANR	531374	CallExpression	"change ( r_state , new_act )"		531370	0					
ANR	531375	Callee	change		531370	0					
ANR	531376	Identifier	change		531370	0					
ANR	531377	ArgumentList	r_state		531370	1					
ANR	531378	Argument	r_state		531370	0					
ANR	531379	Identifier	r_state		531370	0					
ANR	531380	Argument	new_act		531370	1					
ANR	531381	Identifier	new_act		531370	0					
ANR	531382	ReturnType	void		531370	1					
ANR	531383	Identifier	ResState :: change		531370	2					
ANR	531384	ParameterList	Activity new_act		531370	3					
ANR	531385	Parameter	Activity new_act	184:18:5352:5367	531370	0	True				
ANR	531386	ParameterType	Activity		531370	0					
ANR	531387	Identifier	new_act		531370	1					
ANR	531388	CFGEntryNode	ENTRY		531370		True				
ANR	531389	CFGExitNode	EXIT		531370		True				
ANR	531390	Symbol	new_act		531370						
ANR	531391	Symbol	r_state		531370						
ANR	531392	Function	ResState :: change	190:0:5406:5778							
ANR	531393	FunctionDef	ResState :: change (State new_state)		531392	0					
ANR	531394	CompoundStatement		192:0:5447:5778	531392	0					
ANR	531395	IfStatement	if ( new_state == preempting_state )		531392	0					
ANR	531396	Condition	new_state == preempting_state	193:5:5454:5482	531392	0	True				
ANR	531397	EqualityExpression	new_state == preempting_state		531392	0		==			
ANR	531398	Identifier	new_state		531392	0					
ANR	531399	Identifier	preempting_state		531392	1					
ANR	531400	CompoundStatement		2:37:38:38	531392	1					
ANR	531401	IfStatement	if ( ! rip -> preemptWasTrue ( ) || rip -> wants_vacate ( ) )		531392	0					
ANR	531402	Condition	! rip -> preemptWasTrue ( ) || rip -> wants_vacate ( )	196:6:5592:5636	531392	0	True				
ANR	531403	OrExpression	! rip -> preemptWasTrue ( ) || rip -> wants_vacate ( )		531392	0		||			
ANR	531404	UnaryOperationExpression	! rip -> preemptWasTrue ( )		531392	0					
ANR	531405	UnaryOperator	!		531392	0					
ANR	531406	CallExpression	rip -> preemptWasTrue ( )		531392	1					
ANR	531407	Callee	rip -> preemptWasTrue		531392	0					
ANR	531408	PtrMemberAccess	rip -> preemptWasTrue		531392	0					
ANR	531409	Identifier	rip		531392	0					
ANR	531410	Identifier	preemptWasTrue		531392	1					
ANR	531411	ArgumentList			531392	1					
ANR	531412	CallExpression	rip -> wants_vacate ( )		531392	1					
ANR	531413	Callee	rip -> wants_vacate		531392	0					
ANR	531414	PtrMemberAccess	rip -> wants_vacate		531392	0					
ANR	531415	Identifier	rip		531392	0					
ANR	531416	Identifier	wants_vacate		531392	1					
ANR	531417	ArgumentList			531392	1					
ANR	531418	CompoundStatement		5:54:192:192	531392	1					
ANR	531419	ExpressionStatement	"change ( new_state , vacating_act )"	197:3:5645:5678	531392	0	True				
ANR	531420	CallExpression	"change ( new_state , vacating_act )"		531392	0					
ANR	531421	Callee	change		531392	0					
ANR	531422	Identifier	change		531392	0					
ANR	531423	ArgumentList	new_state		531392	1					
ANR	531424	Argument	new_state		531392	0					
ANR	531425	Identifier	new_state		531392	0					
ANR	531426	Argument	vacating_act		531392	1					
ANR	531427	Identifier	vacating_act		531392	0					
ANR	531428	ElseStatement	else		531392	0					
ANR	531429	CompoundStatement		7:9:241:241	531392	0					
ANR	531430	ExpressionStatement	"change ( new_state , killing_act )"	199:3:5694:5726	531392	0	True				
ANR	531431	CallExpression	"change ( new_state , killing_act )"		531392	0					
ANR	531432	Callee	change		531392	0					
ANR	531433	Identifier	change		531392	0					
ANR	531434	ArgumentList	new_state		531392	1					
ANR	531435	Argument	new_state		531392	0					
ANR	531436	Identifier	new_state		531392	0					
ANR	531437	Argument	killing_act		531392	1					
ANR	531438	Identifier	killing_act		531392	0					
ANR	531439	ElseStatement	else		531392	0					
ANR	531440	CompoundStatement		10:8:292:292	531392	0					
ANR	531441	ExpressionStatement	"change ( new_state , idle_act )"	202:2:5744:5773	531392	0	True				
ANR	531442	CallExpression	"change ( new_state , idle_act )"		531392	0					
ANR	531443	Callee	change		531392	0					
ANR	531444	Identifier	change		531392	0					
ANR	531445	ArgumentList	new_state		531392	1					
ANR	531446	Argument	new_state		531392	0					
ANR	531447	Identifier	new_state		531392	0					
ANR	531448	Argument	idle_act		531392	1					
ANR	531449	Identifier	idle_act		531392	0					
ANR	531450	ReturnType	void		531392	1					
ANR	531451	Identifier	ResState :: change		531392	2					
ANR	531452	ParameterList	State new_state		531392	3					
ANR	531453	Parameter	State new_state	191:18:5429:5443	531392	0	True				
ANR	531454	ParameterType	State		531392	0					
ANR	531455	Identifier	new_state		531392	1					
ANR	531456	CFGEntryNode	ENTRY		531392		True				
ANR	531457	CFGExitNode	EXIT		531392		True				
ANR	531458	Symbol	rip -> preemptWasTrue		531392						
ANR	531459	Symbol	* rip		531392						
ANR	531460	Symbol	idle_act		531392						
ANR	531461	Symbol	preempting_state		531392						
ANR	531462	Symbol	rip		531392						
ANR	531463	Symbol	vacating_act		531392						
ANR	531464	Symbol	killing_act		531392						
ANR	531465	Symbol	new_state		531392						
ANR	531466	Symbol	rip -> wants_vacate		531392						
ANR	531467	Function	ResState :: eval	207:0:5782:17567							
ANR	531468	FunctionDef	ResState :: eval ()		531467	0					
ANR	531469	CompoundStatement		209:0:5809:17567	531467	0					
ANR	531470	IdentifierDeclStatement	int want_suspend ;	210:1:5812:5828	531467	0	True				
ANR	531471	IdentifierDecl	want_suspend		531467	0					
ANR	531472	IdentifierDeclType	int		531467	0					
ANR	531473	Identifier	want_suspend		531467	1					
ANR	531474	IdentifierDeclStatement	int kill_rval ;	212:1:5849:5862	531467	1	True				
ANR	531475	IdentifierDecl	kill_rval		531467	0					
ANR	531476	IdentifierDeclType	int		531467	0					
ANR	531477	Identifier	kill_rval		531467	1					
ANR	531478	ExpressionStatement	rip -> hackLoadForCOD ( )	220:1:6161:6182	531467	2	True				
ANR	531479	CallExpression	rip -> hackLoadForCOD ( )		531467	0					
ANR	531480	Callee	rip -> hackLoadForCOD		531467	0					
ANR	531481	PtrMemberAccess	rip -> hackLoadForCOD		531467	0					
ANR	531482	Identifier	rip		531467	0					
ANR	531483	Identifier	hackLoadForCOD		531467	1					
ANR	531484	ArgumentList			531467	1					
ANR	531485	ExpressionStatement	rip -> refreshSlotAttrs ( )	225:1:6373:6396	531467	3	True				
ANR	531486	CallExpression	rip -> refreshSlotAttrs ( )		531467	0					
ANR	531487	Callee	rip -> refreshSlotAttrs		531467	0					
ANR	531488	PtrMemberAccess	rip -> refreshSlotAttrs		531467	0					
ANR	531489	Identifier	rip		531467	0					
ANR	531490	Identifier	refreshSlotAttrs		531467	1					
ANR	531491	ArgumentList			531467	1					
ANR	531492	ExpressionStatement	updateActivityAverages ( )	227:1:6400:6424	531467	4	True				
ANR	531493	CallExpression	updateActivityAverages ( )		531467	0					
ANR	531494	Callee	updateActivityAverages		531467	0					
ANR	531495	Identifier	updateActivityAverages		531467	0					
ANR	531496	ArgumentList			531467	1					
ANR	531497	SwitchStatement	switch ( r_state )		531467	5					
ANR	531498	Condition	r_state	229:9:6436:6442	531467	0	True				
ANR	531499	Identifier	r_state		531467	0					
ANR	531500	CompoundStatement		21:19:636:636	531467	1					
ANR	531501	Label	case claimed_state :	231:1:6450:6468	531467	0	True				
ANR	531502	Identifier	claimed_state		531467	0					
ANR	531503	IfStatement	if ( r_act == suspended_act && rip -> isSuspendedForCOD ( ) )		531467	1					
ANR	531504	Condition	r_act == suspended_act && rip -> isSuspendedForCOD ( )	232:6:6476:6525	531467	0	True				
ANR	531505	AndExpression	r_act == suspended_act && rip -> isSuspendedForCOD ( )		531467	0		&&			
ANR	531506	EqualityExpression	r_act == suspended_act		531467	0		==			
ANR	531507	Identifier	r_act		531467	0					
ANR	531508	Identifier	suspended_act		531467	1					
ANR	531509	CallExpression	rip -> isSuspendedForCOD ( )		531467	1					
ANR	531510	Callee	rip -> isSuspendedForCOD		531467	0					
ANR	531511	PtrMemberAccess	rip -> isSuspendedForCOD		531467	0					
ANR	531512	Identifier	rip		531467	0					
ANR	531513	Identifier	isSuspendedForCOD		531467	1					
ANR	531514	ArgumentList			531467	1					
ANR	531515	CompoundStatement		24:59:719:719	531467	1					
ANR	531516	ReturnStatement	return 0 ;	237:3:6750:6758	531467	0	True				
ANR	531517	PrimaryExpression	0		531467	0					
ANR	531518	IfStatement	if ( rip -> inRetirement ( ) )		531467	2					
ANR	531519	Condition	rip -> inRetirement ( )	239:6:6770:6788	531467	0	True				
ANR	531520	CallExpression	rip -> inRetirement ( )		531467	0					
ANR	531521	Callee	rip -> inRetirement		531467	0					
ANR	531522	PtrMemberAccess	rip -> inRetirement		531467	0					
ANR	531523	Identifier	rip		531467	0					
ANR	531524	Identifier	inRetirement		531467	1					
ANR	531525	ArgumentList			531467	1					
ANR	531526	CompoundStatement		31:28:982:982	531467	1					
ANR	531527	IfStatement	if ( rip -> retirementExpired ( ) )		531467	0					
ANR	531528	Condition	rip -> retirementExpired ( )	240:7:6828:6851	531467	0	True				
ANR	531529	CallExpression	rip -> retirementExpired ( )		531467	0					
ANR	531530	Callee	rip -> retirementExpired		531467	0					
ANR	531531	PtrMemberAccess	rip -> retirementExpired		531467	0					
ANR	531532	Identifier	rip		531467	0					
ANR	531533	Identifier	retirementExpired		531467	1					
ANR	531534	ArgumentList			531467	1					
ANR	531535	CompoundStatement		32:34:1045:1045	531467	1					
ANR	531536	IfStatement	if ( rip -> isDraining ( ) )		531467	0					
ANR	531537	Condition	rip -> isDraining ( )	252:8:7441:7457	531467	0	True				
ANR	531538	CallExpression	rip -> isDraining ( )		531467	0					
ANR	531539	Callee	rip -> isDraining		531467	0					
ANR	531540	PtrMemberAccess	rip -> isDraining		531467	0					
ANR	531541	Identifier	rip		531467	0					
ANR	531542	Identifier	isDraining		531467	1					
ANR	531543	ArgumentList			531467	1					
ANR	531544	CompoundStatement		44:28:1651:1651	531467	1					
ANR	531545	ExpressionStatement	rip -> setBadputCausedByDraining ( )	253:5:7468:7500	531467	0	True				
ANR	531546	CallExpression	rip -> setBadputCausedByDraining ( )		531467	0					
ANR	531547	Callee	rip -> setBadputCausedByDraining		531467	0					
ANR	531548	PtrMemberAccess	rip -> setBadputCausedByDraining		531467	0					
ANR	531549	Identifier	rip		531467	0					
ANR	531550	Identifier	setBadputCausedByDraining		531467	1					
ANR	531551	ArgumentList			531467	1					
ANR	531552	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: claim retirement ended/expired\\n"" )"	255:4:7512:7581	531467	1	True				
ANR	531553	CallExpression	"dprintf ( D_ALWAYS , ""State change: claim retirement ended/expired\\n"" )"		531467	0					
ANR	531554	Callee	dprintf		531467	0					
ANR	531555	Identifier	dprintf		531467	0					
ANR	531556	ArgumentList	D_ALWAYS		531467	1					
ANR	531557	Argument	D_ALWAYS		531467	0					
ANR	531558	Identifier	D_ALWAYS		531467	0					
ANR	531559	Argument	"""State change: claim retirement ended/expired\\n"""		531467	1					
ANR	531560	PrimaryExpression	"""State change: claim retirement ended/expired\\n"""		531467	0					
ANR	531561	ExpressionStatement	change ( preempting_state )	257:4:7615:7641	531467	2	True				
ANR	531562	CallExpression	change ( preempting_state )		531467	0					
ANR	531563	Callee	change		531467	0					
ANR	531564	Identifier	change		531467	0					
ANR	531565	ArgumentList	preempting_state		531467	1					
ANR	531566	Argument	preempting_state		531467	0					
ANR	531567	Identifier	preempting_state		531467	0					
ANR	531568	ReturnStatement	return TRUE ;	258:4:7647:7658	531467	3	True				
ANR	531569	Identifier	TRUE		531467	0					
ANR	531570	ExpressionStatement	want_suspend = rip -> wants_suspend ( )	261:2:7691:7726	531467	3	True				
ANR	531571	AssignmentExpression	want_suspend = rip -> wants_suspend ( )		531467	0		=			
ANR	531572	Identifier	want_suspend		531467	0					
ANR	531573	CallExpression	rip -> wants_suspend ( )		531467	1					
ANR	531574	Callee	rip -> wants_suspend		531467	0					
ANR	531575	PtrMemberAccess	rip -> wants_suspend		531467	0					
ANR	531576	Identifier	rip		531467	0					
ANR	531577	Identifier	wants_suspend		531467	1					
ANR	531578	ArgumentList			531467	1					
ANR	531579	IfStatement	if ( ( r_act == busy_act && ! want_suspend ) || ( r_act == retiring_act && ! rip -> preemptWasTrue ( ) && ! want_suspend ) || ( r_act == suspended_act && ! rip -> preemptWasTrue ( ) ) )		531467	4					
ANR	531580	Condition	( r_act == busy_act && ! want_suspend ) || ( r_act == retiring_act && ! rip -> preemptWasTrue ( ) && ! want_suspend ) || ( r_act == suspended_act && ! rip -> preemptWasTrue ( ) )	262:6:7734:7893	531467	0	True				
ANR	531581	OrExpression	( r_act == busy_act && ! want_suspend ) || ( r_act == retiring_act && ! rip -> preemptWasTrue ( ) && ! want_suspend ) || ( r_act == suspended_act && ! rip -> preemptWasTrue ( ) )		531467	0		||			
ANR	531582	AndExpression	r_act == busy_act && ! want_suspend		531467	0		&&			
ANR	531583	EqualityExpression	r_act == busy_act		531467	0		==			
ANR	531584	Identifier	r_act		531467	0					
ANR	531585	Identifier	busy_act		531467	1					
ANR	531586	UnaryOperationExpression	! want_suspend		531467	1					
ANR	531587	UnaryOperator	!		531467	0					
ANR	531588	Identifier	want_suspend		531467	1					
ANR	531589	OrExpression	( r_act == retiring_act && ! rip -> preemptWasTrue ( ) && ! want_suspend ) || ( r_act == suspended_act && ! rip -> preemptWasTrue ( ) )		531467	1		||			
ANR	531590	AndExpression	r_act == retiring_act && ! rip -> preemptWasTrue ( ) && ! want_suspend		531467	0		&&			
ANR	531591	EqualityExpression	r_act == retiring_act		531467	0		==			
ANR	531592	Identifier	r_act		531467	0					
ANR	531593	Identifier	retiring_act		531467	1					
ANR	531594	AndExpression	! rip -> preemptWasTrue ( ) && ! want_suspend		531467	1		&&			
ANR	531595	UnaryOperationExpression	! rip -> preemptWasTrue ( )		531467	0					
ANR	531596	UnaryOperator	!		531467	0					
ANR	531597	CallExpression	rip -> preemptWasTrue ( )		531467	1					
ANR	531598	Callee	rip -> preemptWasTrue		531467	0					
ANR	531599	PtrMemberAccess	rip -> preemptWasTrue		531467	0					
ANR	531600	Identifier	rip		531467	0					
ANR	531601	Identifier	preemptWasTrue		531467	1					
ANR	531602	ArgumentList			531467	1					
ANR	531603	UnaryOperationExpression	! want_suspend		531467	1					
ANR	531604	UnaryOperator	!		531467	0					
ANR	531605	Identifier	want_suspend		531467	1					
ANR	531606	AndExpression	r_act == suspended_act && ! rip -> preemptWasTrue ( )		531467	1		&&			
ANR	531607	EqualityExpression	r_act == suspended_act		531467	0		==			
ANR	531608	Identifier	r_act		531467	0					
ANR	531609	Identifier	suspended_act		531467	1					
ANR	531610	UnaryOperationExpression	! rip -> preemptWasTrue ( )		531467	1					
ANR	531611	UnaryOperator	!		531467	0					
ANR	531612	CallExpression	rip -> preemptWasTrue ( )		531467	1					
ANR	531613	Callee	rip -> preemptWasTrue		531467	0					
ANR	531614	PtrMemberAccess	rip -> preemptWasTrue		531467	0					
ANR	531615	Identifier	rip		531467	0					
ANR	531616	Identifier	preemptWasTrue		531467	1					
ANR	531617	ArgumentList			531467	1					
ANR	531618	CompoundStatement		56:54:2087:2087	531467	1					
ANR	531619	IfStatement	if ( rip -> eval_preempt ( ) )		531467	0					
ANR	531620	Condition	rip -> eval_preempt ( )	273:7:8223:8241	531467	0	True				
ANR	531621	CallExpression	rip -> eval_preempt ( )		531467	0					
ANR	531622	Callee	rip -> eval_preempt		531467	0					
ANR	531623	PtrMemberAccess	rip -> eval_preempt		531467	0					
ANR	531624	Identifier	rip		531467	0					
ANR	531625	Identifier	eval_preempt		531467	1					
ANR	531626	ArgumentList			531467	1					
ANR	531627	CompoundStatement		65:29:2435:2435	531467	1					
ANR	531628	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: PREEMPT is TRUE\\n"" )"	274:4:8251:8305	531467	0	True				
ANR	531629	CallExpression	"dprintf ( D_ALWAYS , ""State change: PREEMPT is TRUE\\n"" )"		531467	0					
ANR	531630	Callee	dprintf		531467	0					
ANR	531631	Identifier	dprintf		531467	0					
ANR	531632	ArgumentList	D_ALWAYS		531467	1					
ANR	531633	Argument	D_ALWAYS		531467	0					
ANR	531634	Identifier	D_ALWAYS		531467	0					
ANR	531635	Argument	"""State change: PREEMPT is TRUE\\n"""		531467	1					
ANR	531636	PrimaryExpression	"""State change: PREEMPT is TRUE\\n"""		531467	0					
ANR	531637	ExpressionStatement	rip -> preemptIsTrue ( )	277:4:8377:8397	531467	1	True				
ANR	531638	CallExpression	rip -> preemptIsTrue ( )		531467	0					
ANR	531639	Callee	rip -> preemptIsTrue		531467	0					
ANR	531640	PtrMemberAccess	rip -> preemptIsTrue		531467	0					
ANR	531641	Identifier	rip		531467	0					
ANR	531642	Identifier	preemptIsTrue		531467	1					
ANR	531643	ArgumentList			531467	1					
ANR	531644	ReturnStatement	return rip -> retire_claim ( ) ;	278:4:8403:8429	531467	2	True				
ANR	531645	CallExpression	rip -> retire_claim ( )		531467	0					
ANR	531646	Callee	rip -> retire_claim		531467	0					
ANR	531647	PtrMemberAccess	rip -> retire_claim		531467	0					
ANR	531648	Identifier	rip		531467	0					
ANR	531649	Identifier	retire_claim		531467	1					
ANR	531650	ArgumentList			531467	1					
ANR	531651	IfStatement	if ( r_act == retiring_act )		531467	5					
ANR	531652	Condition	r_act == retiring_act	281:6:8446:8466	531467	0	True				
ANR	531653	EqualityExpression	r_act == retiring_act		531467	0		==			
ANR	531654	Identifier	r_act		531467	0					
ANR	531655	Identifier	retiring_act		531467	1					
ANR	531656	CompoundStatement		73:30:2660:2660	531467	1					
ANR	531657	IfStatement	if ( rip -> mayUnretire ( ) )		531467	0					
ANR	531658	Condition	rip -> mayUnretire ( )	282:7:8479:8496	531467	0	True				
ANR	531659	CallExpression	rip -> mayUnretire ( )		531467	0					
ANR	531660	Callee	rip -> mayUnretire		531467	0					
ANR	531661	PtrMemberAccess	rip -> mayUnretire		531467	0					
ANR	531662	Identifier	rip		531467	0					
ANR	531663	Identifier	mayUnretire		531467	1					
ANR	531664	ArgumentList			531467	1					
ANR	531665	CompoundStatement		74:28:2690:2690	531467	1					
ANR	531666	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: unretiring because no preempting claim exists\\n"" )"	283:4:8506:8590	531467	0	True				
ANR	531667	CallExpression	"dprintf ( D_ALWAYS , ""State change: unretiring because no preempting claim exists\\n"" )"		531467	0					
ANR	531668	Callee	dprintf		531467	0					
ANR	531669	Identifier	dprintf		531467	0					
ANR	531670	ArgumentList	D_ALWAYS		531467	1					
ANR	531671	Argument	D_ALWAYS		531467	0					
ANR	531672	Identifier	D_ALWAYS		531467	0					
ANR	531673	Argument	"""State change: unretiring because no preempting claim exists\\n"""		531467	1					
ANR	531674	PrimaryExpression	"""State change: unretiring because no preempting claim exists\\n"""		531467	0					
ANR	531675	ExpressionStatement	change ( busy_act )	285:4:8624:8642	531467	1	True				
ANR	531676	CallExpression	change ( busy_act )		531467	0					
ANR	531677	Callee	change		531467	0					
ANR	531678	Identifier	change		531467	0					
ANR	531679	ArgumentList	busy_act		531467	1					
ANR	531680	Argument	busy_act		531467	0					
ANR	531681	Identifier	busy_act		531467	0					
ANR	531682	ReturnStatement	return TRUE ;	286:4:8648:8659	531467	2	True				
ANR	531683	Identifier	TRUE		531467	0					
ANR	531684	IfStatement	if ( rip -> retirementExpired ( ) )		531467	1					
ANR	531685	Condition	rip -> retirementExpired ( )	288:7:8693:8716	531467	0	True				
ANR	531686	CallExpression	rip -> retirementExpired ( )		531467	0					
ANR	531687	Callee	rip -> retirementExpired		531467	0					
ANR	531688	PtrMemberAccess	rip -> retirementExpired		531467	0					
ANR	531689	Identifier	rip		531467	0					
ANR	531690	Identifier	retirementExpired		531467	1					
ANR	531691	ArgumentList			531467	1					
ANR	531692	CompoundStatement		80:34:2910:2910	531467	1					
ANR	531693	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: retirement ended/expired\\n"" )"	289:4:8726:8789	531467	0	True				
ANR	531694	CallExpression	"dprintf ( D_ALWAYS , ""State change: retirement ended/expired\\n"" )"		531467	0					
ANR	531695	Callee	dprintf		531467	0					
ANR	531696	Identifier	dprintf		531467	0					
ANR	531697	ArgumentList	D_ALWAYS		531467	1					
ANR	531698	Argument	D_ALWAYS		531467	0					
ANR	531699	Identifier	D_ALWAYS		531467	0					
ANR	531700	Argument	"""State change: retirement ended/expired\\n"""		531467	1					
ANR	531701	PrimaryExpression	"""State change: retirement ended/expired\\n"""		531467	0					
ANR	531702	ExpressionStatement	change ( preempting_state )	290:4:8795:8821	531467	1	True				
ANR	531703	CallExpression	change ( preempting_state )		531467	0					
ANR	531704	Callee	change		531467	0					
ANR	531705	Identifier	change		531467	0					
ANR	531706	ArgumentList	preempting_state		531467	1					
ANR	531707	Argument	preempting_state		531467	0					
ANR	531708	Identifier	preempting_state		531467	0					
ANR	531709	ReturnStatement	return TRUE ;	291:4:8827:8838	531467	2	True				
ANR	531710	Identifier	TRUE		531467	0					
ANR	531711	IfStatement	if ( ( r_act == busy_act || r_act == retiring_act ) && want_suspend )		531467	6					
ANR	531712	Condition	( r_act == busy_act || r_act == retiring_act ) && want_suspend	294:6:8875:8934	531467	0	True				
ANR	531713	AndExpression	( r_act == busy_act || r_act == retiring_act ) && want_suspend		531467	0		&&			
ANR	531714	OrExpression	r_act == busy_act || r_act == retiring_act		531467	0		||			
ANR	531715	EqualityExpression	r_act == busy_act		531467	0		==			
ANR	531716	Identifier	r_act		531467	0					
ANR	531717	Identifier	busy_act		531467	1					
ANR	531718	EqualityExpression	r_act == retiring_act		531467	1		==			
ANR	531719	Identifier	r_act		531467	0					
ANR	531720	Identifier	retiring_act		531467	1					
ANR	531721	Identifier	want_suspend		531467	1					
ANR	531722	CompoundStatement		86:69:3128:3128	531467	1					
ANR	531723	IfStatement	if ( rip -> eval_suspend ( ) )		531467	0					
ANR	531724	Condition	rip -> eval_suspend ( )	295:7:8947:8965	531467	0	True				
ANR	531725	CallExpression	rip -> eval_suspend ( )		531467	0					
ANR	531726	Callee	rip -> eval_suspend		531467	0					
ANR	531727	PtrMemberAccess	rip -> eval_suspend		531467	0					
ANR	531728	Identifier	rip		531467	0					
ANR	531729	Identifier	eval_suspend		531467	1					
ANR	531730	ArgumentList			531467	1					
ANR	531731	CompoundStatement		87:29:3159:3159	531467	1					
ANR	531732	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: SUSPEND is TRUE\\n"" )"	297:4:9010:9064	531467	0	True				
ANR	531733	CallExpression	"dprintf ( D_ALWAYS , ""State change: SUSPEND is TRUE\\n"" )"		531467	0					
ANR	531734	Callee	dprintf		531467	0					
ANR	531735	Identifier	dprintf		531467	0					
ANR	531736	ArgumentList	D_ALWAYS		531467	1					
ANR	531737	Argument	D_ALWAYS		531467	0					
ANR	531738	Identifier	D_ALWAYS		531467	0					
ANR	531739	Argument	"""State change: SUSPEND is TRUE\\n"""		531467	1					
ANR	531740	PrimaryExpression	"""State change: SUSPEND is TRUE\\n"""		531467	0					
ANR	531741	ExpressionStatement	change ( suspended_act )	298:4:9070:9093	531467	1	True				
ANR	531742	CallExpression	change ( suspended_act )		531467	0					
ANR	531743	Callee	change		531467	0					
ANR	531744	Identifier	change		531467	0					
ANR	531745	ArgumentList	suspended_act		531467	1					
ANR	531746	Argument	suspended_act		531467	0					
ANR	531747	Identifier	suspended_act		531467	0					
ANR	531748	ReturnStatement	return TRUE ;	299:4:9099:9110	531467	2	True				
ANR	531749	Identifier	TRUE		531467	0					
ANR	531750	IfStatement	if ( r_act == suspended_act )		531467	7					
ANR	531751	Condition	r_act == suspended_act	302:6:9147:9168	531467	0	True				
ANR	531752	EqualityExpression	r_act == suspended_act		531467	0		==			
ANR	531753	Identifier	r_act		531467	0					
ANR	531754	Identifier	suspended_act		531467	1					
ANR	531755	CompoundStatement		94:31:3362:3362	531467	1					
ANR	531756	IfStatement	if ( rip -> eval_continue ( ) )		531467	0					
ANR	531757	Condition	rip -> eval_continue ( )	303:7:9181:9200	531467	0	True				
ANR	531758	CallExpression	rip -> eval_continue ( )		531467	0					
ANR	531759	Callee	rip -> eval_continue		531467	0					
ANR	531760	PtrMemberAccess	rip -> eval_continue		531467	0					
ANR	531761	Identifier	rip		531467	0					
ANR	531762	Identifier	eval_continue		531467	1					
ANR	531763	ArgumentList			531467	1					
ANR	531764	CompoundStatement		95:30:3394:3394	531467	1					
ANR	531765	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: CONTINUE is TRUE\\n"" )"	305:4:9238:9293	531467	0	True				
ANR	531766	CallExpression	"dprintf ( D_ALWAYS , ""State change: CONTINUE is TRUE\\n"" )"		531467	0					
ANR	531767	Callee	dprintf		531467	0					
ANR	531768	Identifier	dprintf		531467	0					
ANR	531769	ArgumentList	D_ALWAYS		531467	1					
ANR	531770	Argument	D_ALWAYS		531467	0					
ANR	531771	Identifier	D_ALWAYS		531467	0					
ANR	531772	Argument	"""State change: CONTINUE is TRUE\\n"""		531467	1					
ANR	531773	PrimaryExpression	"""State change: CONTINUE is TRUE\\n"""		531467	0					
ANR	531774	IfStatement	if ( ! rip -> inRetirement ( ) )		531467	1					
ANR	531775	Condition	! rip -> inRetirement ( )	306:8:9303:9322	531467	0	True				
ANR	531776	UnaryOperationExpression	! rip -> inRetirement ( )		531467	0					
ANR	531777	UnaryOperator	!		531467	0					
ANR	531778	CallExpression	rip -> inRetirement ( )		531467	1					
ANR	531779	Callee	rip -> inRetirement		531467	0					
ANR	531780	PtrMemberAccess	rip -> inRetirement		531467	0					
ANR	531781	Identifier	rip		531467	0					
ANR	531782	Identifier	inRetirement		531467	1					
ANR	531783	ArgumentList			531467	1					
ANR	531784	CompoundStatement		98:31:3516:3516	531467	1					
ANR	531785	ExpressionStatement	change ( busy_act )	307:5:9333:9351	531467	0	True				
ANR	531786	CallExpression	change ( busy_act )		531467	0					
ANR	531787	Callee	change		531467	0					
ANR	531788	Identifier	change		531467	0					
ANR	531789	ArgumentList	busy_act		531467	1					
ANR	531790	Argument	busy_act		531467	0					
ANR	531791	Identifier	busy_act		531467	0					
ANR	531792	ReturnStatement	return TRUE ;	308:5:9358:9369	531467	1	True				
ANR	531793	Identifier	TRUE		531467	0					
ANR	531794	ElseStatement	else		531467	0					
ANR	531795	CompoundStatement		102:9:3596:3596	531467	0					
ANR	531796	ExpressionStatement	change ( retiring_act )	312:5:9442:9464	531467	0	True				
ANR	531797	CallExpression	change ( retiring_act )		531467	0					
ANR	531798	Callee	change		531467	0					
ANR	531799	Identifier	change		531467	0					
ANR	531800	ArgumentList	retiring_act		531467	1					
ANR	531801	Argument	retiring_act		531467	0					
ANR	531802	Identifier	retiring_act		531467	0					
ANR	531803	ReturnStatement	return TRUE ;	313:5:9471:9482	531467	1	True				
ANR	531804	Identifier	TRUE		531467	0					
ANR	531805	IfStatement	if ( ( r_act == busy_act ) && rip -> hasPreemptingClaim ( ) )		531467	8					
ANR	531806	Condition	( r_act == busy_act ) && rip -> hasPreemptingClaim ( )	317:6:9525:9572	531467	0	True				
ANR	531807	AndExpression	( r_act == busy_act ) && rip -> hasPreemptingClaim ( )		531467	0		&&			
ANR	531808	EqualityExpression	r_act == busy_act		531467	0		==			
ANR	531809	Identifier	r_act		531467	0					
ANR	531810	Identifier	busy_act		531467	1					
ANR	531811	CallExpression	rip -> hasPreemptingClaim ( )		531467	1					
ANR	531812	Callee	rip -> hasPreemptingClaim		531467	0					
ANR	531813	PtrMemberAccess	rip -> hasPreemptingClaim		531467	0					
ANR	531814	Identifier	rip		531467	0					
ANR	531815	Identifier	hasPreemptingClaim		531467	1					
ANR	531816	ArgumentList			531467	1					
ANR	531817	CompoundStatement		109:57:3766:3766	531467	1					
ANR	531818	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: retiring due to preempting claim\\n"" )"	318:3:9581:9652	531467	0	True				
ANR	531819	CallExpression	"dprintf ( D_ALWAYS , ""State change: retiring due to preempting claim\\n"" )"		531467	0					
ANR	531820	Callee	dprintf		531467	0					
ANR	531821	Identifier	dprintf		531467	0					
ANR	531822	ArgumentList	D_ALWAYS		531467	1					
ANR	531823	Argument	D_ALWAYS		531467	0					
ANR	531824	Identifier	D_ALWAYS		531467	0					
ANR	531825	Argument	"""State change: retiring due to preempting claim\\n"""		531467	1					
ANR	531826	PrimaryExpression	"""State change: retiring due to preempting claim\\n"""		531467	0					
ANR	531827	ExpressionStatement	change ( retiring_act )	321:3:9749:9771	531467	1	True				
ANR	531828	CallExpression	change ( retiring_act )		531467	0					
ANR	531829	Callee	change		531467	0					
ANR	531830	Identifier	change		531467	0					
ANR	531831	ArgumentList	retiring_act		531467	1					
ANR	531832	Argument	retiring_act		531467	0					
ANR	531833	Identifier	retiring_act		531467	0					
ANR	531834	ReturnStatement	return TRUE ;	322:3:9776:9787	531467	2	True				
ANR	531835	Identifier	TRUE		531467	0					
ANR	531836	IfStatement	if ( ( r_act == idle_act ) && rip -> hasPreemptingClaim ( ) )		531467	9					
ANR	531837	Condition	( r_act == idle_act ) && rip -> hasPreemptingClaim ( )	324:6:9819:9866	531467	0	True				
ANR	531838	AndExpression	( r_act == idle_act ) && rip -> hasPreemptingClaim ( )		531467	0		&&			
ANR	531839	EqualityExpression	r_act == idle_act		531467	0		==			
ANR	531840	Identifier	r_act		531467	0					
ANR	531841	Identifier	idle_act		531467	1					
ANR	531842	CallExpression	rip -> hasPreemptingClaim ( )		531467	1					
ANR	531843	Callee	rip -> hasPreemptingClaim		531467	0					
ANR	531844	PtrMemberAccess	rip -> hasPreemptingClaim		531467	0					
ANR	531845	Identifier	rip		531467	0					
ANR	531846	Identifier	hasPreemptingClaim		531467	1					
ANR	531847	ArgumentList			531467	1					
ANR	531848	CompoundStatement		116:57:4060:4060	531467	1					
ANR	531849	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: preempting idle claim\\n"" )"	325:3:9875:9935	531467	0	True				
ANR	531850	CallExpression	"dprintf ( D_ALWAYS , ""State change: preempting idle claim\\n"" )"		531467	0					
ANR	531851	Callee	dprintf		531467	0					
ANR	531852	Identifier	dprintf		531467	0					
ANR	531853	ArgumentList	D_ALWAYS		531467	1					
ANR	531854	Argument	D_ALWAYS		531467	0					
ANR	531855	Identifier	D_ALWAYS		531467	0					
ANR	531856	Argument	"""State change: preempting idle claim\\n"""		531467	1					
ANR	531857	PrimaryExpression	"""State change: preempting idle claim\\n"""		531467	0					
ANR	531858	ExpressionStatement	change ( preempting_state )	326:3:9940:9966	531467	1	True				
ANR	531859	CallExpression	change ( preempting_state )		531467	0					
ANR	531860	Callee	change		531467	0					
ANR	531861	Identifier	change		531467	0					
ANR	531862	ArgumentList	preempting_state		531467	1					
ANR	531863	Argument	preempting_state		531467	0					
ANR	531864	Identifier	preempting_state		531467	0					
ANR	531865	ReturnStatement	return TRUE ;	327:3:9971:9982	531467	2	True				
ANR	531866	Identifier	TRUE		531467	0					
ANR	531867	IfStatement	if ( ( r_act == idle_act ) && ( rip -> eval_start ( ) == 0 ) )		531467	10					
ANR	531868	Condition	( r_act == idle_act ) && ( rip -> eval_start ( ) == 0 )	329:6:10014:10060	531467	0	True				
ANR	531869	AndExpression	( r_act == idle_act ) && ( rip -> eval_start ( ) == 0 )		531467	0		&&			
ANR	531870	EqualityExpression	r_act == idle_act		531467	0		==			
ANR	531871	Identifier	r_act		531467	0					
ANR	531872	Identifier	idle_act		531467	1					
ANR	531873	EqualityExpression	rip -> eval_start ( ) == 0		531467	1		==			
ANR	531874	CallExpression	rip -> eval_start ( )		531467	0					
ANR	531875	Callee	rip -> eval_start		531467	0					
ANR	531876	PtrMemberAccess	rip -> eval_start		531467	0					
ANR	531877	Identifier	rip		531467	0					
ANR	531878	Identifier	eval_start		531467	1					
ANR	531879	ArgumentList			531467	1					
ANR	531880	PrimaryExpression	0		531467	1					
ANR	531881	CompoundStatement		121:56:4254:4254	531467	1					
ANR	531882	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: START is false\\n"" )"	336:3:10385:10438	531467	0	True				
ANR	531883	CallExpression	"dprintf ( D_ALWAYS , ""State change: START is false\\n"" )"		531467	0					
ANR	531884	Callee	dprintf		531467	0					
ANR	531885	Identifier	dprintf		531467	0					
ANR	531886	ArgumentList	D_ALWAYS		531467	1					
ANR	531887	Argument	D_ALWAYS		531467	0					
ANR	531888	Identifier	D_ALWAYS		531467	0					
ANR	531889	Argument	"""State change: START is false\\n"""		531467	1					
ANR	531890	PrimaryExpression	"""State change: START is false\\n"""		531467	0					
ANR	531891	ExpressionStatement	change ( preempting_state )	337:3:10443:10469	531467	1	True				
ANR	531892	CallExpression	change ( preempting_state )		531467	0					
ANR	531893	Callee	change		531467	0					
ANR	531894	Identifier	change		531467	0					
ANR	531895	ArgumentList	preempting_state		531467	1					
ANR	531896	Argument	preempting_state		531467	0					
ANR	531897	Identifier	preempting_state		531467	0					
ANR	531898	ReturnStatement	return TRUE ;	338:3:10475:10486	531467	2	True				
ANR	531899	Identifier	TRUE		531467	0					
ANR	531900	IfStatement	if ( ( r_act == idle_act ) && rip -> claimWorklifeExpired ( ) )		531467	11					
ANR	531901	Condition	( r_act == idle_act ) && rip -> claimWorklifeExpired ( )	340:6:10518:10567	531467	0	True				
ANR	531902	AndExpression	( r_act == idle_act ) && rip -> claimWorklifeExpired ( )		531467	0		&&			
ANR	531903	EqualityExpression	r_act == idle_act		531467	0		==			
ANR	531904	Identifier	r_act		531467	0					
ANR	531905	Identifier	idle_act		531467	1					
ANR	531906	CallExpression	rip -> claimWorklifeExpired ( )		531467	1					
ANR	531907	Callee	rip -> claimWorklifeExpired		531467	0					
ANR	531908	PtrMemberAccess	rip -> claimWorklifeExpired		531467	0					
ANR	531909	Identifier	rip		531467	0					
ANR	531910	Identifier	claimWorklifeExpired		531467	1					
ANR	531911	ArgumentList			531467	1					
ANR	531912	CompoundStatement		132:59:4761:4761	531467	1					
ANR	531913	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: idle claim shutting down due to CLAIM_WORKLIFE\\n"" )"	341:3:10576:10661	531467	0	True				
ANR	531914	CallExpression	"dprintf ( D_ALWAYS , ""State change: idle claim shutting down due to CLAIM_WORKLIFE\\n"" )"		531467	0					
ANR	531915	Callee	dprintf		531467	0					
ANR	531916	Identifier	dprintf		531467	0					
ANR	531917	ArgumentList	D_ALWAYS		531467	1					
ANR	531918	Argument	D_ALWAYS		531467	0					
ANR	531919	Identifier	D_ALWAYS		531467	0					
ANR	531920	Argument	"""State change: idle claim shutting down due to CLAIM_WORKLIFE\\n"""		531467	1					
ANR	531921	PrimaryExpression	"""State change: idle claim shutting down due to CLAIM_WORKLIFE\\n"""		531467	0					
ANR	531922	ExpressionStatement	change ( preempting_state )	342:3:10666:10692	531467	1	True				
ANR	531923	CallExpression	change ( preempting_state )		531467	0					
ANR	531924	Callee	change		531467	0					
ANR	531925	Identifier	change		531467	0					
ANR	531926	ArgumentList	preempting_state		531467	1					
ANR	531927	Argument	preempting_state		531467	0					
ANR	531928	Identifier	preempting_state		531467	0					
ANR	531929	ReturnStatement	return TRUE ;	343:3:10697:10708	531467	2	True				
ANR	531930	Identifier	TRUE		531467	0					
ANR	531931	IfStatement	if ( ( r_act == idle_act ) && rip -> isDraining ( ) )		531467	12					
ANR	531932	Condition	( r_act == idle_act ) && rip -> isDraining ( )	345:6:10740:10779	531467	0	True				
ANR	531933	AndExpression	( r_act == idle_act ) && rip -> isDraining ( )		531467	0		&&			
ANR	531934	EqualityExpression	r_act == idle_act		531467	0		==			
ANR	531935	Identifier	r_act		531467	0					
ANR	531936	Identifier	idle_act		531467	1					
ANR	531937	CallExpression	rip -> isDraining ( )		531467	1					
ANR	531938	Callee	rip -> isDraining		531467	0					
ANR	531939	PtrMemberAccess	rip -> isDraining		531467	0					
ANR	531940	Identifier	rip		531467	0					
ANR	531941	Identifier	isDraining		531467	1					
ANR	531942	ArgumentList			531467	1					
ANR	531943	CompoundStatement		137:49:4973:4973	531467	1					
ANR	531944	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: idle claim shutting down due to draining of this slot\\n"" )"	346:3:10788:10880	531467	0	True				
ANR	531945	CallExpression	"dprintf ( D_ALWAYS , ""State change: idle claim shutting down due to draining of this slot\\n"" )"		531467	0					
ANR	531946	Callee	dprintf		531467	0					
ANR	531947	Identifier	dprintf		531467	0					
ANR	531948	ArgumentList	D_ALWAYS		531467	1					
ANR	531949	Argument	D_ALWAYS		531467	0					
ANR	531950	Identifier	D_ALWAYS		531467	0					
ANR	531951	Argument	"""State change: idle claim shutting down due to draining of this slot\\n"""		531467	1					
ANR	531952	PrimaryExpression	"""State change: idle claim shutting down due to draining of this slot\\n"""		531467	0					
ANR	531953	ExpressionStatement	change ( preempting_state )	347:3:10885:10911	531467	1	True				
ANR	531954	CallExpression	change ( preempting_state )		531467	0					
ANR	531955	Callee	change		531467	0					
ANR	531956	Identifier	change		531467	0					
ANR	531957	ArgumentList	preempting_state		531467	1					
ANR	531958	Argument	preempting_state		531467	0					
ANR	531959	Identifier	preempting_state		531467	0					
ANR	531960	ReturnStatement	return TRUE ;	348:3:10916:10927	531467	2	True				
ANR	531961	Identifier	TRUE		531467	0					
ANR	531962	IfStatement	if ( ( r_act == busy_act || r_act == retiring_act ) && ( rip -> wants_pckpt ( ) ) )		531467	13					
ANR	531963	Condition	( r_act == busy_act || r_act == retiring_act ) && ( rip -> wants_pckpt ( ) )	350:6:10939:11006	531467	0	True				
ANR	531964	AndExpression	( r_act == busy_act || r_act == retiring_act ) && ( rip -> wants_pckpt ( ) )		531467	0		&&			
ANR	531965	OrExpression	r_act == busy_act || r_act == retiring_act		531467	0		||			
ANR	531966	EqualityExpression	r_act == busy_act		531467	0		==			
ANR	531967	Identifier	r_act		531467	0					
ANR	531968	Identifier	busy_act		531467	1					
ANR	531969	EqualityExpression	r_act == retiring_act		531467	1		==			
ANR	531970	Identifier	r_act		531467	0					
ANR	531971	Identifier	retiring_act		531467	1					
ANR	531972	CallExpression	rip -> wants_pckpt ( )		531467	1					
ANR	531973	Callee	rip -> wants_pckpt		531467	0					
ANR	531974	PtrMemberAccess	rip -> wants_pckpt		531467	0					
ANR	531975	Identifier	rip		531467	0					
ANR	531976	Identifier	wants_pckpt		531467	1					
ANR	531977	ArgumentList			531467	1					
ANR	531978	CompoundStatement		142:77:5200:5200	531467	1					
ANR	531979	ExpressionStatement	rip -> periodic_checkpoint ( )	351:3:11015:11041	531467	0	True				
ANR	531980	CallExpression	rip -> periodic_checkpoint ( )		531467	0					
ANR	531981	Callee	rip -> periodic_checkpoint		531467	0					
ANR	531982	PtrMemberAccess	rip -> periodic_checkpoint		531467	0					
ANR	531983	Identifier	rip		531467	0					
ANR	531984	Identifier	periodic_checkpoint		531467	1					
ANR	531985	ArgumentList			531467	1					
ANR	531986	IfStatement	if ( r_act != suspended_act )		531467	14					
ANR	531987	Condition	r_act != suspended_act	358:6:11220:11241	531467	0	True				
ANR	531988	EqualityExpression	r_act != suspended_act		531467	0		!=			
ANR	531989	Identifier	r_act		531467	0					
ANR	531990	Identifier	suspended_act		531467	1					
ANR	531991	CompoundStatement		150:30:5434:5434	531467	1					
ANR	531992	ExpressionStatement	rip -> tryFetchWork ( )	359:3:11249:11268	531467	0	True				
ANR	531993	CallExpression	rip -> tryFetchWork ( )		531467	0					
ANR	531994	Callee	rip -> tryFetchWork		531467	0					
ANR	531995	PtrMemberAccess	rip -> tryFetchWork		531467	0					
ANR	531996	Identifier	rip		531467	0					
ANR	531997	Identifier	tryFetchWork		531467	1					
ANR	531998	ArgumentList			531467	1					
ANR	531999	IfStatement	if ( rip -> r_reqexp -> restore ( ) )		531467	15					
ANR	532000	Condition	rip -> r_reqexp -> restore ( )	363:6:11309:11332	531467	0	True				
ANR	532001	CallExpression	rip -> r_reqexp -> restore ( )		531467	0					
ANR	532002	Callee	rip -> r_reqexp -> restore		531467	0					
ANR	532003	PtrMemberAccess	rip -> r_reqexp -> restore		531467	0					
ANR	532004	PtrMemberAccess	rip -> r_reqexp		531467	0					
ANR	532005	Identifier	rip		531467	0					
ANR	532006	Identifier	r_reqexp		531467	1					
ANR	532007	Identifier	restore		531467	1					
ANR	532008	ArgumentList			531467	1					
ANR	532009	CompoundStatement		155:33:5526:5526	531467	1					
ANR	532010	ExpressionStatement	rip -> update ( )	365:3:11390:11403	531467	0	True				
ANR	532011	CallExpression	rip -> update ( )		531467	0					
ANR	532012	Callee	rip -> update		531467	0					
ANR	532013	PtrMemberAccess	rip -> update		531467	0					
ANR	532014	Identifier	rip		531467	0					
ANR	532015	Identifier	update		531467	1					
ANR	532016	ArgumentList			531467	1					
ANR	532017	BreakStatement	break ;	367:2:11411:11416	531467	16	True				
ANR	532018	Label	case preempting_state :	369:1:11445:11466	531467	17	True				
ANR	532019	Identifier	preempting_state		531467	0					
ANR	532020	IfStatement	if ( r_act == vacating_act )		531467	18					
ANR	532021	Condition	r_act == vacating_act	370:6:11474:11494	531467	0	True				
ANR	532022	EqualityExpression	r_act == vacating_act		531467	0		==			
ANR	532023	Identifier	r_act		531467	0					
ANR	532024	Identifier	vacating_act		531467	1					
ANR	532025	CompoundStatement		162:30:5688:5688	531467	1					
ANR	532026	IfStatement	if ( rip -> eval_kill ( ) )		531467	0					
ANR	532027	Condition	rip -> eval_kill ( )	371:7:11507:11522	531467	0	True				
ANR	532028	CallExpression	rip -> eval_kill ( )		531467	0					
ANR	532029	Callee	rip -> eval_kill		531467	0					
ANR	532030	PtrMemberAccess	rip -> eval_kill		531467	0					
ANR	532031	Identifier	rip		531467	0					
ANR	532032	Identifier	eval_kill		531467	1					
ANR	532033	ArgumentList			531467	1					
ANR	532034	CompoundStatement		163:26:5716:5716	531467	1					
ANR	532035	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: KILL is TRUE\\n"" )"	372:4:11532:11583	531467	0	True				
ANR	532036	CallExpression	"dprintf ( D_ALWAYS , ""State change: KILL is TRUE\\n"" )"		531467	0					
ANR	532037	Callee	dprintf		531467	0					
ANR	532038	Identifier	dprintf		531467	0					
ANR	532039	ArgumentList	D_ALWAYS		531467	1					
ANR	532040	Argument	D_ALWAYS		531467	0					
ANR	532041	Identifier	D_ALWAYS		531467	0					
ANR	532042	Argument	"""State change: KILL is TRUE\\n"""		531467	1					
ANR	532043	PrimaryExpression	"""State change: KILL is TRUE\\n"""		531467	0					
ANR	532044	ExpressionStatement	change ( killing_act )	374:4:11618:11639	531467	1	True				
ANR	532045	CallExpression	change ( killing_act )		531467	0					
ANR	532046	Callee	change		531467	0					
ANR	532047	Identifier	change		531467	0					
ANR	532048	ArgumentList	killing_act		531467	1					
ANR	532049	Argument	killing_act		531467	0					
ANR	532050	Identifier	killing_act		531467	0					
ANR	532051	ReturnStatement	return TRUE ;	375:4:11645:11656	531467	2	True				
ANR	532052	Identifier	TRUE		531467	0					
ANR	532053	BreakStatement	break ;	378:2:11689:11694	531467	19	True				
ANR	532054	Label	case unclaimed_state :	380:1:11724:11744	531467	20	True				
ANR	532055	Identifier	unclaimed_state		531467	0					
ANR	532056	IfStatement	if ( Resource :: DYNAMIC_SLOT == rip -> get_feature ( ) )		531467	21					
ANR	532057	Condition	Resource :: DYNAMIC_SLOT == rip -> get_feature ( )	381:6:11752:11795	531467	0	True				
ANR	532058	EqualityExpression	Resource :: DYNAMIC_SLOT == rip -> get_feature ( )		531467	0		==			
ANR	532059	Identifier	Resource :: DYNAMIC_SLOT		531467	0					
ANR	532060	CallExpression	rip -> get_feature ( )		531467	1					
ANR	532061	Callee	rip -> get_feature		531467	0					
ANR	532062	PtrMemberAccess	rip -> get_feature		531467	0					
ANR	532063	Identifier	rip		531467	0					
ANR	532064	Identifier	get_feature		531467	1					
ANR	532065	ArgumentList			531467	1					
ANR	532066	CompoundStatement		173:53:5989:5989	531467	1					
ANR	532067	IfStatement	if ( rip -> isCurrentlyFetching ( ) )		531467	0					
ANR	532068	Condition	rip -> isCurrentlyFetching ( )	386:7:11977:12002	531467	0	True				
ANR	532069	CallExpression	rip -> isCurrentlyFetching ( )		531467	0					
ANR	532070	Callee	rip -> isCurrentlyFetching		531467	0					
ANR	532071	PtrMemberAccess	rip -> isCurrentlyFetching		531467	0					
ANR	532072	Identifier	rip		531467	0					
ANR	532073	Identifier	isCurrentlyFetching		531467	1					
ANR	532074	ArgumentList			531467	1					
ANR	532075	CompoundStatement		178:36:6196:6196	531467	1					
ANR	532076	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: Unclaimed -> Deleted delayed for outstanding work fetch\\n"" )"	387:4:12012:12104	531467	0	True				
ANR	532077	CallExpression	"dprintf ( D_ALWAYS , ""State change: Unclaimed -> Deleted delayed for outstanding work fetch\\n"" )"		531467	0					
ANR	532078	Callee	dprintf		531467	0					
ANR	532079	Identifier	dprintf		531467	0					
ANR	532080	ArgumentList	D_ALWAYS		531467	1					
ANR	532081	Argument	D_ALWAYS		531467	0					
ANR	532082	Identifier	D_ALWAYS		531467	0					
ANR	532083	Argument	"""State change: Unclaimed -> Deleted delayed for outstanding work fetch\\n"""		531467	1					
ANR	532084	PrimaryExpression	"""State change: Unclaimed -> Deleted delayed for outstanding work fetch\\n"""		531467	0					
ANR	532085	BreakStatement	break ;	388:4:12110:12115	531467	1	True				
ANR	532086	ExpressionStatement	change ( delete_state )	391:3:12132:12154	531467	1	True				
ANR	532087	CallExpression	change ( delete_state )		531467	0					
ANR	532088	Callee	change		531467	0					
ANR	532089	Identifier	change		531467	0					
ANR	532090	ArgumentList	delete_state		531467	1					
ANR	532091	Argument	delete_state		531467	0					
ANR	532092	Identifier	delete_state		531467	0					
ANR	532093	ReturnStatement	return TRUE ;	392:3:12159:12170	531467	2	True				
ANR	532094	Identifier	TRUE		531467	0					
ANR	532095	IfStatement	if ( rip -> isDraining ( ) )		531467	22					
ANR	532096	Condition	rip -> isDraining ( )	395:6:12203:12219	531467	0	True				
ANR	532097	CallExpression	rip -> isDraining ( )		531467	0					
ANR	532098	Callee	rip -> isDraining		531467	0					
ANR	532099	PtrMemberAccess	rip -> isDraining		531467	0					
ANR	532100	Identifier	rip		531467	0					
ANR	532101	Identifier	isDraining		531467	1					
ANR	532102	ArgumentList			531467	1					
ANR	532103	CompoundStatement		187:26:6413:6413	531467	1					
ANR	532104	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: entering Drained state\\n"" )"	396:3:12228:12289	531467	0	True				
ANR	532105	CallExpression	"dprintf ( D_ALWAYS , ""State change: entering Drained state\\n"" )"		531467	0					
ANR	532106	Callee	dprintf		531467	0					
ANR	532107	Identifier	dprintf		531467	0					
ANR	532108	ArgumentList	D_ALWAYS		531467	1					
ANR	532109	Argument	D_ALWAYS		531467	0					
ANR	532110	Identifier	D_ALWAYS		531467	0					
ANR	532111	Argument	"""State change: entering Drained state\\n"""		531467	1					
ANR	532112	PrimaryExpression	"""State change: entering Drained state\\n"""		531467	0					
ANR	532113	ExpressionStatement	"change ( drained_state , retiring_act )"	397:3:12294:12331	531467	1	True				
ANR	532114	CallExpression	"change ( drained_state , retiring_act )"		531467	0					
ANR	532115	Callee	change		531467	0					
ANR	532116	Identifier	change		531467	0					
ANR	532117	ArgumentList	drained_state		531467	1					
ANR	532118	Argument	drained_state		531467	0					
ANR	532119	Identifier	drained_state		531467	0					
ANR	532120	Argument	retiring_act		531467	1					
ANR	532121	Identifier	retiring_act		531467	0					
ANR	532122	ReturnStatement	return TRUE ;	398:3:12336:12347	531467	2	True				
ANR	532123	Identifier	TRUE		531467	0					
ANR	532124	IfStatement	if ( rip -> eval_is_owner ( ) )		531467	23					
ANR	532125	Condition	rip -> eval_is_owner ( )	402:6:12404:12423	531467	0	True				
ANR	532126	CallExpression	rip -> eval_is_owner ( )		531467	0					
ANR	532127	Callee	rip -> eval_is_owner		531467	0					
ANR	532128	PtrMemberAccess	rip -> eval_is_owner		531467	0					
ANR	532129	Identifier	rip		531467	0					
ANR	532130	Identifier	eval_is_owner		531467	1					
ANR	532131	ArgumentList			531467	1					
ANR	532132	CompoundStatement		194:29:6617:6617	531467	1					
ANR	532133	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: IS_OWNER is TRUE\\n"" )"	403:3:12432:12487	531467	0	True				
ANR	532134	CallExpression	"dprintf ( D_ALWAYS , ""State change: IS_OWNER is TRUE\\n"" )"		531467	0					
ANR	532135	Callee	dprintf		531467	0					
ANR	532136	Identifier	dprintf		531467	0					
ANR	532137	ArgumentList	D_ALWAYS		531467	1					
ANR	532138	Argument	D_ALWAYS		531467	0					
ANR	532139	Identifier	D_ALWAYS		531467	0					
ANR	532140	Argument	"""State change: IS_OWNER is TRUE\\n"""		531467	1					
ANR	532141	PrimaryExpression	"""State change: IS_OWNER is TRUE\\n"""		531467	0					
ANR	532142	ExpressionStatement	change ( owner_state )	404:3:12492:12513	531467	1	True				
ANR	532143	CallExpression	change ( owner_state )		531467	0					
ANR	532144	Callee	change		531467	0					
ANR	532145	Identifier	change		531467	0					
ANR	532146	ArgumentList	owner_state		531467	1					
ANR	532147	Argument	owner_state		531467	0					
ANR	532148	Identifier	owner_state		531467	0					
ANR	532149	ReturnStatement	return TRUE ;	405:3:12518:12529	531467	2	True				
ANR	532150	Identifier	TRUE		531467	0					
ANR	532151	IfStatement	if ( ! r_act_was_benchmark )		531467	24					
ANR	532152	Condition	! r_act_was_benchmark	409:7:12610:12630	531467	0	True				
ANR	532153	UnaryOperationExpression	! r_act_was_benchmark		531467	0					
ANR	532154	UnaryOperator	!		531467	0					
ANR	532155	Identifier	r_act_was_benchmark		531467	1					
ANR	532156	CompoundStatement		202:3:6829:6844	531467	1					
ANR	532157	IdentifierDeclStatement	int num_started ;	410:3:12639:12654	531467	0	True				
ANR	532158	IdentifierDecl	num_started		531467	0					
ANR	532159	IdentifierDeclType	int		531467	0					
ANR	532160	Identifier	num_started		531467	1					
ANR	532161	ExpressionStatement	"resmgr -> m_attr -> start_benchmarks ( rip , num_started )"	411:3:12659:12711	531467	1	True				
ANR	532162	CallExpression	"resmgr -> m_attr -> start_benchmarks ( rip , num_started )"		531467	0					
ANR	532163	Callee	resmgr -> m_attr -> start_benchmarks		531467	0					
ANR	532164	PtrMemberAccess	resmgr -> m_attr -> start_benchmarks		531467	0					
ANR	532165	PtrMemberAccess	resmgr -> m_attr		531467	0					
ANR	532166	Identifier	resmgr		531467	0					
ANR	532167	Identifier	m_attr		531467	1					
ANR	532168	Identifier	start_benchmarks		531467	1					
ANR	532169	ArgumentList	rip		531467	1					
ANR	532170	Argument	rip		531467	0					
ANR	532171	Identifier	rip		531467	0					
ANR	532172	Argument	num_started		531467	1					
ANR	532173	Identifier	num_started		531467	0					
ANR	532174	ExpressionStatement	rip -> tryFetchWork ( )	418:2:12886:12905	531467	25	True				
ANR	532175	CallExpression	rip -> tryFetchWork ( )		531467	0					
ANR	532176	Callee	rip -> tryFetchWork		531467	0					
ANR	532177	PtrMemberAccess	rip -> tryFetchWork		531467	0					
ANR	532178	Identifier	rip		531467	0					
ANR	532179	Identifier	tryFetchWork		531467	1					
ANR	532180	ArgumentList			531467	1					
ANR	532181	IfStatement	if ( resmgr -> m_backfill_mgr && rip -> eval_start_backfill ( ) > 0 )		531467	26					
ANR	532182	Condition	resmgr -> m_backfill_mgr && rip -> eval_start_backfill ( ) > 0	425:6:13139:13194	531467	0	True				
ANR	532183	AndExpression	resmgr -> m_backfill_mgr && rip -> eval_start_backfill ( ) > 0		531467	0		&&			
ANR	532184	PtrMemberAccess	resmgr -> m_backfill_mgr		531467	0					
ANR	532185	Identifier	resmgr		531467	0					
ANR	532186	Identifier	m_backfill_mgr		531467	1					
ANR	532187	RelationalExpression	rip -> eval_start_backfill ( ) > 0		531467	1		>			
ANR	532188	CallExpression	rip -> eval_start_backfill ( )		531467	0					
ANR	532189	Callee	rip -> eval_start_backfill		531467	0					
ANR	532190	PtrMemberAccess	rip -> eval_start_backfill		531467	0					
ANR	532191	Identifier	rip		531467	0					
ANR	532192	Identifier	eval_start_backfill		531467	1					
ANR	532193	ArgumentList			531467	1					
ANR	532194	PrimaryExpression	0		531467	1					
ANR	532195	CompoundStatement		217:65:7388:7388	531467	1					
ANR	532196	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: START_BACKFILL is TRUE\\n"" )"	426:3:13203:13264	531467	0	True				
ANR	532197	CallExpression	"dprintf ( D_ALWAYS , ""State change: START_BACKFILL is TRUE\\n"" )"		531467	0					
ANR	532198	Callee	dprintf		531467	0					
ANR	532199	Identifier	dprintf		531467	0					
ANR	532200	ArgumentList	D_ALWAYS		531467	1					
ANR	532201	Argument	D_ALWAYS		531467	0					
ANR	532202	Identifier	D_ALWAYS		531467	0					
ANR	532203	Argument	"""State change: START_BACKFILL is TRUE\\n"""		531467	1					
ANR	532204	PrimaryExpression	"""State change: START_BACKFILL is TRUE\\n"""		531467	0					
ANR	532205	ExpressionStatement	"change ( backfill_state , idle_act )"	427:3:13269:13303	531467	1	True				
ANR	532206	CallExpression	"change ( backfill_state , idle_act )"		531467	0					
ANR	532207	Callee	change		531467	0					
ANR	532208	Identifier	change		531467	0					
ANR	532209	ArgumentList	backfill_state		531467	1					
ANR	532210	Argument	backfill_state		531467	0					
ANR	532211	Identifier	backfill_state		531467	0					
ANR	532212	Argument	idle_act		531467	1					
ANR	532213	Identifier	idle_act		531467	0					
ANR	532214	ReturnStatement	return TRUE ;	428:3:13308:13319	531467	2	True				
ANR	532215	Identifier	TRUE		531467	0					
ANR	532216	IfStatement	if ( rip -> r_reqexp -> restore ( ) )		531467	27					
ANR	532217	Condition	rip -> r_reqexp -> restore ( )	432:6:13379:13402	531467	0	True				
ANR	532218	CallExpression	rip -> r_reqexp -> restore ( )		531467	0					
ANR	532219	Callee	rip -> r_reqexp -> restore		531467	0					
ANR	532220	PtrMemberAccess	rip -> r_reqexp -> restore		531467	0					
ANR	532221	PtrMemberAccess	rip -> r_reqexp		531467	0					
ANR	532222	Identifier	rip		531467	0					
ANR	532223	Identifier	r_reqexp		531467	1					
ANR	532224	Identifier	restore		531467	1					
ANR	532225	ArgumentList			531467	1					
ANR	532226	CompoundStatement		224:33:7596:7596	531467	1					
ANR	532227	ExpressionStatement	rip -> update ( )	434:3:13460:13473	531467	0	True				
ANR	532228	CallExpression	rip -> update ( )		531467	0					
ANR	532229	Callee	rip -> update		531467	0					
ANR	532230	PtrMemberAccess	rip -> update		531467	0					
ANR	532231	Identifier	rip		531467	0					
ANR	532232	Identifier	update		531467	1					
ANR	532233	ArgumentList			531467	1					
ANR	532234	BreakStatement	break ;	437:2:13482:13487	531467	28	True				
ANR	532235	Label	case owner_state :	439:1:13492:13508	531467	29	True				
ANR	532236	Identifier	owner_state		531467	0					
ANR	532237	IfStatement	if ( Resource :: DYNAMIC_SLOT == rip -> get_feature ( ) )		531467	30					
ANR	532238	Condition	Resource :: DYNAMIC_SLOT == rip -> get_feature ( )	445:6:13765:13808	531467	0	True				
ANR	532239	EqualityExpression	Resource :: DYNAMIC_SLOT == rip -> get_feature ( )		531467	0		==			
ANR	532240	Identifier	Resource :: DYNAMIC_SLOT		531467	0					
ANR	532241	CallExpression	rip -> get_feature ( )		531467	1					
ANR	532242	Callee	rip -> get_feature		531467	0					
ANR	532243	PtrMemberAccess	rip -> get_feature		531467	0					
ANR	532244	Identifier	rip		531467	0					
ANR	532245	Identifier	get_feature		531467	1					
ANR	532246	ArgumentList			531467	1					
ANR	532247	CompoundStatement		237:53:8002:8002	531467	1					
ANR	532248	IfStatement	if ( rip -> isCurrentlyFetching ( ) )		531467	0					
ANR	532249	Condition	rip -> isCurrentlyFetching ( )	450:7:13990:14015	531467	0	True				
ANR	532250	CallExpression	rip -> isCurrentlyFetching ( )		531467	0					
ANR	532251	Callee	rip -> isCurrentlyFetching		531467	0					
ANR	532252	PtrMemberAccess	rip -> isCurrentlyFetching		531467	0					
ANR	532253	Identifier	rip		531467	0					
ANR	532254	Identifier	isCurrentlyFetching		531467	1					
ANR	532255	ArgumentList			531467	1					
ANR	532256	CompoundStatement		242:36:8209:8209	531467	1					
ANR	532257	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: Owner -> Deleted delayed for outstanding work fetch\\n"" )"	451:4:14025:14113	531467	0	True				
ANR	532258	CallExpression	"dprintf ( D_ALWAYS , ""State change: Owner -> Deleted delayed for outstanding work fetch\\n"" )"		531467	0					
ANR	532259	Callee	dprintf		531467	0					
ANR	532260	Identifier	dprintf		531467	0					
ANR	532261	ArgumentList	D_ALWAYS		531467	1					
ANR	532262	Argument	D_ALWAYS		531467	0					
ANR	532263	Identifier	D_ALWAYS		531467	0					
ANR	532264	Argument	"""State change: Owner -> Deleted delayed for outstanding work fetch\\n"""		531467	1					
ANR	532265	PrimaryExpression	"""State change: Owner -> Deleted delayed for outstanding work fetch\\n"""		531467	0					
ANR	532266	BreakStatement	break ;	452:4:14119:14124	531467	1	True				
ANR	532267	ExpressionStatement	change ( delete_state )	455:3:14141:14163	531467	1	True				
ANR	532268	CallExpression	change ( delete_state )		531467	0					
ANR	532269	Callee	change		531467	0					
ANR	532270	Identifier	change		531467	0					
ANR	532271	ArgumentList	delete_state		531467	1					
ANR	532272	Argument	delete_state		531467	0					
ANR	532273	Identifier	delete_state		531467	0					
ANR	532274	ReturnStatement	return TRUE ;	456:3:14168:14179	531467	2	True				
ANR	532275	Identifier	TRUE		531467	0					
ANR	532276	IfStatement	if ( rip -> isDraining ( ) )		531467	31					
ANR	532277	Condition	rip -> isDraining ( )	459:6:14212:14228	531467	0	True				
ANR	532278	CallExpression	rip -> isDraining ( )		531467	0					
ANR	532279	Callee	rip -> isDraining		531467	0					
ANR	532280	PtrMemberAccess	rip -> isDraining		531467	0					
ANR	532281	Identifier	rip		531467	0					
ANR	532282	Identifier	isDraining		531467	1					
ANR	532283	ArgumentList			531467	1					
ANR	532284	CompoundStatement		251:26:8422:8422	531467	1					
ANR	532285	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: entering Drained state\\n"" )"	460:3:14237:14298	531467	0	True				
ANR	532286	CallExpression	"dprintf ( D_ALWAYS , ""State change: entering Drained state\\n"" )"		531467	0					
ANR	532287	Callee	dprintf		531467	0					
ANR	532288	Identifier	dprintf		531467	0					
ANR	532289	ArgumentList	D_ALWAYS		531467	1					
ANR	532290	Argument	D_ALWAYS		531467	0					
ANR	532291	Identifier	D_ALWAYS		531467	0					
ANR	532292	Argument	"""State change: entering Drained state\\n"""		531467	1					
ANR	532293	PrimaryExpression	"""State change: entering Drained state\\n"""		531467	0					
ANR	532294	ExpressionStatement	"change ( drained_state , retiring_act )"	461:3:14303:14340	531467	1	True				
ANR	532295	CallExpression	"change ( drained_state , retiring_act )"		531467	0					
ANR	532296	Callee	change		531467	0					
ANR	532297	Identifier	change		531467	0					
ANR	532298	ArgumentList	drained_state		531467	1					
ANR	532299	Argument	drained_state		531467	0					
ANR	532300	Identifier	drained_state		531467	0					
ANR	532301	Argument	retiring_act		531467	1					
ANR	532302	Identifier	retiring_act		531467	0					
ANR	532303	ReturnStatement	return TRUE ;	462:3:14345:14356	531467	2	True				
ANR	532304	Identifier	TRUE		531467	0					
ANR	532305	IfStatement	if ( ! rip -> eval_is_owner ( ) )		531467	32					
ANR	532306	Condition	! rip -> eval_is_owner ( )	465:6:14369:14390	531467	0	True				
ANR	532307	UnaryOperationExpression	! rip -> eval_is_owner ( )		531467	0					
ANR	532308	UnaryOperator	!		531467	0					
ANR	532309	CallExpression	rip -> eval_is_owner ( )		531467	1					
ANR	532310	Callee	rip -> eval_is_owner		531467	0					
ANR	532311	PtrMemberAccess	rip -> eval_is_owner		531467	0					
ANR	532312	Identifier	rip		531467	0					
ANR	532313	Identifier	eval_is_owner		531467	1					
ANR	532314	ArgumentList			531467	1					
ANR	532315	CompoundStatement		257:31:8584:8584	531467	1					
ANR	532316	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: IS_OWNER is false\\n"" )"	466:3:14399:14455	531467	0	True				
ANR	532317	CallExpression	"dprintf ( D_ALWAYS , ""State change: IS_OWNER is false\\n"" )"		531467	0					
ANR	532318	Callee	dprintf		531467	0					
ANR	532319	Identifier	dprintf		531467	0					
ANR	532320	ArgumentList	D_ALWAYS		531467	1					
ANR	532321	Argument	D_ALWAYS		531467	0					
ANR	532322	Identifier	D_ALWAYS		531467	0					
ANR	532323	Argument	"""State change: IS_OWNER is false\\n"""		531467	1					
ANR	532324	PrimaryExpression	"""State change: IS_OWNER is false\\n"""		531467	0					
ANR	532325	ExpressionStatement	change ( unclaimed_state )	467:3:14460:14485	531467	1	True				
ANR	532326	CallExpression	change ( unclaimed_state )		531467	0					
ANR	532327	Callee	change		531467	0					
ANR	532328	Identifier	change		531467	0					
ANR	532329	ArgumentList	unclaimed_state		531467	1					
ANR	532330	Argument	unclaimed_state		531467	0					
ANR	532331	Identifier	unclaimed_state		531467	0					
ANR	532332	ReturnStatement	return TRUE ;	468:3:14490:14501	531467	2	True				
ANR	532333	Identifier	TRUE		531467	0					
ANR	532334	ExpressionStatement	rip -> tryFetchWork ( )	476:2:14823:14842	531467	33	True				
ANR	532335	CallExpression	rip -> tryFetchWork ( )		531467	0					
ANR	532336	Callee	rip -> tryFetchWork		531467	0					
ANR	532337	PtrMemberAccess	rip -> tryFetchWork		531467	0					
ANR	532338	Identifier	rip		531467	0					
ANR	532339	Identifier	tryFetchWork		531467	1					
ANR	532340	ArgumentList			531467	1					
ANR	532341	BreakStatement	break ;	479:2:14875:14880	531467	34	True				
ANR	532342	Label	case matched_state :	481:1:14887:14905	531467	35	True				
ANR	532343	Identifier	matched_state		531467	0					
ANR	532344	BreakStatement	break ;	491:2:15413:15418	531467	36	True				
ANR	532345	Label	case backfill_state :	494:1:15440:15459	531467	37	True				
ANR	532346	Identifier	backfill_state		531467	0					
ANR	532347	IfStatement	if ( ! resmgr -> m_backfill_mgr )		531467	38					
ANR	532348	Condition	! resmgr -> m_backfill_mgr	495:6:15467:15490	531467	0	True				
ANR	532349	UnaryOperationExpression	! resmgr -> m_backfill_mgr		531467	0					
ANR	532350	UnaryOperator	!		531467	0					
ANR	532351	PtrMemberAccess	resmgr -> m_backfill_mgr		531467	1					
ANR	532352	Identifier	resmgr		531467	0					
ANR	532353	Identifier	m_backfill_mgr		531467	1					
ANR	532354	CompoundStatement		287:33:9684:9684	531467	1					
ANR	532355	ExpressionStatement	"EXCEPT ( ""in Backfill state but m_backfill_mgr is NULL!"" )"	496:3:15500:15557	531467	0	True				
ANR	532356	CallExpression	"EXCEPT ( ""in Backfill state but m_backfill_mgr is NULL!"" )"		531467	0					
ANR	532357	Callee	EXCEPT		531467	0					
ANR	532358	Identifier	EXCEPT		531467	0					
ANR	532359	ArgumentList	"""in Backfill state but m_backfill_mgr is NULL!"""		531467	1					
ANR	532360	Argument	"""in Backfill state but m_backfill_mgr is NULL!"""		531467	0					
ANR	532361	PrimaryExpression	"""in Backfill state but m_backfill_mgr is NULL!"""		531467	0					
ANR	532362	IfStatement	if ( r_act == killing_act )		531467	39					
ANR	532363	Condition	r_act == killing_act	498:6:15569:15588	531467	0	True				
ANR	532364	EqualityExpression	r_act == killing_act		531467	0		==			
ANR	532365	Identifier	r_act		531467	0					
ANR	532366	Identifier	killing_act		531467	1					
ANR	532367	CompoundStatement		290:29:9782:9782	531467	1					
ANR	532368	ReturnStatement	return 0 ;	503:3:15791:15799	531467	0	True				
ANR	532369	PrimaryExpression	0		531467	0					
ANR	532370	ExpressionStatement	kill_rval = rip -> eval_evict_backfill ( )	506:2:15855:15893	531467	40	True				
ANR	532371	AssignmentExpression	kill_rval = rip -> eval_evict_backfill ( )		531467	0		=			
ANR	532372	Identifier	kill_rval		531467	0					
ANR	532373	CallExpression	rip -> eval_evict_backfill ( )		531467	1					
ANR	532374	Callee	rip -> eval_evict_backfill		531467	0					
ANR	532375	PtrMemberAccess	rip -> eval_evict_backfill		531467	0					
ANR	532376	Identifier	rip		531467	0					
ANR	532377	Identifier	eval_evict_backfill		531467	1					
ANR	532378	ArgumentList			531467	1					
ANR	532379	IfStatement	if ( kill_rval > 0 )		531467	41					
ANR	532380	Condition	kill_rval > 0	507:6:15902:15914	531467	0	True				
ANR	532381	RelationalExpression	kill_rval > 0		531467	0		>			
ANR	532382	Identifier	kill_rval		531467	0					
ANR	532383	PrimaryExpression	0		531467	1					
ANR	532384	CompoundStatement		299:22:10108:10108	531467	1					
ANR	532385	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: EVICT_BACKFILL is TRUE\\n"" )"	508:3:15923:15984	531467	0	True				
ANR	532386	CallExpression	"dprintf ( D_ALWAYS , ""State change: EVICT_BACKFILL is TRUE\\n"" )"		531467	0					
ANR	532387	Callee	dprintf		531467	0					
ANR	532388	Identifier	dprintf		531467	0					
ANR	532389	ArgumentList	D_ALWAYS		531467	1					
ANR	532390	Argument	D_ALWAYS		531467	0					
ANR	532391	Identifier	D_ALWAYS		531467	0					
ANR	532392	Argument	"""State change: EVICT_BACKFILL is TRUE\\n"""		531467	1					
ANR	532393	PrimaryExpression	"""State change: EVICT_BACKFILL is TRUE\\n"""		531467	0					
ANR	532394	IfStatement	if ( r_act == idle_act )		531467	1					
ANR	532395	Condition	r_act == idle_act	509:7:15993:16009	531467	0	True				
ANR	532396	EqualityExpression	r_act == idle_act		531467	0		==			
ANR	532397	Identifier	r_act		531467	0					
ANR	532398	Identifier	idle_act		531467	1					
ANR	532399	CompoundStatement		301:27:10203:10203	531467	1					
ANR	532400	ExpressionStatement	change ( owner_state )	512:4:16109:16130	531467	0	True				
ANR	532401	CallExpression	change ( owner_state )		531467	0					
ANR	532402	Callee	change		531467	0					
ANR	532403	Identifier	change		531467	0					
ANR	532404	ArgumentList	owner_state		531467	1					
ANR	532405	Argument	owner_state		531467	0					
ANR	532406	Identifier	owner_state		531467	0					
ANR	532407	ReturnStatement	return TRUE ;	513:4:16136:16147	531467	1	True				
ANR	532408	Identifier	TRUE		531467	0					
ANR	532409	ExpressionStatement	ASSERT ( r_act == busy_act )	518:3:16342:16369	531467	2	True				
ANR	532410	CallExpression	ASSERT ( r_act == busy_act )		531467	0					
ANR	532411	Callee	ASSERT		531467	0					
ANR	532412	Identifier	ASSERT		531467	0					
ANR	532413	ArgumentList	r_act == busy_act		531467	1					
ANR	532414	Argument	r_act == busy_act		531467	0					
ANR	532415	EqualityExpression	r_act == busy_act		531467	0		==			
ANR	532416	Identifier	r_act		531467	0					
ANR	532417	Identifier	busy_act		531467	1					
ANR	532418	ExpressionStatement	"change ( backfill_state , killing_act )"	519:3:16374:16411	531467	3	True				
ANR	532419	CallExpression	"change ( backfill_state , killing_act )"		531467	0					
ANR	532420	Callee	change		531467	0					
ANR	532421	Identifier	change		531467	0					
ANR	532422	ArgumentList	backfill_state		531467	1					
ANR	532423	Argument	backfill_state		531467	0					
ANR	532424	Identifier	backfill_state		531467	0					
ANR	532425	Argument	killing_act		531467	1					
ANR	532426	Identifier	killing_act		531467	0					
ANR	532427	ExpressionStatement	set_destination ( owner_state )	520:3:16416:16446	531467	4	True				
ANR	532428	CallExpression	set_destination ( owner_state )		531467	0					
ANR	532429	Callee	set_destination		531467	0					
ANR	532430	Identifier	set_destination		531467	0					
ANR	532431	ArgumentList	owner_state		531467	1					
ANR	532432	Argument	owner_state		531467	0					
ANR	532433	Identifier	owner_state		531467	0					
ANR	532434	ReturnStatement	return TRUE ;	521:3:16451:16462	531467	5	True				
ANR	532435	Identifier	TRUE		531467	0					
ANR	532436	ElseStatement	else		531467	0					
ANR	532437	IfStatement	if ( kill_rval < 0 )		531467	0					
ANR	532438	Condition	kill_rval < 0	522:13:16477:16489	531467	0	True				
ANR	532439	RelationalExpression	kill_rval < 0		531467	0		<			
ANR	532440	Identifier	kill_rval		531467	0					
ANR	532441	PrimaryExpression	0		531467	1					
ANR	532442	CompoundStatement		314:29:10683:10683	531467	1					
ANR	532443	Statement	dprintf	523:3:16498:16504	531467	0	True				
ANR	532444	Statement	(	523:10:16505:16505	531467	1	True				
ANR	532445	Statement	D_ALWAYS	523:12:16507:16514	531467	2	True				
ANR	532446	Statement	","	523:20:16515:16515	531467	3	True				
ANR	532447	Statement	"""WARNING: EVICT_BACKFILL is UNDEFINED, """	523:22:16517:16556	531467	4	True				
ANR	532448	Statement	"""staying in Backfill state\\n"""	524:6:16564:16592	531467	5	True				
ANR	532449	Statement	)	524:36:16594:16594	531467	6	True				
ANR	532450	ExpressionStatement		524:37:16595:16595	531467	7	True				
ANR	532451	ExpressionStatement	rip -> tryFetchWork ( )	531:2:16770:16789	531467	42	True				
ANR	532452	CallExpression	rip -> tryFetchWork ( )		531467	0					
ANR	532453	Callee	rip -> tryFetchWork		531467	0					
ANR	532454	PtrMemberAccess	rip -> tryFetchWork		531467	0					
ANR	532455	Identifier	rip		531467	0					
ANR	532456	Identifier	tryFetchWork		531467	1					
ANR	532457	ArgumentList			531467	1					
ANR	532458	IfStatement	if ( r_act == idle_act )		531467	43					
ANR	532459	Condition	r_act == idle_act	534:6:16826:16842	531467	0	True				
ANR	532460	EqualityExpression	r_act == idle_act		531467	0		==			
ANR	532461	Identifier	r_act		531467	0					
ANR	532462	Identifier	idle_act		531467	1					
ANR	532463	CompoundStatement		326:26:11036:11036	531467	1					
ANR	532464	ExpressionStatement	rip -> start_backfill ( )	536:3:16913:16934	531467	0	True				
ANR	532465	CallExpression	rip -> start_backfill ( )		531467	0					
ANR	532466	Callee	rip -> start_backfill		531467	0					
ANR	532467	PtrMemberAccess	rip -> start_backfill		531467	0					
ANR	532468	Identifier	rip		531467	0					
ANR	532469	Identifier	start_backfill		531467	1					
ANR	532470	ArgumentList			531467	1					
ANR	532471	BreakStatement	break ;	539:2:16943:16948	531467	44	True				
ANR	532472	Label	case drained_state :	542:1:16979:16997	531467	45	True				
ANR	532473	Identifier	drained_state		531467	0					
ANR	532474	IfStatement	if ( ! rip -> isDraining ( ) )		531467	46					
ANR	532475	Condition	! rip -> isDraining ( )	543:6:17005:17022	531467	0	True				
ANR	532476	UnaryOperationExpression	! rip -> isDraining ( )		531467	0					
ANR	532477	UnaryOperator	!		531467	0					
ANR	532478	CallExpression	rip -> isDraining ( )		531467	1					
ANR	532479	Callee	rip -> isDraining		531467	0					
ANR	532480	PtrMemberAccess	rip -> isDraining		531467	0					
ANR	532481	Identifier	rip		531467	0					
ANR	532482	Identifier	isDraining		531467	1					
ANR	532483	ArgumentList			531467	1					
ANR	532484	CompoundStatement		335:27:11216:11216	531467	1					
ANR	532485	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: slot is no longer draining.\\n"" )"	544:3:17031:17094	531467	0	True				
ANR	532486	CallExpression	"dprintf ( D_ALWAYS , ""State change: slot is no longer draining.\\n"" )"		531467	0					
ANR	532487	Callee	dprintf		531467	0					
ANR	532488	Identifier	dprintf		531467	0					
ANR	532489	ArgumentList	D_ALWAYS		531467	1					
ANR	532490	Argument	D_ALWAYS		531467	0					
ANR	532491	Identifier	D_ALWAYS		531467	0					
ANR	532492	Argument	"""State change: slot is no longer draining.\\n"""		531467	1					
ANR	532493	PrimaryExpression	"""State change: slot is no longer draining.\\n"""		531467	0					
ANR	532494	ExpressionStatement	change ( owner_state )	545:3:17099:17120	531467	1	True				
ANR	532495	CallExpression	change ( owner_state )		531467	0					
ANR	532496	Callee	change		531467	0					
ANR	532497	Identifier	change		531467	0					
ANR	532498	ArgumentList	owner_state		531467	1					
ANR	532499	Argument	owner_state		531467	0					
ANR	532500	Identifier	owner_state		531467	0					
ANR	532501	ReturnStatement	return TRUE ;	546:3:17125:17136	531467	2	True				
ANR	532502	Identifier	TRUE		531467	0					
ANR	532503	IfStatement	if ( r_act == retiring_act )		531467	47					
ANR	532504	Condition	r_act == retiring_act	548:6:17148:17168	531467	0	True				
ANR	532505	EqualityExpression	r_act == retiring_act		531467	0		==			
ANR	532506	Identifier	r_act		531467	0					
ANR	532507	Identifier	retiring_act		531467	1					
ANR	532508	CompoundStatement		340:30:11362:11362	531467	1					
ANR	532509	IfStatement	if ( resmgr -> drainingIsComplete ( rip ) )		531467	0					
ANR	532510	Condition	resmgr -> drainingIsComplete ( rip )	549:7:17181:17213	531467	0	True				
ANR	532511	CallExpression	resmgr -> drainingIsComplete ( rip )		531467	0					
ANR	532512	Callee	resmgr -> drainingIsComplete		531467	0					
ANR	532513	PtrMemberAccess	resmgr -> drainingIsComplete		531467	0					
ANR	532514	Identifier	resmgr		531467	0					
ANR	532515	Identifier	drainingIsComplete		531467	1					
ANR	532516	ArgumentList	rip		531467	1					
ANR	532517	Argument	rip		531467	0					
ANR	532518	Identifier	rip		531467	0					
ANR	532519	CompoundStatement		341:43:11407:11407	531467	1					
ANR	532520	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: draining is complete.\\n"" )"	550:4:17223:17280	531467	0	True				
ANR	532521	CallExpression	"dprintf ( D_ALWAYS , ""State change: draining is complete.\\n"" )"		531467	0					
ANR	532522	Callee	dprintf		531467	0					
ANR	532523	Identifier	dprintf		531467	0					
ANR	532524	ArgumentList	D_ALWAYS		531467	1					
ANR	532525	Argument	D_ALWAYS		531467	0					
ANR	532526	Identifier	D_ALWAYS		531467	0					
ANR	532527	Argument	"""State change: draining is complete.\\n"""		531467	1					
ANR	532528	PrimaryExpression	"""State change: draining is complete.\\n"""		531467	0					
ANR	532529	ExpressionStatement	"change ( drained_state , idle_act )"	551:4:17286:17319	531467	1	True				
ANR	532530	CallExpression	"change ( drained_state , idle_act )"		531467	0					
ANR	532531	Callee	change		531467	0					
ANR	532532	Identifier	change		531467	0					
ANR	532533	ArgumentList	drained_state		531467	1					
ANR	532534	Argument	drained_state		531467	0					
ANR	532535	Identifier	drained_state		531467	0					
ANR	532536	Argument	idle_act		531467	1					
ANR	532537	Identifier	idle_act		531467	0					
ANR	532538	ReturnStatement	return TRUE ;	552:4:17325:17336	531467	2	True				
ANR	532539	Identifier	TRUE		531467	0					
ANR	532540	ElseStatement	else		531467	0					
ANR	532541	IfStatement	if ( r_act == idle_act )		531467	0					
ANR	532542	Condition	r_act == idle_act	555:11:17358:17374	531467	0	True				
ANR	532543	EqualityExpression	r_act == idle_act		531467	0		==			
ANR	532544	Identifier	r_act		531467	0					
ANR	532545	Identifier	idle_act		531467	1					
ANR	532546	CompoundStatement		347:31:11568:11568	531467	1					
ANR	532547	IfStatement	if ( resmgr -> considerResumingAfterDraining ( ) )		531467	0					
ANR	532548	Condition	resmgr -> considerResumingAfterDraining ( )	556:7:17387:17425	531467	0	True				
ANR	532549	CallExpression	resmgr -> considerResumingAfterDraining ( )		531467	0					
ANR	532550	Callee	resmgr -> considerResumingAfterDraining		531467	0					
ANR	532551	PtrMemberAccess	resmgr -> considerResumingAfterDraining		531467	0					
ANR	532552	Identifier	resmgr		531467	0					
ANR	532553	Identifier	considerResumingAfterDraining		531467	1					
ANR	532554	ArgumentList			531467	1					
ANR	532555	CompoundStatement		348:49:11619:11619	531467	1					
ANR	532556	ReturnStatement	return TRUE ;	557:4:17435:17446	531467	0	True				
ANR	532557	Identifier	TRUE		531467	0					
ANR	532558	BreakStatement	break ;	560:2:17459:17464	531467	48	True				
ANR	532559	Label	default :	562:1:17468:17475	531467	49	True				
ANR	532560	Identifier	default		531467	0					
ANR	532561	ExpressionStatement	"EXCEPT ( ""eval_state: ERROR: unknown state (%d)"" , ( int ) rip -> state ( ) )"	563:2:17479:17551	531467	50	True				
ANR	532562	CallExpression	"EXCEPT ( ""eval_state: ERROR: unknown state (%d)"" , ( int ) rip -> state ( ) )"		531467	0					
ANR	532563	Callee	EXCEPT		531467	0					
ANR	532564	Identifier	EXCEPT		531467	0					
ANR	532565	ArgumentList	"""eval_state: ERROR: unknown state (%d)"""		531467	1					
ANR	532566	Argument	"""eval_state: ERROR: unknown state (%d)"""		531467	0					
ANR	532567	PrimaryExpression	"""eval_state: ERROR: unknown state (%d)"""		531467	0					
ANR	532568	Argument	( int ) rip -> state ( )		531467	1					
ANR	532569	CastExpression	( int ) rip -> state ( )		531467	0					
ANR	532570	CastTarget	int		531467	0					
ANR	532571	CallExpression	rip -> state ( )		531467	1					
ANR	532572	Callee	rip -> state		531467	0					
ANR	532573	PtrMemberAccess	rip -> state		531467	0					
ANR	532574	Identifier	rip		531467	0					
ANR	532575	Identifier	state		531467	1					
ANR	532576	ArgumentList			531467	1					
ANR	532577	ReturnStatement	return 0 ;	566:1:17557:17565	531467	6	True				
ANR	532578	PrimaryExpression	0		531467	0					
ANR	532579	ReturnType	int		531467	1					
ANR	532580	Identifier	ResState :: eval		531467	2					
ANR	532581	ParameterList			531467	3					
ANR	532582	CFGEntryNode	ENTRY		531467		True				
ANR	532583	CFGExitNode	EXIT		531467		True				
ANR	532584	Symbol	rip -> isCurrentlyFetching		531467						
ANR	532585	Symbol	rip -> claimWorklifeExpired		531467						
ANR	532586	Symbol	backfill_state		531467						
ANR	532587	Symbol	suspended_act		531467						
ANR	532588	Symbol	drained_state		531467						
ANR	532589	Symbol	rip		531467						
ANR	532590	Symbol	killing_act		531467						
ANR	532591	Symbol	resmgr -> m_attr		531467						
ANR	532592	Symbol	retiring_act		531467						
ANR	532593	Symbol	rip -> eval_preempt		531467						
ANR	532594	Symbol	resmgr -> drainingIsComplete		531467						
ANR	532595	Symbol	rip -> state		531467						
ANR	532596	Symbol	rip -> r_reqexp -> restore		531467						
ANR	532597	Symbol	r_act_was_benchmark		531467						
ANR	532598	Symbol	rip -> mayUnretire		531467						
ANR	532599	Symbol	* resmgr		531467						
ANR	532600	Symbol	r_state		531467						
ANR	532601	Symbol	TRUE		531467						
ANR	532602	Symbol	rip -> eval_continue		531467						
ANR	532603	Symbol	busy_act		531467						
ANR	532604	Symbol	rip -> isDraining		531467						
ANR	532605	Symbol	resmgr		531467						
ANR	532606	Symbol	r_act		531467						
ANR	532607	Symbol	rip -> wants_pckpt		531467						
ANR	532608	Symbol	num_started		531467						
ANR	532609	Symbol	owner_state		531467						
ANR	532610	Symbol	unclaimed_state		531467						
ANR	532611	Symbol	rip -> preemptWasTrue		531467						
ANR	532612	Symbol	* rip		531467						
ANR	532613	Symbol	rip -> eval_evict_backfill		531467						
ANR	532614	Symbol	preempting_state		531467						
ANR	532615	Symbol	resmgr -> considerResumingAfterDraining		531467						
ANR	532616	Symbol	rip -> eval_is_owner		531467						
ANR	532617	Symbol	rip -> inRetirement		531467						
ANR	532618	Symbol	Resource :: DYNAMIC_SLOT		531467						
ANR	532619	Symbol	rip -> retire_claim		531467						
ANR	532620	Symbol	kill_rval		531467						
ANR	532621	Symbol	delete_state		531467						
ANR	532622	Symbol	* rip -> r_reqexp		531467						
ANR	532623	Symbol	D_ALWAYS		531467						
ANR	532624	Symbol	vacating_act		531467						
ANR	532625	Symbol	rip -> wants_suspend		531467						
ANR	532626	Symbol	resmgr -> m_backfill_mgr		531467						
ANR	532627	Symbol	rip -> isSuspendedForCOD		531467						
ANR	532628	Symbol	rip -> eval_suspend		531467						
ANR	532629	Symbol	* * rip		531467						
ANR	532630	Symbol	rip -> eval_start		531467						
ANR	532631	Symbol	rip -> eval_start_backfill		531467						
ANR	532632	Symbol	want_suspend		531467						
ANR	532633	Symbol	rip -> r_reqexp		531467						
ANR	532634	Symbol	idle_act		531467						
ANR	532635	Symbol	rip -> get_feature		531467						
ANR	532636	Symbol	rip -> retirementExpired		531467						
ANR	532637	Symbol	rip -> eval_kill		531467						
ANR	532638	Symbol	rip -> hasPreemptingClaim		531467						
ANR	532639	Function	act_to_load	570:0:17571:17872							
ANR	532640	FunctionDef	act_to_load (Activity act)		532639	0					
ANR	532641	CompoundStatement		572:0:17603:17872	532639	0					
ANR	532642	SwitchStatement	switch ( act )		532639	0					
ANR	532643	Condition	act	573:9:17614:17616	532639	0	True				
ANR	532644	Identifier	act		532639	0					
ANR	532645	CompoundStatement		2:15:16:16	532639	1					
ANR	532646	Label	case idle_act :	574:1:17623:17636	532639	0	True				
ANR	532647	Identifier	idle_act		532639	0					
ANR	532648	Label	case suspended_act :	575:1:17639:17657	532639	1	True				
ANR	532649	Identifier	suspended_act		532639	0					
ANR	532650	ReturnStatement	return 0 ;	576:2:17661:17669	532639	2	True				
ANR	532651	PrimaryExpression	0		532639	0					
ANR	532652	BreakStatement	break ;	577:2:17673:17678	532639	3	True				
ANR	532653	Label	case busy_act :	578:1:17681:17694	532639	4	True				
ANR	532654	Identifier	busy_act		532639	0					
ANR	532655	Label	case benchmarking_act :	579:1:17697:17718	532639	5	True				
ANR	532656	Identifier	benchmarking_act		532639	0					
ANR	532657	Label	case retiring_act :	580:1:17721:17738	532639	6	True				
ANR	532658	Identifier	retiring_act		532639	0					
ANR	532659	Label	case vacating_act :	581:1:17741:17758	532639	7	True				
ANR	532660	Identifier	vacating_act		532639	0					
ANR	532661	Label	case killing_act :	582:1:17761:17777	532639	8	True				
ANR	532662	Identifier	killing_act		532639	0					
ANR	532663	ReturnStatement	return 1 ;	583:2:17781:17789	532639	9	True				
ANR	532664	PrimaryExpression	1		532639	0					
ANR	532665	BreakStatement	break ;	584:2:17793:17798	532639	10	True				
ANR	532666	Label	default :	585:1:17801:17808	532639	11	True				
ANR	532667	Identifier	default		532639	0					
ANR	532668	ExpressionStatement	"EXCEPT ( ""Unknown activity in act_to_load"" )"	586:2:17812:17855	532639	12	True				
ANR	532669	CallExpression	"EXCEPT ( ""Unknown activity in act_to_load"" )"		532639	0					
ANR	532670	Callee	EXCEPT		532639	0					
ANR	532671	Identifier	EXCEPT		532639	0					
ANR	532672	ArgumentList	"""Unknown activity in act_to_load"""		532639	1					
ANR	532673	Argument	"""Unknown activity in act_to_load"""		532639	0					
ANR	532674	PrimaryExpression	"""Unknown activity in act_to_load"""		532639	0					
ANR	532675	ReturnStatement	return - 1 ;	588:1:17861:17870	532639	1	True				
ANR	532676	UnaryOperationExpression	- 1		532639	0					
ANR	532677	UnaryOperator	-		532639	0					
ANR	532678	PrimaryExpression	1		532639	1					
ANR	532679	ReturnType	int		532639	1					
ANR	532680	Identifier	act_to_load		532639	2					
ANR	532681	ParameterList	Activity act		532639	3					
ANR	532682	Parameter	Activity act	571:13:17588:17599	532639	0	True				
ANR	532683	ParameterType	Activity		532639	0					
ANR	532684	Identifier	act		532639	1					
ANR	532685	CFGEntryNode	ENTRY		532639		True				
ANR	532686	CFGExitNode	EXIT		532639		True				
ANR	532687	Symbol	act		532639						
ANR	532688	Function	ResState :: leave_action	592:0:17876:19900							
ANR	532689	FunctionDef	"ResState :: leave_action (State cur_s , Activity cur_a , State new_s , Activity new_a , bool statechange)"		532688	0					
ANR	532690	CompoundStatement		595:0:17987:19900	532688	0					
ANR	532691	SwitchStatement	switch ( cur_s )		532688	0					
ANR	532692	Condition	cur_s	596:9:17998:18002	532688	0	True				
ANR	532693	Identifier	cur_s		532688	0					
ANR	532694	CompoundStatement		2:17:18:18	532688	1					
ANR	532695	Label	case preempting_state :	597:1:18009:18030	532688	0	True				
ANR	532696	Identifier	preempting_state		532688	0					
ANR	532697	IfStatement	if ( statechange )		532688	1					
ANR	532698	Condition	statechange	598:6:18038:18048	532688	0	True				
ANR	532699	Identifier	statechange		532688	0					
ANR	532700	CompoundStatement		4:20:64:64	532688	1					
ANR	532701	ExpressionStatement	rip -> init_classad ( )	606:3:18368:18387	532688	0	True				
ANR	532702	CallExpression	rip -> init_classad ( )		532688	0					
ANR	532703	Callee	rip -> init_classad		532688	0					
ANR	532704	PtrMemberAccess	rip -> init_classad		532688	0					
ANR	532705	Identifier	rip		532688	0					
ANR	532706	Identifier	init_classad		532688	1					
ANR	532707	ArgumentList			532688	1					
ANR	532708	BreakStatement	break ;	608:2:18395:18400	532688	2	True				
ANR	532709	Label	case backfill_state :	611:1:18422:18441	532688	3	True				
ANR	532710	Identifier	backfill_state		532688	0					
ANR	532711	Label	case matched_state :	614:1:18518:18536	532688	4	True				
ANR	532712	Identifier	matched_state		532688	0					
ANR	532713	Label	case owner_state :	615:1:18539:18555	532688	5	True				
ANR	532714	Identifier	owner_state		532688	0					
ANR	532715	Label	case unclaimed_state :	616:1:18558:18578	532688	6	True				
ANR	532716	Identifier	unclaimed_state		532688	0					
ANR	532717	Label	case drained_state :	617:1:18581:18599	532688	7	True				
ANR	532718	Identifier	drained_state		532688	0					
ANR	532719	BreakStatement	break ;	618:2:18603:18608	532688	8	True				
ANR	532720	Label	case claimed_state :	620:1:18612:18630	532688	9	True				
ANR	532721	Identifier	claimed_state		532688	0					
ANR	532722	IfStatement	if ( cur_a == suspended_act )		532688	10					
ANR	532723	Condition	cur_a == suspended_act	621:6:18638:18659	532688	0	True				
ANR	532724	EqualityExpression	cur_a == suspended_act		532688	0		==			
ANR	532725	Identifier	cur_a		532688	0					
ANR	532726	Identifier	suspended_act		532688	1					
ANR	532727	CompoundStatement		27:31:675:675	532688	1					
ANR	532728	IfStatement	if ( ! rip -> r_cur -> resumeClaim ( ) )		532688	0					
ANR	532729	Condition	! rip -> r_cur -> resumeClaim ( )	622:7:18672:18698	532688	0	True				
ANR	532730	UnaryOperationExpression	! rip -> r_cur -> resumeClaim ( )		532688	0					
ANR	532731	UnaryOperator	!		532688	0					
ANR	532732	CallExpression	rip -> r_cur -> resumeClaim ( )		532688	1					
ANR	532733	Callee	rip -> r_cur -> resumeClaim		532688	0					
ANR	532734	PtrMemberAccess	rip -> r_cur -> resumeClaim		532688	0					
ANR	532735	PtrMemberAccess	rip -> r_cur		532688	0					
ANR	532736	Identifier	rip		532688	0					
ANR	532737	Identifier	r_cur		532688	1					
ANR	532738	Identifier	resumeClaim		532688	1					
ANR	532739	ArgumentList			532688	1					
ANR	532740	CompoundStatement		28:37:714:714	532688	1					
ANR	532741	ExpressionStatement	rip -> r_cur -> starterKillPg ( SIGKILL )	627:4:18909:18945	532688	0	True				
ANR	532742	CallExpression	rip -> r_cur -> starterKillPg ( SIGKILL )		532688	0					
ANR	532743	Callee	rip -> r_cur -> starterKillPg		532688	0					
ANR	532744	PtrMemberAccess	rip -> r_cur -> starterKillPg		532688	0					
ANR	532745	PtrMemberAccess	rip -> r_cur		532688	0					
ANR	532746	Identifier	rip		532688	0					
ANR	532747	Identifier	r_cur		532688	1					
ANR	532748	Identifier	starterKillPg		532688	1					
ANR	532749	ArgumentList	SIGKILL		532688	1					
ANR	532750	Argument	SIGKILL		532688	0					
ANR	532751	Identifier	SIGKILL		532688	0					
ANR	532752	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: Error sending signals to starter\\n"" )"	628:4:18951:19029	532688	1	True				
ANR	532753	CallExpression	"dprintf ( D_ALWAYS , ""State change: Error sending signals to starter\\n"" )"		532688	0					
ANR	532754	Callee	dprintf		532688	0					
ANR	532755	Identifier	dprintf		532688	0					
ANR	532756	ArgumentList	D_ALWAYS		532688	1					
ANR	532757	Argument	D_ALWAYS		532688	0					
ANR	532758	Identifier	D_ALWAYS		532688	0					
ANR	532759	Argument	"""State change: Error sending signals to starter\\n"""		532688	1					
ANR	532760	PrimaryExpression	"""State change: Error sending signals to starter\\n"""		532688	0					
ANR	532761	IfStatement	if ( new_s != preempting_state )		532688	2					
ANR	532762	Condition	new_s != preempting_state	630:8:19039:19063	532688	0	True				
ANR	532763	EqualityExpression	new_s != preempting_state		532688	0		!=			
ANR	532764	Identifier	new_s		532688	0					
ANR	532765	Identifier	preempting_state		532688	1					
ANR	532766	CompoundStatement		36:36:1079:1079	532688	1					
ANR	532767	ExpressionStatement	change ( preempting_state )	631:5:19074:19100	532688	0	True				
ANR	532768	CallExpression	change ( preempting_state )		532688	0					
ANR	532769	Callee	change		532688	0					
ANR	532770	Identifier	change		532688	0					
ANR	532771	ArgumentList	preempting_state		532688	1					
ANR	532772	Argument	preempting_state		532688	0					
ANR	532773	Identifier	preempting_state		532688	0					
ANR	532774	ReturnStatement	return TRUE ;	632:5:19107:19118	532688	1	True				
ANR	532775	Identifier	TRUE		532688	0					
ANR	532776	ElseStatement	else		532688	0					
ANR	532777	CompoundStatement		39:11:1163:1163	532688	0					
ANR	532778	ReturnStatement	return FALSE ;	645:5:19615:19627	532688	0	True				
ANR	532779	Identifier	FALSE		532688	0					
ANR	532780	IfStatement	if ( statechange && new_a != vacating_act )		532688	11					
ANR	532781	Condition	statechange && new_a != vacating_act	651:6:19728:19763	532688	0	True				
ANR	532782	AndExpression	statechange && new_a != vacating_act		532688	0		&&			
ANR	532783	Identifier	statechange		532688	0					
ANR	532784	EqualityExpression	new_a != vacating_act		532688	1		!=			
ANR	532785	Identifier	new_a		532688	0					
ANR	532786	Identifier	vacating_act		532688	1					
ANR	532787	CompoundStatement		57:45:1779:1779	532688	1					
ANR	532788	ExpressionStatement	rip -> r_cur -> cancelLeaseTimer ( )	652:3:19772:19802	532688	0	True				
ANR	532789	CallExpression	rip -> r_cur -> cancelLeaseTimer ( )		532688	0					
ANR	532790	Callee	rip -> r_cur -> cancelLeaseTimer		532688	0					
ANR	532791	PtrMemberAccess	rip -> r_cur -> cancelLeaseTimer		532688	0					
ANR	532792	PtrMemberAccess	rip -> r_cur		532688	0					
ANR	532793	Identifier	rip		532688	0					
ANR	532794	Identifier	r_cur		532688	1					
ANR	532795	Identifier	cancelLeaseTimer		532688	1					
ANR	532796	ArgumentList			532688	1					
ANR	532797	BreakStatement	break ;	654:2:19811:19816	532688	12	True				
ANR	532798	Label	default :	655:1:19819:19826	532688	13	True				
ANR	532799	Identifier	default		532688	0					
ANR	532800	ExpressionStatement	"EXCEPT ( ""Unknown state in ResState::leave_action"" )"	656:2:19830:19879	532688	14	True				
ANR	532801	CallExpression	"EXCEPT ( ""Unknown state in ResState::leave_action"" )"		532688	0					
ANR	532802	Callee	EXCEPT		532688	0					
ANR	532803	Identifier	EXCEPT		532688	0					
ANR	532804	ArgumentList	"""Unknown state in ResState::leave_action"""		532688	1					
ANR	532805	Argument	"""Unknown state in ResState::leave_action"""		532688	0					
ANR	532806	PrimaryExpression	"""Unknown state in ResState::leave_action"""		532688	0					
ANR	532807	ReturnStatement	return FALSE ;	659:1:19886:19898	532688	1	True				
ANR	532808	Identifier	FALSE		532688	0					
ANR	532809	ReturnType	int		532688	1					
ANR	532810	Identifier	ResState :: leave_action		532688	2					
ANR	532811	ParameterList	"State cur_s , Activity cur_a , State new_s , Activity new_a , bool statechange"		532688	3					
ANR	532812	Parameter	State cur_s	593:24:17904:17914	532688	0	True				
ANR	532813	ParameterType	State		532688	0					
ANR	532814	Identifier	cur_s		532688	1					
ANR	532815	Parameter	Activity cur_a	593:37:17917:17930	532688	1	True				
ANR	532816	ParameterType	Activity		532688	0					
ANR	532817	Identifier	cur_a		532688	1					
ANR	532818	Parameter	State new_s	593:53:17933:17943	532688	2	True				
ANR	532819	ParameterType	State		532688	0					
ANR	532820	Identifier	new_s		532688	1					
ANR	532821	Parameter	Activity new_a	594:6:17952:17965	532688	3	True				
ANR	532822	ParameterType	Activity		532688	0					
ANR	532823	Identifier	new_a		532688	1					
ANR	532824	Parameter	bool statechange	594:22:17968:17983	532688	4	True				
ANR	532825	ParameterType	bool		532688	0					
ANR	532826	Identifier	statechange		532688	1					
ANR	532827	CFGEntryNode	ENTRY		532688		True				
ANR	532828	CFGExitNode	EXIT		532688		True				
ANR	532829	Symbol	* rip -> r_cur		532688						
ANR	532830	Symbol	* rip		532688						
ANR	532831	Symbol	statechange		532688						
ANR	532832	Symbol	D_ALWAYS		532688						
ANR	532833	Symbol	preempting_state		532688						
ANR	532834	Symbol	vacating_act		532688						
ANR	532835	Symbol	new_s		532688						
ANR	532836	Symbol	TRUE		532688						
ANR	532837	Symbol	cur_a		532688						
ANR	532838	Symbol	* * rip		532688						
ANR	532839	Symbol	SIGKILL		532688						
ANR	532840	Symbol	suspended_act		532688						
ANR	532841	Symbol	rip -> r_cur		532688						
ANR	532842	Symbol	rip		532688						
ANR	532843	Symbol	rip -> r_cur -> resumeClaim		532688						
ANR	532844	Symbol	FALSE		532688						
ANR	532845	Symbol	cur_s		532688						
ANR	532846	Symbol	new_a		532688						
ANR	532847	Function	ResState :: dprintf	875:0:25347:25501							
ANR	532848	FunctionDef	"ResState :: dprintf (int flags , const char * fmt)"		532847	0					
ANR	532849	CompoundStatement		877:0:25405:25501	532847	0					
ANR	532850	IdentifierDeclStatement	va_list args ;	878:1:25408:25420	532847	0	True				
ANR	532851	IdentifierDecl	args		532847	0					
ANR	532852	IdentifierDeclType	va_list		532847	0					
ANR	532853	Identifier	args		532847	1					
ANR	532854	ExpressionStatement	"va_start ( args , fmt )"	879:1:25423:25444	532847	1	True				
ANR	532855	CallExpression	"va_start ( args , fmt )"		532847	0					
ANR	532856	Callee	va_start		532847	0					
ANR	532857	Identifier	va_start		532847	0					
ANR	532858	ArgumentList	args		532847	1					
ANR	532859	Argument	args		532847	0					
ANR	532860	Identifier	args		532847	0					
ANR	532861	Argument	fmt		532847	1					
ANR	532862	Identifier	fmt		532847	0					
ANR	532863	ExpressionStatement	"rip -> dprintf_va ( flags , fmt , args )"	880:1:25447:25482	532847	2	True				
ANR	532864	CallExpression	"rip -> dprintf_va ( flags , fmt , args )"		532847	0					
ANR	532865	Callee	rip -> dprintf_va		532847	0					
ANR	532866	PtrMemberAccess	rip -> dprintf_va		532847	0					
ANR	532867	Identifier	rip		532847	0					
ANR	532868	Identifier	dprintf_va		532847	1					
ANR	532869	ArgumentList	flags		532847	1					
ANR	532870	Argument	flags		532847	0					
ANR	532871	Identifier	flags		532847	0					
ANR	532872	Argument	fmt		532847	1					
ANR	532873	Identifier	fmt		532847	0					
ANR	532874	Argument	args		532847	2					
ANR	532875	Identifier	args		532847	0					
ANR	532876	ExpressionStatement	va_end ( args )	881:1:25485:25499	532847	3	True				
ANR	532877	CallExpression	va_end ( args )		532847	0					
ANR	532878	Callee	va_end		532847	0					
ANR	532879	Identifier	va_end		532847	0					
ANR	532880	ArgumentList	args		532847	1					
ANR	532881	Argument	args		532847	0					
ANR	532882	Identifier	args		532847	0					
ANR	532883	ReturnType	void		532847	1					
ANR	532884	Identifier	ResState :: dprintf		532847	2					
ANR	532885	ParameterList	"int flags , const char * fmt"		532847	3					
ANR	532886	Parameter	int flags	876:19:25371:25379	532847	0	True				
ANR	532887	ParameterType	int		532847	0					
ANR	532888	Identifier	flags		532847	1					
ANR	532889	Parameter	const char * fmt	876:30:25382:25396	532847	1	True				
ANR	532890	ParameterType	const char *		532847	0					
ANR	532891	Identifier	fmt		532847	1					
ANR	532892	CFGEntryNode	ENTRY		532847		True				
ANR	532893	CFGExitNode	EXIT		532847		True				
ANR	532894	Symbol	args		532847						
ANR	532895	Symbol	flags		532847						
ANR	532896	Symbol	rip		532847						
ANR	532897	Symbol	fmt		532847						
ANR	532898	Function	ResState :: set_destination	885:0:25505:28062							
ANR	532899	FunctionDef	ResState :: set_destination (State new_state)		532898	0					
ANR	532900	CompoundStatement		887:0:25555:28062	532898	0					
ANR	532901	SwitchStatement	switch ( new_state )		532898	0					
ANR	532902	Condition	new_state	889:9:25567:25575	532898	0	True				
ANR	532903	Identifier	new_state		532898	0					
ANR	532904	CompoundStatement		3:21:23:23	532898	1					
ANR	532905	Label	case delete_state :	890:1:25582:25599	532898	0	True				
ANR	532906	Identifier	delete_state		532898	0					
ANR	532907	Label	case owner_state :	891:1:25602:25618	532898	1	True				
ANR	532908	Identifier	owner_state		532898	0					
ANR	532909	BreakStatement	break ;	893:2:25679:25684	532898	2	True				
ANR	532910	Label	case matched_state :	895:1:25688:25706	532898	3	True				
ANR	532911	Identifier	matched_state		532898	0					
ANR	532912	IfStatement	if ( r_destination != no_state )		532898	4					
ANR	532913	Condition	r_destination != no_state	899:6:25862:25886	532898	0	True				
ANR	532914	EqualityExpression	r_destination != no_state		532898	0		!=			
ANR	532915	Identifier	r_destination		532898	0					
ANR	532916	Identifier	no_state		532898	1					
ANR	532917	CompoundStatement		13:34:334:334	532898	1					
ANR	532918	Statement	dprintf	900:3:25895:25901	532898	0	True				
ANR	532919	Statement	(	900:10:25902:25902	532898	1	True				
ANR	532920	Statement	D_ALWAYS	900:12:25904:25911	532898	2	True				
ANR	532921	Statement	","	900:20:25912:25912	532898	3	True				
ANR	532922	Statement	"""Not setting destination state to Matched """	900:22:25914:25956	532898	4	True				
ANR	532923	Statement	"""since destination already set to %s\\n"""	901:6:25964:26002	532898	5	True				
ANR	532924	Statement	","	901:45:26003:26003	532898	6	True				
ANR	532925	Statement	state_to_string	902:6:26011:26025	532898	7	True				
ANR	532926	Statement	(	902:21:26026:26026	532898	8	True				
ANR	532927	Statement	r_destination	902:22:26027:26039	532898	9	True				
ANR	532928	Statement	)	902:35:26040:26040	532898	10	True				
ANR	532929	Statement	)	902:37:26042:26042	532898	11	True				
ANR	532930	ExpressionStatement		902:38:26043:26043	532898	12	True				
ANR	532931	ReturnStatement	return ;	903:3:26049:26055	532898	13	True				
ANR	532932	BreakStatement	break ;	905:2:26063:26068	532898	5	True				
ANR	532933	Label	case claimed_state :	907:1:26072:26090	532898	6	True				
ANR	532934	Identifier	claimed_state		532898	0					
ANR	532935	IfStatement	if ( rip -> r_cur -> type ( ) == CLAIM_FETCH )		532898	7					
ANR	532936	Condition	rip -> r_cur -> type ( ) == CLAIM_FETCH	911:6:26237:26269	532898	0	True				
ANR	532937	EqualityExpression	rip -> r_cur -> type ( ) == CLAIM_FETCH		532898	0		==			
ANR	532938	CallExpression	rip -> r_cur -> type ( )		532898	0					
ANR	532939	Callee	rip -> r_cur -> type		532898	0					
ANR	532940	PtrMemberAccess	rip -> r_cur -> type		532898	0					
ANR	532941	PtrMemberAccess	rip -> r_cur		532898	0					
ANR	532942	Identifier	rip		532898	0					
ANR	532943	Identifier	r_cur		532898	1					
ANR	532944	Identifier	type		532898	1					
ANR	532945	ArgumentList			532898	1					
ANR	532946	Identifier	CLAIM_FETCH		532898	1					
ANR	532947	CompoundStatement		25:41:716:716	532898	1					
ANR	532948	IfStatement	if ( rip -> r_cur -> ad ( ) == NULL )		532898	0					
ANR	532949	Condition	rip -> r_cur -> ad ( ) == NULL	912:7:26281:26304	532898	0	True				
ANR	532950	EqualityExpression	rip -> r_cur -> ad ( ) == NULL		532898	0		==			
ANR	532951	CallExpression	rip -> r_cur -> ad ( )		532898	0					
ANR	532952	Callee	rip -> r_cur -> ad		532898	0					
ANR	532953	PtrMemberAccess	rip -> r_cur -> ad		532898	0					
ANR	532954	PtrMemberAccess	rip -> r_cur		532898	0					
ANR	532955	Identifier	rip		532898	0					
ANR	532956	Identifier	r_cur		532898	1					
ANR	532957	Identifier	ad		532898	1					
ANR	532958	ArgumentList			532898	1					
ANR	532959	Identifier	NULL		532898	1					
ANR	532960	CompoundStatement		26:33:751:751	532898	1					
ANR	532961	Statement	EXCEPT	913:4:26313:26318	532898	0	True				
ANR	532962	Statement	(	913:10:26319:26319	532898	1	True				
ANR	532963	Statement	"""set_destination(Claimed) called but there's no """	913:12:26321:26369	532898	2	True				
ANR	532964	Statement	"""fetched job classad in our current Claim"""	914:6:26377:26418	532898	3	True				
ANR	532965	Statement	)	914:49:26420:26420	532898	4	True				
ANR	532966	ExpressionStatement		914:50:26421:26421	532898	5	True				
ANR	532967	ElseStatement	else		532898	0					
ANR	532968	IfStatement	if ( ! rip -> r_cur -> requestStream ( ) )		532898	0					
ANR	532969	Condition	! rip -> r_cur -> requestStream ( )	919:6:26473:26501	532898	0	True				
ANR	532970	UnaryOperationExpression	! rip -> r_cur -> requestStream ( )		532898	0					
ANR	532971	UnaryOperator	!		532898	0					
ANR	532972	CallExpression	rip -> r_cur -> requestStream ( )		532898	1					
ANR	532973	Callee	rip -> r_cur -> requestStream		532898	0					
ANR	532974	PtrMemberAccess	rip -> r_cur -> requestStream		532898	0					
ANR	532975	PtrMemberAccess	rip -> r_cur		532898	0					
ANR	532976	Identifier	rip		532898	0					
ANR	532977	Identifier	r_cur		532898	1					
ANR	532978	Identifier	requestStream		532898	1					
ANR	532979	ArgumentList			532898	1					
ANR	532980	CompoundStatement		33:38:949:949	532898	1					
ANR	532981	Statement	EXCEPT	920:3:26510:26515	532898	0	True				
ANR	532982	Statement	(	920:9:26516:26516	532898	1	True				
ANR	532983	Statement	"""set_destination(Claimed) called but there's no """	920:11:26518:26566	532898	2	True				
ANR	532984	Statement	"""pending request stream set in our current Claim"""	921:5:26573:26621	532898	3	True				
ANR	532985	Statement	)	921:55:26623:26623	532898	4	True				
ANR	532986	ExpressionStatement		921:56:26624:26624	532898	5	True				
ANR	532987	BreakStatement	break ;	923:2:26632:26637	532898	8	True				
ANR	532988	Label	default :	925:1:26641:26648	532898	9	True				
ANR	532989	Identifier	default		532898	0					
ANR	532990	ExpressionStatement	"EXCEPT ( ""set_destination() doesn't work with %s state yet"" , state_to_string ( r_destination ) )"	926:2:26652:26749	532898	10	True				
ANR	532991	CallExpression	"EXCEPT ( ""set_destination() doesn't work with %s state yet"" , state_to_string ( r_destination ) )"		532898	0					
ANR	532992	Callee	EXCEPT		532898	0					
ANR	532993	Identifier	EXCEPT		532898	0					
ANR	532994	ArgumentList	"""set_destination() doesn't work with %s state yet"""		532898	1					
ANR	532995	Argument	"""set_destination() doesn't work with %s state yet"""		532898	0					
ANR	532996	PrimaryExpression	"""set_destination() doesn't work with %s state yet"""		532898	0					
ANR	532997	Argument	state_to_string ( r_destination )		532898	1					
ANR	532998	CallExpression	state_to_string ( r_destination )		532898	0					
ANR	532999	Callee	state_to_string		532898	0					
ANR	533000	Identifier	state_to_string		532898	0					
ANR	533001	ArgumentList	r_destination		532898	1					
ANR	533002	Argument	r_destination		532898	0					
ANR	533003	Identifier	r_destination		532898	0					
ANR	533004	ExpressionStatement	r_destination = new_state	930:1:26756:26781	532898	1	True				
ANR	533005	AssignmentExpression	r_destination = new_state		532898	0		=			
ANR	533006	Identifier	r_destination		532898	0					
ANR	533007	Identifier	new_state		532898	1					
ANR	533008	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Set destination state to %s\\n"" , state_to_string ( new_state ) )"	931:1:26784:26872	532898	2	True				
ANR	533009	CallExpression	"dprintf ( D_FULLDEBUG , ""Set destination state to %s\\n"" , state_to_string ( new_state ) )"		532898	0					
ANR	533010	Callee	dprintf		532898	0					
ANR	533011	Identifier	dprintf		532898	0					
ANR	533012	ArgumentList	D_FULLDEBUG		532898	1					
ANR	533013	Argument	D_FULLDEBUG		532898	0					
ANR	533014	Identifier	D_FULLDEBUG		532898	0					
ANR	533015	Argument	"""Set destination state to %s\\n"""		532898	1					
ANR	533016	PrimaryExpression	"""Set destination state to %s\\n"""		532898	0					
ANR	533017	Argument	state_to_string ( new_state )		532898	2					
ANR	533018	CallExpression	state_to_string ( new_state )		532898	0					
ANR	533019	Callee	state_to_string		532898	0					
ANR	533020	Identifier	state_to_string		532898	0					
ANR	533021	ArgumentList	new_state		532898	1					
ANR	533022	Argument	new_state		532898	0					
ANR	533023	Identifier	new_state		532898	0					
ANR	533024	SwitchStatement	switch ( r_state )		532898	3					
ANR	533025	Condition	r_state	936:9:26996:27002	532898	0	True				
ANR	533026	Identifier	r_state		532898	0					
ANR	533027	CompoundStatement		50:19:1450:1450	532898	1					
ANR	533028	Label	case owner_state :	937:1:27009:27025	532898	0	True				
ANR	533029	Identifier	owner_state		532898	0					
ANR	533030	Label	case matched_state :	938:1:27028:27046	532898	1	True				
ANR	533031	Identifier	matched_state		532898	0					
ANR	533032	Label	case unclaimed_state :	939:1:27049:27069	532898	2	True				
ANR	533033	Identifier	unclaimed_state		532898	0					
ANR	533034	IfStatement	if ( r_destination == claimed_state )		532898	3					
ANR	533035	Condition	r_destination == claimed_state	940:6:27077:27106	532898	0	True				
ANR	533036	EqualityExpression	r_destination == claimed_state		532898	0		==			
ANR	533037	Identifier	r_destination		532898	0					
ANR	533038	Identifier	claimed_state		532898	1					
ANR	533039	CompoundStatement		54:39:1554:1554	532898	1					
ANR	533040	ExpressionStatement	rip -> acceptClaimRequest ( )	945:3:27317:27342	532898	0	True				
ANR	533041	CallExpression	rip -> acceptClaimRequest ( )		532898	0					
ANR	533042	Callee	rip -> acceptClaimRequest		532898	0					
ANR	533043	PtrMemberAccess	rip -> acceptClaimRequest		532898	0					
ANR	533044	Identifier	rip		532898	0					
ANR	533045	Identifier	acceptClaimRequest		532898	1					
ANR	533046	ArgumentList			532898	1					
ANR	533047	ElseStatement	else		532898	0					
ANR	533048	CompoundStatement		60:9:1797:1797	532898	0					
ANR	533049	ExpressionStatement	change ( r_destination )	947:3:27358:27381	532898	0	True				
ANR	533050	CallExpression	change ( r_destination )		532898	0					
ANR	533051	Callee	change		532898	0					
ANR	533052	Identifier	change		532898	0					
ANR	533053	ArgumentList	r_destination		532898	1					
ANR	533054	Argument	r_destination		532898	0					
ANR	533055	Identifier	r_destination		532898	0					
ANR	533056	BreakStatement	break ;	949:2:27389:27394	532898	4	True				
ANR	533057	Label	case preempting_state :	950:1:27397:27418	532898	5	True				
ANR	533058	Identifier	preempting_state		532898	0					
ANR	533059	BreakStatement	break ;	952:2:27476:27481	532898	6	True				
ANR	533060	Label	case claimed_state :	953:1:27484:27502	532898	7	True				
ANR	533061	Identifier	claimed_state		532898	0					
ANR	533062	ExpressionStatement	change ( preempting_state )	954:2:27506:27532	532898	8	True				
ANR	533063	CallExpression	change ( preempting_state )		532898	0					
ANR	533064	Callee	change		532898	0					
ANR	533065	Identifier	change		532898	0					
ANR	533066	ArgumentList	preempting_state		532898	1					
ANR	533067	Argument	preempting_state		532898	0					
ANR	533068	Identifier	preempting_state		532898	0					
ANR	533069	BreakStatement	break ;	955:2:27536:27541	532898	9	True				
ANR	533070	Label	case backfill_state :	957:1:27562:27581	532898	10	True				
ANR	533071	Identifier	backfill_state		532898	0					
ANR	533072	IfStatement	if ( r_act == idle_act )		532898	11					
ANR	533073	Condition	r_act == idle_act	958:6:27589:27605	532898	0	True				
ANR	533074	EqualityExpression	r_act == idle_act		532898	0		==			
ANR	533075	Identifier	r_act		532898	0					
ANR	533076	Identifier	idle_act		532898	1					
ANR	533077	CompoundStatement		72:26:2053:2053	532898	1					
ANR	533078	IfStatement	if ( r_destination == claimed_state )		532898	0					
ANR	533079	Condition	r_destination == claimed_state	960:7:27663:27692	532898	0	True				
ANR	533080	EqualityExpression	r_destination == claimed_state		532898	0		==			
ANR	533081	Identifier	r_destination		532898	0					
ANR	533082	Identifier	claimed_state		532898	1					
ANR	533083	CompoundStatement		74:40:2140:2140	532898	1					
ANR	533084	ExpressionStatement	rip -> acceptClaimRequest ( )	961:4:27702:27727	532898	0	True				
ANR	533085	CallExpression	rip -> acceptClaimRequest ( )		532898	0					
ANR	533086	Callee	rip -> acceptClaimRequest		532898	0					
ANR	533087	PtrMemberAccess	rip -> acceptClaimRequest		532898	0					
ANR	533088	Identifier	rip		532898	0					
ANR	533089	Identifier	acceptClaimRequest		532898	1					
ANR	533090	ArgumentList			532898	1					
ANR	533091	ElseStatement	else		532898	0					
ANR	533092	CompoundStatement		76:10:2183:2183	532898	0					
ANR	533093	ExpressionStatement	change ( r_destination )	963:4:27745:27768	532898	0	True				
ANR	533094	CallExpression	change ( r_destination )		532898	0					
ANR	533095	Callee	change		532898	0					
ANR	533096	Identifier	change		532898	0					
ANR	533097	ArgumentList	r_destination		532898	1					
ANR	533098	Argument	r_destination		532898	0					
ANR	533099	Identifier	r_destination		532898	0					
ANR	533100	ElseStatement	else		532898	0					
ANR	533101	CompoundStatement		79:9:2228:2228	532898	0					
ANR	533102	ExpressionStatement	change ( killing_act )	968:3:27890:27911	532898	0	True				
ANR	533103	CallExpression	change ( killing_act )		532898	0					
ANR	533104	Callee	change		532898	0					
ANR	533105	Identifier	change		532898	0					
ANR	533106	ArgumentList	killing_act		532898	1					
ANR	533107	Argument	killing_act		532898	0					
ANR	533108	Identifier	killing_act		532898	0					
ANR	533109	BreakStatement	break ;	970:2:27919:27924	532898	12	True				
ANR	533110	Label	default :	973:1:27955:27962	532898	13	True				
ANR	533111	Identifier	default		532898	0					
ANR	533112	ExpressionStatement	"EXCEPT ( ""Unexpected state %s in ResState::set_destination"" , state_to_string ( r_state ) )"	974:2:27966:28056	532898	14	True				
ANR	533113	CallExpression	"EXCEPT ( ""Unexpected state %s in ResState::set_destination"" , state_to_string ( r_state ) )"		532898	0					
ANR	533114	Callee	EXCEPT		532898	0					
ANR	533115	Identifier	EXCEPT		532898	0					
ANR	533116	ArgumentList	"""Unexpected state %s in ResState::set_destination"""		532898	1					
ANR	533117	Argument	"""Unexpected state %s in ResState::set_destination"""		532898	0					
ANR	533118	PrimaryExpression	"""Unexpected state %s in ResState::set_destination"""		532898	0					
ANR	533119	Argument	state_to_string ( r_state )		532898	1					
ANR	533120	CallExpression	state_to_string ( r_state )		532898	0					
ANR	533121	Callee	state_to_string		532898	0					
ANR	533122	Identifier	state_to_string		532898	0					
ANR	533123	ArgumentList	r_state		532898	1					
ANR	533124	Argument	r_state		532898	0					
ANR	533125	Identifier	r_state		532898	0					
ANR	533126	ReturnType	void		532898	1					
ANR	533127	Identifier	ResState :: set_destination		532898	2					
ANR	533128	ParameterList	State new_state		532898	3					
ANR	533129	Parameter	State new_state	886:27:25537:25551	532898	0	True				
ANR	533130	ParameterType	State		532898	0					
ANR	533131	Identifier	new_state		532898	1					
ANR	533132	CFGEntryNode	ENTRY		532898		True				
ANR	533133	CFGExitNode	EXIT		532898		True				
ANR	533134	Symbol	* rip -> r_cur		532898						
ANR	533135	Symbol	CLAIM_FETCH		532898						
ANR	533136	Symbol	rip -> r_cur -> ad		532898						
ANR	533137	Symbol	* rip		532898						
ANR	533138	Symbol	NULL		532898						
ANR	533139	Symbol	preempting_state		532898						
ANR	533140	Symbol	r_state		532898						
ANR	533141	Symbol	r_destination		532898						
ANR	533142	Symbol	D_FULLDEBUG		532898						
ANR	533143	Symbol	* * rip		532898						
ANR	533144	Symbol	no_state		532898						
ANR	533145	Symbol	rip -> r_cur -> type		532898						
ANR	533146	Symbol	rip -> r_cur -> requestStream		532898						
ANR	533147	Symbol	rip -> r_cur		532898						
ANR	533148	Symbol	r_act		532898						
ANR	533149	Symbol	idle_act		532898						
ANR	533150	Symbol	rip		532898						
ANR	533151	Symbol	killing_act		532898						
ANR	533152	Symbol	new_state		532898						
ANR	533153	Symbol	claimed_state		532898						
ANR	533154	Symbol	state_to_string		532898						
ANR	533155	Function	ResState :: starterExited	981:0:28066:30323							
ANR	533156	FunctionDef	ResState :: starterExited ()		533155	0					
ANR	533157	CompoundStatement		983:0:28102:30323	533155	0					
ANR	533158	SwitchStatement	switch ( r_destination )		533155	0					
ANR	533159	Condition	r_destination	986:9:28204:28216	533155	0	True				
ANR	533160	Identifier	r_destination		533155	0					
ANR	533161	CompoundStatement		4:25:117:117	533155	1					
ANR	533162	Label	case no_state :	988:1:28224:28237	533155	0	True				
ANR	533163	Identifier	no_state		533155	0					
ANR	533164	BreakStatement	break ;	990:2:28290:28295	533155	1	True				
ANR	533165	Label	case delete_state :	992:1:28299:28316	533155	2	True				
ANR	533166	Identifier	delete_state		533155	0					
ANR	533167	Label	case owner_state :	993:1:28319:28335	533155	3	True				
ANR	533168	Identifier	owner_state		533155	0					
ANR	533169	Label	case matched_state :	994:1:28338:28356	533155	4	True				
ANR	533170	Identifier	matched_state		533155	0					
ANR	533171	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: starter exited\\n"" )"	997:2:28457:28510	533155	5	True				
ANR	533172	CallExpression	"dprintf ( D_ALWAYS , ""State change: starter exited\\n"" )"		533155	0					
ANR	533173	Callee	dprintf		533155	0					
ANR	533174	Identifier	dprintf		533155	0					
ANR	533175	ArgumentList	D_ALWAYS		533155	1					
ANR	533176	Argument	D_ALWAYS		533155	0					
ANR	533177	Identifier	D_ALWAYS		533155	0					
ANR	533178	Argument	"""State change: starter exited\\n"""		533155	1					
ANR	533179	PrimaryExpression	"""State change: starter exited\\n"""		533155	0					
ANR	533180	ExpressionStatement	change ( r_destination )	998:2:28514:28537	533155	6	True				
ANR	533181	CallExpression	change ( r_destination )		533155	0					
ANR	533182	Callee	change		533155	0					
ANR	533183	Identifier	change		533155	0					
ANR	533184	ArgumentList	r_destination		533155	1					
ANR	533185	Argument	r_destination		533155	0					
ANR	533186	Identifier	r_destination		533155	0					
ANR	533187	ReturnStatement	return TRUE ;	999:2:28541:28552	533155	7	True				
ANR	533188	Identifier	TRUE		533155	0					
ANR	533189	BreakStatement	break ;	1000:2:28576:28581	533155	8	True				
ANR	533190	Label	case claimed_state :	1002:1:28585:28603	533155	9	True				
ANR	533191	Identifier	claimed_state		533155	0					
ANR	533192	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: starter exited\\n"" )"	1007:2:28807:28860	533155	10	True				
ANR	533193	CallExpression	"dprintf ( D_ALWAYS , ""State change: starter exited\\n"" )"		533155	0					
ANR	533194	Callee	dprintf		533155	0					
ANR	533195	Identifier	dprintf		533155	0					
ANR	533196	ArgumentList	D_ALWAYS		533155	1					
ANR	533197	Argument	D_ALWAYS		533155	0					
ANR	533198	Identifier	D_ALWAYS		533155	0					
ANR	533199	Argument	"""State change: starter exited\\n"""		533155	1					
ANR	533200	PrimaryExpression	"""State change: starter exited\\n"""		533155	0					
ANR	533201	IfStatement	if ( rip -> acceptClaimRequest ( ) )		533155	11					
ANR	533202	Condition	rip -> acceptClaimRequest ( )	1008:6:28868:28892	533155	0	True				
ANR	533203	CallExpression	rip -> acceptClaimRequest ( )		533155	0					
ANR	533204	Callee	rip -> acceptClaimRequest		533155	0					
ANR	533205	PtrMemberAccess	rip -> acceptClaimRequest		533155	0					
ANR	533206	Identifier	rip		533155	0					
ANR	533207	Identifier	acceptClaimRequest		533155	1					
ANR	533208	ArgumentList			533155	1					
ANR	533209	CompoundStatement		26:33:792:792	533155	1					
ANR	533210	ReturnStatement	return TRUE ;	1010:3:28958:28969	533155	0	True				
ANR	533211	Identifier	TRUE		533155	0					
ANR	533212	ElseStatement	else		533155	0					
ANR	533213	CompoundStatement		29:9:877:877	533155	0					
ANR	533214	ExpressionStatement	r_destination = no_state	1012:3:28985:29009	533155	0	True				
ANR	533215	AssignmentExpression	r_destination = no_state		533155	0		=			
ANR	533216	Identifier	r_destination		533155	0					
ANR	533217	Identifier	no_state		533155	1					
ANR	533218	ExpressionStatement	change ( owner_state )	1013:3:29014:29035	533155	1	True				
ANR	533219	CallExpression	change ( owner_state )		533155	0					
ANR	533220	Callee	change		533155	0					
ANR	533221	Identifier	change		533155	0					
ANR	533222	ArgumentList	owner_state		533155	1					
ANR	533223	Argument	owner_state		533155	0					
ANR	533224	Identifier	owner_state		533155	0					
ANR	533225	ReturnStatement	return TRUE ;	1014:3:29040:29051	533155	2	True				
ANR	533226	Identifier	TRUE		533155	0					
ANR	533227	BreakStatement	break ;	1016:2:29079:29084	533155	12	True				
ANR	533228	Label	default :	1018:1:29088:29095	533155	13	True				
ANR	533229	Identifier	default		533155	0					
ANR	533230	Statement	EXCEPT	1019:2:29099:29104	533155	14	True				
ANR	533231	Statement	(	1019:8:29105:29105	533155	15	True				
ANR	533232	Statement	"""Unexpected destination state (%s) in"""	1019:10:29107:29144	533155	16	True				
ANR	533233	Statement	"""ResState::starterExited()\\n"""	1020:4:29150:29178	533155	17	True				
ANR	533234	Statement	","	1020:33:29179:29179	533155	18	True				
ANR	533235	Statement	state_to_string	1021:4:29185:29199	533155	19	True				
ANR	533236	Statement	(	1021:19:29200:29200	533155	20	True				
ANR	533237	Statement	r_destination	1021:20:29201:29213	533155	21	True				
ANR	533238	Statement	)	1021:33:29214:29214	533155	22	True				
ANR	533239	Statement	)	1021:35:29216:29216	533155	23	True				
ANR	533240	ExpressionStatement		1021:36:29217:29217	533155	24	True				
ANR	533241	BreakStatement	break ;	1022:2:29221:29226	533155	25	True				
ANR	533242	SwitchStatement	switch ( r_state )		533155	1					
ANR	533243	Condition	r_state	1028:9:29360:29366	533155	0	True				
ANR	533244	Identifier	r_state		533155	0					
ANR	533245	CompoundStatement		46:19:1267:1267	533155	1					
ANR	533246	Label	case claimed_state :	1030:1:29374:29392	533155	0	True				
ANR	533247	Identifier	claimed_state		533155	0					
ANR	533248	BreakStatement	break ;	1032:2:29459:29464	533155	1	True				
ANR	533249	Label	case preempting_state :	1034:1:29468:29489	533155	2	True				
ANR	533250	Identifier	preempting_state		533155	0					
ANR	533251	BreakStatement	break ;	1037:2:29610:29615	533155	3	True				
ANR	533252	Label	case backfill_state :	1040:1:29637:29656	533155	4	True				
ANR	533253	Identifier	backfill_state		533155	0					
ANR	533254	IfStatement	if ( r_act == idle_act )		533155	5					
ANR	533255	Condition	r_act == idle_act	1041:6:29664:29680	533155	0	True				
ANR	533256	EqualityExpression	r_act == idle_act		533155	0		==			
ANR	533257	Identifier	r_act		533155	0					
ANR	533258	Identifier	idle_act		533155	1					
ANR	533259	CompoundStatement		59:26:1581:1581	533155	1					
ANR	533260	Statement	dprintf	1042:3:29689:29695	533155	0	True				
ANR	533261	Statement	(	1042:10:29696:29696	533155	1	True				
ANR	533262	Statement	D_ALWAYS	1042:12:29698:29705	533155	2	True				
ANR	533263	Statement	","	1042:20:29706:29706	533155	3	True				
ANR	533264	Statement	"""ERROR: ResState::starterExited() called """	1042:22:29708:29749	533155	4	True				
ANR	533265	Statement	"""while already in Backfill/Idle\\n"""	1043:6:29757:29790	533155	5	True				
ANR	533266	Statement	)	1043:41:29792:29792	533155	6	True				
ANR	533267	ExpressionStatement		1043:42:29793:29793	533155	7	True				
ANR	533268	ReturnStatement	return FALSE ;	1044:3:29798:29810	533155	8	True				
ANR	533269	Identifier	FALSE		533155	0					
ANR	533270	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: Backfill starter exited\\n"" )"	1046:2:29818:29880	533155	6	True				
ANR	533271	CallExpression	"dprintf ( D_ALWAYS , ""State change: Backfill starter exited\\n"" )"		533155	0					
ANR	533272	Callee	dprintf		533155	0					
ANR	533273	Identifier	dprintf		533155	0					
ANR	533274	ArgumentList	D_ALWAYS		533155	1					
ANR	533275	Argument	D_ALWAYS		533155	0					
ANR	533276	Identifier	D_ALWAYS		533155	0					
ANR	533277	Argument	"""State change: Backfill starter exited\\n"""		533155	1					
ANR	533278	PrimaryExpression	"""State change: Backfill starter exited\\n"""		533155	0					
ANR	533279	ExpressionStatement	change ( idle_act )	1047:2:29884:29902	533155	7	True				
ANR	533280	CallExpression	change ( idle_act )		533155	0					
ANR	533281	Callee	change		533155	0					
ANR	533282	Identifier	change		533155	0					
ANR	533283	ArgumentList	idle_act		533155	1					
ANR	533284	Argument	idle_act		533155	0					
ANR	533285	Identifier	idle_act		533155	0					
ANR	533286	ReturnStatement	return TRUE ;	1048:2:29906:29917	533155	8	True				
ANR	533287	Identifier	TRUE		533155	0					
ANR	533288	BreakStatement	break ;	1049:2:29941:29946	533155	9	True				
ANR	533289	Label	default :	1052:1:29977:29984	533155	10	True				
ANR	533290	Identifier	default		533155	0					
ANR	533291	Statement	EXCEPT	1053:2:29988:29993	533155	11	True				
ANR	533292	Statement	(	1053:8:29994:29994	533155	12	True				
ANR	533293	Statement	"""Unexpected current state (%s) in"""	1053:10:29996:30029	533155	13	True				
ANR	533294	Statement	"""ResState::starterExited()\\n"""	1054:4:30035:30063	533155	14	True				
ANR	533295	Statement	","	1054:33:30064:30064	533155	15	True				
ANR	533296	Statement	state_to_string	1055:4:30070:30084	533155	16	True				
ANR	533297	Statement	(	1055:19:30085:30085	533155	17	True				
ANR	533298	Statement	r_state	1055:20:30086:30092	533155	18	True				
ANR	533299	Statement	)	1055:27:30093:30093	533155	19	True				
ANR	533300	Statement	)	1055:29:30095:30095	533155	20	True				
ANR	533301	ExpressionStatement		1055:30:30096:30096	533155	21	True				
ANR	533302	BreakStatement	break ;	1056:2:30100:30105	533155	22	True				
ANR	533303	ReturnStatement	return FALSE ;	1063:1:30309:30321	533155	2	True				
ANR	533304	Identifier	FALSE		533155	0					
ANR	533305	ReturnType	int		533155	1					
ANR	533306	Identifier	ResState :: starterExited		533155	2					
ANR	533307	ParameterList			533155	3					
ANR	533308	CFGEntryNode	ENTRY		533155		True				
ANR	533309	CFGExitNode	EXIT		533155		True				
ANR	533310	Symbol	* rip		533155						
ANR	533311	Symbol	rip -> acceptClaimRequest		533155						
ANR	533312	Symbol	idle_act		533155						
ANR	533313	Symbol	r_act		533155						
ANR	533314	Symbol	D_ALWAYS		533155						
ANR	533315	Symbol	rip		533155						
ANR	533316	Symbol	TRUE		533155						
ANR	533317	Symbol	r_state		533155						
ANR	533318	Symbol	r_destination		533155						
ANR	533319	Symbol	FALSE		533155						
ANR	533320	Symbol	owner_state		533155						
ANR	533321	Symbol	no_state		533155						
ANR	533322	Function	ResState :: resetActivityAverages	1066:0:30326:30522							
ANR	533323	FunctionDef	ResState :: resetActivityAverages ()		533322	0					
ANR	533324	CompoundStatement		1068:0:30365:30522	533322	0					
ANR	533325	ExpressionStatement	m_activity_avg_last_timestamp = time ( NULL )	1069:1:30368:30410	533322	0	True				
ANR	533326	AssignmentExpression	m_activity_avg_last_timestamp = time ( NULL )		533322	0		=			
ANR	533327	Identifier	m_activity_avg_last_timestamp		533322	0					
ANR	533328	CallExpression	time ( NULL )		533322	1					
ANR	533329	Callee	time		533322	0					
ANR	533330	Identifier	time		533322	0					
ANR	533331	ArgumentList	NULL		533322	1					
ANR	533332	Argument	NULL		533322	0					
ANR	533333	Identifier	NULL		533322	0					
ANR	533334	ExpressionStatement	m_activity_avg_time_sum = 0	1070:1:30413:30440	533322	1	True				
ANR	533335	AssignmentExpression	m_activity_avg_time_sum = 0		533322	0		=			
ANR	533336	Identifier	m_activity_avg_time_sum		533322	0					
ANR	533337	PrimaryExpression	0		533322	1					
ANR	533338	ExpressionStatement	m_num_cpus_avg = rip -> r_attr -> num_cpus ( )	1071:1:30443:30483	533322	2	True				
ANR	533339	AssignmentExpression	m_num_cpus_avg = rip -> r_attr -> num_cpus ( )		533322	0		=			
ANR	533340	Identifier	m_num_cpus_avg		533322	0					
ANR	533341	CallExpression	rip -> r_attr -> num_cpus ( )		533322	1					
ANR	533342	Callee	rip -> r_attr -> num_cpus		533322	0					
ANR	533343	PtrMemberAccess	rip -> r_attr -> num_cpus		533322	0					
ANR	533344	PtrMemberAccess	rip -> r_attr		533322	0					
ANR	533345	Identifier	rip		533322	0					
ANR	533346	Identifier	r_attr		533322	1					
ANR	533347	Identifier	num_cpus		533322	1					
ANR	533348	ArgumentList			533322	1					
ANR	533349	ExpressionStatement	m_draining_avg = rip -> isDraining ( )	1072:1:30486:30520	533322	3	True				
ANR	533350	AssignmentExpression	m_draining_avg = rip -> isDraining ( )		533322	0		=			
ANR	533351	Identifier	m_draining_avg		533322	0					
ANR	533352	CallExpression	rip -> isDraining ( )		533322	1					
ANR	533353	Callee	rip -> isDraining		533322	0					
ANR	533354	PtrMemberAccess	rip -> isDraining		533322	0					
ANR	533355	Identifier	rip		533322	0					
ANR	533356	Identifier	isDraining		533322	1					
ANR	533357	ArgumentList			533322	1					
ANR	533358	ReturnType	void		533322	1					
ANR	533359	Identifier	ResState :: resetActivityAverages		533322	2					
ANR	533360	ParameterList			533322	3					
ANR	533361	CFGEntryNode	ENTRY		533322		True				
ANR	533362	CFGExitNode	EXIT		533322		True				
ANR	533363	Symbol	m_num_cpus_avg		533322						
ANR	533364	Symbol	NULL		533322						
ANR	533365	Symbol	m_activity_avg_last_timestamp		533322						
ANR	533366	Symbol	* rip		533322						
ANR	533367	Symbol	* rip -> r_attr		533322						
ANR	533368	Symbol	m_draining_avg		533322						
ANR	533369	Symbol	rip -> r_attr -> num_cpus		533322						
ANR	533370	Symbol	* * rip		533322						
ANR	533371	Symbol	rip -> isDraining		533322						
ANR	533372	Symbol	m_activity_avg_time_sum		533322						
ANR	533373	Symbol	rip		533322						
ANR	533374	Symbol	time		533322						
ANR	533375	Symbol	rip -> r_attr		533322						
ANR	533376	Function	ResState :: updateActivityAverages	1075:0:30525:31089							
ANR	533377	FunctionDef	ResState :: updateActivityAverages ()		533376	0					
ANR	533378	CompoundStatement		1077:0:30565:31089	533376	0					
ANR	533379	IfStatement	if ( m_activity_avg_last_timestamp == 0 )		533376	0					
ANR	533380	Condition	m_activity_avg_last_timestamp == 0	1078:6:30573:30606	533376	0	True				
ANR	533381	EqualityExpression	m_activity_avg_last_timestamp == 0		533376	0		==			
ANR	533382	Identifier	m_activity_avg_last_timestamp		533376	0					
ANR	533383	PrimaryExpression	0		533376	1					
ANR	533384	CompoundStatement		2:43:44:44	533376	1					
ANR	533385	ExpressionStatement	resetActivityAverages ( )	1079:2:30614:30637	533376	0	True				
ANR	533386	CallExpression	resetActivityAverages ( )		533376	0					
ANR	533387	Callee	resetActivityAverages		533376	0					
ANR	533388	Identifier	resetActivityAverages		533376	0					
ANR	533389	ArgumentList			533376	1					
ANR	533390	ElseStatement	else		533376	0					
ANR	533391	CompoundStatement		7:2:113:160	533376	0					
ANR	533392	IdentifierDeclStatement	time_t now = time ( NULL ) ;	1082:2:30652:30675	533376	0	True				
ANR	533393	IdentifierDecl	now = time ( NULL )		533376	0					
ANR	533394	IdentifierDeclType	time_t		533376	0					
ANR	533395	Identifier	now		533376	1					
ANR	533396	AssignmentExpression	now = time ( NULL )		533376	2		=			
ANR	533397	Identifier	now		533376	0					
ANR	533398	CallExpression	time ( NULL )		533376	1					
ANR	533399	Callee	time		533376	0					
ANR	533400	Identifier	time		533376	0					
ANR	533401	ArgumentList	NULL		533376	1					
ANR	533402	Argument	NULL		533376	0					
ANR	533403	Identifier	NULL		533376	0					
ANR	533404	IdentifierDeclStatement	int delta = now - m_activity_avg_last_timestamp ;	1083:2:30679:30726	533376	1	True				
ANR	533405	IdentifierDecl	delta = now - m_activity_avg_last_timestamp		533376	0					
ANR	533406	IdentifierDeclType	int		533376	0					
ANR	533407	Identifier	delta		533376	1					
ANR	533408	AssignmentExpression	delta = now - m_activity_avg_last_timestamp		533376	2		=			
ANR	533409	Identifier	delta		533376	0					
ANR	533410	AdditiveExpression	now - m_activity_avg_last_timestamp		533376	1		-			
ANR	533411	Identifier	now		533376	0					
ANR	533412	Identifier	m_activity_avg_last_timestamp		533376	1					
ANR	533413	ExpressionStatement	m_activity_avg_last_timestamp = now	1084:2:30730:30765	533376	2	True				
ANR	533414	AssignmentExpression	m_activity_avg_last_timestamp = now		533376	0		=			
ANR	533415	Identifier	m_activity_avg_last_timestamp		533376	0					
ANR	533416	Identifier	now		533376	1					
ANR	533417	IfStatement	if ( delta > 0 )		533376	3					
ANR	533418	Condition	delta > 0	1085:6:30773:30781	533376	0	True				
ANR	533419	RelationalExpression	delta > 0		533376	0		>			
ANR	533420	Identifier	delta		533376	0					
ANR	533421	PrimaryExpression	0		533376	1					
ANR	533422	CompoundStatement		9:18:219:219	533376	1					
ANR	533423	ExpressionStatement	m_num_cpus_avg = ( m_num_cpus_avg * m_activity_avg_time_sum + rip -> r_attr -> num_cpus ( ) * delta ) / ( m_activity_avg_time_sum + delta )	1086:3:30790:30917	533376	0	True				
ANR	533424	AssignmentExpression	m_num_cpus_avg = ( m_num_cpus_avg * m_activity_avg_time_sum + rip -> r_attr -> num_cpus ( ) * delta ) / ( m_activity_avg_time_sum + delta )		533376	0		=			
ANR	533425	Identifier	m_num_cpus_avg		533376	0					
ANR	533426	MultiplicativeExpression	( m_num_cpus_avg * m_activity_avg_time_sum + rip -> r_attr -> num_cpus ( ) * delta ) / ( m_activity_avg_time_sum + delta )		533376	1		/			
ANR	533427	AdditiveExpression	m_num_cpus_avg * m_activity_avg_time_sum + rip -> r_attr -> num_cpus ( ) * delta		533376	0		+			
ANR	533428	MultiplicativeExpression	m_num_cpus_avg * m_activity_avg_time_sum		533376	0		*			
ANR	533429	Identifier	m_num_cpus_avg		533376	0					
ANR	533430	Identifier	m_activity_avg_time_sum		533376	1					
ANR	533431	MultiplicativeExpression	rip -> r_attr -> num_cpus ( ) * delta		533376	1		*			
ANR	533432	CallExpression	rip -> r_attr -> num_cpus ( )		533376	0					
ANR	533433	Callee	rip -> r_attr -> num_cpus		533376	0					
ANR	533434	PtrMemberAccess	rip -> r_attr -> num_cpus		533376	0					
ANR	533435	PtrMemberAccess	rip -> r_attr		533376	0					
ANR	533436	Identifier	rip		533376	0					
ANR	533437	Identifier	r_attr		533376	1					
ANR	533438	Identifier	num_cpus		533376	1					
ANR	533439	ArgumentList			533376	1					
ANR	533440	Identifier	delta		533376	1					
ANR	533441	AdditiveExpression	m_activity_avg_time_sum + delta		533376	1		+			
ANR	533442	Identifier	m_activity_avg_time_sum		533376	0					
ANR	533443	Identifier	delta		533376	1					
ANR	533444	ExpressionStatement	m_draining_avg = ( m_draining_avg * m_activity_avg_time_sum + rip -> isDraining ( ) * delta ) / ( m_activity_avg_time_sum + delta )	1087:3:30922:31043	533376	1	True				
ANR	533445	AssignmentExpression	m_draining_avg = ( m_draining_avg * m_activity_avg_time_sum + rip -> isDraining ( ) * delta ) / ( m_activity_avg_time_sum + delta )		533376	0		=			
ANR	533446	Identifier	m_draining_avg		533376	0					
ANR	533447	MultiplicativeExpression	( m_draining_avg * m_activity_avg_time_sum + rip -> isDraining ( ) * delta ) / ( m_activity_avg_time_sum + delta )		533376	1		/			
ANR	533448	AdditiveExpression	m_draining_avg * m_activity_avg_time_sum + rip -> isDraining ( ) * delta		533376	0		+			
ANR	533449	MultiplicativeExpression	m_draining_avg * m_activity_avg_time_sum		533376	0		*			
ANR	533450	Identifier	m_draining_avg		533376	0					
ANR	533451	Identifier	m_activity_avg_time_sum		533376	1					
ANR	533452	MultiplicativeExpression	rip -> isDraining ( ) * delta		533376	1		*			
ANR	533453	CallExpression	rip -> isDraining ( )		533376	0					
ANR	533454	Callee	rip -> isDraining		533376	0					
ANR	533455	PtrMemberAccess	rip -> isDraining		533376	0					
ANR	533456	Identifier	rip		533376	0					
ANR	533457	Identifier	isDraining		533376	1					
ANR	533458	ArgumentList			533376	1					
ANR	533459	Identifier	delta		533376	1					
ANR	533460	AdditiveExpression	m_activity_avg_time_sum + delta		533376	1		+			
ANR	533461	Identifier	m_activity_avg_time_sum		533376	0					
ANR	533462	Identifier	delta		533376	1					
ANR	533463	ExpressionStatement	m_activity_avg_time_sum += delta	1088:3:31048:31080	533376	2	True				
ANR	533464	AssignmentExpression	m_activity_avg_time_sum += delta		533376	0		+=			
ANR	533465	Identifier	m_activity_avg_time_sum		533376	0					
ANR	533466	Identifier	delta		533376	1					
ANR	533467	ReturnType	void		533376	1					
ANR	533468	Identifier	ResState :: updateActivityAverages		533376	2					
ANR	533469	ParameterList			533376	3					
ANR	533470	CFGEntryNode	ENTRY		533376		True				
ANR	533471	CFGExitNode	EXIT		533376		True				
ANR	533472	Symbol	m_num_cpus_avg		533376						
ANR	533473	Symbol	m_activity_avg_last_timestamp		533376						
ANR	533474	Symbol	NULL		533376						
ANR	533475	Symbol	* rip		533376						
ANR	533476	Symbol	* rip -> r_attr		533376						
ANR	533477	Symbol	m_draining_avg		533376						
ANR	533478	Symbol	rip -> r_attr -> num_cpus		533376						
ANR	533479	Symbol	delta		533376						
ANR	533480	Symbol	* * rip		533376						
ANR	533481	Symbol	rip -> isDraining		533376						
ANR	533482	Symbol	m_activity_avg_time_sum		533376						
ANR	533483	Symbol	now		533376						
ANR	533484	Symbol	rip		533376						
ANR	533485	Symbol	time		533376						
ANR	533486	Symbol	rip -> r_attr		533376						
ANR	533487	Function	ResState :: updateHistoryTotals	1093:0:31092:31592							
ANR	533488	FunctionDef	ResState :: updateHistoryTotals (time_t now)		533487	0					
ANR	533489	CompoundStatement		1095:0:31141:31592	533487	0					
ANR	533490	IdentifierDeclStatement	"time_t * history_ptr = getHistoryTotalPtr ( r_state , r_act ) ;"	1098:1:31251:31307	533487	0	True				
ANR	533491	IdentifierDecl	"* history_ptr = getHistoryTotalPtr ( r_state , r_act )"		533487	0					
ANR	533492	IdentifierDeclType	time_t *		533487	0					
ANR	533493	Identifier	history_ptr		533487	1					
ANR	533494	AssignmentExpression	"* history_ptr = getHistoryTotalPtr ( r_state , r_act )"		533487	2		=			
ANR	533495	Identifier	history_ptr		533487	0					
ANR	533496	CallExpression	"getHistoryTotalPtr ( r_state , r_act )"		533487	1					
ANR	533497	Callee	getHistoryTotalPtr		533487	0					
ANR	533498	Identifier	getHistoryTotalPtr		533487	0					
ANR	533499	ArgumentList	r_state		533487	1					
ANR	533500	Argument	r_state		533487	0					
ANR	533501	Identifier	r_state		533487	0					
ANR	533502	Argument	r_act		533487	1					
ANR	533503	Identifier	r_act		533487	0					
ANR	533504	ExpressionStatement	* history_ptr += ( now - m_atime )	1099:1:31310:31341	533487	1	True				
ANR	533505	AssignmentExpression	* history_ptr += ( now - m_atime )		533487	0		+=			
ANR	533506	UnaryOperationExpression	* history_ptr		533487	0					
ANR	533507	UnaryOperator	*		533487	0					
ANR	533508	Identifier	history_ptr		533487	1					
ANR	533509	AdditiveExpression	now - m_atime		533487	1		-			
ANR	533510	Identifier	now		533487	0					
ANR	533511	Identifier	m_atime		533487	1					
ANR	533512	IfStatement	if ( r_state == unclaimed_state || r_state == drained_state )		533487	2					
ANR	533513	Condition	r_state == unclaimed_state || r_state == drained_state	1101:5:31349:31402	533487	0	True				
ANR	533514	OrExpression	r_state == unclaimed_state || r_state == drained_state		533487	0		||			
ANR	533515	EqualityExpression	r_state == unclaimed_state		533487	0		==			
ANR	533516	Identifier	r_state		533487	0					
ANR	533517	Identifier	unclaimed_state		533487	1					
ANR	533518	EqualityExpression	r_state == drained_state		533487	1		==			
ANR	533519	Identifier	r_state		533487	0					
ANR	533520	Identifier	drained_state		533487	1					
ANR	533521	CompoundStatement		10:2:317:381	533487	1					
ANR	533522	IdentifierDeclStatement	int delta = ( int ) ( ( now - m_atime ) * m_draining_avg * m_num_cpus_avg ) ;	1104:2:31459:31523	533487	0	True				
ANR	533523	IdentifierDecl	delta = ( int ) ( ( now - m_atime ) * m_draining_avg * m_num_cpus_avg )		533487	0					
ANR	533524	IdentifierDeclType	int		533487	0					
ANR	533525	Identifier	delta		533487	1					
ANR	533526	AssignmentExpression	delta = ( int ) ( ( now - m_atime ) * m_draining_avg * m_num_cpus_avg )		533487	2		=			
ANR	533527	Identifier	delta		533487	0					
ANR	533528	CastExpression	( int ) ( ( now - m_atime ) * m_draining_avg * m_num_cpus_avg )		533487	1					
ANR	533529	CastTarget	int		533487	0					
ANR	533530	MultiplicativeExpression	( now - m_atime ) * m_draining_avg * m_num_cpus_avg		533487	1		*			
ANR	533531	AdditiveExpression	now - m_atime		533487	0		-			
ANR	533532	Identifier	now		533487	0					
ANR	533533	Identifier	m_atime		533487	1					
ANR	533534	MultiplicativeExpression	m_draining_avg * m_num_cpus_avg		533487	1		*			
ANR	533535	Identifier	m_draining_avg		533487	0					
ANR	533536	Identifier	m_num_cpus_avg		533487	1					
ANR	533537	ExpressionStatement	m_time_draining_unclaimed += delta	1105:2:31527:31561	533487	1	True				
ANR	533538	AssignmentExpression	m_time_draining_unclaimed += delta		533487	0		+=			
ANR	533539	Identifier	m_time_draining_unclaimed		533487	0					
ANR	533540	Identifier	delta		533487	1					
ANR	533541	ExpressionStatement	resetActivityAverages ( )	1107:1:31567:31590	533487	3	True				
ANR	533542	CallExpression	resetActivityAverages ( )		533487	0					
ANR	533543	Callee	resetActivityAverages		533487	0					
ANR	533544	Identifier	resetActivityAverages		533487	0					
ANR	533545	ArgumentList			533487	1					
ANR	533546	ReturnType	void		533487	1					
ANR	533547	Identifier	ResState :: updateHistoryTotals		533487	2					
ANR	533548	ParameterList	time_t now		533487	3					
ANR	533549	Parameter	time_t now	1094:31:31128:31137	533487	0	True				
ANR	533550	ParameterType	time_t		533487	0					
ANR	533551	Identifier	now		533487	1					
ANR	533552	CFGEntryNode	ENTRY		533487		True				
ANR	533553	CFGExitNode	EXIT		533487		True				
ANR	533554	Symbol	m_num_cpus_avg		533487						
ANR	533555	Symbol	history_ptr		533487						
ANR	533556	Symbol	m_draining_avg		533487						
ANR	533557	Symbol	delta		533487						
ANR	533558	Symbol	r_state		533487						
ANR	533559	Symbol	m_atime		533487						
ANR	533560	Symbol	drained_state		533487						
ANR	533561	Symbol	m_time_draining_unclaimed		533487						
ANR	533562	Symbol	r_act		533487						
ANR	533563	Symbol	now		533487						
ANR	533564	Symbol	getHistoryTotalPtr		533487						
ANR	533565	Symbol	* history_ptr		533487						
ANR	533566	Symbol	unclaimed_state		533487						
ANR	533567	Function	ResState :: timeDrainingUnclaimed	1110:0:31595:31956							
ANR	533568	FunctionDef	ResState :: timeDrainingUnclaimed ()		533567	0					
ANR	533569	CompoundStatement		1112:0:31633:31956	533567	0					
ANR	533570	IdentifierDeclStatement	int total = m_time_draining_unclaimed ;	1113:1:31636:31673	533567	0	True				
ANR	533571	IdentifierDecl	total = m_time_draining_unclaimed		533567	0					
ANR	533572	IdentifierDeclType	int		533567	0					
ANR	533573	Identifier	total		533567	1					
ANR	533574	AssignmentExpression	total = m_time_draining_unclaimed		533567	2		=			
ANR	533575	Identifier	m_time_draining_unclaimed		533567	0					
ANR	533576	Identifier	m_time_draining_unclaimed		533567	1					
ANR	533577	IfStatement	if ( r_state == unclaimed_state || r_state == drained_state )		533567	1					
ANR	533578	Condition	r_state == unclaimed_state || r_state == drained_state	1116:5:31738:31791	533567	0	True				
ANR	533579	OrExpression	r_state == unclaimed_state || r_state == drained_state		533567	0		||			
ANR	533580	EqualityExpression	r_state == unclaimed_state		533567	0		==			
ANR	533581	Identifier	r_state		533567	0					
ANR	533582	Identifier	unclaimed_state		533567	1					
ANR	533583	EqualityExpression	r_state == drained_state		533567	1		==			
ANR	533584	Identifier	r_state		533567	0					
ANR	533585	Identifier	drained_state		533567	1					
ANR	533586	CompoundStatement		7:2:166:189	533567	1					
ANR	533587	IdentifierDeclStatement	time_t now = time ( NULL ) ;	1118:2:31800:31823	533567	0	True				
ANR	533588	IdentifierDecl	now = time ( NULL )		533567	0					
ANR	533589	IdentifierDeclType	time_t		533567	0					
ANR	533590	Identifier	now		533567	1					
ANR	533591	AssignmentExpression	now = time ( NULL )		533567	2		=			
ANR	533592	Identifier	now		533567	0					
ANR	533593	CallExpression	time ( NULL )		533567	1					
ANR	533594	Callee	time		533567	0					
ANR	533595	Identifier	time		533567	0					
ANR	533596	ArgumentList	NULL		533567	1					
ANR	533597	Argument	NULL		533567	0					
ANR	533598	Identifier	NULL		533567	0					
ANR	533599	ExpressionStatement	total += ( int ) ( ( now - m_atime ) * m_draining_avg * m_num_cpus_avg )	1120:2:31875:31936	533567	1	True				
ANR	533600	AssignmentExpression	total += ( int ) ( ( now - m_atime ) * m_draining_avg * m_num_cpus_avg )		533567	0		+=			
ANR	533601	Identifier	total		533567	0					
ANR	533602	CastExpression	( int ) ( ( now - m_atime ) * m_draining_avg * m_num_cpus_avg )		533567	1					
ANR	533603	CastTarget	int		533567	0					
ANR	533604	MultiplicativeExpression	( now - m_atime ) * m_draining_avg * m_num_cpus_avg		533567	1		*			
ANR	533605	AdditiveExpression	now - m_atime		533567	0		-			
ANR	533606	Identifier	now		533567	0					
ANR	533607	Identifier	m_atime		533567	1					
ANR	533608	MultiplicativeExpression	m_draining_avg * m_num_cpus_avg		533567	1		*			
ANR	533609	Identifier	m_draining_avg		533567	0					
ANR	533610	Identifier	m_num_cpus_avg		533567	1					
ANR	533611	ReturnStatement	return total ;	1122:1:31942:31954	533567	2	True				
ANR	533612	Identifier	total		533567	0					
ANR	533613	ReturnType	int		533567	1					
ANR	533614	Identifier	ResState :: timeDrainingUnclaimed		533567	2					
ANR	533615	ParameterList			533567	3					
ANR	533616	CFGEntryNode	ENTRY		533567		True				
ANR	533617	CFGExitNode	EXIT		533567		True				
ANR	533618	Symbol	m_num_cpus_avg		533567						
ANR	533619	Symbol	total		533567						
ANR	533620	Symbol	NULL		533567						
ANR	533621	Symbol	m_draining_avg		533567						
ANR	533622	Symbol	m_time_draining_unclaimed		533567						
ANR	533623	Symbol	now		533567						
ANR	533624	Symbol	r_state		533567						
ANR	533625	Symbol	time		533567						
ANR	533626	Symbol	unclaimed_state		533567						
ANR	533627	Symbol	m_atime		533567						
ANR	533628	Symbol	drained_state		533567						
ANR	533629	Function	ResState :: getHistoryTotalPtr	1125:0:31959:32112							
ANR	533630	FunctionDef	"ResState :: getHistoryTotalPtr (State _state , Activity _act)"		533629	0					
ANR	533631	CompoundStatement		1126:60:32027:32112	533629	0					
ANR	533632	IdentifierDeclStatement	"ResState :: HistoryInfo info = getHistoryInfo ( _state , _act ) ;"	1127:1:32030:32087	533629	0	True				
ANR	533633	IdentifierDecl	"info = getHistoryInfo ( _state , _act )"		533629	0					
ANR	533634	IdentifierDeclType	ResState :: HistoryInfo		533629	0					
ANR	533635	Identifier	info		533629	1					
ANR	533636	AssignmentExpression	"info = getHistoryInfo ( _state , _act )"		533629	2		=			
ANR	533637	Identifier	info		533629	0					
ANR	533638	CallExpression	"getHistoryInfo ( _state , _act )"		533629	1					
ANR	533639	Callee	getHistoryInfo		533629	0					
ANR	533640	Identifier	getHistoryInfo		533629	0					
ANR	533641	ArgumentList	_state		533629	1					
ANR	533642	Argument	_state		533629	0					
ANR	533643	Identifier	_state		533629	0					
ANR	533644	Argument	_act		533629	1					
ANR	533645	Identifier	_act		533629	0					
ANR	533646	ReturnStatement	return info . time_ptr ;	1128:1:32090:32110	533629	1	True				
ANR	533647	MemberAccess	info . time_ptr		533629	0					
ANR	533648	Identifier	info		533629	0					
ANR	533649	Identifier	time_ptr		533629	1					
ANR	533650	ReturnType	time_t *		533629	1					
ANR	533651	Identifier	ResState :: getHistoryTotalPtr		533629	2					
ANR	533652	ParameterList	"State _state , Activity _act"		533629	3					
ANR	533653	Parameter	State _state	1126:30:31997:32008	533629	0	True				
ANR	533654	ParameterType	State		533629	0					
ANR	533655	Identifier	_state		533629	1					
ANR	533656	Parameter	Activity _act	1126:44:32011:32023	533629	1	True				
ANR	533657	ParameterType	Activity		533629	0					
ANR	533658	Identifier	_act		533629	1					
ANR	533659	CFGEntryNode	ENTRY		533629		True				
ANR	533660	CFGExitNode	EXIT		533629		True				
ANR	533661	Symbol	getHistoryInfo		533629						
ANR	533662	Symbol	info . time_ptr		533629						
ANR	533663	Symbol	_state		533629						
ANR	533664	Symbol	_act		533629						
ANR	533665	Symbol	info		533629						
ANR	533666	Function	ResState :: getHistoryTotalAttr	1132:0:32116:32275							
ANR	533667	FunctionDef	"ResState :: getHistoryTotalAttr (State _state , Activity _act)"		533666	0					
ANR	533668	CompoundStatement		1133:61:32189:32275	533666	0					
ANR	533669	IdentifierDeclStatement	"ResState :: HistoryInfo info = getHistoryInfo ( _state , _act ) ;"	1134:1:32192:32249	533666	0	True				
ANR	533670	IdentifierDecl	"info = getHistoryInfo ( _state , _act )"		533666	0					
ANR	533671	IdentifierDeclType	ResState :: HistoryInfo		533666	0					
ANR	533672	Identifier	info		533666	1					
ANR	533673	AssignmentExpression	"info = getHistoryInfo ( _state , _act )"		533666	2		=			
ANR	533674	Identifier	info		533666	0					
ANR	533675	CallExpression	"getHistoryInfo ( _state , _act )"		533666	1					
ANR	533676	Callee	getHistoryInfo		533666	0					
ANR	533677	Identifier	getHistoryInfo		533666	0					
ANR	533678	ArgumentList	_state		533666	1					
ANR	533679	Argument	_state		533666	0					
ANR	533680	Identifier	_state		533666	0					
ANR	533681	Argument	_act		533666	1					
ANR	533682	Identifier	_act		533666	0					
ANR	533683	ReturnStatement	return info . attr_name ;	1135:1:32252:32273	533666	1	True				
ANR	533684	MemberAccess	info . attr_name		533666	0					
ANR	533685	Identifier	info		533666	0					
ANR	533686	Identifier	attr_name		533666	1					
ANR	533687	ReturnType	const char *		533666	1					
ANR	533688	Identifier	ResState :: getHistoryTotalAttr		533666	2					
ANR	533689	ParameterList	"State _state , Activity _act"		533666	3					
ANR	533690	Parameter	State _state	1133:31:32159:32170	533666	0	True				
ANR	533691	ParameterType	State		533666	0					
ANR	533692	Identifier	_state		533666	1					
ANR	533693	Parameter	Activity _act	1133:45:32173:32185	533666	1	True				
ANR	533694	ParameterType	Activity		533666	0					
ANR	533695	Identifier	_act		533666	1					
ANR	533696	CFGEntryNode	ENTRY		533666		True				
ANR	533697	CFGExitNode	EXIT		533666		True				
ANR	533698	Symbol	getHistoryInfo		533666						
ANR	533699	Symbol	info . attr_name		533666						
ANR	533700	Symbol	_state		533666						
ANR	533701	Symbol	_act		533666						
ANR	533702	Symbol	info		533666						
ANR	533703	Function	ResState :: getHistoryInfo	1139:0:32279:35420							
ANR	533704	FunctionDef	"ResState :: getHistoryInfo (State _state , Activity _act)"		533703	0					
ANR	533705	CompoundStatement		1140:56:32357:35420	533703	0					
ANR	533706	IdentifierDeclStatement	ResState :: HistoryInfo info ;	1141:1:32360:32386	533703	0	True				
ANR	533707	IdentifierDecl	info		533703	0					
ANR	533708	IdentifierDeclType	ResState :: HistoryInfo		533703	0					
ANR	533709	Identifier	info		533703	1					
ANR	533710	IdentifierDeclStatement	time_t * var_ptr = NULL ;	1142:1:32389:32411	533703	1	True				
ANR	533711	IdentifierDecl	* var_ptr = NULL		533703	0					
ANR	533712	IdentifierDeclType	time_t *		533703	0					
ANR	533713	Identifier	var_ptr		533703	1					
ANR	533714	AssignmentExpression	* var_ptr = NULL		533703	2		=			
ANR	533715	Identifier	NULL		533703	0					
ANR	533716	Identifier	NULL		533703	1					
ANR	533717	IdentifierDeclStatement	const char * attr_name = NULL ;	1143:1:32414:32442	533703	2	True				
ANR	533718	IdentifierDecl	* attr_name = NULL		533703	0					
ANR	533719	IdentifierDeclType	const char *		533703	0					
ANR	533720	Identifier	attr_name		533703	1					
ANR	533721	AssignmentExpression	* attr_name = NULL		533703	2		=			
ANR	533722	Identifier	NULL		533703	0					
ANR	533723	Identifier	NULL		533703	1					
ANR	533724	SwitchStatement	switch ( _state )		533703	3					
ANR	533725	Condition	_state	1144:9:32453:32458	533703	0	True				
ANR	533726	Identifier	_state		533703	0					
ANR	533727	CompoundStatement		5:17:103:103	533703	1					
ANR	533728	Label	case owner_state :	1145:1:32464:32480	533703	0	True				
ANR	533729	Identifier	owner_state		533703	0					
ANR	533730	ExpressionStatement	var_ptr = & m_time_owner_idle	1146:2:32484:32512	533703	1	True				
ANR	533731	AssignmentExpression	var_ptr = & m_time_owner_idle		533703	0		=			
ANR	533732	Identifier	var_ptr		533703	0					
ANR	533733	UnaryOperationExpression	& m_time_owner_idle		533703	1					
ANR	533734	UnaryOperator	&		533703	0					
ANR	533735	Identifier	m_time_owner_idle		533703	1					
ANR	533736	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_OWNER_IDLE	1147:2:32516:32554	533703	2	True				
ANR	533737	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_OWNER_IDLE		533703	0		=			
ANR	533738	Identifier	attr_name		533703	0					
ANR	533739	Identifier	ATTR_TOTAL_TIME_OWNER_IDLE		533703	1					
ANR	533740	BreakStatement	break ;	1148:2:32558:32563	533703	3	True				
ANR	533741	Label	case unclaimed_state :	1149:1:32566:32586	533703	4	True				
ANR	533742	Identifier	unclaimed_state		533703	0					
ANR	533743	SwitchStatement	switch ( _act )		533703	5					
ANR	533744	Condition	_act	1150:10:32598:32601	533703	0	True				
ANR	533745	Identifier	_act		533703	0					
ANR	533746	CompoundStatement		11:16:246:246	533703	1					
ANR	533747	Label	case idle_act :	1151:2:32608:32621	533703	0	True				
ANR	533748	Identifier	idle_act		533703	0					
ANR	533749	ExpressionStatement	var_ptr = & m_time_unclaimed_idle	1152:3:32626:32658	533703	1	True				
ANR	533750	AssignmentExpression	var_ptr = & m_time_unclaimed_idle		533703	0		=			
ANR	533751	Identifier	var_ptr		533703	0					
ANR	533752	UnaryOperationExpression	& m_time_unclaimed_idle		533703	1					
ANR	533753	UnaryOperator	&		533703	0					
ANR	533754	Identifier	m_time_unclaimed_idle		533703	1					
ANR	533755	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_UNCLAIMED_IDLE	1153:3:32663:32705	533703	2	True				
ANR	533756	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_UNCLAIMED_IDLE		533703	0		=			
ANR	533757	Identifier	attr_name		533703	0					
ANR	533758	Identifier	ATTR_TOTAL_TIME_UNCLAIMED_IDLE		533703	1					
ANR	533759	BreakStatement	break ;	1154:3:32710:32715	533703	3	True				
ANR	533760	Label	case benchmarking_act :	1155:2:32719:32740	533703	4	True				
ANR	533761	Identifier	benchmarking_act		533703	0					
ANR	533762	ExpressionStatement	var_ptr = & m_time_unclaimed_benchmarking	1156:3:32745:32785	533703	5	True				
ANR	533763	AssignmentExpression	var_ptr = & m_time_unclaimed_benchmarking		533703	0		=			
ANR	533764	Identifier	var_ptr		533703	0					
ANR	533765	UnaryOperationExpression	& m_time_unclaimed_benchmarking		533703	1					
ANR	533766	UnaryOperator	&		533703	0					
ANR	533767	Identifier	m_time_unclaimed_benchmarking		533703	1					
ANR	533768	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_UNCLAIMED_BENCHMARKING	1157:3:32790:32840	533703	6	True				
ANR	533769	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_UNCLAIMED_BENCHMARKING		533703	0		=			
ANR	533770	Identifier	attr_name		533703	0					
ANR	533771	Identifier	ATTR_TOTAL_TIME_UNCLAIMED_BENCHMARKING		533703	1					
ANR	533772	BreakStatement	break ;	1158:3:32845:32850	533703	7	True				
ANR	533773	Label	default :	1159:2:32854:32861	533703	8	True				
ANR	533774	Identifier	default		533703	0					
ANR	533775	ExpressionStatement	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"	1160:3:32866:33007	533703	9	True				
ANR	533776	CallExpression	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"		533703	0					
ANR	533777	Callee	EXCEPT		533703	0					
ANR	533778	Identifier	EXCEPT		533703	0					
ANR	533779	ArgumentList	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	1					
ANR	533780	Argument	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	533781	PrimaryExpression	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	533782	Argument	activity_to_string ( _act )		533703	1					
ANR	533783	CallExpression	activity_to_string ( _act )		533703	0					
ANR	533784	Callee	activity_to_string		533703	0					
ANR	533785	Identifier	activity_to_string		533703	0					
ANR	533786	ArgumentList	_act		533703	1					
ANR	533787	Argument	_act		533703	0					
ANR	533788	Identifier	_act		533703	0					
ANR	533789	Argument	( int ) _act		533703	2					
ANR	533790	CastExpression	( int ) _act		533703	0					
ANR	533791	CastTarget	int		533703	0					
ANR	533792	Identifier	_act		533703	1					
ANR	533793	Argument	state_to_string ( _state )		533703	3					
ANR	533794	CallExpression	state_to_string ( _state )		533703	0					
ANR	533795	Callee	state_to_string		533703	0					
ANR	533796	Identifier	state_to_string		533703	0					
ANR	533797	ArgumentList	_state		533703	1					
ANR	533798	Argument	_state		533703	0					
ANR	533799	Identifier	_state		533703	0					
ANR	533800	BreakStatement	break ;	1164:2:33015:33020	533703	6	True				
ANR	533801	Label	case matched_state :	1165:1:33023:33041	533703	7	True				
ANR	533802	Identifier	matched_state		533703	0					
ANR	533803	ExpressionStatement	var_ptr = & m_time_matched_idle	1166:2:33045:33075	533703	8	True				
ANR	533804	AssignmentExpression	var_ptr = & m_time_matched_idle		533703	0		=			
ANR	533805	Identifier	var_ptr		533703	0					
ANR	533806	UnaryOperationExpression	& m_time_matched_idle		533703	1					
ANR	533807	UnaryOperator	&		533703	0					
ANR	533808	Identifier	m_time_matched_idle		533703	1					
ANR	533809	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_MATCHED_IDLE	1167:2:33079:33119	533703	9	True				
ANR	533810	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_MATCHED_IDLE		533703	0		=			
ANR	533811	Identifier	attr_name		533703	0					
ANR	533812	Identifier	ATTR_TOTAL_TIME_MATCHED_IDLE		533703	1					
ANR	533813	BreakStatement	break ;	1168:2:33123:33128	533703	10	True				
ANR	533814	Label	case claimed_state :	1169:1:33131:33149	533703	11	True				
ANR	533815	Identifier	claimed_state		533703	0					
ANR	533816	SwitchStatement	switch ( _act )		533703	12					
ANR	533817	Condition	_act	1170:10:33161:33164	533703	0	True				
ANR	533818	Identifier	_act		533703	0					
ANR	533819	CompoundStatement		31:16:809:809	533703	1					
ANR	533820	Label	case idle_act :	1171:2:33171:33184	533703	0	True				
ANR	533821	Identifier	idle_act		533703	0					
ANR	533822	ExpressionStatement	var_ptr = & m_time_claimed_idle	1172:3:33189:33219	533703	1	True				
ANR	533823	AssignmentExpression	var_ptr = & m_time_claimed_idle		533703	0		=			
ANR	533824	Identifier	var_ptr		533703	0					
ANR	533825	UnaryOperationExpression	& m_time_claimed_idle		533703	1					
ANR	533826	UnaryOperator	&		533703	0					
ANR	533827	Identifier	m_time_claimed_idle		533703	1					
ANR	533828	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_CLAIMED_IDLE	1173:3:33224:33264	533703	2	True				
ANR	533829	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_CLAIMED_IDLE		533703	0		=			
ANR	533830	Identifier	attr_name		533703	0					
ANR	533831	Identifier	ATTR_TOTAL_TIME_CLAIMED_IDLE		533703	1					
ANR	533832	BreakStatement	break ;	1174:3:33269:33274	533703	3	True				
ANR	533833	Label	case busy_act :	1175:2:33278:33291	533703	4	True				
ANR	533834	Identifier	busy_act		533703	0					
ANR	533835	ExpressionStatement	var_ptr = & m_time_claimed_busy	1176:3:33296:33326	533703	5	True				
ANR	533836	AssignmentExpression	var_ptr = & m_time_claimed_busy		533703	0		=			
ANR	533837	Identifier	var_ptr		533703	0					
ANR	533838	UnaryOperationExpression	& m_time_claimed_busy		533703	1					
ANR	533839	UnaryOperator	&		533703	0					
ANR	533840	Identifier	m_time_claimed_busy		533703	1					
ANR	533841	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_CLAIMED_BUSY	1177:3:33331:33371	533703	6	True				
ANR	533842	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_CLAIMED_BUSY		533703	0		=			
ANR	533843	Identifier	attr_name		533703	0					
ANR	533844	Identifier	ATTR_TOTAL_TIME_CLAIMED_BUSY		533703	1					
ANR	533845	BreakStatement	break ;	1178:3:33376:33381	533703	7	True				
ANR	533846	Label	case suspended_act :	1179:2:33385:33403	533703	8	True				
ANR	533847	Identifier	suspended_act		533703	0					
ANR	533848	ExpressionStatement	var_ptr = & m_time_claimed_suspended	1180:3:33408:33443	533703	9	True				
ANR	533849	AssignmentExpression	var_ptr = & m_time_claimed_suspended		533703	0		=			
ANR	533850	Identifier	var_ptr		533703	0					
ANR	533851	UnaryOperationExpression	& m_time_claimed_suspended		533703	1					
ANR	533852	UnaryOperator	&		533703	0					
ANR	533853	Identifier	m_time_claimed_suspended		533703	1					
ANR	533854	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_CLAIMED_SUSPENDED	1181:3:33448:33493	533703	10	True				
ANR	533855	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_CLAIMED_SUSPENDED		533703	0		=			
ANR	533856	Identifier	attr_name		533703	0					
ANR	533857	Identifier	ATTR_TOTAL_TIME_CLAIMED_SUSPENDED		533703	1					
ANR	533858	BreakStatement	break ;	1182:3:33498:33503	533703	11	True				
ANR	533859	Label	case retiring_act :	1183:2:33507:33524	533703	12	True				
ANR	533860	Identifier	retiring_act		533703	0					
ANR	533861	ExpressionStatement	var_ptr = & m_time_claimed_retiring	1184:3:33529:33563	533703	13	True				
ANR	533862	AssignmentExpression	var_ptr = & m_time_claimed_retiring		533703	0		=			
ANR	533863	Identifier	var_ptr		533703	0					
ANR	533864	UnaryOperationExpression	& m_time_claimed_retiring		533703	1					
ANR	533865	UnaryOperator	&		533703	0					
ANR	533866	Identifier	m_time_claimed_retiring		533703	1					
ANR	533867	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_CLAIMED_RETIRING	1185:3:33568:33612	533703	14	True				
ANR	533868	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_CLAIMED_RETIRING		533703	0		=			
ANR	533869	Identifier	attr_name		533703	0					
ANR	533870	Identifier	ATTR_TOTAL_TIME_CLAIMED_RETIRING		533703	1					
ANR	533871	BreakStatement	break ;	1186:3:33617:33622	533703	15	True				
ANR	533872	Label	default :	1187:2:33626:33633	533703	16	True				
ANR	533873	Identifier	default		533703	0					
ANR	533874	ExpressionStatement	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"	1188:3:33638:33779	533703	17	True				
ANR	533875	CallExpression	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"		533703	0					
ANR	533876	Callee	EXCEPT		533703	0					
ANR	533877	Identifier	EXCEPT		533703	0					
ANR	533878	ArgumentList	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	1					
ANR	533879	Argument	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	533880	PrimaryExpression	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	533881	Argument	activity_to_string ( _act )		533703	1					
ANR	533882	CallExpression	activity_to_string ( _act )		533703	0					
ANR	533883	Callee	activity_to_string		533703	0					
ANR	533884	Identifier	activity_to_string		533703	0					
ANR	533885	ArgumentList	_act		533703	1					
ANR	533886	Argument	_act		533703	0					
ANR	533887	Identifier	_act		533703	0					
ANR	533888	Argument	( int ) _act		533703	2					
ANR	533889	CastExpression	( int ) _act		533703	0					
ANR	533890	CastTarget	int		533703	0					
ANR	533891	Identifier	_act		533703	1					
ANR	533892	Argument	state_to_string ( _state )		533703	3					
ANR	533893	CallExpression	state_to_string ( _state )		533703	0					
ANR	533894	Callee	state_to_string		533703	0					
ANR	533895	Identifier	state_to_string		533703	0					
ANR	533896	ArgumentList	_state		533703	1					
ANR	533897	Argument	_state		533703	0					
ANR	533898	Identifier	_state		533703	0					
ANR	533899	BreakStatement	break ;	1192:2:33787:33792	533703	13	True				
ANR	533900	Label	case preempting_state :	1193:1:33795:33816	533703	14	True				
ANR	533901	Identifier	preempting_state		533703	0					
ANR	533902	SwitchStatement	switch ( _act )		533703	15					
ANR	533903	Condition	_act	1194:10:33828:33831	533703	0	True				
ANR	533904	Identifier	_act		533703	0					
ANR	533905	CompoundStatement		55:16:1476:1476	533703	1					
ANR	533906	Label	case vacating_act :	1195:2:33838:33855	533703	0	True				
ANR	533907	Identifier	vacating_act		533703	0					
ANR	533908	ExpressionStatement	var_ptr = & m_time_preempting_vacating	1196:3:33860:33897	533703	1	True				
ANR	533909	AssignmentExpression	var_ptr = & m_time_preempting_vacating		533703	0		=			
ANR	533910	Identifier	var_ptr		533703	0					
ANR	533911	UnaryOperationExpression	& m_time_preempting_vacating		533703	1					
ANR	533912	UnaryOperator	&		533703	0					
ANR	533913	Identifier	m_time_preempting_vacating		533703	1					
ANR	533914	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_PREEMPTING_VACATING	1197:3:33902:33949	533703	2	True				
ANR	533915	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_PREEMPTING_VACATING		533703	0		=			
ANR	533916	Identifier	attr_name		533703	0					
ANR	533917	Identifier	ATTR_TOTAL_TIME_PREEMPTING_VACATING		533703	1					
ANR	533918	BreakStatement	break ;	1198:3:33954:33959	533703	3	True				
ANR	533919	Label	case killing_act :	1199:2:33963:33979	533703	4	True				
ANR	533920	Identifier	killing_act		533703	0					
ANR	533921	ExpressionStatement	var_ptr = & m_time_preempting_killing	1200:3:33984:34020	533703	5	True				
ANR	533922	AssignmentExpression	var_ptr = & m_time_preempting_killing		533703	0		=			
ANR	533923	Identifier	var_ptr		533703	0					
ANR	533924	UnaryOperationExpression	& m_time_preempting_killing		533703	1					
ANR	533925	UnaryOperator	&		533703	0					
ANR	533926	Identifier	m_time_preempting_killing		533703	1					
ANR	533927	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_PREEMPTING_KILLING	1201:3:34025:34071	533703	6	True				
ANR	533928	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_PREEMPTING_KILLING		533703	0		=			
ANR	533929	Identifier	attr_name		533703	0					
ANR	533930	Identifier	ATTR_TOTAL_TIME_PREEMPTING_KILLING		533703	1					
ANR	533931	BreakStatement	break ;	1202:3:34076:34081	533703	7	True				
ANR	533932	Label	default :	1203:2:34085:34092	533703	8	True				
ANR	533933	Identifier	default		533703	0					
ANR	533934	ExpressionStatement	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"	1204:3:34097:34238	533703	9	True				
ANR	533935	CallExpression	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"		533703	0					
ANR	533936	Callee	EXCEPT		533703	0					
ANR	533937	Identifier	EXCEPT		533703	0					
ANR	533938	ArgumentList	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	1					
ANR	533939	Argument	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	533940	PrimaryExpression	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	533941	Argument	activity_to_string ( _act )		533703	1					
ANR	533942	CallExpression	activity_to_string ( _act )		533703	0					
ANR	533943	Callee	activity_to_string		533703	0					
ANR	533944	Identifier	activity_to_string		533703	0					
ANR	533945	ArgumentList	_act		533703	1					
ANR	533946	Argument	_act		533703	0					
ANR	533947	Identifier	_act		533703	0					
ANR	533948	Argument	( int ) _act		533703	2					
ANR	533949	CastExpression	( int ) _act		533703	0					
ANR	533950	CastTarget	int		533703	0					
ANR	533951	Identifier	_act		533703	1					
ANR	533952	Argument	state_to_string ( _state )		533703	3					
ANR	533953	CallExpression	state_to_string ( _state )		533703	0					
ANR	533954	Callee	state_to_string		533703	0					
ANR	533955	Identifier	state_to_string		533703	0					
ANR	533956	ArgumentList	_state		533703	1					
ANR	533957	Argument	_state		533703	0					
ANR	533958	Identifier	_state		533703	0					
ANR	533959	BreakStatement	break ;	1208:2:34246:34251	533703	16	True				
ANR	533960	Label	case drained_state :	1209:1:34254:34272	533703	17	True				
ANR	533961	Identifier	drained_state		533703	0					
ANR	533962	SwitchStatement	switch ( _act )		533703	18					
ANR	533963	Condition	_act	1210:10:34284:34287	533703	0	True				
ANR	533964	Identifier	_act		533703	0					
ANR	533965	CompoundStatement		71:16:1932:1932	533703	1					
ANR	533966	Label	case idle_act :	1211:2:34294:34307	533703	0	True				
ANR	533967	Identifier	idle_act		533703	0					
ANR	533968	ExpressionStatement	var_ptr = & m_time_drained_idle	1212:3:34312:34342	533703	1	True				
ANR	533969	AssignmentExpression	var_ptr = & m_time_drained_idle		533703	0		=			
ANR	533970	Identifier	var_ptr		533703	0					
ANR	533971	UnaryOperationExpression	& m_time_drained_idle		533703	1					
ANR	533972	UnaryOperator	&		533703	0					
ANR	533973	Identifier	m_time_drained_idle		533703	1					
ANR	533974	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_DRAINED_IDLE	1213:3:34347:34387	533703	2	True				
ANR	533975	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_DRAINED_IDLE		533703	0		=			
ANR	533976	Identifier	attr_name		533703	0					
ANR	533977	Identifier	ATTR_TOTAL_TIME_DRAINED_IDLE		533703	1					
ANR	533978	BreakStatement	break ;	1214:3:34392:34397	533703	3	True				
ANR	533979	Label	case retiring_act :	1215:2:34401:34418	533703	4	True				
ANR	533980	Identifier	retiring_act		533703	0					
ANR	533981	ExpressionStatement	var_ptr = & m_time_drained_retiring	1216:3:34423:34457	533703	5	True				
ANR	533982	AssignmentExpression	var_ptr = & m_time_drained_retiring		533703	0		=			
ANR	533983	Identifier	var_ptr		533703	0					
ANR	533984	UnaryOperationExpression	& m_time_drained_retiring		533703	1					
ANR	533985	UnaryOperator	&		533703	0					
ANR	533986	Identifier	m_time_drained_retiring		533703	1					
ANR	533987	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_DRAINED_RETIRING	1217:3:34462:34506	533703	6	True				
ANR	533988	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_DRAINED_RETIRING		533703	0		=			
ANR	533989	Identifier	attr_name		533703	0					
ANR	533990	Identifier	ATTR_TOTAL_TIME_DRAINED_RETIRING		533703	1					
ANR	533991	BreakStatement	break ;	1218:3:34511:34516	533703	7	True				
ANR	533992	Label	default :	1219:2:34520:34527	533703	8	True				
ANR	533993	Identifier	default		533703	0					
ANR	533994	ExpressionStatement	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"	1220:3:34532:34673	533703	9	True				
ANR	533995	CallExpression	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"		533703	0					
ANR	533996	Callee	EXCEPT		533703	0					
ANR	533997	Identifier	EXCEPT		533703	0					
ANR	533998	ArgumentList	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	1					
ANR	533999	Argument	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	534000	PrimaryExpression	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	534001	Argument	activity_to_string ( _act )		533703	1					
ANR	534002	CallExpression	activity_to_string ( _act )		533703	0					
ANR	534003	Callee	activity_to_string		533703	0					
ANR	534004	Identifier	activity_to_string		533703	0					
ANR	534005	ArgumentList	_act		533703	1					
ANR	534006	Argument	_act		533703	0					
ANR	534007	Identifier	_act		533703	0					
ANR	534008	Argument	( int ) _act		533703	2					
ANR	534009	CastExpression	( int ) _act		533703	0					
ANR	534010	CastTarget	int		533703	0					
ANR	534011	Identifier	_act		533703	1					
ANR	534012	Argument	state_to_string ( _state )		533703	3					
ANR	534013	CallExpression	state_to_string ( _state )		533703	0					
ANR	534014	Callee	state_to_string		533703	0					
ANR	534015	Identifier	state_to_string		533703	0					
ANR	534016	ArgumentList	_state		533703	1					
ANR	534017	Argument	_state		533703	0					
ANR	534018	Identifier	_state		533703	0					
ANR	534019	BreakStatement	break ;	1224:2:34681:34686	533703	19	True				
ANR	534020	Label	case backfill_state :	1225:1:34689:34708	533703	20	True				
ANR	534021	Identifier	backfill_state		533703	0					
ANR	534022	SwitchStatement	switch ( _act )		533703	21					
ANR	534023	Condition	_act	1226:10:34720:34723	533703	0	True				
ANR	534024	Identifier	_act		533703	0					
ANR	534025	CompoundStatement		87:16:2368:2368	533703	1					
ANR	534026	Label	case idle_act :	1227:2:34730:34743	533703	0	True				
ANR	534027	Identifier	idle_act		533703	0					
ANR	534028	ExpressionStatement	var_ptr = & m_time_backfill_idle	1228:3:34748:34779	533703	1	True				
ANR	534029	AssignmentExpression	var_ptr = & m_time_backfill_idle		533703	0		=			
ANR	534030	Identifier	var_ptr		533703	0					
ANR	534031	UnaryOperationExpression	& m_time_backfill_idle		533703	1					
ANR	534032	UnaryOperator	&		533703	0					
ANR	534033	Identifier	m_time_backfill_idle		533703	1					
ANR	534034	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_BACKFILL_IDLE	1229:3:34784:34825	533703	2	True				
ANR	534035	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_BACKFILL_IDLE		533703	0		=			
ANR	534036	Identifier	attr_name		533703	0					
ANR	534037	Identifier	ATTR_TOTAL_TIME_BACKFILL_IDLE		533703	1					
ANR	534038	BreakStatement	break ;	1230:3:34830:34835	533703	3	True				
ANR	534039	Label	case busy_act :	1231:2:34839:34852	533703	4	True				
ANR	534040	Identifier	busy_act		533703	0					
ANR	534041	ExpressionStatement	var_ptr = & m_time_backfill_busy	1232:3:34857:34888	533703	5	True				
ANR	534042	AssignmentExpression	var_ptr = & m_time_backfill_busy		533703	0		=			
ANR	534043	Identifier	var_ptr		533703	0					
ANR	534044	UnaryOperationExpression	& m_time_backfill_busy		533703	1					
ANR	534045	UnaryOperator	&		533703	0					
ANR	534046	Identifier	m_time_backfill_busy		533703	1					
ANR	534047	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_BACKFILL_BUSY	1233:3:34893:34934	533703	6	True				
ANR	534048	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_BACKFILL_BUSY		533703	0		=			
ANR	534049	Identifier	attr_name		533703	0					
ANR	534050	Identifier	ATTR_TOTAL_TIME_BACKFILL_BUSY		533703	1					
ANR	534051	BreakStatement	break ;	1234:3:34939:34944	533703	7	True				
ANR	534052	Label	case killing_act :	1235:2:34948:34964	533703	8	True				
ANR	534053	Identifier	killing_act		533703	0					
ANR	534054	ExpressionStatement	var_ptr = & m_time_backfill_killing	1236:3:34969:35003	533703	9	True				
ANR	534055	AssignmentExpression	var_ptr = & m_time_backfill_killing		533703	0		=			
ANR	534056	Identifier	var_ptr		533703	0					
ANR	534057	UnaryOperationExpression	& m_time_backfill_killing		533703	1					
ANR	534058	UnaryOperator	&		533703	0					
ANR	534059	Identifier	m_time_backfill_killing		533703	1					
ANR	534060	ExpressionStatement	attr_name = ATTR_TOTAL_TIME_BACKFILL_KILLING	1237:3:35008:35052	533703	10	True				
ANR	534061	AssignmentExpression	attr_name = ATTR_TOTAL_TIME_BACKFILL_KILLING		533703	0		=			
ANR	534062	Identifier	attr_name		533703	0					
ANR	534063	Identifier	ATTR_TOTAL_TIME_BACKFILL_KILLING		533703	1					
ANR	534064	BreakStatement	break ;	1238:3:35057:35062	533703	11	True				
ANR	534065	Label	default :	1239:2:35066:35073	533703	12	True				
ANR	534066	Identifier	default		533703	0					
ANR	534067	ExpressionStatement	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"	1240:3:35078:35219	533703	13	True				
ANR	534068	CallExpression	"EXCEPT ( ""Unexpected activity (%s: %d) in getHistoryInfo() for %s"" , activity_to_string ( _act ) , ( int ) _act , state_to_string ( _state ) )"		533703	0					
ANR	534069	Callee	EXCEPT		533703	0					
ANR	534070	Identifier	EXCEPT		533703	0					
ANR	534071	ArgumentList	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	1					
ANR	534072	Argument	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	534073	PrimaryExpression	"""Unexpected activity (%s: %d) in getHistoryInfo() for %s"""		533703	0					
ANR	534074	Argument	activity_to_string ( _act )		533703	1					
ANR	534075	CallExpression	activity_to_string ( _act )		533703	0					
ANR	534076	Callee	activity_to_string		533703	0					
ANR	534077	Identifier	activity_to_string		533703	0					
ANR	534078	ArgumentList	_act		533703	1					
ANR	534079	Argument	_act		533703	0					
ANR	534080	Identifier	_act		533703	0					
ANR	534081	Argument	( int ) _act		533703	2					
ANR	534082	CastExpression	( int ) _act		533703	0					
ANR	534083	CastTarget	int		533703	0					
ANR	534084	Identifier	_act		533703	1					
ANR	534085	Argument	state_to_string ( _state )		533703	3					
ANR	534086	CallExpression	state_to_string ( _state )		533703	0					
ANR	534087	Callee	state_to_string		533703	0					
ANR	534088	Identifier	state_to_string		533703	0					
ANR	534089	ArgumentList	_state		533703	1					
ANR	534090	Argument	_state		533703	0					
ANR	534091	Identifier	_state		533703	0					
ANR	534092	BreakStatement	break ;	1244:2:35227:35232	533703	22	True				
ANR	534093	Label	default :	1245:1:35235:35242	533703	23	True				
ANR	534094	Identifier	default		533703	0					
ANR	534095	ExpressionStatement	"EXCEPT ( ""Unexpected state (%s: %d) in getHistoryInfo()"" , state_to_string ( _state ) , ( int ) _state )"	1246:2:35246:35345	533703	24	True				
ANR	534096	CallExpression	"EXCEPT ( ""Unexpected state (%s: %d) in getHistoryInfo()"" , state_to_string ( _state ) , ( int ) _state )"		533703	0					
ANR	534097	Callee	EXCEPT		533703	0					
ANR	534098	Identifier	EXCEPT		533703	0					
ANR	534099	ArgumentList	"""Unexpected state (%s: %d) in getHistoryInfo()"""		533703	1					
ANR	534100	Argument	"""Unexpected state (%s: %d) in getHistoryInfo()"""		533703	0					
ANR	534101	PrimaryExpression	"""Unexpected state (%s: %d) in getHistoryInfo()"""		533703	0					
ANR	534102	Argument	state_to_string ( _state )		533703	1					
ANR	534103	CallExpression	state_to_string ( _state )		533703	0					
ANR	534104	Callee	state_to_string		533703	0					
ANR	534105	Identifier	state_to_string		533703	0					
ANR	534106	ArgumentList	_state		533703	1					
ANR	534107	Argument	_state		533703	0					
ANR	534108	Identifier	_state		533703	0					
ANR	534109	Argument	( int ) _state		533703	2					
ANR	534110	CastExpression	( int ) _state		533703	0					
ANR	534111	CastTarget	int		533703	0					
ANR	534112	Identifier	_state		533703	1					
ANR	534113	ExpressionStatement	info . time_ptr = var_ptr	1250:1:35352:35375	533703	4	True				
ANR	534114	AssignmentExpression	info . time_ptr = var_ptr		533703	0		=			
ANR	534115	MemberAccess	info . time_ptr		533703	0					
ANR	534116	Identifier	info		533703	0					
ANR	534117	Identifier	time_ptr		533703	1					
ANR	534118	Identifier	var_ptr		533703	1					
ANR	534119	ExpressionStatement	info . attr_name = attr_name	1251:1:35378:35404	533703	5	True				
ANR	534120	AssignmentExpression	info . attr_name = attr_name		533703	0		=			
ANR	534121	MemberAccess	info . attr_name		533703	0					
ANR	534122	Identifier	info		533703	0					
ANR	534123	Identifier	attr_name		533703	1					
ANR	534124	Identifier	attr_name		533703	1					
ANR	534125	ReturnStatement	return info ;	1252:1:35407:35418	533703	6	True				
ANR	534126	Identifier	info		533703	0					
ANR	534127	ReturnType	ResState :: HistoryInfo		533703	1					
ANR	534128	Identifier	ResState :: getHistoryInfo		533703	2					
ANR	534129	ParameterList	"State _state , Activity _act"		533703	3					
ANR	534130	Parameter	State _state	1140:26:32327:32338	533703	0	True				
ANR	534131	ParameterType	State		533703	0					
ANR	534132	Identifier	_state		533703	1					
ANR	534133	Parameter	Activity _act	1140:40:32341:32353	533703	1	True				
ANR	534134	ParameterType	Activity		533703	0					
ANR	534135	Identifier	_act		533703	1					
ANR	534136	CFGEntryNode	ENTRY		533703		True				
ANR	534137	CFGExitNode	EXIT		533703		True				
ANR	534138	Symbol	ATTR_TOTAL_TIME_CLAIMED_BUSY		533703						
ANR	534139	Symbol	ATTR_TOTAL_TIME_PREEMPTING_KILLING		533703						
ANR	534140	Symbol	ATTR_TOTAL_TIME_CLAIMED_SUSPENDED		533703						
ANR	534141	Symbol	ATTR_TOTAL_TIME_BACKFILL_BUSY		533703						
ANR	534142	Symbol	& m_time_backfill_idle		533703						
ANR	534143	Symbol	var_ptr		533703						
ANR	534144	Symbol	& m_time_claimed_idle		533703						
ANR	534145	Symbol	& m_time_claimed_busy		533703						
ANR	534146	Symbol	& m_time_claimed_retiring		533703						
ANR	534147	Symbol	ATTR_TOTAL_TIME_UNCLAIMED_IDLE		533703						
ANR	534148	Symbol	ATTR_TOTAL_TIME_PREEMPTING_VACATING		533703						
ANR	534149	Symbol	& m_time_matched_idle		533703						
ANR	534150	Symbol	& m_time_owner_idle		533703						
ANR	534151	Symbol	ATTR_TOTAL_TIME_UNCLAIMED_BENCHMARKING		533703						
ANR	534152	Symbol	& m_time_preempting_vacating		533703						
ANR	534153	Symbol	& m_time_drained_idle		533703						
ANR	534154	Symbol	ATTR_TOTAL_TIME_DRAINED_IDLE		533703						
ANR	534155	Symbol	ATTR_TOTAL_TIME_DRAINED_RETIRING		533703						
ANR	534156	Symbol	info		533703						
ANR	534157	Symbol	ATTR_TOTAL_TIME_MATCHED_IDLE		533703						
ANR	534158	Symbol	NULL		533703						
ANR	534159	Symbol	& m_time_backfill_busy		533703						
ANR	534160	Symbol	ATTR_TOTAL_TIME_BACKFILL_IDLE		533703						
ANR	534161	Symbol	attr_name		533703						
ANR	534162	Symbol	ATTR_TOTAL_TIME_CLAIMED_IDLE		533703						
ANR	534163	Symbol	& m_time_backfill_killing		533703						
ANR	534164	Symbol	& m_time_claimed_suspended		533703						
ANR	534165	Symbol	& m_time_unclaimed_idle		533703						
ANR	534166	Symbol	ATTR_TOTAL_TIME_CLAIMED_RETIRING		533703						
ANR	534167	Symbol	& m_time_preempting_killing		533703						
ANR	534168	Symbol	activity_to_string		533703						
ANR	534169	Symbol	ATTR_TOTAL_TIME_BACKFILL_KILLING		533703						
ANR	534170	Symbol	info . time_ptr		533703						
ANR	534171	Symbol	info . attr_name		533703						
ANR	534172	Symbol	& m_time_drained_retiring		533703						
ANR	534173	Symbol	_state		533703						
ANR	534174	Symbol	& m_time_unclaimed_benchmarking		533703						
ANR	534175	Symbol	state_to_string		533703						
ANR	534176	Symbol	_act		533703						
ANR	534177	Symbol	ATTR_TOTAL_TIME_OWNER_IDLE		533703						
ANR	534178	Function	ResState :: publishHistoryInfo	1255:0:35423:35825							
ANR	534179	FunctionDef	"ResState :: publishHistoryInfo (ClassAd * cap , State _state , Activity _act)"		534178	0					
ANR	534180	CompoundStatement		1257:0:35502:35825	534178	0					
ANR	534181	IdentifierDeclStatement	"ResState :: HistoryInfo info = getHistoryInfo ( _state , _act ) ;"	1258:1:35505:35562	534178	0	True				
ANR	534182	IdentifierDecl	"info = getHistoryInfo ( _state , _act )"		534178	0					
ANR	534183	IdentifierDeclType	ResState :: HistoryInfo		534178	0					
ANR	534184	Identifier	info		534178	1					
ANR	534185	AssignmentExpression	"info = getHistoryInfo ( _state , _act )"		534178	2		=			
ANR	534186	Identifier	info		534178	0					
ANR	534187	CallExpression	"getHistoryInfo ( _state , _act )"		534178	1					
ANR	534188	Callee	getHistoryInfo		534178	0					
ANR	534189	Identifier	getHistoryInfo		534178	0					
ANR	534190	ArgumentList	_state		534178	1					
ANR	534191	Argument	_state		534178	0					
ANR	534192	Identifier	_state		534178	0					
ANR	534193	Argument	_act		534178	1					
ANR	534194	Identifier	_act		534178	0					
ANR	534195	IdentifierDeclStatement	time_t total = * info . time_ptr ;	1259:1:35565:35594	534178	1	True				
ANR	534196	IdentifierDecl	total = * info . time_ptr		534178	0					
ANR	534197	IdentifierDeclType	time_t		534178	0					
ANR	534198	Identifier	total		534178	1					
ANR	534199	AssignmentExpression	total = * info . time_ptr		534178	2		=			
ANR	534200	Identifier	total		534178	0					
ANR	534201	UnaryOperationExpression	* info . time_ptr		534178	1					
ANR	534202	UnaryOperator	*		534178	0					
ANR	534203	MemberAccess	info . time_ptr		534178	1					
ANR	534204	Identifier	info		534178	0					
ANR	534205	Identifier	time_ptr		534178	1					
ANR	534206	IfStatement	if ( _state == r_state && _act == r_act )		534178	2					
ANR	534207	Condition	_state == r_state && _act == r_act	1262:5:35659:35692	534178	0	True				
ANR	534208	AndExpression	_state == r_state && _act == r_act		534178	0		&&			
ANR	534209	EqualityExpression	_state == r_state		534178	0		==			
ANR	534210	Identifier	_state		534178	0					
ANR	534211	Identifier	r_state		534178	1					
ANR	534212	EqualityExpression	_act == r_act		534178	1		==			
ANR	534213	Identifier	_act		534178	0					
ANR	534214	Identifier	r_act		534178	1					
ANR	534215	CompoundStatement		6:41:192:192	534178	1					
ANR	534216	ExpressionStatement	total += ( time ( NULL ) - m_atime )	1263:2:35699:35730	534178	0	True				
ANR	534217	AssignmentExpression	total += ( time ( NULL ) - m_atime )		534178	0		+=			
ANR	534218	Identifier	total		534178	0					
ANR	534219	AdditiveExpression	time ( NULL ) - m_atime		534178	1		-			
ANR	534220	CallExpression	time ( NULL )		534178	0					
ANR	534221	Callee	time		534178	0					
ANR	534222	Identifier	time		534178	0					
ANR	534223	ArgumentList	NULL		534178	1					
ANR	534224	Argument	NULL		534178	0					
ANR	534225	Identifier	NULL		534178	0					
ANR	534226	Identifier	m_atime		534178	1					
ANR	534227	IfStatement	if ( total )		534178	3					
ANR	534228	Condition	total	1265:5:35740:35744	534178	0	True				
ANR	534229	Identifier	total		534178	0					
ANR	534230	CompoundStatement		9:12:244:244	534178	1					
ANR	534231	ExpressionStatement	"cap -> Assign ( info . attr_name , ( int ) total )"	1266:2:35751:35790	534178	0	True				
ANR	534232	CallExpression	"cap -> Assign ( info . attr_name , ( int ) total )"		534178	0					
ANR	534233	Callee	cap -> Assign		534178	0					
ANR	534234	PtrMemberAccess	cap -> Assign		534178	0					
ANR	534235	Identifier	cap		534178	0					
ANR	534236	Identifier	Assign		534178	1					
ANR	534237	ArgumentList	info . attr_name		534178	1					
ANR	534238	Argument	info . attr_name		534178	0					
ANR	534239	MemberAccess	info . attr_name		534178	0					
ANR	534240	Identifier	info		534178	0					
ANR	534241	Identifier	attr_name		534178	1					
ANR	534242	Argument	( int ) total		534178	1					
ANR	534243	CastExpression	( int ) total		534178	0					
ANR	534244	CastTarget	int		534178	0					
ANR	534245	Identifier	total		534178	1					
ANR	534246	ReturnStatement	return true ;	1267:2:35794:35805	534178	1	True				
ANR	534247	Identifier	true		534178	0					
ANR	534248	ReturnStatement	return false ;	1269:1:35811:35823	534178	4	True				
ANR	534249	Identifier	false		534178	0					
ANR	534250	ReturnType	bool		534178	1					
ANR	534251	Identifier	ResState :: publishHistoryInfo		534178	2					
ANR	534252	ParameterList	"ClassAd * cap , State _state , Activity _act"		534178	3					
ANR	534253	Parameter	ClassAd * cap	1256:30:35458:35469	534178	0	True				
ANR	534254	ParameterType	ClassAd *		534178	0					
ANR	534255	Identifier	cap		534178	1					
ANR	534256	Parameter	State _state	1256:44:35472:35483	534178	1	True				
ANR	534257	ParameterType	State		534178	0					
ANR	534258	Identifier	_state		534178	1					
ANR	534259	Parameter	Activity _act	1256:58:35486:35498	534178	2	True				
ANR	534260	ParameterType	Activity		534178	0					
ANR	534261	Identifier	_act		534178	1					
ANR	534262	CFGEntryNode	ENTRY		534178		True				
ANR	534263	CFGExitNode	EXIT		534178		True				
ANR	534264	Symbol	getHistoryInfo		534178						
ANR	534265	Symbol	* info . time_ptr		534178						
ANR	534266	Symbol	NULL		534178						
ANR	534267	Symbol	false		534178						
ANR	534268	Symbol	r_state		534178						
ANR	534269	Symbol	m_atime		534178						
ANR	534270	Symbol	info . time_ptr		534178						
ANR	534271	Symbol	info . attr_name		534178						
ANR	534272	Symbol	total		534178						
ANR	534273	Symbol	cap		534178						
ANR	534274	Symbol	_state		534178						
ANR	534275	Symbol	r_act		534178						
ANR	534276	Symbol	true		534178						
ANR	534277	Symbol	* info		534178						
ANR	534278	Symbol	time		534178						
ANR	534279	Symbol	_act		534178						
ANR	534280	Symbol	info		534178						
ANR	534281	Function	ResState :: activityTimeElapsed	1272:0:35828:35896							
ANR	534282	FunctionDef	ResState :: activityTimeElapsed ()		534281	0					
ANR	534283	CompoundStatement		1274:0:35864:35896	534281	0					
ANR	534284	ReturnStatement	return time ( NULL ) - m_atime ;	1275:1:35867:35894	534281	0	True				
ANR	534285	AdditiveExpression	time ( NULL ) - m_atime		534281	0		-			
ANR	534286	CallExpression	time ( NULL )		534281	0					
ANR	534287	Callee	time		534281	0					
ANR	534288	Identifier	time		534281	0					
ANR	534289	ArgumentList	NULL		534281	1					
ANR	534290	Argument	NULL		534281	0					
ANR	534291	Identifier	NULL		534281	0					
ANR	534292	Identifier	m_atime		534281	1					
ANR	534293	ReturnType	int		534281	1					
ANR	534294	Identifier	ResState :: activityTimeElapsed		534281	2					
ANR	534295	ParameterList			534281	3					
ANR	534296	CFGEntryNode	ENTRY		534281		True				
ANR	534297	CFGExitNode	EXIT		534281		True				
ANR	534298	Symbol	NULL		534281						
ANR	534299	Symbol	time		534281						
ANR	534300	Symbol	m_atime		534281						
