command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	743246	File	data/converged/CVE-2011-4930_htcondor/classad_functional_tester.cpp								
ANR	743247	DeclStmt									
ANR	743248	Decl							"map < string , Variable * >"	"map < string , Variable * >"	VariableMap
ANR	743249	ClassDef	Command	41:0:1299:1560							
ANR	743250	ClassDef	PrintFormat	61:0:1564:1655							
ANR	743251	ClassDef	Parameters	69:0:1659:1924							
ANR	743252	DeclStmt									
ANR	743253	Decl							bool	bool	debug
ANR	743254	DeclStmt									
ANR	743255	Decl							bool	bool	verbose
ANR	743256	DeclStmt									
ANR	743257	Decl							bool	bool	interactive
ANR	743258	DeclStmt									
ANR	743259	Decl							ifstream	ifstream *	input_file
ANR	743260	Function	Parameters	77:1:1784:1818							
ANR	743261	FunctionDef	Parameters ()		743260	4					
ANR	743262	CompoundStatement		77:14:1797:1818	743260	0					
ANR	743263	ExpressionStatement	input_file = NULL	77:1:1799:1816	743260	0	True				
ANR	743264	AssignmentExpression	input_file = NULL		743260	0		=			
ANR	743265	Identifier	input_file		743260	0					
ANR	743266	Identifier	NULL		743260	1					
ANR	743267	Identifier	Parameters		743260	1					
ANR	743268	ParameterList			743260	2					
ANR	743269	CFGEntryNode	ENTRY		743260		True				
ANR	743270	CFGExitNode	EXIT		743260		True				
ANR	743271	Symbol	input_file		743260						
ANR	743272	Symbol	NULL		743260						
ANR	743273	Function	~Parameters	78:4:1824:1875							
ANR	743274	FunctionDef	~Parameters ()		743273	5					
ANR	743275	CompoundStatement		78:18:1838:1875	743273	0					
ANR	743276	IfStatement	if ( input_file )		743273	0					
ANR	743277	Condition	input_file	78:5:1844:1853	743273	0	True				
ANR	743278	Identifier	input_file		743273	0					
ANR	743279	Statement	delete	78:17:1856:1861	743273	1	True				
ANR	743280	ExpressionStatement	input_file	78:24:1863:1873	743273	1	True				
ANR	743281	Identifier	input_file		743273	0					
ANR	743282	Identifier	~Parameters		743273	1					
ANR	743283	ParameterList			743273	2					
ANR	743284	CFGEntryNode	ENTRY		743273		True				
ANR	743285	CFGExitNode	EXIT		743273		True				
ANR	743286	Symbol	input_file		743273						
ANR	743287	DeclStmt									
ANR	743288	Decl							void	"void ( int argc , char * * argv )"	ParseCommandLine
ANR	743289	ClassDef	State	82:0:1928:2051							
ANR	743290	DeclStmt									
ANR	743291	Decl							int	int	number_of_errors
ANR	743292	DeclStmt									
ANR	743293	Decl							int	int	line_number
ANR	743294	DeclStmt									
ANR	743295	Decl							PrintFormat	PrintFormat	format
ANR	743296	DeclStmt									
ANR	743297	Decl							"map < string , Variable * >"	"map < string , Variable * >"	VariableMap
ANR	743298	DeclStmt									
ANR	743299	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	read_line
ANR	743300	DeclStmt									
ANR	743301	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	read_line_stdin
ANR	743302	DeclStmt									
ANR	743303	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	read_line_file
ANR	743304	DeclStmt									
ANR	743305	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	replace_variables
ANR	743306	DeclStmt									
ANR	743307	Decl							Command	"Command ( string & line , Parameters & parameters )"	get_command
ANR	743308	DeclStmt									
ANR	743309	Decl							bool	"bool ( string & line , bool swallow_equals , string & variable_name , State & state , Parameters & parameters )"	get_variable_name
ANR	743310	DeclStmt									
ANR	743311	Decl							bool	"bool ( string & line , string & variable_name , State & state , Parameters & parameters )"	get_file_name
ANR	743312	DeclStmt									
ANR	743313	Decl							ExprTree	"ExprTree * ( string & line , State & state , Parameters & parameters )"	get_expr
ANR	743314	DeclStmt									
ANR	743315	Decl							void	"void ( string & line , ExprTree * & tree1 , ExprTree * & tree2 , State & state , Parameters & parameters )"	get_two_exprs
ANR	743316	DeclStmt									
ANR	743317	Decl							void	"void ( ExprTree * tree , State & state , Parameters & parameters )"	print_expr
ANR	743318	DeclStmt									
ANR	743319	Decl							bool	"bool ( ExprTree * tree , Value & value , Parameters & parameters )"	evaluate_expr
ANR	743320	DeclStmt									
ANR	743321	Decl							void	"void ( string & line , int offset )"	shorten_line
ANR	743322	DeclStmt									
ANR	743323	Decl							bool	"bool ( Command command , string & line , State & state , Parameters & parameters )"	handle_command
ANR	743324	DeclStmt									
ANR	743325	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_let
ANR	743326	DeclStmt									
ANR	743327	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_eval
ANR	743328	DeclStmt									
ANR	743329	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_same
ANR	743330	DeclStmt									
ANR	743331	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_sameq
ANR	743332	DeclStmt									
ANR	743333	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_diff
ANR	743334	DeclStmt									
ANR	743335	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_diffq
ANR	743336	DeclStmt									
ANR	743337	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_set
ANR	743338	DeclStmt									
ANR	743339	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_show
ANR	743340	DeclStmt									
ANR	743341	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_writexml
ANR	743342	DeclStmt									
ANR	743343	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_readxml
ANR	743344	DeclStmt									
ANR	743345	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_echo
ANR	743346	DeclStmt									
ANR	743347	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_print
ANR	743348	DeclStmt									
ANR	743349	Decl							void	void ( void )	handle_help
ANR	743350	DeclStmt									
ANR	743351	Decl							void	void ( void )	print_version
ANR	743352	DeclStmt									
ANR	743353	Decl							void	"void ( const char * error , State & state )"	print_error_message
ANR	743354	DeclStmt									
ANR	743355	Decl							void	"void ( string & error , State & state )"	print_error_message
ANR	743356	DeclStmt									
ANR	743357	Decl							void	void ( State & state )	print_final_state
ANR	743358	DeclStmt									
ANR	743359	Decl							bool	bool ( string & line )	line_is_comment
ANR	743360	DeclStmt									
ANR	743361	Decl							bool	"bool ( ExprTree * tree , State & state , Parameters & parameters )"	expr_okay_for_xml_file
ANR	743362	Function	Parameters :: ParseCommandLine	144:0:4850:5722							
ANR	743363	FunctionDef	"Parameters :: ParseCommandLine (int argc , char * * argv)"		743362	0					
ANR	743364	CompoundStatement		147:0:4918:5722	743362	0					
ANR	743365	ExpressionStatement	debug = false	149:1:4955:4974	743362	0	True				
ANR	743366	AssignmentExpression	debug = false		743362	0		=			
ANR	743367	Identifier	debug		743362	0					
ANR	743368	Identifier	false		743362	1					
ANR	743369	ExpressionStatement	verbose = false	150:4:4980:4999	743362	1	True				
ANR	743370	AssignmentExpression	verbose = false		743362	0		=			
ANR	743371	Identifier	verbose		743362	0					
ANR	743372	Identifier	false		743362	1					
ANR	743373	ExpressionStatement	interactive = true	151:4:5005:5023	743362	2	True				
ANR	743374	AssignmentExpression	interactive = true		743362	0		=			
ANR	743375	Identifier	interactive		743362	0					
ANR	743376	Identifier	true		743362	1					
ANR	743377	ExpressionStatement	input_file = NULL	152:1:5026:5044	743362	3	True				
ANR	743378	AssignmentExpression	input_file = NULL		743362	0		=			
ANR	743379	Identifier	input_file		743362	0					
ANR	743380	Identifier	NULL		743362	1					
ANR	743381	ForStatement	for ( int arg_index = 1 ; arg_index < argc ; arg_index ++ )		743362	4					
ANR	743382	ForInit	int arg_index = 1 ;	155:6:5100:5117	743362	0	True				
ANR	743383	IdentifierDeclStatement	int arg_index = 1 ;		743362	0					
ANR	743384	IdentifierDecl	arg_index = 1		743362	0					
ANR	743385	IdentifierDeclType	int		743362	0					
ANR	743386	Identifier	arg_index		743362	1					
ANR	743387	AssignmentExpression	arg_index = 1		743362	2		=			
ANR	743388	Identifier	arg_index		743362	0					
ANR	743389	PrimaryExpression	1		743362	1					
ANR	743390	Condition	arg_index < argc	155:25:5119:5134	743362	1	True				
ANR	743391	RelationalExpression	arg_index < argc		743362	0		<			
ANR	743392	Identifier	arg_index		743362	0					
ANR	743393	Identifier	argc		743362	1					
ANR	743394	PostIncDecOperationExpression	arg_index ++	155:43:5137:5147	743362	2	True				
ANR	743395	Identifier	arg_index		743362	0					
ANR	743396	IncDec	++		743362	1					
ANR	743397	CompoundStatement		9:56:231:231	743362	3					
ANR	743398	IfStatement	"if ( ! strcasecmp ( argv [ arg_index ] , ""-d"" ) || ! strcasecmp ( argv [ arg_index ] , ""-debug"" ) )"		743362	0					
ANR	743399	Condition	"! strcasecmp ( argv [ arg_index ] , ""-d"" ) || ! strcasecmp ( argv [ arg_index ] , ""-debug"" )"	156:9:5161:5248	743362	0	True				
ANR	743400	OrExpression	"! strcasecmp ( argv [ arg_index ] , ""-d"" ) || ! strcasecmp ( argv [ arg_index ] , ""-debug"" )"		743362	0		||			
ANR	743401	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-d"" )"		743362	0					
ANR	743402	UnaryOperator	!		743362	0					
ANR	743403	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-d"" )"		743362	1					
ANR	743404	Callee	strcasecmp		743362	0					
ANR	743405	Identifier	strcasecmp		743362	0					
ANR	743406	ArgumentList	argv [ arg_index ]		743362	1					
ANR	743407	Argument	argv [ arg_index ]		743362	0					
ANR	743408	ArrayIndexing	argv [ arg_index ]		743362	0					
ANR	743409	Identifier	argv		743362	0					
ANR	743410	Identifier	arg_index		743362	1					
ANR	743411	Argument	"""-d"""		743362	1					
ANR	743412	PrimaryExpression	"""-d"""		743362	0					
ANR	743413	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-debug"" )"		743362	1					
ANR	743414	UnaryOperator	!		743362	0					
ANR	743415	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-debug"" )"		743362	1					
ANR	743416	Callee	strcasecmp		743362	0					
ANR	743417	Identifier	strcasecmp		743362	0					
ANR	743418	ArgumentList	argv [ arg_index ]		743362	1					
ANR	743419	Argument	argv [ arg_index ]		743362	0					
ANR	743420	ArrayIndexing	argv [ arg_index ]		743362	0					
ANR	743421	Identifier	argv		743362	0					
ANR	743422	Identifier	arg_index		743362	1					
ANR	743423	Argument	"""-debug"""		743362	1					
ANR	743424	PrimaryExpression	"""-debug"""		743362	0					
ANR	743425	CompoundStatement		11:55:332:332	743362	1					
ANR	743426	ExpressionStatement	debug = true	158:3:5256:5268	743362	0	True				
ANR	743427	AssignmentExpression	debug = true		743362	0		=			
ANR	743428	Identifier	debug		743362	0					
ANR	743429	Identifier	true		743362	1					
ANR	743430	ElseStatement	else		743362	0					
ANR	743431	IfStatement	"if ( ! strcasecmp ( argv [ arg_index ] , ""-v"" ) || ! strcasecmp ( argv [ arg_index ] , ""-verbose"" ) )"		743362	0					
ANR	743432	Condition	"! strcasecmp ( argv [ arg_index ] , ""-v"" ) || ! strcasecmp ( argv [ arg_index ] , ""-verbose"" )"	159:16:5286:5382	743362	0	True				
ANR	743433	OrExpression	"! strcasecmp ( argv [ arg_index ] , ""-v"" ) || ! strcasecmp ( argv [ arg_index ] , ""-verbose"" )"		743362	0		||			
ANR	743434	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-v"" )"		743362	0					
ANR	743435	UnaryOperator	!		743362	0					
ANR	743436	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-v"" )"		743362	1					
ANR	743437	Callee	strcasecmp		743362	0					
ANR	743438	Identifier	strcasecmp		743362	0					
ANR	743439	ArgumentList	argv [ arg_index ]		743362	1					
ANR	743440	Argument	argv [ arg_index ]		743362	0					
ANR	743441	ArrayIndexing	argv [ arg_index ]		743362	0					
ANR	743442	Identifier	argv		743362	0					
ANR	743443	Identifier	arg_index		743362	1					
ANR	743444	Argument	"""-v"""		743362	1					
ANR	743445	PrimaryExpression	"""-v"""		743362	0					
ANR	743446	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-verbose"" )"		743362	1					
ANR	743447	UnaryOperator	!		743362	0					
ANR	743448	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-verbose"" )"		743362	1					
ANR	743449	Callee	strcasecmp		743362	0					
ANR	743450	Identifier	strcasecmp		743362	0					
ANR	743451	ArgumentList	argv [ arg_index ]		743362	1					
ANR	743452	Argument	argv [ arg_index ]		743362	0					
ANR	743453	ArrayIndexing	argv [ arg_index ]		743362	0					
ANR	743454	Identifier	argv		743362	0					
ANR	743455	Identifier	arg_index		743362	1					
ANR	743456	Argument	"""-verbose"""		743362	1					
ANR	743457	PrimaryExpression	"""-verbose"""		743362	0					
ANR	743458	CompoundStatement		14:64:466:466	743362	1					
ANR	743459	ExpressionStatement	verbose = true	161:3:5390:5404	743362	0	True				
ANR	743460	AssignmentExpression	verbose = true		743362	0		=			
ANR	743461	Identifier	verbose		743362	0					
ANR	743462	Identifier	true		743362	1					
ANR	743463	ElseStatement	else		743362	0					
ANR	743464	CompoundStatement		16:9:496:496	743362	0					
ANR	743465	IfStatement	if ( input_file == NULL )		743362	0					
ANR	743466	Condition	input_file == NULL	163:7:5424:5441	743362	0	True				
ANR	743467	EqualityExpression	input_file == NULL		743362	0		==			
ANR	743468	Identifier	input_file		743362	0					
ANR	743469	Identifier	NULL		743362	1					
ANR	743470	CompoundStatement		17:27:525:525	743362	1					
ANR	743471	ExpressionStatement	interactive = false	164:16:5462:5481	743362	0	True				
ANR	743472	AssignmentExpression	interactive = false		743362	0		=			
ANR	743473	Identifier	interactive		743362	0					
ANR	743474	Identifier	false		743362	1					
ANR	743475	ExpressionStatement	input_file = new ifstream ( argv [ arg_index ] )	165:4:5487:5529	743362	1	True				
ANR	743476	AssignmentExpression	input_file = new ifstream ( argv [ arg_index ] )		743362	0		=			
ANR	743477	Identifier	input_file		743362	0					
ANR	743478	ArrayIndexing	argv [ arg_index ]		743362	1					
ANR	743479	Identifier	argv		743362	0					
ANR	743480	Identifier	arg_index		743362	1					
ANR	743481	IfStatement	if ( input_file -> bad ( ) )		743362	2					
ANR	743482	Condition	input_file -> bad ( )	166:20:5551:5567	743362	0	True				
ANR	743483	CallExpression	input_file -> bad ( )		743362	0					
ANR	743484	Callee	input_file -> bad		743362	0					
ANR	743485	PtrMemberAccess	input_file -> bad		743362	0					
ANR	743486	Identifier	input_file		743362	0					
ANR	743487	Identifier	bad		743362	1					
ANR	743488	ArgumentList			743362	1					
ANR	743489	CompoundStatement		20:39:651:651	743362	1					
ANR	743490	ExpressionStatement	"cout << ""Could not open file '"" << argv [ arg_index ] << ""'.\\n"""	167:20:5592:5651	743362	0	True				
ANR	743491	ShiftExpression	"cout << ""Could not open file '"" << argv [ arg_index ] << ""'.\\n"""		743362	0		<<			
ANR	743492	Identifier	cout		743362	0					
ANR	743493	ShiftExpression	"""Could not open file '"" << argv [ arg_index ] << ""'.\\n"""		743362	1		<<			
ANR	743494	PrimaryExpression	"""Could not open file '"""		743362	0					
ANR	743495	ShiftExpression	"argv [ arg_index ] << ""'.\\n"""		743362	1		<<			
ANR	743496	ArrayIndexing	argv [ arg_index ]		743362	0					
ANR	743497	Identifier	argv		743362	0					
ANR	743498	Identifier	arg_index		743362	1					
ANR	743499	PrimaryExpression	"""'.\\n"""		743362	1					
ANR	743500	ExpressionStatement	exit ( 1 )	168:20:5673:5680	743362	1	True				
ANR	743501	CallExpression	exit ( 1 )		743362	0					
ANR	743502	Callee	exit		743362	0					
ANR	743503	Identifier	exit		743362	0					
ANR	743504	ArgumentList	1		743362	1					
ANR	743505	Argument	1		743362	0					
ANR	743506	PrimaryExpression	1		743362	0					
ANR	743507	ReturnStatement	return ;	174:1:5714:5720	743362	5	True				
ANR	743508	ReturnType	void		743362	1					
ANR	743509	Identifier	Parameters :: ParseCommandLine		743362	2					
ANR	743510	ParameterList	"int argc , char * * argv"		743362	3					
ANR	743511	Parameter	int argc	145:4:4889:4897	743362	0	True				
ANR	743512	ParameterType	int		743362	0					
ANR	743513	Identifier	argc		743362	1					
ANR	743514	Parameter	char * * argv	146:4:4905:4915	743362	1	True				
ANR	743515	ParameterType	char * *		743362	0					
ANR	743516	Identifier	argv		743362	1					
ANR	743517	CFGEntryNode	ENTRY		743362		True				
ANR	743518	CFGExitNode	EXIT		743362		True				
ANR	743519	Symbol	argc		743362						
ANR	743520	Symbol	debug		743362						
ANR	743521	Symbol	NULL		743362						
ANR	743522	Symbol	arg_index		743362						
ANR	743523	Symbol	false		743362						
ANR	743524	Symbol	interactive		743362						
ANR	743525	Symbol	* argv		743362						
ANR	743526	Symbol	argv		743362						
ANR	743527	Symbol	verbose		743362						
ANR	743528	Symbol	input_file		743362						
ANR	743529	Symbol	* arg_index		743362						
ANR	743530	Symbol	true		743362						
ANR	743531	Symbol	input_file -> bad		743362						
ANR	743532	Symbol	* input_file		743362						
ANR	743533	Symbol	strcasecmp		743362						
ANR	743534	Function	State :: State	183:0:5902:6021							
ANR	743535	FunctionDef	State :: State ()		743534	0					
ANR	743536	CompoundStatement		184:0:5917:6021	743534	0					
ANR	743537	ExpressionStatement	number_of_errors = 0	185:4:5923:5943	743534	0	True				
ANR	743538	AssignmentExpression	number_of_errors = 0		743534	0		=			
ANR	743539	Identifier	number_of_errors		743534	0					
ANR	743540	PrimaryExpression	0		743534	1					
ANR	743541	ExpressionStatement	line_number = 0	186:4:5949:5969	743534	1	True				
ANR	743542	AssignmentExpression	line_number = 0		743534	0		=			
ANR	743543	Identifier	line_number		743534	0					
ANR	743544	PrimaryExpression	0		743534	1					
ANR	743545	ExpressionStatement	format = print_Compact	187:4:5975:6007	743534	2	True				
ANR	743546	AssignmentExpression	format = print_Compact		743534	0		=			
ANR	743547	Identifier	format		743534	0					
ANR	743548	Identifier	print_Compact		743534	1					
ANR	743549	ReturnStatement	return ;	188:4:6013:6019	743534	3	True				
ANR	743550	Identifier	State :: State		743534	1					
ANR	743551	ParameterList			743534	2					
ANR	743552	CFGEntryNode	ENTRY		743534		True				
ANR	743553	CFGExitNode	EXIT		743534		True				
ANR	743554	Symbol	line_number		743534						
ANR	743555	Symbol	format		743534						
ANR	743556	Symbol	number_of_errors		743534						
ANR	743557	Symbol	print_Compact		743534						
ANR	743558	Function	Variable :: Variable	197:0:6201:6338							
ANR	743559	FunctionDef	"Variable :: Variable (string & name , ExprTree * tree)"		743558	0					
ANR	743560	CompoundStatement		200:0:6261:6338	743558	0					
ANR	743561	ExpressionStatement	_name = name	201:4:6267:6282	743558	0	True				
ANR	743562	AssignmentExpression	_name = name		743558	0		=			
ANR	743563	Identifier	_name		743558	0					
ANR	743564	Identifier	name		743558	1					
ANR	743565	ExpressionStatement	_tree = tree	202:4:6288:6303	743558	1	True				
ANR	743566	AssignmentExpression	_tree = tree		743558	0		=			
ANR	743567	Identifier	_tree		743558	0					
ANR	743568	Identifier	tree		743558	1					
ANR	743569	ExpressionStatement	_is_tree = true	203:4:6309:6324	743558	2	True				
ANR	743570	AssignmentExpression	_is_tree = true		743558	0		=			
ANR	743571	Identifier	_is_tree		743558	0					
ANR	743572	Identifier	true		743558	1					
ANR	743573	ReturnStatement	return ;	204:4:6330:6336	743558	3	True				
ANR	743574	Identifier	Variable :: Variable		743558	1					
ANR	743575	ParameterList	"string & name , ExprTree * tree"		743558	2					
ANR	743576	Parameter	string & name	198:4:6225:6237	743558	0	True				
ANR	743577	ParameterType	string &		743558	0					
ANR	743578	Identifier	name		743558	1					
ANR	743579	Parameter	ExprTree * tree	199:4:6245:6258	743558	1	True				
ANR	743580	ParameterType	ExprTree *		743558	0					
ANR	743581	Identifier	tree		743558	1					
ANR	743582	CFGEntryNode	ENTRY		743558		True				
ANR	743583	CFGExitNode	EXIT		743558		True				
ANR	743584	Symbol	_name		743558						
ANR	743585	Symbol	name		743558						
ANR	743586	Symbol	tree		743558						
ANR	743587	Symbol	_is_tree		743558						
ANR	743588	Symbol	true		743558						
ANR	743589	Symbol	_tree		743558						
ANR	743590	Function	Variable :: Variable	213:0:6518:6676							
ANR	743591	FunctionDef	"Variable :: Variable (string & name , Value & value)"		743590	0					
ANR	743592	CompoundStatement		216:0:6576:6676	743590	0					
ANR	743593	ExpressionStatement	_name = name	217:4:6582:6597	743590	0	True				
ANR	743594	AssignmentExpression	_name = name		743590	0		=			
ANR	743595	Identifier	_name		743590	0					
ANR	743596	Identifier	name		743590	1					
ANR	743597	ExpressionStatement	_value = value	218:4:6603:6619	743590	1	True				
ANR	743598	AssignmentExpression	_value = value		743590	0		=			
ANR	743599	Identifier	_value		743590	0					
ANR	743600	Identifier	value		743590	1					
ANR	743601	ExpressionStatement	_is_tree = false	219:4:6625:6641	743590	2	True				
ANR	743602	AssignmentExpression	_is_tree = false		743590	0		=			
ANR	743603	Identifier	_is_tree		743590	0					
ANR	743604	Identifier	false		743590	1					
ANR	743605	ExpressionStatement	_tree = NULL	220:4:6647:6662	743590	3	True				
ANR	743606	AssignmentExpression	_tree = NULL		743590	0		=			
ANR	743607	Identifier	_tree		743590	0					
ANR	743608	Identifier	NULL		743590	1					
ANR	743609	ReturnStatement	return ;	221:4:6668:6674	743590	4	True				
ANR	743610	Identifier	Variable :: Variable		743590	1					
ANR	743611	ParameterList	"string & name , Value & value"		743590	2					
ANR	743612	Parameter	string & name	214:4:6542:6553	743590	0	True				
ANR	743613	ParameterType	string &		743590	0					
ANR	743614	Identifier	name		743590	1					
ANR	743615	Parameter	Value & value	215:4:6561:6573	743590	1	True				
ANR	743616	ParameterType	Value &		743590	0					
ANR	743617	Identifier	value		743590	1					
ANR	743618	CFGEntryNode	ENTRY		743590		True				
ANR	743619	CFGExitNode	EXIT		743590		True				
ANR	743620	Symbol	NULL		743590						
ANR	743621	Symbol	_name		743590						
ANR	743622	Symbol	name		743590						
ANR	743623	Symbol	false		743590						
ANR	743624	Symbol	_is_tree		743590						
ANR	743625	Symbol	_value		743590						
ANR	743626	Symbol	_tree		743590						
ANR	743627	Symbol	value		743590						
ANR	743628	Function	Variable :: ~Variable	230:0:6856:6979							
ANR	743629	FunctionDef	Variable :: ~Variable ()		743628	0					
ANR	743630	CompoundStatement		231:0:6878:6979	743628	0					
ANR	743631	IfStatement	if ( _is_tree && _tree != NULL )		743628	0					
ANR	743632	Condition	_is_tree && _tree != NULL	232:8:6888:6912	743628	0	True				
ANR	743633	AndExpression	_is_tree && _tree != NULL		743628	0		&&			
ANR	743634	Identifier	_is_tree		743628	0					
ANR	743635	EqualityExpression	_tree != NULL		743628	1		!=			
ANR	743636	Identifier	_tree		743628	0					
ANR	743637	Identifier	NULL		743628	1					
ANR	743638	CompoundStatement		2:35:36:36	743628	1					
ANR	743639	Statement	delete	233:8:6925:6930	743628	0	True				
ANR	743640	ExpressionStatement	_tree	233:15:6932:6937	743628	1	True				
ANR	743641	Identifier	_tree		743628	0					
ANR	743642	ExpressionStatement	_tree = NULL	234:8:6947:6959	743628	2	True				
ANR	743643	AssignmentExpression	_tree = NULL		743628	0		=			
ANR	743644	Identifier	_tree		743628	0					
ANR	743645	Identifier	NULL		743628	1					
ANR	743646	ReturnStatement	return ;	236:4:6971:6977	743628	1	True				
ANR	743647	Identifier	Variable :: ~Variable		743628	1					
ANR	743648	ParameterList			743628	2					
ANR	743649	CFGEntryNode	ENTRY		743628		True				
ANR	743650	CFGExitNode	EXIT		743628		True				
ANR	743651	Symbol	NULL		743628						
ANR	743652	Symbol	_is_tree		743628						
ANR	743653	Symbol	_tree		743628						
ANR	743654	Function	Variable :: GetStringRepresentation	245:0:7159:7410							
ANR	743655	FunctionDef	Variable :: GetStringRepresentation (string & representation)		743654	0					
ANR	743656	CompoundStatement		247:0:7227:7410	743654	0					
ANR	743657	IdentifierDeclStatement	ClassAdUnParser unparser ;	248:4:7233:7257	743654	0	True				
ANR	743658	IdentifierDecl	unparser		743654	0					
ANR	743659	IdentifierDeclType	ClassAdUnParser		743654	0					
ANR	743660	Identifier	unparser		743654	1					
ANR	743661	IfStatement	if ( _is_tree )		743654	1					
ANR	743662	Condition	_is_tree	250:8:7268:7275	743654	0	True				
ANR	743663	Identifier	_is_tree		743654	0					
ANR	743664	CompoundStatement		4:18:50:50	743654	1					
ANR	743665	ExpressionStatement	"unparser . Unparse ( representation , _tree )"	251:8:7288:7327	743654	0	True				
ANR	743666	CallExpression	"unparser . Unparse ( representation , _tree )"		743654	0					
ANR	743667	Callee	unparser . Unparse		743654	0					
ANR	743668	MemberAccess	unparser . Unparse		743654	0					
ANR	743669	Identifier	unparser		743654	0					
ANR	743670	Identifier	Unparse		743654	1					
ANR	743671	ArgumentList	representation		743654	1					
ANR	743672	Argument	representation		743654	0					
ANR	743673	Identifier	representation		743654	0					
ANR	743674	Argument	_tree		743654	1					
ANR	743675	Identifier	_tree		743654	0					
ANR	743676	ElseStatement	else		743654	0					
ANR	743677	CompoundStatement		6:11:112:112	743654	0					
ANR	743678	ExpressionStatement	"unparser . Unparse ( representation , _value )"	253:8:7350:7390	743654	0	True				
ANR	743679	CallExpression	"unparser . Unparse ( representation , _value )"		743654	0					
ANR	743680	Callee	unparser . Unparse		743654	0					
ANR	743681	MemberAccess	unparser . Unparse		743654	0					
ANR	743682	Identifier	unparser		743654	0					
ANR	743683	Identifier	Unparse		743654	1					
ANR	743684	ArgumentList	representation		743654	1					
ANR	743685	Argument	representation		743654	0					
ANR	743686	Identifier	representation		743654	0					
ANR	743687	Argument	_value		743654	1					
ANR	743688	Identifier	_value		743654	0					
ANR	743689	ReturnStatement	return ;	255:4:7402:7408	743654	2	True				
ANR	743690	ReturnType	void		743654	1					
ANR	743691	Identifier	Variable :: GetStringRepresentation		743654	2					
ANR	743692	ParameterList	string & representation		743654	3					
ANR	743693	Parameter	string & representation	246:4:7203:7224	743654	0	True				
ANR	743694	ParameterType	string &		743654	0					
ANR	743695	Identifier	representation		743654	1					
ANR	743696	CFGEntryNode	ENTRY		743654		True				
ANR	743697	CFGExitNode	EXIT		743654		True				
ANR	743698	Symbol	_is_tree		743654						
ANR	743699	Symbol	unparser		743654						
ANR	743700	Symbol	_value		743654						
ANR	743701	Symbol	_tree		743654						
ANR	743702	Symbol	representation		743654						
ANR	743703	DeclStmt									
ANR	743704	Decl							VariableMap	VariableMap	variables
ANR	743705	Function	main	266:0:7641:8482							
ANR	743706	FunctionDef	"main (int argc , char * * argv)"		743705	0					
ANR	743707	CompoundStatement		269:0:7684:8482	743705	0					
ANR	743708	IdentifierDeclStatement	bool quit ;	270:4:7690:7706	743705	0	True				
ANR	743709	IdentifierDecl	quit		743705	0					
ANR	743710	IdentifierDeclType	bool		743705	0					
ANR	743711	Identifier	quit		743705	1					
ANR	743712	IdentifierDeclStatement	string line ;	271:4:7712:7728	743705	1	True				
ANR	743713	IdentifierDecl	line		743705	0					
ANR	743714	IdentifierDeclType	string		743705	0					
ANR	743715	Identifier	line		743705	1					
ANR	743716	IdentifierDeclStatement	State state ;	272:4:7734:7751	743705	2	True				
ANR	743717	IdentifierDecl	state		743705	0					
ANR	743718	IdentifierDeclType	State		743705	0					
ANR	743719	Identifier	state		743705	1					
ANR	743720	IdentifierDeclStatement	Parameters parameters ;	273:4:7757:7779	743705	3	True				
ANR	743721	IdentifierDecl	parameters		743705	0					
ANR	743722	IdentifierDeclType	Parameters		743705	0					
ANR	743723	Identifier	parameters		743705	1					
ANR	743724	ExpressionStatement	print_version ( )	275:4:7786:7801	743705	4	True				
ANR	743725	CallExpression	print_version ( )		743705	0					
ANR	743726	Callee	print_version		743705	0					
ANR	743727	Identifier	print_version		743705	0					
ANR	743728	ArgumentList			743705	1					
ANR	743729	ExpressionStatement	"parameters . ParseCommandLine ( argc , argv )"	276:4:7807:7846	743705	5	True				
ANR	743730	CallExpression	"parameters . ParseCommandLine ( argc , argv )"		743705	0					
ANR	743731	Callee	parameters . ParseCommandLine		743705	0					
ANR	743732	MemberAccess	parameters . ParseCommandLine		743705	0					
ANR	743733	Identifier	parameters		743705	0					
ANR	743734	Identifier	ParseCommandLine		743705	1					
ANR	743735	ArgumentList	argc		743705	1					
ANR	743736	Argument	argc		743705	0					
ANR	743737	Identifier	argc		743705	0					
ANR	743738	Argument	argv		743705	1					
ANR	743739	Identifier	argv		743705	0					
ANR	743740	ExpressionStatement	quit = false	277:4:7852:7864	743705	6	True				
ANR	743741	AssignmentExpression	quit = false		743705	0		=			
ANR	743742	Identifier	quit		743705	0					
ANR	743743	Identifier	false		743705	1					
ANR	743744	WhileStatement	"while ( ! quit && read_line ( line , state , parameters ) == true )"		743705	7					
ANR	743745	Condition	"! quit && read_line ( line , state , parameters ) == true"	279:11:7878:7928	743705	0	True				
ANR	743746	AndExpression	"! quit && read_line ( line , state , parameters ) == true"		743705	0		&&			
ANR	743747	UnaryOperationExpression	! quit		743705	0					
ANR	743748	UnaryOperator	!		743705	0					
ANR	743749	Identifier	quit		743705	1					
ANR	743750	EqualityExpression	"read_line ( line , state , parameters ) == true"		743705	1		==			
ANR	743751	CallExpression	"read_line ( line , state , parameters )"		743705	0					
ANR	743752	Callee	read_line		743705	0					
ANR	743753	Identifier	read_line		743705	0					
ANR	743754	ArgumentList	line		743705	1					
ANR	743755	Argument	line		743705	0					
ANR	743756	Identifier	line		743705	0					
ANR	743757	Argument	state		743705	1					
ANR	743758	Identifier	state		743705	0					
ANR	743759	Argument	parameters		743705	2					
ANR	743760	Identifier	parameters		743705	0					
ANR	743761	Identifier	true		743705	1					
ANR	743762	CompoundStatement		14:8:310:327	743705	1					
ANR	743763	IdentifierDeclStatement	bool good_line ;	280:8:7941:7960	743705	0	True				
ANR	743764	IdentifierDecl	good_line		743705	0					
ANR	743765	IdentifierDeclType	bool		743705	0					
ANR	743766	Identifier	good_line		743705	1					
ANR	743767	IdentifierDeclStatement	string error ;	281:8:7970:7985	743705	1	True				
ANR	743768	IdentifierDecl	error		743705	0					
ANR	743769	IdentifierDeclType	string		743705	0					
ANR	743770	Identifier	error		743705	1					
ANR	743771	IdentifierDeclStatement	Command command ;	282:8:7995:8012	743705	2	True				
ANR	743772	IdentifierDecl	command		743705	0					
ANR	743773	IdentifierDeclType	Command		743705	0					
ANR	743774	Identifier	command		743705	1					
ANR	743775	ExpressionStatement	"good_line = replace_variables ( line , state , parameters )"	284:8:8023:8077	743705	3	True				
ANR	743776	AssignmentExpression	"good_line = replace_variables ( line , state , parameters )"		743705	0		=			
ANR	743777	Identifier	good_line		743705	0					
ANR	743778	CallExpression	"replace_variables ( line , state , parameters )"		743705	1					
ANR	743779	Callee	replace_variables		743705	0					
ANR	743780	Identifier	replace_variables		743705	0					
ANR	743781	ArgumentList	line		743705	1					
ANR	743782	Argument	line		743705	0					
ANR	743783	Identifier	line		743705	0					
ANR	743784	Argument	state		743705	1					
ANR	743785	Identifier	state		743705	0					
ANR	743786	Argument	parameters		743705	2					
ANR	743787	Identifier	parameters		743705	0					
ANR	743788	IfStatement	if ( good_line )		743705	4					
ANR	743789	Condition	good_line	285:12:8091:8099	743705	0	True				
ANR	743790	Identifier	good_line		743705	0					
ANR	743791	CompoundStatement		17:23:417:417	743705	1					
ANR	743792	ExpressionStatement	"command = get_command ( line , parameters )"	286:12:8116:8155	743705	0	True				
ANR	743793	AssignmentExpression	"command = get_command ( line , parameters )"		743705	0		=			
ANR	743794	Identifier	command		743705	0					
ANR	743795	CallExpression	"get_command ( line , parameters )"		743705	1					
ANR	743796	Callee	get_command		743705	0					
ANR	743797	Identifier	get_command		743705	0					
ANR	743798	ArgumentList	line		743705	1					
ANR	743799	Argument	line		743705	0					
ANR	743800	Identifier	line		743705	0					
ANR	743801	Argument	parameters		743705	1					
ANR	743802	Identifier	parameters		743705	0					
ANR	743803	ExpressionStatement	"quit = handle_command ( command , line , state , parameters )"	287:12:8169:8224	743705	1	True				
ANR	743804	AssignmentExpression	"quit = handle_command ( command , line , state , parameters )"		743705	0		=			
ANR	743805	Identifier	quit		743705	0					
ANR	743806	CallExpression	"handle_command ( command , line , state , parameters )"		743705	1					
ANR	743807	Callee	handle_command		743705	0					
ANR	743808	Identifier	handle_command		743705	0					
ANR	743809	ArgumentList	command		743705	1					
ANR	743810	Argument	command		743705	0					
ANR	743811	Identifier	command		743705	0					
ANR	743812	Argument	line		743705	1					
ANR	743813	Identifier	line		743705	0					
ANR	743814	Argument	state		743705	2					
ANR	743815	Identifier	state		743705	0					
ANR	743816	Argument	parameters		743705	3					
ANR	743817	Identifier	parameters		743705	0					
ANR	743818	ExpressionStatement	print_final_state ( state )	290:4:8246:8270	743705	8	True				
ANR	743819	CallExpression	print_final_state ( state )		743705	0					
ANR	743820	Callee	print_final_state		743705	0					
ANR	743821	Identifier	print_final_state		743705	0					
ANR	743822	ArgumentList	state		743705	1					
ANR	743823	Argument	state		743705	0					
ANR	743824	Identifier	state		743705	0					
ANR	743825	IfStatement	if ( ! parameters . interactive && parameters . input_file != NULL )		743705	9					
ANR	743826	Condition	! parameters . interactive && parameters . input_file != NULL	292:8:8281:8336	743705	0	True				
ANR	743827	AndExpression	! parameters . interactive && parameters . input_file != NULL		743705	0		&&			
ANR	743828	UnaryOperationExpression	! parameters . interactive		743705	0					
ANR	743829	UnaryOperator	!		743705	0					
ANR	743830	MemberAccess	parameters . interactive		743705	1					
ANR	743831	Identifier	parameters		743705	0					
ANR	743832	Identifier	interactive		743705	1					
ANR	743833	EqualityExpression	parameters . input_file != NULL		743705	1		!=			
ANR	743834	MemberAccess	parameters . input_file		743705	0					
ANR	743835	Identifier	parameters		743705	0					
ANR	743836	Identifier	input_file		743705	1					
ANR	743837	Identifier	NULL		743705	1					
ANR	743838	CompoundStatement		24:66:654:654	743705	1					
ANR	743839	ExpressionStatement	parameters . input_file -> close ( )	293:8:8349:8379	743705	0	True				
ANR	743840	CallExpression	parameters . input_file -> close ( )		743705	0					
ANR	743841	Callee	parameters . input_file -> close		743705	0					
ANR	743842	PtrMemberAccess	parameters . input_file -> close		743705	0					
ANR	743843	MemberAccess	parameters . input_file		743705	0					
ANR	743844	Identifier	parameters		743705	0					
ANR	743845	Identifier	input_file		743705	1					
ANR	743846	Identifier	close		743705	1					
ANR	743847	ArgumentList			743705	1					
ANR	743848	IfStatement	if ( state . number_of_errors == 0 )		743705	10					
ANR	743849	Condition	state . number_of_errors == 0	296:8:8396:8422	743705	0	True				
ANR	743850	EqualityExpression	state . number_of_errors == 0		743705	0		==			
ANR	743851	MemberAccess	state . number_of_errors		743705	0					
ANR	743852	Identifier	state		743705	0					
ANR	743853	Identifier	number_of_errors		743705	1					
ANR	743854	PrimaryExpression	0		743705	1					
ANR	743855	CompoundStatement		28:37:740:740	743705	1					
ANR	743856	ReturnStatement	return 0 ;	297:8:8435:8443	743705	0	True				
ANR	743857	PrimaryExpression	0		743705	0					
ANR	743858	ElseStatement	else		743705	0					
ANR	743859	CompoundStatement		30:11:771:771	743705	0					
ANR	743860	ReturnStatement	return 1 ;	299:8:8466:8474	743705	0	True				
ANR	743861	PrimaryExpression	1		743705	0					
ANR	743862	ReturnType	int		743705	1					
ANR	743863	Identifier	main		743705	2					
ANR	743864	ParameterList	"int argc , char * * argv"		743705	3					
ANR	743865	Parameter	int argc	267:4:7655:7663	743705	0	True				
ANR	743866	ParameterType	int		743705	0					
ANR	743867	Identifier	argc		743705	1					
ANR	743868	Parameter	char * * argv	268:4:7671:7681	743705	1	True				
ANR	743869	ParameterType	char * *		743705	0					
ANR	743870	Identifier	argv		743705	1					
ANR	743871	CFGEntryNode	ENTRY		743705		True				
ANR	743872	CFGExitNode	EXIT		743705		True				
ANR	743873	Symbol	argc		743705						
ANR	743874	Symbol	read_line		743705						
ANR	743875	Symbol	NULL		743705						
ANR	743876	Symbol	line		743705						
ANR	743877	Symbol	good_line		743705						
ANR	743878	Symbol	replace_variables		743705						
ANR	743879	Symbol	false		743705						
ANR	743880	Symbol	error		743705						
ANR	743881	Symbol	argv		743705						
ANR	743882	Symbol	command		743705						
ANR	743883	Symbol	handle_command		743705						
ANR	743884	Symbol	get_command		743705						
ANR	743885	Symbol	true		743705						
ANR	743886	Symbol	quit		743705						
ANR	743887	Symbol	state . number_of_errors		743705						
ANR	743888	Symbol	state		743705						
ANR	743889	Symbol	parameters		743705						
ANR	743890	Symbol	parameters . interactive		743705						
ANR	743891	Symbol	parameters . input_file		743705						
ANR	743892	Function	read_line	309:0:8671:8987							
ANR	743893	FunctionDef	"read_line (string & line , State & state , Parameters & parameters)"		743892	0					
ANR	743894	CompoundStatement		313:0:8762:8987	743892	0					
ANR	743895	IdentifierDeclStatement	bool have_input ;	314:4:8768:8783	743892	0	True				
ANR	743896	IdentifierDecl	have_input		743892	0					
ANR	743897	IdentifierDeclType	bool		743892	0					
ANR	743898	Identifier	have_input		743892	1					
ANR	743899	IfStatement	if ( parameters . interactive )		743892	1					
ANR	743900	Condition	parameters . interactive	316:8:8794:8815	743892	0	True				
ANR	743901	MemberAccess	parameters . interactive		743892	0					
ANR	743902	Identifier	parameters		743892	0					
ANR	743903	Identifier	interactive		743892	1					
ANR	743904	CompoundStatement		4:32:55:55	743892	1					
ANR	743905	ExpressionStatement	"have_input = read_line_stdin ( line , state , parameters )"	317:8:8828:8881	743892	0	True				
ANR	743906	AssignmentExpression	"have_input = read_line_stdin ( line , state , parameters )"		743892	0		=			
ANR	743907	Identifier	have_input		743892	0					
ANR	743908	CallExpression	"read_line_stdin ( line , state , parameters )"		743892	1					
ANR	743909	Callee	read_line_stdin		743892	0					
ANR	743910	Identifier	read_line_stdin		743892	0					
ANR	743911	ArgumentList	line		743892	1					
ANR	743912	Argument	line		743892	0					
ANR	743913	Identifier	line		743892	0					
ANR	743914	Argument	state		743892	1					
ANR	743915	Identifier	state		743892	0					
ANR	743916	Argument	parameters		743892	2					
ANR	743917	Identifier	parameters		743892	0					
ANR	743918	ElseStatement	else		743892	0					
ANR	743919	CompoundStatement		6:11:131:131	743892	0					
ANR	743920	ExpressionStatement	"have_input = read_line_file ( line , state , parameters )"	319:8:8904:8956	743892	0	True				
ANR	743921	AssignmentExpression	"have_input = read_line_file ( line , state , parameters )"		743892	0		=			
ANR	743922	Identifier	have_input		743892	0					
ANR	743923	CallExpression	"read_line_file ( line , state , parameters )"		743892	1					
ANR	743924	Callee	read_line_file		743892	0					
ANR	743925	Identifier	read_line_file		743892	0					
ANR	743926	ArgumentList	line		743892	1					
ANR	743927	Argument	line		743892	0					
ANR	743928	Identifier	line		743892	0					
ANR	743929	Argument	state		743892	1					
ANR	743930	Identifier	state		743892	0					
ANR	743931	Argument	parameters		743892	2					
ANR	743932	Identifier	parameters		743892	0					
ANR	743933	ReturnStatement	return have_input ;	321:4:8968:8985	743892	2	True				
ANR	743934	Identifier	have_input		743892	0					
ANR	743935	ReturnType	bool		743892	1					
ANR	743936	Identifier	read_line		743892	2					
ANR	743937	ParameterList	"string & line , State & state , Parameters & parameters"		743892	3					
ANR	743938	Parameter	string & line	310:4:8691:8706	743892	0	True				
ANR	743939	ParameterType	string &		743892	0					
ANR	743940	Identifier	line		743892	1					
ANR	743941	Parameter	State & state	311:4:8714:8730	743892	1	True				
ANR	743942	ParameterType	State &		743892	0					
ANR	743943	Identifier	state		743892	1					
ANR	743944	Parameter	Parameters & parameters	312:4:8738:8759	743892	2	True				
ANR	743945	ParameterType	Parameters &		743892	0					
ANR	743946	Identifier	parameters		743892	1					
ANR	743947	CFGEntryNode	ENTRY		743892		True				
ANR	743948	CFGExitNode	EXIT		743892		True				
ANR	743949	Symbol	line		743892						
ANR	743950	Symbol	have_input		743892						
ANR	743951	Symbol	read_line_file		743892						
ANR	743952	Symbol	state		743892						
ANR	743953	Symbol	parameters		743892						
ANR	743954	Symbol	parameters . interactive		743892						
ANR	743955	Symbol	read_line_stdin		743892						
ANR	743956	DeclStmt									
ANR	743957	Decl							bool	bool	have_input
ANR	743958	DeclStmt									
ANR	743959	Decl							bool	bool	in_continuation
ANR	743960	DeclStmt									
ANR	743961	Decl							bool	bool	done
ANR	743962	DeclStmt									
ANR	743963	Decl							string	string	line_segment
ANR	743964	Function	read_line_file	395:0:10864:12631							
ANR	743965	FunctionDef	"read_line_file (string & line , State & state , Parameters & parameters)"		743964	0					
ANR	743966	CompoundStatement		399:0:10960:12631	743964	0					
ANR	743967	IdentifierDeclStatement	bool have_input ;	400:4:10966:10991	743964	0	True				
ANR	743968	IdentifierDecl	have_input		743964	0					
ANR	743969	IdentifierDeclType	bool		743964	0					
ANR	743970	Identifier	have_input		743964	1					
ANR	743971	Statement	static	401:4:10997:11002	743964	1	True				
ANR	743972	IdentifierDeclStatement	bool have_cached_line = false ;	401:11:11004:11036	743964	2	True				
ANR	743973	IdentifierDecl	have_cached_line = false		743964	0					
ANR	743974	IdentifierDeclType	bool		743964	0					
ANR	743975	Identifier	have_cached_line		743964	1					
ANR	743976	AssignmentExpression	have_cached_line = false		743964	2		=			
ANR	743977	Identifier	false		743964	0					
ANR	743978	Identifier	false		743964	1					
ANR	743979	Statement	static	402:4:11042:11047	743964	3	True				
ANR	743980	IdentifierDeclStatement	"string cached_line = """" ;"	402:11:11049:11073	743964	4	True				
ANR	743981	IdentifierDecl	"cached_line = """""		743964	0					
ANR	743982	IdentifierDeclType	string		743964	0					
ANR	743983	Identifier	cached_line		743964	1					
ANR	743984	AssignmentExpression	"cached_line = """""		743964	2		=			
ANR	743985	Identifier	cached_line		743964	0					
ANR	743986	PrimaryExpression	""""""		743964	1					
ANR	743987	IfStatement	if ( ! have_cached_line )		743964	5					
ANR	743988	Condition	! have_cached_line	405:8:11152:11168	743964	0	True				
ANR	743989	UnaryOperationExpression	! have_cached_line		743964	0					
ANR	743990	UnaryOperator	!		743964	0					
ANR	743991	Identifier	have_cached_line		743964	1					
ANR	743992	CompoundStatement		7:27:210:210	743964	1					
ANR	743993	ExpressionStatement	"getline ( * parameters . input_file , cached_line , '\\n' )"	406:8:11181:11231	743964	0	True				
ANR	743994	CallExpression	"getline ( * parameters . input_file , cached_line , '\\n' )"		743964	0					
ANR	743995	Callee	getline		743964	0					
ANR	743996	Identifier	getline		743964	0					
ANR	743997	ArgumentList	* parameters . input_file		743964	1					
ANR	743998	Argument	* parameters . input_file		743964	0					
ANR	743999	UnaryOperationExpression	* parameters . input_file		743964	0					
ANR	744000	UnaryOperator	*		743964	0					
ANR	744001	MemberAccess	parameters . input_file		743964	1					
ANR	744002	Identifier	parameters		743964	0					
ANR	744003	Identifier	input_file		743964	1					
ANR	744004	Argument	cached_line		743964	1					
ANR	744005	Identifier	cached_line		743964	0					
ANR	744006	Argument	'\\n'		743964	2					
ANR	744007	PrimaryExpression	'\\n'		743964	0					
ANR	744008	ExpressionStatement	state . line_number ++	407:8:11241:11260	743964	1	True				
ANR	744009	PostIncDecOperationExpression	state . line_number ++		743964	0					
ANR	744010	MemberAccess	state . line_number		743964	0					
ANR	744011	Identifier	state		743964	0					
ANR	744012	Identifier	line_number		743964	1					
ANR	744013	IncDec	++		743964	1					
ANR	744014	ExpressionStatement	have_cached_line = true	408:8:11270:11293	743964	2	True				
ANR	744015	AssignmentExpression	have_cached_line = true		743964	0		=			
ANR	744016	Identifier	have_cached_line		743964	0					
ANR	744017	Identifier	true		743964	1					
ANR	744018	ElseStatement	else		743964	0					
ANR	744019	CompoundStatement		11:11:345:345	743964	0					
ANR	744020	ExpressionStatement	state . line_number ++	412:8:11450:11469	743964	0	True				
ANR	744021	PostIncDecOperationExpression	state . line_number ++		743964	0					
ANR	744022	MemberAccess	state . line_number		743964	0					
ANR	744023	Identifier	state		743964	0					
ANR	744024	Identifier	line_number		743964	1					
ANR	744025	IncDec	++		743964	1					
ANR	744026	IfStatement	if ( parameters . input_file -> eof ( ) && cached_line . size ( ) == 0 )		743964	6					
ANR	744027	Condition	parameters . input_file -> eof ( ) && cached_line . size ( ) == 0	414:8:11485:11539	743964	0	True				
ANR	744028	AndExpression	parameters . input_file -> eof ( ) && cached_line . size ( ) == 0		743964	0		&&			
ANR	744029	CallExpression	parameters . input_file -> eof ( )		743964	0					
ANR	744030	Callee	parameters . input_file -> eof		743964	0					
ANR	744031	PtrMemberAccess	parameters . input_file -> eof		743964	0					
ANR	744032	MemberAccess	parameters . input_file		743964	0					
ANR	744033	Identifier	parameters		743964	0					
ANR	744034	Identifier	input_file		743964	1					
ANR	744035	Identifier	eof		743964	1					
ANR	744036	ArgumentList			743964	1					
ANR	744037	EqualityExpression	cached_line . size ( ) == 0		743964	1		==			
ANR	744038	CallExpression	cached_line . size ( )		743964	0					
ANR	744039	Callee	cached_line . size		743964	0					
ANR	744040	MemberAccess	cached_line . size		743964	0					
ANR	744041	Identifier	cached_line		743964	0					
ANR	744042	Identifier	size		743964	1					
ANR	744043	ArgumentList			743964	1					
ANR	744044	PrimaryExpression	0		743964	1					
ANR	744045	CompoundStatement		16:65:581:581	743964	1					
ANR	744046	ExpressionStatement	have_input = false	415:8:11552:11570	743964	0	True				
ANR	744047	AssignmentExpression	have_input = false		743964	0		=			
ANR	744048	Identifier	have_input		743964	0					
ANR	744049	Identifier	false		743964	1					
ANR	744050	ExpressionStatement	have_cached_line = false	416:8:11580:11604	743964	1	True				
ANR	744051	AssignmentExpression	have_cached_line = false		743964	0		=			
ANR	744052	Identifier	have_cached_line		743964	0					
ANR	744053	Identifier	false		743964	1					
ANR	744054	ElseStatement	else		743964	0					
ANR	744055	CompoundStatement		19:11:656:656	743964	0					
ANR	744056	ExpressionStatement	line = cached_line	418:8:11627:11645	743964	0	True				
ANR	744057	AssignmentExpression	line = cached_line		743964	0		=			
ANR	744058	Identifier	line		743964	0					
ANR	744059	Identifier	cached_line		743964	1					
ANR	744060	ExpressionStatement	have_input = true	419:8:11655:11672	743964	1	True				
ANR	744061	AssignmentExpression	have_input = true		743964	0		=			
ANR	744062	Identifier	have_input		743964	0					
ANR	744063	Identifier	true		743964	1					
ANR	744064	ExpressionStatement	have_cached_line = false	420:8:11682:11706	743964	2	True				
ANR	744065	AssignmentExpression	have_cached_line = false		743964	0		=			
ANR	744066	Identifier	have_cached_line		743964	0					
ANR	744067	Identifier	false		743964	1					
ANR	744068	IfStatement	if ( have_input )		743964	7					
ANR	744069	Condition	have_input	427:8:11971:11980	743964	0	True				
ANR	744070	Identifier	have_input		743964	0					
ANR	744071	CompoundStatement		29:20:1022:1022	743964	1					
ANR	744072	IfStatement	if ( line_is_comment ( line ) )		743964	0					
ANR	744073	Condition	line_is_comment ( line )	428:12:11997:12017	743964	0	True				
ANR	744074	CallExpression	line_is_comment ( line )		743964	0					
ANR	744075	Callee	line_is_comment		743964	0					
ANR	744076	Identifier	line_is_comment		743964	0					
ANR	744077	ArgumentList	line		743964	1					
ANR	744078	Argument	line		743964	0					
ANR	744079	Identifier	line		743964	0					
ANR	744080	CompoundStatement		30:35:1059:1059	743964	1					
ANR	744081	ExpressionStatement	"line = """""	429:12:12034:12043	743964	0	True				
ANR	744082	AssignmentExpression	"line = """""		743964	0		=			
ANR	744083	Identifier	line		743964	0					
ANR	744084	PrimaryExpression	""""""		743964	1					
ANR	744085	ElseStatement	else		743964	0					
ANR	744086	CompoundStatement		33:12:1113:1130	743964	0					
ANR	744087	IdentifierDeclStatement	bool done = false ;	431:12:12074:12091	743964	0	True				
ANR	744088	IdentifierDecl	done = false		743964	0					
ANR	744089	IdentifierDeclType	bool		743964	0					
ANR	744090	Identifier	done		743964	1					
ANR	744091	AssignmentExpression	done = false		743964	2		=			
ANR	744092	Identifier	false		743964	0					
ANR	744093	Identifier	false		743964	1					
ANR	744094	WhileStatement	while ( ! done )		743964	1					
ANR	744095	Condition	! done	432:19:12112:12116	743964	0	True				
ANR	744096	UnaryOperationExpression	! done		743964	0					
ANR	744097	UnaryOperator	!		743964	0					
ANR	744098	Identifier	done		743964	1					
ANR	744099	CompoundStatement		34:26:1158:1158	743964	1					
ANR	744100	ExpressionStatement	"getline ( * parameters . input_file , cached_line , '\\n' )"	433:16:12137:12187	743964	0	True				
ANR	744101	CallExpression	"getline ( * parameters . input_file , cached_line , '\\n' )"		743964	0					
ANR	744102	Callee	getline		743964	0					
ANR	744103	Identifier	getline		743964	0					
ANR	744104	ArgumentList	* parameters . input_file		743964	1					
ANR	744105	Argument	* parameters . input_file		743964	0					
ANR	744106	UnaryOperationExpression	* parameters . input_file		743964	0					
ANR	744107	UnaryOperator	*		743964	0					
ANR	744108	MemberAccess	parameters . input_file		743964	1					
ANR	744109	Identifier	parameters		743964	0					
ANR	744110	Identifier	input_file		743964	1					
ANR	744111	Argument	cached_line		743964	1					
ANR	744112	Identifier	cached_line		743964	0					
ANR	744113	Argument	'\\n'		743964	2					
ANR	744114	PrimaryExpression	'\\n'		743964	0					
ANR	744115	IfStatement	if ( line_is_comment ( cached_line ) )		743964	1					
ANR	744116	Condition	line_is_comment ( cached_line )	434:20:12209:12236	743964	0	True				
ANR	744117	CallExpression	line_is_comment ( cached_line )		743964	0					
ANR	744118	Callee	line_is_comment		743964	0					
ANR	744119	Identifier	line_is_comment		743964	0					
ANR	744120	ArgumentList	cached_line		743964	1					
ANR	744121	Argument	cached_line		743964	0					
ANR	744122	Identifier	cached_line		743964	0					
ANR	744123	CompoundStatement		36:50:1278:1278	743964	1					
ANR	744124	ExpressionStatement	state . line_number ++	436:20:12300:12319	743964	0	True				
ANR	744125	PostIncDecOperationExpression	state . line_number ++		743964	0					
ANR	744126	MemberAccess	state . line_number		743964	0					
ANR	744127	Identifier	state		743964	0					
ANR	744128	Identifier	line_number		743964	1					
ANR	744129	IncDec	++		743964	1					
ANR	744130	ElseStatement	else		743964	0					
ANR	744131	IfStatement	if ( isspace ( cached_line [ 0 ] ) )		743964	0					
ANR	744132	Condition	isspace ( cached_line [ 0 ] )	437:27:12348:12370	743964	0	True				
ANR	744133	CallExpression	isspace ( cached_line [ 0 ] )		743964	0					
ANR	744134	Callee	isspace		743964	0					
ANR	744135	Identifier	isspace		743964	0					
ANR	744136	ArgumentList	cached_line [ 0 ]		743964	1					
ANR	744137	Argument	cached_line [ 0 ]		743964	0					
ANR	744138	ArrayIndexing	cached_line [ 0 ]		743964	0					
ANR	744139	Identifier	cached_line		743964	0					
ANR	744140	PrimaryExpression	0		743964	1					
ANR	744141	CompoundStatement		39:52:1412:1412	743964	1					
ANR	744142	ExpressionStatement	line += cached_line	438:20:12395:12414	743964	0	True				
ANR	744143	AssignmentExpression	line += cached_line		743964	0		+=			
ANR	744144	Identifier	line		743964	0					
ANR	744145	Identifier	cached_line		743964	1					
ANR	744146	ExpressionStatement	state . line_number ++	439:20:12436:12455	743964	1	True				
ANR	744147	PostIncDecOperationExpression	state . line_number ++		743964	0					
ANR	744148	MemberAccess	state . line_number		743964	0					
ANR	744149	Identifier	state		743964	0					
ANR	744150	Identifier	line_number		743964	1					
ANR	744151	IncDec	++		743964	1					
ANR	744152	ElseStatement	else		743964	0					
ANR	744153	CompoundStatement		42:23:1519:1519	743964	0					
ANR	744154	ExpressionStatement	done = true	441:20:12502:12513	743964	0	True				
ANR	744155	AssignmentExpression	done = true		743964	0		=			
ANR	744156	Identifier	done		743964	0					
ANR	744157	Identifier	true		743964	1					
ANR	744158	ExpressionStatement	have_cached_line = true	442:20:12535:12558	743964	1	True				
ANR	744159	AssignmentExpression	have_cached_line = true		743964	0		=			
ANR	744160	Identifier	have_cached_line		743964	0					
ANR	744161	Identifier	true		743964	1					
ANR	744162	ReturnStatement	return have_input ;	447:4:12612:12629	743964	8	True				
ANR	744163	Identifier	have_input		743964	0					
ANR	744164	ReturnType	bool		743964	1					
ANR	744165	Identifier	read_line_file		743964	2					
ANR	744166	ParameterList	"string & line , State & state , Parameters & parameters"		743964	3					
ANR	744167	Parameter	string & line	396:4:10889:10904	743964	0	True				
ANR	744168	ParameterType	string &		743964	0					
ANR	744169	Identifier	line		743964	1					
ANR	744170	Parameter	State & state	397:4:10912:10928	743964	1	True				
ANR	744171	ParameterType	State &		743964	0					
ANR	744172	Identifier	state		743964	1					
ANR	744173	Parameter	Parameters & parameters	398:4:10936:10957	743964	2	True				
ANR	744174	ParameterType	Parameters &		743964	0					
ANR	744175	Identifier	parameters		743964	1					
ANR	744176	CFGEntryNode	ENTRY		743964		True				
ANR	744177	CFGExitNode	EXIT		743964		True				
ANR	744178	Symbol	have_cached_line		743964						
ANR	744179	Symbol	* parameters . input_file		743964						
ANR	744180	Symbol	cached_line . size		743964						
ANR	744181	Symbol	line		743964						
ANR	744182	Symbol	parameters . input_file -> eof		743964						
ANR	744183	Symbol	have_input		743964						
ANR	744184	Symbol	false		743964						
ANR	744185	Symbol	isspace		743964						
ANR	744186	Symbol	line_is_comment		743964						
ANR	744187	Symbol	* cached_line		743964						
ANR	744188	Symbol	cached_line		743964						
ANR	744189	Symbol	done		743964						
ANR	744190	Symbol	* parameters		743964						
ANR	744191	Symbol	state . line_number		743964						
ANR	744192	Symbol	true		743964						
ANR	744193	Symbol	state		743964						
ANR	744194	Symbol	parameters		743964						
ANR	744195	Symbol	parameters . input_file		743964						
ANR	744196	Function	replace_variables	457:0:12837:14611							
ANR	744197	FunctionDef	"replace_variables (string & line , State & state , Parameters & parameters)"		744196	0					
ANR	744198	CompoundStatement		461:0:12936:14611	744196	0					
ANR	744199	IdentifierDeclStatement	bool good_line ;	462:4:12942:12959	744196	0	True				
ANR	744200	IdentifierDecl	good_line		744196	0					
ANR	744201	IdentifierDeclType	bool		744196	0					
ANR	744202	Identifier	good_line		744196	1					
ANR	744203	IdentifierDeclStatement	string error ;	463:4:12965:12978	744196	1	True				
ANR	744204	IdentifierDecl	error		744196	0					
ANR	744205	IdentifierDeclType	string		744196	0					
ANR	744206	Identifier	error		744196	1					
ANR	744207	ExpressionStatement	good_line = true	465:4:12985:13001	744196	2	True				
ANR	744208	AssignmentExpression	good_line = true		744196	0		=			
ANR	744209	Identifier	good_line		744196	0					
ANR	744210	Identifier	true		744196	1					
ANR	744211	ExpressionStatement	"error = """""	466:4:13007:13017	744196	3	True				
ANR	744212	AssignmentExpression	"error = """""		744196	0		=			
ANR	744213	Identifier	error		744196	0					
ANR	744214	PrimaryExpression	""""""		744196	1					
ANR	744215	ForStatement	for ( ; ; )		744196	4					
ANR	744216	CompoundStatement		45:8:1248:1258	744196	0					
ANR	744217	IdentifierDeclStatement	"int dollar , current_position ;"	468:8:13042:13075	744196	0	True				
ANR	744218	IdentifierDecl	dollar		744196	0					
ANR	744219	IdentifierDeclType	int		744196	0					
ANR	744220	Identifier	dollar		744196	1					
ANR	744221	IdentifierDecl	current_position		744196	1					
ANR	744222	IdentifierDeclType	int		744196	0					
ANR	744223	Identifier	current_position		744196	1					
ANR	744224	IdentifierDeclStatement	string variable_name ;	469:8:13085:13107	744196	1	True				
ANR	744225	IdentifierDecl	variable_name		744196	0					
ANR	744226	IdentifierDeclType	string		744196	0					
ANR	744227	Identifier	variable_name		744196	1					
ANR	744228	IdentifierDeclStatement	string variable_value ;	470:8:13117:13140	744196	2	True				
ANR	744229	IdentifierDecl	variable_value		744196	0					
ANR	744230	IdentifierDeclType	string		744196	0					
ANR	744231	Identifier	variable_value		744196	1					
ANR	744232	IdentifierDeclStatement	Variable * var ;	471:8:13150:13163	744196	3	True				
ANR	744233	IdentifierDecl	* var		744196	0					
ANR	744234	IdentifierDeclType	Variable *		744196	0					
ANR	744235	Identifier	var		744196	1					
ANR	744236	ExpressionStatement	current_position = 0	473:8:13174:13194	744196	4	True				
ANR	744237	AssignmentExpression	current_position = 0		744196	0		=			
ANR	744238	Identifier	current_position		744196	0					
ANR	744239	PrimaryExpression	0		744196	1					
ANR	744240	ExpressionStatement	"dollar = line . find ( '$' , current_position )"	474:8:13204:13245	744196	5	True				
ANR	744241	AssignmentExpression	"dollar = line . find ( '$' , current_position )"		744196	0		=			
ANR	744242	Identifier	dollar		744196	0					
ANR	744243	CallExpression	"line . find ( '$' , current_position )"		744196	1					
ANR	744244	Callee	line . find		744196	0					
ANR	744245	MemberAccess	line . find		744196	0					
ANR	744246	Identifier	line		744196	0					
ANR	744247	Identifier	find		744196	1					
ANR	744248	ArgumentList	'$'		744196	1					
ANR	744249	Argument	'$'		744196	0					
ANR	744250	PrimaryExpression	'$'		744196	0					
ANR	744251	Argument	current_position		744196	1					
ANR	744252	Identifier	current_position		744196	0					
ANR	744253	IfStatement	if ( dollar == - 1 )		744196	6					
ANR	744254	Condition	dollar == - 1	475:12:13259:13270	744196	0	True				
ANR	744255	EqualityExpression	dollar == - 1		744196	0		==			
ANR	744256	Identifier	dollar		744196	0					
ANR	744257	UnaryOperationExpression	- 1		744196	1					
ANR	744258	UnaryOperator	-		744196	0					
ANR	744259	PrimaryExpression	1		744196	1					
ANR	744260	CompoundStatement		15:26:336:336	744196	1					
ANR	744261	BreakStatement	break ;	476:12:13287:13292	744196	0	True				
ANR	744262	ExpressionStatement	current_position = dollar + 1	478:8:13312:13341	744196	7	True				
ANR	744263	AssignmentExpression	current_position = dollar + 1		744196	0		=			
ANR	744264	Identifier	current_position		744196	0					
ANR	744265	AdditiveExpression	dollar + 1		744196	1		+			
ANR	744266	Identifier	dollar		744196	0					
ANR	744267	PrimaryExpression	1		744196	1					
ANR	744268	IfStatement	if ( ! isalpha ( line [ current_position ] ) )		744196	8					
ANR	744269	Condition	! isalpha ( line [ current_position ] )	479:12:13355:13386	744196	0	True				
ANR	744270	UnaryOperationExpression	! isalpha ( line [ current_position ] )		744196	0					
ANR	744271	UnaryOperator	!		744196	0					
ANR	744272	CallExpression	isalpha ( line [ current_position ] )		744196	1					
ANR	744273	Callee	isalpha		744196	0					
ANR	744274	Identifier	isalpha		744196	0					
ANR	744275	ArgumentList	line [ current_position ]		744196	1					
ANR	744276	Argument	line [ current_position ]		744196	0					
ANR	744277	ArrayIndexing	line [ current_position ]		744196	0					
ANR	744278	Identifier	line		744196	0					
ANR	744279	Identifier	current_position		744196	1					
ANR	744280	CompoundStatement		19:45:451:451	744196	1					
ANR	744281	ExpressionStatement	good_line = false	480:12:13403:13420	744196	0	True				
ANR	744282	AssignmentExpression	good_line = false		744196	0		=			
ANR	744283	Identifier	good_line		744196	0					
ANR	744284	Identifier	false		744196	1					
ANR	744285	ExpressionStatement	"error = ""Bad variable name."""	481:12:13434:13462	744196	1	True				
ANR	744286	AssignmentExpression	"error = ""Bad variable name."""		744196	0		=			
ANR	744287	Identifier	error		744196	0					
ANR	744288	PrimaryExpression	"""Bad variable name."""		744196	1					
ANR	744289	BreakStatement	break ;	482:12:13476:13481	744196	2	True				
ANR	744290	ExpressionStatement	current_position ++	484:8:13501:13519	744196	9	True				
ANR	744291	PostIncDecOperationExpression	current_position ++		744196	0					
ANR	744292	Identifier	current_position		744196	0					
ANR	744293	IncDec	++		744196	1					
ANR	744294	WhileStatement	while ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' )		744196	10					
ANR	744295	Condition	isalnum ( line [ current_position ] ) || line [ current_position ] == '_'	485:15:13536:13599	744196	0	True				
ANR	744296	OrExpression	isalnum ( line [ current_position ] ) || line [ current_position ] == '_'		744196	0		||			
ANR	744297	CallExpression	isalnum ( line [ current_position ] )		744196	0					
ANR	744298	Callee	isalnum		744196	0					
ANR	744299	Identifier	isalnum		744196	0					
ANR	744300	ArgumentList	line [ current_position ]		744196	1					
ANR	744301	Argument	line [ current_position ]		744196	0					
ANR	744302	ArrayIndexing	line [ current_position ]		744196	0					
ANR	744303	Identifier	line		744196	0					
ANR	744304	Identifier	current_position		744196	1					
ANR	744305	EqualityExpression	line [ current_position ] == '_'		744196	1		==			
ANR	744306	ArrayIndexing	line [ current_position ]		744196	0					
ANR	744307	Identifier	line		744196	0					
ANR	744308	Identifier	current_position		744196	1					
ANR	744309	PrimaryExpression	'_'		744196	1					
ANR	744310	CompoundStatement		25:81:665:665	744196	1					
ANR	744311	ExpressionStatement	current_position ++	486:12:13616:13634	744196	0	True				
ANR	744312	PostIncDecOperationExpression	current_position ++		744196	0					
ANR	744313	Identifier	current_position		744196	0					
ANR	744314	IncDec	++		744196	1					
ANR	744315	ExpressionStatement	"variable_name = line . substr ( dollar + 1 , current_position - ( dollar + 1 ) )"	489:8:13663:13735	744196	11	True				
ANR	744316	AssignmentExpression	"variable_name = line . substr ( dollar + 1 , current_position - ( dollar + 1 ) )"		744196	0		=			
ANR	744317	Identifier	variable_name		744196	0					
ANR	744318	CallExpression	"line . substr ( dollar + 1 , current_position - ( dollar + 1 ) )"		744196	1					
ANR	744319	Callee	line . substr		744196	0					
ANR	744320	MemberAccess	line . substr		744196	0					
ANR	744321	Identifier	line		744196	0					
ANR	744322	Identifier	substr		744196	1					
ANR	744323	ArgumentList	dollar + 1		744196	1					
ANR	744324	Argument	dollar + 1		744196	0					
ANR	744325	AdditiveExpression	dollar + 1		744196	0		+			
ANR	744326	Identifier	dollar		744196	0					
ANR	744327	PrimaryExpression	1		744196	1					
ANR	744328	Argument	current_position - ( dollar + 1 )		744196	1					
ANR	744329	AdditiveExpression	current_position - ( dollar + 1 )		744196	0		-			
ANR	744330	Identifier	current_position		744196	0					
ANR	744331	AdditiveExpression	dollar + 1		744196	1		+			
ANR	744332	Identifier	dollar		744196	0					
ANR	744333	PrimaryExpression	1		744196	1					
ANR	744334	ExpressionStatement	var = variables [ variable_name ]	491:8:13746:13776	744196	12	True				
ANR	744335	AssignmentExpression	var = variables [ variable_name ]		744196	0		=			
ANR	744336	Identifier	var		744196	0					
ANR	744337	ArrayIndexing	variables [ variable_name ]		744196	1					
ANR	744338	Identifier	variables		744196	0					
ANR	744339	Identifier	variable_name		744196	1					
ANR	744340	IfStatement	if ( var == NULL )		744196	13					
ANR	744341	Condition	var == NULL	493:12:13791:13801	744196	0	True				
ANR	744342	EqualityExpression	var == NULL		744196	0		==			
ANR	744343	Identifier	var		744196	0					
ANR	744344	Identifier	NULL		744196	1					
ANR	744345	CompoundStatement		33:25:867:867	744196	1					
ANR	744346	ExpressionStatement	good_line = false	494:12:13818:13835	744196	0	True				
ANR	744347	AssignmentExpression	good_line = false		744196	0		=			
ANR	744348	Identifier	good_line		744196	0					
ANR	744349	Identifier	false		744196	1					
ANR	744350	ExpressionStatement	"error = ""Unknown variable '$"""	495:12:13849:13878	744196	1	True				
ANR	744351	AssignmentExpression	"error = ""Unknown variable '$"""		744196	0		=			
ANR	744352	Identifier	error		744196	0					
ANR	744353	PrimaryExpression	"""Unknown variable '$"""		744196	1					
ANR	744354	ExpressionStatement	error += variable_name	496:12:13892:13914	744196	2	True				
ANR	744355	AssignmentExpression	error += variable_name		744196	0		+=			
ANR	744356	Identifier	error		744196	0					
ANR	744357	Identifier	variable_name		744196	1					
ANR	744358	ExpressionStatement	"error += ""'"""	497:12:13928:13940	744196	3	True				
ANR	744359	AssignmentExpression	"error += ""'"""		744196	0		+=			
ANR	744360	Identifier	error		744196	0					
ANR	744361	PrimaryExpression	"""'"""		744196	1					
ANR	744362	BreakStatement	break ;	498:12:13954:13959	744196	4	True				
ANR	744363	ExpressionStatement	var -> GetStringRepresentation ( variable_value )	501:8:13980:14024	744196	14	True				
ANR	744364	CallExpression	var -> GetStringRepresentation ( variable_value )		744196	0					
ANR	744365	Callee	var -> GetStringRepresentation		744196	0					
ANR	744366	PtrMemberAccess	var -> GetStringRepresentation		744196	0					
ANR	744367	Identifier	var		744196	0					
ANR	744368	Identifier	GetStringRepresentation		744196	1					
ANR	744369	ArgumentList	variable_value		744196	1					
ANR	744370	Argument	variable_value		744196	0					
ANR	744371	Identifier	variable_value		744196	0					
ANR	744372	IdentifierDeclStatement	string end ;	505:8:14185:14195	744196	15	True				
ANR	744373	IdentifierDecl	end		744196	0					
ANR	744374	IdentifierDeclType	string		744196	0					
ANR	744375	Identifier	end		744196	1					
ANR	744376	IfStatement	if ( current_position < ( int ) line . size ( ) )		744196	16					
ANR	744377	Condition	current_position < ( int ) line . size ( )	506:12:14209:14244	744196	0	True				
ANR	744378	RelationalExpression	current_position < ( int ) line . size ( )		744196	0		<			
ANR	744379	Identifier	current_position		744196	0					
ANR	744380	CastExpression	( int ) line . size ( )		744196	1					
ANR	744381	CastTarget	int		744196	0					
ANR	744382	CallExpression	line . size ( )		744196	1					
ANR	744383	Callee	line . size		744196	0					
ANR	744384	MemberAccess	line . size		744196	0					
ANR	744385	Identifier	line		744196	0					
ANR	744386	Identifier	size		744196	1					
ANR	744387	ArgumentList			744196	1					
ANR	744388	CompoundStatement		46:50:1310:1310	744196	1					
ANR	744389	ExpressionStatement	end = line . substr ( current_position )	507:12:14261:14296	744196	0	True				
ANR	744390	AssignmentExpression	end = line . substr ( current_position )		744196	0		=			
ANR	744391	Identifier	end		744196	0					
ANR	744392	CallExpression	line . substr ( current_position )		744196	1					
ANR	744393	Callee	line . substr		744196	0					
ANR	744394	MemberAccess	line . substr		744196	0					
ANR	744395	Identifier	line		744196	0					
ANR	744396	Identifier	substr		744196	1					
ANR	744397	ArgumentList	current_position		744196	1					
ANR	744398	Argument	current_position		744196	0					
ANR	744399	Identifier	current_position		744196	0					
ANR	744400	ElseStatement	else		744196	0					
ANR	744401	CompoundStatement		48:15:1376:1376	744196	0					
ANR	744402	ExpressionStatement	"end = """""	509:12:14327:14335	744196	0	True				
ANR	744403	AssignmentExpression	"end = """""		744196	0		=			
ANR	744404	Identifier	end		744196	0					
ANR	744405	PrimaryExpression	""""""		744196	1					
ANR	744406	ExpressionStatement	"line = line . substr ( 0 , dollar ) + variable_value + end"	511:8:14355:14407	744196	17	True				
ANR	744407	AssignmentExpression	"line = line . substr ( 0 , dollar ) + variable_value + end"		744196	0		=			
ANR	744408	Identifier	line		744196	0					
ANR	744409	AdditiveExpression	"line . substr ( 0 , dollar ) + variable_value + end"		744196	1		+			
ANR	744410	CallExpression	"line . substr ( 0 , dollar )"		744196	0					
ANR	744411	Callee	line . substr		744196	0					
ANR	744412	MemberAccess	line . substr		744196	0					
ANR	744413	Identifier	line		744196	0					
ANR	744414	Identifier	substr		744196	1					
ANR	744415	ArgumentList	0		744196	1					
ANR	744416	Argument	0		744196	0					
ANR	744417	PrimaryExpression	0		744196	0					
ANR	744418	Argument	dollar		744196	1					
ANR	744419	Identifier	dollar		744196	0					
ANR	744420	AdditiveExpression	variable_value + end		744196	1		+			
ANR	744421	Identifier	variable_value		744196	0					
ANR	744422	Identifier	end		744196	1					
ANR	744423	IfStatement	if ( parameters . debug )		744196	5					
ANR	744424	Condition	parameters . debug	515:8:14429:14444	744196	0	True				
ANR	744425	MemberAccess	parameters . debug		744196	0					
ANR	744426	Identifier	parameters		744196	0					
ANR	744427	Identifier	debug		744196	1					
ANR	744428	CompoundStatement		55:26:1510:1510	744196	1					
ANR	744429	ExpressionStatement	"cerr << ""# after replacement: "" << line << endl"	516:8:14457:14504	744196	0	True				
ANR	744430	ShiftExpression	"cerr << ""# after replacement: "" << line << endl"		744196	0		<<			
ANR	744431	Identifier	cerr		744196	0					
ANR	744432	ShiftExpression	"""# after replacement: "" << line << endl"		744196	1		<<			
ANR	744433	PrimaryExpression	"""# after replacement: """		744196	0					
ANR	744434	ShiftExpression	line << endl		744196	1		<<			
ANR	744435	Identifier	line		744196	0					
ANR	744436	Identifier	endl		744196	1					
ANR	744437	IfStatement	if ( ! good_line )		744196	6					
ANR	744438	Condition	! good_line	519:8:14525:14534	744196	0	True				
ANR	744439	UnaryOperationExpression	! good_line		744196	0					
ANR	744440	UnaryOperator	!		744196	0					
ANR	744441	Identifier	good_line		744196	1					
ANR	744442	CompoundStatement		59:20:1600:1600	744196	1					
ANR	744443	ExpressionStatement	"print_error_message ( error , state )"	520:8:14547:14580	744196	0	True				
ANR	744444	CallExpression	"print_error_message ( error , state )"		744196	0					
ANR	744445	Callee	print_error_message		744196	0					
ANR	744446	Identifier	print_error_message		744196	0					
ANR	744447	ArgumentList	error		744196	1					
ANR	744448	Argument	error		744196	0					
ANR	744449	Identifier	error		744196	0					
ANR	744450	Argument	state		744196	1					
ANR	744451	Identifier	state		744196	0					
ANR	744452	ReturnStatement	return good_line ;	523:4:14593:14609	744196	7	True				
ANR	744453	Identifier	good_line		744196	0					
ANR	744454	ReturnType	bool		744196	1					
ANR	744455	Identifier	replace_variables		744196	2					
ANR	744456	ParameterList	"string & line , State & state , Parameters & parameters"		744196	3					
ANR	744457	Parameter	string & line	458:4:12865:12880	744196	0	True				
ANR	744458	ParameterType	string &		744196	0					
ANR	744459	Identifier	line		744196	1					
ANR	744460	Parameter	State & state	459:4:12888:12904	744196	1	True				
ANR	744461	ParameterType	State &		744196	0					
ANR	744462	Identifier	state		744196	1					
ANR	744463	Parameter	Parameters & parameters	460:4:12912:12933	744196	2	True				
ANR	744464	ParameterType	Parameters &		744196	0					
ANR	744465	Identifier	parameters		744196	1					
ANR	744466	CFGEntryNode	ENTRY		744196		True				
ANR	744467	CFGExitNode	EXIT		744196		True				
ANR	744468	InfiniteForNode	true		744196		True				
ANR	744469	Symbol	isalpha		744196						
ANR	744470	Symbol	variable_value		744196						
ANR	744471	Symbol	line . find		744196						
ANR	744472	Symbol	line		744196						
ANR	744473	Symbol	line . substr		744196						
ANR	744474	Symbol	line . size		744196						
ANR	744475	Symbol	current_position		744196						
ANR	744476	Symbol	* variables		744196						
ANR	744477	Symbol	* line		744196						
ANR	744478	Symbol	error		744196						
ANR	744479	Symbol	dollar		744196						
ANR	744480	Symbol	parameters . debug		744196						
ANR	744481	Symbol	* variable_name		744196						
ANR	744482	Symbol	end		744196						
ANR	744483	Symbol	state		744196						
ANR	744484	Symbol	variable_name		744196						
ANR	744485	Symbol	variables		744196						
ANR	744486	Symbol	NULL		744196						
ANR	744487	Symbol	isalnum		744196						
ANR	744488	Symbol	good_line		744196						
ANR	744489	Symbol	var		744196						
ANR	744490	Symbol	false		744196						
ANR	744491	Symbol	* current_position		744196						
ANR	744492	Symbol	true		744196						
ANR	744493	Symbol	parameters		744196						
ANR	744494	DeclStmt									
ANR	744495	Decl							int	int	current_position
ANR	744496	DeclStmt									
ANR	744497	Decl							int	int	length
ANR	744498	DeclStmt									
ANR	744499	Decl							string	string	command_name
ANR	744500	DeclStmt									
ANR	744501	Decl							Command	Command	command
ANR	744502	Function	handle_command	599:0:16816:18284							
ANR	744503	FunctionDef	"handle_command (Command command , string & line , State & state , Parameters & parameters)"		744502	0					
ANR	744504	CompoundStatement		604:0:16937:18284	744502	0					
ANR	744505	IdentifierDeclStatement	bool quit = false ;	605:4:16943:16960	744502	0	True				
ANR	744506	IdentifierDecl	quit = false		744502	0					
ANR	744507	IdentifierDeclType	bool		744502	0					
ANR	744508	Identifier	quit		744502	1					
ANR	744509	AssignmentExpression	quit = false		744502	2		=			
ANR	744510	Identifier	false		744502	0					
ANR	744511	Identifier	false		744502	1					
ANR	744512	SwitchStatement	switch ( command )		744502	1					
ANR	744513	Condition	command	607:12:16975:16981	744502	0	True				
ANR	744514	Identifier	command		744502	0					
ANR	744515	CompoundStatement		4:21:46:46	744502	1					
ANR	744516	Label	case cmd_NoCommand :	608:4:16990:17008	744502	0	True				
ANR	744517	Identifier	cmd_NoCommand		744502	0					
ANR	744518	BreakStatement	break ;	610:8:17059:17064	744502	1	True				
ANR	744519	Label	case cmd_InvalidCommand :	611:4:17070:17093	744502	2	True				
ANR	744520	Identifier	cmd_InvalidCommand		744502	0					
ANR	744521	ExpressionStatement	"print_error_message ( ""Unknown command on line"" , state )"	612:8:17103:17156	744502	3	True				
ANR	744522	CallExpression	"print_error_message ( ""Unknown command on line"" , state )"		744502	0					
ANR	744523	Callee	print_error_message		744502	0					
ANR	744524	Identifier	print_error_message		744502	0					
ANR	744525	ArgumentList	"""Unknown command on line"""		744502	1					
ANR	744526	Argument	"""Unknown command on line"""		744502	0					
ANR	744527	PrimaryExpression	"""Unknown command on line"""		744502	0					
ANR	744528	Argument	state		744502	1					
ANR	744529	Identifier	state		744502	0					
ANR	744530	BreakStatement	break ;	613:8:17166:17171	744502	4	True				
ANR	744531	Label	case cmd_Let :	614:4:17177:17189	744502	5	True				
ANR	744532	Identifier	cmd_Let		744502	0					
ANR	744533	ExpressionStatement	"handle_let ( line , state , parameters )"	615:8:17199:17234	744502	6	True				
ANR	744534	CallExpression	"handle_let ( line , state , parameters )"		744502	0					
ANR	744535	Callee	handle_let		744502	0					
ANR	744536	Identifier	handle_let		744502	0					
ANR	744537	ArgumentList	line		744502	1					
ANR	744538	Argument	line		744502	0					
ANR	744539	Identifier	line		744502	0					
ANR	744540	Argument	state		744502	1					
ANR	744541	Identifier	state		744502	0					
ANR	744542	Argument	parameters		744502	2					
ANR	744543	Identifier	parameters		744502	0					
ANR	744544	BreakStatement	break ;	616:8:17244:17249	744502	7	True				
ANR	744545	Label	case cmd_Eval :	617:4:17255:17268	744502	8	True				
ANR	744546	Identifier	cmd_Eval		744502	0					
ANR	744547	ExpressionStatement	"handle_eval ( line , state , parameters )"	618:8:17278:17314	744502	9	True				
ANR	744548	CallExpression	"handle_eval ( line , state , parameters )"		744502	0					
ANR	744549	Callee	handle_eval		744502	0					
ANR	744550	Identifier	handle_eval		744502	0					
ANR	744551	ArgumentList	line		744502	1					
ANR	744552	Argument	line		744502	0					
ANR	744553	Identifier	line		744502	0					
ANR	744554	Argument	state		744502	1					
ANR	744555	Identifier	state		744502	0					
ANR	744556	Argument	parameters		744502	2					
ANR	744557	Identifier	parameters		744502	0					
ANR	744558	BreakStatement	break ;	619:8:17324:17329	744502	10	True				
ANR	744559	Label	case cmd_Print :	620:4:17335:17349	744502	11	True				
ANR	744560	Identifier	cmd_Print		744502	0					
ANR	744561	ExpressionStatement	"handle_print ( line , state , parameters )"	621:8:17359:17396	744502	12	True				
ANR	744562	CallExpression	"handle_print ( line , state , parameters )"		744502	0					
ANR	744563	Callee	handle_print		744502	0					
ANR	744564	Identifier	handle_print		744502	0					
ANR	744565	ArgumentList	line		744502	1					
ANR	744566	Argument	line		744502	0					
ANR	744567	Identifier	line		744502	0					
ANR	744568	Argument	state		744502	1					
ANR	744569	Identifier	state		744502	0					
ANR	744570	Argument	parameters		744502	2					
ANR	744571	Identifier	parameters		744502	0					
ANR	744572	BreakStatement	break ;	622:8:17406:17411	744502	13	True				
ANR	744573	Label	case cmd_Same :	623:4:17417:17430	744502	14	True				
ANR	744574	Identifier	cmd_Same		744502	0					
ANR	744575	ExpressionStatement	"handle_same ( line , state , parameters )"	624:8:17440:17476	744502	15	True				
ANR	744576	CallExpression	"handle_same ( line , state , parameters )"		744502	0					
ANR	744577	Callee	handle_same		744502	0					
ANR	744578	Identifier	handle_same		744502	0					
ANR	744579	ArgumentList	line		744502	1					
ANR	744580	Argument	line		744502	0					
ANR	744581	Identifier	line		744502	0					
ANR	744582	Argument	state		744502	1					
ANR	744583	Identifier	state		744502	0					
ANR	744584	Argument	parameters		744502	2					
ANR	744585	Identifier	parameters		744502	0					
ANR	744586	BreakStatement	break ;	625:8:17486:17491	744502	16	True				
ANR	744587	Label	case cmd_Sameq :	626:4:17497:17511	744502	17	True				
ANR	744588	Identifier	cmd_Sameq		744502	0					
ANR	744589	ExpressionStatement	"handle_sameq ( line , state , parameters )"	627:8:17521:17558	744502	18	True				
ANR	744590	CallExpression	"handle_sameq ( line , state , parameters )"		744502	0					
ANR	744591	Callee	handle_sameq		744502	0					
ANR	744592	Identifier	handle_sameq		744502	0					
ANR	744593	ArgumentList	line		744502	1					
ANR	744594	Argument	line		744502	0					
ANR	744595	Identifier	line		744502	0					
ANR	744596	Argument	state		744502	1					
ANR	744597	Identifier	state		744502	0					
ANR	744598	Argument	parameters		744502	2					
ANR	744599	Identifier	parameters		744502	0					
ANR	744600	BreakStatement	break ;	628:8:17568:17573	744502	19	True				
ANR	744601	Label	case cmd_Diff :	629:4:17579:17592	744502	20	True				
ANR	744602	Identifier	cmd_Diff		744502	0					
ANR	744603	ExpressionStatement	"handle_diff ( line , state , parameters )"	630:8:17602:17638	744502	21	True				
ANR	744604	CallExpression	"handle_diff ( line , state , parameters )"		744502	0					
ANR	744605	Callee	handle_diff		744502	0					
ANR	744606	Identifier	handle_diff		744502	0					
ANR	744607	ArgumentList	line		744502	1					
ANR	744608	Argument	line		744502	0					
ANR	744609	Identifier	line		744502	0					
ANR	744610	Argument	state		744502	1					
ANR	744611	Identifier	state		744502	0					
ANR	744612	Argument	parameters		744502	2					
ANR	744613	Identifier	parameters		744502	0					
ANR	744614	BreakStatement	break ;	631:8:17648:17653	744502	22	True				
ANR	744615	Label	case cmd_Diffq :	632:4:17659:17673	744502	23	True				
ANR	744616	Identifier	cmd_Diffq		744502	0					
ANR	744617	ExpressionStatement	"handle_diffq ( line , state , parameters )"	633:8:17683:17720	744502	24	True				
ANR	744618	CallExpression	"handle_diffq ( line , state , parameters )"		744502	0					
ANR	744619	Callee	handle_diffq		744502	0					
ANR	744620	Identifier	handle_diffq		744502	0					
ANR	744621	ArgumentList	line		744502	1					
ANR	744622	Argument	line		744502	0					
ANR	744623	Identifier	line		744502	0					
ANR	744624	Argument	state		744502	1					
ANR	744625	Identifier	state		744502	0					
ANR	744626	Argument	parameters		744502	2					
ANR	744627	Identifier	parameters		744502	0					
ANR	744628	BreakStatement	break ;	634:8:17730:17735	744502	25	True				
ANR	744629	Label	case cmd_Set :	635:4:17741:17753	744502	26	True				
ANR	744630	Identifier	cmd_Set		744502	0					
ANR	744631	ExpressionStatement	"handle_set ( line , state , parameters )"	636:8:17763:17798	744502	27	True				
ANR	744632	CallExpression	"handle_set ( line , state , parameters )"		744502	0					
ANR	744633	Callee	handle_set		744502	0					
ANR	744634	Identifier	handle_set		744502	0					
ANR	744635	ArgumentList	line		744502	1					
ANR	744636	Argument	line		744502	0					
ANR	744637	Identifier	line		744502	0					
ANR	744638	Argument	state		744502	1					
ANR	744639	Identifier	state		744502	0					
ANR	744640	Argument	parameters		744502	2					
ANR	744641	Identifier	parameters		744502	0					
ANR	744642	BreakStatement	break ;	637:8:17808:17813	744502	28	True				
ANR	744643	Label	case cmd_Show :	638:4:17819:17832	744502	29	True				
ANR	744644	Identifier	cmd_Show		744502	0					
ANR	744645	ExpressionStatement	"handle_show ( line , state , parameters )"	639:8:17842:17878	744502	30	True				
ANR	744646	CallExpression	"handle_show ( line , state , parameters )"		744502	0					
ANR	744647	Callee	handle_show		744502	0					
ANR	744648	Identifier	handle_show		744502	0					
ANR	744649	ArgumentList	line		744502	1					
ANR	744650	Argument	line		744502	0					
ANR	744651	Identifier	line		744502	0					
ANR	744652	Argument	state		744502	1					
ANR	744653	Identifier	state		744502	0					
ANR	744654	Argument	parameters		744502	2					
ANR	744655	Identifier	parameters		744502	0					
ANR	744656	BreakStatement	break ;	640:8:17888:17893	744502	31	True				
ANR	744657	Label	case cmd_Writexml :	641:4:17899:17916	744502	32	True				
ANR	744658	Identifier	cmd_Writexml		744502	0					
ANR	744659	ExpressionStatement	"handle_writexml ( line , state , parameters )"	642:8:17926:17966	744502	33	True				
ANR	744660	CallExpression	"handle_writexml ( line , state , parameters )"		744502	0					
ANR	744661	Callee	handle_writexml		744502	0					
ANR	744662	Identifier	handle_writexml		744502	0					
ANR	744663	ArgumentList	line		744502	1					
ANR	744664	Argument	line		744502	0					
ANR	744665	Identifier	line		744502	0					
ANR	744666	Argument	state		744502	1					
ANR	744667	Identifier	state		744502	0					
ANR	744668	Argument	parameters		744502	2					
ANR	744669	Identifier	parameters		744502	0					
ANR	744670	BreakStatement	break ;	643:8:17976:17981	744502	34	True				
ANR	744671	Label	case cmd_Readxml :	644:4:17987:18003	744502	35	True				
ANR	744672	Identifier	cmd_Readxml		744502	0					
ANR	744673	ExpressionStatement	"handle_readxml ( line , state , parameters )"	645:8:18013:18052	744502	36	True				
ANR	744674	CallExpression	"handle_readxml ( line , state , parameters )"		744502	0					
ANR	744675	Callee	handle_readxml		744502	0					
ANR	744676	Identifier	handle_readxml		744502	0					
ANR	744677	ArgumentList	line		744502	1					
ANR	744678	Argument	line		744502	0					
ANR	744679	Identifier	line		744502	0					
ANR	744680	Argument	state		744502	1					
ANR	744681	Identifier	state		744502	0					
ANR	744682	Argument	parameters		744502	2					
ANR	744683	Identifier	parameters		744502	0					
ANR	744684	BreakStatement	break ;	646:8:18062:18067	744502	37	True				
ANR	744685	Label	case cmd_Echo :	647:4:18073:18086	744502	38	True				
ANR	744686	Identifier	cmd_Echo		744502	0					
ANR	744687	ExpressionStatement	"handle_echo ( line , state , parameters )"	648:8:18096:18132	744502	39	True				
ANR	744688	CallExpression	"handle_echo ( line , state , parameters )"		744502	0					
ANR	744689	Callee	handle_echo		744502	0					
ANR	744690	Identifier	handle_echo		744502	0					
ANR	744691	ArgumentList	line		744502	1					
ANR	744692	Argument	line		744502	0					
ANR	744693	Identifier	line		744502	0					
ANR	744694	Argument	state		744502	1					
ANR	744695	Identifier	state		744502	0					
ANR	744696	Argument	parameters		744502	2					
ANR	744697	Identifier	parameters		744502	0					
ANR	744698	BreakStatement	break ;	649:8:18142:18147	744502	40	True				
ANR	744699	Label	case cmd_Help :	650:4:18153:18166	744502	41	True				
ANR	744700	Identifier	cmd_Help		744502	0					
ANR	744701	ExpressionStatement	handle_help ( )	651:8:18176:18189	744502	42	True				
ANR	744702	CallExpression	handle_help ( )		744502	0					
ANR	744703	Callee	handle_help		744502	0					
ANR	744704	Identifier	handle_help		744502	0					
ANR	744705	ArgumentList			744502	1					
ANR	744706	BreakStatement	break ;	652:8:18199:18204	744502	43	True				
ANR	744707	Label	case cmd_Quit :	653:4:18210:18223	744502	44	True				
ANR	744708	Identifier	cmd_Quit		744502	0					
ANR	744709	ExpressionStatement	quit = true	654:8:18233:18244	744502	45	True				
ANR	744710	AssignmentExpression	quit = true		744502	0		=			
ANR	744711	Identifier	quit		744502	0					
ANR	744712	Identifier	true		744502	1					
ANR	744713	BreakStatement	break ;	655:8:18254:18259	744502	46	True				
ANR	744714	ReturnStatement	return quit ;	657:4:18271:18282	744502	2	True				
ANR	744715	Identifier	quit		744502	0					
ANR	744716	ReturnType	bool		744502	1					
ANR	744717	Identifier	handle_command		744502	2					
ANR	744718	ParameterList	"Command command , string & line , State & state , Parameters & parameters"		744502	3					
ANR	744719	Parameter	Command command	600:4:16841:16858	744502	0	True				
ANR	744720	ParameterType	Command		744502	0					
ANR	744721	Identifier	command		744502	1					
ANR	744722	Parameter	string & line	601:4:16866:16881	744502	1	True				
ANR	744723	ParameterType	string &		744502	0					
ANR	744724	Identifier	line		744502	1					
ANR	744725	Parameter	State & state	602:4:16889:16905	744502	2	True				
ANR	744726	ParameterType	State &		744502	0					
ANR	744727	Identifier	state		744502	1					
ANR	744728	Parameter	Parameters & parameters	603:4:16913:16934	744502	3	True				
ANR	744729	ParameterType	Parameters &		744502	0					
ANR	744730	Identifier	parameters		744502	1					
ANR	744731	CFGEntryNode	ENTRY		744502		True				
ANR	744732	CFGExitNode	EXIT		744502		True				
ANR	744733	Symbol	line		744502						
ANR	744734	Symbol	false		744502						
ANR	744735	Symbol	true		744502						
ANR	744736	Symbol	quit		744502						
ANR	744737	Symbol	state		744502						
ANR	744738	Symbol	parameters		744502						
ANR	744739	Symbol	command		744502						
ANR	744740	Function	handle_let	666:0:18474:19041							
ANR	744741	FunctionDef	"handle_let (string & line , State & state , Parameters & parameters)"		744740	0					
ANR	744742	CompoundStatement		670:0:18566:19041	744740	0					
ANR	744743	IdentifierDeclStatement	string variable_name ;	671:4:18572:18595	744740	0	True				
ANR	744744	IdentifierDecl	variable_name		744740	0					
ANR	744745	IdentifierDeclType	string		744740	0					
ANR	744746	Identifier	variable_name		744740	1					
ANR	744747	IdentifierDeclStatement	ExprTree * tree ;	672:4:18601:18616	744740	1	True				
ANR	744748	IdentifierDecl	* tree		744740	0					
ANR	744749	IdentifierDeclType	ExprTree *		744740	0					
ANR	744750	Identifier	tree		744740	1					
ANR	744751	IdentifierDeclStatement	Variable * variable ;	673:4:18622:18641	744740	2	True				
ANR	744752	IdentifierDecl	* variable		744740	0					
ANR	744753	IdentifierDeclType	Variable *		744740	0					
ANR	744754	Identifier	variable		744740	1					
ANR	744755	IfStatement	"if ( get_variable_name ( line , true , variable_name , state , parameters ) )"		744740	3					
ANR	744756	Condition	"get_variable_name ( line , true , variable_name , state , parameters )"	675:8:18652:18714	744740	0	True				
ANR	744757	CallExpression	"get_variable_name ( line , true , variable_name , state , parameters )"		744740	0					
ANR	744758	Callee	get_variable_name		744740	0					
ANR	744759	Identifier	get_variable_name		744740	0					
ANR	744760	ArgumentList	line		744740	1					
ANR	744761	Argument	line		744740	0					
ANR	744762	Identifier	line		744740	0					
ANR	744763	Argument	true		744740	1					
ANR	744764	Identifier	true		744740	0					
ANR	744765	Argument	variable_name		744740	2					
ANR	744766	Identifier	variable_name		744740	0					
ANR	744767	Argument	state		744740	3					
ANR	744768	Identifier	state		744740	0					
ANR	744769	Argument	parameters		744740	4					
ANR	744770	Identifier	parameters		744740	0					
ANR	744771	CompoundStatement		6:73:150:150	744740	1					
ANR	744772	ExpressionStatement	"tree = get_expr ( line , state , parameters )"	676:8:18727:18767	744740	0	True				
ANR	744773	AssignmentExpression	"tree = get_expr ( line , state , parameters )"		744740	0		=			
ANR	744774	Identifier	tree		744740	0					
ANR	744775	CallExpression	"get_expr ( line , state , parameters )"		744740	1					
ANR	744776	Callee	get_expr		744740	0					
ANR	744777	Identifier	get_expr		744740	0					
ANR	744778	ArgumentList	line		744740	1					
ANR	744779	Argument	line		744740	0					
ANR	744780	Identifier	line		744740	0					
ANR	744781	Argument	state		744740	1					
ANR	744782	Identifier	state		744740	0					
ANR	744783	Argument	parameters		744740	2					
ANR	744784	Identifier	parameters		744740	0					
ANR	744785	IfStatement	if ( tree != NULL )		744740	1					
ANR	744786	Condition	tree != NULL	677:12:18781:18792	744740	0	True				
ANR	744787	EqualityExpression	tree != NULL		744740	0		!=			
ANR	744788	Identifier	tree		744740	0					
ANR	744789	Identifier	NULL		744740	1					
ANR	744790	CompoundStatement		8:26:228:228	744740	1					
ANR	744791	ExpressionStatement	"variable = new Variable ( variable_name , tree )"	678:12:18809:18853	744740	0	True				
ANR	744792	AssignmentExpression	"variable = new Variable ( variable_name , tree )"		744740	0		=			
ANR	744793	Identifier	variable		744740	0					
ANR	744794	Expression	"variable_name , tree"		744740	1					
ANR	744795	Identifier	variable_name		744740	0					
ANR	744796	Identifier	tree		744740	1					
ANR	744797	ExpressionStatement	variables [ variable_name ] = variable	679:12:18867:18902	744740	1	True				
ANR	744798	AssignmentExpression	variables [ variable_name ] = variable		744740	0		=			
ANR	744799	ArrayIndexing	variables [ variable_name ]		744740	0					
ANR	744800	Identifier	variables		744740	0					
ANR	744801	Identifier	variable_name		744740	1					
ANR	744802	Identifier	variable		744740	1					
ANR	744803	IfStatement	if ( parameters . interactive )		744740	2					
ANR	744804	Condition	parameters . interactive	680:16:18920:18941	744740	0	True				
ANR	744805	MemberAccess	parameters . interactive		744740	0					
ANR	744806	Identifier	parameters		744740	0					
ANR	744807	Identifier	interactive		744740	1					
ANR	744808	CompoundStatement		11:40:377:377	744740	1					
ANR	744809	ExpressionStatement	"print_expr ( tree , state , parameters )"	681:16:18962:18997	744740	0	True				
ANR	744810	CallExpression	"print_expr ( tree , state , parameters )"		744740	0					
ANR	744811	Callee	print_expr		744740	0					
ANR	744812	Identifier	print_expr		744740	0					
ANR	744813	ArgumentList	tree		744740	1					
ANR	744814	Argument	tree		744740	0					
ANR	744815	Identifier	tree		744740	0					
ANR	744816	Argument	state		744740	1					
ANR	744817	Identifier	state		744740	0					
ANR	744818	Argument	parameters		744740	2					
ANR	744819	Identifier	parameters		744740	0					
ANR	744820	ReturnStatement	return ;	685:4:19033:19039	744740	4	True				
ANR	744821	ReturnType	void		744740	1					
ANR	744822	Identifier	handle_let		744740	2					
ANR	744823	ParameterList	"string & line , State & state , Parameters & parameters"		744740	3					
ANR	744824	Parameter	string & line	667:4:18495:18510	744740	0	True				
ANR	744825	ParameterType	string &		744740	0					
ANR	744826	Identifier	line		744740	1					
ANR	744827	Parameter	State & state	668:4:18518:18534	744740	1	True				
ANR	744828	ParameterType	State &		744740	0					
ANR	744829	Identifier	state		744740	1					
ANR	744830	Parameter	Parameters & parameters	669:4:18542:18563	744740	2	True				
ANR	744831	ParameterType	Parameters &		744740	0					
ANR	744832	Identifier	parameters		744740	1					
ANR	744833	CFGEntryNode	ENTRY		744740		True				
ANR	744834	CFGExitNode	EXIT		744740		True				
ANR	744835	Symbol	variables		744740						
ANR	744836	Symbol	NULL		744740						
ANR	744837	Symbol	line		744740						
ANR	744838	Symbol	tree		744740						
ANR	744839	Symbol	* variables		744740						
ANR	744840	Symbol	get_variable_name		744740						
ANR	744841	Symbol	get_expr		744740						
ANR	744842	Symbol	* variable_name		744740						
ANR	744843	Symbol	variable		744740						
ANR	744844	Symbol	true		744740						
ANR	744845	Symbol	state		744740						
ANR	744846	Symbol	variable_name		744740						
ANR	744847	Symbol	parameters		744740						
ANR	744848	Symbol	parameters . interactive		744740						
ANR	744849	Function	handle_eval	694:0:19232:19998							
ANR	744850	FunctionDef	"handle_eval (string & line , State & state , Parameters & parameters)"		744849	0					
ANR	744851	CompoundStatement		698:0:19325:19998	744849	0					
ANR	744852	IdentifierDeclStatement	string variable_name ;	699:4:19331:19354	744849	0	True				
ANR	744853	IdentifierDecl	variable_name		744849	0					
ANR	744854	IdentifierDeclType	string		744849	0					
ANR	744855	Identifier	variable_name		744849	1					
ANR	744856	IdentifierDeclStatement	ExprTree * tree ;	700:4:19360:19375	744849	1	True				
ANR	744857	IdentifierDecl	* tree		744849	0					
ANR	744858	IdentifierDeclType	ExprTree *		744849	0					
ANR	744859	Identifier	tree		744849	1					
ANR	744860	IdentifierDeclStatement	Variable * variable ;	701:4:19381:19400	744849	2	True				
ANR	744861	IdentifierDecl	* variable		744849	0					
ANR	744862	IdentifierDeclType	Variable *		744849	0					
ANR	744863	Identifier	variable		744849	1					
ANR	744864	IfStatement	"if ( get_variable_name ( line , true , variable_name , state , parameters ) )"		744849	3					
ANR	744865	Condition	"get_variable_name ( line , true , variable_name , state , parameters )"	703:8:19411:19473	744849	0	True				
ANR	744866	CallExpression	"get_variable_name ( line , true , variable_name , state , parameters )"		744849	0					
ANR	744867	Callee	get_variable_name		744849	0					
ANR	744868	Identifier	get_variable_name		744849	0					
ANR	744869	ArgumentList	line		744849	1					
ANR	744870	Argument	line		744849	0					
ANR	744871	Identifier	line		744849	0					
ANR	744872	Argument	true		744849	1					
ANR	744873	Identifier	true		744849	0					
ANR	744874	Argument	variable_name		744849	2					
ANR	744875	Identifier	variable_name		744849	0					
ANR	744876	Argument	state		744849	3					
ANR	744877	Identifier	state		744849	0					
ANR	744878	Argument	parameters		744849	4					
ANR	744879	Identifier	parameters		744849	0					
ANR	744880	CompoundStatement		6:73:150:150	744849	1					
ANR	744881	ExpressionStatement	"tree = get_expr ( line , state , parameters )"	704:8:19486:19526	744849	0	True				
ANR	744882	AssignmentExpression	"tree = get_expr ( line , state , parameters )"		744849	0		=			
ANR	744883	Identifier	tree		744849	0					
ANR	744884	CallExpression	"get_expr ( line , state , parameters )"		744849	1					
ANR	744885	Callee	get_expr		744849	0					
ANR	744886	Identifier	get_expr		744849	0					
ANR	744887	ArgumentList	line		744849	1					
ANR	744888	Argument	line		744849	0					
ANR	744889	Identifier	line		744849	0					
ANR	744890	Argument	state		744849	1					
ANR	744891	Identifier	state		744849	0					
ANR	744892	Argument	parameters		744849	2					
ANR	744893	Identifier	parameters		744849	0					
ANR	744894	IfStatement	if ( tree != NULL )		744849	1					
ANR	744895	Condition	tree != NULL	705:12:19540:19551	744849	0	True				
ANR	744896	EqualityExpression	tree != NULL		744849	0		!=			
ANR	744897	Identifier	tree		744849	0					
ANR	744898	Identifier	NULL		744849	1					
ANR	744899	CompoundStatement		9:12:242:253	744849	1					
ANR	744900	IdentifierDeclStatement	Value value ;	706:12:19568:19579	744849	0	True				
ANR	744901	IdentifierDecl	value		744849	0					
ANR	744902	IdentifierDeclType	Value		744849	0					
ANR	744903	Identifier	value		744849	1					
ANR	744904	IfStatement	"if ( ! evaluate_expr ( tree , value , parameters ) )"		744849	1					
ANR	744905	Condition	"! evaluate_expr ( tree , value , parameters )"	707:16:19597:19635	744849	0	True				
ANR	744906	UnaryOperationExpression	"! evaluate_expr ( tree , value , parameters )"		744849	0					
ANR	744907	UnaryOperator	!		744849	0					
ANR	744908	CallExpression	"evaluate_expr ( tree , value , parameters )"		744849	1					
ANR	744909	Callee	evaluate_expr		744849	0					
ANR	744910	Identifier	evaluate_expr		744849	0					
ANR	744911	ArgumentList	tree		744849	1					
ANR	744912	Argument	tree		744849	0					
ANR	744913	Identifier	tree		744849	0					
ANR	744914	Argument	value		744849	1					
ANR	744915	Identifier	value		744849	0					
ANR	744916	Argument	parameters		744849	2					
ANR	744917	Identifier	parameters		744849	0					
ANR	744918	CompoundStatement		10:57:312:312	744849	1					
ANR	744919	ExpressionStatement	"print_error_message ( ""Couldn't evaluate rvalue"" , state )"	708:16:19656:19710	744849	0	True				
ANR	744920	CallExpression	"print_error_message ( ""Couldn't evaluate rvalue"" , state )"		744849	0					
ANR	744921	Callee	print_error_message		744849	0					
ANR	744922	Identifier	print_error_message		744849	0					
ANR	744923	ArgumentList	"""Couldn't evaluate rvalue"""		744849	1					
ANR	744924	Argument	"""Couldn't evaluate rvalue"""		744849	0					
ANR	744925	PrimaryExpression	"""Couldn't evaluate rvalue"""		744849	0					
ANR	744926	Argument	state		744849	1					
ANR	744927	Identifier	state		744849	0					
ANR	744928	ElseStatement	else		744849	0					
ANR	744929	CompoundStatement		12:19:405:405	744849	0					
ANR	744930	ExpressionStatement	"variable = new Variable ( variable_name , value )"	710:16:19749:19794	744849	0	True				
ANR	744931	AssignmentExpression	"variable = new Variable ( variable_name , value )"		744849	0		=			
ANR	744932	Identifier	variable		744849	0					
ANR	744933	Expression	"variable_name , value"		744849	1					
ANR	744934	Identifier	variable_name		744849	0					
ANR	744935	Identifier	value		744849	1					
ANR	744936	ExpressionStatement	variables [ variable_name ] = variable	711:16:19812:19847	744849	1	True				
ANR	744937	AssignmentExpression	variables [ variable_name ] = variable		744849	0		=			
ANR	744938	ArrayIndexing	variables [ variable_name ]		744849	0					
ANR	744939	Identifier	variables		744849	0					
ANR	744940	Identifier	variable_name		744849	1					
ANR	744941	Identifier	variable		744849	1					
ANR	744942	IfStatement	if ( parameters . interactive )		744849	2					
ANR	744943	Condition	parameters . interactive	712:20:19869:19890	744849	0	True				
ANR	744944	MemberAccess	parameters . interactive		744849	0					
ANR	744945	Identifier	parameters		744849	0					
ANR	744946	Identifier	interactive		744849	1					
ANR	744947	CompoundStatement		15:44:567:567	744849	1					
ANR	744948	ExpressionStatement	cout << value << endl	713:20:19915:19936	744849	0	True				
ANR	744949	ShiftExpression	cout << value << endl		744849	0		<<			
ANR	744950	Identifier	cout		744849	0					
ANR	744951	ShiftExpression	value << endl		744849	1		<<			
ANR	744952	Identifier	value		744849	0					
ANR	744953	Identifier	endl		744849	1					
ANR	744954	ReturnStatement	return ;	718:4:19990:19996	744849	4	True				
ANR	744955	ReturnType	void		744849	1					
ANR	744956	Identifier	handle_eval		744849	2					
ANR	744957	ParameterList	"string & line , State & state , Parameters & parameters"		744849	3					
ANR	744958	Parameter	string & line	695:4:19254:19269	744849	0	True				
ANR	744959	ParameterType	string &		744849	0					
ANR	744960	Identifier	line		744849	1					
ANR	744961	Parameter	State & state	696:4:19277:19293	744849	1	True				
ANR	744962	ParameterType	State &		744849	0					
ANR	744963	Identifier	state		744849	1					
ANR	744964	Parameter	Parameters & parameters	697:4:19301:19322	744849	2	True				
ANR	744965	ParameterType	Parameters &		744849	0					
ANR	744966	Identifier	parameters		744849	1					
ANR	744967	CFGEntryNode	ENTRY		744849		True				
ANR	744968	CFGExitNode	EXIT		744849		True				
ANR	744969	Symbol	variables		744849						
ANR	744970	Symbol	NULL		744849						
ANR	744971	Symbol	line		744849						
ANR	744972	Symbol	tree		744849						
ANR	744973	Symbol	* variables		744849						
ANR	744974	Symbol	get_variable_name		744849						
ANR	744975	Symbol	get_expr		744849						
ANR	744976	Symbol	* variable_name		744849						
ANR	744977	Symbol	variable		744849						
ANR	744978	Symbol	true		744849						
ANR	744979	Symbol	state		744849						
ANR	744980	Symbol	variable_name		744849						
ANR	744981	Symbol	parameters		744849						
ANR	744982	Symbol	value		744849						
ANR	744983	Symbol	evaluate_expr		744849						
ANR	744984	Symbol	parameters . interactive		744849						
ANR	744985	Function	handle_print	727:0:20190:20432							
ANR	744986	FunctionDef	"handle_print (string & line , State & state , Parameters & parameters)"		744985	0					
ANR	744987	CompoundStatement		731:0:20284:20432	744985	0					
ANR	744988	IdentifierDeclStatement	ExprTree * tree ;	732:4:20290:20304	744985	0	True				
ANR	744989	IdentifierDecl	* tree		744985	0					
ANR	744990	IdentifierDeclType	ExprTree *		744985	0					
ANR	744991	Identifier	tree		744985	1					
ANR	744992	ExpressionStatement	"tree = get_expr ( line , state , parameters )"	734:4:20311:20351	744985	1	True				
ANR	744993	AssignmentExpression	"tree = get_expr ( line , state , parameters )"		744985	0		=			
ANR	744994	Identifier	tree		744985	0					
ANR	744995	CallExpression	"get_expr ( line , state , parameters )"		744985	1					
ANR	744996	Callee	get_expr		744985	0					
ANR	744997	Identifier	get_expr		744985	0					
ANR	744998	ArgumentList	line		744985	1					
ANR	744999	Argument	line		744985	0					
ANR	745000	Identifier	line		744985	0					
ANR	745001	Argument	state		744985	1					
ANR	745002	Identifier	state		744985	0					
ANR	745003	Argument	parameters		744985	2					
ANR	745004	Identifier	parameters		744985	0					
ANR	745005	IfStatement	if ( tree )		744985	2					
ANR	745006	Condition	tree	735:8:20361:20364	744985	0	True				
ANR	745007	Identifier	tree		744985	0					
ANR	745008	CompoundStatement		5:14:82:82	744985	1					
ANR	745009	ExpressionStatement	"print_expr ( tree , state , parameters )"	736:8:20377:20412	744985	0	True				
ANR	745010	CallExpression	"print_expr ( tree , state , parameters )"		744985	0					
ANR	745011	Callee	print_expr		744985	0					
ANR	745012	Identifier	print_expr		744985	0					
ANR	745013	ArgumentList	tree		744985	1					
ANR	745014	Argument	tree		744985	0					
ANR	745015	Identifier	tree		744985	0					
ANR	745016	Argument	state		744985	1					
ANR	745017	Identifier	state		744985	0					
ANR	745018	Argument	parameters		744985	2					
ANR	745019	Identifier	parameters		744985	0					
ANR	745020	ReturnStatement	return ;	738:4:20424:20430	744985	3	True				
ANR	745021	ReturnType	void		744985	1					
ANR	745022	Identifier	handle_print		744985	2					
ANR	745023	ParameterList	"string & line , State & state , Parameters & parameters"		744985	3					
ANR	745024	Parameter	string & line	728:4:20213:20228	744985	0	True				
ANR	745025	ParameterType	string &		744985	0					
ANR	745026	Identifier	line		744985	1					
ANR	745027	Parameter	State & state	729:4:20236:20252	744985	1	True				
ANR	745028	ParameterType	State &		744985	0					
ANR	745029	Identifier	state		744985	1					
ANR	745030	Parameter	Parameters & parameters	730:4:20260:20281	744985	2	True				
ANR	745031	ParameterType	Parameters &		744985	0					
ANR	745032	Identifier	parameters		744985	1					
ANR	745033	CFGEntryNode	ENTRY		744985		True				
ANR	745034	CFGExitNode	EXIT		744985		True				
ANR	745035	Symbol	get_expr		744985						
ANR	745036	Symbol	line		744985						
ANR	745037	Symbol	tree		744985						
ANR	745038	Symbol	state		744985						
ANR	745039	Symbol	parameters		744985						
ANR	745040	Function	handle_same	747:0:20623:21902							
ANR	745041	FunctionDef	"handle_same (string & line , State & state , Parameters & parameters)"		745040	0					
ANR	745042	CompoundStatement		751:0:20716:21902	745040	0					
ANR	745043	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	752:4:20722:20745	745040	0	True				
ANR	745044	IdentifierDecl	* tree		745040	0					
ANR	745045	IdentifierDeclType	ExprTree *		745040	0					
ANR	745046	Identifier	tree		745040	1					
ANR	745047	IdentifierDecl	* tree2		745040	1					
ANR	745048	IdentifierDeclType	ExprTree *		745040	0					
ANR	745049	Identifier	tree2		745040	1					
ANR	745050	IdentifierDeclStatement	"Value value1 , value2 ;"	753:4:20751:20775	745040	1	True				
ANR	745051	IdentifierDecl	value1		745040	0					
ANR	745052	IdentifierDeclType	Value		745040	0					
ANR	745053	Identifier	value1		745040	1					
ANR	745054	IdentifierDecl	value2		745040	1					
ANR	745055	IdentifierDeclType	Value		745040	0					
ANR	745056	Identifier	value2		745040	1					
ANR	745057	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	755:4:20782:20833	745040	2	True				
ANR	745058	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		745040	0					
ANR	745059	Callee	get_two_exprs		745040	0					
ANR	745060	Identifier	get_two_exprs		745040	0					
ANR	745061	ArgumentList	line		745040	1					
ANR	745062	Argument	line		745040	0					
ANR	745063	Identifier	line		745040	0					
ANR	745064	Argument	tree		745040	1					
ANR	745065	Identifier	tree		745040	0					
ANR	745066	Argument	tree2		745040	2					
ANR	745067	Identifier	tree2		745040	0					
ANR	745068	Argument	state		745040	3					
ANR	745069	Identifier	state		745040	0					
ANR	745070	Argument	parameters		745040	4					
ANR	745071	Identifier	parameters		745040	0					
ANR	745072	IfStatement	if ( tree != NULL || tree2 != NULL )		745040	3					
ANR	745073	Condition	tree != NULL || tree2 != NULL	756:8:20843:20871	745040	0	True				
ANR	745074	OrExpression	tree != NULL || tree2 != NULL		745040	0		||			
ANR	745075	EqualityExpression	tree != NULL		745040	0		!=			
ANR	745076	Identifier	tree		745040	0					
ANR	745077	Identifier	NULL		745040	1					
ANR	745078	EqualityExpression	tree2 != NULL		745040	1		!=			
ANR	745079	Identifier	tree2		745040	0					
ANR	745080	Identifier	NULL		745040	1					
ANR	745081	CompoundStatement		6:39:157:157	745040	1					
ANR	745082	IfStatement	if ( parameters . debug )		745040	0					
ANR	745083	Condition	parameters . debug	757:12:20888:20903	745040	0	True				
ANR	745084	MemberAccess	parameters . debug		745040	0					
ANR	745085	Identifier	parameters		745040	0					
ANR	745086	Identifier	debug		745040	1					
ANR	745087	CompoundStatement		7:30:189:189	745040	1					
ANR	745088	ExpressionStatement	"cout << ""Sameeval has two trees: \\n"""	758:12:20920:20956	745040	0	True				
ANR	745089	ShiftExpression	"cout << ""Sameeval has two trees: \\n"""		745040	0		<<			
ANR	745090	Identifier	cout		745040	0					
ANR	745091	PrimaryExpression	"""Sameeval has two trees: \\n"""		745040	1					
ANR	745092	ExpressionStatement	"cout << "" """	759:12:20970:20981	745040	1	True				
ANR	745093	ShiftExpression	"cout << "" """		745040	0		<<			
ANR	745094	Identifier	cout		745040	0					
ANR	745095	PrimaryExpression	""" """		745040	1					
ANR	745096	ExpressionStatement	"print_expr ( tree , state , parameters )"	760:12:20996:21031	745040	2	True				
ANR	745097	CallExpression	"print_expr ( tree , state , parameters )"		745040	0					
ANR	745098	Callee	print_expr		745040	0					
ANR	745099	Identifier	print_expr		745040	0					
ANR	745100	ArgumentList	tree		745040	1					
ANR	745101	Argument	tree		745040	0					
ANR	745102	Identifier	tree		745040	0					
ANR	745103	Argument	state		745040	1					
ANR	745104	Identifier	state		745040	0					
ANR	745105	Argument	parameters		745040	2					
ANR	745106	Identifier	parameters		745040	0					
ANR	745107	ExpressionStatement	cout << endl	761:12:21046:21058	745040	3	True				
ANR	745108	ShiftExpression	cout << endl		745040	0		<<			
ANR	745109	Identifier	cout		745040	0					
ANR	745110	Identifier	endl		745040	1					
ANR	745111	ExpressionStatement	"cout << "" """	762:12:21072:21083	745040	4	True				
ANR	745112	ShiftExpression	"cout << "" """		745040	0		<<			
ANR	745113	Identifier	cout		745040	0					
ANR	745114	PrimaryExpression	""" """		745040	1					
ANR	745115	ExpressionStatement	"print_expr ( tree2 , state , parameters )"	763:12:21098:21134	745040	5	True				
ANR	745116	CallExpression	"print_expr ( tree2 , state , parameters )"		745040	0					
ANR	745117	Callee	print_expr		745040	0					
ANR	745118	Identifier	print_expr		745040	0					
ANR	745119	ArgumentList	tree2		745040	1					
ANR	745120	Argument	tree2		745040	0					
ANR	745121	Identifier	tree2		745040	0					
ANR	745122	Argument	state		745040	1					
ANR	745123	Identifier	state		745040	0					
ANR	745124	Argument	parameters		745040	2					
ANR	745125	Identifier	parameters		745040	0					
ANR	745126	ExpressionStatement	cout << endl	764:12:21148:21160	745040	6	True				
ANR	745127	ShiftExpression	cout << endl		745040	0		<<			
ANR	745128	Identifier	cout		745040	0					
ANR	745129	Identifier	endl		745040	1					
ANR	745130	IfStatement	"if ( ! evaluate_expr ( tree , value1 , parameters ) )"		745040	1					
ANR	745131	Condition	"! evaluate_expr ( tree , value1 , parameters )"	766:12:21184:21223	745040	0	True				
ANR	745132	UnaryOperationExpression	"! evaluate_expr ( tree , value1 , parameters )"		745040	0					
ANR	745133	UnaryOperator	!		745040	0					
ANR	745134	CallExpression	"evaluate_expr ( tree , value1 , parameters )"		745040	1					
ANR	745135	Callee	evaluate_expr		745040	0					
ANR	745136	Identifier	evaluate_expr		745040	0					
ANR	745137	ArgumentList	tree		745040	1					
ANR	745138	Argument	tree		745040	0					
ANR	745139	Identifier	tree		745040	0					
ANR	745140	Argument	value1		745040	1					
ANR	745141	Identifier	value1		745040	0					
ANR	745142	Argument	parameters		745040	2					
ANR	745143	Identifier	parameters		745040	0					
ANR	745144	CompoundStatement		16:54:509:509	745040	1					
ANR	745145	ExpressionStatement	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"	767:12:21240:21307	745040	0	True				
ANR	745146	CallExpression	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"		745040	0					
ANR	745147	Callee	print_error_message		745040	0					
ANR	745148	Identifier	print_error_message		745040	0					
ANR	745149	ArgumentList	"""Couldn't evaluate first expression.\\n"""		745040	1					
ANR	745150	Argument	"""Couldn't evaluate first expression.\\n"""		745040	0					
ANR	745151	PrimaryExpression	"""Couldn't evaluate first expression.\\n"""		745040	0					
ANR	745152	Argument	state		745040	1					
ANR	745153	Identifier	state		745040	0					
ANR	745154	ElseStatement	else		745040	0					
ANR	745155	IfStatement	"if ( ! evaluate_expr ( tree2 , value2 , parameters ) )"		745040	0					
ANR	745156	Condition	"! evaluate_expr ( tree2 , value2 , parameters )"	768:19:21328:21368	745040	0	True				
ANR	745157	UnaryOperationExpression	"! evaluate_expr ( tree2 , value2 , parameters )"		745040	0					
ANR	745158	UnaryOperator	!		745040	0					
ANR	745159	CallExpression	"evaluate_expr ( tree2 , value2 , parameters )"		745040	1					
ANR	745160	Callee	evaluate_expr		745040	0					
ANR	745161	Identifier	evaluate_expr		745040	0					
ANR	745162	ArgumentList	tree2		745040	1					
ANR	745163	Argument	tree2		745040	0					
ANR	745164	Identifier	tree2		745040	0					
ANR	745165	Argument	value2		745040	1					
ANR	745166	Identifier	value2		745040	0					
ANR	745167	Argument	parameters		745040	2					
ANR	745168	Identifier	parameters		745040	0					
ANR	745169	CompoundStatement		18:62:654:654	745040	1					
ANR	745170	ExpressionStatement	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"	769:12:21385:21454	745040	0	True				
ANR	745171	CallExpression	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"		745040	0					
ANR	745172	Callee	print_error_message		745040	0					
ANR	745173	Identifier	print_error_message		745040	0					
ANR	745174	ArgumentList	"""Couldn't evaluate second expressions.\\n"""		745040	1					
ANR	745175	Argument	"""Couldn't evaluate second expressions.\\n"""		745040	0					
ANR	745176	PrimaryExpression	"""Couldn't evaluate second expressions.\\n"""		745040	0					
ANR	745177	Argument	state		745040	1					
ANR	745178	Identifier	state		745040	0					
ANR	745179	ElseStatement	else		745040	0					
ANR	745180	IfStatement	if ( ! value1 . SameAs ( value2 ) )		745040	0					
ANR	745181	Condition	! value1 . SameAs ( value2 )	770:19:21475:21496	745040	0	True				
ANR	745182	UnaryOperationExpression	! value1 . SameAs ( value2 )		745040	0					
ANR	745183	UnaryOperator	!		745040	0					
ANR	745184	CallExpression	value1 . SameAs ( value2 )		745040	1					
ANR	745185	Callee	value1 . SameAs		745040	0					
ANR	745186	MemberAccess	value1 . SameAs		745040	0					
ANR	745187	Identifier	value1		745040	0					
ANR	745188	Identifier	SameAs		745040	1					
ANR	745189	ArgumentList	value2		745040	1					
ANR	745190	Argument	value2		745040	0					
ANR	745191	Identifier	value2		745040	0					
ANR	745192	CompoundStatement		20:43:782:782	745040	1					
ANR	745193	IfStatement	if ( parameters . debug )		745040	0					
ANR	745194	Condition	parameters . debug	771:16:21517:21532	745040	0	True				
ANR	745195	MemberAccess	parameters . debug		745040	0					
ANR	745196	Identifier	parameters		745040	0					
ANR	745197	Identifier	debug		745040	1					
ANR	745198	CompoundStatement		21:34:818:818	745040	1					
ANR	745199	ExpressionStatement	"cout << ""They evaluated to: \\n"""	772:16:21553:21584	745040	0	True				
ANR	745200	ShiftExpression	"cout << ""They evaluated to: \\n"""		745040	0		<<			
ANR	745201	Identifier	cout		745040	0					
ANR	745202	PrimaryExpression	"""They evaluated to: \\n"""		745040	1					
ANR	745203	ExpressionStatement	"cout << "" "" << value1 << endl"	773:16:21602:21631	745040	1	True				
ANR	745204	ShiftExpression	"cout << "" "" << value1 << endl"		745040	0		<<			
ANR	745205	Identifier	cout		745040	0					
ANR	745206	ShiftExpression	""" "" << value1 << endl"		745040	1		<<			
ANR	745207	PrimaryExpression	""" """		745040	0					
ANR	745208	ShiftExpression	value1 << endl		745040	1		<<			
ANR	745209	Identifier	value1		745040	0					
ANR	745210	Identifier	endl		745040	1					
ANR	745211	ExpressionStatement	"cout << "" "" << value2 << endl"	774:16:21649:21678	745040	2	True				
ANR	745212	ShiftExpression	"cout << "" "" << value2 << endl"		745040	0		<<			
ANR	745213	Identifier	cout		745040	0					
ANR	745214	ShiftExpression	""" "" << value2 << endl"		745040	1		<<			
ANR	745215	PrimaryExpression	""" """		745040	0					
ANR	745216	ShiftExpression	value2 << endl		745040	1		<<			
ANR	745217	Identifier	value2		745040	0					
ANR	745218	Identifier	endl		745040	1					
ANR	745219	ExpressionStatement	"print_error_message ( ""the expressions are different."" , state )"	776:12:21706:21766	745040	1	True				
ANR	745220	CallExpression	"print_error_message ( ""the expressions are different."" , state )"		745040	0					
ANR	745221	Callee	print_error_message		745040	0					
ANR	745222	Identifier	print_error_message		745040	0					
ANR	745223	ArgumentList	"""the expressions are different."""		745040	1					
ANR	745224	Argument	"""the expressions are different."""		745040	0					
ANR	745225	PrimaryExpression	"""the expressions are different."""		745040	0					
ANR	745226	Argument	state		745040	1					
ANR	745227	Identifier	state		745040	0					
ANR	745228	IfStatement	if ( tree != NULL )		745040	4					
ANR	745229	Condition	tree != NULL	780:8:21793:21804	745040	0	True				
ANR	745230	EqualityExpression	tree != NULL		745040	0		!=			
ANR	745231	Identifier	tree		745040	0					
ANR	745232	Identifier	NULL		745040	1					
ANR	745233	CompoundStatement		30:22:1090:1090	745040	1					
ANR	745234	Statement	delete	781:8:21817:21822	745040	0	True				
ANR	745235	ExpressionStatement	tree	781:15:21824:21828	745040	1	True				
ANR	745236	Identifier	tree		745040	0					
ANR	745237	IfStatement	if ( tree2 != NULL )		745040	5					
ANR	745238	Condition	tree2 != NULL	783:8:21845:21857	745040	0	True				
ANR	745239	EqualityExpression	tree2 != NULL		745040	0		!=			
ANR	745240	Identifier	tree2		745040	0					
ANR	745241	Identifier	NULL		745040	1					
ANR	745242	CompoundStatement		33:23:1143:1143	745040	1					
ANR	745243	Statement	delete	784:8:21870:21875	745040	0	True				
ANR	745244	ExpressionStatement	tree2	784:15:21877:21882	745040	1	True				
ANR	745245	Identifier	tree2		745040	0					
ANR	745246	ReturnStatement	return ;	786:4:21894:21900	745040	6	True				
ANR	745247	ReturnType	void		745040	1					
ANR	745248	Identifier	handle_same		745040	2					
ANR	745249	ParameterList	"string & line , State & state , Parameters & parameters"		745040	3					
ANR	745250	Parameter	string & line	748:4:20645:20660	745040	0	True				
ANR	745251	ParameterType	string &		745040	0					
ANR	745252	Identifier	line		745040	1					
ANR	745253	Parameter	State & state	749:4:20668:20684	745040	1	True				
ANR	745254	ParameterType	State &		745040	0					
ANR	745255	Identifier	state		745040	1					
ANR	745256	Parameter	Parameters & parameters	750:4:20692:20713	745040	2	True				
ANR	745257	ParameterType	Parameters &		745040	0					
ANR	745258	Identifier	parameters		745040	1					
ANR	745259	CFGEntryNode	ENTRY		745040		True				
ANR	745260	CFGExitNode	EXIT		745040		True				
ANR	745261	Symbol	NULL		745040						
ANR	745262	Symbol	value2		745040						
ANR	745263	Symbol	value1		745040						
ANR	745264	Symbol	line		745040						
ANR	745265	Symbol	tree		745040						
ANR	745266	Symbol	state		745040						
ANR	745267	Symbol	tree2		745040						
ANR	745268	Symbol	parameters		745040						
ANR	745269	Symbol	evaluate_expr		745040						
ANR	745270	Symbol	value1 . SameAs		745040						
ANR	745271	Symbol	parameters . debug		745040						
ANR	745272	Function	handle_sameq	795:0:22094:22560							
ANR	745273	FunctionDef	"handle_sameq (string & line , State & state , Parameters & parameters)"		745272	0					
ANR	745274	CompoundStatement		799:0:22188:22560	745272	0					
ANR	745275	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	800:4:22194:22217	745272	0	True				
ANR	745276	IdentifierDecl	* tree		745272	0					
ANR	745277	IdentifierDeclType	ExprTree *		745272	0					
ANR	745278	Identifier	tree		745272	1					
ANR	745279	IdentifierDecl	* tree2		745272	1					
ANR	745280	IdentifierDeclType	ExprTree *		745272	0					
ANR	745281	Identifier	tree2		745272	1					
ANR	745282	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	802:4:22224:22275	745272	1	True				
ANR	745283	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		745272	0					
ANR	745284	Callee	get_two_exprs		745272	0					
ANR	745285	Identifier	get_two_exprs		745272	0					
ANR	745286	ArgumentList	line		745272	1					
ANR	745287	Argument	line		745272	0					
ANR	745288	Identifier	line		745272	0					
ANR	745289	Argument	tree		745272	1					
ANR	745290	Identifier	tree		745272	0					
ANR	745291	Argument	tree2		745272	2					
ANR	745292	Identifier	tree2		745272	0					
ANR	745293	Argument	state		745272	3					
ANR	745294	Identifier	state		745272	0					
ANR	745295	Argument	parameters		745272	4					
ANR	745296	Identifier	parameters		745272	0					
ANR	745297	IfStatement	if ( tree != NULL || tree2 != NULL )		745272	2					
ANR	745298	Condition	tree != NULL || tree2 != NULL	803:8:22285:22313	745272	0	True				
ANR	745299	OrExpression	tree != NULL || tree2 != NULL		745272	0		||			
ANR	745300	EqualityExpression	tree != NULL		745272	0		!=			
ANR	745301	Identifier	tree		745272	0					
ANR	745302	Identifier	NULL		745272	1					
ANR	745303	EqualityExpression	tree2 != NULL		745272	1		!=			
ANR	745304	Identifier	tree2		745272	0					
ANR	745305	Identifier	NULL		745272	1					
ANR	745306	CompoundStatement		5:39:127:127	745272	1					
ANR	745307	IfStatement	if ( ! tree -> SameAs ( tree2 ) )		745272	0					
ANR	745308	Condition	! tree -> SameAs ( tree2 )	804:12:22330:22349	745272	0	True				
ANR	745309	UnaryOperationExpression	! tree -> SameAs ( tree2 )		745272	0					
ANR	745310	UnaryOperator	!		745272	0					
ANR	745311	CallExpression	tree -> SameAs ( tree2 )		745272	1					
ANR	745312	Callee	tree -> SameAs		745272	0					
ANR	745313	PtrMemberAccess	tree -> SameAs		745272	0					
ANR	745314	Identifier	tree		745272	0					
ANR	745315	Identifier	SameAs		745272	1					
ANR	745316	ArgumentList	tree2		745272	1					
ANR	745317	Argument	tree2		745272	0					
ANR	745318	Identifier	tree2		745272	0					
ANR	745319	CompoundStatement		6:34:163:163	745272	1					
ANR	745320	ExpressionStatement	"print_error_message ( ""the expressions are different."" , state )"	805:12:22366:22426	745272	0	True				
ANR	745321	CallExpression	"print_error_message ( ""the expressions are different."" , state )"		745272	0					
ANR	745322	Callee	print_error_message		745272	0					
ANR	745323	Identifier	print_error_message		745272	0					
ANR	745324	ArgumentList	"""the expressions are different."""		745272	1					
ANR	745325	Argument	"""the expressions are different."""		745272	0					
ANR	745326	PrimaryExpression	"""the expressions are different."""		745272	0					
ANR	745327	Argument	state		745272	1					
ANR	745328	Identifier	state		745272	0					
ANR	745329	IfStatement	if ( tree != NULL )		745272	3					
ANR	745330	Condition	tree != NULL	808:8:22452:22463	745272	0	True				
ANR	745331	EqualityExpression	tree != NULL		745272	0		!=			
ANR	745332	Identifier	tree		745272	0					
ANR	745333	Identifier	NULL		745272	1					
ANR	745334	CompoundStatement		10:22:277:277	745272	1					
ANR	745335	Statement	delete	809:8:22476:22481	745272	0	True				
ANR	745336	ExpressionStatement	tree	809:15:22483:22487	745272	1	True				
ANR	745337	Identifier	tree		745272	0					
ANR	745338	IfStatement	if ( tree2 != NULL )		745272	4					
ANR	745339	Condition	tree2 != NULL	811:8:22503:22515	745272	0	True				
ANR	745340	EqualityExpression	tree2 != NULL		745272	0		!=			
ANR	745341	Identifier	tree2		745272	0					
ANR	745342	Identifier	NULL		745272	1					
ANR	745343	CompoundStatement		13:23:329:329	745272	1					
ANR	745344	Statement	delete	812:8:22528:22533	745272	0	True				
ANR	745345	ExpressionStatement	tree2	812:15:22535:22540	745272	1	True				
ANR	745346	Identifier	tree2		745272	0					
ANR	745347	ReturnStatement	return ;	814:4:22552:22558	745272	5	True				
ANR	745348	ReturnType	void		745272	1					
ANR	745349	Identifier	handle_sameq		745272	2					
ANR	745350	ParameterList	"string & line , State & state , Parameters & parameters"		745272	3					
ANR	745351	Parameter	string & line	796:4:22117:22132	745272	0	True				
ANR	745352	ParameterType	string &		745272	0					
ANR	745353	Identifier	line		745272	1					
ANR	745354	Parameter	State & state	797:4:22140:22156	745272	1	True				
ANR	745355	ParameterType	State &		745272	0					
ANR	745356	Identifier	state		745272	1					
ANR	745357	Parameter	Parameters & parameters	798:4:22164:22185	745272	2	True				
ANR	745358	ParameterType	Parameters &		745272	0					
ANR	745359	Identifier	parameters		745272	1					
ANR	745360	CFGEntryNode	ENTRY		745272		True				
ANR	745361	CFGExitNode	EXIT		745272		True				
ANR	745362	Symbol	* tree		745272						
ANR	745363	Symbol	NULL		745272						
ANR	745364	Symbol	line		745272						
ANR	745365	Symbol	tree		745272						
ANR	745366	Symbol	state		745272						
ANR	745367	Symbol	tree2		745272						
ANR	745368	Symbol	parameters		745272						
ANR	745369	Symbol	tree -> SameAs		745272						
ANR	745370	Function	handle_diff	823:0:22751:23541							
ANR	745371	FunctionDef	"handle_diff (string & line , State & state , Parameters & parameters)"		745370	0					
ANR	745372	CompoundStatement		827:0:22844:23541	745370	0					
ANR	745373	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	828:4:22850:22873	745370	0	True				
ANR	745374	IdentifierDecl	* tree		745370	0					
ANR	745375	IdentifierDeclType	ExprTree *		745370	0					
ANR	745376	Identifier	tree		745370	1					
ANR	745377	IdentifierDecl	* tree2		745370	1					
ANR	745378	IdentifierDeclType	ExprTree *		745370	0					
ANR	745379	Identifier	tree2		745370	1					
ANR	745380	IdentifierDeclStatement	"Value value1 , value2 ;"	829:4:22879:22903	745370	1	True				
ANR	745381	IdentifierDecl	value1		745370	0					
ANR	745382	IdentifierDeclType	Value		745370	0					
ANR	745383	Identifier	value1		745370	1					
ANR	745384	IdentifierDecl	value2		745370	1					
ANR	745385	IdentifierDeclType	Value		745370	0					
ANR	745386	Identifier	value2		745370	1					
ANR	745387	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	831:4:22910:22961	745370	2	True				
ANR	745388	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		745370	0					
ANR	745389	Callee	get_two_exprs		745370	0					
ANR	745390	Identifier	get_two_exprs		745370	0					
ANR	745391	ArgumentList	line		745370	1					
ANR	745392	Argument	line		745370	0					
ANR	745393	Identifier	line		745370	0					
ANR	745394	Argument	tree		745370	1					
ANR	745395	Identifier	tree		745370	0					
ANR	745396	Argument	tree2		745370	2					
ANR	745397	Identifier	tree2		745370	0					
ANR	745398	Argument	state		745370	3					
ANR	745399	Identifier	state		745370	0					
ANR	745400	Argument	parameters		745370	4					
ANR	745401	Identifier	parameters		745370	0					
ANR	745402	IfStatement	if ( tree != NULL || tree2 != NULL )		745370	3					
ANR	745403	Condition	tree != NULL || tree2 != NULL	832:8:22971:22999	745370	0	True				
ANR	745404	OrExpression	tree != NULL || tree2 != NULL		745370	0		||			
ANR	745405	EqualityExpression	tree != NULL		745370	0		!=			
ANR	745406	Identifier	tree		745370	0					
ANR	745407	Identifier	NULL		745370	1					
ANR	745408	EqualityExpression	tree2 != NULL		745370	1		!=			
ANR	745409	Identifier	tree2		745370	0					
ANR	745410	Identifier	NULL		745370	1					
ANR	745411	CompoundStatement		6:39:157:157	745370	1					
ANR	745412	IfStatement	"if ( ! evaluate_expr ( tree , value1 , parameters ) )"		745370	0					
ANR	745413	Condition	"! evaluate_expr ( tree , value1 , parameters )"	833:12:23016:23055	745370	0	True				
ANR	745414	UnaryOperationExpression	"! evaluate_expr ( tree , value1 , parameters )"		745370	0					
ANR	745415	UnaryOperator	!		745370	0					
ANR	745416	CallExpression	"evaluate_expr ( tree , value1 , parameters )"		745370	1					
ANR	745417	Callee	evaluate_expr		745370	0					
ANR	745418	Identifier	evaluate_expr		745370	0					
ANR	745419	ArgumentList	tree		745370	1					
ANR	745420	Argument	tree		745370	0					
ANR	745421	Identifier	tree		745370	0					
ANR	745422	Argument	value1		745370	1					
ANR	745423	Identifier	value1		745370	0					
ANR	745424	Argument	parameters		745370	2					
ANR	745425	Identifier	parameters		745370	0					
ANR	745426	CompoundStatement		7:54:213:213	745370	1					
ANR	745427	ExpressionStatement	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"	834:12:23072:23139	745370	0	True				
ANR	745428	CallExpression	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"		745370	0					
ANR	745429	Callee	print_error_message		745370	0					
ANR	745430	Identifier	print_error_message		745370	0					
ANR	745431	ArgumentList	"""Couldn't evaluate first expression.\\n"""		745370	1					
ANR	745432	Argument	"""Couldn't evaluate first expression.\\n"""		745370	0					
ANR	745433	PrimaryExpression	"""Couldn't evaluate first expression.\\n"""		745370	0					
ANR	745434	Argument	state		745370	1					
ANR	745435	Identifier	state		745370	0					
ANR	745436	ElseStatement	else		745370	0					
ANR	745437	IfStatement	"if ( ! evaluate_expr ( tree2 , value2 , parameters ) )"		745370	0					
ANR	745438	Condition	"! evaluate_expr ( tree2 , value2 , parameters )"	835:19:23160:23200	745370	0	True				
ANR	745439	UnaryOperationExpression	"! evaluate_expr ( tree2 , value2 , parameters )"		745370	0					
ANR	745440	UnaryOperator	!		745370	0					
ANR	745441	CallExpression	"evaluate_expr ( tree2 , value2 , parameters )"		745370	1					
ANR	745442	Callee	evaluate_expr		745370	0					
ANR	745443	Identifier	evaluate_expr		745370	0					
ANR	745444	ArgumentList	tree2		745370	1					
ANR	745445	Argument	tree2		745370	0					
ANR	745446	Identifier	tree2		745370	0					
ANR	745447	Argument	value2		745370	1					
ANR	745448	Identifier	value2		745370	0					
ANR	745449	Argument	parameters		745370	2					
ANR	745450	Identifier	parameters		745370	0					
ANR	745451	CompoundStatement		9:62:358:358	745370	1					
ANR	745452	ExpressionStatement	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"	836:12:23217:23286	745370	0	True				
ANR	745453	CallExpression	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"		745370	0					
ANR	745454	Callee	print_error_message		745370	0					
ANR	745455	Identifier	print_error_message		745370	0					
ANR	745456	ArgumentList	"""Couldn't evaluate second expressions.\\n"""		745370	1					
ANR	745457	Argument	"""Couldn't evaluate second expressions.\\n"""		745370	0					
ANR	745458	PrimaryExpression	"""Couldn't evaluate second expressions.\\n"""		745370	0					
ANR	745459	Argument	state		745370	1					
ANR	745460	Identifier	state		745370	0					
ANR	745461	ElseStatement	else		745370	0					
ANR	745462	IfStatement	if ( value1 . SameAs ( value2 ) )		745370	0					
ANR	745463	Condition	value1 . SameAs ( value2 )	837:19:23307:23327	745370	0	True				
ANR	745464	CallExpression	value1 . SameAs ( value2 )		745370	0					
ANR	745465	Callee	value1 . SameAs		745370	0					
ANR	745466	MemberAccess	value1 . SameAs		745370	0					
ANR	745467	Identifier	value1		745370	0					
ANR	745468	Identifier	SameAs		745370	1					
ANR	745469	ArgumentList	value2		745370	1					
ANR	745470	Argument	value2		745370	0					
ANR	745471	Identifier	value2		745370	0					
ANR	745472	CompoundStatement		11:42:485:485	745370	1					
ANR	745473	ExpressionStatement	"print_error_message ( ""the expressions are the same."" , state )"	838:16:23348:23407	745370	0	True				
ANR	745474	CallExpression	"print_error_message ( ""the expressions are the same."" , state )"		745370	0					
ANR	745475	Callee	print_error_message		745370	0					
ANR	745476	Identifier	print_error_message		745370	0					
ANR	745477	ArgumentList	"""the expressions are the same."""		745370	1					
ANR	745478	Argument	"""the expressions are the same."""		745370	0					
ANR	745479	PrimaryExpression	"""the expressions are the same."""		745370	0					
ANR	745480	Argument	state		745370	1					
ANR	745481	Identifier	state		745370	0					
ANR	745482	IfStatement	if ( tree != NULL )		745370	4					
ANR	745483	Condition	tree != NULL	841:8:23433:23444	745370	0	True				
ANR	745484	EqualityExpression	tree != NULL		745370	0		!=			
ANR	745485	Identifier	tree		745370	0					
ANR	745486	Identifier	NULL		745370	1					
ANR	745487	CompoundStatement		15:22:602:602	745370	1					
ANR	745488	Statement	delete	842:8:23457:23462	745370	0	True				
ANR	745489	ExpressionStatement	tree	842:15:23464:23468	745370	1	True				
ANR	745490	Identifier	tree		745370	0					
ANR	745491	IfStatement	if ( tree2 != NULL )		745370	5					
ANR	745492	Condition	tree2 != NULL	844:8:23484:23496	745370	0	True				
ANR	745493	EqualityExpression	tree2 != NULL		745370	0		!=			
ANR	745494	Identifier	tree2		745370	0					
ANR	745495	Identifier	NULL		745370	1					
ANR	745496	CompoundStatement		18:23:654:654	745370	1					
ANR	745497	Statement	delete	845:8:23509:23514	745370	0	True				
ANR	745498	ExpressionStatement	tree2	845:15:23516:23521	745370	1	True				
ANR	745499	Identifier	tree2		745370	0					
ANR	745500	ReturnStatement	return ;	847:4:23533:23539	745370	6	True				
ANR	745501	ReturnType	void		745370	1					
ANR	745502	Identifier	handle_diff		745370	2					
ANR	745503	ParameterList	"string & line , State & state , Parameters & parameters"		745370	3					
ANR	745504	Parameter	string & line	824:4:22773:22788	745370	0	True				
ANR	745505	ParameterType	string &		745370	0					
ANR	745506	Identifier	line		745370	1					
ANR	745507	Parameter	State & state	825:4:22796:22812	745370	1	True				
ANR	745508	ParameterType	State &		745370	0					
ANR	745509	Identifier	state		745370	1					
ANR	745510	Parameter	Parameters & parameters	826:4:22820:22841	745370	2	True				
ANR	745511	ParameterType	Parameters &		745370	0					
ANR	745512	Identifier	parameters		745370	1					
ANR	745513	CFGEntryNode	ENTRY		745370		True				
ANR	745514	CFGExitNode	EXIT		745370		True				
ANR	745515	Symbol	NULL		745370						
ANR	745516	Symbol	value2		745370						
ANR	745517	Symbol	value1		745370						
ANR	745518	Symbol	line		745370						
ANR	745519	Symbol	tree		745370						
ANR	745520	Symbol	state		745370						
ANR	745521	Symbol	tree2		745370						
ANR	745522	Symbol	parameters		745370						
ANR	745523	Symbol	evaluate_expr		745370						
ANR	745524	Symbol	value1 . SameAs		745370						
ANR	745525	Function	handle_diffq	856:0:23733:24197							
ANR	745526	FunctionDef	"handle_diffq (string & line , State & state , Parameters & parameters)"		745525	0					
ANR	745527	CompoundStatement		860:0:23827:24197	745525	0					
ANR	745528	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	861:4:23833:23856	745525	0	True				
ANR	745529	IdentifierDecl	* tree		745525	0					
ANR	745530	IdentifierDeclType	ExprTree *		745525	0					
ANR	745531	Identifier	tree		745525	1					
ANR	745532	IdentifierDecl	* tree2		745525	1					
ANR	745533	IdentifierDeclType	ExprTree *		745525	0					
ANR	745534	Identifier	tree2		745525	1					
ANR	745535	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	863:4:23863:23914	745525	1	True				
ANR	745536	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		745525	0					
ANR	745537	Callee	get_two_exprs		745525	0					
ANR	745538	Identifier	get_two_exprs		745525	0					
ANR	745539	ArgumentList	line		745525	1					
ANR	745540	Argument	line		745525	0					
ANR	745541	Identifier	line		745525	0					
ANR	745542	Argument	tree		745525	1					
ANR	745543	Identifier	tree		745525	0					
ANR	745544	Argument	tree2		745525	2					
ANR	745545	Identifier	tree2		745525	0					
ANR	745546	Argument	state		745525	3					
ANR	745547	Identifier	state		745525	0					
ANR	745548	Argument	parameters		745525	4					
ANR	745549	Identifier	parameters		745525	0					
ANR	745550	IfStatement	if ( tree != NULL || tree2 != NULL )		745525	2					
ANR	745551	Condition	tree != NULL || tree2 != NULL	864:8:23924:23952	745525	0	True				
ANR	745552	OrExpression	tree != NULL || tree2 != NULL		745525	0		||			
ANR	745553	EqualityExpression	tree != NULL		745525	0		!=			
ANR	745554	Identifier	tree		745525	0					
ANR	745555	Identifier	NULL		745525	1					
ANR	745556	EqualityExpression	tree2 != NULL		745525	1		!=			
ANR	745557	Identifier	tree2		745525	0					
ANR	745558	Identifier	NULL		745525	1					
ANR	745559	CompoundStatement		5:39:127:127	745525	1					
ANR	745560	IfStatement	if ( tree -> SameAs ( tree2 ) )		745525	0					
ANR	745561	Condition	tree -> SameAs ( tree2 )	865:12:23969:23987	745525	0	True				
ANR	745562	CallExpression	tree -> SameAs ( tree2 )		745525	0					
ANR	745563	Callee	tree -> SameAs		745525	0					
ANR	745564	PtrMemberAccess	tree -> SameAs		745525	0					
ANR	745565	Identifier	tree		745525	0					
ANR	745566	Identifier	SameAs		745525	1					
ANR	745567	ArgumentList	tree2		745525	1					
ANR	745568	Argument	tree2		745525	0					
ANR	745569	Identifier	tree2		745525	0					
ANR	745570	CompoundStatement		6:33:162:162	745525	1					
ANR	745571	ExpressionStatement	"print_error_message ( ""the expressions are the same."" , state )"	866:12:24004:24063	745525	0	True				
ANR	745572	CallExpression	"print_error_message ( ""the expressions are the same."" , state )"		745525	0					
ANR	745573	Callee	print_error_message		745525	0					
ANR	745574	Identifier	print_error_message		745525	0					
ANR	745575	ArgumentList	"""the expressions are the same."""		745525	1					
ANR	745576	Argument	"""the expressions are the same."""		745525	0					
ANR	745577	PrimaryExpression	"""the expressions are the same."""		745525	0					
ANR	745578	Argument	state		745525	1					
ANR	745579	Identifier	state		745525	0					
ANR	745580	IfStatement	if ( tree != NULL )		745525	3					
ANR	745581	Condition	tree != NULL	869:8:24089:24100	745525	0	True				
ANR	745582	EqualityExpression	tree != NULL		745525	0		!=			
ANR	745583	Identifier	tree		745525	0					
ANR	745584	Identifier	NULL		745525	1					
ANR	745585	CompoundStatement		10:22:275:275	745525	1					
ANR	745586	Statement	delete	870:8:24113:24118	745525	0	True				
ANR	745587	ExpressionStatement	tree	870:15:24120:24124	745525	1	True				
ANR	745588	Identifier	tree		745525	0					
ANR	745589	IfStatement	if ( tree2 != NULL )		745525	4					
ANR	745590	Condition	tree2 != NULL	872:8:24140:24152	745525	0	True				
ANR	745591	EqualityExpression	tree2 != NULL		745525	0		!=			
ANR	745592	Identifier	tree2		745525	0					
ANR	745593	Identifier	NULL		745525	1					
ANR	745594	CompoundStatement		13:23:327:327	745525	1					
ANR	745595	Statement	delete	873:8:24165:24170	745525	0	True				
ANR	745596	ExpressionStatement	tree2	873:15:24172:24177	745525	1	True				
ANR	745597	Identifier	tree2		745525	0					
ANR	745598	ReturnStatement	return ;	875:4:24189:24195	745525	5	True				
ANR	745599	ReturnType	void		745525	1					
ANR	745600	Identifier	handle_diffq		745525	2					
ANR	745601	ParameterList	"string & line , State & state , Parameters & parameters"		745525	3					
ANR	745602	Parameter	string & line	857:4:23756:23771	745525	0	True				
ANR	745603	ParameterType	string &		745525	0					
ANR	745604	Identifier	line		745525	1					
ANR	745605	Parameter	State & state	858:4:23779:23795	745525	1	True				
ANR	745606	ParameterType	State &		745525	0					
ANR	745607	Identifier	state		745525	1					
ANR	745608	Parameter	Parameters & parameters	859:4:23803:23824	745525	2	True				
ANR	745609	ParameterType	Parameters &		745525	0					
ANR	745610	Identifier	parameters		745525	1					
ANR	745611	CFGEntryNode	ENTRY		745525		True				
ANR	745612	CFGExitNode	EXIT		745525		True				
ANR	745613	Symbol	* tree		745525						
ANR	745614	Symbol	NULL		745525						
ANR	745615	Symbol	line		745525						
ANR	745616	Symbol	tree		745525						
ANR	745617	Symbol	state		745525						
ANR	745618	Symbol	tree2		745525						
ANR	745619	Symbol	parameters		745525						
ANR	745620	Symbol	tree -> SameAs		745525						
ANR	745621	Function	handle_set	884:0:24387:25468							
ANR	745622	FunctionDef	"handle_set (string & line , State & state , Parameters & parameters)"		745621	0					
ANR	745623	CompoundStatement		888:0:24479:25468	745621	0					
ANR	745624	IdentifierDeclStatement	string option_name ;	889:4:24485:24504	745621	0	True				
ANR	745625	IdentifierDecl	option_name		745621	0					
ANR	745626	IdentifierDeclType	string		745621	0					
ANR	745627	Identifier	option_name		745621	1					
ANR	745628	IdentifierDeclStatement	string option_value ;	890:4:24510:24530	745621	1	True				
ANR	745629	IdentifierDecl	option_value		745621	0					
ANR	745630	IdentifierDeclType	string		745621	0					
ANR	745631	Identifier	option_value		745621	1					
ANR	745632	IfStatement	"if ( get_variable_name ( line , false , option_name , state , parameters ) )"		745621	2					
ANR	745633	Condition	"get_variable_name ( line , false , option_name , state , parameters )"	892:8:24541:24602	745621	0	True				
ANR	745634	CallExpression	"get_variable_name ( line , false , option_name , state , parameters )"		745621	0					
ANR	745635	Callee	get_variable_name		745621	0					
ANR	745636	Identifier	get_variable_name		745621	0					
ANR	745637	ArgumentList	line		745621	1					
ANR	745638	Argument	line		745621	0					
ANR	745639	Identifier	line		745621	0					
ANR	745640	Argument	false		745621	1					
ANR	745641	Identifier	false		745621	0					
ANR	745642	Argument	option_name		745621	2					
ANR	745643	Identifier	option_name		745621	0					
ANR	745644	Argument	state		745621	3					
ANR	745645	Identifier	state		745621	0					
ANR	745646	Argument	parameters		745621	4					
ANR	745647	Identifier	parameters		745621	0					
ANR	745648	CompoundStatement		5:72:125:125	745621	1					
ANR	745649	IfStatement	"if ( get_variable_name ( line , false , option_value , state , parameters ) )"		745621	0					
ANR	745650	Condition	"get_variable_name ( line , false , option_value , state , parameters )"	893:12:24619:24681	745621	0	True				
ANR	745651	CallExpression	"get_variable_name ( line , false , option_value , state , parameters )"		745621	0					
ANR	745652	Callee	get_variable_name		745621	0					
ANR	745653	Identifier	get_variable_name		745621	0					
ANR	745654	ArgumentList	line		745621	1					
ANR	745655	Argument	line		745621	0					
ANR	745656	Identifier	line		745621	0					
ANR	745657	Argument	false		745621	1					
ANR	745658	Identifier	false		745621	0					
ANR	745659	Argument	option_value		745621	2					
ANR	745660	Identifier	option_value		745621	0					
ANR	745661	Argument	state		745621	3					
ANR	745662	Identifier	state		745621	0					
ANR	745663	Argument	parameters		745621	4					
ANR	745664	Identifier	parameters		745621	0					
ANR	745665	CompoundStatement		6:77:204:204	745621	1					
ANR	745666	IfStatement	"if ( option_name == ""format"" )"		745621	0					
ANR	745667	Condition	"option_name == ""format"""	894:16:24702:24724	745621	0	True				
ANR	745668	EqualityExpression	"option_name == ""format"""		745621	0		==			
ANR	745669	Identifier	option_name		745621	0					
ANR	745670	PrimaryExpression	"""format"""		745621	1					
ANR	745671	CompoundStatement		7:41:247:247	745621	1					
ANR	745672	IfStatement	"if ( option_value == ""compact"" )"		745621	0					
ANR	745673	Condition	"option_value == ""compact"""	895:20:24749:24773	745621	0	True				
ANR	745674	EqualityExpression	"option_value == ""compact"""		745621	0		==			
ANR	745675	Identifier	option_value		745621	0					
ANR	745676	PrimaryExpression	"""compact"""		745621	1					
ANR	745677	CompoundStatement		8:47:296:296	745621	1					
ANR	745678	ExpressionStatement	state . format = print_Compact	896:20:24798:24826	745621	0	True				
ANR	745679	AssignmentExpression	state . format = print_Compact		745621	0		=			
ANR	745680	MemberAccess	state . format		745621	0					
ANR	745681	Identifier	state		745621	0					
ANR	745682	Identifier	format		745621	1					
ANR	745683	Identifier	print_Compact		745621	1					
ANR	745684	ElseStatement	else		745621	0					
ANR	745685	IfStatement	"if ( option_value == ""pretty"" )"		745621	0					
ANR	745686	Condition	"option_value == ""pretty"""	897:27:24855:24878	745621	0	True				
ANR	745687	EqualityExpression	"option_value == ""pretty"""		745621	0		==			
ANR	745688	Identifier	option_value		745621	0					
ANR	745689	PrimaryExpression	"""pretty"""		745621	1					
ANR	745690	CompoundStatement		10:53:401:401	745621	1					
ANR	745691	ExpressionStatement	state . format = print_Pretty	898:20:24903:24930	745621	0	True				
ANR	745692	AssignmentExpression	state . format = print_Pretty		745621	0		=			
ANR	745693	MemberAccess	state . format		745621	0					
ANR	745694	Identifier	state		745621	0					
ANR	745695	Identifier	format		745621	1					
ANR	745696	Identifier	print_Pretty		745621	1					
ANR	745697	ElseStatement	else		745621	0					
ANR	745698	IfStatement	"if ( option_value == ""xml"" )"		745621	0					
ANR	745699	Condition	"option_value == ""xml"""	899:27:24960:24980	745621	0	True				
ANR	745700	EqualityExpression	"option_value == ""xml"""		745621	0		==			
ANR	745701	Identifier	option_value		745621	0					
ANR	745702	PrimaryExpression	"""xml"""		745621	1					
ANR	745703	CompoundStatement		12:50:503:503	745621	1					
ANR	745704	ExpressionStatement	state . format = print_XML	900:20:25005:25029	745621	0	True				
ANR	745705	AssignmentExpression	state . format = print_XML		745621	0		=			
ANR	745706	MemberAccess	state . format		745621	0					
ANR	745707	Identifier	state		745621	0					
ANR	745708	Identifier	format		745621	1					
ANR	745709	Identifier	print_XML		745621	1					
ANR	745710	ElseStatement	else		745621	0					
ANR	745711	IfStatement	"if ( option_value == ""xmlpretty"" )"		745621	0					
ANR	745712	Condition	"option_value == ""xmlpretty"""	901:27:25058:25084	745621	0	True				
ANR	745713	EqualityExpression	"option_value == ""xmlpretty"""		745621	0		==			
ANR	745714	Identifier	option_value		745621	0					
ANR	745715	PrimaryExpression	"""xmlpretty"""		745621	1					
ANR	745716	CompoundStatement		14:56:607:607	745621	1					
ANR	745717	ExpressionStatement	state . format = print_XMLPretty	902:20:25109:25139	745621	0	True				
ANR	745718	AssignmentExpression	state . format = print_XMLPretty		745621	0		=			
ANR	745719	MemberAccess	state . format		745621	0					
ANR	745720	Identifier	state		745621	0					
ANR	745721	Identifier	format		745621	1					
ANR	745722	Identifier	print_XMLPretty		745621	1					
ANR	745723	ElseStatement	else		745621	0					
ANR	745724	CompoundStatement		16:23:684:684	745621	0					
ANR	745725	ExpressionStatement	"print_error_message ( ""Unknown print format. Use compact, pretty, xml, or xmlpretty"" , state )"	904:20:25186:25276	745621	0	True				
ANR	745726	CallExpression	"print_error_message ( ""Unknown print format. Use compact, pretty, xml, or xmlpretty"" , state )"		745621	0					
ANR	745727	Callee	print_error_message		745621	0					
ANR	745728	Identifier	print_error_message		745621	0					
ANR	745729	ArgumentList	"""Unknown print format. Use compact, pretty, xml, or xmlpretty"""		745621	1					
ANR	745730	Argument	"""Unknown print format. Use compact, pretty, xml, or xmlpretty"""		745621	0					
ANR	745731	PrimaryExpression	"""Unknown print format. Use compact, pretty, xml, or xmlpretty"""		745621	0					
ANR	745732	Argument	state		745621	1					
ANR	745733	Identifier	state		745621	0					
ANR	745734	ElseStatement	else		745621	0					
ANR	745735	CompoundStatement		19:19:835:835	745621	0					
ANR	745736	ExpressionStatement	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"	907:16:25333:25424	745621	0	True				
ANR	745737	CallExpression	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"		745621	0					
ANR	745738	Callee	print_error_message		745621	0					
ANR	745739	Identifier	print_error_message		745621	0					
ANR	745740	ArgumentList	"""Unknown option. The only option currently available is format"""		745621	1					
ANR	745741	Argument	"""Unknown option. The only option currently available is format"""		745621	0					
ANR	745742	PrimaryExpression	"""Unknown option. The only option currently available is format"""		745621	0					
ANR	745743	Argument	state		745621	1					
ANR	745744	Identifier	state		745621	0					
ANR	745745	ReturnStatement	return ;	911:4:25460:25466	745621	3	True				
ANR	745746	ReturnType	void		745621	1					
ANR	745747	Identifier	handle_set		745621	2					
ANR	745748	ParameterList	"string & line , State & state , Parameters & parameters"		745621	3					
ANR	745749	Parameter	string & line	885:4:24408:24423	745621	0	True				
ANR	745750	ParameterType	string &		745621	0					
ANR	745751	Identifier	line		745621	1					
ANR	745752	Parameter	State & state	886:4:24431:24447	745621	1	True				
ANR	745753	ParameterType	State &		745621	0					
ANR	745754	Identifier	state		745621	1					
ANR	745755	Parameter	Parameters & parameters	887:4:24455:24476	745621	2	True				
ANR	745756	ParameterType	Parameters &		745621	0					
ANR	745757	Identifier	parameters		745621	1					
ANR	745758	CFGEntryNode	ENTRY		745621		True				
ANR	745759	CFGExitNode	EXIT		745621		True				
ANR	745760	Symbol	print_XMLPretty		745621						
ANR	745761	Symbol	option_value		745621						
ANR	745762	Symbol	get_variable_name		745621						
ANR	745763	Symbol	print_Pretty		745621						
ANR	745764	Symbol	line		745621						
ANR	745765	Symbol	false		745621						
ANR	745766	Symbol	option_name		745621						
ANR	745767	Symbol	state		745621						
ANR	745768	Symbol	print_XML		745621						
ANR	745769	Symbol	parameters		745621						
ANR	745770	Symbol	print_Compact		745621						
ANR	745771	Symbol	state . format		745621						
ANR	745772	Function	handle_show	920:0:25659:26521							
ANR	745773	FunctionDef	"handle_show (string & line , State & state , Parameters & parameters)"		745772	0					
ANR	745774	CompoundStatement		924:0:25752:26521	745772	0					
ANR	745775	IdentifierDeclStatement	string option_name ;	925:4:25758:25777	745772	0	True				
ANR	745776	IdentifierDecl	option_name		745772	0					
ANR	745777	IdentifierDeclType	string		745772	0					
ANR	745778	Identifier	option_name		745772	1					
ANR	745779	IfStatement	"if ( get_variable_name ( line , false , option_name , state , parameters ) )"		745772	1					
ANR	745780	Condition	"get_variable_name ( line , false , option_name , state , parameters )"	927:8:25788:25849	745772	0	True				
ANR	745781	CallExpression	"get_variable_name ( line , false , option_name , state , parameters )"		745772	0					
ANR	745782	Callee	get_variable_name		745772	0					
ANR	745783	Identifier	get_variable_name		745772	0					
ANR	745784	ArgumentList	line		745772	1					
ANR	745785	Argument	line		745772	0					
ANR	745786	Identifier	line		745772	0					
ANR	745787	Argument	false		745772	1					
ANR	745788	Identifier	false		745772	0					
ANR	745789	Argument	option_name		745772	2					
ANR	745790	Identifier	option_name		745772	0					
ANR	745791	Argument	state		745772	3					
ANR	745792	Identifier	state		745772	0					
ANR	745793	Argument	parameters		745772	4					
ANR	745794	Identifier	parameters		745772	0					
ANR	745795	CompoundStatement		4:72:99:99	745772	1					
ANR	745796	IfStatement	"if ( option_name == ""format"" )"		745772	0					
ANR	745797	Condition	"option_name == ""format"""	928:12:25866:25888	745772	0	True				
ANR	745798	EqualityExpression	"option_name == ""format"""		745772	0		==			
ANR	745799	Identifier	option_name		745772	0					
ANR	745800	PrimaryExpression	"""format"""		745772	1					
ANR	745801	CompoundStatement		5:37:138:138	745772	1					
ANR	745802	ExpressionStatement	"cout << ""Format: """	929:12:25905:25923	745772	0	True				
ANR	745803	ShiftExpression	"cout << ""Format: """		745772	0		<<			
ANR	745804	Identifier	cout		745772	0					
ANR	745805	PrimaryExpression	"""Format: """		745772	1					
ANR	745806	SwitchStatement	switch ( state . format )		745772	1					
ANR	745807	Condition	state . format	930:20:25945:25956	745772	0	True				
ANR	745808	MemberAccess	state . format		745772	0					
ANR	745809	Identifier	state		745772	0					
ANR	745810	Identifier	format		745772	1					
ANR	745811	CompoundStatement		7:34:206:206	745772	1					
ANR	745812	Label	case print_Compact :	931:12:25973:25991	745772	0	True				
ANR	745813	Identifier	print_Compact		745772	0					
ANR	745814	ExpressionStatement	"cout << ""Traditional Compact\\n"""	932:16:26009:26040	745772	1	True				
ANR	745815	ShiftExpression	"cout << ""Traditional Compact\\n"""		745772	0		<<			
ANR	745816	Identifier	cout		745772	0					
ANR	745817	PrimaryExpression	"""Traditional Compact\\n"""		745772	1					
ANR	745818	BreakStatement	break ;	933:16:26058:26063	745772	2	True				
ANR	745819	Label	case print_Pretty :	934:12:26077:26094	745772	3	True				
ANR	745820	Identifier	print_Pretty		745772	0					
ANR	745821	ExpressionStatement	"cout << ""Traditional Pretty\\n"""	935:16:26112:26142	745772	4	True				
ANR	745822	ShiftExpression	"cout << ""Traditional Pretty\\n"""		745772	0		<<			
ANR	745823	Identifier	cout		745772	0					
ANR	745824	PrimaryExpression	"""Traditional Pretty\\n"""		745772	1					
ANR	745825	BreakStatement	break ;	936:16:26160:26165	745772	5	True				
ANR	745826	Label	case print_XML :	937:12:26179:26193	745772	6	True				
ANR	745827	Identifier	print_XML		745772	0					
ANR	745828	ExpressionStatement	"cout << ""XML Compact\\n"""	938:16:26211:26234	745772	7	True				
ANR	745829	ShiftExpression	"cout << ""XML Compact\\n"""		745772	0		<<			
ANR	745830	Identifier	cout		745772	0					
ANR	745831	PrimaryExpression	"""XML Compact\\n"""		745772	1					
ANR	745832	BreakStatement	break ;	939:16:26252:26257	745772	8	True				
ANR	745833	Label	case print_XMLPretty :	940:12:26271:26291	745772	9	True				
ANR	745834	Identifier	print_XMLPretty		745772	0					
ANR	745835	ExpressionStatement	"cout << ""XML Pretty\\n"""	941:16:26309:26331	745772	10	True				
ANR	745836	ShiftExpression	"cout << ""XML Pretty\\n"""		745772	0		<<			
ANR	745837	Identifier	cout		745772	0					
ANR	745838	PrimaryExpression	"""XML Pretty\\n"""		745772	1					
ANR	745839	BreakStatement	break ;	942:16:26349:26354	745772	11	True				
ANR	745840	ElseStatement	else		745772	0					
ANR	745841	CompoundStatement		21:15:632:632	745772	0					
ANR	745842	ExpressionStatement	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"	945:12:26399:26490	745772	0	True				
ANR	745843	CallExpression	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"		745772	0					
ANR	745844	Callee	print_error_message		745772	0					
ANR	745845	Identifier	print_error_message		745772	0					
ANR	745846	ArgumentList	"""Unknown option. The only option currently available is format"""		745772	1					
ANR	745847	Argument	"""Unknown option. The only option currently available is format"""		745772	0					
ANR	745848	PrimaryExpression	"""Unknown option. The only option currently available is format"""		745772	0					
ANR	745849	Argument	state		745772	1					
ANR	745850	Identifier	state		745772	0					
ANR	745851	ReturnStatement	return ;	949:4:26513:26519	745772	2	True				
ANR	745852	ReturnType	void		745772	1					
ANR	745853	Identifier	handle_show		745772	2					
ANR	745854	ParameterList	"string & line , State & state , Parameters & parameters"		745772	3					
ANR	745855	Parameter	string & line	921:4:25681:25696	745772	0	True				
ANR	745856	ParameterType	string &		745772	0					
ANR	745857	Identifier	line		745772	1					
ANR	745858	Parameter	State & state	922:4:25704:25720	745772	1	True				
ANR	745859	ParameterType	State &		745772	0					
ANR	745860	Identifier	state		745772	1					
ANR	745861	Parameter	Parameters & parameters	923:4:25728:25749	745772	2	True				
ANR	745862	ParameterType	Parameters &		745772	0					
ANR	745863	Identifier	parameters		745772	1					
ANR	745864	CFGEntryNode	ENTRY		745772		True				
ANR	745865	CFGExitNode	EXIT		745772		True				
ANR	745866	Symbol	get_variable_name		745772						
ANR	745867	Symbol	line		745772						
ANR	745868	Symbol	false		745772						
ANR	745869	Symbol	option_name		745772						
ANR	745870	Symbol	state		745772						
ANR	745871	Symbol	parameters		745772						
ANR	745872	Symbol	state . format		745772						
ANR	745873	Function	handle_writexml	958:0:26716:28485							
ANR	745874	FunctionDef	"handle_writexml (string & line , State & state , Parameters & parameters)"		745873	0					
ANR	745875	CompoundStatement		962:0:26813:28485	745873	0					
ANR	745876	IdentifierDeclStatement	string filename ;	963:4:26819:26837	745873	0	True				
ANR	745877	IdentifierDecl	filename		745873	0					
ANR	745878	IdentifierDeclType	string		745873	0					
ANR	745879	Identifier	filename		745873	1					
ANR	745880	IdentifierDeclStatement	ExprTree * expr ;	964:4:26843:26858	745873	1	True				
ANR	745881	IdentifierDecl	* expr		745873	0					
ANR	745882	IdentifierDeclType	ExprTree *		745873	0					
ANR	745883	Identifier	expr		745873	1					
ANR	745884	IdentifierDeclStatement	ofstream xml_file ;	965:4:26864:26882	745873	2	True				
ANR	745885	IdentifierDecl	xml_file		745873	0					
ANR	745886	IdentifierDeclType	ofstream		745873	0					
ANR	745887	Identifier	xml_file		745873	1					
ANR	745888	ExpressionStatement	expr = NULL	967:4:26889:26900	745873	3	True				
ANR	745889	AssignmentExpression	expr = NULL		745873	0		=			
ANR	745890	Identifier	expr		745873	0					
ANR	745891	Identifier	NULL		745873	1					
ANR	745892	IfStatement	"if ( get_file_name ( line , filename , state , parameters ) )"		745873	4					
ANR	745893	Condition	"get_file_name ( line , filename , state , parameters )"	968:8:26910:26957	745873	0	True				
ANR	745894	CallExpression	"get_file_name ( line , filename , state , parameters )"		745873	0					
ANR	745895	Callee	get_file_name		745873	0					
ANR	745896	Identifier	get_file_name		745873	0					
ANR	745897	ArgumentList	line		745873	1					
ANR	745898	Argument	line		745873	0					
ANR	745899	Identifier	line		745873	0					
ANR	745900	Argument	filename		745873	1					
ANR	745901	Identifier	filename		745873	0					
ANR	745902	Argument	state		745873	2					
ANR	745903	Identifier	state		745873	0					
ANR	745904	Argument	parameters		745873	3					
ANR	745905	Identifier	parameters		745873	0					
ANR	745906	CompoundStatement		7:58:146:146	745873	1					
ANR	745907	IfStatement	"if ( ( expr = get_expr ( line , state , parameters ) ) != NULL )"		745873	0					
ANR	745908	Condition	"( expr = get_expr ( line , state , parameters ) ) != NULL"	969:12:26974:27023	745873	0	True				
ANR	745909	EqualityExpression	"( expr = get_expr ( line , state , parameters ) ) != NULL"		745873	0		!=			
ANR	745910	AssignmentExpression	"expr = get_expr ( line , state , parameters )"		745873	0		=			
ANR	745911	Identifier	expr		745873	0					
ANR	745912	CallExpression	"get_expr ( line , state , parameters )"		745873	1					
ANR	745913	Callee	get_expr		745873	0					
ANR	745914	Identifier	get_expr		745873	0					
ANR	745915	ArgumentList	line		745873	1					
ANR	745916	Argument	line		745873	0					
ANR	745917	Identifier	line		745873	0					
ANR	745918	Argument	state		745873	1					
ANR	745919	Identifier	state		745873	0					
ANR	745920	Argument	parameters		745873	2					
ANR	745921	Identifier	parameters		745873	0					
ANR	745922	Identifier	NULL		745873	1					
ANR	745923	CompoundStatement		8:64:212:212	745873	1					
ANR	745924	IfStatement	"if ( expr_okay_for_xml_file ( expr , state , parameters ) )"		745873	0					
ANR	745925	Condition	"expr_okay_for_xml_file ( expr , state , parameters )"	970:16:27044:27090	745873	0	True				
ANR	745926	CallExpression	"expr_okay_for_xml_file ( expr , state , parameters )"		745873	0					
ANR	745927	Callee	expr_okay_for_xml_file		745873	0					
ANR	745928	Identifier	expr_okay_for_xml_file		745873	0					
ANR	745929	ArgumentList	expr		745873	1					
ANR	745930	Argument	expr		745873	0					
ANR	745931	Identifier	expr		745873	0					
ANR	745932	Argument	state		745873	1					
ANR	745933	Identifier	state		745873	0					
ANR	745934	Argument	parameters		745873	2					
ANR	745935	Identifier	parameters		745873	0					
ANR	745936	CompoundStatement		9:65:279:279	745873	1					
ANR	745937	ExpressionStatement	xml_file . open ( filename . c_str ( ) )	971:16:27111:27142	745873	0	True				
ANR	745938	CallExpression	xml_file . open ( filename . c_str ( ) )		745873	0					
ANR	745939	Callee	xml_file . open		745873	0					
ANR	745940	MemberAccess	xml_file . open		745873	0					
ANR	745941	Identifier	xml_file		745873	0					
ANR	745942	Identifier	open		745873	1					
ANR	745943	ArgumentList	filename . c_str ( )		745873	1					
ANR	745944	Argument	filename . c_str ( )		745873	0					
ANR	745945	CallExpression	filename . c_str ( )		745873	0					
ANR	745946	Callee	filename . c_str		745873	0					
ANR	745947	MemberAccess	filename . c_str		745873	0					
ANR	745948	Identifier	filename		745873	0					
ANR	745949	Identifier	c_str		745873	1					
ANR	745950	ArgumentList			745873	1					
ANR	745951	IfStatement	if ( xml_file . bad ( ) )		745873	1					
ANR	745952	Condition	xml_file . bad ( )	972:20:27164:27177	745873	0	True				
ANR	745953	CallExpression	xml_file . bad ( )		745873	0					
ANR	745954	Callee	xml_file . bad		745873	0					
ANR	745955	MemberAccess	xml_file . bad		745873	0					
ANR	745956	Identifier	xml_file		745873	0					
ANR	745957	Identifier	bad		745873	1					
ANR	745958	ArgumentList			745873	1					
ANR	745959	CompoundStatement		12:20:388:408	745873	1					
ANR	745960	IdentifierDeclStatement	string error_message ;	973:20:27202:27222	745873	0	True				
ANR	745961	IdentifierDecl	error_message		745873	0					
ANR	745962	IdentifierDeclType	string		745873	0					
ANR	745963	Identifier	error_message		745873	1					
ANR	745964	ExpressionStatement	"error_message = ""Can't open """	974:20:27244:27273	745873	1	True				
ANR	745965	AssignmentExpression	"error_message = ""Can't open """		745873	0		=			
ANR	745966	Identifier	error_message		745873	0					
ANR	745967	PrimaryExpression	"""Can't open """		745873	1					
ANR	745968	ExpressionStatement	error_message += filename	975:20:27295:27320	745873	2	True				
ANR	745969	AssignmentExpression	error_message += filename		745873	0		+=			
ANR	745970	Identifier	error_message		745873	0					
ANR	745971	Identifier	filename		745873	1					
ANR	745972	ExpressionStatement	"error_message += "" for output"""	976:20:27342:27372	745873	3	True				
ANR	745973	AssignmentExpression	"error_message += "" for output"""		745873	0		+=			
ANR	745974	Identifier	error_message		745873	0					
ANR	745975	PrimaryExpression	""" for output"""		745873	1					
ANR	745976	ExpressionStatement	"print_error_message ( error_message , state )"	977:20:27394:27435	745873	4	True				
ANR	745977	CallExpression	"print_error_message ( error_message , state )"		745873	0					
ANR	745978	Callee	print_error_message		745873	0					
ANR	745979	Identifier	print_error_message		745873	0					
ANR	745980	ArgumentList	error_message		745873	1					
ANR	745981	Argument	error_message		745873	0					
ANR	745982	Identifier	error_message		745873	0					
ANR	745983	Argument	state		745873	1					
ANR	745984	Identifier	state		745873	0					
ANR	745985	ElseStatement	else		745873	0					
ANR	745986	CompoundStatement		19:20:717:748	745873	0					
ANR	745987	IdentifierDeclStatement	ClassAdXMLUnParser unparser ;	979:20:27482:27509	745873	0	True				
ANR	745988	IdentifierDecl	unparser		745873	0					
ANR	745989	IdentifierDeclType	ClassAdXMLUnParser		745873	0					
ANR	745990	Identifier	unparser		745873	1					
ANR	745991	IdentifierDeclStatement	string classad_text ;	980:20:27531:27562	745873	1	True				
ANR	745992	IdentifierDecl	classad_text		745873	0					
ANR	745993	IdentifierDeclType	string		745873	0					
ANR	745994	Identifier	classad_text		745873	1					
ANR	745995	ExpressionStatement	"xml_file << ""<classads>\\n"""	982:20:27585:27611	745873	2	True				
ANR	745996	ShiftExpression	"xml_file << ""<classads>\\n"""		745873	0		<<			
ANR	745997	Identifier	xml_file		745873	0					
ANR	745998	PrimaryExpression	"""<classads>\\n"""		745873	1					
ANR	745999	IfStatement	if ( expr -> GetKind ( ) == ExprTree :: CLASSAD_NODE )		745873	3					
ANR	746000	Condition	expr -> GetKind ( ) == ExprTree :: CLASSAD_NODE	984:24:27638:27678	745873	0	True				
ANR	746001	EqualityExpression	expr -> GetKind ( ) == ExprTree :: CLASSAD_NODE		745873	0		==			
ANR	746002	CallExpression	expr -> GetKind ( )		745873	0					
ANR	746003	Callee	expr -> GetKind		745873	0					
ANR	746004	PtrMemberAccess	expr -> GetKind		745873	0					
ANR	746005	Identifier	expr		745873	0					
ANR	746006	Identifier	GetKind		745873	1					
ANR	746007	ArgumentList			745873	1					
ANR	746008	Identifier	ExprTree :: CLASSAD_NODE		745873	1					
ANR	746009	CompoundStatement		23:67:867:867	745873	1					
ANR	746010	ExpressionStatement	"unparser . Unparse ( classad_text , expr )"	985:24:27707:27743	745873	0	True				
ANR	746011	CallExpression	"unparser . Unparse ( classad_text , expr )"		745873	0					
ANR	746012	Callee	unparser . Unparse		745873	0					
ANR	746013	MemberAccess	unparser . Unparse		745873	0					
ANR	746014	Identifier	unparser		745873	0					
ANR	746015	Identifier	Unparse		745873	1					
ANR	746016	ArgumentList	classad_text		745873	1					
ANR	746017	Argument	classad_text		745873	0					
ANR	746018	Identifier	classad_text		745873	0					
ANR	746019	Argument	expr		745873	1					
ANR	746020	Identifier	expr		745873	0					
ANR	746021	ExpressionStatement	xml_file << classad_text	986:24:27769:27793	745873	1	True				
ANR	746022	ShiftExpression	xml_file << classad_text		745873	0		<<			
ANR	746023	Identifier	xml_file		745873	0					
ANR	746024	Identifier	classad_text		745873	1					
ANR	746025	ElseStatement	else		745873	0					
ANR	746026	CompoundStatement		28:24:1093:1116	745873	0					
ANR	746027	IdentifierDeclStatement	ExprList * list = ( ExprList * ) expr ;	988:24:27848:27881	745873	0	True				
ANR	746028	IdentifierDecl	* list = ( ExprList * ) expr		745873	0					
ANR	746029	IdentifierDeclType	ExprList *		745873	0					
ANR	746030	Identifier	list		745873	1					
ANR	746031	AssignmentExpression	* list = ( ExprList * ) expr		745873	2		=			
ANR	746032	Identifier	list		745873	0					
ANR	746033	CastExpression	( ExprList * ) expr		745873	1					
ANR	746034	CastTarget	ExprList *		745873	0					
ANR	746035	Identifier	expr		745873	1					
ANR	746036	IdentifierDeclStatement	ExprList :: iterator iter ;	989:24:27907:27930	745873	1	True				
ANR	746037	IdentifierDecl	iter		745873	0					
ANR	746038	IdentifierDeclType	ExprList :: iterator		745873	0					
ANR	746039	Identifier	iter		745873	1					
ANR	746040	ForStatement	for ( iter = list -> begin ( ) ; iter != list -> end ( ) ; iter ++ )		745873	2					
ANR	746041	ForInit	iter = list -> begin ( ) ;	990:29:27961:27981	745873	0	True				
ANR	746042	AssignmentExpression	iter = list -> begin ( )		745873	0		=			
ANR	746043	Identifier	iter		745873	0					
ANR	746044	CallExpression	list -> begin ( )		745873	1					
ANR	746045	Callee	list -> begin		745873	0					
ANR	746046	PtrMemberAccess	list -> begin		745873	0					
ANR	746047	Identifier	list		745873	0					
ANR	746048	Identifier	begin		745873	1					
ANR	746049	ArgumentList			745873	1					
ANR	746050	Condition	iter != list -> end ( )	990:51:27983:28001	745873	1	True				
ANR	746051	EqualityExpression	iter != list -> end ( )		745873	0		!=			
ANR	746052	Identifier	iter		745873	0					
ANR	746053	CallExpression	list -> end ( )		745873	1					
ANR	746054	Callee	list -> end		745873	0					
ANR	746055	PtrMemberAccess	list -> end		745873	0					
ANR	746056	Identifier	list		745873	0					
ANR	746057	Identifier	end		745873	1					
ANR	746058	ArgumentList			745873	1					
ANR	746059	PostIncDecOperationExpression	iter ++	990:72:28004:28009	745873	2	True				
ANR	746060	Identifier	iter		745873	0					
ANR	746061	IncDec	++		745873	1					
ANR	746062	CompoundStatement		30:28:1228:1245	745873	3					
ANR	746063	IdentifierDeclStatement	ExprTree * classad ;	991:28:28042:28059	745873	0	True				
ANR	746064	IdentifierDecl	* classad		745873	0					
ANR	746065	IdentifierDeclType	ExprTree *		745873	0					
ANR	746066	Identifier	classad		745873	1					
ANR	746067	ExpressionStatement	classad = * iter	993:28:28090:28105	745873	1	True				
ANR	746068	AssignmentExpression	classad = * iter		745873	0		=			
ANR	746069	Identifier	classad		745873	0					
ANR	746070	UnaryOperationExpression	* iter		745873	1					
ANR	746071	UnaryOperator	*		745873	0					
ANR	746072	Identifier	iter		745873	1					
ANR	746073	ExpressionStatement	"classad_text = """""	994:28:28135:28152	745873	2	True				
ANR	746074	AssignmentExpression	"classad_text = """""		745873	0		=			
ANR	746075	Identifier	classad_text		745873	0					
ANR	746076	PrimaryExpression	""""""		745873	1					
ANR	746077	ExpressionStatement	"unparser . Unparse ( classad_text , classad )"	995:28:28182:28221	745873	3	True				
ANR	746078	CallExpression	"unparser . Unparse ( classad_text , classad )"		745873	0					
ANR	746079	Callee	unparser . Unparse		745873	0					
ANR	746080	MemberAccess	unparser . Unparse		745873	0					
ANR	746081	Identifier	unparser		745873	0					
ANR	746082	Identifier	Unparse		745873	1					
ANR	746083	ArgumentList	classad_text		745873	1					
ANR	746084	Argument	classad_text		745873	0					
ANR	746085	Identifier	classad_text		745873	0					
ANR	746086	Argument	classad		745873	1					
ANR	746087	Identifier	classad		745873	0					
ANR	746088	ExpressionStatement	xml_file << classad_text << endl	996:28:28251:28283	745873	4	True				
ANR	746089	ShiftExpression	xml_file << classad_text << endl		745873	0		<<			
ANR	746090	Identifier	xml_file		745873	0					
ANR	746091	ShiftExpression	classad_text << endl		745873	1		<<			
ANR	746092	Identifier	classad_text		745873	0					
ANR	746093	Identifier	endl		745873	1					
ANR	746094	ExpressionStatement	"xml_file << ""</classads>\\n"""	999:20:28353:28380	745873	4	True				
ANR	746095	ShiftExpression	"xml_file << ""</classads>\\n"""		745873	0		<<			
ANR	746096	Identifier	xml_file		745873	0					
ANR	746097	PrimaryExpression	"""</classads>\\n"""		745873	1					
ANR	746098	IfStatement	if ( expr )		745873	5					
ANR	746099	Condition	expr	1004:8:28438:28441	745873	0	True				
ANR	746100	Identifier	expr		745873	0					
ANR	746101	CompoundStatement		43:14:1630:1630	745873	1					
ANR	746102	Statement	delete	1005:8:28454:28459	745873	0	True				
ANR	746103	ExpressionStatement	expr	1005:15:28461:28465	745873	1	True				
ANR	746104	Identifier	expr		745873	0					
ANR	746105	ReturnStatement	return ;	1007:4:28477:28483	745873	6	True				
ANR	746106	ReturnType	void		745873	1					
ANR	746107	Identifier	handle_writexml		745873	2					
ANR	746108	ParameterList	"string & line , State & state , Parameters & parameters"		745873	3					
ANR	746109	Parameter	string & line	959:4:26742:26757	745873	0	True				
ANR	746110	ParameterType	string &		745873	0					
ANR	746111	Identifier	line		745873	1					
ANR	746112	Parameter	State & state	960:4:26765:26781	745873	1	True				
ANR	746113	ParameterType	State &		745873	0					
ANR	746114	Identifier	state		745873	1					
ANR	746115	Parameter	Parameters & parameters	961:4:26789:26810	745873	2	True				
ANR	746116	ParameterType	Parameters &		745873	0					
ANR	746117	Identifier	parameters		745873	1					
ANR	746118	CFGEntryNode	ENTRY		745873		True				
ANR	746119	CFGExitNode	EXIT		745873		True				
ANR	746120	Symbol	list -> end		745873						
ANR	746121	Symbol	line		745873						
ANR	746122	Symbol	list -> begin		745873						
ANR	746123	Symbol	expr_okay_for_xml_file		745873						
ANR	746124	Symbol	* iter		745873						
ANR	746125	Symbol	ExprTree :: CLASSAD_NODE		745873						
ANR	746126	Symbol	expr		745873						
ANR	746127	Symbol	state		745873						
ANR	746128	Symbol	error_message		745873						
ANR	746129	Symbol	expr -> GetKind		745873						
ANR	746130	Symbol	NULL		745873						
ANR	746131	Symbol	classad_text		745873						
ANR	746132	Symbol	iter		745873						
ANR	746133	Symbol	filename . c_str		745873						
ANR	746134	Symbol	list		745873						
ANR	746135	Symbol	xml_file		745873						
ANR	746136	Symbol	filename		745873						
ANR	746137	Symbol	get_expr		745873						
ANR	746138	Symbol	* expr		745873						
ANR	746139	Symbol	* list		745873						
ANR	746140	Symbol	unparser		745873						
ANR	746141	Symbol	classad		745873						
ANR	746142	Symbol	xml_file . bad		745873						
ANR	746143	Symbol	parameters		745873						
ANR	746144	Symbol	get_file_name		745873						
ANR	746145	Function	handle_readxml	1016:0:28679:29967							
ANR	746146	FunctionDef	"handle_readxml (string & line , State & state , Parameters & parameters)"		746145	0					
ANR	746147	CompoundStatement		1020:0:28775:29967	746145	0					
ANR	746148	IdentifierDeclStatement	string variable_name ;	1021:4:28781:28804	746145	0	True				
ANR	746149	IdentifierDecl	variable_name		746145	0					
ANR	746150	IdentifierDeclType	string		746145	0					
ANR	746151	Identifier	variable_name		746145	1					
ANR	746152	IdentifierDeclStatement	string file_name ;	1022:4:28810:28829	746145	1	True				
ANR	746153	IdentifierDecl	file_name		746145	0					
ANR	746154	IdentifierDeclType	string		746145	0					
ANR	746155	Identifier	file_name		746145	1					
ANR	746156	IfStatement	"if ( get_variable_name ( line , false , variable_name , state , parameters ) )"		746145	2					
ANR	746157	Condition	"get_variable_name ( line , false , variable_name , state , parameters )"	1024:8:28840:28903	746145	0	True				
ANR	746158	CallExpression	"get_variable_name ( line , false , variable_name , state , parameters )"		746145	0					
ANR	746159	Callee	get_variable_name		746145	0					
ANR	746160	Identifier	get_variable_name		746145	0					
ANR	746161	ArgumentList	line		746145	1					
ANR	746162	Argument	line		746145	0					
ANR	746163	Identifier	line		746145	0					
ANR	746164	Argument	false		746145	1					
ANR	746165	Identifier	false		746145	0					
ANR	746166	Argument	variable_name		746145	2					
ANR	746167	Identifier	variable_name		746145	0					
ANR	746168	Argument	state		746145	3					
ANR	746169	Identifier	state		746145	0					
ANR	746170	Argument	parameters		746145	4					
ANR	746171	Identifier	parameters		746145	0					
ANR	746172	CompoundStatement		5:74:130:130	746145	1					
ANR	746173	IfStatement	"if ( get_file_name ( line , file_name , state , parameters ) )"		746145	0					
ANR	746174	Condition	"get_file_name ( line , file_name , state , parameters )"	1025:12:28920:28968	746145	0	True				
ANR	746175	CallExpression	"get_file_name ( line , file_name , state , parameters )"		746145	0					
ANR	746176	Callee	get_file_name		746145	0					
ANR	746177	Identifier	get_file_name		746145	0					
ANR	746178	ArgumentList	line		746145	1					
ANR	746179	Argument	line		746145	0					
ANR	746180	Identifier	line		746145	0					
ANR	746181	Argument	file_name		746145	1					
ANR	746182	Identifier	file_name		746145	0					
ANR	746183	Argument	state		746145	2					
ANR	746184	Identifier	state		746145	0					
ANR	746185	Argument	parameters		746145	3					
ANR	746186	Identifier	parameters		746145	0					
ANR	746187	CompoundStatement		7:12:209:245	746145	1					
ANR	746188	IdentifierDeclStatement	ifstream xml_file ( file_name . c_str ( ) ) ;	1026:12:28985:29021	746145	0	True				
ANR	746189	IdentifierDecl	xml_file ( file_name . c_str ( ) )		746145	0					
ANR	746190	IdentifierDeclType	ifstream		746145	0					
ANR	746191	Identifier	xml_file		746145	1					
ANR	746192	CallExpression	file_name . c_str ( )		746145	2					
ANR	746193	Callee	file_name . c_str		746145	0					
ANR	746194	MemberAccess	file_name . c_str		746145	0					
ANR	746195	Identifier	file_name		746145	0					
ANR	746196	Identifier	c_str		746145	1					
ANR	746197	ArgumentList			746145	1					
ANR	746198	IfStatement	if ( xml_file . bad ( ) )		746145	1					
ANR	746199	Condition	xml_file . bad ( )	1028:16:29040:29053	746145	0	True				
ANR	746200	CallExpression	xml_file . bad ( )		746145	0					
ANR	746201	Callee	xml_file . bad		746145	0					
ANR	746202	MemberAccess	xml_file . bad		746145	0					
ANR	746203	Identifier	xml_file		746145	0					
ANR	746204	Identifier	bad		746145	1					
ANR	746205	ArgumentList			746145	1					
ANR	746206	CompoundStatement		10:16:298:310	746145	1					
ANR	746207	IdentifierDeclStatement	string error ;	1029:16:29074:29086	746145	0	True				
ANR	746208	IdentifierDecl	error		746145	0					
ANR	746209	IdentifierDeclType	string		746145	0					
ANR	746210	Identifier	error		746145	1					
ANR	746211	ExpressionStatement	"error = ""Can't read file: """	1030:16:29104:29131	746145	1	True				
ANR	746212	AssignmentExpression	"error = ""Can't read file: """		746145	0		=			
ANR	746213	Identifier	error		746145	0					
ANR	746214	PrimaryExpression	"""Can't read file: """		746145	1					
ANR	746215	ExpressionStatement	error += file_name	1031:16:29149:29167	746145	2	True				
ANR	746216	AssignmentExpression	error += file_name		746145	0		+=			
ANR	746217	Identifier	error		746145	0					
ANR	746218	Identifier	file_name		746145	1					
ANR	746219	ExpressionStatement	"print_error_message ( error , state )"	1032:16:29185:29218	746145	3	True				
ANR	746220	CallExpression	"print_error_message ( error , state )"		746145	0					
ANR	746221	Callee	print_error_message		746145	0					
ANR	746222	Identifier	print_error_message		746145	0					
ANR	746223	ArgumentList	error		746145	1					
ANR	746224	Argument	error		746145	0					
ANR	746225	Identifier	error		746145	0					
ANR	746226	Argument	state		746145	1					
ANR	746227	Identifier	state		746145	0					
ANR	746228	ElseStatement	else		746145	0					
ANR	746229	CompoundStatement		18:16:605:631	746145	0					
ANR	746230	IdentifierDeclStatement	ExprList * list ;	1034:16:29257:29279	746145	0	True				
ANR	746231	IdentifierDecl	* list		746145	0					
ANR	746232	IdentifierDeclType	ExprList *		746145	0					
ANR	746233	Identifier	list		746145	1					
ANR	746234	IdentifierDeclStatement	ClassAd * classad ;	1035:16:29297:29322	746145	1	True				
ANR	746235	IdentifierDecl	* classad		746145	0					
ANR	746236	IdentifierDeclType	ClassAd *		746145	0					
ANR	746237	Identifier	classad		746145	1					
ANR	746238	IdentifierDeclStatement	ClassAdXMLParser parser ;	1036:16:29340:29363	746145	2	True				
ANR	746239	IdentifierDecl	parser		746145	0					
ANR	746240	IdentifierDeclType	ClassAdXMLParser		746145	0					
ANR	746241	Identifier	parser		746145	1					
ANR	746242	IdentifierDeclStatement	Variable * variable ;	1037:16:29381:29407	746145	3	True				
ANR	746243	IdentifierDecl	* variable		746145	0					
ANR	746244	IdentifierDeclType	Variable *		746145	0					
ANR	746245	Identifier	variable		746145	1					
ANR	746246	ExpressionStatement	list = new ExprList ( )	1039:16:29426:29447	746145	4	True				
ANR	746247	AssignmentExpression	list = new ExprList ( )		746145	0		=			
ANR	746248	Identifier	list		746145	0					
ANR	746249	UnaryExpression	new ExprList ( )		746145	1					
ANR	746250	DoStatement	do		746145	5					
ANR	746251	CompoundStatement		21:19:692:692	746145	0					
ANR	746252	ExpressionStatement	classad = parser . ParseClassAd ( xml_file )	1041:20:29490:29529	746145	0	True				
ANR	746253	AssignmentExpression	classad = parser . ParseClassAd ( xml_file )		746145	0		=			
ANR	746254	Identifier	classad		746145	0					
ANR	746255	CallExpression	parser . ParseClassAd ( xml_file )		746145	1					
ANR	746256	Callee	parser . ParseClassAd		746145	0					
ANR	746257	MemberAccess	parser . ParseClassAd		746145	0					
ANR	746258	Identifier	parser		746145	0					
ANR	746259	Identifier	ParseClassAd		746145	1					
ANR	746260	ArgumentList	xml_file		746145	1					
ANR	746261	Argument	xml_file		746145	0					
ANR	746262	Identifier	xml_file		746145	0					
ANR	746263	IfStatement	if ( classad != NULL )		746145	1					
ANR	746264	Condition	classad != NULL	1042:24:29555:29569	746145	0	True				
ANR	746265	EqualityExpression	classad != NULL		746145	0		!=			
ANR	746266	Identifier	classad		746145	0					
ANR	746267	Identifier	NULL		746145	1					
ANR	746268	CompoundStatement		23:41:796:796	746145	1					
ANR	746269	ExpressionStatement	list -> push_back ( classad )	1043:24:29598:29622	746145	0	True				
ANR	746270	CallExpression	list -> push_back ( classad )		746145	0					
ANR	746271	Callee	list -> push_back		746145	0					
ANR	746272	PtrMemberAccess	list -> push_back		746145	0					
ANR	746273	Identifier	list		746145	0					
ANR	746274	Identifier	push_back		746145	1					
ANR	746275	ArgumentList	classad		746145	1					
ANR	746276	Argument	classad		746145	0					
ANR	746277	Identifier	classad		746145	0					
ANR	746278	Condition	classad != NULL	1045:25:29671:29685	746145	1	True				
ANR	746279	EqualityExpression	classad != NULL		746145	0		!=			
ANR	746280	Identifier	classad		746145	0					
ANR	746281	Identifier	NULL		746145	1					
ANR	746282	ExpressionStatement	"variable = new Variable ( variable_name , list )"	1046:16:29705:29749	746145	6	True				
ANR	746283	AssignmentExpression	"variable = new Variable ( variable_name , list )"		746145	0		=			
ANR	746284	Identifier	variable		746145	0					
ANR	746285	Expression	"variable_name , list"		746145	1					
ANR	746286	Identifier	variable_name		746145	0					
ANR	746287	Identifier	list		746145	1					
ANR	746288	ExpressionStatement	variables [ variable_name ] = variable	1047:16:29767:29802	746145	7	True				
ANR	746289	AssignmentExpression	variables [ variable_name ] = variable		746145	0		=			
ANR	746290	ArrayIndexing	variables [ variable_name ]		746145	0					
ANR	746291	Identifier	variables		746145	0					
ANR	746292	Identifier	variable_name		746145	1					
ANR	746293	Identifier	variable		746145	1					
ANR	746294	IfStatement	if ( parameters . interactive )		746145	8					
ANR	746295	Condition	parameters . interactive	1048:20:29824:29845	746145	0	True				
ANR	746296	MemberAccess	parameters . interactive		746145	0					
ANR	746297	Identifier	parameters		746145	0					
ANR	746298	Identifier	interactive		746145	1					
ANR	746299	CompoundStatement		29:44:1072:1072	746145	1					
ANR	746300	ExpressionStatement	"print_expr ( list , state , parameters )"	1049:20:29870:29905	746145	0	True				
ANR	746301	CallExpression	"print_expr ( list , state , parameters )"		746145	0					
ANR	746302	Callee	print_expr		746145	0					
ANR	746303	Identifier	print_expr		746145	0					
ANR	746304	ArgumentList	list		746145	1					
ANR	746305	Argument	list		746145	0					
ANR	746306	Identifier	list		746145	0					
ANR	746307	Argument	state		746145	1					
ANR	746308	Identifier	state		746145	0					
ANR	746309	Argument	parameters		746145	2					
ANR	746310	Identifier	parameters		746145	0					
ANR	746311	ReturnStatement	return ;	1054:4:29959:29965	746145	3	True				
ANR	746312	ReturnType	void		746145	1					
ANR	746313	Identifier	handle_readxml		746145	2					
ANR	746314	ParameterList	"string & line , State & state , Parameters & parameters"		746145	3					
ANR	746315	Parameter	string & line	1017:4:28704:28719	746145	0	True				
ANR	746316	ParameterType	string &		746145	0					
ANR	746317	Identifier	line		746145	1					
ANR	746318	Parameter	State & state	1018:4:28727:28743	746145	1	True				
ANR	746319	ParameterType	State &		746145	0					
ANR	746320	Identifier	state		746145	1					
ANR	746321	Parameter	Parameters & parameters	1019:4:28751:28772	746145	2	True				
ANR	746322	ParameterType	Parameters &		746145	0					
ANR	746323	Identifier	parameters		746145	1					
ANR	746324	CFGEntryNode	ENTRY		746145		True				
ANR	746325	CFGExitNode	EXIT		746145		True				
ANR	746326	Symbol	variables		746145						
ANR	746327	Symbol	NULL		746145						
ANR	746328	Symbol	line		746145						
ANR	746329	Symbol	file_name		746145						
ANR	746330	Symbol	false		746145						
ANR	746331	Symbol	* variables		746145						
ANR	746332	Symbol	error		746145						
ANR	746333	Symbol	list		746145						
ANR	746334	Symbol	xml_file		746145						
ANR	746335	Symbol	parser . ParseClassAd		746145						
ANR	746336	Symbol	get_variable_name		746145						
ANR	746337	Symbol	parser		746145						
ANR	746338	Symbol	* variable_name		746145						
ANR	746339	Symbol	variable		746145						
ANR	746340	Symbol	classad		746145						
ANR	746341	Symbol	state		746145						
ANR	746342	Symbol	variable_name		746145						
ANR	746343	Symbol	xml_file . bad		746145						
ANR	746344	Symbol	parameters		746145						
ANR	746345	Symbol	get_file_name		746145						
ANR	746346	Symbol	parameters . interactive		746145						
ANR	746347	DeclStmt									
ANR	746348	Decl							string	string	new_line
ANR	746349	DeclStmt									
ANR	746350	Decl							int	int	index
ANR	746351	Function	handle_help	1091:0:30716:32105							
ANR	746352	FunctionDef	handle_help ()		746351	0					
ANR	746353	CompoundStatement		1092:0:30739:32105	746351	0					
ANR	746354	ExpressionStatement	print_version ( )	1093:4:30745:30760	746351	0	True				
ANR	746355	CallExpression	print_version ( )		746351	0					
ANR	746356	Callee	print_version		746351	0					
ANR	746357	Identifier	print_version		746351	0					
ANR	746358	ArgumentList			746351	1					
ANR	746359	ExpressionStatement	"cout << ""\\n"""	1095:4:30767:30779	746351	1	True				
ANR	746360	ShiftExpression	"cout << ""\\n"""		746351	0		<<			
ANR	746361	Identifier	cout		746351	0					
ANR	746362	PrimaryExpression	"""\\n"""		746351	1					
ANR	746363	ExpressionStatement	"cout << ""Commands:\\n"""	1096:4:30785:30806	746351	2	True				
ANR	746364	ShiftExpression	"cout << ""Commands:\\n"""		746351	0		<<			
ANR	746365	Identifier	cout		746351	0					
ANR	746366	PrimaryExpression	"""Commands:\\n"""		746351	1					
ANR	746367	ExpressionStatement	"cout << ""let name = expr   Set a variable to an unevaluated expression.\\n"""	1097:4:30812:30886	746351	3	True				
ANR	746368	ShiftExpression	"cout << ""let name = expr   Set a variable to an unevaluated expression.\\n"""		746351	0		<<			
ANR	746369	Identifier	cout		746351	0					
ANR	746370	PrimaryExpression	"""let name = expr   Set a variable to an unevaluated expression.\\n"""		746351	1					
ANR	746371	ExpressionStatement	"cout << ""eval name = expr  Set a variable to an evaluated expression.\\n"""	1098:4:30892:30964	746351	4	True				
ANR	746372	ShiftExpression	"cout << ""eval name = expr  Set a variable to an evaluated expression.\\n"""		746351	0		<<			
ANR	746373	Identifier	cout		746351	0					
ANR	746374	PrimaryExpression	"""eval name = expr  Set a variable to an evaluated expression.\\n"""		746351	1					
ANR	746375	ExpressionStatement	"cout << ""same expr1 expr2  Prints a message only if expr1 and expr2 are different.\\n"""	1099:4:30970:31055	746351	5	True				
ANR	746376	ShiftExpression	"cout << ""same expr1 expr2  Prints a message only if expr1 and expr2 are different.\\n"""		746351	0		<<			
ANR	746377	Identifier	cout		746351	0					
ANR	746378	PrimaryExpression	"""same expr1 expr2  Prints a message only if expr1 and expr2 are different.\\n"""		746351	1					
ANR	746379	ExpressionStatement	"cout << ""sameq expr1 expr2 Prints a message only if expr1 and expr2 are different.\\n"""	1100:4:31061:31146	746351	6	True				
ANR	746380	ShiftExpression	"cout << ""sameq expr1 expr2 Prints a message only if expr1 and expr2 are different.\\n"""		746351	0		<<			
ANR	746381	Identifier	cout		746351	0					
ANR	746382	PrimaryExpression	"""sameq expr1 expr2 Prints a message only if expr1 and expr2 are different.\\n"""		746351	1					
ANR	746383	ExpressionStatement	"cout << ""                   same evaluates its expressions first, sameq doesn't.\\n"""	1101:4:31152:31234	746351	7	True				
ANR	746384	ShiftExpression	"cout << ""                   same evaluates its expressions first, sameq doesn't.\\n"""		746351	0		<<			
ANR	746385	Identifier	cout		746351	0					
ANR	746386	PrimaryExpression	"""                   same evaluates its expressions first, sameq doesn't.\\n"""		746351	1					
ANR	746387	ExpressionStatement	"cout << ""diff expr1 expr2  Prints a message only if expr1 and expr2 are the same.\\n"""	1102:4:31240:31324	746351	8	True				
ANR	746388	ShiftExpression	"cout << ""diff expr1 expr2  Prints a message only if expr1 and expr2 are the same.\\n"""		746351	0		<<			
ANR	746389	Identifier	cout		746351	0					
ANR	746390	PrimaryExpression	"""diff expr1 expr2  Prints a message only if expr1 and expr2 are the same.\\n"""		746351	1					
ANR	746391	ExpressionStatement	"cout << ""diffq expr1 expr2 Prints a message only if expr1 and expr2 are the same.\\n"""	1103:4:31330:31414	746351	9	True				
ANR	746392	ShiftExpression	"cout << ""diffq expr1 expr2 Prints a message only if expr1 and expr2 are the same.\\n"""		746351	0		<<			
ANR	746393	Identifier	cout		746351	0					
ANR	746394	PrimaryExpression	"""diffq expr1 expr2 Prints a message only if expr1 and expr2 are the same.\\n"""		746351	1					
ANR	746395	ExpressionStatement	"cout << ""                   diff evaluates its expressions first, diffq doesn't.\\n"""	1104:4:31420:31502	746351	10	True				
ANR	746396	ShiftExpression	"cout << ""                   diff evaluates its expressions first, diffq doesn't.\\n"""		746351	0		<<			
ANR	746397	Identifier	cout		746351	0					
ANR	746398	PrimaryExpression	"""                   diff evaluates its expressions first, diffq doesn't.\\n"""		746351	1					
ANR	746399	ExpressionStatement	"cout << ""set opt value     Sets an option to a particular value.\\n"""	1105:4:31508:31575	746351	11	True				
ANR	746400	ShiftExpression	"cout << ""set opt value     Sets an option to a particular value.\\n"""		746351	0		<<			
ANR	746401	Identifier	cout		746351	0					
ANR	746402	PrimaryExpression	"""set opt value     Sets an option to a particular value.\\n"""		746351	1					
ANR	746403	ExpressionStatement	"cout << ""quit              Exit this program.\\n"""	1106:4:31581:31629	746351	12	True				
ANR	746404	ShiftExpression	"cout << ""quit              Exit this program.\\n"""		746351	0		<<			
ANR	746405	Identifier	cout		746351	0					
ANR	746406	PrimaryExpression	"""quit              Exit this program.\\n"""		746351	1					
ANR	746407	ExpressionStatement	"cout << ""help              Print this message.\\n"""	1107:4:31635:31684	746351	13	True				
ANR	746408	ShiftExpression	"cout << ""help              Print this message.\\n"""		746351	0		<<			
ANR	746409	Identifier	cout		746351	0					
ANR	746410	PrimaryExpression	"""help              Print this message.\\n"""		746351	1					
ANR	746411	ExpressionStatement	"cout << ""\\n"""	1108:4:31690:31702	746351	14	True				
ANR	746412	ShiftExpression	"cout << ""\\n"""		746351	0		<<			
ANR	746413	Identifier	cout		746351	0					
ANR	746414	PrimaryExpression	"""\\n"""		746351	1					
ANR	746415	ExpressionStatement	"cout << ""Options (for the set command):\\n"""	1109:4:31708:31750	746351	15	True				
ANR	746416	ShiftExpression	"cout << ""Options (for the set command):\\n"""		746351	0		<<			
ANR	746417	Identifier	cout		746351	0					
ANR	746418	PrimaryExpression	"""Options (for the set command):\\n"""		746351	1					
ANR	746419	ExpressionStatement	"cout << ""format              Set the way ClassAds print.\\n"""	1110:4:31756:31815	746351	16	True				
ANR	746420	ShiftExpression	"cout << ""format              Set the way ClassAds print.\\n"""		746351	0		<<			
ANR	746421	Identifier	cout		746351	0					
ANR	746422	PrimaryExpression	"""format              Set the way ClassAds print.\\n"""		746351	1					
ANR	746423	ExpressionStatement	"cout << ""  compact           A compact, traditional style\\n"""	1111:4:31821:31881	746351	17	True				
ANR	746424	ShiftExpression	"cout << ""  compact           A compact, traditional style\\n"""		746351	0		<<			
ANR	746425	Identifier	cout		746351	0					
ANR	746426	PrimaryExpression	"""  compact           A compact, traditional style\\n"""		746351	1					
ANR	746427	ExpressionStatement	"cout << ""  pretty            Traditional, with more spaces\\n"""	1112:4:31887:31948	746351	18	True				
ANR	746428	ShiftExpression	"cout << ""  pretty            Traditional, with more spaces\\n"""		746351	0		<<			
ANR	746429	Identifier	cout		746351	0					
ANR	746430	PrimaryExpression	"""  pretty            Traditional, with more spaces\\n"""		746351	1					
ANR	746431	ExpressionStatement	"cout << ""  xml               A compact XML representation\\n"""	1113:4:31954:32014	746351	19	True				
ANR	746432	ShiftExpression	"cout << ""  xml               A compact XML representation\\n"""		746351	0		<<			
ANR	746433	Identifier	cout		746351	0					
ANR	746434	PrimaryExpression	"""  xml               A compact XML representation\\n"""		746351	1					
ANR	746435	ExpressionStatement	"cout << ""  xmlpretty         XML with extra spacing for readability.\\n"""	1114:4:32020:32091	746351	20	True				
ANR	746436	ShiftExpression	"cout << ""  xmlpretty         XML with extra spacing for readability.\\n"""		746351	0		<<			
ANR	746437	Identifier	cout		746351	0					
ANR	746438	PrimaryExpression	"""  xmlpretty         XML with extra spacing for readability.\\n"""		746351	1					
ANR	746439	ReturnStatement	return ;	1115:4:32097:32103	746351	21	True				
ANR	746440	ReturnType	void		746351	1					
ANR	746441	Identifier	handle_help		746351	2					
ANR	746442	ParameterList			746351	3					
ANR	746443	CFGEntryNode	ENTRY		746351		True				
ANR	746444	CFGExitNode	EXIT		746351		True				
ANR	746445	Function	get_variable_name	1124:0:32302:34096							
ANR	746446	FunctionDef	"get_variable_name (string & line , bool swallow_equals , string & variable_name , State & state , Parameters & parameters)"		746445	0					
ANR	746447	CompoundStatement		1130:0:32464:34096	746445	0					
ANR	746448	IdentifierDeclStatement	int current_position ;	1131:4:32470:32495	746445	0	True				
ANR	746449	IdentifierDecl	current_position		746445	0					
ANR	746450	IdentifierDeclType	int		746445	0					
ANR	746451	Identifier	current_position		746445	1					
ANR	746452	IdentifierDeclStatement	int length ;	1132:4:32501:32516	746445	1	True				
ANR	746453	IdentifierDecl	length		746445	0					
ANR	746454	IdentifierDeclType	int		746445	0					
ANR	746455	Identifier	length		746445	1					
ANR	746456	IdentifierDeclStatement	bool have_good_name ;	1133:4:32522:32545	746445	2	True				
ANR	746457	IdentifierDecl	have_good_name		746445	0					
ANR	746458	IdentifierDeclType	bool		746445	0					
ANR	746459	Identifier	have_good_name		746445	1					
ANR	746460	ExpressionStatement	current_position = 0	1135:4:32552:32572	746445	3	True				
ANR	746461	AssignmentExpression	current_position = 0		746445	0		=			
ANR	746462	Identifier	current_position		746445	0					
ANR	746463	PrimaryExpression	0		746445	1					
ANR	746464	ExpressionStatement	length = line . size ( )	1136:4:32578:32608	746445	4	True				
ANR	746465	AssignmentExpression	length = line . size ( )		746445	0		=			
ANR	746466	Identifier	length		746445	0					
ANR	746467	CallExpression	line . size ( )		746445	1					
ANR	746468	Callee	line . size		746445	0					
ANR	746469	MemberAccess	line . size		746445	0					
ANR	746470	Identifier	line		746445	0					
ANR	746471	Identifier	size		746445	1					
ANR	746472	ArgumentList			746445	1					
ANR	746473	ExpressionStatement	"variable_name = """""	1137:4:32614:32635	746445	5	True				
ANR	746474	AssignmentExpression	"variable_name = """""		746445	0		=			
ANR	746475	Identifier	variable_name		746445	0					
ANR	746476	PrimaryExpression	""""""		746445	1					
ANR	746477	ExpressionStatement	have_good_name = false	1138:4:32641:32665	746445	6	True				
ANR	746478	AssignmentExpression	have_good_name = false		746445	0		=			
ANR	746479	Identifier	have_good_name		746445	0					
ANR	746480	Identifier	false		746445	1					
ANR	746481	WhileStatement	while ( current_position < length && isspace ( line [ current_position ] ) )		746445	7					
ANR	746482	Condition	current_position < length && isspace ( line [ current_position ] )	1141:11:32702:32761	746445	0	True				
ANR	746483	AndExpression	current_position < length && isspace ( line [ current_position ] )		746445	0		&&			
ANR	746484	RelationalExpression	current_position < length		746445	0		<			
ANR	746485	Identifier	current_position		746445	0					
ANR	746486	Identifier	length		746445	1					
ANR	746487	CallExpression	isspace ( line [ current_position ] )		746445	1					
ANR	746488	Callee	isspace		746445	0					
ANR	746489	Identifier	isspace		746445	0					
ANR	746490	ArgumentList	line [ current_position ]		746445	1					
ANR	746491	Argument	line [ current_position ]		746445	0					
ANR	746492	ArrayIndexing	line [ current_position ]		746445	0					
ANR	746493	Identifier	line		746445	0					
ANR	746494	Identifier	current_position		746445	1					
ANR	746495	CompoundStatement		12:73:299:299	746445	1					
ANR	746496	ExpressionStatement	current_position ++	1142:8:32774:32792	746445	0	True				
ANR	746497	PostIncDecOperationExpression	current_position ++		746445	0					
ANR	746498	Identifier	current_position		746445	0					
ANR	746499	IncDec	++		746445	1					
ANR	746500	IfStatement	if ( current_position < length && isalpha ( line [ current_position ] ) )		746445	8					
ANR	746501	Condition	current_position < length && isalpha ( line [ current_position ] )	1145:8:32834:32893	746445	0	True				
ANR	746502	AndExpression	current_position < length && isalpha ( line [ current_position ] )		746445	0		&&			
ANR	746503	RelationalExpression	current_position < length		746445	0		<			
ANR	746504	Identifier	current_position		746445	0					
ANR	746505	Identifier	length		746445	1					
ANR	746506	CallExpression	isalpha ( line [ current_position ] )		746445	1					
ANR	746507	Callee	isalpha		746445	0					
ANR	746508	Identifier	isalpha		746445	0					
ANR	746509	ArgumentList	line [ current_position ]		746445	1					
ANR	746510	Argument	line [ current_position ]		746445	0					
ANR	746511	ArrayIndexing	line [ current_position ]		746445	0					
ANR	746512	Identifier	line		746445	0					
ANR	746513	Identifier	current_position		746445	1					
ANR	746514	CompoundStatement		16:70:431:431	746445	1					
ANR	746515	ExpressionStatement	variable_name += line [ current_position ]	1146:8:32906:32945	746445	0	True				
ANR	746516	AssignmentExpression	variable_name += line [ current_position ]		746445	0		+=			
ANR	746517	Identifier	variable_name		746445	0					
ANR	746518	ArrayIndexing	line [ current_position ]		746445	1					
ANR	746519	Identifier	line		746445	0					
ANR	746520	Identifier	current_position		746445	1					
ANR	746521	ExpressionStatement	current_position ++	1147:8:32955:32973	746445	1	True				
ANR	746522	PostIncDecOperationExpression	current_position ++		746445	0					
ANR	746523	Identifier	current_position		746445	0					
ANR	746524	IncDec	++		746445	1					
ANR	746525	ExpressionStatement	have_good_name = true	1149:8:33060:33081	746445	2	True				
ANR	746526	AssignmentExpression	have_good_name = true		746445	0		=			
ANR	746527	Identifier	have_good_name		746445	0					
ANR	746528	Identifier	true		746445	1					
ANR	746529	WhileStatement	while ( current_position < length && ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' ) )		746445	3					
ANR	746530	Condition	current_position < length && ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' )	1151:18:33102:33215	746445	0	True				
ANR	746531	AndExpression	current_position < length && ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' )		746445	0		&&			
ANR	746532	RelationalExpression	current_position < length		746445	0		<			
ANR	746533	Identifier	current_position		746445	0					
ANR	746534	Identifier	length		746445	1					
ANR	746535	OrExpression	isalnum ( line [ current_position ] ) || line [ current_position ] == '_'		746445	1		||			
ANR	746536	CallExpression	isalnum ( line [ current_position ] )		746445	0					
ANR	746537	Callee	isalnum		746445	0					
ANR	746538	Identifier	isalnum		746445	0					
ANR	746539	ArgumentList	line [ current_position ]		746445	1					
ANR	746540	Argument	line [ current_position ]		746445	0					
ANR	746541	ArrayIndexing	line [ current_position ]		746445	0					
ANR	746542	Identifier	line		746445	0					
ANR	746543	Identifier	current_position		746445	1					
ANR	746544	EqualityExpression	line [ current_position ] == '_'		746445	1		==			
ANR	746545	ArrayIndexing	line [ current_position ]		746445	0					
ANR	746546	Identifier	line		746445	0					
ANR	746547	Identifier	current_position		746445	1					
ANR	746548	PrimaryExpression	'_'		746445	1					
ANR	746549	CompoundStatement		23:89:753:753	746445	1					
ANR	746550	ExpressionStatement	variable_name += line [ current_position ]	1153:12:33232:33271	746445	0	True				
ANR	746551	AssignmentExpression	variable_name += line [ current_position ]		746445	0		+=			
ANR	746552	Identifier	variable_name		746445	0					
ANR	746553	ArrayIndexing	line [ current_position ]		746445	1					
ANR	746554	Identifier	line		746445	0					
ANR	746555	Identifier	current_position		746445	1					
ANR	746556	ExpressionStatement	current_position ++	1154:12:33285:33303	746445	1	True				
ANR	746557	PostIncDecOperationExpression	current_position ++		746445	0					
ANR	746558	Identifier	current_position		746445	0					
ANR	746559	IncDec	++		746445	1					
ANR	746560	IfStatement	if ( ! have_good_name )		746445	9					
ANR	746561	Condition	! have_good_name	1157:8:33329:33343	746445	0	True				
ANR	746562	UnaryOperationExpression	! have_good_name		746445	0					
ANR	746563	UnaryOperator	!		746445	0					
ANR	746564	Identifier	have_good_name		746445	1					
ANR	746565	CompoundStatement		28:25:881:881	746445	1					
ANR	746566	ExpressionStatement	"print_error_message ( ""Bad variable name"" , state )"	1158:8:33356:33403	746445	0	True				
ANR	746567	CallExpression	"print_error_message ( ""Bad variable name"" , state )"		746445	0					
ANR	746568	Callee	print_error_message		746445	0					
ANR	746569	Identifier	print_error_message		746445	0					
ANR	746570	ArgumentList	"""Bad variable name"""		746445	1					
ANR	746571	Argument	"""Bad variable name"""		746445	0					
ANR	746572	PrimaryExpression	"""Bad variable name"""		746445	0					
ANR	746573	Argument	state		746445	1					
ANR	746574	Identifier	state		746445	0					
ANR	746575	ElseStatement	else		746445	0					
ANR	746576	IfStatement	if ( swallow_equals )		746445	0					
ANR	746577	Condition	swallow_equals	1159:15:33420:33433	746445	0	True				
ANR	746578	Identifier	swallow_equals		746445	0					
ANR	746579	CompoundStatement		30:31:971:971	746445	1					
ANR	746580	WhileStatement	while ( current_position < length && isspace ( line [ current_position ] ) )		746445	0					
ANR	746581	Condition	current_position < length && isspace ( line [ current_position ] )	1161:15:33480:33539	746445	0	True				
ANR	746582	AndExpression	current_position < length && isspace ( line [ current_position ] )		746445	0		&&			
ANR	746583	RelationalExpression	current_position < length		746445	0		<			
ANR	746584	Identifier	current_position		746445	0					
ANR	746585	Identifier	length		746445	1					
ANR	746586	CallExpression	isspace ( line [ current_position ] )		746445	1					
ANR	746587	Callee	isspace		746445	0					
ANR	746588	Identifier	isspace		746445	0					
ANR	746589	ArgumentList	line [ current_position ]		746445	1					
ANR	746590	Argument	line [ current_position ]		746445	0					
ANR	746591	ArrayIndexing	line [ current_position ]		746445	0					
ANR	746592	Identifier	line		746445	0					
ANR	746593	Identifier	current_position		746445	1					
ANR	746594	CompoundStatement		32:77:1077:1077	746445	1					
ANR	746595	ExpressionStatement	current_position ++	1162:12:33556:33574	746445	0	True				
ANR	746596	PostIncDecOperationExpression	current_position ++		746445	0					
ANR	746597	Identifier	current_position		746445	0					
ANR	746598	IncDec	++		746445	1					
ANR	746599	IfStatement	if ( line [ current_position ] == '=' )		746445	1					
ANR	746600	Condition	line [ current_position ] == '='	1164:12:33598:33626	746445	0	True				
ANR	746601	EqualityExpression	line [ current_position ] == '='		746445	0		==			
ANR	746602	ArrayIndexing	line [ current_position ]		746445	0					
ANR	746603	Identifier	line		746445	0					
ANR	746604	Identifier	current_position		746445	1					
ANR	746605	PrimaryExpression	'='		746445	1					
ANR	746606	CompoundStatement		35:43:1164:1164	746445	1					
ANR	746607	ExpressionStatement	current_position ++	1165:12:33643:33661	746445	0	True				
ANR	746608	PostIncDecOperationExpression	current_position ++		746445	0					
ANR	746609	Identifier	current_position		746445	0					
ANR	746610	IncDec	++		746445	1					
ANR	746611	ElseStatement	else		746445	0					
ANR	746612	CompoundStatement		37:15:1213:1213	746445	0					
ANR	746613	ExpressionStatement	"print_error_message ( ""Missing equal sign"" , state )"	1167:12:33692:33740	746445	0	True				
ANR	746614	CallExpression	"print_error_message ( ""Missing equal sign"" , state )"		746445	0					
ANR	746615	Callee	print_error_message		746445	0					
ANR	746616	Identifier	print_error_message		746445	0					
ANR	746617	ArgumentList	"""Missing equal sign"""		746445	1					
ANR	746618	Argument	"""Missing equal sign"""		746445	0					
ANR	746619	PrimaryExpression	"""Missing equal sign"""		746445	0					
ANR	746620	Argument	state		746445	1					
ANR	746621	Identifier	state		746445	0					
ANR	746622	ExpressionStatement	have_good_name = false	1168:12:33754:33776	746445	1	True				
ANR	746623	AssignmentExpression	have_good_name = false		746445	0		=			
ANR	746624	Identifier	have_good_name		746445	0					
ANR	746625	Identifier	false		746445	1					
ANR	746626	IfStatement	if ( parameters . debug )		746445	10					
ANR	746627	Condition	parameters . debug	1172:8:33803:33818	746445	0	True				
ANR	746628	MemberAccess	parameters . debug		746445	0					
ANR	746629	Identifier	parameters		746445	0					
ANR	746630	Identifier	debug		746445	1					
ANR	746631	CompoundStatement		43:26:1356:1356	746445	1					
ANR	746632	IfStatement	if ( have_good_name )		746445	0					
ANR	746633	Condition	have_good_name	1173:12:33835:33848	746445	0	True				
ANR	746634	Identifier	have_good_name		746445	0					
ANR	746635	CompoundStatement		44:28:1386:1386	746445	1					
ANR	746636	ExpressionStatement	"cout << ""# Got variable name: "" << variable_name << endl"	1174:12:33865:33921	746445	0	True				
ANR	746637	ShiftExpression	"cout << ""# Got variable name: "" << variable_name << endl"		746445	0		<<			
ANR	746638	Identifier	cout		746445	0					
ANR	746639	ShiftExpression	"""# Got variable name: "" << variable_name << endl"		746445	1		<<			
ANR	746640	PrimaryExpression	"""# Got variable name: """		746445	0					
ANR	746641	ShiftExpression	variable_name << endl		746445	1		<<			
ANR	746642	Identifier	variable_name		746445	0					
ANR	746643	Identifier	endl		746445	1					
ANR	746644	ElseStatement	else		746445	0					
ANR	746645	CompoundStatement		46:15:1473:1473	746445	0					
ANR	746646	ExpressionStatement	"cout << ""# Bad variable name: "" << variable_name << endl"	1176:12:33952:34008	746445	0	True				
ANR	746647	ShiftExpression	"cout << ""# Bad variable name: "" << variable_name << endl"		746445	0		<<			
ANR	746648	Identifier	cout		746445	0					
ANR	746649	ShiftExpression	"""# Bad variable name: "" << variable_name << endl"		746445	1		<<			
ANR	746650	PrimaryExpression	"""# Bad variable name: """		746445	0					
ANR	746651	ShiftExpression	variable_name << endl		746445	1		<<			
ANR	746652	Identifier	variable_name		746445	0					
ANR	746653	Identifier	endl		746445	1					
ANR	746654	ExpressionStatement	"shorten_line ( line , current_position )"	1180:4:34031:34067	746445	11	True				
ANR	746655	CallExpression	"shorten_line ( line , current_position )"		746445	0					
ANR	746656	Callee	shorten_line		746445	0					
ANR	746657	Identifier	shorten_line		746445	0					
ANR	746658	ArgumentList	line		746445	1					
ANR	746659	Argument	line		746445	0					
ANR	746660	Identifier	line		746445	0					
ANR	746661	Argument	current_position		746445	1					
ANR	746662	Identifier	current_position		746445	0					
ANR	746663	ReturnStatement	return have_good_name ;	1181:4:34073:34094	746445	12	True				
ANR	746664	Identifier	have_good_name		746445	0					
ANR	746665	ReturnType	bool		746445	1					
ANR	746666	Identifier	get_variable_name		746445	2					
ANR	746667	ParameterList	"string & line , bool swallow_equals , string & variable_name , State & state , Parameters & parameters"		746445	3					
ANR	746668	Parameter	string & line	1125:4:32330:32345	746445	0	True				
ANR	746669	ParameterType	string &		746445	0					
ANR	746670	Identifier	line		746445	1					
ANR	746671	Parameter	bool swallow_equals	1126:4:32353:32377	746445	1	True				
ANR	746672	ParameterType	bool		746445	0					
ANR	746673	Identifier	swallow_equals		746445	1					
ANR	746674	Parameter	string & variable_name	1127:4:32385:32409	746445	2	True				
ANR	746675	ParameterType	string &		746445	0					
ANR	746676	Identifier	variable_name		746445	1					
ANR	746677	Parameter	State & state	1128:4:32417:32433	746445	3	True				
ANR	746678	ParameterType	State &		746445	0					
ANR	746679	Identifier	state		746445	1					
ANR	746680	Parameter	Parameters & parameters	1129:4:32440:32461	746445	4	True				
ANR	746681	ParameterType	Parameters &		746445	0					
ANR	746682	Identifier	parameters		746445	1					
ANR	746683	CFGEntryNode	ENTRY		746445		True				
ANR	746684	CFGExitNode	EXIT		746445		True				
ANR	746685	Symbol	isalpha		746445						
ANR	746686	Symbol	isalnum		746445						
ANR	746687	Symbol	line		746445						
ANR	746688	Symbol	line . size		746445						
ANR	746689	Symbol	current_position		746445						
ANR	746690	Symbol	length		746445						
ANR	746691	Symbol	false		746445						
ANR	746692	Symbol	isspace		746445						
ANR	746693	Symbol	* line		746445						
ANR	746694	Symbol	parameters . debug		746445						
ANR	746695	Symbol	* current_position		746445						
ANR	746696	Symbol	have_good_name		746445						
ANR	746697	Symbol	true		746445						
ANR	746698	Symbol	swallow_equals		746445						
ANR	746699	Symbol	variable_name		746445						
ANR	746700	Symbol	state		746445						
ANR	746701	Symbol	parameters		746445						
ANR	746702	Function	get_file_name	1190:0:34289:35364							
ANR	746703	FunctionDef	"get_file_name (string & line , string & variable_name , State & state , Parameters & parameters)"		746702	0					
ANR	746704	CompoundStatement		1195:0:34415:35364	746702	0					
ANR	746705	IdentifierDeclStatement	int current_position ;	1196:4:34421:34446	746702	0	True				
ANR	746706	IdentifierDecl	current_position		746702	0					
ANR	746707	IdentifierDeclType	int		746702	0					
ANR	746708	Identifier	current_position		746702	1					
ANR	746709	IdentifierDeclStatement	int length ;	1197:4:34452:34467	746702	1	True				
ANR	746710	IdentifierDecl	length		746702	0					
ANR	746711	IdentifierDeclType	int		746702	0					
ANR	746712	Identifier	length		746702	1					
ANR	746713	IdentifierDeclStatement	bool have_good_name ;	1198:4:34473:34496	746702	2	True				
ANR	746714	IdentifierDecl	have_good_name		746702	0					
ANR	746715	IdentifierDeclType	bool		746702	0					
ANR	746716	Identifier	have_good_name		746702	1					
ANR	746717	ExpressionStatement	current_position = 0	1200:4:34503:34523	746702	3	True				
ANR	746718	AssignmentExpression	current_position = 0		746702	0		=			
ANR	746719	Identifier	current_position		746702	0					
ANR	746720	PrimaryExpression	0		746702	1					
ANR	746721	ExpressionStatement	length = line . size ( )	1201:4:34529:34559	746702	4	True				
ANR	746722	AssignmentExpression	length = line . size ( )		746702	0		=			
ANR	746723	Identifier	length		746702	0					
ANR	746724	CallExpression	line . size ( )		746702	1					
ANR	746725	Callee	line . size		746702	0					
ANR	746726	MemberAccess	line . size		746702	0					
ANR	746727	Identifier	line		746702	0					
ANR	746728	Identifier	size		746702	1					
ANR	746729	ArgumentList			746702	1					
ANR	746730	ExpressionStatement	"variable_name = """""	1202:4:34565:34586	746702	5	True				
ANR	746731	AssignmentExpression	"variable_name = """""		746702	0		=			
ANR	746732	Identifier	variable_name		746702	0					
ANR	746733	PrimaryExpression	""""""		746702	1					
ANR	746734	ExpressionStatement	have_good_name = false	1203:4:34592:34616	746702	6	True				
ANR	746735	AssignmentExpression	have_good_name = false		746702	0		=			
ANR	746736	Identifier	have_good_name		746702	0					
ANR	746737	Identifier	false		746702	1					
ANR	746738	WhileStatement	while ( current_position < length && isspace ( line [ current_position ] ) )		746702	7					
ANR	746739	Condition	current_position < length && isspace ( line [ current_position ] )	1206:11:34653:34712	746702	0	True				
ANR	746740	AndExpression	current_position < length && isspace ( line [ current_position ] )		746702	0		&&			
ANR	746741	RelationalExpression	current_position < length		746702	0		<			
ANR	746742	Identifier	current_position		746702	0					
ANR	746743	Identifier	length		746702	1					
ANR	746744	CallExpression	isspace ( line [ current_position ] )		746702	1					
ANR	746745	Callee	isspace		746702	0					
ANR	746746	Identifier	isspace		746702	0					
ANR	746747	ArgumentList	line [ current_position ]		746702	1					
ANR	746748	Argument	line [ current_position ]		746702	0					
ANR	746749	ArrayIndexing	line [ current_position ]		746702	0					
ANR	746750	Identifier	line		746702	0					
ANR	746751	Identifier	current_position		746702	1					
ANR	746752	CompoundStatement		12:73:299:299	746702	1					
ANR	746753	ExpressionStatement	current_position ++	1207:8:34725:34743	746702	0	True				
ANR	746754	PostIncDecOperationExpression	current_position ++		746702	0					
ANR	746755	Identifier	current_position		746702	0					
ANR	746756	IncDec	++		746702	1					
ANR	746757	WhileStatement	while ( current_position < length && ( ! isspace ( line [ current_position ] ) ) )		746702	8					
ANR	746758	Condition	current_position < length && ( ! isspace ( line [ current_position ] ) )	1210:14:34787:34864	746702	0	True				
ANR	746759	AndExpression	current_position < length && ( ! isspace ( line [ current_position ] ) )		746702	0		&&			
ANR	746760	RelationalExpression	current_position < length		746702	0		<			
ANR	746761	Identifier	current_position		746702	0					
ANR	746762	Identifier	length		746702	1					
ANR	746763	UnaryOperationExpression	! isspace ( line [ current_position ] )		746702	1					
ANR	746764	UnaryOperator	!		746702	0					
ANR	746765	CallExpression	isspace ( line [ current_position ] )		746702	1					
ANR	746766	Callee	isspace		746702	0					
ANR	746767	Identifier	isspace		746702	0					
ANR	746768	ArgumentList	line [ current_position ]		746702	1					
ANR	746769	Argument	line [ current_position ]		746702	0					
ANR	746770	ArrayIndexing	line [ current_position ]		746702	0					
ANR	746771	Identifier	line		746702	0					
ANR	746772	Identifier	current_position		746702	1					
ANR	746773	CompoundStatement		17:53:451:451	746702	1					
ANR	746774	ExpressionStatement	have_good_name = true	1212:8:34877:34898	746702	0	True				
ANR	746775	AssignmentExpression	have_good_name = true		746702	0		=			
ANR	746776	Identifier	have_good_name		746702	0					
ANR	746777	Identifier	true		746702	1					
ANR	746778	ExpressionStatement	variable_name += line [ current_position ]	1213:8:34908:34947	746702	1	True				
ANR	746779	AssignmentExpression	variable_name += line [ current_position ]		746702	0		+=			
ANR	746780	Identifier	variable_name		746702	0					
ANR	746781	ArrayIndexing	line [ current_position ]		746702	1					
ANR	746782	Identifier	line		746702	0					
ANR	746783	Identifier	current_position		746702	1					
ANR	746784	ExpressionStatement	current_position ++	1214:8:34957:34975	746702	2	True				
ANR	746785	PostIncDecOperationExpression	current_position ++		746702	0					
ANR	746786	Identifier	current_position		746702	0					
ANR	746787	IncDec	++		746702	1					
ANR	746788	IfStatement	if ( ! have_good_name )		746702	9					
ANR	746789	Condition	! have_good_name	1216:8:34991:35005	746702	0	True				
ANR	746790	UnaryOperationExpression	! have_good_name		746702	0					
ANR	746791	UnaryOperator	!		746702	0					
ANR	746792	Identifier	have_good_name		746702	1					
ANR	746793	CompoundStatement		22:25:592:592	746702	1					
ANR	746794	ExpressionStatement	"print_error_message ( ""Bad file name"" , state )"	1217:8:35018:35061	746702	0	True				
ANR	746795	CallExpression	"print_error_message ( ""Bad file name"" , state )"		746702	0					
ANR	746796	Callee	print_error_message		746702	0					
ANR	746797	Identifier	print_error_message		746702	0					
ANR	746798	ArgumentList	"""Bad file name"""		746702	1					
ANR	746799	Argument	"""Bad file name"""		746702	0					
ANR	746800	PrimaryExpression	"""Bad file name"""		746702	0					
ANR	746801	Argument	state		746702	1					
ANR	746802	Identifier	state		746702	0					
ANR	746803	IfStatement	if ( parameters . debug )		746702	10					
ANR	746804	Condition	parameters . debug	1220:8:35079:35094	746702	0	True				
ANR	746805	MemberAccess	parameters . debug		746702	0					
ANR	746806	Identifier	parameters		746702	0					
ANR	746807	Identifier	debug		746702	1					
ANR	746808	CompoundStatement		26:26:681:681	746702	1					
ANR	746809	IfStatement	if ( have_good_name )		746702	0					
ANR	746810	Condition	have_good_name	1221:12:35111:35124	746702	0	True				
ANR	746811	Identifier	have_good_name		746702	0					
ANR	746812	CompoundStatement		27:28:711:711	746702	1					
ANR	746813	ExpressionStatement	"cout << ""# Got file name: "" << variable_name << endl"	1222:12:35141:35193	746702	0	True				
ANR	746814	ShiftExpression	"cout << ""# Got file name: "" << variable_name << endl"		746702	0		<<			
ANR	746815	Identifier	cout		746702	0					
ANR	746816	ShiftExpression	"""# Got file name: "" << variable_name << endl"		746702	1		<<			
ANR	746817	PrimaryExpression	"""# Got file name: """		746702	0					
ANR	746818	ShiftExpression	variable_name << endl		746702	1		<<			
ANR	746819	Identifier	variable_name		746702	0					
ANR	746820	Identifier	endl		746702	1					
ANR	746821	ElseStatement	else		746702	0					
ANR	746822	CompoundStatement		29:15:794:794	746702	0					
ANR	746823	ExpressionStatement	"cout << ""# Bad file name: "" << variable_name << endl"	1224:12:35224:35276	746702	0	True				
ANR	746824	ShiftExpression	"cout << ""# Bad file name: "" << variable_name << endl"		746702	0		<<			
ANR	746825	Identifier	cout		746702	0					
ANR	746826	ShiftExpression	"""# Bad file name: "" << variable_name << endl"		746702	1		<<			
ANR	746827	PrimaryExpression	"""# Bad file name: """		746702	0					
ANR	746828	ShiftExpression	variable_name << endl		746702	1		<<			
ANR	746829	Identifier	variable_name		746702	0					
ANR	746830	Identifier	endl		746702	1					
ANR	746831	ExpressionStatement	"shorten_line ( line , current_position )"	1228:4:35299:35335	746702	11	True				
ANR	746832	CallExpression	"shorten_line ( line , current_position )"		746702	0					
ANR	746833	Callee	shorten_line		746702	0					
ANR	746834	Identifier	shorten_line		746702	0					
ANR	746835	ArgumentList	line		746702	1					
ANR	746836	Argument	line		746702	0					
ANR	746837	Identifier	line		746702	0					
ANR	746838	Argument	current_position		746702	1					
ANR	746839	Identifier	current_position		746702	0					
ANR	746840	ReturnStatement	return have_good_name ;	1229:4:35341:35362	746702	12	True				
ANR	746841	Identifier	have_good_name		746702	0					
ANR	746842	ReturnType	bool		746702	1					
ANR	746843	Identifier	get_file_name		746702	2					
ANR	746844	ParameterList	"string & line , string & variable_name , State & state , Parameters & parameters"		746702	3					
ANR	746845	Parameter	string & line	1191:4:34313:34328	746702	0	True				
ANR	746846	ParameterType	string &		746702	0					
ANR	746847	Identifier	line		746702	1					
ANR	746848	Parameter	string & variable_name	1192:4:34336:34360	746702	1	True				
ANR	746849	ParameterType	string &		746702	0					
ANR	746850	Identifier	variable_name		746702	1					
ANR	746851	Parameter	State & state	1193:4:34368:34384	746702	2	True				
ANR	746852	ParameterType	State &		746702	0					
ANR	746853	Identifier	state		746702	1					
ANR	746854	Parameter	Parameters & parameters	1194:4:34391:34412	746702	3	True				
ANR	746855	ParameterType	Parameters &		746702	0					
ANR	746856	Identifier	parameters		746702	1					
ANR	746857	CFGEntryNode	ENTRY		746702		True				
ANR	746858	CFGExitNode	EXIT		746702		True				
ANR	746859	Symbol	line		746702						
ANR	746860	Symbol	line . size		746702						
ANR	746861	Symbol	current_position		746702						
ANR	746862	Symbol	length		746702						
ANR	746863	Symbol	false		746702						
ANR	746864	Symbol	isspace		746702						
ANR	746865	Symbol	* line		746702						
ANR	746866	Symbol	parameters . debug		746702						
ANR	746867	Symbol	* current_position		746702						
ANR	746868	Symbol	have_good_name		746702						
ANR	746869	Symbol	true		746702						
ANR	746870	Symbol	variable_name		746702						
ANR	746871	Symbol	state		746702						
ANR	746872	Symbol	parameters		746702						
ANR	746873	DeclStmt									
ANR	746874	Decl							int	int	offset
ANR	746875	DeclStmt									
ANR	746876	Decl							ExprTree	ExprTree *	tree
ANR	746877	DeclStmt									
ANR	746878	Decl							ClassAdParser	ClassAdParser	parser
ANR	746879	DeclStmt									
ANR	746880	Decl							StringLexerSource	StringLexerSource	lexer_source
ANR	746881	Function	get_two_exprs	1265:0:36209:37655							
ANR	746882	FunctionDef	"get_two_exprs (string & line , ExprTree * & tree1 , ExprTree * & tree2 , State & state , Parameters & parameters)"		746881	0					
ANR	746883	CompoundStatement		1271:0:36354:37655	746881	0					
ANR	746884	IdentifierDeclStatement	int offset ;	1272:4:36360:36370	746881	0	True				
ANR	746885	IdentifierDecl	offset		746881	0					
ANR	746886	IdentifierDeclType	int		746881	0					
ANR	746887	Identifier	offset		746881	1					
ANR	746888	IdentifierDeclStatement	ClassAdParser parser ;	1273:4:36376:36396	746881	1	True				
ANR	746889	IdentifierDecl	parser		746881	0					
ANR	746890	IdentifierDeclType	ClassAdParser		746881	0					
ANR	746891	Identifier	parser		746881	1					
ANR	746892	IdentifierDeclStatement	StringLexerSource lexer_source ( & line ) ;	1274:4:36402:36439	746881	2	True				
ANR	746893	IdentifierDecl	lexer_source ( & line )		746881	0					
ANR	746894	IdentifierDeclType	StringLexerSource		746881	0					
ANR	746895	Identifier	lexer_source		746881	1					
ANR	746896	UnaryOperationExpression	& line		746881	2					
ANR	746897	UnaryOperator	&		746881	0					
ANR	746898	Identifier	line		746881	1					
ANR	746899	ExpressionStatement	"tree1 = parser . ParseExpression ( & lexer_source , false )"	1276:4:36446:36498	746881	3	True				
ANR	746900	AssignmentExpression	"tree1 = parser . ParseExpression ( & lexer_source , false )"		746881	0		=			
ANR	746901	Identifier	tree1		746881	0					
ANR	746902	CallExpression	"parser . ParseExpression ( & lexer_source , false )"		746881	1					
ANR	746903	Callee	parser . ParseExpression		746881	0					
ANR	746904	MemberAccess	parser . ParseExpression		746881	0					
ANR	746905	Identifier	parser		746881	0					
ANR	746906	Identifier	ParseExpression		746881	1					
ANR	746907	ArgumentList	& lexer_source		746881	1					
ANR	746908	Argument	& lexer_source		746881	0					
ANR	746909	UnaryOperationExpression	& lexer_source		746881	0					
ANR	746910	UnaryOperator	&		746881	0					
ANR	746911	Identifier	lexer_source		746881	1					
ANR	746912	Argument	false		746881	1					
ANR	746913	Identifier	false		746881	0					
ANR	746914	IfStatement	if ( tree1 == NULL )		746881	4					
ANR	746915	Condition	tree1 == NULL	1277:8:36508:36520	746881	0	True				
ANR	746916	EqualityExpression	tree1 == NULL		746881	0		==			
ANR	746917	Identifier	tree1		746881	0					
ANR	746918	Identifier	NULL		746881	1					
ANR	746919	CompoundStatement		7:23:168:168	746881	1					
ANR	746920	ExpressionStatement	"print_error_message ( ""Couldn't parse first expression."" , state )"	1278:8:36533:36595	746881	0	True				
ANR	746921	CallExpression	"print_error_message ( ""Couldn't parse first expression."" , state )"		746881	0					
ANR	746922	Callee	print_error_message		746881	0					
ANR	746923	Identifier	print_error_message		746881	0					
ANR	746924	ArgumentList	"""Couldn't parse first expression."""		746881	1					
ANR	746925	Argument	"""Couldn't parse first expression."""		746881	0					
ANR	746926	PrimaryExpression	"""Couldn't parse first expression."""		746881	0					
ANR	746927	Argument	state		746881	1					
ANR	746928	Identifier	state		746881	0					
ANR	746929	ExpressionStatement	tree2 = NULL	1279:8:36605:36617	746881	1	True				
ANR	746930	AssignmentExpression	tree2 = NULL		746881	0		=			
ANR	746931	Identifier	tree2		746881	0					
ANR	746932	Identifier	NULL		746881	1					
ANR	746933	ElseStatement	else		746881	0					
ANR	746934	CompoundStatement		10:11:275:275	746881	0					
ANR	746935	IfStatement	if ( parameters . debug )		746881	0					
ANR	746936	Condition	parameters . debug	1281:12:36644:36659	746881	0	True				
ANR	746937	MemberAccess	parameters . debug		746881	0					
ANR	746938	Identifier	parameters		746881	0					
ANR	746939	Identifier	debug		746881	1					
ANR	746940	CompoundStatement		11:30:307:307	746881	1					
ANR	746941	ExpressionStatement	"cout << ""# Tree1: """	1282:12:36676:36695	746881	0	True				
ANR	746942	ShiftExpression	"cout << ""# Tree1: """		746881	0		<<			
ANR	746943	Identifier	cout		746881	0					
ANR	746944	PrimaryExpression	"""# Tree1: """		746881	1					
ANR	746945	ExpressionStatement	"print_expr ( tree1 , state , parameters )"	1283:12:36710:36746	746881	1	True				
ANR	746946	CallExpression	"print_expr ( tree1 , state , parameters )"		746881	0					
ANR	746947	Callee	print_expr		746881	0					
ANR	746948	Identifier	print_expr		746881	0					
ANR	746949	ArgumentList	tree1		746881	1					
ANR	746950	Argument	tree1		746881	0					
ANR	746951	Identifier	tree1		746881	0					
ANR	746952	Argument	state		746881	1					
ANR	746953	Identifier	state		746881	0					
ANR	746954	Argument	parameters		746881	2					
ANR	746955	Identifier	parameters		746881	0					
ANR	746956	ExpressionStatement	cout << endl	1284:12:36761:36773	746881	2	True				
ANR	746957	ShiftExpression	cout << endl		746881	0		<<			
ANR	746958	Identifier	cout		746881	0					
ANR	746959	Identifier	endl		746881	1					
ANR	746960	IfStatement	if ( parser . PeekToken ( ) != Lexer :: LEX_COMMA )		746881	1					
ANR	746961	Condition	parser . PeekToken ( ) != Lexer :: LEX_COMMA	1287:12:36802:36839	746881	0	True				
ANR	746962	EqualityExpression	parser . PeekToken ( ) != Lexer :: LEX_COMMA		746881	0		!=			
ANR	746963	CallExpression	parser . PeekToken ( )		746881	0					
ANR	746964	Callee	parser . PeekToken		746881	0					
ANR	746965	MemberAccess	parser . PeekToken		746881	0					
ANR	746966	Identifier	parser		746881	0					
ANR	746967	Identifier	PeekToken		746881	1					
ANR	746968	ArgumentList			746881	1					
ANR	746969	Identifier	Lexer :: LEX_COMMA		746881	1					
ANR	746970	CompoundStatement		17:52:487:487	746881	1					
ANR	746971	ExpressionStatement	"print_error_message ( ""Missing comma.\\n"" , state )"	1288:12:36856:36902	746881	0	True				
ANR	746972	CallExpression	"print_error_message ( ""Missing comma.\\n"" , state )"		746881	0					
ANR	746973	Callee	print_error_message		746881	0					
ANR	746974	Identifier	print_error_message		746881	0					
ANR	746975	ArgumentList	"""Missing comma.\\n"""		746881	1					
ANR	746976	Argument	"""Missing comma.\\n"""		746881	0					
ANR	746977	PrimaryExpression	"""Missing comma.\\n"""		746881	0					
ANR	746978	Argument	state		746881	1					
ANR	746979	Identifier	state		746881	0					
ANR	746980	Statement	delete	1289:12:36916:36921	746881	1	True				
ANR	746981	ExpressionStatement	tree1	1289:19:36923:36928	746881	2	True				
ANR	746982	Identifier	tree1		746881	0					
ANR	746983	ExpressionStatement	tree1 = NULL	1290:12:36942:36954	746881	3	True				
ANR	746984	AssignmentExpression	tree1 = NULL		746881	0		=			
ANR	746985	Identifier	tree1		746881	0					
ANR	746986	Identifier	NULL		746881	1					
ANR	746987	ExpressionStatement	tree2 = NULL	1291:12:36968:36980	746881	4	True				
ANR	746988	AssignmentExpression	tree2 = NULL		746881	0		=			
ANR	746989	Identifier	tree2		746881	0					
ANR	746990	Identifier	NULL		746881	1					
ANR	746991	ElseStatement	else		746881	0					
ANR	746992	CompoundStatement		22:15:642:642	746881	0					
ANR	746993	ExpressionStatement	parser . ConsumeToken ( )	1293:12:37011:37032	746881	0	True				
ANR	746994	CallExpression	parser . ConsumeToken ( )		746881	0					
ANR	746995	Callee	parser . ConsumeToken		746881	0					
ANR	746996	MemberAccess	parser . ConsumeToken		746881	0					
ANR	746997	Identifier	parser		746881	0					
ANR	746998	Identifier	ConsumeToken		746881	1					
ANR	746999	ArgumentList			746881	1					
ANR	747000	ExpressionStatement	tree2 = parser . ParseNextExpression ( )	1294:12:37046:37082	746881	1	True				
ANR	747001	AssignmentExpression	tree2 = parser . ParseNextExpression ( )		746881	0		=			
ANR	747002	Identifier	tree2		746881	0					
ANR	747003	CallExpression	parser . ParseNextExpression ( )		746881	1					
ANR	747004	Callee	parser . ParseNextExpression		746881	0					
ANR	747005	MemberAccess	parser . ParseNextExpression		746881	0					
ANR	747006	Identifier	parser		746881	0					
ANR	747007	Identifier	ParseNextExpression		746881	1					
ANR	747008	ArgumentList			746881	1					
ANR	747009	ExpressionStatement	offset = lexer_source . GetCurrentLocation ( )	1295:12:37096:37138	746881	2	True				
ANR	747010	AssignmentExpression	offset = lexer_source . GetCurrentLocation ( )		746881	0		=			
ANR	747011	Identifier	offset		746881	0					
ANR	747012	CallExpression	lexer_source . GetCurrentLocation ( )		746881	1					
ANR	747013	Callee	lexer_source . GetCurrentLocation		746881	0					
ANR	747014	MemberAccess	lexer_source . GetCurrentLocation		746881	0					
ANR	747015	Identifier	lexer_source		746881	0					
ANR	747016	Identifier	GetCurrentLocation		746881	1					
ANR	747017	ArgumentList			746881	1					
ANR	747018	ExpressionStatement	"shorten_line ( line , offset )"	1296:12:37152:37178	746881	3	True				
ANR	747019	CallExpression	"shorten_line ( line , offset )"		746881	0					
ANR	747020	Callee	shorten_line		746881	0					
ANR	747021	Identifier	shorten_line		746881	0					
ANR	747022	ArgumentList	line		746881	1					
ANR	747023	Argument	line		746881	0					
ANR	747024	Identifier	line		746881	0					
ANR	747025	Argument	offset		746881	1					
ANR	747026	Identifier	offset		746881	0					
ANR	747027	IfStatement	if ( tree2 == NULL )		746881	4					
ANR	747028	Condition	tree2 == NULL	1297:16:37196:37208	746881	0	True				
ANR	747029	EqualityExpression	tree2 == NULL		746881	0		==			
ANR	747030	Identifier	tree2		746881	0					
ANR	747031	Identifier	NULL		746881	1					
ANR	747032	CompoundStatement		27:31:856:856	746881	1					
ANR	747033	ExpressionStatement	"print_error_message ( ""Couldn't parse second expression."" , state )"	1298:16:37229:37292	746881	0	True				
ANR	747034	CallExpression	"print_error_message ( ""Couldn't parse second expression."" , state )"		746881	0					
ANR	747035	Callee	print_error_message		746881	0					
ANR	747036	Identifier	print_error_message		746881	0					
ANR	747037	ArgumentList	"""Couldn't parse second expression."""		746881	1					
ANR	747038	Argument	"""Couldn't parse second expression."""		746881	0					
ANR	747039	PrimaryExpression	"""Couldn't parse second expression."""		746881	0					
ANR	747040	Argument	state		746881	1					
ANR	747041	Identifier	state		746881	0					
ANR	747042	Statement	delete	1299:16:37310:37315	746881	1	True				
ANR	747043	ExpressionStatement	tree1	1299:23:37317:37322	746881	2	True				
ANR	747044	Identifier	tree1		746881	0					
ANR	747045	ExpressionStatement	tree1 = NULL	1300:16:37340:37352	746881	3	True				
ANR	747046	AssignmentExpression	tree1 = NULL		746881	0		=			
ANR	747047	Identifier	tree1		746881	0					
ANR	747048	Identifier	NULL		746881	1					
ANR	747049	ElseStatement	else		746881	0					
ANR	747050	IfStatement	if ( parameters . debug )		746881	0					
ANR	747051	Condition	parameters . debug	1301:23:37377:37392	746881	0	True				
ANR	747052	MemberAccess	parameters . debug		746881	0					
ANR	747053	Identifier	parameters		746881	0					
ANR	747054	Identifier	debug		746881	1					
ANR	747055	CompoundStatement		31:40:1039:1039	746881	1					
ANR	747056	ExpressionStatement	"cout << ""# Tree2: """	1302:16:37412:37431	746881	0	True				
ANR	747057	ShiftExpression	"cout << ""# Tree2: """		746881	0		<<			
ANR	747058	Identifier	cout		746881	0					
ANR	747059	PrimaryExpression	"""# Tree2: """		746881	1					
ANR	747060	ExpressionStatement	"print_expr ( tree2 , state , parameters )"	1303:16:37450:37486	746881	1	True				
ANR	747061	CallExpression	"print_expr ( tree2 , state , parameters )"		746881	0					
ANR	747062	Callee	print_expr		746881	0					
ANR	747063	Identifier	print_expr		746881	0					
ANR	747064	ArgumentList	tree2		746881	1					
ANR	747065	Argument	tree2		746881	0					
ANR	747066	Identifier	tree2		746881	0					
ANR	747067	Argument	state		746881	1					
ANR	747068	Identifier	state		746881	0					
ANR	747069	Argument	parameters		746881	2					
ANR	747070	Identifier	parameters		746881	0					
ANR	747071	ExpressionStatement	"cout << ""# Tree1: """	1304:16:37505:37524	746881	2	True				
ANR	747072	ShiftExpression	"cout << ""# Tree1: """		746881	0		<<			
ANR	747073	Identifier	cout		746881	0					
ANR	747074	PrimaryExpression	"""# Tree1: """		746881	1					
ANR	747075	ExpressionStatement	"print_expr ( tree1 , state , parameters )"	1305:16:37543:37579	746881	3	True				
ANR	747076	CallExpression	"print_expr ( tree1 , state , parameters )"		746881	0					
ANR	747077	Callee	print_expr		746881	0					
ANR	747078	Identifier	print_expr		746881	0					
ANR	747079	ArgumentList	tree1		746881	1					
ANR	747080	Argument	tree1		746881	0					
ANR	747081	Identifier	tree1		746881	0					
ANR	747082	Argument	state		746881	1					
ANR	747083	Identifier	state		746881	0					
ANR	747084	Argument	parameters		746881	2					
ANR	747085	Identifier	parameters		746881	0					
ANR	747086	ExpressionStatement	cout << endl	1306:16:37598:37610	746881	4	True				
ANR	747087	ShiftExpression	cout << endl		746881	0		<<			
ANR	747088	Identifier	cout		746881	0					
ANR	747089	Identifier	endl		746881	1					
ANR	747090	ReturnStatement	return ;	1311:4:37647:37653	746881	5	True				
ANR	747091	ReturnType	void		746881	1					
ANR	747092	Identifier	get_two_exprs		746881	2					
ANR	747093	ParameterList	"string & line , ExprTree * & tree1 , ExprTree * & tree2 , State & state , Parameters & parameters"		746881	3					
ANR	747094	Parameter	string & line	1266:4:36233:36248	746881	0	True				
ANR	747095	ParameterType	string &		746881	0					
ANR	747096	Identifier	line		746881	1					
ANR	747097	Parameter	ExprTree * & tree1	1267:4:36256:36273	746881	1	True				
ANR	747098	ParameterType	ExprTree * &		746881	0					
ANR	747099	Identifier	tree1		746881	1					
ANR	747100	Parameter	ExprTree * & tree2	1268:4:36281:36298	746881	2	True				
ANR	747101	ParameterType	ExprTree * &		746881	0					
ANR	747102	Identifier	tree2		746881	1					
ANR	747103	Parameter	State & state	1269:4:36306:36322	746881	3	True				
ANR	747104	ParameterType	State &		746881	0					
ANR	747105	Identifier	state		746881	1					
ANR	747106	Parameter	Parameters & parameters	1270:4:36330:36351	746881	4	True				
ANR	747107	ParameterType	Parameters &		746881	0					
ANR	747108	Identifier	parameters		746881	1					
ANR	747109	CFGEntryNode	ENTRY		746881		True				
ANR	747110	CFGExitNode	EXIT		746881		True				
ANR	747111	Symbol	NULL		746881						
ANR	747112	Symbol	offset		746881						
ANR	747113	Symbol	& lexer_source		746881						
ANR	747114	Symbol	parser . ParseExpression		746881						
ANR	747115	Symbol	line		746881						
ANR	747116	Symbol	false		746881						
ANR	747117	Symbol	parser . PeekToken		746881						
ANR	747118	Symbol	tree1		746881						
ANR	747119	Symbol	parser . ParseNextExpression		746881						
ANR	747120	Symbol	tree2		746881						
ANR	747121	Symbol	lexer_source . GetCurrentLocation		746881						
ANR	747122	Symbol	parameters . debug		746881						
ANR	747123	Symbol	lexer_source		746881						
ANR	747124	Symbol	parser		746881						
ANR	747125	Symbol	Lexer :: LEX_COMMA		746881						
ANR	747126	Symbol	state		746881						
ANR	747127	Symbol	parameters		746881						
ANR	747128	DeclStmt									
ANR	747129	Decl							string	string	output
ANR	747130	DeclStmt									
ANR	747131	Decl							ClassAdUnParser	ClassAdUnParser	unparser
ANR	747132	DeclStmt									
ANR	747133	Decl							PrettyPrint	PrettyPrint	unparser
ANR	747134	DeclStmt									
ANR	747135	Decl							ClassAdXMLUnParser	ClassAdXMLUnParser	unparser
ANR	747136	DeclStmt									
ANR	747137	Decl							ClassAdXMLUnParser	ClassAdXMLUnParser	unparser
ANR	747138	DeclStmt									
ANR	747139	Decl							ClassAd	ClassAd	classad
ANR	747140	DeclStmt									
ANR	747141	Decl							bool	bool	success
ANR	747142	Function	shorten_line	1373:0:39233:39558							
ANR	747143	FunctionDef	"shorten_line (string & line , int offset)"		747142	0					
ANR	747144	CompoundStatement		1376:0:39290:39558	747142	0					
ANR	747145	IfStatement	if ( offset < ( int ) line . size ( ) )		747142	0					
ANR	747146	Condition	offset < ( int ) line . size ( )	1379:8:39442:39467	747142	0	True				
ANR	747147	RelationalExpression	offset < ( int ) line . size ( )		747142	0		<			
ANR	747148	Identifier	offset		747142	0					
ANR	747149	CastExpression	( int ) line . size ( )		747142	1					
ANR	747150	CastTarget	int		747142	0					
ANR	747151	CallExpression	line . size ( )		747142	1					
ANR	747152	Callee	line . size		747142	0					
ANR	747153	MemberAccess	line . size		747142	0					
ANR	747154	Identifier	line		747142	0					
ANR	747155	Identifier	size		747142	1					
ANR	747156	ArgumentList			747142	1					
ANR	747157	CompoundStatement		4:36:179:179	747142	1					
ANR	747158	ExpressionStatement	line = line . substr ( offset )	1380:8:39480:39506	747142	0	True				
ANR	747159	AssignmentExpression	line = line . substr ( offset )		747142	0		=			
ANR	747160	Identifier	line		747142	0					
ANR	747161	CallExpression	line . substr ( offset )		747142	1					
ANR	747162	Callee	line . substr		747142	0					
ANR	747163	MemberAccess	line . substr		747142	0					
ANR	747164	Identifier	line		747142	0					
ANR	747165	Identifier	substr		747142	1					
ANR	747166	ArgumentList	offset		747142	1					
ANR	747167	Argument	offset		747142	0					
ANR	747168	Identifier	offset		747142	0					
ANR	747169	ElseStatement	else		747142	0					
ANR	747170	CompoundStatement		6:11:228:228	747142	0					
ANR	747171	ExpressionStatement	"line = """""	1382:8:39529:39538	747142	0	True				
ANR	747172	AssignmentExpression	"line = """""		747142	0		=			
ANR	747173	Identifier	line		747142	0					
ANR	747174	PrimaryExpression	""""""		747142	1					
ANR	747175	ReturnStatement	return ;	1384:4:39550:39556	747142	1	True				
ANR	747176	ReturnType	void		747142	1					
ANR	747177	Identifier	shorten_line		747142	2					
ANR	747178	ParameterList	"string & line , int offset"		747142	3					
ANR	747179	Parameter	string & line	1374:4:39256:39267	747142	0	True				
ANR	747180	ParameterType	string &		747142	0					
ANR	747181	Identifier	line		747142	1					
ANR	747182	Parameter	int offset	1375:4:39275:39287	747142	1	True				
ANR	747183	ParameterType	int		747142	0					
ANR	747184	Identifier	offset		747142	1					
ANR	747185	CFGEntryNode	ENTRY		747142		True				
ANR	747186	CFGExitNode	EXIT		747142		True				
ANR	747187	Symbol	offset		747142						
ANR	747188	Symbol	line		747142						
ANR	747189	Symbol	line . substr		747142						
ANR	747190	Symbol	line . size		747142						
ANR	747191	Function	print_version	1393:0:39751:39935							
ANR	747192	FunctionDef	print_version ()		747191	0					
ANR	747193	CompoundStatement		1394:0:39776:39935	747191	0					
ANR	747194	IdentifierDeclStatement	string classad_version ;	1395:4:39782:39804	747191	0	True				
ANR	747195	IdentifierDecl	classad_version		747191	0					
ANR	747196	IdentifierDeclType	string		747191	0					
ANR	747197	Identifier	classad_version		747191	1					
ANR	747198	ExpressionStatement	ClassAdLibraryVersion ( classad_version )	1397:4:39811:39849	747191	1	True				
ANR	747199	CallExpression	ClassAdLibraryVersion ( classad_version )		747191	0					
ANR	747200	Callee	ClassAdLibraryVersion		747191	0					
ANR	747201	Identifier	ClassAdLibraryVersion		747191	0					
ANR	747202	ArgumentList	classad_version		747191	1					
ANR	747203	Argument	classad_version		747191	0					
ANR	747204	Identifier	classad_version		747191	0					
ANR	747205	ExpressionStatement	"cout << ""ClassAd Functional Tester v"" << classad_version << endl"	1399:4:39856:39920	747191	2	True				
ANR	747206	ShiftExpression	"cout << ""ClassAd Functional Tester v"" << classad_version << endl"		747191	0		<<			
ANR	747207	Identifier	cout		747191	0					
ANR	747208	ShiftExpression	"""ClassAd Functional Tester v"" << classad_version << endl"		747191	1		<<			
ANR	747209	PrimaryExpression	"""ClassAd Functional Tester v"""		747191	0					
ANR	747210	ShiftExpression	classad_version << endl		747191	1		<<			
ANR	747211	Identifier	classad_version		747191	0					
ANR	747212	Identifier	endl		747191	1					
ANR	747213	ReturnStatement	return ;	1401:4:39927:39933	747191	3	True				
ANR	747214	ReturnType	void		747191	1					
ANR	747215	Identifier	print_version		747191	2					
ANR	747216	ParameterList			747191	3					
ANR	747217	CFGEntryNode	ENTRY		747191		True				
ANR	747218	CFGExitNode	EXIT		747191		True				
ANR	747219	Symbol	classad_version		747191						
ANR	747220	Function	print_error_message	1410:0:40134:40286							
ANR	747221	FunctionDef	"print_error_message (const char * error , State & state)"		747220	0					
ANR	747222	CompoundStatement		1413:0:40203:40286	747220	0					
ANR	747223	IdentifierDeclStatement	string error_s = error ;	1414:4:40209:40231	747220	0	True				
ANR	747224	IdentifierDecl	error_s = error		747220	0					
ANR	747225	IdentifierDeclType	string		747220	0					
ANR	747226	Identifier	error_s		747220	1					
ANR	747227	AssignmentExpression	error_s = error		747220	2		=			
ANR	747228	Identifier	error		747220	0					
ANR	747229	Identifier	error		747220	1					
ANR	747230	ExpressionStatement	"print_error_message ( error_s , state )"	1415:4:40237:40272	747220	1	True				
ANR	747231	CallExpression	"print_error_message ( error_s , state )"		747220	0					
ANR	747232	Callee	print_error_message		747220	0					
ANR	747233	Identifier	print_error_message		747220	0					
ANR	747234	ArgumentList	error_s		747220	1					
ANR	747235	Argument	error_s		747220	0					
ANR	747236	Identifier	error_s		747220	0					
ANR	747237	Argument	state		747220	1					
ANR	747238	Identifier	state		747220	0					
ANR	747239	ReturnStatement	return ;	1416:4:40278:40284	747220	2	True				
ANR	747240	ReturnType	void		747220	1					
ANR	747241	Identifier	print_error_message		747220	2					
ANR	747242	ParameterList	"const char * error , State & state"		747220	3					
ANR	747243	Parameter	const char * error	1411:4:40164:40181	747220	0	True				
ANR	747244	ParameterType	const char *		747220	0					
ANR	747245	Identifier	error		747220	1					
ANR	747246	Parameter	State & state	1412:4:40189:40200	747220	1	True				
ANR	747247	ParameterType	State &		747220	0					
ANR	747248	Identifier	state		747220	1					
ANR	747249	CFGEntryNode	ENTRY		747220		True				
ANR	747250	CFGExitNode	EXIT		747220		True				
ANR	747251	Symbol	error_s		747220						
ANR	747252	Symbol	state		747220						
ANR	747253	Symbol	error		747220						
ANR	747254	Function	print_error_message	1426:0:40486:40664							
ANR	747255	FunctionDef	"print_error_message (string & error , State & state)"		747254	0					
ANR	747256	CompoundStatement		1429:0:40551:40664	747254	0					
ANR	747257	ExpressionStatement	"cout << ""* Line "" << state . line_number << "": "" << error << endl"	1430:4:40557:40620	747254	0	True				
ANR	747258	ShiftExpression	"cout << ""* Line "" << state . line_number << "": "" << error << endl"		747254	0		<<			
ANR	747259	Identifier	cout		747254	0					
ANR	747260	ShiftExpression	"""* Line "" << state . line_number << "": "" << error << endl"		747254	1		<<			
ANR	747261	PrimaryExpression	"""* Line """		747254	0					
ANR	747262	ShiftExpression	"state . line_number << "": "" << error << endl"		747254	1		<<			
ANR	747263	MemberAccess	state . line_number		747254	0					
ANR	747264	Identifier	state		747254	0					
ANR	747265	Identifier	line_number		747254	1					
ANR	747266	ShiftExpression	""": "" << error << endl"		747254	1		<<			
ANR	747267	PrimaryExpression	""": """		747254	0					
ANR	747268	ShiftExpression	error << endl		747254	1		<<			
ANR	747269	Identifier	error		747254	0					
ANR	747270	Identifier	endl		747254	1					
ANR	747271	ExpressionStatement	state . number_of_errors ++	1431:4:40626:40650	747254	1	True				
ANR	747272	PostIncDecOperationExpression	state . number_of_errors ++		747254	0					
ANR	747273	MemberAccess	state . number_of_errors		747254	0					
ANR	747274	Identifier	state		747254	0					
ANR	747275	Identifier	number_of_errors		747254	1					
ANR	747276	IncDec	++		747254	1					
ANR	747277	ReturnStatement	return ;	1432:4:40656:40662	747254	2	True				
ANR	747278	ReturnType	void		747254	1					
ANR	747279	Identifier	print_error_message		747254	2					
ANR	747280	ParameterList	"string & error , State & state"		747254	3					
ANR	747281	Parameter	string & error	1427:4:40516:40528	747254	0	True				
ANR	747282	ParameterType	string &		747254	0					
ANR	747283	Identifier	error		747254	1					
ANR	747284	Parameter	State & state	1428:4:40536:40548	747254	1	True				
ANR	747285	ParameterType	State &		747254	0					
ANR	747286	Identifier	state		747254	1					
ANR	747287	CFGEntryNode	ENTRY		747254		True				
ANR	747288	CFGExitNode	EXIT		747254		True				
ANR	747289	Symbol	state . number_of_errors		747254						
ANR	747290	Symbol	state		747254						
ANR	747291	Symbol	error		747254						
ANR	747292	Function	print_final_state	1441:0:40861:41138							
ANR	747293	FunctionDef	print_final_state (State & state)		747292	0					
ANR	747294	CompoundStatement		1443:0:40903:41138	747292	0					
ANR	747295	IfStatement	if ( state . number_of_errors == 0 )		747292	0					
ANR	747296	Condition	state . number_of_errors == 0	1444:8:40913:40939	747292	0	True				
ANR	747297	EqualityExpression	state . number_of_errors == 0		747292	0		==			
ANR	747298	MemberAccess	state . number_of_errors		747292	0					
ANR	747299	Identifier	state		747292	0					
ANR	747300	Identifier	number_of_errors		747292	1					
ANR	747301	PrimaryExpression	0		747292	1					
ANR	747302	CompoundStatement		2:37:38:38	747292	1					
ANR	747303	ExpressionStatement	"cout << ""No errors.\\n"""	1445:8:40952:40974	747292	0	True				
ANR	747304	ShiftExpression	"cout << ""No errors.\\n"""		747292	0		<<			
ANR	747305	Identifier	cout		747292	0					
ANR	747306	PrimaryExpression	"""No errors.\\n"""		747292	1					
ANR	747307	ElseStatement	else		747292	0					
ANR	747308	IfStatement	if ( state . number_of_errors == 1 )		747292	0					
ANR	747309	Condition	state . number_of_errors == 1	1446:15:40991:41017	747292	0	True				
ANR	747310	EqualityExpression	state . number_of_errors == 1		747292	0		==			
ANR	747311	MemberAccess	state . number_of_errors		747292	0					
ANR	747312	Identifier	state		747292	0					
ANR	747313	Identifier	number_of_errors		747292	1					
ANR	747314	PrimaryExpression	1		747292	1					
ANR	747315	CompoundStatement		4:44:116:116	747292	1					
ANR	747316	ExpressionStatement	"cout << ""1 error.\\n"""	1447:8:41030:41050	747292	0	True				
ANR	747317	ShiftExpression	"cout << ""1 error.\\n"""		747292	0		<<			
ANR	747318	Identifier	cout		747292	0					
ANR	747319	PrimaryExpression	"""1 error.\\n"""		747292	1					
ANR	747320	ElseStatement	else		747292	0					
ANR	747321	CompoundStatement		6:11:159:159	747292	0					
ANR	747322	ExpressionStatement	"cout << state . number_of_errors << "" errors\\n"""	1449:8:41073:41118	747292	0	True				
ANR	747323	ShiftExpression	"cout << state . number_of_errors << "" errors\\n"""		747292	0		<<			
ANR	747324	Identifier	cout		747292	0					
ANR	747325	ShiftExpression	"state . number_of_errors << "" errors\\n"""		747292	1		<<			
ANR	747326	MemberAccess	state . number_of_errors		747292	0					
ANR	747327	Identifier	state		747292	0					
ANR	747328	Identifier	number_of_errors		747292	1					
ANR	747329	PrimaryExpression	""" errors\\n"""		747292	1					
ANR	747330	ReturnStatement	return ;	1451:4:41130:41136	747292	1	True				
ANR	747331	ReturnType	void		747292	1					
ANR	747332	Identifier	print_final_state		747292	2					
ANR	747333	ParameterList	State & state		747292	3					
ANR	747334	Parameter	State & state	1442:4:40889:40900	747292	0	True				
ANR	747335	ParameterType	State &		747292	0					
ANR	747336	Identifier	state		747292	1					
ANR	747337	CFGEntryNode	ENTRY		747292		True				
ANR	747338	CFGExitNode	EXIT		747292		True				
ANR	747339	Symbol	state . number_of_errors		747292						
ANR	747340	Symbol	state		747292						
ANR	747341	Function	line_is_comment	1454:0:41141:41365							
ANR	747342	FunctionDef	line_is_comment (string & line)		747341	0					
ANR	747343	CompoundStatement		1456:0:41181:41365	747341	0					
ANR	747344	IdentifierDeclStatement	bool is_comment ;	1457:4:41187:41202	747341	0	True				
ANR	747345	IdentifierDecl	is_comment		747341	0					
ANR	747346	IdentifierDeclType	bool		747341	0					
ANR	747347	Identifier	is_comment		747341	1					
ANR	747348	IfStatement	if ( line . size ( ) > 1 && line [ 0 ] == '/' && line [ 1 ] == '/' )		747341	1					
ANR	747349	Condition	line . size ( ) > 1 && line [ 0 ] == '/' && line [ 1 ] == '/'	1459:8:41213:41263	747341	0	True				
ANR	747350	AndExpression	line . size ( ) > 1 && line [ 0 ] == '/' && line [ 1 ] == '/'		747341	0		&&			
ANR	747351	RelationalExpression	line . size ( ) > 1		747341	0		>			
ANR	747352	CallExpression	line . size ( )		747341	0					
ANR	747353	Callee	line . size		747341	0					
ANR	747354	MemberAccess	line . size		747341	0					
ANR	747355	Identifier	line		747341	0					
ANR	747356	Identifier	size		747341	1					
ANR	747357	ArgumentList			747341	1					
ANR	747358	PrimaryExpression	1		747341	1					
ANR	747359	AndExpression	line [ 0 ] == '/' && line [ 1 ] == '/'		747341	1		&&			
ANR	747360	EqualityExpression	line [ 0 ] == '/'		747341	0		==			
ANR	747361	ArrayIndexing	line [ 0 ]		747341	0					
ANR	747362	Identifier	line		747341	0					
ANR	747363	PrimaryExpression	0		747341	1					
ANR	747364	PrimaryExpression	'/'		747341	1					
ANR	747365	EqualityExpression	line [ 1 ] == '/'		747341	1		==			
ANR	747366	ArrayIndexing	line [ 1 ]		747341	0					
ANR	747367	Identifier	line		747341	0					
ANR	747368	PrimaryExpression	1		747341	1					
ANR	747369	PrimaryExpression	'/'		747341	1					
ANR	747370	CompoundStatement		4:61:84:84	747341	1					
ANR	747371	ExpressionStatement	is_comment = true	1460:8:41276:41293	747341	0	True				
ANR	747372	AssignmentExpression	is_comment = true		747341	0		=			
ANR	747373	Identifier	is_comment		747341	0					
ANR	747374	Identifier	true		747341	1					
ANR	747375	ElseStatement	else		747341	0					
ANR	747376	CompoundStatement		6:11:124:124	747341	0					
ANR	747377	ExpressionStatement	is_comment = false	1462:8:41316:41334	747341	0	True				
ANR	747378	AssignmentExpression	is_comment = false		747341	0		=			
ANR	747379	Identifier	is_comment		747341	0					
ANR	747380	Identifier	false		747341	1					
ANR	747381	ReturnStatement	return is_comment ;	1464:4:41346:41363	747341	2	True				
ANR	747382	Identifier	is_comment		747341	0					
ANR	747383	ReturnType	bool		747341	1					
ANR	747384	Identifier	line_is_comment		747341	2					
ANR	747385	ParameterList	string & line		747341	3					
ANR	747386	Parameter	string & line	1455:4:41167:41178	747341	0	True				
ANR	747387	ParameterType	string &		747341	0					
ANR	747388	Identifier	line		747341	1					
ANR	747389	CFGEntryNode	ENTRY		747341		True				
ANR	747390	CFGExitNode	EXIT		747341		True				
ANR	747391	Symbol	line		747341						
ANR	747392	Symbol	line . size		747341						
ANR	747393	Symbol	is_comment		747341						
ANR	747394	Symbol	true		747341						
ANR	747395	Symbol	false		747341						
ANR	747396	Symbol	* line		747341						
ANR	747397	DeclStmt									
ANR	747398	Decl							bool	bool	is_okay
ANR	747399	DeclStmt									
ANR	747400	Decl							ExprList	ExprList *	list
ANR	747401	DeclStmt									
ANR	747402	Decl							ExprList :: iterator	ExprList :: iterator	iter
ANR	747403	DeclStmt									
ANR	747404	Decl							ExprTree	ExprTree *	element
