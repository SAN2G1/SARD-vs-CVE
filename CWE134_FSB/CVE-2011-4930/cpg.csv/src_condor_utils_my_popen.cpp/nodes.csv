command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4821685	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_my_popen.cpp								
ANR	4821686	DeclStmt									
ANR	4821687	Decl							HANDLE	HANDLE	child_handle_t
ANR	4821688	DeclStmt									
ANR	4821689	Decl							define INVALID_CHILD_HANDLE	define INVALID_CHILD_HANDLE	INVALID_HANDLE_VALUE
ANR	4821690	DeclStmt									
ANR	4821691	Decl							pid_t	pid_t	child_handle_t
ANR	4821692	ClassDef	popen_entry	41:0:1338:1417							
ANR	4821693	DeclStmt									
ANR	4821694	Decl							FILE	FILE *	fp
ANR	4821695	DeclStmt									
ANR	4821696	Decl							child_handle_t	child_handle_t	ch
ANR	4821697	DeclStmt									
ANR	4821698	Decl							struct popen_entry	struct popen_entry *	next
ANR	4821699	DeclStmt									
ANR	4821700	Decl							struct popen_entry	struct popen_entry *	popen_entry_head
ANR	4821701	Function	add_child	48:0:1466:1685							
ANR	4821702	FunctionDef	"add_child (FILE * fp , child_handle_t ch)"		4821701	0					
ANR	4821703	CompoundStatement		49:0:1517:1685	4821701	0					
ANR	4821704	IdentifierDeclStatement	struct popen_entry * pe = ( struct popen_entry * ) malloc ( sizeof ( struct popen_entry ) ) ;	50:1:1520:1601	4821701	0	True				
ANR	4821705	IdentifierDecl	* pe = ( struct popen_entry * ) malloc ( sizeof ( struct popen_entry ) )		4821701	0					
ANR	4821706	IdentifierDeclType	struct popen_entry *		4821701	0					
ANR	4821707	Identifier	pe		4821701	1					
ANR	4821708	AssignmentExpression	* pe = ( struct popen_entry * ) malloc ( sizeof ( struct popen_entry ) )		4821701	2		=			
ANR	4821709	Identifier	pe		4821701	0					
ANR	4821710	CastExpression	( struct popen_entry * ) malloc ( sizeof ( struct popen_entry ) )		4821701	1					
ANR	4821711	CastTarget	struct popen_entry *		4821701	0					
ANR	4821712	CallExpression	malloc ( sizeof ( struct popen_entry ) )		4821701	1					
ANR	4821713	Callee	malloc		4821701	0					
ANR	4821714	Identifier	malloc		4821701	0					
ANR	4821715	ArgumentList	sizeof ( struct popen_entry )		4821701	1					
ANR	4821716	Argument	sizeof ( struct popen_entry )		4821701	0					
ANR	4821717	SizeofExpression	sizeof ( struct popen_entry )		4821701	0					
ANR	4821718	Sizeof	sizeof		4821701	0					
ANR	4821719	SizeofOperand	struct popen_entry		4821701	1					
ANR	4821720	ExpressionStatement	pe -> fp = fp	51:1:1604:1615	4821701	1	True				
ANR	4821721	AssignmentExpression	pe -> fp = fp		4821701	0		=			
ANR	4821722	PtrMemberAccess	pe -> fp		4821701	0					
ANR	4821723	Identifier	pe		4821701	0					
ANR	4821724	Identifier	fp		4821701	1					
ANR	4821725	Identifier	fp		4821701	1					
ANR	4821726	ExpressionStatement	pe -> ch = ch	52:1:1618:1629	4821701	2	True				
ANR	4821727	AssignmentExpression	pe -> ch = ch		4821701	0		=			
ANR	4821728	PtrMemberAccess	pe -> ch		4821701	0					
ANR	4821729	Identifier	pe		4821701	0					
ANR	4821730	Identifier	ch		4821701	1					
ANR	4821731	Identifier	ch		4821701	1					
ANR	4821732	ExpressionStatement	pe -> next = popen_entry_head	53:1:1632:1659	4821701	3	True				
ANR	4821733	AssignmentExpression	pe -> next = popen_entry_head		4821701	0		=			
ANR	4821734	PtrMemberAccess	pe -> next		4821701	0					
ANR	4821735	Identifier	pe		4821701	0					
ANR	4821736	Identifier	next		4821701	1					
ANR	4821737	Identifier	popen_entry_head		4821701	1					
ANR	4821738	ExpressionStatement	popen_entry_head = pe	54:1:1662:1683	4821701	4	True				
ANR	4821739	AssignmentExpression	popen_entry_head = pe		4821701	0		=			
ANR	4821740	Identifier	popen_entry_head		4821701	0					
ANR	4821741	Identifier	pe		4821701	1					
ANR	4821742	ReturnType	static void		4821701	1					
ANR	4821743	Identifier	add_child		4821701	2					
ANR	4821744	ParameterList	"FILE * fp , child_handle_t ch"		4821701	3					
ANR	4821745	Parameter	FILE * fp	48:22:1488:1495	4821701	0	True				
ANR	4821746	ParameterType	FILE *		4821701	0					
ANR	4821747	Identifier	fp		4821701	1					
ANR	4821748	Parameter	child_handle_t ch	48:32:1498:1514	4821701	1	True				
ANR	4821749	ParameterType	child_handle_t		4821701	0					
ANR	4821750	Identifier	ch		4821701	1					
ANR	4821751	CFGEntryNode	ENTRY		4821701		True				
ANR	4821752	CFGExitNode	EXIT		4821701		True				
ANR	4821753	Symbol	malloc		4821701						
ANR	4821754	Symbol	pe -> ch		4821701						
ANR	4821755	Symbol	pe -> fp		4821701						
ANR	4821756	Symbol	ch		4821701						
ANR	4821757	Symbol	pe		4821701						
ANR	4821758	Symbol	pe -> next		4821701						
ANR	4821759	Symbol	popen_entry_head		4821701						
ANR	4821760	Symbol	* pe		4821701						
ANR	4821761	Symbol	fp		4821701						
ANR	4821762	Function	remove_child	57:0:1688:2038							
ANR	4821763	FunctionDef	remove_child (FILE * fp)		4821762	0					
ANR	4821764	CompoundStatement		58:0:1733:2038	4821762	0					
ANR	4821765	IdentifierDeclStatement	struct popen_entry * pe = popen_entry_head ;	59:1:1736:1777	4821762	0	True				
ANR	4821766	IdentifierDecl	* pe = popen_entry_head		4821762	0					
ANR	4821767	IdentifierDeclType	struct popen_entry *		4821762	0					
ANR	4821768	Identifier	pe		4821762	1					
ANR	4821769	AssignmentExpression	* pe = popen_entry_head		4821762	2		=			
ANR	4821770	Identifier	popen_entry_head		4821762	0					
ANR	4821771	Identifier	popen_entry_head		4821762	1					
ANR	4821772	IdentifierDeclStatement	struct popen_entry * * last_ptr = & popen_entry_head ;	60:1:1780:1829	4821762	1	True				
ANR	4821773	IdentifierDecl	* * last_ptr = & popen_entry_head		4821762	0					
ANR	4821774	IdentifierDeclType	struct popen_entry * *		4821762	0					
ANR	4821775	Identifier	last_ptr		4821762	1					
ANR	4821776	AssignmentExpression	* * last_ptr = & popen_entry_head		4821762	2		=			
ANR	4821777	Identifier	last_ptr		4821762	0					
ANR	4821778	UnaryOperationExpression	& popen_entry_head		4821762	1					
ANR	4821779	UnaryOperator	&		4821762	0					
ANR	4821780	Identifier	popen_entry_head		4821762	1					
ANR	4821781	WhileStatement	while ( pe != NULL )		4821762	2					
ANR	4821782	Condition	pe != NULL	61:8:1839:1848	4821762	0	True				
ANR	4821783	EqualityExpression	pe != NULL		4821762	0		!=			
ANR	4821784	Identifier	pe		4821762	0					
ANR	4821785	Identifier	NULL		4821762	1					
ANR	4821786	CompoundStatement		4:20:117:117	4821762	1					
ANR	4821787	IfStatement	if ( pe -> fp == fp )		4821762	0					
ANR	4821788	Condition	pe -> fp == fp	62:6:1859:1870	4821762	0	True				
ANR	4821789	EqualityExpression	pe -> fp == fp		4821762	0		==			
ANR	4821790	PtrMemberAccess	pe -> fp		4821762	0					
ANR	4821791	Identifier	pe		4821762	0					
ANR	4821792	Identifier	fp		4821762	1					
ANR	4821793	Identifier	fp		4821762	1					
ANR	4821794	CompoundStatement		6:3:144:170	4821762	1					
ANR	4821795	IdentifierDeclStatement	child_handle_t ch = pe -> ch ;	63:3:1878:1904	4821762	0	True				
ANR	4821796	IdentifierDecl	ch = pe -> ch		4821762	0					
ANR	4821797	IdentifierDeclType	child_handle_t		4821762	0					
ANR	4821798	Identifier	ch		4821762	1					
ANR	4821799	AssignmentExpression	ch = pe -> ch		4821762	2		=			
ANR	4821800	Identifier	ch		4821762	0					
ANR	4821801	PtrMemberAccess	pe -> ch		4821762	1					
ANR	4821802	Identifier	pe		4821762	0					
ANR	4821803	Identifier	ch		4821762	1					
ANR	4821804	ExpressionStatement	* last_ptr = pe -> next	64:3:1909:1929	4821762	1	True				
ANR	4821805	AssignmentExpression	* last_ptr = pe -> next		4821762	0		=			
ANR	4821806	UnaryOperationExpression	* last_ptr		4821762	0					
ANR	4821807	UnaryOperator	*		4821762	0					
ANR	4821808	Identifier	last_ptr		4821762	1					
ANR	4821809	PtrMemberAccess	pe -> next		4821762	1					
ANR	4821810	Identifier	pe		4821762	0					
ANR	4821811	Identifier	next		4821762	1					
ANR	4821812	ExpressionStatement	free ( pe )	65:3:1934:1942	4821762	2	True				
ANR	4821813	CallExpression	free ( pe )		4821762	0					
ANR	4821814	Callee	free		4821762	0					
ANR	4821815	Identifier	free		4821762	0					
ANR	4821816	ArgumentList	pe		4821762	1					
ANR	4821817	Argument	pe		4821762	0					
ANR	4821818	Identifier	pe		4821762	0					
ANR	4821819	ReturnStatement	return ch ;	66:3:1947:1956	4821762	3	True				
ANR	4821820	Identifier	ch		4821762	0					
ANR	4821821	ExpressionStatement	last_ptr = & ( pe -> next )	68:2:1964:1986	4821762	1	True				
ANR	4821822	AssignmentExpression	last_ptr = & ( pe -> next )		4821762	0		=			
ANR	4821823	Identifier	last_ptr		4821762	0					
ANR	4821824	UnaryOperationExpression	& ( pe -> next )		4821762	1					
ANR	4821825	UnaryOperator	&		4821762	0					
ANR	4821826	PtrMemberAccess	pe -> next		4821762	1					
ANR	4821827	Identifier	pe		4821762	0					
ANR	4821828	Identifier	next		4821762	1					
ANR	4821829	ExpressionStatement	pe = pe -> next	69:2:1990:2003	4821762	2	True				
ANR	4821830	AssignmentExpression	pe = pe -> next		4821762	0		=			
ANR	4821831	Identifier	pe		4821762	0					
ANR	4821832	PtrMemberAccess	pe -> next		4821762	1					
ANR	4821833	Identifier	pe		4821762	0					
ANR	4821834	Identifier	next		4821762	1					
ANR	4821835	ReturnStatement	return INVALID_CHILD_HANDLE ;	71:1:2009:2036	4821762	3	True				
ANR	4821836	Identifier	INVALID_CHILD_HANDLE		4821762	0					
ANR	4821837	ReturnType	static child_handle_t		4821762	1					
ANR	4821838	Identifier	remove_child		4821762	2					
ANR	4821839	ParameterList	FILE * fp		4821762	3					
ANR	4821840	Parameter	FILE * fp	57:35:1723:1730	4821762	0	True				
ANR	4821841	ParameterType	FILE *		4821762	0					
ANR	4821842	Identifier	fp		4821762	1					
ANR	4821843	CFGEntryNode	ENTRY		4821762		True				
ANR	4821844	CFGExitNode	EXIT		4821762		True				
ANR	4821845	Symbol	NULL		4821762						
ANR	4821846	Symbol	pe -> ch		4821762						
ANR	4821847	Symbol	pe -> fp		4821762						
ANR	4821848	Symbol	popen_entry_head		4821762						
ANR	4821849	Symbol	ch		4821762						
ANR	4821850	Symbol	& pe -> next		4821762						
ANR	4821851	Symbol	fp		4821762						
ANR	4821852	Symbol	last_ptr		4821762						
ANR	4821853	Symbol	INVALID_CHILD_HANDLE		4821762						
ANR	4821854	Symbol	pe		4821762						
ANR	4821855	Symbol	pe -> next		4821762						
ANR	4821856	Symbol	& popen_entry_head		4821762						
ANR	4821857	Symbol	* pe		4821762						
ANR	4821858	Symbol	* last_ptr		4821762						
ANR	4821859	Function	my_popen	106:11:3464:6564							
ANR	4821860	FunctionDef	"my_popen (const char * const_cmd , const char * mode , int want_stderr)"		4821859	0					
ANR	4821861	CompoundStatement		108:0:3538:6564	4821859	0					
ANR	4821862	IdentifierDeclStatement	BOOL read_mode ;	109:1:3541:3555	4821859	0	True				
ANR	4821863	IdentifierDecl	read_mode		4821859	0					
ANR	4821864	IdentifierDeclType	BOOL		4821859	0					
ANR	4821865	Identifier	read_mode		4821859	1					
ANR	4821866	IdentifierDeclStatement	SECURITY_ATTRIBUTES saPipe ;	110:1:3558:3584	4821859	1	True				
ANR	4821867	IdentifierDecl	saPipe		4821859	0					
ANR	4821868	IdentifierDeclType	SECURITY_ATTRIBUTES		4821859	0					
ANR	4821869	Identifier	saPipe		4821859	1					
ANR	4821870	IdentifierDeclStatement	"HANDLE hReadPipe , hWritePipe ;"	111:1:3587:3615	4821859	2	True				
ANR	4821871	IdentifierDecl	hReadPipe		4821859	0					
ANR	4821872	IdentifierDeclType	HANDLE		4821859	0					
ANR	4821873	Identifier	hReadPipe		4821859	1					
ANR	4821874	IdentifierDecl	hWritePipe		4821859	1					
ANR	4821875	IdentifierDeclType	HANDLE		4821859	0					
ANR	4821876	Identifier	hWritePipe		4821859	1					
ANR	4821877	IdentifierDeclStatement	"HANDLE hParentPipe , hChildPipe ;"	112:1:3618:3648	4821859	3	True				
ANR	4821878	IdentifierDecl	hParentPipe		4821859	0					
ANR	4821879	IdentifierDeclType	HANDLE		4821859	0					
ANR	4821880	Identifier	hParentPipe		4821859	1					
ANR	4821881	IdentifierDecl	hChildPipe		4821859	1					
ANR	4821882	IdentifierDeclType	HANDLE		4821859	0					
ANR	4821883	Identifier	hChildPipe		4821859	1					
ANR	4821884	IdentifierDeclStatement	STARTUPINFO si ;	113:1:3651:3665	4821859	4	True				
ANR	4821885	IdentifierDecl	si		4821859	0					
ANR	4821886	IdentifierDeclType	STARTUPINFO		4821859	0					
ANR	4821887	Identifier	si		4821859	1					
ANR	4821888	IdentifierDeclStatement	PROCESS_INFORMATION pi ;	114:1:3668:3690	4821859	5	True				
ANR	4821889	IdentifierDecl	pi		4821859	0					
ANR	4821890	IdentifierDeclType	PROCESS_INFORMATION		4821859	0					
ANR	4821891	Identifier	pi		4821859	1					
ANR	4821892	IdentifierDeclStatement	char * cmd ;	115:1:3693:3702	4821859	6	True				
ANR	4821893	IdentifierDecl	* cmd		4821859	0					
ANR	4821894	IdentifierDeclType	char *		4821859	0					
ANR	4821895	Identifier	cmd		4821859	1					
ANR	4821896	IdentifierDeclStatement	BOOL result ;	116:1:3705:3716	4821859	7	True				
ANR	4821897	IdentifierDecl	result		4821859	0					
ANR	4821898	IdentifierDeclType	BOOL		4821859	0					
ANR	4821899	Identifier	result		4821859	1					
ANR	4821900	IdentifierDeclStatement	int fd ;	117:1:3719:3725	4821859	8	True				
ANR	4821901	IdentifierDecl	fd		4821859	0					
ANR	4821902	IdentifierDeclType	int		4821859	0					
ANR	4821903	Identifier	fd		4821859	1					
ANR	4821904	IdentifierDeclStatement	FILE * retval ;	118:1:3728:3740	4821859	9	True				
ANR	4821905	IdentifierDecl	* retval		4821859	0					
ANR	4821906	IdentifierDeclType	FILE *		4821859	0					
ANR	4821907	Identifier	retval		4821859	1					
ANR	4821908	IfStatement	if ( ! mode )		4821859	10					
ANR	4821909	Condition	! mode	120:5:3748:3752	4821859	0	True				
ANR	4821910	UnaryOperationExpression	! mode		4821859	0					
ANR	4821911	UnaryOperator	!		4821859	0					
ANR	4821912	Identifier	mode		4821859	1					
ANR	4821913	ReturnStatement	return NULL ;	121:2:3757:3768	4821859	1	True				
ANR	4821914	Identifier	NULL		4821859	0					
ANR	4821915	ExpressionStatement	read_mode = mode [ 0 ] == 'r'	122:1:3771:3797	4821859	11	True				
ANR	4821916	AssignmentExpression	read_mode = mode [ 0 ] == 'r'		4821859	0		=			
ANR	4821917	Identifier	read_mode		4821859	0					
ANR	4821918	EqualityExpression	mode [ 0 ] == 'r'		4821859	1		==			
ANR	4821919	ArrayIndexing	mode [ 0 ]		4821859	0					
ANR	4821920	Identifier	mode		4821859	0					
ANR	4821921	PrimaryExpression	0		4821859	1					
ANR	4821922	PrimaryExpression	'r'		4821859	1					
ANR	4821923	ExpressionStatement	saPipe . nLength = sizeof ( SECURITY_ATTRIBUTES )	125:1:3865:3909	4821859	12	True				
ANR	4821924	AssignmentExpression	saPipe . nLength = sizeof ( SECURITY_ATTRIBUTES )		4821859	0		=			
ANR	4821925	MemberAccess	saPipe . nLength		4821859	0					
ANR	4821926	Identifier	saPipe		4821859	0					
ANR	4821927	Identifier	nLength		4821859	1					
ANR	4821928	SizeofExpression	sizeof ( SECURITY_ATTRIBUTES )		4821859	1					
ANR	4821929	Sizeof	sizeof		4821859	0					
ANR	4821930	SizeofOperand	SECURITY_ATTRIBUTES		4821859	1					
ANR	4821931	ExpressionStatement	saPipe . lpSecurityDescriptor = NULL	126:1:3912:3946	4821859	13	True				
ANR	4821932	AssignmentExpression	saPipe . lpSecurityDescriptor = NULL		4821859	0		=			
ANR	4821933	MemberAccess	saPipe . lpSecurityDescriptor		4821859	0					
ANR	4821934	Identifier	saPipe		4821859	0					
ANR	4821935	Identifier	lpSecurityDescriptor		4821859	1					
ANR	4821936	Identifier	NULL		4821859	1					
ANR	4821937	ExpressionStatement	saPipe . bInheritHandle = TRUE	127:1:3949:3977	4821859	14	True				
ANR	4821938	AssignmentExpression	saPipe . bInheritHandle = TRUE		4821859	0		=			
ANR	4821939	MemberAccess	saPipe . bInheritHandle		4821859	0					
ANR	4821940	Identifier	saPipe		4821859	0					
ANR	4821941	Identifier	bInheritHandle		4821859	1					
ANR	4821942	Identifier	TRUE		4821859	1					
ANR	4821943	IfStatement	"if ( CreatePipe ( & hReadPipe , & hWritePipe , & saPipe , 0 ) == 0 )"		4821859	15					
ANR	4821944	Condition	"CreatePipe ( & hReadPipe , & hWritePipe , & saPipe , 0 ) == 0"	130:5:4050:4101	4821859	0	True				
ANR	4821945	EqualityExpression	"CreatePipe ( & hReadPipe , & hWritePipe , & saPipe , 0 ) == 0"		4821859	0		==			
ANR	4821946	CallExpression	"CreatePipe ( & hReadPipe , & hWritePipe , & saPipe , 0 )"		4821859	0					
ANR	4821947	Callee	CreatePipe		4821859	0					
ANR	4821948	Identifier	CreatePipe		4821859	0					
ANR	4821949	ArgumentList	& hReadPipe		4821859	1					
ANR	4821950	Argument	& hReadPipe		4821859	0					
ANR	4821951	UnaryOperationExpression	& hReadPipe		4821859	0					
ANR	4821952	UnaryOperator	&		4821859	0					
ANR	4821953	Identifier	hReadPipe		4821859	1					
ANR	4821954	Argument	& hWritePipe		4821859	1					
ANR	4821955	UnaryOperationExpression	& hWritePipe		4821859	0					
ANR	4821956	UnaryOperator	&		4821859	0					
ANR	4821957	Identifier	hWritePipe		4821859	1					
ANR	4821958	Argument	& saPipe		4821859	2					
ANR	4821959	UnaryOperationExpression	& saPipe		4821859	0					
ANR	4821960	UnaryOperator	&		4821859	0					
ANR	4821961	Identifier	saPipe		4821859	1					
ANR	4821962	Argument	0		4821859	3					
ANR	4821963	PrimaryExpression	0		4821859	0					
ANR	4821964	PrimaryExpression	0		4821859	1					
ANR	4821965	CompoundStatement		23:59:565:565	4821859	1					
ANR	4821966	ExpressionStatement	"dprintf ( D_ALWAYS , ""my_popen: CreatePipe failed\\n"" )"	131:2:4108:4158	4821859	0	True				
ANR	4821967	CallExpression	"dprintf ( D_ALWAYS , ""my_popen: CreatePipe failed\\n"" )"		4821859	0					
ANR	4821968	Callee	dprintf		4821859	0					
ANR	4821969	Identifier	dprintf		4821859	0					
ANR	4821970	ArgumentList	D_ALWAYS		4821859	1					
ANR	4821971	Argument	D_ALWAYS		4821859	0					
ANR	4821972	Identifier	D_ALWAYS		4821859	0					
ANR	4821973	Argument	"""my_popen: CreatePipe failed\\n"""		4821859	1					
ANR	4821974	PrimaryExpression	"""my_popen: CreatePipe failed\\n"""		4821859	0					
ANR	4821975	ReturnStatement	return NULL ;	132:2:4162:4173	4821859	1	True				
ANR	4821976	Identifier	NULL		4821859	0					
ANR	4821977	IfStatement	if ( read_mode )		4821859	16					
ANR	4821978	Condition	read_mode	134:5:4183:4191	4821859	0	True				
ANR	4821979	Identifier	read_mode		4821859	0					
ANR	4821980	CompoundStatement		27:16:655:655	4821859	1					
ANR	4821981	ExpressionStatement	hParentPipe = hReadPipe	135:2:4198:4221	4821859	0	True				
ANR	4821982	AssignmentExpression	hParentPipe = hReadPipe		4821859	0		=			
ANR	4821983	Identifier	hParentPipe		4821859	0					
ANR	4821984	Identifier	hReadPipe		4821859	1					
ANR	4821985	ExpressionStatement	hChildPipe = hWritePipe	136:2:4225:4248	4821859	1	True				
ANR	4821986	AssignmentExpression	hChildPipe = hWritePipe		4821859	0		=			
ANR	4821987	Identifier	hChildPipe		4821859	0					
ANR	4821988	Identifier	hWritePipe		4821859	1					
ANR	4821989	ElseStatement	else		4821859	0					
ANR	4821990	CompoundStatement		31:6:720:720	4821859	0					
ANR	4821991	ExpressionStatement	hParentPipe = hWritePipe	139:2:4263:4287	4821859	0	True				
ANR	4821992	AssignmentExpression	hParentPipe = hWritePipe		4821859	0		=			
ANR	4821993	Identifier	hParentPipe		4821859	0					
ANR	4821994	Identifier	hWritePipe		4821859	1					
ANR	4821995	ExpressionStatement	hChildPipe = hReadPipe	140:2:4291:4313	4821859	1	True				
ANR	4821996	AssignmentExpression	hChildPipe = hReadPipe		4821859	0		=			
ANR	4821997	Identifier	hChildPipe		4821859	0					
ANR	4821998	Identifier	hReadPipe		4821859	1					
ANR	4821999	ExpressionStatement	"SetHandleInformation ( hParentPipe , HANDLE_FLAG_INHERIT , 0 )"	142:1:4319:4376	4821859	17	True				
ANR	4822000	CallExpression	"SetHandleInformation ( hParentPipe , HANDLE_FLAG_INHERIT , 0 )"		4821859	0					
ANR	4822001	Callee	SetHandleInformation		4821859	0					
ANR	4822002	Identifier	SetHandleInformation		4821859	0					
ANR	4822003	ArgumentList	hParentPipe		4821859	1					
ANR	4822004	Argument	hParentPipe		4821859	0					
ANR	4822005	Identifier	hParentPipe		4821859	0					
ANR	4822006	Argument	HANDLE_FLAG_INHERIT		4821859	1					
ANR	4822007	Identifier	HANDLE_FLAG_INHERIT		4821859	0					
ANR	4822008	Argument	0		4821859	2					
ANR	4822009	PrimaryExpression	0		4821859	0					
ANR	4822010	ExpressionStatement	"memset ( & si , 0 , sizeof ( STARTUPINFO ) )"	145:1:4431:4466	4821859	18	True				
ANR	4822011	CallExpression	"memset ( & si , 0 , sizeof ( STARTUPINFO ) )"		4821859	0					
ANR	4822012	Callee	memset		4821859	0					
ANR	4822013	Identifier	memset		4821859	0					
ANR	4822014	ArgumentList	& si		4821859	1					
ANR	4822015	Argument	& si		4821859	0					
ANR	4822016	UnaryOperationExpression	& si		4821859	0					
ANR	4822017	UnaryOperator	&		4821859	0					
ANR	4822018	Identifier	si		4821859	1					
ANR	4822019	Argument	0		4821859	1					
ANR	4822020	PrimaryExpression	0		4821859	0					
ANR	4822021	Argument	sizeof ( STARTUPINFO )		4821859	2					
ANR	4822022	SizeofExpression	sizeof ( STARTUPINFO )		4821859	0					
ANR	4822023	Sizeof	sizeof		4821859	0					
ANR	4822024	SizeofOperand	STARTUPINFO		4821859	1					
ANR	4822025	ExpressionStatement	si . cb = sizeof ( STARTUPINFO )	146:1:4469:4496	4821859	19	True				
ANR	4822026	AssignmentExpression	si . cb = sizeof ( STARTUPINFO )		4821859	0		=			
ANR	4822027	MemberAccess	si . cb		4821859	0					
ANR	4822028	Identifier	si		4821859	0					
ANR	4822029	Identifier	cb		4821859	1					
ANR	4822030	SizeofExpression	sizeof ( STARTUPINFO )		4821859	1					
ANR	4822031	Sizeof	sizeof		4821859	0					
ANR	4822032	SizeofOperand	STARTUPINFO		4821859	1					
ANR	4822033	IfStatement	if ( read_mode )		4821859	20					
ANR	4822034	Condition	read_mode	147:5:4503:4511	4821859	0	True				
ANR	4822035	Identifier	read_mode		4821859	0					
ANR	4822036	CompoundStatement		40:16:975:975	4821859	1					
ANR	4822037	ExpressionStatement	si . hStdOutput = hChildPipe	148:2:4518:4544	4821859	0	True				
ANR	4822038	AssignmentExpression	si . hStdOutput = hChildPipe		4821859	0		=			
ANR	4822039	MemberAccess	si . hStdOutput		4821859	0					
ANR	4822040	Identifier	si		4821859	0					
ANR	4822041	Identifier	hStdOutput		4821859	1					
ANR	4822042	Identifier	hChildPipe		4821859	1					
ANR	4822043	IfStatement	if ( want_stderr )		4821859	1					
ANR	4822044	Condition	want_stderr	149:6:4552:4562	4821859	0	True				
ANR	4822045	Identifier	want_stderr		4821859	0					
ANR	4822046	CompoundStatement		42:19:1026:1026	4821859	1					
ANR	4822047	ExpressionStatement	si . hStdError = hChildPipe	150:3:4570:4595	4821859	0	True				
ANR	4822048	AssignmentExpression	si . hStdError = hChildPipe		4821859	0		=			
ANR	4822049	MemberAccess	si . hStdError		4821859	0					
ANR	4822050	Identifier	si		4821859	0					
ANR	4822051	Identifier	hStdError		4821859	1					
ANR	4822052	Identifier	hChildPipe		4821859	1					
ANR	4822053	ElseStatement	else		4821859	0					
ANR	4822054	CompoundStatement		45:7:1069:1069	4821859	0					
ANR	4822055	ExpressionStatement	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )	153:3:4613:4658	4821859	0	True				
ANR	4822056	AssignmentExpression	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )		4821859	0		=			
ANR	4822057	MemberAccess	si . hStdError		4821859	0					
ANR	4822058	Identifier	si		4821859	0					
ANR	4822059	Identifier	hStdError		4821859	1					
ANR	4822060	CallExpression	GetStdHandle ( STD_ERROR_HANDLE )		4821859	1					
ANR	4822061	Callee	GetStdHandle		4821859	0					
ANR	4822062	Identifier	GetStdHandle		4821859	0					
ANR	4822063	ArgumentList	STD_ERROR_HANDLE		4821859	1					
ANR	4822064	Argument	STD_ERROR_HANDLE		4821859	0					
ANR	4822065	Identifier	STD_ERROR_HANDLE		4821859	0					
ANR	4822066	ExpressionStatement	si . hStdInput = GetStdHandle ( STD_INPUT_HANDLE )	155:2:4666:4711	4821859	2	True				
ANR	4822067	AssignmentExpression	si . hStdInput = GetStdHandle ( STD_INPUT_HANDLE )		4821859	0		=			
ANR	4822068	MemberAccess	si . hStdInput		4821859	0					
ANR	4822069	Identifier	si		4821859	0					
ANR	4822070	Identifier	hStdInput		4821859	1					
ANR	4822071	CallExpression	GetStdHandle ( STD_INPUT_HANDLE )		4821859	1					
ANR	4822072	Callee	GetStdHandle		4821859	0					
ANR	4822073	Identifier	GetStdHandle		4821859	0					
ANR	4822074	ArgumentList	STD_INPUT_HANDLE		4821859	1					
ANR	4822075	Argument	STD_INPUT_HANDLE		4821859	0					
ANR	4822076	Identifier	STD_INPUT_HANDLE		4821859	0					
ANR	4822077	ElseStatement	else		4821859	0					
ANR	4822078	CompoundStatement		50:6:1183:1183	4821859	0					
ANR	4822079	ExpressionStatement	si . hStdInput = hChildPipe	158:2:4726:4751	4821859	0	True				
ANR	4822080	AssignmentExpression	si . hStdInput = hChildPipe		4821859	0		=			
ANR	4822081	MemberAccess	si . hStdInput		4821859	0					
ANR	4822082	Identifier	si		4821859	0					
ANR	4822083	Identifier	hStdInput		4821859	1					
ANR	4822084	Identifier	hChildPipe		4821859	1					
ANR	4822085	ExpressionStatement	si . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )	159:2:4755:4802	4821859	1	True				
ANR	4822086	AssignmentExpression	si . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )		4821859	0		=			
ANR	4822087	MemberAccess	si . hStdOutput		4821859	0					
ANR	4822088	Identifier	si		4821859	0					
ANR	4822089	Identifier	hStdOutput		4821859	1					
ANR	4822090	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		4821859	1					
ANR	4822091	Callee	GetStdHandle		4821859	0					
ANR	4822092	Identifier	GetStdHandle		4821859	0					
ANR	4822093	ArgumentList	STD_OUTPUT_HANDLE		4821859	1					
ANR	4822094	Argument	STD_OUTPUT_HANDLE		4821859	0					
ANR	4822095	Identifier	STD_OUTPUT_HANDLE		4821859	0					
ANR	4822096	ExpressionStatement	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )	160:2:4806:4851	4821859	2	True				
ANR	4822097	AssignmentExpression	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )		4821859	0		=			
ANR	4822098	MemberAccess	si . hStdError		4821859	0					
ANR	4822099	Identifier	si		4821859	0					
ANR	4822100	Identifier	hStdError		4821859	1					
ANR	4822101	CallExpression	GetStdHandle ( STD_ERROR_HANDLE )		4821859	1					
ANR	4822102	Callee	GetStdHandle		4821859	0					
ANR	4822103	Identifier	GetStdHandle		4821859	0					
ANR	4822104	ArgumentList	STD_ERROR_HANDLE		4821859	1					
ANR	4822105	Argument	STD_ERROR_HANDLE		4821859	0					
ANR	4822106	Identifier	STD_ERROR_HANDLE		4821859	0					
ANR	4822107	ExpressionStatement	si . dwFlags = STARTF_USESTDHANDLES	162:1:4857:4890	4821859	21	True				
ANR	4822108	AssignmentExpression	si . dwFlags = STARTF_USESTDHANDLES		4821859	0		=			
ANR	4822109	MemberAccess	si . dwFlags		4821859	0					
ANR	4822110	Identifier	si		4821859	0					
ANR	4822111	Identifier	dwFlags		4821859	1					
ANR	4822112	Identifier	STARTF_USESTDHANDLES		4821859	1					
ANR	4822113	ExpressionStatement	cmd = strdup ( const_cmd )	165:1:4925:4948	4821859	22	True				
ANR	4822114	AssignmentExpression	cmd = strdup ( const_cmd )		4821859	0		=			
ANR	4822115	Identifier	cmd		4821859	0					
ANR	4822116	CallExpression	strdup ( const_cmd )		4821859	1					
ANR	4822117	Callee	strdup		4821859	0					
ANR	4822118	Identifier	strdup		4821859	0					
ANR	4822119	ArgumentList	const_cmd		4821859	1					
ANR	4822120	Argument	const_cmd		4821859	0					
ANR	4822121	Identifier	const_cmd		4821859	0					
ANR	4822122	ExpressionStatement	"result = CreateProcess ( NULL , cmd , NULL , NULL , TRUE , CREATE_NEW_CONSOLE , NULL , NULL , & si , & pi )"	166:1:4951:5683	4821859	23	True				
ANR	4822123	AssignmentExpression	"result = CreateProcess ( NULL , cmd , NULL , NULL , TRUE , CREATE_NEW_CONSOLE , NULL , NULL , & si , & pi )"		4821859	0		=			
ANR	4822124	Identifier	result		4821859	0					
ANR	4822125	CallExpression	"CreateProcess ( NULL , cmd , NULL , NULL , TRUE , CREATE_NEW_CONSOLE , NULL , NULL , & si , & pi )"		4821859	1					
ANR	4822126	Callee	CreateProcess		4821859	0					
ANR	4822127	Identifier	CreateProcess		4821859	0					
ANR	4822128	ArgumentList	NULL		4821859	1					
ANR	4822129	Argument	NULL		4821859	0					
ANR	4822130	Identifier	NULL		4821859	0					
ANR	4822131	Argument	cmd		4821859	1					
ANR	4822132	Identifier	cmd		4821859	0					
ANR	4822133	Argument	NULL		4821859	2					
ANR	4822134	Identifier	NULL		4821859	0					
ANR	4822135	Argument	NULL		4821859	3					
ANR	4822136	Identifier	NULL		4821859	0					
ANR	4822137	Argument	TRUE		4821859	4					
ANR	4822138	Identifier	TRUE		4821859	0					
ANR	4822139	Argument	CREATE_NEW_CONSOLE		4821859	5					
ANR	4822140	Identifier	CREATE_NEW_CONSOLE		4821859	0					
ANR	4822141	Argument	NULL		4821859	6					
ANR	4822142	Identifier	NULL		4821859	0					
ANR	4822143	Argument	NULL		4821859	7					
ANR	4822144	Identifier	NULL		4821859	0					
ANR	4822145	Argument	& si		4821859	8					
ANR	4822146	UnaryOperationExpression	& si		4821859	0					
ANR	4822147	UnaryOperator	&		4821859	0					
ANR	4822148	Identifier	si		4821859	1					
ANR	4822149	Argument	& pi		4821859	9					
ANR	4822150	UnaryOperationExpression	& pi		4821859	0					
ANR	4822151	UnaryOperator	&		4821859	0					
ANR	4822152	Identifier	pi		4821859	1					
ANR	4822153	ExpressionStatement	free ( cmd )	176:1:5735:5744	4821859	24	True				
ANR	4822154	CallExpression	free ( cmd )		4821859	0					
ANR	4822155	Callee	free		4821859	0					
ANR	4822156	Identifier	free		4821859	0					
ANR	4822157	ArgumentList	cmd		4821859	1					
ANR	4822158	Argument	cmd		4821859	0					
ANR	4822159	Identifier	cmd		4821859	0					
ANR	4822160	IfStatement	if ( result == 0 )		4821859	25					
ANR	4822161	Condition	result == 0	177:5:5751:5761	4821859	0	True				
ANR	4822162	EqualityExpression	result == 0		4821859	0		==			
ANR	4822163	Identifier	result		4821859	0					
ANR	4822164	PrimaryExpression	0		4821859	1					
ANR	4822165	CompoundStatement		70:18:2225:2225	4821859	1					
ANR	4822166	ExpressionStatement	CloseHandle ( hParentPipe )	178:2:5768:5792	4821859	0	True				
ANR	4822167	CallExpression	CloseHandle ( hParentPipe )		4821859	0					
ANR	4822168	Callee	CloseHandle		4821859	0					
ANR	4822169	Identifier	CloseHandle		4821859	0					
ANR	4822170	ArgumentList	hParentPipe		4821859	1					
ANR	4822171	Argument	hParentPipe		4821859	0					
ANR	4822172	Identifier	hParentPipe		4821859	0					
ANR	4822173	ExpressionStatement	CloseHandle ( hChildPipe )	179:2:5796:5819	4821859	1	True				
ANR	4822174	CallExpression	CloseHandle ( hChildPipe )		4821859	0					
ANR	4822175	Callee	CloseHandle		4821859	0					
ANR	4822176	Identifier	CloseHandle		4821859	0					
ANR	4822177	ArgumentList	hChildPipe		4821859	1					
ANR	4822178	Argument	hChildPipe		4821859	0					
ANR	4822179	Identifier	hChildPipe		4821859	0					
ANR	4822180	ExpressionStatement	"dprintf ( D_ALWAYS , ""my_popen: CreateProcess failed\\n"" )"	180:2:5823:5876	4821859	2	True				
ANR	4822181	CallExpression	"dprintf ( D_ALWAYS , ""my_popen: CreateProcess failed\\n"" )"		4821859	0					
ANR	4822182	Callee	dprintf		4821859	0					
ANR	4822183	Identifier	dprintf		4821859	0					
ANR	4822184	ArgumentList	D_ALWAYS		4821859	1					
ANR	4822185	Argument	D_ALWAYS		4821859	0					
ANR	4822186	Identifier	D_ALWAYS		4821859	0					
ANR	4822187	Argument	"""my_popen: CreateProcess failed\\n"""		4821859	1					
ANR	4822188	PrimaryExpression	"""my_popen: CreateProcess failed\\n"""		4821859	0					
ANR	4822189	ReturnStatement	return NULL ;	181:2:5880:5891	4821859	3	True				
ANR	4822190	Identifier	NULL		4821859	0					
ANR	4822191	ExpressionStatement	CloseHandle ( pi . hThread )	186:1:5982:6005	4821859	26	True				
ANR	4822192	CallExpression	CloseHandle ( pi . hThread )		4821859	0					
ANR	4822193	Callee	CloseHandle		4821859	0					
ANR	4822194	Identifier	CloseHandle		4821859	0					
ANR	4822195	ArgumentList	pi . hThread		4821859	1					
ANR	4822196	Argument	pi . hThread		4821859	0					
ANR	4822197	MemberAccess	pi . hThread		4821859	0					
ANR	4822198	Identifier	pi		4821859	0					
ANR	4822199	Identifier	hThread		4821859	1					
ANR	4822200	ExpressionStatement	CloseHandle ( hChildPipe )	187:1:6008:6031	4821859	27	True				
ANR	4822201	CallExpression	CloseHandle ( hChildPipe )		4821859	0					
ANR	4822202	Callee	CloseHandle		4821859	0					
ANR	4822203	Identifier	CloseHandle		4821859	0					
ANR	4822204	ArgumentList	hChildPipe		4821859	1					
ANR	4822205	Argument	hChildPipe		4821859	0					
ANR	4822206	Identifier	hChildPipe		4821859	0					
ANR	4822207	ExpressionStatement	"fd = _open_osfhandle ( ( long ) hParentPipe , 0 )"	190:1:6097:6139	4821859	28	True				
ANR	4822208	AssignmentExpression	"fd = _open_osfhandle ( ( long ) hParentPipe , 0 )"		4821859	0		=			
ANR	4822209	Identifier	fd		4821859	0					
ANR	4822210	CallExpression	"_open_osfhandle ( ( long ) hParentPipe , 0 )"		4821859	1					
ANR	4822211	Callee	_open_osfhandle		4821859	0					
ANR	4822212	Identifier	_open_osfhandle		4821859	0					
ANR	4822213	ArgumentList	( long ) hParentPipe		4821859	1					
ANR	4822214	Argument	( long ) hParentPipe		4821859	0					
ANR	4822215	CastExpression	( long ) hParentPipe		4821859	0					
ANR	4822216	CastTarget	long		4821859	0					
ANR	4822217	Identifier	hParentPipe		4821859	1					
ANR	4822218	Argument	0		4821859	1					
ANR	4822219	PrimaryExpression	0		4821859	0					
ANR	4822220	IfStatement	if ( fd == - 1 )		4821859	29					
ANR	4822221	Condition	fd == - 1	191:5:6146:6153	4821859	0	True				
ANR	4822222	EqualityExpression	fd == - 1		4821859	0		==			
ANR	4822223	Identifier	fd		4821859	0					
ANR	4822224	UnaryOperationExpression	- 1		4821859	1					
ANR	4822225	UnaryOperator	-		4821859	0					
ANR	4822226	PrimaryExpression	1		4821859	1					
ANR	4822227	CompoundStatement		84:15:2617:2617	4821859	1					
ANR	4822228	ExpressionStatement	CloseHandle ( hParentPipe )	192:2:6160:6184	4821859	0	True				
ANR	4822229	CallExpression	CloseHandle ( hParentPipe )		4821859	0					
ANR	4822230	Callee	CloseHandle		4821859	0					
ANR	4822231	Identifier	CloseHandle		4821859	0					
ANR	4822232	ArgumentList	hParentPipe		4821859	1					
ANR	4822233	Argument	hParentPipe		4821859	0					
ANR	4822234	Identifier	hParentPipe		4821859	0					
ANR	4822235	ExpressionStatement	CloseHandle ( pi . hProcess )	193:2:6188:6212	4821859	1	True				
ANR	4822236	CallExpression	CloseHandle ( pi . hProcess )		4821859	0					
ANR	4822237	Callee	CloseHandle		4821859	0					
ANR	4822238	Identifier	CloseHandle		4821859	0					
ANR	4822239	ArgumentList	pi . hProcess		4821859	1					
ANR	4822240	Argument	pi . hProcess		4821859	0					
ANR	4822241	MemberAccess	pi . hProcess		4821859	0					
ANR	4822242	Identifier	pi		4821859	0					
ANR	4822243	Identifier	hProcess		4821859	1					
ANR	4822244	ExpressionStatement	"dprintf ( D_ALWAYS , ""my_popen: _open_osfhandle failed\\n"" )"	194:2:6216:6271	4821859	2	True				
ANR	4822245	CallExpression	"dprintf ( D_ALWAYS , ""my_popen: _open_osfhandle failed\\n"" )"		4821859	0					
ANR	4822246	Callee	dprintf		4821859	0					
ANR	4822247	Identifier	dprintf		4821859	0					
ANR	4822248	ArgumentList	D_ALWAYS		4821859	1					
ANR	4822249	Argument	D_ALWAYS		4821859	0					
ANR	4822250	Identifier	D_ALWAYS		4821859	0					
ANR	4822251	Argument	"""my_popen: _open_osfhandle failed\\n"""		4821859	1					
ANR	4822252	PrimaryExpression	"""my_popen: _open_osfhandle failed\\n"""		4821859	0					
ANR	4822253	ReturnStatement	return NULL ;	195:2:6275:6286	4821859	3	True				
ANR	4822254	Identifier	NULL		4821859	0					
ANR	4822255	ExpressionStatement	"retval = _fdopen ( fd , mode )"	197:1:6292:6318	4821859	30	True				
ANR	4822256	AssignmentExpression	"retval = _fdopen ( fd , mode )"		4821859	0		=			
ANR	4822257	Identifier	retval		4821859	0					
ANR	4822258	CallExpression	"_fdopen ( fd , mode )"		4821859	1					
ANR	4822259	Callee	_fdopen		4821859	0					
ANR	4822260	Identifier	_fdopen		4821859	0					
ANR	4822261	ArgumentList	fd		4821859	1					
ANR	4822262	Argument	fd		4821859	0					
ANR	4822263	Identifier	fd		4821859	0					
ANR	4822264	Argument	mode		4821859	1					
ANR	4822265	Identifier	mode		4821859	0					
ANR	4822266	IfStatement	if ( retval == NULL )		4821859	31					
ANR	4822267	Condition	retval == NULL	198:5:6325:6338	4821859	0	True				
ANR	4822268	EqualityExpression	retval == NULL		4821859	0		==			
ANR	4822269	Identifier	retval		4821859	0					
ANR	4822270	Identifier	NULL		4821859	1					
ANR	4822271	CompoundStatement		91:21:2802:2802	4821859	1					
ANR	4822272	ExpressionStatement	CloseHandle ( hParentPipe )	199:2:6345:6369	4821859	0	True				
ANR	4822273	CallExpression	CloseHandle ( hParentPipe )		4821859	0					
ANR	4822274	Callee	CloseHandle		4821859	0					
ANR	4822275	Identifier	CloseHandle		4821859	0					
ANR	4822276	ArgumentList	hParentPipe		4821859	1					
ANR	4822277	Argument	hParentPipe		4821859	0					
ANR	4822278	Identifier	hParentPipe		4821859	0					
ANR	4822279	ExpressionStatement	CloseHandle ( pi . hProcess )	200:2:6373:6397	4821859	1	True				
ANR	4822280	CallExpression	CloseHandle ( pi . hProcess )		4821859	0					
ANR	4822281	Callee	CloseHandle		4821859	0					
ANR	4822282	Identifier	CloseHandle		4821859	0					
ANR	4822283	ArgumentList	pi . hProcess		4821859	1					
ANR	4822284	Argument	pi . hProcess		4821859	0					
ANR	4822285	MemberAccess	pi . hProcess		4821859	0					
ANR	4822286	Identifier	pi		4821859	0					
ANR	4822287	Identifier	hProcess		4821859	1					
ANR	4822288	ExpressionStatement	"dprintf ( D_ALWAYS , ""my_popen: _fdopen failed\\n"" )"	201:2:6401:6448	4821859	2	True				
ANR	4822289	CallExpression	"dprintf ( D_ALWAYS , ""my_popen: _fdopen failed\\n"" )"		4821859	0					
ANR	4822290	Callee	dprintf		4821859	0					
ANR	4822291	Identifier	dprintf		4821859	0					
ANR	4822292	ArgumentList	D_ALWAYS		4821859	1					
ANR	4822293	Argument	D_ALWAYS		4821859	0					
ANR	4822294	Identifier	D_ALWAYS		4821859	0					
ANR	4822295	Argument	"""my_popen: _fdopen failed\\n"""		4821859	1					
ANR	4822296	PrimaryExpression	"""my_popen: _fdopen failed\\n"""		4821859	0					
ANR	4822297	ReturnStatement	return NULL ;	202:2:6452:6463	4821859	3	True				
ANR	4822298	Identifier	NULL		4821859	0					
ANR	4822299	ExpressionStatement	"add_child ( retval , pi . hProcess )"	206:1:6515:6545	4821859	32	True				
ANR	4822300	CallExpression	"add_child ( retval , pi . hProcess )"		4821859	0					
ANR	4822301	Callee	add_child		4821859	0					
ANR	4822302	Identifier	add_child		4821859	0					
ANR	4822303	ArgumentList	retval		4821859	1					
ANR	4822304	Argument	retval		4821859	0					
ANR	4822305	Identifier	retval		4821859	0					
ANR	4822306	Argument	pi . hProcess		4821859	1					
ANR	4822307	MemberAccess	pi . hProcess		4821859	0					
ANR	4822308	Identifier	pi		4821859	0					
ANR	4822309	Identifier	hProcess		4821859	1					
ANR	4822310	ReturnStatement	return retval ;	208:1:6549:6562	4821859	33	True				
ANR	4822311	Identifier	retval		4821859	0					
ANR	4822312	ReturnType	FILE *		4821859	1					
ANR	4822313	Identifier	my_popen		4821859	2					
ANR	4822314	ParameterList	"const char * const_cmd , const char * mode , int want_stderr"		4821859	3					
ANR	4822315	Parameter	const char * const_cmd	107:9:3480:3500	4821859	0	True				
ANR	4822316	ParameterType	const char *		4821859	0					
ANR	4822317	Identifier	const_cmd		4821859	1					
ANR	4822318	Parameter	const char * mode	107:32:3503:3518	4821859	1	True				
ANR	4822319	ParameterType	const char *		4821859	0					
ANR	4822320	Identifier	mode		4821859	1					
ANR	4822321	Parameter	int want_stderr	107:50:3521:3535	4821859	2	True				
ANR	4822322	ParameterType	int		4821859	0					
ANR	4822323	Identifier	want_stderr		4821859	1					
ANR	4822324	CFGEntryNode	ENTRY		4821859		True				
ANR	4822325	CFGExitNode	EXIT		4821859		True				
ANR	4822326	Symbol	GetStdHandle		4821859						
ANR	4822327	Symbol	& si		4821859						
ANR	4822328	Symbol	_open_osfhandle		4821859						
ANR	4822329	Symbol	CreatePipe		4821859						
ANR	4822330	Symbol	pi . hThread		4821859						
ANR	4822331	Symbol	const_cmd		4821859						
ANR	4822332	Symbol	mode		4821859						
ANR	4822333	Symbol	result		4821859						
ANR	4822334	Symbol	STARTF_USESTDHANDLES		4821859						
ANR	4822335	Symbol	si . hStdError		4821859						
ANR	4822336	Symbol	saPipe . bInheritHandle		4821859						
ANR	4822337	Symbol	_fdopen		4821859						
ANR	4822338	Symbol	hWritePipe		4821859						
ANR	4822339	Symbol	si		4821859						
ANR	4822340	Symbol	saPipe . nLength		4821859						
ANR	4822341	Symbol	CREATE_NEW_CONSOLE		4821859						
ANR	4822342	Symbol	hReadPipe		4821859						
ANR	4822343	Symbol	want_stderr		4821859						
ANR	4822344	Symbol	CreateProcess		4821859						
ANR	4822345	Symbol	& hReadPipe		4821859						
ANR	4822346	Symbol	& pi		4821859						
ANR	4822347	Symbol	hParentPipe		4821859						
ANR	4822348	Symbol	NULL		4821859						
ANR	4822349	Symbol	saPipe . lpSecurityDescriptor		4821859						
ANR	4822350	Symbol	STD_ERROR_HANDLE		4821859						
ANR	4822351	Symbol	STD_INPUT_HANDLE		4821859						
ANR	4822352	Symbol	STD_OUTPUT_HANDLE		4821859						
ANR	4822353	Symbol	saPipe		4821859						
ANR	4822354	Symbol	si . hStdOutput		4821859						
ANR	4822355	Symbol	pi . hProcess		4821859						
ANR	4822356	Symbol	D_ALWAYS		4821859						
ANR	4822357	Symbol	TRUE		4821859						
ANR	4822358	Symbol	si . cb		4821859						
ANR	4822359	Symbol	si . hStdInput		4821859						
ANR	4822360	Symbol	retval		4821859						
ANR	4822361	Symbol	read_mode		4821859						
ANR	4822362	Symbol	& hWritePipe		4821859						
ANR	4822363	Symbol	hChildPipe		4821859						
ANR	4822364	Symbol	* mode		4821859						
ANR	4822365	Symbol	& saPipe		4821859						
ANR	4822366	Symbol	pi		4821859						
ANR	4822367	Symbol	cmd		4821859						
ANR	4822368	Symbol	strdup		4821859						
ANR	4822369	Symbol	fd		4821859						
ANR	4822370	Symbol	HANDLE_FLAG_INHERIT		4821859						
ANR	4822371	Symbol	si . dwFlags		4821859						
ANR	4822372	Function	my_popen	211:0:6567:6961							
ANR	4822373	FunctionDef	"my_popen (ArgList & args , const char * mode , int want_stderr , Env * zkmENV)"		4822372	0					
ANR	4822374	CompoundStatement		213:0:6646:6961	4822372	0					
ANR	4822375	IdentifierDeclStatement	"MyString cmdline , err ;"	214:1:6649:6670	4822372	0	True				
ANR	4822376	IdentifierDecl	cmdline		4822372	0					
ANR	4822377	IdentifierDeclType	MyString		4822372	0					
ANR	4822378	Identifier	cmdline		4822372	1					
ANR	4822379	IdentifierDecl	err		4822372	1					
ANR	4822380	IdentifierDeclType	MyString		4822372	0					
ANR	4822381	Identifier	err		4822372	1					
ANR	4822382	IfStatement	"if ( ! args . GetArgsStringWin32 ( & cmdline , 0 , & err ) )"		4822372	1					
ANR	4822383	Condition	"! args . GetArgsStringWin32 ( & cmdline , 0 , & err )"	215:5:6677:6719	4822372	0	True				
ANR	4822384	UnaryOperationExpression	"! args . GetArgsStringWin32 ( & cmdline , 0 , & err )"		4822372	0					
ANR	4822385	UnaryOperator	!		4822372	0					
ANR	4822386	CallExpression	"args . GetArgsStringWin32 ( & cmdline , 0 , & err )"		4822372	1					
ANR	4822387	Callee	args . GetArgsStringWin32		4822372	0					
ANR	4822388	MemberAccess	args . GetArgsStringWin32		4822372	0					
ANR	4822389	Identifier	args		4822372	0					
ANR	4822390	Identifier	GetArgsStringWin32		4822372	1					
ANR	4822391	ArgumentList	& cmdline		4822372	1					
ANR	4822392	Argument	& cmdline		4822372	0					
ANR	4822393	UnaryOperationExpression	& cmdline		4822372	0					
ANR	4822394	UnaryOperator	&		4822372	0					
ANR	4822395	Identifier	cmdline		4822372	1					
ANR	4822396	Argument	0		4822372	1					
ANR	4822397	PrimaryExpression	0		4822372	0					
ANR	4822398	Argument	& err		4822372	2					
ANR	4822399	UnaryOperationExpression	& err		4822372	0					
ANR	4822400	UnaryOperator	&		4822372	0					
ANR	4822401	Identifier	err		4822372	1					
ANR	4822402	CompoundStatement		3:50:75:75	4822372	1					
ANR	4822403	ExpressionStatement	"dprintf ( D_ALWAYS , ""my_popen: error making command line: %s\\n"" , err . Value ( ) )"	216:2:6726:6801	4822372	0	True				
ANR	4822404	CallExpression	"dprintf ( D_ALWAYS , ""my_popen: error making command line: %s\\n"" , err . Value ( ) )"		4822372	0					
ANR	4822405	Callee	dprintf		4822372	0					
ANR	4822406	Identifier	dprintf		4822372	0					
ANR	4822407	ArgumentList	D_ALWAYS		4822372	1					
ANR	4822408	Argument	D_ALWAYS		4822372	0					
ANR	4822409	Identifier	D_ALWAYS		4822372	0					
ANR	4822410	Argument	"""my_popen: error making command line: %s\\n"""		4822372	1					
ANR	4822411	PrimaryExpression	"""my_popen: error making command line: %s\\n"""		4822372	0					
ANR	4822412	Argument	err . Value ( )		4822372	2					
ANR	4822413	CallExpression	err . Value ( )		4822372	0					
ANR	4822414	Callee	err . Value		4822372	0					
ANR	4822415	MemberAccess	err . Value		4822372	0					
ANR	4822416	Identifier	err		4822372	0					
ANR	4822417	Identifier	Value		4822372	1					
ANR	4822418	ArgumentList			4822372	1					
ANR	4822419	ReturnStatement	return NULL ;	217:2:6805:6816	4822372	1	True				
ANR	4822420	Identifier	NULL		4822372	0					
ANR	4822421	ReturnStatement	"return my_popen ( cmdline . Value ( ) , mode , want_stderr ) ;"	220:1:6908:6959	4822372	2	True				
ANR	4822422	CallExpression	"my_popen ( cmdline . Value ( ) , mode , want_stderr )"		4822372	0					
ANR	4822423	Callee	my_popen		4822372	0					
ANR	4822424	Identifier	my_popen		4822372	0					
ANR	4822425	ArgumentList	cmdline . Value ( )		4822372	1					
ANR	4822426	Argument	cmdline . Value ( )		4822372	0					
ANR	4822427	CallExpression	cmdline . Value ( )		4822372	0					
ANR	4822428	Callee	cmdline . Value		4822372	0					
ANR	4822429	MemberAccess	cmdline . Value		4822372	0					
ANR	4822430	Identifier	cmdline		4822372	0					
ANR	4822431	Identifier	Value		4822372	1					
ANR	4822432	ArgumentList			4822372	1					
ANR	4822433	Argument	mode		4822372	1					
ANR	4822434	Identifier	mode		4822372	0					
ANR	4822435	Argument	want_stderr		4822372	2					
ANR	4822436	Identifier	want_stderr		4822372	0					
ANR	4822437	ReturnType	FILE *		4822372	1					
ANR	4822438	Identifier	my_popen		4822372	2					
ANR	4822439	ParameterList	"ArgList & args , const char * mode , int want_stderr , Env * zkmENV"		4822372	3					
ANR	4822440	Parameter	ArgList & args	212:9:6583:6595	4822372	0	True				
ANR	4822441	ParameterType	ArgList &		4822372	0					
ANR	4822442	Identifier	args		4822372	1					
ANR	4822443	Parameter	const char * mode	212:24:6598:6613	4822372	1	True				
ANR	4822444	ParameterType	const char *		4822372	0					
ANR	4822445	Identifier	mode		4822372	1					
ANR	4822446	Parameter	int want_stderr	212:42:6616:6630	4822372	2	True				
ANR	4822447	ParameterType	int		4822372	0					
ANR	4822448	Identifier	want_stderr		4822372	1					
ANR	4822449	Parameter	Env * zkmENV	212:59:6633:6643	4822372	3	True				
ANR	4822450	ParameterType	Env *		4822372	0					
ANR	4822451	Identifier	zkmENV		4822372	1					
ANR	4822452	CFGEntryNode	ENTRY		4822372		True				
ANR	4822453	CFGExitNode	EXIT		4822372		True				
ANR	4822454	Symbol	want_stderr		4822372						
ANR	4822455	Symbol	cmdline . Value		4822372						
ANR	4822456	Symbol	NULL		4822372						
ANR	4822457	Symbol	err		4822372						
ANR	4822458	Symbol	D_ALWAYS		4822372						
ANR	4822459	Symbol	args . GetArgsStringWin32		4822372						
ANR	4822460	Symbol	my_popen		4822372						
ANR	4822461	Symbol	& err		4822372						
ANR	4822462	Symbol	args		4822372						
ANR	4822463	Symbol	mode		4822372						
ANR	4822464	Symbol	cmdline		4822372						
ANR	4822465	Symbol	zkmENV		4822372						
ANR	4822466	Symbol	err . Value		4822372						
ANR	4822467	Symbol	& cmdline		4822372						
ANR	4822468	DeclStmt									
ANR	4822469	Decl							ArgList	ArgList	arglist
ANR	4822470	DeclStmt									
ANR	4822471	Decl							int	int	i
ANR	4822472	Function	my_pclose	235:11:7236:7702							
ANR	4822473	FunctionDef	my_pclose (FILE * fp)		4822472	0					
ANR	4822474	CompoundStatement		237:0:7260:7702	4822472	0					
ANR	4822475	IdentifierDeclStatement	HANDLE hChildProcess ;	238:1:7263:7283	4822472	0	True				
ANR	4822476	IdentifierDecl	hChildProcess		4822472	0					
ANR	4822477	IdentifierDeclType	HANDLE		4822472	0					
ANR	4822478	Identifier	hChildProcess		4822472	1					
ANR	4822479	IdentifierDeclStatement	DWORD result ;	239:1:7286:7298	4822472	1	True				
ANR	4822480	IdentifierDecl	result		4822472	0					
ANR	4822481	IdentifierDeclType	DWORD		4822472	0					
ANR	4822482	Identifier	result		4822472	1					
ANR	4822483	ExpressionStatement	hChildProcess = remove_child ( fp )	241:1:7302:7334	4822472	2	True				
ANR	4822484	AssignmentExpression	hChildProcess = remove_child ( fp )		4822472	0		=			
ANR	4822485	Identifier	hChildProcess		4822472	0					
ANR	4822486	CallExpression	remove_child ( fp )		4822472	1					
ANR	4822487	Callee	remove_child		4822472	0					
ANR	4822488	Identifier	remove_child		4822472	0					
ANR	4822489	ArgumentList	fp		4822472	1					
ANR	4822490	Argument	fp		4822472	0					
ANR	4822491	Identifier	fp		4822472	0					
ANR	4822492	ExpressionStatement	fclose ( fp )	243:1:7338:7348	4822472	3	True				
ANR	4822493	CallExpression	fclose ( fp )		4822472	0					
ANR	4822494	Callee	fclose		4822472	0					
ANR	4822495	Identifier	fclose		4822472	0					
ANR	4822496	ArgumentList	fp		4822472	1					
ANR	4822497	Argument	fp		4822472	0					
ANR	4822498	Identifier	fp		4822472	0					
ANR	4822499	ExpressionStatement	"result = WaitForSingleObject ( hChildProcess , INFINITE )"	245:1:7352:7405	4822472	4	True				
ANR	4822500	AssignmentExpression	"result = WaitForSingleObject ( hChildProcess , INFINITE )"		4822472	0		=			
ANR	4822501	Identifier	result		4822472	0					
ANR	4822502	CallExpression	"WaitForSingleObject ( hChildProcess , INFINITE )"		4822472	1					
ANR	4822503	Callee	WaitForSingleObject		4822472	0					
ANR	4822504	Identifier	WaitForSingleObject		4822472	0					
ANR	4822505	ArgumentList	hChildProcess		4822472	1					
ANR	4822506	Argument	hChildProcess		4822472	0					
ANR	4822507	Identifier	hChildProcess		4822472	0					
ANR	4822508	Argument	INFINITE		4822472	1					
ANR	4822509	Identifier	INFINITE		4822472	0					
ANR	4822510	IfStatement	if ( result != WAIT_OBJECT_0 )		4822472	5					
ANR	4822511	Condition	result != WAIT_OBJECT_0	246:5:7412:7434	4822472	0	True				
ANR	4822512	EqualityExpression	result != WAIT_OBJECT_0		4822472	0		!=			
ANR	4822513	Identifier	result		4822472	0					
ANR	4822514	Identifier	WAIT_OBJECT_0		4822472	1					
ANR	4822515	CompoundStatement		10:30:176:176	4822472	1					
ANR	4822516	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""my_pclose: WaitForSingleObject failed\\n"" )"	247:2:7441:7504	4822472	0	True				
ANR	4822517	CallExpression	"dprintf ( D_FULLDEBUG , ""my_pclose: WaitForSingleObject failed\\n"" )"		4822472	0					
ANR	4822518	Callee	dprintf		4822472	0					
ANR	4822519	Identifier	dprintf		4822472	0					
ANR	4822520	ArgumentList	D_FULLDEBUG		4822472	1					
ANR	4822521	Argument	D_FULLDEBUG		4822472	0					
ANR	4822522	Identifier	D_FULLDEBUG		4822472	0					
ANR	4822523	Argument	"""my_pclose: WaitForSingleObject failed\\n"""		4822472	1					
ANR	4822524	PrimaryExpression	"""my_pclose: WaitForSingleObject failed\\n"""		4822472	0					
ANR	4822525	ReturnStatement	return - 1 ;	248:2:7508:7517	4822472	1	True				
ANR	4822526	UnaryOperationExpression	- 1		4822472	0					
ANR	4822527	UnaryOperator	-		4822472	0					
ANR	4822528	PrimaryExpression	1		4822472	1					
ANR	4822529	IfStatement	"if ( ! GetExitCodeProcess ( hChildProcess , & result ) )"		4822472	6					
ANR	4822530	Condition	"! GetExitCodeProcess ( hChildProcess , & result )"	250:5:7527:7569	4822472	0	True				
ANR	4822531	UnaryOperationExpression	"! GetExitCodeProcess ( hChildProcess , & result )"		4822472	0					
ANR	4822532	UnaryOperator	!		4822472	0					
ANR	4822533	CallExpression	"GetExitCodeProcess ( hChildProcess , & result )"		4822472	1					
ANR	4822534	Callee	GetExitCodeProcess		4822472	0					
ANR	4822535	Identifier	GetExitCodeProcess		4822472	0					
ANR	4822536	ArgumentList	hChildProcess		4822472	1					
ANR	4822537	Argument	hChildProcess		4822472	0					
ANR	4822538	Identifier	hChildProcess		4822472	0					
ANR	4822539	Argument	& result		4822472	1					
ANR	4822540	UnaryOperationExpression	& result		4822472	0					
ANR	4822541	UnaryOperator	&		4822472	0					
ANR	4822542	Identifier	result		4822472	1					
ANR	4822543	CompoundStatement		14:50:311:311	4822472	1					
ANR	4822544	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""my_pclose: GetExitCodeProcess failed\\n"" )"	251:2:7576:7638	4822472	0	True				
ANR	4822545	CallExpression	"dprintf ( D_FULLDEBUG , ""my_pclose: GetExitCodeProcess failed\\n"" )"		4822472	0					
ANR	4822546	Callee	dprintf		4822472	0					
ANR	4822547	Identifier	dprintf		4822472	0					
ANR	4822548	ArgumentList	D_FULLDEBUG		4822472	1					
ANR	4822549	Argument	D_FULLDEBUG		4822472	0					
ANR	4822550	Identifier	D_FULLDEBUG		4822472	0					
ANR	4822551	Argument	"""my_pclose: GetExitCodeProcess failed\\n"""		4822472	1					
ANR	4822552	PrimaryExpression	"""my_pclose: GetExitCodeProcess failed\\n"""		4822472	0					
ANR	4822553	ReturnStatement	return - 1 ;	252:2:7642:7651	4822472	1	True				
ANR	4822554	UnaryOperationExpression	- 1		4822472	0					
ANR	4822555	UnaryOperator	-		4822472	0					
ANR	4822556	PrimaryExpression	1		4822472	1					
ANR	4822557	ExpressionStatement	CloseHandle ( hChildProcess )	254:1:7657:7683	4822472	7	True				
ANR	4822558	CallExpression	CloseHandle ( hChildProcess )		4822472	0					
ANR	4822559	Callee	CloseHandle		4822472	0					
ANR	4822560	Identifier	CloseHandle		4822472	0					
ANR	4822561	ArgumentList	hChildProcess		4822472	1					
ANR	4822562	Argument	hChildProcess		4822472	0					
ANR	4822563	Identifier	hChildProcess		4822472	0					
ANR	4822564	ReturnStatement	return result ;	256:1:7687:7700	4822472	8	True				
ANR	4822565	Identifier	result		4822472	0					
ANR	4822566	ReturnType	int		4822472	1					
ANR	4822567	Identifier	my_pclose		4822472	2					
ANR	4822568	ParameterList	FILE * fp		4822472	3					
ANR	4822569	Parameter	FILE * fp	236:10:7250:7257	4822472	0	True				
ANR	4822570	ParameterType	FILE *		4822472	0					
ANR	4822571	Identifier	fp		4822472	1					
ANR	4822572	CFGEntryNode	ENTRY		4822472		True				
ANR	4822573	CFGExitNode	EXIT		4822472		True				
ANR	4822574	Symbol	hChildProcess		4822472						
ANR	4822575	Symbol	result		4822472						
ANR	4822576	Symbol	WaitForSingleObject		4822472						
ANR	4822577	Symbol	remove_child		4822472						
ANR	4822578	Symbol	& result		4822472						
ANR	4822579	Symbol	WAIT_OBJECT_0		4822472						
ANR	4822580	Symbol	fp		4822472						
ANR	4822581	Symbol	D_FULLDEBUG		4822472						
ANR	4822582	Symbol	GetExitCodeProcess		4822472						
ANR	4822583	Symbol	INFINITE		4822472						
ANR	4822584	Function	my_system	259:11:7716:7831							
ANR	4822585	FunctionDef	my_system (const char * cmd)		4822584	0					
ANR	4822586	CompoundStatement		261:0:7747:7831	4822584	0					
ANR	4822587	IdentifierDeclStatement	"FILE * fp = my_popen ( cmd , ""w"" , FALSE ) ;"	262:1:7750:7786	4822584	0	True				
ANR	4822588	IdentifierDecl	"* fp = my_popen ( cmd , ""w"" , FALSE )"		4822584	0					
ANR	4822589	IdentifierDeclType	FILE *		4822584	0					
ANR	4822590	Identifier	fp		4822584	1					
ANR	4822591	AssignmentExpression	"* fp = my_popen ( cmd , ""w"" , FALSE )"		4822584	2		=			
ANR	4822592	Identifier	fp		4822584	0					
ANR	4822593	CallExpression	"my_popen ( cmd , ""w"" , FALSE )"		4822584	1					
ANR	4822594	Callee	my_popen		4822584	0					
ANR	4822595	Identifier	my_popen		4822584	0					
ANR	4822596	ArgumentList	cmd		4822584	1					
ANR	4822597	Argument	cmd		4822584	0					
ANR	4822598	Identifier	cmd		4822584	0					
ANR	4822599	Argument	"""w"""		4822584	1					
ANR	4822600	PrimaryExpression	"""w"""		4822584	0					
ANR	4822601	Argument	FALSE		4822584	2					
ANR	4822602	Identifier	FALSE		4822584	0					
ANR	4822603	ReturnStatement	return ( fp != NULL ) ? my_pclose ( fp ) : - 1 ;	263:1:7789:7829	4822584	1	True				
ANR	4822604	ConditionalExpression	( fp != NULL ) ? my_pclose ( fp ) : - 1		4822584	0					
ANR	4822605	Condition	fp != NULL		4822584	0					
ANR	4822606	EqualityExpression	fp != NULL		4822584	0		!=			
ANR	4822607	Identifier	fp		4822584	0					
ANR	4822608	Identifier	NULL		4822584	1					
ANR	4822609	CallExpression	my_pclose ( fp )		4822584	1					
ANR	4822610	Callee	my_pclose		4822584	0					
ANR	4822611	Identifier	my_pclose		4822584	0					
ANR	4822612	ArgumentList	fp		4822584	1					
ANR	4822613	Argument	fp		4822584	0					
ANR	4822614	Identifier	fp		4822584	0					
ANR	4822615	UnaryOperationExpression	- 1		4822584	2					
ANR	4822616	UnaryOperator	-		4822584	0					
ANR	4822617	PrimaryExpression	1		4822584	1					
ANR	4822618	ReturnType	int		4822584	1					
ANR	4822619	Identifier	my_system		4822584	2					
ANR	4822620	ParameterList	const char * cmd		4822584	3					
ANR	4822621	Parameter	const char * cmd	260:10:7730:7744	4822584	0	True				
ANR	4822622	ParameterType	const char *		4822584	0					
ANR	4822623	Identifier	cmd		4822584	1					
ANR	4822624	CFGEntryNode	ENTRY		4822584		True				
ANR	4822625	CFGExitNode	EXIT		4822584		True				
ANR	4822626	Symbol	NULL		4822584						
ANR	4822627	Symbol	fp		4822584						
ANR	4822628	Symbol	FALSE		4822584						
ANR	4822629	Symbol	cmd		4822584						
ANR	4822630	Symbol	my_popen		4822584						
ANR	4822631	Symbol	my_pclose		4822584						
ANR	4822632	DeclStmt									
ANR	4822633	Decl							int	int	READ_END
ANR	4822634	DeclStmt									
ANR	4822635	Decl							int	int	WRITE_END
ANR	4822636	DeclStmt									
ANR	4822637	Decl							int	int [ 2 ]	pipe_d
ANR	4822638	Decl							int	int [ 2 ]	pipe_d2
ANR	4822639	DeclStmt									
ANR	4822640	Decl							int	int	parent_reads
ANR	4822641	DeclStmt									
ANR	4822642	Decl							uid_t	uid_t	euid
ANR	4822643	DeclStmt									
ANR	4822644	Decl							gid_t	gid_t	egid
ANR	4822645	DeclStmt									
ANR	4822646	Decl							pid_t	pid_t	pid
ANR	4822647	DeclStmt									
ANR	4822648	Decl							FILE	FILE *	retp
ANR	4822649	DeclStmt									
ANR	4822650	Decl							PrivSepForkExec	PrivSepForkExec	psforkexec
ANR	4822651	DeclStmt									
ANR	4822652	Decl							int	int	fd_flags
ANR	4822653	DeclStmt									
ANR	4822654	Decl							bool	bool	close_pipe_end
ANR	4822655	DeclStmt									
ANR	4822656	Decl							sigset_t	sigset_t	sigs
ANR	4822657	DeclStmt									
ANR	4822658	Decl							MyString	MyString	cmd
ANR	4822659	DeclStmt									
ANR	4822660	Decl							ArgList	ArgList	al
ANR	4822661	DeclStmt									
ANR	4822662	Decl							char	char * *	m_unix_env
ANR	4822663	DeclStmt									
ANR	4822664	Decl							char	char [ 10 ]	result_buf
ANR	4822665	DeclStmt									
ANR	4822666	Decl							int	int	len
ANR	4822667	DeclStmt									
ANR	4822668	Decl							int	int	exit_code
ANR	4822669	DeclStmt									
ANR	4822670	Decl							FILE	FILE *	fh
ANR	4822671	DeclStmt									
ANR	4822672	Decl							FILE	FILE *	fp
ANR	4822673	DeclStmt									
ANR	4822674	Decl							ArgList	ArgList	al
ANR	4822675	DeclStmt									
ANR	4822676	Decl							Env	Env	env
ANR	4822677	Function	my_popen_impl	508:0:13995:14331							
ANR	4822678	FunctionDef	"my_popen_impl (ArgList & args , const char * mode , int want_stderr , uid_t privsep_uid , Env * env_ptr)"		4822677	0					
ANR	4822679	CompoundStatement		514:0:14153:14331	4822677	0					
ANR	4822680	IdentifierDeclStatement	char * * string_array = args . GetStringArray ( ) ;	515:1:14156:14199	4822677	0	True				
ANR	4822681	IdentifierDecl	* * string_array = args . GetStringArray ( )		4822677	0					
ANR	4822682	IdentifierDeclType	char * *		4822677	0					
ANR	4822683	Identifier	string_array		4822677	1					
ANR	4822684	AssignmentExpression	* * string_array = args . GetStringArray ( )		4822677	2		=			
ANR	4822685	Identifier	string_array		4822677	0					
ANR	4822686	CallExpression	args . GetStringArray ( )		4822677	1					
ANR	4822687	Callee	args . GetStringArray		4822677	0					
ANR	4822688	MemberAccess	args . GetStringArray		4822677	0					
ANR	4822689	Identifier	args		4822677	0					
ANR	4822690	Identifier	GetStringArray		4822677	1					
ANR	4822691	ArgumentList			4822677	1					
ANR	4822692	IdentifierDeclStatement	"FILE * fp = my_popenv_impl ( string_array , mode , want_stderr , privsep_uid , env_ptr ) ;"	516:1:14202:14282	4822677	1	True				
ANR	4822693	IdentifierDecl	"* fp = my_popenv_impl ( string_array , mode , want_stderr , privsep_uid , env_ptr )"		4822677	0					
ANR	4822694	IdentifierDeclType	FILE *		4822677	0					
ANR	4822695	Identifier	fp		4822677	1					
ANR	4822696	AssignmentExpression	"* fp = my_popenv_impl ( string_array , mode , want_stderr , privsep_uid , env_ptr )"		4822677	2		=			
ANR	4822697	Identifier	fp		4822677	0					
ANR	4822698	CallExpression	"my_popenv_impl ( string_array , mode , want_stderr , privsep_uid , env_ptr )"		4822677	1					
ANR	4822699	Callee	my_popenv_impl		4822677	0					
ANR	4822700	Identifier	my_popenv_impl		4822677	0					
ANR	4822701	ArgumentList	string_array		4822677	1					
ANR	4822702	Argument	string_array		4822677	0					
ANR	4822703	Identifier	string_array		4822677	0					
ANR	4822704	Argument	mode		4822677	1					
ANR	4822705	Identifier	mode		4822677	0					
ANR	4822706	Argument	want_stderr		4822677	2					
ANR	4822707	Identifier	want_stderr		4822677	0					
ANR	4822708	Argument	privsep_uid		4822677	3					
ANR	4822709	Identifier	privsep_uid		4822677	0					
ANR	4822710	Argument	env_ptr		4822677	4					
ANR	4822711	Identifier	env_ptr		4822677	0					
ANR	4822712	ExpressionStatement	deleteStringArray ( string_array )	517:1:14285:14316	4822677	2	True				
ANR	4822713	CallExpression	deleteStringArray ( string_array )		4822677	0					
ANR	4822714	Callee	deleteStringArray		4822677	0					
ANR	4822715	Identifier	deleteStringArray		4822677	0					
ANR	4822716	ArgumentList	string_array		4822677	1					
ANR	4822717	Argument	string_array		4822677	0					
ANR	4822718	Identifier	string_array		4822677	0					
ANR	4822719	ReturnStatement	return fp ;	519:1:14320:14329	4822677	3	True				
ANR	4822720	Identifier	fp		4822677	0					
ANR	4822721	ReturnType	static FILE *		4822677	1					
ANR	4822722	Identifier	my_popen_impl		4822677	2					
ANR	4822723	ParameterList	"ArgList & args , const char * mode , int want_stderr , uid_t privsep_uid , Env * env_ptr"		4822677	3					
ANR	4822724	Parameter	ArgList & args	509:14:14023:14035	4822677	0	True				
ANR	4822725	ParameterType	ArgList &		4822677	0					
ANR	4822726	Identifier	args		4822677	1					
ANR	4822727	Parameter	const char * mode	510:14:14052:14067	4822677	1	True				
ANR	4822728	ParameterType	const char *		4822677	0					
ANR	4822729	Identifier	mode		4822677	1					
ANR	4822730	Parameter	int want_stderr	511:14:14084:14098	4822677	2	True				
ANR	4822731	ParameterType	int		4822677	0					
ANR	4822732	Identifier	want_stderr		4822677	1					
ANR	4822733	Parameter	uid_t privsep_uid	512:14:14115:14131	4822677	3	True				
ANR	4822734	ParameterType	uid_t		4822677	0					
ANR	4822735	Identifier	privsep_uid		4822677	1					
ANR	4822736	Parameter	Env * env_ptr	513:5:14139:14150	4822677	4	True				
ANR	4822737	ParameterType	Env *		4822677	0					
ANR	4822738	Identifier	env_ptr		4822677	1					
ANR	4822739	CFGEntryNode	ENTRY		4822677		True				
ANR	4822740	CFGExitNode	EXIT		4822677		True				
ANR	4822741	Symbol	args		4822677						
ANR	4822742	Symbol	mode		4822677						
ANR	4822743	Symbol	want_stderr		4822677						
ANR	4822744	Symbol	env_ptr		4822677						
ANR	4822745	Symbol	fp		4822677						
ANR	4822746	Symbol	string_array		4822677						
ANR	4822747	Symbol	privsep_uid		4822677						
ANR	4822748	Symbol	my_popenv_impl		4822677						
ANR	4822749	Symbol	args . GetStringArray		4822677						
ANR	4822750	Function	my_popen	522:0:14334:14483							
ANR	4822751	FunctionDef	"my_popen (ArgList & args , const char * mode , int want_stderr , Env * env_ptr)"		4822750	0					
ANR	4822752	CompoundStatement		524:0:14413:14483	4822750	0					
ANR	4822753	ReturnStatement	"return my_popen_impl ( args , mode , want_stderr , ( uid_t ) - 1 , env_ptr ) ;"	525:1:14416:14481	4822750	0	True				
ANR	4822754	CallExpression	"my_popen_impl ( args , mode , want_stderr , ( uid_t ) - 1 , env_ptr )"		4822750	0					
ANR	4822755	Callee	my_popen_impl		4822750	0					
ANR	4822756	Identifier	my_popen_impl		4822750	0					
ANR	4822757	ArgumentList	args		4822750	1					
ANR	4822758	Argument	args		4822750	0					
ANR	4822759	Identifier	args		4822750	0					
ANR	4822760	Argument	mode		4822750	1					
ANR	4822761	Identifier	mode		4822750	0					
ANR	4822762	Argument	want_stderr		4822750	2					
ANR	4822763	Identifier	want_stderr		4822750	0					
ANR	4822764	Argument	( uid_t ) - 1		4822750	3					
ANR	4822765	CastExpression	( uid_t ) - 1		4822750	0					
ANR	4822766	CastTarget	uid_t		4822750	0					
ANR	4822767	UnaryOperationExpression	- 1		4822750	1					
ANR	4822768	UnaryOperator	-		4822750	0					
ANR	4822769	PrimaryExpression	1		4822750	1					
ANR	4822770	Argument	env_ptr		4822750	4					
ANR	4822771	Identifier	env_ptr		4822750	0					
ANR	4822772	ReturnType	FILE *		4822750	1					
ANR	4822773	Identifier	my_popen		4822750	2					
ANR	4822774	ParameterList	"ArgList & args , const char * mode , int want_stderr , Env * env_ptr"		4822750	3					
ANR	4822775	Parameter	ArgList & args	523:9:14349:14361	4822750	0	True				
ANR	4822776	ParameterType	ArgList &		4822750	0					
ANR	4822777	Identifier	args		4822750	1					
ANR	4822778	Parameter	const char * mode	523:24:14364:14379	4822750	1	True				
ANR	4822779	ParameterType	const char *		4822750	0					
ANR	4822780	Identifier	mode		4822750	1					
ANR	4822781	Parameter	int want_stderr	523:42:14382:14396	4822750	2	True				
ANR	4822782	ParameterType	int		4822750	0					
ANR	4822783	Identifier	want_stderr		4822750	1					
ANR	4822784	Parameter	Env * env_ptr	523:59:14399:14410	4822750	3	True				
ANR	4822785	ParameterType	Env *		4822750	0					
ANR	4822786	Identifier	env_ptr		4822750	1					
ANR	4822787	CFGEntryNode	ENTRY		4822750		True				
ANR	4822788	CFGExitNode	EXIT		4822750		True				
ANR	4822789	Symbol	args		4822750						
ANR	4822790	Symbol	mode		4822750						
ANR	4822791	Symbol	want_stderr		4822750						
ANR	4822792	Symbol	env_ptr		4822750						
ANR	4822793	Symbol	my_popen_impl		4822750						
ANR	4822794	Function	privsep_popen	528:0:14486:14645							
ANR	4822795	FunctionDef	"privsep_popen (ArgList & args , const char * mode , int want_stderr , uid_t uid , Env * env_ptr)"		4822794	0					
ANR	4822796	CompoundStatement		530:0:14581:14645	4822794	0					
ANR	4822797	ReturnStatement	"return my_popen_impl ( args , mode , want_stderr , uid , env_ptr ) ;"	531:1:14584:14643	4822794	0	True				
ANR	4822798	CallExpression	"my_popen_impl ( args , mode , want_stderr , uid , env_ptr )"		4822794	0					
ANR	4822799	Callee	my_popen_impl		4822794	0					
ANR	4822800	Identifier	my_popen_impl		4822794	0					
ANR	4822801	ArgumentList	args		4822794	1					
ANR	4822802	Argument	args		4822794	0					
ANR	4822803	Identifier	args		4822794	0					
ANR	4822804	Argument	mode		4822794	1					
ANR	4822805	Identifier	mode		4822794	0					
ANR	4822806	Argument	want_stderr		4822794	2					
ANR	4822807	Identifier	want_stderr		4822794	0					
ANR	4822808	Argument	uid		4822794	3					
ANR	4822809	Identifier	uid		4822794	0					
ANR	4822810	Argument	env_ptr		4822794	4					
ANR	4822811	Identifier	env_ptr		4822794	0					
ANR	4822812	ReturnType	FILE *		4822794	1					
ANR	4822813	Identifier	privsep_popen		4822794	2					
ANR	4822814	ParameterList	"ArgList & args , const char * mode , int want_stderr , uid_t uid , Env * env_ptr"		4822794	3					
ANR	4822815	Parameter	ArgList & args	529:14:14506:14518	4822794	0	True				
ANR	4822816	ParameterType	ArgList &		4822794	0					
ANR	4822817	Identifier	args		4822794	1					
ANR	4822818	Parameter	const char * mode	529:29:14521:14536	4822794	1	True				
ANR	4822819	ParameterType	const char *		4822794	0					
ANR	4822820	Identifier	mode		4822794	1					
ANR	4822821	Parameter	int want_stderr	529:47:14539:14553	4822794	2	True				
ANR	4822822	ParameterType	int		4822794	0					
ANR	4822823	Identifier	want_stderr		4822794	1					
ANR	4822824	Parameter	uid_t uid	529:64:14556:14564	4822794	3	True				
ANR	4822825	ParameterType	uid_t		4822794	0					
ANR	4822826	Identifier	uid		4822794	1					
ANR	4822827	Parameter	Env * env_ptr	529:75:14567:14578	4822794	4	True				
ANR	4822828	ParameterType	Env *		4822794	0					
ANR	4822829	Identifier	env_ptr		4822794	1					
ANR	4822830	CFGEntryNode	ENTRY		4822794		True				
ANR	4822831	CFGExitNode	EXIT		4822794		True				
ANR	4822832	Symbol	args		4822794						
ANR	4822833	Symbol	mode		4822794						
ANR	4822834	Symbol	want_stderr		4822794						
ANR	4822835	Symbol	uid		4822794						
ANR	4822836	Symbol	env_ptr		4822794						
ANR	4822837	Symbol	my_popen_impl		4822794						
ANR	4822838	Function	my_pclose	534:11:14659:15038							
ANR	4822839	FunctionDef	my_pclose (FILE * fp)		4822838	0					
ANR	4822840	CompoundStatement		536:0:14683:15038	4822838	0					
ANR	4822841	IdentifierDeclStatement	int status ;	537:1:14686:14698	4822838	0	True				
ANR	4822842	IdentifierDecl	status		4822838	0					
ANR	4822843	IdentifierDeclType	int		4822838	0					
ANR	4822844	Identifier	status		4822838	1					
ANR	4822845	IdentifierDeclStatement	pid_t pid ;	538:1:14701:14712	4822838	1	True				
ANR	4822846	IdentifierDecl	pid		4822838	0					
ANR	4822847	IdentifierDeclType	pid_t		4822838	0					
ANR	4822848	Identifier	pid		4822838	1					
ANR	4822849	ExpressionStatement	pid = remove_child ( fp )	541:1:14751:14773	4822838	2	True				
ANR	4822850	AssignmentExpression	pid = remove_child ( fp )		4822838	0		=			
ANR	4822851	Identifier	pid		4822838	0					
ANR	4822852	CallExpression	remove_child ( fp )		4822838	1					
ANR	4822853	Callee	remove_child		4822838	0					
ANR	4822854	Identifier	remove_child		4822838	0					
ANR	4822855	ArgumentList	fp		4822838	1					
ANR	4822856	Argument	fp		4822838	0					
ANR	4822857	Identifier	fp		4822838	0					
ANR	4822858	ExpressionStatement	( void ) fclose ( fp )	544:1:14800:14818	4822838	3	True				
ANR	4822859	CastExpression	( void ) fclose ( fp )		4822838	0					
ANR	4822860	CastTarget	void		4822838	0					
ANR	4822861	CallExpression	fclose ( fp )		4822838	1					
ANR	4822862	Callee	fclose		4822838	0					
ANR	4822863	Identifier	fclose		4822838	0					
ANR	4822864	ArgumentList	fp		4822838	1					
ANR	4822865	Argument	fp		4822838	0					
ANR	4822866	Identifier	fp		4822838	0					
ANR	4822867	WhileStatement	"while ( waitpid ( pid , & status , 0 ) < 0 )"		4822838	4					
ANR	4822868	Condition	"waitpid ( pid , & status , 0 ) < 0"	547:8:14887:14912	4822838	0	True				
ANR	4822869	RelationalExpression	"waitpid ( pid , & status , 0 ) < 0"		4822838	0		<			
ANR	4822870	CallExpression	"waitpid ( pid , & status , 0 )"		4822838	0					
ANR	4822871	Callee	waitpid		4822838	0					
ANR	4822872	Identifier	waitpid		4822838	0					
ANR	4822873	ArgumentList	pid		4822838	1					
ANR	4822874	Argument	pid		4822838	0					
ANR	4822875	Identifier	pid		4822838	0					
ANR	4822876	Argument	& status		4822838	1					
ANR	4822877	UnaryOperationExpression	& status		4822838	0					
ANR	4822878	UnaryOperator	&		4822838	0					
ANR	4822879	Identifier	status		4822838	1					
ANR	4822880	Argument	0		4822838	2					
ANR	4822881	PrimaryExpression	0		4822838	0					
ANR	4822882	PrimaryExpression	0		4822838	1					
ANR	4822883	CompoundStatement		12:37:232:232	4822838	1					
ANR	4822884	IfStatement	if ( errno != EINTR )		4822838	0					
ANR	4822885	Condition	errno != EINTR	548:6:14924:14937	4822838	0	True				
ANR	4822886	EqualityExpression	errno != EINTR		4822838	0		!=			
ANR	4822887	Identifier	errno		4822838	0					
ANR	4822888	Identifier	EINTR		4822838	1					
ANR	4822889	CompoundStatement		13:23:257:257	4822838	1					
ANR	4822890	ExpressionStatement	status = - 1	549:3:14946:14957	4822838	0	True				
ANR	4822891	AssignmentExpression	status = - 1		4822838	0		=			
ANR	4822892	Identifier	status		4822838	0					
ANR	4822893	UnaryOperationExpression	- 1		4822838	1					
ANR	4822894	UnaryOperator	-		4822838	0					
ANR	4822895	PrimaryExpression	1		4822838	1					
ANR	4822896	BreakStatement	break ;	550:3:14962:14967	4822838	1	True				
ANR	4822897	ReturnStatement	return status ;	555:1:15023:15036	4822838	5	True				
ANR	4822898	Identifier	status		4822838	0					
ANR	4822899	ReturnType	int		4822838	1					
ANR	4822900	Identifier	my_pclose		4822838	2					
ANR	4822901	ParameterList	FILE * fp		4822838	3					
ANR	4822902	Parameter	FILE * fp	535:10:14673:14680	4822838	0	True				
ANR	4822903	ParameterType	FILE *		4822838	0					
ANR	4822904	Identifier	fp		4822838	1					
ANR	4822905	CFGEntryNode	ENTRY		4822838		True				
ANR	4822906	CFGExitNode	EXIT		4822838		True				
ANR	4822907	Symbol	errno		4822838						
ANR	4822908	Symbol	remove_child		4822838						
ANR	4822909	Symbol	EINTR		4822838						
ANR	4822910	Symbol	fp		4822838						
ANR	4822911	Symbol	pid		4822838						
ANR	4822912	Symbol	& status		4822838						
ANR	4822913	Symbol	status		4822838						
ANR	4822914	Symbol	waitpid		4822838						
ANR	4822915	DeclStmt									
ANR	4822916	Decl							FILE	FILE *	fp
ANR	4822917	Function	my_system	566:0:15199:15335							
ANR	4822918	FunctionDef	"my_system (ArgList & args , Env * env_ptr)"		4822917	0					
ANR	4822919	CompoundStatement		568:0:15242:15335	4822917	0					
ANR	4822920	IdentifierDeclStatement	"FILE * fp = my_popen ( args , ""w"" , FALSE , env_ptr ) ;"	569:1:15245:15291	4822917	0	True				
ANR	4822921	IdentifierDecl	"* fp = my_popen ( args , ""w"" , FALSE , env_ptr )"		4822917	0					
ANR	4822922	IdentifierDeclType	FILE *		4822917	0					
ANR	4822923	Identifier	fp		4822917	1					
ANR	4822924	AssignmentExpression	"* fp = my_popen ( args , ""w"" , FALSE , env_ptr )"		4822917	2		=			
ANR	4822925	Identifier	fp		4822917	0					
ANR	4822926	CallExpression	"my_popen ( args , ""w"" , FALSE , env_ptr )"		4822917	1					
ANR	4822927	Callee	my_popen		4822917	0					
ANR	4822928	Identifier	my_popen		4822917	0					
ANR	4822929	ArgumentList	args		4822917	1					
ANR	4822930	Argument	args		4822917	0					
ANR	4822931	Identifier	args		4822917	0					
ANR	4822932	Argument	"""w"""		4822917	1					
ANR	4822933	PrimaryExpression	"""w"""		4822917	0					
ANR	4822934	Argument	FALSE		4822917	2					
ANR	4822935	Identifier	FALSE		4822917	0					
ANR	4822936	Argument	env_ptr		4822917	3					
ANR	4822937	Identifier	env_ptr		4822917	0					
ANR	4822938	ReturnStatement	return ( fp != NULL ) ? my_pclose ( fp ) : - 1 ;	570:1:15294:15333	4822917	1	True				
ANR	4822939	ConditionalExpression	( fp != NULL ) ? my_pclose ( fp ) : - 1		4822917	0					
ANR	4822940	Condition	fp != NULL		4822917	0					
ANR	4822941	EqualityExpression	fp != NULL		4822917	0		!=			
ANR	4822942	Identifier	fp		4822917	0					
ANR	4822943	Identifier	NULL		4822917	1					
ANR	4822944	CallExpression	my_pclose ( fp )		4822917	1					
ANR	4822945	Callee	my_pclose		4822917	0					
ANR	4822946	Identifier	my_pclose		4822917	0					
ANR	4822947	ArgumentList	fp		4822917	1					
ANR	4822948	Argument	fp		4822917	0					
ANR	4822949	Identifier	fp		4822917	0					
ANR	4822950	UnaryOperationExpression	- 1		4822917	2					
ANR	4822951	UnaryOperator	-		4822917	0					
ANR	4822952	PrimaryExpression	1		4822917	1					
ANR	4822953	ReturnType	int		4822917	1					
ANR	4822954	Identifier	my_system		4822917	2					
ANR	4822955	ParameterList	"ArgList & args , Env * env_ptr"		4822917	3					
ANR	4822956	Parameter	ArgList & args	567:10:15213:15225	4822917	0	True				
ANR	4822957	ParameterType	ArgList &		4822917	0					
ANR	4822958	Identifier	args		4822917	1					
ANR	4822959	Parameter	Env * env_ptr	567:25:15228:15239	4822917	1	True				
ANR	4822960	ParameterType	Env *		4822917	0					
ANR	4822961	Identifier	env_ptr		4822917	1					
ANR	4822962	CFGEntryNode	ENTRY		4822917		True				
ANR	4822963	CFGExitNode	EXIT		4822917		True				
ANR	4822964	Symbol	args		4822917						
ANR	4822965	Symbol	NULL		4822917						
ANR	4822966	Symbol	env_ptr		4822917						
ANR	4822967	Symbol	FALSE		4822917						
ANR	4822968	Symbol	fp		4822917						
ANR	4822969	Symbol	my_popen		4822917						
ANR	4822970	Symbol	my_pclose		4822917						
ANR	4822971	DeclStmt									
ANR	4822972	Decl							pid_t	pid_t	ChildPid
ANR	4822973	Function	my_spawnl	595:11:15915:16432							
ANR	4822974	FunctionDef	my_spawnl (const char * cmd)		4822973	0					
ANR	4822975	CompoundStatement		597:0:15953:16432	4822973	0					
ANR	4822976	IdentifierDeclStatement	int rval ;	598:1:15956:15965	4822973	0	True				
ANR	4822977	IdentifierDecl	rval		4822973	0					
ANR	4822978	IdentifierDeclType	int		4822973	0					
ANR	4822979	Identifier	rval		4822973	1					
ANR	4822980	IdentifierDeclStatement	int argno = 0 ;	599:1:15968:15982	4822973	1	True				
ANR	4822981	IdentifierDecl	argno = 0		4822973	0					
ANR	4822982	IdentifierDeclType	int		4822973	0					
ANR	4822983	Identifier	argno		4822973	1					
ANR	4822984	AssignmentExpression	argno = 0		4822973	2		=			
ANR	4822985	Identifier	argno		4822973	0					
ANR	4822986	PrimaryExpression	0		4822973	1					
ANR	4822987	IdentifierDeclStatement	va_list va ;	601:4:15989:15999	4822973	2	True				
ANR	4822988	IdentifierDecl	va		4822973	0					
ANR	4822989	IdentifierDeclType	va_list		4822973	0					
ANR	4822990	Identifier	va		4822973	1					
ANR	4822991	IdentifierDeclStatement	const char * argv [ MAXARGS + 1 ] ;	602:1:16002:16032	4822973	3	True				
ANR	4822992	IdentifierDecl	* argv [ MAXARGS + 1 ]		4822973	0					
ANR	4822993	IdentifierDeclType	const char * [ MAXARGS + 1 ]		4822973	0					
ANR	4822994	Identifier	argv		4822973	1					
ANR	4822995	AdditiveExpression	MAXARGS + 1		4822973	2		+			
ANR	4822996	Identifier	MAXARGS		4822973	0					
ANR	4822997	PrimaryExpression	1		4822973	1					
ANR	4822998	ExpressionStatement	"va_start ( va , cmd )"	605:4:16087:16106	4822973	4	True				
ANR	4822999	CallExpression	"va_start ( va , cmd )"		4822973	0					
ANR	4823000	Callee	va_start		4822973	0					
ANR	4823001	Identifier	va_start		4822973	0					
ANR	4823002	ArgumentList	va		4822973	1					
ANR	4823003	Argument	va		4822973	0					
ANR	4823004	Identifier	va		4822973	0					
ANR	4823005	Argument	cmd		4822973	1					
ANR	4823006	Identifier	cmd		4822973	0					
ANR	4823007	ForStatement	for ( argno = 0 ; argno < MAXARGS ; argno ++ )		4822973	5					
ANR	4823008	ForInit	argno = 0 ;	606:6:16114:16123	4822973	0	True				
ANR	4823009	AssignmentExpression	argno = 0		4822973	0		=			
ANR	4823010	Identifier	argno		4822973	0					
ANR	4823011	PrimaryExpression	0		4822973	1					
ANR	4823012	Condition	argno < MAXARGS	606:18:16126:16140	4822973	1	True				
ANR	4823013	RelationalExpression	argno < MAXARGS		4822973	0		<			
ANR	4823014	Identifier	argno		4822973	0					
ANR	4823015	Identifier	MAXARGS		4822973	1					
ANR	4823016	PostIncDecOperationExpression	argno ++	606:36:16144:16150	4822973	2	True				
ANR	4823017	Identifier	argno		4822973	0					
ANR	4823018	IncDec	++		4822973	1					
ANR	4823019	CompoundStatement		11:2:204:217	4822973	3					
ANR	4823020	IdentifierDeclStatement	const char * p ;	607:2:16158:16171	4822973	0	True				
ANR	4823021	IdentifierDecl	* p		4822973	0					
ANR	4823022	IdentifierDeclType	const char *		4822973	0					
ANR	4823023	Identifier	p		4822973	1					
ANR	4823024	Statement	p	608:2:16175:16175	4822973	1	True				
ANR	4823025	Statement	=	608:4:16177:16177	4822973	2	True				
ANR	4823026	Statement	va_arg	608:6:16179:16184	4822973	3	True				
ANR	4823027	Statement	(	608:12:16185:16185	4822973	4	True				
ANR	4823028	Statement	va	608:14:16187:16188	4822973	5	True				
ANR	4823029	Statement	","	608:16:16189:16189	4822973	6	True				
ANR	4823030	Statement	const	608:18:16191:16195	4822973	7	True				
ANR	4823031	Statement	char	608:24:16197:16200	4822973	8	True				
ANR	4823032	Statement	*	608:29:16202:16202	4822973	9	True				
ANR	4823033	Statement	)	608:31:16204:16204	4822973	10	True				
ANR	4823034	ExpressionStatement		608:32:16205:16205	4822973	11	True				
ANR	4823035	ExpressionStatement	argv [ argno ] = p	609:2:16209:16224	4822973	12	True				
ANR	4823036	AssignmentExpression	argv [ argno ] = p		4822973	0		=			
ANR	4823037	ArrayIndexing	argv [ argno ]		4822973	0					
ANR	4823038	Identifier	argv		4822973	0					
ANR	4823039	Identifier	argno		4822973	1					
ANR	4823040	Identifier	p		4822973	1					
ANR	4823041	IfStatement	if ( ! p )		4822973	13					
ANR	4823042	Condition	! p	610:7:16233:16235	4822973	0	True				
ANR	4823043	UnaryOperationExpression	! p		4822973	0					
ANR	4823044	UnaryOperator	!		4822973	0					
ANR	4823045	Identifier	p		4822973	1					
ANR	4823046	CompoundStatement		14:13:285:285	4822973	1					
ANR	4823047	BreakStatement	break ;	611:3:16244:16249	4822973	0	True				
ANR	4823048	ExpressionStatement	argv [ MAXARGS ] = NULL	614:1:16259:16279	4822973	6	True				
ANR	4823049	AssignmentExpression	argv [ MAXARGS ] = NULL		4822973	0		=			
ANR	4823050	ArrayIndexing	argv [ MAXARGS ]		4822973	0					
ANR	4823051	Identifier	argv		4822973	0					
ANR	4823052	Identifier	MAXARGS		4822973	1					
ANR	4823053	Identifier	NULL		4822973	1					
ANR	4823054	ExpressionStatement	va_end ( va )	615:4:16285:16297	4822973	7	True				
ANR	4823055	CallExpression	va_end ( va )		4822973	0					
ANR	4823056	Callee	va_end		4822973	0					
ANR	4823057	Identifier	va_end		4822973	0					
ANR	4823058	ArgumentList	va		4822973	1					
ANR	4823059	Argument	va		4822973	0					
ANR	4823060	Identifier	va		4822973	0					
ANR	4823061	Statement	rval	618:4:16349:16352	4822973	8	True				
ANR	4823062	Statement	=	618:9:16354:16354	4822973	9	True				
ANR	4823063	Statement	my_spawnv	618:11:16356:16364	4822973	10	True				
ANR	4823064	Statement	(	618:20:16365:16365	4822973	11	True				
ANR	4823065	Statement	cmd	618:22:16367:16369	4822973	12	True				
ANR	4823066	Statement	","	618:25:16370:16370	4822973	13	True				
ANR	4823067	Statement	const_cast	618:27:16372:16381	4822973	14	True				
ANR	4823068	Statement	<	618:37:16382:16382	4822973	15	True				
ANR	4823069	Statement	char	618:38:16383:16386	4822973	16	True				
ANR	4823070	Statement	*	618:43:16388:16388	4822973	17	True				
ANR	4823071	Statement	const	618:44:16389:16393	4822973	18	True				
ANR	4823072	Statement	*	618:49:16394:16394	4822973	19	True				
ANR	4823073	Statement	>	618:50:16395:16395	4822973	20	True				
ANR	4823074	Statement	(	618:51:16396:16396	4822973	21	True				
ANR	4823075	Statement	argv	618:52:16397:16400	4822973	22	True				
ANR	4823076	Statement	)	618:56:16401:16401	4822973	23	True				
ANR	4823077	Statement	)	618:57:16402:16402	4822973	24	True				
ANR	4823078	ExpressionStatement		618:58:16403:16403	4822973	25	True				
ANR	4823079	ReturnStatement	return rval ;	621:1:16419:16430	4822973	26	True				
ANR	4823080	Identifier	rval		4822973	0					
ANR	4823081	ReturnType	int		4822973	1					
ANR	4823082	Identifier	my_spawnl		4822973	2					
ANR	4823083	ParameterList	const char * cmd		4822973	3					
ANR	4823084	Parameter	const char * cmd	596:11:15930:15944	4822973	0	True				
ANR	4823085	ParameterType	const char *		4822973	0					
ANR	4823086	Identifier	cmd		4822973	1					
ANR	4823087	CFGEntryNode	ENTRY		4822973		True				
ANR	4823088	CFGExitNode	EXIT		4822973		True				
ANR	4823089	Symbol	MAXARGS		4822973						
ANR	4823090	Symbol	p		4822973						
ANR	4823091	Symbol	NULL		4822973						
ANR	4823092	Symbol	rval		4822973						
ANR	4823093	Symbol	* argv		4822973						
ANR	4823094	Symbol	* MAXARGS		4822973						
ANR	4823095	Symbol	cmd		4822973						
ANR	4823096	Symbol	argno		4822973						
ANR	4823097	Symbol	va		4822973						
ANR	4823098	Symbol	* argno		4822973						
ANR	4823099	Symbol	argv		4822973						
ANR	4823100	DeclStmt									
ANR	4823101	Decl							int	int	status
ANR	4823102	DeclStmt									
ANR	4823103	Decl							uid_t	uid_t	euid
ANR	4823104	DeclStmt									
ANR	4823105	Decl							gid_t	gid_t	egid
