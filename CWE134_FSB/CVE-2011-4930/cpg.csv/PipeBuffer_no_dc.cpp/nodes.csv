command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	508314	File	data/converged/CVE-2011-4930_htcondor/PipeBuffer_no_dc.cpp								
ANR	508315	Function	PipeBuffer :: PipeBuffer	25:0:916:1140							
ANR	508316	FunctionDef	PipeBuffer :: PipeBuffer (int _pipe_end)		508315	0					
ANR	508317	CompoundStatement		25:39:955:1140	508315	0					
ANR	508318	ExpressionStatement	pipe_end = _pipe_end	26:1:958:978	508315	0	True				
ANR	508319	AssignmentExpression	pipe_end = _pipe_end		508315	0		=			
ANR	508320	Identifier	pipe_end		508315	0					
ANR	508321	Identifier	_pipe_end		508315	1					
ANR	508322	ExpressionStatement	buffer . reserve ( 5000 )	27:2:982:1003	508315	1	True				
ANR	508323	CallExpression	buffer . reserve ( 5000 )		508315	0					
ANR	508324	Callee	buffer . reserve		508315	0					
ANR	508325	MemberAccess	buffer . reserve		508315	0					
ANR	508326	Identifier	buffer		508315	0					
ANR	508327	Identifier	reserve		508315	1					
ANR	508328	ArgumentList	5000		508315	1					
ANR	508329	Argument	5000		508315	0					
ANR	508330	PrimaryExpression	5000		508315	0					
ANR	508331	ExpressionStatement	error = false	28:1:1006:1019	508315	2	True				
ANR	508332	AssignmentExpression	error = false		508315	0		=			
ANR	508333	Identifier	error		508315	0					
ANR	508334	Identifier	false		508315	1					
ANR	508335	ExpressionStatement	eof = false	29:1:1022:1033	508315	3	True				
ANR	508336	AssignmentExpression	eof = false		508315	0		=			
ANR	508337	Identifier	eof		508315	0					
ANR	508338	Identifier	false		508315	1					
ANR	508339	ExpressionStatement	last_char_was_escape = false	30:1:1036:1064	508315	4	True				
ANR	508340	AssignmentExpression	last_char_was_escape = false		508315	0		=			
ANR	508341	Identifier	last_char_was_escape		508315	0					
ANR	508342	Identifier	false		508315	1					
ANR	508343	ExpressionStatement	readahead_length = 0	31:1:1067:1087	508315	5	True				
ANR	508344	AssignmentExpression	readahead_length = 0		508315	0		=			
ANR	508345	Identifier	readahead_length		508315	0					
ANR	508346	PrimaryExpression	0		508315	1					
ANR	508347	ExpressionStatement	readahead_index = 0	32:1:1090:1109	508315	6	True				
ANR	508348	AssignmentExpression	readahead_index = 0		508315	0		=			
ANR	508349	Identifier	readahead_index		508315	0					
ANR	508350	PrimaryExpression	0		508315	1					
ANR	508351	ExpressionStatement	readahead_buffer [ 0 ] = '\\0'	33:1:1112:1138	508315	7	True				
ANR	508352	AssignmentExpression	readahead_buffer [ 0 ] = '\\0'		508315	0		=			
ANR	508353	ArrayIndexing	readahead_buffer [ 0 ]		508315	0					
ANR	508354	Identifier	readahead_buffer		508315	0					
ANR	508355	PrimaryExpression	0		508315	1					
ANR	508356	PrimaryExpression	'\\0'		508315	1					
ANR	508357	Identifier	PipeBuffer :: PipeBuffer		508315	1					
ANR	508358	ParameterList	int _pipe_end		508315	2					
ANR	508359	Parameter	int _pipe_end	25:24:940:952	508315	0	True				
ANR	508360	ParameterType	int		508315	0					
ANR	508361	Identifier	_pipe_end		508315	1					
ANR	508362	CFGEntryNode	ENTRY		508315		True				
ANR	508363	CFGExitNode	EXIT		508315		True				
ANR	508364	Symbol	* readahead_buffer		508315						
ANR	508365	Symbol	pipe_end		508315						
ANR	508366	Symbol	last_char_was_escape		508315						
ANR	508367	Symbol	_pipe_end		508315						
ANR	508368	Symbol	false		508315						
ANR	508369	Symbol	readahead_index		508315						
ANR	508370	Symbol	readahead_buffer		508315						
ANR	508371	Symbol	buffer		508315						
ANR	508372	Symbol	readahead_length		508315						
ANR	508373	Symbol	error		508315						
ANR	508374	Symbol	eof		508315						
ANR	508375	Function	PipeBuffer :: PipeBuffer	36:0:1143:1346							
ANR	508376	FunctionDef	PipeBuffer :: PipeBuffer ()		508375	0					
ANR	508377	CompoundStatement		36:25:1168:1346	508375	0					
ANR	508378	ExpressionStatement	pipe_end = - 1	37:1:1171:1184	508375	0	True				
ANR	508379	AssignmentExpression	pipe_end = - 1		508375	0		=			
ANR	508380	Identifier	pipe_end		508375	0					
ANR	508381	UnaryOperationExpression	- 1		508375	1					
ANR	508382	UnaryOperator	-		508375	0					
ANR	508383	PrimaryExpression	1		508375	1					
ANR	508384	ExpressionStatement	buffer . reserve ( 5000 )	38:2:1188:1209	508375	1	True				
ANR	508385	CallExpression	buffer . reserve ( 5000 )		508375	0					
ANR	508386	Callee	buffer . reserve		508375	0					
ANR	508387	MemberAccess	buffer . reserve		508375	0					
ANR	508388	Identifier	buffer		508375	0					
ANR	508389	Identifier	reserve		508375	1					
ANR	508390	ArgumentList	5000		508375	1					
ANR	508391	Argument	5000		508375	0					
ANR	508392	PrimaryExpression	5000		508375	0					
ANR	508393	ExpressionStatement	error = false	39:1:1212:1225	508375	2	True				
ANR	508394	AssignmentExpression	error = false		508375	0		=			
ANR	508395	Identifier	error		508375	0					
ANR	508396	Identifier	false		508375	1					
ANR	508397	ExpressionStatement	eof = false	40:1:1228:1239	508375	3	True				
ANR	508398	AssignmentExpression	eof = false		508375	0		=			
ANR	508399	Identifier	eof		508375	0					
ANR	508400	Identifier	false		508375	1					
ANR	508401	ExpressionStatement	last_char_was_escape = false	41:1:1242:1270	508375	4	True				
ANR	508402	AssignmentExpression	last_char_was_escape = false		508375	0		=			
ANR	508403	Identifier	last_char_was_escape		508375	0					
ANR	508404	Identifier	false		508375	1					
ANR	508405	ExpressionStatement	readahead_length = 0	42:1:1273:1293	508375	5	True				
ANR	508406	AssignmentExpression	readahead_length = 0		508375	0		=			
ANR	508407	Identifier	readahead_length		508375	0					
ANR	508408	PrimaryExpression	0		508375	1					
ANR	508409	ExpressionStatement	readahead_index = 0	43:1:1296:1315	508375	6	True				
ANR	508410	AssignmentExpression	readahead_index = 0		508375	0		=			
ANR	508411	Identifier	readahead_index		508375	0					
ANR	508412	PrimaryExpression	0		508375	1					
ANR	508413	ExpressionStatement	readahead_buffer [ 0 ] = '\\0'	44:1:1318:1344	508375	7	True				
ANR	508414	AssignmentExpression	readahead_buffer [ 0 ] = '\\0'		508375	0		=			
ANR	508415	ArrayIndexing	readahead_buffer [ 0 ]		508375	0					
ANR	508416	Identifier	readahead_buffer		508375	0					
ANR	508417	PrimaryExpression	0		508375	1					
ANR	508418	PrimaryExpression	'\\0'		508375	1					
ANR	508419	Identifier	PipeBuffer :: PipeBuffer		508375	1					
ANR	508420	ParameterList			508375	2					
ANR	508421	CFGEntryNode	ENTRY		508375		True				
ANR	508422	CFGExitNode	EXIT		508375		True				
ANR	508423	Symbol	* readahead_buffer		508375						
ANR	508424	Symbol	pipe_end		508375						
ANR	508425	Symbol	last_char_was_escape		508375						
ANR	508426	Symbol	false		508375						
ANR	508427	Symbol	readahead_index		508375						
ANR	508428	Symbol	readahead_buffer		508375						
ANR	508429	Symbol	buffer		508375						
ANR	508430	Symbol	readahead_length		508375						
ANR	508431	Symbol	error		508375						
ANR	508432	Symbol	eof		508375						
ANR	508433	Function	PipeBuffer :: GetNextLine	47:0:1349:2671							
ANR	508434	FunctionDef	PipeBuffer :: GetNextLine ()		508433	0					
ANR	508435	CompoundStatement		48:27:1390:2671	508433	0					
ANR	508436	IfStatement	if ( readahead_length == 0 )		508433	0					
ANR	508437	Condition	readahead_length == 0	50:5:1398:1418	508433	0	True				
ANR	508438	EqualityExpression	readahead_length == 0		508433	0		==			
ANR	508439	Identifier	readahead_length		508433	0					
ANR	508440	PrimaryExpression	0		508433	1					
ANR	508441	CompoundStatement		3:28:30:30	508433	1					
ANR	508442	ExpressionStatement	amazon_gahp_release_big_mutex ( )	55:2:1563:1594	508433	0	True				
ANR	508443	CallExpression	amazon_gahp_release_big_mutex ( )		508433	0					
ANR	508444	Callee	amazon_gahp_release_big_mutex		508433	0					
ANR	508445	Identifier	amazon_gahp_release_big_mutex		508433	0					
ANR	508446	ArgumentList			508433	1					
ANR	508447	ExpressionStatement	"readahead_length = read ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"	56:2:1598:1677	508433	1	True				
ANR	508448	AssignmentExpression	"readahead_length = read ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"		508433	0		=			
ANR	508449	Identifier	readahead_length		508433	0					
ANR	508450	CallExpression	"read ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"		508433	1					
ANR	508451	Callee	read		508433	0					
ANR	508452	Identifier	read		508433	0					
ANR	508453	ArgumentList	pipe_end		508433	1					
ANR	508454	Argument	pipe_end		508433	0					
ANR	508455	Identifier	pipe_end		508433	0					
ANR	508456	Argument	readahead_buffer		508433	1					
ANR	508457	Identifier	readahead_buffer		508433	0					
ANR	508458	Argument	PIPE_BUFFER_READAHEAD_SIZE		508433	2					
ANR	508459	Identifier	PIPE_BUFFER_READAHEAD_SIZE		508433	0					
ANR	508460	ExpressionStatement	amazon_gahp_grab_big_mutex ( )	57:2:1681:1709	508433	2	True				
ANR	508461	CallExpression	amazon_gahp_grab_big_mutex ( )		508433	0					
ANR	508462	Callee	amazon_gahp_grab_big_mutex		508433	0					
ANR	508463	Identifier	amazon_gahp_grab_big_mutex		508433	0					
ANR	508464	ArgumentList			508433	1					
ANR	508465	IfStatement	if ( readahead_length < 0 )		508433	3					
ANR	508466	Condition	readahead_length < 0	58:6:1717:1736	508433	0	True				
ANR	508467	RelationalExpression	readahead_length < 0		508433	0		<			
ANR	508468	Identifier	readahead_length		508433	0					
ANR	508469	PrimaryExpression	0		508433	1					
ANR	508470	CompoundStatement		11:28:348:348	508433	1					
ANR	508471	ExpressionStatement	error = true	59:3:1744:1756	508433	0	True				
ANR	508472	AssignmentExpression	error = true		508433	0		=			
ANR	508473	Identifier	error		508433	0					
ANR	508474	Identifier	true		508433	1					
ANR	508475	ExpressionStatement	"dprintf ( D_ALWAYS , ""error reading from pipe %d\\n"" , pipe_end )"	60:3:1761:1821	508433	1	True				
ANR	508476	CallExpression	"dprintf ( D_ALWAYS , ""error reading from pipe %d\\n"" , pipe_end )"		508433	0					
ANR	508477	Callee	dprintf		508433	0					
ANR	508478	Identifier	dprintf		508433	0					
ANR	508479	ArgumentList	D_ALWAYS		508433	1					
ANR	508480	Argument	D_ALWAYS		508433	0					
ANR	508481	Identifier	D_ALWAYS		508433	0					
ANR	508482	Argument	"""error reading from pipe %d\\n"""		508433	1					
ANR	508483	PrimaryExpression	"""error reading from pipe %d\\n"""		508433	0					
ANR	508484	Argument	pipe_end		508433	2					
ANR	508485	Identifier	pipe_end		508433	0					
ANR	508486	ReturnStatement	return NULL ;	61:3:1826:1837	508433	2	True				
ANR	508487	Identifier	NULL		508433	0					
ANR	508488	IfStatement	if ( readahead_length == 0 )		508433	4					
ANR	508489	Condition	readahead_length == 0	63:6:1849:1869	508433	0	True				
ANR	508490	EqualityExpression	readahead_length == 0		508433	0		==			
ANR	508491	Identifier	readahead_length		508433	0					
ANR	508492	PrimaryExpression	0		508433	1					
ANR	508493	CompoundStatement		16:29:481:481	508433	1					
ANR	508494	ExpressionStatement	eof = true	64:3:1877:1887	508433	0	True				
ANR	508495	AssignmentExpression	eof = true		508433	0		=			
ANR	508496	Identifier	eof		508433	0					
ANR	508497	Identifier	true		508433	1					
ANR	508498	ExpressionStatement	"dprintf ( D_ALWAYS , ""EOF reached on pipe %d\\n"" , pipe_end )"	65:3:1892:1947	508433	1	True				
ANR	508499	CallExpression	"dprintf ( D_ALWAYS , ""EOF reached on pipe %d\\n"" , pipe_end )"		508433	0					
ANR	508500	Callee	dprintf		508433	0					
ANR	508501	Identifier	dprintf		508433	0					
ANR	508502	ArgumentList	D_ALWAYS		508433	1					
ANR	508503	Argument	D_ALWAYS		508433	0					
ANR	508504	Identifier	D_ALWAYS		508433	0					
ANR	508505	Argument	"""EOF reached on pipe %d\\n"""		508433	1					
ANR	508506	PrimaryExpression	"""EOF reached on pipe %d\\n"""		508433	0					
ANR	508507	Argument	pipe_end		508433	2					
ANR	508508	Identifier	pipe_end		508433	0					
ANR	508509	ReturnStatement	return NULL ;	66:3:1952:1963	508433	2	True				
ANR	508510	Identifier	NULL		508433	0					
ANR	508511	ExpressionStatement	readahead_index = 0	70:2:2046:2065	508433	5	True				
ANR	508512	AssignmentExpression	readahead_index = 0		508433	0		=			
ANR	508513	Identifier	readahead_index		508433	0					
ANR	508514	PrimaryExpression	0		508433	1					
ANR	508515	WhileStatement	while ( readahead_index != readahead_length )		508433	1					
ANR	508516	Condition	readahead_index != readahead_length	73:8:2079:2113	508433	0	True				
ANR	508517	EqualityExpression	readahead_index != readahead_length		508433	0		!=			
ANR	508518	Identifier	readahead_index		508433	0					
ANR	508519	Identifier	readahead_length		508433	1					
ANR	508520	CompoundStatement		28:2:730:774	508433	1					
ANR	508521	IdentifierDeclStatement	char c = readahead_buffer [ readahead_index ++ ] ;	75:2:2121:2165	508433	0	True				
ANR	508522	IdentifierDecl	c = readahead_buffer [ readahead_index ++ ]		508433	0					
ANR	508523	IdentifierDeclType	char		508433	0					
ANR	508524	Identifier	c		508433	1					
ANR	508525	AssignmentExpression	c = readahead_buffer [ readahead_index ++ ]		508433	2		=			
ANR	508526	Identifier	c		508433	0					
ANR	508527	ArrayIndexing	readahead_buffer [ readahead_index ++ ]		508433	1					
ANR	508528	Identifier	readahead_buffer		508433	0					
ANR	508529	PostIncDecOperationExpression	readahead_index ++		508433	1					
ANR	508530	Identifier	readahead_index		508433	0					
ANR	508531	IncDec	++		508433	1					
ANR	508532	IfStatement	if ( c == '\\n' && ! last_char_was_escape )		508433	1					
ANR	508533	Condition	c == '\\n' && ! last_char_was_escape	77:6:2174:2207	508433	0	True				
ANR	508534	AndExpression	c == '\\n' && ! last_char_was_escape		508433	0		&&			
ANR	508535	EqualityExpression	c == '\\n'		508433	0		==			
ANR	508536	Identifier	c		508433	0					
ANR	508537	PrimaryExpression	'\\n'		508433	1					
ANR	508538	UnaryOperationExpression	! last_char_was_escape		508433	1					
ANR	508539	UnaryOperator	!		508433	0					
ANR	508540	Identifier	last_char_was_escape		508433	1					
ANR	508541	CompoundStatement		32:3:857:902	508433	1					
ANR	508542	IdentifierDeclStatement	std :: string * result = new std :: string ( buffer ) ;	79:3:2248:2293	508433	0	True				
ANR	508543	IdentifierDecl	* result = new std :: string ( buffer )		508433	0					
ANR	508544	IdentifierDeclType	std :: string *		508433	0					
ANR	508545	Identifier	result		508433	1					
ANR	508546	AssignmentExpression	* result = new std :: string ( buffer )		508433	2		=			
ANR	508547	Identifier	buffer		508433	0					
ANR	508548	Identifier	buffer		508433	1					
ANR	508549	ExpressionStatement	"buffer = """""	80:3:2298:2309	508433	1	True				
ANR	508550	AssignmentExpression	"buffer = """""		508433	0		=			
ANR	508551	Identifier	buffer		508433	0					
ANR	508552	PrimaryExpression	""""""		508433	1					
ANR	508553	ReturnStatement	return result ;	81:3:2314:2327	508433	2	True				
ANR	508554	Identifier	result		508433	0					
ANR	508555	ElseStatement	else		508433	0					
ANR	508556	IfStatement	if ( c == '\\r' && ! last_char_was_escape )		508433	0					
ANR	508557	Condition	c == '\\r' && ! last_char_was_escape	82:13:2342:2375	508433	0	True				
ANR	508558	AndExpression	c == '\\r' && ! last_char_was_escape		508433	0		&&			
ANR	508559	EqualityExpression	c == '\\r'		508433	0		==			
ANR	508560	Identifier	c		508433	0					
ANR	508561	PrimaryExpression	'\\r'		508433	1					
ANR	508562	UnaryOperationExpression	! last_char_was_escape		508433	1					
ANR	508563	UnaryOperator	!		508433	0					
ANR	508564	Identifier	last_char_was_escape		508433	1					
ANR	508565	CompoundStatement		35:49:987:987	508433	1					
ANR	508566	ElseStatement	else		508433	0					
ANR	508567	CompoundStatement		37:9:1015:1015	508433	0					
ANR	508568	ExpressionStatement	buffer += c	85:3:2411:2422	508433	0	True				
ANR	508569	AssignmentExpression	buffer += c		508433	0		+=			
ANR	508570	Identifier	buffer		508433	0					
ANR	508571	Identifier	c		508433	1					
ANR	508572	IfStatement	if ( c == '\\\\' )		508433	1					
ANR	508573	Condition	c == '\\\\'	87:7:2432:2440	508433	0	True				
ANR	508574	EqualityExpression	c == '\\\\'		508433	0		==			
ANR	508575	Identifier	c		508433	0					
ANR	508576	PrimaryExpression	'\\\\'		508433	1					
ANR	508577	CompoundStatement		40:18:1052:1052	508433	1					
ANR	508578	ExpressionStatement	last_char_was_escape = ! last_char_was_escape	88:4:2449:2493	508433	0	True				
ANR	508579	AssignmentExpression	last_char_was_escape = ! last_char_was_escape		508433	0		=			
ANR	508580	Identifier	last_char_was_escape		508433	0					
ANR	508581	UnaryOperationExpression	! last_char_was_escape		508433	1					
ANR	508582	UnaryOperator	!		508433	0					
ANR	508583	Identifier	last_char_was_escape		508433	1					
ANR	508584	ElseStatement	else		508433	0					
ANR	508585	CompoundStatement		43:8:1117:1117	508433	0					
ANR	508586	ExpressionStatement	last_char_was_escape = false	91:4:2514:2542	508433	0	True				
ANR	508587	AssignmentExpression	last_char_was_escape = false		508433	0		=			
ANR	508588	Identifier	last_char_was_escape		508433	0					
ANR	508589	Identifier	false		508433	1					
ANR	508590	ExpressionStatement	readahead_length = 0	97:1:2635:2655	508433	2	True				
ANR	508591	AssignmentExpression	readahead_length = 0		508433	0		=			
ANR	508592	Identifier	readahead_length		508433	0					
ANR	508593	PrimaryExpression	0		508433	1					
ANR	508594	ReturnStatement	return NULL ;	98:1:2658:2669	508433	3	True				
ANR	508595	Identifier	NULL		508433	0					
ANR	508596	ReturnType	std :: string *		508433	1					
ANR	508597	Identifier	PipeBuffer :: GetNextLine		508433	2					
ANR	508598	ParameterList			508433	3					
ANR	508599	CFGEntryNode	ENTRY		508433		True				
ANR	508600	CFGExitNode	EXIT		508433		True				
ANR	508601	Symbol	read		508433						
ANR	508602	Symbol	NULL		508433						
ANR	508603	Symbol	c		508433						
ANR	508604	Symbol	* readahead_buffer		508433						
ANR	508605	Symbol	pipe_end		508433						
ANR	508606	Symbol	last_char_was_escape		508433						
ANR	508607	Symbol	PIPE_BUFFER_READAHEAD_SIZE		508433						
ANR	508608	Symbol	D_ALWAYS		508433						
ANR	508609	Symbol	readahead_index		508433						
ANR	508610	Symbol	false		508433						
ANR	508611	Symbol	readahead_buffer		508433						
ANR	508612	Symbol	readahead_length		508433						
ANR	508613	Symbol	error		508433						
ANR	508614	Symbol	result		508433						
ANR	508615	Symbol	true		508433						
ANR	508616	Symbol	buffer		508433						
ANR	508617	Symbol	eof		508433						
ANR	508618	Function	PipeBuffer :: Write	101:0:2674:3321							
ANR	508619	FunctionDef	PipeBuffer :: Write (const char * towrite)		508618	0					
ANR	508620	CompoundStatement		102:41:2719:3321	508618	0					
ANR	508621	IfStatement	if ( towrite )		508618	0					
ANR	508622	Condition	towrite	104:5:2728:2734	508618	0	True				
ANR	508623	Identifier	towrite		508618	0					
ANR	508624	ExpressionStatement	buffer += towrite	105:2:2739:2756	508618	1	True				
ANR	508625	AssignmentExpression	buffer += towrite		508618	0		+=			
ANR	508626	Identifier	buffer		508618	0					
ANR	508627	Identifier	towrite		508618	1					
ANR	508628	IdentifierDeclStatement	int len = buffer . length ( ) ;	107:1:2760:2785	508618	1	True				
ANR	508629	IdentifierDecl	len = buffer . length ( )		508618	0					
ANR	508630	IdentifierDeclType	int		508618	0					
ANR	508631	Identifier	len		508618	1					
ANR	508632	AssignmentExpression	len = buffer . length ( )		508618	2		=			
ANR	508633	Identifier	len		508618	0					
ANR	508634	CallExpression	buffer . length ( )		508618	1					
ANR	508635	Callee	buffer . length		508618	0					
ANR	508636	MemberAccess	buffer . length		508618	0					
ANR	508637	Identifier	buffer		508618	0					
ANR	508638	Identifier	length		508618	1					
ANR	508639	ArgumentList			508618	1					
ANR	508640	IfStatement	if ( len == 0 )		508618	2					
ANR	508641	Condition	len == 0	108:5:2792:2799	508618	0	True				
ANR	508642	EqualityExpression	len == 0		508618	0		==			
ANR	508643	Identifier	len		508618	0					
ANR	508644	PrimaryExpression	0		508618	1					
ANR	508645	ReturnStatement	return 0 ;	109:2:2804:2812	508618	1	True				
ANR	508646	PrimaryExpression	0		508618	0					
ANR	508647	ExpressionStatement	amazon_gahp_release_big_mutex ( )	112:1:2870:2901	508618	3	True				
ANR	508648	CallExpression	amazon_gahp_release_big_mutex ( )		508618	0					
ANR	508649	Callee	amazon_gahp_release_big_mutex		508618	0					
ANR	508650	Identifier	amazon_gahp_release_big_mutex		508618	0					
ANR	508651	ArgumentList			508618	1					
ANR	508652	IdentifierDeclStatement	"int numwritten = write ( pipe_end , buffer . c_str ( ) , len ) ;"	113:1:2904:2957	508618	4	True				
ANR	508653	IdentifierDecl	"numwritten = write ( pipe_end , buffer . c_str ( ) , len )"		508618	0					
ANR	508654	IdentifierDeclType	int		508618	0					
ANR	508655	Identifier	numwritten		508618	1					
ANR	508656	AssignmentExpression	"numwritten = write ( pipe_end , buffer . c_str ( ) , len )"		508618	2		=			
ANR	508657	Identifier	numwritten		508618	0					
ANR	508658	CallExpression	"write ( pipe_end , buffer . c_str ( ) , len )"		508618	1					
ANR	508659	Callee	write		508618	0					
ANR	508660	Identifier	write		508618	0					
ANR	508661	ArgumentList	pipe_end		508618	1					
ANR	508662	Argument	pipe_end		508618	0					
ANR	508663	Identifier	pipe_end		508618	0					
ANR	508664	Argument	buffer . c_str ( )		508618	1					
ANR	508665	CallExpression	buffer . c_str ( )		508618	0					
ANR	508666	Callee	buffer . c_str		508618	0					
ANR	508667	MemberAccess	buffer . c_str		508618	0					
ANR	508668	Identifier	buffer		508618	0					
ANR	508669	Identifier	c_str		508618	1					
ANR	508670	ArgumentList			508618	1					
ANR	508671	Argument	len		508618	2					
ANR	508672	Identifier	len		508618	0					
ANR	508673	ExpressionStatement	amazon_gahp_grab_big_mutex ( )	114:1:2960:2988	508618	5	True				
ANR	508674	CallExpression	amazon_gahp_grab_big_mutex ( )		508618	0					
ANR	508675	Callee	amazon_gahp_grab_big_mutex		508618	0					
ANR	508676	Identifier	amazon_gahp_grab_big_mutex		508618	0					
ANR	508677	ArgumentList			508618	1					
ANR	508678	IfStatement	if ( numwritten > 0 )		508618	6					
ANR	508679	Condition	numwritten > 0	116:5:2996:3009	508618	0	True				
ANR	508680	RelationalExpression	numwritten > 0		508618	0		>			
ANR	508681	Identifier	numwritten		508618	0					
ANR	508682	PrimaryExpression	0		508618	1					
ANR	508683	CompoundStatement		15:21:292:292	508618	1					
ANR	508684	ExpressionStatement	"buffer = buffer . erase ( 0 , numwritten )"	118:2:3041:3078	508618	0	True				
ANR	508685	AssignmentExpression	"buffer = buffer . erase ( 0 , numwritten )"		508618	0		=			
ANR	508686	Identifier	buffer		508618	0					
ANR	508687	CallExpression	"buffer . erase ( 0 , numwritten )"		508618	1					
ANR	508688	Callee	buffer . erase		508618	0					
ANR	508689	MemberAccess	buffer . erase		508618	0					
ANR	508690	Identifier	buffer		508618	0					
ANR	508691	Identifier	erase		508618	1					
ANR	508692	ArgumentList	0		508618	1					
ANR	508693	Argument	0		508618	0					
ANR	508694	PrimaryExpression	0		508618	0					
ANR	508695	Argument	numwritten		508618	1					
ANR	508696	Identifier	numwritten		508618	0					
ANR	508697	ReturnStatement	return numwritten ;	119:2:3082:3099	508618	1	True				
ANR	508698	Identifier	numwritten		508618	0					
ANR	508699	ElseStatement	else		508618	0					
ANR	508700	IfStatement	if ( numwritten == 0 )		508618	0					
ANR	508701	Condition	numwritten == 0	120:13:3114:3128	508618	0	True				
ANR	508702	EqualityExpression	numwritten == 0		508618	0		==			
ANR	508703	Identifier	numwritten		508618	0					
ANR	508704	PrimaryExpression	0		508618	1					
ANR	508705	CompoundStatement		19:31:412:412	508618	1					
ANR	508706	ReturnStatement	return 0 ;	121:2:3136:3144	508618	0	True				
ANR	508707	PrimaryExpression	0		508618	0					
ANR	508708	ElseStatement	else		508618	0					
ANR	508709	CompoundStatement		21:8:434:434	508618	0					
ANR	508710	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		508618	0					
ANR	508711	Condition	errno == EAGAIN || errno == EWOULDBLOCK	123:6:3162:3200	508618	0	True				
ANR	508712	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		508618	0		||			
ANR	508713	EqualityExpression	errno == EAGAIN		508618	0		==			
ANR	508714	Identifier	errno		508618	0					
ANR	508715	Identifier	EAGAIN		508618	1					
ANR	508716	EqualityExpression	errno == EWOULDBLOCK		508618	1		==			
ANR	508717	Identifier	errno		508618	0					
ANR	508718	Identifier	EWOULDBLOCK		508618	1					
ANR	508719	ReturnStatement	return 0 ;	124:3:3206:3214	508618	1	True				
ANR	508720	PrimaryExpression	0		508618	0					
ANR	508721	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error %d writing to pipe %d\\n"" , errno , pipe_end )"	126:2:3219:3287	508618	1	True				
ANR	508722	CallExpression	"dprintf ( D_ALWAYS , ""Error %d writing to pipe %d\\n"" , errno , pipe_end )"		508618	0					
ANR	508723	Callee	dprintf		508618	0					
ANR	508724	Identifier	dprintf		508618	0					
ANR	508725	ArgumentList	D_ALWAYS		508618	1					
ANR	508726	Argument	D_ALWAYS		508618	0					
ANR	508727	Identifier	D_ALWAYS		508618	0					
ANR	508728	Argument	"""Error %d writing to pipe %d\\n"""		508618	1					
ANR	508729	PrimaryExpression	"""Error %d writing to pipe %d\\n"""		508618	0					
ANR	508730	Argument	errno		508618	2					
ANR	508731	Identifier	errno		508618	0					
ANR	508732	Argument	pipe_end		508618	3					
ANR	508733	Identifier	pipe_end		508618	0					
ANR	508734	ExpressionStatement	error = true	127:2:3291:3303	508618	2	True				
ANR	508735	AssignmentExpression	error = true		508618	0		=			
ANR	508736	Identifier	error		508618	0					
ANR	508737	Identifier	true		508618	1					
ANR	508738	ReturnStatement	return - 1 ;	128:2:3307:3316	508618	3	True				
ANR	508739	UnaryOperationExpression	- 1		508618	0					
ANR	508740	UnaryOperator	-		508618	0					
ANR	508741	PrimaryExpression	1		508618	1					
ANR	508742	ReturnType	int		508618	1					
ANR	508743	Identifier	PipeBuffer :: Write		508618	2					
ANR	508744	ParameterList	const char * towrite		508618	3					
ANR	508745	Parameter	const char * towrite	102:19:2697:2716	508618	0	True				
ANR	508746	ParameterType	const char *		508618	0					
ANR	508747	Identifier	towrite		508618	1					
ANR	508748	CFGEntryNode	ENTRY		508618		True				
ANR	508749	CFGExitNode	EXIT		508618		True				
ANR	508750	Symbol	buffer . c_str		508618						
ANR	508751	Symbol	errno		508618						
ANR	508752	Symbol	pipe_end		508618						
ANR	508753	Symbol	EAGAIN		508618						
ANR	508754	Symbol	D_ALWAYS		508618						
ANR	508755	Symbol	error		508618						
ANR	508756	Symbol	numwritten		508618						
ANR	508757	Symbol	buffer . erase		508618						
ANR	508758	Symbol	len		508618						
ANR	508759	Symbol	buffer . length		508618						
ANR	508760	Symbol	true		508618						
ANR	508761	Symbol	EWOULDBLOCK		508618						
ANR	508762	Symbol	towrite		508618						
ANR	508763	Symbol	buffer		508618						
ANR	508764	Symbol	write		508618						
ANR	508765	Function	PipeBuffer :: IsEmpty	132:0:3324:3384							
ANR	508766	FunctionDef	PipeBuffer :: IsEmpty ()		508765	0					
ANR	508767	CompoundStatement		133:22:3350:3384	508765	0					
ANR	508768	ReturnStatement	return ( buffer . length ( ) == 0 ) ;	134:1:3353:3382	508765	0	True				
ANR	508769	EqualityExpression	buffer . length ( ) == 0		508765	0		==			
ANR	508770	CallExpression	buffer . length ( )		508765	0					
ANR	508771	Callee	buffer . length		508765	0					
ANR	508772	MemberAccess	buffer . length		508765	0					
ANR	508773	Identifier	buffer		508765	0					
ANR	508774	Identifier	length		508765	1					
ANR	508775	ArgumentList			508765	1					
ANR	508776	PrimaryExpression	0		508765	1					
ANR	508777	ReturnType	int		508765	1					
ANR	508778	Identifier	PipeBuffer :: IsEmpty		508765	2					
ANR	508779	ParameterList			508765	3					
ANR	508780	CFGEntryNode	ENTRY		508765		True				
ANR	508781	CFGExitNode	EXIT		508765		True				
ANR	508782	Symbol	buffer . length		508765						
ANR	508783	Symbol	buffer		508765						
