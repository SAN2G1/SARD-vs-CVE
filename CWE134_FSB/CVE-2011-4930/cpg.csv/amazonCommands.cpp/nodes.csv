command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	617318	File	data/converged/CVE-2011-4930_htcondor/amazonCommands.cpp								
ANR	617319	Function	amazonURLEncode	51:0:1532:2864							
ANR	617320	FunctionDef	amazonURLEncode (const std :: string & input)		617319	0					
ANR	617321	CompoundStatement		52:0:1589:2864	617319	0					
ANR	617322	IdentifierDeclStatement	std :: string output ;	61:4:1844:1862	617319	0	True				
ANR	617323	IdentifierDecl	output		617319	0					
ANR	617324	IdentifierDeclType	std :: string		617319	0					
ANR	617325	Identifier	output		617319	1					
ANR	617326	ForStatement	for ( unsigned i = 0 ; i < input . length ( ) ; ++ i )		617319	1					
ANR	617327	ForInit	unsigned i = 0 ;	62:9:1873:1887	617319	0	True				
ANR	617328	IdentifierDeclStatement	unsigned i = 0 ;		617319	0					
ANR	617329	IdentifierDecl	i = 0		617319	0					
ANR	617330	IdentifierDeclType	unsigned		617319	0					
ANR	617331	Identifier	i		617319	1					
ANR	617332	AssignmentExpression	i = 0		617319	2		=			
ANR	617333	Identifier	i		617319	0					
ANR	617334	PrimaryExpression	0		617319	1					
ANR	617335	Condition	i < input . length ( )	62:25:1889:1906	617319	1	True				
ANR	617336	RelationalExpression	i < input . length ( )		617319	0		<			
ANR	617337	Identifier	i		617319	0					
ANR	617338	CallExpression	input . length ( )		617319	1					
ANR	617339	Callee	input . length		617319	0					
ANR	617340	MemberAccess	input . length		617319	0					
ANR	617341	Identifier	input		617319	0					
ANR	617342	Identifier	length		617319	1					
ANR	617343	ArgumentList			617319	1					
ANR	617344	UnaryExpression	++ i	62:45:1909:1911	617319	2	True				
ANR	617345	IncDec	++		617319	0					
ANR	617346	Identifier	i		617319	1					
ANR	617347	CompoundStatement		11:51:325:325	617319	3					
ANR	617348	IfStatement	if ( ( 'A' <= input [ i ] && input [ i ] <= 'Z' ) || ( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~' )		617319	0					
ANR	617349	Condition	( 'A' <= input [ i ] && input [ i ] <= 'Z' ) || ( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'	68:12:2253:2498	617319	0	True				
ANR	617350	OrExpression	( 'A' <= input [ i ] && input [ i ] <= 'Z' ) || ( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		617319	0		||			
ANR	617351	AndExpression	'A' <= input [ i ] && input [ i ] <= 'Z'		617319	0		&&			
ANR	617352	RelationalExpression	'A' <= input [ i ]		617319	0		<=			
ANR	617353	PrimaryExpression	'A'		617319	0					
ANR	617354	ArrayIndexing	input [ i ]		617319	1					
ANR	617355	Identifier	input		617319	0					
ANR	617356	Identifier	i		617319	1					
ANR	617357	RelationalExpression	input [ i ] <= 'Z'		617319	1		<=			
ANR	617358	ArrayIndexing	input [ i ]		617319	0					
ANR	617359	Identifier	input		617319	0					
ANR	617360	Identifier	i		617319	1					
ANR	617361	PrimaryExpression	'Z'		617319	1					
ANR	617362	OrExpression	( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		617319	1		||			
ANR	617363	AndExpression	'a' <= input [ i ] && input [ i ] <= 'z'		617319	0		&&			
ANR	617364	RelationalExpression	'a' <= input [ i ]		617319	0		<=			
ANR	617365	PrimaryExpression	'a'		617319	0					
ANR	617366	ArrayIndexing	input [ i ]		617319	1					
ANR	617367	Identifier	input		617319	0					
ANR	617368	Identifier	i		617319	1					
ANR	617369	RelationalExpression	input [ i ] <= 'z'		617319	1		<=			
ANR	617370	ArrayIndexing	input [ i ]		617319	0					
ANR	617371	Identifier	input		617319	0					
ANR	617372	Identifier	i		617319	1					
ANR	617373	PrimaryExpression	'z'		617319	1					
ANR	617374	OrExpression	( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		617319	1		||			
ANR	617375	AndExpression	'0' <= input [ i ] && input [ i ] <= '9'		617319	0		&&			
ANR	617376	RelationalExpression	'0' <= input [ i ]		617319	0		<=			
ANR	617377	PrimaryExpression	'0'		617319	0					
ANR	617378	ArrayIndexing	input [ i ]		617319	1					
ANR	617379	Identifier	input		617319	0					
ANR	617380	Identifier	i		617319	1					
ANR	617381	RelationalExpression	input [ i ] <= '9'		617319	1		<=			
ANR	617382	ArrayIndexing	input [ i ]		617319	0					
ANR	617383	Identifier	input		617319	0					
ANR	617384	Identifier	i		617319	1					
ANR	617385	PrimaryExpression	'9'		617319	1					
ANR	617386	OrExpression	input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		617319	1		||			
ANR	617387	EqualityExpression	input [ i ] == '-'		617319	0		==			
ANR	617388	ArrayIndexing	input [ i ]		617319	0					
ANR	617389	Identifier	input		617319	0					
ANR	617390	Identifier	i		617319	1					
ANR	617391	PrimaryExpression	'-'		617319	1					
ANR	617392	OrExpression	input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		617319	1		||			
ANR	617393	EqualityExpression	input [ i ] == '_'		617319	0		==			
ANR	617394	ArrayIndexing	input [ i ]		617319	0					
ANR	617395	Identifier	input		617319	0					
ANR	617396	Identifier	i		617319	1					
ANR	617397	PrimaryExpression	'_'		617319	1					
ANR	617398	OrExpression	input [ i ] == '.' || input [ i ] == '~'		617319	1		||			
ANR	617399	EqualityExpression	input [ i ] == '.'		617319	0		==			
ANR	617400	ArrayIndexing	input [ i ]		617319	0					
ANR	617401	Identifier	input		617319	0					
ANR	617402	Identifier	i		617319	1					
ANR	617403	PrimaryExpression	'.'		617319	1					
ANR	617404	EqualityExpression	input [ i ] == '~'		617319	1		==			
ANR	617405	ArrayIndexing	input [ i ]		617319	0					
ANR	617406	Identifier	input		617319	0					
ANR	617407	Identifier	i		617319	1					
ANR	617408	PrimaryExpression	'~'		617319	1					
ANR	617409	CompoundStatement		24:12:926:947	617319	1					
ANR	617410	IdentifierDeclStatement	"char uglyHack [ ] = ""X"" ;"	75:12:2516:2537	617319	0	True				
ANR	617411	IdentifierDecl	"uglyHack [ ] = ""X"""		617319	0					
ANR	617412	IdentifierDeclType	char [ ]		617319	0					
ANR	617413	Identifier	uglyHack		617319	1					
ANR	617414	AssignmentExpression	"uglyHack [ ] = ""X"""		617319	2		=			
ANR	617415	Identifier	uglyHack		617319	0					
ANR	617416	PrimaryExpression	"""X"""		617319	1					
ANR	617417	ExpressionStatement	uglyHack [ 0 ] = input [ i ]	76:12:2551:2573	617319	1	True				
ANR	617418	AssignmentExpression	uglyHack [ 0 ] = input [ i ]		617319	0		=			
ANR	617419	ArrayIndexing	uglyHack [ 0 ]		617319	0					
ANR	617420	Identifier	uglyHack		617319	0					
ANR	617421	PrimaryExpression	0		617319	1					
ANR	617422	ArrayIndexing	input [ i ]		617319	1					
ANR	617423	Identifier	input		617319	0					
ANR	617424	Identifier	i		617319	1					
ANR	617425	ExpressionStatement	output . append ( uglyHack )	77:12:2587:2612	617319	2	True				
ANR	617426	CallExpression	output . append ( uglyHack )		617319	0					
ANR	617427	Callee	output . append		617319	0					
ANR	617428	MemberAccess	output . append		617319	0					
ANR	617429	Identifier	output		617319	0					
ANR	617430	Identifier	append		617319	1					
ANR	617431	ArgumentList	uglyHack		617319	1					
ANR	617432	Argument	uglyHack		617319	0					
ANR	617433	Identifier	uglyHack		617319	0					
ANR	617434	ElseStatement	else		617319	0					
ANR	617435	CompoundStatement		29:12:1088:1152	617319	0					
ANR	617436	IdentifierDeclStatement	char percentEncode [ 4 ] ;	79:12:2643:2664	617319	0	True				
ANR	617437	IdentifierDecl	percentEncode [ 4 ]		617319	0					
ANR	617438	IdentifierDeclType	char [ 4 ]		617319	0					
ANR	617439	Identifier	percentEncode		617319	1					
ANR	617440	PrimaryExpression	4		617319	2					
ANR	617441	IdentifierDeclStatement	"int written = snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] ) ;"	80:12:2678:2742	617319	1	True				
ANR	617442	IdentifierDecl	"written = snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] )"		617319	0					
ANR	617443	IdentifierDeclType	int		617319	0					
ANR	617444	Identifier	written		617319	1					
ANR	617445	AssignmentExpression	"written = snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] )"		617319	2		=			
ANR	617446	Identifier	written		617319	0					
ANR	617447	CallExpression	"snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] )"		617319	1					
ANR	617448	Callee	snprintf		617319	0					
ANR	617449	Identifier	snprintf		617319	0					
ANR	617450	ArgumentList	percentEncode		617319	1					
ANR	617451	Argument	percentEncode		617319	0					
ANR	617452	Identifier	percentEncode		617319	0					
ANR	617453	Argument	4		617319	1					
ANR	617454	PrimaryExpression	4		617319	0					
ANR	617455	Argument	"""%%%.2hhX"""		617319	2					
ANR	617456	PrimaryExpression	"""%%%.2hhX"""		617319	0					
ANR	617457	Argument	input [ i ]		617319	3					
ANR	617458	ArrayIndexing	input [ i ]		617319	0					
ANR	617459	Identifier	input		617319	0					
ANR	617460	Identifier	i		617319	1					
ANR	617461	ExpressionStatement	assert ( written == 3 )	81:12:2756:2778	617319	2	True				
ANR	617462	CallExpression	assert ( written == 3 )		617319	0					
ANR	617463	Callee	assert		617319	0					
ANR	617464	Identifier	assert		617319	0					
ANR	617465	ArgumentList	written == 3		617319	1					
ANR	617466	Argument	written == 3		617319	0					
ANR	617467	EqualityExpression	written == 3		617319	0		==			
ANR	617468	Identifier	written		617319	0					
ANR	617469	PrimaryExpression	3		617319	1					
ANR	617470	ExpressionStatement	output . append ( percentEncode )	82:12:2792:2822	617319	3	True				
ANR	617471	CallExpression	output . append ( percentEncode )		617319	0					
ANR	617472	Callee	output . append		617319	0					
ANR	617473	MemberAccess	output . append		617319	0					
ANR	617474	Identifier	output		617319	0					
ANR	617475	Identifier	append		617319	1					
ANR	617476	ArgumentList	percentEncode		617319	1					
ANR	617477	Argument	percentEncode		617319	0					
ANR	617478	Identifier	percentEncode		617319	0					
ANR	617479	ReturnStatement	return output ;	86:4:2849:2862	617319	2	True				
ANR	617480	Identifier	output		617319	0					
ANR	617481	ReturnType	std :: string		617319	1					
ANR	617482	Identifier	amazonURLEncode		617319	2					
ANR	617483	ParameterList	const std :: string & input		617319	3					
ANR	617484	Parameter	const std :: string & input	51:29:1561:1585	617319	0	True				
ANR	617485	ParameterType	const std :: string &		617319	0					
ANR	617486	Identifier	input		617319	1					
ANR	617487	CFGEntryNode	ENTRY		617319		True				
ANR	617488	CFGExitNode	EXIT		617319		True				
ANR	617489	Symbol	output		617319						
ANR	617490	Symbol	input		617319						
ANR	617491	Symbol	uglyHack		617319						
ANR	617492	Symbol	* i		617319						
ANR	617493	Symbol	* input		617319						
ANR	617494	Symbol	i		617319						
ANR	617495	Symbol	* uglyHack		617319						
ANR	617496	Symbol	written		617319						
ANR	617497	Symbol	input . length		617319						
ANR	617498	Symbol	percentEncode		617319						
ANR	617499	Symbol	snprintf		617319						
ANR	617500	Function	writeShortFile	92:0:2894:3612							
ANR	617501	FunctionDef	"writeShortFile (const std :: string & fileName , const std :: string & contents)"		617500	0					
ANR	617502	CompoundStatement		92:82:2976:3612	617500	0					
ANR	617503	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 ) ;"	93:4:2982:3071	617500	0	True				
ANR	617504	IdentifierDecl	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		617500	0					
ANR	617505	IdentifierDeclType	int		617500	0					
ANR	617506	Identifier	fd		617500	1					
ANR	617507	AssignmentExpression	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		617500	2		=			
ANR	617508	Identifier	fd		617500	0					
ANR	617509	CallExpression	"safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		617500	1					
ANR	617510	Callee	safe_open_wrapper_follow		617500	0					
ANR	617511	Identifier	safe_open_wrapper_follow		617500	0					
ANR	617512	ArgumentList	fileName . c_str ( )		617500	1					
ANR	617513	Argument	fileName . c_str ( )		617500	0					
ANR	617514	CallExpression	fileName . c_str ( )		617500	0					
ANR	617515	Callee	fileName . c_str		617500	0					
ANR	617516	MemberAccess	fileName . c_str		617500	0					
ANR	617517	Identifier	fileName		617500	0					
ANR	617518	Identifier	c_str		617500	1					
ANR	617519	ArgumentList			617500	1					
ANR	617520	Argument	O_WRONLY | O_CREAT | O_TRUNC		617500	1					
ANR	617521	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		617500	0		|			
ANR	617522	Identifier	O_WRONLY		617500	0					
ANR	617523	InclusiveOrExpression	O_CREAT | O_TRUNC		617500	1		|			
ANR	617524	Identifier	O_CREAT		617500	0					
ANR	617525	Identifier	O_TRUNC		617500	1					
ANR	617526	Argument	0600		617500	2					
ANR	617527	PrimaryExpression	0600		617500	0					
ANR	617528	IfStatement	if ( fd < 0 )		617500	1					
ANR	617529	Condition	fd < 0	95:8:3082:3087	617500	0	True				
ANR	617530	RelationalExpression	fd < 0		617500	0		<			
ANR	617531	Identifier	fd		617500	0					
ANR	617532	PrimaryExpression	0		617500	1					
ANR	617533	CompoundStatement		4:17:114:114	617500	1					
ANR	617534	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for writing: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"	96:8:3101:3218	617500	0	True				
ANR	617535	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for writing: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"		617500	0					
ANR	617536	Callee	dprintf		617500	0					
ANR	617537	Identifier	dprintf		617500	0					
ANR	617538	ArgumentList	D_ALWAYS		617500	1					
ANR	617539	Argument	D_ALWAYS		617500	0					
ANR	617540	Identifier	D_ALWAYS		617500	0					
ANR	617541	Argument	"""Failed to open file '%s' for writing: '%s' (%d).\\n"""		617500	1					
ANR	617542	PrimaryExpression	"""Failed to open file '%s' for writing: '%s' (%d).\\n"""		617500	0					
ANR	617543	Argument	fileName . c_str ( )		617500	2					
ANR	617544	CallExpression	fileName . c_str ( )		617500	0					
ANR	617545	Callee	fileName . c_str		617500	0					
ANR	617546	MemberAccess	fileName . c_str		617500	0					
ANR	617547	Identifier	fileName		617500	0					
ANR	617548	Identifier	c_str		617500	1					
ANR	617549	ArgumentList			617500	1					
ANR	617550	Argument	strerror ( errno )		617500	3					
ANR	617551	CallExpression	strerror ( errno )		617500	0					
ANR	617552	Callee	strerror		617500	0					
ANR	617553	Identifier	strerror		617500	0					
ANR	617554	ArgumentList	errno		617500	1					
ANR	617555	Argument	errno		617500	0					
ANR	617556	Identifier	errno		617500	0					
ANR	617557	Argument	errno		617500	4					
ANR	617558	Identifier	errno		617500	0					
ANR	617559	ReturnStatement	return false ;	97:8:3228:3240	617500	1	True				
ANR	617560	Identifier	false		617500	0					
ANR	617561	IdentifierDeclStatement	"unsigned long written = full_write ( fd , contents . c_str ( ) , contents . length ( ) ) ;"	100:4:3257:3334	617500	2	True				
ANR	617562	IdentifierDecl	"written = full_write ( fd , contents . c_str ( ) , contents . length ( ) )"		617500	0					
ANR	617563	IdentifierDeclType	unsigned long		617500	0					
ANR	617564	Identifier	written		617500	1					
ANR	617565	AssignmentExpression	"written = full_write ( fd , contents . c_str ( ) , contents . length ( ) )"		617500	2		=			
ANR	617566	Identifier	written		617500	0					
ANR	617567	CallExpression	"full_write ( fd , contents . c_str ( ) , contents . length ( ) )"		617500	1					
ANR	617568	Callee	full_write		617500	0					
ANR	617569	Identifier	full_write		617500	0					
ANR	617570	ArgumentList	fd		617500	1					
ANR	617571	Argument	fd		617500	0					
ANR	617572	Identifier	fd		617500	0					
ANR	617573	Argument	contents . c_str ( )		617500	1					
ANR	617574	CallExpression	contents . c_str ( )		617500	0					
ANR	617575	Callee	contents . c_str		617500	0					
ANR	617576	MemberAccess	contents . c_str		617500	0					
ANR	617577	Identifier	contents		617500	0					
ANR	617578	Identifier	c_str		617500	1					
ANR	617579	ArgumentList			617500	1					
ANR	617580	Argument	contents . length ( )		617500	2					
ANR	617581	CallExpression	contents . length ( )		617500	0					
ANR	617582	Callee	contents . length		617500	0					
ANR	617583	MemberAccess	contents . length		617500	0					
ANR	617584	Identifier	contents		617500	0					
ANR	617585	Identifier	length		617500	1					
ANR	617586	ArgumentList			617500	1					
ANR	617587	ExpressionStatement	close ( fd )	101:4:3340:3351	617500	3	True				
ANR	617588	CallExpression	close ( fd )		617500	0					
ANR	617589	Callee	close		617500	0					
ANR	617590	Identifier	close		617500	0					
ANR	617591	ArgumentList	fd		617500	1					
ANR	617592	Argument	fd		617500	0					
ANR	617593	Identifier	fd		617500	0					
ANR	617594	IfStatement	if ( written != contents . length ( ) )		617500	4					
ANR	617595	Condition	written != contents . length ( )	102:8:3361:3388	617500	0	True				
ANR	617596	EqualityExpression	written != contents . length ( )		617500	0		!=			
ANR	617597	Identifier	written		617500	0					
ANR	617598	CallExpression	contents . length ( )		617500	1					
ANR	617599	Callee	contents . length		617500	0					
ANR	617600	MemberAccess	contents . length		617500	0					
ANR	617601	Identifier	contents		617500	0					
ANR	617602	Identifier	length		617500	1					
ANR	617603	ArgumentList			617500	1					
ANR	617604	CompoundStatement		11:39:415:415	617500	1					
ANR	617605	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"" , fileName . c_str ( ) , contents . length ( ) , written )"	103:8:3402:3560	617500	0	True				
ANR	617606	CallExpression	"dprintf ( D_ALWAYS , ""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"" , fileName . c_str ( ) , contents . length ( ) , written )"		617500	0					
ANR	617607	Callee	dprintf		617500	0					
ANR	617608	Identifier	dprintf		617500	0					
ANR	617609	ArgumentList	D_ALWAYS		617500	1					
ANR	617610	Argument	D_ALWAYS		617500	0					
ANR	617611	Identifier	D_ALWAYS		617500	0					
ANR	617612	Argument	"""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"""		617500	1					
ANR	617613	PrimaryExpression	"""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"""		617500	0					
ANR	617614	Argument	fileName . c_str ( )		617500	2					
ANR	617615	CallExpression	fileName . c_str ( )		617500	0					
ANR	617616	Callee	fileName . c_str		617500	0					
ANR	617617	MemberAccess	fileName . c_str		617500	0					
ANR	617618	Identifier	fileName		617500	0					
ANR	617619	Identifier	c_str		617500	1					
ANR	617620	ArgumentList			617500	1					
ANR	617621	Argument	contents . length ( )		617500	3					
ANR	617622	CallExpression	contents . length ( )		617500	0					
ANR	617623	Callee	contents . length		617500	0					
ANR	617624	MemberAccess	contents . length		617500	0					
ANR	617625	Identifier	contents		617500	0					
ANR	617626	Identifier	length		617500	1					
ANR	617627	ArgumentList			617500	1					
ANR	617628	Argument	written		617500	4					
ANR	617629	Identifier	written		617500	0					
ANR	617630	ReturnStatement	return false ;	105:8:3570:3582	617500	1	True				
ANR	617631	Identifier	false		617500	0					
ANR	617632	ReturnStatement	return true ;	108:4:3599:3610	617500	5	True				
ANR	617633	Identifier	true		617500	0					
ANR	617634	ReturnType	bool		617500	1					
ANR	617635	Identifier	writeShortFile		617500	2					
ANR	617636	ParameterList	"const std :: string & fileName , const std :: string & contents"		617500	3					
ANR	617637	Parameter	const std :: string & fileName	92:21:2915:2942	617500	0	True				
ANR	617638	ParameterType	const std :: string &		617500	0					
ANR	617639	Identifier	fileName		617500	1					
ANR	617640	Parameter	const std :: string & contents	92:51:2945:2972	617500	1	True				
ANR	617641	ParameterType	const std :: string &		617500	0					
ANR	617642	Identifier	contents		617500	1					
ANR	617643	CFGEntryNode	ENTRY		617500		True				
ANR	617644	CFGExitNode	EXIT		617500		True				
ANR	617645	Symbol	fileName		617500						
ANR	617646	Symbol	errno		617500						
ANR	617647	Symbol	safe_open_wrapper_follow		617500						
ANR	617648	Symbol	fileName . c_str		617500						
ANR	617649	Symbol	O_CREAT		617500						
ANR	617650	Symbol	full_write		617500						
ANR	617651	Symbol	D_ALWAYS		617500						
ANR	617652	Symbol	false		617500						
ANR	617653	Symbol	contents . length		617500						
ANR	617654	Symbol	contents . c_str		617500						
ANR	617655	Symbol	strerror		617500						
ANR	617656	Symbol	O_TRUNC		617500						
ANR	617657	Symbol	contents		617500						
ANR	617658	Symbol	true		617500						
ANR	617659	Symbol	written		617500						
ANR	617660	Symbol	O_WRONLY		617500						
ANR	617661	Symbol	fd		617500						
ANR	617662	Function	readShortFile	114:0:3655:4594							
ANR	617663	FunctionDef	"readShortFile (const std :: string & fileName , std :: string & contents)"		617662	0					
ANR	617664	CompoundStatement		114:75:3730:4594	617662	0					
ANR	617665	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 ) ;"	115:4:3736:3805	617662	0	True				
ANR	617666	IdentifierDecl	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 )"		617662	0					
ANR	617667	IdentifierDeclType	int		617662	0					
ANR	617668	Identifier	fd		617662	1					
ANR	617669	AssignmentExpression	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 )"		617662	2		=			
ANR	617670	Identifier	fd		617662	0					
ANR	617671	CallExpression	"safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 )"		617662	1					
ANR	617672	Callee	safe_open_wrapper_follow		617662	0					
ANR	617673	Identifier	safe_open_wrapper_follow		617662	0					
ANR	617674	ArgumentList	fileName . c_str ( )		617662	1					
ANR	617675	Argument	fileName . c_str ( )		617662	0					
ANR	617676	CallExpression	fileName . c_str ( )		617662	0					
ANR	617677	Callee	fileName . c_str		617662	0					
ANR	617678	MemberAccess	fileName . c_str		617662	0					
ANR	617679	Identifier	fileName		617662	0					
ANR	617680	Identifier	c_str		617662	1					
ANR	617681	ArgumentList			617662	1					
ANR	617682	Argument	O_RDONLY		617662	1					
ANR	617683	Identifier	O_RDONLY		617662	0					
ANR	617684	Argument	0600		617662	2					
ANR	617685	PrimaryExpression	0600		617662	0					
ANR	617686	IfStatement	if ( fd < 0 )		617662	1					
ANR	617687	Condition	fd < 0	117:8:3816:3821	617662	0	True				
ANR	617688	RelationalExpression	fd < 0		617662	0		<			
ANR	617689	Identifier	fd		617662	0					
ANR	617690	PrimaryExpression	0		617662	1					
ANR	617691	CompoundStatement		4:17:94:94	617662	1					
ANR	617692	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for reading: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"	118:8:3835:3952	617662	0	True				
ANR	617693	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for reading: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"		617662	0					
ANR	617694	Callee	dprintf		617662	0					
ANR	617695	Identifier	dprintf		617662	0					
ANR	617696	ArgumentList	D_ALWAYS		617662	1					
ANR	617697	Argument	D_ALWAYS		617662	0					
ANR	617698	Identifier	D_ALWAYS		617662	0					
ANR	617699	Argument	"""Failed to open file '%s' for reading: '%s' (%d).\\n"""		617662	1					
ANR	617700	PrimaryExpression	"""Failed to open file '%s' for reading: '%s' (%d).\\n"""		617662	0					
ANR	617701	Argument	fileName . c_str ( )		617662	2					
ANR	617702	CallExpression	fileName . c_str ( )		617662	0					
ANR	617703	Callee	fileName . c_str		617662	0					
ANR	617704	MemberAccess	fileName . c_str		617662	0					
ANR	617705	Identifier	fileName		617662	0					
ANR	617706	Identifier	c_str		617662	1					
ANR	617707	ArgumentList			617662	1					
ANR	617708	Argument	strerror ( errno )		617662	3					
ANR	617709	CallExpression	strerror ( errno )		617662	0					
ANR	617710	Callee	strerror		617662	0					
ANR	617711	Identifier	strerror		617662	0					
ANR	617712	ArgumentList	errno		617662	1					
ANR	617713	Argument	errno		617662	0					
ANR	617714	Identifier	errno		617662	0					
ANR	617715	Argument	errno		617662	4					
ANR	617716	Identifier	errno		617662	0					
ANR	617717	ReturnStatement	return false ;	119:8:3962:3974	617662	1	True				
ANR	617718	Identifier	false		617662	0					
ANR	617719	IdentifierDeclStatement	StatWrapper sw ( fd ) ;	122:4:3995:4015	617662	2	True				
ANR	617720	IdentifierDecl	sw ( fd )		617662	0					
ANR	617721	IdentifierDeclType	StatWrapper		617662	0					
ANR	617722	Identifier	sw		617662	1					
ANR	617723	Identifier	fd		617662	2					
ANR	617724	IdentifierDeclStatement	unsigned long fileSize = sw . GetBuf ( ) -> st_size ;	123:4:4021:4066	617662	3	True				
ANR	617725	IdentifierDecl	fileSize = sw . GetBuf ( ) -> st_size		617662	0					
ANR	617726	IdentifierDeclType	unsigned long		617662	0					
ANR	617727	Identifier	fileSize		617662	1					
ANR	617728	AssignmentExpression	fileSize = sw . GetBuf ( ) -> st_size		617662	2		=			
ANR	617729	Identifier	fileSize		617662	0					
ANR	617730	PtrMemberAccess	sw . GetBuf ( ) -> st_size		617662	1					
ANR	617731	CallExpression	sw . GetBuf ( )		617662	0					
ANR	617732	Callee	sw . GetBuf		617662	0					
ANR	617733	MemberAccess	sw . GetBuf		617662	0					
ANR	617734	Identifier	sw		617662	0					
ANR	617735	Identifier	GetBuf		617662	1					
ANR	617736	ArgumentList			617662	1					
ANR	617737	Identifier	st_size		617662	1					
ANR	617738	IdentifierDeclStatement	char * rawBuffer = ( char * ) malloc ( fileSize + 1 ) ;	125:4:4081:4130	617662	4	True				
ANR	617739	IdentifierDecl	* rawBuffer = ( char * ) malloc ( fileSize + 1 )		617662	0					
ANR	617740	IdentifierDeclType	char *		617662	0					
ANR	617741	Identifier	rawBuffer		617662	1					
ANR	617742	AssignmentExpression	* rawBuffer = ( char * ) malloc ( fileSize + 1 )		617662	2		=			
ANR	617743	Identifier	rawBuffer		617662	0					
ANR	617744	CastExpression	( char * ) malloc ( fileSize + 1 )		617662	1					
ANR	617745	CastTarget	char *		617662	0					
ANR	617746	CallExpression	malloc ( fileSize + 1 )		617662	1					
ANR	617747	Callee	malloc		617662	0					
ANR	617748	Identifier	malloc		617662	0					
ANR	617749	ArgumentList	fileSize + 1		617662	1					
ANR	617750	Argument	fileSize + 1		617662	0					
ANR	617751	AdditiveExpression	fileSize + 1		617662	0		+			
ANR	617752	Identifier	fileSize		617662	0					
ANR	617753	PrimaryExpression	1		617662	1					
ANR	617754	ExpressionStatement	assert ( rawBuffer != NULL )	126:4:4136:4163	617662	5	True				
ANR	617755	CallExpression	assert ( rawBuffer != NULL )		617662	0					
ANR	617756	Callee	assert		617662	0					
ANR	617757	Identifier	assert		617662	0					
ANR	617758	ArgumentList	rawBuffer != NULL		617662	1					
ANR	617759	Argument	rawBuffer != NULL		617662	0					
ANR	617760	EqualityExpression	rawBuffer != NULL		617662	0		!=			
ANR	617761	Identifier	rawBuffer		617662	0					
ANR	617762	Identifier	NULL		617662	1					
ANR	617763	IdentifierDeclStatement	"unsigned long totalRead = full_read ( fd , rawBuffer , fileSize ) ;"	127:4:4169:4231	617662	6	True				
ANR	617764	IdentifierDecl	"totalRead = full_read ( fd , rawBuffer , fileSize )"		617662	0					
ANR	617765	IdentifierDeclType	unsigned long		617662	0					
ANR	617766	Identifier	totalRead		617662	1					
ANR	617767	AssignmentExpression	"totalRead = full_read ( fd , rawBuffer , fileSize )"		617662	2		=			
ANR	617768	Identifier	totalRead		617662	0					
ANR	617769	CallExpression	"full_read ( fd , rawBuffer , fileSize )"		617662	1					
ANR	617770	Callee	full_read		617662	0					
ANR	617771	Identifier	full_read		617662	0					
ANR	617772	ArgumentList	fd		617662	1					
ANR	617773	Argument	fd		617662	0					
ANR	617774	Identifier	fd		617662	0					
ANR	617775	Argument	rawBuffer		617662	1					
ANR	617776	Identifier	rawBuffer		617662	0					
ANR	617777	Argument	fileSize		617662	2					
ANR	617778	Identifier	fileSize		617662	0					
ANR	617779	ExpressionStatement	close ( fd )	128:4:4237:4248	617662	7	True				
ANR	617780	CallExpression	close ( fd )		617662	0					
ANR	617781	Callee	close		617662	0					
ANR	617782	Identifier	close		617662	0					
ANR	617783	ArgumentList	fd		617662	1					
ANR	617784	Argument	fd		617662	0					
ANR	617785	Identifier	fd		617662	0					
ANR	617786	IfStatement	if ( totalRead != fileSize )		617662	8					
ANR	617787	Condition	totalRead != fileSize	129:8:4258:4278	617662	0	True				
ANR	617788	EqualityExpression	totalRead != fileSize		617662	0		!=			
ANR	617789	Identifier	totalRead		617662	0					
ANR	617790	Identifier	fileSize		617662	1					
ANR	617791	CompoundStatement		16:32:551:551	617662	1					
ANR	617792	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to completely read file '%s'; needed %lu but got %lu.\\n"" , fileName . c_str ( ) , fileSize , totalRead )"	130:8:4292:4428	617662	0	True				
ANR	617793	CallExpression	"dprintf ( D_ALWAYS , ""Failed to completely read file '%s'; needed %lu but got %lu.\\n"" , fileName . c_str ( ) , fileSize , totalRead )"		617662	0					
ANR	617794	Callee	dprintf		617662	0					
ANR	617795	Identifier	dprintf		617662	0					
ANR	617796	ArgumentList	D_ALWAYS		617662	1					
ANR	617797	Argument	D_ALWAYS		617662	0					
ANR	617798	Identifier	D_ALWAYS		617662	0					
ANR	617799	Argument	"""Failed to completely read file '%s'; needed %lu but got %lu.\\n"""		617662	1					
ANR	617800	PrimaryExpression	"""Failed to completely read file '%s'; needed %lu but got %lu.\\n"""		617662	0					
ANR	617801	Argument	fileName . c_str ( )		617662	2					
ANR	617802	CallExpression	fileName . c_str ( )		617662	0					
ANR	617803	Callee	fileName . c_str		617662	0					
ANR	617804	MemberAccess	fileName . c_str		617662	0					
ANR	617805	Identifier	fileName		617662	0					
ANR	617806	Identifier	c_str		617662	1					
ANR	617807	ArgumentList			617662	1					
ANR	617808	Argument	fileSize		617662	3					
ANR	617809	Identifier	fileSize		617662	0					
ANR	617810	Argument	totalRead		617662	4					
ANR	617811	Identifier	totalRead		617662	0					
ANR	617812	ExpressionStatement	free ( rawBuffer )	132:8:4438:4455	617662	1	True				
ANR	617813	CallExpression	free ( rawBuffer )		617662	0					
ANR	617814	Callee	free		617662	0					
ANR	617815	Identifier	free		617662	0					
ANR	617816	ArgumentList	rawBuffer		617662	1					
ANR	617817	Argument	rawBuffer		617662	0					
ANR	617818	Identifier	rawBuffer		617662	0					
ANR	617819	ReturnStatement	return false ;	133:8:4465:4477	617662	2	True				
ANR	617820	Identifier	false		617662	0					
ANR	617821	ExpressionStatement	rawBuffer [ fileSize ] = '\\0'	135:4:4493:4521	617662	9	True				
ANR	617822	AssignmentExpression	rawBuffer [ fileSize ] = '\\0'		617662	0		=			
ANR	617823	ArrayIndexing	rawBuffer [ fileSize ]		617662	0					
ANR	617824	Identifier	rawBuffer		617662	0					
ANR	617825	Identifier	fileSize		617662	1					
ANR	617826	PrimaryExpression	'\\0'		617662	1					
ANR	617827	ExpressionStatement	contents = rawBuffer	136:4:4527:4547	617662	10	True				
ANR	617828	AssignmentExpression	contents = rawBuffer		617662	0		=			
ANR	617829	Identifier	contents		617662	0					
ANR	617830	Identifier	rawBuffer		617662	1					
ANR	617831	ExpressionStatement	free ( rawBuffer )	137:4:4553:4570	617662	11	True				
ANR	617832	CallExpression	free ( rawBuffer )		617662	0					
ANR	617833	Callee	free		617662	0					
ANR	617834	Identifier	free		617662	0					
ANR	617835	ArgumentList	rawBuffer		617662	1					
ANR	617836	Argument	rawBuffer		617662	0					
ANR	617837	Identifier	rawBuffer		617662	0					
ANR	617838	ReturnStatement	return true ;	139:4:4581:4592	617662	12	True				
ANR	617839	Identifier	true		617662	0					
ANR	617840	ReturnType	bool		617662	1					
ANR	617841	Identifier	readShortFile		617662	2					
ANR	617842	ParameterList	"const std :: string & fileName , std :: string & contents"		617662	3					
ANR	617843	Parameter	const std :: string & fileName	114:20:3675:3702	617662	0	True				
ANR	617844	ParameterType	const std :: string &		617662	0					
ANR	617845	Identifier	fileName		617662	1					
ANR	617846	Parameter	std :: string & contents	114:50:3705:3726	617662	1	True				
ANR	617847	ParameterType	std :: string &		617662	0					
ANR	617848	Identifier	contents		617662	1					
ANR	617849	CFGEntryNode	ENTRY		617662		True				
ANR	617850	CFGExitNode	EXIT		617662		True				
ANR	617851	Symbol	malloc		617662						
ANR	617852	Symbol	fileName		617662						
ANR	617853	Symbol	errno		617662						
ANR	617854	Symbol	safe_open_wrapper_follow		617662						
ANR	617855	Symbol	NULL		617662						
ANR	617856	Symbol	sw		617662						
ANR	617857	Symbol	fileName . c_str		617662						
ANR	617858	Symbol	D_ALWAYS		617662						
ANR	617859	Symbol	false		617662						
ANR	617860	Symbol	* sw		617662						
ANR	617861	Symbol	full_read		617662						
ANR	617862	Symbol	totalRead		617662						
ANR	617863	Symbol	strerror		617662						
ANR	617864	Symbol	* fileSize		617662						
ANR	617865	Symbol	O_RDONLY		617662						
ANR	617866	Symbol	sw . GetBuf		617662						
ANR	617867	Symbol	contents		617662						
ANR	617868	Symbol	fileSize		617662						
ANR	617869	Symbol	* rawBuffer		617662						
ANR	617870	Symbol	true		617662						
ANR	617871	Symbol	* sw . GetBuf		617662						
ANR	617872	Symbol	rawBuffer		617662						
ANR	617873	Symbol	sw . GetBuf ( ) -> st_size		617662						
ANR	617874	Symbol	fd		617662						
ANR	617875	Function	appendToString	153:0:5156:5571							
ANR	617876	FunctionDef	"appendToString (void * ptr , size_t size , size_t nmemb , void * str)"		617875	0					
ANR	617877	CompoundStatement		153:75:5231:5571	617875	0					
ANR	617878	IfStatement	if ( size == 0 || nmemb == 0 )		617875	0					
ANR	617879	Condition	size == 0 || nmemb == 0	154:8:5241:5263	617875	0	True				
ANR	617880	OrExpression	size == 0 || nmemb == 0		617875	0		||			
ANR	617881	EqualityExpression	size == 0		617875	0		==			
ANR	617882	Identifier	size		617875	0					
ANR	617883	PrimaryExpression	0		617875	1					
ANR	617884	EqualityExpression	nmemb == 0		617875	1		==			
ANR	617885	Identifier	nmemb		617875	0					
ANR	617886	PrimaryExpression	0		617875	1					
ANR	617887	CompoundStatement		2:34:35:35	617875	1					
ANR	617888	ReturnStatement	return 0 ;	154:36:5269:5277	617875	0	True				
ANR	617889	PrimaryExpression	0		617875	0					
ANR	617890	IdentifierDeclStatement	char * ucptr = ( char * ) ptr ;	156:4:5290:5316	617875	1	True				
ANR	617891	IdentifierDecl	* ucptr = ( char * ) ptr		617875	0					
ANR	617892	IdentifierDeclType	char *		617875	0					
ANR	617893	Identifier	ucptr		617875	1					
ANR	617894	AssignmentExpression	* ucptr = ( char * ) ptr		617875	2		=			
ANR	617895	Identifier	ucptr		617875	0					
ANR	617896	CastExpression	( char * ) ptr		617875	1					
ANR	617897	CastTarget	char *		617875	0					
ANR	617898	Identifier	ptr		617875	1					
ANR	617899	IdentifierDeclStatement	char last = ucptr [ ( size * nmemb ) - 1 ] ;	157:4:5322:5361	617875	2	True				
ANR	617900	IdentifierDecl	last = ucptr [ ( size * nmemb ) - 1 ]		617875	0					
ANR	617901	IdentifierDeclType	char		617875	0					
ANR	617902	Identifier	last		617875	1					
ANR	617903	AssignmentExpression	last = ucptr [ ( size * nmemb ) - 1 ]		617875	2		=			
ANR	617904	Identifier	last		617875	0					
ANR	617905	ArrayIndexing	ucptr [ ( size * nmemb ) - 1 ]		617875	1					
ANR	617906	Identifier	ucptr		617875	0					
ANR	617907	AdditiveExpression	( size * nmemb ) - 1		617875	1		-			
ANR	617908	MultiplicativeExpression	size * nmemb		617875	0		*			
ANR	617909	Identifier	size		617875	0					
ANR	617910	Identifier	nmemb		617875	1					
ANR	617911	PrimaryExpression	1		617875	1					
ANR	617912	ExpressionStatement	ucptr [ ( size * nmemb ) - 1 ] = '\\0'	158:4:5367:5401	617875	3	True				
ANR	617913	AssignmentExpression	ucptr [ ( size * nmemb ) - 1 ] = '\\0'		617875	0		=			
ANR	617914	ArrayIndexing	ucptr [ ( size * nmemb ) - 1 ]		617875	0					
ANR	617915	Identifier	ucptr		617875	0					
ANR	617916	AdditiveExpression	( size * nmemb ) - 1		617875	1		-			
ANR	617917	MultiplicativeExpression	size * nmemb		617875	0		*			
ANR	617918	Identifier	size		617875	0					
ANR	617919	Identifier	nmemb		617875	1					
ANR	617920	PrimaryExpression	1		617875	1					
ANR	617921	PrimaryExpression	'\\0'		617875	1					
ANR	617922	IdentifierDeclStatement	std :: string * ssptr = ( std :: string * ) str ;	159:4:5407:5447	617875	4	True				
ANR	617923	IdentifierDecl	* ssptr = ( std :: string * ) str		617875	0					
ANR	617924	IdentifierDeclType	std :: string *		617875	0					
ANR	617925	Identifier	ssptr		617875	1					
ANR	617926	AssignmentExpression	* ssptr = ( std :: string * ) str		617875	2		=			
ANR	617927	Identifier	ssptr		617875	0					
ANR	617928	CastExpression	( std :: string * ) str		617875	1					
ANR	617929	CastTarget	std :: string *		617875	0					
ANR	617930	Identifier	str		617875	1					
ANR	617931	ExpressionStatement	ssptr -> append ( ucptr )	160:4:5453:5475	617875	5	True				
ANR	617932	CallExpression	ssptr -> append ( ucptr )		617875	0					
ANR	617933	Callee	ssptr -> append		617875	0					
ANR	617934	PtrMemberAccess	ssptr -> append		617875	0					
ANR	617935	Identifier	ssptr		617875	0					
ANR	617936	Identifier	append		617875	1					
ANR	617937	ArgumentList	ucptr		617875	1					
ANR	617938	Argument	ucptr		617875	0					
ANR	617939	Identifier	ucptr		617875	0					
ANR	617940	ExpressionStatement	( * ssptr ) += last	161:4:5481:5497	617875	6	True				
ANR	617941	AssignmentExpression	( * ssptr ) += last		617875	0		+=			
ANR	617942	UnaryOperationExpression	* ssptr		617875	0					
ANR	617943	UnaryOperator	*		617875	0					
ANR	617944	Identifier	ssptr		617875	1					
ANR	617945	Identifier	last		617875	1					
ANR	617946	ExpressionStatement	ucptr [ ( size * nmemb ) - 1 ] = last	162:4:5503:5537	617875	7	True				
ANR	617947	AssignmentExpression	ucptr [ ( size * nmemb ) - 1 ] = last		617875	0		=			
ANR	617948	ArrayIndexing	ucptr [ ( size * nmemb ) - 1 ]		617875	0					
ANR	617949	Identifier	ucptr		617875	0					
ANR	617950	AdditiveExpression	( size * nmemb ) - 1		617875	1		-			
ANR	617951	MultiplicativeExpression	size * nmemb		617875	0		*			
ANR	617952	Identifier	size		617875	0					
ANR	617953	Identifier	nmemb		617875	1					
ANR	617954	PrimaryExpression	1		617875	1					
ANR	617955	Identifier	last		617875	1					
ANR	617956	ReturnStatement	return ( size * nmemb ) ;	164:4:5548:5569	617875	8	True				
ANR	617957	MultiplicativeExpression	size * nmemb		617875	0		*			
ANR	617958	Identifier	size		617875	0					
ANR	617959	Identifier	nmemb		617875	1					
ANR	617960	ReturnType	size_t		617875	1					
ANR	617961	Identifier	appendToString		617875	2					
ANR	617962	ParameterList	"void * ptr , size_t size , size_t nmemb , void * str"		617875	3					
ANR	617963	Parameter	void * ptr	153:23:5179:5188	617875	0	True				
ANR	617964	ParameterType	void *		617875	0					
ANR	617965	Identifier	ptr		617875	1					
ANR	617966	Parameter	size_t size	153:35:5191:5201	617875	1	True				
ANR	617967	ParameterType	size_t		617875	0					
ANR	617968	Identifier	size		617875	1					
ANR	617969	Parameter	size_t nmemb	153:48:5204:5215	617875	2	True				
ANR	617970	ParameterType	size_t		617875	0					
ANR	617971	Identifier	nmemb		617875	1					
ANR	617972	Parameter	void * str	153:62:5218:5227	617875	3	True				
ANR	617973	ParameterType	void *		617875	0					
ANR	617974	Identifier	str		617875	1					
ANR	617975	CFGEntryNode	ENTRY		617875		True				
ANR	617976	CFGExitNode	EXIT		617875		True				
ANR	617977	Symbol	str		617875						
ANR	617978	Symbol	* size		617875						
ANR	617979	Symbol	* ssptr		617875						
ANR	617980	Symbol	size		617875						
ANR	617981	Symbol	* nmemb		617875						
ANR	617982	Symbol	last		617875						
ANR	617983	Symbol	ssptr		617875						
ANR	617984	Symbol	nmemb		617875						
ANR	617985	Symbol	* ucptr		617875						
ANR	617986	Symbol	ptr		617875						
ANR	617987	Symbol	ucptr		617875						
ANR	617988	Function	AmazonRequest :: AmazonRequest	167:0:5574:5607							
ANR	617989	FunctionDef	AmazonRequest :: AmazonRequest ()		617988	0					
ANR	617990	CompoundStatement		167:31:5605:5607	617988	0					
ANR	617991	Identifier	AmazonRequest :: AmazonRequest		617988	1					
ANR	617992	ParameterList			617988	2					
ANR	617993	CFGEntryNode	ENTRY		617988		True				
ANR	617994	CFGExitNode	EXIT		617988		True				
ANR	617995	Function	AmazonRequest :: ~AmazonRequest	169:0:5610:5644							
ANR	617996	FunctionDef	AmazonRequest :: ~AmazonRequest ()		617995	0					
ANR	617997	CompoundStatement		169:32:5642:5644	617995	0					
ANR	617998	Identifier	AmazonRequest :: ~AmazonRequest		617995	1					
ANR	617999	ParameterList			617995	2					
ANR	618000	CFGEntryNode	ENTRY		617995		True				
ANR	618001	CFGExitNode	EXIT		617995		True				
ANR	618002	DeclStmt									
ANR	618003	Decl							CURLcode rv	CURLcode rv	B
ANR	618004	Function	AmazonRequest :: SendRequest	182:0:6066:19749							
ANR	618005	FunctionDef	AmazonRequest :: SendRequest ()		618004	0					
ANR	618006	CompoundStatement		182:34:6100:19749	618004	0					
ANR	618007	IfStatement	"if ( query_parameters . find ( ""Action"" ) == query_parameters . end ( ) )"		618004	0					
ANR	618008	Condition	"query_parameters . find ( ""Action"" ) == query_parameters . end ( )"	190:8:6324:6382	618004	0	True				
ANR	618009	EqualityExpression	"query_parameters . find ( ""Action"" ) == query_parameters . end ( )"		618004	0		==			
ANR	618010	CallExpression	"query_parameters . find ( ""Action"" )"		618004	0					
ANR	618011	Callee	query_parameters . find		618004	0					
ANR	618012	MemberAccess	query_parameters . find		618004	0					
ANR	618013	Identifier	query_parameters		618004	0					
ANR	618014	Identifier	find		618004	1					
ANR	618015	ArgumentList	"""Action"""		618004	1					
ANR	618016	Argument	"""Action"""		618004	0					
ANR	618017	PrimaryExpression	"""Action"""		618004	0					
ANR	618018	CallExpression	query_parameters . end ( )		618004	1					
ANR	618019	Callee	query_parameters . end		618004	0					
ANR	618020	MemberAccess	query_parameters . end		618004	0					
ANR	618021	Identifier	query_parameters		618004	0					
ANR	618022	Identifier	end		618004	1					
ANR	618023	ArgumentList			618004	1					
ANR	618024	CompoundStatement		9:70:285:285	618004	1					
ANR	618025	ExpressionStatement	"this -> errorCode = ""E_INTERNAL"""	191:8:6396:6426	618004	0	True				
ANR	618026	AssignmentExpression	"this -> errorCode = ""E_INTERNAL"""		618004	0		=			
ANR	618027	PtrMemberAccess	this -> errorCode		618004	0					
ANR	618028	Identifier	this		618004	0					
ANR	618029	Identifier	errorCode		618004	1					
ANR	618030	PrimaryExpression	"""E_INTERNAL"""		618004	1					
ANR	618031	ExpressionStatement	"this -> errorMessage = ""No action specified in request."""	192:8:6436:6490	618004	1	True				
ANR	618032	AssignmentExpression	"this -> errorMessage = ""No action specified in request."""		618004	0		=			
ANR	618033	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	618034	Identifier	this		618004	0					
ANR	618035	Identifier	errorMessage		618004	1					
ANR	618036	PrimaryExpression	"""No action specified in request."""		618004	1					
ANR	618037	ExpressionStatement	"dprintf ( D_ALWAYS , ""No action specified in request, failing.\\n"" )"	193:8:6500:6565	618004	2	True				
ANR	618038	CallExpression	"dprintf ( D_ALWAYS , ""No action specified in request, failing.\\n"" )"		618004	0					
ANR	618039	Callee	dprintf		618004	0					
ANR	618040	Identifier	dprintf		618004	0					
ANR	618041	ArgumentList	D_ALWAYS		618004	1					
ANR	618042	Argument	D_ALWAYS		618004	0					
ANR	618043	Identifier	D_ALWAYS		618004	0					
ANR	618044	Argument	"""No action specified in request, failing.\\n"""		618004	1					
ANR	618045	PrimaryExpression	"""No action specified in request, failing.\\n"""		618004	0					
ANR	618046	ReturnStatement	return false ;	194:8:6575:6587	618004	3	True				
ANR	618047	Identifier	false		618004	0					
ANR	618048	IdentifierDeclStatement	Regex r ;	202:4:6909:6916	618004	1	True				
ANR	618049	IdentifierDecl	r		618004	0					
ANR	618050	IdentifierDeclType	Regex		618004	0					
ANR	618051	Identifier	r		618004	1					
ANR	618052	IdentifierDeclStatement	int errCode = 0 ;	202:13:6918:6933	618004	2	True				
ANR	618053	IdentifierDecl	errCode = 0		618004	0					
ANR	618054	IdentifierDeclType	int		618004	0					
ANR	618055	Identifier	errCode		618004	1					
ANR	618056	AssignmentExpression	errCode = 0		618004	2		=			
ANR	618057	Identifier	errCode		618004	0					
ANR	618058	PrimaryExpression	0		618004	1					
ANR	618059	IdentifierDeclStatement	const char * errString = 0 ;	202:30:6935:6961	618004	3	True				
ANR	618060	IdentifierDecl	* errString = 0		618004	0					
ANR	618061	IdentifierDeclType	const char *		618004	0					
ANR	618062	Identifier	errString		618004	1					
ANR	618063	AssignmentExpression	* errString = 0		618004	2		=			
ANR	618064	Identifier	errString		618004	0					
ANR	618065	PrimaryExpression	0		618004	1					
ANR	618066	IdentifierDeclStatement	"bool patternOK = r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode ) ;"	203:4:6967:7048	618004	4	True				
ANR	618067	IdentifierDecl	"patternOK = r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode )"		618004	0					
ANR	618068	IdentifierDeclType	bool		618004	0					
ANR	618069	Identifier	patternOK		618004	1					
ANR	618070	AssignmentExpression	"patternOK = r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode )"		618004	2		=			
ANR	618071	Identifier	patternOK		618004	0					
ANR	618072	CallExpression	"r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode )"		618004	1					
ANR	618073	Callee	r . compile		618004	0					
ANR	618074	MemberAccess	r . compile		618004	0					
ANR	618075	Identifier	r		618004	0					
ANR	618076	Identifier	compile		618004	1					
ANR	618077	ArgumentList	"""([^:]+)://(([^/]+)(/.*)?)"""		618004	1					
ANR	618078	Argument	"""([^:]+)://(([^/]+)(/.*)?)"""		618004	0					
ANR	618079	PrimaryExpression	"""([^:]+)://(([^/]+)(/.*)?)"""		618004	0					
ANR	618080	Argument	& errString		618004	1					
ANR	618081	UnaryOperationExpression	& errString		618004	0					
ANR	618082	UnaryOperator	&		618004	0					
ANR	618083	Identifier	errString		618004	1					
ANR	618084	Argument	& errCode		618004	2					
ANR	618085	UnaryOperationExpression	& errCode		618004	0					
ANR	618086	UnaryOperator	&		618004	0					
ANR	618087	Identifier	errCode		618004	1					
ANR	618088	ExpressionStatement	assert ( patternOK )	204:4:7054:7073	618004	5	True				
ANR	618089	CallExpression	assert ( patternOK )		618004	0					
ANR	618090	Callee	assert		618004	0					
ANR	618091	Identifier	assert		618004	0					
ANR	618092	ArgumentList	patternOK		618004	1					
ANR	618093	Argument	patternOK		618004	0					
ANR	618094	Identifier	patternOK		618004	0					
ANR	618095	IdentifierDeclStatement	ExtArray < MyString > groups ( 5 ) ;	205:4:7079:7107	618004	6	True				
ANR	618096	IdentifierDecl	groups ( 5 )		618004	0					
ANR	618097	IdentifierDeclType	ExtArray < MyString >		618004	0					
ANR	618098	Identifier	groups		618004	1					
ANR	618099	PrimaryExpression	5		618004	2					
ANR	618100	IdentifierDeclStatement	"bool matchFound = r . match ( this -> serviceURL . c_str ( ) , & groups ) ;"	206:4:7113:7176	618004	7	True				
ANR	618101	IdentifierDecl	"matchFound = r . match ( this -> serviceURL . c_str ( ) , & groups )"		618004	0					
ANR	618102	IdentifierDeclType	bool		618004	0					
ANR	618103	Identifier	matchFound		618004	1					
ANR	618104	AssignmentExpression	"matchFound = r . match ( this -> serviceURL . c_str ( ) , & groups )"		618004	2		=			
ANR	618105	Identifier	matchFound		618004	0					
ANR	618106	CallExpression	"r . match ( this -> serviceURL . c_str ( ) , & groups )"		618004	1					
ANR	618107	Callee	r . match		618004	0					
ANR	618108	MemberAccess	r . match		618004	0					
ANR	618109	Identifier	r		618004	0					
ANR	618110	Identifier	match		618004	1					
ANR	618111	ArgumentList	this -> serviceURL . c_str ( )		618004	1					
ANR	618112	Argument	this -> serviceURL . c_str ( )		618004	0					
ANR	618113	CallExpression	this -> serviceURL . c_str ( )		618004	0					
ANR	618114	Callee	this -> serviceURL . c_str		618004	0					
ANR	618115	MemberAccess	this -> serviceURL . c_str		618004	0					
ANR	618116	PtrMemberAccess	this -> serviceURL		618004	0					
ANR	618117	Identifier	this		618004	0					
ANR	618118	Identifier	serviceURL		618004	1					
ANR	618119	Identifier	c_str		618004	1					
ANR	618120	ArgumentList			618004	1					
ANR	618121	Argument	& groups		618004	1					
ANR	618122	UnaryOperationExpression	& groups		618004	0					
ANR	618123	UnaryOperator	&		618004	0					
ANR	618124	Identifier	groups		618004	1					
ANR	618125	IfStatement	"if ( ( ! matchFound ) || ( groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"" ) )"		618004	8					
ANR	618126	Condition	"( ! matchFound ) || ( groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"" )"	207:8:7186:7272	618004	0	True				
ANR	618127	OrExpression	"( ! matchFound ) || ( groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"" )"		618004	0		||			
ANR	618128	UnaryOperationExpression	! matchFound		618004	0					
ANR	618129	UnaryOperator	!		618004	0					
ANR	618130	Identifier	matchFound		618004	1					
ANR	618131	AndExpression	"groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"""		618004	1		&&			
ANR	618132	EqualityExpression	"groups [ 1 ] != ""http"""		618004	0		!=			
ANR	618133	ArrayIndexing	groups [ 1 ]		618004	0					
ANR	618134	Identifier	groups		618004	0					
ANR	618135	PrimaryExpression	1		618004	1					
ANR	618136	PrimaryExpression	"""http"""		618004	1					
ANR	618137	AndExpression	"groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"""		618004	1		&&			
ANR	618138	EqualityExpression	"groups [ 1 ] != ""https"""		618004	0		!=			
ANR	618139	ArrayIndexing	groups [ 1 ]		618004	0					
ANR	618140	Identifier	groups		618004	0					
ANR	618141	PrimaryExpression	1		618004	1					
ANR	618142	PrimaryExpression	"""https"""		618004	1					
ANR	618143	EqualityExpression	"groups [ 1 ] != ""x509"""		618004	1		!=			
ANR	618144	ArrayIndexing	groups [ 1 ]		618004	0					
ANR	618145	Identifier	groups		618004	0					
ANR	618146	PrimaryExpression	1		618004	1					
ANR	618147	PrimaryExpression	"""x509"""		618004	1					
ANR	618148	CompoundStatement		26:98:1175:1175	618004	1					
ANR	618149	ExpressionStatement	"this -> errorCode = ""E_INVALID_SERVICE_URL"""	208:8:7286:7327	618004	0	True				
ANR	618150	AssignmentExpression	"this -> errorCode = ""E_INVALID_SERVICE_URL"""		618004	0		=			
ANR	618151	PtrMemberAccess	this -> errorCode		618004	0					
ANR	618152	Identifier	this		618004	0					
ANR	618153	Identifier	errorCode		618004	1					
ANR	618154	PrimaryExpression	"""E_INVALID_SERVICE_URL"""		618004	1					
ANR	618155	ExpressionStatement	"this -> errorMessage = ""Failed to parse service URL."""	209:8:7337:7388	618004	1	True				
ANR	618156	AssignmentExpression	"this -> errorMessage = ""Failed to parse service URL."""		618004	0		=			
ANR	618157	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	618158	Identifier	this		618004	0					
ANR	618159	Identifier	errorMessage		618004	1					
ANR	618160	PrimaryExpression	"""Failed to parse service URL."""		618004	1					
ANR	618161	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to match regex against service URL '%s'.\\n"" , serviceURL . c_str ( ) )"	210:8:7398:7490	618004	2	True				
ANR	618162	CallExpression	"dprintf ( D_ALWAYS , ""Failed to match regex against service URL '%s'.\\n"" , serviceURL . c_str ( ) )"		618004	0					
ANR	618163	Callee	dprintf		618004	0					
ANR	618164	Identifier	dprintf		618004	0					
ANR	618165	ArgumentList	D_ALWAYS		618004	1					
ANR	618166	Argument	D_ALWAYS		618004	0					
ANR	618167	Identifier	D_ALWAYS		618004	0					
ANR	618168	Argument	"""Failed to match regex against service URL '%s'.\\n"""		618004	1					
ANR	618169	PrimaryExpression	"""Failed to match regex against service URL '%s'.\\n"""		618004	0					
ANR	618170	Argument	serviceURL . c_str ( )		618004	2					
ANR	618171	CallExpression	serviceURL . c_str ( )		618004	0					
ANR	618172	Callee	serviceURL . c_str		618004	0					
ANR	618173	MemberAccess	serviceURL . c_str		618004	0					
ANR	618174	Identifier	serviceURL		618004	0					
ANR	618175	Identifier	c_str		618004	1					
ANR	618176	ArgumentList			618004	1					
ANR	618177	ReturnStatement	return false ;	211:8:7500:7512	618004	3	True				
ANR	618178	Identifier	false		618004	0					
ANR	618179	IdentifierDeclStatement	std :: string protocol = groups [ 1 ] ;	213:4:7524:7556	618004	9	True				
ANR	618180	IdentifierDecl	protocol = groups [ 1 ]		618004	0					
ANR	618181	IdentifierDeclType	std :: string		618004	0					
ANR	618182	Identifier	protocol		618004	1					
ANR	618183	AssignmentExpression	protocol = groups [ 1 ]		618004	2		=			
ANR	618184	Identifier	protocol		618004	0					
ANR	618185	ArrayIndexing	groups [ 1 ]		618004	1					
ANR	618186	Identifier	groups		618004	0					
ANR	618187	PrimaryExpression	1		618004	1					
ANR	618188	IdentifierDeclStatement	std :: string hostAndPath = groups [ 2 ] ;	214:4:7562:7597	618004	10	True				
ANR	618189	IdentifierDecl	hostAndPath = groups [ 2 ]		618004	0					
ANR	618190	IdentifierDeclType	std :: string		618004	0					
ANR	618191	Identifier	hostAndPath		618004	1					
ANR	618192	AssignmentExpression	hostAndPath = groups [ 2 ]		618004	2		=			
ANR	618193	Identifier	hostAndPath		618004	0					
ANR	618194	ArrayIndexing	groups [ 2 ]		618004	1					
ANR	618195	Identifier	groups		618004	0					
ANR	618196	PrimaryExpression	2		618004	1					
ANR	618197	IdentifierDeclStatement	std :: string valueOfHostHeaderInLowercase = groups [ 3 ] ;	215:4:7603:7655	618004	11	True				
ANR	618198	IdentifierDecl	valueOfHostHeaderInLowercase = groups [ 3 ]		618004	0					
ANR	618199	IdentifierDeclType	std :: string		618004	0					
ANR	618200	Identifier	valueOfHostHeaderInLowercase		618004	1					
ANR	618201	AssignmentExpression	valueOfHostHeaderInLowercase = groups [ 3 ]		618004	2		=			
ANR	618202	Identifier	valueOfHostHeaderInLowercase		618004	0					
ANR	618203	ArrayIndexing	groups [ 3 ]		618004	1					
ANR	618204	Identifier	groups		618004	0					
ANR	618205	PrimaryExpression	3		618004	1					
ANR	618206	ExpressionStatement	"std :: transform ( valueOfHostHeaderInLowercase . begin ( ) , valueOfHostHeaderInLowercase . end ( ) , valueOfHostHeaderInLowercase . begin ( ) , & tolower )"	216:4:7661:7860	618004	12	True				
ANR	618207	CallExpression	"std :: transform ( valueOfHostHeaderInLowercase . begin ( ) , valueOfHostHeaderInLowercase . end ( ) , valueOfHostHeaderInLowercase . begin ( ) , & tolower )"		618004	0					
ANR	618208	Callee	std :: transform		618004	0					
ANR	618209	Identifier	std :: transform		618004	0					
ANR	618210	ArgumentList	valueOfHostHeaderInLowercase . begin ( )		618004	1					
ANR	618211	Argument	valueOfHostHeaderInLowercase . begin ( )		618004	0					
ANR	618212	CallExpression	valueOfHostHeaderInLowercase . begin ( )		618004	0					
ANR	618213	Callee	valueOfHostHeaderInLowercase . begin		618004	0					
ANR	618214	MemberAccess	valueOfHostHeaderInLowercase . begin		618004	0					
ANR	618215	Identifier	valueOfHostHeaderInLowercase		618004	0					
ANR	618216	Identifier	begin		618004	1					
ANR	618217	ArgumentList			618004	1					
ANR	618218	Argument	valueOfHostHeaderInLowercase . end ( )		618004	1					
ANR	618219	CallExpression	valueOfHostHeaderInLowercase . end ( )		618004	0					
ANR	618220	Callee	valueOfHostHeaderInLowercase . end		618004	0					
ANR	618221	MemberAccess	valueOfHostHeaderInLowercase . end		618004	0					
ANR	618222	Identifier	valueOfHostHeaderInLowercase		618004	0					
ANR	618223	Identifier	end		618004	1					
ANR	618224	ArgumentList			618004	1					
ANR	618225	Argument	valueOfHostHeaderInLowercase . begin ( )		618004	2					
ANR	618226	CallExpression	valueOfHostHeaderInLowercase . begin ( )		618004	0					
ANR	618227	Callee	valueOfHostHeaderInLowercase . begin		618004	0					
ANR	618228	MemberAccess	valueOfHostHeaderInLowercase . begin		618004	0					
ANR	618229	Identifier	valueOfHostHeaderInLowercase		618004	0					
ANR	618230	Identifier	begin		618004	1					
ANR	618231	ArgumentList			618004	1					
ANR	618232	Argument	& tolower		618004	3					
ANR	618233	UnaryOperationExpression	& tolower		618004	0					
ANR	618234	UnaryOperator	&		618004	0					
ANR	618235	Identifier	tolower		618004	1					
ANR	618236	IdentifierDeclStatement	std :: string httpRequestURI = groups [ 4 ] ;	220:4:7866:7904	618004	13	True				
ANR	618237	IdentifierDecl	httpRequestURI = groups [ 4 ]		618004	0					
ANR	618238	IdentifierDeclType	std :: string		618004	0					
ANR	618239	Identifier	httpRequestURI		618004	1					
ANR	618240	AssignmentExpression	httpRequestURI = groups [ 4 ]		618004	2		=			
ANR	618241	Identifier	httpRequestURI		618004	0					
ANR	618242	ArrayIndexing	groups [ 4 ]		618004	1					
ANR	618243	Identifier	groups		618004	0					
ANR	618244	PrimaryExpression	4		618004	1					
ANR	618245	IfStatement	if ( httpRequestURI . empty ( ) )		618004	14					
ANR	618246	Condition	httpRequestURI . empty ( )	221:8:7914:7935	618004	0	True				
ANR	618247	CallExpression	httpRequestURI . empty ( )		618004	0					
ANR	618248	Callee	httpRequestURI . empty		618004	0					
ANR	618249	MemberAccess	httpRequestURI . empty		618004	0					
ANR	618250	Identifier	httpRequestURI		618004	0					
ANR	618251	Identifier	empty		618004	1					
ANR	618252	ArgumentList			618004	1					
ANR	618253	CompoundStatement		40:33:1838:1838	618004	1					
ANR	618254	ExpressionStatement	"httpRequestURI = ""/"""	221:35:7941:7961	618004	0	True				
ANR	618255	AssignmentExpression	"httpRequestURI = ""/"""		618004	0		=			
ANR	618256	Identifier	httpRequestURI		618004	0					
ANR	618257	PrimaryExpression	"""/"""		618004	1					
ANR	618258	IdentifierDeclStatement	std :: string keyID ;	227:4:8102:8119	618004	15	True				
ANR	618259	IdentifierDecl	keyID		618004	0					
ANR	618260	IdentifierDeclType	std :: string		618004	0					
ANR	618261	Identifier	keyID		618004	1					
ANR	618262	IfStatement	"if ( protocol == ""x509"" )"		618004	16					
ANR	618263	Condition	"protocol == ""x509"""	228:8:8129:8146	618004	0	True				
ANR	618264	EqualityExpression	"protocol == ""x509"""		618004	0		==			
ANR	618265	Identifier	protocol		618004	0					
ANR	618266	PrimaryExpression	"""x509"""		618004	1					
ANR	618267	CompoundStatement		47:29:2049:2049	618004	1					
ANR	618268	ExpressionStatement	"keyID = getenv ( ""USER"" )"	229:8:8160:8184	618004	0	True				
ANR	618269	AssignmentExpression	"keyID = getenv ( ""USER"" )"		618004	0		=			
ANR	618270	Identifier	keyID		618004	0					
ANR	618271	CallExpression	"getenv ( ""USER"" )"		618004	1					
ANR	618272	Callee	getenv		618004	0					
ANR	618273	Identifier	getenv		618004	0					
ANR	618274	ArgumentList	"""USER"""		618004	1					
ANR	618275	Argument	"""USER"""		618004	0					
ANR	618276	PrimaryExpression	"""USER"""		618004	0					
ANR	618277	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using '%s' as access key ID for x.509\\n"" , keyID . c_str ( ) )"	230:8:8194:8274	618004	1	True				
ANR	618278	CallExpression	"dprintf ( D_FULLDEBUG , ""Using '%s' as access key ID for x.509\\n"" , keyID . c_str ( ) )"		618004	0					
ANR	618279	Callee	dprintf		618004	0					
ANR	618280	Identifier	dprintf		618004	0					
ANR	618281	ArgumentList	D_FULLDEBUG		618004	1					
ANR	618282	Argument	D_FULLDEBUG		618004	0					
ANR	618283	Identifier	D_FULLDEBUG		618004	0					
ANR	618284	Argument	"""Using '%s' as access key ID for x.509\\n"""		618004	1					
ANR	618285	PrimaryExpression	"""Using '%s' as access key ID for x.509\\n"""		618004	0					
ANR	618286	Argument	keyID . c_str ( )		618004	2					
ANR	618287	CallExpression	keyID . c_str ( )		618004	0					
ANR	618288	Callee	keyID . c_str		618004	0					
ANR	618289	MemberAccess	keyID . c_str		618004	0					
ANR	618290	Identifier	keyID		618004	0					
ANR	618291	Identifier	c_str		618004	1					
ANR	618292	ArgumentList			618004	1					
ANR	618293	ElseStatement	else		618004	0					
ANR	618294	CompoundStatement		50:11:2186:2186	618004	0					
ANR	618295	IfStatement	"if ( ! readShortFile ( this -> accessKeyFile , keyID ) )"		618004	0					
ANR	618296	Condition	"! readShortFile ( this -> accessKeyFile , keyID )"	232:12:8301:8345	618004	0	True				
ANR	618297	UnaryOperationExpression	"! readShortFile ( this -> accessKeyFile , keyID )"		618004	0					
ANR	618298	UnaryOperator	!		618004	0					
ANR	618299	CallExpression	"readShortFile ( this -> accessKeyFile , keyID )"		618004	1					
ANR	618300	Callee	readShortFile		618004	0					
ANR	618301	Identifier	readShortFile		618004	0					
ANR	618302	ArgumentList	this -> accessKeyFile		618004	1					
ANR	618303	Argument	this -> accessKeyFile		618004	0					
ANR	618304	PtrMemberAccess	this -> accessKeyFile		618004	0					
ANR	618305	Identifier	this		618004	0					
ANR	618306	Identifier	accessKeyFile		618004	1					
ANR	618307	Argument	keyID		618004	1					
ANR	618308	Identifier	keyID		618004	0					
ANR	618309	CompoundStatement		51:60:2248:2248	618004	1					
ANR	618310	ExpressionStatement	"this -> errorCode = ""E_FILE_IO"""	233:12:8363:8392	618004	0	True				
ANR	618311	AssignmentExpression	"this -> errorCode = ""E_FILE_IO"""		618004	0		=			
ANR	618312	PtrMemberAccess	this -> errorCode		618004	0					
ANR	618313	Identifier	this		618004	0					
ANR	618314	Identifier	errorCode		618004	1					
ANR	618315	PrimaryExpression	"""E_FILE_IO"""		618004	1					
ANR	618316	ExpressionStatement	"this -> errorMessage = ""Unable to read from accesskey file '"" + this -> accessKeyFile + ""'."""	234:12:8406:8494	618004	1	True				
ANR	618317	AssignmentExpression	"this -> errorMessage = ""Unable to read from accesskey file '"" + this -> accessKeyFile + ""'."""		618004	0		=			
ANR	618318	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	618319	Identifier	this		618004	0					
ANR	618320	Identifier	errorMessage		618004	1					
ANR	618321	AdditiveExpression	"""Unable to read from accesskey file '"" + this -> accessKeyFile + ""'."""		618004	1		+			
ANR	618322	PrimaryExpression	"""Unable to read from accesskey file '"""		618004	0					
ANR	618323	AdditiveExpression	"this -> accessKeyFile + ""'."""		618004	1		+			
ANR	618324	PtrMemberAccess	this -> accessKeyFile		618004	0					
ANR	618325	Identifier	this		618004	0					
ANR	618326	Identifier	accessKeyFile		618004	1					
ANR	618327	PrimaryExpression	"""'."""		618004	1					
ANR	618328	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to read accesskey file '%s', failing.\\n"" , this -> accessKeyFile . c_str ( ) )"	235:12:8508:8606	618004	2	True				
ANR	618329	CallExpression	"dprintf ( D_ALWAYS , ""Unable to read accesskey file '%s', failing.\\n"" , this -> accessKeyFile . c_str ( ) )"		618004	0					
ANR	618330	Callee	dprintf		618004	0					
ANR	618331	Identifier	dprintf		618004	0					
ANR	618332	ArgumentList	D_ALWAYS		618004	1					
ANR	618333	Argument	D_ALWAYS		618004	0					
ANR	618334	Identifier	D_ALWAYS		618004	0					
ANR	618335	Argument	"""Unable to read accesskey file '%s', failing.\\n"""		618004	1					
ANR	618336	PrimaryExpression	"""Unable to read accesskey file '%s', failing.\\n"""		618004	0					
ANR	618337	Argument	this -> accessKeyFile . c_str ( )		618004	2					
ANR	618338	CallExpression	this -> accessKeyFile . c_str ( )		618004	0					
ANR	618339	Callee	this -> accessKeyFile . c_str		618004	0					
ANR	618340	MemberAccess	this -> accessKeyFile . c_str		618004	0					
ANR	618341	PtrMemberAccess	this -> accessKeyFile		618004	0					
ANR	618342	Identifier	this		618004	0					
ANR	618343	Identifier	accessKeyFile		618004	1					
ANR	618344	Identifier	c_str		618004	1					
ANR	618345	ArgumentList			618004	1					
ANR	618346	ReturnStatement	return false ;	236:12:8620:8632	618004	3	True				
ANR	618347	Identifier	false		618004	0					
ANR	618348	IfStatement	if ( keyID [ keyID . length ( ) - 1 ] == '\\n' )		618004	1					
ANR	618349	Condition	keyID [ keyID . length ( ) - 1 ] == '\\n'	238:12:8656:8690	618004	0	True				
ANR	618350	EqualityExpression	keyID [ keyID . length ( ) - 1 ] == '\\n'		618004	0		==			
ANR	618351	ArrayIndexing	keyID [ keyID . length ( ) - 1 ]		618004	0					
ANR	618352	Identifier	keyID		618004	0					
ANR	618353	AdditiveExpression	keyID . length ( ) - 1		618004	1		-			
ANR	618354	CallExpression	keyID . length ( )		618004	0					
ANR	618355	Callee	keyID . length		618004	0					
ANR	618356	MemberAccess	keyID . length		618004	0					
ANR	618357	Identifier	keyID		618004	0					
ANR	618358	Identifier	length		618004	1					
ANR	618359	ArgumentList			618004	1					
ANR	618360	PrimaryExpression	1		618004	1					
ANR	618361	PrimaryExpression	'\\n'		618004	1					
ANR	618362	CompoundStatement		57:50:2593:2593	618004	1					
ANR	618363	ExpressionStatement	keyID . erase ( keyID . length ( ) - 1 )	238:52:8696:8729	618004	0	True				
ANR	618364	CallExpression	keyID . erase ( keyID . length ( ) - 1 )		618004	0					
ANR	618365	Callee	keyID . erase		618004	0					
ANR	618366	MemberAccess	keyID . erase		618004	0					
ANR	618367	Identifier	keyID		618004	0					
ANR	618368	Identifier	erase		618004	1					
ANR	618369	ArgumentList	keyID . length ( ) - 1		618004	1					
ANR	618370	Argument	keyID . length ( ) - 1		618004	0					
ANR	618371	AdditiveExpression	keyID . length ( ) - 1		618004	0		-			
ANR	618372	CallExpression	keyID . length ( )		618004	0					
ANR	618373	Callee	keyID . length		618004	0					
ANR	618374	MemberAccess	keyID . length		618004	0					
ANR	618375	Identifier	keyID		618004	0					
ANR	618376	Identifier	length		618004	1					
ANR	618377	ArgumentList			618004	1					
ANR	618378	PrimaryExpression	1		618004	1					
ANR	618379	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""AWSAccessKeyId"" , keyID ) )"	240:4:8751:8819	618004	17	True				
ANR	618380	CallExpression	"query_parameters . insert ( std :: make_pair ( ""AWSAccessKeyId"" , keyID ) )"		618004	0					
ANR	618381	Callee	query_parameters . insert		618004	0					
ANR	618382	MemberAccess	query_parameters . insert		618004	0					
ANR	618383	Identifier	query_parameters		618004	0					
ANR	618384	Identifier	insert		618004	1					
ANR	618385	ArgumentList	"std :: make_pair ( ""AWSAccessKeyId"" , keyID )"		618004	1					
ANR	618386	Argument	"std :: make_pair ( ""AWSAccessKeyId"" , keyID )"		618004	0					
ANR	618387	CallExpression	"std :: make_pair ( ""AWSAccessKeyId"" , keyID )"		618004	0					
ANR	618388	Callee	std :: make_pair		618004	0					
ANR	618389	Identifier	std :: make_pair		618004	0					
ANR	618390	ArgumentList	"""AWSAccessKeyId"""		618004	1					
ANR	618391	Argument	"""AWSAccessKeyId"""		618004	0					
ANR	618392	PrimaryExpression	"""AWSAccessKeyId"""		618004	0					
ANR	618393	Argument	keyID		618004	1					
ANR	618394	Identifier	keyID		618004	0					
ANR	618395	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""SignatureVersion"" , ""2"" ) )"	246:4:8936:9004	618004	18	True				
ANR	618396	CallExpression	"query_parameters . insert ( std :: make_pair ( ""SignatureVersion"" , ""2"" ) )"		618004	0					
ANR	618397	Callee	query_parameters . insert		618004	0					
ANR	618398	MemberAccess	query_parameters . insert		618004	0					
ANR	618399	Identifier	query_parameters		618004	0					
ANR	618400	Identifier	insert		618004	1					
ANR	618401	ArgumentList	"std :: make_pair ( ""SignatureVersion"" , ""2"" )"		618004	1					
ANR	618402	Argument	"std :: make_pair ( ""SignatureVersion"" , ""2"" )"		618004	0					
ANR	618403	CallExpression	"std :: make_pair ( ""SignatureVersion"" , ""2"" )"		618004	0					
ANR	618404	Callee	std :: make_pair		618004	0					
ANR	618405	Identifier	std :: make_pair		618004	0					
ANR	618406	ArgumentList	"""SignatureVersion"""		618004	1					
ANR	618407	Argument	"""SignatureVersion"""		618004	0					
ANR	618408	PrimaryExpression	"""SignatureVersion"""		618004	0					
ANR	618409	Argument	"""2"""		618004	1					
ANR	618410	PrimaryExpression	"""2"""		618004	0					
ANR	618411	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" ) )"	247:4:9010:9086	618004	19	True				
ANR	618412	CallExpression	"query_parameters . insert ( std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" ) )"		618004	0					
ANR	618413	Callee	query_parameters . insert		618004	0					
ANR	618414	MemberAccess	query_parameters . insert		618004	0					
ANR	618415	Identifier	query_parameters		618004	0					
ANR	618416	Identifier	insert		618004	1					
ANR	618417	ArgumentList	"std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" )"		618004	1					
ANR	618418	Argument	"std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" )"		618004	0					
ANR	618419	CallExpression	"std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" )"		618004	0					
ANR	618420	Callee	std :: make_pair		618004	0					
ANR	618421	Identifier	std :: make_pair		618004	0					
ANR	618422	ArgumentList	"""SignatureMethod"""		618004	1					
ANR	618423	Argument	"""SignatureMethod"""		618004	0					
ANR	618424	PrimaryExpression	"""SignatureMethod"""		618004	0					
ANR	618425	Argument	"""HmacSHA256"""		618004	1					
ANR	618426	PrimaryExpression	"""HmacSHA256"""		618004	0					
ANR	618427	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""Version"" , ""2010-11-15"" ) )"	252:4:9188:9256	618004	20	True				
ANR	618428	CallExpression	"query_parameters . insert ( std :: make_pair ( ""Version"" , ""2010-11-15"" ) )"		618004	0					
ANR	618429	Callee	query_parameters . insert		618004	0					
ANR	618430	MemberAccess	query_parameters . insert		618004	0					
ANR	618431	Identifier	query_parameters		618004	0					
ANR	618432	Identifier	insert		618004	1					
ANR	618433	ArgumentList	"std :: make_pair ( ""Version"" , ""2010-11-15"" )"		618004	1					
ANR	618434	Argument	"std :: make_pair ( ""Version"" , ""2010-11-15"" )"		618004	0					
ANR	618435	CallExpression	"std :: make_pair ( ""Version"" , ""2010-11-15"" )"		618004	0					
ANR	618436	Callee	std :: make_pair		618004	0					
ANR	618437	Identifier	std :: make_pair		618004	0					
ANR	618438	ArgumentList	"""Version"""		618004	1					
ANR	618439	Argument	"""Version"""		618004	0					
ANR	618440	PrimaryExpression	"""Version"""		618004	0					
ANR	618441	Argument	"""2010-11-15"""		618004	1					
ANR	618442	PrimaryExpression	"""2010-11-15"""		618004	0					
ANR	618443	IdentifierDeclStatement	time_t now ;	257:4:9344:9354	618004	21	True				
ANR	618444	IdentifierDecl	now		618004	0					
ANR	618445	IdentifierDeclType	time_t		618004	0					
ANR	618446	Identifier	now		618004	1					
ANR	618447	ExpressionStatement	time ( & now )	257:16:9356:9369	618004	22	True				
ANR	618448	CallExpression	time ( & now )		618004	0					
ANR	618449	Callee	time		618004	0					
ANR	618450	Identifier	time		618004	0					
ANR	618451	ArgumentList	& now		618004	1					
ANR	618452	Argument	& now		618004	0					
ANR	618453	UnaryOperationExpression	& now		618004	0					
ANR	618454	UnaryOperator	&		618004	0					
ANR	618455	Identifier	now		618004	1					
ANR	618456	IdentifierDeclStatement	struct tm brokenDownTime ;	258:4:9375:9399	618004	23	True				
ANR	618457	IdentifierDecl	brokenDownTime		618004	0					
ANR	618458	IdentifierDeclType	struct tm		618004	0					
ANR	618459	Identifier	brokenDownTime		618004	1					
ANR	618460	ExpressionStatement	"gmtime_r ( & now , & brokenDownTime )"	258:30:9401:9436	618004	24	True				
ANR	618461	CallExpression	"gmtime_r ( & now , & brokenDownTime )"		618004	0					
ANR	618462	Callee	gmtime_r		618004	0					
ANR	618463	Identifier	gmtime_r		618004	0					
ANR	618464	ArgumentList	& now		618004	1					
ANR	618465	Argument	& now		618004	0					
ANR	618466	UnaryOperationExpression	& now		618004	0					
ANR	618467	UnaryOperator	&		618004	0					
ANR	618468	Identifier	now		618004	1					
ANR	618469	Argument	& brokenDownTime		618004	1					
ANR	618470	UnaryOperationExpression	& brokenDownTime		618004	0					
ANR	618471	UnaryOperator	&		618004	0					
ANR	618472	Identifier	brokenDownTime		618004	1					
ANR	618473	IdentifierDeclStatement	"char iso8601 [ ] = ""YYYY-MM-DDThh:mm:ssZ"" ;"	259:4:9442:9481	618004	25	True				
ANR	618474	IdentifierDecl	"iso8601 [ ] = ""YYYY-MM-DDThh:mm:ssZ"""		618004	0					
ANR	618475	IdentifierDeclType	char [ ]		618004	0					
ANR	618476	Identifier	iso8601		618004	1					
ANR	618477	AssignmentExpression	"iso8601 [ ] = ""YYYY-MM-DDThh:mm:ssZ"""		618004	2		=			
ANR	618478	Identifier	iso8601		618004	0					
ANR	618479	PrimaryExpression	"""YYYY-MM-DDThh:mm:ssZ"""		618004	1					
ANR	618480	ExpressionStatement	"strftime ( iso8601 , 20 , ""%Y-%m-%dT%H:%M:%SZ"" , & brokenDownTime )"	260:4:9487:9550	618004	26	True				
ANR	618481	CallExpression	"strftime ( iso8601 , 20 , ""%Y-%m-%dT%H:%M:%SZ"" , & brokenDownTime )"		618004	0					
ANR	618482	Callee	strftime		618004	0					
ANR	618483	Identifier	strftime		618004	0					
ANR	618484	ArgumentList	iso8601		618004	1					
ANR	618485	Argument	iso8601		618004	0					
ANR	618486	Identifier	iso8601		618004	0					
ANR	618487	Argument	20		618004	1					
ANR	618488	PrimaryExpression	20		618004	0					
ANR	618489	Argument	"""%Y-%m-%dT%H:%M:%SZ"""		618004	2					
ANR	618490	PrimaryExpression	"""%Y-%m-%dT%H:%M:%SZ"""		618004	0					
ANR	618491	Argument	& brokenDownTime		618004	3					
ANR	618492	UnaryOperationExpression	& brokenDownTime		618004	0					
ANR	618493	UnaryOperator	&		618004	0					
ANR	618494	Identifier	brokenDownTime		618004	1					
ANR	618495	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""Timestamp"" , iso8601 ) )"	261:4:9556:9621	618004	27	True				
ANR	618496	CallExpression	"query_parameters . insert ( std :: make_pair ( ""Timestamp"" , iso8601 ) )"		618004	0					
ANR	618497	Callee	query_parameters . insert		618004	0					
ANR	618498	MemberAccess	query_parameters . insert		618004	0					
ANR	618499	Identifier	query_parameters		618004	0					
ANR	618500	Identifier	insert		618004	1					
ANR	618501	ArgumentList	"std :: make_pair ( ""Timestamp"" , iso8601 )"		618004	1					
ANR	618502	Argument	"std :: make_pair ( ""Timestamp"" , iso8601 )"		618004	0					
ANR	618503	CallExpression	"std :: make_pair ( ""Timestamp"" , iso8601 )"		618004	0					
ANR	618504	Callee	std :: make_pair		618004	0					
ANR	618505	Identifier	std :: make_pair		618004	0					
ANR	618506	ArgumentList	"""Timestamp"""		618004	1					
ANR	618507	Argument	"""Timestamp"""		618004	0					
ANR	618508	PrimaryExpression	"""Timestamp"""		618004	0					
ANR	618509	Argument	iso8601		618004	1					
ANR	618510	Identifier	iso8601		618004	0					
ANR	618511	IdentifierDeclStatement	std :: string canonicalizedQueryString ;	272:4:9912:9948	618004	28	True				
ANR	618512	IdentifierDecl	canonicalizedQueryString		618004	0					
ANR	618513	IdentifierDeclType	std :: string		618004	0					
ANR	618514	Identifier	canonicalizedQueryString		618004	1					
ANR	618515	IdentifierDeclStatement	AttributeValueMap encodedParameters ;	273:4:9954:9989	618004	29	True				
ANR	618516	IdentifierDecl	encodedParameters		618004	0					
ANR	618517	IdentifierDeclType	AttributeValueMap		618004	0					
ANR	618518	Identifier	encodedParameters		618004	1					
ANR	618519	IdentifierDeclStatement	AttributeValueMap :: const_iterator i ;	274:4:9995:10030	618004	30	True				
ANR	618520	IdentifierDecl	i		618004	0					
ANR	618521	IdentifierDeclType	AttributeValueMap :: const_iterator		618004	0					
ANR	618522	Identifier	i		618004	1					
ANR	618523	ForStatement	for ( i = query_parameters . begin ( ) ; i != query_parameters . end ( ) ; ++ i )		618004	31					
ANR	618524	ForInit	i = query_parameters . begin ( ) ;	275:9:10041:10069	618004	0	True				
ANR	618525	AssignmentExpression	i = query_parameters . begin ( )		618004	0		=			
ANR	618526	Identifier	i		618004	0					
ANR	618527	CallExpression	query_parameters . begin ( )		618004	1					
ANR	618528	Callee	query_parameters . begin		618004	0					
ANR	618529	MemberAccess	query_parameters . begin		618004	0					
ANR	618530	Identifier	query_parameters		618004	0					
ANR	618531	Identifier	begin		618004	1					
ANR	618532	ArgumentList			618004	1					
ANR	618533	Condition	i != query_parameters . end ( )	275:39:10071:10097	618004	1	True				
ANR	618534	EqualityExpression	i != query_parameters . end ( )		618004	0		!=			
ANR	618535	Identifier	i		618004	0					
ANR	618536	CallExpression	query_parameters . end ( )		618004	1					
ANR	618537	Callee	query_parameters . end		618004	0					
ANR	618538	MemberAccess	query_parameters . end		618004	0					
ANR	618539	Identifier	query_parameters		618004	0					
ANR	618540	Identifier	end		618004	1					
ANR	618541	ArgumentList			618004	1					
ANR	618542	UnaryExpression	++ i	275:68:10100:10102	618004	2	True				
ANR	618543	IncDec	++		618004	0					
ANR	618544	Identifier	i		618004	1					
ANR	618545	CompoundStatement		99:8:4202:4250	618004	3					
ANR	618546	IdentifierDeclStatement	std :: string name = amazonURLEncode ( i -> first ) ;	279:8:10247:10293	618004	0	True				
ANR	618547	IdentifierDecl	name = amazonURLEncode ( i -> first )		618004	0					
ANR	618548	IdentifierDeclType	std :: string		618004	0					
ANR	618549	Identifier	name		618004	1					
ANR	618550	AssignmentExpression	name = amazonURLEncode ( i -> first )		618004	2		=			
ANR	618551	Identifier	name		618004	0					
ANR	618552	CallExpression	amazonURLEncode ( i -> first )		618004	1					
ANR	618553	Callee	amazonURLEncode		618004	0					
ANR	618554	Identifier	amazonURLEncode		618004	0					
ANR	618555	ArgumentList	i -> first		618004	1					
ANR	618556	Argument	i -> first		618004	0					
ANR	618557	PtrMemberAccess	i -> first		618004	0					
ANR	618558	Identifier	i		618004	0					
ANR	618559	Identifier	first		618004	1					
ANR	618560	IdentifierDeclStatement	std :: string value = amazonURLEncode ( i -> second ) ;	280:8:10303:10351	618004	1	True				
ANR	618561	IdentifierDecl	value = amazonURLEncode ( i -> second )		618004	0					
ANR	618562	IdentifierDeclType	std :: string		618004	0					
ANR	618563	Identifier	value		618004	1					
ANR	618564	AssignmentExpression	value = amazonURLEncode ( i -> second )		618004	2		=			
ANR	618565	Identifier	value		618004	0					
ANR	618566	CallExpression	amazonURLEncode ( i -> second )		618004	1					
ANR	618567	Callee	amazonURLEncode		618004	0					
ANR	618568	Identifier	amazonURLEncode		618004	0					
ANR	618569	ArgumentList	i -> second		618004	1					
ANR	618570	Argument	i -> second		618004	0					
ANR	618571	PtrMemberAccess	i -> second		618004	0					
ANR	618572	Identifier	i		618004	0					
ANR	618573	Identifier	second		618004	1					
ANR	618574	ExpressionStatement	"encodedParameters . insert ( std :: make_pair ( name , value ) )"	281:8:10361:10418	618004	2	True				
ANR	618575	CallExpression	"encodedParameters . insert ( std :: make_pair ( name , value ) )"		618004	0					
ANR	618576	Callee	encodedParameters . insert		618004	0					
ANR	618577	MemberAccess	encodedParameters . insert		618004	0					
ANR	618578	Identifier	encodedParameters		618004	0					
ANR	618579	Identifier	insert		618004	1					
ANR	618580	ArgumentList	"std :: make_pair ( name , value )"		618004	1					
ANR	618581	Argument	"std :: make_pair ( name , value )"		618004	0					
ANR	618582	CallExpression	"std :: make_pair ( name , value )"		618004	0					
ANR	618583	Callee	std :: make_pair		618004	0					
ANR	618584	Identifier	std :: make_pair		618004	0					
ANR	618585	ArgumentList	name		618004	1					
ANR	618586	Argument	name		618004	0					
ANR	618587	Identifier	name		618004	0					
ANR	618588	Argument	value		618004	1					
ANR	618589	Identifier	value		618004	0					
ANR	618590	ExpressionStatement	canonicalizedQueryString += name + '=' + value	284:8:10504:10550	618004	3	True				
ANR	618591	AssignmentExpression	canonicalizedQueryString += name + '=' + value		618004	0		+=			
ANR	618592	Identifier	canonicalizedQueryString		618004	0					
ANR	618593	AdditiveExpression	name + '=' + value		618004	1		+			
ANR	618594	Identifier	name		618004	0					
ANR	618595	AdditiveExpression	'=' + value		618004	1		+			
ANR	618596	PrimaryExpression	'='		618004	0					
ANR	618597	Identifier	value		618004	1					
ANR	618598	ExpressionStatement	canonicalizedQueryString += '&'	287:8:10625:10656	618004	4	True				
ANR	618599	AssignmentExpression	canonicalizedQueryString += '&'		618004	0		+=			
ANR	618600	Identifier	canonicalizedQueryString		618004	0					
ANR	618601	PrimaryExpression	'&'		618004	1					
ANR	618602	ExpressionStatement	canonicalizedQueryString . erase ( canonicalizedQueryString . end ( ) - 1 )	290:4:10726:10794	618004	32	True				
ANR	618603	CallExpression	canonicalizedQueryString . erase ( canonicalizedQueryString . end ( ) - 1 )		618004	0					
ANR	618604	Callee	canonicalizedQueryString . erase		618004	0					
ANR	618605	MemberAccess	canonicalizedQueryString . erase		618004	0					
ANR	618606	Identifier	canonicalizedQueryString		618004	0					
ANR	618607	Identifier	erase		618004	1					
ANR	618608	ArgumentList	canonicalizedQueryString . end ( ) - 1		618004	1					
ANR	618609	Argument	canonicalizedQueryString . end ( ) - 1		618004	0					
ANR	618610	AdditiveExpression	canonicalizedQueryString . end ( ) - 1		618004	0		-			
ANR	618611	CallExpression	canonicalizedQueryString . end ( )		618004	0					
ANR	618612	Callee	canonicalizedQueryString . end		618004	0					
ANR	618613	MemberAccess	canonicalizedQueryString . end		618004	0					
ANR	618614	Identifier	canonicalizedQueryString		618004	0					
ANR	618615	Identifier	end		618004	1					
ANR	618616	ArgumentList			618004	1					
ANR	618617	PrimaryExpression	1		618004	1					
ANR	618618	IdentifierDeclStatement	"std :: string stringToSign = ""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString ;"	293:4:10847:11057	618004	33	True				
ANR	618619	IdentifierDecl	"stringToSign = ""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		618004	0					
ANR	618620	IdentifierDeclType	std :: string		618004	0					
ANR	618621	Identifier	stringToSign		618004	1					
ANR	618622	AssignmentExpression	"stringToSign = ""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		618004	2		=			
ANR	618623	Identifier	stringToSign		618004	0					
ANR	618624	AdditiveExpression	"""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		618004	1		+			
ANR	618625	PrimaryExpression	"""GET\\n"""		618004	0					
ANR	618626	AdditiveExpression	"valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		618004	1		+			
ANR	618627	Identifier	valueOfHostHeaderInLowercase		618004	0					
ANR	618628	AdditiveExpression	"""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		618004	1		+			
ANR	618629	PrimaryExpression	"""\\n"""		618004	0					
ANR	618630	AdditiveExpression	"httpRequestURI + ""\\n"" + canonicalizedQueryString"		618004	1		+			
ANR	618631	Identifier	httpRequestURI		618004	0					
ANR	618632	AdditiveExpression	"""\\n"" + canonicalizedQueryString"		618004	1		+			
ANR	618633	PrimaryExpression	"""\\n"""		618004	0					
ANR	618634	Identifier	canonicalizedQueryString		618004	1					
ANR	618635	IdentifierDeclStatement	std :: string saKey ;	302:4:11326:11343	618004	34	True				
ANR	618636	IdentifierDecl	saKey		618004	0					
ANR	618637	IdentifierDeclType	std :: string		618004	0					
ANR	618638	Identifier	saKey		618004	1					
ANR	618639	IfStatement	"if ( protocol == ""x509"" )"		618004	35					
ANR	618640	Condition	"protocol == ""x509"""	303:8:11353:11370	618004	0	True				
ANR	618641	EqualityExpression	"protocol == ""x509"""		618004	0		==			
ANR	618642	Identifier	protocol		618004	0					
ANR	618643	PrimaryExpression	"""x509"""		618004	1					
ANR	618644	CompoundStatement		122:29:5273:5273	618004	1					
ANR	618645	ExpressionStatement	"saKey = std :: string ( ""<DN>/CN=UID:"" ) + getenv ( ""USER"" )"	308:8:11650:11706	618004	0	True				
ANR	618646	AssignmentExpression	"saKey = std :: string ( ""<DN>/CN=UID:"" ) + getenv ( ""USER"" )"		618004	0		=			
ANR	618647	Identifier	saKey		618004	0					
ANR	618648	AdditiveExpression	"std :: string ( ""<DN>/CN=UID:"" ) + getenv ( ""USER"" )"		618004	1		+			
ANR	618649	CallExpression	"std :: string ( ""<DN>/CN=UID:"" )"		618004	0					
ANR	618650	Callee	std :: string		618004	0					
ANR	618651	Identifier	std :: string		618004	0					
ANR	618652	ArgumentList	"""<DN>/CN=UID:"""		618004	1					
ANR	618653	Argument	"""<DN>/CN=UID:"""		618004	0					
ANR	618654	PrimaryExpression	"""<DN>/CN=UID:"""		618004	0					
ANR	618655	CallExpression	"getenv ( ""USER"" )"		618004	1					
ANR	618656	Callee	getenv		618004	0					
ANR	618657	Identifier	getenv		618004	0					
ANR	618658	ArgumentList	"""USER"""		618004	1					
ANR	618659	Argument	"""USER"""		618004	0					
ANR	618660	PrimaryExpression	"""USER"""		618004	0					
ANR	618661	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using '%s' as secret key for x.509\\n"" , saKey . c_str ( ) )"	309:8:11716:11793	618004	1	True				
ANR	618662	CallExpression	"dprintf ( D_FULLDEBUG , ""Using '%s' as secret key for x.509\\n"" , saKey . c_str ( ) )"		618004	0					
ANR	618663	Callee	dprintf		618004	0					
ANR	618664	Identifier	dprintf		618004	0					
ANR	618665	ArgumentList	D_FULLDEBUG		618004	1					
ANR	618666	Argument	D_FULLDEBUG		618004	0					
ANR	618667	Identifier	D_FULLDEBUG		618004	0					
ANR	618668	Argument	"""Using '%s' as secret key for x.509\\n"""		618004	1					
ANR	618669	PrimaryExpression	"""Using '%s' as secret key for x.509\\n"""		618004	0					
ANR	618670	Argument	saKey . c_str ( )		618004	2					
ANR	618671	CallExpression	saKey . c_str ( )		618004	0					
ANR	618672	Callee	saKey . c_str		618004	0					
ANR	618673	MemberAccess	saKey . c_str		618004	0					
ANR	618674	Identifier	saKey		618004	0					
ANR	618675	Identifier	c_str		618004	1					
ANR	618676	ArgumentList			618004	1					
ANR	618677	ElseStatement	else		618004	0					
ANR	618678	CompoundStatement		129:11:5705:5705	618004	0					
ANR	618679	IfStatement	"if ( ! readShortFile ( this -> secretKeyFile , saKey ) )"		618004	0					
ANR	618680	Condition	"! readShortFile ( this -> secretKeyFile , saKey )"	311:12:11820:11864	618004	0	True				
ANR	618681	UnaryOperationExpression	"! readShortFile ( this -> secretKeyFile , saKey )"		618004	0					
ANR	618682	UnaryOperator	!		618004	0					
ANR	618683	CallExpression	"readShortFile ( this -> secretKeyFile , saKey )"		618004	1					
ANR	618684	Callee	readShortFile		618004	0					
ANR	618685	Identifier	readShortFile		618004	0					
ANR	618686	ArgumentList	this -> secretKeyFile		618004	1					
ANR	618687	Argument	this -> secretKeyFile		618004	0					
ANR	618688	PtrMemberAccess	this -> secretKeyFile		618004	0					
ANR	618689	Identifier	this		618004	0					
ANR	618690	Identifier	secretKeyFile		618004	1					
ANR	618691	Argument	saKey		618004	1					
ANR	618692	Identifier	saKey		618004	0					
ANR	618693	CompoundStatement		130:60:5767:5767	618004	1					
ANR	618694	ExpressionStatement	"this -> errorCode = ""E_FILE_IO"""	312:12:11882:11911	618004	0	True				
ANR	618695	AssignmentExpression	"this -> errorCode = ""E_FILE_IO"""		618004	0		=			
ANR	618696	PtrMemberAccess	this -> errorCode		618004	0					
ANR	618697	Identifier	this		618004	0					
ANR	618698	Identifier	errorCode		618004	1					
ANR	618699	PrimaryExpression	"""E_FILE_IO"""		618004	1					
ANR	618700	ExpressionStatement	"this -> errorMessage = ""Unable to read from secretkey file '"" + this -> secretKeyFile + ""'."""	313:12:11925:12013	618004	1	True				
ANR	618701	AssignmentExpression	"this -> errorMessage = ""Unable to read from secretkey file '"" + this -> secretKeyFile + ""'."""		618004	0		=			
ANR	618702	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	618703	Identifier	this		618004	0					
ANR	618704	Identifier	errorMessage		618004	1					
ANR	618705	AdditiveExpression	"""Unable to read from secretkey file '"" + this -> secretKeyFile + ""'."""		618004	1		+			
ANR	618706	PrimaryExpression	"""Unable to read from secretkey file '"""		618004	0					
ANR	618707	AdditiveExpression	"this -> secretKeyFile + ""'."""		618004	1		+			
ANR	618708	PtrMemberAccess	this -> secretKeyFile		618004	0					
ANR	618709	Identifier	this		618004	0					
ANR	618710	Identifier	secretKeyFile		618004	1					
ANR	618711	PrimaryExpression	"""'."""		618004	1					
ANR	618712	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to read secretkey file '%s', failing.\\n"" , this -> secretKeyFile . c_str ( ) )"	314:12:12027:12125	618004	2	True				
ANR	618713	CallExpression	"dprintf ( D_ALWAYS , ""Unable to read secretkey file '%s', failing.\\n"" , this -> secretKeyFile . c_str ( ) )"		618004	0					
ANR	618714	Callee	dprintf		618004	0					
ANR	618715	Identifier	dprintf		618004	0					
ANR	618716	ArgumentList	D_ALWAYS		618004	1					
ANR	618717	Argument	D_ALWAYS		618004	0					
ANR	618718	Identifier	D_ALWAYS		618004	0					
ANR	618719	Argument	"""Unable to read secretkey file '%s', failing.\\n"""		618004	1					
ANR	618720	PrimaryExpression	"""Unable to read secretkey file '%s', failing.\\n"""		618004	0					
ANR	618721	Argument	this -> secretKeyFile . c_str ( )		618004	2					
ANR	618722	CallExpression	this -> secretKeyFile . c_str ( )		618004	0					
ANR	618723	Callee	this -> secretKeyFile . c_str		618004	0					
ANR	618724	MemberAccess	this -> secretKeyFile . c_str		618004	0					
ANR	618725	PtrMemberAccess	this -> secretKeyFile		618004	0					
ANR	618726	Identifier	this		618004	0					
ANR	618727	Identifier	secretKeyFile		618004	1					
ANR	618728	Identifier	c_str		618004	1					
ANR	618729	ArgumentList			618004	1					
ANR	618730	ReturnStatement	return false ;	315:12:12139:12151	618004	3	True				
ANR	618731	Identifier	false		618004	0					
ANR	618732	IfStatement	if ( saKey [ saKey . length ( ) - 1 ] == '\\n' )		618004	1					
ANR	618733	Condition	saKey [ saKey . length ( ) - 1 ] == '\\n'	318:12:12260:12294	618004	0	True				
ANR	618734	EqualityExpression	saKey [ saKey . length ( ) - 1 ] == '\\n'		618004	0		==			
ANR	618735	ArrayIndexing	saKey [ saKey . length ( ) - 1 ]		618004	0					
ANR	618736	Identifier	saKey		618004	0					
ANR	618737	AdditiveExpression	saKey . length ( ) - 1		618004	1		-			
ANR	618738	CallExpression	saKey . length ( )		618004	0					
ANR	618739	Callee	saKey . length		618004	0					
ANR	618740	MemberAccess	saKey . length		618004	0					
ANR	618741	Identifier	saKey		618004	0					
ANR	618742	Identifier	length		618004	1					
ANR	618743	ArgumentList			618004	1					
ANR	618744	PrimaryExpression	1		618004	1					
ANR	618745	PrimaryExpression	'\\n'		618004	1					
ANR	618746	CompoundStatement		137:50:6197:6197	618004	1					
ANR	618747	ExpressionStatement	saKey . erase ( saKey . length ( ) - 1 )	318:52:12300:12333	618004	0	True				
ANR	618748	CallExpression	saKey . erase ( saKey . length ( ) - 1 )		618004	0					
ANR	618749	Callee	saKey . erase		618004	0					
ANR	618750	MemberAccess	saKey . erase		618004	0					
ANR	618751	Identifier	saKey		618004	0					
ANR	618752	Identifier	erase		618004	1					
ANR	618753	ArgumentList	saKey . length ( ) - 1		618004	1					
ANR	618754	Argument	saKey . length ( ) - 1		618004	0					
ANR	618755	AdditiveExpression	saKey . length ( ) - 1		618004	0		-			
ANR	618756	CallExpression	saKey . length ( )		618004	0					
ANR	618757	Callee	saKey . length		618004	0					
ANR	618758	MemberAccess	saKey . length		618004	0					
ANR	618759	Identifier	saKey		618004	0					
ANR	618760	Identifier	length		618004	1					
ANR	618761	ArgumentList			618004	1					
ANR	618762	PrimaryExpression	1		618004	1					
ANR	618763	IdentifierDeclStatement	unsigned int mdLength = 0 ;	322:4:12437:12462	618004	36	True				
ANR	618764	IdentifierDecl	mdLength = 0		618004	0					
ANR	618765	IdentifierDeclType	unsigned int		618004	0					
ANR	618766	Identifier	mdLength		618004	1					
ANR	618767	AssignmentExpression	mdLength = 0		618004	2		=			
ANR	618768	Identifier	mdLength		618004	0					
ANR	618769	PrimaryExpression	0		618004	1					
ANR	618770	IdentifierDeclStatement	unsigned char messageDigest [ EVP_MAX_MD_SIZE ] ;	323:4:12468:12512	618004	37	True				
ANR	618771	IdentifierDecl	messageDigest [ EVP_MAX_MD_SIZE ]		618004	0					
ANR	618772	IdentifierDeclType	unsigned char [ EVP_MAX_MD_SIZE ]		618004	0					
ANR	618773	Identifier	messageDigest		618004	1					
ANR	618774	Identifier	EVP_MAX_MD_SIZE		618004	2					
ANR	618775	IdentifierDeclStatement	"const unsigned char * hmac = HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength ) ;"	324:4:12518:12695	618004	38	True				
ANR	618776	IdentifierDecl	"* hmac = HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength )"		618004	0					
ANR	618777	IdentifierDeclType	const unsigned char *		618004	0					
ANR	618778	Identifier	hmac		618004	1					
ANR	618779	AssignmentExpression	"* hmac = HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength )"		618004	2		=			
ANR	618780	Identifier	hmac		618004	0					
ANR	618781	CallExpression	"HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength )"		618004	1					
ANR	618782	Callee	HMAC		618004	0					
ANR	618783	Identifier	HMAC		618004	0					
ANR	618784	ArgumentList	EVP_sha256 ( )		618004	1					
ANR	618785	Argument	EVP_sha256 ( )		618004	0					
ANR	618786	CallExpression	EVP_sha256 ( )		618004	0					
ANR	618787	Callee	EVP_sha256		618004	0					
ANR	618788	Identifier	EVP_sha256		618004	0					
ANR	618789	ArgumentList			618004	1					
ANR	618790	Argument	saKey . c_str ( )		618004	1					
ANR	618791	CallExpression	saKey . c_str ( )		618004	0					
ANR	618792	Callee	saKey . c_str		618004	0					
ANR	618793	MemberAccess	saKey . c_str		618004	0					
ANR	618794	Identifier	saKey		618004	0					
ANR	618795	Identifier	c_str		618004	1					
ANR	618796	ArgumentList			618004	1					
ANR	618797	Argument	saKey . length ( )		618004	2					
ANR	618798	CallExpression	saKey . length ( )		618004	0					
ANR	618799	Callee	saKey . length		618004	0					
ANR	618800	MemberAccess	saKey . length		618004	0					
ANR	618801	Identifier	saKey		618004	0					
ANR	618802	Identifier	length		618004	1					
ANR	618803	ArgumentList			618004	1					
ANR	618804	Argument	( unsigned char * ) stringToSign . c_str ( )		618004	3					
ANR	618805	CastExpression	( unsigned char * ) stringToSign . c_str ( )		618004	0					
ANR	618806	CastTarget	unsigned char *		618004	0					
ANR	618807	CallExpression	stringToSign . c_str ( )		618004	1					
ANR	618808	Callee	stringToSign . c_str		618004	0					
ANR	618809	MemberAccess	stringToSign . c_str		618004	0					
ANR	618810	Identifier	stringToSign		618004	0					
ANR	618811	Identifier	c_str		618004	1					
ANR	618812	ArgumentList			618004	1					
ANR	618813	Argument	stringToSign . length ( )		618004	4					
ANR	618814	CallExpression	stringToSign . length ( )		618004	0					
ANR	618815	Callee	stringToSign . length		618004	0					
ANR	618816	MemberAccess	stringToSign . length		618004	0					
ANR	618817	Identifier	stringToSign		618004	0					
ANR	618818	Identifier	length		618004	1					
ANR	618819	ArgumentList			618004	1					
ANR	618820	Argument	messageDigest		618004	5					
ANR	618821	Identifier	messageDigest		618004	0					
ANR	618822	Argument	& mdLength		618004	6					
ANR	618823	UnaryOperationExpression	& mdLength		618004	0					
ANR	618824	UnaryOperator	&		618004	0					
ANR	618825	Identifier	mdLength		618004	1					
ANR	618826	IfStatement	if ( hmac == NULL )		618004	39					
ANR	618827	Condition	hmac == NULL	326:8:12705:12716	618004	0	True				
ANR	618828	EqualityExpression	hmac == NULL		618004	0		==			
ANR	618829	Identifier	hmac		618004	0					
ANR	618830	Identifier	NULL		618004	1					
ANR	618831	CompoundStatement		145:23:6619:6619	618004	1					
ANR	618832	ExpressionStatement	"this -> errorCode = ""E_INTERNAL"""	327:8:12730:12760	618004	0	True				
ANR	618833	AssignmentExpression	"this -> errorCode = ""E_INTERNAL"""		618004	0		=			
ANR	618834	PtrMemberAccess	this -> errorCode		618004	0					
ANR	618835	Identifier	this		618004	0					
ANR	618836	Identifier	errorCode		618004	1					
ANR	618837	PrimaryExpression	"""E_INTERNAL"""		618004	1					
ANR	618838	ExpressionStatement	"this -> errorMessage = ""Unable to calculate query signature (SHA256 HMAC)."""	328:8:12770:12843	618004	1	True				
ANR	618839	AssignmentExpression	"this -> errorMessage = ""Unable to calculate query signature (SHA256 HMAC)."""		618004	0		=			
ANR	618840	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	618841	Identifier	this		618004	0					
ANR	618842	Identifier	errorMessage		618004	1					
ANR	618843	PrimaryExpression	"""Unable to calculate query signature (SHA256 HMAC)."""		618004	1					
ANR	618844	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to calculate SHA256 HMAC to sign query, failing.\\n"" )"	329:8:12853:12933	618004	2	True				
ANR	618845	CallExpression	"dprintf ( D_ALWAYS , ""Unable to calculate SHA256 HMAC to sign query, failing.\\n"" )"		618004	0					
ANR	618846	Callee	dprintf		618004	0					
ANR	618847	Identifier	dprintf		618004	0					
ANR	618848	ArgumentList	D_ALWAYS		618004	1					
ANR	618849	Argument	D_ALWAYS		618004	0					
ANR	618850	Identifier	D_ALWAYS		618004	0					
ANR	618851	Argument	"""Unable to calculate SHA256 HMAC to sign query, failing.\\n"""		618004	1					
ANR	618852	PrimaryExpression	"""Unable to calculate SHA256 HMAC to sign query, failing.\\n"""		618004	0					
ANR	618853	ReturnStatement	return false ;	330:8:12943:12955	618004	3	True				
ANR	618854	Identifier	false		618004	0					
ANR	618855	IdentifierDeclStatement	"char * base64Encoded = condor_base64_encode ( messageDigest , mdLength ) ;"	335:4:13107:13177	618004	40	True				
ANR	618856	IdentifierDecl	"* base64Encoded = condor_base64_encode ( messageDigest , mdLength )"		618004	0					
ANR	618857	IdentifierDeclType	char *		618004	0					
ANR	618858	Identifier	base64Encoded		618004	1					
ANR	618859	AssignmentExpression	"* base64Encoded = condor_base64_encode ( messageDigest , mdLength )"		618004	2		=			
ANR	618860	Identifier	base64Encoded		618004	0					
ANR	618861	CallExpression	"condor_base64_encode ( messageDigest , mdLength )"		618004	1					
ANR	618862	Callee	condor_base64_encode		618004	0					
ANR	618863	Identifier	condor_base64_encode		618004	0					
ANR	618864	ArgumentList	messageDigest		618004	1					
ANR	618865	Argument	messageDigest		618004	0					
ANR	618866	Identifier	messageDigest		618004	0					
ANR	618867	Argument	mdLength		618004	1					
ANR	618868	Identifier	mdLength		618004	0					
ANR	618869	IdentifierDeclStatement	std :: string signatureInBase64 = base64Encoded ;	336:4:13183:13228	618004	41	True				
ANR	618870	IdentifierDecl	signatureInBase64 = base64Encoded		618004	0					
ANR	618871	IdentifierDeclType	std :: string		618004	0					
ANR	618872	Identifier	signatureInBase64		618004	1					
ANR	618873	AssignmentExpression	signatureInBase64 = base64Encoded		618004	2		=			
ANR	618874	Identifier	base64Encoded		618004	0					
ANR	618875	Identifier	base64Encoded		618004	1					
ANR	618876	ExpressionStatement	free ( base64Encoded )	337:4:13234:13255	618004	42	True				
ANR	618877	CallExpression	free ( base64Encoded )		618004	0					
ANR	618878	Callee	free		618004	0					
ANR	618879	Identifier	free		618004	0					
ANR	618880	ArgumentList	base64Encoded		618004	1					
ANR	618881	Argument	base64Encoded		618004	0					
ANR	618882	Identifier	base64Encoded		618004	0					
ANR	618883	ExpressionStatement	"canonicalizedQueryString += ""&Signature="" + amazonURLEncode ( signatureInBase64 )"	340:4:13297:13377	618004	43	True				
ANR	618884	AssignmentExpression	"canonicalizedQueryString += ""&Signature="" + amazonURLEncode ( signatureInBase64 )"		618004	0		+=			
ANR	618885	Identifier	canonicalizedQueryString		618004	0					
ANR	618886	AdditiveExpression	"""&Signature="" + amazonURLEncode ( signatureInBase64 )"		618004	1		+			
ANR	618887	PrimaryExpression	"""&Signature="""		618004	0					
ANR	618888	CallExpression	amazonURLEncode ( signatureInBase64 )		618004	1					
ANR	618889	Callee	amazonURLEncode		618004	0					
ANR	618890	Identifier	amazonURLEncode		618004	0					
ANR	618891	ArgumentList	signatureInBase64		618004	1					
ANR	618892	Argument	signatureInBase64		618004	0					
ANR	618893	Identifier	signatureInBase64		618004	0					
ANR	618894	IdentifierDeclStatement	std :: string finalURI ;	341:4:13383:13403	618004	44	True				
ANR	618895	IdentifierDecl	finalURI		618004	0					
ANR	618896	IdentifierDeclType	std :: string		618004	0					
ANR	618897	Identifier	finalURI		618004	1					
ANR	618898	IfStatement	"if ( protocol == ""x509"" )"		618004	45					
ANR	618899	Condition	"protocol == ""x509"""	342:8:13413:13430	618004	0	True				
ANR	618900	EqualityExpression	"protocol == ""x509"""		618004	0		==			
ANR	618901	Identifier	protocol		618004	0					
ANR	618902	PrimaryExpression	"""x509"""		618004	1					
ANR	618903	CompoundStatement		161:29:7333:7333	618004	1					
ANR	618904	ExpressionStatement	"finalURI = ""https://"" + hostAndPath + ""?"" + canonicalizedQueryString"	343:8:13444:13512	618004	0	True				
ANR	618905	AssignmentExpression	"finalURI = ""https://"" + hostAndPath + ""?"" + canonicalizedQueryString"		618004	0		=			
ANR	618906	Identifier	finalURI		618004	0					
ANR	618907	AdditiveExpression	"""https://"" + hostAndPath + ""?"" + canonicalizedQueryString"		618004	1		+			
ANR	618908	PrimaryExpression	"""https://"""		618004	0					
ANR	618909	AdditiveExpression	"hostAndPath + ""?"" + canonicalizedQueryString"		618004	1		+			
ANR	618910	Identifier	hostAndPath		618004	0					
ANR	618911	AdditiveExpression	"""?"" + canonicalizedQueryString"		618004	1		+			
ANR	618912	PrimaryExpression	"""?"""		618004	0					
ANR	618913	Identifier	canonicalizedQueryString		618004	1					
ANR	618914	ElseStatement	else		618004	0					
ANR	618915	CompoundStatement		163:11:7424:7424	618004	0					
ANR	618916	ExpressionStatement	"finalURI = this -> serviceURL + ""?"" + canonicalizedQueryString"	345:8:13535:13595	618004	0	True				
ANR	618917	AssignmentExpression	"finalURI = this -> serviceURL + ""?"" + canonicalizedQueryString"		618004	0		=			
ANR	618918	Identifier	finalURI		618004	0					
ANR	618919	AdditiveExpression	"this -> serviceURL + ""?"" + canonicalizedQueryString"		618004	1		+			
ANR	618920	PtrMemberAccess	this -> serviceURL		618004	0					
ANR	618921	Identifier	this		618004	0					
ANR	618922	Identifier	serviceURL		618004	1					
ANR	618923	AdditiveExpression	"""?"" + canonicalizedQueryString"		618004	1		+			
ANR	618924	PrimaryExpression	"""?"""		618004	0					
ANR	618925	Identifier	canonicalizedQueryString		618004	1					
ANR	618926	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Request URI is '%s'\\n"" , finalURI . c_str ( ) )"	347:4:13607:13672	618004	46	True				
ANR	618927	CallExpression	"dprintf ( D_FULLDEBUG , ""Request URI is '%s'\\n"" , finalURI . c_str ( ) )"		618004	0					
ANR	618928	Callee	dprintf		618004	0					
ANR	618929	Identifier	dprintf		618004	0					
ANR	618930	ArgumentList	D_FULLDEBUG		618004	1					
ANR	618931	Argument	D_FULLDEBUG		618004	0					
ANR	618932	Identifier	D_FULLDEBUG		618004	0					
ANR	618933	Argument	"""Request URI is '%s'\\n"""		618004	1					
ANR	618934	PrimaryExpression	"""Request URI is '%s'\\n"""		618004	0					
ANR	618935	Argument	finalURI . c_str ( )		618004	2					
ANR	618936	CallExpression	finalURI . c_str ( )		618004	0					
ANR	618937	Callee	finalURI . c_str		618004	0					
ANR	618938	MemberAccess	finalURI . c_str		618004	0					
ANR	618939	Identifier	finalURI		618004	0					
ANR	618940	Identifier	c_str		618004	1					
ANR	618941	ArgumentList			618004	1					
ANR	618942	IdentifierDeclStatement	CURLcode rv = curl_global_init ( CURL_GLOBAL_ALL ) ;	352:4:13897:13946	618004	47	True				
ANR	618943	IdentifierDecl	rv = curl_global_init ( CURL_GLOBAL_ALL )		618004	0					
ANR	618944	IdentifierDeclType	CURLcode		618004	0					
ANR	618945	Identifier	rv		618004	1					
ANR	618946	AssignmentExpression	rv = curl_global_init ( CURL_GLOBAL_ALL )		618004	2		=			
ANR	618947	Identifier	rv		618004	0					
ANR	618948	CallExpression	curl_global_init ( CURL_GLOBAL_ALL )		618004	1					
ANR	618949	Callee	curl_global_init		618004	0					
ANR	618950	Identifier	curl_global_init		618004	0					
ANR	618951	ArgumentList	CURL_GLOBAL_ALL		618004	1					
ANR	618952	Argument	CURL_GLOBAL_ALL		618004	0					
ANR	618953	Identifier	CURL_GLOBAL_ALL		618004	0					
ANR	618954	IfStatement	if ( rv != 0 )		618004	48					
ANR	618955	Condition	rv != 0	353:8:13956:13962	618004	0	True				
ANR	618956	EqualityExpression	rv != 0		618004	0		!=			
ANR	618957	Identifier	rv		618004	0					
ANR	618958	PrimaryExpression	0		618004	1					
ANR	618959	CompoundStatement		172:18:7865:7865	618004	1					
ANR	618960	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	354:8:13976:14006	618004	0	True				
ANR	618961	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		618004	0		=			
ANR	618962	PtrMemberAccess	this -> errorCode		618004	0					
ANR	618963	Identifier	this		618004	0					
ANR	618964	Identifier	errorCode		618004	1					
ANR	618965	PrimaryExpression	"""E_CURL_LIB"""		618004	1					
ANR	618966	ExpressionStatement	"this -> errorMessage = ""curl_global_init() failed."""	355:8:14016:14065	618004	1	True				
ANR	618967	AssignmentExpression	"this -> errorMessage = ""curl_global_init() failed."""		618004	0		=			
ANR	618968	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	618969	Identifier	this		618004	0					
ANR	618970	Identifier	errorMessage		618004	1					
ANR	618971	PrimaryExpression	"""curl_global_init() failed."""		618004	1					
ANR	618972	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_global_init() failed, failing.\\n"" )"	356:8:14075:14135	618004	2	True				
ANR	618973	CallExpression	"dprintf ( D_ALWAYS , ""curl_global_init() failed, failing.\\n"" )"		618004	0					
ANR	618974	Callee	dprintf		618004	0					
ANR	618975	Identifier	dprintf		618004	0					
ANR	618976	ArgumentList	D_ALWAYS		618004	1					
ANR	618977	Argument	D_ALWAYS		618004	0					
ANR	618978	Identifier	D_ALWAYS		618004	0					
ANR	618979	Argument	"""curl_global_init() failed, failing.\\n"""		618004	1					
ANR	618980	PrimaryExpression	"""curl_global_init() failed, failing.\\n"""		618004	0					
ANR	618981	ReturnStatement	return false ;	357:8:14145:14157	618004	3	True				
ANR	618982	Identifier	false		618004	0					
ANR	618983	IdentifierDeclStatement	CURL * curl = curl_easy_init ( ) ;	360:4:14174:14204	618004	49	True				
ANR	618984	IdentifierDecl	* curl = curl_easy_init ( )		618004	0					
ANR	618985	IdentifierDeclType	CURL *		618004	0					
ANR	618986	Identifier	curl		618004	1					
ANR	618987	AssignmentExpression	* curl = curl_easy_init ( )		618004	2		=			
ANR	618988	Identifier	curl		618004	0					
ANR	618989	CallExpression	curl_easy_init ( )		618004	1					
ANR	618990	Callee	curl_easy_init		618004	0					
ANR	618991	Identifier	curl_easy_init		618004	0					
ANR	618992	ArgumentList			618004	1					
ANR	618993	IfStatement	if ( curl == NULL )		618004	50					
ANR	618994	Condition	curl == NULL	361:8:14214:14225	618004	0	True				
ANR	618995	EqualityExpression	curl == NULL		618004	0		==			
ANR	618996	Identifier	curl		618004	0					
ANR	618997	Identifier	NULL		618004	1					
ANR	618998	CompoundStatement		180:23:8128:8128	618004	1					
ANR	618999	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	362:8:14239:14269	618004	0	True				
ANR	619000	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		618004	0		=			
ANR	619001	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619002	Identifier	this		618004	0					
ANR	619003	Identifier	errorCode		618004	1					
ANR	619004	PrimaryExpression	"""E_CURL_LIB"""		618004	1					
ANR	619005	ExpressionStatement	"this -> errorMessage = ""curl_easy_init() failed."""	363:8:14279:14326	618004	1	True				
ANR	619006	AssignmentExpression	"this -> errorMessage = ""curl_easy_init() failed."""		618004	0		=			
ANR	619007	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619008	Identifier	this		618004	0					
ANR	619009	Identifier	errorMessage		618004	1					
ANR	619010	PrimaryExpression	"""curl_easy_init() failed."""		618004	1					
ANR	619011	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_init() failed, failing.\\n"" )"	364:8:14336:14394	618004	2	True				
ANR	619012	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_init() failed, failing.\\n"" )"		618004	0					
ANR	619013	Callee	dprintf		618004	0					
ANR	619014	Identifier	dprintf		618004	0					
ANR	619015	ArgumentList	D_ALWAYS		618004	1					
ANR	619016	Argument	D_ALWAYS		618004	0					
ANR	619017	Identifier	D_ALWAYS		618004	0					
ANR	619018	Argument	"""curl_easy_init() failed, failing.\\n"""		618004	1					
ANR	619019	PrimaryExpression	"""curl_easy_init() failed, failing.\\n"""		618004	0					
ANR	619020	ReturnStatement	return false ;	365:8:14404:14416	618004	3	True				
ANR	619021	Identifier	false		618004	0					
ANR	619022	IdentifierDeclStatement	char errorBuffer [ CURL_ERROR_SIZE ] ;	368:4:14429:14462	618004	51	True				
ANR	619023	IdentifierDecl	errorBuffer [ CURL_ERROR_SIZE ]		618004	0					
ANR	619024	IdentifierDeclType	char [ CURL_ERROR_SIZE ]		618004	0					
ANR	619025	Identifier	errorBuffer		618004	1					
ANR	619026	Identifier	CURL_ERROR_SIZE		618004	2					
ANR	619027	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_ERRORBUFFER , errorBuffer )"	369:4:14468:14531	618004	52	True				
ANR	619028	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_ERRORBUFFER , errorBuffer )"		618004	0		=			
ANR	619029	Identifier	rv		618004	0					
ANR	619030	CallExpression	"curl_easy_setopt ( curl , CURLOPT_ERRORBUFFER , errorBuffer )"		618004	1					
ANR	619031	Callee	curl_easy_setopt		618004	0					
ANR	619032	Identifier	curl_easy_setopt		618004	0					
ANR	619033	ArgumentList	curl		618004	1					
ANR	619034	Argument	curl		618004	0					
ANR	619035	Identifier	curl		618004	0					
ANR	619036	Argument	CURLOPT_ERRORBUFFER		618004	1					
ANR	619037	Identifier	CURLOPT_ERRORBUFFER		618004	0					
ANR	619038	Argument	errorBuffer		618004	2					
ANR	619039	Identifier	errorBuffer		618004	0					
ANR	619040	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_URL , finalURI . c_str ( ) )"	371:4:14538:14598	618004	53	True				
ANR	619041	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_URL , finalURI . c_str ( ) )"		618004	0		=			
ANR	619042	Identifier	rv		618004	0					
ANR	619043	CallExpression	"curl_easy_setopt ( curl , CURLOPT_URL , finalURI . c_str ( ) )"		618004	1					
ANR	619044	Callee	curl_easy_setopt		618004	0					
ANR	619045	Identifier	curl_easy_setopt		618004	0					
ANR	619046	ArgumentList	curl		618004	1					
ANR	619047	Argument	curl		618004	0					
ANR	619048	Identifier	curl		618004	0					
ANR	619049	Argument	CURLOPT_URL		618004	1					
ANR	619050	Identifier	CURLOPT_URL		618004	0					
ANR	619051	Argument	finalURI . c_str ( )		618004	2					
ANR	619052	CallExpression	finalURI . c_str ( )		618004	0					
ANR	619053	Callee	finalURI . c_str		618004	0					
ANR	619054	MemberAccess	finalURI . c_str		618004	0					
ANR	619055	Identifier	finalURI		618004	0					
ANR	619056	Identifier	c_str		618004	1					
ANR	619057	ArgumentList			618004	1					
ANR	619058	IfStatement	if ( rv != CURLE_OK )		618004	54					
ANR	619059	Condition	rv != CURLE_OK	372:8:14608:14621	618004	0	True				
ANR	619060	EqualityExpression	rv != CURLE_OK		618004	0		!=			
ANR	619061	Identifier	rv		618004	0					
ANR	619062	Identifier	CURLE_OK		618004	1					
ANR	619063	CompoundStatement		191:25:8524:8524	618004	1					
ANR	619064	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	373:8:14635:14665	618004	0	True				
ANR	619065	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		618004	0		=			
ANR	619066	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619067	Identifier	this		618004	0					
ANR	619068	Identifier	errorCode		618004	1					
ANR	619069	PrimaryExpression	"""E_CURL_LIB"""		618004	1					
ANR	619070	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_URL ) failed."""	374:8:14675:14737	618004	1	True				
ANR	619071	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_URL ) failed."""		618004	0		=			
ANR	619072	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619073	Identifier	this		618004	0					
ANR	619074	Identifier	errorMessage		618004	1					
ANR	619075	PrimaryExpression	"""curl_easy_setopt( CURLOPT_URL ) failed."""		618004	1					
ANR	619076	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	375:8:14747:14873	618004	2	True				
ANR	619077	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		618004	0					
ANR	619078	Callee	dprintf		618004	0					
ANR	619079	Identifier	dprintf		618004	0					
ANR	619080	ArgumentList	D_ALWAYS		618004	1					
ANR	619081	Argument	D_ALWAYS		618004	0					
ANR	619082	Identifier	D_ALWAYS		618004	0					
ANR	619083	Argument	"""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"""		618004	1					
ANR	619084	PrimaryExpression	"""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"""		618004	0					
ANR	619085	Argument	rv		618004	2					
ANR	619086	Identifier	rv		618004	0					
ANR	619087	Argument	curl_easy_strerror ( rv )		618004	3					
ANR	619088	CallExpression	curl_easy_strerror ( rv )		618004	0					
ANR	619089	Callee	curl_easy_strerror		618004	0					
ANR	619090	Identifier	curl_easy_strerror		618004	0					
ANR	619091	ArgumentList	rv		618004	1					
ANR	619092	Argument	rv		618004	0					
ANR	619093	Identifier	rv		618004	0					
ANR	619094	ReturnStatement	return false ;	377:8:14883:14895	618004	3	True				
ANR	619095	Identifier	false		618004	0					
ANR	619096	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_NOPROGRESS , 1 )"	380:4:14908:14960	618004	55	True				
ANR	619097	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_NOPROGRESS , 1 )"		618004	0		=			
ANR	619098	Identifier	rv		618004	0					
ANR	619099	CallExpression	"curl_easy_setopt ( curl , CURLOPT_NOPROGRESS , 1 )"		618004	1					
ANR	619100	Callee	curl_easy_setopt		618004	0					
ANR	619101	Identifier	curl_easy_setopt		618004	0					
ANR	619102	ArgumentList	curl		618004	1					
ANR	619103	Argument	curl		618004	0					
ANR	619104	Identifier	curl		618004	0					
ANR	619105	Argument	CURLOPT_NOPROGRESS		618004	1					
ANR	619106	Identifier	CURLOPT_NOPROGRESS		618004	0					
ANR	619107	Argument	1		618004	2					
ANR	619108	PrimaryExpression	1		618004	0					
ANR	619109	IfStatement	if ( rv != CURLE_OK )		618004	56					
ANR	619110	Condition	rv != CURLE_OK	381:8:14970:14983	618004	0	True				
ANR	619111	EqualityExpression	rv != CURLE_OK		618004	0		!=			
ANR	619112	Identifier	rv		618004	0					
ANR	619113	Identifier	CURLE_OK		618004	1					
ANR	619114	CompoundStatement		200:25:8886:8886	618004	1					
ANR	619115	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	382:8:14997:15027	618004	0	True				
ANR	619116	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		618004	0		=			
ANR	619117	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619118	Identifier	this		618004	0					
ANR	619119	Identifier	errorCode		618004	1					
ANR	619120	PrimaryExpression	"""E_CURL_LIB"""		618004	1					
ANR	619121	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed."""	383:8:15037:15106	618004	1	True				
ANR	619122	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed."""		618004	0		=			
ANR	619123	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619124	Identifier	this		618004	0					
ANR	619125	Identifier	errorMessage		618004	1					
ANR	619126	PrimaryExpression	"""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed."""		618004	1					
ANR	619127	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	384:8:15116:15249	618004	2	True				
ANR	619128	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		618004	0					
ANR	619129	Callee	dprintf		618004	0					
ANR	619130	Identifier	dprintf		618004	0					
ANR	619131	ArgumentList	D_ALWAYS		618004	1					
ANR	619132	Argument	D_ALWAYS		618004	0					
ANR	619133	Identifier	D_ALWAYS		618004	0					
ANR	619134	Argument	"""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"""		618004	1					
ANR	619135	PrimaryExpression	"""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"""		618004	0					
ANR	619136	Argument	rv		618004	2					
ANR	619137	Identifier	rv		618004	0					
ANR	619138	Argument	curl_easy_strerror ( rv )		618004	3					
ANR	619139	CallExpression	curl_easy_strerror ( rv )		618004	0					
ANR	619140	Callee	curl_easy_strerror		618004	0					
ANR	619141	Identifier	curl_easy_strerror		618004	0					
ANR	619142	ArgumentList	rv		618004	1					
ANR	619143	Argument	rv		618004	0					
ANR	619144	Identifier	rv		618004	0					
ANR	619145	ReturnStatement	return false ;	386:8:15259:15271	618004	3	True				
ANR	619146	Identifier	false		618004	0					
ANR	619147	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEFUNCTION , & appendToString )"	389:4:15288:15358	618004	57	True				
ANR	619148	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEFUNCTION , & appendToString )"		618004	0		=			
ANR	619149	Identifier	rv		618004	0					
ANR	619150	CallExpression	"curl_easy_setopt ( curl , CURLOPT_WRITEFUNCTION , & appendToString )"		618004	1					
ANR	619151	Callee	curl_easy_setopt		618004	0					
ANR	619152	Identifier	curl_easy_setopt		618004	0					
ANR	619153	ArgumentList	curl		618004	1					
ANR	619154	Argument	curl		618004	0					
ANR	619155	Identifier	curl		618004	0					
ANR	619156	Argument	CURLOPT_WRITEFUNCTION		618004	1					
ANR	619157	Identifier	CURLOPT_WRITEFUNCTION		618004	0					
ANR	619158	Argument	& appendToString		618004	2					
ANR	619159	UnaryOperationExpression	& appendToString		618004	0					
ANR	619160	UnaryOperator	&		618004	0					
ANR	619161	Identifier	appendToString		618004	1					
ANR	619162	IfStatement	if ( rv != CURLE_OK )		618004	58					
ANR	619163	Condition	rv != CURLE_OK	390:8:15368:15381	618004	0	True				
ANR	619164	EqualityExpression	rv != CURLE_OK		618004	0		!=			
ANR	619165	Identifier	rv		618004	0					
ANR	619166	Identifier	CURLE_OK		618004	1					
ANR	619167	CompoundStatement		209:25:9284:9284	618004	1					
ANR	619168	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	391:8:15395:15425	618004	0	True				
ANR	619169	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		618004	0		=			
ANR	619170	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619171	Identifier	this		618004	0					
ANR	619172	Identifier	errorCode		618004	1					
ANR	619173	PrimaryExpression	"""E_CURL_LIB"""		618004	1					
ANR	619174	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed."""	392:8:15435:15507	618004	1	True				
ANR	619175	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed."""		618004	0		=			
ANR	619176	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619177	Identifier	this		618004	0					
ANR	619178	Identifier	errorMessage		618004	1					
ANR	619179	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed."""		618004	1					
ANR	619180	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	393:8:15517:15653	618004	2	True				
ANR	619181	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		618004	0					
ANR	619182	Callee	dprintf		618004	0					
ANR	619183	Identifier	dprintf		618004	0					
ANR	619184	ArgumentList	D_ALWAYS		618004	1					
ANR	619185	Argument	D_ALWAYS		618004	0					
ANR	619186	Identifier	D_ALWAYS		618004	0					
ANR	619187	Argument	"""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"""		618004	1					
ANR	619188	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"""		618004	0					
ANR	619189	Argument	rv		618004	2					
ANR	619190	Identifier	rv		618004	0					
ANR	619191	Argument	curl_easy_strerror ( rv )		618004	3					
ANR	619192	CallExpression	curl_easy_strerror ( rv )		618004	0					
ANR	619193	Callee	curl_easy_strerror		618004	0					
ANR	619194	Identifier	curl_easy_strerror		618004	0					
ANR	619195	ArgumentList	rv		618004	1					
ANR	619196	Argument	rv		618004	0					
ANR	619197	Identifier	rv		618004	0					
ANR	619198	ReturnStatement	return false ;	395:8:15663:15675	618004	3	True				
ANR	619199	Identifier	false		618004	0					
ANR	619200	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEDATA , & this -> resultString )"	398:4:15692:15762	618004	59	True				
ANR	619201	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEDATA , & this -> resultString )"		618004	0		=			
ANR	619202	Identifier	rv		618004	0					
ANR	619203	CallExpression	"curl_easy_setopt ( curl , CURLOPT_WRITEDATA , & this -> resultString )"		618004	1					
ANR	619204	Callee	curl_easy_setopt		618004	0					
ANR	619205	Identifier	curl_easy_setopt		618004	0					
ANR	619206	ArgumentList	curl		618004	1					
ANR	619207	Argument	curl		618004	0					
ANR	619208	Identifier	curl		618004	0					
ANR	619209	Argument	CURLOPT_WRITEDATA		618004	1					
ANR	619210	Identifier	CURLOPT_WRITEDATA		618004	0					
ANR	619211	Argument	& this -> resultString		618004	2					
ANR	619212	UnaryOperationExpression	& this -> resultString		618004	0					
ANR	619213	UnaryOperator	&		618004	0					
ANR	619214	PtrMemberAccess	this -> resultString		618004	1					
ANR	619215	Identifier	this		618004	0					
ANR	619216	Identifier	resultString		618004	1					
ANR	619217	IfStatement	if ( rv != CURLE_OK )		618004	60					
ANR	619218	Condition	rv != CURLE_OK	399:8:15772:15785	618004	0	True				
ANR	619219	EqualityExpression	rv != CURLE_OK		618004	0		!=			
ANR	619220	Identifier	rv		618004	0					
ANR	619221	Identifier	CURLE_OK		618004	1					
ANR	619222	CompoundStatement		218:25:9688:9688	618004	1					
ANR	619223	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	400:8:15799:15829	618004	0	True				
ANR	619224	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		618004	0		=			
ANR	619225	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619226	Identifier	this		618004	0					
ANR	619227	Identifier	errorCode		618004	1					
ANR	619228	PrimaryExpression	"""E_CURL_LIB"""		618004	1					
ANR	619229	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed."""	401:8:15839:15907	618004	1	True				
ANR	619230	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed."""		618004	0		=			
ANR	619231	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619232	Identifier	this		618004	0					
ANR	619233	Identifier	errorMessage		618004	1					
ANR	619234	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEDATA ) failed."""		618004	1					
ANR	619235	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	402:8:15917:16049	618004	2	True				
ANR	619236	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		618004	0					
ANR	619237	Callee	dprintf		618004	0					
ANR	619238	Identifier	dprintf		618004	0					
ANR	619239	ArgumentList	D_ALWAYS		618004	1					
ANR	619240	Argument	D_ALWAYS		618004	0					
ANR	619241	Identifier	D_ALWAYS		618004	0					
ANR	619242	Argument	"""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"""		618004	1					
ANR	619243	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"""		618004	0					
ANR	619244	Argument	rv		618004	2					
ANR	619245	Identifier	rv		618004	0					
ANR	619246	Argument	curl_easy_strerror ( rv )		618004	3					
ANR	619247	CallExpression	curl_easy_strerror ( rv )		618004	0					
ANR	619248	Callee	curl_easy_strerror		618004	0					
ANR	619249	Identifier	curl_easy_strerror		618004	0					
ANR	619250	ArgumentList	rv		618004	1					
ANR	619251	Argument	rv		618004	0					
ANR	619252	Identifier	rv		618004	0					
ANR	619253	ReturnStatement	return false ;	404:8:16059:16071	618004	3	True				
ANR	619254	Identifier	false		618004	0					
ANR	619255	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYPEER , 1 )"	407:4:16088:16147	618004	61	True				
ANR	619256	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYPEER , 1 )"		618004	0					
ANR	619257	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619258	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619259	ArgumentList	curl		618004	1					
ANR	619260	Argument	curl		618004	0					
ANR	619261	Identifier	curl		618004	0					
ANR	619262	Argument	CURLOPT_SSL_VERIFYPEER		618004	1					
ANR	619263	Identifier	CURLOPT_SSL_VERIFYPEER		618004	0					
ANR	619264	Argument	1		618004	2					
ANR	619265	PrimaryExpression	1		618004	0					
ANR	619266	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYHOST , 2 )"	408:4:16153:16212	618004	62	True				
ANR	619267	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYHOST , 2 )"		618004	0					
ANR	619268	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619269	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619270	ArgumentList	curl		618004	1					
ANR	619271	Argument	curl		618004	0					
ANR	619272	Identifier	curl		618004	0					
ANR	619273	Argument	CURLOPT_SSL_VERIFYHOST		618004	1					
ANR	619274	Identifier	CURLOPT_SSL_VERIFYHOST		618004	0					
ANR	619275	Argument	2		618004	2					
ANR	619276	PrimaryExpression	2		618004	0					
ANR	619277	IdentifierDeclStatement	"std :: string CAFile = """" ;"	410:4:16219:16242	618004	63	True				
ANR	619278	IdentifierDecl	"CAFile = """""		618004	0					
ANR	619279	IdentifierDeclType	std :: string		618004	0					
ANR	619280	Identifier	CAFile		618004	1					
ANR	619281	AssignmentExpression	"CAFile = """""		618004	2		=			
ANR	619282	Identifier	CAFile		618004	0					
ANR	619283	PrimaryExpression	""""""		618004	1					
ANR	619284	IdentifierDeclStatement	"std :: string CAPath = """" ;"	411:4:16248:16271	618004	64	True				
ANR	619285	IdentifierDecl	"CAPath = """""		618004	0					
ANR	619286	IdentifierDeclType	std :: string		618004	0					
ANR	619287	Identifier	CAPath		618004	1					
ANR	619288	AssignmentExpression	"CAPath = """""		618004	2		=			
ANR	619289	Identifier	CAPath		618004	0					
ANR	619290	PrimaryExpression	""""""		618004	1					
ANR	619291	IfStatement	"if ( protocol == ""x509"" )"		618004	65					
ANR	619292	Condition	"protocol == ""x509"""	412:8:16281:16298	618004	0	True				
ANR	619293	EqualityExpression	"protocol == ""x509"""		618004	0		==			
ANR	619294	Identifier	protocol		618004	0					
ANR	619295	PrimaryExpression	"""x509"""		618004	1					
ANR	619296	CompoundStatement		252:8:11132:11180	618004	1					
ANR	619297	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Configuring x.509...\\n"" )"	413:8:16312:16360	618004	0	True				
ANR	619298	CallExpression	"dprintf ( D_FULLDEBUG , ""Configuring x.509...\\n"" )"		618004	0					
ANR	619299	Callee	dprintf		618004	0					
ANR	619300	Identifier	dprintf		618004	0					
ANR	619301	ArgumentList	D_FULLDEBUG		618004	1					
ANR	619302	Argument	D_FULLDEBUG		618004	0					
ANR	619303	Identifier	D_FULLDEBUG		618004	0					
ANR	619304	Argument	"""Configuring x.509...\\n"""		618004	1					
ANR	619305	PrimaryExpression	"""Configuring x.509...\\n"""		618004	0					
ANR	619306	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEYTYPE , ""PEM"" )"	415:8:16371:16430	618004	1	True				
ANR	619307	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEYTYPE , ""PEM"" )"		618004	0					
ANR	619308	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619309	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619310	ArgumentList	curl		618004	1					
ANR	619311	Argument	curl		618004	0					
ANR	619312	Identifier	curl		618004	0					
ANR	619313	Argument	CURLOPT_SSLKEYTYPE		618004	1					
ANR	619314	Identifier	CURLOPT_SSLKEYTYPE		618004	0					
ANR	619315	Argument	"""PEM"""		618004	2					
ANR	619316	PrimaryExpression	"""PEM"""		618004	0					
ANR	619317	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEY , this -> secretKeyFile . c_str ( ) )"	416:8:16440:16517	618004	2	True				
ANR	619318	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEY , this -> secretKeyFile . c_str ( ) )"		618004	0					
ANR	619319	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619320	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619321	ArgumentList	curl		618004	1					
ANR	619322	Argument	curl		618004	0					
ANR	619323	Identifier	curl		618004	0					
ANR	619324	Argument	CURLOPT_SSLKEY		618004	1					
ANR	619325	Identifier	CURLOPT_SSLKEY		618004	0					
ANR	619326	Argument	this -> secretKeyFile . c_str ( )		618004	2					
ANR	619327	CallExpression	this -> secretKeyFile . c_str ( )		618004	0					
ANR	619328	Callee	this -> secretKeyFile . c_str		618004	0					
ANR	619329	MemberAccess	this -> secretKeyFile . c_str		618004	0					
ANR	619330	PtrMemberAccess	this -> secretKeyFile		618004	0					
ANR	619331	Identifier	this		618004	0					
ANR	619332	Identifier	secretKeyFile		618004	1					
ANR	619333	Identifier	c_str		618004	1					
ANR	619334	ArgumentList			618004	1					
ANR	619335	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERTTYPE , ""PEM"" )"	418:8:16528:16588	618004	3	True				
ANR	619336	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERTTYPE , ""PEM"" )"		618004	0					
ANR	619337	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619338	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619339	ArgumentList	curl		618004	1					
ANR	619340	Argument	curl		618004	0					
ANR	619341	Identifier	curl		618004	0					
ANR	619342	Argument	CURLOPT_SSLCERTTYPE		618004	1					
ANR	619343	Identifier	CURLOPT_SSLCERTTYPE		618004	0					
ANR	619344	Argument	"""PEM"""		618004	2					
ANR	619345	PrimaryExpression	"""PEM"""		618004	0					
ANR	619346	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERT , this -> accessKeyFile . c_str ( ) )"	419:8:16598:16676	618004	4	True				
ANR	619347	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERT , this -> accessKeyFile . c_str ( ) )"		618004	0					
ANR	619348	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619349	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619350	ArgumentList	curl		618004	1					
ANR	619351	Argument	curl		618004	0					
ANR	619352	Identifier	curl		618004	0					
ANR	619353	Argument	CURLOPT_SSLCERT		618004	1					
ANR	619354	Identifier	CURLOPT_SSLCERT		618004	0					
ANR	619355	Argument	this -> accessKeyFile . c_str ( )		618004	2					
ANR	619356	CallExpression	this -> accessKeyFile . c_str ( )		618004	0					
ANR	619357	Callee	this -> accessKeyFile . c_str		618004	0					
ANR	619358	MemberAccess	this -> accessKeyFile . c_str		618004	0					
ANR	619359	PtrMemberAccess	this -> accessKeyFile		618004	0					
ANR	619360	Identifier	this		618004	0					
ANR	619361	Identifier	accessKeyFile		618004	1					
ANR	619362	Identifier	c_str		618004	1					
ANR	619363	ArgumentList			618004	1					
ANR	619364	IdentifierDeclStatement	"char * x509_ca_dir = getenv ( ""X509_CERT_DIR"" ) ;"	428:8:17096:17142	618004	5	True				
ANR	619365	IdentifierDecl	"* x509_ca_dir = getenv ( ""X509_CERT_DIR"" )"		618004	0					
ANR	619366	IdentifierDeclType	char *		618004	0					
ANR	619367	Identifier	x509_ca_dir		618004	1					
ANR	619368	AssignmentExpression	"* x509_ca_dir = getenv ( ""X509_CERT_DIR"" )"		618004	2		=			
ANR	619369	Identifier	x509_ca_dir		618004	0					
ANR	619370	CallExpression	"getenv ( ""X509_CERT_DIR"" )"		618004	1					
ANR	619371	Callee	getenv		618004	0					
ANR	619372	Identifier	getenv		618004	0					
ANR	619373	ArgumentList	"""X509_CERT_DIR"""		618004	1					
ANR	619374	Argument	"""X509_CERT_DIR"""		618004	0					
ANR	619375	PrimaryExpression	"""X509_CERT_DIR"""		618004	0					
ANR	619376	IfStatement	if ( x509_ca_dir != NULL )		618004	6					
ANR	619377	Condition	x509_ca_dir != NULL	429:12:17156:17174	618004	0	True				
ANR	619378	EqualityExpression	x509_ca_dir != NULL		618004	0		!=			
ANR	619379	Identifier	x509_ca_dir		618004	0					
ANR	619380	Identifier	NULL		618004	1					
ANR	619381	CompoundStatement		248:34:11077:11077	618004	1					
ANR	619382	ExpressionStatement	CAPath = x509_ca_dir	430:12:17192:17212	618004	0	True				
ANR	619383	AssignmentExpression	CAPath = x509_ca_dir		618004	0		=			
ANR	619384	Identifier	CAPath		618004	0					
ANR	619385	Identifier	x509_ca_dir		618004	1					
ANR	619386	IdentifierDeclStatement	"char * x509_ca_file = getenv ( ""X509_CERT_FILE"" ) ;"	433:8:17233:17281	618004	7	True				
ANR	619387	IdentifierDecl	"* x509_ca_file = getenv ( ""X509_CERT_FILE"" )"		618004	0					
ANR	619388	IdentifierDeclType	char *		618004	0					
ANR	619389	Identifier	x509_ca_file		618004	1					
ANR	619390	AssignmentExpression	"* x509_ca_file = getenv ( ""X509_CERT_FILE"" )"		618004	2		=			
ANR	619391	Identifier	x509_ca_file		618004	0					
ANR	619392	CallExpression	"getenv ( ""X509_CERT_FILE"" )"		618004	1					
ANR	619393	Callee	getenv		618004	0					
ANR	619394	Identifier	getenv		618004	0					
ANR	619395	ArgumentList	"""X509_CERT_FILE"""		618004	1					
ANR	619396	Argument	"""X509_CERT_FILE"""		618004	0					
ANR	619397	PrimaryExpression	"""X509_CERT_FILE"""		618004	0					
ANR	619398	IfStatement	if ( x509_ca_file != NULL )		618004	8					
ANR	619399	Condition	x509_ca_file != NULL	434:12:17295:17314	618004	0	True				
ANR	619400	EqualityExpression	x509_ca_file != NULL		618004	0		!=			
ANR	619401	Identifier	x509_ca_file		618004	0					
ANR	619402	Identifier	NULL		618004	1					
ANR	619403	CompoundStatement		253:35:11217:11217	618004	1					
ANR	619404	ExpressionStatement	CAFile = x509_ca_file	435:12:17332:17353	618004	0	True				
ANR	619405	AssignmentExpression	CAFile = x509_ca_file		618004	0		=			
ANR	619406	Identifier	CAFile		618004	0					
ANR	619407	Identifier	x509_ca_file		618004	1					
ANR	619408	IfStatement	if ( CAPath . empty ( ) )		618004	9					
ANR	619409	Condition	CAPath . empty ( )	438:12:17386:17399	618004	0	True				
ANR	619410	CallExpression	CAPath . empty ( )		618004	0					
ANR	619411	Callee	CAPath . empty		618004	0					
ANR	619412	MemberAccess	CAPath . empty		618004	0					
ANR	619413	Identifier	CAPath		618004	0					
ANR	619414	Identifier	empty		618004	1					
ANR	619415	ArgumentList			618004	1					
ANR	619416	CompoundStatement		258:12:11316:11368	618004	1					
ANR	619417	IdentifierDeclStatement	"char * soap_ssl_ca_dir = getenv ( ""SOAP_SSL_CA_DIR"" ) ;"	439:12:17417:17469	618004	0	True				
ANR	619418	IdentifierDecl	"* soap_ssl_ca_dir = getenv ( ""SOAP_SSL_CA_DIR"" )"		618004	0					
ANR	619419	IdentifierDeclType	char *		618004	0					
ANR	619420	Identifier	soap_ssl_ca_dir		618004	1					
ANR	619421	AssignmentExpression	"* soap_ssl_ca_dir = getenv ( ""SOAP_SSL_CA_DIR"" )"		618004	2		=			
ANR	619422	Identifier	soap_ssl_ca_dir		618004	0					
ANR	619423	CallExpression	"getenv ( ""SOAP_SSL_CA_DIR"" )"		618004	1					
ANR	619424	Callee	getenv		618004	0					
ANR	619425	Identifier	getenv		618004	0					
ANR	619426	ArgumentList	"""SOAP_SSL_CA_DIR"""		618004	1					
ANR	619427	Argument	"""SOAP_SSL_CA_DIR"""		618004	0					
ANR	619428	PrimaryExpression	"""SOAP_SSL_CA_DIR"""		618004	0					
ANR	619429	IfStatement	if ( soap_ssl_ca_dir != NULL )		618004	1					
ANR	619430	Condition	soap_ssl_ca_dir != NULL	440:16:17487:17509	618004	0	True				
ANR	619431	EqualityExpression	soap_ssl_ca_dir != NULL		618004	0		!=			
ANR	619432	Identifier	soap_ssl_ca_dir		618004	0					
ANR	619433	Identifier	NULL		618004	1					
ANR	619434	CompoundStatement		259:42:11412:11412	618004	1					
ANR	619435	ExpressionStatement	CAPath = soap_ssl_ca_dir	441:16:17531:17555	618004	0	True				
ANR	619436	AssignmentExpression	CAPath = soap_ssl_ca_dir		618004	0		=			
ANR	619437	Identifier	CAPath		618004	0					
ANR	619438	Identifier	soap_ssl_ca_dir		618004	1					
ANR	619439	IfStatement	if ( CAFile . empty ( ) )		618004	10					
ANR	619440	Condition	CAFile . empty ( )	445:12:17594:17607	618004	0	True				
ANR	619441	CallExpression	CAFile . empty ( )		618004	0					
ANR	619442	Callee	CAFile . empty		618004	0					
ANR	619443	MemberAccess	CAFile . empty		618004	0					
ANR	619444	Identifier	CAFile		618004	0					
ANR	619445	Identifier	empty		618004	1					
ANR	619446	ArgumentList			618004	1					
ANR	619447	CompoundStatement		265:12:11524:11578	618004	1					
ANR	619448	IdentifierDeclStatement	"char * soap_ssl_ca_file = getenv ( ""SOAP_SSL_CA_FILE"" ) ;"	446:12:17625:17679	618004	0	True				
ANR	619449	IdentifierDecl	"* soap_ssl_ca_file = getenv ( ""SOAP_SSL_CA_FILE"" )"		618004	0					
ANR	619450	IdentifierDeclType	char *		618004	0					
ANR	619451	Identifier	soap_ssl_ca_file		618004	1					
ANR	619452	AssignmentExpression	"* soap_ssl_ca_file = getenv ( ""SOAP_SSL_CA_FILE"" )"		618004	2		=			
ANR	619453	Identifier	soap_ssl_ca_file		618004	0					
ANR	619454	CallExpression	"getenv ( ""SOAP_SSL_CA_FILE"" )"		618004	1					
ANR	619455	Callee	getenv		618004	0					
ANR	619456	Identifier	getenv		618004	0					
ANR	619457	ArgumentList	"""SOAP_SSL_CA_FILE"""		618004	1					
ANR	619458	Argument	"""SOAP_SSL_CA_FILE"""		618004	0					
ANR	619459	PrimaryExpression	"""SOAP_SSL_CA_FILE"""		618004	0					
ANR	619460	IfStatement	if ( soap_ssl_ca_file != NULL )		618004	1					
ANR	619461	Condition	soap_ssl_ca_file != NULL	447:16:17697:17720	618004	0	True				
ANR	619462	EqualityExpression	soap_ssl_ca_file != NULL		618004	0		!=			
ANR	619463	Identifier	soap_ssl_ca_file		618004	0					
ANR	619464	Identifier	NULL		618004	1					
ANR	619465	CompoundStatement		266:43:11623:11623	618004	1					
ANR	619466	ExpressionStatement	CAFile = soap_ssl_ca_file	448:16:17742:17767	618004	0	True				
ANR	619467	AssignmentExpression	CAFile = soap_ssl_ca_file		618004	0		=			
ANR	619468	Identifier	CAFile		618004	0					
ANR	619469	Identifier	soap_ssl_ca_file		618004	1					
ANR	619470	IfStatement	if ( CAPath . empty ( ) )		618004	11					
ANR	619471	Condition	CAPath . empty ( )	452:12:17806:17819	618004	0	True				
ANR	619472	CallExpression	CAPath . empty ( )		618004	0					
ANR	619473	Callee	CAPath . empty		618004	0					
ANR	619474	MemberAccess	CAPath . empty		618004	0					
ANR	619475	Identifier	CAPath		618004	0					
ANR	619476	Identifier	empty		618004	1					
ANR	619477	ArgumentList			618004	1					
ANR	619478	CompoundStatement		271:29:11722:11722	618004	1					
ANR	619479	ExpressionStatement	"CAPath = ""/etc/grid-security/certificates"""	453:12:17837:17879	618004	0	True				
ANR	619480	AssignmentExpression	"CAPath = ""/etc/grid-security/certificates"""		618004	0		=			
ANR	619481	Identifier	CAPath		618004	0					
ANR	619482	PrimaryExpression	"""/etc/grid-security/certificates"""		618004	1					
ANR	619483	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Setting CA path to '%s'\\n"" , CAPath . c_str ( ) )"	455:8:17899:17966	618004	12	True				
ANR	619484	CallExpression	"dprintf ( D_FULLDEBUG , ""Setting CA path to '%s'\\n"" , CAPath . c_str ( ) )"		618004	0					
ANR	619485	Callee	dprintf		618004	0					
ANR	619486	Identifier	dprintf		618004	0					
ANR	619487	ArgumentList	D_FULLDEBUG		618004	1					
ANR	619488	Argument	D_FULLDEBUG		618004	0					
ANR	619489	Identifier	D_FULLDEBUG		618004	0					
ANR	619490	Argument	"""Setting CA path to '%s'\\n"""		618004	1					
ANR	619491	PrimaryExpression	"""Setting CA path to '%s'\\n"""		618004	0					
ANR	619492	Argument	CAPath . c_str ( )		618004	2					
ANR	619493	CallExpression	CAPath . c_str ( )		618004	0					
ANR	619494	Callee	CAPath . c_str		618004	0					
ANR	619495	MemberAccess	CAPath . c_str		618004	0					
ANR	619496	Identifier	CAPath		618004	0					
ANR	619497	Identifier	c_str		618004	1					
ANR	619498	ArgumentList			618004	1					
ANR	619499	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAPATH , CAPath . c_str ( ) )"	456:8:17976:18040	618004	13	True				
ANR	619500	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAPATH , CAPath . c_str ( ) )"		618004	0					
ANR	619501	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619502	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619503	ArgumentList	curl		618004	1					
ANR	619504	Argument	curl		618004	0					
ANR	619505	Identifier	curl		618004	0					
ANR	619506	Argument	CURLOPT_CAPATH		618004	1					
ANR	619507	Identifier	CURLOPT_CAPATH		618004	0					
ANR	619508	Argument	CAPath . c_str ( )		618004	2					
ANR	619509	CallExpression	CAPath . c_str ( )		618004	0					
ANR	619510	Callee	CAPath . c_str		618004	0					
ANR	619511	MemberAccess	CAPath . c_str		618004	0					
ANR	619512	Identifier	CAPath		618004	0					
ANR	619513	Identifier	c_str		618004	1					
ANR	619514	ArgumentList			618004	1					
ANR	619515	IfStatement	if ( ! CAFile . empty ( ) )		618004	14					
ANR	619516	Condition	! CAFile . empty ( )	458:12:18063:18078	618004	0	True				
ANR	619517	UnaryOperationExpression	! CAFile . empty ( )		618004	0					
ANR	619518	UnaryOperator	!		618004	0					
ANR	619519	CallExpression	CAFile . empty ( )		618004	1					
ANR	619520	Callee	CAFile . empty		618004	0					
ANR	619521	MemberAccess	CAFile . empty		618004	0					
ANR	619522	Identifier	CAFile		618004	0					
ANR	619523	Identifier	empty		618004	1					
ANR	619524	ArgumentList			618004	1					
ANR	619525	CompoundStatement		277:31:11981:11981	618004	1					
ANR	619526	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Setting CA file to '%s'\\n"" , CAFile . c_str ( ) )"	459:12:18096:18163	618004	0	True				
ANR	619527	CallExpression	"dprintf ( D_FULLDEBUG , ""Setting CA file to '%s'\\n"" , CAFile . c_str ( ) )"		618004	0					
ANR	619528	Callee	dprintf		618004	0					
ANR	619529	Identifier	dprintf		618004	0					
ANR	619530	ArgumentList	D_FULLDEBUG		618004	1					
ANR	619531	Argument	D_FULLDEBUG		618004	0					
ANR	619532	Identifier	D_FULLDEBUG		618004	0					
ANR	619533	Argument	"""Setting CA file to '%s'\\n"""		618004	1					
ANR	619534	PrimaryExpression	"""Setting CA file to '%s'\\n"""		618004	0					
ANR	619535	Argument	CAFile . c_str ( )		618004	2					
ANR	619536	CallExpression	CAFile . c_str ( )		618004	0					
ANR	619537	Callee	CAFile . c_str		618004	0					
ANR	619538	MemberAccess	CAFile . c_str		618004	0					
ANR	619539	Identifier	CAFile		618004	0					
ANR	619540	Identifier	c_str		618004	1					
ANR	619541	ArgumentList			618004	1					
ANR	619542	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAINFO , CAFile . c_str ( ) )"	460:12:18177:18241	618004	1	True				
ANR	619543	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAINFO , CAFile . c_str ( ) )"		618004	0					
ANR	619544	Callee	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619545	Identifier	SET_CURL_SECURITY_OPTION		618004	0					
ANR	619546	ArgumentList	curl		618004	1					
ANR	619547	Argument	curl		618004	0					
ANR	619548	Identifier	curl		618004	0					
ANR	619549	Argument	CURLOPT_CAINFO		618004	1					
ANR	619550	Identifier	CURLOPT_CAINFO		618004	0					
ANR	619551	Argument	CAFile . c_str ( )		618004	2					
ANR	619552	CallExpression	CAFile . c_str ( )		618004	0					
ANR	619553	Callee	CAFile . c_str		618004	0					
ANR	619554	MemberAccess	CAFile . c_str		618004	0					
ANR	619555	Identifier	CAFile		618004	0					
ANR	619556	Identifier	c_str		618004	1					
ANR	619557	ArgumentList			618004	1					
ANR	619558	IfStatement	"if ( setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 ) != 0 )"		618004	15					
ANR	619559	Condition	"setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 ) != 0"	463:12:18274:18317	618004	0	True				
ANR	619560	EqualityExpression	"setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 ) != 0"		618004	0		!=			
ANR	619561	CallExpression	"setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 )"		618004	0					
ANR	619562	Callee	setenv		618004	0					
ANR	619563	Identifier	setenv		618004	0					
ANR	619564	ArgumentList	"""OPENSSL_ALLOW_PROXY"""		618004	1					
ANR	619565	Argument	"""OPENSSL_ALLOW_PROXY"""		618004	0					
ANR	619566	PrimaryExpression	"""OPENSSL_ALLOW_PROXY"""		618004	0					
ANR	619567	Argument	"""1"""		618004	1					
ANR	619568	PrimaryExpression	"""1"""		618004	0					
ANR	619569	Argument	0		618004	2					
ANR	619570	PrimaryExpression	0		618004	0					
ANR	619571	PrimaryExpression	0		618004	1					
ANR	619572	CompoundStatement		282:59:12220:12220	618004	1					
ANR	619573	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to set OPENSSL_ALLOW_PROXY.\\n"" )"	464:12:18335:18397	618004	0	True				
ANR	619574	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to set OPENSSL_ALLOW_PROXY.\\n"" )"		618004	0					
ANR	619575	Callee	dprintf		618004	0					
ANR	619576	Identifier	dprintf		618004	0					
ANR	619577	ArgumentList	D_FULLDEBUG		618004	1					
ANR	619578	Argument	D_FULLDEBUG		618004	0					
ANR	619579	Identifier	D_FULLDEBUG		618004	0					
ANR	619580	Argument	"""Failed to set OPENSSL_ALLOW_PROXY.\\n"""		618004	1					
ANR	619581	PrimaryExpression	"""Failed to set OPENSSL_ALLOW_PROXY.\\n"""		618004	0					
ANR	619582	ExpressionStatement	amazon_gahp_release_big_mutex ( )	468:4:18432:18463	618004	66	True				
ANR	619583	CallExpression	amazon_gahp_release_big_mutex ( )		618004	0					
ANR	619584	Callee	amazon_gahp_release_big_mutex		618004	0					
ANR	619585	Identifier	amazon_gahp_release_big_mutex		618004	0					
ANR	619586	ArgumentList			618004	1					
ANR	619587	ExpressionStatement	rv = curl_easy_perform ( curl )	469:4:18469:18499	618004	67	True				
ANR	619588	AssignmentExpression	rv = curl_easy_perform ( curl )		618004	0		=			
ANR	619589	Identifier	rv		618004	0					
ANR	619590	CallExpression	curl_easy_perform ( curl )		618004	1					
ANR	619591	Callee	curl_easy_perform		618004	0					
ANR	619592	Identifier	curl_easy_perform		618004	0					
ANR	619593	ArgumentList	curl		618004	1					
ANR	619594	Argument	curl		618004	0					
ANR	619595	Identifier	curl		618004	0					
ANR	619596	ExpressionStatement	amazon_gahp_grab_big_mutex ( )	470:4:18505:18533	618004	68	True				
ANR	619597	CallExpression	amazon_gahp_grab_big_mutex ( )		618004	0					
ANR	619598	Callee	amazon_gahp_grab_big_mutex		618004	0					
ANR	619599	Identifier	amazon_gahp_grab_big_mutex		618004	0					
ANR	619600	ArgumentList			618004	1					
ANR	619601	IfStatement	if ( rv != 0 )		618004	69					
ANR	619602	Condition	rv != 0	471:8:18543:18549	618004	0	True				
ANR	619603	EqualityExpression	rv != 0		618004	0		!=			
ANR	619604	Identifier	rv		618004	0					
ANR	619605	PrimaryExpression	0		618004	1					
ANR	619606	CompoundStatement		292:8:12501:12525	618004	1					
ANR	619607	ExpressionStatement	"this -> errorCode = ""E_CURL_IO"""	472:8:18563:18592	618004	0	True				
ANR	619608	AssignmentExpression	"this -> errorCode = ""E_CURL_IO"""		618004	0		=			
ANR	619609	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619610	Identifier	this		618004	0					
ANR	619611	Identifier	errorCode		618004	1					
ANR	619612	PrimaryExpression	"""E_CURL_IO"""		618004	1					
ANR	619613	IdentifierDeclStatement	std :: ostringstream error ;	473:8:18602:18626	618004	1	True				
ANR	619614	IdentifierDecl	error		618004	0					
ANR	619615	IdentifierDeclType	std :: ostringstream		618004	0					
ANR	619616	Identifier	error		618004	1					
ANR	619617	ExpressionStatement	"error << ""curl_easy_perform() failed ("" << rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""	474:8:18636:18727	618004	2	True				
ANR	619618	ShiftExpression	"error << ""curl_easy_perform() failed ("" << rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""		618004	0		<<			
ANR	619619	Identifier	error		618004	0					
ANR	619620	ShiftExpression	"""curl_easy_perform() failed ("" << rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""		618004	1		<<			
ANR	619621	PrimaryExpression	"""curl_easy_perform() failed ("""		618004	0					
ANR	619622	ShiftExpression	"rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""		618004	1		<<			
ANR	619623	Identifier	rv		618004	0					
ANR	619624	ShiftExpression	"""): '"" << curl_easy_strerror ( rv ) << ""'."""		618004	1		<<			
ANR	619625	PrimaryExpression	"""): '"""		618004	0					
ANR	619626	ShiftExpression	"curl_easy_strerror ( rv ) << ""'."""		618004	1		<<			
ANR	619627	CallExpression	curl_easy_strerror ( rv )		618004	0					
ANR	619628	Callee	curl_easy_strerror		618004	0					
ANR	619629	Identifier	curl_easy_strerror		618004	0					
ANR	619630	ArgumentList	rv		618004	1					
ANR	619631	Argument	rv		618004	0					
ANR	619632	Identifier	rv		618004	0					
ANR	619633	PrimaryExpression	"""'."""		618004	1					
ANR	619634	ExpressionStatement	this -> errorMessage = error . str ( )	475:8:18737:18769	618004	3	True				
ANR	619635	AssignmentExpression	this -> errorMessage = error . str ( )		618004	0		=			
ANR	619636	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619637	Identifier	this		618004	0					
ANR	619638	Identifier	errorMessage		618004	1					
ANR	619639	CallExpression	error . str ( )		618004	1					
ANR	619640	Callee	error . str		618004	0					
ANR	619641	MemberAccess	error . str		618004	0					
ANR	619642	Identifier	error		618004	0					
ANR	619643	Identifier	str		618004	1					
ANR	619644	ArgumentList			618004	1					
ANR	619645	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , this -> errorMessage . c_str ( ) )"	476:8:18779:18834	618004	4	True				
ANR	619646	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , this -> errorMessage . c_str ( ) )"		618004	0					
ANR	619647	Callee	dprintf		618004	0					
ANR	619648	Identifier	dprintf		618004	0					
ANR	619649	ArgumentList	D_ALWAYS		618004	1					
ANR	619650	Argument	D_ALWAYS		618004	0					
ANR	619651	Identifier	D_ALWAYS		618004	0					
ANR	619652	Argument	"""%s\\n"""		618004	1					
ANR	619653	PrimaryExpression	"""%s\\n"""		618004	0					
ANR	619654	Argument	this -> errorMessage . c_str ( )		618004	2					
ANR	619655	CallExpression	this -> errorMessage . c_str ( )		618004	0					
ANR	619656	Callee	this -> errorMessage . c_str		618004	0					
ANR	619657	MemberAccess	this -> errorMessage . c_str		618004	0					
ANR	619658	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619659	Identifier	this		618004	0					
ANR	619660	Identifier	errorMessage		618004	1					
ANR	619661	Identifier	c_str		618004	1					
ANR	619662	ArgumentList			618004	1					
ANR	619663	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , errorBuffer )"	477:8:18844:18887	618004	5	True				
ANR	619664	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , errorBuffer )"		618004	0					
ANR	619665	Callee	dprintf		618004	0					
ANR	619666	Identifier	dprintf		618004	0					
ANR	619667	ArgumentList	D_FULLDEBUG		618004	1					
ANR	619668	Argument	D_FULLDEBUG		618004	0					
ANR	619669	Identifier	D_FULLDEBUG		618004	0					
ANR	619670	Argument	"""%s\\n"""		618004	1					
ANR	619671	PrimaryExpression	"""%s\\n"""		618004	0					
ANR	619672	Argument	errorBuffer		618004	2					
ANR	619673	Identifier	errorBuffer		618004	0					
ANR	619674	ReturnStatement	return false ;	478:8:18897:18909	618004	6	True				
ANR	619675	Identifier	false		618004	0					
ANR	619676	IdentifierDeclStatement	unsigned long responseCode = 0 ;	481:4:18922:18952	618004	70	True				
ANR	619677	IdentifierDecl	responseCode = 0		618004	0					
ANR	619678	IdentifierDeclType	unsigned long		618004	0					
ANR	619679	Identifier	responseCode		618004	1					
ANR	619680	AssignmentExpression	responseCode = 0		618004	2		=			
ANR	619681	Identifier	responseCode		618004	0					
ANR	619682	PrimaryExpression	0		618004	1					
ANR	619683	ExpressionStatement	"rv = curl_easy_getinfo ( curl , CURLINFO_RESPONSE_CODE , & responseCode )"	482:4:18958:19028	618004	71	True				
ANR	619684	AssignmentExpression	"rv = curl_easy_getinfo ( curl , CURLINFO_RESPONSE_CODE , & responseCode )"		618004	0		=			
ANR	619685	Identifier	rv		618004	0					
ANR	619686	CallExpression	"curl_easy_getinfo ( curl , CURLINFO_RESPONSE_CODE , & responseCode )"		618004	1					
ANR	619687	Callee	curl_easy_getinfo		618004	0					
ANR	619688	Identifier	curl_easy_getinfo		618004	0					
ANR	619689	ArgumentList	curl		618004	1					
ANR	619690	Argument	curl		618004	0					
ANR	619691	Identifier	curl		618004	0					
ANR	619692	Argument	CURLINFO_RESPONSE_CODE		618004	1					
ANR	619693	Identifier	CURLINFO_RESPONSE_CODE		618004	0					
ANR	619694	Argument	& responseCode		618004	2					
ANR	619695	UnaryOperationExpression	& responseCode		618004	0					
ANR	619696	UnaryOperator	&		618004	0					
ANR	619697	Identifier	responseCode		618004	1					
ANR	619698	IfStatement	if ( rv != CURLE_OK )		618004	72					
ANR	619699	Condition	rv != CURLE_OK	483:8:19038:19051	618004	0	True				
ANR	619700	EqualityExpression	rv != CURLE_OK		618004	0		!=			
ANR	619701	Identifier	rv		618004	0					
ANR	619702	Identifier	CURLE_OK		618004	1					
ANR	619703	CompoundStatement		302:25:12954:12954	618004	1					
ANR	619704	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	484:8:19065:19095	618004	0	True				
ANR	619705	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		618004	0		=			
ANR	619706	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619707	Identifier	this		618004	0					
ANR	619708	Identifier	errorCode		618004	1					
ANR	619709	PrimaryExpression	"""E_CURL_LIB"""		618004	1					
ANR	619710	ExpressionStatement	"this -> errorMessage = ""curl_easy_getinfo() failed."""	485:8:19105:19155	618004	1	True				
ANR	619711	AssignmentExpression	"this -> errorMessage = ""curl_easy_getinfo() failed."""		618004	0		=			
ANR	619712	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619713	Identifier	this		618004	0					
ANR	619714	Identifier	errorMessage		618004	1					
ANR	619715	PrimaryExpression	"""curl_easy_getinfo() failed."""		618004	1					
ANR	619716	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	486:8:19165:19303	618004	2	True				
ANR	619717	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		618004	0					
ANR	619718	Callee	dprintf		618004	0					
ANR	619719	Identifier	dprintf		618004	0					
ANR	619720	ArgumentList	D_ALWAYS		618004	1					
ANR	619721	Argument	D_ALWAYS		618004	0					
ANR	619722	Identifier	D_ALWAYS		618004	0					
ANR	619723	Argument	"""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"""		618004	1					
ANR	619724	PrimaryExpression	"""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"""		618004	0					
ANR	619725	Argument	rv		618004	2					
ANR	619726	Identifier	rv		618004	0					
ANR	619727	Argument	curl_easy_strerror ( rv )		618004	3					
ANR	619728	CallExpression	curl_easy_strerror ( rv )		618004	0					
ANR	619729	Callee	curl_easy_strerror		618004	0					
ANR	619730	Identifier	curl_easy_strerror		618004	0					
ANR	619731	ArgumentList	rv		618004	1					
ANR	619732	Argument	rv		618004	0					
ANR	619733	Identifier	rv		618004	0					
ANR	619734	ReturnStatement	return false ;	488:8:19313:19325	618004	3	True				
ANR	619735	Identifier	false		618004	0					
ANR	619736	ExpressionStatement	curl_easy_cleanup ( curl )	491:4:19350:19375	618004	73	True				
ANR	619737	CallExpression	curl_easy_cleanup ( curl )		618004	0					
ANR	619738	Callee	curl_easy_cleanup		618004	0					
ANR	619739	Identifier	curl_easy_cleanup		618004	0					
ANR	619740	ArgumentList	curl		618004	1					
ANR	619741	Argument	curl		618004	0					
ANR	619742	Identifier	curl		618004	0					
ANR	619743	IfStatement	if ( responseCode != 200 )		618004	74					
ANR	619744	Condition	responseCode != 200	493:8:19390:19408	618004	0	True				
ANR	619745	EqualityExpression	responseCode != 200		618004	0		!=			
ANR	619746	Identifier	responseCode		618004	0					
ANR	619747	PrimaryExpression	200		618004	1					
ANR	619748	CompoundStatement		312:30:13311:13311	618004	1					
ANR	619749	ExpressionStatement	"this -> errorCode = ""E_HTTP_RESPONSE_NOT_200"""	494:8:19422:19465	618004	0	True				
ANR	619750	AssignmentExpression	"this -> errorCode = ""E_HTTP_RESPONSE_NOT_200"""		618004	0		=			
ANR	619751	PtrMemberAccess	this -> errorCode		618004	0					
ANR	619752	Identifier	this		618004	0					
ANR	619753	Identifier	errorCode		618004	1					
ANR	619754	PrimaryExpression	"""E_HTTP_RESPONSE_NOT_200"""		618004	1					
ANR	619755	ExpressionStatement	this -> errorMessage = resultString	495:8:19475:19508	618004	1	True				
ANR	619756	AssignmentExpression	this -> errorMessage = resultString		618004	0		=			
ANR	619757	PtrMemberAccess	this -> errorMessage		618004	0					
ANR	619758	Identifier	this		618004	0					
ANR	619759	Identifier	errorMessage		618004	1					
ANR	619760	Identifier	resultString		618004	1					
ANR	619761	ExpressionStatement	"dprintf ( D_ALWAYS , ""Query did not return 200 (%lu), failing.\\n"" , responseCode )"	496:8:19518:19609	618004	2	True				
ANR	619762	CallExpression	"dprintf ( D_ALWAYS , ""Query did not return 200 (%lu), failing.\\n"" , responseCode )"		618004	0					
ANR	619763	Callee	dprintf		618004	0					
ANR	619764	Identifier	dprintf		618004	0					
ANR	619765	ArgumentList	D_ALWAYS		618004	1					
ANR	619766	Argument	D_ALWAYS		618004	0					
ANR	619767	Identifier	D_ALWAYS		618004	0					
ANR	619768	Argument	"""Query did not return 200 (%lu), failing.\\n"""		618004	1					
ANR	619769	PrimaryExpression	"""Query did not return 200 (%lu), failing.\\n"""		618004	0					
ANR	619770	Argument	responseCode		618004	2					
ANR	619771	Identifier	responseCode		618004	0					
ANR	619772	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failure response text was '%s'.\\n"" , resultString . c_str ( ) )"	498:8:19619:19697	618004	3	True				
ANR	619773	CallExpression	"dprintf ( D_ALWAYS , ""Failure response text was '%s'.\\n"" , resultString . c_str ( ) )"		618004	0					
ANR	619774	Callee	dprintf		618004	0					
ANR	619775	Identifier	dprintf		618004	0					
ANR	619776	ArgumentList	D_ALWAYS		618004	1					
ANR	619777	Argument	D_ALWAYS		618004	0					
ANR	619778	Identifier	D_ALWAYS		618004	0					
ANR	619779	Argument	"""Failure response text was '%s'.\\n"""		618004	1					
ANR	619780	PrimaryExpression	"""Failure response text was '%s'.\\n"""		618004	0					
ANR	619781	Argument	resultString . c_str ( )		618004	2					
ANR	619782	CallExpression	resultString . c_str ( )		618004	0					
ANR	619783	Callee	resultString . c_str		618004	0					
ANR	619784	MemberAccess	resultString . c_str		618004	0					
ANR	619785	Identifier	resultString		618004	0					
ANR	619786	Identifier	c_str		618004	1					
ANR	619787	ArgumentList			618004	1					
ANR	619788	ReturnStatement	return false ;	499:8:19707:19719	618004	4	True				
ANR	619789	Identifier	false		618004	0					
ANR	619790	ReturnStatement	return true ;	502:4:19736:19747	618004	75	True				
ANR	619791	Identifier	true		618004	0					
ANR	619792	ReturnType	bool		618004	1					
ANR	619793	Identifier	AmazonRequest :: SendRequest		618004	2					
ANR	619794	ParameterList			618004	3					
ANR	619795	CFGEntryNode	ENTRY		618004		True				
ANR	619796	CFGExitNode	EXIT		618004		True				
ANR	619797	Symbol	curl		618004						
ANR	619798	Symbol	amazonURLEncode		618004						
ANR	619799	Symbol	httpRequestURI		618004						
ANR	619800	Symbol	this -> errorCode		618004						
ANR	619801	Symbol	this -> serviceURL . c_str		618004						
ANR	619802	Symbol	r . compile		618004						
ANR	619803	Symbol	curl_easy_setopt		618004						
ANR	619804	Symbol	responseCode		618004						
ANR	619805	Symbol	EVP_sha256		618004						
ANR	619806	Symbol	CURLOPT_SSL_VERIFYPEER		618004						
ANR	619807	Symbol	CURLOPT_CAPATH		618004						
ANR	619808	Symbol	mdLength		618004						
ANR	619809	Symbol	CURLOPT_WRITEDATA		618004						
ANR	619810	Symbol	patternOK		618004						
ANR	619811	Symbol	resultString . c_str		618004						
ANR	619812	Symbol	this -> errorMessage		618004						
ANR	619813	Symbol	stringToSign . c_str		618004						
ANR	619814	Symbol	canonicalizedQueryString		618004						
ANR	619815	Symbol	CURLOPT_SSLKEY		618004						
ANR	619816	Symbol	std :: make_pair		618004						
ANR	619817	Symbol	CURLOPT_WRITEFUNCTION		618004						
ANR	619818	Symbol	CAPath . c_str		618004						
ANR	619819	Symbol	CAPath . empty		618004						
ANR	619820	Symbol	x509_ca_file		618004						
ANR	619821	Symbol	valueOfHostHeaderInLowercase . begin		618004						
ANR	619822	Symbol	* keyID		618004						
ANR	619823	Symbol	CURLOPT_NOPROGRESS		618004						
ANR	619824	Symbol	std :: string		618004						
ANR	619825	Symbol	errCode		618004						
ANR	619826	Symbol	i -> first		618004						
ANR	619827	Symbol	curl_easy_perform		618004						
ANR	619828	Symbol	saKey . length		618004						
ANR	619829	Symbol	CAFile . empty		618004						
ANR	619830	Symbol	* keyID . length		618004						
ANR	619831	Symbol	rv		618004						
ANR	619832	Symbol	x509_ca_dir		618004						
ANR	619833	Symbol	serviceURL		618004						
ANR	619834	Symbol	setenv		618004						
ANR	619835	Symbol	keyID . length		618004						
ANR	619836	Symbol	this -> secretKeyFile		618004						
ANR	619837	Symbol	messageDigest		618004						
ANR	619838	Symbol	stringToSign . length		618004						
ANR	619839	Symbol	this -> serviceURL		618004						
ANR	619840	Symbol	CURLOPT_SSLCERTTYPE		618004						
ANR	619841	Symbol	* saKey		618004						
ANR	619842	Symbol	& tolower		618004						
ANR	619843	Symbol	CURLOPT_SSLCERT		618004						
ANR	619844	Symbol	getenv		618004						
ANR	619845	Symbol	valueOfHostHeaderInLowercase		618004						
ANR	619846	Symbol	finalURI . c_str		618004						
ANR	619847	Symbol	& this -> resultString		618004						
ANR	619848	Symbol	this -> errorMessage . c_str		618004						
ANR	619849	Symbol	httpRequestURI . empty		618004						
ANR	619850	Symbol	r . match		618004						
ANR	619851	Symbol	iso8601		618004						
ANR	619852	Symbol	soap_ssl_ca_dir		618004						
ANR	619853	Symbol	CURLINFO_RESPONSE_CODE		618004						
ANR	619854	Symbol	i		618004						
ANR	619855	Symbol	query_parameters . find		618004						
ANR	619856	Symbol	query_parameters		618004						
ANR	619857	Symbol	* this		618004						
ANR	619858	Symbol	r		618004						
ANR	619859	Symbol	finalURI		618004						
ANR	619860	Symbol	readShortFile		618004						
ANR	619861	Symbol	matchFound		618004						
ANR	619862	Symbol	stringToSign		618004						
ANR	619863	Symbol	& errString		618004						
ANR	619864	Symbol	base64Encoded		618004						
ANR	619865	Symbol	* groups		618004						
ANR	619866	Symbol	& appendToString		618004						
ANR	619867	Symbol	& groups		618004						
ANR	619868	Symbol	i -> second		618004						
ANR	619869	Symbol	& brokenDownTime		618004						
ANR	619870	Symbol	& responseCode		618004						
ANR	619871	Symbol	canonicalizedQueryString . end		618004						
ANR	619872	Symbol	hostAndPath		618004						
ANR	619873	Symbol	curl_easy_getinfo		618004						
ANR	619874	Symbol	protocol		618004						
ANR	619875	Symbol	& mdLength		618004						
ANR	619876	Symbol	NULL		618004						
ANR	619877	Symbol	* saKey . length		618004						
ANR	619878	Symbol	CURLOPT_CAINFO		618004						
ANR	619879	Symbol	this		618004						
ANR	619880	Symbol	resultString		618004						
ANR	619881	Symbol	keyID		618004						
ANR	619882	Symbol	CURL_GLOBAL_ALL		618004						
ANR	619883	Symbol	CURLOPT_URL		618004						
ANR	619884	Symbol	D_FULLDEBUG		618004						
ANR	619885	Symbol	keyID . c_str		618004						
ANR	619886	Symbol	brokenDownTime		618004						
ANR	619887	Symbol	CAPath		618004						
ANR	619888	Symbol	saKey		618004						
ANR	619889	Symbol	name		618004						
ANR	619890	Symbol	true		618004						
ANR	619891	Symbol	errorBuffer		618004						
ANR	619892	Symbol	CURLOPT_ERRORBUFFER		618004						
ANR	619893	Symbol	valueOfHostHeaderInLowercase . end		618004						
ANR	619894	Symbol	curl_easy_strerror		618004						
ANR	619895	Symbol	soap_ssl_ca_file		618004						
ANR	619896	Symbol	query_parameters . end		618004						
ANR	619897	Symbol	HMAC		618004						
ANR	619898	Symbol	saKey . c_str		618004						
ANR	619899	Symbol	signatureInBase64		618004						
ANR	619900	Symbol	error		618004						
ANR	619901	Symbol	errString		618004						
ANR	619902	Symbol	CAFile . c_str		618004						
ANR	619903	Symbol	now		618004						
ANR	619904	Symbol	hmac		618004						
ANR	619905	Symbol	serviceURL . c_str		618004						
ANR	619906	Symbol	CURLOPT_SSL_VERIFYHOST		618004						
ANR	619907	Symbol	value		618004						
ANR	619908	Symbol	CURLE_OK		618004						
ANR	619909	Symbol	this -> accessKeyFile . c_str		618004						
ANR	619910	Symbol	encodedParameters		618004						
ANR	619911	Symbol	query_parameters . begin		618004						
ANR	619912	Symbol	this -> secretKeyFile . c_str		618004						
ANR	619913	Symbol	curl_global_init		618004						
ANR	619914	Symbol	error . str		618004						
ANR	619915	Symbol	D_ALWAYS		618004						
ANR	619916	Symbol	false		618004						
ANR	619917	Symbol	groups		618004						
ANR	619918	Symbol	& errCode		618004						
ANR	619919	Symbol	condor_base64_encode		618004						
ANR	619920	Symbol	CAFile		618004						
ANR	619921	Symbol	CURLOPT_SSLKEYTYPE		618004						
ANR	619922	Symbol	* i		618004						
ANR	619923	Symbol	curl_easy_init		618004						
ANR	619924	Symbol	& now		618004						
ANR	619925	Symbol	this -> accessKeyFile		618004						
ANR	619926	Function	AmazonVMStart :: AmazonVMStart	538:0:21313:21346							
ANR	619927	FunctionDef	AmazonVMStart :: AmazonVMStart ()		619926	0					
ANR	619928	CompoundStatement		538:31:21344:21346	619926	0					
ANR	619929	Identifier	AmazonVMStart :: AmazonVMStart		619926	1					
ANR	619930	ParameterList			619926	2					
ANR	619931	CFGEntryNode	ENTRY		619926		True				
ANR	619932	CFGExitNode	EXIT		619926		True				
ANR	619933	Function	AmazonVMStart :: ~AmazonVMStart	540:0:21349:21383							
ANR	619934	FunctionDef	AmazonVMStart :: ~AmazonVMStart ()		619933	0					
ANR	619935	CompoundStatement		540:32:21381:21383	619933	0					
ANR	619936	Identifier	AmazonVMStart :: ~AmazonVMStart		619933	1					
ANR	619937	ParameterList			619933	2					
ANR	619938	CFGEntryNode	ENTRY		619933		True				
ANR	619939	CFGExitNode	EXIT		619933		True				
ANR	619940	ClassDef	vmStartUD_t	542:0:21386:21545							
ANR	619941	DeclStmt									
ANR	619942	Decl							bool	bool	inInstanceId
ANR	619943	DeclStmt									
ANR	619944	Decl							std :: string	std :: string &	instanceID
ANR	619945	Function	vmStartUD_t	546:4:21465:21543							
ANR	619946	FunctionDef	vmStartUD_t (std :: string & iid)		619945	2					
ANR	619947	CompoundStatement		546:80:21541:21543	619945	0					
ANR	619948	Identifier	vmStartUD_t		619945	1					
ANR	619949	ParameterList	std :: string & iid		619945	2					
ANR	619950	Parameter	std :: string & iid	546:17:21478:21494	619945	0	True				
ANR	619951	ParameterType	std :: string &		619945	0					
ANR	619952	Identifier	iid		619945	1					
ANR	619953	CFGEntryNode	ENTRY		619945		True				
ANR	619954	CFGExitNode	EXIT		619945		True				
ANR	619955	Symbol	iid		619945						
ANR	619956	DeclStmt									
ANR	619957	Decl							struct vmStartUD_t	struct vmStartUD_t	vmStartUD
ANR	619958	DeclStmt									
ANR	619959	Decl							vmStartUD	vmStartUD *	vsud
ANR	619960	Function	vmStartCDH	557:0:21822:22055							
ANR	619961	FunctionDef	"vmStartCDH (void * vUserData , const XML_Char * cdata , int len)"		619960	0					
ANR	619962	CompoundStatement		557:69:21891:22055	619960	0					
ANR	619963	IdentifierDeclStatement	vmStartUD * vsud = ( vmStartUD * ) vUserData ;	558:4:21897:21938	619960	0	True				
ANR	619964	IdentifierDecl	* vsud = ( vmStartUD * ) vUserData		619960	0					
ANR	619965	IdentifierDeclType	vmStartUD *		619960	0					
ANR	619966	Identifier	vsud		619960	1					
ANR	619967	AssignmentExpression	* vsud = ( vmStartUD * ) vUserData		619960	2		=			
ANR	619968	Identifier	vsud		619960	0					
ANR	619969	CastExpression	( vmStartUD * ) vUserData		619960	1					
ANR	619970	CastTarget	vmStartUD *		619960	0					
ANR	619971	Identifier	vUserData		619960	1					
ANR	619972	IfStatement	if ( vsud -> inInstanceId )		619960	1					
ANR	619973	Condition	vsud -> inInstanceId	559:8:21948:21965	619960	0	True				
ANR	619974	PtrMemberAccess	vsud -> inInstanceId		619960	0					
ANR	619975	Identifier	vsud		619960	0					
ANR	619976	Identifier	inInstanceId		619960	1					
ANR	619977	CompoundStatement		3:29:77:77	619960	1					
ANR	619978	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> instanceID )"	560:8:21979:22047	619960	0	True				
ANR	619979	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> instanceID )"		619960	0					
ANR	619980	Callee	appendToString		619960	0					
ANR	619981	Identifier	appendToString		619960	0					
ANR	619982	ArgumentList	( void * ) cdata		619960	1					
ANR	619983	Argument	( void * ) cdata		619960	0					
ANR	619984	CastExpression	( void * ) cdata		619960	0					
ANR	619985	CastTarget	void *		619960	0					
ANR	619986	Identifier	cdata		619960	1					
ANR	619987	Argument	len		619960	1					
ANR	619988	Identifier	len		619960	0					
ANR	619989	Argument	1		619960	2					
ANR	619990	PrimaryExpression	1		619960	0					
ANR	619991	Argument	( void * ) & vsud -> instanceID		619960	3					
ANR	619992	CastExpression	( void * ) & vsud -> instanceID		619960	0					
ANR	619993	CastTarget	void *		619960	0					
ANR	619994	UnaryOperationExpression	& vsud -> instanceID		619960	1					
ANR	619995	UnaryOperator	&		619960	0					
ANR	619996	PtrMemberAccess	vsud -> instanceID		619960	1					
ANR	619997	Identifier	vsud		619960	0					
ANR	619998	Identifier	instanceID		619960	1					
ANR	619999	ReturnType	void		619960	1					
ANR	620000	Identifier	vmStartCDH		619960	2					
ANR	620001	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		619960	3					
ANR	620002	Parameter	void * vUserData	557:17:21839:21854	619960	0	True				
ANR	620003	ParameterType	void *		619960	0					
ANR	620004	Identifier	vUserData		619960	1					
ANR	620005	Parameter	const XML_Char * cdata	557:35:21857:21878	619960	1	True				
ANR	620006	ParameterType	const XML_Char *		619960	0					
ANR	620007	Identifier	cdata		619960	1					
ANR	620008	Parameter	int len	557:59:21881:21887	619960	2	True				
ANR	620009	ParameterType	int		619960	0					
ANR	620010	Identifier	len		619960	1					
ANR	620011	CFGEntryNode	ENTRY		619960		True				
ANR	620012	CFGExitNode	EXIT		619960		True				
ANR	620013	Symbol	len		619960						
ANR	620014	Symbol	& vsud -> instanceID		619960						
ANR	620015	Symbol	vsud -> inInstanceId		619960						
ANR	620016	Symbol	vUserData		619960						
ANR	620017	Symbol	* vsud		619960						
ANR	620018	Symbol	vsud		619960						
ANR	620019	Symbol	cdata		619960						
ANR	620020	Function	vmStartEEH	564:0:22058:22272							
ANR	620021	FunctionDef	"vmStartEEH (void * vUserData , const XML_Char * name)"		620020	0					
ANR	620022	CompoundStatement		564:59:22117:22272	620020	0					
ANR	620023	IdentifierDeclStatement	vmStartUD * vsud = ( vmStartUD * ) vUserData ;	565:4:22123:22164	620020	0	True				
ANR	620024	IdentifierDecl	* vsud = ( vmStartUD * ) vUserData		620020	0					
ANR	620025	IdentifierDeclType	vmStartUD *		620020	0					
ANR	620026	Identifier	vsud		620020	1					
ANR	620027	AssignmentExpression	* vsud = ( vmStartUD * ) vUserData		620020	2		=			
ANR	620028	Identifier	vsud		620020	0					
ANR	620029	CastExpression	( vmStartUD * ) vUserData		620020	1					
ANR	620030	CastTarget	vmStartUD *		620020	0					
ANR	620031	Identifier	vUserData		620020	1					
ANR	620032	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""instanceId"" ) == 0 )"		620020	1					
ANR	620033	Condition	"strcasecmp ( ( const char * ) name , ""instanceId"" ) == 0"	566:8:22174:22224	620020	0	True				
ANR	620034	EqualityExpression	"strcasecmp ( ( const char * ) name , ""instanceId"" ) == 0"		620020	0		==			
ANR	620035	CallExpression	"strcasecmp ( ( const char * ) name , ""instanceId"" )"		620020	0					
ANR	620036	Callee	strcasecmp		620020	0					
ANR	620037	Identifier	strcasecmp		620020	0					
ANR	620038	ArgumentList	( const char * ) name		620020	1					
ANR	620039	Argument	( const char * ) name		620020	0					
ANR	620040	CastExpression	( const char * ) name		620020	0					
ANR	620041	CastTarget	const char *		620020	0					
ANR	620042	Identifier	name		620020	1					
ANR	620043	Argument	"""instanceId"""		620020	1					
ANR	620044	PrimaryExpression	"""instanceId"""		620020	0					
ANR	620045	PrimaryExpression	0		620020	1					
ANR	620046	CompoundStatement		3:62:110:110	620020	1					
ANR	620047	ExpressionStatement	vsud -> inInstanceId = false	567:8:22238:22264	620020	0	True				
ANR	620048	AssignmentExpression	vsud -> inInstanceId = false		620020	0		=			
ANR	620049	PtrMemberAccess	vsud -> inInstanceId		620020	0					
ANR	620050	Identifier	vsud		620020	0					
ANR	620051	Identifier	inInstanceId		620020	1					
ANR	620052	Identifier	false		620020	1					
ANR	620053	ReturnType	void		620020	1					
ANR	620054	Identifier	vmStartEEH		620020	2					
ANR	620055	ParameterList	"void * vUserData , const XML_Char * name"		620020	3					
ANR	620056	Parameter	void * vUserData	564:17:22075:22090	620020	0	True				
ANR	620057	ParameterType	void *		620020	0					
ANR	620058	Identifier	vUserData		620020	1					
ANR	620059	Parameter	const XML_Char * name	564:35:22093:22113	620020	1	True				
ANR	620060	ParameterType	const XML_Char *		620020	0					
ANR	620061	Identifier	name		620020	1					
ANR	620062	CFGEntryNode	ENTRY		620020		True				
ANR	620063	CFGExitNode	EXIT		620020		True				
ANR	620064	Symbol	vsud -> inInstanceId		620020						
ANR	620065	Symbol	vUserData		620020						
ANR	620066	Symbol	* vsud		620020						
ANR	620067	Symbol	name		620020						
ANR	620068	Symbol	false		620020						
ANR	620069	Symbol	vsud		620020						
ANR	620070	Symbol	strcasecmp		620020						
ANR	620071	Function	AmazonVMStart :: SendRequest	571:0:22275:23058							
ANR	620072	FunctionDef	AmazonVMStart :: SendRequest ()		620071	0					
ANR	620073	CompoundStatement		571:34:22309:23058	620071	0					
ANR	620074	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	572:4:22315:22357	620071	0	True				
ANR	620075	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		620071	0					
ANR	620076	IdentifierDeclType	bool		620071	0					
ANR	620077	Identifier	result		620071	1					
ANR	620078	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		620071	2		=			
ANR	620079	Identifier	result		620071	0					
ANR	620080	CallExpression	AmazonRequest :: SendRequest ( )		620071	1					
ANR	620081	Callee	AmazonRequest :: SendRequest		620071	0					
ANR	620082	Identifier	AmazonRequest :: SendRequest		620071	0					
ANR	620083	ArgumentList			620071	1					
ANR	620084	IfStatement	if ( result )		620071	1					
ANR	620085	Condition	result	573:9:22368:22373	620071	0	True				
ANR	620086	Identifier	result		620071	0					
ANR	620087	CompoundStatement		5:8:121:161	620071	1					
ANR	620088	IdentifierDeclStatement	vmStartUD vsud ( this -> instanceID ) ;	574:8:22387:22421	620071	0	True				
ANR	620089	IdentifierDecl	vsud ( this -> instanceID )		620071	0					
ANR	620090	IdentifierDeclType	vmStartUD		620071	0					
ANR	620091	Identifier	vsud		620071	1					
ANR	620092	PtrMemberAccess	this -> instanceID		620071	2					
ANR	620093	Identifier	this		620071	0					
ANR	620094	Identifier	instanceID		620071	1					
ANR	620095	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	575:8:22431:22471	620071	1	True				
ANR	620096	IdentifierDecl	xp = XML_ParserCreate ( NULL )		620071	0					
ANR	620097	IdentifierDeclType	XML_Parser		620071	0					
ANR	620098	Identifier	xp		620071	1					
ANR	620099	AssignmentExpression	xp = XML_ParserCreate ( NULL )		620071	2		=			
ANR	620100	Identifier	xp		620071	0					
ANR	620101	CallExpression	XML_ParserCreate ( NULL )		620071	1					
ANR	620102	Callee	XML_ParserCreate		620071	0					
ANR	620103	Identifier	XML_ParserCreate		620071	0					
ANR	620104	ArgumentList	NULL		620071	1					
ANR	620105	Argument	NULL		620071	0					
ANR	620106	Identifier	NULL		620071	0					
ANR	620107	ExpressionStatement	"XML_SetElementHandler ( xp , & vmStartESH , & vmStartEEH )"	576:8:22481:22536	620071	2	True				
ANR	620108	CallExpression	"XML_SetElementHandler ( xp , & vmStartESH , & vmStartEEH )"		620071	0					
ANR	620109	Callee	XML_SetElementHandler		620071	0					
ANR	620110	Identifier	XML_SetElementHandler		620071	0					
ANR	620111	ArgumentList	xp		620071	1					
ANR	620112	Argument	xp		620071	0					
ANR	620113	Identifier	xp		620071	0					
ANR	620114	Argument	& vmStartESH		620071	1					
ANR	620115	UnaryOperationExpression	& vmStartESH		620071	0					
ANR	620116	UnaryOperator	&		620071	0					
ANR	620117	Identifier	vmStartESH		620071	1					
ANR	620118	Argument	& vmStartEEH		620071	2					
ANR	620119	UnaryOperationExpression	& vmStartEEH		620071	0					
ANR	620120	UnaryOperator	&		620071	0					
ANR	620121	Identifier	vmStartEEH		620071	1					
ANR	620122	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & vmStartCDH )"	577:8:22546:22593	620071	3	True				
ANR	620123	CallExpression	"XML_SetCharacterDataHandler ( xp , & vmStartCDH )"		620071	0					
ANR	620124	Callee	XML_SetCharacterDataHandler		620071	0					
ANR	620125	Identifier	XML_SetCharacterDataHandler		620071	0					
ANR	620126	ArgumentList	xp		620071	1					
ANR	620127	Argument	xp		620071	0					
ANR	620128	Identifier	xp		620071	0					
ANR	620129	Argument	& vmStartCDH		620071	1					
ANR	620130	UnaryOperationExpression	& vmStartCDH		620071	0					
ANR	620131	UnaryOperator	&		620071	0					
ANR	620132	Identifier	vmStartCDH		620071	1					
ANR	620133	ExpressionStatement	"XML_SetUserData ( xp , & vsud )"	578:8:22603:22632	620071	4	True				
ANR	620134	CallExpression	"XML_SetUserData ( xp , & vsud )"		620071	0					
ANR	620135	Callee	XML_SetUserData		620071	0					
ANR	620136	Identifier	XML_SetUserData		620071	0					
ANR	620137	ArgumentList	xp		620071	1					
ANR	620138	Argument	xp		620071	0					
ANR	620139	Identifier	xp		620071	0					
ANR	620140	Argument	& vsud		620071	1					
ANR	620141	UnaryOperationExpression	& vsud		620071	0					
ANR	620142	UnaryOperator	&		620071	0					
ANR	620143	Identifier	vsud		620071	1					
ANR	620144	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	579:8:22642:22717	620071	5	True				
ANR	620145	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		620071	0					
ANR	620146	Callee	XML_Parse		620071	0					
ANR	620147	Identifier	XML_Parse		620071	0					
ANR	620148	ArgumentList	xp		620071	1					
ANR	620149	Argument	xp		620071	0					
ANR	620150	Identifier	xp		620071	0					
ANR	620151	Argument	this -> resultString . c_str ( )		620071	1					
ANR	620152	CallExpression	this -> resultString . c_str ( )		620071	0					
ANR	620153	Callee	this -> resultString . c_str		620071	0					
ANR	620154	MemberAccess	this -> resultString . c_str		620071	0					
ANR	620155	PtrMemberAccess	this -> resultString		620071	0					
ANR	620156	Identifier	this		620071	0					
ANR	620157	Identifier	resultString		620071	1					
ANR	620158	Identifier	c_str		620071	1					
ANR	620159	ArgumentList			620071	1					
ANR	620160	Argument	this -> resultString . length ( )		620071	2					
ANR	620161	CallExpression	this -> resultString . length ( )		620071	0					
ANR	620162	Callee	this -> resultString . length		620071	0					
ANR	620163	MemberAccess	this -> resultString . length		620071	0					
ANR	620164	PtrMemberAccess	this -> resultString		620071	0					
ANR	620165	Identifier	this		620071	0					
ANR	620166	Identifier	resultString		620071	1					
ANR	620167	Identifier	length		620071	1					
ANR	620168	ArgumentList			620071	1					
ANR	620169	Argument	1		620071	3					
ANR	620170	PrimaryExpression	1		620071	0					
ANR	620171	ExpressionStatement	XML_ParserFree ( xp )	580:8:22727:22747	620071	6	True				
ANR	620172	CallExpression	XML_ParserFree ( xp )		620071	0					
ANR	620173	Callee	XML_ParserFree		620071	0					
ANR	620174	Identifier	XML_ParserFree		620071	0					
ANR	620175	ArgumentList	xp		620071	1					
ANR	620176	Argument	xp		620071	0					
ANR	620177	Identifier	xp		620071	0					
ANR	620178	ElseStatement	else		620071	0					
ANR	620179	CompoundStatement		11:11:450:450	620071	0					
ANR	620180	IfStatement	"if ( this -> errorCode == ""E_CURL_IO"" )"		620071	0					
ANR	620181	Condition	"this -> errorCode == ""E_CURL_IO"""	582:12:22774:22803	620071	0	True				
ANR	620182	EqualityExpression	"this -> errorCode == ""E_CURL_IO"""		620071	0		==			
ANR	620183	PtrMemberAccess	this -> errorCode		620071	0					
ANR	620184	Identifier	this		620071	0					
ANR	620185	Identifier	errorCode		620071	1					
ANR	620186	PrimaryExpression	"""E_CURL_IO"""		620071	1					
ANR	620187	CompoundStatement		12:45:497:497	620071	1					
ANR	620188	ExpressionStatement	"this -> errorCode = ""NEED_CHECK_VM_START"""	585:12:22955:22994	620071	0	True				
ANR	620189	AssignmentExpression	"this -> errorCode = ""NEED_CHECK_VM_START"""		620071	0		=			
ANR	620190	PtrMemberAccess	this -> errorCode		620071	0					
ANR	620191	Identifier	this		620071	0					
ANR	620192	Identifier	errorCode		620071	1					
ANR	620193	PrimaryExpression	"""NEED_CHECK_VM_START"""		620071	1					
ANR	620194	ReturnStatement	return false ;	586:12:23009:23021	620071	1	True				
ANR	620195	Identifier	false		620071	0					
ANR	620196	ReturnStatement	return result ;	589:4:23043:23056	620071	2	True				
ANR	620197	Identifier	result		620071	0					
ANR	620198	ReturnType	bool		620071	1					
ANR	620199	Identifier	AmazonVMStart :: SendRequest		620071	2					
ANR	620200	ParameterList			620071	3					
ANR	620201	CFGEntryNode	ENTRY		620071		True				
ANR	620202	CFGExitNode	EXIT		620071		True				
ANR	620203	Symbol	& vmStartESH		620071						
ANR	620204	Symbol	NULL		620071						
ANR	620205	Symbol	AmazonRequest :: SendRequest		620071						
ANR	620206	Symbol	this -> resultString		620071						
ANR	620207	Symbol	this -> resultString . length		620071						
ANR	620208	Symbol	this -> resultString . c_str		620071						
ANR	620209	Symbol	this		620071						
ANR	620210	Symbol	false		620071						
ANR	620211	Symbol	this -> errorCode		620071						
ANR	620212	Symbol	result		620071						
ANR	620213	Symbol	* this		620071						
ANR	620214	Symbol	& vsud		620071						
ANR	620215	Symbol	xp		620071						
ANR	620216	Symbol	vsud		620071						
ANR	620217	Symbol	XML_ParserCreate		620071						
ANR	620218	Symbol	& vmStartEEH		620071						
ANR	620219	Symbol	& vmStartCDH		620071						
ANR	620220	Function	AmazonVMStart :: workerFunction	595:0:23297:27284							
ANR	620221	FunctionDef	"AmazonVMStart :: workerFunction (char * * argv , int argc , std :: string & result_string)"		620220	0					
ANR	620222	CompoundStatement		595:86:23383:27284	620220	0					
ANR	620223	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0 )"	596:4:23389:23437	620220	0	True				
ANR	620224	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0 )"		620220	0					
ANR	620225	Callee	assert		620220	0					
ANR	620226	Identifier	assert		620220	0					
ANR	620227	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0"		620220	1					
ANR	620228	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0"		620220	0					
ANR	620229	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0"		620220	0		==			
ANR	620230	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" )"		620220	0					
ANR	620231	Callee	strcmp		620220	0					
ANR	620232	Identifier	strcmp		620220	0					
ANR	620233	ArgumentList	argv [ 0 ]		620220	1					
ANR	620234	Argument	argv [ 0 ]		620220	0					
ANR	620235	ArrayIndexing	argv [ 0 ]		620220	0					
ANR	620236	Identifier	argv		620220	0					
ANR	620237	PrimaryExpression	0		620220	1					
ANR	620238	Argument	"""EC2_VM_START"""		620220	1					
ANR	620239	PrimaryExpression	"""EC2_VM_START"""		620220	0					
ANR	620240	PrimaryExpression	0		620220	1					
ANR	620241	IdentifierDeclStatement	int requestID ;	601:4:23618:23631	620220	1	True				
ANR	620242	IdentifierDecl	requestID		620220	0					
ANR	620243	IdentifierDeclType	int		620220	0					
ANR	620244	Identifier	requestID		620220	1					
ANR	620245	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	602:4:23637:23668	620220	2	True				
ANR	620246	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		620220	0					
ANR	620247	Callee	get_int		620220	0					
ANR	620248	Identifier	get_int		620220	0					
ANR	620249	ArgumentList	argv [ 1 ]		620220	1					
ANR	620250	Argument	argv [ 1 ]		620220	0					
ANR	620251	ArrayIndexing	argv [ 1 ]		620220	0					
ANR	620252	Identifier	argv		620220	0					
ANR	620253	PrimaryExpression	1		620220	1					
ANR	620254	Argument	& requestID		620220	1					
ANR	620255	UnaryOperationExpression	& requestID		620220	0					
ANR	620256	UnaryOperator	&		620220	0					
ANR	620257	Identifier	requestID		620220	1					
ANR	620258	IfStatement	"if ( ! verify_min_number_args ( argc , 10 ) )"		620220	3					
ANR	620259	Condition	"! verify_min_number_args ( argc , 10 )"	604:8:23683:23718	620220	0	True				
ANR	620260	UnaryOperationExpression	"! verify_min_number_args ( argc , 10 )"		620220	0					
ANR	620261	UnaryOperator	!		620220	0					
ANR	620262	CallExpression	"verify_min_number_args ( argc , 10 )"		620220	1					
ANR	620263	Callee	verify_min_number_args		620220	0					
ANR	620264	Identifier	verify_min_number_args		620220	0					
ANR	620265	ArgumentList	argc		620220	1					
ANR	620266	Argument	argc		620220	0					
ANR	620267	Identifier	argc		620220	0					
ANR	620268	Argument	10		620220	1					
ANR	620269	PrimaryExpression	10		620220	0					
ANR	620270	CompoundStatement		10:47:338:338	620220	1					
ANR	620271	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	605:8:23732:23807	620220	0	True				
ANR	620272	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		620220	0		=			
ANR	620273	Identifier	result_string		620220	0					
ANR	620274	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		620220	1					
ANR	620275	Callee	create_failure_result		620220	0					
ANR	620276	Identifier	create_failure_result		620220	0					
ANR	620277	ArgumentList	requestID		620220	1					
ANR	620278	Argument	requestID		620220	0					
ANR	620279	Identifier	requestID		620220	0					
ANR	620280	Argument	"""Wrong_Argument_Number"""		620220	1					
ANR	620281	PrimaryExpression	"""Wrong_Argument_Number"""		620220	0					
ANR	620282	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 10 , argv [ 0 ] )"	606:8:23817:23930	620220	1	True				
ANR	620283	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 10 , argv [ 0 ] )"		620220	0					
ANR	620284	Callee	dprintf		620220	0					
ANR	620285	Identifier	dprintf		620220	0					
ANR	620286	ArgumentList	D_ALWAYS		620220	1					
ANR	620287	Argument	D_ALWAYS		620220	0					
ANR	620288	Identifier	D_ALWAYS		620220	0					
ANR	620289	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		620220	1					
ANR	620290	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		620220	0					
ANR	620291	Argument	argc		620220	2					
ANR	620292	Identifier	argc		620220	0					
ANR	620293	Argument	10		620220	3					
ANR	620294	PrimaryExpression	10		620220	0					
ANR	620295	Argument	argv [ 0 ]		620220	4					
ANR	620296	ArrayIndexing	argv [ 0 ]		620220	0					
ANR	620297	Identifier	argv		620220	0					
ANR	620298	PrimaryExpression	0		620220	1					
ANR	620299	ReturnStatement	return false ;	608:8:23940:23952	620220	2	True				
ANR	620300	Identifier	false		620220	0					
ANR	620301	IdentifierDeclStatement	AmazonVMStart vmStartRequest ;	612:4:24014:24042	620220	4	True				
ANR	620302	IdentifierDecl	vmStartRequest		620220	0					
ANR	620303	IdentifierDeclType	AmazonVMStart		620220	0					
ANR	620304	Identifier	vmStartRequest		620220	1					
ANR	620305	ExpressionStatement	vmStartRequest . serviceURL = argv [ 2 ]	613:4:24048:24083	620220	5	True				
ANR	620306	AssignmentExpression	vmStartRequest . serviceURL = argv [ 2 ]		620220	0		=			
ANR	620307	MemberAccess	vmStartRequest . serviceURL		620220	0					
ANR	620308	Identifier	vmStartRequest		620220	0					
ANR	620309	Identifier	serviceURL		620220	1					
ANR	620310	ArrayIndexing	argv [ 2 ]		620220	1					
ANR	620311	Identifier	argv		620220	0					
ANR	620312	PrimaryExpression	2		620220	1					
ANR	620313	ExpressionStatement	vmStartRequest . accessKeyFile = argv [ 3 ]	614:4:24089:24127	620220	6	True				
ANR	620314	AssignmentExpression	vmStartRequest . accessKeyFile = argv [ 3 ]		620220	0		=			
ANR	620315	MemberAccess	vmStartRequest . accessKeyFile		620220	0					
ANR	620316	Identifier	vmStartRequest		620220	0					
ANR	620317	Identifier	accessKeyFile		620220	1					
ANR	620318	ArrayIndexing	argv [ 3 ]		620220	1					
ANR	620319	Identifier	argv		620220	0					
ANR	620320	PrimaryExpression	3		620220	1					
ANR	620321	ExpressionStatement	vmStartRequest . secretKeyFile = argv [ 4 ]	615:4:24133:24171	620220	7	True				
ANR	620322	AssignmentExpression	vmStartRequest . secretKeyFile = argv [ 4 ]		620220	0		=			
ANR	620323	MemberAccess	vmStartRequest . secretKeyFile		620220	0					
ANR	620324	Identifier	vmStartRequest		620220	0					
ANR	620325	Identifier	secretKeyFile		620220	1					
ANR	620326	ArrayIndexing	argv [ 4 ]		620220	1					
ANR	620327	Identifier	argv		620220	0					
ANR	620328	PrimaryExpression	4		620220	1					
ANR	620329	ExpressionStatement	"vmStartRequest . query_parameters [ ""Action"" ] = ""RunInstances"""	616:4:24177:24237	620220	8	True				
ANR	620330	AssignmentExpression	"vmStartRequest . query_parameters [ ""Action"" ] = ""RunInstances"""		620220	0		=			
ANR	620331	ArrayIndexing	"vmStartRequest . query_parameters [ ""Action"" ]"		620220	0					
ANR	620332	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620333	Identifier	vmStartRequest		620220	0					
ANR	620334	Identifier	query_parameters		620220	1					
ANR	620335	PrimaryExpression	"""Action"""		620220	1					
ANR	620336	PrimaryExpression	"""RunInstances"""		620220	1					
ANR	620337	ExpressionStatement	"vmStartRequest . query_parameters [ ""ImageId"" ] = argv [ 5 ]"	617:4:24243:24297	620220	9	True				
ANR	620338	AssignmentExpression	"vmStartRequest . query_parameters [ ""ImageId"" ] = argv [ 5 ]"		620220	0		=			
ANR	620339	ArrayIndexing	"vmStartRequest . query_parameters [ ""ImageId"" ]"		620220	0					
ANR	620340	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620341	Identifier	vmStartRequest		620220	0					
ANR	620342	Identifier	query_parameters		620220	1					
ANR	620343	PrimaryExpression	"""ImageId"""		620220	1					
ANR	620344	ArrayIndexing	argv [ 5 ]		620220	1					
ANR	620345	Identifier	argv		620220	0					
ANR	620346	PrimaryExpression	5		620220	1					
ANR	620347	ExpressionStatement	"vmStartRequest . query_parameters [ ""MinCount"" ] = ""1"""	618:4:24303:24354	620220	10	True				
ANR	620348	AssignmentExpression	"vmStartRequest . query_parameters [ ""MinCount"" ] = ""1"""		620220	0		=			
ANR	620349	ArrayIndexing	"vmStartRequest . query_parameters [ ""MinCount"" ]"		620220	0					
ANR	620350	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620351	Identifier	vmStartRequest		620220	0					
ANR	620352	Identifier	query_parameters		620220	1					
ANR	620353	PrimaryExpression	"""MinCount"""		620220	1					
ANR	620354	PrimaryExpression	"""1"""		620220	1					
ANR	620355	ExpressionStatement	"vmStartRequest . query_parameters [ ""MaxCount"" ] = ""1"""	619:4:24360:24411	620220	11	True				
ANR	620356	AssignmentExpression	"vmStartRequest . query_parameters [ ""MaxCount"" ] = ""1"""		620220	0		=			
ANR	620357	ArrayIndexing	"vmStartRequest . query_parameters [ ""MaxCount"" ]"		620220	0					
ANR	620358	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620359	Identifier	vmStartRequest		620220	0					
ANR	620360	Identifier	query_parameters		620220	1					
ANR	620361	PrimaryExpression	"""MaxCount"""		620220	1					
ANR	620362	PrimaryExpression	"""1"""		620220	1					
ANR	620363	ExpressionStatement	"vmStartRequest . query_parameters [ ""InstanceInitiatedShutdownBehavior"" ] = ""terminate"""	620:1:24414:24498	620220	12	True				
ANR	620364	AssignmentExpression	"vmStartRequest . query_parameters [ ""InstanceInitiatedShutdownBehavior"" ] = ""terminate"""		620220	0		=			
ANR	620365	ArrayIndexing	"vmStartRequest . query_parameters [ ""InstanceInitiatedShutdownBehavior"" ]"		620220	0					
ANR	620366	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620367	Identifier	vmStartRequest		620220	0					
ANR	620368	Identifier	query_parameters		620220	1					
ANR	620369	PrimaryExpression	"""InstanceInitiatedShutdownBehavior"""		620220	1					
ANR	620370	PrimaryExpression	"""terminate"""		620220	1					
ANR	620371	IfStatement	"if ( strcasecmp ( argv [ 6 ] , NULLSTRING ) )"		620220	13					
ANR	620372	Condition	"strcasecmp ( argv [ 6 ] , NULLSTRING )"	623:8:24549:24581	620220	0	True				
ANR	620373	CallExpression	"strcasecmp ( argv [ 6 ] , NULLSTRING )"		620220	0					
ANR	620374	Callee	strcasecmp		620220	0					
ANR	620375	Identifier	strcasecmp		620220	0					
ANR	620376	ArgumentList	argv [ 6 ]		620220	1					
ANR	620377	Argument	argv [ 6 ]		620220	0					
ANR	620378	ArrayIndexing	argv [ 6 ]		620220	0					
ANR	620379	Identifier	argv		620220	0					
ANR	620380	PrimaryExpression	6		620220	1					
ANR	620381	Argument	NULLSTRING		620220	1					
ANR	620382	Identifier	NULLSTRING		620220	0					
ANR	620383	CompoundStatement		29:44:1201:1201	620220	1					
ANR	620384	ExpressionStatement	"vmStartRequest . query_parameters [ ""KeyName"" ] = argv [ 6 ]"	624:8:24595:24649	620220	0	True				
ANR	620385	AssignmentExpression	"vmStartRequest . query_parameters [ ""KeyName"" ] = argv [ 6 ]"		620220	0		=			
ANR	620386	ArrayIndexing	"vmStartRequest . query_parameters [ ""KeyName"" ]"		620220	0					
ANR	620387	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620388	Identifier	vmStartRequest		620220	0					
ANR	620389	Identifier	query_parameters		620220	1					
ANR	620390	PrimaryExpression	"""KeyName"""		620220	1					
ANR	620391	ArrayIndexing	argv [ 6 ]		620220	1					
ANR	620392	Identifier	argv		620220	0					
ANR	620393	PrimaryExpression	6		620220	1					
ANR	620394	IfStatement	"if ( strcasecmp ( argv [ 9 ] , NULLSTRING ) )"		620220	14					
ANR	620395	Condition	"strcasecmp ( argv [ 9 ] , NULLSTRING )"	627:8:24670:24702	620220	0	True				
ANR	620396	CallExpression	"strcasecmp ( argv [ 9 ] , NULLSTRING )"		620220	0					
ANR	620397	Callee	strcasecmp		620220	0					
ANR	620398	Identifier	strcasecmp		620220	0					
ANR	620399	ArgumentList	argv [ 9 ]		620220	1					
ANR	620400	Argument	argv [ 9 ]		620220	0					
ANR	620401	ArrayIndexing	argv [ 9 ]		620220	0					
ANR	620402	Identifier	argv		620220	0					
ANR	620403	PrimaryExpression	9		620220	1					
ANR	620404	Argument	NULLSTRING		620220	1					
ANR	620405	Identifier	NULLSTRING		620220	0					
ANR	620406	CompoundStatement		33:44:1322:1322	620220	1					
ANR	620407	ExpressionStatement	"vmStartRequest . query_parameters [ ""InstanceType"" ] = argv [ 9 ]"	628:8:24716:24775	620220	0	True				
ANR	620408	AssignmentExpression	"vmStartRequest . query_parameters [ ""InstanceType"" ] = argv [ 9 ]"		620220	0		=			
ANR	620409	ArrayIndexing	"vmStartRequest . query_parameters [ ""InstanceType"" ]"		620220	0					
ANR	620410	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620411	Identifier	vmStartRequest		620220	0					
ANR	620412	Identifier	query_parameters		620220	1					
ANR	620413	PrimaryExpression	"""InstanceType"""		620220	1					
ANR	620414	ArrayIndexing	argv [ 9 ]		620220	1					
ANR	620415	Identifier	argv		620220	0					
ANR	620416	PrimaryExpression	9		620220	1					
ANR	620417	IfStatement	"if ( strcasecmp ( argv [ 10 ] , NULLSTRING ) )"		620220	15					
ANR	620418	Condition	"strcasecmp ( argv [ 10 ] , NULLSTRING )"	631:8:24796:24829	620220	0	True				
ANR	620419	CallExpression	"strcasecmp ( argv [ 10 ] , NULLSTRING )"		620220	0					
ANR	620420	Callee	strcasecmp		620220	0					
ANR	620421	Identifier	strcasecmp		620220	0					
ANR	620422	ArgumentList	argv [ 10 ]		620220	1					
ANR	620423	Argument	argv [ 10 ]		620220	0					
ANR	620424	ArrayIndexing	argv [ 10 ]		620220	0					
ANR	620425	Identifier	argv		620220	0					
ANR	620426	PrimaryExpression	10		620220	1					
ANR	620427	Argument	NULLSTRING		620220	1					
ANR	620428	Identifier	NULLSTRING		620220	0					
ANR	620429	CompoundStatement		37:45:1449:1449	620220	1					
ANR	620430	ExpressionStatement	"vmStartRequest . query_parameters [ ""Placement.AvailabilityZone"" ] = argv [ 10 ]"	632:8:24843:24917	620220	0	True				
ANR	620431	AssignmentExpression	"vmStartRequest . query_parameters [ ""Placement.AvailabilityZone"" ] = argv [ 10 ]"		620220	0		=			
ANR	620432	ArrayIndexing	"vmStartRequest . query_parameters [ ""Placement.AvailabilityZone"" ]"		620220	0					
ANR	620433	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620434	Identifier	vmStartRequest		620220	0					
ANR	620435	Identifier	query_parameters		620220	1					
ANR	620436	PrimaryExpression	"""Placement.AvailabilityZone"""		620220	1					
ANR	620437	ArrayIndexing	argv [ 10 ]		620220	1					
ANR	620438	Identifier	argv		620220	0					
ANR	620439	PrimaryExpression	10		620220	1					
ANR	620440	IfStatement	"if ( strcasecmp ( argv [ 11 ] , NULLSTRING ) )"		620220	16					
ANR	620441	Condition	"strcasecmp ( argv [ 11 ] , NULLSTRING )"	635:8:24938:24971	620220	0	True				
ANR	620442	CallExpression	"strcasecmp ( argv [ 11 ] , NULLSTRING )"		620220	0					
ANR	620443	Callee	strcasecmp		620220	0					
ANR	620444	Identifier	strcasecmp		620220	0					
ANR	620445	ArgumentList	argv [ 11 ]		620220	1					
ANR	620446	Argument	argv [ 11 ]		620220	0					
ANR	620447	ArrayIndexing	argv [ 11 ]		620220	0					
ANR	620448	Identifier	argv		620220	0					
ANR	620449	PrimaryExpression	11		620220	1					
ANR	620450	Argument	NULLSTRING		620220	1					
ANR	620451	Identifier	NULLSTRING		620220	0					
ANR	620452	CompoundStatement		41:45:1591:1591	620220	1					
ANR	620453	ExpressionStatement	"vmStartRequest . query_parameters [ ""SubnetId"" ] = argv [ 11 ]"	636:8:24985:25041	620220	0	True				
ANR	620454	AssignmentExpression	"vmStartRequest . query_parameters [ ""SubnetId"" ] = argv [ 11 ]"		620220	0		=			
ANR	620455	ArrayIndexing	"vmStartRequest . query_parameters [ ""SubnetId"" ]"		620220	0					
ANR	620456	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620457	Identifier	vmStartRequest		620220	0					
ANR	620458	Identifier	query_parameters		620220	1					
ANR	620459	PrimaryExpression	"""SubnetId"""		620220	1					
ANR	620460	ArrayIndexing	argv [ 11 ]		620220	1					
ANR	620461	Identifier	argv		620220	0					
ANR	620462	PrimaryExpression	11		620220	1					
ANR	620463	IfStatement	"if ( strcasecmp ( argv [ 12 ] , NULLSTRING ) )"		620220	17					
ANR	620464	Condition	"strcasecmp ( argv [ 12 ] , NULLSTRING )"	639:8:25062:25095	620220	0	True				
ANR	620465	CallExpression	"strcasecmp ( argv [ 12 ] , NULLSTRING )"		620220	0					
ANR	620466	Callee	strcasecmp		620220	0					
ANR	620467	Identifier	strcasecmp		620220	0					
ANR	620468	ArgumentList	argv [ 12 ]		620220	1					
ANR	620469	Argument	argv [ 12 ]		620220	0					
ANR	620470	ArrayIndexing	argv [ 12 ]		620220	0					
ANR	620471	Identifier	argv		620220	0					
ANR	620472	PrimaryExpression	12		620220	1					
ANR	620473	Argument	NULLSTRING		620220	1					
ANR	620474	Identifier	NULLSTRING		620220	0					
ANR	620475	CompoundStatement		45:45:1715:1715	620220	1					
ANR	620476	ExpressionStatement	"vmStartRequest . query_parameters [ ""PrivateIpAddress"" ] = argv [ 12 ]"	640:8:25109:25173	620220	0	True				
ANR	620477	AssignmentExpression	"vmStartRequest . query_parameters [ ""PrivateIpAddress"" ] = argv [ 12 ]"		620220	0		=			
ANR	620478	ArrayIndexing	"vmStartRequest . query_parameters [ ""PrivateIpAddress"" ]"		620220	0					
ANR	620479	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620480	Identifier	vmStartRequest		620220	0					
ANR	620481	Identifier	query_parameters		620220	1					
ANR	620482	PrimaryExpression	"""PrivateIpAddress"""		620220	1					
ANR	620483	ArrayIndexing	argv [ 12 ]		620220	1					
ANR	620484	Identifier	argv		620220	0					
ANR	620485	PrimaryExpression	12		620220	1					
ANR	620486	ForStatement	for ( int i = 13 ; i < argc ; ++ i )		620220	18					
ANR	620487	ForInit	int i = 13 ;	643:9:25191:25201	620220	0	True				
ANR	620488	IdentifierDeclStatement	int i = 13 ;		620220	0					
ANR	620489	IdentifierDecl	i = 13		620220	0					
ANR	620490	IdentifierDeclType	int		620220	0					
ANR	620491	Identifier	i		620220	1					
ANR	620492	AssignmentExpression	i = 13		620220	2		=			
ANR	620493	Identifier	i		620220	0					
ANR	620494	PrimaryExpression	13		620220	1					
ANR	620495	Condition	i < argc	643:21:25203:25210	620220	1	True				
ANR	620496	RelationalExpression	i < argc		620220	0		<			
ANR	620497	Identifier	i		620220	0					
ANR	620498	Identifier	argc		620220	1					
ANR	620499	UnaryExpression	++ i	643:31:25213:25215	620220	2	True				
ANR	620500	IncDec	++		620220	0					
ANR	620501	Identifier	i		620220	1					
ANR	620502	CompoundStatement		50:8:1845:1873	620220	3					
ANR	620503	IdentifierDeclStatement	std :: ostringstream groupName ;	644:8:25229:25257	620220	0	True				
ANR	620504	IdentifierDecl	groupName		620220	0					
ANR	620505	IdentifierDeclType	std :: ostringstream		620220	0					
ANR	620506	Identifier	groupName		620220	1					
ANR	620507	ExpressionStatement	"groupName << ""SecurityGroup."" << ( i - 13 + 1 )"	645:8:25267:25314	620220	1	True				
ANR	620508	ShiftExpression	"groupName << ""SecurityGroup."" << ( i - 13 + 1 )"		620220	0		<<			
ANR	620509	Identifier	groupName		620220	0					
ANR	620510	ShiftExpression	"""SecurityGroup."" << ( i - 13 + 1 )"		620220	1		<<			
ANR	620511	PrimaryExpression	"""SecurityGroup."""		620220	0					
ANR	620512	AdditiveExpression	i - 13 + 1		620220	1		-			
ANR	620513	Identifier	i		620220	0					
ANR	620514	AdditiveExpression	13 + 1		620220	1		+			
ANR	620515	PrimaryExpression	13		620220	0					
ANR	620516	PrimaryExpression	1		620220	1					
ANR	620517	ExpressionStatement	vmStartRequest . query_parameters [ groupName . str ( ) ] = argv [ i ]	646:8:25324:25386	620220	2	True				
ANR	620518	AssignmentExpression	vmStartRequest . query_parameters [ groupName . str ( ) ] = argv [ i ]		620220	0		=			
ANR	620519	ArrayIndexing	vmStartRequest . query_parameters [ groupName . str ( ) ]		620220	0					
ANR	620520	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620521	Identifier	vmStartRequest		620220	0					
ANR	620522	Identifier	query_parameters		620220	1					
ANR	620523	CallExpression	groupName . str ( )		620220	1					
ANR	620524	Callee	groupName . str		620220	0					
ANR	620525	MemberAccess	groupName . str		620220	0					
ANR	620526	Identifier	groupName		620220	0					
ANR	620527	Identifier	str		620220	1					
ANR	620528	ArgumentList			620220	1					
ANR	620529	ArrayIndexing	argv [ i ]		620220	1					
ANR	620530	Identifier	argv		620220	0					
ANR	620531	Identifier	i		620220	1					
ANR	620532	IdentifierDeclStatement	std :: string buffer ;	652:4:25442:25460	620220	19	True				
ANR	620533	IdentifierDecl	buffer		620220	0					
ANR	620534	IdentifierDeclType	std :: string		620220	0					
ANR	620535	Identifier	buffer		620220	1					
ANR	620536	IfStatement	"if ( strcasecmp ( argv [ 7 ] , NULLSTRING ) )"		620220	20					
ANR	620537	Condition	"strcasecmp ( argv [ 7 ] , NULLSTRING )"	653:8:25470:25502	620220	0	True				
ANR	620538	CallExpression	"strcasecmp ( argv [ 7 ] , NULLSTRING )"		620220	0					
ANR	620539	Callee	strcasecmp		620220	0					
ANR	620540	Identifier	strcasecmp		620220	0					
ANR	620541	ArgumentList	argv [ 7 ]		620220	1					
ANR	620542	Argument	argv [ 7 ]		620220	0					
ANR	620543	ArrayIndexing	argv [ 7 ]		620220	0					
ANR	620544	Identifier	argv		620220	0					
ANR	620545	PrimaryExpression	7		620220	1					
ANR	620546	Argument	NULLSTRING		620220	1					
ANR	620547	Identifier	NULLSTRING		620220	0					
ANR	620548	CompoundStatement		59:44:2122:2122	620220	1					
ANR	620549	ExpressionStatement	buffer = argv [ 7 ]	654:8:25516:25532	620220	0	True				
ANR	620550	AssignmentExpression	buffer = argv [ 7 ]		620220	0		=			
ANR	620551	Identifier	buffer		620220	0					
ANR	620552	ArrayIndexing	argv [ 7 ]		620220	1					
ANR	620553	Identifier	argv		620220	0					
ANR	620554	PrimaryExpression	7		620220	1					
ANR	620555	IfStatement	"if ( strcasecmp ( argv [ 8 ] , NULLSTRING ) )"		620220	21					
ANR	620556	Condition	"strcasecmp ( argv [ 8 ] , NULLSTRING )"	656:8:25548:25580	620220	0	True				
ANR	620557	CallExpression	"strcasecmp ( argv [ 8 ] , NULLSTRING )"		620220	0					
ANR	620558	Callee	strcasecmp		620220	0					
ANR	620559	Identifier	strcasecmp		620220	0					
ANR	620560	ArgumentList	argv [ 8 ]		620220	1					
ANR	620561	Argument	argv [ 8 ]		620220	0					
ANR	620562	ArrayIndexing	argv [ 8 ]		620220	0					
ANR	620563	Identifier	argv		620220	0					
ANR	620564	PrimaryExpression	8		620220	1					
ANR	620565	Argument	NULLSTRING		620220	1					
ANR	620566	Identifier	NULLSTRING		620220	0					
ANR	620567	CompoundStatement		64:8:2252:2278	620220	1					
ANR	620568	IdentifierDeclStatement	std :: string udFileName = argv [ 8 ] ;	657:8:25594:25626	620220	0	True				
ANR	620569	IdentifierDecl	udFileName = argv [ 8 ]		620220	0					
ANR	620570	IdentifierDeclType	std :: string		620220	0					
ANR	620571	Identifier	udFileName		620220	1					
ANR	620572	AssignmentExpression	udFileName = argv [ 8 ]		620220	2		=			
ANR	620573	Identifier	udFileName		620220	0					
ANR	620574	ArrayIndexing	argv [ 8 ]		620220	1					
ANR	620575	Identifier	argv		620220	0					
ANR	620576	PrimaryExpression	8		620220	1					
ANR	620577	IdentifierDeclStatement	std :: string udFileContents ;	658:8:25636:25662	620220	1	True				
ANR	620578	IdentifierDecl	udFileContents		620220	0					
ANR	620579	IdentifierDeclType	std :: string		620220	0					
ANR	620580	Identifier	udFileContents		620220	1					
ANR	620581	IfStatement	"if ( ! readShortFile ( udFileName , udFileContents ) )"		620220	2					
ANR	620582	Condition	"! readShortFile ( udFileName , udFileContents )"	659:12:25676:25720	620220	0	True				
ANR	620583	UnaryOperationExpression	"! readShortFile ( udFileName , udFileContents )"		620220	0					
ANR	620584	UnaryOperator	!		620220	0					
ANR	620585	CallExpression	"readShortFile ( udFileName , udFileContents )"		620220	1					
ANR	620586	Callee	readShortFile		620220	0					
ANR	620587	Identifier	readShortFile		620220	0					
ANR	620588	ArgumentList	udFileName		620220	1					
ANR	620589	Argument	udFileName		620220	0					
ANR	620590	Identifier	udFileName		620220	0					
ANR	620591	Argument	udFileContents		620220	1					
ANR	620592	Identifier	udFileContents		620220	0					
ANR	620593	CompoundStatement		65:60:2340:2340	620220	1					
ANR	620594	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Failed to read userdata file."" , ""E_FILE_IO"" )"	660:12:25738:25834	620220	0	True				
ANR	620595	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Failed to read userdata file."" , ""E_FILE_IO"" )"		620220	0		=			
ANR	620596	Identifier	result_string		620220	0					
ANR	620597	CallExpression	"create_failure_result ( requestID , ""Failed to read userdata file."" , ""E_FILE_IO"" )"		620220	1					
ANR	620598	Callee	create_failure_result		620220	0					
ANR	620599	Identifier	create_failure_result		620220	0					
ANR	620600	ArgumentList	requestID		620220	1					
ANR	620601	Argument	requestID		620220	0					
ANR	620602	Identifier	requestID		620220	0					
ANR	620603	Argument	"""Failed to read userdata file."""		620220	1					
ANR	620604	PrimaryExpression	"""Failed to read userdata file."""		620220	0					
ANR	620605	Argument	"""E_FILE_IO"""		620220	2					
ANR	620606	PrimaryExpression	"""E_FILE_IO"""		620220	0					
ANR	620607	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read userdata file '%s'.\\n"" , udFileName . c_str ( ) )"	661:12:25848:25927	620220	1	True				
ANR	620608	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read userdata file '%s'.\\n"" , udFileName . c_str ( ) )"		620220	0					
ANR	620609	Callee	dprintf		620220	0					
ANR	620610	Identifier	dprintf		620220	0					
ANR	620611	ArgumentList	D_ALWAYS		620220	1					
ANR	620612	Argument	D_ALWAYS		620220	0					
ANR	620613	Identifier	D_ALWAYS		620220	0					
ANR	620614	Argument	"""Failed to read userdata file '%s'.\\n"""		620220	1					
ANR	620615	PrimaryExpression	"""Failed to read userdata file '%s'.\\n"""		620220	0					
ANR	620616	Argument	udFileName . c_str ( )		620220	2					
ANR	620617	CallExpression	udFileName . c_str ( )		620220	0					
ANR	620618	Callee	udFileName . c_str		620220	0					
ANR	620619	MemberAccess	udFileName . c_str		620220	0					
ANR	620620	Identifier	udFileName		620220	0					
ANR	620621	Identifier	c_str		620220	1					
ANR	620622	ArgumentList			620220	1					
ANR	620623	ReturnStatement	return false ;	662:12:25941:25953	620220	2	True				
ANR	620624	Identifier	false		620220	0					
ANR	620625	ExpressionStatement	buffer += udFileContents	664:8:25977:26001	620220	3	True				
ANR	620626	AssignmentExpression	buffer += udFileContents		620220	0		+=			
ANR	620627	Identifier	buffer		620220	0					
ANR	620628	Identifier	udFileContents		620220	1					
ANR	620629	IfStatement	if ( ! buffer . empty ( ) )		620220	22					
ANR	620630	Condition	! buffer . empty ( )	666:8:26029:26044	620220	0	True				
ANR	620631	UnaryOperationExpression	! buffer . empty ( )		620220	0					
ANR	620632	UnaryOperator	!		620220	0					
ANR	620633	CallExpression	buffer . empty ( )		620220	1					
ANR	620634	Callee	buffer . empty		620220	0					
ANR	620635	MemberAccess	buffer . empty		620220	0					
ANR	620636	Identifier	buffer		620220	0					
ANR	620637	Identifier	empty		620220	1					
ANR	620638	ArgumentList			620220	1					
ANR	620639	CompoundStatement		73:8:2674:2775	620220	1					
ANR	620640	IdentifierDeclStatement	"char * base64Encoded = condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) ) ;"	667:8:26058:26159	620220	0	True				
ANR	620641	IdentifierDecl	"* base64Encoded = condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) )"		620220	0					
ANR	620642	IdentifierDeclType	char *		620220	0					
ANR	620643	Identifier	base64Encoded		620220	1					
ANR	620644	AssignmentExpression	"* base64Encoded = condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) )"		620220	2		=			
ANR	620645	Identifier	base64Encoded		620220	0					
ANR	620646	CallExpression	"condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) )"		620220	1					
ANR	620647	Callee	condor_base64_encode		620220	0					
ANR	620648	Identifier	condor_base64_encode		620220	0					
ANR	620649	ArgumentList	( const unsigned char * ) buffer . c_str ( )		620220	1					
ANR	620650	Argument	( const unsigned char * ) buffer . c_str ( )		620220	0					
ANR	620651	CastExpression	( const unsigned char * ) buffer . c_str ( )		620220	0					
ANR	620652	CastTarget	const unsigned char *		620220	0					
ANR	620653	CallExpression	buffer . c_str ( )		620220	1					
ANR	620654	Callee	buffer . c_str		620220	0					
ANR	620655	MemberAccess	buffer . c_str		620220	0					
ANR	620656	Identifier	buffer		620220	0					
ANR	620657	Identifier	c_str		620220	1					
ANR	620658	ArgumentList			620220	1					
ANR	620659	Argument	buffer . length ( )		620220	1					
ANR	620660	CallExpression	buffer . length ( )		620220	0					
ANR	620661	Callee	buffer . length		620220	0					
ANR	620662	MemberAccess	buffer . length		620220	0					
ANR	620663	Identifier	buffer		620220	0					
ANR	620664	Identifier	length		620220	1					
ANR	620665	ArgumentList			620220	1					
ANR	620666	ExpressionStatement	"vmStartRequest . query_parameters [ ""UserData"" ] = base64Encoded"	668:8:26169:26230	620220	1	True				
ANR	620667	AssignmentExpression	"vmStartRequest . query_parameters [ ""UserData"" ] = base64Encoded"		620220	0		=			
ANR	620668	ArrayIndexing	"vmStartRequest . query_parameters [ ""UserData"" ]"		620220	0					
ANR	620669	MemberAccess	vmStartRequest . query_parameters		620220	0					
ANR	620670	Identifier	vmStartRequest		620220	0					
ANR	620671	Identifier	query_parameters		620220	1					
ANR	620672	PrimaryExpression	"""UserData"""		620220	1					
ANR	620673	Identifier	base64Encoded		620220	1					
ANR	620674	ExpressionStatement	free ( base64Encoded )	669:8:26240:26261	620220	2	True				
ANR	620675	CallExpression	free ( base64Encoded )		620220	0					
ANR	620676	Callee	free		620220	0					
ANR	620677	Identifier	free		620220	0					
ANR	620678	ArgumentList	base64Encoded		620220	1					
ANR	620679	Argument	base64Encoded		620220	0					
ANR	620680	Identifier	base64Encoded		620220	0					
ANR	620681	IfStatement	if ( ! vmStartRequest . SendRequest ( ) )		620220	23					
ANR	620682	Condition	! vmStartRequest . SendRequest ( )	673:8:26307:26336	620220	0	True				
ANR	620683	UnaryOperationExpression	! vmStartRequest . SendRequest ( )		620220	0					
ANR	620684	UnaryOperator	!		620220	0					
ANR	620685	CallExpression	vmStartRequest . SendRequest ( )		620220	1					
ANR	620686	Callee	vmStartRequest . SendRequest		620220	0					
ANR	620687	MemberAccess	vmStartRequest . SendRequest		620220	0					
ANR	620688	Identifier	vmStartRequest		620220	0					
ANR	620689	Identifier	SendRequest		620220	1					
ANR	620690	ArgumentList			620220	1					
ANR	620691	CompoundStatement		79:41:2956:2956	620220	1					
ANR	620692	ExpressionStatement	"result_string = create_failure_result ( requestID , vmStartRequest . errorMessage . c_str ( ) , vmStartRequest . errorCode . c_str ( ) )"	674:8:26350:26495	620220	0	True				
ANR	620693	AssignmentExpression	"result_string = create_failure_result ( requestID , vmStartRequest . errorMessage . c_str ( ) , vmStartRequest . errorCode . c_str ( ) )"		620220	0		=			
ANR	620694	Identifier	result_string		620220	0					
ANR	620695	CallExpression	"create_failure_result ( requestID , vmStartRequest . errorMessage . c_str ( ) , vmStartRequest . errorCode . c_str ( ) )"		620220	1					
ANR	620696	Callee	create_failure_result		620220	0					
ANR	620697	Identifier	create_failure_result		620220	0					
ANR	620698	ArgumentList	requestID		620220	1					
ANR	620699	Argument	requestID		620220	0					
ANR	620700	Identifier	requestID		620220	0					
ANR	620701	Argument	vmStartRequest . errorMessage . c_str ( )		620220	1					
ANR	620702	CallExpression	vmStartRequest . errorMessage . c_str ( )		620220	0					
ANR	620703	Callee	vmStartRequest . errorMessage . c_str		620220	0					
ANR	620704	MemberAccess	vmStartRequest . errorMessage . c_str		620220	0					
ANR	620705	MemberAccess	vmStartRequest . errorMessage		620220	0					
ANR	620706	Identifier	vmStartRequest		620220	0					
ANR	620707	Identifier	errorMessage		620220	1					
ANR	620708	Identifier	c_str		620220	1					
ANR	620709	ArgumentList			620220	1					
ANR	620710	Argument	vmStartRequest . errorCode . c_str ( )		620220	2					
ANR	620711	CallExpression	vmStartRequest . errorCode . c_str ( )		620220	0					
ANR	620712	Callee	vmStartRequest . errorCode . c_str		620220	0					
ANR	620713	MemberAccess	vmStartRequest . errorCode . c_str		620220	0					
ANR	620714	MemberAccess	vmStartRequest . errorCode		620220	0					
ANR	620715	Identifier	vmStartRequest		620220	0					
ANR	620716	Identifier	errorCode		620220	1					
ANR	620717	Identifier	c_str		620220	1					
ANR	620718	ArgumentList			620220	1					
ANR	620719	ElseStatement	else		620220	0					
ANR	620720	CompoundStatement		83:11:3124:3124	620220	0					
ANR	620721	IfStatement	if ( vmStartRequest . instanceID . empty ( ) )		620220	0					
ANR	620722	Condition	vmStartRequest . instanceID . empty ( )	678:12:26522:26554	620220	0	True				
ANR	620723	CallExpression	vmStartRequest . instanceID . empty ( )		620220	0					
ANR	620724	Callee	vmStartRequest . instanceID . empty		620220	0					
ANR	620725	MemberAccess	vmStartRequest . instanceID . empty		620220	0					
ANR	620726	MemberAccess	vmStartRequest . instanceID		620220	0					
ANR	620727	Identifier	vmStartRequest		620220	0					
ANR	620728	Identifier	instanceID		620220	1					
ANR	620729	Identifier	empty		620220	1					
ANR	620730	ArgumentList			620220	1					
ANR	620731	CompoundStatement		84:48:3174:3174	620220	1					
ANR	620732	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"" )"	679:12:26572:26686	620220	0	True				
ANR	620733	CallExpression	"dprintf ( D_ALWAYS , ""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"" )"		620220	0					
ANR	620734	Callee	dprintf		620220	0					
ANR	620735	Identifier	dprintf		620220	0					
ANR	620736	ArgumentList	D_ALWAYS		620220	1					
ANR	620737	Argument	D_ALWAYS		620220	0					
ANR	620738	Identifier	D_ALWAYS		620220	0					
ANR	620739	Argument	"""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"""		620220	1					
ANR	620740	PrimaryExpression	"""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"""		620220	0					
ANR	620741	ExpressionStatement	"dprintf ( D_ALWAYS , ""-- RESPONSE BEGINS --\\n"" )"	680:12:26700:26746	620220	1	True				
ANR	620742	CallExpression	"dprintf ( D_ALWAYS , ""-- RESPONSE BEGINS --\\n"" )"		620220	0					
ANR	620743	Callee	dprintf		620220	0					
ANR	620744	Identifier	dprintf		620220	0					
ANR	620745	ArgumentList	D_ALWAYS		620220	1					
ANR	620746	Argument	D_ALWAYS		620220	0					
ANR	620747	Identifier	D_ALWAYS		620220	0					
ANR	620748	Argument	"""-- RESPONSE BEGINS --\\n"""		620220	1					
ANR	620749	PrimaryExpression	"""-- RESPONSE BEGINS --\\n"""		620220	0					
ANR	620750	ExpressionStatement	"dprintf ( D_ALWAYS , vmStartRequest . resultString . c_str ( ) )"	681:12:26760:26816	620220	2	True				
ANR	620751	CallExpression	"dprintf ( D_ALWAYS , vmStartRequest . resultString . c_str ( ) )"		620220	0					
ANR	620752	Callee	dprintf		620220	0					
ANR	620753	Identifier	dprintf		620220	0					
ANR	620754	ArgumentList	D_ALWAYS		620220	1					
ANR	620755	Argument	D_ALWAYS		620220	0					
ANR	620756	Identifier	D_ALWAYS		620220	0					
ANR	620757	Argument	vmStartRequest . resultString . c_str ( )		620220	1					
ANR	620758	CallExpression	vmStartRequest . resultString . c_str ( )		620220	0					
ANR	620759	Callee	vmStartRequest . resultString . c_str		620220	0					
ANR	620760	MemberAccess	vmStartRequest . resultString . c_str		620220	0					
ANR	620761	MemberAccess	vmStartRequest . resultString		620220	0					
ANR	620762	Identifier	vmStartRequest		620220	0					
ANR	620763	Identifier	resultString		620220	1					
ANR	620764	Identifier	c_str		620220	1					
ANR	620765	ArgumentList			620220	1					
ANR	620766	ExpressionStatement	"dprintf ( D_ALWAYS , ""-- RESPONSE ENDS --\\n"" )"	682:12:26830:26874	620220	3	True				
ANR	620767	CallExpression	"dprintf ( D_ALWAYS , ""-- RESPONSE ENDS --\\n"" )"		620220	0					
ANR	620768	Callee	dprintf		620220	0					
ANR	620769	Identifier	dprintf		620220	0					
ANR	620770	ArgumentList	D_ALWAYS		620220	1					
ANR	620771	Argument	D_ALWAYS		620220	0					
ANR	620772	Identifier	D_ALWAYS		620220	0					
ANR	620773	Argument	"""-- RESPONSE ENDS --\\n"""		620220	1					
ANR	620774	PrimaryExpression	"""-- RESPONSE ENDS --\\n"""		620220	0					
ANR	620775	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."" , ""E_NO_INSTANCE_ID"" )"	683:12:26888:27050	620220	4	True				
ANR	620776	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."" , ""E_NO_INSTANCE_ID"" )"		620220	0		=			
ANR	620777	Identifier	result_string		620220	0					
ANR	620778	CallExpression	"create_failure_result ( requestID , ""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."" , ""E_NO_INSTANCE_ID"" )"		620220	1					
ANR	620779	Callee	create_failure_result		620220	0					
ANR	620780	Identifier	create_failure_result		620220	0					
ANR	620781	ArgumentList	requestID		620220	1					
ANR	620782	Argument	requestID		620220	0					
ANR	620783	Identifier	requestID		620220	0					
ANR	620784	Argument	"""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."""		620220	1					
ANR	620785	PrimaryExpression	"""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."""		620220	0					
ANR	620786	Argument	"""E_NO_INSTANCE_ID"""		620220	2					
ANR	620787	PrimaryExpression	"""E_NO_INSTANCE_ID"""		620220	0					
ANR	620788	ElseStatement	else		620220	0					
ANR	620789	CompoundStatement		91:12:3697:3718	620220	0					
ANR	620790	IdentifierDeclStatement	StringList resultList ;	685:12:27081:27102	620220	0	True				
ANR	620791	IdentifierDecl	resultList		620220	0					
ANR	620792	IdentifierDeclType	StringList		620220	0					
ANR	620793	Identifier	resultList		620220	1					
ANR	620794	ExpressionStatement	resultList . append ( vmStartRequest . instanceID . c_str ( ) )	686:12:27116:27170	620220	1	True				
ANR	620795	CallExpression	resultList . append ( vmStartRequest . instanceID . c_str ( ) )		620220	0					
ANR	620796	Callee	resultList . append		620220	0					
ANR	620797	MemberAccess	resultList . append		620220	0					
ANR	620798	Identifier	resultList		620220	0					
ANR	620799	Identifier	append		620220	1					
ANR	620800	ArgumentList	vmStartRequest . instanceID . c_str ( )		620220	1					
ANR	620801	Argument	vmStartRequest . instanceID . c_str ( )		620220	0					
ANR	620802	CallExpression	vmStartRequest . instanceID . c_str ( )		620220	0					
ANR	620803	Callee	vmStartRequest . instanceID . c_str		620220	0					
ANR	620804	MemberAccess	vmStartRequest . instanceID . c_str		620220	0					
ANR	620805	MemberAccess	vmStartRequest . instanceID		620220	0					
ANR	620806	Identifier	vmStartRequest		620220	0					
ANR	620807	Identifier	instanceID		620220	1					
ANR	620808	Identifier	c_str		620220	1					
ANR	620809	ArgumentList			620220	1					
ANR	620810	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	687:12:27184:27248	620220	2	True				
ANR	620811	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		620220	0		=			
ANR	620812	Identifier	result_string		620220	0					
ANR	620813	CallExpression	"create_success_result ( requestID , & resultList )"		620220	1					
ANR	620814	Callee	create_success_result		620220	0					
ANR	620815	Identifier	create_success_result		620220	0					
ANR	620816	ArgumentList	requestID		620220	1					
ANR	620817	Argument	requestID		620220	0					
ANR	620818	Identifier	requestID		620220	0					
ANR	620819	Argument	& resultList		620220	1					
ANR	620820	UnaryOperationExpression	& resultList		620220	0					
ANR	620821	UnaryOperator	&		620220	0					
ANR	620822	Identifier	resultList		620220	1					
ANR	620823	ReturnStatement	return true ;	691:4:27271:27282	620220	24	True				
ANR	620824	Identifier	true		620220	0					
ANR	620825	ReturnType	bool		620220	1					
ANR	620826	Identifier	AmazonVMStart :: workerFunction		620220	2					
ANR	620827	ParameterList	"char * * argv , int argc , std :: string & result_string"		620220	3					
ANR	620828	Parameter	char * * argv	595:35:23332:23342	620220	0	True				
ANR	620829	ParameterType	char * *		620220	0					
ANR	620830	Identifier	argv		620220	1					
ANR	620831	Parameter	int argc	595:48:23345:23352	620220	1	True				
ANR	620832	ParameterType	int		620220	0					
ANR	620833	Identifier	argc		620220	1					
ANR	620834	Parameter	std :: string & result_string	595:58:23355:23380	620220	2	True				
ANR	620835	ParameterType	std :: string &		620220	0					
ANR	620836	Identifier	result_string		620220	1					
ANR	620837	CFGEntryNode	ENTRY		620220		True				
ANR	620838	CFGExitNode	EXIT		620220		True				
ANR	620839	Symbol	* argv		620220						
ANR	620840	Symbol	& requestID		620220						
ANR	620841	Symbol	vmStartRequest . errorCode . c_str		620220						
ANR	620842	Symbol	create_success_result		620220						
ANR	620843	Symbol	udFileContents		620220						
ANR	620844	Symbol	groupName . str		620220						
ANR	620845	Symbol	udFileName		620220						
ANR	620846	Symbol	result_string		620220						
ANR	620847	Symbol	vmStartRequest . serviceURL		620220						
ANR	620848	Symbol	buffer		620220						
ANR	620849	Symbol	strcasecmp		620220						
ANR	620850	Symbol	strcmp		620220						
ANR	620851	Symbol	vmStartRequest . accessKeyFile		620220						
ANR	620852	Symbol	vmStartRequest . secretKeyFile		620220						
ANR	620853	Symbol	* vmStartRequest		620220						
ANR	620854	Symbol	groupName		620220						
ANR	620855	Symbol	requestID		620220						
ANR	620856	Symbol	create_failure_result		620220						
ANR	620857	Symbol	* groupName . str		620220						
ANR	620858	Symbol	true		620220						
ANR	620859	Symbol	resultList		620220						
ANR	620860	Symbol	vmStartRequest . instanceID . c_str		620220						
ANR	620861	Symbol	vmStartRequest		620220						
ANR	620862	Symbol	vmStartRequest . resultString . c_str		620220						
ANR	620863	Symbol	argv		620220						
ANR	620864	Symbol	& resultList		620220						
ANR	620865	Symbol	buffer . length		620220						
ANR	620866	Symbol	vmStartRequest . instanceID . empty		620220						
ANR	620867	Symbol	vmStartRequest . instanceID		620220						
ANR	620868	Symbol	argc		620220						
ANR	620869	Symbol	buffer . c_str		620220						
ANR	620870	Symbol	vmStartRequest . errorCode		620220						
ANR	620871	Symbol	vmStartRequest . errorMessage . c_str		620220						
ANR	620872	Symbol	vmStartRequest . query_parameters		620220						
ANR	620873	Symbol	D_ALWAYS		620220						
ANR	620874	Symbol	false		620220						
ANR	620875	Symbol	i		620220						
ANR	620876	Symbol	verify_min_number_args		620220						
ANR	620877	Symbol	NULLSTRING		620220						
ANR	620878	Symbol	* vmStartRequest . query_parameters		620220						
ANR	620879	Symbol	vmStartRequest . errorMessage		620220						
ANR	620880	Symbol	udFileName . c_str		620220						
ANR	620881	Symbol	condor_base64_encode		620220						
ANR	620882	Symbol	* i		620220						
ANR	620883	Symbol	readShortFile		620220						
ANR	620884	Symbol	vmStartRequest . SendRequest		620220						
ANR	620885	Symbol	vmStartRequest . resultString		620220						
ANR	620886	Symbol	* groupName		620220						
ANR	620887	Symbol	base64Encoded		620220						
ANR	620888	Symbol	buffer . empty		620220						
ANR	620889	Function	AmazonVMStop :: AmazonVMStop	696:0:27367:27398							
ANR	620890	FunctionDef	AmazonVMStop :: AmazonVMStop ()		620889	0					
ANR	620891	CompoundStatement		696:29:27396:27398	620889	0					
ANR	620892	Identifier	AmazonVMStop :: AmazonVMStop		620889	1					
ANR	620893	ParameterList			620889	2					
ANR	620894	CFGEntryNode	ENTRY		620889		True				
ANR	620895	CFGExitNode	EXIT		620889		True				
ANR	620896	Function	AmazonVMStop :: ~AmazonVMStop	698:0:27401:27433							
ANR	620897	FunctionDef	AmazonVMStop :: ~AmazonVMStop ()		620896	0					
ANR	620898	CompoundStatement		698:30:27431:27433	620896	0					
ANR	620899	Identifier	AmazonVMStop :: ~AmazonVMStop		620896	1					
ANR	620900	ParameterList			620896	2					
ANR	620901	CFGEntryNode	ENTRY		620896		True				
ANR	620902	CFGExitNode	EXIT		620896		True				
ANR	620903	Function	AmazonVMStop :: workerFunction	701:0:27529:29112							
ANR	620904	FunctionDef	"AmazonVMStop :: workerFunction (char * * argv , int argc , std :: string & result_string)"		620903	0					
ANR	620905	CompoundStatement		701:85:27614:29112	620903	0					
ANR	620906	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0 )"	702:4:27620:27667	620903	0	True				
ANR	620907	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0 )"		620903	0					
ANR	620908	Callee	assert		620903	0					
ANR	620909	Identifier	assert		620903	0					
ANR	620910	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0"		620903	1					
ANR	620911	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0"		620903	0					
ANR	620912	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0"		620903	0		==			
ANR	620913	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" )"		620903	0					
ANR	620914	Callee	strcmp		620903	0					
ANR	620915	Identifier	strcmp		620903	0					
ANR	620916	ArgumentList	argv [ 0 ]		620903	1					
ANR	620917	Argument	argv [ 0 ]		620903	0					
ANR	620918	ArrayIndexing	argv [ 0 ]		620903	0					
ANR	620919	Identifier	argv		620903	0					
ANR	620920	PrimaryExpression	0		620903	1					
ANR	620921	Argument	"""EC2_VM_STOP"""		620903	1					
ANR	620922	PrimaryExpression	"""EC2_VM_STOP"""		620903	0					
ANR	620923	PrimaryExpression	0		620903	1					
ANR	620924	IdentifierDeclStatement	int requestID ;	707:4:27860:27873	620903	1	True				
ANR	620925	IdentifierDecl	requestID		620903	0					
ANR	620926	IdentifierDeclType	int		620903	0					
ANR	620927	Identifier	requestID		620903	1					
ANR	620928	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	708:4:27879:27910	620903	2	True				
ANR	620929	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		620903	0					
ANR	620930	Callee	get_int		620903	0					
ANR	620931	Identifier	get_int		620903	0					
ANR	620932	ArgumentList	argv [ 1 ]		620903	1					
ANR	620933	Argument	argv [ 1 ]		620903	0					
ANR	620934	ArrayIndexing	argv [ 1 ]		620903	0					
ANR	620935	Identifier	argv		620903	0					
ANR	620936	PrimaryExpression	1		620903	1					
ANR	620937	Argument	& requestID		620903	1					
ANR	620938	UnaryOperationExpression	& requestID		620903	0					
ANR	620939	UnaryOperator	&		620903	0					
ANR	620940	Identifier	requestID		620903	1					
ANR	620941	IfStatement	"if ( ! verify_min_number_args ( argc , 6 ) )"		620903	3					
ANR	620942	Condition	"! verify_min_number_args ( argc , 6 )"	710:8:27925:27959	620903	0	True				
ANR	620943	UnaryOperationExpression	"! verify_min_number_args ( argc , 6 )"		620903	0					
ANR	620944	UnaryOperator	!		620903	0					
ANR	620945	CallExpression	"verify_min_number_args ( argc , 6 )"		620903	1					
ANR	620946	Callee	verify_min_number_args		620903	0					
ANR	620947	Identifier	verify_min_number_args		620903	0					
ANR	620948	ArgumentList	argc		620903	1					
ANR	620949	Argument	argc		620903	0					
ANR	620950	Identifier	argc		620903	0					
ANR	620951	Argument	6		620903	1					
ANR	620952	PrimaryExpression	6		620903	0					
ANR	620953	CompoundStatement		10:46:348:348	620903	1					
ANR	620954	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	711:8:27973:28048	620903	0	True				
ANR	620955	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		620903	0		=			
ANR	620956	Identifier	result_string		620903	0					
ANR	620957	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		620903	1					
ANR	620958	Callee	create_failure_result		620903	0					
ANR	620959	Identifier	create_failure_result		620903	0					
ANR	620960	ArgumentList	requestID		620903	1					
ANR	620961	Argument	requestID		620903	0					
ANR	620962	Identifier	requestID		620903	0					
ANR	620963	Argument	"""Wrong_Argument_Number"""		620903	1					
ANR	620964	PrimaryExpression	"""Wrong_Argument_Number"""		620903	0					
ANR	620965	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"	712:8:28058:28170	620903	1	True				
ANR	620966	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"		620903	0					
ANR	620967	Callee	dprintf		620903	0					
ANR	620968	Identifier	dprintf		620903	0					
ANR	620969	ArgumentList	D_ALWAYS		620903	1					
ANR	620970	Argument	D_ALWAYS		620903	0					
ANR	620971	Identifier	D_ALWAYS		620903	0					
ANR	620972	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		620903	1					
ANR	620973	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		620903	0					
ANR	620974	Argument	argc		620903	2					
ANR	620975	Identifier	argc		620903	0					
ANR	620976	Argument	6		620903	3					
ANR	620977	PrimaryExpression	6		620903	0					
ANR	620978	Argument	argv [ 0 ]		620903	4					
ANR	620979	ArrayIndexing	argv [ 0 ]		620903	0					
ANR	620980	Identifier	argv		620903	0					
ANR	620981	PrimaryExpression	0		620903	1					
ANR	620982	ReturnStatement	return false ;	714:8:28180:28192	620903	2	True				
ANR	620983	Identifier	false		620903	0					
ANR	620984	IdentifierDeclStatement	AmazonVMStop terminationRequest ;	718:4:28254:28285	620903	4	True				
ANR	620985	IdentifierDecl	terminationRequest		620903	0					
ANR	620986	IdentifierDeclType	AmazonVMStop		620903	0					
ANR	620987	Identifier	terminationRequest		620903	1					
ANR	620988	ExpressionStatement	terminationRequest . serviceURL = argv [ 2 ]	719:4:28291:28330	620903	5	True				
ANR	620989	AssignmentExpression	terminationRequest . serviceURL = argv [ 2 ]		620903	0		=			
ANR	620990	MemberAccess	terminationRequest . serviceURL		620903	0					
ANR	620991	Identifier	terminationRequest		620903	0					
ANR	620992	Identifier	serviceURL		620903	1					
ANR	620993	ArrayIndexing	argv [ 2 ]		620903	1					
ANR	620994	Identifier	argv		620903	0					
ANR	620995	PrimaryExpression	2		620903	1					
ANR	620996	ExpressionStatement	terminationRequest . accessKeyFile = argv [ 3 ]	720:4:28336:28378	620903	6	True				
ANR	620997	AssignmentExpression	terminationRequest . accessKeyFile = argv [ 3 ]		620903	0		=			
ANR	620998	MemberAccess	terminationRequest . accessKeyFile		620903	0					
ANR	620999	Identifier	terminationRequest		620903	0					
ANR	621000	Identifier	accessKeyFile		620903	1					
ANR	621001	ArrayIndexing	argv [ 3 ]		620903	1					
ANR	621002	Identifier	argv		620903	0					
ANR	621003	PrimaryExpression	3		620903	1					
ANR	621004	ExpressionStatement	terminationRequest . secretKeyFile = argv [ 4 ]	721:4:28384:28426	620903	7	True				
ANR	621005	AssignmentExpression	terminationRequest . secretKeyFile = argv [ 4 ]		620903	0		=			
ANR	621006	MemberAccess	terminationRequest . secretKeyFile		620903	0					
ANR	621007	Identifier	terminationRequest		620903	0					
ANR	621008	Identifier	secretKeyFile		620903	1					
ANR	621009	ArrayIndexing	argv [ 4 ]		620903	1					
ANR	621010	Identifier	argv		620903	0					
ANR	621011	PrimaryExpression	4		620903	1					
ANR	621012	ExpressionStatement	"terminationRequest . query_parameters [ ""Action"" ] = ""TerminateInstances"""	722:4:28432:28502	620903	8	True				
ANR	621013	AssignmentExpression	"terminationRequest . query_parameters [ ""Action"" ] = ""TerminateInstances"""		620903	0		=			
ANR	621014	ArrayIndexing	"terminationRequest . query_parameters [ ""Action"" ]"		620903	0					
ANR	621015	MemberAccess	terminationRequest . query_parameters		620903	0					
ANR	621016	Identifier	terminationRequest		620903	0					
ANR	621017	Identifier	query_parameters		620903	1					
ANR	621018	PrimaryExpression	"""Action"""		620903	1					
ANR	621019	PrimaryExpression	"""TerminateInstances"""		620903	1					
ANR	621020	ExpressionStatement	"terminationRequest . query_parameters [ ""InstanceId.1"" ] = argv [ 5 ]"	723:4:28508:28571	620903	9	True				
ANR	621021	AssignmentExpression	"terminationRequest . query_parameters [ ""InstanceId.1"" ] = argv [ 5 ]"		620903	0		=			
ANR	621022	ArrayIndexing	"terminationRequest . query_parameters [ ""InstanceId.1"" ]"		620903	0					
ANR	621023	MemberAccess	terminationRequest . query_parameters		620903	0					
ANR	621024	Identifier	terminationRequest		620903	0					
ANR	621025	Identifier	query_parameters		620903	1					
ANR	621026	PrimaryExpression	"""InstanceId.1"""		620903	1					
ANR	621027	ArrayIndexing	argv [ 5 ]		620903	1					
ANR	621028	Identifier	argv		620903	0					
ANR	621029	PrimaryExpression	5		620903	1					
ANR	621030	IfStatement	if ( ! terminationRequest . SendRequest ( ) )		620903	10					
ANR	621031	Condition	! terminationRequest . SendRequest ( )	726:8:28607:28640	620903	0	True				
ANR	621032	UnaryOperationExpression	! terminationRequest . SendRequest ( )		620903	0					
ANR	621033	UnaryOperator	!		620903	0					
ANR	621034	CallExpression	terminationRequest . SendRequest ( )		620903	1					
ANR	621035	Callee	terminationRequest . SendRequest		620903	0					
ANR	621036	MemberAccess	terminationRequest . SendRequest		620903	0					
ANR	621037	Identifier	terminationRequest		620903	0					
ANR	621038	Identifier	SendRequest		620903	1					
ANR	621039	ArgumentList			620903	1					
ANR	621040	CompoundStatement		26:45:1029:1029	620903	1					
ANR	621041	ExpressionStatement	"result_string = create_failure_result ( requestID , terminationRequest . errorMessage . c_str ( ) , terminationRequest . errorCode . c_str ( ) )"	727:8:28654:28807	620903	0	True				
ANR	621042	AssignmentExpression	"result_string = create_failure_result ( requestID , terminationRequest . errorMessage . c_str ( ) , terminationRequest . errorCode . c_str ( ) )"		620903	0		=			
ANR	621043	Identifier	result_string		620903	0					
ANR	621044	CallExpression	"create_failure_result ( requestID , terminationRequest . errorMessage . c_str ( ) , terminationRequest . errorCode . c_str ( ) )"		620903	1					
ANR	621045	Callee	create_failure_result		620903	0					
ANR	621046	Identifier	create_failure_result		620903	0					
ANR	621047	ArgumentList	requestID		620903	1					
ANR	621048	Argument	requestID		620903	0					
ANR	621049	Identifier	requestID		620903	0					
ANR	621050	Argument	terminationRequest . errorMessage . c_str ( )		620903	1					
ANR	621051	CallExpression	terminationRequest . errorMessage . c_str ( )		620903	0					
ANR	621052	Callee	terminationRequest . errorMessage . c_str		620903	0					
ANR	621053	MemberAccess	terminationRequest . errorMessage . c_str		620903	0					
ANR	621054	MemberAccess	terminationRequest . errorMessage		620903	0					
ANR	621055	Identifier	terminationRequest		620903	0					
ANR	621056	Identifier	errorMessage		620903	1					
ANR	621057	Identifier	c_str		620903	1					
ANR	621058	ArgumentList			620903	1					
ANR	621059	Argument	terminationRequest . errorCode . c_str ( )		620903	2					
ANR	621060	CallExpression	terminationRequest . errorCode . c_str ( )		620903	0					
ANR	621061	Callee	terminationRequest . errorCode . c_str		620903	0					
ANR	621062	MemberAccess	terminationRequest . errorCode . c_str		620903	0					
ANR	621063	MemberAccess	terminationRequest . errorCode		620903	0					
ANR	621064	Identifier	terminationRequest		620903	0					
ANR	621065	Identifier	errorCode		620903	1					
ANR	621066	Identifier	c_str		620903	1					
ANR	621067	ArgumentList			620903	1					
ANR	621068	ElseStatement	else		620903	0					
ANR	621069	CompoundStatement		30:11:1205:1205	620903	0					
ANR	621070	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	734:8:29030:29086	620903	0	True				
ANR	621071	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		620903	0		=			
ANR	621072	Identifier	result_string		620903	0					
ANR	621073	CallExpression	"create_success_result ( requestID , NULL )"		620903	1					
ANR	621074	Callee	create_success_result		620903	0					
ANR	621075	Identifier	create_success_result		620903	0					
ANR	621076	ArgumentList	requestID		620903	1					
ANR	621077	Argument	requestID		620903	0					
ANR	621078	Identifier	requestID		620903	0					
ANR	621079	Argument	NULL		620903	1					
ANR	621080	Identifier	NULL		620903	0					
ANR	621081	ReturnStatement	return true ;	737:4:29099:29110	620903	11	True				
ANR	621082	Identifier	true		620903	0					
ANR	621083	ReturnType	bool		620903	1					
ANR	621084	Identifier	AmazonVMStop :: workerFunction		620903	2					
ANR	621085	ParameterList	"char * * argv , int argc , std :: string & result_string"		620903	3					
ANR	621086	Parameter	char * * argv	701:34:27563:27573	620903	0	True				
ANR	621087	ParameterType	char * *		620903	0					
ANR	621088	Identifier	argv		620903	1					
ANR	621089	Parameter	int argc	701:47:27576:27583	620903	1	True				
ANR	621090	ParameterType	int		620903	0					
ANR	621091	Identifier	argc		620903	1					
ANR	621092	Parameter	std :: string & result_string	701:57:27586:27611	620903	2	True				
ANR	621093	ParameterType	std :: string &		620903	0					
ANR	621094	Identifier	result_string		620903	1					
ANR	621095	CFGEntryNode	ENTRY		620903		True				
ANR	621096	CFGExitNode	EXIT		620903		True				
ANR	621097	Symbol	* terminationRequest		620903						
ANR	621098	Symbol	* argv		620903						
ANR	621099	Symbol	argv		620903						
ANR	621100	Symbol	& requestID		620903						
ANR	621101	Symbol	create_success_result		620903						
ANR	621102	Symbol	terminationRequest . SendRequest		620903						
ANR	621103	Symbol	terminationRequest . errorMessage . c_str		620903						
ANR	621104	Symbol	terminationRequest . errorCode . c_str		620903						
ANR	621105	Symbol	terminationRequest . errorCode		620903						
ANR	621106	Symbol	result_string		620903						
ANR	621107	Symbol	argc		620903						
ANR	621108	Symbol	strcmp		620903						
ANR	621109	Symbol	terminationRequest . secretKeyFile		620903						
ANR	621110	Symbol	terminationRequest		620903						
ANR	621111	Symbol	NULL		620903						
ANR	621112	Symbol	terminationRequest . serviceURL		620903						
ANR	621113	Symbol	D_ALWAYS		620903						
ANR	621114	Symbol	false		620903						
ANR	621115	Symbol	verify_min_number_args		620903						
ANR	621116	Symbol	requestID		620903						
ANR	621117	Symbol	create_failure_result		620903						
ANR	621118	Symbol	terminationRequest . errorMessage		620903						
ANR	621119	Symbol	true		620903						
ANR	621120	Symbol	terminationRequest . query_parameters		620903						
ANR	621121	Symbol	* terminationRequest . query_parameters		620903						
ANR	621122	Symbol	terminationRequest . accessKeyFile		620903						
ANR	621123	Function	AmazonVMStatus :: AmazonVMStatus	742:0:29195:29230							
ANR	621124	FunctionDef	AmazonVMStatus :: AmazonVMStatus ()		621123	0					
ANR	621125	CompoundStatement		742:33:29228:29230	621123	0					
ANR	621126	Identifier	AmazonVMStatus :: AmazonVMStatus		621123	1					
ANR	621127	ParameterList			621123	2					
ANR	621128	CFGEntryNode	ENTRY		621123		True				
ANR	621129	CFGExitNode	EXIT		621123		True				
ANR	621130	Function	AmazonVMStatus :: ~AmazonVMStatus	744:0:29233:29269							
ANR	621131	FunctionDef	AmazonVMStatus :: ~AmazonVMStatus ()		621130	0					
ANR	621132	CompoundStatement		744:34:29267:29269	621130	0					
ANR	621133	Identifier	AmazonVMStatus :: ~AmazonVMStatus		621130	1					
ANR	621134	ParameterList			621130	2					
ANR	621135	CFGEntryNode	ENTRY		621130		True				
ANR	621136	CFGExitNode	EXIT		621130		True				
ANR	621137	Function	nullStringIfEmpty	746:0:29272:29410							
ANR	621138	FunctionDef	nullStringIfEmpty (const std :: string & str)		621137	0					
ANR	621139	CompoundStatement		746:58:29330:29410	621137	0					
ANR	621140	IfStatement	if ( str . empty ( ) )		621137	0					
ANR	621141	Condition	str . empty ( )	747:8:29340:29350	621137	0	True				
ANR	621142	CallExpression	str . empty ( )		621137	0					
ANR	621143	Callee	str . empty		621137	0					
ANR	621144	MemberAccess	str . empty		621137	0					
ANR	621145	Identifier	str		621137	0					
ANR	621146	Identifier	empty		621137	1					
ANR	621147	ArgumentList			621137	1					
ANR	621148	CompoundStatement		2:22:23:23	621137	1					
ANR	621149	ReturnStatement	return NULLSTRING ;	747:24:29356:29373	621137	0	True				
ANR	621150	Identifier	NULLSTRING		621137	0					
ANR	621151	ElseStatement	else		621137	0					
ANR	621152	CompoundStatement		3:9:55:55	621137	0					
ANR	621153	ReturnStatement	return str . c_str ( ) ;	748:11:29388:29406	621137	0	True				
ANR	621154	CallExpression	str . c_str ( )		621137	0					
ANR	621155	Callee	str . c_str		621137	0					
ANR	621156	MemberAccess	str . c_str		621137	0					
ANR	621157	Identifier	str		621137	0					
ANR	621158	Identifier	c_str		621137	1					
ANR	621159	ArgumentList			621137	1					
ANR	621160	ReturnType	const char *		621137	1					
ANR	621161	Identifier	nullStringIfEmpty		621137	2					
ANR	621162	ParameterList	const std :: string & str		621137	3					
ANR	621163	Parameter	const std :: string & str	746:32:29304:29326	621137	0	True				
ANR	621164	ParameterType	const std :: string &		621137	0					
ANR	621165	Identifier	str		621137	1					
ANR	621166	CFGEntryNode	ENTRY		621137		True				
ANR	621167	CFGExitNode	EXIT		621137		True				
ANR	621168	Symbol	str		621137						
ANR	621169	Symbol	str . empty		621137						
ANR	621170	Symbol	str . c_str		621137						
ANR	621171	Symbol	NULLSTRING		621137						
ANR	621172	Function	AmazonVMStatus :: workerFunction	752:0:29512:32244							
ANR	621173	FunctionDef	"AmazonVMStatus :: workerFunction (char * * argv , int argc , std :: string & result_string)"		621172	0					
ANR	621174	CompoundStatement		752:87:29599:32244	621172	0					
ANR	621175	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0 )"	753:4:29605:29654	621172	0	True				
ANR	621176	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0 )"		621172	0					
ANR	621177	Callee	assert		621172	0					
ANR	621178	Identifier	assert		621172	0					
ANR	621179	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0"		621172	1					
ANR	621180	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0"		621172	0					
ANR	621181	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0"		621172	0		==			
ANR	621182	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" )"		621172	0					
ANR	621183	Callee	strcmp		621172	0					
ANR	621184	Identifier	strcmp		621172	0					
ANR	621185	ArgumentList	argv [ 0 ]		621172	1					
ANR	621186	Argument	argv [ 0 ]		621172	0					
ANR	621187	ArrayIndexing	argv [ 0 ]		621172	0					
ANR	621188	Identifier	argv		621172	0					
ANR	621189	PrimaryExpression	0		621172	1					
ANR	621190	Argument	"""EC2_VM_STATUS"""		621172	1					
ANR	621191	PrimaryExpression	"""EC2_VM_STATUS"""		621172	0					
ANR	621192	PrimaryExpression	0		621172	1					
ANR	621193	IdentifierDeclStatement	int requestID ;	758:4:29845:29858	621172	1	True				
ANR	621194	IdentifierDecl	requestID		621172	0					
ANR	621195	IdentifierDeclType	int		621172	0					
ANR	621196	Identifier	requestID		621172	1					
ANR	621197	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	759:4:29864:29895	621172	2	True				
ANR	621198	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		621172	0					
ANR	621199	Callee	get_int		621172	0					
ANR	621200	Identifier	get_int		621172	0					
ANR	621201	ArgumentList	argv [ 1 ]		621172	1					
ANR	621202	Argument	argv [ 1 ]		621172	0					
ANR	621203	ArrayIndexing	argv [ 1 ]		621172	0					
ANR	621204	Identifier	argv		621172	0					
ANR	621205	PrimaryExpression	1		621172	1					
ANR	621206	Argument	& requestID		621172	1					
ANR	621207	UnaryOperationExpression	& requestID		621172	0					
ANR	621208	UnaryOperator	&		621172	0					
ANR	621209	Identifier	requestID		621172	1					
ANR	621210	IfStatement	"if ( ! verify_min_number_args ( argc , 6 ) )"		621172	3					
ANR	621211	Condition	"! verify_min_number_args ( argc , 6 )"	761:8:29910:29944	621172	0	True				
ANR	621212	UnaryOperationExpression	"! verify_min_number_args ( argc , 6 )"		621172	0					
ANR	621213	UnaryOperator	!		621172	0					
ANR	621214	CallExpression	"verify_min_number_args ( argc , 6 )"		621172	1					
ANR	621215	Callee	verify_min_number_args		621172	0					
ANR	621216	Identifier	verify_min_number_args		621172	0					
ANR	621217	ArgumentList	argc		621172	1					
ANR	621218	Argument	argc		621172	0					
ANR	621219	Identifier	argc		621172	0					
ANR	621220	Argument	6		621172	1					
ANR	621221	PrimaryExpression	6		621172	0					
ANR	621222	CompoundStatement		10:46:348:348	621172	1					
ANR	621223	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	762:8:29958:30033	621172	0	True				
ANR	621224	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		621172	0		=			
ANR	621225	Identifier	result_string		621172	0					
ANR	621226	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		621172	1					
ANR	621227	Callee	create_failure_result		621172	0					
ANR	621228	Identifier	create_failure_result		621172	0					
ANR	621229	ArgumentList	requestID		621172	1					
ANR	621230	Argument	requestID		621172	0					
ANR	621231	Identifier	requestID		621172	0					
ANR	621232	Argument	"""Wrong_Argument_Number"""		621172	1					
ANR	621233	PrimaryExpression	"""Wrong_Argument_Number"""		621172	0					
ANR	621234	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"	763:8:30043:30155	621172	1	True				
ANR	621235	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"		621172	0					
ANR	621236	Callee	dprintf		621172	0					
ANR	621237	Identifier	dprintf		621172	0					
ANR	621238	ArgumentList	D_ALWAYS		621172	1					
ANR	621239	Argument	D_ALWAYS		621172	0					
ANR	621240	Identifier	D_ALWAYS		621172	0					
ANR	621241	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		621172	1					
ANR	621242	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		621172	0					
ANR	621243	Argument	argc		621172	2					
ANR	621244	Identifier	argc		621172	0					
ANR	621245	Argument	6		621172	3					
ANR	621246	PrimaryExpression	6		621172	0					
ANR	621247	Argument	argv [ 0 ]		621172	4					
ANR	621248	ArrayIndexing	argv [ 0 ]		621172	0					
ANR	621249	Identifier	argv		621172	0					
ANR	621250	PrimaryExpression	0		621172	1					
ANR	621251	ReturnStatement	return false ;	765:8:30165:30177	621172	2	True				
ANR	621252	Identifier	false		621172	0					
ANR	621253	IdentifierDeclStatement	AmazonVMStatus sRequest ;	769:4:30239:30262	621172	4	True				
ANR	621254	IdentifierDecl	sRequest		621172	0					
ANR	621255	IdentifierDeclType	AmazonVMStatus		621172	0					
ANR	621256	Identifier	sRequest		621172	1					
ANR	621257	ExpressionStatement	sRequest . serviceURL = argv [ 2 ]	770:4:30268:30297	621172	5	True				
ANR	621258	AssignmentExpression	sRequest . serviceURL = argv [ 2 ]		621172	0		=			
ANR	621259	MemberAccess	sRequest . serviceURL		621172	0					
ANR	621260	Identifier	sRequest		621172	0					
ANR	621261	Identifier	serviceURL		621172	1					
ANR	621262	ArrayIndexing	argv [ 2 ]		621172	1					
ANR	621263	Identifier	argv		621172	0					
ANR	621264	PrimaryExpression	2		621172	1					
ANR	621265	ExpressionStatement	sRequest . accessKeyFile = argv [ 3 ]	771:4:30303:30335	621172	6	True				
ANR	621266	AssignmentExpression	sRequest . accessKeyFile = argv [ 3 ]		621172	0		=			
ANR	621267	MemberAccess	sRequest . accessKeyFile		621172	0					
ANR	621268	Identifier	sRequest		621172	0					
ANR	621269	Identifier	accessKeyFile		621172	1					
ANR	621270	ArrayIndexing	argv [ 3 ]		621172	1					
ANR	621271	Identifier	argv		621172	0					
ANR	621272	PrimaryExpression	3		621172	1					
ANR	621273	ExpressionStatement	sRequest . secretKeyFile = argv [ 4 ]	772:4:30341:30373	621172	7	True				
ANR	621274	AssignmentExpression	sRequest . secretKeyFile = argv [ 4 ]		621172	0		=			
ANR	621275	MemberAccess	sRequest . secretKeyFile		621172	0					
ANR	621276	Identifier	sRequest		621172	0					
ANR	621277	Identifier	secretKeyFile		621172	1					
ANR	621278	ArrayIndexing	argv [ 4 ]		621172	1					
ANR	621279	Identifier	argv		621172	0					
ANR	621280	PrimaryExpression	4		621172	1					
ANR	621281	ExpressionStatement	"sRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""	773:4:30379:30438	621172	8	True				
ANR	621282	AssignmentExpression	"sRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""		621172	0		=			
ANR	621283	ArrayIndexing	"sRequest . query_parameters [ ""Action"" ]"		621172	0					
ANR	621284	MemberAccess	sRequest . query_parameters		621172	0					
ANR	621285	Identifier	sRequest		621172	0					
ANR	621286	Identifier	query_parameters		621172	1					
ANR	621287	PrimaryExpression	"""Action"""		621172	1					
ANR	621288	PrimaryExpression	"""DescribeInstances"""		621172	1					
ANR	621289	IdentifierDeclStatement	std :: string instanceID = argv [ 5 ] ;	776:4:30570:30602	621172	9	True				
ANR	621290	IdentifierDecl	instanceID = argv [ 5 ]		621172	0					
ANR	621291	IdentifierDeclType	std :: string		621172	0					
ANR	621292	Identifier	instanceID		621172	1					
ANR	621293	AssignmentExpression	instanceID = argv [ 5 ]		621172	2		=			
ANR	621294	Identifier	instanceID		621172	0					
ANR	621295	ArrayIndexing	argv [ 5 ]		621172	1					
ANR	621296	Identifier	argv		621172	0					
ANR	621297	PrimaryExpression	5		621172	1					
ANR	621298	IfStatement	if ( ! sRequest . SendRequest ( ) )		621172	10					
ANR	621299	Condition	! sRequest . SendRequest ( )	779:8:30642:30665	621172	0	True				
ANR	621300	UnaryOperationExpression	! sRequest . SendRequest ( )		621172	0					
ANR	621301	UnaryOperator	!		621172	0					
ANR	621302	CallExpression	sRequest . SendRequest ( )		621172	1					
ANR	621303	Callee	sRequest . SendRequest		621172	0					
ANR	621304	MemberAccess	sRequest . SendRequest		621172	0					
ANR	621305	Identifier	sRequest		621172	0					
ANR	621306	Identifier	SendRequest		621172	1					
ANR	621307	ArgumentList			621172	1					
ANR	621308	CompoundStatement		28:35:1069:1069	621172	1					
ANR	621309	ExpressionStatement	"result_string = create_failure_result ( requestID , sRequest . errorMessage . c_str ( ) , sRequest . errorCode . c_str ( ) )"	780:8:30679:30812	621172	0	True				
ANR	621310	AssignmentExpression	"result_string = create_failure_result ( requestID , sRequest . errorMessage . c_str ( ) , sRequest . errorCode . c_str ( ) )"		621172	0		=			
ANR	621311	Identifier	result_string		621172	0					
ANR	621312	CallExpression	"create_failure_result ( requestID , sRequest . errorMessage . c_str ( ) , sRequest . errorCode . c_str ( ) )"		621172	1					
ANR	621313	Callee	create_failure_result		621172	0					
ANR	621314	Identifier	create_failure_result		621172	0					
ANR	621315	ArgumentList	requestID		621172	1					
ANR	621316	Argument	requestID		621172	0					
ANR	621317	Identifier	requestID		621172	0					
ANR	621318	Argument	sRequest . errorMessage . c_str ( )		621172	1					
ANR	621319	CallExpression	sRequest . errorMessage . c_str ( )		621172	0					
ANR	621320	Callee	sRequest . errorMessage . c_str		621172	0					
ANR	621321	MemberAccess	sRequest . errorMessage . c_str		621172	0					
ANR	621322	MemberAccess	sRequest . errorMessage		621172	0					
ANR	621323	Identifier	sRequest		621172	0					
ANR	621324	Identifier	errorMessage		621172	1					
ANR	621325	Identifier	c_str		621172	1					
ANR	621326	ArgumentList			621172	1					
ANR	621327	Argument	sRequest . errorCode . c_str ( )		621172	2					
ANR	621328	CallExpression	sRequest . errorCode . c_str ( )		621172	0					
ANR	621329	Callee	sRequest . errorCode . c_str		621172	0					
ANR	621330	MemberAccess	sRequest . errorCode . c_str		621172	0					
ANR	621331	MemberAccess	sRequest . errorCode		621172	0					
ANR	621332	Identifier	sRequest		621172	0					
ANR	621333	Identifier	errorCode		621172	1					
ANR	621334	Identifier	c_str		621172	1					
ANR	621335	ArgumentList			621172	1					
ANR	621336	ElseStatement	else		621172	0					
ANR	621337	CompoundStatement		32:11:1225:1225	621172	0					
ANR	621338	IfStatement	if ( sRequest . results . size ( ) == 0 )		621172	0					
ANR	621339	Condition	sRequest . results . size ( ) == 0	784:12:30839:30866	621172	0	True				
ANR	621340	EqualityExpression	sRequest . results . size ( ) == 0		621172	0		==			
ANR	621341	CallExpression	sRequest . results . size ( )		621172	0					
ANR	621342	Callee	sRequest . results . size		621172	0					
ANR	621343	MemberAccess	sRequest . results . size		621172	0					
ANR	621344	MemberAccess	sRequest . results		621172	0					
ANR	621345	Identifier	sRequest		621172	0					
ANR	621346	Identifier	results		621172	1					
ANR	621347	Identifier	size		621172	1					
ANR	621348	ArgumentList			621172	1					
ANR	621349	PrimaryExpression	0		621172	1					
ANR	621350	CompoundStatement		33:43:1270:1270	621172	1					
ANR	621351	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	785:12:30884:30940	621172	0	True				
ANR	621352	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		621172	0		=			
ANR	621353	Identifier	result_string		621172	0					
ANR	621354	CallExpression	"create_success_result ( requestID , NULL )"		621172	1					
ANR	621355	Callee	create_success_result		621172	0					
ANR	621356	Identifier	create_success_result		621172	0					
ANR	621357	ArgumentList	requestID		621172	1					
ANR	621358	Argument	requestID		621172	0					
ANR	621359	Identifier	requestID		621172	0					
ANR	621360	Argument	NULL		621172	1					
ANR	621361	Identifier	NULL		621172	0					
ANR	621362	ElseStatement	else		621172	0					
ANR	621363	CompoundStatement		36:12:1371:1392	621172	0					
ANR	621364	IdentifierDeclStatement	StringList resultList ;	787:12:30971:30992	621172	0	True				
ANR	621365	IdentifierDecl	resultList		621172	0					
ANR	621366	IdentifierDeclType	StringList		621172	0					
ANR	621367	Identifier	resultList		621172	1					
ANR	621368	ForStatement	for ( unsigned i = 0 ; i < sRequest . results . size ( ) ; ++ i )		621172	1					
ANR	621369	ForInit	unsigned i = 0 ;	788:17:31011:31025	621172	0	True				
ANR	621370	IdentifierDeclStatement	unsigned i = 0 ;		621172	0					
ANR	621371	IdentifierDecl	i = 0		621172	0					
ANR	621372	IdentifierDeclType	unsigned		621172	0					
ANR	621373	Identifier	i		621172	1					
ANR	621374	AssignmentExpression	i = 0		621172	2		=			
ANR	621375	Identifier	i		621172	0					
ANR	621376	PrimaryExpression	0		621172	1					
ANR	621377	Condition	i < sRequest . results . size ( )	788:33:31027:31053	621172	1	True				
ANR	621378	RelationalExpression	i < sRequest . results . size ( )		621172	0		<			
ANR	621379	Identifier	i		621172	0					
ANR	621380	CallExpression	sRequest . results . size ( )		621172	1					
ANR	621381	Callee	sRequest . results . size		621172	0					
ANR	621382	MemberAccess	sRequest . results . size		621172	0					
ANR	621383	MemberAccess	sRequest . results		621172	0					
ANR	621384	Identifier	sRequest		621172	0					
ANR	621385	Identifier	results		621172	1					
ANR	621386	Identifier	size		621172	1					
ANR	621387	ArgumentList			621172	1					
ANR	621388	UnaryExpression	++ i	788:62:31056:31058	621172	2	True				
ANR	621389	IncDec	++		621172	0					
ANR	621390	Identifier	i		621172	1					
ANR	621391	CompoundStatement		38:16:1480:1524	621172	3					
ANR	621392	IdentifierDeclStatement	AmazonStatusResult asr = sRequest . results [ i ] ;	789:16:31080:31124	621172	0	True				
ANR	621393	IdentifierDecl	asr = sRequest . results [ i ]		621172	0					
ANR	621394	IdentifierDeclType	AmazonStatusResult		621172	0					
ANR	621395	Identifier	asr		621172	1					
ANR	621396	AssignmentExpression	asr = sRequest . results [ i ]		621172	2		=			
ANR	621397	Identifier	asr		621172	0					
ANR	621398	ArrayIndexing	sRequest . results [ i ]		621172	1					
ANR	621399	MemberAccess	sRequest . results		621172	0					
ANR	621400	Identifier	sRequest		621172	0					
ANR	621401	Identifier	results		621172	1					
ANR	621402	Identifier	i		621172	1					
ANR	621403	IfStatement	if ( asr . instance_id != instanceID )		621172	1					
ANR	621404	Condition	asr . instance_id != instanceID	790:20:31146:31174	621172	0	True				
ANR	621405	EqualityExpression	asr . instance_id != instanceID		621172	0		!=			
ANR	621406	MemberAccess	asr . instance_id		621172	0					
ANR	621407	Identifier	asr		621172	0					
ANR	621408	Identifier	instance_id		621172	1					
ANR	621409	Identifier	instanceID		621172	1					
ANR	621410	CompoundStatement		39:52:1578:1578	621172	1					
ANR	621411	ContinueStatement	continue ;	790:54:31180:31188	621172	0	True				
ANR	621412	ExpressionStatement	resultList . append ( asr . instance_id . c_str ( ) )	792:16:31225:31269	621172	2	True				
ANR	621413	CallExpression	resultList . append ( asr . instance_id . c_str ( ) )		621172	0					
ANR	621414	Callee	resultList . append		621172	0					
ANR	621415	MemberAccess	resultList . append		621172	0					
ANR	621416	Identifier	resultList		621172	0					
ANR	621417	Identifier	append		621172	1					
ANR	621418	ArgumentList	asr . instance_id . c_str ( )		621172	1					
ANR	621419	Argument	asr . instance_id . c_str ( )		621172	0					
ANR	621420	CallExpression	asr . instance_id . c_str ( )		621172	0					
ANR	621421	Callee	asr . instance_id . c_str		621172	0					
ANR	621422	MemberAccess	asr . instance_id . c_str		621172	0					
ANR	621423	MemberAccess	asr . instance_id		621172	0					
ANR	621424	Identifier	asr		621172	0					
ANR	621425	Identifier	instance_id		621172	1					
ANR	621426	Identifier	c_str		621172	1					
ANR	621427	ArgumentList			621172	1					
ANR	621428	ExpressionStatement	resultList . append ( asr . status . c_str ( ) )	793:16:31287:31326	621172	3	True				
ANR	621429	CallExpression	resultList . append ( asr . status . c_str ( ) )		621172	0					
ANR	621430	Callee	resultList . append		621172	0					
ANR	621431	MemberAccess	resultList . append		621172	0					
ANR	621432	Identifier	resultList		621172	0					
ANR	621433	Identifier	append		621172	1					
ANR	621434	ArgumentList	asr . status . c_str ( )		621172	1					
ANR	621435	Argument	asr . status . c_str ( )		621172	0					
ANR	621436	CallExpression	asr . status . c_str ( )		621172	0					
ANR	621437	Callee	asr . status . c_str		621172	0					
ANR	621438	MemberAccess	asr . status . c_str		621172	0					
ANR	621439	MemberAccess	asr . status		621172	0					
ANR	621440	Identifier	asr		621172	0					
ANR	621441	Identifier	status		621172	1					
ANR	621442	Identifier	c_str		621172	1					
ANR	621443	ArgumentList			621172	1					
ANR	621444	ExpressionStatement	resultList . append ( asr . ami_id . c_str ( ) )	794:16:31344:31383	621172	4	True				
ANR	621445	CallExpression	resultList . append ( asr . ami_id . c_str ( ) )		621172	0					
ANR	621446	Callee	resultList . append		621172	0					
ANR	621447	MemberAccess	resultList . append		621172	0					
ANR	621448	Identifier	resultList		621172	0					
ANR	621449	Identifier	append		621172	1					
ANR	621450	ArgumentList	asr . ami_id . c_str ( )		621172	1					
ANR	621451	Argument	asr . ami_id . c_str ( )		621172	0					
ANR	621452	CallExpression	asr . ami_id . c_str ( )		621172	0					
ANR	621453	Callee	asr . ami_id . c_str		621172	0					
ANR	621454	MemberAccess	asr . ami_id . c_str		621172	0					
ANR	621455	MemberAccess	asr . ami_id		621172	0					
ANR	621456	Identifier	asr		621172	0					
ANR	621457	Identifier	ami_id		621172	1					
ANR	621458	Identifier	c_str		621172	1					
ANR	621459	ArgumentList			621172	1					
ANR	621460	IfStatement	"if ( strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING ) == 0 )"		621172	5					
ANR	621461	Condition	"strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING ) == 0"	796:20:31422:31481	621172	0	True				
ANR	621462	EqualityExpression	"strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING ) == 0"		621172	0		==			
ANR	621463	CallExpression	"strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING )"		621172	0					
ANR	621464	Callee	strcasecmp		621172	0					
ANR	621465	Identifier	strcasecmp		621172	0					
ANR	621466	ArgumentList	asr . status . c_str ( )		621172	1					
ANR	621467	Argument	asr . status . c_str ( )		621172	0					
ANR	621468	CallExpression	asr . status . c_str ( )		621172	0					
ANR	621469	Callee	asr . status . c_str		621172	0					
ANR	621470	MemberAccess	asr . status . c_str		621172	0					
ANR	621471	MemberAccess	asr . status		621172	0					
ANR	621472	Identifier	asr		621172	0					
ANR	621473	Identifier	status		621172	1					
ANR	621474	Identifier	c_str		621172	1					
ANR	621475	ArgumentList			621172	1					
ANR	621476	Argument	AMAZON_STATUS_RUNNING		621172	1					
ANR	621477	Identifier	AMAZON_STATUS_RUNNING		621172	0					
ANR	621478	PrimaryExpression	0		621172	1					
ANR	621479	CompoundStatement		45:83:1885:1885	621172	1					
ANR	621480	ExpressionStatement	resultList . append ( nullStringIfEmpty ( asr . public_dns ) )	797:20:31507:31563	621172	0	True				
ANR	621481	CallExpression	resultList . append ( nullStringIfEmpty ( asr . public_dns ) )		621172	0					
ANR	621482	Callee	resultList . append		621172	0					
ANR	621483	MemberAccess	resultList . append		621172	0					
ANR	621484	Identifier	resultList		621172	0					
ANR	621485	Identifier	append		621172	1					
ANR	621486	ArgumentList	nullStringIfEmpty ( asr . public_dns )		621172	1					
ANR	621487	Argument	nullStringIfEmpty ( asr . public_dns )		621172	0					
ANR	621488	CallExpression	nullStringIfEmpty ( asr . public_dns )		621172	0					
ANR	621489	Callee	nullStringIfEmpty		621172	0					
ANR	621490	Identifier	nullStringIfEmpty		621172	0					
ANR	621491	ArgumentList	asr . public_dns		621172	1					
ANR	621492	Argument	asr . public_dns		621172	0					
ANR	621493	MemberAccess	asr . public_dns		621172	0					
ANR	621494	Identifier	asr		621172	0					
ANR	621495	Identifier	public_dns		621172	1					
ANR	621496	ExpressionStatement	resultList . append ( nullStringIfEmpty ( asr . private_dns ) )	798:20:31585:31642	621172	1	True				
ANR	621497	CallExpression	resultList . append ( nullStringIfEmpty ( asr . private_dns ) )		621172	0					
ANR	621498	Callee	resultList . append		621172	0					
ANR	621499	MemberAccess	resultList . append		621172	0					
ANR	621500	Identifier	resultList		621172	0					
ANR	621501	Identifier	append		621172	1					
ANR	621502	ArgumentList	nullStringIfEmpty ( asr . private_dns )		621172	1					
ANR	621503	Argument	nullStringIfEmpty ( asr . private_dns )		621172	0					
ANR	621504	CallExpression	nullStringIfEmpty ( asr . private_dns )		621172	0					
ANR	621505	Callee	nullStringIfEmpty		621172	0					
ANR	621506	Identifier	nullStringIfEmpty		621172	0					
ANR	621507	ArgumentList	asr . private_dns		621172	1					
ANR	621508	Argument	asr . private_dns		621172	0					
ANR	621509	MemberAccess	asr . private_dns		621172	0					
ANR	621510	Identifier	asr		621172	0					
ANR	621511	Identifier	private_dns		621172	1					
ANR	621512	ExpressionStatement	resultList . append ( nullStringIfEmpty ( asr . keyname ) )	799:20:31664:31717	621172	2	True				
ANR	621513	CallExpression	resultList . append ( nullStringIfEmpty ( asr . keyname ) )		621172	0					
ANR	621514	Callee	resultList . append		621172	0					
ANR	621515	MemberAccess	resultList . append		621172	0					
ANR	621516	Identifier	resultList		621172	0					
ANR	621517	Identifier	append		621172	1					
ANR	621518	ArgumentList	nullStringIfEmpty ( asr . keyname )		621172	1					
ANR	621519	Argument	nullStringIfEmpty ( asr . keyname )		621172	0					
ANR	621520	CallExpression	nullStringIfEmpty ( asr . keyname )		621172	0					
ANR	621521	Callee	nullStringIfEmpty		621172	0					
ANR	621522	Identifier	nullStringIfEmpty		621172	0					
ANR	621523	ArgumentList	asr . keyname		621172	1					
ANR	621524	Argument	asr . keyname		621172	0					
ANR	621525	MemberAccess	asr . keyname		621172	0					
ANR	621526	Identifier	asr		621172	0					
ANR	621527	Identifier	keyname		621172	1					
ANR	621528	IfStatement	if ( asr . securityGroups . size ( ) == 0 )		621172	3					
ANR	621529	Condition	asr . securityGroups . size ( ) == 0	800:24:31743:31772	621172	0	True				
ANR	621530	EqualityExpression	asr . securityGroups . size ( ) == 0		621172	0		==			
ANR	621531	CallExpression	asr . securityGroups . size ( )		621172	0					
ANR	621532	Callee	asr . securityGroups . size		621172	0					
ANR	621533	MemberAccess	asr . securityGroups . size		621172	0					
ANR	621534	MemberAccess	asr . securityGroups		621172	0					
ANR	621535	Identifier	asr		621172	0					
ANR	621536	Identifier	securityGroups		621172	1					
ANR	621537	Identifier	size		621172	1					
ANR	621538	ArgumentList			621172	1					
ANR	621539	PrimaryExpression	0		621172	1					
ANR	621540	CompoundStatement		49:57:2176:2176	621172	1					
ANR	621541	ExpressionStatement	resultList . append ( NULLSTRING )	801:24:31802:31833	621172	0	True				
ANR	621542	CallExpression	resultList . append ( NULLSTRING )		621172	0					
ANR	621543	Callee	resultList . append		621172	0					
ANR	621544	MemberAccess	resultList . append		621172	0					
ANR	621545	Identifier	resultList		621172	0					
ANR	621546	Identifier	append		621172	1					
ANR	621547	ArgumentList	NULLSTRING		621172	1					
ANR	621548	Argument	NULLSTRING		621172	0					
ANR	621549	Identifier	NULLSTRING		621172	0					
ANR	621550	ElseStatement	else		621172	0					
ANR	621551	CompoundStatement		51:27:2262:2262	621172	0					
ANR	621552	ForStatement	for ( unsigned j = 0 ; j < asr . securityGroups . size ( ) ; ++ j )		621172	0					
ANR	621553	ForInit	unsigned j = 0 ;	803:29:31917:31931	621172	0	True				
ANR	621554	IdentifierDeclStatement	unsigned j = 0 ;		621172	0					
ANR	621555	IdentifierDecl	j = 0		621172	0					
ANR	621556	IdentifierDeclType	unsigned		621172	0					
ANR	621557	Identifier	j		621172	1					
ANR	621558	AssignmentExpression	j = 0		621172	2		=			
ANR	621559	Identifier	j		621172	0					
ANR	621560	PrimaryExpression	0		621172	1					
ANR	621561	Condition	j < asr . securityGroups . size ( )	803:45:31933:31961	621172	1	True				
ANR	621562	RelationalExpression	j < asr . securityGroups . size ( )		621172	0		<			
ANR	621563	Identifier	j		621172	0					
ANR	621564	CallExpression	asr . securityGroups . size ( )		621172	1					
ANR	621565	Callee	asr . securityGroups . size		621172	0					
ANR	621566	MemberAccess	asr . securityGroups . size		621172	0					
ANR	621567	MemberAccess	asr . securityGroups		621172	0					
ANR	621568	Identifier	asr		621172	0					
ANR	621569	Identifier	securityGroups		621172	1					
ANR	621570	Identifier	size		621172	1					
ANR	621571	ArgumentList			621172	1					
ANR	621572	UnaryExpression	++ j	803:76:31964:31966	621172	2	True				
ANR	621573	IncDec	++		621172	0					
ANR	621574	Identifier	j		621172	1					
ANR	621575	CompoundStatement		52:82:2370:2370	621172	3					
ANR	621576	ExpressionStatement	resultList . append ( asr . securityGroups [ j ] . c_str ( ) )	804:28:32000:32050	621172	0	True				
ANR	621577	CallExpression	resultList . append ( asr . securityGroups [ j ] . c_str ( ) )		621172	0					
ANR	621578	Callee	resultList . append		621172	0					
ANR	621579	MemberAccess	resultList . append		621172	0					
ANR	621580	Identifier	resultList		621172	0					
ANR	621581	Identifier	append		621172	1					
ANR	621582	ArgumentList	asr . securityGroups [ j ] . c_str ( )		621172	1					
ANR	621583	Argument	asr . securityGroups [ j ] . c_str ( )		621172	0					
ANR	621584	CallExpression	asr . securityGroups [ j ] . c_str ( )		621172	0					
ANR	621585	Callee	asr . securityGroups [ j ] . c_str		621172	0					
ANR	621586	MemberAccess	asr . securityGroups [ j ] . c_str		621172	0					
ANR	621587	ArrayIndexing	asr . securityGroups [ j ]		621172	0					
ANR	621588	MemberAccess	asr . securityGroups		621172	0					
ANR	621589	Identifier	asr		621172	0					
ANR	621590	Identifier	securityGroups		621172	1					
ANR	621591	Identifier	j		621172	1					
ANR	621592	Identifier	c_str		621172	1					
ANR	621593	ArgumentList			621172	1					
ANR	621594	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	809:12:32144:32208	621172	2	True				
ANR	621595	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		621172	0		=			
ANR	621596	Identifier	result_string		621172	0					
ANR	621597	CallExpression	"create_success_result ( requestID , & resultList )"		621172	1					
ANR	621598	Callee	create_success_result		621172	0					
ANR	621599	Identifier	create_success_result		621172	0					
ANR	621600	ArgumentList	requestID		621172	1					
ANR	621601	Argument	requestID		621172	0					
ANR	621602	Identifier	requestID		621172	0					
ANR	621603	Argument	& resultList		621172	1					
ANR	621604	UnaryOperationExpression	& resultList		621172	0					
ANR	621605	UnaryOperator	&		621172	0					
ANR	621606	Identifier	resultList		621172	1					
ANR	621607	ReturnStatement	return true ;	813:4:32231:32242	621172	11	True				
ANR	621608	Identifier	true		621172	0					
ANR	621609	ReturnType	bool		621172	1					
ANR	621610	Identifier	AmazonVMStatus :: workerFunction		621172	2					
ANR	621611	ParameterList	"char * * argv , int argc , std :: string & result_string"		621172	3					
ANR	621612	Parameter	char * * argv	752:36:29548:29558	621172	0	True				
ANR	621613	ParameterType	char * *		621172	0					
ANR	621614	Identifier	argv		621172	1					
ANR	621615	Parameter	int argc	752:49:29561:29568	621172	1	True				
ANR	621616	ParameterType	int		621172	0					
ANR	621617	Identifier	argc		621172	1					
ANR	621618	Parameter	std :: string & result_string	752:59:29571:29596	621172	2	True				
ANR	621619	ParameterType	std :: string &		621172	0					
ANR	621620	Identifier	result_string		621172	1					
ANR	621621	CFGEntryNode	ENTRY		621172		True				
ANR	621622	CFGExitNode	EXIT		621172		True				
ANR	621623	Symbol	asr		621172						
ANR	621624	Symbol	asr . keyname		621172						
ANR	621625	Symbol	asr . securityGroups . size		621172						
ANR	621626	Symbol	asr . securityGroups		621172						
ANR	621627	Symbol	* argv		621172						
ANR	621628	Symbol	& requestID		621172						
ANR	621629	Symbol	sRequest . errorMessage		621172						
ANR	621630	Symbol	* sRequest . results		621172						
ANR	621631	Symbol	sRequest . SendRequest		621172						
ANR	621632	Symbol	create_success_result		621172						
ANR	621633	Symbol	asr . instance_id . c_str		621172						
ANR	621634	Symbol	sRequest . secretKeyFile		621172						
ANR	621635	Symbol	sRequest . errorCode . c_str		621172						
ANR	621636	Symbol	result_string		621172						
ANR	621637	Symbol	* sRequest		621172						
ANR	621638	Symbol	strcasecmp		621172						
ANR	621639	Symbol	asr . status		621172						
ANR	621640	Symbol	strcmp		621172						
ANR	621641	Symbol	asr . public_dns		621172						
ANR	621642	Symbol	NULL		621172						
ANR	621643	Symbol	asr . ami_id . c_str		621172						
ANR	621644	Symbol	sRequest . accessKeyFile		621172						
ANR	621645	Symbol	AMAZON_STATUS_RUNNING		621172						
ANR	621646	Symbol	sRequest		621172						
ANR	621647	Symbol	instanceID		621172						
ANR	621648	Symbol	* asr . securityGroups		621172						
ANR	621649	Symbol	requestID		621172						
ANR	621650	Symbol	create_failure_result		621172						
ANR	621651	Symbol	asr . status . c_str		621172						
ANR	621652	Symbol	true		621172						
ANR	621653	Symbol	asr . instance_id		621172						
ANR	621654	Symbol	sRequest . errorCode		621172						
ANR	621655	Symbol	resultList		621172						
ANR	621656	Symbol	asr . private_dns		621172						
ANR	621657	Symbol	sRequest . errorMessage . c_str		621172						
ANR	621658	Symbol	argv		621172						
ANR	621659	Symbol	sRequest . serviceURL		621172						
ANR	621660	Symbol	& resultList		621172						
ANR	621661	Symbol	* asr		621172						
ANR	621662	Symbol	sRequest . query_parameters		621172						
ANR	621663	Symbol	argc		621172						
ANR	621664	Symbol	sRequest . results		621172						
ANR	621665	Symbol	D_ALWAYS		621172						
ANR	621666	Symbol	false		621172						
ANR	621667	Symbol	nullStringIfEmpty		621172						
ANR	621668	Symbol	i		621172						
ANR	621669	Symbol	j		621172						
ANR	621670	Symbol	verify_min_number_args		621172						
ANR	621671	Symbol	* sRequest . query_parameters		621172						
ANR	621672	Symbol	NULLSTRING		621172						
ANR	621673	Symbol	asr . ami_id		621172						
ANR	621674	Symbol	sRequest . results . size		621172						
ANR	621675	Symbol	* i		621172						
ANR	621676	Symbol	* j		621172						
ANR	621677	Symbol	asr . securityGroups [ j ] . c_str		621172						
ANR	621678	Function	AmazonVMStatusAll :: AmazonVMStatusAll	818:0:32327:32368							
ANR	621679	FunctionDef	AmazonVMStatusAll :: AmazonVMStatusAll ()		621678	0					
ANR	621680	CompoundStatement		818:39:32366:32368	621678	0					
ANR	621681	Identifier	AmazonVMStatusAll :: AmazonVMStatusAll		621678	1					
ANR	621682	ParameterList			621678	2					
ANR	621683	CFGEntryNode	ENTRY		621678		True				
ANR	621684	CFGExitNode	EXIT		621678		True				
ANR	621685	Function	AmazonVMStatusAll :: ~AmazonVMStatusAll	820:0:32371:32413							
ANR	621686	FunctionDef	AmazonVMStatusAll :: ~AmazonVMStatusAll ()		621685	0					
ANR	621687	CompoundStatement		820:40:32411:32413	621685	0					
ANR	621688	Identifier	AmazonVMStatusAll :: ~AmazonVMStatusAll		621685	1					
ANR	621689	ParameterList			621685	2					
ANR	621690	CFGEntryNode	ENTRY		621685		True				
ANR	621691	CFGExitNode	EXIT		621685		True				
ANR	621692	ClassDef	vmStatusUD_t	822:0:32416:33336							
ANR	621693	ClassDef	vmStatusTags_t	823:4:32442:32634							
ANR	621694	DeclStmt									
ANR	621695	Decl							enum vmStatusTags_t	enum vmStatusTags_t	vmStatusTags
ANR	621696	DeclStmt									
ANR	621697	Decl							bool	bool	inInstancesSet
ANR	621698	DeclStmt									
ANR	621699	Decl							bool	bool	inInstance
ANR	621700	DeclStmt									
ANR	621701	Decl							bool	bool	inInstanceState
ANR	621702	DeclStmt									
ANR	621703	Decl							vmStatusTags	vmStatusTags	inWhichTag
ANR	621704	DeclStmt									
ANR	621705	Decl							AmazonStatusResult	AmazonStatusResult *	currentResult
ANR	621706	DeclStmt									
ANR	621707	Decl							std :: vector < AmazonStatusResult >	std :: vector < AmazonStatusResult > &	results
ANR	621708	DeclStmt									
ANR	621709	Decl							bool	bool	inGroupSet
ANR	621710	DeclStmt									
ANR	621711	Decl							bool	bool	inGroup
ANR	621712	DeclStmt									
ANR	621713	Decl							std :: string	std :: string	currentSecurityGroup
ANR	621714	DeclStmt									
ANR	621715	Decl							std :: vector < std :: string >	std :: vector < std :: string >	currentSecurityGroups
ANR	621716	Function	vmStatusUD_t	848:4:33015:33334							
ANR	621717	FunctionDef	vmStatusUD_t (std :: vector < AmazonStatusResult > & asrList)		621716	12					
ANR	621718	CompoundStatement		856:25:33332:33334	621716	0					
ANR	621719	Identifier	vmStatusUD_t		621716	1					
ANR	621720	ParameterList	std :: vector < AmazonStatusResult > & asrList		621716	2					
ANR	621721	Parameter	std :: vector < AmazonStatusResult > & asrList	848:18:33029:33071	621716	0	True				
ANR	621722	ParameterType	std :: vector < AmazonStatusResult > &		621716	0					
ANR	621723	Identifier	asrList		621716	1					
ANR	621724	CFGEntryNode	ENTRY		621716		True				
ANR	621725	CFGExitNode	EXIT		621716		True				
ANR	621726	Symbol	asrList		621716						
ANR	621727	DeclStmt									
ANR	621728	Decl							struct vmStatusUD_t	struct vmStatusUD_t	vmStatusUD
ANR	621729	DeclStmt									
ANR	621730	Decl							vmStatusUD	vmStatusUD *	vsud
ANR	621731	Function	vmStatusCDH	910:0:35314:36788							
ANR	621732	FunctionDef	"vmStatusCDH (void * vUserData , const XML_Char * cdata , int len)"		621731	0					
ANR	621733	CompoundStatement		910:70:35384:36788	621731	0					
ANR	621734	IdentifierDeclStatement	vmStatusUD * vsud = ( vmStatusUD * ) vUserData ;	911:4:35390:35433	621731	0	True				
ANR	621735	IdentifierDecl	* vsud = ( vmStatusUD * ) vUserData		621731	0					
ANR	621736	IdentifierDeclType	vmStatusUD *		621731	0					
ANR	621737	Identifier	vsud		621731	1					
ANR	621738	AssignmentExpression	* vsud = ( vmStatusUD * ) vUserData		621731	2		=			
ANR	621739	Identifier	vsud		621731	0					
ANR	621740	CastExpression	( vmStatusUD * ) vUserData		621731	1					
ANR	621741	CastTarget	vmStatusUD *		621731	0					
ANR	621742	Identifier	vUserData		621731	1					
ANR	621743	IfStatement	if ( vsud -> inGroup )		621731	1					
ANR	621744	Condition	vsud -> inGroup	913:8:35444:35456	621731	0	True				
ANR	621745	PtrMemberAccess	vsud -> inGroup		621731	0					
ANR	621746	Identifier	vsud		621731	0					
ANR	621747	Identifier	inGroup		621731	1					
ANR	621748	CompoundStatement		4:24:75:75	621731	1					
ANR	621749	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> currentSecurityGroup )"	914:8:35470:35548	621731	0	True				
ANR	621750	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> currentSecurityGroup )"		621731	0					
ANR	621751	Callee	appendToString		621731	0					
ANR	621752	Identifier	appendToString		621731	0					
ANR	621753	ArgumentList	( void * ) cdata		621731	1					
ANR	621754	Argument	( void * ) cdata		621731	0					
ANR	621755	CastExpression	( void * ) cdata		621731	0					
ANR	621756	CastTarget	void *		621731	0					
ANR	621757	Identifier	cdata		621731	1					
ANR	621758	Argument	len		621731	1					
ANR	621759	Identifier	len		621731	0					
ANR	621760	Argument	1		621731	2					
ANR	621761	PrimaryExpression	1		621731	0					
ANR	621762	Argument	( void * ) & vsud -> currentSecurityGroup		621731	3					
ANR	621763	CastExpression	( void * ) & vsud -> currentSecurityGroup		621731	0					
ANR	621764	CastTarget	void *		621731	0					
ANR	621765	UnaryOperationExpression	& vsud -> currentSecurityGroup		621731	1					
ANR	621766	UnaryOperator	&		621731	0					
ANR	621767	PtrMemberAccess	vsud -> currentSecurityGroup		621731	1					
ANR	621768	Identifier	vsud		621731	0					
ANR	621769	Identifier	currentSecurityGroup		621731	1					
ANR	621770	ReturnStatement	return ;	915:8:35558:35564	621731	1	True				
ANR	621771	IfStatement	if ( vsud -> currentResult == NULL )		621731	2					
ANR	621772	Condition	vsud -> currentResult == NULL	918:8:35581:35607	621731	0	True				
ANR	621773	EqualityExpression	vsud -> currentResult == NULL		621731	0		==			
ANR	621774	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621775	Identifier	vsud		621731	0					
ANR	621776	Identifier	currentResult		621731	1					
ANR	621777	Identifier	NULL		621731	1					
ANR	621778	CompoundStatement		9:38:226:226	621731	1					
ANR	621779	ReturnStatement	return ;	919:8:35621:35627	621731	0	True				
ANR	621780	IdentifierDeclStatement	std :: string * targetString = NULL ;	922:4:35640:35673	621731	3	True				
ANR	621781	IdentifierDecl	* targetString = NULL		621731	0					
ANR	621782	IdentifierDeclType	std :: string *		621731	0					
ANR	621783	Identifier	targetString		621731	1					
ANR	621784	AssignmentExpression	* targetString = NULL		621731	2		=			
ANR	621785	Identifier	NULL		621731	0					
ANR	621786	Identifier	NULL		621731	1					
ANR	621787	SwitchStatement	switch ( vsud -> inWhichTag )		621731	4					
ANR	621788	Condition	vsud -> inWhichTag	923:12:35687:35702	621731	0	True				
ANR	621789	PtrMemberAccess	vsud -> inWhichTag		621731	0					
ANR	621790	Identifier	vsud		621731	0					
ANR	621791	Identifier	inWhichTag		621731	1					
ANR	621792	CompoundStatement		14:31:321:321	621731	1					
ANR	621793	Label	case vmStatusUD :: NONE :	924:8:35716:35737	621731	0	True				
ANR	621794	Identifier	vmStatusUD :: NONE		621731	0					
ANR	621795	ReturnStatement	return ;	925:12:35751:35757	621731	1	True				
ANR	621796	Label	case vmStatusUD :: INSTANCE_ID :	927:8:35776:35804	621731	2	True				
ANR	621797	Identifier	vmStatusUD :: INSTANCE_ID		621731	0					
ANR	621798	ExpressionStatement	targetString = & vsud -> currentResult -> instance_id	928:12:35818:35867	621731	3	True				
ANR	621799	AssignmentExpression	targetString = & vsud -> currentResult -> instance_id		621731	0		=			
ANR	621800	Identifier	targetString		621731	0					
ANR	621801	UnaryOperationExpression	& vsud -> currentResult -> instance_id		621731	1					
ANR	621802	UnaryOperator	&		621731	0					
ANR	621803	PtrMemberAccess	vsud -> currentResult -> instance_id		621731	1					
ANR	621804	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621805	Identifier	vsud		621731	0					
ANR	621806	Identifier	currentResult		621731	1					
ANR	621807	Identifier	instance_id		621731	1					
ANR	621808	BreakStatement	break ;	929:12:35881:35886	621731	4	True				
ANR	621809	Label	case vmStatusUD :: STATUS :	931:8:35905:35928	621731	5	True				
ANR	621810	Identifier	vmStatusUD :: STATUS		621731	0					
ANR	621811	ExpressionStatement	targetString = & vsud -> currentResult -> status	932:12:35942:35986	621731	6	True				
ANR	621812	AssignmentExpression	targetString = & vsud -> currentResult -> status		621731	0		=			
ANR	621813	Identifier	targetString		621731	0					
ANR	621814	UnaryOperationExpression	& vsud -> currentResult -> status		621731	1					
ANR	621815	UnaryOperator	&		621731	0					
ANR	621816	PtrMemberAccess	vsud -> currentResult -> status		621731	1					
ANR	621817	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621818	Identifier	vsud		621731	0					
ANR	621819	Identifier	currentResult		621731	1					
ANR	621820	Identifier	status		621731	1					
ANR	621821	BreakStatement	break ;	933:12:36000:36005	621731	7	True				
ANR	621822	Label	case vmStatusUD :: AMI_ID :	935:8:36024:36047	621731	8	True				
ANR	621823	Identifier	vmStatusUD :: AMI_ID		621731	0					
ANR	621824	ExpressionStatement	targetString = & vsud -> currentResult -> ami_id	936:12:36061:36105	621731	9	True				
ANR	621825	AssignmentExpression	targetString = & vsud -> currentResult -> ami_id		621731	0		=			
ANR	621826	Identifier	targetString		621731	0					
ANR	621827	UnaryOperationExpression	& vsud -> currentResult -> ami_id		621731	1					
ANR	621828	UnaryOperator	&		621731	0					
ANR	621829	PtrMemberAccess	vsud -> currentResult -> ami_id		621731	1					
ANR	621830	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621831	Identifier	vsud		621731	0					
ANR	621832	Identifier	currentResult		621731	1					
ANR	621833	Identifier	ami_id		621731	1					
ANR	621834	BreakStatement	break ;	937:12:36119:36124	621731	10	True				
ANR	621835	Label	case vmStatusUD :: PRIVATE_DNS :	939:8:36143:36171	621731	11	True				
ANR	621836	Identifier	vmStatusUD :: PRIVATE_DNS		621731	0					
ANR	621837	ExpressionStatement	targetString = & vsud -> currentResult -> private_dns	940:12:36185:36234	621731	12	True				
ANR	621838	AssignmentExpression	targetString = & vsud -> currentResult -> private_dns		621731	0		=			
ANR	621839	Identifier	targetString		621731	0					
ANR	621840	UnaryOperationExpression	& vsud -> currentResult -> private_dns		621731	1					
ANR	621841	UnaryOperator	&		621731	0					
ANR	621842	PtrMemberAccess	vsud -> currentResult -> private_dns		621731	1					
ANR	621843	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621844	Identifier	vsud		621731	0					
ANR	621845	Identifier	currentResult		621731	1					
ANR	621846	Identifier	private_dns		621731	1					
ANR	621847	BreakStatement	break ;	941:12:36248:36253	621731	13	True				
ANR	621848	Label	case vmStatusUD :: PUBLIC_DNS :	943:8:36276:36303	621731	14	True				
ANR	621849	Identifier	vmStatusUD :: PUBLIC_DNS		621731	0					
ANR	621850	ExpressionStatement	targetString = & vsud -> currentResult -> public_dns	944:12:36317:36365	621731	15	True				
ANR	621851	AssignmentExpression	targetString = & vsud -> currentResult -> public_dns		621731	0		=			
ANR	621852	Identifier	targetString		621731	0					
ANR	621853	UnaryOperationExpression	& vsud -> currentResult -> public_dns		621731	1					
ANR	621854	UnaryOperator	&		621731	0					
ANR	621855	PtrMemberAccess	vsud -> currentResult -> public_dns		621731	1					
ANR	621856	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621857	Identifier	vsud		621731	0					
ANR	621858	Identifier	currentResult		621731	1					
ANR	621859	Identifier	public_dns		621731	1					
ANR	621860	BreakStatement	break ;	945:12:36379:36384	621731	16	True				
ANR	621861	Label	case vmStatusUD :: KEY_NAME :	947:8:36395:36420	621731	17	True				
ANR	621862	Identifier	vmStatusUD :: KEY_NAME		621731	0					
ANR	621863	ExpressionStatement	targetString = & vsud -> currentResult -> keyname	948:12:36434:36479	621731	18	True				
ANR	621864	AssignmentExpression	targetString = & vsud -> currentResult -> keyname		621731	0		=			
ANR	621865	Identifier	targetString		621731	0					
ANR	621866	UnaryOperationExpression	& vsud -> currentResult -> keyname		621731	1					
ANR	621867	UnaryOperator	&		621731	0					
ANR	621868	PtrMemberAccess	vsud -> currentResult -> keyname		621731	1					
ANR	621869	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621870	Identifier	vsud		621731	0					
ANR	621871	Identifier	currentResult		621731	1					
ANR	621872	Identifier	keyname		621731	1					
ANR	621873	BreakStatement	break ;	949:12:36493:36498	621731	19	True				
ANR	621874	Label	case vmStatusUD :: INSTANCE_TYPE :	951:8:36517:36547	621731	20	True				
ANR	621875	Identifier	vmStatusUD :: INSTANCE_TYPE		621731	0					
ANR	621876	ExpressionStatement	targetString = & vsud -> currentResult -> instancetype	952:12:36561:36611	621731	21	True				
ANR	621877	AssignmentExpression	targetString = & vsud -> currentResult -> instancetype		621731	0		=			
ANR	621878	Identifier	targetString		621731	0					
ANR	621879	UnaryOperationExpression	& vsud -> currentResult -> instancetype		621731	1					
ANR	621880	UnaryOperator	&		621731	0					
ANR	621881	PtrMemberAccess	vsud -> currentResult -> instancetype		621731	1					
ANR	621882	PtrMemberAccess	vsud -> currentResult		621731	0					
ANR	621883	Identifier	vsud		621731	0					
ANR	621884	Identifier	currentResult		621731	1					
ANR	621885	Identifier	instancetype		621731	1					
ANR	621886	BreakStatement	break ;	953:12:36625:36630	621731	22	True				
ANR	621887	Label	default :	955:8:36641:36648	621731	23	True				
ANR	621888	Identifier	default		621731	0					
ANR	621889	ReturnStatement	return ;	957:12:36706:36712	621731	24	True				
ANR	621890	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) targetString )"	960:4:36725:36786	621731	5	True				
ANR	621891	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) targetString )"		621731	0					
ANR	621892	Callee	appendToString		621731	0					
ANR	621893	Identifier	appendToString		621731	0					
ANR	621894	ArgumentList	( void * ) cdata		621731	1					
ANR	621895	Argument	( void * ) cdata		621731	0					
ANR	621896	CastExpression	( void * ) cdata		621731	0					
ANR	621897	CastTarget	void *		621731	0					
ANR	621898	Identifier	cdata		621731	1					
ANR	621899	Argument	len		621731	1					
ANR	621900	Identifier	len		621731	0					
ANR	621901	Argument	1		621731	2					
ANR	621902	PrimaryExpression	1		621731	0					
ANR	621903	Argument	( void * ) targetString		621731	3					
ANR	621904	CastExpression	( void * ) targetString		621731	0					
ANR	621905	CastTarget	void *		621731	0					
ANR	621906	Identifier	targetString		621731	1					
ANR	621907	ReturnType	void		621731	1					
ANR	621908	Identifier	vmStatusCDH		621731	2					
ANR	621909	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		621731	3					
ANR	621910	Parameter	void * vUserData	910:18:35332:35347	621731	0	True				
ANR	621911	ParameterType	void *		621731	0					
ANR	621912	Identifier	vUserData		621731	1					
ANR	621913	Parameter	const XML_Char * cdata	910:36:35350:35371	621731	1	True				
ANR	621914	ParameterType	const XML_Char *		621731	0					
ANR	621915	Identifier	cdata		621731	1					
ANR	621916	Parameter	int len	910:60:35374:35380	621731	2	True				
ANR	621917	ParameterType	int		621731	0					
ANR	621918	Identifier	len		621731	1					
ANR	621919	CFGEntryNode	ENTRY		621731		True				
ANR	621920	CFGExitNode	EXIT		621731		True				
ANR	621921	Symbol	vsud -> currentResult		621731						
ANR	621922	Symbol	NULL		621731						
ANR	621923	Symbol	& vsud -> currentResult -> instancetype		621731						
ANR	621924	Symbol	targetString		621731						
ANR	621925	Symbol	& vsud -> currentResult -> ami_id		621731						
ANR	621926	Symbol	* vsud		621731						
ANR	621927	Symbol	& vsud -> currentResult -> instance_id		621731						
ANR	621928	Symbol	& vsud -> currentResult -> public_dns		621731						
ANR	621929	Symbol	vsud -> inWhichTag		621731						
ANR	621930	Symbol	& vsud -> currentResult -> private_dns		621731						
ANR	621931	Symbol	& vsud -> currentSecurityGroup		621731						
ANR	621932	Symbol	cdata		621731						
ANR	621933	Symbol	& vsud -> currentResult -> keyname		621731						
ANR	621934	Symbol	len		621731						
ANR	621935	Symbol	vUserData		621731						
ANR	621936	Symbol	vsud		621731						
ANR	621937	Symbol	vsud -> inGroup		621731						
ANR	621938	Symbol	& vsud -> currentResult -> status		621731						
ANR	621939	Function	vmStatusEEH	963:0:36791:38341							
ANR	621940	FunctionDef	"vmStatusEEH (void * vUserData , const XML_Char * name)"		621939	0					
ANR	621941	CompoundStatement		963:60:36851:38341	621939	0					
ANR	621942	IdentifierDeclStatement	vmStatusUD * vsud = ( vmStatusUD * ) vUserData ;	964:4:36857:36900	621939	0	True				
ANR	621943	IdentifierDecl	* vsud = ( vmStatusUD * ) vUserData		621939	0					
ANR	621944	IdentifierDeclType	vmStatusUD *		621939	0					
ANR	621945	Identifier	vsud		621939	1					
ANR	621946	AssignmentExpression	* vsud = ( vmStatusUD * ) vUserData		621939	2		=			
ANR	621947	Identifier	vsud		621939	0					
ANR	621948	CastExpression	( vmStatusUD * ) vUserData		621939	1					
ANR	621949	CastTarget	vmStatusUD *		621939	0					
ANR	621950	Identifier	vUserData		621939	1					
ANR	621951	IfStatement	if ( vsud -> inGroupSet )		621939	1					
ANR	621952	Condition	vsud -> inGroupSet	966:8:36911:36926	621939	0	True				
ANR	621953	PtrMemberAccess	vsud -> inGroupSet		621939	0					
ANR	621954	Identifier	vsud		621939	0					
ANR	621955	Identifier	inGroupSet		621939	1					
ANR	621956	CompoundStatement		4:27:78:78	621939	1					
ANR	621957	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""groupId"" ) == 0 )"		621939	0					
ANR	621958	Condition	"strcasecmp ( ( const char * ) name , ""groupId"" ) == 0"	967:12:36944:36991	621939	0	True				
ANR	621959	EqualityExpression	"strcasecmp ( ( const char * ) name , ""groupId"" ) == 0"		621939	0		==			
ANR	621960	CallExpression	"strcasecmp ( ( const char * ) name , ""groupId"" )"		621939	0					
ANR	621961	Callee	strcasecmp		621939	0					
ANR	621962	Identifier	strcasecmp		621939	0					
ANR	621963	ArgumentList	( const char * ) name		621939	1					
ANR	621964	Argument	( const char * ) name		621939	0					
ANR	621965	CastExpression	( const char * ) name		621939	0					
ANR	621966	CastTarget	const char *		621939	0					
ANR	621967	Identifier	name		621939	1					
ANR	621968	Argument	"""groupId"""		621939	1					
ANR	621969	PrimaryExpression	"""groupId"""		621939	0					
ANR	621970	PrimaryExpression	0		621939	1					
ANR	621971	CompoundStatement		5:63:143:143	621939	1					
ANR	621972	ExpressionStatement	vsud -> currentSecurityGroups . push_back ( vsud -> currentSecurityGroup )	969:12:37139:37206	621939	0	True				
ANR	621973	CallExpression	vsud -> currentSecurityGroups . push_back ( vsud -> currentSecurityGroup )		621939	0					
ANR	621974	Callee	vsud -> currentSecurityGroups . push_back		621939	0					
ANR	621975	MemberAccess	vsud -> currentSecurityGroups . push_back		621939	0					
ANR	621976	PtrMemberAccess	vsud -> currentSecurityGroups		621939	0					
ANR	621977	Identifier	vsud		621939	0					
ANR	621978	Identifier	currentSecurityGroups		621939	1					
ANR	621979	Identifier	push_back		621939	1					
ANR	621980	ArgumentList	vsud -> currentSecurityGroup		621939	1					
ANR	621981	Argument	vsud -> currentSecurityGroup		621939	0					
ANR	621982	PtrMemberAccess	vsud -> currentSecurityGroup		621939	0					
ANR	621983	Identifier	vsud		621939	0					
ANR	621984	Identifier	currentSecurityGroup		621939	1					
ANR	621985	ExpressionStatement	vsud -> currentSecurityGroup . erase ( )	970:12:37220:37254	621939	1	True				
ANR	621986	CallExpression	vsud -> currentSecurityGroup . erase ( )		621939	0					
ANR	621987	Callee	vsud -> currentSecurityGroup . erase		621939	0					
ANR	621988	MemberAccess	vsud -> currentSecurityGroup . erase		621939	0					
ANR	621989	PtrMemberAccess	vsud -> currentSecurityGroup		621939	0					
ANR	621990	Identifier	vsud		621939	0					
ANR	621991	Identifier	currentSecurityGroup		621939	1					
ANR	621992	Identifier	erase		621939	1					
ANR	621993	ArgumentList			621939	1					
ANR	621994	ExpressionStatement	vsud -> inGroup = false	971:12:37268:37289	621939	2	True				
ANR	621995	AssignmentExpression	vsud -> inGroup = false		621939	0		=			
ANR	621996	PtrMemberAccess	vsud -> inGroup		621939	0					
ANR	621997	Identifier	vsud		621939	0					
ANR	621998	Identifier	inGroup		621939	1					
ANR	621999	Identifier	false		621939	1					
ANR	622000	ReturnStatement	return ;	972:12:37303:37309	621939	3	True				
ANR	622001	ElseStatement	else		621939	0					
ANR	622002	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""groupSet"" ) == 0 )"		621939	0					
ANR	622003	Condition	"strcasecmp ( ( const char * ) name , ""groupSet"" ) == 0"	973:19:37330:37378	621939	0	True				
ANR	622004	EqualityExpression	"strcasecmp ( ( const char * ) name , ""groupSet"" ) == 0"		621939	0		==			
ANR	622005	CallExpression	"strcasecmp ( ( const char * ) name , ""groupSet"" )"		621939	0					
ANR	622006	Callee	strcasecmp		621939	0					
ANR	622007	Identifier	strcasecmp		621939	0					
ANR	622008	ArgumentList	( const char * ) name		621939	1					
ANR	622009	Argument	( const char * ) name		621939	0					
ANR	622010	CastExpression	( const char * ) name		621939	0					
ANR	622011	CastTarget	const char *		621939	0					
ANR	622012	Identifier	name		621939	1					
ANR	622013	Argument	"""groupSet"""		621939	1					
ANR	622014	PrimaryExpression	"""groupSet"""		621939	0					
ANR	622015	PrimaryExpression	0		621939	1					
ANR	622016	CompoundStatement		11:71:530:530	621939	1					
ANR	622017	ExpressionStatement	vsud -> inGroupSet = false	974:12:37396:37420	621939	0	True				
ANR	622018	AssignmentExpression	vsud -> inGroupSet = false		621939	0		=			
ANR	622019	PtrMemberAccess	vsud -> inGroupSet		621939	0					
ANR	622020	Identifier	vsud		621939	0					
ANR	622021	Identifier	inGroupSet		621939	1					
ANR	622022	Identifier	false		621939	1					
ANR	622023	ReturnStatement	return ;	975:12:37434:37440	621939	1	True				
ANR	622024	IfStatement	"if ( vsud -> inInstance && strcasecmp ( ( const char * ) name , ""item"" ) == 0 )"		621939	2					
ANR	622025	Condition	"vsud -> inInstance && strcasecmp ( ( const char * ) name , ""item"" ) == 0"	979:8:37467:37531	621939	0	True				
ANR	622026	AndExpression	"vsud -> inInstance && strcasecmp ( ( const char * ) name , ""item"" ) == 0"		621939	0		&&			
ANR	622027	PtrMemberAccess	vsud -> inInstance		621939	0					
ANR	622028	Identifier	vsud		621939	0					
ANR	622029	Identifier	inInstance		621939	1					
ANR	622030	EqualityExpression	"strcasecmp ( ( const char * ) name , ""item"" ) == 0"		621939	1		==			
ANR	622031	CallExpression	"strcasecmp ( ( const char * ) name , ""item"" )"		621939	0					
ANR	622032	Callee	strcasecmp		621939	0					
ANR	622033	Identifier	strcasecmp		621939	0					
ANR	622034	ArgumentList	( const char * ) name		621939	1					
ANR	622035	Argument	( const char * ) name		621939	0					
ANR	622036	CastExpression	( const char * ) name		621939	0					
ANR	622037	CastTarget	const char *		621939	0					
ANR	622038	Identifier	name		621939	1					
ANR	622039	Argument	"""item"""		621939	1					
ANR	622040	PrimaryExpression	"""item"""		621939	0					
ANR	622041	PrimaryExpression	0		621939	1					
ANR	622042	CompoundStatement		17:76:683:683	621939	1					
ANR	622043	ExpressionStatement	vsud -> currentResult -> securityGroups = vsud -> currentSecurityGroups	983:8:37758:37823	621939	0	True				
ANR	622044	AssignmentExpression	vsud -> currentResult -> securityGroups = vsud -> currentSecurityGroups		621939	0		=			
ANR	622045	PtrMemberAccess	vsud -> currentResult -> securityGroups		621939	0					
ANR	622046	PtrMemberAccess	vsud -> currentResult		621939	0					
ANR	622047	Identifier	vsud		621939	0					
ANR	622048	Identifier	currentResult		621939	1					
ANR	622049	Identifier	securityGroups		621939	1					
ANR	622050	PtrMemberAccess	vsud -> currentSecurityGroups		621939	1					
ANR	622051	Identifier	vsud		621939	0					
ANR	622052	Identifier	currentSecurityGroups		621939	1					
ANR	622053	ExpressionStatement	vsud -> results . push_back ( * vsud -> currentResult )	984:8:37833:37881	621939	1	True				
ANR	622054	CallExpression	vsud -> results . push_back ( * vsud -> currentResult )		621939	0					
ANR	622055	Callee	vsud -> results . push_back		621939	0					
ANR	622056	MemberAccess	vsud -> results . push_back		621939	0					
ANR	622057	PtrMemberAccess	vsud -> results		621939	0					
ANR	622058	Identifier	vsud		621939	0					
ANR	622059	Identifier	results		621939	1					
ANR	622060	Identifier	push_back		621939	1					
ANR	622061	ArgumentList	* vsud -> currentResult		621939	1					
ANR	622062	Argument	* vsud -> currentResult		621939	0					
ANR	622063	UnaryOperationExpression	* vsud -> currentResult		621939	0					
ANR	622064	UnaryOperator	*		621939	0					
ANR	622065	PtrMemberAccess	vsud -> currentResult		621939	1					
ANR	622066	Identifier	vsud		621939	0					
ANR	622067	Identifier	currentResult		621939	1					
ANR	622068	Statement	delete	985:8:37891:37896	621939	2	True				
ANR	622069	ExpressionStatement	vsud -> currentResult	985:15:37898:37917	621939	3	True				
ANR	622070	PtrMemberAccess	vsud -> currentResult		621939	0					
ANR	622071	Identifier	vsud		621939	0					
ANR	622072	Identifier	currentResult		621939	1					
ANR	622073	ExpressionStatement	vsud -> currentResult = NULL	986:8:37927:37953	621939	4	True				
ANR	622074	AssignmentExpression	vsud -> currentResult = NULL		621939	0		=			
ANR	622075	PtrMemberAccess	vsud -> currentResult		621939	0					
ANR	622076	Identifier	vsud		621939	0					
ANR	622077	Identifier	currentResult		621939	1					
ANR	622078	Identifier	NULL		621939	1					
ANR	622079	ExpressionStatement	vsud -> inInstance = false	987:8:37963:37987	621939	5	True				
ANR	622080	AssignmentExpression	vsud -> inInstance = false		621939	0		=			
ANR	622081	PtrMemberAccess	vsud -> inInstance		621939	0					
ANR	622082	Identifier	vsud		621939	0					
ANR	622083	Identifier	inInstance		621939	1					
ANR	622084	Identifier	false		621939	1					
ANR	622085	ReturnStatement	return ;	988:8:37997:38003	621939	6	True				
ANR	622086	IfStatement	"if ( vsud -> inInstancesSet && strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0 )"		621939	3					
ANR	622087	Condition	"vsud -> inInstancesSet && strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0"	991:8:38024:38100	621939	0	True				
ANR	622088	AndExpression	"vsud -> inInstancesSet && strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0"		621939	0		&&			
ANR	622089	PtrMemberAccess	vsud -> inInstancesSet		621939	0					
ANR	622090	Identifier	vsud		621939	0					
ANR	622091	Identifier	inInstancesSet		621939	1					
ANR	622092	EqualityExpression	"strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0"		621939	1		==			
ANR	622093	CallExpression	"strcasecmp ( ( const char * ) name , ""instancesSet"" )"		621939	0					
ANR	622094	Callee	strcasecmp		621939	0					
ANR	622095	Identifier	strcasecmp		621939	0					
ANR	622096	ArgumentList	( const char * ) name		621939	1					
ANR	622097	Argument	( const char * ) name		621939	0					
ANR	622098	CastExpression	( const char * ) name		621939	0					
ANR	622099	CastTarget	const char *		621939	0					
ANR	622100	Identifier	name		621939	1					
ANR	622101	Argument	"""instancesSet"""		621939	1					
ANR	622102	PrimaryExpression	"""instancesSet"""		621939	0					
ANR	622103	PrimaryExpression	0		621939	1					
ANR	622104	CompoundStatement		29:88:1252:1252	621939	1					
ANR	622105	ExpressionStatement	vsud -> inInstancesSet = false	992:8:38114:38142	621939	0	True				
ANR	622106	AssignmentExpression	vsud -> inInstancesSet = false		621939	0		=			
ANR	622107	PtrMemberAccess	vsud -> inInstancesSet		621939	0					
ANR	622108	Identifier	vsud		621939	0					
ANR	622109	Identifier	inInstancesSet		621939	1					
ANR	622110	Identifier	false		621939	1					
ANR	622111	ReturnStatement	return ;	993:8:38152:38158	621939	1	True				
ANR	622112	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""instanceState"" ) == 0 )"		621939	4					
ANR	622113	Condition	"strcasecmp ( ( const char * ) name , ""instanceState"" ) == 0"	996:8:38175:38228	621939	0	True				
ANR	622114	EqualityExpression	"strcasecmp ( ( const char * ) name , ""instanceState"" ) == 0"		621939	0		==			
ANR	622115	CallExpression	"strcasecmp ( ( const char * ) name , ""instanceState"" )"		621939	0					
ANR	622116	Callee	strcasecmp		621939	0					
ANR	622117	Identifier	strcasecmp		621939	0					
ANR	622118	ArgumentList	( const char * ) name		621939	1					
ANR	622119	Argument	( const char * ) name		621939	0					
ANR	622120	CastExpression	( const char * ) name		621939	0					
ANR	622121	CastTarget	const char *		621939	0					
ANR	622122	Identifier	name		621939	1					
ANR	622123	Argument	"""instanceState"""		621939	1					
ANR	622124	PrimaryExpression	"""instanceState"""		621939	0					
ANR	622125	PrimaryExpression	0		621939	1					
ANR	622126	CompoundStatement		34:65:1380:1380	621939	1					
ANR	622127	ExpressionStatement	vsud -> inInstanceState = false	997:8:38242:38271	621939	0	True				
ANR	622128	AssignmentExpression	vsud -> inInstanceState = false		621939	0		=			
ANR	622129	PtrMemberAccess	vsud -> inInstanceState		621939	0					
ANR	622130	Identifier	vsud		621939	0					
ANR	622131	Identifier	inInstanceState		621939	1					
ANR	622132	Identifier	false		621939	1					
ANR	622133	ReturnStatement	return ;	998:8:38281:38287	621939	1	True				
ANR	622134	ExpressionStatement	vsud -> inWhichTag = vmStatusUD :: NONE	1001:4:38304:38339	621939	5	True				
ANR	622135	AssignmentExpression	vsud -> inWhichTag = vmStatusUD :: NONE		621939	0		=			
ANR	622136	PtrMemberAccess	vsud -> inWhichTag		621939	0					
ANR	622137	Identifier	vsud		621939	0					
ANR	622138	Identifier	inWhichTag		621939	1					
ANR	622139	Identifier	vmStatusUD :: NONE		621939	1					
ANR	622140	ReturnType	void		621939	1					
ANR	622141	Identifier	vmStatusEEH		621939	2					
ANR	622142	ParameterList	"void * vUserData , const XML_Char * name"		621939	3					
ANR	622143	Parameter	void * vUserData	963:18:36809:36824	621939	0	True				
ANR	622144	ParameterType	void *		621939	0					
ANR	622145	Identifier	vUserData		621939	1					
ANR	622146	Parameter	const XML_Char * name	963:36:36827:36847	621939	1	True				
ANR	622147	ParameterType	const XML_Char *		621939	0					
ANR	622148	Identifier	name		621939	1					
ANR	622149	CFGEntryNode	ENTRY		621939		True				
ANR	622150	CFGExitNode	EXIT		621939		True				
ANR	622151	Symbol	vsud -> currentResult		621939						
ANR	622152	Symbol	NULL		621939						
ANR	622153	Symbol	* * vsud		621939						
ANR	622154	Symbol	vsud -> inInstanceState		621939						
ANR	622155	Symbol	* vsud		621939						
ANR	622156	Symbol	false		621939						
ANR	622157	Symbol	vmStatusUD :: NONE		621939						
ANR	622158	Symbol	vsud -> inWhichTag		621939						
ANR	622159	Symbol	vsud -> currentSecurityGroups		621939						
ANR	622160	Symbol	vsud -> currentResult -> securityGroups		621939						
ANR	622161	Symbol	* vsud -> currentResult		621939						
ANR	622162	Symbol	vsud -> results		621939						
ANR	622163	Symbol	vsud -> currentSecurityGroup		621939						
ANR	622164	Symbol	vUserData		621939						
ANR	622165	Symbol	vsud -> inInstance		621939						
ANR	622166	Symbol	name		621939						
ANR	622167	Symbol	vsud -> inGroupSet		621939						
ANR	622168	Symbol	vsud -> inInstancesSet		621939						
ANR	622169	Symbol	vsud		621939						
ANR	622170	Symbol	vsud -> inGroup		621939						
ANR	622171	Symbol	strcasecmp		621939						
ANR	622172	Function	AmazonVMStatusAll :: SendRequest	1004:0:38345:38848							
ANR	622173	FunctionDef	AmazonVMStatusAll :: SendRequest ()		622172	0					
ANR	622174	CompoundStatement		1004:38:38383:38848	622172	0					
ANR	622175	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	1005:4:38389:38431	622172	0	True				
ANR	622176	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		622172	0					
ANR	622177	IdentifierDeclType	bool		622172	0					
ANR	622178	Identifier	result		622172	1					
ANR	622179	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		622172	2		=			
ANR	622180	Identifier	result		622172	0					
ANR	622181	CallExpression	AmazonRequest :: SendRequest ( )		622172	1					
ANR	622182	Callee	AmazonRequest :: SendRequest		622172	0					
ANR	622183	Identifier	AmazonRequest :: SendRequest		622172	0					
ANR	622184	ArgumentList			622172	1					
ANR	622185	IfStatement	if ( result )		622172	1					
ANR	622186	Condition	result	1006:8:38441:38446	622172	0	True				
ANR	622187	Identifier	result		622172	0					
ANR	622188	CompoundStatement		5:8:118:158	622172	1					
ANR	622189	IdentifierDeclStatement	vmStatusUD vsud ( this -> results ) ;	1007:8:38460:38492	622172	0	True				
ANR	622190	IdentifierDecl	vsud ( this -> results )		622172	0					
ANR	622191	IdentifierDeclType	vmStatusUD		622172	0					
ANR	622192	Identifier	vsud		622172	1					
ANR	622193	PtrMemberAccess	this -> results		622172	2					
ANR	622194	Identifier	this		622172	0					
ANR	622195	Identifier	results		622172	1					
ANR	622196	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	1008:8:38502:38542	622172	1	True				
ANR	622197	IdentifierDecl	xp = XML_ParserCreate ( NULL )		622172	0					
ANR	622198	IdentifierDeclType	XML_Parser		622172	0					
ANR	622199	Identifier	xp		622172	1					
ANR	622200	AssignmentExpression	xp = XML_ParserCreate ( NULL )		622172	2		=			
ANR	622201	Identifier	xp		622172	0					
ANR	622202	CallExpression	XML_ParserCreate ( NULL )		622172	1					
ANR	622203	Callee	XML_ParserCreate		622172	0					
ANR	622204	Identifier	XML_ParserCreate		622172	0					
ANR	622205	ArgumentList	NULL		622172	1					
ANR	622206	Argument	NULL		622172	0					
ANR	622207	Identifier	NULL		622172	0					
ANR	622208	ExpressionStatement	"XML_SetElementHandler ( xp , & vmStatusESH , & vmStatusEEH )"	1009:8:38552:38609	622172	2	True				
ANR	622209	CallExpression	"XML_SetElementHandler ( xp , & vmStatusESH , & vmStatusEEH )"		622172	0					
ANR	622210	Callee	XML_SetElementHandler		622172	0					
ANR	622211	Identifier	XML_SetElementHandler		622172	0					
ANR	622212	ArgumentList	xp		622172	1					
ANR	622213	Argument	xp		622172	0					
ANR	622214	Identifier	xp		622172	0					
ANR	622215	Argument	& vmStatusESH		622172	1					
ANR	622216	UnaryOperationExpression	& vmStatusESH		622172	0					
ANR	622217	UnaryOperator	&		622172	0					
ANR	622218	Identifier	vmStatusESH		622172	1					
ANR	622219	Argument	& vmStatusEEH		622172	2					
ANR	622220	UnaryOperationExpression	& vmStatusEEH		622172	0					
ANR	622221	UnaryOperator	&		622172	0					
ANR	622222	Identifier	vmStatusEEH		622172	1					
ANR	622223	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & vmStatusCDH )"	1010:8:38619:38667	622172	3	True				
ANR	622224	CallExpression	"XML_SetCharacterDataHandler ( xp , & vmStatusCDH )"		622172	0					
ANR	622225	Callee	XML_SetCharacterDataHandler		622172	0					
ANR	622226	Identifier	XML_SetCharacterDataHandler		622172	0					
ANR	622227	ArgumentList	xp		622172	1					
ANR	622228	Argument	xp		622172	0					
ANR	622229	Identifier	xp		622172	0					
ANR	622230	Argument	& vmStatusCDH		622172	1					
ANR	622231	UnaryOperationExpression	& vmStatusCDH		622172	0					
ANR	622232	UnaryOperator	&		622172	0					
ANR	622233	Identifier	vmStatusCDH		622172	1					
ANR	622234	ExpressionStatement	"XML_SetUserData ( xp , & vsud )"	1011:8:38677:38706	622172	4	True				
ANR	622235	CallExpression	"XML_SetUserData ( xp , & vsud )"		622172	0					
ANR	622236	Callee	XML_SetUserData		622172	0					
ANR	622237	Identifier	XML_SetUserData		622172	0					
ANR	622238	ArgumentList	xp		622172	1					
ANR	622239	Argument	xp		622172	0					
ANR	622240	Identifier	xp		622172	0					
ANR	622241	Argument	& vsud		622172	1					
ANR	622242	UnaryOperationExpression	& vsud		622172	0					
ANR	622243	UnaryOperator	&		622172	0					
ANR	622244	Identifier	vsud		622172	1					
ANR	622245	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	1012:8:38716:38791	622172	5	True				
ANR	622246	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		622172	0					
ANR	622247	Callee	XML_Parse		622172	0					
ANR	622248	Identifier	XML_Parse		622172	0					
ANR	622249	ArgumentList	xp		622172	1					
ANR	622250	Argument	xp		622172	0					
ANR	622251	Identifier	xp		622172	0					
ANR	622252	Argument	this -> resultString . c_str ( )		622172	1					
ANR	622253	CallExpression	this -> resultString . c_str ( )		622172	0					
ANR	622254	Callee	this -> resultString . c_str		622172	0					
ANR	622255	MemberAccess	this -> resultString . c_str		622172	0					
ANR	622256	PtrMemberAccess	this -> resultString		622172	0					
ANR	622257	Identifier	this		622172	0					
ANR	622258	Identifier	resultString		622172	1					
ANR	622259	Identifier	c_str		622172	1					
ANR	622260	ArgumentList			622172	1					
ANR	622261	Argument	this -> resultString . length ( )		622172	2					
ANR	622262	CallExpression	this -> resultString . length ( )		622172	0					
ANR	622263	Callee	this -> resultString . length		622172	0					
ANR	622264	MemberAccess	this -> resultString . length		622172	0					
ANR	622265	PtrMemberAccess	this -> resultString		622172	0					
ANR	622266	Identifier	this		622172	0					
ANR	622267	Identifier	resultString		622172	1					
ANR	622268	Identifier	length		622172	1					
ANR	622269	ArgumentList			622172	1					
ANR	622270	Argument	1		622172	3					
ANR	622271	PrimaryExpression	1		622172	0					
ANR	622272	ExpressionStatement	XML_ParserFree ( xp )	1013:8:38801:38821	622172	6	True				
ANR	622273	CallExpression	XML_ParserFree ( xp )		622172	0					
ANR	622274	Callee	XML_ParserFree		622172	0					
ANR	622275	Identifier	XML_ParserFree		622172	0					
ANR	622276	ArgumentList	xp		622172	1					
ANR	622277	Argument	xp		622172	0					
ANR	622278	Identifier	xp		622172	0					
ANR	622279	ReturnStatement	return result ;	1015:4:38833:38846	622172	2	True				
ANR	622280	Identifier	result		622172	0					
ANR	622281	ReturnType	bool		622172	1					
ANR	622282	Identifier	AmazonVMStatusAll :: SendRequest		622172	2					
ANR	622283	ParameterList			622172	3					
ANR	622284	CFGEntryNode	ENTRY		622172		True				
ANR	622285	CFGExitNode	EXIT		622172		True				
ANR	622286	Symbol	& vmStatusCDH		622172						
ANR	622287	Symbol	& vmStatusEEH		622172						
ANR	622288	Symbol	NULL		622172						
ANR	622289	Symbol	AmazonRequest :: SendRequest		622172						
ANR	622290	Symbol	this -> resultString		622172						
ANR	622291	Symbol	this -> resultString . length		622172						
ANR	622292	Symbol	this -> resultString . c_str		622172						
ANR	622293	Symbol	this		622172						
ANR	622294	Symbol	result		622172						
ANR	622295	Symbol	* this		622172						
ANR	622296	Symbol	& vmStatusESH		622172						
ANR	622297	Symbol	& vsud		622172						
ANR	622298	Symbol	xp		622172						
ANR	622299	Symbol	vsud		622172						
ANR	622300	Symbol	XML_ParserCreate		622172						
ANR	622301	Function	AmazonVMStatusAll :: workerFunction	1019:0:38936:41428							
ANR	622302	FunctionDef	"AmazonVMStatusAll :: workerFunction (char * * argv , int argc , std :: string & result_string)"		622301	0					
ANR	622303	CompoundStatement		1019:90:39026:41428	622301	0					
ANR	622304	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0 )"	1020:4:39032:39085	622301	0	True				
ANR	622305	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0 )"		622301	0					
ANR	622306	Callee	assert		622301	0					
ANR	622307	Identifier	assert		622301	0					
ANR	622308	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0"		622301	1					
ANR	622309	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0"		622301	0					
ANR	622310	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0"		622301	0		==			
ANR	622311	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" )"		622301	0					
ANR	622312	Callee	strcmp		622301	0					
ANR	622313	Identifier	strcmp		622301	0					
ANR	622314	ArgumentList	argv [ 0 ]		622301	1					
ANR	622315	Argument	argv [ 0 ]		622301	0					
ANR	622316	ArrayIndexing	argv [ 0 ]		622301	0					
ANR	622317	Identifier	argv		622301	0					
ANR	622318	PrimaryExpression	0		622301	1					
ANR	622319	Argument	"""EC2_VM_STATUS_ALL"""		622301	1					
ANR	622320	PrimaryExpression	"""EC2_VM_STATUS_ALL"""		622301	0					
ANR	622321	PrimaryExpression	0		622301	1					
ANR	622322	IdentifierDeclStatement	int requestID ;	1025:4:39276:39289	622301	1	True				
ANR	622323	IdentifierDecl	requestID		622301	0					
ANR	622324	IdentifierDeclType	int		622301	0					
ANR	622325	Identifier	requestID		622301	1					
ANR	622326	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1026:4:39295:39326	622301	2	True				
ANR	622327	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		622301	0					
ANR	622328	Callee	get_int		622301	0					
ANR	622329	Identifier	get_int		622301	0					
ANR	622330	ArgumentList	argv [ 1 ]		622301	1					
ANR	622331	Argument	argv [ 1 ]		622301	0					
ANR	622332	ArrayIndexing	argv [ 1 ]		622301	0					
ANR	622333	Identifier	argv		622301	0					
ANR	622334	PrimaryExpression	1		622301	1					
ANR	622335	Argument	& requestID		622301	1					
ANR	622336	UnaryOperationExpression	& requestID		622301	0					
ANR	622337	UnaryOperator	&		622301	0					
ANR	622338	Identifier	requestID		622301	1					
ANR	622339	IfStatement	"if ( ! verify_min_number_args ( argc , 5 ) )"		622301	3					
ANR	622340	Condition	"! verify_min_number_args ( argc , 5 )"	1028:8:39341:39375	622301	0	True				
ANR	622341	UnaryOperationExpression	"! verify_min_number_args ( argc , 5 )"		622301	0					
ANR	622342	UnaryOperator	!		622301	0					
ANR	622343	CallExpression	"verify_min_number_args ( argc , 5 )"		622301	1					
ANR	622344	Callee	verify_min_number_args		622301	0					
ANR	622345	Identifier	verify_min_number_args		622301	0					
ANR	622346	ArgumentList	argc		622301	1					
ANR	622347	Argument	argc		622301	0					
ANR	622348	Identifier	argc		622301	0					
ANR	622349	Argument	5		622301	1					
ANR	622350	PrimaryExpression	5		622301	0					
ANR	622351	CompoundStatement		10:46:352:352	622301	1					
ANR	622352	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1029:8:39389:39464	622301	0	True				
ANR	622353	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		622301	0		=			
ANR	622354	Identifier	result_string		622301	0					
ANR	622355	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		622301	1					
ANR	622356	Callee	create_failure_result		622301	0					
ANR	622357	Identifier	create_failure_result		622301	0					
ANR	622358	ArgumentList	requestID		622301	1					
ANR	622359	Argument	requestID		622301	0					
ANR	622360	Identifier	requestID		622301	0					
ANR	622361	Argument	"""Wrong_Argument_Number"""		622301	1					
ANR	622362	PrimaryExpression	"""Wrong_Argument_Number"""		622301	0					
ANR	622363	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"	1030:8:39474:39586	622301	1	True				
ANR	622364	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"		622301	0					
ANR	622365	Callee	dprintf		622301	0					
ANR	622366	Identifier	dprintf		622301	0					
ANR	622367	ArgumentList	D_ALWAYS		622301	1					
ANR	622368	Argument	D_ALWAYS		622301	0					
ANR	622369	Identifier	D_ALWAYS		622301	0					
ANR	622370	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		622301	1					
ANR	622371	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		622301	0					
ANR	622372	Argument	argc		622301	2					
ANR	622373	Identifier	argc		622301	0					
ANR	622374	Argument	5		622301	3					
ANR	622375	PrimaryExpression	5		622301	0					
ANR	622376	Argument	argv [ 0 ]		622301	4					
ANR	622377	ArrayIndexing	argv [ 0 ]		622301	0					
ANR	622378	Identifier	argv		622301	0					
ANR	622379	PrimaryExpression	0		622301	1					
ANR	622380	ReturnStatement	return false ;	1032:8:39596:39608	622301	2	True				
ANR	622381	Identifier	false		622301	0					
ANR	622382	IdentifierDeclStatement	AmazonVMStatusAll saRequest ;	1036:4:39670:39697	622301	4	True				
ANR	622383	IdentifierDecl	saRequest		622301	0					
ANR	622384	IdentifierDeclType	AmazonVMStatusAll		622301	0					
ANR	622385	Identifier	saRequest		622301	1					
ANR	622386	ExpressionStatement	saRequest . serviceURL = argv [ 2 ]	1037:4:39703:39733	622301	5	True				
ANR	622387	AssignmentExpression	saRequest . serviceURL = argv [ 2 ]		622301	0		=			
ANR	622388	MemberAccess	saRequest . serviceURL		622301	0					
ANR	622389	Identifier	saRequest		622301	0					
ANR	622390	Identifier	serviceURL		622301	1					
ANR	622391	ArrayIndexing	argv [ 2 ]		622301	1					
ANR	622392	Identifier	argv		622301	0					
ANR	622393	PrimaryExpression	2		622301	1					
ANR	622394	ExpressionStatement	saRequest . accessKeyFile = argv [ 3 ]	1038:4:39739:39772	622301	6	True				
ANR	622395	AssignmentExpression	saRequest . accessKeyFile = argv [ 3 ]		622301	0		=			
ANR	622396	MemberAccess	saRequest . accessKeyFile		622301	0					
ANR	622397	Identifier	saRequest		622301	0					
ANR	622398	Identifier	accessKeyFile		622301	1					
ANR	622399	ArrayIndexing	argv [ 3 ]		622301	1					
ANR	622400	Identifier	argv		622301	0					
ANR	622401	PrimaryExpression	3		622301	1					
ANR	622402	ExpressionStatement	saRequest . secretKeyFile = argv [ 4 ]	1039:4:39778:39811	622301	7	True				
ANR	622403	AssignmentExpression	saRequest . secretKeyFile = argv [ 4 ]		622301	0		=			
ANR	622404	MemberAccess	saRequest . secretKeyFile		622301	0					
ANR	622405	Identifier	saRequest		622301	0					
ANR	622406	Identifier	secretKeyFile		622301	1					
ANR	622407	ArrayIndexing	argv [ 4 ]		622301	1					
ANR	622408	Identifier	argv		622301	0					
ANR	622409	PrimaryExpression	4		622301	1					
ANR	622410	ExpressionStatement	"saRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""	1040:4:39817:39877	622301	8	True				
ANR	622411	AssignmentExpression	"saRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""		622301	0		=			
ANR	622412	ArrayIndexing	"saRequest . query_parameters [ ""Action"" ]"		622301	0					
ANR	622413	MemberAccess	saRequest . query_parameters		622301	0					
ANR	622414	Identifier	saRequest		622301	0					
ANR	622415	Identifier	query_parameters		622301	1					
ANR	622416	PrimaryExpression	"""Action"""		622301	1					
ANR	622417	PrimaryExpression	"""DescribeInstances"""		622301	1					
ANR	622418	IfStatement	if ( ! saRequest . SendRequest ( ) )		622301	9					
ANR	622419	Condition	! saRequest . SendRequest ( )	1043:8:39917:39941	622301	0	True				
ANR	622420	UnaryOperationExpression	! saRequest . SendRequest ( )		622301	0					
ANR	622421	UnaryOperator	!		622301	0					
ANR	622422	CallExpression	saRequest . SendRequest ( )		622301	1					
ANR	622423	Callee	saRequest . SendRequest		622301	0					
ANR	622424	MemberAccess	saRequest . SendRequest		622301	0					
ANR	622425	Identifier	saRequest		622301	0					
ANR	622426	Identifier	SendRequest		622301	1					
ANR	622427	ArgumentList			622301	1					
ANR	622428	CompoundStatement		25:36:918:918	622301	1					
ANR	622429	ExpressionStatement	"result_string = create_failure_result ( requestID , saRequest . errorMessage . c_str ( ) , saRequest . errorCode . c_str ( ) )"	1044:8:39955:40090	622301	0	True				
ANR	622430	AssignmentExpression	"result_string = create_failure_result ( requestID , saRequest . errorMessage . c_str ( ) , saRequest . errorCode . c_str ( ) )"		622301	0		=			
ANR	622431	Identifier	result_string		622301	0					
ANR	622432	CallExpression	"create_failure_result ( requestID , saRequest . errorMessage . c_str ( ) , saRequest . errorCode . c_str ( ) )"		622301	1					
ANR	622433	Callee	create_failure_result		622301	0					
ANR	622434	Identifier	create_failure_result		622301	0					
ANR	622435	ArgumentList	requestID		622301	1					
ANR	622436	Argument	requestID		622301	0					
ANR	622437	Identifier	requestID		622301	0					
ANR	622438	Argument	saRequest . errorMessage . c_str ( )		622301	1					
ANR	622439	CallExpression	saRequest . errorMessage . c_str ( )		622301	0					
ANR	622440	Callee	saRequest . errorMessage . c_str		622301	0					
ANR	622441	MemberAccess	saRequest . errorMessage . c_str		622301	0					
ANR	622442	MemberAccess	saRequest . errorMessage		622301	0					
ANR	622443	Identifier	saRequest		622301	0					
ANR	622444	Identifier	errorMessage		622301	1					
ANR	622445	Identifier	c_str		622301	1					
ANR	622446	ArgumentList			622301	1					
ANR	622447	Argument	saRequest . errorCode . c_str ( )		622301	2					
ANR	622448	CallExpression	saRequest . errorCode . c_str ( )		622301	0					
ANR	622449	Callee	saRequest . errorCode . c_str		622301	0					
ANR	622450	MemberAccess	saRequest . errorCode . c_str		622301	0					
ANR	622451	MemberAccess	saRequest . errorCode		622301	0					
ANR	622452	Identifier	saRequest		622301	0					
ANR	622453	Identifier	errorCode		622301	1					
ANR	622454	Identifier	c_str		622301	1					
ANR	622455	ArgumentList			622301	1					
ANR	622456	ElseStatement	else		622301	0					
ANR	622457	CompoundStatement		29:11:1076:1076	622301	0					
ANR	622458	IfStatement	if ( saRequest . results . size ( ) == 0 )		622301	0					
ANR	622459	Condition	saRequest . results . size ( ) == 0	1048:12:40117:40145	622301	0	True				
ANR	622460	EqualityExpression	saRequest . results . size ( ) == 0		622301	0		==			
ANR	622461	CallExpression	saRequest . results . size ( )		622301	0					
ANR	622462	Callee	saRequest . results . size		622301	0					
ANR	622463	MemberAccess	saRequest . results . size		622301	0					
ANR	622464	MemberAccess	saRequest . results		622301	0					
ANR	622465	Identifier	saRequest		622301	0					
ANR	622466	Identifier	results		622301	1					
ANR	622467	Identifier	size		622301	1					
ANR	622468	ArgumentList			622301	1					
ANR	622469	PrimaryExpression	0		622301	1					
ANR	622470	CompoundStatement		30:44:1122:1122	622301	1					
ANR	622471	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1049:12:40163:40219	622301	0	True				
ANR	622472	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		622301	0		=			
ANR	622473	Identifier	result_string		622301	0					
ANR	622474	CallExpression	"create_success_result ( requestID , NULL )"		622301	1					
ANR	622475	Callee	create_success_result		622301	0					
ANR	622476	Identifier	create_success_result		622301	0					
ANR	622477	ArgumentList	requestID		622301	1					
ANR	622478	Argument	requestID		622301	0					
ANR	622479	Identifier	requestID		622301	0					
ANR	622480	Argument	NULL		622301	1					
ANR	622481	Identifier	NULL		622301	0					
ANR	622482	ElseStatement	else		622301	0					
ANR	622483	CompoundStatement		33:12:1223:1244	622301	0					
ANR	622484	IdentifierDeclStatement	StringList resultList ;	1051:12:40250:40271	622301	0	True				
ANR	622485	IdentifierDecl	resultList		622301	0					
ANR	622486	IdentifierDeclType	StringList		622301	0					
ANR	622487	Identifier	resultList		622301	1					
ANR	622488	ForStatement	for ( unsigned i = 0 ; i < saRequest . results . size ( ) ; ++ i )		622301	1					
ANR	622489	ForInit	unsigned i = 0 ;	1052:17:40290:40304	622301	0	True				
ANR	622490	IdentifierDeclStatement	unsigned i = 0 ;		622301	0					
ANR	622491	IdentifierDecl	i = 0		622301	0					
ANR	622492	IdentifierDeclType	unsigned		622301	0					
ANR	622493	Identifier	i		622301	1					
ANR	622494	AssignmentExpression	i = 0		622301	2		=			
ANR	622495	Identifier	i		622301	0					
ANR	622496	PrimaryExpression	0		622301	1					
ANR	622497	Condition	i < saRequest . results . size ( )	1052:33:40306:40333	622301	1	True				
ANR	622498	RelationalExpression	i < saRequest . results . size ( )		622301	0		<			
ANR	622499	Identifier	i		622301	0					
ANR	622500	CallExpression	saRequest . results . size ( )		622301	1					
ANR	622501	Callee	saRequest . results . size		622301	0					
ANR	622502	MemberAccess	saRequest . results . size		622301	0					
ANR	622503	MemberAccess	saRequest . results		622301	0					
ANR	622504	Identifier	saRequest		622301	0					
ANR	622505	Identifier	results		622301	1					
ANR	622506	Identifier	size		622301	1					
ANR	622507	ArgumentList			622301	1					
ANR	622508	UnaryExpression	++ i	1052:63:40336:40338	622301	2	True				
ANR	622509	IncDec	++		622301	0					
ANR	622510	Identifier	i		622301	1					
ANR	622511	CompoundStatement		35:16:1333:1380	622301	3					
ANR	622512	IdentifierDeclStatement	AmazonStatusResult & asr = saRequest . results [ i ] ;	1053:16:40360:40407	622301	0	True				
ANR	622513	IdentifierDecl	& asr = saRequest . results [ i ]		622301	0					
ANR	622514	IdentifierDeclType	AmazonStatusResult &		622301	0					
ANR	622515	Identifier	asr		622301	1					
ANR	622516	AssignmentExpression	& asr = saRequest . results [ i ]		622301	2		=			
ANR	622517	Identifier	asr		622301	0					
ANR	622518	ArrayIndexing	saRequest . results [ i ]		622301	1					
ANR	622519	MemberAccess	saRequest . results		622301	0					
ANR	622520	Identifier	saRequest		622301	0					
ANR	622521	Identifier	results		622301	1					
ANR	622522	Identifier	i		622301	1					
ANR	622523	ExpressionStatement	resultList . append ( asr . instance_id . c_str ( ) )	1054:16:40425:40469	622301	1	True				
ANR	622524	CallExpression	resultList . append ( asr . instance_id . c_str ( ) )		622301	0					
ANR	622525	Callee	resultList . append		622301	0					
ANR	622526	MemberAccess	resultList . append		622301	0					
ANR	622527	Identifier	resultList		622301	0					
ANR	622528	Identifier	append		622301	1					
ANR	622529	ArgumentList	asr . instance_id . c_str ( )		622301	1					
ANR	622530	Argument	asr . instance_id . c_str ( )		622301	0					
ANR	622531	CallExpression	asr . instance_id . c_str ( )		622301	0					
ANR	622532	Callee	asr . instance_id . c_str		622301	0					
ANR	622533	MemberAccess	asr . instance_id . c_str		622301	0					
ANR	622534	MemberAccess	asr . instance_id		622301	0					
ANR	622535	Identifier	asr		622301	0					
ANR	622536	Identifier	instance_id		622301	1					
ANR	622537	Identifier	c_str		622301	1					
ANR	622538	ArgumentList			622301	1					
ANR	622539	ExpressionStatement	resultList . append ( asr . status . c_str ( ) )	1055:16:40487:40526	622301	2	True				
ANR	622540	CallExpression	resultList . append ( asr . status . c_str ( ) )		622301	0					
ANR	622541	Callee	resultList . append		622301	0					
ANR	622542	MemberAccess	resultList . append		622301	0					
ANR	622543	Identifier	resultList		622301	0					
ANR	622544	Identifier	append		622301	1					
ANR	622545	ArgumentList	asr . status . c_str ( )		622301	1					
ANR	622546	Argument	asr . status . c_str ( )		622301	0					
ANR	622547	CallExpression	asr . status . c_str ( )		622301	0					
ANR	622548	Callee	asr . status . c_str		622301	0					
ANR	622549	MemberAccess	asr . status . c_str		622301	0					
ANR	622550	MemberAccess	asr . status		622301	0					
ANR	622551	Identifier	asr		622301	0					
ANR	622552	Identifier	status		622301	1					
ANR	622553	Identifier	c_str		622301	1					
ANR	622554	ArgumentList			622301	1					
ANR	622555	ExpressionStatement	resultList . append ( asr . ami_id . c_str ( ) )	1056:16:40544:40583	622301	3	True				
ANR	622556	CallExpression	resultList . append ( asr . ami_id . c_str ( ) )		622301	0					
ANR	622557	Callee	resultList . append		622301	0					
ANR	622558	MemberAccess	resultList . append		622301	0					
ANR	622559	Identifier	resultList		622301	0					
ANR	622560	Identifier	append		622301	1					
ANR	622561	ArgumentList	asr . ami_id . c_str ( )		622301	1					
ANR	622562	Argument	asr . ami_id . c_str ( )		622301	0					
ANR	622563	CallExpression	asr . ami_id . c_str ( )		622301	0					
ANR	622564	Callee	asr . ami_id . c_str		622301	0					
ANR	622565	MemberAccess	asr . ami_id . c_str		622301	0					
ANR	622566	MemberAccess	asr . ami_id		622301	0					
ANR	622567	Identifier	asr		622301	0					
ANR	622568	Identifier	ami_id		622301	1					
ANR	622569	Identifier	c_str		622301	1					
ANR	622570	ArgumentList			622301	1					
ANR	622571	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	1073:12:41328:41392	622301	2	True				
ANR	622572	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		622301	0		=			
ANR	622573	Identifier	result_string		622301	0					
ANR	622574	CallExpression	"create_success_result ( requestID , & resultList )"		622301	1					
ANR	622575	Callee	create_success_result		622301	0					
ANR	622576	Identifier	create_success_result		622301	0					
ANR	622577	ArgumentList	requestID		622301	1					
ANR	622578	Argument	requestID		622301	0					
ANR	622579	Identifier	requestID		622301	0					
ANR	622580	Argument	& resultList		622301	1					
ANR	622581	UnaryOperationExpression	& resultList		622301	0					
ANR	622582	UnaryOperator	&		622301	0					
ANR	622583	Identifier	resultList		622301	1					
ANR	622584	ReturnStatement	return true ;	1077:4:41415:41426	622301	10	True				
ANR	622585	Identifier	true		622301	0					
ANR	622586	ReturnType	bool		622301	1					
ANR	622587	Identifier	AmazonVMStatusAll :: workerFunction		622301	2					
ANR	622588	ParameterList	"char * * argv , int argc , std :: string & result_string"		622301	3					
ANR	622589	Parameter	char * * argv	1019:39:38975:38985	622301	0	True				
ANR	622590	ParameterType	char * *		622301	0					
ANR	622591	Identifier	argv		622301	1					
ANR	622592	Parameter	int argc	1019:52:38988:38995	622301	1	True				
ANR	622593	ParameterType	int		622301	0					
ANR	622594	Identifier	argc		622301	1					
ANR	622595	Parameter	std :: string & result_string	1019:62:38998:39023	622301	2	True				
ANR	622596	ParameterType	std :: string &		622301	0					
ANR	622597	Identifier	result_string		622301	1					
ANR	622598	CFGEntryNode	ENTRY		622301		True				
ANR	622599	CFGExitNode	EXIT		622301		True				
ANR	622600	Symbol	saRequest . accessKeyFile		622301						
ANR	622601	Symbol	saRequest . errorCode . c_str		622301						
ANR	622602	Symbol	asr		622301						
ANR	622603	Symbol	saRequest . serviceURL		622301						
ANR	622604	Symbol	saRequest . secretKeyFile		622301						
ANR	622605	Symbol	* argv		622301						
ANR	622606	Symbol	argv		622301						
ANR	622607	Symbol	& requestID		622301						
ANR	622608	Symbol	& resultList		622301						
ANR	622609	Symbol	create_success_result		622301						
ANR	622610	Symbol	asr . instance_id . c_str		622301						
ANR	622611	Symbol	saRequest . results . size		622301						
ANR	622612	Symbol	result_string		622301						
ANR	622613	Symbol	saRequest . errorCode		622301						
ANR	622614	Symbol	asr . status		622301						
ANR	622615	Symbol	saRequest . errorMessage . c_str		622301						
ANR	622616	Symbol	argc		622301						
ANR	622617	Symbol	strcmp		622301						
ANR	622618	Symbol	saRequest . errorMessage		622301						
ANR	622619	Symbol	* saRequest		622301						
ANR	622620	Symbol	NULL		622301						
ANR	622621	Symbol	D_ALWAYS		622301						
ANR	622622	Symbol	false		622301						
ANR	622623	Symbol	asr . ami_id . c_str		622301						
ANR	622624	Symbol	i		622301						
ANR	622625	Symbol	verify_min_number_args		622301						
ANR	622626	Symbol	saRequest . results		622301						
ANR	622627	Symbol	asr . ami_id		622301						
ANR	622628	Symbol	saRequest . query_parameters		622301						
ANR	622629	Symbol	* i		622301						
ANR	622630	Symbol	saRequest . SendRequest		622301						
ANR	622631	Symbol	* saRequest . results		622301						
ANR	622632	Symbol	requestID		622301						
ANR	622633	Symbol	create_failure_result		622301						
ANR	622634	Symbol	saRequest		622301						
ANR	622635	Symbol	asr . status . c_str		622301						
ANR	622636	Symbol	true		622301						
ANR	622637	Symbol	* saRequest . query_parameters		622301						
ANR	622638	Symbol	asr . instance_id		622301						
ANR	622639	Symbol	resultList		622301						
ANR	622640	Function	AmazonVMRunningKeypair :: AmazonVMRunningKeypair	1082:0:41511:41562							
ANR	622641	FunctionDef	AmazonVMRunningKeypair :: AmazonVMRunningKeypair ()		622640	0					
ANR	622642	CompoundStatement		1082:49:41560:41562	622640	0					
ANR	622643	Identifier	AmazonVMRunningKeypair :: AmazonVMRunningKeypair		622640	1					
ANR	622644	ParameterList			622640	2					
ANR	622645	CFGEntryNode	ENTRY		622640		True				
ANR	622646	CFGExitNode	EXIT		622640		True				
ANR	622647	Function	AmazonVMRunningKeypair :: ~AmazonVMRunningKeypair	1084:0:41565:41617							
ANR	622648	FunctionDef	AmazonVMRunningKeypair :: ~AmazonVMRunningKeypair ()		622647	0					
ANR	622649	CompoundStatement		1084:50:41615:41617	622647	0					
ANR	622650	Identifier	AmazonVMRunningKeypair :: ~AmazonVMRunningKeypair		622647	1					
ANR	622651	ParameterList			622647	2					
ANR	622652	CFGEntryNode	ENTRY		622647		True				
ANR	622653	CFGExitNode	EXIT		622647		True				
ANR	622654	Function	AmazonVMRunningKeypair :: workerFunction	1087:0:41710:43688							
ANR	622655	FunctionDef	"AmazonVMRunningKeypair :: workerFunction (char * * argv , int argc , std :: string & result_string)"		622654	0					
ANR	622656	CompoundStatement		1087:95:41805:43688	622654	0					
ANR	622657	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0 )"	1088:4:41811:41869	622654	0	True				
ANR	622658	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0 )"		622654	0					
ANR	622659	Callee	assert		622654	0					
ANR	622660	Identifier	assert		622654	0					
ANR	622661	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0"		622654	1					
ANR	622662	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0"		622654	0					
ANR	622663	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0"		622654	0		==			
ANR	622664	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" )"		622654	0					
ANR	622665	Callee	strcmp		622654	0					
ANR	622666	Identifier	strcmp		622654	0					
ANR	622667	ArgumentList	argv [ 0 ]		622654	1					
ANR	622668	Argument	argv [ 0 ]		622654	0					
ANR	622669	ArrayIndexing	argv [ 0 ]		622654	0					
ANR	622670	Identifier	argv		622654	0					
ANR	622671	PrimaryExpression	0		622654	1					
ANR	622672	Argument	"""EC2_VM_RUNNING_KEYPAIR"""		622654	1					
ANR	622673	PrimaryExpression	"""EC2_VM_RUNNING_KEYPAIR"""		622654	0					
ANR	622674	PrimaryExpression	0		622654	1					
ANR	622675	IdentifierDeclStatement	int requestID ;	1093:4:42060:42073	622654	1	True				
ANR	622676	IdentifierDecl	requestID		622654	0					
ANR	622677	IdentifierDeclType	int		622654	0					
ANR	622678	Identifier	requestID		622654	1					
ANR	622679	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1094:4:42079:42110	622654	2	True				
ANR	622680	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		622654	0					
ANR	622681	Callee	get_int		622654	0					
ANR	622682	Identifier	get_int		622654	0					
ANR	622683	ArgumentList	argv [ 1 ]		622654	1					
ANR	622684	Argument	argv [ 1 ]		622654	0					
ANR	622685	ArrayIndexing	argv [ 1 ]		622654	0					
ANR	622686	Identifier	argv		622654	0					
ANR	622687	PrimaryExpression	1		622654	1					
ANR	622688	Argument	& requestID		622654	1					
ANR	622689	UnaryOperationExpression	& requestID		622654	0					
ANR	622690	UnaryOperator	&		622654	0					
ANR	622691	Identifier	requestID		622654	1					
ANR	622692	IfStatement	"if ( ! verify_min_number_args ( argc , 5 ) )"		622654	3					
ANR	622693	Condition	"! verify_min_number_args ( argc , 5 )"	1096:8:42125:42159	622654	0	True				
ANR	622694	UnaryOperationExpression	"! verify_min_number_args ( argc , 5 )"		622654	0					
ANR	622695	UnaryOperator	!		622654	0					
ANR	622696	CallExpression	"verify_min_number_args ( argc , 5 )"		622654	1					
ANR	622697	Callee	verify_min_number_args		622654	0					
ANR	622698	Identifier	verify_min_number_args		622654	0					
ANR	622699	ArgumentList	argc		622654	1					
ANR	622700	Argument	argc		622654	0					
ANR	622701	Identifier	argc		622654	0					
ANR	622702	Argument	5		622654	1					
ANR	622703	PrimaryExpression	5		622654	0					
ANR	622704	CompoundStatement		10:46:357:357	622654	1					
ANR	622705	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1097:8:42173:42248	622654	0	True				
ANR	622706	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		622654	0		=			
ANR	622707	Identifier	result_string		622654	0					
ANR	622708	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		622654	1					
ANR	622709	Callee	create_failure_result		622654	0					
ANR	622710	Identifier	create_failure_result		622654	0					
ANR	622711	ArgumentList	requestID		622654	1					
ANR	622712	Argument	requestID		622654	0					
ANR	622713	Identifier	requestID		622654	0					
ANR	622714	Argument	"""Wrong_Argument_Number"""		622654	1					
ANR	622715	PrimaryExpression	"""Wrong_Argument_Number"""		622654	0					
ANR	622716	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"	1098:8:42258:42370	622654	1	True				
ANR	622717	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"		622654	0					
ANR	622718	Callee	dprintf		622654	0					
ANR	622719	Identifier	dprintf		622654	0					
ANR	622720	ArgumentList	D_ALWAYS		622654	1					
ANR	622721	Argument	D_ALWAYS		622654	0					
ANR	622722	Identifier	D_ALWAYS		622654	0					
ANR	622723	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		622654	1					
ANR	622724	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		622654	0					
ANR	622725	Argument	argc		622654	2					
ANR	622726	Identifier	argc		622654	0					
ANR	622727	Argument	5		622654	3					
ANR	622728	PrimaryExpression	5		622654	0					
ANR	622729	Argument	argv [ 0 ]		622654	4					
ANR	622730	ArrayIndexing	argv [ 0 ]		622654	0					
ANR	622731	Identifier	argv		622654	0					
ANR	622732	PrimaryExpression	0		622654	1					
ANR	622733	ReturnStatement	return false ;	1100:8:42380:42392	622654	2	True				
ANR	622734	Identifier	false		622654	0					
ANR	622735	IdentifierDeclStatement	AmazonVMRunningKeypair rkpRequest ;	1104:4:42454:42487	622654	4	True				
ANR	622736	IdentifierDecl	rkpRequest		622654	0					
ANR	622737	IdentifierDeclType	AmazonVMRunningKeypair		622654	0					
ANR	622738	Identifier	rkpRequest		622654	1					
ANR	622739	ExpressionStatement	rkpRequest . serviceURL = argv [ 2 ]	1105:4:42493:42524	622654	5	True				
ANR	622740	AssignmentExpression	rkpRequest . serviceURL = argv [ 2 ]		622654	0		=			
ANR	622741	MemberAccess	rkpRequest . serviceURL		622654	0					
ANR	622742	Identifier	rkpRequest		622654	0					
ANR	622743	Identifier	serviceURL		622654	1					
ANR	622744	ArrayIndexing	argv [ 2 ]		622654	1					
ANR	622745	Identifier	argv		622654	0					
ANR	622746	PrimaryExpression	2		622654	1					
ANR	622747	ExpressionStatement	rkpRequest . accessKeyFile = argv [ 3 ]	1106:4:42530:42564	622654	6	True				
ANR	622748	AssignmentExpression	rkpRequest . accessKeyFile = argv [ 3 ]		622654	0		=			
ANR	622749	MemberAccess	rkpRequest . accessKeyFile		622654	0					
ANR	622750	Identifier	rkpRequest		622654	0					
ANR	622751	Identifier	accessKeyFile		622654	1					
ANR	622752	ArrayIndexing	argv [ 3 ]		622654	1					
ANR	622753	Identifier	argv		622654	0					
ANR	622754	PrimaryExpression	3		622654	1					
ANR	622755	ExpressionStatement	rkpRequest . secretKeyFile = argv [ 4 ]	1107:4:42570:42604	622654	7	True				
ANR	622756	AssignmentExpression	rkpRequest . secretKeyFile = argv [ 4 ]		622654	0		=			
ANR	622757	MemberAccess	rkpRequest . secretKeyFile		622654	0					
ANR	622758	Identifier	rkpRequest		622654	0					
ANR	622759	Identifier	secretKeyFile		622654	1					
ANR	622760	ArrayIndexing	argv [ 4 ]		622654	1					
ANR	622761	Identifier	argv		622654	0					
ANR	622762	PrimaryExpression	4		622654	1					
ANR	622763	ExpressionStatement	"rkpRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""	1108:4:42610:42671	622654	8	True				
ANR	622764	AssignmentExpression	"rkpRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""		622654	0		=			
ANR	622765	ArrayIndexing	"rkpRequest . query_parameters [ ""Action"" ]"		622654	0					
ANR	622766	MemberAccess	rkpRequest . query_parameters		622654	0					
ANR	622767	Identifier	rkpRequest		622654	0					
ANR	622768	Identifier	query_parameters		622654	1					
ANR	622769	PrimaryExpression	"""Action"""		622654	1					
ANR	622770	PrimaryExpression	"""DescribeInstances"""		622654	1					
ANR	622771	IfStatement	if ( ! rkpRequest . SendRequest ( ) )		622654	9					
ANR	622772	Condition	! rkpRequest . SendRequest ( )	1111:8:42711:42736	622654	0	True				
ANR	622773	UnaryOperationExpression	! rkpRequest . SendRequest ( )		622654	0					
ANR	622774	UnaryOperator	!		622654	0					
ANR	622775	CallExpression	rkpRequest . SendRequest ( )		622654	1					
ANR	622776	Callee	rkpRequest . SendRequest		622654	0					
ANR	622777	MemberAccess	rkpRequest . SendRequest		622654	0					
ANR	622778	Identifier	rkpRequest		622654	0					
ANR	622779	Identifier	SendRequest		622654	1					
ANR	622780	ArgumentList			622654	1					
ANR	622781	CompoundStatement		25:37:934:934	622654	1					
ANR	622782	ExpressionStatement	"result_string = create_failure_result ( requestID , rkpRequest . errorMessage . c_str ( ) , rkpRequest . errorCode . c_str ( ) )"	1112:8:42750:42887	622654	0	True				
ANR	622783	AssignmentExpression	"result_string = create_failure_result ( requestID , rkpRequest . errorMessage . c_str ( ) , rkpRequest . errorCode . c_str ( ) )"		622654	0		=			
ANR	622784	Identifier	result_string		622654	0					
ANR	622785	CallExpression	"create_failure_result ( requestID , rkpRequest . errorMessage . c_str ( ) , rkpRequest . errorCode . c_str ( ) )"		622654	1					
ANR	622786	Callee	create_failure_result		622654	0					
ANR	622787	Identifier	create_failure_result		622654	0					
ANR	622788	ArgumentList	requestID		622654	1					
ANR	622789	Argument	requestID		622654	0					
ANR	622790	Identifier	requestID		622654	0					
ANR	622791	Argument	rkpRequest . errorMessage . c_str ( )		622654	1					
ANR	622792	CallExpression	rkpRequest . errorMessage . c_str ( )		622654	0					
ANR	622793	Callee	rkpRequest . errorMessage . c_str		622654	0					
ANR	622794	MemberAccess	rkpRequest . errorMessage . c_str		622654	0					
ANR	622795	MemberAccess	rkpRequest . errorMessage		622654	0					
ANR	622796	Identifier	rkpRequest		622654	0					
ANR	622797	Identifier	errorMessage		622654	1					
ANR	622798	Identifier	c_str		622654	1					
ANR	622799	ArgumentList			622654	1					
ANR	622800	Argument	rkpRequest . errorCode . c_str ( )		622654	2					
ANR	622801	CallExpression	rkpRequest . errorCode . c_str ( )		622654	0					
ANR	622802	Callee	rkpRequest . errorCode . c_str		622654	0					
ANR	622803	MemberAccess	rkpRequest . errorCode . c_str		622654	0					
ANR	622804	MemberAccess	rkpRequest . errorCode		622654	0					
ANR	622805	Identifier	rkpRequest		622654	0					
ANR	622806	Identifier	errorCode		622654	1					
ANR	622807	Identifier	c_str		622654	1					
ANR	622808	ArgumentList			622654	1					
ANR	622809	ElseStatement	else		622654	0					
ANR	622810	CompoundStatement		29:11:1094:1094	622654	0					
ANR	622811	IfStatement	if ( rkpRequest . results . size ( ) == 0 )		622654	0					
ANR	622812	Condition	rkpRequest . results . size ( ) == 0	1116:12:42914:42943	622654	0	True				
ANR	622813	EqualityExpression	rkpRequest . results . size ( ) == 0		622654	0		==			
ANR	622814	CallExpression	rkpRequest . results . size ( )		622654	0					
ANR	622815	Callee	rkpRequest . results . size		622654	0					
ANR	622816	MemberAccess	rkpRequest . results . size		622654	0					
ANR	622817	MemberAccess	rkpRequest . results		622654	0					
ANR	622818	Identifier	rkpRequest		622654	0					
ANR	622819	Identifier	results		622654	1					
ANR	622820	Identifier	size		622654	1					
ANR	622821	ArgumentList			622654	1					
ANR	622822	PrimaryExpression	0		622654	1					
ANR	622823	CompoundStatement		30:45:1141:1141	622654	1					
ANR	622824	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1117:12:42961:43017	622654	0	True				
ANR	622825	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		622654	0		=			
ANR	622826	Identifier	result_string		622654	0					
ANR	622827	CallExpression	"create_success_result ( requestID , NULL )"		622654	1					
ANR	622828	Callee	create_success_result		622654	0					
ANR	622829	Identifier	create_success_result		622654	0					
ANR	622830	ArgumentList	requestID		622654	1					
ANR	622831	Argument	requestID		622654	0					
ANR	622832	Identifier	requestID		622654	0					
ANR	622833	Argument	NULL		622654	1					
ANR	622834	Identifier	NULL		622654	0					
ANR	622835	ElseStatement	else		622654	0					
ANR	622836	CompoundStatement		33:12:1242:1263	622654	0					
ANR	622837	IdentifierDeclStatement	StringList resultList ;	1119:12:43048:43069	622654	0	True				
ANR	622838	IdentifierDecl	resultList		622654	0					
ANR	622839	IdentifierDeclType	StringList		622654	0					
ANR	622840	Identifier	resultList		622654	1					
ANR	622841	ForStatement	for ( unsigned i = 0 ; i < rkpRequest . results . size ( ) ; ++ i )		622654	1					
ANR	622842	ForInit	unsigned i = 0 ;	1120:17:43088:43102	622654	0	True				
ANR	622843	IdentifierDeclStatement	unsigned i = 0 ;		622654	0					
ANR	622844	IdentifierDecl	i = 0		622654	0					
ANR	622845	IdentifierDeclType	unsigned		622654	0					
ANR	622846	Identifier	i		622654	1					
ANR	622847	AssignmentExpression	i = 0		622654	2		=			
ANR	622848	Identifier	i		622654	0					
ANR	622849	PrimaryExpression	0		622654	1					
ANR	622850	Condition	i < rkpRequest . results . size ( )	1120:33:43104:43132	622654	1	True				
ANR	622851	RelationalExpression	i < rkpRequest . results . size ( )		622654	0		<			
ANR	622852	Identifier	i		622654	0					
ANR	622853	CallExpression	rkpRequest . results . size ( )		622654	1					
ANR	622854	Callee	rkpRequest . results . size		622654	0					
ANR	622855	MemberAccess	rkpRequest . results . size		622654	0					
ANR	622856	MemberAccess	rkpRequest . results		622654	0					
ANR	622857	Identifier	rkpRequest		622654	0					
ANR	622858	Identifier	results		622654	1					
ANR	622859	Identifier	size		622654	1					
ANR	622860	ArgumentList			622654	1					
ANR	622861	UnaryExpression	++ i	1120:64:43135:43137	622654	2	True				
ANR	622862	IncDec	++		622654	0					
ANR	622863	Identifier	i		622654	1					
ANR	622864	CompoundStatement		35:16:1353:1401	622654	3					
ANR	622865	IdentifierDeclStatement	AmazonStatusResult & asr = rkpRequest . results [ i ] ;	1121:16:43159:43207	622654	0	True				
ANR	622866	IdentifierDecl	& asr = rkpRequest . results [ i ]		622654	0					
ANR	622867	IdentifierDeclType	AmazonStatusResult &		622654	0					
ANR	622868	Identifier	asr		622654	1					
ANR	622869	AssignmentExpression	& asr = rkpRequest . results [ i ]		622654	2		=			
ANR	622870	Identifier	asr		622654	0					
ANR	622871	ArrayIndexing	rkpRequest . results [ i ]		622654	1					
ANR	622872	MemberAccess	rkpRequest . results		622654	0					
ANR	622873	Identifier	rkpRequest		622654	0					
ANR	622874	Identifier	results		622654	1					
ANR	622875	Identifier	i		622654	1					
ANR	622876	IfStatement	if ( ! asr . keyname . empty ( ) )		622654	1					
ANR	622877	Condition	! asr . keyname . empty ( )	1125:20:43378:43398	622654	0	True				
ANR	622878	UnaryOperationExpression	! asr . keyname . empty ( )		622654	0					
ANR	622879	UnaryOperator	!		622654	0					
ANR	622880	CallExpression	asr . keyname . empty ( )		622654	1					
ANR	622881	Callee	asr . keyname . empty		622654	0					
ANR	622882	MemberAccess	asr . keyname . empty		622654	0					
ANR	622883	MemberAccess	asr . keyname		622654	0					
ANR	622884	Identifier	asr		622654	0					
ANR	622885	Identifier	keyname		622654	1					
ANR	622886	Identifier	empty		622654	1					
ANR	622887	ArgumentList			622654	1					
ANR	622888	CompoundStatement		39:44:1596:1596	622654	1					
ANR	622889	ExpressionStatement	resultList . append ( asr . instance_id . c_str ( ) )	1126:20:43424:43468	622654	0	True				
ANR	622890	CallExpression	resultList . append ( asr . instance_id . c_str ( ) )		622654	0					
ANR	622891	Callee	resultList . append		622654	0					
ANR	622892	MemberAccess	resultList . append		622654	0					
ANR	622893	Identifier	resultList		622654	0					
ANR	622894	Identifier	append		622654	1					
ANR	622895	ArgumentList	asr . instance_id . c_str ( )		622654	1					
ANR	622896	Argument	asr . instance_id . c_str ( )		622654	0					
ANR	622897	CallExpression	asr . instance_id . c_str ( )		622654	0					
ANR	622898	Callee	asr . instance_id . c_str		622654	0					
ANR	622899	MemberAccess	asr . instance_id . c_str		622654	0					
ANR	622900	MemberAccess	asr . instance_id		622654	0					
ANR	622901	Identifier	asr		622654	0					
ANR	622902	Identifier	instance_id		622654	1					
ANR	622903	Identifier	c_str		622654	1					
ANR	622904	ArgumentList			622654	1					
ANR	622905	ExpressionStatement	resultList . append ( asr . keyname . c_str ( ) )	1127:20:43490:43530	622654	1	True				
ANR	622906	CallExpression	resultList . append ( asr . keyname . c_str ( ) )		622654	0					
ANR	622907	Callee	resultList . append		622654	0					
ANR	622908	MemberAccess	resultList . append		622654	0					
ANR	622909	Identifier	resultList		622654	0					
ANR	622910	Identifier	append		622654	1					
ANR	622911	ArgumentList	asr . keyname . c_str ( )		622654	1					
ANR	622912	Argument	asr . keyname . c_str ( )		622654	0					
ANR	622913	CallExpression	asr . keyname . c_str ( )		622654	0					
ANR	622914	Callee	asr . keyname . c_str		622654	0					
ANR	622915	MemberAccess	asr . keyname . c_str		622654	0					
ANR	622916	MemberAccess	asr . keyname		622654	0					
ANR	622917	Identifier	asr		622654	0					
ANR	622918	Identifier	keyname		622654	1					
ANR	622919	Identifier	c_str		622654	1					
ANR	622920	ArgumentList			622654	1					
ANR	622921	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	1130:12:43576:43640	622654	2	True				
ANR	622922	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		622654	0		=			
ANR	622923	Identifier	result_string		622654	0					
ANR	622924	CallExpression	"create_success_result ( requestID , & resultList )"		622654	1					
ANR	622925	Callee	create_success_result		622654	0					
ANR	622926	Identifier	create_success_result		622654	0					
ANR	622927	ArgumentList	requestID		622654	1					
ANR	622928	Argument	requestID		622654	0					
ANR	622929	Identifier	requestID		622654	0					
ANR	622930	Argument	& resultList		622654	1					
ANR	622931	UnaryOperationExpression	& resultList		622654	0					
ANR	622932	UnaryOperator	&		622654	0					
ANR	622933	Identifier	resultList		622654	1					
ANR	622934	ReturnStatement	return true ;	1134:4:43675:43686	622654	10	True				
ANR	622935	Identifier	true		622654	0					
ANR	622936	ReturnType	bool		622654	1					
ANR	622937	Identifier	AmazonVMRunningKeypair :: workerFunction		622654	2					
ANR	622938	ParameterList	"char * * argv , int argc , std :: string & result_string"		622654	3					
ANR	622939	Parameter	char * * argv	1087:44:41754:41764	622654	0	True				
ANR	622940	ParameterType	char * *		622654	0					
ANR	622941	Identifier	argv		622654	1					
ANR	622942	Parameter	int argc	1087:57:41767:41774	622654	1	True				
ANR	622943	ParameterType	int		622654	0					
ANR	622944	Identifier	argc		622654	1					
ANR	622945	Parameter	std :: string & result_string	1087:67:41777:41802	622654	2	True				
ANR	622946	ParameterType	std :: string &		622654	0					
ANR	622947	Identifier	result_string		622654	1					
ANR	622948	CFGEntryNode	ENTRY		622654		True				
ANR	622949	CFGExitNode	EXIT		622654		True				
ANR	622950	Symbol	asr		622654						
ANR	622951	Symbol	rkpRequest . errorCode		622654						
ANR	622952	Symbol	asr . keyname		622654						
ANR	622953	Symbol	rkpRequest . secretKeyFile		622654						
ANR	622954	Symbol	* argv		622654						
ANR	622955	Symbol	argv		622654						
ANR	622956	Symbol	& requestID		622654						
ANR	622957	Symbol	& resultList		622654						
ANR	622958	Symbol	* rkpRequest . results		622654						
ANR	622959	Symbol	create_success_result		622654						
ANR	622960	Symbol	asr . instance_id . c_str		622654						
ANR	622961	Symbol	* rkpRequest . query_parameters		622654						
ANR	622962	Symbol	rkpRequest . errorMessage		622654						
ANR	622963	Symbol	result_string		622654						
ANR	622964	Symbol	asr . keyname . empty		622654						
ANR	622965	Symbol	argc		622654						
ANR	622966	Symbol	strcmp		622654						
ANR	622967	Symbol	rkpRequest		622654						
ANR	622968	Symbol	rkpRequest . errorMessage . c_str		622654						
ANR	622969	Symbol	NULL		622654						
ANR	622970	Symbol	D_ALWAYS		622654						
ANR	622971	Symbol	false		622654						
ANR	622972	Symbol	i		622654						
ANR	622973	Symbol	verify_min_number_args		622654						
ANR	622974	Symbol	rkpRequest . results . size		622654						
ANR	622975	Symbol	rkpRequest . results		622654						
ANR	622976	Symbol	rkpRequest . SendRequest		622654						
ANR	622977	Symbol	asr . keyname . c_str		622654						
ANR	622978	Symbol	* i		622654						
ANR	622979	Symbol	rkpRequest . errorCode . c_str		622654						
ANR	622980	Symbol	requestID		622654						
ANR	622981	Symbol	create_failure_result		622654						
ANR	622982	Symbol	rkpRequest . query_parameters		622654						
ANR	622983	Symbol	true		622654						
ANR	622984	Symbol	rkpRequest . serviceURL		622654						
ANR	622985	Symbol	* rkpRequest		622654						
ANR	622986	Symbol	asr . instance_id		622654						
ANR	622987	Symbol	resultList		622654						
ANR	622988	Symbol	rkpRequest . accessKeyFile		622654						
ANR	622989	Function	AmazonVMCreateKeypair :: AmazonVMCreateKeypair	1139:0:43771:43820							
ANR	622990	FunctionDef	AmazonVMCreateKeypair :: AmazonVMCreateKeypair ()		622989	0					
ANR	622991	CompoundStatement		1139:47:43818:43820	622989	0					
ANR	622992	Identifier	AmazonVMCreateKeypair :: AmazonVMCreateKeypair		622989	1					
ANR	622993	ParameterList			622989	2					
ANR	622994	CFGEntryNode	ENTRY		622989		True				
ANR	622995	CFGExitNode	EXIT		622989		True				
ANR	622996	Function	AmazonVMCreateKeypair :: ~AmazonVMCreateKeypair	1141:0:43823:43873							
ANR	622997	FunctionDef	AmazonVMCreateKeypair :: ~AmazonVMCreateKeypair ()		622996	0					
ANR	622998	CompoundStatement		1141:48:43871:43873	622996	0					
ANR	622999	Identifier	AmazonVMCreateKeypair :: ~AmazonVMCreateKeypair		622996	1					
ANR	623000	ParameterList			622996	2					
ANR	623001	CFGEntryNode	ENTRY		622996		True				
ANR	623002	CFGExitNode	EXIT		622996		True				
ANR	623003	ClassDef	privateKeyUD_t	1143:0:43876:44008							
ANR	623004	DeclStmt									
ANR	623005	Decl							bool	bool	inKeyMaterial
ANR	623006	DeclStmt									
ANR	623007	Decl							std :: string	std :: string	keyMaterial
ANR	623008	Function	privateKeyUD_t	1147:4:43962:44006							
ANR	623009	FunctionDef	privateKeyUD_t ()		623008	2					
ANR	623010	CompoundStatement		1147:46:44004:44006	623008	0					
ANR	623011	Identifier	privateKeyUD_t		623008	1					
ANR	623012	ParameterList			623008	2					
ANR	623013	CFGEntryNode	ENTRY		623008		True				
ANR	623014	CFGExitNode	EXIT		623008		True				
ANR	623015	DeclStmt									
ANR	623016	Decl							struct privateKeyUD_t	struct privateKeyUD_t	privateKeyUD
ANR	623017	DeclStmt									
ANR	623018	Decl							privateKeyUD	privateKeyUD *	pkud
ANR	623019	Function	createKeypairCDH	1158:0:44305:44552							
ANR	623020	FunctionDef	"createKeypairCDH (void * vUserData , const XML_Char * cdata , int len)"		623019	0					
ANR	623021	CompoundStatement		1158:75:44380:44552	623019	0					
ANR	623022	IdentifierDeclStatement	privateKeyUD * pkud = ( privateKeyUD * ) vUserData ;	1159:4:44386:44433	623019	0	True				
ANR	623023	IdentifierDecl	* pkud = ( privateKeyUD * ) vUserData		623019	0					
ANR	623024	IdentifierDeclType	privateKeyUD *		623019	0					
ANR	623025	Identifier	pkud		623019	1					
ANR	623026	AssignmentExpression	* pkud = ( privateKeyUD * ) vUserData		623019	2		=			
ANR	623027	Identifier	pkud		623019	0					
ANR	623028	CastExpression	( privateKeyUD * ) vUserData		623019	1					
ANR	623029	CastTarget	privateKeyUD *		623019	0					
ANR	623030	Identifier	vUserData		623019	1					
ANR	623031	IfStatement	if ( pkud -> inKeyMaterial )		623019	1					
ANR	623032	Condition	pkud -> inKeyMaterial	1160:8:44443:44461	623019	0	True				
ANR	623033	PtrMemberAccess	pkud -> inKeyMaterial		623019	0					
ANR	623034	Identifier	pkud		623019	0					
ANR	623035	Identifier	inKeyMaterial		623019	1					
ANR	623036	CompoundStatement		3:30:84:84	623019	1					
ANR	623037	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & pkud -> keyMaterial )"	1161:8:44475:44544	623019	0	True				
ANR	623038	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & pkud -> keyMaterial )"		623019	0					
ANR	623039	Callee	appendToString		623019	0					
ANR	623040	Identifier	appendToString		623019	0					
ANR	623041	ArgumentList	( void * ) cdata		623019	1					
ANR	623042	Argument	( void * ) cdata		623019	0					
ANR	623043	CastExpression	( void * ) cdata		623019	0					
ANR	623044	CastTarget	void *		623019	0					
ANR	623045	Identifier	cdata		623019	1					
ANR	623046	Argument	len		623019	1					
ANR	623047	Identifier	len		623019	0					
ANR	623048	Argument	1		623019	2					
ANR	623049	PrimaryExpression	1		623019	0					
ANR	623050	Argument	( void * ) & pkud -> keyMaterial		623019	3					
ANR	623051	CastExpression	( void * ) & pkud -> keyMaterial		623019	0					
ANR	623052	CastTarget	void *		623019	0					
ANR	623053	UnaryOperationExpression	& pkud -> keyMaterial		623019	1					
ANR	623054	UnaryOperator	&		623019	0					
ANR	623055	PtrMemberAccess	pkud -> keyMaterial		623019	1					
ANR	623056	Identifier	pkud		623019	0					
ANR	623057	Identifier	keyMaterial		623019	1					
ANR	623058	ReturnType	void		623019	1					
ANR	623059	Identifier	createKeypairCDH		623019	2					
ANR	623060	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		623019	3					
ANR	623061	Parameter	void * vUserData	1158:23:44328:44343	623019	0	True				
ANR	623062	ParameterType	void *		623019	0					
ANR	623063	Identifier	vUserData		623019	1					
ANR	623064	Parameter	const XML_Char * cdata	1158:41:44346:44367	623019	1	True				
ANR	623065	ParameterType	const XML_Char *		623019	0					
ANR	623066	Identifier	cdata		623019	1					
ANR	623067	Parameter	int len	1158:65:44370:44376	623019	2	True				
ANR	623068	ParameterType	int		623019	0					
ANR	623069	Identifier	len		623019	1					
ANR	623070	CFGEntryNode	ENTRY		623019		True				
ANR	623071	CFGExitNode	EXIT		623019		True				
ANR	623072	Symbol	pkud -> inKeyMaterial		623019						
ANR	623073	Symbol	& pkud -> keyMaterial		623019						
ANR	623074	Symbol	* pkud		623019						
ANR	623075	Symbol	len		623019						
ANR	623076	Symbol	vUserData		623019						
ANR	623077	Symbol	pkud		623019						
ANR	623078	Symbol	cdata		623019						
ANR	623079	Function	createKeypairEEH	1165:0:44555:44787							
ANR	623080	FunctionDef	"createKeypairEEH (void * vUserData , const XML_Char * name)"		623079	0					
ANR	623081	CompoundStatement		1165:65:44620:44787	623079	0					
ANR	623082	IdentifierDeclStatement	privateKeyUD * pkud = ( privateKeyUD * ) vUserData ;	1166:4:44626:44673	623079	0	True				
ANR	623083	IdentifierDecl	* pkud = ( privateKeyUD * ) vUserData		623079	0					
ANR	623084	IdentifierDeclType	privateKeyUD *		623079	0					
ANR	623085	Identifier	pkud		623079	1					
ANR	623086	AssignmentExpression	* pkud = ( privateKeyUD * ) vUserData		623079	2		=			
ANR	623087	Identifier	pkud		623079	0					
ANR	623088	CastExpression	( privateKeyUD * ) vUserData		623079	1					
ANR	623089	CastTarget	privateKeyUD *		623079	0					
ANR	623090	Identifier	vUserData		623079	1					
ANR	623091	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""keyMaterial"" ) == 0 )"		623079	1					
ANR	623092	Condition	"strcasecmp ( ( const char * ) name , ""keyMaterial"" ) == 0"	1167:8:44683:44734	623079	0	True				
ANR	623093	EqualityExpression	"strcasecmp ( ( const char * ) name , ""keyMaterial"" ) == 0"		623079	0		==			
ANR	623094	CallExpression	"strcasecmp ( ( const char * ) name , ""keyMaterial"" )"		623079	0					
ANR	623095	Callee	strcasecmp		623079	0					
ANR	623096	Identifier	strcasecmp		623079	0					
ANR	623097	ArgumentList	( const char * ) name		623079	1					
ANR	623098	Argument	( const char * ) name		623079	0					
ANR	623099	CastExpression	( const char * ) name		623079	0					
ANR	623100	CastTarget	const char *		623079	0					
ANR	623101	Identifier	name		623079	1					
ANR	623102	Argument	"""keyMaterial"""		623079	1					
ANR	623103	PrimaryExpression	"""keyMaterial"""		623079	0					
ANR	623104	PrimaryExpression	0		623079	1					
ANR	623105	CompoundStatement		3:63:117:117	623079	1					
ANR	623106	ExpressionStatement	pkud -> inKeyMaterial = false	1168:8:44748:44775	623079	0	True				
ANR	623107	AssignmentExpression	pkud -> inKeyMaterial = false		623079	0		=			
ANR	623108	PtrMemberAccess	pkud -> inKeyMaterial		623079	0					
ANR	623109	Identifier	pkud		623079	0					
ANR	623110	Identifier	inKeyMaterial		623079	1					
ANR	623111	Identifier	false		623079	1					
ANR	623112	ReturnType	void		623079	1					
ANR	623113	Identifier	createKeypairEEH		623079	2					
ANR	623114	ParameterList	"void * vUserData , const XML_Char * name"		623079	3					
ANR	623115	Parameter	void * vUserData	1165:23:44578:44593	623079	0	True				
ANR	623116	ParameterType	void *		623079	0					
ANR	623117	Identifier	vUserData		623079	1					
ANR	623118	Parameter	const XML_Char * name	1165:41:44596:44616	623079	1	True				
ANR	623119	ParameterType	const XML_Char *		623079	0					
ANR	623120	Identifier	name		623079	1					
ANR	623121	CFGEntryNode	ENTRY		623079		True				
ANR	623122	CFGExitNode	EXIT		623079		True				
ANR	623123	Symbol	pkud -> inKeyMaterial		623079						
ANR	623124	Symbol	* pkud		623079						
ANR	623125	Symbol	vUserData		623079						
ANR	623126	Symbol	name		623079						
ANR	623127	Symbol	false		623079						
ANR	623128	Symbol	strcasecmp		623079						
ANR	623129	Symbol	pkud		623079						
ANR	623130	Function	AmazonVMCreateKeypair :: SendRequest	1172:0:44790:45956							
ANR	623131	FunctionDef	AmazonVMCreateKeypair :: SendRequest ()		623130	0					
ANR	623132	CompoundStatement		1172:42:44832:45956	623130	0					
ANR	623133	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	1173:4:44838:44880	623130	0	True				
ANR	623134	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		623130	0					
ANR	623135	IdentifierDeclType	bool		623130	0					
ANR	623136	Identifier	result		623130	1					
ANR	623137	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		623130	2		=			
ANR	623138	Identifier	result		623130	0					
ANR	623139	CallExpression	AmazonRequest :: SendRequest ( )		623130	1					
ANR	623140	Callee	AmazonRequest :: SendRequest		623130	0					
ANR	623141	Identifier	AmazonRequest :: SendRequest		623130	0					
ANR	623142	ArgumentList			623130	1					
ANR	623143	IfStatement	if ( result )		623130	1					
ANR	623144	Condition	result	1174:8:44890:44895	623130	0	True				
ANR	623145	Identifier	result		623130	0					
ANR	623146	CompoundStatement		5:8:103:143	623130	1					
ANR	623147	IdentifierDeclStatement	privateKeyUD pkud ;	1175:8:44909:44926	623130	0	True				
ANR	623148	IdentifierDecl	pkud		623130	0					
ANR	623149	IdentifierDeclType	privateKeyUD		623130	0					
ANR	623150	Identifier	pkud		623130	1					
ANR	623151	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	1176:8:44936:44976	623130	1	True				
ANR	623152	IdentifierDecl	xp = XML_ParserCreate ( NULL )		623130	0					
ANR	623153	IdentifierDeclType	XML_Parser		623130	0					
ANR	623154	Identifier	xp		623130	1					
ANR	623155	AssignmentExpression	xp = XML_ParserCreate ( NULL )		623130	2		=			
ANR	623156	Identifier	xp		623130	0					
ANR	623157	CallExpression	XML_ParserCreate ( NULL )		623130	1					
ANR	623158	Callee	XML_ParserCreate		623130	0					
ANR	623159	Identifier	XML_ParserCreate		623130	0					
ANR	623160	ArgumentList	NULL		623130	1					
ANR	623161	Argument	NULL		623130	0					
ANR	623162	Identifier	NULL		623130	0					
ANR	623163	ExpressionStatement	"XML_SetElementHandler ( xp , & createKeypairESH , & createKeypairEEH )"	1177:8:44986:45053	623130	2	True				
ANR	623164	CallExpression	"XML_SetElementHandler ( xp , & createKeypairESH , & createKeypairEEH )"		623130	0					
ANR	623165	Callee	XML_SetElementHandler		623130	0					
ANR	623166	Identifier	XML_SetElementHandler		623130	0					
ANR	623167	ArgumentList	xp		623130	1					
ANR	623168	Argument	xp		623130	0					
ANR	623169	Identifier	xp		623130	0					
ANR	623170	Argument	& createKeypairESH		623130	1					
ANR	623171	UnaryOperationExpression	& createKeypairESH		623130	0					
ANR	623172	UnaryOperator	&		623130	0					
ANR	623173	Identifier	createKeypairESH		623130	1					
ANR	623174	Argument	& createKeypairEEH		623130	2					
ANR	623175	UnaryOperationExpression	& createKeypairEEH		623130	0					
ANR	623176	UnaryOperator	&		623130	0					
ANR	623177	Identifier	createKeypairEEH		623130	1					
ANR	623178	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & createKeypairCDH )"	1178:8:45063:45116	623130	3	True				
ANR	623179	CallExpression	"XML_SetCharacterDataHandler ( xp , & createKeypairCDH )"		623130	0					
ANR	623180	Callee	XML_SetCharacterDataHandler		623130	0					
ANR	623181	Identifier	XML_SetCharacterDataHandler		623130	0					
ANR	623182	ArgumentList	xp		623130	1					
ANR	623183	Argument	xp		623130	0					
ANR	623184	Identifier	xp		623130	0					
ANR	623185	Argument	& createKeypairCDH		623130	1					
ANR	623186	UnaryOperationExpression	& createKeypairCDH		623130	0					
ANR	623187	UnaryOperator	&		623130	0					
ANR	623188	Identifier	createKeypairCDH		623130	1					
ANR	623189	ExpressionStatement	"XML_SetUserData ( xp , & pkud )"	1179:8:45126:45155	623130	4	True				
ANR	623190	CallExpression	"XML_SetUserData ( xp , & pkud )"		623130	0					
ANR	623191	Callee	XML_SetUserData		623130	0					
ANR	623192	Identifier	XML_SetUserData		623130	0					
ANR	623193	ArgumentList	xp		623130	1					
ANR	623194	Argument	xp		623130	0					
ANR	623195	Identifier	xp		623130	0					
ANR	623196	Argument	& pkud		623130	1					
ANR	623197	UnaryOperationExpression	& pkud		623130	0					
ANR	623198	UnaryOperator	&		623130	0					
ANR	623199	Identifier	pkud		623130	1					
ANR	623200	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	1180:8:45165:45240	623130	5	True				
ANR	623201	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		623130	0					
ANR	623202	Callee	XML_Parse		623130	0					
ANR	623203	Identifier	XML_Parse		623130	0					
ANR	623204	ArgumentList	xp		623130	1					
ANR	623205	Argument	xp		623130	0					
ANR	623206	Identifier	xp		623130	0					
ANR	623207	Argument	this -> resultString . c_str ( )		623130	1					
ANR	623208	CallExpression	this -> resultString . c_str ( )		623130	0					
ANR	623209	Callee	this -> resultString . c_str		623130	0					
ANR	623210	MemberAccess	this -> resultString . c_str		623130	0					
ANR	623211	PtrMemberAccess	this -> resultString		623130	0					
ANR	623212	Identifier	this		623130	0					
ANR	623213	Identifier	resultString		623130	1					
ANR	623214	Identifier	c_str		623130	1					
ANR	623215	ArgumentList			623130	1					
ANR	623216	Argument	this -> resultString . length ( )		623130	2					
ANR	623217	CallExpression	this -> resultString . length ( )		623130	0					
ANR	623218	Callee	this -> resultString . length		623130	0					
ANR	623219	MemberAccess	this -> resultString . length		623130	0					
ANR	623220	PtrMemberAccess	this -> resultString		623130	0					
ANR	623221	Identifier	this		623130	0					
ANR	623222	Identifier	resultString		623130	1					
ANR	623223	Identifier	length		623130	1					
ANR	623224	ArgumentList			623130	1					
ANR	623225	Argument	1		623130	3					
ANR	623226	PrimaryExpression	1		623130	0					
ANR	623227	ExpressionStatement	XML_ParserFree ( xp )	1181:8:45250:45270	623130	6	True				
ANR	623228	CallExpression	XML_ParserFree ( xp )		623130	0					
ANR	623229	Callee	XML_ParserFree		623130	0					
ANR	623230	Identifier	XML_ParserFree		623130	0					
ANR	623231	ArgumentList	xp		623130	1					
ANR	623232	Argument	xp		623130	0					
ANR	623233	Identifier	xp		623130	0					
ANR	623234	IfStatement	"if ( ! writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial ) )"		623130	7					
ANR	623235	Condition	"! writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial )"	1183:12:45285:45346	623130	0	True				
ANR	623236	UnaryOperationExpression	"! writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial )"		623130	0					
ANR	623237	UnaryOperator	!		623130	0					
ANR	623238	CallExpression	"writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial )"		623130	1					
ANR	623239	Callee	writeShortFile		623130	0					
ANR	623240	Identifier	writeShortFile		623130	0					
ANR	623241	ArgumentList	this -> privateKeyFileName		623130	1					
ANR	623242	Argument	this -> privateKeyFileName		623130	0					
ANR	623243	PtrMemberAccess	this -> privateKeyFileName		623130	0					
ANR	623244	Identifier	this		623130	0					
ANR	623245	Identifier	privateKeyFileName		623130	1					
ANR	623246	Argument	pkud . keyMaterial		623130	1					
ANR	623247	MemberAccess	pkud . keyMaterial		623130	0					
ANR	623248	Identifier	pkud		623130	0					
ANR	623249	Identifier	keyMaterial		623130	1					
ANR	623250	CompoundStatement		12:77:517:517	623130	1					
ANR	623251	ExpressionStatement	"this -> errorCode = ""E_FILE_IO"""	1184:12:45364:45393	623130	0	True				
ANR	623252	AssignmentExpression	"this -> errorCode = ""E_FILE_IO"""		623130	0		=			
ANR	623253	PtrMemberAccess	this -> errorCode		623130	0					
ANR	623254	Identifier	this		623130	0					
ANR	623255	Identifier	errorCode		623130	1					
ANR	623256	PrimaryExpression	"""E_FILE_IO"""		623130	1					
ANR	623257	ExpressionStatement	"this -> errorMessage = ""Failed to write private key to file."""	1185:12:45407:45466	623130	1	True				
ANR	623258	AssignmentExpression	"this -> errorMessage = ""Failed to write private key to file."""		623130	0		=			
ANR	623259	PtrMemberAccess	this -> errorMessage		623130	0					
ANR	623260	Identifier	this		623130	0					
ANR	623261	Identifier	errorMessage		623130	1					
ANR	623262	PrimaryExpression	"""Failed to write private key to file."""		623130	1					
ANR	623263	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to write private key material to '%s', failing.\\n"" , this -> privateKeyFileName . c_str ( ) )"	1186:12:45480:45609	623130	2	True				
ANR	623264	CallExpression	"dprintf ( D_ALWAYS , ""Failed to write private key material to '%s', failing.\\n"" , this -> privateKeyFileName . c_str ( ) )"		623130	0					
ANR	623265	Callee	dprintf		623130	0					
ANR	623266	Identifier	dprintf		623130	0					
ANR	623267	ArgumentList	D_ALWAYS		623130	1					
ANR	623268	Argument	D_ALWAYS		623130	0					
ANR	623269	Identifier	D_ALWAYS		623130	0					
ANR	623270	Argument	"""Failed to write private key material to '%s', failing.\\n"""		623130	1					
ANR	623271	PrimaryExpression	"""Failed to write private key material to '%s', failing.\\n"""		623130	0					
ANR	623272	Argument	this -> privateKeyFileName . c_str ( )		623130	2					
ANR	623273	CallExpression	this -> privateKeyFileName . c_str ( )		623130	0					
ANR	623274	Callee	this -> privateKeyFileName . c_str		623130	0					
ANR	623275	MemberAccess	this -> privateKeyFileName . c_str		623130	0					
ANR	623276	PtrMemberAccess	this -> privateKeyFileName		623130	0					
ANR	623277	Identifier	this		623130	0					
ANR	623278	Identifier	privateKeyFileName		623130	1					
ANR	623279	Identifier	c_str		623130	1					
ANR	623280	ArgumentList			623130	1					
ANR	623281	ReturnStatement	return false ;	1188:12:45623:45635	623130	3	True				
ANR	623282	Identifier	false		623130	0					
ANR	623283	ElseStatement	else		623130	0					
ANR	623284	CompoundStatement		19:11:825:825	623130	0					
ANR	623285	IfStatement	"if ( this -> errorCode == ""E_CURL_IO"" )"		623130	0					
ANR	623286	Condition	"this -> errorCode == ""E_CURL_IO"""	1191:12:45672:45701	623130	0	True				
ANR	623287	EqualityExpression	"this -> errorCode == ""E_CURL_IO"""		623130	0		==			
ANR	623288	PtrMemberAccess	this -> errorCode		623130	0					
ANR	623289	Identifier	this		623130	0					
ANR	623290	Identifier	errorCode		623130	1					
ANR	623291	PrimaryExpression	"""E_CURL_IO"""		623130	1					
ANR	623292	CompoundStatement		20:45:872:872	623130	1					
ANR	623293	ExpressionStatement	"this -> errorCode = ""NEED_CHECK_SSHKEY"""	1194:12:45856:45893	623130	0	True				
ANR	623294	AssignmentExpression	"this -> errorCode = ""NEED_CHECK_SSHKEY"""		623130	0		=			
ANR	623295	PtrMemberAccess	this -> errorCode		623130	0					
ANR	623296	Identifier	this		623130	0					
ANR	623297	Identifier	errorCode		623130	1					
ANR	623298	PrimaryExpression	"""NEED_CHECK_SSHKEY"""		623130	1					
ANR	623299	ReturnStatement	return false ;	1195:12:45907:45919	623130	1	True				
ANR	623300	Identifier	false		623130	0					
ANR	623301	ReturnStatement	return result ;	1198:4:45941:45954	623130	2	True				
ANR	623302	Identifier	result		623130	0					
ANR	623303	ReturnType	bool		623130	1					
ANR	623304	Identifier	AmazonVMCreateKeypair :: SendRequest		623130	2					
ANR	623305	ParameterList			623130	3					
ANR	623306	CFGEntryNode	ENTRY		623130		True				
ANR	623307	CFGExitNode	EXIT		623130		True				
ANR	623308	Symbol	this -> errorMessage		623130						
ANR	623309	Symbol	NULL		623130						
ANR	623310	Symbol	AmazonRequest :: SendRequest		623130						
ANR	623311	Symbol	this -> resultString		623130						
ANR	623312	Symbol	this -> resultString . length		623130						
ANR	623313	Symbol	this -> resultString . c_str		623130						
ANR	623314	Symbol	this		623130						
ANR	623315	Symbol	D_ALWAYS		623130						
ANR	623316	Symbol	false		623130						
ANR	623317	Symbol	& createKeypairEEH		623130						
ANR	623318	Symbol	writeShortFile		623130						
ANR	623319	Symbol	& createKeypairCDH		623130						
ANR	623320	Symbol	& pkud		623130						
ANR	623321	Symbol	this -> errorCode		623130						
ANR	623322	Symbol	this -> privateKeyFileName		623130						
ANR	623323	Symbol	result		623130						
ANR	623324	Symbol	* this		623130						
ANR	623325	Symbol	this -> privateKeyFileName . c_str		623130						
ANR	623326	Symbol	xp		623130						
ANR	623327	Symbol	& createKeypairESH		623130						
ANR	623328	Symbol	XML_ParserCreate		623130						
ANR	623329	Symbol	pkud . keyMaterial		623130						
ANR	623330	Symbol	pkud		623130						
ANR	623331	Function	AmazonVMCreateKeypair :: workerFunction	1202:0:46071:47435							
ANR	623332	FunctionDef	"AmazonVMCreateKeypair :: workerFunction (char * * argv , int argc , std :: string & result_string)"		623331	0					
ANR	623333	CompoundStatement		1202:94:46165:47435	623331	0					
ANR	623334	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0 )"	1203:4:46171:46228	623331	0	True				
ANR	623335	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0 )"		623331	0					
ANR	623336	Callee	assert		623331	0					
ANR	623337	Identifier	assert		623331	0					
ANR	623338	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0"		623331	1					
ANR	623339	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0"		623331	0					
ANR	623340	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0"		623331	0		==			
ANR	623341	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" )"		623331	0					
ANR	623342	Callee	strcmp		623331	0					
ANR	623343	Identifier	strcmp		623331	0					
ANR	623344	ArgumentList	argv [ 0 ]		623331	1					
ANR	623345	Argument	argv [ 0 ]		623331	0					
ANR	623346	ArrayIndexing	argv [ 0 ]		623331	0					
ANR	623347	Identifier	argv		623331	0					
ANR	623348	PrimaryExpression	0		623331	1					
ANR	623349	Argument	"""EC2_VM_CREATE_KEYPAIR"""		623331	1					
ANR	623350	PrimaryExpression	"""EC2_VM_CREATE_KEYPAIR"""		623331	0					
ANR	623351	PrimaryExpression	0		623331	1					
ANR	623352	IdentifierDeclStatement	int requestID ;	1208:4:46411:46424	623331	1	True				
ANR	623353	IdentifierDecl	requestID		623331	0					
ANR	623354	IdentifierDeclType	int		623331	0					
ANR	623355	Identifier	requestID		623331	1					
ANR	623356	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1209:4:46430:46461	623331	2	True				
ANR	623357	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		623331	0					
ANR	623358	Callee	get_int		623331	0					
ANR	623359	Identifier	get_int		623331	0					
ANR	623360	ArgumentList	argv [ 1 ]		623331	1					
ANR	623361	Argument	argv [ 1 ]		623331	0					
ANR	623362	ArrayIndexing	argv [ 1 ]		623331	0					
ANR	623363	Identifier	argv		623331	0					
ANR	623364	PrimaryExpression	1		623331	1					
ANR	623365	Argument	& requestID		623331	1					
ANR	623366	UnaryOperationExpression	& requestID		623331	0					
ANR	623367	UnaryOperator	&		623331	0					
ANR	623368	Identifier	requestID		623331	1					
ANR	623369	IfStatement	"if ( ! verify_min_number_args ( argc , 7 ) )"		623331	3					
ANR	623370	Condition	"! verify_min_number_args ( argc , 7 )"	1211:8:46476:46510	623331	0	True				
ANR	623371	UnaryOperationExpression	"! verify_min_number_args ( argc , 7 )"		623331	0					
ANR	623372	UnaryOperator	!		623331	0					
ANR	623373	CallExpression	"verify_min_number_args ( argc , 7 )"		623331	1					
ANR	623374	Callee	verify_min_number_args		623331	0					
ANR	623375	Identifier	verify_min_number_args		623331	0					
ANR	623376	ArgumentList	argc		623331	1					
ANR	623377	Argument	argc		623331	0					
ANR	623378	Identifier	argc		623331	0					
ANR	623379	Argument	7		623331	1					
ANR	623380	PrimaryExpression	7		623331	0					
ANR	623381	CompoundStatement		10:46:348:348	623331	1					
ANR	623382	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1212:8:46524:46599	623331	0	True				
ANR	623383	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		623331	0		=			
ANR	623384	Identifier	result_string		623331	0					
ANR	623385	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		623331	1					
ANR	623386	Callee	create_failure_result		623331	0					
ANR	623387	Identifier	create_failure_result		623331	0					
ANR	623388	ArgumentList	requestID		623331	1					
ANR	623389	Argument	requestID		623331	0					
ANR	623390	Identifier	requestID		623331	0					
ANR	623391	Argument	"""Wrong_Argument_Number"""		623331	1					
ANR	623392	PrimaryExpression	"""Wrong_Argument_Number"""		623331	0					
ANR	623393	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"	1213:8:46609:46721	623331	1	True				
ANR	623394	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"		623331	0					
ANR	623395	Callee	dprintf		623331	0					
ANR	623396	Identifier	dprintf		623331	0					
ANR	623397	ArgumentList	D_ALWAYS		623331	1					
ANR	623398	Argument	D_ALWAYS		623331	0					
ANR	623399	Identifier	D_ALWAYS		623331	0					
ANR	623400	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		623331	1					
ANR	623401	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		623331	0					
ANR	623402	Argument	argc		623331	2					
ANR	623403	Identifier	argc		623331	0					
ANR	623404	Argument	7		623331	3					
ANR	623405	PrimaryExpression	7		623331	0					
ANR	623406	Argument	argv [ 0 ]		623331	4					
ANR	623407	ArrayIndexing	argv [ 0 ]		623331	0					
ANR	623408	Identifier	argv		623331	0					
ANR	623409	PrimaryExpression	0		623331	1					
ANR	623410	ReturnStatement	return false ;	1215:8:46731:46743	623331	2	True				
ANR	623411	Identifier	false		623331	0					
ANR	623412	IdentifierDeclStatement	AmazonVMCreateKeypair ckpRequest ;	1219:4:46805:46837	623331	4	True				
ANR	623413	IdentifierDecl	ckpRequest		623331	0					
ANR	623414	IdentifierDeclType	AmazonVMCreateKeypair		623331	0					
ANR	623415	Identifier	ckpRequest		623331	1					
ANR	623416	ExpressionStatement	ckpRequest . serviceURL = argv [ 2 ]	1220:4:46843:46874	623331	5	True				
ANR	623417	AssignmentExpression	ckpRequest . serviceURL = argv [ 2 ]		623331	0		=			
ANR	623418	MemberAccess	ckpRequest . serviceURL		623331	0					
ANR	623419	Identifier	ckpRequest		623331	0					
ANR	623420	Identifier	serviceURL		623331	1					
ANR	623421	ArrayIndexing	argv [ 2 ]		623331	1					
ANR	623422	Identifier	argv		623331	0					
ANR	623423	PrimaryExpression	2		623331	1					
ANR	623424	ExpressionStatement	ckpRequest . accessKeyFile = argv [ 3 ]	1221:4:46880:46914	623331	6	True				
ANR	623425	AssignmentExpression	ckpRequest . accessKeyFile = argv [ 3 ]		623331	0		=			
ANR	623426	MemberAccess	ckpRequest . accessKeyFile		623331	0					
ANR	623427	Identifier	ckpRequest		623331	0					
ANR	623428	Identifier	accessKeyFile		623331	1					
ANR	623429	ArrayIndexing	argv [ 3 ]		623331	1					
ANR	623430	Identifier	argv		623331	0					
ANR	623431	PrimaryExpression	3		623331	1					
ANR	623432	ExpressionStatement	ckpRequest . secretKeyFile = argv [ 4 ]	1222:4:46920:46954	623331	7	True				
ANR	623433	AssignmentExpression	ckpRequest . secretKeyFile = argv [ 4 ]		623331	0		=			
ANR	623434	MemberAccess	ckpRequest . secretKeyFile		623331	0					
ANR	623435	Identifier	ckpRequest		623331	0					
ANR	623436	Identifier	secretKeyFile		623331	1					
ANR	623437	ArrayIndexing	argv [ 4 ]		623331	1					
ANR	623438	Identifier	argv		623331	0					
ANR	623439	PrimaryExpression	4		623331	1					
ANR	623440	ExpressionStatement	"ckpRequest . query_parameters [ ""Action"" ] = ""CreateKeyPair"""	1223:4:46960:47017	623331	8	True				
ANR	623441	AssignmentExpression	"ckpRequest . query_parameters [ ""Action"" ] = ""CreateKeyPair"""		623331	0		=			
ANR	623442	ArrayIndexing	"ckpRequest . query_parameters [ ""Action"" ]"		623331	0					
ANR	623443	MemberAccess	ckpRequest . query_parameters		623331	0					
ANR	623444	Identifier	ckpRequest		623331	0					
ANR	623445	Identifier	query_parameters		623331	1					
ANR	623446	PrimaryExpression	"""Action"""		623331	1					
ANR	623447	PrimaryExpression	"""CreateKeyPair"""		623331	1					
ANR	623448	ExpressionStatement	"ckpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"	1224:4:47023:47073	623331	9	True				
ANR	623449	AssignmentExpression	"ckpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"		623331	0		=			
ANR	623450	ArrayIndexing	"ckpRequest . query_parameters [ ""KeyName"" ]"		623331	0					
ANR	623451	MemberAccess	ckpRequest . query_parameters		623331	0					
ANR	623452	Identifier	ckpRequest		623331	0					
ANR	623453	Identifier	query_parameters		623331	1					
ANR	623454	PrimaryExpression	"""KeyName"""		623331	1					
ANR	623455	ArrayIndexing	argv [ 5 ]		623331	1					
ANR	623456	Identifier	argv		623331	0					
ANR	623457	PrimaryExpression	5		623331	1					
ANR	623458	ExpressionStatement	ckpRequest . privateKeyFileName = argv [ 6 ]	1225:4:47079:47118	623331	10	True				
ANR	623459	AssignmentExpression	ckpRequest . privateKeyFileName = argv [ 6 ]		623331	0		=			
ANR	623460	MemberAccess	ckpRequest . privateKeyFileName		623331	0					
ANR	623461	Identifier	ckpRequest		623331	0					
ANR	623462	Identifier	privateKeyFileName		623331	1					
ANR	623463	ArrayIndexing	argv [ 6 ]		623331	1					
ANR	623464	Identifier	argv		623331	0					
ANR	623465	PrimaryExpression	6		623331	1					
ANR	623466	IfStatement	if ( ! ckpRequest . SendRequest ( ) )		623331	11					
ANR	623467	Condition	! ckpRequest . SendRequest ( )	1228:8:47154:47179	623331	0	True				
ANR	623468	UnaryOperationExpression	! ckpRequest . SendRequest ( )		623331	0					
ANR	623469	UnaryOperator	!		623331	0					
ANR	623470	CallExpression	ckpRequest . SendRequest ( )		623331	1					
ANR	623471	Callee	ckpRequest . SendRequest		623331	0					
ANR	623472	MemberAccess	ckpRequest . SendRequest		623331	0					
ANR	623473	Identifier	ckpRequest		623331	0					
ANR	623474	Identifier	SendRequest		623331	1					
ANR	623475	ArgumentList			623331	1					
ANR	623476	CompoundStatement		27:37:1017:1017	623331	1					
ANR	623477	ExpressionStatement	"result_string = create_failure_result ( requestID , ckpRequest . errorMessage . c_str ( ) , ckpRequest . errorCode . c_str ( ) )"	1229:8:47193:47330	623331	0	True				
ANR	623478	AssignmentExpression	"result_string = create_failure_result ( requestID , ckpRequest . errorMessage . c_str ( ) , ckpRequest . errorCode . c_str ( ) )"		623331	0		=			
ANR	623479	Identifier	result_string		623331	0					
ANR	623480	CallExpression	"create_failure_result ( requestID , ckpRequest . errorMessage . c_str ( ) , ckpRequest . errorCode . c_str ( ) )"		623331	1					
ANR	623481	Callee	create_failure_result		623331	0					
ANR	623482	Identifier	create_failure_result		623331	0					
ANR	623483	ArgumentList	requestID		623331	1					
ANR	623484	Argument	requestID		623331	0					
ANR	623485	Identifier	requestID		623331	0					
ANR	623486	Argument	ckpRequest . errorMessage . c_str ( )		623331	1					
ANR	623487	CallExpression	ckpRequest . errorMessage . c_str ( )		623331	0					
ANR	623488	Callee	ckpRequest . errorMessage . c_str		623331	0					
ANR	623489	MemberAccess	ckpRequest . errorMessage . c_str		623331	0					
ANR	623490	MemberAccess	ckpRequest . errorMessage		623331	0					
ANR	623491	Identifier	ckpRequest		623331	0					
ANR	623492	Identifier	errorMessage		623331	1					
ANR	623493	Identifier	c_str		623331	1					
ANR	623494	ArgumentList			623331	1					
ANR	623495	Argument	ckpRequest . errorCode . c_str ( )		623331	2					
ANR	623496	CallExpression	ckpRequest . errorCode . c_str ( )		623331	0					
ANR	623497	Callee	ckpRequest . errorCode . c_str		623331	0					
ANR	623498	MemberAccess	ckpRequest . errorCode . c_str		623331	0					
ANR	623499	MemberAccess	ckpRequest . errorCode		623331	0					
ANR	623500	Identifier	ckpRequest		623331	0					
ANR	623501	Identifier	errorCode		623331	1					
ANR	623502	Identifier	c_str		623331	1					
ANR	623503	ArgumentList			623331	1					
ANR	623504	ElseStatement	else		623331	0					
ANR	623505	CompoundStatement		31:11:1177:1177	623331	0					
ANR	623506	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1233:8:47353:47409	623331	0	True				
ANR	623507	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		623331	0		=			
ANR	623508	Identifier	result_string		623331	0					
ANR	623509	CallExpression	"create_success_result ( requestID , NULL )"		623331	1					
ANR	623510	Callee	create_success_result		623331	0					
ANR	623511	Identifier	create_success_result		623331	0					
ANR	623512	ArgumentList	requestID		623331	1					
ANR	623513	Argument	requestID		623331	0					
ANR	623514	Identifier	requestID		623331	0					
ANR	623515	Argument	NULL		623331	1					
ANR	623516	Identifier	NULL		623331	0					
ANR	623517	ReturnStatement	return true ;	1236:4:47422:47433	623331	12	True				
ANR	623518	Identifier	true		623331	0					
ANR	623519	ReturnType	bool		623331	1					
ANR	623520	Identifier	AmazonVMCreateKeypair :: workerFunction		623331	2					
ANR	623521	ParameterList	"char * * argv , int argc , std :: string & result_string"		623331	3					
ANR	623522	Parameter	char * * argv	1202:43:46114:46124	623331	0	True				
ANR	623523	ParameterType	char * *		623331	0					
ANR	623524	Identifier	argv		623331	1					
ANR	623525	Parameter	int argc	1202:56:46127:46134	623331	1	True				
ANR	623526	ParameterType	int		623331	0					
ANR	623527	Identifier	argc		623331	1					
ANR	623528	Parameter	std :: string & result_string	1202:66:46137:46162	623331	2	True				
ANR	623529	ParameterType	std :: string &		623331	0					
ANR	623530	Identifier	result_string		623331	1					
ANR	623531	CFGEntryNode	ENTRY		623331		True				
ANR	623532	CFGExitNode	EXIT		623331		True				
ANR	623533	Symbol	ckpRequest . errorCode . c_str		623331						
ANR	623534	Symbol	ckpRequest . serviceURL		623331						
ANR	623535	Symbol	ckpRequest . errorCode		623331						
ANR	623536	Symbol	* argv		623331						
ANR	623537	Symbol	argv		623331						
ANR	623538	Symbol	& requestID		623331						
ANR	623539	Symbol	create_success_result		623331						
ANR	623540	Symbol	* ckpRequest . query_parameters		623331						
ANR	623541	Symbol	ckpRequest . errorMessage . c_str		623331						
ANR	623542	Symbol	ckpRequest . SendRequest		623331						
ANR	623543	Symbol	* ckpRequest		623331						
ANR	623544	Symbol	result_string		623331						
ANR	623545	Symbol	ckpRequest . secretKeyFile		623331						
ANR	623546	Symbol	argc		623331						
ANR	623547	Symbol	strcmp		623331						
ANR	623548	Symbol	NULL		623331						
ANR	623549	Symbol	D_ALWAYS		623331						
ANR	623550	Symbol	false		623331						
ANR	623551	Symbol	ckpRequest . accessKeyFile		623331						
ANR	623552	Symbol	verify_min_number_args		623331						
ANR	623553	Symbol	ckpRequest		623331						
ANR	623554	Symbol	ckpRequest . errorMessage		623331						
ANR	623555	Symbol	ckpRequest . query_parameters		623331						
ANR	623556	Symbol	requestID		623331						
ANR	623557	Symbol	create_failure_result		623331						
ANR	623558	Symbol	true		623331						
ANR	623559	Symbol	ckpRequest . privateKeyFileName		623331						
ANR	623560	Function	AmazonVMDestroyKeypair :: AmazonVMDestroyKeypair	1241:0:47518:47569							
ANR	623561	FunctionDef	AmazonVMDestroyKeypair :: AmazonVMDestroyKeypair ()		623560	0					
ANR	623562	CompoundStatement		1241:49:47567:47569	623560	0					
ANR	623563	Identifier	AmazonVMDestroyKeypair :: AmazonVMDestroyKeypair		623560	1					
ANR	623564	ParameterList			623560	2					
ANR	623565	CFGEntryNode	ENTRY		623560		True				
ANR	623566	CFGExitNode	EXIT		623560		True				
ANR	623567	Function	AmazonVMDestroyKeypair :: ~AmazonVMDestroyKeypair	1243:0:47572:47624							
ANR	623568	FunctionDef	AmazonVMDestroyKeypair :: ~AmazonVMDestroyKeypair ()		623567	0					
ANR	623569	CompoundStatement		1243:50:47622:47624	623567	0					
ANR	623570	Identifier	AmazonVMDestroyKeypair :: ~AmazonVMDestroyKeypair		623567	1					
ANR	623571	ParameterList			623567	2					
ANR	623572	CFGEntryNode	ENTRY		623567		True				
ANR	623573	CFGExitNode	EXIT		623567		True				
ANR	623574	Function	AmazonVMDestroyKeypair :: workerFunction	1246:0:47727:49049							
ANR	623575	FunctionDef	"AmazonVMDestroyKeypair :: workerFunction (char * * argv , int argc , std :: string & result_string)"		623574	0					
ANR	623576	CompoundStatement		1246:95:47822:49049	623574	0					
ANR	623577	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0 )"	1247:4:47828:47886	623574	0	True				
ANR	623578	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0 )"		623574	0					
ANR	623579	Callee	assert		623574	0					
ANR	623580	Identifier	assert		623574	0					
ANR	623581	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0"		623574	1					
ANR	623582	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0"		623574	0					
ANR	623583	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0"		623574	0		==			
ANR	623584	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" )"		623574	0					
ANR	623585	Callee	strcmp		623574	0					
ANR	623586	Identifier	strcmp		623574	0					
ANR	623587	ArgumentList	argv [ 0 ]		623574	1					
ANR	623588	Argument	argv [ 0 ]		623574	0					
ANR	623589	ArrayIndexing	argv [ 0 ]		623574	0					
ANR	623590	Identifier	argv		623574	0					
ANR	623591	PrimaryExpression	0		623574	1					
ANR	623592	Argument	"""EC2_VM_DESTROY_KEYPAIR"""		623574	1					
ANR	623593	PrimaryExpression	"""EC2_VM_DESTROY_KEYPAIR"""		623574	0					
ANR	623594	PrimaryExpression	0		623574	1					
ANR	623595	IdentifierDeclStatement	int requestID ;	1252:4:48069:48082	623574	1	True				
ANR	623596	IdentifierDecl	requestID		623574	0					
ANR	623597	IdentifierDeclType	int		623574	0					
ANR	623598	Identifier	requestID		623574	1					
ANR	623599	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1253:4:48088:48119	623574	2	True				
ANR	623600	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		623574	0					
ANR	623601	Callee	get_int		623574	0					
ANR	623602	Identifier	get_int		623574	0					
ANR	623603	ArgumentList	argv [ 1 ]		623574	1					
ANR	623604	Argument	argv [ 1 ]		623574	0					
ANR	623605	ArrayIndexing	argv [ 1 ]		623574	0					
ANR	623606	Identifier	argv		623574	0					
ANR	623607	PrimaryExpression	1		623574	1					
ANR	623608	Argument	& requestID		623574	1					
ANR	623609	UnaryOperationExpression	& requestID		623574	0					
ANR	623610	UnaryOperator	&		623574	0					
ANR	623611	Identifier	requestID		623574	1					
ANR	623612	IfStatement	"if ( ! verify_min_number_args ( argc , 6 ) )"		623574	3					
ANR	623613	Condition	"! verify_min_number_args ( argc , 6 )"	1255:8:48134:48168	623574	0	True				
ANR	623614	UnaryOperationExpression	"! verify_min_number_args ( argc , 6 )"		623574	0					
ANR	623615	UnaryOperator	!		623574	0					
ANR	623616	CallExpression	"verify_min_number_args ( argc , 6 )"		623574	1					
ANR	623617	Callee	verify_min_number_args		623574	0					
ANR	623618	Identifier	verify_min_number_args		623574	0					
ANR	623619	ArgumentList	argc		623574	1					
ANR	623620	Argument	argc		623574	0					
ANR	623621	Identifier	argc		623574	0					
ANR	623622	Argument	6		623574	1					
ANR	623623	PrimaryExpression	6		623574	0					
ANR	623624	CompoundStatement		10:46:349:349	623574	1					
ANR	623625	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1256:8:48182:48257	623574	0	True				
ANR	623626	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		623574	0		=			
ANR	623627	Identifier	result_string		623574	0					
ANR	623628	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		623574	1					
ANR	623629	Callee	create_failure_result		623574	0					
ANR	623630	Identifier	create_failure_result		623574	0					
ANR	623631	ArgumentList	requestID		623574	1					
ANR	623632	Argument	requestID		623574	0					
ANR	623633	Identifier	requestID		623574	0					
ANR	623634	Argument	"""Wrong_Argument_Number"""		623574	1					
ANR	623635	PrimaryExpression	"""Wrong_Argument_Number"""		623574	0					
ANR	623636	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"	1257:8:48267:48379	623574	1	True				
ANR	623637	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"		623574	0					
ANR	623638	Callee	dprintf		623574	0					
ANR	623639	Identifier	dprintf		623574	0					
ANR	623640	ArgumentList	D_ALWAYS		623574	1					
ANR	623641	Argument	D_ALWAYS		623574	0					
ANR	623642	Identifier	D_ALWAYS		623574	0					
ANR	623643	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		623574	1					
ANR	623644	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		623574	0					
ANR	623645	Argument	argc		623574	2					
ANR	623646	Identifier	argc		623574	0					
ANR	623647	Argument	6		623574	3					
ANR	623648	PrimaryExpression	6		623574	0					
ANR	623649	Argument	argv [ 0 ]		623574	4					
ANR	623650	ArrayIndexing	argv [ 0 ]		623574	0					
ANR	623651	Identifier	argv		623574	0					
ANR	623652	PrimaryExpression	0		623574	1					
ANR	623653	ReturnStatement	return false ;	1259:8:48389:48401	623574	2	True				
ANR	623654	Identifier	false		623574	0					
ANR	623655	IdentifierDeclStatement	AmazonVMDestroyKeypair dkpRequest ;	1263:4:48463:48496	623574	4	True				
ANR	623656	IdentifierDecl	dkpRequest		623574	0					
ANR	623657	IdentifierDeclType	AmazonVMDestroyKeypair		623574	0					
ANR	623658	Identifier	dkpRequest		623574	1					
ANR	623659	ExpressionStatement	dkpRequest . serviceURL = argv [ 2 ]	1264:4:48502:48533	623574	5	True				
ANR	623660	AssignmentExpression	dkpRequest . serviceURL = argv [ 2 ]		623574	0		=			
ANR	623661	MemberAccess	dkpRequest . serviceURL		623574	0					
ANR	623662	Identifier	dkpRequest		623574	0					
ANR	623663	Identifier	serviceURL		623574	1					
ANR	623664	ArrayIndexing	argv [ 2 ]		623574	1					
ANR	623665	Identifier	argv		623574	0					
ANR	623666	PrimaryExpression	2		623574	1					
ANR	623667	ExpressionStatement	dkpRequest . accessKeyFile = argv [ 3 ]	1265:4:48539:48573	623574	6	True				
ANR	623668	AssignmentExpression	dkpRequest . accessKeyFile = argv [ 3 ]		623574	0		=			
ANR	623669	MemberAccess	dkpRequest . accessKeyFile		623574	0					
ANR	623670	Identifier	dkpRequest		623574	0					
ANR	623671	Identifier	accessKeyFile		623574	1					
ANR	623672	ArrayIndexing	argv [ 3 ]		623574	1					
ANR	623673	Identifier	argv		623574	0					
ANR	623674	PrimaryExpression	3		623574	1					
ANR	623675	ExpressionStatement	dkpRequest . secretKeyFile = argv [ 4 ]	1266:4:48579:48613	623574	7	True				
ANR	623676	AssignmentExpression	dkpRequest . secretKeyFile = argv [ 4 ]		623574	0		=			
ANR	623677	MemberAccess	dkpRequest . secretKeyFile		623574	0					
ANR	623678	Identifier	dkpRequest		623574	0					
ANR	623679	Identifier	secretKeyFile		623574	1					
ANR	623680	ArrayIndexing	argv [ 4 ]		623574	1					
ANR	623681	Identifier	argv		623574	0					
ANR	623682	PrimaryExpression	4		623574	1					
ANR	623683	ExpressionStatement	"dkpRequest . query_parameters [ ""Action"" ] = ""DeleteKeyPair"""	1267:4:48619:48676	623574	8	True				
ANR	623684	AssignmentExpression	"dkpRequest . query_parameters [ ""Action"" ] = ""DeleteKeyPair"""		623574	0		=			
ANR	623685	ArrayIndexing	"dkpRequest . query_parameters [ ""Action"" ]"		623574	0					
ANR	623686	MemberAccess	dkpRequest . query_parameters		623574	0					
ANR	623687	Identifier	dkpRequest		623574	0					
ANR	623688	Identifier	query_parameters		623574	1					
ANR	623689	PrimaryExpression	"""Action"""		623574	1					
ANR	623690	PrimaryExpression	"""DeleteKeyPair"""		623574	1					
ANR	623691	ExpressionStatement	"dkpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"	1268:4:48682:48732	623574	9	True				
ANR	623692	AssignmentExpression	"dkpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"		623574	0		=			
ANR	623693	ArrayIndexing	"dkpRequest . query_parameters [ ""KeyName"" ]"		623574	0					
ANR	623694	MemberAccess	dkpRequest . query_parameters		623574	0					
ANR	623695	Identifier	dkpRequest		623574	0					
ANR	623696	Identifier	query_parameters		623574	1					
ANR	623697	PrimaryExpression	"""KeyName"""		623574	1					
ANR	623698	ArrayIndexing	argv [ 5 ]		623574	1					
ANR	623699	Identifier	argv		623574	0					
ANR	623700	PrimaryExpression	5		623574	1					
ANR	623701	IfStatement	if ( ! dkpRequest . SendRequest ( ) )		623574	10					
ANR	623702	Condition	! dkpRequest . SendRequest ( )	1271:8:48768:48793	623574	0	True				
ANR	623703	UnaryOperationExpression	! dkpRequest . SendRequest ( )		623574	0					
ANR	623704	UnaryOperator	!		623574	0					
ANR	623705	CallExpression	dkpRequest . SendRequest ( )		623574	1					
ANR	623706	Callee	dkpRequest . SendRequest		623574	0					
ANR	623707	MemberAccess	dkpRequest . SendRequest		623574	0					
ANR	623708	Identifier	dkpRequest		623574	0					
ANR	623709	Identifier	SendRequest		623574	1					
ANR	623710	ArgumentList			623574	1					
ANR	623711	CompoundStatement		26:37:974:974	623574	1					
ANR	623712	ExpressionStatement	"result_string = create_failure_result ( requestID , dkpRequest . errorMessage . c_str ( ) , dkpRequest . errorCode . c_str ( ) )"	1272:8:48807:48944	623574	0	True				
ANR	623713	AssignmentExpression	"result_string = create_failure_result ( requestID , dkpRequest . errorMessage . c_str ( ) , dkpRequest . errorCode . c_str ( ) )"		623574	0		=			
ANR	623714	Identifier	result_string		623574	0					
ANR	623715	CallExpression	"create_failure_result ( requestID , dkpRequest . errorMessage . c_str ( ) , dkpRequest . errorCode . c_str ( ) )"		623574	1					
ANR	623716	Callee	create_failure_result		623574	0					
ANR	623717	Identifier	create_failure_result		623574	0					
ANR	623718	ArgumentList	requestID		623574	1					
ANR	623719	Argument	requestID		623574	0					
ANR	623720	Identifier	requestID		623574	0					
ANR	623721	Argument	dkpRequest . errorMessage . c_str ( )		623574	1					
ANR	623722	CallExpression	dkpRequest . errorMessage . c_str ( )		623574	0					
ANR	623723	Callee	dkpRequest . errorMessage . c_str		623574	0					
ANR	623724	MemberAccess	dkpRequest . errorMessage . c_str		623574	0					
ANR	623725	MemberAccess	dkpRequest . errorMessage		623574	0					
ANR	623726	Identifier	dkpRequest		623574	0					
ANR	623727	Identifier	errorMessage		623574	1					
ANR	623728	Identifier	c_str		623574	1					
ANR	623729	ArgumentList			623574	1					
ANR	623730	Argument	dkpRequest . errorCode . c_str ( )		623574	2					
ANR	623731	CallExpression	dkpRequest . errorCode . c_str ( )		623574	0					
ANR	623732	Callee	dkpRequest . errorCode . c_str		623574	0					
ANR	623733	MemberAccess	dkpRequest . errorCode . c_str		623574	0					
ANR	623734	MemberAccess	dkpRequest . errorCode		623574	0					
ANR	623735	Identifier	dkpRequest		623574	0					
ANR	623736	Identifier	errorCode		623574	1					
ANR	623737	Identifier	c_str		623574	1					
ANR	623738	ArgumentList			623574	1					
ANR	623739	ElseStatement	else		623574	0					
ANR	623740	CompoundStatement		30:11:1134:1134	623574	0					
ANR	623741	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1276:8:48967:49023	623574	0	True				
ANR	623742	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		623574	0		=			
ANR	623743	Identifier	result_string		623574	0					
ANR	623744	CallExpression	"create_success_result ( requestID , NULL )"		623574	1					
ANR	623745	Callee	create_success_result		623574	0					
ANR	623746	Identifier	create_success_result		623574	0					
ANR	623747	ArgumentList	requestID		623574	1					
ANR	623748	Argument	requestID		623574	0					
ANR	623749	Identifier	requestID		623574	0					
ANR	623750	Argument	NULL		623574	1					
ANR	623751	Identifier	NULL		623574	0					
ANR	623752	ReturnStatement	return true ;	1279:4:49036:49047	623574	11	True				
ANR	623753	Identifier	true		623574	0					
ANR	623754	ReturnType	bool		623574	1					
ANR	623755	Identifier	AmazonVMDestroyKeypair :: workerFunction		623574	2					
ANR	623756	ParameterList	"char * * argv , int argc , std :: string & result_string"		623574	3					
ANR	623757	Parameter	char * * argv	1246:44:47771:47781	623574	0	True				
ANR	623758	ParameterType	char * *		623574	0					
ANR	623759	Identifier	argv		623574	1					
ANR	623760	Parameter	int argc	1246:57:47784:47791	623574	1	True				
ANR	623761	ParameterType	int		623574	0					
ANR	623762	Identifier	argc		623574	1					
ANR	623763	Parameter	std :: string & result_string	1246:67:47794:47819	623574	2	True				
ANR	623764	ParameterType	std :: string &		623574	0					
ANR	623765	Identifier	result_string		623574	1					
ANR	623766	CFGEntryNode	ENTRY		623574		True				
ANR	623767	CFGExitNode	EXIT		623574		True				
ANR	623768	Symbol	dkpRequest . query_parameters		623574						
ANR	623769	Symbol	* dkpRequest . query_parameters		623574						
ANR	623770	Symbol	* argv		623574						
ANR	623771	Symbol	argv		623574						
ANR	623772	Symbol	& requestID		623574						
ANR	623773	Symbol	create_success_result		623574						
ANR	623774	Symbol	dkpRequest		623574						
ANR	623775	Symbol	dkpRequest . accessKeyFile		623574						
ANR	623776	Symbol	dkpRequest . errorCode . c_str		623574						
ANR	623777	Symbol	result_string		623574						
ANR	623778	Symbol	argc		623574						
ANR	623779	Symbol	strcmp		623574						
ANR	623780	Symbol	dkpRequest . errorCode		623574						
ANR	623781	Symbol	dkpRequest . errorMessage		623574						
ANR	623782	Symbol	NULL		623574						
ANR	623783	Symbol	D_ALWAYS		623574						
ANR	623784	Symbol	false		623574						
ANR	623785	Symbol	dkpRequest . secretKeyFile		623574						
ANR	623786	Symbol	verify_min_number_args		623574						
ANR	623787	Symbol	* dkpRequest		623574						
ANR	623788	Symbol	requestID		623574						
ANR	623789	Symbol	create_failure_result		623574						
ANR	623790	Symbol	true		623574						
ANR	623791	Symbol	dkpRequest . SendRequest		623574						
ANR	623792	Symbol	dkpRequest . errorMessage . c_str		623574						
ANR	623793	Symbol	dkpRequest . serviceURL		623574						
ANR	623794	Function	AmazonVMKeypairNames :: AmazonVMKeypairNames	1284:0:49132:49179							
ANR	623795	FunctionDef	AmazonVMKeypairNames :: AmazonVMKeypairNames ()		623794	0					
ANR	623796	CompoundStatement		1284:45:49177:49179	623794	0					
ANR	623797	Identifier	AmazonVMKeypairNames :: AmazonVMKeypairNames		623794	1					
ANR	623798	ParameterList			623794	2					
ANR	623799	CFGEntryNode	ENTRY		623794		True				
ANR	623800	CFGExitNode	EXIT		623794		True				
ANR	623801	Function	AmazonVMKeypairNames :: ~AmazonVMKeypairNames	1286:0:49182:49230							
ANR	623802	FunctionDef	AmazonVMKeypairNames :: ~AmazonVMKeypairNames ()		623801	0					
ANR	623803	CompoundStatement		1286:46:49228:49230	623801	0					
ANR	623804	Identifier	AmazonVMKeypairNames :: ~AmazonVMKeypairNames		623801	1					
ANR	623805	ParameterList			623801	2					
ANR	623806	CFGEntryNode	ENTRY		623801		True				
ANR	623807	CFGExitNode	EXIT		623801		True				
ANR	623808	ClassDef	keyNamesUD_t	1288:0:49233:49428							
ANR	623809	DeclStmt									
ANR	623810	Decl							bool	bool	inKeyName
ANR	623811	DeclStmt									
ANR	623812	Decl							std :: string	std :: string	keyName
ANR	623813	DeclStmt									
ANR	623814	Decl							StringList	StringList &	keyNameList
ANR	623815	Function	keyNamesUD_t	1293:4:49339:49426							
ANR	623816	FunctionDef	keyNamesUD_t (StringList & slr)		623815	3					
ANR	623817	CompoundStatement		1293:89:49424:49426	623815	0					
ANR	623818	Identifier	keyNamesUD_t		623815	1					
ANR	623819	ParameterList	StringList & slr		623815	2					
ANR	623820	Parameter	StringList & slr	1293:18:49353:49368	623815	0	True				
ANR	623821	ParameterType	StringList &		623815	0					
ANR	623822	Identifier	slr		623815	1					
ANR	623823	CFGEntryNode	ENTRY		623815		True				
ANR	623824	CFGExitNode	EXIT		623815		True				
ANR	623825	Symbol	slr		623815						
ANR	623826	DeclStmt									
ANR	623827	Decl							struct keyNamesUD_t	struct keyNamesUD_t	keyNamesUD
ANR	623828	DeclStmt									
ANR	623829	Decl							keyNamesUD	keyNamesUD *	knud
ANR	623830	Function	keypairNamesCDH	1311:0:49890:50124							
ANR	623831	FunctionDef	"keypairNamesCDH (void * vUserData , const XML_Char * cdata , int len)"		623830	0					
ANR	623832	CompoundStatement		1311:74:49964:50124	623830	0					
ANR	623833	IdentifierDeclStatement	keyNamesUD * knud = ( keyNamesUD * ) vUserData ;	1312:4:49970:50013	623830	0	True				
ANR	623834	IdentifierDecl	* knud = ( keyNamesUD * ) vUserData		623830	0					
ANR	623835	IdentifierDeclType	keyNamesUD *		623830	0					
ANR	623836	Identifier	knud		623830	1					
ANR	623837	AssignmentExpression	* knud = ( keyNamesUD * ) vUserData		623830	2		=			
ANR	623838	Identifier	knud		623830	0					
ANR	623839	CastExpression	( keyNamesUD * ) vUserData		623830	1					
ANR	623840	CastTarget	keyNamesUD *		623830	0					
ANR	623841	Identifier	vUserData		623830	1					
ANR	623842	IfStatement	if ( knud -> inKeyName )		623830	1					
ANR	623843	Condition	knud -> inKeyName	1313:8:50023:50037	623830	0	True				
ANR	623844	PtrMemberAccess	knud -> inKeyName		623830	0					
ANR	623845	Identifier	knud		623830	0					
ANR	623846	Identifier	inKeyName		623830	1					
ANR	623847	CompoundStatement		3:26:76:76	623830	1					
ANR	623848	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & knud -> keyName )"	1314:8:50051:50116	623830	0	True				
ANR	623849	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & knud -> keyName )"		623830	0					
ANR	623850	Callee	appendToString		623830	0					
ANR	623851	Identifier	appendToString		623830	0					
ANR	623852	ArgumentList	( void * ) cdata		623830	1					
ANR	623853	Argument	( void * ) cdata		623830	0					
ANR	623854	CastExpression	( void * ) cdata		623830	0					
ANR	623855	CastTarget	void *		623830	0					
ANR	623856	Identifier	cdata		623830	1					
ANR	623857	Argument	len		623830	1					
ANR	623858	Identifier	len		623830	0					
ANR	623859	Argument	1		623830	2					
ANR	623860	PrimaryExpression	1		623830	0					
ANR	623861	Argument	( void * ) & knud -> keyName		623830	3					
ANR	623862	CastExpression	( void * ) & knud -> keyName		623830	0					
ANR	623863	CastTarget	void *		623830	0					
ANR	623864	UnaryOperationExpression	& knud -> keyName		623830	1					
ANR	623865	UnaryOperator	&		623830	0					
ANR	623866	PtrMemberAccess	knud -> keyName		623830	1					
ANR	623867	Identifier	knud		623830	0					
ANR	623868	Identifier	keyName		623830	1					
ANR	623869	ReturnType	void		623830	1					
ANR	623870	Identifier	keypairNamesCDH		623830	2					
ANR	623871	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		623830	3					
ANR	623872	Parameter	void * vUserData	1311:22:49912:49927	623830	0	True				
ANR	623873	ParameterType	void *		623830	0					
ANR	623874	Identifier	vUserData		623830	1					
ANR	623875	Parameter	const XML_Char * cdata	1311:40:49930:49951	623830	1	True				
ANR	623876	ParameterType	const XML_Char *		623830	0					
ANR	623877	Identifier	cdata		623830	1					
ANR	623878	Parameter	int len	1311:64:49954:49960	623830	2	True				
ANR	623879	ParameterType	int		623830	0					
ANR	623880	Identifier	len		623830	1					
ANR	623881	CFGEntryNode	ENTRY		623830		True				
ANR	623882	CFGExitNode	EXIT		623830		True				
ANR	623883	Symbol	knud		623830						
ANR	623884	Symbol	len		623830						
ANR	623885	Symbol	knud -> inKeyName		623830						
ANR	623886	Symbol	vUserData		623830						
ANR	623887	Symbol	* knud		623830						
ANR	623888	Symbol	& knud -> keyName		623830						
ANR	623889	Symbol	cdata		623830						
ANR	623890	Function	keypairNamesEEH	1319:0:50147:50542							
ANR	623891	FunctionDef	"keypairNamesEEH (void * vUserData , const XML_Char * name)"		623890	0					
ANR	623892	CompoundStatement		1319:64:50211:50542	623890	0					
ANR	623893	IdentifierDeclStatement	keyNamesUD * knud = ( keyNamesUD * ) vUserData ;	1320:4:50217:50260	623890	0	True				
ANR	623894	IdentifierDecl	* knud = ( keyNamesUD * ) vUserData		623890	0					
ANR	623895	IdentifierDeclType	keyNamesUD *		623890	0					
ANR	623896	Identifier	knud		623890	1					
ANR	623897	AssignmentExpression	* knud = ( keyNamesUD * ) vUserData		623890	2		=			
ANR	623898	Identifier	knud		623890	0					
ANR	623899	CastExpression	( keyNamesUD * ) vUserData		623890	1					
ANR	623900	CastTarget	keyNamesUD *		623890	0					
ANR	623901	Identifier	vUserData		623890	1					
ANR	623902	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""KeyName"" ) == 0 )"		623890	1					
ANR	623903	Condition	"strcasecmp ( ( const char * ) name , ""KeyName"" ) == 0"	1321:8:50270:50317	623890	0	True				
ANR	623904	EqualityExpression	"strcasecmp ( ( const char * ) name , ""KeyName"" ) == 0"		623890	0		==			
ANR	623905	CallExpression	"strcasecmp ( ( const char * ) name , ""KeyName"" )"		623890	0					
ANR	623906	Callee	strcasecmp		623890	0					
ANR	623907	Identifier	strcasecmp		623890	0					
ANR	623908	ArgumentList	( const char * ) name		623890	1					
ANR	623909	Argument	( const char * ) name		623890	0					
ANR	623910	CastExpression	( const char * ) name		623890	0					
ANR	623911	CastTarget	const char *		623890	0					
ANR	623912	Identifier	name		623890	1					
ANR	623913	Argument	"""KeyName"""		623890	1					
ANR	623914	PrimaryExpression	"""KeyName"""		623890	0					
ANR	623915	PrimaryExpression	0		623890	1					
ANR	623916	CompoundStatement		3:59:109:109	623890	1					
ANR	623917	ExpressionStatement	knud -> inKeyName = false	1322:8:50331:50354	623890	0	True				
ANR	623918	AssignmentExpression	knud -> inKeyName = false		623890	0		=			
ANR	623919	PtrMemberAccess	knud -> inKeyName		623890	0					
ANR	623920	Identifier	knud		623890	0					
ANR	623921	Identifier	inKeyName		623890	1					
ANR	623922	Identifier	false		623890	1					
ANR	623923	ExpressionStatement	knud -> keyNameList . append ( knud -> keyName . c_str ( ) )	1324:8:50454:50503	623890	1	True				
ANR	623924	CallExpression	knud -> keyNameList . append ( knud -> keyName . c_str ( ) )		623890	0					
ANR	623925	Callee	knud -> keyNameList . append		623890	0					
ANR	623926	MemberAccess	knud -> keyNameList . append		623890	0					
ANR	623927	PtrMemberAccess	knud -> keyNameList		623890	0					
ANR	623928	Identifier	knud		623890	0					
ANR	623929	Identifier	keyNameList		623890	1					
ANR	623930	Identifier	append		623890	1					
ANR	623931	ArgumentList	knud -> keyName . c_str ( )		623890	1					
ANR	623932	Argument	knud -> keyName . c_str ( )		623890	0					
ANR	623933	CallExpression	knud -> keyName . c_str ( )		623890	0					
ANR	623934	Callee	knud -> keyName . c_str		623890	0					
ANR	623935	MemberAccess	knud -> keyName . c_str		623890	0					
ANR	623936	PtrMemberAccess	knud -> keyName		623890	0					
ANR	623937	Identifier	knud		623890	0					
ANR	623938	Identifier	keyName		623890	1					
ANR	623939	Identifier	c_str		623890	1					
ANR	623940	ArgumentList			623890	1					
ANR	623941	ExpressionStatement	knud -> keyName . clear ( )	1325:8:50513:50534	623890	2	True				
ANR	623942	CallExpression	knud -> keyName . clear ( )		623890	0					
ANR	623943	Callee	knud -> keyName . clear		623890	0					
ANR	623944	MemberAccess	knud -> keyName . clear		623890	0					
ANR	623945	PtrMemberAccess	knud -> keyName		623890	0					
ANR	623946	Identifier	knud		623890	0					
ANR	623947	Identifier	keyName		623890	1					
ANR	623948	Identifier	clear		623890	1					
ANR	623949	ArgumentList			623890	1					
ANR	623950	ReturnType	void		623890	1					
ANR	623951	Identifier	keypairNamesEEH		623890	2					
ANR	623952	ParameterList	"void * vUserData , const XML_Char * name"		623890	3					
ANR	623953	Parameter	void * vUserData	1319:22:50169:50184	623890	0	True				
ANR	623954	ParameterType	void *		623890	0					
ANR	623955	Identifier	vUserData		623890	1					
ANR	623956	Parameter	const XML_Char * name	1319:40:50187:50207	623890	1	True				
ANR	623957	ParameterType	const XML_Char *		623890	0					
ANR	623958	Identifier	name		623890	1					
ANR	623959	CFGEntryNode	ENTRY		623890		True				
ANR	623960	CFGExitNode	EXIT		623890		True				
ANR	623961	Symbol	knud		623890						
ANR	623962	Symbol	knud -> inKeyName		623890						
ANR	623963	Symbol	knud -> keyNameList		623890						
ANR	623964	Symbol	vUserData		623890						
ANR	623965	Symbol	name		623890						
ANR	623966	Symbol	false		623890						
ANR	623967	Symbol	* knud		623890						
ANR	623968	Symbol	knud -> keyName		623890						
ANR	623969	Symbol	strcasecmp		623890						
ANR	623970	Symbol	knud -> keyName . c_str		623890						
ANR	623971	Function	AmazonVMKeypairNames :: SendRequest	1329:0:50545:51141							
ANR	623972	FunctionDef	AmazonVMKeypairNames :: SendRequest ()		623971	0					
ANR	623973	CompoundStatement		1329:41:50586:51141	623971	0					
ANR	623974	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	1330:4:50592:50634	623971	0	True				
ANR	623975	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		623971	0					
ANR	623976	IdentifierDeclType	bool		623971	0					
ANR	623977	Identifier	result		623971	1					
ANR	623978	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		623971	2		=			
ANR	623979	Identifier	result		623971	0					
ANR	623980	CallExpression	AmazonRequest :: SendRequest ( )		623971	1					
ANR	623981	Callee	AmazonRequest :: SendRequest		623971	0					
ANR	623982	Identifier	AmazonRequest :: SendRequest		623971	0					
ANR	623983	ArgumentList			623971	1					
ANR	623984	IfStatement	if ( result )		623971	1					
ANR	623985	Condition	result	1331:8:50644:50649	623971	0	True				
ANR	623986	Identifier	result		623971	0					
ANR	623987	CompoundStatement		6:8:196:236	623971	1					
ANR	623988	IdentifierDeclStatement	keyNamesUD knud ( this -> keyNames ) ;	1333:8:50740:50773	623971	0	True				
ANR	623989	IdentifierDecl	knud ( this -> keyNames )		623971	0					
ANR	623990	IdentifierDeclType	keyNamesUD		623971	0					
ANR	623991	Identifier	knud		623971	1					
ANR	623992	PtrMemberAccess	this -> keyNames		623971	2					
ANR	623993	Identifier	this		623971	0					
ANR	623994	Identifier	keyNames		623971	1					
ANR	623995	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	1334:8:50783:50823	623971	1	True				
ANR	623996	IdentifierDecl	xp = XML_ParserCreate ( NULL )		623971	0					
ANR	623997	IdentifierDeclType	XML_Parser		623971	0					
ANR	623998	Identifier	xp		623971	1					
ANR	623999	AssignmentExpression	xp = XML_ParserCreate ( NULL )		623971	2		=			
ANR	624000	Identifier	xp		623971	0					
ANR	624001	CallExpression	XML_ParserCreate ( NULL )		623971	1					
ANR	624002	Callee	XML_ParserCreate		623971	0					
ANR	624003	Identifier	XML_ParserCreate		623971	0					
ANR	624004	ArgumentList	NULL		623971	1					
ANR	624005	Argument	NULL		623971	0					
ANR	624006	Identifier	NULL		623971	0					
ANR	624007	ExpressionStatement	"XML_SetElementHandler ( xp , & keypairNamesESH , & keypairNamesEEH )"	1335:8:50833:50898	623971	2	True				
ANR	624008	CallExpression	"XML_SetElementHandler ( xp , & keypairNamesESH , & keypairNamesEEH )"		623971	0					
ANR	624009	Callee	XML_SetElementHandler		623971	0					
ANR	624010	Identifier	XML_SetElementHandler		623971	0					
ANR	624011	ArgumentList	xp		623971	1					
ANR	624012	Argument	xp		623971	0					
ANR	624013	Identifier	xp		623971	0					
ANR	624014	Argument	& keypairNamesESH		623971	1					
ANR	624015	UnaryOperationExpression	& keypairNamesESH		623971	0					
ANR	624016	UnaryOperator	&		623971	0					
ANR	624017	Identifier	keypairNamesESH		623971	1					
ANR	624018	Argument	& keypairNamesEEH		623971	2					
ANR	624019	UnaryOperationExpression	& keypairNamesEEH		623971	0					
ANR	624020	UnaryOperator	&		623971	0					
ANR	624021	Identifier	keypairNamesEEH		623971	1					
ANR	624022	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & keypairNamesCDH )"	1336:8:50908:50960	623971	3	True				
ANR	624023	CallExpression	"XML_SetCharacterDataHandler ( xp , & keypairNamesCDH )"		623971	0					
ANR	624024	Callee	XML_SetCharacterDataHandler		623971	0					
ANR	624025	Identifier	XML_SetCharacterDataHandler		623971	0					
ANR	624026	ArgumentList	xp		623971	1					
ANR	624027	Argument	xp		623971	0					
ANR	624028	Identifier	xp		623971	0					
ANR	624029	Argument	& keypairNamesCDH		623971	1					
ANR	624030	UnaryOperationExpression	& keypairNamesCDH		623971	0					
ANR	624031	UnaryOperator	&		623971	0					
ANR	624032	Identifier	keypairNamesCDH		623971	1					
ANR	624033	ExpressionStatement	"XML_SetUserData ( xp , & knud )"	1337:8:50970:50999	623971	4	True				
ANR	624034	CallExpression	"XML_SetUserData ( xp , & knud )"		623971	0					
ANR	624035	Callee	XML_SetUserData		623971	0					
ANR	624036	Identifier	XML_SetUserData		623971	0					
ANR	624037	ArgumentList	xp		623971	1					
ANR	624038	Argument	xp		623971	0					
ANR	624039	Identifier	xp		623971	0					
ANR	624040	Argument	& knud		623971	1					
ANR	624041	UnaryOperationExpression	& knud		623971	0					
ANR	624042	UnaryOperator	&		623971	0					
ANR	624043	Identifier	knud		623971	1					
ANR	624044	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	1338:8:51009:51084	623971	5	True				
ANR	624045	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		623971	0					
ANR	624046	Callee	XML_Parse		623971	0					
ANR	624047	Identifier	XML_Parse		623971	0					
ANR	624048	ArgumentList	xp		623971	1					
ANR	624049	Argument	xp		623971	0					
ANR	624050	Identifier	xp		623971	0					
ANR	624051	Argument	this -> resultString . c_str ( )		623971	1					
ANR	624052	CallExpression	this -> resultString . c_str ( )		623971	0					
ANR	624053	Callee	this -> resultString . c_str		623971	0					
ANR	624054	MemberAccess	this -> resultString . c_str		623971	0					
ANR	624055	PtrMemberAccess	this -> resultString		623971	0					
ANR	624056	Identifier	this		623971	0					
ANR	624057	Identifier	resultString		623971	1					
ANR	624058	Identifier	c_str		623971	1					
ANR	624059	ArgumentList			623971	1					
ANR	624060	Argument	this -> resultString . length ( )		623971	2					
ANR	624061	CallExpression	this -> resultString . length ( )		623971	0					
ANR	624062	Callee	this -> resultString . length		623971	0					
ANR	624063	MemberAccess	this -> resultString . length		623971	0					
ANR	624064	PtrMemberAccess	this -> resultString		623971	0					
ANR	624065	Identifier	this		623971	0					
ANR	624066	Identifier	resultString		623971	1					
ANR	624067	Identifier	length		623971	1					
ANR	624068	ArgumentList			623971	1					
ANR	624069	Argument	1		623971	3					
ANR	624070	PrimaryExpression	1		623971	0					
ANR	624071	ExpressionStatement	XML_ParserFree ( xp )	1339:8:51094:51114	623971	6	True				
ANR	624072	CallExpression	XML_ParserFree ( xp )		623971	0					
ANR	624073	Callee	XML_ParserFree		623971	0					
ANR	624074	Identifier	XML_ParserFree		623971	0					
ANR	624075	ArgumentList	xp		623971	1					
ANR	624076	Argument	xp		623971	0					
ANR	624077	Identifier	xp		623971	0					
ANR	624078	ReturnStatement	return result ;	1341:4:51126:51139	623971	2	True				
ANR	624079	Identifier	result		623971	0					
ANR	624080	ReturnType	bool		623971	1					
ANR	624081	Identifier	AmazonVMKeypairNames :: SendRequest		623971	2					
ANR	624082	ParameterList			623971	3					
ANR	624083	CFGEntryNode	ENTRY		623971		True				
ANR	624084	CFGExitNode	EXIT		623971		True				
ANR	624085	Symbol	knud		623971						
ANR	624086	Symbol	& knud		623971						
ANR	624087	Symbol	NULL		623971						
ANR	624088	Symbol	AmazonRequest :: SendRequest		623971						
ANR	624089	Symbol	this -> resultString		623971						
ANR	624090	Symbol	this -> resultString . length		623971						
ANR	624091	Symbol	this -> resultString . c_str		623971						
ANR	624092	Symbol	this		623971						
ANR	624093	Symbol	result		623971						
ANR	624094	Symbol	* this		623971						
ANR	624095	Symbol	& keypairNamesCDH		623971						
ANR	624096	Symbol	& keypairNamesEEH		623971						
ANR	624097	Symbol	xp		623971						
ANR	624098	Symbol	XML_ParserCreate		623971						
ANR	624099	Symbol	& keypairNamesESH		623971						
ANR	624100	Function	AmazonVMKeypairNames :: workerFunction	1345:0:51232:52554							
ANR	624101	FunctionDef	"AmazonVMKeypairNames :: workerFunction (char * * argv , int argc , std :: string & result_string)"		624100	0					
ANR	624102	CompoundStatement		1345:93:51325:52554	624100	0					
ANR	624103	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0 )"	1346:4:51331:51387	624100	0	True				
ANR	624104	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0 )"		624100	0					
ANR	624105	Callee	assert		624100	0					
ANR	624106	Identifier	assert		624100	0					
ANR	624107	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0"		624100	1					
ANR	624108	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0"		624100	0					
ANR	624109	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0"		624100	0		==			
ANR	624110	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" )"		624100	0					
ANR	624111	Callee	strcmp		624100	0					
ANR	624112	Identifier	strcmp		624100	0					
ANR	624113	ArgumentList	argv [ 0 ]		624100	1					
ANR	624114	Argument	argv [ 0 ]		624100	0					
ANR	624115	ArrayIndexing	argv [ 0 ]		624100	0					
ANR	624116	Identifier	argv		624100	0					
ANR	624117	PrimaryExpression	0		624100	1					
ANR	624118	Argument	"""EC2_VM_KEYPAIR_NAMES"""		624100	1					
ANR	624119	PrimaryExpression	"""EC2_VM_KEYPAIR_NAMES"""		624100	0					
ANR	624120	PrimaryExpression	0		624100	1					
ANR	624121	IdentifierDeclStatement	int requestID ;	1351:4:51576:51589	624100	1	True				
ANR	624122	IdentifierDecl	requestID		624100	0					
ANR	624123	IdentifierDeclType	int		624100	0					
ANR	624124	Identifier	requestID		624100	1					
ANR	624125	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1352:4:51595:51626	624100	2	True				
ANR	624126	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		624100	0					
ANR	624127	Callee	get_int		624100	0					
ANR	624128	Identifier	get_int		624100	0					
ANR	624129	ArgumentList	argv [ 1 ]		624100	1					
ANR	624130	Argument	argv [ 1 ]		624100	0					
ANR	624131	ArrayIndexing	argv [ 1 ]		624100	0					
ANR	624132	Identifier	argv		624100	0					
ANR	624133	PrimaryExpression	1		624100	1					
ANR	624134	Argument	& requestID		624100	1					
ANR	624135	UnaryOperationExpression	& requestID		624100	0					
ANR	624136	UnaryOperator	&		624100	0					
ANR	624137	Identifier	requestID		624100	1					
ANR	624138	IfStatement	"if ( ! verify_min_number_args ( argc , 5 ) )"		624100	3					
ANR	624139	Condition	"! verify_min_number_args ( argc , 5 )"	1354:8:51641:51675	624100	0	True				
ANR	624140	UnaryOperationExpression	"! verify_min_number_args ( argc , 5 )"		624100	0					
ANR	624141	UnaryOperator	!		624100	0					
ANR	624142	CallExpression	"verify_min_number_args ( argc , 5 )"		624100	1					
ANR	624143	Callee	verify_min_number_args		624100	0					
ANR	624144	Identifier	verify_min_number_args		624100	0					
ANR	624145	ArgumentList	argc		624100	1					
ANR	624146	Argument	argc		624100	0					
ANR	624147	Identifier	argc		624100	0					
ANR	624148	Argument	5		624100	1					
ANR	624149	PrimaryExpression	5		624100	0					
ANR	624150	CompoundStatement		10:46:353:353	624100	1					
ANR	624151	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1355:8:51689:51764	624100	0	True				
ANR	624152	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		624100	0		=			
ANR	624153	Identifier	result_string		624100	0					
ANR	624154	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		624100	1					
ANR	624155	Callee	create_failure_result		624100	0					
ANR	624156	Identifier	create_failure_result		624100	0					
ANR	624157	ArgumentList	requestID		624100	1					
ANR	624158	Argument	requestID		624100	0					
ANR	624159	Identifier	requestID		624100	0					
ANR	624160	Argument	"""Wrong_Argument_Number"""		624100	1					
ANR	624161	PrimaryExpression	"""Wrong_Argument_Number"""		624100	0					
ANR	624162	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"	1356:8:51774:51886	624100	1	True				
ANR	624163	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"		624100	0					
ANR	624164	Callee	dprintf		624100	0					
ANR	624165	Identifier	dprintf		624100	0					
ANR	624166	ArgumentList	D_ALWAYS		624100	1					
ANR	624167	Argument	D_ALWAYS		624100	0					
ANR	624168	Identifier	D_ALWAYS		624100	0					
ANR	624169	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		624100	1					
ANR	624170	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		624100	0					
ANR	624171	Argument	argc		624100	2					
ANR	624172	Identifier	argc		624100	0					
ANR	624173	Argument	5		624100	3					
ANR	624174	PrimaryExpression	5		624100	0					
ANR	624175	Argument	argv [ 0 ]		624100	4					
ANR	624176	ArrayIndexing	argv [ 0 ]		624100	0					
ANR	624177	Identifier	argv		624100	0					
ANR	624178	PrimaryExpression	0		624100	1					
ANR	624179	ReturnStatement	return false ;	1358:8:51896:51908	624100	2	True				
ANR	624180	Identifier	false		624100	0					
ANR	624181	IdentifierDeclStatement	AmazonVMKeypairNames keypairRequest ;	1362:4:51970:52005	624100	4	True				
ANR	624182	IdentifierDecl	keypairRequest		624100	0					
ANR	624183	IdentifierDeclType	AmazonVMKeypairNames		624100	0					
ANR	624184	Identifier	keypairRequest		624100	1					
ANR	624185	ExpressionStatement	keypairRequest . serviceURL = argv [ 2 ]	1363:4:52011:52046	624100	5	True				
ANR	624186	AssignmentExpression	keypairRequest . serviceURL = argv [ 2 ]		624100	0		=			
ANR	624187	MemberAccess	keypairRequest . serviceURL		624100	0					
ANR	624188	Identifier	keypairRequest		624100	0					
ANR	624189	Identifier	serviceURL		624100	1					
ANR	624190	ArrayIndexing	argv [ 2 ]		624100	1					
ANR	624191	Identifier	argv		624100	0					
ANR	624192	PrimaryExpression	2		624100	1					
ANR	624193	ExpressionStatement	keypairRequest . accessKeyFile = argv [ 3 ]	1364:4:52052:52090	624100	6	True				
ANR	624194	AssignmentExpression	keypairRequest . accessKeyFile = argv [ 3 ]		624100	0		=			
ANR	624195	MemberAccess	keypairRequest . accessKeyFile		624100	0					
ANR	624196	Identifier	keypairRequest		624100	0					
ANR	624197	Identifier	accessKeyFile		624100	1					
ANR	624198	ArrayIndexing	argv [ 3 ]		624100	1					
ANR	624199	Identifier	argv		624100	0					
ANR	624200	PrimaryExpression	3		624100	1					
ANR	624201	ExpressionStatement	keypairRequest . secretKeyFile = argv [ 4 ]	1365:4:52096:52134	624100	7	True				
ANR	624202	AssignmentExpression	keypairRequest . secretKeyFile = argv [ 4 ]		624100	0		=			
ANR	624203	MemberAccess	keypairRequest . secretKeyFile		624100	0					
ANR	624204	Identifier	keypairRequest		624100	0					
ANR	624205	Identifier	secretKeyFile		624100	1					
ANR	624206	ArrayIndexing	argv [ 4 ]		624100	1					
ANR	624207	Identifier	argv		624100	0					
ANR	624208	PrimaryExpression	4		624100	1					
ANR	624209	ExpressionStatement	"keypairRequest . query_parameters [ ""Action"" ] = ""DescribeKeyPairs"""	1366:4:52140:52204	624100	8	True				
ANR	624210	AssignmentExpression	"keypairRequest . query_parameters [ ""Action"" ] = ""DescribeKeyPairs"""		624100	0		=			
ANR	624211	ArrayIndexing	"keypairRequest . query_parameters [ ""Action"" ]"		624100	0					
ANR	624212	MemberAccess	keypairRequest . query_parameters		624100	0					
ANR	624213	Identifier	keypairRequest		624100	0					
ANR	624214	Identifier	query_parameters		624100	1					
ANR	624215	PrimaryExpression	"""Action"""		624100	1					
ANR	624216	PrimaryExpression	"""DescribeKeyPairs"""		624100	1					
ANR	624217	IfStatement	if ( ! keypairRequest . SendRequest ( ) )		624100	9					
ANR	624218	Condition	! keypairRequest . SendRequest ( )	1369:8:52240:52269	624100	0	True				
ANR	624219	UnaryOperationExpression	! keypairRequest . SendRequest ( )		624100	0					
ANR	624220	UnaryOperator	!		624100	0					
ANR	624221	CallExpression	keypairRequest . SendRequest ( )		624100	1					
ANR	624222	Callee	keypairRequest . SendRequest		624100	0					
ANR	624223	MemberAccess	keypairRequest . SendRequest		624100	0					
ANR	624224	Identifier	keypairRequest		624100	0					
ANR	624225	Identifier	SendRequest		624100	1					
ANR	624226	ArgumentList			624100	1					
ANR	624227	CompoundStatement		25:41:947:947	624100	1					
ANR	624228	ExpressionStatement	"result_string = create_failure_result ( requestID , keypairRequest . errorMessage . c_str ( ) , keypairRequest . errorCode . c_str ( ) )"	1370:8:52283:52428	624100	0	True				
ANR	624229	AssignmentExpression	"result_string = create_failure_result ( requestID , keypairRequest . errorMessage . c_str ( ) , keypairRequest . errorCode . c_str ( ) )"		624100	0		=			
ANR	624230	Identifier	result_string		624100	0					
ANR	624231	CallExpression	"create_failure_result ( requestID , keypairRequest . errorMessage . c_str ( ) , keypairRequest . errorCode . c_str ( ) )"		624100	1					
ANR	624232	Callee	create_failure_result		624100	0					
ANR	624233	Identifier	create_failure_result		624100	0					
ANR	624234	ArgumentList	requestID		624100	1					
ANR	624235	Argument	requestID		624100	0					
ANR	624236	Identifier	requestID		624100	0					
ANR	624237	Argument	keypairRequest . errorMessage . c_str ( )		624100	1					
ANR	624238	CallExpression	keypairRequest . errorMessage . c_str ( )		624100	0					
ANR	624239	Callee	keypairRequest . errorMessage . c_str		624100	0					
ANR	624240	MemberAccess	keypairRequest . errorMessage . c_str		624100	0					
ANR	624241	MemberAccess	keypairRequest . errorMessage		624100	0					
ANR	624242	Identifier	keypairRequest		624100	0					
ANR	624243	Identifier	errorMessage		624100	1					
ANR	624244	Identifier	c_str		624100	1					
ANR	624245	ArgumentList			624100	1					
ANR	624246	Argument	keypairRequest . errorCode . c_str ( )		624100	2					
ANR	624247	CallExpression	keypairRequest . errorCode . c_str ( )		624100	0					
ANR	624248	Callee	keypairRequest . errorCode . c_str		624100	0					
ANR	624249	MemberAccess	keypairRequest . errorCode . c_str		624100	0					
ANR	624250	MemberAccess	keypairRequest . errorCode		624100	0					
ANR	624251	Identifier	keypairRequest		624100	0					
ANR	624252	Identifier	errorCode		624100	1					
ANR	624253	Identifier	c_str		624100	1					
ANR	624254	ArgumentList			624100	1					
ANR	624255	ElseStatement	else		624100	0					
ANR	624256	CompoundStatement		29:11:1115:1115	624100	0					
ANR	624257	ExpressionStatement	"result_string = create_success_result ( requestID , & keypairRequest . keyNames )"	1374:8:52451:52528	624100	0	True				
ANR	624258	AssignmentExpression	"result_string = create_success_result ( requestID , & keypairRequest . keyNames )"		624100	0		=			
ANR	624259	Identifier	result_string		624100	0					
ANR	624260	CallExpression	"create_success_result ( requestID , & keypairRequest . keyNames )"		624100	1					
ANR	624261	Callee	create_success_result		624100	0					
ANR	624262	Identifier	create_success_result		624100	0					
ANR	624263	ArgumentList	requestID		624100	1					
ANR	624264	Argument	requestID		624100	0					
ANR	624265	Identifier	requestID		624100	0					
ANR	624266	Argument	& keypairRequest . keyNames		624100	1					
ANR	624267	UnaryOperationExpression	& keypairRequest . keyNames		624100	0					
ANR	624268	UnaryOperator	&		624100	0					
ANR	624269	MemberAccess	keypairRequest . keyNames		624100	1					
ANR	624270	Identifier	keypairRequest		624100	0					
ANR	624271	Identifier	keyNames		624100	1					
ANR	624272	ReturnStatement	return true ;	1377:4:52541:52552	624100	10	True				
ANR	624273	Identifier	true		624100	0					
ANR	624274	ReturnType	bool		624100	1					
ANR	624275	Identifier	AmazonVMKeypairNames :: workerFunction		624100	2					
ANR	624276	ParameterList	"char * * argv , int argc , std :: string & result_string"		624100	3					
ANR	624277	Parameter	char * * argv	1345:42:51274:51284	624100	0	True				
ANR	624278	ParameterType	char * *		624100	0					
ANR	624279	Identifier	argv		624100	1					
ANR	624280	Parameter	int argc	1345:55:51287:51294	624100	1	True				
ANR	624281	ParameterType	int		624100	0					
ANR	624282	Identifier	argc		624100	1					
ANR	624283	Parameter	std :: string & result_string	1345:65:51297:51322	624100	2	True				
ANR	624284	ParameterType	std :: string &		624100	0					
ANR	624285	Identifier	result_string		624100	1					
ANR	624286	CFGEntryNode	ENTRY		624100		True				
ANR	624287	CFGExitNode	EXIT		624100		True				
ANR	624288	Symbol	keypairRequest . errorMessage		624100						
ANR	624289	Symbol	& keypairRequest . keyNames		624100						
ANR	624290	Symbol	keypairRequest . errorCode . c_str		624100						
ANR	624291	Symbol	* argv		624100						
ANR	624292	Symbol	keypairRequest		624100						
ANR	624293	Symbol	argv		624100						
ANR	624294	Symbol	& requestID		624100						
ANR	624295	Symbol	create_success_result		624100						
ANR	624296	Symbol	keypairRequest . SendRequest		624100						
ANR	624297	Symbol	keypairRequest . query_parameters		624100						
ANR	624298	Symbol	keypairRequest . serviceURL		624100						
ANR	624299	Symbol	result_string		624100						
ANR	624300	Symbol	argc		624100						
ANR	624301	Symbol	strcmp		624100						
ANR	624302	Symbol	& keypairRequest		624100						
ANR	624303	Symbol	keypairRequest . errorCode		624100						
ANR	624304	Symbol	D_ALWAYS		624100						
ANR	624305	Symbol	false		624100						
ANR	624306	Symbol	* keypairRequest . query_parameters		624100						
ANR	624307	Symbol	verify_min_number_args		624100						
ANR	624308	Symbol	keypairRequest . secretKeyFile		624100						
ANR	624309	Symbol	keypairRequest . accessKeyFile		624100						
ANR	624310	Symbol	keypairRequest . errorMessage . c_str		624100						
ANR	624311	Symbol	* keypairRequest		624100						
ANR	624312	Symbol	requestID		624100						
ANR	624313	Symbol	create_failure_result		624100						
ANR	624314	Symbol	true		624100						
ANR	624315	Function	AmazonAssociateAddress :: AmazonAssociateAddress	1382:0:52637:52688							
ANR	624316	FunctionDef	AmazonAssociateAddress :: AmazonAssociateAddress ()		624315	0					
ANR	624317	CompoundStatement		1382:49:52686:52688	624315	0					
ANR	624318	Identifier	AmazonAssociateAddress :: AmazonAssociateAddress		624315	1					
ANR	624319	ParameterList			624315	2					
ANR	624320	CFGEntryNode	ENTRY		624315		True				
ANR	624321	CFGExitNode	EXIT		624315		True				
ANR	624322	Function	AmazonAssociateAddress :: ~AmazonAssociateAddress	1384:0:52691:52743							
ANR	624323	FunctionDef	AmazonAssociateAddress :: ~AmazonAssociateAddress ()		624322	0					
ANR	624324	CompoundStatement		1384:50:52741:52743	624322	0					
ANR	624325	Identifier	AmazonAssociateAddress :: ~AmazonAssociateAddress		624322	1					
ANR	624326	ParameterList			624322	2					
ANR	624327	CFGEntryNode	ENTRY		624322		True				
ANR	624328	CFGExitNode	EXIT		624322		True				
ANR	624329	Function	AmazonAssociateAddress :: workerFunction	1387:0:52865:54711							
ANR	624330	FunctionDef	"AmazonAssociateAddress :: workerFunction (char * * argv , int argc , std :: string & result_string)"		624329	0					
ANR	624331	CompoundStatement		1387:95:52960:54711	624329	0					
ANR	624332	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0 )"	1388:4:52966:53026	624329	0	True				
ANR	624333	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0 )"		624329	0					
ANR	624334	Callee	assert		624329	0					
ANR	624335	Identifier	assert		624329	0					
ANR	624336	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0"		624329	1					
ANR	624337	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0"		624329	0					
ANR	624338	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0"		624329	0		==			
ANR	624339	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" )"		624329	0					
ANR	624340	Callee	strcmp		624329	0					
ANR	624341	Identifier	strcmp		624329	0					
ANR	624342	ArgumentList	argv [ 0 ]		624329	1					
ANR	624343	Argument	argv [ 0 ]		624329	0					
ANR	624344	ArrayIndexing	argv [ 0 ]		624329	0					
ANR	624345	Identifier	argv		624329	0					
ANR	624346	PrimaryExpression	0		624329	1					
ANR	624347	Argument	"""EC2_VM_ASSOCIATE_ADDRESS"""		624329	1					
ANR	624348	PrimaryExpression	"""EC2_VM_ASSOCIATE_ADDRESS"""		624329	0					
ANR	624349	PrimaryExpression	0		624329	1					
ANR	624350	IdentifierDeclStatement	int requestID ;	1393:4:53226:53239	624329	1	True				
ANR	624351	IdentifierDecl	requestID		624329	0					
ANR	624352	IdentifierDeclType	int		624329	0					
ANR	624353	Identifier	requestID		624329	1					
ANR	624354	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1394:4:53245:53276	624329	2	True				
ANR	624355	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		624329	0					
ANR	624356	Callee	get_int		624329	0					
ANR	624357	Identifier	get_int		624329	0					
ANR	624358	ArgumentList	argv [ 1 ]		624329	1					
ANR	624359	Argument	argv [ 1 ]		624329	0					
ANR	624360	ArrayIndexing	argv [ 1 ]		624329	0					
ANR	624361	Identifier	argv		624329	0					
ANR	624362	PrimaryExpression	1		624329	1					
ANR	624363	Argument	& requestID		624329	1					
ANR	624364	UnaryOperationExpression	& requestID		624329	0					
ANR	624365	UnaryOperator	&		624329	0					
ANR	624366	Identifier	requestID		624329	1					
ANR	624367	IfStatement	"if ( ! verify_min_number_args ( argc , 7 ) )"		624329	3					
ANR	624368	Condition	"! verify_min_number_args ( argc , 7 )"	1396:8:53291:53325	624329	0	True				
ANR	624369	UnaryOperationExpression	"! verify_min_number_args ( argc , 7 )"		624329	0					
ANR	624370	UnaryOperator	!		624329	0					
ANR	624371	CallExpression	"verify_min_number_args ( argc , 7 )"		624329	1					
ANR	624372	Callee	verify_min_number_args		624329	0					
ANR	624373	Identifier	verify_min_number_args		624329	0					
ANR	624374	ArgumentList	argc		624329	1					
ANR	624375	Argument	argc		624329	0					
ANR	624376	Identifier	argc		624329	0					
ANR	624377	Argument	7		624329	1					
ANR	624378	PrimaryExpression	7		624329	0					
ANR	624379	CompoundStatement		10:46:368:368	624329	1					
ANR	624380	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1397:8:53339:53414	624329	0	True				
ANR	624381	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		624329	0		=			
ANR	624382	Identifier	result_string		624329	0					
ANR	624383	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		624329	1					
ANR	624384	Callee	create_failure_result		624329	0					
ANR	624385	Identifier	create_failure_result		624329	0					
ANR	624386	ArgumentList	requestID		624329	1					
ANR	624387	Argument	requestID		624329	0					
ANR	624388	Identifier	requestID		624329	0					
ANR	624389	Argument	"""Wrong_Argument_Number"""		624329	1					
ANR	624390	PrimaryExpression	"""Wrong_Argument_Number"""		624329	0					
ANR	624391	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"	1398:8:53424:53519	624329	1	True				
ANR	624392	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"		624329	0					
ANR	624393	Callee	dprintf		624329	0					
ANR	624394	Identifier	dprintf		624329	0					
ANR	624395	ArgumentList	D_ALWAYS		624329	1					
ANR	624396	Argument	D_ALWAYS		624329	0					
ANR	624397	Identifier	D_ALWAYS		624329	0					
ANR	624398	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		624329	1					
ANR	624399	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		624329	0					
ANR	624400	Argument	argc		624329	2					
ANR	624401	Identifier	argc		624329	0					
ANR	624402	Argument	7		624329	3					
ANR	624403	PrimaryExpression	7		624329	0					
ANR	624404	Argument	argv [ 0 ]		624329	4					
ANR	624405	ArrayIndexing	argv [ 0 ]		624329	0					
ANR	624406	Identifier	argv		624329	0					
ANR	624407	PrimaryExpression	0		624329	1					
ANR	624408	ReturnStatement	return false ;	1399:8:53529:53541	624329	2	True				
ANR	624409	Identifier	false		624329	0					
ANR	624410	IdentifierDeclStatement	AmazonAssociateAddress asRequest ;	1403:4:53603:53635	624329	4	True				
ANR	624411	IdentifierDecl	asRequest		624329	0					
ANR	624412	IdentifierDeclType	AmazonAssociateAddress		624329	0					
ANR	624413	Identifier	asRequest		624329	1					
ANR	624414	ExpressionStatement	asRequest . serviceURL = argv [ 2 ]	1404:4:53641:53671	624329	5	True				
ANR	624415	AssignmentExpression	asRequest . serviceURL = argv [ 2 ]		624329	0		=			
ANR	624416	MemberAccess	asRequest . serviceURL		624329	0					
ANR	624417	Identifier	asRequest		624329	0					
ANR	624418	Identifier	serviceURL		624329	1					
ANR	624419	ArrayIndexing	argv [ 2 ]		624329	1					
ANR	624420	Identifier	argv		624329	0					
ANR	624421	PrimaryExpression	2		624329	1					
ANR	624422	ExpressionStatement	asRequest . accessKeyFile = argv [ 3 ]	1405:4:53677:53710	624329	6	True				
ANR	624423	AssignmentExpression	asRequest . accessKeyFile = argv [ 3 ]		624329	0		=			
ANR	624424	MemberAccess	asRequest . accessKeyFile		624329	0					
ANR	624425	Identifier	asRequest		624329	0					
ANR	624426	Identifier	accessKeyFile		624329	1					
ANR	624427	ArrayIndexing	argv [ 3 ]		624329	1					
ANR	624428	Identifier	argv		624329	0					
ANR	624429	PrimaryExpression	3		624329	1					
ANR	624430	ExpressionStatement	asRequest . secretKeyFile = argv [ 4 ]	1406:4:53716:53749	624329	7	True				
ANR	624431	AssignmentExpression	asRequest . secretKeyFile = argv [ 4 ]		624329	0		=			
ANR	624432	MemberAccess	asRequest . secretKeyFile		624329	0					
ANR	624433	Identifier	asRequest		624329	0					
ANR	624434	Identifier	secretKeyFile		624329	1					
ANR	624435	ArrayIndexing	argv [ 4 ]		624329	1					
ANR	624436	Identifier	argv		624329	0					
ANR	624437	PrimaryExpression	4		624329	1					
ANR	624438	ExpressionStatement	"asRequest . query_parameters [ ""Action"" ] = ""AssociateAddress"""	1407:4:53755:53814	624329	8	True				
ANR	624439	AssignmentExpression	"asRequest . query_parameters [ ""Action"" ] = ""AssociateAddress"""		624329	0		=			
ANR	624440	ArrayIndexing	"asRequest . query_parameters [ ""Action"" ]"		624329	0					
ANR	624441	MemberAccess	asRequest . query_parameters		624329	0					
ANR	624442	Identifier	asRequest		624329	0					
ANR	624443	Identifier	query_parameters		624329	1					
ANR	624444	PrimaryExpression	"""Action"""		624329	1					
ANR	624445	PrimaryExpression	"""AssociateAddress"""		624329	1					
ANR	624446	ExpressionStatement	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 5 ]"	1408:4:53820:53872	624329	9	True				
ANR	624447	AssignmentExpression	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 5 ]"		624329	0		=			
ANR	624448	ArrayIndexing	"asRequest . query_parameters [ ""InstanceId"" ]"		624329	0					
ANR	624449	MemberAccess	asRequest . query_parameters		624329	0					
ANR	624450	Identifier	asRequest		624329	0					
ANR	624451	Identifier	query_parameters		624329	1					
ANR	624452	PrimaryExpression	"""InstanceId"""		624329	1					
ANR	624453	ArrayIndexing	argv [ 5 ]		624329	1					
ANR	624454	Identifier	argv		624329	0					
ANR	624455	PrimaryExpression	5		624329	1					
ANR	624456	IdentifierDeclStatement	const char * pszFullIPStr = argv [ 6 ] ;	1412:1:53964:53999	624329	10	True				
ANR	624457	IdentifierDecl	* pszFullIPStr = argv [ 6 ]		624329	0					
ANR	624458	IdentifierDeclType	const char *		624329	0					
ANR	624459	Identifier	pszFullIPStr		624329	1					
ANR	624460	AssignmentExpression	* pszFullIPStr = argv [ 6 ]		624329	2		=			
ANR	624461	Identifier	pszFullIPStr		624329	0					
ANR	624462	ArrayIndexing	argv [ 6 ]		624329	1					
ANR	624463	Identifier	argv		624329	0					
ANR	624464	PrimaryExpression	6		624329	1					
ANR	624465	IdentifierDeclStatement	const char * pszIPStr = 0 ;	1413:1:54002:54025	624329	11	True				
ANR	624466	IdentifierDecl	* pszIPStr = 0		624329	0					
ANR	624467	IdentifierDeclType	const char *		624329	0					
ANR	624468	Identifier	pszIPStr		624329	1					
ANR	624469	AssignmentExpression	* pszIPStr = 0		624329	2		=			
ANR	624470	Identifier	pszIPStr		624329	0					
ANR	624471	PrimaryExpression	0		624329	1					
ANR	624472	IdentifierDeclStatement	const char * pszAllocationId = 0 ;	1414:1:54028:54058	624329	12	True				
ANR	624473	IdentifierDecl	* pszAllocationId = 0		624329	0					
ANR	624474	IdentifierDeclType	const char *		624329	0					
ANR	624475	Identifier	pszAllocationId		624329	1					
ANR	624476	AssignmentExpression	* pszAllocationId = 0		624329	2		=			
ANR	624477	Identifier	pszAllocationId		624329	0					
ANR	624478	PrimaryExpression	0		624329	1					
ANR	624479	IdentifierDeclStatement	"StringList elastic_ip_addr_info ( pszFullIPStr , "":"" ) ;"	1415:1:54061:54112	624329	13	True				
ANR	624480	IdentifierDecl	"elastic_ip_addr_info ( pszFullIPStr , "":"" )"		624329	0					
ANR	624481	IdentifierDeclType	StringList		624329	0					
ANR	624482	Identifier	elastic_ip_addr_info		624329	1					
ANR	624483	Expression	"pszFullIPStr , "":"""		624329	2					
ANR	624484	Identifier	pszFullIPStr		624329	0					
ANR	624485	PrimaryExpression	""":"""		624329	1					
ANR	624486	ExpressionStatement	elastic_ip_addr_info . rewind ( )	1416:1:54115:54144	624329	14	True				
ANR	624487	CallExpression	elastic_ip_addr_info . rewind ( )		624329	0					
ANR	624488	Callee	elastic_ip_addr_info . rewind		624329	0					
ANR	624489	MemberAccess	elastic_ip_addr_info . rewind		624329	0					
ANR	624490	Identifier	elastic_ip_addr_info		624329	0					
ANR	624491	Identifier	rewind		624329	1					
ANR	624492	ArgumentList			624329	1					
ANR	624493	ExpressionStatement	pszIPStr = elastic_ip_addr_info . next ( )	1417:1:54147:54185	624329	15	True				
ANR	624494	AssignmentExpression	pszIPStr = elastic_ip_addr_info . next ( )		624329	0		=			
ANR	624495	Identifier	pszIPStr		624329	0					
ANR	624496	CallExpression	elastic_ip_addr_info . next ( )		624329	1					
ANR	624497	Callee	elastic_ip_addr_info . next		624329	0					
ANR	624498	MemberAccess	elastic_ip_addr_info . next		624329	0					
ANR	624499	Identifier	elastic_ip_addr_info		624329	0					
ANR	624500	Identifier	next		624329	1					
ANR	624501	ArgumentList			624329	1					
ANR	624502	ExpressionStatement	pszAllocationId = elastic_ip_addr_info . next ( )	1418:1:54188:54231	624329	16	True				
ANR	624503	AssignmentExpression	pszAllocationId = elastic_ip_addr_info . next ( )		624329	0		=			
ANR	624504	Identifier	pszAllocationId		624329	0					
ANR	624505	CallExpression	elastic_ip_addr_info . next ( )		624329	1					
ANR	624506	Callee	elastic_ip_addr_info . next		624329	0					
ANR	624507	MemberAccess	elastic_ip_addr_info . next		624329	0					
ANR	624508	Identifier	elastic_ip_addr_info		624329	0					
ANR	624509	Identifier	next		624329	1					
ANR	624510	ArgumentList			624329	1					
ANR	624511	IfStatement	if ( pszAllocationId )		624329	17					
ANR	624512	Condition	pszAllocationId	1420:6:54241:54255	624329	0	True				
ANR	624513	Identifier	pszAllocationId		624329	0					
ANR	624514	CompoundStatement		35:1:1299:1299	624329	1					
ANR	624515	ExpressionStatement	"asRequest . query_parameters [ ""AllocationId"" ] = pszAllocationId"	1422:2:54264:54326	624329	0	True				
ANR	624516	AssignmentExpression	"asRequest . query_parameters [ ""AllocationId"" ] = pszAllocationId"		624329	0		=			
ANR	624517	ArrayIndexing	"asRequest . query_parameters [ ""AllocationId"" ]"		624329	0					
ANR	624518	MemberAccess	asRequest . query_parameters		624329	0					
ANR	624519	Identifier	asRequest		624329	0					
ANR	624520	Identifier	query_parameters		624329	1					
ANR	624521	PrimaryExpression	"""AllocationId"""		624329	1					
ANR	624522	Identifier	pszAllocationId		624329	1					
ANR	624523	ElseStatement	else		624329	0					
ANR	624524	CompoundStatement		39:1:1377:1377	624329	0					
ANR	624525	ExpressionStatement	"asRequest . query_parameters [ ""PublicIp"" ] = pszIPStr"	1426:2:54342:54393	624329	0	True				
ANR	624526	AssignmentExpression	"asRequest . query_parameters [ ""PublicIp"" ] = pszIPStr"		624329	0		=			
ANR	624527	ArrayIndexing	"asRequest . query_parameters [ ""PublicIp"" ]"		624329	0					
ANR	624528	MemberAccess	asRequest . query_parameters		624329	0					
ANR	624529	Identifier	asRequest		624329	0					
ANR	624530	Identifier	query_parameters		624329	1					
ANR	624531	PrimaryExpression	"""PublicIp"""		624329	1					
ANR	624532	Identifier	pszIPStr		624329	1					
ANR	624533	IfStatement	if ( ! asRequest . SendRequest ( ) )		624329	18					
ANR	624534	Condition	! asRequest . SendRequest ( )	1430:8:54433:54457	624329	0	True				
ANR	624535	UnaryOperationExpression	! asRequest . SendRequest ( )		624329	0					
ANR	624536	UnaryOperator	!		624329	0					
ANR	624537	CallExpression	asRequest . SendRequest ( )		624329	1					
ANR	624538	Callee	asRequest . SendRequest		624329	0					
ANR	624539	MemberAccess	asRequest . SendRequest		624329	0					
ANR	624540	Identifier	asRequest		624329	0					
ANR	624541	Identifier	SendRequest		624329	1					
ANR	624542	ArgumentList			624329	1					
ANR	624543	CompoundStatement		44:36:1500:1500	624329	1					
ANR	624544	ExpressionStatement	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"	1431:8:54471:54606	624329	0	True				
ANR	624545	AssignmentExpression	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		624329	0		=			
ANR	624546	Identifier	result_string		624329	0					
ANR	624547	CallExpression	"create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		624329	1					
ANR	624548	Callee	create_failure_result		624329	0					
ANR	624549	Identifier	create_failure_result		624329	0					
ANR	624550	ArgumentList	requestID		624329	1					
ANR	624551	Argument	requestID		624329	0					
ANR	624552	Identifier	requestID		624329	0					
ANR	624553	Argument	asRequest . errorMessage . c_str ( )		624329	1					
ANR	624554	CallExpression	asRequest . errorMessage . c_str ( )		624329	0					
ANR	624555	Callee	asRequest . errorMessage . c_str		624329	0					
ANR	624556	MemberAccess	asRequest . errorMessage . c_str		624329	0					
ANR	624557	MemberAccess	asRequest . errorMessage		624329	0					
ANR	624558	Identifier	asRequest		624329	0					
ANR	624559	Identifier	errorMessage		624329	1					
ANR	624560	Identifier	c_str		624329	1					
ANR	624561	ArgumentList			624329	1					
ANR	624562	Argument	asRequest . errorCode . c_str ( )		624329	2					
ANR	624563	CallExpression	asRequest . errorCode . c_str ( )		624329	0					
ANR	624564	Callee	asRequest . errorCode . c_str		624329	0					
ANR	624565	MemberAccess	asRequest . errorCode . c_str		624329	0					
ANR	624566	MemberAccess	asRequest . errorCode		624329	0					
ANR	624567	Identifier	asRequest		624329	0					
ANR	624568	Identifier	errorCode		624329	1					
ANR	624569	Identifier	c_str		624329	1					
ANR	624570	ArgumentList			624329	1					
ANR	624571	ElseStatement	else		624329	0					
ANR	624572	CompoundStatement		48:11:1658:1658	624329	0					
ANR	624573	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1435:8:54629:54685	624329	0	True				
ANR	624574	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		624329	0		=			
ANR	624575	Identifier	result_string		624329	0					
ANR	624576	CallExpression	"create_success_result ( requestID , NULL )"		624329	1					
ANR	624577	Callee	create_success_result		624329	0					
ANR	624578	Identifier	create_success_result		624329	0					
ANR	624579	ArgumentList	requestID		624329	1					
ANR	624580	Argument	requestID		624329	0					
ANR	624581	Identifier	requestID		624329	0					
ANR	624582	Argument	NULL		624329	1					
ANR	624583	Identifier	NULL		624329	0					
ANR	624584	ReturnStatement	return true ;	1438:4:54698:54709	624329	19	True				
ANR	624585	Identifier	true		624329	0					
ANR	624586	ReturnType	bool		624329	1					
ANR	624587	Identifier	AmazonAssociateAddress :: workerFunction		624329	2					
ANR	624588	ParameterList	"char * * argv , int argc , std :: string & result_string"		624329	3					
ANR	624589	Parameter	char * * argv	1387:44:52909:52919	624329	0	True				
ANR	624590	ParameterType	char * *		624329	0					
ANR	624591	Identifier	argv		624329	1					
ANR	624592	Parameter	int argc	1387:57:52922:52929	624329	1	True				
ANR	624593	ParameterType	int		624329	0					
ANR	624594	Identifier	argc		624329	1					
ANR	624595	Parameter	std :: string & result_string	1387:67:52932:52957	624329	2	True				
ANR	624596	ParameterType	std :: string &		624329	0					
ANR	624597	Identifier	result_string		624329	1					
ANR	624598	CFGEntryNode	ENTRY		624329		True				
ANR	624599	CFGExitNode	EXIT		624329		True				
ANR	624600	Symbol	asRequest . serviceURL		624329						
ANR	624601	Symbol	* argv		624329						
ANR	624602	Symbol	argv		624329						
ANR	624603	Symbol	& requestID		624329						
ANR	624604	Symbol	create_success_result		624329						
ANR	624605	Symbol	asRequest . query_parameters		624329						
ANR	624606	Symbol	* asRequest		624329						
ANR	624607	Symbol	asRequest . errorCode		624329						
ANR	624608	Symbol	pszIPStr		624329						
ANR	624609	Symbol	result_string		624329						
ANR	624610	Symbol	pszAllocationId		624329						
ANR	624611	Symbol	asRequest . accessKeyFile		624329						
ANR	624612	Symbol	* asRequest . query_parameters		624329						
ANR	624613	Symbol	argc		624329						
ANR	624614	Symbol	strcmp		624329						
ANR	624615	Symbol	asRequest		624329						
ANR	624616	Symbol	asRequest . secretKeyFile		624329						
ANR	624617	Symbol	NULL		624329						
ANR	624618	Symbol	elastic_ip_addr_info . next		624329						
ANR	624619	Symbol	asRequest . errorMessage		624329						
ANR	624620	Symbol	D_ALWAYS		624329						
ANR	624621	Symbol	false		624329						
ANR	624622	Symbol	verify_min_number_args		624329						
ANR	624623	Symbol	pszFullIPStr		624329						
ANR	624624	Symbol	elastic_ip_addr_info		624329						
ANR	624625	Symbol	asRequest . errorMessage . c_str		624329						
ANR	624626	Symbol	requestID		624329						
ANR	624627	Symbol	create_failure_result		624329						
ANR	624628	Symbol	true		624329						
ANR	624629	Symbol	asRequest . errorCode . c_str		624329						
ANR	624630	Symbol	asRequest . SendRequest		624329						
ANR	624631	Function	AmazonAttachVolume :: AmazonAttachVolume	1441:0:54714:54757							
ANR	624632	FunctionDef	AmazonAttachVolume :: AmazonAttachVolume ()		624631	0					
ANR	624633	CompoundStatement		1441:41:54755:54757	624631	0					
ANR	624634	Identifier	AmazonAttachVolume :: AmazonAttachVolume		624631	1					
ANR	624635	ParameterList			624631	2					
ANR	624636	CFGEntryNode	ENTRY		624631		True				
ANR	624637	CFGExitNode	EXIT		624631		True				
ANR	624638	Function	AmazonAttachVolume :: ~AmazonAttachVolume	1443:0:54760:54804							
ANR	624639	FunctionDef	AmazonAttachVolume :: ~AmazonAttachVolume ()		624638	0					
ANR	624640	CompoundStatement		1443:42:54802:54804	624638	0					
ANR	624641	Identifier	AmazonAttachVolume :: ~AmazonAttachVolume		624638	1					
ANR	624642	ParameterList			624638	2					
ANR	624643	CFGEntryNode	ENTRY		624638		True				
ANR	624644	CFGExitNode	EXIT		624638		True				
ANR	624645	Function	AmazonAttachVolume :: workerFunction	1445:0:54807:56023							
ANR	624646	FunctionDef	"AmazonAttachVolume :: workerFunction (char * * argv , int argc , std :: string & result_string)"		624645	0					
ANR	624647	CompoundStatement		1446:0:54899:56023	624645	0					
ANR	624648	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0 )"	1447:1:54902:54957	624645	0	True				
ANR	624649	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0 )"		624645	0					
ANR	624650	Callee	assert		624645	0					
ANR	624651	Identifier	assert		624645	0					
ANR	624652	ArgumentList	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0"		624645	1					
ANR	624653	Argument	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0"		624645	0					
ANR	624654	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0"		624645	0		==			
ANR	624655	CallExpression	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" )"		624645	0					
ANR	624656	Callee	strcmp		624645	0					
ANR	624657	Identifier	strcmp		624645	0					
ANR	624658	ArgumentList	argv [ 0 ]		624645	1					
ANR	624659	Argument	argv [ 0 ]		624645	0					
ANR	624660	ArrayIndexing	argv [ 0 ]		624645	0					
ANR	624661	Identifier	argv		624645	0					
ANR	624662	PrimaryExpression	0		624645	1					
ANR	624663	Argument	"""EC_VM_ATTACH_VOLUME"""		624645	1					
ANR	624664	PrimaryExpression	"""EC_VM_ATTACH_VOLUME"""		624645	0					
ANR	624665	PrimaryExpression	0		624645	1					
ANR	624666	IdentifierDeclStatement	int requestID ;	1449:1:54962:54975	624645	1	True				
ANR	624667	IdentifierDecl	requestID		624645	0					
ANR	624668	IdentifierDeclType	int		624645	0					
ANR	624669	Identifier	requestID		624645	1					
ANR	624670	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1450:4:54981:55012	624645	2	True				
ANR	624671	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		624645	0					
ANR	624672	Callee	get_int		624645	0					
ANR	624673	Identifier	get_int		624645	0					
ANR	624674	ArgumentList	argv [ 1 ]		624645	1					
ANR	624675	Argument	argv [ 1 ]		624645	0					
ANR	624676	ArrayIndexing	argv [ 1 ]		624645	0					
ANR	624677	Identifier	argv		624645	0					
ANR	624678	PrimaryExpression	1		624645	1					
ANR	624679	Argument	& requestID		624645	1					
ANR	624680	UnaryOperationExpression	& requestID		624645	0					
ANR	624681	UnaryOperator	&		624645	0					
ANR	624682	Identifier	requestID		624645	1					
ANR	624683	IfStatement	"if ( ! verify_min_number_args ( argc , 8 ) )"		624645	3					
ANR	624684	Condition	"! verify_min_number_args ( argc , 8 )"	1452:8:55027:55061	624645	0	True				
ANR	624685	UnaryOperationExpression	"! verify_min_number_args ( argc , 8 )"		624645	0					
ANR	624686	UnaryOperator	!		624645	0					
ANR	624687	CallExpression	"verify_min_number_args ( argc , 8 )"		624645	1					
ANR	624688	Callee	verify_min_number_args		624645	0					
ANR	624689	Identifier	verify_min_number_args		624645	0					
ANR	624690	ArgumentList	argc		624645	1					
ANR	624691	Argument	argc		624645	0					
ANR	624692	Identifier	argc		624645	0					
ANR	624693	Argument	8		624645	1					
ANR	624694	PrimaryExpression	8		624645	0					
ANR	624695	CompoundStatement		7:46:165:165	624645	1					
ANR	624696	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1453:8:55075:55150	624645	0	True				
ANR	624697	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		624645	0		=			
ANR	624698	Identifier	result_string		624645	0					
ANR	624699	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		624645	1					
ANR	624700	Callee	create_failure_result		624645	0					
ANR	624701	Identifier	create_failure_result		624645	0					
ANR	624702	ArgumentList	requestID		624645	1					
ANR	624703	Argument	requestID		624645	0					
ANR	624704	Identifier	requestID		624645	0					
ANR	624705	Argument	"""Wrong_Argument_Number"""		624645	1					
ANR	624706	PrimaryExpression	"""Wrong_Argument_Number"""		624645	0					
ANR	624707	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 8 , argv [ 0 ] )"	1454:8:55160:55255	624645	1	True				
ANR	624708	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 8 , argv [ 0 ] )"		624645	0					
ANR	624709	Callee	dprintf		624645	0					
ANR	624710	Identifier	dprintf		624645	0					
ANR	624711	ArgumentList	D_ALWAYS		624645	1					
ANR	624712	Argument	D_ALWAYS		624645	0					
ANR	624713	Identifier	D_ALWAYS		624645	0					
ANR	624714	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		624645	1					
ANR	624715	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		624645	0					
ANR	624716	Argument	argc		624645	2					
ANR	624717	Identifier	argc		624645	0					
ANR	624718	Argument	8		624645	3					
ANR	624719	PrimaryExpression	8		624645	0					
ANR	624720	Argument	argv [ 0 ]		624645	4					
ANR	624721	ArrayIndexing	argv [ 0 ]		624645	0					
ANR	624722	Identifier	argv		624645	0					
ANR	624723	PrimaryExpression	0		624645	1					
ANR	624724	ReturnStatement	return false ;	1455:8:55265:55277	624645	2	True				
ANR	624725	Identifier	false		624645	0					
ANR	624726	IdentifierDeclStatement	AmazonAttachVolume asRequest ;	1459:4:55339:55367	624645	4	True				
ANR	624727	IdentifierDecl	asRequest		624645	0					
ANR	624728	IdentifierDeclType	AmazonAttachVolume		624645	0					
ANR	624729	Identifier	asRequest		624645	1					
ANR	624730	ExpressionStatement	asRequest . serviceURL = argv [ 2 ]	1460:4:55373:55403	624645	5	True				
ANR	624731	AssignmentExpression	asRequest . serviceURL = argv [ 2 ]		624645	0		=			
ANR	624732	MemberAccess	asRequest . serviceURL		624645	0					
ANR	624733	Identifier	asRequest		624645	0					
ANR	624734	Identifier	serviceURL		624645	1					
ANR	624735	ArrayIndexing	argv [ 2 ]		624645	1					
ANR	624736	Identifier	argv		624645	0					
ANR	624737	PrimaryExpression	2		624645	1					
ANR	624738	ExpressionStatement	asRequest . accessKeyFile = argv [ 3 ]	1461:4:55409:55442	624645	6	True				
ANR	624739	AssignmentExpression	asRequest . accessKeyFile = argv [ 3 ]		624645	0		=			
ANR	624740	MemberAccess	asRequest . accessKeyFile		624645	0					
ANR	624741	Identifier	asRequest		624645	0					
ANR	624742	Identifier	accessKeyFile		624645	1					
ANR	624743	ArrayIndexing	argv [ 3 ]		624645	1					
ANR	624744	Identifier	argv		624645	0					
ANR	624745	PrimaryExpression	3		624645	1					
ANR	624746	ExpressionStatement	asRequest . secretKeyFile = argv [ 4 ]	1462:4:55448:55481	624645	7	True				
ANR	624747	AssignmentExpression	asRequest . secretKeyFile = argv [ 4 ]		624645	0		=			
ANR	624748	MemberAccess	asRequest . secretKeyFile		624645	0					
ANR	624749	Identifier	asRequest		624645	0					
ANR	624750	Identifier	secretKeyFile		624645	1					
ANR	624751	ArrayIndexing	argv [ 4 ]		624645	1					
ANR	624752	Identifier	argv		624645	0					
ANR	624753	PrimaryExpression	4		624645	1					
ANR	624754	ExpressionStatement	"asRequest . query_parameters [ ""Action"" ] = ""AttachVolume"""	1463:4:55487:55542	624645	8	True				
ANR	624755	AssignmentExpression	"asRequest . query_parameters [ ""Action"" ] = ""AttachVolume"""		624645	0		=			
ANR	624756	ArrayIndexing	"asRequest . query_parameters [ ""Action"" ]"		624645	0					
ANR	624757	MemberAccess	asRequest . query_parameters		624645	0					
ANR	624758	Identifier	asRequest		624645	0					
ANR	624759	Identifier	query_parameters		624645	1					
ANR	624760	PrimaryExpression	"""Action"""		624645	1					
ANR	624761	PrimaryExpression	"""AttachVolume"""		624645	1					
ANR	624762	ExpressionStatement	"asRequest . query_parameters [ ""VolumeId"" ] = argv [ 5 ]"	1464:4:55548:55598	624645	9	True				
ANR	624763	AssignmentExpression	"asRequest . query_parameters [ ""VolumeId"" ] = argv [ 5 ]"		624645	0		=			
ANR	624764	ArrayIndexing	"asRequest . query_parameters [ ""VolumeId"" ]"		624645	0					
ANR	624765	MemberAccess	asRequest . query_parameters		624645	0					
ANR	624766	Identifier	asRequest		624645	0					
ANR	624767	Identifier	query_parameters		624645	1					
ANR	624768	PrimaryExpression	"""VolumeId"""		624645	1					
ANR	624769	ArrayIndexing	argv [ 5 ]		624645	1					
ANR	624770	Identifier	argv		624645	0					
ANR	624771	PrimaryExpression	5		624645	1					
ANR	624772	ExpressionStatement	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 6 ]"	1465:4:55604:55656	624645	10	True				
ANR	624773	AssignmentExpression	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 6 ]"		624645	0		=			
ANR	624774	ArrayIndexing	"asRequest . query_parameters [ ""InstanceId"" ]"		624645	0					
ANR	624775	MemberAccess	asRequest . query_parameters		624645	0					
ANR	624776	Identifier	asRequest		624645	0					
ANR	624777	Identifier	query_parameters		624645	1					
ANR	624778	PrimaryExpression	"""InstanceId"""		624645	1					
ANR	624779	ArrayIndexing	argv [ 6 ]		624645	1					
ANR	624780	Identifier	argv		624645	0					
ANR	624781	PrimaryExpression	6		624645	1					
ANR	624782	ExpressionStatement	"asRequest . query_parameters [ ""Device"" ] = argv [ 7 ]"	1466:1:55659:55707	624645	11	True				
ANR	624783	AssignmentExpression	"asRequest . query_parameters [ ""Device"" ] = argv [ 7 ]"		624645	0		=			
ANR	624784	ArrayIndexing	"asRequest . query_parameters [ ""Device"" ]"		624645	0					
ANR	624785	MemberAccess	asRequest . query_parameters		624645	0					
ANR	624786	Identifier	asRequest		624645	0					
ANR	624787	Identifier	query_parameters		624645	1					
ANR	624788	PrimaryExpression	"""Device"""		624645	1					
ANR	624789	ArrayIndexing	argv [ 7 ]		624645	1					
ANR	624790	Identifier	argv		624645	0					
ANR	624791	PrimaryExpression	7		624645	1					
ANR	624792	IfStatement	if ( ! asRequest . SendRequest ( ) )		624645	12					
ANR	624793	Condition	! asRequest . SendRequest ( )	1469:8:55743:55767	624645	0	True				
ANR	624794	UnaryOperationExpression	! asRequest . SendRequest ( )		624645	0					
ANR	624795	UnaryOperator	!		624645	0					
ANR	624796	CallExpression	asRequest . SendRequest ( )		624645	1					
ANR	624797	Callee	asRequest . SendRequest		624645	0					
ANR	624798	MemberAccess	asRequest . SendRequest		624645	0					
ANR	624799	Identifier	asRequest		624645	0					
ANR	624800	Identifier	SendRequest		624645	1					
ANR	624801	ArgumentList			624645	1					
ANR	624802	CompoundStatement		24:36:871:871	624645	1					
ANR	624803	ExpressionStatement	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"	1470:8:55781:55916	624645	0	True				
ANR	624804	AssignmentExpression	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		624645	0		=			
ANR	624805	Identifier	result_string		624645	0					
ANR	624806	CallExpression	"create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		624645	1					
ANR	624807	Callee	create_failure_result		624645	0					
ANR	624808	Identifier	create_failure_result		624645	0					
ANR	624809	ArgumentList	requestID		624645	1					
ANR	624810	Argument	requestID		624645	0					
ANR	624811	Identifier	requestID		624645	0					
ANR	624812	Argument	asRequest . errorMessage . c_str ( )		624645	1					
ANR	624813	CallExpression	asRequest . errorMessage . c_str ( )		624645	0					
ANR	624814	Callee	asRequest . errorMessage . c_str		624645	0					
ANR	624815	MemberAccess	asRequest . errorMessage . c_str		624645	0					
ANR	624816	MemberAccess	asRequest . errorMessage		624645	0					
ANR	624817	Identifier	asRequest		624645	0					
ANR	624818	Identifier	errorMessage		624645	1					
ANR	624819	Identifier	c_str		624645	1					
ANR	624820	ArgumentList			624645	1					
ANR	624821	Argument	asRequest . errorCode . c_str ( )		624645	2					
ANR	624822	CallExpression	asRequest . errorCode . c_str ( )		624645	0					
ANR	624823	Callee	asRequest . errorCode . c_str		624645	0					
ANR	624824	MemberAccess	asRequest . errorCode . c_str		624645	0					
ANR	624825	MemberAccess	asRequest . errorCode		624645	0					
ANR	624826	Identifier	asRequest		624645	0					
ANR	624827	Identifier	errorCode		624645	1					
ANR	624828	Identifier	c_str		624645	1					
ANR	624829	ArgumentList			624645	1					
ANR	624830	ElseStatement	else		624645	0					
ANR	624831	CompoundStatement		28:11:1029:1029	624645	0					
ANR	624832	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1474:8:55939:55995	624645	0	True				
ANR	624833	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		624645	0		=			
ANR	624834	Identifier	result_string		624645	0					
ANR	624835	CallExpression	"create_success_result ( requestID , NULL )"		624645	1					
ANR	624836	Callee	create_success_result		624645	0					
ANR	624837	Identifier	create_success_result		624645	0					
ANR	624838	ArgumentList	requestID		624645	1					
ANR	624839	Argument	requestID		624645	0					
ANR	624840	Identifier	requestID		624645	0					
ANR	624841	Argument	NULL		624645	1					
ANR	624842	Identifier	NULL		624645	0					
ANR	624843	ReturnStatement	return true ;	1477:4:56008:56019	624645	13	True				
ANR	624844	Identifier	true		624645	0					
ANR	624845	ReturnType	bool		624645	1					
ANR	624846	Identifier	AmazonAttachVolume :: workerFunction		624645	2					
ANR	624847	ParameterList	"char * * argv , int argc , std :: string & result_string"		624645	3					
ANR	624848	Parameter	char * * argv	1445:40:54847:54857	624645	0	True				
ANR	624849	ParameterType	char * *		624645	0					
ANR	624850	Identifier	argv		624645	1					
ANR	624851	Parameter	int argc	1445:53:54860:54867	624645	1	True				
ANR	624852	ParameterType	int		624645	0					
ANR	624853	Identifier	argc		624645	1					
ANR	624854	Parameter	std :: string & result_string	1445:63:54870:54895	624645	2	True				
ANR	624855	ParameterType	std :: string &		624645	0					
ANR	624856	Identifier	result_string		624645	1					
ANR	624857	CFGEntryNode	ENTRY		624645		True				
ANR	624858	CFGExitNode	EXIT		624645		True				
ANR	624859	Symbol	asRequest . serviceURL		624645						
ANR	624860	Symbol	* argv		624645						
ANR	624861	Symbol	argv		624645						
ANR	624862	Symbol	& requestID		624645						
ANR	624863	Symbol	create_success_result		624645						
ANR	624864	Symbol	asRequest . query_parameters		624645						
ANR	624865	Symbol	* asRequest		624645						
ANR	624866	Symbol	asRequest . errorCode		624645						
ANR	624867	Symbol	result_string		624645						
ANR	624868	Symbol	asRequest . accessKeyFile		624645						
ANR	624869	Symbol	* asRequest . query_parameters		624645						
ANR	624870	Symbol	argc		624645						
ANR	624871	Symbol	strcmp		624645						
ANR	624872	Symbol	asRequest		624645						
ANR	624873	Symbol	asRequest . secretKeyFile		624645						
ANR	624874	Symbol	NULL		624645						
ANR	624875	Symbol	asRequest . errorMessage		624645						
ANR	624876	Symbol	D_ALWAYS		624645						
ANR	624877	Symbol	false		624645						
ANR	624878	Symbol	verify_min_number_args		624645						
ANR	624879	Symbol	asRequest . errorMessage . c_str		624645						
ANR	624880	Symbol	requestID		624645						
ANR	624881	Symbol	create_failure_result		624645						
ANR	624882	Symbol	true		624645						
ANR	624883	Symbol	asRequest . errorCode . c_str		624645						
ANR	624884	Symbol	asRequest . SendRequest		624645						
