command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1320672	File	data/converged/CVE-2011-4930_htcondor/file_sql.cpp								
ANR	1320673	Function	FILESQL :: FILESQL	35:0:1081:1359							
ANR	1320674	FunctionDef	FILESQL :: FILESQL (bool use_sql_log)		1320673	0					
ANR	1320675	CompoundStatement		36:0:1116:1359	1320673	0					
ANR	1320676	IfStatement	if ( use_sql_log == false )		1320673	0					
ANR	1320677	Condition	use_sql_log == false	37:4:1122:1141	1320673	0	True				
ANR	1320678	EqualityExpression	use_sql_log == false		1320673	0		==			
ANR	1320679	Identifier	use_sql_log		1320673	0					
ANR	1320680	Identifier	false		1320673	1					
ANR	1320681	CompoundStatement		2:26:27:27	1320673	1					
ANR	1320682	ExpressionStatement	is_dummy = true	38:5:1151:1166	1320673	0	True				
ANR	1320683	AssignmentExpression	is_dummy = true		1320673	0		=			
ANR	1320684	Identifier	is_dummy		1320673	0					
ANR	1320685	Identifier	true		1320673	1					
ANR	1320686	ElseStatement	else		1320673	0					
ANR	1320687	CompoundStatement		4:8:59:59	1320673	0					
ANR	1320688	ExpressionStatement	is_dummy = false	40:2:1180:1196	1320673	0	True				
ANR	1320689	AssignmentExpression	is_dummy = false		1320673	0		=			
ANR	1320690	Identifier	is_dummy		1320673	0					
ANR	1320691	Identifier	false		1320673	1					
ANR	1320692	ExpressionStatement	is_open = false	42:1:1202:1217	1320673	1	True				
ANR	1320693	AssignmentExpression	is_open = false		1320673	0		=			
ANR	1320694	Identifier	is_open		1320673	0					
ANR	1320695	Identifier	false		1320673	1					
ANR	1320696	ExpressionStatement	is_locked = false	43:1:1220:1237	1320673	2	True				
ANR	1320697	AssignmentExpression	is_locked = false		1320673	0		=			
ANR	1320698	Identifier	is_locked		1320673	0					
ANR	1320699	Identifier	false		1320673	1					
ANR	1320700	ExpressionStatement	outfilename = ( char * ) 0	44:1:1240:1264	1320673	3	True				
ANR	1320701	AssignmentExpression	outfilename = ( char * ) 0		1320673	0		=			
ANR	1320702	Identifier	outfilename		1320673	0					
ANR	1320703	CastExpression	( char * ) 0		1320673	1					
ANR	1320704	CastTarget	char *		1320673	0					
ANR	1320705	PrimaryExpression	0		1320673	1					
ANR	1320706	ExpressionStatement	fileflags = O_WRONLY | O_CREAT | O_APPEND	45:1:1267:1304	1320673	4	True				
ANR	1320707	AssignmentExpression	fileflags = O_WRONLY | O_CREAT | O_APPEND		1320673	0		=			
ANR	1320708	Identifier	fileflags		1320673	0					
ANR	1320709	InclusiveOrExpression	O_WRONLY | O_CREAT | O_APPEND		1320673	1		|			
ANR	1320710	Identifier	O_WRONLY		1320673	0					
ANR	1320711	InclusiveOrExpression	O_CREAT | O_APPEND		1320673	1		|			
ANR	1320712	Identifier	O_CREAT		1320673	0					
ANR	1320713	Identifier	O_APPEND		1320673	1					
ANR	1320714	ExpressionStatement	outfiledes = - 1	46:1:1307:1322	1320673	5	True				
ANR	1320715	AssignmentExpression	outfiledes = - 1		1320673	0		=			
ANR	1320716	Identifier	outfiledes		1320673	0					
ANR	1320717	UnaryOperationExpression	- 1		1320673	1					
ANR	1320718	UnaryOperator	-		1320673	0					
ANR	1320719	PrimaryExpression	1		1320673	1					
ANR	1320720	ExpressionStatement	fp = NULL	47:1:1325:1334	1320673	6	True				
ANR	1320721	AssignmentExpression	fp = NULL		1320673	0		=			
ANR	1320722	Identifier	fp		1320673	0					
ANR	1320723	Identifier	NULL		1320673	1					
ANR	1320724	ExpressionStatement	lock = ( FileLock * ) 0	48:1:1337:1357	1320673	7	True				
ANR	1320725	AssignmentExpression	lock = ( FileLock * ) 0		1320673	0		=			
ANR	1320726	Identifier	lock		1320673	0					
ANR	1320727	CastExpression	( FileLock * ) 0		1320673	1					
ANR	1320728	CastTarget	FileLock *		1320673	0					
ANR	1320729	PrimaryExpression	0		1320673	1					
ANR	1320730	Identifier	FILESQL :: FILESQL		1320673	1					
ANR	1320731	ParameterList	bool use_sql_log		1320673	2					
ANR	1320732	Parameter	bool use_sql_log	35:17:1098:1113	1320673	0	True				
ANR	1320733	ParameterType	bool		1320673	0					
ANR	1320734	Identifier	use_sql_log		1320673	1					
ANR	1320735	CFGEntryNode	ENTRY		1320673		True				
ANR	1320736	CFGExitNode	EXIT		1320673		True				
ANR	1320737	Symbol	is_locked		1320673						
ANR	1320738	Symbol	fileflags		1320673						
ANR	1320739	Symbol	NULL		1320673						
ANR	1320740	Symbol	is_open		1320673						
ANR	1320741	Symbol	outfilename		1320673						
ANR	1320742	Symbol	O_CREAT		1320673						
ANR	1320743	Symbol	false		1320673						
ANR	1320744	Symbol	use_sql_log		1320673						
ANR	1320745	Symbol	fp		1320673						
ANR	1320746	Symbol	O_APPEND		1320673						
ANR	1320747	Symbol	is_dummy		1320673						
ANR	1320748	Symbol	true		1320673						
ANR	1320749	Symbol	outfiledes		1320673						
ANR	1320750	Symbol	lock		1320673						
ANR	1320751	Symbol	O_WRONLY		1320673						
ANR	1320752	Function	FILESQL :: FILESQL	51:0:1362:1677							
ANR	1320753	FunctionDef	"FILESQL :: FILESQL (const char * outputfilename , int flags , bool use_sql_log)"		1320752	0					
ANR	1320754	CompoundStatement		52:0:1436:1677	1320752	0					
ANR	1320755	IfStatement	if ( use_sql_log == false )		1320752	0					
ANR	1320756	Condition	use_sql_log == false	53:4:1442:1461	1320752	0	True				
ANR	1320757	EqualityExpression	use_sql_log == false		1320752	0		==			
ANR	1320758	Identifier	use_sql_log		1320752	0					
ANR	1320759	Identifier	false		1320752	1					
ANR	1320760	CompoundStatement		2:26:27:27	1320752	1					
ANR	1320761	ExpressionStatement	is_dummy = true	54:5:1471:1486	1320752	0	True				
ANR	1320762	AssignmentExpression	is_dummy = true		1320752	0		=			
ANR	1320763	Identifier	is_dummy		1320752	0					
ANR	1320764	Identifier	true		1320752	1					
ANR	1320765	ElseStatement	else		1320752	0					
ANR	1320766	CompoundStatement		4:8:59:59	1320752	0					
ANR	1320767	ExpressionStatement	is_dummy = false	56:2:1500:1516	1320752	0	True				
ANR	1320768	AssignmentExpression	is_dummy = false		1320752	0		=			
ANR	1320769	Identifier	is_dummy		1320752	0					
ANR	1320770	Identifier	false		1320752	1					
ANR	1320771	ExpressionStatement	is_open = false	58:1:1522:1537	1320752	1	True				
ANR	1320772	AssignmentExpression	is_open = false		1320752	0		=			
ANR	1320773	Identifier	is_open		1320752	0					
ANR	1320774	Identifier	false		1320752	1					
ANR	1320775	ExpressionStatement	is_locked = false	59:1:1540:1557	1320752	2	True				
ANR	1320776	AssignmentExpression	is_locked = false		1320752	0		=			
ANR	1320777	Identifier	is_locked		1320752	0					
ANR	1320778	Identifier	false		1320752	1					
ANR	1320779	ExpressionStatement	this -> outfilename = strdup ( outputfilename )	60:1:1560:1602	1320752	3	True				
ANR	1320780	AssignmentExpression	this -> outfilename = strdup ( outputfilename )		1320752	0		=			
ANR	1320781	PtrMemberAccess	this -> outfilename		1320752	0					
ANR	1320782	Identifier	this		1320752	0					
ANR	1320783	Identifier	outfilename		1320752	1					
ANR	1320784	CallExpression	strdup ( outputfilename )		1320752	1					
ANR	1320785	Callee	strdup		1320752	0					
ANR	1320786	Identifier	strdup		1320752	0					
ANR	1320787	ArgumentList	outputfilename		1320752	1					
ANR	1320788	Argument	outputfilename		1320752	0					
ANR	1320789	Identifier	outputfilename		1320752	0					
ANR	1320790	ExpressionStatement	fileflags = flags	61:1:1605:1622	1320752	4	True				
ANR	1320791	AssignmentExpression	fileflags = flags		1320752	0		=			
ANR	1320792	Identifier	fileflags		1320752	0					
ANR	1320793	Identifier	flags		1320752	1					
ANR	1320794	ExpressionStatement	outfiledes = - 1	62:1:1625:1640	1320752	5	True				
ANR	1320795	AssignmentExpression	outfiledes = - 1		1320752	0		=			
ANR	1320796	Identifier	outfiledes		1320752	0					
ANR	1320797	UnaryOperationExpression	- 1		1320752	1					
ANR	1320798	UnaryOperator	-		1320752	0					
ANR	1320799	PrimaryExpression	1		1320752	1					
ANR	1320800	ExpressionStatement	fp = NULL	63:1:1643:1652	1320752	6	True				
ANR	1320801	AssignmentExpression	fp = NULL		1320752	0		=			
ANR	1320802	Identifier	fp		1320752	0					
ANR	1320803	Identifier	NULL		1320752	1					
ANR	1320804	ExpressionStatement	lock = ( FileLock * ) 0	64:1:1655:1675	1320752	7	True				
ANR	1320805	AssignmentExpression	lock = ( FileLock * ) 0		1320752	0		=			
ANR	1320806	Identifier	lock		1320752	0					
ANR	1320807	CastExpression	( FileLock * ) 0		1320752	1					
ANR	1320808	CastTarget	FileLock *		1320752	0					
ANR	1320809	PrimaryExpression	0		1320752	1					
ANR	1320810	Identifier	FILESQL :: FILESQL		1320752	1					
ANR	1320811	ParameterList	"const char * outputfilename , int flags , bool use_sql_log"		1320752	2					
ANR	1320812	Parameter	const char * outputfilename	51:17:1379:1404	1320752	0	True				
ANR	1320813	ParameterType	const char *		1320752	0					
ANR	1320814	Identifier	outputfilename		1320752	1					
ANR	1320815	Parameter	int flags	51:45:1407:1415	1320752	1	True				
ANR	1320816	ParameterType	int		1320752	0					
ANR	1320817	Identifier	flags		1320752	1					
ANR	1320818	Parameter	bool use_sql_log	51:56:1418:1433	1320752	2	True				
ANR	1320819	ParameterType	bool		1320752	0					
ANR	1320820	Identifier	use_sql_log		1320752	1					
ANR	1320821	CFGEntryNode	ENTRY		1320752		True				
ANR	1320822	CFGExitNode	EXIT		1320752		True				
ANR	1320823	Symbol	is_locked		1320752						
ANR	1320824	Symbol	fileflags		1320752						
ANR	1320825	Symbol	NULL		1320752						
ANR	1320826	Symbol	is_open		1320752						
ANR	1320827	Symbol	outputfilename		1320752						
ANR	1320828	Symbol	flags		1320752						
ANR	1320829	Symbol	false		1320752						
ANR	1320830	Symbol	this		1320752						
ANR	1320831	Symbol	use_sql_log		1320752						
ANR	1320832	Symbol	fp		1320752						
ANR	1320833	Symbol	is_dummy		1320752						
ANR	1320834	Symbol	* this		1320752						
ANR	1320835	Symbol	true		1320752						
ANR	1320836	Symbol	outfiledes		1320752						
ANR	1320837	Symbol	lock		1320752						
ANR	1320838	Symbol	strdup		1320752						
ANR	1320839	Symbol	this -> outfilename		1320752						
ANR	1320840	Function	FILESQL :: ~FILESQL	67:0:1680:1847							
ANR	1320841	FunctionDef	FILESQL :: ~FILESQL ()		1320840	0					
ANR	1320842	CompoundStatement		68:0:1700:1847	1320840	0					
ANR	1320843	IfStatement	if ( file_isopen ( ) )		1320840	0					
ANR	1320844	Condition	file_isopen ( )	69:4:1706:1718	1320840	0	True				
ANR	1320845	CallExpression	file_isopen ( )		1320840	0					
ANR	1320846	Callee	file_isopen		1320840	0					
ANR	1320847	Identifier	file_isopen		1320840	0					
ANR	1320848	ArgumentList			1320840	1					
ANR	1320849	CompoundStatement		2:19:20:20	1320840	1					
ANR	1320850	ExpressionStatement	file_close ( )	70:2:1725:1737	1320840	0	True				
ANR	1320851	CallExpression	file_close ( )		1320840	0					
ANR	1320852	Callee	file_close		1320840	0					
ANR	1320853	Identifier	file_close		1320840	0					
ANR	1320854	ArgumentList			1320840	1					
ANR	1320855	ExpressionStatement	is_open = false	72:1:1743:1758	1320840	1	True				
ANR	1320856	AssignmentExpression	is_open = false		1320840	0		=			
ANR	1320857	Identifier	is_open		1320840	0					
ANR	1320858	Identifier	false		1320840	1					
ANR	1320859	ExpressionStatement	is_locked = false	73:1:1761:1778	1320840	2	True				
ANR	1320860	AssignmentExpression	is_locked = false		1320840	0		=			
ANR	1320861	Identifier	is_locked		1320840	0					
ANR	1320862	Identifier	false		1320840	1					
ANR	1320863	IfStatement	if ( outfilename )		1320840	3					
ANR	1320864	Condition	outfilename	74:5:1785:1795	1320840	0	True				
ANR	1320865	Identifier	outfilename		1320840	0					
ANR	1320866	ExpressionStatement	free ( outfilename )	74:18:1798:1815	1320840	1	True				
ANR	1320867	CallExpression	free ( outfilename )		1320840	0					
ANR	1320868	Callee	free		1320840	0					
ANR	1320869	Identifier	free		1320840	0					
ANR	1320870	ArgumentList	outfilename		1320840	1					
ANR	1320871	Argument	outfilename		1320840	0					
ANR	1320872	Identifier	outfilename		1320840	0					
ANR	1320873	ExpressionStatement	outfiledes = - 1	75:1:1818:1833	1320840	4	True				
ANR	1320874	AssignmentExpression	outfiledes = - 1		1320840	0		=			
ANR	1320875	Identifier	outfiledes		1320840	0					
ANR	1320876	UnaryOperationExpression	- 1		1320840	1					
ANR	1320877	UnaryOperator	-		1320840	0					
ANR	1320878	PrimaryExpression	1		1320840	1					
ANR	1320879	ExpressionStatement	fp = NULL	76:1:1836:1845	1320840	5	True				
ANR	1320880	AssignmentExpression	fp = NULL		1320840	0		=			
ANR	1320881	Identifier	fp		1320840	0					
ANR	1320882	Identifier	NULL		1320840	1					
ANR	1320883	Identifier	FILESQL :: ~FILESQL		1320840	1					
ANR	1320884	ParameterList			1320840	2					
ANR	1320885	CFGEntryNode	ENTRY		1320840		True				
ANR	1320886	CFGExitNode	EXIT		1320840		True				
ANR	1320887	Symbol	is_locked		1320840						
ANR	1320888	Symbol	NULL		1320840						
ANR	1320889	Symbol	is_open		1320840						
ANR	1320890	Symbol	outfilename		1320840						
ANR	1320891	Symbol	false		1320840						
ANR	1320892	Symbol	outfiledes		1320840						
ANR	1320893	Symbol	fp		1320840						
ANR	1320894	Symbol	file_isopen		1320840						
ANR	1320895	Function	FILESQL :: file_isopen	79:0:1850:1897							
ANR	1320896	FunctionDef	FILESQL :: file_isopen ()		1320895	0					
ANR	1320897	CompoundStatement		80:0:1878:1897	1320895	0					
ANR	1320898	ReturnStatement	return is_open ;	81:1:1881:1895	1320895	0	True				
ANR	1320899	Identifier	is_open		1320895	0					
ANR	1320900	ReturnType	bool		1320895	1					
ANR	1320901	Identifier	FILESQL :: file_isopen		1320895	2					
ANR	1320902	ParameterList			1320895	3					
ANR	1320903	CFGEntryNode	ENTRY		1320895		True				
ANR	1320904	CFGExitNode	EXIT		1320895		True				
ANR	1320905	Symbol	is_open		1320895						
ANR	1320906	Function	FILESQL :: file_islocked	84:0:1900:1951							
ANR	1320907	FunctionDef	FILESQL :: file_islocked ()		1320906	0					
ANR	1320908	CompoundStatement		85:0:1930:1951	1320906	0					
ANR	1320909	ReturnStatement	return is_locked ;	86:1:1933:1949	1320906	0	True				
ANR	1320910	Identifier	is_locked		1320906	0					
ANR	1320911	ReturnType	bool		1320906	1					
ANR	1320912	Identifier	FILESQL :: file_islocked		1320906	2					
ANR	1320913	ParameterList			1320906	3					
ANR	1320914	CFGEntryNode	ENTRY		1320906		True				
ANR	1320915	CFGExitNode	EXIT		1320906		True				
ANR	1320916	Symbol	is_locked		1320906						
ANR	1320917	Function	FILESQL :: file_truncate	89:0:1954:2358							
ANR	1320918	FunctionDef	FILESQL :: file_truncate ()		1320917	0					
ANR	1320919	CompoundStatement		89:38:1992:2358	1320917	0					
ANR	1320920	IdentifierDeclStatement	int retval ;	90:1:1995:2005	1320917	0	True				
ANR	1320921	IdentifierDecl	retval		1320917	0					
ANR	1320922	IdentifierDeclType	int		1320917	0					
ANR	1320923	Identifier	retval		1320917	1					
ANR	1320924	IfStatement	if ( is_dummy )		1320917	1					
ANR	1320925	Condition	is_dummy	92:8:2016:2023	1320917	0	True				
ANR	1320926	Identifier	is_dummy		1320917	0					
ANR	1320927	ReturnStatement	return QUILL_SUCCESS ;	92:18:2026:2046	1320917	1	True				
ANR	1320928	Identifier	QUILL_SUCCESS		1320917	0					
ANR	1320929	IfStatement	if ( ! file_isopen ( ) )		1320917	2					
ANR	1320930	Condition	! file_isopen ( )	94:4:2053:2066	1320917	0	True				
ANR	1320931	UnaryOperationExpression	! file_isopen ( )		1320917	0					
ANR	1320932	UnaryOperator	!		1320917	0					
ANR	1320933	CallExpression	file_isopen ( )		1320917	1					
ANR	1320934	Callee	file_isopen		1320917	0					
ANR	1320935	Identifier	file_isopen		1320917	0					
ANR	1320936	ArgumentList			1320917	1					
ANR	1320937	CompoundStatement		6:20:76:76	1320917	1					
ANR	1320938	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error calling truncate: the file needs to be first opened\\n"" )"	95:2:2073:2153	1320917	0	True				
ANR	1320939	CallExpression	"dprintf ( D_ALWAYS , ""Error calling truncate: the file needs to be first opened\\n"" )"		1320917	0					
ANR	1320940	Callee	dprintf		1320917	0					
ANR	1320941	Identifier	dprintf		1320917	0					
ANR	1320942	ArgumentList	D_ALWAYS		1320917	1					
ANR	1320943	Argument	D_ALWAYS		1320917	0					
ANR	1320944	Identifier	D_ALWAYS		1320917	0					
ANR	1320945	Argument	"""Error calling truncate: the file needs to be first opened\\n"""		1320917	1					
ANR	1320946	PrimaryExpression	"""Error calling truncate: the file needs to be first opened\\n"""		1320917	0					
ANR	1320947	ReturnStatement	return QUILL_FAILURE ;	96:2:2157:2177	1320917	1	True				
ANR	1320948	Identifier	QUILL_FAILURE		1320917	0					
ANR	1320949	ExpressionStatement	"retval = ftruncate ( outfiledes , 0 )"	99:1:2184:2217	1320917	3	True				
ANR	1320950	AssignmentExpression	"retval = ftruncate ( outfiledes , 0 )"		1320917	0		=			
ANR	1320951	Identifier	retval		1320917	0					
ANR	1320952	CallExpression	"ftruncate ( outfiledes , 0 )"		1320917	1					
ANR	1320953	Callee	ftruncate		1320917	0					
ANR	1320954	Identifier	ftruncate		1320917	0					
ANR	1320955	ArgumentList	outfiledes		1320917	1					
ANR	1320956	Argument	outfiledes		1320917	0					
ANR	1320957	Identifier	outfiledes		1320917	0					
ANR	1320958	Argument	0		1320917	1					
ANR	1320959	PrimaryExpression	0		1320917	0					
ANR	1320960	IfStatement	if ( retval < 0 )		1320917	4					
ANR	1320961	Condition	retval < 0	101:4:2224:2233	1320917	0	True				
ANR	1320962	RelationalExpression	retval < 0		1320917	0		<			
ANR	1320963	Identifier	retval		1320917	0					
ANR	1320964	PrimaryExpression	0		1320917	1					
ANR	1320965	CompoundStatement		13:16:243:243	1320917	1					
ANR	1320966	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error calling ftruncate, errno = %d\\n"" , errno )"	102:2:2240:2305	1320917	0	True				
ANR	1320967	CallExpression	"dprintf ( D_ALWAYS , ""Error calling ftruncate, errno = %d\\n"" , errno )"		1320917	0					
ANR	1320968	Callee	dprintf		1320917	0					
ANR	1320969	Identifier	dprintf		1320917	0					
ANR	1320970	ArgumentList	D_ALWAYS		1320917	1					
ANR	1320971	Argument	D_ALWAYS		1320917	0					
ANR	1320972	Identifier	D_ALWAYS		1320917	0					
ANR	1320973	Argument	"""Error calling ftruncate, errno = %d\\n"""		1320917	1					
ANR	1320974	PrimaryExpression	"""Error calling ftruncate, errno = %d\\n"""		1320917	0					
ANR	1320975	Argument	errno		1320917	2					
ANR	1320976	Identifier	errno		1320917	0					
ANR	1320977	ReturnStatement	return QUILL_FAILURE ;	103:2:2309:2329	1320917	1	True				
ANR	1320978	Identifier	QUILL_FAILURE		1320917	0					
ANR	1320979	ReturnStatement	return QUILL_SUCCESS ;	106:1:2336:2356	1320917	5	True				
ANR	1320980	Identifier	QUILL_SUCCESS		1320917	0					
ANR	1320981	ReturnType	QuillErrCode		1320917	1					
ANR	1320982	Identifier	FILESQL :: file_truncate		1320917	2					
ANR	1320983	ParameterList			1320917	3					
ANR	1320984	CFGEntryNode	ENTRY		1320917		True				
ANR	1320985	CFGExitNode	EXIT		1320917		True				
ANR	1320986	Symbol	errno		1320917						
ANR	1320987	Symbol	D_ALWAYS		1320917						
ANR	1320988	Symbol	outfiledes		1320917						
ANR	1320989	Symbol	ftruncate		1320917						
ANR	1320990	Symbol	QUILL_FAILURE		1320917						
ANR	1320991	Symbol	retval		1320917						
ANR	1320992	Symbol	file_isopen		1320917						
ANR	1320993	Symbol	is_dummy		1320917						
ANR	1320994	Symbol	QUILL_SUCCESS		1320917						
ANR	1320995	Function	FILESQL :: file_open	109:0:2361:3374							
ANR	1320996	FunctionDef	FILESQL :: file_open ()		1320995	0					
ANR	1320997	CompoundStatement		110:0:2395:3374	1320995	0					
ANR	1320998	IfStatement	if ( is_dummy )		1320995	0					
ANR	1320999	Condition	is_dummy	111:8:2405:2412	1320995	0	True				
ANR	1321000	Identifier	is_dummy		1320995	0					
ANR	1321001	ReturnStatement	return QUILL_SUCCESS ;	111:18:2415:2435	1320995	1	True				
ANR	1321002	Identifier	QUILL_SUCCESS		1320995	0					
ANR	1321003	IfStatement	if ( ! outfilename )		1320995	1					
ANR	1321004	Condition	! outfilename	113:5:2447:2458	1320995	0	True				
ANR	1321005	UnaryOperationExpression	! outfilename		1320995	0					
ANR	1321006	UnaryOperator	!		1320995	0					
ANR	1321007	Identifier	outfilename		1320995	1					
ANR	1321008	CompoundStatement		4:19:65:65	1320995	1					
ANR	1321009	ExpressionStatement	"dprintf ( D_ALWAYS , ""No SQL log file specified\\n"" )"	114:2:2465:2512	1320995	0	True				
ANR	1321010	CallExpression	"dprintf ( D_ALWAYS , ""No SQL log file specified\\n"" )"		1320995	0					
ANR	1321011	Callee	dprintf		1320995	0					
ANR	1321012	Identifier	dprintf		1320995	0					
ANR	1321013	ArgumentList	D_ALWAYS		1320995	1					
ANR	1321014	Argument	D_ALWAYS		1320995	0					
ANR	1321015	Identifier	D_ALWAYS		1320995	0					
ANR	1321016	Argument	"""No SQL log file specified\\n"""		1320995	1					
ANR	1321017	PrimaryExpression	"""No SQL log file specified\\n"""		1320995	0					
ANR	1321018	ReturnStatement	return QUILL_FAILURE ;	115:2:2516:2536	1320995	1	True				
ANR	1321019	Identifier	QUILL_FAILURE		1320995	0					
ANR	1321020	ExpressionStatement	"outfiledes = safe_open_wrapper_follow ( outfilename , fileflags , 0644 )"	118:1:2543:2608	1320995	2	True				
ANR	1321021	AssignmentExpression	"outfiledes = safe_open_wrapper_follow ( outfilename , fileflags , 0644 )"		1320995	0		=			
ANR	1321022	Identifier	outfiledes		1320995	0					
ANR	1321023	CallExpression	"safe_open_wrapper_follow ( outfilename , fileflags , 0644 )"		1320995	1					
ANR	1321024	Callee	safe_open_wrapper_follow		1320995	0					
ANR	1321025	Identifier	safe_open_wrapper_follow		1320995	0					
ANR	1321026	ArgumentList	outfilename		1320995	1					
ANR	1321027	Argument	outfilename		1320995	0					
ANR	1321028	Identifier	outfilename		1320995	0					
ANR	1321029	Argument	fileflags		1320995	1					
ANR	1321030	Identifier	fileflags		1320995	0					
ANR	1321031	Argument	0644		1320995	2					
ANR	1321032	PrimaryExpression	0644		1320995	0					
ANR	1321033	IfStatement	if ( outfiledes < 0 )		1320995	3					
ANR	1321034	Condition	outfiledes < 0	120:4:2615:2628	1320995	0	True				
ANR	1321035	RelationalExpression	outfiledes < 0		1320995	0		<			
ANR	1321036	Identifier	outfiledes		1320995	0					
ANR	1321037	PrimaryExpression	0		1320995	1					
ANR	1321038	CompoundStatement		12:1:236:236	1320995	1					
ANR	1321039	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error opening SQL log file %s : %s\\n"" , outfilename , strerror ( errno ) )"	122:2:2636:2720	1320995	0	True				
ANR	1321040	CallExpression	"dprintf ( D_ALWAYS , ""Error opening SQL log file %s : %s\\n"" , outfilename , strerror ( errno ) )"		1320995	0					
ANR	1321041	Callee	dprintf		1320995	0					
ANR	1321042	Identifier	dprintf		1320995	0					
ANR	1321043	ArgumentList	D_ALWAYS		1320995	1					
ANR	1321044	Argument	D_ALWAYS		1320995	0					
ANR	1321045	Identifier	D_ALWAYS		1320995	0					
ANR	1321046	Argument	"""Error opening SQL log file %s : %s\\n"""		1320995	1					
ANR	1321047	PrimaryExpression	"""Error opening SQL log file %s : %s\\n"""		1320995	0					
ANR	1321048	Argument	outfilename		1320995	2					
ANR	1321049	Identifier	outfilename		1320995	0					
ANR	1321050	Argument	strerror ( errno )		1320995	3					
ANR	1321051	CallExpression	strerror ( errno )		1320995	0					
ANR	1321052	Callee	strerror		1320995	0					
ANR	1321053	Identifier	strerror		1320995	0					
ANR	1321054	ArgumentList	errno		1320995	1					
ANR	1321055	Argument	errno		1320995	0					
ANR	1321056	Identifier	errno		1320995	0					
ANR	1321057	ExpressionStatement	is_open = false	123:2:2724:2739	1320995	1	True				
ANR	1321058	AssignmentExpression	is_open = false		1320995	0		=			
ANR	1321059	Identifier	is_open		1320995	0					
ANR	1321060	Identifier	false		1320995	1					
ANR	1321061	ReturnStatement	return QUILL_FAILURE ;	124:2:2743:2763	1320995	2	True				
ANR	1321062	Identifier	QUILL_FAILURE		1320995	0					
ANR	1321063	ElseStatement	else		1320995	0					
ANR	1321064	CompoundStatement		18:1:379:379	1320995	0					
ANR	1321065	ExpressionStatement	is_open = true	128:2:2779:2793	1320995	0	True				
ANR	1321066	AssignmentExpression	is_open = true		1320995	0		=			
ANR	1321067	Identifier	is_open		1320995	0					
ANR	1321068	Identifier	true		1320995	1					
ANR	1321069	ExpressionStatement	"lock = new FileLock ( outfiledes , NULL , outfilename )"	139:2:3296:3344	1320995	1	True				
ANR	1321070	AssignmentExpression	"lock = new FileLock ( outfiledes , NULL , outfilename )"		1320995	0		=			
ANR	1321071	Identifier	lock		1320995	0					
ANR	1321072	Expression	"outfiledes , NULL , outfilename"		1320995	1					
ANR	1321073	Identifier	outfiledes		1320995	0					
ANR	1321074	Expression	"NULL , outfilename"		1320995	1					
ANR	1321075	Identifier	NULL		1320995	0					
ANR	1321076	Identifier	outfilename		1320995	1					
ANR	1321077	ReturnStatement	return QUILL_SUCCESS ;	140:2:3349:3369	1320995	2	True				
ANR	1321078	Identifier	QUILL_SUCCESS		1320995	0					
ANR	1321079	ReturnType	QuillErrCode		1320995	1					
ANR	1321080	Identifier	FILESQL :: file_open		1320995	2					
ANR	1321081	ParameterList			1320995	3					
ANR	1321082	CFGEntryNode	ENTRY		1320995		True				
ANR	1321083	CFGExitNode	EXIT		1320995		True				
ANR	1321084	Symbol	fileflags		1320995						
ANR	1321085	Symbol	errno		1320995						
ANR	1321086	Symbol	safe_open_wrapper_follow		1320995						
ANR	1321087	Symbol	NULL		1320995						
ANR	1321088	Symbol	outfilename		1320995						
ANR	1321089	Symbol	is_open		1320995						
ANR	1321090	Symbol	D_ALWAYS		1320995						
ANR	1321091	Symbol	false		1320995						
ANR	1321092	Symbol	QUILL_FAILURE		1320995						
ANR	1321093	Symbol	is_dummy		1320995						
ANR	1321094	Symbol	strerror		1320995						
ANR	1321095	Symbol	outfiledes		1320995						
ANR	1321096	Symbol	true		1320995						
ANR	1321097	Symbol	lock		1320995						
ANR	1321098	Symbol	QUILL_SUCCESS		1320995						
ANR	1321099	Function	FILESQL :: file_close	144:0:3377:4131							
ANR	1321100	FunctionDef	FILESQL :: file_close ()		1321099	0					
ANR	1321101	CompoundStatement		145:0:3412:4131	1321099	0					
ANR	1321102	IdentifierDeclStatement	int retval ;	146:1:3415:3425	1321099	0	True				
ANR	1321103	IdentifierDecl	retval		1321099	0					
ANR	1321104	IdentifierDeclType	int		1321099	0					
ANR	1321105	Identifier	retval		1321099	1					
ANR	1321106	IfStatement	if ( is_dummy )		1321099	1					
ANR	1321107	Condition	is_dummy	148:8:3437:3444	1321099	0	True				
ANR	1321108	Identifier	is_dummy		1321099	0					
ANR	1321109	ReturnStatement	return QUILL_SUCCESS ;	148:18:3447:3467	1321099	1	True				
ANR	1321110	Identifier	QUILL_SUCCESS		1321099	0					
ANR	1321111	IfStatement	if ( ! is_open )		1321099	2					
ANR	1321112	Condition	! is_open	150:8:3479:3486	1321099	0	True				
ANR	1321113	UnaryOperationExpression	! is_open		1321099	0					
ANR	1321114	UnaryOperator	!		1321099	0					
ANR	1321115	Identifier	is_open		1321099	1					
ANR	1321116	ReturnStatement	return QUILL_FAILURE ;	151:2:3491:3511	1321099	1	True				
ANR	1321117	Identifier	QUILL_FAILURE		1321099	0					
ANR	1321118	IfStatement	if ( lock )		1321099	3					
ANR	1321119	Condition	lock	153:5:3519:3522	1321099	0	True				
ANR	1321120	Identifier	lock		1321099	0					
ANR	1321121	CompoundStatement		9:11:112:112	1321099	1					
ANR	1321122	Statement	delete	155:2:3592:3597	1321099	0	True				
ANR	1321123	ExpressionStatement	lock	155:9:3599:3603	1321099	1	True				
ANR	1321124	Identifier	lock		1321099	0					
ANR	1321125	ExpressionStatement	lock = ( FileLock * ) 0	156:2:3608:3629	1321099	2	True				
ANR	1321126	AssignmentExpression	lock = ( FileLock * ) 0		1321099	0		=			
ANR	1321127	Identifier	lock		1321099	0					
ANR	1321128	CastExpression	( FileLock * ) 0		1321099	1					
ANR	1321129	CastTarget	FileLock *		1321099	0					
ANR	1321130	PrimaryExpression	0		1321099	1					
ANR	1321131	IfStatement	if ( fp )		1321099	4					
ANR	1321132	Condition	fp	163:5:3799:3800	1321099	0	True				
ANR	1321133	Identifier	fp		1321099	0					
ANR	1321134	CompoundStatement		19:9:390:390	1321099	1					
ANR	1321135	ExpressionStatement	retval = fclose ( fp )	164:2:3807:3826	1321099	0	True				
ANR	1321136	AssignmentExpression	retval = fclose ( fp )		1321099	0		=			
ANR	1321137	Identifier	retval		1321099	0					
ANR	1321138	CallExpression	fclose ( fp )		1321099	1					
ANR	1321139	Callee	fclose		1321099	0					
ANR	1321140	Identifier	fclose		1321099	0					
ANR	1321141	ArgumentList	fp		1321099	1					
ANR	1321142	Argument	fp		1321099	0					
ANR	1321143	Identifier	fp		1321099	0					
ANR	1321144	ExpressionStatement	fp = NULL	165:2:3830:3839	1321099	1	True				
ANR	1321145	AssignmentExpression	fp = NULL		1321099	0		=			
ANR	1321146	Identifier	fp		1321099	0					
ANR	1321147	Identifier	NULL		1321099	1					
ANR	1321148	ElseStatement	else		1321099	0					
ANR	1321149	CompoundStatement		23:6:437:437	1321099	0					
ANR	1321150	ExpressionStatement	retval = close ( outfiledes )	168:2:3854:3880	1321099	0	True				
ANR	1321151	AssignmentExpression	retval = close ( outfiledes )		1321099	0		=			
ANR	1321152	Identifier	retval		1321099	0					
ANR	1321153	CallExpression	close ( outfiledes )		1321099	1					
ANR	1321154	Callee	close		1321099	0					
ANR	1321155	Identifier	close		1321099	0					
ANR	1321156	ArgumentList	outfiledes		1321099	1					
ANR	1321157	Argument	outfiledes		1321099	0					
ANR	1321158	Identifier	outfiledes		1321099	0					
ANR	1321159	IfStatement	if ( retval < 0 )		1321099	1					
ANR	1321160	Condition	retval < 0	169:5:3887:3896	1321099	0	True				
ANR	1321161	RelationalExpression	retval < 0		1321099	0		<			
ANR	1321162	Identifier	retval		1321099	0					
ANR	1321163	PrimaryExpression	0		1321099	1					
ANR	1321164	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error closing SQL log file %s : %s\\n"" , outfilename , strerror ( errno ) )"	170:3:3902:3987	1321099	1	True				
ANR	1321165	CallExpression	"dprintf ( D_ALWAYS , ""Error closing SQL log file %s : %s\\n"" , outfilename , strerror ( errno ) )"		1321099	0					
ANR	1321166	Callee	dprintf		1321099	0					
ANR	1321167	Identifier	dprintf		1321099	0					
ANR	1321168	ArgumentList	D_ALWAYS		1321099	1					
ANR	1321169	Argument	D_ALWAYS		1321099	0					
ANR	1321170	Identifier	D_ALWAYS		1321099	0					
ANR	1321171	Argument	"""Error closing SQL log file %s : %s\\n"""		1321099	1					
ANR	1321172	PrimaryExpression	"""Error closing SQL log file %s : %s\\n"""		1321099	0					
ANR	1321173	Argument	outfilename		1321099	2					
ANR	1321174	Identifier	outfilename		1321099	0					
ANR	1321175	Argument	strerror ( errno )		1321099	3					
ANR	1321176	CallExpression	strerror ( errno )		1321099	0					
ANR	1321177	Callee	strerror		1321099	0					
ANR	1321178	Identifier	strerror		1321099	0					
ANR	1321179	ArgumentList	errno		1321099	1					
ANR	1321180	Argument	errno		1321099	0					
ANR	1321181	Identifier	errno		1321099	0					
ANR	1321182	ExpressionStatement	is_open = false	173:1:3994:4009	1321099	5	True				
ANR	1321183	AssignmentExpression	is_open = false		1321099	0		=			
ANR	1321184	Identifier	is_open		1321099	0					
ANR	1321185	Identifier	false		1321099	1					
ANR	1321186	ExpressionStatement	is_locked = false	174:1:4012:4029	1321099	6	True				
ANR	1321187	AssignmentExpression	is_locked = false		1321099	0		=			
ANR	1321188	Identifier	is_locked		1321099	0					
ANR	1321189	Identifier	false		1321099	1					
ANR	1321190	ExpressionStatement	outfiledes = - 1	175:1:4032:4047	1321099	7	True				
ANR	1321191	AssignmentExpression	outfiledes = - 1		1321099	0		=			
ANR	1321192	Identifier	outfiledes		1321099	0					
ANR	1321193	UnaryOperationExpression	- 1		1321099	1					
ANR	1321194	UnaryOperator	-		1321099	0					
ANR	1321195	PrimaryExpression	1		1321099	1					
ANR	1321196	IfStatement	if ( retval < 0 )		1321099	8					
ANR	1321197	Condition	retval < 0	177:5:4055:4064	1321099	0	True				
ANR	1321198	RelationalExpression	retval < 0		1321099	0		<			
ANR	1321199	Identifier	retval		1321099	0					
ANR	1321200	PrimaryExpression	0		1321099	1					
ANR	1321201	CompoundStatement		33:17:654:654	1321099	1					
ANR	1321202	ReturnStatement	return QUILL_FAILURE ;	178:2:4071:4091	1321099	0	True				
ANR	1321203	Identifier	QUILL_FAILURE		1321099	0					
ANR	1321204	ElseStatement	else		1321099	0					
ANR	1321205	CompoundStatement		36:6:689:689	1321099	0					
ANR	1321206	ReturnStatement	return QUILL_SUCCESS ;	181:2:4106:4126	1321099	0	True				
ANR	1321207	Identifier	QUILL_SUCCESS		1321099	0					
ANR	1321208	ReturnType	QuillErrCode		1321099	1					
ANR	1321209	Identifier	FILESQL :: file_close		1321099	2					
ANR	1321210	ParameterList			1321099	3					
ANR	1321211	CFGEntryNode	ENTRY		1321099		True				
ANR	1321212	CFGExitNode	EXIT		1321099		True				
ANR	1321213	Symbol	is_locked		1321099						
ANR	1321214	Symbol	errno		1321099						
ANR	1321215	Symbol	NULL		1321099						
ANR	1321216	Symbol	is_open		1321099						
ANR	1321217	Symbol	outfilename		1321099						
ANR	1321218	Symbol	fclose		1321099						
ANR	1321219	Symbol	D_ALWAYS		1321099						
ANR	1321220	Symbol	false		1321099						
ANR	1321221	Symbol	fp		1321099						
ANR	1321222	Symbol	QUILL_FAILURE		1321099						
ANR	1321223	Symbol	retval		1321099						
ANR	1321224	Symbol	is_dummy		1321099						
ANR	1321225	Symbol	strerror		1321099						
ANR	1321226	Symbol	outfiledes		1321099						
ANR	1321227	Symbol	lock		1321099						
ANR	1321228	Symbol	close		1321099						
ANR	1321229	Symbol	QUILL_SUCCESS		1321099						
ANR	1321230	Function	FILESQL :: file_lock	185:0:4134:4595							
ANR	1321231	FunctionDef	FILESQL :: file_lock ()		1321230	0					
ANR	1321232	CompoundStatement		186:0:4168:4595	1321230	0					
ANR	1321233	IfStatement	if ( is_dummy )		1321230	0					
ANR	1321234	Condition	is_dummy	187:8:4178:4185	1321230	0	True				
ANR	1321235	Identifier	is_dummy		1321230	0					
ANR	1321236	ReturnStatement	return QUILL_SUCCESS ;	187:18:4188:4208	1321230	1	True				
ANR	1321237	Identifier	QUILL_SUCCESS		1321230	0					
ANR	1321238	IfStatement	if ( ! is_open )		1321230	1					
ANR	1321239	Condition	! is_open	189:4:4216:4223	1321230	0	True				
ANR	1321240	UnaryOperationExpression	! is_open		1321230	0					
ANR	1321241	UnaryOperator	!		1321230	0					
ANR	1321242	Identifier	is_open		1321230	1					
ANR	1321243	CompoundStatement		5:1:58:58	1321230	1					
ANR	1321244	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error locking :SQL log file %s not open yet\\n"" , outfilename )"	191:2:4231:4308	1321230	0	True				
ANR	1321245	CallExpression	"dprintf ( D_ALWAYS , ""Error locking :SQL log file %s not open yet\\n"" , outfilename )"		1321230	0					
ANR	1321246	Callee	dprintf		1321230	0					
ANR	1321247	Identifier	dprintf		1321230	0					
ANR	1321248	ArgumentList	D_ALWAYS		1321230	1					
ANR	1321249	Argument	D_ALWAYS		1321230	0					
ANR	1321250	Identifier	D_ALWAYS		1321230	0					
ANR	1321251	Argument	"""Error locking :SQL log file %s not open yet\\n"""		1321230	1					
ANR	1321252	PrimaryExpression	"""Error locking :SQL log file %s not open yet\\n"""		1321230	0					
ANR	1321253	Argument	outfilename		1321230	2					
ANR	1321254	Identifier	outfilename		1321230	0					
ANR	1321255	ReturnStatement	return QUILL_FAILURE ;	192:2:4312:4332	1321230	1	True				
ANR	1321256	Identifier	QUILL_FAILURE		1321230	0					
ANR	1321257	IfStatement	if ( is_locked )		1321230	2					
ANR	1321258	Condition	is_locked	195:4:4342:4350	1321230	0	True				
ANR	1321259	Identifier	is_locked		1321230	0					
ANR	1321260	ReturnStatement	return QUILL_SUCCESS ;	196:2:4355:4375	1321230	1	True				
ANR	1321261	Identifier	QUILL_SUCCESS		1321230	0					
ANR	1321262	IfStatement	if ( lock -> obtain ( WRITE_LOCK ) == 0 )		1321230	3					
ANR	1321263	Condition	lock -> obtain ( WRITE_LOCK ) == 0	198:4:4382:4410	1321230	0	True				
ANR	1321264	EqualityExpression	lock -> obtain ( WRITE_LOCK ) == 0		1321230	0		==			
ANR	1321265	CallExpression	lock -> obtain ( WRITE_LOCK )		1321230	0					
ANR	1321266	Callee	lock -> obtain		1321230	0					
ANR	1321267	PtrMemberAccess	lock -> obtain		1321230	0					
ANR	1321268	Identifier	lock		1321230	0					
ANR	1321269	Identifier	obtain		1321230	1					
ANR	1321270	ArgumentList	WRITE_LOCK		1321230	1					
ANR	1321271	Argument	WRITE_LOCK		1321230	0					
ANR	1321272	Identifier	WRITE_LOCK		1321230	0					
ANR	1321273	PrimaryExpression	0		1321230	1					
ANR	1321274	CompoundStatement		14:1:280:280	1321230	1					
ANR	1321275	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error locking SQL log file %s\\n"" , outfilename )"	200:2:4453:4516	1321230	0	True				
ANR	1321276	CallExpression	"dprintf ( D_ALWAYS , ""Error locking SQL log file %s\\n"" , outfilename )"		1321230	0					
ANR	1321277	Callee	dprintf		1321230	0					
ANR	1321278	Identifier	dprintf		1321230	0					
ANR	1321279	ArgumentList	D_ALWAYS		1321230	1					
ANR	1321280	Argument	D_ALWAYS		1321230	0					
ANR	1321281	Identifier	D_ALWAYS		1321230	0					
ANR	1321282	Argument	"""Error locking SQL log file %s\\n"""		1321230	1					
ANR	1321283	PrimaryExpression	"""Error locking SQL log file %s\\n"""		1321230	0					
ANR	1321284	Argument	outfilename		1321230	2					
ANR	1321285	Identifier	outfilename		1321230	0					
ANR	1321286	ReturnStatement	return QUILL_FAILURE ;	201:2:4520:4540	1321230	1	True				
ANR	1321287	Identifier	QUILL_FAILURE		1321230	0					
ANR	1321288	ElseStatement	else		1321230	0					
ANR	1321289	ExpressionStatement	is_locked = true	204:2:4553:4569	1321230	0	True				
ANR	1321290	AssignmentExpression	is_locked = true		1321230	0		=			
ANR	1321291	Identifier	is_locked		1321230	0					
ANR	1321292	Identifier	true		1321230	1					
ANR	1321293	ReturnStatement	return QUILL_SUCCESS ;	206:1:4573:4593	1321230	4	True				
ANR	1321294	Identifier	QUILL_SUCCESS		1321230	0					
ANR	1321295	ReturnType	QuillErrCode		1321230	1					
ANR	1321296	Identifier	FILESQL :: file_lock		1321230	2					
ANR	1321297	ParameterList			1321230	3					
ANR	1321298	CFGEntryNode	ENTRY		1321230		True				
ANR	1321299	CFGExitNode	EXIT		1321230		True				
ANR	1321300	Symbol	* lock		1321230						
ANR	1321301	Symbol	is_locked		1321230						
ANR	1321302	Symbol	WRITE_LOCK		1321230						
ANR	1321303	Symbol	is_open		1321230						
ANR	1321304	Symbol	outfilename		1321230						
ANR	1321305	Symbol	D_ALWAYS		1321230						
ANR	1321306	Symbol	true		1321230						
ANR	1321307	Symbol	lock		1321230						
ANR	1321308	Symbol	lock -> obtain		1321230						
ANR	1321309	Symbol	QUILL_FAILURE		1321230						
ANR	1321310	Symbol	is_dummy		1321230						
ANR	1321311	Symbol	QUILL_SUCCESS		1321230						
ANR	1321312	Function	FILESQL :: file_unlock	209:0:4598:5058							
ANR	1321313	FunctionDef	FILESQL :: file_unlock ()		1321312	0					
ANR	1321314	CompoundStatement		210:0:4634:5058	1321312	0					
ANR	1321315	IfStatement	if ( is_dummy )		1321312	0					
ANR	1321316	Condition	is_dummy	211:8:4644:4651	1321312	0	True				
ANR	1321317	Identifier	is_dummy		1321312	0					
ANR	1321318	ReturnStatement	return QUILL_SUCCESS ;	211:18:4654:4674	1321312	1	True				
ANR	1321319	Identifier	QUILL_SUCCESS		1321312	0					
ANR	1321320	IfStatement	if ( ! is_open )		1321312	1					
ANR	1321321	Condition	! is_open	213:4:4682:4689	1321312	0	True				
ANR	1321322	UnaryOperationExpression	! is_open		1321312	0					
ANR	1321323	UnaryOperator	!		1321312	0					
ANR	1321324	Identifier	is_open		1321312	1					
ANR	1321325	CompoundStatement		5:1:58:58	1321312	1					
ANR	1321326	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error unlocking :SQL log file %s not open yet\\n"" , outfilename )"	215:2:4697:4776	1321312	0	True				
ANR	1321327	CallExpression	"dprintf ( D_ALWAYS , ""Error unlocking :SQL log file %s not open yet\\n"" , outfilename )"		1321312	0					
ANR	1321328	Callee	dprintf		1321312	0					
ANR	1321329	Identifier	dprintf		1321312	0					
ANR	1321330	ArgumentList	D_ALWAYS		1321312	1					
ANR	1321331	Argument	D_ALWAYS		1321312	0					
ANR	1321332	Identifier	D_ALWAYS		1321312	0					
ANR	1321333	Argument	"""Error unlocking :SQL log file %s not open yet\\n"""		1321312	1					
ANR	1321334	PrimaryExpression	"""Error unlocking :SQL log file %s not open yet\\n"""		1321312	0					
ANR	1321335	Argument	outfilename		1321312	2					
ANR	1321336	Identifier	outfilename		1321312	0					
ANR	1321337	ReturnStatement	return QUILL_FAILURE ;	216:2:4780:4800	1321312	1	True				
ANR	1321338	Identifier	QUILL_FAILURE		1321312	0					
ANR	1321339	IfStatement	if ( ! is_locked )		1321312	2					
ANR	1321340	Condition	! is_locked	219:4:4810:4819	1321312	0	True				
ANR	1321341	UnaryOperationExpression	! is_locked		1321312	0					
ANR	1321342	UnaryOperator	!		1321312	0					
ANR	1321343	Identifier	is_locked		1321312	1					
ANR	1321344	ReturnStatement	return QUILL_SUCCESS ;	220:2:4824:4844	1321312	1	True				
ANR	1321345	Identifier	QUILL_SUCCESS		1321312	0					
ANR	1321346	IfStatement	if ( lock -> release ( ) == 0 )		1321312	3					
ANR	1321347	Condition	lock -> release ( ) == 0	222:4:4851:4870	1321312	0	True				
ANR	1321348	EqualityExpression	lock -> release ( ) == 0		1321312	0		==			
ANR	1321349	CallExpression	lock -> release ( )		1321312	0					
ANR	1321350	Callee	lock -> release		1321312	0					
ANR	1321351	PtrMemberAccess	lock -> release		1321312	0					
ANR	1321352	Identifier	lock		1321312	0					
ANR	1321353	Identifier	release		1321312	1					
ANR	1321354	ArgumentList			1321312	1					
ANR	1321355	PrimaryExpression	0		1321312	1					
ANR	1321356	CompoundStatement		14:1:274:274	1321312	1					
ANR	1321357	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error unlocking SQL log file %s\\n"" , outfilename )"	224:2:4913:4978	1321312	0	True				
ANR	1321358	CallExpression	"dprintf ( D_ALWAYS , ""Error unlocking SQL log file %s\\n"" , outfilename )"		1321312	0					
ANR	1321359	Callee	dprintf		1321312	0					
ANR	1321360	Identifier	dprintf		1321312	0					
ANR	1321361	ArgumentList	D_ALWAYS		1321312	1					
ANR	1321362	Argument	D_ALWAYS		1321312	0					
ANR	1321363	Identifier	D_ALWAYS		1321312	0					
ANR	1321364	Argument	"""Error unlocking SQL log file %s\\n"""		1321312	1					
ANR	1321365	PrimaryExpression	"""Error unlocking SQL log file %s\\n"""		1321312	0					
ANR	1321366	Argument	outfilename		1321312	2					
ANR	1321367	Identifier	outfilename		1321312	0					
ANR	1321368	ReturnStatement	return QUILL_FAILURE ;	225:2:4982:5002	1321312	1	True				
ANR	1321369	Identifier	QUILL_FAILURE		1321312	0					
ANR	1321370	ElseStatement	else		1321312	0					
ANR	1321371	ExpressionStatement	is_locked = false	228:2:5015:5032	1321312	0	True				
ANR	1321372	AssignmentExpression	is_locked = false		1321312	0		=			
ANR	1321373	Identifier	is_locked		1321312	0					
ANR	1321374	Identifier	false		1321312	1					
ANR	1321375	ReturnStatement	return QUILL_SUCCESS ;	230:1:5036:5056	1321312	4	True				
ANR	1321376	Identifier	QUILL_SUCCESS		1321312	0					
ANR	1321377	ReturnType	QuillErrCode		1321312	1					
ANR	1321378	Identifier	FILESQL :: file_unlock		1321312	2					
ANR	1321379	ParameterList			1321312	3					
ANR	1321380	CFGEntryNode	ENTRY		1321312		True				
ANR	1321381	CFGExitNode	EXIT		1321312		True				
ANR	1321382	Symbol	* lock		1321312						
ANR	1321383	Symbol	is_locked		1321312						
ANR	1321384	Symbol	lock -> release		1321312						
ANR	1321385	Symbol	is_open		1321312						
ANR	1321386	Symbol	outfilename		1321312						
ANR	1321387	Symbol	D_ALWAYS		1321312						
ANR	1321388	Symbol	false		1321312						
ANR	1321389	Symbol	lock		1321312						
ANR	1321390	Symbol	QUILL_FAILURE		1321312						
ANR	1321391	Symbol	is_dummy		1321312						
ANR	1321392	Symbol	QUILL_SUCCESS		1321312						
ANR	1321393	Function	FILESQL :: file_readline	233:0:5061:5216							
ANR	1321394	FunctionDef	FILESQL :: file_readline (MyString * buf)		1321393	0					
ANR	1321395	CompoundStatement		234:0:5104:5216	1321393	0					
ANR	1321396	IfStatement	if ( is_dummy )		1321393	0					
ANR	1321397	Condition	is_dummy	235:8:5114:5121	1321393	0	True				
ANR	1321398	Identifier	is_dummy		1321393	0					
ANR	1321399	ReturnStatement	return TRUE ;	235:18:5124:5135	1321393	1	True				
ANR	1321400	Identifier	TRUE		1321393	0					
ANR	1321401	IfStatement	if ( ! fp )		1321393	1					
ANR	1321402	Condition	! fp	237:4:5143:5145	1321393	0	True				
ANR	1321403	UnaryOperationExpression	! fp		1321393	0					
ANR	1321404	UnaryOperator	!		1321393	0					
ANR	1321405	Identifier	fp		1321393	1					
ANR	1321406	ExpressionStatement	"fp = fdopen ( outfiledes , ""r"" )"	238:2:5150:5178	1321393	1	True				
ANR	1321407	AssignmentExpression	"fp = fdopen ( outfiledes , ""r"" )"		1321393	0		=			
ANR	1321408	Identifier	fp		1321393	0					
ANR	1321409	CallExpression	"fdopen ( outfiledes , ""r"" )"		1321393	1					
ANR	1321410	Callee	fdopen		1321393	0					
ANR	1321411	Identifier	fdopen		1321393	0					
ANR	1321412	ArgumentList	outfiledes		1321393	1					
ANR	1321413	Argument	outfiledes		1321393	0					
ANR	1321414	Identifier	outfiledes		1321393	0					
ANR	1321415	Argument	"""r"""		1321393	1					
ANR	1321416	PrimaryExpression	"""r"""		1321393	0					
ANR	1321417	ReturnStatement	"return ( buf -> readLine ( fp , true ) ) ;"	240:1:5182:5214	1321393	2	True				
ANR	1321418	CallExpression	"buf -> readLine ( fp , true )"		1321393	0					
ANR	1321419	Callee	buf -> readLine		1321393	0					
ANR	1321420	PtrMemberAccess	buf -> readLine		1321393	0					
ANR	1321421	Identifier	buf		1321393	0					
ANR	1321422	Identifier	readLine		1321393	1					
ANR	1321423	ArgumentList	fp		1321393	1					
ANR	1321424	Argument	fp		1321393	0					
ANR	1321425	Identifier	fp		1321393	0					
ANR	1321426	Argument	true		1321393	1					
ANR	1321427	Identifier	true		1321393	0					
ANR	1321428	ReturnType	int		1321393	1					
ANR	1321429	Identifier	FILESQL :: file_readline		1321393	2					
ANR	1321430	ParameterList	MyString * buf		1321393	3					
ANR	1321431	Parameter	MyString * buf	233:27:5088:5100	1321393	0	True				
ANR	1321432	ParameterType	MyString *		1321393	0					
ANR	1321433	Identifier	buf		1321393	1					
ANR	1321434	CFGEntryNode	ENTRY		1321393		True				
ANR	1321435	CFGExitNode	EXIT		1321393		True				
ANR	1321436	Symbol	buf		1321393						
ANR	1321437	Symbol	* buf		1321393						
ANR	1321438	Symbol	outfiledes		1321393						
ANR	1321439	Symbol	true		1321393						
ANR	1321440	Symbol	TRUE		1321393						
ANR	1321441	Symbol	fp		1321393						
ANR	1321442	Symbol	buf -> readLine		1321393						
ANR	1321443	Symbol	fdopen		1321393						
ANR	1321444	Symbol	is_dummy		1321393						
ANR	1321445	Function	FILESQL :: file_readAttrList	243:0:5219:5829							
ANR	1321446	FunctionDef	FILESQL :: file_readAttrList ()		1321445	0					
ANR	1321447	CompoundStatement		244:0:5259:5829	1321445	0					
ANR	1321448	IdentifierDeclStatement	AttrList * ad = 0 ;	245:1:5262:5278	1321445	0	True				
ANR	1321449	IdentifierDecl	* ad = 0		1321445	0					
ANR	1321450	IdentifierDeclType	AttrList *		1321445	0					
ANR	1321451	Identifier	ad		1321445	1					
ANR	1321452	AssignmentExpression	* ad = 0		1321445	2		=			
ANR	1321453	Identifier	ad		1321445	0					
ANR	1321454	PrimaryExpression	0		1321445	1					
ANR	1321455	IfStatement	if ( is_dummy )		1321445	1					
ANR	1321456	Condition	is_dummy	247:4:5285:5292	1321445	0	True				
ANR	1321457	Identifier	is_dummy		1321445	0					
ANR	1321458	ReturnStatement	return ad ;	247:14:5295:5304	1321445	1	True				
ANR	1321459	Identifier	ad		1321445	0					
ANR	1321460	IfStatement	if ( ! fp )		1321445	2					
ANR	1321461	Condition	! fp	249:4:5311:5313	1321445	0	True				
ANR	1321462	UnaryOperationExpression	! fp		1321445	0					
ANR	1321463	UnaryOperator	!		1321445	0					
ANR	1321464	Identifier	fp		1321445	1					
ANR	1321465	ExpressionStatement	"fp = fdopen ( outfiledes , ""r"" )"	250:2:5318:5346	1321445	1	True				
ANR	1321466	AssignmentExpression	"fp = fdopen ( outfiledes , ""r"" )"		1321445	0		=			
ANR	1321467	Identifier	fp		1321445	0					
ANR	1321468	CallExpression	"fdopen ( outfiledes , ""r"" )"		1321445	1					
ANR	1321469	Callee	fdopen		1321445	0					
ANR	1321470	Identifier	fdopen		1321445	0					
ANR	1321471	ArgumentList	outfiledes		1321445	1					
ANR	1321472	Argument	outfiledes		1321445	0					
ANR	1321473	Identifier	outfiledes		1321445	0					
ANR	1321474	Argument	"""r"""		1321445	1					
ANR	1321475	PrimaryExpression	"""r"""		1321445	0					
ANR	1321476	IdentifierDeclStatement	int EndFlag = 0 ;	252:1:5350:5363	1321445	3	True				
ANR	1321477	IdentifierDecl	EndFlag = 0		1321445	0					
ANR	1321478	IdentifierDeclType	int		1321445	0					
ANR	1321479	Identifier	EndFlag		1321445	1					
ANR	1321480	AssignmentExpression	EndFlag = 0		1321445	2		=			
ANR	1321481	Identifier	EndFlag		1321445	0					
ANR	1321482	PrimaryExpression	0		1321445	1					
ANR	1321483	IdentifierDeclStatement	int ErrorFlag = 0 ;	253:1:5366:5381	1321445	4	True				
ANR	1321484	IdentifierDecl	ErrorFlag = 0		1321445	0					
ANR	1321485	IdentifierDeclType	int		1321445	0					
ANR	1321486	Identifier	ErrorFlag		1321445	1					
ANR	1321487	AssignmentExpression	ErrorFlag = 0		1321445	2		=			
ANR	1321488	Identifier	ErrorFlag		1321445	0					
ANR	1321489	PrimaryExpression	0		1321445	1					
ANR	1321490	IdentifierDeclStatement	int EmptyFlag = 0 ;	254:1:5384:5399	1321445	5	True				
ANR	1321491	IdentifierDecl	EmptyFlag = 0		1321445	0					
ANR	1321492	IdentifierDeclType	int		1321445	0					
ANR	1321493	Identifier	EmptyFlag		1321445	1					
ANR	1321494	AssignmentExpression	EmptyFlag = 0		1321445	2		=			
ANR	1321495	Identifier	EmptyFlag		1321445	0					
ANR	1321496	PrimaryExpression	0		1321445	1					
ANR	1321497	IfStatement	"if ( ! ( ad = new AttrList ( fp , ""***\\n"" , EndFlag , ErrorFlag , EmptyFlag ) ) )"		1321445	6					
ANR	1321498	Condition	"! ( ad = new AttrList ( fp , ""***\\n"" , EndFlag , ErrorFlag , EmptyFlag ) )"	256:8:5410:5472	1321445	0	True				
ANR	1321499	UnaryOperationExpression	"! ( ad = new AttrList ( fp , ""***\\n"" , EndFlag , ErrorFlag , EmptyFlag ) )"		1321445	0					
ANR	1321500	UnaryOperator	!		1321445	0					
ANR	1321501	AssignmentExpression	"ad = new AttrList ( fp , ""***\\n"" , EndFlag , ErrorFlag , EmptyFlag )"		1321445	1		=			
ANR	1321502	Identifier	ad		1321445	0					
ANR	1321503	Expression	"fp , ""***\\n"" , EndFlag , ErrorFlag , EmptyFlag"		1321445	1					
ANR	1321504	Identifier	fp		1321445	0					
ANR	1321505	Expression	"""***\\n"" , EndFlag , ErrorFlag , EmptyFlag"		1321445	1					
ANR	1321506	PrimaryExpression	"""***\\n"""		1321445	0					
ANR	1321507	Expression	"EndFlag , ErrorFlag , EmptyFlag"		1321445	1					
ANR	1321508	Identifier	EndFlag		1321445	0					
ANR	1321509	Expression	"ErrorFlag , EmptyFlag"		1321445	1					
ANR	1321510	Identifier	ErrorFlag		1321445	0					
ANR	1321511	Identifier	EmptyFlag		1321445	1					
ANR	1321512	CompoundStatement		13:73:215:215	1321445	1					
ANR	1321513	ExpressionStatement	"EXCEPT ( ""file_readAttrList Error:  Out of memory\\n"" )"	257:2:5479:5531	1321445	0	True				
ANR	1321514	CallExpression	"EXCEPT ( ""file_readAttrList Error:  Out of memory\\n"" )"		1321445	0					
ANR	1321515	Callee	EXCEPT		1321445	0					
ANR	1321516	Identifier	EXCEPT		1321445	0					
ANR	1321517	ArgumentList	"""file_readAttrList Error:  Out of memory\\n"""		1321445	1					
ANR	1321518	Argument	"""file_readAttrList Error:  Out of memory\\n"""		1321445	0					
ANR	1321519	PrimaryExpression	"""file_readAttrList Error:  Out of memory\\n"""		1321445	0					
ANR	1321520	IfStatement	if ( ErrorFlag )		1321445	7					
ANR	1321521	Condition	ErrorFlag	260:8:5548:5556	1321445	0	True				
ANR	1321522	Identifier	ErrorFlag		1321445	0					
ANR	1321523	CompoundStatement		17:20:300:300	1321445	1					
ANR	1321524	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\t*** Warning: Bad Log file; skipping malformed Attr List\\n"" )"	261:2:5564:5646	1321445	0	True				
ANR	1321525	CallExpression	"dprintf ( D_ALWAYS , ""\\t*** Warning: Bad Log file; skipping malformed Attr List\\n"" )"		1321445	0					
ANR	1321526	Callee	dprintf		1321445	0					
ANR	1321527	Identifier	dprintf		1321445	0					
ANR	1321528	ArgumentList	D_ALWAYS		1321445	1					
ANR	1321529	Argument	D_ALWAYS		1321445	0					
ANR	1321530	Identifier	D_ALWAYS		1321445	0					
ANR	1321531	Argument	"""\\t*** Warning: Bad Log file; skipping malformed Attr List\\n"""		1321445	1					
ANR	1321532	PrimaryExpression	"""\\t*** Warning: Bad Log file; skipping malformed Attr List\\n"""		1321445	0					
ANR	1321533	ExpressionStatement	ErrorFlag = 0	262:2:5650:5661	1321445	1	True				
ANR	1321534	AssignmentExpression	ErrorFlag = 0		1321445	0		=			
ANR	1321535	Identifier	ErrorFlag		1321445	0					
ANR	1321536	PrimaryExpression	0		1321445	1					
ANR	1321537	Statement	delete	263:2:5665:5670	1321445	2	True				
ANR	1321538	ExpressionStatement	ad	263:9:5672:5674	1321445	3	True				
ANR	1321539	Identifier	ad		1321445	0					
ANR	1321540	ExpressionStatement	ad = 0	264:2:5678:5684	1321445	4	True				
ANR	1321541	AssignmentExpression	ad = 0		1321445	0		=			
ANR	1321542	Identifier	ad		1321445	0					
ANR	1321543	PrimaryExpression	0		1321445	1					
ANR	1321544	IfStatement	if ( EmptyFlag )		1321445	8					
ANR	1321545	Condition	EmptyFlag	267:5:5699:5707	1321445	0	True				
ANR	1321546	Identifier	EmptyFlag		1321445	0					
ANR	1321547	CompoundStatement		24:17:451:451	1321445	1					
ANR	1321548	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\t*** Warning: Empty Attr List\\n"" )"	268:2:5715:5770	1321445	0	True				
ANR	1321549	CallExpression	"dprintf ( D_ALWAYS , ""\\t*** Warning: Empty Attr List\\n"" )"		1321445	0					
ANR	1321550	Callee	dprintf		1321445	0					
ANR	1321551	Identifier	dprintf		1321445	0					
ANR	1321552	ArgumentList	D_ALWAYS		1321445	1					
ANR	1321553	Argument	D_ALWAYS		1321445	0					
ANR	1321554	Identifier	D_ALWAYS		1321445	0					
ANR	1321555	Argument	"""\\t*** Warning: Empty Attr List\\n"""		1321445	1					
ANR	1321556	PrimaryExpression	"""\\t*** Warning: Empty Attr List\\n"""		1321445	0					
ANR	1321557	ExpressionStatement	EmptyFlag = 0	269:2:5774:5785	1321445	1	True				
ANR	1321558	AssignmentExpression	EmptyFlag = 0		1321445	0		=			
ANR	1321559	Identifier	EmptyFlag		1321445	0					
ANR	1321560	PrimaryExpression	0		1321445	1					
ANR	1321561	Statement	delete	270:2:5789:5794	1321445	2	True				
ANR	1321562	ExpressionStatement	ad	270:9:5796:5798	1321445	3	True				
ANR	1321563	Identifier	ad		1321445	0					
ANR	1321564	ExpressionStatement	ad = 0	271:2:5802:5808	1321445	4	True				
ANR	1321565	AssignmentExpression	ad = 0		1321445	0		=			
ANR	1321566	Identifier	ad		1321445	0					
ANR	1321567	PrimaryExpression	0		1321445	1					
ANR	1321568	ReturnStatement	return ad ;	274:1:5818:5827	1321445	9	True				
ANR	1321569	Identifier	ad		1321445	0					
ANR	1321570	ReturnType	AttrList *		1321445	1					
ANR	1321571	Identifier	FILESQL :: file_readAttrList		1321445	2					
ANR	1321572	ParameterList			1321445	3					
ANR	1321573	CFGEntryNode	ENTRY		1321445		True				
ANR	1321574	CFGExitNode	EXIT		1321445		True				
ANR	1321575	Symbol	EmptyFlag		1321445						
ANR	1321576	Symbol	EndFlag		1321445						
ANR	1321577	Symbol	ad		1321445						
ANR	1321578	Symbol	ErrorFlag		1321445						
ANR	1321579	Symbol	outfiledes		1321445						
ANR	1321580	Symbol	D_ALWAYS		1321445						
ANR	1321581	Symbol	fp		1321445						
ANR	1321582	Symbol	fdopen		1321445						
ANR	1321583	Symbol	is_dummy		1321445						
ANR	1321584	Function	FILESQL :: file_newEvent	277:0:5832:6913							
ANR	1321585	FunctionDef	"FILESQL :: file_newEvent (const char * eventType , AttrList * info)"		1321584	0					
ANR	1321586	CompoundStatement		277:75:5907:6913	1321584	0					
ANR	1321587	IdentifierDeclStatement	int retval = 0 ;	278:1:5910:5924	1321584	0	True				
ANR	1321588	IdentifierDecl	retval = 0		1321584	0					
ANR	1321589	IdentifierDeclType	int		1321584	0					
ANR	1321590	Identifier	retval		1321584	1					
ANR	1321591	AssignmentExpression	retval = 0		1321584	2		=			
ANR	1321592	Identifier	retval		1321584	0					
ANR	1321593	PrimaryExpression	0		1321584	1					
ANR	1321594	IdentifierDeclStatement	struct stat file_status ;	279:1:5927:5950	1321584	1	True				
ANR	1321595	IdentifierDecl	file_status		1321584	0					
ANR	1321596	IdentifierDeclType	struct stat		1321584	0					
ANR	1321597	Identifier	file_status		1321584	1					
ANR	1321598	IfStatement	if ( is_dummy )		1321584	2					
ANR	1321599	Condition	is_dummy	281:8:5961:5968	1321584	0	True				
ANR	1321600	Identifier	is_dummy		1321584	0					
ANR	1321601	ReturnStatement	return QUILL_SUCCESS ;	281:18:5971:5991	1321584	1	True				
ANR	1321602	Identifier	QUILL_SUCCESS		1321584	0					
ANR	1321603	IfStatement	if ( ! is_open )		1321584	3					
ANR	1321604	Condition	! is_open	282:4:5997:6004	1321584	0	True				
ANR	1321605	UnaryOperationExpression	! is_open		1321584	0					
ANR	1321606	UnaryOperator	!		1321584	0					
ANR	1321607	Identifier	is_open		1321584	1					
ANR	1321608	CompoundStatement		7:1:100:100	1321584	1					
ANR	1321609	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error in logging new event to Quill SQL log : File not open\\n"" )"	284:2:6012:6093	1321584	0	True				
ANR	1321610	CallExpression	"dprintf ( D_ALWAYS , ""Error in logging new event to Quill SQL log : File not open\\n"" )"		1321584	0					
ANR	1321611	Callee	dprintf		1321584	0					
ANR	1321612	Identifier	dprintf		1321584	0					
ANR	1321613	ArgumentList	D_ALWAYS		1321584	1					
ANR	1321614	Argument	D_ALWAYS		1321584	0					
ANR	1321615	Identifier	D_ALWAYS		1321584	0					
ANR	1321616	Argument	"""Error in logging new event to Quill SQL log : File not open\\n"""		1321584	1					
ANR	1321617	PrimaryExpression	"""Error in logging new event to Quill SQL log : File not open\\n"""		1321584	0					
ANR	1321618	ReturnStatement	return QUILL_FAILURE ;	285:2:6097:6117	1321584	1	True				
ANR	1321619	Identifier	QUILL_FAILURE		1321584	0					
ANR	1321620	IfStatement	if ( file_lock ( ) == QUILL_FAILURE )		1321584	4					
ANR	1321621	Condition	file_lock ( ) == QUILL_FAILURE	288:4:6127:6154	1321584	0	True				
ANR	1321622	EqualityExpression	file_lock ( ) == QUILL_FAILURE		1321584	0		==			
ANR	1321623	CallExpression	file_lock ( )		1321584	0					
ANR	1321624	Callee	file_lock		1321584	0					
ANR	1321625	Identifier	file_lock		1321584	0					
ANR	1321626	ArgumentList			1321584	1					
ANR	1321627	Identifier	QUILL_FAILURE		1321584	1					
ANR	1321628	CompoundStatement		12:34:249:249	1321584	1					
ANR	1321629	ReturnStatement	return QUILL_FAILURE ;	289:2:6161:6181	1321584	0	True				
ANR	1321630	Identifier	QUILL_FAILURE		1321584	0					
ANR	1321631	ExpressionStatement	"fstat ( outfiledes , & file_status )"	292:1:6188:6219	1321584	5	True				
ANR	1321632	CallExpression	"fstat ( outfiledes , & file_status )"		1321584	0					
ANR	1321633	Callee	fstat		1321584	0					
ANR	1321634	Identifier	fstat		1321584	0					
ANR	1321635	ArgumentList	outfiledes		1321584	1					
ANR	1321636	Argument	outfiledes		1321584	0					
ANR	1321637	Identifier	outfiledes		1321584	0					
ANR	1321638	Argument	& file_status		1321584	1					
ANR	1321639	UnaryOperationExpression	& file_status		1321584	0					
ANR	1321640	UnaryOperator	&		1321584	0					
ANR	1321641	Identifier	file_status		1321584	1					
ANR	1321642	IfStatement	if ( file_status . st_size < FILESIZELIMT )		1321584	6					
ANR	1321643	Condition	file_status . st_size < FILESIZELIMT	295:5:6295:6328	1321584	0	True				
ANR	1321644	RelationalExpression	file_status . st_size < FILESIZELIMT		1321584	0		<			
ANR	1321645	MemberAccess	file_status . st_size		1321584	0					
ANR	1321646	Identifier	file_status		1321584	0					
ANR	1321647	Identifier	st_size		1321584	1					
ANR	1321648	Identifier	FILESIZELIMT		1321584	1					
ANR	1321649	CompoundStatement		25:2:606:623	1321584	1					
ANR	1321650	ExpressionStatement	"retval = write ( outfiledes , ""NEW "" , strlen ( ""NEW "" ) )"	296:2:6335:6384	1321584	0	True				
ANR	1321651	AssignmentExpression	"retval = write ( outfiledes , ""NEW "" , strlen ( ""NEW "" ) )"		1321584	0		=			
ANR	1321652	Identifier	retval		1321584	0					
ANR	1321653	CallExpression	"write ( outfiledes , ""NEW "" , strlen ( ""NEW "" ) )"		1321584	1					
ANR	1321654	Callee	write		1321584	0					
ANR	1321655	Identifier	write		1321584	0					
ANR	1321656	ArgumentList	outfiledes		1321584	1					
ANR	1321657	Argument	outfiledes		1321584	0					
ANR	1321658	Identifier	outfiledes		1321584	0					
ANR	1321659	Argument	"""NEW """		1321584	1					
ANR	1321660	PrimaryExpression	"""NEW """		1321584	0					
ANR	1321661	Argument	"strlen ( ""NEW "" )"		1321584	2					
ANR	1321662	CallExpression	"strlen ( ""NEW "" )"		1321584	0					
ANR	1321663	Callee	strlen		1321584	0					
ANR	1321664	Identifier	strlen		1321584	0					
ANR	1321665	ArgumentList	"""NEW """		1321584	1					
ANR	1321666	Argument	"""NEW """		1321584	0					
ANR	1321667	PrimaryExpression	"""NEW """		1321584	0					
ANR	1321668	ExpressionStatement	"retval = write ( outfiledes , eventType , strlen ( eventType ) )"	297:2:6388:6443	1321584	1	True				
ANR	1321669	AssignmentExpression	"retval = write ( outfiledes , eventType , strlen ( eventType ) )"		1321584	0		=			
ANR	1321670	Identifier	retval		1321584	0					
ANR	1321671	CallExpression	"write ( outfiledes , eventType , strlen ( eventType ) )"		1321584	1					
ANR	1321672	Callee	write		1321584	0					
ANR	1321673	Identifier	write		1321584	0					
ANR	1321674	ArgumentList	outfiledes		1321584	1					
ANR	1321675	Argument	outfiledes		1321584	0					
ANR	1321676	Identifier	outfiledes		1321584	0					
ANR	1321677	Argument	eventType		1321584	1					
ANR	1321678	Identifier	eventType		1321584	0					
ANR	1321679	Argument	strlen ( eventType )		1321584	2					
ANR	1321680	CallExpression	strlen ( eventType )		1321584	0					
ANR	1321681	Callee	strlen		1321584	0					
ANR	1321682	Identifier	strlen		1321584	0					
ANR	1321683	ArgumentList	eventType		1321584	1					
ANR	1321684	Argument	eventType		1321584	0					
ANR	1321685	Identifier	eventType		1321584	0					
ANR	1321686	ExpressionStatement	"retval = write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"	298:2:6447:6492	1321584	2	True				
ANR	1321687	AssignmentExpression	"retval = write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"		1321584	0		=			
ANR	1321688	Identifier	retval		1321584	0					
ANR	1321689	CallExpression	"write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"		1321584	1					
ANR	1321690	Callee	write		1321584	0					
ANR	1321691	Identifier	write		1321584	0					
ANR	1321692	ArgumentList	outfiledes		1321584	1					
ANR	1321693	Argument	outfiledes		1321584	0					
ANR	1321694	Identifier	outfiledes		1321584	0					
ANR	1321695	Argument	"""\\n"""		1321584	1					
ANR	1321696	PrimaryExpression	"""\\n"""		1321584	0					
ANR	1321697	Argument	"strlen ( ""\\n"" )"		1321584	2					
ANR	1321698	CallExpression	"strlen ( ""\\n"" )"		1321584	0					
ANR	1321699	Callee	strlen		1321584	0					
ANR	1321700	Identifier	strlen		1321584	0					
ANR	1321701	ArgumentList	"""\\n"""		1321584	1					
ANR	1321702	Argument	"""\\n"""		1321584	0					
ANR	1321703	PrimaryExpression	"""\\n"""		1321584	0					
ANR	1321704	IdentifierDeclStatement	MyString temp ;	300:2:6497:6510	1321584	3	True				
ANR	1321705	IdentifierDecl	temp		1321584	0					
ANR	1321706	IdentifierDeclType	MyString		1321584	0					
ANR	1321707	Identifier	temp		1321584	1					
ANR	1321708	IdentifierDeclStatement	const char * tempv ;	301:2:6514:6531	1321584	4	True				
ANR	1321709	IdentifierDecl	* tempv		1321584	0					
ANR	1321710	IdentifierDeclType	const char *		1321584	0					
ANR	1321711	Identifier	tempv		1321584	1					
ANR	1321712	ExpressionStatement	retval = info -> sPrint ( temp )	303:2:6537:6564	1321584	5	True				
ANR	1321713	AssignmentExpression	retval = info -> sPrint ( temp )		1321584	0		=			
ANR	1321714	Identifier	retval		1321584	0					
ANR	1321715	CallExpression	info -> sPrint ( temp )		1321584	1					
ANR	1321716	Callee	info -> sPrint		1321584	0					
ANR	1321717	PtrMemberAccess	info -> sPrint		1321584	0					
ANR	1321718	Identifier	info		1321584	0					
ANR	1321719	Identifier	sPrint		1321584	1					
ANR	1321720	ArgumentList	temp		1321584	1					
ANR	1321721	Argument	temp		1321584	0					
ANR	1321722	Identifier	temp		1321584	0					
ANR	1321723	ExpressionStatement	tempv = temp . Value ( )	304:2:6568:6588	1321584	6	True				
ANR	1321724	AssignmentExpression	tempv = temp . Value ( )		1321584	0		=			
ANR	1321725	Identifier	tempv		1321584	0					
ANR	1321726	CallExpression	temp . Value ( )		1321584	1					
ANR	1321727	Callee	temp . Value		1321584	0					
ANR	1321728	MemberAccess	temp . Value		1321584	0					
ANR	1321729	Identifier	temp		1321584	0					
ANR	1321730	Identifier	Value		1321584	1					
ANR	1321731	ArgumentList			1321584	1					
ANR	1321732	ExpressionStatement	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"	305:2:6592:6639	1321584	7	True				
ANR	1321733	AssignmentExpression	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"		1321584	0		=			
ANR	1321734	Identifier	retval		1321584	0					
ANR	1321735	CallExpression	"write ( outfiledes , tempv , strlen ( tempv ) )"		1321584	1					
ANR	1321736	Callee	write		1321584	0					
ANR	1321737	Identifier	write		1321584	0					
ANR	1321738	ArgumentList	outfiledes		1321584	1					
ANR	1321739	Argument	outfiledes		1321584	0					
ANR	1321740	Identifier	outfiledes		1321584	0					
ANR	1321741	Argument	tempv		1321584	1					
ANR	1321742	Identifier	tempv		1321584	0					
ANR	1321743	Argument	strlen ( tempv )		1321584	2					
ANR	1321744	CallExpression	strlen ( tempv )		1321584	0					
ANR	1321745	Callee	strlen		1321584	0					
ANR	1321746	Identifier	strlen		1321584	0					
ANR	1321747	ArgumentList	tempv		1321584	1					
ANR	1321748	Argument	tempv		1321584	0					
ANR	1321749	Identifier	tempv		1321584	0					
ANR	1321750	ExpressionStatement	"retval = write ( outfiledes , ""***"" , 3 )"	307:2:6644:6678	1321584	8	True				
ANR	1321751	AssignmentExpression	"retval = write ( outfiledes , ""***"" , 3 )"		1321584	0		=			
ANR	1321752	Identifier	retval		1321584	0					
ANR	1321753	CallExpression	"write ( outfiledes , ""***"" , 3 )"		1321584	1					
ANR	1321754	Callee	write		1321584	0					
ANR	1321755	Identifier	write		1321584	0					
ANR	1321756	ArgumentList	outfiledes		1321584	1					
ANR	1321757	Argument	outfiledes		1321584	0					
ANR	1321758	Identifier	outfiledes		1321584	0					
ANR	1321759	Argument	"""***"""		1321584	1					
ANR	1321760	PrimaryExpression	"""***"""		1321584	0					
ANR	1321761	Argument	3		1321584	2					
ANR	1321762	PrimaryExpression	3		1321584	0					
ANR	1321763	ExpressionStatement	"retval = write ( outfiledes , ""\\n"" , 1 )"	308:2:6705:6738	1321584	9	True				
ANR	1321764	AssignmentExpression	"retval = write ( outfiledes , ""\\n"" , 1 )"		1321584	0		=			
ANR	1321765	Identifier	retval		1321584	0					
ANR	1321766	CallExpression	"write ( outfiledes , ""\\n"" , 1 )"		1321584	1					
ANR	1321767	Callee	write		1321584	0					
ANR	1321768	Identifier	write		1321584	0					
ANR	1321769	ArgumentList	outfiledes		1321584	1					
ANR	1321770	Argument	outfiledes		1321584	0					
ANR	1321771	Identifier	outfiledes		1321584	0					
ANR	1321772	Argument	"""\\n"""		1321584	1					
ANR	1321773	PrimaryExpression	"""\\n"""		1321584	0					
ANR	1321774	Argument	1		1321584	2					
ANR	1321775	PrimaryExpression	1		1321584	0					
ANR	1321776	IfStatement	if ( file_unlock ( ) == QUILL_FAILURE )		1321584	7					
ANR	1321777	Condition	file_unlock ( ) == QUILL_FAILURE	311:4:6770:6799	1321584	0	True				
ANR	1321778	EqualityExpression	file_unlock ( ) == QUILL_FAILURE		1321584	0		==			
ANR	1321779	CallExpression	file_unlock ( )		1321584	0					
ANR	1321780	Callee	file_unlock		1321584	0					
ANR	1321781	Identifier	file_unlock		1321584	0					
ANR	1321782	ArgumentList			1321584	1					
ANR	1321783	Identifier	QUILL_FAILURE		1321584	1					
ANR	1321784	CompoundStatement		35:36:894:894	1321584	1					
ANR	1321785	ReturnStatement	return QUILL_FAILURE ;	312:2:6806:6826	1321584	0	True				
ANR	1321786	Identifier	QUILL_FAILURE		1321584	0					
ANR	1321787	IfStatement	if ( retval < 0 )		1321584	8					
ANR	1321788	Condition	retval < 0	315:5:6837:6846	1321584	0	True				
ANR	1321789	RelationalExpression	retval < 0		1321584	0		<			
ANR	1321790	Identifier	retval		1321584	0					
ANR	1321791	PrimaryExpression	0		1321584	1					
ANR	1321792	CompoundStatement		39:17:941:941	1321584	1					
ANR	1321793	ReturnStatement	return QUILL_FAILURE ;	316:2:6853:6873	1321584	0	True				
ANR	1321794	Identifier	QUILL_FAILURE		1321584	0					
ANR	1321795	ElseStatement	else		1321584	0					
ANR	1321796	CompoundStatement		41:8:975:975	1321584	0					
ANR	1321797	ReturnStatement	return QUILL_SUCCESS ;	318:2:6887:6907	1321584	0	True				
ANR	1321798	Identifier	QUILL_SUCCESS		1321584	0					
ANR	1321799	ReturnType	QuillErrCode		1321584	1					
ANR	1321800	Identifier	FILESQL :: file_newEvent		1321584	2					
ANR	1321801	ParameterList	"const char * eventType , AttrList * info"		1321584	3					
ANR	1321802	Parameter	const char * eventType	277:36:5868:5888	1321584	0	True				
ANR	1321803	ParameterType	const char *		1321584	0					
ANR	1321804	Identifier	eventType		1321584	1					
ANR	1321805	Parameter	AttrList * info	277:59:5891:5904	1321584	1	True				
ANR	1321806	ParameterType	AttrList *		1321584	0					
ANR	1321807	Identifier	info		1321584	1					
ANR	1321808	CFGEntryNode	ENTRY		1321584		True				
ANR	1321809	CFGExitNode	EXIT		1321584		True				
ANR	1321810	Symbol	file_status . st_size		1321584						
ANR	1321811	Symbol	& file_status		1321584						
ANR	1321812	Symbol	temp		1321584						
ANR	1321813	Symbol	info -> sPrint		1321584						
ANR	1321814	Symbol	file_status		1321584						
ANR	1321815	Symbol	is_open		1321584						
ANR	1321816	Symbol	D_ALWAYS		1321584						
ANR	1321817	Symbol	file_lock		1321584						
ANR	1321818	Symbol	eventType		1321584						
ANR	1321819	Symbol	temp . Value		1321584						
ANR	1321820	Symbol	file_unlock		1321584						
ANR	1321821	Symbol	QUILL_FAILURE		1321584						
ANR	1321822	Symbol	retval		1321584						
ANR	1321823	Symbol	is_dummy		1321584						
ANR	1321824	Symbol	tempv		1321584						
ANR	1321825	Symbol	strlen		1321584						
ANR	1321826	Symbol	FILESIZELIMT		1321584						
ANR	1321827	Symbol	outfiledes		1321584						
ANR	1321828	Symbol	* info		1321584						
ANR	1321829	Symbol	write		1321584						
ANR	1321830	Symbol	info		1321584						
ANR	1321831	Symbol	QUILL_SUCCESS		1321584						
ANR	1321832	Function	FILESQL :: file_updateEvent	322:0:6916:8292							
ANR	1321833	FunctionDef	"FILESQL :: file_updateEvent (const char * eventType , AttrList * info , AttrList * condition)"		1321832	0					
ANR	1321834	CompoundStatement		324:33:7041:8292	1321832	0					
ANR	1321835	IdentifierDeclStatement	int retval = 0 ;	325:1:7044:7058	1321832	0	True				
ANR	1321836	IdentifierDecl	retval = 0		1321832	0					
ANR	1321837	IdentifierDeclType	int		1321832	0					
ANR	1321838	Identifier	retval		1321832	1					
ANR	1321839	AssignmentExpression	retval = 0		1321832	2		=			
ANR	1321840	Identifier	retval		1321832	0					
ANR	1321841	PrimaryExpression	0		1321832	1					
ANR	1321842	IdentifierDeclStatement	struct stat file_status ;	326:1:7061:7084	1321832	1	True				
ANR	1321843	IdentifierDecl	file_status		1321832	0					
ANR	1321844	IdentifierDeclType	struct stat		1321832	0					
ANR	1321845	Identifier	file_status		1321832	1					
ANR	1321846	IfStatement	if ( is_dummy )		1321832	2					
ANR	1321847	Condition	is_dummy	328:8:7095:7102	1321832	0	True				
ANR	1321848	Identifier	is_dummy		1321832	0					
ANR	1321849	ReturnStatement	return QUILL_SUCCESS ;	328:18:7105:7125	1321832	1	True				
ANR	1321850	Identifier	QUILL_SUCCESS		1321832	0					
ANR	1321851	IfStatement	if ( ! is_open )		1321832	3					
ANR	1321852	Condition	! is_open	329:4:7131:7138	1321832	0	True				
ANR	1321853	UnaryOperationExpression	! is_open		1321832	0					
ANR	1321854	UnaryOperator	!		1321832	0					
ANR	1321855	Identifier	is_open		1321832	1					
ANR	1321856	CompoundStatement		7:1:100:100	1321832	1					
ANR	1321857	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error in logging event to Quill SQL Log : File not open\\n"" )"	331:2:7146:7223	1321832	0	True				
ANR	1321858	CallExpression	"dprintf ( D_ALWAYS , ""Error in logging event to Quill SQL Log : File not open\\n"" )"		1321832	0					
ANR	1321859	Callee	dprintf		1321832	0					
ANR	1321860	Identifier	dprintf		1321832	0					
ANR	1321861	ArgumentList	D_ALWAYS		1321832	1					
ANR	1321862	Argument	D_ALWAYS		1321832	0					
ANR	1321863	Identifier	D_ALWAYS		1321832	0					
ANR	1321864	Argument	"""Error in logging event to Quill SQL Log : File not open\\n"""		1321832	1					
ANR	1321865	PrimaryExpression	"""Error in logging event to Quill SQL Log : File not open\\n"""		1321832	0					
ANR	1321866	ReturnStatement	return QUILL_FAILURE ;	332:2:7227:7247	1321832	1	True				
ANR	1321867	Identifier	QUILL_FAILURE		1321832	0					
ANR	1321868	IfStatement	if ( file_lock ( ) == QUILL_FAILURE )		1321832	4					
ANR	1321869	Condition	file_lock ( ) == QUILL_FAILURE	335:4:7257:7284	1321832	0	True				
ANR	1321870	EqualityExpression	file_lock ( ) == QUILL_FAILURE		1321832	0		==			
ANR	1321871	CallExpression	file_lock ( )		1321832	0					
ANR	1321872	Callee	file_lock		1321832	0					
ANR	1321873	Identifier	file_lock		1321832	0					
ANR	1321874	ArgumentList			1321832	1					
ANR	1321875	Identifier	QUILL_FAILURE		1321832	1					
ANR	1321876	CompoundStatement		12:34:245:245	1321832	1					
ANR	1321877	ReturnStatement	return QUILL_FAILURE ;	336:2:7291:7311	1321832	0	True				
ANR	1321878	Identifier	QUILL_FAILURE		1321832	0					
ANR	1321879	ExpressionStatement	"fstat ( outfiledes , & file_status )"	339:1:7318:7349	1321832	5	True				
ANR	1321880	CallExpression	"fstat ( outfiledes , & file_status )"		1321832	0					
ANR	1321881	Callee	fstat		1321832	0					
ANR	1321882	Identifier	fstat		1321832	0					
ANR	1321883	ArgumentList	outfiledes		1321832	1					
ANR	1321884	Argument	outfiledes		1321832	0					
ANR	1321885	Identifier	outfiledes		1321832	0					
ANR	1321886	Argument	& file_status		1321832	1					
ANR	1321887	UnaryOperationExpression	& file_status		1321832	0					
ANR	1321888	UnaryOperator	&		1321832	0					
ANR	1321889	Identifier	file_status		1321832	1					
ANR	1321890	IfStatement	if ( file_status . st_size < FILESIZELIMT )		1321832	6					
ANR	1321891	Condition	file_status . st_size < FILESIZELIMT	342:5:7425:7458	1321832	0	True				
ANR	1321892	RelationalExpression	file_status . st_size < FILESIZELIMT		1321832	0		<			
ANR	1321893	MemberAccess	file_status . st_size		1321832	0					
ANR	1321894	Identifier	file_status		1321832	0					
ANR	1321895	Identifier	st_size		1321832	1					
ANR	1321896	Identifier	FILESIZELIMT		1321832	1					
ANR	1321897	CompoundStatement		25:2:615:632	1321832	1					
ANR	1321898	ExpressionStatement	"retval = write ( outfiledes , ""UPDATE "" , strlen ( ""UPDATE "" ) )"	343:2:7465:7520	1321832	0	True				
ANR	1321899	AssignmentExpression	"retval = write ( outfiledes , ""UPDATE "" , strlen ( ""UPDATE "" ) )"		1321832	0		=			
ANR	1321900	Identifier	retval		1321832	0					
ANR	1321901	CallExpression	"write ( outfiledes , ""UPDATE "" , strlen ( ""UPDATE "" ) )"		1321832	1					
ANR	1321902	Callee	write		1321832	0					
ANR	1321903	Identifier	write		1321832	0					
ANR	1321904	ArgumentList	outfiledes		1321832	1					
ANR	1321905	Argument	outfiledes		1321832	0					
ANR	1321906	Identifier	outfiledes		1321832	0					
ANR	1321907	Argument	"""UPDATE """		1321832	1					
ANR	1321908	PrimaryExpression	"""UPDATE """		1321832	0					
ANR	1321909	Argument	"strlen ( ""UPDATE "" )"		1321832	2					
ANR	1321910	CallExpression	"strlen ( ""UPDATE "" )"		1321832	0					
ANR	1321911	Callee	strlen		1321832	0					
ANR	1321912	Identifier	strlen		1321832	0					
ANR	1321913	ArgumentList	"""UPDATE """		1321832	1					
ANR	1321914	Argument	"""UPDATE """		1321832	0					
ANR	1321915	PrimaryExpression	"""UPDATE """		1321832	0					
ANR	1321916	ExpressionStatement	"retval = write ( outfiledes , eventType , strlen ( eventType ) )"	344:2:7524:7579	1321832	1	True				
ANR	1321917	AssignmentExpression	"retval = write ( outfiledes , eventType , strlen ( eventType ) )"		1321832	0		=			
ANR	1321918	Identifier	retval		1321832	0					
ANR	1321919	CallExpression	"write ( outfiledes , eventType , strlen ( eventType ) )"		1321832	1					
ANR	1321920	Callee	write		1321832	0					
ANR	1321921	Identifier	write		1321832	0					
ANR	1321922	ArgumentList	outfiledes		1321832	1					
ANR	1321923	Argument	outfiledes		1321832	0					
ANR	1321924	Identifier	outfiledes		1321832	0					
ANR	1321925	Argument	eventType		1321832	1					
ANR	1321926	Identifier	eventType		1321832	0					
ANR	1321927	Argument	strlen ( eventType )		1321832	2					
ANR	1321928	CallExpression	strlen ( eventType )		1321832	0					
ANR	1321929	Callee	strlen		1321832	0					
ANR	1321930	Identifier	strlen		1321832	0					
ANR	1321931	ArgumentList	eventType		1321832	1					
ANR	1321932	Argument	eventType		1321832	0					
ANR	1321933	Identifier	eventType		1321832	0					
ANR	1321934	ExpressionStatement	"retval = write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"	345:2:7583:7628	1321832	2	True				
ANR	1321935	AssignmentExpression	"retval = write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"		1321832	0		=			
ANR	1321936	Identifier	retval		1321832	0					
ANR	1321937	CallExpression	"write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"		1321832	1					
ANR	1321938	Callee	write		1321832	0					
ANR	1321939	Identifier	write		1321832	0					
ANR	1321940	ArgumentList	outfiledes		1321832	1					
ANR	1321941	Argument	outfiledes		1321832	0					
ANR	1321942	Identifier	outfiledes		1321832	0					
ANR	1321943	Argument	"""\\n"""		1321832	1					
ANR	1321944	PrimaryExpression	"""\\n"""		1321832	0					
ANR	1321945	Argument	"strlen ( ""\\n"" )"		1321832	2					
ANR	1321946	CallExpression	"strlen ( ""\\n"" )"		1321832	0					
ANR	1321947	Callee	strlen		1321832	0					
ANR	1321948	Identifier	strlen		1321832	0					
ANR	1321949	ArgumentList	"""\\n"""		1321832	1					
ANR	1321950	Argument	"""\\n"""		1321832	0					
ANR	1321951	PrimaryExpression	"""\\n"""		1321832	0					
ANR	1321952	IdentifierDeclStatement	"MyString temp , temp1 ;"	347:2:7633:7653	1321832	3	True				
ANR	1321953	IdentifierDecl	temp		1321832	0					
ANR	1321954	IdentifierDeclType	MyString		1321832	0					
ANR	1321955	Identifier	temp		1321832	1					
ANR	1321956	IdentifierDecl	temp1		1321832	1					
ANR	1321957	IdentifierDeclType	MyString		1321832	0					
ANR	1321958	Identifier	temp1		1321832	1					
ANR	1321959	IdentifierDeclStatement	const char * tempv ;	348:2:7657:7674	1321832	4	True				
ANR	1321960	IdentifierDecl	* tempv		1321832	0					
ANR	1321961	IdentifierDeclType	const char *		1321832	0					
ANR	1321962	Identifier	tempv		1321832	1					
ANR	1321963	ExpressionStatement	retval = info -> sPrint ( temp )	350:2:7679:7706	1321832	5	True				
ANR	1321964	AssignmentExpression	retval = info -> sPrint ( temp )		1321832	0		=			
ANR	1321965	Identifier	retval		1321832	0					
ANR	1321966	CallExpression	info -> sPrint ( temp )		1321832	1					
ANR	1321967	Callee	info -> sPrint		1321832	0					
ANR	1321968	PtrMemberAccess	info -> sPrint		1321832	0					
ANR	1321969	Identifier	info		1321832	0					
ANR	1321970	Identifier	sPrint		1321832	1					
ANR	1321971	ArgumentList	temp		1321832	1					
ANR	1321972	Argument	temp		1321832	0					
ANR	1321973	Identifier	temp		1321832	0					
ANR	1321974	ExpressionStatement	tempv = temp . Value ( )	351:2:7710:7730	1321832	6	True				
ANR	1321975	AssignmentExpression	tempv = temp . Value ( )		1321832	0		=			
ANR	1321976	Identifier	tempv		1321832	0					
ANR	1321977	CallExpression	temp . Value ( )		1321832	1					
ANR	1321978	Callee	temp . Value		1321832	0					
ANR	1321979	MemberAccess	temp . Value		1321832	0					
ANR	1321980	Identifier	temp		1321832	0					
ANR	1321981	Identifier	Value		1321832	1					
ANR	1321982	ArgumentList			1321832	1					
ANR	1321983	ExpressionStatement	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"	352:2:7734:7781	1321832	7	True				
ANR	1321984	AssignmentExpression	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"		1321832	0		=			
ANR	1321985	Identifier	retval		1321832	0					
ANR	1321986	CallExpression	"write ( outfiledes , tempv , strlen ( tempv ) )"		1321832	1					
ANR	1321987	Callee	write		1321832	0					
ANR	1321988	Identifier	write		1321832	0					
ANR	1321989	ArgumentList	outfiledes		1321832	1					
ANR	1321990	Argument	outfiledes		1321832	0					
ANR	1321991	Identifier	outfiledes		1321832	0					
ANR	1321992	Argument	tempv		1321832	1					
ANR	1321993	Identifier	tempv		1321832	0					
ANR	1321994	Argument	strlen ( tempv )		1321832	2					
ANR	1321995	CallExpression	strlen ( tempv )		1321832	0					
ANR	1321996	Callee	strlen		1321832	0					
ANR	1321997	Identifier	strlen		1321832	0					
ANR	1321998	ArgumentList	tempv		1321832	1					
ANR	1321999	Argument	tempv		1321832	0					
ANR	1322000	Identifier	tempv		1321832	0					
ANR	1322001	ExpressionStatement	"retval = write ( outfiledes , ""***"" , 3 )"	354:2:7786:7820	1321832	8	True				
ANR	1322002	AssignmentExpression	"retval = write ( outfiledes , ""***"" , 3 )"		1321832	0		=			
ANR	1322003	Identifier	retval		1321832	0					
ANR	1322004	CallExpression	"write ( outfiledes , ""***"" , 3 )"		1321832	1					
ANR	1322005	Callee	write		1321832	0					
ANR	1322006	Identifier	write		1321832	0					
ANR	1322007	ArgumentList	outfiledes		1321832	1					
ANR	1322008	Argument	outfiledes		1321832	0					
ANR	1322009	Identifier	outfiledes		1321832	0					
ANR	1322010	Argument	"""***"""		1321832	1					
ANR	1322011	PrimaryExpression	"""***"""		1321832	0					
ANR	1322012	Argument	3		1321832	2					
ANR	1322013	PrimaryExpression	3		1321832	0					
ANR	1322014	ExpressionStatement	"retval = write ( outfiledes , ""\\n"" , 1 )"	355:2:7847:7880	1321832	9	True				
ANR	1322015	AssignmentExpression	"retval = write ( outfiledes , ""\\n"" , 1 )"		1321832	0		=			
ANR	1322016	Identifier	retval		1321832	0					
ANR	1322017	CallExpression	"write ( outfiledes , ""\\n"" , 1 )"		1321832	1					
ANR	1322018	Callee	write		1321832	0					
ANR	1322019	Identifier	write		1321832	0					
ANR	1322020	ArgumentList	outfiledes		1321832	1					
ANR	1322021	Argument	outfiledes		1321832	0					
ANR	1322022	Identifier	outfiledes		1321832	0					
ANR	1322023	Argument	"""\\n"""		1321832	1					
ANR	1322024	PrimaryExpression	"""\\n"""		1321832	0					
ANR	1322025	Argument	1		1321832	2					
ANR	1322026	PrimaryExpression	1		1321832	0					
ANR	1322027	ExpressionStatement	retval = condition -> sPrint ( temp1 )	357:2:7906:7939	1321832	10	True				
ANR	1322028	AssignmentExpression	retval = condition -> sPrint ( temp1 )		1321832	0		=			
ANR	1322029	Identifier	retval		1321832	0					
ANR	1322030	CallExpression	condition -> sPrint ( temp1 )		1321832	1					
ANR	1322031	Callee	condition -> sPrint		1321832	0					
ANR	1322032	PtrMemberAccess	condition -> sPrint		1321832	0					
ANR	1322033	Identifier	condition		1321832	0					
ANR	1322034	Identifier	sPrint		1321832	1					
ANR	1322035	ArgumentList	temp1		1321832	1					
ANR	1322036	Argument	temp1		1321832	0					
ANR	1322037	Identifier	temp1		1321832	0					
ANR	1322038	ExpressionStatement	tempv = temp1 . Value ( )	358:2:7943:7964	1321832	11	True				
ANR	1322039	AssignmentExpression	tempv = temp1 . Value ( )		1321832	0		=			
ANR	1322040	Identifier	tempv		1321832	0					
ANR	1322041	CallExpression	temp1 . Value ( )		1321832	1					
ANR	1322042	Callee	temp1 . Value		1321832	0					
ANR	1322043	MemberAccess	temp1 . Value		1321832	0					
ANR	1322044	Identifier	temp1		1321832	0					
ANR	1322045	Identifier	Value		1321832	1					
ANR	1322046	ArgumentList			1321832	1					
ANR	1322047	ExpressionStatement	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"	359:2:7968:8015	1321832	12	True				
ANR	1322048	AssignmentExpression	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"		1321832	0		=			
ANR	1322049	Identifier	retval		1321832	0					
ANR	1322050	CallExpression	"write ( outfiledes , tempv , strlen ( tempv ) )"		1321832	1					
ANR	1322051	Callee	write		1321832	0					
ANR	1322052	Identifier	write		1321832	0					
ANR	1322053	ArgumentList	outfiledes		1321832	1					
ANR	1322054	Argument	outfiledes		1321832	0					
ANR	1322055	Identifier	outfiledes		1321832	0					
ANR	1322056	Argument	tempv		1321832	1					
ANR	1322057	Identifier	tempv		1321832	0					
ANR	1322058	Argument	strlen ( tempv )		1321832	2					
ANR	1322059	CallExpression	strlen ( tempv )		1321832	0					
ANR	1322060	Callee	strlen		1321832	0					
ANR	1322061	Identifier	strlen		1321832	0					
ANR	1322062	ArgumentList	tempv		1321832	1					
ANR	1322063	Argument	tempv		1321832	0					
ANR	1322064	Identifier	tempv		1321832	0					
ANR	1322065	ExpressionStatement	"retval = write ( outfiledes , ""***"" , 3 )"	361:2:8022:8056	1321832	13	True				
ANR	1322066	AssignmentExpression	"retval = write ( outfiledes , ""***"" , 3 )"		1321832	0		=			
ANR	1322067	Identifier	retval		1321832	0					
ANR	1322068	CallExpression	"write ( outfiledes , ""***"" , 3 )"		1321832	1					
ANR	1322069	Callee	write		1321832	0					
ANR	1322070	Identifier	write		1321832	0					
ANR	1322071	ArgumentList	outfiledes		1321832	1					
ANR	1322072	Argument	outfiledes		1321832	0					
ANR	1322073	Identifier	outfiledes		1321832	0					
ANR	1322074	Argument	"""***"""		1321832	1					
ANR	1322075	PrimaryExpression	"""***"""		1321832	0					
ANR	1322076	Argument	3		1321832	2					
ANR	1322077	PrimaryExpression	3		1321832	0					
ANR	1322078	ExpressionStatement	"retval = write ( outfiledes , ""\\n"" , 1 )"	362:2:8083:8116	1321832	14	True				
ANR	1322079	AssignmentExpression	"retval = write ( outfiledes , ""\\n"" , 1 )"		1321832	0		=			
ANR	1322080	Identifier	retval		1321832	0					
ANR	1322081	CallExpression	"write ( outfiledes , ""\\n"" , 1 )"		1321832	1					
ANR	1322082	Callee	write		1321832	0					
ANR	1322083	Identifier	write		1321832	0					
ANR	1322084	ArgumentList	outfiledes		1321832	1					
ANR	1322085	Argument	outfiledes		1321832	0					
ANR	1322086	Identifier	outfiledes		1321832	0					
ANR	1322087	Argument	"""\\n"""		1321832	1					
ANR	1322088	PrimaryExpression	"""\\n"""		1321832	0					
ANR	1322089	Argument	1		1321832	2					
ANR	1322090	PrimaryExpression	1		1321832	0					
ANR	1322091	IfStatement	if ( file_unlock ( ) == QUILL_FAILURE )		1321832	7					
ANR	1322092	Condition	file_unlock ( ) == QUILL_FAILURE	365:4:8148:8177	1321832	0	True				
ANR	1322093	EqualityExpression	file_unlock ( ) == QUILL_FAILURE		1321832	0		==			
ANR	1322094	CallExpression	file_unlock ( )		1321832	0					
ANR	1322095	Callee	file_unlock		1321832	0					
ANR	1322096	Identifier	file_unlock		1321832	0					
ANR	1322097	ArgumentList			1321832	1					
ANR	1322098	Identifier	QUILL_FAILURE		1321832	1					
ANR	1322099	CompoundStatement		42:36:1138:1138	1321832	1					
ANR	1322100	ReturnStatement	return QUILL_FAILURE ;	366:2:8184:8204	1321832	0	True				
ANR	1322101	Identifier	QUILL_FAILURE		1321832	0					
ANR	1322102	IfStatement	if ( retval < 0 )		1321832	8					
ANR	1322103	Condition	retval < 0	369:5:8215:8224	1321832	0	True				
ANR	1322104	RelationalExpression	retval < 0		1321832	0		<			
ANR	1322105	Identifier	retval		1321832	0					
ANR	1322106	PrimaryExpression	0		1321832	1					
ANR	1322107	CompoundStatement		46:17:1185:1185	1321832	1					
ANR	1322108	ReturnStatement	return QUILL_FAILURE ;	370:2:8231:8251	1321832	0	True				
ANR	1322109	Identifier	QUILL_FAILURE		1321832	0					
ANR	1322110	ElseStatement	else		1321832	0					
ANR	1322111	CompoundStatement		48:8:1220:1220	1321832	0					
ANR	1322112	ReturnStatement	return QUILL_SUCCESS ;	372:2:8266:8286	1321832	0	True				
ANR	1322113	Identifier	QUILL_SUCCESS		1321832	0					
ANR	1322114	ReturnType	QuillErrCode		1321832	1					
ANR	1322115	Identifier	FILESQL :: file_updateEvent		1321832	2					
ANR	1322116	ParameterList	"const char * eventType , AttrList * info , AttrList * condition"		1321832	3					
ANR	1322117	Parameter	const char * eventType	322:39:6955:6975	1321832	0	True				
ANR	1322118	ParameterType	const char *		1321832	0					
ANR	1322119	Identifier	eventType		1321832	1					
ANR	1322120	Parameter	AttrList * info	323:12:6991:7004	1321832	1	True				
ANR	1322121	ParameterType	AttrList *		1321832	0					
ANR	1322122	Identifier	info		1321832	1					
ANR	1322123	Parameter	AttrList * condition	324:12:7020:7038	1321832	2	True				
ANR	1322124	ParameterType	AttrList *		1321832	0					
ANR	1322125	Identifier	condition		1321832	1					
ANR	1322126	CFGEntryNode	ENTRY		1321832		True				
ANR	1322127	CFGExitNode	EXIT		1321832		True				
ANR	1322128	Symbol	condition -> sPrint		1321832						
ANR	1322129	Symbol	& file_status		1321832						
ANR	1322130	Symbol	info -> sPrint		1321832						
ANR	1322131	Symbol	temp1 . Value		1321832						
ANR	1322132	Symbol	file_lock		1321832						
ANR	1322133	Symbol	QUILL_FAILURE		1321832						
ANR	1322134	Symbol	is_dummy		1321832						
ANR	1322135	Symbol	temp1		1321832						
ANR	1322136	Symbol	strlen		1321832						
ANR	1322137	Symbol	FILESIZELIMT		1321832						
ANR	1322138	Symbol	write		1321832						
ANR	1322139	Symbol	info		1321832						
ANR	1322140	Symbol	QUILL_SUCCESS		1321832						
ANR	1322141	Symbol	file_status . st_size		1321832						
ANR	1322142	Symbol	temp		1321832						
ANR	1322143	Symbol	file_status		1321832						
ANR	1322144	Symbol	is_open		1321832						
ANR	1322145	Symbol	D_ALWAYS		1321832						
ANR	1322146	Symbol	eventType		1321832						
ANR	1322147	Symbol	temp . Value		1321832						
ANR	1322148	Symbol	file_unlock		1321832						
ANR	1322149	Symbol	retval		1321832						
ANR	1322150	Symbol	tempv		1321832						
ANR	1322151	Symbol	condition		1321832						
ANR	1322152	Symbol	outfiledes		1321832						
ANR	1322153	Symbol	* condition		1321832						
ANR	1322154	Symbol	* info		1321832						
ANR	1322155	Function	FILESQL :: file_deleteEvent	377:0:8301:9356							
ANR	1322156	FunctionDef	"FILESQL :: file_deleteEvent (const char * eventType , AttrList * condition)"		1322155	0					
ANR	1322157	CompoundStatement		378:33:8397:9356	1322155	0					
ANR	1322158	IdentifierDeclStatement	int retval = 0 ;	379:1:8400:8414	1322155	0	True				
ANR	1322159	IdentifierDecl	retval = 0		1322155	0					
ANR	1322160	IdentifierDeclType	int		1322155	0					
ANR	1322161	Identifier	retval		1322155	1					
ANR	1322162	AssignmentExpression	retval = 0		1322155	2		=			
ANR	1322163	Identifier	retval		1322155	0					
ANR	1322164	PrimaryExpression	0		1322155	1					
ANR	1322165	IdentifierDeclStatement	struct stat file_status ;	380:1:8417:8440	1322155	1	True				
ANR	1322166	IdentifierDecl	file_status		1322155	0					
ANR	1322167	IdentifierDeclType	struct stat		1322155	0					
ANR	1322168	Identifier	file_status		1322155	1					
ANR	1322169	IfStatement	if ( ! is_open )		1322155	2					
ANR	1322170	Condition	! is_open	382:4:8447:8454	1322155	0	True				
ANR	1322171	UnaryOperationExpression	! is_open		1322155	0					
ANR	1322172	UnaryOperator	!		1322155	0					
ANR	1322173	Identifier	is_open		1322155	1					
ANR	1322174	CompoundStatement		6:1:60:60	1322155	1					
ANR	1322175	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error in logging to file : File not open\\n"" )"	384:2:8462:8524	1322155	0	True				
ANR	1322176	CallExpression	"dprintf ( D_ALWAYS , ""Error in logging to file : File not open\\n"" )"		1322155	0					
ANR	1322177	Callee	dprintf		1322155	0					
ANR	1322178	Identifier	dprintf		1322155	0					
ANR	1322179	ArgumentList	D_ALWAYS		1322155	1					
ANR	1322180	Argument	D_ALWAYS		1322155	0					
ANR	1322181	Identifier	D_ALWAYS		1322155	0					
ANR	1322182	Argument	"""Error in logging to file : File not open\\n"""		1322155	1					
ANR	1322183	PrimaryExpression	"""Error in logging to file : File not open\\n"""		1322155	0					
ANR	1322184	ReturnStatement	return QUILL_FAILURE ;	385:2:8528:8548	1322155	1	True				
ANR	1322185	Identifier	QUILL_FAILURE		1322155	0					
ANR	1322186	IfStatement	if ( file_lock ( ) == QUILL_FAILURE )		1322155	3					
ANR	1322187	Condition	file_lock ( ) == QUILL_FAILURE	388:4:8558:8585	1322155	0	True				
ANR	1322188	EqualityExpression	file_lock ( ) == QUILL_FAILURE		1322155	0		==			
ANR	1322189	CallExpression	file_lock ( )		1322155	0					
ANR	1322190	Callee	file_lock		1322155	0					
ANR	1322191	Identifier	file_lock		1322155	0					
ANR	1322192	ArgumentList			1322155	1					
ANR	1322193	Identifier	QUILL_FAILURE		1322155	1					
ANR	1322194	CompoundStatement		11:34:190:190	1322155	1					
ANR	1322195	ReturnStatement	return QUILL_FAILURE ;	389:2:8592:8612	1322155	0	True				
ANR	1322196	Identifier	QUILL_FAILURE		1322155	0					
ANR	1322197	ExpressionStatement	"fstat ( outfiledes , & file_status )"	392:1:8619:8650	1322155	4	True				
ANR	1322198	CallExpression	"fstat ( outfiledes , & file_status )"		1322155	0					
ANR	1322199	Callee	fstat		1322155	0					
ANR	1322200	Identifier	fstat		1322155	0					
ANR	1322201	ArgumentList	outfiledes		1322155	1					
ANR	1322202	Argument	outfiledes		1322155	0					
ANR	1322203	Identifier	outfiledes		1322155	0					
ANR	1322204	Argument	& file_status		1322155	1					
ANR	1322205	UnaryOperationExpression	& file_status		1322155	0					
ANR	1322206	UnaryOperator	&		1322155	0					
ANR	1322207	Identifier	file_status		1322155	1					
ANR	1322208	IfStatement	if ( file_status . st_size < FILESIZELIMT )		1322155	5					
ANR	1322209	Condition	file_status . st_size < FILESIZELIMT	395:5:8726:8759	1322155	0	True				
ANR	1322210	RelationalExpression	file_status . st_size < FILESIZELIMT		1322155	0		<			
ANR	1322211	MemberAccess	file_status . st_size		1322155	0					
ANR	1322212	Identifier	file_status		1322155	0					
ANR	1322213	Identifier	st_size		1322155	1					
ANR	1322214	Identifier	FILESIZELIMT		1322155	1					
ANR	1322215	CompoundStatement		24:2:553:570	1322155	1					
ANR	1322216	ExpressionStatement	"retval = write ( outfiledes , ""DELETE "" , strlen ( ""DELETE "" ) )"	396:2:8766:8821	1322155	0	True				
ANR	1322217	AssignmentExpression	"retval = write ( outfiledes , ""DELETE "" , strlen ( ""DELETE "" ) )"		1322155	0		=			
ANR	1322218	Identifier	retval		1322155	0					
ANR	1322219	CallExpression	"write ( outfiledes , ""DELETE "" , strlen ( ""DELETE "" ) )"		1322155	1					
ANR	1322220	Callee	write		1322155	0					
ANR	1322221	Identifier	write		1322155	0					
ANR	1322222	ArgumentList	outfiledes		1322155	1					
ANR	1322223	Argument	outfiledes		1322155	0					
ANR	1322224	Identifier	outfiledes		1322155	0					
ANR	1322225	Argument	"""DELETE """		1322155	1					
ANR	1322226	PrimaryExpression	"""DELETE """		1322155	0					
ANR	1322227	Argument	"strlen ( ""DELETE "" )"		1322155	2					
ANR	1322228	CallExpression	"strlen ( ""DELETE "" )"		1322155	0					
ANR	1322229	Callee	strlen		1322155	0					
ANR	1322230	Identifier	strlen		1322155	0					
ANR	1322231	ArgumentList	"""DELETE """		1322155	1					
ANR	1322232	Argument	"""DELETE """		1322155	0					
ANR	1322233	PrimaryExpression	"""DELETE """		1322155	0					
ANR	1322234	ExpressionStatement	"retval = write ( outfiledes , eventType , strlen ( eventType ) )"	397:2:8825:8880	1322155	1	True				
ANR	1322235	AssignmentExpression	"retval = write ( outfiledes , eventType , strlen ( eventType ) )"		1322155	0		=			
ANR	1322236	Identifier	retval		1322155	0					
ANR	1322237	CallExpression	"write ( outfiledes , eventType , strlen ( eventType ) )"		1322155	1					
ANR	1322238	Callee	write		1322155	0					
ANR	1322239	Identifier	write		1322155	0					
ANR	1322240	ArgumentList	outfiledes		1322155	1					
ANR	1322241	Argument	outfiledes		1322155	0					
ANR	1322242	Identifier	outfiledes		1322155	0					
ANR	1322243	Argument	eventType		1322155	1					
ANR	1322244	Identifier	eventType		1322155	0					
ANR	1322245	Argument	strlen ( eventType )		1322155	2					
ANR	1322246	CallExpression	strlen ( eventType )		1322155	0					
ANR	1322247	Callee	strlen		1322155	0					
ANR	1322248	Identifier	strlen		1322155	0					
ANR	1322249	ArgumentList	eventType		1322155	1					
ANR	1322250	Argument	eventType		1322155	0					
ANR	1322251	Identifier	eventType		1322155	0					
ANR	1322252	ExpressionStatement	"retval = write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"	398:2:8884:8929	1322155	2	True				
ANR	1322253	AssignmentExpression	"retval = write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"		1322155	0		=			
ANR	1322254	Identifier	retval		1322155	0					
ANR	1322255	CallExpression	"write ( outfiledes , ""\\n"" , strlen ( ""\\n"" ) )"		1322155	1					
ANR	1322256	Callee	write		1322155	0					
ANR	1322257	Identifier	write		1322155	0					
ANR	1322258	ArgumentList	outfiledes		1322155	1					
ANR	1322259	Argument	outfiledes		1322155	0					
ANR	1322260	Identifier	outfiledes		1322155	0					
ANR	1322261	Argument	"""\\n"""		1322155	1					
ANR	1322262	PrimaryExpression	"""\\n"""		1322155	0					
ANR	1322263	Argument	"strlen ( ""\\n"" )"		1322155	2					
ANR	1322264	CallExpression	"strlen ( ""\\n"" )"		1322155	0					
ANR	1322265	Callee	strlen		1322155	0					
ANR	1322266	Identifier	strlen		1322155	0					
ANR	1322267	ArgumentList	"""\\n"""		1322155	1					
ANR	1322268	Argument	"""\\n"""		1322155	0					
ANR	1322269	PrimaryExpression	"""\\n"""		1322155	0					
ANR	1322270	IdentifierDeclStatement	MyString temp ;	400:2:8934:8947	1322155	3	True				
ANR	1322271	IdentifierDecl	temp		1322155	0					
ANR	1322272	IdentifierDeclType	MyString		1322155	0					
ANR	1322273	Identifier	temp		1322155	1					
ANR	1322274	IdentifierDeclStatement	const char * tempv ;	401:2:8951:8968	1322155	4	True				
ANR	1322275	IdentifierDecl	* tempv		1322155	0					
ANR	1322276	IdentifierDeclType	const char *		1322155	0					
ANR	1322277	Identifier	tempv		1322155	1					
ANR	1322278	ExpressionStatement	retval = condition -> sPrint ( temp )	403:2:8974:9006	1322155	5	True				
ANR	1322279	AssignmentExpression	retval = condition -> sPrint ( temp )		1322155	0		=			
ANR	1322280	Identifier	retval		1322155	0					
ANR	1322281	CallExpression	condition -> sPrint ( temp )		1322155	1					
ANR	1322282	Callee	condition -> sPrint		1322155	0					
ANR	1322283	PtrMemberAccess	condition -> sPrint		1322155	0					
ANR	1322284	Identifier	condition		1322155	0					
ANR	1322285	Identifier	sPrint		1322155	1					
ANR	1322286	ArgumentList	temp		1322155	1					
ANR	1322287	Argument	temp		1322155	0					
ANR	1322288	Identifier	temp		1322155	0					
ANR	1322289	ExpressionStatement	tempv = temp . Value ( )	404:2:9010:9030	1322155	6	True				
ANR	1322290	AssignmentExpression	tempv = temp . Value ( )		1322155	0		=			
ANR	1322291	Identifier	tempv		1322155	0					
ANR	1322292	CallExpression	temp . Value ( )		1322155	1					
ANR	1322293	Callee	temp . Value		1322155	0					
ANR	1322294	MemberAccess	temp . Value		1322155	0					
ANR	1322295	Identifier	temp		1322155	0					
ANR	1322296	Identifier	Value		1322155	1					
ANR	1322297	ArgumentList			1322155	1					
ANR	1322298	ExpressionStatement	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"	405:2:9034:9081	1322155	7	True				
ANR	1322299	AssignmentExpression	"retval = write ( outfiledes , tempv , strlen ( tempv ) )"		1322155	0		=			
ANR	1322300	Identifier	retval		1322155	0					
ANR	1322301	CallExpression	"write ( outfiledes , tempv , strlen ( tempv ) )"		1322155	1					
ANR	1322302	Callee	write		1322155	0					
ANR	1322303	Identifier	write		1322155	0					
ANR	1322304	ArgumentList	outfiledes		1322155	1					
ANR	1322305	Argument	outfiledes		1322155	0					
ANR	1322306	Identifier	outfiledes		1322155	0					
ANR	1322307	Argument	tempv		1322155	1					
ANR	1322308	Identifier	tempv		1322155	0					
ANR	1322309	Argument	strlen ( tempv )		1322155	2					
ANR	1322310	CallExpression	strlen ( tempv )		1322155	0					
ANR	1322311	Callee	strlen		1322155	0					
ANR	1322312	Identifier	strlen		1322155	0					
ANR	1322313	ArgumentList	tempv		1322155	1					
ANR	1322314	Argument	tempv		1322155	0					
ANR	1322315	Identifier	tempv		1322155	0					
ANR	1322316	ExpressionStatement	"retval = write ( outfiledes , ""***"" , 3 )"	407:2:9086:9120	1322155	8	True				
ANR	1322317	AssignmentExpression	"retval = write ( outfiledes , ""***"" , 3 )"		1322155	0		=			
ANR	1322318	Identifier	retval		1322155	0					
ANR	1322319	CallExpression	"write ( outfiledes , ""***"" , 3 )"		1322155	1					
ANR	1322320	Callee	write		1322155	0					
ANR	1322321	Identifier	write		1322155	0					
ANR	1322322	ArgumentList	outfiledes		1322155	1					
ANR	1322323	Argument	outfiledes		1322155	0					
ANR	1322324	Identifier	outfiledes		1322155	0					
ANR	1322325	Argument	"""***"""		1322155	1					
ANR	1322326	PrimaryExpression	"""***"""		1322155	0					
ANR	1322327	Argument	3		1322155	2					
ANR	1322328	PrimaryExpression	3		1322155	0					
ANR	1322329	ExpressionStatement	"retval = write ( outfiledes , ""\\n"" , 1 )"	408:2:9147:9180	1322155	9	True				
ANR	1322330	AssignmentExpression	"retval = write ( outfiledes , ""\\n"" , 1 )"		1322155	0		=			
ANR	1322331	Identifier	retval		1322155	0					
ANR	1322332	CallExpression	"write ( outfiledes , ""\\n"" , 1 )"		1322155	1					
ANR	1322333	Callee	write		1322155	0					
ANR	1322334	Identifier	write		1322155	0					
ANR	1322335	ArgumentList	outfiledes		1322155	1					
ANR	1322336	Argument	outfiledes		1322155	0					
ANR	1322337	Identifier	outfiledes		1322155	0					
ANR	1322338	Argument	"""\\n"""		1322155	1					
ANR	1322339	PrimaryExpression	"""\\n"""		1322155	0					
ANR	1322340	Argument	1		1322155	2					
ANR	1322341	PrimaryExpression	1		1322155	0					
ANR	1322342	IfStatement	if ( file_unlock ( ) == QUILL_FAILURE )		1322155	6					
ANR	1322343	Condition	file_unlock ( ) == QUILL_FAILURE	411:4:9211:9240	1322155	0	True				
ANR	1322344	EqualityExpression	file_unlock ( ) == QUILL_FAILURE		1322155	0		==			
ANR	1322345	CallExpression	file_unlock ( )		1322155	0					
ANR	1322346	Callee	file_unlock		1322155	0					
ANR	1322347	Identifier	file_unlock		1322155	0					
ANR	1322348	ArgumentList			1322155	1					
ANR	1322349	Identifier	QUILL_FAILURE		1322155	1					
ANR	1322350	CompoundStatement		34:36:845:845	1322155	1					
ANR	1322351	ReturnStatement	return QUILL_FAILURE ;	412:2:9247:9267	1322155	0	True				
ANR	1322352	Identifier	QUILL_FAILURE		1322155	0					
ANR	1322353	IfStatement	if ( retval < 0 )		1322155	7					
ANR	1322354	Condition	retval < 0	415:5:9278:9287	1322155	0	True				
ANR	1322355	RelationalExpression	retval < 0		1322155	0		<			
ANR	1322356	Identifier	retval		1322155	0					
ANR	1322357	PrimaryExpression	0		1322155	1					
ANR	1322358	CompoundStatement		38:17:892:892	1322155	1					
ANR	1322359	ReturnStatement	return QUILL_FAILURE ;	416:2:9294:9314	1322155	0	True				
ANR	1322360	Identifier	QUILL_FAILURE		1322155	0					
ANR	1322361	ElseStatement	else		1322155	0					
ANR	1322362	CompoundStatement		41:6:928:928	1322155	0					
ANR	1322363	ReturnStatement	return QUILL_SUCCESS ;	419:2:9330:9350	1322155	0	True				
ANR	1322364	Identifier	QUILL_SUCCESS		1322155	0					
ANR	1322365	ReturnType	QuillErrCode		1322155	1					
ANR	1322366	Identifier	FILESQL :: file_deleteEvent		1322155	2					
ANR	1322367	ParameterList	"const char * eventType , AttrList * condition"		1322155	3					
ANR	1322368	Parameter	const char * eventType	377:39:8340:8360	1322155	0	True				
ANR	1322369	ParameterType	const char *		1322155	0					
ANR	1322370	Identifier	eventType		1322155	1					
ANR	1322371	Parameter	AttrList * condition	378:12:8376:8394	1322155	1	True				
ANR	1322372	ParameterType	AttrList *		1322155	0					
ANR	1322373	Identifier	condition		1322155	1					
ANR	1322374	CFGEntryNode	ENTRY		1322155		True				
ANR	1322375	CFGExitNode	EXIT		1322155		True				
ANR	1322376	Symbol	file_status . st_size		1322155						
ANR	1322377	Symbol	condition -> sPrint		1322155						
ANR	1322378	Symbol	& file_status		1322155						
ANR	1322379	Symbol	temp		1322155						
ANR	1322380	Symbol	file_status		1322155						
ANR	1322381	Symbol	is_open		1322155						
ANR	1322382	Symbol	D_ALWAYS		1322155						
ANR	1322383	Symbol	file_lock		1322155						
ANR	1322384	Symbol	eventType		1322155						
ANR	1322385	Symbol	temp . Value		1322155						
ANR	1322386	Symbol	file_unlock		1322155						
ANR	1322387	Symbol	QUILL_FAILURE		1322155						
ANR	1322388	Symbol	retval		1322155						
ANR	1322389	Symbol	tempv		1322155						
ANR	1322390	Symbol	strlen		1322155						
ANR	1322391	Symbol	condition		1322155						
ANR	1322392	Symbol	FILESIZELIMT		1322155						
ANR	1322393	Symbol	outfiledes		1322155						
ANR	1322394	Symbol	* condition		1322155						
ANR	1322395	Symbol	write		1322155						
ANR	1322396	Symbol	QUILL_SUCCESS		1322155						
ANR	1322397	DeclStmt									
ANR	1322398	Decl							FILESQL	FILESQL *	FILEObj
ANR	1322399	Function	FILESQL :: createInstance	436:12:9924:10755							
ANR	1322400	FunctionDef	FILESQL :: createInstance (bool use_sql_log)		1322399	0					
ANR	1322401	CompoundStatement		437:42:9976:10755	1322399	0					
ANR	1322402	IdentifierDeclStatement	FILESQL * ptr = NULL ;	438:1:9980:9999	1322399	0	True				
ANR	1322403	IdentifierDecl	* ptr = NULL		1322399	0					
ANR	1322404	IdentifierDeclType	FILESQL *		1322399	0					
ANR	1322405	Identifier	ptr		1322399	1					
ANR	1322406	AssignmentExpression	* ptr = NULL		1322399	2		=			
ANR	1322407	Identifier	NULL		1322399	0					
ANR	1322408	Identifier	NULL		1322399	1					
ANR	1322409	IdentifierDeclStatement	char * tmp ;	439:1:10002:10011	1322399	1	True				
ANR	1322410	IdentifierDecl	* tmp		1322399	0					
ANR	1322411	IdentifierDeclType	char *		1322399	0					
ANR	1322412	Identifier	tmp		1322399	1					
ANR	1322413	IdentifierDeclStatement	"MyString outfilename = """" ;"	440:1:10015:10040	1322399	2	True				
ANR	1322414	IdentifierDecl	"outfilename = """""		1322399	0					
ANR	1322415	IdentifierDeclType	MyString		1322399	0					
ANR	1322416	Identifier	outfilename		1322399	1					
ANR	1322417	AssignmentExpression	"outfilename = """""		1322399	2		=			
ANR	1322418	Identifier	outfilename		1322399	0					
ANR	1322419	PrimaryExpression	""""""		1322399	1					
ANR	1322420	IdentifierDeclStatement	char * tmpParamName ;	441:1:10043:10061	1322399	3	True				
ANR	1322421	IdentifierDecl	* tmpParamName		1322399	0					
ANR	1322422	IdentifierDeclType	char *		1322399	0					
ANR	1322423	Identifier	tmpParamName		1322399	1					
ANR	1322424	IdentifierDeclStatement	const char * daemon_name ;	442:1:10064:10087	1322399	4	True				
ANR	1322425	IdentifierDecl	* daemon_name		1322399	0					
ANR	1322426	IdentifierDeclType	const char *		1322399	0					
ANR	1322427	Identifier	daemon_name		1322399	1					
ANR	1322428	ExpressionStatement	daemon_name = get_mySubSystem ( ) -> getName ( )	444:1:10092:10134	1322399	5	True				
ANR	1322429	AssignmentExpression	daemon_name = get_mySubSystem ( ) -> getName ( )		1322399	0		=			
ANR	1322430	Identifier	daemon_name		1322399	0					
ANR	1322431	CallExpression	get_mySubSystem ( ) -> getName ( )		1322399	1					
ANR	1322432	Callee	get_mySubSystem ( ) -> getName		1322399	0					
ANR	1322433	PtrMemberAccess	get_mySubSystem ( ) -> getName		1322399	0					
ANR	1322434	CallExpression	get_mySubSystem ( )		1322399	0					
ANR	1322435	Callee	get_mySubSystem		1322399	0					
ANR	1322436	Identifier	get_mySubSystem		1322399	0					
ANR	1322437	ArgumentList			1322399	1					
ANR	1322438	Identifier	getName		1322399	1					
ANR	1322439	ArgumentList			1322399	1					
ANR	1322440	ExpressionStatement	tmpParamName = ( char * ) malloc ( 10 + strlen ( daemon_name ) )	446:1:10138:10191	1322399	6	True				
ANR	1322441	AssignmentExpression	tmpParamName = ( char * ) malloc ( 10 + strlen ( daemon_name ) )		1322399	0		=			
ANR	1322442	Identifier	tmpParamName		1322399	0					
ANR	1322443	CastExpression	( char * ) malloc ( 10 + strlen ( daemon_name ) )		1322399	1					
ANR	1322444	CastTarget	char *		1322399	0					
ANR	1322445	CallExpression	malloc ( 10 + strlen ( daemon_name ) )		1322399	1					
ANR	1322446	Callee	malloc		1322399	0					
ANR	1322447	Identifier	malloc		1322399	0					
ANR	1322448	ArgumentList	10 + strlen ( daemon_name )		1322399	1					
ANR	1322449	Argument	10 + strlen ( daemon_name )		1322399	0					
ANR	1322450	AdditiveExpression	10 + strlen ( daemon_name )		1322399	0		+			
ANR	1322451	PrimaryExpression	10		1322399	0					
ANR	1322452	CallExpression	strlen ( daemon_name )		1322399	1					
ANR	1322453	Callee	strlen		1322399	0					
ANR	1322454	Identifier	strlen		1322399	0					
ANR	1322455	ArgumentList	daemon_name		1322399	1					
ANR	1322456	Argument	daemon_name		1322399	0					
ANR	1322457	Identifier	daemon_name		1322399	0					
ANR	1322458	ExpressionStatement	"sprintf ( tmpParamName , ""%s_SQLLOG"" , daemon_name )"	449:1:10249:10296	1322399	7	True				
ANR	1322459	CallExpression	"sprintf ( tmpParamName , ""%s_SQLLOG"" , daemon_name )"		1322399	0					
ANR	1322460	Callee	sprintf		1322399	0					
ANR	1322461	Identifier	sprintf		1322399	0					
ANR	1322462	ArgumentList	tmpParamName		1322399	1					
ANR	1322463	Argument	tmpParamName		1322399	0					
ANR	1322464	Identifier	tmpParamName		1322399	0					
ANR	1322465	Argument	"""%s_SQLLOG"""		1322399	1					
ANR	1322466	PrimaryExpression	"""%s_SQLLOG"""		1322399	0					
ANR	1322467	Argument	daemon_name		1322399	2					
ANR	1322468	Identifier	daemon_name		1322399	0					
ANR	1322469	ExpressionStatement	tmp = param ( tmpParamName )	450:1:10299:10324	1322399	8	True				
ANR	1322470	AssignmentExpression	tmp = param ( tmpParamName )		1322399	0		=			
ANR	1322471	Identifier	tmp		1322399	0					
ANR	1322472	CallExpression	param ( tmpParamName )		1322399	1					
ANR	1322473	Callee	param		1322399	0					
ANR	1322474	Identifier	param		1322399	0					
ANR	1322475	ArgumentList	tmpParamName		1322399	1					
ANR	1322476	Argument	tmpParamName		1322399	0					
ANR	1322477	Identifier	tmpParamName		1322399	0					
ANR	1322478	ExpressionStatement	free ( tmpParamName )	451:1:10327:10345	1322399	9	True				
ANR	1322479	CallExpression	free ( tmpParamName )		1322399	0					
ANR	1322480	Callee	free		1322399	0					
ANR	1322481	Identifier	free		1322399	0					
ANR	1322482	ArgumentList	tmpParamName		1322399	1					
ANR	1322483	Argument	tmpParamName		1322399	0					
ANR	1322484	Identifier	tmpParamName		1322399	0					
ANR	1322485	IfStatement	if ( tmp )		1322399	10					
ANR	1322486	Condition	tmp	453:5:10353:10355	1322399	0	True				
ANR	1322487	Identifier	tmp		1322399	0					
ANR	1322488	CompoundStatement		17:11:382:382	1322399	1					
ANR	1322489	ExpressionStatement	outfilename = tmp	454:2:10363:10380	1322399	0	True				
ANR	1322490	AssignmentExpression	outfilename = tmp		1322399	0		=			
ANR	1322491	Identifier	outfilename		1322399	0					
ANR	1322492	Identifier	tmp		1322399	1					
ANR	1322493	ExpressionStatement	free ( tmp )	455:2:10384:10393	1322399	1	True				
ANR	1322494	CallExpression	free ( tmp )		1322399	0					
ANR	1322495	Callee	free		1322399	0					
ANR	1322496	Identifier	free		1322399	0					
ANR	1322497	ArgumentList	tmp		1322399	1					
ANR	1322498	Argument	tmp		1322399	0					
ANR	1322499	Identifier	tmp		1322399	0					
ANR	1322500	ElseStatement	else		1322399	0					
ANR	1322501	CompoundStatement		21:6:427:427	1322399	0					
ANR	1322502	ExpressionStatement	"tmp = param ( ""LOG"" )"	458:2:10408:10427	1322399	0	True				
ANR	1322503	AssignmentExpression	"tmp = param ( ""LOG"" )"		1322399	0		=			
ANR	1322504	Identifier	tmp		1322399	0					
ANR	1322505	CallExpression	"param ( ""LOG"" )"		1322399	1					
ANR	1322506	Callee	param		1322399	0					
ANR	1322507	Identifier	param		1322399	0					
ANR	1322508	ArgumentList	"""LOG"""		1322399	1					
ANR	1322509	Argument	"""LOG"""		1322399	0					
ANR	1322510	PrimaryExpression	"""LOG"""		1322399	0					
ANR	1322511	IfStatement	if ( tmp )		1322399	1					
ANR	1322512	Condition	tmp	460:6:10438:10440	1322399	0	True				
ANR	1322513	Identifier	tmp		1322399	0					
ANR	1322514	CompoundStatement		24:11:466:466	1322399	1					
ANR	1322515	ExpressionStatement	"outfilename . sprintf ( ""%s/sql.log"" , tmp )"	461:3:10448:10486	1322399	0	True				
ANR	1322516	CallExpression	"outfilename . sprintf ( ""%s/sql.log"" , tmp )"		1322399	0					
ANR	1322517	Callee	outfilename . sprintf		1322399	0					
ANR	1322518	MemberAccess	outfilename . sprintf		1322399	0					
ANR	1322519	Identifier	outfilename		1322399	0					
ANR	1322520	Identifier	sprintf		1322399	1					
ANR	1322521	ArgumentList	"""%s/sql.log"""		1322399	1					
ANR	1322522	Argument	"""%s/sql.log"""		1322399	0					
ANR	1322523	PrimaryExpression	"""%s/sql.log"""		1322399	0					
ANR	1322524	Argument	tmp		1322399	1					
ANR	1322525	Identifier	tmp		1322399	0					
ANR	1322526	ExpressionStatement	free ( tmp )	462:3:10491:10500	1322399	1	True				
ANR	1322527	CallExpression	free ( tmp )		1322399	0					
ANR	1322528	Callee	free		1322399	0					
ANR	1322529	Identifier	free		1322399	0					
ANR	1322530	ArgumentList	tmp		1322399	1					
ANR	1322531	Argument	tmp		1322399	0					
ANR	1322532	Identifier	tmp		1322399	0					
ANR	1322533	ElseStatement	else		1322399	0					
ANR	1322534	CompoundStatement		28:7:536:536	1322399	0					
ANR	1322535	ExpressionStatement	"outfilename . sprintf ( ""sql.log"" )"	465:3:10518:10548	1322399	0	True				
ANR	1322536	CallExpression	"outfilename . sprintf ( ""sql.log"" )"		1322399	0					
ANR	1322537	Callee	outfilename . sprintf		1322399	0					
ANR	1322538	MemberAccess	outfilename . sprintf		1322399	0					
ANR	1322539	Identifier	outfilename		1322399	0					
ANR	1322540	Identifier	sprintf		1322399	1					
ANR	1322541	ArgumentList	"""sql.log"""		1322399	1					
ANR	1322542	Argument	"""sql.log"""		1322399	0					
ANR	1322543	PrimaryExpression	"""sql.log"""		1322399	0					
ANR	1322544	ExpressionStatement	"ptr = new FILESQL ( outfilename . Value ( ) , O_WRONLY | O_CREAT | O_APPEND , use_sql_log )"	469:1:10559:10637	1322399	11	True				
ANR	1322545	AssignmentExpression	"ptr = new FILESQL ( outfilename . Value ( ) , O_WRONLY | O_CREAT | O_APPEND , use_sql_log )"		1322399	0		=			
ANR	1322546	Identifier	ptr		1322399	0					
ANR	1322547	Expression	"outfilename . Value ( ) , O_WRONLY | O_CREAT | O_APPEND , use_sql_log"		1322399	1					
ANR	1322548	CallExpression	outfilename . Value ( )		1322399	0					
ANR	1322549	Callee	outfilename . Value		1322399	0					
ANR	1322550	MemberAccess	outfilename . Value		1322399	0					
ANR	1322551	Identifier	outfilename		1322399	0					
ANR	1322552	Identifier	Value		1322399	1					
ANR	1322553	ArgumentList			1322399	1					
ANR	1322554	Expression	"O_WRONLY | O_CREAT | O_APPEND , use_sql_log"		1322399	1					
ANR	1322555	InclusiveOrExpression	O_WRONLY | O_CREAT | O_APPEND		1322399	0		|			
ANR	1322556	Identifier	O_WRONLY		1322399	0					
ANR	1322557	InclusiveOrExpression	O_CREAT | O_APPEND		1322399	1		|			
ANR	1322558	Identifier	O_CREAT		1322399	0					
ANR	1322559	Identifier	O_APPEND		1322399	1					
ANR	1322560	Identifier	use_sql_log		1322399	1					
ANR	1322561	IfStatement	if ( ptr -> file_open ( ) == QUILL_FAILURE )		1322399	12					
ANR	1322562	Condition	ptr -> file_open ( ) == QUILL_FAILURE	471:5:10645:10677	1322399	0	True				
ANR	1322563	EqualityExpression	ptr -> file_open ( ) == QUILL_FAILURE		1322399	0		==			
ANR	1322564	CallExpression	ptr -> file_open ( )		1322399	0					
ANR	1322565	Callee	ptr -> file_open		1322399	0					
ANR	1322566	PtrMemberAccess	ptr -> file_open		1322399	0					
ANR	1322567	Identifier	ptr		1322399	0					
ANR	1322568	Identifier	file_open		1322399	1					
ANR	1322569	ArgumentList			1322399	1					
ANR	1322570	Identifier	QUILL_FAILURE		1322399	1					
ANR	1322571	CompoundStatement		35:40:703:703	1322399	1					
ANR	1322572	ExpressionStatement	"dprintf ( D_ALWAYS , ""FILESQL createInstance failed\\n"" )"	472:2:10684:10736	1322399	0	True				
ANR	1322573	CallExpression	"dprintf ( D_ALWAYS , ""FILESQL createInstance failed\\n"" )"		1322399	0					
ANR	1322574	Callee	dprintf		1322399	0					
ANR	1322575	Identifier	dprintf		1322399	0					
ANR	1322576	ArgumentList	D_ALWAYS		1322399	1					
ANR	1322577	Argument	D_ALWAYS		1322399	0					
ANR	1322578	Identifier	D_ALWAYS		1322399	0					
ANR	1322579	Argument	"""FILESQL createInstance failed\\n"""		1322399	1					
ANR	1322580	PrimaryExpression	"""FILESQL createInstance failed\\n"""		1322399	0					
ANR	1322581	ReturnStatement	return ptr ;	475:1:10743:10753	1322399	13	True				
ANR	1322582	Identifier	ptr		1322399	0					
ANR	1322583	ReturnType	FILESQL *		1322399	1					
ANR	1322584	Identifier	FILESQL :: createInstance		1322399	2					
ANR	1322585	ParameterList	bool use_sql_log		1322399	3					
ANR	1322586	Parameter	bool use_sql_log	437:24:9958:9973	1322399	0	True				
ANR	1322587	ParameterType	bool		1322399	0					
ANR	1322588	Identifier	use_sql_log		1322399	1					
ANR	1322589	CFGEntryNode	ENTRY		1322399		True				
ANR	1322590	CFGExitNode	EXIT		1322399		True				
ANR	1322591	Symbol	malloc		1322399						
ANR	1322592	Symbol	NULL		1322399						
ANR	1322593	Symbol	get_mySubSystem ( ) -> getName		1322399						
ANR	1322594	Symbol	outfilename		1322399						
ANR	1322595	Symbol	* get_mySubSystem		1322399						
ANR	1322596	Symbol	daemon_name		1322399						
ANR	1322597	Symbol	O_CREAT		1322399						
ANR	1322598	Symbol	ptr -> file_open		1322399						
ANR	1322599	Symbol	tmpParamName		1322399						
ANR	1322600	Symbol	D_ALWAYS		1322399						
ANR	1322601	Symbol	use_sql_log		1322399						
ANR	1322602	Symbol	QUILL_FAILURE		1322399						
ANR	1322603	Symbol	O_APPEND		1322399						
ANR	1322604	Symbol	ptr		1322399						
ANR	1322605	Symbol	strlen		1322399						
ANR	1322606	Symbol	param		1322399						
ANR	1322607	Symbol	tmp		1322399						
ANR	1322608	Symbol	* ptr		1322399						
ANR	1322609	Symbol	outfilename . Value		1322399						
ANR	1322610	Symbol	O_WRONLY		1322399						
ANR	1322611	Symbol	get_mySubSystem		1322399						
ANR	1322612	Function	FILESQL :: daemonAdInsert	479:12:10771:11304							
ANR	1322613	FunctionDef	"FILESQL :: daemonAdInsert (ClassAd * cl , const char * adType , FILESQL * dbh , int & prevLHF)"		1322612	0					
ANR	1322614	CompoundStatement		485:0:10865:11304	1322612	0					
ANR	1322615	IdentifierDeclStatement	ClassAd clCopy ;	486:1:10868:10882	1322612	0	True				
ANR	1322616	IdentifierDecl	clCopy		1322612	0					
ANR	1322617	IdentifierDeclType	ClassAd		1322612	0					
ANR	1322618	Identifier	clCopy		1322612	1					
ANR	1322619	IdentifierDeclStatement	MyString tmp ;	487:1:10885:10897	1322612	1	True				
ANR	1322620	IdentifierDecl	tmp		1322612	0					
ANR	1322621	IdentifierDeclType	MyString		1322612	0					
ANR	1322622	Identifier	tmp		1322612	1					
ANR	1322623	ExpressionStatement	clCopy = * cl	490:1:10966:10978	1322612	2	True				
ANR	1322624	AssignmentExpression	clCopy = * cl		1322612	0		=			
ANR	1322625	Identifier	clCopy		1322612	0					
ANR	1322626	UnaryOperationExpression	* cl		1322612	1					
ANR	1322627	UnaryOperator	*		1322612	0					
ANR	1322628	Identifier	cl		1322612	1					
ANR	1322629	ExpressionStatement	"tmp . sprintf ( ""%s = %d"" , ""PrevLastReportedTime"" , prevLHF )"	492:1:10983:11038	1322612	3	True				
ANR	1322630	CallExpression	"tmp . sprintf ( ""%s = %d"" , ""PrevLastReportedTime"" , prevLHF )"		1322612	0					
ANR	1322631	Callee	tmp . sprintf		1322612	0					
ANR	1322632	MemberAccess	tmp . sprintf		1322612	0					
ANR	1322633	Identifier	tmp		1322612	0					
ANR	1322634	Identifier	sprintf		1322612	1					
ANR	1322635	ArgumentList	"""%s = %d"""		1322612	1					
ANR	1322636	Argument	"""%s = %d"""		1322612	0					
ANR	1322637	PrimaryExpression	"""%s = %d"""		1322612	0					
ANR	1322638	Argument	"""PrevLastReportedTime"""		1322612	1					
ANR	1322639	PrimaryExpression	"""PrevLastReportedTime"""		1322612	0					
ANR	1322640	Argument	prevLHF		1322612	2					
ANR	1322641	Identifier	prevLHF		1322612	0					
ANR	1322642	ExpressionStatement	( & clCopy ) -> Insert ( tmp . Value ( ) )	493:1:11041:11071	1322612	4	True				
ANR	1322643	CallExpression	( & clCopy ) -> Insert ( tmp . Value ( ) )		1322612	0					
ANR	1322644	Callee	( & clCopy ) -> Insert		1322612	0					
ANR	1322645	PtrMemberAccess	( & clCopy ) -> Insert		1322612	0					
ANR	1322646	UnaryOperationExpression	& clCopy		1322612	0					
ANR	1322647	UnaryOperator	&		1322612	0					
ANR	1322648	Identifier	clCopy		1322612	1					
ANR	1322649	Identifier	Insert		1322612	1					
ANR	1322650	ArgumentList	tmp . Value ( )		1322612	1					
ANR	1322651	Argument	tmp . Value ( )		1322612	0					
ANR	1322652	CallExpression	tmp . Value ( )		1322612	0					
ANR	1322653	Callee	tmp . Value		1322612	0					
ANR	1322654	MemberAccess	tmp . Value		1322612	0					
ANR	1322655	Identifier	tmp		1322612	0					
ANR	1322656	Identifier	Value		1322612	1					
ANR	1322657	ArgumentList			1322612	1					
ANR	1322658	ExpressionStatement	prevLHF = ( int ) time ( NULL )	496:1:11133:11158	1322612	5	True				
ANR	1322659	AssignmentExpression	prevLHF = ( int ) time ( NULL )		1322612	0		=			
ANR	1322660	Identifier	prevLHF		1322612	0					
ANR	1322661	CastExpression	( int ) time ( NULL )		1322612	1					
ANR	1322662	CastTarget	int		1322612	0					
ANR	1322663	CallExpression	time ( NULL )		1322612	1					
ANR	1322664	Callee	time		1322612	0					
ANR	1322665	Identifier	time		1322612	0					
ANR	1322666	ArgumentList	NULL		1322612	1					
ANR	1322667	Argument	NULL		1322612	0					
ANR	1322668	Identifier	NULL		1322612	0					
ANR	1322669	ExpressionStatement	"tmp . sprintf ( ""%s = %d"" , ""LastReportedTime"" , prevLHF )"	498:1:11162:11213	1322612	6	True				
ANR	1322670	CallExpression	"tmp . sprintf ( ""%s = %d"" , ""LastReportedTime"" , prevLHF )"		1322612	0					
ANR	1322671	Callee	tmp . sprintf		1322612	0					
ANR	1322672	MemberAccess	tmp . sprintf		1322612	0					
ANR	1322673	Identifier	tmp		1322612	0					
ANR	1322674	Identifier	sprintf		1322612	1					
ANR	1322675	ArgumentList	"""%s = %d"""		1322612	1					
ANR	1322676	Argument	"""%s = %d"""		1322612	0					
ANR	1322677	PrimaryExpression	"""%s = %d"""		1322612	0					
ANR	1322678	Argument	"""LastReportedTime"""		1322612	1					
ANR	1322679	PrimaryExpression	"""LastReportedTime"""		1322612	0					
ANR	1322680	Argument	prevLHF		1322612	2					
ANR	1322681	Identifier	prevLHF		1322612	0					
ANR	1322682	ExpressionStatement	( & clCopy ) -> Insert ( tmp . Value ( ) )	499:1:11216:11246	1322612	7	True				
ANR	1322683	CallExpression	( & clCopy ) -> Insert ( tmp . Value ( ) )		1322612	0					
ANR	1322684	Callee	( & clCopy ) -> Insert		1322612	0					
ANR	1322685	PtrMemberAccess	( & clCopy ) -> Insert		1322612	0					
ANR	1322686	UnaryOperationExpression	& clCopy		1322612	0					
ANR	1322687	UnaryOperator	&		1322612	0					
ANR	1322688	Identifier	clCopy		1322612	1					
ANR	1322689	Identifier	Insert		1322612	1					
ANR	1322690	ArgumentList	tmp . Value ( )		1322612	1					
ANR	1322691	Argument	tmp . Value ( )		1322612	0					
ANR	1322692	CallExpression	tmp . Value ( )		1322612	0					
ANR	1322693	Callee	tmp . Value		1322612	0					
ANR	1322694	MemberAccess	tmp . Value		1322612	0					
ANR	1322695	Identifier	tmp		1322612	0					
ANR	1322696	Identifier	Value		1322612	1					
ANR	1322697	ArgumentList			1322612	1					
ANR	1322698	ExpressionStatement	ASSERT ( dbh )	501:1:11250:11263	1322612	8	True				
ANR	1322699	CallExpression	ASSERT ( dbh )		1322612	0					
ANR	1322700	Callee	ASSERT		1322612	0					
ANR	1322701	Identifier	ASSERT		1322612	0					
ANR	1322702	ArgumentList	dbh		1322612	1					
ANR	1322703	Argument	dbh		1322612	0					
ANR	1322704	Identifier	dbh		1322612	0					
ANR	1322705	ExpressionStatement	"dbh -> file_newEvent ( adType , & clCopy )"	502:1:11266:11301	1322612	9	True				
ANR	1322706	CallExpression	"dbh -> file_newEvent ( adType , & clCopy )"		1322612	0					
ANR	1322707	Callee	dbh -> file_newEvent		1322612	0					
ANR	1322708	PtrMemberAccess	dbh -> file_newEvent		1322612	0					
ANR	1322709	Identifier	dbh		1322612	0					
ANR	1322710	Identifier	file_newEvent		1322612	1					
ANR	1322711	ArgumentList	adType		1322612	1					
ANR	1322712	Argument	adType		1322612	0					
ANR	1322713	Identifier	adType		1322612	0					
ANR	1322714	Argument	& clCopy		1322612	1					
ANR	1322715	UnaryOperationExpression	& clCopy		1322612	0					
ANR	1322716	UnaryOperator	&		1322612	0					
ANR	1322717	Identifier	clCopy		1322612	1					
ANR	1322718	ReturnType	void		1322612	1					
ANR	1322719	Identifier	FILESQL :: daemonAdInsert		1322612	2					
ANR	1322720	ParameterList	"ClassAd * cl , const char * adType , FILESQL * dbh , int & prevLHF"		1322612	3					
ANR	1322721	Parameter	ClassAd * cl	481:0:10802:10812	1322612	0	True				
ANR	1322722	ParameterType	ClassAd *		1322612	0					
ANR	1322723	Identifier	cl		1322612	1					
ANR	1322724	Parameter	const char * adType	482:0:10816:10833	1322612	1	True				
ANR	1322725	ParameterType	const char *		1322612	0					
ANR	1322726	Identifier	adType		1322612	1					
ANR	1322727	Parameter	FILESQL * dbh	483:0:10836:10847	1322612	2	True				
ANR	1322728	ParameterType	FILESQL *		1322612	0					
ANR	1322729	Identifier	dbh		1322612	1					
ANR	1322730	Parameter	int & prevLHF	484:0:10851:10862	1322612	3	True				
ANR	1322731	ParameterType	int &		1322612	0					
ANR	1322732	Identifier	prevLHF		1322612	1					
ANR	1322733	CFGEntryNode	ENTRY		1322612		True				
ANR	1322734	CFGExitNode	EXIT		1322612		True				
ANR	1322735	Symbol	adType		1322612						
ANR	1322736	Symbol	NULL		1322612						
ANR	1322737	Symbol	tmp		1322612						
ANR	1322738	Symbol	cl		1322612						
ANR	1322739	Symbol	tmp . Value		1322612						
ANR	1322740	Symbol	dbh		1322612						
ANR	1322741	Symbol	time		1322612						
ANR	1322742	Symbol	* cl		1322612						
ANR	1322743	Symbol	& clCopy		1322612						
ANR	1322744	Symbol	prevLHF		1322612						
ANR	1322745	Symbol	clCopy		1322612						
